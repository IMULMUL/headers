enum _TAG_UNNAMED_1;
enum _TAG_UNNAMED_2;
enum _TAG_UNNAMED_3;
enum _TAG_UNNAMED_4;
enum _TAG_UNNAMED_5;
enum _TAG_UNNAMED_6;
enum _TAG_UNNAMED_7;
enum _TAG_UNNAMED_8;
enum _TAG_UNNAMED_9;
enum _TAG_UNNAMED_10;
enum _TAG_UNNAMED_11;
struct <vc_attributes>::aggregatableAttribute;
enum <vc_attributes>::aggregatableAttribute::type_e;
struct <vc_attributes>::appobjectAttribute;
struct <vc_attributes>::async_uuidAttribute;
struct <vc_attributes>::atl::aggregatesAttribute;
struct <vc_attributes>::atl::com_interface_entryAttribute;
struct <vc_attributes>::atl::db_accessorAttribute;
struct <vc_attributes>::atl::db_columnAttribute;
struct <vc_attributes>::atl::db_commandAttribute;
struct <vc_attributes>::atl::db_paramAttribute;
struct <vc_attributes>::atl::db_sourceAttribute;
struct <vc_attributes>::atl::db_tableAttribute;
struct <vc_attributes>::atl::implements_categoryAttribute;
struct <vc_attributes>::atl::perf_counterAttribute;
struct <vc_attributes>::atl::perf_objectAttribute;
struct <vc_attributes>::atl::perfmonAttribute;
struct <vc_attributes>::atl::rdxAttribute;
struct <vc_attributes>::atl::registration_scriptAttribute;
struct <vc_attributes>::atl::request_handlerAttribute;
struct <vc_attributes>::atl::requires_categoryAttribute;
struct <vc_attributes>::atl::soap_handlerAttribute;
struct <vc_attributes>::atl::soap_headerAttribute;
struct <vc_attributes>::atl::soap_methodAttribute;
struct <vc_attributes>::atl::soap_namespaceAttribute;
struct <vc_attributes>::atl::support_error_infoAttribute;
struct <vc_attributes>::atl::synchronizeAttribute;
struct <vc_attributes>::atl::tag_nameAttribute;
struct <vc_attributes>::bindableAttribute;
struct <vc_attributes>::call_asAttribute;
struct <vc_attributes>::caseAttribute;
struct <vc_attributes>::coclassAttribute;
struct <vc_attributes>::controlAttribute;
struct <vc_attributes>::cpp_quoteAttribute;
struct <vc_attributes>::customAttribute;
struct <vc_attributes>::defaultAttribute;
struct <vc_attributes>::defaultbindAttribute;
struct <vc_attributes>::defaultcollelemAttribute;
struct <vc_attributes>::defaultvalueAttribute;
struct <vc_attributes>::defaultvtableAttribute;
struct <vc_attributes>::dispinterfaceAttribute;
struct <vc_attributes>::displaybindAttribute;
struct <vc_attributes>::dualAttribute;
struct <vc_attributes>::emitidlAttribute;
struct <vc_attributes>::entryAttribute;
struct <vc_attributes>::event_receiverAttribute;
enum <vc_attributes>::event_receiverAttribute::type_e;
struct <vc_attributes>::event_sourceAttribute;
enum <vc_attributes>::event_sourceAttribute::optimize_e;
enum <vc_attributes>::event_sourceAttribute::type_e;
struct <vc_attributes>::exportAttribute;
struct <vc_attributes>::first_isAttribute;
struct <vc_attributes>::helpcontextAttribute;
struct <vc_attributes>::helper_attributes::as_stringAttribute;
struct <vc_attributes>::helper_attributes::attributeAttribute;
struct <vc_attributes>::helper_attributes::default_valueAttribute;
struct <vc_attributes>::helper_attributes::help_stringAttribute;
struct <vc_attributes>::helper_attributes::multi_valueAttribute;
struct <vc_attributes>::helper_attributes::notify_atlprovAttribute;
struct <vc_attributes>::helper_attributes::process_earlyAttribute;
struct <vc_attributes>::helper_attributes::repeatableAttribute;
struct <vc_attributes>::helper_attributes::requires_valueAttribute;
struct <vc_attributes>::helper_attributes::source_annotation_attributeAttribute;
struct <vc_attributes>::helper_attributes::usageAttribute;
enum <vc_attributes>::helper_attributes::usageAttribute::usage_e;
struct <vc_attributes>::helper_attributes::v1_alttypeAttribute;
enum <vc_attributes>::helper_attributes::v1_alttypeAttribute::type_e;
struct <vc_attributes>::helper_attributes::v1_earlyAttribute;
struct <vc_attributes>::helper_attributes::v1_nameAttribute;
struct <vc_attributes>::helpfileAttribute;
struct <vc_attributes>::helpstringAttribute;
struct <vc_attributes>::helpstringcontextAttribute;
struct <vc_attributes>::helpstringdllAttribute;
struct <vc_attributes>::hiddenAttribute;
struct <vc_attributes>::hookAttribute;
struct <vc_attributes>::idAttribute;
struct <vc_attributes>::idl_moduleAttribute;
struct <vc_attributes>::idl_quoteAttribute;
struct <vc_attributes>::iid_isAttribute;
struct <vc_attributes>::immediatebindAttribute;
struct <vc_attributes>::implementsAttribute;
struct <vc_attributes>::importAttribute;
struct <vc_attributes>::importidlAttribute;
struct <vc_attributes>::importlibAttribute;
struct <vc_attributes>::inAttribute;
struct <vc_attributes>::includeAttribute;
struct <vc_attributes>::includelibAttribute;
struct <vc_attributes>::last_isAttribute;
struct <vc_attributes>::lcidAttribute;
struct <vc_attributes>::length_isAttribute;
struct <vc_attributes>::library_blockAttribute;
struct <vc_attributes>::licensedAttribute;
struct <vc_attributes>::localAttribute;
struct <vc_attributes>::max_isAttribute;
struct <vc_attributes>::moduleAttribute;
enum <vc_attributes>::moduleAttribute::type_e;
struct <vc_attributes>::ms_unionAttribute;
struct <vc_attributes>::no_injected_textAttribute;
struct <vc_attributes>::nonbrowsableAttribute;
struct <vc_attributes>::noncreatableAttribute;
struct <vc_attributes>::nonextensibleAttribute;
struct <vc_attributes>::objectAttribute;
struct <vc_attributes>::odlAttribute;
struct <vc_attributes>::oleautomationAttribute;
struct <vc_attributes>::optionalAttribute;
struct <vc_attributes>::outAttribute;
struct <vc_attributes>::pointer_defaultAttribute;
enum <vc_attributes>::pointer_defaultAttribute::type_e;
struct <vc_attributes>::pragmaAttribute;
struct <vc_attributes>::progidAttribute;
struct <vc_attributes>::propgetAttribute;
struct <vc_attributes>::propputAttribute;
struct <vc_attributes>::propputrefAttribute;
struct <vc_attributes>::providerAttribute;
struct <vc_attributes>::ptrAttribute;
struct <vc_attributes>::publicAttribute;
struct <vc_attributes>::rangeAttribute;
struct <vc_attributes>::readonlyAttribute;
struct <vc_attributes>::refAttribute;
struct <vc_attributes>::requesteditAttribute;
struct <vc_attributes>::restrictedAttribute;
struct <vc_attributes>::retvalAttribute;
struct <vc_attributes>::satypeAttribute;
struct <vc_attributes>::size_isAttribute;
struct <vc_attributes>::sourceAttribute;
struct <vc_attributes>::stringAttribute;
struct <vc_attributes>::switch_isAttribute;
struct <vc_attributes>::switch_typeAttribute;
struct <vc_attributes>::threadingAttribute;
enum <vc_attributes>::threadingAttribute::threading_e;
struct <vc_attributes>::transmit_asAttribute;
struct <vc_attributes>::uidefaultAttribute;
struct <vc_attributes>::unhookAttribute;
struct <vc_attributes>::uniqueAttribute;
struct <vc_attributes>::usesgetlasterrorAttribute;
struct <vc_attributes>::uuidAttribute;
struct <vc_attributes>::v1_enumAttribute;
struct <vc_attributes>::varargAttribute;
struct <vc_attributes>::versionAttribute;
struct <vc_attributes>::vi_progidAttribute;
struct <vc_attributes>::wire_marshalAttribute;
enum ACTCTX_REQUESTED_RUN_LEVEL;
struct ACTIVATION_PROPERTIES;
enum ACTIVATION_PROPERTIES::eFlags;
enum ADDRESS_MODE;
struct AENTRY;
struct ANON_OBJECT_HEADER;
struct ANON_OBJECT_HEADER_V2;
struct API_VERSION;
struct ARRAY_INFO;
enum ASSOCCLASS;
struct ASSOCIATIONELEMENT_;
struct A_SHA_CTX;
class ActivationProperties;
enum _TAG_UNNAMED_12;
class ActivationPropertiesIn;
class ActivationPropertiesOut;
class ActivationPropertiesOut::OutSerializer;
struct AllocateThrow;
class AllocationWrapper;
struct ApartmentEntry;
class AppRegistration;
struct AsyncIAdviseSink;
struct AsyncIAdviseSink2;
struct AsyncIAdviseSink2Vtbl;
struct AsyncIAdviseSinkVtbl;
struct AsyncIMultiQI;
struct AsyncIPipeByte;
struct AsyncIPipeDouble;
struct AsyncIPipeLong;
struct AsyncIRemUnknown;
struct AsyncIRemUnknown2;
struct AsyncIUnknown;
struct BATTERY_REPORTING_SCALE;
struct BITMAPV4HEADER;
struct BITMAPV5HEADER;
struct BSMINFO;
struct BSTR_INTERNAL;
class BUCL::CByteAllocator;
class BUCL::CConvertToSignedType<__int64>;
class BUCL::CConvertToSignedType<int>;
class BUCL::CConvertToSignedType<long>;
class BUCL::CConvertToSignedType<short>;
class BUCL::CConvertToSignedType<signed char>;
class BUCL::CConvertToSignedType<unsigned __int64>;
class BUCL::CConvertToSignedType<unsigned char>;
class BUCL::CConvertToSignedType<unsigned int>;
class BUCL::CConvertToSignedType<unsigned long>;
class BUCL::CConvertToSignedType<unsigned short>;
class BUCL::CConvertToUnsignedType<__int64>;
class BUCL::CConvertToUnsignedType<int>;
class BUCL::CConvertToUnsignedType<long>;
class BUCL::CConvertToUnsignedType<short>;
class BUCL::CConvertToUnsignedType<signed char>;
class BUCL::CConvertToUnsignedType<unsigned __int64>;
class BUCL::CConvertToUnsignedType<unsigned char>;
class BUCL::CConvertToUnsignedType<unsigned int>;
class BUCL::CConvertToUnsignedType<unsigned long>;
class BUCL::CConvertToUnsignedType<unsigned short>;
class BUCL::CDequeBase;
class BUCL::CDequeLinkage;
class BUCL::CIsSignedType<__int64>;
enum _TAG_UNNAMED_13;
class BUCL::CIsSignedType<int>;
enum _TAG_UNNAMED_14;
class BUCL::CIsSignedType<long>;
enum _TAG_UNNAMED_15;
class BUCL::CIsSignedType<short>;
enum _TAG_UNNAMED_16;
class BUCL::CIsSignedType<signed char>;
enum _TAG_UNNAMED_17;
class BUCL::CIsSignedType<unsigned __int64>;
enum _TAG_UNNAMED_18;
class BUCL::CIsSignedType<unsigned char>;
enum _TAG_UNNAMED_19;
class BUCL::CIsSignedType<unsigned int>;
enum _TAG_UNNAMED_20;
class BUCL::CIsSignedType<unsigned long>;
enum _TAG_UNNAMED_21;
class BUCL::CIsSignedType<unsigned short>;
enum _TAG_UNNAMED_22;
enum _TAG_UNNAMED_23;
class BUCL::CMultiplier<unsigned long,BUCL::Rtl::CCallDisposition>;
enum BUCL::DequeIteratorMovementDirection;
enum BUCL::HashTable::InsertOrUpdateIfPresentDisposition;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned char>;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned int>;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned long>;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned short>;
class BUCL::Rtl::CCallDisposition;
struct BULK_SECURITY_TEST_DATA;
class C2Security;
class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>;
class CALLFRAME_CACHE<TYPEINFOVTBL>;
class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>;
class CALLFRAME_CACHE_ENTRY<TYPEINFOVTBL>;
enum CALLFRAME_FREE;
enum CALLFRAME_NULL;
enum CALLFRAME_WALK;
class CAddrControl;
class CAddrExclusionList;
class CAggId;
class CAntiMoniker;
class CApartmentActivator;
class CApartmentHashTable;
class CAptCallCtrl;
class CAptRpcChnl;
class CArray<CCacheNode>;
struct CArray<CCacheNode>::ArrayNode;
class CArray<CFormatEtc>;
struct CArray<CFormatEtc>::ArrayNode;
class CArray<CStatData>;
struct CArray<CStatData>::ArrayNode;
class CArrayFValue;
class CAsyncCall;
class CAsyncConnection;
class CAsyncConnectionContainer;
class CAsyncStateMachine;
enum _TAG_UNNAMED_24;
class CAsyncUnknownMgr;
class CAsyncUnknownMgr::CPrivUnknown;
class CAtom;
class CAuthInfo;
class CBaseMoniker;
class CBaseStorageVariant;
class CBasedBytePtr;
class CBasedContextPtr;
class CBasedDFBasisPtr;
class CBasedDeltaBlockPtr;
class CBasedDeltaBlockPtrPtr;
class CBasedDeltaListPtr;
class CBasedDirectStreamPtr;
class CBasedDlElementPtr;
class CBasedDocFilePtr;
class CBasedFatPtr;
class CBasedFreeBlockPtr;
class CBasedGlobalContextPtr;
class CBasedGlobalFileStreamPtr;
class CBasedILockBytesPtrPtr;
class CBasedMSFPagePtr;
class CBasedMSFPagePtrPtr;
class CBasedMSFPageTablePtr;
class CBasedMStreamPtr;
class CBasedMappedStreamPtr;
class CBasedMarshalListPtr;
class CBasedPagedVectorPtr;
class CBasedPerContextPtr;
class CBasedPubDocFilePtr;
class CBasedPubStreamPtr;
class CBasedRevertablePtr;
class CBasedSStreamPtr;
class CBasedSeekPointerPtr;
class CBasedTSetMemberPtr;
class CBasedTransactedStreamPtr;
class CBasedUpdatePtr;
class CBasedVectBitsPtr;
class CBindCtx;
class CBindCtx::CObjList;
class CBindStatusCallback;
class CBlockHeader;
class CBlockPreHeader;
class CBool;
class CCOMSurrogate;
class CCache;
class CCacheNode;
class CCallTable;
class CChannelHandle;
class CChannelObject;
enum CChannelObject::eState;
class CChildInstanceList;
class CClass;
class CClassCache;
class CClassCache::CBaseClassEntry;
class CClassCache::CCEHashTable;
enum CClassCache::CCEHashTable::eFlags;
class CClassCache::CClassEntry;
enum CClassCache::CClassEntry::eFlags;
enum CClassCache::CClassEntry::eGUIDIndex;
class CClassCache::CCollectable;
class CClassCache::CDPEHashTable;
class CClassCache::CDllAptEntry;
class CClassCache::CDllClassEntry;
class CClassCache::CDllFnPtrMoniker;
class CClassCache::CDllPathEntry;
class CClassCache::CDllPathEntry::CFinishObject;
enum CClassCache::CDllPathEntry::eFlags;
class CClassCache::CFinishComposite;
struct CClassCache::CFinishComposite::node;
class CClassCache::CLSvrClassEntry;
class CClassCache::CLSvrClassEntry::CFinishObject;
enum CClassCache::CLSvrClassEntry::eFlags;
class CClassCache::CpUnkMoniker;
class CClassCache::IMiniMoniker;
struct CClassCache::ReleaseCatalogObjects::__l2::STmpCI;
struct CClassCache::SDPEHashKey;
enum CClassCache::eFlags;
class CClassMoniker;
class CClassMonikerFactory;
class CCliModalLoop;
class CCliRotHintTable;
class CClientCall;
class CClientCallMgr;
class CClientCallMgr::CPrivUnknown;
class CClientContextActivator;
class CClientSecurity;
class CClipDataObject;
class CCoTaskAllocator;
class CComActivator;
class CComApartment;
struct CComApartment::MessageListHead;
class CComCat;
class CComCat::CInnerUnk;
class CComCatalog;
class CComClassInfo;
class CComNoClassInfo;
class CComProcessInfo;
class CComRegCatalog;
class CComSxSCatalog;
class CComSxSClassInfo;
class CCompositeMoniker;
class CCompositeMonikerEnum;
struct CCompositeMonikerEnum::se;
class CConnectionPoint;
class CContext;
class CContextLife;
class CContextList;
class CContextPropList;
class CContextSwitcher;
class CContinue;
class CCtxCall;
class CCtxChnl;
class CCtxComChnl;
class CCtxConnectionManager;
class CCtxHook;
class CCtxPropHashTable;
class CCtxTable;
class CCtxUUIDHashTable;
class CDAHolder;
class CDDEServer;
enum CDFB_CLASSTYPE;
class CDFBasis;
class CDIFat;
class CDWORDHashTable;
class CData;
class CDataAdviseCache;
class CDbgGuidStr;
class CDdeConnectionTable;
class CDdeObject;
struct CDdeObject::CDataObjectImpl;
struct CDdeObject::COleItemContainerImpl;
struct CDdeObject::COleObjectImpl;
struct CDdeObject::CPersistStgImpl;
struct CDdeObject::CProxyManagerImpl;
struct CDdeObject::CRpcStubBufferImpl;
struct CDdeObject::CUnknownImpl;
class CDdeServerCallMgr;
class CDebugChannelHook;
class CDebugEventFire;
class CDebugEventFireCF;
class CDefClassFactory;
class CDefClient;
struct CDefClient::CAdviseSinkImpl;
struct CDefClient::COleClientSiteImpl;
struct CDefClient::CUnknownImpl;
class CDefLink;
enum _TAG_UNNAMED_25;
class CDefLink::CAdvSinkImpl;
class CDefLink::CPrivUnknown;
class CDefObject;
class CDefObject::CAdvSinkImpl;
class CDefObject::CPrivUnknown;
class CDelayUnlockContainer;
class CDeltaList;
class CDestObject;
class CDestObjectWrapper;
class CDfMutex;
class CDfName;
class CDfNameList;
class CDirEntry;
class CDirSect;
class CDirVector;
class CDirectStream;
class CDirectory;
class CDlElement;
class CDllHost;
class CDocFile;
class CDocfileStreamName;
class CDocfileUnmarshalFactory;
class CDragDataObject;
class CDragDefaultCursors;
enum CDragDefaultCursors::CURSOR_ID;
enum CDragDefaultCursors::SCROLL_TYPE;
class CDragOperation;
class CDropTarget;
class CDualStringArray;
class CDwordBag;
class CEMfObject;
class CEffPermsCacheLUID;
struct CEffPermsCacheLUID::tagCACHE_ENTRY;
class CEndPointAtom;
class CEndpointEntry;
class CEndpointsTable;
class CEnumCategories;
class CEnumCategoriesOfClass;
class CEnumClassesOfCategories;
class CEnumContextProps;
class CEnumFmt;
class CEnumFmt10;
class CEnumFormatEtc;
class CEnumFormatEtcDataArray;
class CEnumGeneric;
class CEnumHolder;
class CEnumSTATDATA;
class CEnumSTATPROPBAG;
class CEnumSTATPROPSETSTG;
class CEnumSTATPROPSTG;
class CEnumStatData;
class CEnumVerb;
class CErrorChannelHook;
class CErrorObject;
class CErrorSmAllocator;
class CEventCache;
class CEventSem;
class CException;
class CExceptionContext;
class CExceptionContext::StackElement;
class CExpParameterValidate;
class CExposedDocFile;
struct CExposedIterator;
class CExposedStream;
class CExtHashTable;
class CExtentList;
class CFAccessControl;
class CFILETIME;
class CFastBH;
class CFat;
class CFatSect;
class CFatVector;
class CFileMoniker;
enum CFileMoniker::olever;
class CFileMonikerFactory;
struct CFileStream;
class CFillLockBytes;
class CFmCtrlUnknown;
class CForcedDropTarget;
class CFormat;
class CFormatEtc;
class CFrameFilter;
class CFreeList;
class CFreeMarshaler;
class CGIPMessageParam;
class CGIPTable;
class CGenObject;
class CGenericObject;
class CGlobalContext;
class CGlobalFileStream;
class CGlobalOptions;
class CGlobalSecurity;
enum CHK;
class CHandle;
class CHashTable;
class CHeapHeader;
class CHlprDialog;
class CHwnd;
class CIDObject;
class CIPIDTable;
class CInprocSystemActivator;
class CInterfaceFromWindowProp;
class CInternalPageAllocator;
class CItemMoniker;
class CLUAMoniker;
class CLinkable;
class CListHeader;
class CLocalAlloc;
class CLocalMachineNames;
class CLock;
class CLock2;
class CMIDTable;
class CMIPIDHashTable;
class CMREInnerUnknown;
class CMSFHeader;
class CMSFHeaderData;
class CMSFPage;
class CMSFPageTable;
class CMStream;
struct CM_Power_Data_s;
class CMachineNamesHelper;
struct CMachineNamesHelper::_SBTOTAL;
struct CMachineNamesHelper::_UNIQUEADDRS;
struct CMalloc;
class CMallocBased;
class CManualResetEvent;
class CMapDwordDword;
class CMapDwordPtr;
class CMapKeyToValue;
struct CMapKeyToValue::CAssoc;
union CMapKeyToValue::CKeyWrap;
class CMapStringToPtr;
class CMapUintPtr;
class CMarshalImplPStream;
class CMarshalList;
class CMemBytes;
class CMemStm;
class CMessageCall;
class CMfObject;
class CMonikerBag;
class CMonikerFactory;
class CMonikerPtrBuf;
class CMultiGUIDHashTable;
class CMutexSem;
class CMutexSem2;
class CNFFMappedStream;
enum CNFFMappedStream::enumCREATE_NEW_UPDATE_STREAM;
class CNFFTreeMutex;
enum CNVTYP;
class CNameHashTable;
class CNdrStream;
class CNoEnum;
class CNtfsEnumSTATSTG;
class CNtfsSTATSTGArray;
class CNtfsStorage;
class CNtfsStorageForPropSetStg;
class CNtfsStream;
class CNtfsStreamName;
class CNtfsUpdateStreamForPropStg;
class CNtfsUpdateStreamName;
class CNullWalker;
class COAHolder;
class COAccessControl;
class COAccessControl::CImpAccessControl;
class COIDHashTable;
class COIDTable;
class COLEDragDropHelper;
enum COMPARTMENT_ID;
struct COM_CATALOG_CACHE_SECTION;
struct CONFIRMSAFETY;
struct CONFIRM_CONFLICT_ITEM;
class COXIDTable;
class CObjServer;
class CObjectContext;
class CObjrefMoniker;
class CObjrefMonikerFactory;
class COle32DebugEventFire;
class COleCache;
class COleCache::CAdviseSinkImpl;
class COleCache::CCacheDataImpl;
class COleCache::CCacheUnkImpl;
class COleCache::CCacheViewImpl;
enum COleCache::GetExtent::__l2::tagCacheType;
enum COleCache::Locate::__l2::tagFormatType;
class COleStaticLock;
class COleStaticMutexSem;
class COleTls;
class CPIDHashTable;
class CPIDTable;
class CPSHashTable;
class CPSTable;
class CPaccelEnum;
class CPackagerMoniker;
class CPageAllocator;
enum CPageAllocator::eFlags;
class CPagedVector;
class CPatternTbl;
class CPerContext;
class CPipePSFactory;
class CPipeProxy<double,&IID_IPipeDouble,&IID_AsyncIPipeDouble,IPipeDouble,AsyncIPipeDouble>;
class CPipeProxy<long,&IID_IPipeLong,&IID_AsyncIPipeLong,IPipeLong,AsyncIPipeLong>;
class CPipeProxy<unsigned char,&IID_IPipeByte,&IID_AsyncIPipeByte,IPipeByte,AsyncIPipeByte>;
class CPipeProxyImp;
struct CPlex;
class CPoint;
class CPointerHashTable;
class CPointerMoniker;
class CPolicySet;
class CPres;
class CPrivAlloc;
class CPrivDragDrop;
class CProcessActivator;
class CProcessExtensionTbl;
class CProcessPatternTbl;
class CProcessSecret;
class CPropSetName;
class CPropertyBagEx;
class CPropertySetStorage;
class CPropertySetStream;
class CPropertyStorage;
enum CPropertyStorage::EInitializePropertyStream;
enum CPropertyStorage::EIsWriteable;
class CPtrBlock;
class CPtrCache;
class CPubDocFile;
class CPubMappedStream;
class CPubStream;
class CPunkForRelease;
struct CREATE_USN_JOURNAL_DATA;
class CRGTypeSizes;
class CRIFTable;
class CROIDTable;
class CROTItem;
class CRWLock;
struct CRWLock::EventState;
union CRWLock::GetPoolEntry::__l2::EventStatePoolEntry;
struct CRWLock::LockState;
union CRWLock::ReleasePoolEntry::__l2::LockStatePoolEntry;
class CRandomNumberGenerator;
class CRefCache;
class CRefExportCount;
enum CRefExportCount::tagTokens;
class CRefMutexAutoLock;
class CRefMutexSem;
class CRefStabilize;
class CRefcountedObject;
class CRemoteUnknown;
class CRootPubDocFile;
class CRotHintTable;
class CRotMonikerEnum;
class CRpcCall;
class CRpcChannelBuffer;
class CRpcChannelBuffer::CServerCallMgr;
enum _TAG_UNNAMED_26;
class CRpcHelper;
class CRpcOptions;
class CRpcResolver;
class CRpcThread;
class CRpcThreadCache;
class CRtlSmartUcsEncoderTraits<_LUNICODE_STRING>;
class CRtlSmartUcsEncoderTraits<_LUTF8_STRING>;
class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUNICODE_STRING> >;
class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUTF8_STRING> >;
class CRunningObjectTable;
class CSCInnerUnknown;
class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>;
class CSCMergedEnum<IEnumGUID,_GUID>;
class CSSL;
class CSSMappedStream;
class CSTATPROPBAGArray;
class CSTInnerUnknown;
class CSafeAccess;
class CSafeBYTEArray;
class CSafeBindCtx;
class CSafeMarshaledStg;
class CSafeMoniker;
class CSafeMultiHeap;
class CSafeRefCount;
class CSafeSem;
class CSafeStgMarshaled;
class CScmPatternTbl;
class CSecurityDescriptor;
class CSeekPointer;
class CServerContextActivator;
class CServerSecurity;
class CSessionMoniker;
class CSharedMemHeader;
class CSharedMemoryBlock;
class CSimpEnumSTATSTG;
struct CSimpStorage;
class CSimpStorageOpen;
struct CSimpStream;
class CSimpStreamOpen;
class CSinkList;
class CSmAllocator;
class CSplit_QI;
class CSpyTable;
class CSrvCallState;
class CStabilize;
class CStackBuffer;
class CStackWalker;
class CStackWalkerStack;
class CStackWalkerSymbol;
class CStatArray;
class CStatData;
class CStaticWrapper;
class CStaticWriteLock;
class CStdClassFactory;
class CStdEvent;
class CStdIdentity;
class CStdIdentity::CInternalUnk;
class CStdMarshal;
struct CStdMarshal::Deactivate::__l3::tagServerRefs;
struct CStdMarshal::DiscSinkNode;
struct CStdMarshal::DisconnectCliIPIDs::__l6::_IPIDReleaseSet;
struct CStdMarshal::Reactivate::__l3::tagServerRefs;
class CStdWrapper;
struct CStdWrapper::Deactivate::__l3::tagServerRefs;
struct CStdWrapper::Reactivate::__l3::tagServerRefs;
class CStgHandle;
class CStmBuf;
class CStmBufRead;
class CStmBufWrite;
class CStmHandle;
class CStreamCache;
struct CStreamChunk;
class CStreamChunkList;
class CStreamOnMessage;
class CStringHashTable;
class CSurrogateActivator;
class CSurrogateProcessActivator;
enum _TAG_UNNAMED_27;
class CSurrogatedObjectList;
class CSynchronizeContainer;
class CSystemException;
class CTSSet;
class CThreadCheck;
class CThreadStack;
class CTmpMkEqBuf;
class CTrackingCompositeMoniker;
class CTrackingFileMoniker;
class CTransactedStream;
class CTransactedTimeEntry;
class CTry;
class CUUIDHashTable;
class CUnwindable;
class CUpdate;
class CUpdateList;
class CUrlMonWrapper;
class CUserMarshalInfo;
struct CVectBits;
class CVerifierStackData;
struct CVerifierStackData::tagNode;
class CVerifierTlsData;
class CVirtualUnwindable;
class CWorldSecurityDescriptor;
class CWrappedDocFile;
class CallFrame;
enum _TAG_UNNAMED_28;
class CarefulBufferReader;
struct ClassMonikerData;
class ClassRegistration;
enum ClassRegistration::SERVER_TYPE;
struct CleanupStack;
struct CleanupStack::Block;
struct CleanupStack::memory_to_free;
class CoAllocator;
class ComPsClassFactory;
class ComVerifierSettings;
struct CompObjHdr;
class CompObjStmData;
class ContextInfo;
class CpUnkList;
enum CreateStackTraceFlags;
class CsCatInfo;
class CtxEntry;
enum DCOM_ENDPOINT_FLAGS;
struct DDEADVISE;
struct DDEDATA;
struct DDEPOKE;
class DDE_CHANNEL;
enum DDE_DISPATCH_FUNC;
enum DECOLOR;
struct DELETE_USN_JOURNAL_DATA;
enum DIRENTRYOP;
struct DISABLED_FEATURES;
struct DISPATCH_CLIENT_FRAME;
struct DISPATCH_FRAME;
struct DISPATCH_INTERCEPTOR;
struct DISPATCH_SERVER_FRAME;
struct DLGITEMTEMPLATE;
struct DLGTEMPLATE;
struct DLL_INSTANTIATION_PROPERTIES;
enum DLL_INSTANTIATION_PROPERTIES::eFlags;
struct DVTDINFO;
struct DedicatedAllocator<CallFrame>;
struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>;
struct DedicatedAllocator<DISPATCH_SERVER_FRAME>;
class DefaultIBindStatusCallback;
struct DelayLoadInfo;
struct DelayLoadProc;
class DeserializeHelper;
class DeserializeHelper::BstrDestroyer;
class DeserializeHelper::SafeArrayDestroyer;
enum EChannelState;
struct EFFICIENTOSVERSIONINFOEXW;
enum EHandleState;
struct ENTRY;
enum EServerSecurity;
enum ESignalState;
class EVENT;
struct EXECUTEACK;
class Enum;
class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
struct EnumVerbCache;
struct ErrorObjectData;
class EventPoolEntry;
union EventPoolEntry::InitState;
enum EventPoolEntry::WaitForWriterEvent::__l2::AnyAbsorbtionState;
enum ExtentKeys;
struct FILE_ID_DESCRIPTOR;
struct FIND_BY_SID_DATA;
struct FIND_BY_SID_OUTPUT;
struct FLASHWINFO;
struct FMT;
struct FMTCACHE;
struct FORMATETCDATA;
struct FORMATETCDATA64;
struct FORMATETCDATAARRAY;
struct FORMATETCDATAARRAY64;
enum FORMATTAG;
enum FORMAT_CHARACTER;
struct FRAME_GetIDsOfNames;
struct FRAME_GetTypeInfo;
struct FRAME_GetTypeInfoCount;
struct FRAME_Invoke;
struct FRAME_RemoteInvoke;
union FT;
enum FormatMatchFlag;
enum FreeResourcesFlags;
class GenericInstantiator<DISPATCH_INTERCEPTOR>;
class GenericStream;
struct HACCEL__;
struct HAS_INTERFACES;
struct HBITMAP__;
struct HBRUSH__;
struct HCOLORSPACE__;
struct HCONVLIST__;
struct HCONV__;
struct HDC__;
struct HDDEDATA__;
struct HDESK__;
struct HDROP__;
struct HENHMETAFILE__;
struct HFONT__;
struct HGLRC__;
struct HHOOK__;
struct HICON__;
struct HIMCC__;
struct HIMC__;
struct HINSTANCE__;
struct HKEY__;
struct HKL__;
struct HMACSHA_CTX;
struct HMAPKEY__;
struct HMENU__;
struct HMETAFILE__;
struct HMONITOR__;
struct HPALETTE__;
struct HPEN__;
struct HRAWINPUT__;
struct HREG;
struct HRGN__;
struct HRSRC__;
struct HSPRITE__;
struct HSTR__;
struct HSZ__;
struct HTASK__;
struct HUMPD__;
struct HWINEVENTHOOK__;
struct HWINSTA__;
struct HWND__;
class HashGUID;
class HashInt;
class HashVoidPtr;
class HashWSTR;
struct IAbandonmentNotification;
struct IAccessControl;
struct IActivationContextInfo;
struct IActivationPropOutClean;
struct IActivationProperties;
struct IActivationPropertiesIn;
struct IActivationPropertiesOut;
struct IActivationSecurityInfo;
struct IActivationStageInfo;
struct IAddrExclusionControl;
struct IAddrTrackingControl;
struct IAdviseSink;
struct IAdviseSink2;
struct IAdviseSink2Vtbl;
struct IAdviseSinkEx;
struct IAdviseSinkVtbl;
struct IAggregator;
struct IAsyncManager;
struct IAsyncRpcChannelBuffer;
struct IAuthenticate;
struct IBindCtx;
struct IBindCtxVtbl;
struct IBindHost;
struct IBindProtocol;
struct IBindStatusCallback;
struct IBinding;
struct IBlockingLock;
struct IBuffer;
struct ICacheControl;
struct ICacheRefresh;
struct ICall;
struct ICallFactory;
struct ICallFactoryVtbl;
struct ICallFrame;
struct ICallFrameEvents;
struct ICallFrameInit;
struct ICallFrameWalker;
struct ICallIndirect;
struct ICallInfo;
struct ICallInterceptor;
struct ICallUnmarshal;
struct ICancelMethodCalls;
struct ICatInformation;
struct ICatRegister;
struct ICatalogFileInfo;
struct IChannelHook;
struct IClassActivator;
struct IClassClassicInfo;
struct IClassClassicInfo2;
struct IClassClassicInfo3;
struct IClassFactory;
struct IClassFactory2;
struct IClassFactoryVtbl;
struct IClientSecurity;
struct ICodeInstall;
struct IComCatalog;
struct IComCatalog2;
struct IComCatalog2Internal;
struct IComCatalogInternal;
struct IComCatalogLocation;
struct IComCatalogSCM;
struct IComCatalogSettings;
struct IComClassInfo;
struct IComClassInfo2;
struct IComDispatchInfo;
struct IComObjIdentity;
struct IComProcessInfo;
struct IComProcessInfo2;
struct IComProcessInfo3;
struct IComServices;
struct IComServices2;
struct IComSxSClassInfo;
struct IComThreadingInfo;
struct IConnectionPoint;
struct IConnectionPointContainer;
struct IConnectionPointContainerVtbl;
struct IConnectionPointVtbl;
struct IContext;
struct IContextCallback;
struct IContextMarshaler;
struct IContinue;
struct IContinueVtbl;
struct ICreateErrorInfo;
struct ICreateTypeInfo;
struct ICreateTypeInfo2;
struct ICreateTypeLib;
struct ICreateTypeLib2;
struct IDLLHost;
struct IDataAdviseHolder;
struct IDataFilter;
struct IDataObject;
struct IDataObjectVtbl;
struct IDebug;
struct IDebugStream;
struct IDestInfo;
struct IDirectWriterLock;
struct IDisconnectSink;
struct IDispatch;
struct IDispatchVtbl;
struct IDocfileAsyncConnectionPoint;
struct IDragDropHelper;
struct IDropSource;
struct IDropSourceNotify;
struct IDropSourceQueryEx;
struct IDropTarget;
struct IDummyHICONIncluder;
struct IEncodingFilterFactory;
struct IEnumCATEGORYINFO;
struct IEnumCallback;
struct IEnumConnectionPoints;
struct IEnumConnectionPointsVtbl;
struct IEnumConnections;
struct IEnumConnectionsVtbl;
struct IEnumContextProps;
struct IEnumFORMATETC;
struct IEnumFORMATETCVtbl;
struct IEnumGUID;
struct IEnumGeneric;
struct IEnumHolder;
struct IEnumMoniker;
struct IEnumMonikerVtbl;
struct IEnumOLEVERB;
struct IEnumOLEVERBVtbl;
struct IEnumOleUndoUnits;
struct IEnumSCMProcessInfo;
struct IEnumSTATDATA;
struct IEnumSTATDATAVtbl;
struct IEnumSTATPROPBAG;
struct IEnumSTATPROPSETSTG;
struct IEnumSTATPROPSETSTGVtbl;
struct IEnumSTATPROPSTG;
struct IEnumSTATPROPSTGVtbl;
struct IEnumSTATSTG;
struct IEnumSTATSTGVtbl;
struct IEnumString;
struct IEnumStringVtbl;
struct IEnumUnknown;
struct IEnumUnknownVtbl;
struct IEnumVARIANT;
struct IErrorInfo;
struct IErrorLog;
struct IExceptionNotification;
struct IExternalConnection;
class IFaceEntry;
struct IFastStack<CallFrame>;
struct IFastStack<DISPATCH_CLIENT_FRAME>;
struct IFastStack<DISPATCH_SERVER_FRAME>;
struct IFileLockBytes;
struct IFillInfo;
struct IFillLockBytes;
struct IFillLockBytesVtbl;
class IFinish;
struct IFont;
struct IFontDisp;
struct IFontEventsDisp;
struct IForegroundTransfer;
struct IGetCatalogObject;
struct IGetContextId;
struct IGlobalInterfaceTable;
struct IGlobalOptions;
struct IHookOleObject;
struct IHttpNegotiate;
struct IHttpNegotiate2;
struct IHttpSecurity;
struct IImageList;
struct IInitActivationPropertiesIn;
struct IInitializeSpy;
struct IInstanceInfo;
struct IInstantiationInfo;
struct IInterceptorBase;
struct IInterfaceFromWindowProp;
struct IInterfaceInfo;
struct IInterfaceRelated;
class IInternalChannelBuffer;
struct IInternalUnknown;
struct IInternet;
struct IInternetBindInfo;
struct IInternetHostSecurityManager;
struct IInternetPriority;
struct IInternetProtocol;
struct IInternetProtocolEx;
struct IInternetProtocolInfo;
struct IInternetProtocolRoot;
struct IInternetProtocolSink;
struct IInternetProtocolSinkStackable;
struct IInternetSecurityManager;
struct IInternetSecurityManagerEx;
struct IInternetSecurityManagerEx2;
struct IInternetSecurityMgrSite;
struct IInternetSession;
struct IInternetThreadSwitch;
struct IInternetZoneManager;
struct IInternetZoneManagerEx;
struct IInternetZoneManagerEx2;
struct ILayoutStorage;
struct ILegacyInfo;
struct ILocalMachineNames;
struct ILocalSystemActivator;
struct ILockBytes;
struct ILockBytesVtbl;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
enum IMAGE_AUX_SYMBOL_TYPE;
struct IMAGE_COR20_HEADER;
struct IMAGE_LOAD_CONFIG_DIRECTORY32;
struct IMAGE_LOAD_CONFIG_DIRECTORY64;
struct IMPORT_OBJECT_HEADER;
enum IMPORT_OBJECT_NAME_TYPE;
enum IMPORT_OBJECT_TYPE;
struct IMalloc;
struct IMallocSpy;
struct IMallocVtbl;
class IMappedStream;
struct IMarshal;
struct IMarshal2;
struct IMarshalEnvoy;
struct IMarshalOptions;
struct IMarshalSomeone;
struct IMarshallingManager;
struct IMessageFilter;
class IMessageParam;
struct IMoniker;
struct IMonikerProp;
struct IMonikerVtbl;
struct IMultiQI;
struct INFO;
struct INTERFACE_HELPER_CLSID;
struct INTERPRETER_FLAGS;
struct INTERPRETER_OPT_FLAGS;
struct INTERPRETER_OPT_FLAGS2;
struct INdrVersion;
struct IObjContext;
struct IObjectActivator;
struct IObjectWithSite;
struct IOleAdviseHolder;
struct IOleCache;
struct IOleCache2;
struct IOleCache2Vtbl;
struct IOleCacheControl;
struct IOleClientSite;
struct IOleContainer;
struct IOleControl;
struct IOleControlSite;
struct IOleInPlaceActiveObject;
struct IOleInPlaceActiveObjectVtbl;
struct IOleInPlaceFrame;
struct IOleInPlaceObject;
struct IOleInPlaceObjectWindowless;
struct IOleInPlaceSite;
struct IOleInPlaceSiteEx;
struct IOleInPlaceSiteWindowless;
struct IOleInPlaceUIWindow;
struct IOleInPlaceUIWindowVtbl;
struct IOleItemContainer;
struct IOleLink;
struct IOleObject;
struct IOlePackagerLinkNotify;
struct IOleParentUndoUnit;
struct IOlePresObj;
struct IOleUndoManager;
struct IOleUndoUnit;
struct IOleWindow;
struct IOpaqueDataInfo;
struct IOplockStorage;
struct IOrpcDebugNotify;
struct IOrpcDebugNotifyVtbl;
struct IOverrideTargetContext;
struct IPAControl;
struct IPSFactoryBuffer;
struct IPSFactoryBufferVtbl;
struct IParseDisplayName;
struct IPartitionLookup;
struct IPartitionProperty;
struct IPerPropertyBrowsing;
struct IPersist;
struct IPersistFile;
struct IPersistMemory;
struct IPersistMoniker;
struct IPersistPropertyBag;
struct IPersistPropertyBag2;
struct IPersistStorage;
struct IPersistStream;
struct IPersistStreamInit;
struct IPicture;
struct IPicture2;
struct IPictureDisp;
struct IPipeByte;
struct IPipeDouble;
struct IPipeLong;
struct IPointerInactive;
struct IPolicy;
struct IPolicyAsync;
struct IPolicyMaker;
struct IPolicySet;
struct IPrivActivationContextInfo;
struct IPrivActivationPropertiesIn;
struct IPrivActivationPropertiesOut;
struct IPrivDragDrop;
struct IProcessInitControl;
struct IProcessLock;
struct IProcessServerInfo;
struct IProgressNotify;
struct IPropertyBag;
struct IPropertyBag2;
struct IPropertyBagEx;
struct IPropertyNotifySink;
struct IPropertyPage;
struct IPropertyPage2;
struct IPropertyPageSite;
struct IPropertySetStorage;
struct IPropertyStorage;
struct IProvideClassInfo;
struct IProvideClassInfo2;
struct IProvideMultipleClassInfo;
struct IProxyManager;
struct IQuickActivate;
struct IRCEntry;
struct IROTData;
struct IRecordInfo;
struct IRecordInfoVtbl;
struct IReleaseMarshalBuffers;
struct IRemUnknown;
struct IRemUnknown2;
struct IRemUnknownN;
struct IReplaceClassInfo;
struct IResourceGates;
struct IRootStorage;
struct IRpcCall;
struct IRpcChannelBuffer;
struct IRpcChannelBuffer2;
struct IRpcChannelBuffer3;
struct IRpcChannelBufferVtbl;
struct IRpcHelper;
struct IRpcOptions;
struct IRpcProxyBuffer;
struct IRpcProxyBufferVtbl;
struct IRpcStubBuffer;
struct IRpcStubBufferVtbl;
struct IRpcSyntaxNegotiate;
struct IRundown;
struct IRunnableObject;
struct IRunnableObjectVtbl;
struct IRunningObjectTable;
struct IRunningObjectTableVtbl;
struct ISCMLocalActivator;
struct ISCMProcessControl;
struct IScmReplyInfo;
struct IScmRequestInfo;
struct ISecurityOptions;
struct ISequentialStream;
struct ISequentialStreamVtbl;
struct ISerializable;
struct ISerializableParent;
struct IServerLocationInfo;
struct IServerSecurity;
struct IServiceProvider;
struct IServicesSink;
struct IServicesSink2;
struct IShellItem;
struct IShellItem2;
struct IShellLinkW;
struct ISimpleFrameSite;
struct ISoftDistExt;
struct ISpecialSystemProperties;
struct ISpecifyPropertyPages;
struct IStackWalker;
struct IStackWalkerStack;
struct IStackWalkerSymbol;
struct IStandardActivator;
struct IStdMarshalInfo;
struct IStorage;
struct IStorageReplica;
struct IStorageVtbl;
struct IStream;
struct IStreamVtbl;
struct ISupportErrorInfo;
struct ISurrogate;
struct ISurrogateService;
struct ISynchronize;
struct ISynchronizeContainer;
struct ISynchronizeEvent;
struct ISynchronizeHandle;
struct ISynchronizeMutex;
struct ISystemActivator;
struct ISystemDebugEventFire;
struct ISystemDebugEventShutdown;
struct IThumbnailExtractor;
struct IThunkManager;
struct ITimeAndNoticeControl;
class ITrackingMoniker;
struct ITypeChangeEvents;
struct ITypeComp;
struct ITypeCompVtbl;
struct ITypeFactory;
struct ITypeInfo;
struct ITypeInfo2;
struct ITypeInfoVtbl;
struct ITypeLib;
struct ITypeLib2;
struct ITypeLibVtbl;
struct ITypeMarshal;
struct IUnkInner;
struct IUnknown;
struct IUnknownVtbl;
struct IUri;
struct IUriBuilder;
struct IUriBuilderFactory;
struct IUriContainer;
struct IUrlMon;
struct IUserToken;
struct IUserTokenWithImpersonate;
struct IViewObject;
struct IViewObject2;
struct IViewObjectEx;
struct IViewObjectVtbl;
struct IWaitMultiple;
struct IWinInetCacheHints;
struct IWinInetCacheHints2;
struct IWinInetFileStream;
struct IWinInetHttpInfo;
struct IWinInetInfo;
struct IWindowForBindingUI;
struct IWrappedProtocol;
struct IWrapperInfo;
struct IXMLAttribute;
struct IXMLDOMAttribute;
struct IXMLDOMCDATASection;
struct IXMLDOMCharacterData;
struct IXMLDOMComment;
struct IXMLDOMDocument;
struct IXMLDOMDocumentFragment;
struct IXMLDOMDocumentType;
struct IXMLDOMElement;
struct IXMLDOMEntity;
struct IXMLDOMEntityReference;
struct IXMLDOMImplementation;
struct IXMLDOMNamedNodeMap;
struct IXMLDOMNode;
struct IXMLDOMNodeList;
struct IXMLDOMNotation;
struct IXMLDOMParseError;
struct IXMLDOMProcessingInstruction;
struct IXMLDOMText;
struct IXMLDSOControl;
struct IXMLDocument;
struct IXMLDocument2;
struct IXMLElement;
struct IXMLElement2;
struct IXMLElementCollection;
struct IXMLError;
struct IXMLHttpRequest;
struct IXTLRuntime;
struct IZoneIdentifier;
struct ImgDelayDescrV2;
class InprocActpropsUnmarshaller;
class InstanceInfo;
class InstantiationInfo;
class Interceptor;
struct InterfaceWalkerFree;
struct InterlockedStack<CallFrame>;
struct InterlockedStack<DISPATCH_CLIENT_FRAME>;
struct InterlockedStack<DISPATCH_SERVER_FRAME>;
struct InterlockedStackIndirect<CallFrame>;
struct InterlockedStackIndirect<DISPATCH_CLIENT_FRAME>;
struct InterlockedStackIndirect<DISPATCH_SERVER_FRAME>;
struct KEY_PID_ARRAY;
enum LATENCY_TIME;
struct LEGACY_FRAME;
struct LEGACY_INTERCEPTOR;
struct LIST_ENTRY32;
struct LIST_ENTRY64;
enum LSA_FOREST_TRUST_RECORD_TYPE;
struct LocalThis;
struct LockCookie;
class LockEntry;
enum MACPICTFAILUREREASONS;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;
class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>;
class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>::iterator;
enum MAPPED_STREAM_OPTS;
struct MAP_HASHER<MAP_KEY_GUID>;
class MAP_KEY_GUID;
struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>;
struct MAP_SHARED<MAP_KEY_GUID,TYPEINFOVTBL *>;
struct MARK_HANDLE_INFO;
enum MCA_EXCEPTION_TYPE;
struct MD_INTERFACE;
struct MD_INTERFACE_CACHE;
struct MD_METHOD;
struct MD_PARAM;
struct MEMSTM;
struct MENUITEMTEMPLATE;
struct MENUITEMTEMPLATEHEADER;
struct METHOD_DESCRIPTOR;
struct MFT_ENUM_DATA;
class MIDEntry;
enum MIDL_ES_CODE;
enum MIDL_ES_HANDLE_STYLE;
struct MINIDUMP_EXCEPTION_STREAM;
struct MIPID;
struct MOVE_FILE_DATA;
struct MOVE_FILE_RECORD_DATA;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class MapEnumToSQMData<enum Ole32SQMFlags>;
enum _TAG_UNNAMED_29;
class MapEnumToSQMData<enum RpcssSQMFlags>;
enum _TAG_UNNAMED_30;
struct MarshalParams;
struct MarshallingChannel;
enum NCIFLAGS;
struct NCryptKeyName;
struct NCryptProviderName;
struct NDR_ALLOC_ALL_NODES_CONTEXT;
struct NDR_POINTER_QUEUE_STATE;
struct NDR_PROC_HEADER_EXTS;
struct NET_ADDRESS_INFO_;
struct NOTIFY_USER_POWER_SETTING;
struct NTFS_EXTENDED_VOLUME_DATA;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
struct NTFS_VOLUME_DATA_BUFFER;
struct NUMPARSE;
struct NdrStringHeader;
struct NdrStringPtrHeader;
class NuSafeNtHandle;
struct OAUTIL;
struct OLEAUTOMATION_FUNCTIONS;
enum _TAG_UNNAMED_31;
struct OLEAUTOMATION_FUNCTIONS::IsEqualPfn::__l11::THUNK;
enum OLE_NOTIFICATION;
enum OLE_TRISTATE;
class OPAQUE_HANDLE<1>;
struct ORPC_DBG_ALL;
struct ORPC_INIT_ARGS;
class OXIDEntry;
struct ObjectSplayNode;
enum OfflineFolderStatus;
enum Ole32SQMFlags;
class OleThunkWOW;
class OpaqueDataInfo;
struct PARAM_ATTRIBUTES;
struct PARAM_DESCRIPTION;
enum PATH_TYPE;
class PBasicEntry;
class PDeSerStream;
class PDocFile;
struct PICTINFO;
enum PIDMSI_STATUS_VALUE;
enum PIPE_ATTRIBUTE_TYPE;
class PMSIHANDLE;
class PMemoryAllocator;
struct POSTRELRIFREF;
struct POWERBROADCAST_SETTING;
enum POWER_ACTION;
struct POWER_ACTION_POLICY;
enum POWER_INFORMATION_LEVEL;
enum POWER_PLATFORM_ROLE;
struct POWER_STATE_HANDLER;
enum POWER_STATE_HANDLER_TYPE;
struct POWER_STATE_NOTIFY_HANDLER;
enum PO_FIXED_WAKE_SOURCE_TYPE;
enum PO_WAKE_SOURCE_TYPE;
struct PPM_IDLESTATE_EVENT;
struct PPM_IDLE_ACCOUNTING;
struct PPM_IDLE_STATE_ACCOUNTING;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct PPM_PERFSTATE_EVENT;
struct PPM_SIMULATED_PROCESSOR_LOAD;
struct PPM_THERMALCHANGE_EVENT;
struct PPM_THERMAL_POLICY_EVENT;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES;
struct PPM_WMI_LEGACY_PERFSTATE;
struct PPM_WMI_PERF_STATE;
struct PPM_WMI_PERF_STATES;
struct PROCESSOR_IDLESTATE_INFO;
struct PROCESSOR_IDLESTATE_POLICY;
struct PROCESSOR_IDLE_TIMES;
struct PROCESSOR_PERFSTATE_POLICY;
struct PROCESSOR_PERF_STATE;
struct PROCESSOR_PERF_STATES;
enum PROXY_PHASE;
class PRevertable;
class PSStream;
enum PS_CREATE_STATE;
class PSerStream;
class PTSetMember;
class PTimeEntry;
enum PULLSTATE;
enum PUSHSTATE;
enum QUERY_USER_NOTIFICATION_STATE;
struct READ_USN_JOURNAL_DATA;
struct REF_COUNTED_STRUCT;
struct RETRIEVAL_POINTERS_BUFFER;
enum RPC_ADDRESS_CHANGE_TYPE;
struct RPC_CLIENT_INFORMATION1;
struct RPC_DISPATCH_TABLE;
struct RPC_IF_ID_VECTOR;
struct RPC_IMPORT_CONTEXT_P;
struct RPC_STATS_VECTOR;
struct RTL_ACE_DATA;
enum RTL_BSD_ITEM_TYPE;
struct RTL_FILTER_LUNICODE_STRING_CTX;
struct RTL_FILTER_LUNICODE_STRING_FILTER;
struct RegistryKeyValue;
enum ReplacesCorHdrNumericDefines;
struct ReportedExceptions;
enum RpcProxyPerfCounters;
struct SAFEARRAY_INTERNAL;
struct SAccessCache;
struct SBlanket;
struct SC_HANDLE__;
struct SCacheEntry;
struct SChannelHookCallInfo;
struct SCopyVars;
struct SDDInfo;
struct SDWORDHashNode;
struct SDeltaBlock;
struct SDfMarshalPacket;
class SEMAPHORE;
enum SEMRESULT;
enum SEMSTATE;
struct SERVICE_STATUS_HANDLE__;
struct SET_POWER_SETTING_VALUE;
struct SEntryBuffer;
struct SExtHashNode;
struct SFreeBlock;
struct SGetFreeStruct;
struct SHA256_CTX;
struct SHA512_CTX;
struct SHELLHOOKINFO;
enum SHSTOCKICONID;
struct SHashChain;
struct SHookList;
struct SIP_DISPATCH_INFO_;
struct SIP_INDIRECT_DATA_;
struct SIP_SUBJECTINFO_;
struct SIterBuffer;
struct SMIPIDHashNode;
struct SMultiGUIDHashNode;
struct SMultiGUIDKey;
struct SNameHashNode;
struct SNameKey;
struct SOIDRegistration;
struct SPC_LINK_;
struct SPC_SIGINFO_;
struct SPatternEntry;
struct SPendingCall;
struct SPermissionHeader;
struct SPointerHashNode;
struct SPreDirEntry;
struct SPreHeader;
enum SQM_TYPE;
struct SSegment;
struct SSimpleWalker;
struct SStorageFile;
struct SStringHashNode;
struct STARTING_LCN_INPUT_BUFFER;
struct STARTING_VCN_INPUT_BUFFER;
enum STUB_PHASE;
struct STblHdr;
struct STwoBits;
struct SUUIDHashNode;
struct SYMSRV_INDEX_INFO;
struct SYMSRV_INDEX_INFOW;
enum SYM_TYPE;
enum SYNCMGR_CANCEL_REQUEST;
enum SYNCMGR_CONFLICT_ITEM_TYPE;
enum SYNCMGR_EVENT_LEVEL;
enum SYNCMGR_HANDLER_POLICIES;
enum SYNCMGR_HANDLER_TYPE;
enum SYNCMGR_PRESENTER_CHOICE;
enum SYNCMGR_PRESENTER_NEXT_STEP;
enum SYNCMGR_PROGRESS_STATUS;
enum SYNCMGR_RESOLUTION_FEEDBACK;
enum SYNCMGR_UPDATE_REASON;
struct SYNTHESIZED_MAP;
enum SYSGEOCLASS;
enum SYSGEOTYPE;
enum SYSNLS_FUNCTION;
struct SYSTEM_BATTERY_STATE;
struct SYSTEM_POWER_CAPABILITIES;
enum SYSTEM_POWER_CONDITION;
struct SYSTEM_POWER_LEVEL;
class SafeBytePtr;
class SafeCExposedDocFile;
class SafeCExposedIterator;
class SafeCExposedStream;
class SafeIStorage;
class SafeIStream;
class SafeIUnknown;
class SafeNtHandle;
class ScmReplyInfo;
class ScmRequestInfo;
class SecurityInfo;
class SerializableProperty;
class SerializedPropertyReader;
class Serializer;
enum _TAG_UNNAMED_32;
struct ServerContextWorkData;
class ServerLocationInfo;
class SpecialProperties;
struct SystemBlockHeader;
struct SystemPageEntry;
enum TERMINATE_DOCUMENT;
class TStackBuffer<tagPROPVARIANT,64>;
class TStackBuffer<unsigned long,64>;
class TStackBuffer<unsigned short *,64>;
class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64>;
class TXLargeIntegerWrapper<_ULARGE_INTEGER,unsigned long,unsigned __int64>;
enum TXTTYPE;
struct TYPEINFOVTBL;
struct Thread;
struct UDATE;
struct USERPREFS;
struct USN_JOURNAL_DATA;
struct USN_RECORD;
enum UlIsEntry;
enum VARENUM;
enum VERIFIER_MODE;
struct VOLUME_BITMAP_BUFFER;
enum VSAParameterType;
enum VSAStandardParameter;
struct VerbList;
struct VerifierThreadState;
struct VtblSplayNode;
enum WELL_KNOWN_SID_TYPE;
enum WHICHTIME;
struct WINTRUST_BLOB_INFO_;
struct WINTRUST_CATALOG_INFO_;
struct WINTRUST_CERT_INFO_;
struct WINTRUST_FILE_INFO_;
struct WINTRUST_SGNR_INFO_;
enum WMIDPREQUESTCODE;
enum WPP_CTL_NAMES;
enum WPP_DEFINE_BIT_NAMES;
union WPP_PROJECT_CONTROL_BLOCK;
class Windows::Auto<Windows::Rtl::IRtlBlobProvider *>;
class Windows::Auto<Windows::Rtl::IRtlFormattableInterface *>;
class Windows::Auto<Windows::Rtl::IRtlInterface *>;
class Windows::Auto<Windows::Rtl::IRtlObject *>;
class Windows::Auto<Windows::Rtl::IRtlROFOStream *>;
class Windows::Auto<Windows::Rtl::IRtlRORAStream *>;
class Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *>;
class Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *>;
class Windows::Auto<Windows::Rtl::IRtlWOFOStream *>;
class Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *>;
class Windows::Auto<Windows::Rtl::IRtlWORAStream *>;
class Windows::Auto<Windows::Rtl::IRtlWOUCSStream *>;
class Windows::Auto<_LBLOB>;
class Windows::Auto<_LUNICODE_STRING>;
class Windows::Auto<_LUTF8_STRING>;
class Windows::Auto<_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT>;
class Windows::Auto<_UNICODE_STRING>;
class Windows::Auto<void *>;
struct Windows::DisableAuto;
class Windows::ErrorHandling::CBaseFrame;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CBoolFrame>;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>;
class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>;
class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>;
class Windows::ErrorHandling::Rtl::CBaseNtStatusPointerCarryingFrame<Windows::ErrorHandling::Rtl::CBoolFrame>;
class Windows::ErrorHandling::Rtl::CBaseRaiseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame,Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame> >;
class Windows::ErrorHandling::Rtl::CBoolFrame;
class Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame;
class Windows::ErrorHandling::Rtl::CVoidRaiseFrame;
struct Windows::ErrorHandling::StatusTypeHRESULT;
struct Windows::ErrorHandling::StatusTypeNTSTATUS;
struct Windows::ErrorHandling::_RTL_CALL_SITE;
class Windows::Lock<_RTL_CRITICAL_SECTION>;
class Windows::LockGrant<_RTL_CRITICAL_SECTION>;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnType;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnTypeConst;
class Windows::Rtl::AutoFileHandle;
class Windows::Rtl::AutoHandle;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>::COperatorAmpersandReturnType;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>::COperatorAmpersandReturnType;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>::COperatorAmpersandReturnType;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>::COperatorAmpersandReturnType;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>::COperatorAmpersandReturnType;
class Windows::Rtl::AutoHandleDefaultTraits<void *>;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;
class Windows::Rtl::AutoKeyHandle;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnType;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnTypeConst;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnType;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnTypeConst;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnType;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnTypeConst;
class Windows::Rtl::AutoToken;
class Windows::Rtl::AutoTxnHandle;
class Windows::Rtl::CRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
class Windows::Rtl::CRTL_SMART_LBLOB_WRITING_CONTEXT;
class Windows::Rtl::CStringTraitsBase;
class Windows::Rtl::CriticalSectionLock;
class Windows::Rtl::CriticalSectionLockGrant;
struct Windows::Rtl::IRtlBlobProvider;
struct Windows::Rtl::IRtlFormattableInterface;
struct Windows::Rtl::IRtlFormattableInterface::FormattingLevels;
enum _TAG_UNNAMED_33;
struct Windows::Rtl::IRtlFormattableObject;
struct Windows::Rtl::IRtlFormattableObject::FormattingLevels;
enum _TAG_UNNAMED_34;
struct Windows::Rtl::IRtlFormattedOutputStream;
struct Windows::Rtl::IRtlInterface;
struct Windows::Rtl::IRtlObject;
struct Windows::Rtl::IRtlROFOStream;
struct Windows::Rtl::IRtlRORAStream;
struct Windows::Rtl::IRtlUtf16LEStringBuilder;
struct Windows::Rtl::IRtlUtf8StringBuilder;
struct Windows::Rtl::IRtlWOFOStream;
struct Windows::Rtl::IRtlWOFOUCSStream;
struct Windows::Rtl::IRtlWORAStream;
struct Windows::Rtl::IRtlWOUCSStream;
class Windows::Rtl::StringTraits<_LUNICODE_STRING>;
class Windows::Rtl::StringTraits<_LUTF8_STRING>;
class Windows::Rtl::StringTraits<_UNICODE_STRING>;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_AND_FLAG_MAP;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY;
struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP;
struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY;
struct WireExtent;
struct WireExtentArray;
union WireThat;
struct WireThatPart1;
struct WireThatPart2;
union WireThis;
struct WireThisPart1;
struct WireThisPart2;
class XIPersistFile;
class XIPersistStorage;
class XIStorage;
class XIUnknown;
enum XLAT_SIDE;
class XLOCK;
struct XLOCK_LEAF;
struct XMLDOMDocumentEvents;
class XSLOCK;
struct XSLOCK::OWNERENTRY;
struct _ABC;
struct _ABCFLOAT;
struct _ACCESS_ALLOWED_ACE;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct _ACCESS_ALLOWED_OBJECT_ACE;
struct _ACCESS_DENIED_ACE;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
struct _ACCESS_DENIED_OBJECT_ACE;
enum _ACCESS_MODE;
struct _ACE_HEADER;
struct _ACL;
enum _ACL_INFORMATION_CLASS;
struct _ACL_REVISION_INFORMATION;
struct _ACL_SIZE_INFORMATION;
struct _ACTIVATION_CONTEXT;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
struct _ACTIVATION_CONTEXT_DATA;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct _ACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION;
struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct _ACTIVATION_CONTEXT_STACK;
struct _ACTRL_ACCESS_ENTRYW;
struct _ACTRL_ACCESS_ENTRY_LISTW;
struct _ACTRL_ALISTW;
struct _ACTRL_PROPERTY_ENTRYW;
struct _ADMINISTRATOR_POWER_POLICY;
struct _ALPC_BASIC_INFORMATION;
struct _ALPC_CONTEXT_ATTR;
struct _ALPC_DATA_VIEW_ATTR;
struct _ALPC_HANDLE_ATTR;
struct _ALPC_MESSAGE_ATTRIBUTES;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct _ALPC_PORT_ATTRIBUTES;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
enum _ALPC_PORT_INFORMATION_CLASS;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
struct _ALPC_SECURITY_ATTR;
struct _ALPC_SERVER_INFORMATION;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct _APP_COMPAT_GOO;
struct _APP_COMPAT_INFO;
struct _APP_COMPAT_SHIM_INFO;
struct _APP_VARIABLE_INFO;
enum _APTTYPE;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
struct _ASSEMBLY_STORAGE_MAP;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
union _ASSEMBLY_VERSION;
struct _ATOM_BASIC_INFORMATION;
enum _ATOM_INFORMATION_CLASS;
struct _ATOM_TABLE_INFORMATION;
enum _AUDIT_EVENT_TYPE;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _AVRF_CLIENT_ID_WOW64;
struct _AVRF_MEMORY_RANGE;
struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64;
struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64;
struct _AppBarData;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct _BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct _BCRYPT_CIPHER_FUNCTION_TABLE;
struct _BCRYPT_DH_KEY_BLOB;
struct _BCRYPT_DH_PARAMETER_HEADER;
struct _BCRYPT_DSA_KEY_BLOB;
struct _BCRYPT_DSA_PARAMETER_HEADER;
struct _BCRYPT_ECCKEY_BLOB;
struct _BCRYPT_HASH_FUNCTION_TABLE;
struct _BCRYPT_INTERFACE_VERSION;
struct _BCRYPT_KEY_BLOB;
struct _BCRYPT_KEY_DATA_BLOB_HEADER;
struct _BCRYPT_OAEP_PADDING_INFO;
struct _BCRYPT_OID;
struct _BCRYPT_OID_LIST;
struct _BCRYPT_PKCS1_PADDING_INFO;
struct _BCRYPT_PROVIDER_NAME;
struct _BCRYPT_PSS_PADDING_INFO;
struct _BCRYPT_RNG_FUNCTION_TABLE;
struct _BCRYPT_RSAKEY_BLOB;
struct _BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE;
struct _BCRYPT_SIGNATURE_FUNCTION_TABLE;
struct _BCryptBuffer;
struct _BCryptBufferDesc;
struct _BLENDFUNCTION;
struct _BOOT_ENTRY;
struct _BOOT_ENTRY_LIST;
struct _BOOT_OPTIONS;
enum _BUS_DATA_TYPE;
struct _BYTE_BLOB;
struct _BYTE_SIZEDARR;
struct _BY_HANDLE_FILE_INFORMATION;
struct _CACHE_DESCRIPTOR;
enum _CALLSOURCE;
struct _CALL_FRAME;
struct _CAT_MEMBERINFO;
struct _CAT_NAMEVALUE;
struct _CERT_ACCESS_DESCRIPTION;
struct _CERT_ALT_NAME_ENTRY;
struct _CERT_ALT_NAME_INFO;
struct _CERT_AUTHORITY_INFO_ACCESS;
struct _CERT_AUTHORITY_KEY_ID2_INFO;
struct _CERT_AUTHORITY_KEY_ID_INFO;
struct _CERT_BASIC_CONSTRAINTS2_INFO;
struct _CERT_BASIC_CONSTRAINTS_INFO;
struct _CERT_BIOMETRIC_DATA;
struct _CERT_BIOMETRIC_EXT_INFO;
struct _CERT_CHAIN;
struct _CERT_CHAIN_CONTEXT;
struct _CERT_CHAIN_ELEMENT;
struct _CERT_CHAIN_ENGINE_CONFIG;
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA;
struct _CERT_CHAIN_PARA;
struct _CERT_CHAIN_POLICY_PARA;
struct _CERT_CHAIN_POLICY_STATUS;
struct _CERT_CONTEXT;
struct _CERT_CREATE_CONTEXT_PARA;
struct _CERT_CRL_CONTEXT_PAIR;
struct _CERT_DH_PARAMETERS;
struct _CERT_DSS_PARAMETERS;
struct _CERT_ECC_SIGNATURE;
struct _CERT_EXTENSION;
struct _CERT_EXTENSIONS;
struct _CERT_FORTEZZA_DATA_PROP;
struct _CERT_GENERAL_SUBTREE;
struct _CERT_HASHED_URL;
struct _CERT_ID;
struct _CERT_INFO;
struct _CERT_ISSUER_SERIAL_NUMBER;
struct _CERT_KEYGEN_REQUEST_INFO;
struct _CERT_KEY_ATTRIBUTES_INFO;
struct _CERT_KEY_CONTEXT;
struct _CERT_KEY_USAGE_RESTRICTION_INFO;
struct _CERT_LDAP_STORE_OPENED_PARA;
struct _CERT_LOGOTYPE_AUDIO;
struct _CERT_LOGOTYPE_AUDIO_INFO;
struct _CERT_LOGOTYPE_DATA;
struct _CERT_LOGOTYPE_DETAILS;
struct _CERT_LOGOTYPE_EXT_INFO;
struct _CERT_LOGOTYPE_IMAGE;
struct _CERT_LOGOTYPE_IMAGE_INFO;
struct _CERT_LOGOTYPE_INFO;
struct _CERT_LOGOTYPE_REFERENCE;
struct _CERT_NAME_CONSTRAINTS_INFO;
struct _CERT_NAME_INFO;
struct _CERT_NAME_VALUE;
struct _CERT_OTHER_LOGOTYPE_INFO;
struct _CERT_OTHER_NAME;
struct _CERT_PAIR;
struct _CERT_PHYSICAL_STORE_INFO;
struct _CERT_POLICIES_INFO;
struct _CERT_POLICY95_QUALIFIER1;
struct _CERT_POLICY_CONSTRAINTS_INFO;
struct _CERT_POLICY_ID;
struct _CERT_POLICY_INFO;
struct _CERT_POLICY_MAPPING;
struct _CERT_POLICY_MAPPINGS_INFO;
struct _CERT_POLICY_QUALIFIER_INFO;
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
struct _CERT_POLICY_QUALIFIER_USER_NOTICE;
struct _CERT_PRIVATE_KEY_VALIDITY;
struct _CERT_PUBLIC_KEY_INFO;
struct _CERT_QC_STATEMENT;
struct _CERT_QC_STATEMENTS_EXT_INFO;
struct _CERT_RDN;
struct _CERT_RDN_ATTR;
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
struct _CERT_REGISTRY_STORE_ROAMING_PARA;
struct _CERT_REQUEST_INFO;
struct _CERT_REVOCATION_CHAIN_PARA;
struct _CERT_REVOCATION_CRL_INFO;
struct _CERT_REVOCATION_INFO;
struct _CERT_REVOCATION_PARA;
struct _CERT_REVOCATION_STATUS;
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT;
struct _CERT_SIGNED_CONTENT_INFO;
struct _CERT_SIMPLE_CHAIN;
struct _CERT_STORE_PROV_FIND_INFO;
struct _CERT_STORE_PROV_INFO;
struct _CERT_SYSTEM_STORE_INFO;
struct _CERT_SYSTEM_STORE_RELOCATE_PARA;
struct _CERT_TEMPLATE_EXT;
struct _CERT_TRUST_LIST_INFO;
struct _CERT_TRUST_STATUS;
struct _CERT_USAGE_MATCH;
struct _CERT_X942_DH_PARAMETERS;
struct _CERT_X942_DH_VALIDATION_PARAMS;
struct _CHAR_INFO;
union _CLIENT_CALL_RETURN;
struct _CLIENT_ID;
struct _CLIENT_ID64;
struct _CLILIST;
struct _CLINFO;
struct _CMC_ADD_ATTRIBUTES_INFO;
struct _CMC_ADD_EXTENSIONS_INFO;
struct _CMC_DATA_INFO;
struct _CMC_PEND_INFO;
struct _CMC_RESPONSE_INFO;
struct _CMC_STATUS_INFO;
struct _CMC_TAGGED_ATTRIBUTE;
struct _CMC_TAGGED_CERT_REQUEST;
struct _CMC_TAGGED_CONTENT_INFO;
struct _CMC_TAGGED_OTHER_MSG;
struct _CMC_TAGGED_REQUEST;
struct _CMSG_CMS_RECIPIENT_INFO;
struct _CMSG_CMS_SIGNER_INFO;
struct _CMSG_CNG_CONTENT_DECRYPT_INFO;
struct _CMSG_CONTENT_ENCRYPT_INFO;
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
struct _CMSG_CTRL_DECRYPT_PARA;
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
struct _CMSG_ENCRYPTED_ENCODE_INFO;
struct _CMSG_ENVELOPED_ENCODE_INFO;
struct _CMSG_HASHED_ENCODE_INFO;
struct _CMSG_KEY_AGREE_ENCRYPT_INFO;
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_INFO;
struct _CMSG_KEY_TRANS_ENCRYPT_INFO;
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_TRANS_RECIPIENT_INFO;
struct _CMSG_MAIL_LIST_ENCRYPT_INFO;
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
struct _CMSG_MAIL_LIST_RECIPIENT_INFO;
struct _CMSG_RC2_AUX_INFO;
struct _CMSG_RC4_AUX_INFO;
struct _CMSG_RECIPIENT_ENCODE_INFO;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
struct _CMSG_SIGNED_ENCODE_INFO;
struct _CMSG_SIGNER_ENCODE_INFO;
struct _CMSG_SIGNER_INFO;
struct _CMSG_SP3_COMPATIBLE_AUX_INFO;
struct _CMSG_STREAM_INFO;
struct _CMS_DH_KEY_INFO;
struct _CMS_KEY_INFO;
struct _CM_COMPONENT_INFORMATION;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _CM_EISA_FUNCTION_INFORMATION;
struct _CM_EISA_SLOT_INFORMATION;
enum _CM_ERROR_CONTROL_TYPE;
struct _CM_FLOPPY_DEVICE_DATA;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_INT13_DRIVE_PARAMETER;
struct _CM_KEYBOARD_DEVICE_DATA;
struct _CM_MCA_POS_DATA;
struct _CM_MONITOR_DEVICE_DATA;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
struct _CM_PCCARD_DEVICE_DATA;
struct _CM_PNP_BIOS_DEVICE_NODE;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct _CM_RESOURCE_LIST;
struct _CM_ROM_BLOCK;
struct _CM_SCSI_DEVICE_DATA;
struct _CM_SERIAL_DEVICE_DATA;
enum _CM_SERVICE_LOAD_TYPE;
enum _CM_SERVICE_NODE_TYPE;
enum _CM_SHARE_DISPOSITION;
struct _CM_SONIC_DEVICE_DATA;
struct _CM_VIDEO_DEVICE_DATA;
struct _COAUTHIDENTITY;
struct _COAUTHINFO;
struct _COMMCONFIG;
struct _COMMPROP;
struct _COMMTIMEOUTS;
struct _COMM_FAULT_OFFSETS;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
struct _COMPRESSED_DATA_INFO;
enum _COMPUTER_NAME_FORMAT;
struct _COMSTAT;
struct _CONNECTDLGSTRUCTA;
struct _CONNECTDLGSTRUCTW;
struct _CONSOLE_CURSOR_INFO;
struct _CONSOLE_FONT_INFO;
struct _CONSOLE_FONT_INFOEX;
struct _CONSOLE_HISTORY_INFO;
struct _CONSOLE_READCONSOLE_CONTROL;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct _CONSOLE_SCREEN_BUFFER_INFOEX;
struct _CONSOLE_SELECTION_INFO;
struct _CONTEXT;
struct _COORD;
struct _COSERVERINFO;
struct _COVERAGE_MODULES;
struct _COVERAGE_MODULE_INFO;
struct _COVERAGE_MODULE_REQUEST;
enum _COVERAGE_REQUEST_CODES;
struct _COVERAGE_SECTION_HEADER;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
struct _CPS_URLS;
struct _CPTABLEINFO;
union _CPU_INFORMATION;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO;
struct _CRL_CONTEXT;
struct _CRL_DIST_POINT;
struct _CRL_DIST_POINTS_INFO;
struct _CRL_DIST_POINT_NAME;
struct _CRL_ENTRY;
struct _CRL_FIND_ISSUED_FOR_PARA;
struct _CRL_INFO;
struct _CRL_ISSUING_DIST_POINT;
struct _CRL_REVOCATION_INFO;
struct _CROSS_CERT_DIST_POINTS_INFO;
struct _CRT_CRITICAL_SECTION;
struct _CRT_CRITICAL_SECTION_DEBUG;
struct _CRT_DOUBLE;
struct _CRT_FLOAT;
struct _CRYPTNET_URL_CACHE_FLUSH_INFO;
struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO;
struct _CRYPTNET_URL_CACHE_RESPONSE_INFO;
struct _CRYPTOAPI_BLOB;
struct _CRYPTPROTECT_PROMPTSTRUCT;
struct _CRYPT_3DES_KEY_STATE;
struct _CRYPT_AES_128_KEY_STATE;
struct _CRYPT_AES_256_KEY_STATE;
struct _CRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION;
struct _CRYPT_ATTRIBUTE;
struct _CRYPT_ATTRIBUTES;
struct _CRYPT_ATTRIBUTE_TYPE_VALUE;
struct _CRYPT_BIT_BLOB;
struct _CRYPT_BLOB_ARRAY;
struct _CRYPT_CONTENT_INFO;
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
struct _CRYPT_CONTEXTS;
struct _CRYPT_CONTEXT_CONFIG;
struct _CRYPT_CONTEXT_FUNCTIONS;
struct _CRYPT_CONTEXT_FUNCTION_CONFIG;
struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS;
struct _CRYPT_CREDENTIALS;
struct _CRYPT_CSP_PROVIDER;
struct _CRYPT_DECODE_PARA;
struct _CRYPT_DECRYPT_MESSAGE_PARA;
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
struct _CRYPT_DES_KEY_STATE;
struct _CRYPT_ECC_CMS_SHARED_INFO;
struct _CRYPT_ENCODE_PARA;
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
struct _CRYPT_ENCRYPT_MESSAGE_PARA;
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
struct _CRYPT_HASH_INFO;
struct _CRYPT_HASH_MESSAGE_PARA;
struct _CRYPT_IMAGE_REF;
struct _CRYPT_IMAGE_REG;
struct _CRYPT_INTERFACE_REG;
struct _CRYPT_KEY_PROV_INFO;
struct _CRYPT_KEY_PROV_PARAM;
struct _CRYPT_KEY_SIGN_MESSAGE_PARA;
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA;
struct _CRYPT_MASK_GEN_ALGORITHM;
struct _CRYPT_OBJID_TABLE;
struct _CRYPT_OID_FUNC_ENTRY;
struct _CRYPT_OID_INFO;
struct _CRYPT_PASSWORD_CREDENTIALSA;
struct _CRYPT_PASSWORD_CREDENTIALSW;
struct _CRYPT_PKCS12_PBE_PARAMS;
struct _CRYPT_PKCS8_EXPORT_PARAMS;
struct _CRYPT_PKCS8_IMPORT_PARAMS;
struct _CRYPT_PRIVATE_KEY_INFO;
struct _CRYPT_PROPERTY_REF;
struct _CRYPT_PROVIDERS;
struct _CRYPT_PROVIDER_CERT;
struct _CRYPT_PROVIDER_DATA;
struct _CRYPT_PROVIDER_DEFUSAGE;
struct _CRYPT_PROVIDER_FUNCTIONS;
struct _CRYPT_PROVIDER_PRIVDATA;
struct _CRYPT_PROVIDER_REF;
struct _CRYPT_PROVIDER_REFS;
struct _CRYPT_PROVIDER_REG;
struct _CRYPT_PROVIDER_REGDEFUSAGE;
struct _CRYPT_PROVIDER_SGNR;
struct _CRYPT_PROVUI_DATA;
struct _CRYPT_PROVUI_FUNCS;
struct _CRYPT_PSOURCE_ALGORITHM;
struct _CRYPT_RC2_CBC_PARAMETERS;
struct _CRYPT_RC4_KEY_STATE;
struct _CRYPT_REGISTER_ACTIONID;
struct _CRYPT_RETRIEVE_AUX_INFO;
struct _CRYPT_RSAES_OAEP_PARAMETERS;
struct _CRYPT_RSA_SSA_PSS_PARAMETERS;
struct _CRYPT_SEQUENCE_OF_ANY;
struct _CRYPT_SIGN_MESSAGE_PARA;
struct _CRYPT_SMART_CARD_ROOT_INFO;
struct _CRYPT_SMIME_CAPABILITIES;
struct _CRYPT_SMIME_CAPABILITY;
struct _CRYPT_TIME_STAMP_REQUEST_INFO;
struct _CRYPT_TRUST_REG_ENTRY;
struct _CRYPT_URL_ARRAY;
struct _CRYPT_URL_INFO;
struct _CRYPT_VERIFY_MESSAGE_PARA;
struct _CRYPT_X942_OTHER_INFO;
struct _CSTRING;
struct _CTL_ANY_SUBJECT_INFO;
struct _CTL_CONTEXT;
struct _CTL_ENTRY;
struct _CTL_FIND_SUBJECT_PARA;
struct _CTL_FIND_USAGE_PARA;
struct _CTL_INFO;
struct _CTL_USAGE;
struct _CTL_USAGE_MATCH;
struct _CTL_VERIFY_USAGE_PARA;
struct _CTL_VERIFY_USAGE_STATUS;
struct _CURDIR;
struct _CURDIR64;
struct _CrtMemBlockHeader;
struct _CrtMemState;
struct _DCB;
struct _DEBUG_EVENT;
struct _DECRYPTION_STATUS_BUFFER;
enum _DEP_SYSTEM_POLICY_TYPE;
struct _DESCRIPTOR_TABLE_ENTRY;
struct _DEVICE_FLAGS;
enum _DEVICE_POWER_STATE;
struct _DISCDLGSTRUCTA;
struct _DISCDLGSTRUCTW;
struct _DISPLAY_DEVICEA;
struct _DISPLAY_DEVICEW;
struct _DMA_CONFIGURATION_BYTE0;
struct _DMA_CONFIGURATION_BYTE1;
enum _DMA_SPEED;
enum _DMA_WIDTH;
struct _DOCINFOA;
struct _DOCINFOW;
struct _DPA;
enum _DPFLTR_TYPE;
struct _DRAGINFOA;
struct _DRAGINFOW;
struct _DRAWPATRECT;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct _DROPFILES;
struct _DSA;
struct _DSSSEED;
struct _DWORD_BLOB;
struct _EFI_DRIVER_ENTRY;
struct _EFI_DRIVER_ENTRY_LIST;
struct _EISA_DMA_CONFIGURATION;
struct _EISA_IRQ_CONFIGURATION;
struct _EISA_IRQ_DESCRIPTOR;
struct _EISA_MEMORY_CONFIGURATION;
struct _EISA_MEMORY_TYPE;
struct _EISA_PORT_CONFIGURATION;
struct _EISA_PORT_DESCRIPTOR;
struct _ENCRYPTED_DATA_INFO;
struct _ENCRYPTION_BUFFER;
struct _ENLISTMENT_BASIC_INFORMATION;
struct _ENLISTMENT_CRM_INFORMATION;
enum _ENLISTMENT_INFORMATION_CLASS;
struct _ENUM_SERVICE_STATUSA;
struct _ENUM_SERVICE_STATUSW;
struct _ENUM_SERVICE_STATUS_PROCESSA;
struct _ENUM_SERVICE_STATUS_PROCESSW;
struct _EVENTLOGRECORD;
struct _EVENTLOG_FULL_INFORMATION;
struct _EVENTSFORLOGFILE;
struct _EVENT_BASIC_INFORMATION;
struct _EVENT_DATA_DESCRIPTOR;
struct _EVENT_DESCRIPTOR;
struct _EVENT_FILTER_DESCRIPTOR;
enum _EVENT_INFORMATION_CLASS;
struct _EVENT_TRACE_PROPERTIES;
enum _EVENT_TYPE;
struct _EXCEPTION_DEBUG_INFO;
enum _EXCEPTION_DISPOSITION;
struct _EXCEPTION_POINTERS;
struct _EXCEPTION_RECORD;
struct _EXCEPTION_RECORD32;
struct _EXCEPTION_RECORD64;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _EXFAT_STATISTICS;
struct _EXIT_PROCESS_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO;
enum _FAIL_BEHAVIOR;
struct _FAT_STATISTICS;
struct _FIBER;
struct _FILEMUIINFO;
struct _FILEOFFSET_INFORMATION;
struct _FILESYSTEM_STATISTICS;
struct _FILETIME;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_ALIGNMENT_INFORMATION;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _FILE_ALLOCATION_INFO;
struct _FILE_ALLOCATION_INFORMATION;
struct _FILE_ALL_INFORMATION;
struct _FILE_ATTRIBUTE_TAG_INFO;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _FILE_BASIC_INFO;
struct _FILE_BASIC_INFORMATION;
struct _FILE_BOTH_DIR_INFORMATION;
struct _FILE_COMPLETION_INFORMATION;
struct _FILE_COMPRESSION_INFO;
struct _FILE_COMPRESSION_INFORMATION;
struct _FILE_DIRECTORY_INFORMATION;
struct _FILE_DISPOSITION_INFO;
struct _FILE_DISPOSITION_INFORMATION;
struct _FILE_EA_INFORMATION;
struct _FILE_END_OF_FILE_INFO;
struct _FILE_END_OF_FILE_INFORMATION;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _FILE_FS_CONTROL_INFORMATION;
struct _FILE_FS_DEVICE_INFORMATION;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _FILE_FS_LABEL_INFORMATION;
struct _FILE_FS_OBJECTID_INFORMATION;
struct _FILE_FS_SIZE_INFORMATION;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
struct _FILE_FS_VOLUME_INFORMATION;
struct _FILE_FULL_DIR_INFORMATION;
struct _FILE_FULL_EA_INFORMATION;
struct _FILE_GET_EA_INFORMATION;
struct _FILE_GET_QUOTA_INFORMATION;
struct _FILE_ID_BOTH_DIR_INFO;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct _FILE_ID_FULL_DIR_INFORMATION;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
enum _FILE_ID_TYPE;
enum _FILE_INFORMATION_CLASS;
enum _FILE_INFO_BY_HANDLE_CLASS;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _FILE_IO_COMPLETION_INFORMATION;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _FILE_IO_PRIORITY_HINT_INFO;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
struct _FILE_LINKS_INFORMATION;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_LINK_INFORMATION;
struct _FILE_MAILSLOT_PEEK_BUFFER;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _FILE_MODE_INFORMATION;
struct _FILE_MOVE_CLUSTER_INFORMATION;
struct _FILE_NAMES_INFORMATION;
struct _FILE_NAME_INFO;
struct _FILE_NAME_INFORMATION;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct _FILE_NOTIFY_INFORMATION;
struct _FILE_OBJECTID_BUFFER;
struct _FILE_OBJECTID_INFORMATION;
struct _FILE_PATH;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct _FILE_PIPE_EVENT_BUFFER;
struct _FILE_PIPE_INFORMATION;
struct _FILE_PIPE_LOCAL_INFORMATION;
struct _FILE_PIPE_PEEK_BUFFER;
struct _FILE_PIPE_REMOTE_INFORMATION;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _FILE_POSITION_INFORMATION;
struct _FILE_PREFETCH;
struct _FILE_PREFETCH_EX;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _FILE_QUERY_SPARING_BUFFER;
struct _FILE_QUOTA_INFORMATION;
struct _FILE_RENAME_INFO;
struct _FILE_RENAME_INFORMATION;
struct _FILE_REPARSE_POINT_INFORMATION;
union _FILE_SEGMENT_ELEMENT;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _FILE_SET_SPARSE_BUFFER;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _FILE_STANDARD_INFO;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_STREAM_INFO;
struct _FILE_STREAM_INFORMATION;
struct _FILE_TRACKING_INFORMATION;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
struct _FILE_ZERO_DATA_INFORMATION;
enum _FINDEX_INFO_LEVELS;
enum _FINDEX_SEARCH_OPS;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
enum _FIRMWARE_TYPE;
struct _FIXED;
struct _FLAGGED_BYTE_BLOB;
struct _FLAGGED_WORD_BLOB;
struct _FLAG_STGMEDIUM;
struct _FLOAT128;
struct _FLOATING_SAVE_AREA;
struct _FLS_CALLBACK_INFO;
struct _FLS_DATA;
struct _FNSAVE_FORMAT;
struct _FOCUS_EVENT_RECORD;
union _FOUR_PART_VERSION;
struct _FPO_DATA;
struct _FP_128;
struct _FP_32;
struct _FP_64;
struct _FP_80;
enum _FP_IEEE_COMPARE_RESULT;
enum _FP_IEEE_OPERATION_CODE;
struct _FP_IEEE_RECORD;
struct _FP_IEEE_VALUE;
enum _FP__IEEE_FORMAT;
enum _FP__IEEE_ROUNDING_MODE;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
enum _FSINFOCLASS;
struct _FULL_PTR_XLAT_TABLES;
struct _FXSAVE_FORMAT;
struct _FX_SAVE_AREA;
struct _GDI_NONREMOTE;
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002;
struct _GDI_OBJECT;
union _GDI_OBJECT::__MIDL_IAdviseSink_0002;
struct _GDI_TEB_BATCH;
struct _GENERATE_NAME_CONTEXT;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct _GENERIC_MAPPING;
enum _GET_FILEEX_INFO_LEVELS;
struct _GLOBAL_SHARED_CRITICAL_SECTION;
struct _GLYPHMETRICS;
struct _GLYPHMETRICSFLOAT;
struct _GRADIENT_RECT;
struct _GRADIENT_TRIANGLE;
struct _GUID;
struct _HARDERROR_MSG;
enum _HARDERROR_RESPONSE;
enum _HARDERROR_RESPONSE_OPTION;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
struct _HEAP_INFORMATION;
enum _HEAP_INFORMATION_CLASS;
struct _HEAP_INFORMATION_ITEM;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _HEAP_RANGE_INFORMATION;
struct _HEAP_REGION_INFORMATION;
struct _HMAC_Info;
struct _HMAPPER;
struct _HOSTNAMES;
struct _HOTPATCH_HOOK_DESCRIPTOR;
struct _HTTPSPolicyCallbackData;
struct _HYPER_SIZEDARR;
struct _ICONINFO;
struct _ICONINFOEXA;
struct _ICONINFOEXW;
enum _IDL_CS_CONVERT;
struct _IMAGEHLP_CBA_EVENT;
struct _IMAGEHLP_CBA_EVENTW;
struct _IMAGEHLP_CBA_READ_MEMORY;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64;
struct _IMAGEHLP_DUPLICATE_SYMBOL;
struct _IMAGEHLP_DUPLICATE_SYMBOL64;
struct _IMAGEHLP_GET_TYPE_INFO_PARAMS;
struct _IMAGEHLP_LINE;
struct _IMAGEHLP_LINE64;
struct _IMAGEHLP_LINEW;
struct _IMAGEHLP_LINEW64;
struct _IMAGEHLP_MODULE;
struct _IMAGEHLP_MODULE64;
struct _IMAGEHLP_MODULEW;
struct _IMAGEHLP_MODULEW64;
struct _IMAGEHLP_STACK_FRAME;
enum _IMAGEHLP_STATUS_REASON;
struct _IMAGEHLP_SYMBOL;
struct _IMAGEHLP_SYMBOL64;
struct _IMAGEHLP_SYMBOL64_PACKAGE;
struct _IMAGEHLP_SYMBOLW;
struct _IMAGEHLP_SYMBOLW64;
struct _IMAGEHLP_SYMBOLW64_PACKAGE;
struct _IMAGEHLP_SYMBOLW_PACKAGE;
struct _IMAGEHLP_SYMBOL_PACKAGE;
struct _IMAGEHLP_SYMBOL_SRC;
enum _IMAGEHLP_SYMBOL_TYPE_INFO;
struct _IMAGEINFO;
struct _IMAGELIST;
struct _IMAGELISTDRAWPARAMS;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
union _IMAGE_AUX_SYMBOL;
struct _IMAGE_BASE_RELOCATION;
struct _IMAGE_BOUND_FORWARDER_REF;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_DEBUG_DIRECTORY;
struct _IMAGE_DEBUG_INFORMATION;
struct _IMAGE_DEBUG_MISC;
struct _IMAGE_DOS_HEADER;
struct _IMAGE_EXPORT_DIRECTORY;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_FUNCTION_ENTRY;
struct _IMAGE_FUNCTION_ENTRY64;
struct _IMAGE_IMPORT_BY_NAME;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _IMAGE_LINENUMBER;
struct _IMAGE_NT_HEADERS;
struct _IMAGE_NT_HEADERS64;
struct _IMAGE_OPTIONAL_HEADER;
struct _IMAGE_OPTIONAL_HEADER64;
struct _IMAGE_OS2_HEADER;
struct _IMAGE_RELOCATION;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _IMAGE_ROM_HEADERS;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _IMAGE_SECTION_HEADER;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _IMAGE_SYMBOL;
struct _IMAGE_THUNK_DATA32;
struct _IMAGE_THUNK_DATA64;
struct _IMAGE_TLS_DIRECTORY32;
struct _IMAGE_TLS_DIRECTORY64;
struct _IMAGE_VXD_HEADER;
struct _INDIRECTPROPERTY;
struct _INITIAL_TEB;
struct _INPUT_RECORD;
struct _INSTALLDATA;
union _INSTALLSPEC;
enum _INSTALLSPECTYPE;
enum _INTERFACE_TYPE;
struct _INVERTED_FUNCTION_TABLE;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct _IO_COMPLETION_BASIC_INFORMATION;
enum _IO_COMPLETION_INFORMATION_CLASS;
struct _IO_COUNTERS;
struct _IO_ERROR_LOG_MESSAGE;
struct _IO_ERROR_LOG_PACKET;
enum _IO_PRIORITY_HINT;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _IO_STATUS_BLOCK;
enum _IRQ_DEVICE_POLICY;
enum _IRQ_PRIORITY;
struct _ITEMIDLIST;
struct _ImageArchitectureEntry;
struct _ImageArchitectureHeader;
struct _JIT_DEBUG_INFO;
enum _JOBOBJECTINFOCLASS;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _JOBOBJECT_JOBSET_INFORMATION;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct _JOB_SET_ARRAY;
struct _JOURNAL_ABSOLUTE_INFORMATION;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
struct _JOURNAL_CLIENT_INFORMATION;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
enum _JOURNAL_INFORMATION_CLASS;
struct _JOURNAL_RENAME_KEY_INFORMATION;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
struct _KCRM_MARSHAL_HEADER;
struct _KCRM_PROTOCOL_BLOB;
struct _KCRM_TRANSACTION_BLOB;
struct _KDHELP;
struct _KDHELP64;
struct _KERNEL_USER_TIMES;
struct _KEY_BASIC_INFORMATION;
struct _KEY_CACHED_INFORMATION;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _KEY_EVENT_RECORD;
struct _KEY_FLAGS_INFORMATION;
struct _KEY_FULL_INFORMATION;
enum _KEY_INFORMATION_CLASS;
struct _KEY_NAME_INFORMATION;
struct _KEY_NODE_INFORMATION;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
enum _KEY_SET_INFORMATION_CLASS;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct _KEY_TYPE_SUBTYPE;
struct _KEY_VALUE_BASIC_INFORMATION;
struct _KEY_VALUE_ENTRY;
struct _KEY_VALUE_FULL_INFORMATION;
enum _KEY_VALUE_INFORMATION_CLASS;
struct _KEY_VALUE_PARTIAL_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct _KEY_WRITE_TIME_INFORMATION;
struct _KLDR_DATA_TABLE_ENTRY;
struct _KLDR_DATA_TABLE_ENTRY32;
struct _KLDR_DATA_TABLE_ENTRY64;
struct _KLOCK_QUEUE_HANDLE;
enum _KPROFILE_SOURCE;
struct _KSPIN_LOCK_QUEUE;
enum _KSPIN_LOCK_QUEUE_NUMBER;
struct _KSYSTEM_TIME;
struct _KTMOBJECT_CURSOR;
enum _KTMOBJECT_TYPE;
struct _KUSER_SHARED_DATA;
union _LARGE_INTEGER;
struct _LAST_EXCEPTION_LOG;
struct _LBLOB;
struct _LDBL12;
struct _LDOUBLE;
struct _LDR_DATA_TABLE_ENTRY;
struct _LDR_DATA_TABLE_ENTRY32;
struct _LDR_DATA_TABLE_ENTRY64;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
union _LDR_DLL_NOTIFICATION_DATA;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
struct _LDR_ENUM_RESOURCE_ENTRY;
struct _LDR_FAILURE_DATA;
struct _LDR_IMPORT_CALLBACK_INFO;
struct _LDR_IMPORT_RECORD;
struct _LDR_SECTION_INFO;
struct _LDR_SERVICE_TAG_RECORD;
struct _LDR_VERIFY_IMAGE_INFO;
struct _LDT_ENTRY;
struct _LDT_INFORMATION;
struct _LDT_SIZE;
struct _LINK_TRACKING_INFORMATION;
enum _LINK_TRACKING_INFORMATION_TYPE;
struct _LIST_ENTRY;
struct _LOADED_IMAGE;
struct _LOAD_DLL_DEBUG_INFO;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
struct _LONGDOUBLE;
struct _LONG_SIZEDARR;
struct _LPC_CLIENT_DIED_MSG;
struct _LPC_UNREGISTER_PROCESS_MSG;
struct _LUID;
struct _LUID_AND_ATTRIBUTES;
struct _LUNICODE_STRING;
struct _LUTF8_STRING;
struct _MALLOC_FREE_STRUCT;
enum _MANDATORY_LEVEL;
struct _MAT2;
struct _MCA_EXCEPTION;
union _MCI_ADDR;
union _MCI_STATS;
struct _MEMORYSTATUS;
struct _MEMORYSTATUSEX;
struct _MEMORY_BASIC_INFORMATION;
struct _MEMORY_BASIC_INFORMATION32;
struct _MEMORY_BASIC_INFORMATION64;
struct _MEMORY_FRAME_INFORMATION;
enum _MEMORY_INFORMATION_CLASS;
struct _MEMORY_REGION_INFORMATION;
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE;
struct _MEMORY_WORKING_SET_BLOCK;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
enum _MEMORY_WORKING_SET_EX_LOCATION;
struct _MEMORY_WORKING_SET_INFORMATION;
struct _MENU_EVENT_RECORD;
struct _MESSAGE_RESOURCE_BLOCK;
struct _MESSAGE_RESOURCE_DATA;
struct _MESSAGE_RESOURCE_ENTRY;
struct _METADC;
struct _METAINFO;
struct _MIDL_FORMAT_STRING;
struct _MIDL_SERVER_INFO_;
struct _MIDL_STUBLESS_PROXY_INFO;
struct _MIDL_STUB_DESC;
struct _MIDL_STUB_MESSAGE;
struct _MIDL_SYNTAX_INFO;
struct _MIDL_TYPE_PICKLING_INFO;
struct _MINIDUMP_CALLBACK_INFORMATION;
struct _MINIDUMP_CALLBACK_INPUT;
struct _MINIDUMP_CALLBACK_OUTPUT;
enum _MINIDUMP_CALLBACK_TYPE;
struct _MINIDUMP_DIRECTORY;
struct _MINIDUMP_EXCEPTION;
struct _MINIDUMP_EXCEPTION_INFORMATION;
struct _MINIDUMP_EXCEPTION_INFORMATION64;
struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
struct _MINIDUMP_FUNCTION_TABLE_STREAM;
struct _MINIDUMP_HANDLE_DATA_STREAM;
struct _MINIDUMP_HANDLE_DESCRIPTOR;
struct _MINIDUMP_HANDLE_DESCRIPTOR_2;
struct _MINIDUMP_HANDLE_OBJECT_INFORMATION;
enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;
struct _MINIDUMP_HANDLE_OPERATION_LIST;
struct _MINIDUMP_HEADER;
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK;
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK;
struct _MINIDUMP_IO_CALLBACK;
struct _MINIDUMP_LOCATION_DESCRIPTOR;
struct _MINIDUMP_LOCATION_DESCRIPTOR64;
struct _MINIDUMP_MEMORY64_LIST;
struct _MINIDUMP_MEMORY_DESCRIPTOR;
struct _MINIDUMP_MEMORY_DESCRIPTOR64;
struct _MINIDUMP_MEMORY_INFO;
struct _MINIDUMP_MEMORY_INFO_LIST;
struct _MINIDUMP_MEMORY_LIST;
struct _MINIDUMP_MISC_INFO;
struct _MINIDUMP_MISC_INFO_2;
struct _MINIDUMP_MODULE;
struct _MINIDUMP_MODULE_CALLBACK;
struct _MINIDUMP_MODULE_LIST;
struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK;
enum _MINIDUMP_SECONDARY_FLAGS;
enum _MINIDUMP_STREAM_TYPE;
struct _MINIDUMP_STRING;
struct _MINIDUMP_SYSTEM_INFO;
struct _MINIDUMP_THREAD;
struct _MINIDUMP_THREAD_CALLBACK;
struct _MINIDUMP_THREAD_EX;
struct _MINIDUMP_THREAD_EX_CALLBACK;
struct _MINIDUMP_THREAD_EX_LIST;
struct _MINIDUMP_THREAD_INFO;
struct _MINIDUMP_THREAD_INFO_LIST;
struct _MINIDUMP_THREAD_LIST;
enum _MINIDUMP_TYPE;
struct _MINIDUMP_UNLOADED_MODULE;
struct _MINIDUMP_UNLOADED_MODULE_LIST;
struct _MINIDUMP_USER_RECORD;
struct _MINIDUMP_USER_STREAM;
struct _MINIDUMP_USER_STREAM_INFORMATION;
struct _MMPFN_IDENTITY;
struct _MMPFN_MEMSNAP_INFORMATION;
struct _MODEMDEVCAPS;
struct _MODEMSETTINGS;
struct _MODLOAD_DATA;
struct _MODULE_TYPE_INFO;
enum _MODULE_WRITE_FLAGS;
struct _MONIKEREXTENT;
struct _MOUSE_EVENT_RECORD;
struct _MUICCENTRY;
struct _MUICCHEADER;
struct _MUILANGCFGLIST;
struct _MUILANGCFGNODE;
struct _MUILANGINFO;
struct _MUILANGLIST;
struct _MUILANGLISTNODE;
struct _MUILANGUAGES;
struct _MUIREGISTRYINFO;
struct _MUISTRINGPOOL;
enum _MULTIPLE_TRUSTEE_OPERATION;
struct _MUTANT_BASIC_INFORMATION;
enum _MUTANT_INFORMATION_CLASS;
struct _MUTANT_OWNER_INFORMATION;
struct _MkInterfaceList;
struct _MnkEqBuf;
struct _MonikerReadStruct;
struct _MonikerWriteStruct;
struct _NAPDATA;
struct _NCRYPT_KEY_STORAGE_FUNCTION_TABLE;
struct _NCryptAlgorithmName;
struct _NDR_ASYNC_MESSAGE;
struct _NDR_CORRELATION_INFO;
struct _NDR_CS_ROUTINES;
struct _NDR_CS_SIZE_CONVERT_ROUTINES;
struct _NDR_EXPR_DESC;
struct _NDR_PROC_CONTEXT;
struct _NDR_USER_MARSHAL_INFO;
struct _NDR_USER_MARSHAL_INFO_LEVEL1;
struct _NETCONNECTINFOSTRUCT;
struct _NETINFOSTRUCT;
struct _NETRESOURCEA;
struct _NETRESOURCEW;
struct _NLSTABLEINFO;
struct _NON_PAGED_DEBUG_INFO;
enum _NORM_FORM;
struct _NOTIFYICONDATAA;
struct _NOTIFYICONDATAW;
struct _NTFS_STATISTICS;
enum _NT_PRODUCT_TYPE;
struct _NT_TIB;
struct _NT_TIB32;
struct _NT_TIB64;
struct _OBJECTID;
struct _OBJECT_ATTRIBUTES;
struct _OBJECT_ATTRIBUTES32;
struct _OBJECT_ATTRIBUTES64;
struct _OBJECT_BASIC_INFORMATION;
struct _OBJECT_DIRECTORY_INFORMATION;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
enum _OBJECT_INFORMATION_CLASS;
struct _OBJECT_NAME_INFORMATION;
struct _OBJECT_TYPES_INFORMATION;
struct _OBJECT_TYPE_INFORMATION;
struct _OBJECT_TYPE_LIST;
struct _OCSP_BASIC_RESPONSE_ENTRY;
struct _OCSP_BASIC_RESPONSE_INFO;
struct _OCSP_BASIC_REVOKED_INFO;
struct _OCSP_BASIC_SIGNED_RESPONSE_INFO;
struct _OCSP_CERT_ID;
struct _OCSP_REQUEST_ENTRY;
struct _OCSP_REQUEST_INFO;
struct _OCSP_RESPONSE_INFO;
struct _OCSP_SIGNATURE_INFO;
struct _OCSP_SIGNED_REQUEST_INFO;
struct _OFSTRUCT;
struct _OLESTREAM;
struct _OLESTREAMVTBL;
struct _OLETARGETDEVICE;
struct _OPEN_PRINTER_PROPS_INFOA;
struct _OPEN_PRINTER_PROPS_INFOW;
struct _OSVERSIONINFOA;
struct _OSVERSIONINFOEXA;
struct _OSVERSIONINFOEXW;
struct _OSVERSIONINFOW;
struct _OUTLINETEXTMETRICA;
struct _OUTLINETEXTMETRICW;
struct _OUTPUT_DEBUG_STRING_INFO;
struct _OVERLAPPED;
struct _OVERLAPPED_ENTRY;
struct _PACKEDEVENTINFO;
struct _PAGEDIR_INFORMATION;
struct _PAGE_PRIORITY_INFORMATION;
struct _PARAM_STRUCT;
struct _PARSE_MESSAGE_CONTEXT;
struct _PATHNAME_BUFFER;
struct _PEB;
struct _PEB_FREE_BLOCK;
struct _PEB_LDR_DATA;
struct _PERFINFO_GROUPMASK;
struct _PLEX_READ_DATA_REQUEST;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
enum _PLUGPLAY_CONTROL_CLASS;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
struct _PLUGPLAY_EVENT_BLOCK;
enum _PLUGPLAY_EVENT_CATEGORY;
struct _PLUGPLAY_NOTIFY_HDR;
struct _PMD;
enum _PNP_QUERY_RELATION;
enum _PNP_VETO_TYPE;
struct _POINTFLOAT;
struct _POINTL;
struct _POOLED_USAGE_AND_LIMITS;
struct _PORT_DATA_ENTRY;
struct _PORT_DATA_INFORMATION;
enum _PORT_INFORMATION_CLASS;
struct _PORT_MESSAGE;
struct _PORT_VIEW;
union _POWER_STATE;
enum _POWER_STATE_TYPE;
struct _PO_TRANSITION_VETO;
struct _PO_TRANSITION_VETOES;
struct _PO_TRANSITION_VETO_REASON;
struct _PO_TRANSITION_VETO_SERVICE;
struct _PO_TRANSITION_VETO_WINDOW;
struct _PO_WAKE_SOURCE_DEVICE;
struct _PO_WAKE_SOURCE_FIXED;
struct _PO_WAKE_SOURCE_HEADER;
struct _PO_WAKE_SOURCE_HISTORY;
struct _PO_WAKE_SOURCE_INFO;
struct _PREFIX_TABLE;
struct _PREFIX_TABLE_ENTRY;
struct _PRE_APP_COMPAT_INFO;
enum _PRIORITY_HINT;
struct _PRIVILEGE_SET;
struct _PRIVKEYVER3;
struct _PRIV_RESOLVER_INFO;
struct _PRIV_SCM_INFO;
enum _PROCESSINFOCLASS;
enum _PROCESSOR_CACHE_TYPE;
struct _PROCESSOR_IDLE_STATE;
struct _PROCESSOR_IDLE_STATES;
struct _PROCESSOR_IDLE_STATES_EX;
struct _PROCESSOR_IDLE_STATE_EX;
struct _PROCESSOR_POWER_INFORMATION;
struct _PROCESSOR_POWER_POLICY;
struct _PROCESSOR_POWER_POLICY_INFO;
struct _PROCESS_ACCESS_TOKEN;
union _PROCESS_AFFINITY_UPDATE_MODE;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_BASIC_INFORMATION64;
struct _PROCESS_CYCLE_TIME_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
struct _PROCESS_EXCEPTION_PORT;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
struct _PROCESS_FOREGROUND_BACKGROUND;
struct _PROCESS_HANDLE_TRACING_ENABLE;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _PROCESS_HEAP_ENTRY;
struct _PROCESS_HEAP_INFORMATION;
struct _PROCESS_INFORMATION;
union _PROCESS_MEMORY_ALLOCATION_MODE;
struct _PROCESS_PRIORITY_CLASS;
struct _PROCESS_SESSION_INFORMATION;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct _PROCESS_TLS_INFORMATION;
enum _PROCESS_TLS_INFORMATION_TYPE;
struct _PROCESS_WS_WATCH_INFORMATION;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
struct _PROC_THREAD_ATTRIBUTE_LIST;
enum _PROC_THREAD_ATTRIBUTE_NUM;
enum _PROGRESS_INVOKE_SETTING;
enum _PROPOP;
struct _PROVDATA_SIP;
struct _PROV_ENUMALGS;
struct _PROV_ENUMALGS_EX;
enum _PROXY_CLASS;
enum _PRT;
struct _PSFEATURE_CUSTPAPER;
struct _PSFEATURE_OUTPUT;
struct _PSINJECTDATA;
struct _PS_ATTRIBUTE;
struct _PS_ATTRIBUTE_LIST;
enum _PS_ATTRIBUTE_NUM;
struct _PS_CREATE_INFO;
enum _PS_IFEO_KEY_STATE;
struct _PS_MEMORY_RESERVE;
struct _PS_STD_HANDLE_INFO;
enum _PS_STD_HANDLE_STATE;
struct _PUBKEY;
struct _PUBKEYVER3;
struct _PUBLICKEYSTRUC;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct _ProcessActivatorToken;
struct _QUAD;
struct _QUERY_SERVICE_CONFIGA;
struct _QUERY_SERVICE_CONFIGW;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct _QUOTA_LIMITS;
struct _QUOTA_LIMITS_EX;
struct _RASTERIZER_STATUS;
union _RATE_QUOTA_LIMIT;
struct _RC_CONFIG;
struct _RDR_CALLOUT_STATE;
struct _RECTL;
enum _REGQUERY_FLAGS;
enum _REG_ACTION;
struct _REG_NOTIFY_INFORMATION;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
struct _REMOTE_NAME_INFOA;
struct _REMOTE_NAME_INFOW;
struct _REMOTE_PORT_VIEW;
struct _REMOTE_REPLY_SCM_INFO;
struct _REMOTE_REQUEST_SCM_INFO;
struct _REMSECURITY_ATTRIBUTES;
struct _REPARSE_DATA_BUFFER;
struct _REPARSE_GUID_DATA_BUFFER;
struct _REPARSE_INDEX_KEY;
struct _REPARSE_POINT_INFORMATION;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct _RESOLVED_USERNAME_INFO;
struct _RESOLVED_USERNAME_LIST;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
struct _RGNDATA;
struct _RGNDATAHEADER;
struct _RIP_INFO;
struct _ROOT_INFO_LUID;
enum _RPC_ASYNC_EVENT;
union _RPC_ASYNC_NOTIFICATION_INFO;
struct _RPC_ASYNC_STATE;
struct _RPC_BINDING_HANDLE_OPTIONS_V1;
struct _RPC_BINDING_HANDLE_SECURITY_V1_A;
struct _RPC_BINDING_HANDLE_SECURITY_V1_W;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W;
struct _RPC_BINDING_VECTOR;
struct _RPC_CALL_LOCAL_ADDRESS_V1;
struct _RPC_CLIENT_INTERFACE;
struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;
enum _RPC_HTTP_REDIRECTOR_STAGE;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W;
struct _RPC_IF_ID;
struct _RPC_MESSAGE;
enum _RPC_NOTIFICATIONS;
enum _RPC_NOTIFICATION_TYPES;
struct _RPC_POLICY;
struct _RPC_PROTSEQ_ENDPOINT;
struct _RPC_PROTSEQ_VECTORA;
struct _RPC_PROTSEQ_VECTORW;
struct _RPC_SECURITY_QOS;
struct _RPC_SECURITY_QOS_V2_A;
struct _RPC_SECURITY_QOS_V2_W;
struct _RPC_SECURITY_QOS_V3_A;
struct _RPC_SECURITY_QOS_V3_W;
struct _RPC_SECURITY_QOS_V4_A;
struct _RPC_SECURITY_QOS_V4_W;
struct _RPC_SERVER_INTERFACE;
struct _RPC_SYNTAX_IDENTIFIER;
struct _RPC_TRANSFER_SYNTAX;
struct _RPC_VERSION;
struct _RSAPUBKEY;
struct _RTLP_CURDIR_REF;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
struct _RTL_ANSI_STRING_BUFFER;
struct _RTL_AVL_TABLE;
struct _RTL_BACKOFF;
struct _RTL_BALANCED_LINKS;
struct _RTL_BARRIER;
struct _RTL_BITMAP;
struct _RTL_BITMAP_RUN;
struct _RTL_BUFFER;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct _RTL_CONDITION_VARIABLE;
class _RTL_CONSTANT_STRING_remove_const_template_class<1>;
class _RTL_CONSTANT_STRING_remove_const_template_class<2>;
struct _RTL_CRITICAL_SECTION;
struct _RTL_CRITICAL_SECTION32;
struct _RTL_CRITICAL_SECTION64;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct _RTL_DEBUG_INFORMATION;
struct _RTL_DEBUG_INFORMATION32;
struct _RTL_DRIVE_LETTER_CURDIR;
struct _RTL_DRIVE_LETTER_CURDIR64;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
union _RTL_ELEVATION_FLAGS;
enum _RTL_GENERIC_COMPARE_RESULTS;
struct _RTL_GENERIC_TABLE;
struct _RTL_HANDLE_TABLE;
struct _RTL_HANDLE_TABLE_ENTRY;
struct _RTL_HEAP_ENTRY;
struct _RTL_HEAP_INFORMATION;
struct _RTL_HEAP_PARAMETERS;
struct _RTL_HEAP_TAG;
struct _RTL_HEAP_TAG_INFO;
struct _RTL_HEAP_WALK_ENTRY;
struct _RTL_MODULE_BASIC_INFO;
struct _RTL_MODULE_EXTENDED_INFO;
enum _RTL_PATH_TYPE;
struct _RTL_PERTHREAD_CURDIR;
struct _RTL_PROCESS_BACKTRACES;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _RTL_PROCESS_HEAPS;
struct _RTL_PROCESS_LOCKS;
struct _RTL_PROCESS_LOCK_INFORMATION;
struct _RTL_PROCESS_MODULES;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
struct _RTL_QUERY_REGISTRY_TABLE;
struct _RTL_RELATIVE_NAME_U;
struct _RTL_RESOURCE;
union _RTL_RUN_ONCE;
struct _RTL_RXACT_CONTEXT;
struct _RTL_RXACT_LOG;
enum _RTL_RXACT_OPERATION;
struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
struct _RTL_SMART_LBLOB_WRITING_CONTEXT;
struct _RTL_SPLAY_LINKS;
struct _RTL_SRWLOCK;
struct _RTL_STACK_CONTEXT;
struct _RTL_STACK_CONTEXT_ENTRY;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
struct _RTL_TIME_ZONE_INFORMATION;
struct _RTL_TRACE_BLOCK;
struct _RTL_TRACE_DATABASE;
struct _RTL_TRACE_ENUMERATE;
struct _RTL_UCSCHAR_DECODER_RETURN_VALUE;
struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE;
struct _RTL_UNICODE_STRING_BUFFER;
struct _RTL_UNLOAD_EVENT_TRACE;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct _RTL_UNLOAD_EVENT_TRACE64;
struct _RTL_USER_PROCESS_INFORMATION;
struct _RTL_USER_PROCESS_INFORMATION64;
struct _RTL_USER_PROCESS_PARAMETERS;
struct _RTL_USER_PROCESS_PARAMETERS64;
struct _RTL_VERIFIER_ALL_INFORMATION;
struct _RTL_VERIFIER_DLL_DESCRIPTOR;
struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION;
struct _RTL_VERIFIER_HEAP_TABLE;
struct _RTL_VERIFIER_HELPER_TABLE;
enum _RTL_VERIFIER_INFORMATION_CLASS;
struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION;
struct _RTL_VERIFIER_PAGEHEAP_INFORMATION;
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR;
struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION;
struct _RTL_VERIFIER_THUNK_DESCRIPTOR;
enum _RUNLEVEL;
struct _RegInput;
struct _RegInputEntry;
struct _RegOutput;
struct _RemotableHandle;
union _RemotableHandle::__MIDL_IWinTypes_0009;
struct _RevokeClasses;
struct _RevokeEntry;
struct _SCHANNEL_ALG;
struct _SCHANNEL_CRED;
struct _SCMREGKEY;
struct _SCONTEXT_QUEUE;
struct _SC_ACTION;
enum _SC_ACTION_TYPE;
enum _SC_ENUM_TYPE;
enum _SC_STATUS_TYPE;
struct _SECTIONBASICINFO;
struct _SECTION_IMAGE_INFORMATION;
struct _SECTION_IMAGE_INFORMATION32;
struct _SECTION_IMAGE_INFORMATION64;
enum _SECTION_INFORMATION_CLASS;
enum _SECTION_INHERIT;
struct _SECURITY_ADVANCED_QUALITY_OF_SERVICE;
struct _SECURITY_ATTRIBUTES;
struct _SECURITY_DESCRIPTOR;
struct _SECURITY_DESCRIPTOR_RELATIVE;
enum _SECURITY_IMPERSONATION_LEVEL;
struct _SECURITY_QUALITY_OF_SERVICE;
struct _SECURITY_SEED_AND_LENGTH;
struct _SECURITY_TOKEN_AUDIT_DATA;
struct _SECURITY_TOKEN_PROXY_DATA;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct _SEMAPHORE_BASIC_INFORMATION;
enum _SEMAPHORE_INFORMATION_CLASS;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW;
struct _SERVICE_DELAYED_AUTO_START_INFO;
struct _SERVICE_DESCRIPTIONA;
struct _SERVICE_DESCRIPTIONW;
struct _SERVICE_FAILURE_ACTIONSA;
struct _SERVICE_FAILURE_ACTIONSW;
struct _SERVICE_FAILURE_ACTIONS_FLAG;
struct _SERVICE_NOTIFY_1;
struct _SERVICE_NOTIFY_2A;
struct _SERVICE_NOTIFY_2W;
struct _SERVICE_PRESHUTDOWN_INFO;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW;
struct _SERVICE_SID_INFO;
struct _SERVICE_STATUS;
struct _SERVICE_STATUS_PROCESS;
struct _SERVICE_TABLE_ENTRYA;
struct _SERVICE_TABLE_ENTRYW;
struct _SE_IMPERSONATION_STATE;
enum _SE_OBJECT_TYPE;
struct _SHCREATEPROCESSINFOW;
struct _SHELLEXECUTEINFOA;
struct _SHELLEXECUTEINFOW;
struct _SHFILEINFOA;
struct _SHFILEINFOW;
struct _SHFILEOPSTRUCTA;
struct _SHFILEOPSTRUCTW;
struct _SHITEMID;
struct _SHNAMEMAPPINGA;
struct _SHNAMEMAPPINGW;
struct _SHORT_SIZEDARR;
struct _SHQUERYRBINFO;
struct _SHRINK_VOLUME_INFORMATION;
enum _SHRINK_VOLUME_REQUEST_TYPES;
struct _SHSTOCKICONINFO;
enum _SHUTDOWN_ACTION;
struct _SID;
struct _SID_AND_ATTRIBUTES;
struct _SID_AND_ATTRIBUTES_HASH;
struct _SID_IDENTIFIER_AUTHORITY;
enum _SID_NAME_USE;
struct _SINGLE_LIST_ENTRY;
struct _SI_COPYFILE;
union _SLIST_HEADER;
struct _SL_KMEM_CACHE;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _SMALL_RECT;
struct _SOURCEFILE;
struct _SOURCEFILEW;
enum _SPACTION;
struct _SPC_FINANCIAL_CRITERIA;
struct _SPC_IMAGE;
struct _SPC_INDIRECT_DATA_CONTENT;
struct _SPC_PE_IMAGE_DATA;
struct _SPC_SERIALIZED_OBJECT;
struct _SPC_SP_AGENCY_INFO;
struct _SPC_SP_OPUS_INFO;
struct _SPC_STATEMENT_TYPE;
enum _SPTEXT;
struct _SQM_STREAM_ENTRY;
struct _SRCCODEINFO;
struct _SRCCODEINFOW;
struct _SSerializationHeader;
struct _STARTUPINFOA;
struct _STARTUPINFOEXA;
struct _STARTUPINFOEXW;
struct _STARTUPINFOW;
enum _STREAM_INFO_LEVELS;
struct _STRING;
struct _STRING32;
struct _STRING64;
enum _SUITE_TYPE;
struct _SYMBOL_INFO;
struct _SYMBOL_INFOW;
struct _SYMBOL_INFO_PACKAGE;
struct _SYMBOL_INFO_PACKAGEW;
struct _SYSDBG_BUS_DATA;
enum _SYSDBG_COMMAND;
struct _SYSDBG_CONTROL_SPACE;
struct _SYSDBG_IO_SPACE;
struct _SYSDBG_MSR;
struct _SYSDBG_PHYSICAL;
struct _SYSDBG_TRIAGE_DUMP;
struct _SYSDBG_VIRTUAL;
struct _SYSTEMTIME;
struct _SYSTEM_ALARM_ACE;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
struct _SYSTEM_ALARM_OBJECT_ACE;
struct _SYSTEM_AUDIT_ACE;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct _SYSTEM_BASIC_INFORMATION;
struct _SYSTEM_BIGPOOL_ENTRY;
struct _SYSTEM_BIGPOOL_INFORMATION;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
struct _SYSTEM_CALL_COUNT_INFORMATION;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
struct _SYSTEM_DEVICE_INFORMATION;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
struct _SYSTEM_FILECACHE_INFORMATION;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct _SYSTEM_FLAGS_INFORMATION;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct _SYSTEM_HOTPATCH_CODE_INFORMATION;
struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
struct _SYSTEM_INFO;
enum _SYSTEM_INFORMATION_CLASS;
struct _SYSTEM_INTERRUPT_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct _SYSTEM_LOOKASIDE_INFORMATION;
struct _SYSTEM_MANDATORY_LABEL_ACE;
enum _SYSTEM_MEMORY_LIST_COMMAND;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _SYSTEM_NUMA_INFORMATION;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
struct _SYSTEM_OBJECT_INFORMATION;
struct _SYSTEM_PAGEFILE_INFORMATION;
struct _SYSTEM_PERFORMANCE_INFORMATION;
struct _SYSTEM_POOLTAG;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _SYSTEM_POOL_ENTRY;
struct _SYSTEM_POOL_INFORMATION;
struct _SYSTEM_POWER_INFORMATION;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _SYSTEM_POWER_POLICY;
enum _SYSTEM_POWER_STATE;
struct _SYSTEM_POWER_STATE_CONTEXT;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _SYSTEM_POWER_STATUS;
struct _SYSTEM_PREFETCH_OPTIONS;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
struct _SYSTEM_PREFETCH_STATS;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct _SYSTEM_PROCESSOR_INFORMATION;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct _SYSTEM_PROCESS_ID_INFORMATION;
struct _SYSTEM_PROCESS_INFORMATION;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
struct _SYSTEM_REF_TRACE_INFORMATION;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct _SYSTEM_THREAD_INFORMATION;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
struct _SYSTEM_VA_LIST_INFORMATION;
enum _SYSTEM_VA_TYPE;
struct _SYSTEM_VDM_INSTEMUL_INFO;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct _SYSTEM_VERIFIER_ISSUE;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
enum _SecurityOptionsBitness;
enum _SecurityOptionsDisposition;
enum _TABLE_SEARCH_RESULT;
struct _TAPE_CREATE_PARTITION;
enum _TAPE_DRIVE_PROBLEM_TYPE;
struct _TAPE_ERASE;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct _TAPE_GET_POSITION;
struct _TAPE_PREPARE;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct _TAPE_SET_POSITION;
struct _TAPE_WMI_OPERATIONS;
struct _TAPE_WRITE_MARKS;
struct _TEB;
struct _TEB_ACTIVE_FRAME;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
struct _TEB_ACTIVE_FRAME_EX;
enum _THDTYPE;
enum _THREADINFOCLASS;
struct _THREAD_BASIC_INFORMATION;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct _THREAD_TEB_INFORMATION;
struct _THREAD_TLS_INFORMATION;
enum _THREAD_WRITE_FLAGS;
struct _TIMER_BASIC_INFORMATION;
enum _TIMER_INFORMATION_CLASS;
enum _TIMER_TYPE;
struct _TIME_DYNAMIC_ZONE_INFORMATION;
struct _TIME_FIELDS;
struct _TIME_ZONE_INFORMATION;
struct _TI_FINDCHILDREN_PARAMS;
struct _TOKEN_ACCESS_INFORMATION;
struct _TOKEN_AUDIT_POLICY;
struct _TOKEN_CONTROL;
struct _TOKEN_DEFAULT_DACL;
struct _TOKEN_ELEVATION;
enum _TOKEN_ELEVATION_TYPE;
struct _TOKEN_GROUPS;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
enum _TOKEN_INFORMATION_CLASS;
struct _TOKEN_LINKED_TOKEN;
struct _TOKEN_MANDATORY_LABEL;
struct _TOKEN_MANDATORY_POLICY;
struct _TOKEN_ORIGIN;
struct _TOKEN_OWNER;
struct _TOKEN_PRIMARY_GROUP;
struct _TOKEN_PRIVILEGES;
struct _TOKEN_SOURCE;
struct _TOKEN_STATISTICS;
enum _TOKEN_TYPE;
struct _TOKEN_USER;
struct _TPP_THREAD_DATA_CALLBACK;
struct _TP_ALPC;
struct _TP_CALLBACK_ENVIRON;
struct _TP_CALLBACK_INSTANCE;
struct _TP_CLEANUP_GROUP;
struct _TP_DIRECT;
struct _TP_IO;
enum _TP_LOG_LEVEL;
struct _TP_POOL;
struct _TP_TASK;
struct _TP_TASK_CALLBACKS;
struct _TP_TIMER;
enum _TP_TRACE_TYPE;
struct _TP_WAIT;
struct _TP_WORK;
struct _TRACE_GUID_REGISTRATION;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
struct _TRANSACTION_BIND_INFORMATION;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
struct _TRANSACTION_ENLISTMENT_PAIR;
enum _TRANSACTION_INFORMATION_CLASS;
struct _TRANSACTION_LIST_ENTRY;
struct _TRANSACTION_LIST_INFORMATION;
struct _TRANSACTION_NOTIFICATION;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
enum _TRANSACTION_OUTCOME;
struct _TRANSACTION_PROPERTIES_INFORMATION;
enum _TRANSACTION_STATE;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct _TRIPLE_LIST;
struct _TRIPLE_LIST_ENTRY;
struct _TRIPLE_LIST_ITERATOR;
struct _TRIVERTEX;
enum _TRUSTEE_FORM;
enum _TRUSTEE_TYPE;
struct _TRUSTEE_W;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _TXFS_GET_METADATA_INFO_OUT;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _TXFS_LIST_TRANSACTIONS;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _TXFS_MODIFY_RM;
struct _TXFS_QUERY_RM_INFORMATION;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _TXFS_SAVEPOINT_INFORMATION;
struct _TXFS_START_RM_INFORMATION;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _TXFS_WRITE_BACKUP_INFORMATION;
struct _TypeDescriptor;
union _ULARGE_INTEGER;
struct _UNICODE_PREFIX_TABLE;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct _UNICODE_STRING;
struct _UNIQUE_PROCESS_INFORMATION;
struct _UNIVERSAL_NAME_INFOA;
struct _UNIVERSAL_NAME_INFOW;
struct _UNLOAD_DLL_DEBUG_INFO;
enum _URLZONEREG;
struct _USER_MARSHAL_CB;
enum _USER_MARSHAL_CB_TYPE;
struct _USER_MARSHAL_ROUTINE_QUADRUPLE;
struct _UUID_VECTOR;
struct _VARIABLE_NAME;
struct _VARIABLE_NAME_AND_VALUE;
struct _VIDEOPARAMETERS;
struct _VM_COUNTERS;
struct _VM_COUNTERS_EX;
struct _VOLUME_COMPRESSION_STATE;
enum _WAIT_TYPE;
enum _WATCHDOG_HANDLER_ACTION;
enum _WATCHDOG_INFORMATION_CLASS;
struct _WGLSWAP;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _WIN32_FIND_DATAA;
struct _WIN32_FIND_DATAW;
struct _WIN32_FIND_STREAM_DATA;
struct _WIN32_STREAM_ID;
struct _WINDOWS_OS_OPTIONS;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct _WINTRUST_DATA;
struct _WIN_CERTIFICATE;
struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA;
struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY;
struct _WIN_TRUST_SUBJECT_FILE;
struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
struct _WNODE_HEADER;
struct _WORD_BLOB;
enum _WORKERFACTORYINFOCLASS;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct _WOW64_CONTEXT;
struct _WOW64_FLOATING_SAVE_AREA;
enum _WOW64_FUNCTION_CODE64;
enum _WPP_FLAG_LEN_ENUM;
struct _WPP_TRACE_CONTROL_BLOCK;
struct _WPP_WIN2K_CONTROL_BLOCK;
struct _Wx86TIB;
struct _Wx86ThreadState;
struct _X86_CALL_FRAME;
struct _XMIT_ROUTINE_QUINTUPLE;
struct _ZONEATTRIBUTES;
struct __BCRYPT_KEY_LENGTHS_STRUCT;
struct __CRT_LIST_ENTRY;
struct __GENERIC_BINDING_INFO;
enum __MIDL_IActivatorCustomMarshal_0001;
enum __MIDL_IBindStatusCallback_0001;
enum __MIDL_IBindStatusCallback_0002;
enum __MIDL_IBindStatusCallback_0003;
enum __MIDL_IBindStatusCallback_0004;
enum __MIDL_IBindStatusCallback_0005;
enum __MIDL_IBindStatusCallback_0006;
struct __MIDL_ICallFrame_0001;
struct __MIDL_ICallFrame_0002;
enum __MIDL_ICallFrame_0003;
struct __MIDL_ICallFrame_0004;
enum __MIDL_ICodeInstall_0001;
enum __MIDL_IDLLHost_0001;
enum __MIDL_IFlyout_0001;
enum __MIDL_IInternetSecurityManager_0001;
enum __MIDL_IInternetSecurityManager_0002;
enum __MIDL_IInternetSecurityManager_0003;
enum __MIDL_IInternetZoneManager_0001;
enum __MIDL_IInternetZoneManager_0002;
struct __MIDL_ILocalObjectExporter_0001;
struct __MIDL_ILocalObjectExporter_0002;
struct __MIDL_ILocalObjectExporter_0003;
struct __MIDL_ILocalObjectExporter_0004;
enum __MIDL_IMonikerProp_0001;
enum __MIDL_IUri_0001;
enum __MIDL_IUri_0002;
struct __MIDL_XmitDefs_0001;
enum __MIDL___MIDL_itf_activate_0000_0010_0001;
enum __MIDL___MIDL_itf_activate_0000_0010_0002;
enum __MIDL___MIDL_itf_activate_0000_0010_0003;
struct __MIDL___MIDL_itf_activate_0000_0010_0004;
enum __MIDL___MIDL_itf_immact_0000_0002_0002;
enum __MIDL___MIDL_itf_objidl_0000_0046_0001;
enum __MIDL___MIDL_itf_objidl_0000_0046_0002;
enum __MIDL___MIDL_itf_objidl_0000_0047_0001;
enum __MIDL___MIDL_itf_objidl_0000_0047_0002;
enum __MIDL___MIDL_itf_odeth_0000_0001_0001;
enum __MIDL___MIDL_itf_privact_0000_0009_0001;
enum __MIDL___MIDL_itf_shdeprecated_0000_0006_0001;
enum __MIDL___MIDL_itf_structuredquery_0000_0013_0001;
struct __MIDL___MIDL_itf_wtypes_0000_0001_0001;
union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005;
struct __NCRYPT_SUPPORTED_LENGTHS;
struct __NCRYPT_UI_POLICY;
struct __NCRYPT_UI_POLICY_BLOB;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
enum __enative_startup_state;
struct __lc_time_data;
union __m128;
union __m64;
struct __s_GUID;
struct _acpickl_MIDL_EXPR_FORMAT_STRING;
struct _acpickl_MIDL_PROC_FORMAT_STRING;
struct _acpickl_MIDL_TYPE_FORMAT_STRING;
class _bstr_t;
class _bstr_t::Data_t;
struct _callframeinternal_MIDL_PROC_FORMAT_STRING;
struct _callframeinternal_MIDL_TYPE_FORMAT_STRING;
class _com_error;
enum _TAG_UNNAMED_35;
struct _complex;
struct _cpinfo;
struct _cpinfoexA;
struct _cpinfoexW;
struct _currencyfmtA;
struct _currencyfmtW;
struct _custmact_MIDL_PROC_FORMAT_STRING;
struct _custmact_MIDL_TYPE_FORMAT_STRING;
struct _customREMOTE_REPLY_SCM_INFO;
struct _customREMOTE_REQUEST_SCM_INFO;
struct _devicemodeA;
struct _devicemodeW;
struct _div_t;
struct _exception;
struct _heapinfo;
struct _iobuf;
struct _irot_MIDL_PROC_FORMAT_STRING;
struct _irot_MIDL_TYPE_FORMAT_STRING;
struct _lclor_MIDL_PROC_FORMAT_STRING;
struct _lclor_MIDL_TYPE_FORMAT_STRING;
struct _ldiv_t;
struct _mega_MIDL_EXPR_FORMAT_STRING;
struct _mega_MIDL_PROC_FORMAT_STRING;
struct _mega_MIDL_TYPE_FORMAT_STRING;
struct _nlsversioninfo;
struct _nlsversioninfoex;
struct _numberfmtA;
struct _numberfmtW;
enum _operators;
struct _orcb_MIDL_PROC_FORMAT_STRING;
struct _orcb_MIDL_TYPE_FORMAT_STRING;
struct _prop_MIDL_EXPR_FORMAT_STRING;
struct _prop_MIDL_PROC_FORMAT_STRING;
struct _prop_MIDL_TYPE_FORMAT_STRING;
struct _remoteMETAFILEPICT;
struct _s__CatchableType;
struct _s__CatchableTypeArray;
struct _s__RTTIBaseClassArray;
struct _s__RTTIBaseClassDescriptor2;
struct _s__RTTIClassHierarchyDescriptor;
struct _s__RTTICompleteObjectLocator;
struct _s__ThrowInfo;
struct _scm_MIDL_PROC_FORMAT_STRING;
struct _scm_MIDL_TYPE_FORMAT_STRING;
struct _srgtprot_MIDL_PROC_FORMAT_STRING;
struct _srgtprot_MIDL_TYPE_FORMAT_STRING;
struct _stat;
struct _stat32;
struct _stat32i64;
struct _stat64;
struct _stat64i32;
struct _stati64;
struct _tagADDRESS;
struct _tagADDRESS64;
struct _tagBINDINFO;
struct _tagCODEBASEHOLD;
struct _tagDATAINFO;
struct _tagDdeClassInfo;
struct _tagHIT_LOGGING_INFO;
enum _tagINTERNETFEATURELIST;
enum _tagOIBDG_FLAGS;
enum _tagPARSEACTION;
enum _tagPI_FLAGS;
struct _tagPROTOCOLDATA;
struct _tagPROTOCOLFILTERDATA;
enum _tagPSUACTION;
enum _tagQUERYOPTION;
struct _tagRemBINDINFO;
struct _tagSCtxListIndex;
enum _tagSHARE_EVENT;
enum _tagSHARE_MODE;
struct _tagSOFTDISTINFO;
struct _tagSTACKFRAME;
struct _tagSTACKFRAME64;
struct _tagStartParam;
struct _tagpropertykey;
struct _userBITMAP;
struct _userCLIPFORMAT;
union _userCLIPFORMAT::__MIDL_IWinTypes_0001;
struct _userFLAG_STGMEDIUM;
struct _userHBITMAP;
union _userHBITMAP::__MIDL_IWinTypes_0007;
struct _userHENHMETAFILE;
union _userHENHMETAFILE::__MIDL_IWinTypes_0006;
struct _userHGLOBAL;
union _userHGLOBAL::__MIDL_IWinTypes_0003;
struct _userHMETAFILE;
union _userHMETAFILE::__MIDL_IWinTypes_0004;
struct _userHMETAFILEPICT;
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005;
struct _userHPALETTE;
union _userHPALETTE::__MIDL_IWinTypes_0008;
struct _userSTGMEDIUM;
struct _userSTGMEDIUM::_STGMEDIUM_UNION;
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
class _variant_t;
struct _wfinddata32_t;
struct _wfinddata32i64_t;
struct _wfinddata64_t;
struct _wfinddata64i32_t;
struct _wfinddata_t;
struct _wfinddatai64_t;
struct _wireBRECORD;
struct _wireSAFEARRAY;
struct _wireSAFEARRAY_UNION;
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_BSTR;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_HAVEIID;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_VARIANT;
struct _wireVARIANT;
struct _xml_error;
enum eVSAEventFlags;
class ios;
enum _TAG_UNNAMED_36;
enum _TAG_UNNAMED_37;
enum ios::io_state;
enum ios::open_mode;
enum ios::seek_dir;
class iostream;
class istream;
class istream_withassign;
struct lconv;
struct localeinfo_struct;
class ostream;
class ostream_withassign;
struct pUnkListElement;
struct provider_info;
struct pvalueA;
struct pvalueW;
struct stat;
struct std::nothrow_t;
class streambuf;
struct tagABORTPATH;
struct tagACCEL;
struct tagACCESSTIMEOUT;
struct tagACL_DESCRIPTOR;
struct tagACTCTXA;
struct tagACTCTXW;
struct tagACTCTX_SECTION_KEYED_DATA;
struct tagACTCTX_SECTION_KEYED_DATA_2600;
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
enum tagACTIVATEFLAGS;
enum tagACTIVATION_FLAGS;
enum tagACTIVATION_STAGE;
enum tagADVF;
struct tagALTTABINFO;
struct tagANIMATIONINFO;
enum tagAPTKIND;
struct tagARRAYDESC;
enum tagASSOCIATIONLEVEL;
enum tagASSOCIATIONTYPE;
enum tagASYNCQUERY_STATUS;
struct tagAUDIODESCRIPTION;
enum tagAWSCTYPE;
struct tagAXESLISTA;
struct tagAXESLISTW;
struct tagAXISINFOA;
struct tagAXISINFOW;
struct tagActivationContextInfoData;
enum tagApplicationType;
struct tagAspectInfo;
enum tagAspectInfoFlag;
enum tagBANDSITECID;
union tagBINDPTR;
enum tagBINDSPEED;
enum tagBINDSTATUS;
enum tagBINDSTRING;
enum tagBIND_FLAGS;
struct tagBIND_OPTS;
struct tagBIND_OPTS2;
struct tagBIND_OPTS3;
struct tagBITMAP;
struct tagBITMAPCOREHEADER;
struct tagBITMAPCOREINFO;
struct tagBITMAPFILEHEADER;
struct tagBITMAPINFO;
struct tagBITMAPINFOHEADER;
struct tagBLOB;
enum tagBPASCODE;
struct tagBSTRBLOB;
struct tagBYREFHDR;
struct tagBYVALHDR;
struct tagBinaryParam;
struct tagCABOOL;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCAC;
struct tagCACLIPDATA;
struct tagCACLSID;
struct tagCACY;
struct tagCADATE;
struct tagCADBL;
struct tagCADWORD;
struct tagCAFILETIME;
struct tagCAFLT;
struct tagCAH;
struct tagCAI;
struct tagCAL;
enum tagCALLCATEGORY;
enum tagCALLCONV;
enum tagCALLSTATE;
enum tagCALLTYPE;
struct tagCALPOLESTR;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCANDIDATEFORM;
struct tagCANDIDATELIST;
struct tagCAPROPVARIANT;
struct tagCASCODE;
struct tagCATEGORYINFO;
struct tagCAUB;
struct tagCAUH;
struct tagCAUI;
struct tagCAUL;
struct tagCAUUID;
struct tagCBTACTIVATESTRUCT;
struct tagCBT_CREATEWNDA;
struct tagCBT_CREATEWNDW;
enum tagCCF_FLAGS;
struct tagCFEntry;
enum tagCHANGEKIND;
struct tagCHARSETINFO;
struct tagCIEXYZ;
struct tagCInterfaceProxyHeader;
struct tagCInterfaceProxyVtbl;
struct tagCInterfaceStubHeader;
struct tagCInterfaceStubVtbl;
struct tagCLEANLOCALSTORAGE;
struct tagCLIENTCREATESTRUCT;
struct tagCLIPDATA;
enum tagCLIPWINDOWFLAGS;
enum tagCLIPWNDFLAGS;
enum tagCLSCTX;
enum tagCMLFLAGS;
enum tagCOINIT;
struct tagCOLORADJUSTMENT;
struct tagCOLORCORRECTPALETTE;
struct tagCOLORMATCHTOTARGET;
enum tagCOLUMN_VISIBILITY;
struct tagCOMBOBOXINFO;
enum tagCOMCALLTYPE;
struct tagCOMPAREITEMSTRUCT;
struct tagCOMPOSITIONFORM;
enum tagCOMSD;
struct tagCOMVERSION;
enum tagCONDITION_OPERATION;
enum tagCONDITION_TYPE;
enum tagCONFIRMATIONRESPONSE;
struct tagCONNECTDATA;
enum tagCONTEXTEVENT;
struct tagCONTEXTHEADER;
struct tagCONTROLINFO;
struct tagCONVCONTEXT;
struct tagCONVINFO;
struct tagCOPYDATASTRUCT;
enum tagCOWAIT_FLAGS;
enum tagCPFLAGS;
struct tagCREATESTRUCTA;
struct tagCREATESTRUCTW;
struct tagCSPLATFORM;
struct tagCStdPSFactoryBuffer;
enum tagCTRLINFO;
struct tagCTXCOMMONHDR;
struct tagCTXVERSION;
struct tagCURSORINFO;
struct tagCURSORSHAPE;
struct tagCUSTDATA;
struct tagCUSTDATAITEM;
struct tagCWPRETSTRUCT;
struct tagCWPSTRUCT;
union tagCY;
struct tagCallEntry;
enum tagCallType;
enum tagCoModuleType;
struct tagComCallData;
struct tagContextProperty;
struct tagContextStackNode;
struct tagContexts;
struct tagCustomHeader;
struct tagCustomOpaqueData;
struct tagCustomPrivResolverInfo;
struct tagCustomPrivScmInfo;
enum tagDATADIR;
struct tagDATAELEMENT;
enum tagDCOM_CALL_STATE;
struct tagDCOM_ENDPOINT;
struct tagDDECALLDATA;
struct tagDDEDISPATCHDATA;
struct tagDDEML_MSG_HOOK_DATA;
struct tagDEBUGHOOKINFO;
struct tagDEC;
struct tagDELETEITEMSTRUCT;
enum tagDESCKIND;
struct tagDESIGNVECTOR;
enum tagDHFlags;
struct tagDIBSECTION;
struct tagDICTIONARY;
enum tagDIMENSION;
enum tagDISCARDCACHE;
enum tagDISCTYPE;
struct tagDISPATCHDATA;
struct tagDISPPARAMS;
enum tagDLFlags;
struct tagDOCDISPATCHDATA;
enum tagDOMNodeType;
enum tagDRAGOP;
struct tagDRAWITEMSTRUCT;
struct tagDRAWTEXTPARAMS;
struct tagDROPSTRUCT;
struct tagDUALSTRINGARRAY;
enum tagDVASPECT;
enum tagDVASPECT2;
struct tagDVTARGETDEVICE;
struct tagELEMDESC;
enum tagEMFWRITETYPE;
struct tagEMR;
struct tagEMRALPHABLEND;
struct tagEMRANGLEARC;
struct tagEMRARC;
struct tagEMRBITBLT;
struct tagEMRCREATEBRUSHINDIRECT;
struct tagEMRCREATECOLORSPACE;
struct tagEMRCREATECOLORSPACEW;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
struct tagEMRCREATEMONOBRUSH;
struct tagEMRCREATEPALETTE;
struct tagEMRCREATEPEN;
struct tagEMRELLIPSE;
struct tagEMREOF;
struct tagEMREXCLUDECLIPRECT;
struct tagEMREXTCREATEFONTINDIRECTW;
struct tagEMREXTCREATEPEN;
struct tagEMREXTESCAPE;
struct tagEMREXTFLOODFILL;
struct tagEMREXTSELECTCLIPRGN;
struct tagEMREXTTEXTOUTA;
struct tagEMRFILLPATH;
struct tagEMRFILLRGN;
struct tagEMRFORMAT;
struct tagEMRFRAMERGN;
struct tagEMRGDICOMMENT;
struct tagEMRGLSBOUNDEDRECORD;
struct tagEMRGLSRECORD;
struct tagEMRGRADIENTFILL;
struct tagEMRINVERTRGN;
struct tagEMRLINETO;
struct tagEMRMASKBLT;
struct tagEMRMODIFYWORLDTRANSFORM;
struct tagEMRNAMEDESCAPE;
struct tagEMROFFSETCLIPRGN;
struct tagEMRPIXELFORMAT;
struct tagEMRPLGBLT;
struct tagEMRPOLYDRAW;
struct tagEMRPOLYDRAW16;
struct tagEMRPOLYLINE;
struct tagEMRPOLYLINE16;
struct tagEMRPOLYPOLYLINE;
struct tagEMRPOLYPOLYLINE16;
struct tagEMRPOLYTEXTOUTA;
struct tagEMRRESIZEPALETTE;
struct tagEMRRESTOREDC;
struct tagEMRROUNDRECT;
struct tagEMRSCALEVIEWPORTEXTEX;
struct tagEMRSELECTCLIPPATH;
struct tagEMRSELECTOBJECT;
struct tagEMRSELECTPALETTE;
struct tagEMRSETARCDIRECTION;
struct tagEMRSETCOLORADJUSTMENT;
struct tagEMRSETCOLORSPACE;
struct tagEMRSETDIBITSTODEVICE;
struct tagEMRSETICMPROFILE;
struct tagEMRSETMAPPERFLAGS;
struct tagEMRSETMITERLIMIT;
struct tagEMRSETPALETTEENTRIES;
struct tagEMRSETPIXELV;
struct tagEMRSETTEXTCOLOR;
struct tagEMRSETVIEWPORTEXTEX;
struct tagEMRSETVIEWPORTORGEX;
struct tagEMRSETWORLDTRANSFORM;
struct tagEMRSTRETCHBLT;
struct tagEMRSTRETCHDIBITS;
struct tagEMRTEXT;
struct tagEMRTRANSPARENTBLT;
struct tagENHMETAHEADER;
struct tagENHMETARECORD;
struct tagENTRY;
struct tagENUMLOGFONTA;
struct tagENUMLOGFONTEXA;
struct tagENUMLOGFONTEXDVA;
struct tagENUMLOGFONTEXDVW;
struct tagENUMLOGFONTEXW;
struct tagENUMLOGFONTW;
struct tagENUMTEXTMETRICA;
struct tagENUMTEXTMETRICW;
struct tagENVOYDATA;
enum tagEOLE_AUTHENTICATION_CAPABILITIES;
struct tagEVENTMSG;
struct tagEXCEPINFO;
enum tagEXTCONN;
struct tagEXTLOGFONTA;
struct tagEXTLOGFONTW;
struct tagEXTLOGPEN;
struct tagElement;
struct tagEntryHeader;
enum tagEventLogModes;
enum tagEventLogSD;
enum tagExtendedErrorParamTypes;
struct tagExtentInfo;
enum tagExtentMode;
enum tagFFFP_MODE;
enum tagFILE_USAGE_TYPE;
struct tagFILTERKEYS;
enum tagFOCOXID;
struct tagFONTDESC;
struct tagFONTSIGNATURE;
struct tagFORMATETC;
struct tagFORMATETC64;
struct tagFORMATIDOFFSET;
enum tagFRSM_REPLICA_OP;
struct tagFUNCDESC;
enum tagFUNCFLAGS;
enum tagFUNCKIND;
struct tagGCP_RESULTSA;
struct tagGCP_RESULTSW;
enum tagGETCLSIDFLAGS;
enum tagGET_PROPERTY_STORE_TYPE;
struct tagGIPEntry;
struct tagGLYPHSET;
enum tagGUIDKIND;
struct tagGUITHREADINFO;
struct tagHANDLETABLE;
struct tagHARDWAREHOOKSTRUCT;
struct tagHARDWAREINPUT;
struct tagHDIBFILEHDR;
struct tagHELPINFO;
struct tagHELPWININFOA;
struct tagHELPWININFOW;
struct tagHIGHCONTRASTA;
struct tagHIGHCONTRASTW;
enum tagHITRESULT;
enum tagHOSTDLLFLAGS;
struct tagHSZPAIR;
struct tagHW_PROFILE_INFOA;
struct tagHW_PROFILE_INFOW;
struct tagICEXYZTRIPLE;
struct tagICONMETRICSA;
struct tagICONMETRICSW;
struct tagIDLDESC;
enum tagIDLFLAGS;
struct tagIFaceSvrRefs;
struct tagIMECHARPOSITION;
struct tagIMEMENUITEMINFOA;
struct tagIMEMENUITEMINFOW;
struct tagINPUT;
enum tagINSTALLMESSAGE;
enum tagINSTALLUILEVEL;
struct tagINTERFACEDATA;
struct tagINTERFACEINFO;
enum tagINTERVAL_LIMIT_KIND;
enum tagINVOKEKIND;
struct tagIPIDEntry;
enum tagIPIDFLAGS;
struct tagIPIDTmp;
enum tagITEM_CHANGE_TYPE;
struct tagI_RpcProxyCallbackInterface;
struct tagIncomingCallData;
struct tagInitializeSpyNode;
struct tagInstanceInfoData;
struct tagInstantiationInfoData;
struct tagInterfaceData;
struct tagKBDLLHOOKSTRUCT;
struct tagKERNINGPAIR;
struct tagKEYBDINPUT;
enum tagKF_CATEGORY;
struct tagKNOWNFOLDER_DEFINITION;
struct tagKnownSystemIIDs;
struct tagLASTINPUTINFO;
struct tagLAYERPLANEDESCRIPTOR;
struct tagLC_ID;
enum tagLIBFLAGS;
struct tagLICINFO;
enum tagLOADSTATE;
struct tagLOCALESIGNATURE;
enum tagLOCALFLAG;
enum tagLOCKTYPE;
struct tagLOGBRUSH;
struct tagLOGBRUSH32;
struct tagLOGCOLORSPACEA;
struct tagLOGCOLORSPACEW;
struct tagLOGFONTA;
struct tagLOGFONTW;
struct tagLOGPALETTE;
struct tagLOGPEN;
enum tagLocalServerType;
struct tagLocationInfoData;
enum tagMARKUPLINKTEXT;
enum tagMARKUPMESSAGE;
enum tagMARKUPSIZE;
struct tagMDICREATESTRUCTA;
struct tagMDICREATESTRUCTW;
struct tagMDINEXTMENU;
struct tagMEASUREITEMSTRUCT;
enum tagMEMCTX;
struct tagMENUBARINFO;
struct tagMENUGETOBJECTINFO;
struct tagMENUINFO;
struct tagMENUITEMINFOA;
struct tagMENUITEMINFOW;
enum tagMENUPOPUPSELECT;
struct tagMETAFILEPICT;
struct tagMETAHEADER;
struct tagMETARECORD;
struct tagMETHODDATA;
struct tagMINIMIZEDMETRICS;
struct tagMINMAXINFO;
struct tagMInterfacePointer;
enum tagMKREDUCE;
enum tagMKSYS;
struct tagMONCBSTRUCT;
struct tagMONCONVSTRUCT;
struct tagMONERRSTRUCT;
struct tagMONHSZSTRUCTA;
struct tagMONHSZSTRUCTW;
struct tagMONITORINFO;
struct tagMONITORINFOEXA;
struct tagMONITORINFOEXW;
struct tagMONLINKSTRUCT;
struct tagMONMSGSTRUCT;
struct tagMOUSEHOOKSTRUCT;
struct tagMOUSEHOOKSTRUCTEX;
struct tagMOUSEINPUT;
struct tagMOUSEKEYS;
struct tagMOUSEMOVEPOINT;
struct tagMSG;
struct tagMSGBOXPARAMSA;
struct tagMSGBOXPARAMSW;
enum tagMSHCTX;
enum tagMSHLFLAGS;
enum tagMSIINSTALLCONTEXT;
enum tagMSIPATCHSTATE;
struct tagMSLLHOOKSTRUCT;
struct tagMULTIKEYHELPA;
struct tagMULTIKEYHELPW;
struct tagMULTI_QI;
struct tagMainHeader;
struct tagMethodInfo;
struct tagNCCALCSIZE_PARAMS;
struct tagNC_ADDRESS;
struct tagNEWTEXTMETRICA;
struct tagNEWTEXTMETRICEXA;
struct tagNEWTEXTMETRICEXW;
struct tagNEWTEXTMETRICW;
struct tagNFFCONTROLBITS;
struct tagNMHDR;
struct tagNONCLIENTMETRICSA;
struct tagNONCLIENTMETRICSW;
struct tagOBJECTDESCRIPTOR;
enum tagOBJFLAGS;
struct tagOBJREF;
struct tagOBJREFDATA;
struct tagOCPFIPARAMS;
struct tagOIDData;
struct tagOIFI;
struct tagOLE1DISPATCHDATA;
enum tagOLECLOSE;
enum tagOLECONTF;
enum tagOLEDCFLAGS;
enum tagOLEGETMONIKER;
enum tagOLELINKBIND;
struct tagOLEMENU;
struct tagOLEMENUITEM;
enum tagOLEMISC;
struct tagOLEPRESSTMHDR;
enum tagOLERENDER;
enum tagOLETLSFLAGS;
enum tagOLEUPDATE;
struct tagOLEVERB;
enum tagOLEVERBATTRIB;
enum tagOLEWHICHMK;
enum tagORFLAG;
struct tagORPCTHAT;
struct tagORPCTHIS;
struct tagORPC_EXTENT;
struct tagORPC_EXTENT_ARRAY;
enum tagORT;
enum tagOXIDFLAGS;
struct tagOXID_INFO;
struct tagOleMenuGroupWidths;
struct tagOpaqueData;
struct tagOutgoingActivationData;
struct tagOutgoingCallData;
struct tagPAINTSTRUCT;
struct tagPALETTEENTRY;
struct tagPANOSE;
struct tagPARAMDATA;
struct tagPARAMDESC;
struct tagPARAMDESCEX;
enum tagPATCHOP;
struct tagPCB;
struct tagPELARRAY;
enum tagPENDINGMSG;
enum tagPENDINGTYPE;
enum tagPGALLOCATORFLAGS;
struct tagPICTDESC;
struct tagPIDData;
struct tagPIXELFORMATDESCRIPTOR;
enum tagPKA_FLAGS;
struct tagPLACEABLEMETAHEADER;
struct tagPOINT;
enum tagPOINTERINACTIVE;
struct tagPOINTF;
struct tagPOINTFX;
struct tagPOINTS;
struct tagPOLYTEXTA;
struct tagPOLYTEXTW;
struct tagPROPBAG2;
enum tagPROPBAG2_TYPE;
enum tagPROPCTL_FLAGS;
enum tagPROPCTL_RECT_TYPE;
struct tagPROPERTYIDOFFSET;
struct tagPROPERTYSECTIONHEADER;
struct tagPROPERTYSETHEADER;
struct tagPROPERTY_INFORMATION;
struct tagPROPMARSHALHEADER;
struct tagPROPPAGEINFO;
enum tagPROPPAGESTATUS;
struct tagPROPSPEC;
struct tagPROPVARIANT;
struct tagPageEntry;
enum tagPictureAttributes;
struct tagPolicyEntry;
enum tagPreferredServerBitness;
enum tagProcessType;
enum tagPropPageOnApply;
struct tagPropsOutInfo;
struct tagProxyFileInfo;
struct tagQACONTAINER;
enum tagQACONTAINERFLAGS;
struct tagQACONTROL;
struct tagQICONTEXT;
struct tagQUERYCONTEXT;
enum tagQUERY_PARSER_MANAGER_OPTION;
struct tagRAWHID;
struct tagRAWINPUT;
struct tagRAWINPUTDEVICE;
struct tagRAWINPUTDEVICELIST;
struct tagRAWINPUTHEADER;
struct tagRAWKEYBOARD;
struct tagRAWMOUSE;
enum tagREADYSTATE;
struct tagRECONVERTSTRING;
struct tagRECT;
struct tagRECT16;
enum tagRECYCLEBIN_TYPE;
enum tagREGCLS;
struct tagREGISTERWORDA;
struct tagREGISTERWORDW;
enum tagREGKIND;
struct tagREMINTERFACEREF;
struct tagREMQIRESULT;
struct tagRGBQUAD;
struct tagRGBTRIPLE;
struct tagRID_DEVICE_INFO;
struct tagRID_DEVICE_INFO_HID;
struct tagRID_DEVICE_INFO_KEYBOARD;
struct tagRID_DEVICE_INFO_MOUSE;
struct tagRIFEntry;
enum tagROIDFLAG;
struct tagRPCOLEMESSAGE;
struct tagRPC_CALL_ATTRIBUTES_V1_A;
struct tagRPC_CALL_ATTRIBUTES_V1_W;
struct tagRPC_CALL_ATTRIBUTES_V2_A;
struct tagRPC_CALL_ATTRIBUTES_V2_W;
struct tagRPC_EE_INFO_PARAM;
struct tagRPC_ERROR_ENUM_HANDLE;
struct tagRPC_EXTENDED_ERROR_INFO;
enum tagRUNDOWN_RESULT;
struct tagRegIf;
struct tagRemBRUSH;
struct tagRemFORMATETC;
struct tagRemHBITMAP;
struct tagRemHENHMETAFILE;
struct tagRemHGLOBAL;
struct tagRemHMETAFILEPICT;
struct tagRemHPALETTE;
struct tagRemSNB;
struct tagRemSTGMEDIUM;
enum tagResourceGateId;
enum tagRpcCallClientLocality;
enum tagRpcCallType;
enum tagRpcLocalAddressFormat;
enum tagRunAsType;
struct tagSAFEARRAY;
struct tagSAFEARRAYBOUND;
struct tagSCMSA;
enum tagSCRIPTFLAGS;
struct tagSCROLLBARINFO;
struct tagSCROLLINFO;
enum tagSEARCHTEXTTYPE;
struct tagSECURITYBINDING;
struct tagSERIALIZEDPROPERTYVALUE;
struct tagSERIALKEYSA;
struct tagSERIALKEYSW;
enum tagSERVERCALL;
enum tagSERVERCALLEX;
struct tagSExtEntry;
enum tagSF_TYPE;
enum tagSHELLSEARCHCOMMAND;
enum tagSHELL_BROWSER_FRAME_SIZE_POSITION;
enum tagSHELL_SEARCH_BAND_SEARCH_STATE;
enum tagSIGDN;
struct tagSIZE;
enum tagSLGP_FLAGS;
enum tagSLR_FLAGS;
enum tagSMFLAGS;
struct tagSOAP_ACTIVATION_INFO;
struct tagSOLE_AUTHENTICATION_INFO;
struct tagSOLE_AUTHENTICATION_LIST;
struct tagSOLE_AUTHENTICATION_SERVICE;
struct tagSOUNDSENTRYA;
struct tagSOUNDSENTRYW;
struct tagSOleTlsData;
struct tagSOleTlsDataPublic;
struct tagSPSCache;
struct tagSPSChain;
struct tagSQIResult;
struct tagSRVRDISPATCHDATA;
struct tagSSID_IDENTIFIER_AUTHORITY;
struct tagSTATDATA;
enum tagSTATFLAG;
struct tagSTATPROPBAG;
struct tagSTATPROPSETSTG;
struct tagSTATPROPSTG;
struct tagSTATSTG;
enum tagSTDID_FLAGS;
enum tagSTDMSHLFLAGS;
struct tagSTDOBJREF;
enum tagSTGC;
struct tagSTGMEDIUM;
enum tagSTGMOVE;
struct tagSTGOPTIONS;
enum tagSTGTY;
struct tagSTICKYKEYS;
struct tagSTREAM_ACE;
struct tagSTREAM_ACL;
struct tagSTREAM_HEADER;
enum tagSTREAM_SEEK;
struct tagSTREAM_SID;
struct tagSTRINGBINDING;
enum tagSTRUCTURED_QUERY_MULTIOPTION;
enum tagSTRUCTURED_QUERY_PARSE_ERROR;
enum tagSTRUCTURED_QUERY_SINGLE_OPTION;
enum tagSTRUCTURED_QUERY_SYNTAX;
struct tagSTYLEBUFA;
struct tagSTYLEBUFW;
struct tagSTYLESTRUCT;
struct tagSWindowData;
enum tagSYSKIND;
struct tagScmReplyInfoData;
struct tagScmRequestInfoData;
struct tagSecurityInfoData;
enum tagShutdownType;
struct tagSpecialPropertiesData;
struct tagStdDiscData;
struct tagStdMarshalData;
struct tagStdReleaseData;
struct tagStdUnmarshalData;
struct tagStorageLayout;
struct tagTEXTMETRICA;
struct tagTEXTMETRICW;
struct tagTITLEBARINFO;
struct tagTITLEBARINFOEX;
struct tagTLIBATTR;
struct tagTLSMapEntry;
struct tagTOGGLEKEYS;
struct tagTPMPARAMS;
struct tagTRACKMOUSEEVENT;
struct tagTTPOLYCURVE;
struct tagTTPOLYGONHEADER;
enum tagTYMED;
struct tagTYPEATTR;
struct tagTYPEDESC;
enum tagTYPEFLAGS;
enum tagTYPEKIND;
enum tagTYSPEC;
enum tagThreadingModel;
enum tagUASFLAGS;
struct tagUPDATELAYEREDWINDOWINFO;
enum tagURLTEMPLATE;
enum tagURLZONE;
enum tagUSERCLASSTYPE;
struct tagUSEROBJECTFLAGS;
struct tagVARDESC;
enum tagVARFLAGS;
struct tagVARIANT;
enum tagVARKIND;
enum tagVIEWSTATUS;
struct tagVS_FIXEDFILEINFO;
struct tagVersionedStream;
struct tagWCRANGE;
struct tagWIN16BITMAP;
struct tagWIN16METAFILEPICT;
struct tagWIN16RECT;
struct tagWINDOWINFO;
struct tagWINDOWPLACEMENT;
struct tagWINDOWPOS;
struct tagWNDCLASSA;
struct tagWNDCLASSEXA;
struct tagWNDCLASSEXW;
struct tagWNDCLASSW;
struct tagWTSSESSION_NOTIFICATION;
struct tagXAptAddRefData;
struct tagXAptCallback;
struct tagXAptQIData;
struct tagXAptReleaseData;
struct tagXCtxDisconnectData;
struct tagXCtxMarshalData;
struct tagXCtxQIData;
struct tagXCtxWrapperData;
struct tagXFORM;
enum tagXFORMCOORDS;
enum tagXMLEMEM_TYPE;
struct threadlocaleinfostruct;
struct threadmbcinfostruct;
struct tm;
class type_info;
struct val_context;
struct value_entA;
struct value_entW;

typedef enum _TAG_UNNAMED_1
{
  sfImage = 0,
  sfDbg = 1,
  sfPdb = 2,
  sfMpd = 3,
  sfMax = 4,
} TAG_UNNAMED_1, *PTAG_UNNAMED_1;

typedef enum _TAG_UNNAMED_2
{
  IMETHOD_FIRST = 3,
  IMETHOD_GetTypeInfoCount = 3,
  IMETHOD_GetTypeInfo = 4,
  IMETHOD_GetIDsOfNames = 5,
  IMETHOD_Invoke = 6,
  IMETHOD_DISPATCH_MAX = 7,
  IPARAM_Invoke_DispId = 0,
  IPARAM_Invoke_Iid = 1,
  IPARAM_Invoke_Lcid = 2,
  IPARAM_Invoke_WFlags = 3,
  IPARAM_Invoke_DispParams = 4,
  IPARAM_Invoke_PVarResult = 5,
  IPARAM_Invoke_PExcepInfo = 6,
  IPARAM_Invoke_PUArgErr = 7,
} TAG_UNNAMED_2, *PTAG_UNNAMED_2;

typedef enum _TAG_UNNAMED_3
{
  AUMGR_ALLLOCAL = 1,
  AUMGR_IUNKNOWN = 2,
  AUMGR_IMULTIQI = 3,
} TAG_UNNAMED_3, *PTAG_UNNAMED_3;

typedef enum _TAG_UNNAMED_4
{
  dliStartProcessing = 0,
  dliNotePreLoadLibrary = 1,
  dliNotePreGetProcAddress = 2,
  dliFailLoadLib = 3,
  dliFailGetProc = 4,
  dliNoteEndProcessing = 5,
} TAG_UNNAMED_4, *PTAG_UNNAMED_4;

typedef enum _TAG_UNNAMED_5
{
  WPP_TRACE_OPTIONS = 43,
} TAG_UNNAMED_5, *PTAG_UNNAMED_5;

typedef enum _TAG_UNNAMED_6
{
  QIC_STATICMARSHAL = 1,
  QIC_DISCONNECTED = 2,
  QIC_ASYNC = 4,
  QIC_WEAKCLIENT = 8,
  QIC_BEGINCALLED = 16,
} TAG_UNNAMED_6, *PTAG_UNNAMED_6;

typedef enum _TAG_UNNAMED_7
{
  WPP_VER_WIN2K_CB_FORWARD_PTR = 1,
  WPP_VER_WHISTLER_CB_FORWARD_PTR = 2,
  WPP_VER_LH_CB_FORWARD_PTR = 3,
} TAG_UNNAMED_7, *PTAG_UNNAMED_7;

typedef enum _TAG_UNNAMED_8
{
  RIFFLG_HASCOUNTERPART = 1,
  RIFFLG_HASCLSID = 2,
} TAG_UNNAMED_8, *PTAG_UNNAMED_8;

typedef enum _TAG_UNNAMED_9
{
  AVT_OSVERSIONINFO = 1,
  AVT_PATCHINFO = 2,
} TAG_UNNAMED_9, *PTAG_UNNAMED_9;

typedef enum _TAG_UNNAMED_10
{
  hdBase = 0,
  hdSym = 1,
  hdSrc = 2,
  hdMax = 3,
} TAG_UNNAMED_10, *PTAG_UNNAMED_10;

typedef enum _TAG_UNNAMED_11
{
  sevInfo = 0,
  sevProblem = 1,
  sevAttn = 2,
  sevFatal = 3,
  sevMax = 4,
} TAG_UNNAMED_11, *PTAG_UNNAMED_11;

struct <vc_attributes>::aggregatableAttribute
{
  /* 0x0000 */ enum <vc_attributes>::aggregatableAttribute::type_e type;
}; /* size: 0x0004 */

enum <vc_attributes>::aggregatableAttribute::type_e
{
  never = 0,
  allowed = 1,
  always = 2,
};

struct <vc_attributes>::appobjectAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::async_uuidAttribute
{
  /* 0x0000 */ const char* uuid;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::aggregatesAttribute
{
  /* 0x0000 */ const char* clsid;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::com_interface_entryAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::db_accessorAttribute
{
  /* 0x0000 */ int id;
  /* 0x0004 */ BOOL auto_;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct <vc_attributes>::atl::db_columnAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0004 */ const char* dbtype;
  /* 0x0008 */ const char* precision;
  /* 0x000c */ const char* scale;
  /* 0x0010 */ const char* status;
  /* 0x0014 */ const char* length;
}; /* size: 0x0018 */

struct <vc_attributes>::atl::db_commandAttribute
{
  /* 0x0000 */ const char* command;
  /* 0x0004 */ const char* name;
  /* 0x0008 */ const char* source_name;
  /* 0x000c */ const char* hresult;
  /* 0x0010 */ const char* bindings;
  /* 0x0014 */ const char* bulk_fetch;
}; /* size: 0x0018 */

struct <vc_attributes>::atl::db_paramAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0004 */ const char* paramtype;
  /* 0x0008 */ const char* dbtype;
  /* 0x000c */ const char* precision;
  /* 0x0010 */ const char* scale;
  /* 0x0014 */ const char* status;
  /* 0x0018 */ const char* length;
}; /* size: 0x001c */

struct <vc_attributes>::atl::db_sourceAttribute
{
  /* 0x0000 */ const char* source;
  /* 0x0004 */ const char* name;
  /* 0x0008 */ const char* hresult;
}; /* size: 0x000c */

struct <vc_attributes>::atl::db_tableAttribute
{
  /* 0x0000 */ const char* table;
  /* 0x0004 */ const char* name;
  /* 0x0008 */ const char* source_name;
  /* 0x000c */ const char* hresult;
  /* 0x0010 */ const char* bulk_fetch;
}; /* size: 0x0014 */

struct <vc_attributes>::atl::implements_categoryAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::perf_counterAttribute
{
  /* 0x0000 */ const char* namestring;
  /* 0x0004 */ const char* helpstring;
  /* 0x0008 */ int name_res;
  /* 0x000c */ int help_res;
  /* 0x0010 */ int countertype;
  /* 0x0014 */ int defscale;
  /* 0x0018 */ BOOL default_counter;
  /* 0x001c */ int detail;
  /* 0x0020 */ int max_counter_size;
  /* 0x0024 */ const char* countertype_string;
}; /* size: 0x0028 */

struct <vc_attributes>::atl::perf_objectAttribute
{
  /* 0x0000 */ int name_res;
  /* 0x0004 */ int help_res;
  /* 0x0008 */ const char* namestring;
  /* 0x000c */ const char* helpstring;
  /* 0x0010 */ int detail;
  /* 0x0014 */ BOOL no_instances;
  /* 0x0018 */ const char* class_;
  /* 0x001c */ int maxinstnamelen;
}; /* size: 0x0020 */

struct <vc_attributes>::atl::perfmonAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0004 */ BOOL register;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct <vc_attributes>::atl::rdxAttribute
{
  /* 0x0000 */ const char* key;
  /* 0x0004 */ const char* valuename;
  /* 0x0008 */ const char* regtype;
}; /* size: 0x000c */

struct <vc_attributes>::atl::registration_scriptAttribute
{
  /* 0x0000 */ const char* script;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::request_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0004 */ const char* sdl;
}; /* size: 0x0008 */

struct <vc_attributes>::atl::requires_categoryAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::soap_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0004 */ const char* namespace;
  /* 0x0008 */ const char* protocol;
  /* 0x000c */ const char* style;
  /* 0x0010 */ const char* use;
}; /* size: 0x0014 */

struct <vc_attributes>::atl::soap_headerAttribute
{
  /* 0x0000 */ const char* value;
  /* 0x0004 */ BOOL required;
  /* 0x0005 */ BOOL in;
  /* 0x0006 */ BOOL out;
  /* 0x0007 */ char __PADDING__[1];
}; /* size: 0x0008 */

struct <vc_attributes>::atl::soap_methodAttribute
{
  /* 0x0000 */ const char* name;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::soap_namespaceAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::support_error_infoAttribute
{
  /* 0x0000 */ const char* error_interface;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::synchronizeAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::atl::tag_nameAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0004 */ const char* parse_func;
}; /* size: 0x0008 */

struct <vc_attributes>::bindableAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::call_asAttribute
{
  /* 0x0000 */ void* local_proc;
}; /* size: 0x0004 */

struct <vc_attributes>::caseAttribute
{
  /* 0x0000 */ int value;
}; /* size: 0x0004 */

struct <vc_attributes>::coclassAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::controlAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::cpp_quoteAttribute
{
  /* 0x0000 */ const char* string;
}; /* size: 0x0004 */

struct <vc_attributes>::customAttribute
{
  /* 0x0000 */ char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::defaultAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::defaultbindAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::defaultcollelemAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::defaultvalueAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::defaultvtableAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::dispinterfaceAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::displaybindAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::dualAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::emitidlAttribute
{
  union
  {
    /* 0x0000 */ const int restricted;
    /* 0x0000 */ const int forced;
    /* 0x0000 */ const int push;
    /* 0x0000 */ const int pop;
    /* 0x0000 */ int value;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL defaultimports;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct <vc_attributes>::entryAttribute
{
  /* 0x0000 */ const char* entry_id;
}; /* size: 0x0004 */

struct <vc_attributes>::event_receiverAttribute
{
  /* 0x0000 */ enum <vc_attributes>::event_receiverAttribute::type_e type;
  /* 0x0004 */ BOOL layout_dependent;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

enum <vc_attributes>::event_receiverAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
};

struct <vc_attributes>::event_sourceAttribute
{
  /* 0x0000 */ enum <vc_attributes>::event_sourceAttribute::type_e type;
  /* 0x0004 */ enum <vc_attributes>::event_sourceAttribute::optimize_e optimize;
  /* 0x0008 */ BOOL decorate;
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

enum <vc_attributes>::event_sourceAttribute::optimize_e
{
  speed = 0,
  size = 1,
};

enum <vc_attributes>::event_sourceAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
};

struct <vc_attributes>::exportAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::first_isAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::helpcontextAttribute
{
  /* 0x0000 */ const char* helpcontext_value;
}; /* size: 0x0004 */

struct <vc_attributes>::helper_attributes::as_stringAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ BOOL Inherited;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

struct <vc_attributes>::helper_attributes::default_valueAttribute
{
  /* 0x0000 */ void* value;
}; /* size: 0x0004 */

struct <vc_attributes>::helper_attributes::help_stringAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::helper_attributes::multi_valueAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::notify_atlprovAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::process_earlyAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::repeatableAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::requires_valueAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::source_annotation_attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct <vc_attributes>::helper_attributes::usageAttribute
{
  /* 0x0000 */ unsigned int value;
}; /* size: 0x0004 */

enum <vc_attributes>::helper_attributes::usageAttribute::usage_e
{
  eAnyUsage = 0,
  eCoClassUsage = 1,
  eCOMInterfaceUsage = 2,
  eInterfaceUsage = 6,
  eMemberUsage = 8,
  eMethodUsage = 16,
  eInterfaceMethodUsage = 32,
  eInterfaceMemberUsage = 64,
  eCoClassMemberUsage = 128,
  eCoClassMethodUsage = 256,
  eGlobalMethodUsage = 768,
  eGlobalDataUsage = 1024,
  eClassUsage = 2048,
  eInterfaceParameterUsage = 4096,
  eMethodParameterUsage = 12288,
  eIDLModuleUsage = 16384,
  eAnonymousUsage = 0xffff8000,
  eTypedefUsage = 0x10000,
  eUnionUsage = 0x20000,
  eEnumUsage = 0x40000,
  eDefineTagUsage = 0x80000,
  eStructUsage = 0x100000,
  eLocalUsage = 0x200000,
  ePropertyUsage = 0x400000,
  eEventUsage = 0x800000,
  eTemplateUsage = 0x1000000,
  eModuleUsage = 0x1000000,
  eIllegalUsage = 0x2000000,
  eAsynchronousUsage = 0x4000000,
  eAnyIDLUsage = 0x3f7fff,
};

struct <vc_attributes>::helper_attributes::v1_alttypeAttribute
{
  /* 0x0000 */ enum <vc_attributes>::helper_attributes::v1_alttypeAttribute::type_e type;
}; /* size: 0x0004 */

enum <vc_attributes>::helper_attributes::v1_alttypeAttribute::type_e
{
  eBoolean = 0,
  eInteger = 1,
  eFloat = 2,
  eDouble = 3,
};

struct <vc_attributes>::helper_attributes::v1_earlyAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::helper_attributes::v1_nameAttribute
{
  /* 0x0000 */ const char* name;
}; /* size: 0x0004 */

struct <vc_attributes>::helpfileAttribute
{
  /* 0x0000 */ const char* filename;
}; /* size: 0x0004 */

struct <vc_attributes>::helpstringAttribute
{
  /* 0x0000 */ const char* help_text_string;
}; /* size: 0x0004 */

struct <vc_attributes>::helpstringcontextAttribute
{
  /* 0x0000 */ int contextid;
}; /* size: 0x0004 */

struct <vc_attributes>::helpstringdllAttribute
{
  /* 0x0000 */ const char* dllname;
}; /* size: 0x0004 */

struct <vc_attributes>::hiddenAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::hookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0004 */ const char* source;
  /* 0x0008 */ const char* handler;
  /* 0x000c */ const char* receiver;
}; /* size: 0x0010 */

struct <vc_attributes>::idAttribute
{
  /* 0x0000 */ int id_num;
}; /* size: 0x0004 */

struct <vc_attributes>::idl_moduleAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0004 */ const char* dllname;
  /* 0x0008 */ const char* version;
  /* 0x000c */ const char* uuid;
  /* 0x0010 */ const char* helpstring;
  /* 0x0014 */ int helpstringcontext;
  /* 0x0018 */ int helpcontext;
  /* 0x001c */ BOOL hidden;
  /* 0x001d */ BOOL restricted;
  /* 0x001e */ char __PADDING__[2];
}; /* size: 0x0020 */

struct <vc_attributes>::idl_quoteAttribute
{
  /* 0x0000 */ const char* text;
}; /* size: 0x0004 */

struct <vc_attributes>::iid_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
}; /* size: 0x0004 */

struct <vc_attributes>::immediatebindAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::implementsAttribute
{
  /* 0x0000 */ const char* interfaces;
  /* 0x0004 */ const char* dispinterfaces;
}; /* size: 0x0008 */

struct <vc_attributes>::importAttribute
{
  /* 0x0000 */ const char* idl_file;
}; /* size: 0x0004 */

struct <vc_attributes>::importidlAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::importlibAttribute
{
  /* 0x0000 */ const char* tlb_file;
}; /* size: 0x0004 */

struct <vc_attributes>::inAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::includeAttribute
{
  /* 0x0000 */ const char* include_file;
}; /* size: 0x0004 */

struct <vc_attributes>::includelibAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::last_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0004 */

struct <vc_attributes>::lcidAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::length_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0004 */

struct <vc_attributes>::library_blockAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::licensedAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::localAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::max_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0004 */

struct <vc_attributes>::moduleAttribute
{
  /* 0x0000 */ enum <vc_attributes>::moduleAttribute::type_e type;
  /* 0x0004 */ const char* name;
  /* 0x0008 */ const char* version;
  /* 0x000c */ const char* uuid;
  /* 0x0010 */ int lcid;
  /* 0x0014 */ BOOL control;
  /* 0x0018 */ const char* helpstring;
  /* 0x001c */ int helpstringcontext;
  /* 0x0020 */ const char* helpstringdll;
  /* 0x0024 */ const char* helpfile;
  /* 0x0028 */ int helpcontext;
  /* 0x002c */ BOOL hidden;
  /* 0x002d */ BOOL restricted;
  /* 0x0030 */ const char* custom;
  /* 0x0034 */ const char* resource_name;
}; /* size: 0x0038 */

enum <vc_attributes>::moduleAttribute::type_e
{
  dll = 1,
  exe = 2,
  service = 3,
  unspecified = 4,
  EXE = 2,
  SERVICE = 3,
};

struct <vc_attributes>::ms_unionAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::no_injected_textAttribute
{
  /* 0x0000 */ BOOL value;
}; /* size: 0x0001 */

struct <vc_attributes>::nonbrowsableAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::noncreatableAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::nonextensibleAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::objectAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::odlAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::oleautomationAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::optionalAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::outAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::pointer_defaultAttribute
{
  /* 0x0000 */ enum <vc_attributes>::pointer_defaultAttribute::type_e type;
}; /* size: 0x0004 */

enum <vc_attributes>::pointer_defaultAttribute::type_e
{
  ptr = 0,
  ref = 1,
  unique = 2,
};

struct <vc_attributes>::pragmaAttribute
{
  /* 0x0000 */ const char* token_sequence;
}; /* size: 0x0004 */

struct <vc_attributes>::progidAttribute
{
  /* 0x0000 */ const char* name;
}; /* size: 0x0004 */

struct <vc_attributes>::propgetAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::propputAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::propputrefAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::providerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0004 */ const char* uuid;
  /* 0x0008 */ int cookies;
}; /* size: 0x000c */

struct <vc_attributes>::ptrAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::publicAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::rangeAttribute
{
  /* 0x0000 */ int low_val;
  /* 0x0004 */ int high_val;
}; /* size: 0x0008 */

struct <vc_attributes>::readonlyAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::refAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::requesteditAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::restrictedAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::retvalAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::satypeAttribute
{
  /* 0x0000 */ const char* type;
}; /* size: 0x0004 */

struct <vc_attributes>::size_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0004 */

struct <vc_attributes>::sourceAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::stringAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::switch_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
}; /* size: 0x0004 */

struct <vc_attributes>::switch_typeAttribute
{
  /* 0x0000 */ const char* switch_type_specifier;
}; /* size: 0x0004 */

struct <vc_attributes>::threadingAttribute
{
  /* 0x0000 */ enum <vc_attributes>::threadingAttribute::threading_e value;
}; /* size: 0x0004 */

enum <vc_attributes>::threadingAttribute::threading_e
{
  apartment = 1,
  single = 2,
  free = 3,
  neutral = 4,
  both = 5,
};

struct <vc_attributes>::transmit_asAttribute
{
  /* 0x0000 */ const char* xmit_type;
}; /* size: 0x0004 */

struct <vc_attributes>::uidefaultAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::unhookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0004 */ const char* source;
  /* 0x0008 */ const char* handler;
  /* 0x000c */ const char* receiver;
}; /* size: 0x0010 */

struct <vc_attributes>::uniqueAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::usesgetlasterrorAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::uuidAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::v1_enumAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::varargAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::versionAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::vi_progidAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0004 */

struct <vc_attributes>::wire_marshalAttribute
{
  /* 0x0000 */ const char* wire_type;
}; /* size: 0x0004 */

enum ACTCTX_REQUESTED_RUN_LEVEL
{
  ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
  ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
  ACTCTX_RUN_LEVEL_NUMBERS = 4,
};

struct ACTIVATION_PROPERTIES
{
  /* 0x0000 */ const struct _GUID& _rclsid;
  /* 0x0004 */ struct _GUID _partition;
  /* 0x0014 */ const struct _GUID& _riid;
  /* 0x0018 */ unsigned long _dwFlags;
  /* 0x001c */ unsigned long _dwActvFlags;
  /* 0x0020 */ unsigned long _dwContext;
  /* 0x0024 */ unsigned long _dwDllServerType;
  /* 0x0028 */ wchar_t* _pwszDllServer;
  /* 0x002c */ struct IUnknown** _ppUnk;
  /* 0x0030 */ struct IComClassInfo* _pCI;
}; /* size: 0x0034 */

enum ACTIVATION_PROPERTIES::eFlags
{
  fFOR_SCM = 1,
  fSURROGATE = 4,
  fDO_NOT_LOAD = 8,
  fRELOAD_DARWIN = 16,
  fLSVR_ONLY = 32,
};

enum ADDRESS_MODE
{
  AddrMode1616 = 0,
  AddrMode1632 = 1,
  AddrModeReal = 2,
  AddrModeFlat = 3,
};

struct AENTRY
{
  /* 0x0000 */ unsigned long dwCollision;
  /* 0x0004 */ void* pAllocation;
}; /* size: 0x0008 */

struct ANON_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
}; /* size: 0x0020 */

struct ANON_OBJECT_HEADER_V2
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
}; /* size: 0x002c */

struct API_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Reserved;
}; /* size: 0x0008 */

struct ARRAY_INFO
{
  /* 0x0000 */ long Dimension;
  /* 0x0004 */ unsigned long* BufferConformanceMark;
  /* 0x0008 */ unsigned long* BufferVarianceMark;
  /* 0x000c */ unsigned long* MaxCountArray;
  /* 0x0010 */ unsigned long* OffsetArray;
  /* 0x0014 */ unsigned long* ActualCountArray;
}; /* size: 0x0018 */

enum ASSOCCLASS
{
  ASSOCCLASS_SHELL_KEY = 0,
  ASSOCCLASS_PROGID_KEY = 1,
  ASSOCCLASS_PROGID_STR = 2,
  ASSOCCLASS_CLSID_KEY = 3,
  ASSOCCLASS_CLSID_STR = 4,
  ASSOCCLASS_APP_KEY = 5,
  ASSOCCLASS_APP_STR = 6,
  ASSOCCLASS_SYSTEM_STR = 7,
  ASSOCCLASS_FOLDER = 8,
  ASSOCCLASS_STAR = 9,
};

struct ASSOCIATIONELEMENT_
{
  /* 0x0000 */ enum ASSOCCLASS ac;
  /* 0x0004 */ struct HKEY__* hkClass;
  /* 0x0008 */ const wchar_t* pszClass;
}; /* size: 0x000c */

struct A_SHA_CTX
{
  union
  {
    /* 0x0000 */ unsigned char buffer[64];
  } /* size: 0x0040 */ u;
  /* 0x0040 */ unsigned long state[5];
  /* 0x0054 */ unsigned long count[2];
}; /* size: 0x005c */

class ActivationProperties
{
  /* 0x000c */ enum _TAG_UNNAMED_12 _marshalState;
  /* 0x0010 */ struct _GUID _actCLSID;
  /* 0x0020 */ int _unSerialized;
  /* 0x0024 */ int _unSerializedInproc;
  /* 0x0028 */ long _refCount;
  /* 0x002c */ struct tagCustomHeader _serHeader;
  /* 0x005c */ struct tagCustomHeader _unSerHeader;
  /* 0x008c */ unsigned long _marshalFlags;
  /* 0x0090 */ unsigned long _size;
  /* 0x0094 */ int _toDelete;
  /* 0x0098 */ int _fDestruct;
  /* 0x009c */ int _fInprocSerializationRequired;
  /* 0x00a0 */ unsigned long _totalSize;
  /* 0x00a4 */ class SerializableProperty* serializableIfsCollection[10];
  /* 0x00cc */ unsigned long _ifsIndex;
  /* 0x00d0 */ struct _GUID _clsidArray[10];
  /* 0x0170 */ unsigned long _sizeArray[10];
  /* 0x0198 */ unsigned long _headerSize;
  /* 0x019c */ class Serializer* _pUnSer;
  /* 0x01a0 */ void* _blob;
}; /* size: 0x01a4 */

typedef enum _TAG_UNNAMED_12
{
  NOT_MARSHALLED = 1,
  SIZED = 2,
  MARSHALLED = 3,
  UNMARSHALLED = 4,
} TAG_UNNAMED_12, *PTAG_UNNAMED_12;

class ActivationPropertiesIn
{
  /* 0x01b0 */ enum tagACTIVATION_STAGE _stage;
  /* 0x01b4 */ unsigned long _cCustomAct;
  /* 0x01b8 */ unsigned long _customIndex;
  /* 0x01bc */ unsigned long _dwInitialContext;
  /* 0x01c0 */ int _delegated;
  /* 0x01c4 */ void* _clientToken;
  /* 0x01c8 */ int _fUseSystemIdentity;
  /* 0x01cc */ int _fComplusOnly;
  /* 0x01d0 */ struct IComClassInfo* _pClassInfo;
  /* 0x01d4 */ struct ISystemActivator** _customActList;
  /* 0x01d8 */ class InstantiationInfo* _pinst;
  /* 0x01dc */ class InstanceInfo* _pPersist;
  /* 0x01e0 */ class ContextInfo* _pContextInfo;
  /* 0x01e4 */ class ServerLocationInfo* _pServerLocationInfo;
  /* 0x01e8 */ class SecurityInfo* _pSecurityInfo;
  /* 0x01ec */ class SpecialProperties* _pSpecialProperties;
  /* 0x01f0 */ class ActivationPropertiesOut _actOut;
  /* 0x049c */ class SecurityInfo _securityInfo;
  /* 0x04d0 */ class ServerLocationInfo _serverLocationInfo;
  /* 0x04fc */ class InstantiationInfo _instantiationInfo;
  /* 0x05e0 */ class ContextInfo _contextInfo;
  /* 0x062c */ class InstanceInfo _instanceInfo;
  /* 0x0654 */ class ScmRequestInfo _scmRequestInfo;
  /* 0x0670 */ class SpecialProperties _specialProperties;
  /* 0x06e0 */ void* _pDip;
  /* 0x06e4 */ struct IClassFactory* _pCF;
}; /* size: 0x06e8 */

class ActivationPropertiesOut
{
  /* 0x01ac */ class ActivationPropertiesOut::OutSerializer* _pOutSer;
  /* 0x01b0 */ class ActivationPropertiesOut::OutSerializer _outSer;
  /* 0x0288 */ class ScmReplyInfo _scmReplyInfo;
  /* 0x02a4 */ struct tagCOMVERSION _clientCOMVersion;
  /* 0x02a8 */ int _fBrokenRefCount;
}; /* size: 0x02ac */

class ActivationPropertiesOut::OutSerializer
{
  /* 0x0010 */ struct tagPropsOutInfo _info;
  /* 0x0020 */ struct IUnknown* _pUnk;
  /* 0x0024 */ void** _ppvObj;
  /* 0x0028 */ unsigned long _size;
  /* 0x002c */ struct tagCOMVERSION* _pClientCOMVersion;
  /* 0x0030 */ struct _GUID _pIIDs[10];
  /* 0x00d0 */ int _fBrokenRefCount;
  /* 0x00d4 */ int _fToReleaseIFD;
}; /* size: 0x00d8 */

struct AllocateThrow
{
}; /* size: 0x0001 */

class AllocationWrapper
{
}; /* size: 0x0001 */

struct ApartmentEntry
{
  /* 0x0000 */ struct SDWORDHashNode node;
  /* 0x000c */ unsigned long hActivator;
}; /* size: 0x0010 */

class AppRegistration
{
  /* 0x0000 */ struct _GUID appid;
  /* 0x0010 */ const wchar_t* appName;
  /* 0x0014 */ int dllSurrogate;
  /* 0x0018 */ struct HINSTANCE__* hModuleSurrogate;
}; /* size: 0x001c */

struct AsyncIAdviseSink
{
  /* 0x0000 */ struct AsyncIAdviseSinkVtbl* lpVtbl;
}; /* size: 0x0004 */

struct AsyncIAdviseSink2
{
}; /* size: 0x0004 */

struct AsyncIAdviseSink2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Begin_OnDataChange /* function */;
  /* 0x0010 */ void* Finish_OnDataChange /* function */;
  /* 0x0014 */ void* Begin_OnViewChange /* function */;
  /* 0x0018 */ void* Finish_OnViewChange /* function */;
  /* 0x001c */ void* Begin_OnRename /* function */;
  /* 0x0020 */ void* Finish_OnRename /* function */;
  /* 0x0024 */ void* Begin_OnSave /* function */;
  /* 0x0028 */ void* Finish_OnSave /* function */;
  /* 0x002c */ void* Begin_OnClose /* function */;
  /* 0x0030 */ void* Finish_OnClose /* function */;
  /* 0x0034 */ void* Begin_OnLinkSrcChange /* function */;
  /* 0x0038 */ void* Finish_OnLinkSrcChange /* function */;
}; /* size: 0x003c */

struct AsyncIAdviseSinkVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Begin_OnDataChange /* function */;
  /* 0x0010 */ void* Finish_OnDataChange /* function */;
  /* 0x0014 */ void* Begin_OnViewChange /* function */;
  /* 0x0018 */ void* Finish_OnViewChange /* function */;
  /* 0x001c */ void* Begin_OnRename /* function */;
  /* 0x0020 */ void* Finish_OnRename /* function */;
  /* 0x0024 */ void* Begin_OnSave /* function */;
  /* 0x0028 */ void* Finish_OnSave /* function */;
  /* 0x002c */ void* Begin_OnClose /* function */;
  /* 0x0030 */ void* Finish_OnClose /* function */;
}; /* size: 0x0034 */

struct AsyncIMultiQI
{
}; /* size: 0x0004 */

struct AsyncIPipeByte
{
}; /* size: 0x0004 */

struct AsyncIPipeDouble
{
}; /* size: 0x0004 */

struct AsyncIPipeLong
{
}; /* size: 0x0004 */

struct AsyncIRemUnknown
{
}; /* size: 0x0004 */

struct AsyncIRemUnknown2
{
}; /* size: 0x0004 */

struct AsyncIUnknown
{
}; /* size: 0x0004 */

struct BATTERY_REPORTING_SCALE
{
  /* 0x0000 */ unsigned long Granularity;
  /* 0x0004 */ unsigned long Capacity;
}; /* size: 0x0008 */

struct BITMAPV4HEADER
{
  /* 0x0000 */ unsigned long bV4Size;
  /* 0x0004 */ long bV4Width;
  /* 0x0008 */ long bV4Height;
  /* 0x000c */ unsigned short bV4Planes;
  /* 0x000e */ unsigned short bV4BitCount;
  /* 0x0010 */ unsigned long bV4V4Compression;
  /* 0x0014 */ unsigned long bV4SizeImage;
  /* 0x0018 */ long bV4XPelsPerMeter;
  /* 0x001c */ long bV4YPelsPerMeter;
  /* 0x0020 */ unsigned long bV4ClrUsed;
  /* 0x0024 */ unsigned long bV4ClrImportant;
  /* 0x0028 */ unsigned long bV4RedMask;
  /* 0x002c */ unsigned long bV4GreenMask;
  /* 0x0030 */ unsigned long bV4BlueMask;
  /* 0x0034 */ unsigned long bV4AlphaMask;
  /* 0x0038 */ unsigned long bV4CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV4Endpoints;
  /* 0x0060 */ unsigned long bV4GammaRed;
  /* 0x0064 */ unsigned long bV4GammaGreen;
  /* 0x0068 */ unsigned long bV4GammaBlue;
}; /* size: 0x006c */

struct BITMAPV5HEADER
{
  /* 0x0000 */ unsigned long bV5Size;
  /* 0x0004 */ long bV5Width;
  /* 0x0008 */ long bV5Height;
  /* 0x000c */ unsigned short bV5Planes;
  /* 0x000e */ unsigned short bV5BitCount;
  /* 0x0010 */ unsigned long bV5Compression;
  /* 0x0014 */ unsigned long bV5SizeImage;
  /* 0x0018 */ long bV5XPelsPerMeter;
  /* 0x001c */ long bV5YPelsPerMeter;
  /* 0x0020 */ unsigned long bV5ClrUsed;
  /* 0x0024 */ unsigned long bV5ClrImportant;
  /* 0x0028 */ unsigned long bV5RedMask;
  /* 0x002c */ unsigned long bV5GreenMask;
  /* 0x0030 */ unsigned long bV5BlueMask;
  /* 0x0034 */ unsigned long bV5AlphaMask;
  /* 0x0038 */ unsigned long bV5CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV5Endpoints;
  /* 0x0060 */ unsigned long bV5GammaRed;
  /* 0x0064 */ unsigned long bV5GammaGreen;
  /* 0x0068 */ unsigned long bV5GammaBlue;
  /* 0x006c */ unsigned long bV5Intent;
  /* 0x0070 */ unsigned long bV5ProfileData;
  /* 0x0074 */ unsigned long bV5ProfileSize;
  /* 0x0078 */ unsigned long bV5Reserved;
}; /* size: 0x007c */

struct BSMINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct HDESK__* hdesk;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x000c */ struct _LUID luid;
}; /* size: 0x0014 */

struct BSTR_INTERNAL
{
  /* 0x0000 */ unsigned long cbPayload;
  /* 0x0004 */ wchar_t* sz /* zero-length array */;
}; /* size: 0x0004 */

class BUCL::CByteAllocator
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<__int64>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<int>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<long>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<short>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<signed char>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<unsigned __int64>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<unsigned char>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<unsigned int>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<unsigned long>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<unsigned short>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<__int64>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<int>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<long>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<short>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<signed char>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<unsigned __int64>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<unsigned char>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<unsigned int>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<unsigned long>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<unsigned short>
{
}; /* size: 0x0001 */

class BUCL::CDequeBase
{
  /* 0x0000 */ class BUCL::CDequeLinkage m_Head;
  /* 0x000c */ unsigned long m_EntryCount;
}; /* size: 0x0010 */

class BUCL::CDequeLinkage
{
  /* 0x0008 */ class BUCL::CDequeBase* m_pDeque;
}; /* size: 0x000c */

class BUCL::CIsSignedType<__int64>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_13
{
  Value = 1,
} TAG_UNNAMED_13, *PTAG_UNNAMED_13;

class BUCL::CIsSignedType<int>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_14
{
  Value = 1,
} TAG_UNNAMED_14, *PTAG_UNNAMED_14;

class BUCL::CIsSignedType<long>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_15
{
  Value = 1,
} TAG_UNNAMED_15, *PTAG_UNNAMED_15;

class BUCL::CIsSignedType<short>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_16
{
  Value = 1,
} TAG_UNNAMED_16, *PTAG_UNNAMED_16;

class BUCL::CIsSignedType<signed char>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_17
{
  Value = 1,
} TAG_UNNAMED_17, *PTAG_UNNAMED_17;

class BUCL::CIsSignedType<unsigned __int64>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_18
{
  Value = 0,
} TAG_UNNAMED_18, *PTAG_UNNAMED_18;

class BUCL::CIsSignedType<unsigned char>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_19
{
  Value = 0,
} TAG_UNNAMED_19, *PTAG_UNNAMED_19;

class BUCL::CIsSignedType<unsigned int>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_20
{
  Value = 0,
} TAG_UNNAMED_20, *PTAG_UNNAMED_20;

class BUCL::CIsSignedType<unsigned long>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_21
{
  Value = 0,
} TAG_UNNAMED_21, *PTAG_UNNAMED_21;

class BUCL::CIsSignedType<unsigned short>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_22
{
  Value = 0,
} TAG_UNNAMED_22, *PTAG_UNNAMED_22;

typedef enum _TAG_UNNAMED_23
{
  Value = 1,
} TAG_UNNAMED_23, *PTAG_UNNAMED_23;

class BUCL::CMultiplier<unsigned long,BUCL::Rtl::CCallDisposition>
{
}; /* size: 0x0001 */

enum BUCL::DequeIteratorMovementDirection
{
  eDequeIteratorMoveForward = 0,
  eDequeIteratorMoveBackward = 1,
};

enum BUCL::HashTable::InsertOrUpdateIfPresentDisposition
{
  eUpdateValue = 0,
  eLeaveValueAlone = 1,
};

class BUCL::MultiplyHelpers::CPromotedSize<unsigned char>
{
}; /* size: 0x0001 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned int>
{
}; /* size: 0x0001 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned long>
{
}; /* size: 0x0001 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned short>
{
}; /* size: 0x0001 */

class BUCL::Rtl::CCallDisposition
{
  /* 0x0000 */ long m_NtStatus;
}; /* size: 0x0004 */

struct BULK_SECURITY_TEST_DATA
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long SecurityIds[1];
}; /* size: 0x0008 */

class C2Security
{
  /* 0x0000 */ int m_bProtectionMode;
}; /* size: 0x0004 */

class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>
{
  /* 0x0068 */ class XSLOCK m_xslAgeOutLock;
  /* 0x00b0 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x00b4 */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x00b8 */

class CALLFRAME_CACHE<TYPEINFOVTBL>
{
  /* 0x0068 */ class XSLOCK m_xslAgeOutLock;
  /* 0x00b0 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x00b4 */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x00b8 */

class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>
{
  /* 0x0004 */ unsigned long m_dwReleaseTime;
  /* 0x0008 */ class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>* m_pcache;
  /* 0x000c */ volatile long m_refs;
  /* 0x0010 */ struct _GUID m_guidkey;
}; /* size: 0x0020 */

class CALLFRAME_CACHE_ENTRY<TYPEINFOVTBL>
{
  /* 0x0004 */ unsigned long m_dwReleaseTime;
  /* 0x0008 */ class CALLFRAME_CACHE<TYPEINFOVTBL>* m_pcache;
  /* 0x000c */ volatile long m_refs;
  /* 0x0010 */ struct _GUID m_guidkey;
}; /* size: 0x0020 */

enum CALLFRAME_FREE
{
  CALLFRAME_FREE_NONE = 0,
  CALLFRAME_FREE_IN = 1,
  CALLFRAME_FREE_INOUT = 2,
  CALLFRAME_FREE_OUT = 4,
  CALLFRAME_FREE_TOP_INOUT = 8,
  CALLFRAME_FREE_TOP_OUT = 16,
  CALLFRAME_FREE_ALL = 31,
};

enum CALLFRAME_NULL
{
  CALLFRAME_NULL_NONE = 0,
  CALLFRAME_NULL_INOUT = 2,
  CALLFRAME_NULL_OUT = 4,
  CALLFRAME_NULL_ALL = 6,
};

enum CALLFRAME_WALK
{
  CALLFRAME_WALK_IN = 1,
  CALLFRAME_WALK_INOUT = 2,
  CALLFRAME_WALK_OUT = 4,
};

class CAddrControl
{
}; /* size: 0x0008 */

class CAddrExclusionList
{
  /* 0x0004 */ long _lRefs;
  /* 0x0008 */ unsigned long _dwCursor;
  /* 0x000c */ unsigned long _dwNumStrings;
  /* 0x0010 */ wchar_t** _ppszStrings;
}; /* size: 0x0014 */

class CAggId
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ struct IUnknown* _punkInner;
  /* 0x000c */ struct IMarshal* _pmshInner;
  /* 0x0010 */ class CStdIdentity* _pStdId;
}; /* size: 0x0014 */

class CAntiMoniker
{
  /* 0x0014 */ unsigned long m_count;
}; /* size: 0x0018 */

class CApartmentActivator
{
}; /* size: 0x0004 */

class CApartmentHashTable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CDWORDHashTable _hashtbl;
      /* 0x0018 */ int _fTableInitialized;
    }; /* size: 0x001c */
    /* 0x0000 */ class COleStaticMutexSem _mxsAptTblLock;
  }; /* size: 0x0030 */
}; /* size: 0x001c */

class CAptCallCtrl
{
  /* 0x0000 */ struct IMessageFilter* _pMF;
  /* 0x0004 */ int _fInMsgFilter;
  /* 0x0008 */ class CCliModalLoop* _pTopCML;
  /* 0x000c */ struct tagSWindowData _WD[2];
}; /* size: 0x0024 */

class CAptRpcChnl
{
  /* 0x0034 */ unsigned long _dwTIDCallee;
  /* 0x0038 */ unsigned long _dwAptId;
}; /* size: 0x003c */

class CArray<CCacheNode>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ int* m_piAllocList;
  /* 0x0028 */ struct CArray<CCacheNode>::ArrayNode* m_pBuffer;
}; /* size: 0x002c */

struct CArray<CCacheNode>::ArrayNode
{
  /* 0x0000 */ class CCacheNode item;
  /* 0x0058 */ unsigned long next;
  /* 0x005c */ unsigned long prev;
}; /* size: 0x0060 */

class CArray<CFormatEtc>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ int* m_piAllocList;
  /* 0x0028 */ struct CArray<CFormatEtc>::ArrayNode* m_pBuffer;
}; /* size: 0x002c */

struct CArray<CFormatEtc>::ArrayNode
{
  /* 0x0000 */ class CFormatEtc item;
  /* 0x0018 */ unsigned long next;
  /* 0x001c */ unsigned long prev;
}; /* size: 0x0020 */

class CArray<CStatData>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ int* m_piAllocList;
  /* 0x0028 */ struct CArray<CStatData>::ArrayNode* m_pBuffer;
}; /* size: 0x002c */

struct CArray<CStatData>::ArrayNode
{
  /* 0x0000 */ class CStatData item;
  /* 0x0024 */ unsigned long next;
  /* 0x0028 */ unsigned long prev;
}; /* size: 0x002c */

class CArrayFValue
{
  /* 0x0000 */ unsigned char* m_pData;
  /* 0x0004 */ unsigned int m_cbValue;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0014 */

class CAsyncCall
{
  /* 0x00c8 */ unsigned long _iRefCount;
  /* 0x00cc */ unsigned long _lFlags;
  /* 0x00d0 */ class CChannelObject* _pChnlObj;
  /* 0x00d4 */ void* _pRequestBuffer;
  /* 0x00d8 */ unsigned long _lApt;
  /* 0x00dc */ struct _RPC_ASYNC_STATE _AsyncState;
  /* 0x0120 */ struct HWND__* _hwndSTA;
  /* 0x0124 */ class CAsyncCall* _pNext;
  /* 0x0128 */ enum ESignalState _eSignalState;
  union
  {
    /* 0x0000 */ class CAsyncCall* _aList[8];
    /* 0x0000 */ unsigned long _iNext;
  }; /* size: 0x0020 */
}; /* size: 0x012c */

class CAsyncConnection
{
  /* 0x0004 */ struct IConnectionPointContainer* _pCPC;
  /* 0x0008 */ struct IDocfileAsyncConnectionPoint* _pdacp;
  /* 0x000c */ unsigned long _dwAsyncFlags;
  /* 0x0010 */ long _cReferences;
}; /* size: 0x0014 */

class CAsyncConnectionContainer
{
  /* 0x0004 */ class CAsyncConnection _cpoint;
}; /* size: 0x0018 */

class CAsyncStateMachine
{
  /* 0x0004 */ unsigned long _dwState;
  /* 0x0008 */ HRESULT _hr;
  /* 0x000c */ enum _TAG_UNNAMED_24 eflags;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_24
{
  STATE_WAITINGFORBEGIN = 1,
  STATE_WAITINGFORFINISH = 2,
  STATE_BEGINABORTED = 3,
  STATE_EXECUTINGFINISH = 4,
  STATE_INITIALIZINGOBJECT = 5,
} TAG_UNNAMED_24, *PTAG_UNNAMED_24;

class CAsyncUnknownMgr
{
  /* 0x0018 */ class CAsyncUnknownMgr::CPrivUnknown _privUnk;
  /* 0x001c */ unsigned long _dwFlags;
  /* 0x0020 */ class CClientCallMgr* _pNextMgr;
  /* 0x0024 */ unsigned long _cRefs;
  /* 0x0028 */ struct IUnknown* _pUnkOuter;
  /* 0x002c */ class CStdIdentity* _pStdId;
  /* 0x0030 */ struct IUnknown* _pARUObj;
  /* 0x0034 */ struct AsyncIRemUnknown2* _pARU;
  /* 0x0038 */ struct tagMULTI_QI _MQI;
  /* 0x0044 */ unsigned long _ulRefs;
  /* 0x0048 */ struct tagQICONTEXT* _pQIC;
  /* 0x004c */ unsigned long _cAcquired;
  /* 0x0050 */ unsigned long _cMQIs;
  /* 0x0054 */ struct _GUID* _pIIDs;
  /* 0x0058 */ struct tagMULTI_QI** _ppMQI;
  /* 0x005c */ struct tagMULTI_QI* _pMQISave;
}; /* size: 0x0060 */

class CAsyncUnknownMgr::CPrivUnknown
{
}; /* size: 0x0004 */

class CAtom
{
  /* 0x0000 */ unsigned short m_atom;
}; /* size: 0x0002 */

class CAuthInfo
{
  union
  {
    /* 0x0000 */ struct tagSOLE_AUTHENTICATION_LIST* _sList;
    /* 0x0000 */ int _fNeedSSL;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class CBaseMoniker
{
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ class CMarshalImplPStream m_marshal;
}; /* size: 0x0014 */

class CBaseStorageVariant
{
}; /* size: 0x0010 */

class CBasedBytePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedContextPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDFBasisPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDeltaBlockPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDeltaBlockPtrPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDeltaListPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDirectStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDlElementPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedDocFilePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedFatPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedFreeBlockPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedGlobalContextPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedGlobalFileStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedILockBytesPtrPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedMSFPagePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedMSFPagePtrPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedMSFPageTablePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedMStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedMappedStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedMarshalListPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedPagedVectorPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedPerContextPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedPubDocFilePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedPubStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedRevertablePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedSStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedSeekPointerPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedTSetMemberPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedTransactedStreamPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedUpdatePtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBasedVectBitsPtr
{
  /* 0x0000 */ unsigned long _p;
}; /* size: 0x0004 */

class CBindCtx
{
  /* 0x0004 */ unsigned long m_refs;
  /* 0x0008 */ struct tagBIND_OPTS3 m_bindopts;
  /* 0x002c */ class CBindCtx::CObjList* m_pFirstObj;
  /* 0x0030 */ class CMapStringToPtr* m_pMap;
}; /* size: 0x0034 */

class CBindCtx::CObjList
{
  /* 0x0000 */ struct IUnknown* m_punk;
  /* 0x0004 */ class CBindCtx::CObjList* m_pNext;
}; /* size: 0x0008 */

class CBindStatusCallback
{
  /* 0x0008 */ long _cRef;
  /* 0x000c */ HRESULT _hr;
  /* 0x0010 */ void* _hEvent;
}; /* size: 0x0014 */

class CBlockHeader
{
  /* 0x0008 */ unsigned long _ulNext;
}; /* size: 0x000c */

class CBlockPreHeader
{
  /* 0x0000 */ unsigned long _ulSize;
  /* 0x0004 */ int _fFree;
}; /* size: 0x0008 */

class CBool
{
  /* 0x0000 */ int value;
}; /* size: 0x0004 */

class CCOMSurrogate
{
  union
  {
    /* 0x0000 */ struct ISurrogate* _pSurrogate;
    /* 0x0000 */ int _fNewStyleSurrogate;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class CCache
{
  /* 0x0000 */ struct _RTL_SRWLOCK m_srwLock;
  /* 0x0004 */ struct tagElement** m_paBuckets;
  /* 0x0008 */ unsigned long m_cBuckets;
  /* 0x000c */ unsigned long m_cElements;
  /* 0x0010 */ __int64 m_i64LocalCacheCount;
}; /* size: 0x0018 */

class CCacheNode
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ struct tagFORMATETC m_foretc;
  /* 0x0024 */ unsigned long m_advf;
  /* 0x0028 */ long m_lWidth;
  /* 0x002c */ long m_lHeight;
  /* 0x0030 */ unsigned long m_dwFlags;
  /* 0x0034 */ struct IStorage* m_pStg;
  /* 0x0038 */ int m_iStreamNum;
  /* 0x003c */ unsigned long m_dwPresBitsPos;
  /* 0x0040 */ unsigned long m_dwSavedPresBitsPos;
  /* 0x0044 */ int m_fConvert;
  /* 0x0048 */ struct IOlePresObj* m_pPresObj;
  /* 0x004c */ struct IOlePresObj* m_pPresObjAfterFreeze;
  /* 0x0050 */ struct IDataObject* m_pDataObject;
  /* 0x0054 */ unsigned long m_dwAdvConnId;
}; /* size: 0x0058 */

class CCallTable
{
  union
  {
    /* 0x0000 */ unsigned long m_cCalls;
    /* 0x0000 */ int m_fInitialized;
    /* 0x0000 */ class CPageAllocator m_Allocator;
  }; /* size: 0x0040 */
}; /* size: 0x0004 */

class CChannelHandle
{
  /* 0x0000 */ void* _hRpc;
  /* 0x0004 */ unsigned long _lAuthn;
  /* 0x0008 */ unsigned long _lImp;
  /* 0x000c */ void* _hToken;
  /* 0x0010 */ long _eState;
  /* 0x0014 */ int _fFirstCall;
  /* 0x0018 */ unsigned long _cRef;
  /* 0x001c */ struct _SCHANNEL_CRED _sCred;
  /* 0x0054 */ const struct _CERT_CONTEXT* _pCert;
}; /* size: 0x0058 */

class CChannelObject
{
  /* 0x0014 */ volatile unsigned long _dwState;
  /* 0x0018 */ unsigned long _cRefs;
  /* 0x001c */ unsigned long _dwAptID;
  /* 0x0020 */ class CClientCallMgr* _pCallMgr;
  /* 0x0024 */ class CCtxComChnl* _pChnl;
  /* 0x0028 */ HRESULT _hr;
  /* 0x002c */ class CAsyncCall* _pCall;
  /* 0x0030 */ struct ISynchronize* _pSync;
  /* 0x0034 */ struct SPendingCall _pendingCall;
  /* 0x0040 */ struct tagRPCOLEMESSAGE _msg;
}; /* size: 0x006c */

enum CChannelObject::eState
{
  STATE_ERROR = 1,
  STATE_READYFORGETBUFFER = 2,
  STATE_READYFORSEND = 3,
  STATE_SENDING = 4,
  STATE_READYFORSIGNAL = 5,
  STATE_RECEIVING = 6,
  STATE_READYFORRECEIVE = 7,
  STATE_READYFORFREEBUFFER = 8,
  STATE_AMBIGUOUS = 9,
};

class CChildInstanceList
{
  /* 0x0000 */ class CBasedRevertablePtr _prvHead;
}; /* size: 0x0004 */

class CClass
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ wchar_t* m_szClsid;
}; /* size: 0x0014 */

class CClassCache
{
  union
  {
    /* 0x0000 */ unsigned long _dwFlags;
    /* 0x0000 */ class CRWLock _mxs;
    /* 0x0000 */ class CClassCache::CCEHashTable _ClassEntries;
    /* 0x0000 */ class CClassCache::CDPEHashTable _DllPathEntries;
    /* 0x0000 */ const unsigned long _cCEBuckets;
    /* 0x0000 */ const unsigned long _cDPEBuckets;
    /* 0x0000 */ struct SHashChain _CEBuckets[23];
    /* 0x0000 */ struct SHashChain _DPEBuckets[23];
    /* 0x0000 */ class CClassCache::CLSvrClassEntry* _MTALSvrsFront;
    /* 0x0000 */ class CClassCache::CLSvrClassEntry* _NTALSvrsFront;
    /* 0x0000 */ unsigned long _cRefsServerProcess;
    /* 0x0000 */ const unsigned long _CollectAtObjectCount;
    /* 0x0000 */ const unsigned long _CollectAtInterval;
    /* 0x0000 */ unsigned long _LastCollectionTickCount;
    /* 0x0000 */ unsigned long _LastObjectCount;
    /* 0x0000 */ class CClassCache::CCollectable* _ObjectsForCollection;
  }; /* size: 0x00b8 */
}; /* size: 0x0001 */

class CClassCache::CBaseClassEntry
{
  /* 0x0004 */ class CClassCache::CBaseClassEntry* _pNext;
  /* 0x0008 */ class CClassCache::CBaseClassEntry* _pPrev;
  /* 0x000c */ class CClassCache::CClassEntry* _pClassEntry;
  /* 0x0010 */ unsigned long _dwContext;
  /* 0x0014 */ unsigned long _dwSig;
}; /* size: 0x0018 */

class CClassCache::CCEHashTable
{
}; /* size: 0x0018 */

enum CClassCache::CCEHashTable::eFlags
{
  fTREAT_AS = 1,
  fINCOMPLETE = 2,
  fDO_NOT_HASH = 4,
  fCOMPLUS = 8,
  fSIDE_BY_SIDE = 16,
  fSIDE_BY_SIDE_WITH_NO_HASHING = 32,
};

class CClassCache::CClassEntry
{
  /* 0x000c */ struct SMultiGUIDHashNode _hashNode;
  /* 0x001c */ struct _GUID _guids[2];
  /* 0x003c */ unsigned long _dwSig;
  /* 0x0040 */ unsigned long _dwFlags;
  /* 0x0044 */ class CClassCache::CClassEntry* _pTreatAsList;
  /* 0x0048 */ class CClassCache::CBaseClassEntry* _pBCEListFront;
  /* 0x004c */ class CClassCache::CBaseClassEntry* _pBCEListBack;
  /* 0x0050 */ unsigned long _cLocks;
  /* 0x0054 */ unsigned long _dwFailedContexts;
  /* 0x0058 */ struct IComClassInfo* _pCI;
  union
  {
    /* 0x0000 */ const unsigned long TREAT_AS_SIG;
    /* 0x0000 */ const unsigned long CLASS_ENTRY_SIG;
    /* 0x0000 */ const unsigned long INCOMPLETE_ENTRY_SIG;
    /* 0x0000 */ unsigned long _dwSxSMaxHashCount;
    /* 0x0000 */ unsigned long _dwSxSHashCount;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0040 */
}; /* size: 0x005c */

enum CClassCache::CClassEntry::eFlags
{
  fTREAT_AS = 1,
  fINCOMPLETE = 2,
  fDO_NOT_HASH = 4,
  fCOMPLUS = 8,
  fSIDE_BY_SIDE = 16,
  fSIDE_BY_SIDE_WITH_NO_HASHING = 32,
};

enum CClassCache::CClassEntry::eGUIDIndex
{
  iCLSID = 0,
  iPartition = 1,
  iTotal = 2,
};

class CClassCache::CCollectable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CCollectable* NOT_COLLECTED;
      /* 0x0004 */ class CClassCache::CCollectable* _pNextCollectee;
      /* 0x0008 */ unsigned long _dwTickLastTouched;
    }; /* size: 0x000c */
    /* 0x0000 */ unsigned long _dwCollectionGracePeriod;
    /* 0x0000 */ unsigned long _dwCollectionFrequency;
  }; /* size: 0x000c */
}; /* size: 0x000c */

class CClassCache::CDPEHashTable
{
}; /* size: 0x0018 */

class CClassCache::CDllAptEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CDllAptEntry* _pNext;
      /* 0x0004 */ class CClassCache::CDllAptEntry* _pPrev;
      /* 0x0008 */ unsigned long _dwSig;
      /* 0x000c */ unsigned long _hApt;
      /* 0x0010 */ struct HINSTANCE__* _hDll;
    }; /* size: 0x0014 */
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0040 */
}; /* size: 0x0014 */

class CClassCache::CDllClassEntry
{
  /* 0x0018 */ unsigned long _dwDllThreadModel;
  /* 0x001c */ class CClassCache::CDllPathEntry* _pDllPathEntry;
  /* 0x0020 */ class CClassCache::CDllClassEntry* _pDllClsNext;
  /* 0x0024 */ struct _GUID _impclsid;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0040 */
}; /* size: 0x0034 */

class CClassCache::CDllFnPtrMoniker
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ class CClassCache::CDllClassEntry* _pDCE;
}; /* size: 0x000c */

class CClassCache::CDllPathEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CDllPathEntry* _pNext;
      /* 0x0004 */ class CClassCache::CDllPathEntry* _pPrev;
      /* 0x0008 */ unsigned long _dwHash;
      /* 0x000c */ wchar_t* _psPath;
      /* 0x0010 */ unsigned long _dwSig;
      /* 0x0014 */ void* _pfnGetClassObject /* function */;
      /* 0x0018 */ void* _pfnDllCanUnload /* function */;
      /* 0x001c */ unsigned long _dwFlags;
      /* 0x0020 */ int _fGCO_WAS_HERE;
      /* 0x0024 */ class CClassCache::CDllClassEntry* _p1stClass;
      /* 0x0028 */ unsigned long _cUsing;
      /* 0x002c */ class CClassCache::CDllAptEntry* _pAptEntryFront;
      /* 0x0030 */ class CClassCache::CDllAptEntry* _pAptEntryBack;
      /* 0x0034 */ struct HINSTANCE__* _hDll32;
      /* 0x0038 */ unsigned long _dwExpireTime;
    }; /* size: 0x003c */
    /* 0x0000 */ const unsigned long DLL_DELAY_UNLOAD_TIME;
    /* 0x0000 */ const char* DLL_GET_CLASS_OBJECT_EP /* zero-length array */;
    /* 0x0000 */ const char* DLL_CAN_UNLOAD_EP /* zero-length array */;
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0040 */
}; /* size: 0x003c */

class CClassCache::CDllPathEntry::CFinishObject
{
  /* 0x0004 */ struct HINSTANCE__* _hDll;
  /* 0x0008 */ unsigned long _dwFlags;
}; /* size: 0x000c */

enum CClassCache::CDllPathEntry::eFlags
{
  fSIXTEEN_BIT = 1,
  fWX86 = 2,
  fIS_OLE32 = 4,
  fDELAYED_UNLOAD = 16,
};

class CClassCache::CFinishComposite
{
  /* 0x0000 */ struct CClassCache::CFinishComposite::node* _pFinishNodesFront;
  /* 0x0004 */ struct CClassCache::CFinishComposite::node* _pFinishNodesBack;
}; /* size: 0x0008 */

struct CClassCache::CFinishComposite::node
{
  /* 0x0000 */ struct CClassCache::CFinishComposite::node* _pNext;
  /* 0x0004 */ struct CClassCache::CFinishComposite::node* _pPrev;
  /* 0x0008 */ class IFinish* _pIF;
}; /* size: 0x000c */

class CClassCache::CLSvrClassEntry
{
  /* 0x0018 */ class CClassCache::CLSvrClassEntry* _pNextLSvr;
  /* 0x001c */ class CClassCache::CLSvrClassEntry* _pPrevLSvr;
  /* 0x0020 */ struct IUnknown* _pUnk;
  /* 0x0024 */ unsigned long _dwRegFlags;
  /* 0x0028 */ unsigned long _dwFlags;
  /* 0x002c */ unsigned long _dwScmReg;
  /* 0x0030 */ unsigned long _hApt;
  /* 0x0034 */ struct HWND__* _hWndDdeServer;
  /* 0x0038 */ class CObjServer* _pObjServer;
  /* 0x003c */ unsigned long _dwCookie;
  /* 0x0040 */ unsigned long _cUsing;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ const unsigned long DUMMY_SIG;
    /* 0x0000 */ const unsigned long NO_SCM_REG;
    /* 0x0000 */ unsigned long _dwNextCookieCount;
    /* 0x0000 */ unsigned long _cOutstandingObjects;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0040 */
}; /* size: 0x0044 */

class CClassCache::CLSvrClassEntry::CFinishObject
{
  /* 0x0004 */ unsigned long _dwScmReg;
  /* 0x0008 */ struct HWND__* _hWndDdeServer;
  /* 0x000c */ struct IUnknown* _pUnk;
  /* 0x0010 */ struct _GUID _clsid;
}; /* size: 0x0020 */

enum CClassCache::CLSvrClassEntry::eFlags
{
  fAT_STORAGE = 1,
  fREVOKE_PENDING = 2,
  fBEEN_USED = 16,
};

class CClassCache::CpUnkMoniker
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ struct IUnknown* _pUnk;
}; /* size: 0x000c */

class CClassCache::IMiniMoniker
{
}; /* size: 0x0004 */

struct CClassCache::ReleaseCatalogObjects::__l2::STmpCI
{
  /* 0x0000 */ struct IComClassInfo* arCI[10];
  /* 0x0028 */ struct CClassCache::ReleaseCatalogObjects::__l2::STmpCI* pNext;
}; /* size: 0x002c */

struct CClassCache::SDPEHashKey
{
  /* 0x0000 */ wchar_t* _pstr;
  /* 0x0004 */ unsigned long _dwDIPFlags;
}; /* size: 0x0008 */

enum CClassCache::eFlags
{
  fINITIALIZED = 1,
  fSHUTTINGDOWN = 2,
};

class CClassMoniker
{
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ struct ClassMonikerData _data;
  /* 0x0024 */ void* _pExtra;
  /* 0x0028 */ wchar_t* _pszCodeBase;
  /* 0x002c */ unsigned long _dwFileVersionMS;
  /* 0x0030 */ unsigned long _dwFileVersionLS;
}; /* size: 0x0034 */

class CClassMonikerFactory
{
}; /* size: 0x0008 */

class CCliModalLoop
{
  /* 0x0000 */ HRESULT _hr;
  /* 0x0004 */ class CCliModalLoop* _pPrev;
  /* 0x0008 */ unsigned long _dwTIDCallee;
  /* 0x000c */ unsigned long _dwMsgQInputFlag;
  /* 0x0010 */ struct _GUID _lid;
  /* 0x0020 */ unsigned long _dwFlags;
  /* 0x0024 */ unsigned long _dwWaitFlags;
  /* 0x0028 */ unsigned int _wQuitCode;
  /* 0x002c */ unsigned long _dwTimeOfCall;
  /* 0x0030 */ unsigned long _dwWakeup;
  /* 0x0034 */ unsigned long _dwMillSecToWait;
  /* 0x0038 */ unsigned long _dwCancelTimeout;
  /* 0x003c */ int _fUseOldModalLoop;
  /* 0x0040 */ class CAptCallCtrl* _pACC;
  /* 0x0044 */ void* _hToken;
  /* 0x0048 */ int _fCoWaitCalled;
}; /* size: 0x004c */

class CCliRotHintTable
{
  /* 0x0004 */ void* _hSm;
}; /* size: 0x0008 */

class CClientCall
{
  /* 0x00c8 */ unsigned long m_cRefs;
  /* 0x00cc */ unsigned long m_dwFlags;
  /* 0x00d0 */ void* m_hThread;
  /* 0x00d4 */ unsigned long m_dwThreadId;
  union
  {
    /* 0x0000 */ void* _aList[8];
    /* 0x0000 */ unsigned long _iNext;
  }; /* size: 0x0020 */
}; /* size: 0x00d8 */

class CClientCallMgr
{
  /* 0x0010 */ class CClientCallMgr::CPrivUnknown _privUnk;
  /* 0x0014 */ unsigned long _dwFlags;
  /* 0x0018 */ unsigned long _cRefs;
  /* 0x001c */ struct IUnknown* _pUnkOuter;
  /* 0x0020 */ class CClientCallMgr* _pNextMgr;
  /* 0x0024 */ struct _GUID _asyncIID;
  /* 0x0034 */ class CStdIdentity* _pStdId;
  /* 0x0038 */ struct IRpcProxyBuffer* _pProxyObj;
  /* 0x003c */ class CChannelObject* _pChnlObj;
  /* 0x0040 */ struct IClientSecurity* _pICS;
  /* 0x0044 */ struct ICancelMethodCalls* _pICMC;
  /* 0x0048 */ class CStdEvent _cStdEvent;
}; /* size: 0x0064 */

class CClientCallMgr::CPrivUnknown
{
}; /* size: 0x0004 */

class CClientContextActivator
{
}; /* size: 0x0004 */

class CClientSecurity
{
  /* 0x0004 */ class CStdIdentity* _pStdId;
}; /* size: 0x0008 */

class CClipDataObject
{
  /* 0x0008 */ void* m_hOle1;
  /* 0x000c */ struct IUnknown* m_pUnkOle1;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_Internalrefs;
  /* 0x0018 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x001c */ struct IDataObject* m_pDataObject;
  /* 0x0020 */ int m_fTriedToGetDataObject;
}; /* size: 0x0024 */

class CCoTaskAllocator
{
}; /* size: 0x0004 */

class CComActivator
{
  /* 0x000c */ long _ulRef;
  /* 0x0010 */ class OpaqueDataInfo* _pOpaqueData;
  /* 0x0014 */ class SpecialProperties* _pProps;
  /* 0x0018 */ int _fActPropsInitNecessary;
}; /* size: 0x001c */

class CComApartment
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ unsigned long _dwState;
  /* 0x000c */ enum tagAPTKIND _AptKind;
  /* 0x0010 */ unsigned long _AptId;
  /* 0x0014 */ class OXIDEntry* _pOXIDEntry;
  /* 0x0018 */ class CRemoteUnknown* _pRemUnk;
  /* 0x001c */ long _cWaiters;
  /* 0x0020 */ void* _hEventOID;
  /* 0x0024 */ unsigned long _cPreRegOidsAvail;
  /* 0x0028 */ unsigned __int64 _arPreRegOids[20];
  /* 0x00c8 */ unsigned long _cOidsReturn;
  /* 0x00d0 */ unsigned __int64 _arOidsReturn[20];
  /* 0x0170 */ struct CComApartment::MessageListHead _arMessageParams[8];
  /* 0x01b0 */ int _fInitializedCS;
  /* 0x01b4 */ struct _RTL_CRITICAL_SECTION _csMessageParams;
}; /* size: 0x01d0 */

struct CComApartment::MessageListHead
{
  /* 0x0000 */ class IMessageParam* pFirst;
  /* 0x0004 */ class IMessageParam* pLast;
}; /* size: 0x0008 */

class CComCat
{
  /* 0x0008 */ class CComCat::CInnerUnk* m_punkInner;
  /* 0x000c */ struct IUnknown* m_punkOuter;
  /* 0x0010 */ struct ICatInformation* m_pcsICatInfo;
  /* 0x0014 */ struct _RTL_CRITICAL_SECTION m_csCatInfoInit;
  /* 0x002c */ unsigned long m_dwRefCount;
  /* 0x0030 */ int m_fCsFlag;
  /* 0x0034 */ int m_bLockValid;
}; /* size: 0x0038 */

class CComCat::CInnerUnk
{
  /* 0x0004 */ class CComCat* m_pObj;
}; /* size: 0x0008 */

class CComCatalog
{
  /* 0x0018 */ long m_cRef;
  /* 0x001c */ struct IComCatalogInternal* m_pCatalogRegNative;
  /* 0x0020 */ struct IComCatalogInternal* m_pCatalogCOMBaseInCLB;
  /* 0x0024 */ struct IComCatalogInternal* m_pCatalogRegNonNative;
  /* 0x0028 */ struct IComCatalogInternal* m_pCatalogCLB;
  /* 0x002c */ struct IComCatalogInternal* m_pCatalogSxS;
  union
  {
    /* 0x0000 */ int ms_fComPlusEnabled;
    /* 0x0000 */ int ms_fComPlusEnabledInitialized;
    /* 0x0000 */ int ms_fComPlusCatalogsResolved;
    /* 0x0000 */ int ms_fInitialized;
  }; /* size: 0x0004 */
}; /* size: 0x0030 */

class CComClassInfo
{
  /* 0x0014 */ long m_cRef;
  /* 0x0018 */ long m_cLocks;
  /* 0x001c */ struct _GUID m_clsid;
  /* 0x002c */ struct _GUID m_guidProcessId;
  /* 0x003c */ enum tagLocalServerType m_serverType;
  /* 0x0040 */ struct IUnknown* m_pProcessInfo;
  /* 0x0044 */ wchar_t m_wszClsidString[45];
  /* 0x00a0 */ wchar_t* m_pwszProgid;
  /* 0x00a4 */ wchar_t* m_pwszClassName;
  /* 0x00a8 */ int m_clsctx;
  /* 0x00ac */ int m_threadingmodel;
  /* 0x00b0 */ unsigned long m_regType;
  /* 0x00b4 */ wchar_t* m_pwszInprocServer32;
  /* 0x00b8 */ wchar_t* m_pwszInprocHandler32;
  /* 0x00bc */ wchar_t* m_pwszLocalServer;
  /* 0x00c0 */ wchar_t* m_pwszInprocServer16;
  /* 0x00c4 */ wchar_t* m_pwszInprocHandler16;
  /* 0x00c8 */ wchar_t* m_pwszSurrogateCommand;
  /* 0x00cc */ wchar_t* m_pwszServerExecutable;
  /* 0x00d0 */ unsigned long m_dwPreferredServerBitness;
  /* 0x00d4 */ unsigned long m_dwLocalServer32BinaryBitness;
  /* 0x00d8 */ int m_bLUAEnabled;
  /* 0x00dc */ wchar_t* m_pwszDisplayName;
  /* 0x00e0 */ wchar_t* m_pwszBinaryName;
  /* 0x00e4 */ wchar_t* m_pwszIconReference;
  /* 0x00e8 */ struct _KEY_FULL_INFORMATION* m_pKeyInformation;
  /* 0x00ec */ struct _KEY_NAME_INFORMATION* m_pKeyNameInformation;
}; /* size: 0x00f0 */

class CComNoClassInfo
{
  /* 0x000c */ long m_cRef;
  /* 0x0010 */ struct _GUID m_clsid;
  /* 0x0020 */ wchar_t* m_wszProgID;
  /* 0x0024 */ unsigned long m_ValueFlags;
}; /* size: 0x0028 */

class CComProcessInfo
{
  /* 0x000c */ long m_cRef;
  /* 0x0010 */ struct _GUID m_guidProcessId;
  /* 0x0020 */ wchar_t* m_pwszProcessName;
  /* 0x0024 */ enum tagProcessType m_eProcessType;
  /* 0x0028 */ wchar_t* m_pwszServiceName;
  /* 0x002c */ wchar_t* m_pwszServiceParameters;
  /* 0x0030 */ int m_fActivateAtStorage;
  /* 0x0034 */ wchar_t* m_pwszRunAsUser;
  /* 0x0038 */ enum tagRunAsType m_eRunAsType;
  /* 0x003c */ wchar_t* m_pwszSurrogatePath;
  /* 0x0040 */ struct _SECURITY_DESCRIPTOR* m_pLaunchPermission;
  /* 0x0044 */ unsigned long m_cbLaunchPermission;
  /* 0x0048 */ unsigned long m_dwAuthenticationLevel;
  /* 0x004c */ unsigned long m_dwROTFlags;
  /* 0x0050 */ unsigned long m_dwAppIDFlags;
  /* 0x0054 */ wchar_t* m_pwszRemoteServerName;
  /* 0x0058 */ unsigned long m_dwFlags;
  /* 0x005c */ unsigned long m_dwSaferTrustLevel;
  /* 0x0060 */ struct _KEY_FULL_INFORMATION* m_pKeyInformation;
  /* 0x0064 */ struct _KEY_NAME_INFORMATION* m_pKeyNameInformation;
  union
  {
    /* 0x0000 */ int m_fGotLegacyLevels;
    /* 0x0000 */ unsigned long m_dwLegacyAuthenticationLevel;
    /* 0x0000 */ unsigned long m_dwLegacyImpersonationLevel;
  }; /* size: 0x0004 */
  /* 0x0068 */ unsigned long m_dwPreferredServerBitness;
  /* 0x006c */ wchar_t* m_pwszSurrogateCommandDebug;
  /* 0x0070 */ wchar_t* m_pwszServerExecutable;
  /* 0x0074 */ int m_bLoadUserSettings;
  /* 0x0078 */ int m_fDebugSurrogate;
}; /* size: 0x007c */

class CComRegCatalog
{
  /* 0x0004 */ unsigned long m_regType;
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ struct HKEY__* m_hkeyClassesRoot;
}; /* size: 0x0010 */

class CComSxSCatalog
{
  /* 0x0004 */ long m_cRef;
}; /* size: 0x0008 */

class CComSxSClassInfo
{
  /* 0x000c */ long m_cRef;
  /* 0x0010 */ long m_cLocks;
  /* 0x0014 */ long m_cLocksExternal;
  /* 0x0018 */ void* m_hActCtx;
  /* 0x001c */ const struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION* m_pData;
  /* 0x0020 */ unsigned long m_ulDataLength;
  /* 0x0024 */ void* m_pSectionBase;
  /* 0x0028 */ unsigned long m_ulSectionLength;
  /* 0x002c */ wchar_t m_bufModulePath[260];
}; /* size: 0x0234 */

class CCompositeMoniker
{
  /* 0x0014 */ class CTrackingCompositeMoniker _tcm;
  /* 0x001c */ struct IMoniker* m_pmkLeft;
  /* 0x0020 */ struct IMoniker* m_pmkRight;
  /* 0x0024 */ int m_fReduced;
  /* 0x0028 */ int m_fReduceForced;
}; /* size: 0x002c */

class CCompositeMonikerEnum
{
  /* 0x0004 */ unsigned long m_refs;
  /* 0x0008 */ class CCompositeMoniker* m_pCM;
  /* 0x000c */ int m_fForward;
  /* 0x0010 */ struct CCompositeMonikerEnum::se* m_pBase;
  /* 0x0014 */ struct CCompositeMonikerEnum::se* m_pTop;
  /* 0x0018 */ struct IMoniker* m_pNext;
}; /* size: 0x001c */

struct CCompositeMonikerEnum::se
{
  /* 0x0000 */ class CCompositeMoniker* m_pCM;
  /* 0x0004 */ struct CCompositeMonikerEnum::se* m_pseNext;
  /* 0x0008 */ struct CCompositeMonikerEnum::se* m_psePrev;
}; /* size: 0x000c */

class CConnectionPoint
{
  /* 0x0004 */ unsigned long _dwCookie;
  /* 0x0008 */ long _cReferences;
  /* 0x000c */ class CSinkList* _pSinkHead;
  /* 0x0010 */ struct IDocfileAsyncConnectionPoint* _pParentCP;
  /* 0x0014 */ int _fCSInitialized;
  /* 0x0018 */ struct _RTL_CRITICAL_SECTION _csSinkList;
}; /* size: 0x0030 */

class CContext
{
  /* 0x0000 */ unsigned long ctxid;
  /* 0x0004 */ class CBasedContextPtr pctxNext;
}; /* size: 0x0008 */

class CContextLife
{
  /* 0x0000 */ unsigned long _dwAlive;
  /* 0x0004 */ long _cRefs;
}; /* size: 0x0008 */

class CContextList
{
  /* 0x0000 */ class CBasedContextPtr _pctxHead;
  /* 0x0004 */ long _cReferences;
}; /* size: 0x0008 */

class CContextPropList
{
  union
  {
    struct
    {
      /* 0x0000 */ int _Max;
      /* 0x0004 */ int _iFirst;
      /* 0x0008 */ int _iLast;
      /* 0x000c */ int _Count;
      /* 0x0010 */ int _cCompareProps;
      /* 0x0014 */ unsigned long _Hash;
      /* 0x0018 */ int _slotIdx;
      /* 0x001c */ struct tagContextProperty* _pProps;
      /* 0x0020 */ int* _pSlots;
      /* 0x0024 */ struct tagContextProperty* _pCompareBuffer;
      /* 0x0028 */ struct _tagSCtxListIndex* _pIndex;
    }; /* size: 0x002c */
    /* 0x0000 */ class CPageAllocator s_NodeAllocator;
  }; /* size: 0x0040 */
}; /* size: 0x002c */

class CContextSwitcher
{
  /* 0x0004 */ class CObjectContext* _context;
  /* 0x0008 */ long _cRefs;
}; /* size: 0x000c */

class CContinue
{
  /* 0x0004 */ long _cRef;
  /* 0x0008 */ void* _pfnContinue /* function */;
  /* 0x000c */ long _dwContinue;
}; /* size: 0x0010 */

class CCtxCall
{
  /* 0x0004 */ unsigned long _dwFlags;
  /* 0x0008 */ unsigned long _dwStage;
  /* 0x000c */ unsigned long _cMarshalItfs;
  /* 0x0010 */ unsigned long _cUnmarshalItfs;
  /* 0x0014 */ unsigned long _cFree;
  /* 0x0018 */ unsigned long _cError;
  /* 0x001c */ int _fError;
  /* 0x0020 */ unsigned long _dwDestCtx;
  /* 0x0024 */ unsigned long _cItfs;
  /* 0x0028 */ unsigned long _idx;
  /* 0x002c */ void** _ppItfs;
  /* 0x0030 */ unsigned long _cPolicies;
  /* 0x0034 */ unsigned long _cbExtent;
  /* 0x0038 */ void* _pvExtent;
  /* 0x003c */ HRESULT _hr;
  /* 0x0040 */ class CPolicySet* _pPS;
  /* 0x0044 */ class CObjectContext* _pContext;
  /* 0x0048 */ unsigned long _dataRep;
  /* 0x004c */ HRESULT _hrServer;
  union
  {
    /* 0x0000 */ void* s_pAllocList[20];
    /* 0x0000 */ int s_iAvailable;
    /* 0x0000 */ class COleStaticMutexSem _mxsCtxCallLock;
  }; /* size: 0x0050 */
}; /* size: 0x0050 */

class CCtxChnl
{
  /* 0x0008 */ unsigned long _dwState;
  /* 0x000c */ unsigned long _cRefs;
  /* 0x0010 */ class IFaceEntry* _pIFaceEntry;
  /* 0x0014 */ class CStdWrapper* _pStdWrapper;
  /* 0x0000 */ class CPageAllocator s_allocator;
}; /* size: 0x0018 */

class CCtxComChnl
{
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    struct
    {
      /* 0x0000 */ class COleStaticMutexSem _mxsCtxChnlLock;
      /* 0x003c */ class CObjectContext* _disconnectCtx;
    }; /* size: 0x0034 */
  }; /* size: 0x0040 */
}; /* size: 0x0040 */

class CCtxConnectionManager
{
  /* 0x0000 */ class CpUnkList* _pUnkList;
  /* 0x0004 */ class CObjServer* _pobjServer;
  /* 0x0008 */ volatile int _cObjRefs;
  /* 0x000c */ BOOL _disconnecting;
  /* 0x0010 */ void* _hdisconnectEvent;
  /* 0x0014 */ class CMutexSem2 _mutex;
  /* 0x0030 */ unsigned long _cRefs;
}; /* size: 0x0034 */

class CCtxHook
{
}; /* size: 0x0004 */

class CCtxPropHashTable
{
}; /* size: 0x0018 */

class CCtxTable
{
  union
  {
    /* 0x0000 */ class CCtxPropHashTable s_CtxPropHashTable;
    /* 0x0000 */ class CCtxUUIDHashTable s_CtxUUIDHashTable;
    /* 0x0000 */ struct SHashChain s_CtxPropBuckets[23];
    /* 0x0000 */ struct SHashChain s_CtxUUIDBuckets[23];
    /* 0x0000 */ int s_fInitialized;
  }; /* size: 0x00b8 */
}; /* size: 0x0001 */

class CCtxUUIDHashTable
{
}; /* size: 0x0018 */

class CDAHolder
{
  /* 0x0014 */ unsigned long m_dwConnection;
  /* 0x0018 */ int m_iSize;
  /* 0x001c */ struct tagSTATDATA* m_pSD;
}; /* size: 0x0020 */

class CDDEServer
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_dwClassFactoryKey;
  /* 0x0014 */ struct IClassFactory* m_pClassFactory;
  /* 0x0018 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x002c */ int m_bTerminate;
  /* 0x0030 */ struct HWND__* m_hwnd;
  /* 0x0034 */ void* m_hcli;
  /* 0x0038 */ int m_termNo;
  /* 0x003c */ int m_cSrvrClients;
  /* 0x0040 */ unsigned long m_fcfFlags;
  /* 0x0044 */ enum CNVTYP m_cnvtyp;
  /* 0x0048 */ enum CHK m_chk;
  /* 0x004c */ unsigned short m_aClass;
  /* 0x004e */ unsigned short m_aOriginalClass;
  /* 0x0050 */ unsigned short m_aExe;
  /* 0x0054 */ int m_fDoNotDestroyWindow;
}; /* size: 0x0058 */

enum CDFB_CLASSTYPE
{
  CDFB_DIRECTDOCFILE = 0,
  CDFB_DIRECTSTREAM = 1,
  CDFB_WRAPPEDDOCFILE = 2,
  CDFB_TRANSACTEDSTREAM = 3,
};

class CDFBasis
{
  union
  {
    struct
    {
      /* 0x0000 */ class CBasedMStreamPtr _pms;
      /* 0x0004 */ class CBasedMStreamPtr _pmsScratch;
      /* 0x0008 */ struct ILockBytes* _plkbBase;
      /* 0x000c */ struct CFileStream* _pfstDirty;
      /* 0x0010 */ struct ILockBytes* _plkbOriginal;
      /* 0x0014 */ const unsigned long _dfOpen;
      /* 0x0018 */ long _cReferences;
      /* 0x001c */ class CBasedPubDocFilePtr _pdfCopyBase;
      /* 0x0020 */ class CBasedGlobalContextPtr _pgcGlobalContext;
      /* 0x0024 */ unsigned long _dwOrigLocks;
      /* 0x0028 */ class CFreeList _afrl[4];
    }; /* size: 0x0038 */
    /* 0x0000 */ unsigned int _aReserveSize[4];
  }; /* size: 0x0038 */
  /* 0x0038 */ int _fDirectWriterMode;
  /* 0x003c */ int _fWriteLocked;
  /* 0x0040 */ struct IMalloc* const _pMalloc;
}; /* size: 0x0044 */

class CDIFat
{
  /* 0x0000 */ class CFatVector _fv;
  /* 0x0020 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0024 */ unsigned long _cfsTable;
  /* 0x0028 */ int _fDoingFixup;
  /* 0x002c */ unsigned long _cUnmarked;
  /* 0x0030 */ unsigned long _sectUnmarked[8];
  /* 0x0050 */ unsigned long _sectMarkTo[8];
  /* 0x0070 */ unsigned long _sectFree[8];
}; /* size: 0x0090 */

class CDWORDHashTable
{
}; /* size: 0x0018 */

class CData
{
  /* 0x0000 */ unsigned long m_cbSize;
  /* 0x0004 */ void* m_pv;
  /* 0x0008 */ void* m_h;
  /* 0x000c */ int m_fNoFree;
}; /* size: 0x0010 */

class CDataAdviseCache
{
  /* 0x0000 */ struct IDataAdviseHolder* m_pDAH;
  /* 0x0004 */ class CMapDwordDword m_mapClientToDelegate;
}; /* size: 0x002c */

class CDbgGuidStr
{
}; /* size: 0x0001 */

class CDdeConnectionTable
{
  /* 0x0000 */ void* m_h;
  /* 0x0004 */ unsigned long m_cinfo;
}; /* size: 0x0008 */

class CDdeObject
{
  /* 0x0000 */ int m_fDoingSendOnDataChange;
  /* 0x0004 */ unsigned long m_cRefCount;
  /* 0x0008 */ struct CDdeObject::CUnknownImpl m_Unknown;
  /* 0x0010 */ struct CDdeObject::COleObjectImpl m_Ole;
  /* 0x0018 */ struct CDdeObject::CDataObjectImpl m_Data;
  /* 0x0020 */ struct CDdeObject::CPersistStgImpl m_PersistStg;
  /* 0x0028 */ struct CDdeObject::CProxyManagerImpl m_ProxyMgr;
  /* 0x0030 */ struct CDdeObject::COleItemContainerImpl m_OleItemContainer;
  /* 0x0038 */ struct CDdeObject::CRpcStubBufferImpl m_RpcStubBuffer;
  /* 0x0040 */ unsigned long m_refs;
  /* 0x0044 */ unsigned long m_ulObjType;
  /* 0x0048 */ struct _GUID m_clsid;
  /* 0x0058 */ unsigned short m_aClass;
  /* 0x005a */ unsigned short m_aExeName;
  /* 0x005c */ unsigned short m_aTopic;
  /* 0x005e */ unsigned short m_aItem;
  /* 0x0060 */ int m_bRunning;
  /* 0x0064 */ struct IUnknown* m_pUnkOuter;
  /* 0x0068 */ struct IOleClientSite* m_pOleClientSite;
  /* 0x006c */ struct IStorage* m_pstg;
  /* 0x0070 */ int m_bInitNew;
  /* 0x0074 */ int m_bOldSvr;
  /* 0x0078 */ void* m_hNative;
  /* 0x007c */ void* m_hPict;
  /* 0x0080 */ void* m_hExtra;
  /* 0x0084 */ unsigned short m_cfPict;
  /* 0x0086 */ unsigned short m_cfExtra;
  /* 0x0088 */ int m_fDidSendOnClose;
  /* 0x008c */ int m_fNoStdCloseDoc;
  /* 0x0090 */ int m_fDidStdCloseDoc;
  /* 0x0094 */ int m_fDidStdOpenDoc;
  /* 0x0098 */ int m_fDidGetObject;
  /* 0x009c */ int m_fDidLaunchApp;
  /* 0x00a0 */ int m_fUpdateOnSave;
  /* 0x00a4 */ int m_fGotCloseData;
  /* 0x00a8 */ unsigned long m_cLocks;
  /* 0x00ac */ int m_fVisible;
  /* 0x00b0 */ int m_fWasEverVisible;
  /* 0x00b4 */ int m_fCalledOnShow;
  /* 0x00b8 */ unsigned long m_chk;
  /* 0x00bc */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x00c0 */ int m_iAdvClose;
  /* 0x00c4 */ int m_iAdvSave;
  /* 0x00c8 */ int m_iAdvChange;
  /* 0x00cc */ int m_fDidAdvNative;
  /* 0x00d0 */ unsigned short m_wTerminate;
  /* 0x00d4 */ struct IDataAdviseHolder* m_pDataAdvHolder;
  /* 0x00d8 */ struct IOleAdviseHolder* m_pOleAdvHolder;
  /* 0x00dc */ class CDdeConnectionTable m_ConnectionTable;
  /* 0x00e4 */ class DDE_CHANNEL* m_pSysChannel;
  /* 0x00e8 */ class DDE_CHANNEL* m_pDocChannel;
}; /* size: 0x00ec */

struct CDdeObject::CDataObjectImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

struct CDdeObject::COleItemContainerImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

struct CDdeObject::COleObjectImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

struct CDdeObject::CPersistStgImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

struct CDdeObject::CProxyManagerImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

struct CDdeObject::CRpcStubBufferImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

struct CDdeObject::CUnknownImpl
{
  /* 0x0004 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0008 */

class CDdeServerCallMgr
{
  /* 0x000c */ class CDefClient* m_pDefClient;
  /* 0x0010 */ class CDDEServer* m_pDDEServer;
}; /* size: 0x0014 */

class CDebugChannelHook
{
}; /* size: 0x0004 */

class CDebugEventFire
{
  /* 0x0004 */ unsigned long _cRef;
  /* 0x0008 */ struct _RTL_CRITICAL_SECTION _csEventFire;
  /* 0x0020 */ int _fLogDisabled;
  /* 0x0024 */ struct _GUID _guidSession;
  /* 0x0034 */ wchar_t* _strSessionName;
  /* 0x0038 */ struct ISystemDebugEventFire* _pEventFire;
  /* 0x003c */ struct IUnknown* _punkFTM;
}; /* size: 0x0040 */

class CDebugEventFireCF
{
}; /* size: 0x0004 */

class CDefClassFactory
{
  /* 0x000c */ struct _GUID m_clsid;
}; /* size: 0x001c */

class CDefClient
{
  /* 0x0000 */ enum CHK m_chk;
  /* 0x0004 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0018 */ enum tagSERVERCALLEX m_CallState;
  /* 0x001c */ struct IUnknown* m_pUnkOuter;
  /* 0x0020 */ struct IOleObject* m_lpoleObj;
  /* 0x0024 */ struct IDataObject* m_lpdataObj;
  /* 0x0028 */ int m_bCreateInst;
  /* 0x002c */ int m_bTerminate;
  /* 0x0030 */ int m_termNo;
  /* 0x0034 */ unsigned short m_aItem;
  /* 0x0038 */ void* m_hcli;
  /* 0x003c */ class CDefClient* m_lpNextItem;
  /* 0x0040 */ int m_bContainer;
  /* 0x0044 */ int m_cRef;
  /* 0x0048 */ struct HWND__* m_hwnd;
  /* 0x004c */ void* m_hdevInfo;
  /* 0x0050 */ void* m_hcliInfo;
  /* 0x0054 */ int m_fDidRealSetHostNames;
  /* 0x0058 */ int m_fDidSetClientSite;
  /* 0x005c */ int m_fGotDdeAdvise;
  /* 0x0060 */ int m_fCreatedNotConnected;
  /* 0x0064 */ int m_fInOnClose;
  /* 0x0068 */ int m_fInOleSave;
  /* 0x006c */ struct EXECUTEACK m_ExecuteAck;
  /* 0x007c */ unsigned long m_dwConnectionOleObj;
  /* 0x0080 */ unsigned long m_dwConnectionDataObj;
  /* 0x0084 */ struct ILockBytes* m_plkbytNative;
  /* 0x0088 */ struct IStorage* m_pstgNative;
  /* 0x008c */ int m_fRunningInSDI;
  /* 0x0090 */ class CDDEServer* m_psrvrParent;
  /* 0x0094 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x0098 */ int m_fGotStdCloseDoc;
  /* 0x009c */ int m_fGotEditNoPokeNativeYet;
  /* 0x00a0 */ int m_fLocked;
  /* 0x00a4 */ int m_fCallData;
  /* 0x00a8 */ int m_fEmbed;
  /* 0x00ac */ int m_cClients;
  /* 0x00b0 */ class CDefClient* m_pdoc;
  /* 0x00b4 */ struct CDefClient::CUnknownImpl m_Unknown;
  /* 0x00bc */ struct CDefClient::COleClientSiteImpl m_OleClientSite;
  /* 0x00c4 */ struct CDefClient::CAdviseSinkImpl m_AdviseSink;
}; /* size: 0x00cc */

struct CDefClient::CAdviseSinkImpl
{
  /* 0x0004 */ class CDefClient* m_pDefClient;
}; /* size: 0x0008 */

struct CDefClient::COleClientSiteImpl
{
  /* 0x0004 */ class CDefClient* m_pDefClient;
}; /* size: 0x0008 */

struct CDefClient::CUnknownImpl
{
  /* 0x0004 */ class CDefClient* m_pDefClient;
}; /* size: 0x0008 */

class CDefLink
{
  /* 0x0030 */ class CDefLink::CPrivUnknown m_Unknown;
  /* 0x0034 */ class CDefLink::CAdvSinkImpl m_AdviseSink;
  /* 0x0038 */ unsigned long m_flags;
  /* 0x003c */ unsigned long m_dwObjFlags;
  /* 0x0040 */ struct IDataObject* m_pDataDelegate;
  /* 0x0044 */ struct IOleObject* m_pOleDelegate;
  /* 0x0048 */ struct IRunnableObject* m_pRODelegate;
  /* 0x004c */ struct IOleItemContainer* m_pOleItemContainerDelegate;
  /* 0x0050 */ HRESULT m_ContentSRVMSHResult;
  /* 0x0054 */ unsigned long m_ContentSRVMSBits;
  /* 0x0058 */ HRESULT m_ContentREGMSHResult;
  /* 0x005c */ unsigned long m_ContentREGMSBits;
  /* 0x0060 */ unsigned long m_cRefsOnLink;
  /* 0x0064 */ struct IUnknown* m_pUnkOuter;
  /* 0x0068 */ struct IMoniker* m_pMonikerAbs;
  /* 0x006c */ struct IMoniker* m_pMonikerRel;
  /* 0x0070 */ struct IUnknown* m_pUnkDelegate;
  /* 0x0074 */ unsigned long m_dwUpdateOpt;
  /* 0x0078 */ struct _GUID m_clsid;
  /* 0x0088 */ struct IStorage* m_pStg;
  /* 0x008c */ class COleCache* m_pCOleCache;
  /* 0x0090 */ class COAHolder* m_pCOAHolder;
  /* 0x0094 */ unsigned long m_dwConnOle;
  /* 0x0098 */ class CDataAdviseCache* m_pDataAdvCache;
  /* 0x009c */ struct IOleClientSite* m_pAppClientSite;
  /* 0x00a0 */ unsigned long m_dwConnTime;
  /* 0x00a4 */ struct _FILETIME m_ltChangeOfUpdate;
  /* 0x00ac */ struct _FILETIME m_ltKnownUpToDate;
  /* 0x00b4 */ struct _FILETIME m_rtUpdate;
}; /* size: 0x00bc */

typedef enum _TAG_UNNAMED_25
{
  None = 0,
  Relative = 1,
  Ids = 2,
  Absolute = 3,
} TAG_UNNAMED_25, *PTAG_UNNAMED_25;

class CDefLink::CAdvSinkImpl
{
}; /* size: 0x0004 */

class CDefLink::CPrivUnknown
{
}; /* size: 0x0004 */

class CDefObject
{
  /* 0x0030 */ class CDefObject::CPrivUnknown m_Unknown;
  /* 0x0034 */ class CDefObject::CAdvSinkImpl m_AdviseSink;
  /* 0x0038 */ HRESULT m_ContentSRVMSHResult;
  /* 0x003c */ unsigned long m_ContentSRVMSBits;
  /* 0x0040 */ HRESULT m_ContentREGMSHResult;
  /* 0x0044 */ unsigned long m_ContentREGMSBits;
  /* 0x0048 */ struct IOleObject* m_pOleDelegate;
  /* 0x004c */ struct IDataObject* m_pDataDelegate;
  /* 0x0050 */ struct IPersistStorage* m_pPSDelegate;
  /* 0x0054 */ unsigned long m_cConnections;
  /* 0x0058 */ struct IUnknown* m_pUnkOuter;
  /* 0x005c */ struct _GUID m_clsidServer;
  /* 0x006c */ struct _GUID m_clsidBits;
  /* 0x007c */ unsigned long m_flags;
  /* 0x0080 */ unsigned long m_dwObjFlags;
  /* 0x0084 */ struct IClassFactory* m_pCFDelegate;
  /* 0x0088 */ struct IUnknown* m_pUnkDelegate;
  /* 0x008c */ struct IProxyManager* m_pProxyMgr;
  /* 0x0090 */ class COleCache* m_pCOleCache;
  /* 0x0094 */ class COAHolder* m_pOAHolder;
  /* 0x0098 */ unsigned long m_dwConnOle;
  /* 0x009c */ struct IOleClientSite* m_pAppClientSite;
  /* 0x00a0 */ struct IStorage* m_pStg;
  /* 0x00a4 */ char* m_pHostNames;
  /* 0x00a8 */ unsigned long m_ibCntrObj;
  /* 0x00ac */ class CDataAdviseCache* m_pDataAdvCache;
}; /* size: 0x00b0 */

class CDefObject::CAdvSinkImpl
{
}; /* size: 0x0004 */

class CDefObject::CPrivUnknown
{
}; /* size: 0x0004 */

class CDelayUnlockContainer
{
  /* 0x0004 */ unsigned long m_refs;
  /* 0x0008 */ struct IOleItemContainer* m_pOleCont;
}; /* size: 0x000c */

class CDeltaList
{
  /* 0x0000 */ class CBasedDeltaBlockPtrPtr _apdb;
  /* 0x0004 */ unsigned long _ulSize;
  /* 0x0008 */ class CBasedMStreamPtr _pmsScratch;
  /* 0x000c */ class CBasedMStreamPtr _pms;
  /* 0x0010 */ class CBasedTransactedStreamPtr _ptsParent;
  /* 0x0014 */ unsigned long _sectStart;
}; /* size: 0x0018 */

class CDestObject
{
  /* 0x0004 */ struct tagCOMVERSION _comversion;
  /* 0x0008 */ unsigned long _dwDestCtx;
}; /* size: 0x000c */

class CDestObjectWrapper
{
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ struct IDestInfo* m_pIDI;
}; /* size: 0x0010 */

class CDfMutex
{
  /* 0x0000 */ struct _GLOBAL_SHARED_CRITICAL_SECTION* _pGlobalPortion;
  /* 0x0004 */ void* _hLockEvent;
}; /* size: 0x0008 */

class CDfName
{
  /* 0x0000 */ unsigned char _ab[64];
  /* 0x0040 */ unsigned short _cb;
}; /* size: 0x0042 */

class CDfNameList
{
  /* 0x0000 */ class CDfName _df;
  /* 0x0044 */ unsigned long _sectStart;
  /* 0x0048 */ unsigned long _ulSize;
  /* 0x004c */ class CDfNameList* _pdflNext;
}; /* size: 0x0050 */

class CDirEntry
{
}; /* size: 0x0080 */

class CDirSect
{
  /* 0x0000 */ class CDirEntry* _adeEntry /* zero-length array */;
}; /* size: 0x0001 */

class CDirVector
{
  /* 0x001c */ unsigned short _cbSector;
}; /* size: 0x0020 */

class CDirectStream
{
  /* 0x000c */ class CStmHandle _stmh;
  /* 0x0014 */ class CStreamCache _stmc;
  /* 0x0098 */ unsigned __int64 _ulSize;
  /* 0x00a0 */ unsigned __int64 _ulOldSize;
  /* 0x00a8 */ class CBasedDeltaListPtr _pdlHolder;
}; /* size: 0x00b0 */

class CDirectory
{
  /* 0x0000 */ class CDirVector _dv;
  /* 0x0020 */ unsigned long _cdsTable;
  /* 0x0024 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0028 */ unsigned short _cdeEntries;
  /* 0x002c */ unsigned long _sidFirstFree;
}; /* size: 0x0030 */

class CDlElement
{
  /* 0x0000 */ class CBasedDlElementPtr _pdlePrev;
  /* 0x0004 */ class CBasedDlElementPtr _pdleNext;
}; /* size: 0x0008 */

class CDllHost
{
  /* 0x000c */ struct IDLLHost* _pIDllProxy;
  /* 0x0010 */ class CStdIdentity* _pStdId;
  /* 0x0014 */ unsigned long _dwType;
  /* 0x0018 */ unsigned long _dwHostAptId;
  /* 0x001c */ unsigned long _hActivator;
  /* 0x0020 */ unsigned long _dwTid;
  /* 0x0024 */ HRESULT _hrMarshal;
  /* 0x0028 */ void* _hEvent;
  /* 0x002c */ void* _hEventWakeUp;
  /* 0x0030 */ HRESULT _hr;
  /* 0x0038 */ struct tagOBJREF _objref;
  /* 0x0090 */ class COleStaticMutexSem _mxs;
}; /* size: 0x00c0 */

class CDocFile
{
  /* 0x000c */ class CUpdateList _ulChangedHolder;
  /* 0x0014 */ class CStgHandle _stgh;
  /* 0x001c */ const class CBasedDFBasisPtr _pdfb;
}; /* size: 0x0020 */

class CDocfileStreamName
{
  /* 0x0000 */ wchar_t _wszName[37];
}; /* size: 0x004a */

class CDocfileUnmarshalFactory
{
  /* 0x0008 */ unsigned long _sig;
}; /* size: 0x000c */

class CDragDataObject
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ void* _pvMarshaledDataObject;
  /* 0x000c */ struct IDataObject* _pIDataObject;
  /* 0x0010 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0014 */ unsigned long _dwSmId;
}; /* size: 0x0018 */

class CDragDefaultCursors
{
  /* 0x0000 */ struct HICON__* ahcursorDefaults[4][2];
}; /* size: 0x0020 */

enum CDragDefaultCursors::CURSOR_ID
{
  NO_DROP = 0,
  MOVE_DROP = 1,
  COPY_DROP = 2,
  LINK_DROP = 3,
};

enum CDragDefaultCursors::SCROLL_TYPE
{
  NO_SCROLL = 0,
  SCROLL = 1,
};

class CDragOperation
{
  union
  {
    struct
    {
      /* 0x0000 */ struct IDataObject* _pDataObject;
      /* 0x0004 */ void* _DOBuffer;
      /* 0x0008 */ struct IDropSource* _pDropSource;
      /* 0x000c */ struct IDropSourceQueryEx* _pDSQueryEx;
      /* 0x0010 */ struct IDropSourceNotify* _pDSNotify;
      /* 0x0014 */ struct IDropTarget* _pDropTarget;
      /* 0x0018 */ struct IDropTarget* _pRealDropTarget;
      /* 0x001c */ void* _hFormats;
      /* 0x0020 */ class CPoint _cpt;
      /* 0x0028 */ unsigned long _dwOKEffects;
      /* 0x002c */ unsigned long* _pdwEffect;
      /* 0x0030 */ int _fEscapePressed;
      /* 0x0034 */ struct HICON__* _curOld;
      /* 0x0038 */ struct HWND__* _hwndLast;
      /* 0x003c */ unsigned long _grfKeyState;
      /* 0x0040 */ HRESULT _hrDragResult;
      /* 0x0044 */ int _fReleasedCapture;
      /* 0x0048 */ class CDragDefaultCursors* _pcddcDefault;
      /* 0x004c */ int _fUseWin31;
      /* 0x0050 */ unsigned long _dwFinalKeyState;
      /* 0x0054 */ class CPoint _cptFinalCursorPos;
    }; /* size: 0x005c */
    /* 0x0000 */ long s_wScrollInt;
  }; /* size: 0x005c */
}; /* size: 0x005c */

class CDropTarget
{
  /* 0x0004 */ struct HWND__* _hwndOLE;
  /* 0x0008 */ struct HWND__* _hwnd31;
  /* 0x000c */ unsigned long _dwEffectLast;
  /* 0x0010 */ unsigned long _crefs;
  /* 0x0014 */ class CDragOperation* _pdo;
  /* 0x0018 */ void* _hDDInfo;
}; /* size: 0x001c */

class CDualStringArray
{
  /* 0x0000 */ struct tagDUALSTRINGARRAY* _pdsa;
  /* 0x0004 */ long _cRef;
}; /* size: 0x0008 */

class CDwordBag
{
  /* 0x0014 */ unsigned long _dwSlotsUsed;
}; /* size: 0x0018 */

class CEMfObject
{
  /* 0x0004 */ unsigned long m_ulRefs;
  /* 0x0008 */ struct HENHMETAFILE__* m_hPres;
  /* 0x000c */ int m_fMetaDC;
  /* 0x0010 */ int m_nRecord;
  /* 0x0014 */ HRESULT m_error;
  /* 0x0018 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x001c */ void* m_pfnContinue /* function */;
  /* 0x0020 */ unsigned long m_dwContinue;
  /* 0x0024 */ unsigned long m_dwAspect;
  /* 0x0028 */ unsigned long m_dwSize;
  /* 0x002c */ long m_lWidth;
  /* 0x0030 */ long m_lHeight;
  /* 0x0034 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0038 */

class CEffPermsCacheLUID
{
  /* 0x0000 */ struct CEffPermsCacheLUID::tagCACHE_ENTRY m_cache[23];
  /* 0x0114 */ struct _RTL_CRITICAL_SECTION m_CacheLock;
  /* 0x012c */ int m_bLockValid;
}; /* size: 0x0130 */

struct CEffPermsCacheLUID::tagCACHE_ENTRY
{
  /* 0x0000 */ struct _LUID lClient;
  /* 0x0008 */ unsigned long dwEffectivePermissions;
}; /* size: 0x000c */

class CEndPointAtom
{
  /* 0x0000 */ unsigned short s_AtomProp;
}; /* size: 0x0001 */

class CEndpointEntry
{
  /* 0x0000 */ class CEndpointEntry* m_pNext;
  /* 0x0004 */ unsigned short m_wTowerId;
  /* 0x0008 */ wchar_t* m_pszEndpoint;
  /* 0x000c */ wchar_t* m_pszProtSeq;
  /* 0x0010 */ unsigned long m_dwFlags;
  /* 0x0014 */ int m_fProcessed;
}; /* size: 0x0018 */

class CEndpointsTable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CEndpointEntry* m_pHead;
      /* 0x0004 */ int m_nCount;
    }; /* size: 0x0008 */
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x0040 */
}; /* size: 0x0008 */

class CEnumCategories
{
  /* 0x0004 */ struct HKEY__* m_hKey;
  /* 0x0008 */ unsigned long m_dwIndex;
  /* 0x000c */ unsigned long m_lcid;
  /* 0x0010 */ struct IEnumCATEGORYINFO* m_pcsIEnumCat;
  /* 0x0014 */ int m_fromcs;
  /* 0x0018 */ unsigned long m_dwRefCount;
}; /* size: 0x001c */

class CEnumCategoriesOfClass
{
  /* 0x0004 */ unsigned long m_dwRefCount;
  /* 0x0008 */ int m_bMapOldKeys;
  /* 0x000c */ struct HKEY__* m_hKey;
  /* 0x0010 */ unsigned long m_dwIndex;
  /* 0x0014 */ struct HKEY__* m_hKeyCats;
  /* 0x0018 */ unsigned long m_dwOldKeyIndex;
  /* 0x001c */ struct IUnknown* m_pCloned;
}; /* size: 0x0020 */

class CEnumClassesOfCategories
{
  /* 0x0004 */ unsigned long m_dwRefCount;
  /* 0x0008 */ struct HKEY__* m_hClassKey;
  /* 0x000c */ unsigned long m_dwIndex;
  /* 0x0010 */ unsigned long m_cImplemented;
  /* 0x0014 */ struct _GUID* m_rgcatidImpl;
  /* 0x0018 */ unsigned long m_cRequired;
  /* 0x001c */ struct _GUID* m_rgcatidReq;
  /* 0x0020 */ struct IEnumGUID* m_pcsIEnumClsid;
  /* 0x0024 */ int m_fromcs;
  /* 0x0028 */ struct IUnknown* m_pCloned;
}; /* size: 0x002c */

class CEnumContextProps
{
  /* 0x0004 */ long _cRefs;
  /* 0x0008 */ struct tagContextProperty* _pList;
  /* 0x000c */ unsigned long* _pcListRefs;
  /* 0x0010 */ unsigned long _cItems;
  /* 0x0014 */ unsigned long _CurrentPosition;
}; /* size: 0x0018 */

class CEnumFmt
{
  /* 0x0004 */ unsigned long m_cRef;
  /* 0x0008 */ wchar_t* m_szClsid;
  /* 0x000c */ unsigned long m_dwDirection;
  /* 0x0010 */ unsigned long m_iKey;
  /* 0x0014 */ struct FMTCACHE m_cache;
}; /* size: 0x0030 */

class CEnumFmt10
{
  /* 0x0030 */ struct FMT* m_rgFmt;
  /* 0x0034 */ unsigned int m_cFmt;
}; /* size: 0x0038 */

class CEnumFormatEtc
{
  /* 0x0008 */ unsigned long m_ulFlags;
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ unsigned long m_index;
  /* 0x0014 */ class CArray<CFormatEtc>* m_pFEArray;
}; /* size: 0x0018 */

class CEnumFormatEtcDataArray
{
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ unsigned long m_cOffset;
  /* 0x0010 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
}; /* size: 0x0014 */

class CEnumGeneric
{
  /* 0x0004 */ struct _GUID m_iid;
  /* 0x0014 */ unsigned long m_refs;
  /* 0x0018 */ unsigned long m_dwCurrent;
  /* 0x001c */ unsigned long m_dwDirection;
  /* 0x0020 */ struct IEnumCallback* m_pEnumCallback;
  /* 0x0024 */ struct IEnumHolder* m_pParent;
  /* 0x0028 */ struct IEnumGeneric* m_pNext;
  /* 0x002c */ struct IEnumGeneric* m_pPrev;
}; /* size: 0x0030 */

class CEnumHolder
{
  /* 0x0004 */ unsigned long m_refs;
  /* 0x0008 */ unsigned short m_nCount;
  /* 0x000c */ struct IEnumGeneric* m_pFirst;
  /* 0x0010 */ struct IEnumGeneric* m_pLast;
}; /* size: 0x0014 */

class CEnumSTATDATA
{
  /* 0x0004 */ unsigned long m_refs;
  /* 0x0008 */ int m_iDataEnum;
  /* 0x000c */ class CDAHolder* m_pHolder;
}; /* size: 0x0010 */

class CEnumSTATPROPBAG
{
  /* 0x0004 */ long _cRefs;
  /* 0x0008 */ struct IBlockingLock* _pBlockingLock;
  /* 0x000c */ class CSTATPROPBAGArray* _parray;
  /* 0x0010 */ unsigned long _iarray;
}; /* size: 0x0014 */

class CEnumSTATPROPSETSTG
{
  /* 0x0004 */ unsigned long _ulSig;
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ struct IEnumSTATSTG* _penumSTATSTG;
  /* 0x0010 */ struct tagSTATSTG _statarray[1];
  /* 0x0058 */ unsigned long _cstatTotalInArray;
  /* 0x005c */ unsigned long _istatNextToRead;
}; /* size: 0x0060 */

class CEnumSTATPROPSTG
{
  /* 0x0004 */ unsigned long _ulSig;
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ class CStatArray* _psa;
  /* 0x0010 */ unsigned long _ipropNext;
}; /* size: 0x0014 */

class CEnumStatData
{
  /* 0x0008 */ unsigned long m_ulFlags;
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ unsigned long m_index;
  /* 0x0014 */ class CArray<CStatData>* m_pSDArray;
}; /* size: 0x0018 */

class CEnumVerb
{
  /* 0x0004 */ unsigned long m_cRef;
  /* 0x0008 */ long m_iVerb;
  /* 0x000c */ struct VerbList* m_VerbList;
}; /* size: 0x0010 */

class CErrorChannelHook
{
}; /* size: 0x0004 */

class CErrorObject
{
  /* 0x000c */ long _refCount;
  /* 0x0010 */ struct ErrorObjectData _data;
  /* 0x0028 */ wchar_t* _pszSource;
  /* 0x002c */ wchar_t* _pszDescription;
  /* 0x0030 */ wchar_t* _pszHelpFile;
}; /* size: 0x0034 */

class CErrorSmAllocator
{
}; /* size: 0x001c */

class CEventCache
{
  union
  {
    /* 0x0000 */ void* _list[20];
    /* 0x0000 */ unsigned long _ifree;
    /* 0x0000 */ class COleStaticMutexSem _mxsEventCache;
  }; /* size: 0x0050 */
}; /* size: 0x0001 */

class CEventSem
{
  /* 0x0000 */ void* _hEvent;
}; /* size: 0x0004 */

class CException
{
  /* 0x0004 */ long _lError;
}; /* size: 0x0008 */

class CExceptionContext
{
  /* 0x0000 */ class CTry* _pTopTry;
  /* 0x0004 */ unsigned char* _pLastNew;
  /* 0x0008 */ int _cbLastNew;
  /* 0x000c */ int _fNewReadyForUnwind;
  /* 0x0010 */ class CException _exception;
  /* 0x0018 */ char buffer[256];
  /* 0x0118 */ class CExceptionContext::StackElement* _aStack;
  /* 0x011c */ int _StackTop;
  /* 0x0120 */ int _StackSize;
}; /* size: 0x0124 */

class CExceptionContext::StackElement
{
  /* 0x0000 */ void* _pthis;
  /* 0x0004 */ void* _pfn /* function */;
  /* 0x0008 */ unsigned long _cbElement;
}; /* size: 0x000c */

class CExpParameterValidate
{
}; /* size: 0x0001 */

class CExposedDocFile
{
  /* 0x0054 */ class CPubDocFile* _pdf;
  /* 0x0058 */ class CDFBasis* _pdfb;
  /* 0x005c */ class CPerContext* _ppc;
  /* 0x0060 */ unsigned long _sig;
  /* 0x0064 */ long _cReferences;
  /* 0x0068 */ class CPropertyBagEx _PropertyBagEx;
}; /* size: 0x008c */

struct CExposedIterator
{
  /* 0x001c */ class CPubDocFile* _ppdf;
  /* 0x0020 */ class CDFBasis* _pdfb;
  /* 0x0024 */ class CPerContext* _ppc;
  /* 0x0028 */ long _cReferences;
  /* 0x002c */ unsigned long _sig;
  /* 0x0030 */ class CDfName _dfnKey;
  /* 0x0072 */ char __PADDING__[2];
}; /* size: 0x0074 */

class CExposedStream
{
  /* 0x0030 */ class CPubStream* _pst;
  /* 0x0034 */ class CDFBasis* _pdfb;
  /* 0x0038 */ class CPerContext* _ppc;
  /* 0x003c */ unsigned long _sig;
  /* 0x0040 */ long _cReferences;
  /* 0x0044 */ class CSeekPointer* _psp;
}; /* size: 0x0048 */

class CExtHashTable
{
}; /* size: 0x0018 */

class CExtentList
{
  /* 0x0000 */ unsigned long m_cbMonikerExtents;
  /* 0x0004 */ unsigned char* m_pchMonikerExtents;
}; /* size: 0x0008 */

class CFAccessControl
{
  /* 0x0004 */ long m_cRefs;
}; /* size: 0x0008 */

class CFILETIME
{
  union
  {
    /* 0x0000 */ struct _FILETIME _filetime;
    /* 0x0000 */ __int64 _ll;
    /* 0x0000 */ union _LARGE_INTEGER _li;
    /* 0x0000 */ union _ULARGE_INTEGER _uli;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class CFastBH
{
  /* 0x0000 */ void* m_hRpc;
  /* 0x0004 */ void* m_ifHandle;
}; /* size: 0x0008 */

class CFat
{
  /* 0x0000 */ class CFatVector _fv;
  /* 0x0020 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0024 */ const unsigned long _sid;
  /* 0x0028 */ class CBasedFatPtr _pfatReal;
  /* 0x002c */ class CBasedFatPtr _pfatNoScratch;
  /* 0x0030 */ unsigned long _sectNoSnapshot;
  /* 0x0034 */ unsigned long _sectNoSnapshotFree;
  /* 0x0038 */ unsigned short _uFatShift;
  /* 0x003a */ unsigned short _uFatMask;
  /* 0x003c */ unsigned long _cfsTable;
  /* 0x0040 */ unsigned long _ulFreeSects;
  /* 0x0044 */ unsigned long _cUnmarkedSects;
  /* 0x0048 */ unsigned long _sectFirstFree;
  /* 0x004c */ unsigned long _sectLastUsed;
  /* 0x0050 */ unsigned long _sectMax;
  /* 0x0054 */ unsigned long _ipfsRangeLocks;
  /* 0x0058 */ unsigned short _isectRangeLocks;
}; /* size: 0x005c */

class CFatSect
{
  /* 0x0000 */ unsigned long* _asectEntry /* zero-length array */;
}; /* size: 0x0001 */

class CFatVector
{
  /* 0x001c */ unsigned short _csectTable;
  /* 0x001e */ unsigned short _csectBlock;
}; /* size: 0x0020 */

class CFileMoniker
{
  /* 0x0014 */ struct _GUID m_clsid;
  /* 0x0024 */ class CExtentList m_ExtentList;
  /* 0x002c */ wchar_t* m_szPath;
  /* 0x0030 */ char* m_pszAnsiPath;
  /* 0x0034 */ unsigned short m_ccPath;
  /* 0x0036 */ unsigned short m_cbAnsiPath;
  /* 0x0038 */ unsigned long m_dwHashValue;
  struct /* bitfield */
  {
    /* 0x003c */ unsigned long m_fUnicodeExtent : 1; /* bit position: 0 */
    /* 0x003c */ unsigned long m_fClassVerified : 1; /* bit position: 1 */
    /* 0x003c */ unsigned long m_fHashValueValid : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0040 */ unsigned char m_fShellLinkInitialized;
  struct /* bitfield */
  {
    /* 0x0044 */ unsigned long m_fTrackingEnabled : 1; /* bit position: 0 */
    /* 0x0044 */ unsigned long m_fSaveShellLink : 1; /* bit position: 1 */
    /* 0x0044 */ unsigned long m_fDirty : 1; /* bit position: 2 */
    /* 0x0044 */ unsigned long m_fReduceEnabled : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0048 */ unsigned short m_cAnti;
  /* 0x004a */ unsigned short m_endServer;
  /* 0x004c */ enum CFileMoniker::olever m_ole1;
  /* 0x0050 */ struct IShellLinkW* m_pShellLink;
  /* 0x0054 */ class CTrackingFileMoniker _tfm;
  /* 0x005c */ class CMutexSem2 m_mxs;
}; /* size: 0x0078 */

enum CFileMoniker::olever
{
  undetermined = 0,
  ole1 = 1,
  ole2 = 2,
};

class CFileMonikerFactory
{
}; /* size: 0x0008 */

struct CFileStream
{
  /* 0x0018 */ class CGlobalFileStream* _pgfst;
  /* 0x001c */ class CPerContext* _ppc;
  /* 0x0020 */ void* _hFile;
  /* 0x0024 */ void* _hPreDuped;
  /* 0x0028 */ unsigned long _sig;
  /* 0x002c */ long _cReferences;
  /* 0x0030 */ struct IMalloc* const _pMalloc;
  /* 0x0034 */ void* _hMapObject;
  /* 0x0038 */ unsigned char* _pbBaseAddr;
  /* 0x003c */ unsigned long _cbViewSize;
}; /* size: 0x0040 */

class CFillLockBytes
{
  /* 0x000c */ struct ILockBytes* _pilb;
  /* 0x0010 */ long _cRefs;
  /* 0x0014 */ unsigned long _ulHighWater;
  /* 0x0018 */ unsigned long _dwTerminate;
  /* 0x001c */ unsigned long _ulFailurePoint;
  /* 0x0020 */ class CPerContext* _ppc;
  /* 0x0024 */ int _fCSInitialized;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION _csThreadProtect;
}; /* size: 0x0040 */

class CFmCtrlUnknown
{
  /* 0x0004 */ class CFreeMarshaler* _pfm;
  /* 0x0008 */ unsigned long _cRefs;
}; /* size: 0x000c */

class CForcedDropTarget
{
  /* 0x0000 */ struct HWND__* _hwndFDTCurrent;
  /* 0x0004 */ int _fDragDropActive;
}; /* size: 0x0008 */

class CFormat
{
  /* 0x0000 */ enum FORMATTAG m_ftag;
  /* 0x0004 */ unsigned short m_cf;
  /* 0x0008 */ class CData m_dataFormatString;
}; /* size: 0x0018 */

class CFormatEtc
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ struct tagFORMATETC m_foretc;
}; /* size: 0x0018 */

class CFrameFilter
{
  /* 0x0010 */ struct HWND__* m_hwndObject;
  /* 0x0014 */ struct HWND__* m_hwndFrame;
  /* 0x0018 */ struct IOleInPlaceFrame* m_lpFrame;
  /* 0x001c */ struct IOleInPlaceActiveObject* m_lpObject;
  /* 0x0020 */ void* m_lpfnPrevWndProc /* function */;
  /* 0x0024 */ int m_fObjectMenu;
  /* 0x0028 */ int m_fCurItemPopup;
  /* 0x002c */ int m_fInMenuMode;
  /* 0x0030 */ int m_fDiscardWmCommand;
  /* 0x0034 */ int m_fGotMenuCloseEvent;
  /* 0x0038 */ int m_fRemovedWndProc;
  /* 0x003c */ unsigned int m_cmdId;
  /* 0x0040 */ unsigned int m_uCurItemID;
  /* 0x0044 */ struct tagOLEMENU* m_lpOleMenu;
  /* 0x0048 */ struct HMENU__* m_hmenuCombined;
  /* 0x004c */ struct HWND__* m_hwndFocusOnEnter;
  /* 0x0050 */ int m_cAltTab;
}; /* size: 0x0054 */

class CFreeList
{
  /* 0x0000 */ class CBasedFreeBlockPtr _pfbHead;
}; /* size: 0x0004 */

class CFreeMarshaler
{
  /* 0x0004 */ struct IUnknown* _punkCtrl;
  union
  {
    /* 0x0000 */ unsigned char _SecretBlock[16];
    /* 0x0000 */ int _fSecretInit;
    /* 0x0000 */ class COleStaticMutexSem _SecretLock;
  }; /* size: 0x0030 */
}; /* size: 0x0008 */

class CGIPMessageParam
{
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ unsigned long m_dwCookie;
  /* 0x0010 */ struct _GUID m_causalityId;
}; /* size: 0x0020 */

class CGIPTable
{
  union
  {
    /* 0x0000 */ unsigned long _dwCurrSeqNo;
    /* 0x0000 */ int _fInRevokeAll;
    /* 0x0000 */ int _fInNAUninit;
    /* 0x0000 */ struct tagGIPEntry _InUseHead;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0044 */
}; /* size: 0x0004 */

class CGenObject
{
  /* 0x0004 */ unsigned long m_ulRefs;
  /* 0x0008 */ unsigned long m_dwAspect;
  /* 0x000c */ unsigned long m_dwSize;
  /* 0x0010 */ long m_lWidth;
  /* 0x0014 */ long m_lHeight;
  /* 0x0018 */ void* m_hPres;
  /* 0x001c */ unsigned short m_cfFormat;
  /* 0x0020 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0024 */

class CGenericObject
{
  /* 0x0000 */ class CClass m_class;
  /* 0x0014 */ class CClass m_classLast;
  /* 0x0028 */ class CPres* m_ppres;
  /* 0x002c */ class CData m_dataNative;
  /* 0x003c */ int m_fLink;
  /* 0x0040 */ int m_fStatic;
  /* 0x0044 */ int m_fNoBlankPres;
  /* 0x0048 */ wchar_t* m_szTopic;
  /* 0x004c */ wchar_t* m_szItem;
  /* 0x0050 */ unsigned long m_lnkupdopt;
}; /* size: 0x0054 */

class CGlobalContext
{
  /* 0x0008 */ int _fTakeLock;
  /* 0x000c */ unsigned long _dfOpenLock;
  /* 0x0010 */ struct IMalloc* const _pMalloc;
  /* 0x0018 */ union _LARGE_INTEGER _luidMutexName;
  /* 0x0020 */ struct _GLOBAL_SHARED_CRITICAL_SECTION _GlobalPortion;
}; /* size: 0x0030 */

class CGlobalFileStream
{
  /* 0x0008 */ unsigned long _df;
  /* 0x000c */ unsigned long _dwStartFlags;
  /* 0x0010 */ struct IMalloc* const _pMalloc;
  /* 0x0018 */ unsigned __int64 _ulPos;
  /* 0x0020 */ unsigned long _cbSector;
  /* 0x0024 */ unsigned long _cbMappedFileSize;
  /* 0x0028 */ unsigned long _cbMappedCommitSize;
  /* 0x002c */ unsigned long _dwMapFlags;
  /* 0x0030 */ wchar_t _awcPath[261];
  /* 0x023c */ unsigned long _dwTerminate;
  /* 0x0240 */ unsigned __int64 _ulHighWater;
  /* 0x0248 */ unsigned __int64 _ulFailurePoint;
}; /* size: 0x0250 */

class CGlobalOptions
{
  /* 0x0008 */ unsigned long _lRefs;
}; /* size: 0x000c */

class CGlobalSecurity
{
  /* 0x0000 */ unsigned char _acl[64];
  /* 0x0040 */ struct _SECURITY_DESCRIPTOR _sd;
  /* 0x0054 */ unsigned char _sdExt[152];
  /* 0x00ec */ struct _SECURITY_ATTRIBUTES _sa;
}; /* size: 0x00f8 */

enum CHK
{
  chkDdeSrvr = 4660,
  chkDefClient = 22136,
};

class CHandle
{
  /* 0x0000 */ class CBasedMStreamPtr _pms;
  /* 0x0004 */ unsigned long _sid;
}; /* size: 0x0008 */

class CHashTable
{
  /* 0x0004 */ class COleStaticMutexSem* _pExLock;
  /* 0x0008 */ class CRWLock* _pRWLock;
  /* 0x000c */ struct SHashChain* _buckets;
  /* 0x0010 */ unsigned long _cCurEntries;
  /* 0x0014 */ unsigned long _cMaxEntries;
}; /* size: 0x0018 */

class CHeapHeader
{
  /* 0x0000 */ unsigned long _ulFirstFree;
  /* 0x0004 */ unsigned long _ulAllocedBlocks;
  /* 0x0008 */ int _fIsCompacted;
  /* 0x000c */ unsigned long _dfLuid;
}; /* size: 0x0010 */

class CHlprDialog
{
  /* 0x0004 */ struct HINSTANCE__* m_hInstance;
}; /* size: 0x0008 */

class CHwnd
{
  /* 0x0000 */ struct HWND__* m_hwnd;
}; /* size: 0x0004 */

class CIDObject
{
  /* 0x0004 */ struct SHashChain _pidChain;
  /* 0x000c */ struct SHashChain _oidChain;
  /* 0x0014 */ unsigned long _dwState;
  /* 0x0018 */ unsigned long _cRefs;
  /* 0x001c */ struct IUnknown* _pServer;
  /* 0x0020 */ class CObjectContext* _pServerCtx;
  /* 0x0024 */ struct _GUID _oid;
  /* 0x0034 */ unsigned long _aptID;
  /* 0x0038 */ class CStdWrapper* _pStdWrapper;
  /* 0x003c */ class CStdIdentity* _pStdID;
  /* 0x0040 */ unsigned long _cCalls;
  /* 0x0044 */ unsigned long _cLocks;
  /* 0x0048 */ struct SHashChain _oidUnpinReqChain;
  /* 0x0050 */ unsigned long _dwOidUnpinReqState;
  /* 0x0054 */ void* _pvObjectTrackCookie;
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cIDs;
  }; /* size: 0x0040 */
}; /* size: 0x0058 */

class CIPIDTable
{
  union
  {
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ struct tagIPIDEntry _oidListHead;
  }; /* size: 0x0050 */
}; /* size: 0x0001 */

class CInprocSystemActivator
{
}; /* size: 0x0004 */

class CInterfaceFromWindowProp
{
  /* 0x0004 */ unsigned long _ulRefCnt;
}; /* size: 0x0008 */

class CInternalPageAllocator
{
  /* 0x0000 */ long _cPages;
  /* 0x0004 */ struct tagPageEntry** _pPageListStart;
  /* 0x0008 */ struct tagPageEntry** _pPageListEnd;
  /* 0x000c */ unsigned long _dwFlags;
  /* 0x0010 */ struct tagPageEntry _ListHead;
  /* 0x0018 */ long _cEntries;
  /* 0x001c */ unsigned long _cbPerEntry;
  /* 0x0020 */ unsigned short _cEntriesPerPage;
  /* 0x0024 */ class COleStaticMutexSem* _pLock;
  /* 0x0028 */ void* _pfnMyAlloc /* function */;
  /* 0x002c */ void* _pfnMyFree /* function */;
}; /* size: 0x0030 */

class CItemMoniker
{
  /* 0x0014 */ wchar_t* m_lpszItem;
  /* 0x0018 */ char* m_pszAnsiItem;
  /* 0x001c */ unsigned short m_ccItem;
  /* 0x001e */ unsigned short m_cbAnsiItem;
  /* 0x0020 */ wchar_t* m_lpszDelimiter;
  /* 0x0024 */ char* m_pszAnsiDelimiter;
  /* 0x0028 */ unsigned short m_ccDelimiter;
  /* 0x002a */ unsigned short m_cbAnsiDelimiter;
  /* 0x002c */ unsigned long m_fHashValueValid : 1; /* bit position: 0 */
  /* 0x0030 */ unsigned long m_dwHashValue;
  /* 0x0034 */ class CMutexSem2 m_mxs;
}; /* size: 0x0050 */

class CLUAMoniker
{
  /* 0x001c */ unsigned long m_runLevel;
  /* 0x0020 */ int m_bHaveBindOpts;
  /* 0x0024 */ struct tagBIND_OPTS3 m_bindopts3;
}; /* size: 0x0048 */

class CLinkable
{
  /* 0x0000 */ class CLinkable* m_pNext;
  /* 0x0004 */ class CLinkable* m_pPrev;
}; /* size: 0x0008 */

class CListHeader
{
}; /* size: 0x0008 */

class CLocalAlloc
{
}; /* size: 0x0001 */

class CLocalMachineNames
{
  /* 0x0004 */ unsigned long _lRefs;
  /* 0x0008 */ unsigned long _dwCursor;
  /* 0x000c */ class CMachineNamesHelper* _pMNHelper;
  /* 0x0010 */ int _fNeedNewData;
}; /* size: 0x0014 */

class CLock
{
  /* 0x0000 */ class CMutexSem& _mxs;
}; /* size: 0x0004 */

class CLock2
{
  /* 0x0000 */ class CMutexSem2& m_mxs;
}; /* size: 0x0004 */

class CMIDTable
{
  union
  {
    /* 0x0000 */ class MIDEntry* _pLocalMIDEntry;
    /* 0x0000 */ class CStringHashTable _HashTbl;
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x0040 */
}; /* size: 0x0001 */

class CMIPIDHashTable
{
}; /* size: 0x0018 */

class CMREInnerUnknown
{
  /* 0x0004 */ unsigned long _iRefCount;
  /* 0x0008 */ class CManualResetEvent* _pParent;
}; /* size: 0x000c */

class CMSFHeader
{
  /* 0x0000 */ class CMSFHeaderData _hdr;
  /* 0x0200 */ int _fDirty;
}; /* size: 0x0204 */

class CMSFHeaderData
{
  /* 0x004c */ unsigned long _sectFat[109];
}; /* size: 0x0200 */

class CMSFPage
{
  /* 0x0000 */ class CBasedMSFPagePtr _pmpNext;
  /* 0x0004 */ class CBasedMSFPagePtr _pmpPrev;
  /* 0x0008 */ unsigned long _sid;
  /* 0x000c */ unsigned long _ulOffset;
  /* 0x0010 */ class CBasedPagedVectorPtr _ppv;
  /* 0x0014 */ unsigned long _sect;
  /* 0x0018 */ unsigned long _dwFlags;
  /* 0x001c */ long _cReferences;
  /* 0x0020 */ unsigned char* _ab /* zero-length array */;
}; /* size: 0x0020 */

class CMSFPageTable
{
  /* 0x0000 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0004 */ const unsigned long _cbSector;
  /* 0x0008 */ const unsigned long _cMinPages;
  /* 0x000c */ const unsigned long _cMaxPages;
  /* 0x0010 */ unsigned long _cActivePages;
  /* 0x0014 */ unsigned long _cPages;
  /* 0x0018 */ class CBasedMSFPagePtr _pmpCurrent;
  /* 0x001c */ class CBasedMSFPagePtr _pmpStart;
  /* 0x0020 */ long _cReferences;
}; /* size: 0x0024 */

class CMStream
{
  /* 0x0000 */ class CBasedILockBytesPtrPtr _pplstParent;
  /* 0x0004 */ class CBasedMSFPageTablePtr _pmpt;
  /* 0x0008 */ class CMSFHeader _hdr;
  /* 0x020c */ class CDirectory _dir;
  /* 0x023c */ class CFat _fat;
  /* 0x0298 */ class CDIFat _fatDif;
  /* 0x0328 */ class CFat _fatMini;
  /* 0x0384 */ class CStreamCache _stmcDir;
  /* 0x0404 */ class CStreamCache _stmcMiniFat;
  /* 0x0484 */ class CBasedDirectStreamPtr _pdsministream;
  /* 0x0488 */ class CBasedMStreamPtr _pmsShadow;
  /* 0x048c */ class CBasedBytePtr _pCopySectBuf;
  /* 0x0490 */ const int _fIsScratch;
  /* 0x0494 */ int _fIsNoScratch;
  /* 0x0498 */ class CBasedMStreamPtr _pmsScratch;
  /* 0x049c */ int _fIsNoSnapshot;
  /* 0x04a0 */ int _fBlockWrite;
  /* 0x04a4 */ int _fTruncate;
  /* 0x04a8 */ int _fBlockHeader;
  /* 0x04ac */ int _fNewConvert;
  /* 0x04b0 */ int _fIsShadow;
  /* 0x04b8 */ unsigned __int64 _ulParentSize;
  /* 0x04c0 */ unsigned short _uSectorSize;
  /* 0x04c2 */ unsigned short _uSectorShift;
  /* 0x04c4 */ unsigned short _uSectorMask;
  /* 0x04c8 */ struct IMalloc* const _pMalloc;
  /* 0x04d0 */ union _ULARGE_INTEGER _uliLastKnownSizeForConsolidate;
}; /* size: 0x04d8 */

struct CM_Power_Data_s
{
  /* 0x0000 */ unsigned long PD_Size;
  /* 0x0004 */ enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
  /* 0x0008 */ unsigned long PD_Capabilities;
  /* 0x000c */ unsigned long PD_D1Latency;
  /* 0x0010 */ unsigned long PD_D2Latency;
  /* 0x0014 */ unsigned long PD_D3Latency;
  /* 0x0018 */ enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  /* 0x0034 */ enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
}; /* size: 0x0038 */

class CMachineNamesHelper
{
  /* 0x0000 */ unsigned long _lRefs;
  /* 0x0004 */ unsigned long _dwNumStrings;
  /* 0x0008 */ wchar_t** _ppszStrings;
}; /* size: 0x000c */

struct CMachineNamesHelper::_SBTOTAL
{
  /* 0x0000 */ unsigned long dwcTotalAddrs;
  /* 0x0004 */ wchar_t** ppszAddresses;
}; /* size: 0x0008 */

struct CMachineNamesHelper::_UNIQUEADDRS
{
  /* 0x0000 */ unsigned long dwcTotalUniqueAddrs;
  /* 0x0004 */ unsigned long dwStringSpaceNeeded;
  /* 0x0008 */ unsigned long dwCurrentAddr;
  /* 0x000c */ wchar_t* pszNextAddrToUse;
  /* 0x0010 */ wchar_t** ppszAddrs;
  /* 0x0014 */ unsigned int cchLeft;
}; /* size: 0x0018 */

struct CMalloc
{
  /* 0x0000 */ struct IMallocVtbl* lpVtbl;
}; /* size: 0x0004 */

class CMallocBased
{
}; /* size: 0x0001 */

class CManualResetEvent
{
  /* 0x0008 */ class CMREInnerUnknown _cInner;
  /* 0x0014 */ struct IUnknown* _pControl;
  /* 0x0018 */ class CStdEvent* m_cStdEvent;
}; /* size: 0x001c */

class CMapDwordDword
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0028 */

class CMapDwordPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0028 */

class CMapKeyToValue
{
  /* 0x0000 */ unsigned int m_cbValue;
  /* 0x0004 */ unsigned int m_cbKey;
  /* 0x0008 */ unsigned int m_cbKeyInAssoc;
  /* 0x000c */ struct CMapKeyToValue::CAssoc** m_pHashTable;
  /* 0x0010 */ unsigned int m_nHashTableSize;
  /* 0x0014 */ void* m_lpfnHashKey /* function */;
  /* 0x0018 */ int m_nCount;
  /* 0x001c */ struct CMapKeyToValue::CAssoc* m_pFreeList;
  /* 0x0020 */ struct CPlex* m_pBlocks;
  /* 0x0024 */ int m_nBlockSize;
}; /* size: 0x0028 */

struct CMapKeyToValue::CAssoc
{
  /* 0x0000 */ struct CMapKeyToValue::CAssoc* pNext;
  /* 0x0004 */ unsigned int nHashValue;
  /* 0x0008 */ union CMapKeyToValue::CKeyWrap key;
}; /* size: 0x0010 */

union CMapKeyToValue::CKeyWrap
{
  union
  {
    /* 0x0000 */ unsigned char rgbKey[8];
    struct
    {
      /* 0x0000 */ void* pKey;
      /* 0x0004 */ unsigned int cbKey;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class CMapStringToPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0028 */

class CMapUintPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0028 */

class CMarshalImplPStream
{
  /* 0x0004 */ struct IPersistStream* m_pPS;
}; /* size: 0x0008 */

class CMarshalList
{
  /* 0x0000 */ class CBasedMarshalListPtr _pmlNext;
  /* 0x0004 */ void* _pvBase;
  /* 0x0008 */ unsigned long _cntxid;
}; /* size: 0x000c */

class CMemBytes
{
  /* 0x0004 */ unsigned long m_dwSig;
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ void* m_hMem;
  /* 0x0010 */ struct MEMSTM* m_pData;
}; /* size: 0x0014 */

class CMemStm
{
  /* 0x0004 */ unsigned long m_dwSig;
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ unsigned long m_pos;
  /* 0x0010 */ void* m_hMem;
  /* 0x0014 */ struct MEMSTM* m_pData;
  /* 0x0018 */ class CRefMutexSem* m_pmxs;
}; /* size: 0x001c */

class CMessageCall
{
  /* 0x000c */ enum tagCALLCATEGORY _callcat;
  /* 0x0010 */ unsigned long _iFlags;
  /* 0x0014 */ long _hResult;
  /* 0x0018 */ void* _hEvent;
  /* 0x001c */ struct HWND__* _hWndCaller;
  /* 0x0020 */ struct _GUID _ipid;
  /* 0x0030 */ void* _hSxsActCtx;
  /* 0x0034 */ unsigned long _server_fault;
  /* 0x0038 */ class CDestObject _destObj;
  /* 0x0044 */ void* _pHeader;
  /* 0x0048 */ class CChannelHandle* _pHandle;
  /* 0x004c */ void* _hRpc;
  /* 0x0050 */ struct IUnknown* _pContext;
  /* 0x0054 */ unsigned long _dwCOMHeaderSize;
  /* 0x0058 */ struct tagRPCOLEMESSAGE message;
  /* 0x0084 */ struct SChannelHookCallInfo hook;
  /* 0x00b4 */ unsigned long _dwErrorBufSize;
  /* 0x00b8 */ unsigned long m_ulCancelTimeout;
  /* 0x00bc */ unsigned long m_dwStartCount;
  /* 0x00c0 */ class CCtxCall* m_pClientCtxCall;
  /* 0x00c4 */ class CCtxCall* m_pServerCtxCall;
}; /* size: 0x00c8 */

class CMfObject
{
  /* 0x0004 */ unsigned long m_ulRefs;
  /* 0x0008 */ struct HMETAFILE__* m_hPres;
  /* 0x000c */ struct _METAINFO* m_pMetaInfo;
  /* 0x0010 */ struct _METADC* m_pCurMdc;
  /* 0x0014 */ int m_fMetaDC;
  /* 0x0018 */ int m_nRecord;
  /* 0x001c */ HRESULT m_error;
  /* 0x0020 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0024 */ int m_fConvert;
  /* 0x0028 */ void* m_pfnContinue /* function */;
  /* 0x002c */ unsigned long m_dwContinue;
  /* 0x0030 */ unsigned long m_dwAspect;
  /* 0x0034 */ unsigned long m_dwSize;
  /* 0x0038 */ long m_lWidth;
  /* 0x003c */ long m_lHeight;
  /* 0x0040 */ class CCacheNode* m_pCacheNode;
  /* 0x0044 */ struct HPALETTE__* m_hPalDCOriginal;
  /* 0x0048 */ struct HPALETTE__* m_hPalLast;
}; /* size: 0x004c */

class CMonikerBag
{
}; /* size: 0x0018 */

class CMonikerFactory
{
}; /* size: 0x0008 */

class CMonikerPtrBuf
{
}; /* size: 0x0018 */

class CMultiGUIDHashTable
{
}; /* size: 0x0018 */

class CMutexSem
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0018 */

class CMutexSem2
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_cs;
  /* 0x0018 */ int m_fCsInitialized;
}; /* size: 0x001c */

class CNFFMappedStream
{
  /* 0x0004 */ class CNtfsStream* _pnffstm;
  struct /* bitfield */
  {
    /* 0x0008 */ int _fReserved : 1; /* bit position: 0 */
    /* 0x0008 */ int _fMappedStreamDirty : 1; /* bit position: 1 */
    /* 0x0008 */ int _fUpdateStreamHasLatest : 1; /* bit position: 2 */
    /* 0x0008 */ int _fCheckedForRollForward : 1; /* bit position: 3 */
    /* 0x0008 */ int _fStreamRenameSupported : 1; /* bit position: 4 */
  }; /* bitfield */
  /* 0x000c */ unsigned char* _pbMappedStream;
  /* 0x0010 */ unsigned long _cbMappedStream;
  /* 0x0014 */ unsigned long _cbMappedStreamActual;
  /* 0x0018 */ void* _pMappedStreamOwner;
  /* 0x001c */ unsigned short _cUpdateStreamInUse;
  /* 0x001e */ unsigned short _cLatestStreamInUse;
  /* 0x0020 */ class CNtfsUpdateStreamForPropStg* _pstmUpdate;
}; /* size: 0x0024 */

enum CNFFMappedStream::enumCREATE_NEW_UPDATE_STREAM
{
  CREATE_NEW_UPDATE_STREAM = 1,
  DONT_CREATE_NEW_UPDATE_STREAM = 2,
};

class CNFFTreeMutex
{
  /* 0x0004 */ long _cRefs;
  /* 0x0008 */ int _fInitialized;
  /* 0x000c */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0024 */

enum CNVTYP
{
  cnvtypNone = 0,
  cnvtypConvertTo = 1,
  cnvtypTreatAs = 2,
};

class CNameHashTable
{
}; /* size: 0x0018 */

class CNdrStream
{
  /* 0x0004 */ long RefCount;
  /* 0x0008 */ unsigned char* pBuffer;
  /* 0x000c */ unsigned long cbBufferLength;
  /* 0x0010 */ unsigned long position;
}; /* size: 0x0014 */

class CNoEnum
{
  /* 0x0004 */ long m_cRef;
}; /* size: 0x0008 */

class CNtfsEnumSTATSTG
{
  /* 0x0004 */ unsigned long _ulSig;
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ unsigned long _istatNextToRead;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0014 */ class CNtfsSTATSTGArray* _pstatstgarray;
}; /* size: 0x0018 */

class CNtfsSTATSTGArray
{
  /* 0x0000 */ long _cRefs;
  /* 0x0004 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0008 */ struct _FILE_STREAM_INFORMATION* _pFileStreamInformation;
  /* 0x000c */ unsigned long _cFileStreamInformation;
}; /* size: 0x0010 */

class CNtfsStorage
{
  /* 0x0024 */ unsigned long _sig;
  /* 0x0028 */ class CNFFTreeMutex* _pTreeMutex;
  /* 0x002c */ unsigned long _grfMode;
  /* 0x0030 */ wchar_t _wcDriveLetter;
  /* 0x0034 */ class CNtfsStorageForPropSetStg _NtfsStorageForPropSetStg;
  /* 0x003c */ class CNtfsStream* _pstmOpenList;
  /* 0x0040 */ void* _hFileMainStream;
  /* 0x0044 */ void* _hFileControlStream;
  /* 0x0048 */ unsigned short _hsmStatus;
  /* 0x004c */ unsigned long _dwStgStateBits;
  /* 0x0050 */ struct _GUID _clsidStgClass;
  /* 0x0060 */ class CPropertyBagEx _PropertyBagEx;
  /* 0x0084 */ unsigned long _dwState;
  /* 0x0088 */ struct _FILETIME _filetime;
}; /* size: 0x0090 */

class CNtfsStorageForPropSetStg
{
  /* 0x0004 */ class CNtfsStorage* _pNtfsStorage;
}; /* size: 0x0008 */

class CNtfsStream
{
  /* 0x0008 */ wchar_t* _pwcsName;
  /* 0x000c */ class CNFFMappedStream _nffMappedStream;
  /* 0x0030 */ unsigned long _grfMode;
  /* 0x0034 */ void* _hFile;
  /* 0x0038 */ struct IBlockingLock* _pBlockingLock;
  /* 0x003c */ unsigned long _sig;
  /* 0x0040 */ long _cRefs;
  /* 0x0044 */ class CNtfsStorage* _pnffstg;
  /* 0x0048 */ class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64> _liCurrentSeekPosition;
  /* 0x0050 */ class CNtfsStream* _pnffstmPrev;
  /* 0x0054 */ class CNtfsStream* _pnffstmNext;
  /* 0x0058 */ struct _OVERLAPPED _ovlp;
}; /* size: 0x0070 */

class CNtfsStreamName
{
  /* 0x0000 */ unsigned int _count;
  /* 0x0004 */ wchar_t _wsz[256];
}; /* size: 0x0204 */

class CNtfsUpdateStreamForPropStg
{
}; /* size: 0x0070 */

class CNtfsUpdateStreamName
{
  /* 0x0000 */ wchar_t _wszName[37];
}; /* size: 0x004a */

class CNullWalker
{
}; /* size: 0x0004 */

class COAHolder
{
  /* 0x0014 */ struct IAdviseSink** m_ppIAS;
  /* 0x0018 */ int m_iSize;
}; /* size: 0x001c */

class COAccessControl
{
  /* 0x0004 */ long m_cRefs;
  /* 0x0008 */ class COAccessControl::CImpAccessControl* m_ImpObj;
}; /* size: 0x000c */

class COAccessControl::CImpAccessControl
{
  /* 0x0008 */ int m_bInitialized;
  /* 0x000c */ int m_bDirty;
  /* 0x0010 */ int m_bLockValid;
  /* 0x0014 */ struct IUnknown* m_pUnkOuter;
  /* 0x0018 */ struct _RTL_CRITICAL_SECTION m_ACLLock;
  /* 0x0030 */ class CEffPermsCacheLUID m_Cache;
  /* 0x0160 */ struct tagACL_DESCRIPTOR m_ACLDesc;
  /* 0x0184 */ struct tagPCB m_pcb;
}; /* size: 0x01b4 */

class COIDHashTable
{
}; /* size: 0x0018 */

class COIDTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class COIDHashTable s_OIDHashTbl;
    /* 0x0000 */ struct SHashChain s_OIDBuckets[23];
    /* 0x0000 */ unsigned long s_UnpinReqsPending;
    /* 0x0000 */ struct SHashChain s_OIDUnpinRequests;
  }; /* size: 0x00b8 */
}; /* size: 0x0001 */

class COLEDragDropHelper
{
  /* 0x0004 */ unsigned long _lRefs;
}; /* size: 0x0008 */

enum COMPARTMENT_ID
{
  UNSPECIFIED_COMPARTMENT_ID = 0,
  DEFAULT_COMPARTMENT_ID = 1,
};

struct COM_CATALOG_CACHE_SECTION
{
  /* 0x0000 */ volatile __int64 CacheTicks;
  /* 0x0008 */ volatile __int64 ComPlusCatalogVer;
}; /* size: 0x0010 */

struct CONFIRMSAFETY
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ struct IUnknown* pUnk;
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

struct CONFIRM_CONFLICT_ITEM
{
  /* 0x0000 */ struct IShellItem2* pShellItem;
  /* 0x0004 */ wchar_t* pszOriginalName;
  /* 0x0008 */ wchar_t* pszAlternateName;
  /* 0x000c */ wchar_t* pszLocationShort;
  /* 0x0010 */ wchar_t* pszLocationFull;
  /* 0x0014 */ enum SYNCMGR_CONFLICT_ITEM_TYPE nType;
}; /* size: 0x0018 */

class COXIDTable
{
  union
  {
    /* 0x0000 */ unsigned long _cExpired;
    /* 0x0000 */ class OXIDEntry _InUseHead;
    /* 0x0000 */ class OXIDEntry _ExpireHead;
    /* 0x0000 */ class OXIDEntry _CleanupHead;
  }; /* size: 0x0080 */
}; /* size: 0x0001 */

class CObjServer
{
  /* 0x0004 */ class CStdIdentity* _pStdID;
  /* 0x0008 */ struct _GUID _ipid;
  /* 0x0018 */ unsigned __int64 _oxid;
  /* 0x0020 */ long _cRefs;
}; /* size: 0x0028 */

class CObjectContext
{
  /* 0x001c */ unsigned long _cRefs;
  /* 0x0020 */ long _cUserRefs;
  /* 0x0024 */ long _cInternalRefs;
  /* 0x0028 */ unsigned long _dwFlags;
  /* 0x002c */ struct SHashChain _propChain;
  /* 0x0034 */ struct SHashChain _uuidChain;
  /* 0x003c */ struct tagInterfaceData* _pifData;
  /* 0x0040 */ unsigned long _MarshalSizeMax;
  /* 0x0044 */ class CComApartment* _pApartment;
  /* 0x0048 */ unsigned long _dwHashOfId;
  /* 0x004c */ struct _GUID _contextId;
  /* 0x0060 */ unsigned __int64 _urtCtxId;
  /* 0x0068 */ struct tagSPSCache _PSCache;
  /* 0x0078 */ struct IMarshal* _pMarshalProp;
  /* 0x007c */ long _cReleaseThreads;
  /* 0x0080 */ class CContextPropList _properties;
  /* 0x00ac */ struct IUnknown* _pMtsContext;
  /* 0x00b0 */ class CContextLife* volatile _pContextLife;
  /* 0x00b4 */ class CCtxConnectionManager* _pConnectionMgr;
  union
  {
    /* 0x0000 */ class CPageAllocator s_CXAllocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cInstances;
  }; /* size: 0x0040 */
}; /* size: 0x00b8 */

class CObjrefMoniker
{
  /* 0x001c */ wchar_t* m_lpszDisplayName;
}; /* size: 0x0020 */

class CObjrefMonikerFactory
{
}; /* size: 0x0008 */

class COle32DebugEventFire
{
}; /* size: 0x0040 */

class COleCache
{
  /* 0x0028 */ class COleCache::CCacheUnkImpl m_UnkPrivate;
  /* 0x002c */ class COleCache::CCacheDataImpl m_Data;
  /* 0x0030 */ class COleCache::CCacheViewImpl m_ViewObject;
  /* 0x0034 */ class COleCache::CAdviseSinkImpl m_AdviseSink;
  /* 0x0038 */ struct IUnknown* m_pUnkOuter;
  /* 0x003c */ struct IStorage* m_pStg;
  /* 0x0040 */ struct _GUID m_clsid;
  /* 0x0050 */ unsigned short m_cfFormat;
  /* 0x0054 */ unsigned long m_ulFlags;
  /* 0x0058 */ class CArray<CCacheNode>* m_pCacheArray;
  /* 0x005c */ struct IAdviseSink* m_pViewAdvSink;
  /* 0x0060 */ unsigned long m_advfView;
  /* 0x0064 */ unsigned long m_aspectsView;
  /* 0x0068 */ unsigned long m_dwFrozenAspects;
  /* 0x006c */ struct IDataObject* m_pDataObject;
}; /* size: 0x0070 */

class COleCache::CAdviseSinkImpl
{
}; /* size: 0x0004 */

class COleCache::CCacheDataImpl
{
}; /* size: 0x0004 */

class COleCache::CCacheUnkImpl
{
}; /* size: 0x0004 */

class COleCache::CCacheViewImpl
{
}; /* size: 0x0004 */

enum COleCache::GetExtent::__l2::tagCacheType
{
  CACHETYPE_NONE = 0,
  CACHETYPE_NODATA = 1,
  CACHETYPE_ONSTOP = 2,
  CACHETYPE_ONSAVE = 3,
  CACHETYPE_NORMAL = 4,
};

enum COleCache::Locate::__l2::tagFormatType
{
  FORMATTYPE_NONE = 0,
  FORMATTYPE_ANY = 1,
  FORMATTYPE_ENHMF = 2,
  FORMATTYPE_DIB = 3,
  FORMATTYPE_MFPICT = 4,
  FORMATTYPE_USER = 5,
};

class COleStaticLock
{
  /* 0x0000 */ class COleStaticMutexSem& _mxs;
}; /* size: 0x0004 */

class COleStaticMutexSem
{
  /* 0x0000 */ class COleStaticMutexSem* pNextMutex;
  /* 0x0004 */ unsigned char _fInitialized;
  /* 0x0005 */ unsigned char _fAutoDestruct;
  /* 0x0006 */ unsigned char _fUseSpincount;
  /* 0x0008 */ unsigned long _cLocks;
  /* 0x000c */ unsigned long _dwLine;
  /* 0x0010 */ const char* _pszFile;
  /* 0x0014 */ const char* _pszLockName;
  /* 0x0018 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0030 */

class COleTls
{
  /* 0x0000 */ struct tagSOleTlsData* _pData;
}; /* size: 0x0004 */

class CPIDHashTable
{
}; /* size: 0x0018 */

class CPIDTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class CPIDHashTable s_PIDHashTbl;
    /* 0x0000 */ struct SHashChain s_PIDBuckets[23];
  }; /* size: 0x00b8 */
}; /* size: 0x0001 */

class CPSHashTable
{
}; /* size: 0x0018 */

class CPSTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class CPSHashTable s_PSHashTbl;
    /* 0x0000 */ struct SHashChain s_PSBuckets[23];
  }; /* size: 0x00b8 */
}; /* size: 0x0001 */

class CPaccelEnum
{
  /* 0x0000 */ struct tagACCEL* _lpaccel;
  /* 0x0004 */ struct tagACCEL* _lpaccelBase;
}; /* size: 0x0008 */

class CPackagerMoniker
{
  /* 0x0004 */ unsigned long m_refs;
  /* 0x0008 */ wchar_t* m_szFile;
  /* 0x000c */ struct IMoniker* m_pmk;
  /* 0x0010 */ int m_fLink;
}; /* size: 0x0014 */

class CPageAllocator
{
  /* 0x0000 */ class CInternalPageAllocator _pgalloc;
  /* 0x0030 */ void* _hHeap;
  /* 0x0034 */ unsigned long _cbPerEntry;
  /* 0x0038 */ long _lNumEntries;
  /* 0x003c */ class COleStaticMutexSem* _pLock;
}; /* size: 0x0040 */

enum CPageAllocator::eFlags
{
  fCOUNT_ENTRIES = 1,
};

class CPagedVector
{
  /* 0x0000 */ class CBasedMSFPageTablePtr _pmpt;
  /* 0x0004 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0008 */ class CBasedMSFPagePtrPtr _amp;
  /* 0x000c */ class CBasedVectBitsPtr _avb;
  /* 0x0010 */ const unsigned long _sid;
  /* 0x0014 */ unsigned long _ulSize;
  /* 0x0018 */ unsigned long _ulAllocSize;
}; /* size: 0x001c */

class CPatternTbl
{
  /* 0x0000 */ struct STblHdr* _pTblHdr;
  /* 0x0004 */ unsigned char* _pStart;
}; /* size: 0x0008 */

class CPerContext
{
  /* 0x0008 */ struct ILockBytes* _plkbBase;
  /* 0x000c */ struct CFileStream* _pfstDirty;
  /* 0x0010 */ struct ILockBytes* _plkbOriginal;
  /* 0x0014 */ unsigned long _ulOpenLock;
  /* 0x0018 */ class CGlobalContext* _pgc;
  /* 0x001c */ long _cReferences;
  /* 0x0020 */ struct IMalloc* const _pMalloc;
  /* 0x0024 */ struct IFillInfo* _pfi;
  /* 0x0028 */ void* _hNotificationEvent;
  /* 0x002c */ class CSharedMemoryBlock* _psmb;
  /* 0x0030 */ unsigned char* _pbBase;
  /* 0x0034 */ unsigned long _ulHeapName;
  /* 0x0038 */ class CDfMutex _dmtx;
  /* 0x0040 */ unsigned long _cRecursion;
}; /* size: 0x0044 */

class CPipePSFactory
{
  /* 0x0004 */ long m_cRef;
}; /* size: 0x0008 */

class CPipeProxy<double,&IID_IPipeDouble,&IID_AsyncIPipeDouble,IPipeDouble,AsyncIPipeDouble>
{
  /* 0x0004 */ struct IUnknown* m_pUnkOuter;
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ struct IPipeDouble* m_pRealProxy;
  /* 0x0010 */ struct IUnknown* m_pPullCallObj;
  /* 0x0014 */ struct AsyncIPipeDouble* m_pAsyncPullPipe;
  /* 0x0018 */ struct ISynchronize* m_pISyncPull;
  /* 0x001c */ enum PULLSTATE m_PullState;
  /* 0x0020 */ unsigned long m_cReadAhead;
  /* 0x0024 */ unsigned long m_cLastRead;
  /* 0x0028 */ unsigned long m_cKeepBufferSize;
  /* 0x002c */ double* m_pKeepBuffer;
  /* 0x0030 */ unsigned long m_cKeepDataSize;
  /* 0x0034 */ double* m_pKeepData;
  /* 0x0038 */ struct IUnknown* m_pPushCallObj;
  /* 0x003c */ struct AsyncIPipeDouble* m_pAsyncPushPipe;
  /* 0x0040 */ struct ISynchronize* m_pISyncPush;
  /* 0x0044 */ enum PUSHSTATE m_PushState;
  /* 0x0048 */ unsigned long m_cPushBufferSize;
  /* 0x004c */ double* m_pPushBuffer;
  /* 0x0050 */ unsigned long m_cFreeSpace;
  /* 0x0054 */ double* m_pFreeSpace;
  /* 0x0058 */ void* PullStateFunc[14] /* function */;
  /* 0x0090 */ void* PushStateFunc[12] /* function */;
}; /* size: 0x00c0 */

class CPipeProxy<long,&IID_IPipeLong,&IID_AsyncIPipeLong,IPipeLong,AsyncIPipeLong>
{
  /* 0x0004 */ struct IUnknown* m_pUnkOuter;
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ struct IPipeLong* m_pRealProxy;
  /* 0x0010 */ struct IUnknown* m_pPullCallObj;
  /* 0x0014 */ struct AsyncIPipeLong* m_pAsyncPullPipe;
  /* 0x0018 */ struct ISynchronize* m_pISyncPull;
  /* 0x001c */ enum PULLSTATE m_PullState;
  /* 0x0020 */ unsigned long m_cReadAhead;
  /* 0x0024 */ unsigned long m_cLastRead;
  /* 0x0028 */ unsigned long m_cKeepBufferSize;
  /* 0x002c */ long* m_pKeepBuffer;
  /* 0x0030 */ unsigned long m_cKeepDataSize;
  /* 0x0034 */ long* m_pKeepData;
  /* 0x0038 */ struct IUnknown* m_pPushCallObj;
  /* 0x003c */ struct AsyncIPipeLong* m_pAsyncPushPipe;
  /* 0x0040 */ struct ISynchronize* m_pISyncPush;
  /* 0x0044 */ enum PUSHSTATE m_PushState;
  /* 0x0048 */ unsigned long m_cPushBufferSize;
  /* 0x004c */ long* m_pPushBuffer;
  /* 0x0050 */ unsigned long m_cFreeSpace;
  /* 0x0054 */ long* m_pFreeSpace;
  /* 0x0058 */ void* PullStateFunc[14] /* function */;
  /* 0x0090 */ void* PushStateFunc[12] /* function */;
}; /* size: 0x00c0 */

class CPipeProxy<unsigned char,&IID_IPipeByte,&IID_AsyncIPipeByte,IPipeByte,AsyncIPipeByte>
{
  /* 0x0004 */ struct IUnknown* m_pUnkOuter;
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ struct IPipeByte* m_pRealProxy;
  /* 0x0010 */ struct IUnknown* m_pPullCallObj;
  /* 0x0014 */ struct AsyncIPipeByte* m_pAsyncPullPipe;
  /* 0x0018 */ struct ISynchronize* m_pISyncPull;
  /* 0x001c */ enum PULLSTATE m_PullState;
  /* 0x0020 */ unsigned long m_cReadAhead;
  /* 0x0024 */ unsigned long m_cLastRead;
  /* 0x0028 */ unsigned long m_cKeepBufferSize;
  /* 0x002c */ unsigned char* m_pKeepBuffer;
  /* 0x0030 */ unsigned long m_cKeepDataSize;
  /* 0x0034 */ unsigned char* m_pKeepData;
  /* 0x0038 */ struct IUnknown* m_pPushCallObj;
  /* 0x003c */ struct AsyncIPipeByte* m_pAsyncPushPipe;
  /* 0x0040 */ struct ISynchronize* m_pISyncPush;
  /* 0x0044 */ enum PUSHSTATE m_PushState;
  /* 0x0048 */ unsigned long m_cPushBufferSize;
  /* 0x004c */ unsigned char* m_pPushBuffer;
  /* 0x0050 */ unsigned long m_cFreeSpace;
  /* 0x0054 */ unsigned char* m_pFreeSpace;
  /* 0x0058 */ void* PullStateFunc[14] /* function */;
  /* 0x0090 */ void* PushStateFunc[12] /* function */;
}; /* size: 0x00c0 */

class CPipeProxyImp
{
  /* 0x0004 */ long m_cRef;
  /* 0x0008 */ struct IUnknown* m_pUnkOuter;
  /* 0x000c */ struct IUnknown* m_pRealPipeProxy;
  /* 0x0010 */ struct IUnknown* m_pInternalPipeProxy;
  /* 0x0014 */ struct IRpcProxyBuffer* m_pInternalPB;
  /* 0x0018 */ struct _GUID m_IidOfPipe;
}; /* size: 0x0028 */

struct CPlex
{
  /* 0x0000 */ struct CPlex* pNext;
  /* 0x0004 */ unsigned int nMax;
  /* 0x0008 */ unsigned int nCur;
}; /* size: 0x000c */

class CPoint
{
  /* 0x0000 */ struct tagPOINT _pt;
}; /* size: 0x0008 */

class CPointerHashTable
{
}; /* size: 0x0018 */

class CPointerMoniker
{
  /* 0x0018 */ struct IUnknown* m_pUnk;
}; /* size: 0x001c */

class CPolicySet
{
  /* 0x0004 */ struct SHashChain _chain;
  /* 0x000c */ unsigned long _dwFlags;
  /* 0x0010 */ unsigned long _cRefs;
  /* 0x0014 */ unsigned long _cPolicies;
  /* 0x0018 */ unsigned long _dwAptID;
  /* 0x001c */ class CObjectContext* _pClientCtx;
  /* 0x0020 */ class CObjectContext* _pServerCtx;
  /* 0x0024 */ struct tagPolicyEntry* _pFirstEntry;
  /* 0x0028 */ struct tagPolicyEntry* _pLastEntry;
  /* 0x002c */ struct tagSPSCache _PSCache;
  union
  {
    /* 0x0000 */ class CPageAllocator s_PSallocator;
    /* 0x0000 */ class CPageAllocator s_PEallocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cObjects;
  }; /* size: 0x0040 */
}; /* size: 0x003c */

class CPres
{
  /* 0x0000 */ class CFormat m_format;
  /* 0x0018 */ unsigned long m_ulHeight;
  /* 0x001c */ unsigned long m_ulWidth;
  /* 0x0020 */ class CData m_data;
}; /* size: 0x0030 */

class CPrivAlloc
{
}; /* size: 0x0001 */

class CPrivDragDrop
{
  /* 0x0004 */ unsigned long _ulRefCnt;
}; /* size: 0x0008 */

class CProcessActivator
{
}; /* size: 0x0004 */

class CProcessExtensionTbl
{
  /* 0x0000 */ class CExtHashTable _HashTbl;
  /* 0x0018 */ class CPageAllocator _palloc;
}; /* size: 0x0058 */

class CProcessPatternTbl
{
  /* 0x0000 */ class CPatternTbl* m_pPatTbl;
  /* 0x0004 */ class CScmPatternTbl* m_pScmPatTbl;
}; /* size: 0x0008 */

class CProcessSecret
{
  union
  {
    /* 0x0000 */ struct _GUID s_guidOle32Secret;
    /* 0x0000 */ int s_fSecretInit;
    /* 0x0000 */ class COleStaticMutexSem s_SecretLock;
  }; /* size: 0x0030 */
}; /* size: 0x0001 */

class CPropSetName
{
  /* 0x0000 */ wchar_t _oszName[32];
}; /* size: 0x0040 */

class CPropertyBagEx
{
  /* 0x0008 */ int _fLcidInitialized : 1; /* bit position: 0 */
  /* 0x000c */ unsigned long _lcid;
  /* 0x0010 */ struct IPropertySetStorage* _ppropsetstgContainer;
  /* 0x0014 */ struct IPropertyStorage* _ppropstg;
  /* 0x0018 */ struct IBlockingLock* _pBlockingLock;
  /* 0x001c */ unsigned long _grfMode;
  /* 0x0020 */ long _cRefs;
}; /* size: 0x0024 */

class CPropertySetStorage
{
  /* 0x0004 */ struct IStorage* _pstg;
  /* 0x0008 */ struct IBlockingLock* _pBlockingLock;
  /* 0x000c */ unsigned long _ulSig;
  /* 0x0010 */ int _fContainingStgIsRefed : 1; /* bit position: 0 */
  /* 0x0014 */ enum MAPPED_STREAM_OPTS _MSOpts;
  /* 0x0018 */ long _cReferences;
}; /* size: 0x001c */

class CPropertySetStream
{
  /* 0x0000 */ struct tagPROPERTYSETHEADER* _pph;
  /* 0x0004 */ unsigned long _oSection;
  /* 0x0008 */ unsigned long _cSection;
  /* 0x000c */ unsigned short _CodePage;
  /* 0x000e */ unsigned char _Flags;
  /* 0x000f */ unsigned char _State;
  /* 0x0010 */ unsigned long _Locale;
  /* 0x0014 */ unsigned long _grfBehavior;
  /* 0x0018 */ unsigned long _cbTail;
  /* 0x001c */ class PMemoryAllocator* _pma;
  /* 0x0020 */ class IMappedStream* _pmstm;
}; /* size: 0x0024 */

class CPropertyStorage
{
  /* 0x0004 */ unsigned long _ulSig;
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ struct IStorage* _pstgPropSet;
  /* 0x0010 */ struct IStream* _pstmPropSet;
  /* 0x0014 */ class CPropertySetStream* _np;
  /* 0x0018 */ class IMappedStream* _ms;
  /* 0x001c */ enum MAPPED_STREAM_OPTS _fMSOpts;
  /* 0x0020 */ int _fInitCriticalSection;
  /* 0x0024 */ struct _RTL_CRITICAL_SECTION _CriticalSection;
  struct /* bitfield */
  {
    /* 0x003c */ int _fUserDefinedProperties : 1; /* bit position: 0 */
    /* 0x003c */ int _fExplicitelyProbedForWriteAccess : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0040 */ unsigned short _usCodePage;
  /* 0x0044 */ unsigned long _dwOSVersion;
  /* 0x0048 */ unsigned long _grfFlags;
  /* 0x004c */ unsigned long _grfMode;
  /* 0x0050 */ class CCoTaskAllocator _cCoTaskAllocator;
}; /* size: 0x0054 */

enum CPropertyStorage::EInitializePropertyStream
{
  OPEN_PROPSTREAM = 0,
  CREATE_PROPSTREAM = 1,
  DELETE_PROPSTREAM = 2,
};

enum CPropertyStorage::EIsWriteable
{
  PROBE_IF_NECESSARY = 0,
  DO_NOT_PROBE = 1,
};

class CPtrBlock
{
  /* 0x0000 */ int _cPtrs;
  /* 0x0004 */ class CPtrBlock* _pbNext;
  /* 0x0008 */ void* _apv[50];
}; /* size: 0x00d0 */

class CPtrCache
{
  /* 0x0000 */ class CPtrBlock _pbFirst;
  /* 0x00d0 */ class CPtrBlock* _pbHead;
  /* 0x00d4 */ class CPtrBlock* _pbEnum;
  /* 0x00d8 */ int _iEnum;
}; /* size: 0x00dc */

class CPubDocFile
{
  /* 0x0054 */ class CTSSet _tss;
  /* 0x0058 */ class CBasedPubDocFilePtr _pdfParent;
  /* 0x005c */ class CBasedDocFilePtr _pdf;
  /* 0x0060 */ class CChildInstanceList _cilChildren;
  /* 0x0064 */ unsigned short _cTransactedDepth;
  /* 0x0066 */ unsigned short _wFlags;
  /* 0x0068 */ class CBasedMStreamPtr _pmsBase;
  /* 0x006c */ unsigned long _sigMSF;
  /* 0x0070 */ long _cReferences;
  /* 0x0074 */ class CBasedDFBasisPtr _pdfb;
}; /* size: 0x0078 */

class CPubMappedStream
{
  /* 0x0000 */ class CBasedPubStreamPtr _pst;
  /* 0x0004 */ class CBasedBytePtr _pb;
  /* 0x0008 */ class CBasedBytePtr _powner;
  /* 0x000c */ unsigned long _cbUsed;
  /* 0x0010 */ unsigned long _cbOriginalStreamSize;
  /* 0x0014 */ unsigned char _fDirty;
}; /* size: 0x0018 */

class CPubStream
{
  /* 0x0054 */ class CBasedSStreamPtr _psParent;
  /* 0x0058 */ class CBasedPubDocFilePtr _ppdfParent;
  /* 0x005c */ int _fDirty;
  /* 0x0060 */ long _cReferences;
  /* 0x0064 */ class CPubMappedStream _PubMappedStream;
}; /* size: 0x007c */

class CPunkForRelease
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ unsigned long _fTopLayerMFP : 1; /* bit position: 0 */
  /* 0x000c */ struct tagSTGMEDIUM _stgmed;
  /* 0x0018 */ struct IUnknown* _pUnkForRelease;
}; /* size: 0x001c */

struct CREATE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 MaximumSize;
  /* 0x0008 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0010 */

class CRGTypeSizes
{
  union
  {
    /* 0x0000 */ const unsigned char* m_ucTypeSizesA /* zero-length array */;
    /* 0x0000 */ const unsigned char* m_ucTypeSizesB /* zero-length array */;
  }; /* size: 0x0001 */
}; /* size: 0x0001 */

class CRIFTable
{
  union
  {
    /* 0x0000 */ int _fPreFilled;
    /* 0x0000 */ class CUUIDHashTable _HashTbl;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0040 */
}; /* size: 0x0001 */

class CROIDTable
{
  union
  {
    /* 0x0000 */ unsigned long _cOidsToAdd;
    /* 0x0000 */ unsigned long _cOidsToRemove;
    /* 0x0000 */ struct SOIDRegistration _ClientOIDRegList;
    /* 0x0000 */ int _fWorker;
    /* 0x0000 */ unsigned long _dwSleepPeriod;
    /* 0x0000 */ class CUUIDHashTable _ClientRegisteredOIDs;
  }; /* size: 0x0040 */
}; /* size: 0x0001 */

class CROTItem
{
  /* 0x0000 */ unsigned short _wItemSig;
  /* 0x0004 */ int _fDontCallApp;
  /* 0x0008 */ struct _SCMREGKEY _scmregkey;
  /* 0x0018 */ unsigned long _hApt;
  /* 0x001c */ void* _pvStubRegistration;
}; /* size: 0x0020 */

class CRWLock
{
  union
  {
    /* 0x0000 */ struct CRWLock::LockState _lockState;
    struct
    {
      /* 0x0000 */ volatile unsigned long _ulLockState;
      /* 0x0004 */ volatile unsigned long _dwWriterSeqNum;
      /* 0x0008 */ volatile unsigned long _dwWriterID;
      /* 0x000c */ unsigned short _wFlags;
      /* 0x000e */ unsigned short _wWriterLevel;
      union
      {
        /* 0x0010 */ struct CRWLock::EventState _eventState;
        /* 0x0010 */ volatile unsigned long _dwEventState;
        /* 0x0010 */ class EventPoolEntry* volatile _pPoolEntry;
      }; /* size: 0x0004 */
    }; /* size: 0x0014 */
    /* 0x0000 */ unsigned long s_dwDefaultTimeout;
    /* 0x0000 */ unsigned long s_dwDefaultSpinCount;
    /* 0x0000 */ unsigned long s_dwNumberOfProcessors;
  }; /* size: 0x0014 */
}; /* size: 0x0014 */

struct CRWLock::EventState
{
  struct /* bitfield */
  {
    /* 0x0000 */ volatile unsigned long _entryIsEventMask : 1; /* bit position: 0 */
    /* 0x0000 */ volatile unsigned long _entryIsMarkedForPooling : 1; /* bit position: 1 */
    /* 0x0000 */ volatile unsigned long _entryIsBeingPooled : 1; /* bit position: 2 */
    /* 0x0000 */ volatile unsigned long _readerEventBeingSignaled : 1; /* bit position: 3 */
    /* 0x0000 */ volatile unsigned long _readerEventBeingReset : 1; /* bit position: 4 */
    /* 0x0000 */ volatile unsigned long _readerCountIsSignalCount : 1; /* bit position: 5 */
    /* 0x0000 */ volatile unsigned long _readerCount : 25; /* bit position: 6 */
    /* 0x0000 */ volatile unsigned long _writerEventSignaled : 1; /* bit position: 31 */
  }; /* bitfield */
}; /* size: 0x0004 */

union CRWLock::GetPoolEntry::__l2::EventStatePoolEntry
{
  union
  {
    /* 0x0000 */ volatile unsigned long dwEventState;
    /* 0x0000 */ class EventPoolEntry* volatile pPoolEntry;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct CRWLock::LockState
{
  struct /* bitfield */
  {
    /* 0x0000 */ volatile unsigned long _numReaders : 10; /* bit position: 0 */
    /* 0x0000 */ volatile unsigned long _writerPresent : 1; /* bit position: 10 */
    /* 0x0000 */ volatile unsigned long _writerSignaled : 1; /* bit position: 11 */
    /* 0x0000 */ volatile unsigned long _readerSignaled : 1; /* bit position: 12 */
    /* 0x0000 */ volatile unsigned long _resetInProgress : 1; /* bit position: 13 */
    /* 0x0000 */ volatile unsigned long _waitingReaders : 9; /* bit position: 14 */
    /* 0x0000 */ volatile unsigned long _waitingWriters : 9; /* bit position: 23 */
  }; /* bitfield */
}; /* size: 0x0004 */

union CRWLock::ReleasePoolEntry::__l2::LockStatePoolEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ volatile unsigned long ulLockState;
      union
      {
        /* 0x0004 */ volatile unsigned long dwEventState;
        /* 0x0004 */ class EventPoolEntry* volatile pPoolEntry;
      }; /* size: 0x0004 */
    }; /* size: 0x0008 */
    /* 0x0000 */ volatile __int64 llState;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class CRandomNumberGenerator
{
  /* 0x0000 */ unsigned long _hRngProv;
}; /* size: 0x0004 */

class CRefCache
{
  /* 0x0000 */ unsigned long _cRefs;
  /* 0x0004 */ unsigned long _cStrongItfs;
  /* 0x0008 */ unsigned long _cWeakItfs;
  /* 0x000c */ unsigned long _cTableStrong;
  /* 0x0010 */ unsigned long _cIRCs;
  /* 0x0014 */ struct IRCEntry* _pIRCList;
  /* 0x0018 */ struct SOIDRegistration _soidReg;
}; /* size: 0x0058 */

class CRefExportCount
{
  /* 0x0004 */ unsigned long m_cRefs;
  /* 0x0008 */ unsigned long m_cExportCount;
  /* 0x000c */ unsigned long m_IsZombie;
  /* 0x0010 */ unsigned long m_Status;
  /* 0x0014 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0018 */

enum CRefExportCount::tagTokens
{
  ALIVE = 0,
  KILL = 1,
  DEAD = 2,
};

class CRefMutexAutoLock
{
  /* 0x0000 */ class CRefMutexSem* m_pmxs;
}; /* size: 0x0004 */

class CRefMutexSem
{
  /* 0x0000 */ long m_lRefs;
  /* 0x0004 */ class CMutexSem2 m_mxs;
}; /* size: 0x0020 */

class CRefStabilize
{
  /* 0x0000 */ class CRefExportCount* m_pRefExportCount;
}; /* size: 0x0004 */

class CRefcountedObject
{
  /* 0x0000 */ unsigned long _cReferences;
}; /* size: 0x0004 */

class CRemoteUnknown
{
  /* 0x0004 */ class CStdIdentity* _pStdId;
}; /* size: 0x0008 */

class CRootPubDocFile
{
  /* 0x0078 */ unsigned long _ulPriLock;
  /* 0x007c */ struct IMalloc* const _pMalloc;
  /* 0x0080 */ struct _FILETIME _timeModifyAtCommit;
}; /* size: 0x0088 */

class CRotHintTable
{
  /* 0x0000 */ unsigned char* _pbHintArray;
}; /* size: 0x0004 */

class CRotMonikerEnum
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ unsigned long _dwOffset;
  /* 0x000c */ class CMonikerPtrBuf _mkptrbuf;
}; /* size: 0x0024 */

class CRpcCall
{
  /* 0x000c */ unsigned long _cRefs;
  /* 0x0010 */ struct IUnknown*& _pIdentity;
  /* 0x0014 */ struct tagRPCOLEMESSAGE* _pMessage;
  /* 0x0018 */ const struct _GUID& _riid;
  /* 0x001c */ HRESULT& _hrRet;
  /* 0x0020 */ enum _CALLSOURCE _callSource;
  /* 0x0024 */ HRESULT _ServerHR;
}; /* size: 0x0028 */

class CRpcChannelBuffer
{
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long state;
  /* 0x0010 */ class CChannelHandle* volatile _pRpcDefault;
  /* 0x0014 */ class CChannelHandle* _pRpcCustom;
  /* 0x0018 */ class OXIDEntry* _pOXIDEntry;
  /* 0x001c */ struct tagIPIDEntry* _pIPIDEntry;
  /* 0x0020 */ void* _pInterfaceInfo;
  /* 0x0024 */ class CStdIdentity* _pStdId;
  /* 0x0028 */ class CDestObject _destObj;
}; /* size: 0x0034 */

class CRpcChannelBuffer::CServerCallMgr
{
  /* 0x0010 */ unsigned long _cRefs;
  /* 0x0014 */ unsigned long _dwState;
  /* 0x0018 */ struct _GUID _iid;
  /* 0x0028 */ struct _GUID _iidAsync;
  /* 0x0038 */ struct IUnknown* _pUnkStubCallMgr;
  /* 0x003c */ struct IUnknown* _pUnkServerCallMgr;
  /* 0x0040 */ struct ISynchronize* _pSync;
  /* 0x0044 */ struct IRpcStubBuffer* _pSB;
  /* 0x0048 */ class CMessageCall* _pCall;
  /* 0x004c */ class CStdIdentity* _pStdID;
}; /* size: 0x0050 */

typedef enum _TAG_UNNAMED_26
{
  STATE_WAITINGFORSIGNAL = 0,
  STATE_SIGNALED = 1,
  STATE_ERROR = 2,
} TAG_UNNAMED_26, *PTAG_UNNAMED_26;

class CRpcHelper
{
  /* 0x0004 */ unsigned long _cRefs;
}; /* size: 0x0008 */

class CRpcOptions
{
  /* 0x0004 */ class CStdIdentity* _pStdId;
  /* 0x0008 */ struct IUnknown* _pUnkOuter;
}; /* size: 0x000c */

class CRpcResolver
{
  union
  {
    struct
    {
      /* 0x0000 */ class CFastBH* _fbhILocalObjectExporter;
      /* 0x0004 */ class CFastBH* _fbhIROT;
      /* 0x0008 */ class CFastBH* _fbhISCM;
      /* 0x000c */ class CFastBH* _fbhIMachineActivatorControl;
    }; /* size: 0x0010 */
    /* 0x0000 */ void* _ph;
    /* 0x0000 */ unsigned long _dwFlags;
    /* 0x0000 */ class CDualStringArray* _pdsaLocalResolver;
    /* 0x0000 */ unsigned __int64 _dwCurrentBindingsID;
    /* 0x0000 */ struct _GUID _GuidRPCSSProcessIdentifier;
    /* 0x0000 */ class CMachineNamesHelper* _pMNHelper;
    /* 0x0000 */ unsigned long _cReservedOidsAvail;
    /* 0x0000 */ unsigned __int64 _OidsReserved[10];
    /* 0x0000 */ struct ISCMLocalActivator* _pSCMProxy;
    /* 0x0000 */ struct ISCMLocalActivator* _pCloakedSCMProxy;
    /* 0x0000 */ wchar_t* _pwszWinstaDesktop;
    /* 0x0000 */ wchar_t* _pwszFQDN;
    /* 0x0000 */ unsigned __int64 _ProcessSignature;
    /* 0x0000 */ void* _pNoRegLaunchPermissionsSD;
    /* 0x0000 */ void* _pNoRegAccessPermissionsSD;
    /* 0x0000 */ void* _pNoRegLaunchRestrictionsSD;
    /* 0x0000 */ void* _pNoRegAccessRestrictionsSD;
    /* 0x0000 */ void* _pDefaultAccessRestrictionsSD;
    /* 0x0000 */ void* _pSelfSid;
    /* 0x0000 */ class COleStaticMutexSem _mxsResolver;
    /* 0x0000 */ void* _hResolverWaitEvent;
  }; /* size: 0x0050 */
}; /* size: 0x0010 */

class CRpcThread
{
  /* 0x0000 */ void* _hWakeup;
  /* 0x0004 */ int _fDone;
  /* 0x0008 */ void* _fn /* function */;
  /* 0x000c */ void* _param;
  /* 0x0010 */ class CRpcThread* _pNext;
  /* 0x0014 */ unsigned long _dwThreadID;
  /* 0x0018 */ struct HINSTANCE__* _hInstOle32;
}; /* size: 0x001c */

class CRpcThreadCache
{
  union
  {
    /* 0x0000 */ class CRpcThread* _pFreeList;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0030 */
}; /* size: 0x0001 */

class CRtlSmartUcsEncoderTraits<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

class CRtlSmartUcsEncoderTraits<_LUTF8_STRING>
{
}; /* size: 0x0001 */

class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUNICODE_STRING> >
{
}; /* size: 0x0001 */

class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUTF8_STRING> >
{
}; /* size: 0x0001 */

class CRunningObjectTable
{
  /* 0x0008 */ class CArrayFValue _afvRotList;
  /* 0x001c */ class CCliRotHintTable _crht;
  /* 0x0024 */ unsigned short _wSigRotItem;
}; /* size: 0x0028 */

class CSCInnerUnknown
{
  /* 0x0004 */ unsigned long _iRefCount;
  /* 0x0008 */ class CSynchronizeContainer* _pParent;
}; /* size: 0x000c */

class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>
{
  /* 0x0004 */ struct IEnumCATEGORYINFO** m_pcsEnum;
  /* 0x0008 */ unsigned long m_cTotalEnum;
  /* 0x000c */ unsigned long m_dwRefCount;
  /* 0x0010 */ unsigned long m_CurrentEnum;
  /* 0x0014 */ struct _GUID m_myiid;
}; /* size: 0x0024 */

class CSCMergedEnum<IEnumGUID,_GUID>
{
  /* 0x0004 */ struct IEnumGUID** m_pcsEnum;
  /* 0x0008 */ unsigned long m_cTotalEnum;
  /* 0x000c */ unsigned long m_dwRefCount;
  /* 0x0010 */ unsigned long m_CurrentEnum;
  /* 0x0014 */ struct _GUID m_myiid;
}; /* size: 0x0024 */

class CSSL
{
  union
  {
    /* 0x0000 */ unsigned long _hProvider;
    /* 0x0000 */ void* _hMyStore;
    /* 0x0000 */ void* _hRootStore;
    /* 0x0000 */ const struct _CERT_CONTEXT* _pCert;
    /* 0x0000 */ HRESULT _hr;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class CSSMappedStream
{
  /* 0x0004 */ long _cRefs;
  /* 0x0008 */ struct IStream* _pstm;
  /* 0x000c */ unsigned char* _pbMappedStream;
  /* 0x0010 */ unsigned long _cbMappedStream;
  /* 0x0014 */ unsigned long _cbActualStreamSize;
  /* 0x0018 */ void* _powner;
  /* 0x001c */ int _fDirty;
}; /* size: 0x0020 */

class CSTATPROPBAGArray
{
  /* 0x0000 */ long _cReferences;
  /* 0x0004 */ struct IEnumSTATPROPSTG* _penum;
  /* 0x0008 */ struct IBlockingLock* _pBlockingLock;
  /* 0x000c */ wchar_t* _poszPrefix;
  /* 0x0010 */ unsigned long _dwFlags;
}; /* size: 0x0014 */

class CSTInnerUnknown
{
  /* 0x0004 */ unsigned long _iRefCount;
  /* 0x0008 */ class CStdEvent* _pParent;
}; /* size: 0x000c */

class CSafeAccess
{
  /* 0x0000 */ class CDFBasis* _pdfb;
  /* 0x0004 */ class CPerContext* _ppc;
  /* 0x0008 */ int _fAccess;
}; /* size: 0x000c */

class CSafeBYTEArray
{
  /* 0x0000 */ unsigned char* _p;
}; /* size: 0x0004 */

class CSafeBindCtx
{
  /* 0x0000 */ struct IBindCtx* _p;
}; /* size: 0x0004 */

class CSafeMarshaledStg
{
  /* 0x0000 */ struct IStorage* _pstg;
}; /* size: 0x0004 */

class CSafeMoniker
{
  /* 0x0000 */ struct IMoniker* _p;
}; /* size: 0x0004 */

class CSafeMultiHeap
{
  /* 0x0000 */ class CSmAllocator* _pSmAllocator;
  /* 0x0004 */ class CPerContext* _ppcPrev;
}; /* size: 0x0008 */

class CSafeRefCount
{
  /* 0x0004 */ unsigned long m_cRefs;
  /* 0x0008 */ int m_fInDelete;
  /* 0x000c */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0010 */

class CSafeSem
{
  /* 0x0000 */ long _sc;
  /* 0x0004 */ class CPerContext* _ppc;
  /* 0x0008 */ class CPerContext* _ppcPrev;
  /* 0x000c */ class CSmAllocator* _pSmAllocator;
}; /* size: 0x0010 */

class CSafeStgMarshaled
{
  /* 0x0000 */ struct tagInterfaceData* _pIFD;
}; /* size: 0x0004 */

class CScmPatternTbl
{
  /* 0x0000 */ unsigned char* _pLocTbl;
}; /* size: 0x0004 */

class CSecurityDescriptor
{
  /* 0x0000 */ struct _SECURITY_DESCRIPTOR _sd;
}; /* size: 0x0014 */

class CSeekPointer
{
  /* 0x0000 */ unsigned __int64 _ulPos;
  /* 0x0008 */ long _cReferences;
}; /* size: 0x0010 */

class CServerContextActivator
{
}; /* size: 0x0004 */

class CServerSecurity
{
  union
  {
    /* 0x0000 */ class CPageAllocator _palloc;
    struct
    {
      /* 0x0000 */ class COleStaticMutexSem _mxs;
      /* 0x000c */ unsigned long _iRefCount;
      /* 0x0010 */ unsigned long _iFlags;
      /* 0x0014 */ class CChannelHandle* _pHandle;
      /* 0x0018 */ void* _hRpc;
      /* 0x001c */ class CMessageCall* _pClientCall;
      /* 0x0020 */ void* _hSaved;
    }; /* size: 0x0048 */
  }; /* size: 0x0048 */
}; /* size: 0x0024 */

class CSessionMoniker
{
  /* 0x0018 */ unsigned long m_sessionid;
  /* 0x001c */ int m_bUseConsoleSession;
  /* 0x0020 */ int m_bHaveBindOpts;
  /* 0x0024 */ struct tagBIND_OPTS2 m_bindopts2;
}; /* size: 0x0044 */

class CSharedMemHeader
{
  /* 0x0000 */ unsigned long _ulSize;
  /* 0x0004 */ unsigned long ulPad;
}; /* size: 0x0008 */

class CSharedMemoryBlock
{
  /* 0x0000 */ void* _hMem;
  /* 0x0004 */ unsigned char* _pbBase;
  /* 0x0008 */ unsigned long _culCommitSize;
  /* 0x000c */ unsigned long _culInitCommitSize;
  /* 0x0010 */ int _fCreated;
  /* 0x0014 */ int _fReadWrite;
}; /* size: 0x0018 */

class CSimpEnumSTATSTG
{
  /* 0x0004 */ unsigned long _cReferences;
  /* 0x0008 */ class CDfNameList* _pdfl;
  /* 0x000c */ class CDfNameList* _pdflCurrent;
}; /* size: 0x0010 */

struct CSimpStorage
{
  /* 0x0024 */ long _cReferences;
  /* 0x0028 */ void* _hFile;
  /* 0x002c */ int _fDirty;
  /* 0x0030 */ class CMSFHeader _hdr;
  /* 0x0234 */ unsigned char* _pbBuf;
  /* 0x0238 */ unsigned long _sectMax;
  /* 0x023c */ struct _GUID _clsid;
  /* 0x024c */ class CDfNameList* _pdfl;
  /* 0x0250 */ class CDfNameList* _pdflCurrent;
  /* 0x0254 */ unsigned long _cStreams;
}; /* size: 0x0258 */

class CSimpStorageOpen
{
  /* 0x0258 */ unsigned long _grfMode;
  /* 0x025c */ unsigned long _grfStateBits;
  /* 0x0260 */ wchar_t _awcsName[260];
}; /* size: 0x0468 */

struct CSimpStream
{
  /* 0x0008 */ long _cReferences;
  /* 0x000c */ long _ulSeekStart;
  /* 0x0010 */ unsigned long _ulSeekPos;
  /* 0x0014 */ struct CSimpStorage* _pstgParent;
  /* 0x0018 */ void* _hFile;
}; /* size: 0x001c */

class CSimpStreamOpen
{
  /* 0x001c */ class CDfNameList* _pdfl;
  /* 0x0020 */ unsigned long _grfMode;
}; /* size: 0x0024 */

class CSinkList
{
  /* 0x0000 */ struct IProgressNotify* _ppn;
  /* 0x0004 */ unsigned long _dwCookie;
  /* 0x0008 */ class CSinkList* _pslNext;
}; /* size: 0x000c */

class CSmAllocator
{
  /* 0x0004 */ class CSharedMemoryBlock* _psmb;
  /* 0x0008 */ unsigned char* _pbBase;
  /* 0x000c */ class CPerContext* _ppcOwner;
  /* 0x0010 */ unsigned long _cbSize;
  /* 0x0014 */ unsigned long _ulHeapName;
  /* 0x0018 */ unsigned long _cRefs;
}; /* size: 0x001c */

class CSplit_QI
{
  /* 0x0000 */ struct tagMInterfacePointer* SomePMItfPtrs[2];
  /* 0x0008 */ HRESULT SomeHRs[2];
  /* 0x0010 */ struct _GUID SomeIIDs[2];
  /* 0x0030 */ unsigned long _dwCount;
  /* 0x0034 */ char* _pAllocBlock;
  /* 0x0038 */ struct tagMInterfacePointer** _pItfArray;
  /* 0x003c */ HRESULT* _pHrArray;
  /* 0x0040 */ struct _GUID* _pIIDArray;
}; /* size: 0x0044 */

class CSpyTable
{
  /* 0x0000 */ unsigned long m_cAllocations;
  /* 0x0004 */ struct AENTRY* m_table;
  /* 0x0008 */ unsigned long m_cEntries;
}; /* size: 0x000c */

class CSrvCallState
{
  /* 0x0000 */ unsigned long _dwCallCatIn;
  /* 0x0004 */ class CSrvCallState* _pPrev;
}; /* size: 0x0008 */

class CStabilize
{
  /* 0x0000 */ class CSafeRefCount* m_pSafeRefCount;
}; /* size: 0x0004 */

class CStackBuffer
{
  /* 0x0000 */ unsigned char* _pbHeapBuf;
  /* 0x0004 */ unsigned long _cElements;
  /* 0x0008 */ unsigned char* _pbStackBuf;
  /* 0x000c */ unsigned long _cbElement;
}; /* size: 0x0010 */

class CStackWalker
{
  /* 0x0004 */ long m_cRef;
  /* 0x0008 */ void* m_hProcess;
}; /* size: 0x000c */

class CStackWalkerStack
{
  /* 0x0004 */ long m_cRef;
  /* 0x0008 */ unsigned long m_dwFlags;
  /* 0x000c */ class CStackWalkerSymbol* m_pTopSymbol;
}; /* size: 0x0010 */

class CStackWalkerSymbol
{
  /* 0x0004 */ long m_cRef;
  /* 0x0008 */ wchar_t* m_pwszModuleName;
  /* 0x000c */ wchar_t* m_pwszSymbolName;
  /* 0x0010 */ unsigned __int64 m_dw64Displacement;
  /* 0x0018 */ unsigned __int64 m_dw64Address;
  /* 0x0020 */ class CStackWalkerSymbol* m_pNext;
}; /* size: 0x0028 */

class CStatArray
{
  /* 0x0000 */ long _cRefs;
  /* 0x0004 */ struct tagSTATPROPSTG* _psps;
  /* 0x0008 */ unsigned long _cpropActual;
}; /* size: 0x000c */

class CStatData
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ struct tagFORMATETC m_foretc;
  /* 0x0018 */ unsigned long m_dwAdvf;
  /* 0x001c */ struct IAdviseSink* m_pAdvSink;
  /* 0x0020 */ unsigned long m_dwConnID;
}; /* size: 0x0024 */

class CStaticWrapper
{
}; /* size: 0x0004 */

class CStaticWriteLock
{
  /* 0x0000 */ class CRWLock& _rwLock;
}; /* size: 0x0004 */

class CStdClassFactory
{
  /* 0x0004 */ unsigned long _cRefs;
  /* 0x0008 */ unsigned long _dwIndex;
}; /* size: 0x000c */

class CStdEvent
{
  /* 0x0008 */ class CSTInnerUnknown _cInner;
  /* 0x0014 */ struct IUnknown* _pControl;
  /* 0x0018 */ void* m_hEvent;
}; /* size: 0x001c */

class CStdIdentity
{
  /* 0x00a0 */ class CStdIdentity::CInternalUnk m_InternalUnk;
  /* 0x00a8 */ unsigned long m_refs;
  /* 0x00ac */ unsigned long m_flags;
  /* 0x00b0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00b4 */ struct IUnknown* m_pUnkControl;
  /* 0x00b8 */ void* m_pVtableAddress;
  /* 0x00bc */ struct IExternalConnection* m_pIEC;
  /* 0x00c0 */ struct _GUID m_moid;
  /* 0x00d0 */ unsigned long m_dwAptId;
  /* 0x00d4 */ long m_cStrongRefs;
  /* 0x00d8 */ long m_cWeakRefs;
  /* 0x00dc */ HRESULT m_ConnStatus;
  /* 0x00e0 */ void* m_pVoid;
}; /* size: 0x00e4 */

class CStdIdentity::CInternalUnk
{
}; /* size: 0x0008 */

class CStdMarshal
{
  /* 0x0004 */ unsigned long _dwFlags;
  /* 0x0008 */ long _cIPIDs;
  /* 0x000c */ struct tagIPIDEntry* _pFirstIPID;
  /* 0x0010 */ class CStdIdentity* _pStdId;
  /* 0x0014 */ class CCtxComChnl* _pChnl;
  /* 0x0018 */ struct _GUID _clsidHandler;
  /* 0x0028 */ long _cNestedCalls;
  /* 0x002c */ long _cTableRefs;
  /* 0x0030 */ unsigned long _dwMarshalTime;
  /* 0x0034 */ struct IRemUnknown* _pSecureRemUnk;
  /* 0x0038 */ struct IUnknown* _pAsyncRelease;
  /* 0x003c */ class CtxEntry* _pCtxEntryHead;
  /* 0x0040 */ class CtxEntry* _pCtxFreeList;
  /* 0x0044 */ struct _RTL_CRITICAL_SECTION _csCtxEntry;
  /* 0x005c */ int _fCsInitialized;
  /* 0x0060 */ class CPolicySet* _pPS;
  /* 0x0064 */ class CIDObject* _pID;
  /* 0x0068 */ class CRefCache* _pRefCache;
  /* 0x006c */ struct CStdMarshal::DiscSinkNode _discHead;
  /* 0x007c */ unsigned long _dwLastCallTime;
}; /* size: 0x0080 */

struct CStdMarshal::Deactivate::__l3::tagServerRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0004 */ void* pServer;
}; /* size: 0x0008 */

struct CStdMarshal::DiscSinkNode
{
  /* 0x0000 */ struct CStdMarshal::DiscSinkNode* pNext;
  /* 0x0004 */ struct CStdMarshal::DiscSinkNode* pPrev;
  /* 0x0008 */ struct IDisconnectSink* pSink;
  /* 0x000c */ void* pvCookie;
}; /* size: 0x0010 */

struct CStdMarshal::DisconnectCliIPIDs::__l6::_IPIDReleaseSet
{
  /* 0x0000 */ unsigned short cRifRef;
  /* 0x0004 */ struct tagREMINTERFACEREF* pRifRef;
}; /* size: 0x0008 */

struct CStdMarshal::Reactivate::__l3::tagServerRefs;

class CStdWrapper
{
  /* 0x0004 */ unsigned long _dwState;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cCalls;
  /* 0x0010 */ unsigned long _cIFaces;
  /* 0x0014 */ class IFaceEntry* _pIFaceHead;
  /* 0x0018 */ class CtxEntry* _pCtxEntryHead;
  /* 0x001c */ class CtxEntry* _pCtxFreeList;
  /* 0x0020 */ struct IUnknown* _pServer;
  /* 0x0024 */ class CIDObject* _pID;
  /* 0x0028 */ void* _pVtableAddress;
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ unsigned long s_cObjects;
    /* 0x0000 */ int s_fInitialized;
  }; /* size: 0x0040 */
}; /* size: 0x002c */

struct CStdWrapper::Deactivate::__l3::tagServerRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0004 */ void* pServer;
}; /* size: 0x0008 */

struct CStdWrapper::Reactivate::__l3::tagServerRefs;

class CStgHandle
{
}; /* size: 0x0008 */

class CStmBuf
{
  /* 0x0000 */ struct IStream* m_pStm;
  /* 0x0004 */ unsigned char m_aBuffer[256];
  /* 0x0104 */ unsigned char* m_pBuffer;
  /* 0x0108 */ unsigned long m_cBuffer;
}; /* size: 0x010c */

class CStmBufRead
{
}; /* size: 0x010c */

class CStmBufWrite
{
}; /* size: 0x010c */

class CStmHandle
{
}; /* size: 0x0008 */

class CStreamCache
{
  /* 0x0000 */ struct SCacheEntry _ase[9];
  /* 0x006c */ class CBasedDirectStreamPtr _pds;
  /* 0x0070 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0074 */ unsigned long _sid;
  /* 0x0078 */ unsigned short _uHighCacheIndex;
  /* 0x007a */ unsigned short _uNextCacheIndex;
  /* 0x007c */ unsigned short _uCacheState;
}; /* size: 0x0080 */

struct CStreamChunk
{
  /* 0x0000 */ unsigned long oOld;
  /* 0x0004 */ long cbChange;
}; /* size: 0x0008 */

class CStreamChunkList
{
  /* 0x0000 */ unsigned long _cMaxChunks;
  /* 0x0004 */ unsigned long _cChunks;
  /* 0x0008 */ struct CStreamChunk* _ascnk;
  /* 0x000c */ unsigned char _fDelete;
}; /* size: 0x0010 */

class CStreamOnMessage
{
  /* 0x0004 */ unsigned char* _pStartOfStream;
  /* 0x0008 */ unsigned char** _ppBuffer;
  /* 0x000c */ unsigned long _cbMaxStreamLength;
  /* 0x0010 */ unsigned long _ref_count;
}; /* size: 0x0014 */

class CStringHashTable
{
}; /* size: 0x0018 */

class CSurrogateActivator
{
  /* 0x0004 */ struct _GUID m_processGuid;
  /* 0x0014 */ int m_fServicesConfigured;
  /* 0x0018 */ unsigned long m_dwObjectCountAtIdleTime;
  /* 0x0000 */ class CSurrogateActivator* s_pCSA;
}; /* size: 0x001c */

class CSurrogateProcessActivator
{
  /* 0x0028 */ long m_lRC;
  /* 0x002c */ void* m_hInitThread;
  /* 0x0030 */ void* m_hStopPingingSCM;
  union
  {
    struct
    {
      /* 0x0000 */ const int PING_INTERVAL;
      /* 0x0034 */ struct IComProcessInfo* m_pIComProcessInfo;
      /* 0x0038 */ struct IProcessServerInfo* m_pIProcessServerInfo;
      /* 0x003c */ class CStdIdentity* m_pStdID;
      /* 0x0040 */ struct ISurrogate* m_pISurrogate;
      /* 0x0044 */ struct HINSTANCE__* m_hCOMSVCS;
      /* 0x0048 */ struct IServicesSink* m_pServices;
      /* 0x004c */ void* m_hInitCompleted;
      /* 0x0050 */ void* m_hFusionContext;
      /* 0x0054 */ unsigned long m_ulServicesPing;
      /* 0x0058 */ unsigned long m_ulInitTimeout;
    }; /* size: 0x002c */
    struct
    {
      /* 0x0000 */ const int TIMEOUT_SERVICES;
      /* 0x005c */ long m_lProcessRefCount;
      /* 0x0060 */ struct _RTL_CRITICAL_SECTION m_timeoutLock;
      /* 0x0078 */ int m_bLockValid;
      /* 0x007c */ void* m_hTimeoutEvent;
      /* 0x0080 */ enum _TAG_UNNAMED_27 m_timeoutState;
      /* 0x0084 */ unsigned long m_cActivations;
      /* 0x0088 */ unsigned long m_cMillisecondsTilDeath;
      /* 0x008c */ unsigned long m_cTimeoutPeriod;
      /* 0x0090 */ int m_bPaused;
    }; /* size: 0x003c */
    struct
    {
      /* 0x0000 */ const int TIMEOUT_SPINLOCK;
      /* 0x0094 */ int m_bInitNotified;
    }; /* size: 0x0008 */
    /* 0x0000 */ const int MAX_SRV_NAME_LEN;
  }; /* size: 0x003c */
  /* 0x0098 */ void* m_hNTServiceThread;
  /* 0x009c */ void* m_hServiceStarted;
  /* 0x00a0 */ struct SERVICE_STATUS_HANDLE__* m_hNTServiceHandle;
  /* 0x00a4 */ struct _SERVICE_STATUS m_NTServiceStatus;
  /* 0x00c0 */ struct _RTL_CRITICAL_SECTION m_serviceStatusLock;
  /* 0x00d8 */ int m_fServiceStatusLockValid;
  /* 0x00dc */ wchar_t m_NTServiceName[256];
}; /* size: 0x02dc */

typedef enum _TAG_UNNAMED_27
{
  TIMEOUT_INACTIVE = 0,
  TIMEOUT_PENDING = 1,
  TIMEOUT_SUSPENDED = 2,
  TIMEOUT_HAPPENING = 3,
  TIMEOUT_FORCED_SHUTDOWN = 4,
} TAG_UNNAMED_27, *PTAG_UNNAMED_27;

class CSurrogatedObjectList
{
  /* 0x0000 */ struct IOleInPlaceActiveObject* _pInplaceObject;
  /* 0x0004 */ struct HWND__* _hWnd;
  /* 0x0008 */ class CSurrogatedObjectList* _pNext;
}; /* size: 0x000c */

class CSynchronizeContainer
{
  /* 0x0004 */ class CSCInnerUnknown _cInner;
  /* 0x0010 */ struct IUnknown* _pControl;
  /* 0x0014 */ unsigned long _lLast;
  /* 0x0018 */ void* _aEvent[63];
  /* 0x0114 */ struct ISynchronize* _aSync[63];
}; /* size: 0x0210 */

class CSystemException
{
  /* 0x0008 */ unsigned long _ulExcept;
}; /* size: 0x000c */

class CTSSet
{
  /* 0x0000 */ class CBasedTSetMemberPtr _ptsmHead;
}; /* size: 0x0004 */

class CThreadCheck
{
  /* 0x0000 */ unsigned long m_tid;
}; /* size: 0x0004 */

class CThreadStack
{
  /* 0x0000 */ unsigned long m_dwCurrentPageSize;
  /* 0x0004 */ unsigned int m_CurrentProcessDefaultStackCommit;
}; /* size: 0x0008 */

class CTmpMkEqBuf
{
  /* 0x0000 */ struct _MnkEqBuf _mkeqbuf;
  /* 0x0008 */ unsigned char _abData[2047];
}; /* size: 0x0808 */

class CTrackingCompositeMoniker
{
  /* 0x0004 */ class CCompositeMoniker* _pCCM;
}; /* size: 0x0008 */

class CTrackingFileMoniker
{
  /* 0x0004 */ class CFileMoniker* _pCFM;
}; /* size: 0x0008 */

class CTransactedStream
{
  /* 0x0068 */ unsigned __int64 _ulSize;
  /* 0x0070 */ class CBasedSStreamPtr _pssBase;
  /* 0x0074 */ unsigned long _sectLastUsed;
  /* 0x0078 */ class CDeltaList _dl;
  /* 0x0090 */ unsigned long _df;
  /* 0x0094 */ int _fBeginCommit;
  /* 0x0098 */ class CBasedDeltaListPtr _pdlOld;
  /* 0x00a0 */ unsigned __int64 _ulOldSize;
}; /* size: 0x00a8 */

class CTransactedTimeEntry
{
  /* 0x0000 */ struct _FILETIME _tt[3];
}; /* size: 0x0018 */

class CTry
{
  /* 0x0000 */ class CTry* _pPrevTry;
  /* 0x0004 */ int _StackTop;
}; /* size: 0x0008 */

class CUUIDHashTable
{
}; /* size: 0x0018 */

class CUnwindable
{
}; /* size: 0x0001 */

class CUpdate
{
  /* 0x0000 */ class CDfName _dfnCurrent;
  /* 0x0042 */ class CDfName _dfnOriginal;
  /* 0x0084 */ unsigned long _dl;
  /* 0x0088 */ unsigned long _dwFlags;
  /* 0x008c */ class CBasedTSetMemberPtr _ptsm;
  /* 0x0090 */ class CBasedUpdatePtr _pudNext;
  /* 0x0094 */ class CBasedUpdatePtr _pudPrev;
}; /* size: 0x0098 */

class CUpdateList
{
  /* 0x0000 */ class CBasedUpdatePtr _pudHead;
  /* 0x0004 */ class CBasedUpdatePtr _pudTail;
}; /* size: 0x0008 */

class CUrlMonWrapper
{
  /* 0x0004 */ long _cRef;
}; /* size: 0x0008 */

class CUserMarshalInfo
{
  /* 0x0000 */ long _RpcStatus;
  /* 0x0004 */ unsigned char* _pSuppliedBuffer;
  /* 0x0008 */ struct _NDR_USER_MARSHAL_INFO _MarshalInfo;
}; /* size: 0x0034 */

struct CVectBits
{
  /* 0x0000 */ unsigned short full : 1; /* bit position: 0 */
  /* 0x0002 */ unsigned short firstfree;
}; /* size: 0x0004 */

class CVerifierStackData
{
  /* 0x0000 */ struct _LIST_ENTRY m_listHead;
  /* 0x0008 */ unsigned long m_dwCount;
}; /* size: 0x000c */

struct CVerifierStackData::tagNode
{
  /* 0x0000 */ void** lpvStack;
  /* 0x0004 */ struct _LIST_ENTRY listEntry;
}; /* size: 0x000c */

class CVerifierTlsData
{
  /* 0x0000 */ class CVerifierStackData stackComInit;
  /* 0x000c */ class CVerifierStackData stackComUninit;
  /* 0x0018 */ class CVerifierStackData stackOLEInit;
  /* 0x0024 */ class CVerifierStackData stackOLEUninit;
  /* 0x0030 */ class CVerifierStackData stackEnterSWC;
  /* 0x003c */ class CVerifierStackData stackLeaveSWC;
}; /* size: 0x0048 */

class CVirtualUnwindable
{
}; /* size: 0x0004 */

class CWorldSecurityDescriptor
{
  /* 0x0000 */ struct _SECURITY_DESCRIPTOR _sd;
  /* 0x0014 */ unsigned long _acl[16];
}; /* size: 0x0054 */

class CWrappedDocFile
{
  /* 0x0064 */ unsigned long _df;
  /* 0x0068 */ class CBasedDocFilePtr _pdfBase;
  /* 0x006c */ class CUpdateList _ulChanged;
  /* 0x0074 */ class CUpdateList _ulChangedHolder;
  /* 0x007c */ class CUpdateList _ulChangedOld;
  /* 0x0084 */ class CTSSet _tssDeletedHolder;
  /* 0x0088 */ class CTransactedTimeEntry _tten;
  /* 0x00a0 */ class CBasedPubDocFilePtr _ppubdf;
  /* 0x00a4 */ struct _GUID _clsid;
  /* 0x00b4 */ unsigned long _grfStateBits;
  /* 0x00b8 */ const class CBasedDFBasisPtr _pdfb;
  /* 0x00bc */ unsigned short _fDirty;
  /* 0x00be */ unsigned char _fBeginCommit;
}; /* size: 0x00c0 */

class CallFrame
{
  /* 0x000c */ struct MD_METHOD* m_pmd;
  /* 0x0010 */ void* m_pvArgs;
  /* 0x0014 */ int m_fIsCopy;
  /* 0x0018 */ int m_fIsUnmarshal;
  /* 0x001c */ int m_hrReturnValue;
  /* 0x0020 */ void* m_pvMemCur;
  /* 0x0024 */ void* m_pvArgsSrc;
  /* 0x0028 */ class Interceptor* m_pInterceptor;
  /* 0x002c */ int m_fPropogatingOutParam;
  /* 0x0030 */ int m_fWorkingOnInParam;
  /* 0x0034 */ int m_fWorkingOnOutParam;
  /* 0x0038 */ class CallFrame* m_pAllocatorFrame;
  /* 0x003c */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0040 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0044 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0048 */ unsigned char* m_StackTop;
  /* 0x004c */ unsigned char* m_Memory;
  /* 0x0050 */ unsigned long m_MaxCount;
  /* 0x0054 */ unsigned long m_Offset;
  /* 0x0058 */ unsigned long m_ActualCount;
  /* 0x005c */ struct ARRAY_INFO* m_pArrayInfo;
  /* 0x0060 */ long m_refs;
  /* 0x0064 */ unsigned char m_pvMem[256];
  /* 0x0164 */ int m_fCanUseBuffer;
  /* 0x0168 */ struct tagBLOB m_blobBuffer;
  /* 0x0170 */ int m_fWeOwnBlobBuffer;
}; /* size: 0x0174 */

typedef enum _TAG_UNNAMED_28
{
  CB_PRIVATE_BUFFER = 256,
} TAG_UNNAMED_28, *PTAG_UNNAMED_28;

class CarefulBufferReader
{
  /* 0x0000 */ unsigned char* pBuffer;
  /* 0x0004 */ unsigned int cbBuffer;
}; /* size: 0x0008 */

struct ClassMonikerData
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long cbExtra;
}; /* size: 0x0014 */

class ClassRegistration
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long serverType;
  /* 0x0014 */ struct HINSTANCE__* hModule;
  /* 0x0018 */ const wchar_t* className;
  /* 0x001c */ const wchar_t* progID;
  /* 0x0020 */ const wchar_t* versionIndependentProgID;
  /* 0x0024 */ const wchar_t* threadingModel;
  /* 0x0028 */ struct _GUID appid;
  /* 0x0038 */ struct _GUID moduleid;
  /* 0x0048 */ int fCreateService;
}; /* size: 0x004c */

enum ClassRegistration::SERVER_TYPE
{
  INPROC_SERVER = 1,
  LOCAL_SERVER = 4,
  INPROC_HANDLER = 2,
  SERVER_TYPE_NONE = 0,
};

struct CleanupStack
{
  /* 0x0000 */ struct CleanupStack::Block m_first;
  /* 0x00ac */ struct CleanupStack::Block* m_last;
}; /* size: 0x00b0 */

struct CleanupStack::Block
{
  /* 0x0000 */ struct CleanupStack::memory_to_free mem[20];
  /* 0x00a0 */ unsigned long count;
  /* 0x00a4 */ struct CleanupStack::Block* prev;
  /* 0x00a8 */ struct CleanupStack::Block* next;
}; /* size: 0x00ac */

struct CleanupStack::memory_to_free
{
  /* 0x0000 */ void* pvMemory;
  /* 0x0004 */ class PMemoryAllocator* pAllocator;
}; /* size: 0x0008 */

class CoAllocator
{
}; /* size: 0x0004 */

class ComPsClassFactory
{
  /* 0x0008 */ long m_crefs;
  /* 0x000c */ struct IPSFactoryBuffer* m_pDelegatee;
  /* 0x0010 */ const struct tagProxyFileInfo** m_pProxyFileList;
}; /* size: 0x0014 */

class ComVerifierSettings
{
  union
  {
    /* 0x0000 */ int s_fComVerifierEnabled;
    /* 0x0000 */ int s_fEnableDllMainChecks;
    /* 0x0000 */ int s_fEnableBreakOnException;
    /* 0x0000 */ int s_fEnableVerifyLocks;
    /* 0x0000 */ int s_fEnableVerifyThreadState;
    /* 0x0000 */ int s_fEnableVerifySecurity;
    /* 0x0000 */ int s_fEnableVerifyProxies;
    /* 0x0000 */ int s_fEnableVerifyClassFactory;
    /* 0x0000 */ int s_fEnableObjectTracking;
    /* 0x0000 */ int s_fEnableVTBLTracking;
    /* 0x0000 */ int s_fUseSlowStackTraces;
    /* 0x0000 */ int s_fPgAllocUseSystemHeap;
    /* 0x0000 */ int s_fPgAllocHeapIsPrivate;
    /* 0x0000 */ struct IStackWalker* s_pStackWalker;
    /* 0x0000 */ class ComVerifierSettings s_singleton;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct CompObjHdr
{
  /* 0x0000 */ unsigned long m_dwFirstDword;
  /* 0x0004 */ unsigned long m_dwOSVer;
  /* 0x0008 */ unsigned long m_unused;
  /* 0x000c */ struct _GUID m_clsClass;
}; /* size: 0x001c */

class CompObjStmData
{
  /* 0x0000 */ struct CompObjHdr m_hdr;
  /* 0x001c */ unsigned long m_cchUserType;
  /* 0x0020 */ unsigned long m_cchProgID;
  /* 0x0024 */ unsigned long m_dwFormatTag;
  /* 0x0028 */ unsigned long m_ulFormatID;
  /* 0x002c */ wchar_t* m_pszOUserType;
  /* 0x0030 */ wchar_t* m_pszOProgID;
  /* 0x0034 */ char* m_pszAUserType;
  /* 0x0038 */ char* m_pszAProgID;
  /* 0x003c */ enum TXTTYPE ttClipString;
}; /* size: 0x0040 */

class ContextInfo
{
  /* 0x0018 */ struct tagActivationContextInfoData _contextInfoData;
  /* 0x0030 */ struct _GUID _ctxOverride;
  /* 0x0040 */ class CObjectContext* _pClientCtx;
  /* 0x0044 */ class CObjectContext* _pPrototypeCtx;
  /* 0x0048 */ int _toReleaseIFD;
}; /* size: 0x004c */

class CpUnkList
{
  /* 0x0000 */ struct pUnkListElement* _head;
  /* 0x0004 */ class CMutexSem2 _mutex;
}; /* size: 0x0020 */

enum CreateStackTraceFlags
{
  CREATESTACKTRACE_ONLYADDRESSES = 1,
};

class CsCatInfo
{
  /* 0x0004 */ unsigned long m_uRefs;
  /* 0x0008 */ unsigned long m_cCalls;
  /* 0x000c */ struct ICatInformation** m_pICatInfo;
  /* 0x0010 */ unsigned long m_cICatInfo;
  /* 0x0014 */ struct HINSTANCE__* m_hInstCstore;
}; /* size: 0x0018 */

class CtxEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CtxEntry* _pNext;
      /* 0x0004 */ class CtxEntry* _pFree;
      /* 0x0008 */ unsigned long _cRefs;
      /* 0x000c */ class CContextLife* _pLife;
      /* 0x0010 */ class CPolicySet* _pPS;
      /* 0x0014 */ class CObjectContext* _pServerCtx;
    }; /* size: 0x0018 */
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ class COleStaticMutexSem s_allocLock;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cEntries;
  }; /* size: 0x0040 */
}; /* size: 0x0018 */

enum DCOM_ENDPOINT_FLAGS
{
  fUseInternetPorts = 1,
};

struct DDEADVISE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short reserved : 14; /* bit position: 0 */
    /* 0x0000 */ unsigned short fDeferUpd : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
}; /* size: 0x0004 */

struct DDEDATA
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short fResponse : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short reserved : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

struct DDEPOKE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 13; /* bit position: 0 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short fReserved : 2; /* bit position: 14 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

class DDE_CHANNEL
{
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ struct HWND__* hwndCli;
  /* 0x0010 */ struct HWND__* hwndSvr;
  /* 0x0014 */ int bTerminating;
  /* 0x0018 */ int iExtraTerms;
  /* 0x001c */ unsigned short wTimer;
  /* 0x0020 */ unsigned long dwStartTickCount;
  /* 0x0024 */ unsigned short msgFirst;
  /* 0x0026 */ unsigned short msgLast;
  /* 0x0028 */ struct HWND__* msghwnd;
  /* 0x002c */ int fRejected;
  /* 0x0030 */ unsigned short wMsg;
  /* 0x0034 */ long lParam;
  /* 0x0038 */ int iAwaitAck;
  /* 0x003c */ HRESULT hres;
  /* 0x0040 */ void* hopt;
  /* 0x0044 */ void* hDdePoke;
  /* 0x0048 */ void* hCommands;
  /* 0x004c */ unsigned short wChannelDeleted;
  /* 0x0050 */ struct tagDDECALLDATA* pCD;
  /* 0x0054 */ enum tagSERVERCALLEX CallState;
  /* 0x0058 */ int bFreedhopt;
}; /* size: 0x005c */

enum DDE_DISPATCH_FUNC
{
  DDE_DISP_SENDONDATACHANGE = 1,
  DDE_DISP_OLECALLBACK = 2,
  DDE_DISP_SRVRWNDPROC = 3,
  DDE_DISP_DOCWNDPROC = 4,
};

enum DECOLOR
{
  DE_RED = 0,
  DE_BLACK = 1,
};

struct DELETE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ unsigned long DeleteFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

enum DIRENTRYOP
{
  DEOP_FIND = 0,
  DEOP_REMOVE = 1,
};

struct DISABLED_FEATURES
{
  /* 0x0000 */ int fDisableAll;
  /* 0x0004 */ int fDisableTypelibs;
  /* 0x0008 */ int fDisableDispatch;
  /* 0x000c */ int fDisableAllForOle32;
  /* 0x0010 */ int fDisableDispatchForOle32;
}; /* size: 0x0014 */

struct DISPATCH_CLIENT_FRAME
{
  /* 0x0030 */ int m_fDoneProxyPrecheck;
  /* 0x0034 */ int m_fIsCopy;
  /* 0x0038 */ struct FRAME_RemoteInvoke m_remoteFrame;
  /* 0x0068 */ struct tagDISPPARAMS m_dispParams;
  /* 0x0078 */ struct tagVARIANT m_varResult;
  /* 0x0088 */ struct tagEXCEPINFO m_excepInfo;
  /* 0x00a8 */ unsigned int m_uArgErr;
  /* 0x00ac */ unsigned int m_aVarRefIdx[16];
  /* 0x00f0 */ struct tagVARIANT m_aVarRef[16];
  /* 0x01f0 */ struct tagVARIANT m_aVarArg[16];
  /* 0x02f0 */ unsigned char* m_pBuffer;
  /* 0x02f4 */ long __PADDING__[1];
}; /* size: 0x02f8 */

struct DISPATCH_FRAME
{
}; /* size: 0x002c */

struct DISPATCH_INTERCEPTOR
{
}; /* size: 0x0078 */

struct DISPATCH_SERVER_FRAME
{
  /* 0x0030 */ struct FRAME_Invoke m_memoryFrame;
  /* 0x0054 */ int m_fDoneStubPrecheck;
  /* 0x0058 */ int m_fDoneStubPostcheck;
}; /* size: 0x005c */

struct DLGITEMTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ short x;
  /* 0x000a */ short y;
  /* 0x000c */ short cx;
  /* 0x000e */ short cy;
  /* 0x0010 */ unsigned short id;
}; /* size: 0x0012 */

struct DLGTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ unsigned short cdit;
  /* 0x000a */ short x;
  /* 0x000c */ short y;
  /* 0x000e */ short cx;
  /* 0x0010 */ short cy;
}; /* size: 0x0012 */

struct DLL_INSTANTIATION_PROPERTIES
{
  /* 0x0000 */ wchar_t _pzDllPath[261];
  /* 0x020c */ unsigned long _dwThreadingModel;
  /* 0x0210 */ unsigned long _dwFlags;
  /* 0x0214 */ unsigned long _dwHash;
  /* 0x0218 */ unsigned long _dwContext;
  /* 0x021c */ class CClassCache::CDllClassEntry* _pDCE;
}; /* size: 0x0220 */

enum DLL_INSTANTIATION_PROPERTIES::eFlags
{
  fSIXTEEN_BIT = 1,
  fIS_OLE32 = 8,
  fIS_COMSVCS_CLSID = 16,
};

struct DVTDINFO
{
  /* 0x0000 */ unsigned int cbConvertSize;
  /* 0x0004 */ unsigned int cchDrvName;
  /* 0x0008 */ unsigned int cchDevName;
  /* 0x000c */ unsigned int cchPortName;
}; /* size: 0x0010 */

struct DedicatedAllocator<CallFrame>
{
  union
  {
    /* 0x0000 */ class CallFrame* pNext;
    /* 0x0000 */ struct IFastStack<CallFrame>* g_pStack;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>
{
  union
  {
    /* 0x0000 */ struct DISPATCH_CLIENT_FRAME* pNext;
    /* 0x0000 */ struct IFastStack<DISPATCH_CLIENT_FRAME>* g_pStack;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct DedicatedAllocator<DISPATCH_SERVER_FRAME>
{
  union
  {
    /* 0x0000 */ struct DISPATCH_SERVER_FRAME* pNext;
    /* 0x0000 */ struct IFastStack<DISPATCH_SERVER_FRAME>* g_pStack;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

class DefaultIBindStatusCallback
{
  /* 0x0010 */ struct IBindStatusCallback* m_pibsc;
  /* 0x0014 */ long m_lRef;
  /* 0x0018 */ struct IBinding* m_pBinding;
  /* 0x001c */ struct HWND__* m_hwndParent;
  /* 0x0020 */ struct HWND__* m_hDlg;
  /* 0x0024 */ unsigned long m_ulProgress;
  /* 0x0028 */ unsigned long m_ulProgressMax;
  /* 0x002c */ wchar_t m_szStatusText[260];
  /* 0x0234 */ int m_fShown;
}; /* size: 0x0238 */

struct DelayLoadInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ const struct ImgDelayDescrV2* pidd;
  /* 0x0008 */ void** ppfn /* function */;
  /* 0x000c */ const char* szDll;
  /* 0x0010 */ struct DelayLoadProc dlp;
  /* 0x0018 */ struct HINSTANCE__* hmodCur;
  /* 0x001c */ void* pfnCur /* function */;
  /* 0x0020 */ unsigned long dwLastError;
}; /* size: 0x0024 */

struct DelayLoadProc
{
  /* 0x0000 */ int fImportByName;
  union
  {
    /* 0x0004 */ const char* szProcName;
    /* 0x0004 */ unsigned long dwOrdinal;
  }; /* size: 0x0004 */
}; /* size: 0x0008 */

class DeserializeHelper
{
  union
  {
    struct
    {
      /* 0x0000 */ class PMemoryAllocator* c_pMA;
      /* 0x0004 */ unsigned int m_Flags;
      /* 0x0008 */ unsigned long c_cbAlloc;
      /* 0x000c */ struct CleanupStack c_cleanupStack;
      /* 0x00bc */ int m_fIndirect;
      /* 0x00c0 */ unsigned int m_CodePage;
      union
      {
        /* 0x00c8 */ struct tagPROPVARIANT m_pvDummy;
        /* 0x00c8 */ struct tagCLIPDATA m_clipdataDummy;
      }; /* size: 0x0010 */
    }; /* size: 0x00d4 */
    /* 0x0000 */ class DeserializeHelper::SafeArrayDestroyer c_saDestroyer;
    /* 0x0000 */ class DeserializeHelper::BstrDestroyer c_bstrDestroyer;
  }; /* size: 0x00d4 */
}; /* size: 0x00d8 */

class DeserializeHelper::BstrDestroyer
{
}; /* size: 0x0004 */

class DeserializeHelper::SafeArrayDestroyer
{
}; /* size: 0x0004 */

enum EChannelState
{
  client_cs = 1,
  proxy_cs = 2,
  server_cs = 4,
  freethreaded_cs = 8,
  process_local_cs = 32,
  locked_cs = 64,
  neutral_cs = 256,
  fake_async_cs = 512,
  app_security_cs = 1024,
  thread_local_cs = 2048,
};

struct EFFICIENTOSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ unsigned short wServicePackMajor;
  /* 0x0016 */ unsigned short wServicePackMinor;
  /* 0x0018 */ unsigned short wSuiteMask;
  /* 0x001a */ unsigned char wProductType;
  /* 0x001b */ unsigned char wReserved;
  /* 0x001c */ wchar_t szCSDVersion[128];
}; /* size: 0x011c */

enum EHandleState
{
  allow_hs = 1,
  deny_hs = 2,
  static_cloaking_hs = 4,
  dynamic_cloaking_hs = 8,
  any_cloaking_hs = 12,
  process_local_hs = 16,
  machine_local_hs = 32,
  app_security_hs = 64,
};

struct ENTRY
{
  /* 0x0000 */ const wchar_t* sz;
  /* 0x0004 */ const struct _GUID* pclsid;
}; /* size: 0x0008 */

enum EServerSecurity
{
  SS_PROCESS_LOCAL = 1,
  SS_CALL_DONE = 2,
  SS_WAS_IMPERSONATING = 4,
};

enum ESignalState
{
  none_ss = 0,
  pending_ss = 1,
  signaled_ss = 2,
  failed_ss = 3,
};

class EVENT
{
  /* 0x0000 */ void* m_hEvent;
}; /* size: 0x0004 */

struct EXECUTEACK
{
  /* 0x0000 */ int f;
  /* 0x0004 */ void* hdata;
  /* 0x0008 */ struct HWND__* hwndFrom;
  /* 0x000c */ struct HWND__* hwndTo;
}; /* size: 0x0010 */

class Enum
{
}; /* size: 0x0004 */

class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0004 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0008 */ class CLinkable* m_pLinkable;
}; /* size: 0x000c */

class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0004 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0008 */ class CLinkable* m_pLinkable;
}; /* size: 0x000c */

struct EnumVerbCache
{
  /* 0x0000 */ class CEnumVerb* pEnum;
}; /* size: 0x0004 */

struct ErrorObjectData
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwHelpContext;
  /* 0x0008 */ struct _GUID iid;
}; /* size: 0x0018 */

class EventPoolEntry
{
  union
  {
    /* 0x0000 */ struct CRWLock::EventState _eventState;
    struct
    {
      /* 0x0000 */ volatile unsigned long _dwEventState;
      /* 0x0004 */ volatile int _bReaderSignaled;
      /* 0x0008 */ void* _hReaderEvent;
      /* 0x000c */ struct _SINGLE_LIST_ENTRY _listEntry;
      /* 0x0010 */ void* _hWriterEvent;
      /* 0x0014 */ volatile unsigned long _dwSpinningWriterID;
    }; /* size: 0x0018 */
    /* 0x0000 */ union _SLIST_HEADER s_eventPool;
    /* 0x0000 */ union EventPoolEntry::InitState s_initState;
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

union EventPoolEntry::InitState
{
  union
  {
    /* 0x0000 */ volatile unsigned long _ulInitState;
    struct /* bitfield */
    {
      /* 0x0000 */ volatile unsigned long _ulNumInitedRWThreads : 14; /* bit position: 0 */
      /* 0x0000 */ volatile unsigned long _ulNumInitedRWLocks : 18; /* bit position: 14 */
    }; /* bitfield */
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

enum EventPoolEntry::WaitForWriterEvent::__l2::AnyAbsorbtionState
{
  NONE = 0,
  ABSORBED = 1,
  RELEIVED = 2,
};

enum ExtentKeys
{
  mnk_MAC = 1,
  mnk_DFS = 2,
  mnk_UNICODE = 3,
  mnk_MacPathName = 4,
  mnk_ShellLink = 5,
  mnk_TrackingInformation = 6,
};

struct FILE_ID_DESCRIPTOR
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ enum _FILE_ID_TYPE Type;
  union
  {
    /* 0x0008 */ union _LARGE_INTEGER FileId;
    /* 0x0008 */ struct _GUID ObjectId;
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

struct FIND_BY_SID_DATA
{
  /* 0x0000 */ unsigned long Restart;
  /* 0x0004 */ struct _SID Sid;
}; /* size: 0x0010 */

struct FIND_BY_SID_OUTPUT
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

struct FLASHWINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned int uCount;
  /* 0x0010 */ unsigned long dwTimeout;
}; /* size: 0x0014 */

struct FMT
{
  /* 0x0000 */ unsigned short cf;
  /* 0x0004 */ unsigned long dw;
}; /* size: 0x0008 */

struct FMTCACHE
{
  /* 0x0000 */ struct tagFORMATETC fmt;
  /* 0x0014 */ unsigned long dwAspects;
  /* 0x0018 */ int fUseMe;
}; /* size: 0x001c */

struct FORMATETCDATA
{
  /* 0x0000 */ struct tagFORMATETC _FormatEtc;
  /* 0x0014 */ int fSaveOnFlush;
  /* 0x0018 */ unsigned long dwReserved1;
  /* 0x001c */ unsigned long dwReserved2;
}; /* size: 0x0020 */

struct FORMATETCDATA64
{
  /* 0x0000 */ struct tagFORMATETC64 _FormatEtc;
  /* 0x0020 */ int fSaveOnFlush;
  /* 0x0024 */ unsigned long dwReserved1;
  /* 0x0028 */ unsigned long dwReserved2;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct FORMATETCDATAARRAY
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA _FormatEtcData[1];
}; /* size: 0x0038 */

struct FORMATETCDATAARRAY64
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA64 _FormatEtcData[1];
}; /* size: 0x0048 */

enum FORMATTAG
{
  ftagNone = 0,
  ftagClipFormat = 1,
  ftagString = 2,
};

enum FORMAT_CHARACTER
{
  FC_ZERO = 0,
  FC_BYTE = 1,
  FC_CHAR = 2,
  FC_SMALL = 3,
  FC_USMALL = 4,
  FC_WCHAR = 5,
  FC_SHORT = 6,
  FC_USHORT = 7,
  FC_LONG = 8,
  FC_ULONG = 9,
  FC_FLOAT = 10,
  FC_HYPER = 11,
  FC_DOUBLE = 12,
  FC_ENUM16 = 13,
  FC_ENUM32 = 14,
  FC_IGNORE = 15,
  FC_ERROR_STATUS_T = 16,
  FC_RP = 17,
  FC_UP = 18,
  FC_OP = 19,
  FC_FP = 20,
  FC_STRUCT = 21,
  FC_PSTRUCT = 22,
  FC_CSTRUCT = 23,
  FC_CPSTRUCT = 24,
  FC_CVSTRUCT = 25,
  FC_BOGUS_STRUCT = 26,
  FC_CARRAY = 27,
  FC_CVARRAY = 28,
  FC_SMFARRAY = 29,
  FC_LGFARRAY = 30,
  FC_SMVARRAY = 31,
  FC_LGVARRAY = 32,
  FC_BOGUS_ARRAY = 33,
  FC_C_CSTRING = 34,
  FC_C_BSTRING = 35,
  FC_C_SSTRING = 36,
  FC_C_WSTRING = 37,
  FC_CSTRING = 38,
  FC_BSTRING = 39,
  FC_SSTRING = 40,
  FC_WSTRING = 41,
  FC_ENCAPSULATED_UNION = 42,
  FC_NON_ENCAPSULATED_UNION = 43,
  FC_BYTE_COUNT_POINTER = 44,
  FC_TRANSMIT_AS = 45,
  FC_REPRESENT_AS = 46,
  FC_IP = 47,
  FC_BIND_CONTEXT = 48,
  FC_BIND_GENERIC = 49,
  FC_BIND_PRIMITIVE = 50,
  FC_AUTO_HANDLE = 51,
  FC_CALLBACK_HANDLE = 52,
  FC_UNUSED1 = 53,
  FC_POINTER = 54,
  FC_ALIGNM2 = 55,
  FC_ALIGNM4 = 56,
  FC_ALIGNM8 = 57,
  FC_UNUSED2 = 58,
  FC_UNUSED3 = 59,
  FC_UNUSED4 = 60,
  FC_STRUCTPAD1 = 61,
  FC_STRUCTPAD2 = 62,
  FC_STRUCTPAD3 = 63,
  FC_STRUCTPAD4 = 64,
  FC_STRUCTPAD5 = 65,
  FC_STRUCTPAD6 = 66,
  FC_STRUCTPAD7 = 67,
  FC_STRING_SIZED = 68,
  FC_UNUSED5 = 69,
  FC_NO_REPEAT = 70,
  FC_FIXED_REPEAT = 71,
  FC_VARIABLE_REPEAT = 72,
  FC_FIXED_OFFSET = 73,
  FC_VARIABLE_OFFSET = 74,
  FC_PP = 75,
  FC_EMBEDDED_COMPLEX = 76,
  FC_IN_PARAM = 77,
  FC_IN_PARAM_BASETYPE = 78,
  FC_IN_PARAM_NO_FREE_INST = 79,
  FC_IN_OUT_PARAM = 80,
  FC_OUT_PARAM = 81,
  FC_RETURN_PARAM = 82,
  FC_RETURN_PARAM_BASETYPE = 83,
  FC_DEREFERENCE = 84,
  FC_DIV_2 = 85,
  FC_MULT_2 = 86,
  FC_ADD_1 = 87,
  FC_SUB_1 = 88,
  FC_CALLBACK = 89,
  FC_CONSTANT_IID = 90,
  FC_END = 91,
  FC_PAD = 92,
  FC_EXPR = 93,
  FC_PARTIAL_IGNORE_PARAM = 94,
  FC_SPLIT_DEREFERENCE = 116,
  FC_SPLIT_DIV_2 = 117,
  FC_SPLIT_MULT_2 = 118,
  FC_SPLIT_ADD_1 = 119,
  FC_SPLIT_SUB_1 = 120,
  FC_SPLIT_CALLBACK = 121,
  FC_FORCED_BOGUS_STRUCT = 177,
  FC_TRANSMIT_AS_PTR = 178,
  FC_REPRESENT_AS_PTR = 179,
  FC_USER_MARSHAL = 180,
  FC_PIPE = 181,
  FC_SUPPLEMENT = 182,
  FC_RANGE = 183,
  FC_INT3264 = 184,
  FC_UINT3264 = 185,
  FC_CSARRAY = 186,
  FC_CS_TAG = 187,
  FC_STRUCTPADN = 188,
  FC_UNUSED7 = 189,
  FC_UNUSED8 = 190,
  FC_UNUSED9 = 191,
  FC_UNUSED10 = 192,
  FC_BUFFER_ALIGN = 193,
  FC_INT128 = 194,
  FC_UINT128 = 195,
  FC_FLOAT80 = 196,
  FC_FLOAT128 = 197,
  FC_END_OF_UNIVERSE = 198,
};

struct FRAME_GetIDsOfNames
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0004 */ const struct _GUID& riid;
  /* 0x0008 */ wchar_t** rgszNames;
  /* 0x000c */ unsigned int cNames;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ long* rgDispId;
}; /* size: 0x0018 */

struct FRAME_GetTypeInfo
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0004 */ unsigned int iTInfo;
  /* 0x0008 */ unsigned long lcid;
  /* 0x000c */ struct ITypeInfo** ppTInfo;
}; /* size: 0x0010 */

struct FRAME_GetTypeInfoCount
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0004 */ unsigned int* pctinfo;
}; /* size: 0x0008 */

struct FRAME_Invoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0004 */ long dispIdMember;
  /* 0x0008 */ struct _GUID* piid;
  /* 0x000c */ unsigned long lcid;
  /* 0x0010 */ unsigned short wFlags;
  /* 0x0014 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0018 */ struct tagVARIANT* pVarResult;
  /* 0x001c */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0020 */ unsigned int* puArgErr;
}; /* size: 0x0024 */

struct FRAME_RemoteInvoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0004 */ long dispIdMember;
  /* 0x0008 */ struct _GUID* piid;
  /* 0x000c */ unsigned long lcid;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0018 */ struct tagVARIANT* pVarResult;
  /* 0x001c */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0020 */ unsigned int* puArgErr;
  /* 0x0024 */ unsigned int cVarRef;
  /* 0x0028 */ unsigned int* rgVarRefIdx;
  /* 0x002c */ struct tagVARIANT* rgVarRef;
}; /* size: 0x0030 */

union FT
{
  union
  {
    /* 0x0000 */ unsigned __int64 ft_scalar;
    /* 0x0000 */ struct _FILETIME ft_struct;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

enum FormatMatchFlag
{
  FORMAT_NOTFOUND = 1,
  FORMAT_BADMATCH = 2,
  FORMAT_GOODMATCH = 4,
};

enum FreeResourcesFlags
{
  RESET_AND_FREE = 1,
  JUST_RESET = 2,
};

class GenericInstantiator<DISPATCH_INTERCEPTOR>
{
}; /* size: 0x0001 */

class GenericStream
{
  /* 0x0008 */ long _clRefs;
  /* 0x000c */ long _lOffset;
  /* 0x0010 */ long _cbDataSize;
  /* 0x0014 */ unsigned long _cbBufferSize;
  /* 0x0018 */ struct tagInterfaceData* _pifData;
  /* 0x001c */ int _fFree;
  /* 0x0020 */ unsigned long _copyAlignment;
}; /* size: 0x0024 */

struct HACCEL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HAS_INTERFACES
{
  /* 0x0000 */ long m_cInterfaces;
}; /* size: 0x0004 */

struct HBITMAP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HBRUSH__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HCOLORSPACE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HCONVLIST__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HCONV__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HDC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HDDEDATA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HDESK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HDROP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HENHMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HFONT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HGLRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HICON__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HIMCC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HIMC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HINSTANCE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HKL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HMACSHA_CTX
{
  /* 0x0000 */ struct A_SHA_CTX context_ipad;
  /* 0x005c */ struct A_SHA_CTX context_opad;
}; /* size: 0x00b8 */

struct HMAPKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HMENU__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HMONITOR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HPALETTE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HPEN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HRAWINPUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HREG
{
  /* 0x0000 */ void* h;
}; /* size: 0x0004 */

struct HRGN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HRSRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HSPRITE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HSTR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HSZ__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HTASK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HUMPD__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HWINEVENTHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HWINSTA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HWND__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class HashGUID
{
}; /* size: 0x0001 */

class HashInt
{
}; /* size: 0x0001 */

class HashVoidPtr
{
}; /* size: 0x0001 */

class HashWSTR
{
}; /* size: 0x0001 */

struct IAbandonmentNotification
{
}; /* size: 0x0004 */

struct IAccessControl
{
}; /* size: 0x0004 */

struct IActivationContextInfo
{
}; /* size: 0x0004 */

struct IActivationPropOutClean
{
}; /* size: 0x0004 */

struct IActivationProperties
{
}; /* size: 0x0004 */

struct IActivationPropertiesIn
{
}; /* size: 0x0004 */

struct IActivationPropertiesOut
{
}; /* size: 0x0004 */

struct IActivationSecurityInfo
{
}; /* size: 0x0004 */

struct IActivationStageInfo
{
}; /* size: 0x0004 */

struct IAddrExclusionControl
{
}; /* size: 0x0004 */

struct IAddrTrackingControl
{
}; /* size: 0x0004 */

struct IAdviseSink
{
}; /* size: 0x0004 */

struct IAdviseSink2
{
}; /* size: 0x0004 */

struct IAdviseSink2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* OnDataChange /* function */;
  /* 0x0010 */ void* OnViewChange /* function */;
  /* 0x0014 */ void* OnRename /* function */;
  /* 0x0018 */ void* OnSave /* function */;
  /* 0x001c */ void* OnClose /* function */;
  /* 0x0020 */ void* OnLinkSrcChange /* function */;
}; /* size: 0x0024 */

struct IAdviseSinkEx
{
}; /* size: 0x0004 */

struct IAdviseSinkVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* OnDataChange /* function */;
  /* 0x0010 */ void* OnViewChange /* function */;
  /* 0x0014 */ void* OnRename /* function */;
  /* 0x0018 */ void* OnSave /* function */;
  /* 0x001c */ void* OnClose /* function */;
}; /* size: 0x0020 */

struct IAggregator
{
}; /* size: 0x0004 */

struct IAsyncManager
{
}; /* size: 0x0004 */

struct IAsyncRpcChannelBuffer
{
}; /* size: 0x0004 */

struct IAuthenticate
{
}; /* size: 0x0004 */

struct IBindCtx
{
}; /* size: 0x0004 */

struct IBindCtxVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* RegisterObjectBound /* function */;
  /* 0x0010 */ void* RevokeObjectBound /* function */;
  /* 0x0014 */ void* ReleaseBoundObjects /* function */;
  /* 0x0018 */ void* SetBindOptions /* function */;
  /* 0x001c */ void* GetBindOptions /* function */;
  /* 0x0020 */ void* GetRunningObjectTable /* function */;
  /* 0x0024 */ void* RegisterObjectParam /* function */;
  /* 0x0028 */ void* GetObjectParam /* function */;
  /* 0x002c */ void* EnumObjectParam /* function */;
  /* 0x0030 */ void* RevokeObjectParam /* function */;
}; /* size: 0x0034 */

struct IBindHost
{
}; /* size: 0x0004 */

struct IBindProtocol
{
}; /* size: 0x0004 */

struct IBindStatusCallback
{
}; /* size: 0x0004 */

struct IBinding
{
}; /* size: 0x0004 */

struct IBlockingLock
{
}; /* size: 0x0004 */

struct IBuffer
{
}; /* size: 0x0004 */

struct ICacheControl
{
}; /* size: 0x0004 */

struct ICacheRefresh
{
}; /* size: 0x0004 */

struct ICall
{
}; /* size: 0x0004 */

struct ICallFactory
{
}; /* size: 0x0004 */

struct ICallFactoryVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* CreateCall /* function */;
}; /* size: 0x0010 */

struct ICallFrame
{
}; /* size: 0x0004 */

struct ICallFrameEvents
{
}; /* size: 0x0004 */

struct ICallFrameInit
{
}; /* size: 0x0004 */

struct ICallFrameWalker
{
}; /* size: 0x0004 */

struct ICallIndirect
{
}; /* size: 0x0004 */

struct ICallInfo
{
}; /* size: 0x0004 */

struct ICallInterceptor
{
}; /* size: 0x0004 */

struct ICallUnmarshal
{
}; /* size: 0x0004 */

struct ICancelMethodCalls
{
}; /* size: 0x0004 */

struct ICatInformation
{
}; /* size: 0x0004 */

struct ICatRegister
{
}; /* size: 0x0004 */

struct ICatalogFileInfo
{
}; /* size: 0x0004 */

struct IChannelHook
{
}; /* size: 0x0004 */

struct IClassActivator
{
}; /* size: 0x0004 */

struct IClassClassicInfo
{
}; /* size: 0x0004 */

struct IClassClassicInfo2
{
}; /* size: 0x0004 */

struct IClassClassicInfo3
{
}; /* size: 0x0004 */

struct IClassFactory
{
}; /* size: 0x0004 */

struct IClassFactory2
{
}; /* size: 0x0004 */

struct IClassFactoryVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* CreateInstance /* function */;
  /* 0x0010 */ void* LockServer /* function */;
}; /* size: 0x0014 */

struct IClientSecurity
{
}; /* size: 0x0004 */

struct ICodeInstall
{
}; /* size: 0x0004 */

struct IComCatalog
{
}; /* size: 0x0004 */

struct IComCatalog2
{
}; /* size: 0x0004 */

struct IComCatalog2Internal
{
}; /* size: 0x0004 */

struct IComCatalogInternal
{
}; /* size: 0x0004 */

struct IComCatalogLocation
{
}; /* size: 0x0004 */

struct IComCatalogSCM
{
}; /* size: 0x0004 */

struct IComCatalogSettings
{
}; /* size: 0x0004 */

struct IComClassInfo
{
}; /* size: 0x0004 */

struct IComClassInfo2
{
}; /* size: 0x0004 */

struct IComDispatchInfo
{
}; /* size: 0x0004 */

struct IComObjIdentity
{
}; /* size: 0x0004 */

struct IComProcessInfo
{
}; /* size: 0x0004 */

struct IComProcessInfo2
{
}; /* size: 0x0004 */

struct IComProcessInfo3
{
}; /* size: 0x0004 */

struct IComServices
{
}; /* size: 0x0004 */

struct IComServices2
{
}; /* size: 0x0004 */

struct IComSxSClassInfo
{
}; /* size: 0x0004 */

struct IComThreadingInfo
{
}; /* size: 0x0004 */

struct IConnectionPoint
{
}; /* size: 0x0004 */

struct IConnectionPointContainer
{
}; /* size: 0x0004 */

struct IConnectionPointContainerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* EnumConnectionPoints /* function */;
  /* 0x0010 */ void* FindConnectionPoint /* function */;
}; /* size: 0x0014 */

struct IConnectionPointVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetConnectionInterface /* function */;
  /* 0x0010 */ void* GetConnectionPointContainer /* function */;
  /* 0x0014 */ void* Advise /* function */;
  /* 0x0018 */ void* Unadvise /* function */;
  /* 0x001c */ void* EnumConnections /* function */;
}; /* size: 0x0020 */

struct IContext
{
}; /* size: 0x0004 */

struct IContextCallback
{
}; /* size: 0x0004 */

struct IContextMarshaler
{
}; /* size: 0x0004 */

struct IContinue
{
}; /* size: 0x0004 */

struct IContinueVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* FContinue /* function */;
}; /* size: 0x0010 */

struct ICreateErrorInfo
{
}; /* size: 0x0004 */

struct ICreateTypeInfo
{
}; /* size: 0x0004 */

struct ICreateTypeInfo2
{
}; /* size: 0x0004 */

struct ICreateTypeLib
{
}; /* size: 0x0004 */

struct ICreateTypeLib2
{
}; /* size: 0x0004 */

struct IDLLHost
{
}; /* size: 0x0004 */

struct IDataAdviseHolder
{
}; /* size: 0x0004 */

struct IDataFilter
{
}; /* size: 0x0004 */

struct IDataObject
{
}; /* size: 0x0004 */

struct IDataObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetData /* function */;
  /* 0x0010 */ void* GetDataHere /* function */;
  /* 0x0014 */ void* QueryGetData /* function */;
  /* 0x0018 */ void* GetCanonicalFormatEtc /* function */;
  /* 0x001c */ void* SetData /* function */;
  /* 0x0020 */ void* EnumFormatEtc /* function */;
  /* 0x0024 */ void* DAdvise /* function */;
  /* 0x0028 */ void* DUnadvise /* function */;
  /* 0x002c */ void* EnumDAdvise /* function */;
}; /* size: 0x0030 */

struct IDebug
{
}; /* size: 0x0004 */

struct IDebugStream
{
}; /* size: 0x0004 */

struct IDestInfo
{
}; /* size: 0x0004 */

struct IDirectWriterLock
{
}; /* size: 0x0004 */

struct IDisconnectSink
{
}; /* size: 0x0004 */

struct IDispatch
{
}; /* size: 0x0004 */

struct IDispatchVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetTypeInfoCount /* function */;
  /* 0x0010 */ void* GetTypeInfo /* function */;
  /* 0x0014 */ void* GetIDsOfNames /* function */;
  /* 0x0018 */ void* Invoke /* function */;
}; /* size: 0x001c */

struct IDocfileAsyncConnectionPoint
{
}; /* size: 0x0004 */

struct IDragDropHelper
{
}; /* size: 0x0004 */

struct IDropSource
{
}; /* size: 0x0004 */

struct IDropSourceNotify
{
}; /* size: 0x0004 */

struct IDropSourceQueryEx
{
}; /* size: 0x0004 */

struct IDropTarget
{
}; /* size: 0x0004 */

struct IDummyHICONIncluder
{
}; /* size: 0x0004 */

struct IEncodingFilterFactory
{
}; /* size: 0x0004 */

struct IEnumCATEGORYINFO
{
}; /* size: 0x0004 */

struct IEnumCallback
{
}; /* size: 0x0004 */

struct IEnumConnectionPoints
{
}; /* size: 0x0004 */

struct IEnumConnectionPointsVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumConnections
{
}; /* size: 0x0004 */

struct IEnumConnectionsVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumContextProps
{
}; /* size: 0x0004 */

struct IEnumFORMATETC
{
}; /* size: 0x0004 */

struct IEnumFORMATETCVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumGUID
{
}; /* size: 0x0004 */

struct IEnumGeneric
{
}; /* size: 0x0004 */

struct IEnumHolder
{
}; /* size: 0x0004 */

struct IEnumMoniker
{
}; /* size: 0x0004 */

struct IEnumMonikerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumOLEVERB
{
}; /* size: 0x0004 */

struct IEnumOLEVERBVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumOleUndoUnits
{
}; /* size: 0x0004 */

struct IEnumSCMProcessInfo
{
}; /* size: 0x0004 */

struct IEnumSTATDATA
{
}; /* size: 0x0004 */

struct IEnumSTATDATAVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumSTATPROPBAG
{
}; /* size: 0x0004 */

struct IEnumSTATPROPSETSTG
{
}; /* size: 0x0004 */

struct IEnumSTATPROPSETSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumSTATPROPSTG
{
}; /* size: 0x0004 */

struct IEnumSTATPROPSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumSTATSTG
{
}; /* size: 0x0004 */

struct IEnumSTATSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumString
{
}; /* size: 0x0004 */

struct IEnumStringVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumUnknown
{
}; /* size: 0x0004 */

struct IEnumUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Next /* function */;
  /* 0x0010 */ void* Skip /* function */;
  /* 0x0014 */ void* Reset /* function */;
  /* 0x0018 */ void* Clone /* function */;
}; /* size: 0x001c */

struct IEnumVARIANT
{
}; /* size: 0x0004 */

struct IErrorInfo
{
}; /* size: 0x0004 */

struct IErrorLog
{
}; /* size: 0x0004 */

struct IExceptionNotification
{
}; /* size: 0x0004 */

struct IExternalConnection
{
}; /* size: 0x0004 */

class IFaceEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class IFaceEntry* _pNext;
      /* 0x0004 */ void* _pProxy;
      /* 0x0008 */ struct IRpcProxyBuffer* _pRpcProxy;
      /* 0x000c */ struct IRpcStubBuffer* _pRpcStub;
      /* 0x0010 */ void* _pServer;
      /* 0x0014 */ struct _GUID _iid;
      /* 0x0024 */ class CCtxChnl* _pCtxChnl;
      /* 0x0028 */ class CtxEntry* _pHead;
      /* 0x002c */ class CtxEntry* _pFreeList;
      /* 0x0030 */ struct ICallInterceptor* _pInterceptor;
      /* 0x0034 */ struct IUnknown* _pUnkInner;
    }; /* size: 0x0038 */
    /* 0x0000 */ class CPageAllocator s_allocator;
  }; /* size: 0x0040 */
}; /* size: 0x0038 */

struct IFastStack<CallFrame>
{
}; /* size: 0x0004 */

struct IFastStack<DISPATCH_CLIENT_FRAME>
{
}; /* size: 0x0004 */

struct IFastStack<DISPATCH_SERVER_FRAME>
{
}; /* size: 0x0004 */

struct IFileLockBytes
{
}; /* size: 0x0004 */

struct IFillInfo
{
}; /* size: 0x0004 */

struct IFillLockBytes
{
  /* 0x0000 */ struct IFillLockBytesVtbl* lpVtbl;
}; /* size: 0x0004 */

struct IFillLockBytesVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* FillAppend /* function */;
  /* 0x0010 */ void* FillAt /* function */;
  /* 0x0014 */ void* SetFillSize /* function */;
  /* 0x0018 */ void* Terminate /* function */;
}; /* size: 0x001c */

class IFinish
{
}; /* size: 0x0004 */

struct IFont
{
}; /* size: 0x0004 */

struct IFontDisp
{
}; /* size: 0x0004 */

struct IFontEventsDisp
{
}; /* size: 0x0004 */

struct IForegroundTransfer
{
}; /* size: 0x0004 */

struct IGetCatalogObject
{
}; /* size: 0x0004 */

struct IGetContextId
{
}; /* size: 0x0004 */

struct IGlobalInterfaceTable
{
}; /* size: 0x0004 */

struct IGlobalOptions
{
}; /* size: 0x0004 */

struct IHookOleObject
{
}; /* size: 0x0004 */

struct IHttpNegotiate
{
}; /* size: 0x0004 */

struct IHttpNegotiate2
{
}; /* size: 0x0004 */

struct IHttpSecurity
{
}; /* size: 0x0004 */

struct IImageList
{
}; /* size: 0x0004 */

struct IInitActivationPropertiesIn
{
}; /* size: 0x0004 */

struct IInitializeSpy
{
}; /* size: 0x0004 */

struct IInstanceInfo
{
}; /* size: 0x0004 */

struct IInstantiationInfo
{
}; /* size: 0x0004 */

struct IInterceptorBase
{
}; /* size: 0x0004 */

struct IInterfaceFromWindowProp
{
}; /* size: 0x0004 */

struct IInterfaceInfo
{
}; /* size: 0x0004 */

struct IInterfaceRelated
{
}; /* size: 0x0004 */

class IInternalChannelBuffer
{
}; /* size: 0x0008 */

struct IInternalUnknown
{
}; /* size: 0x0004 */

struct IInternet
{
}; /* size: 0x0004 */

struct IInternetBindInfo
{
}; /* size: 0x0004 */

struct IInternetHostSecurityManager
{
}; /* size: 0x0004 */

struct IInternetPriority
{
}; /* size: 0x0004 */

struct IInternetProtocol
{
}; /* size: 0x0004 */

struct IInternetProtocolEx
{
}; /* size: 0x0004 */

struct IInternetProtocolInfo
{
}; /* size: 0x0004 */

struct IInternetProtocolRoot
{
}; /* size: 0x0004 */

struct IInternetProtocolSink
{
}; /* size: 0x0004 */

struct IInternetProtocolSinkStackable
{
}; /* size: 0x0004 */

struct IInternetSecurityManager
{
}; /* size: 0x0004 */

struct IInternetSecurityManagerEx
{
}; /* size: 0x0004 */

struct IInternetSecurityManagerEx2
{
}; /* size: 0x0004 */

struct IInternetSecurityMgrSite
{
}; /* size: 0x0004 */

struct IInternetSession
{
}; /* size: 0x0004 */

struct IInternetThreadSwitch
{
}; /* size: 0x0004 */

struct IInternetZoneManager
{
}; /* size: 0x0004 */

struct IInternetZoneManagerEx
{
}; /* size: 0x0004 */

struct IInternetZoneManagerEx2
{
}; /* size: 0x0004 */

struct ILayoutStorage
{
}; /* size: 0x0004 */

struct ILegacyInfo
{
}; /* size: 0x0004 */

struct ILocalMachineNames
{
}; /* size: 0x0004 */

struct ILocalSystemActivator
{
}; /* size: 0x0004 */

struct ILockBytes
{
}; /* size: 0x0004 */

struct ILockBytesVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* ReadAt /* function */;
  /* 0x0010 */ void* WriteAt /* function */;
  /* 0x0014 */ void* Flush /* function */;
  /* 0x0018 */ void* SetSize /* function */;
  /* 0x001c */ void* LockRegion /* function */;
  /* 0x0020 */ void* UnlockRegion /* function */;
  /* 0x0024 */ void* Stat /* function */;
}; /* size: 0x0028 */

struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  /* 0x0000 */ unsigned char bAuxType;
  /* 0x0001 */ unsigned char bReserved;
  /* 0x0002 */ unsigned long SymbolTableIndex;
  /* 0x0006 */ unsigned char rgbReserved[12];
}; /* size: 0x0012 */

enum IMAGE_AUX_SYMBOL_TYPE
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
};

struct IMAGE_COR20_HEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned short MajorRuntimeVersion;
  /* 0x0006 */ unsigned short MinorRuntimeVersion;
  /* 0x0008 */ struct _IMAGE_DATA_DIRECTORY MetaData;
  /* 0x0010 */ unsigned long Flags;
  union
  {
    /* 0x0014 */ unsigned long EntryPointToken;
    /* 0x0014 */ unsigned long EntryPointRVA;
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _IMAGE_DATA_DIRECTORY Resources;
  /* 0x0020 */ struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
  /* 0x0028 */ struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
  /* 0x0030 */ struct _IMAGE_DATA_DIRECTORY VTableFixups;
  /* 0x0038 */ struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  /* 0x0040 */ struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
}; /* size: 0x0048 */

struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned long DeCommitFreeBlockThreshold;
  /* 0x001c */ unsigned long DeCommitTotalFreeThreshold;
  /* 0x0020 */ unsigned long LockPrefixTable;
  /* 0x0024 */ unsigned long MaximumAllocationSize;
  /* 0x0028 */ unsigned long VirtualMemoryThreshold;
  /* 0x002c */ unsigned long ProcessHeapFlags;
  /* 0x0030 */ unsigned long ProcessAffinityMask;
  /* 0x0034 */ unsigned short CSDVersion;
  /* 0x0036 */ unsigned short Reserved1;
  /* 0x0038 */ unsigned long EditList;
  /* 0x003c */ unsigned long SecurityCookie;
  /* 0x0040 */ unsigned long SEHandlerTable;
  /* 0x0044 */ unsigned long SEHandlerCount;
}; /* size: 0x0048 */

struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 LockPrefixTable;
  /* 0x0030 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0038 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0040 */ unsigned __int64 ProcessAffinityMask;
  /* 0x0048 */ unsigned long ProcessHeapFlags;
  /* 0x004c */ unsigned short CSDVersion;
  /* 0x004e */ unsigned short Reserved1;
  /* 0x0050 */ unsigned __int64 EditList;
  /* 0x0058 */ unsigned __int64 SecurityCookie;
  /* 0x0060 */ unsigned __int64 SEHandlerTable;
  /* 0x0068 */ unsigned __int64 SEHandlerCount;
}; /* size: 0x0070 */

struct IMPORT_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long SizeOfData;
  union
  {
    /* 0x0010 */ unsigned short Ordinal;
    /* 0x0010 */ unsigned short Hint;
  }; /* size: 0x0002 */
  struct /* bitfield */
  {
    /* 0x0012 */ unsigned short Type : 2; /* bit position: 0 */
    /* 0x0012 */ unsigned short NameType : 3; /* bit position: 2 */
    /* 0x0012 */ unsigned short Reserved : 11; /* bit position: 5 */
  }; /* bitfield */
}; /* size: 0x0014 */

enum IMPORT_OBJECT_NAME_TYPE
{
  IMPORT_OBJECT_ORDINAL = 0,
  IMPORT_OBJECT_NAME = 1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 2,
  IMPORT_OBJECT_NAME_UNDECORATE = 3,
};

enum IMPORT_OBJECT_TYPE
{
  IMPORT_OBJECT_CODE = 0,
  IMPORT_OBJECT_DATA = 1,
  IMPORT_OBJECT_CONST = 2,
};

struct IMalloc
{
}; /* size: 0x0004 */

struct IMallocSpy
{
}; /* size: 0x0004 */

struct IMallocVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Alloc /* function */;
  /* 0x0010 */ void* Realloc /* function */;
  /* 0x0014 */ void* Free /* function */;
  /* 0x0018 */ void* GetSize /* function */;
  /* 0x001c */ void* DidAlloc /* function */;
  /* 0x0020 */ void* HeapMinimize /* function */;
}; /* size: 0x0024 */

class IMappedStream
{
}; /* size: 0x0004 */

struct IMarshal
{
}; /* size: 0x0004 */

struct IMarshal2
{
}; /* size: 0x0004 */

struct IMarshalEnvoy
{
}; /* size: 0x0004 */

struct IMarshalOptions
{
}; /* size: 0x0004 */

struct IMarshalSomeone
{
}; /* size: 0x0004 */

struct IMarshallingManager
{
}; /* size: 0x0004 */

struct IMessageFilter
{
}; /* size: 0x0004 */

class IMessageParam
{
  /* 0x0004 */ class IMessageParam* pNextMessage;
}; /* size: 0x0008 */

struct IMoniker
{
}; /* size: 0x0004 */

struct IMonikerProp
{
}; /* size: 0x0004 */

struct IMonikerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetClassID /* function */;
  /* 0x0010 */ void* IsDirty /* function */;
  /* 0x0014 */ void* Load /* function */;
  /* 0x0018 */ void* Save /* function */;
  /* 0x001c */ void* GetSizeMax /* function */;
  /* 0x0020 */ void* BindToObject /* function */;
  /* 0x0024 */ void* BindToStorage /* function */;
  /* 0x0028 */ void* Reduce /* function */;
  /* 0x002c */ void* ComposeWith /* function */;
  /* 0x0030 */ void* Enum /* function */;
  /* 0x0034 */ void* IsEqual /* function */;
  /* 0x0038 */ void* Hash /* function */;
  /* 0x003c */ void* IsRunning /* function */;
  /* 0x0040 */ void* GetTimeOfLastChange /* function */;
  /* 0x0044 */ void* Inverse /* function */;
  /* 0x0048 */ void* CommonPrefixWith /* function */;
  /* 0x004c */ void* RelativePathTo /* function */;
  /* 0x0050 */ void* GetDisplayName /* function */;
  /* 0x0054 */ void* ParseDisplayName /* function */;
  /* 0x0058 */ void* IsSystemMoniker /* function */;
}; /* size: 0x005c */

struct IMultiQI
{
}; /* size: 0x0004 */

struct INFO
{
  /* 0x0000 */ int fUsed;
  /* 0x0004 */ unsigned long dwConnection;
  /* 0x0008 */ unsigned short cf;
  /* 0x000c */ unsigned long grfAdvf;
}; /* size: 0x0010 */

struct INTERFACE_HELPER_CLSID
{
  /* 0x0020 */ struct _GUID m_clsid;
  /* 0x0030 */ int m_fDisableTypeLib;
  /* 0x0034 */ int m_fDisableAll;
  /* 0x0038 */ int m_fFoundHelper;
}; /* size: 0x003c */

struct INTERPRETER_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char FullPtrUsed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char RpcSsAllocUsed : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ObjectProc : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasRpcFlags : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char IgnoreObjectException : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasCommOrFault : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char UseNewInitRoutines : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct INTERPRETER_OPT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ServerMustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientMustSize : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasReturn : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasPipes : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasAsyncUuid : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasExtensions : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasAsyncHandle : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct INTERPRETER_OPT_FLAGS2
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasNewCorrDesc : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientCorrCheck : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ServerCorrCheck : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasNotify : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasNotify2 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasComplexReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasConformanceRange : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasBigByValueParam : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct INdrVersion
{
}; /* size: 0x0004 */

struct IObjContext
{
}; /* size: 0x0004 */

struct IObjectActivator
{
}; /* size: 0x0004 */

struct IObjectWithSite
{
}; /* size: 0x0004 */

struct IOleAdviseHolder
{
}; /* size: 0x0004 */

struct IOleCache
{
}; /* size: 0x0004 */

struct IOleCache2
{
  /* 0x0000 */ struct IOleCache2Vtbl* lpVtbl;
}; /* size: 0x0004 */

struct IOleCache2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Cache /* function */;
  /* 0x0010 */ void* Uncache /* function */;
  /* 0x0014 */ void* EnumCache /* function */;
  /* 0x0018 */ void* InitCache /* function */;
  /* 0x001c */ void* SetData /* function */;
  /* 0x0020 */ void* UpdateCache /* function */;
  /* 0x0024 */ void* DiscardCache /* function */;
}; /* size: 0x0028 */

struct IOleCacheControl
{
}; /* size: 0x0004 */

struct IOleClientSite
{
}; /* size: 0x0004 */

struct IOleContainer
{
}; /* size: 0x0004 */

struct IOleControl
{
}; /* size: 0x0004 */

struct IOleControlSite
{
}; /* size: 0x0004 */

struct IOleInPlaceActiveObject
{
  /* 0x0000 */ struct IOleInPlaceActiveObjectVtbl* lpVtbl;
}; /* size: 0x0004 */

struct IOleInPlaceActiveObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetWindow /* function */;
  /* 0x0010 */ void* ContextSensitiveHelp /* function */;
  /* 0x0014 */ void* TranslateAcceleratorW /* function */;
  /* 0x0018 */ void* OnFrameWindowActivate /* function */;
  /* 0x001c */ void* OnDocWindowActivate /* function */;
  /* 0x0020 */ void* ResizeBorder /* function */;
  /* 0x0024 */ void* EnableModeless /* function */;
}; /* size: 0x0028 */

struct IOleInPlaceFrame
{
}; /* size: 0x0004 */

struct IOleInPlaceObject
{
}; /* size: 0x0004 */

struct IOleInPlaceObjectWindowless
{
}; /* size: 0x0004 */

struct IOleInPlaceSite
{
}; /* size: 0x0004 */

struct IOleInPlaceSiteEx
{
}; /* size: 0x0004 */

struct IOleInPlaceSiteWindowless
{
}; /* size: 0x0004 */

struct IOleInPlaceUIWindow
{
  /* 0x0000 */ struct IOleInPlaceUIWindowVtbl* lpVtbl;
}; /* size: 0x0004 */

struct IOleInPlaceUIWindowVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetWindow /* function */;
  /* 0x0010 */ void* ContextSensitiveHelp /* function */;
  /* 0x0014 */ void* GetBorder /* function */;
  /* 0x0018 */ void* RequestBorderSpace /* function */;
  /* 0x001c */ void* SetBorderSpace /* function */;
  /* 0x0020 */ void* SetActiveObject /* function */;
}; /* size: 0x0024 */

struct IOleItemContainer
{
}; /* size: 0x0004 */

struct IOleLink
{
}; /* size: 0x0004 */

struct IOleObject
{
}; /* size: 0x0004 */

struct IOlePackagerLinkNotify
{
}; /* size: 0x0004 */

struct IOleParentUndoUnit
{
}; /* size: 0x0004 */

struct IOlePresObj
{
}; /* size: 0x0004 */

struct IOleUndoManager
{
}; /* size: 0x0004 */

struct IOleUndoUnit
{
}; /* size: 0x0004 */

struct IOleWindow
{
}; /* size: 0x0004 */

struct IOpaqueDataInfo
{
}; /* size: 0x0004 */

struct IOplockStorage
{
}; /* size: 0x0004 */

struct IOrpcDebugNotify
{
}; /* size: 0x0004 */

struct IOrpcDebugNotifyVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* ClientGetBufferSize /* function */;
  /* 0x0010 */ void* ClientFillBuffer /* function */;
  /* 0x0014 */ void* ClientNotify /* function */;
  /* 0x0018 */ void* ServerNotify /* function */;
  /* 0x001c */ void* ServerGetBufferSize /* function */;
  /* 0x0020 */ void* ServerFillBuffer /* function */;
}; /* size: 0x0024 */

struct IOverrideTargetContext
{
}; /* size: 0x0004 */

struct IPAControl
{
}; /* size: 0x0004 */

struct IPSFactoryBuffer
{
}; /* size: 0x0004 */

struct IPSFactoryBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* CreateProxy /* function */;
  /* 0x0010 */ void* CreateStub /* function */;
}; /* size: 0x0014 */

struct IParseDisplayName
{
}; /* size: 0x0004 */

struct IPartitionLookup
{
}; /* size: 0x0004 */

struct IPartitionProperty
{
}; /* size: 0x0004 */

struct IPerPropertyBrowsing
{
}; /* size: 0x0004 */

struct IPersist
{
}; /* size: 0x0004 */

struct IPersistFile
{
}; /* size: 0x0004 */

struct IPersistMemory
{
}; /* size: 0x0004 */

struct IPersistMoniker
{
}; /* size: 0x0004 */

struct IPersistPropertyBag
{
}; /* size: 0x0004 */

struct IPersistPropertyBag2
{
}; /* size: 0x0004 */

struct IPersistStorage
{
}; /* size: 0x0004 */

struct IPersistStream
{
}; /* size: 0x0004 */

struct IPersistStreamInit
{
}; /* size: 0x0004 */

struct IPicture
{
}; /* size: 0x0004 */

struct IPicture2
{
}; /* size: 0x0004 */

struct IPictureDisp
{
}; /* size: 0x0004 */

struct IPipeByte
{
}; /* size: 0x0004 */

struct IPipeDouble
{
}; /* size: 0x0004 */

struct IPipeLong
{
}; /* size: 0x0004 */

struct IPointerInactive
{
}; /* size: 0x0004 */

struct IPolicy
{
}; /* size: 0x0004 */

struct IPolicyAsync
{
}; /* size: 0x0004 */

struct IPolicyMaker
{
}; /* size: 0x0004 */

struct IPolicySet
{
}; /* size: 0x0004 */

struct IPrivActivationContextInfo
{
}; /* size: 0x0004 */

struct IPrivActivationPropertiesIn
{
}; /* size: 0x0004 */

struct IPrivActivationPropertiesOut
{
}; /* size: 0x0004 */

struct IPrivDragDrop
{
}; /* size: 0x0004 */

struct IProcessInitControl
{
}; /* size: 0x0004 */

struct IProcessLock
{
}; /* size: 0x0004 */

struct IProcessServerInfo
{
}; /* size: 0x0004 */

struct IProgressNotify
{
}; /* size: 0x0004 */

struct IPropertyBag
{
}; /* size: 0x0004 */

struct IPropertyBag2
{
}; /* size: 0x0004 */

struct IPropertyBagEx
{
}; /* size: 0x0004 */

struct IPropertyNotifySink
{
}; /* size: 0x0004 */

struct IPropertyPage
{
}; /* size: 0x0004 */

struct IPropertyPage2
{
}; /* size: 0x0004 */

struct IPropertyPageSite
{
}; /* size: 0x0004 */

struct IPropertySetStorage
{
}; /* size: 0x0004 */

struct IPropertyStorage
{
}; /* size: 0x0004 */

struct IProvideClassInfo
{
}; /* size: 0x0004 */

struct IProvideClassInfo2
{
}; /* size: 0x0004 */

struct IProvideMultipleClassInfo
{
}; /* size: 0x0004 */

struct IProxyManager
{
}; /* size: 0x0004 */

struct IQuickActivate
{
}; /* size: 0x0004 */

struct IRCEntry
{
  /* 0x0000 */ struct IRCEntry* pNext;
  /* 0x0004 */ class CRefCache* pRefCache;
  /* 0x0008 */ unsigned long cStrongUsage;
  /* 0x000c */ unsigned long cWeakUsage;
  /* 0x0010 */ unsigned long cStrongRefs;
  /* 0x0014 */ unsigned long cPrivateRefs;
  /* 0x0018 */ unsigned long cWeakRefs;
  /* 0x001c */ struct _GUID ipid;
}; /* size: 0x002c */

struct IROTData
{
}; /* size: 0x0004 */

struct IRecordInfo
{
  /* 0x0000 */ struct IRecordInfoVtbl* lpVtbl;
}; /* size: 0x0004 */

struct IRecordInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* RecordInit /* function */;
  /* 0x0010 */ void* RecordClear /* function */;
  /* 0x0014 */ void* RecordCopy /* function */;
  /* 0x0018 */ void* GetGuid /* function */;
  /* 0x001c */ void* GetName /* function */;
  /* 0x0020 */ void* GetSize /* function */;
  /* 0x0024 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetField /* function */;
  /* 0x002c */ void* GetFieldNoCopy /* function */;
  /* 0x0030 */ void* PutField /* function */;
  /* 0x0034 */ void* PutFieldNoCopy /* function */;
  /* 0x0038 */ void* GetFieldNames /* function */;
  /* 0x003c */ void* IsMatchingType /* function */;
  /* 0x0040 */ void* RecordCreate /* function */;
  /* 0x0044 */ void* RecordCreateCopy /* function */;
  /* 0x0048 */ void* RecordDestroy /* function */;
}; /* size: 0x004c */

struct IReleaseMarshalBuffers
{
}; /* size: 0x0004 */

struct IRemUnknown
{
}; /* size: 0x0004 */

struct IRemUnknown2
{
}; /* size: 0x0004 */

struct IRemUnknownN
{
}; /* size: 0x0004 */

struct IReplaceClassInfo
{
}; /* size: 0x0004 */

struct IResourceGates
{
}; /* size: 0x0004 */

struct IRootStorage
{
}; /* size: 0x0004 */

struct IRpcCall
{
}; /* size: 0x0004 */

struct IRpcChannelBuffer
{
}; /* size: 0x0004 */

struct IRpcChannelBuffer2
{
}; /* size: 0x0004 */

struct IRpcChannelBuffer3
{
}; /* size: 0x0004 */

struct IRpcChannelBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetBuffer /* function */;
  /* 0x0010 */ void* SendReceive /* function */;
  /* 0x0014 */ void* FreeBuffer /* function */;
  /* 0x0018 */ void* GetDestCtx /* function */;
  /* 0x001c */ void* IsConnected /* function */;
}; /* size: 0x0020 */

struct IRpcHelper
{
}; /* size: 0x0004 */

struct IRpcOptions
{
}; /* size: 0x0004 */

struct IRpcProxyBuffer
{
}; /* size: 0x0004 */

struct IRpcProxyBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Connect /* function */;
  /* 0x0010 */ void* Disconnect /* function */;
}; /* size: 0x0014 */

struct IRpcStubBuffer
{
}; /* size: 0x0004 */

struct IRpcStubBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Connect /* function */;
  /* 0x0010 */ void* Disconnect /* function */;
  /* 0x0014 */ void* Invoke /* function */;
  /* 0x0018 */ void* IsIIDSupported /* function */;
  /* 0x001c */ void* CountRefs /* function */;
  /* 0x0020 */ void* DebugServerQueryInterface /* function */;
  /* 0x0024 */ void* DebugServerRelease /* function */;
}; /* size: 0x0028 */

struct IRpcSyntaxNegotiate
{
}; /* size: 0x0004 */

struct IRundown
{
}; /* size: 0x0004 */

struct IRunnableObject
{
  /* 0x0000 */ struct IRunnableObjectVtbl* lpVtbl;
}; /* size: 0x0004 */

struct IRunnableObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetRunningClass /* function */;
  /* 0x0010 */ void* Run /* function */;
  /* 0x0014 */ void* IsRunning /* function */;
  /* 0x0018 */ void* LockRunning /* function */;
  /* 0x001c */ void* SetContainedObject /* function */;
}; /* size: 0x0020 */

struct IRunningObjectTable
{
}; /* size: 0x0004 */

struct IRunningObjectTableVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Register /* function */;
  /* 0x0010 */ void* Revoke /* function */;
  /* 0x0014 */ void* IsRunning /* function */;
  /* 0x0018 */ void* GetObjectW /* function */;
  /* 0x001c */ void* NoteChangeTime /* function */;
  /* 0x0020 */ void* GetTimeOfLastChange /* function */;
  /* 0x0024 */ void* EnumRunning /* function */;
}; /* size: 0x0028 */

struct ISCMLocalActivator
{
}; /* size: 0x0004 */

struct ISCMProcessControl
{
}; /* size: 0x0004 */

struct IScmReplyInfo
{
}; /* size: 0x0004 */

struct IScmRequestInfo
{
}; /* size: 0x0004 */

struct ISecurityOptions
{
}; /* size: 0x0004 */

struct ISequentialStream
{
}; /* size: 0x0004 */

struct ISequentialStreamVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Read /* function */;
  /* 0x0010 */ void* Write /* function */;
}; /* size: 0x0014 */

struct ISerializable
{
}; /* size: 0x0004 */

struct ISerializableParent
{
}; /* size: 0x0004 */

struct IServerLocationInfo
{
}; /* size: 0x0004 */

struct IServerSecurity
{
}; /* size: 0x0004 */

struct IServiceProvider
{
}; /* size: 0x0004 */

struct IServicesSink
{
}; /* size: 0x0004 */

struct IServicesSink2
{
}; /* size: 0x0004 */

struct IShellItem
{
}; /* size: 0x0004 */

struct IShellItem2
{
}; /* size: 0x0004 */

struct IShellLinkW
{
}; /* size: 0x0004 */

struct ISimpleFrameSite
{
}; /* size: 0x0004 */

struct ISoftDistExt
{
}; /* size: 0x0004 */

struct ISpecialSystemProperties
{
}; /* size: 0x0004 */

struct ISpecifyPropertyPages
{
}; /* size: 0x0004 */

struct IStackWalker
{
}; /* size: 0x0004 */

struct IStackWalkerStack
{
}; /* size: 0x0004 */

struct IStackWalkerSymbol
{
}; /* size: 0x0004 */

struct IStandardActivator
{
}; /* size: 0x0004 */

struct IStdMarshalInfo
{
}; /* size: 0x0004 */

struct IStorage
{
}; /* size: 0x0004 */

struct IStorageReplica
{
}; /* size: 0x0004 */

struct IStorageVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* CreateStream /* function */;
  /* 0x0010 */ void* OpenStream /* function */;
  /* 0x0014 */ void* CreateStorage /* function */;
  /* 0x0018 */ void* OpenStorage /* function */;
  /* 0x001c */ void* CopyTo /* function */;
  /* 0x0020 */ void* MoveElementTo /* function */;
  /* 0x0024 */ void* Commit /* function */;
  /* 0x0028 */ void* Revert /* function */;
  /* 0x002c */ void* EnumElements /* function */;
  /* 0x0030 */ void* DestroyElement /* function */;
  /* 0x0034 */ void* RenameElement /* function */;
  /* 0x0038 */ void* SetElementTimes /* function */;
  /* 0x003c */ void* SetClass /* function */;
  /* 0x0040 */ void* SetStateBits /* function */;
  /* 0x0044 */ void* Stat /* function */;
}; /* size: 0x0048 */

struct IStream
{
}; /* size: 0x0004 */

struct IStreamVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Read /* function */;
  /* 0x0010 */ void* Write /* function */;
  /* 0x0014 */ void* Seek /* function */;
  /* 0x0018 */ void* SetSize /* function */;
  /* 0x001c */ void* CopyTo /* function */;
  /* 0x0020 */ void* Commit /* function */;
  /* 0x0024 */ void* Revert /* function */;
  /* 0x0028 */ void* LockRegion /* function */;
  /* 0x002c */ void* UnlockRegion /* function */;
  /* 0x0030 */ void* Stat /* function */;
  /* 0x0034 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct ISupportErrorInfo
{
}; /* size: 0x0004 */

struct ISurrogate
{
}; /* size: 0x0004 */

struct ISurrogateService
{
}; /* size: 0x0004 */

struct ISynchronize
{
}; /* size: 0x0004 */

struct ISynchronizeContainer
{
}; /* size: 0x0004 */

struct ISynchronizeEvent
{
}; /* size: 0x0004 */

struct ISynchronizeHandle
{
}; /* size: 0x0004 */

struct ISynchronizeMutex
{
}; /* size: 0x0004 */

struct ISystemActivator
{
}; /* size: 0x0004 */

struct ISystemDebugEventFire
{
}; /* size: 0x0004 */

struct ISystemDebugEventShutdown
{
}; /* size: 0x0004 */

struct IThumbnailExtractor
{
}; /* size: 0x0004 */

struct IThunkManager
{
}; /* size: 0x0004 */

struct ITimeAndNoticeControl
{
}; /* size: 0x0004 */

class ITrackingMoniker
{
}; /* size: 0x0004 */

struct ITypeChangeEvents
{
}; /* size: 0x0004 */

struct ITypeComp
{
}; /* size: 0x0004 */

struct ITypeCompVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Bind /* function */;
  /* 0x0010 */ void* BindType /* function */;
}; /* size: 0x0014 */

struct ITypeFactory
{
}; /* size: 0x0004 */

struct ITypeInfo
{
}; /* size: 0x0004 */

struct ITypeInfo2
{
}; /* size: 0x0004 */

struct ITypeInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetTypeAttr /* function */;
  /* 0x0010 */ void* GetTypeComp /* function */;
  /* 0x0014 */ void* GetFuncDesc /* function */;
  /* 0x0018 */ void* GetVarDesc /* function */;
  /* 0x001c */ void* GetNames /* function */;
  /* 0x0020 */ void* GetRefTypeOfImplType /* function */;
  /* 0x0024 */ void* GetImplTypeFlags /* function */;
  /* 0x0028 */ void* GetIDsOfNames /* function */;
  /* 0x002c */ void* Invoke /* function */;
  /* 0x0030 */ void* GetDocumentation /* function */;
  /* 0x0034 */ void* GetDllEntry /* function */;
  /* 0x0038 */ void* GetRefTypeInfo /* function */;
  /* 0x003c */ void* AddressOfMember /* function */;
  /* 0x0040 */ void* CreateInstance /* function */;
  /* 0x0044 */ void* GetMops /* function */;
  /* 0x0048 */ void* GetContainingTypeLib /* function */;
  /* 0x004c */ void* ReleaseTypeAttr /* function */;
  /* 0x0050 */ void* ReleaseFuncDesc /* function */;
  /* 0x0054 */ void* ReleaseVarDesc /* function */;
}; /* size: 0x0058 */

struct ITypeLib
{
}; /* size: 0x0004 */

struct ITypeLib2
{
}; /* size: 0x0004 */

struct ITypeLibVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* GetTypeInfoCount /* function */;
  /* 0x0010 */ void* GetTypeInfo /* function */;
  /* 0x0014 */ void* GetTypeInfoType /* function */;
  /* 0x0018 */ void* GetTypeInfoOfGuid /* function */;
  /* 0x001c */ void* GetLibAttr /* function */;
  /* 0x0020 */ void* GetTypeComp /* function */;
  /* 0x0024 */ void* GetDocumentation /* function */;
  /* 0x0028 */ void* IsName /* function */;
  /* 0x002c */ void* FindName /* function */;
  /* 0x0030 */ void* ReleaseTLibAttr /* function */;
}; /* size: 0x0034 */

struct ITypeMarshal
{
}; /* size: 0x0004 */

struct IUnkInner
{
}; /* size: 0x0004 */

struct IUnknown
{
}; /* size: 0x0004 */

struct IUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
}; /* size: 0x000c */

struct IUri
{
}; /* size: 0x0004 */

struct IUriBuilder
{
}; /* size: 0x0004 */

struct IUriBuilderFactory
{
}; /* size: 0x0004 */

struct IUriContainer
{
}; /* size: 0x0004 */

struct IUrlMon
{
}; /* size: 0x0004 */

struct IUserToken
{
}; /* size: 0x0004 */

struct IUserTokenWithImpersonate
{
}; /* size: 0x0004 */

struct IViewObject
{
  /* 0x0000 */ struct IViewObjectVtbl* lpVtbl;
}; /* size: 0x0004 */

struct IViewObject2
{
}; /* size: 0x0004 */

struct IViewObjectEx
{
}; /* size: 0x0004 */

struct IViewObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0004 */ void* AddRef /* function */;
  /* 0x0008 */ void* Release /* function */;
  /* 0x000c */ void* Draw /* function */;
  /* 0x0010 */ void* GetColorSet /* function */;
  /* 0x0014 */ void* Freeze /* function */;
  /* 0x0018 */ void* Unfreeze /* function */;
  /* 0x001c */ void* SetAdvise /* function */;
  /* 0x0020 */ void* GetAdvise /* function */;
}; /* size: 0x0024 */

struct IWaitMultiple
{
}; /* size: 0x0004 */

struct IWinInetCacheHints
{
}; /* size: 0x0004 */

struct IWinInetCacheHints2
{
}; /* size: 0x0004 */

struct IWinInetFileStream
{
}; /* size: 0x0004 */

struct IWinInetHttpInfo
{
}; /* size: 0x0004 */

struct IWinInetInfo
{
}; /* size: 0x0004 */

struct IWindowForBindingUI
{
}; /* size: 0x0004 */

struct IWrappedProtocol
{
}; /* size: 0x0004 */

struct IWrapperInfo
{
}; /* size: 0x0004 */

struct IXMLAttribute
{
}; /* size: 0x0004 */

struct IXMLDOMAttribute
{
}; /* size: 0x0004 */

struct IXMLDOMCDATASection
{
}; /* size: 0x0004 */

struct IXMLDOMCharacterData
{
}; /* size: 0x0004 */

struct IXMLDOMComment
{
}; /* size: 0x0004 */

struct IXMLDOMDocument
{
}; /* size: 0x0004 */

struct IXMLDOMDocumentFragment
{
}; /* size: 0x0004 */

struct IXMLDOMDocumentType
{
}; /* size: 0x0004 */

struct IXMLDOMElement
{
}; /* size: 0x0004 */

struct IXMLDOMEntity
{
}; /* size: 0x0004 */

struct IXMLDOMEntityReference
{
}; /* size: 0x0004 */

struct IXMLDOMImplementation
{
}; /* size: 0x0004 */

struct IXMLDOMNamedNodeMap
{
}; /* size: 0x0004 */

struct IXMLDOMNode
{
}; /* size: 0x0004 */

struct IXMLDOMNodeList
{
}; /* size: 0x0004 */

struct IXMLDOMNotation
{
}; /* size: 0x0004 */

struct IXMLDOMParseError
{
}; /* size: 0x0004 */

struct IXMLDOMProcessingInstruction
{
}; /* size: 0x0004 */

struct IXMLDOMText
{
}; /* size: 0x0004 */

struct IXMLDSOControl
{
}; /* size: 0x0004 */

struct IXMLDocument
{
}; /* size: 0x0004 */

struct IXMLDocument2
{
}; /* size: 0x0004 */

struct IXMLElement
{
}; /* size: 0x0004 */

struct IXMLElement2
{
}; /* size: 0x0004 */

struct IXMLElementCollection
{
}; /* size: 0x0004 */

struct IXMLError
{
}; /* size: 0x0004 */

struct IXMLHttpRequest
{
}; /* size: 0x0004 */

struct IXTLRuntime
{
}; /* size: 0x0004 */

struct IZoneIdentifier
{
}; /* size: 0x0004 */

struct ImgDelayDescrV2
{
  /* 0x0000 */ unsigned long grAttrs;
  /* 0x0004 */ unsigned long rvaDLLName;
  /* 0x0008 */ unsigned long rvaHmod;
  /* 0x000c */ unsigned long rvaIAT;
  /* 0x0010 */ unsigned long rvaINT;
  /* 0x0014 */ unsigned long rvaBoundIAT;
  /* 0x0018 */ unsigned long rvaUnloadIAT;
  /* 0x001c */ unsigned long dwTimeStamp;
}; /* size: 0x0020 */

class InprocActpropsUnmarshaller
{
  /* 0x0000 */ class InprocActpropsUnmarshaller _InprocActUnmarshaller;
}; /* size: 0x0004 */

class InstanceInfo
{
  /* 0x0014 */ struct tagInstanceInfoData _instanceInfoData;
  /* 0x0024 */ struct IStorage* _pstg;
}; /* size: 0x0028 */

class InstantiationInfo
{
  /* 0x0014 */ struct tagInstantiationInfoData _instantiationInfoData;
  /* 0x0044 */ struct _GUID _pIIDs[10];
}; /* size: 0x00e4 */

class Interceptor
{
  /* 0x0018 */ struct ICallFrameEvents* m_pCallSink;
  /* 0x001c */ void* const* m_pvtbl /* function */;
  /* 0x0020 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0024 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0028 */ const struct tagProxyFileInfo** m_pProxyFileList;
  /* 0x002c */ const char* m_szInterfaceName;
  /* 0x0030 */ int m_fMdOwnsHeader;
  /* 0x0034 */ int m_fUsingTypelib;
  /* 0x0038 */ struct TYPEINFOVTBL* m_ptypeinfovtbl;
  /* 0x003c */ unsigned int m_cMethodsBase;
  /* 0x0040 */ struct ICallInterceptor* m_pBaseInterceptor;
  /* 0x0044 */ struct IUnknown* m_punkBaseInterceptor;
  /* 0x0048 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x004c */ struct IUnknown* m_punkOuter;
  /* 0x0050 */ long m_refs;
}; /* size: 0x0054 */

struct InterfaceWalkerFree
{
  /* 0x0004 */ struct ICallFrameWalker* m_pWalker;
}; /* size: 0x0008 */

struct InterlockedStack<CallFrame>
{
  union
  {
    struct
    {
      /* 0x0000 */ class CallFrame* m_p;
      /* 0x0004 */ unsigned long m_n;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 dummy;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct InterlockedStack<DISPATCH_CLIENT_FRAME>
{
  union
  {
    struct
    {
      /* 0x0000 */ struct DISPATCH_CLIENT_FRAME* m_p;
      /* 0x0004 */ unsigned long m_n;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 dummy;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct InterlockedStack<DISPATCH_SERVER_FRAME>
{
  union
  {
    struct
    {
      /* 0x0000 */ struct DISPATCH_SERVER_FRAME* m_p;
      /* 0x0004 */ unsigned long m_n;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 dummy;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct InterlockedStackIndirect<CallFrame>
{
  /* 0x0008 */ struct InterlockedStack<CallFrame> stack;
}; /* size: 0x0010 */

struct InterlockedStackIndirect<DISPATCH_CLIENT_FRAME>
{
  /* 0x0008 */ struct InterlockedStack<DISPATCH_CLIENT_FRAME> stack;
}; /* size: 0x0010 */

struct InterlockedStackIndirect<DISPATCH_SERVER_FRAME>
{
  /* 0x0008 */ struct InterlockedStack<DISPATCH_SERVER_FRAME> stack;
}; /* size: 0x0010 */

struct KEY_PID_ARRAY
{
  /* 0x0000 */ void* PID;
  /* 0x0004 */ struct _UNICODE_STRING KeyName;
}; /* size: 0x000c */

enum LATENCY_TIME
{
  LT_DONT_CARE = 0,
  LT_LOWEST_LATENCY = 1,
};

struct LEGACY_FRAME
{
  /* 0x0008 */ void* m_pvArgs;
  /* 0x000c */ const unsigned long m_iMethod;
  /* 0x0010 */ int m_hrReturnValue;
  /* 0x0014 */ struct LEGACY_INTERCEPTOR* m_pInterceptor;
  /* 0x0018 */ struct ICallFrame* m_premoteFrame;
  /* 0x001c */ struct ICallFrame* m_pmemoryFrame;
  /* 0x0020 */ int m_fAfterCall;
  /* 0x0024 */ struct IUnknown* m_punkOuter;
  /* 0x0028 */ long m_refs;
}; /* size: 0x002c */

struct LEGACY_INTERCEPTOR
{
  /* 0x0020 */ struct ICallFrameEvents* m_psink;
  /* 0x0024 */ struct _GUID m_iid;
  /* 0x0034 */ unsigned long m_cMethods;
  /* 0x0038 */ struct XLOCK_LEAF m_frameLock;
  /* 0x0054 */ struct ICallFrame** m_ppframeCustomer;
  /* 0x0058 */ struct ICallInterceptor* m_premoteInterceptor;
  /* 0x005c */ int m_fRegdWithRemoteInterceptor;
  /* 0x0060 */ struct ICallInterceptor* m_pmemoryInterceptor;
  /* 0x0064 */ int m_fRegdWithMemoryInterceptor;
  /* 0x0068 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x006c */ struct IUnknown* m_punkOuter;
  /* 0x0070 */ long m_refs;
  /* 0x0074 */ int m_fShuttingDown;
}; /* size: 0x0078 */

struct LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Flink;
  /* 0x0004 */ unsigned long Blink;
}; /* size: 0x0008 */

struct LIST_ENTRY64
{
  /* 0x0000 */ unsigned __int64 Flink;
  /* 0x0008 */ unsigned __int64 Blink;
}; /* size: 0x0010 */

enum LSA_FOREST_TRUST_RECORD_TYPE
{
  ForestTrustTopLevelName = 0,
  ForestTrustTopLevelNameEx = 1,
  ForestTrustDomainInfo = 2,
  ForestTrustRecordTypeLast = 2,
};

struct LocalThis
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long client_thread;
}; /* size: 0x0008 */

struct LockCookie
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwWriterSeqNum;
  /* 0x0008 */ unsigned short wReaderLevel;
  /* 0x000a */ unsigned short wWriterLevel;
  /* 0x000c */ unsigned long dwThreadID;
}; /* size: 0x0010 */

class LockEntry
{
  /* 0x0000 */ class LockEntry* _pNext;
  /* 0x0004 */ class LockEntry* _pPrev;
  /* 0x0008 */ class CRWLock* _pRWLock;
  /* 0x000c */ unsigned short _wReaderLevel;
}; /* size: 0x0010 */

enum MACPICTFAILUREREASONS
{
  MACPICTUNSUPPORTED = 0,
  MACPICTCONVERSIONDLLNOTFOUND = 1,
};

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
  /* 0x0004 */ class XSLOCK m_lock;
  /* 0x004c */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x0064 */ int m_fCsInitialized;
}; /* size: 0x0068 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x000c */ int m_fDone;
  /* 0x0010 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0014 */ struct INTERFACE_HELPER_CLSID** m_pvalue;
  /* 0x0018 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x001c */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>
{
  /* 0x0004 */ class XSLOCK m_lock;
  /* 0x004c */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x0064 */ int m_fCsInitialized;
}; /* size: 0x0068 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;

class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>
{
  /* 0x0004 */ class XSLOCK m_lock;
  /* 0x004c */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x0064 */ int m_fCsInitialized;
}; /* size: 0x0068 */

class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x000c */ int m_fDone;
  /* 0x0010 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0014 */ struct TYPEINFOVTBL** m_pvalue;
  /* 0x0018 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x001c */

enum MAPPED_STREAM_OPTS
{
  MAPPED_STREAM_CREATE = 0,
  MAPPED_STREAM_QI = 1,
};

struct MAP_HASHER<MAP_KEY_GUID>
{
}; /* size: 0x0001 */

class MAP_KEY_GUID
{
  /* 0x0000 */ struct _GUID guid;
}; /* size: 0x0010 */

struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
}; /* size: 0x0068 */

struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>
{
}; /* size: 0x0068 */

struct MAP_SHARED<MAP_KEY_GUID,TYPEINFOVTBL *>
{
}; /* size: 0x0068 */

struct MARK_HANDLE_INFO
{
  /* 0x0000 */ unsigned long UsnSourceInfo;
  /* 0x0004 */ void* VolumeHandle;
  /* 0x0008 */ unsigned long HandleInfo;
}; /* size: 0x000c */

enum MCA_EXCEPTION_TYPE
{
  HAL_MCE_RECORD = 0,
  HAL_MCA_RECORD = 1,
};

struct MD_INTERFACE
{
  /* 0x0000 */ volatile long m_refs;
  /* 0x0004 */ unsigned long m_cMethods;
  /* 0x0008 */ unsigned long m_cMethodsInBaseInterface;
  /* 0x000c */ struct MD_METHOD* m_rgMethodsAlloc;
  /* 0x0010 */ struct MD_METHOD* m_rgMethods;
  /* 0x0014 */ struct MD_PARAM* m_rgParams;
  /* 0x0018 */ int m_fFreeInfoOnRelease;
  /* 0x001c */ int m_fDerivesFromIDispatch;
  /* 0x0020 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0024 */ const char* m_szInterfaceName;
  /* 0x0028 */ struct MD_INTERFACE_CACHE* m_pcache;
}; /* size: 0x002c */

struct MD_INTERFACE_CACHE
{
}; /* size: 0x0068 */

struct MD_METHOD
{
  /* 0x0000 */ unsigned long m_numberOfParams;
  /* 0x0004 */ struct PARAM_DESCRIPTION* m_params;
  /* 0x0008 */ struct INTERPRETER_OPT_FLAGS m_optFlags;
  /* 0x000c */ unsigned long m_rpcFlags;
  /* 0x0010 */ const struct _MIDL_STUB_DESC* m_pStubDesc;
  /* 0x0014 */ unsigned long m_cbPushedByCaller;
  /* 0x0018 */ unsigned short m_cbClientBuffer;
  /* 0x001a */ unsigned short m_cbServerBuffer;
  /* 0x001c */ unsigned long m_cbStackInclRet;
  /* 0x0020 */ struct __MIDL_ICallFrame_0001 m_info;
  /* 0x005c */ int m_fCanShareAllParameters;
  /* 0x0060 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0064 */ unsigned long m_iMethod;
  /* 0x0068 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x006c */ struct MD_PARAM* m_rgParams;
  /* 0x0070 */ wchar_t* m_wszMethodName;
  /* 0x0074 */ struct NDR_PROC_HEADER_EXTS* m_pHeaderExts;
}; /* size: 0x0078 */

struct MD_PARAM
{
  /* 0x0000 */ int m_fCanShare;
  /* 0x0004 */ int m_fMayHaveInterfacePointers;
}; /* size: 0x0008 */

struct MEMSTM
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long cRef;
  /* 0x0008 */ unsigned char* m_pBuf;
  /* 0x000c */ void* hGlobal;
  /* 0x0010 */ int fDeleteOnRelease;
}; /* size: 0x0014 */

struct MENUITEMTEMPLATE
{
  /* 0x0000 */ unsigned short mtOption;
  /* 0x0002 */ unsigned short mtID;
  /* 0x0004 */ wchar_t mtString[1];
}; /* size: 0x0006 */

struct MENUITEMTEMPLATEHEADER
{
  /* 0x0000 */ unsigned short versionNumber;
  /* 0x0002 */ unsigned short offset;
}; /* size: 0x0004 */

struct METHOD_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* m_szMethodName;
  /* 0x0004 */ short m_cParams;
  /* 0x0008 */ unsigned short* m_paramVTs;
}; /* size: 0x000c */

struct MFT_ENUM_DATA
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
}; /* size: 0x0018 */

class MIDEntry
{
  /* 0x0000 */ struct SStringHashNode _Node;
  /* 0x0010 */ unsigned __int64 _mid;
  /* 0x0018 */ unsigned long _cRefs;
  /* 0x001c */ unsigned long _dwFlags;
}; /* size: 0x0020 */

enum MIDL_ES_CODE
{
  MES_ENCODE = 0,
  MES_DECODE = 1,
  MES_ENCODE_NDR64 = 2,
};

enum MIDL_ES_HANDLE_STYLE
{
  MES_INCREMENTAL_HANDLE = 0,
  MES_FIXED_BUFFER_HANDLE = 1,
  MES_DYNAMIC_BUFFER_HANDLE = 2,
};

struct MINIDUMP_EXCEPTION_STREAM
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int __alignment;
  /* 0x0008 */ struct _MINIDUMP_EXCEPTION ExceptionRecord;
  /* 0x00a0 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
}; /* size: 0x00a8 */

struct MIPID
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ struct _GUID ipid;
  /* 0x0018 */ unsigned long dwApt;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct MOVE_FILE_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct MOVE_FILE_RECORD_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileRecord;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileRecord;
}; /* size: 0x0018 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0004 */ unsigned int m_cAssoc;
  /* 0x0008 */ unsigned int m_cPresent;
  /* 0x000c */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0010 */ class CListHeader m_listInUse;
}; /* size: 0x0018 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0008 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x000c */ long m_lcUse;
  /* 0x0010 */ class MAP_KEY_GUID m_d;
  /* 0x0020 */ struct INTERFACE_HELPER_CLSID* m_r;
}; /* size: 0x0024 */

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0004 */ unsigned int m_cAssoc;
  /* 0x0008 */ unsigned int m_cPresent;
  /* 0x000c */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0010 */ class CListHeader m_listInUse;
}; /* size: 0x0018 */

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0008 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x000c */ long m_lcUse;
  /* 0x0010 */ class MAP_KEY_GUID m_d;
  /* 0x0020 */ struct MD_INTERFACE* m_r;
}; /* size: 0x0024 */

class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0004 */ unsigned int m_cAssoc;
  /* 0x0008 */ unsigned int m_cPresent;
  /* 0x000c */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0010 */ class CListHeader m_listInUse;
}; /* size: 0x0018 */

class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0008 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x000c */ long m_lcUse;
  /* 0x0010 */ class MAP_KEY_GUID m_d;
  /* 0x0020 */ struct TYPEINFOVTBL* m_r;
}; /* size: 0x0024 */

class MapEnumToSQMData<enum Ole32SQMFlags>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_29
{
  DataID = 2343,
} TAG_UNNAMED_29, *PTAG_UNNAMED_29;

class MapEnumToSQMData<enum RpcssSQMFlags>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_30
{
  DataID = 2342,
} TAG_UNNAMED_30, *PTAG_UNNAMED_30;

struct MarshalParams
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long mshlflags;
}; /* size: 0x0014 */

struct MarshallingChannel
{
  /* 0x000c */ struct IMarshallingManager* m_pMarshaller;
  /* 0x0010 */ unsigned long m_dwDestContext;
  /* 0x0014 */ void* m_pvDestContext;
  /* 0x0018 */ struct IUnknown* m_punkOuter;
  /* 0x001c */ long m_refs;
}; /* size: 0x0020 */

enum NCIFLAGS
{
  NCI_HAVECLSID = 1,
  NCI_HAVEPROGID = 2,
};

struct NCryptKeyName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0004 */ wchar_t* pszAlgid;
  /* 0x0008 */ unsigned long dwLegacyKeySpec;
  /* 0x000c */ unsigned long dwFlags;
}; /* size: 0x0010 */

struct NCryptProviderName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0004 */ wchar_t* pszComment;
}; /* size: 0x0008 */

struct NDR_ALLOC_ALL_NODES_CONTEXT;

struct NDR_POINTER_QUEUE_STATE;

struct NDR_PROC_HEADER_EXTS
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
}; /* size: 0x0008 */

struct NET_ADDRESS_INFO_;

struct NOTIFY_USER_POWER_SETTING
{
  /* 0x0000 */ struct _GUID Guid;
}; /* size: 0x0010 */

struct NTFS_EXTENDED_VOLUME_DATA
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
}; /* size: 0x0008 */

struct NTFS_FILE_RECORD_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
}; /* size: 0x0008 */

struct NTFS_FILE_RECORD_OUTPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
  /* 0x0008 */ unsigned long FileRecordLength;
  /* 0x000c */ unsigned char FileRecordBuffer[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct NTFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0008 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0010 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0018 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0020 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0028 */ unsigned long BytesPerSector;
  /* 0x002c */ unsigned long BytesPerCluster;
  /* 0x0030 */ unsigned long BytesPerFileRecordSegment;
  /* 0x0034 */ unsigned long ClustersPerFileRecordSegment;
  /* 0x0038 */ union _LARGE_INTEGER MftValidDataLength;
  /* 0x0040 */ union _LARGE_INTEGER MftStartLcn;
  /* 0x0048 */ union _LARGE_INTEGER Mft2StartLcn;
  /* 0x0050 */ union _LARGE_INTEGER MftZoneStart;
  /* 0x0058 */ union _LARGE_INTEGER MftZoneEnd;
}; /* size: 0x0060 */

struct NUMPARSE
{
  /* 0x0000 */ int cDig;
  /* 0x0004 */ unsigned long dwInFlags;
  /* 0x0008 */ unsigned long dwOutFlags;
  /* 0x000c */ int cchUsed;
  /* 0x0010 */ int nBaseShift;
  /* 0x0014 */ int nPwr10;
}; /* size: 0x0018 */

struct NdrStringHeader
{
  /* 0x0000 */ unsigned long dwMax;
  /* 0x0004 */ unsigned long dwOffset;
  /* 0x0008 */ unsigned long dwActual;
}; /* size: 0x000c */

struct NdrStringPtrHeader
{
  /* 0x0000 */ unsigned long dwUnique;
  /* 0x0004 */ unsigned long dwMax;
  /* 0x0008 */ unsigned long dwOffset;
  /* 0x000c */ unsigned long dwActual;
}; /* size: 0x0010 */

class NuSafeNtHandle
{
  /* 0x0000 */ void* _handle;
}; /* size: 0x0004 */

struct OAUTIL
{
  /* 0x0000 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0004 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0008 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x000c */ int m_fWorkingOnInParam;
  /* 0x0010 */ int m_fWorkingOnOutParam;
  /* 0x0014 */ int m_fDoNotWalkInterfaces;
}; /* size: 0x0018 */

struct OLEAUTOMATION_FUNCTIONS
{
  /* 0x0000 */ struct HINSTANCE__* hOleAut32;
  /* 0x0004 */ int fProcAddressesLoaded;
  /* 0x0008 */ struct _USER_MARSHAL_ROUTINE_QUADRUPLE UserMarshalRoutines[3];
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_31
{
  UserMarshal_Index_BSTR = 0,
  UserMarshal_Index_VARIANT = 1,
  UserMarshal_Index_SafeArray = 2,
} TAG_UNNAMED_31, *PTAG_UNNAMED_31;

struct OLEAUTOMATION_FUNCTIONS::IsEqualPfn::__l11::THUNK
{
  /* 0x0000 */ unsigned char jmp[2];
  /* 0x0002 */ void** ppfn /* function */;
}; /* size: 0x0006 */

enum OLE_NOTIFICATION
{
  OLE_CHANGED = 0,
  OLE_SAVED = 1,
  OLE_CLOSED = 2,
  OLE_RENAMED = 3,
};

enum OLE_TRISTATE
{
  triUnchecked = 0,
  triChecked = 1,
  triGray = 2,
};

class OPAQUE_HANDLE<1>
{
  /* 0x0000 */ unsigned long m_h;
}; /* size: 0x0004 */

struct ORPC_DBG_ALL
{
  /* 0x0000 */ unsigned char* pSignature;
  /* 0x0004 */ struct tagRPCOLEMESSAGE* pMessage;
  /* 0x0008 */ const struct _GUID* refiid;
  /* 0x000c */ struct IRpcChannelBuffer* pChannel;
  /* 0x0010 */ struct IUnknown* pUnkProxyMgr;
  /* 0x0014 */ void* pInterface;
  /* 0x0018 */ struct IUnknown* pUnkObject;
  /* 0x001c */ HRESULT hresult;
  /* 0x0020 */ void* pvBuffer;
  /* 0x0024 */ unsigned long cbBuffer;
  /* 0x0028 */ unsigned long* lpcbBuffer;
  /* 0x002c */ void* reserved;
}; /* size: 0x0030 */

struct ORPC_INIT_ARGS
{
  /* 0x0000 */ struct IOrpcDebugNotify* lpIntfOrpcDebug;
  /* 0x0004 */ void* pvPSN;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwReserved2;
}; /* size: 0x0010 */

class OXIDEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class OXIDEntry* _pNext;
      /* 0x0004 */ class OXIDEntry* _pPrev;
      /* 0x0008 */ unsigned long _dwPid;
      /* 0x000c */ unsigned long _dwTid;
      /* 0x0010 */ struct _GUID _moxid;
      /* 0x0020 */ unsigned __int64 _mid;
      /* 0x0028 */ struct _GUID _ipidRundown;
      /* 0x0038 */ unsigned long _dwFlags;
      /* 0x003c */ struct HWND__* _hServerSTA;
      /* 0x0040 */ class CComApartment* _pParentApt;
      /* 0x0044 */ class CChannelHandle* volatile _pRpc;
      /* 0x0048 */ void* _pAuthId;
      /* 0x004c */ struct tagDUALSTRINGARRAY* _pBinding;
      /* 0x0050 */ unsigned long _dwAuthnHint;
      /* 0x0054 */ unsigned long _dwAuthnSvc;
      /* 0x0058 */ class MIDEntry* _pMIDEntry;
      /* 0x005c */ struct IRemUnknown* _pRUSTA;
      /* 0x0060 */ long _cRefs;
      /* 0x0064 */ void* _hComplete;
      /* 0x0068 */ long _cCalls;
      /* 0x006c */ long _cResolverRef;
      /* 0x0070 */ unsigned long _dwExpiredTime;
      /* 0x0074 */ struct tagCOMVERSION _version;
      /* 0x0078 */ unsigned long _ulMarshaledTargetInfoLength;
      /* 0x007c */ unsigned char* _pMarshaledTargetInfo;
    }; /* size: 0x0080 */
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x0080 */
}; /* size: 0x0080 */

struct ObjectSplayNode
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS SplayLinks;
  /* 0x000c */ void* pvObject;
  /* 0x0010 */ void* pvVtblTracking;
}; /* size: 0x0014 */

enum OfflineFolderStatus
{
  OFS_INACTIVE = -1,
  OFS_ONLINE = 0,
  OFS_OFFLINE = 1,
  OFS_SERVERBACK = 2,
  OFS_DIRTYCACHE = 3,
};

enum Ole32SQMFlags
{
  SixteenbitOLEUsage = 1,
  OLEDDEUsage = 2,
};

class OleThunkWOW
{
}; /* size: 0x0004 */

class OpaqueDataInfo
{
  /* 0x0014 */ unsigned long _cOpaqueData;
  /* 0x0018 */ unsigned long _dwCollSize;
  /* 0x001c */ struct tagOpaqueData* _pOpaqueData;
  /* 0x0020 */ void* _pAct;
}; /* size: 0x0024 */

struct PARAM_ATTRIBUTES
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short ServerAllocSize : 3; /* bit position: 13 */
  }; /* bitfield */
}; /* size: 0x0002 */

struct PARAM_DESCRIPTION
{
  /* 0x0000 */ struct PARAM_ATTRIBUTES ParamAttr;
  /* 0x0002 */ unsigned short StackOffset;
  union
  {
    /* 0x0004 */ unsigned short TypeOffset;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Unused;
    } /* size: 0x0002 */ SimpleType;
  }; /* size: 0x0002 */
}; /* size: 0x0006 */

enum PATH_TYPE
{
  PATH_TYPE_UNKNOWN = 0,
  PATH_TYPE_UNC_ABSOLUTE = 1,
  PATH_TYPE_LOCAL_DEVICE = 2,
  PATH_TYPE_ROOT_LOCAL_DEVICE = 3,
  PATH_TYPE_DRIVE_ABSOLUTE = 4,
  PATH_TYPE_DRIVE_RELATIVE = 5,
  PATH_TYPE_ROOTED = 6,
  PATH_TYPE_RELATIVE = 7,
};

class PBasicEntry
{
  /* 0x0000 */ unsigned long _sig;
  /* 0x0004 */ long _cReferences;
  /* 0x0008 */ const unsigned long _dl;
}; /* size: 0x000c */

class PDeSerStream;

class PDocFile
{
}; /* size: 0x000c */

struct PICTINFO
{
  /* 0x0000 */ void* hmf;
  /* 0x0004 */ struct tagRECT bbox;
  /* 0x0014 */ unsigned short inch;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

enum PIDMSI_STATUS_VALUE
{
  PIDMSI_STATUS_NORMAL = 0,
  PIDMSI_STATUS_NEW = 1,
  PIDMSI_STATUS_PRELIM = 2,
  PIDMSI_STATUS_DRAFT = 3,
  PIDMSI_STATUS_INPROGRESS = 4,
  PIDMSI_STATUS_EDIT = 5,
  PIDMSI_STATUS_REVIEW = 6,
  PIDMSI_STATUS_PROOF = 7,
  PIDMSI_STATUS_FINAL = 8,
  PIDMSI_STATUS_OTHER = 32767,
};

enum PIPE_ATTRIBUTE_TYPE
{
  PipeAttribute = 0,
  PipeConnectionAttribute = 1,
  PipeHandleAttribute = 2,
};

class PMSIHANDLE
{
  /* 0x0000 */ unsigned long m_h;
}; /* size: 0x0004 */

class PMemoryAllocator
{
}; /* size: 0x0004 */

struct POSTRELRIFREF
{
  /* 0x0008 */ long cRefs;
  /* 0x000c */ class OXIDEntry* pOXIDEntry;
  /* 0x0010 */ struct IRemUnknown* pRemUnk;
  /* 0x0014 */ struct IUnknown* pAsyncRelease;
  /* 0x0018 */ unsigned short cRifRef;
  /* 0x001c */ struct tagREMINTERFACEREF arRifRef;
}; /* size: 0x0034 */

struct POWERBROADCAST_SETTING
{
  /* 0x0000 */ struct _GUID PowerSetting;
  /* 0x0010 */ unsigned long DataLength;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

enum POWER_ACTION
{
  PowerActionNone = 0,
  PowerActionReserved = 1,
  PowerActionSleep = 2,
  PowerActionHibernate = 3,
  PowerActionShutdown = 4,
  PowerActionShutdownReset = 5,
  PowerActionShutdownOff = 6,
  PowerActionWarmEject = 7,
};

struct POWER_ACTION_POLICY
{
  /* 0x0000 */ enum POWER_ACTION Action;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long EventCode;
}; /* size: 0x000c */

enum POWER_INFORMATION_LEVEL
{
  SystemPowerPolicyAc = 0,
  SystemPowerPolicyDc = 1,
  VerifySystemPolicyAc = 2,
  VerifySystemPolicyDc = 3,
  SystemPowerCapabilities = 4,
  SystemBatteryState = 5,
  SystemPowerStateHandler = 6,
  ProcessorStateHandler = 7,
  SystemPowerPolicyCurrent = 8,
  AdministratorPowerPolicy = 9,
  SystemReserveHiberFile = 10,
  ProcessorInformation = 11,
  SystemPowerInformation = 12,
  ProcessorStateHandler2 = 13,
  LastWakeTime = 14,
  LastSleepTime = 15,
  SystemExecutionState = 16,
  SystemPowerStateNotifyHandler = 17,
  ProcessorPowerPolicyAc = 18,
  ProcessorPowerPolicyDc = 19,
  VerifyProcessorPowerPolicyAc = 20,
  VerifyProcessorPowerPolicyDc = 21,
  ProcessorPowerPolicyCurrent = 22,
  SystemPowerStateLogging = 23,
  SystemPowerLoggingEntry = 24,
  SetPowerSettingValue = 25,
  NotifyUserPowerSetting = 26,
  GetPowerTransitionVetoes = 27,
  SetPowerTransitionVeto = 28,
  SystemVideoState = 29,
  TraceApplicationPowerMessage = 30,
  TraceApplicationPowerMessageEnd = 31,
  ProcessorPerfStates = 32,
  ProcessorIdleStates = 33,
  ProcessorThrottleStates = 34,
  SystemWakeSource = 35,
  SystemHiberFileInformation = 36,
  TraceServicePowerMessage = 37,
  ProcessorLoad = 38,
  PowerShutdownNotification = 39,
  MonitorCapabilities = 40,
};

enum POWER_PLATFORM_ROLE
{
  PlatformRoleUnspecified = 0,
  PlatformRoleDesktop = 1,
  PlatformRoleMobile = 2,
  PlatformRoleWorkstation = 3,
  PlatformRoleEnterpriseServer = 4,
  PlatformRoleSOHOServer = 5,
  PlatformRoleAppliancePC = 6,
  PlatformRolePerformanceServer = 7,
  PlatformRoleMaximum = 8,
};

struct POWER_STATE_HANDLER
{
  /* 0x0000 */ enum POWER_STATE_HANDLER_TYPE Type;
  /* 0x0004 */ unsigned char RtcWake;
  /* 0x0005 */ unsigned char Spare[3];
  /* 0x0008 */ void* Handler /* function */;
  /* 0x000c */ void* Context;
}; /* size: 0x0010 */

enum POWER_STATE_HANDLER_TYPE
{
  PowerStateSleeping1 = 0,
  PowerStateSleeping2 = 1,
  PowerStateSleeping3 = 2,
  PowerStateSleeping4 = 3,
  PowerStateShutdownOff = 4,
  PowerStateShutdownReset = 5,
  PowerStateSleeping4Firmware = 6,
  PowerStateMaximum = 7,
};

struct POWER_STATE_NOTIFY_HANDLER
{
  /* 0x0000 */ void* Handler /* function */;
  /* 0x0004 */ void* Context;
}; /* size: 0x0008 */

enum PO_FIXED_WAKE_SOURCE_TYPE
{
  FixedWakeSourcePowerButton = 0,
  FixedWakeSourceSleepButton = 1,
  FixedWakeSourceRtc = 2,
};

enum PO_WAKE_SOURCE_TYPE
{
  DeviceWakeSourceType = 0,
  FixedWakeSourceType = 1,
};

struct PPM_IDLESTATE_EVENT
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned long OldState;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

struct PPM_IDLE_ACCOUNTING
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING State[1];
}; /* size: 0x0048 */

struct PPM_IDLE_STATE_ACCOUNTING
{
  /* 0x0000 */ unsigned long IdleTransitions;
  /* 0x0004 */ unsigned long FailedTransitions;
  /* 0x0008 */ unsigned long InvalidBucketIndex;
  /* 0x0010 */ unsigned __int64 TotalTime;
  /* 0x0018 */ unsigned long IdleTimeBuckets[6];
}; /* size: 0x0030 */

struct PPM_PERFSTATE_DOMAIN_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Latency;
  /* 0x0008 */ unsigned long Speed;
  /* 0x0010 */ unsigned __int64 Processors;
}; /* size: 0x0018 */

struct PPM_PERFSTATE_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Status;
  /* 0x0008 */ unsigned long Latency;
  /* 0x000c */ unsigned long Speed;
  /* 0x0010 */ unsigned long Processor;
}; /* size: 0x0014 */

struct PPM_SIMULATED_PROCESSOR_LOAD
{
  /* 0x0000 */ unsigned char Enabled;
  /* 0x0001 */ unsigned char PercentBusy[32];
}; /* size: 0x0021 */

struct PPM_THERMALCHANGE_EVENT
{
  /* 0x0000 */ unsigned long ThermalConstraint;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

struct PPM_THERMAL_POLICY_EVENT
{
  /* 0x0000 */ unsigned char Mode;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

struct PPM_WMI_IDLE_STATE
{
  /* 0x0000 */ unsigned long Latency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned char PromotePercent;
  /* 0x000d */ unsigned char DemotePercent;
  /* 0x000e */ unsigned char StateType;
  /* 0x000f */ unsigned char Reserved;
  /* 0x0010 */ unsigned long StateFlags;
  /* 0x0014 */ unsigned long Context;
  /* 0x0018 */ unsigned long IdleHandler;
  /* 0x001c */ unsigned long Reserved1;
}; /* size: 0x0020 */

struct PPM_WMI_IDLE_STATES
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

struct PPM_WMI_LEGACY_PERFSTATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long PercentFrequency;
}; /* size: 0x000c */

struct PPM_WMI_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ unsigned char IncreaseLevel;
  /* 0x000a */ unsigned char DecreaseLevel;
  /* 0x000b */ unsigned char Type;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0018 */ unsigned __int64 Control;
  /* 0x0020 */ unsigned __int64 Status;
  /* 0x0028 */ unsigned long HitCount;
  /* 0x002c */ unsigned long Reserved1;
  /* 0x0030 */ unsigned __int64 Reserved2;
  /* 0x0038 */ unsigned __int64 Reserved3;
}; /* size: 0x0040 */

struct PPM_WMI_PERF_STATES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0028 */ unsigned __int64 TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

struct PROCESSOR_IDLESTATE_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned char DemotePercent;
  /* 0x0005 */ unsigned char PromotePercent;
  /* 0x0006 */ unsigned char Spare[2];
}; /* size: 0x0008 */

struct PROCESSOR_IDLESTATE_POLICY
{
  /* 0x0000 */ unsigned short Revision;
  union
  {
    union
    {
      /* 0x0002 */ unsigned short AsUSHORT;
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short AllowScaling : 1; /* bit position: 0 */
        /* 0x0002 */ unsigned short Disabled : 1; /* bit position: 1 */
        /* 0x0002 */ unsigned short Reserved : 14; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Flags;
  /* 0x0004 */ unsigned long PolicyCount;
  /* 0x0008 */ struct PROCESSOR_IDLESTATE_INFO Policy[3];
}; /* size: 0x0020 */

struct PROCESSOR_IDLE_TIMES
{
  /* 0x0000 */ unsigned __int64 StartTime;
  /* 0x0008 */ unsigned __int64 EndTime;
  /* 0x0010 */ unsigned long Reserved[4];
}; /* size: 0x0020 */

struct PROCESSOR_PERFSTATE_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char MaxThrottle;
  /* 0x0005 */ unsigned char MinThrottle;
  /* 0x0006 */ unsigned char BusyAdjThreshold;
  union
  {
    /* 0x0007 */ unsigned char Spare;
    union
    {
      union
      {
        /* 0x0007 */ unsigned char AsUCHAR;
        struct /* bitfield */
        {
          /* 0x0007 */ unsigned char NoDomainAccounting : 1; /* bit position: 0 */
          /* 0x0007 */ unsigned char IncreasePolicy : 2; /* bit position: 1 */
          /* 0x0007 */ unsigned char DecreasePolicy : 2; /* bit position: 3 */
          /* 0x0007 */ unsigned char Reserved : 3; /* bit position: 5 */
        }; /* bitfield */
      }; /* size: 0x0001 */
    } /* size: 0x0001 */ Flags;
  }; /* size: 0x0001 */
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ unsigned long IncreasePercent;
  /* 0x0018 */ unsigned long DecreasePercent;
}; /* size: 0x001c */

struct PROCESSOR_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned short Latency;
  /* 0x000a */ unsigned char Type;
  /* 0x000b */ unsigned char Spare;
  /* 0x0010 */ unsigned __int64 Control;
  /* 0x0018 */ unsigned __int64 Status;
}; /* size: 0x0020 */

struct PROCESSOR_PERF_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Type;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long MaxFrequency;
  /* 0x0010 */ unsigned long TargetProcessors;
  /* 0x0014 */ void* PStateHandler /* function */;
  /* 0x0018 */ unsigned long PStateContext;
  /* 0x001c */ unsigned long PStateCap;
  /* 0x0020 */ void* TStateHandler /* function */;
  /* 0x0024 */ unsigned long TStateContext;
  /* 0x0028 */ unsigned long TStateCap;
  /* 0x002c */ void* FeedbackHandler /* function */;
  /* 0x0030 */ struct PROCESSOR_PERF_STATE State[1];
}; /* size: 0x0050 */

enum PROXY_PHASE
{
  PROXY_CALCSIZE = 0,
  PROXY_GETBUFFER = 1,
  PROXY_MARSHAL = 2,
  PROXY_SENDRECEIVE = 3,
  PROXY_UNMARSHAL = 4,
};

class PRevertable
{
  /* 0x0000 */ unsigned long _sig;
  /* 0x0004 */ unsigned long _luid;
  /* 0x0008 */ unsigned long _df;
  /* 0x000c */ class CDfName _dfn;
  /* 0x0050 */ class CBasedRevertablePtr _prvNext;
}; /* size: 0x0054 */

class PSStream
{
}; /* size: 0x000c */

enum PS_CREATE_STATE
{
  PsCreateInitialState = 0,
  PsCreateFailOnFileOpen = 1,
  PsCreateFailOnSectionCreate = 2,
  PsCreateFailExeFormat = 3,
  PsCreateFailMachineMismatch = 4,
  PsCreateFailExeName = 5,
  PsCreateSuccess = 6,
  PsCreateMaximumStates = 7,
};

class PSerStream;

class PTSetMember
{
  /* 0x0008 */ unsigned long _dlTree;
  /* 0x000c */ unsigned long _dlName;
  /* 0x0010 */ unsigned long _ulLevel;
  /* 0x0014 */ class CDfName _dfnName;
  /* 0x0056 */ const unsigned short _uType;
}; /* size: 0x0058 */

class PTimeEntry
{
}; /* size: 0x000c */

enum PULLSTATE
{
  PULLSTATE0_ENTRY = 0,
  PULLSTATE1_FIRST_CALL = 1,
  PULLSTATE2_NS_RQlsRA = 2,
  PULLSTATE3_NS_RQgeRA = 3,
  PULLSTATE4_S_RQlsBS = 4,
  PULLSTATE5_S_RQgeBS = 5,
  PULLSTATE6_DONE = 6,
};

enum PUSHSTATE
{
  PUSHSTATE0_ENTRY = 0,
  PUSHSTATE1_FIRSTCALL = 1,
  PUSHSTATE2_FS_PSgeFS = 2,
  PUSHSTATE3_FS_PSltFS = 3,
  PUSHSTATE4_FS_PSZERO = 4,
  PUSHSTATE5_DONE_ERROR = 5,
};

enum QUERY_USER_NOTIFICATION_STATE
{
  QUNS_NOT_PRESENT = 1,
  QUNS_BUSY = 2,
  QUNS_RUNNING_D3D_FULL_SCREEN = 3,
  QUNS_PRESENTATION_MODE = 4,
  QUNS_ACCEPTS_NOTIFICATIONS = 5,
};

struct READ_USN_JOURNAL_DATA
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
}; /* size: 0x0028 */

struct REF_COUNTED_STRUCT
{
  /* 0x0004 */ long m_refs;
}; /* size: 0x0008 */

struct RETRIEVAL_POINTERS_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER NextVcn;
    /* 0x0018 */ union _LARGE_INTEGER Lcn;
  } /* size: 0x0010 */ Extents[1];
}; /* size: 0x0020 */

enum RPC_ADDRESS_CHANGE_TYPE
{
  PROTOCOL_NOT_LOADED = 1,
  PROTOCOL_LOADED = 2,
  PROTOCOL_ADDRESS_CHANGE = 3,
};

struct RPC_CLIENT_INFORMATION1
{
  /* 0x0000 */ unsigned char* UserName;
  /* 0x0004 */ unsigned char* ComputerName;
  /* 0x0008 */ unsigned short Privilege;
  /* 0x000c */ unsigned long AuthFlags;
}; /* size: 0x0010 */

struct RPC_DISPATCH_TABLE
{
  /* 0x0000 */ unsigned int DispatchTableCount;
  /* 0x0004 */ void** DispatchTable /* function */;
  /* 0x0008 */ long Reserved;
}; /* size: 0x000c */

struct RPC_IF_ID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _RPC_IF_ID* IfId[1];
}; /* size: 0x0008 */

struct RPC_IMPORT_CONTEXT_P
{
  /* 0x0000 */ void* LookupContext;
  /* 0x0004 */ void* ProposedHandle;
  /* 0x0008 */ struct _RPC_BINDING_VECTOR* Bindings;
}; /* size: 0x000c */

struct RPC_STATS_VECTOR
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ unsigned long Stats[1];
}; /* size: 0x0008 */

struct RTL_ACE_DATA
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char InheritFlags;
  /* 0x0002 */ unsigned char AceFlags;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ void** Sid;
}; /* size: 0x000c */

enum RTL_BSD_ITEM_TYPE
{
  RtlBsdItemVersionNumber = 0,
  RtlBsdItemProductType = 1,
  RtlBsdItemAabEnabled = 2,
  RtlBsdItemAabTimeout = 3,
  RtlBsdItemBootGood = 4,
  RtlBsdItemBootShutdown = 5,
  RtlBsdSleepInProgress = 6,
  RtlBsdItemMax = 7,
};

struct RTL_FILTER_LUNICODE_STRING_CTX
{
  /* 0x0000 */ unsigned char* WriteCursor;
  /* 0x0004 */ unsigned char* WriteEnd;
}; /* size: 0x0008 */

struct RTL_FILTER_LUNICODE_STRING_FILTER
{
  /* 0x0000 */ void* Transform /* function */;
  /* 0x0004 */ void* Match /* function */;
  /* 0x0008 */ void* MatchContext;
  /* 0x000c */ unsigned char DropHighUnicodeValues;
  /* 0x000d */ unsigned char MatchFirst;
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

struct RegistryKeyValue
{
  /* 0x0000 */ wchar_t* key;
  /* 0x0004 */ wchar_t* value;
}; /* size: 0x0008 */

enum ReplacesCorHdrNumericDefines
{
  COMIMAGE_FLAGS_ILONLY = 1,
  COMIMAGE_FLAGS_32BITREQUIRED = 2,
  COMIMAGE_FLAGS_IL_LIBRARY = 4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COR_VERSION_MAJOR_V2 = 2,
  COR_VERSION_MAJOR = 2,
  COR_VERSION_MINOR = 0,
  COR_DELETED_NAME_LENGTH = 8,
  COR_VTABLEGAP_NAME_LENGTH = 8,
  NATIVE_TYPE_MAX_CB = 1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
  IMAGE_COR_MIH_METHODRVA = 1,
  IMAGE_COR_MIH_EHRVA = 2,
  IMAGE_COR_MIH_BASICBLOCK = 8,
  COR_VTABLE_32BIT = 1,
  COR_VTABLE_64BIT = 2,
  COR_VTABLE_FROM_UNMANAGED = 4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
  COR_VTABLE_CALL_MOST_DERIVED = 16,
  IMAGE_COR_EATJ_THUNK_SIZE = 32,
  MAX_CLASS_NAME = 1024,
  MAX_PACKAGE_NAME = 1024,
};

struct ReportedExceptions
{
  /* 0x0000 */ unsigned long dwExceptionCode;
  /* 0x0004 */ unsigned long dwReportCount;
  /* 0x0008 */ unsigned long dwMaxCount;
}; /* size: 0x000c */

enum RpcProxyPerfCounters
{
  RpcCurrentUniqueUser = 1,
  RpcBackEndConnectionAttempts = 2,
  RpcBackEndConnectionFailed = 3,
  RpcRequestsPerSecond = 4,
  RpcIncomingConnections = 5,
  RpcIncomingBandwidth = 6,
  RpcOutgoingBandwidth = 7,
  RpcAttemptedLbsDecisions = 8,
  RpcFailedLbsDecisions = 9,
  RpcAttemptedLbsMessages = 10,
  RpcFailedLbsMessages = 11,
  RpcLastCounter = 12,
};

struct SAFEARRAY_INTERNAL
{
  union
  {
    /* 0x0000 */ struct _GUID iid;
    struct
    {
      /* 0x0000 */ long __dummy0[3];
      /* 0x000c */ long vt;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ unsigned long __dummy1[3];
      /* 0x000c */ struct IRecordInfo* piri;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0010 */ struct tagSAFEARRAY array;
}; /* size: 0x0028 */

struct SAccessCache
{
  /* 0x0000 */ int fAccess;
  /* 0x0004 */ struct _LUID lClient;
}; /* size: 0x000c */

struct SBlanket
{
  /* 0x0000 */ wchar_t* _pPrincipal;
  /* 0x0004 */ unsigned long _lAuthnLevel;
  /* 0x0008 */ unsigned long _lAuthnSvc;
  /* 0x000c */ void* _pAuthId;
  /* 0x0010 */ unsigned long _lAuthzSvc;
  /* 0x0014 */ struct _RPC_SECURITY_QOS _sQos;
  /* 0x0024 */ unsigned long _lCapabilities;
  /* 0x0028 */ struct _SCHANNEL_CRED _sCred;
  /* 0x0060 */ const struct _CERT_CONTEXT* _pCert;
}; /* size: 0x0064 */

struct SC_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct SCacheEntry
{
  /* 0x0000 */ unsigned long ulOffset;
  /* 0x0004 */ unsigned long sect;
  /* 0x0008 */ unsigned long ulRunLength;
}; /* size: 0x000c */

struct SChannelHookCallInfo
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ struct _GUID uCausality;
  /* 0x0024 */ unsigned long dwServerPid;
  /* 0x0028 */ unsigned long iMethod;
  /* 0x002c */ void* pObject;
}; /* size: 0x0030 */

struct SCopyVars
{
  /* 0x0000 */ class PSStream* psstFrom;
  /* 0x0004 */ struct IStream* pstTo;
  /* 0x0008 */ class PDocFile* pdfFromChild;
  /* 0x000c */ struct IStorage* pstgToChild;
  /* 0x0010 */ unsigned long grfStateBits;
  /* 0x0014 */ struct _GUID clsid;
  /* 0x0024 */ class CDfName dfnKey;
  /* 0x0068 */ struct SIterBuffer ib;
  /* 0x00b0 */ wchar_t atcName[32];
}; /* size: 0x00f0 */

struct SDDInfo
{
  /* 0x0000 */ int fLocal;
  /* 0x0004 */ struct IPrivDragDrop* pPDP;
}; /* size: 0x0008 */

struct SDWORDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ unsigned long key;
}; /* size: 0x000c */

struct SDeltaBlock
{
  /* 0x0000 */ unsigned long _sect[16];
  /* 0x0040 */ unsigned short _fOwn[1];
  /* 0x0042 */ char __PADDING__[2];
}; /* size: 0x0044 */

struct SDfMarshalPacket
{
  /* 0x0000 */ class CBasedPubDocFilePtr pdf;
  /* 0x0004 */ class CBasedPubStreamPtr pst;
  /* 0x0008 */ class CBasedSeekPointerPtr psp;
  /* 0x000c */ class CBasedMarshalListPtr pml;
  /* 0x0010 */ class CBasedDFBasisPtr pdfb;
  /* 0x0014 */ class CBasedGlobalContextPtr pgc;
  /* 0x0018 */ class CBasedGlobalFileStreamPtr fsBase;
  /* 0x001c */ class CBasedGlobalFileStreamPtr fsDirty;
  /* 0x0020 */ class CBasedGlobalFileStreamPtr fsOriginal;
  /* 0x0024 */ unsigned long ulHeapName;
  /* 0x0028 */ unsigned long cntxid;
  /* 0x002c */ class CPerContext* ppc;
  /* 0x0030 */ void* hMem;
}; /* size: 0x0034 */

class SEMAPHORE
{
  /* 0x0000 */ void* m_hSem;
}; /* size: 0x0004 */

enum SEMRESULT
{
  SEMSUCCESS = 0,
  SEMTIMEOUT = 1,
  SEMNOBLOCK = 2,
  SEMERROR = 3,
};

enum SEMSTATE
{
  SEMSHARED = 0,
  SEMSHAREDOWNED = 1,
};

struct SERVICE_STATUS_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct SET_POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ enum SYSTEM_POWER_CONDITION PowerCondition;
  /* 0x0018 */ unsigned long DataLength;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

struct SEntryBuffer
{
  /* 0x0000 */ unsigned long luid;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long sid;
}; /* size: 0x000c */

struct SExtHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ const wchar_t* pwszExt;
}; /* size: 0x000c */

struct SFreeBlock
{
  /* 0x0000 */ class CBasedFreeBlockPtr pfbNext;
}; /* size: 0x0004 */

struct SGetFreeStruct
{
  /* 0x0000 */ struct CVectBits* pfb;
  /* 0x0004 */ unsigned long sect;
  /* 0x0008 */ class CFatSect* pfs;
  /* 0x000c */ unsigned short isect;
  /* 0x0010 */ unsigned long ipfs;
  /* 0x0014 */ unsigned long sectLast;
  /* 0x0018 */ unsigned long ipfsLast;
  /* 0x001c */ unsigned short isectLast;
  /* 0x0020 */ class CFatSect* pfsNoScratch;
  /* 0x0024 */ unsigned long ipfsNoScratch;
}; /* size: 0x0028 */

struct SHA256_CTX
{
  /* 0x0000 */ unsigned long state[8];
  /* 0x0020 */ unsigned long count[2];
  /* 0x0028 */ unsigned char buffer[64];
}; /* size: 0x0068 */

struct SHA512_CTX
{
  /* 0x0000 */ unsigned __int64 state[8];
  /* 0x0040 */ unsigned __int64 count[2];
  /* 0x0050 */ unsigned char buffer[128];
}; /* size: 0x00d0 */

struct SHELLHOOKINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ struct tagRECT rc;
}; /* size: 0x0014 */

enum SHSTOCKICONID
{
  SIID_DOCNOASSOC = 0,
  SIID_DOCASSOC = 1,
  SIID_APPLICATION = 2,
  SIID_FOLDER = 3,
  SIID_FOLDEROPEN = 4,
  SIID_DRIVE525 = 5,
  SIID_DRIVE35 = 6,
  SIID_DRIVEREMOVE = 7,
  SIID_DRIVEFIXED = 8,
  SIID_DRIVENET = 9,
  SIID_DRIVENETDISABLED = 10,
  SIID_DRIVECD = 11,
  SIID_DRIVERAM = 12,
  SIID_WORLD = 13,
  SIID_SERVER = 15,
  SIID_PRINTER = 16,
  SIID_MYNETWORK = 17,
  SIID_FIND = 22,
  SIID_HELP = 23,
  SIID_SHARE = 28,
  SIID_LINK = 29,
  SIID_SLOWFILE = 30,
  SIID_RECYCLER = 31,
  SIID_RECYCLERFULL = 32,
  SIID_MEDIACDAUDIO = 40,
  SIID_LOCK = 47,
  SIID_AUTOLIST = 49,
  SIID_PRINTERNET = 50,
  SIID_SERVERSHARE = 51,
  SIID_PRINTERFAX = 52,
  SIID_PRINTERFAXNET = 53,
  SIID_PRINTERFILE = 54,
  SIID_STACK = 55,
  SIID_MEDIASVCD = 56,
  SIID_STUFFEDFOLDER = 57,
  SIID_DRIVEUNKNOWN = 58,
  SIID_DRIVEDVD = 59,
  SIID_MEDIADVD = 60,
  SIID_MEDIADVDRAM = 61,
  SIID_MEDIADVDRW = 62,
  SIID_MEDIADVDR = 63,
  SIID_MEDIADVDROM = 64,
  SIID_MEDIACDAUDIOPLUS = 65,
  SIID_MEDIACDRW = 66,
  SIID_MEDIACDR = 67,
  SIID_MEDIACDBURN = 68,
  SIID_MEDIABLANKCD = 69,
  SIID_MEDIACDROM = 70,
  SIID_AUDIOFILES = 71,
  SIID_IMAGEFILES = 72,
  SIID_VIDEOFILES = 73,
  SIID_MIXEDFILES = 74,
  SIID_FOLDERBACK = 75,
  SIID_FOLDERFRONT = 76,
  SIID_SHIELD = 77,
  SIID_WARNING = 78,
  SIID_INFO = 79,
  SIID_ERROR = 80,
  SIID_KEY = 81,
  SIID_SOFTWARE = 82,
  SIID_RENAME = 83,
  SIID_DELETE = 84,
  SIID_MEDIAAUDIODVD = 85,
  SIID_MEDIAMOVIEDVD = 86,
  SIID_MEDIAENHANCEDCD = 87,
  SIID_MEDIAENHANCEDDVD = 88,
  SIID_MEDIAHDDVD = 89,
  SIID_MEDIABLURAY = 90,
  SIID_MEDIAVCD = 91,
  SIID_MEDIADVDPLUSR = 92,
  SIID_MEDIADVDPLUSRW = 93,
  SIID_DESKTOPPC = 94,
  SIID_MOBILEPC = 95,
  SIID_USERS = 96,
  SIID_MEDIASMARTMEDIA = 97,
  SIID_MEDIACOMPACTFLASH = 98,
  SIID_DEVICECELLPHONE = 99,
  SIID_DEVICECAMERA = 100,
  SIID_DEVICEVIDEOCAMERA = 101,
  SIID_DEVICEAUDIOPLAYER = 102,
  SIID_NETWORKCONNECT = 103,
  SIID_INTERNET = 104,
  SIID_ZIPFILE = 105,
  SIID_SETTINGS = 106,
  SIID_DRIVEHDDVD = 132,
  SIID_DRIVEBD = 133,
  SIID_MEDIAHDDVDROM = 134,
  SIID_MEDIAHDDVDR = 135,
  SIID_MEDIAHDDVDRAM = 136,
  SIID_MEDIABDROM = 137,
  SIID_MEDIABDR = 138,
  SIID_MEDIABDRE = 139,
  SIID_CLUSTEREDDRIVE = 140,
  SIID_MAX_ICONS = 141,
};

struct SHashChain
{
  /* 0x0000 */ struct SHashChain* pNext;
  /* 0x0004 */ struct SHashChain* pPrev;
}; /* size: 0x0008 */

struct SHookList
{
  /* 0x0000 */ struct SHookList* pNext;
  /* 0x0004 */ struct IChannelHook* pHook;
  /* 0x0008 */ struct _GUID uExtension;
}; /* size: 0x0018 */

struct SIP_DISPATCH_INFO_;

struct SIP_INDIRECT_DATA_;

struct SIP_SUBJECTINFO_;

struct SIterBuffer
{
  /* 0x0000 */ class CDfName dfnName;
  /* 0x0044 */ unsigned long type;
}; /* size: 0x0048 */

struct SMIPIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ struct MIPID mipid;
}; /* size: 0x0028 */

struct SMultiGUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ struct SMultiGUIDKey key;
}; /* size: 0x0010 */

struct SMultiGUIDKey
{
  /* 0x0000 */ int cGUID;
  /* 0x0004 */ struct _GUID* aGUID;
}; /* size: 0x0008 */

struct SNameHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ unsigned long dwHash;
  /* 0x000c */ unsigned long cRef;
  /* 0x0010 */ struct _GUID ipid;
  /* 0x0020 */ struct tagSECURITYBINDING sName;
  /* 0x0026 */ char __PADDING__[2];
}; /* size: 0x0028 */

struct SNameKey
{
  /* 0x0000 */ const struct _GUID* pIpid;
  /* 0x0004 */ struct tagSECURITYBINDING* pName;
}; /* size: 0x0008 */

struct SOIDRegistration
{
  /* 0x0000 */ struct SUUIDHashNode Node;
  /* 0x0018 */ unsigned short cRefs;
  /* 0x001a */ unsigned short flags;
  /* 0x0020 */ unsigned __int64 mid;
  /* 0x0028 */ unsigned __int64 oxid;
  /* 0x0030 */ struct SOIDRegistration* pPrevList;
  /* 0x0034 */ struct SOIDRegistration* pNextList;
  /* 0x0038 */ class CRefCache* pRefCache;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

struct SPC_LINK_
{
  /* 0x0000 */ unsigned long dwLinkChoice;
  union
  {
    /* 0x0004 */ wchar_t* pwszUrl;
    /* 0x0004 */ struct _SPC_SERIALIZED_OBJECT Moniker;
    struct
    {
      /* 0x0004 */ wchar_t* pwszFile;
      /* 0x0008 */ long __PADDING__[5];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x001c */

struct SPC_SIGINFO_
{
  /* 0x0000 */ unsigned long dwSipVersion;
  /* 0x0004 */ struct _GUID gSIPGuid;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ unsigned long dwReserved3;
  /* 0x0020 */ unsigned long dwReserved4;
  /* 0x0024 */ unsigned long dwReserved5;
}; /* size: 0x0028 */

struct SPatternEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long ulEntryLen;
  /* 0x0014 */ long lFileOffset;
  /* 0x0018 */ unsigned long ulCb;
  /* 0x001c */ unsigned char abData[4];
}; /* size: 0x0020 */

struct SPendingCall
{
  /* 0x0000 */ struct SPendingCall* pNext;
  /* 0x0004 */ struct SPendingCall* pPrev;
  /* 0x0008 */ class CChannelObject* pChnlObj;
}; /* size: 0x000c */

struct SPermissionHeader
{
  /* 0x0000 */ unsigned short wVersion;
  /* 0x0002 */ unsigned short wPad;
  /* 0x0004 */ struct _GUID gClass;
}; /* size: 0x0014 */

struct SPointerHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ void* key;
}; /* size: 0x000c */

struct SPreDirEntry
{
  /* 0x0000 */ class CDfName _dfn;
  /* 0x0042 */ unsigned char _mse;
  /* 0x0043 */ unsigned char _bflags;
  /* 0x0044 */ unsigned long _sidLeftSib;
  /* 0x0048 */ unsigned long _sidRightSib;
  /* 0x004c */ unsigned long _sidChild;
  /* 0x0050 */ struct _GUID _clsId;
  /* 0x0060 */ unsigned long _dwUserFlags;
  /* 0x0064 */ struct _FILETIME _time[2];
  /* 0x0074 */ unsigned long _sectStart;
  /* 0x0078 */ union _ULARGE_INTEGER _ulSize;
}; /* size: 0x0080 */

struct SPreHeader
{
  /* 0x0018 */ unsigned short _uMinorVersion;
  /* 0x001a */ unsigned short _uDllVersion;
  /* 0x001c */ unsigned short _uByteOrder;
  /* 0x001e */ unsigned short _uSectorShift;
  /* 0x0020 */ unsigned short _uMiniSectorShift;
  /* 0x0022 */ unsigned short _usReserved;
  /* 0x0024 */ unsigned long _ulReserved1;
  /* 0x0028 */ unsigned long _csectDir;
  /* 0x002c */ unsigned long _csectFat;
  /* 0x0030 */ unsigned long _sectDirStart;
  /* 0x0034 */ unsigned long _signature;
  /* 0x0038 */ unsigned long _ulMiniSectorCutoff;
  /* 0x003c */ unsigned long _sectMiniFatStart;
  /* 0x0040 */ unsigned long _csectMiniFat;
  /* 0x0044 */ unsigned long _sectDifStart;
  /* 0x0048 */ unsigned long _csectDif;
}; /* size: 0x004c */

enum SQM_TYPE
{
  SQM_TYPE_NONE = 0,
  SQM_TYPE_DWORD = 1,
  SQM_TYPE_STRING = 2,
};

struct SSegment
{
  /* 0x0000 */ unsigned long ulOffset;
  /* 0x0004 */ unsigned long sectStart;
  /* 0x0008 */ unsigned long cSect;
}; /* size: 0x000c */

struct SSimpleWalker
{
  /* 0x0004 */ unsigned long _cItfs;
  /* 0x0008 */ struct IUnknown* _arpUnk[10];
  /* 0x0030 */ struct IUnknown** _ppUnk;
}; /* size: 0x0034 */

struct SStorageFile
{
  /* 0x0000 */ unsigned char abSig[8];
  /* 0x0008 */ struct _GUID _clid;
}; /* size: 0x0018 */

struct SStringHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ unsigned long dwHash;
  /* 0x000c */ struct tagDUALSTRINGARRAY* psaKey;
}; /* size: 0x0010 */

struct STARTING_LCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
}; /* size: 0x0008 */

struct STARTING_VCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingVcn;
}; /* size: 0x0008 */

enum STUB_PHASE
{
  STUB_UNMARSHAL = 0,
  STUB_CALL_SERVER = 1,
  STUB_MARSHAL = 2,
  STUB_CALL_SERVER_NO_HRESULT = 3,
};

struct STblHdr
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long cbLargest;
  /* 0x0008 */ unsigned long OffsStart;
  /* 0x000c */ unsigned long OffsEnd;
}; /* size: 0x0010 */

struct STwoBits
{
  /* 0x0000 */ void* _hEvent;
  /* 0x0004 */ unsigned long _dwCookie;
}; /* size: 0x0008 */

struct SUUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0008 */ struct _GUID key;
}; /* size: 0x0018 */

struct SYMSRV_INDEX_INFO
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ char file[261];
  /* 0x010c */ int stripped;
  /* 0x0110 */ unsigned long timestamp;
  /* 0x0114 */ unsigned long size;
  /* 0x0118 */ char dbgfile[261];
  /* 0x021d */ char pdbfile[261];
  /* 0x0324 */ struct _GUID guid;
  /* 0x0334 */ unsigned long sig;
  /* 0x0338 */ unsigned long age;
}; /* size: 0x033c */

struct SYMSRV_INDEX_INFOW
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ wchar_t file[261];
  /* 0x0210 */ int stripped;
  /* 0x0214 */ unsigned long timestamp;
  /* 0x0218 */ unsigned long size;
  /* 0x021c */ wchar_t dbgfile[261];
  /* 0x0426 */ wchar_t pdbfile[261];
  /* 0x0630 */ struct _GUID guid;
  /* 0x0640 */ unsigned long sig;
  /* 0x0644 */ unsigned long age;
}; /* size: 0x0648 */

enum SYM_TYPE
{
  SymNone = 0,
  SymCoff = 1,
  SymCv = 2,
  SymPdb = 3,
  SymExport = 4,
  SymDeferred = 5,
  SymSym = 6,
  SymDia = 7,
  SymVirtual = 8,
  NumSymTypes = 9,
};

enum SYNCMGR_CANCEL_REQUEST
{
  SYNCMGR_CR_NONE = 0,
  SYNCMGR_CR_CANCEL_ITEM = 1,
  SYNCMGR_CR_CANCEL_ALL = 2,
  SYNCMGR_CR_MAX = 2,
};

enum SYNCMGR_CONFLICT_ITEM_TYPE
{
};

enum SYNCMGR_EVENT_LEVEL
{
  SYNCMGR_EL_INFORMATION = 1,
  SYNCMGR_EL_WARNING = 2,
  SYNCMGR_EL_ERROR = 3,
  SYNCMGR_EL_MAX = 3,
};

enum SYNCMGR_HANDLER_POLICIES
{
  SYNCMGR_HPM_NONE = 0,
  SYNCMGR_HPM_PREVENT_ACTIVATE = 1,
  SYNCMGR_HPM_PREVENT_DEACTIVATE = 2,
  SYNCMGR_HPM_PREVENT_ENABLE = 4,
  SYNCMGR_HPM_PREVENT_DISABLE = 8,
  SYNCMGR_HPM_PREVENT_START_SYNC = 16,
  SYNCMGR_HPM_PREVENT_STOP_SYNC = 32,
  SYNCMGR_HPM_DISABLE_ENABLE = 256,
  SYNCMGR_HPM_DISABLE_DISABLE = 512,
  SYNCMGR_HPM_DISABLE_START_SYNC = 1024,
  SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048,
  SYNCMGR_HPM_DISABLE_BROWSE = 4096,
  SYNCMGR_HPM_DISABLE_SCHEDULE = 8192,
  SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 0x10000,
  SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48,
  SYNCMGR_HPM_VALID_MASK = 0x12f3f,
};

enum SYNCMGR_HANDLER_TYPE
{
  SYNCMGR_HT_UNSPECIFIED = 0,
  SYNCMGR_HT_APPLICATION = 1,
  SYNCMGR_HT_DEVICE = 2,
  SYNCMGR_HT_FOLDER = 3,
  SYNCMGR_HT_SERVICE = 4,
  SYNCMGR_HT_COMPUTER = 5,
  SYNCMGR_HT_MIN = 0,
  SYNCMGR_HT_MAX = 5,
};

enum SYNCMGR_PRESENTER_CHOICE
{
  SYNCMGR_PC_NO_CHOICE = 0,
  SYNCMGR_PC_KEEP_ONE = 1,
  SYNCMGR_PC_KEEP_MULTIPLE = 2,
  SYNCMGR_PC_KEEP_RECENT = 3,
  SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4,
  SYNCMGR_PC_SKIP = 5,
};

enum SYNCMGR_PRESENTER_NEXT_STEP
{
  SYNCMGR_PNS_CONTINUE = 0,
  SYNCMGR_PNS_DEFAULT = 1,
  SYNCMGR_PNS_CANCEL = 2,
};

enum SYNCMGR_PROGRESS_STATUS
{
  SYNCMGR_PS_UPDATING = 1,
  SYNCMGR_PS_UPDATING_INDETERMINATE = 2,
  SYNCMGR_PS_SUCCEEDED = 3,
  SYNCMGR_PS_FAILED = 4,
  SYNCMGR_PS_CANCELED = 5,
  SYNCMGR_PS_DISCONNECTED = 6,
  SYNCMGR_PS_MAX = 6,
};

enum SYNCMGR_RESOLUTION_FEEDBACK
{
  SYNCMGR_RF_CONTINUE = 0,
  SYNCMGR_RF_REFRESH = 1,
  SYNCMGR_RF_CANCEL = 2,
};

enum SYNCMGR_UPDATE_REASON
{
  SYNCMGR_UR_ADDED = 0,
  SYNCMGR_UR_CHANGED = 1,
  SYNCMGR_UR_REMOVED = 2,
  SYNCMGR_UR_MAX = 2,
};

struct SYNTHESIZED_MAP
{
  /* 0x0000 */ unsigned short cfSynthesized;
  /* 0x0002 */ unsigned short cfOrig;
}; /* size: 0x0004 */

enum SYSGEOCLASS
{
  GEOCLASS_NATION = 16,
  GEOCLASS_REGION = 14,
};

enum SYSGEOTYPE
{
  GEO_NATION = 1,
  GEO_LATITUDE = 2,
  GEO_LONGITUDE = 3,
  GEO_ISO2 = 4,
  GEO_ISO3 = 5,
  GEO_RFC1766 = 6,
  GEO_LCID = 7,
  GEO_FRIENDLYNAME = 8,
  GEO_OFFICIALNAME = 9,
  GEO_TIMEZONES = 10,
  GEO_OFFICIALLANGUAGES = 11,
};

enum SYSNLS_FUNCTION
{
  COMPARE_STRING = 1,
};

struct SYSTEM_BATTERY_STATE
{
  /* 0x0000 */ unsigned char AcOnLine;
  /* 0x0001 */ unsigned char BatteryPresent;
  /* 0x0002 */ unsigned char Charging;
  /* 0x0003 */ unsigned char Discharging;
  /* 0x0004 */ unsigned char Spare1[4];
  /* 0x0008 */ unsigned long MaxCapacity;
  /* 0x000c */ unsigned long RemainingCapacity;
  /* 0x0010 */ unsigned long Rate;
  /* 0x0014 */ unsigned long EstimatedTime;
  /* 0x0018 */ unsigned long DefaultAlert1;
  /* 0x001c */ unsigned long DefaultAlert2;
}; /* size: 0x0020 */

struct SYSTEM_POWER_CAPABILITIES
{
  /* 0x0000 */ unsigned char PowerButtonPresent;
  /* 0x0001 */ unsigned char SleepButtonPresent;
  /* 0x0002 */ unsigned char LidPresent;
  /* 0x0003 */ unsigned char SystemS1;
  /* 0x0004 */ unsigned char SystemS2;
  /* 0x0005 */ unsigned char SystemS3;
  /* 0x0006 */ unsigned char SystemS4;
  /* 0x0007 */ unsigned char SystemS5;
  /* 0x0008 */ unsigned char HiberFilePresent;
  /* 0x0009 */ unsigned char FullWake;
  /* 0x000a */ unsigned char VideoDimPresent;
  /* 0x000b */ unsigned char ApmPresent;
  /* 0x000c */ unsigned char UpsPresent;
  /* 0x000d */ unsigned char ThermalControl;
  /* 0x000e */ unsigned char ProcessorThrottle;
  /* 0x000f */ unsigned char ProcessorMinThrottle;
  /* 0x0010 */ unsigned char ProcessorMaxThrottle;
  /* 0x0011 */ unsigned char FastSystemS4;
  /* 0x0012 */ unsigned char spare2[3];
  /* 0x0015 */ unsigned char DiskSpinDown;
  /* 0x0016 */ unsigned char spare3[8];
  /* 0x001e */ unsigned char SystemBatteriesPresent;
  /* 0x001f */ unsigned char BatteriesAreShortTerm;
  /* 0x0020 */ struct BATTERY_REPORTING_SCALE BatteryScale[3];
  /* 0x0038 */ enum _SYSTEM_POWER_STATE AcOnLineWake;
  /* 0x003c */ enum _SYSTEM_POWER_STATE SoftLidWake;
  /* 0x0040 */ enum _SYSTEM_POWER_STATE RtcWake;
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinDeviceWakeState;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
}; /* size: 0x004c */

enum SYSTEM_POWER_CONDITION
{
  PoAc = 0,
  PoDc = 1,
  PoHot = 2,
  PoConditionMaximum = 3,
};

struct SYSTEM_POWER_LEVEL
{
  /* 0x0000 */ unsigned char Enable;
  /* 0x0001 */ unsigned char Spare[3];
  /* 0x0004 */ unsigned long BatteryLevel;
  /* 0x0008 */ struct POWER_ACTION_POLICY PowerPolicy;
  /* 0x0014 */ enum _SYSTEM_POWER_STATE MinSystemState;
}; /* size: 0x0018 */

class SafeBytePtr
{
  /* 0x0000 */ unsigned char* _p;
}; /* size: 0x0004 */

class SafeCExposedDocFile
{
  /* 0x0000 */ class CExposedDocFile* _p;
}; /* size: 0x0004 */

class SafeCExposedIterator
{
  /* 0x0000 */ struct CExposedIterator* _p;
}; /* size: 0x0004 */

class SafeCExposedStream
{
  /* 0x0000 */ class CExposedStream* _p;
}; /* size: 0x0004 */

class SafeIStorage
{
  /* 0x0000 */ struct IStorage* _p;
}; /* size: 0x0004 */

class SafeIStream
{
  /* 0x0000 */ struct IStream* _p;
}; /* size: 0x0004 */

class SafeIUnknown
{
  /* 0x0000 */ struct IUnknown* _p;
}; /* size: 0x0004 */

class SafeNtHandle
{
  /* 0x0000 */ void* _handle;
}; /* size: 0x0004 */

class ScmReplyInfo
{
  /* 0x0014 */ struct tagScmReplyInfoData _scmReplyInfoData;
}; /* size: 0x001c */

class ScmRequestInfo
{
  /* 0x0014 */ struct tagScmRequestInfoData _scmRequestInfoData;
}; /* size: 0x001c */

class SecurityInfo
{
  /* 0x0018 */ struct tagSecurityInfoData _securityInfoData;
  /* 0x0024 */ struct tagSecurityInfoData _securityInfoDataFixedUp;
  /* 0x0030 */ unsigned long _dwFixupServerInfoBufSize;
}; /* size: 0x0034 */

class SerializableProperty
{
  /* 0x0004 */ struct ISerializableParent* _parent;
  /* 0x0008 */ int _unSerialized;
  /* 0x000c */ int _added;
}; /* size: 0x0010 */

class SerializedPropertyReader
{
  /* 0x0000 */ const unsigned char* m_pbPos;
  /* 0x0004 */ unsigned long m_cbRead;
  /* 0x0008 */ unsigned long m_cbRemain;
}; /* size: 0x000c */

class Serializer
{
  /* 0x0000 */ struct IStream* _pStream;
  /* 0x0004 */ struct IStream* _pOriginalStream;
  /* 0x0008 */ struct IBuffer* _pIBuff;
  /* 0x000c */ unsigned char* _buffer;
  /* 0x0010 */ unsigned long _nWritten;
  /* 0x0014 */ unsigned long _bufSize;
  /* 0x0018 */ unsigned long _operationSize;
  /* 0x001c */ void* _handle;
  /* 0x0020 */ long _clRefs;
  /* 0x0024 */ unsigned long _direction;
  /* 0x0028 */ unsigned long _position;
  /* 0x002c */ unsigned long _start;
  /* 0x0030 */ unsigned long _dwMaxDestCtx;
  /* 0x0034 */ unsigned long _dwCurrentDestCtx;
  /* 0x0038 */ unsigned long _dwMarshalFlags;
}; /* size: 0x003c */

typedef enum _TAG_UNNAMED_32
{
  DIRECTION_READ = 1,
  DIRECTION_WRITE = 2,
} TAG_UNNAMED_32, *PTAG_UNNAMED_32;

struct ServerContextWorkData
{
  /* 0x0000 */ struct IActivationPropertiesIn* pInActProps;
  /* 0x0004 */ class GenericStream xrpcOutProps;
}; /* size: 0x0028 */

class ServerLocationInfo
{
  /* 0x0014 */ struct tagLocationInfoData _locationInfoData;
  /* 0x0024 */ class CObjectContext* _pObjectContext;
  /* 0x0028 */ struct ISpecialSystemProperties* _pISSP;
}; /* size: 0x002c */

class SpecialProperties
{
  /* 0x0018 */ struct tagSpecialPropertiesData _data;
}; /* size: 0x0070 */

struct SystemBlockHeader
{
  /* 0x0000 */ long lIndex;
  /* 0x0004 */ unsigned long ulSignature;
}; /* size: 0x0008 */

struct SystemPageEntry
{
  /* 0x0008 */ struct SystemBlockHeader* pHeapBlock;
}; /* size: 0x000c */

enum TERMINATE_DOCUMENT
{
  Terminate_None = 0,
  Terminate_Detect = 1,
  Terminate_Received = 2,
};

class TStackBuffer<tagPROPVARIANT,64>
{
  /* 0x0010 */ struct tagPROPVARIANT _rg[64];
}; /* size: 0x0410 */

class TStackBuffer<unsigned long,64>
{
  /* 0x0010 */ unsigned long _rg[64];
}; /* size: 0x0110 */

class TStackBuffer<unsigned short *,64>;

class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64>
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class TXLargeIntegerWrapper<_ULARGE_INTEGER,unsigned long,unsigned __int64>
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

enum TXTTYPE
{
  TT_UNICODE = 0,
  TT_ANSI = 1,
};

struct TYPEINFOVTBL
{
  /* 0x0020 */ char* m_szInterfaceName;
  /* 0x0024 */ struct METHOD_DESCRIPTOR* m_rgMethodDescs;
  /* 0x0028 */ struct _GUID m_iidBase;
  /* 0x0038 */ struct _MIDL_STUB_DESC m_stubDesc;
  /* 0x0088 */ struct _MIDL_SERVER_INFO_ m_stubInfo;
  /* 0x00a8 */ struct tagCInterfaceStubVtbl m_stubVtbl;
  /* 0x00e0 */ struct _MIDL_STUBLESS_PROXY_INFO m_proxyInfo;
  /* 0x00f8 */ struct tagCInterfaceProxyVtbl m_proxyVtbl;
}; /* size: 0x0100 */

struct Thread
{
  /* 0x0000 */ class LockEntry* pHead;
  /* 0x0004 */ class LockEntry* pLastEmbeddedEnty;
  /* 0x0008 */ class LockEntry embeddedEntry[1];
}; /* size: 0x0018 */

struct UDATE
{
  /* 0x0000 */ struct _SYSTEMTIME st;
  /* 0x0010 */ unsigned short wDayOfYear;
}; /* size: 0x0012 */

struct USERPREFS
{
  /* 0x0000 */ char signature[6];
  /* 0x0006 */ unsigned short version;
  /* 0x0008 */ unsigned short size;
  /* 0x000c */ char* sourceFilename;
  /* 0x0010 */ void* sourceHandle;
  /* 0x0014 */ char* destinationFilename;
  /* 0x0018 */ unsigned char penPatternAction;
  /* 0x0019 */ unsigned char nonSquarePenAction;
  /* 0x001a */ unsigned char penModeAction;
  /* 0x001b */ unsigned char textModeAction;
  /* 0x001c */ unsigned char nonRectRegionAction;
  /* 0x0020 */ int optimizePP;
  /* 0x0024 */ unsigned short reserved[6];
}; /* size: 0x0030 */

struct USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0038 */

struct USN_RECORD
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned __int64 FileReferenceNumber;
  /* 0x0010 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0018 */ __int64 Usn;
  /* 0x0020 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0028 */ unsigned long Reason;
  /* 0x002c */ unsigned long SourceInfo;
  /* 0x0030 */ unsigned long SecurityId;
  /* 0x0034 */ unsigned long FileAttributes;
  /* 0x0038 */ unsigned short FileNameLength;
  /* 0x003a */ unsigned short FileNameOffset;
  /* 0x003c */ wchar_t FileName[1];
  /* 0x003e */ char __PADDING__[2];
}; /* size: 0x0040 */

enum UlIsEntry
{
  UIE_CURRENT = 0,
  UIE_ORIGINAL = 1,
  UIE_NOTFOUND = 2,
};

enum VARENUM
{
  VT_EMPTY = 0,
  VT_NULL = 1,
  VT_I2 = 2,
  VT_I4 = 3,
  VT_R4 = 4,
  VT_R8 = 5,
  VT_CY = 6,
  VT_DATE = 7,
  VT_BSTR = 8,
  VT_DISPATCH = 9,
  VT_ERROR = 10,
  VT_BOOL = 11,
  VT_VARIANT = 12,
  VT_UNKNOWN = 13,
  VT_DECIMAL = 14,
  VT_I1 = 16,
  VT_UI1 = 17,
  VT_UI2 = 18,
  VT_UI4 = 19,
  VT_I8 = 20,
  VT_UI8 = 21,
  VT_INT = 22,
  VT_UINT = 23,
  VT_VOID = 24,
  VT_HRESULT = 25,
  VT_PTR = 26,
  VT_SAFEARRAY = 27,
  VT_CARRAY = 28,
  VT_USERDEFINED = 29,
  VT_LPSTR = 30,
  VT_LPWSTR = 31,
  VT_RECORD = 36,
  VT_INT_PTR = 37,
  VT_UINT_PTR = 38,
  VT_FILETIME = 64,
  VT_BLOB = 65,
  VT_STREAM = 66,
  VT_STORAGE = 67,
  VT_STREAMED_OBJECT = 68,
  VT_STORED_OBJECT = 69,
  VT_BLOB_OBJECT = 70,
  VT_CF = 71,
  VT_CLSID = 72,
  VT_VERSIONED_STREAM = 73,
  VT_BSTR_BLOB = 4095,
  VT_VECTOR = 4096,
  VT_ARRAY = 8192,
  VT_BYREF = 16384,
  VT_RESERVED = 0xffff8000,
  VT_ILLEGAL = 0xffffffff,
  VT_ILLEGALMASKED = 4095,
  VT_TYPEMASK = 4095,
};

enum VERIFIER_MODE
{
  VERIFIER_MODE_UNUSED = 0,
  VERIFIER_MODE_TRIAGE = 1,
  VERIFIER_MODE_FIELD = 2,
  VERIFIER_MODE_LOGO = 3,
  VERIFIER_MODE_TEST = 4,
};

struct VOLUME_BITMAP_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0008 */ union _LARGE_INTEGER BitmapSize;
  /* 0x0010 */ unsigned char Buffer[1];
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

enum VSAParameterType
{
  cVSAParameterKeyMask = -2147483648,
  cVSAParameterKeyString = -2147483648,
  cVSAParameterValueMask = 0x7ffff,
  cVSAParameterValueTypeMask = 0x70000,
  cVSAParameterValueUnicodeString = 0,
  cVSAParameterValueANSIString = 0x10000,
  cVSAParameterValueGUID = 0x20000,
  cVSAParameterValueDWORD = 0x30000,
  cVSAParameterValueBYTEArray = 0x40000,
  cVSAParameterValueLengthMask = 0xffffffff,
};

enum VSAStandardParameter
{
  cVSAStandardParameterSourceMachine = 0,
  cVSAStandardParameterSourceProcess = 1,
  cVSAStandardParameterSourceThread = 2,
  cVSAStandardParameterSourceComponent = 3,
  cVSAStandardParameterSourceSession = 4,
  cVSAStandardParameterTargetMachine = 5,
  cVSAStandardParameterTargetProcess = 6,
  cVSAStandardParameterTargetThread = 7,
  cVSAStandardParameterTargetComponent = 8,
  cVSAStandardParameterTargetSession = 9,
  cVSAStandardParameterSecurityIdentity = 10,
  cVSAStandardParameterCausalityID = 11,
  cVSAStandardParameterNoDefault = 16384,
  cVSAStandardParameterSourceHandle = 16384,
  cVSAStandardParameterTargetHandle = 16385,
  cVSAStandardParameterArguments = 16386,
  cVSAStandardParameterReturnValue = 16387,
  cVSAStandardParameterException = 16388,
  cVSAStandardParameterCorrelationID = 16389,
};

struct VerbList
{
  /* 0x0000 */ unsigned long cRef;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long cVerbs;
  /* 0x0018 */ struct tagOLEVERB oleverb[1];
}; /* size: 0x0028 */

struct VerifierThreadState
{
  /* 0x0000 */ unsigned long cComInits;
  /* 0x0004 */ unsigned long cOleInits;
  /* 0x0008 */ struct _GUID guidContext;
  /* 0x0018 */ void* pvTopSWCNode;
}; /* size: 0x001c */

struct VtblSplayNode
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS SplayLinks;
  /* 0x000c */ void* pvVtbl;
  /* 0x0010 */ unsigned long cRefs;
}; /* size: 0x0014 */

enum WELL_KNOWN_SID_TYPE
{
  WinNullSid = 0,
  WinWorldSid = 1,
  WinLocalSid = 2,
  WinCreatorOwnerSid = 3,
  WinCreatorGroupSid = 4,
  WinCreatorOwnerServerSid = 5,
  WinCreatorGroupServerSid = 6,
  WinNtAuthoritySid = 7,
  WinDialupSid = 8,
  WinNetworkSid = 9,
  WinBatchSid = 10,
  WinInteractiveSid = 11,
  WinServiceSid = 12,
  WinAnonymousSid = 13,
  WinProxySid = 14,
  WinEnterpriseControllersSid = 15,
  WinSelfSid = 16,
  WinAuthenticatedUserSid = 17,
  WinRestrictedCodeSid = 18,
  WinTerminalServerSid = 19,
  WinRemoteLogonIdSid = 20,
  WinLogonIdsSid = 21,
  WinLocalSystemSid = 22,
  WinLocalServiceSid = 23,
  WinNetworkServiceSid = 24,
  WinBuiltinDomainSid = 25,
  WinBuiltinAdministratorsSid = 26,
  WinBuiltinUsersSid = 27,
  WinBuiltinGuestsSid = 28,
  WinBuiltinPowerUsersSid = 29,
  WinBuiltinAccountOperatorsSid = 30,
  WinBuiltinSystemOperatorsSid = 31,
  WinBuiltinPrintOperatorsSid = 32,
  WinBuiltinBackupOperatorsSid = 33,
  WinBuiltinReplicatorSid = 34,
  WinBuiltinPreWindows2000CompatibleAccessSid = 35,
  WinBuiltinRemoteDesktopUsersSid = 36,
  WinBuiltinNetworkConfigurationOperatorsSid = 37,
  WinAccountAdministratorSid = 38,
  WinAccountGuestSid = 39,
  WinAccountKrbtgtSid = 40,
  WinAccountDomainAdminsSid = 41,
  WinAccountDomainUsersSid = 42,
  WinAccountDomainGuestsSid = 43,
  WinAccountComputersSid = 44,
  WinAccountControllersSid = 45,
  WinAccountCertAdminsSid = 46,
  WinAccountSchemaAdminsSid = 47,
  WinAccountEnterpriseAdminsSid = 48,
  WinAccountPolicyAdminsSid = 49,
  WinAccountRasAndIasServersSid = 50,
  WinNTLMAuthenticationSid = 51,
  WinDigestAuthenticationSid = 52,
  WinSChannelAuthenticationSid = 53,
  WinThisOrganizationSid = 54,
  WinOtherOrganizationSid = 55,
  WinBuiltinIncomingForestTrustBuildersSid = 56,
  WinBuiltinPerfMonitoringUsersSid = 57,
  WinBuiltinPerfLoggingUsersSid = 58,
  WinBuiltinAuthorizationAccessSid = 59,
  WinBuiltinTerminalServerLicenseServersSid = 60,
  WinBuiltinDCOMUsersSid = 61,
  WinBuiltinIUsersSid = 62,
  WinIUserSid = 63,
  WinBuiltinCryptoOperatorsSid = 64,
  WinUntrustedLabelSid = 65,
  WinLowLabelSid = 66,
  WinMediumLabelSid = 67,
  WinHighLabelSid = 68,
  WinSystemLabelSid = 69,
  WinWriteRestrictedCodeSid = 70,
  WinCreatorOwnerRightsSid = 71,
  WinCacheablePrincipalsGroupSid = 72,
  WinNonCacheablePrincipalsGroupSid = 73,
  WinEnterpriseReadonlyControllersSid = 74,
  WinAccountReadonlyControllersSid = 75,
  WinBuiltinEventLogReadersGroup = 76,
  WinNewEnterpriseReadonlyControllersSid = 77,
  WinBuiltinCertSvcDComAccessGroup = 78,
};

enum WHICHTIME
{
  WT_CREATION = 0,
  WT_MODIFICATION = 1,
  WT_ACCESS = 2,
};

struct WINTRUST_BLOB_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ const wchar_t* pcwszDisplayName;
  /* 0x0018 */ unsigned long cbMemObject;
  /* 0x001c */ unsigned char* pbMemObject;
  /* 0x0020 */ unsigned long cbMemSignedMsg;
  /* 0x0024 */ unsigned char* pbMemSignedMsg;
}; /* size: 0x0028 */

struct WINTRUST_CATALOG_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwCatalogVersion;
  /* 0x0008 */ const wchar_t* pcwszCatalogFilePath;
  /* 0x000c */ const wchar_t* pcwszMemberTag;
  /* 0x0010 */ const wchar_t* pcwszMemberFilePath;
  /* 0x0014 */ void* hMemberFile;
  /* 0x0018 */ unsigned char* pbCalculatedFileHash;
  /* 0x001c */ unsigned long cbCalculatedFileHash;
  /* 0x0020 */ const struct _CTL_CONTEXT* pcCatalogContext;
}; /* size: 0x0024 */

struct WINTRUST_CERT_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ const wchar_t* pcwszDisplayName;
  /* 0x0008 */ struct _CERT_CONTEXT* psCertContext;
  /* 0x000c */ unsigned long chStores;
  /* 0x0010 */ void** pahStores;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ struct _FILETIME* psftVerifyAsOf;
}; /* size: 0x001c */

struct WINTRUST_FILE_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ const wchar_t* pcwszFilePath;
  /* 0x0008 */ void* hFile;
  /* 0x000c */ struct _GUID* pgKnownSubject;
}; /* size: 0x0010 */

struct WINTRUST_SGNR_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ const wchar_t* pcwszDisplayName;
  /* 0x0008 */ struct _CMSG_SIGNER_INFO* psSignerInfo;
  /* 0x000c */ unsigned long chStores;
  /* 0x0010 */ void** pahStores;
}; /* size: 0x0014 */

enum WMIDPREQUESTCODE
{
  WMI_GET_ALL_DATA = 0,
  WMI_GET_SINGLE_INSTANCE = 1,
  WMI_SET_SINGLE_INSTANCE = 2,
  WMI_SET_SINGLE_ITEM = 3,
  WMI_ENABLE_EVENTS = 4,
  WMI_DISABLE_EVENTS = 5,
  WMI_ENABLE_COLLECTION = 6,
  WMI_DISABLE_COLLECTION = 7,
  WMI_REGINFO = 8,
  WMI_EXECUTE_METHOD = 9,
};

enum WPP_CTL_NAMES
{
  WPP_CTL_OLE32 = 0,
  WPP_LAST_CTL = 1,
};

enum WPP_DEFINE_BIT_NAMES
{
  WPP_BLOCK_START_OLE32 = 0,
  WPP_BIT_ERRORS = 1,
  WPP_BIT_WARNING = 2,
  WPP_BIT_INFO = 3,
  WPP_BIT_VERBOSE = 4,
  WPP_BIT_CHATTY = 5,
  WPP_BIT_GARRULOUS = 6,
  WPP_BIT_LOQUACIOUS = 7,
  WPP_BLOCK_END_OLE32 = 8,
};

union WPP_PROJECT_CONTROL_BLOCK
{
  union
  {
    /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK Control;
    /* 0x0000 */ unsigned char ReserveSpace[32];
  }; /* size: 0x0020 */
}; /* size: 0x0020 */

class Windows::Auto<Windows::Rtl::IRtlBlobProvider *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlFormattableInterface *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlInterface *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlObject *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlROFOStream *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlRORAStream *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlWOFOStream *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlWORAStream *>
{
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlWOUCSStream *>
{
}; /* size: 0x0004 */

class Windows::Auto<_LBLOB>
{
}; /* size: 0x000c */

class Windows::Auto<_LUNICODE_STRING>
{
}; /* size: 0x000c */

class Windows::Auto<_LUTF8_STRING>
{
}; /* size: 0x000c */

class Windows::Auto<_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT>
{
}; /* size: 0x0034 */

class Windows::Auto<_UNICODE_STRING>
{
}; /* size: 0x0008 */

class Windows::Auto<void *>
{
}; /* size: 0x0004 */

struct Windows::DisableAuto
{
}; /* size: 0x0004 */

class Windows::ErrorHandling::CBaseFrame
{
}; /* size: 0x0001 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CBoolFrame>
{
}; /* size: 0x0001 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>
{
}; /* size: 0x0001 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>
{
}; /* size: 0x0001 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>
{
  /* 0x0000 */ long m_status;
}; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>
{
  /* 0x0000 */ long m_status;
}; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusPointerCarryingFrame<Windows::ErrorHandling::Rtl::CBoolFrame>
{
  /* 0x0000 */ long* m_pstatus;
}; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CBaseRaiseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame,Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame> >
{
}; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CBoolFrame
{
}; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame
{
}; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CVoidRaiseFrame
{
}; /* size: 0x0004 */

struct Windows::ErrorHandling::StatusTypeHRESULT
{
}; /* size: 0x0001 */

struct Windows::ErrorHandling::StatusTypeNTSTATUS
{
}; /* size: 0x0001 */

struct Windows::ErrorHandling::_RTL_CALL_SITE
{
  /* 0x0000 */ const char* File;
  /* 0x0004 */ const char* Function;
  /* 0x0008 */ int Line;
  /* 0x000c */ const char* Expression;
}; /* size: 0x0010 */

class Windows::Lock<_RTL_CRITICAL_SECTION>
{
}; /* size: 0x001c */

class Windows::LockGrant<_RTL_CRITICAL_SECTION>
{
}; /* size: 0x0008 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >
{
  /* 0x0000 */ struct _LBLOB m_Blob;
}; /* size: 0x000c */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnType;

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnTypeConst;

class Windows::Rtl::AutoFileHandle
{
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandle
{
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>::COperatorAmpersandReturnType;

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>::COperatorAmpersandReturnType;

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>::COperatorAmpersandReturnType;

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>::COperatorAmpersandReturnType;

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0004 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>::COperatorAmpersandReturnType;

class Windows::Rtl::AutoHandleDefaultTraits<void *>
{
}; /* size: 0x0001 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlBlobProvider* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlObject* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlROFOStream* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlRORAStream* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlUtf16LEStringBuilder* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlUtf8StringBuilder* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWOFOStream* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWOFOUCSStream* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWORAStream* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWOUCSStream* m_Interface;
}; /* size: 0x0004 */

class Windows::Rtl::AutoKeyHandle
{
}; /* size: 0x0004 */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >
{
  /* 0x0000 */ struct _LUNICODE_STRING m_String;
}; /* size: 0x000c */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnType
{
  /* 0x0000 */ class Windows::Auto<_LUNICODE_STRING>* m_pauto;
}; /* size: 0x0004 */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnTypeConst;

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >
{
  /* 0x0000 */ struct _LUTF8_STRING m_String;
}; /* size: 0x000c */

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnType;

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnTypeConst;

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >
{
  /* 0x0000 */ struct _UNICODE_STRING m_String;
}; /* size: 0x0008 */

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnType;

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnTypeConst;

class Windows::Rtl::AutoToken
{
}; /* size: 0x0004 */

class Windows::Rtl::AutoTxnHandle
{
}; /* size: 0x0004 */

class Windows::Rtl::CRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT m_WritingContext;
}; /* size: 0x0034 */

class Windows::Rtl::CRTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT m_WritingContext;
}; /* size: 0x002c */

class Windows::Rtl::CStringTraitsBase
{
}; /* size: 0x0001 */

class Windows::Rtl::CriticalSectionLock
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_Lock;
  /* 0x0018 */ BOOL m_fConstructed;
}; /* size: 0x001c */

class Windows::Rtl::CriticalSectionLockGrant
{
  /* 0x0000 */ class Windows::Rtl::CriticalSectionLock& m_Lock;
  /* 0x0004 */ BOOL m_fLocked;
}; /* size: 0x0008 */

struct Windows::Rtl::IRtlBlobProvider
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlFormattableInterface
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlFormattableInterface::FormattingLevels
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_33
{
  Minimal = 0,
  Normal = 128,
  MaximallyVerbose = 255,
} TAG_UNNAMED_33, *PTAG_UNNAMED_33;

struct Windows::Rtl::IRtlFormattableObject
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlFormattableObject::FormattingLevels
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_34
{
  Minimal = 0,
  Normal = 128,
  MaximallyVerbose = 255,
} TAG_UNNAMED_34, *PTAG_UNNAMED_34;

struct Windows::Rtl::IRtlFormattedOutputStream
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlInterface
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlObject
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlROFOStream
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlRORAStream
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlUtf16LEStringBuilder
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlUtf8StringBuilder
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlWOFOStream
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlWOFOUCSStream
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlWORAStream
{
}; /* size: 0x0004 */

struct Windows::Rtl::IRtlWOUCSStream
{
}; /* size: 0x0004 */

class Windows::Rtl::StringTraits<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

class Windows::Rtl::StringTraits<_LUTF8_STRING>
{
}; /* size: 0x0001 */

class Windows::Rtl::StringTraits<_UNICODE_STRING>
{
}; /* size: 0x0001 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_AND_FLAG_MAP
{
  /* 0x0000 */ struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP EnumMap;
  /* 0x0010 */ struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP FlagMap;
}; /* size: 0x0018 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP
{
  /* 0x0000 */ unsigned long Mask;
  /* 0x0004 */ unsigned long Shift;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ const struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY* Entries;
}; /* size: 0x0010 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY
{
  /* 0x0000 */ unsigned long Value;
  /* 0x0004 */ const char* String;
}; /* size: 0x0008 */

struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ const struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY* Entries;
}; /* size: 0x0008 */

struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ const char* String;
}; /* size: 0x0008 */

struct WireExtent
{
  /* 0x0000 */ unsigned long rounded_size;
  /* 0x0004 */ struct _GUID id;
  /* 0x0014 */ unsigned long size;
}; /* size: 0x0018 */

struct WireExtentArray
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ unsigned long unique;
  /* 0x000c */ unsigned long rounded_size;
  /* 0x0010 */ unsigned long unique_flag[2];
}; /* size: 0x0018 */

union WireThat
{
  union
  {
    /* 0x0000 */ struct WireThatPart1 c;
    /* 0x0000 */ struct WireThatPart2 d;
  }; /* size: 0x0038 */
}; /* size: 0x0038 */

struct WireThatPart1
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long unique;
}; /* size: 0x0008 */

struct WireThatPart2
{
  /* 0x0000 */ struct WireThatPart1 part1;
  /* 0x0008 */ struct WireExtentArray ea;
  /* 0x0020 */ struct WireExtent e;
}; /* size: 0x0038 */

union WireThis
{
  union
  {
    /* 0x0000 */ struct WireThisPart1 c;
    /* 0x0000 */ struct WireThisPart2 d;
  }; /* size: 0x0050 */
}; /* size: 0x0050 */

struct WireThisPart1
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ unsigned long unique;
}; /* size: 0x0020 */

struct WireThisPart2
{
  /* 0x0000 */ struct WireThisPart1 part1;
  /* 0x0020 */ struct WireExtentArray ea;
  /* 0x0038 */ struct WireExtent e;
}; /* size: 0x0050 */

class XIPersistFile
{
  /* 0x0000 */ struct IPersistFile* _p;
}; /* size: 0x0004 */

class XIPersistStorage
{
  /* 0x0000 */ struct IPersistStorage* _p;
}; /* size: 0x0004 */

class XIStorage
{
  /* 0x0000 */ struct IStorage* _p;
}; /* size: 0x0004 */

class XIUnknown
{
  /* 0x0000 */ struct IUnknown* _p;
}; /* size: 0x0004 */

enum XLAT_SIDE
{
  XLAT_SERVER = 1,
  XLAT_CLIENT = 2,
};

class XLOCK
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION critSec;
  /* 0x0018 */ int m_fCsInitialized;
}; /* size: 0x001c */

struct XLOCK_LEAF
{
}; /* size: 0x001c */

struct XMLDOMDocumentEvents
{
}; /* size: 0x0004 */

class XSLOCK
{
  /* 0x0000 */ class XLOCK m_lock;
  /* 0x001c */ unsigned long m_cOwner;
  /* 0x0020 */ struct XSLOCK::OWNERENTRY m_ownerThreads[2];
  /* 0x0030 */ struct XSLOCK::OWNERENTRY* m_ownerTable;
  /* 0x0034 */ class EVENT m_eventExclusiveWaiters;
  /* 0x0038 */ class SEMAPHORE m_semaphoreSharedWaiters;
  /* 0x003c */ unsigned long m_cExclusiveWaiters;
  /* 0x0040 */ unsigned long m_cSharedWaiters;
  /* 0x0044 */ int m_isOwnedExclusive;
}; /* size: 0x0048 */

struct XSLOCK::OWNERENTRY
{
  /* 0x0000 */ class OPAQUE_HANDLE<1> dwThreadId;
  union
  {
    /* 0x0004 */ long ownerCount;
    /* 0x0004 */ unsigned long tableSize;
  }; /* size: 0x0004 */
}; /* size: 0x0008 */

typedef struct _ABC
{
  /* 0x0000 */ int abcA;
  /* 0x0004 */ unsigned int abcB;
  /* 0x0008 */ int abcC;
} ABC, *PABC; /* size: 0x000c */

typedef struct _ABCFLOAT
{
  /* 0x0000 */ float abcfA;
  /* 0x0004 */ float abcfB;
  /* 0x0008 */ float abcfC;
} ABCFLOAT, *PABCFLOAT; /* size: 0x000c */

typedef struct _ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_ACE, *PACCESS_ALLOWED_ACE; /* size: 0x000c */

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _ACCESS_ALLOWED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE; /* size: 0x0030 */

typedef struct _ACCESS_DENIED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_ACE, *PACCESS_DENIED_ACE; /* size: 0x000c */

typedef struct _ACCESS_DENIED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _ACCESS_DENIED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE; /* size: 0x0030 */

typedef enum _ACCESS_MODE
{
  NOT_USED_ACCESS = 0,
  GRANT_ACCESS = 1,
  SET_ACCESS = 2,
  DENY_ACCESS = 3,
  REVOKE_ACCESS = 4,
  SET_AUDIT_SUCCESS = 5,
  SET_AUDIT_FAILURE = 6,
} ACCESS_MODE, *PACCESS_MODE;

typedef struct _ACE_HEADER
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char AceFlags;
  /* 0x0002 */ unsigned short AceSize;
} ACE_HEADER, *PACE_HEADER; /* size: 0x0004 */

typedef struct _ACL
{
  /* 0x0000 */ unsigned char AclRevision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short AclSize;
  /* 0x0004 */ unsigned short AceCount;
  /* 0x0006 */ unsigned short Sbz2;
} ACL, *PACL; /* size: 0x0008 */

typedef enum _ACL_INFORMATION_CLASS
{
  AclRevisionInformation = 1,
  AclSizeInformation = 2,
} ACL_INFORMATION_CLASS, *PACL_INFORMATION_CLASS;

typedef struct _ACL_REVISION_INFORMATION
{
  /* 0x0000 */ unsigned long AclRevision;
} ACL_REVISION_INFORMATION, *PACL_REVISION_INFORMATION; /* size: 0x0004 */

typedef struct _ACL_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long AceCount;
  /* 0x0004 */ unsigned long AclBytesInUse;
  /* 0x0008 */ unsigned long AclBytesFree;
} ACL_SIZE_INFORMATION, *PACL_SIZE_INFORMATION; /* size: 0x000c */

struct _ACTIVATION_CONTEXT;

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const wchar_t* AssemblyName;
  /* 0x000c */ unsigned long AssemblyNameLength;
  /* 0x0010 */ unsigned long HashAlgorithm;
  /* 0x0014 */ unsigned long PseudoKey;
} ACTIVATION_CONTEXT_ASSEMBLY_DATA, *PACTIVATION_CONTEXT_ASSEMBLY_DATA; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulEncodedAssemblyIdentityLength;
  /* 0x0008 */ unsigned long ulManifestPathType;
  /* 0x000c */ unsigned long ulManifestPathLength;
  /* 0x0010 */ union _LARGE_INTEGER liManifestLastWriteTime;
  /* 0x0018 */ unsigned long ulPolicyPathType;
  /* 0x001c */ unsigned long ulPolicyPathLength;
  /* 0x0020 */ union _LARGE_INTEGER liPolicyLastWriteTime;
  /* 0x0028 */ unsigned long ulMetadataSatelliteRosterIndex;
  /* 0x002c */ unsigned long ulManifestVersionMajor;
  /* 0x0030 */ unsigned long ulManifestVersionMinor;
  /* 0x0034 */ unsigned long ulPolicyVersionMajor;
  /* 0x0038 */ unsigned long ulPolicyVersionMinor;
  /* 0x003c */ unsigned long ulAssemblyDirectoryNameLength;
  /* 0x0040 */ const wchar_t* lpAssemblyEncodedAssemblyIdentity;
  /* 0x0044 */ const wchar_t* lpAssemblyManifestPath;
  /* 0x0048 */ const wchar_t* lpAssemblyPolicyPath;
  /* 0x004c */ const wchar_t* lpAssemblyDirectoryName;
  /* 0x0050 */ unsigned long ulFileCount;
  /* 0x0054 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION; /* size: 0x0058 */

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _ACTIVATION_CONTEXT* ActivationContext;
    /* 0x0000 */ void* hActCtx;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long Flags;
    /* 0x0004 */ unsigned long dwFlags;
  }; /* size: 0x0004 */
} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_DATA
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long HeaderSize;
  /* 0x0008 */ unsigned long FormatVersion;
  /* 0x000c */ unsigned long TotalSize;
  /* 0x0010 */ unsigned long DefaultTocOffset;
  /* 0x0014 */ unsigned long ExtendedTocOffset;
  /* 0x0018 */ unsigned long AssemblyRosterOffset;
  /* 0x001c */ unsigned long Flags;
} ACTIVATION_CONTEXT_DATA, *PACTIVATION_CONTEXT_DATA; /* size: 0x0020 */

struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;

typedef struct _ACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ConfiguredClsidOffset;
} ACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION, *PACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION; /* size: 0x000c */

typedef struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ThreadingModel;
  /* 0x000c */ struct _GUID ReferenceClsid;
  /* 0x001c */ struct _GUID ConfiguredClsid;
  /* 0x002c */ struct _GUID ImplementedClsid;
  /* 0x003c */ struct _GUID TypeLibraryId;
  /* 0x004c */ unsigned long ModuleLength;
  /* 0x0050 */ unsigned long ModuleOffset;
  /* 0x0054 */ unsigned long ProgIdLength;
  /* 0x0058 */ unsigned long ProgIdOffset;
  /* 0x005c */ unsigned long ShimDataLength;
  /* 0x0060 */ unsigned long ShimDataOffset;
  /* 0x0064 */ unsigned long MiscStatusDefault;
  /* 0x0068 */ unsigned long MiscStatusContent;
  /* 0x006c */ unsigned long MiscStatusThumbnail;
  /* 0x0070 */ unsigned long MiscStatusIcon;
  /* 0x0074 */ unsigned long MiscStatusDocPrint;
} ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION, *PACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION; /* size: 0x0078 */

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long ulFormatVersion;
  /* 0x0008 */ unsigned long ulAssemblyCount;
  /* 0x000c */ unsigned long ulRootManifestPathType;
  /* 0x0010 */ unsigned long ulRootManifestPathChars;
  /* 0x0014 */ unsigned long ulRootConfigurationPathType;
  /* 0x0018 */ unsigned long ulRootConfigurationPathChars;
  /* 0x001c */ unsigned long ulAppDirPathType;
  /* 0x0020 */ unsigned long ulAppDirPathChars;
  /* 0x0024 */ const wchar_t* lpRootManifestPath;
  /* 0x0028 */ const wchar_t* lpRootConfigurationPath;
  /* 0x002c */ const wchar_t* lpAppDirPath;
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION; /* size: 0x0030 */

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS
{
  ActivationContextBasicInformation = 1,
  ActivationContextDetailedInformation = 2,
  AssemblyDetailedInformationInActivationContext = 3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 4,
  RunlevelInformationInActivationContext = 5,
  MaxActivationContextInfoClass = 6,
  AssemblyDetailedInformationInActivationContxt = 3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 4,
} ACTIVATION_CONTEXT_INFO_CLASS, *PACTIVATION_CONTEXT_INFO_CLASS;

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  /* 0x0000 */ unsigned long ulAssemblyIndex;
  /* 0x0004 */ unsigned long ulFileIndexInAssembly;
} ACTIVATION_CONTEXT_QUERY_INDEX, *PACTIVATION_CONTEXT_QUERY_INDEX; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
  /* 0x0008 */ unsigned long UiAccess;
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION; /* size: 0x000c */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ void* SectionGlobalData;
  /* 0x0014 */ unsigned long SectionGlobalDataLength;
  /* 0x0018 */ void* SectionBase;
  /* 0x001c */ unsigned long SectionTotalLength;
  /* 0x0020 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0024 */ unsigned long AssemblyRosterIndex;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA; /* size: 0x0040 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ void* SectionGlobalData;
  /* 0x0014 */ unsigned long SectionGlobalDataLength;
  /* 0x0018 */ void* SectionBase;
  /* 0x001c */ unsigned long SectionTotalLength;
  /* 0x0020 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0024 */ unsigned long AssemblyRosterIndex;
  /* 0x0028 */ unsigned long Flags;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600; /* size: 0x002c */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION* Information;
  /* 0x0004 */ void* SectionBase;
  /* 0x0008 */ unsigned long SectionLength;
  /* 0x000c */ void* SectionGlobalDataBase;
  /* 0x0010 */ unsigned long SectionGlobalDataLength;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA; /* size: 0x0014 */

typedef struct _ACTIVATION_CONTEXT_STACK
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* ActiveFrame;
  /* 0x0004 */ struct _LIST_ENTRY FrameListCache;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long NextCookieSequenceNumber;
  /* 0x0014 */ unsigned long StackId;
} ACTIVATION_CONTEXT_STACK, *PACTIVATION_CONTEXT_STACK; /* size: 0x0018 */

typedef struct _ACTRL_ACCESS_ENTRYW
{
  /* 0x0000 */ struct _TRUSTEE_W Trustee;
  /* 0x0014 */ unsigned long fAccessFlags;
  /* 0x0018 */ unsigned long Access;
  /* 0x001c */ unsigned long ProvSpecificAccess;
  /* 0x0020 */ unsigned long Inheritance;
  /* 0x0024 */ wchar_t* lpInheritProperty;
} ACTRL_ACCESS_ENTRYW, *PACTRL_ACCESS_ENTRYW; /* size: 0x0028 */

typedef struct _ACTRL_ACCESS_ENTRY_LISTW
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ struct _ACTRL_ACCESS_ENTRYW* pAccessList;
} ACTRL_ACCESS_ENTRY_LISTW, *PACTRL_ACCESS_ENTRY_LISTW; /* size: 0x0008 */

typedef struct _ACTRL_ALISTW
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ struct _ACTRL_PROPERTY_ENTRYW* pPropertyAccessList;
} ACTRL_ALISTW, *PACTRL_ALISTW; /* size: 0x0008 */

typedef struct _ACTRL_PROPERTY_ENTRYW
{
  /* 0x0000 */ wchar_t* lpProperty;
  /* 0x0004 */ struct _ACTRL_ACCESS_ENTRY_LISTW* pAccessEntryList;
  /* 0x0008 */ unsigned long fListFlags;
} ACTRL_PROPERTY_ENTRYW, *PACTRL_PROPERTY_ENTRYW; /* size: 0x000c */

typedef struct _ADMINISTRATOR_POWER_POLICY
{
  /* 0x0000 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x0008 */ unsigned long MinVideoTimeout;
  /* 0x000c */ unsigned long MaxVideoTimeout;
  /* 0x0010 */ unsigned long MinSpindownTimeout;
  /* 0x0014 */ unsigned long MaxSpindownTimeout;
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY; /* size: 0x0018 */

typedef struct _ALPC_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long SequenceNo;
  /* 0x0008 */ void* PortContext;
} ALPC_BASIC_INFORMATION, *PALPC_BASIC_INFORMATION; /* size: 0x000c */

typedef struct _ALPC_CONTEXT_ATTR
{
  /* 0x0000 */ void* PortContext;
  /* 0x0004 */ void* MessageContext;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long MessageId;
  /* 0x0010 */ unsigned long CallbackId;
} ALPC_CONTEXT_ATTR, *PALPC_CONTEXT_ATTR; /* size: 0x0014 */

typedef struct _ALPC_DATA_VIEW_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ void* SectionHandle;
  /* 0x0008 */ void* ViewBase;
  /* 0x000c */ unsigned long ViewSize;
} ALPC_DATA_VIEW_ATTR, *PALPC_DATA_VIEW_ATTR; /* size: 0x0010 */

typedef struct _ALPC_HANDLE_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ void* Handle;
  /* 0x0008 */ unsigned long ObjectType;
  /* 0x000c */ unsigned long DesiredAccess;
} ALPC_HANDLE_ATTR, *PALPC_HANDLE_ATTR; /* size: 0x0010 */

typedef struct _ALPC_MESSAGE_ATTRIBUTES
{
  /* 0x0000 */ unsigned long AllocatedAttributes;
  /* 0x0004 */ unsigned long ValidAttributes;
} ALPC_MESSAGE_ATTRIBUTES, *PALPC_MESSAGE_ATTRIBUTES; /* size: 0x0008 */

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS
{
  AlpcMessageSidInformation = 0,
  AlpcMessageTokenModifiedIdInformation = 1,
} ALPC_MESSAGE_INFORMATION_CLASS, *PALPC_MESSAGE_INFORMATION_CLASS;

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0004 */ void* CompletionPort;
} ALPC_PORT_ASSOCIATE_COMPLETION_PORT, *PALPC_PORT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0008 */

typedef struct _ALPC_PORT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x0010 */ unsigned long MaxMessageLength;
  /* 0x0014 */ unsigned long MemoryBandwidth;
  /* 0x0018 */ unsigned long MaxPoolUsage;
  /* 0x001c */ unsigned long MaxSectionSize;
  /* 0x0020 */ unsigned long MaxViewSize;
  /* 0x0024 */ unsigned long MaxTotalSectionSize;
  /* 0x0028 */ unsigned long DupObjectTypes;
} ALPC_PORT_ATTRIBUTES, *PALPC_PORT_ATTRIBUTES; /* size: 0x002c */

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long ConcurrencyCount;
  /* 0x000c */ unsigned long AttributeFlags;
} ALPC_PORT_COMPLETION_LIST_INFORMATION, *PALPC_PORT_COMPLETION_LIST_INFORMATION; /* size: 0x0010 */

typedef enum _ALPC_PORT_INFORMATION_CLASS
{
  AlpcBasicInformation = 0,
  AlpcPortInformation = 1,
  AlpcAssociateCompletionPortInformation = 2,
  AlpcConnectedSIDInformation = 3,
  AlpcServerInformation = 4,
  AlpcMessageZoneInformation = 5,
  AlpcRegisterCompletionListInformation = 6,
  AlpcUnregisterCompletionListInformation = 7,
  AlpcAdjustCompletionListConcurrencyCountInformation = 8,
} ALPC_PORT_INFORMATION_CLASS, *PALPC_PORT_INFORMATION_CLASS;

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0004 */ unsigned long Size;
} ALPC_PORT_MESSAGE_ZONE_INFORMATION, *PALPC_PORT_MESSAGE_ZONE_INFORMATION; /* size: 0x0008 */

typedef struct _ALPC_SECURITY_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _SECURITY_QUALITY_OF_SERVICE* QoS;
  /* 0x0008 */ void* ContextHandle;
} ALPC_SECURITY_ATTR, *PALPC_SECURITY_ATTR; /* size: 0x000c */

typedef struct _ALPC_SERVER_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* ThreadHandle;
    } /* size: 0x0004 */ In;
    struct
    {
      /* 0x0000 */ unsigned char ThreadBlocked;
      /* 0x0004 */ void* ConnectedProcessId;
      /* 0x0008 */ struct _UNICODE_STRING ConnectionPortName;
    } /* size: 0x0010 */ Out;
  }; /* size: 0x0010 */
} ALPC_SERVER_INFORMATION, *PALPC_SERVER_INFORMATION; /* size: 0x0010 */

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0,
  NEC98x86 = 1,
  EndAlternatives = 2,
} ALTERNATIVE_ARCHITECTURE_TYPE, *PALTERNATIVE_ARCHITECTURE_TYPE;

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE
{
  /* 0x0000 */ union _LARGE_INTEGER ActivationTime;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ButtonInstanceID;
} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE; /* size: 0x0010 */

typedef struct _APP_COMPAT_GOO
{
  /* 0x0000 */ unsigned long dwTotalGooSize;
  /* 0x0004 */ struct _PRE_APP_COMPAT_INFO AppCompatEntry[1];
} APP_COMPAT_GOO, *PAPP_COMPAT_GOO; /* size: 0x000c */

typedef struct _APP_COMPAT_INFO
{
  /* 0x0000 */ unsigned long dwTotalSize;
  /* 0x0008 */ union _ULARGE_INTEGER CompatibilityFlags;
} APP_COMPAT_INFO, *PAPP_COMPAT_INFO; /* size: 0x0010 */

typedef struct _APP_COMPAT_SHIM_INFO
{
  /* 0x0000 */ void* pHookAPIList;
  /* 0x0004 */ void* pHookPatchList;
  /* 0x0008 */ void* ppHookAPI;
  /* 0x000c */ unsigned long dwHookAPICount;
  /* 0x0010 */ void* pExeFilter;
  /* 0x0014 */ void* pGlobalFilterList;
  /* 0x0018 */ void* pLBFilterList;
  /* 0x001c */ void* pCritSec;
  /* 0x0020 */ void* pShimHeap;
} APP_COMPAT_SHIM_INFO, *PAPP_COMPAT_SHIM_INFO; /* size: 0x0024 */

typedef struct _APP_VARIABLE_INFO
{
  /* 0x0000 */ unsigned long dwVariableType;
  /* 0x0004 */ unsigned long dwVariableInfoSize;
} APP_VARIABLE_INFO, *PAPP_VARIABLE_INFO; /* size: 0x0008 */

typedef enum _APTTYPE
{
  APTTYPE_CURRENT = -1,
  APTTYPE_STA = 0,
  APTTYPE_MTA = 1,
  APTTYPE_NA = 2,
  APTTYPE_MAINSTA = 3,
} APTTYPE, *PAPTTYPE;

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulFilenameLength;
  /* 0x0008 */ unsigned long ulPathLength;
  /* 0x000c */ const wchar_t* lpFileName;
  /* 0x0010 */ const wchar_t* lpFilePath;
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION; /* size: 0x0014 */

struct _ASSEMBLY_STORAGE_MAP;

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA
{
  union
  {
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
  }; /* size: 0x0020 */
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA; /* size: 0x0020 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0004 */ unsigned long RootIndex;
  /* 0x0008 */ unsigned char CancelResolution;
  /* 0x0009 */ unsigned char NoMoreEntries;
  /* 0x000c */ struct _UNICODE_STRING Root;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT; /* size: 0x0014 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING
{
  /* 0x0000 */ const void* Data;
  /* 0x0004 */ unsigned long AssemblyRosterIndex;
  /* 0x0008 */ void* ResolutionContext;
  /* 0x000c */ struct _UNICODE_STRING Root;
  /* 0x0014 */ unsigned char KnownRoot;
  /* 0x0018 */ unsigned long RootCount;
  /* 0x001c */ unsigned char CancelResolution;
  /* 0x001d */ char __PADDING__[3];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING; /* size: 0x0020 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING
{
  /* 0x0000 */ void* ResolutionContext;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING; /* size: 0x0004 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0004 */ unsigned long RootIndexUsed;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL; /* size: 0x0008 */

typedef union _ASSEMBLY_VERSION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short Build;
      /* 0x0002 */ unsigned short Revision;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ASSEMBLY_VERSION, *PASSEMBLY_VERSION; /* size: 0x0008 */

typedef struct _ATOM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned short UsageCount;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short NameLength;
  /* 0x0006 */ wchar_t Name[1];
} ATOM_BASIC_INFORMATION, *PATOM_BASIC_INFORMATION; /* size: 0x0008 */

typedef enum _ATOM_INFORMATION_CLASS
{
  AtomBasicInformation = 0,
  AtomTableInformation = 1,
} ATOM_INFORMATION_CLASS, *PATOM_INFORMATION_CLASS;

typedef struct _ATOM_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAtoms;
  /* 0x0004 */ unsigned short Atoms[1];
  /* 0x0006 */ char __PADDING__[2];
} ATOM_TABLE_INFORMATION, *PATOM_TABLE_INFORMATION; /* size: 0x0008 */

typedef enum _AUDIT_EVENT_TYPE
{
  AuditEventObjectAccess = 0,
  AuditEventDirectoryServiceAccess = 1,
} AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ struct _CMSG_SIGNER_INFO* pSignerInfo;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x000c */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fCommercial;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x0008 */

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ int fCommercial;
} AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x000c */

typedef struct _AVRF_CLIENT_ID_WOW64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} AVRF_CLIENT_ID_WOW64, *PAVRF_CLIENT_ID_WOW64; /* size: 0x0010 */

typedef struct _AVRF_MEMORY_RANGE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0004 */ unsigned long Size;
} AVRF_MEMORY_RANGE, *PAVRF_MEMORY_RANGE; /* size: 0x0008 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ struct _AVRF_CLIENT_ID_WOW64 ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x0020 */ unsigned __int64 Stacks[16];
} AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64; /* size: 0x00a0 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x0010 */ struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64 HandleTrace[1];
} AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64; /* size: 0x00b0 */

typedef struct _AppBarData
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct HWND__* hWnd;
  /* 0x0008 */ unsigned int uCallbackMessage;
  /* 0x000c */ unsigned int uEdge;
  /* 0x0010 */ struct tagRECT rc;
  /* 0x0020 */ long lParam;
} AppBarData, *PAppBarData; /* size: 0x0024 */

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0004 */ unsigned long dwClass;
  /* 0x0008 */ unsigned long dwFlags;
} BCRYPT_ALGORITHM_IDENTIFIER, *PBCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x000c */

typedef struct _BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0008 */ void* GetProperty /* function */;
  /* 0x000c */ void* SetProperty /* function */;
  /* 0x0010 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0014 */ void* GenerateKeyPair /* function */;
  /* 0x0018 */ void* FinalizeKeyPair /* function */;
  /* 0x001c */ void* Encrypt /* function */;
  /* 0x0020 */ void* Decrypt /* function */;
  /* 0x0024 */ void* ImportKeyPair /* function */;
  /* 0x0028 */ void* ExportKey /* function */;
  /* 0x002c */ void* DestroyKey /* function */;
  /* 0x0030 */ void* SignHash /* function */;
  /* 0x0034 */ void* VerifySignature /* function */;
} BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE, *PBCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE; /* size: 0x0038 */

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoVersion;
  /* 0x0008 */ unsigned char* pbNonce;
  /* 0x000c */ unsigned long cbNonce;
  /* 0x0010 */ unsigned char* pbAuthData;
  /* 0x0014 */ unsigned long cbAuthData;
  /* 0x0018 */ unsigned char* pbTag;
  /* 0x001c */ unsigned long cbTag;
  /* 0x0020 */ unsigned char* pbMacContext;
  /* 0x0024 */ unsigned long cbMacContext;
  /* 0x0028 */ unsigned long cbAAD;
  /* 0x0030 */ unsigned __int64 cbData;
  /* 0x0038 */ unsigned long dwFlags;
  /* 0x003c */ long __PADDING__[1];
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO; /* size: 0x0040 */

typedef struct _BCRYPT_CIPHER_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0008 */ void* GetProperty /* function */;
  /* 0x000c */ void* SetProperty /* function */;
  /* 0x0010 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0014 */ void* GenerateKey /* function */;
  /* 0x0018 */ void* Encrypt /* function */;
  /* 0x001c */ void* Decrypt /* function */;
  /* 0x0020 */ void* ImportKey /* function */;
  /* 0x0024 */ void* ExportKey /* function */;
  /* 0x0028 */ void* DuplicateKey /* function */;
  /* 0x002c */ void* DestroyKey /* function */;
} BCRYPT_CIPHER_FUNCTION_TABLE, *PBCRYPT_CIPHER_FUNCTION_TABLE; /* size: 0x0030 */

typedef struct _BCRYPT_DH_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_DH_KEY_BLOB, *PBCRYPT_DH_KEY_BLOB; /* size: 0x0008 */

typedef struct _BCRYPT_DH_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
} BCRYPT_DH_PARAMETER_HEADER, *PBCRYPT_DH_PARAMETER_HEADER; /* size: 0x000c */

typedef struct _BCRYPT_DSA_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
  /* 0x0008 */ unsigned char Count[4];
  /* 0x000c */ unsigned char Seed[20];
  /* 0x0020 */ unsigned char q[20];
} BCRYPT_DSA_KEY_BLOB, *PBCRYPT_DSA_KEY_BLOB; /* size: 0x0034 */

typedef struct _BCRYPT_DSA_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
  /* 0x000c */ unsigned char Count[4];
  /* 0x0010 */ unsigned char Seed[20];
  /* 0x0024 */ unsigned char q[20];
} BCRYPT_DSA_PARAMETER_HEADER, *PBCRYPT_DSA_PARAMETER_HEADER; /* size: 0x0038 */

typedef struct _BCRYPT_ECCKEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_ECCKEY_BLOB, *PBCRYPT_ECCKEY_BLOB; /* size: 0x0008 */

typedef struct _BCRYPT_HASH_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0008 */ void* GetProperty /* function */;
  /* 0x000c */ void* SetProperty /* function */;
  /* 0x0010 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0014 */ void* CreateHash /* function */;
  /* 0x0018 */ void* HashData /* function */;
  /* 0x001c */ void* FinishHash /* function */;
  /* 0x0020 */ void* DuplicateHash /* function */;
  /* 0x0024 */ void* DestroyHash /* function */;
} BCRYPT_HASH_FUNCTION_TABLE, *PBCRYPT_HASH_FUNCTION_TABLE; /* size: 0x0028 */

typedef struct _BCRYPT_INTERFACE_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} BCRYPT_INTERFACE_VERSION, *PBCRYPT_INTERFACE_VERSION; /* size: 0x0004 */

typedef struct _BCRYPT_KEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
} BCRYPT_KEY_BLOB, *PBCRYPT_KEY_BLOB; /* size: 0x0004 */

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long cbKeyData;
} BCRYPT_KEY_DATA_BLOB_HEADER, *PBCRYPT_KEY_DATA_BLOB_HEADER; /* size: 0x000c */

typedef struct _BCRYPT_OAEP_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0004 */ unsigned char* pbLabel;
  /* 0x0008 */ unsigned long cbLabel;
} BCRYPT_OAEP_PADDING_INFO, *PBCRYPT_OAEP_PADDING_INFO; /* size: 0x000c */

typedef struct _BCRYPT_OID
{
  /* 0x0000 */ unsigned long cbOID;
  /* 0x0004 */ unsigned char* pbOID;
} BCRYPT_OID, *PBCRYPT_OID; /* size: 0x0008 */

typedef struct _BCRYPT_OID_LIST
{
  /* 0x0000 */ unsigned long dwOIDCount;
  /* 0x0004 */ struct _BCRYPT_OID* pOIDs;
} BCRYPT_OID_LIST, *PBCRYPT_OID_LIST; /* size: 0x0008 */

typedef struct _BCRYPT_PKCS1_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
} BCRYPT_PKCS1_PADDING_INFO, *PBCRYPT_PKCS1_PADDING_INFO; /* size: 0x0004 */

typedef struct _BCRYPT_PROVIDER_NAME
{
  /* 0x0000 */ wchar_t* pszProviderName;
} BCRYPT_PROVIDER_NAME, *PBCRYPT_PROVIDER_NAME; /* size: 0x0004 */

typedef struct _BCRYPT_PSS_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0004 */ unsigned long cbSalt;
} BCRYPT_PSS_PADDING_INFO, *PBCRYPT_PSS_PADDING_INFO; /* size: 0x0008 */

typedef struct _BCRYPT_RNG_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0008 */ void* GetProperty /* function */;
  /* 0x000c */ void* SetProperty /* function */;
  /* 0x0010 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0014 */ void* GenRandom /* function */;
} BCRYPT_RNG_FUNCTION_TABLE, *PBCRYPT_RNG_FUNCTION_TABLE; /* size: 0x0018 */

typedef struct _BCRYPT_RSAKEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long BitLength;
  /* 0x0008 */ unsigned long cbPublicExp;
  /* 0x000c */ unsigned long cbModulus;
  /* 0x0010 */ unsigned long cbPrime1;
  /* 0x0014 */ unsigned long cbPrime2;
} BCRYPT_RSAKEY_BLOB, *PBCRYPT_RSAKEY_BLOB; /* size: 0x0018 */

typedef struct _BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0008 */ void* GetProperty /* function */;
  /* 0x000c */ void* SetProperty /* function */;
  /* 0x0010 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0014 */ void* SecretAgreement /* function */;
  /* 0x0018 */ void* DeriveKey /* function */;
  /* 0x001c */ void* DestroySecret /* function */;
  /* 0x0020 */ void* GenerateKeyPair /* function */;
  /* 0x0024 */ void* FinalizeKeyPair /* function */;
  /* 0x0028 */ void* ImportKeyPair /* function */;
  /* 0x002c */ void* ExportKey /* function */;
  /* 0x0030 */ void* DestroyKey /* function */;
} BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE, *PBCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE; /* size: 0x0034 */

typedef struct _BCRYPT_SIGNATURE_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0008 */ void* GetProperty /* function */;
  /* 0x000c */ void* SetProperty /* function */;
  /* 0x0010 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0014 */ void* GenerateKeyPair /* function */;
  /* 0x0018 */ void* FinalizeKeyPair /* function */;
  /* 0x001c */ void* SignHash /* function */;
  /* 0x0020 */ void* VerifySignature /* function */;
  /* 0x0024 */ void* ImportKeyPair /* function */;
  /* 0x0028 */ void* ExportKey /* function */;
  /* 0x002c */ void* DestroyKey /* function */;
} BCRYPT_SIGNATURE_FUNCTION_TABLE, *PBCRYPT_SIGNATURE_FUNCTION_TABLE; /* size: 0x0030 */

typedef struct _BCryptBuffer
{
  /* 0x0000 */ unsigned long cbBuffer;
  /* 0x0004 */ unsigned long BufferType;
  /* 0x0008 */ void* pvBuffer;
} BCryptBuffer, *PBCryptBuffer; /* size: 0x000c */

typedef struct _BCryptBufferDesc
{
  /* 0x0000 */ unsigned long ulVersion;
  /* 0x0004 */ unsigned long cBuffers;
  /* 0x0008 */ struct _BCryptBuffer* pBuffers;
} BCryptBufferDesc, *PBCryptBufferDesc; /* size: 0x000c */

typedef struct _BLENDFUNCTION
{
  /* 0x0000 */ unsigned char BlendOp;
  /* 0x0001 */ unsigned char BlendFlags;
  /* 0x0002 */ unsigned char SourceConstantAlpha;
  /* 0x0003 */ unsigned char AlphaFormat;
} BLENDFUNCTION, *PBLENDFUNCTION; /* size: 0x0004 */

typedef struct _BOOT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long FriendlyNameOffset;
  /* 0x0014 */ unsigned long BootFilePathOffset;
  /* 0x0018 */ unsigned long OsOptionsLength;
  /* 0x001c */ unsigned char OsOptions[1];
  /* 0x001d */ char __PADDING__[3];
} BOOT_ENTRY, *PBOOT_ENTRY; /* size: 0x0020 */

typedef struct _BOOT_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _BOOT_ENTRY BootEntry;
} BOOT_ENTRY_LIST, *PBOOT_ENTRY_LIST; /* size: 0x0024 */

typedef struct _BOOT_OPTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Timeout;
  /* 0x000c */ unsigned long CurrentBootEntryId;
  /* 0x0010 */ unsigned long NextBootEntryId;
  /* 0x0014 */ wchar_t HeadlessRedirection[1];
  /* 0x0016 */ char __PADDING__[2];
} BOOT_OPTIONS, *PBOOT_OPTIONS; /* size: 0x0018 */

typedef enum _BUS_DATA_TYPE
{
  ConfigurationSpaceUndefined = -1,
  Cmos = 0,
  EisaConfiguration = 1,
  Pos = 2,
  CbusConfiguration = 3,
  PCIConfiguration = 4,
  VMEConfiguration = 5,
  NuBusConfiguration = 6,
  PCMCIAConfiguration = 7,
  MPIConfiguration = 8,
  MPSAConfiguration = 9,
  PNPISAConfiguration = 10,
  SgiInternalConfiguration = 11,
  MaximumBusDataType = 12,
} BUS_DATA_TYPE, *PBUS_DATA_TYPE;

typedef struct _BYTE_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
} BYTE_BLOB, *PBYTE_BLOB; /* size: 0x0008 */

typedef struct _BYTE_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned char* pData;
} BYTE_SIZEDARR, *PBYTE_SIZEDARR; /* size: 0x0008 */

typedef struct _BY_HANDLE_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long dwVolumeSerialNumber;
  /* 0x0020 */ unsigned long nFileSizeHigh;
  /* 0x0024 */ unsigned long nFileSizeLow;
  /* 0x0028 */ unsigned long nNumberOfLinks;
  /* 0x002c */ unsigned long nFileIndexHigh;
  /* 0x0030 */ unsigned long nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION; /* size: 0x0034 */

typedef struct _CACHE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
} CACHE_DESCRIPTOR, *PCACHE_DESCRIPTOR; /* size: 0x000c */

typedef enum _CALLSOURCE
{
  CALLSOURCE_CROSSAPT = 0,
  CALLSOURCE_CROSSCTX = 1,
} CALLSOURCE, *PCALLSOURCE;

typedef struct _CALL_FRAME
{
  /* 0x0000 */ void* ReturnAddress;
  /* 0x0004 */ void* Param1;
  /* 0x0008 */ void* Param2;
  /* 0x000c */ void* CompatibilityArea;
} CALL_FRAME, *PCALL_FRAME; /* size: 0x0010 */

typedef struct _CAT_MEMBERINFO
{
  /* 0x0000 */ wchar_t* pwszSubjGuid;
  /* 0x0004 */ unsigned long dwCertVersion;
} CAT_MEMBERINFO, *PCAT_MEMBERINFO; /* size: 0x0008 */

typedef struct _CAT_NAMEVALUE
{
  /* 0x0000 */ wchar_t* pwszTag;
  /* 0x0004 */ unsigned long fdwFlags;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CAT_NAMEVALUE, *PCAT_NAMEVALUE; /* size: 0x0010 */

typedef struct _CERT_ACCESS_DESCRIPTION
{
  /* 0x0000 */ char* pszAccessMethod;
  /* 0x0004 */ struct _CERT_ALT_NAME_ENTRY AccessLocation;
} CERT_ACCESS_DESCRIPTION, *PCERT_ACCESS_DESCRIPTION; /* size: 0x0010 */

typedef struct _CERT_ALT_NAME_ENTRY
{
  /* 0x0000 */ unsigned long dwAltNameChoice;
  union
  {
    /* 0x0004 */ struct _CERT_OTHER_NAME* pOtherName;
    /* 0x0004 */ wchar_t* pwszRfc822Name;
    /* 0x0004 */ wchar_t* pwszDNSName;
    /* 0x0004 */ struct _CRYPTOAPI_BLOB DirectoryName;
    /* 0x0004 */ wchar_t* pwszURL;
    /* 0x0004 */ struct _CRYPTOAPI_BLOB IPAddress;
    struct
    {
      /* 0x0004 */ char* pszRegisteredID;
      /* 0x0008 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} CERT_ALT_NAME_ENTRY, *PCERT_ALT_NAME_ENTRY; /* size: 0x000c */

typedef struct _CERT_ALT_NAME_INFO
{
  /* 0x0000 */ unsigned long cAltEntry;
  /* 0x0004 */ struct _CERT_ALT_NAME_ENTRY* rgAltEntry;
} CERT_ALT_NAME_INFO, *PCERT_ALT_NAME_INFO; /* size: 0x0008 */

typedef struct _CERT_AUTHORITY_INFO_ACCESS
{
  /* 0x0000 */ unsigned long cAccDescr;
  /* 0x0004 */ struct _CERT_ACCESS_DESCRIPTION* rgAccDescr;
} CERT_AUTHORITY_INFO_ACCESS, *PCERT_AUTHORITY_INFO_ACCESS; /* size: 0x0008 */

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO AuthorityCertIssuer;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
} CERT_AUTHORITY_KEY_ID2_INFO, *PCERT_AUTHORITY_KEY_ID2_INFO; /* size: 0x0018 */

typedef struct _CERT_AUTHORITY_KEY_ID_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB CertIssuer;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB CertSerialNumber;
} CERT_AUTHORITY_KEY_ID_INFO, *PCERT_AUTHORITY_KEY_ID_INFO; /* size: 0x0018 */

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO
{
  /* 0x0000 */ int fCA;
  /* 0x0004 */ int fPathLenConstraint;
  /* 0x0008 */ unsigned long dwPathLenConstraint;
} CERT_BASIC_CONSTRAINTS2_INFO, *PCERT_BASIC_CONSTRAINTS2_INFO; /* size: 0x000c */

typedef struct _CERT_BASIC_CONSTRAINTS_INFO
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB SubjectType;
  /* 0x000c */ int fPathLenConstraint;
  /* 0x0010 */ unsigned long dwPathLenConstraint;
  /* 0x0014 */ unsigned long cSubtreesConstraint;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB* rgSubtreesConstraint;
} CERT_BASIC_CONSTRAINTS_INFO, *PCERT_BASIC_CONSTRAINTS_INFO; /* size: 0x001c */

typedef struct _CERT_BIOMETRIC_DATA
{
  /* 0x0000 */ unsigned long dwTypeOfBiometricDataChoice;
  union
  {
    /* 0x0004 */ unsigned long dwPredefined;
    /* 0x0004 */ char* pszObjId;
  }; /* size: 0x0004 */
  /* 0x0008 */ struct _CERT_HASHED_URL HashedUrl;
} CERT_BIOMETRIC_DATA, *PCERT_BIOMETRIC_DATA; /* size: 0x0020 */

typedef struct _CERT_BIOMETRIC_EXT_INFO
{
  /* 0x0000 */ unsigned long cBiometricData;
  /* 0x0004 */ struct _CERT_BIOMETRIC_DATA* rgBiometricData;
} CERT_BIOMETRIC_EXT_INFO, *PCERT_BIOMETRIC_EXT_INFO; /* size: 0x0008 */

typedef struct _CERT_CHAIN
{
  /* 0x0000 */ unsigned long cCerts;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB* certs;
  /* 0x0008 */ struct _CRYPT_KEY_PROV_INFO keyLocatorInfo;
} CERT_CHAIN, *PCERT_CHAIN; /* size: 0x0024 */

typedef struct _CERT_CHAIN_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cChain;
  /* 0x0010 */ struct _CERT_SIMPLE_CHAIN** rgpChain;
  /* 0x0014 */ unsigned long cLowerQualityChainContext;
  /* 0x0018 */ const struct _CERT_CHAIN_CONTEXT** rgpLowerQualityChainContext;
  /* 0x001c */ int fHasRevocationFreshnessTime;
  /* 0x0020 */ unsigned long dwRevocationFreshnessTime;
  /* 0x0024 */ unsigned long dwCreateFlags;
  /* 0x0028 */ struct _GUID ChainId;
} CERT_CHAIN_CONTEXT, *PCERT_CHAIN_CONTEXT; /* size: 0x0038 */

typedef struct _CERT_CHAIN_ELEMENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0008 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x0010 */ struct _CERT_REVOCATION_INFO* pRevocationInfo;
  /* 0x0014 */ struct _CTL_USAGE* pIssuanceUsage;
  /* 0x0018 */ struct _CTL_USAGE* pApplicationUsage;
  /* 0x001c */ const wchar_t* pwszExtendedErrorInfo;
} CERT_CHAIN_ELEMENT, *PCERT_CHAIN_ELEMENT; /* size: 0x0020 */

typedef struct _CERT_CHAIN_ENGINE_CONFIG
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ void* hRestrictedRoot;
  /* 0x0008 */ void* hRestrictedTrust;
  /* 0x000c */ void* hRestrictedOther;
  /* 0x0010 */ unsigned long cAdditionalStore;
  /* 0x0014 */ void** rghAdditionalStore;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0020 */ unsigned long MaximumCachedCertificates;
  /* 0x0024 */ unsigned long CycleDetectionModulus;
} CERT_CHAIN_ENGINE_CONFIG, *PCERT_CHAIN_ENGINE_CONFIG; /* size: 0x0028 */

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ const char* pszUsageIdentifier;
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ unsigned long dwAcquirePrivateKeyFlags;
  /* 0x0010 */ unsigned long cIssuer;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB* rgIssuer;
  /* 0x0018 */ void* pfnFindCallback /* function */;
  /* 0x001c */ void* pvFindArg;
} CERT_CHAIN_FIND_BY_ISSUER_PARA, *PCERT_CHAIN_FIND_BY_ISSUER_PARA; /* size: 0x0020 */

typedef struct _CERT_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_USAGE_MATCH RequestedUsage;
} CERT_CHAIN_PARA, *PCERT_CHAIN_PARA; /* size: 0x0010 */

typedef struct _CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ void* pvExtraPolicyPara;
} CERT_CHAIN_POLICY_PARA, *PCERT_CHAIN_POLICY_PARA; /* size: 0x000c */

typedef struct _CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ long lChainIndex;
  /* 0x000c */ long lElementIndex;
  /* 0x0010 */ void* pvExtraPolicyStatus;
} CERT_CHAIN_POLICY_STATUS, *PCERT_CHAIN_POLICY_STATUS; /* size: 0x0014 */

typedef struct _CERT_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ unsigned char* pbCertEncoded;
  /* 0x0008 */ unsigned long cbCertEncoded;
  /* 0x000c */ struct _CERT_INFO* pCertInfo;
  /* 0x0010 */ void* hCertStore;
} CERT_CONTEXT, *PCERT_CONTEXT; /* size: 0x0014 */

typedef struct _CERT_CREATE_CONTEXT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ void* pfnFree /* function */;
  /* 0x0008 */ void* pvFree;
  /* 0x000c */ void* pfnSort /* function */;
  /* 0x0010 */ void* pvSort;
} CERT_CREATE_CONTEXT_PARA, *PCERT_CREATE_CONTEXT_PARA; /* size: 0x0014 */

typedef struct _CERT_CRL_CONTEXT_PAIR
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0004 */ const struct _CRL_CONTEXT* pCrlContext;
} CERT_CRL_CONTEXT_PAIR, *PCERT_CRL_CONTEXT_PAIR; /* size: 0x0008 */

typedef struct _CERT_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB g;
} CERT_DH_PARAMETERS, *PCERT_DH_PARAMETERS; /* size: 0x0010 */

typedef struct _CERT_DSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
} CERT_DSS_PARAMETERS, *PCERT_DSS_PARAMETERS; /* size: 0x0018 */

typedef struct _CERT_ECC_SIGNATURE
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB r;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB s;
} CERT_ECC_SIGNATURE, *PCERT_ECC_SIGNATURE; /* size: 0x0010 */

typedef struct _CERT_EXTENSION
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ int fCritical;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_EXTENSION, *PCERT_EXTENSION; /* size: 0x0010 */

typedef struct _CERT_EXTENSIONS
{
  /* 0x0000 */ unsigned long cExtension;
  /* 0x0004 */ struct _CERT_EXTENSION* rgExtension;
} CERT_EXTENSIONS, *PCERT_EXTENSIONS; /* size: 0x0008 */

typedef struct _CERT_FORTEZZA_DATA_PROP
{
  /* 0x0000 */ unsigned char SerialNumber[8];
  /* 0x0008 */ int CertIndex;
  /* 0x000c */ unsigned char CertLabel[36];
} CERT_FORTEZZA_DATA_PROP, *PCERT_FORTEZZA_DATA_PROP; /* size: 0x0030 */

typedef struct _CERT_GENERAL_SUBTREE
{
  /* 0x0000 */ struct _CERT_ALT_NAME_ENTRY Base;
  /* 0x000c */ unsigned long dwMinimum;
  /* 0x0010 */ int fMaximum;
  /* 0x0014 */ unsigned long dwMaximum;
} CERT_GENERAL_SUBTREE, *PCERT_GENERAL_SUBTREE; /* size: 0x0018 */

typedef struct _CERT_HASHED_URL
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x000c */ struct _CRYPTOAPI_BLOB Hash;
  /* 0x0014 */ wchar_t* pwszUrl;
} CERT_HASHED_URL, *PCERT_HASHED_URL; /* size: 0x0018 */

typedef struct _CERT_ID
{
  /* 0x0000 */ unsigned long dwIdChoice;
  union
  {
    /* 0x0004 */ struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    /* 0x0004 */ struct _CRYPTOAPI_BLOB KeyId;
    struct
    {
      /* 0x0004 */ struct _CRYPTOAPI_BLOB HashId;
      /* 0x000c */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} CERT_ID, *PCERT_ID; /* size: 0x0014 */

typedef struct _CERT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x000c */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0020 */ struct _FILETIME NotBefore;
  /* 0x0028 */ struct _FILETIME NotAfter;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0038 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0050 */ struct _CRYPT_BIT_BLOB IssuerUniqueId;
  /* 0x005c */ struct _CRYPT_BIT_BLOB SubjectUniqueId;
  /* 0x0068 */ unsigned long cExtension;
  /* 0x006c */ struct _CERT_EXTENSION* rgExtension;
} CERT_INFO, *PCERT_INFO; /* size: 0x0070 */

typedef struct _CERT_ISSUER_SERIAL_NUMBER
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SerialNumber;
} CERT_ISSUER_SERIAL_NUMBER, *PCERT_ISSUER_SERIAL_NUMBER; /* size: 0x0010 */

typedef struct _CERT_KEYGEN_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x001c */ wchar_t* pwszChallengeString;
} CERT_KEYGEN_REQUEST_INFO, *PCERT_KEYGEN_REQUEST_INFO; /* size: 0x0020 */

typedef struct _CERT_KEY_ATTRIBUTES_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0008 */ struct _CRYPT_BIT_BLOB IntendedKeyUsage;
  /* 0x0014 */ struct _CERT_PRIVATE_KEY_VALIDITY* pPrivateKeyUsagePeriod;
} CERT_KEY_ATTRIBUTES_INFO, *PCERT_KEY_ATTRIBUTES_INFO; /* size: 0x0018 */

typedef struct _CERT_KEY_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  union
  {
    /* 0x0004 */ unsigned long hCryptProv;
    /* 0x0004 */ unsigned long hNCryptKey;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long dwKeySpec;
} CERT_KEY_CONTEXT, *PCERT_KEY_CONTEXT; /* size: 0x000c */

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO
{
  /* 0x0000 */ unsigned long cCertPolicyId;
  /* 0x0004 */ struct _CERT_POLICY_ID* rgCertPolicyId;
  /* 0x0008 */ struct _CRYPT_BIT_BLOB RestrictedKeyUsage;
} CERT_KEY_USAGE_RESTRICTION_INFO, *PCERT_KEY_USAGE_RESTRICTION_INFO; /* size: 0x0014 */

typedef struct _CERT_LDAP_STORE_OPENED_PARA
{
  /* 0x0000 */ void* pvLdapSessionHandle;
  /* 0x0004 */ const wchar_t* pwszLdapUrl;
} CERT_LDAP_STORE_OPENED_PARA, *PCERT_LDAP_STORE_OPENED_PARA; /* size: 0x0008 */

typedef struct _CERT_LOGOTYPE_AUDIO
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x000c */ struct _CERT_LOGOTYPE_AUDIO_INFO* pLogotypeAudioInfo;
} CERT_LOGOTYPE_AUDIO, *PCERT_LOGOTYPE_AUDIO; /* size: 0x0010 */

typedef struct _CERT_LOGOTYPE_AUDIO_INFO
{
  /* 0x0000 */ unsigned long dwFileSize;
  /* 0x0004 */ unsigned long dwPlayTime;
  /* 0x0008 */ unsigned long dwChannels;
  /* 0x000c */ unsigned long dwSampleRate;
  /* 0x0010 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_AUDIO_INFO, *PCERT_LOGOTYPE_AUDIO_INFO; /* size: 0x0014 */

typedef struct _CERT_LOGOTYPE_DATA
{
  /* 0x0000 */ unsigned long cLogotypeImage;
  /* 0x0004 */ struct _CERT_LOGOTYPE_IMAGE* rgLogotypeImage;
  /* 0x0008 */ unsigned long cLogotypeAudio;
  /* 0x000c */ struct _CERT_LOGOTYPE_AUDIO* rgLogotypeAudio;
} CERT_LOGOTYPE_DATA, *PCERT_LOGOTYPE_DATA; /* size: 0x0010 */

typedef struct _CERT_LOGOTYPE_DETAILS
{
  /* 0x0000 */ wchar_t* pwszMimeType;
  /* 0x0004 */ unsigned long cHashedUrl;
  /* 0x0008 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_DETAILS, *PCERT_LOGOTYPE_DETAILS; /* size: 0x000c */

typedef struct _CERT_LOGOTYPE_EXT_INFO
{
  /* 0x0000 */ unsigned long cCommunityLogo;
  /* 0x0004 */ struct _CERT_LOGOTYPE_INFO* rgCommunityLogo;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO* pIssuerLogo;
  /* 0x000c */ struct _CERT_LOGOTYPE_INFO* pSubjectLogo;
  /* 0x0010 */ unsigned long cOtherLogo;
  /* 0x0014 */ struct _CERT_OTHER_LOGOTYPE_INFO* rgOtherLogo;
} CERT_LOGOTYPE_EXT_INFO, *PCERT_LOGOTYPE_EXT_INFO; /* size: 0x0018 */

typedef struct _CERT_LOGOTYPE_IMAGE
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x000c */ struct _CERT_LOGOTYPE_IMAGE_INFO* pLogotypeImageInfo;
} CERT_LOGOTYPE_IMAGE, *PCERT_LOGOTYPE_IMAGE; /* size: 0x0010 */

typedef struct _CERT_LOGOTYPE_IMAGE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeImageInfoChoice;
  /* 0x0004 */ unsigned long dwFileSize;
  /* 0x0008 */ unsigned long dwXSize;
  /* 0x000c */ unsigned long dwYSize;
  /* 0x0010 */ unsigned long dwLogotypeImageResolutionChoice;
  union
  {
    /* 0x0014 */ unsigned long dwNumBits;
    /* 0x0014 */ unsigned long dwTableSize;
  }; /* size: 0x0004 */
  /* 0x0018 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_IMAGE_INFO, *PCERT_LOGOTYPE_IMAGE_INFO; /* size: 0x001c */

typedef struct _CERT_LOGOTYPE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeInfoChoice;
  union
  {
    /* 0x0004 */ struct _CERT_LOGOTYPE_DATA* pLogotypeDirectInfo;
    /* 0x0004 */ struct _CERT_LOGOTYPE_REFERENCE* pLogotypeIndirectInfo;
  }; /* size: 0x0004 */
} CERT_LOGOTYPE_INFO, *PCERT_LOGOTYPE_INFO; /* size: 0x0008 */

typedef struct _CERT_LOGOTYPE_REFERENCE
{
  /* 0x0000 */ unsigned long cHashedUrl;
  /* 0x0004 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_REFERENCE, *PCERT_LOGOTYPE_REFERENCE; /* size: 0x0008 */

typedef struct _CERT_NAME_CONSTRAINTS_INFO
{
  /* 0x0000 */ unsigned long cPermittedSubtree;
  /* 0x0004 */ struct _CERT_GENERAL_SUBTREE* rgPermittedSubtree;
  /* 0x0008 */ unsigned long cExcludedSubtree;
  /* 0x000c */ struct _CERT_GENERAL_SUBTREE* rgExcludedSubtree;
} CERT_NAME_CONSTRAINTS_INFO, *PCERT_NAME_CONSTRAINTS_INFO; /* size: 0x0010 */

typedef struct _CERT_NAME_INFO
{
  /* 0x0000 */ unsigned long cRDN;
  /* 0x0004 */ struct _CERT_RDN* rgRDN;
} CERT_NAME_INFO, *PCERT_NAME_INFO; /* size: 0x0008 */

typedef struct _CERT_NAME_VALUE
{
  /* 0x0000 */ unsigned long dwValueType;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Value;
} CERT_NAME_VALUE, *PCERT_NAME_VALUE; /* size: 0x000c */

typedef struct _CERT_OTHER_LOGOTYPE_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CERT_LOGOTYPE_INFO LogotypeInfo;
} CERT_OTHER_LOGOTYPE_INFO, *PCERT_OTHER_LOGOTYPE_INFO; /* size: 0x000c */

typedef struct _CERT_OTHER_NAME
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Value;
} CERT_OTHER_NAME, *PCERT_OTHER_NAME; /* size: 0x000c */

typedef struct _CERT_PAIR
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Forward;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Reverse;
} CERT_PAIR, *PCERT_PAIR; /* size: 0x0010 */

typedef struct _CERT_PHYSICAL_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ char* pszOpenStoreProvider;
  /* 0x0008 */ unsigned long dwOpenEncodingType;
  /* 0x000c */ unsigned long dwOpenFlags;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB OpenParameters;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwPriority;
} CERT_PHYSICAL_STORE_INFO, *PCERT_PHYSICAL_STORE_INFO; /* size: 0x0020 */

typedef struct _CERT_POLICIES_INFO
{
  /* 0x0000 */ unsigned long cPolicyInfo;
  /* 0x0004 */ struct _CERT_POLICY_INFO* rgPolicyInfo;
} CERT_POLICIES_INFO, *PCERT_POLICIES_INFO; /* size: 0x0008 */

typedef struct _CERT_POLICY95_QUALIFIER1
{
  /* 0x0000 */ wchar_t* pszPracticesReference;
  /* 0x0004 */ char* pszNoticeIdentifier;
  /* 0x0008 */ char* pszNSINoticeIdentifier;
  /* 0x000c */ unsigned long cCPSURLs;
  /* 0x0010 */ struct _CPS_URLS* rgCPSURLs;
} CERT_POLICY95_QUALIFIER1, *PCERT_POLICY95_QUALIFIER1; /* size: 0x0014 */

typedef struct _CERT_POLICY_CONSTRAINTS_INFO
{
  /* 0x0000 */ int fRequireExplicitPolicy;
  /* 0x0004 */ unsigned long dwRequireExplicitPolicySkipCerts;
  /* 0x0008 */ int fInhibitPolicyMapping;
  /* 0x000c */ unsigned long dwInhibitPolicyMappingSkipCerts;
} CERT_POLICY_CONSTRAINTS_INFO, *PCERT_POLICY_CONSTRAINTS_INFO; /* size: 0x0010 */

typedef struct _CERT_POLICY_ID
{
  /* 0x0000 */ unsigned long cCertPolicyElementId;
  /* 0x0004 */ char** rgpszCertPolicyElementId;
} CERT_POLICY_ID, *PCERT_POLICY_ID; /* size: 0x0008 */

typedef struct _CERT_POLICY_INFO
{
  /* 0x0000 */ char* pszPolicyIdentifier;
  /* 0x0004 */ unsigned long cPolicyQualifier;
  /* 0x0008 */ struct _CERT_POLICY_QUALIFIER_INFO* rgPolicyQualifier;
} CERT_POLICY_INFO, *PCERT_POLICY_INFO; /* size: 0x000c */

typedef struct _CERT_POLICY_MAPPING
{
  /* 0x0000 */ char* pszIssuerDomainPolicy;
  /* 0x0004 */ char* pszSubjectDomainPolicy;
} CERT_POLICY_MAPPING, *PCERT_POLICY_MAPPING; /* size: 0x0008 */

typedef struct _CERT_POLICY_MAPPINGS_INFO
{
  /* 0x0000 */ unsigned long cPolicyMapping;
  /* 0x0004 */ struct _CERT_POLICY_MAPPING* rgPolicyMapping;
} CERT_POLICY_MAPPINGS_INFO, *PCERT_POLICY_MAPPINGS_INFO; /* size: 0x0008 */

typedef struct _CERT_POLICY_QUALIFIER_INFO
{
  /* 0x0000 */ char* pszPolicyQualifierId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Qualifier;
} CERT_POLICY_QUALIFIER_INFO, *PCERT_POLICY_QUALIFIER_INFO; /* size: 0x000c */

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE
{
  /* 0x0000 */ char* pszOrganization;
  /* 0x0004 */ unsigned long cNoticeNumbers;
  /* 0x0008 */ int* rgNoticeNumbers;
} CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE; /* size: 0x000c */

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE
{
  /* 0x0000 */ struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE* pNoticeReference;
  /* 0x0004 */ wchar_t* pszDisplayText;
} CERT_POLICY_QUALIFIER_USER_NOTICE, *PCERT_POLICY_QUALIFIER_USER_NOTICE; /* size: 0x0008 */

typedef struct _CERT_PRIVATE_KEY_VALIDITY
{
  /* 0x0000 */ struct _FILETIME NotBefore;
  /* 0x0008 */ struct _FILETIME NotAfter;
} CERT_PRIVATE_KEY_VALIDITY, *PCERT_PRIVATE_KEY_VALIDITY; /* size: 0x0010 */

typedef struct _CERT_PUBLIC_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x000c */ struct _CRYPT_BIT_BLOB PublicKey;
} CERT_PUBLIC_KEY_INFO, *PCERT_PUBLIC_KEY_INFO; /* size: 0x0018 */

typedef struct _CERT_QC_STATEMENT
{
  /* 0x0000 */ char* pszStatementId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB StatementInfo;
} CERT_QC_STATEMENT, *PCERT_QC_STATEMENT; /* size: 0x000c */

typedef struct _CERT_QC_STATEMENTS_EXT_INFO
{
  /* 0x0000 */ unsigned long cStatement;
  /* 0x0004 */ struct _CERT_QC_STATEMENT* rgStatement;
} CERT_QC_STATEMENTS_EXT_INFO, *PCERT_QC_STATEMENTS_EXT_INFO; /* size: 0x0008 */

typedef struct _CERT_RDN
{
  /* 0x0000 */ unsigned long cRDNAttr;
  /* 0x0004 */ struct _CERT_RDN_ATTR* rgRDNAttr;
} CERT_RDN, *PCERT_RDN; /* size: 0x0008 */

typedef struct _CERT_RDN_ATTR
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ unsigned long dwValueType;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_RDN_ATTR, *PCERT_RDN_ATTR; /* size: 0x0010 */

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA
{
  /* 0x0000 */ struct HKEY__* hKeyBase;
  /* 0x0004 */ wchar_t* pwszRegPath;
} CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA; /* size: 0x0008 */

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA
{
  /* 0x0000 */ struct HKEY__* hKey;
  /* 0x0004 */ wchar_t* pwszStoreDirectory;
} CERT_REGISTRY_STORE_ROAMING_PARA, *PCERT_REGISTRY_STORE_ROAMING_PARA; /* size: 0x0008 */

typedef struct _CERT_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x000c */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0024 */ unsigned long cAttribute;
  /* 0x0028 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CERT_REQUEST_INFO, *PCERT_REQUEST_INFO; /* size: 0x002c */

typedef struct _CERT_REVOCATION_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ void* hChainEngine;
  /* 0x0008 */ void* hAdditionalStore;
  /* 0x000c */ unsigned long dwChainFlags;
  /* 0x0010 */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0014 */ struct _FILETIME* pftCurrentTime;
  /* 0x0018 */ struct _FILETIME* pftCacheResync;
} CERT_REVOCATION_CHAIN_PARA, *PCERT_REVOCATION_CHAIN_PARA; /* size: 0x001c */

typedef struct _CERT_REVOCATION_CRL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ const struct _CRL_CONTEXT* pBaseCrlContext;
  /* 0x0008 */ const struct _CRL_CONTEXT* pDeltaCrlContext;
  /* 0x000c */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0010 */ int fDeltaCrlEntry;
} CERT_REVOCATION_CRL_INFO, *PCERT_REVOCATION_CRL_INFO; /* size: 0x0014 */

typedef struct _CERT_REVOCATION_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRevocationResult;
  /* 0x0008 */ const char* pszRevocationOid;
  /* 0x000c */ void* pvOidSpecificInfo;
  /* 0x0010 */ int fHasFreshnessTime;
  /* 0x0014 */ unsigned long dwFreshnessTime;
  /* 0x0018 */ struct _CERT_REVOCATION_CRL_INFO* pCrlInfo;
} CERT_REVOCATION_INFO, *PCERT_REVOCATION_INFO; /* size: 0x001c */

typedef struct _CERT_REVOCATION_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ const struct _CERT_CONTEXT* pIssuerCert;
  /* 0x0008 */ unsigned long cCertStore;
  /* 0x000c */ void** rgCertStore;
  /* 0x0010 */ void* hCrlStore;
  /* 0x0014 */ struct _FILETIME* pftTimeToUse;
} CERT_REVOCATION_PARA, *PCERT_REVOCATION_PARA; /* size: 0x0018 */

typedef struct _CERT_REVOCATION_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwIndex;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReason;
  /* 0x0010 */ int fHasFreshnessTime;
  /* 0x0014 */ unsigned long dwFreshnessTime;
} CERT_REVOCATION_STATUS, *PCERT_REVOCATION_STATUS; /* size: 0x0018 */

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned char* pbEncodedOcspResponse;
  /* 0x0008 */ unsigned long cbEncodedOcspResponse;
} CERT_SERVER_OCSP_RESPONSE_CONTEXT, *PCERT_SERVER_OCSP_RESPONSE_CONTEXT; /* size: 0x000c */

typedef struct _CERT_SIGNED_CONTENT_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0014 */ struct _CRYPT_BIT_BLOB Signature;
} CERT_SIGNED_CONTENT_INFO, *PCERT_SIGNED_CONTENT_INFO; /* size: 0x0020 */

typedef struct _CERT_SIMPLE_CHAIN
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cElement;
  /* 0x0010 */ struct _CERT_CHAIN_ELEMENT** rgpElement;
  /* 0x0014 */ struct _CERT_TRUST_LIST_INFO* pTrustListInfo;
  /* 0x0018 */ int fHasRevocationFreshnessTime;
  /* 0x001c */ unsigned long dwRevocationFreshnessTime;
} CERT_SIMPLE_CHAIN, *PCERT_SIMPLE_CHAIN; /* size: 0x0020 */

typedef struct _CERT_STORE_PROV_FIND_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long dwFindFlags;
  /* 0x000c */ unsigned long dwFindType;
  /* 0x0010 */ const void* pvFindPara;
} CERT_STORE_PROV_FIND_INFO, *PCERT_STORE_PROV_FIND_INFO; /* size: 0x0014 */

typedef struct _CERT_STORE_PROV_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cStoreProvFunc;
  /* 0x0008 */ void** rgpvStoreProvFunc;
  /* 0x000c */ void* hStoreProv;
  /* 0x0010 */ unsigned long dwStoreProvFlags;
  /* 0x0014 */ void* hStoreProvFuncAddr2;
} CERT_STORE_PROV_INFO, *PCERT_STORE_PROV_INFO; /* size: 0x0018 */

typedef struct _CERT_SYSTEM_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
} CERT_SYSTEM_STORE_INFO, *PCERT_SYSTEM_STORE_INFO; /* size: 0x0004 */

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA
{
  union
  {
    /* 0x0000 */ struct HKEY__* hKeyBase;
    /* 0x0000 */ void* pvBase;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ void* pvSystemStore;
    /* 0x0004 */ const char* pszSystemStore;
    /* 0x0004 */ const wchar_t* pwszSystemStore;
  }; /* size: 0x0004 */
} CERT_SYSTEM_STORE_RELOCATE_PARA, *PCERT_SYSTEM_STORE_RELOCATE_PARA; /* size: 0x0008 */

typedef struct _CERT_TEMPLATE_EXT
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ int fMinorVersion;
  /* 0x000c */ unsigned long dwMinorVersion;
} CERT_TEMPLATE_EXT, *PCERT_TEMPLATE_EXT; /* size: 0x0010 */

typedef struct _CERT_TRUST_LIST_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CTL_ENTRY* pCtlEntry;
  /* 0x0008 */ const struct _CTL_CONTEXT* pCtlContext;
} CERT_TRUST_LIST_INFO, *PCERT_TRUST_LIST_INFO; /* size: 0x000c */

typedef struct _CERT_TRUST_STATUS
{
  /* 0x0000 */ unsigned long dwErrorStatus;
  /* 0x0004 */ unsigned long dwInfoStatus;
} CERT_TRUST_STATUS, *PCERT_TRUST_STATUS; /* size: 0x0008 */

typedef struct _CERT_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ struct _CTL_USAGE Usage;
} CERT_USAGE_MATCH, *PCERT_USAGE_MATCH; /* size: 0x000c */

typedef struct _CERT_X942_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB g;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB j;
  /* 0x0020 */ struct _CERT_X942_DH_VALIDATION_PARAMS* pValidationParams;
} CERT_X942_DH_PARAMETERS, *PCERT_X942_DH_PARAMETERS; /* size: 0x0024 */

typedef struct _CERT_X942_DH_VALIDATION_PARAMS
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB seed;
  /* 0x000c */ unsigned long pgenCounter;
} CERT_X942_DH_VALIDATION_PARAMS, *PCERT_X942_DH_VALIDATION_PARAMS; /* size: 0x0010 */

typedef struct _CHAR_INFO
{
  union
  {
    union
    {
      /* 0x0000 */ wchar_t UnicodeChar;
      /* 0x0000 */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Char;
  /* 0x0002 */ unsigned short Attributes;
} CHAR_INFO, *PCHAR_INFO; /* size: 0x0004 */

typedef union _CLIENT_CALL_RETURN
{
  union
  {
    /* 0x0000 */ void* Pointer;
    /* 0x0000 */ long Simple;
  }; /* size: 0x0004 */
} CLIENT_CALL_RETURN, *PCLIENT_CALL_RETURN; /* size: 0x0004 */

typedef struct _CLIENT_ID
{
  /* 0x0000 */ void* UniqueProcess;
  /* 0x0004 */ void* UniqueThread;
} CLIENT_ID, *PCLIENT_ID; /* size: 0x0008 */

typedef struct _CLIENT_ID64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} CLIENT_ID64, *PCLIENT_ID64; /* size: 0x0010 */

typedef struct _CLILIST
{
  /* 0x0000 */ void* hcliNext;
  /* 0x0004 */ void* info[20];
} CLILIST, *PCLILIST; /* size: 0x0054 */

typedef struct _CLINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ int bnative;
  /* 0x0008 */ int format;
  /* 0x000c */ int options;
  /* 0x0010 */ int bdata;
  /* 0x0014 */ void* hdevInfo;
  /* 0x0018 */ int bnewDevInfo;
} CLINFO, *PCLINFO; /* size: 0x001c */

typedef struct _CMC_ADD_ATTRIBUTES_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x000c */ unsigned long cAttribute;
  /* 0x0010 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CMC_ADD_ATTRIBUTES_INFO, *PCMC_ADD_ATTRIBUTES_INFO; /* size: 0x0014 */

typedef struct _CMC_ADD_EXTENSIONS_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x000c */ unsigned long cExtension;
  /* 0x0010 */ struct _CERT_EXTENSION* rgExtension;
} CMC_ADD_EXTENSIONS_INFO, *PCMC_ADD_EXTENSIONS_INFO; /* size: 0x0014 */

typedef struct _CMC_DATA_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0008 */ unsigned long cTaggedRequest;
  /* 0x000c */ struct _CMC_TAGGED_REQUEST* rgTaggedRequest;
  /* 0x0010 */ unsigned long cTaggedContentInfo;
  /* 0x0014 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0018 */ unsigned long cTaggedOtherMsg;
  /* 0x001c */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_DATA_INFO, *PCMC_DATA_INFO; /* size: 0x0020 */

typedef struct _CMC_PEND_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PendToken;
  /* 0x0008 */ struct _FILETIME PendTime;
} CMC_PEND_INFO, *PCMC_PEND_INFO; /* size: 0x0010 */

typedef struct _CMC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0008 */ unsigned long cTaggedContentInfo;
  /* 0x000c */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0010 */ unsigned long cTaggedOtherMsg;
  /* 0x0014 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_RESPONSE_INFO, *PCMC_RESPONSE_INFO; /* size: 0x0018 */

typedef struct _CMC_STATUS_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ unsigned long cBodyList;
  /* 0x0008 */ unsigned long* rgdwBodyList;
  /* 0x000c */ wchar_t* pwszStatusString;
  /* 0x0010 */ unsigned long dwOtherInfoChoice;
  union
  {
    /* 0x0014 */ unsigned long dwFailInfo;
    /* 0x0014 */ struct _CMC_PEND_INFO* pPendInfo;
  }; /* size: 0x0004 */
} CMC_STATUS_INFO, *PCMC_STATUS_INFO; /* size: 0x0018 */

typedef struct _CMC_TAGGED_ATTRIBUTE
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ struct _CRYPT_ATTRIBUTE Attribute;
} CMC_TAGGED_ATTRIBUTE, *PCMC_TAGGED_ATTRIBUTE; /* size: 0x0010 */

typedef struct _CMC_TAGGED_CERT_REQUEST
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB SignedCertRequest;
} CMC_TAGGED_CERT_REQUEST, *PCMC_TAGGED_CERT_REQUEST; /* size: 0x000c */

typedef struct _CMC_TAGGED_CONTENT_INFO
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB EncodedContentInfo;
} CMC_TAGGED_CONTENT_INFO, *PCMC_TAGGED_CONTENT_INFO; /* size: 0x000c */

typedef struct _CMC_TAGGED_OTHER_MSG
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CMC_TAGGED_OTHER_MSG, *PCMC_TAGGED_OTHER_MSG; /* size: 0x0010 */

typedef struct _CMC_TAGGED_REQUEST
{
  /* 0x0000 */ unsigned long dwTaggedRequestChoice;
  /* 0x0004 */ struct _CMC_TAGGED_CERT_REQUEST* pTaggedCertRequest;
} CMC_TAGGED_REQUEST, *PCMC_TAGGED_REQUEST; /* size: 0x0008 */

typedef struct _CMSG_CMS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  union
  {
    /* 0x0004 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
    /* 0x0004 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
    /* 0x0004 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  }; /* size: 0x0004 */
} CMSG_CMS_RECIPIENT_INFO, *PCMSG_CMS_RECIPIENT_INFO; /* size: 0x0008 */

typedef struct _CMSG_CMS_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CERT_ID SignerId;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0024 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0038 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0040 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_CMS_SIGNER_INFO, *PCMSG_CMS_SIGNER_INFO; /* size: 0x0048 */

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0010 */ void* pfnAlloc /* function */;
  /* 0x0014 */ void* pfnFree /* function */;
  /* 0x0018 */ unsigned long hNCryptKey;
  /* 0x001c */ unsigned char* pbContentEncryptKey;
  /* 0x0020 */ unsigned long cbContentEncryptKey;
  /* 0x0024 */ void* hCNGContentEncryptKey;
  /* 0x0028 */ unsigned char* pbCNGContentEncryptKeyObject;
} CMSG_CNG_CONTENT_DECRYPT_INFO, *PCMSG_CNG_CONTENT_DECRYPT_INFO; /* size: 0x002c */

typedef struct _CMSG_CONTENT_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long hCryptProv;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0014 */ void* pvEncryptionAuxInfo;
  /* 0x0018 */ unsigned long cRecipients;
  /* 0x001c */ struct _CMSG_RECIPIENT_ENCODE_INFO* rgCmsRecipients;
  /* 0x0020 */ void* pfnAlloc /* function */;
  /* 0x0024 */ void* pfnFree /* function */;
  /* 0x0028 */ unsigned long dwEncryptFlags;
  union
  {
    /* 0x002c */ unsigned long hContentEncryptKey;
    /* 0x002c */ void* hCNGContentEncryptKey;
  }; /* size: 0x0004 */
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ int fCNG;
  /* 0x0038 */ unsigned char* pbCNGContentEncryptKeyObject;
  /* 0x003c */ unsigned char* pbContentEncryptKey;
  /* 0x0040 */ unsigned long cbContentEncryptKey;
} CMSG_CONTENT_ENCRYPT_INFO, *PCMSG_CONTENT_ENCRYPT_INFO; /* size: 0x0044 */

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB blob;
} CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x0010 */

typedef struct _CMSG_CTRL_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  union
  {
    /* 0x0004 */ unsigned long hCryptProv;
    /* 0x0004 */ unsigned long hNCryptKey;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ unsigned long dwRecipientIndex;
} CMSG_CTRL_DECRYPT_PARA, *PCMSG_CTRL_DECRYPT_PARA; /* size: 0x0010 */

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ unsigned long dwUnauthAttrIndex;
} CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x000c */

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  union
  {
    /* 0x0004 */ unsigned long hCryptProv;
    /* 0x0004 */ unsigned long hNCryptKey;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
  /* 0x0010 */ unsigned long dwRecipientIndex;
  /* 0x0014 */ unsigned long dwRecipientEncryptedKeyIndex;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB OriginatorPublicKey;
} CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA; /* size: 0x0024 */

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  union
  {
    /* 0x0004 */ unsigned long hCryptProv;
    /* 0x0004 */ unsigned long hNCryptKey;
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
  /* 0x0010 */ unsigned long dwRecipientIndex;
} CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA; /* size: 0x0014 */

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long hCryptProv;
  /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  /* 0x000c */ unsigned long dwRecipientIndex;
  /* 0x0010 */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0014 */ unsigned long hKeyEncryptionKey;
    /* 0x0014 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0004 */
} CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA; /* size: 0x0018 */

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long hCryptProv;
  /* 0x0008 */ unsigned long dwSignerIndex;
  /* 0x000c */ unsigned long dwSignerType;
  /* 0x0010 */ void* pvSigner;
} CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA; /* size: 0x0014 */

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0010 */ void* pvEncryptionAuxInfo;
} CMSG_ENCRYPTED_ENCODE_INFO, *PCMSG_ENCRYPTED_ENCODE_INFO; /* size: 0x0014 */

typedef struct _CMSG_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long hCryptProv;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0014 */ void* pvEncryptionAuxInfo;
  /* 0x0018 */ unsigned long cRecipients;
  /* 0x001c */ struct _CERT_INFO** rgpRecipients;
} CMSG_ENVELOPED_ENCODE_INFO, *PCMSG_ENVELOPED_ENCODE_INFO; /* size: 0x0020 */

typedef struct _CMSG_HASHED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long hCryptProv;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0014 */ void* pvHashAuxInfo;
} CMSG_HASHED_ENCODE_INFO, *PCMSG_HASHED_ENCODE_INFO; /* size: 0x0018 */

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x001c */ unsigned long dwOriginatorChoice;
  union
  {
    /* 0x0020 */ struct _CERT_ID OriginatorCertId;
    /* 0x0020 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0018 */
  /* 0x0038 */ unsigned long cKeyAgreeKeyEncryptInfo;
  /* 0x003c */ struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO** rgpKeyAgreeKeyEncryptInfo;
  /* 0x0040 */ unsigned long dwFlags;
} CMSG_KEY_AGREE_ENCRYPT_INFO, *PCMSG_KEY_AGREE_ENCRYPT_INFO; /* size: 0x0044 */

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO; /* size: 0x000c */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0010 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0014 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
  /* 0x0020 */ void* pvKeyWrapAuxInfo;
  /* 0x0024 */ unsigned long hCryptProv;
  /* 0x0028 */ unsigned long dwKeySpec;
  /* 0x002c */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pEphemeralAlgorithm;
    /* 0x0030 */ struct _CERT_ID* pSenderId;
  }; /* size: 0x0004 */
  /* 0x0034 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x003c */ unsigned long cRecipientEncryptedKeys;
  /* 0x0040 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO; /* size: 0x0044 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwOriginatorChoice;
  union
  {
    /* 0x0008 */ struct _CERT_ID OriginatorCertId;
    /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0018 */
  /* 0x0020 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0034 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0038 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_INFO, *PCMSG_KEY_AGREE_RECIPIENT_INFO; /* size: 0x003c */

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x001c */ unsigned long dwFlags;
} CMSG_KEY_TRANS_ENCRYPT_INFO, *PCMSG_KEY_TRANS_ENCRYPT_INFO; /* size: 0x0020 */

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0010 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0014 */ unsigned long hCryptProv;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0024 */ struct _CERT_ID RecipientId;
} CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO; /* size: 0x0038 */

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CERT_ID RecipientId;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0024 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_TRANS_RECIPIENT_INFO, *PCMSG_KEY_TRANS_RECIPIENT_INFO; /* size: 0x002c */

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x001c */ unsigned long dwFlags;
} CMSG_MAIL_LIST_ENCRYPT_INFO, *PCMSG_MAIL_LIST_ENCRYPT_INFO; /* size: 0x0020 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0010 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0014 */ unsigned long hCryptProv;
  /* 0x0018 */ unsigned long dwKeyChoice;
  union
  {
    /* 0x001c */ unsigned long hKeyEncryptionKey;
    /* 0x001c */ void* pvKeyEncryptionKey;
  }; /* size: 0x0004 */
  /* 0x0020 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0028 */ struct _FILETIME Date;
  /* 0x0030 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO; /* size: 0x0034 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x000c */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0020 */ struct _FILETIME Date;
  /* 0x0028 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_INFO, *PCMSG_MAIL_LIST_RECIPIENT_INFO; /* size: 0x002c */

typedef struct _CMSG_RC2_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC2_AUX_INFO, *PCMSG_RC2_AUX_INFO; /* size: 0x0008 */

typedef struct _CMSG_RC4_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC4_AUX_INFO, *PCMSG_RC4_AUX_INFO; /* size: 0x0008 */

typedef struct _CMSG_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  union
  {
    /* 0x0004 */ struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO* pKeyTrans;
    /* 0x0004 */ struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO* pKeyAgree;
    /* 0x0004 */ struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO* pMailList;
  }; /* size: 0x0004 */
} CMSG_RECIPIENT_ENCODE_INFO, *PCMSG_RECIPIENT_ENCODE_INFO; /* size: 0x0008 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0010 */ struct _CERT_ID RecipientId;
  /* 0x0024 */ struct _FILETIME Date;
  /* 0x002c */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO; /* size: 0x0030 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO
{
  /* 0x0000 */ struct _CERT_ID RecipientId;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x001c */ struct _FILETIME Date;
  /* 0x0024 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO; /* size: 0x0028 */

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CMSG_SIGNED_ENCODE_INFO SignedInfo;
  /* 0x0020 */ struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
} CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO; /* size: 0x0040 */

typedef struct _CMSG_SIGNED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cSigners;
  /* 0x0008 */ struct _CMSG_SIGNER_ENCODE_INFO* rgSigners;
  /* 0x000c */ unsigned long cCertEncoded;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
  /* 0x0014 */ unsigned long cCrlEncoded;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB* rgCrlEncoded;
} CMSG_SIGNED_ENCODE_INFO, *PCMSG_SIGNED_ENCODE_INFO; /* size: 0x001c */

typedef struct _CMSG_SIGNER_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_INFO* pCertInfo;
  union
  {
    /* 0x0008 */ unsigned long hCryptProv;
    /* 0x0008 */ unsigned long hNCryptKey;
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long dwKeySpec;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x001c */ void* pvHashAuxInfo;
  /* 0x0020 */ unsigned long cAuthAttr;
  /* 0x0024 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0028 */ unsigned long cUnauthAttr;
  /* 0x002c */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
} CMSG_SIGNER_ENCODE_INFO, *PCMSG_SIGNER_ENCODE_INFO; /* size: 0x0030 */

typedef struct _CMSG_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x000c */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0014 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0020 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x002c */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0034 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x003c */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_SIGNER_INFO, *PCMSG_SIGNER_INFO; /* size: 0x0044 */

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
} CMSG_SP3_COMPATIBLE_AUX_INFO, *PCMSG_SP3_COMPATIBLE_AUX_INFO; /* size: 0x0008 */

typedef struct _CMSG_STREAM_INFO
{
  /* 0x0000 */ unsigned long cbContent;
  /* 0x0004 */ void* pfnStreamOutput /* function */;
  /* 0x0008 */ void* pvArg;
} CMSG_STREAM_INFO, *PCMSG_STREAM_INFO; /* size: 0x000c */

typedef struct _CMS_DH_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ char* pszContentEncObjId;
  /* 0x000c */ struct _CRYPTOAPI_BLOB PubInfo;
  /* 0x0014 */ void* pReserved;
} CMS_DH_KEY_INFO, *PCMS_DH_KEY_INFO; /* size: 0x0018 */

typedef struct _CMS_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned char* pbOID;
  /* 0x000c */ unsigned long cbOID;
} CMS_KEY_INFO, *PCMS_KEY_INFO; /* size: 0x0010 */

typedef struct _CM_COMPONENT_INFORMATION
{
  /* 0x0000 */ struct _DEVICE_FLAGS Flags;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Key;
  /* 0x000c */ unsigned long AffinityMask;
} CM_COMPONENT_INFORMATION, *PCM_COMPONENT_INFORMATION; /* size: 0x0010 */

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA
{
  /* 0x0000 */ unsigned long BytesPerSector;
  /* 0x0004 */ unsigned long NumberOfCylinders;
  /* 0x0008 */ unsigned long SectorsPerTrack;
  /* 0x000c */ unsigned long NumberOfHeads;
} CM_DISK_GEOMETRY_DEVICE_DATA, *PCM_DISK_GEOMETRY_DEVICE_DATA; /* size: 0x0010 */

typedef struct _CM_EISA_FUNCTION_INFORMATION
{
  /* 0x0000 */ unsigned long CompressedId;
  /* 0x0004 */ unsigned char IdSlotFlags1;
  /* 0x0005 */ unsigned char IdSlotFlags2;
  /* 0x0006 */ unsigned char MinorRevision;
  /* 0x0007 */ unsigned char MajorRevision;
  /* 0x0008 */ unsigned char Selections[26];
  /* 0x0022 */ unsigned char FunctionFlags;
  /* 0x0023 */ unsigned char TypeString[80];
  /* 0x0073 */ struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
  /* 0x00b2 */ struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
  /* 0x00c0 */ struct _EISA_DMA_CONFIGURATION EisaDma[4];
  /* 0x00c8 */ struct _EISA_PORT_CONFIGURATION EisaPort[20];
  /* 0x0104 */ unsigned char InitializationData[60];
} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION; /* size: 0x0140 */

typedef struct _CM_EISA_SLOT_INFORMATION
{
  /* 0x0000 */ unsigned char ReturnCode;
  /* 0x0001 */ unsigned char ReturnFlags;
  /* 0x0002 */ unsigned char MajorRevision;
  /* 0x0003 */ unsigned char MinorRevision;
  /* 0x0004 */ unsigned short Checksum;
  /* 0x0006 */ unsigned char NumberFunctions;
  /* 0x0007 */ unsigned char FunctionInformation;
  /* 0x0008 */ unsigned long CompressedId;
} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION; /* size: 0x000c */

typedef enum _CM_ERROR_CONTROL_TYPE
{
  IgnoreError = 0,
  NormalError = 1,
  SevereError = 2,
  CriticalError = 3,
} CM_ERROR_CONTROL_TYPE, *PCM_ERROR_CONTROL_TYPE;

typedef struct _CM_FLOPPY_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ char Size[8];
  /* 0x000c */ unsigned long MaxDensity;
  /* 0x0010 */ unsigned long MountDensity;
  /* 0x0014 */ unsigned char StepRateHeadUnloadTime;
  /* 0x0015 */ unsigned char HeadLoadTime;
  /* 0x0016 */ unsigned char MotorOffTime;
  /* 0x0017 */ unsigned char SectorLengthCode;
  /* 0x0018 */ unsigned char SectorPerTrack;
  /* 0x0019 */ unsigned char ReadWriteGapLength;
  /* 0x001a */ unsigned char DataTransferLength;
  /* 0x001b */ unsigned char FormatGapLength;
  /* 0x001c */ unsigned char FormatFillCharacter;
  /* 0x001d */ unsigned char HeadSettleTime;
  /* 0x001e */ unsigned char MotorSettleTime;
  /* 0x001f */ unsigned char MaximumTrackValue;
  /* 0x0020 */ unsigned char DataTransferRate;
  /* 0x0021 */ char __PADDING__[3];
} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA; /* size: 0x0024 */

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _CM_INT13_DRIVE_PARAMETER
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ unsigned long MaxCylinders;
  /* 0x0006 */ unsigned short SectorsPerTrack;
  /* 0x0008 */ unsigned short MaxHeads;
  /* 0x000a */ unsigned short NumberDrives;
} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER; /* size: 0x000c */

typedef struct _CM_KEYBOARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char Subtype;
  /* 0x0006 */ unsigned short KeyboardFlags;
} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA; /* size: 0x0008 */

typedef struct _CM_MCA_POS_DATA
{
  /* 0x0000 */ unsigned short AdapterId;
  /* 0x0002 */ unsigned char PosData1;
  /* 0x0003 */ unsigned char PosData2;
  /* 0x0004 */ unsigned char PosData3;
  /* 0x0005 */ unsigned char PosData4;
} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA; /* size: 0x0006 */

typedef struct _CM_MONITOR_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short HorizontalScreenSize;
  /* 0x0006 */ unsigned short VerticalScreenSize;
  /* 0x0008 */ unsigned short HorizontalResolution;
  /* 0x000a */ unsigned short VerticalResolution;
  /* 0x000c */ unsigned short HorizontalDisplayTimeLow;
  /* 0x000e */ unsigned short HorizontalDisplayTime;
  /* 0x0010 */ unsigned short HorizontalDisplayTimeHigh;
  /* 0x0012 */ unsigned short HorizontalBackPorchLow;
  /* 0x0014 */ unsigned short HorizontalBackPorch;
  /* 0x0016 */ unsigned short HorizontalBackPorchHigh;
  /* 0x0018 */ unsigned short HorizontalFrontPorchLow;
  /* 0x001a */ unsigned short HorizontalFrontPorch;
  /* 0x001c */ unsigned short HorizontalFrontPorchHigh;
  /* 0x001e */ unsigned short HorizontalSyncLow;
  /* 0x0020 */ unsigned short HorizontalSync;
  /* 0x0022 */ unsigned short HorizontalSyncHigh;
  /* 0x0024 */ unsigned short VerticalBackPorchLow;
  /* 0x0026 */ unsigned short VerticalBackPorch;
  /* 0x0028 */ unsigned short VerticalBackPorchHigh;
  /* 0x002a */ unsigned short VerticalFrontPorchLow;
  /* 0x002c */ unsigned short VerticalFrontPorch;
  /* 0x002e */ unsigned short VerticalFrontPorchHigh;
  /* 0x0030 */ unsigned short VerticalSyncLow;
  /* 0x0032 */ unsigned short VerticalSync;
  /* 0x0034 */ unsigned short VerticalSyncHigh;
} CM_MONITOR_DEVICE_DATA, *PCM_MONITOR_DEVICE_DATA; /* size: 0x0036 */

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char ShareDisposition;
  /* 0x0002 */ unsigned short Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Generic;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Port;
      struct
      {
        /* 0x0004 */ unsigned long Level;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned long Affinity;
      } /* size: 0x000c */ Interrupt;
      struct
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Reserved;
            /* 0x0006 */ unsigned short MessageCount;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned long Affinity;
          } /* size: 0x000c */ Raw;
          struct
          {
            /* 0x0004 */ unsigned long Level;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned long Affinity;
          } /* size: 0x000c */ Translated;
        }; /* size: 0x000c */
      } /* size: 0x000c */ MessageInterrupt;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Memory;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long Port;
        /* 0x000c */ unsigned long Reserved1;
      } /* size: 0x000c */ Dma;
      struct
      {
        /* 0x0004 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0004 */ unsigned long Start;
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Reserved;
      } /* size: 0x000c */ BusNumber;
      struct
      {
        /* 0x0004 */ unsigned long DataSize;
        /* 0x0008 */ unsigned long Reserved1;
        /* 0x000c */ unsigned long Reserved2;
      } /* size: 0x000c */ DeviceSpecificData;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length40;
      } /* size: 0x000c */ Memory40;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length48;
      } /* size: 0x000c */ Memory48;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length64;
      } /* size: 0x000c */ Memory64;
    }; /* size: 0x000c */
  } /* size: 0x000c */ u;
} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR; /* size: 0x0010 */

typedef struct _CM_PARTIAL_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST; /* size: 0x0018 */

typedef struct _CM_PCCARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char ErrorCode;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long BusData;
  /* 0x0008 */ unsigned long DeviceId;
  /* 0x000c */ unsigned long LegacyBaseAddress;
  /* 0x0010 */ unsigned char IRQMap[16];
} CM_PCCARD_DEVICE_DATA, *PCM_PCCARD_DEVICE_DATA; /* size: 0x0020 */

typedef struct _CM_PNP_BIOS_DEVICE_NODE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Node;
  /* 0x0003 */ unsigned long ProductId;
  /* 0x0007 */ unsigned char DeviceType[3];
  /* 0x000a */ unsigned short DeviceAttributes;
} CM_PNP_BIOS_DEVICE_NODE, *PCM_PNP_BIOS_DEVICE_NODE; /* size: 0x000c */

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK
{
  /* 0x0000 */ unsigned char Signature[4];
  /* 0x0004 */ unsigned char Revision;
  /* 0x0005 */ unsigned char Length;
  /* 0x0006 */ unsigned short ControlField;
  /* 0x0008 */ unsigned char Checksum;
  /* 0x0009 */ unsigned long EventFlagAddress;
  /* 0x000d */ unsigned short RealModeEntryOffset;
  /* 0x000f */ unsigned short RealModeEntrySegment;
  /* 0x0011 */ unsigned short ProtectedModeEntryOffset;
  /* 0x0013 */ unsigned long ProtectedModeCodeBaseAddress;
  /* 0x0017 */ unsigned long OemDeviceId;
  /* 0x001b */ unsigned short RealModeDataBaseAddress;
  /* 0x001d */ unsigned long ProtectedModeDataBaseAddress;
} CM_PNP_BIOS_INSTALLATION_CHECK, *PCM_PNP_BIOS_INSTALLATION_CHECK; /* size: 0x0021 */

typedef struct _CM_RESOURCE_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST; /* size: 0x0024 */

typedef struct _CM_ROM_BLOCK
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Size;
} CM_ROM_BLOCK, *PCM_ROM_BLOCK; /* size: 0x0008 */

typedef struct _CM_SCSI_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char HostIdentifier;
  /* 0x0005 */ char __PADDING__[1];
} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA; /* size: 0x0006 */

typedef struct _CM_SERIAL_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long BaudClock;
} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA; /* size: 0x0008 */

typedef enum _CM_SERVICE_LOAD_TYPE
{
  BootLoad = 0,
  SystemLoad = 1,
  AutoLoad = 2,
  DemandLoad = 3,
  DisableLoad = 4,
} CM_SERVICE_LOAD_TYPE, *PCM_SERVICE_LOAD_TYPE;

typedef enum _CM_SERVICE_NODE_TYPE
{
  DriverType = 1,
  FileSystemType = 2,
  Win32ServiceOwnProcess = 16,
  Win32ServiceShareProcess = 32,
  AdapterType = 4,
  RecognizerType = 8,
} CM_SERVICE_NODE_TYPE, *PCM_SERVICE_NODE_TYPE;

typedef enum _CM_SHARE_DISPOSITION
{
  CmResourceShareUndetermined = 0,
  CmResourceShareDeviceExclusive = 1,
  CmResourceShareDriverExclusive = 2,
  CmResourceShareShared = 3,
} CM_SHARE_DISPOSITION, *PCM_SHARE_DISPOSITION;

typedef struct _CM_SONIC_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short DataConfigurationRegister;
  /* 0x0006 */ unsigned char EthernetAddress[8];
} CM_SONIC_DEVICE_DATA, *PCM_SONIC_DEVICE_DATA; /* size: 0x000e */

typedef struct _CM_VIDEO_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long VideoClock;
} CM_VIDEO_DEVICE_DATA, *PCM_VIDEO_DEVICE_DATA; /* size: 0x0008 */

typedef struct _COAUTHIDENTITY
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0004 */ unsigned long UserLength;
  /* 0x0008 */ unsigned short* Domain;
  /* 0x000c */ unsigned long DomainLength;
  /* 0x0010 */ unsigned short* Password;
  /* 0x0014 */ unsigned long PasswordLength;
  /* 0x0018 */ unsigned long Flags;
} COAUTHIDENTITY, *PCOAUTHIDENTITY; /* size: 0x001c */

typedef struct _COAUTHINFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ unsigned short* pwszServerPrincName;
  /* 0x000c */ unsigned long dwAuthnLevel;
  /* 0x0010 */ unsigned long dwImpersonationLevel;
  /* 0x0014 */ struct _COAUTHIDENTITY* pAuthIdentityData;
  /* 0x0018 */ unsigned long dwCapabilities;
} COAUTHINFO, *PCOAUTHINFO; /* size: 0x001c */

typedef struct _COMMCONFIG
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned short wVersion;
  /* 0x0006 */ unsigned short wReserved;
  /* 0x0008 */ struct _DCB dcb;
  /* 0x0024 */ unsigned long dwProviderSubType;
  /* 0x0028 */ unsigned long dwProviderOffset;
  /* 0x002c */ unsigned long dwProviderSize;
  /* 0x0030 */ wchar_t wcProviderData[1];
  /* 0x0032 */ char __PADDING__[2];
} COMMCONFIG, *PCOMMCONFIG; /* size: 0x0034 */

typedef struct _COMMPROP
{
  /* 0x0000 */ unsigned short wPacketLength;
  /* 0x0002 */ unsigned short wPacketVersion;
  /* 0x0004 */ unsigned long dwServiceMask;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwMaxTxQueue;
  /* 0x0010 */ unsigned long dwMaxRxQueue;
  /* 0x0014 */ unsigned long dwMaxBaud;
  /* 0x0018 */ unsigned long dwProvSubType;
  /* 0x001c */ unsigned long dwProvCapabilities;
  /* 0x0020 */ unsigned long dwSettableParams;
  /* 0x0024 */ unsigned long dwSettableBaud;
  /* 0x0028 */ unsigned short wSettableData;
  /* 0x002a */ unsigned short wSettableStopParity;
  /* 0x002c */ unsigned long dwCurrentTxQueue;
  /* 0x0030 */ unsigned long dwCurrentRxQueue;
  /* 0x0034 */ unsigned long dwProvSpec1;
  /* 0x0038 */ unsigned long dwProvSpec2;
  /* 0x003c */ wchar_t wcProvChar[1];
  /* 0x003e */ char __PADDING__[2];
} COMMPROP, *PCOMMPROP; /* size: 0x0040 */

typedef struct _COMMTIMEOUTS
{
  /* 0x0000 */ unsigned long ReadIntervalTimeout;
  /* 0x0004 */ unsigned long ReadTotalTimeoutMultiplier;
  /* 0x0008 */ unsigned long ReadTotalTimeoutConstant;
  /* 0x000c */ unsigned long WriteTotalTimeoutMultiplier;
  /* 0x0010 */ unsigned long WriteTotalTimeoutConstant;
} COMMTIMEOUTS, *PCOMMTIMEOUTS; /* size: 0x0014 */

typedef struct _COMM_FAULT_OFFSETS
{
  /* 0x0000 */ short CommOffset;
  /* 0x0002 */ short FaultOffset;
} COMM_FAULT_OFFSETS, *PCOMM_FAULT_OFFSETS; /* size: 0x0004 */

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned short CompoundAceType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long SidStart;
} COMPOUND_ACCESS_ALLOWED_ACE, *PCOMPOUND_ACCESS_ALLOWED_ACE; /* size: 0x0010 */

typedef struct _COMPRESSED_DATA_INFO
{
  /* 0x0000 */ unsigned short CompressionFormatAndEngine;
  /* 0x0002 */ unsigned char CompressionUnitShift;
  /* 0x0003 */ unsigned char ChunkShift;
  /* 0x0004 */ unsigned char ClusterShift;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ unsigned short NumberOfChunks;
  /* 0x0008 */ unsigned long CompressedChunkSizes[1];
} COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO; /* size: 0x000c */

typedef enum _COMPUTER_NAME_FORMAT
{
  ComputerNameNetBIOS = 0,
  ComputerNameDnsHostname = 1,
  ComputerNameDnsDomain = 2,
  ComputerNameDnsFullyQualified = 3,
  ComputerNamePhysicalNetBIOS = 4,
  ComputerNamePhysicalDnsHostname = 5,
  ComputerNamePhysicalDnsDomain = 6,
  ComputerNamePhysicalDnsFullyQualified = 7,
  ComputerNameMax = 8,
} COMPUTER_NAME_FORMAT, *PCOMPUTER_NAME_FORMAT;

typedef struct _COMSTAT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long fCtsHold : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long fDsrHold : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long fRlsdHold : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long fXoffHold : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long fXoffSent : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long fEof : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long fTxim : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long fReserved : 25; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long cbInQue;
  /* 0x0008 */ unsigned long cbOutQue;
} COMSTAT, *PCOMSTAT; /* size: 0x000c */

typedef struct _CONNECTDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ struct HWND__* hwndOwner;
  /* 0x0008 */ struct _NETRESOURCEA* lpConnRes;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTA, *PCONNECTDLGSTRUCTA; /* size: 0x0014 */

typedef struct _CONNECTDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ struct HWND__* hwndOwner;
  /* 0x0008 */ struct _NETRESOURCEW* lpConnRes;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTW, *PCONNECTDLGSTRUCTW; /* size: 0x0014 */

typedef struct _CONSOLE_CURSOR_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ int bVisible;
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO; /* size: 0x0008 */

typedef struct _CONSOLE_FONT_INFO
{
  /* 0x0000 */ unsigned long nFont;
  /* 0x0004 */ struct _COORD dwFontSize;
} CONSOLE_FONT_INFO, *PCONSOLE_FONT_INFO; /* size: 0x0008 */

typedef struct _CONSOLE_FONT_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long nFont;
  /* 0x0008 */ struct _COORD dwFontSize;
  /* 0x000c */ unsigned int FontFamily;
  /* 0x0010 */ unsigned int FontWeight;
  /* 0x0014 */ wchar_t FaceName[32];
} CONSOLE_FONT_INFOEX, *PCONSOLE_FONT_INFOEX; /* size: 0x0054 */

typedef struct _CONSOLE_HISTORY_INFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int HistoryBufferSize;
  /* 0x0008 */ unsigned int NumberOfHistoryBuffers;
  /* 0x000c */ unsigned long dwFlags;
} CONSOLE_HISTORY_INFO, *PCONSOLE_HISTORY_INFO; /* size: 0x0010 */

typedef struct _CONSOLE_READCONSOLE_CONTROL
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long nInitialChars;
  /* 0x0008 */ unsigned long dwCtrlWakeupMask;
  /* 0x000c */ unsigned long dwControlKeyState;
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL; /* size: 0x0010 */

typedef struct _CONSOLE_SCREEN_BUFFER_INFO
{
  /* 0x0000 */ struct _COORD dwSize;
  /* 0x0004 */ struct _COORD dwCursorPosition;
  /* 0x0008 */ unsigned short wAttributes;
  /* 0x000a */ struct _SMALL_RECT srWindow;
  /* 0x0012 */ struct _COORD dwMaximumWindowSize;
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO; /* size: 0x0016 */

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _COORD dwSize;
  /* 0x0008 */ struct _COORD dwCursorPosition;
  /* 0x000c */ unsigned short wAttributes;
  /* 0x000e */ struct _SMALL_RECT srWindow;
  /* 0x0016 */ struct _COORD dwMaximumWindowSize;
  /* 0x001a */ unsigned short wPopupAttributes;
  /* 0x001c */ int bFullscreenSupported;
  /* 0x0020 */ unsigned long ColorTable[16];
} CONSOLE_SCREEN_BUFFER_INFOEX, *PCONSOLE_SCREEN_BUFFER_INFOEX; /* size: 0x0060 */

typedef struct _CONSOLE_SELECTION_INFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct _COORD dwSelectionAnchor;
  /* 0x0008 */ struct _SMALL_RECT srSelection;
} CONSOLE_SELECTION_INFO, *PCONSOLE_SELECTION_INFO; /* size: 0x0010 */

typedef struct _CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  /* 0x00cc */ unsigned char ExtendedRegisters[512];
} CONTEXT, *PCONTEXT; /* size: 0x02cc */

typedef struct _COORD
{
  /* 0x0000 */ short X;
  /* 0x0002 */ short Y;
} COORD, *PCOORD; /* size: 0x0004 */

typedef struct _COSERVERINFO
{
  /* 0x0000 */ unsigned long dwReserved1;
  /* 0x0004 */ unsigned short* pwszName;
  /* 0x0008 */ struct _COAUTHINFO* pAuthInfo;
  /* 0x000c */ unsigned long dwReserved2;
} COSERVERINFO, *PCOSERVERINFO; /* size: 0x0010 */

typedef struct _COVERAGE_MODULES
{
  /* 0x0000 */ unsigned long ListAndReset;
  /* 0x0004 */ unsigned long NumberOfModules;
  /* 0x0008 */ struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
  /* 0x001c */ struct _COVERAGE_MODULE_INFO Modules[1];
} COVERAGE_MODULES, *PCOVERAGE_MODULES; /* size: 0x0034 */

typedef struct _COVERAGE_MODULE_INFO
{
  /* 0x0000 */ unsigned long ModuleInfoSize;
  /* 0x0004 */ unsigned long IsBinaryLoaded;
  /* 0x0008 */ struct _UNICODE_STRING ModulePathName;
  /* 0x0010 */ unsigned long CoverageSectionSize;
  /* 0x0014 */ unsigned char CoverageSection[1];
  /* 0x0015 */ char __PADDING__[3];
} COVERAGE_MODULE_INFO, *PCOVERAGE_MODULE_INFO; /* size: 0x0018 */

typedef struct _COVERAGE_MODULE_REQUEST
{
  /* 0x0000 */ enum _COVERAGE_REQUEST_CODES RequestType;
  union
  {
    union
    {
      /* 0x0004 */ unsigned char MD5Hash[16];
      /* 0x0004 */ struct _UNICODE_STRING ModuleName;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ SearchInfo;
} COVERAGE_MODULE_REQUEST, *PCOVERAGE_MODULE_REQUEST; /* size: 0x0014 */

typedef enum _COVERAGE_REQUEST_CODES
{
  CoverageAllModules = 0,
  CoverageSearchByHash = 1,
  CoverageSearchByName = 2,
} COVERAGE_REQUEST_CODES, *PCOVERAGE_REQUEST_CODES;

typedef struct _COVERAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long CoverageType;
  /* 0x0008 */ unsigned char MD5Hash[16];
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned long CoverageVectorSize;
  /* 0x0020 */ unsigned long CoverageVectorOffset;
  /* 0x0024 */ unsigned long ExtraDataOffset;
} COVERAGE_SECTION_HEADER, *PCOVERAGE_SECTION_HEADER; /* size: 0x0028 */

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY NextEntry;
  /* 0x0008 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0010 */ struct _UNICODE_STRING FullDllName;
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ void* CoverageSection;
} COVERAGE_UNLOADED_MODULE_ENTRY, *PCOVERAGE_UNLOADED_MODULE_ENTRY; /* size: 0x0020 */

typedef struct _CPS_URLS
{
  /* 0x0000 */ wchar_t* pszURL;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pAlgorithm;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* pDigest;
} CPS_URLS, *PCPS_URLS; /* size: 0x000c */

typedef struct _CPTABLEINFO
{
  /* 0x0000 */ unsigned short CodePage;
  /* 0x0002 */ unsigned short MaximumCharacterSize;
  /* 0x0004 */ unsigned short DefaultChar;
  /* 0x0006 */ unsigned short UniDefaultChar;
  /* 0x0008 */ unsigned short TransDefaultChar;
  /* 0x000a */ unsigned short TransUniDefaultChar;
  /* 0x000c */ unsigned short DBCSCodePage;
  /* 0x000e */ unsigned char LeadByte[12];
  /* 0x001c */ unsigned short* MultiByteTable;
  /* 0x0020 */ void* WideCharTable;
  /* 0x0024 */ unsigned short* DBCSRanges;
  /* 0x0028 */ unsigned short* DBCSOffsets;
} CPTABLEINFO, *PCPTABLEINFO; /* size: 0x002c */

typedef union _CPU_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned int VendorId[3];
      /* 0x000c */ unsigned int VersionInformation;
      /* 0x0010 */ unsigned int FeatureInformation;
      /* 0x0014 */ unsigned int AMDExtendedCpuFeatures;
    } /* size: 0x0018 */ X86CpuInfo;
    struct
    {
      /* 0x0000 */ unsigned __int64 ProcessorFeatures[2];
    } /* size: 0x0010 */ OtherCpuInfo;
  }; /* size: 0x0018 */
} CPU_INFORMATION, *PCPU_INFORMATION; /* size: 0x0018 */

typedef struct _CREATE_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0004 */ void* hProcess;
  /* 0x0008 */ void* hThread;
  /* 0x000c */ void* lpBaseOfImage;
  /* 0x0010 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0014 */ unsigned long nDebugInfoSize;
  /* 0x0018 */ void* lpThreadLocalBase;
  /* 0x001c */ void* lpStartAddress /* function */;
  /* 0x0020 */ void* lpImageName;
  /* 0x0024 */ unsigned short fUnicode;
  /* 0x0026 */ char __PADDING__[2];
} CREATE_PROCESS_DEBUG_INFO, *PCREATE_PROCESS_DEBUG_INFO; /* size: 0x0028 */

typedef struct _CREATE_THREAD_DEBUG_INFO
{
  /* 0x0000 */ void* hThread;
  /* 0x0004 */ void* lpThreadLocalBase;
  /* 0x0008 */ void* lpStartAddress /* function */;
} CREATE_THREAD_DEBUG_INFO, *PCREATE_THREAD_DEBUG_INFO; /* size: 0x000c */

typedef struct _CRL_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ unsigned char* pbCrlEncoded;
  /* 0x0008 */ unsigned long cbCrlEncoded;
  /* 0x000c */ struct _CRL_INFO* pCrlInfo;
  /* 0x0010 */ void* hCertStore;
} CRL_CONTEXT, *PCRL_CONTEXT; /* size: 0x0014 */

typedef struct _CRL_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x000c */ struct _CRYPT_BIT_BLOB ReasonFlags;
  /* 0x0018 */ struct _CERT_ALT_NAME_INFO CRLIssuer;
} CRL_DIST_POINT, *PCRL_DIST_POINT; /* size: 0x0020 */

typedef struct _CRL_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long cDistPoint;
  /* 0x0004 */ struct _CRL_DIST_POINT* rgDistPoint;
} CRL_DIST_POINTS_INFO, *PCRL_DIST_POINTS_INFO; /* size: 0x0008 */

typedef struct _CRL_DIST_POINT_NAME
{
  /* 0x0000 */ unsigned long dwDistPointNameChoice;
  /* 0x0004 */ struct _CERT_ALT_NAME_INFO FullName;
} CRL_DIST_POINT_NAME, *PCRL_DIST_POINT_NAME; /* size: 0x000c */

typedef struct _CRL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0008 */ struct _FILETIME RevocationDate;
  /* 0x0010 */ unsigned long cExtension;
  /* 0x0014 */ struct _CERT_EXTENSION* rgExtension;
} CRL_ENTRY, *PCRL_ENTRY; /* size: 0x0018 */

typedef struct _CRL_FIND_ISSUED_FOR_PARA
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pSubjectCert;
  /* 0x0004 */ const struct _CERT_CONTEXT* pIssuerCert;
} CRL_FIND_ISSUED_FOR_PARA, *PCRL_FIND_ISSUED_FOR_PARA; /* size: 0x0008 */

typedef struct _CRL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0018 */ struct _FILETIME ThisUpdate;
  /* 0x0020 */ struct _FILETIME NextUpdate;
  /* 0x0028 */ unsigned long cCRLEntry;
  /* 0x002c */ struct _CRL_ENTRY* rgCRLEntry;
  /* 0x0030 */ unsigned long cExtension;
  /* 0x0034 */ struct _CERT_EXTENSION* rgExtension;
} CRL_INFO, *PCRL_INFO; /* size: 0x0038 */

typedef struct _CRL_ISSUING_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x000c */ int fOnlyContainsUserCerts;
  /* 0x0010 */ int fOnlyContainsCACerts;
  /* 0x0014 */ struct _CRYPT_BIT_BLOB OnlySomeReasonFlags;
  /* 0x0020 */ int fIndirectCRL;
} CRL_ISSUING_DIST_POINT, *PCRL_ISSUING_DIST_POINT; /* size: 0x0024 */

typedef struct _CRL_REVOCATION_INFO
{
  /* 0x0000 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0004 */ const struct _CRL_CONTEXT* pCrlContext;
  /* 0x0008 */ const struct _CERT_CHAIN_CONTEXT* pCrlIssuerChain;
} CRL_REVOCATION_INFO, *PCRL_REVOCATION_INFO; /* size: 0x000c */

typedef struct _CROSS_CERT_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long dwSyncDeltaTime;
  /* 0x0004 */ unsigned long cDistPoint;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO* rgDistPoint;
} CROSS_CERT_DIST_POINTS_INFO, *PCROSS_CERT_DIST_POINTS_INFO; /* size: 0x000c */

typedef struct _CRT_CRITICAL_SECTION
{
  /* 0x0000 */ struct _CRT_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ void* OwningThread;
  /* 0x0010 */ void* LockSemaphore;
  /* 0x0014 */ unsigned long Reserved;
} CRT_CRITICAL_SECTION, *PCRT_CRITICAL_SECTION; /* size: 0x0018 */

typedef struct _CRT_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ struct _CRT_CRITICAL_SECTION* CriticalSection;
  /* 0x0008 */ struct __CRT_LIST_ENTRY ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Depth;
  /* 0x001c */ void* OwnerBackTrace[5];
} CRT_CRITICAL_SECTION_DEBUG, *PCRT_CRITICAL_SECTION_DEBUG; /* size: 0x0030 */

typedef struct _CRT_DOUBLE
{
  /* 0x0000 */ double x;
} CRT_DOUBLE, *PCRT_DOUBLE; /* size: 0x0008 */

typedef struct _CRT_FLOAT
{
  /* 0x0000 */ float f;
} CRT_FLOAT, *PCRT_FLOAT; /* size: 0x0004 */

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwExemptSeconds;
  /* 0x0008 */ struct _FILETIME ExpireTime;
} CRYPTNET_URL_CACHE_FLUSH_INFO, *PCRYPTNET_URL_CACHE_FLUSH_INFO; /* size: 0x0010 */

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwObjectType;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReserved;
  /* 0x0010 */ struct _FILETIME ThisUpdateTime;
  /* 0x0018 */ struct _FILETIME NextUpdateTime;
  /* 0x0020 */ struct _FILETIME PublishTime;
} CRYPTNET_URL_CACHE_PRE_FETCH_INFO, *PCRYPTNET_URL_CACHE_PRE_FETCH_INFO; /* size: 0x0028 */

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned short wResponseType;
  /* 0x0006 */ unsigned short wResponseFlags;
  /* 0x0008 */ struct _FILETIME LastModifiedTime;
  /* 0x0010 */ unsigned long dwMaxAge;
  /* 0x0014 */ const wchar_t* pwszETag;
  /* 0x0018 */ unsigned long dwProxyId;
} CRYPTNET_URL_CACHE_RESPONSE_INFO, *PCRYPTNET_URL_CACHE_RESPONSE_INFO; /* size: 0x001c */

typedef struct _CRYPTOAPI_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char* pbData;
} CRYPTOAPI_BLOB, *PCRYPTOAPI_BLOB; /* size: 0x0008 */

typedef struct _CRYPTPROTECT_PROMPTSTRUCT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwPromptFlags;
  /* 0x0008 */ struct HWND__* hwndApp;
  /* 0x000c */ const wchar_t* szPrompt;
} CRYPTPROTECT_PROMPTSTRUCT, *PCRYPTPROTECT_PROMPTSTRUCT; /* size: 0x0010 */

typedef struct _CRYPT_3DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[24];
  /* 0x0018 */ unsigned char IV[8];
  /* 0x0020 */ unsigned char Feedback[8];
} CRYPT_3DES_KEY_STATE, *PCRYPT_3DES_KEY_STATE; /* size: 0x0028 */

typedef struct _CRYPT_AES_128_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char IV[16];
  /* 0x0020 */ unsigned char EncryptionState[16][11];
  /* 0x00d0 */ unsigned char DecryptionState[16][11];
  /* 0x0180 */ unsigned char Feedback[16];
} CRYPT_AES_128_KEY_STATE, *PCRYPT_AES_128_KEY_STATE; /* size: 0x0190 */

typedef struct _CRYPT_AES_256_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[32];
  /* 0x0020 */ unsigned char IV[16];
  /* 0x0030 */ unsigned char EncryptionState[16][15];
  /* 0x0120 */ unsigned char DecryptionState[16][15];
  /* 0x0210 */ unsigned char Feedback[16];
} CRYPT_AES_256_KEY_STATE, *PCRYPT_AES_256_KEY_STATE; /* size: 0x0220 */

typedef struct _CRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_ALGORITHM_IDENTIFIER, *PCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x000c */

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION
{
  /* 0x0000 */ void* pfnCompletion /* function */;
  /* 0x0004 */ void* pvCompletion;
} CRYPT_ASYNC_RETRIEVAL_COMPLETION, *PCRYPT_ASYNC_RETRIEVAL_COMPLETION; /* size: 0x0008 */

typedef struct _CRYPT_ATTRIBUTE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ unsigned long cValue;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_ATTRIBUTE, *PCRYPT_ATTRIBUTE; /* size: 0x000c */

typedef struct _CRYPT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long cAttr;
  /* 0x0004 */ struct _CRYPT_ATTRIBUTE* rgAttr;
} CRYPT_ATTRIBUTES, *PCRYPT_ATTRIBUTES; /* size: 0x0008 */

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Value;
} CRYPT_ATTRIBUTE_TYPE_VALUE, *PCRYPT_ATTRIBUTE_TYPE_VALUE; /* size: 0x000c */

typedef struct _CRYPT_BIT_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char* pbData;
  /* 0x0008 */ unsigned long cUnusedBits;
} CRYPT_BIT_BLOB, *PCRYPT_BIT_BLOB; /* size: 0x000c */

typedef struct _CRYPT_BLOB_ARRAY
{
  /* 0x0000 */ unsigned long cBlob;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB* rgBlob;
} CRYPT_BLOB_ARRAY, *PCRYPT_BLOB_ARRAY; /* size: 0x0008 */

typedef struct _CRYPT_CONTENT_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Content;
} CRYPT_CONTENT_INFO, *PCRYPT_CONTENT_INFO; /* size: 0x000c */

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ unsigned long cValue;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY; /* size: 0x000c */

typedef struct _CRYPT_CONTEXTS
{
  /* 0x0000 */ unsigned long cContexts;
  /* 0x0004 */ wchar_t** rgpszContexts;
} CRYPT_CONTEXTS, *PCRYPT_CONTEXTS; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_CONFIG, *PCRYPT_CONTEXT_CONFIG; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_FUNCTIONS
{
  /* 0x0000 */ unsigned long cFunctions;
  /* 0x0004 */ wchar_t** rgpszFunctions;
} CRYPT_CONTEXT_FUNCTIONS, *PCRYPT_CONTEXT_FUNCTIONS; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_FUNCTION_CONFIG, *PCRYPT_CONTEXT_FUNCTION_CONFIG; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ wchar_t** rgpszProviders;
} CRYPT_CONTEXT_FUNCTION_PROVIDERS, *PCRYPT_CONTEXT_FUNCTION_PROVIDERS; /* size: 0x0008 */

typedef struct _CRYPT_CREDENTIALS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ const char* pszCredentialsOid;
  /* 0x0008 */ void* pvCredentials;
} CRYPT_CREDENTIALS, *PCRYPT_CREDENTIALS; /* size: 0x000c */

typedef struct _CRYPT_CSP_PROVIDER
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ wchar_t* pwszProviderName;
  /* 0x0008 */ struct _CRYPT_BIT_BLOB Signature;
} CRYPT_CSP_PROVIDER, *PCRYPT_CSP_PROVIDER; /* size: 0x0014 */

typedef struct _CRYPT_DECODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ void* pfnAlloc /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
} CRYPT_DECODE_PARA, *PCRYPT_DECODE_PARA; /* size: 0x000c */

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long cCertStore;
  /* 0x000c */ void** rghCertStore;
} CRYPT_DECRYPT_MESSAGE_PARA, *PCRYPT_DECRYPT_MESSAGE_PARA; /* size: 0x0010 */

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA
{
  /* 0x0000 */ unsigned long cOID;
  /* 0x0004 */ char** rgpszOID;
} CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA; /* size: 0x0008 */

typedef struct _CRYPT_DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[8];
  /* 0x0008 */ unsigned char IV[8];
  /* 0x0010 */ unsigned char Feedback[8];
} CRYPT_DES_KEY_STATE, *PCRYPT_DES_KEY_STATE; /* size: 0x0018 */

typedef struct _CRYPT_ECC_CMS_SHARED_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x000c */ struct _CRYPTOAPI_BLOB EntityUInfo;
  /* 0x0014 */ unsigned char rgbSuppPubInfo[4];
} CRYPT_ECC_CMS_SHARED_INFO, *PCRYPT_ECC_CMS_SHARED_INFO; /* size: 0x0018 */

typedef struct _CRYPT_ENCODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ void* pfnAlloc /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
} CRYPT_ENCODE_PARA, *PCRYPT_ENCODE_PARA; /* size: 0x000c */

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
  /* 0x000c */ struct _CRYPTOAPI_BLOB EncryptedPrivateKey;
} CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO; /* size: 0x0014 */

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned long hCryptProv;
  /* 0x000c */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0018 */ void* pvEncryptionAuxInfo;
  /* 0x001c */ unsigned long dwFlags;
  /* 0x0020 */ unsigned long dwInnerContentType;
} CRYPT_ENCRYPT_MESSAGE_PARA, *PCRYPT_ENCRYPT_MESSAGE_PARA; /* size: 0x0024 */

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR
{
  /* 0x0000 */ wchar_t* pwszName;
  /* 0x0004 */ wchar_t* pwszValue;
} CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR; /* size: 0x0008 */

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int iDeltaCrlIndicator;
  /* 0x0008 */ struct _FILETIME* pftCacheResync;
  /* 0x000c */ struct _FILETIME* pLastSyncTime;
  /* 0x0010 */ struct _FILETIME* pMaxAgeTime;
  /* 0x0014 */ struct _CERT_REVOCATION_CHAIN_PARA* pChainPara;
} CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO, *PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO; /* size: 0x0018 */

typedef struct _CRYPT_HASH_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x000c */ struct _CRYPTOAPI_BLOB Hash;
} CRYPT_HASH_INFO, *PCRYPT_HASH_INFO; /* size: 0x0014 */

typedef struct _CRYPT_HASH_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned long hCryptProv;
  /* 0x000c */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ void* pvHashAuxInfo;
} CRYPT_HASH_MESSAGE_PARA, *PCRYPT_HASH_MESSAGE_PARA; /* size: 0x001c */

typedef struct _CRYPT_IMAGE_REF
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0004 */ unsigned long dwFlags;
} CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF; /* size: 0x0008 */

typedef struct _CRYPT_IMAGE_REG
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0004 */ unsigned long cInterfaces;
  /* 0x0008 */ struct _CRYPT_INTERFACE_REG** rgpInterfaces;
} CRYPT_IMAGE_REG, *PCRYPT_IMAGE_REG; /* size: 0x000c */

typedef struct _CRYPT_INTERFACE_REG
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cFunctions;
  /* 0x000c */ wchar_t** rgpszFunctions;
} CRYPT_INTERFACE_REG, *PCRYPT_INTERFACE_REG; /* size: 0x0010 */

typedef struct _CRYPT_KEY_PROV_INFO
{
  /* 0x0000 */ wchar_t* pwszContainerName;
  /* 0x0004 */ wchar_t* pwszProvName;
  /* 0x0008 */ unsigned long dwProvType;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long cProvParam;
  /* 0x0014 */ struct _CRYPT_KEY_PROV_PARAM* rgProvParam;
  /* 0x0018 */ unsigned long dwKeySpec;
} CRYPT_KEY_PROV_INFO, *PCRYPT_KEY_PROV_INFO; /* size: 0x001c */

typedef struct _CRYPT_KEY_PROV_PARAM
{
  /* 0x0000 */ unsigned long dwParam;
  /* 0x0004 */ unsigned char* pbData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned long dwFlags;
} CRYPT_KEY_PROV_PARAM, *PCRYPT_KEY_PROV_PARAM; /* size: 0x0010 */

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  union
  {
    /* 0x0008 */ unsigned long hCryptProv;
    /* 0x0008 */ unsigned long hNCryptKey;
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long dwKeySpec;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x001c */ void* pvHashAuxInfo;
  /* 0x0020 */ struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
} CRYPT_KEY_SIGN_MESSAGE_PARA, *PCRYPT_KEY_SIGN_MESSAGE_PARA; /* size: 0x002c */

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned long hCryptProv;
} CRYPT_KEY_VERIFY_MESSAGE_PARA, *PCRYPT_KEY_VERIFY_MESSAGE_PARA; /* size: 0x000c */

typedef struct _CRYPT_MASK_GEN_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
} CRYPT_MASK_GEN_ALGORITHM, *PCRYPT_MASK_GEN_ALGORITHM; /* size: 0x0010 */

typedef struct _CRYPT_OBJID_TABLE
{
  /* 0x0000 */ unsigned long dwAlgId;
  /* 0x0004 */ const char* pszObjId;
} CRYPT_OBJID_TABLE, *PCRYPT_OBJID_TABLE; /* size: 0x0008 */

typedef struct _CRYPT_OID_FUNC_ENTRY
{
  /* 0x0000 */ const char* pszOID;
  /* 0x0004 */ void* pvFuncAddr;
} CRYPT_OID_FUNC_ENTRY, *PCRYPT_OID_FUNC_ENTRY; /* size: 0x0008 */

typedef struct _CRYPT_OID_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ const char* pszOID;
  /* 0x0008 */ const wchar_t* pwszName;
  /* 0x000c */ unsigned long dwGroupId;
  union
  {
    /* 0x0010 */ unsigned long dwValue;
    /* 0x0010 */ unsigned int Algid;
    /* 0x0010 */ unsigned long dwLength;
  }; /* size: 0x0004 */
  /* 0x0014 */ struct _CRYPTOAPI_BLOB ExtraInfo;
} CRYPT_OID_INFO, *PCRYPT_OID_INFO; /* size: 0x001c */

typedef struct _CRYPT_PASSWORD_CREDENTIALSA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ char* pszUsername;
  /* 0x0008 */ char* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSA, *PCRYPT_PASSWORD_CREDENTIALSA; /* size: 0x000c */

typedef struct _CRYPT_PASSWORD_CREDENTIALSW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t* pszUsername;
  /* 0x0008 */ wchar_t* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSW, *PCRYPT_PASSWORD_CREDENTIALSW; /* size: 0x000c */

typedef struct _CRYPT_PKCS12_PBE_PARAMS
{
  /* 0x0000 */ int iIterations;
  /* 0x0004 */ unsigned long cbSalt;
} CRYPT_PKCS12_PBE_PARAMS, *PCRYPT_PKCS12_PBE_PARAMS; /* size: 0x0008 */

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS
{
  /* 0x0000 */ unsigned long hCryptProv;
  /* 0x0004 */ unsigned long dwKeySpec;
  /* 0x0008 */ char* pszPrivateKeyObjId;
  /* 0x000c */ void* pEncryptPrivateKeyFunc /* function */;
  /* 0x0010 */ void* pVoidEncryptFunc;
} CRYPT_PKCS8_EXPORT_PARAMS, *PCRYPT_PKCS8_EXPORT_PARAMS; /* size: 0x0014 */

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0008 */ void* pResolvehCryptProvFunc /* function */;
  /* 0x000c */ void* pVoidResolveFunc;
  /* 0x0010 */ void* pDecryptPrivateKeyFunc /* function */;
  /* 0x0014 */ void* pVoidDecryptFunc;
} CRYPT_PKCS8_IMPORT_PARAMS, *PCRYPT_PKCS8_IMPORT_PARAMS; /* size: 0x0018 */

typedef struct _CRYPT_PRIVATE_KEY_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTES* pAttributes;
} CRYPT_PRIVATE_KEY_INFO, *PCRYPT_PRIVATE_KEY_INFO; /* size: 0x001c */

typedef struct _CRYPT_PROPERTY_REF
{
  /* 0x0000 */ wchar_t* pszProperty;
  /* 0x0004 */ unsigned long cbValue;
  /* 0x0008 */ unsigned char* pbValue;
} CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF; /* size: 0x000c */

typedef struct _CRYPT_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ wchar_t** rgpszProviders;
} CRYPT_PROVIDERS, *PCRYPT_PROVIDERS; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_CERT
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ const struct _CERT_CONTEXT* pCert;
  /* 0x0008 */ int fCommercial;
  /* 0x000c */ int fTrustedRoot;
  /* 0x0010 */ int fSelfSigned;
  /* 0x0014 */ int fTestCert;
  /* 0x0018 */ unsigned long dwRevokedReason;
  /* 0x001c */ unsigned long dwConfidence;
  /* 0x0020 */ unsigned long dwError;
  /* 0x0024 */ struct _CTL_CONTEXT* pTrustListContext;
  /* 0x0028 */ int fTrustListSignerCert;
  /* 0x002c */ const struct _CTL_CONTEXT* pCtlContext;
  /* 0x0030 */ unsigned long dwCtlError;
  /* 0x0034 */ int fIsCyclic;
  /* 0x0038 */ struct _CERT_CHAIN_ELEMENT* pChainElement;
} CRYPT_PROVIDER_CERT, *PCRYPT_PROVIDER_CERT; /* size: 0x003c */

typedef struct _CRYPT_PROVIDER_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _WINTRUST_DATA* pWintrustData;
  /* 0x0008 */ int fOpenedFile;
  /* 0x000c */ struct HWND__* hWndParent;
  /* 0x0010 */ struct _GUID* pgActionID;
  /* 0x0014 */ unsigned long hProv;
  /* 0x0018 */ unsigned long dwError;
  /* 0x001c */ unsigned long dwRegSecuritySettings;
  /* 0x0020 */ unsigned long dwRegPolicySettings;
  /* 0x0024 */ struct _CRYPT_PROVIDER_FUNCTIONS* psPfns;
  /* 0x0028 */ unsigned long cdwTrustStepErrors;
  /* 0x002c */ unsigned long* padwTrustStepErrors;
  /* 0x0030 */ unsigned long chStores;
  /* 0x0034 */ void** pahStores;
  /* 0x0038 */ unsigned long dwEncoding;
  /* 0x003c */ void* hMsg;
  /* 0x0040 */ unsigned long csSigners;
  /* 0x0044 */ struct _CRYPT_PROVIDER_SGNR* pasSigners;
  /* 0x0048 */ unsigned long csProvPrivData;
  /* 0x004c */ struct _CRYPT_PROVIDER_PRIVDATA* pasProvPrivData;
  /* 0x0050 */ unsigned long dwSubjectChoice;
  /* 0x0054 */ struct _PROVDATA_SIP* pPDSip;
  /* 0x0058 */ char* pszUsageOID;
  /* 0x005c */ int fRecallWithState;
  /* 0x0060 */ struct _FILETIME sftSystemTime;
  /* 0x0068 */ char* pszCTLSignerUsageOID;
  /* 0x006c */ unsigned long dwProvFlags;
  /* 0x0070 */ unsigned long dwFinalError;
  /* 0x0074 */ struct _CERT_USAGE_MATCH* pRequestUsage;
  /* 0x0078 */ unsigned long dwTrustPubSettings;
  /* 0x007c */ unsigned long dwUIStateFlags;
} CRYPT_PROVIDER_DATA, *PCRYPT_PROVIDER_DATA; /* size: 0x0080 */

typedef struct _CRYPT_PROVIDER_DEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gActionID;
  /* 0x0014 */ void* pDefPolicyCallbackData;
  /* 0x0018 */ void* pDefSIPClientData;
} CRYPT_PROVIDER_DEFUSAGE, *PCRYPT_PROVIDER_DEFUSAGE; /* size: 0x001c */

typedef struct _CRYPT_PROVIDER_FUNCTIONS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ void* pfnAlloc /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
  /* 0x000c */ void* pfnAddStore2Chain /* function */;
  /* 0x0010 */ void* pfnAddSgnr2Chain /* function */;
  /* 0x0014 */ void* pfnAddCert2Chain /* function */;
  /* 0x0018 */ void* pfnAddPrivData2Chain /* function */;
  /* 0x001c */ void* pfnInitialize /* function */;
  /* 0x0020 */ void* pfnObjectTrust /* function */;
  /* 0x0024 */ void* pfnSignatureTrust /* function */;
  /* 0x0028 */ void* pfnCertificateTrust /* function */;
  /* 0x002c */ void* pfnFinalPolicy /* function */;
  /* 0x0030 */ void* pfnCertCheckPolicy /* function */;
  /* 0x0034 */ void* pfnTestFinalPolicy /* function */;
  /* 0x0038 */ struct _CRYPT_PROVUI_FUNCS* psUIpfns;
  /* 0x003c */ void* pfnCleanupPolicy /* function */;
} CRYPT_PROVIDER_FUNCTIONS, *PCRYPT_PROVIDER_FUNCTIONS; /* size: 0x0040 */

typedef struct _CRYPT_PROVIDER_PRIVDATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gProviderID;
  /* 0x0014 */ unsigned long cbProvData;
  /* 0x0018 */ void* pvProvData;
} CRYPT_PROVIDER_PRIVDATA, *PCRYPT_PROVIDER_PRIVDATA; /* size: 0x001c */

typedef struct _CRYPT_PROVIDER_REF
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ wchar_t* pszFunction;
  /* 0x0008 */ wchar_t* pszProvider;
  /* 0x000c */ unsigned long cProperties;
  /* 0x0010 */ struct _CRYPT_PROPERTY_REF** rgpProperties;
  /* 0x0014 */ struct _CRYPT_IMAGE_REF* pUM;
  /* 0x0018 */ struct _CRYPT_IMAGE_REF* pKM;
} CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF; /* size: 0x001c */

typedef struct _CRYPT_PROVIDER_REFS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ struct _CRYPT_PROVIDER_REF** rgpProviders;
} CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_REG
{
  /* 0x0000 */ unsigned long cAliases;
  /* 0x0004 */ wchar_t** rgpszAliases;
  /* 0x0008 */ struct _CRYPT_IMAGE_REG* pUM;
  /* 0x000c */ struct _CRYPT_IMAGE_REG* pKM;
} CRYPT_PROVIDER_REG, *PCRYPT_PROVIDER_REG; /* size: 0x0010 */

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID* pgActionID;
  /* 0x0008 */ wchar_t* pwszDllName;
  /* 0x000c */ char* pwszLoadCallbackDataFunctionName;
  /* 0x0010 */ char* pwszFreeCallbackDataFunctionName;
} CRYPT_PROVIDER_REGDEFUSAGE, *PCRYPT_PROVIDER_REGDEFUSAGE; /* size: 0x0014 */

typedef struct _CRYPT_PROVIDER_SGNR
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _FILETIME sftVerifyAsOf;
  /* 0x000c */ unsigned long csCertChain;
  /* 0x0010 */ struct _CRYPT_PROVIDER_CERT* pasCertChain;
  /* 0x0014 */ unsigned long dwSignerType;
  /* 0x0018 */ struct _CMSG_SIGNER_INFO* psSigner;
  /* 0x001c */ unsigned long dwError;
  /* 0x0020 */ unsigned long csCounterSigners;
  /* 0x0024 */ struct _CRYPT_PROVIDER_SGNR* pasCounterSigners;
  /* 0x0028 */ const struct _CERT_CHAIN_CONTEXT* pChainContext;
} CRYPT_PROVIDER_SGNR, *PCRYPT_PROVIDER_SGNR; /* size: 0x002c */

typedef struct _CRYPT_PROVUI_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwFinalError;
  /* 0x0008 */ wchar_t* pYesButtonText;
  /* 0x000c */ wchar_t* pNoButtonText;
  /* 0x0010 */ wchar_t* pMoreInfoButtonText;
  /* 0x0014 */ wchar_t* pAdvancedLinkText;
  /* 0x0018 */ wchar_t* pCopyActionText;
  /* 0x001c */ wchar_t* pCopyActionTextNoTS;
  /* 0x0020 */ wchar_t* pCopyActionTextNotSigned;
} CRYPT_PROVUI_DATA, *PCRYPT_PROVUI_DATA; /* size: 0x0024 */

typedef struct _CRYPT_PROVUI_FUNCS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _CRYPT_PROVUI_DATA* psUIData;
  /* 0x0008 */ void* pfnOnMoreInfoClick /* function */;
  /* 0x000c */ void* pfnOnMoreInfoClickDefault /* function */;
  /* 0x0010 */ void* pfnOnAdvancedClick /* function */;
  /* 0x0014 */ void* pfnOnAdvancedClickDefault /* function */;
} CRYPT_PROVUI_FUNCS, *PCRYPT_PROVUI_FUNCS; /* size: 0x0018 */

typedef struct _CRYPT_PSOURCE_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB EncodingParameters;
} CRYPT_PSOURCE_ALGORITHM, *PCRYPT_PSOURCE_ALGORITHM; /* size: 0x000c */

typedef struct _CRYPT_RC2_CBC_PARAMETERS
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ int fIV;
  /* 0x0008 */ unsigned char rgbIV[8];
} CRYPT_RC2_CBC_PARAMETERS, *PCRYPT_RC2_CBC_PARAMETERS; /* size: 0x0010 */

typedef struct _CRYPT_RC4_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char SBox[256];
  /* 0x0110 */ unsigned char i;
  /* 0x0111 */ unsigned char j;
} CRYPT_RC4_KEY_STATE, *PCRYPT_RC4_KEY_STATE; /* size: 0x0112 */

typedef struct _CRYPT_REGISTER_ACTIONID
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _CRYPT_TRUST_REG_ENTRY sInitProvider;
  /* 0x0010 */ struct _CRYPT_TRUST_REG_ENTRY sObjectProvider;
  /* 0x001c */ struct _CRYPT_TRUST_REG_ENTRY sSignatureProvider;
  /* 0x0028 */ struct _CRYPT_TRUST_REG_ENTRY sCertificateProvider;
  /* 0x0034 */ struct _CRYPT_TRUST_REG_ENTRY sCertificatePolicyProvider;
  /* 0x0040 */ struct _CRYPT_TRUST_REG_ENTRY sFinalPolicyProvider;
  /* 0x004c */ struct _CRYPT_TRUST_REG_ENTRY sTestPolicyProvider;
  /* 0x0058 */ struct _CRYPT_TRUST_REG_ENTRY sCleanupProvider;
} CRYPT_REGISTER_ACTIONID, *PCRYPT_REGISTER_ACTIONID; /* size: 0x0064 */

typedef struct _CRYPT_RETRIEVE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _FILETIME* pLastSyncTime;
  /* 0x0008 */ unsigned long dwMaxUrlRetrievalByteCount;
  /* 0x000c */ struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO* pPreFetchInfo;
  /* 0x0010 */ struct _CRYPTNET_URL_CACHE_FLUSH_INFO* pFlushInfo;
  /* 0x0014 */ struct _CRYPTNET_URL_CACHE_RESPONSE_INFO** ppResponseInfo;
  /* 0x0018 */ wchar_t* pwszCacheFileNamePrefix;
  /* 0x001c */ struct _FILETIME* pftCacheResync;
  /* 0x0020 */ int fProxyCacheRetrieval;
  /* 0x0024 */ unsigned long dwHttpStatusCode;
} CRYPT_RETRIEVE_AUX_INFO, *PCRYPT_RETRIEVE_AUX_INFO; /* size: 0x0028 */

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x000c */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x001c */ struct _CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
} CRYPT_RSAES_OAEP_PARAMETERS, *PCRYPT_RSAES_OAEP_PARAMETERS; /* size: 0x0028 */

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x000c */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x001c */ unsigned long dwSaltLength;
  /* 0x0020 */ unsigned long dwTrailerField;
} CRYPT_RSA_SSA_PSS_PARAMETERS, *PCRYPT_RSA_SSA_PSS_PARAMETERS; /* size: 0x0024 */

typedef struct _CRYPT_SEQUENCE_OF_ANY
{
  /* 0x0000 */ unsigned long cValue;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_SEQUENCE_OF_ANY, *PCRYPT_SEQUENCE_OF_ANY; /* size: 0x0008 */

typedef struct _CRYPT_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ const struct _CERT_CONTEXT* pSigningCert;
  /* 0x000c */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ void* pvHashAuxInfo;
  /* 0x001c */ unsigned long cMsgCert;
  /* 0x0020 */ const struct _CERT_CONTEXT** rgpMsgCert;
  /* 0x0024 */ unsigned long cMsgCrl;
  /* 0x0028 */ const struct _CRL_CONTEXT** rgpMsgCrl;
  /* 0x002c */ unsigned long cAuthAttr;
  /* 0x0030 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0034 */ unsigned long cUnauthAttr;
  /* 0x0038 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned long dwInnerContentType;
} CRYPT_SIGN_MESSAGE_PARA, *PCRYPT_SIGN_MESSAGE_PARA; /* size: 0x0044 */

typedef struct _CRYPT_SMART_CARD_ROOT_INFO
{
  /* 0x0000 */ unsigned char rgbCardID[16];
  /* 0x0010 */ struct _ROOT_INFO_LUID luid;
} CRYPT_SMART_CARD_ROOT_INFO, *PCRYPT_SMART_CARD_ROOT_INFO; /* size: 0x0018 */

typedef struct _CRYPT_SMIME_CAPABILITIES
{
  /* 0x0000 */ unsigned long cCapability;
  /* 0x0004 */ struct _CRYPT_SMIME_CAPABILITY* rgCapability;
} CRYPT_SMIME_CAPABILITIES, *PCRYPT_SMIME_CAPABILITIES; /* size: 0x0008 */

typedef struct _CRYPT_SMIME_CAPABILITY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_SMIME_CAPABILITY, *PCRYPT_SMIME_CAPABILITY; /* size: 0x000c */

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO
{
  /* 0x0000 */ char* pszTimeStampAlgorithm;
  /* 0x0004 */ char* pszContentType;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Content;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CRYPT_TIME_STAMP_REQUEST_INFO, *PCRYPT_TIME_STAMP_REQUEST_INFO; /* size: 0x0018 */

typedef struct _CRYPT_TRUST_REG_ENTRY
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ wchar_t* pwszDLLName;
  /* 0x0008 */ wchar_t* pwszFunctionName;
} CRYPT_TRUST_REG_ENTRY, *PCRYPT_TRUST_REG_ENTRY; /* size: 0x000c */

typedef struct _CRYPT_URL_ARRAY
{
  /* 0x0000 */ unsigned long cUrl;
  /* 0x0004 */ wchar_t** rgwszUrl;
} CRYPT_URL_ARRAY, *PCRYPT_URL_ARRAY; /* size: 0x0008 */

typedef struct _CRYPT_URL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSyncDeltaTime;
  /* 0x0008 */ unsigned long cGroup;
  /* 0x000c */ unsigned long* rgcGroupEntry;
} CRYPT_URL_INFO, *PCRYPT_URL_INFO; /* size: 0x0010 */

typedef struct _CRYPT_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long hCryptProv;
  /* 0x000c */ void* pfnGetSignerCertificate /* function */;
  /* 0x0010 */ void* pvGetArg;
} CRYPT_VERIFY_MESSAGE_PARA, *PCRYPT_VERIFY_MESSAGE_PARA; /* size: 0x0014 */

typedef struct _CRYPT_X942_OTHER_INFO
{
  /* 0x0000 */ char* pszContentEncryptionObjId;
  /* 0x0004 */ unsigned char rgbCounter[4];
  /* 0x0008 */ unsigned char rgbKeyLength[4];
  /* 0x000c */ struct _CRYPTOAPI_BLOB PubInfo;
} CRYPT_X942_OTHER_INFO, *PCRYPT_X942_OTHER_INFO; /* size: 0x0014 */

typedef struct _CSTRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ const char* Buffer;
} CSTRING, *PCSTRING; /* size: 0x0008 */

typedef struct _CTL_ANY_SUBJECT_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x000c */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
} CTL_ANY_SUBJECT_INFO, *PCTL_ANY_SUBJECT_INFO; /* size: 0x0014 */

typedef struct _CTL_CONTEXT
{
  /* 0x0000 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0004 */ unsigned char* pbCtlEncoded;
  /* 0x0008 */ unsigned long cbCtlEncoded;
  /* 0x000c */ struct _CTL_INFO* pCtlInfo;
  /* 0x0010 */ void* hCertStore;
  /* 0x0014 */ void* hCryptMsg;
  /* 0x0018 */ unsigned char* pbCtlContent;
  /* 0x001c */ unsigned long cbCtlContent;
} CTL_CONTEXT, *PCTL_CONTEXT; /* size: 0x0020 */

typedef struct _CTL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
  /* 0x0008 */ unsigned long cAttribute;
  /* 0x000c */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CTL_ENTRY, *PCTL_ENTRY; /* size: 0x0010 */

typedef struct _CTL_FIND_SUBJECT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CTL_FIND_USAGE_PARA* pUsagePara;
  /* 0x0008 */ unsigned long dwSubjectType;
  /* 0x000c */ void* pvSubject;
} CTL_FIND_SUBJECT_PARA, *PCTL_FIND_SUBJECT_PARA; /* size: 0x0010 */

typedef struct _CTL_FIND_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CTL_USAGE SubjectUsage;
  /* 0x000c */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0014 */ struct _CERT_INFO* pSigner;
} CTL_FIND_USAGE_PARA, *PCTL_FIND_USAGE_PARA; /* size: 0x0018 */

typedef struct _CTL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CTL_USAGE SubjectUsage;
  /* 0x000c */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB SequenceNumber;
  /* 0x001c */ struct _FILETIME ThisUpdate;
  /* 0x0024 */ struct _FILETIME NextUpdate;
  /* 0x002c */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0038 */ unsigned long cCTLEntry;
  /* 0x003c */ struct _CTL_ENTRY* rgCTLEntry;
  /* 0x0040 */ unsigned long cExtension;
  /* 0x0044 */ struct _CERT_EXTENSION* rgExtension;
} CTL_INFO, *PCTL_INFO; /* size: 0x0048 */

typedef struct _CTL_USAGE
{
  /* 0x0000 */ unsigned long cUsageIdentifier;
  /* 0x0004 */ char** rgpszUsageIdentifier;
} CTL_USAGE, *PCTL_USAGE; /* size: 0x0008 */

typedef struct _CTL_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ struct _CTL_USAGE Usage;
} CTL_USAGE_MATCH, *PCTL_USAGE_MATCH; /* size: 0x000c */

typedef struct _CTL_VERIFY_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x000c */ unsigned long cCtlStore;
  /* 0x0010 */ void** rghCtlStore;
  /* 0x0014 */ unsigned long cSignerStore;
  /* 0x0018 */ void** rghSignerStore;
} CTL_VERIFY_USAGE_PARA, *PCTL_VERIFY_USAGE_PARA; /* size: 0x001c */

typedef struct _CTL_VERIFY_USAGE_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ const struct _CTL_CONTEXT** ppCtl;
  /* 0x0010 */ unsigned long dwCtlEntryIndex;
  /* 0x0014 */ const struct _CERT_CONTEXT** ppSigner;
  /* 0x0018 */ unsigned long dwSignerIndex;
} CTL_VERIFY_USAGE_STATUS, *PCTL_VERIFY_USAGE_STATUS; /* size: 0x001c */

typedef struct _CURDIR
{
  /* 0x0000 */ struct _UNICODE_STRING DosPath;
  /* 0x0008 */ void* Handle;
} CURDIR, *PCURDIR; /* size: 0x000c */

typedef struct _CURDIR64
{
  /* 0x0000 */ struct _STRING64 DosPath;
  /* 0x0010 */ __int64 Handle;
} CURDIR64, *PCURDIR64; /* size: 0x0018 */

struct _CrtMemBlockHeader;

typedef struct _CrtMemState
{
  /* 0x0000 */ struct _CrtMemBlockHeader* pBlockHeader;
  /* 0x0004 */ unsigned int lCounts[5];
  /* 0x0018 */ unsigned int lSizes[5];
  /* 0x002c */ unsigned int lHighWaterCount;
  /* 0x0030 */ unsigned int lTotalCount;
} CrtMemState, *PCrtMemState; /* size: 0x0034 */

typedef struct _DCB
{
  /* 0x0000 */ unsigned long DCBlength;
  /* 0x0004 */ unsigned long BaudRate;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long fBinary : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long fParity : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long fOutxCtsFlow : 1; /* bit position: 2 */
    /* 0x0008 */ unsigned long fOutxDsrFlow : 1; /* bit position: 3 */
    /* 0x0008 */ unsigned long fDtrControl : 2; /* bit position: 4 */
    /* 0x0008 */ unsigned long fDsrSensitivity : 1; /* bit position: 6 */
    /* 0x0008 */ unsigned long fTXContinueOnXoff : 1; /* bit position: 7 */
    /* 0x0008 */ unsigned long fOutX : 1; /* bit position: 8 */
    /* 0x0008 */ unsigned long fInX : 1; /* bit position: 9 */
    /* 0x0008 */ unsigned long fErrorChar : 1; /* bit position: 10 */
    /* 0x0008 */ unsigned long fNull : 1; /* bit position: 11 */
    /* 0x0008 */ unsigned long fRtsControl : 2; /* bit position: 12 */
    /* 0x0008 */ unsigned long fAbortOnError : 1; /* bit position: 14 */
    /* 0x0008 */ unsigned long fDummy2 : 17; /* bit position: 15 */
  }; /* bitfield */
  /* 0x000c */ unsigned short wReserved;
  /* 0x000e */ unsigned short XonLim;
  /* 0x0010 */ unsigned short XoffLim;
  /* 0x0012 */ unsigned char ByteSize;
  /* 0x0013 */ unsigned char Parity;
  /* 0x0014 */ unsigned char StopBits;
  /* 0x0015 */ char XonChar;
  /* 0x0016 */ char XoffChar;
  /* 0x0017 */ char ErrorChar;
  /* 0x0018 */ char EofChar;
  /* 0x0019 */ char EvtChar;
  /* 0x001a */ unsigned short wReserved1;
} DCB, *PDCB; /* size: 0x001c */

typedef struct _DEBUG_EVENT
{
  /* 0x0000 */ unsigned long dwDebugEventCode;
  /* 0x0004 */ unsigned long dwProcessId;
  /* 0x0008 */ unsigned long dwThreadId;
  union
  {
    union
    {
      /* 0x000c */ struct _EXCEPTION_DEBUG_INFO Exception;
      /* 0x000c */ struct _CREATE_THREAD_DEBUG_INFO CreateThread;
      /* 0x000c */ struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
      /* 0x000c */ struct _EXIT_THREAD_DEBUG_INFO ExitThread;
      /* 0x000c */ struct _EXIT_PROCESS_DEBUG_INFO ExitProcess;
      /* 0x000c */ struct _LOAD_DLL_DEBUG_INFO LoadDll;
      /* 0x000c */ struct _UNLOAD_DLL_DEBUG_INFO UnloadDll;
      /* 0x000c */ struct _OUTPUT_DEBUG_STRING_INFO DebugString;
      /* 0x000c */ struct _RIP_INFO RipInfo;
    }; /* size: 0x0054 */
  } /* size: 0x0054 */ u;
} DEBUG_EVENT, *PDEBUG_EVENT; /* size: 0x0060 */

typedef struct _DECRYPTION_STATUS_BUFFER
{
  /* 0x0000 */ unsigned char NoEncryptedStreams;
} DECRYPTION_STATUS_BUFFER, *PDECRYPTION_STATUS_BUFFER; /* size: 0x0001 */

typedef enum _DEP_SYSTEM_POLICY_TYPE
{
  DEPPolicyAlwaysOff = 0,
  DEPPolicyAlwaysOn = 1,
  DEPPolicyOptIn = 2,
  DEPPolicyOptOut = 3,
  DEPTotalPolicyCount = 4,
} DEP_SYSTEM_POLICY_TYPE, *PDEP_SYSTEM_POLICY_TYPE;

typedef struct _DESCRIPTOR_TABLE_ENTRY
{
  /* 0x0000 */ unsigned long Selector;
  /* 0x0004 */ struct _LDT_ENTRY Descriptor;
} DESCRIPTOR_TABLE_ENTRY, *PDESCRIPTOR_TABLE_ENTRY; /* size: 0x000c */

typedef struct _DEVICE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Failed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long ReadOnly : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long Removable : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ConsoleIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long ConsoleOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Input : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Output : 1; /* bit position: 6 */
  }; /* bitfield */
} DEVICE_FLAGS, *PDEVICE_FLAGS; /* size: 0x0004 */

typedef enum _DEVICE_POWER_STATE
{
  PowerDeviceUnspecified = 0,
  PowerDeviceD0 = 1,
  PowerDeviceD1 = 2,
  PowerDeviceD2 = 3,
  PowerDeviceD3 = 4,
  PowerDeviceMaximum = 5,
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef struct _DISCDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ struct HWND__* hwndOwner;
  /* 0x0008 */ char* lpLocalName;
  /* 0x000c */ char* lpRemoteName;
  /* 0x0010 */ unsigned long dwFlags;
} DISCDLGSTRUCTA, *PDISCDLGSTRUCTA; /* size: 0x0014 */

typedef struct _DISCDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ struct HWND__* hwndOwner;
  /* 0x0008 */ wchar_t* lpLocalName;
  /* 0x000c */ wchar_t* lpRemoteName;
  /* 0x0010 */ unsigned long dwFlags;
} DISCDLGSTRUCTW, *PDISCDLGSTRUCTW; /* size: 0x0014 */

typedef struct _DISPLAY_DEVICEA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ char DeviceName[32];
  /* 0x0024 */ char DeviceString[128];
  /* 0x00a4 */ unsigned long StateFlags;
  /* 0x00a8 */ char DeviceID[128];
  /* 0x0128 */ char DeviceKey[128];
} DISPLAY_DEVICEA, *PDISPLAY_DEVICEA; /* size: 0x01a8 */

typedef struct _DISPLAY_DEVICEW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ wchar_t DeviceName[32];
  /* 0x0044 */ wchar_t DeviceString[128];
  /* 0x0144 */ unsigned long StateFlags;
  /* 0x0148 */ wchar_t DeviceID[128];
  /* 0x0248 */ wchar_t DeviceKey[128];
} DISPLAY_DEVICEW, *PDISPLAY_DEVICEW; /* size: 0x0348 */

typedef struct _DMA_CONFIGURATION_BYTE0
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Channel : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 3; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE0, *PDMA_CONFIGURATION_BYTE0; /* size: 0x0001 */

typedef struct _DMA_CONFIGURATION_BYTE1
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Reserved0 : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned char TransferSize : 2; /* bit position: 2 */
    /* 0x0000 */ unsigned char Timing : 2; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 2; /* bit position: 6 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE1, *PDMA_CONFIGURATION_BYTE1; /* size: 0x0001 */

typedef enum _DMA_SPEED
{
  Compatible = 0,
  TypeA = 1,
  TypeB = 2,
  TypeC = 3,
  TypeF = 4,
  MaximumDmaSpeed = 5,
} DMA_SPEED, *PDMA_SPEED;

typedef enum _DMA_WIDTH
{
  Width8Bits = 0,
  Width16Bits = 1,
  Width32Bits = 2,
  MaximumDmaWidth = 3,
} DMA_WIDTH, *PDMA_WIDTH;

typedef struct _DOCINFOA
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ const char* lpszDocName;
  /* 0x0008 */ const char* lpszOutput;
  /* 0x000c */ const char* lpszDatatype;
  /* 0x0010 */ unsigned long fwType;
} DOCINFOA, *PDOCINFOA; /* size: 0x0014 */

typedef struct _DOCINFOW
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ const wchar_t* lpszDocName;
  /* 0x0008 */ const wchar_t* lpszOutput;
  /* 0x000c */ const wchar_t* lpszDatatype;
  /* 0x0010 */ unsigned long fwType;
} DOCINFOW, *PDOCINFOW; /* size: 0x0014 */

struct _DPA;

typedef enum _DPFLTR_TYPE
{
  DPFLTR_SYSTEM_ID = 0,
  DPFLTR_SMSS_ID = 1,
  DPFLTR_SETUP_ID = 2,
  DPFLTR_NTFS_ID = 3,
  DPFLTR_FSTUB_ID = 4,
  DPFLTR_CRASHDUMP_ID = 5,
  DPFLTR_CDAUDIO_ID = 6,
  DPFLTR_CDROM_ID = 7,
  DPFLTR_CLASSPNP_ID = 8,
  DPFLTR_DISK_ID = 9,
  DPFLTR_REDBOOK_ID = 10,
  DPFLTR_STORPROP_ID = 11,
  DPFLTR_SCSIPORT_ID = 12,
  DPFLTR_SCSIMINIPORT_ID = 13,
  DPFLTR_CONFIG_ID = 14,
  DPFLTR_I8042PRT_ID = 15,
  DPFLTR_SERMOUSE_ID = 16,
  DPFLTR_LSERMOUS_ID = 17,
  DPFLTR_KBDHID_ID = 18,
  DPFLTR_MOUHID_ID = 19,
  DPFLTR_KBDCLASS_ID = 20,
  DPFLTR_MOUCLASS_ID = 21,
  DPFLTR_TWOTRACK_ID = 22,
  DPFLTR_WMILIB_ID = 23,
  DPFLTR_ACPI_ID = 24,
  DPFLTR_AMLI_ID = 25,
  DPFLTR_HALIA64_ID = 26,
  DPFLTR_VIDEO_ID = 27,
  DPFLTR_SVCHOST_ID = 28,
  DPFLTR_VIDEOPRT_ID = 29,
  DPFLTR_TCPIP_ID = 30,
  DPFLTR_DMSYNTH_ID = 31,
  DPFLTR_NTOSPNP_ID = 32,
  DPFLTR_FASTFAT_ID = 33,
  DPFLTR_SAMSS_ID = 34,
  DPFLTR_PNPMGR_ID = 35,
  DPFLTR_NETAPI_ID = 36,
  DPFLTR_SCSERVER_ID = 37,
  DPFLTR_SCCLIENT_ID = 38,
  DPFLTR_SERIAL_ID = 39,
  DPFLTR_SERENUM_ID = 40,
  DPFLTR_UHCD_ID = 41,
  DPFLTR_RPCPROXY_ID = 42,
  DPFLTR_AUTOCHK_ID = 43,
  DPFLTR_DCOMSS_ID = 44,
  DPFLTR_UNIMODEM_ID = 45,
  DPFLTR_SIS_ID = 46,
  DPFLTR_FLTMGR_ID = 47,
  DPFLTR_WMICORE_ID = 48,
  DPFLTR_BURNENG_ID = 49,
  DPFLTR_IMAPI_ID = 50,
  DPFLTR_SXS_ID = 51,
  DPFLTR_FUSION_ID = 52,
  DPFLTR_IDLETASK_ID = 53,
  DPFLTR_SOFTPCI_ID = 54,
  DPFLTR_TAPE_ID = 55,
  DPFLTR_MCHGR_ID = 56,
  DPFLTR_IDEP_ID = 57,
  DPFLTR_PCIIDE_ID = 58,
  DPFLTR_FLOPPY_ID = 59,
  DPFLTR_FDC_ID = 60,
  DPFLTR_TERMSRV_ID = 61,
  DPFLTR_W32TIME_ID = 62,
  DPFLTR_PREFETCHER_ID = 63,
  DPFLTR_RSFILTER_ID = 64,
  DPFLTR_FCPORT_ID = 65,
  DPFLTR_PCI_ID = 66,
  DPFLTR_DMIO_ID = 67,
  DPFLTR_DMCONFIG_ID = 68,
  DPFLTR_DMADMIN_ID = 69,
  DPFLTR_WSOCKTRANSPORT_ID = 70,
  DPFLTR_VSS_ID = 71,
  DPFLTR_PNPMEM_ID = 72,
  DPFLTR_PROCESSOR_ID = 73,
  DPFLTR_DMSERVER_ID = 74,
  DPFLTR_SR_ID = 75,
  DPFLTR_INFINIBAND_ID = 76,
  DPFLTR_IHVDRIVER_ID = 77,
  DPFLTR_IHVVIDEO_ID = 78,
  DPFLTR_IHVAUDIO_ID = 79,
  DPFLTR_IHVNETWORK_ID = 80,
  DPFLTR_IHVSTREAMING_ID = 81,
  DPFLTR_IHVBUS_ID = 82,
  DPFLTR_HPS_ID = 83,
  DPFLTR_RTLTHREADPOOL_ID = 84,
  DPFLTR_LDR_ID = 85,
  DPFLTR_TCPIP6_ID = 86,
  DPFLTR_ISAPNP_ID = 87,
  DPFLTR_SHPC_ID = 88,
  DPFLTR_STORPORT_ID = 89,
  DPFLTR_STORMINIPORT_ID = 90,
  DPFLTR_PRINTSPOOLER_ID = 91,
  DPFLTR_VSSDYNDISK_ID = 92,
  DPFLTR_VERIFIER_ID = 93,
  DPFLTR_VDS_ID = 94,
  DPFLTR_VDSBAS_ID = 95,
  DPFLTR_VDSDYN_ID = 96,
  DPFLTR_VDSDYNDR_ID = 97,
  DPFLTR_VDSLDR_ID = 98,
  DPFLTR_VDSUTIL_ID = 99,
  DPFLTR_DFRGIFC_ID = 100,
  DPFLTR_DEFAULT_ID = 101,
  DPFLTR_MM_ID = 102,
  DPFLTR_DFSC_ID = 103,
  DPFLTR_WOW64_ID = 104,
  DPFLTR_ALPC_ID = 105,
  DPFLTR_WDI_ID = 106,
  DPFLTR_PERFLIB_ID = 107,
  DPFLTR_KTM_ID = 108,
  DPFLTR_IOSTRESS_ID = 109,
  DPFLTR_HEAP_ID = 110,
  DPFLTR_WHEA_ID = 111,
  DPFLTR_USERGDI_ID = 112,
  DPFLTR_MMCSS_ID = 113,
  DPFLTR_TPM_ID = 114,
  DPFLTR_THREADORDER_ID = 115,
  DPFLTR_ENVIRON_ID = 116,
  DPFLTR_EMS_ID = 117,
  DPFLTR_WDT_ID = 118,
  DPFLTR_FVEVOL_ID = 119,
  DPFLTR_NDIS_ID = 120,
  DPFLTR_NVCTRACE_ID = 121,
  DPFLTR_LUAFV_ID = 122,
  DPFLTR_APPCOMPAT_ID = 123,
  DPFLTR_USBSTOR_ID = 124,
  DPFLTR_SBP2PORT_ID = 125,
  DPFLTR_COVERAGE_ID = 126,
  DPFLTR_CACHEMGR_ID = 127,
  DPFLTR_MOUNTMGR_ID = 128,
  DPFLTR_CFR_ID = 129,
  DPFLTR_TXF_ID = 130,
  DPFLTR_KSECDD_ID = 131,
  DPFLTR_FLTREGRESS_ID = 132,
  DPFLTR_MPIO_ID = 133,
  DPFLTR_MSDSM_ID = 134,
  DPFLTR_UDFS_ID = 135,
  DPFLTR_PSHED_ID = 136,
  DPFLTR_STORVSP_ID = 137,
  DPFLTR_EXFAT_ID = 138,
  DPFLTR_ENDOFTABLE_ID = 139,
} DPFLTR_TYPE, *PDPFLTR_TYPE;

typedef struct _DRAGINFOA
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ char* lpFileList;
  /* 0x0014 */ unsigned long grfKeyState;
} DRAGINFOA, *PDRAGINFOA; /* size: 0x0018 */

typedef struct _DRAGINFOW
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ wchar_t* lpFileList;
  /* 0x0014 */ unsigned long grfKeyState;
} DRAGINFOW, *PDRAGINFOW; /* size: 0x0018 */

typedef struct _DRAWPATRECT
{
  /* 0x0000 */ struct tagPOINT ptPosition;
  /* 0x0008 */ struct tagPOINT ptSize;
  /* 0x0010 */ unsigned short wStyle;
  /* 0x0012 */ unsigned short wPattern;
} DRAWPATRECT, *PDRAWPATRECT; /* size: 0x0014 */

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS
{
  /* 0x0000 */ void* PristineRoutine /* function */;
  /* 0x0004 */ void* NewRoutine /* function */;
} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS; /* size: 0x0008 */

typedef struct _DROPFILES
{
  /* 0x0000 */ unsigned long pFiles;
  /* 0x0004 */ struct _POINTL pt;
  /* 0x000c */ unsigned long fNC;
  /* 0x0010 */ unsigned long fWide;
} DROPFILES, *PDROPFILES; /* size: 0x0014 */

struct _DSA;

typedef struct _DSSSEED
{
  /* 0x0000 */ unsigned long counter;
  /* 0x0004 */ unsigned char seed[20];
} DSSSEED, *PDSSSEED; /* size: 0x0018 */

typedef struct _DWORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long alData[1];
} DWORD_BLOB, *PDWORD_BLOB; /* size: 0x0008 */

typedef struct _EFI_DRIVER_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long FriendlyNameOffset;
  /* 0x0010 */ unsigned long DriverFilePathOffset;
} EFI_DRIVER_ENTRY, *PEFI_DRIVER_ENTRY; /* size: 0x0014 */

typedef struct _EFI_DRIVER_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _EFI_DRIVER_ENTRY DriverEntry;
} EFI_DRIVER_ENTRY_LIST, *PEFI_DRIVER_ENTRY_LIST; /* size: 0x0018 */

typedef struct _EISA_DMA_CONFIGURATION
{
  /* 0x0000 */ struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
  /* 0x0001 */ struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION; /* size: 0x0002 */

typedef struct _EISA_IRQ_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
  /* 0x0001 */ unsigned char Reserved;
} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION; /* size: 0x0002 */

typedef struct _EISA_IRQ_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Interrupt : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char LevelTriggered : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_MEMORY_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_MEMORY_TYPE ConfigurationByte;
  /* 0x0001 */ unsigned char DataSize;
  /* 0x0002 */ unsigned short AddressLowWord;
  /* 0x0004 */ unsigned char AddressHighByte;
  /* 0x0005 */ unsigned short MemorySize;
} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION; /* size: 0x0007 */

typedef struct _EISA_MEMORY_TYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ReadWrite : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Cached : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved0 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Type : 2; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE; /* size: 0x0001 */

typedef struct _EISA_PORT_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_PORT_DESCRIPTOR Configuration;
  /* 0x0001 */ unsigned short PortAddress;
} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION; /* size: 0x0003 */

typedef struct _EISA_PORT_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char NumberPorts : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR; /* size: 0x0001 */

typedef struct _ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned __int64 StartingFileOffset;
  /* 0x0008 */ unsigned long OutputBufferOffset;
  /* 0x000c */ unsigned long BytesWithinFileSize;
  /* 0x0010 */ unsigned long BytesWithinValidDataLength;
  /* 0x0014 */ unsigned short CompressionFormat;
  /* 0x0016 */ unsigned char DataUnitShift;
  /* 0x0017 */ unsigned char ChunkShift;
  /* 0x0018 */ unsigned char ClusterShift;
  /* 0x0019 */ unsigned char EncryptionFormat;
  /* 0x001a */ unsigned short NumberOfDataBlocks;
  /* 0x001c */ unsigned long DataBlockSize[1];
} ENCRYPTED_DATA_INFO, *PENCRYPTED_DATA_INFO; /* size: 0x0020 */

typedef struct _ENCRYPTION_BUFFER
{
  /* 0x0000 */ unsigned long EncryptionOperation;
  /* 0x0004 */ unsigned char Private[1];
  /* 0x0005 */ char __PADDING__[3];
} ENCRYPTION_BUFFER, *PENCRYPTION_BUFFER; /* size: 0x0008 */

typedef struct _ENLISTMENT_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID TransactionId;
  /* 0x0020 */ struct _GUID ResourceManagerId;
} ENLISTMENT_BASIC_INFORMATION, *PENLISTMENT_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _ENLISTMENT_CRM_INFORMATION
{
  /* 0x0000 */ struct _GUID CrmTransactionManagerId;
  /* 0x0010 */ struct _GUID CrmResourceManagerId;
  /* 0x0020 */ struct _GUID CrmEnlistmentId;
} ENLISTMENT_CRM_INFORMATION, *PENLISTMENT_CRM_INFORMATION; /* size: 0x0030 */

typedef enum _ENLISTMENT_INFORMATION_CLASS
{
  EnlistmentBasicInformation = 0,
  EnlistmentRecoveryInformation = 1,
  EnlistmentCrmInformation = 2,
} ENLISTMENT_INFORMATION_CLASS, *PENLISTMENT_INFORMATION_CLASS;

typedef struct _ENUM_SERVICE_STATUSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0004 */ char* lpDisplayName;
  /* 0x0008 */ struct _SERVICE_STATUS ServiceStatus;
} ENUM_SERVICE_STATUSA, *PENUM_SERVICE_STATUSA; /* size: 0x0024 */

typedef struct _ENUM_SERVICE_STATUSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0004 */ wchar_t* lpDisplayName;
  /* 0x0008 */ struct _SERVICE_STATUS ServiceStatus;
} ENUM_SERVICE_STATUSW, *PENUM_SERVICE_STATUSW; /* size: 0x0024 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0004 */ char* lpDisplayName;
  /* 0x0008 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
} ENUM_SERVICE_STATUS_PROCESSA, *PENUM_SERVICE_STATUS_PROCESSA; /* size: 0x002c */

typedef struct _ENUM_SERVICE_STATUS_PROCESSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0004 */ wchar_t* lpDisplayName;
  /* 0x0008 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
} ENUM_SERVICE_STATUS_PROCESSW, *PENUM_SERVICE_STATUS_PROCESSW; /* size: 0x002c */

typedef struct _EVENTLOGRECORD
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long RecordNumber;
  /* 0x000c */ unsigned long TimeGenerated;
  /* 0x0010 */ unsigned long TimeWritten;
  /* 0x0014 */ unsigned long EventID;
  /* 0x0018 */ unsigned short EventType;
  /* 0x001a */ unsigned short NumStrings;
  /* 0x001c */ unsigned short EventCategory;
  /* 0x001e */ unsigned short ReservedFlags;
  /* 0x0020 */ unsigned long ClosingRecordNumber;
  /* 0x0024 */ unsigned long StringOffset;
  /* 0x0028 */ unsigned long UserSidLength;
  /* 0x002c */ unsigned long UserSidOffset;
  /* 0x0030 */ unsigned long DataLength;
  /* 0x0034 */ unsigned long DataOffset;
} EVENTLOGRECORD, *PEVENTLOGRECORD; /* size: 0x0038 */

typedef struct _EVENTLOG_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long dwFull;
} EVENTLOG_FULL_INFORMATION, *PEVENTLOG_FULL_INFORMATION; /* size: 0x0004 */

typedef struct _EVENTSFORLOGFILE
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ wchar_t szLogicalLogFile[256];
  /* 0x0204 */ unsigned long ulNumRecords;
  /* 0x0208 */ struct _EVENTLOGRECORD* pEventLogRecords /* zero-length array */;
} EVENTSFORLOGFILE, *PEVENTSFORLOGFILE; /* size: 0x0208 */

typedef struct _EVENT_BASIC_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TYPE EventType;
  /* 0x0004 */ long EventState;
} EVENT_BASIC_INFORMATION, *PEVENT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _EVENT_DATA_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved;
} EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR; /* size: 0x0010 */

typedef struct _EVENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char Channel;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char Opcode;
  /* 0x0006 */ unsigned short Task;
  /* 0x0008 */ unsigned __int64 Keyword;
} EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR; /* size: 0x0010 */

typedef struct _EVENT_FILTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Type;
} EVENT_FILTER_DESCRIPTOR, *PEVENT_FILTER_DESCRIPTOR; /* size: 0x0010 */

typedef enum _EVENT_INFORMATION_CLASS
{
  EventBasicInformation = 0,
} EVENT_INFORMATION_CLASS, *PEVENT_INFORMATION_CLASS;

typedef struct _EVENT_TRACE_PROPERTIES
{
  /* 0x0000 */ struct _WNODE_HEADER Wnode;
  /* 0x0030 */ unsigned long BufferSize;
  /* 0x0034 */ unsigned long MinimumBuffers;
  /* 0x0038 */ unsigned long MaximumBuffers;
  /* 0x003c */ unsigned long MaximumFileSize;
  /* 0x0040 */ unsigned long LogFileMode;
  /* 0x0044 */ unsigned long FlushTimer;
  /* 0x0048 */ unsigned long EnableFlags;
  /* 0x004c */ long AgeLimit;
  /* 0x0050 */ unsigned long NumberOfBuffers;
  /* 0x0054 */ unsigned long FreeBuffers;
  /* 0x0058 */ unsigned long EventsLost;
  /* 0x005c */ unsigned long BuffersWritten;
  /* 0x0060 */ unsigned long LogBuffersLost;
  /* 0x0064 */ unsigned long RealTimeBuffersLost;
  /* 0x0068 */ void* LoggerThreadId;
  /* 0x006c */ unsigned long LogFileNameOffset;
  /* 0x0070 */ unsigned long LoggerNameOffset;
  /* 0x0074 */ long __PADDING__[1];
} EVENT_TRACE_PROPERTIES, *PEVENT_TRACE_PROPERTIES; /* size: 0x0078 */

typedef enum _EVENT_TYPE
{
  NotificationEvent = 0,
  SynchronizationEvent = 1,
} EVENT_TYPE, *PEVENT_TYPE;

typedef struct _EXCEPTION_DEBUG_INFO
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0050 */ unsigned long dwFirstChance;
} EXCEPTION_DEBUG_INFO, *PEXCEPTION_DEBUG_INFO; /* size: 0x0054 */

typedef enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0,
  ExceptionContinueSearch = 1,
  ExceptionNestedException = 2,
  ExceptionCollidedUnwind = 3,
} EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

typedef struct _EXCEPTION_POINTERS
{
  /* 0x0000 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0004 */ struct _CONTEXT* ContextRecord;
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS; /* size: 0x0008 */

typedef struct _EXCEPTION_RECORD
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x000c */ void* ExceptionAddress;
  /* 0x0010 */ unsigned long NumberParameters;
  /* 0x0014 */ unsigned long ExceptionInformation[15];
} EXCEPTION_RECORD, *PEXCEPTION_RECORD; /* size: 0x0050 */

typedef struct _EXCEPTION_RECORD32
{
  /* 0x0000 */ unsigned long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned long ExceptionRecord;
  /* 0x000c */ unsigned long ExceptionAddress;
  /* 0x0010 */ unsigned long NumberParameters;
  /* 0x0014 */ unsigned long ExceptionInformation[15];
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32; /* size: 0x0050 */

typedef struct _EXCEPTION_RECORD64
{
  /* 0x0000 */ unsigned long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ unsigned long __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64; /* size: 0x0098 */

typedef struct _EXCEPTION_REGISTRATION_RECORD
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* Next;
  /* 0x0004 */ void* Handler /* function */;
} EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD; /* size: 0x0008 */

typedef struct _EXFAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} EXFAT_STATISTICS, *PEXFAT_STATISTICS; /* size: 0x0024 */

typedef struct _EXIT_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_PROCESS_DEBUG_INFO, *PEXIT_PROCESS_DEBUG_INFO; /* size: 0x0004 */

typedef struct _EXIT_THREAD_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_THREAD_DEBUG_INFO, *PEXIT_THREAD_DEBUG_INFO; /* size: 0x0004 */

typedef enum _FAIL_BEHAVIOR
{
  NullOnFail = 0,
  ExceptOnFail = 1,
} FAIL_BEHAVIOR, *PFAIL_BEHAVIOR;

typedef struct _FAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} FAT_STATISTICS, *PFAT_STATISTICS; /* size: 0x0024 */

typedef struct _FIBER
{
  /* 0x0000 */ void* FiberData;
  /* 0x0004 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* DeallocationStack;
  /* 0x0014 */ struct _CONTEXT FiberContext;
  /* 0x02e0 */ struct _Wx86TIB* Wx86Tib;
  /* 0x02e4 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x02e8 */ void* FlsData;
  /* 0x02ec */ unsigned long GuaranteedStackBytes;
  /* 0x02f0 */ unsigned short TebFlags;
  /* 0x02f2 */ unsigned short ReservedPad;
} FIBER, *PFIBER; /* size: 0x02f4 */

typedef struct _FILEMUIINFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwFileType;
  /* 0x000c */ unsigned char pChecksum[16];
  /* 0x001c */ unsigned char pServiceChecksum[16];
  /* 0x002c */ unsigned long dwLanguageNameOffset;
  /* 0x0030 */ unsigned long dwTypeIDMainSize;
  /* 0x0034 */ unsigned long dwTypeIDMainOffset;
  /* 0x0038 */ unsigned long dwTypeNameMainOffset;
  /* 0x003c */ unsigned long dwTypeIDMUISize;
  /* 0x0040 */ unsigned long dwTypeIDMUIOffset;
  /* 0x0044 */ unsigned long dwTypeNameMUIOffset;
  /* 0x0048 */ unsigned char abBuffer[8];
} FILEMUIINFO, *PFILEMUIINFO; /* size: 0x0050 */

typedef struct _FILEOFFSET_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Offset : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} FILEOFFSET_INFORMATION, *PFILEOFFSET_INFORMATION; /* size: 0x0008 */

typedef struct _FILESYSTEM_STATISTICS
{
  /* 0x0000 */ unsigned short FileSystemType;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ unsigned long SizeOfCompleteStructure;
  /* 0x0008 */ unsigned long UserFileReads;
  /* 0x000c */ unsigned long UserFileReadBytes;
  /* 0x0010 */ unsigned long UserDiskReads;
  /* 0x0014 */ unsigned long UserFileWrites;
  /* 0x0018 */ unsigned long UserFileWriteBytes;
  /* 0x001c */ unsigned long UserDiskWrites;
  /* 0x0020 */ unsigned long MetaDataReads;
  /* 0x0024 */ unsigned long MetaDataReadBytes;
  /* 0x0028 */ unsigned long MetaDataDiskReads;
  /* 0x002c */ unsigned long MetaDataWrites;
  /* 0x0030 */ unsigned long MetaDataWriteBytes;
  /* 0x0034 */ unsigned long MetaDataDiskWrites;
} FILESYSTEM_STATISTICS, *PFILESYSTEM_STATISTICS; /* size: 0x0038 */

typedef struct _FILETIME
{
  /* 0x0000 */ unsigned long dwLowDateTime;
  /* 0x0004 */ unsigned long dwHighDateTime;
} FILETIME, *PFILETIME; /* size: 0x0008 */

typedef struct _FILE_ACCESS_INFORMATION
{
  /* 0x0000 */ unsigned long AccessFlags;
} FILE_ACCESS_INFORMATION, *PFILE_ACCESS_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_ALIGNMENT_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_ALLOCATED_RANGE_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} FILE_ALLOCATED_RANGE_BUFFER, *PFILE_ALLOCATED_RANGE_BUFFER; /* size: 0x0010 */

typedef struct _FILE_ALLOCATION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFO, *PFILE_ALLOCATION_INFO; /* size: 0x0008 */

typedef struct _FILE_ALLOCATION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFORMATION, *PFILE_ALLOCATION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ALL_INFORMATION
{
  /* 0x0000 */ struct _FILE_BASIC_INFORMATION BasicInformation;
  /* 0x0028 */ struct _FILE_STANDARD_INFORMATION StandardInformation;
  /* 0x0040 */ struct _FILE_INTERNAL_INFORMATION InternalInformation;
  /* 0x0048 */ struct _FILE_EA_INFORMATION EaInformation;
  /* 0x004c */ struct _FILE_ACCESS_INFORMATION AccessInformation;
  /* 0x0050 */ struct _FILE_POSITION_INFORMATION PositionInformation;
  /* 0x0058 */ struct _FILE_MODE_INFORMATION ModeInformation;
  /* 0x005c */ struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
  /* 0x0060 */ struct _FILE_NAME_INFORMATION NameInformation;
} FILE_ALL_INFORMATION, *PFILE_ALL_INFORMATION; /* size: 0x0068 */

typedef struct _FILE_ATTRIBUTE_TAG_INFO
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFO, *PFILE_ATTRIBUTE_TAG_INFO; /* size: 0x0008 */

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_BASIC_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFO, *PFILE_BASIC_INFO; /* size: 0x0028 */

typedef struct _FILE_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION; /* size: 0x0028 */

typedef struct _FILE_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ wchar_t FileName[1];
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION; /* size: 0x0060 */

typedef struct _FILE_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* Port;
  /* 0x0004 */ void* Key;
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_COMPRESSION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFO, *PFILE_COMPRESSION_INFO; /* size: 0x0010 */

typedef struct _FILE_COMPRESSION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFORMATION, *PFILE_COMPRESSION_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_DIRECTORY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ wchar_t FileName[1];
  /* 0x0042 */ char __PADDING__[6];
} FILE_DIRECTORY_INFORMATION, *PFILE_DIRECTORY_INFORMATION; /* size: 0x0048 */

typedef struct _FILE_DISPOSITION_INFO
{
  /* 0x0000 */ unsigned char DeleteFileW;
} FILE_DISPOSITION_INFO, *PFILE_DISPOSITION_INFO; /* size: 0x0001 */

typedef struct _FILE_DISPOSITION_INFORMATION
{
  /* 0x0000 */ unsigned char DeleteFile;
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; /* size: 0x0001 */

typedef struct _FILE_EA_INFORMATION
{
  /* 0x0000 */ unsigned long EaSize;
} FILE_EA_INFORMATION, *PFILE_EA_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_END_OF_FILE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFO, *PFILE_END_OF_FILE_INFO; /* size: 0x0008 */

typedef struct _FILE_END_OF_FILE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION
{
  /* 0x0000 */ unsigned long FileSystemAttributes;
  /* 0x0004 */ long MaximumComponentNameLength;
  /* 0x0008 */ unsigned long FileSystemNameLength;
  /* 0x000c */ wchar_t FileSystemName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_FS_ATTRIBUTE_INFORMATION, *PFILE_FS_ATTRIBUTE_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_FS_CONTROL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FreeSpaceStartFiltering;
  /* 0x0008 */ union _LARGE_INTEGER FreeSpaceThreshold;
  /* 0x0010 */ union _LARGE_INTEGER FreeSpaceStopFiltering;
  /* 0x0018 */ union _LARGE_INTEGER DefaultQuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER DefaultQuotaLimit;
  /* 0x0028 */ unsigned long FileSystemControlFlags;
  /* 0x002c */ long __PADDING__[1];
} FILE_FS_CONTROL_INFORMATION, *PFILE_FS_CONTROL_INFORMATION; /* size: 0x0030 */

typedef struct _FILE_FS_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long Characteristics;
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION
{
  /* 0x0000 */ unsigned char DriverInPath;
  /* 0x0004 */ unsigned long DriverNameLength;
  /* 0x0008 */ wchar_t DriverName[1];
  /* 0x000a */ char __PADDING__[2];
} FILE_FS_DRIVER_PATH_INFORMATION, *PFILE_FS_DRIVER_PATH_INFORMATION; /* size: 0x000c */

typedef struct _FILE_FS_FULL_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER CallerAvailableAllocationUnits;
  /* 0x0010 */ union _LARGE_INTEGER ActualAvailableAllocationUnits;
  /* 0x0018 */ unsigned long SectorsPerAllocationUnit;
  /* 0x001c */ unsigned long BytesPerSector;
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION; /* size: 0x0020 */

typedef struct _FILE_FS_LABEL_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeLabelLength;
  /* 0x0004 */ wchar_t VolumeLabel[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_FS_LABEL_INFORMATION, *PFILE_FS_LABEL_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_FS_OBJECTID_INFORMATION
{
  /* 0x0000 */ unsigned char ObjectId[16];
  /* 0x0010 */ unsigned char ExtendedInfo[48];
} FILE_FS_OBJECTID_INFORMATION, *PFILE_FS_OBJECTID_INFORMATION; /* size: 0x0040 */

typedef struct _FILE_FS_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER AvailableAllocationUnits;
  /* 0x0010 */ unsigned long SectorsPerAllocationUnit;
  /* 0x0014 */ unsigned long BytesPerSector;
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_FS_VOLUME_FLAGS_INFORMATION, *PFILE_FS_VOLUME_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_FS_VOLUME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeCreationTime;
  /* 0x0008 */ unsigned long VolumeSerialNumber;
  /* 0x000c */ unsigned long VolumeLabelLength;
  /* 0x0010 */ unsigned char SupportsObjects;
  /* 0x0012 */ wchar_t VolumeLabel[1];
  /* 0x0014 */ long __PADDING__[1];
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFORMATION, *PFILE_FULL_DIR_INFORMATION; /* size: 0x0048 */

typedef struct _FILE_FULL_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char EaNameLength;
  /* 0x0006 */ unsigned short EaValueLength;
  /* 0x0008 */ char EaName[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION; /* size: 0x000c */

typedef struct _FILE_GET_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char EaNameLength;
  /* 0x0005 */ char EaName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_GET_EA_INFORMATION, *PFILE_GET_EA_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_GET_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID Sid;
} FILE_GET_QUOTA_INFORMATION, *PFILE_GET_QUOTA_INFORMATION; /* size: 0x0014 */

typedef struct _FILE_ID_BOTH_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFO, *PFILE_ID_BOTH_DIR_INFO; /* size: 0x0070 */

typedef struct _FILE_ID_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFORMATION, *PFILE_ID_BOTH_DIR_INFORMATION; /* size: 0x0070 */

typedef struct _FILE_ID_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0048 */ union _LARGE_INTEGER FileId;
  /* 0x0050 */ wchar_t FileName[1];
  /* 0x0052 */ char __PADDING__[6];
} FILE_ID_FULL_DIR_INFORMATION, *PFILE_ID_FULL_DIR_INFORMATION; /* size: 0x0058 */

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ struct _GUID LockingTransactionId;
  /* 0x0058 */ unsigned long TxInfoFlags;
  /* 0x005c */ wchar_t FileName[1];
  /* 0x005e */ char __PADDING__[2];
} FILE_ID_GLOBAL_TX_DIR_INFORMATION, *PFILE_ID_GLOBAL_TX_DIR_INFORMATION; /* size: 0x0060 */

typedef enum _FILE_ID_TYPE
{
  FileIdType = 0,
  ObjectIdType = 1,
  MaximumFileIdType = 2,
} FILE_ID_TYPE, *PFILE_ID_TYPE;

typedef enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 1,
  FileFullDirectoryInformation = 2,
  FileBothDirectoryInformation = 3,
  FileBasicInformation = 4,
  FileStandardInformation = 5,
  FileInternalInformation = 6,
  FileEaInformation = 7,
  FileAccessInformation = 8,
  FileNameInformation = 9,
  FileRenameInformation = 10,
  FileLinkInformation = 11,
  FileNamesInformation = 12,
  FileDispositionInformation = 13,
  FilePositionInformation = 14,
  FileFullEaInformation = 15,
  FileModeInformation = 16,
  FileAlignmentInformation = 17,
  FileAllInformation = 18,
  FileAllocationInformation = 19,
  FileEndOfFileInformation = 20,
  FileAlternateNameInformation = 21,
  FileStreamInformation = 22,
  FilePipeInformation = 23,
  FilePipeLocalInformation = 24,
  FilePipeRemoteInformation = 25,
  FileMailslotQueryInformation = 26,
  FileMailslotSetInformation = 27,
  FileCompressionInformation = 28,
  FileObjectIdInformation = 29,
  FileCompletionInformation = 30,
  FileMoveClusterInformation = 31,
  FileQuotaInformation = 32,
  FileReparsePointInformation = 33,
  FileNetworkOpenInformation = 34,
  FileAttributeTagInformation = 35,
  FileTrackingInformation = 36,
  FileIdBothDirectoryInformation = 37,
  FileIdFullDirectoryInformation = 38,
  FileValidDataLengthInformation = 39,
  FileShortNameInformation = 40,
  FileIoCompletionNotificationInformation = 41,
  FileIoStatusBlockRangeInformation = 42,
  FileIoPriorityHintInformation = 43,
  FileSfioReserveInformation = 44,
  FileSfioVolumeInformation = 45,
  FileHardLinkInformation = 46,
  FileProcessIdsUsingFileInformation = 47,
  FileNormalizedNameInformation = 48,
  FileNetworkPhysicalNameInformation = 49,
  FileIdGlobalTxDirectoryInformation = 50,
  FileMaximumInformation = 51,
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

typedef enum _FILE_INFO_BY_HANDLE_CLASS
{
  FileBasicInfo = 0,
  FileStandardInfo = 1,
  FileNameInfo = 2,
  FileRenameInfo = 3,
  FileDispositionInfo = 4,
  FileAllocationInfo = 5,
  FileEndOfFileInfo = 6,
  FileStreamInfo = 7,
  FileCompressionInfo = 8,
  FileAttributeTagInfo = 9,
  FileIdBothDirectoryInfo = 10,
  FileIdBothDirectoryRestartInfo = 11,
  FileIoPriorityHintInfo = 12,
  MaximumFileInfoByHandleClass = 13,
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;

typedef struct _FILE_INTERNAL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IndexNumber;
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned char* IoStatusBlockRange;
  /* 0x0004 */ unsigned long Length;
} FILE_IOSTATUSBLOCK_RANGE_INFORMATION, *PFILE_IOSTATUSBLOCK_RANGE_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_IO_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* KeyContext;
  /* 0x0004 */ void* ApcContext;
  /* 0x0008 */ struct _IO_STATUS_BLOCK IoStatusBlock;
} FILE_IO_COMPLETION_INFORMATION, *PFILE_IO_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_IO_COMPLETION_NOTIFICATION_INFORMATION, *PFILE_IO_COMPLETION_NOTIFICATION_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_IO_PRIORITY_HINT_INFO
{
  /* 0x0000 */ enum _PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFO, *PFILE_IO_PRIORITY_HINT_INFO; /* size: 0x0004 */

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION
{
  /* 0x0000 */ enum _IO_PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFORMATION, *PFILE_IO_PRIORITY_HINT_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_LINKS_INFORMATION
{
  /* 0x0000 */ unsigned long BytesNeeded;
  /* 0x0004 */ unsigned long EntriesReturned;
  /* 0x0008 */ struct _FILE_LINK_ENTRY_INFORMATION Entry;
} FILE_LINKS_INFORMATION, *PFILE_LINKS_INFORMATION; /* size: 0x0020 */

typedef struct _FILE_LINK_ENTRY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0008 */ __int64 ParentFileId;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_ENTRY_INFORMATION, *PFILE_LINK_ENTRY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_LINK_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0004 */ void* RootDirectory;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_LINK_INFORMATION, *PFILE_LINK_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_MAILSLOT_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long ReadDataAvailable;
  /* 0x0004 */ unsigned long NumberOfMessages;
  /* 0x0008 */ unsigned long MessageLength;
} FILE_MAILSLOT_PEEK_BUFFER, *PFILE_MAILSLOT_PEEK_BUFFER; /* size: 0x000c */

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumMessageSize;
  /* 0x0004 */ unsigned long MailslotQuota;
  /* 0x0008 */ unsigned long NextMessageSize;
  /* 0x000c */ unsigned long MessagesAvailable;
  /* 0x0010 */ union _LARGE_INTEGER ReadTimeout;
} FILE_MAILSLOT_QUERY_INFORMATION, *PFILE_MAILSLOT_QUERY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_MAILSLOT_SET_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER* ReadTimeout;
} FILE_MAILSLOT_SET_INFORMATION, *PFILE_MAILSLOT_SET_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER
{
  /* 0x0000 */ unsigned char CloseDisc;
} FILE_MAKE_COMPATIBLE_BUFFER, *PFILE_MAKE_COMPATIBLE_BUFFER; /* size: 0x0001 */

typedef struct _FILE_MODE_INFORMATION
{
  /* 0x0000 */ unsigned long Mode;
} FILE_MODE_INFORMATION, *PFILE_MODE_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_MOVE_CLUSTER_INFORMATION
{
  /* 0x0000 */ unsigned long ClusterCount;
  /* 0x0004 */ void* RootDirectory;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_MOVE_CLUSTER_INFORMATION, *PFILE_MOVE_CLUSTER_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_NAMES_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NAMES_INFORMATION, *PFILE_NAMES_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_NAME_INFO
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFO, *PFILE_NAME_INFO; /* size: 0x0008 */

typedef struct _FILE_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_NETWORK_OPEN_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ unsigned long FileAttributes;
  /* 0x0034 */ long __PADDING__[1];
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION; /* size: 0x0038 */

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NETWORK_PHYSICAL_NAME_INFORMATION, *PFILE_NETWORK_PHYSICAL_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_OBJECTID_BUFFER
{
  /* 0x0000 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char BirthVolumeId[16];
      /* 0x0020 */ unsigned char BirthObjectId[16];
      /* 0x0030 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0010 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_BUFFER, *PFILE_OBJECTID_BUFFER; /* size: 0x0040 */

typedef struct _FILE_OBJECTID_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0018 */ unsigned char BirthVolumeId[16];
      /* 0x0028 */ unsigned char BirthObjectId[16];
      /* 0x0038 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0018 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_INFORMATION, *PFILE_OBJECTID_INFORMATION; /* size: 0x0048 */

typedef struct _FILE_PATH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned char FilePath[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_PATH, *PFILE_PATH; /* size: 0x0010 */

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER
{
  /* 0x0000 */ void* EventHandle;
  /* 0x0004 */ unsigned long KeyValue;
} FILE_PIPE_ASSIGN_EVENT_BUFFER, *PFILE_PIPE_ASSIGN_EVENT_BUFFER; /* size: 0x0008 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0004 */ void* ClientProcess;
} FILE_PIPE_CLIENT_PROCESS_BUFFER, *PFILE_PIPE_CLIENT_PROCESS_BUFFER; /* size: 0x0008 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0004 */ void* ClientProcess;
  /* 0x0008 */ unsigned short ClientComputerNameLength;
  /* 0x000a */ wchar_t ClientComputerBuffer[16];
  /* 0x002a */ char __PADDING__[2];
} FILE_PIPE_CLIENT_PROCESS_BUFFER_EX, *PFILE_PIPE_CLIENT_PROCESS_BUFFER_EX; /* size: 0x002c */

typedef struct _FILE_PIPE_EVENT_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long EntryType;
  /* 0x0008 */ unsigned long ByteCount;
  /* 0x000c */ unsigned long KeyValue;
  /* 0x0010 */ unsigned long NumberRequests;
} FILE_PIPE_EVENT_BUFFER, *PFILE_PIPE_EVENT_BUFFER; /* size: 0x0014 */

typedef struct _FILE_PIPE_INFORMATION
{
  /* 0x0000 */ unsigned long ReadMode;
  /* 0x0004 */ unsigned long CompletionMode;
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_PIPE_LOCAL_INFORMATION
{
  /* 0x0000 */ unsigned long NamedPipeType;
  /* 0x0004 */ unsigned long NamedPipeConfiguration;
  /* 0x0008 */ unsigned long MaximumInstances;
  /* 0x000c */ unsigned long CurrentInstances;
  /* 0x0010 */ unsigned long InboundQuota;
  /* 0x0014 */ unsigned long ReadDataAvailable;
  /* 0x0018 */ unsigned long OutboundQuota;
  /* 0x001c */ unsigned long WriteQuotaAvailable;
  /* 0x0020 */ unsigned long NamedPipeState;
  /* 0x0024 */ unsigned long NamedPipeEnd;
} FILE_PIPE_LOCAL_INFORMATION, *PFILE_PIPE_LOCAL_INFORMATION; /* size: 0x0028 */

typedef struct _FILE_PIPE_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long ReadDataAvailable;
  /* 0x0008 */ unsigned long NumberOfMessages;
  /* 0x000c */ unsigned long MessageLength;
  /* 0x0010 */ char Data[1];
  /* 0x0011 */ char __PADDING__[3];
} FILE_PIPE_PEEK_BUFFER, *PFILE_PIPE_PEEK_BUFFER; /* size: 0x0014 */

typedef struct _FILE_PIPE_REMOTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CollectDataTime;
  /* 0x0008 */ unsigned long MaximumCollectionCount;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_REMOTE_INFORMATION, *PFILE_PIPE_REMOTE_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ unsigned char TimeoutSpecified;
  /* 0x000e */ wchar_t Name[1];
} FILE_PIPE_WAIT_FOR_BUFFER, *PFILE_PIPE_WAIT_FOR_BUFFER; /* size: 0x0010 */

typedef struct _FILE_POSITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CurrentByteOffset;
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_PREFETCH
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH, *PFILE_PREFETCH; /* size: 0x0010 */

typedef struct _FILE_PREFETCH_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH_EX, *PFILE_PREFETCH_EX; /* size: 0x0018 */

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0004 */ unsigned long ProcessIdList[1];
} FILE_PROCESS_IDS_USING_FILE_INFORMATION, *PFILE_PROCESS_IDS_USING_FILE_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER DirectoryCount;
  /* 0x0008 */ union _LARGE_INTEGER FileCount;
  /* 0x0010 */ unsigned short FsFormatMajVersion;
  /* 0x0012 */ unsigned short FsFormatMinVersion;
  /* 0x0014 */ wchar_t FsFormatName[12];
  /* 0x0030 */ union _LARGE_INTEGER FormatTime;
  /* 0x0038 */ union _LARGE_INTEGER LastUpdateTime;
  /* 0x0040 */ wchar_t CopyrightInfo[34];
  /* 0x0084 */ wchar_t AbstractInfo[34];
  /* 0x00c8 */ wchar_t FormattingImplementationInfo[34];
  /* 0x010c */ wchar_t LastModifyingImplementationInfo[34];
} FILE_QUERY_ON_DISK_VOL_INFO_BUFFER, *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER; /* size: 0x0150 */

typedef struct _FILE_QUERY_SPARING_BUFFER
{
  /* 0x0000 */ unsigned long SparingUnitBytes;
  /* 0x0004 */ unsigned char SoftwareSparing;
  /* 0x0008 */ unsigned long TotalSpareBlocks;
  /* 0x000c */ unsigned long FreeSpareBlocks;
} FILE_QUERY_SPARING_BUFFER, *PFILE_QUERY_SPARING_BUFFER; /* size: 0x0010 */

typedef struct _FILE_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0010 */ union _LARGE_INTEGER QuotaUsed;
  /* 0x0018 */ union _LARGE_INTEGER QuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER QuotaLimit;
  /* 0x0028 */ struct _SID Sid;
  /* 0x0034 */ long __PADDING__[1];
} FILE_QUOTA_INFORMATION, *PFILE_QUOTA_INFORMATION; /* size: 0x0038 */

typedef struct _FILE_RENAME_INFO
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0004 */ void* RootDirectory;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_RENAME_INFO, *PFILE_RENAME_INFO; /* size: 0x0010 */

typedef struct _FILE_RENAME_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0004 */ void* RootDirectory;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned long Tag;
  /* 0x000c */ long __PADDING__[1];
} FILE_REPARSE_POINT_INFORMATION, *PFILE_REPARSE_POINT_INFORMATION; /* size: 0x0010 */

typedef union _FILE_SEGMENT_ELEMENT
{
  union
  {
    /* 0x0000 */ void* Buffer;
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT; /* size: 0x0008 */

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER
{
  /* 0x0000 */ unsigned char Disable;
} FILE_SET_DEFECT_MGMT_BUFFER, *PFILE_SET_DEFECT_MGMT_BUFFER; /* size: 0x0001 */

typedef struct _FILE_SET_SPARSE_BUFFER
{
  /* 0x0000 */ unsigned char SetSparse;
} FILE_SET_SPARSE_BUFFER, *PFILE_SET_SPARSE_BUFFER; /* size: 0x0001 */

typedef struct _FILE_SFIO_RESERVE_INFORMATION
{
  /* 0x0000 */ unsigned long RequestsPerPeriod;
  /* 0x0004 */ unsigned long Period;
  /* 0x0008 */ unsigned char RetryFailures;
  /* 0x0009 */ unsigned char Discardable;
  /* 0x000c */ unsigned long RequestSize;
  /* 0x0010 */ unsigned long NumOutstandingRequests;
} FILE_SFIO_RESERVE_INFORMATION, *PFILE_SFIO_RESERVE_INFORMATION; /* size: 0x0014 */

typedef struct _FILE_SFIO_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned long MinimumTransferSize;
} FILE_SFIO_VOLUME_INFORMATION, *PFILE_SFIO_VOLUME_INFORMATION; /* size: 0x000c */

typedef struct _FILE_STANDARD_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFO, *PFILE_STANDARD_INFO; /* size: 0x0018 */

typedef struct _FILE_STANDARD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_STREAM_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFO, *PFILE_STREAM_INFO; /* size: 0x0020 */

typedef struct _FILE_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFORMATION, *PFILE_STREAM_INFORMATION; /* size: 0x0020 */

typedef struct _FILE_TRACKING_INFORMATION
{
  /* 0x0000 */ void* DestinationFile;
  /* 0x0004 */ unsigned long ObjectInformationLength;
  /* 0x0008 */ char ObjectInformation[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_TRACKING_INFORMATION, *PFILE_TRACKING_INFORMATION; /* size: 0x000c */

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ValidDataLength;
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ZERO_DATA_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER BeyondFinalZero;
} FILE_ZERO_DATA_INFORMATION, *PFILE_ZERO_DATA_INFORMATION; /* size: 0x0010 */

typedef enum _FINDEX_INFO_LEVELS
{
  FindExInfoStandard = 0,
  FindExInfoMaxInfoLevel = 1,
} FINDEX_INFO_LEVELS, *PFINDEX_INFO_LEVELS;

typedef enum _FINDEX_SEARCH_OPS
{
  FindExSearchNameMatch = 0,
  FindExSearchLimitToDirectories = 1,
  FindExSearchLimitToDevices = 2,
  FindExSearchMaxSearchOp = 3,
} FINDEX_SEARCH_OPS, *PFINDEX_SEARCH_OPS;

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const struct _GUID* ExtensionGuid;
  /* 0x000c */ unsigned long Id;
  /* 0x0010 */ unsigned long Depth;
  /* 0x0014 */ unsigned long OutFlags;
} FINDFIRSTACTIVATIONCONTEXTSECTION, *PFINDFIRSTACTIVATIONCONTEXTSECTION; /* size: 0x0018 */

typedef enum _FIRMWARE_TYPE
{
  FirmwareTypeUnknown = 0,
  FirmwareTypeBios = 1,
  FirmwareTypeEfi = 2,
  FirmwareTypeMax = 3,
} FIRMWARE_TYPE, *PFIRMWARE_TYPE;

typedef struct _FIXED
{
  /* 0x0000 */ unsigned short fract;
  /* 0x0002 */ short value;
} FIXED, *PFIXED; /* size: 0x0004 */

typedef struct _FLAGGED_BYTE_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned char abData[1];
  /* 0x0009 */ char __PADDING__[3];
} FLAGGED_BYTE_BLOB, *PFLAGGED_BYTE_BLOB; /* size: 0x000c */

typedef struct _FLAGGED_WORD_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned short asData[1];
  /* 0x000a */ char __PADDING__[2];
} FLAGGED_WORD_BLOB, *PFLAGGED_WORD_BLOB; /* size: 0x000c */

typedef struct _FLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct tagSTGMEDIUM Stgmed;
} FLAG_STGMEDIUM, *PFLAG_STGMEDIUM; /* size: 0x0014 */

typedef struct _FLOAT128
{
  /* 0x0000 */ __int64 LowPart;
  /* 0x0008 */ __int64 HighPart;
} FLOAT128, *PFLOAT128; /* size: 0x0010 */

typedef struct _FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} FLOATING_SAVE_AREA, *PFLOATING_SAVE_AREA; /* size: 0x0070 */

struct _FLS_CALLBACK_INFO;

typedef struct _FLS_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0008 */ void* Slots[128];
} FLS_DATA, *PFLS_DATA; /* size: 0x0208 */

typedef struct _FNSAVE_FORMAT
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
} FNSAVE_FORMAT, *PFNSAVE_FORMAT; /* size: 0x006c */

typedef struct _FOCUS_EVENT_RECORD
{
  /* 0x0000 */ int bSetFocus;
} FOCUS_EVENT_RECORD, *PFOCUS_EVENT_RECORD; /* size: 0x0004 */

typedef union _FOUR_PART_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version64;
    struct
    {
      /* 0x0000 */ unsigned long BuildAndRevision;
      /* 0x0004 */ unsigned long MajorAndMinor;
    } /* size: 0x0008 */ Version32;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    } /* size: 0x0008 */ Version16;
  }; /* size: 0x0008 */
} FOUR_PART_VERSION, *PFOUR_PART_VERSION; /* size: 0x0008 */

typedef struct _FPO_DATA
{
  /* 0x0000 */ unsigned long ulOffStart;
  /* 0x0004 */ unsigned long cbProcSize;
  /* 0x0008 */ unsigned long cdwLocals;
  /* 0x000c */ unsigned short cdwParams;
  struct /* bitfield */
  {
    /* 0x000e */ unsigned short cbProlog : 8; /* bit position: 0 */
    /* 0x000e */ unsigned short cbRegs : 3; /* bit position: 8 */
    /* 0x000e */ unsigned short fHasSEH : 1; /* bit position: 11 */
    /* 0x000e */ unsigned short fUseBP : 1; /* bit position: 12 */
    /* 0x000e */ unsigned short reserved : 1; /* bit position: 13 */
    /* 0x000e */ unsigned short cbFrame : 2; /* bit position: 14 */
  }; /* bitfield */
} FPO_DATA, *PFPO_DATA; /* size: 0x0010 */

typedef struct _FP_128
{
  /* 0x0000 */ unsigned long W[4];
} FP_128, *PFP_128; /* size: 0x0010 */

typedef struct _FP_32
{
  /* 0x0000 */ unsigned long W[1];
} FP_32, *PFP_32; /* size: 0x0004 */

typedef struct _FP_64
{
  /* 0x0000 */ unsigned long W[2];
} FP_64, *PFP_64; /* size: 0x0008 */

typedef struct _FP_80
{
  /* 0x0000 */ unsigned long W[3];
} FP_80, *PFP_80; /* size: 0x000c */

typedef enum _FP_IEEE_COMPARE_RESULT
{
  FpCompareEqual = 0,
  FpCompareGreater = 1,
  FpCompareLess = 2,
  FpCompareUnordered = 3,
} FP_IEEE_COMPARE_RESULT, *PFP_IEEE_COMPARE_RESULT;

typedef enum _FP_IEEE_OPERATION_CODE
{
  FpCodeUnspecified = 0,
  FpCodeAdd = 1,
  FpCodeSubtract = 2,
  FpCodeMultiply = 3,
  FpCodeDivide = 4,
  FpCodeSquareRoot = 5,
  FpCodeRemainder = 6,
  FpCodeCompare = 7,
  FpCodeConvert = 8,
  FpCodeRound = 9,
  FpCodeTruncate = 10,
  FpCodeFloor = 11,
  FpCodeCeil = 12,
  FpCodeAcos = 13,
  FpCodeAsin = 14,
  FpCodeAtan = 15,
  FpCodeAtan2 = 16,
  FpCodeCabs = 17,
  FpCodeCos = 18,
  FpCodeCosh = 19,
  FpCodeExp = 20,
  FpCodeFabs = 21,
  FpCodeFmod = 22,
  FpCodeFrexp = 23,
  FpCodeHypot = 24,
  FpCodeLdexp = 25,
  FpCodeLog = 26,
  FpCodeLog10 = 27,
  FpCodeModf = 28,
  FpCodePow = 29,
  FpCodeSin = 30,
  FpCodeSinh = 31,
  FpCodeTan = 32,
  FpCodeTanh = 33,
  FpCodeY0 = 34,
  FpCodeY1 = 35,
  FpCodeYn = 36,
} FP_IEEE_OPERATION_CODE, *PFP_IEEE_OPERATION_CODE;

typedef struct _FP_IEEE_RECORD
{
  /* 0x0000 */ struct _FP_IEEE_VALUE Operand1;
  /* 0x0018 */ struct _FP_IEEE_VALUE Operand2;
  /* 0x0030 */ struct _FP_IEEE_VALUE Result;
} FP_IEEE_RECORD, *PFP_IEEE_RECORD; /* size: 0x0048 */

typedef struct _FP_IEEE_VALUE
{
  union
  {
    union
    {
      /* 0x0000 */ short I16Value;
      /* 0x0000 */ unsigned short U16Value;
      /* 0x0000 */ long I32Value;
      /* 0x0000 */ unsigned long U32Value;
      /* 0x0000 */ void* StringValue;
      /* 0x0000 */ unsigned long CompareValue;
      /* 0x0000 */ struct _FP_32 Fp32Value;
      /* 0x0000 */ union _LARGE_INTEGER I64Value;
      /* 0x0000 */ union _ULARGE_INTEGER U64Value;
      /* 0x0000 */ struct _FP_64 Fp64Value;
      /* 0x0000 */ struct _FP_80 Fp80Value;
      /* 0x0000 */ struct _FP_128 Fp128Value;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Value;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long RoundingMode : 2; /* bit position: 0 */
      /* 0x0010 */ unsigned long Inexact : 1; /* bit position: 2 */
      /* 0x0010 */ unsigned long Underflow : 1; /* bit position: 3 */
      /* 0x0010 */ unsigned long Overflow : 1; /* bit position: 4 */
      /* 0x0010 */ unsigned long ZeroDivide : 1; /* bit position: 5 */
      /* 0x0010 */ unsigned long InvalidOperation : 1; /* bit position: 6 */
      /* 0x0010 */ unsigned long OperandValid : 1; /* bit position: 7 */
      /* 0x0010 */ unsigned long Format : 4; /* bit position: 8 */
      /* 0x0010 */ unsigned long Precision : 4; /* bit position: 12 */
      /* 0x0010 */ unsigned long Operation : 12; /* bit position: 16 */
      /* 0x0010 */ unsigned long Spare : 3; /* bit position: 28 */
      /* 0x0010 */ unsigned long HardwareException : 1; /* bit position: 31 */
    }; /* bitfield */
  } /* size: 0x0004 */ Control;
  /* 0x0014 */ long __PADDING__[1];
} FP_IEEE_VALUE, *PFP_IEEE_VALUE; /* size: 0x0018 */

typedef enum _FP__IEEE_FORMAT
{
  FpFormatFp32 = 0,
  FpFormatFp64 = 1,
  FpFormatFp80 = 2,
  FpFormatFp128 = 3,
  FpFormatI16 = 4,
  FpFormatI32 = 5,
  FpFormatI64 = 6,
  FpFormatU16 = 7,
  FpFormatU32 = 8,
  FpFormatU64 = 9,
  FpFormatCompare = 10,
  FpFormatString = 11,
} FP__IEEE_FORMAT, *PFP__IEEE_FORMAT;

typedef enum _FP__IEEE_ROUNDING_MODE
{
  FpRoundNearest = 0,
  FpRoundMinusInfinity = 1,
  FpRoundPlusInfinity = 2,
  FpRoundChopped = 3,
} FP__IEEE_ROUNDING_MODE, *PFP__IEEE_ROUNDING_MODE;

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  /* 0x0000 */ unsigned char First0x24BytesOfBootSector[36];
} FSCTL_QUERY_FAT_BPB_BUFFER, *PFSCTL_QUERY_FAT_BPB_BUFFER; /* size: 0x0024 */

typedef enum _FSINFOCLASS
{
  FileFsVolumeInformation = 1,
  FileFsLabelInformation = 2,
  FileFsSizeInformation = 3,
  FileFsDeviceInformation = 4,
  FileFsAttributeInformation = 5,
  FileFsControlInformation = 6,
  FileFsFullSizeInformation = 7,
  FileFsObjectIdInformation = 8,
  FileFsDriverPathInformation = 9,
  FileFsVolumeFlagsInformation = 10,
  FileFsMaximumInformation = 11,
} FSINFOCLASS, *PFSINFOCLASS;

typedef struct _FULL_PTR_XLAT_TABLES
{
  /* 0x0000 */ void* RefIdToPointer;
  /* 0x0004 */ void* PointerToRefId;
  /* 0x0008 */ unsigned long NextRefId;
  /* 0x000c */ enum XLAT_SIDE XlatSide;
} FULL_PTR_XLAT_TABLES, *PFULL_PTR_XLAT_TABLES; /* size: 0x0010 */

typedef struct _FXSAVE_FORMAT
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned short TagWord;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned long ErrorSelector;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned long DataSelector;
  /* 0x0018 */ unsigned long MXCsr;
  /* 0x001c */ unsigned long MXCsrMask;
  /* 0x0020 */ unsigned char RegisterArea[128];
  /* 0x00a0 */ unsigned char Reserved3[128];
  /* 0x0120 */ unsigned char Reserved4[224];
  /* 0x0200 */ unsigned char Align16Byte[8];
} FXSAVE_FORMAT, *PFXSAVE_FORMAT; /* size: 0x0208 */

typedef struct _FX_SAVE_AREA
{
  union
  {
    union
    {
      /* 0x0000 */ struct _FNSAVE_FORMAT FnArea;
      /* 0x0000 */ struct _FXSAVE_FORMAT FxArea;
    }; /* size: 0x0208 */
  } /* size: 0x0208 */ U;
  /* 0x0208 */ unsigned long NpxSavedCpu;
  /* 0x020c */ unsigned long Cr0NpxState;
} FX_SAVE_AREA, *PFX_SAVE_AREA; /* size: 0x0210 */

typedef struct _GDI_NONREMOTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
} GDI_NONREMOTE, *PGDI_NONREMOTE; /* size: 0x0008 */

typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _DWORD_BLOB* hRemote;
  }; /* size: 0x0004 */
} GDI_NONREMOTE::__MIDL_IWinTypes_0002, *PGDI_NONREMOTE::__MIDL_IWinTypes_0002; /* size: 0x0004 */

typedef struct _GDI_OBJECT
{
  /* 0x0000 */ unsigned long ObjectType;
  /* 0x0004 */ union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
} GDI_OBJECT, *PGDI_OBJECT; /* size: 0x0008 */

typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002
{
  union
  {
    /* 0x0000 */ struct _userHBITMAP* hBitmap;
    /* 0x0000 */ struct _userHPALETTE* hPalette;
    /* 0x0000 */ struct _userHGLOBAL* hGeneric;
  }; /* size: 0x0004 */
} GDI_OBJECT::__MIDL_IAdviseSink_0002, *PGDI_OBJECT::__MIDL_IAdviseSink_0002; /* size: 0x0004 */

typedef struct _GDI_TEB_BATCH
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long HDC;
  /* 0x0008 */ unsigned long Buffer[310];
} GDI_TEB_BATCH, *PGDI_TEB_BATCH; /* size: 0x04e0 */

typedef struct _GENERATE_NAME_CONTEXT
{
  /* 0x0000 */ unsigned short Checksum;
  /* 0x0002 */ unsigned char ChecksumInserted;
  /* 0x0003 */ unsigned char NameLength;
  /* 0x0004 */ wchar_t NameBuffer[8];
  /* 0x0014 */ unsigned long ExtensionLength;
  /* 0x0018 */ wchar_t ExtensionBuffer[4];
  /* 0x0020 */ unsigned long LastIndexValue;
} GENERATE_NAME_CONTEXT, *PGENERATE_NAME_CONTEXT; /* size: 0x0024 */

typedef struct _GENERIC_BINDING_ROUTINE_PAIR
{
  /* 0x0000 */ void* pfnBind /* function */;
  /* 0x0004 */ void* pfnUnbind /* function */;
} GENERIC_BINDING_ROUTINE_PAIR, *PGENERIC_BINDING_ROUTINE_PAIR; /* size: 0x0008 */

typedef struct _GENERIC_MAPPING
{
  /* 0x0000 */ unsigned long GenericRead;
  /* 0x0004 */ unsigned long GenericWrite;
  /* 0x0008 */ unsigned long GenericExecute;
  /* 0x000c */ unsigned long GenericAll;
} GENERIC_MAPPING, *PGENERIC_MAPPING; /* size: 0x0010 */

typedef enum _GET_FILEEX_INFO_LEVELS
{
  GetFileExInfoStandard = 0,
  GetFileExMaxInfoLevel = 1,
} GET_FILEEX_INFO_LEVELS, *PGET_FILEEX_INFO_LEVELS;

typedef struct _GLOBAL_SHARED_CRITICAL_SECTION
{
  /* 0x0000 */ long LockCount;
  /* 0x0004 */ long RecursionCount;
  /* 0x0008 */ unsigned long OwningThread;
} GLOBAL_SHARED_CRITICAL_SECTION, *PGLOBAL_SHARED_CRITICAL_SECTION; /* size: 0x000c */

typedef struct _GLYPHMETRICS
{
  /* 0x0000 */ unsigned int gmBlackBoxX;
  /* 0x0004 */ unsigned int gmBlackBoxY;
  /* 0x0008 */ struct tagPOINT gmptGlyphOrigin;
  /* 0x0010 */ short gmCellIncX;
  /* 0x0012 */ short gmCellIncY;
} GLYPHMETRICS, *PGLYPHMETRICS; /* size: 0x0014 */

typedef struct _GLYPHMETRICSFLOAT
{
  /* 0x0000 */ float gmfBlackBoxX;
  /* 0x0004 */ float gmfBlackBoxY;
  /* 0x0008 */ struct _POINTFLOAT gmfptGlyphOrigin;
  /* 0x0010 */ float gmfCellIncX;
  /* 0x0014 */ float gmfCellIncY;
} GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT; /* size: 0x0018 */

typedef struct _GRADIENT_RECT
{
  /* 0x0000 */ unsigned long UpperLeft;
  /* 0x0004 */ unsigned long LowerRight;
} GRADIENT_RECT, *PGRADIENT_RECT; /* size: 0x0008 */

typedef struct _GRADIENT_TRIANGLE
{
  /* 0x0000 */ unsigned long Vertex1;
  /* 0x0004 */ unsigned long Vertex2;
  /* 0x0008 */ unsigned long Vertex3;
} GRADIENT_TRIANGLE, *PGRADIENT_TRIANGLE; /* size: 0x000c */

typedef struct _GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} GUID, *PGUID; /* size: 0x0010 */

typedef struct _HARDERROR_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0018 */ long Status;
  /* 0x0020 */ union _LARGE_INTEGER ErrorTime;
  /* 0x0028 */ unsigned long ValidResponseOptions;
  /* 0x002c */ unsigned long Response;
  /* 0x0030 */ unsigned long NumberOfParameters;
  /* 0x0034 */ unsigned long UnicodeStringParameterMask;
  /* 0x0038 */ unsigned long Parameters[5];
  /* 0x004c */ long __PADDING__[1];
} HARDERROR_MSG, *PHARDERROR_MSG; /* size: 0x0050 */

typedef enum _HARDERROR_RESPONSE
{
  ResponseReturnToCaller = 0,
  ResponseNotHandled = 1,
  ResponseAbort = 2,
  ResponseCancel = 3,
  ResponseIgnore = 4,
  ResponseNo = 5,
  ResponseOk = 6,
  ResponseRetry = 7,
  ResponseYes = 8,
  ResponseTryAgain = 9,
  ResponseContinue = 10,
} HARDERROR_RESPONSE, *PHARDERROR_RESPONSE;

typedef enum _HARDERROR_RESPONSE_OPTION
{
  OptionAbortRetryIgnore = 0,
  OptionOk = 1,
  OptionOkCancel = 2,
  OptionRetryCancel = 3,
  OptionYesNo = 4,
  OptionYesNoCancel = 5,
  OptionShutdownSystem = 6,
  OptionOkNoWait = 7,
  OptionCancelTryContinue = 8,
} HARDERROR_RESPONSE_OPTION, *PHARDERROR_RESPONSE_OPTION;

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION
{
  /* 0x0000 */ unsigned char Next;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long Size;
} HEAP_BLOCK_EXTRA_INFORMATION, *PHEAP_BLOCK_EXTRA_INFORMATION; /* size: 0x000c */

typedef struct _HEAP_BLOCK_INFORMATION
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long DataSize;
  /* 0x000c */ unsigned long OverheadSize;
  /* 0x0010 */ unsigned long NextBlockInformationOffset;
} HEAP_BLOCK_INFORMATION, *PHEAP_BLOCK_INFORMATION; /* size: 0x0014 */

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION
{
  /* 0x0000 */ unsigned long Settable;
  /* 0x0004 */ unsigned short TagIndex;
  /* 0x0006 */ unsigned short AllocatorBackTraceIndex;
} HEAP_BLOCK_SETTABLE_INFORMATION, *PHEAP_BLOCK_SETTABLE_INFORMATION; /* size: 0x0008 */

typedef struct _HEAP_EXTENDED_INFORMATION
{
  /* 0x0000 */ void* Process;
  /* 0x0004 */ unsigned long Heap;
  /* 0x0008 */ unsigned long Level;
  /* 0x000c */ void* CallbackRoutine /* function */;
  /* 0x0010 */ void* CallbackContext;
  union
  {
    /* 0x0014 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0014 */ struct _HEAP_INFORMATION HeapInformation;
  }; /* size: 0x0018 */
} HEAP_EXTENDED_INFORMATION, *PHEAP_EXTENDED_INFORMATION; /* size: 0x002c */

typedef struct _HEAP_INFORMATION
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Mode;
  /* 0x0008 */ unsigned long ReserveSize;
  /* 0x000c */ unsigned long CommitSize;
  /* 0x0010 */ unsigned long FirstRegionInformationOffset;
  /* 0x0014 */ unsigned long NextHeapInformationOffset;
} HEAP_INFORMATION, *PHEAP_INFORMATION; /* size: 0x0018 */

typedef enum _HEAP_INFORMATION_CLASS
{
  HeapCompatibilityInformation = 0,
  HeapEnableTerminationOnCorruption = 1,
  HeapExtendedInformation = 2,
  HeapDetailedFailureInformation = -2147483647,
  HeapSetDebuggingInformation = -2147483646,
} HEAP_INFORMATION_CLASS, *PHEAP_INFORMATION_CLASS;

typedef struct _HEAP_INFORMATION_ITEM
{
  /* 0x0000 */ unsigned long Level;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0008 */ struct _HEAP_INFORMATION HeapInformation;
    /* 0x0008 */ struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    /* 0x0008 */ struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    /* 0x0008 */ struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    /* 0x0008 */ struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    struct
    {
      /* 0x0008 */ unsigned long DynamicStart;
      /* 0x000c */ long __PADDING__[15];
    }; /* size: 0x0040 */
  }; /* size: 0x0040 */
} HEAP_INFORMATION_ITEM, *PHEAP_INFORMATION_ITEM; /* size: 0x0048 */

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long HeapIndex;
  /* 0x000c */ unsigned long LastHeapIndex;
  /* 0x0010 */ unsigned long BaseAddress;
  /* 0x0014 */ unsigned long ReserveSize;
  /* 0x0018 */ unsigned long CommitSize;
  /* 0x001c */ unsigned long SegmentCount;
  /* 0x0020 */ unsigned long LargeUCRMemory;
  /* 0x0024 */ unsigned long UCRLength;
  /* 0x0028 */ unsigned long FreeSpace;
  /* 0x002c */ unsigned long FreeListLength;
  /* 0x0030 */ unsigned long Contention;
  /* 0x0034 */ unsigned long VirtualBlocks;
  /* 0x0038 */ unsigned long CommitRate;
  /* 0x003c */ unsigned long DecommitRate;
} HEAP_PERFORMANCE_COUNTERS_INFORMATION, *PHEAP_PERFORMANCE_COUNTERS_INFORMATION; /* size: 0x0040 */

typedef struct _HEAP_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned long Protection;
  /* 0x0010 */ unsigned long FirstBlockInformationOffset;
  /* 0x0014 */ unsigned long NextRangeInformationOffset;
} HEAP_RANGE_INFORMATION, *PHEAP_RANGE_INFORMATION; /* size: 0x0018 */

typedef struct _HEAP_REGION_INFORMATION
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long ReserveSize;
  /* 0x0008 */ unsigned long CommitSize;
  /* 0x000c */ unsigned long FirstRangeInformationOffset;
  /* 0x0010 */ unsigned long NextRegionInformationOffset;
} HEAP_REGION_INFORMATION, *PHEAP_REGION_INFORMATION; /* size: 0x0014 */

typedef struct _HMAC_Info
{
  /* 0x0000 */ unsigned int HashAlgid;
  /* 0x0004 */ unsigned char* pbInnerString;
  /* 0x0008 */ unsigned long cbInnerString;
  /* 0x000c */ unsigned char* pbOuterString;
  /* 0x0010 */ unsigned long cbOuterString;
} HMAC_Info, *PHMAC_Info; /* size: 0x0014 */

struct _HMAPPER;

typedef struct _HOSTNAMES
{
  /* 0x0000 */ unsigned short clientNameOffset;
  /* 0x0002 */ unsigned short documentNameOffset;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} HOSTNAMES, *PHOSTNAMES; /* size: 0x0006 */

typedef struct _HOTPATCH_HOOK_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 TargetAddress;
  /* 0x0008 */ unsigned __int64 MappedAddress;
  /* 0x0010 */ unsigned long CodeOffset;
  /* 0x0014 */ unsigned long CodeSize;
  /* 0x0018 */ unsigned long OrigCodeOffset;
  /* 0x001c */ unsigned long ValidationOffset;
  /* 0x0020 */ unsigned long ValidationSize;
  /* 0x0024 */ long __PADDING__[1];
} HOTPATCH_HOOK_DESCRIPTOR, *PHOTPATCH_HOOK_DESCRIPTOR; /* size: 0x0028 */

typedef struct _HTTPSPolicyCallbackData
{
  union
  {
    /* 0x0000 */ unsigned long cbStruct;
    /* 0x0000 */ unsigned long cbSize;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwAuthType;
  /* 0x0008 */ unsigned long fdwChecks;
  /* 0x000c */ wchar_t* pwszServerName;
} HTTPSPolicyCallbackData, *PHTTPSPolicyCallbackData; /* size: 0x0010 */

typedef struct _HYPER_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ __int64* pData;
} HYPER_SIZEDARR, *PHYPER_SIZEDARR; /* size: 0x0008 */

typedef struct _ICONINFO
{
  /* 0x0000 */ int fIcon;
  /* 0x0004 */ unsigned long xHotspot;
  /* 0x0008 */ unsigned long yHotspot;
  /* 0x000c */ struct HBITMAP__* hbmMask;
  /* 0x0010 */ struct HBITMAP__* hbmColor;
} ICONINFO, *PICONINFO; /* size: 0x0014 */

typedef struct _ICONINFOEXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0014 */ struct HBITMAP__* hbmColor;
  /* 0x0018 */ unsigned short wResID;
  /* 0x001a */ char szModName[260];
  /* 0x011e */ char szResName[260];
  /* 0x0222 */ char __PADDING__[2];
} ICONINFOEXA, *PICONINFOEXA; /* size: 0x0224 */

typedef struct _ICONINFOEXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0014 */ struct HBITMAP__* hbmColor;
  /* 0x0018 */ unsigned short wResID;
  /* 0x001a */ wchar_t szModName[260];
  /* 0x0222 */ wchar_t szResName[260];
  /* 0x042a */ char __PADDING__[2];
} ICONINFOEXW, *PICONINFOEXW; /* size: 0x042c */

typedef enum _IDL_CS_CONVERT
{
  IDL_CS_NO_CONVERT = 0,
  IDL_CS_IN_PLACE_CONVERT = 1,
  IDL_CS_NEW_BUFFER_CONVERT = 2,
} IDL_CS_CONVERT, *PIDL_CS_CONVERT;

typedef struct _IMAGEHLP_CBA_EVENT
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ char* desc;
  /* 0x000c */ void* object;
} IMAGEHLP_CBA_EVENT, *PIMAGEHLP_CBA_EVENT; /* size: 0x0010 */

typedef struct _IMAGEHLP_CBA_EVENTW
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ const wchar_t* desc;
  /* 0x000c */ void* object;
} IMAGEHLP_CBA_EVENTW, *PIMAGEHLP_CBA_EVENTW; /* size: 0x0010 */

typedef struct _IMAGEHLP_CBA_READ_MEMORY
{
  /* 0x0000 */ unsigned __int64 addr;
  /* 0x0008 */ void* buf;
  /* 0x000c */ unsigned long bytes;
  /* 0x0010 */ unsigned long* bytesread;
  /* 0x0014 */ long __PADDING__[1];
} IMAGEHLP_CBA_READ_MEMORY, *PIMAGEHLP_CBA_READ_MEMORY; /* size: 0x0018 */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long BaseOfImage;
  /* 0x0008 */ unsigned long CheckSum;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ char FileName[260];
  /* 0x0114 */ unsigned char Reparse;
  /* 0x0118 */ void* hFile;
} IMAGEHLP_DEFERRED_SYMBOL_LOAD, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD; /* size: 0x011c */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ char FileName[260];
  /* 0x011c */ unsigned char Reparse;
  /* 0x0120 */ void* hFile;
  /* 0x0124 */ unsigned long Flags;
} IMAGEHLP_DEFERRED_SYMBOL_LOAD64, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD64; /* size: 0x0128 */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ wchar_t FileName[261];
  /* 0x0222 */ unsigned char Reparse;
  /* 0x0224 */ void* hFile;
  /* 0x0228 */ unsigned long Flags;
  /* 0x022c */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOADW64, *PIMAGEHLP_DEFERRED_SYMBOL_LOADW64; /* size: 0x0230 */

typedef struct _IMAGEHLP_DUPLICATE_SYMBOL
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long NumberOfDups;
  /* 0x0008 */ struct _IMAGEHLP_SYMBOL* Symbol;
  /* 0x000c */ unsigned long SelectedSymbol;
} IMAGEHLP_DUPLICATE_SYMBOL, *PIMAGEHLP_DUPLICATE_SYMBOL; /* size: 0x0010 */

typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long NumberOfDups;
  /* 0x0008 */ struct _IMAGEHLP_SYMBOL64* Symbol;
  /* 0x000c */ unsigned long SelectedSymbol;
} IMAGEHLP_DUPLICATE_SYMBOL64, *PIMAGEHLP_DUPLICATE_SYMBOL64; /* size: 0x0010 */

typedef struct _IMAGEHLP_GET_TYPE_INFO_PARAMS
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NumIds;
  /* 0x000c */ unsigned long* TypeIds;
  /* 0x0010 */ unsigned __int64 TagFilter;
  /* 0x0018 */ unsigned long NumReqs;
  /* 0x001c */ enum _IMAGEHLP_SYMBOL_TYPE_INFO* ReqKinds;
  /* 0x0020 */ unsigned long* ReqOffsets;
  /* 0x0024 */ unsigned long* ReqSizes;
  /* 0x0028 */ unsigned long ReqStride;
  /* 0x002c */ unsigned long BufferSize;
  /* 0x0030 */ void* Buffer;
  /* 0x0034 */ unsigned long EntriesMatched;
  /* 0x0038 */ unsigned long EntriesFilled;
  /* 0x0040 */ unsigned __int64 TagsFound;
  /* 0x0048 */ unsigned __int64 AllReqsValid;
  /* 0x0050 */ unsigned long NumReqsValid;
  /* 0x0054 */ unsigned __int64* ReqsValid;
} IMAGEHLP_GET_TYPE_INFO_PARAMS, *PIMAGEHLP_GET_TYPE_INFO_PARAMS; /* size: 0x0058 */

typedef struct _IMAGEHLP_LINE
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ void* Key;
  /* 0x0008 */ unsigned long LineNumber;
  /* 0x000c */ char* FileName;
  /* 0x0010 */ unsigned long Address;
} IMAGEHLP_LINE, *PIMAGEHLP_LINE; /* size: 0x0014 */

typedef struct _IMAGEHLP_LINE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ void* Key;
  /* 0x0008 */ unsigned long LineNumber;
  /* 0x000c */ char* FileName;
  /* 0x0010 */ unsigned __int64 Address;
} IMAGEHLP_LINE64, *PIMAGEHLP_LINE64; /* size: 0x0018 */

typedef struct _IMAGEHLP_LINEW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ void* Key;
  /* 0x0008 */ unsigned long LineNumber;
  /* 0x000c */ char* FileName;
  /* 0x0010 */ unsigned __int64 Address;
} IMAGEHLP_LINEW, *PIMAGEHLP_LINEW; /* size: 0x0018 */

typedef struct _IMAGEHLP_LINEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ void* Key;
  /* 0x0008 */ unsigned long LineNumber;
  /* 0x000c */ wchar_t* FileName;
  /* 0x0010 */ unsigned __int64 Address;
} IMAGEHLP_LINEW64, *PIMAGEHLP_LINEW64; /* size: 0x0018 */

typedef struct _IMAGEHLP_MODULE
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long BaseOfImage;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long NumSyms;
  /* 0x0018 */ enum SYM_TYPE SymType;
  /* 0x001c */ char ModuleName[32];
  /* 0x003c */ char ImageName[256];
  /* 0x013c */ char LoadedImageName[256];
} IMAGEHLP_MODULE, *PIMAGEHLP_MODULE; /* size: 0x023c */

typedef struct _IMAGEHLP_MODULE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ char ModuleName[32];
  /* 0x0044 */ char ImageName[256];
  /* 0x0144 */ char LoadedImageName[256];
  /* 0x0244 */ char LoadedPdbName[256];
  /* 0x0344 */ unsigned long CVSig;
  /* 0x0348 */ char CVData[780];
  /* 0x0654 */ unsigned long PdbSig;
  /* 0x0658 */ struct _GUID PdbSig70;
  /* 0x0668 */ unsigned long PdbAge;
  /* 0x066c */ int PdbUnmatched;
  /* 0x0670 */ int DbgUnmatched;
  /* 0x0674 */ int LineNumbers;
  /* 0x0678 */ int GlobalSymbols;
  /* 0x067c */ int TypeInfo;
  /* 0x0680 */ int SourceIndexed;
  /* 0x0684 */ int Publics;
} IMAGEHLP_MODULE64, *PIMAGEHLP_MODULE64; /* size: 0x0688 */

typedef struct _IMAGEHLP_MODULEW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long BaseOfImage;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long NumSyms;
  /* 0x0018 */ enum SYM_TYPE SymType;
  /* 0x001c */ wchar_t ModuleName[32];
  /* 0x005c */ wchar_t ImageName[256];
  /* 0x025c */ wchar_t LoadedImageName[256];
} IMAGEHLP_MODULEW, *PIMAGEHLP_MODULEW; /* size: 0x045c */

typedef struct _IMAGEHLP_MODULEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ wchar_t ModuleName[32];
  /* 0x0064 */ wchar_t ImageName[256];
  /* 0x0264 */ wchar_t LoadedImageName[256];
  /* 0x0464 */ wchar_t LoadedPdbName[256];
  /* 0x0664 */ unsigned long CVSig;
  /* 0x0668 */ wchar_t CVData[780];
  /* 0x0c80 */ unsigned long PdbSig;
  /* 0x0c84 */ struct _GUID PdbSig70;
  /* 0x0c94 */ unsigned long PdbAge;
  /* 0x0c98 */ int PdbUnmatched;
  /* 0x0c9c */ int DbgUnmatched;
  /* 0x0ca0 */ int LineNumbers;
  /* 0x0ca4 */ int GlobalSymbols;
  /* 0x0ca8 */ int TypeInfo;
  /* 0x0cac */ int SourceIndexed;
  /* 0x0cb0 */ int Publics;
  /* 0x0cb4 */ long __PADDING__[1];
} IMAGEHLP_MODULEW64, *PIMAGEHLP_MODULEW64; /* size: 0x0cb8 */

typedef struct _IMAGEHLP_STACK_FRAME
{
  /* 0x0000 */ unsigned __int64 InstructionOffset;
  /* 0x0008 */ unsigned __int64 ReturnOffset;
  /* 0x0010 */ unsigned __int64 FrameOffset;
  /* 0x0018 */ unsigned __int64 StackOffset;
  /* 0x0020 */ unsigned __int64 BackingStoreOffset;
  /* 0x0028 */ unsigned __int64 FuncTableEntry;
  /* 0x0030 */ unsigned __int64 Params[4];
  /* 0x0050 */ unsigned __int64 Reserved[5];
  /* 0x0078 */ int Virtual;
  /* 0x007c */ unsigned long Reserved2;
} IMAGEHLP_STACK_FRAME, *PIMAGEHLP_STACK_FRAME; /* size: 0x0080 */

typedef enum _IMAGEHLP_STATUS_REASON
{
  BindOutOfMemory = 0,
  BindRvaToVaFailed = 1,
  BindNoRoomInImage = 2,
  BindImportModuleFailed = 3,
  BindImportProcedureFailed = 4,
  BindImportModule = 5,
  BindImportProcedure = 6,
  BindForwarder = 7,
  BindForwarderNOT = 8,
  BindImageModified = 9,
  BindExpandFileHeaders = 10,
  BindImageComplete = 11,
  BindMismatchedSymbols = 12,
  BindSymbolsNotUpdated = 13,
  BindImportProcedure32 = 14,
  BindImportProcedure64 = 15,
  BindForwarder32 = 16,
  BindForwarder64 = 17,
  BindForwarderNOT32 = 18,
  BindForwarderNOT64 = 19,
} IMAGEHLP_STATUS_REASON, *PIMAGEHLP_STATUS_REASON;

typedef struct _IMAGEHLP_SYMBOL
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long Address;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long MaxNameLength;
  /* 0x0014 */ char Name[1];
  /* 0x0015 */ char __PADDING__[3];
} IMAGEHLP_SYMBOL, *PIMAGEHLP_SYMBOL; /* size: 0x0018 */

typedef struct _IMAGEHLP_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ char Name[1];
  /* 0x001d */ char __PADDING__[3];
} IMAGEHLP_SYMBOL64, *PIMAGEHLP_SYMBOL64; /* size: 0x0020 */

typedef struct _IMAGEHLP_SYMBOL64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOL64 sym;
  /* 0x0020 */ char name[2001];
  /* 0x07f1 */ char __PADDING__[7];
} IMAGEHLP_SYMBOL64_PACKAGE, *PIMAGEHLP_SYMBOL64_PACKAGE; /* size: 0x07f8 */

typedef struct _IMAGEHLP_SYMBOLW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long Address;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long MaxNameLength;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} IMAGEHLP_SYMBOLW, *PIMAGEHLP_SYMBOLW; /* size: 0x0018 */

typedef struct _IMAGEHLP_SYMBOLW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ wchar_t Name[1];
  /* 0x001e */ char __PADDING__[2];
} IMAGEHLP_SYMBOLW64, *PIMAGEHLP_SYMBOLW64; /* size: 0x0020 */

typedef struct _IMAGEHLP_SYMBOLW64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOLW64 sym;
  /* 0x0020 */ wchar_t name[2001];
  /* 0x0fc2 */ char __PADDING__[6];
} IMAGEHLP_SYMBOLW64_PACKAGE, *PIMAGEHLP_SYMBOLW64_PACKAGE; /* size: 0x0fc8 */

typedef struct _IMAGEHLP_SYMBOLW_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOLW sym;
  /* 0x0018 */ wchar_t name[2001];
  /* 0x0fba */ char __PADDING__[2];
} IMAGEHLP_SYMBOLW_PACKAGE, *PIMAGEHLP_SYMBOLW_PACKAGE; /* size: 0x0fbc */

typedef struct _IMAGEHLP_SYMBOL_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOL sym;
  /* 0x0018 */ char name[2001];
  /* 0x07e9 */ char __PADDING__[3];
} IMAGEHLP_SYMBOL_PACKAGE, *PIMAGEHLP_SYMBOL_PACKAGE; /* size: 0x07ec */

typedef struct _IMAGEHLP_SYMBOL_SRC
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ unsigned long type;
  /* 0x0008 */ char file[260];
} IMAGEHLP_SYMBOL_SRC, *PIMAGEHLP_SYMBOL_SRC; /* size: 0x010c */

typedef enum _IMAGEHLP_SYMBOL_TYPE_INFO
{
  TI_GET_SYMTAG = 0,
  TI_GET_SYMNAME = 1,
  TI_GET_LENGTH = 2,
  TI_GET_TYPE = 3,
  TI_GET_TYPEID = 4,
  TI_GET_BASETYPE = 5,
  TI_GET_ARRAYINDEXTYPEID = 6,
  TI_FINDCHILDREN = 7,
  TI_GET_DATAKIND = 8,
  TI_GET_ADDRESSOFFSET = 9,
  TI_GET_OFFSET = 10,
  TI_GET_VALUE = 11,
  TI_GET_COUNT = 12,
  TI_GET_CHILDRENCOUNT = 13,
  TI_GET_BITPOSITION = 14,
  TI_GET_VIRTUALBASECLASS = 15,
  TI_GET_VIRTUALTABLESHAPEID = 16,
  TI_GET_VIRTUALBASEPOINTEROFFSET = 17,
  TI_GET_CLASSPARENTID = 18,
  TI_GET_NESTED = 19,
  TI_GET_SYMINDEX = 20,
  TI_GET_LEXICALPARENT = 21,
  TI_GET_ADDRESS = 22,
  TI_GET_THISADJUST = 23,
  TI_GET_UDTKIND = 24,
  TI_IS_EQUIV_TO = 25,
  TI_GET_CALLING_CONVENTION = 26,
  TI_IS_CLOSE_EQUIV_TO = 27,
  TI_GTIEX_REQS_VALID = 28,
  TI_GET_VIRTUALBASEOFFSET = 29,
  TI_GET_VIRTUALBASEDISPINDEX = 30,
  TI_GET_IS_REFERENCE = 31,
  IMAGEHLP_SYMBOL_TYPE_INFO_MAX = 32,
} IMAGEHLP_SYMBOL_TYPE_INFO, *PIMAGEHLP_SYMBOL_TYPE_INFO;

typedef struct _IMAGEINFO
{
  /* 0x0000 */ struct HBITMAP__* hbmImage;
  /* 0x0004 */ struct HBITMAP__* hbmMask;
  /* 0x0008 */ int Unused1;
  /* 0x000c */ int Unused2;
  /* 0x0010 */ struct tagRECT rcImage;
} IMAGEINFO, *PIMAGEINFO; /* size: 0x0020 */

struct _IMAGELIST;

typedef struct _IMAGELISTDRAWPARAMS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _IMAGELIST* himl;
  /* 0x0008 */ int i;
  /* 0x000c */ struct HDC__* hdcDst;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ int cx;
  /* 0x001c */ int cy;
  /* 0x0020 */ int xBitmap;
  /* 0x0024 */ int yBitmap;
  /* 0x0028 */ unsigned long rgbBk;
  /* 0x002c */ unsigned long rgbFg;
  /* 0x0030 */ unsigned int fStyle;
  /* 0x0034 */ unsigned long dwRop;
  /* 0x0038 */ unsigned long fState;
  /* 0x003c */ unsigned long Frame;
  /* 0x0040 */ unsigned long crEffect;
} IMAGELISTDRAWPARAMS, *PIMAGELISTDRAWPARAMS; /* size: 0x0044 */

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned __int64 BeginAddress;
  /* 0x0008 */ unsigned __int64 EndAddress;
  /* 0x0010 */ unsigned __int64 ExceptionHandler;
  /* 0x0018 */ unsigned __int64 HandlerData;
  /* 0x0020 */ unsigned __int64 PrologEndAddress;
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY; /* size: 0x0028 */

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long ExceptionHandler;
  /* 0x000c */ unsigned long HandlerData;
  /* 0x0010 */ unsigned long PrologEndAddress;
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY; /* size: 0x0014 */

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  /* 0x0000 */ unsigned char Name[16];
  /* 0x0010 */ unsigned char Date[12];
  /* 0x001c */ unsigned char UserID[6];
  /* 0x0022 */ unsigned char GroupID[6];
  /* 0x0028 */ unsigned char Mode[8];
  /* 0x0030 */ unsigned char Size[10];
  /* 0x003a */ unsigned char EndHeader[2];
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER; /* size: 0x003c */

typedef union _IMAGE_AUX_SYMBOL
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long TagIndex;
      union
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Linenumber;
            /* 0x0006 */ unsigned short Size;
          } /* size: 0x0004 */ LnSz;
          /* 0x0004 */ unsigned long TotalSize;
        }; /* size: 0x0004 */
      } /* size: 0x0004 */ Misc;
      union
      {
        union
        {
          struct
          {
            /* 0x0008 */ unsigned long PointerToLinenumber;
            /* 0x000c */ unsigned long PointerToNextFunction;
          } /* size: 0x0008 */ Function;
          struct
          {
            /* 0x0008 */ unsigned short Dimension[4];
          } /* size: 0x0008 */ Array;
        }; /* size: 0x0008 */
      } /* size: 0x0008 */ FcnAry;
      /* 0x0010 */ unsigned short TvIndex;
    } /* size: 0x0012 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[18];
    } /* size: 0x0012 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ char __PADDING__[1];
    } /* size: 0x0010 */ Section;
  }; /* size: 0x0012 */
} IMAGE_AUX_SYMBOL, *PIMAGE_AUX_SYMBOL; /* size: 0x0012 */

typedef struct _IMAGE_BASE_RELOCATION
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long SizeOfBlock;
} IMAGE_BASE_RELOCATION, *PIMAGE_BASE_RELOCATION; /* size: 0x0008 */

typedef struct _IMAGE_BOUND_FORWARDER_REF
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short Reserved;
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF; /* size: 0x0008 */

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short NumberOfModuleForwarderRefs;
} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR; /* size: 0x0008 */

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long FuncStart;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long PrologLen : 8; /* bit position: 0 */
    /* 0x0004 */ unsigned long FuncLen : 22; /* bit position: 8 */
    /* 0x0004 */ unsigned long ThirtyTwoBit : 1; /* bit position: 30 */
    /* 0x0004 */ unsigned long ExceptionFlag : 1; /* bit position: 31 */
  }; /* bitfield */
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

typedef struct _IMAGE_COFF_SYMBOLS_HEADER
{
  /* 0x0000 */ unsigned long NumberOfSymbols;
  /* 0x0004 */ unsigned long LvaToFirstSymbol;
  /* 0x0008 */ unsigned long NumberOfLinenumbers;
  /* 0x000c */ unsigned long LvaToFirstLinenumber;
  /* 0x0010 */ unsigned long RvaToFirstByteOfCode;
  /* 0x0014 */ unsigned long RvaToLastByteOfCode;
  /* 0x0018 */ unsigned long RvaToFirstByteOfData;
  /* 0x001c */ unsigned long RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER; /* size: 0x0020 */

typedef struct _IMAGE_DATA_DIRECTORY
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY; /* size: 0x0008 */

typedef struct _IMAGE_DEBUG_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long SizeOfData;
  /* 0x0014 */ unsigned long AddressOfRawData;
  /* 0x0018 */ unsigned long PointerToRawData;
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY; /* size: 0x001c */

typedef struct _IMAGE_DEBUG_INFORMATION
{
  /* 0x0000 */ struct _LIST_ENTRY List;
  /* 0x0008 */ unsigned long ReservedSize;
  /* 0x000c */ void* ReservedMappedBase;
  /* 0x0010 */ unsigned short ReservedMachine;
  /* 0x0012 */ unsigned short ReservedCharacteristics;
  /* 0x0014 */ unsigned long ReservedCheckSum;
  /* 0x0018 */ unsigned long ImageBase;
  /* 0x001c */ unsigned long SizeOfImage;
  /* 0x0020 */ unsigned long ReservedNumberOfSections;
  /* 0x0024 */ struct _IMAGE_SECTION_HEADER* ReservedSections;
  /* 0x0028 */ unsigned long ReservedExportedNamesSize;
  /* 0x002c */ char* ReservedExportedNames;
  /* 0x0030 */ unsigned long ReservedNumberOfFunctionTableEntries;
  /* 0x0034 */ struct _IMAGE_FUNCTION_ENTRY* ReservedFunctionTableEntries;
  /* 0x0038 */ unsigned long ReservedLowestFunctionStartingAddress;
  /* 0x003c */ unsigned long ReservedHighestFunctionEndingAddress;
  /* 0x0040 */ unsigned long ReservedNumberOfFpoTableEntries;
  /* 0x0044 */ struct _FPO_DATA* ReservedFpoTableEntries;
  /* 0x0048 */ unsigned long SizeOfCoffSymbols;
  /* 0x004c */ struct _IMAGE_COFF_SYMBOLS_HEADER* CoffSymbols;
  /* 0x0050 */ unsigned long ReservedSizeOfCodeViewSymbols;
  /* 0x0054 */ void* ReservedCodeViewSymbols;
  /* 0x0058 */ char* ImageFilePath;
  /* 0x005c */ char* ImageFileName;
  /* 0x0060 */ char* ReservedDebugFilePath;
  /* 0x0064 */ unsigned long ReservedTimeDateStamp;
  /* 0x0068 */ int ReservedRomImage;
  /* 0x006c */ struct _IMAGE_DEBUG_DIRECTORY* ReservedDebugDirectory;
  /* 0x0070 */ unsigned long ReservedNumberOfDebugDirectories;
  /* 0x0074 */ unsigned long ReservedOriginalFunctionTableBaseAddress;
  /* 0x0078 */ unsigned long Reserved[2];
} IMAGE_DEBUG_INFORMATION, *PIMAGE_DEBUG_INFORMATION; /* size: 0x0080 */

typedef struct _IMAGE_DEBUG_MISC
{
  /* 0x0000 */ unsigned long DataType;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned char Unicode;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC; /* size: 0x0010 */

typedef struct _IMAGE_DOS_HEADER
{
  /* 0x0000 */ unsigned short e_magic;
  /* 0x0002 */ unsigned short e_cblp;
  /* 0x0004 */ unsigned short e_cp;
  /* 0x0006 */ unsigned short e_crlc;
  /* 0x0008 */ unsigned short e_cparhdr;
  /* 0x000a */ unsigned short e_minalloc;
  /* 0x000c */ unsigned short e_maxalloc;
  /* 0x000e */ unsigned short e_ss;
  /* 0x0010 */ unsigned short e_sp;
  /* 0x0012 */ unsigned short e_csum;
  /* 0x0014 */ unsigned short e_ip;
  /* 0x0016 */ unsigned short e_cs;
  /* 0x0018 */ unsigned short e_lfarlc;
  /* 0x001a */ unsigned short e_ovno;
  /* 0x001c */ unsigned short e_res[4];
  /* 0x0024 */ unsigned short e_oemid;
  /* 0x0026 */ unsigned short e_oeminfo;
  /* 0x0028 */ unsigned short e_res2[10];
  /* 0x003c */ long e_lfanew;
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER; /* size: 0x0040 */

typedef struct _IMAGE_EXPORT_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long Base;
  /* 0x0014 */ unsigned long NumberOfFunctions;
  /* 0x0018 */ unsigned long NumberOfNames;
  /* 0x001c */ unsigned long AddressOfFunctions;
  /* 0x0020 */ unsigned long AddressOfNames;
  /* 0x0024 */ unsigned long AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY; /* size: 0x0028 */

typedef struct _IMAGE_FILE_HEADER
{
  /* 0x0000 */ unsigned short Machine;
  /* 0x0002 */ unsigned short NumberOfSections;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long PointerToSymbolTable;
  /* 0x000c */ unsigned long NumberOfSymbols;
  /* 0x0010 */ unsigned short SizeOfOptionalHeader;
  /* 0x0012 */ unsigned short Characteristics;
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER; /* size: 0x0014 */

typedef struct _IMAGE_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long StartingAddress;
  /* 0x0004 */ unsigned long EndingAddress;
  /* 0x0008 */ unsigned long EndOfPrologue;
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY; /* size: 0x000c */

typedef struct _IMAGE_FUNCTION_ENTRY64
{
  /* 0x0000 */ unsigned __int64 StartingAddress;
  /* 0x0008 */ unsigned __int64 EndingAddress;
  union
  {
    /* 0x0010 */ unsigned __int64 EndOfPrologue;
    /* 0x0010 */ unsigned __int64 UnwindInfoAddress;
  }; /* size: 0x0008 */
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64; /* size: 0x0018 */

typedef struct _IMAGE_IMPORT_BY_NAME
{
  /* 0x0000 */ unsigned short Hint;
  /* 0x0002 */ unsigned char Name[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME; /* size: 0x0004 */

typedef struct _IMAGE_IMPORT_DESCRIPTOR
{
  union
  {
    /* 0x0000 */ unsigned long Characteristics;
    /* 0x0000 */ unsigned long OriginalFirstThunk;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long ForwarderChain;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long FirstThunk;
} IMAGE_IMPORT_DESCRIPTOR, *PIMAGE_IMPORT_DESCRIPTOR; /* size: 0x0014 */

typedef struct _IMAGE_LINENUMBER
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long SymbolTableIndex;
      /* 0x0000 */ unsigned long VirtualAddress;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Type;
  /* 0x0004 */ unsigned short Linenumber;
} IMAGE_LINENUMBER, *PIMAGE_LINENUMBER; /* size: 0x0006 */

typedef struct _IMAGE_NT_HEADERS
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
} IMAGE_NT_HEADERS, *PIMAGE_NT_HEADERS; /* size: 0x00f8 */

typedef struct _IMAGE_NT_HEADERS64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64; /* size: 0x0108 */

typedef struct _IMAGE_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned long SizeOfStackReserve;
  /* 0x004c */ unsigned long SizeOfStackCommit;
  /* 0x0050 */ unsigned long SizeOfHeapReserve;
  /* 0x0054 */ unsigned long SizeOfHeapCommit;
  /* 0x0058 */ unsigned long LoaderFlags;
  /* 0x005c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0060 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER; /* size: 0x00e0 */

typedef struct _IMAGE_OPTIONAL_HEADER64
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned __int64 ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned __int64 SizeOfStackReserve;
  /* 0x0050 */ unsigned __int64 SizeOfStackCommit;
  /* 0x0058 */ unsigned __int64 SizeOfHeapReserve;
  /* 0x0060 */ unsigned __int64 SizeOfHeapCommit;
  /* 0x0068 */ unsigned long LoaderFlags;
  /* 0x006c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0070 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64; /* size: 0x00f0 */

typedef struct _IMAGE_OS2_HEADER
{
  /* 0x0000 */ unsigned short ne_magic;
  /* 0x0002 */ char ne_ver;
  /* 0x0003 */ char ne_rev;
  /* 0x0004 */ unsigned short ne_enttab;
  /* 0x0006 */ unsigned short ne_cbenttab;
  /* 0x0008 */ long ne_crc;
  /* 0x000c */ unsigned short ne_flags;
  /* 0x000e */ unsigned short ne_autodata;
  /* 0x0010 */ unsigned short ne_heap;
  /* 0x0012 */ unsigned short ne_stack;
  /* 0x0014 */ long ne_csip;
  /* 0x0018 */ long ne_sssp;
  /* 0x001c */ unsigned short ne_cseg;
  /* 0x001e */ unsigned short ne_cmod;
  /* 0x0020 */ unsigned short ne_cbnrestab;
  /* 0x0022 */ unsigned short ne_segtab;
  /* 0x0024 */ unsigned short ne_rsrctab;
  /* 0x0026 */ unsigned short ne_restab;
  /* 0x0028 */ unsigned short ne_modtab;
  /* 0x002a */ unsigned short ne_imptab;
  /* 0x002c */ long ne_nrestab;
  /* 0x0030 */ unsigned short ne_cmovent;
  /* 0x0032 */ unsigned short ne_align;
  /* 0x0034 */ unsigned short ne_cres;
  /* 0x0036 */ unsigned char ne_exetyp;
  /* 0x0037 */ unsigned char ne_flagsothers;
  /* 0x0038 */ unsigned short ne_pretthunks;
  /* 0x003a */ unsigned short ne_psegrefbytes;
  /* 0x003c */ unsigned short ne_swaparea;
  /* 0x003e */ unsigned short ne_expver;
} IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER; /* size: 0x0040 */

typedef struct _IMAGE_RELOCATION
{
  union
  {
    /* 0x0000 */ unsigned long VirtualAddress;
    /* 0x0000 */ unsigned long RelocCount;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SymbolTableIndex;
  /* 0x0008 */ unsigned short Type;
} IMAGE_RELOCATION, *PIMAGE_RELOCATION; /* size: 0x000a */

typedef struct _IMAGE_RESOURCE_DATA_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToData;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long CodePage;
  /* 0x000c */ unsigned long Reserved;
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY; /* size: 0x0010 */

typedef struct _IMAGE_RESOURCE_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned short NumberOfNamedEntries;
  /* 0x000e */ unsigned short NumberOfIdEntries;
} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY; /* size: 0x0010 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NameOffset : 31; /* bit position: 0 */
      /* 0x0000 */ unsigned long NameIsString : 1; /* bit position: 31 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Name;
    /* 0x0000 */ unsigned short Id;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long OffsetToData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long OffsetToDirectory : 31; /* bit position: 0 */
      /* 0x0004 */ unsigned long DataIsDirectory : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY; /* size: 0x0008 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ char NameString[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING; /* size: 0x0004 */

typedef struct _IMAGE_RESOURCE_DIR_STRING_U
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ wchar_t NameString[1];
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U; /* size: 0x0004 */

typedef struct _IMAGE_ROM_HEADERS
{
  /* 0x0000 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0014 */ struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS; /* size: 0x004c */

typedef struct _IMAGE_ROM_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long BaseOfBss;
  /* 0x0020 */ unsigned long GprMask;
  /* 0x0024 */ unsigned long CprMask[4];
  /* 0x0034 */ unsigned long GpValue;
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER; /* size: 0x0038 */

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long UnwindInfoAddress;
} IMAGE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_RUNTIME_FUNCTION_ENTRY; /* size: 0x000c */

typedef struct _IMAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned char Name[8];
  union
  {
    union
    {
      /* 0x0008 */ unsigned long PhysicalAddress;
      /* 0x0008 */ unsigned long VirtualSize;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Misc;
  /* 0x000c */ unsigned long VirtualAddress;
  /* 0x0010 */ unsigned long SizeOfRawData;
  /* 0x0014 */ unsigned long PointerToRawData;
  /* 0x0018 */ unsigned long PointerToRelocations;
  /* 0x001c */ unsigned long PointerToLinenumbers;
  /* 0x0020 */ unsigned short NumberOfRelocations;
  /* 0x0022 */ unsigned short NumberOfLinenumbers;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER; /* size: 0x0028 */

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Machine;
  /* 0x0006 */ unsigned short Characteristics;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long CheckSum;
  /* 0x0010 */ unsigned long ImageBase;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned long NumberOfSections;
  /* 0x001c */ unsigned long ExportedNamesSize;
  /* 0x0020 */ unsigned long DebugDirectorySize;
  /* 0x0024 */ unsigned long SectionAlignment;
  /* 0x0028 */ unsigned long Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER; /* size: 0x0030 */

typedef struct _IMAGE_SYMBOL
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ short SectionNumber;
  /* 0x000e */ unsigned short Type;
  /* 0x0010 */ unsigned char StorageClass;
  /* 0x0011 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL, *PIMAGE_SYMBOL; /* size: 0x0012 */

typedef struct _IMAGE_THUNK_DATA32
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long ForwarderString;
      /* 0x0000 */ unsigned long Function;
      /* 0x0000 */ unsigned long Ordinal;
      /* 0x0000 */ unsigned long AddressOfData;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
} IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32; /* size: 0x0004 */

typedef struct _IMAGE_THUNK_DATA64
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 ForwarderString;
      /* 0x0000 */ unsigned __int64 Function;
      /* 0x0000 */ unsigned __int64 Ordinal;
      /* 0x0000 */ unsigned __int64 AddressOfData;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} IMAGE_THUNK_DATA64, *PIMAGE_THUNK_DATA64; /* size: 0x0008 */

typedef struct _IMAGE_TLS_DIRECTORY32
{
  /* 0x0000 */ unsigned long StartAddressOfRawData;
  /* 0x0004 */ unsigned long EndAddressOfRawData;
  /* 0x0008 */ unsigned long AddressOfIndex;
  /* 0x000c */ unsigned long AddressOfCallBacks;
  /* 0x0010 */ unsigned long SizeOfZeroFill;
  /* 0x0014 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY32, *PIMAGE_TLS_DIRECTORY32; /* size: 0x0018 */

typedef struct _IMAGE_TLS_DIRECTORY64
{
  /* 0x0000 */ unsigned __int64 StartAddressOfRawData;
  /* 0x0008 */ unsigned __int64 EndAddressOfRawData;
  /* 0x0010 */ unsigned __int64 AddressOfIndex;
  /* 0x0018 */ unsigned __int64 AddressOfCallBacks;
  /* 0x0020 */ unsigned long SizeOfZeroFill;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY64, *PIMAGE_TLS_DIRECTORY64; /* size: 0x0028 */

typedef struct _IMAGE_VXD_HEADER
{
  /* 0x0000 */ unsigned short e32_magic;
  /* 0x0002 */ unsigned char e32_border;
  /* 0x0003 */ unsigned char e32_worder;
  /* 0x0004 */ unsigned long e32_level;
  /* 0x0008 */ unsigned short e32_cpu;
  /* 0x000a */ unsigned short e32_os;
  /* 0x000c */ unsigned long e32_ver;
  /* 0x0010 */ unsigned long e32_mflags;
  /* 0x0014 */ unsigned long e32_mpages;
  /* 0x0018 */ unsigned long e32_startobj;
  /* 0x001c */ unsigned long e32_eip;
  /* 0x0020 */ unsigned long e32_stackobj;
  /* 0x0024 */ unsigned long e32_esp;
  /* 0x0028 */ unsigned long e32_pagesize;
  /* 0x002c */ unsigned long e32_lastpagesize;
  /* 0x0030 */ unsigned long e32_fixupsize;
  /* 0x0034 */ unsigned long e32_fixupsum;
  /* 0x0038 */ unsigned long e32_ldrsize;
  /* 0x003c */ unsigned long e32_ldrsum;
  /* 0x0040 */ unsigned long e32_objtab;
  /* 0x0044 */ unsigned long e32_objcnt;
  /* 0x0048 */ unsigned long e32_objmap;
  /* 0x004c */ unsigned long e32_itermap;
  /* 0x0050 */ unsigned long e32_rsrctab;
  /* 0x0054 */ unsigned long e32_rsrccnt;
  /* 0x0058 */ unsigned long e32_restab;
  /* 0x005c */ unsigned long e32_enttab;
  /* 0x0060 */ unsigned long e32_dirtab;
  /* 0x0064 */ unsigned long e32_dircnt;
  /* 0x0068 */ unsigned long e32_fpagetab;
  /* 0x006c */ unsigned long e32_frectab;
  /* 0x0070 */ unsigned long e32_impmod;
  /* 0x0074 */ unsigned long e32_impmodcnt;
  /* 0x0078 */ unsigned long e32_impproc;
  /* 0x007c */ unsigned long e32_pagesum;
  /* 0x0080 */ unsigned long e32_datapage;
  /* 0x0084 */ unsigned long e32_preload;
  /* 0x0088 */ unsigned long e32_nrestab;
  /* 0x008c */ unsigned long e32_cbnrestab;
  /* 0x0090 */ unsigned long e32_nressum;
  /* 0x0094 */ unsigned long e32_autodata;
  /* 0x0098 */ unsigned long e32_debuginfo;
  /* 0x009c */ unsigned long e32_debuglen;
  /* 0x00a0 */ unsigned long e32_instpreload;
  /* 0x00a4 */ unsigned long e32_instdemand;
  /* 0x00a8 */ unsigned long e32_heapsize;
  /* 0x00ac */ unsigned char e32_res3[12];
  /* 0x00b8 */ unsigned long e32_winresoff;
  /* 0x00bc */ unsigned long e32_winreslen;
  /* 0x00c0 */ unsigned short e32_devid;
  /* 0x00c2 */ unsigned short e32_ddkver;
} IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER; /* size: 0x00c4 */

typedef struct _INDIRECTPROPERTY
{
  /* 0x0000 */ unsigned long Index;
  /* 0x0004 */ wchar_t* poszName;
} INDIRECTPROPERTY, *PINDIRECTPROPERTY; /* size: 0x0008 */

typedef struct _INITIAL_TEB
{
  struct
  {
    /* 0x0000 */ void* OldStackBase;
    /* 0x0004 */ void* OldStackLimit;
  } /* size: 0x0008 */ OldInitialTeb;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* StackAllocationBase;
} INITIAL_TEB, *PINITIAL_TEB; /* size: 0x0014 */

typedef struct _INPUT_RECORD
{
  /* 0x0000 */ unsigned short EventType;
  union
  {
    union
    {
      /* 0x0004 */ struct _KEY_EVENT_RECORD KeyEvent;
      /* 0x0004 */ struct _MOUSE_EVENT_RECORD MouseEvent;
      /* 0x0004 */ struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
      /* 0x0004 */ struct _MENU_EVENT_RECORD MenuEvent;
      /* 0x0004 */ struct _FOCUS_EVENT_RECORD FocusEvent;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Event;
} INPUT_RECORD, *PINPUT_RECORD; /* size: 0x0014 */

typedef struct _INSTALLDATA
{
  /* 0x0000 */ enum _INSTALLSPECTYPE Type;
  /* 0x0004 */ union _INSTALLSPEC Spec;
} INSTALLDATA, *PINSTALLDATA; /* size: 0x0018 */

typedef union _INSTALLSPEC
{
  union
  {
    struct
    {
      /* 0x0000 */ wchar_t* Name;
      /* 0x0004 */ struct _GUID GPOId;
    } /* size: 0x0014 */ AppName;
    /* 0x0000 */ wchar_t* FileExt;
    /* 0x0000 */ wchar_t* ProgId;
    struct
    {
      /* 0x0000 */ struct _GUID Clsid;
      /* 0x0010 */ unsigned long ClsCtx;
    } /* size: 0x0014 */ COMClass;
  }; /* size: 0x0014 */
} INSTALLSPEC, *PINSTALLSPEC; /* size: 0x0014 */

typedef enum _INSTALLSPECTYPE
{
  APPNAME = 1,
  FILEEXT = 2,
  PROGID = 3,
  COMCLASS = 4,
} INSTALLSPECTYPE, *PINSTALLSPECTYPE;

typedef enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = -1,
  Internal = 0,
  Isa = 1,
  Eisa = 2,
  MicroChannel = 3,
  TurboChannel = 4,
  PCIBus = 5,
  VMEBus = 6,
  NuBus = 7,
  PCMCIABus = 8,
  CBus = 9,
  MPIBus = 10,
  MPSABus = 11,
  ProcessorInternal = 12,
  InternalPowerBus = 13,
  PNPISABus = 14,
  PNPBus = 15,
  Vmcs = 16,
  MaximumInterfaceType = 17,
} INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef struct _INVERTED_FUNCTION_TABLE
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long MaximumSize;
  /* 0x0008 */ unsigned char Overflow;
  /* 0x000c */ struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
} INVERTED_FUNCTION_TABLE, *PINVERTED_FUNCTION_TABLE; /* size: 0x200c */

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY
{
  /* 0x0000 */ void* FunctionTable;
  /* 0x0004 */ void* ImageBase;
  /* 0x0008 */ unsigned long SizeOfImage;
  /* 0x000c */ unsigned long SizeOfTable;
} INVERTED_FUNCTION_TABLE_ENTRY, *PINVERTED_FUNCTION_TABLE_ENTRY; /* size: 0x0010 */

typedef struct _IO_COMPLETION_BASIC_INFORMATION
{
  /* 0x0000 */ long Depth;
} IO_COMPLETION_BASIC_INFORMATION, *PIO_COMPLETION_BASIC_INFORMATION; /* size: 0x0004 */

typedef enum _IO_COMPLETION_INFORMATION_CLASS
{
  IoCompletionBasicInformation = 0,
} IO_COMPLETION_INFORMATION_CLASS, *PIO_COMPLETION_INFORMATION_CLASS;

typedef struct _IO_COUNTERS
{
  /* 0x0000 */ unsigned __int64 ReadOperationCount;
  /* 0x0008 */ unsigned __int64 WriteOperationCount;
  /* 0x0010 */ unsigned __int64 OtherOperationCount;
  /* 0x0018 */ unsigned __int64 ReadTransferCount;
  /* 0x0020 */ unsigned __int64 WriteTransferCount;
  /* 0x0028 */ unsigned __int64 OtherTransferCount;
} IO_COUNTERS, *PIO_COUNTERS; /* size: 0x0030 */

typedef struct _IO_ERROR_LOG_MESSAGE
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned short DriverNameLength;
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long DriverNameOffset;
  /* 0x0018 */ struct _IO_ERROR_LOG_PACKET EntryData;
} IO_ERROR_LOG_MESSAGE, *PIO_ERROR_LOG_MESSAGE; /* size: 0x0048 */

typedef struct _IO_ERROR_LOG_PACKET
{
  /* 0x0000 */ unsigned char MajorFunctionCode;
  /* 0x0001 */ unsigned char RetryCount;
  /* 0x0002 */ unsigned short DumpDataSize;
  /* 0x0004 */ unsigned short NumberOfStrings;
  /* 0x0006 */ unsigned short StringOffset;
  /* 0x0008 */ unsigned short EventCategory;
  /* 0x000c */ long ErrorCode;
  /* 0x0010 */ unsigned long UniqueErrorValue;
  /* 0x0014 */ long FinalStatus;
  /* 0x0018 */ unsigned long SequenceNumber;
  /* 0x001c */ unsigned long IoControlCode;
  /* 0x0020 */ union _LARGE_INTEGER DeviceOffset;
  /* 0x0028 */ unsigned long DumpData[1];
  /* 0x002c */ long __PADDING__[1];
} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; /* size: 0x0030 */

typedef enum _IO_PRIORITY_HINT
{
  IoPriorityVeryLow = 0,
  IoPriorityLow = 1,
  IoPriorityNormal = 2,
  IoPriorityHigh = 3,
  IoPriorityCritical = 4,
  MaxIoPriorityTypes = 5,
} IO_PRIORITY_HINT, *PIO_PRIORITY_HINT;

typedef struct _IO_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Option;
  /* 0x0001 */ unsigned char Type;
  /* 0x0002 */ unsigned char ShareDisposition;
  /* 0x0003 */ unsigned char Spare1;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short Spare2;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Port;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory;
      struct
      {
        /* 0x0008 */ unsigned long MinimumVector;
        /* 0x000c */ unsigned long MaximumVector;
        /* 0x0010 */ enum _IRQ_DEVICE_POLICY AffinityPolicy;
        /* 0x0014 */ enum _IRQ_PRIORITY PriorityPolicy;
        /* 0x0018 */ unsigned long TargetedProcessors;
      } /* size: 0x0014 */ Interrupt;
      struct
      {
        /* 0x0008 */ unsigned long MinimumChannel;
        /* 0x000c */ unsigned long MaximumChannel;
      } /* size: 0x0008 */ Dma;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Generic;
      struct
      {
        /* 0x0008 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long MinBusNumber;
        /* 0x0010 */ unsigned long MaxBusNumber;
        /* 0x0014 */ unsigned long Reserved;
      } /* size: 0x0010 */ BusNumber;
      struct
      {
        /* 0x0008 */ unsigned long Priority;
        /* 0x000c */ unsigned long Reserved1;
        /* 0x0010 */ unsigned long Reserved2;
      } /* size: 0x000c */ ConfigData;
      struct
      {
        /* 0x0008 */ unsigned long Length40;
        /* 0x000c */ unsigned long Alignment40;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory40;
      struct
      {
        /* 0x0008 */ unsigned long Length48;
        /* 0x000c */ unsigned long Alignment48;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory48;
      struct
      {
        /* 0x0008 */ unsigned long Length64;
        /* 0x000c */ unsigned long Alignment64;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory64;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _IO_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST; /* size: 0x0028 */

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  /* 0x0000 */ unsigned long ListSize;
  /* 0x0004 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long SlotNumber;
  /* 0x0010 */ unsigned long Reserved[3];
  /* 0x001c */ unsigned long AlternativeLists;
  /* 0x0020 */ struct _IO_RESOURCE_LIST List[1];
} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST; /* size: 0x0048 */

typedef struct _IO_STATUS_BLOCK
{
  union
  {
    /* 0x0000 */ long Status;
    /* 0x0000 */ void* Pointer;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long Information;
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK; /* size: 0x0008 */

typedef enum _IRQ_DEVICE_POLICY
{
  IrqPolicyMachineDefault = 0,
  IrqPolicyAllCloseProcessors = 1,
  IrqPolicyOneCloseProcessor = 2,
  IrqPolicyAllProcessorsInMachine = 3,
  IrqPolicySpecifiedProcessors = 4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 5,
} IRQ_DEVICE_POLICY, *PIRQ_DEVICE_POLICY;

typedef enum _IRQ_PRIORITY
{
  IrqPriorityUndefined = 0,
  IrqPriorityLow = 1,
  IrqPriorityNormal = 2,
  IrqPriorityHigh = 3,
} IRQ_PRIORITY, *PIRQ_PRIORITY;

typedef struct _ITEMIDLIST
{
  /* 0x0000 */ struct _SHITEMID mkid;
} ITEMIDLIST, *PITEMIDLIST; /* size: 0x0003 */

typedef struct _ImageArchitectureEntry
{
  /* 0x0000 */ unsigned long FixupInstRVA;
  /* 0x0004 */ unsigned long NewInst;
} ImageArchitectureEntry, *PImageArchitectureEntry; /* size: 0x0008 */

typedef struct _ImageArchitectureHeader
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int AmaskValue : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned int : 7; /* bit position: 1 */
    /* 0x0000 */ unsigned int AmaskShift : 8; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long FirstEntryRVA;
} ImageArchitectureHeader, *PImageArchitectureHeader; /* size: 0x0008 */

typedef struct _JIT_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwProcessorArchitecture;
  /* 0x0008 */ unsigned long dwThreadID;
  /* 0x000c */ unsigned long dwReserved0;
  /* 0x0010 */ unsigned __int64 lpExceptionAddress;
  /* 0x0018 */ unsigned __int64 lpExceptionRecord;
  /* 0x0020 */ unsigned __int64 lpContextRecord;
} JIT_DEBUG_INFO, *PJIT_DEBUG_INFO; /* size: 0x0028 */

typedef enum _JOBOBJECTINFOCLASS
{
  JobObjectBasicAccountingInformation = 1,
  JobObjectBasicLimitInformation = 2,
  JobObjectBasicProcessIdList = 3,
  JobObjectBasicUIRestrictions = 4,
  JobObjectSecurityLimitInformation = 5,
  JobObjectEndOfJobTimeInformation = 6,
  JobObjectAssociateCompletionPortInformation = 7,
  JobObjectBasicAndIoAccountingInformation = 8,
  JobObjectExtendedLimitInformation = 9,
  JobObjectJobSetInformation = 10,
  MaxJobObjectInfoClass = 11,
} JOBOBJECTINFOCLASS, *PJOBOBJECTINFOCLASS;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0004 */ void* CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalUserTime;
  /* 0x0008 */ union _LARGE_INTEGER TotalKernelTime;
  /* 0x0010 */ union _LARGE_INTEGER ThisPeriodTotalUserTime;
  /* 0x0018 */ union _LARGE_INTEGER ThisPeriodTotalKernelTime;
  /* 0x0020 */ unsigned long TotalPageFaultCount;
  /* 0x0024 */ unsigned long TotalProcesses;
  /* 0x0028 */ unsigned long ActiveProcesses;
  /* 0x002c */ unsigned long TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION; /* size: 0x0030 */

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION; /* size: 0x0060 */

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER PerProcessUserTimeLimit;
  /* 0x0008 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0010 */ unsigned long LimitFlags;
  /* 0x0014 */ unsigned long MinimumWorkingSetSize;
  /* 0x0018 */ unsigned long MaximumWorkingSetSize;
  /* 0x001c */ unsigned long ActiveProcessLimit;
  /* 0x0020 */ unsigned long Affinity;
  /* 0x0024 */ unsigned long PriorityClass;
  /* 0x0028 */ unsigned long SchedulingClass;
  /* 0x002c */ long __PADDING__[1];
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION; /* size: 0x0030 */

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  /* 0x0000 */ unsigned long NumberOfAssignedProcesses;
  /* 0x0004 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0008 */ unsigned long ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST; /* size: 0x000c */

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  /* 0x0000 */ unsigned long UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS; /* size: 0x0004 */

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION; /* size: 0x0004 */

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
  /* 0x0060 */ unsigned long ProcessMemoryLimit;
  /* 0x0064 */ unsigned long JobMemoryLimit;
  /* 0x0068 */ unsigned long PeakProcessMemoryUsed;
  /* 0x006c */ unsigned long PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION; /* size: 0x0070 */

typedef struct _JOBOBJECT_JOBSET_INFORMATION
{
  /* 0x0000 */ unsigned long MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION; /* size: 0x0004 */

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned long SecurityLimitFlags;
  /* 0x0004 */ void* JobToken;
  /* 0x0008 */ struct _TOKEN_GROUPS* SidsToDisable;
  /* 0x000c */ struct _TOKEN_PRIVILEGES* PrivilegesToDelete;
  /* 0x0010 */ struct _TOKEN_GROUPS* RestrictedSids;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION; /* size: 0x0014 */

typedef struct _JOB_SET_ARRAY
{
  /* 0x0000 */ void* JobHandle;
  /* 0x0004 */ unsigned long MemberLevel;
  /* 0x0008 */ unsigned long Flags;
} JOB_SET_ARRAY, *PJOB_SET_ARRAY; /* size: 0x000c */

typedef struct _JOURNAL_ABSOLUTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER EndTimeStamp;
  /* 0x0010 */ unsigned __int64 NumberOfRecords;
  /* 0x0018 */ unsigned long FillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_ABSOLUTE_INFORMATION, *PJOURNAL_ABSOLUTE_INFORMATION; /* size: 0x0020 */

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS
{
  JournalCreateKey = 0,
  JournalDeleteKey = 1,
  JournalRenameKey = 2,
  JournalSetValue = 3,
  JournalDeleteValue = 4,
  JournalSetKeySecurity = 5,
  JournalSetKeyUserFlags = 6,
  JournalSetLastWriteTime = 7,
  JournalBeginTransaction = 8,
  JournalCommitTransaction = 9,
  JournalAbortTransaction = 10,
  MaxJournalChangeAction = 11,
} JOURNAL_CHANGE_INFORMATION_CLASS, *PJOURNAL_CHANGE_INFORMATION_CLASS;

typedef struct _JOURNAL_CLIENT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTimeStamp;
  /* 0x0010 */ unsigned __int64 RecordsToProcess;
  /* 0x0018 */ unsigned long RelativeFillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_CLIENT_INFORMATION, *PJOURNAL_CLIENT_INFORMATION; /* size: 0x0020 */

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0020 */ unsigned long SecurityDescriptorLength;
  /* 0x0024 */ void* SecurityDescriptor;
  /* 0x0028 */ unsigned short ClassLength;
  /* 0x002c */ void* ClassData;
  /* 0x0030 */ unsigned char SymbolicLink;
  /* 0x0031 */ char __PADDING__[7];
} JOURNAL_CREATE_DELETE_KEY_INFORMATION, *PJOURNAL_CREATE_DELETE_KEY_INFORMATION; /* size: 0x0038 */

typedef enum _JOURNAL_INFORMATION_CLASS
{
  JournalAbsoluteInformation = 0,
  JournalClientInformation = 1,
  MaxJournalInformation = 2,
} JOURNAL_INFORMATION_CLASS, *PJOURNAL_INFORMATION_CLASS;

typedef struct _JOURNAL_RENAME_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0020 */ struct _UNICODE_STRING KeyKeyName;
} JOURNAL_RENAME_KEY_INFORMATION, *PJOURNAL_RENAME_KEY_INFORMATION; /* size: 0x0028 */

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0020 */ struct _UNICODE_STRING ValueName;
  /* 0x0028 */ unsigned long OldValueType;
  /* 0x002c */ unsigned long OldDataLength;
  /* 0x0030 */ void* OldData;
  /* 0x0034 */ unsigned long NewValueType;
  /* 0x0038 */ unsigned long NewDataLength;
  /* 0x003c */ void* NewData;
} JOURNAL_SET_DELETE_VALUE_INFORMATION, *PJOURNAL_SET_DELETE_VALUE_INFORMATION; /* size: 0x0040 */

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0020 */ union _LARGE_INTEGER OldLastWriteTime;
  /* 0x0028 */ union _LARGE_INTEGER NewLastWriteTime;
} JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION, *PJOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION; /* size: 0x0030 */

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0020 */ unsigned long OldSecurityDescriptorLength;
  /* 0x0024 */ void* OldSecurityDescriptor;
  /* 0x0028 */ unsigned long NewSecurityDescriptorLength;
  /* 0x002c */ void* NewSecurityDescriptor;
} JOURNAL_SET_KEY_SECURITY_INFORMATION, *PJOURNAL_SET_KEY_SECURITY_INFORMATION; /* size: 0x0030 */

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0020 */ unsigned long OldFlags;
  /* 0x0024 */ unsigned long NewFlags;
} JOURNAL_SET_KEY_USER_FLAGS_INFORMATION, *PJOURNAL_SET_KEY_USER_FLAGS_INFORMATION; /* size: 0x0028 */

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _GUID TransactionID;
} JOURNAL_TRANSACTION_BOUNDARY_INFORMATION, *PJOURNAL_TRANSACTION_BOUNDARY_INFORMATION; /* size: 0x0028 */

typedef struct _KCRM_MARSHAL_HEADER
{
  /* 0x0000 */ unsigned long VersionMajor;
  /* 0x0004 */ unsigned long VersionMinor;
  /* 0x0008 */ unsigned long NumProtocols;
  /* 0x000c */ unsigned long Unused;
} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER; /* size: 0x0010 */

typedef struct _KCRM_PROTOCOL_BLOB
{
  /* 0x0000 */ struct _GUID ProtocolId;
  /* 0x0010 */ unsigned long StaticInfoLength;
  /* 0x0014 */ unsigned long TransactionIdInfoLength;
  /* 0x0018 */ unsigned long Unused1;
  /* 0x001c */ unsigned long Unused2;
} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB; /* size: 0x0020 */

typedef struct _KCRM_TRANSACTION_BLOB
{
  /* 0x0000 */ struct _GUID UOW;
  /* 0x0010 */ struct _GUID TmIdentity;
  /* 0x0020 */ unsigned long IsolationLevel;
  /* 0x0024 */ unsigned long IsolationFlags;
  /* 0x0028 */ unsigned long Timeout;
  /* 0x002c */ wchar_t Description[64];
} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB; /* size: 0x00ac */

typedef struct _KDHELP
{
  /* 0x0000 */ unsigned long Thread;
  /* 0x0004 */ unsigned long ThCallbackStack;
  /* 0x0008 */ unsigned long NextCallback;
  /* 0x000c */ unsigned long FramePointer;
  /* 0x0010 */ unsigned long KiCallUserMode;
  /* 0x0014 */ unsigned long KeUserCallbackDispatcher;
  /* 0x0018 */ unsigned long SystemRangeStart;
  /* 0x001c */ unsigned long ThCallbackBStore;
  /* 0x0020 */ unsigned long KiUserExceptionDispatcher;
  /* 0x0024 */ unsigned long StackBase;
  /* 0x0028 */ unsigned long StackLimit;
  /* 0x002c */ unsigned long Reserved[5];
} KDHELP, *PKDHELP; /* size: 0x0040 */

typedef struct _KDHELP64
{
  /* 0x0000 */ unsigned __int64 Thread;
  /* 0x0008 */ unsigned long ThCallbackStack;
  /* 0x000c */ unsigned long ThCallbackBStore;
  /* 0x0010 */ unsigned long NextCallback;
  /* 0x0014 */ unsigned long FramePointer;
  /* 0x0018 */ unsigned __int64 KiCallUserMode;
  /* 0x0020 */ unsigned __int64 KeUserCallbackDispatcher;
  /* 0x0028 */ unsigned __int64 SystemRangeStart;
  /* 0x0030 */ unsigned __int64 KiUserExceptionDispatcher;
  /* 0x0038 */ unsigned __int64 StackBase;
  /* 0x0040 */ unsigned __int64 StackLimit;
  /* 0x0048 */ unsigned __int64 Reserved[5];
} KDHELP64, *PKDHELP64; /* size: 0x0070 */

typedef struct _KERNEL_USER_TIMES
{
  /* 0x0000 */ union _LARGE_INTEGER CreateTime;
  /* 0x0008 */ union _LARGE_INTEGER ExitTime;
  /* 0x0010 */ union _LARGE_INTEGER KernelTime;
  /* 0x0018 */ union _LARGE_INTEGER UserTime;
} KERNEL_USER_TIMES, *PKERNEL_USER_TIMES; /* size: 0x0020 */

typedef struct _KEY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long NameLength;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[6];
} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _KEY_CACHED_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long SubKeys;
  /* 0x0010 */ unsigned long MaxNameLen;
  /* 0x0014 */ unsigned long Values;
  /* 0x0018 */ unsigned long MaxValueNameLen;
  /* 0x001c */ unsigned long MaxValueDataLen;
  /* 0x0020 */ unsigned long NameLength;
  /* 0x0024 */ long __PADDING__[1];
} KEY_CACHED_INFORMATION, *PKEY_CACHED_INFORMATION; /* size: 0x0028 */

typedef struct _KEY_CONTROL_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
} KEY_CONTROL_FLAGS_INFORMATION, *PKEY_CONTROL_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _KEY_EVENT_RECORD
{
  /* 0x0000 */ int bKeyDown;
  /* 0x0004 */ unsigned short wRepeatCount;
  /* 0x0006 */ unsigned short wVirtualKeyCode;
  /* 0x0008 */ unsigned short wVirtualScanCode;
  union
  {
    union
    {
      /* 0x000a */ wchar_t UnicodeChar;
      /* 0x000a */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ uChar;
  /* 0x000c */ unsigned long dwControlKeyState;
} KEY_EVENT_RECORD, *PKEY_EVENT_RECORD; /* size: 0x0010 */

typedef struct _KEY_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Wow64Flags;
  /* 0x0004 */ unsigned long KeyFlags;
  /* 0x0008 */ unsigned long ControlFlags;
} KEY_FLAGS_INFORMATION, *PKEY_FLAGS_INFORMATION; /* size: 0x000c */

typedef struct _KEY_FULL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long SubKeys;
  /* 0x0018 */ unsigned long MaxNameLen;
  /* 0x001c */ unsigned long MaxClassLen;
  /* 0x0020 */ unsigned long Values;
  /* 0x0024 */ unsigned long MaxValueNameLen;
  /* 0x0028 */ unsigned long MaxValueDataLen;
  /* 0x002c */ wchar_t Class[1];
  /* 0x002e */ char __PADDING__[2];
} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION; /* size: 0x0030 */

typedef enum _KEY_INFORMATION_CLASS
{
  KeyBasicInformation = 0,
  KeyNodeInformation = 1,
  KeyFullInformation = 2,
  KeyNameInformation = 3,
  KeyCachedInformation = 4,
  KeyFlagsInformation = 5,
  KeyVirtualizationInformation = 6,
  MaxKeyInfoClass = 7,
} KEY_INFORMATION_CLASS, *PKEY_INFORMATION_CLASS;

typedef struct _KEY_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long NameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _KEY_NODE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long NameLength;
  /* 0x0018 */ wchar_t Name[1];
  /* 0x001a */ char __PADDING__[6];
} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION; /* size: 0x0020 */

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct KEY_PID_ARRAY KeyArray[1];
} KEY_OPEN_SUBKEYS_INFORMATION, *PKEY_OPEN_SUBKEYS_INFORMATION; /* size: 0x0010 */

typedef enum _KEY_SET_INFORMATION_CLASS
{
  KeyWriteTimeInformation = 0,
  KeyWow64FlagsInformation = 1,
  KeyControlFlagsInformation = 2,
  KeySetVirtualizationInformation = 3,
  KeySetDebugInformation = 4,
  MaxKeySetInfoClass = 5,
} KEY_SET_INFORMATION_CLASS, *PKEY_SET_INFORMATION_CLASS;

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
  }; /* bitfield */
} KEY_SET_VIRTUALIZATION_INFORMATION, *PKEY_SET_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

typedef struct _KEY_TYPE_SUBTYPE
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ struct _GUID Type;
  /* 0x0014 */ struct _GUID Subtype;
} KEY_TYPE_SUBTYPE, *PKEY_TYPE_SUBTYPE; /* size: 0x0024 */

typedef struct _KEY_VALUE_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ wchar_t Name[1];
  /* 0x000e */ char __PADDING__[2];
} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION; /* size: 0x0010 */

typedef struct _KEY_VALUE_ENTRY
{
  /* 0x0000 */ struct _UNICODE_STRING* ValueName;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned long DataOffset;
  /* 0x000c */ unsigned long Type;
} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY; /* size: 0x0010 */

typedef struct _KEY_VALUE_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataOffset;
  /* 0x000c */ unsigned long DataLength;
  /* 0x0010 */ unsigned long NameLength;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION; /* size: 0x0018 */

typedef enum _KEY_VALUE_INFORMATION_CLASS
{
  KeyValueBasicInformation = 0,
  KeyValueFullInformation = 1,
  KeyValuePartialInformation = 2,
  KeyValueFullInformationAlign64 = 3,
  KeyValuePartialInformationAlign64 = 4,
  MaxKeyValueInfoClass = 5,
} KEY_VALUE_INFORMATION_CLASS, *PKEY_VALUE_INFORMATION_CLASS;

typedef struct _KEY_VALUE_PARTIAL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION; /* size: 0x0010 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64; /* size: 0x000c */

typedef struct _KEY_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualizationCandidate : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
} KEY_VIRTUALIZATION_INFORMATION, *PKEY_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

typedef struct _KEY_WOW64_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long UserFlags;
} KEY_WOW64_FLAGS_INFORMATION, *PKEY_WOW64_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _KEY_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
} KEY_WRITE_TIME_INFORMATION, *PKEY_WRITE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _KLDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0008 */ void* ExceptionTable;
  /* 0x000c */ unsigned long ExceptionTableSize;
  /* 0x0010 */ void* GpValue;
  /* 0x0014 */ struct _NON_PAGED_DEBUG_INFO* NonPagedDebugInfo;
  /* 0x0018 */ void* DllBase;
  /* 0x001c */ void* EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _UNICODE_STRING FullDllName;
  /* 0x002c */ struct _UNICODE_STRING BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short __Unused5;
  /* 0x003c */ void* SectionPointer;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned long CoverageSectionSize;
  /* 0x0048 */ void* CoverageSection;
  /* 0x004c */ void* LoadedImports;
  /* 0x0050 */ void* PatchInformation;
} KLDR_DATA_TABLE_ENTRY, *PKLDR_DATA_TABLE_ENTRY; /* size: 0x0054 */

typedef struct _KLDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ unsigned long __Undefined1;
  /* 0x000c */ unsigned long __Undefined2;
  /* 0x0010 */ unsigned long __Undefined3;
  /* 0x0014 */ unsigned long NonPagedDebugInfo;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short __Undefined5;
  /* 0x003c */ unsigned long __Undefined6;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY32, *PKLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

typedef struct _KLDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ unsigned __int64 __Undefined1;
  /* 0x0018 */ unsigned __int64 __Undefined2;
  /* 0x0020 */ unsigned __int64 __Undefined3;
  /* 0x0028 */ unsigned __int64 NonPagedDebugInfo;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Undefined5;
  /* 0x0070 */ unsigned __int64 __Undefined6;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long __padding1;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ unsigned long __padding2;
} KLDR_DATA_TABLE_ENTRY64, *PKLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _KLOCK_QUEUE_HANDLE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE LockQueue;
  /* 0x0008 */ unsigned char OldIrql;
  /* 0x0009 */ char __PADDING__[3];
} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE; /* size: 0x000c */

typedef enum _KPROFILE_SOURCE
{
  ProfileTime = 0,
  ProfileAlignmentFixup = 1,
  ProfileTotalIssues = 2,
  ProfilePipelineDry = 3,
  ProfileLoadInstructions = 4,
  ProfilePipelineFrozen = 5,
  ProfileBranchInstructions = 6,
  ProfileTotalNonissues = 7,
  ProfileDcacheMisses = 8,
  ProfileIcacheMisses = 9,
  ProfileCacheMisses = 10,
  ProfileBranchMispredictions = 11,
  ProfileStoreInstructions = 12,
  ProfileFpInstructions = 13,
  ProfileIntegerInstructions = 14,
  Profile2Issue = 15,
  Profile3Issue = 16,
  Profile4Issue = 17,
  ProfileSpecialInstructions = 18,
  ProfileTotalCycles = 19,
  ProfileIcacheIssues = 20,
  ProfileDcacheAccesses = 21,
  ProfileMemoryBarrierCycles = 22,
  ProfileLoadLinkedIssues = 23,
  ProfileMaximum = 24,
} KPROFILE_SOURCE, *PKPROFILE_SOURCE;

typedef struct _KSPIN_LOCK_QUEUE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE* volatile Next;
  /* 0x0004 */ unsigned long* volatile Lock;
} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE; /* size: 0x0008 */

typedef enum _KSPIN_LOCK_QUEUE_NUMBER
{
  LockQueueDispatcherLock = 0,
  LockQueueExpansionLock = 1,
  LockQueuePfnLock = 2,
  LockQueueSystemSpaceLock = 3,
  LockQueueVacbLock = 4,
  LockQueueMasterLock = 5,
  LockQueueNonPagedPoolLock = 6,
  LockQueueIoCancelLock = 7,
  LockQueueWorkQueueLock = 8,
  LockQueueIoVpbLock = 9,
  LockQueueIoDatabaseLock = 10,
  LockQueueIoCompletionLock = 11,
  LockQueueNtfsStructLock = 12,
  LockQueueAfdWorkQueueLock = 13,
  LockQueueBcbLock = 14,
  LockQueueMmNonPagedPoolLock = 15,
  LockQueueUnusedSpare16 = 16,
  LockQueueTimerTableLock = 17,
  LockQueueMaximumLock = 49,
} KSPIN_LOCK_QUEUE_NUMBER, *PKSPIN_LOCK_QUEUE_NUMBER;

typedef struct _KSYSTEM_TIME
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long High1Time;
  /* 0x0008 */ long High2Time;
} KSYSTEM_TIME, *PKSYSTEM_TIME; /* size: 0x000c */

typedef struct _KTMOBJECT_CURSOR
{
  /* 0x0000 */ struct _GUID LastQuery;
  /* 0x0010 */ unsigned long ObjectIdCount;
  /* 0x0014 */ struct _GUID ObjectIds[1];
} KTMOBJECT_CURSOR, *PKTMOBJECT_CURSOR; /* size: 0x0024 */

typedef enum _KTMOBJECT_TYPE
{
  KTMOBJECT_TRANSACTION = 0,
  KTMOBJECT_TRANSACTION_MANAGER = 1,
  KTMOBJECT_RESOURCE_MANAGER = 2,
  KTMOBJECT_ENLISTMENT = 3,
  KTMOBJECT_INVALID = 4,
} KTMOBJECT_TYPE, *PKTMOBJECT_TYPE;

typedef struct _KUSER_SHARED_DATA
{
  /* 0x0000 */ unsigned long TickCountLowDeprecated;
  /* 0x0004 */ unsigned long TickCountMultiplier;
  /* 0x0008 */ volatile struct _KSYSTEM_TIME InterruptTime;
  /* 0x0014 */ volatile struct _KSYSTEM_TIME SystemTime;
  /* 0x0020 */ volatile struct _KSYSTEM_TIME TimeZoneBias;
  /* 0x002c */ unsigned short ImageNumberLow;
  /* 0x002e */ unsigned short ImageNumberHigh;
  /* 0x0030 */ wchar_t NtSystemRoot[260];
  /* 0x0238 */ unsigned long MaxStackTraceDepth;
  /* 0x023c */ unsigned long CryptoExponent;
  /* 0x0240 */ unsigned long TimeZoneId;
  /* 0x0244 */ unsigned long LargePageMinimum;
  /* 0x0248 */ unsigned long Reserved2[7];
  /* 0x0264 */ enum _NT_PRODUCT_TYPE NtProductType;
  /* 0x0268 */ unsigned char ProductTypeIsValid;
  /* 0x026c */ unsigned long NtMajorVersion;
  /* 0x0270 */ unsigned long NtMinorVersion;
  /* 0x0274 */ unsigned char ProcessorFeatures[64];
  /* 0x02b4 */ unsigned long Reserved1;
  /* 0x02b8 */ unsigned long Reserved3;
  /* 0x02bc */ volatile unsigned long TimeSlip;
  /* 0x02c0 */ enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  /* 0x02c8 */ union _LARGE_INTEGER SystemExpirationDate;
  /* 0x02d0 */ unsigned long SuiteMask;
  /* 0x02d4 */ unsigned char KdDebuggerEnabled;
  /* 0x02d5 */ unsigned char NXSupportPolicy;
  /* 0x02d8 */ volatile unsigned long ActiveConsoleId;
  /* 0x02dc */ volatile unsigned long DismountCount;
  /* 0x02e0 */ unsigned long ComPlusPackage;
  /* 0x02e4 */ unsigned long LastSystemRITEventTickCount;
  /* 0x02e8 */ unsigned long NumberOfPhysicalPages;
  /* 0x02ec */ unsigned char SafeBootMode;
  union
  {
    /* 0x02f0 */ unsigned long SharedDataFlags;
    struct /* bitfield */
    {
      /* 0x02f0 */ unsigned long DbgErrorPortPresent : 1; /* bit position: 0 */
      /* 0x02f0 */ unsigned long DbgElevationEnabled : 1; /* bit position: 1 */
      /* 0x02f0 */ unsigned long DbgVirtEnabled : 1; /* bit position: 2 */
      /* 0x02f0 */ unsigned long DbgInstallerDetectEnabled : 1; /* bit position: 3 */
      /* 0x02f0 */ unsigned long DbgSystemDllRelocated : 1; /* bit position: 4 */
      /* 0x02f0 */ unsigned long DbgDynProcessorEnabled : 1; /* bit position: 5 */
      /* 0x02f0 */ unsigned long DbgSEHValidationEnabled : 1; /* bit position: 6 */
      /* 0x02f0 */ unsigned long SpareBits : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x02f8 */ unsigned __int64 TestRetInstruction;
  /* 0x0300 */ unsigned long SystemCall;
  /* 0x0304 */ unsigned long SystemCallReturn;
  /* 0x0308 */ unsigned __int64 SystemCallPad[3];
  union
  {
    /* 0x0320 */ volatile struct _KSYSTEM_TIME TickCount;
    /* 0x0320 */ volatile unsigned __int64 TickCountQuad;
  }; /* size: 0x000c */
  /* 0x0330 */ unsigned long Cookie;
  /* 0x0338 */ __int64 ConsoleSessionForegroundProcessId;
  /* 0x0340 */ unsigned long Wow64SharedInformation[16];
  /* 0x0380 */ unsigned short UserModeGlobalLogger[8];
  /* 0x0390 */ unsigned long HeapTracingPid[2];
  /* 0x0398 */ unsigned long CritSecTracingPid[2];
  /* 0x03a0 */ unsigned long ImageFileExecutionOptions;
  /* 0x03a4 */ unsigned long LangGenerationCount;
  union
  {
    /* 0x03a8 */ unsigned __int64 AffinityPad;
    /* 0x03a8 */ unsigned long ActiveProcessorAffinity;
  }; /* size: 0x0008 */
  /* 0x03b0 */ volatile unsigned __int64 InterruptTimeBias;
} KUSER_SHARED_DATA, *PKUSER_SHARED_DATA; /* size: 0x03b8 */

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
} LARGE_INTEGER, *PLARGE_INTEGER; /* size: 0x0008 */

typedef struct _LAST_EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0050 */ struct _CONTEXT ContextRecord;
  /* 0x031c */ unsigned long ControlPc;
  /* 0x0320 */ enum _EXCEPTION_DISPOSITION Disposition;
  /* 0x0324 */ unsigned long HandlerData[5];
} LAST_EXCEPTION_LOG, *PLAST_EXCEPTION_LOG; /* size: 0x0338 */

typedef struct _LBLOB
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long MaximumLength;
  /* 0x0008 */ unsigned char* Buffer;
} LBLOB, *PLBLOB; /* size: 0x000c */

typedef struct _LDBL12
{
  /* 0x0000 */ unsigned char ld12[12];
} LDBL12, *PLDBL12; /* size: 0x000c */

typedef struct _LDOUBLE
{
  /* 0x0000 */ unsigned char ld[10];
} LDOUBLE, *PLDOUBLE; /* size: 0x000a */

typedef struct _LDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0008 */ struct _LIST_ENTRY InMemoryOrderLinks;
  /* 0x0010 */ struct _LIST_ENTRY InInitializationOrderLinks;
  /* 0x0018 */ void* DllBase;
  /* 0x001c */ void* EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _UNICODE_STRING FullDllName;
  /* 0x002c */ struct _UNICODE_STRING BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short TlsIndex;
  union
  {
    /* 0x003c */ struct _LIST_ENTRY HashLinks;
    struct
    {
      /* 0x003c */ void* SectionPointer;
      /* 0x0040 */ unsigned long CheckSum;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0044 */ unsigned long TimeDateStamp;
    /* 0x0044 */ void* LoadedImports;
  }; /* size: 0x0004 */
  /* 0x0048 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
  /* 0x004c */ void* PatchInformation;
  /* 0x0050 */ struct _LIST_ENTRY ForwarderLinks;
  /* 0x0058 */ struct _LIST_ENTRY ServiceTagLinks;
  /* 0x0060 */ struct _LIST_ENTRY StaticLinks;
} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY; /* size: 0x0068 */

typedef struct _LDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ struct LIST_ENTRY32 InMemoryOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY32 InInitializationOrderLinks;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short TlsIndex;
  union
  {
    /* 0x003c */ struct LIST_ENTRY32 HashLinks;
    struct
    {
      /* 0x003c */ unsigned long SectionPointer;
      /* 0x0040 */ unsigned long CheckSum;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0044 */ unsigned long TimeDateStamp;
    /* 0x0044 */ unsigned long LoadedImports;
  }; /* size: 0x0004 */
} LDR_DATA_TABLE_ENTRY32, *PLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

typedef struct _LDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY64 InMemoryOrderLinks;
  /* 0x0020 */ struct LIST_ENTRY64 InInitializationOrderLinks;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct LIST_ENTRY64 HashLinks;
    struct
    {
      /* 0x0070 */ unsigned __int64 SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ unsigned __int64 LoadedImports;
  }; /* size: 0x0008 */
} LDR_DATA_TABLE_ENTRY64, *PLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0008 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x000c */ void* DllBase;
  /* 0x0010 */ unsigned long SizeOfImage;
} LDR_DLL_LOADED_NOTIFICATION_DATA, *PLDR_DLL_LOADED_NOTIFICATION_DATA; /* size: 0x0014 */

typedef union _LDR_DLL_NOTIFICATION_DATA
{
  union
  {
    /* 0x0000 */ struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    /* 0x0000 */ struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
  }; /* size: 0x0014 */
} LDR_DLL_NOTIFICATION_DATA, *PLDR_DLL_NOTIFICATION_DATA; /* size: 0x0014 */

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0008 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x000c */ void* DllBase;
  /* 0x0010 */ unsigned long SizeOfImage;
} LDR_DLL_UNLOADED_NOTIFICATION_DATA, *PLDR_DLL_UNLOADED_NOTIFICATION_DATA; /* size: 0x0014 */

typedef struct _LDR_ENUM_RESOURCE_ENTRY
{
  /* 0x0000 */ union
  {
    union
    {
      /* 0x0000 */ unsigned long NameOrId;
      /* 0x0000 */ struct _IMAGE_RESOURCE_DIRECTORY_STRING* Name;
      struct
      {
        /* 0x0000 */ unsigned short Id;
        /* 0x0002 */ unsigned short NameIsPresent;
      }; /* size: 0x0004 */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Path[3];
  /* 0x000c */ void* Data;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Reserved;
} LDR_ENUM_RESOURCE_ENTRY, *PLDR_ENUM_RESOURCE_ENTRY; /* size: 0x0018 */

typedef struct _LDR_FAILURE_DATA
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ wchar_t ImageName[32];
  /* 0x0044 */ wchar_t AdditionalInfo[32];
} LDR_FAILURE_DATA, *PLDR_FAILURE_DATA; /* size: 0x0084 */

typedef struct _LDR_IMPORT_CALLBACK_INFO
{
  /* 0x0000 */ void* ImportCallbackRoutine /* function */;
  /* 0x0004 */ void* ImportCallbackParameter;
} LDR_IMPORT_CALLBACK_INFO, *PLDR_IMPORT_CALLBACK_INFO; /* size: 0x0008 */

typedef struct _LDR_IMPORT_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0008 */ struct _LDR_DATA_TABLE_ENTRY* Entry;
  /* 0x000c */ unsigned long Count;
} LDR_IMPORT_RECORD, *PLDR_IMPORT_RECORD; /* size: 0x0010 */

typedef struct _LDR_SECTION_INFO
{
  /* 0x0000 */ void* SectionHandle;
  /* 0x0004 */ unsigned long DesiredAccess;
  /* 0x0008 */ struct _OBJECT_ATTRIBUTES* ObjA;
  /* 0x000c */ unsigned long SectionPageProtection;
  /* 0x0010 */ unsigned long AllocationAttributes;
} LDR_SECTION_INFO, *PLDR_SECTION_INFO; /* size: 0x0014 */

typedef struct _LDR_SERVICE_TAG_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0008 */ unsigned long ServiceTag;
  /* 0x000c */ unsigned long Count;
} LDR_SERVICE_TAG_RECORD, *PLDR_SERVICE_TAG_RECORD; /* size: 0x0010 */

typedef struct _LDR_VERIFY_IMAGE_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
  /* 0x0010 */ struct _LDR_SECTION_INFO SectionInfo;
  /* 0x0024 */ unsigned short ImageCharacteristics;
  /* 0x0026 */ char __PADDING__[2];
} LDR_VERIFY_IMAGE_INFO, *PLDR_VERIFY_IMAGE_INFO; /* size: 0x0028 */

typedef struct _LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} LDT_ENTRY, *PLDT_ENTRY; /* size: 0x0008 */

typedef struct _LDT_INFORMATION
{
  /* 0x0000 */ unsigned long Start;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ struct _LDT_ENTRY LdtEntries[1];
} LDT_INFORMATION, *PLDT_INFORMATION; /* size: 0x0010 */

typedef struct _LDT_SIZE
{
  /* 0x0000 */ unsigned long Length;
} LDT_SIZE, *PLDT_SIZE; /* size: 0x0004 */

typedef struct _LINK_TRACKING_INFORMATION
{
  /* 0x0000 */ enum _LINK_TRACKING_INFORMATION_TYPE Type;
  /* 0x0004 */ unsigned char VolumeId[16];
} LINK_TRACKING_INFORMATION, *PLINK_TRACKING_INFORMATION; /* size: 0x0014 */

typedef enum _LINK_TRACKING_INFORMATION_TYPE
{
  NtfsLinkTrackingInformation = 0,
  DfsLinkTrackingInformation = 1,
} LINK_TRACKING_INFORMATION_TYPE, *PLINK_TRACKING_INFORMATION_TYPE;

typedef struct _LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY* Flink;
  /* 0x0004 */ struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; /* size: 0x0008 */

typedef struct _LOADED_IMAGE
{
  /* 0x0000 */ char* ModuleName;
  /* 0x0004 */ void* hFile;
  /* 0x0008 */ unsigned char* MappedAddress;
  /* 0x000c */ struct _IMAGE_NT_HEADERS* FileHeader;
  /* 0x0010 */ struct _IMAGE_SECTION_HEADER* LastRvaSection;
  /* 0x0014 */ unsigned long NumberOfSections;
  /* 0x0018 */ struct _IMAGE_SECTION_HEADER* Sections;
  /* 0x001c */ unsigned long Characteristics;
  /* 0x0020 */ unsigned char fSystemImage;
  /* 0x0021 */ unsigned char fDOSImage;
  /* 0x0022 */ unsigned char fReadOnly;
  /* 0x0023 */ unsigned char Version;
  /* 0x0024 */ struct _LIST_ENTRY Links;
  /* 0x002c */ unsigned long SizeOfImage;
} LOADED_IMAGE, *PLOADED_IMAGE; /* size: 0x0030 */

typedef struct _LOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0004 */ void* lpBaseOfDll;
  /* 0x0008 */ unsigned long dwDebugInfoFileOffset;
  /* 0x000c */ unsigned long nDebugInfoSize;
  /* 0x0010 */ void* lpImageName;
  /* 0x0014 */ unsigned short fUnicode;
  /* 0x0016 */ char __PADDING__[2];
} LOAD_DLL_DEBUG_INFO, *PLOAD_DLL_DEBUG_INFO; /* size: 0x0018 */

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP
{
  RelationProcessorCore = 0,
  RelationNumaNode = 1,
  RelationCache = 2,
  RelationProcessorPackage = 3,
} LOGICAL_PROCESSOR_RELATIONSHIP, *PLOGICAL_PROCESSOR_RELATIONSHIP;

typedef struct _LONGDOUBLE
{
  /* 0x0000 */ double x;
} LONGDOUBLE, *PLONGDOUBLE; /* size: 0x0008 */

typedef struct _LONG_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long* pData;
} LONG_SIZEDARR, *PLONG_SIZEDARR; /* size: 0x0008 */

typedef struct _LPC_CLIENT_DIED_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0018 */ union _LARGE_INTEGER CreateTime;
} LPC_CLIENT_DIED_MSG, *PLPC_CLIENT_DIED_MSG; /* size: 0x0020 */

typedef struct _LPC_UNREGISTER_PROCESS_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0018 */ void* UniqueProcessId;
  /* 0x001c */ long __PADDING__[1];
} LPC_UNREGISTER_PROCESS_MSG, *PLPC_UNREGISTER_PROCESS_MSG; /* size: 0x0020 */

typedef struct _LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} LUID, *PLUID; /* size: 0x0008 */

typedef struct _LUID_AND_ATTRIBUTES
{
  /* 0x0000 */ struct _LUID Luid;
  /* 0x0008 */ unsigned long Attributes;
} LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES; /* size: 0x000c */

typedef struct _LUNICODE_STRING
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long MaximumLength;
  /* 0x0008 */ wchar_t* Buffer;
} LUNICODE_STRING, *PLUNICODE_STRING; /* size: 0x000c */

typedef struct _LUTF8_STRING
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long MaximumLength;
  /* 0x0008 */ unsigned char* Buffer;
} LUTF8_STRING, *PLUTF8_STRING; /* size: 0x000c */

typedef struct _MALLOC_FREE_STRUCT
{
  /* 0x0000 */ void* pfnAllocate /* function */;
  /* 0x0004 */ void* pfnFree /* function */;
} MALLOC_FREE_STRUCT, *PMALLOC_FREE_STRUCT; /* size: 0x0008 */

typedef enum _MANDATORY_LEVEL
{
  MandatoryLevelUntrusted = 0,
  MandatoryLevelLow = 1,
  MandatoryLevelMedium = 2,
  MandatoryLevelHigh = 3,
  MandatoryLevelSystem = 4,
  MandatoryLevelSecureProcess = 5,
  MandatoryLevelCount = 6,
} MANDATORY_LEVEL, *PMANDATORY_LEVEL;

typedef struct _MAT2
{
  /* 0x0000 */ struct _FIXED eM11;
  /* 0x0004 */ struct _FIXED eM12;
  /* 0x0008 */ struct _FIXED eM21;
  /* 0x000c */ struct _FIXED eM22;
} MAT2, *PMAT2; /* size: 0x0010 */

typedef struct _MCA_EXCEPTION
{
  /* 0x0000 */ unsigned long VersionNumber;
  /* 0x0004 */ enum MCA_EXCEPTION_TYPE ExceptionType;
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long ProcessorNumber;
  /* 0x0014 */ unsigned long Reserved1;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned char BankNumber;
        /* 0x0019 */ unsigned char Reserved2[7];
        /* 0x0020 */ union _MCI_STATS Status;
        /* 0x0028 */ union _MCI_ADDR Address;
        /* 0x0030 */ unsigned __int64 Misc;
      } /* size: 0x0020 */ Mca;
      struct
      {
        /* 0x0018 */ unsigned __int64 Address;
        /* 0x0020 */ unsigned __int64 Type;
      } /* size: 0x0010 */ Mce;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
  /* 0x0038 */ unsigned long ExtCnt;
  /* 0x003c */ unsigned long Reserved3;
  /* 0x0040 */ unsigned __int64 ExtReg[24];
} MCA_EXCEPTION, *PMCA_EXCEPTION; /* size: 0x0100 */

typedef union _MCI_ADDR
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Address;
      /* 0x0004 */ unsigned long Reserved;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_ADDR, *PMCI_ADDR; /* size: 0x0008 */

typedef union _MCI_STATS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short McaCod;
      /* 0x0002 */ unsigned short MsCod;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OtherInfo : 25; /* bit position: 0 */
        /* 0x0004 */ unsigned long Damage : 1; /* bit position: 25 */
        /* 0x0004 */ unsigned long AddressValid : 1; /* bit position: 26 */
        /* 0x0004 */ unsigned long MiscValid : 1; /* bit position: 27 */
        /* 0x0004 */ unsigned long Enabled : 1; /* bit position: 28 */
        /* 0x0004 */ unsigned long UnCorrected : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long OverFlow : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Valid : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0008 */ MciStats;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_STATS, *PMCI_STATS; /* size: 0x0008 */

typedef struct _MEMORYSTATUS
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned long dwTotalPhys;
  /* 0x000c */ unsigned long dwAvailPhys;
  /* 0x0010 */ unsigned long dwTotalPageFile;
  /* 0x0014 */ unsigned long dwAvailPageFile;
  /* 0x0018 */ unsigned long dwTotalVirtual;
  /* 0x001c */ unsigned long dwAvailVirtual;
} MEMORYSTATUS, *PMEMORYSTATUS; /* size: 0x0020 */

typedef struct _MEMORYSTATUSEX
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 ullTotalPhys;
  /* 0x0010 */ unsigned __int64 ullAvailPhys;
  /* 0x0018 */ unsigned __int64 ullTotalPageFile;
  /* 0x0020 */ unsigned __int64 ullAvailPageFile;
  /* 0x0028 */ unsigned __int64 ullTotalVirtual;
  /* 0x0030 */ unsigned __int64 ullAvailVirtual;
  /* 0x0038 */ unsigned __int64 ullAvailExtendedVirtual;
} MEMORYSTATUSEX, *PMEMORYSTATUSEX; /* size: 0x0040 */

typedef struct _MEMORY_BASIC_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0004 */ void* AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionSize;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Protect;
  /* 0x0018 */ unsigned long Type;
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION; /* size: 0x001c */

typedef struct _MEMORY_BASIC_INFORMATION32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionSize;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Protect;
  /* 0x0018 */ unsigned long Type;
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32; /* size: 0x001c */

typedef struct _MEMORY_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ unsigned long __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ unsigned long __alignment2;
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _MEMORY_FRAME_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 UseDescription : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ListDescription : 3; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Reserved0 : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Pinned : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 DontUse : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 57 */
    /* 0x0000 */ unsigned __int64 Reserved : 4; /* bit position: 60 */
  }; /* bitfield */
} MEMORY_FRAME_INFORMATION, *PMEMORY_FRAME_INFORMATION; /* size: 0x0008 */

typedef enum _MEMORY_INFORMATION_CLASS
{
  MemoryBasicInformation = 0,
  MemoryWorkingSetInformation = 1,
  MemoryMappedFilenameInformation = 2,
  MemoryRegionInformation = 3,
  MemoryWorkingSetExInformation = 4,
} MEMORY_INFORMATION_CLASS, *PMEMORY_INFORMATION_CLASS;

typedef struct _MEMORY_REGION_INFORMATION
{
  /* 0x0000 */ void* AllocationBase;
  /* 0x0004 */ unsigned long AllocationProtect;
  /* 0x0008 */ unsigned long RegionType;
  /* 0x000c */ unsigned long RegionSize;
} MEMORY_REGION_INFORMATION, *PMEMORY_REGION_INFORMATION; /* size: 0x0010 */

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE
{
  LowMemoryResourceNotification = 0,
  HighMemoryResourceNotification = 1,
} MEMORY_RESOURCE_NOTIFICATION_TYPE, *PMEMORY_RESOURCE_NOTIFICATION_TYPE;

typedef struct _MEMORY_WORKING_SET_BLOCK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Protection : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned long ShareCount : 3; /* bit position: 5 */
    /* 0x0000 */ unsigned long Shared : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned long Node : 3; /* bit position: 9 */
    /* 0x0000 */ unsigned long VirtualPage : 20; /* bit position: 12 */
  }; /* bitfield */
} MEMORY_WORKING_SET_BLOCK, *PMEMORY_WORKING_SET_BLOCK; /* size: 0x0004 */

typedef struct _MEMORY_WORKING_SET_EX_BLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ShareCount : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned long Win32Protection : 11; /* bit position: 4 */
      /* 0x0000 */ unsigned long Shared : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long Node : 6; /* bit position: 16 */
      /* 0x0000 */ unsigned long Locked : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned long LargePage : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned long Priority : 3; /* bit position: 24 */
      /* 0x0000 */ unsigned long Reserved : 5; /* bit position: 27 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Valid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long Reserved0 : 14; /* bit position: 1 */
        /* 0x0000 */ unsigned long Shared : 1; /* bit position: 15 */
        /* 0x0000 */ unsigned long Reserved1 : 6; /* bit position: 16 */
        /* 0x0000 */ unsigned long Location : 2; /* bit position: 22 */
        /* 0x0000 */ unsigned long Reserved2 : 8; /* bit position: 24 */
      }; /* bitfield */
    } /* size: 0x0004 */ Invalid;
  }; /* size: 0x0004 */
} MEMORY_WORKING_SET_EX_BLOCK, *PMEMORY_WORKING_SET_EX_BLOCK; /* size: 0x0004 */

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION
{
  /* 0x0000 */ void* VirtualAddress;
  union
  {
    union
    {
      /* 0x0004 */ struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
      /* 0x0004 */ unsigned long Long;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
} MEMORY_WORKING_SET_EX_INFORMATION, *PMEMORY_WORKING_SET_EX_INFORMATION; /* size: 0x0008 */

typedef enum _MEMORY_WORKING_SET_EX_LOCATION
{
  MemoryLocationInvalid = 0,
  MemoryLocationResident = 1,
  MemoryLocationPagefile = 2,
  MemoryLocationReserved = 3,
} MEMORY_WORKING_SET_EX_LOCATION, *PMEMORY_WORKING_SET_EX_LOCATION;

typedef struct _MEMORY_WORKING_SET_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
} MEMORY_WORKING_SET_INFORMATION, *PMEMORY_WORKING_SET_INFORMATION; /* size: 0x0008 */

typedef struct _MENU_EVENT_RECORD
{
  /* 0x0000 */ unsigned int dwCommandId;
} MENU_EVENT_RECORD, *PMENU_EVENT_RECORD; /* size: 0x0004 */

typedef struct _MESSAGE_RESOURCE_BLOCK
{
  /* 0x0000 */ unsigned long LowId;
  /* 0x0004 */ unsigned long HighId;
  /* 0x0008 */ unsigned long OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK; /* size: 0x000c */

typedef struct _MESSAGE_RESOURCE_DATA
{
  /* 0x0000 */ unsigned long NumberOfBlocks;
  /* 0x0004 */ struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA; /* size: 0x0010 */

typedef struct _MESSAGE_RESOURCE_ENTRY
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned char Text[1];
  /* 0x0005 */ char __PADDING__[1];
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY; /* size: 0x0006 */

typedef struct _METADC
{
  /* 0x0000 */ int xMwo;
  /* 0x0004 */ int yMwo;
  /* 0x0008 */ int xMwe;
  /* 0x000c */ int yMwe;
  /* 0x0010 */ int xre;
  /* 0x0014 */ int yre;
  /* 0x0018 */ struct _METADC* pNext;
} METADC, *PMETADC; /* size: 0x001c */

typedef struct _METAINFO
{
  /* 0x0000 */ struct _METADC headDc;
  /* 0x001c */ int xwo;
  /* 0x0020 */ int ywo;
  /* 0x0024 */ int xwe;
  /* 0x0028 */ int ywe;
  /* 0x002c */ int xro;
  /* 0x0030 */ int yro;
} METAINFO, *PMETAINFO; /* size: 0x0034 */

typedef struct _MIDL_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char* Format /* zero-length array */;
} MIDL_FORMAT_STRING, *PMIDL_FORMAT_STRING; /* size: 0x0002 */

typedef struct _MIDL_SERVER_INFO_
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0004 */ void* const* DispatchTable /* function */;
  /* 0x0008 */ const unsigned char* ProcString;
  /* 0x000c */ const unsigned short* FmtStringOffset;
  /* 0x0010 */ void* const* ThunkTable /* function */;
  /* 0x0014 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0018 */ unsigned long nCount;
  /* 0x001c */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_SERVER_INFO_, *PMIDL_SERVER_INFO_; /* size: 0x0020 */

typedef struct _MIDL_STUBLESS_PROXY_INFO
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0004 */ const unsigned char* ProcFormatString;
  /* 0x0008 */ const unsigned short* FormatStringOffset;
  /* 0x000c */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0010 */ unsigned long nCount;
  /* 0x0014 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_STUBLESS_PROXY_INFO, *PMIDL_STUBLESS_PROXY_INFO; /* size: 0x0018 */

typedef struct _MIDL_STUB_DESC
{
  /* 0x0000 */ void* RpcInterfaceInformation;
  /* 0x0004 */ void* pfnAllocate /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
  union
  {
    union
    {
      /* 0x000c */ void** pAutoHandle;
      /* 0x000c */ void** pPrimitiveHandle;
      /* 0x000c */ struct __GENERIC_BINDING_INFO* pGenericBindingInfo;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ IMPLICIT_HANDLE_INFO;
  /* 0x0010 */ void* const* apfnNdrRundownRoutines /* function */;
  /* 0x0014 */ const struct _GENERIC_BINDING_ROUTINE_PAIR* aGenericBindingRoutinePairs;
  /* 0x0018 */ void* const* apfnExprEval /* function */;
  /* 0x001c */ const struct _XMIT_ROUTINE_QUINTUPLE* aXmitQuintuple;
  /* 0x0020 */ const unsigned char* pFormatTypes;
  /* 0x0024 */ int fCheckBounds;
  /* 0x0028 */ unsigned long Version;
  /* 0x002c */ struct _MALLOC_FREE_STRUCT* pMallocFreeStruct;
  /* 0x0030 */ long MIDLVersion;
  /* 0x0034 */ const struct _COMM_FAULT_OFFSETS* CommFaultOffsets;
  /* 0x0038 */ const struct _USER_MARSHAL_ROUTINE_QUADRUPLE* aUserMarshalQuadruple;
  /* 0x003c */ void* const* NotifyRoutineTable /* function */;
  /* 0x0040 */ unsigned long mFlags;
  /* 0x0044 */ const struct _NDR_CS_ROUTINES* CsRoutineTables;
  /* 0x0048 */ void* ProxyServerInfo;
  /* 0x004c */ const struct _NDR_EXPR_DESC* pExprInfo;
} MIDL_STUB_DESC, *PMIDL_STUB_DESC; /* size: 0x0050 */

typedef struct _MIDL_STUB_MESSAGE
{
  /* 0x0000 */ struct _RPC_MESSAGE* RpcMsg;
  /* 0x0004 */ unsigned char* Buffer;
  /* 0x0008 */ unsigned char* BufferStart;
  /* 0x000c */ unsigned char* BufferEnd;
  /* 0x0010 */ unsigned char* BufferMark;
  /* 0x0014 */ unsigned long BufferLength;
  /* 0x0018 */ unsigned long MemorySize;
  /* 0x001c */ unsigned char* Memory;
  /* 0x0020 */ unsigned char IsClient;
  /* 0x0021 */ unsigned char Pad;
  /* 0x0022 */ unsigned short uFlags2;
  /* 0x0024 */ int ReuseBuffer;
  /* 0x0028 */ struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
  /* 0x002c */ struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
  /* 0x0030 */ int IgnoreEmbeddedPointers;
  /* 0x0034 */ unsigned char* PointerBufferMark;
  /* 0x0038 */ unsigned char CorrDespIncrement;
  /* 0x0039 */ unsigned char uFlags;
  /* 0x003a */ unsigned short UniquePtrCount;
  /* 0x003c */ unsigned long MaxCount;
  /* 0x0040 */ unsigned long Offset;
  /* 0x0044 */ unsigned long ActualCount;
  /* 0x0048 */ void* pfnAllocate /* function */;
  /* 0x004c */ void* pfnFree /* function */;
  /* 0x0050 */ unsigned char* StackTop;
  /* 0x0054 */ unsigned char* pPresentedType;
  /* 0x0058 */ unsigned char* pTransmitType;
  /* 0x005c */ void* SavedHandle;
  /* 0x0060 */ const struct _MIDL_STUB_DESC* StubDesc;
  /* 0x0064 */ struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
  /* 0x0068 */ unsigned long FullPtrRefId;
  /* 0x006c */ unsigned long PointerLength;
  struct /* bitfield */
  {
    /* 0x0070 */ int fInDontFree : 1; /* bit position: 0 */
    /* 0x0070 */ int fDontCallFreeInst : 1; /* bit position: 1 */
    /* 0x0070 */ int fInOnlyParam : 1; /* bit position: 2 */
    /* 0x0070 */ int fHasReturn : 1; /* bit position: 3 */
    /* 0x0070 */ int fHasExtensions : 1; /* bit position: 4 */
    /* 0x0070 */ int fHasNewCorrDesc : 1; /* bit position: 5 */
    /* 0x0070 */ int fIsIn : 1; /* bit position: 6 */
    /* 0x0070 */ int fIsOut : 1; /* bit position: 7 */
    /* 0x0070 */ int fIsOicf : 1; /* bit position: 8 */
    /* 0x0070 */ int fBufferValid : 1; /* bit position: 9 */
    /* 0x0070 */ int fHasMemoryValidateCallback : 1; /* bit position: 10 */
    /* 0x0070 */ int fInFree : 1; /* bit position: 11 */
    /* 0x0070 */ int fNeedMCCP : 1; /* bit position: 12 */
    /* 0x0070 */ int fUnused : 3; /* bit position: 13 */
    /* 0x0070 */ int fUnused2 : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x0074 */ unsigned long dwDestContext;
  /* 0x0078 */ void* pvDestContext;
  /* 0x007c */ struct
  {
    /* 0x007c */ void* pad[2];
    /* 0x0084 */ void* userContext;
  } /* size: 0x000c */** SavedContextHandles;
  /* 0x0080 */ long ParamNumber;
  /* 0x0084 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x0088 */ struct ARRAY_INFO* pArrayInfo;
  /* 0x008c */ unsigned long* SizePtrCountArray;
  /* 0x0090 */ unsigned long* SizePtrOffsetArray;
  /* 0x0094 */ unsigned long* SizePtrLengthArray;
  /* 0x0098 */ void* pArgQueue;
  /* 0x009c */ unsigned long dwStubPhase;
  /* 0x00a0 */ void* LowStackMark;
  /* 0x00a4 */ struct _NDR_ASYNC_MESSAGE* pAsyncMsg;
  /* 0x00a8 */ struct _NDR_CORRELATION_INFO* pCorrInfo;
  /* 0x00ac */ unsigned char* pCorrMemory;
  /* 0x00b0 */ void* pMemoryList;
  /* 0x00b4 */ int pCSInfo;
  /* 0x00b8 */ unsigned char* ConformanceMark;
  /* 0x00bc */ unsigned char* VarianceMark;
  /* 0x00c0 */ int Unused;
  /* 0x00c4 */ struct _NDR_PROC_CONTEXT* pContext;
  /* 0x00c8 */ void* ContextHandleHash;
  /* 0x00cc */ void* pUserMarshalList;
  /* 0x00d0 */ int Reserved51_3;
  /* 0x00d4 */ int Reserved51_4;
  /* 0x00d8 */ int Reserved51_5;
} MIDL_STUB_MESSAGE, *PMIDL_STUB_MESSAGE; /* size: 0x00dc */

typedef struct _MIDL_SYNTAX_INFO
{
  /* 0x0000 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x0014 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0018 */ const unsigned char* ProcString;
  /* 0x001c */ const unsigned short* FmtStringOffset;
  /* 0x0020 */ const unsigned char* TypeString;
  /* 0x0024 */ const void* aUserMarshalQuadruple;
  /* 0x0028 */ unsigned long pReserved1;
  /* 0x002c */ unsigned long pReserved2;
} MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO; /* size: 0x0030 */

typedef struct _MIDL_TYPE_PICKLING_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned int Reserved[3];
} MIDL_TYPE_PICKLING_INFO, *PMIDL_TYPE_PICKLING_INFO; /* size: 0x0014 */

typedef struct _MINIDUMP_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackRoutine /* function */;
  /* 0x0004 */ void* CallbackParam;
} MINIDUMP_CALLBACK_INFORMATION, *PMINIDUMP_CALLBACK_INFORMATION; /* size: 0x0008 */

typedef struct _MINIDUMP_CALLBACK_INPUT
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ void* ProcessHandle;
  /* 0x0008 */ unsigned long CallbackType;
  union
  {
    /* 0x000c */ HRESULT Status;
    /* 0x000c */ struct _MINIDUMP_THREAD_CALLBACK Thread;
    /* 0x000c */ struct _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
    /* 0x000c */ struct _MINIDUMP_MODULE_CALLBACK Module;
    /* 0x000c */ struct _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
    /* 0x000c */ struct _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
    /* 0x000c */ struct _MINIDUMP_IO_CALLBACK Io;
    /* 0x000c */ struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK ReadMemoryFailure;
    struct
    {
      /* 0x000c */ unsigned long SecondaryFlags;
      /* 0x0010 */ long __PADDING__[189];
    }; /* size: 0x02f8 */
  }; /* size: 0x02f8 */
} MINIDUMP_CALLBACK_INPUT, *PMINIDUMP_CALLBACK_INPUT; /* size: 0x0304 */

typedef struct _MINIDUMP_CALLBACK_OUTPUT
{
  union
  {
    /* 0x0000 */ unsigned long ModuleWriteFlags;
    /* 0x0000 */ unsigned long ThreadWriteFlags;
    /* 0x0000 */ unsigned long SecondaryFlags;
    struct
    {
      /* 0x0000 */ unsigned __int64 MemoryBase;
      /* 0x0008 */ unsigned long MemorySize;
    }; /* size: 0x000c */
    struct
    {
      /* 0x0000 */ int CheckCancel;
      /* 0x0004 */ int Cancel;
    }; /* size: 0x0008 */
    /* 0x0000 */ void* Handle;
    struct
    {
      /* 0x0000 */ struct _MINIDUMP_MEMORY_INFO VmRegion;
      /* 0x0030 */ int Continue;
    }; /* size: 0x0034 */
    struct
    {
      /* 0x0000 */ HRESULT Status;
      /* 0x0004 */ long __PADDING__[12];
    }; /* size: 0x0034 */
  }; /* size: 0x0034 */
} MINIDUMP_CALLBACK_OUTPUT, *PMINIDUMP_CALLBACK_OUTPUT; /* size: 0x0034 */

typedef enum _MINIDUMP_CALLBACK_TYPE
{
  ModuleCallback = 0,
  ThreadCallback = 1,
  ThreadExCallback = 2,
  IncludeThreadCallback = 3,
  IncludeModuleCallback = 4,
  MemoryCallback = 5,
  CancelCallback = 6,
  WriteKernelMinidumpCallback = 7,
  KernelMinidumpStatusCallback = 8,
  RemoveMemoryCallback = 9,
  IncludeVmRegionCallback = 10,
  IoStartCallback = 11,
  IoWriteAllCallback = 12,
  IoFinishCallback = 13,
  ReadMemoryFailureCallback = 14,
  SecondaryFlagsCallback = 15,
} MINIDUMP_CALLBACK_TYPE, *PMINIDUMP_CALLBACK_TYPE;

typedef struct _MINIDUMP_DIRECTORY
{
  /* 0x0000 */ unsigned int StreamType;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Location;
} MINIDUMP_DIRECTORY, *PMINIDUMP_DIRECTORY; /* size: 0x000c */

typedef struct _MINIDUMP_EXCEPTION
{
  /* 0x0000 */ unsigned int ExceptionCode;
  /* 0x0004 */ unsigned int ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned int NumberParameters;
  /* 0x001c */ unsigned int __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} MINIDUMP_EXCEPTION, *PMINIDUMP_EXCEPTION; /* size: 0x0098 */

typedef struct _MINIDUMP_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ struct _EXCEPTION_POINTERS* ExceptionPointers;
  /* 0x0008 */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION, *PMINIDUMP_EXCEPTION_INFORMATION; /* size: 0x000c */

typedef struct _MINIDUMP_EXCEPTION_INFORMATION64
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned __int64 ExceptionRecord;
  /* 0x000c */ unsigned __int64 ContextRecord;
  /* 0x0014 */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION64, *PMINIDUMP_EXCEPTION_INFORMATION64; /* size: 0x0018 */

typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 MinimumAddress;
  /* 0x0008 */ unsigned __int64 MaximumAddress;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned int EntryCount;
  /* 0x001c */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_DESCRIPTOR, *PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int SizeOfNativeDescriptor;
  /* 0x000c */ unsigned int SizeOfFunctionEntry;
  /* 0x0010 */ unsigned int NumberOfDescriptors;
  /* 0x0014 */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_STREAM, *PMINIDUMP_FUNCTION_TABLE_STREAM; /* size: 0x0018 */

typedef struct _MINIDUMP_HANDLE_DATA_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int NumberOfDescriptors;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_DATA_STREAM, *PMINIDUMP_HANDLE_DATA_STREAM; /* size: 0x0010 */

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
} MINIDUMP_HANDLE_DESCRIPTOR, *PMINIDUMP_HANDLE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR_2
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
  /* 0x0020 */ unsigned long ObjectInfoRva;
  /* 0x0024 */ unsigned int Reserved0;
} MINIDUMP_HANDLE_DESCRIPTOR_2, *PMINIDUMP_HANDLE_DESCRIPTOR_2; /* size: 0x0028 */

typedef struct _MINIDUMP_HANDLE_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextInfoRva;
  /* 0x0004 */ unsigned int InfoType;
  /* 0x0008 */ unsigned int SizeOfInfo;
} MINIDUMP_HANDLE_OBJECT_INFORMATION, *PMINIDUMP_HANDLE_OBJECT_INFORMATION; /* size: 0x000c */

typedef enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE
{
  MiniHandleObjectInformationNone = 0,
  MiniThreadInformation1 = 1,
  MiniMutantInformation1 = 2,
  MiniMutantInformation2 = 3,
  MiniProcessInformation1 = 4,
  MiniProcessInformation2 = 5,
  MiniHandleObjectInformationTypeMax = 6,
} MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE, *PMINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;

typedef struct _MINIDUMP_HANDLE_OPERATION_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_OPERATION_LIST, *PMINIDUMP_HANDLE_OPERATION_LIST; /* size: 0x0010 */

typedef struct _MINIDUMP_HEADER
{
  /* 0x0000 */ unsigned int Signature;
  /* 0x0004 */ unsigned int Version;
  /* 0x0008 */ unsigned int NumberOfStreams;
  /* 0x000c */ unsigned long StreamDirectoryRva;
  /* 0x0010 */ unsigned int CheckSum;
  union
  {
    /* 0x0014 */ unsigned int Reserved;
    /* 0x0014 */ unsigned int TimeDateStamp;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned __int64 Flags;
} MINIDUMP_HEADER, *PMINIDUMP_HEADER; /* size: 0x0020 */

typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
} MINIDUMP_INCLUDE_MODULE_CALLBACK, *PMINIDUMP_INCLUDE_MODULE_CALLBACK; /* size: 0x0008 */

typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
} MINIDUMP_INCLUDE_THREAD_CALLBACK, *PMINIDUMP_INCLUDE_THREAD_CALLBACK; /* size: 0x0004 */

typedef struct _MINIDUMP_IO_CALLBACK
{
  /* 0x0000 */ void* Handle;
  /* 0x0004 */ unsigned __int64 Offset;
  /* 0x000c */ void* Buffer;
  /* 0x0010 */ unsigned long BufferBytes;
} MINIDUMP_IO_CALLBACK, *PMINIDUMP_IO_CALLBACK; /* size: 0x0014 */

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned int DataSize;
  /* 0x0004 */ unsigned long Rva;
} MINIDUMP_LOCATION_DESCRIPTOR, *PMINIDUMP_LOCATION_DESCRIPTOR; /* size: 0x0008 */

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 DataSize;
  /* 0x0008 */ unsigned __int64 Rva;
} MINIDUMP_LOCATION_DESCRIPTOR64, *PMINIDUMP_LOCATION_DESCRIPTOR64; /* size: 0x0010 */

typedef struct _MINIDUMP_MEMORY64_LIST
{
  /* 0x0000 */ unsigned __int64 NumberOfMemoryRanges;
  /* 0x0008 */ unsigned __int64 BaseRva;
  /* 0x0010 */ struct _MINIDUMP_MEMORY_DESCRIPTOR64* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY64_LIST, *PMINIDUMP_MEMORY64_LIST; /* size: 0x0010 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_MEMORY_DESCRIPTOR, *PMINIDUMP_MEMORY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ unsigned __int64 DataSize;
} MINIDUMP_MEMORY_DESCRIPTOR64, *PMINIDUMP_MEMORY_DESCRIPTOR64; /* size: 0x0010 */

typedef struct _MINIDUMP_MEMORY_INFO
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned int AllocationProtect;
  /* 0x0014 */ unsigned int __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned int State;
  /* 0x0024 */ unsigned int Protect;
  /* 0x0028 */ unsigned int Type;
  /* 0x002c */ unsigned int __alignment2;
} MINIDUMP_MEMORY_INFO, *PMINIDUMP_MEMORY_INFO; /* size: 0x0030 */

typedef struct _MINIDUMP_MEMORY_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned __int64 NumberOfEntries;
} MINIDUMP_MEMORY_INFO_LIST, *PMINIDUMP_MEMORY_INFO_LIST; /* size: 0x0010 */

typedef struct _MINIDUMP_MEMORY_LIST
{
  /* 0x0000 */ unsigned int NumberOfMemoryRanges;
  /* 0x0004 */ struct _MINIDUMP_MEMORY_DESCRIPTOR* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY_LIST, *PMINIDUMP_MEMORY_LIST; /* size: 0x0004 */

typedef struct _MINIDUMP_MISC_INFO
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
} MINIDUMP_MISC_INFO, *PMINIDUMP_MISC_INFO; /* size: 0x0018 */

typedef struct _MINIDUMP_MISC_INFO_2
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
} MINIDUMP_MISC_INFO_2, *PMINIDUMP_MISC_INFO_2; /* size: 0x002c */

typedef struct _MINIDUMP_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
  /* 0x0018 */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x004c */ struct _MINIDUMP_LOCATION_DESCRIPTOR CvRecord;
  /* 0x0054 */ struct _MINIDUMP_LOCATION_DESCRIPTOR MiscRecord;
  /* 0x005c */ unsigned __int64 Reserved0;
  /* 0x0064 */ unsigned __int64 Reserved1;
} MINIDUMP_MODULE, *PMINIDUMP_MODULE; /* size: 0x006c */

typedef struct _MINIDUMP_MODULE_CALLBACK
{
  /* 0x0000 */ wchar_t* FullPath;
  /* 0x0004 */ unsigned __int64 BaseOfImage;
  /* 0x000c */ unsigned long SizeOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x004c */ void* CvRecord;
  /* 0x0050 */ unsigned long SizeOfCvRecord;
  /* 0x0054 */ void* MiscRecord;
  /* 0x0058 */ unsigned long SizeOfMiscRecord;
} MINIDUMP_MODULE_CALLBACK, *PMINIDUMP_MODULE_CALLBACK; /* size: 0x005c */

typedef struct _MINIDUMP_MODULE_LIST
{
  /* 0x0000 */ unsigned int NumberOfModules;
  /* 0x0004 */ struct _MINIDUMP_MODULE* Modules /* zero-length array */;
} MINIDUMP_MODULE_LIST, *PMINIDUMP_MODULE_LIST; /* size: 0x0004 */

typedef struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long Bytes;
  /* 0x000c */ HRESULT FailureStatus;
} MINIDUMP_READ_MEMORY_FAILURE_CALLBACK, *PMINIDUMP_READ_MEMORY_FAILURE_CALLBACK; /* size: 0x0010 */

typedef enum _MINIDUMP_SECONDARY_FLAGS
{
  MiniSecondaryWithoutPowerInfo = 1,
  MiniSecondaryValidFlags = 1,
} MINIDUMP_SECONDARY_FLAGS, *PMINIDUMP_SECONDARY_FLAGS;

typedef enum _MINIDUMP_STREAM_TYPE
{
  UnusedStream = 0,
  ReservedStream0 = 1,
  ReservedStream1 = 2,
  ThreadListStream = 3,
  ModuleListStream = 4,
  MemoryListStream = 5,
  ExceptionStream = 6,
  SystemInfoStream = 7,
  ThreadExListStream = 8,
  Memory64ListStream = 9,
  CommentStreamA = 10,
  CommentStreamW = 11,
  HandleDataStream = 12,
  FunctionTableStream = 13,
  UnloadedModuleListStream = 14,
  MiscInfoStream = 15,
  MemoryInfoListStream = 16,
  ThreadInfoListStream = 17,
  HandleOperationListStream = 18,
  ceStreamNull = 0xffff8000,
  ceStreamSystemInfo = 0xffff8001,
  ceStreamException = 0xffff8002,
  ceStreamModuleList = 0xffff8003,
  ceStreamProcessList = 0xffff8004,
  ceStreamThreadList = 0xffff8005,
  ceStreamThreadContextList = 0xffff8006,
  ceStreamThreadCallStackList = 0xffff8007,
  ceStreamMemoryVirtualList = 0xffff8008,
  ceStreamMemoryPhysicalList = 0xffff8009,
  ceStreamBucketParameters = 0xffff800a,
  LastReservedStream = 0xffffffff,
} MINIDUMP_STREAM_TYPE, *PMINIDUMP_STREAM_TYPE;

typedef struct _MINIDUMP_STRING
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ wchar_t* Buffer /* zero-length array */;
} MINIDUMP_STRING, *PMINIDUMP_STRING; /* size: 0x0004 */

typedef struct _MINIDUMP_SYSTEM_INFO
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  union
  {
    /* 0x0006 */ unsigned short Reserved0;
    struct
    {
      /* 0x0006 */ unsigned char NumberOfProcessors;
      /* 0x0007 */ unsigned char ProductType;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x0008 */ unsigned int MajorVersion;
  /* 0x000c */ unsigned int MinorVersion;
  /* 0x0010 */ unsigned int BuildNumber;
  /* 0x0014 */ unsigned int PlatformId;
  /* 0x0018 */ unsigned long CSDVersionRva;
  union
  {
    /* 0x001c */ unsigned int Reserved1;
    struct
    {
      /* 0x001c */ unsigned short SuiteMask;
      /* 0x001e */ unsigned short Reserved2;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0020 */ union _CPU_INFORMATION Cpu;
} MINIDUMP_SYSTEM_INFO, *PMINIDUMP_SYSTEM_INFO; /* size: 0x0038 */

typedef struct _MINIDUMP_THREAD
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
} MINIDUMP_THREAD, *PMINIDUMP_THREAD; /* size: 0x0030 */

typedef struct _MINIDUMP_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x0008 */ struct _CONTEXT Context;
  /* 0x02d4 */ unsigned long SizeOfContext;
  /* 0x02d8 */ unsigned __int64 StackBase;
  /* 0x02e0 */ unsigned __int64 StackEnd;
} MINIDUMP_THREAD_CALLBACK, *PMINIDUMP_THREAD_CALLBACK; /* size: 0x02e8 */

typedef struct _MINIDUMP_THREAD_EX
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
  /* 0x0030 */ struct _MINIDUMP_MEMORY_DESCRIPTOR BackingStore;
} MINIDUMP_THREAD_EX, *PMINIDUMP_THREAD_EX; /* size: 0x0040 */

typedef struct _MINIDUMP_THREAD_EX_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x0008 */ struct _CONTEXT Context;
  /* 0x02d4 */ unsigned long SizeOfContext;
  /* 0x02d8 */ unsigned __int64 StackBase;
  /* 0x02e0 */ unsigned __int64 StackEnd;
  /* 0x02e8 */ unsigned __int64 BackingStoreBase;
  /* 0x02f0 */ unsigned __int64 BackingStoreEnd;
} MINIDUMP_THREAD_EX_CALLBACK, *PMINIDUMP_THREAD_EX_CALLBACK; /* size: 0x02f8 */

typedef struct _MINIDUMP_THREAD_EX_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD_EX* Threads /* zero-length array */;
} MINIDUMP_THREAD_EX_LIST, *PMINIDUMP_THREAD_EX_LIST; /* size: 0x0004 */

typedef struct _MINIDUMP_THREAD_INFO
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int DumpFlags;
  /* 0x0008 */ unsigned int DumpError;
  /* 0x000c */ unsigned int ExitStatus;
  /* 0x0010 */ unsigned __int64 CreateTime;
  /* 0x0018 */ unsigned __int64 ExitTime;
  /* 0x0020 */ unsigned __int64 KernelTime;
  /* 0x0028 */ unsigned __int64 UserTime;
  /* 0x0030 */ unsigned __int64 StartAddress;
  /* 0x0038 */ unsigned __int64 Affinity;
} MINIDUMP_THREAD_INFO, *PMINIDUMP_THREAD_INFO; /* size: 0x0040 */

typedef struct _MINIDUMP_THREAD_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned long NumberOfEntries;
} MINIDUMP_THREAD_INFO_LIST, *PMINIDUMP_THREAD_INFO_LIST; /* size: 0x000c */

typedef struct _MINIDUMP_THREAD_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD* Threads /* zero-length array */;
} MINIDUMP_THREAD_LIST, *PMINIDUMP_THREAD_LIST; /* size: 0x0004 */

typedef enum _MINIDUMP_TYPE
{
  MiniDumpNormal = 0,
  MiniDumpWithDataSegs = 1,
  MiniDumpWithFullMemory = 2,
  MiniDumpWithHandleData = 4,
  MiniDumpFilterMemory = 8,
  MiniDumpScanMemory = 16,
  MiniDumpWithUnloadedModules = 32,
  MiniDumpWithIndirectlyReferencedMemory = 64,
  MiniDumpFilterModulePaths = 128,
  MiniDumpWithProcessThreadData = 256,
  MiniDumpWithPrivateReadWriteMemory = 512,
  MiniDumpWithoutOptionalData = 1024,
  MiniDumpWithFullMemoryInfo = 2048,
  MiniDumpWithThreadInfo = 4096,
  MiniDumpWithCodeSegs = 8192,
  MiniDumpWithoutAuxiliaryState = 16384,
  MiniDumpWithFullAuxiliaryState = 0xffff8000,
  MiniDumpValidTypeFlags = 0xffffffff,
} MINIDUMP_TYPE, *PMINIDUMP_TYPE;

typedef struct _MINIDUMP_UNLOADED_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
} MINIDUMP_UNLOADED_MODULE, *PMINIDUMP_UNLOADED_MODULE; /* size: 0x0018 */

typedef struct _MINIDUMP_UNLOADED_MODULE_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
} MINIDUMP_UNLOADED_MODULE_LIST, *PMINIDUMP_UNLOADED_MODULE_LIST; /* size: 0x000c */

typedef struct _MINIDUMP_USER_RECORD
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_USER_RECORD, *PMINIDUMP_USER_RECORD; /* size: 0x000c */

typedef struct _MINIDUMP_USER_STREAM
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* Buffer;
} MINIDUMP_USER_STREAM, *PMINIDUMP_USER_STREAM; /* size: 0x000c */

typedef struct _MINIDUMP_USER_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long UserStreamCount;
  /* 0x0004 */ struct _MINIDUMP_USER_STREAM* UserStreamArray;
} MINIDUMP_USER_STREAM_INFORMATION, *PMINIDUMP_USER_STREAM_INFORMATION; /* size: 0x0008 */

typedef struct _MMPFN_IDENTITY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MEMORY_FRAME_INFORMATION e1;
      /* 0x0000 */ struct _FILEOFFSET_INFORMATION e2;
      /* 0x0000 */ struct _PAGEDIR_INFORMATION e3;
      /* 0x0000 */ struct _UNIQUE_PROCESS_INFORMATION e4;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ unsigned long PageFrameIndex;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x000c */ unsigned long Image : 1; /* bit position: 0 */
          /* 0x000c */ unsigned long Mismatch : 1; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0004 */ e1;
      /* 0x000c */ void* FileObject;
      /* 0x000c */ void* UniqueFileObjectKey;
      /* 0x000c */ void* ProtoPteAddress;
      /* 0x000c */ void* VirtualAddress;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
} MMPFN_IDENTITY, *PMMPFN_IDENTITY; /* size: 0x0010 */

typedef struct _MMPFN_MEMSNAP_INFORMATION
{
  /* 0x0000 */ unsigned long InitialPageFrameIndex;
  /* 0x0004 */ unsigned long Count;
} MMPFN_MEMSNAP_INFORMATION, *PMMPFN_MEMSNAP_INFORMATION; /* size: 0x0008 */

typedef struct _MODEMDEVCAPS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwModemProviderVersion;
  /* 0x0014 */ unsigned long dwModemManufacturerOffset;
  /* 0x0018 */ unsigned long dwModemManufacturerSize;
  /* 0x001c */ unsigned long dwModemModelOffset;
  /* 0x0020 */ unsigned long dwModemModelSize;
  /* 0x0024 */ unsigned long dwModemVersionOffset;
  /* 0x0028 */ unsigned long dwModemVersionSize;
  /* 0x002c */ unsigned long dwDialOptions;
  /* 0x0030 */ unsigned long dwCallSetupFailTimer;
  /* 0x0034 */ unsigned long dwInactivityTimeout;
  /* 0x0038 */ unsigned long dwSpeakerVolume;
  /* 0x003c */ unsigned long dwSpeakerMode;
  /* 0x0040 */ unsigned long dwModemOptions;
  /* 0x0044 */ unsigned long dwMaxDTERate;
  /* 0x0048 */ unsigned long dwMaxDCERate;
  /* 0x004c */ unsigned char abVariablePortion[1];
  /* 0x004d */ char __PADDING__[3];
} MODEMDEVCAPS, *PMODEMDEVCAPS; /* size: 0x0050 */

typedef struct _MODEMSETTINGS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwCallSetupFailTimer;
  /* 0x0014 */ unsigned long dwInactivityTimeout;
  /* 0x0018 */ unsigned long dwSpeakerVolume;
  /* 0x001c */ unsigned long dwSpeakerMode;
  /* 0x0020 */ unsigned long dwPreferredModemOptions;
  /* 0x0024 */ unsigned long dwNegotiatedModemOptions;
  /* 0x0028 */ unsigned long dwNegotiatedDCERate;
  /* 0x002c */ unsigned char abVariablePortion[1];
  /* 0x002d */ char __PADDING__[3];
} MODEMSETTINGS, *PMODEMSETTINGS; /* size: 0x0030 */

typedef struct _MODLOAD_DATA
{
  /* 0x0000 */ unsigned long ssize;
  /* 0x0004 */ unsigned long ssig;
  /* 0x0008 */ void* data;
  /* 0x000c */ unsigned long size;
  /* 0x0010 */ unsigned long flags;
} MODLOAD_DATA, *PMODLOAD_DATA; /* size: 0x0014 */

typedef struct _MODULE_TYPE_INFO
{
  /* 0x0000 */ unsigned short dataLength;
  /* 0x0002 */ unsigned short leaf;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} MODULE_TYPE_INFO, *PMODULE_TYPE_INFO; /* size: 0x0006 */

typedef enum _MODULE_WRITE_FLAGS
{
  ModuleWriteModule = 1,
  ModuleWriteDataSeg = 2,
  ModuleWriteMiscRecord = 4,
  ModuleWriteCvRecord = 8,
  ModuleReferencedByMemory = 16,
  ModuleWriteTlsData = 32,
  ModuleWriteCodeSegs = 64,
} MODULE_WRITE_FLAGS, *PMODULE_WRITE_FLAGS;

typedef struct _MONIKEREXTENT
{
  /* 0x0000 */ unsigned long cbExtentBytes;
  /* 0x0004 */ unsigned short usKeyValue;
  /* 0x0006 */ unsigned char achExtentBytes[1];
  /* 0x0007 */ char __PADDING__[1];
} MONIKEREXTENT, *PMONIKEREXTENT; /* size: 0x0008 */

typedef struct _MOUSE_EVENT_RECORD
{
  /* 0x0000 */ struct _COORD dwMousePosition;
  /* 0x0004 */ unsigned long dwButtonState;
  /* 0x0008 */ unsigned long dwControlKeyState;
  /* 0x000c */ unsigned long dwEventFlags;
} MOUSE_EVENT_RECORD, *PMOUSE_EVENT_RECORD; /* size: 0x0010 */

typedef struct _MUICCENTRY
{
  /* 0x0000 */ unsigned int lCultureNameOffset;
  /* 0x0004 */ unsigned int ulCultureID;
  /* 0x0008 */ unsigned long ulLanguageType;
  /* 0x000c */ struct _MUICCENTRY* pNeutralCulture;
  /* 0x0010 */ struct _MUICCENTRY* lBaseLanguageIndices[4];
  /* 0x0020 */ int lParentLanguageIndices[4];
} MUICCENTRY, *PMUICCENTRY; /* size: 0x0030 */

typedef struct _MUICCHEADER
{
  /* 0x0000 */ unsigned int ulMaxStringsSize;
  /* 0x0004 */ unsigned int ulSizeStrings;
  /* 0x0008 */ unsigned int ulMaxNumInstalledCultures;
  /* 0x000c */ unsigned int ulNumInstalledCultures;
  /* 0x0010 */ unsigned int ulMaxNumUnverifiedCultures;
  /* 0x0014 */ unsigned int ulNumUnverifiedCultures;
} MUICCHEADER, *PMUICCHEADER; /* size: 0x0018 */

typedef struct _MUILANGCFGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ struct _MUILANGCFGNODE* LanguageConfigs;
} MUILANGCFGLIST, *PMUILANGCFGLIST; /* size: 0x000c */

typedef struct _MUILANGCFGNODE
{
  /* 0x0000 */ short LangSpec;
  /* 0x0002 */ unsigned short FallbackTypes;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ short FallbackSpecs[3];
} MUILANGCFGNODE, *PMUILANGCFGNODE; /* size: 0x000c */

typedef struct _MUILANGINFO
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short LangId;
  /* 0x0006 */ short LangNameIndex;
  /* 0x0008 */ unsigned short FallbackTypes;
  /* 0x000a */ short NeutralLangSpec;
  /* 0x000c */ short FallbackSpecs[4];
  /* 0x0014 */ short AlternateCodePage[4];
} MUILANGINFO, *PMUILANGINFO; /* size: 0x001c */

typedef struct _MUILANGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ unsigned char bUseUseMachineConfigList;
  /* 0x000c */ struct _MUIREGISTRYINFO* RegInfo;
  /* 0x0010 */ struct _MUILANGLISTNODE* Languages;
  /* 0x0018 */ unsigned __int64 ullMask;
  /* 0x0020 */ unsigned int uConsoleFlag;
  /* 0x0024 */ long __PADDING__[1];
} MUILANGLIST, *PMUILANGLIST; /* size: 0x0028 */

typedef struct _MUILANGLISTNODE
{
  /* 0x0000 */ unsigned short LanguageType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ short LanguageSpec;
} MUILANGLISTNODE, *PMUILANGLISTNODE; /* size: 0x0006 */

typedef struct _MUILANGUAGES
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumLanguages;
  /* 0x0006 */ unsigned short NumLanguages;
  /* 0x0008 */ unsigned short NumInstalledLanguages;
  /* 0x000c */ struct _MUILANGINFO* LangInfos;
} MUILANGUAGES, *PMUILANGUAGES; /* size: 0x0010 */

typedef struct _MUIREGISTRYINFO
{
  /* 0x0000 */ unsigned int Owned;
  /* 0x0004 */ unsigned short InstallLanguageFallback[4];
  /* 0x000c */ unsigned long Generation;
  /* 0x0010 */ struct _MUILANGUAGES* Installed;
  /* 0x0014 */ struct _MUISTRINGPOOL* Strings;
  /* 0x0018 */ struct _MUILANGCFGLIST* MachineConfig;
  /* 0x001c */ struct _MUILANGCFGLIST* UserConfig;
  /* 0x0020 */ struct _MUILANGLIST* MachinePreferred;
  /* 0x0024 */ struct _MUILANGLIST* UserPreferred;
  /* 0x0028 */ struct _MUILANGLIST* MergedUser;
  /* 0x002c */ struct _MUILANGLIST* MergedMachine;
  /* 0x0030 */ struct _MUILANGLIST* MergedFallback;
  /* 0x0034 */ unsigned long MUI_Locked;
  /* 0x0038 */ unsigned long MUI_SE;
  /* 0x003c */ unsigned long MUI_NumberAllowed;
  /* 0x0040 */ wchar_t* MUI_AllowedLanguage;
  /* 0x0044 */ wchar_t* MUI_InstalledSKU;
  /* 0x0048 */ unsigned long cbInstalledSKU;
  /* 0x004c */ unsigned long cbAllowedLanguage;
  /* 0x0050 */ wchar_t* MUI_DisallowedLanguage;
  /* 0x0054 */ unsigned long cbDisallowedLanguage;
} MUIREGISTRYINFO, *PMUIREGISTRYINFO; /* size: 0x0058 */

typedef struct _MUISTRINGPOOL
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumStrings;
  /* 0x0006 */ unsigned short NumStrings;
  /* 0x0008 */ unsigned short MaxNumCharsInPool;
  /* 0x000a */ unsigned short NumCharsInPool;
  /* 0x000c */ short* Strings;
  /* 0x0010 */ wchar_t* Pool;
} MUISTRINGPOOL, *PMUISTRINGPOOL; /* size: 0x0014 */

typedef enum _MULTIPLE_TRUSTEE_OPERATION
{
  NO_MULTIPLE_TRUSTEE = 0,
  TRUSTEE_IS_IMPERSONATE = 1,
} MULTIPLE_TRUSTEE_OPERATION, *PMULTIPLE_TRUSTEE_OPERATION;

typedef struct _MUTANT_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ unsigned char OwnedByCaller;
  /* 0x0005 */ unsigned char AbandonedState;
  /* 0x0006 */ char __PADDING__[2];
} MUTANT_BASIC_INFORMATION, *PMUTANT_BASIC_INFORMATION; /* size: 0x0008 */

typedef enum _MUTANT_INFORMATION_CLASS
{
  MutantBasicInformation = 0,
  MutantOwnerInformation = 1,
} MUTANT_INFORMATION_CLASS, *PMUTANT_INFORMATION_CLASS;

typedef struct _MUTANT_OWNER_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
} MUTANT_OWNER_INFORMATION, *PMUTANT_OWNER_INFORMATION; /* size: 0x0008 */

typedef struct _MkInterfaceList
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ struct tagInterfaceData* apIFDList[1];
} MkInterfaceList, *PMkInterfaceList; /* size: 0x0008 */

typedef struct _MnkEqBuf
{
  /* 0x0000 */ unsigned long cdwSize;
  /* 0x0004 */ unsigned char abEqData[1];
  /* 0x0005 */ char __PADDING__[3];
} MnkEqBuf, *PMnkEqBuf; /* size: 0x0008 */

typedef struct _MonikerReadStruct
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_ole1;
  /* 0x0014 */ unsigned long m_cbExtents;
} MonikerReadStruct, *PMonikerReadStruct; /* size: 0x0018 */

typedef struct _MonikerWriteStruct
{
  /* 0x0000 */ unsigned short m_endServer;
  /* 0x0002 */ unsigned short m_w;
  /* 0x0004 */ struct _GUID m_clsid;
  /* 0x0014 */ unsigned long m_ole1;
} MonikerWriteStruct, *PMonikerWriteStruct; /* size: 0x0018 */

typedef struct _NAPDATA
{
  /* 0x0000 */ unsigned long NapLock;
  /* 0x0004 */ unsigned long Calls;
  /* 0x0008 */ unsigned long TimingErrors;
  /* 0x0010 */ union _LARGE_INTEGER TotalTime;
  /* 0x0018 */ union _LARGE_INTEGER FirstTime;
  /* 0x0020 */ union _LARGE_INTEGER MaxTime;
  /* 0x0028 */ union _LARGE_INTEGER MinTime;
} NAPDATA, *PNAPDATA; /* size: 0x0030 */

typedef struct _NCRYPT_KEY_STORAGE_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ void* OpenProvider /* function */;
  /* 0x0008 */ void* OpenKey /* function */;
  /* 0x000c */ void* CreatePersistedKey /* function */;
  /* 0x0010 */ void* GetProviderProperty /* function */;
  /* 0x0014 */ void* GetKeyProperty /* function */;
  /* 0x0018 */ void* SetProviderProperty /* function */;
  /* 0x001c */ void* SetKeyProperty /* function */;
  /* 0x0020 */ void* FinalizeKey /* function */;
  /* 0x0024 */ void* DeleteKey /* function */;
  /* 0x0028 */ void* FreeProvider /* function */;
  /* 0x002c */ void* FreeKey /* function */;
  /* 0x0030 */ void* FreeBuffer /* function */;
  /* 0x0034 */ void* Encrypt /* function */;
  /* 0x0038 */ void* Decrypt /* function */;
  /* 0x003c */ void* IsAlgSupported /* function */;
  /* 0x0040 */ void* EnumAlgorithms /* function */;
  /* 0x0044 */ void* EnumKeys /* function */;
  /* 0x0048 */ void* ImportKey /* function */;
  /* 0x004c */ void* ExportKey /* function */;
  /* 0x0050 */ void* SignHash /* function */;
  /* 0x0054 */ void* VerifySignature /* function */;
  /* 0x0058 */ void* PromptUser /* function */;
  /* 0x005c */ void* NotifyChangeKey /* function */;
  /* 0x0060 */ void* SecretAgreement /* function */;
  /* 0x0064 */ void* DeriveKey /* function */;
  /* 0x0068 */ void* FreeSecret /* function */;
} NCRYPT_KEY_STORAGE_FUNCTION_TABLE, *PNCRYPT_KEY_STORAGE_FUNCTION_TABLE; /* size: 0x006c */

typedef struct _NCryptAlgorithmName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0004 */ unsigned long dwClass;
  /* 0x0008 */ unsigned long dwAlgOperations;
  /* 0x000c */ unsigned long dwFlags;
} NCryptAlgorithmName, *PNCryptAlgorithmName; /* size: 0x0010 */

struct _NDR_ASYNC_MESSAGE;

struct _NDR_CORRELATION_INFO;

typedef struct _NDR_CS_ROUTINES
{
  /* 0x0000 */ struct _NDR_CS_SIZE_CONVERT_ROUTINES* pSizeConvertRoutines;
  /* 0x0004 */ void** pTagGettingRoutines /* function */;
} NDR_CS_ROUTINES, *PNDR_CS_ROUTINES; /* size: 0x0008 */

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES
{
  /* 0x0000 */ void* pfnNetSize /* function */;
  /* 0x0004 */ void* pfnToNetCs /* function */;
  /* 0x0008 */ void* pfnLocalSize /* function */;
  /* 0x000c */ void* pfnFromNetCs /* function */;
} NDR_CS_SIZE_CONVERT_ROUTINES, *PNDR_CS_SIZE_CONVERT_ROUTINES; /* size: 0x0010 */

typedef struct _NDR_EXPR_DESC
{
  /* 0x0000 */ const unsigned short* pOffset;
  /* 0x0004 */ const unsigned char* pFormatExpr;
} NDR_EXPR_DESC, *PNDR_EXPR_DESC; /* size: 0x0008 */

struct _NDR_PROC_CONTEXT;

typedef struct _NDR_USER_MARSHAL_INFO
{
  /* 0x0000 */ unsigned long InformationLevel;
  /* 0x0004 */ struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
} NDR_USER_MARSHAL_INFO, *PNDR_USER_MARSHAL_INFO; /* size: 0x002c */

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
  /* 0x0000 */ void* Buffer;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* pfnAllocate /* function */;
  /* 0x000c */ void* pfnFree /* function */;
  /* 0x0010 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x0014 */ unsigned long Reserved[5];
} NDR_USER_MARSHAL_INFO_LEVEL1, *PNDR_USER_MARSHAL_INFO_LEVEL1; /* size: 0x0028 */

typedef struct _NETCONNECTINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwSpeed;
  /* 0x000c */ unsigned long dwDelay;
  /* 0x0010 */ unsigned long dwOptDataSize;
} NETCONNECTINFOSTRUCT, *PNETCONNECTINFOSTRUCT; /* size: 0x0014 */

typedef struct _NETINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwProviderVersion;
  /* 0x0008 */ unsigned long dwStatus;
  /* 0x000c */ unsigned long dwCharacteristics;
  /* 0x0010 */ unsigned long dwHandle;
  /* 0x0014 */ unsigned short wNetType;
  /* 0x0018 */ unsigned long dwPrinters;
  /* 0x001c */ unsigned long dwDrives;
} NETINFOSTRUCT, *PNETINFOSTRUCT; /* size: 0x0020 */

typedef struct _NETRESOURCEA
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0014 */ char* lpRemoteName;
  /* 0x0018 */ char* lpComment;
  /* 0x001c */ char* lpProvider;
} NETRESOURCEA, *PNETRESOURCEA; /* size: 0x0020 */

typedef struct _NETRESOURCEW
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0014 */ wchar_t* lpRemoteName;
  /* 0x0018 */ wchar_t* lpComment;
  /* 0x001c */ wchar_t* lpProvider;
} NETRESOURCEW, *PNETRESOURCEW; /* size: 0x0020 */

typedef struct _NLSTABLEINFO
{
  /* 0x0000 */ struct _CPTABLEINFO OemTableInfo;
  /* 0x002c */ struct _CPTABLEINFO AnsiTableInfo;
  /* 0x0058 */ unsigned short* UpperCaseTable;
  /* 0x005c */ unsigned short* LowerCaseTable;
} NLSTABLEINFO, *PNLSTABLEINFO; /* size: 0x0060 */

typedef struct _NON_PAGED_DEBUG_INFO
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned short Machine;
  /* 0x000a */ unsigned short Characteristics;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned __int64 ImageBase;
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO; /* size: 0x0020 */

typedef enum _NORM_FORM
{
  NormalizationOther = 0,
  NormalizationC = 1,
  NormalizationD = 2,
  NormalizationKC = 5,
  NormalizationKD = 6,
} NORM_FORM, *PNORM_FORM;

typedef struct _NOTIFYICONDATAA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct HWND__* hWnd;
  /* 0x0008 */ unsigned int uID;
  /* 0x000c */ unsigned int uFlags;
  /* 0x0010 */ unsigned int uCallbackMessage;
  /* 0x0014 */ struct HICON__* hIcon;
  /* 0x0018 */ char szTip[128];
  /* 0x0098 */ unsigned long dwState;
  /* 0x009c */ unsigned long dwStateMask;
  /* 0x00a0 */ char szInfo[256];
  union
  {
    /* 0x01a0 */ unsigned int uTimeout;
    /* 0x01a0 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x01a4 */ char szInfoTitle[64];
  /* 0x01e4 */ unsigned long dwInfoFlags;
  /* 0x01e8 */ struct _GUID guidItem;
  /* 0x01f8 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAA, *PNOTIFYICONDATAA; /* size: 0x01fc */

typedef struct _NOTIFYICONDATAW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct HWND__* hWnd;
  /* 0x0008 */ unsigned int uID;
  /* 0x000c */ unsigned int uFlags;
  /* 0x0010 */ unsigned int uCallbackMessage;
  /* 0x0014 */ struct HICON__* hIcon;
  /* 0x0018 */ wchar_t szTip[128];
  /* 0x0118 */ unsigned long dwState;
  /* 0x011c */ unsigned long dwStateMask;
  /* 0x0120 */ wchar_t szInfo[256];
  union
  {
    /* 0x0320 */ unsigned int uTimeout;
    /* 0x0320 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x0324 */ wchar_t szInfoTitle[64];
  /* 0x03a4 */ unsigned long dwInfoFlags;
  /* 0x03a8 */ struct _GUID guidItem;
  /* 0x03b8 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAW, *PNOTIFYICONDATAW; /* size: 0x03bc */

typedef struct _NTFS_STATISTICS
{
  /* 0x0000 */ unsigned long LogFileFullExceptions;
  /* 0x0004 */ unsigned long OtherExceptions;
  /* 0x0008 */ unsigned long MftReads;
  /* 0x000c */ unsigned long MftReadBytes;
  /* 0x0010 */ unsigned long MftWrites;
  /* 0x0014 */ unsigned long MftWriteBytes;
  struct
  {
    /* 0x0018 */ unsigned short Write;
    /* 0x001a */ unsigned short Create;
    /* 0x001c */ unsigned short SetInfo;
    /* 0x001e */ unsigned short Flush;
  } /* size: 0x0008 */ MftWritesUserLevel;
  /* 0x0020 */ unsigned short MftWritesFlushForLogFileFull;
  /* 0x0022 */ unsigned short MftWritesLazyWriter;
  /* 0x0024 */ unsigned short MftWritesUserRequest;
  /* 0x0028 */ unsigned long Mft2Writes;
  /* 0x002c */ unsigned long Mft2WriteBytes;
  struct
  {
    /* 0x0030 */ unsigned short Write;
    /* 0x0032 */ unsigned short Create;
    /* 0x0034 */ unsigned short SetInfo;
    /* 0x0036 */ unsigned short Flush;
  } /* size: 0x0008 */ Mft2WritesUserLevel;
  /* 0x0038 */ unsigned short Mft2WritesFlushForLogFileFull;
  /* 0x003a */ unsigned short Mft2WritesLazyWriter;
  /* 0x003c */ unsigned short Mft2WritesUserRequest;
  /* 0x0040 */ unsigned long RootIndexReads;
  /* 0x0044 */ unsigned long RootIndexReadBytes;
  /* 0x0048 */ unsigned long RootIndexWrites;
  /* 0x004c */ unsigned long RootIndexWriteBytes;
  /* 0x0050 */ unsigned long BitmapReads;
  /* 0x0054 */ unsigned long BitmapReadBytes;
  /* 0x0058 */ unsigned long BitmapWrites;
  /* 0x005c */ unsigned long BitmapWriteBytes;
  /* 0x0060 */ unsigned short BitmapWritesFlushForLogFileFull;
  /* 0x0062 */ unsigned short BitmapWritesLazyWriter;
  /* 0x0064 */ unsigned short BitmapWritesUserRequest;
  struct
  {
    /* 0x0066 */ unsigned short Write;
    /* 0x0068 */ unsigned short Create;
    /* 0x006a */ unsigned short SetInfo;
  } /* size: 0x0006 */ BitmapWritesUserLevel;
  /* 0x006c */ unsigned long MftBitmapReads;
  /* 0x0070 */ unsigned long MftBitmapReadBytes;
  /* 0x0074 */ unsigned long MftBitmapWrites;
  /* 0x0078 */ unsigned long MftBitmapWriteBytes;
  /* 0x007c */ unsigned short MftBitmapWritesFlushForLogFileFull;
  /* 0x007e */ unsigned short MftBitmapWritesLazyWriter;
  /* 0x0080 */ unsigned short MftBitmapWritesUserRequest;
  struct
  {
    /* 0x0082 */ unsigned short Write;
    /* 0x0084 */ unsigned short Create;
    /* 0x0086 */ unsigned short SetInfo;
    /* 0x0088 */ unsigned short Flush;
  } /* size: 0x0008 */ MftBitmapWritesUserLevel;
  /* 0x008c */ unsigned long UserIndexReads;
  /* 0x0090 */ unsigned long UserIndexReadBytes;
  /* 0x0094 */ unsigned long UserIndexWrites;
  /* 0x0098 */ unsigned long UserIndexWriteBytes;
  /* 0x009c */ unsigned long LogFileReads;
  /* 0x00a0 */ unsigned long LogFileReadBytes;
  /* 0x00a4 */ unsigned long LogFileWrites;
  /* 0x00a8 */ unsigned long LogFileWriteBytes;
  struct
  {
    /* 0x00ac */ unsigned long Calls;
    /* 0x00b0 */ unsigned long Clusters;
    /* 0x00b4 */ unsigned long Hints;
    /* 0x00b8 */ unsigned long RunsReturned;
    /* 0x00bc */ unsigned long HintsHonored;
    /* 0x00c0 */ unsigned long HintsClusters;
    /* 0x00c4 */ unsigned long Cache;
    /* 0x00c8 */ unsigned long CacheClusters;
    /* 0x00cc */ unsigned long CacheMiss;
    /* 0x00d0 */ unsigned long CacheMissClusters;
  } /* size: 0x0028 */ Allocate;
} NTFS_STATISTICS, *PNTFS_STATISTICS; /* size: 0x00d4 */

typedef enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 1,
  NtProductLanManNt = 2,
  NtProductServer = 3,
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;

typedef struct _NT_TIB
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0004 */ void* StackBase;
  /* 0x0008 */ void* StackLimit;
  /* 0x000c */ void* SubSystemTib;
  union
  {
    /* 0x0010 */ void* FiberData;
    /* 0x0010 */ unsigned long Version;
  }; /* size: 0x0004 */
  /* 0x0014 */ void* ArbitraryUserPointer;
  /* 0x0018 */ struct _NT_TIB* Self;
} NT_TIB, *PNT_TIB; /* size: 0x001c */

typedef struct _NT_TIB32
{
  /* 0x0000 */ unsigned long ExceptionList;
  /* 0x0004 */ unsigned long StackBase;
  /* 0x0008 */ unsigned long StackLimit;
  /* 0x000c */ unsigned long SubSystemTib;
  union
  {
    /* 0x0010 */ unsigned long FiberData;
    /* 0x0010 */ unsigned long Version;
  }; /* size: 0x0004 */
  /* 0x0014 */ unsigned long ArbitraryUserPointer;
  /* 0x0018 */ unsigned long Self;
} NT_TIB32, *PNT_TIB32; /* size: 0x001c */

typedef struct _NT_TIB64
{
  /* 0x0000 */ unsigned __int64 ExceptionList;
  /* 0x0008 */ unsigned __int64 StackBase;
  /* 0x0010 */ unsigned __int64 StackLimit;
  /* 0x0018 */ unsigned __int64 SubSystemTib;
  union
  {
    /* 0x0020 */ unsigned __int64 FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ unsigned __int64 ArbitraryUserPointer;
  /* 0x0030 */ unsigned __int64 Self;
} NT_TIB64, *PNT_TIB64; /* size: 0x0038 */

typedef struct _OBJECTID
{
  /* 0x0000 */ struct _GUID Lineage;
  /* 0x0010 */ unsigned long Uniquifier;
} OBJECTID, *POBJECTID; /* size: 0x0014 */

typedef struct _OBJECT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ void* RootDirectory;
  /* 0x0008 */ struct _UNICODE_STRING* ObjectName;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ void* SecurityDescriptor;
  /* 0x0014 */ void* SecurityQualityOfService;
} OBJECT_ATTRIBUTES, *POBJECT_ATTRIBUTES; /* size: 0x0018 */

typedef struct _OBJECT_ATTRIBUTES32
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long RootDirectory;
  /* 0x0008 */ unsigned long ObjectName;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long SecurityDescriptor;
  /* 0x0014 */ unsigned long SecurityQualityOfService;
} OBJECT_ATTRIBUTES32, *POBJECT_ATTRIBUTES32; /* size: 0x0018 */

typedef struct _OBJECT_ATTRIBUTES64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0008 */ unsigned __int64 RootDirectory;
  /* 0x0010 */ unsigned __int64 ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x0020 */ unsigned __int64 SecurityDescriptor;
  /* 0x0028 */ unsigned __int64 SecurityQualityOfService;
} OBJECT_ATTRIBUTES64, *POBJECT_ATTRIBUTES64; /* size: 0x0030 */

typedef struct _OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long PagedPoolCharge;
  /* 0x0014 */ unsigned long NonPagedPoolCharge;
  /* 0x0018 */ unsigned long Reserved[3];
  /* 0x0024 */ unsigned long NameInfoSize;
  /* 0x0028 */ unsigned long TypeInfoSize;
  /* 0x002c */ unsigned long SecurityDescriptorSize;
  /* 0x0030 */ union _LARGE_INTEGER CreationTime;
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _OBJECT_DIRECTORY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0008 */ struct _UNICODE_STRING TypeName;
} OBJECT_DIRECTORY_INFORMATION, *POBJECT_DIRECTORY_INFORMATION; /* size: 0x0010 */

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION
{
  /* 0x0000 */ unsigned char Inherit;
  /* 0x0001 */ unsigned char ProtectFromClose;
} OBJECT_HANDLE_FLAG_INFORMATION, *POBJECT_HANDLE_FLAG_INFORMATION; /* size: 0x0002 */

typedef enum _OBJECT_INFORMATION_CLASS
{
  ObjectBasicInformation = 0,
  ObjectNameInformation = 1,
  ObjectTypeInformation = 2,
  ObjectTypesInformation = 3,
  ObjectHandleFlagInformation = 4,
  ObjectSessionInformation = 5,
  MaxObjectInfoClass = 6,
} OBJECT_INFORMATION_CLASS, *POBJECT_INFORMATION_CLASS;

typedef struct _OBJECT_NAME_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _OBJECT_TYPES_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTypes;
} OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION; /* size: 0x0004 */

typedef struct _OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0008 */ unsigned long TotalNumberOfObjects;
  /* 0x000c */ unsigned long TotalNumberOfHandles;
  /* 0x0010 */ unsigned long TotalPagedPoolUsage;
  /* 0x0014 */ unsigned long TotalNonPagedPoolUsage;
  /* 0x0018 */ unsigned long TotalNamePoolUsage;
  /* 0x001c */ unsigned long TotalHandleTableUsage;
  /* 0x0020 */ unsigned long HighWaterNumberOfObjects;
  /* 0x0024 */ unsigned long HighWaterNumberOfHandles;
  /* 0x0028 */ unsigned long HighWaterPagedPoolUsage;
  /* 0x002c */ unsigned long HighWaterNonPagedPoolUsage;
  /* 0x0030 */ unsigned long HighWaterNamePoolUsage;
  /* 0x0034 */ unsigned long HighWaterHandleTableUsage;
  /* 0x0038 */ unsigned long InvalidAttributes;
  /* 0x003c */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x004c */ unsigned long ValidAccessMask;
  /* 0x0050 */ unsigned char SecurityRequired;
  /* 0x0051 */ unsigned char MaintainHandleCount;
  /* 0x0054 */ unsigned long PoolType;
  /* 0x0058 */ unsigned long DefaultPagedPoolCharge;
  /* 0x005c */ unsigned long DefaultNonPagedPoolCharge;
} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION; /* size: 0x0060 */

typedef struct _OBJECT_TYPE_LIST
{
  /* 0x0000 */ unsigned short Level;
  /* 0x0002 */ unsigned short Sbz;
  /* 0x0004 */ struct _GUID* ObjectType;
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST; /* size: 0x0008 */

typedef struct _OCSP_BASIC_RESPONSE_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0024 */ unsigned long dwCertStatus;
  /* 0x0028 */ struct _OCSP_BASIC_REVOKED_INFO* pRevokedInfo;
  /* 0x002c */ struct _FILETIME ThisUpdate;
  /* 0x0034 */ struct _FILETIME NextUpdate;
  /* 0x003c */ unsigned long cExtension;
  /* 0x0040 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_ENTRY, *POCSP_BASIC_RESPONSE_ENTRY; /* size: 0x0044 */

typedef struct _OCSP_BASIC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwResponderIdChoice;
  union
  {
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByNameResponderId;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByKeyResponderId;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct _FILETIME ProducedAt;
  /* 0x0018 */ unsigned long cResponseEntry;
  /* 0x001c */ struct _OCSP_BASIC_RESPONSE_ENTRY* rgResponseEntry;
  /* 0x0020 */ unsigned long cExtension;
  /* 0x0024 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_INFO, *POCSP_BASIC_RESPONSE_INFO; /* size: 0x0028 */

typedef struct _OCSP_BASIC_REVOKED_INFO
{
  /* 0x0000 */ struct _FILETIME RevocationDate;
  /* 0x0008 */ unsigned long dwCrlReasonCode;
} OCSP_BASIC_REVOKED_INFO, *POCSP_BASIC_REVOKED_INFO; /* size: 0x000c */

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0008 */ struct _OCSP_SIGNATURE_INFO SignatureInfo;
} OCSP_BASIC_SIGNED_RESPONSE_INFO, *POCSP_BASIC_SIGNED_RESPONSE_INFO; /* size: 0x0028 */

typedef struct _OCSP_CERT_ID
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x000c */ struct _CRYPTOAPI_BLOB IssuerNameHash;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB IssuerKeyHash;
  /* 0x001c */ struct _CRYPTOAPI_BLOB SerialNumber;
} OCSP_CERT_ID, *POCSP_CERT_ID; /* size: 0x0024 */

typedef struct _OCSP_REQUEST_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0024 */ unsigned long cExtension;
  /* 0x0028 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_ENTRY, *POCSP_REQUEST_ENTRY; /* size: 0x002c */

typedef struct _OCSP_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ struct _CERT_ALT_NAME_ENTRY* pRequestorName;
  /* 0x0008 */ unsigned long cRequestEntry;
  /* 0x000c */ struct _OCSP_REQUEST_ENTRY* rgRequestEntry;
  /* 0x0010 */ unsigned long cExtension;
  /* 0x0014 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_INFO, *POCSP_REQUEST_INFO; /* size: 0x0018 */

typedef struct _OCSP_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} OCSP_RESPONSE_INFO, *POCSP_RESPONSE_INFO; /* size: 0x0010 */

typedef struct _OCSP_SIGNATURE_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x000c */ struct _CRYPT_BIT_BLOB Signature;
  /* 0x0018 */ unsigned long cCertEncoded;
  /* 0x001c */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
} OCSP_SIGNATURE_INFO, *POCSP_SIGNATURE_INFO; /* size: 0x0020 */

typedef struct _OCSP_SIGNED_REQUEST_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0008 */ struct _OCSP_SIGNATURE_INFO* pOptionalSignatureInfo;
} OCSP_SIGNED_REQUEST_INFO, *POCSP_SIGNED_REQUEST_INFO; /* size: 0x000c */

typedef struct _OFSTRUCT
{
  /* 0x0000 */ unsigned char cBytes;
  /* 0x0001 */ unsigned char fFixedDisk;
  /* 0x0002 */ unsigned short nErrCode;
  /* 0x0004 */ unsigned short Reserved1;
  /* 0x0006 */ unsigned short Reserved2;
  /* 0x0008 */ char szPathName[128];
} OFSTRUCT, *POFSTRUCT; /* size: 0x0088 */

typedef struct _OLESTREAM
{
  /* 0x0000 */ struct _OLESTREAMVTBL* lpstbl;
} OLESTREAM, *POLESTREAM; /* size: 0x0004 */

typedef struct _OLESTREAMVTBL
{
  /* 0x0000 */ void* Get /* function */;
  /* 0x0004 */ void* Put /* function */;
} OLESTREAMVTBL, *POLESTREAMVTBL; /* size: 0x0008 */

typedef struct _OLETARGETDEVICE
{
  /* 0x0000 */ unsigned short otdDeviceNameOffset;
  /* 0x0002 */ unsigned short otdDriverNameOffset;
  /* 0x0004 */ unsigned short otdPortNameOffset;
  /* 0x0006 */ unsigned short otdExtDevmodeOffset;
  /* 0x0008 */ unsigned short otdExtDevmodeSize;
  /* 0x000a */ unsigned short otdEnvironmentOffset;
  /* 0x000c */ unsigned short otdEnvironmentSize;
  /* 0x000e */ unsigned char otdData[1];
  /* 0x000f */ char __PADDING__[1];
} OLETARGETDEVICE, *POLETARGETDEVICE; /* size: 0x0010 */

typedef struct _OPEN_PRINTER_PROPS_INFOA
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ char* pszSheetName;
  /* 0x0008 */ unsigned int uSheetIndex;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ int bModal;
} OPEN_PRINTER_PROPS_INFOA, *POPEN_PRINTER_PROPS_INFOA; /* size: 0x0014 */

typedef struct _OPEN_PRINTER_PROPS_INFOW
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ wchar_t* pszSheetName;
  /* 0x0008 */ unsigned int uSheetIndex;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ int bModal;
} OPEN_PRINTER_PROPS_INFOW, *POPEN_PRINTER_PROPS_INFOW; /* size: 0x0014 */

typedef struct _OSVERSIONINFOA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
} OSVERSIONINFOA, *POSVERSIONINFOA; /* size: 0x0094 */

typedef struct _OSVERSIONINFOEXA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA; /* size: 0x009c */

typedef struct _OSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW; /* size: 0x011c */

typedef struct _OSVERSIONINFOW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
} OSVERSIONINFOW, *POSVERSIONINFOW; /* size: 0x0114 */

typedef struct _OUTLINETEXTMETRICA
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICA otmTextMetrics;
  /* 0x003c */ unsigned char otmFiller;
  /* 0x003d */ struct tagPANOSE otmPanoseNumber;
  /* 0x0048 */ unsigned int otmfsSelection;
  /* 0x004c */ unsigned int otmfsType;
  /* 0x0050 */ int otmsCharSlopeRise;
  /* 0x0054 */ int otmsCharSlopeRun;
  /* 0x0058 */ int otmItalicAngle;
  /* 0x005c */ unsigned int otmEMSquare;
  /* 0x0060 */ int otmAscent;
  /* 0x0064 */ int otmDescent;
  /* 0x0068 */ unsigned int otmLineGap;
  /* 0x006c */ unsigned int otmsCapEmHeight;
  /* 0x0070 */ unsigned int otmsXHeight;
  /* 0x0074 */ struct tagRECT otmrcFontBox;
  /* 0x0084 */ int otmMacAscent;
  /* 0x0088 */ int otmMacDescent;
  /* 0x008c */ unsigned int otmMacLineGap;
  /* 0x0090 */ unsigned int otmusMinimumPPEM;
  /* 0x0094 */ struct tagPOINT otmptSubscriptSize;
  /* 0x009c */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a4 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00ac */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b4 */ unsigned int otmsStrikeoutSize;
  /* 0x00b8 */ int otmsStrikeoutPosition;
  /* 0x00bc */ int otmsUnderscoreSize;
  /* 0x00c0 */ int otmsUnderscorePosition;
  /* 0x00c4 */ char* otmpFamilyName;
  /* 0x00c8 */ char* otmpFaceName;
  /* 0x00cc */ char* otmpStyleName;
  /* 0x00d0 */ char* otmpFullName;
} OUTLINETEXTMETRICA, *POUTLINETEXTMETRICA; /* size: 0x00d4 */

typedef struct _OUTLINETEXTMETRICW
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICW otmTextMetrics;
  /* 0x0040 */ unsigned char otmFiller;
  /* 0x0041 */ struct tagPANOSE otmPanoseNumber;
  /* 0x004c */ unsigned int otmfsSelection;
  /* 0x0050 */ unsigned int otmfsType;
  /* 0x0054 */ int otmsCharSlopeRise;
  /* 0x0058 */ int otmsCharSlopeRun;
  /* 0x005c */ int otmItalicAngle;
  /* 0x0060 */ unsigned int otmEMSquare;
  /* 0x0064 */ int otmAscent;
  /* 0x0068 */ int otmDescent;
  /* 0x006c */ unsigned int otmLineGap;
  /* 0x0070 */ unsigned int otmsCapEmHeight;
  /* 0x0074 */ unsigned int otmsXHeight;
  /* 0x0078 */ struct tagRECT otmrcFontBox;
  /* 0x0088 */ int otmMacAscent;
  /* 0x008c */ int otmMacDescent;
  /* 0x0090 */ unsigned int otmMacLineGap;
  /* 0x0094 */ unsigned int otmusMinimumPPEM;
  /* 0x0098 */ struct tagPOINT otmptSubscriptSize;
  /* 0x00a0 */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a8 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00b0 */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b8 */ unsigned int otmsStrikeoutSize;
  /* 0x00bc */ int otmsStrikeoutPosition;
  /* 0x00c0 */ int otmsUnderscoreSize;
  /* 0x00c4 */ int otmsUnderscorePosition;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00cc */ char* otmpFaceName;
  /* 0x00d0 */ char* otmpStyleName;
  /* 0x00d4 */ char* otmpFullName;
} OUTLINETEXTMETRICW, *POUTLINETEXTMETRICW; /* size: 0x00d8 */

typedef struct _OUTPUT_DEBUG_STRING_INFO
{
  /* 0x0000 */ char* lpDebugStringData;
  /* 0x0004 */ unsigned short fUnicode;
  /* 0x0006 */ unsigned short nDebugStringLength;
} OUTPUT_DEBUG_STRING_INFO, *POUTPUT_DEBUG_STRING_INFO; /* size: 0x0008 */

typedef struct _OVERLAPPED
{
  /* 0x0000 */ unsigned long Internal;
  /* 0x0004 */ unsigned long InternalHigh;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Offset;
      /* 0x000c */ unsigned long OffsetHigh;
    }; /* size: 0x0008 */
    /* 0x0008 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0010 */ void* hEvent;
} OVERLAPPED, *POVERLAPPED; /* size: 0x0014 */

typedef struct _OVERLAPPED_ENTRY
{
  /* 0x0000 */ unsigned long lpCompletionKey;
  /* 0x0004 */ struct _OVERLAPPED* lpOverlapped;
  /* 0x0008 */ unsigned long Internal;
  /* 0x000c */ unsigned long dwNumberOfBytesTransferred;
} OVERLAPPED_ENTRY, *POVERLAPPED_ENTRY; /* size: 0x0010 */

typedef struct _PACKEDEVENTINFO
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long ulNumEventsForLogFile;
  /* 0x0008 */ unsigned long* ulOffsets /* zero-length array */;
} PACKEDEVENTINFO, *PPACKEDEVENTINFO; /* size: 0x0008 */

typedef struct _PAGEDIR_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageDirectoryBase : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} PAGEDIR_INFORMATION, *PPAGEDIR_INFORMATION; /* size: 0x0008 */

typedef struct _PAGE_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long PagePriority;
} PAGE_PRIORITY_INFORMATION, *PPAGE_PRIORITY_INFORMATION; /* size: 0x0004 */

typedef struct _PARAM_STRUCT
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0004 */ long dispIdMember;
  /* 0x0008 */ const struct _GUID* const riid;
  /* 0x000c */ unsigned long lcid;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0018 */ struct tagVARIANT* pVarResult;
  /* 0x001c */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0020 */ unsigned int* pArgErr;
  /* 0x0024 */ unsigned int cVarRef;
  /* 0x0028 */ unsigned int* rgVarRefIdx;
  /* 0x002c */ struct tagVARIANT* rgVarRef;
  /* 0x0030 */ HRESULT _RetVal;
} PARAM_STRUCT, *PPARAM_STRUCT; /* size: 0x0034 */

typedef struct _PARSE_MESSAGE_CONTEXT
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long cwSavColumn;
  /* 0x0008 */ unsigned long iwSrc;
  /* 0x000c */ unsigned long iwDst;
  /* 0x0010 */ unsigned long iwDstSpace;
  /* 0x0014 */ char* lpvArgStart;
} PARSE_MESSAGE_CONTEXT, *PPARSE_MESSAGE_CONTEXT; /* size: 0x0018 */

typedef struct _PATHNAME_BUFFER
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} PATHNAME_BUFFER, *PPATHNAME_BUFFER; /* size: 0x0008 */

typedef struct _PEB
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SpareBits : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ void* Mutant;
  /* 0x0008 */ void* ImageBaseAddress;
  /* 0x000c */ struct _PEB_LDR_DATA* Ldr;
  /* 0x0010 */ struct _RTL_USER_PROCESS_PARAMETERS* ProcessParameters;
  /* 0x0014 */ void* SubSystemData;
  /* 0x0018 */ void* ProcessHeap;
  /* 0x001c */ struct _RTL_CRITICAL_SECTION* FastPebLock;
  /* 0x0020 */ void* AtlThunkSListPtr;
  /* 0x0024 */ void* IFEOKey;
  union
  {
    /* 0x0028 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0028 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0028 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0028 */ unsigned long ReservedBits0 : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  union
  {
    /* 0x002c */ void* KernelCallbackTable;
    /* 0x002c */ void* UserSharedInfoPtr;
  }; /* size: 0x0004 */
  /* 0x0030 */ unsigned long SystemReserved[1];
  /* 0x0034 */ unsigned long SpareUlong;
  /* 0x0038 */ struct _PEB_FREE_BLOCK* FreeList;
  /* 0x003c */ unsigned long TlsExpansionCounter;
  /* 0x0040 */ void* TlsBitmap;
  /* 0x0044 */ unsigned long TlsBitmapBits[2];
  /* 0x004c */ void* ReadOnlySharedMemoryBase;
  /* 0x0050 */ void* HotpatchInformation;
  /* 0x0054 */ void** ReadOnlyStaticServerData;
  /* 0x0058 */ void* AnsiCodePageData;
  /* 0x005c */ void* OemCodePageData;
  /* 0x0060 */ void* UnicodeCaseTableData;
  /* 0x0064 */ unsigned long NumberOfProcessors;
  /* 0x0068 */ unsigned long NtGlobalFlag;
  /* 0x0070 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x0078 */ unsigned long HeapSegmentReserve;
  /* 0x007c */ unsigned long HeapSegmentCommit;
  /* 0x0080 */ unsigned long HeapDeCommitTotalFreeThreshold;
  /* 0x0084 */ unsigned long HeapDeCommitFreeBlockThreshold;
  /* 0x0088 */ unsigned long NumberOfHeaps;
  /* 0x008c */ unsigned long MaximumNumberOfHeaps;
  /* 0x0090 */ void** ProcessHeaps;
  /* 0x0094 */ void* GdiSharedHandleTable;
  /* 0x0098 */ void* ProcessStarterHelper;
  /* 0x009c */ unsigned long GdiDCAttributeList;
  /* 0x00a0 */ struct _RTL_CRITICAL_SECTION* LoaderLock;
  /* 0x00a4 */ unsigned long OSMajorVersion;
  /* 0x00a8 */ unsigned long OSMinorVersion;
  /* 0x00ac */ unsigned short OSBuildNumber;
  /* 0x00ae */ unsigned short OSCSDVersion;
  /* 0x00b0 */ unsigned long OSPlatformId;
  /* 0x00b4 */ unsigned long ImageSubsystem;
  /* 0x00b8 */ unsigned long ImageSubsystemMajorVersion;
  /* 0x00bc */ unsigned long ImageSubsystemMinorVersion;
  /* 0x00c0 */ unsigned long ImageProcessAffinityMask;
  /* 0x00c4 */ unsigned long GdiHandleBuffer[34];
  /* 0x014c */ void* PostProcessInitRoutine /* function */;
  /* 0x0150 */ void* TlsExpansionBitmap;
  /* 0x0154 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x01d4 */ unsigned long SessionId;
  /* 0x01d8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x01e0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x01e8 */ void* pShimData;
  /* 0x01ec */ void* AppCompatInfo;
  /* 0x01f0 */ struct _UNICODE_STRING CSDVersion;
  /* 0x01f8 */ const struct _ACTIVATION_CONTEXT_DATA* ActivationContextData;
  /* 0x01fc */ struct _ASSEMBLY_STORAGE_MAP* ProcessAssemblyStorageMap;
  /* 0x0200 */ const struct _ACTIVATION_CONTEXT_DATA* SystemDefaultActivationContextData;
  /* 0x0204 */ struct _ASSEMBLY_STORAGE_MAP* SystemAssemblyStorageMap;
  /* 0x0208 */ unsigned long MinimumStackCommit;
  /* 0x020c */ struct _FLS_CALLBACK_INFO* FlsCallback;
  /* 0x0210 */ struct _LIST_ENTRY FlsListHead;
  /* 0x0218 */ void* FlsBitmap;
  /* 0x021c */ unsigned long FlsBitmapBits[4];
  /* 0x022c */ unsigned long FlsHighIndex;
  /* 0x0230 */ void* WerRegistrationData;
  /* 0x0234 */ void* WerShipAssertPtr;
} PEB, *PPEB; /* size: 0x0238 */

typedef struct _PEB_FREE_BLOCK
{
  /* 0x0000 */ struct _PEB_FREE_BLOCK* Next;
  /* 0x0004 */ unsigned long Size;
} PEB_FREE_BLOCK, *PPEB_FREE_BLOCK; /* size: 0x0008 */

typedef struct _PEB_LDR_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0008 */ void* SsHandle;
  /* 0x000c */ struct _LIST_ENTRY InLoadOrderModuleList;
  /* 0x0014 */ struct _LIST_ENTRY InMemoryOrderModuleList;
  /* 0x001c */ struct _LIST_ENTRY InInitializationOrderModuleList;
  /* 0x0024 */ void* EntryInProgress;
} PEB_LDR_DATA, *PPEB_LDR_DATA; /* size: 0x0028 */

typedef struct _PERFINFO_GROUPMASK
{
  /* 0x0000 */ unsigned long Masks[8];
} PERFINFO_GROUPMASK, *PPERFINFO_GROUPMASK; /* size: 0x0020 */

typedef struct _PLEX_READ_DATA_REQUEST
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ unsigned long ByteLength;
  /* 0x000c */ unsigned long PlexNumber;
} PLEX_READ_DATA_REQUEST, *PPLEX_READ_DATA_REQUEST; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BufferLength;
  /* 0x0008 */ void* Buffer;
} PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA, *PPLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA; /* size: 0x000c */

typedef enum _PLUGPLAY_CONTROL_CLASS
{
  PlugPlayControlEnumerateDevice = 0,
  PlugPlayControlRegisterNewDevice = 1,
  PlugPlayControlDeregisterDevice = 2,
  PlugPlayControlInitializeDevice = 3,
  PlugPlayControlStartDevice = 4,
  PlugPlayControlUnlockDevice = 5,
  PlugPlayControlQueryAndRemoveDevice = 6,
  PlugPlayControlUserResponse = 7,
  PlugPlayControlGenerateLegacyDevice = 8,
  PlugPlayControlGetInterfaceDeviceList = 9,
  PlugPlayControlProperty = 10,
  PlugPlayControlDeviceClassAssociation = 11,
  PlugPlayControlGetRelatedDevice = 12,
  PlugPlayControlGetInterfaceDeviceAlias = 13,
  PlugPlayControlDeviceStatus = 14,
  PlugPlayControlGetDeviceDepth = 15,
  PlugPlayControlQueryDeviceRelations = 16,
  PlugPlayControlTargetDeviceRelation = 17,
  PlugPlayControlQueryConflictList = 18,
  PlugPlayControlRetrieveDock = 19,
  PlugPlayControlResetDevice = 20,
  PlugPlayControlHaltDevice = 21,
  PlugPlayControlGetBlockedDriverList = 22,
  MaxPlugPlayControl = 23,
} PLUGPLAY_CONTROL_CLASS, *PPLUGPLAY_CONTROL_CLASS;

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ struct _GUID* InterfaceGuid;
  /* 0x000c */ struct _UNICODE_STRING Reference;
  /* 0x0014 */ unsigned char Register;
  /* 0x0018 */ wchar_t* SymLink;
  /* 0x001c */ unsigned long SymLinkLength;
} PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA, *PPLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ struct _CM_RESOURCE_LIST* ResourceList;
  /* 0x000c */ unsigned long ResourceListSize;
  /* 0x0010 */ struct _PLUGPLAY_CONTROL_CONFLICT_LIST* ConflictBuffer;
  /* 0x0014 */ unsigned long ConflictBufferSize;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Status;
} PLUGPLAY_CONTROL_CONFLICT_DATA, *PPLUGPLAY_CONTROL_CONFLICT_DATA; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY
{
  /* 0x0000 */ unsigned long DeviceInstance;
  /* 0x0004 */ unsigned long DeviceFlags;
  /* 0x0008 */ unsigned long ResourceType;
  /* 0x0010 */ unsigned __int64 ResourceStart;
  /* 0x0018 */ unsigned __int64 ResourceEnd;
  /* 0x0020 */ unsigned long ResourceFlags;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_ENTRY, *PPLUGPLAY_CONTROL_CONFLICT_ENTRY; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST
{
  /* 0x0000 */ unsigned long Reserved1;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ unsigned long ConflictsCounted;
  /* 0x000c */ unsigned long ConflictsListed;
  /* 0x0010 */ unsigned long RequiredBufferSize;
  /* 0x0018 */ struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
} PLUGPLAY_CONTROL_CONFLICT_LIST, *PPLUGPLAY_CONTROL_CONFLICT_LIST; /* size: 0x0040 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS
{
  /* 0x0000 */ unsigned long NullDeviceInstance;
  /* 0x0004 */ wchar_t DeviceInstanceStrings[1];
  /* 0x0006 */ char __PADDING__[2];
} PLUGPLAY_CONTROL_CONFLICT_STRINGS, *PPLUGPLAY_CONTROL_CONFLICT_STRINGS; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ unsigned long DeviceDepth;
} PLUGPLAY_CONTROL_DEPTH_DATA, *PPLUGPLAY_CONTROL_DEPTH_DATA; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ unsigned long Flags;
} PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA, *PPLUGPLAY_CONTROL_DEVICE_CONTROL_DATA; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ enum _PNP_QUERY_RELATION Operation;
  /* 0x000c */ unsigned long BufferLength;
  /* 0x0010 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA, *PPLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA; /* size: 0x0014 */

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA
{
  /* 0x0000 */ unsigned long BufferLength;
  /* 0x0004 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_INSTALL_DATA, *PPLUGPLAY_CONTROL_INSTALL_DATA; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING SymbolicLinkName;
  /* 0x0008 */ struct _GUID* AliasClassGuid;
  /* 0x000c */ wchar_t* AliasSymbolicLinkName;
  /* 0x0010 */ unsigned long AliasSymbolicLinkNameLength;
} PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA, *PPLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA; /* size: 0x0014 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ struct _GUID* InterfaceGuid;
  /* 0x000c */ wchar_t* InterfaceList;
  /* 0x0010 */ unsigned long InterfaceListSize;
  /* 0x0014 */ unsigned long Flags;
} PLUGPLAY_CONTROL_INTERFACE_LIST_DATA, *PPLUGPLAY_CONTROL_INTERFACE_LIST_DATA; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING ServiceName;
  /* 0x0008 */ wchar_t* DeviceInstance;
  /* 0x000c */ unsigned long DeviceInstanceLength;
} PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA, *PPLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ unsigned long PropertyType;
  /* 0x000c */ void* Buffer;
  /* 0x0010 */ unsigned long BufferSize;
} PLUGPLAY_CONTROL_PROPERTY_DATA, *PPLUGPLAY_CONTROL_PROPERTY_DATA; /* size: 0x0014 */

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0010 */ wchar_t* VetoName;
  /* 0x0014 */ unsigned long VetoNameLength;
} PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA, *PPLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDeviceInstance;
  /* 0x0008 */ unsigned long Relation;
  /* 0x000c */ wchar_t* RelatedDeviceInstance;
  /* 0x0010 */ unsigned long RelatedDeviceInstanceLength;
} PLUGPLAY_CONTROL_RELATED_DEVICE_DATA, *PPLUGPLAY_CONTROL_RELATED_DEVICE_DATA; /* size: 0x0014 */

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA
{
  /* 0x0000 */ unsigned long DeviceInstanceLength;
  /* 0x0004 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA, *PPLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0008 */ unsigned long Operation;
  /* 0x000c */ unsigned long DeviceStatus;
  /* 0x0010 */ unsigned long DeviceProblem;
  /* 0x0014 */ unsigned long Flags;
} PLUGPLAY_CONTROL_STATUS_DATA, *PPLUGPLAY_CONTROL_STATUS_DATA; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA
{
  /* 0x0000 */ void* UserFileHandle;
  /* 0x0004 */ long Status;
  /* 0x0008 */ unsigned long DeviceInstanceLen;
  /* 0x000c */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_TARGET_RELATION_DATA, *PPLUGPLAY_CONTROL_TARGET_RELATION_DATA; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA
{
  /* 0x0000 */ unsigned long Response;
  /* 0x0004 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0008 */ wchar_t* VetoName;
  /* 0x000c */ unsigned long VetoNameLength;
} PLUGPLAY_CONTROL_USER_RESPONSE_DATA, *PPLUGPLAY_CONTROL_USER_RESPONSE_DATA; /* size: 0x0010 */

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION
{
  /* 0x0000 */ struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
  /* 0x0014 */ void* FileObject;
  /* 0x0018 */ long NameBufferOffset;
  /* 0x001c */ unsigned char CustomDataBuffer[1];
  /* 0x001d */ char __PADDING__[3];
} PLUGPLAY_CUSTOM_NOTIFICATION, *PPLUGPLAY_CUSTOM_NOTIFICATION; /* size: 0x0020 */

typedef struct _PLUGPLAY_EVENT_BLOCK
{
  /* 0x0000 */ struct _GUID EventGuid;
  /* 0x0010 */ enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ unsigned long* Result;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long TotalSize;
  /* 0x0020 */ void* DeviceObject;
  union
  {
    union
    {
      struct
      {
        /* 0x0024 */ struct _GUID ClassGuid;
        /* 0x0034 */ wchar_t SymbolicLinkName[1];
        /* 0x0036 */ char __PADDING__[2];
      } /* size: 0x0014 */ DeviceClass;
      struct
      {
        /* 0x0024 */ wchar_t DeviceIds[1];
      } /* size: 0x0002 */ TargetDevice;
      struct
      {
        /* 0x0024 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ InstallDevice;
      struct
      {
        /* 0x0024 */ void* NotificationStructure;
        /* 0x0028 */ wchar_t DeviceIds[1];
        /* 0x002a */ char __PADDING__[2];
      } /* size: 0x0008 */ CustomNotification;
      struct
      {
        /* 0x0024 */ void* Notification;
      } /* size: 0x0004 */ ProfileNotification;
      struct
      {
        /* 0x0024 */ unsigned long NotificationCode;
        /* 0x0028 */ unsigned long NotificationData;
      } /* size: 0x0008 */ PowerNotification;
      struct
      {
        /* 0x0024 */ enum _PNP_VETO_TYPE VetoType;
        /* 0x0028 */ wchar_t DeviceIdVetoNameBuffer[1];
        /* 0x002a */ char __PADDING__[2];
      } /* size: 0x0008 */ VetoNotification;
      struct
      {
        /* 0x0024 */ struct _GUID BlockedDriverGuid;
      } /* size: 0x0010 */ BlockedDriverNotification;
      struct
      {
        /* 0x0024 */ wchar_t ParentId[1];
      } /* size: 0x0002 */ InvalidIDNotification;
      struct
      {
        /* 0x0024 */ struct _GUID PowerSettingGuid;
        /* 0x0034 */ unsigned char PowerSettingChanged;
        /* 0x0038 */ unsigned long DataLength;
        /* 0x003c */ unsigned char Data[1];
        /* 0x003d */ char __PADDING__[3];
      } /* size: 0x001c */ PowerSettingNotification;
    }; /* size: 0x001c */
  } /* size: 0x001c */ u;
} PLUGPLAY_EVENT_BLOCK, *PPLUGPLAY_EVENT_BLOCK; /* size: 0x0040 */

typedef enum _PLUGPLAY_EVENT_CATEGORY
{
  HardwareProfileChangeEvent = 0,
  TargetDeviceChangeEvent = 1,
  DeviceClassChangeEvent = 2,
  CustomDeviceEvent = 3,
  DeviceInstallEvent = 4,
  DeviceArrivalEvent = 5,
  PowerEvent = 6,
  VetoEvent = 7,
  BlockedDriverEvent = 8,
  InvalidIDEvent = 9,
  PowerSettingChange = 10,
  MaxPlugEventCategory = 11,
} PLUGPLAY_EVENT_CATEGORY, *PPLUGPLAY_EVENT_CATEGORY;

typedef struct _PLUGPLAY_NOTIFY_HDR
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} PLUGPLAY_NOTIFY_HDR, *PPLUGPLAY_NOTIFY_HDR; /* size: 0x0014 */

typedef struct _PMD
{
  /* 0x0000 */ int mdisp;
  /* 0x0004 */ int pdisp;
  /* 0x0008 */ int vdisp;
} PMD, *PPMD; /* size: 0x000c */

typedef enum _PNP_QUERY_RELATION
{
  PnpQueryEjectRelations = 0,
  PnpQueryRemovalRelations = 1,
  PnpQueryPowerRelations = 2,
  PnpQueryBusRelations = 3,
  MaxPnpQueryRelations = 4,
} PNP_QUERY_RELATION, *PPNP_QUERY_RELATION;

typedef enum _PNP_VETO_TYPE
{
  PNP_VetoTypeUnknown = 0,
  PNP_VetoLegacyDevice = 1,
  PNP_VetoPendingClose = 2,
  PNP_VetoWindowsApp = 3,
  PNP_VetoWindowsService = 4,
  PNP_VetoOutstandingOpen = 5,
  PNP_VetoDevice = 6,
  PNP_VetoDriver = 7,
  PNP_VetoIllegalDeviceRequest = 8,
  PNP_VetoInsufficientPower = 9,
  PNP_VetoNonDisableable = 10,
  PNP_VetoLegacyDriver = 11,
  PNP_VetoInsufficientRights = 12,
} PNP_VETO_TYPE, *PPNP_VETO_TYPE;

typedef struct _POINTFLOAT
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
} POINTFLOAT, *PPOINTFLOAT; /* size: 0x0008 */

typedef struct _POINTL
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
} POINTL, *PPOINTL; /* size: 0x0008 */

typedef struct _POOLED_USAGE_AND_LIMITS
{
  /* 0x0000 */ unsigned long PeakPagedPoolUsage;
  /* 0x0004 */ unsigned long PagedPoolUsage;
  /* 0x0008 */ unsigned long PagedPoolLimit;
  /* 0x000c */ unsigned long PeakNonPagedPoolUsage;
  /* 0x0010 */ unsigned long NonPagedPoolUsage;
  /* 0x0014 */ unsigned long NonPagedPoolLimit;
  /* 0x0018 */ unsigned long PeakPagefileUsage;
  /* 0x001c */ unsigned long PagefileUsage;
  /* 0x0020 */ unsigned long PagefileLimit;
} POOLED_USAGE_AND_LIMITS, *PPOOLED_USAGE_AND_LIMITS; /* size: 0x0024 */

typedef struct _PORT_DATA_ENTRY
{
  /* 0x0000 */ void* Base;
  /* 0x0004 */ unsigned long Size;
} PORT_DATA_ENTRY, *PPORT_DATA_ENTRY; /* size: 0x0008 */

typedef struct _PORT_DATA_INFORMATION
{
  /* 0x0000 */ unsigned long CountDataEntries;
  /* 0x0004 */ struct _PORT_DATA_ENTRY DataEntries[1];
} PORT_DATA_INFORMATION, *PPORT_DATA_INFORMATION; /* size: 0x000c */

typedef enum _PORT_INFORMATION_CLASS
{
  PortBasicInformation = 0,
  PortDumpInformation = 1,
} PORT_INFORMATION_CLASS, *PPORT_INFORMATION_CLASS;

typedef struct _PORT_MESSAGE
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ short DataLength;
        /* 0x0002 */ short TotalLength;
      } /* size: 0x0004 */ s1;
      /* 0x0000 */ unsigned long Length;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ short Type;
        /* 0x0006 */ short DataInfoOffset;
      } /* size: 0x0004 */ s2;
      /* 0x0004 */ unsigned long ZeroInit;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  union
  {
    /* 0x0008 */ struct _CLIENT_ID ClientId;
    /* 0x0008 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long MessageId;
  union
  {
    /* 0x0014 */ unsigned long ClientViewSize;
    /* 0x0014 */ unsigned long CallbackId;
  }; /* size: 0x0004 */
} PORT_MESSAGE, *PPORT_MESSAGE; /* size: 0x0018 */

typedef struct _PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ void* SectionHandle;
  /* 0x0008 */ unsigned long SectionOffset;
  /* 0x000c */ unsigned long ViewSize;
  /* 0x0010 */ void* ViewBase;
  /* 0x0014 */ void* ViewRemoteBase;
} PORT_VIEW, *PPORT_VIEW; /* size: 0x0018 */

typedef union _POWER_STATE
{
  union
  {
    /* 0x0000 */ enum _SYSTEM_POWER_STATE SystemState;
    /* 0x0000 */ enum _DEVICE_POWER_STATE DeviceState;
  }; /* size: 0x0004 */
} POWER_STATE, *PPOWER_STATE; /* size: 0x0004 */

typedef enum _POWER_STATE_TYPE
{
  SystemPowerState = 0,
  DevicePowerState = 1,
} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

typedef struct _PO_TRANSITION_VETO
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ struct _PO_TRANSITION_VETO_REASON Reason;
  /* 0x000c */ unsigned long ProcessId;
  union
  {
    /* 0x0010 */ struct _PO_TRANSITION_VETO_WINDOW Window;
    /* 0x0010 */ struct _PO_TRANSITION_VETO_SERVICE Service;
  }; /* size: 0x0004 */
} PO_TRANSITION_VETO, *PPO_TRANSITION_VETO; /* size: 0x0014 */

typedef struct _PO_TRANSITION_VETOES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _PO_TRANSITION_VETO Vetoes[1];
} PO_TRANSITION_VETOES, *PPO_TRANSITION_VETOES; /* size: 0x0018 */

typedef struct _PO_TRANSITION_VETO_REASON
{
  /* 0x0000 */ unsigned long ResourceId;
  /* 0x0004 */ unsigned long ModuleNameOffset;
} PO_TRANSITION_VETO_REASON, *PPO_TRANSITION_VETO_REASON; /* size: 0x0008 */

typedef struct _PO_TRANSITION_VETO_SERVICE
{
  /* 0x0000 */ unsigned long ServiceNameOffset;
} PO_TRANSITION_VETO_SERVICE, *PPO_TRANSITION_VETO_SERVICE; /* size: 0x0004 */

typedef struct _PO_TRANSITION_VETO_WINDOW
{
  /* 0x0000 */ void* Handle;
} PO_TRANSITION_VETO_WINDOW, *PPO_TRANSITION_VETO_WINDOW; /* size: 0x0004 */

typedef struct _PO_WAKE_SOURCE_DEVICE
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ wchar_t InstancePath[1];
  /* 0x000a */ char __PADDING__[2];
} PO_WAKE_SOURCE_DEVICE, *PPO_WAKE_SOURCE_DEVICE; /* size: 0x000c */

typedef struct _PO_WAKE_SOURCE_FIXED
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
} PO_WAKE_SOURCE_FIXED, *PPO_WAKE_SOURCE_FIXED; /* size: 0x000c */

typedef struct _PO_WAKE_SOURCE_HEADER
{
  /* 0x0000 */ enum PO_WAKE_SOURCE_TYPE Type;
  /* 0x0004 */ unsigned long Size;
} PO_WAKE_SOURCE_HEADER, *PPO_WAKE_SOURCE_HEADER; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_HISTORY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_HISTORY, *PPO_WAKE_SOURCE_HISTORY; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_INFO
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_INFO, *PPO_WAKE_SOURCE_INFO; /* size: 0x0008 */

typedef struct _PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
} PREFIX_TABLE, *PPREFIX_TABLE; /* size: 0x0008 */

typedef struct _PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0014 */ struct _STRING* Prefix;
} PREFIX_TABLE_ENTRY, *PPREFIX_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _PRE_APP_COMPAT_INFO
{
  /* 0x0000 */ unsigned long dwEntryTotalSize;
  /* 0x0004 */ unsigned long dwResourceInfoSize;
} PRE_APP_COMPAT_INFO, *PPRE_APP_COMPAT_INFO; /* size: 0x0008 */

typedef enum _PRIORITY_HINT
{
  IoPriorityHintVeryLow = 0,
  IoPriorityHintLow = 1,
  IoPriorityHintNormal = 2,
  MaximumIoPriorityHintType = 3,
} PRIORITY_HINT, *PPRIORITY_HINT;

typedef struct _PRIVILEGE_SET
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ unsigned long Control;
  /* 0x0008 */ struct _LUID_AND_ATTRIBUTES Privilege[1];
} PRIVILEGE_SET, *PPRIVILEGE_SET; /* size: 0x0014 */

typedef struct _PRIVKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ unsigned long bitlenX;
  /* 0x0014 */ struct _DSSSEED DSSSeed;
} PRIVKEYVER3, *PPRIVKEYVER3; /* size: 0x002c */

typedef struct _PRIV_RESOLVER_INFO
{
  /* 0x0000 */ unsigned __int64 OxidServer;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pServerORBindings;
  /* 0x000c */ struct tagOXID_INFO OxidInfo;
  /* 0x0038 */ unsigned __int64 LocalMidOfRemote;
  /* 0x0040 */ unsigned long DllServerModel;
  /* 0x0044 */ wchar_t* pwszDllServer;
  /* 0x0048 */ int FoundInROT;
  /* 0x004c */ long __PADDING__[1];
} PRIV_RESOLVER_INFO, *PPRIV_RESOLVER_INFO; /* size: 0x0050 */

typedef struct _PRIV_SCM_INFO
{
  /* 0x0000 */ long lThreadID;
  /* 0x0004 */ wchar_t* pwszWinstaDesktop;
  /* 0x0008 */ unsigned __int64 ProcessSignature;
  /* 0x0010 */ wchar_t* pEnvBlock;
  /* 0x0014 */ unsigned long EnvBlockLength;
} PRIV_SCM_INFO, *PPRIV_SCM_INFO; /* size: 0x0018 */

typedef enum _PROCESSINFOCLASS
{
  ProcessBasicInformation = 0,
  ProcessQuotaLimits = 1,
  ProcessIoCounters = 2,
  ProcessVmCounters = 3,
  ProcessTimes = 4,
  ProcessBasePriority = 5,
  ProcessRaisePriority = 6,
  ProcessDebugPort = 7,
  ProcessExceptionPort = 8,
  ProcessAccessToken = 9,
  ProcessLdtInformation = 10,
  ProcessLdtSize = 11,
  ProcessDefaultHardErrorMode = 12,
  ProcessIoPortHandlers = 13,
  ProcessPooledUsageAndLimits = 14,
  ProcessWorkingSetWatch = 15,
  ProcessUserModeIOPL = 16,
  ProcessEnableAlignmentFaultFixup = 17,
  ProcessPriorityClass = 18,
  ProcessWx86Information = 19,
  ProcessHandleCount = 20,
  ProcessAffinityMask = 21,
  ProcessPriorityBoost = 22,
  ProcessDeviceMap = 23,
  ProcessSessionInformation = 24,
  ProcessForegroundInformation = 25,
  ProcessWow64Information = 26,
  ProcessImageFileName = 27,
  ProcessLUIDDeviceMapsEnabled = 28,
  ProcessBreakOnTermination = 29,
  ProcessDebugObjectHandle = 30,
  ProcessDebugFlags = 31,
  ProcessHandleTracing = 32,
  ProcessIoPriority = 33,
  ProcessExecuteFlags = 34,
  ProcessTlsInformation = 35,
  ProcessCookie = 36,
  ProcessImageInformation = 37,
  ProcessCycleTime = 38,
  ProcessPagePriority = 39,
  ProcessInstrumentationCallback = 40,
  ProcessThreadStackAllocation = 41,
  ProcessWorkingSetWatchEx = 42,
  ProcessImageFileNameWin32 = 43,
  ProcessImageFileMapping = 44,
  ProcessAffinityUpdateMode = 45,
  ProcessMemoryAllocationMode = 46,
  MaxProcessInfoClass = 47,
} PROCESSINFOCLASS, *PPROCESSINFOCLASS;

typedef enum _PROCESSOR_CACHE_TYPE
{
  CacheUnified = 0,
  CacheInstruction = 1,
  CacheData = 2,
  CacheTrace = 3,
} PROCESSOR_CACHE_TYPE, *PPROCESSOR_CACHE_TYPE;

typedef struct _PROCESSOR_IDLE_STATE
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ unsigned long Context;
  /* 0x0014 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE, *PPROCESSOR_IDLE_STATE; /* size: 0x0018 */

typedef struct _PROCESSOR_IDLE_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long TargetProcessors;
  /* 0x0014 */ struct _PROCESSOR_IDLE_STATE State[1];
} PROCESSOR_IDLE_STATES, *PPROCESSOR_IDLE_STATES; /* size: 0x002c */

typedef struct _PROCESSOR_IDLE_STATES_EX
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long TargetProcessors;
  /* 0x0014 */ struct _PROCESSOR_IDLE_STATE_EX State[1];
} PROCESSOR_IDLE_STATES_EX, *PPROCESSOR_IDLE_STATES_EX; /* size: 0x002c */

typedef struct _PROCESSOR_IDLE_STATE_EX
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ void* Context;
  /* 0x0014 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE_EX, *PPROCESSOR_IDLE_STATE_EX; /* size: 0x0018 */

typedef struct _PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long Number;
  /* 0x0004 */ unsigned long MaxMhz;
  /* 0x0008 */ unsigned long CurrentMhz;
  /* 0x000c */ unsigned long MhzLimit;
  /* 0x0010 */ unsigned long MaxIdleState;
  /* 0x0014 */ unsigned long CurrentIdleState;
} PROCESSOR_POWER_INFORMATION, *PPROCESSOR_POWER_INFORMATION; /* size: 0x0018 */

typedef struct _PROCESSOR_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char DynamicThrottle;
  /* 0x0005 */ unsigned char Spare[3];
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DisableCStates : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ unsigned long PolicyCount;
  /* 0x0010 */ struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY; /* size: 0x004c */

typedef struct _PROCESSOR_POWER_POLICY_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned long DemoteLimit;
  /* 0x0008 */ unsigned long PromoteLimit;
  /* 0x000c */ unsigned char DemotePercent;
  /* 0x000d */ unsigned char PromotePercent;
  /* 0x000e */ unsigned char Spare[2];
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned long AllowDemotion : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned long AllowPromotion : 1; /* bit position: 1 */
    /* 0x0010 */ unsigned long Reserved : 30; /* bit position: 2 */
  }; /* bitfield */
} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO; /* size: 0x0014 */

typedef struct _PROCESS_ACCESS_TOKEN
{
  /* 0x0000 */ void* Token;
  /* 0x0004 */ void* Thread;
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN; /* size: 0x0008 */

typedef union _PROCESS_AFFINITY_UPDATE_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableAutoUpdate : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Permanent : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_AFFINITY_UPDATE_MODE, *PPROCESS_AFFINITY_UPDATE_MODE; /* size: 0x0004 */

typedef struct _PROCESS_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ struct _PEB* PebBaseAddress;
  /* 0x0008 */ unsigned long AffinityMask;
  /* 0x000c */ long BasePriority;
  /* 0x0010 */ unsigned long UniqueProcessId;
  /* 0x0014 */ unsigned long InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION, *PPROCESS_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _PROCESS_BASIC_INFORMATION64
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ unsigned int Pad1;
  /* 0x0008 */ unsigned __int64 PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ unsigned int Pad2;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION64, *PPROCESS_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _PROCESS_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} PROCESS_CYCLE_TIME_INFORMATION, *PPROCESS_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0004 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION; /* size: 0x0024 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0004 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ unsigned long Flags;
} PROCESS_DEVICEMAP_INFORMATION_EX, *PPROCESS_DEVICEMAP_INFORMATION_EX; /* size: 0x0028 */

typedef struct _PROCESS_EXCEPTION_PORT
{
  /* 0x0000 */ void* ExceptionPortHandle;
  /* 0x0004 */ unsigned long StateFlags;
} PROCESS_EXCEPTION_PORT, *PPROCESS_EXCEPTION_PORT; /* size: 0x0008 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct _PROCESS_BASIC_INFORMATION BasicInfo;
  union
  {
    /* 0x001c */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x001c */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x001c */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x001c */ unsigned long IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x001c */ unsigned long IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x001c */ unsigned long SpareBits : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_EXTENDED_BASIC_INFORMATION, *PPROCESS_EXTENDED_BASIC_INFORMATION; /* size: 0x0020 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
  union
  {
    /* 0x0038 */ unsigned int Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned int IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned int IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned int IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned int IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned int SpareBits : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION64, *PPROCESS_EXTENDED_BASIC_INFORMATION64; /* size: 0x0040 */

typedef struct _PROCESS_FOREGROUND_BACKGROUND
{
  /* 0x0000 */ unsigned char Foreground;
} PROCESS_FOREGROUND_BACKGROUND, *PPROCESS_FOREGROUND_BACKGROUND; /* size: 0x0001 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE
{
  /* 0x0000 */ unsigned long Flags;
} PROCESS_HANDLE_TRACING_ENABLE, *PPROCESS_HANDLE_TRACING_ENABLE; /* size: 0x0004 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalSlots;
} PROCESS_HANDLE_TRACING_ENABLE_EX, *PPROCESS_HANDLE_TRACING_ENABLE_EX; /* size: 0x0008 */

typedef struct _PROCESS_HANDLE_TRACING_ENTRY
{
  /* 0x0000 */ void* Handle;
  /* 0x0004 */ struct _CLIENT_ID ClientId;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ void* Stacks[16];
} PROCESS_HANDLE_TRACING_ENTRY, *PPROCESS_HANDLE_TRACING_ENTRY; /* size: 0x0050 */

typedef struct _PROCESS_HANDLE_TRACING_QUERY
{
  /* 0x0000 */ void* Handle;
  /* 0x0004 */ unsigned long TotalTraces;
  /* 0x0008 */ struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
} PROCESS_HANDLE_TRACING_QUERY, *PPROCESS_HANDLE_TRACING_QUERY; /* size: 0x0058 */

typedef struct _PROCESS_HEAP_ENTRY
{
  /* 0x0000 */ void* lpData;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char cbOverhead;
  /* 0x0009 */ unsigned char iRegionIndex;
  /* 0x000a */ unsigned short wFlags;
  union
  {
    struct
    {
      /* 0x000c */ void* hMem;
      /* 0x0010 */ unsigned long dwReserved[3];
    } /* size: 0x0010 */ Block;
    struct
    {
      /* 0x000c */ unsigned long dwCommittedSize;
      /* 0x0010 */ unsigned long dwUnCommittedSize;
      /* 0x0014 */ void* lpFirstBlock;
      /* 0x0018 */ void* lpLastBlock;
    } /* size: 0x0010 */ Region;
  }; /* size: 0x0010 */
} PROCESS_HEAP_ENTRY, *PPROCESS_HEAP_ENTRY; /* size: 0x001c */

typedef struct _PROCESS_HEAP_INFORMATION
{
  /* 0x0000 */ unsigned long ReserveSize;
  /* 0x0004 */ unsigned long CommitSize;
  /* 0x0008 */ unsigned long NumberOfHeaps;
  /* 0x000c */ unsigned long FirstHeapInformationOffset;
} PROCESS_HEAP_INFORMATION, *PPROCESS_HEAP_INFORMATION; /* size: 0x0010 */

typedef struct _PROCESS_INFORMATION
{
  /* 0x0000 */ void* hProcess;
  /* 0x0004 */ void* hThread;
  /* 0x0008 */ unsigned long dwProcessId;
  /* 0x000c */ unsigned long dwThreadId;
} PROCESS_INFORMATION, *PPROCESS_INFORMATION; /* size: 0x0010 */

typedef union _PROCESS_MEMORY_ALLOCATION_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TopDown : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MEMORY_ALLOCATION_MODE, *PPROCESS_MEMORY_ALLOCATION_MODE; /* size: 0x0004 */

typedef struct _PROCESS_PRIORITY_CLASS
{
  /* 0x0000 */ unsigned char Foreground;
  /* 0x0001 */ unsigned char PriorityClass;
} PROCESS_PRIORITY_CLASS, *PPROCESS_PRIORITY_CLASS; /* size: 0x0002 */

typedef struct _PROCESS_SESSION_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
} PROCESS_SESSION_INFORMATION, *PPROCESS_SESSION_INFORMATION; /* size: 0x0004 */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ unsigned long ReserveSize;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ void* StackBase;
} PROCESS_STACK_ALLOCATION_INFORMATION, *PPROCESS_STACK_ALLOCATION_INFORMATION; /* size: 0x000c */

typedef struct _PROCESS_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long OperationType;
  /* 0x0008 */ unsigned long ThreadDataCount;
  union
  {
    /* 0x000c */ unsigned long TlsIndex;
    /* 0x000c */ unsigned long PreviousCount;
  }; /* size: 0x0004 */
  /* 0x0010 */ struct _THREAD_TLS_INFORMATION ThreadData[1];
} PROCESS_TLS_INFORMATION, *PPROCESS_TLS_INFORMATION; /* size: 0x001c */

typedef enum _PROCESS_TLS_INFORMATION_TYPE
{
  ProcessTlsReplaceIndex = 0,
  ProcessTlsReplaceVector = 1,
  MaxProcessTlsOperation = 2,
} PROCESS_TLS_INFORMATION_TYPE, *PPROCESS_TLS_INFORMATION_TYPE;

typedef struct _PROCESS_WS_WATCH_INFORMATION
{
  /* 0x0000 */ void* FaultingPc;
  /* 0x0004 */ void* FaultingVa;
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION; /* size: 0x0008 */

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX
{
  /* 0x0000 */ struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
  /* 0x0008 */ unsigned long FaultingThreadId;
  /* 0x000c */ unsigned long Flags;
} PROCESS_WS_WATCH_INFORMATION_EX, *PPROCESS_WS_WATCH_INFORMATION_EX; /* size: 0x0010 */

struct _PROC_THREAD_ATTRIBUTE_LIST;

typedef enum _PROC_THREAD_ATTRIBUTE_NUM
{
  ProcThreadAttributeParentProcess = 0,
  ProcThreadAttributeExtendedFlags = 1,
  ProcThreadAttributeHandleList = 2,
  ProcThreadAttributeMax = 3,
} PROC_THREAD_ATTRIBUTE_NUM, *PPROC_THREAD_ATTRIBUTE_NUM;

typedef enum _PROGRESS_INVOKE_SETTING
{
  ProgressInvokeNever = 1,
  ProgressInvokeEveryObject = 2,
  ProgressInvokeOnError = 3,
  ProgressCancelOperation = 4,
  ProgressRetryOperation = 5,
  ProgressInvokePrePostError = 6,
} PROGRESS_INVOKE_SETTING, *PPROGRESS_INVOKE_SETTING;

typedef enum _PROPOP
{
  PROPOP_IGNORE = 1,
  PROPOP_DELETE = 2,
  PROPOP_INSERT = 3,
  PROPOP_MOVE = 4,
  PROPOP_UPDATE = 5,
} PROPOP, *PPROPOP;

typedef struct _PROVDATA_SIP
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ struct SIP_DISPATCH_INFO_* pSip;
  /* 0x0018 */ struct SIP_DISPATCH_INFO_* pCATSip;
  /* 0x001c */ struct SIP_SUBJECTINFO_* psSipSubjectInfo;
  /* 0x0020 */ struct SIP_SUBJECTINFO_* psSipCATSubjectInfo;
  /* 0x0024 */ struct SIP_INDIRECT_DATA_* psIndirectData;
} PROVDATA_SIP, *PPROVDATA_SIP; /* size: 0x0028 */

typedef struct _PROV_ENUMALGS
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwBitLen;
  /* 0x0008 */ unsigned long dwNameLen;
  /* 0x000c */ char szName[20];
} PROV_ENUMALGS, *PPROV_ENUMALGS; /* size: 0x0020 */

typedef struct _PROV_ENUMALGS_EX
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwDefaultLen;
  /* 0x0008 */ unsigned long dwMinLen;
  /* 0x000c */ unsigned long dwMaxLen;
  /* 0x0010 */ unsigned long dwProtocols;
  /* 0x0014 */ unsigned long dwNameLen;
  /* 0x0018 */ char szName[20];
  /* 0x002c */ unsigned long dwLongNameLen;
  /* 0x0030 */ char szLongName[40];
} PROV_ENUMALGS_EX, *PPROV_ENUMALGS_EX; /* size: 0x0058 */

typedef enum _PROXY_CLASS
{
  ProxyFull = 0,
  ProxyService = 1,
  ProxyTree = 2,
  ProxyDirectory = 3,
} PROXY_CLASS, *PPROXY_CLASS;

typedef enum _PRT
{
  PRT_IGNORE = 0,
  PRT_CREATE_NEW = 1,
  PRT_USE_THIS = 2,
  PRT_USE_THIS_ONLY = 3,
} PRT, *PPRT;

typedef struct _PSFEATURE_CUSTPAPER
{
  /* 0x0000 */ long lOrientation;
  /* 0x0004 */ long lWidth;
  /* 0x0008 */ long lHeight;
  /* 0x000c */ long lWidthOffset;
  /* 0x0010 */ long lHeightOffset;
} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER; /* size: 0x0014 */

typedef struct _PSFEATURE_OUTPUT
{
  /* 0x0000 */ int bPageIndependent;
  /* 0x0004 */ int bSetPageDevice;
} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT; /* size: 0x0008 */

typedef struct _PSINJECTDATA
{
  /* 0x0000 */ unsigned long DataBytes;
  /* 0x0004 */ unsigned short InjectionPoint;
  /* 0x0006 */ unsigned short PageNumber;
} PSINJECTDATA, *PPSINJECTDATA; /* size: 0x0008 */

typedef struct _PS_ATTRIBUTE
{
  /* 0x0000 */ unsigned long Attribute;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ unsigned long Value;
    /* 0x0008 */ void* ValuePtr;
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long* ReturnLength;
} PS_ATTRIBUTE, *PPS_ATTRIBUTE; /* size: 0x0010 */

typedef struct _PS_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned long TotalLength;
  /* 0x0004 */ struct _PS_ATTRIBUTE Attributes[1];
} PS_ATTRIBUTE_LIST, *PPS_ATTRIBUTE_LIST; /* size: 0x0014 */

typedef enum _PS_ATTRIBUTE_NUM
{
  PsAttributeParentProcess = 0,
  PsAttributeDebugObject = 1,
  PsAttributeToken = 2,
  PsAttributeClientId = 3,
  PsAttributeTebAddress = 4,
  PsAttributeImageName = 5,
  PsAttributeImageInfo = 6,
  PsAttributeMemoryReserve = 7,
  PsAttributePriorityClass = 8,
  PsAttributeErrorMode = 9,
  PsAttributeStdHandleInfo = 10,
  PsAttributeHandleList = 11,
  PsAttributeMax = 12,
} PS_ATTRIBUTE_NUM, *PPS_ATTRIBUTE_NUM;

typedef struct _PS_CREATE_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ enum PS_CREATE_STATE State;
  union
  {
    struct
    {
      union
      {
        /* 0x0008 */ unsigned long InitFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0008 */ unsigned char WriteOutputOnExit : 1; /* bit position: 0 */
            /* 0x0008 */ unsigned char DetectManifest : 1; /* bit position: 1 */
            /* 0x0008 */ unsigned char SpareBits1 : 6; /* bit position: 2 */
          }; /* bitfield */
          struct /* bitfield */
          {
            /* 0x0009 */ unsigned char IFEOKeyState : 2; /* bit position: 0 */
            /* 0x0009 */ unsigned char SpareBits2 : 6; /* bit position: 2 */
          }; /* bitfield */
          /* 0x000a */ unsigned short ProhibitedImageCharacteristics : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x000c */ unsigned long AdditionalFileAccess;
    } /* size: 0x0008 */ InitState;
    struct
    {
      /* 0x0008 */ void* FileHandle;
    } /* size: 0x0004 */ FailSection;
    struct
    {
      /* 0x0008 */ void* IFEOKey;
    } /* size: 0x0004 */ ExeName;
    struct
    {
      union
      {
        /* 0x0008 */ unsigned long OutputFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0008 */ unsigned char ProtectedProcess : 1; /* bit position: 0 */
            /* 0x0008 */ unsigned char AddressSpaceOverride : 1; /* bit position: 1 */
            /* 0x0008 */ unsigned char DevOverrideEnabled : 1; /* bit position: 2 */
            /* 0x0008 */ unsigned char ManifestDetected : 1; /* bit position: 3 */
            /* 0x0008 */ unsigned char SpareBits1 : 4; /* bit position: 4 */
          }; /* bitfield */
          /* 0x0009 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x000a */ unsigned short SpareBits3 : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x000c */ void* FileHandle;
      /* 0x0010 */ void* SectionHandle;
      /* 0x0018 */ unsigned __int64 UserProcessParametersNative;
      /* 0x0020 */ unsigned long UserProcessParametersWow64;
      /* 0x0024 */ unsigned long CurrentParameterFlags;
      /* 0x0028 */ unsigned __int64 PebAddressNative;
      /* 0x0030 */ unsigned long PebAddressWow64;
      /* 0x0038 */ unsigned __int64 ManifestAddress;
      /* 0x0040 */ unsigned long ManifestSize;
      /* 0x0044 */ long __PADDING__[1];
    } /* size: 0x0040 */ SuccessState;
  }; /* size: 0x0040 */
} PS_CREATE_INFO, *PPS_CREATE_INFO; /* size: 0x0048 */

typedef enum _PS_IFEO_KEY_STATE
{
  PsReadIFEOAllValues = 0,
  PsSkipIFEODebugger = 1,
  PsSkipAllIFEO = 2,
  PsMaxIFEOKeyStates = 3,
} PS_IFEO_KEY_STATE, *PPS_IFEO_KEY_STATE;

typedef struct _PS_MEMORY_RESERVE
{
  /* 0x0000 */ void* ReserveAddress;
  /* 0x0004 */ unsigned long ReserveSize;
} PS_MEMORY_RESERVE, *PPS_MEMORY_RESERVE; /* size: 0x0008 */

typedef struct _PS_STD_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StdHandleState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long PseudoHandleMask : 3; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long StdHandleSubsystemType;
} PS_STD_HANDLE_INFO, *PPS_STD_HANDLE_INFO; /* size: 0x0008 */

typedef enum _PS_STD_HANDLE_STATE
{
  PsNeverDuplicate = 0,
  PsRequestDuplicate = 1,
  PsAlwaysDuplicate = 2,
  PsMaxStdHandleStates = 3,
} PS_STD_HANDLE_STATE, *PPS_STD_HANDLE_STATE;

typedef struct _PUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
} PUBKEY, *PPUBKEY; /* size: 0x0008 */

typedef struct _PUBKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ struct _DSSSEED DSSSeed;
} PUBKEYVER3, *PPUBKEYVER3; /* size: 0x0028 */

typedef struct _PUBLICKEYSTRUC
{
  /* 0x0000 */ unsigned char bType;
  /* 0x0001 */ unsigned char bVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned int aiKeyAlg;
} PUBLICKEYSTRUC, *PPUBLICKEYSTRUC; /* size: 0x0008 */

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long Reserved[10];
} PUBLIC_OBJECT_BASIC_INFORMATION, *PPUBLIC_OBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _ProcessActivatorToken
{
  /* 0x0000 */ struct _GUID ProcessGUID;
  /* 0x0010 */ struct _GUID ActivatorIPID;
  /* 0x0020 */ unsigned long dwFlags;
} ProcessActivatorToken, *PProcessActivatorToken; /* size: 0x0024 */

typedef struct _QUAD
{
  union
  {
    /* 0x0000 */ __int64 UseThisFieldToCopy;
    /* 0x0000 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
} QUAD, *PQUAD; /* size: 0x0008 */

typedef struct _QUERY_SERVICE_CONFIGA
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ char* lpBinaryPathName;
  /* 0x0010 */ char* lpLoadOrderGroup;
  /* 0x0014 */ unsigned long dwTagId;
  /* 0x0018 */ char* lpDependencies;
  /* 0x001c */ char* lpServiceStartName;
  /* 0x0020 */ char* lpDisplayName;
} QUERY_SERVICE_CONFIGA, *PQUERY_SERVICE_CONFIGA; /* size: 0x0024 */

typedef struct _QUERY_SERVICE_CONFIGW
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ wchar_t* lpBinaryPathName;
  /* 0x0010 */ wchar_t* lpLoadOrderGroup;
  /* 0x0014 */ unsigned long dwTagId;
  /* 0x0018 */ wchar_t* lpDependencies;
  /* 0x001c */ wchar_t* lpServiceStartName;
  /* 0x0020 */ wchar_t* lpDisplayName;
} QUERY_SERVICE_CONFIGW, *PQUERY_SERVICE_CONFIGW; /* size: 0x0024 */

typedef struct _QUERY_SERVICE_LOCK_STATUSA
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ char* lpLockOwner;
  /* 0x0008 */ unsigned long dwLockDuration;
} QUERY_SERVICE_LOCK_STATUSA, *PQUERY_SERVICE_LOCK_STATUSA; /* size: 0x000c */

typedef struct _QUERY_SERVICE_LOCK_STATUSW
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ wchar_t* lpLockOwner;
  /* 0x0008 */ unsigned long dwLockDuration;
} QUERY_SERVICE_LOCK_STATUSW, *PQUERY_SERVICE_LOCK_STATUSW; /* size: 0x000c */

typedef struct _QUOTA_LIMITS
{
  /* 0x0000 */ unsigned long PagedPoolLimit;
  /* 0x0004 */ unsigned long NonPagedPoolLimit;
  /* 0x0008 */ unsigned long MinimumWorkingSetSize;
  /* 0x000c */ unsigned long MaximumWorkingSetSize;
  /* 0x0010 */ unsigned long PagefileLimit;
  /* 0x0018 */ union _LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS; /* size: 0x0020 */

typedef struct _QUOTA_LIMITS_EX
{
  /* 0x0000 */ unsigned long PagedPoolLimit;
  /* 0x0004 */ unsigned long NonPagedPoolLimit;
  /* 0x0008 */ unsigned long MinimumWorkingSetSize;
  /* 0x000c */ unsigned long MaximumWorkingSetSize;
  /* 0x0010 */ unsigned long PagefileLimit;
  /* 0x0018 */ union _LARGE_INTEGER TimeLimit;
  /* 0x0020 */ unsigned long WorkingSetLimit;
  /* 0x0024 */ unsigned long Reserved2;
  /* 0x0028 */ unsigned long Reserved3;
  /* 0x002c */ unsigned long Reserved4;
  /* 0x0030 */ unsigned long Flags;
  /* 0x0034 */ union _RATE_QUOTA_LIMIT CpuRateLimit;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX; /* size: 0x0038 */

typedef struct _RASTERIZER_STATUS
{
  /* 0x0000 */ short nSize;
  /* 0x0002 */ short wFlags;
  /* 0x0004 */ short nLanguageID;
} RASTERIZER_STATUS, *PRASTERIZER_STATUS; /* size: 0x0006 */

typedef union _RATE_QUOTA_LIMIT
{
  union
  {
    /* 0x0000 */ unsigned long RateData;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RatePercent : 7; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved0 : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT; /* size: 0x0004 */

typedef struct _RC_CONFIG
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwLength;
  /* 0x0008 */ unsigned long dwRCConfigVersion;
  /* 0x000c */ unsigned long dwFilePathType;
  /* 0x0010 */ unsigned long dwFileType;
  /* 0x0014 */ unsigned long dwSystemAttributes;
  /* 0x0018 */ unsigned long dwUltimateFallbackLocation;
  /* 0x001c */ unsigned long dwServiceCheckSum[4];
  /* 0x002c */ unsigned long dwChecksum[4];
  /* 0x003c */ unsigned long dwReserved1;
  /* 0x0040 */ unsigned long dwReserved2;
  /* 0x0044 */ unsigned long dwMUIFileNameOffset;
  /* 0x0048 */ unsigned long dwMUIFileNameLength;
  /* 0x004c */ unsigned long dwMUIFilePathOffset;
  /* 0x0050 */ unsigned long dwMUIFilePathLength;
  /* 0x0054 */ unsigned long dwMainResNameTypesOffset;
  /* 0x0058 */ unsigned long dwMainResNameTypesLength;
  /* 0x005c */ unsigned long dwMainResIDTypesOffset;
  /* 0x0060 */ unsigned long dwMainResIDTypesLength;
  /* 0x0064 */ unsigned long dwMUIResNameTypesOffset;
  /* 0x0068 */ unsigned long dwMUIResNameTypesLength;
  /* 0x006c */ unsigned long dwMUIResIDTypesOffset;
  /* 0x0070 */ unsigned long dwMUIResIDTypesLength;
  /* 0x0074 */ unsigned long dwLanguageOffset;
  /* 0x0078 */ unsigned long dwLanguageLength;
  /* 0x007c */ unsigned long dwUltimateFallbackLanguageOffset;
  /* 0x0080 */ unsigned long dwUltimateFallbackLanguageLength;
} RC_CONFIG, *PRC_CONFIG; /* size: 0x0084 */

typedef struct _RDR_CALLOUT_STATE
{
  /* 0x0000 */ long LastError;
  /* 0x0004 */ void* LastEEInfo;
  /* 0x0008 */ enum _RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;
  /* 0x000c */ unsigned short* ServerName;
  /* 0x0010 */ unsigned short* ServerPort;
  /* 0x0014 */ unsigned short* RemoteUser;
  /* 0x0018 */ unsigned short* AuthType;
  /* 0x001c */ unsigned char ResourceTypePresent;
  /* 0x001d */ unsigned char SessionIdPresent;
  /* 0x001e */ unsigned char InterfacePresent;
  /* 0x0020 */ struct _GUID ResourceType;
  /* 0x0030 */ struct _GUID SessionId;
  /* 0x0040 */ struct _RPC_SYNTAX_IDENTIFIER Interface;
  /* 0x0054 */ void* CertContext;
} RDR_CALLOUT_STATE, *PRDR_CALLOUT_STATE; /* size: 0x0058 */

typedef struct _RECTL
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
} RECTL, *PRECTL; /* size: 0x0010 */

typedef enum _REGQUERY_FLAGS
{
  RQ_MULTISZ = 1,
  RQ_ALLOWQUOTEQUOTE = 2,
} REGQUERY_FLAGS, *PREGQUERY_FLAGS;

typedef enum _REG_ACTION
{
  KeyAdded = 0,
  KeyRemoved = 1,
  KeyModified = 2,
} REG_ACTION, *PREG_ACTION;

typedef struct _REG_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ enum _REG_ACTION Action;
  /* 0x0008 */ unsigned long KeyLength;
  /* 0x000c */ wchar_t Key[1];
  /* 0x000e */ char __PADDING__[2];
} REG_NOTIFY_INFORMATION, *PREG_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_
{
  /* 0x0000 */ void* TargetFileObject;
  /* 0x0004 */ unsigned long TargetLinkTrackingInformationLength;
  /* 0x0008 */ unsigned char TargetLinkTrackingInformationBuffer[1];
  /* 0x0009 */ char __PADDING__[3];
} REMOTE_LINK_TRACKING_INFORMATION_, *PREMOTE_LINK_TRACKING_INFORMATION_; /* size: 0x000c */

typedef struct _REMOTE_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
  /* 0x0004 */ char* lpConnectionName;
  /* 0x0008 */ char* lpRemainingPath;
} REMOTE_NAME_INFOA, *PREMOTE_NAME_INFOA; /* size: 0x000c */

typedef struct _REMOTE_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
  /* 0x0004 */ wchar_t* lpConnectionName;
  /* 0x0008 */ wchar_t* lpRemainingPath;
} REMOTE_NAME_INFOW, *PREMOTE_NAME_INFOW; /* size: 0x000c */

typedef struct _REMOTE_PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long ViewSize;
  /* 0x0008 */ void* ViewBase;
} REMOTE_PORT_VIEW, *PREMOTE_PORT_VIEW; /* size: 0x000c */

typedef struct _REMOTE_REPLY_SCM_INFO
{
  /* 0x0000 */ unsigned __int64 Oxid;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pdsaOxidBindings;
  /* 0x000c */ struct _GUID ipidRemUnknown;
  /* 0x001c */ unsigned long authnHint;
  /* 0x0020 */ struct tagCOMVERSION serverVersion;
  /* 0x0024 */ long __PADDING__[1];
} REMOTE_REPLY_SCM_INFO, *PREMOTE_REPLY_SCM_INFO; /* size: 0x0028 */

typedef struct _REMOTE_REQUEST_SCM_INFO
{
  /* 0x0000 */ unsigned long ClientImpLevel;
  /* 0x0004 */ unsigned short cRequestedProtseqs;
  /* 0x0008 */ unsigned short* pRequestedProtseqs;
} REMOTE_REQUEST_SCM_INFO, *PREMOTE_REQUEST_SCM_INFO; /* size: 0x000c */

typedef struct _REMSECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long lpSecurityDescriptor;
  /* 0x0008 */ int bInheritHandle;
} REMSECURITY_ATTRIBUTES, *PREMSECURITY_ATTRIBUTES; /* size: 0x000c */

typedef struct _REPARSE_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ unsigned long Flags;
      /* 0x0014 */ wchar_t PathBuffer[1];
      /* 0x0016 */ char __PADDING__[2];
    } /* size: 0x0010 */ SymbolicLinkReparseBuffer;
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ wchar_t PathBuffer[1];
    } /* size: 0x000a */ MountPointReparseBuffer;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned char DataBuffer[1];
      } /* size: 0x0001 */ GenericReparseBuffer;
      /* 0x0009 */ char __PADDING__[15];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER; /* size: 0x0018 */

typedef struct _REPARSE_GUID_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ struct _GUID ReparseGuid;
  struct
  {
    /* 0x0018 */ unsigned char DataBuffer[1];
  } /* size: 0x0001 */ GenericReparseBuffer;
  /* 0x0019 */ char __PADDING__[3];
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER; /* size: 0x001c */

typedef struct _REPARSE_INDEX_KEY
{
  /* 0x0000 */ unsigned long FileReparseTag;
  /* 0x0004 */ union _LARGE_INTEGER FileId;
} REPARSE_INDEX_KEY, *PREPARSE_INDEX_KEY; /* size: 0x000c */

typedef struct _REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ unsigned short ReparseDataLength;
  /* 0x0002 */ unsigned short UnparsedNameLength;
} REPARSE_POINT_INFORMATION, *PREPARSE_POINT_INFORMATION; /* size: 0x0004 */

typedef struct _REQUEST_RAW_ENCRYPTED_DATA
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} REQUEST_RAW_ENCRYPTED_DATA, *PREQUEST_RAW_ENCRYPTED_DATA; /* size: 0x0010 */

typedef struct _RESOLVED_USERNAME_INFO
{
  /* 0x0000 */ int bResolved;
  /* 0x0004 */ wchar_t* pszResolvedName;
} RESOLVED_USERNAME_INFO, *PRESOLVED_USERNAME_INFO; /* size: 0x0008 */

typedef struct _RESOLVED_USERNAME_LIST
{
  /* 0x0000 */ unsigned long cItems;
  /* 0x0004 */ struct _RESOLVED_USERNAME_INFO rgUserNameInfo[1];
} RESOLVED_USERNAME_LIST, *PRESOLVED_USERNAME_LIST; /* size: 0x000c */

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID ResourceManagerId;
  /* 0x0010 */ unsigned long DescriptionLength;
  /* 0x0014 */ wchar_t Description[1];
  /* 0x0016 */ char __PADDING__[2];
} RESOURCEMANAGER_BASIC_INFORMATION, *PRESOURCEMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* IoCompletionPortHandle;
  /* 0x0004 */ unsigned long CompletionKey;
} RESOURCEMANAGER_COMPLETION_INFORMATION, *PRESOURCEMANAGER_COMPLETION_INFORMATION; /* size: 0x0008 */

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS
{
  ResourceManagerBasicInformation = 0,
  ResourceManagerCompletionInformation = 1,
} RESOURCEMANAGER_INFORMATION_CLASS, *PRESOURCEMANAGER_INFORMATION_CLASS;

typedef struct _RGNDATA
{
  /* 0x0000 */ struct _RGNDATAHEADER rdh;
  /* 0x0020 */ char Buffer[1];
  /* 0x0021 */ char __PADDING__[3];
} RGNDATA, *PRGNDATA; /* size: 0x0024 */

typedef struct _RGNDATAHEADER
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long iType;
  /* 0x0008 */ unsigned long nCount;
  /* 0x000c */ unsigned long nRgnSize;
  /* 0x0010 */ struct tagRECT rcBound;
} RGNDATAHEADER, *PRGNDATAHEADER; /* size: 0x0020 */

typedef struct _RIP_INFO
{
  /* 0x0000 */ unsigned long dwError;
  /* 0x0004 */ unsigned long dwType;
} RIP_INFO, *PRIP_INFO; /* size: 0x0008 */

typedef struct _ROOT_INFO_LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} ROOT_INFO_LUID, *PROOT_INFO_LUID; /* size: 0x0008 */

typedef enum _RPC_ASYNC_EVENT
{
  RpcCallComplete = 0,
  RpcSendComplete = 1,
  RpcReceiveComplete = 2,
  RpcClientDisconnect = 3,
  RpcClientCancel = 4,
} RPC_ASYNC_EVENT, *PRPC_ASYNC_EVENT;

typedef union _RPC_ASYNC_NOTIFICATION_INFO
{
  union
  {
    struct
    {
      /* 0x0000 */ void* NotificationRoutine /* function */;
      /* 0x0004 */ void* hThread;
    } /* size: 0x0008 */ APC;
    struct
    {
      /* 0x0000 */ void* hIOPort;
      /* 0x0004 */ unsigned long dwNumberOfBytesTransferred;
      /* 0x0008 */ unsigned long dwCompletionKey;
      /* 0x000c */ struct _OVERLAPPED* lpOverlapped;
    } /* size: 0x0010 */ IOC;
    struct
    {
      /* 0x0000 */ struct HWND__* hWnd;
      /* 0x0004 */ unsigned int Msg;
    } /* size: 0x0008 */ HWND;
    /* 0x0000 */ void* hEvent;
    /* 0x0000 */ void* NotificationRoutine /* function */;
  }; /* size: 0x0010 */
} RPC_ASYNC_NOTIFICATION_INFO, *PRPC_ASYNC_NOTIFICATION_INFO; /* size: 0x0010 */

typedef struct _RPC_ASYNC_STATE
{
  /* 0x0000 */ unsigned int Size;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ long Lock;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ void* StubInfo;
  /* 0x0014 */ void* UserInfo;
  /* 0x0018 */ void* RuntimeInfo;
  /* 0x001c */ enum _RPC_ASYNC_EVENT Event;
  /* 0x0020 */ enum _RPC_NOTIFICATION_TYPES NotificationType;
  /* 0x0024 */ union _RPC_ASYNC_NOTIFICATION_INFO u;
  /* 0x0034 */ long Reserved[4];
} RPC_ASYNC_STATE, *PRPC_ASYNC_STATE; /* size: 0x0044 */

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ComTimeout;
  /* 0x000c */ unsigned long CallTimeout;
} RPC_BINDING_HANDLE_OPTIONS_V1, *PRPC_BINDING_HANDLE_OPTIONS_V1; /* size: 0x0010 */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned char* ServerPrincName;
  /* 0x0008 */ unsigned long AuthnLevel;
  /* 0x000c */ unsigned long AuthnSvc;
  /* 0x0010 */ struct _SEC_WINNT_AUTH_IDENTITY_A* AuthIdentity;
  /* 0x0014 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_A, *PRPC_BINDING_HANDLE_SECURITY_V1_A; /* size: 0x0018 */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned short* ServerPrincName;
  /* 0x0008 */ unsigned long AuthnLevel;
  /* 0x000c */ unsigned long AuthnSvc;
  /* 0x0010 */ struct _SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
  /* 0x0014 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_W, *PRPC_BINDING_HANDLE_SECURITY_V1_W; /* size: 0x0018 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ unsigned char* NetworkAddress;
  /* 0x0010 */ unsigned char* StringEndpoint;
  union
  {
    /* 0x0014 */ unsigned char* Reserved;
  } /* size: 0x0004 */ u1;
  /* 0x0018 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_A, *PRPC_BINDING_HANDLE_TEMPLATE_V1_A; /* size: 0x0028 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ unsigned short* NetworkAddress;
  /* 0x0010 */ unsigned short* StringEndpoint;
  union
  {
    /* 0x0014 */ unsigned short* Reserved;
  } /* size: 0x0004 */ u1;
  /* 0x0018 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_W, *PRPC_BINDING_HANDLE_TEMPLATE_V1_W; /* size: 0x0028 */

typedef struct _RPC_BINDING_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ void* BindingH[1];
} RPC_BINDING_VECTOR, *PRPC_BINDING_VECTOR; /* size: 0x0008 */

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ void* Buffer;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ enum tagRpcLocalAddressFormat AddressFormat;
} RPC_CALL_LOCAL_ADDRESS_V1, *PRPC_CALL_LOCAL_ADDRESS_V1; /* size: 0x0010 */

typedef struct _RPC_CLIENT_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0030 */ unsigned int RpcProtseqEndpointCount;
  /* 0x0034 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0038 */ unsigned long Reserved;
  /* 0x003c */ const void* InterpreterInfo;
  /* 0x0040 */ unsigned int Flags;
} RPC_CLIENT_INTERFACE, *PRPC_CLIENT_INTERFACE; /* size: 0x0044 */

typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ char* Buffer;
} RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR, *PRPC_C_OPT_COOKIE_AUTH_DESCRIPTOR; /* size: 0x0008 */

typedef enum _RPC_HTTP_REDIRECTOR_STAGE
{
  RPCHTTP_RS_REDIRECT = 1,
  RPCHTTP_RS_ACCESS_1 = 2,
  RPCHTTP_RS_SESSION = 3,
  RPCHTTP_RS_ACCESS_2 = 4,
  RPCHTTP_RS_INTERFACE = 5,
} RPC_HTTP_REDIRECTOR_STAGE, *PRPC_HTTP_REDIRECTOR_STAGE;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AuthenticationTarget;
  /* 0x000c */ unsigned long NumberOfAuthnSchemes;
  /* 0x0010 */ unsigned long* AuthnSchemes;
  /* 0x0014 */ unsigned char* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_A; /* size: 0x0018 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AuthenticationTarget;
  /* 0x000c */ unsigned long NumberOfAuthnSchemes;
  /* 0x0010 */ unsigned long* AuthnSchemes;
  /* 0x0014 */ unsigned char* ServerCertificateSubject;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_A* ProxyCredentials;
  /* 0x001c */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0020 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A; /* size: 0x0024 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AuthenticationTarget;
  /* 0x000c */ unsigned long NumberOfAuthnSchemes;
  /* 0x0010 */ unsigned long* AuthnSchemes;
  /* 0x0014 */ unsigned short* ServerCertificateSubject;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_W* ProxyCredentials;
  /* 0x001c */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0020 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W; /* size: 0x0024 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AuthenticationTarget;
  /* 0x000c */ unsigned long NumberOfAuthnSchemes;
  /* 0x0010 */ unsigned long* AuthnSchemes;
  /* 0x0014 */ unsigned short* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_W; /* size: 0x0018 */

typedef struct _RPC_IF_ID
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_IF_ID, *PRPC_IF_ID; /* size: 0x0014 */

typedef struct _RPC_MESSAGE
{
  /* 0x0000 */ void* Handle;
  /* 0x0004 */ unsigned long DataRepresentation;
  /* 0x0008 */ void* Buffer;
  /* 0x000c */ unsigned int BufferLength;
  /* 0x0010 */ unsigned int ProcNum;
  /* 0x0014 */ struct _RPC_SYNTAX_IDENTIFIER* TransferSyntax;
  /* 0x0018 */ void* RpcInterfaceInformation;
  /* 0x001c */ void* ReservedForRuntime;
  /* 0x0020 */ void* ManagerEpv;
  /* 0x0024 */ void* ImportContext;
  /* 0x0028 */ unsigned long RpcFlags;
} RPC_MESSAGE, *PRPC_MESSAGE; /* size: 0x002c */

typedef enum _RPC_NOTIFICATIONS
{
  RpcNotificationCallNone = 0,
  RpcNotificationClientDisconnect = 1,
  RpcNotificationCallCancel = 2,
} RPC_NOTIFICATIONS, *PRPC_NOTIFICATIONS;

typedef enum _RPC_NOTIFICATION_TYPES
{
  RpcNotificationTypeNone = 0,
  RpcNotificationTypeEvent = 1,
  RpcNotificationTypeApc = 2,
  RpcNotificationTypeIoc = 3,
  RpcNotificationTypeHwnd = 4,
  RpcNotificationTypeCallback = 5,
} RPC_NOTIFICATION_TYPES, *PRPC_NOTIFICATION_TYPES;

typedef struct _RPC_POLICY
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ unsigned long EndpointFlags;
  /* 0x0008 */ unsigned long NICFlags;
} RPC_POLICY, *PRPC_POLICY; /* size: 0x000c */

typedef struct _RPC_PROTSEQ_ENDPOINT
{
  /* 0x0000 */ unsigned char* RpcProtocolSequence;
  /* 0x0004 */ unsigned char* Endpoint;
} RPC_PROTSEQ_ENDPOINT, *PRPC_PROTSEQ_ENDPOINT; /* size: 0x0008 */

typedef struct _RPC_PROTSEQ_VECTORA
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ unsigned char* Protseq[1];
} RPC_PROTSEQ_VECTORA, *PRPC_PROTSEQ_VECTORA; /* size: 0x0008 */

typedef struct _RPC_PROTSEQ_VECTORW
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ unsigned short* Protseq[1];
} RPC_PROTSEQ_VECTORW, *PRPC_PROTSEQ_VECTORW; /* size: 0x0008 */

typedef struct _RPC_SECURITY_QOS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
} RPC_SECURITY_QOS, *PRPC_SECURITY_QOS; /* size: 0x0010 */

typedef struct _RPC_SECURITY_QOS_V2_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  union
  {
    /* 0x0014 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0004 */ u;
} RPC_SECURITY_QOS_V2_A, *PRPC_SECURITY_QOS_V2_A; /* size: 0x0018 */

typedef struct _RPC_SECURITY_QOS_V2_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  union
  {
    /* 0x0014 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0004 */ u;
} RPC_SECURITY_QOS_V2_W, *PRPC_SECURITY_QOS_V2_W; /* size: 0x0018 */

typedef struct _RPC_SECURITY_QOS_V3_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  union
  {
    /* 0x0014 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0004 */ u;
  /* 0x0018 */ void* Sid;
} RPC_SECURITY_QOS_V3_A, *PRPC_SECURITY_QOS_V3_A; /* size: 0x001c */

typedef struct _RPC_SECURITY_QOS_V3_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  union
  {
    /* 0x0014 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0004 */ u;
  /* 0x0018 */ void* Sid;
} RPC_SECURITY_QOS_V3_W, *PRPC_SECURITY_QOS_V3_W; /* size: 0x001c */

typedef struct _RPC_SECURITY_QOS_V4_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  union
  {
    /* 0x0014 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0004 */ u;
  /* 0x0018 */ void* Sid;
  /* 0x001c */ unsigned int EffectiveOnly;
} RPC_SECURITY_QOS_V4_A, *PRPC_SECURITY_QOS_V4_A; /* size: 0x0020 */

typedef struct _RPC_SECURITY_QOS_V4_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  union
  {
    /* 0x0014 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0004 */ u;
  /* 0x0018 */ void* Sid;
  /* 0x001c */ unsigned int EffectiveOnly;
} RPC_SECURITY_QOS_V4_W, *PRPC_SECURITY_QOS_V4_W; /* size: 0x0020 */

typedef struct _RPC_SERVER_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0030 */ unsigned int RpcProtseqEndpointCount;
  /* 0x0034 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0038 */ void* DefaultManagerEpv;
  /* 0x003c */ const void* InterpreterInfo;
  /* 0x0040 */ unsigned int Flags;
} RPC_SERVER_INTERFACE, *PRPC_SERVER_INTERFACE; /* size: 0x0044 */

typedef struct _RPC_SYNTAX_IDENTIFIER
{
  /* 0x0000 */ struct _GUID SyntaxGUID;
  /* 0x0010 */ struct _RPC_VERSION SyntaxVersion;
} RPC_SYNTAX_IDENTIFIER, *PRPC_SYNTAX_IDENTIFIER; /* size: 0x0014 */

typedef struct _RPC_TRANSFER_SYNTAX
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_TRANSFER_SYNTAX, *PRPC_TRANSFER_SYNTAX; /* size: 0x0014 */

typedef struct _RPC_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} RPC_VERSION, *PRPC_VERSION; /* size: 0x0004 */

typedef struct _RSAPUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
  /* 0x0008 */ unsigned long pubexp;
} RSAPUBKEY, *PRSAPUBKEY; /* size: 0x000c */

struct _RTLP_CURDIR_REF;

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* Previous;
  /* 0x0004 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0008 */ unsigned long Flags;
} RTL_ACTIVATION_CONTEXT_STACK_FRAME, *PRTL_ACTIVATION_CONTEXT_STACK_FRAME; /* size: 0x000c */

typedef struct _RTL_ANSI_STRING_BUFFER
{
  /* 0x0000 */ struct _STRING String;
  /* 0x0008 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0020 */ unsigned char MinimumStaticBufferForTerminalNul[1];
  /* 0x0021 */ char __PADDING__[3];
} RTL_ANSI_STRING_BUFFER, *PRTL_ANSI_STRING_BUFFER; /* size: 0x0024 */

typedef struct _RTL_AVL_TABLE
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedRoot;
  /* 0x0010 */ void* OrderedPointer;
  /* 0x0014 */ unsigned long WhichOrderedElement;
  /* 0x0018 */ unsigned long NumberGenericTableElements;
  /* 0x001c */ unsigned long DepthOfTree;
  /* 0x0020 */ struct _RTL_BALANCED_LINKS* RestartKey;
  /* 0x0024 */ unsigned long DeleteCount;
  /* 0x0028 */ void* CompareRoutine /* function */;
  /* 0x002c */ void* AllocateRoutine /* function */;
  /* 0x0030 */ void* FreeRoutine /* function */;
  /* 0x0034 */ void* TableContext;
} RTL_AVL_TABLE, *PRTL_AVL_TABLE; /* size: 0x0038 */

typedef struct _RTL_BACKOFF
{
  /* 0x0000 */ unsigned long Delay;
} RTL_BACKOFF, *PRTL_BACKOFF; /* size: 0x0004 */

typedef struct _RTL_BALANCED_LINKS
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS* Parent;
  /* 0x0004 */ struct _RTL_BALANCED_LINKS* LeftChild;
  /* 0x0008 */ struct _RTL_BALANCED_LINKS* RightChild;
  /* 0x000c */ char Balance;
  /* 0x000d */ unsigned char Reserved[3];
} RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS; /* size: 0x0010 */

typedef struct _RTL_BARRIER
{
  /* 0x0000 */ volatile long Barrier;
  /* 0x0004 */ long LeftBarrier;
  /* 0x0008 */ void* WaitEvent[2];
  /* 0x0010 */ long TotalProcessors;
  /* 0x0014 */ unsigned long Spins;
} RTL_BARRIER, *PRTL_BARRIER; /* size: 0x0018 */

typedef struct _RTL_BITMAP
{
  /* 0x0000 */ unsigned long SizeOfBitMap;
  /* 0x0004 */ unsigned long* Buffer;
} RTL_BITMAP, *PRTL_BITMAP; /* size: 0x0008 */

typedef struct _RTL_BITMAP_RUN
{
  /* 0x0000 */ unsigned long StartingIndex;
  /* 0x0004 */ unsigned long NumberOfBits;
} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN; /* size: 0x0008 */

typedef struct _RTL_BUFFER
{
  /* 0x0000 */ unsigned char* Buffer;
  /* 0x0004 */ unsigned char* StaticBuffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long StaticSize;
  /* 0x0010 */ unsigned long ReservedForAllocatedSize;
  /* 0x0014 */ void* ReservedForIMalloc;
} RTL_BUFFER, *PRTL_BUFFER; /* size: 0x0018 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Format;
  /* 0x0008 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC; /* size: 0x0014 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Format;
  /* 0x0008 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
  /* 0x0014 */ void* Extra1;
  /* 0x0018 */ void* Extra2;
  /* 0x001c */ void* Extra3;
  /* 0x0020 */ void* Extra4;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED; /* size: 0x0024 */

typedef struct _RTL_CONDITION_VARIABLE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long WakeCount : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned long Waking : 1; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0004 */
} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE; /* size: 0x0004 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<1>
{
} RTL_CONSTANT_STRING_remove_const_template_class<1>, *PRTL_CONSTANT_STRING_remove_const_template_class<1>; /* size: 0x0001 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<2>
{
} RTL_CONSTANT_STRING_remove_const_template_class<2>, *PRTL_CONSTANT_STRING_remove_const_template_class<2>; /* size: 0x0001 */

typedef struct _RTL_CRITICAL_SECTION
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ void* OwningThread;
  /* 0x0010 */ void* LockSemaphore;
  /* 0x0014 */ unsigned long SpinCount;
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION; /* size: 0x0018 */

typedef struct _RTL_CRITICAL_SECTION32
{
  /* 0x0000 */ unsigned long DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ unsigned long OwningThread;
  /* 0x0010 */ unsigned long LockSemaphore;
  /* 0x0014 */ unsigned long SpinCount;
} RTL_CRITICAL_SECTION32, *PRTL_CRITICAL_SECTION32; /* size: 0x0018 */

typedef struct _RTL_CRITICAL_SECTION64
{
  /* 0x0000 */ unsigned __int64 DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ unsigned __int64 OwningThread;
  /* 0x0018 */ unsigned __int64 LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION64, *PRTL_CRITICAL_SECTION64; /* size: 0x0028 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ struct _RTL_CRITICAL_SECTION* CriticalSection;
  /* 0x0008 */ struct _LIST_ENTRY ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x001e */ unsigned short SpareUSHORT;
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG; /* size: 0x0020 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG32
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned long CriticalSection;
  /* 0x0008 */ struct LIST_ENTRY32 ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG32, *PRTL_CRITICAL_SECTION_DEBUG32; /* size: 0x0020 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG64
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0008 */ unsigned __int64 CriticalSection;
  /* 0x0010 */ struct LIST_ENTRY64 ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG64, *PRTL_CRITICAL_SECTION_DEBUG64; /* size: 0x0030 */

typedef struct _RTL_DEBUG_INFORMATION
{
  /* 0x0000 */ void* SectionHandleClient;
  /* 0x0004 */ void* ViewBaseClient;
  /* 0x0008 */ void* ViewBaseTarget;
  /* 0x000c */ unsigned long ViewBaseDelta;
  /* 0x0010 */ void* EventPairClient;
  /* 0x0014 */ void* EventPairTarget;
  /* 0x0018 */ void* TargetProcessId;
  /* 0x001c */ void* TargetThreadHandle;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long OffsetFree;
  /* 0x0028 */ unsigned long CommitSize;
  /* 0x002c */ unsigned long ViewSize;
  union
  {
    /* 0x0030 */ struct _RTL_PROCESS_MODULES* Modules;
    /* 0x0030 */ struct _RTL_PROCESS_MODULE_INFORMATION_EX* ModulesEx;
  }; /* size: 0x0004 */
  /* 0x0034 */ struct _RTL_PROCESS_BACKTRACES* BackTraces;
  /* 0x0038 */ struct _RTL_PROCESS_HEAPS* Heaps;
  /* 0x003c */ struct _RTL_PROCESS_LOCKS* Locks;
  /* 0x0040 */ void* SpecificHeap;
  /* 0x0044 */ void* TargetProcessHandle;
  /* 0x0048 */ struct _RTL_PROCESS_VERIFIER_OPTIONS* VerifierOptions;
  /* 0x004c */ void* ProcessHeap;
  /* 0x0050 */ void* CriticalSectionHandle;
  /* 0x0054 */ void* CriticalSectionOwnerThread;
  /* 0x0058 */ void* Reserved[4];
} RTL_DEBUG_INFORMATION, *PRTL_DEBUG_INFORMATION; /* size: 0x0068 */

typedef struct _RTL_DEBUG_INFORMATION32
{
  /* 0x0000 */ unsigned long SectionHandleClient;
  /* 0x0004 */ unsigned long ViewBaseClient;
  /* 0x0008 */ unsigned long ViewBaseTarget;
  /* 0x000c */ unsigned long ViewBaseDelta;
  /* 0x0010 */ unsigned long EventPairClient;
  /* 0x0014 */ unsigned long EventPairTarget;
  /* 0x0018 */ unsigned long TargetProcessId;
  /* 0x001c */ unsigned long TargetThreadHandle;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long OffsetFree;
  /* 0x0028 */ unsigned long CommitSize;
  /* 0x002c */ unsigned long ViewSize;
  union
  {
    /* 0x0030 */ unsigned long Modules;
    /* 0x0030 */ unsigned long ModulesEx;
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long BackTraces;
  /* 0x0038 */ unsigned long Heaps;
  /* 0x003c */ unsigned long Locks;
  /* 0x0040 */ unsigned long SpecificHeap;
  /* 0x0044 */ unsigned long TargetProcessHandle;
  /* 0x0048 */ unsigned long VerifierOptions;
  /* 0x004c */ unsigned long ProcessHeap;
  /* 0x0050 */ unsigned long CriticalSectionHandle;
  /* 0x0054 */ unsigned long CriticalSectionOwnerThread;
  /* 0x0058 */ unsigned long Reserved[4];
} RTL_DEBUG_INFORMATION32, *PRTL_DEBUG_INFORMATION32; /* size: 0x0068 */

typedef struct _RTL_DRIVE_LETTER_CURDIR
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING DosPath;
} RTL_DRIVE_LETTER_CURDIR, *PRTL_DRIVE_LETTER_CURDIR; /* size: 0x0010 */

typedef struct _RTL_DRIVE_LETTER_CURDIR64
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING64 DosPath;
} RTL_DRIVE_LETTER_CURDIR64, *PRTL_DRIVE_LETTER_CURDIR64; /* size: 0x0018 */

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ struct _RTL_TIME_ZONE_INFORMATION tzi;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} RTL_DYNAMIC_TIME_ZONE_INFORMATION, *PRTL_DYNAMIC_TIME_ZONE_INFORMATION; /* size: 0x01b0 */

typedef union _RTL_ELEVATION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ElevationEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long InstallerDetectEnabled : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReservedBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RTL_ELEVATION_FLAGS, *PRTL_ELEVATION_FLAGS; /* size: 0x0004 */

typedef enum _RTL_GENERIC_COMPARE_RESULTS
{
  GenericLessThan = 0,
  GenericGreaterThan = 1,
  GenericEqual = 2,
} RTL_GENERIC_COMPARE_RESULTS, *PRTL_GENERIC_COMPARE_RESULTS;

typedef struct _RTL_GENERIC_TABLE
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* TableRoot;
  /* 0x0004 */ struct _LIST_ENTRY InsertOrderList;
  /* 0x000c */ struct _LIST_ENTRY* OrderedPointer;
  /* 0x0010 */ unsigned long WhichOrderedElement;
  /* 0x0014 */ unsigned long NumberGenericTableElements;
  /* 0x0018 */ void* CompareRoutine /* function */;
  /* 0x001c */ void* AllocateRoutine /* function */;
  /* 0x0020 */ void* FreeRoutine /* function */;
  /* 0x0024 */ void* TableContext;
} RTL_GENERIC_TABLE, *PRTL_GENERIC_TABLE; /* size: 0x0028 */

typedef struct _RTL_HANDLE_TABLE
{
  /* 0x0000 */ unsigned long MaximumNumberOfHandles;
  /* 0x0004 */ unsigned long SizeOfHandleTableEntry;
  /* 0x0008 */ unsigned long Reserved[2];
  /* 0x0010 */ struct _RTL_HANDLE_TABLE_ENTRY* FreeHandles;
  /* 0x0014 */ struct _RTL_HANDLE_TABLE_ENTRY* CommittedHandles;
  /* 0x0018 */ struct _RTL_HANDLE_TABLE_ENTRY* UnCommittedHandles;
  /* 0x001c */ struct _RTL_HANDLE_TABLE_ENTRY* MaxReservedHandles;
} RTL_HANDLE_TABLE, *PRTL_HANDLE_TABLE; /* size: 0x0020 */

typedef struct _RTL_HANDLE_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    /* 0x0000 */ struct _RTL_HANDLE_TABLE_ENTRY* NextFree;
  }; /* size: 0x0004 */
} RTL_HANDLE_TABLE_ENTRY, *PRTL_HANDLE_TABLE_ENTRY; /* size: 0x0004 */

typedef struct _RTL_HEAP_ENTRY
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short AllocatorBackTraceIndex;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Settable;
        /* 0x000c */ unsigned long Tag;
      } /* size: 0x0008 */ s1;
      struct
      {
        /* 0x0008 */ unsigned long CommittedSize;
        /* 0x000c */ void* FirstBlock;
      } /* size: 0x0008 */ s2;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} RTL_HEAP_ENTRY, *PRTL_HEAP_ENTRY; /* size: 0x0010 */

typedef struct _RTL_HEAP_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned short EntryOverhead;
  /* 0x000a */ unsigned short CreatorBackTraceIndex;
  /* 0x000c */ unsigned long BytesAllocated;
  /* 0x0010 */ unsigned long BytesCommitted;
  /* 0x0014 */ unsigned long NumberOfTags;
  /* 0x0018 */ unsigned long NumberOfEntries;
  /* 0x001c */ unsigned long NumberOfPseudoTags;
  /* 0x0020 */ unsigned long PseudoTagGranularity;
  /* 0x0024 */ unsigned long Reserved[5];
  /* 0x0038 */ struct _RTL_HEAP_TAG* Tags;
  /* 0x003c */ struct _RTL_HEAP_ENTRY* Entries;
} RTL_HEAP_INFORMATION, *PRTL_HEAP_INFORMATION; /* size: 0x0040 */

typedef struct _RTL_HEAP_PARAMETERS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long SegmentReserve;
  /* 0x0008 */ unsigned long SegmentCommit;
  /* 0x000c */ unsigned long DeCommitFreeBlockThreshold;
  /* 0x0010 */ unsigned long DeCommitTotalFreeThreshold;
  /* 0x0014 */ unsigned long MaximumAllocationSize;
  /* 0x0018 */ unsigned long VirtualMemoryThreshold;
  /* 0x001c */ unsigned long InitialCommit;
  /* 0x0020 */ unsigned long InitialReserve;
  /* 0x0024 */ void* CommitRoutine /* function */;
  /* 0x0028 */ unsigned long Reserved[2];
} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS; /* size: 0x0030 */

typedef struct _RTL_HEAP_TAG
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned long BytesAllocated;
  /* 0x000c */ unsigned short TagIndex;
  /* 0x000e */ unsigned short CreatorBackTraceIndex;
  /* 0x0010 */ wchar_t TagName[24];
} RTL_HEAP_TAG, *PRTL_HEAP_TAG; /* size: 0x0040 */

typedef struct _RTL_HEAP_TAG_INFO
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned long BytesAllocated;
} RTL_HEAP_TAG_INFO, *PRTL_HEAP_TAG_INFO; /* size: 0x000c */

typedef struct _RTL_HEAP_WALK_ENTRY
{
  /* 0x0000 */ void* DataAddress;
  /* 0x0004 */ unsigned long DataSize;
  /* 0x0008 */ unsigned char OverheadBytes;
  /* 0x0009 */ unsigned char SegmentIndex;
  /* 0x000a */ unsigned short Flags;
  union
  {
    struct
    {
      /* 0x000c */ unsigned long Settable;
      /* 0x0010 */ unsigned short TagIndex;
      /* 0x0012 */ unsigned short AllocatorBackTraceIndex;
      /* 0x0014 */ unsigned long Reserved[2];
    } /* size: 0x0010 */ Block;
    struct
    {
      /* 0x000c */ unsigned long CommittedSize;
      /* 0x0010 */ unsigned long UnCommittedSize;
      /* 0x0014 */ void* FirstEntry;
      /* 0x0018 */ void* LastEntry;
    } /* size: 0x0010 */ Segment;
  }; /* size: 0x0010 */
} RTL_HEAP_WALK_ENTRY, *PRTL_HEAP_WALK_ENTRY; /* size: 0x001c */

typedef struct _RTL_MODULE_BASIC_INFO
{
  /* 0x0000 */ void* ImageBase;
} RTL_MODULE_BASIC_INFO, *PRTL_MODULE_BASIC_INFO; /* size: 0x0004 */

typedef struct _RTL_MODULE_EXTENDED_INFO
{
  /* 0x0000 */ struct _RTL_MODULE_BASIC_INFO BasicInfo;
  /* 0x0004 */ unsigned long ImageSize;
  /* 0x0008 */ unsigned short FileNameOffset;
  /* 0x000a */ unsigned char FullPathName[256];
  /* 0x010a */ char __PADDING__[2];
} RTL_MODULE_EXTENDED_INFO, *PRTL_MODULE_EXTENDED_INFO; /* size: 0x010c */

typedef enum _RTL_PATH_TYPE
{
  RtlPathTypeUnknown = 0,
  RtlPathTypeUncAbsolute = 1,
  RtlPathTypeDriveAbsolute = 2,
  RtlPathTypeDriveRelative = 3,
  RtlPathTypeRooted = 4,
  RtlPathTypeRelative = 5,
  RtlPathTypeLocalDevice = 6,
  RtlPathTypeRootLocalDevice = 7,
} RTL_PATH_TYPE, *PRTL_PATH_TYPE;

typedef struct _RTL_PERTHREAD_CURDIR
{
  /* 0x0000 */ struct _RTL_DRIVE_LETTER_CURDIR* CurrentDirectories;
  /* 0x0004 */ struct _UNICODE_STRING* ImageName;
  /* 0x0008 */ void* Environment;
} RTL_PERTHREAD_CURDIR, *PRTL_PERTHREAD_CURDIR; /* size: 0x000c */

typedef struct _RTL_PROCESS_BACKTRACES
{
  /* 0x0000 */ unsigned long CommittedMemory;
  /* 0x0004 */ unsigned long ReservedMemory;
  /* 0x0008 */ unsigned long NumberOfBackTraceLookups;
  /* 0x000c */ unsigned long NumberOfBackTraces;
  /* 0x0010 */ struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
} RTL_PROCESS_BACKTRACES, *PRTL_PROCESS_BACKTRACES; /* size: 0x009c */

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL
{
  /* 0x0000 */ unsigned long ControlCode;
  /* 0x0004 */ unsigned long ControlSize;
  union
  {
    /* 0x0008 */ unsigned char ControlData[1];
    /* 0x0008 */ struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
  }; /* size: 0x000c */
} RTL_PROCESS_BACKTRACES_CONTROL, *PRTL_PROCESS_BACKTRACES_CONTROL; /* size: 0x0014 */

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION
{
  /* 0x0000 */ char* SymbolicBackTrace;
  /* 0x0004 */ unsigned long TraceCount;
  /* 0x0008 */ unsigned short Index;
  /* 0x000a */ unsigned short Depth;
  /* 0x000c */ void* BackTrace[32];
} RTL_PROCESS_BACKTRACE_INFORMATION, *PRTL_PROCESS_BACKTRACE_INFORMATION; /* size: 0x008c */

typedef struct _RTL_PROCESS_HEAPS
{
  /* 0x0000 */ unsigned long NumberOfHeaps;
  /* 0x0004 */ struct _RTL_HEAP_INFORMATION Heaps[1];
} RTL_PROCESS_HEAPS, *PRTL_PROCESS_HEAPS; /* size: 0x0044 */

typedef struct _RTL_PROCESS_LOCKS
{
  /* 0x0000 */ unsigned long NumberOfLocks;
  /* 0x0004 */ struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
} RTL_PROCESS_LOCKS, *PRTL_PROCESS_LOCKS; /* size: 0x0028 */

typedef struct _RTL_PROCESS_LOCK_INFORMATION
{
  /* 0x0000 */ void* Address;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ unsigned short CreatorBackTraceIndex;
  /* 0x0008 */ void* OwningThread;
  /* 0x000c */ long LockCount;
  /* 0x0010 */ unsigned long ContentionCount;
  /* 0x0014 */ unsigned long EntryCount;
  /* 0x0018 */ long RecursionCount;
  /* 0x001c */ unsigned long NumberOfWaitingShared;
  /* 0x0020 */ unsigned long NumberOfWaitingExclusive;
} RTL_PROCESS_LOCK_INFORMATION, *PRTL_PROCESS_LOCK_INFORMATION; /* size: 0x0024 */

typedef struct _RTL_PROCESS_MODULES
{
  /* 0x0000 */ unsigned long NumberOfModules;
  /* 0x0004 */ struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
} RTL_PROCESS_MODULES, *PRTL_PROCESS_MODULES; /* size: 0x0120 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION
{
  /* 0x0000 */ void* Section;
  /* 0x0004 */ void* MappedBase;
  /* 0x0008 */ void* ImageBase;
  /* 0x000c */ unsigned long ImageSize;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned short LoadOrderIndex;
  /* 0x0016 */ unsigned short InitOrderIndex;
  /* 0x0018 */ unsigned short LoadCount;
  /* 0x001a */ unsigned short OffsetToFileName;
  /* 0x001c */ unsigned char FullPathName[256];
} RTL_PROCESS_MODULE_INFORMATION, *PRTL_PROCESS_MODULE_INFORMATION; /* size: 0x011c */

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX
{
  /* 0x0000 */ unsigned short NextOffset;
  /* 0x0004 */ struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
  /* 0x0120 */ unsigned long ImageChecksum;
  /* 0x0124 */ unsigned long TimeDateStamp;
  /* 0x0128 */ void* DefaultBase;
} RTL_PROCESS_MODULE_INFORMATION_EX, *PRTL_PROCESS_MODULE_INFORMATION_EX; /* size: 0x012c */

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS
{
  /* 0x0000 */ unsigned long SizeStruct;
  /* 0x0004 */ unsigned long Option;
  /* 0x0008 */ unsigned char OptionData[1];
  /* 0x0009 */ char __PADDING__[3];
} RTL_PROCESS_VERIFIER_OPTIONS, *PRTL_PROCESS_VERIFIER_OPTIONS; /* size: 0x000c */

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO
{
  /* 0x0000 */ unsigned long UniqueProcessId;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 Buffer;
} RTL_QUERY_DEBUG_INFORMATION_INFO, *PRTL_QUERY_DEBUG_INFORMATION_INFO; /* size: 0x0010 */

typedef struct _RTL_QUERY_REGISTRY_TABLE
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ wchar_t* Name;
  /* 0x000c */ void* EntryContext;
  /* 0x0010 */ unsigned long DefaultType;
  /* 0x0014 */ void* DefaultData;
  /* 0x0018 */ unsigned long DefaultLength;
} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE; /* size: 0x001c */

typedef struct _RTL_RELATIVE_NAME_U
{
  /* 0x0000 */ struct _UNICODE_STRING RelativeName;
  /* 0x0008 */ void* ContainingDirectory;
  /* 0x000c */ struct _RTLP_CURDIR_REF* CurDirRef;
} RTL_RELATIVE_NAME_U, *PRTL_RELATIVE_NAME_U; /* size: 0x0010 */

typedef struct _RTL_RESOURCE
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION CriticalSection;
  /* 0x0018 */ void* SharedSemaphore;
  /* 0x001c */ volatile unsigned long NumberOfWaitingShared;
  /* 0x0020 */ void* ExclusiveSemaphore;
  /* 0x0024 */ volatile unsigned long NumberOfWaitingExclusive;
  /* 0x0028 */ volatile long NumberOfActive;
  /* 0x002c */ void* ExclusiveOwnerThread;
  /* 0x0030 */ unsigned long Flags;
  /* 0x0034 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
} RTL_RESOURCE, *PRTL_RESOURCE; /* size: 0x0038 */

typedef union _RTL_RUN_ONCE
{
  /* 0x0000 */ void* Ptr;
} RTL_RUN_ONCE, *PRTL_RUN_ONCE; /* size: 0x0004 */

typedef struct _RTL_RXACT_CONTEXT
{
  /* 0x0000 */ void* RootRegistryKey;
  /* 0x0004 */ void* RXactKey;
  /* 0x0008 */ unsigned char HandlesValid;
  /* 0x000c */ struct _RTL_RXACT_LOG* RXactLog;
} RTL_RXACT_CONTEXT, *PRTL_RXACT_CONTEXT; /* size: 0x0010 */

typedef struct _RTL_RXACT_LOG
{
  /* 0x0000 */ unsigned long OperationCount;
  /* 0x0004 */ unsigned long LogSize;
  /* 0x0008 */ unsigned long LogSizeInUse;
} RTL_RXACT_LOG, *PRTL_RXACT_LOG; /* size: 0x000c */

typedef enum _RTL_RXACT_OPERATION
{
  RtlRXactOperationDelete = 1,
  RtlRXactOperationSetValue = 2,
  RtlRXactOperationDelAttribute = 3,
  RtlRXactOperationSetAttribute = 4,
} RTL_RXACT_OPERATION, *PRTL_RXACT_OPERATION;

typedef struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT BlobWritingContext;
  /* 0x002c */ void* EncodingFunction /* function */;
  /* 0x0030 */ void* MultiEncodingFunction /* function */;
} RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT, *PRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT; /* size: 0x0034 */

typedef struct _RTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ unsigned char* CurrentEncodingPosition;
  /* 0x0004 */ unsigned char* EndEncodingPosition;
  /* 0x0008 */ unsigned long BytesWrittenOrRequired;
  /* 0x000c */ unsigned long LongestLegalLength;
  /* 0x0010 */ struct _LBLOB* BufferInUse;
  /* 0x0014 */ struct _LBLOB* FixedSizeBuffer;
  /* 0x0018 */ struct _LBLOB* DynamicBuffer;
  /* 0x001c */ struct _LBLOB** ReturnedBufferUsed;
  /* 0x0020 */ void* ResizePolicy /* function */;
  /* 0x0024 */ void* Reserved1;
  /* 0x0028 */ void* Reserved2;
} RTL_SMART_LBLOB_WRITING_CONTEXT, *PRTL_SMART_LBLOB_WRITING_CONTEXT; /* size: 0x002c */

typedef struct _RTL_SPLAY_LINKS
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* Parent;
  /* 0x0004 */ struct _RTL_SPLAY_LINKS* LeftChild;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS* RightChild;
} RTL_SPLAY_LINKS, *PRTL_SPLAY_LINKS; /* size: 0x000c */

typedef struct _RTL_SRWLOCK
{
  /* 0x0000 */ void* Ptr;
} RTL_SRWLOCK, *PRTL_SRWLOCK; /* size: 0x0004 */

typedef struct _RTL_STACK_CONTEXT
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
} RTL_STACK_CONTEXT, *PRTL_STACK_CONTEXT; /* size: 0x000c */

typedef struct _RTL_STACK_CONTEXT_ENTRY
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Data;
} RTL_STACK_CONTEXT_ENTRY, *PRTL_STACK_CONTEXT_ENTRY; /* size: 0x0008 */

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL
{
  BackTraceDatabaseCreate = 0,
  BackTraceDatabaseDelete = 1,
  BackTraceDatabaseFlush = 2,
  BackTraceDatabaseMaxControl = 3,
} RTL_STACK_TRACE_DATABASE_CONTROL, *PRTL_STACK_TRACE_DATABASE_CONTROL;

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE
{
  /* 0x0000 */ void* CommitBase;
  /* 0x0004 */ unsigned long CommitSize;
  /* 0x0008 */ unsigned long ReserveSize;
} RTL_STACK_TRACE_DATABASE_CREATE, *PRTL_STACK_TRACE_DATABASE_CREATE; /* size: 0x000c */

typedef struct _RTL_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _TIME_FIELDS StandardStart;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _TIME_FIELDS DaylightStart;
  /* 0x00a8 */ long DaylightBias;
} RTL_TIME_ZONE_INFORMATION, *PRTL_TIME_ZONE_INFORMATION; /* size: 0x00ac */

typedef struct _RTL_TRACE_BLOCK
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long UserCount;
  /* 0x0010 */ unsigned long UserSize;
  /* 0x0014 */ void* UserContext;
  /* 0x0018 */ struct _RTL_TRACE_BLOCK* Next;
  /* 0x001c */ void** Trace;
} RTL_TRACE_BLOCK, *PRTL_TRACE_BLOCK; /* size: 0x0020 */

struct _RTL_TRACE_DATABASE;

typedef struct _RTL_TRACE_ENUMERATE
{
  /* 0x0000 */ struct _RTL_TRACE_DATABASE* Database;
  /* 0x0004 */ unsigned long Index;
  /* 0x0008 */ struct _RTL_TRACE_BLOCK* Block;
} RTL_TRACE_ENUMERATE, *PRTL_TRACE_ENUMERATE; /* size: 0x000c */

typedef struct _RTL_UCSCHAR_DECODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned long UcsCharacter;
  union
  {
    /* 0x0004 */ long FailureReason;
    /* 0x0004 */ const unsigned char* NewCursorValue;
  }; /* size: 0x0004 */
} RTL_UCSCHAR_DECODER_RETURN_VALUE, *PRTL_UCSCHAR_DECODER_RETURN_VALUE; /* size: 0x0008 */

typedef struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned char* NewCursorValue;
  /* 0x0004 */ long FailureReason;
} RTL_UCSCHAR_ENCODER_RETURN_VALUE, *PRTL_UCSCHAR_ENCODER_RETURN_VALUE; /* size: 0x0008 */

typedef struct _RTL_UNICODE_STRING_BUFFER
{
  /* 0x0000 */ struct _UNICODE_STRING String;
  /* 0x0008 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0020 */ unsigned char MinimumStaticBufferForTerminalNul[2];
  /* 0x0022 */ char __PADDING__[2];
} RTL_UNICODE_STRING_BUFFER, *PRTL_UNICODE_STRING_BUFFER; /* size: 0x0024 */

typedef struct _RTL_UNLOAD_EVENT_TRACE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0004 */ unsigned long SizeOfImage;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ wchar_t ImageName[32];
} RTL_UNLOAD_EVENT_TRACE, *PRTL_UNLOAD_EVENT_TRACE; /* size: 0x0054 */

typedef struct _RTL_UNLOAD_EVENT_TRACE32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long SizeOfImage;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ wchar_t ImageName[32];
} RTL_UNLOAD_EVENT_TRACE32, *PRTL_UNLOAD_EVENT_TRACE32; /* size: 0x0054 */

typedef struct _RTL_UNLOAD_EVENT_TRACE64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE64, *PRTL_UNLOAD_EVENT_TRACE64; /* size: 0x0060 */

typedef struct _RTL_USER_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ void* Process;
  /* 0x0008 */ void* Thread;
  /* 0x000c */ struct _CLIENT_ID ClientId;
  /* 0x0014 */ struct _SECTION_IMAGE_INFORMATION ImageInformation;
} RTL_USER_PROCESS_INFORMATION, *PRTL_USER_PROCESS_INFORMATION; /* size: 0x0044 */

typedef struct _RTL_USER_PROCESS_INFORMATION64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0008 */ __int64 Process;
  /* 0x0010 */ __int64 Thread;
  /* 0x0018 */ struct _CLIENT_ID64 ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
} RTL_USER_PROCESS_INFORMATION64, *PRTL_USER_PROCESS_INFORMATION64; /* size: 0x0068 */

typedef struct _RTL_USER_PROCESS_PARAMETERS
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ void* ConsoleHandle;
  /* 0x0014 */ unsigned long ConsoleFlags;
  /* 0x0018 */ void* StandardInput;
  /* 0x001c */ void* StandardOutput;
  /* 0x0020 */ void* StandardError;
  /* 0x0024 */ struct _CURDIR CurrentDirectory;
  /* 0x0030 */ struct _UNICODE_STRING DllPath;
  /* 0x0038 */ struct _UNICODE_STRING ImagePathName;
  /* 0x0040 */ struct _UNICODE_STRING CommandLine;
  /* 0x0048 */ void* Environment;
  /* 0x004c */ unsigned long StartingX;
  /* 0x0050 */ unsigned long StartingY;
  /* 0x0054 */ unsigned long CountX;
  /* 0x0058 */ unsigned long CountY;
  /* 0x005c */ unsigned long CountCharsX;
  /* 0x0060 */ unsigned long CountCharsY;
  /* 0x0064 */ unsigned long FillAttribute;
  /* 0x0068 */ unsigned long WindowFlags;
  /* 0x006c */ unsigned long ShowWindowFlags;
  /* 0x0070 */ struct _UNICODE_STRING WindowTitle;
  /* 0x0078 */ struct _UNICODE_STRING DesktopInfo;
  /* 0x0080 */ struct _UNICODE_STRING ShellInfo;
  /* 0x0088 */ struct _UNICODE_STRING RuntimeData;
  /* 0x0090 */ struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  /* 0x0290 */ volatile unsigned long EnvironmentSize;
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS; /* size: 0x0294 */

typedef struct _RTL_USER_PROCESS_PARAMETERS64
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ __int64 ConsoleHandle;
  /* 0x0018 */ unsigned long ConsoleFlags;
  /* 0x0020 */ __int64 StandardInput;
  /* 0x0028 */ __int64 StandardOutput;
  /* 0x0030 */ __int64 StandardError;
  /* 0x0038 */ struct _CURDIR64 CurrentDirectory;
  /* 0x0050 */ struct _STRING64 DllPath;
  /* 0x0060 */ struct _STRING64 ImagePathName;
  /* 0x0070 */ struct _STRING64 CommandLine;
  /* 0x0080 */ unsigned __int64 Environment;
  /* 0x0088 */ unsigned long StartingX;
  /* 0x008c */ unsigned long StartingY;
  /* 0x0090 */ unsigned long CountX;
  /* 0x0094 */ unsigned long CountY;
  /* 0x0098 */ unsigned long CountCharsX;
  /* 0x009c */ unsigned long CountCharsY;
  /* 0x00a0 */ unsigned long FillAttribute;
  /* 0x00a4 */ unsigned long WindowFlags;
  /* 0x00a8 */ unsigned long ShowWindowFlags;
  /* 0x00b0 */ struct _STRING64 WindowTitle;
  /* 0x00c0 */ struct _STRING64 DesktopInfo;
  /* 0x00d0 */ struct _STRING64 ShellInfo;
  /* 0x00e0 */ struct _STRING64 RuntimeData;
  /* 0x00f0 */ struct _RTL_DRIVE_LETTER_CURDIR64 CurrentDirectores[32];
  /* 0x03f0 */ volatile unsigned __int64 EnvironmentSize;
} RTL_USER_PROCESS_PARAMETERS64, *PRTL_USER_PROCESS_PARAMETERS64; /* size: 0x03f8 */

typedef struct _RTL_VERIFIER_ALL_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long OffsetPageHeapsInformation;
  /* 0x0008 */ unsigned long OffsetRuntimeFlagsInformation;
  /* 0x000c */ unsigned long OffsetFaultInjectInformation;
} RTL_VERIFIER_ALL_INFORMATION, *PRTL_VERIFIER_ALL_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* DllName;
  /* 0x0004 */ unsigned long DllFlags;
  /* 0x0008 */ void* DllAddress;
  /* 0x000c */ struct _RTL_VERIFIER_THUNK_DESCRIPTOR* DllThunks;
} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR; /* size: 0x0010 */

typedef struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0008 */ unsigned long FaultProbability[16];
  /* 0x0048 */ unsigned long FaultBreak[16];
  /* 0x0088 */ unsigned long TargetMaximumIndex;
  /* 0x008c */ unsigned long FaultTargetStart[128];
  /* 0x028c */ unsigned long FaultTargetEnd[128];
  /* 0x048c */ unsigned long ExclusionMaximumIndex;
  /* 0x0490 */ unsigned long FaultExclusionStart[128];
  /* 0x0690 */ unsigned long FaultExclusionEnd[128];
} RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION, *PRTL_VERIFIER_FAULT_INJECTIONS_INFORMATION; /* size: 0x0890 */

typedef struct _RTL_VERIFIER_HEAP_TABLE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ void* VrfDisableFaultInjection /* function */;
  /* 0x0008 */ void* VrfEnableFaultInjection /* function */;
  /* 0x000c */ void* VrfIsDllTargeted /* function */;
  /* 0x0010 */ void* VrfTargetDllsLoadCallBack /* function */;
  /* 0x0014 */ void* VrfHeapAllocate /* function */;
  /* 0x0018 */ void* VrfHeapReAllocate /* function */;
  /* 0x001c */ void* VrfHeapFree /* function */;
  /* 0x0020 */ void* VrfHeapCreate /* function */;
  /* 0x0024 */ void* VrfHeapDestroy /* function */;
  /* 0x0028 */ void* VrfHeapExtend /* function */;
  /* 0x002c */ void* VrfGetProcessHeaps /* function */;
  /* 0x0030 */ void* VrfHeapWalk /* function */;
  /* 0x0034 */ void* VrfHeapLock /* function */;
  /* 0x0038 */ void* VrfHeapUnlock /* function */;
  /* 0x003c */ void* VrfHeapIsLocked /* function */;
  /* 0x0040 */ void* VrfHeapValidate /* function */;
  /* 0x0044 */ void* VrfHeapSetUserValue /* function */;
  /* 0x0048 */ void* VrfHeapGetUserInfo /* function */;
  /* 0x004c */ void* VrfHeapSetUserFlags /* function */;
  /* 0x0050 */ void* VrfHeapSerialize /* function */;
  /* 0x0054 */ void* VrfHeapSize /* function */;
  /* 0x0058 */ void* VrfHeapCompact /* function */;
  /* 0x005c */ void* VrfHeapZero /* function */;
  /* 0x0060 */ void* VrfQueryVerifierOptions /* function */;
  /* 0x0064 */ void* VrfSetVerifierOptions /* function */;
} RTL_VERIFIER_HEAP_TABLE, *PRTL_VERIFIER_HEAP_TABLE; /* size: 0x0068 */

typedef struct _RTL_VERIFIER_HELPER_TABLE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ void* VerifierEngGetStackTraceAddress /* function */;
  /* 0x0008 */ void* VerifierEngNtdllHeapFreeCallback /* function */;
  /* 0x000c */ void* VerifierEngLogStackTrace /* function */;
  /* 0x0010 */ const struct _UNICODE_STRING* UnicodeImageName;
  /* 0x0014 */ void* VerifierEngCommitDebugInfo /* function */;
  /* 0x0018 */ void* VerifierEngSetProcessDebugInformation /* function */;
  /* 0x001c */ void* VerifierEngQueryImageFileExecutionOptionsEx /* function */;
  /* 0x0020 */ wchar_t* TargetDlls;
  /* 0x0024 */ unsigned long* AddressDphGlobalFlags;
  /* 0x0028 */ struct _RTL_VERIFIER_HEAP_TABLE* VerifierTable;
  /* 0x002c */ struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR* VerifierDescriptor;
  /* 0x0030 */ void* OptionsKey;
  /* 0x0034 */ void* VerifierEngGetStackTraceAddressEx /* function */;
  /* 0x0038 */ void* VerifierEngReleaseStackTrace /* function */;
} RTL_VERIFIER_HELPER_TABLE, *PRTL_VERIFIER_HELPER_TABLE; /* size: 0x003c */

typedef enum _RTL_VERIFIER_INFORMATION_CLASS
{
  VerifierAllInformation = 0,
  VerifierPageHeapsInformation = 1,
  VerifierRuntimeFlagsInformation = 2,
  VerifierFaultInjectInformation = 3,
  MaxVerifierInformation = 4,
} RTL_VERIFIER_INFORMATION_CLASS, *PRTL_VERIFIER_INFORMATION_CLASS;

typedef struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long NumberPageHeaps;
  /* 0x0008 */ struct _RTL_VERIFIER_PAGEHEAP_INFORMATION PageHeapInformation[1];
} RTL_VERIFIER_PAGEHEAPS_INFORMATION, *PRTL_VERIFIER_PAGEHEAPS_INFORMATION; /* size: 0x001c */

typedef struct _RTL_VERIFIER_PAGEHEAP_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long HeapFlags;
  /* 0x000c */ unsigned long ExtraFlags;
  /* 0x0010 */ unsigned long HeapHandle;
} RTL_VERIFIER_PAGEHEAP_INFORMATION, *PRTL_VERIFIER_PAGEHEAP_INFORMATION; /* size: 0x0014 */

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ struct _RTL_VERIFIER_DLL_DESCRIPTOR* ProviderDlls;
  /* 0x0008 */ void* ProviderDllLoadCallback /* function */;
  /* 0x000c */ void* ProviderDllUnloadCallback /* function */;
  /* 0x0010 */ wchar_t* VerifierImage;
  /* 0x0014 */ unsigned long VerifierFlags;
  /* 0x0018 */ unsigned long VerifierDebug;
  /* 0x001c */ void* RtlpGetStackTraceAddress;
  /* 0x0020 */ void* RtlpDebugPageHeapCreate;
  /* 0x0024 */ void* RtlpDebugPageHeapDestroy;
  /* 0x0028 */ void* ProviderNtdllHeapFreeCallback /* function */;
} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR; /* size: 0x002c */

typedef struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ProviderFlags;
  /* 0x0008 */ unsigned long DebugFlags;
  /* 0x000c */ unsigned long Spare;
} RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION, *PRTL_VERIFIER_RUNTIME_FLAGS_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  /* 0x0000 */ char* ThunkName;
  /* 0x0004 */ void* ThunkOldAddress;
  /* 0x0008 */ void* ThunkNewAddress;
} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR; /* size: 0x000c */

typedef enum _RUNLEVEL
{
  RUNLEVEL_LUA = 0,
  RUNLEVEL_HIGHEST = 1,
  RUNLEVEL_ADMIN = 2,
  RUNLEVEL_MAX_NON_UIA = 3,
  RUNLEVEL_LUA_UIA = 16,
  RUNLEVEL_HIGHEST_UIA = 17,
  RUNLEVEL_ADMIN_UIA = 18,
  RUNLEVEL_MAX = 19,
} RUNLEVEL, *PRUNLEVEL;

typedef struct _RegInput
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0008 */ struct _RegInputEntry rginent[1];
} RegInput, *PRegInput; /* size: 0x0038 */

typedef struct _RegInputEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned __int64 oxid;
  /* 0x0018 */ struct _GUID ipid;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ long __PADDING__[1];
} RegInputEntry, *PRegInputEntry; /* size: 0x0030 */

typedef struct _RegOutput
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long RegKeys[1];
} RegOutput, *PRegOutput; /* size: 0x0008 */

typedef struct _RemotableHandle
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ union _RemotableHandle::__MIDL_IWinTypes_0009 u;
} RemotableHandle, *PRemotableHandle; /* size: 0x0008 */

typedef union _RemotableHandle::__MIDL_IWinTypes_0009
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ long hRemote;
  }; /* size: 0x0004 */
} RemotableHandle::__MIDL_IWinTypes_0009, *PRemotableHandle::__MIDL_IWinTypes_0009; /* size: 0x0004 */

typedef struct _RevokeClasses
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ struct _RevokeEntry revent[1];
} RevokeClasses, *PRevokeClasses; /* size: 0x0018 */

typedef struct _RevokeEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long dwReg;
} RevokeEntry, *PRevokeEntry; /* size: 0x0014 */

typedef struct _SCHANNEL_ALG
{
  /* 0x0000 */ unsigned long dwUse;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned long cBits;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwReserved;
} SCHANNEL_ALG, *PSCHANNEL_ALG; /* size: 0x0014 */

typedef struct _SCHANNEL_CRED
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long cCreds;
  /* 0x0008 */ const struct _CERT_CONTEXT** paCred;
  /* 0x000c */ void* hRootStore;
  /* 0x0010 */ unsigned long cMappers;
  /* 0x0014 */ struct _HMAPPER** aphMappers;
  /* 0x0018 */ unsigned long cSupportedAlgs;
  /* 0x001c */ unsigned int* palgSupportedAlgs;
  /* 0x0020 */ unsigned long grbitEnabledProtocols;
  /* 0x0024 */ unsigned long dwMinimumCipherStrength;
  /* 0x0028 */ unsigned long dwMaximumCipherStrength;
  /* 0x002c */ unsigned long dwSessionLifespan;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwCredFormat;
} SCHANNEL_CRED, *PSCHANNEL_CRED; /* size: 0x0038 */

typedef struct _SCMREGKEY
{
  /* 0x0000 */ unsigned __int64 dwEntryLoc;
  /* 0x0008 */ unsigned long dwHash;
  /* 0x000c */ unsigned long dwScmId;
} SCMREGKEY, *PSCMREGKEY; /* size: 0x0010 */

typedef struct _SCONTEXT_QUEUE
{
  /* 0x0000 */ unsigned long NumberOfObjects;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ void* pad[2];
    /* 0x000c */ void* userContext;
  } /* size: 0x000c */** ArrayOfObjects;
} SCONTEXT_QUEUE, *PSCONTEXT_QUEUE; /* size: 0x0008 */

typedef struct _SC_ACTION
{
  /* 0x0000 */ enum _SC_ACTION_TYPE Type;
  /* 0x0004 */ unsigned long Delay;
} SC_ACTION, *PSC_ACTION; /* size: 0x0008 */

typedef enum _SC_ACTION_TYPE
{
  SC_ACTION_NONE = 0,
  SC_ACTION_RESTART = 1,
  SC_ACTION_REBOOT = 2,
  SC_ACTION_RUN_COMMAND = 3,
} SC_ACTION_TYPE, *PSC_ACTION_TYPE;

typedef enum _SC_ENUM_TYPE
{
  SC_ENUM_PROCESS_INFO = 0,
} SC_ENUM_TYPE, *PSC_ENUM_TYPE;

typedef enum _SC_STATUS_TYPE
{
  SC_STATUS_PROCESS_INFO = 0,
} SC_STATUS_TYPE, *PSC_STATUS_TYPE;

typedef struct _SECTIONBASICINFO
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0004 */ unsigned long AllocationAttributes;
  /* 0x0008 */ union _LARGE_INTEGER MaximumSize;
} SECTIONBASICINFO, *PSECTIONBASICINFO; /* size: 0x0010 */

typedef struct _SECTION_IMAGE_INFORMATION
{
  /* 0x0000 */ void* TransferAddress;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ unsigned long MaximumStackSize;
  /* 0x000c */ unsigned long CommittedStackSize;
  /* 0x0010 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned short SubSystemMinorVersion;
      /* 0x0016 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0014 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned long GpValue;
  /* 0x001c */ unsigned short ImageCharacteristics;
  /* 0x001e */ unsigned short DllCharacteristics;
  /* 0x0020 */ unsigned short Machine;
  /* 0x0022 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0023 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0023 */ unsigned char ComPlusNativeReady : 1; /* bit position: 0 */
      /* 0x0023 */ unsigned char ComPlusILOnly : 1; /* bit position: 1 */
      /* 0x0023 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 2 */
      /* 0x0023 */ unsigned char ImageMappedFlat : 1; /* bit position: 3 */
      /* 0x0023 */ unsigned char Reserved : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0024 */ unsigned long LoaderFlags;
  /* 0x0028 */ unsigned long ImageFileSize;
  /* 0x002c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION; /* size: 0x0030 */

typedef struct _SECTION_IMAGE_INFORMATION32
{
  /* 0x0000 */ unsigned long TransferAddress;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ unsigned long MaximumStackSize;
  /* 0x000c */ unsigned long CommittedStackSize;
  /* 0x0010 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned short SubSystemMinorVersion;
      /* 0x0016 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0014 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned long GpValue;
  /* 0x001c */ unsigned short ImageCharacteristics;
  /* 0x001e */ unsigned short DllCharacteristics;
  /* 0x0020 */ unsigned short Machine;
  /* 0x0022 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0023 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0023 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0023 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0023 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0024 */ unsigned long LoaderFlags;
  /* 0x0028 */ unsigned long ImageFileSize;
  /* 0x002c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION32, *PSECTION_IMAGE_INFORMATION32; /* size: 0x0030 */

typedef struct _SECTION_IMAGE_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION64, *PSECTION_IMAGE_INFORMATION64; /* size: 0x0040 */

typedef enum _SECTION_INFORMATION_CLASS
{
  SectionBasicInformation = 0,
  SectionImageInformation = 1,
  MaxSectionInfoClass = 2,
} SECTION_INFORMATION_CLASS, *PSECTION_INFORMATION_CLASS;

typedef enum _SECTION_INHERIT
{
  ViewShare = 1,
  ViewUnmap = 2,
} SECTION_INHERIT, *PSECTION_INHERIT;

typedef struct _SECURITY_ADVANCED_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000c */ struct _SECURITY_TOKEN_PROXY_DATA* ProxyData;
  /* 0x0010 */ struct _SECURITY_TOKEN_AUDIT_DATA* AuditData;
} SECURITY_ADVANCED_QUALITY_OF_SERVICE, *PSECURITY_ADVANCED_QUALITY_OF_SERVICE; /* size: 0x0014 */

typedef struct _SECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ void* lpSecurityDescriptor;
  /* 0x0008 */ int bInheritHandle;
} SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES; /* size: 0x000c */

typedef struct _SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ void* Owner;
  /* 0x0008 */ void* Group;
  /* 0x000c */ struct _ACL* Sacl;
  /* 0x0010 */ struct _ACL* Dacl;
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR; /* size: 0x0014 */

typedef struct _SECURITY_DESCRIPTOR_RELATIVE
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ unsigned long Owner;
  /* 0x0008 */ unsigned long Group;
  /* 0x000c */ unsigned long Sacl;
  /* 0x0010 */ unsigned long Dacl;
} SECURITY_DESCRIPTOR_RELATIVE, *PSECURITY_DESCRIPTOR_RELATIVE; /* size: 0x0014 */

typedef enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0,
  SecurityIdentification = 1,
  SecurityImpersonation = 2,
  SecurityDelegation = 3,
} SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

typedef struct _SECURITY_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char __PADDING__[2];
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE; /* size: 0x000c */

typedef struct _SECURITY_SEED_AND_LENGTH
{
  /* 0x0000 */ unsigned char Length;
  /* 0x0001 */ unsigned char Seed;
} SECURITY_SEED_AND_LENGTH, *PSECURITY_SEED_AND_LENGTH; /* size: 0x0002 */

typedef struct _SECURITY_TOKEN_AUDIT_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long GrantMask;
  /* 0x0008 */ unsigned long DenyMask;
} SECURITY_TOKEN_AUDIT_DATA, *PSECURITY_TOKEN_AUDIT_DATA; /* size: 0x000c */

typedef struct _SECURITY_TOKEN_PROXY_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _PROXY_CLASS ProxyClass;
  /* 0x0008 */ struct _UNICODE_STRING PathInfo;
  /* 0x0010 */ unsigned long ContainerMask;
  /* 0x0014 */ unsigned long ObjectMask;
} SECURITY_TOKEN_PROXY_DATA, *PSECURITY_TOKEN_PROXY_DATA; /* size: 0x0018 */

typedef struct _SEC_WINNT_AUTH_IDENTITY_A
{
  /* 0x0000 */ unsigned char* User;
  /* 0x0004 */ unsigned long UserLength;
  /* 0x0008 */ unsigned char* Domain;
  /* 0x000c */ unsigned long DomainLength;
  /* 0x0010 */ unsigned char* Password;
  /* 0x0014 */ unsigned long PasswordLength;
  /* 0x0018 */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_A, *PSEC_WINNT_AUTH_IDENTITY_A; /* size: 0x001c */

typedef struct _SEC_WINNT_AUTH_IDENTITY_W
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0004 */ unsigned long UserLength;
  /* 0x0008 */ unsigned short* Domain;
  /* 0x000c */ unsigned long DomainLength;
  /* 0x0010 */ unsigned short* Password;
  /* 0x0014 */ unsigned long PasswordLength;
  /* 0x0018 */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_W, *PSEC_WINNT_AUTH_IDENTITY_W; /* size: 0x001c */

typedef struct _SEMAPHORE_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ long MaximumCount;
} SEMAPHORE_BASIC_INFORMATION, *PSEMAPHORE_BASIC_INFORMATION; /* size: 0x0008 */

typedef enum _SEMAPHORE_INFORMATION_CLASS
{
  SemaphoreBasicInformation = 0,
} SEMAPHORE_INFORMATION_CLASS, *PSEMAPHORE_INFORMATION_CLASS;

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ char* pszComment;
  /* 0x0008 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
} SERVICE_CONTROL_STATUS_REASON_PARAMSA, *PSERVICE_CONTROL_STATUS_REASON_PARAMSA; /* size: 0x002c */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ wchar_t* pszComment;
  /* 0x0008 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
} SERVICE_CONTROL_STATUS_REASON_PARAMSW, *PSERVICE_CONTROL_STATUS_REASON_PARAMSW; /* size: 0x002c */

typedef struct _SERVICE_DELAYED_AUTO_START_INFO
{
  /* 0x0000 */ int fDelayedAutostart;
} SERVICE_DELAYED_AUTO_START_INFO, *PSERVICE_DELAYED_AUTO_START_INFO; /* size: 0x0004 */

typedef struct _SERVICE_DESCRIPTIONA
{
  /* 0x0000 */ char* lpDescription;
} SERVICE_DESCRIPTIONA, *PSERVICE_DESCRIPTIONA; /* size: 0x0004 */

typedef struct _SERVICE_DESCRIPTIONW
{
  /* 0x0000 */ wchar_t* lpDescription;
} SERVICE_DESCRIPTIONW, *PSERVICE_DESCRIPTIONW; /* size: 0x0004 */

typedef struct _SERVICE_FAILURE_ACTIONSA
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ char* lpRebootMsg;
  /* 0x0008 */ char* lpCommand;
  /* 0x000c */ unsigned long cActions;
  /* 0x0010 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSA, *PSERVICE_FAILURE_ACTIONSA; /* size: 0x0014 */

typedef struct _SERVICE_FAILURE_ACTIONSW
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ wchar_t* lpRebootMsg;
  /* 0x0008 */ wchar_t* lpCommand;
  /* 0x000c */ unsigned long cActions;
  /* 0x0010 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSW, *PSERVICE_FAILURE_ACTIONSW; /* size: 0x0014 */

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG
{
  /* 0x0000 */ int fFailureActionsOnNonCrashFailures;
} SERVICE_FAILURE_ACTIONS_FLAG, *PSERVICE_FAILURE_ACTIONS_FLAG; /* size: 0x0004 */

typedef struct _SERVICE_NOTIFY_1
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ void* pfnNotifyCallback /* function */;
  /* 0x0008 */ void* pContext;
  /* 0x000c */ unsigned long dwNotificationStatus;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
} SERVICE_NOTIFY_1, *PSERVICE_NOTIFY_1; /* size: 0x0034 */

typedef struct _SERVICE_NOTIFY_2A
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ void* pfnNotifyCallback /* function */;
  /* 0x0008 */ void* pContext;
  /* 0x000c */ unsigned long dwNotificationStatus;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ unsigned long dwNotificationTriggered;
  /* 0x0038 */ char* pszServiceNames;
} SERVICE_NOTIFY_2A, *PSERVICE_NOTIFY_2A; /* size: 0x003c */

typedef struct _SERVICE_NOTIFY_2W
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ void* pfnNotifyCallback /* function */;
  /* 0x0008 */ void* pContext;
  /* 0x000c */ unsigned long dwNotificationStatus;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ unsigned long dwNotificationTriggered;
  /* 0x0038 */ wchar_t* pszServiceNames;
} SERVICE_NOTIFY_2W, *PSERVICE_NOTIFY_2W; /* size: 0x003c */

typedef struct _SERVICE_PRESHUTDOWN_INFO
{
  /* 0x0000 */ unsigned long dwPreshutdownTimeout;
} SERVICE_PRESHUTDOWN_INFO, *PSERVICE_PRESHUTDOWN_INFO; /* size: 0x0004 */

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA
{
  /* 0x0000 */ char* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOA, *PSERVICE_REQUIRED_PRIVILEGES_INFOA; /* size: 0x0004 */

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW
{
  /* 0x0000 */ wchar_t* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOW, *PSERVICE_REQUIRED_PRIVILEGES_INFOW; /* size: 0x0004 */

typedef struct _SERVICE_SID_INFO
{
  /* 0x0000 */ unsigned long dwServiceSidType;
} SERVICE_SID_INFO, *PSERVICE_SID_INFO; /* size: 0x0004 */

typedef struct _SERVICE_STATUS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
} SERVICE_STATUS, *PSERVICE_STATUS; /* size: 0x001c */

typedef struct _SERVICE_STATUS_PROCESS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
  /* 0x001c */ unsigned long dwProcessId;
  /* 0x0020 */ unsigned long dwServiceFlags;
} SERVICE_STATUS_PROCESS, *PSERVICE_STATUS_PROCESS; /* size: 0x0024 */

typedef struct _SERVICE_TABLE_ENTRYA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0004 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYA, *PSERVICE_TABLE_ENTRYA; /* size: 0x0008 */

typedef struct _SERVICE_TABLE_ENTRYW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0004 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYW, *PSERVICE_TABLE_ENTRYW; /* size: 0x0008 */

typedef struct _SE_IMPERSONATION_STATE
{
  /* 0x0000 */ void* Token;
  /* 0x0004 */ unsigned char CopyOnOpen;
  /* 0x0005 */ unsigned char EffectiveOnly;
  /* 0x0008 */ enum _SECURITY_IMPERSONATION_LEVEL Level;
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE; /* size: 0x000c */

typedef enum _SE_OBJECT_TYPE
{
  SE_UNKNOWN_OBJECT_TYPE = 0,
  SE_FILE_OBJECT = 1,
  SE_SERVICE = 2,
  SE_PRINTER = 3,
  SE_REGISTRY_KEY = 4,
  SE_LMSHARE = 5,
  SE_KERNEL_OBJECT = 6,
  SE_WINDOW_OBJECT = 7,
  SE_DS_OBJECT = 8,
  SE_DS_OBJECT_ALL = 9,
  SE_PROVIDER_DEFINED_OBJECT = 10,
  SE_WMIGUID_OBJECT = 11,
  SE_REGISTRY_WOW64_32KEY = 12,
} SE_OBJECT_TYPE, *PSE_OBJECT_TYPE;

typedef struct _SHCREATEPROCESSINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x000c */ const wchar_t* pszFile;
  /* 0x0010 */ const wchar_t* pszParameters;
  /* 0x0014 */ const wchar_t* pszCurrentDirectory;
  /* 0x0018 */ void* hUserToken;
  /* 0x001c */ struct _SECURITY_ATTRIBUTES* lpProcessAttributes;
  /* 0x0020 */ struct _SECURITY_ATTRIBUTES* lpThreadAttributes;
  /* 0x0024 */ int bInheritHandles;
  /* 0x0028 */ unsigned long dwCreationFlags;
  /* 0x002c */ struct _STARTUPINFOW* lpStartupInfo;
  /* 0x0030 */ struct _PROCESS_INFORMATION* lpProcessInformation;
} SHCREATEPROCESSINFOW, *PSHCREATEPROCESSINFOW; /* size: 0x0034 */

typedef struct _SHELLEXECUTEINFOA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x000c */ const char* lpVerb;
  /* 0x0010 */ const char* lpFile;
  /* 0x0014 */ const char* lpParameters;
  /* 0x0018 */ const char* lpDirectory;
  /* 0x001c */ int nShow;
  /* 0x0020 */ struct HINSTANCE__* hInstApp;
  /* 0x0024 */ void* lpIDList;
  /* 0x0028 */ const char* lpClass;
  /* 0x002c */ struct HKEY__* hkeyClass;
  /* 0x0030 */ unsigned long dwHotKey;
  union
  {
    /* 0x0034 */ void* hIcon;
    /* 0x0034 */ void* hMonitor;
  }; /* size: 0x0004 */
  /* 0x0038 */ void* hProcess;
} SHELLEXECUTEINFOA, *PSHELLEXECUTEINFOA; /* size: 0x003c */

typedef struct _SHELLEXECUTEINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x000c */ const wchar_t* lpVerb;
  /* 0x0010 */ const wchar_t* lpFile;
  /* 0x0014 */ const wchar_t* lpParameters;
  /* 0x0018 */ const wchar_t* lpDirectory;
  /* 0x001c */ int nShow;
  /* 0x0020 */ struct HINSTANCE__* hInstApp;
  /* 0x0024 */ void* lpIDList;
  /* 0x0028 */ const wchar_t* lpClass;
  /* 0x002c */ struct HKEY__* hkeyClass;
  /* 0x0030 */ unsigned long dwHotKey;
  union
  {
    /* 0x0034 */ void* hIcon;
    /* 0x0034 */ void* hMonitor;
  }; /* size: 0x0004 */
  /* 0x0038 */ void* hProcess;
} SHELLEXECUTEINFOW, *PSHELLEXECUTEINFOW; /* size: 0x003c */

typedef struct _SHFILEINFOA
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0004 */ int iIcon;
  /* 0x0008 */ unsigned long dwAttributes;
  /* 0x000c */ char szDisplayName[260];
  /* 0x0110 */ char szTypeName[80];
} SHFILEINFOA, *PSHFILEINFOA; /* size: 0x0160 */

typedef struct _SHFILEINFOW
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0004 */ int iIcon;
  /* 0x0008 */ unsigned long dwAttributes;
  /* 0x000c */ wchar_t szDisplayName[260];
  /* 0x0214 */ wchar_t szTypeName[80];
} SHFILEINFOW, *PSHFILEINFOW; /* size: 0x02b4 */

typedef struct _SHFILEOPSTRUCTA
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ unsigned int wFunc;
  /* 0x0008 */ const char* pFrom;
  /* 0x000c */ const char* pTo;
  /* 0x0010 */ unsigned short fFlags;
  /* 0x0012 */ int fAnyOperationsAborted;
  /* 0x0016 */ void* hNameMappings;
  /* 0x001a */ const char* lpszProgressTitle;
} SHFILEOPSTRUCTA, *PSHFILEOPSTRUCTA; /* size: 0x001e */

typedef struct _SHFILEOPSTRUCTW
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ unsigned int wFunc;
  /* 0x0008 */ const wchar_t* pFrom;
  /* 0x000c */ const wchar_t* pTo;
  /* 0x0010 */ unsigned short fFlags;
  /* 0x0012 */ int fAnyOperationsAborted;
  /* 0x0016 */ void* hNameMappings;
  /* 0x001a */ const wchar_t* lpszProgressTitle;
} SHFILEOPSTRUCTW, *PSHFILEOPSTRUCTW; /* size: 0x001e */

typedef struct _SHITEMID
{
  /* 0x0000 */ unsigned short cb;
  /* 0x0002 */ unsigned char abID[1];
} SHITEMID, *PSHITEMID; /* size: 0x0003 */

typedef struct _SHNAMEMAPPINGA
{
  /* 0x0000 */ char* pszOldPath;
  /* 0x0004 */ char* pszNewPath;
  /* 0x0008 */ int cchOldPath;
  /* 0x000c */ int cchNewPath;
} SHNAMEMAPPINGA, *PSHNAMEMAPPINGA; /* size: 0x0010 */

typedef struct _SHNAMEMAPPINGW
{
  /* 0x0000 */ wchar_t* pszOldPath;
  /* 0x0004 */ wchar_t* pszNewPath;
  /* 0x0008 */ int cchOldPath;
  /* 0x000c */ int cchNewPath;
} SHNAMEMAPPINGW, *PSHNAMEMAPPINGW; /* size: 0x0010 */

typedef struct _SHORT_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned short* pData;
} SHORT_SIZEDARR, *PSHORT_SIZEDARR; /* size: 0x0008 */

typedef struct _SHQUERYRBINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ __int64 i64Size;
  /* 0x000c */ __int64 i64NumItems;
} SHQUERYRBINFO, *PSHQUERYRBINFO; /* size: 0x0014 */

typedef struct _SHRINK_VOLUME_INFORMATION
{
  /* 0x0000 */ enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
  /* 0x0008 */ unsigned __int64 Flags;
  /* 0x0010 */ __int64 NewNumberOfSectors;
} SHRINK_VOLUME_INFORMATION, *PSHRINK_VOLUME_INFORMATION; /* size: 0x0018 */

typedef enum _SHRINK_VOLUME_REQUEST_TYPES
{
  ShrinkPrepare = 1,
  ShrinkCommit = 2,
  ShrinkAbort = 3,
} SHRINK_VOLUME_REQUEST_TYPES, *PSHRINK_VOLUME_REQUEST_TYPES;

typedef struct _SHSTOCKICONINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct HICON__* hIcon;
  /* 0x0008 */ int iSysImageIndex;
  /* 0x000c */ int iIcon;
  /* 0x0010 */ wchar_t szPath[260];
} SHSTOCKICONINFO, *PSHSTOCKICONINFO; /* size: 0x0218 */

typedef enum _SHUTDOWN_ACTION
{
  ShutdownNoReboot = 0,
  ShutdownReboot = 1,
  ShutdownPowerOff = 2,
} SHUTDOWN_ACTION, *PSHUTDOWN_ACTION;

typedef struct _SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
} SID, *PSID; /* size: 0x000c */

typedef struct _SID_AND_ATTRIBUTES
{
  /* 0x0000 */ void* Sid;
  /* 0x0004 */ unsigned long Attributes;
} SID_AND_ATTRIBUTES, *PSID_AND_ATTRIBUTES; /* size: 0x0008 */

typedef struct _SID_AND_ATTRIBUTES_HASH
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ struct _SID_AND_ATTRIBUTES* SidAttr;
  /* 0x0008 */ unsigned long Hash[32];
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH; /* size: 0x0088 */

typedef struct _SID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY; /* size: 0x0006 */

typedef enum _SID_NAME_USE
{
  SidTypeUser = 1,
  SidTypeGroup = 2,
  SidTypeDomain = 3,
  SidTypeAlias = 4,
  SidTypeWellKnownGroup = 5,
  SidTypeDeletedAccount = 6,
  SidTypeInvalid = 7,
  SidTypeUnknown = 8,
  SidTypeComputer = 9,
  SidTypeLabel = 10,
} SID_NAME_USE, *PSID_NAME_USE;

typedef struct _SINGLE_LIST_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; /* size: 0x0004 */

typedef struct _SI_COPYFILE
{
  /* 0x0000 */ unsigned long SourceFileNameLength;
  /* 0x0004 */ unsigned long DestinationFileNameLength;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ wchar_t FileNameBuffer[1];
  /* 0x000e */ char __PADDING__[2];
} SI_COPYFILE, *PSI_COPYFILE; /* size: 0x0010 */

typedef union _SLIST_HEADER
{
  union
  {
    /* 0x0000 */ unsigned __int64 Alignment;
    struct
    {
      /* 0x0000 */ struct _SINGLE_LIST_ENTRY Next;
      /* 0x0004 */ unsigned short Depth;
      /* 0x0006 */ unsigned short Sequence;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} SLIST_HEADER, *PSLIST_HEADER; /* size: 0x0008 */

typedef struct _SL_KMEM_CACHE
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long SizeOfData;
  /* 0x0008 */ unsigned long SignatureSize;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long Version;
  /* 0x0014 */ struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_KMEM_CACHE, *PSL_KMEM_CACHE; /* size: 0x0028 */

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ unsigned short DataLength;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[2];
} SL_KMEM_CACHE_VALUE_DESCRIPTOR, *PSL_KMEM_CACHE_VALUE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _SMALL_RECT
{
  /* 0x0000 */ short Left;
  /* 0x0002 */ short Top;
  /* 0x0004 */ short Right;
  /* 0x0006 */ short Bottom;
} SMALL_RECT, *PSMALL_RECT; /* size: 0x0008 */

typedef struct _SOURCEFILE
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ char* FileName;
  /* 0x000c */ long __PADDING__[1];
} SOURCEFILE, *PSOURCEFILE; /* size: 0x0010 */

typedef struct _SOURCEFILEW
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ wchar_t* FileName;
  /* 0x000c */ long __PADDING__[1];
} SOURCEFILEW, *PSOURCEFILEW; /* size: 0x0010 */

typedef enum _SPACTION
{
  SPACTION_NONE = 0,
  SPACTION_MOVING = 1,
  SPACTION_COPYING = 2,
  SPACTION_RECYCLING = 3,
  SPACTION_APPLYINGATTRIBS = 4,
  SPACTION_DOWNLOADING = 5,
  SPACTION_SEARCHING_INTERNET = 6,
  SPACTION_CALCULATING = 7,
  SPACTION_UPLOADING = 8,
  SPACTION_SEARCHING_FILES = 9,
  SPACTION_DELETING = 10,
  SPACTION_RENAMING = 11,
  SPACTION_FORMATTING = 12,
} SPACTION, *PSPACTION;

typedef struct _SPC_FINANCIAL_CRITERIA
{
  /* 0x0000 */ int fFinancialInfoAvailable;
  /* 0x0004 */ int fMeetsCriteria;
} SPC_FINANCIAL_CRITERIA, *PSPC_FINANCIAL_CRITERIA; /* size: 0x0008 */

typedef struct _SPC_IMAGE
{
  /* 0x0000 */ struct SPC_LINK_* pImageLink;
  /* 0x0004 */ struct _CRYPTOAPI_BLOB Bitmap;
  /* 0x000c */ struct _CRYPTOAPI_BLOB Metafile;
  /* 0x0014 */ struct _CRYPTOAPI_BLOB EnhancedMetafile;
  /* 0x001c */ struct _CRYPTOAPI_BLOB GifFile;
} SPC_IMAGE, *PSPC_IMAGE; /* size: 0x0024 */

typedef struct _SPC_INDIRECT_DATA_CONTENT
{
  /* 0x0000 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE Data;
  /* 0x000c */ struct _CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Digest;
} SPC_INDIRECT_DATA_CONTENT, *PSPC_INDIRECT_DATA_CONTENT; /* size: 0x0020 */

typedef struct _SPC_PE_IMAGE_DATA
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB Flags;
  /* 0x000c */ struct SPC_LINK_* pFile;
} SPC_PE_IMAGE_DATA, *PSPC_PE_IMAGE_DATA; /* size: 0x0010 */

typedef struct _SPC_SERIALIZED_OBJECT
{
  /* 0x0000 */ unsigned char ClassId[16];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerializedData;
} SPC_SERIALIZED_OBJECT, *PSPC_SERIALIZED_OBJECT; /* size: 0x0018 */

typedef struct _SPC_SP_AGENCY_INFO
{
  /* 0x0000 */ struct SPC_LINK_* pPolicyInformation;
  /* 0x0004 */ wchar_t* pwszPolicyDisplayText;
  /* 0x0008 */ struct _SPC_IMAGE* pLogoImage;
  /* 0x000c */ struct SPC_LINK_* pLogoLink;
} SPC_SP_AGENCY_INFO, *PSPC_SP_AGENCY_INFO; /* size: 0x0010 */

typedef struct _SPC_SP_OPUS_INFO
{
  /* 0x0000 */ const wchar_t* pwszProgramName;
  /* 0x0004 */ struct SPC_LINK_* pMoreInfo;
  /* 0x0008 */ struct SPC_LINK_* pPublisherInfo;
} SPC_SP_OPUS_INFO, *PSPC_SP_OPUS_INFO; /* size: 0x000c */

typedef struct _SPC_STATEMENT_TYPE
{
  /* 0x0000 */ unsigned long cKeyPurposeId;
  /* 0x0004 */ char** rgpszKeyPurposeId;
} SPC_STATEMENT_TYPE, *PSPC_STATEMENT_TYPE; /* size: 0x0008 */

typedef enum _SPTEXT
{
  SPTEXT_ACTIONDESCRIPTION = 1,
  SPTEXT_ACTIONDETAIL = 2,
} SPTEXT, *PSPTEXT;

typedef struct _SQM_STREAM_ENTRY
{
  /* 0x0000 */ unsigned long dwType;
  union
  {
    union
    {
      /* 0x0004 */ const wchar_t* pwszVal;
      /* 0x0004 */ unsigned long dwVal;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ val;
} SQM_STREAM_ENTRY, *PSQM_STREAM_ENTRY; /* size: 0x0008 */

typedef struct _SRCCODEINFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ void* Key;
  /* 0x0008 */ unsigned __int64 ModBase;
  /* 0x0010 */ char Obj[261];
  /* 0x0115 */ char FileName[261];
  /* 0x021c */ unsigned long LineNumber;
  /* 0x0220 */ unsigned __int64 Address;
} SRCCODEINFO, *PSRCCODEINFO; /* size: 0x0228 */

typedef struct _SRCCODEINFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ void* Key;
  /* 0x0008 */ unsigned __int64 ModBase;
  /* 0x0010 */ wchar_t Obj[261];
  /* 0x021a */ wchar_t FileName[261];
  /* 0x0424 */ unsigned long LineNumber;
  /* 0x0428 */ unsigned __int64 Address;
} SRCCODEINFOW, *PSRCCODEINFOW; /* size: 0x0430 */

typedef struct _SSerializationHeader
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ void* pvMarshalPtr;
} SSerializationHeader, *PSSerializationHeader; /* size: 0x0008 */

typedef struct _STARTUPINFOA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ char* lpReserved;
  /* 0x0008 */ char* lpDesktop;
  /* 0x000c */ char* lpTitle;
  /* 0x0010 */ unsigned long dwX;
  /* 0x0014 */ unsigned long dwY;
  /* 0x0018 */ unsigned long dwXSize;
  /* 0x001c */ unsigned long dwYSize;
  /* 0x0020 */ unsigned long dwXCountChars;
  /* 0x0024 */ unsigned long dwYCountChars;
  /* 0x0028 */ unsigned long dwFillAttribute;
  /* 0x002c */ unsigned long dwFlags;
  /* 0x0030 */ unsigned short wShowWindow;
  /* 0x0032 */ unsigned short cbReserved2;
  /* 0x0034 */ unsigned char* lpReserved2;
  /* 0x0038 */ void* hStdInput;
  /* 0x003c */ void* hStdOutput;
  /* 0x0040 */ void* hStdError;
} STARTUPINFOA, *PSTARTUPINFOA; /* size: 0x0044 */

typedef struct _STARTUPINFOEXA
{
  /* 0x0000 */ struct _STARTUPINFOA StartupInfo;
  /* 0x0044 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXA, *PSTARTUPINFOEXA; /* size: 0x0048 */

typedef struct _STARTUPINFOEXW
{
  /* 0x0000 */ struct _STARTUPINFOW StartupInfo;
  /* 0x0044 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXW, *PSTARTUPINFOEXW; /* size: 0x0048 */

typedef struct _STARTUPINFOW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ wchar_t* lpReserved;
  /* 0x0008 */ wchar_t* lpDesktop;
  /* 0x000c */ wchar_t* lpTitle;
  /* 0x0010 */ unsigned long dwX;
  /* 0x0014 */ unsigned long dwY;
  /* 0x0018 */ unsigned long dwXSize;
  /* 0x001c */ unsigned long dwYSize;
  /* 0x0020 */ unsigned long dwXCountChars;
  /* 0x0024 */ unsigned long dwYCountChars;
  /* 0x0028 */ unsigned long dwFillAttribute;
  /* 0x002c */ unsigned long dwFlags;
  /* 0x0030 */ unsigned short wShowWindow;
  /* 0x0032 */ unsigned short cbReserved2;
  /* 0x0034 */ unsigned char* lpReserved2;
  /* 0x0038 */ void* hStdInput;
  /* 0x003c */ void* hStdOutput;
  /* 0x0040 */ void* hStdError;
} STARTUPINFOW, *PSTARTUPINFOW; /* size: 0x0044 */

typedef enum _STREAM_INFO_LEVELS
{
  FindStreamInfoStandard = 0,
  FindStreamInfoMaxInfoLevel = 1,
} STREAM_INFO_LEVELS, *PSTREAM_INFO_LEVELS;

typedef struct _STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ char* Buffer;
} STRING, *PSTRING; /* size: 0x0008 */

typedef struct _STRING32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ unsigned long Buffer;
} STRING32, *PSTRING32; /* size: 0x0008 */

typedef struct _STRING64
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0008 */ unsigned __int64 Buffer;
} STRING64, *PSTRING64; /* size: 0x0010 */

typedef enum _SUITE_TYPE
{
  SmallBusiness = 0,
  Enterprise = 1,
  BackOffice = 2,
  CommunicationServer = 3,
  TerminalServer = 4,
  SmallBusinessRestricted = 5,
  EmbeddedNT = 6,
  DataCenter = 7,
  SingleUserTS = 8,
  Personal = 9,
  Blade = 10,
  EmbeddedRestricted = 11,
  SecurityAppliance = 12,
  StorageServer = 13,
  ComputeServer = 14,
  WHServer = 15,
  MaxSuiteType = 16,
} SUITE_TYPE, *PSUITE_TYPE;

typedef struct _SYMBOL_INFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ char Name[1];
  /* 0x0055 */ char __PADDING__[3];
} SYMBOL_INFO, *PSYMBOL_INFO; /* size: 0x0058 */

typedef struct _SYMBOL_INFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ wchar_t Name[1];
  /* 0x0056 */ char __PADDING__[2];
} SYMBOL_INFOW, *PSYMBOL_INFOW; /* size: 0x0058 */

typedef struct _SYMBOL_INFO_PACKAGE
{
  /* 0x0000 */ struct _SYMBOL_INFO si;
  /* 0x0058 */ char name[2001];
  /* 0x0829 */ char __PADDING__[7];
} SYMBOL_INFO_PACKAGE, *PSYMBOL_INFO_PACKAGE; /* size: 0x0830 */

typedef struct _SYMBOL_INFO_PACKAGEW
{
  /* 0x0000 */ struct _SYMBOL_INFOW si;
  /* 0x0058 */ wchar_t name[2001];
  /* 0x0ffa */ char __PADDING__[6];
} SYMBOL_INFO_PACKAGEW, *PSYMBOL_INFO_PACKAGEW; /* size: 0x1000 */

typedef struct _SYSDBG_BUS_DATA
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ void* Buffer;
  /* 0x0008 */ unsigned long Request;
  /* 0x000c */ enum _BUS_DATA_TYPE BusDataType;
  /* 0x0010 */ unsigned long BusNumber;
  /* 0x0014 */ unsigned long SlotNumber;
} SYSDBG_BUS_DATA, *PSYSDBG_BUS_DATA; /* size: 0x0018 */

typedef enum _SYSDBG_COMMAND
{
  SysDbgQueryModuleInformation = 0,
  SysDbgQueryTraceInformation = 1,
  SysDbgSetTracepoint = 2,
  SysDbgSetSpecialCall = 3,
  SysDbgClearSpecialCalls = 4,
  SysDbgQuerySpecialCalls = 5,
  SysDbgBreakPoint = 6,
  SysDbgQueryVersion = 7,
  SysDbgReadVirtual = 8,
  SysDbgWriteVirtual = 9,
  SysDbgReadPhysical = 10,
  SysDbgWritePhysical = 11,
  SysDbgReadControlSpace = 12,
  SysDbgWriteControlSpace = 13,
  SysDbgReadIoSpace = 14,
  SysDbgWriteIoSpace = 15,
  SysDbgReadMsr = 16,
  SysDbgWriteMsr = 17,
  SysDbgReadBusData = 18,
  SysDbgWriteBusData = 19,
  SysDbgCheckLowMemory = 20,
  SysDbgEnableKernelDebugger = 21,
  SysDbgDisableKernelDebugger = 22,
  SysDbgGetAutoKdEnable = 23,
  SysDbgSetAutoKdEnable = 24,
  SysDbgGetPrintBufferSize = 25,
  SysDbgSetPrintBufferSize = 26,
  SysDbgGetKdUmExceptionEnable = 27,
  SysDbgSetKdUmExceptionEnable = 28,
  SysDbgGetTriageDump = 29,
  SysDbgGetKdBlockEnable = 30,
  SysDbgSetKdBlockEnable = 31,
  SysDbgRegisterForUmBreakInfo = 32,
  SysDbgGetUmBreakPid = 33,
  SysDbgClearUmBreakPid = 34,
  SysDbgGetUmAttachPid = 35,
  SysDbgClearUmAttachPid = 36,
} SYSDBG_COMMAND, *PSYSDBG_COMMAND;

typedef struct _SYSDBG_CONTROL_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x000c */ unsigned long Request;
  /* 0x0010 */ unsigned long Processor;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_CONTROL_SPACE, *PSYSDBG_CONTROL_SPACE; /* size: 0x0018 */

typedef struct _SYSDBG_IO_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x000c */ unsigned long Request;
  /* 0x0010 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0014 */ unsigned long BusNumber;
  /* 0x0018 */ unsigned long AddressSpace;
  /* 0x001c */ long __PADDING__[1];
} SYSDBG_IO_SPACE, *PSYSDBG_IO_SPACE; /* size: 0x0020 */

typedef struct _SYSDBG_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0008 */ unsigned __int64 Data;
} SYSDBG_MSR, *PSYSDBG_MSR; /* size: 0x0010 */

typedef struct _SYSDBG_PHYSICAL
{
  /* 0x0000 */ union _LARGE_INTEGER Address;
  /* 0x0008 */ void* Buffer;
  /* 0x000c */ unsigned long Request;
} SYSDBG_PHYSICAL, *PSYSDBG_PHYSICAL; /* size: 0x0010 */

typedef struct _SYSDBG_TRIAGE_DUMP
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned long BugCheckParam1;
  /* 0x000c */ unsigned long BugCheckParam2;
  /* 0x0010 */ unsigned long BugCheckParam3;
  /* 0x0014 */ unsigned long BugCheckParam4;
  /* 0x0018 */ unsigned long ProcessHandles;
  /* 0x001c */ unsigned long ThreadHandles;
  /* 0x0020 */ void** Handles;
} SYSDBG_TRIAGE_DUMP, *PSYSDBG_TRIAGE_DUMP; /* size: 0x0024 */

typedef struct _SYSDBG_VIRTUAL
{
  /* 0x0000 */ void* Address;
  /* 0x0004 */ void* Buffer;
  /* 0x0008 */ unsigned long Request;
} SYSDBG_VIRTUAL, *PSYSDBG_VIRTUAL; /* size: 0x000c */

typedef struct _SYSTEMTIME
{
  /* 0x0000 */ unsigned short wYear;
  /* 0x0002 */ unsigned short wMonth;
  /* 0x0004 */ unsigned short wDayOfWeek;
  /* 0x0006 */ unsigned short wDay;
  /* 0x0008 */ unsigned short wHour;
  /* 0x000a */ unsigned short wMinute;
  /* 0x000c */ unsigned short wSecond;
  /* 0x000e */ unsigned short wMilliseconds;
} SYSTEMTIME, *PSYSTEMTIME; /* size: 0x0010 */

typedef struct _SYSTEM_ALARM_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_ACE, *PSYSTEM_ALARM_ACE; /* size: 0x000c */

typedef struct _SYSTEM_ALARM_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE; /* size: 0x000c */

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _SYSTEM_ALARM_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE; /* size: 0x0030 */

typedef struct _SYSTEM_AUDIT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_ACE, *PSYSTEM_AUDIT_ACE; /* size: 0x000c */

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE; /* size: 0x000c */

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _SYSTEM_AUDIT_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE; /* size: 0x0030 */

typedef struct _SYSTEM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long TimerResolution;
  /* 0x0008 */ unsigned long PageSize;
  /* 0x000c */ unsigned long NumberOfPhysicalPages;
  /* 0x0010 */ unsigned long LowestPhysicalPageNumber;
  /* 0x0014 */ unsigned long HighestPhysicalPageNumber;
  /* 0x0018 */ unsigned long AllocationGranularity;
  /* 0x001c */ unsigned long MinimumUserModeAddress;
  /* 0x0020 */ unsigned long MaximumUserModeAddress;
  /* 0x0024 */ unsigned long ActiveProcessorsAffinityMask;
  /* 0x0028 */ char NumberOfProcessors;
  /* 0x0029 */ char __PADDING__[3];
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION; /* size: 0x002c */

typedef struct _SYSTEM_BIGPOOL_ENTRY
{
  union
  {
    /* 0x0000 */ void* VirtualAddress;
    /* 0x0000 */ unsigned long NonPaged : 1; /* bit position: 0 */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SizeInBytes;
  union
  {
    /* 0x0008 */ unsigned char Tag[4];
    /* 0x0008 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
} SYSTEM_BIGPOOL_ENTRY, *PSYSTEM_BIGPOOL_ENTRY; /* size: 0x000c */

typedef struct _SYSTEM_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_BIGPOOL_INFORMATION, *PSYSTEM_BIGPOOL_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION; /* size: 0x0014 */

typedef struct _SYSTEM_CALL_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long NumberOfTables;
} SYSTEM_CALL_COUNT_INFORMATION, *PSYSTEM_CALL_COUNT_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_CALL_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long TotalCalls;
  /* 0x0008 */ union _LARGE_INTEGER TimeOfCalls[1];
} SYSTEM_CALL_TIME_INFORMATION, *PSYSTEM_CALL_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long CodeIntegrityOptions;
} SYSTEM_CODEINTEGRITY_INFORMATION, *PSYSTEM_CODEINTEGRITY_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long FindAny;
  /* 0x0008 */ unsigned long FindLast;
  /* 0x000c */ unsigned long FindIdeal;
  /* 0x0010 */ unsigned long IdleAny;
  /* 0x0014 */ unsigned long IdleCurrent;
  /* 0x0018 */ unsigned long IdleLast;
  /* 0x001c */ unsigned long IdleIdeal;
  /* 0x0020 */ unsigned long PreemptAny;
  /* 0x0024 */ unsigned long PreemptCurrent;
  /* 0x0028 */ unsigned long PreemptLast;
  /* 0x002c */ unsigned long SwitchToIdle;
} SYSTEM_CONTEXT_SWITCH_INFORMATION, *PSYSTEM_CONTEXT_SWITCH_INFORMATION; /* size: 0x0030 */

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
{
  SystemCrashDumpDisable = 0,
  SystemCrashDumpReconfigure = 1,
} SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS, *PSYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION
{
  /* 0x0000 */ enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
} SYSTEM_CRASH_DUMP_STATE_INFORMATION, *PSYSTEM_CRASH_DUMP_STATE_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfDisks;
  /* 0x0004 */ unsigned long NumberOfFloppies;
  /* 0x0008 */ unsigned long NumberOfCdRoms;
  /* 0x000c */ unsigned long NumberOfTapes;
  /* 0x0010 */ unsigned long NumberOfSerialPorts;
  /* 0x0014 */ unsigned long NumberOfParallelPorts;
} SYSTEM_DEVICE_INFORMATION, *PSYSTEM_DEVICE_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION
{
  /* 0x0000 */ unsigned long Spare;
  /* 0x0004 */ unsigned long DpcQueueDepth;
  /* 0x0008 */ unsigned long MinimumDpcRate;
  /* 0x000c */ unsigned long AdjustDpcThreshold;
  /* 0x0010 */ unsigned long IdealDpcRate;
} SYSTEM_DPC_BEHAVIOR_INFORMATION, *PSYSTEM_DPC_BEHAVIOR_INFORMATION; /* size: 0x0014 */

typedef struct _SYSTEM_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentFixupCount;
  /* 0x0004 */ unsigned long ExceptionDispatchCount;
  /* 0x0008 */ unsigned long FloatingEmulationCount;
  /* 0x000c */ unsigned long ByteWordEmulationCount;
} SYSTEM_EXCEPTION_INFORMATION, *PSYSTEM_EXCEPTION_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
  /* 0x0040 */ void* StackBase;
  /* 0x0044 */ void* StackLimit;
  /* 0x0048 */ void* Win32StartAddress;
  /* 0x004c */ void* TebBase;
  /* 0x0050 */ unsigned long Reserved2;
  /* 0x0054 */ unsigned long Reserved3;
  /* 0x0058 */ unsigned long Reserved4;
  /* 0x005c */ long __PADDING__[1];
} SYSTEM_EXTENDED_THREAD_INFORMATION, *PSYSTEM_EXTENDED_THREAD_INFORMATION; /* size: 0x0060 */

typedef struct _SYSTEM_FILECACHE_INFORMATION
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long PeakSize;
  /* 0x0008 */ unsigned long PageFaultCount;
  /* 0x000c */ unsigned long MinimumWorkingSet;
  /* 0x0010 */ unsigned long MaximumWorkingSet;
  /* 0x0014 */ unsigned long CurrentSizeIncludingTransitionInPages;
  /* 0x0018 */ unsigned long PeakSizeIncludingTransitionInPages;
  /* 0x001c */ unsigned long TransitionRePurposeCount;
  /* 0x0020 */ unsigned long Flags;
} SYSTEM_FILECACHE_INFORMATION, *PSYSTEM_FILECACHE_INFORMATION; /* size: 0x0024 */

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION
{
  SystemFirmwareTable_Enumerate = 0,
  SystemFirmwareTable_Get = 1,
} SYSTEM_FIRMWARE_TABLE_ACTION, *PSYSTEM_FIRMWARE_TABLE_ACTION;

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ unsigned char Register;
  /* 0x0008 */ void* FirmwareTableHandler /* function */;
  /* 0x000c */ void* DriverObject;
} SYSTEM_FIRMWARE_TABLE_HANDLER, *PSYSTEM_FIRMWARE_TABLE_HANDLER; /* size: 0x0010 */

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
  /* 0x0008 */ unsigned long TableID;
  /* 0x000c */ unsigned long TableBufferLength;
  /* 0x0010 */ unsigned char TableBuffer[1];
  /* 0x0011 */ char __PADDING__[3];
} SYSTEM_FIRMWARE_TABLE_INFORMATION, *PSYSTEM_FIRMWARE_TABLE_INFORMATION; /* size: 0x0014 */

typedef struct _SYSTEM_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} SYSTEM_FLAGS_INFORMATION, *PSYSTEM_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DriverName;
  /* 0x0008 */ void* ImageAddress;
  /* 0x000c */ void* SectionPointer;
  /* 0x0010 */ void* EntryPoint;
  /* 0x0014 */ struct _IMAGE_EXPORT_DIRECTORY* ExportSectionPointer;
  /* 0x0018 */ unsigned long ImageLength;
} SYSTEM_GDI_DRIVER_INFORMATION, *PSYSTEM_GDI_DRIVER_INFORMATION; /* size: 0x001c */

typedef struct _SYSTEM_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfHandles;
  /* 0x0004 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION; /* size: 0x0014 */

typedef struct _SYSTEM_HANDLE_INFORMATION_EX
{
  /* 0x0000 */ unsigned long NumberOfHandles;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX; /* size: 0x0024 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ unsigned short UniqueProcessId;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned char ObjectTypeIndex;
  /* 0x0005 */ unsigned char HandleAttributes;
  /* 0x0006 */ unsigned short HandleValue;
  /* 0x0008 */ void* Object;
  /* 0x000c */ unsigned long GrantedAccess;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0010 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
{
  /* 0x0000 */ void* Object;
  /* 0x0004 */ unsigned long UniqueProcessId;
  /* 0x0008 */ unsigned long HandleValue;
  /* 0x000c */ unsigned long GrantedAccess;
  /* 0x0010 */ unsigned short CreatorBackTraceIndex;
  /* 0x0012 */ unsigned short ObjectTypeIndex;
  /* 0x0014 */ unsigned long HandleAttributes;
  /* 0x0018 */ unsigned long Reserved;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX; /* size: 0x001c */

typedef struct _SYSTEM_HIBERFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfMcbPairs;
  /* 0x0008 */ union _LARGE_INTEGER Mcb[1];
} SYSTEM_HIBERFILE_INFORMATION, *PSYSTEM_HIBERFILE_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_HOTPATCH_CODE_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long InfoSize;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long DescriptorsCount;
      /* 0x0010 */ struct _HOTPATCH_HOOK_DESCRIPTOR CodeDescriptors[1];
    } /* size: 0x0030 */ CodeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
    } /* size: 0x0004 */ KernelInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x0014 */ unsigned char PatchingFinished;
      /* 0x0015 */ char __PADDING__[1];
    } /* size: 0x000e */ UserModeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x0018 */ unsigned __int64 TargetProcess;
    } /* size: 0x0018 */ InjectionInfo;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned __int64 ParentDirectory;
        /* 0x0010 */ unsigned __int64 ObjectHandle1;
        /* 0x0018 */ unsigned __int64 ObjectHandle2;
      } /* size: 0x0018 */ AtomicSwap;
      /* 0x0020 */ long __PADDING__[6];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} SYSTEM_HOTPATCH_CODE_INFORMATION, *PSYSTEM_HOTPATCH_CODE_INFORMATION; /* size: 0x0038 */

typedef struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS
{
  /* 0x0000 */ unsigned long QueryFlags;
  /* 0x0004 */ void* ProcessHandle;
} SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS, *PSYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS; /* size: 0x0008 */

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned char HypervisorConnected;
  /* 0x0001 */ unsigned char Spare0[7];
  /* 0x0008 */ unsigned __int64 EnabledAddressSpaceEnlightenments;
} SYSTEM_HYPERVISOR_QUERY_INFORMATION, *PSYSTEM_HYPERVISOR_QUERY_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long FlagsToEnable;
  /* 0x0004 */ unsigned long FlagsToDisable;
} SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION, *PSYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_INFO
{
  union
  {
    /* 0x0000 */ unsigned long dwOemId;
    struct
    {
      /* 0x0000 */ unsigned short wProcessorArchitecture;
      /* 0x0002 */ unsigned short wReserved;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwPageSize;
  /* 0x0008 */ void* lpMinimumApplicationAddress;
  /* 0x000c */ void* lpMaximumApplicationAddress;
  /* 0x0010 */ unsigned long dwActiveProcessorMask;
  /* 0x0014 */ unsigned long dwNumberOfProcessors;
  /* 0x0018 */ unsigned long dwProcessorType;
  /* 0x001c */ unsigned long dwAllocationGranularity;
  /* 0x0020 */ unsigned short wProcessorLevel;
  /* 0x0022 */ unsigned short wProcessorRevision;
} SYSTEM_INFO, *PSYSTEM_INFO; /* size: 0x0024 */

typedef enum _SYSTEM_INFORMATION_CLASS
{
  SystemBasicInformation = 0,
  SystemProcessorInformation = 1,
  SystemPerformanceInformation = 2,
  SystemTimeOfDayInformation = 3,
  SystemPathInformation = 4,
  SystemProcessInformation = 5,
  SystemCallCountInformation = 6,
  SystemDeviceInformation = 7,
  SystemProcessorPerformanceInformation = 8,
  SystemFlagsInformation = 9,
  SystemCallTimeInformation = 10,
  SystemModuleInformation = 11,
  SystemLocksInformation = 12,
  SystemStackTraceInformation = 13,
  SystemPagedPoolInformation = 14,
  SystemNonPagedPoolInformation = 15,
  SystemHandleInformation = 16,
  SystemObjectInformation = 17,
  SystemPageFileInformation = 18,
  SystemVdmInstemulInformation = 19,
  SystemVdmBopInformation = 20,
  SystemFileCacheInformation = 21,
  SystemPoolTagInformation = 22,
  SystemInterruptInformation = 23,
  SystemDpcBehaviorInformation = 24,
  SystemFullMemoryInformation = 25,
  SystemLoadGdiDriverInformation = 26,
  SystemUnloadGdiDriverInformation = 27,
  SystemTimeAdjustmentInformation = 28,
  SystemSummaryMemoryInformation = 29,
  SystemMirrorMemoryInformation = 30,
  SystemPerformanceTraceInformation = 31,
  SystemObsolete0 = 32,
  SystemExceptionInformation = 33,
  SystemCrashDumpStateInformation = 34,
  SystemKernelDebuggerInformation = 35,
  SystemContextSwitchInformation = 36,
  SystemRegistryQuotaInformation = 37,
  SystemExtendServiceTableInformation = 38,
  SystemPrioritySeperation = 39,
  SystemVerifierAddDriverInformation = 40,
  SystemVerifierRemoveDriverInformation = 41,
  SystemProcessorIdleInformation = 42,
  SystemLegacyDriverInformation = 43,
  SystemCurrentTimeZoneInformation = 44,
  SystemLookasideInformation = 45,
  SystemTimeSlipNotification = 46,
  SystemSessionCreate = 47,
  SystemSessionDetach = 48,
  SystemSessionInformation = 49,
  SystemRangeStartInformation = 50,
  SystemVerifierInformation = 51,
  SystemVerifierThunkExtend = 52,
  SystemSessionProcessInformation = 53,
  SystemLoadGdiDriverInSystemSpace = 54,
  SystemNumaProcessorMap = 55,
  SystemPrefetcherInformation = 56,
  SystemExtendedProcessInformation = 57,
  SystemRecommendedSharedDataAlignment = 58,
  SystemComPlusPackage = 59,
  SystemNumaAvailableMemory = 60,
  SystemProcessorPowerInformation = 61,
  SystemEmulationBasicInformation = 62,
  SystemEmulationProcessorInformation = 63,
  SystemExtendedHandleInformation = 64,
  SystemLostDelayedWriteInformation = 65,
  SystemBigPoolInformation = 66,
  SystemSessionPoolTagInformation = 67,
  SystemSessionMappedViewInformation = 68,
  SystemHotpatchInformation = 69,
  SystemObjectSecurityMode = 70,
  SystemWatchdogTimerHandler = 71,
  SystemWatchdogTimerInformation = 72,
  SystemLogicalProcessorInformation = 73,
  SystemWow64SharedInformationObsolete = 74,
  SystemRegisterFirmwareTableInformationHandler = 75,
  SystemFirmwareTableInformation = 76,
  SystemModuleInformationEx = 77,
  SystemVerifierTriageInformation = 78,
  SystemSuperfetchInformation = 79,
  SystemMemoryListInformation = 80,
  SystemFileCacheInformationEx = 81,
  SystemThreadPriorityClientIdInformation = 82,
  SystemProcessorIdleCycleTimeInformation = 83,
  SystemVerifierCancellationInformation = 84,
  SystemProcessorPowerInformationEx = 85,
  SystemRefTraceInformation = 86,
  SystemSpecialPoolInformation = 87,
  SystemProcessIdInformation = 88,
  SystemErrorPortInformation = 89,
  SystemBootEnvironmentInformation = 90,
  SystemHypervisorInformation = 91,
  SystemVerifierInformationEx = 92,
  SystemTimeZoneInformation = 93,
  SystemImageFileExecutionOptionsInformation = 94,
  SystemCoverageInformation = 95,
  SystemPrefetchPatchInformation = 96,
  SystemVerifierFaultsInformation = 97,
  SystemSystemPartitionInformation = 98,
  SystemSystemDiskInformation = 99,
  SystemProcessorPerformanceDistribution = 100,
  SystemNumaProximityNodeInformation = 101,
  SystemDynamicTimeZoneInformation = 102,
  SystemCodeIntegrityInformation = 103,
  SystemProcessorMicrocodeUpdateInformation = 104,
  SystemProcessorBrandString = 105,
  SystemVirtualAddressInformation = 106,
  MaxSystemInfoClass = 107,
} SYSTEM_INFORMATION_CLASS, *PSYSTEM_INFORMATION_CLASS;

typedef struct _SYSTEM_INTERRUPT_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long DpcCount;
  /* 0x0008 */ unsigned long DpcRate;
  /* 0x000c */ unsigned long TimeIncrement;
  /* 0x0010 */ unsigned long DpcBypassCount;
  /* 0x0014 */ unsigned long ApcBypassCount;
} SYSTEM_INTERRUPT_INFORMATION, *PSYSTEM_INTERRUPT_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION
{
  /* 0x0000 */ unsigned char KernelDebuggerEnabled;
  /* 0x0001 */ unsigned char KernelDebuggerNotPresent;
} SYSTEM_KERNEL_DEBUGGER_INFORMATION, *PSYSTEM_KERNEL_DEBUGGER_INFORMATION; /* size: 0x0002 */

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION
{
  /* 0x0000 */ unsigned long VetoType;
  /* 0x0004 */ struct _UNICODE_STRING VetoList;
} SYSTEM_LEGACY_DRIVER_INFORMATION, *PSYSTEM_LEGACY_DRIVER_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned long ProcessorMask;
  /* 0x0004 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned char Flags;
    } /* size: 0x0001 */ ProcessorCore;
    struct
    {
      /* 0x0008 */ unsigned long NodeNumber;
    } /* size: 0x0004 */ NumaNode;
    /* 0x0008 */ struct _CACHE_DESCRIPTOR Cache;
    /* 0x0008 */ unsigned __int64 Reserved[2];
  }; /* size: 0x0010 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_LOOKASIDE_INFORMATION
{
  /* 0x0000 */ unsigned short CurrentDepth;
  /* 0x0002 */ unsigned short MaximumDepth;
  /* 0x0004 */ unsigned long TotalAllocates;
  /* 0x0008 */ unsigned long AllocateMisses;
  /* 0x000c */ unsigned long TotalFrees;
  /* 0x0010 */ unsigned long FreeMisses;
  /* 0x0014 */ unsigned long Type;
  /* 0x0018 */ unsigned long Tag;
  /* 0x001c */ unsigned long Size;
} SYSTEM_LOOKASIDE_INFORMATION, *PSYSTEM_LOOKASIDE_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_MANDATORY_LABEL_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE; /* size: 0x000c */

typedef enum _SYSTEM_MEMORY_LIST_COMMAND
{
  MemoryCaptureAccessedBits = 0,
  MemoryCaptureAndResetAccessedBits = 1,
  MemoryEmptyWorkingSets = 2,
  MemoryFlushModifiedList = 3,
  MemoryPurgeStandbyList = 4,
  MemoryPurgeLowPriorityStandbyList = 5,
  MemoryCommandMax = 6,
} SYSTEM_MEMORY_LIST_COMMAND, *PSYSTEM_MEMORY_LIST_COMMAND;

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long ZeroPageCount;
  /* 0x0004 */ unsigned long FreePageCount;
  /* 0x0008 */ unsigned long ModifiedPageCount;
  /* 0x000c */ unsigned long ModifiedNoWritePageCount;
  /* 0x0010 */ unsigned long BadPageCount;
  /* 0x0014 */ unsigned long PageCountByPriority[8];
  /* 0x0034 */ unsigned long RepurposedPagesByPriority[8];
} SYSTEM_MEMORY_LIST_INFORMATION, *PSYSTEM_MEMORY_LIST_INFORMATION; /* size: 0x0054 */

typedef struct _SYSTEM_NUMA_INFORMATION
{
  /* 0x0000 */ unsigned long HighestNodeNumber;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    /* 0x0008 */ unsigned __int64 ActiveProcessorsAffinityMask[16];
    /* 0x0008 */ unsigned __int64 AvailableMemory[16];
  }; /* size: 0x0080 */
} SYSTEM_NUMA_INFORMATION, *PSYSTEM_NUMA_INFORMATION; /* size: 0x0088 */

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP
{
  /* 0x0000 */ unsigned long NodeProximityId;
  /* 0x0004 */ unsigned char NodeNumber;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_NUMA_PROXIMITY_MAP, *PSYSTEM_NUMA_PROXIMITY_MAP; /* size: 0x0008 */

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfObjects;
  /* 0x0008 */ unsigned long NumberOfHandles;
  /* 0x000c */ unsigned long TypeIndex;
  /* 0x0010 */ unsigned long InvalidAttributes;
  /* 0x0014 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0024 */ unsigned long ValidAccessMask;
  /* 0x0028 */ unsigned long PoolType;
  /* 0x002c */ unsigned char SecurityRequired;
  /* 0x002d */ unsigned char WaitableObject;
  /* 0x0030 */ struct _UNICODE_STRING TypeName;
} SYSTEM_OBJECTTYPE_INFORMATION, *PSYSTEM_OBJECTTYPE_INFORMATION; /* size: 0x0038 */

typedef struct _SYSTEM_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ void* Object;
  /* 0x0008 */ void* CreatorUniqueProcess;
  /* 0x000c */ unsigned short CreatorBackTraceIndex;
  /* 0x000e */ unsigned short Flags;
  /* 0x0010 */ long PointerCount;
  /* 0x0014 */ long HandleCount;
  /* 0x0018 */ unsigned long PagedPoolCharge;
  /* 0x001c */ unsigned long NonPagedPoolCharge;
  /* 0x0020 */ void* ExclusiveProcessId;
  /* 0x0024 */ void* SecurityDescriptor;
  /* 0x0028 */ struct _OBJECT_NAME_INFORMATION NameInfo;
} SYSTEM_OBJECT_INFORMATION, *PSYSTEM_OBJECT_INFORMATION; /* size: 0x0030 */

typedef struct _SYSTEM_PAGEFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long TotalSize;
  /* 0x0008 */ unsigned long TotalInUse;
  /* 0x000c */ unsigned long PeakUsage;
  /* 0x0010 */ struct _UNICODE_STRING PageFileName;
} SYSTEM_PAGEFILE_INFORMATION, *PSYSTEM_PAGEFILE_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleProcessTime;
  /* 0x0008 */ union _LARGE_INTEGER IoReadTransferCount;
  /* 0x0010 */ union _LARGE_INTEGER IoWriteTransferCount;
  /* 0x0018 */ union _LARGE_INTEGER IoOtherTransferCount;
  /* 0x0020 */ unsigned long IoReadOperationCount;
  /* 0x0024 */ unsigned long IoWriteOperationCount;
  /* 0x0028 */ unsigned long IoOtherOperationCount;
  /* 0x002c */ unsigned long AvailablePages;
  /* 0x0030 */ unsigned long CommittedPages;
  /* 0x0034 */ unsigned long CommitLimit;
  /* 0x0038 */ unsigned long PeakCommitment;
  /* 0x003c */ unsigned long PageFaultCount;
  /* 0x0040 */ unsigned long CopyOnWriteCount;
  /* 0x0044 */ unsigned long TransitionCount;
  /* 0x0048 */ unsigned long CacheTransitionCount;
  /* 0x004c */ unsigned long DemandZeroCount;
  /* 0x0050 */ unsigned long PageReadCount;
  /* 0x0054 */ unsigned long PageReadIoCount;
  /* 0x0058 */ unsigned long CacheReadCount;
  /* 0x005c */ unsigned long CacheIoCount;
  /* 0x0060 */ unsigned long DirtyPagesWriteCount;
  /* 0x0064 */ unsigned long DirtyWriteIoCount;
  /* 0x0068 */ unsigned long MappedPagesWriteCount;
  /* 0x006c */ unsigned long MappedWriteIoCount;
  /* 0x0070 */ unsigned long PagedPoolPages;
  /* 0x0074 */ unsigned long NonPagedPoolPages;
  /* 0x0078 */ unsigned long PagedPoolAllocs;
  /* 0x007c */ unsigned long PagedPoolFrees;
  /* 0x0080 */ unsigned long NonPagedPoolAllocs;
  /* 0x0084 */ unsigned long NonPagedPoolFrees;
  /* 0x0088 */ unsigned long FreeSystemPtes;
  /* 0x008c */ unsigned long ResidentSystemCodePage;
  /* 0x0090 */ unsigned long TotalSystemDriverPages;
  /* 0x0094 */ unsigned long TotalSystemCodePages;
  /* 0x0098 */ unsigned long NonPagedPoolLookasideHits;
  /* 0x009c */ unsigned long PagedPoolLookasideHits;
  /* 0x00a0 */ unsigned long AvailablePagedPoolPages;
  /* 0x00a4 */ unsigned long ResidentSystemCachePage;
  /* 0x00a8 */ unsigned long ResidentPagedPoolPage;
  /* 0x00ac */ unsigned long ResidentSystemDriverPage;
  /* 0x00b0 */ unsigned long CcFastReadNoWait;
  /* 0x00b4 */ unsigned long CcFastReadWait;
  /* 0x00b8 */ unsigned long CcFastReadResourceMiss;
  /* 0x00bc */ unsigned long CcFastReadNotPossible;
  /* 0x00c0 */ unsigned long CcFastMdlReadNoWait;
  /* 0x00c4 */ unsigned long CcFastMdlReadWait;
  /* 0x00c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x00cc */ unsigned long CcFastMdlReadNotPossible;
  /* 0x00d0 */ unsigned long CcMapDataNoWait;
  /* 0x00d4 */ unsigned long CcMapDataWait;
  /* 0x00d8 */ unsigned long CcMapDataNoWaitMiss;
  /* 0x00dc */ unsigned long CcMapDataWaitMiss;
  /* 0x00e0 */ unsigned long CcPinMappedDataCount;
  /* 0x00e4 */ unsigned long CcPinReadNoWait;
  /* 0x00e8 */ unsigned long CcPinReadWait;
  /* 0x00ec */ unsigned long CcPinReadNoWaitMiss;
  /* 0x00f0 */ unsigned long CcPinReadWaitMiss;
  /* 0x00f4 */ unsigned long CcCopyReadNoWait;
  /* 0x00f8 */ unsigned long CcCopyReadWait;
  /* 0x00fc */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x0100 */ unsigned long CcCopyReadWaitMiss;
  /* 0x0104 */ unsigned long CcMdlReadNoWait;
  /* 0x0108 */ unsigned long CcMdlReadWait;
  /* 0x010c */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x0110 */ unsigned long CcMdlReadWaitMiss;
  /* 0x0114 */ unsigned long CcReadAheadIos;
  /* 0x0118 */ unsigned long CcLazyWriteIos;
  /* 0x011c */ unsigned long CcLazyWritePages;
  /* 0x0120 */ unsigned long CcDataFlushes;
  /* 0x0124 */ unsigned long CcDataPages;
  /* 0x0128 */ unsigned long ContextSwitches;
  /* 0x012c */ unsigned long FirstLevelTbFills;
  /* 0x0130 */ unsigned long SecondLevelTbFills;
  /* 0x0134 */ unsigned long SystemCalls;
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION; /* size: 0x0138 */

typedef struct _SYSTEM_POOLTAG
{
  union
  {
    /* 0x0000 */ unsigned char Tag[4];
    /* 0x0000 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long PagedAllocs;
  /* 0x0008 */ unsigned long PagedFrees;
  /* 0x000c */ unsigned long PagedUsed;
  /* 0x0010 */ unsigned long NonPagedAllocs;
  /* 0x0014 */ unsigned long NonPagedFrees;
  /* 0x0018 */ unsigned long NonPagedUsed;
} SYSTEM_POOLTAG, *PSYSTEM_POOLTAG; /* size: 0x001c */

typedef struct _SYSTEM_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_POOLTAG_INFORMATION, *PSYSTEM_POOLTAG_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_POOL_ENTRY
{
  /* 0x0000 */ unsigned char Allocated;
  /* 0x0001 */ unsigned char Spare0;
  /* 0x0002 */ unsigned short AllocatorBackTraceIndex;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ unsigned char Tag[4];
    /* 0x0008 */ unsigned long TagUlong;
    /* 0x0008 */ void* ProcessChargedQuota;
  }; /* size: 0x0004 */
} SYSTEM_POOL_ENTRY, *PSYSTEM_POOL_ENTRY; /* size: 0x000c */

typedef struct _SYSTEM_POOL_INFORMATION
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ void* FirstEntry;
  /* 0x0008 */ unsigned short EntryOverhead;
  /* 0x000a */ unsigned char PoolTagPresent;
  /* 0x000b */ unsigned char Spare0;
  /* 0x000c */ unsigned long NumberOfEntries;
  /* 0x0010 */ struct _SYSTEM_POOL_ENTRY Entries[1];
} SYSTEM_POOL_INFORMATION, *PSYSTEM_POOL_INFORMATION; /* size: 0x001c */

typedef struct _SYSTEM_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long MaxIdlenessAllowed;
  /* 0x0004 */ unsigned long Idleness;
  /* 0x0008 */ unsigned long TimeRemaining;
  /* 0x000c */ unsigned char CoolingMode;
  /* 0x000d */ char __PADDING__[3];
} SYSTEM_POWER_INFORMATION, *PSYSTEM_POWER_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_POWER_LOGGING_ENTRY
{
  /* 0x0000 */ unsigned long LoggingType;
  /* 0x0004 */ void* LoggingEntry;
} SYSTEM_POWER_LOGGING_ENTRY, *PSYSTEM_POWER_LOGGING_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ struct POWER_ACTION_POLICY PowerButton;
  /* 0x0010 */ struct POWER_ACTION_POLICY SleepButton;
  /* 0x001c */ struct POWER_ACTION_POLICY LidClose;
  /* 0x0028 */ enum _SYSTEM_POWER_STATE LidOpenWake;
  /* 0x002c */ unsigned long Reserved;
  /* 0x0030 */ struct POWER_ACTION_POLICY Idle;
  /* 0x003c */ unsigned long IdleTimeout;
  /* 0x0040 */ unsigned char IdleSensitivity;
  /* 0x0041 */ unsigned char DynamicThrottle;
  /* 0x0042 */ unsigned char Spare2[2];
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x004c */ enum _SYSTEM_POWER_STATE ReducedLatencySleep;
  /* 0x0050 */ unsigned long WinLogonFlags;
  /* 0x0054 */ unsigned long Spare3;
  /* 0x0058 */ unsigned long DozeS4Timeout;
  /* 0x005c */ unsigned long BroadcastCapacityResolution;
  /* 0x0060 */ struct SYSTEM_POWER_LEVEL DischargePolicy[4];
  /* 0x00c0 */ unsigned long VideoTimeout;
  /* 0x00c4 */ unsigned char VideoDimDisplay;
  /* 0x00c8 */ unsigned long VideoReserved[3];
  /* 0x00d4 */ unsigned long SpindownTimeout;
  /* 0x00d8 */ unsigned char OptimizeForPower;
  /* 0x00d9 */ unsigned char FanThrottleTolerance;
  /* 0x00da */ unsigned char ForcedThrottle;
  /* 0x00db */ unsigned char MinThrottle;
  /* 0x00dc */ struct POWER_ACTION_POLICY OverThrottled;
} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY; /* size: 0x00e8 */

typedef enum _SYSTEM_POWER_STATE
{
  PowerSystemUnspecified = 0,
  PowerSystemWorking = 1,
  PowerSystemSleeping1 = 2,
  PowerSystemSleeping2 = 3,
  PowerSystemSleeping3 = 4,
  PowerSystemHibernate = 5,
  PowerSystemShutdown = 6,
  PowerSystemMaximum = 7,
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

typedef struct _SYSTEM_POWER_STATE_CONTEXT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long TargetSystemState : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned long EffectiveSystemState : 4; /* bit position: 12 */
      /* 0x0000 */ unsigned long CurrentSystemState : 4; /* bit position: 16 */
      /* 0x0000 */ unsigned long IgnoreHibernationPath : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long PseudoTransition : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long Reserved2 : 10; /* bit position: 22 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ContextAsUlong;
  }; /* size: 0x0004 */
} SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT; /* size: 0x0004 */

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON
{
  /* 0x0000 */ unsigned char AffectedState[8];
  /* 0x0008 */ unsigned long PowerReasonCode;
  /* 0x000c */ unsigned long PowerReasonLength;
} SYSTEM_POWER_STATE_DISABLE_REASON, *PSYSTEM_POWER_STATE_DISABLE_REASON; /* size: 0x0010 */

typedef struct _SYSTEM_POWER_STATUS
{
  /* 0x0000 */ unsigned char ACLineStatus;
  /* 0x0001 */ unsigned char BatteryFlag;
  /* 0x0002 */ unsigned char BatteryLifePercent;
  /* 0x0003 */ unsigned char Reserved1;
  /* 0x0004 */ unsigned long BatteryLifeTime;
  /* 0x0008 */ unsigned long BatteryFullLifeTime;
} SYSTEM_POWER_STATUS, *PSYSTEM_POWER_STATUS; /* size: 0x000c */

typedef struct _SYSTEM_PREFETCH_OPTIONS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long LowerPriority : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualOffsets : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long TrickleIOs : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Spare0 : 5; /* bit position: 3 */
    /* 0x0000 */ unsigned long ScenarioType : 8; /* bit position: 8 */
  }; /* bitfield */
} SYSTEM_PREFETCH_OPTIONS, *PSYSTEM_PREFETCH_OPTIONS; /* size: 0x0004 */

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION
{
  /* 0x0000 */ unsigned long PrefetchPatchCount;
} SYSTEM_PREFETCH_PATCH_INFORMATION, *PSYSTEM_PREFETCH_PATCH_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_PREFETCH_STATS
{
  /* 0x0000 */ unsigned long DemandFilePageCount;
  /* 0x0004 */ unsigned long DemandFileIOCount;
  /* 0x0008 */ unsigned long TrickleFilePageCount;
  /* 0x000c */ unsigned long TrickleFileIOCount;
  /* 0x0010 */ unsigned long DemandPrivatePageCount;
  /* 0x0014 */ unsigned long DemandPrivateIOCount;
  /* 0x0018 */ unsigned long TricklePrivatePageCount;
  /* 0x001c */ unsigned long TricklePrivateIOCount;
} SYSTEM_PREFETCH_STATS, *PSYSTEM_PREFETCH_STATS; /* size: 0x0020 */

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IdleTime;
  /* 0x0008 */ unsigned __int64 C1Time;
  /* 0x0010 */ unsigned __int64 C2Time;
  /* 0x0018 */ unsigned __int64 C3Time;
  /* 0x0020 */ unsigned long C1Transitions;
  /* 0x0024 */ unsigned long C2Transitions;
  /* 0x0028 */ unsigned long C3Transitions;
  /* 0x002c */ unsigned long Padding;
} SYSTEM_PROCESSOR_IDLE_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_INFORMATION; /* size: 0x0030 */

typedef struct _SYSTEM_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long ProcessorFeatureBits;
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
} SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION, *PSYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorCount;
  /* 0x0004 */ unsigned long Offsets[1];
} SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT
{
  /* 0x0000 */ unsigned long Hits;
  /* 0x0004 */ unsigned char PercentFrequency;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT, *PSYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ long __PADDING__[1];
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION; /* size: 0x0030 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorNumber;
  /* 0x0004 */ unsigned long StateCount;
  /* 0x0008 */ struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
} SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned char CurrentFrequency;
  /* 0x0001 */ unsigned char ThermalLimitFrequency;
  /* 0x0002 */ unsigned char ConstantThrottleFrequency;
  /* 0x0003 */ unsigned char DegradedThrottleFrequency;
  /* 0x0004 */ unsigned char LastBusyFrequency;
  /* 0x0005 */ unsigned char LastC3Frequency;
  /* 0x0006 */ unsigned char LastAdjustedBusyFrequency;
  /* 0x0007 */ unsigned char ProcessorMinThrottle;
  /* 0x0008 */ unsigned char ProcessorMaxThrottle;
  /* 0x000c */ unsigned long NumberOfFrequencies;
  /* 0x0010 */ unsigned long PromotionCount;
  /* 0x0014 */ unsigned long DemotionCount;
  /* 0x0018 */ unsigned long ErrorCount;
  /* 0x001c */ unsigned long RetryCount;
  /* 0x0020 */ unsigned __int64 CurrentFrequencyTime;
  /* 0x0028 */ unsigned __int64 CurrentProcessorTime;
  /* 0x0030 */ unsigned __int64 CurrentProcessorIdleTime;
  /* 0x0038 */ unsigned __int64 LastProcessorTime;
  /* 0x0040 */ unsigned __int64 LastProcessorIdleTime;
} SYSTEM_PROCESSOR_POWER_INFORMATION, *PSYSTEM_PROCESSOR_POWER_INFORMATION; /* size: 0x0048 */

typedef struct _SYSTEM_PROCESS_ID_INFORMATION
{
  /* 0x0000 */ void* ProcessId;
  /* 0x0004 */ struct _UNICODE_STRING ImageName;
} SYSTEM_PROCESS_ID_INFORMATION, *PSYSTEM_PROCESS_ID_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfThreads;
  /* 0x0008 */ union _LARGE_INTEGER WorkingSetPrivateSize;
  /* 0x0010 */ union _LARGE_INTEGER SpareLi2;
  /* 0x0018 */ union _LARGE_INTEGER SpareLi3;
  /* 0x0020 */ union _LARGE_INTEGER CreateTime;
  /* 0x0028 */ union _LARGE_INTEGER UserTime;
  /* 0x0030 */ union _LARGE_INTEGER KernelTime;
  /* 0x0038 */ struct _UNICODE_STRING ImageName;
  /* 0x0040 */ long BasePriority;
  /* 0x0044 */ void* UniqueProcessId;
  /* 0x0048 */ void* InheritedFromUniqueProcessId;
  /* 0x004c */ unsigned long HandleCount;
  /* 0x0050 */ unsigned long SessionId;
  /* 0x0054 */ unsigned long UniqueProcessKey;
  /* 0x0058 */ unsigned long PeakVirtualSize;
  /* 0x005c */ unsigned long VirtualSize;
  /* 0x0060 */ unsigned long PageFaultCount;
  /* 0x0064 */ unsigned long PeakWorkingSetSize;
  /* 0x0068 */ unsigned long WorkingSetSize;
  /* 0x006c */ unsigned long QuotaPeakPagedPoolUsage;
  /* 0x0070 */ unsigned long QuotaPagedPoolUsage;
  /* 0x0074 */ unsigned long QuotaPeakNonPagedPoolUsage;
  /* 0x0078 */ unsigned long QuotaNonPagedPoolUsage;
  /* 0x007c */ unsigned long PagefileUsage;
  /* 0x0080 */ unsigned long PeakPagefileUsage;
  /* 0x0084 */ unsigned long PrivatePageCount;
  /* 0x0088 */ union _LARGE_INTEGER ReadOperationCount;
  /* 0x0090 */ union _LARGE_INTEGER WriteOperationCount;
  /* 0x0098 */ union _LARGE_INTEGER OtherOperationCount;
  /* 0x00a0 */ union _LARGE_INTEGER ReadTransferCount;
  /* 0x00a8 */ union _LARGE_INTEGER WriteTransferCount;
  /* 0x00b0 */ union _LARGE_INTEGER OtherTransferCount;
} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION; /* size: 0x00b8 */

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned long TimeIncrement;
  /* 0x0008 */ unsigned char Enable;
  /* 0x0009 */ char __PADDING__[3];
} SYSTEM_QUERY_TIME_ADJUST_INFORMATION, *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_REF_TRACE_INFORMATION
{
  /* 0x0000 */ unsigned char TraceEnable;
  /* 0x0001 */ unsigned char TracePermanent;
  /* 0x0004 */ struct _UNICODE_STRING TraceProcessName;
  /* 0x000c */ struct _UNICODE_STRING TracePoolTags;
} SYSTEM_REF_TRACE_INFORMATION, *PSYSTEM_REF_TRACE_INFORMATION; /* size: 0x0014 */

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long RegistryQuotaAllowed;
  /* 0x0004 */ unsigned long RegistryQuotaUsed;
  /* 0x0008 */ unsigned long PagedPoolSize;
} SYSTEM_REGISTRY_QUOTA_INFORMATION, *PSYSTEM_REGISTRY_QUOTA_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SessionId;
  /* 0x0008 */ unsigned long ViewFailures;
  /* 0x000c */ unsigned long NumberOfBytesAvailable;
  /* 0x0010 */ unsigned long NumberOfBytesAvailableContiguous;
} SYSTEM_SESSION_MAPPED_VIEW_INFORMATION, *PSYSTEM_SESSION_MAPPED_VIEW_INFORMATION; /* size: 0x0014 */

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SessionId;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_SESSION_POOLTAG_INFORMATION, *PSYSTEM_SESSION_POOLTAG_INFORMATION; /* size: 0x0028 */

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long SizeOfBuf;
  /* 0x0008 */ void* Buffer;
} SYSTEM_SESSION_PROCESS_INFORMATION, *PSYSTEM_SESSION_PROCESS_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned char Enable;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_SET_TIME_ADJUST_INFORMATION, *PSYSTEM_SET_TIME_ADJUST_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION
{
  /* 0x0000 */ unsigned long PoolTag;
  /* 0x0004 */ unsigned long Flags;
} SYSTEM_SPECIAL_POOL_INFORMATION, *PSYSTEM_SPECIAL_POOL_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemDisk;
} SYSTEM_SYSTEM_DISK_INFORMATION, *PSYSTEM_SYSTEM_DISK_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemPartition;
} SYSTEM_SYSTEM_PARTITION_INFORMATION, *PSYSTEM_SYSTEM_PARTITION_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
  /* 0x0008 */ long Priority;
} SYSTEM_THREAD_CID_PRIORITY_INFORMATION, *PSYSTEM_THREAD_CID_PRIORITY_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER KernelTime;
  /* 0x0008 */ union _LARGE_INTEGER UserTime;
  /* 0x0010 */ union _LARGE_INTEGER CreateTime;
  /* 0x0018 */ unsigned long WaitTime;
  /* 0x001c */ void* StartAddress;
  /* 0x0020 */ struct _CLIENT_ID ClientId;
  /* 0x0028 */ long Priority;
  /* 0x002c */ long BasePriority;
  /* 0x0030 */ unsigned long ContextSwitches;
  /* 0x0034 */ unsigned long ThreadState;
  /* 0x0038 */ unsigned long WaitReason;
  /* 0x003c */ long __PADDING__[1];
} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION; /* size: 0x0040 */

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER BootTime;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTime;
  /* 0x0010 */ union _LARGE_INTEGER TimeZoneBias;
  /* 0x0018 */ unsigned long TimeZoneId;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ unsigned __int64 BootTimeBias;
  /* 0x0028 */ unsigned __int64 SleepTimeBias;
} SYSTEM_TIMEOFDAY_INFORMATION, *PSYSTEM_TIMEOFDAY_INFORMATION; /* size: 0x0030 */

typedef struct _SYSTEM_VA_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long VirtualSize;
  /* 0x0004 */ unsigned long VirtualPeak;
  /* 0x0008 */ unsigned long VirtualLimit;
  /* 0x000c */ unsigned long AllocationFailures;
} SYSTEM_VA_LIST_INFORMATION, *PSYSTEM_VA_LIST_INFORMATION; /* size: 0x0010 */

typedef enum _SYSTEM_VA_TYPE
{
  SystemVaTypeAll = 0,
  SystemVaTypeNonPagedPool = 1,
  SystemVaTypePagedPool = 2,
  SystemVaTypeSystemCache = 3,
  SystemVaTypeSystemPtes = 4,
  SystemVaTypeSessionSpace = 5,
  SystemVaTypeMax = 6,
} SYSTEM_VA_TYPE, *PSYSTEM_VA_TYPE;

typedef struct _SYSTEM_VDM_INSTEMUL_INFO
{
  /* 0x0000 */ unsigned long SegmentNotPresent;
  /* 0x0004 */ unsigned long VdmOpcode0F;
  /* 0x0008 */ unsigned long OpcodeESPrefix;
  /* 0x000c */ unsigned long OpcodeCSPrefix;
  /* 0x0010 */ unsigned long OpcodeSSPrefix;
  /* 0x0014 */ unsigned long OpcodeDSPrefix;
  /* 0x0018 */ unsigned long OpcodeFSPrefix;
  /* 0x001c */ unsigned long OpcodeGSPrefix;
  /* 0x0020 */ unsigned long OpcodeOPER32Prefix;
  /* 0x0024 */ unsigned long OpcodeADDR32Prefix;
  /* 0x0028 */ unsigned long OpcodeINSB;
  /* 0x002c */ unsigned long OpcodeINSW;
  /* 0x0030 */ unsigned long OpcodeOUTSB;
  /* 0x0034 */ unsigned long OpcodeOUTSW;
  /* 0x0038 */ unsigned long OpcodePUSHF;
  /* 0x003c */ unsigned long OpcodePOPF;
  /* 0x0040 */ unsigned long OpcodeINTnn;
  /* 0x0044 */ unsigned long OpcodeINTO;
  /* 0x0048 */ unsigned long OpcodeIRET;
  /* 0x004c */ unsigned long OpcodeINBimm;
  /* 0x0050 */ unsigned long OpcodeINWimm;
  /* 0x0054 */ unsigned long OpcodeOUTBimm;
  /* 0x0058 */ unsigned long OpcodeOUTWimm;
  /* 0x005c */ unsigned long OpcodeINB;
  /* 0x0060 */ unsigned long OpcodeINW;
  /* 0x0064 */ unsigned long OpcodeOUTB;
  /* 0x0068 */ unsigned long OpcodeOUTW;
  /* 0x006c */ unsigned long OpcodeLOCKPrefix;
  /* 0x0070 */ unsigned long OpcodeREPNEPrefix;
  /* 0x0074 */ unsigned long OpcodeREPPrefix;
  /* 0x0078 */ unsigned long OpcodeHLT;
  /* 0x007c */ unsigned long OpcodeCLI;
  /* 0x0080 */ unsigned long OpcodeSTI;
  /* 0x0084 */ unsigned long BopCount;
} SYSTEM_VDM_INSTEMUL_INFO, *PSYSTEM_VDM_INSTEMUL_INFO; /* size: 0x0088 */

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION
{
  /* 0x0000 */ unsigned long CancelProbability;
  /* 0x0004 */ unsigned long CancelThreshold;
  /* 0x0008 */ unsigned long CompletionThreshold;
  /* 0x000c */ unsigned long CancellationVerifierDisabled;
  /* 0x0010 */ unsigned long AvailableIssues;
  /* 0x0014 */ struct _SYSTEM_VERIFIER_ISSUE Issues[128];
} SYSTEM_VERIFIER_CANCELLATION_INFORMATION, *PSYSTEM_VERIFIER_CANCELLATION_INFORMATION; /* size: 0x0814 */

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION
{
  /* 0x0000 */ unsigned long Probability;
  /* 0x0004 */ unsigned long MaxProbability;
  /* 0x0008 */ struct _UNICODE_STRING PoolTags;
  /* 0x0010 */ struct _UNICODE_STRING Applications;
} SYSTEM_VERIFIER_FAULTS_INFORMATION, *PSYSTEM_VERIFIER_FAULTS_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_VERIFIER_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Level;
  /* 0x0008 */ struct _UNICODE_STRING DriverName;
  /* 0x0010 */ unsigned long RaiseIrqls;
  /* 0x0014 */ unsigned long AcquireSpinLocks;
  /* 0x0018 */ unsigned long SynchronizeExecutions;
  /* 0x001c */ unsigned long AllocationsAttempted;
  /* 0x0020 */ unsigned long AllocationsSucceeded;
  /* 0x0024 */ unsigned long AllocationsSucceededSpecialPool;
  /* 0x0028 */ unsigned long AllocationsWithNoTag;
  /* 0x002c */ unsigned long TrimRequests;
  /* 0x0030 */ unsigned long Trims;
  /* 0x0034 */ unsigned long AllocationsFailed;
  /* 0x0038 */ unsigned long AllocationsFailedDeliberately;
  /* 0x003c */ unsigned long Loads;
  /* 0x0040 */ unsigned long Unloads;
  /* 0x0044 */ unsigned long UnTrackedPool;
  /* 0x0048 */ unsigned long CurrentPagedPoolAllocations;
  /* 0x004c */ unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0050 */ unsigned long PeakPagedPoolAllocations;
  /* 0x0054 */ unsigned long PeakNonPagedPoolAllocations;
  /* 0x0058 */ unsigned long PagedPoolUsageInBytes;
  /* 0x005c */ unsigned long NonPagedPoolUsageInBytes;
  /* 0x0060 */ unsigned long PeakPagedPoolUsageInBytes;
  /* 0x0064 */ unsigned long PeakNonPagedPoolUsageInBytes;
} SYSTEM_VERIFIER_INFORMATION, *PSYSTEM_VERIFIER_INFORMATION; /* size: 0x0068 */

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX
{
  /* 0x0000 */ unsigned long VerifyMode;
  /* 0x0004 */ unsigned long OptionChanges;
  /* 0x0008 */ struct _UNICODE_STRING PreviousBucketName;
  /* 0x0010 */ unsigned long Reserved[4];
} SYSTEM_VERIFIER_INFORMATION_EX, *PSYSTEM_VERIFIER_INFORMATION_EX; /* size: 0x0020 */

typedef struct _SYSTEM_VERIFIER_ISSUE
{
  /* 0x0000 */ unsigned long IssueType;
  /* 0x0004 */ void* Address;
  /* 0x0008 */ unsigned long Parameters[2];
} SYSTEM_VERIFIER_ISSUE, *PSYSTEM_VERIFIER_ISSUE; /* size: 0x0010 */

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION
{
  /* 0x0000 */ unsigned long ActionTaken;
  /* 0x0004 */ unsigned long CrashData[5];
  /* 0x0018 */ unsigned long VerifierMode;
  /* 0x001c */ unsigned long VerifierFlags;
  /* 0x0020 */ wchar_t VerifierTargets[256];
} SYSTEM_VERIFIER_TRIAGE_INFORMATION, *PSYSTEM_VERIFIER_TRIAGE_INFORMATION; /* size: 0x0220 */

typedef struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION
{
  /* 0x0000 */ void* WdHandler /* function */;
  /* 0x0004 */ void* Context;
} SYSTEM_WATCHDOG_HANDLER_INFORMATION, *PSYSTEM_WATCHDOG_HANDLER_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION
{
  /* 0x0000 */ enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
  /* 0x0004 */ unsigned long DataValue;
} SYSTEM_WATCHDOG_TIMER_INFORMATION, *PSYSTEM_WATCHDOG_TIMER_INFORMATION; /* size: 0x0008 */

typedef enum _SecurityOptionsBitness
{
  CurrentBitness = 0,
  Wow6432Bitness = 1,
  Wow6464Bitness = 2,
} SecurityOptionsBitness, *PSecurityOptionsBitness;

typedef enum _SecurityOptionsDisposition
{
  ACCESS_DENIED_FOR_ACTIVATION_VIA_RESTRICTION = 1,
  ACCESS_DENIED_FOR_LAUNCH_VIA_RESTRICTION = 2,
  ACCESS_DENIED_FOR_ACTIVATION_VIA_PERMISSION = 4,
  ACCESS_DENIED_FOR_LAUNCH_VIA_PERMISSION = 8,
  ACCESS_DENIED_FOR_CALL_VIA_RESTRICTION = 16,
  ACCESS_DENIED_FOR_CALL_VIA_PERMISSION = 32,
  ACCESS_DENIED_VIA_DEFAULTPERMISSION = 64,
} SecurityOptionsDisposition, *PSecurityOptionsDisposition;

typedef enum _TABLE_SEARCH_RESULT
{
  TableEmptyTree = 0,
  TableFoundNode = 1,
  TableInsertAsLeft = 2,
  TableInsertAsRight = 3,
} TABLE_SEARCH_RESULT, *PTABLE_SEARCH_RESULT;

typedef struct _TAPE_CREATE_PARTITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
} TAPE_CREATE_PARTITION, *PTAPE_CREATE_PARTITION; /* size: 0x000c */

typedef enum _TAPE_DRIVE_PROBLEM_TYPE
{
  TapeDriveProblemNone = 0,
  TapeDriveReadWriteWarning = 1,
  TapeDriveReadWriteError = 2,
  TapeDriveReadWarning = 3,
  TapeDriveWriteWarning = 4,
  TapeDriveReadError = 5,
  TapeDriveWriteError = 6,
  TapeDriveHardwareError = 7,
  TapeDriveUnsupportedMedia = 8,
  TapeDriveScsiConnectionError = 9,
  TapeDriveTimetoClean = 10,
  TapeDriveCleanDriveNow = 11,
  TapeDriveMediaLifeExpired = 12,
  TapeDriveSnappedTape = 13,
} TAPE_DRIVE_PROBLEM_TYPE, *PTAPE_DRIVE_PROBLEM_TYPE;

typedef struct _TAPE_ERASE
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_ERASE, *PTAPE_ERASE; /* size: 0x0008 */

typedef struct _TAPE_GET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long DefaultBlockSize;
  /* 0x0008 */ unsigned long MaximumBlockSize;
  /* 0x000c */ unsigned long MinimumBlockSize;
  /* 0x0010 */ unsigned long MaximumPartitionCount;
  /* 0x0014 */ unsigned long FeaturesLow;
  /* 0x0018 */ unsigned long FeaturesHigh;
  /* 0x001c */ unsigned long EOTWarningZoneSize;
} TAPE_GET_DRIVE_PARAMETERS, *PTAPE_GET_DRIVE_PARAMETERS; /* size: 0x0020 */

typedef struct _TAPE_GET_MEDIA_PARAMETERS
{
  /* 0x0000 */ union _LARGE_INTEGER Capacity;
  /* 0x0008 */ union _LARGE_INTEGER Remaining;
  /* 0x0010 */ unsigned long BlockSize;
  /* 0x0014 */ unsigned long PartitionCount;
  /* 0x0018 */ unsigned char WriteProtected;
  /* 0x0019 */ char __PADDING__[7];
} TAPE_GET_MEDIA_PARAMETERS, *PTAPE_GET_MEDIA_PARAMETERS; /* size: 0x0020 */

typedef struct _TAPE_GET_POSITION
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
} TAPE_GET_POSITION, *PTAPE_GET_POSITION; /* size: 0x0010 */

typedef struct _TAPE_PREPARE
{
  /* 0x0000 */ unsigned long Operation;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_PREPARE, *PTAPE_PREPARE; /* size: 0x0008 */

typedef struct _TAPE_SET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long EOTWarningZoneSize;
} TAPE_SET_DRIVE_PARAMETERS, *PTAPE_SET_DRIVE_PARAMETERS; /* size: 0x0008 */

typedef struct _TAPE_SET_MEDIA_PARAMETERS
{
  /* 0x0000 */ unsigned long BlockSize;
} TAPE_SET_MEDIA_PARAMETERS, *PTAPE_SET_MEDIA_PARAMETERS; /* size: 0x0004 */

typedef struct _TAPE_SET_POSITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
  /* 0x0010 */ unsigned char Immediate;
  /* 0x0011 */ char __PADDING__[7];
} TAPE_SET_POSITION, *PTAPE_SET_POSITION; /* size: 0x0018 */

typedef struct _TAPE_WMI_OPERATIONS
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long DataBufferSize;
  /* 0x0008 */ void* DataBuffer;
} TAPE_WMI_OPERATIONS, *PTAPE_WMI_OPERATIONS; /* size: 0x000c */

typedef struct _TAPE_WRITE_MARKS
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned char Immediate;
  /* 0x0009 */ char __PADDING__[3];
} TAPE_WRITE_MARKS, *PTAPE_WRITE_MARKS; /* size: 0x000c */

typedef struct _TEB
{
  /* 0x0000 */ struct _NT_TIB NtTib;
  /* 0x001c */ void* EnvironmentPointer;
  /* 0x0020 */ struct _CLIENT_ID ClientId;
  /* 0x0028 */ void* ActiveRpcHandle;
  /* 0x002c */ void* ThreadLocalStoragePointer;
  /* 0x0030 */ struct _PEB* ProcessEnvironmentBlock;
  /* 0x0034 */ unsigned long LastErrorValue;
  /* 0x0038 */ unsigned long CountOfOwnedCriticalSections;
  /* 0x003c */ void* CsrClientThread;
  /* 0x0040 */ void* Win32ThreadInfo;
  /* 0x0044 */ unsigned long User32Reserved[26];
  /* 0x00ac */ unsigned long UserReserved[5];
  /* 0x00c0 */ void* WOW32Reserved;
  /* 0x00c4 */ unsigned long CurrentLocale;
  /* 0x00c8 */ unsigned long FpSoftwareStatusRegister;
  /* 0x00cc */ void* SystemReserved1[54];
  /* 0x01a4 */ long ExceptionCode;
  /* 0x01a8 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x01ac */ unsigned char SpareBytes1[36];
  /* 0x01d0 */ unsigned long TxFsContext;
  /* 0x01d4 */ struct _GDI_TEB_BATCH GdiTebBatch;
  /* 0x06b4 */ struct _CLIENT_ID RealClientId;
  /* 0x06bc */ void* GdiCachedProcessHandle;
  /* 0x06c0 */ unsigned long GdiClientPID;
  /* 0x06c4 */ unsigned long GdiClientTID;
  /* 0x06c8 */ void* GdiThreadLocalInfo;
  /* 0x06cc */ unsigned long Win32ClientInfo[62];
  /* 0x07c4 */ void* glDispatchTable[233];
  /* 0x0b68 */ unsigned long glReserved1[29];
  /* 0x0bdc */ void* glReserved2;
  /* 0x0be0 */ void* glSectionInfo;
  /* 0x0be4 */ void* glSection;
  /* 0x0be8 */ void* glTable;
  /* 0x0bec */ void* glCurrentRC;
  /* 0x0bf0 */ void* glContext;
  /* 0x0bf4 */ unsigned long LastStatusValue;
  /* 0x0bf8 */ struct _UNICODE_STRING StaticUnicodeString;
  /* 0x0c00 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x0e0c */ void* DeallocationStack;
  /* 0x0e10 */ void* TlsSlots[64];
  /* 0x0f10 */ struct _LIST_ENTRY TlsLinks;
  /* 0x0f18 */ void* Vdm;
  /* 0x0f1c */ void* ReservedForNtRpc;
  /* 0x0f20 */ void* DbgSsReserved[2];
  /* 0x0f28 */ unsigned long HardErrorMode;
  /* 0x0f2c */ void* Instrumentation[9];
  /* 0x0f50 */ struct _GUID ActivityId;
  /* 0x0f60 */ void* SubProcessTag;
  /* 0x0f64 */ void* EtwLocalData;
  /* 0x0f68 */ void* EtwTraceData;
  /* 0x0f6c */ void* WinSockData;
  /* 0x0f70 */ unsigned long GdiBatchCount;
  /* 0x0f74 */ unsigned char SpareBool0;
  /* 0x0f75 */ unsigned char SpareBool1;
  /* 0x0f76 */ unsigned char SpareBool2;
  /* 0x0f77 */ unsigned char IdealProcessor;
  /* 0x0f78 */ unsigned long GuaranteedStackBytes;
  /* 0x0f7c */ void* ReservedForPerf;
  /* 0x0f80 */ void* ReservedForOle;
  /* 0x0f84 */ unsigned long WaitingOnLoaderLock;
  /* 0x0f88 */ void* SavedPriorityState;
  /* 0x0f8c */ unsigned long SoftPatchPtr1;
  /* 0x0f90 */ void* ThreadPoolData;
  /* 0x0f94 */ void** TlsExpansionSlots;
  /* 0x0f98 */ unsigned long ImpersonationLocale;
  /* 0x0f9c */ unsigned long IsImpersonating;
  /* 0x0fa0 */ void* NlsCache;
  /* 0x0fa4 */ void* pShimData;
  /* 0x0fa8 */ unsigned long HeapVirtualAffinity;
  /* 0x0fac */ void* CurrentTransactionHandle;
  /* 0x0fb0 */ struct _TEB_ACTIVE_FRAME* ActiveFrame;
  /* 0x0fb4 */ void* FlsData;
  /* 0x0fb8 */ void* PreferredLanguages;
  /* 0x0fbc */ void* UserPrefLanguages;
  /* 0x0fc0 */ void* MergedPrefLanguages;
  /* 0x0fc4 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x0fc8 */ volatile unsigned short CrossTebFlags;
    /* 0x0fc8 */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0fca */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x0fca */ unsigned short DbgSafeThunkCall : 1; /* bit position: 0 */
      /* 0x0fca */ unsigned short DbgInDebugPrint : 1; /* bit position: 1 */
      /* 0x0fca */ unsigned short DbgHasFiberData : 1; /* bit position: 2 */
      /* 0x0fca */ unsigned short DbgSkipThreadAttach : 1; /* bit position: 3 */
      /* 0x0fca */ unsigned short DbgWerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x0fca */ unsigned short DbgRanProcessInit : 1; /* bit position: 5 */
      /* 0x0fca */ unsigned short DbgClonedThread : 1; /* bit position: 6 */
      /* 0x0fca */ unsigned short DbgSuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x0fca */ unsigned short RtlDisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x0fca */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x0fca */ unsigned short SpareSameTebBits : 6; /* bit position: 10 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x0fcc */ void* TxnScopeEnterCallback;
  /* 0x0fd0 */ void* TxnScopeExitCallback;
  /* 0x0fd4 */ void* TxnScopeContext;
  /* 0x0fd8 */ unsigned long LockCount;
  /* 0x0fdc */ unsigned long ProcessRundown;
  /* 0x0fe0 */ unsigned __int64 LastSwitchTime;
  /* 0x0fe8 */ unsigned __int64 TotalSwitchOutTime;
  /* 0x0ff0 */ union _LARGE_INTEGER WaitReasonBitMap;
} TEB, *PTEB; /* size: 0x0ff8 */

typedef struct _TEB_ACTIVE_FRAME
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _TEB_ACTIVE_FRAME* Previous;
  /* 0x0008 */ const struct _TEB_ACTIVE_FRAME_CONTEXT* Context;
} TEB_ACTIVE_FRAME, *PTEB_ACTIVE_FRAME; /* size: 0x000c */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ const char* FrameName;
} TEB_ACTIVE_FRAME_CONTEXT, *PTEB_ACTIVE_FRAME_CONTEXT; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
  /* 0x0008 */ const char* SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX, *PTEB_ACTIVE_FRAME_CONTEXT_EX; /* size: 0x000c */

typedef struct _TEB_ACTIVE_FRAME_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME BasicFrame;
  /* 0x000c */ void* ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX, *PTEB_ACTIVE_FRAME_EX; /* size: 0x0010 */

typedef enum _THDTYPE
{
  THDTYPE_BLOCKMESSAGES = 0,
  THDTYPE_PROCESSMESSAGES = 1,
} THDTYPE, *PTHDTYPE;

typedef enum _THREADINFOCLASS
{
  ThreadBasicInformation = 0,
  ThreadTimes = 1,
  ThreadPriority = 2,
  ThreadBasePriority = 3,
  ThreadAffinityMask = 4,
  ThreadImpersonationToken = 5,
  ThreadDescriptorTableEntry = 6,
  ThreadEnableAlignmentFaultFixup = 7,
  ThreadEventPair_Reusable = 8,
  ThreadQuerySetWin32StartAddress = 9,
  ThreadZeroTlsCell = 10,
  ThreadPerformanceCount = 11,
  ThreadAmILastThread = 12,
  ThreadIdealProcessor = 13,
  ThreadPriorityBoost = 14,
  ThreadSetTlsArrayAddress = 15,
  ThreadIsIoPending = 16,
  ThreadHideFromDebugger = 17,
  ThreadBreakOnTermination = 18,
  ThreadSwitchLegacyState = 19,
  ThreadIsTerminated = 20,
  ThreadLastSystemCall = 21,
  ThreadIoPriority = 22,
  ThreadCycleTime = 23,
  ThreadPagePriority = 24,
  ThreadActualBasePriority = 25,
  ThreadTebInformation = 26,
  ThreadCSwitchMon = 27,
  ThreadCSwitchPmu = 28,
  MaxThreadInfoClass = 29,
} THREADINFOCLASS, *PTHREADINFOCLASS;

typedef struct _THREAD_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ struct _TEB* TebBaseAddress;
  /* 0x0008 */ struct _CLIENT_ID ClientId;
  /* 0x0010 */ unsigned long AffinityMask;
  /* 0x0014 */ long Priority;
  /* 0x0018 */ long BasePriority;
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION; /* size: 0x001c */

typedef struct _THREAD_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} THREAD_CYCLE_TIME_INFORMATION, *PTHREAD_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _THREAD_LAST_SYSCALL_INFORMATION
{
  /* 0x0000 */ void* FirstArgument;
  /* 0x0004 */ unsigned short SystemCallNumber;
  /* 0x0006 */ char __PADDING__[2];
} THREAD_LAST_SYSCALL_INFORMATION, *PTHREAD_LAST_SYSCALL_INFORMATION; /* size: 0x0008 */

typedef struct _THREAD_TEB_INFORMATION
{
  /* 0x0000 */ void* TebInformation;
  /* 0x0004 */ unsigned long TebOffset;
  /* 0x0008 */ unsigned long BytesToRead;
} THREAD_TEB_INFORMATION, *PTHREAD_TEB_INFORMATION; /* size: 0x000c */

typedef struct _THREAD_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  union
  {
    /* 0x0004 */ void* NewTlsData;
    /* 0x0004 */ void* OldTlsData;
  }; /* size: 0x0004 */
  /* 0x0008 */ void* ThreadId;
} THREAD_TLS_INFORMATION, *PTHREAD_TLS_INFORMATION; /* size: 0x000c */

typedef enum _THREAD_WRITE_FLAGS
{
  ThreadWriteThread = 1,
  ThreadWriteStack = 2,
  ThreadWriteContext = 4,
  ThreadWriteBackingStore = 8,
  ThreadWriteInstructionWindow = 16,
  ThreadWriteThreadData = 32,
  ThreadWriteThreadInfo = 64,
} THREAD_WRITE_FLAGS, *PTHREAD_WRITE_FLAGS;

typedef struct _TIMER_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER RemainingTime;
  /* 0x0008 */ unsigned char TimerState;
  /* 0x0009 */ char __PADDING__[7];
} TIMER_BASIC_INFORMATION, *PTIMER_BASIC_INFORMATION; /* size: 0x0010 */

typedef enum _TIMER_INFORMATION_CLASS
{
  TimerBasicInformation = 0,
} TIMER_INFORMATION_CLASS, *PTIMER_INFORMATION_CLASS;

typedef enum _TIMER_TYPE
{
  NotificationTimer = 0,
  SynchronizationTimer = 1,
} TIMER_TYPE, *PTIMER_TYPE;

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} TIME_DYNAMIC_ZONE_INFORMATION, *PTIME_DYNAMIC_ZONE_INFORMATION; /* size: 0x01b0 */

typedef struct _TIME_FIELDS
{
  /* 0x0000 */ short Year;
  /* 0x0002 */ short Month;
  /* 0x0004 */ short Day;
  /* 0x0006 */ short Hour;
  /* 0x0008 */ short Minute;
  /* 0x000a */ short Second;
  /* 0x000c */ short Milliseconds;
  /* 0x000e */ short Weekday;
} TIME_FIELDS, *PTIME_FIELDS; /* size: 0x0010 */

typedef struct _TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
} TIME_ZONE_INFORMATION, *PTIME_ZONE_INFORMATION; /* size: 0x00ac */

typedef struct _TI_FINDCHILDREN_PARAMS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Start;
  /* 0x0008 */ unsigned long ChildId[1];
} TI_FINDCHILDREN_PARAMS, *PTI_FINDCHILDREN_PARAMS; /* size: 0x000c */

typedef struct _TOKEN_ACCESS_INFORMATION
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES_HASH* SidHash;
  /* 0x0004 */ struct _SID_AND_ATTRIBUTES_HASH* RestrictedSidHash;
  /* 0x0008 */ struct _TOKEN_PRIVILEGES* Privileges;
  /* 0x000c */ struct _LUID AuthenticationId;
  /* 0x0014 */ enum _TOKEN_TYPE TokenType;
  /* 0x0018 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x001c */ struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
  /* 0x0020 */ unsigned long Flags;
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION; /* size: 0x0024 */

typedef struct _TOKEN_AUDIT_POLICY
{
  /* 0x0000 */ unsigned char PerUserPolicy[27];
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY; /* size: 0x001b */

typedef struct _TOKEN_CONTROL
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
  /* 0x0018 */ struct _TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL, *PTOKEN_CONTROL; /* size: 0x0028 */

typedef struct _TOKEN_DEFAULT_DACL
{
  /* 0x0000 */ struct _ACL* DefaultDacl;
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL; /* size: 0x0004 */

typedef struct _TOKEN_ELEVATION
{
  /* 0x0000 */ unsigned long TokenIsElevated;
} TOKEN_ELEVATION, *PTOKEN_ELEVATION; /* size: 0x0004 */

typedef enum _TOKEN_ELEVATION_TYPE
{
  TokenElevationTypeDefault = 1,
  TokenElevationTypeFull = 2,
  TokenElevationTypeLimited = 3,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE;

typedef struct _TOKEN_GROUPS
{
  /* 0x0000 */ unsigned long GroupCount;
  /* 0x0004 */ struct _SID_AND_ATTRIBUTES Groups[1];
} TOKEN_GROUPS, *PTOKEN_GROUPS; /* size: 0x000c */

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Sids;
  /* 0x000c */ unsigned long RestrictedSidCount;
  /* 0x0010 */ unsigned long RestrictedSidLength;
  /* 0x0014 */ struct _SID_AND_ATTRIBUTES* RestrictedSids;
  /* 0x0018 */ unsigned long PrivilegeCount;
  /* 0x001c */ unsigned long PrivilegeLength;
  /* 0x0020 */ struct _LUID_AND_ATTRIBUTES* Privileges;
  /* 0x0024 */ struct _LUID AuthenticationId;
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES; /* size: 0x002c */

typedef enum _TOKEN_INFORMATION_CLASS
{
  TokenUser = 1,
  TokenGroups = 2,
  TokenPrivileges = 3,
  TokenOwner = 4,
  TokenPrimaryGroup = 5,
  TokenDefaultDacl = 6,
  TokenSource = 7,
  TokenType = 8,
  TokenImpersonationLevel = 9,
  TokenStatistics = 10,
  TokenRestrictedSids = 11,
  TokenSessionId = 12,
  TokenGroupsAndPrivileges = 13,
  TokenSessionReference = 14,
  TokenSandBoxInert = 15,
  TokenAuditPolicy = 16,
  TokenOrigin = 17,
  TokenElevationType = 18,
  TokenLinkedToken = 19,
  TokenElevation = 20,
  TokenHasRestrictions = 21,
  TokenAccessInformation = 22,
  TokenVirtualizationAllowed = 23,
  TokenVirtualizationEnabled = 24,
  TokenIntegrityLevel = 25,
  TokenUIAccess = 26,
  TokenMandatoryPolicy = 27,
  TokenLogonSid = 28,
  MaxTokenInfoClass = 29,
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS;

typedef struct _TOKEN_LINKED_TOKEN
{
  /* 0x0000 */ void* LinkedToken;
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN; /* size: 0x0004 */

typedef struct _TOKEN_MANDATORY_LABEL
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES Label;
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL; /* size: 0x0008 */

typedef struct _TOKEN_MANDATORY_POLICY
{
  /* 0x0000 */ unsigned long Policy;
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY; /* size: 0x0004 */

typedef struct _TOKEN_ORIGIN
{
  /* 0x0000 */ struct _LUID OriginatingLogonSession;
} TOKEN_ORIGIN, *PTOKEN_ORIGIN; /* size: 0x0008 */

typedef struct _TOKEN_OWNER
{
  /* 0x0000 */ void* Owner;
} TOKEN_OWNER, *PTOKEN_OWNER; /* size: 0x0004 */

typedef struct _TOKEN_PRIMARY_GROUP
{
  /* 0x0000 */ void* PrimaryGroup;
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP; /* size: 0x0004 */

typedef struct _TOKEN_PRIVILEGES
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ struct _LUID_AND_ATTRIBUTES Privileges[1];
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES; /* size: 0x0010 */

typedef struct _TOKEN_SOURCE
{
  /* 0x0000 */ char SourceName[8];
  /* 0x0008 */ struct _LUID SourceIdentifier;
} TOKEN_SOURCE, *PTOKEN_SOURCE; /* size: 0x0010 */

typedef struct _TOKEN_STATISTICS
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0018 */ enum _TOKEN_TYPE TokenType;
  /* 0x001c */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0020 */ unsigned long DynamicCharged;
  /* 0x0024 */ unsigned long DynamicAvailable;
  /* 0x0028 */ unsigned long GroupCount;
  /* 0x002c */ unsigned long PrivilegeCount;
  /* 0x0030 */ struct _LUID ModifiedId;
} TOKEN_STATISTICS, *PTOKEN_STATISTICS; /* size: 0x0038 */

typedef enum _TOKEN_TYPE
{
  TokenPrimary = 1,
  TokenImpersonation = 2,
} TOKEN_TYPE, *PTOKEN_TYPE;

typedef struct _TOKEN_USER
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES User;
} TOKEN_USER, *PTOKEN_USER; /* size: 0x0008 */

struct _TPP_THREAD_DATA_CALLBACK;

struct _TP_ALPC;

typedef struct _TP_CALLBACK_ENVIRON
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _TP_POOL* Pool;
  /* 0x0008 */ struct _TP_CLEANUP_GROUP* CleanupGroup;
  /* 0x000c */ void* CleanupGroupCancelCallback /* function */;
  /* 0x0010 */ void* RaceDll;
  /* 0x0014 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0018 */ void* FinalizationCallback /* function */;
  union
  {
    union
    {
      /* 0x001c */ unsigned long Flags;
      struct
      {
        struct /* bitfield */
        {
          /* 0x001c */ unsigned long LongFunction : 1; /* bit position: 0 */
          /* 0x001c */ unsigned long Private : 31; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0004 */ s;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
} TP_CALLBACK_ENVIRON, *PTP_CALLBACK_ENVIRON; /* size: 0x0020 */

struct _TP_CALLBACK_INSTANCE;

struct _TP_CLEANUP_GROUP;

typedef struct _TP_DIRECT
{
  /* 0x0000 */ void* Callback /* function */;
} TP_DIRECT, *PTP_DIRECT; /* size: 0x0004 */

struct _TP_IO;

typedef enum _TP_LOG_LEVEL
{
  TP_LOG_LEVEL_ERROR = 0,
  TP_LOG_LEVEL_WARNING = 1,
  TP_LOG_LEVEL_INFO = 2,
  TP_LOG_LEVEL_TRACE_ENTER = 3,
  TP_LOG_LEVEL_TRACE_LEAVE = 4,
} TP_LOG_LEVEL, *PTP_LOG_LEVEL;

struct _TP_POOL;

typedef struct _TP_TASK
{
  /* 0x0000 */ const struct _TP_TASK_CALLBACKS* Callbacks;
} TP_TASK, *PTP_TASK; /* size: 0x0004 */

typedef struct _TP_TASK_CALLBACKS
{
  /* 0x0000 */ void* ExecuteCallback /* function */;
  /* 0x0004 */ void* Unposted /* function */;
} TP_TASK_CALLBACKS, *PTP_TASK_CALLBACKS; /* size: 0x0008 */

struct _TP_TIMER;

typedef enum _TP_TRACE_TYPE
{
  TpTraceThreadPriority = 1,
  TpTraceThreadAffinity = 2,
  MaxTpTraceType = 3,
} TP_TRACE_TYPE, *PTP_TRACE_TYPE;

struct _TP_WAIT;

struct _TP_WORK;

typedef struct _TRACE_GUID_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* Guid;
  /* 0x0004 */ void* RegHandle;
} TRACE_GUID_REGISTRATION, *PTRACE_GUID_REGISTRATION; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ union _LARGE_INTEGER VirtualClock;
} TRANSACTIONMANAGER_BASIC_INFORMATION, *PTRANSACTIONMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS
{
  TransactionManagerBasicInformation = 0,
  TransactionManagerLogInformation = 1,
  TransactionManagerLogPathInformation = 2,
  TransactionManagerRecoveryInformation = 4,
  TransactionManagerOnlineProbeInformation = 3,
  TransactionManagerOldestTransactionInformation = 5,
} TRANSACTIONMANAGER_INFORMATION_CLASS, *PTRANSACTIONMANAGER_INFORMATION_CLASS;

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
  /* 0x0000 */ unsigned long LogPathLength;
  /* 0x0004 */ wchar_t LogPath[1];
  /* 0x0006 */ char __PADDING__[2];
} TRANSACTIONMANAGER_LOGPATH_INFORMATION, *PTRANSACTIONMANAGER_LOGPATH_INFORMATION; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION
{
  /* 0x0000 */ struct _GUID LogIdentity;
} TRANSACTIONMANAGER_LOG_INFORMATION, *PTRANSACTIONMANAGER_LOG_INFORMATION; /* size: 0x0010 */

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION
{
  /* 0x0000 */ struct _GUID OldestTransactionGuid;
} TRANSACTIONMANAGER_OLDEST_INFORMATION, *PTRANSACTIONMANAGER_OLDEST_INFORMATION; /* size: 0x0010 */

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 LastRecoveredLsn;
} TRANSACTIONMANAGER_RECOVERY_INFORMATION, *PTRANSACTIONMANAGER_RECOVERY_INFORMATION; /* size: 0x0008 */

typedef struct _TRANSACTION_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Outcome;
} TRANSACTION_BASIC_INFORMATION, *PTRANSACTION_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _TRANSACTION_BIND_INFORMATION
{
  /* 0x0000 */ void* TmHandle;
} TRANSACTION_BIND_INFORMATION, *PTRANSACTION_BIND_INFORMATION; /* size: 0x0004 */

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEnlistments;
  /* 0x0004 */ struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
} TRANSACTION_ENLISTMENTS_INFORMATION, *PTRANSACTION_ENLISTMENTS_INFORMATION; /* size: 0x0024 */

typedef struct _TRANSACTION_ENLISTMENT_PAIR
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID ResourceManagerId;
} TRANSACTION_ENLISTMENT_PAIR, *PTRANSACTION_ENLISTMENT_PAIR; /* size: 0x0020 */

typedef enum _TRANSACTION_INFORMATION_CLASS
{
  TransactionBasicInformation = 0,
  TransactionPropertiesInformation = 1,
  TransactionEnlistmentInformation = 2,
  TransactionSuperiorEnlistmentInformation = 3,
  TransactionBindInformation = 4,
  TransactionDTCPrivateInformation = 5,
} TRANSACTION_INFORMATION_CLASS, *PTRANSACTION_INFORMATION_CLASS;

typedef struct _TRANSACTION_LIST_ENTRY
{
  /* 0x0000 */ struct _GUID UOW;
} TRANSACTION_LIST_ENTRY, *PTRANSACTION_LIST_ENTRY; /* size: 0x0010 */

typedef struct _TRANSACTION_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTransactions;
  /* 0x0004 */ struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
} TRANSACTION_LIST_INFORMATION, *PTRANSACTION_LIST_INFORMATION; /* size: 0x0014 */

typedef struct _TRANSACTION_NOTIFICATION
{
  /* 0x0000 */ void* TransactionKey;
  /* 0x0004 */ unsigned long TransactionNotification;
  /* 0x0008 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0010 */ unsigned long ArgumentLength;
  /* 0x0014 */ long __PADDING__[1];
} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION; /* size: 0x0018 */

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
{
  /* 0x0000 */ unsigned long MarshalCookie;
  /* 0x0004 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT; /* size: 0x0014 */

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
{
  /* 0x0000 */ unsigned long PropagationCookie;
  /* 0x0004 */ struct _GUID UOW;
  /* 0x0014 */ struct _GUID TmIdentity;
  /* 0x0024 */ unsigned long BufferLength;
} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT; /* size: 0x0028 */

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT; /* size: 0x0020 */

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
{
  /* 0x0000 */ unsigned long SavepointId;
} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT; /* size: 0x0004 */

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ unsigned long Flags;
} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT; /* size: 0x0014 */

typedef enum _TRANSACTION_OUTCOME
{
  TransactionOutcomeUndetermined = 1,
  TransactionOutcomeCommitted = 2,
  TransactionOutcomeAborted = 3,
} TRANSACTION_OUTCOME, *PTRANSACTION_OUTCOME;

typedef struct _TRANSACTION_PROPERTIES_INFORMATION
{
  /* 0x0000 */ unsigned long IsolationLevel;
  /* 0x0004 */ unsigned long IsolationFlags;
  /* 0x0008 */ union _LARGE_INTEGER Timeout;
  /* 0x0010 */ unsigned long Outcome;
  /* 0x0014 */ unsigned long DescriptionLength;
  /* 0x0018 */ wchar_t Description[1];
  /* 0x001a */ char __PADDING__[6];
} TRANSACTION_PROPERTIES_INFORMATION, *PTRANSACTION_PROPERTIES_INFORMATION; /* size: 0x0020 */

typedef enum _TRANSACTION_STATE
{
  TransactionStateNormal = 1,
  TransactionStateIndoubt = 2,
  TransactionStateCommittedNotify = 3,
} TRANSACTION_STATE, *PTRANSACTION_STATE;

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
  /* 0x0000 */ struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
} TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION; /* size: 0x0020 */

typedef struct _TRIPLE_LIST
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit0 : 1; /* bit position: 0 */
        /* 0x0000 */ volatile unsigned long ActiveListBit0 : 1; /* bit position: 1 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit0 : 1; /* bit position: 2 */
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit1 : 1; /* bit position: 3 */
        /* 0x0000 */ volatile unsigned long ActiveListBit1 : 1; /* bit position: 4 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit1 : 1; /* bit position: 5 */
        /* 0x0000 */ volatile unsigned long ReaderDidTheSwitch : 1; /* bit position: 6 */
        /* 0x0000 */ volatile unsigned long Reserved : 22; /* bit position: 7 */
        /* 0x0000 */ volatile unsigned long ReaderBusy : 1; /* bit position: 29 */
        /* 0x0000 */ volatile unsigned long UpdateReady : 1; /* bit position: 30 */
        /* 0x0000 */ volatile unsigned long OverflowUpdateReady : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0004 */ ControlBits;
    /* 0x0000 */ volatile long CombinedControlBits;
  }; /* size: 0x0004 */
  /* 0x0004 */ struct _TRIPLE_LIST_ENTRY Head;
  /* 0x0014 */ struct _TRIPLE_LIST_ENTRY* Tail[3];
  /* 0x0020 */ void* RemoveCallback /* function */;
  /* 0x0024 */ void* RemoveContext;
  /* 0x0028 */ struct _TRIPLE_LIST_ENTRY* PendingHead;
  /* 0x002c */ struct _TRIPLE_LIST_ENTRY** PendingTailPtr;
  /* 0x0030 */ unsigned long PendingListIndex;
} TRIPLE_LIST, *PTRIPLE_LIST; /* size: 0x0034 */

typedef struct _TRIPLE_LIST_ENTRY
{
  /* 0x0000 */ struct _TRIPLE_LIST_ENTRY* Flink[3];
  /* 0x000c */ struct _TRIPLE_LIST_ENTRY* Blink;
} TRIPLE_LIST_ENTRY, *PTRIPLE_LIST_ENTRY; /* size: 0x0010 */

typedef struct _TRIPLE_LIST_ITERATOR
{
  /* 0x0000 */ struct _TRIPLE_LIST* List;
  /* 0x0004 */ struct _TRIPLE_LIST_ENTRY* NextEntry;
  /* 0x0008 */ unsigned char ActiveList;
  /* 0x0009 */ unsigned char ProbeReads;
  /* 0x000a */ unsigned char ReturnDataOffset;
  /* 0x000b */ unsigned char Wow64List;
} TRIPLE_LIST_ITERATOR, *PTRIPLE_LIST_ITERATOR; /* size: 0x000c */

typedef struct _TRIVERTEX
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
  /* 0x0008 */ unsigned short Red;
  /* 0x000a */ unsigned short Green;
  /* 0x000c */ unsigned short Blue;
  /* 0x000e */ unsigned short Alpha;
} TRIVERTEX, *PTRIVERTEX; /* size: 0x0010 */

typedef enum _TRUSTEE_FORM
{
  TRUSTEE_IS_SID = 0,
  TRUSTEE_IS_NAME = 1,
  TRUSTEE_BAD_FORM = 2,
  TRUSTEE_IS_OBJECTS_AND_SID = 3,
  TRUSTEE_IS_OBJECTS_AND_NAME = 4,
} TRUSTEE_FORM, *PTRUSTEE_FORM;

typedef enum _TRUSTEE_TYPE
{
  TRUSTEE_IS_UNKNOWN = 0,
  TRUSTEE_IS_USER = 1,
  TRUSTEE_IS_GROUP = 2,
  TRUSTEE_IS_DOMAIN = 3,
  TRUSTEE_IS_ALIAS = 4,
  TRUSTEE_IS_WELL_KNOWN_GROUP = 5,
  TRUSTEE_IS_DELETED = 6,
  TRUSTEE_IS_INVALID = 7,
  TRUSTEE_IS_COMPUTER = 8,
} TRUSTEE_TYPE, *PTRUSTEE_TYPE;

typedef struct _TRUSTEE_W
{
  /* 0x0000 */ struct _TRUSTEE_W* pMultipleTrustee;
  /* 0x0004 */ enum _MULTIPLE_TRUSTEE_OPERATION MultipleTrusteeOperation;
  /* 0x0008 */ enum _TRUSTEE_FORM TrusteeForm;
  /* 0x000c */ enum _TRUSTEE_TYPE TrusteeType;
  /* 0x0010 */ wchar_t* ptstrName;
} TRUSTEE_W, *PTRUSTEE_W; /* size: 0x0014 */

typedef struct _TXFS_CREATE_MINIVERSION_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long BaseVersion;
  /* 0x0008 */ unsigned short MiniVersion;
  /* 0x000a */ char __PADDING__[2];
} TXFS_CREATE_MINIVERSION_INFO, *PTXFS_CREATE_MINIVERSION_INFO; /* size: 0x000c */

typedef struct _TXFS_GET_METADATA_INFO_OUT
{
  struct
  {
    /* 0x0000 */ __int64 LowPart;
    /* 0x0008 */ __int64 HighPart;
  } /* size: 0x0010 */ TxfFileId;
  /* 0x0010 */ struct _GUID LockingTransaction;
  /* 0x0020 */ unsigned __int64 LastLsn;
  /* 0x0028 */ unsigned long TransactionState;
  /* 0x002c */ long __PADDING__[1];
} TXFS_GET_METADATA_INFO_OUT, *PTXFS_GET_METADATA_INFO_OUT; /* size: 0x0030 */

typedef struct _TXFS_GET_TRANSACTED_VERSION
{
  /* 0x0000 */ unsigned long ThisBaseVersion;
  /* 0x0004 */ unsigned long LatestVersion;
  /* 0x0008 */ unsigned short ThisMiniVersion;
  /* 0x000a */ unsigned short FirstMiniVersion;
  /* 0x000c */ unsigned short LatestMiniVersion;
  /* 0x000e */ char __PADDING__[2];
} TXFS_GET_TRANSACTED_VERSION, *PTXFS_GET_TRANSACTED_VERSION; /* size: 0x0010 */

typedef struct _TXFS_LIST_TRANSACTIONS
{
  /* 0x0000 */ unsigned __int64 NumberOfTransactions;
  /* 0x0008 */ unsigned __int64 BufferSizeRequired;
} TXFS_LIST_TRANSACTIONS, *PTXFS_LIST_TRANSACTIONS; /* size: 0x0010 */

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long TransactionState;
  /* 0x0014 */ unsigned long Reserved1;
  /* 0x0018 */ unsigned long Reserved2;
  /* 0x0020 */ __int64 Reserved3;
} TXFS_LIST_TRANSACTIONS_ENTRY, *PTXFS_LIST_TRANSACTIONS_ENTRY; /* size: 0x0028 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES
{
  /* 0x0000 */ struct _GUID KtmTransaction;
  /* 0x0010 */ unsigned __int64 NumberOfFiles;
  /* 0x0018 */ unsigned __int64 BufferSizeRequired;
  /* 0x0020 */ unsigned __int64 Offset;
} TXFS_LIST_TRANSACTION_LOCKED_FILES, *PTXFS_LIST_TRANSACTION_LOCKED_FILES; /* size: 0x0028 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long UsnReason;
  /* 0x0010 */ __int64 FileId;
  /* 0x0018 */ unsigned long Reserved1;
  /* 0x001c */ unsigned long Reserved2;
  /* 0x0020 */ __int64 Reserved3;
  /* 0x0028 */ wchar_t FileName[1];
  /* 0x002a */ char __PADDING__[6];
} TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY, *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY; /* size: 0x0030 */

typedef struct _TXFS_MODIFY_RM
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long LogContainerCountMax;
  /* 0x0008 */ unsigned long LogContainerCountMin;
  /* 0x000c */ unsigned long LogContainerCount;
  /* 0x0010 */ unsigned long LogGrowthIncrement;
  /* 0x0014 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0018 */ unsigned __int64 Reserved;
  /* 0x0020 */ unsigned short LoggingMode;
  /* 0x0022 */ char __PADDING__[6];
} TXFS_MODIFY_RM, *PTXFS_MODIFY_RM; /* size: 0x0028 */

typedef struct _TXFS_QUERY_RM_INFORMATION
{
  /* 0x0000 */ unsigned long BytesRequired;
  /* 0x0008 */ unsigned __int64 TailLsn;
  /* 0x0010 */ unsigned __int64 CurrentLsn;
  /* 0x0018 */ unsigned __int64 ArchiveTailLsn;
  /* 0x0020 */ unsigned __int64 LogContainerSize;
  /* 0x0028 */ union _LARGE_INTEGER HighestVirtualClock;
  /* 0x0030 */ unsigned long LogContainerCount;
  /* 0x0034 */ unsigned long LogContainerCountMax;
  /* 0x0038 */ unsigned long LogContainerCountMin;
  /* 0x003c */ unsigned long LogGrowthIncrement;
  /* 0x0040 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ unsigned short LoggingMode;
  /* 0x004a */ unsigned short Reserved;
  /* 0x004c */ unsigned long RmState;
  /* 0x0050 */ unsigned __int64 LogCapacity;
  /* 0x0058 */ unsigned __int64 LogFree;
  /* 0x0060 */ unsigned __int64 TopsSize;
  /* 0x0068 */ unsigned __int64 TopsUsed;
  /* 0x0070 */ unsigned __int64 TransactionCount;
  /* 0x0078 */ unsigned __int64 OnePCCount;
  /* 0x0080 */ unsigned __int64 TwoPCCount;
  /* 0x0088 */ unsigned __int64 NumberLogFileFull;
  /* 0x0090 */ unsigned __int64 OldestTransactionAge;
  /* 0x0098 */ struct _GUID RMName;
  /* 0x00a8 */ unsigned long TmLogPathOffset;
  /* 0x00ac */ long __PADDING__[1];
} TXFS_QUERY_RM_INFORMATION, *PTXFS_QUERY_RM_INFORMATION; /* size: 0x00b0 */

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT
{
  union
  {
    /* 0x0000 */ unsigned long BufferLength;
    struct
    {
      /* 0x0000 */ unsigned char Buffer[1];
      /* 0x0001 */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} TXFS_READ_BACKUP_INFORMATION_OUT, *PTXFS_READ_BACKUP_INFORMATION_OUT; /* size: 0x0004 */

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastVirtualClock;
  /* 0x0008 */ unsigned __int64 LastRedoLsn;
  /* 0x0010 */ unsigned __int64 HighestRecoveryLsn;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} TXFS_ROLLFORWARD_REDO_INFORMATION, *PTXFS_ROLLFORWARD_REDO_INFORMATION; /* size: 0x0020 */

typedef struct _TXFS_SAVEPOINT_INFORMATION
{
  /* 0x0000 */ void* KtmTransaction;
  /* 0x0004 */ unsigned long ActionCode;
  /* 0x0008 */ unsigned long SavepointId;
} TXFS_SAVEPOINT_INFORMATION, *PTXFS_SAVEPOINT_INFORMATION; /* size: 0x000c */

typedef struct _TXFS_START_RM_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 LogContainerSize;
  /* 0x0010 */ unsigned long LogContainerCountMin;
  /* 0x0014 */ unsigned long LogContainerCountMax;
  /* 0x0018 */ unsigned long LogGrowthIncrement;
  /* 0x001c */ unsigned long LogAutoShrinkPercentage;
  /* 0x0020 */ unsigned long TmLogPathOffset;
  /* 0x0024 */ unsigned short TmLogPathLength;
  /* 0x0026 */ unsigned short LoggingMode;
  /* 0x0028 */ unsigned short LogPathLength;
  /* 0x002a */ unsigned short Reserved;
  /* 0x002c */ wchar_t LogPath[1];
  /* 0x002e */ char __PADDING__[2];
} TXFS_START_RM_INFORMATION, *PTXFS_START_RM_INFORMATION; /* size: 0x0030 */

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO
{
  /* 0x0000 */ unsigned char TransactionsActiveAtSnapshot;
} TXFS_TRANSACTION_ACTIVE_INFO, *PTXFS_TRANSACTION_ACTIVE_INFO; /* size: 0x0001 */

typedef struct _TXFS_WRITE_BACKUP_INFORMATION
{
  /* 0x0000 */ unsigned char Buffer[1];
} TXFS_WRITE_BACKUP_INFORMATION, *PTXFS_WRITE_BACKUP_INFORMATION; /* size: 0x0001 */

typedef struct _TypeDescriptor
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0004 */ void* spare;
  /* 0x0008 */ char* name /* zero-length array */;
} TypeDescriptor, *PTypeDescriptor; /* size: 0x0008 */

typedef union _ULARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ULARGE_INTEGER, *PULARGE_INTEGER; /* size: 0x0008 */

typedef struct _UNICODE_PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* LastNextEntry;
} UNICODE_PREFIX_TABLE, *PUNICODE_PREFIX_TABLE; /* size: 0x000c */

typedef struct _UNICODE_PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* CaseMatch;
  /* 0x000c */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0018 */ struct _UNICODE_STRING* Prefix;
} UNICODE_PREFIX_TABLE_ENTRY, *PUNICODE_PREFIX_TABLE_ENTRY; /* size: 0x001c */

typedef struct _UNICODE_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ wchar_t* Buffer;
} UNICODE_STRING, *PUNICODE_STRING; /* size: 0x0008 */

typedef struct _UNIQUE_PROCESS_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 UniqueProcessKey : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} UNIQUE_PROCESS_INFORMATION, *PUNIQUE_PROCESS_INFORMATION; /* size: 0x0008 */

typedef struct _UNIVERSAL_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
} UNIVERSAL_NAME_INFOA, *PUNIVERSAL_NAME_INFOA; /* size: 0x0004 */

typedef struct _UNIVERSAL_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
} UNIVERSAL_NAME_INFOW, *PUNIVERSAL_NAME_INFOW; /* size: 0x0004 */

typedef struct _UNLOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* lpBaseOfDll;
} UNLOAD_DLL_DEBUG_INFO, *PUNLOAD_DLL_DEBUG_INFO; /* size: 0x0004 */

typedef enum _URLZONEREG
{
  URLZONEREG_DEFAULT = 0,
  URLZONEREG_HKLM = 1,
  URLZONEREG_HKCU = 2,
} URLZONEREG, *PURLZONEREG;

typedef struct _USER_MARSHAL_CB
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _MIDL_STUB_MESSAGE* pStubMsg;
  /* 0x0008 */ const unsigned char* pReserve;
  /* 0x000c */ unsigned long Signature;
  /* 0x0010 */ enum _USER_MARSHAL_CB_TYPE CBType;
  /* 0x0014 */ const unsigned char* pFormat;
  /* 0x0018 */ const unsigned char* pTypeFormat;
} USER_MARSHAL_CB, *PUSER_MARSHAL_CB; /* size: 0x001c */

typedef enum _USER_MARSHAL_CB_TYPE
{
  USER_MARSHAL_CB_BUFFER_SIZE = 0,
  USER_MARSHAL_CB_MARSHALL = 1,
  USER_MARSHAL_CB_UNMARSHALL = 2,
  USER_MARSHAL_CB_FREE = 3,
} USER_MARSHAL_CB_TYPE, *PUSER_MARSHAL_CB_TYPE;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE
{
  /* 0x0000 */ void* pfnBufferSize /* function */;
  /* 0x0004 */ void* pfnMarshall /* function */;
  /* 0x0008 */ void* pfnUnmarshall /* function */;
  /* 0x000c */ void* pfnFree /* function */;
} USER_MARSHAL_ROUTINE_QUADRUPLE, *PUSER_MARSHAL_ROUTINE_QUADRUPLE; /* size: 0x0010 */

typedef struct _UUID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _GUID* Uuid[1];
} UUID_VECTOR, *PUUID_VECTOR; /* size: 0x0008 */

typedef struct _VARIABLE_NAME
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _GUID VendorGuid;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} VARIABLE_NAME, *PVARIABLE_NAME; /* size: 0x0018 */

typedef struct _VARIABLE_NAME_AND_VALUE
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long ValueOffset;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ struct _GUID VendorGuid;
  /* 0x0020 */ wchar_t Name[1];
  /* 0x0022 */ char __PADDING__[2];
} VARIABLE_NAME_AND_VALUE, *PVARIABLE_NAME_AND_VALUE; /* size: 0x0024 */

typedef struct _VIDEOPARAMETERS
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long dwOffset;
  /* 0x0014 */ unsigned long dwCommand;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwMode;
  /* 0x0020 */ unsigned long dwTVStandard;
  /* 0x0024 */ unsigned long dwAvailableModes;
  /* 0x0028 */ unsigned long dwAvailableTVStandard;
  /* 0x002c */ unsigned long dwFlickerFilter;
  /* 0x0030 */ unsigned long dwOverScanX;
  /* 0x0034 */ unsigned long dwOverScanY;
  /* 0x0038 */ unsigned long dwMaxUnscaledX;
  /* 0x003c */ unsigned long dwMaxUnscaledY;
  /* 0x0040 */ unsigned long dwPositionX;
  /* 0x0044 */ unsigned long dwPositionY;
  /* 0x0048 */ unsigned long dwBrightness;
  /* 0x004c */ unsigned long dwContrast;
  /* 0x0050 */ unsigned long dwCPType;
  /* 0x0054 */ unsigned long dwCPCommand;
  /* 0x0058 */ unsigned long dwCPStandard;
  /* 0x005c */ unsigned long dwCPKey;
  /* 0x0060 */ unsigned long bCP_APSTriggerBits;
  /* 0x0064 */ unsigned char bOEMCopyProtection[256];
} VIDEOPARAMETERS, *PVIDEOPARAMETERS; /* size: 0x0164 */

typedef struct _VM_COUNTERS
{
  /* 0x0000 */ unsigned long PeakVirtualSize;
  /* 0x0004 */ unsigned long VirtualSize;
  /* 0x0008 */ unsigned long PageFaultCount;
  /* 0x000c */ unsigned long PeakWorkingSetSize;
  /* 0x0010 */ unsigned long WorkingSetSize;
  /* 0x0014 */ unsigned long QuotaPeakPagedPoolUsage;
  /* 0x0018 */ unsigned long QuotaPagedPoolUsage;
  /* 0x001c */ unsigned long QuotaPeakNonPagedPoolUsage;
  /* 0x0020 */ unsigned long QuotaNonPagedPoolUsage;
  /* 0x0024 */ unsigned long PagefileUsage;
  /* 0x0028 */ unsigned long PeakPagefileUsage;
} VM_COUNTERS, *PVM_COUNTERS; /* size: 0x002c */

typedef struct _VM_COUNTERS_EX
{
  /* 0x0000 */ unsigned long PeakVirtualSize;
  /* 0x0004 */ unsigned long VirtualSize;
  /* 0x0008 */ unsigned long PageFaultCount;
  /* 0x000c */ unsigned long PeakWorkingSetSize;
  /* 0x0010 */ unsigned long WorkingSetSize;
  /* 0x0014 */ unsigned long QuotaPeakPagedPoolUsage;
  /* 0x0018 */ unsigned long QuotaPagedPoolUsage;
  /* 0x001c */ unsigned long QuotaPeakNonPagedPoolUsage;
  /* 0x0020 */ unsigned long QuotaNonPagedPoolUsage;
  /* 0x0024 */ unsigned long PagefileUsage;
  /* 0x0028 */ unsigned long PeakPagefileUsage;
  /* 0x002c */ unsigned long PrivateUsage;
} VM_COUNTERS_EX, *PVM_COUNTERS_EX; /* size: 0x0030 */

typedef struct _VOLUME_COMPRESSION_STATE
{
  /* 0x0000 */ unsigned char CompressNewFiles;
} VOLUME_COMPRESSION_STATE, *PVOLUME_COMPRESSION_STATE; /* size: 0x0001 */

typedef enum _WAIT_TYPE
{
  WaitAll = 0,
  WaitAny = 1,
} WAIT_TYPE, *PWAIT_TYPE;

typedef enum _WATCHDOG_HANDLER_ACTION
{
  WdActionSetTimeoutValue = 0,
  WdActionQueryTimeoutValue = 1,
  WdActionResetTimer = 2,
  WdActionStopTimer = 3,
  WdActionStartTimer = 4,
  WdActionSetTriggerAction = 5,
  WdActionQueryTriggerAction = 6,
  WdActionQueryState = 7,
  WdActionSleep = 8,
  WdActionWake = 9,
} WATCHDOG_HANDLER_ACTION, *PWATCHDOG_HANDLER_ACTION;

typedef enum _WATCHDOG_INFORMATION_CLASS
{
  WdInfoTimeoutValue = 0,
  WdInfoResetTimer = 1,
  WdInfoStopTimer = 2,
  WdInfoStartTimer = 3,
  WdInfoTriggerAction = 4,
  WdInfoState = 5,
} WATCHDOG_INFORMATION_CLASS, *PWATCHDOG_INFORMATION_CLASS;

typedef struct _WGLSWAP
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0004 */ unsigned int uiFlags;
} WGLSWAP, *PWGLSWAP; /* size: 0x0008 */

typedef struct _WIN32_FILE_ATTRIBUTE_DATA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA, *PWIN32_FILE_ATTRIBUTE_DATA; /* size: 0x0024 */

typedef struct _WIN32_FIND_DATAA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ char cFileName[260];
  /* 0x0130 */ char cAlternateFileName[14];
  /* 0x013e */ char __PADDING__[2];
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA; /* size: 0x0140 */

typedef struct _WIN32_FIND_DATAW
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ wchar_t cFileName[260];
  /* 0x0234 */ wchar_t cAlternateFileName[14];
} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW; /* size: 0x0250 */

typedef struct _WIN32_FIND_STREAM_DATA
{
  /* 0x0000 */ union _LARGE_INTEGER StreamSize;
  /* 0x0008 */ wchar_t cStreamName[296];
} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA; /* size: 0x0258 */

typedef struct _WIN32_STREAM_ID
{
  /* 0x0000 */ unsigned long dwStreamId;
  /* 0x0004 */ unsigned long dwStreamAttributes;
  /* 0x0008 */ union _LARGE_INTEGER Size;
  /* 0x0010 */ unsigned long dwStreamNameSize;
  /* 0x0014 */ wchar_t cStreamName[1];
  /* 0x0016 */ char __PADDING__[2];
} WIN32_STREAM_ID, *PWIN32_STREAM_ID; /* size: 0x0018 */

typedef struct _WINDOWS_OS_OPTIONS
{
  /* 0x0000 */ unsigned char Signature[8];
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ unsigned long OsLoadPathOffset;
  /* 0x0014 */ wchar_t OsLoadOptions[1];
  /* 0x0016 */ char __PADDING__[2];
} WINDOWS_OS_OPTIONS, *PWINDOWS_OS_OPTIONS; /* size: 0x0018 */

typedef struct _WINDOW_BUFFER_SIZE_RECORD
{
  /* 0x0000 */ struct _COORD dwSize;
} WINDOW_BUFFER_SIZE_RECORD, *PWINDOW_BUFFER_SIZE_RECORD; /* size: 0x0004 */

typedef struct _WINTRUST_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ void* pPolicyCallbackData;
  /* 0x0008 */ void* pSIPClientData;
  /* 0x000c */ unsigned long dwUIChoice;
  /* 0x0010 */ unsigned long fdwRevocationChecks;
  /* 0x0014 */ unsigned long dwUnionChoice;
  union
  {
    /* 0x0018 */ struct WINTRUST_FILE_INFO_* pFile;
    /* 0x0018 */ struct WINTRUST_CATALOG_INFO_* pCatalog;
    /* 0x0018 */ struct WINTRUST_BLOB_INFO_* pBlob;
    /* 0x0018 */ struct WINTRUST_SGNR_INFO_* pSgnr;
    /* 0x0018 */ struct WINTRUST_CERT_INFO_* pCert;
  }; /* size: 0x0004 */
  /* 0x001c */ unsigned long dwStateAction;
  /* 0x0020 */ void* hWVTStateData;
  /* 0x0024 */ wchar_t* pwszURLReference;
  /* 0x0028 */ unsigned long dwProvFlags;
  /* 0x002c */ unsigned long dwUIContext;
} WINTRUST_DATA, *PWINTRUST_DATA; /* size: 0x0030 */

typedef struct _WIN_CERTIFICATE
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned short wRevision;
  /* 0x0006 */ unsigned short wCertificateType;
  /* 0x0008 */ unsigned char bCertificate[1];
  /* 0x0009 */ char __PADDING__[3];
} WIN_CERTIFICATE, *PWIN_CERTIFICATE; /* size: 0x000c */

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0004 */ struct _WIN_CERTIFICATE* lpCertificate;
} WIN_SPUB_TRUSTED_PUBLISHER_DATA, *PWIN_SPUB_TRUSTED_PUBLISHER_DATA; /* size: 0x0008 */

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0004 */ struct _GUID* SubjectType;
  /* 0x0008 */ void* Subject;
} WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT, *PWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT; /* size: 0x000c */

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY
{
  /* 0x0000 */ struct _GUID* SubjectType;
  /* 0x0004 */ void* Subject;
} WIN_TRUST_ACTDATA_SUBJECT_ONLY, *PWIN_TRUST_ACTDATA_SUBJECT_ONLY; /* size: 0x0008 */

typedef struct _WIN_TRUST_SUBJECT_FILE
{
  /* 0x0000 */ void* hFile;
  /* 0x0004 */ const wchar_t* lpPath;
} WIN_TRUST_SUBJECT_FILE, *PWIN_TRUST_SUBJECT_FILE; /* size: 0x0008 */

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY
{
  /* 0x0000 */ void* hFile;
  /* 0x0004 */ const wchar_t* lpPath;
  /* 0x0008 */ const wchar_t* lpDisplayName;
} WIN_TRUST_SUBJECT_FILE_AND_DISPLAY, *PWIN_TRUST_SUBJECT_FILE_AND_DISPLAY; /* size: 0x000c */

typedef struct _WNODE_HEADER
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ unsigned long ProviderId;
  union
  {
    /* 0x0008 */ unsigned __int64 HistoricalContext;
    struct
    {
      /* 0x0008 */ unsigned long Version;
      /* 0x000c */ unsigned long Linkage;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ unsigned long CountLost;
    /* 0x0010 */ void* KernelHandle;
    /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  }; /* size: 0x0008 */
  /* 0x0018 */ struct _GUID Guid;
  /* 0x0028 */ unsigned long ClientContext;
  /* 0x002c */ unsigned long Flags;
} WNODE_HEADER, *PWNODE_HEADER; /* size: 0x0030 */

typedef struct _WORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned short asData[1];
  /* 0x0006 */ char __PADDING__[2];
} WORD_BLOB, *PWORD_BLOB; /* size: 0x0008 */

typedef enum _WORKERFACTORYINFOCLASS
{
  WorkerFactoryTimeout = 0,
  WorkerFactoryRetryTimeout = 1,
  WorkerFactoryIdleTimeout = 2,
  WorkerFactoryBindingCount = 3,
  WorkerFactoryThreadMinimum = 4,
  WorkerFactoryThreadMaximum = 5,
  WorkerFactoryPaused = 6,
  WorkerFactoryBasicInformation = 7,
  WorkerFactoryAdjustThreadGoal = 8,
  MaxWorkerFactoryInfoClass = 9,
} WORKERFACTORYINFOCLASS, *PWORKERFACTORYINFOCLASS;

typedef struct _WORKER_FACTORY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ union _LARGE_INTEGER RetryTimeout;
  /* 0x0010 */ union _LARGE_INTEGER IdleTimeout;
  /* 0x0018 */ unsigned char Paused;
  /* 0x0019 */ unsigned char TimerSet;
  /* 0x001a */ unsigned char QueuedToExWorker;
  /* 0x001b */ unsigned char MayCreate;
  /* 0x001c */ unsigned char CreateInProgress;
  /* 0x001d */ unsigned char InsertedIntoQueue;
  /* 0x001e */ unsigned char Shutdown;
  /* 0x0020 */ unsigned long BindingCount;
  /* 0x0024 */ unsigned long ThreadMinimum;
  /* 0x0028 */ unsigned long ThreadMaximum;
  /* 0x002c */ unsigned long PendingWorkerCount;
  /* 0x0030 */ unsigned long WaitingWorkerCount;
  /* 0x0034 */ unsigned long TotalWorkerCount;
  /* 0x0038 */ unsigned long ReleaseCount;
  /* 0x0040 */ __int64 InfiniteWaitGoal;
  /* 0x0048 */ void* StartRoutine /* function */;
  /* 0x004c */ void* StartParameter;
  /* 0x0050 */ void* ProcessId;
  /* 0x0054 */ unsigned long StackReserve;
  /* 0x0058 */ unsigned long StackCommit;
  /* 0x005c */ long LastThreadCreationStatus;
} WORKER_FACTORY_BASIC_INFORMATION, *PWORKER_FACTORY_BASIC_INFORMATION; /* size: 0x0060 */

typedef struct _WOW64_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _WOW64_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  /* 0x00cc */ unsigned char ExtendedRegisters[512];
} WOW64_CONTEXT, *PWOW64_CONTEXT; /* size: 0x02cc */

typedef struct _WOW64_FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} WOW64_FLOATING_SAVE_AREA, *PWOW64_FLOATING_SAVE_AREA; /* size: 0x0070 */

typedef enum _WOW64_FUNCTION_CODE64
{
  WOW64_FUNCTION_NOP = 0,
  WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
  WOW64_FUNCTION_MAXIMUM = 2,
} WOW64_FUNCTION_CODE64, *PWOW64_FUNCTION_CODE64;

typedef enum _WPP_FLAG_LEN_ENUM
{
  WPP_FLAG_LEN = 1,
} WPP_FLAG_LEN_ENUM, *PWPP_FLAG_LEN_ENUM;

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
  /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK* Next;
  /* 0x0008 */ unsigned __int64 UmRegistrationHandle;
  union
  {
    /* 0x0010 */ unsigned __int64 Logger;
    /* 0x0010 */ struct _WPP_WIN2K_CONTROL_BLOCK* Win2kCb;
    /* 0x0010 */ void* Ptr;
    /* 0x0010 */ struct _WPP_TRACE_CONTROL_BLOCK* Cb;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned char FlagsLen;
  /* 0x0019 */ unsigned char Level;
  /* 0x001a */ unsigned short Options;
  /* 0x001c */ unsigned long Flags[1];
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK; /* size: 0x0020 */

typedef struct _WPP_WIN2K_CONTROL_BLOCK
{
  /* 0x0000 */ unsigned __int64 Logger;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Level;
} WPP_WIN2K_CONTROL_BLOCK, *PWPP_WIN2K_CONTROL_BLOCK; /* size: 0x0010 */

typedef struct _Wx86TIB
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long InitialPc;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* DeallocationStack;
  /* 0x0014 */ unsigned long LogFlags;
  /* 0x0018 */ unsigned long InitialSp;
  /* 0x001c */ unsigned char SimulationCount;
  /* 0x001d */ unsigned char InCpuSimulation;
  /* 0x001e */ unsigned char EmulateInitialPc;
  /* 0x001f */ unsigned char Initialized;
  /* 0x0020 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0024 */ void* CpuContext;
  /* 0x0028 */ struct _CONTEXT* InitialExceptionContext;
  /* 0x002c */ void* pCallersRIID;
  /* 0x0030 */ void* pCallersUnknown;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ void* SelfRegDllName;
  /* 0x003c */ void* SelfRegDllHandle;
} Wx86TIB, *PWx86TIB; /* size: 0x0040 */

typedef struct _Wx86ThreadState
{
  /* 0x0000 */ unsigned long* CallBx86Eip;
  /* 0x0004 */ void* DeallocationCpu;
  /* 0x0008 */ unsigned char UseKnownWx86Dll;
  /* 0x0009 */ char OleStubInvoked;
  /* 0x000a */ char __PADDING__[2];
} Wx86ThreadState, *PWx86ThreadState; /* size: 0x000c */

typedef struct _X86_CALL_FRAME
{
  /* 0x0000 */ unsigned long ReturnAddress;
  /* 0x0004 */ unsigned long Param1;
  /* 0x0008 */ unsigned long Param2;
  /* 0x000c */ unsigned long CompatibilityArea;
} X86_CALL_FRAME, *PX86_CALL_FRAME; /* size: 0x0010 */

typedef struct _XMIT_ROUTINE_QUINTUPLE
{
  /* 0x0000 */ void* pfnTranslateToXmit /* function */;
  /* 0x0004 */ void* pfnTranslateFromXmit /* function */;
  /* 0x0008 */ void* pfnFreeXmit /* function */;
  /* 0x000c */ void* pfnFreeInst /* function */;
} XMIT_ROUTINE_QUINTUPLE, *PXMIT_ROUTINE_QUINTUPLE; /* size: 0x0010 */

typedef struct _ZONEATTRIBUTES
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t szDisplayName[260];
  /* 0x020c */ wchar_t szDescription[200];
  /* 0x039c */ wchar_t szIconPath[260];
  /* 0x05a4 */ unsigned long dwTemplateMinLevel;
  /* 0x05a8 */ unsigned long dwTemplateRecommended;
  /* 0x05ac */ unsigned long dwTemplateCurrentLevel;
  /* 0x05b0 */ unsigned long dwFlags;
} ZONEATTRIBUTES, *PZONEATTRIBUTES; /* size: 0x05b4 */

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
} _BCRYPT_KEY_LENGTHS_STRUCT, *P_BCRYPT_KEY_LENGTHS_STRUCT; /* size: 0x000c */

typedef struct __CRT_LIST_ENTRY
{
  /* 0x0000 */ struct __CRT_LIST_ENTRY* Flink;
  /* 0x0004 */ struct __CRT_LIST_ENTRY* Blink;
} _CRT_LIST_ENTRY, *P_CRT_LIST_ENTRY; /* size: 0x0008 */

typedef struct __GENERIC_BINDING_INFO
{
  /* 0x0000 */ void* pObj;
  /* 0x0004 */ unsigned int Size;
  /* 0x0008 */ void* pfnBind /* function */;
  /* 0x000c */ void* pfnUnbind /* function */;
} _GENERIC_BINDING_INFO, *P_GENERIC_BINDING_INFO; /* size: 0x0010 */

typedef enum __MIDL_IActivatorCustomMarshal_0001
{
  SPD_FLAG_USE_CONSOLE_SESSION = 1,
  SPD_FLAG_USE_DEFAULT_AUTHN_LVL = 2,
  SPD_FLAG_USE_SERVER_PID = 4,
  SPD_FLAG_USE_LUA_LEVEL_ADMIN = 8,
  SPD_FLAG_COAUTH_USER_IS_NULL = 16,
  SPD_FLAG_COAUTH_DOMAIN_IS_NULL = 32,
  SPD_FLAG_COAUTH_PWD_IS_NULL = 64,
  SPD_FLAG_USE_LUA_LEVEL_HIGHEST = 128,
} _MIDL_IActivatorCustomMarshal_0001, *P_MIDL_IActivatorCustomMarshal_0001;

typedef enum __MIDL_IBindStatusCallback_0001
{
  BINDVERB_GET = 0,
  BINDVERB_POST = 1,
  BINDVERB_PUT = 2,
  BINDVERB_CUSTOM = 3,
} _MIDL_IBindStatusCallback_0001, *P_MIDL_IBindStatusCallback_0001;

typedef enum __MIDL_IBindStatusCallback_0002
{
  BINDINFOF_URLENCODESTGMEDDATA = 1,
  BINDINFOF_URLENCODEDEXTRAINFO = 2,
} _MIDL_IBindStatusCallback_0002, *P_MIDL_IBindStatusCallback_0002;

typedef enum __MIDL_IBindStatusCallback_0003
{
  BINDF_ASYNCHRONOUS = 1,
  BINDF_ASYNCSTORAGE = 2,
  BINDF_NOPROGRESSIVERENDERING = 4,
  BINDF_OFFLINEOPERATION = 8,
  BINDF_GETNEWESTVERSION = 16,
  BINDF_NOWRITECACHE = 32,
  BINDF_NEEDFILE = 64,
  BINDF_PULLDATA = 128,
  BINDF_IGNORESECURITYPROBLEM = 256,
  BINDF_RESYNCHRONIZE = 512,
  BINDF_HYPERLINK = 1024,
  BINDF_NO_UI = 2048,
  BINDF_SILENTOPERATION = 4096,
  BINDF_PRAGMA_NO_CACHE = 8192,
  BINDF_GETCLASSOBJECT = 16384,
  BINDF_RESERVED_1 = 0xffff8000,
  BINDF_FREE_THREADED = 0x10000,
  BINDF_DIRECT_READ = 0x20000,
  BINDF_FORMS_SUBMIT = 0x40000,
  BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
  BINDF_FROMURLMON = 0x100000,
  BINDF_FWD_BACK = 0x200000,
  BINDF_PREFERDEFAULTHANDLER = 0x400000,
  BINDF_ENFORCERESTRICTED = 0x800000,
} _MIDL_IBindStatusCallback_0003, *P_MIDL_IBindStatusCallback_0003;

typedef enum __MIDL_IBindStatusCallback_0004
{
  URL_ENCODING_NONE = 0,
  URL_ENCODING_ENABLE_UTF8 = 0x10000000,
  URL_ENCODING_DISABLE_UTF8 = 0x20000000,
} _MIDL_IBindStatusCallback_0004, *P_MIDL_IBindStatusCallback_0004;

typedef enum __MIDL_IBindStatusCallback_0005
{
  BINDINFO_OPTIONS_WININETFLAG = 0x10000,
  BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
  BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
  BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
  BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
  BINDINFO_OPTIONS_SECURITYOPTOUT = 0x200000,
  BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 0x400000,
  BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 0x800000,
  BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 0x1000000,
  BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 0x2000000,
  BINDINFO_WPC_DOWNLOADBLOCKED = 0x8000000,
  BINDINFO_WPC_LOGGING_ENABLED = 0x10000000,
  BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 0x40000000,
  BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648,
} _MIDL_IBindStatusCallback_0005, *P_MIDL_IBindStatusCallback_0005;

typedef enum __MIDL_IBindStatusCallback_0006
{
  BSCF_FIRSTDATANOTIFICATION = 1,
  BSCF_INTERMEDIATEDATANOTIFICATION = 2,
  BSCF_LASTDATANOTIFICATION = 4,
  BSCF_DATAFULLYAVAILABLE = 8,
  BSCF_AVAILABLEDATASIZEUNKNOWN = 16,
} _MIDL_IBindStatusCallback_0006, *P_MIDL_IBindStatusCallback_0006;

typedef struct __MIDL_ICallFrame_0001
{
  /* 0x0000 */ unsigned long iMethod;
  /* 0x0004 */ int fHasInValues;
  /* 0x0008 */ int fHasInOutValues;
  /* 0x000c */ int fHasOutValues;
  /* 0x0010 */ int fDerivesFromIDispatch;
  /* 0x0014 */ long cInInterfacesMax;
  /* 0x0018 */ long cInOutInterfacesMax;
  /* 0x001c */ long cOutInterfacesMax;
  /* 0x0020 */ long cTopLevelInInterfaces;
  /* 0x0024 */ struct _GUID iid;
  /* 0x0034 */ unsigned long cMethod;
  /* 0x0038 */ unsigned long cParams;
} _MIDL_ICallFrame_0001, *P_MIDL_ICallFrame_0001; /* size: 0x003c */

typedef struct __MIDL_ICallFrame_0002
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ unsigned char fOut;
  /* 0x0004 */ unsigned long stackOffset;
  /* 0x0008 */ unsigned long cbParam;
} _MIDL_ICallFrame_0002, *P_MIDL_ICallFrame_0002; /* size: 0x000c */

typedef enum __MIDL_ICallFrame_0003
{
  CALLFRAME_COPY_NESTED = 1,
  CALLFRAME_COPY_INDEPENDENT = 2,
} _MIDL_ICallFrame_0003, *P_MIDL_ICallFrame_0003;

typedef struct __MIDL_ICallFrame_0004
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0004 */ unsigned long dwDestContext;
  /* 0x0008 */ void* pvDestContext;
  /* 0x000c */ struct IUnknown* punkReserved;
  /* 0x0010 */ struct _GUID guidTransferSyntax;
} _MIDL_ICallFrame_0004, *P_MIDL_ICallFrame_0004; /* size: 0x0020 */

typedef enum __MIDL_ICodeInstall_0001
{
  CIP_DISK_FULL = 0,
  CIP_ACCESS_DENIED = 1,
  CIP_NEWER_VERSION_EXISTS = 2,
  CIP_OLDER_VERSION_EXISTS = 3,
  CIP_NAME_CONFLICT = 4,
  CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
  CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
  CIP_UNSAFE_TO_ABORT = 7,
  CIP_NEED_REBOOT = 8,
  CIP_NEED_REBOOT_UI_PERMISSION = 9,
} _MIDL_ICodeInstall_0001, *P_MIDL_ICodeInstall_0001;

typedef enum __MIDL_IDLLHost_0001
{
  DLLHOST_IS_DPE = 1,
  DLLHOST_IS_PFN = 2,
} _MIDL_IDLLHost_0001, *P_MIDL_IDLLHost_0001;

typedef enum __MIDL_IFlyout_0001
{
  TCO_BOTTOM = 0,
  TCO_RIGHT = 1,
  TCO_LEFT = 2,
  TCO_TOP = 3,
} _MIDL_IFlyout_0001, *P_MIDL_IFlyout_0001;

typedef enum __MIDL_IInternetSecurityManager_0001
{
  PUAF_DEFAULT = 0,
  PUAF_NOUI = 1,
  PUAF_ISFILE = 2,
  PUAF_WARN_IF_DENIED = 4,
  PUAF_FORCEUI_FOREGROUND = 8,
  PUAF_CHECK_TIFS = 16,
  PUAF_DONTCHECKBOXINDIALOG = 32,
  PUAF_TRUSTED = 64,
  PUAF_ACCEPT_WILDCARD_SCHEME = 128,
  PUAF_ENFORCERESTRICTED = 256,
  PUAF_NOSAVEDFILECHECK = 512,
  PUAF_REQUIRESAVEDFILECHECK = 1024,
  PUAF_DONT_USE_CACHE = 4096,
  PUAF_RESERVED1 = 8192,
  PUAF_RESERVED2 = 16384,
  PUAF_LMZ_UNLOCKED = 0x10000,
  PUAF_LMZ_LOCKED = 0x20000,
  PUAF_DEFAULTZONEPOL = 0x40000,
  PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 0x80000,
  PUAF_NOUIIFLOCKED = 0x100000,
  PUAF_DRAGPROTOCOLCHECK = 0x200000,
} _MIDL_IInternetSecurityManager_0001, *P_MIDL_IInternetSecurityManager_0001;

typedef enum __MIDL_IInternetSecurityManager_0002
{
  PUAFOUT_DEFAULT = 0,
  PUAFOUT_ISLOCKZONEPOLICY = 1,
} _MIDL_IInternetSecurityManager_0002, *P_MIDL_IInternetSecurityManager_0002;

typedef enum __MIDL_IInternetSecurityManager_0003
{
  SZM_CREATE = 0,
  SZM_DELETE = 1,
} _MIDL_IInternetSecurityManager_0003, *P_MIDL_IInternetSecurityManager_0003;

typedef enum __MIDL_IInternetZoneManager_0001
{
  MAX_ZONE_PATH = 260,
  MAX_ZONE_DESCRIPTION = 200,
} _MIDL_IInternetZoneManager_0001, *P_MIDL_IInternetZoneManager_0001;

typedef enum __MIDL_IInternetZoneManager_0002
{
  ZAFLAGS_CUSTOM_EDIT = 1,
  ZAFLAGS_ADD_SITES = 2,
  ZAFLAGS_REQUIRE_VERIFICATION = 4,
  ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8,
  ZAFLAGS_INCLUDE_INTRANET_SITES = 16,
  ZAFLAGS_NO_UI = 32,
  ZAFLAGS_SUPPORTS_VERIFICATION = 64,
  ZAFLAGS_UNC_AS_INTRANET = 128,
  ZAFLAGS_DETECT_INTRANET = 256,
  ZAFLAGS_USE_LOCKED_ZONES = 0x10000,
  ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 0x20000,
  ZAFLAGS_NO_CACHE = 0x40000,
} _MIDL_IInternetZoneManager_0002, *P_MIDL_IInternetZoneManager_0002;

typedef struct __MIDL_ILocalObjectExporter_0001
{
  /* 0x0000 */ wchar_t* pName;
  /* 0x0004 */ unsigned short wId;
  /* 0x0006 */ char __PADDING__[2];
} _MIDL_ILocalObjectExporter_0001, *P_MIDL_ILocalObjectExporter_0001; /* size: 0x0008 */

typedef struct __MIDL_ILocalObjectExporter_0002
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned long refs;
  /* 0x0014 */ long __PADDING__[1];
} _MIDL_ILocalObjectExporter_0002, *P_MIDL_ILocalObjectExporter_0002; /* size: 0x0018 */

typedef struct __MIDL_ILocalObjectExporter_0003
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oid;
} _MIDL_ILocalObjectExporter_0003, *P_MIDL_ILocalObjectExporter_0003; /* size: 0x0010 */

typedef struct __MIDL_ILocalObjectExporter_0004
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
} _MIDL_ILocalObjectExporter_0004, *P_MIDL_ILocalObjectExporter_0004; /* size: 0x0018 */

typedef enum __MIDL_IMonikerProp_0001
{
  MIMETYPEPROP = 0,
  USE_SRC_URL = 1,
  CLASSIDPROP = 2,
  TRUSTEDDOWNLOADPROP = 3,
  POPUPLEVELPROP = 4,
} _MIDL_IMonikerProp_0001, *P_MIDL_IMonikerProp_0001;

typedef enum __MIDL_IUri_0001
{
  Uri_PROPERTY_ABSOLUTE_URI = 0,
  Uri_PROPERTY_STRING_START = 0,
  Uri_PROPERTY_AUTHORITY = 1,
  Uri_PROPERTY_DISPLAY_URI = 2,
  Uri_PROPERTY_DOMAIN = 3,
  Uri_PROPERTY_EXTENSION = 4,
  Uri_PROPERTY_FRAGMENT = 5,
  Uri_PROPERTY_HOST = 6,
  Uri_PROPERTY_PASSWORD = 7,
  Uri_PROPERTY_PATH = 8,
  Uri_PROPERTY_PATH_AND_QUERY = 9,
  Uri_PROPERTY_QUERY = 10,
  Uri_PROPERTY_RAW_URI = 11,
  Uri_PROPERTY_SCHEME_NAME = 12,
  Uri_PROPERTY_USER_INFO = 13,
  Uri_PROPERTY_USER_NAME = 14,
  Uri_PROPERTY_STRING_LAST = 14,
  Uri_PROPERTY_HOST_TYPE = 15,
  Uri_PROPERTY_DWORD_START = 15,
  Uri_PROPERTY_PORT = 16,
  Uri_PROPERTY_SCHEME = 17,
  Uri_PROPERTY_ZONE = 18,
  Uri_PROPERTY_DWORD_LAST = 18,
} _MIDL_IUri_0001, *P_MIDL_IUri_0001;

typedef enum __MIDL_IUri_0002
{
  Uri_HOST_UNKNOWN = 0,
  Uri_HOST_DNS = 1,
  Uri_HOST_IPV4 = 2,
  Uri_HOST_IPV6 = 3,
  Uri_HOST_IDN = 4,
} _MIDL_IUri_0002, *P_MIDL_IUri_0002;

typedef struct __MIDL_XmitDefs_0001
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwClientThread;
} _MIDL_XmitDefs_0001, *P_MIDL_XmitDefs_0001; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0001
{
  ST_SERVER = 1,
  ST_OLDSURROGATE = 2,
  ST_COMPLUSAPP = 3,
  ST_SERVICE = 4,
} _MIDL___MIDL_itf_activate_0000_0010_0001, *P_MIDL___MIDL_itf_activate_0000_0010_0001;

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0002
{
  SIT_RUNAS_SPECIFIC_USER = 1,
  SIT_RUNAS_INTERACTIVE = 2,
} _MIDL___MIDL_itf_activate_0000_0010_0002, *P_MIDL___MIDL_itf_activate_0000_0010_0002;

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0003
{
  SPIF_COMPLUS = 1,
  SPIF_SUSPENDED = 2,
  SPIF_RETIRED = 4,
  SPIF_READY = 8,
  SPIF_PAUSED = 16,
} _MIDL___MIDL_itf_activate_0000_0010_0003, *P_MIDL___MIDL_itf_activate_0000_0010_0003;

typedef struct __MIDL___MIDL_itf_activate_0000_0010_0004
{
  /* 0x0000 */ unsigned long ulNumClasses;
  /* 0x0004 */ struct _GUID* pCLSIDs;
  /* 0x0008 */ unsigned long pidProcess;
  /* 0x000c */ void* hProcess;
  /* 0x0010 */ void* hImpersonationToken;
  /* 0x0014 */ wchar_t* pwszWinstaDesktop;
  /* 0x0018 */ unsigned long dwState;
  /* 0x001c */ struct _GUID AppId;
  /* 0x002c */ enum __MIDL___MIDL_itf_activate_0000_0010_0001 ServerType;
  /* 0x0030 */ enum __MIDL___MIDL_itf_activate_0000_0010_0002 ServerID;
  /* 0x0034 */ struct _FILETIME ftCreated;
} _MIDL___MIDL_itf_activate_0000_0010_0004, *P_MIDL___MIDL_itf_activate_0000_0010_0004; /* size: 0x003c */

typedef enum __MIDL___MIDL_itf_immact_0000_0002_0002
{
  INVALID_LUA_RUNLEVEL = -1,
} _MIDL___MIDL_itf_immact_0000_0002_0002, *P_MIDL___MIDL_itf_immact_0000_0002_0002;

typedef enum __MIDL___MIDL_itf_objidl_0000_0046_0001
{
  COMBND_RPCTIMEOUT = 1,
  COMBND_SERVER_LOCALITY = 2,
} _MIDL___MIDL_itf_objidl_0000_0046_0001, *P_MIDL___MIDL_itf_objidl_0000_0046_0001;

typedef enum __MIDL___MIDL_itf_objidl_0000_0046_0002
{
  SERVER_LOCALITY_PROCESS_LOCAL = 0,
  SERVER_LOCALITY_MACHINE_LOCAL = 1,
  SERVER_LOCALITY_REMOTE = 2,
} _MIDL___MIDL_itf_objidl_0000_0046_0002, *P_MIDL___MIDL_itf_objidl_0000_0046_0002;

typedef enum __MIDL___MIDL_itf_objidl_0000_0047_0001
{
  COMGLB_EXCEPTION_HANDLING = 1,
  COMGLB_APPID = 2,
} _MIDL___MIDL_itf_objidl_0000_0047_0001, *P_MIDL___MIDL_itf_objidl_0000_0047_0001;

typedef enum __MIDL___MIDL_itf_objidl_0000_0047_0002
{
  COMGLB_EXCEPTION_HANDLE = 0,
  COMGLB_EXCEPTION_DONOT_HANDLE = 1,
} _MIDL___MIDL_itf_objidl_0000_0047_0002, *P_MIDL___MIDL_itf_objidl_0000_0047_0002;

typedef enum __MIDL___MIDL_itf_odeth_0000_0001_0001
{
  ORS_DONTRUNDOWN = 0,
  ORS_OK_TO_RUNDOWN = 1,
  ORS_OID_PINNED = 2,
} _MIDL___MIDL_itf_odeth_0000_0001_0001, *P_MIDL___MIDL_itf_odeth_0000_0001_0001;

typedef enum __MIDL___MIDL_itf_privact_0000_0009_0001
{
  MARSHOPT_NO_OID_REGISTER = 1,
} _MIDL___MIDL_itf_privact_0000_0009_0001, *P_MIDL___MIDL_itf_privact_0000_0009_0001;

typedef enum __MIDL___MIDL_itf_shdeprecated_0000_0006_0001
{
  SECURELOCK_NOCHANGE = -1,
  SECURELOCK_SET_UNSECURE = 0,
  SECURELOCK_SET_MIXED = 1,
  SECURELOCK_SET_SECUREUNKNOWNBIT = 2,
  SECURELOCK_SET_SECURE40BIT = 3,
  SECURELOCK_SET_SECURE56BIT = 4,
  SECURELOCK_SET_FORTEZZA = 5,
  SECURELOCK_SET_SECURE128BIT = 6,
  SECURELOCK_FIRSTSUGGEST = 7,
  SECURELOCK_SUGGEST_UNSECURE = 7,
  SECURELOCK_SUGGEST_MIXED = 8,
  SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9,
  SECURELOCK_SUGGEST_SECURE40BIT = 10,
  SECURELOCK_SUGGEST_SECURE56BIT = 11,
  SECURELOCK_SUGGEST_FORTEZZA = 12,
  SECURELOCK_SUGGEST_SECURE128BIT = 13,
} _MIDL___MIDL_itf_shdeprecated_0000_0006_0001, *P_MIDL___MIDL_itf_shdeprecated_0000_0006_0001;

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0013_0001
{
  NEC_LOW = 0,
  NEC_MEDIUM = 1,
  NEC_HIGH = 2,
} _MIDL___MIDL_itf_structuredquery_0000_0013_0001, *P_MIDL___MIDL_itf_structuredquery_0000_0013_0001;

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001
{
  /* 0x0000 */ unsigned long tyspec;
  /* 0x0004 */ union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
} _MIDL___MIDL_itf_wtypes_0000_0001_0001, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001; /* size: 0x0024 */

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005
{
  union
  {
    /* 0x0000 */ struct _GUID clsid;
    /* 0x0000 */ wchar_t* pFileExt;
    /* 0x0000 */ wchar_t* pMimeType;
    /* 0x0000 */ wchar_t* pProgId;
    /* 0x0000 */ wchar_t* pFileName;
    struct
    {
      /* 0x0000 */ wchar_t* pPackageName;
      /* 0x0004 */ struct _GUID PolicyId;
    } /* size: 0x0014 */ ByName;
    struct
    {
      /* 0x0000 */ struct _GUID ObjectId;
      /* 0x0010 */ struct _GUID PolicyId;
    } /* size: 0x0020 */ ByObjectId;
  }; /* size: 0x0020 */
} _MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005; /* size: 0x0020 */

typedef struct __NCRYPT_SUPPORTED_LENGTHS
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
  /* 0x000c */ unsigned long dwDefaultLength;
} _NCRYPT_SUPPORTED_LENGTHS, *P_NCRYPT_SUPPORTED_LENGTHS; /* size: 0x0010 */

typedef struct __NCRYPT_UI_POLICY
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* pszCreationTitle;
  /* 0x000c */ const wchar_t* pszFriendlyName;
  /* 0x0010 */ const wchar_t* pszDescription;
} _NCRYPT_UI_POLICY, *P_NCRYPT_UI_POLICY; /* size: 0x0014 */

typedef struct __NCRYPT_UI_POLICY_BLOB
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cbCreationTitle;
  /* 0x000c */ unsigned long cbFriendlyName;
  /* 0x0010 */ unsigned long cbDescription;
} _NCRYPT_UI_POLICY_BLOB, *P_NCRYPT_UI_POLICY_BLOB; /* size: 0x0014 */

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0008 */ unsigned long Reserved[22];
} _PUBLIC_OBJECT_TYPE_INFORMATION, *P_PUBLIC_OBJECT_TYPE_INFORMATION; /* size: 0x0060 */

typedef enum __enative_startup_state
{
  __uninitialized = 0,
  __initializing = 1,
  __initialized = 2,
} _enative_startup_state, *P_enative_startup_state;

struct __lc_time_data;

typedef union __m128
{
  union
  {
    /* 0x0000 */ float m128_f32[4];
    /* 0x0000 */ unsigned __int64 m128_u64[2];
    /* 0x0000 */ char m128_i8[16];
    /* 0x0000 */ short m128_i16[8];
    /* 0x0000 */ int m128_i32[4];
    /* 0x0000 */ __int64 m128_i64[2];
    /* 0x0000 */ unsigned char m128_u8[16];
    /* 0x0000 */ unsigned short m128_u16[8];
    /* 0x0000 */ unsigned int m128_u32[4];
  }; /* size: 0x0010 */
} _m128, *P_m128; /* size: 0x0010 */

typedef union __m64
{
  union
  {
    /* 0x0000 */ unsigned __int64 m64_u64;
    /* 0x0000 */ float m64_f32[2];
    /* 0x0000 */ char m64_i8[8];
    /* 0x0000 */ short m64_i16[4];
    /* 0x0000 */ int m64_i32[2];
    /* 0x0000 */ __int64 m64_i64;
    /* 0x0000 */ unsigned char m64_u8[8];
    /* 0x0000 */ unsigned short m64_u16[4];
    /* 0x0000 */ unsigned int m64_u32[2];
  }; /* size: 0x0008 */
} _m64, *P_m64; /* size: 0x0008 */

typedef struct __s_GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} _s_GUID, *P_s_GUID; /* size: 0x0010 */

typedef struct _acpickl_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[13];
  /* 0x0011 */ char __PADDING__[3];
} acpickl_MIDL_EXPR_FORMAT_STRING, *Pacpickl_MIDL_EXPR_FORMAT_STRING; /* size: 0x0014 */

typedef struct _acpickl_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1];
  /* 0x0003 */ char __PADDING__[1];
} acpickl_MIDL_PROC_FORMAT_STRING, *Pacpickl_MIDL_PROC_FORMAT_STRING; /* size: 0x0004 */

typedef struct _acpickl_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[121];
  /* 0x007b */ char __PADDING__[1];
} acpickl_MIDL_TYPE_FORMAT_STRING, *Pacpickl_MIDL_TYPE_FORMAT_STRING; /* size: 0x007c */

typedef class _bstr_t
{
  /* 0x0000 */ class _bstr_t::Data_t* m_Data;
} bstr_t, *Pbstr_t; /* size: 0x0004 */

typedef class _bstr_t::Data_t
{
  /* 0x0000 */ wchar_t* m_wstr;
  /* 0x0004 */ char* m_str;
  /* 0x0008 */ unsigned long m_RefCount;
} bstr_t::Data_t, *Pbstr_t::Data_t; /* size: 0x000c */

typedef struct _callframeinternal_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[727];
  /* 0x02d9 */ char __PADDING__[1];
} callframeinternal_MIDL_PROC_FORMAT_STRING, *Pcallframeinternal_MIDL_PROC_FORMAT_STRING; /* size: 0x02da */

typedef struct _callframeinternal_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1287];
  /* 0x0509 */ char __PADDING__[1];
} callframeinternal_MIDL_TYPE_FORMAT_STRING, *Pcallframeinternal_MIDL_TYPE_FORMAT_STRING; /* size: 0x050a */

typedef class _com_error
{
  /* 0x0004 */ const HRESULT m_hresult;
  /* 0x0008 */ struct IErrorInfo* m_perrinfo;
  /* 0x000c */ wchar_t* m_pszMsg;
} com_error, *Pcom_error; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_35
{
  WCODE_HRESULT_FIRST = -2147220992,
  WCODE_HRESULT_LAST = -2147155969,
} TAG_UNNAMED_35, *PTAG_UNNAMED_35;

typedef struct _complex
{
  /* 0x0000 */ double x;
  /* 0x0008 */ double y;
} complex, *Pcomplex; /* size: 0x0010 */

typedef struct _cpinfo
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ char __PADDING__[2];
} cpinfo, *Pcpinfo; /* size: 0x0014 */

typedef struct _cpinfoexA
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ char CodePageName[260];
} cpinfoexA, *PcpinfoexA; /* size: 0x011c */

typedef struct _cpinfoexW
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ wchar_t CodePageName[260];
} cpinfoexW, *PcpinfoexW; /* size: 0x0220 */

typedef struct _currencyfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ char* lpDecimalSep;
  /* 0x0010 */ char* lpThousandSep;
  /* 0x0014 */ unsigned int NegativeOrder;
  /* 0x0018 */ unsigned int PositiveOrder;
  /* 0x001c */ char* lpCurrencySymbol;
} currencyfmtA, *PcurrencyfmtA; /* size: 0x0020 */

typedef struct _currencyfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ wchar_t* lpDecimalSep;
  /* 0x0010 */ wchar_t* lpThousandSep;
  /* 0x0014 */ unsigned int NegativeOrder;
  /* 0x0018 */ unsigned int PositiveOrder;
  /* 0x001c */ wchar_t* lpCurrencySymbol;
} currencyfmtW, *PcurrencyfmtW; /* size: 0x0020 */

typedef struct _custmact_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1];
  /* 0x0003 */ char __PADDING__[1];
} custmact_MIDL_PROC_FORMAT_STRING, *Pcustmact_MIDL_PROC_FORMAT_STRING; /* size: 0x0004 */

typedef struct _custmact_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1085];
  /* 0x043f */ char __PADDING__[1];
} custmact_MIDL_TYPE_FORMAT_STRING, *Pcustmact_MIDL_TYPE_FORMAT_STRING; /* size: 0x0440 */

typedef struct _customREMOTE_REPLY_SCM_INFO
{
  /* 0x0000 */ unsigned __int64 Oxid;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pdsaOxidBindings;
  /* 0x000c */ struct _GUID ipidRemUnknown;
  /* 0x001c */ unsigned long authnHint;
  /* 0x0020 */ struct tagCOMVERSION serverVersion;
  /* 0x0024 */ long __PADDING__[1];
} customREMOTE_REPLY_SCM_INFO, *PcustomREMOTE_REPLY_SCM_INFO; /* size: 0x0028 */

typedef struct _customREMOTE_REQUEST_SCM_INFO
{
  /* 0x0000 */ unsigned long ClientImpLevel;
  /* 0x0004 */ unsigned short cRequestedProtseqs;
  /* 0x0008 */ unsigned short* pRequestedProtseqs;
} customREMOTE_REQUEST_SCM_INFO, *PcustomREMOTE_REQUEST_SCM_INFO; /* size: 0x000c */

typedef struct _devicemodeA
{
  /* 0x0000 */ unsigned char dmDeviceName[32];
  /* 0x0020 */ unsigned short dmSpecVersion;
  /* 0x0022 */ unsigned short dmDriverVersion;
  /* 0x0024 */ unsigned short dmSize;
  /* 0x0026 */ unsigned short dmDriverExtra;
  /* 0x0028 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x002c */ short dmOrientation;
      /* 0x002e */ short dmPaperSize;
      /* 0x0030 */ short dmPaperLength;
      /* 0x0032 */ short dmPaperWidth;
      /* 0x0034 */ short dmScale;
      /* 0x0036 */ short dmCopies;
      /* 0x0038 */ short dmDefaultSource;
      /* 0x003a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x002c */ struct _POINTL dmPosition;
      /* 0x0034 */ unsigned long dmDisplayOrientation;
      /* 0x0038 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x003c */ short dmColor;
  /* 0x003e */ short dmDuplex;
  /* 0x0040 */ short dmYResolution;
  /* 0x0042 */ short dmTTOption;
  /* 0x0044 */ short dmCollate;
  /* 0x0046 */ unsigned char dmFormName[32];
  /* 0x0066 */ unsigned short dmLogPixels;
  /* 0x0068 */ unsigned long dmBitsPerPel;
  /* 0x006c */ unsigned long dmPelsWidth;
  /* 0x0070 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x0074 */ unsigned long dmDisplayFlags;
    /* 0x0074 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x0078 */ unsigned long dmDisplayFrequency;
  /* 0x007c */ unsigned long dmICMMethod;
  /* 0x0080 */ unsigned long dmICMIntent;
  /* 0x0084 */ unsigned long dmMediaType;
  /* 0x0088 */ unsigned long dmDitherType;
  /* 0x008c */ unsigned long dmReserved1;
  /* 0x0090 */ unsigned long dmReserved2;
  /* 0x0094 */ unsigned long dmPanningWidth;
  /* 0x0098 */ unsigned long dmPanningHeight;
} devicemodeA, *PdevicemodeA; /* size: 0x009c */

typedef struct _devicemodeW
{
  /* 0x0000 */ wchar_t dmDeviceName[32];
  /* 0x0040 */ unsigned short dmSpecVersion;
  /* 0x0042 */ unsigned short dmDriverVersion;
  /* 0x0044 */ unsigned short dmSize;
  /* 0x0046 */ unsigned short dmDriverExtra;
  /* 0x0048 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x004c */ short dmOrientation;
      /* 0x004e */ short dmPaperSize;
      /* 0x0050 */ short dmPaperLength;
      /* 0x0052 */ short dmPaperWidth;
      /* 0x0054 */ short dmScale;
      /* 0x0056 */ short dmCopies;
      /* 0x0058 */ short dmDefaultSource;
      /* 0x005a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x004c */ struct _POINTL dmPosition;
      /* 0x0054 */ unsigned long dmDisplayOrientation;
      /* 0x0058 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x005c */ short dmColor;
  /* 0x005e */ short dmDuplex;
  /* 0x0060 */ short dmYResolution;
  /* 0x0062 */ short dmTTOption;
  /* 0x0064 */ short dmCollate;
  /* 0x0066 */ wchar_t dmFormName[32];
  /* 0x00a6 */ unsigned short dmLogPixels;
  /* 0x00a8 */ unsigned long dmBitsPerPel;
  /* 0x00ac */ unsigned long dmPelsWidth;
  /* 0x00b0 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x00b4 */ unsigned long dmDisplayFlags;
    /* 0x00b4 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x00b8 */ unsigned long dmDisplayFrequency;
  /* 0x00bc */ unsigned long dmICMMethod;
  /* 0x00c0 */ unsigned long dmICMIntent;
  /* 0x00c4 */ unsigned long dmMediaType;
  /* 0x00c8 */ unsigned long dmDitherType;
  /* 0x00cc */ unsigned long dmReserved1;
  /* 0x00d0 */ unsigned long dmReserved2;
  /* 0x00d4 */ unsigned long dmPanningWidth;
  /* 0x00d8 */ unsigned long dmPanningHeight;
} devicemodeW, *PdevicemodeW; /* size: 0x00dc */

typedef struct _div_t
{
  /* 0x0000 */ int quot;
  /* 0x0004 */ int rem;
} div_t, *Pdiv_t; /* size: 0x0008 */

typedef struct _exception
{
  /* 0x0000 */ int type;
  /* 0x0004 */ char* name;
  /* 0x0008 */ double arg1;
  /* 0x0010 */ double arg2;
  /* 0x0018 */ double retval;
} exception, *Pexception; /* size: 0x0020 */

typedef struct _heapinfo
{
  /* 0x0000 */ int* _pentry;
  /* 0x0004 */ unsigned int _size;
  /* 0x0008 */ int _useflag;
} heapinfo, *Pheapinfo; /* size: 0x000c */

typedef struct _iobuf
{
  /* 0x0000 */ char* _ptr;
  /* 0x0004 */ int _cnt;
  /* 0x0008 */ char* _base;
  /* 0x000c */ int _flag;
  /* 0x0010 */ int _file;
  /* 0x0014 */ int _charbuf;
  /* 0x0018 */ int _bufsiz;
  /* 0x001c */ char* _tmpfname;
} iobuf, *Piobuf; /* size: 0x0020 */

typedef struct _irot_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[473];
  /* 0x01db */ char __PADDING__[1];
} irot_MIDL_PROC_FORMAT_STRING, *Pirot_MIDL_PROC_FORMAT_STRING; /* size: 0x01dc */

typedef struct _irot_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[193];
  /* 0x00c3 */ char __PADDING__[1];
} irot_MIDL_TYPE_FORMAT_STRING, *Pirot_MIDL_TYPE_FORMAT_STRING; /* size: 0x00c4 */

typedef struct _lclor_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[763];
  /* 0x02fd */ char __PADDING__[1];
} lclor_MIDL_PROC_FORMAT_STRING, *Plclor_MIDL_PROC_FORMAT_STRING; /* size: 0x02fe */

typedef struct _lclor_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[767];
  /* 0x0301 */ char __PADDING__[1];
} lclor_MIDL_TYPE_FORMAT_STRING, *Plclor_MIDL_TYPE_FORMAT_STRING; /* size: 0x0302 */

typedef struct _ldiv_t
{
  /* 0x0000 */ long quot;
  /* 0x0004 */ long rem;
} ldiv_t, *Pldiv_t; /* size: 0x0008 */

typedef struct _mega_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[29];
  /* 0x0021 */ char __PADDING__[3];
} mega_MIDL_EXPR_FORMAT_STRING, *Pmega_MIDL_EXPR_FORMAT_STRING; /* size: 0x0024 */

typedef struct _mega_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[13561];
  /* 0x34fb */ char __PADDING__[1];
} mega_MIDL_PROC_FORMAT_STRING, *Pmega_MIDL_PROC_FORMAT_STRING; /* size: 0x34fc */

typedef struct _mega_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[7031];
  /* 0x1b79 */ char __PADDING__[1];
} mega_MIDL_TYPE_FORMAT_STRING, *Pmega_MIDL_TYPE_FORMAT_STRING; /* size: 0x1b7a */

typedef struct _nlsversioninfo
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
} nlsversioninfo, *Pnlsversioninfo; /* size: 0x000c */

typedef struct _nlsversioninfoex
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
  /* 0x000c */ unsigned long dwEffectiveId;
  /* 0x0010 */ struct _GUID guidCustomVersion;
} nlsversioninfoex, *Pnlsversioninfoex; /* size: 0x0020 */

typedef struct _numberfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ char* lpDecimalSep;
  /* 0x0010 */ char* lpThousandSep;
  /* 0x0014 */ unsigned int NegativeOrder;
} numberfmtA, *PnumberfmtA; /* size: 0x0018 */

typedef struct _numberfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ wchar_t* lpDecimalSep;
  /* 0x0010 */ wchar_t* lpThousandSep;
  /* 0x0014 */ unsigned int NegativeOrder;
} numberfmtW, *PnumberfmtW; /* size: 0x0018 */

typedef enum _operators
{
  OP_START = 0,
  OP_ILLEGAL = 0,
  OP_UNARY_START = 1,
  OP_UNARY_ARITHMETIC_START = 1,
  OP_UNARY_PLUS = 1,
  OP_UNARY_MINUS = 2,
  OP_UNARY_ARITHMETIC_END = 3,
  OP_UNARY_LOGICAL_START = 3,
  OP_UNARY_NOT = 3,
  OP_UNARY_COMPLEMENT = 4,
  OP_UNARY_LOGICAL_END = 5,
  OP_UNARY_INDIRECTION = 5,
  OP_UNARY_CAST = 6,
  OP_UNARY_AND = 7,
  OP_UNARY_SIZEOF = 8,
  OP_UNARY_ALIGNOF = 9,
  OP_PRE_INCR = 10,
  OP_PRE_DECR = 11,
  OP_POST_INCR = 12,
  OP_POST_DECR = 13,
  OP_UNARY_END = 14,
  OP_BINARY_START = 14,
  OP_BINARY_ARITHMETIC_START = 14,
  OP_PLUS = 14,
  OP_MINUS = 15,
  OP_STAR = 16,
  OP_SLASH = 17,
  OP_MOD = 18,
  OP_BINARY_ARITHMETIC_END = 19,
  OP_BINARY_SHIFT_START = 19,
  OP_LEFT_SHIFT = 19,
  OP_RIGHT_SHIFT = 20,
  OP_BINARY_SHIFT_END = 21,
  OP_BINARY_RELATIONAL_START = 21,
  OP_LESS = 21,
  OP_LESS_EQUAL = 22,
  OP_GREATER_EQUAL = 23,
  OP_GREATER = 24,
  OP_EQUAL = 25,
  OP_NOT_EQUAL = 26,
  OP_BINARY_RELATIONAL_END = 27,
  OP_BINARY_BITWISE_START = 27,
  OP_AND = 27,
  OP_OR = 28,
  OP_XOR = 29,
  OP_BINARY_BITWISE_END = 30,
  OP_BINARY_LOGICAL_START = 30,
  OP_LOGICAL_AND = 30,
  OP_LOGICAL_OR = 31,
  OP_BINARY_LOGICAL_END = 32,
  OP_BINARY_TERNARY_START = 32,
  OP_QM = 32,
  OP_COLON = 33,
  OP_BINARY_TERNARY_END = 34,
  OP_BINARY_END = 34,
  OP_INTERNAL_START = 34,
  OP_FUNCTION = 35,
  OP_PARAM = 36,
  OP_POINTSTO = 37,
  OP_DOT = 38,
  OP_INDEX = 39,
  OP_COMMA = 40,
  OP_STMT = 41,
  OP_ASSIGN = 42,
  OP_ASYNCSPLIT = 43,
  OP_CORR_POINTER = 44,
  OP_CORR_TOP_LEVEL = 45,
  OP_END = 46,
} operators, *Poperators;

typedef struct _orcb_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[249];
  /* 0x00fb */ char __PADDING__[1];
} orcb_MIDL_PROC_FORMAT_STRING, *Porcb_MIDL_PROC_FORMAT_STRING; /* size: 0x00fc */

typedef struct _orcb_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[57];
  /* 0x003b */ char __PADDING__[1];
} orcb_MIDL_TYPE_FORMAT_STRING, *Porcb_MIDL_TYPE_FORMAT_STRING; /* size: 0x003c */

typedef struct _prop_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[25];
  /* 0x001d */ char __PADDING__[3];
} prop_MIDL_EXPR_FORMAT_STRING, *Pprop_MIDL_EXPR_FORMAT_STRING; /* size: 0x0020 */

typedef struct _prop_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[985];
  /* 0x03db */ char __PADDING__[1];
} prop_MIDL_PROC_FORMAT_STRING, *Pprop_MIDL_PROC_FORMAT_STRING; /* size: 0x03dc */

typedef struct _prop_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[3587];
  /* 0x0e05 */ char __PADDING__[1];
} prop_MIDL_TYPE_FORMAT_STRING, *Pprop_MIDL_TYPE_FORMAT_STRING; /* size: 0x0e06 */

typedef struct _remoteMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ struct _userHMETAFILE* hMF;
} remoteMETAFILEPICT, *PremoteMETAFILEPICT; /* size: 0x0010 */

typedef struct _s__CatchableType
{
  /* 0x0000 */ unsigned int properties;
  /* 0x0004 */ struct _TypeDescriptor* pType;
  /* 0x0008 */ struct _PMD thisDisplacement;
  /* 0x0014 */ int sizeOrOffset;
  /* 0x0018 */ void* copyFunction /* function */;
} s__CatchableType, *Ps__CatchableType; /* size: 0x001c */

typedef struct _s__CatchableTypeArray
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType** arrayOfCatchableTypes /* zero-length array */;
} s__CatchableTypeArray, *Ps__CatchableTypeArray; /* size: 0x0004 */

typedef struct _s__RTTIBaseClassArray
{
  union
  {
    /* 0x0000 */ const struct _s__RTTIBaseClassDescriptor2** arrayOfBaseClassDescriptors /* zero-length array */;
    /* 0x0000 */ char __PADDING__[1];
  }; /* size: 0x0001 */
} s__RTTIBaseClassArray, *Ps__RTTIBaseClassArray; /* size: 0x0001 */

typedef struct _s__RTTIBaseClassDescriptor2
{
  /* 0x0000 */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0004 */ unsigned long numContainedBases;
  /* 0x0008 */ struct _PMD where;
  /* 0x0014 */ unsigned long attributes;
  /* 0x0018 */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
} s__RTTIBaseClassDescriptor2, *Ps__RTTIBaseClassDescriptor2; /* size: 0x001c */

typedef struct _s__RTTIClassHierarchyDescriptor
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long attributes;
  /* 0x0008 */ unsigned long numBaseClasses;
  /* 0x000c */ const struct _s__RTTIBaseClassArray* pBaseClassArray;
} s__RTTIClassHierarchyDescriptor, *Ps__RTTIClassHierarchyDescriptor; /* size: 0x0010 */

typedef struct _s__RTTICompleteObjectLocator
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long offset;
  /* 0x0008 */ unsigned long cdOffset;
  /* 0x000c */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0010 */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
} s__RTTICompleteObjectLocator, *Ps__RTTICompleteObjectLocator; /* size: 0x0014 */

typedef struct _s__ThrowInfo
{
  /* 0x0000 */ unsigned int attributes;
  /* 0x0004 */ void* pmfnUnwind /* function */;
  /* 0x0008 */ void* pForwardCompat /* function */;
  /* 0x000c */ const struct _s__CatchableTypeArray* pCatchableTypeArray;
} s__ThrowInfo, *Ps__ThrowInfo; /* size: 0x0010 */

typedef struct _scm_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[981];
  /* 0x03d7 */ char __PADDING__[1];
} scm_MIDL_PROC_FORMAT_STRING, *Pscm_MIDL_PROC_FORMAT_STRING; /* size: 0x03d8 */

typedef struct _scm_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[413];
  /* 0x019f */ char __PADDING__[1];
} scm_MIDL_TYPE_FORMAT_STRING, *Pscm_MIDL_TYPE_FORMAT_STRING; /* size: 0x01a0 */

typedef struct _srgtprot_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[329];
  /* 0x014b */ char __PADDING__[1];
} srgtprot_MIDL_PROC_FORMAT_STRING, *Psrgtprot_MIDL_PROC_FORMAT_STRING; /* size: 0x014c */

typedef struct _srgtprot_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[47];
  /* 0x0031 */ char __PADDING__[1];
} srgtprot_MIDL_TYPE_FORMAT_STRING, *Psrgtprot_MIDL_TYPE_FORMAT_STRING; /* size: 0x0032 */

typedef struct _stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
} stat, *Pstat; /* size: 0x0024 */

typedef struct _stat32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
} stat32, *Pstat32; /* size: 0x0024 */

typedef struct _stat32i64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ long st_atime;
  /* 0x0024 */ long st_mtime;
  /* 0x0028 */ long st_ctime;
  /* 0x002c */ long __PADDING__[1];
} stat32i64, *Pstat32i64; /* size: 0x0030 */

typedef struct _stat64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stat64, *Pstat64; /* size: 0x0038 */

typedef struct _stat64i32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat64i32, *Pstat64i32; /* size: 0x0030 */

typedef struct _stati64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ long st_atime;
  /* 0x0024 */ long st_mtime;
  /* 0x0028 */ long st_ctime;
  /* 0x002c */ long __PADDING__[1];
} stati64, *Pstati64; /* size: 0x0030 */

typedef struct _tagADDRESS
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned short Segment;
  /* 0x0008 */ enum ADDRESS_MODE Mode;
} tagADDRESS, *PtagADDRESS; /* size: 0x000c */

typedef struct _tagADDRESS64
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned short Segment;
  /* 0x000c */ enum ADDRESS_MODE Mode;
} tagADDRESS64, *PtagADDRESS64; /* size: 0x0010 */

typedef struct _tagBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t* szExtraInfo;
  /* 0x0008 */ struct tagSTGMEDIUM stgmedData;
  /* 0x0014 */ unsigned long grfBindInfoF;
  /* 0x0018 */ unsigned long dwBindVerb;
  /* 0x001c */ wchar_t* szCustomVerb;
  /* 0x0020 */ unsigned long cbstgmedData;
  /* 0x0024 */ unsigned long dwOptions;
  /* 0x0028 */ unsigned long dwOptionsFlags;
  /* 0x002c */ unsigned long dwCodePage;
  /* 0x0030 */ struct _SECURITY_ATTRIBUTES securityAttributes;
  /* 0x003c */ struct _GUID iid;
  /* 0x004c */ struct IUnknown* pUnk;
  /* 0x0050 */ unsigned long dwReserved;
} tagBINDINFO, *PtagBINDINFO; /* size: 0x0054 */

typedef struct _tagCODEBASEHOLD
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t* szDistUnit;
  /* 0x0008 */ wchar_t* szCodeBase;
  /* 0x000c */ unsigned long dwVersionMS;
  /* 0x0010 */ unsigned long dwVersionLS;
  /* 0x0014 */ unsigned long dwStyle;
} tagCODEBASEHOLD, *PtagCODEBASEHOLD; /* size: 0x0018 */

typedef struct _tagDATAINFO
{
  /* 0x0000 */ unsigned long ulTotalSize;
  /* 0x0004 */ unsigned long ulavrPacketSize;
  /* 0x0008 */ unsigned long ulConnectSpeed;
  /* 0x000c */ unsigned long ulProcessorSpeed;
} tagDATAINFO, *PtagDATAINFO; /* size: 0x0010 */

typedef struct _tagDdeClassInfo
{
  /* 0x0000 */ unsigned long dwContextMask;
  /* 0x0004 */ int fClaimFactory;
  /* 0x0008 */ unsigned long dwContext;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwThreadId;
  /* 0x0014 */ unsigned long dwRegistrationKey;
  /* 0x0018 */ struct IUnknown* punk;
} tagDdeClassInfo, *PtagDdeClassInfo; /* size: 0x001c */

typedef struct _tagHIT_LOGGING_INFO
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ char* lpszLoggedUrlName;
  /* 0x0008 */ struct _SYSTEMTIME StartTime;
  /* 0x0018 */ struct _SYSTEMTIME EndTime;
  /* 0x0028 */ char* lpszExtendedInfo;
} tagHIT_LOGGING_INFO, *PtagHIT_LOGGING_INFO; /* size: 0x002c */

typedef enum _tagINTERNETFEATURELIST
{
  FEATURE_OBJECT_CACHING = 0,
  FEATURE_ZONE_ELEVATION = 1,
  FEATURE_MIME_HANDLING = 2,
  FEATURE_MIME_SNIFFING = 3,
  FEATURE_WINDOW_RESTRICTIONS = 4,
  FEATURE_WEBOC_POPUPMANAGEMENT = 5,
  FEATURE_BEHAVIORS = 6,
  FEATURE_DISABLE_MK_PROTOCOL = 7,
  FEATURE_LOCALMACHINE_LOCKDOWN = 8,
  FEATURE_SECURITYBAND = 9,
  FEATURE_RESTRICT_ACTIVEXINSTALL = 10,
  FEATURE_VALIDATE_NAVIGATE_URL = 11,
  FEATURE_RESTRICT_FILEDOWNLOAD = 12,
  FEATURE_ADDON_MANAGEMENT = 13,
  FEATURE_PROTOCOL_LOCKDOWN = 14,
  FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15,
  FEATURE_SAFE_BINDTOOBJECT = 16,
  FEATURE_UNC_SAVEDFILECHECK = 17,
  FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18,
  FEATURE_TABBED_BROWSING = 19,
  FEATURE_SSLUX = 20,
  FEATURE_DISABLE_NAVIGATION_SOUNDS = 21,
  FEATURE_DISABLE_LEGACY_COMPRESSION = 22,
  FEATURE_FORCE_ADDR_AND_STATUS = 23,
  FEATURE_XMLHTTP = 24,
  FEATURE_DISABLE_TELNET_PROTOCOL = 25,
  FEATURE_FEEDS = 26,
  FEATURE_BLOCK_INPUT_PROMPTS = 27,
  FEATURE_ENTRY_COUNT = 28,
} tagINTERNETFEATURELIST, *PtagINTERNETFEATURELIST;

typedef enum _tagOIBDG_FLAGS
{
  OIBDG_APARTMENTTHREADED = 256,
  OIBDG_DATAONLY = 4096,
} tagOIBDG_FLAGS, *PtagOIBDG_FLAGS;

typedef enum _tagPARSEACTION
{
  PARSE_CANONICALIZE = 1,
  PARSE_FRIENDLY = 2,
  PARSE_SECURITY_URL = 3,
  PARSE_ROOTDOCUMENT = 4,
  PARSE_DOCUMENT = 5,
  PARSE_ANCHOR = 6,
  PARSE_ENCODE = 7,
  PARSE_DECODE = 8,
  PARSE_PATH_FROM_URL = 9,
  PARSE_URL_FROM_PATH = 10,
  PARSE_MIME = 11,
  PARSE_SERVER = 12,
  PARSE_SCHEMA = 13,
  PARSE_SITE = 14,
  PARSE_DOMAIN = 15,
  PARSE_LOCATION = 16,
  PARSE_SECURITY_DOMAIN = 17,
  PARSE_ESCAPE = 18,
  PARSE_UNESCAPE = 19,
} tagPARSEACTION, *PtagPARSEACTION;

typedef enum _tagPI_FLAGS
{
  PI_PARSE_URL = 1,
  PI_FILTER_MODE = 2,
  PI_FORCE_ASYNC = 4,
  PI_USE_WORKERTHREAD = 8,
  PI_MIMEVERIFICATION = 16,
  PI_CLSIDLOOKUP = 32,
  PI_DATAPROGRESS = 64,
  PI_SYNCHRONOUS = 128,
  PI_APARTMENTTHREADED = 256,
  PI_CLASSINSTALL = 512,
  PI_PASSONBINDCTX = 8192,
  PI_NOMIMEHANDLER = 0xffff8000,
  PI_LOADAPPDIRECT = 16384,
  PD_FORCE_SWITCH = 0x10000,
  PI_PREFERDEFAULTHANDLER = 0x20000,
} tagPI_FLAGS, *PtagPI_FLAGS;

typedef struct _tagPROTOCOLDATA
{
  /* 0x0000 */ unsigned long grfFlags;
  /* 0x0004 */ unsigned long dwState;
  /* 0x0008 */ void* pData;
  /* 0x000c */ unsigned long cbData;
} tagPROTOCOLDATA, *PtagPROTOCOLDATA; /* size: 0x0010 */

typedef struct _tagPROTOCOLFILTERDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct IInternetProtocolSink* pProtocolSink;
  /* 0x0008 */ struct IInternetProtocol* pProtocol;
  /* 0x000c */ struct IUnknown* pUnk;
  /* 0x0010 */ unsigned long dwFilterFlags;
} tagPROTOCOLFILTERDATA, *PtagPROTOCOLFILTERDATA; /* size: 0x0014 */

typedef enum _tagPSUACTION
{
  PSU_DEFAULT = 1,
  PSU_SECURITY_URL_ONLY = 2,
} tagPSUACTION, *PtagPSUACTION;

typedef enum _tagQUERYOPTION
{
  QUERY_EXPIRATION_DATE = 1,
  QUERY_TIME_OF_LAST_CHANGE = 2,
  QUERY_CONTENT_ENCODING = 3,
  QUERY_CONTENT_TYPE = 4,
  QUERY_REFRESH = 5,
  QUERY_RECOMBINE = 6,
  QUERY_CAN_NAVIGATE = 7,
  QUERY_USES_NETWORK = 8,
  QUERY_IS_CACHED = 9,
  QUERY_IS_INSTALLEDENTRY = 10,
  QUERY_IS_CACHED_OR_MAPPED = 11,
  QUERY_USES_CACHE = 12,
  QUERY_IS_SECURE = 13,
  QUERY_IS_SAFE = 14,
  QUERY_USES_HISTORYFOLDER = 15,
} tagQUERYOPTION, *PtagQUERYOPTION;

typedef struct _tagRemBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t* szExtraInfo;
  /* 0x0008 */ unsigned long grfBindInfoF;
  /* 0x000c */ unsigned long dwBindVerb;
  /* 0x0010 */ wchar_t* szCustomVerb;
  /* 0x0014 */ unsigned long cbstgmedData;
  /* 0x0018 */ unsigned long dwOptions;
  /* 0x001c */ unsigned long dwOptionsFlags;
  /* 0x0020 */ unsigned long dwCodePage;
  /* 0x0024 */ struct _REMSECURITY_ATTRIBUTES securityAttributes;
  /* 0x0030 */ struct _GUID iid;
  /* 0x0040 */ struct IUnknown* pUnk;
  /* 0x0044 */ unsigned long dwReserved;
} tagRemBINDINFO, *PtagRemBINDINFO; /* size: 0x0048 */

typedef struct _tagSCtxListIndex
{
  /* 0x0000 */ int idx;
  /* 0x0004 */ int next;
  /* 0x0008 */ int prev;
} tagSCtxListIndex, *PtagSCtxListIndex; /* size: 0x000c */

typedef enum _tagSHARE_EVENT
{
  SHARE_EVT_ITEM_SHARED = 0,
  SHARE_EVT_ITEM_UNSHARED = 1,
  SHARE_EVT_ERR_ITEM_LOCATION = 2,
  SHARE_EVT_ERR_NO_WRITE_DAC = 3,
  SHARE_EVT_ERR_INHERITED_PERM = 4,
} tagSHARE_EVENT, *PtagSHARE_EVENT;

typedef enum _tagSHARE_MODE
{
  MODE_SMB = 0,
  MODE_INPLACE = 1,
  MODE_CLASSIC = 2,
} tagSHARE_MODE, *PtagSHARE_MODE;

typedef struct _tagSOFTDISTINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwAdState;
  /* 0x000c */ wchar_t* szTitle;
  /* 0x0010 */ wchar_t* szAbstract;
  /* 0x0014 */ wchar_t* szHREF;
  /* 0x0018 */ unsigned long dwInstalledVersionMS;
  /* 0x001c */ unsigned long dwInstalledVersionLS;
  /* 0x0020 */ unsigned long dwUpdateVersionMS;
  /* 0x0024 */ unsigned long dwUpdateVersionLS;
  /* 0x0028 */ unsigned long dwAdvertisedVersionMS;
  /* 0x002c */ unsigned long dwAdvertisedVersionLS;
  /* 0x0030 */ unsigned long dwReserved;
} tagSOFTDISTINFO, *PtagSOFTDISTINFO; /* size: 0x0034 */

typedef struct _tagSTACKFRAME
{
  /* 0x0000 */ struct _tagADDRESS AddrPC;
  /* 0x000c */ struct _tagADDRESS AddrReturn;
  /* 0x0018 */ struct _tagADDRESS AddrFrame;
  /* 0x0024 */ struct _tagADDRESS AddrStack;
  /* 0x0030 */ void* FuncTableEntry;
  /* 0x0034 */ unsigned long Params[4];
  /* 0x0044 */ int Far;
  /* 0x0048 */ int Virtual;
  /* 0x004c */ unsigned long Reserved[3];
  /* 0x0058 */ struct _KDHELP KdHelp;
  /* 0x0098 */ struct _tagADDRESS AddrBStore;
} tagSTACKFRAME, *PtagSTACKFRAME; /* size: 0x00a4 */

typedef struct _tagSTACKFRAME64
{
  /* 0x0000 */ struct _tagADDRESS64 AddrPC;
  /* 0x0010 */ struct _tagADDRESS64 AddrReturn;
  /* 0x0020 */ struct _tagADDRESS64 AddrFrame;
  /* 0x0030 */ struct _tagADDRESS64 AddrStack;
  /* 0x0040 */ struct _tagADDRESS64 AddrBStore;
  /* 0x0050 */ void* FuncTableEntry;
  /* 0x0058 */ unsigned __int64 Params[4];
  /* 0x0078 */ int Far;
  /* 0x007c */ int Virtual;
  /* 0x0080 */ unsigned __int64 Reserved[3];
  /* 0x0098 */ struct _KDHELP64 KdHelp;
} tagSTACKFRAME64, *PtagSTACKFRAME64; /* size: 0x0108 */

typedef struct _tagStartParam
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ struct IBindCtx* pIBindCtx;
  /* 0x0014 */ struct IUnknown* pItf;
} tagStartParam, *PtagStartParam; /* size: 0x0018 */

typedef struct _tagpropertykey
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long pid;
} tagpropertykey, *Ptagpropertykey; /* size: 0x0014 */

typedef struct _userBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ unsigned long cbSize;
  /* 0x0018 */ unsigned char pBuffer[1];
  /* 0x0019 */ char __PADDING__[3];
} userBITMAP, *PuserBITMAP; /* size: 0x001c */

typedef struct _userCLIPFORMAT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
} userCLIPFORMAT, *PuserCLIPFORMAT; /* size: 0x0008 */

typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001
{
  union
  {
    /* 0x0000 */ unsigned long dwValue;
    /* 0x0000 */ wchar_t* pwszName;
  }; /* size: 0x0004 */
} userCLIPFORMAT::__MIDL_IWinTypes_0001, *PuserCLIPFORMAT::__MIDL_IWinTypes_0001; /* size: 0x0004 */

typedef struct _userFLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct _userSTGMEDIUM Stgmed;
} userFLAG_STGMEDIUM, *PuserFLAG_STGMEDIUM; /* size: 0x000c */

typedef struct _userHBITMAP
{
  /* 0x0000 */ long fContext;
  /* 0x0008 */ union _userHBITMAP::__MIDL_IWinTypes_0007 u;
} userHBITMAP, *PuserHBITMAP; /* size: 0x0010 */

typedef union _userHBITMAP::__MIDL_IWinTypes_0007
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _userBITMAP* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHBITMAP::__MIDL_IWinTypes_0007, *PuserHBITMAP::__MIDL_IWinTypes_0007; /* size: 0x0008 */

typedef struct _userHENHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0008 */ union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
} userHENHMETAFILE, *PuserHENHMETAFILE; /* size: 0x0010 */

typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHENHMETAFILE::__MIDL_IWinTypes_0006, *PuserHENHMETAFILE::__MIDL_IWinTypes_0006; /* size: 0x0008 */

typedef struct _userHGLOBAL
{
  /* 0x0000 */ long fContext;
  /* 0x0008 */ union _userHGLOBAL::__MIDL_IWinTypes_0003 u;
} userHGLOBAL, *PuserHGLOBAL; /* size: 0x0010 */

typedef union _userHGLOBAL::__MIDL_IWinTypes_0003
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _FLAGGED_BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHGLOBAL::__MIDL_IWinTypes_0003, *PuserHGLOBAL::__MIDL_IWinTypes_0003; /* size: 0x0008 */

typedef struct _userHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0008 */ union _userHMETAFILE::__MIDL_IWinTypes_0004 u;
} userHMETAFILE, *PuserHMETAFILE; /* size: 0x0010 */

typedef union _userHMETAFILE::__MIDL_IWinTypes_0004
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILE::__MIDL_IWinTypes_0004, *PuserHMETAFILE::__MIDL_IWinTypes_0004; /* size: 0x0008 */

typedef struct _userHMETAFILEPICT
{
  /* 0x0000 */ long fContext;
  /* 0x0008 */ union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
} userHMETAFILEPICT, *PuserHMETAFILEPICT; /* size: 0x0010 */

typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _remoteMETAFILEPICT* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILEPICT::__MIDL_IWinTypes_0005, *PuserHMETAFILEPICT::__MIDL_IWinTypes_0005; /* size: 0x0008 */

typedef struct _userHPALETTE
{
  /* 0x0000 */ long fContext;
  /* 0x0008 */ union _userHPALETTE::__MIDL_IWinTypes_0008 u;
} userHPALETTE, *PuserHPALETTE; /* size: 0x0010 */

typedef union _userHPALETTE::__MIDL_IWinTypes_0008
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct tagLOGPALETTE* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHPALETTE::__MIDL_IWinTypes_0008, *PuserHPALETTE::__MIDL_IWinTypes_0008; /* size: 0x0008 */

typedef struct _userSTGMEDIUM
{
  /* 0x0000 */ struct IUnknown* pUnkForRelease;
} userSTGMEDIUM, *PuserSTGMEDIUM; /* size: 0x0004 */

typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
} userSTGMEDIUM::_STGMEDIUM_UNION, *PuserSTGMEDIUM::_STGMEDIUM_UNION; /* size: 0x0008 */

typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003
{
  union
  {
    /* 0x0000 */ struct _userHMETAFILEPICT* hMetaFilePict;
    /* 0x0000 */ struct _userHENHMETAFILE* hHEnhMetaFile;
    /* 0x0000 */ struct _GDI_OBJECT* hGdiHandle;
    /* 0x0000 */ struct _userHGLOBAL* hGlobal;
    /* 0x0000 */ wchar_t* lpszFileName;
    /* 0x0000 */ struct _BYTE_BLOB* pstm;
    /* 0x0000 */ struct _BYTE_BLOB* pstg;
  }; /* size: 0x0004 */
} userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003, *PuserSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003; /* size: 0x0004 */

typedef class _variant_t
{
} variant_t, *Pvariant_t; /* size: 0x0010 */

typedef struct _wfinddata32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ wchar_t name[260];
} wfinddata32_t, *Pwfinddata32_t; /* size: 0x021c */

typedef struct _wfinddata32i64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ __int64 size;
  /* 0x0018 */ wchar_t name[260];
} wfinddata32i64_t, *Pwfinddata32i64_t; /* size: 0x0220 */

typedef struct _wfinddata64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddata64_t, *Pwfinddata64_t; /* size: 0x0230 */

typedef struct _wfinddata64i32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata64i32_t, *Pwfinddata64i32_t; /* size: 0x0230 */

typedef struct _wfinddata_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ wchar_t name[260];
} wfinddata_t, *Pwfinddata_t; /* size: 0x021c */

typedef struct _wfinddatai64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ __int64 size;
  /* 0x0018 */ wchar_t name[260];
} wfinddatai64_t, *Pwfinddatai64_t; /* size: 0x0220 */

typedef struct _wireBRECORD
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ struct IRecordInfo* pRecInfo;
  /* 0x000c */ unsigned char* pRecord;
} wireBRECORD, *PwireBRECORD; /* size: 0x0010 */

typedef struct _wireSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ struct _wireSAFEARRAY_UNION uArrayStructs;
  /* 0x0028 */ struct tagSAFEARRAYBOUND rgsabound[1];
} wireSAFEARRAY, *PwireSAFEARRAY; /* size: 0x0030 */

typedef struct _wireSAFEARRAY_UNION
{
  /* 0x0000 */ unsigned long sfType;
  /* 0x0004 */ union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
} wireSAFEARRAY_UNION, *PwireSAFEARRAY_UNION; /* size: 0x001c */

typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001
{
  union
  {
    /* 0x0000 */ struct _wireSAFEARR_BSTR BstrStr;
    /* 0x0000 */ struct _wireSAFEARR_UNKNOWN UnknownStr;
    /* 0x0000 */ struct _wireSAFEARR_DISPATCH DispatchStr;
    /* 0x0000 */ struct _wireSAFEARR_VARIANT VariantStr;
    /* 0x0000 */ struct _wireSAFEARR_BRECORD RecordStr;
    /* 0x0000 */ struct _wireSAFEARR_HAVEIID HaveIidStr;
    /* 0x0000 */ struct _BYTE_SIZEDARR ByteStr;
    /* 0x0000 */ struct _SHORT_SIZEDARR WordStr;
    /* 0x0000 */ struct _LONG_SIZEDARR LongStr;
    /* 0x0000 */ struct _HYPER_SIZEDARR HyperStr;
  }; /* size: 0x0018 */
} wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001, *PwireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001; /* size: 0x0018 */

typedef struct _wireSAFEARR_BRECORD
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct _wireBRECORD** aRecord;
} wireSAFEARR_BRECORD, *PwireSAFEARR_BRECORD; /* size: 0x0008 */

typedef struct _wireSAFEARR_BSTR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct _FLAGGED_WORD_BLOB** aBstr;
} wireSAFEARR_BSTR, *PwireSAFEARR_BSTR; /* size: 0x0008 */

typedef struct _wireSAFEARR_DISPATCH
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct IDispatch** apDispatch;
} wireSAFEARR_DISPATCH, *PwireSAFEARR_DISPATCH; /* size: 0x0008 */

typedef struct _wireSAFEARR_HAVEIID
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct IUnknown** apUnknown;
  /* 0x0008 */ struct _GUID iid;
} wireSAFEARR_HAVEIID, *PwireSAFEARR_HAVEIID; /* size: 0x0018 */

typedef struct _wireSAFEARR_UNKNOWN
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct IUnknown** apUnknown;
} wireSAFEARR_UNKNOWN, *PwireSAFEARR_UNKNOWN; /* size: 0x0008 */

typedef struct _wireSAFEARR_VARIANT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ struct _wireVARIANT** aVariant;
} wireSAFEARR_VARIANT, *PwireSAFEARR_VARIANT; /* size: 0x0008 */

typedef struct _wireVARIANT
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long rpcReserved;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ unsigned short wReserved1;
  /* 0x000c */ unsigned short wReserved2;
  /* 0x000e */ unsigned short wReserved3;
  union
  {
    /* 0x0010 */ __int64 llVal;
    /* 0x0010 */ long lVal;
    /* 0x0010 */ unsigned char bVal;
    /* 0x0010 */ short iVal;
    /* 0x0010 */ float fltVal;
    /* 0x0010 */ double dblVal;
    /* 0x0010 */ short boolVal;
    /* 0x0010 */ long scode;
    /* 0x0010 */ union tagCY cyVal;
    /* 0x0010 */ double date;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB* bstrVal;
    /* 0x0010 */ struct IUnknown* punkVal;
    /* 0x0010 */ struct IDispatch* pdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY** parray;
    /* 0x0010 */ struct _wireBRECORD* brecVal;
    /* 0x0010 */ unsigned char* pbVal;
    /* 0x0010 */ short* piVal;
    /* 0x0010 */ long* plVal;
    /* 0x0010 */ __int64* pllVal;
    /* 0x0010 */ float* pfltVal;
    /* 0x0010 */ double* pdblVal;
    /* 0x0010 */ short* pboolVal;
    /* 0x0010 */ long* pscode;
    /* 0x0010 */ union tagCY* pcyVal;
    /* 0x0010 */ double* pdate;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB** pbstrVal;
    /* 0x0010 */ struct IUnknown** ppunkVal;
    /* 0x0010 */ struct IDispatch** ppdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY*** pparray;
    /* 0x0010 */ struct _wireVARIANT** pvarVal;
    /* 0x0010 */ char cVal;
    /* 0x0010 */ unsigned short uiVal;
    /* 0x0010 */ unsigned long ulVal;
    /* 0x0010 */ unsigned __int64 ullVal;
    /* 0x0010 */ int intVal;
    /* 0x0010 */ unsigned int uintVal;
    /* 0x0010 */ struct tagDEC decVal;
    /* 0x0010 */ struct tagDEC* pdecVal;
    /* 0x0010 */ char* pcVal;
    /* 0x0010 */ unsigned short* puiVal;
    /* 0x0010 */ unsigned long* pulVal;
    /* 0x0010 */ unsigned __int64* pullVal;
    /* 0x0010 */ int* pintVal;
    struct
    {
      /* 0x0010 */ unsigned int* puintVal;
      /* 0x0014 */ long __PADDING__[3];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} wireVARIANT, *PwireVARIANT; /* size: 0x0020 */

typedef struct _xml_error
{
  /* 0x0000 */ unsigned int _nLine;
  /* 0x0004 */ wchar_t* _pchBuf;
  /* 0x0008 */ unsigned int _cchBuf;
  /* 0x000c */ unsigned int _ich;
  /* 0x0010 */ wchar_t* _pszFound;
  /* 0x0014 */ wchar_t* _pszExpected;
  /* 0x0018 */ unsigned long _reserved1;
  /* 0x001c */ unsigned long _reserved2;
} xml_error, *Pxml_error; /* size: 0x0020 */

enum eVSAEventFlags
{
  cVSAEventStandard = 0,
  cVSAEventDefaultSource = 1,
  cVSAEventDefaultTarget = 2,
  cVSAEventCanBreak = 4,
};

class ios
{
  union
  {
    /* 0x0000 */ const long basefield;
    /* 0x0000 */ const long adjustfield;
    struct
    {
      /* 0x0000 */ const long floatfield;
      /* 0x0004 */ class streambuf* bp;
      /* 0x0008 */ int state;
      /* 0x000c */ int ispecial;
      /* 0x0010 */ int ospecial;
      /* 0x0014 */ int isfx_special;
      /* 0x0018 */ int osfx_special;
      /* 0x001c */ int x_delbuf;
      /* 0x0020 */ class ostream* x_tie;
      /* 0x0024 */ long x_flags;
      /* 0x0028 */ int x_precision;
      /* 0x002c */ char x_fill;
      /* 0x0030 */ int x_width;
    }; /* size: 0x0031 */
    /* 0x0000 */ void* stdioflush /* function */;
    /* 0x0000 */ long x_maxbit;
    /* 0x0000 */ int x_curindex;
    /* 0x0000 */ int sunk_with_stdio;
    /* 0x0000 */ long x_statebuf[8];
    /* 0x0000 */ int fLockcInit;
    /* 0x0000 */ struct _CRT_CRITICAL_SECTION x_lockc;
  }; /* size: 0x0031 */
  /* 0x0034 */ int LockFlg;
  /* 0x0038 */ struct _CRT_CRITICAL_SECTION x_lock;
}; /* size: 0x0050 */

typedef enum _TAG_UNNAMED_36
{
  skipping = 0,
  tied = 1,
} TAG_UNNAMED_36, *PTAG_UNNAMED_36;

typedef enum _TAG_UNNAMED_37
{
  skipws = 1,
  left = 2,
  right = 4,
  internal = 8,
  dec = 16,
  oct = 32,
  hex = 64,
  showbase = 128,
  showpoint = 256,
  uppercase = 512,
  showpos = 1024,
  scientific = 2048,
  fixed = 4096,
  unitbuf = 8192,
  stdio = 16384,
} TAG_UNNAMED_37, *PTAG_UNNAMED_37;

enum ios::io_state
{
  goodbit = 0,
  eofbit = 1,
  failbit = 2,
  badbit = 4,
};

enum ios::open_mode
{
  in = 1,
  out = 2,
  ate = 4,
  app = 8,
  trunc = 16,
  nocreate = 32,
  noreplace = 64,
  binary = 128,
};

enum ios::seek_dir
{
  beg = 0,
  cur = 1,
  end = 2,
};

class iostream
{
}; /* size: 0x0064 */

class istream
{
  /* 0x0004 */ int _fGline;
  /* 0x0008 */ int x_gcount;
}; /* size: 0x005c */

class istream_withassign
{
}; /* size: 0x005c */

struct lconv;

struct localeinfo_struct
{
  /* 0x0000 */ struct threadlocaleinfostruct* locinfo;
  /* 0x0004 */ struct threadmbcinfostruct* mbcinfo;
}; /* size: 0x0008 */

class ostream
{
  /* 0x0004 */ int x_floatused;
}; /* size: 0x0058 */

class ostream_withassign
{
}; /* size: 0x0058 */

struct pUnkListElement
{
  /* 0x0000 */ struct IUnknown* _pUnk;
  /* 0x0004 */ struct pUnkListElement* _next;
}; /* size: 0x0008 */

struct provider_info
{
  /* 0x0000 */ void* pi_R0_1val /* function */;
  /* 0x0004 */ void* pi_R0_allvals /* function */;
  /* 0x0008 */ void* pi_R3_1val /* function */;
  /* 0x000c */ void* pi_R3_allvals /* function */;
  /* 0x0010 */ unsigned long pi_flags;
  /* 0x0014 */ void* pi_key_context;
}; /* size: 0x0018 */

struct pvalueA
{
  /* 0x0000 */ char* pv_valuename;
  /* 0x0004 */ int pv_valuelen;
  /* 0x0008 */ void* pv_value_context;
  /* 0x000c */ unsigned long pv_type;
}; /* size: 0x0010 */

struct pvalueW
{
  /* 0x0000 */ wchar_t* pv_valuename;
  /* 0x0004 */ int pv_valuelen;
  /* 0x0008 */ void* pv_value_context;
  /* 0x000c */ unsigned long pv_type;
}; /* size: 0x0010 */

struct stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
}; /* size: 0x0024 */

struct std::nothrow_t
{
}; /* size: 0x0001 */

class streambuf
{
  /* 0x0004 */ int _fAlloc;
  /* 0x0008 */ int _fUnbuf;
  /* 0x000c */ int x_lastc;
  /* 0x0010 */ char* _base;
  /* 0x0014 */ char* _ebuf;
  /* 0x0018 */ char* _pbase;
  /* 0x001c */ char* _pptr;
  /* 0x0020 */ char* _epptr;
  /* 0x0024 */ char* _eback;
  /* 0x0028 */ char* _gptr;
  /* 0x002c */ char* _egptr;
  /* 0x0030 */ int LockFlg;
  /* 0x0034 */ struct _CRT_CRITICAL_SECTION x_lock;
}; /* size: 0x004c */

struct tagABORTPATH
{
  /* 0x0000 */ struct tagEMR emr;
}; /* size: 0x0008 */

struct tagACCEL
{
  /* 0x0000 */ unsigned char fVirt;
  /* 0x0002 */ unsigned short key;
  /* 0x0004 */ unsigned short cmd;
}; /* size: 0x0006 */

struct tagACCESSTIMEOUT
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iTimeOutMSec;
}; /* size: 0x000c */

struct tagACL_DESCRIPTOR
{
  /* 0x0000 */ void* pACLBuffer;
  /* 0x0004 */ unsigned long ulACLBufferSize;
  /* 0x0008 */ unsigned long ulSIDSize;
  /* 0x000c */ int bDirtyACL;
  /* 0x0010 */ struct _SECURITY_DESCRIPTOR SecDesc;
}; /* size: 0x0024 */

struct tagACTCTXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const char* lpSource;
  /* 0x000c */ unsigned short wProcessorArchitecture;
  /* 0x000e */ unsigned short wLangId;
  /* 0x0010 */ const char* lpAssemblyDirectory;
  /* 0x0014 */ const char* lpResourceName;
  /* 0x0018 */ const char* lpApplicationName;
  /* 0x001c */ struct HINSTANCE__* hModule;
}; /* size: 0x0020 */

struct tagACTCTXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* lpSource;
  /* 0x000c */ unsigned short wProcessorArchitecture;
  /* 0x000e */ unsigned short wLangId;
  /* 0x0010 */ const wchar_t* lpAssemblyDirectory;
  /* 0x0014 */ const wchar_t* lpResourceName;
  /* 0x0018 */ const wchar_t* lpApplicationName;
  /* 0x001c */ struct HINSTANCE__* hModule;
}; /* size: 0x0020 */

struct tagACTCTX_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x000c */ unsigned long ulLength;
  /* 0x0010 */ void* lpSectionGlobalData;
  /* 0x0014 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0018 */ void* lpSectionBase;
  /* 0x001c */ unsigned long ulSectionTotalLength;
  /* 0x0020 */ void* hActCtx;
  /* 0x0024 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0028 */ unsigned long ulFlags;
  /* 0x002c */ struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
}; /* size: 0x0040 */

struct tagACTCTX_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x000c */ unsigned long ulLength;
  /* 0x0010 */ void* lpSectionGlobalData;
  /* 0x0014 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0018 */ void* lpSectionBase;
  /* 0x001c */ unsigned long ulSectionTotalLength;
  /* 0x0020 */ void* hActCtx;
  /* 0x0024 */ unsigned long ulAssemblyRosterIndex;
}; /* size: 0x0028 */

struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ void* lpInformation;
  /* 0x0004 */ void* lpSectionBase;
  /* 0x0008 */ unsigned long ulSectionLength;
  /* 0x000c */ void* lpSectionGlobalDataBase;
  /* 0x0010 */ unsigned long ulSectionGlobalDataLength;
}; /* size: 0x0014 */

enum tagACTIVATEFLAGS
{
  ACTIVATE_WINDOWLESS = 1,
};

enum tagACTIVATION_FLAGS
{
  ACTVFLAGS_NONE = 0,
  ACTVFLAGS_DISABLE_AAA = 2,
  ACTVFLAGS_ACTIVATE_32_BIT_SERVER = 4,
  ACTVFLAGS_ACTIVATE_64_BIT_SERVER = 8,
  ACTVFLAGS_SERVERSIDE_ACTIVATION = 16,
  ACTVFLAGS_NO_FAILURE_LOG = 32,
  ACTVFLAGS_ENABLE_CLOAKING = 64,
  ACTVFLAGS_REG_CATALOG_ONLY = 256,
  ACTVFLAGS_SXS_CATALOG_ONLY = 512,
};

enum tagACTIVATION_STAGE
{
  CLIENT_CONTEXT_STAGE = 1,
  CLIENT_MACHINE_STAGE = 2,
  SERVER_MACHINE_STAGE = 3,
  SERVER_PROCESS_STAGE = 4,
  SERVER_CONTEXT_STAGE = 5,
};

enum tagADVF
{
  ADVF_NODATA = 1,
  ADVF_PRIMEFIRST = 2,
  ADVF_ONLYONCE = 4,
  ADVF_DATAONSTOP = 64,
  ADVFCACHE_NOHANDLER = 8,
  ADVFCACHE_FORCEBUILTIN = 16,
  ADVFCACHE_ONSAVE = 32,
};

struct tagALTTABINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int cItems;
  /* 0x0008 */ int cColumns;
  /* 0x000c */ int cRows;
  /* 0x0010 */ int iColFocus;
  /* 0x0014 */ int iRowFocus;
  /* 0x0018 */ int cxItem;
  /* 0x001c */ int cyItem;
  /* 0x0020 */ struct tagPOINT ptStart;
}; /* size: 0x0028 */

struct tagANIMATIONINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iMinAnimate;
}; /* size: 0x0008 */

enum tagAPTKIND
{
  APTKIND_NEUTRALTHREADED = 1,
  APTKIND_MULTITHREADED = 2,
  APTKIND_APARTMENTTHREADED = 4,
};

struct tagARRAYDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdescElem;
  /* 0x0008 */ unsigned short cDims;
  /* 0x000c */ struct tagSAFEARRAYBOUND rgbounds[1];
}; /* size: 0x0014 */

enum tagASSOCIATIONLEVEL
{
  AL_MACHINE = 0,
  AL_EFFECTIVE = 1,
  AL_USER = 2,
};

enum tagASSOCIATIONTYPE
{
  AT_FILEEXTENSION = 0,
  AT_URLPROTOCOL = 1,
  AT_STARTMENUCLIENT = 2,
  AT_MIMETYPE = 3,
};

enum tagASYNCQUERY_STATUS
{
  QUERY_INPROGRESS = 0,
  QUERY_DONE = 1,
  QUERY_FAILED = 2,
  QUERY_STATUS_INVALID = 3,
};

struct tagAUDIODESCRIPTION
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int Enabled;
  /* 0x0008 */ unsigned long Locale;
}; /* size: 0x000c */

enum tagAWSCTYPE
{
  AWS_SCURVE = 0,
  AWS_LINEAR = 1,
};

struct tagAXESLISTA
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOA axlAxisInfo[16];
}; /* size: 0x0188 */

struct tagAXESLISTW
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOW axlAxisInfo[16];
}; /* size: 0x0288 */

struct tagAXISINFOA
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ unsigned char axAxisName[16];
}; /* size: 0x0018 */

struct tagAXISINFOW
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ wchar_t axAxisName[16];
}; /* size: 0x0028 */

struct tagActivationContextInfoData
{
  /* 0x0000 */ int clientOK;
  /* 0x0004 */ int bReserved1;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwReserved2;
  /* 0x0010 */ struct tagMInterfacePointer* pIFDClientCtx;
  /* 0x0014 */ struct tagMInterfacePointer* pIFDPrototypeCtx;
}; /* size: 0x0018 */

enum tagApplicationType
{
  ServerApplication = 0,
  LibraryApplication = 1,
};

struct tagAspectInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

enum tagAspectInfoFlag
{
  DVASPECTINFOFLAG_CANOPTIMIZE = 1,
};

enum tagBANDSITECID
{
  BSID_BANDADDED = 0,
  BSID_BANDREMOVED = 1,
};

union tagBINDPTR
{
  union
  {
    /* 0x0000 */ struct tagFUNCDESC* lpfuncdesc;
    /* 0x0000 */ struct tagVARDESC* lpvardesc;
    /* 0x0000 */ struct ITypeComp* lptcomp;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

enum tagBINDSPEED
{
  BINDSPEED_INDEFINITE = 1,
  BINDSPEED_MODERATE = 2,
  BINDSPEED_IMMEDIATE = 3,
};

enum tagBINDSTATUS
{
  BINDSTATUS_FINDINGRESOURCE = 1,
  BINDSTATUS_CONNECTING = 2,
  BINDSTATUS_REDIRECTING = 3,
  BINDSTATUS_BEGINDOWNLOADDATA = 4,
  BINDSTATUS_DOWNLOADINGDATA = 5,
  BINDSTATUS_ENDDOWNLOADDATA = 6,
  BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
  BINDSTATUS_INSTALLINGCOMPONENTS = 8,
  BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
  BINDSTATUS_USINGCACHEDCOPY = 10,
  BINDSTATUS_SENDINGREQUEST = 11,
  BINDSTATUS_CLASSIDAVAILABLE = 12,
  BINDSTATUS_MIMETYPEAVAILABLE = 13,
  BINDSTATUS_CACHEFILENAMEAVAILABLE = 14,
  BINDSTATUS_BEGINSYNCOPERATION = 15,
  BINDSTATUS_ENDSYNCOPERATION = 16,
  BINDSTATUS_BEGINUPLOADDATA = 17,
  BINDSTATUS_UPLOADINGDATA = 18,
  BINDSTATUS_ENDUPLOADDATA = 19,
  BINDSTATUS_PROTOCOLCLASSID = 20,
  BINDSTATUS_ENCODING = 21,
  BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22,
  BINDSTATUS_CLASSINSTALLLOCATION = 23,
  BINDSTATUS_DECODING = 24,
  BINDSTATUS_LOADINGMIMEHANDLER = 25,
  BINDSTATUS_CONTENTDISPOSITIONATTACH = 26,
  BINDSTATUS_FILTERREPORTMIMETYPE = 27,
  BINDSTATUS_CLSIDCANINSTANTIATE = 28,
  BINDSTATUS_IUNKNOWNAVAILABLE = 29,
  BINDSTATUS_DIRECTBIND = 30,
  BINDSTATUS_RAWMIMETYPE = 31,
  BINDSTATUS_PROXYDETECTING = 32,
  BINDSTATUS_ACCEPTRANGES = 33,
  BINDSTATUS_COOKIE_SENT = 34,
  BINDSTATUS_COMPACT_POLICY_RECEIVED = 35,
  BINDSTATUS_COOKIE_SUPPRESSED = 36,
  BINDSTATUS_COOKIE_STATE_UNKNOWN = 37,
  BINDSTATUS_COOKIE_STATE_ACCEPT = 38,
  BINDSTATUS_COOKIE_STATE_REJECT = 39,
  BINDSTATUS_COOKIE_STATE_PROMPT = 40,
  BINDSTATUS_COOKIE_STATE_LEASH = 41,
  BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42,
  BINDSTATUS_POLICY_HREF = 43,
  BINDSTATUS_P3P_HEADER = 44,
  BINDSTATUS_SESSION_COOKIE_RECEIVED = 45,
  BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46,
  BINDSTATUS_SESSION_COOKIES_ALLOWED = 47,
  BINDSTATUS_CACHECONTROL = 48,
  BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49,
  BINDSTATUS_MIMETEXTPLAINMISMATCH = 50,
  BINDSTATUS_PUBLISHERAVAILABLE = 51,
  BINDSTATUS_DISPLAYNAMEAVAILABLE = 52,
  BINDSTATUS_SSLUX_NAVBLOCKED = 53,
};

enum tagBINDSTRING
{
  BINDSTRING_HEADERS = 1,
  BINDSTRING_ACCEPT_MIMES = 2,
  BINDSTRING_EXTRA_URL = 3,
  BINDSTRING_LANGUAGE = 4,
  BINDSTRING_USERNAME = 5,
  BINDSTRING_PASSWORD = 6,
  BINDSTRING_UA_PIXELS = 7,
  BINDSTRING_UA_COLOR = 8,
  BINDSTRING_OS = 9,
  BINDSTRING_USER_AGENT = 10,
  BINDSTRING_ACCEPT_ENCODINGS = 11,
  BINDSTRING_POST_COOKIE = 12,
  BINDSTRING_POST_DATA_MIME = 13,
  BINDSTRING_URL = 14,
  BINDSTRING_IID = 15,
  BINDSTRING_FLAG_BIND_TO_OBJECT = 16,
  BINDSTRING_PTR_BIND_CONTEXT = 17,
};

enum tagBIND_FLAGS
{
  BIND_MAYBOTHERUSER = 1,
  BIND_JUSTTESTEXISTENCE = 2,
};

struct tagBIND_OPTS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long grfFlags;
  /* 0x0008 */ unsigned long grfMode;
  /* 0x000c */ unsigned long dwTickCountDeadline;
}; /* size: 0x0010 */

struct tagBIND_OPTS2
{
  /* 0x0010 */ unsigned long dwTrackFlags;
  /* 0x0014 */ unsigned long dwClassContext;
  /* 0x0018 */ unsigned long locale;
  /* 0x001c */ struct _COSERVERINFO* pServerInfo;
}; /* size: 0x0020 */

struct tagBIND_OPTS3
{
  /* 0x0020 */ struct HWND__* hwnd;
}; /* size: 0x0024 */

struct tagBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ void* bmBits;
}; /* size: 0x0018 */

struct tagBITMAPCOREHEADER
{
  /* 0x0000 */ unsigned long bcSize;
  /* 0x0004 */ unsigned short bcWidth;
  /* 0x0006 */ unsigned short bcHeight;
  /* 0x0008 */ unsigned short bcPlanes;
  /* 0x000a */ unsigned short bcBitCount;
}; /* size: 0x000c */

struct tagBITMAPCOREINFO
{
  /* 0x0000 */ struct tagBITMAPCOREHEADER bmciHeader;
  /* 0x000c */ struct tagRGBTRIPLE bmciColors[1];
  /* 0x000f */ char __PADDING__[1];
}; /* size: 0x0010 */

struct tagBITMAPFILEHEADER
{
  /* 0x0000 */ unsigned short bfType;
  /* 0x0002 */ unsigned long bfSize;
  /* 0x0006 */ unsigned short bfReserved1;
  /* 0x0008 */ unsigned short bfReserved2;
  /* 0x000a */ unsigned long bfOffBits;
}; /* size: 0x000e */

struct tagBITMAPINFO
{
  /* 0x0000 */ struct tagBITMAPINFOHEADER bmiHeader;
  /* 0x0028 */ struct tagRGBQUAD bmiColors[1];
}; /* size: 0x002c */

struct tagBITMAPINFOHEADER
{
  /* 0x0000 */ unsigned long biSize;
  /* 0x0004 */ long biWidth;
  /* 0x0008 */ long biHeight;
  /* 0x000c */ unsigned short biPlanes;
  /* 0x000e */ unsigned short biBitCount;
  /* 0x0010 */ unsigned long biCompression;
  /* 0x0014 */ unsigned long biSizeImage;
  /* 0x0018 */ long biXPelsPerMeter;
  /* 0x001c */ long biYPelsPerMeter;
  /* 0x0020 */ unsigned long biClrUsed;
  /* 0x0024 */ unsigned long biClrImportant;
}; /* size: 0x0028 */

struct tagBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned char* pBlobData;
}; /* size: 0x0008 */

enum tagBPASCODE
{
  BPAS_START = 0,
  BPAS_INDETERMINATE = 1,
  BPAS_STOP = 2,
};

struct tagBSTRBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned char* pData;
}; /* size: 0x0008 */

struct tagBYREFHDR
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long ProcessId;
}; /* size: 0x0008 */

struct tagBYVALHDR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ int Frozen;
}; /* size: 0x0008 */

struct tagBinaryParam
{
  /* 0x0000 */ void* Buffer;
  /* 0x0004 */ short Size;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

struct tagCABOOL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ short* pElems;
}; /* size: 0x0008 */

struct tagCABSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ wchar_t** pElems;
}; /* size: 0x0008 */

struct tagCABSTRBLOB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ struct tagBSTRBLOB* pElems;
}; /* size: 0x0008 */

struct tagCAC
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ char* pElems;
}; /* size: 0x0008 */

struct tagCACLIPDATA
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ struct tagCLIPDATA* pElems;
}; /* size: 0x0008 */

struct tagCACLSID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ struct _GUID* pElems;
}; /* size: 0x0008 */

struct tagCACY
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ union tagCY* pElems;
}; /* size: 0x0008 */

struct tagCADATE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ double* pElems;
}; /* size: 0x0008 */

struct tagCADBL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ double* pElems;
}; /* size: 0x0008 */

struct tagCADWORD
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ unsigned long* pElems;
}; /* size: 0x0008 */

struct tagCAFILETIME
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ struct _FILETIME* pElems;
}; /* size: 0x0008 */

struct tagCAFLT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ float* pElems;
}; /* size: 0x0008 */

struct tagCAH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ union _LARGE_INTEGER* pElems;
}; /* size: 0x0008 */

struct tagCAI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ short* pElems;
}; /* size: 0x0008 */

struct tagCAL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long* pElems;
}; /* size: 0x0008 */

enum tagCALLCATEGORY
{
  CALLCAT_NOCALL = 0,
  CALLCAT_SYNCHRONOUS = 1,
  CALLCAT_ASYNC = 2,
  CALLCAT_INPUTSYNC = 3,
  CALLCAT_INTERNALSYNC = 4,
  CALLCAT_INTERNALINPUTSYNC = 5,
  CALLCAT_SCMCALL = 6,
};

enum tagCALLCONV
{
  CC_FASTCALL = 0,
  CC_CDECL = 1,
  CC_MSCPASCAL = 2,
  CC_PASCAL = 2,
  CC_MACPASCAL = 3,
  CC_STDCALL = 4,
  CC_FPFASTCALL = 5,
  CC_SYSCALL = 6,
  CC_MPWCDECL = 7,
  CC_MPWPASCAL = 8,
  CC_MAX = 9,
};

enum tagCALLSTATE
{
  CALLSTATE_NOT_IN_CALL = -1,
  CALLSTATE_DATA_NOT_AVAILABLE = 0,
};

enum tagCALLTYPE
{
  CALLTYPE_TOPLEVEL = 1,
  CALLTYPE_NESTED = 2,
  CALLTYPE_ASYNC = 3,
  CALLTYPE_TOPLEVEL_CALLPENDING = 4,
  CALLTYPE_ASYNC_CALLPENDING = 5,
};

struct tagCALPOLESTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ wchar_t** pElems;
}; /* size: 0x0008 */

struct tagCALPSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ char** pElems;
}; /* size: 0x0008 */

struct tagCALPWSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ wchar_t** pElems;
}; /* size: 0x0008 */

struct tagCANDIDATEFORM
{
  /* 0x0000 */ unsigned long dwIndex;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ struct tagPOINT ptCurrentPos;
  /* 0x0010 */ struct tagRECT rcArea;
}; /* size: 0x0020 */

struct tagCANDIDATELIST
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ unsigned long dwCount;
  /* 0x000c */ unsigned long dwSelection;
  /* 0x0010 */ unsigned long dwPageStart;
  /* 0x0014 */ unsigned long dwPageSize;
  /* 0x0018 */ unsigned long dwOffset[1];
}; /* size: 0x001c */

struct tagCAPROPVARIANT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ struct tagPROPVARIANT* pElems;
}; /* size: 0x0008 */

struct tagCASCODE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long* pElems;
}; /* size: 0x0008 */

struct tagCATEGORYINFO
{
  /* 0x0000 */ struct _GUID catid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ wchar_t szDescription[128];
}; /* size: 0x0114 */

struct tagCAUB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ unsigned char* pElems;
}; /* size: 0x0008 */

struct tagCAUH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ union _ULARGE_INTEGER* pElems;
}; /* size: 0x0008 */

struct tagCAUI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ unsigned short* pElems;
}; /* size: 0x0008 */

struct tagCAUL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ unsigned long* pElems;
}; /* size: 0x0008 */

struct tagCAUUID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ struct _GUID* pElems;
}; /* size: 0x0008 */

struct tagCBTACTIVATESTRUCT
{
  /* 0x0000 */ int fMouse;
  /* 0x0004 */ struct HWND__* hWndActive;
}; /* size: 0x0008 */

struct tagCBT_CREATEWNDA
{
  /* 0x0000 */ struct tagCREATESTRUCTA* lpcs;
  /* 0x0004 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0008 */

struct tagCBT_CREATEWNDW
{
  /* 0x0000 */ struct tagCREATESTRUCTW* lpcs;
  /* 0x0004 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0008 */

enum tagCCF_FLAGS
{
  CCF_NONE = 0,
  CCF_AGGREGATABLE = 1,
};

struct tagCFEntry
{
  /* 0x0000 */ const struct _GUID* pclsid;
  /* 0x0004 */ void* pfnCI /* function */;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

enum tagCHANGEKIND
{
  CHANGEKIND_ADDMEMBER = 0,
  CHANGEKIND_DELETEMEMBER = 1,
  CHANGEKIND_SETNAMES = 2,
  CHANGEKIND_SETDOCUMENTATION = 3,
  CHANGEKIND_GENERAL = 4,
  CHANGEKIND_INVALIDATE = 5,
  CHANGEKIND_CHANGEFAILED = 6,
  CHANGEKIND_MAX = 7,
};

struct tagCHARSETINFO
{
  /* 0x0000 */ unsigned int ciCharset;
  /* 0x0004 */ unsigned int ciACP;
  /* 0x0008 */ struct tagFONTSIGNATURE fs;
}; /* size: 0x0020 */

struct tagCIEXYZ
{
  /* 0x0000 */ long ciexyzX;
  /* 0x0004 */ long ciexyzY;
  /* 0x0008 */ long ciexyzZ;
}; /* size: 0x000c */

struct tagCInterfaceProxyHeader
{
  /* 0x0000 */ const void* pStublessProxyInfo;
  /* 0x0004 */ const struct _GUID* piid;
}; /* size: 0x0008 */

struct tagCInterfaceProxyVtbl
{
  /* 0x0000 */ struct tagCInterfaceProxyHeader header;
  /* 0x0008 */ void** Vtbl /* zero-length array */;
}; /* size: 0x0008 */

struct tagCInterfaceStubHeader
{
  /* 0x0000 */ const struct _GUID* piid;
  /* 0x0004 */ const struct _MIDL_SERVER_INFO_* pServerInfo;
  /* 0x0008 */ unsigned long DispatchTableCount;
  /* 0x000c */ void* const* pDispatchTable /* function */;
}; /* size: 0x0010 */

struct tagCInterfaceStubVtbl
{
  /* 0x0000 */ struct tagCInterfaceStubHeader header;
  /* 0x0010 */ struct IRpcStubBufferVtbl Vtbl;
}; /* size: 0x0038 */

struct tagCLEANLOCALSTORAGE
{
  /* 0x0000 */ struct IUnknown* pInterface;
  /* 0x0004 */ void* pStorage;
  /* 0x0008 */ unsigned long flags;
}; /* size: 0x000c */

struct tagCLIENTCREATESTRUCT
{
  /* 0x0000 */ void* hWindowMenu;
  /* 0x0004 */ unsigned int idFirstChild;
}; /* size: 0x0008 */

struct tagCLIPDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long ulClipFmt;
  /* 0x0008 */ unsigned char* pClipData;
}; /* size: 0x000c */

enum tagCLIPWINDOWFLAGS
{
  CLIP_QUERY = 0,
  CLIP_CREATEIFNOTTHERE = 1,
};

enum tagCLIPWNDFLAGS
{
  CLIPWND_REMOVEFROMCLIPBOARD = 1,
  CLIPWND_IGNORECLIPBOARD = 2,
  CLIPWND_DONTCALLAPP = 4,
};

enum tagCLSCTX
{
  CLSCTX_INPROC_SERVER = 1,
  CLSCTX_INPROC_HANDLER = 2,
  CLSCTX_LOCAL_SERVER = 4,
  CLSCTX_INPROC_SERVER16 = 8,
  CLSCTX_REMOTE_SERVER = 16,
  CLSCTX_INPROC_HANDLER16 = 32,
  CLSCTX_RESERVED1 = 64,
  CLSCTX_RESERVED2 = 128,
  CLSCTX_RESERVED3 = 256,
  CLSCTX_RESERVED4 = 512,
  CLSCTX_NO_CODE_DOWNLOAD = 1024,
  CLSCTX_RESERVED5 = 2048,
  CLSCTX_NO_CUSTOM_MARSHAL = 4096,
  CLSCTX_ENABLE_CODE_DOWNLOAD = 8192,
  CLSCTX_NO_FAILURE_LOG = 16384,
  CLSCTX_DISABLE_AAA = 0xffff8000,
  CLSCTX_ENABLE_AAA = 0x10000,
  CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
  CLSCTX_ACTIVATE_32_BIT_SERVER = 0x40000,
  CLSCTX_ACTIVATE_64_BIT_SERVER = 0x80000,
  CLSCTX_ENABLE_CLOAKING = 0x100000,
  CLSCTX_PS_DLL = -2147483648,
};

enum tagCMLFLAGS
{
  CMLF_QUITRECEIVED = 1,
  CMLF_CLEAREDQUEUE = 2,
  CMLF_CHECKEDTOKEN = 4,
};

enum tagCOINIT
{
  COINIT_APARTMENTTHREADED = 2,
  COINIT_MULTITHREADED = 0,
  COINIT_DISABLE_OLE1DDE = 4,
  COINIT_SPEED_OVER_MEMORY = 8,
};

struct tagCOLORADJUSTMENT
{
  /* 0x0000 */ unsigned short caSize;
  /* 0x0002 */ unsigned short caFlags;
  /* 0x0004 */ unsigned short caIlluminantIndex;
  /* 0x0006 */ unsigned short caRedGamma;
  /* 0x0008 */ unsigned short caGreenGamma;
  /* 0x000a */ unsigned short caBlueGamma;
  /* 0x000c */ unsigned short caReferenceBlack;
  /* 0x000e */ unsigned short caReferenceWhite;
  /* 0x0010 */ short caContrast;
  /* 0x0012 */ short caBrightness;
  /* 0x0014 */ short caColorfulness;
  /* 0x0016 */ short caRedGreenTint;
}; /* size: 0x0018 */

struct tagCOLORCORRECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPalette;
  /* 0x000c */ unsigned long nFirstEntry;
  /* 0x0010 */ unsigned long nPalEntries;
  /* 0x0014 */ unsigned long nReserved;
}; /* size: 0x0018 */

struct tagCOLORMATCHTOTARGET
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwAction;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long cbName;
  /* 0x0014 */ unsigned long cbData;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

enum tagCOLUMN_VISIBILITY
{
  CV_INVALID = 0,
  CV_VISIBLE = 1,
  CV_PRIMARYOVERFLOW = 2,
  CV_SECONDARYOVERFLOW = 3,
  CV_HIDDEN = 4,
};

struct tagCOMBOBOXINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcItem;
  /* 0x0014 */ struct tagRECT rcButton;
  /* 0x0024 */ unsigned long stateButton;
  /* 0x0028 */ struct HWND__* hwndCombo;
  /* 0x002c */ struct HWND__* hwndItem;
  /* 0x0030 */ struct HWND__* hwndList;
}; /* size: 0x0034 */

enum tagCOMCALLTYPE
{
  CALLTYPE_OUTGOING_CALL = 0,
  CALLTYPE_INCOMING_CALL = 1,
  CALLTYPE_ACTIVATION = 2,
};

struct tagCOMPAREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ struct HWND__* hwndItem;
  /* 0x000c */ unsigned int itemID1;
  /* 0x0010 */ unsigned long itemData1;
  /* 0x0014 */ unsigned int itemID2;
  /* 0x0018 */ unsigned long itemData2;
  /* 0x001c */ unsigned long dwLocaleId;
}; /* size: 0x0020 */

struct tagCOMPOSITIONFORM
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ struct tagPOINT ptCurrentPos;
  /* 0x000c */ struct tagRECT rcArea;
}; /* size: 0x001c */

enum tagCOMSD
{
  SD_LAUNCHPERMISSIONS = 0,
  SD_ACCESSPERMISSIONS = 1,
  SD_LAUNCHRESTRICTIONS = 2,
  SD_ACCESSRESTRICTIONS = 3,
};

struct tagCOMVERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
}; /* size: 0x0004 */

enum tagCONDITION_OPERATION
{
  COP_IMPLICIT = 0,
  COP_EQUAL = 1,
  COP_NOTEQUAL = 2,
  COP_LESSTHAN = 3,
  COP_GREATERTHAN = 4,
  COP_LESSTHANOREQUAL = 5,
  COP_GREATERTHANOREQUAL = 6,
  COP_VALUE_STARTSWITH = 7,
  COP_VALUE_ENDSWITH = 8,
  COP_VALUE_CONTAINS = 9,
  COP_VALUE_NOTCONTAINS = 10,
  COP_DOSWILDCARDS = 11,
  COP_WORD_EQUAL = 12,
  COP_WORD_STARTSWITH = 13,
  COP_APPLICATION_SPECIFIC = 14,
};

enum tagCONDITION_TYPE
{
  CT_AND_CONDITION = 0,
  CT_OR_CONDITION = 1,
  CT_NOT_CONDITION = 2,
  CT_LEAF_CONDITION = 3,
};

enum tagCONFIRMATIONRESPONSE
{
  CONFRES_CONTINUE = 0,
  CONFRES_SKIP = 1,
  CONFRES_RETRY = 2,
  CONFRES_RENAME = 3,
  CONFRES_CANCEL = 4,
  CONFRES_UNDO = 5,
  CONFRES_RENAME_LEFT = 3,
  CONFRES_RENAME_RIGHT = 6,
  CONFRES_ELEVATE = 7,
  CONFRES_CLOSE = 8,
};

struct tagCONNECTDATA
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0004 */ unsigned long dwCookie;
}; /* size: 0x0008 */

enum tagCONTEXTEVENT
{
  CONTEXTEVENT_NONE = 0,
  CONTEXTEVENT_CALL = 1,
  CONTEXTEVENT_ENTER = 2,
  CONTEXTEVENT_LEAVE = 4,
  CONTEXTEVENT_RETURN = 8,
  CONTEXTEVENT_CALLFILLBUFFER = 16,
  CONTEXTEVENT_ENTERWITHBUFFER = 32,
  CONTEXTEVENT_LEAVEFILLBUFFER = 64,
  CONTEXTEVENT_RETURNWITHBUFFER = 128,
  CONTEXTEVENT_BEGINCALL = 256,
  CONTEXTEVENT_BEGINENTER = 512,
  CONTEXTEVENT_BEGINLEAVE = 1024,
  CONTEXTEVENT_BEGINRETURN = 2048,
  CONTEXTEVENT_FINISHCALL = 4096,
  CONTEXTEVENT_FINISHENTER = 8192,
  CONTEXTEVENT_FINISHLEAVE = 16384,
  CONTEXTEVENT_FINISHRETURN = 0xffff8000,
  CONTEXTEVENT_BEGINCALLFILLBUFFER = 0x10000,
  CONTEXTEVENT_BEGINENTERWITHBUFFER = 0x20000,
  CONTEXTEVENT_FINISHLEAVEFILLBUFFER = 0x40000,
  CONTEXTEVENT_FINISHRETURNWITHBUFFER = 0x80000,
  CONTEXTEVENT_LEAVEEXCEPTION = 0x100000,
  CONTEXTEVENT_LEAVEEXCEPTIONFILLBUFFER = 0x200000,
  CONTEXTEVENT_RETURNEXCEPTION = 0x400000,
  CONTEXTEVENT_RETURNEXCEPTIONWITHBUFFER = 0x800000,
  CONTEXTEVENT_ADDREFPOLICY = 0x10000000,
  CONTEXTEVENT_RELEASEPOLICY = 0x20000000,
};

struct tagCONTEXTHEADER
{
  /* 0x0000 */ struct tagCTXVERSION Version;
  /* 0x0004 */ struct tagCTXCOMMONHDR CmnHdr;
  union
  {
    /* 0x0028 */ struct tagBYVALHDR ByValHdr;
    /* 0x0028 */ struct tagBYREFHDR ByRefHdr;
  }; /* size: 0x0008 */
}; /* size: 0x0030 */

struct tagCONTROLINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ struct HACCEL__* hAccel;
  /* 0x0008 */ unsigned short cAccel;
  /* 0x000c */ unsigned long dwFlags;
}; /* size: 0x0010 */

struct tagCONVCONTEXT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned int wFlags;
  /* 0x0008 */ unsigned int wCountryID;
  /* 0x000c */ int iCodePage;
  /* 0x0010 */ unsigned long dwLangID;
  /* 0x0014 */ unsigned long dwSecurity;
  /* 0x0018 */ struct _SECURITY_QUALITY_OF_SERVICE qos;
}; /* size: 0x0024 */

struct tagCONVINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long hUser;
  /* 0x0008 */ struct HCONV__* hConvPartner;
  /* 0x000c */ struct HSZ__* hszSvcPartner;
  /* 0x0010 */ struct HSZ__* hszServiceReq;
  /* 0x0014 */ struct HSZ__* hszTopic;
  /* 0x0018 */ struct HSZ__* hszItem;
  /* 0x001c */ unsigned int wFmt;
  /* 0x0020 */ unsigned int wType;
  /* 0x0024 */ unsigned int wStatus;
  /* 0x0028 */ unsigned int wConvst;
  /* 0x002c */ unsigned int wLastError;
  /* 0x0030 */ struct HCONVLIST__* hConvList;
  /* 0x0034 */ struct tagCONVCONTEXT ConvCtxt;
  /* 0x0058 */ struct HWND__* hwnd;
  /* 0x005c */ struct HWND__* hwndPartner;
}; /* size: 0x0060 */

struct tagCOPYDATASTRUCT
{
  /* 0x0000 */ unsigned long dwData;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ void* lpData;
}; /* size: 0x000c */

enum tagCOWAIT_FLAGS
{
  COWAIT_WAITALL = 1,
  COWAIT_ALERTABLE = 2,
  COWAIT_INPUTAVAILABLE = 4,
};

enum tagCPFLAGS
{
  CPFLAG_NONE = 0,
  CPFLAG_PROPAGATE = 1,
  CPFLAG_EXPOSE = 2,
  CPFLAG_ENVOY = 4,
  CPFLAG_MONITORSTUB = 8,
  CPFLAG_MONITORPROXY = 16,
  CPFLAG_DONTCOMPARE = 32,
};

struct tagCREATESTRUCTA
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0004 */ struct HINSTANCE__* hInstance;
  /* 0x0008 */ struct HMENU__* hMenu;
  /* 0x000c */ struct HWND__* hwndParent;
  /* 0x0010 */ int cy;
  /* 0x0014 */ int cx;
  /* 0x0018 */ int y;
  /* 0x001c */ int x;
  /* 0x0020 */ long style;
  /* 0x0024 */ const char* lpszName;
  /* 0x0028 */ const char* lpszClass;
  /* 0x002c */ unsigned long dwExStyle;
}; /* size: 0x0030 */

struct tagCREATESTRUCTW
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0004 */ struct HINSTANCE__* hInstance;
  /* 0x0008 */ struct HMENU__* hMenu;
  /* 0x000c */ struct HWND__* hwndParent;
  /* 0x0010 */ int cy;
  /* 0x0014 */ int cx;
  /* 0x0018 */ int y;
  /* 0x001c */ int x;
  /* 0x0020 */ long style;
  /* 0x0024 */ const wchar_t* lpszName;
  /* 0x0028 */ const wchar_t* lpszClass;
  /* 0x002c */ unsigned long dwExStyle;
}; /* size: 0x0030 */

struct tagCSPLATFORM
{
  /* 0x0000 */ unsigned long dwPlatformId;
  /* 0x0004 */ unsigned long dwVersionHi;
  /* 0x0008 */ unsigned long dwVersionLo;
  /* 0x000c */ unsigned long dwProcessorArch;
}; /* size: 0x0010 */

struct tagCStdPSFactoryBuffer
{
  /* 0x0000 */ const struct IPSFactoryBufferVtbl* lpVtbl;
  /* 0x0004 */ long RefCount;
  /* 0x0008 */ const struct tagProxyFileInfo** pProxyFileList;
  /* 0x000c */ long Filler1;
}; /* size: 0x0010 */

enum tagCTRLINFO
{
  CTRLINFO_EATS_RETURN = 1,
  CTRLINFO_EATS_ESCAPE = 2,
};

struct tagCTXCOMMONHDR
{
  /* 0x0000 */ struct _GUID ContextId;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ unsigned long dwNumExtents;
  /* 0x001c */ unsigned long cbExtents;
  /* 0x0020 */ unsigned long MshlFlags;
}; /* size: 0x0024 */

struct tagCTXVERSION
{
  /* 0x0000 */ short ThisVersion;
  /* 0x0002 */ short MinVersion;
}; /* size: 0x0004 */

struct tagCURSORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HICON__* hCursor;
  /* 0x000c */ struct tagPOINT ptScreenPos;
}; /* size: 0x0014 */

struct tagCURSORSHAPE
{
  /* 0x0000 */ int xHotSpot;
  /* 0x0004 */ int yHotSpot;
  /* 0x0008 */ int cx;
  /* 0x000c */ int cy;
  /* 0x0010 */ int cbWidth;
  /* 0x0014 */ unsigned char Planes;
  /* 0x0015 */ unsigned char BitsPixel;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

struct tagCUSTDATA
{
  /* 0x0000 */ unsigned long cCustData;
  /* 0x0004 */ struct tagCUSTDATAITEM* prgCustData;
}; /* size: 0x0008 */

struct tagCUSTDATAITEM
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ struct tagVARIANT varValue;
}; /* size: 0x0020 */

struct tagCWPRETSTRUCT
{
  /* 0x0000 */ long lResult;
  /* 0x0004 */ long lParam;
  /* 0x0008 */ unsigned int wParam;
  /* 0x000c */ unsigned int message;
  /* 0x0010 */ struct HWND__* hwnd;
}; /* size: 0x0014 */

struct tagCWPSTRUCT
{
  /* 0x0000 */ long lParam;
  /* 0x0004 */ unsigned int wParam;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ struct HWND__* hwnd;
}; /* size: 0x0010 */

union tagCY
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Lo;
      /* 0x0004 */ long Hi;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 int64;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct tagCallEntry
{
  /* 0x0000 */ void* pNext;
  /* 0x0004 */ void* pvObject;
}; /* size: 0x0008 */

enum tagCallType
{
  CALLTYPE_NONE = 0,
  CALLTYPE_SYNCCALL = 1,
  CALLTYPE_SYNCENTER = 2,
  CALLTYPE_SYNCLEAVE = 3,
  CALLTYPE_SYNCRETURN = 4,
  CALLTYPE_BEGINCALL = 5,
  CALLTYPE_BEGINRETURN = 6,
  CALLTYPE_BEGINENTER = 7,
  CALLTYPE_BEGINLEAVE = 8,
  CALLTYPE_FINISHENTER = 9,
  CALLTYPE_FINISHLEAVE = 10,
  CALLTYPE_FINISHCALL = 11,
  CALLTYPE_FINISHRETURN = 12,
};

enum tagCoModuleType
{
  CO_MODULE_UNKNOWN = 0,
  CO_MODULE_32BIT = 1,
  CO_MODULE_64BIT = 2,
};

struct tagComCallData
{
  /* 0x0000 */ unsigned long dwDispid;
  /* 0x0004 */ unsigned long dwReserved;
  /* 0x0008 */ void* pUserDefined;
}; /* size: 0x000c */

struct tagContextProperty
{
  /* 0x0000 */ struct _GUID policyId;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ struct IUnknown* pUnk;
}; /* size: 0x0018 */

struct tagContextStackNode
{
  /* 0x0000 */ struct tagContextStackNode* pNext;
  /* 0x0004 */ class CObjectContext* pSavedContext;
  /* 0x0008 */ class CObjectContext* pServerContext;
  /* 0x000c */ class CCtxCall* pClientCall;
  /* 0x0010 */ class CCtxCall* pServerCall;
  /* 0x0014 */ class CPolicySet* pPS;
}; /* size: 0x0018 */

struct tagContexts
{
  /* 0x0000 */ class CObjectContext* pClientCtx;
  /* 0x0004 */ class CObjectContext* pServerCtx;
}; /* size: 0x0008 */

struct tagCustomHeader
{
  /* 0x0000 */ unsigned long totalSize;
  /* 0x0004 */ unsigned long headerSize;
  /* 0x0008 */ unsigned long cOpaqueData;
  /* 0x000c */ unsigned long destCtx;
  /* 0x0010 */ unsigned long cIfs;
  /* 0x0014 */ struct _GUID classInfoClsid;
  /* 0x0024 */ struct _GUID* pclsid;
  /* 0x0028 */ unsigned long* pSizes;
  /* 0x002c */ struct tagCustomOpaqueData* opaqueData;
}; /* size: 0x0030 */

struct tagCustomOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ unsigned char* data;
}; /* size: 0x0020 */

struct tagCustomPrivResolverInfo
{
  /* 0x0000 */ unsigned __int64 OxidServer;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pServerORBindings;
  /* 0x000c */ struct tagOXID_INFO OxidInfo;
  /* 0x0038 */ unsigned __int64 LocalMidOfRemote;
  /* 0x0040 */ unsigned long DllServerModel;
  /* 0x0044 */ unsigned short* pwszDllServer;
  /* 0x0048 */ int FoundInROT;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

struct tagCustomPrivScmInfo
{
  /* 0x0000 */ long Apartment;
  /* 0x0004 */ wchar_t* pwszWinstaDesktop;
  /* 0x0008 */ unsigned __int64 ProcessSignature;
  /* 0x0010 */ wchar_t* pEnvBlock;
  /* 0x0014 */ unsigned long EnvBlockLength;
}; /* size: 0x0018 */

enum tagDATADIR
{
  DATADIR_GET = 1,
  DATADIR_SET = 2,
};

struct tagDATAELEMENT
{
  /* 0x0000 */ struct _GUID dataID;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ unsigned long cbRounded;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

enum tagDCOM_CALL_STATE
{
  DCOM_NONE = 0,
  DCOM_CALL_COMPLETE = 1,
  DCOM_CALL_CANCELED = 2,
};

struct tagDCOM_ENDPOINT
{
  /* 0x0000 */ wchar_t* wszProtSeq;
  /* 0x0004 */ wchar_t* wszPorts;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

struct tagDDECALLDATA
{
  /* 0x0000 */ struct HWND__* hwndSvr;
  /* 0x0004 */ unsigned short wMsg;
  /* 0x0008 */ unsigned int wParam;
  /* 0x000c */ long lParam;
  /* 0x0010 */ struct HWND__* hwndCli;
  /* 0x0014 */ int fFreeOnError;
  /* 0x0018 */ int fDone;
  /* 0x001c */ class DDE_CHANNEL* pChannel;
}; /* size: 0x0020 */

struct tagDDEDISPATCHDATA
{
  /* 0x0004 */ class CDdeObject* pCDdeObject;
  /* 0x0008 */ unsigned int iArg;
}; /* size: 0x000c */

struct tagDDEML_MSG_HOOK_DATA
{
  /* 0x0000 */ unsigned int uiLo;
  /* 0x0004 */ unsigned int uiHi;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned long Data[8];
}; /* size: 0x002c */

struct tagDEBUGHOOKINFO
{
  /* 0x0000 */ unsigned long idThread;
  /* 0x0004 */ unsigned long idThreadInstaller;
  /* 0x0008 */ long lParam;
  /* 0x000c */ unsigned int wParam;
  /* 0x0010 */ int code;
}; /* size: 0x0014 */

struct tagDEC
{
  /* 0x0000 */ unsigned short wReserved;
  union
  {
    struct
    {
      /* 0x0002 */ unsigned char scale;
      /* 0x0003 */ unsigned char sign;
    }; /* size: 0x0002 */
    /* 0x0002 */ unsigned short signscale;
  }; /* size: 0x0002 */
  /* 0x0004 */ unsigned long Hi32;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Lo32;
      /* 0x000c */ unsigned long Mid32;
    }; /* size: 0x0008 */
    /* 0x0008 */ unsigned __int64 Lo64;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct tagDELETEITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ struct HWND__* hwndItem;
  /* 0x0010 */ unsigned long itemData;
}; /* size: 0x0014 */

enum tagDESCKIND
{
  DESCKIND_NONE = 0,
  DESCKIND_FUNCDESC = 1,
  DESCKIND_VARDESC = 2,
  DESCKIND_TYPECOMP = 3,
  DESCKIND_IMPLICITAPPOBJ = 4,
  DESCKIND_MAX = 5,
};

struct tagDESIGNVECTOR
{
  /* 0x0000 */ unsigned long dvReserved;
  /* 0x0004 */ unsigned long dvNumAxes;
  /* 0x0008 */ long dvValues[16];
}; /* size: 0x0048 */

enum tagDHFlags
{
  DH_SAME_AS_LOAD = 1,
  DH_CONTAINED_OBJECT = 2,
  DH_LOCKED_CONTAINER = 4,
  DH_FORCED_RUNNING = 8,
  DH_EMBEDDING = 16,
  DH_INIT_NEW = 32,
  DH_STATIC = 64,
  DH_INPROC_HANDLER = 128,
  DH_DELAY_CREATE = 256,
  DH_COM_OUTEROBJECT = 512,
  DH_UNMARSHALED = 1024,
  DH_CLEANEDUP = 2048,
  DH_OLE1SERVER = 4096,
  DH_APICREATE = 8192,
};

struct tagDIBSECTION
{
  /* 0x0000 */ struct tagBITMAP dsBm;
  /* 0x0018 */ struct tagBITMAPINFOHEADER dsBmih;
  /* 0x0040 */ unsigned long dsBitfields[3];
  /* 0x004c */ void* dshSection;
  /* 0x0050 */ unsigned long dsOffset;
}; /* size: 0x0054 */

struct tagDICTIONARY
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ struct tagENTRY rgEntry[1];
}; /* size: 0x0010 */

enum tagDIMENSION
{
  XDIMENSION = 88,
  YDIMENSION = 89,
};

enum tagDISCARDCACHE
{
  DISCARDCACHE_SAVEIFDIRTY = 0,
  DISCARDCACHE_NOSAVE = 1,
};

enum tagDISCTYPE
{
  DISCTYPE_NORMAL = 1,
  DISCTYPE_RELEASE = 2,
  DISCTYPE_APPLICATION = 4,
  DISCTYPE_UNINIT = 8,
  DISCTYPE_RUNDOWN = 16,
  DISCTYPE_SYSTEM = 32,
};

struct tagDISPATCHDATA
{
  /* 0x0000 */ long scode;
  /* 0x0004 */ void* pData;
}; /* size: 0x0008 */

struct tagDISPPARAMS
{
  /* 0x0000 */ struct tagVARIANT* rgvarg;
  /* 0x0004 */ long* rgdispidNamedArgs;
  /* 0x0008 */ unsigned int cArgs;
  /* 0x000c */ unsigned int cNamedArgs;
}; /* size: 0x0010 */

enum tagDLFlags
{
  DL_SAME_AS_LOAD = 1,
  DL_NO_SCRIBBLE_MODE = 2,
  DL_DIRTY_LINK = 4,
  DL_LOCKED_CONTAINER = 8,
  DL_LOCKED_RUNNABLEOBJECT = 16,
  DL_LOCKED_OLEITEMCONTAINER = 32,
  DL_CLEANEDUP = 64,
};

struct tagDOCDISPATCHDATA
{
  /* 0x0004 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned long msg;
  /* 0x000c */ unsigned int wParam;
  /* 0x0010 */ long lParam;
  /* 0x0014 */ void* hdata;
  /* 0x0018 */ unsigned short aItem;
  /* 0x001c */ class CDefClient* lpclient;
}; /* size: 0x0020 */

enum tagDOMNodeType
{
  NODE_INVALID = 0,
  NODE_ELEMENT = 1,
  NODE_ATTRIBUTE = 2,
  NODE_TEXT = 3,
  NODE_CDATA_SECTION = 4,
  NODE_ENTITY_REFERENCE = 5,
  NODE_ENTITY = 6,
  NODE_PROCESSING_INSTRUCTION = 7,
  NODE_COMMENT = 8,
  NODE_DOCUMENT = 9,
  NODE_DOCUMENT_TYPE = 10,
  NODE_DOCUMENT_FRAGMENT = 11,
  NODE_NOTATION = 12,
};

enum tagDRAGOP
{
  DRAGOP_ENTER = 1,
  DRAGOP_OVER = 2,
  DRAGOP_LEAVE = 3,
  DRAGOP_DROP = 4,
};

struct tagDRAWITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemAction;
  /* 0x0010 */ unsigned int itemState;
  /* 0x0014 */ struct HWND__* hwndItem;
  /* 0x0018 */ struct HDC__* hDC;
  /* 0x001c */ struct tagRECT rcItem;
  /* 0x002c */ unsigned long itemData;
}; /* size: 0x0030 */

struct tagDRAWTEXTPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iTabLength;
  /* 0x0008 */ int iLeftMargin;
  /* 0x000c */ int iRightMargin;
  /* 0x0010 */ unsigned int uiLengthDrawn;
}; /* size: 0x0014 */

struct tagDROPSTRUCT
{
  /* 0x0000 */ struct HWND__* hwndSource;
  /* 0x0004 */ struct HWND__* hwndSink;
  /* 0x0008 */ unsigned long wFmt;
  /* 0x000c */ unsigned long dwData;
  /* 0x0010 */ struct tagPOINT ptDrop;
  /* 0x0018 */ unsigned long dwControlData;
}; /* size: 0x001c */

struct tagDUALSTRINGARRAY
{
  /* 0x0000 */ unsigned short wNumEntries;
  /* 0x0002 */ unsigned short wSecurityOffset;
  /* 0x0004 */ unsigned short aStringArray[1];
}; /* size: 0x0006 */

enum tagDVASPECT
{
  DVASPECT_CONTENT = 1,
  DVASPECT_THUMBNAIL = 2,
  DVASPECT_ICON = 4,
  DVASPECT_DOCPRINT = 8,
};

enum tagDVASPECT2
{
  DVASPECT_OPAQUE = 16,
  DVASPECT_TRANSPARENT = 32,
};

struct tagDVTARGETDEVICE
{
  /* 0x0000 */ unsigned long tdSize;
  /* 0x0004 */ unsigned short tdDriverNameOffset;
  /* 0x0006 */ unsigned short tdDeviceNameOffset;
  /* 0x0008 */ unsigned short tdPortNameOffset;
  /* 0x000a */ unsigned short tdExtDevmodeOffset;
  /* 0x000c */ unsigned char tdData[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct tagELEMDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdesc;
  union
  {
    /* 0x0008 */ struct tagIDLDESC idldesc;
    /* 0x0008 */ struct tagPARAMDESC paramdesc;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

enum tagEMFWRITETYPE
{
  WRITE_AS_WMF = 13,
  WRITE_AS_EMF = 17,
};

struct tagEMR
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
}; /* size: 0x0008 */

struct tagEMRALPHABLEND
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

struct tagEMRANGLEARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlCenter;
  /* 0x0010 */ unsigned long nRadius;
  /* 0x0014 */ float eStartAngle;
  /* 0x0018 */ float eSweepAngle;
}; /* size: 0x001c */

struct tagEMRARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct _POINTL ptlStart;
  /* 0x0020 */ struct _POINTL ptlEnd;
}; /* size: 0x0028 */

struct tagEMRBITBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
}; /* size: 0x0064 */

struct tagEMRCREATEBRUSHINDIRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ struct tagLOGBRUSH32 lb;
}; /* size: 0x0018 */

struct tagEMRCREATECOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEA lcs;
}; /* size: 0x0154 */

struct tagEMRCREATECOLORSPACEW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEW lcs;
  /* 0x0258 */ unsigned long dwFlags;
  /* 0x025c */ unsigned long cbData;
  /* 0x0260 */ unsigned char Data[1];
  /* 0x0261 */ char __PADDING__[3];
}; /* size: 0x0264 */

struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

struct tagEMRCREATEMONOBRUSH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

struct tagEMRCREATEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ struct tagLOGPALETTE lgpl;
}; /* size: 0x0014 */

struct tagEMRCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ struct tagLOGPEN lopn;
}; /* size: 0x001c */

struct tagEMRELLIPSE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
}; /* size: 0x0018 */

struct tagEMREOF
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long nPalEntries;
  /* 0x000c */ unsigned long offPalEntries;
  /* 0x0010 */ unsigned long nSizeLast;
}; /* size: 0x0014 */

struct tagEMREXCLUDECLIPRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclClip;
}; /* size: 0x0018 */

struct tagEMREXTCREATEFONTINDIRECTW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihFont;
  /* 0x000c */ struct tagEXTLOGFONTW elfw;
}; /* size: 0x014c */

struct tagEMREXTCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ unsigned long offBmi;
  /* 0x0010 */ unsigned long cbBmi;
  /* 0x0014 */ unsigned long offBits;
  /* 0x0018 */ unsigned long cbBits;
  /* 0x001c */ struct tagEXTLOGPEN elp;
}; /* size: 0x0038 */

struct tagEMREXTESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbEscData;
  /* 0x0010 */ unsigned char EscData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct tagEMREXTFLOODFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlStart;
  /* 0x0010 */ unsigned long crColor;
  /* 0x0014 */ unsigned long iMode;
}; /* size: 0x0018 */

struct tagEMREXTSELECTCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbRgnData;
  /* 0x000c */ unsigned long iMode;
  /* 0x0010 */ unsigned char RgnData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct tagEMREXTTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ struct tagEMRTEXT emrtext;
}; /* size: 0x004c */

struct tagEMRFILLPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
}; /* size: 0x0018 */

struct tagEMRFILLRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ unsigned char RgnData[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

struct tagEMRFORMAT
{
  /* 0x0000 */ unsigned long dSignature;
  /* 0x0004 */ unsigned long nVersion;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned long offData;
}; /* size: 0x0010 */

struct tagEMRFRAMERGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ struct tagSIZE szlStroke;
  /* 0x0028 */ unsigned char RgnData[1];
  /* 0x0029 */ char __PADDING__[3];
}; /* size: 0x002c */

struct tagEMRGDICOMMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct tagEMRGLSBOUNDEDRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbData;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

struct tagEMRGLSRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct tagEMRGRADIENTFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nVer;
  /* 0x001c */ unsigned long nTri;
  /* 0x0020 */ unsigned long ulMode;
  /* 0x0024 */ struct _TRIVERTEX Ver[1];
}; /* size: 0x0034 */

struct tagEMRINVERTRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned char RgnData[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

struct tagEMRLINETO
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptl;
}; /* size: 0x0010 */

struct tagEMRMASKBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long xMask;
  /* 0x0068 */ long yMask;
  /* 0x006c */ unsigned long iUsageMask;
  /* 0x0070 */ unsigned long offBmiMask;
  /* 0x0074 */ unsigned long cbBmiMask;
  /* 0x0078 */ unsigned long offBitsMask;
  /* 0x007c */ unsigned long cbBitsMask;
}; /* size: 0x0080 */

struct tagEMRMODIFYWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
  /* 0x0020 */ unsigned long iMode;
}; /* size: 0x0024 */

struct tagEMRNAMEDESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbDriver;
  /* 0x0010 */ int cbEscData;
  /* 0x0014 */ unsigned char EscData[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct tagEMROFFSETCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOffset;
}; /* size: 0x0010 */

struct tagEMRPIXELFORMAT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagPIXELFORMATDESCRIPTOR pfd;
}; /* size: 0x0030 */

struct tagEMRPLGBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _POINTL aptlDest[3];
  /* 0x0030 */ long xSrc;
  /* 0x0034 */ long ySrc;
  /* 0x0038 */ long cxSrc;
  /* 0x003c */ long cySrc;
  /* 0x0040 */ struct tagXFORM xformSrc;
  /* 0x0058 */ unsigned long crBkColorSrc;
  /* 0x005c */ unsigned long iUsageSrc;
  /* 0x0060 */ unsigned long offBmiSrc;
  /* 0x0064 */ unsigned long cbBmiSrc;
  /* 0x0068 */ unsigned long offBitsSrc;
  /* 0x006c */ unsigned long cbBitsSrc;
  /* 0x0070 */ long xMask;
  /* 0x0074 */ long yMask;
  /* 0x0078 */ unsigned long iUsageMask;
  /* 0x007c */ unsigned long offBmiMask;
  /* 0x0080 */ unsigned long cbBmiMask;
  /* 0x0084 */ unsigned long offBitsMask;
  /* 0x0088 */ unsigned long cbBitsMask;
}; /* size: 0x008c */

struct tagEMRPOLYDRAW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
  /* 0x0024 */ unsigned char abTypes[1];
  /* 0x0025 */ char __PADDING__[3];
}; /* size: 0x0028 */

struct tagEMRPOLYDRAW16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
  /* 0x0020 */ unsigned char abTypes[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

struct tagEMRPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
}; /* size: 0x0024 */

struct tagEMRPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
}; /* size: 0x0020 */

struct tagEMRPOLYPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cptl;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct _POINTL aptl[1];
}; /* size: 0x002c */

struct tagEMRPOLYPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cpts;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct tagPOINTS apts[1];
}; /* size: 0x0028 */

struct tagEMRPOLYTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ long cStrings;
  /* 0x0028 */ struct tagEMRTEXT aemrtext[1];
}; /* size: 0x0050 */

struct tagEMRRESIZEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long cEntries;
}; /* size: 0x0010 */

struct tagEMRRESTOREDC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long iRelative;
}; /* size: 0x000c */

struct tagEMRROUNDRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct tagSIZE szlCorner;
}; /* size: 0x0020 */

struct tagEMRSCALEVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long xNum;
  /* 0x000c */ long xDenom;
  /* 0x0010 */ long yNum;
  /* 0x0014 */ long yDenom;
}; /* size: 0x0018 */

struct tagEMRSELECTCLIPPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iMode;
}; /* size: 0x000c */

struct tagEMRSELECTOBJECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihObject;
}; /* size: 0x000c */

struct tagEMRSELECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
}; /* size: 0x000c */

struct tagEMRSETARCDIRECTION
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iArcDirection;
}; /* size: 0x000c */

struct tagEMRSETCOLORADJUSTMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagCOLORADJUSTMENT ColorAdjustment;
}; /* size: 0x0020 */

struct tagEMRSETCOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
}; /* size: 0x000c */

struct tagEMRSETDIBITSTODEVICE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long iStartScan;
  /* 0x0048 */ unsigned long cScans;
}; /* size: 0x004c */

struct tagEMRSETICMPROFILE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cbName;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct tagEMRSETMAPPERFLAGS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

struct tagEMRSETMITERLIMIT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ float eMiterLimit;
}; /* size: 0x000c */

struct tagEMRSETPALETTEENTRIES
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long iStart;
  /* 0x0010 */ unsigned long cEntries;
  /* 0x0014 */ struct tagPALETTEENTRY aPalEntries[1];
}; /* size: 0x0018 */

struct tagEMRSETPIXELV
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlPixel;
  /* 0x0010 */ unsigned long crColor;
}; /* size: 0x0014 */

struct tagEMRSETTEXTCOLOR
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long crColor;
}; /* size: 0x000c */

struct tagEMRSETVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagSIZE szlExtent;
}; /* size: 0x0010 */

struct tagEMRSETVIEWPORTORGEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOrigin;
}; /* size: 0x0010 */

struct tagEMRSETWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
}; /* size: 0x0020 */

struct tagEMRSTRETCHBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

struct tagEMRSTRETCHDIBITS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ long cxDest;
  /* 0x004c */ long cyDest;
}; /* size: 0x0050 */

struct tagEMRTEXT
{
  /* 0x0000 */ struct _POINTL ptlReference;
  /* 0x0008 */ unsigned long nChars;
  /* 0x000c */ unsigned long offString;
  /* 0x0010 */ unsigned long fOptions;
  /* 0x0014 */ struct _RECTL rcl;
  /* 0x0024 */ unsigned long offDx;
}; /* size: 0x0028 */

struct tagEMRTRANSPARENTBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

struct tagENHMETAHEADER
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _RECTL rclFrame;
  /* 0x0028 */ unsigned long dSignature;
  /* 0x002c */ unsigned long nVersion;
  /* 0x0030 */ unsigned long nBytes;
  /* 0x0034 */ unsigned long nRecords;
  /* 0x0038 */ unsigned short nHandles;
  /* 0x003a */ unsigned short sReserved;
  /* 0x003c */ unsigned long nDescription;
  /* 0x0040 */ unsigned long offDescription;
  /* 0x0044 */ unsigned long nPalEntries;
  /* 0x0048 */ struct tagSIZE szlDevice;
  /* 0x0050 */ struct tagSIZE szlMillimeters;
  /* 0x0058 */ unsigned long cbPixelFormat;
  /* 0x005c */ unsigned long offPixelFormat;
  /* 0x0060 */ unsigned long bOpenGL;
  /* 0x0064 */ struct tagSIZE szlMicrometers;
}; /* size: 0x006c */

struct tagENHMETARECORD
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ unsigned long dParm[1];
}; /* size: 0x000c */

struct tagENTRY
{
  /* 0x0000 */ unsigned long propid;
  /* 0x0004 */ unsigned long cch;
  /* 0x0008 */ char sz[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

struct tagENUMLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
}; /* size: 0x009c */

struct tagENUMLOGFONTEXA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned char elfScript[32];
}; /* size: 0x00bc */

struct tagENUMLOGFONTEXDVA
{
  /* 0x0000 */ struct tagENUMLOGFONTEXA elfEnumLogfontEx;
  /* 0x00bc */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x0104 */

struct tagENUMLOGFONTEXDVW
{
  /* 0x0000 */ struct tagENUMLOGFONTEXW elfEnumLogfontEx;
  /* 0x015c */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x01a4 */

struct tagENUMLOGFONTEXW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ wchar_t elfScript[32];
}; /* size: 0x015c */

struct tagENUMLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
}; /* size: 0x011c */

struct tagENUMTEXTMETRICA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXA etmNewTextMetricEx;
  /* 0x0060 */ struct tagAXESLISTA etmAxesList;
}; /* size: 0x01e8 */

struct tagENUMTEXTMETRICW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXW etmNewTextMetricEx;
  /* 0x0064 */ struct tagAXESLISTW etmAxesList;
}; /* size: 0x02ec */

struct tagENVOYDATA
{
  /* 0x0000 */ struct _GUID contextId;
  /* 0x0010 */ unsigned long ulJunk1;
  /* 0x0014 */ unsigned long ulJunk2;
}; /* size: 0x0018 */

enum tagEOLE_AUTHENTICATION_CAPABILITIES
{
  EOAC_NONE = 0,
  EOAC_MUTUAL_AUTH = 1,
  EOAC_STATIC_CLOAKING = 32,
  EOAC_DYNAMIC_CLOAKING = 64,
  EOAC_ANY_AUTHORITY = 128,
  EOAC_MAKE_FULLSIC = 256,
  EOAC_DEFAULT = 2048,
  EOAC_SECURE_REFS = 2,
  EOAC_ACCESS_CONTROL = 4,
  EOAC_APPID = 8,
  EOAC_DYNAMIC = 16,
  EOAC_REQUIRE_FULLSIC = 512,
  EOAC_AUTO_IMPERSONATE = 1024,
  EOAC_NO_CUSTOM_MARSHAL = 8192,
  EOAC_DISABLE_AAA = 4096,
};

struct tagEVENTMSG
{
  /* 0x0000 */ unsigned int message;
  /* 0x0004 */ unsigned int paramL;
  /* 0x0008 */ unsigned int paramH;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ struct HWND__* hwnd;
}; /* size: 0x0014 */

struct tagEXCEPINFO
{
  /* 0x0000 */ unsigned short wCode;
  /* 0x0002 */ unsigned short wReserved;
  /* 0x0004 */ wchar_t* bstrSource;
  /* 0x0008 */ wchar_t* bstrDescription;
  /* 0x000c */ wchar_t* bstrHelpFile;
  /* 0x0010 */ unsigned long dwHelpContext;
  /* 0x0014 */ void* pvReserved;
  /* 0x0018 */ void* pfnDeferredFillIn /* function */;
  /* 0x001c */ long scode;
}; /* size: 0x0020 */

enum tagEXTCONN
{
  EXTCONN_STRONG = 1,
  EXTCONN_WEAK = 2,
  EXTCONN_CALLABLE = 4,
};

struct tagEXTLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned long elfVersion;
  /* 0x00a0 */ unsigned long elfStyleSize;
  /* 0x00a4 */ unsigned long elfMatch;
  /* 0x00a8 */ unsigned long elfReserved;
  /* 0x00ac */ unsigned char elfVendorId[4];
  /* 0x00b0 */ unsigned long elfCulture;
  /* 0x00b4 */ struct tagPANOSE elfPanose;
  /* 0x00be */ char __PADDING__[2];
}; /* size: 0x00c0 */

struct tagEXTLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ unsigned long elfVersion;
  /* 0x0120 */ unsigned long elfStyleSize;
  /* 0x0124 */ unsigned long elfMatch;
  /* 0x0128 */ unsigned long elfReserved;
  /* 0x012c */ unsigned char elfVendorId[4];
  /* 0x0130 */ unsigned long elfCulture;
  /* 0x0134 */ struct tagPANOSE elfPanose;
  /* 0x013e */ char __PADDING__[2];
}; /* size: 0x0140 */

struct tagEXTLOGPEN
{
  /* 0x0000 */ unsigned long elpPenStyle;
  /* 0x0004 */ unsigned long elpWidth;
  /* 0x0008 */ unsigned int elpBrushStyle;
  /* 0x000c */ unsigned long elpColor;
  /* 0x0010 */ unsigned long elpHatch;
  /* 0x0014 */ unsigned long elpNumEntries;
  /* 0x0018 */ unsigned long elpStyleEntry[1];
}; /* size: 0x001c */

struct tagElement
{
  /* 0x0000 */ struct tagElement* pNext;
  /* 0x0004 */ unsigned long iHashValue;
  /* 0x0008 */ unsigned short fValueFlags;
  /* 0x000a */ unsigned short cbKey;
  /* 0x000c */ struct IUnknown* pUnknown;
  /* 0x0010 */ unsigned char* abKey /* zero-length array */;
}; /* size: 0x0010 */

struct tagEntryHeader
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long cbBuffer;
  /* 0x0008 */ unsigned long cbSize;
  /* 0x000c */ long reserved;
  /* 0x0010 */ struct _GUID policyID;
}; /* size: 0x0020 */

enum tagEventLogModes
{
  Eventlog_ModeLaunch = 0,
  EventLog_ModeActivate = 1,
  EventLog_ModeAccess = 2,
  EventLog_ModeDontCare = 3,
};

enum tagEventLogSD
{
  EventLog_MACHINEACCESSRESTRICTIONS = 0,
  EventLog_MACHINELAUNCHRESTRICTIONS = 1,
  EventLog_DEFAULTLAUNCHPERMISSIONS = 2,
  EventLog_DEFAULTACCESSPERMISSIONS = 3,
  EventLog_SERVERLAUNCHPERMISSIONS = 4,
  EventLog_SERVERACCESSPERMISSIONSREG = 5,
  EventLog_SERVERACCESSPERMISSIONSPROG = 6,
  EventLog_DONTCARE = 7,
};

enum tagExtendedErrorParamTypes
{
  eeptAnsiString = 1,
  eeptUnicodeString = 2,
  eeptLongVal = 3,
  eeptShortVal = 4,
  eeptPointerVal = 5,
  eeptNone = 6,
  eeptBinary = 7,
};

struct tagExtentInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwExtentMode;
  /* 0x0008 */ struct tagSIZE sizelProposed;
}; /* size: 0x0010 */

enum tagExtentMode
{
  DVEXTENT_CONTENT = 0,
  DVEXTENT_INTEGRAL = 1,
};

enum tagFFFP_MODE
{
  FFFP_EXACTMATCH = 0,
  FFFP_NEARESTPARENTMATCH = 1,
};

enum tagFILE_USAGE_TYPE
{
  FUT_PLAYING = 0,
  FUT_EDITING = 1,
  FUT_GENERIC = 2,
};

struct tagFILTERKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iWaitMSec;
  /* 0x000c */ unsigned long iDelayMSec;
  /* 0x0010 */ unsigned long iRepeatMSec;
  /* 0x0014 */ unsigned long iBounceMSec;
}; /* size: 0x0018 */

enum tagFOCOXID
{
  FOCOXID_REF = 1,
  FOCOXID_NOREF = 2,
};

struct tagFONTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ wchar_t* lpstrName;
  /* 0x0008 */ union tagCY cySize;
  /* 0x0010 */ short sWeight;
  /* 0x0012 */ short sCharset;
  /* 0x0014 */ int fItalic;
  /* 0x0018 */ int fUnderline;
  /* 0x001c */ int fStrikethrough;
}; /* size: 0x0020 */

struct tagFONTSIGNATURE
{
  /* 0x0000 */ unsigned long fsUsb[4];
  /* 0x0010 */ unsigned long fsCsb[2];
}; /* size: 0x0018 */

struct tagFORMATETC
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0004 */ struct tagDVTARGETDEVICE* ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

struct tagFORMATETC64
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0008 */ unsigned __int64 ptd;
  /* 0x0010 */ unsigned long dwAspect;
  /* 0x0014 */ long lindex;
  /* 0x0018 */ unsigned long tymed;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct tagFORMATIDOFFSET
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long dwOffset;
}; /* size: 0x0014 */

enum tagFRSM_REPLICA_OP
{
  FRSM_REPLICA_ADD = 0,
  FRSM_REPLICA_DELETE = 1,
};

struct tagFUNCDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long* lprgscode;
  /* 0x0008 */ struct tagELEMDESC* lprgelemdescParam;
  /* 0x000c */ enum tagFUNCKIND funckind;
  /* 0x0010 */ enum tagINVOKEKIND invkind;
  /* 0x0014 */ enum tagCALLCONV callconv;
  /* 0x0018 */ short cParams;
  /* 0x001a */ short cParamsOpt;
  /* 0x001c */ short oVft;
  /* 0x001e */ short cScodes;
  /* 0x0020 */ struct tagELEMDESC elemdescFunc;
  /* 0x0030 */ unsigned short wFuncFlags;
  /* 0x0032 */ char __PADDING__[2];
}; /* size: 0x0034 */

enum tagFUNCFLAGS
{
  FUNCFLAG_FRESTRICTED = 1,
  FUNCFLAG_FSOURCE = 2,
  FUNCFLAG_FBINDABLE = 4,
  FUNCFLAG_FREQUESTEDIT = 8,
  FUNCFLAG_FDISPLAYBIND = 16,
  FUNCFLAG_FDEFAULTBIND = 32,
  FUNCFLAG_FHIDDEN = 64,
  FUNCFLAG_FUSESGETLASTERROR = 128,
  FUNCFLAG_FDEFAULTCOLLELEM = 256,
  FUNCFLAG_FUIDEFAULT = 512,
  FUNCFLAG_FNONBROWSABLE = 1024,
  FUNCFLAG_FREPLACEABLE = 2048,
  FUNCFLAG_FIMMEDIATEBIND = 4096,
};

enum tagFUNCKIND
{
  FUNC_VIRTUAL = 0,
  FUNC_PUREVIRTUAL = 1,
  FUNC_NONVIRTUAL = 2,
  FUNC_STATIC = 3,
  FUNC_DISPATCH = 4,
};

struct tagGCP_RESULTSA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ char* lpOutString;
  /* 0x0008 */ unsigned int* lpOrder;
  /* 0x000c */ int* lpDx;
  /* 0x0010 */ int* lpCaretPos;
  /* 0x0014 */ char* lpClass;
  /* 0x0018 */ wchar_t* lpGlyphs;
  /* 0x001c */ unsigned int nGlyphs;
  /* 0x0020 */ int nMaxFit;
}; /* size: 0x0024 */

struct tagGCP_RESULTSW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ wchar_t* lpOutString;
  /* 0x0008 */ unsigned int* lpOrder;
  /* 0x000c */ int* lpDx;
  /* 0x0010 */ int* lpCaretPos;
  /* 0x0014 */ char* lpClass;
  /* 0x0018 */ wchar_t* lpGlyphs;
  /* 0x001c */ unsigned int nGlyphs;
  /* 0x0020 */ int nMaxFit;
}; /* size: 0x0024 */

enum tagGETCLSIDFLAGS
{
  USE_NORMAL_CLSID = 1,
  USE_STANDARD_LINK = 2,
};

enum tagGET_PROPERTY_STORE_TYPE
{
  GIPST_CACHED = 0,
  GIPST_FALLBACK = 1,
};

struct tagGIPEntry
{
  /* 0x0000 */ struct tagGIPEntry* pPrev;
  /* 0x0004 */ struct tagGIPEntry* pNext;
  /* 0x0008 */ unsigned long dwType;
  /* 0x000c */ unsigned long dwSeqNo;
  /* 0x0010 */ volatile long cUsage;
  /* 0x0014 */ unsigned long dwAptId;
  /* 0x0018 */ struct HWND__* hWndApt;
  /* 0x001c */ class CObjectContext* pContext;
  /* 0x0020 */ struct IUnknown* pUnk;
  /* 0x0024 */ void* pVtable;
  /* 0x0028 */ struct IUnknown* pUnkProxy;
  /* 0x002c */ struct MarshalParams mp;
  union
  {
    union
    {
      /* 0x0040 */ struct tagInterfaceData* pIFD;
      /* 0x0040 */ struct tagOBJREF* pobjref;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
}; /* size: 0x0044 */

struct tagGLYPHSET
{
  /* 0x0000 */ unsigned long cbThis;
  /* 0x0004 */ unsigned long flAccel;
  /* 0x0008 */ unsigned long cGlyphsSupported;
  /* 0x000c */ unsigned long cRanges;
  /* 0x0010 */ struct tagWCRANGE ranges[1];
}; /* size: 0x0014 */

enum tagGUIDKIND
{
  GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1,
};

struct tagGUITHREADINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HWND__* hwndActive;
  /* 0x000c */ struct HWND__* hwndFocus;
  /* 0x0010 */ struct HWND__* hwndCapture;
  /* 0x0014 */ struct HWND__* hwndMenuOwner;
  /* 0x0018 */ struct HWND__* hwndMoveSize;
  /* 0x001c */ struct HWND__* hwndCaret;
  /* 0x0020 */ struct tagRECT rcCaret;
}; /* size: 0x0030 */

struct tagHANDLETABLE
{
  /* 0x0000 */ void* objectHandle[1];
}; /* size: 0x0004 */

struct tagHARDWAREHOOKSTRUCT
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ unsigned int message;
  /* 0x0008 */ unsigned int wParam;
  /* 0x000c */ long lParam;
}; /* size: 0x0010 */

struct tagHARDWAREINPUT
{
  /* 0x0000 */ unsigned long uMsg;
  /* 0x0004 */ unsigned short wParamL;
  /* 0x0006 */ unsigned short wParamH;
}; /* size: 0x0008 */

struct tagHDIBFILEHDR
{
  /* 0x0000 */ unsigned long dwCompression;
  /* 0x0004 */ unsigned long dwWidth;
  /* 0x0008 */ unsigned long dwHeight;
  /* 0x000c */ unsigned long dwSize;
}; /* size: 0x0010 */

struct tagHELPINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iContextType;
  /* 0x0008 */ int iCtrlId;
  /* 0x000c */ void* hItemHandle;
  /* 0x0010 */ unsigned long dwContextId;
  /* 0x0014 */ struct tagPOINT MousePos;
}; /* size: 0x001c */

struct tagHELPWININFOA
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ char rgchMember[2];
  /* 0x001a */ char __PADDING__[2];
}; /* size: 0x001c */

struct tagHELPWININFOW
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ wchar_t rgchMember[2];
}; /* size: 0x001c */

struct tagHIGHCONTRASTA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszDefaultScheme;
}; /* size: 0x000c */

struct tagHIGHCONTRASTW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszDefaultScheme;
}; /* size: 0x000c */

enum tagHITRESULT
{
  HITRESULT_OUTSIDE = 0,
  HITRESULT_TRANSPARENT = 1,
  HITRESULT_CLOSE = 2,
  HITRESULT_HIT = 3,
};

enum tagHOSTDLLFLAGS
{
  HDLLF_SINGLETHREADED = 1,
  HDLLF_APARTMENTTHREADED = 2,
  HDLLF_MULTITHREADED = 4,
  HDLLF_NEUTRALTHREADED = 8,
  HDLLF_HOSTTYPEMASK = 15,
  HDLLF_COMAPARTMENT = 16,
  HDLLF_SHUTTINGDOWN = 256,
};

struct tagHSZPAIR
{
  /* 0x0000 */ struct HSZ__* hszSvc;
  /* 0x0004 */ struct HSZ__* hszTopic;
}; /* size: 0x0008 */

struct tagHW_PROFILE_INFOA
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ char szHwProfileGuid[39];
  /* 0x002b */ char szHwProfileName[80];
  /* 0x007b */ char __PADDING__[1];
}; /* size: 0x007c */

struct tagHW_PROFILE_INFOW
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ wchar_t szHwProfileGuid[39];
  /* 0x0052 */ wchar_t szHwProfileName[80];
  /* 0x00f2 */ char __PADDING__[2];
}; /* size: 0x00f4 */

struct tagICEXYZTRIPLE
{
  /* 0x0000 */ struct tagCIEXYZ ciexyzRed;
  /* 0x000c */ struct tagCIEXYZ ciexyzGreen;
  /* 0x0018 */ struct tagCIEXYZ ciexyzBlue;
}; /* size: 0x0024 */

struct tagICONMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTA lfFont;
}; /* size: 0x004c */

struct tagICONMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTW lfFont;
}; /* size: 0x006c */

struct tagIDLDESC
{
  /* 0x0000 */ unsigned long dwReserved;
  /* 0x0004 */ unsigned short wIDLFlags;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

enum tagIDLFLAGS
{
  IDLF_CREATE = 1,
  IDLF_STRONG = 2,
  IDLF_NOPING = 4,
  IDLF_NOIEC = 8,
  IDLF_FTM = 16,
};

struct tagIFaceSvrRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0004 */ struct IRpcProxyBuffer* pRpcProxy;
  /* 0x0008 */ void* pServer;
  /* 0x000c */ class CCtxChnl* pCtxChnl;
}; /* size: 0x0010 */

struct tagIMECHARPOSITION
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCharPos;
  /* 0x0008 */ struct tagPOINT pt;
  /* 0x0010 */ unsigned int cLineHeight;
  /* 0x0014 */ struct tagRECT rcDocument;
}; /* size: 0x0024 */

struct tagIMEMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0014 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0018 */ unsigned long dwItemData;
  /* 0x001c */ char szString[80];
  /* 0x006c */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0070 */

struct tagIMEMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0014 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0018 */ unsigned long dwItemData;
  /* 0x001c */ wchar_t szString[80];
  /* 0x00bc */ struct HBITMAP__* hbmpItem;
}; /* size: 0x00c0 */

struct tagINPUT
{
  /* 0x0000 */ unsigned long type;
  union
  {
    /* 0x0004 */ struct tagMOUSEINPUT mi;
    /* 0x0004 */ struct tagKEYBDINPUT ki;
    struct
    {
      /* 0x0004 */ struct tagHARDWAREINPUT hi;
      /* 0x000c */ long __PADDING__[4];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x001c */

enum tagINSTALLMESSAGE
{
  INSTALLMESSAGE_FATALEXIT = 0,
  INSTALLMESSAGE_ERROR = 0x1000000,
  INSTALLMESSAGE_WARNING = 0x2000000,
  INSTALLMESSAGE_USER = 0x3000000,
  INSTALLMESSAGE_INFO = 0x4000000,
  INSTALLMESSAGE_FILESINUSE = 0x5000000,
  INSTALLMESSAGE_RESOLVESOURCE = 0x6000000,
  INSTALLMESSAGE_OUTOFDISKSPACE = 0x7000000,
  INSTALLMESSAGE_ACTIONSTART = 0x8000000,
  INSTALLMESSAGE_ACTIONDATA = 0x9000000,
  INSTALLMESSAGE_PROGRESS = 0xa000000,
  INSTALLMESSAGE_COMMONDATA = 0xb000000,
  INSTALLMESSAGE_INITIALIZE = 0xc000000,
  INSTALLMESSAGE_TERMINATE = 0xd000000,
  INSTALLMESSAGE_SHOWDIALOG = 0xe000000,
  INSTALLMESSAGE_RMFILESINUSE = 0x19000000,
  INSTALLMESSAGE_INSTALLSTART = 0x1a000000,
  INSTALLMESSAGE_INSTALLEND = 0x1b000000,
};

enum tagINSTALLUILEVEL
{
  INSTALLUILEVEL_NOCHANGE = 0,
  INSTALLUILEVEL_DEFAULT = 1,
  INSTALLUILEVEL_NONE = 2,
  INSTALLUILEVEL_BASIC = 3,
  INSTALLUILEVEL_REDUCED = 4,
  INSTALLUILEVEL_FULL = 5,
  INSTALLUILEVEL_ENDDIALOG = 128,
  INSTALLUILEVEL_PROGRESSONLY = 64,
  INSTALLUILEVEL_HIDECANCEL = 32,
  INSTALLUILEVEL_SOURCERESONLY = 256,
};

struct tagINTERFACEDATA
{
  /* 0x0000 */ struct tagMETHODDATA* pmethdata;
  /* 0x0004 */ unsigned int cMembers;
}; /* size: 0x0008 */

struct tagINTERFACEINFO
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0004 */ struct _GUID iid;
  /* 0x0014 */ unsigned short wMethod;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

enum tagINTERVAL_LIMIT_KIND
{
  ILK_EXPLICIT_INCLUDED = 0,
  ILK_EXPLICIT_EXCLUDED = 1,
  ILK_NEGATIVE_INFINITY = 2,
  ILK_POSITIVE_INFINITY = 3,
};

enum tagINVOKEKIND
{
  INVOKE_FUNC = 1,
  INVOKE_PROPERTYGET = 2,
  INVOKE_PROPERTYPUT = 4,
  INVOKE_PROPERTYPUTREF = 8,
};

struct tagIPIDEntry
{
  /* 0x0000 */ struct tagIPIDEntry* pNextIPID;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cStrongRefs;
  /* 0x000c */ unsigned long cWeakRefs;
  /* 0x0010 */ unsigned long cPrivateRefs;
  /* 0x0014 */ void* pv;
  /* 0x0018 */ struct IUnknown* pStub;
  /* 0x001c */ class OXIDEntry* pOXIDEntry;
  /* 0x0020 */ struct _GUID ipid;
  /* 0x0030 */ struct _GUID iid;
  /* 0x0040 */ class CCtxComChnl* pChnl;
  /* 0x0044 */ struct IRCEntry* pIRCEntry;
  /* 0x0048 */ struct tagIPIDEntry* pOIDFLink;
  /* 0x004c */ struct tagIPIDEntry* pOIDBLink;
}; /* size: 0x0050 */

enum tagIPIDFLAGS
{
  IPIDF_CONNECTING = 1,
  IPIDF_DISCONNECTED = 2,
  IPIDF_SERVERENTRY = 4,
  IPIDF_NOPING = 8,
  IPIDF_COPY = 16,
  IPIDF_VACANT = 128,
  IPIDF_NONNDRSTUB = 256,
  IPIDF_NONNDRPROXY = 512,
  IPIDF_NOTIFYACT = 1024,
  IPIDF_TRIED_ASYNC = 2048,
  IPIDF_ASYNC_SERVER = 4096,
  IPIDF_DEACTIVATED = 8192,
  IPIDF_WEAKREFCACHE = 16384,
  IPIDF_STRONGREFCACHE = 0xffff8000,
  IPIDF_UNSECURECALLSALLOWED = 0x10000,
};

struct tagIPIDTmp
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long cStrongRefs;
  /* 0x0008 */ unsigned long cWeakRefs;
  /* 0x000c */ unsigned long cPrivateRefs;
  /* 0x0010 */ void* pv;
  /* 0x0014 */ struct IUnknown* pStub;
  /* 0x0018 */ class OXIDEntry* pOXIDEntry;
}; /* size: 0x001c */

enum tagITEM_CHANGE_TYPE
{
  ICHT_INSERT = 0,
  ICHT_DELETE = 1,
  ICHT_UPDATE = 2,
  ICHT_FILTER = 3,
};

struct tagI_RpcProxyCallbackInterface
{
  /* 0x0000 */ void* IsValidMachineFn /* function */;
  /* 0x0004 */ void* GetClientAddressFn /* function */;
  /* 0x0008 */ void* GetConnectionTimeoutFn /* function */;
  /* 0x000c */ void* PerformCalloutFn /* function */;
  /* 0x0010 */ void* FreeCalloutStateFn /* function */;
  /* 0x0014 */ void* GetClientSessionAndResourceUUIDFn /* function */;
  /* 0x0018 */ void* ProxyFilterIfFn /* function */;
  /* 0x001c */ void* RpcProxyUpdatePerfCounterFn /* function */;
  /* 0x0020 */ void* RpcProxyUpdatePerfCounterBackendServerFn /* function */;
}; /* size: 0x0024 */

struct tagIncomingCallData
{
  /* 0x0000 */ unsigned long dwClientPID;
}; /* size: 0x0004 */

struct tagInitializeSpyNode
{
  /* 0x0000 */ struct tagInitializeSpyNode* pNext;
  /* 0x0004 */ struct tagInitializeSpyNode* pPrev;
  /* 0x0008 */ unsigned long dwRefs;
  /* 0x000c */ unsigned long dwCookie;
  /* 0x0010 */ struct IInitializeSpy* pInitSpy;
}; /* size: 0x0014 */

struct tagInstanceInfoData
{
  /* 0x0000 */ unsigned short* fileName;
  /* 0x0004 */ unsigned long mode;
  /* 0x0008 */ struct tagMInterfacePointer* ifdROT;
  /* 0x000c */ struct tagMInterfacePointer* ifdStg;
}; /* size: 0x0010 */

struct tagInstantiationInfoData
{
  /* 0x0000 */ struct _GUID classId;
  /* 0x0010 */ unsigned long classCtx;
  /* 0x0014 */ unsigned long actvflags;
  /* 0x0018 */ int fIsSurrogate;
  /* 0x001c */ unsigned long cIID;
  /* 0x0020 */ unsigned long instFlag;
  /* 0x0024 */ struct _GUID* pIID;
  /* 0x0028 */ unsigned long thisSize;
  /* 0x002c */ struct tagCOMVERSION clientCOMVersion;
}; /* size: 0x0030 */

struct tagInterfaceData
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1024];
}; /* size: 0x0404 */

struct tagKBDLLHOOKSTRUCT
{
  /* 0x0000 */ unsigned long vkCode;
  /* 0x0004 */ unsigned long scanCode;
  /* 0x0008 */ unsigned long flags;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ unsigned long dwExtraInfo;
}; /* size: 0x0014 */

struct tagKERNINGPAIR
{
  /* 0x0000 */ unsigned short wFirst;
  /* 0x0002 */ unsigned short wSecond;
  /* 0x0004 */ int iKernAmount;
}; /* size: 0x0008 */

struct tagKEYBDINPUT
{
  /* 0x0000 */ unsigned short wVk;
  /* 0x0002 */ unsigned short wScan;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ unsigned long dwExtraInfo;
}; /* size: 0x0010 */

enum tagKF_CATEGORY
{
  KF_CATEGORY_VIRTUAL = 1,
  KF_CATEGORY_FIXED = 2,
  KF_CATEGORY_COMMON = 3,
  KF_CATEGORY_PERUSER = 4,
};

struct tagKNOWNFOLDER_DEFINITION
{
  /* 0x0000 */ enum tagKF_CATEGORY category;
  /* 0x0004 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszDescription;
  /* 0x000c */ struct _GUID fidParent;
  /* 0x001c */ wchar_t* pszRelativePath;
  /* 0x0020 */ wchar_t* pszParsingName;
  /* 0x0024 */ wchar_t* pszTooltip;
  /* 0x0028 */ wchar_t* pszLocalizedName;
  /* 0x002c */ wchar_t* pszIcon;
  /* 0x0030 */ wchar_t* pszSecurity;
  /* 0x0034 */ unsigned long dwAttributes;
  /* 0x0038 */ unsigned long kfdFlags;
  /* 0x003c */ struct _GUID ftidType;
}; /* size: 0x004c */

struct tagKnownSystemIIDs
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0004 */ unsigned long dwRpcIfFlags;
}; /* size: 0x0008 */

struct tagLASTINPUTINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwTime;
}; /* size: 0x0008 */

struct tagLAYERPLANEDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerPlane;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long crTransparent;
}; /* size: 0x0020 */

struct tagLC_ID
{
  /* 0x0000 */ unsigned short wLanguage;
  /* 0x0002 */ unsigned short wCountry;
  /* 0x0004 */ unsigned short wCodePage;
}; /* size: 0x0006 */

enum tagLIBFLAGS
{
  LIBFLAG_FRESTRICTED = 1,
  LIBFLAG_FCONTROL = 2,
  LIBFLAG_FHIDDEN = 4,
  LIBFLAG_FHASDISKIMAGE = 8,
};

struct tagLICINFO
{
  /* 0x0000 */ long cbLicInfo;
  /* 0x0004 */ int fRuntimeKeyAvail;
  /* 0x0008 */ int fLicVerified;
}; /* size: 0x000c */

enum tagLOADSTATE
{
  LOADSTATE_FAIL = 0,
  LOADSTATE_DONE = 1,
  LOADSTATE_BADFMTID = 2,
  LOADSTATE_USERDEFINEDNOTFOUND = 3,
  LOADSTATE_USERDEFINEDDELETE = 4,
};

struct tagLOCALESIGNATURE
{
  /* 0x0000 */ unsigned long lsUsb[4];
  /* 0x0010 */ unsigned long lsCsbDefault[2];
  /* 0x0018 */ unsigned long lsCsbSupported[2];
}; /* size: 0x0020 */

enum tagLOCALFLAG
{
  LOCALF_NONE = 0,
  LOCALF_NONNDR = 2048,
};

enum tagLOCKTYPE
{
  LOCK_WRITE = 1,
  LOCK_EXCLUSIVE = 2,
  LOCK_ONLYONCE = 4,
};

struct tagLOGBRUSH
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned long lbHatch;
}; /* size: 0x000c */

struct tagLOGBRUSH32
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned long lbHatch;
}; /* size: 0x000c */

struct tagLOGCOLORSPACEA
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ char lcsFilename[260];
}; /* size: 0x0148 */

struct tagLOGCOLORSPACEW
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ wchar_t lcsFilename[260];
}; /* size: 0x024c */

struct tagLOGFONTA
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ char lfFaceName[32];
}; /* size: 0x003c */

struct tagLOGFONTW
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ wchar_t lfFaceName[32];
}; /* size: 0x005c */

struct tagLOGPALETTE
{
  /* 0x0000 */ unsigned short palVersion;
  /* 0x0002 */ unsigned short palNumEntries;
  /* 0x0004 */ struct tagPALETTEENTRY palPalEntry[1];
}; /* size: 0x0008 */

struct tagLOGPEN
{
  /* 0x0000 */ unsigned int lopnStyle;
  /* 0x0004 */ struct tagPOINT lopnWidth;
  /* 0x000c */ unsigned long lopnColor;
}; /* size: 0x0010 */

enum tagLocalServerType
{
  LocalServerType16 = 0,
  LocalServerType32 = 1,
};

struct tagLocationInfoData
{
  /* 0x0000 */ unsigned short* machineName;
  /* 0x0004 */ unsigned long processId;
  /* 0x0008 */ unsigned long apartmentId;
  /* 0x000c */ unsigned long contextId;
}; /* size: 0x0010 */

enum tagMARKUPLINKTEXT
{
  MARKUPLINKTEXT_URL = 0,
  MARKUPLINKTEXT_ID = 1,
  MARKUPLINKTEXT_TEXT = 2,
};

enum tagMARKUPMESSAGE
{
  MARKUPMESSAGE_KEYEXECUTE = 0,
  MARKUPMESSAGE_CLICKEXECUTE = 1,
  MARKUPMESSAGE_WANTFOCUS = 2,
};

enum tagMARKUPSIZE
{
  MARKUPSIZE_CALCWIDTH = 0,
  MARKUPSIZE_CALCHEIGHT = 1,
};

struct tagMDICREATESTRUCTA
{
  /* 0x0000 */ const char* szClass;
  /* 0x0004 */ const char* szTitle;
  /* 0x0008 */ void* hOwner;
  /* 0x000c */ int x;
  /* 0x0010 */ int y;
  /* 0x0014 */ int cx;
  /* 0x0018 */ int cy;
  /* 0x001c */ unsigned long style;
  /* 0x0020 */ long lParam;
}; /* size: 0x0024 */

struct tagMDICREATESTRUCTW
{
  /* 0x0000 */ const wchar_t* szClass;
  /* 0x0004 */ const wchar_t* szTitle;
  /* 0x0008 */ void* hOwner;
  /* 0x000c */ int x;
  /* 0x0010 */ int y;
  /* 0x0014 */ int cx;
  /* 0x0018 */ int cy;
  /* 0x001c */ unsigned long style;
  /* 0x0020 */ long lParam;
}; /* size: 0x0024 */

struct tagMDINEXTMENU
{
  /* 0x0000 */ struct HMENU__* hmenuIn;
  /* 0x0004 */ struct HMENU__* hmenuNext;
  /* 0x0008 */ struct HWND__* hwndNext;
}; /* size: 0x000c */

struct tagMEASUREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemWidth;
  /* 0x0010 */ unsigned int itemHeight;
  /* 0x0014 */ unsigned long itemData;
}; /* size: 0x0018 */

enum tagMEMCTX
{
  MEMCTX_TASK = 1,
  MEMCTX_SHARED = 2,
  MEMCTX_MACSYSTEM = 3,
  MEMCTX_UNKNOWN = -1,
  MEMCTX_SAME = -2,
};

struct tagMENUBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcBar;
  /* 0x0014 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndMenu;
  struct /* bitfield */
  {
    /* 0x001c */ int fBarFocused : 1; /* bit position: 0 */
    /* 0x001c */ int fFocused : 1; /* bit position: 1 */
  }; /* bitfield */
}; /* size: 0x0020 */

struct tagMENUGETOBJECTINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned int uPos;
  /* 0x0008 */ struct HMENU__* hmenu;
  /* 0x000c */ void* riid;
  /* 0x0010 */ void* pvObj;
}; /* size: 0x0014 */

struct tagMENUINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ unsigned long dwStyle;
  /* 0x000c */ unsigned int cyMax;
  /* 0x0010 */ struct HBRUSH__* hbrBack;
  /* 0x0014 */ unsigned long dwContextHelpID;
  /* 0x0018 */ unsigned long dwMenuData;
}; /* size: 0x001c */

struct tagMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ struct HMENU__* hSubMenu;
  /* 0x0018 */ struct HBITMAP__* hbmpChecked;
  /* 0x001c */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ char* dwTypeData;
  /* 0x0028 */ unsigned int cch;
  /* 0x002c */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0030 */

struct tagMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ struct HMENU__* hSubMenu;
  /* 0x0018 */ struct HBITMAP__* hbmpChecked;
  /* 0x001c */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ wchar_t* dwTypeData;
  /* 0x0028 */ unsigned int cch;
  /* 0x002c */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0030 */

enum tagMENUPOPUPSELECT
{
  MPOS_EXECUTE = 0,
  MPOS_FULLCANCEL = 1,
  MPOS_CANCELLEVEL = 2,
  MPOS_SELECTLEFT = 3,
  MPOS_SELECTRIGHT = 4,
  MPOS_CHILDTRACKING = 5,
};

struct tagMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ struct HMETAFILE__* hMF;
}; /* size: 0x0010 */

struct tagMETAHEADER
{
  /* 0x0000 */ unsigned short mtType;
  /* 0x0002 */ unsigned short mtHeaderSize;
  /* 0x0004 */ unsigned short mtVersion;
  /* 0x0006 */ unsigned long mtSize;
  /* 0x000a */ unsigned short mtNoObjects;
  /* 0x000c */ unsigned long mtMaxRecord;
  /* 0x0010 */ unsigned short mtNoParameters;
}; /* size: 0x0012 */

struct tagMETARECORD
{
  /* 0x0000 */ unsigned long rdSize;
  /* 0x0004 */ unsigned short rdFunction;
  /* 0x0006 */ unsigned short rdParm[1];
}; /* size: 0x0008 */

struct tagMETHODDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0004 */ struct tagPARAMDATA* ppdata;
  /* 0x0008 */ long dispid;
  /* 0x000c */ unsigned int iMeth;
  /* 0x0010 */ enum tagCALLCONV cc;
  /* 0x0014 */ unsigned int cArgs;
  /* 0x0018 */ unsigned short wFlags;
  /* 0x001a */ unsigned short vtReturn;
}; /* size: 0x001c */

struct tagMINIMIZEDMETRICS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iWidth;
  /* 0x0008 */ int iHorzGap;
  /* 0x000c */ int iVertGap;
  /* 0x0010 */ int iArrange;
}; /* size: 0x0014 */

struct tagMINMAXINFO
{
  /* 0x0000 */ struct tagPOINT ptReserved;
  /* 0x0008 */ struct tagPOINT ptMaxSize;
  /* 0x0010 */ struct tagPOINT ptMaxPosition;
  /* 0x0018 */ struct tagPOINT ptMinTrackSize;
  /* 0x0020 */ struct tagPOINT ptMaxTrackSize;
}; /* size: 0x0028 */

struct tagMInterfacePointer
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

enum tagMKREDUCE
{
  MKRREDUCE_ONE = 0x30000,
  MKRREDUCE_TOUSER = 0x20000,
  MKRREDUCE_THROUGHUSER = 0x10000,
  MKRREDUCE_ALL = 0,
};

enum tagMKSYS
{
  MKSYS_NONE = 0,
  MKSYS_GENERICCOMPOSITE = 1,
  MKSYS_FILEMONIKER = 2,
  MKSYS_ANTIMONIKER = 3,
  MKSYS_ITEMMONIKER = 4,
  MKSYS_POINTERMONIKER = 5,
  MKSYS_CLASSMONIKER = 7,
  MKSYS_OBJREFMONIKER = 8,
  MKSYS_SESSIONMONIKER = 9,
  MKSYS_LUAMONIKER = 10,
};

struct tagMONCBSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned long dwTime;
  /* 0x0008 */ void* hTask;
  /* 0x000c */ unsigned long dwRet;
  /* 0x0010 */ unsigned int wType;
  /* 0x0014 */ unsigned int wFmt;
  /* 0x0018 */ struct HCONV__* hConv;
  /* 0x001c */ struct HSZ__* hsz1;
  /* 0x0020 */ struct HSZ__* hsz2;
  /* 0x0024 */ struct HDDEDATA__* hData;
  /* 0x0028 */ unsigned long dwData1;
  /* 0x002c */ unsigned long dwData2;
  /* 0x0030 */ struct tagCONVCONTEXT cc;
  /* 0x0054 */ unsigned long cbData;
  /* 0x0058 */ unsigned long Data[8];
}; /* size: 0x0078 */

struct tagMONCONVSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fConnect;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ void* hTask;
  /* 0x0010 */ struct HSZ__* hszSvc;
  /* 0x0014 */ struct HSZ__* hszTopic;
  /* 0x0018 */ struct HCONV__* hConvClient;
  /* 0x001c */ struct HCONV__* hConvServer;
}; /* size: 0x0020 */

struct tagMONERRSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned int wLastError;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ void* hTask;
}; /* size: 0x0010 */

struct tagMONHSZSTRUCTA
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fsAction;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ struct HSZ__* hsz;
  /* 0x0010 */ void* hTask;
  /* 0x0014 */ char str[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct tagMONHSZSTRUCTW
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fsAction;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ struct HSZ__* hsz;
  /* 0x0010 */ void* hTask;
  /* 0x0014 */ wchar_t str[1];
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

struct tagMONITORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcMonitor;
  /* 0x0014 */ struct tagRECT rcWork;
  /* 0x0024 */ unsigned long dwFlags;
}; /* size: 0x0028 */

struct tagMONITORINFOEXA
{
  /* 0x0028 */ char szDevice[32];
}; /* size: 0x0048 */

struct tagMONITORINFOEXW
{
  /* 0x0028 */ wchar_t szDevice[32];
}; /* size: 0x0068 */

struct tagMONLINKSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned long dwTime;
  /* 0x0008 */ void* hTask;
  /* 0x000c */ int fEstablished;
  /* 0x0010 */ int fNoData;
  /* 0x0014 */ struct HSZ__* hszSvc;
  /* 0x0018 */ struct HSZ__* hszTopic;
  /* 0x001c */ struct HSZ__* hszItem;
  /* 0x0020 */ unsigned int wFmt;
  /* 0x0024 */ int fServer;
  /* 0x0028 */ struct HCONV__* hConvServer;
  /* 0x002c */ struct HCONV__* hConvClient;
}; /* size: 0x0030 */

struct tagMONMSGSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ struct HWND__* hwndTo;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ void* hTask;
  /* 0x0010 */ unsigned int wMsg;
  /* 0x0014 */ unsigned int wParam;
  /* 0x0018 */ long lParam;
  /* 0x001c */ struct tagDDEML_MSG_HOOK_DATA dmhd;
}; /* size: 0x0048 */

struct tagMOUSEHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x000c */ unsigned int wHitTestCode;
  /* 0x0010 */ unsigned long dwExtraInfo;
}; /* size: 0x0014 */

struct tagMOUSEHOOKSTRUCTEX
{
  /* 0x0014 */ unsigned long mouseData;
}; /* size: 0x0018 */

struct tagMOUSEINPUT
{
  /* 0x0000 */ long dx;
  /* 0x0004 */ long dy;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ unsigned long dwExtraInfo;
}; /* size: 0x0018 */

struct tagMOUSEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iMaxSpeed;
  /* 0x000c */ unsigned long iTimeToMaxSpeed;
  /* 0x0010 */ unsigned long iCtrlSpeed;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
}; /* size: 0x001c */

struct tagMOUSEMOVEPOINT
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ unsigned long dwExtraInfo;
}; /* size: 0x0010 */

struct tagMSG
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ unsigned int message;
  /* 0x0008 */ unsigned int wParam;
  /* 0x000c */ long lParam;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ struct tagPOINT pt;
}; /* size: 0x001c */

struct tagMSGBOXPARAMSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct HWND__* hwndOwner;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x000c */ const char* lpszText;
  /* 0x0010 */ const char* lpszCaption;
  /* 0x0014 */ unsigned long dwStyle;
  /* 0x0018 */ const char* lpszIcon;
  /* 0x001c */ unsigned long dwContextHelpId;
  /* 0x0020 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0024 */ unsigned long dwLanguageId;
}; /* size: 0x0028 */

struct tagMSGBOXPARAMSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct HWND__* hwndOwner;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x000c */ const wchar_t* lpszText;
  /* 0x0010 */ const wchar_t* lpszCaption;
  /* 0x0014 */ unsigned long dwStyle;
  /* 0x0018 */ const wchar_t* lpszIcon;
  /* 0x001c */ unsigned long dwContextHelpId;
  /* 0x0020 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0024 */ unsigned long dwLanguageId;
}; /* size: 0x0028 */

enum tagMSHCTX
{
  MSHCTX_LOCAL = 0,
  MSHCTX_NOSHAREDMEM = 1,
  MSHCTX_DIFFERENTMACHINE = 2,
  MSHCTX_INPROC = 3,
  MSHCTX_CROSSCTX = 4,
};

enum tagMSHLFLAGS
{
  MSHLFLAGS_NORMAL = 0,
  MSHLFLAGS_TABLESTRONG = 1,
  MSHLFLAGS_TABLEWEAK = 2,
  MSHLFLAGS_NOPING = 4,
  MSHLFLAGS_RESERVED1 = 8,
  MSHLFLAGS_RESERVED2 = 16,
  MSHLFLAGS_RESERVED3 = 32,
  MSHLFLAGS_RESERVED4 = 64,
};

enum tagMSIINSTALLCONTEXT
{
  MSIINSTALLCONTEXT_FIRSTVISIBLE = 0,
  MSIINSTALLCONTEXT_NONE = 0,
  MSIINSTALLCONTEXT_USERMANAGED = 1,
  MSIINSTALLCONTEXT_USERUNMANAGED = 2,
  MSIINSTALLCONTEXT_MACHINE = 4,
  MSIINSTALLCONTEXT_ALL = 7,
  MSIINSTALLCONTEXT_ALLUSERMANAGED = 8,
};

enum tagMSIPATCHSTATE
{
  MSIPATCHSTATE_INVALID = 0,
  MSIPATCHSTATE_APPLIED = 1,
  MSIPATCHSTATE_SUPERSEDED = 2,
  MSIPATCHSTATE_OBSOLETED = 4,
  MSIPATCHSTATE_REGISTERED = 8,
  MSIPATCHSTATE_ALL = 15,
};

struct tagMSLLHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long flags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ unsigned long dwExtraInfo;
}; /* size: 0x0018 */

struct tagMULTIKEYHELPA
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ char mkKeylist;
  /* 0x0005 */ char szKeyphrase[1];
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

struct tagMULTIKEYHELPW
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ wchar_t mkKeylist;
  /* 0x0006 */ wchar_t szKeyphrase[1];
}; /* size: 0x0008 */

struct tagMULTI_QI
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0004 */ struct IUnknown* pItf;
  /* 0x0008 */ HRESULT hr;
}; /* size: 0x000c */

struct tagMainHeader
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long cPolicies;
  /* 0x000c */ unsigned long cbBuffer;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ long hr;
  /* 0x0018 */ long hrServer;
  /* 0x001c */ long reserved;
}; /* size: 0x0020 */

struct tagMethodInfo
{
  /* 0x0000 */ struct tagFUNCDESC* pFuncDesc;
  /* 0x0004 */ struct ITypeInfo* pTypeInfo;
}; /* size: 0x0008 */

struct tagNCCALCSIZE_PARAMS
{
  /* 0x0000 */ struct tagRECT rgrc[3];
  /* 0x0030 */ struct tagWINDOWPOS* lppos;
}; /* size: 0x0034 */

struct tagNC_ADDRESS
{
  /* 0x0000 */ struct NET_ADDRESS_INFO_* pAddrInfo;
  /* 0x0004 */ unsigned short PortNumber;
  /* 0x0006 */ unsigned char PrefixLength;
  /* 0x0007 */ char __PADDING__[1];
}; /* size: 0x0008 */

struct tagNEWTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0038 */ unsigned long ntmFlags;
  /* 0x003c */ unsigned int ntmSizeEM;
  /* 0x0040 */ unsigned int ntmCellHeight;
  /* 0x0044 */ unsigned int ntmAvgWidth;
}; /* size: 0x0048 */

struct tagNEWTEXTMETRICEXA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICA ntmTm;
  /* 0x0048 */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0060 */

struct tagNEWTEXTMETRICEXW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICW ntmTm;
  /* 0x004c */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0064 */

struct tagNEWTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x003c */ unsigned long ntmFlags;
  /* 0x0040 */ unsigned int ntmSizeEM;
  /* 0x0044 */ unsigned int ntmCellHeight;
  /* 0x0048 */ unsigned int ntmAvgWidth;
}; /* size: 0x004c */

struct tagNFFCONTROLBITS
{
  /* 0x0000 */ unsigned short sig;
  /* 0x0002 */ unsigned short hsmStatus;
  /* 0x0004 */ unsigned long bits;
  /* 0x0008 */ struct _GUID clsid;
}; /* size: 0x0018 */

struct tagNMHDR
{
  /* 0x0000 */ struct HWND__* hwndFrom;
  /* 0x0004 */ unsigned int idFrom;
  /* 0x0008 */ unsigned int code;
}; /* size: 0x000c */

struct tagNONCLIENTMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTA lfCaptionFont;
  /* 0x0054 */ int iSmCaptionWidth;
  /* 0x0058 */ int iSmCaptionHeight;
  /* 0x005c */ struct tagLOGFONTA lfSmCaptionFont;
  /* 0x0098 */ int iMenuWidth;
  /* 0x009c */ int iMenuHeight;
  /* 0x00a0 */ struct tagLOGFONTA lfMenuFont;
  /* 0x00dc */ struct tagLOGFONTA lfStatusFont;
  /* 0x0118 */ struct tagLOGFONTA lfMessageFont;
  /* 0x0154 */ int iPaddedBorderWidth;
}; /* size: 0x0158 */

struct tagNONCLIENTMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTW lfCaptionFont;
  /* 0x0074 */ int iSmCaptionWidth;
  /* 0x0078 */ int iSmCaptionHeight;
  /* 0x007c */ struct tagLOGFONTW lfSmCaptionFont;
  /* 0x00d8 */ int iMenuWidth;
  /* 0x00dc */ int iMenuHeight;
  /* 0x00e0 */ struct tagLOGFONTW lfMenuFont;
  /* 0x013c */ struct tagLOGFONTW lfStatusFont;
  /* 0x0198 */ struct tagLOGFONTW lfMessageFont;
  /* 0x01f4 */ int iPaddedBorderWidth;
}; /* size: 0x01f8 */

struct tagOBJECTDESCRIPTOR
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long dwDrawAspect;
  /* 0x0018 */ struct tagSIZE sizel;
  /* 0x0020 */ struct _POINTL pointl;
  /* 0x0028 */ unsigned long dwStatus;
  /* 0x002c */ unsigned long dwFullUserTypeName;
  /* 0x0030 */ unsigned long dwSrcOfCopy;
}; /* size: 0x0034 */

enum tagOBJFLAGS
{
  OBJFLAGS_LINK = 1,
  OBJFLAGS_DOCUMENT = 2,
  OBJFLAGS_CONVERT = 4,
  OBJFLAGS_CACHEEMPTY = 8,
};

struct tagOBJREF
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct _GUID iid;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0046 */ char __PADDING__[2];
      } /* size: 0x0030 */ u_standard;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct _GUID clsid;
        /* 0x0050 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0056 */ char __PADDING__[2];
      } /* size: 0x0040 */ u_handler;
      struct
      {
        /* 0x0018 */ struct _GUID clsid;
        /* 0x0028 */ unsigned long cbExtension;
        /* 0x002c */ unsigned long size;
        /* 0x0030 */ unsigned char* pData;
      } /* size: 0x001c */ u_custom;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagOBJREFDATA* pORData;
        /* 0x0044 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x004a */ char __PADDING__[6];
      } /* size: 0x0038 */ u_extended;
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ u_objref;
}; /* size: 0x0058 */

struct tagOBJREFDATA
{
  /* 0x0000 */ unsigned long nElms;
  /* 0x0004 */ struct tagDATAELEMENT** ppElmArray;
}; /* size: 0x0008 */

struct tagOCPFIPARAMS
{
  /* 0x0000 */ unsigned long cbStructSize;
  /* 0x0004 */ struct HWND__* hWndOwner;
  /* 0x0008 */ int x;
  /* 0x000c */ int y;
  /* 0x0010 */ const wchar_t* lpszCaption;
  /* 0x0014 */ unsigned long cObjects;
  /* 0x0018 */ struct IUnknown** lplpUnk;
  /* 0x001c */ unsigned long cPages;
  /* 0x0020 */ struct _GUID* lpPages;
  /* 0x0024 */ unsigned long lcid;
  /* 0x0028 */ long dispidInitialProperty;
}; /* size: 0x002c */

struct tagOIDData
{
  /* 0x0000 */ const struct _GUID* pmoid;
  /* 0x0004 */ unsigned long aptID;
}; /* size: 0x0008 */

struct tagOIFI
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fMDIApp;
  /* 0x0008 */ struct HWND__* hwndFrame;
  /* 0x000c */ struct HACCEL__* haccel;
  /* 0x0010 */ unsigned int cAccelEntries;
}; /* size: 0x0014 */

struct tagOLE1DISPATCHDATA
{
  /* 0x0000 */ enum DDE_DISPATCH_FUNC wDispFunc;
}; /* size: 0x0004 */

enum tagOLECLOSE
{
  OLECLOSE_SAVEIFDIRTY = 0,
  OLECLOSE_NOSAVE = 1,
  OLECLOSE_PROMPTSAVE = 2,
};

enum tagOLECONTF
{
  OLECONTF_EMBEDDINGS = 1,
  OLECONTF_LINKS = 2,
  OLECONTF_OTHERS = 4,
  OLECONTF_ONLYUSER = 8,
  OLECONTF_ONLYIFRUNNING = 16,
};

enum tagOLEDCFLAGS
{
  OLEDC_NODRAW = 1,
  OLEDC_PAINTBKGND = 2,
  OLEDC_OFFSCREEN = 4,
};

enum tagOLEGETMONIKER
{
  OLEGETMONIKER_ONLYIFTHERE = 1,
  OLEGETMONIKER_FORCEASSIGN = 2,
  OLEGETMONIKER_UNASSIGN = 3,
  OLEGETMONIKER_TEMPFORUSER = 4,
};

enum tagOLELINKBIND
{
  OLELINKBIND_EVENIFCLASSDIFF = 1,
};

struct tagOLEMENU
{
  /* 0x0000 */ unsigned short wSignature;
  /* 0x0004 */ unsigned long hwndFrame;
  /* 0x0008 */ unsigned long hmenuCombined;
  /* 0x000c */ struct tagOleMenuGroupWidths MenuWidths;
  /* 0x0024 */ long lMenuCnt;
  /* 0x0028 */ struct tagOLEMENUITEM menuitem[1];
}; /* size: 0x0034 */

struct tagOLEMENUITEM
{
  /* 0x0000 */ unsigned int item;
  /* 0x0004 */ unsigned short fwPopup;
  /* 0x0008 */ int fObjectMenu;
}; /* size: 0x000c */

enum tagOLEMISC
{
  OLEMISC_RECOMPOSEONRESIZE = 1,
  OLEMISC_ONLYICONIC = 2,
  OLEMISC_INSERTNOTREPLACE = 4,
  OLEMISC_STATIC = 8,
  OLEMISC_CANTLINKINSIDE = 16,
  OLEMISC_CANLINKBYOLE1 = 32,
  OLEMISC_ISLINKOBJECT = 64,
  OLEMISC_INSIDEOUT = 128,
  OLEMISC_ACTIVATEWHENVISIBLE = 256,
  OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512,
  OLEMISC_INVISIBLEATRUNTIME = 1024,
  OLEMISC_ALWAYSRUN = 2048,
  OLEMISC_ACTSLIKEBUTTON = 4096,
  OLEMISC_ACTSLIKELABEL = 8192,
  OLEMISC_NOUIACTIVATE = 16384,
  OLEMISC_ALIGNABLE = 0xffff8000,
  OLEMISC_SIMPLEFRAME = 0x10000,
  OLEMISC_SETCLIENTSITEFIRST = 0x20000,
  OLEMISC_IMEMODE = 0x40000,
  OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
  OLEMISC_WANTSTOMENUMERGE = 0x100000,
  OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,
};

struct tagOLEPRESSTMHDR
{
  /* 0x0000 */ unsigned long dwAspect;
  /* 0x0004 */ unsigned long dwLindex;
  /* 0x0008 */ unsigned long dwAdvf;
}; /* size: 0x000c */

enum tagOLERENDER
{
  OLERENDER_NONE = 0,
  OLERENDER_DRAW = 1,
  OLERENDER_FORMAT = 2,
  OLERENDER_ASIS = 3,
};

enum tagOLETLSFLAGS
{
  OLETLS_LOCALTID = 1,
  OLETLS_UUIDINITIALIZED = 2,
  OLETLS_INTHREADDETACH = 4,
  OLETLS_CHANNELTHREADINITIALZED = 8,
  OLETLS_WOWTHREAD = 16,
  OLETLS_THREADUNINITIALIZING = 32,
  OLETLS_DISABLE_OLE1DDE = 64,
  OLETLS_APARTMENTTHREADED = 128,
  OLETLS_MULTITHREADED = 256,
  OLETLS_IMPERSONATING = 512,
  OLETLS_DISABLE_EVENTLOGGER = 1024,
  OLETLS_INNEUTRALAPT = 2048,
  OLETLS_DISPATCHTHREAD = 4096,
  OLETLS_HOSTTHREAD = 8192,
  OLETLS_ALLOWCOINIT = 16384,
  OLETLS_PENDINGUNINIT = 0xffff8000,
  OLETLS_FIRSTMTAINIT = 0x10000,
  OLETLS_FIRSTNTAINIT = 0x20000,
  OLETLS_APTINITIALIZING = 0x40000,
};

enum tagOLEUPDATE
{
  OLEUPDATE_ALWAYS = 1,
  OLEUPDATE_ONCALL = 3,
};

struct tagOLEVERB
{
  /* 0x0000 */ long lVerb;
  /* 0x0004 */ wchar_t* lpszVerbName;
  /* 0x0008 */ unsigned long fuFlags;
  /* 0x000c */ unsigned long grfAttribs;
}; /* size: 0x0010 */

enum tagOLEVERBATTRIB
{
  OLEVERBATTRIB_NEVERDIRTIES = 1,
  OLEVERBATTRIB_ONCONTAINERMENU = 2,
};

enum tagOLEWHICHMK
{
  OLEWHICHMK_CONTAINER = 1,
  OLEWHICHMK_OBJREL = 2,
  OLEWHICHMK_OBJFULL = 3,
};

enum tagORFLAG
{
  ORF_CONNECTED = 1,
  ORF_STRINGSREGISTERED = 2,
  ORF_INBULKUPDATECALL = 4,
};

struct tagORPCTHAT
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0008 */

struct tagORPCTHIS
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0020 */

struct tagORPC_EXTENT
{
  /* 0x0000 */ struct _GUID id;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct tagORPC_EXTENT_ARRAY
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ struct tagORPC_EXTENT** extent;
}; /* size: 0x000c */

enum tagORT
{
  ORT_UNUSED = 0,
  ORT_OBJREF = 1,
  ORT_LAZY_OBJREF = 2,
  ORT_AGILE = 4,
  ORT_LAZY_AGILE = 8,
  ORT_STREAM = 22,
  ORT_FREETM = 50,
};

enum tagOXIDFLAGS
{
  OXIDF_REGISTERED = 1,
  OXIDF_MACHINE_LOCAL = 2,
  OXIDF_STOPPED = 4,
  OXIDF_PENDINGRELEASE = 8,
  OXIDF_REGISTERINGOIDS = 32,
  OXIDF_MTASERVER = 64,
  OXIDF_NTASERVER = 128,
  OXIDF_STASERVER = 256,
  OXIDF_REMOTEINITIALIZED = 512,
  OXIDF_MTASTOPPED = 68,
  OXIDF_NTASTOPPED = 132,
};

struct tagOXID_INFO
{
  /* 0x0000 */ unsigned long dwTid;
  /* 0x0004 */ unsigned long dwPid;
  /* 0x0008 */ unsigned long dwAuthnHint;
  /* 0x000c */ struct tagCOMVERSION version;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ struct tagDUALSTRINGARRAY* psa;
}; /* size: 0x0028 */

struct tagOleMenuGroupWidths
{
  /* 0x0000 */ long width[6];
}; /* size: 0x0018 */

struct tagOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ unsigned char* data;
}; /* size: 0x0020 */

struct tagOutgoingActivationData
{
  /* 0x0000 */ struct _GUID guidServer;
}; /* size: 0x0010 */

struct tagOutgoingCallData
{
  /* 0x0000 */ unsigned long dwServerPID;
  /* 0x0004 */ unsigned long dwServerTID;
}; /* size: 0x0008 */

struct tagPAINTSTRUCT
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0004 */ int fErase;
  /* 0x0008 */ struct tagRECT rcPaint;
  /* 0x0018 */ int fRestore;
  /* 0x001c */ int fIncUpdate;
  /* 0x0020 */ unsigned char rgbReserved[32];
}; /* size: 0x0040 */

struct tagPALETTEENTRY
{
  /* 0x0000 */ unsigned char peRed;
  /* 0x0001 */ unsigned char peGreen;
  /* 0x0002 */ unsigned char peBlue;
  /* 0x0003 */ unsigned char peFlags;
}; /* size: 0x0004 */

struct tagPANOSE
{
  /* 0x0000 */ unsigned char bFamilyType;
  /* 0x0001 */ unsigned char bSerifStyle;
  /* 0x0002 */ unsigned char bWeight;
  /* 0x0003 */ unsigned char bProportion;
  /* 0x0004 */ unsigned char bContrast;
  /* 0x0005 */ unsigned char bStrokeVariation;
  /* 0x0006 */ unsigned char bArmStyle;
  /* 0x0007 */ unsigned char bLetterform;
  /* 0x0008 */ unsigned char bMidline;
  /* 0x0009 */ unsigned char bXHeight;
}; /* size: 0x000a */

struct tagPARAMDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0004 */ unsigned short vt;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

struct tagPARAMDESC
{
  /* 0x0000 */ struct tagPARAMDESCEX* pparamdescex;
  /* 0x0004 */ unsigned short wParamFlags;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

struct tagPARAMDESCEX
{
  /* 0x0000 */ unsigned long cBytes;
  /* 0x0008 */ struct tagVARIANT varDefaultValue;
}; /* size: 0x0018 */

enum tagPATCHOP
{
  PATCHOP_COMPUTESIZE = 0,
  PATCHOP_ALIGNLENGTHS = 1,
  PATCHOP_EXPAND = 2,
};

struct tagPCB
{
  /* 0x0000 */ char* pPicklingBuff;
  /* 0x0004 */ char* pTruePicklingBuff;
  /* 0x0008 */ unsigned long ulPicklingBuffSize;
  /* 0x000c */ unsigned long ulBytesUsed;
  /* 0x0010 */ struct tagSTREAM_ACL StreamACL;
  /* 0x001c */ void* PickleHandle;
  /* 0x0020 */ int bDirtyHandle;
  /* 0x0024 */ int bPickled;
  /* 0x0028 */ unsigned long ulMaxNumOfStreamACEs;
  /* 0x002c */ unsigned long ulNumOfStreamACEs;
}; /* size: 0x0030 */

struct tagPELARRAY
{
  /* 0x0000 */ long paXCount;
  /* 0x0004 */ long paYCount;
  /* 0x0008 */ long paXExt;
  /* 0x000c */ long paYExt;
  /* 0x0010 */ unsigned char paRGBs;
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

enum tagPENDINGMSG
{
  PENDINGMSG_CANCELCALL = 0,
  PENDINGMSG_WAITNOPROCESS = 1,
  PENDINGMSG_WAITDEFPROCESS = 2,
};

enum tagPENDINGTYPE
{
  PENDINGTYPE_TOPLEVEL = 1,
  PENDINGTYPE_NESTED = 2,
};

enum tagPGALLOCATORFLAGS
{
  PGALLOC_ZEROBRANDNEWPAGES = 1,
};

struct tagPICTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ unsigned int picType;
  union
  {
    struct
    {
      /* 0x0008 */ struct HBITMAP__* hbitmap;
      /* 0x000c */ struct HPALETTE__* hpal;
    } /* size: 0x0008 */ bmp;
    struct
    {
      /* 0x0008 */ struct HMETAFILE__* hmeta;
      /* 0x000c */ int xExt;
      /* 0x0010 */ int yExt;
    } /* size: 0x000c */ wmf;
    struct
    {
      /* 0x0008 */ struct HICON__* hicon;
    } /* size: 0x0004 */ icon;
    struct
    {
      struct
      {
        /* 0x0008 */ struct HENHMETAFILE__* hemf;
      } /* size: 0x0004 */ emf;
      /* 0x000c */ long __PADDING__[2];
    }; /* size: 0x000c */
  }; /* size: 0x000c */
}; /* size: 0x0014 */

struct tagPIDData
{
  /* 0x0000 */ struct IUnknown* pServer;
  /* 0x0004 */ class CObjectContext* pServerCtx;
}; /* size: 0x0008 */

struct tagPIXELFORMATDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerType;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long dwLayerMask;
  /* 0x0020 */ unsigned long dwVisibleMask;
  /* 0x0024 */ unsigned long dwDamageMask;
}; /* size: 0x0028 */

enum tagPKA_FLAGS
{
  PKA_SET = 0,
  PKA_APPEND = 1,
  PKA_DELETE = 2,
};

struct tagPLACEABLEMETAHEADER
{
  /* 0x0000 */ unsigned long key;
  /* 0x0004 */ unsigned short hmf;
  /* 0x0006 */ struct tagWIN16RECT bbox;
  /* 0x000e */ unsigned short inch;
  /* 0x0010 */ unsigned long reserved;
  /* 0x0014 */ unsigned short checksum;
}; /* size: 0x0016 */

struct tagPOINT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
}; /* size: 0x0008 */

enum tagPOINTERINACTIVE
{
  POINTERINACTIVE_ACTIVATEONENTRY = 1,
  POINTERINACTIVE_DEACTIVATEONLEAVE = 2,
  POINTERINACTIVE_ACTIVATEONDRAG = 4,
};

struct tagPOINTF
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
}; /* size: 0x0008 */

struct tagPOINTFX
{
  /* 0x0000 */ struct _FIXED x;
  /* 0x0004 */ struct _FIXED y;
}; /* size: 0x0008 */

struct tagPOINTS
{
  /* 0x0000 */ short x;
  /* 0x0002 */ short y;
}; /* size: 0x0004 */

struct tagPOLYTEXTA
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ const char* lpstr;
  /* 0x0010 */ unsigned int uiFlags;
  /* 0x0014 */ struct tagRECT rcl;
  /* 0x0024 */ int* pdx;
}; /* size: 0x0028 */

struct tagPOLYTEXTW
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ const wchar_t* lpstr;
  /* 0x0010 */ unsigned int uiFlags;
  /* 0x0014 */ struct tagRECT rcl;
  /* 0x0024 */ int* pdx;
}; /* size: 0x0028 */

struct tagPROPBAG2
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned short vt;
  /* 0x0006 */ unsigned short cfType;
  /* 0x0008 */ unsigned long dwHint;
  /* 0x000c */ wchar_t* pstrName;
  /* 0x0010 */ struct _GUID clsid;
}; /* size: 0x0020 */

enum tagPROPBAG2_TYPE
{
  PROPBAG2_TYPE_UNDEFINED = 0,
  PROPBAG2_TYPE_DATA = 1,
  PROPBAG2_TYPE_URL = 2,
  PROPBAG2_TYPE_OBJECT = 3,
  PROPBAG2_TYPE_STREAM = 4,
  PROPBAG2_TYPE_STORAGE = 5,
  PROPBAG2_TYPE_MONIKER = 6,
};

enum tagPROPCTL_FLAGS
{
  PCF_VISIBLE = 1,
  PCF_READONLY = 2,
  PCF_USEACTIVEBORDERS = 4,
  PCF_USEEDITINVITATION = 8,
  PCF_VERTPOS_TOP = 0,
  PCF_VERTPOS_CENTER = 16,
  PCF_VERTPOS_BOTTOM = 32,
  PCF_VERTPOS_MASK = 48,
  PCF_HORZPOS_LEFT = 0,
  PCF_HORZPOS_CENTER = 64,
  PCF_HORZPOS_RIGHT = 128,
  PCF_HORZPOS_MASK = 192,
  PCF_RTLREADING = 512,
  PCF_CAN_WRAP_TEXT = 1024,
  PCF_POS_MASK = 1776,
  PCF_NORMAL_TEXT = 0,
  PCF_SHADOW_TEXT = 256,
  PCF_FONT_MASK = 256,
  PCF_FLAGS_MASK = 2047,
};

enum tagPROPCTL_RECT_TYPE
{
  PCRT_MINIMUM = 0,
  PCRT_IDEAL = 1,
};

struct tagPROPERTYIDOFFSET
{
  /* 0x0000 */ unsigned long propid;
  /* 0x0004 */ unsigned long dwOffset;
}; /* size: 0x0008 */

struct tagPROPERTYSECTIONHEADER
{
  /* 0x0000 */ unsigned long cbSection;
  /* 0x0004 */ unsigned long cProperties;
  /* 0x0008 */ struct tagPROPERTYIDOFFSET rgprop[1];
}; /* size: 0x0010 */

struct tagPROPERTYSETHEADER
{
  /* 0x0000 */ unsigned short wByteOrder;
  /* 0x0002 */ unsigned short wFormat;
  /* 0x0004 */ unsigned long dwOSVer;
  /* 0x0008 */ struct _GUID clsid;
  /* 0x0018 */ unsigned long reserved;
}; /* size: 0x001c */

struct tagPROPERTY_INFORMATION
{
  /* 0x0000 */ unsigned long pid;
  /* 0x0004 */ unsigned long cbprop;
  /* 0x0008 */ enum _PROPOP operation;
}; /* size: 0x000c */

struct tagPROPMARSHALHEADER
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ struct _GUID policyId;
  /* 0x0020 */ unsigned long flags;
  /* 0x0024 */ unsigned long cb;
}; /* size: 0x0028 */

struct tagPROPPAGEINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ wchar_t* pszTitle;
  /* 0x0008 */ struct tagSIZE size;
  /* 0x0010 */ wchar_t* pszDocString;
  /* 0x0014 */ wchar_t* pszHelpFile;
  /* 0x0018 */ unsigned long dwHelpContext;
}; /* size: 0x001c */

enum tagPROPPAGESTATUS
{
  PROPPAGESTATUS_DIRTY = 1,
  PROPPAGESTATUS_VALIDATE = 2,
  PROPPAGESTATUS_CLEAN = 4,
};

struct tagPROPSPEC
{
  /* 0x0000 */ unsigned long ulKind;
  union
  {
    /* 0x0004 */ unsigned long propid;
    /* 0x0004 */ wchar_t* lpwstr;
  }; /* size: 0x0004 */
}; /* size: 0x0008 */

struct tagPROPVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ union _LARGE_INTEGER hVal;
        /* 0x0008 */ union _ULARGE_INTEGER uhVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ struct _FILETIME filetime;
        /* 0x0008 */ struct _GUID* puuid;
        /* 0x0008 */ struct tagCLIPDATA* pclipdata;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct tagBSTRBLOB bstrblobVal;
        /* 0x0008 */ struct tagBLOB blob;
        /* 0x0008 */ char* pszVal;
        /* 0x0008 */ wchar_t* pwszVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct IStream* pStream;
        /* 0x0008 */ struct IStorage* pStorage;
        /* 0x0008 */ struct tagVersionedStream* pVersionedStream;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ struct tagCAC cac;
        /* 0x0008 */ struct tagCAUB caub;
        /* 0x0008 */ struct tagCAI cai;
        /* 0x0008 */ struct tagCAUI caui;
        /* 0x0008 */ struct tagCAL cal;
        /* 0x0008 */ struct tagCAUL caul;
        /* 0x0008 */ struct tagCAH cah;
        /* 0x0008 */ struct tagCAUH cauh;
        /* 0x0008 */ struct tagCAFLT caflt;
        /* 0x0008 */ struct tagCADBL cadbl;
        /* 0x0008 */ struct tagCABOOL cabool;
        /* 0x0008 */ struct tagCASCODE cascode;
        /* 0x0008 */ struct tagCACY cacy;
        /* 0x0008 */ struct tagCADATE cadate;
        /* 0x0008 */ struct tagCAFILETIME cafiletime;
        /* 0x0008 */ struct tagCACLSID cauuid;
        /* 0x0008 */ struct tagCACLIPDATA caclipdata;
        /* 0x0008 */ struct tagCABSTR cabstr;
        /* 0x0008 */ struct tagCABSTRBLOB cabstrblob;
        /* 0x0008 */ struct tagCALPSTR calpstr;
        /* 0x0008 */ struct tagCALPWSTR calpwstr;
        /* 0x0008 */ struct tagCAPROPVARIANT capropvar;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagPROPVARIANT* pvarVal;
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
    /* 0x0000 */ struct tagDEC decVal;
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

struct tagPageEntry
{
  /* 0x0000 */ struct tagPageEntry* pNext;
  /* 0x0004 */ unsigned long dwFlag;
}; /* size: 0x0008 */

enum tagPictureAttributes
{
  PICTURE_SCALABLE = 1,
  PICTURE_TRANSPARENT = 2,
};

struct tagPolicyEntry
{
  /* 0x0000 */ struct tagPolicyEntry* pNext;
  /* 0x0004 */ struct tagPolicyEntry* pPrev;
  /* 0x0008 */ unsigned long ctxEvent;
  /* 0x000c */ struct IPolicy* pPolicy;
  /* 0x0010 */ struct _GUID policyID;
}; /* size: 0x0020 */

enum tagPreferredServerBitness
{
  SERVER_BITNESS_DEFAULT = 0,
  SERVER_BITNESS_FOLLOW_CLIENT = 1,
  SERVER_BITNESS_32BIT = 2,
  SERVER_BITNESS_64BIT = 3,
};

enum tagProcessType
{
  ProcessTypeNormal = 0,
  ProcessTypeService = 1,
  ProcessTypeComPlus = 2,
  ProcessTypeLegacySurrogate = 3,
  ProcessTypeComPlusService = 4,
};

enum tagPropPageOnApply
{
  PPOAACTION_CANCEL = 0,
  PPOAACTION_OK = 1,
  PPOAACTION_APPLY = 2,
};

struct tagPropsOutInfo
{
  /* 0x0000 */ unsigned long cIfs;
  /* 0x0004 */ struct _GUID* piid;
  /* 0x0008 */ HRESULT* phresults;
  /* 0x000c */ struct tagMInterfacePointer** ppIntfData;
}; /* size: 0x0010 */

struct tagProxyFileInfo
{
  /* 0x0000 */ struct tagCInterfaceProxyVtbl* const* pProxyVtblList;
  /* 0x0004 */ struct tagCInterfaceStubVtbl* const* pStubVtblList;
  /* 0x0008 */ const char* const* pNamesArray;
  /* 0x000c */ const struct _GUID** pDelegatedIIDs;
  /* 0x0010 */ void* const pIIDLookupRtn /* function */;
  /* 0x0014 */ unsigned short TableSize;
  /* 0x0016 */ unsigned short TableVersion;
  /* 0x0018 */ const struct _GUID** pAsyncIIDLookup;
  /* 0x001c */ long Filler2;
  /* 0x0020 */ long Filler3;
  /* 0x0024 */ long Filler4;
}; /* size: 0x0028 */

struct tagQACONTAINER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct IOleClientSite* pClientSite;
  /* 0x0008 */ struct IAdviseSinkEx* pAdviseSink;
  /* 0x000c */ struct IPropertyNotifySink* pPropertyNotifySink;
  /* 0x0010 */ struct IUnknown* pUnkEventSink;
  /* 0x0014 */ unsigned long dwAmbientFlags;
  /* 0x0018 */ unsigned long colorFore;
  /* 0x001c */ unsigned long colorBack;
  /* 0x0020 */ struct IFont* pFont;
  /* 0x0024 */ struct IOleUndoManager* pUndoMgr;
  /* 0x0028 */ unsigned long dwAppearance;
  /* 0x002c */ long lcid;
  /* 0x0030 */ struct HPALETTE__* hpal;
  /* 0x0034 */ struct IBindHost* pBindHost;
  /* 0x0038 */ struct IOleControlSite* pOleControlSite;
  /* 0x003c */ struct IServiceProvider* pServiceProvider;
}; /* size: 0x0040 */

enum tagQACONTAINERFLAGS
{
  QACONTAINER_SHOWHATCHING = 1,
  QACONTAINER_SHOWGRABHANDLES = 2,
  QACONTAINER_USERMODE = 4,
  QACONTAINER_DISPLAYASDEFAULT = 8,
  QACONTAINER_UIDEAD = 16,
  QACONTAINER_AUTOCLIP = 32,
  QACONTAINER_MESSAGEREFLECT = 64,
  QACONTAINER_SUPPORTSMNEMONICS = 128,
};

struct tagQACONTROL
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMiscStatus;
  /* 0x0008 */ unsigned long dwViewStatus;
  /* 0x000c */ unsigned long dwEventCookie;
  /* 0x0010 */ unsigned long dwPropNotifyCookie;
  /* 0x0014 */ unsigned long dwPointerActivationPolicy;
}; /* size: 0x0018 */

struct tagQICONTEXT
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct AsyncIRemUnknown2* pARU;
  /* 0x0008 */ unsigned short cIIDs;
  /* 0x000c */ struct _GUID* pIIDs;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ struct tagREMQIRESULT* pRemQiRes;
  /* 0x0018 */ struct tagIPIDEntry* pIPIDEntry;
  /* 0x001c */ struct IMarshal* pIM;
  /* 0x0020 */ HRESULT* phr;
  /* 0x0024 */ struct tagMInterfacePointer** ppMIFs;
  /* 0x0028 */ unsigned char data[1];
  /* 0x0029 */ char __PADDING__[3];
}; /* size: 0x002c */

struct tagQUERYCONTEXT
{
  /* 0x0000 */ unsigned long dwContext;
  /* 0x0004 */ struct tagCSPLATFORM Platform;
  /* 0x0014 */ unsigned long Locale;
  /* 0x0018 */ unsigned long dwVersionHi;
  /* 0x001c */ unsigned long dwVersionLo;
}; /* size: 0x0020 */

enum tagQUERY_PARSER_MANAGER_OPTION
{
  QPMO_SCHEMA_BINARY_NAME = 0,
  QPMO_PRELOCALIZED_SCHEMA_BINARY_PATH = 1,
  QPMO_UNLOCALIZED_SCHEMA_BINARY_PATH = 2,
  QPMO_LOCALIZED_SCHEMA_BINARY_PATH = 3,
  QPMO_APPEND_LCID_TO_LOCALIZED_PATH = 4,
  QPMO_LOCALIZER_SUPPORT = 5,
};

struct tagRAWHID
{
  /* 0x0000 */ unsigned long dwSizeHid;
  /* 0x0004 */ unsigned long dwCount;
  /* 0x0008 */ unsigned char bRawData[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

struct tagRAWINPUT
{
  /* 0x0000 */ struct tagRAWINPUTHEADER header;
  union
  {
    union
    {
      /* 0x0010 */ struct tagRAWMOUSE mouse;
      /* 0x0010 */ struct tagRAWKEYBOARD keyboard;
      /* 0x0010 */ struct tagRAWHID hid;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ data;
}; /* size: 0x0028 */

struct tagRAWINPUTDEVICE
{
  /* 0x0000 */ unsigned short usUsagePage;
  /* 0x0002 */ unsigned short usUsage;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTarget;
}; /* size: 0x000c */

struct tagRAWINPUTDEVICELIST
{
  /* 0x0000 */ void* hDevice;
  /* 0x0004 */ unsigned long dwType;
}; /* size: 0x0008 */

struct tagRAWINPUTHEADER
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSize;
  /* 0x0008 */ void* hDevice;
  /* 0x000c */ unsigned int wParam;
}; /* size: 0x0010 */

struct tagRAWKEYBOARD
{
  /* 0x0000 */ unsigned short MakeCode;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ unsigned short VKey;
  /* 0x0008 */ unsigned int Message;
  /* 0x000c */ unsigned long ExtraInformation;
}; /* size: 0x0010 */

struct tagRAWMOUSE
{
  /* 0x0000 */ unsigned short usFlags;
  union
  {
    /* 0x0004 */ unsigned long ulButtons;
    struct
    {
      /* 0x0004 */ unsigned short usButtonFlags;
      /* 0x0006 */ unsigned short usButtonData;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ulRawButtons;
  /* 0x000c */ long lLastX;
  /* 0x0010 */ long lLastY;
  /* 0x0014 */ unsigned long ulExtraInformation;
}; /* size: 0x0018 */

enum tagREADYSTATE
{
  READYSTATE_UNINITIALIZED = 0,
  READYSTATE_LOADING = 1,
  READYSTATE_LOADED = 2,
  READYSTATE_INTERACTIVE = 3,
  READYSTATE_COMPLETE = 4,
};

struct tagRECONVERTSTRING
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwStrLen;
  /* 0x000c */ unsigned long dwStrOffset;
  /* 0x0010 */ unsigned long dwCompStrLen;
  /* 0x0014 */ unsigned long dwCompStrOffset;
  /* 0x0018 */ unsigned long dwTargetStrLen;
  /* 0x001c */ unsigned long dwTargetStrOffset;
}; /* size: 0x0020 */

struct tagRECT
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
}; /* size: 0x0010 */

struct tagRECT16
{
  /* 0x0000 */ short left;
  /* 0x0002 */ short top;
  /* 0x0004 */ short right;
  /* 0x0006 */ short bottom;
}; /* size: 0x0008 */

enum tagRECYCLEBIN_TYPE
{
  RBT_VOLUME = 0,
  RBT_KNOWNFOLDER = 1,
};

enum tagREGCLS
{
  REGCLS_SINGLEUSE = 0,
  REGCLS_MULTIPLEUSE = 1,
  REGCLS_MULTI_SEPARATE = 2,
  REGCLS_SUSPENDED = 4,
  REGCLS_SURROGATE = 8,
};

struct tagREGISTERWORDA
{
  /* 0x0000 */ char* lpReading;
  /* 0x0004 */ char* lpWord;
}; /* size: 0x0008 */

struct tagREGISTERWORDW
{
  /* 0x0000 */ wchar_t* lpReading;
  /* 0x0004 */ wchar_t* lpWord;
}; /* size: 0x0008 */

enum tagREGKIND
{
  REGKIND_DEFAULT = 0,
  REGKIND_REGISTER = 1,
  REGKIND_NONE = 2,
};

struct tagREMINTERFACEREF
{
  /* 0x0000 */ struct _GUID ipid;
  /* 0x0010 */ unsigned long cPublicRefs;
  /* 0x0014 */ unsigned long cPrivateRefs;
}; /* size: 0x0018 */

struct tagREMQIRESULT
{
  /* 0x0000 */ HRESULT hResult;
  /* 0x0008 */ struct tagSTDOBJREF std;
}; /* size: 0x0030 */

struct tagRGBQUAD
{
  /* 0x0000 */ unsigned char rgbBlue;
  /* 0x0001 */ unsigned char rgbGreen;
  /* 0x0002 */ unsigned char rgbRed;
  /* 0x0003 */ unsigned char rgbReserved;
}; /* size: 0x0004 */

struct tagRGBTRIPLE
{
  /* 0x0000 */ unsigned char rgbtBlue;
  /* 0x0001 */ unsigned char rgbtGreen;
  /* 0x0002 */ unsigned char rgbtRed;
}; /* size: 0x0003 */

struct tagRID_DEVICE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwType;
  union
  {
    /* 0x0008 */ struct tagRID_DEVICE_INFO_MOUSE mouse;
    /* 0x0008 */ struct tagRID_DEVICE_INFO_KEYBOARD keyboard;
    struct
    {
      /* 0x0008 */ struct tagRID_DEVICE_INFO_HID hid;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0020 */

struct tagRID_DEVICE_INFO_HID
{
  /* 0x0000 */ unsigned long dwVendorId;
  /* 0x0004 */ unsigned long dwProductId;
  /* 0x0008 */ unsigned long dwVersionNumber;
  /* 0x000c */ unsigned short usUsagePage;
  /* 0x000e */ unsigned short usUsage;
}; /* size: 0x0010 */

struct tagRID_DEVICE_INFO_KEYBOARD
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSubType;
  /* 0x0008 */ unsigned long dwKeyboardMode;
  /* 0x000c */ unsigned long dwNumberOfFunctionKeys;
  /* 0x0010 */ unsigned long dwNumberOfIndicators;
  /* 0x0014 */ unsigned long dwNumberOfKeysTotal;
}; /* size: 0x0018 */

struct tagRID_DEVICE_INFO_MOUSE
{
  /* 0x0000 */ unsigned long dwId;
  /* 0x0004 */ unsigned long dwNumberOfButtons;
  /* 0x0008 */ unsigned long dwSampleRate;
  /* 0x000c */ int fHasHorizontalWheel;
}; /* size: 0x0010 */

struct tagRIFEntry
{
  /* 0x0000 */ struct SUUIDHashNode HashNode;
  /* 0x0018 */ struct _GUID iidCounterpart;
  /* 0x0028 */ struct _GUID psclsid;
  /* 0x0038 */ unsigned long dwFlags;
  /* 0x003c */ unsigned long cRefs;
  /* 0x0040 */ struct tagRIFEntry* pBase;
  /* 0x0044 */ struct _RPC_SERVER_INTERFACE* pSrvInterface;
  /* 0x0048 */ struct _RPC_CLIENT_INTERFACE* pCliInterface;
}; /* size: 0x004c */

enum tagROIDFLAG
{
  ROIDF_REGISTER = 1,
  ROIDF_PING = 2,
  ROIDF_DEREGISTER = 4,
  ROIDF_DELETEME = 8,
};

struct tagRPCOLEMESSAGE
{
  /* 0x0000 */ void* reserved1;
  /* 0x0004 */ unsigned long dataRepresentation;
  /* 0x0008 */ void* Buffer;
  /* 0x000c */ unsigned long cbBuffer;
  /* 0x0010 */ unsigned long iMethod;
  /* 0x0014 */ void* reserved2[5];
  /* 0x0028 */ unsigned long rpcFlags;
}; /* size: 0x002c */

struct tagRPC_CALL_ATTRIBUTES_V1_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ unsigned char* ServerPrincipalName;
  /* 0x0010 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x0014 */ unsigned char* ClientPrincipalName;
  /* 0x0018 */ unsigned long AuthenticationLevel;
  /* 0x001c */ unsigned long AuthenticationService;
  /* 0x0020 */ int NullSession;
}; /* size: 0x0024 */

struct tagRPC_CALL_ATTRIBUTES_V1_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ unsigned short* ServerPrincipalName;
  /* 0x0010 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x0014 */ unsigned short* ClientPrincipalName;
  /* 0x0018 */ unsigned long AuthenticationLevel;
  /* 0x001c */ unsigned long AuthenticationService;
  /* 0x0020 */ int NullSession;
}; /* size: 0x0024 */

struct tagRPC_CALL_ATTRIBUTES_V2_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ unsigned char* ServerPrincipalName;
  /* 0x0010 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x0014 */ unsigned char* ClientPrincipalName;
  /* 0x0018 */ unsigned long AuthenticationLevel;
  /* 0x001c */ unsigned long AuthenticationService;
  /* 0x0020 */ int NullSession;
  /* 0x0024 */ int KernelModeCaller;
  /* 0x0028 */ unsigned long ProtocolSequence;
  /* 0x002c */ unsigned long IsClientLocal;
  /* 0x0030 */ void* ClientPID;
  /* 0x0034 */ unsigned long CallStatus;
  /* 0x0038 */ enum tagRpcCallType CallType;
  /* 0x003c */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0040 */ unsigned short OpNum;
  /* 0x0044 */ struct _GUID InterfaceUuid;
}; /* size: 0x0054 */

struct tagRPC_CALL_ATTRIBUTES_V2_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ unsigned short* ServerPrincipalName;
  /* 0x0010 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x0014 */ unsigned short* ClientPrincipalName;
  /* 0x0018 */ unsigned long AuthenticationLevel;
  /* 0x001c */ unsigned long AuthenticationService;
  /* 0x0020 */ int NullSession;
  /* 0x0024 */ int KernelModeCaller;
  /* 0x0028 */ unsigned long ProtocolSequence;
  /* 0x002c */ enum tagRpcCallClientLocality IsClientLocal;
  /* 0x0030 */ void* ClientPID;
  /* 0x0034 */ unsigned long CallStatus;
  /* 0x0038 */ enum tagRpcCallType CallType;
  /* 0x003c */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0040 */ unsigned short OpNum;
  /* 0x0044 */ struct _GUID InterfaceUuid;
}; /* size: 0x0054 */

struct tagRPC_EE_INFO_PARAM
{
  /* 0x0000 */ enum tagExtendedErrorParamTypes ParameterType;
  union
  {
    union
    {
      /* 0x0008 */ char* AnsiString;
      /* 0x0008 */ wchar_t* UnicodeString;
      /* 0x0008 */ long LVal;
      /* 0x0008 */ short SVal;
      /* 0x0008 */ unsigned __int64 PVal;
      /* 0x0008 */ struct tagBinaryParam BVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
}; /* size: 0x0010 */

struct tagRPC_ERROR_ENUM_HANDLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ void* CurrentPos;
  /* 0x0008 */ void* Head;
}; /* size: 0x000c */

struct tagRPC_EXTENDED_ERROR_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ wchar_t* ComputerName;
  /* 0x0008 */ unsigned long ProcessID;
  union
  {
    union
    {
      /* 0x000c */ struct _SYSTEMTIME SystemTime;
      /* 0x000c */ struct _FILETIME FileTime;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
  /* 0x001c */ unsigned long GeneratingComponent;
  /* 0x0020 */ unsigned long Status;
  /* 0x0024 */ unsigned short DetectionLocation;
  /* 0x0026 */ unsigned short Flags;
  /* 0x0028 */ int NumberOfParameters;
  /* 0x0030 */ struct tagRPC_EE_INFO_PARAM Parameters[4];
}; /* size: 0x0070 */

enum tagRUNDOWN_RESULT
{
  RUNDWN_UNKNOWN = 1,
  RUNDWN_KEEP = 2,
  RUNDWN_RUNDOWN = 4,
};

struct tagRegIf
{
  /* 0x0000 */ void* hServerIf;
  /* 0x0004 */ unsigned long dwRegFlags;
  /* 0x0008 */ void* pfnSecurityCB /* function */;
}; /* size: 0x000c */

struct tagRemBRUSH
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagRemFORMATETC
{
  /* 0x0000 */ unsigned long cfFormat;
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

struct tagRemHBITMAP
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagRemHENHMETAFILE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagRemHGLOBAL
{
  /* 0x0000 */ long fNullHGlobal;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char data[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

struct tagRemHMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ unsigned long cbData;
  /* 0x0010 */ unsigned char data[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct tagRemHPALETTE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagRemSNB
{
  /* 0x0000 */ unsigned long ulCntStr;
  /* 0x0004 */ unsigned long ulCntChar;
  /* 0x0008 */ wchar_t rgString[1];
  /* 0x000a */ char __PADDING__[2];
}; /* size: 0x000c */

struct tagRemSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ unsigned long dwHandleType;
  /* 0x0008 */ unsigned long pData;
  /* 0x000c */ unsigned long pUnkForRelease;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

enum tagResourceGateId
{
  CreateProcessMemoryGate = 0,
  CreateObjectMemoryGate = 1,
};

enum tagRpcCallClientLocality
{
  rcclInvalid = 0,
  rcclLocal = 1,
  rcclRemote = 2,
  rcclClientUnknownLocality = 3,
};

enum tagRpcCallType
{
  rctInvalid = 0,
  rctNormal = 1,
  rctTraining = 2,
  rctGuaranteed = 3,
};

enum tagRpcLocalAddressFormat
{
  rlafInvalid = 0,
  rlafIPv4 = 1,
  rlafIPv6 = 2,
};

enum tagRunAsType
{
  RunAsSpecifiedUser = 0,
  RunAsInteractiveUser = 1,
  RunAsLaunchingUser = 2,
};

struct tagSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ void* pvData;
  /* 0x0010 */ struct tagSAFEARRAYBOUND rgsabound[1];
}; /* size: 0x0018 */

struct tagSAFEARRAYBOUND
{
  /* 0x0000 */ unsigned long cElements;
  /* 0x0004 */ long lLbound;
}; /* size: 0x0008 */

struct tagSCMSA
{
  /* 0x0000 */ unsigned short wNumEntries;
  /* 0x0002 */ unsigned short wSecurityOffset;
  /* 0x0004 */ wchar_t awszStringArray[62];
}; /* size: 0x0080 */

enum tagSCRIPTFLAGS
{
  SCRIPTFLAGS_CACHEINFO = 1,
  SCRIPTFLAGS_SHORTCUTS = 4,
  SCRIPTFLAGS_MACHINEASSIGN = 8,
  SCRIPTFLAGS_REGDATA_CNFGINFO = 32,
  SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 64,
  SCRIPTFLAGS_REGDATA_CLASSINFO = 128,
  SCRIPTFLAGS_REGDATA_EXTENSIONINFO = 256,
  SCRIPTFLAGS_REGDATA_APPINFO = 384,
  SCRIPTFLAGS_REGDATA = 416,
};

struct tagSCROLLBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcScrollBar;
  /* 0x0014 */ int dxyLineButton;
  /* 0x0018 */ int xyThumbTop;
  /* 0x001c */ int xyThumbBottom;
  /* 0x0020 */ int reserved;
  /* 0x0024 */ unsigned long rgstate[6];
}; /* size: 0x003c */

struct tagSCROLLINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ int nMin;
  /* 0x000c */ int nMax;
  /* 0x0010 */ unsigned int nPage;
  /* 0x0014 */ int nPos;
  /* 0x0018 */ int nTrackPos;
}; /* size: 0x001c */

enum tagSEARCHTEXTTYPE
{
  STTYPE_DEFAULT = 0,
  STTYPE_INITIAL = 1,
};

struct tagSECURITYBINDING
{
  /* 0x0000 */ unsigned short wAuthnSvc;
  /* 0x0002 */ unsigned short wAuthzSvc;
  /* 0x0004 */ unsigned short aPrincName;
}; /* size: 0x0006 */

struct tagSERIALIZEDPROPERTYVALUE
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned char rgb[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagSERIALKEYSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszActivePort;
  /* 0x000c */ char* lpszPort;
  /* 0x0010 */ unsigned int iBaudRate;
  /* 0x0014 */ unsigned int iPortState;
  /* 0x0018 */ unsigned int iActive;
}; /* size: 0x001c */

struct tagSERIALKEYSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszActivePort;
  /* 0x000c */ wchar_t* lpszPort;
  /* 0x0010 */ unsigned int iBaudRate;
  /* 0x0014 */ unsigned int iPortState;
  /* 0x0018 */ unsigned int iActive;
}; /* size: 0x001c */

enum tagSERVERCALL
{
  SERVERCALL_ISHANDLED = 0,
  SERVERCALL_REJECTED = 1,
  SERVERCALL_RETRYLATER = 2,
};

enum tagSERVERCALLEX
{
  SERVERCALLEX_ISHANDLED = 0,
  SERVERCALLEX_REJECTED = 1,
  SERVERCALLEX_RETRYLATER = 2,
  SERVERCALLEX_ERROR = 3,
  SERVERCALLEX_CANCELED = 5,
};

struct tagSExtEntry
{
  /* 0x0000 */ struct SExtHashNode m_node;
  /* 0x000c */ wchar_t* m_wszExt;
  /* 0x0010 */ struct _GUID m_clsid;
  /* 0x0020 */ wchar_t m_wszBuf[8];
}; /* size: 0x0030 */

enum tagSF_TYPE
{
  SF_ERROR = 10,
  SF_I1 = 16,
  SF_I2 = 2,
  SF_I4 = 3,
  SF_I8 = 20,
  SF_BSTR = 8,
  SF_UNKNOWN = 13,
  SF_DISPATCH = 9,
  SF_VARIANT = 12,
  SF_RECORD = 36,
  SF_HAVEIID = 0xffff800d,
};

enum tagSHELLSEARCHCOMMAND
{
  SSC_SEARCH_EXEC = 0,
  SSC_SEARCH_RETURNKEY = 1,
  SSC_AUTOCOMPLETE_DELETE = 2,
};

enum tagSHELL_BROWSER_FRAME_SIZE_POSITION
{
  SBFSP_XPOS = 1,
  SBFSP_XOFF = 2,
  SBFSP_YPOS = 4,
  SBFSP_YOFF = 8,
  SBFSP_WIDTHSET = 16,
  SBFSP_WIDTHINCR = 32,
  SBFSP_HEIGHTSET = 64,
  SBFSP_HEIGHTINCR = 128,
  SBFSP_RESTRICT = -2147483648,
  SBFSP_XMASK = 3,
  SBFSP_YMASK = 12,
  SBFSP_MOVEMASK = 15,
  SBFSP_MOVERELMASK = 10,
  SBFSP_WIDTHMASK = 48,
  SBFSP_HEIGHTMASK = 192,
  SBFSP_SIZEMASK = 240,
  SBFSP_SIZERELMASK = 160,
  SBFSP_RELOPMASK = 170,
};

enum tagSHELL_SEARCH_BAND_SEARCH_STATE
{
  SSBSS_DEFAULT = 0,
  SSBSS_NEW_PROVIDERS = 1,
  SSBSS_WEB = 2,
  SSBSS_FOLDER = 3,
};

enum tagSIGDN
{
  SIGDN_NORMALDISPLAY = 0,
  SIGDN_PARENTRELATIVEPARSING = -2147385343,
  SIGDN_DESKTOPABSOLUTEPARSING = -2147319808,
  SIGDN_PARENTRELATIVEEDITING = -2147282943,
  SIGDN_DESKTOPABSOLUTEEDITING = -2147172352,
  SIGDN_FILESYSPATH = -2147123200,
  SIGDN_URL = -2147057664,
  SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743,
  SIGDN_PARENTRELATIVE = -2146959359,
};

struct tagSIZE
{
  /* 0x0000 */ long cx;
  /* 0x0004 */ long cy;
}; /* size: 0x0008 */

enum tagSLGP_FLAGS
{
  SLGP_SHORTPATH = 1,
  SLGP_UNCPRIORITY = 2,
  SLGP_RAWPATH = 4,
  SLGP_RELATIVEPRIORITY = 8,
};

enum tagSLR_FLAGS
{
  SLR_NO_UI = 1,
  SLR_ANY_MATCH = 2,
  SLR_UPDATE = 4,
  SLR_NOUPDATE = 8,
  SLR_NOSEARCH = 16,
  SLR_NOTRACK = 32,
  SLR_NOLINKINFO = 64,
  SLR_INVOKE_MSI = 128,
  SLR_NO_UI_WITH_MSG_PUMP = 257,
};

enum tagSMFLAGS
{
  SMFLAGS_CLIENT_SIDE = 1,
  SMFLAGS_PENDINGDISCONNECT = 2,
  SMFLAGS_REGISTEREDOID = 4,
  SMFLAGS_DISCONNECTED = 8,
  SMFLAGS_FIRSTMARSHAL = 16,
  SMFLAGS_HANDLER = 32,
  SMFLAGS_WEAKCLIENT = 64,
  SMFLAGS_IGNORERUNDOWN = 128,
  SMFLAGS_CLIENTMARSHALED = 256,
  SMFLAGS_NOPING = 512,
  SMFLAGS_TRIEDTOCONNECT = 1024,
  SMFLAGS_CSTATICMARSHAL = 2048,
  SMFLAGS_USEAGGSTDMARSHAL = 4096,
  SMFLAGS_SYSTEM = 8192,
  SMFLAGS_DEACTIVATED = 16384,
  SMFLAGS_FTM = 0xffff8000,
  SMFLAGS_CLIENTPOLICYSET = 0x10000,
  SMFLAGS_APPDISCONNECT = 0x20000,
  SMFLAGS_SYSDISCONNECT = 0x40000,
  SMFLAGS_RUNDOWNDISCONNECT = 0x80000,
  SMFLAGS_CLEANEDUP = 0x100000,
  SMFLAGS_LIGHTNA = 0x200000,
  SMFLAGS_ALL = 0x7fffff,
};

struct tagSOAP_ACTIVATION_INFO
{
  /* 0x0000 */ int bSoapActivated;
  /* 0x0004 */ long lMode;
  /* 0x0008 */ wchar_t* bstrVRoot;
  /* 0x000c */ wchar_t* bstrMailTo;
  /* 0x0010 */ wchar_t* bstrAssemblyName;
  /* 0x0014 */ wchar_t* bstrTypeName;
  /* 0x0018 */ wchar_t* bstrBaseUrl;
}; /* size: 0x001c */

struct tagSOLE_AUTHENTICATION_INFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ void* pAuthInfo;
}; /* size: 0x000c */

struct tagSOLE_AUTHENTICATION_LIST
{
  /* 0x0000 */ unsigned long cAuthInfo;
  /* 0x0004 */ struct tagSOLE_AUTHENTICATION_INFO* aAuthInfo;
}; /* size: 0x0008 */

struct tagSOLE_AUTHENTICATION_SERVICE
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pPrincipalName;
  /* 0x000c */ HRESULT hr;
}; /* size: 0x0010 */

struct tagSOUNDSENTRYA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ char* lpszWindowsEffectDLL;
  /* 0x002c */ unsigned long iWindowsEffectOrdinal;
}; /* size: 0x0030 */

struct tagSOUNDSENTRYW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ wchar_t* lpszWindowsEffectDLL;
  /* 0x002c */ unsigned long iWindowsEffectOrdinal;
}; /* size: 0x0030 */

struct tagSOleTlsData
{
  /* 0x0000 */ void* pvThreadBase;
  /* 0x0004 */ class CSmAllocator* pSmAllocator;
  /* 0x0008 */ unsigned long dwApartmentID;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ long TlsMapIndex;
  /* 0x0014 */ void** ppTlsSlot;
  /* 0x0018 */ unsigned long cComInits;
  /* 0x001c */ unsigned long cOleInits;
  /* 0x0020 */ unsigned long cCalls;
  /* 0x0024 */ class CMessageCall* pCallInfo;
  /* 0x0028 */ class CAsyncCall* pFreeAsyncCall;
  /* 0x002c */ class CClientCall* pFreeClientCall;
  /* 0x0030 */ class CObjServer* pObjServer;
  /* 0x0034 */ unsigned long dwTIDCaller;
  /* 0x0038 */ class CObjectContext* pCurrentCtx;
  /* 0x003c */ class CObjectContext* pEmptyCtx;
  /* 0x0040 */ class CObjectContext* pNativeCtx;
  /* 0x0048 */ unsigned __int64 ContextId;
  /* 0x0050 */ class CComApartment* pNativeApt;
  /* 0x0054 */ struct IUnknown* pCallContext;
  /* 0x0058 */ class CCtxCall* pCtxCall;
  /* 0x005c */ class CPolicySet* pPS;
  /* 0x0060 */ void* pvPendingCallsFront;
  /* 0x0064 */ void* pvPendingCallsBack;
  /* 0x0068 */ class CAptCallCtrl* pCallCtrl;
  /* 0x006c */ class CSrvCallState* pTopSCS;
  /* 0x0070 */ struct IMessageFilter* pMsgFilter;
  /* 0x0074 */ struct HWND__* hwndSTA;
  /* 0x0078 */ long cORPCNestingLevel;
  /* 0x007c */ unsigned long cDebugData;
  /* 0x0080 */ struct _GUID LogicalThreadId;
  /* 0x0090 */ void* hThread;
  /* 0x0094 */ void* hRevert;
  /* 0x0098 */ struct IUnknown* pAsyncRelease;
  /* 0x009c */ struct HWND__* hwndDdeServer;
  /* 0x00a0 */ struct HWND__* hwndDdeClient;
  /* 0x00a4 */ unsigned long cServeDdeObjects;
  /* 0x00a8 */ void* pSTALSvrsFront;
  /* 0x00ac */ struct HWND__* hwndClip;
  /* 0x00b0 */ struct IDataObject* pDataObjClip;
  /* 0x00b4 */ unsigned long dwClipSeqNum;
  /* 0x00b8 */ unsigned long fIsClipWrapper;
  /* 0x00bc */ struct IUnknown* punkState;
  /* 0x00c0 */ unsigned long cCallCancellation;
  /* 0x00c4 */ unsigned long cAsyncSends;
  /* 0x00c8 */ class CAsyncCall* pAsyncCallList;
  /* 0x00cc */ class CSurrogatedObjectList* pSurrogateList;
  /* 0x00d0 */ void* pRWLockTlsEntry;
  /* 0x00d4 */ struct tagCallEntry CallEntry;
  /* 0x00dc */ struct tagContextStackNode* pContextStack;
  /* 0x00e0 */ struct tagInitializeSpyNode* pFirstSpyReg;
  /* 0x00e4 */ struct tagInitializeSpyNode* pFirstFreeSpyReg;
  /* 0x00e8 */ class CVerifierTlsData* pVerifierData;
  /* 0x00ec */ unsigned long dwMaxSpy;
  /* 0x00f0 */ unsigned char cCustomMarshallerRecursion;
  /* 0x00f4 */ void* pDragCursors;
  /* 0x00f8 */ struct IUnknown* punkError;
  /* 0x00fc */ unsigned long cbErrorData;
  /* 0x0100 */ struct tagOutgoingCallData outgoingCallData;
  /* 0x0108 */ struct tagIncomingCallData incomingCallData;
  /* 0x010c */ struct tagOutgoingActivationData outgoingActivationData;
  /* 0x011c */ long __PADDING__[1];
}; /* size: 0x0120 */

struct tagSOleTlsDataPublic
{
  /* 0x0000 */ void* pvReserved0[2];
  /* 0x0008 */ unsigned long dwReserved0[3];
  /* 0x0014 */ void* pvReserved1[1];
  /* 0x0018 */ unsigned long dwReserved1[3];
  /* 0x0024 */ void* pvReserved2[4];
  /* 0x0034 */ unsigned long dwReserved2[1];
  /* 0x0038 */ void* pCurrentCtx;
}; /* size: 0x003c */

struct tagSPSCache
{
  /* 0x0000 */ struct tagSPSChain clientPSChain;
  /* 0x0008 */ struct tagSPSChain serverPSChain;
}; /* size: 0x0010 */

struct tagSPSChain
{
  /* 0x0000 */ struct tagSPSChain* pNext;
  /* 0x0004 */ struct tagSPSChain* pPrev;
}; /* size: 0x0008 */

struct tagSQIResult
{
  /* 0x0000 */ void* pv;
  /* 0x0004 */ HRESULT hr;
}; /* size: 0x0008 */

struct tagSRVRDISPATCHDATA
{
  /* 0x0004 */ struct HWND__* hwnd;
  /* 0x0008 */ void* hData;
  /* 0x000c */ struct HWND__* wParam;
  /* 0x0010 */ class CDDEServer* lpsrvr;
}; /* size: 0x0014 */

struct tagSSID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
}; /* size: 0x0006 */

struct tagSTATDATA
{
  /* 0x0000 */ struct tagFORMATETC formatetc;
  /* 0x0014 */ unsigned long advf;
  /* 0x0018 */ struct IAdviseSink* pAdvSink;
  /* 0x001c */ unsigned long dwConnection;
}; /* size: 0x0020 */

enum tagSTATFLAG
{
  STATFLAG_DEFAULT = 0,
  STATFLAG_NONAME = 1,
  STATFLAG_NOOPEN = 2,
};

struct tagSTATPROPBAG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0004 */ unsigned short vt;
  /* 0x0008 */ struct _GUID guidPropertyType;
}; /* size: 0x0018 */

struct tagSTATPROPSETSTG
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ struct _GUID clsid;
  /* 0x0020 */ unsigned long grfFlags;
  /* 0x0024 */ struct _FILETIME mtime;
  /* 0x002c */ struct _FILETIME ctime;
  /* 0x0034 */ struct _FILETIME atime;
  /* 0x003c */ unsigned long dwOSVersion;
}; /* size: 0x0040 */

struct tagSTATPROPSTG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0004 */ unsigned long propid;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[2];
}; /* size: 0x000c */

struct tagSTATSTG
{
  /* 0x0000 */ wchar_t* pwcsName;
  /* 0x0004 */ unsigned long type;
  /* 0x0008 */ union _ULARGE_INTEGER cbSize;
  /* 0x0010 */ struct _FILETIME mtime;
  /* 0x0018 */ struct _FILETIME ctime;
  /* 0x0020 */ struct _FILETIME atime;
  /* 0x0028 */ unsigned long grfMode;
  /* 0x002c */ unsigned long grfLocksSupported;
  /* 0x0030 */ struct _GUID clsid;
  /* 0x0040 */ unsigned long grfStateBits;
  /* 0x0044 */ unsigned long reserved;
}; /* size: 0x0048 */

enum tagSTDID_FLAGS
{
  STDID_SERVER = 0,
  STDID_CLIENT = 1,
  STDID_FREETHREADED = 2,
  STDID_HAVEID = 4,
  STDID_IGNOREID = 8,
  STDID_AGGREGATED = 16,
  STDID_INDESTRUCTOR = 256,
  STDID_LOCKEDINMEM = 512,
  STDID_DEFHANDLER = 1024,
  STDID_AGGID = 2048,
  STDID_STCMRSHL = 4096,
  STDID_REMOVEDFROMIDOBJ = 8192,
  STDID_SYSTEM = 16384,
  STDID_FTM = 0xffff8000,
  STDID_NOIEC = 0x10000,
  STDID_ALL = 0x1ff1f,
};

enum tagSTDMSHLFLAGS
{
  SMEXF_SERVER = 1,
  SMEXF_HANDLER = 2,
};

struct tagSTDOBJREF
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long cPublicRefs;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
  /* 0x0018 */ struct _GUID ipid;
}; /* size: 0x0028 */

enum tagSTGC
{
  STGC_DEFAULT = 0,
  STGC_OVERWRITE = 1,
  STGC_ONLYIFCURRENT = 2,
  STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4,
  STGC_CONSOLIDATE = 8,
};

struct tagSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  union
  {
    /* 0x0004 */ struct HBITMAP__* hBitmap;
    /* 0x0004 */ void* hMetaFilePict;
    /* 0x0004 */ struct HENHMETAFILE__* hEnhMetaFile;
    /* 0x0004 */ void* hGlobal;
    /* 0x0004 */ wchar_t* lpszFileName;
    /* 0x0004 */ struct IStream* pstm;
    /* 0x0004 */ struct IStorage* pstg;
  }; /* size: 0x0004 */
  /* 0x0008 */ struct IUnknown* pUnkForRelease;
}; /* size: 0x000c */

enum tagSTGMOVE
{
  STGMOVE_MOVE = 0,
  STGMOVE_COPY = 1,
  STGMOVE_SHALLOWCOPY = 2,
};

struct tagSTGOPTIONS
{
  /* 0x0000 */ unsigned short usVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned long ulSectorSize;
  /* 0x0008 */ const wchar_t* pwcsTemplateFile;
}; /* size: 0x000c */

enum tagSTGTY
{
  STGTY_STORAGE = 1,
  STGTY_STREAM = 2,
  STGTY_LOCKBYTES = 3,
  STGTY_PROPERTY = 4,
};

struct tagSTICKYKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

struct tagSTREAM_ACE
{
  /* 0x0000 */ unsigned long grfAccessPermissions;
  /* 0x0004 */ enum _ACCESS_MODE grfAccessMode;
  /* 0x0008 */ enum _TRUSTEE_TYPE TrusteeType;
  /* 0x000c */ enum _TRUSTEE_FORM TrusteeForm;
  /* 0x0010 */ wchar_t* pTrusteeName;
  /* 0x0014 */ struct tagSTREAM_SID* pSID;
}; /* size: 0x0018 */

struct tagSTREAM_ACL
{
  /* 0x0000 */ unsigned long ulNumOfDenyEntries;
  /* 0x0004 */ unsigned long ulNumOfGrantEntries;
  /* 0x0008 */ struct tagSTREAM_ACE* pACL;
}; /* size: 0x000c */

struct tagSTREAM_HEADER
{
  /* 0x0000 */ unsigned long ulStreamVersion;
  /* 0x0004 */ unsigned long ulPickledSize;
}; /* size: 0x0008 */

enum tagSTREAM_SEEK
{
  STREAM_SEEK_SET = 0,
  STREAM_SEEK_CUR = 1,
  STREAM_SEEK_END = 2,
};

struct tagSTREAM_SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct tagSSID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
}; /* size: 0x000c */

struct tagSTRINGBINDING
{
  /* 0x0000 */ unsigned short wTowerId;
  /* 0x0002 */ unsigned short aNetworkAddr;
}; /* size: 0x0004 */

enum tagSTRUCTURED_QUERY_MULTIOPTION
{
  SQMO_VIRTUAL_PROPERTY = 0,
  SQMO_DEFAULT_PROPERTY = 1,
  SQMO_GENERATOR_FOR_TYPE = 2,
  SQMO_MAP_PROPERTY = 3,
};

enum tagSTRUCTURED_QUERY_PARSE_ERROR
{
  SQPE_NONE = 0,
  SQPE_EXTRA_OPENING_PARENTHESIS = 1,
  SQPE_EXTRA_CLOSING_PARENTHESIS = 2,
  SQPE_IGNORED_MODIFIER = 3,
  SQPE_IGNORED_CONNECTOR = 4,
  SQPE_IGNORED_KEYWORD = 5,
  SQPE_UNHANDLED = 6,
};

enum tagSTRUCTURED_QUERY_SINGLE_OPTION
{
  SQSO_SCHEMA = 0,
  SQSO_LOCALE_WORD_BREAKING = 1,
  SQSO_WORD_BREAKER = 2,
  SQSO_NATURAL_SYNTAX = 3,
  SQSO_AUTOMATIC_WILDCARD = 4,
  SQSO_TRACE_LEVEL = 5,
  SQSO_LANGUAGE_KEYWORDS = 6,
  SQSO_SYNTAX = 7,
  SQSO_TIME_ZONE = 8,
};

enum tagSTRUCTURED_QUERY_SYNTAX
{
  SQS_NO_SYNTAX = 0,
  SQS_ADVANCED_QUERY_SYNTAX = 1,
  SQS_NATURAL_QUERY_SYNTAX = 2,
};

struct tagSTYLEBUFA
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ char szDescription[32];
}; /* size: 0x0024 */

struct tagSTYLEBUFW
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ wchar_t szDescription[32];
}; /* size: 0x0044 */

struct tagSTYLESTRUCT
{
  /* 0x0000 */ unsigned long styleOld;
  /* 0x0004 */ unsigned long styleNew;
}; /* size: 0x0008 */

struct tagSWindowData
{
  /* 0x0000 */ struct HWND__* hWnd;
  /* 0x0004 */ unsigned int wFirstMsg;
  /* 0x0008 */ unsigned int wLastMsg;
}; /* size: 0x000c */

enum tagSYSKIND
{
  SYS_WIN16 = 0,
  SYS_WIN32 = 1,
  SYS_MAC = 2,
  SYS_WIN64 = 3,
};

struct tagScmReplyInfoData
{
  /* 0x0000 */ struct tagCustomPrivResolverInfo* pResolverInfo;
  /* 0x0004 */ struct _customREMOTE_REPLY_SCM_INFO* remoteReply;
}; /* size: 0x0008 */

struct tagScmRequestInfoData
{
  /* 0x0000 */ struct tagCustomPrivScmInfo* pScmInfo;
  /* 0x0004 */ struct _customREMOTE_REQUEST_SCM_INFO* remoteRequest;
}; /* size: 0x0008 */

struct tagSecurityInfoData
{
  /* 0x0000 */ unsigned long dwAuthnFlags;
  /* 0x0004 */ struct _COSERVERINFO* pServerInfo;
  /* 0x0008 */ struct _COAUTHIDENTITY* pAuthIdentityInfo;
}; /* size: 0x000c */

enum tagShutdownType
{
  IdleShutdown = 0,
  ForcedShutdown = 1,
};

struct tagSpecialPropertiesData
{
  /* 0x0000 */ unsigned long dwSessionId;
  /* 0x0004 */ int fRemoteThisSessionId;
  /* 0x0008 */ int fClientImpersonating;
  /* 0x000c */ int fPartitionIDPresent;
  /* 0x0010 */ unsigned long dwDefaultAuthnLvl;
  /* 0x0014 */ struct _GUID guidPartition;
  /* 0x0024 */ unsigned long dwPRTFlags;
  /* 0x0028 */ unsigned long dwOrigClsctx;
  /* 0x002c */ unsigned long dwFlags;
  /* 0x0030 */ unsigned long dwPid;
  /* 0x0038 */ unsigned __int64 hwnd;
  /* 0x0040 */ unsigned long dwReserved[5];
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

struct tagStdDiscData
{
  /* 0x0000 */ class CStdMarshal* pStdMshl;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ int fRelease;
}; /* size: 0x000c */

struct tagStdMarshalData
{
  /* 0x0000 */ class CIDObject* pID;
  /* 0x0004 */ struct IUnknown* pServer;
  /* 0x0008 */ const struct _GUID* pIID;
  /* 0x000c */ unsigned long dwDestCtx;
  /* 0x0010 */ void* pvDestCtx;
  /* 0x0014 */ unsigned long mshlflags;
  /* 0x0018 */ struct tagOBJREF* pobjref;
}; /* size: 0x001c */

struct tagStdReleaseData
{
  /* 0x0000 */ class CStdMarshal* pStdMshl;
  /* 0x0004 */ struct tagOBJREF* pObjRef;
}; /* size: 0x0008 */

struct tagStdUnmarshalData
{
  /* 0x0000 */ class CStdIdentity* pStdID;
  /* 0x0004 */ struct tagOBJREF* pobjref;
  /* 0x0008 */ class CObjectContext* pClientCtx;
  /* 0x000c */ int fCreateWrapper;
  /* 0x0010 */ void** ppv;
  /* 0x0014 */ int fLightNA;
}; /* size: 0x0018 */

struct tagStorageLayout
{
  /* 0x0000 */ unsigned long LayoutType;
  /* 0x0004 */ wchar_t* pwcsElementName;
  /* 0x0008 */ union _LARGE_INTEGER cOffset;
  /* 0x0010 */ union _LARGE_INTEGER cBytes;
}; /* size: 0x0018 */

struct tagTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char __PADDING__[3];
}; /* size: 0x0038 */

struct tagTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char __PADDING__[3];
}; /* size: 0x003c */

struct tagTITLEBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
}; /* size: 0x002c */

struct tagTITLEBARINFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
  /* 0x002c */ struct tagRECT rgrect[6];
}; /* size: 0x008c */

struct tagTLIBATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ enum tagSYSKIND syskind;
  /* 0x0018 */ unsigned short wMajorVerNum;
  /* 0x001a */ unsigned short wMinorVerNum;
  /* 0x001c */ unsigned short wLibFlags;
  /* 0x001e */ char __PADDING__[2];
}; /* size: 0x0020 */

struct tagTLSMapEntry
{
  /* 0x0000 */ unsigned long dwThreadId;
  /* 0x0004 */ struct tagSOleTlsData* ptls;
}; /* size: 0x0008 */

struct tagTOGGLEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

struct tagTPMPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct tagRECT rcExclude;
}; /* size: 0x0014 */

struct tagTRACKMOUSEEVENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTrack;
  /* 0x000c */ unsigned long dwHoverTime;
}; /* size: 0x0010 */

struct tagTTPOLYCURVE
{
  /* 0x0000 */ unsigned short wType;
  /* 0x0002 */ unsigned short cpfx;
  /* 0x0004 */ struct tagPOINTFX apfx[1];
}; /* size: 0x000c */

struct tagTTPOLYGONHEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ struct tagPOINTFX pfxStart;
}; /* size: 0x0010 */

enum tagTYMED
{
  TYMED_HGLOBAL = 1,
  TYMED_FILE = 2,
  TYMED_ISTREAM = 4,
  TYMED_ISTORAGE = 8,
  TYMED_GDI = 16,
  TYMED_MFPICT = 32,
  TYMED_ENHMF = 64,
  TYMED_NULL = 0,
};

struct tagTYPEATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ unsigned long dwReserved;
  /* 0x0018 */ long memidConstructor;
  /* 0x001c */ long memidDestructor;
  /* 0x0020 */ wchar_t* lpstrSchema;
  /* 0x0024 */ unsigned long cbSizeInstance;
  /* 0x0028 */ enum tagTYPEKIND typekind;
  /* 0x002c */ unsigned short cFuncs;
  /* 0x002e */ unsigned short cVars;
  /* 0x0030 */ unsigned short cImplTypes;
  /* 0x0032 */ unsigned short cbSizeVft;
  /* 0x0034 */ unsigned short cbAlignment;
  /* 0x0036 */ unsigned short wTypeFlags;
  /* 0x0038 */ unsigned short wMajorVerNum;
  /* 0x003a */ unsigned short wMinorVerNum;
  /* 0x003c */ struct tagTYPEDESC tdescAlias;
  /* 0x0044 */ struct tagIDLDESC idldescType;
}; /* size: 0x004c */

struct tagTYPEDESC
{
  union
  {
    /* 0x0000 */ struct tagTYPEDESC* lptdesc;
    /* 0x0000 */ struct tagARRAYDESC* lpadesc;
    /* 0x0000 */ unsigned long hreftype;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned short vt;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

enum tagTYPEFLAGS
{
  TYPEFLAG_FAPPOBJECT = 1,
  TYPEFLAG_FCANCREATE = 2,
  TYPEFLAG_FLICENSED = 4,
  TYPEFLAG_FPREDECLID = 8,
  TYPEFLAG_FHIDDEN = 16,
  TYPEFLAG_FCONTROL = 32,
  TYPEFLAG_FDUAL = 64,
  TYPEFLAG_FNONEXTENSIBLE = 128,
  TYPEFLAG_FOLEAUTOMATION = 256,
  TYPEFLAG_FRESTRICTED = 512,
  TYPEFLAG_FAGGREGATABLE = 1024,
  TYPEFLAG_FREPLACEABLE = 2048,
  TYPEFLAG_FDISPATCHABLE = 4096,
  TYPEFLAG_FREVERSEBIND = 8192,
  TYPEFLAG_FPROXY = 16384,
};

enum tagTYPEKIND
{
  TKIND_ENUM = 0,
  TKIND_RECORD = 1,
  TKIND_MODULE = 2,
  TKIND_INTERFACE = 3,
  TKIND_DISPATCH = 4,
  TKIND_COCLASS = 5,
  TKIND_ALIAS = 6,
  TKIND_UNION = 7,
  TKIND_MAX = 8,
};

enum tagTYSPEC
{
  TYSPEC_CLSID = 0,
  TYSPEC_FILEEXT = 1,
  TYSPEC_MIMETYPE = 2,
  TYSPEC_FILENAME = 3,
  TYSPEC_PROGID = 4,
  TYSPEC_PACKAGENAME = 5,
  TYSPEC_OBJECTID = 6,
};

enum tagThreadingModel
{
  ApartmentThreaded = 0,
  FreeThreaded = 1,
  SingleThreaded = 2,
  BothThreaded = 3,
  NeutralThreaded = 4,
};

enum tagUASFLAGS
{
  UAS_NORMAL = 0,
  UAS_BLOCKED = 1,
  UAS_NOPARENTENABLE = 2,
  UAS_MASK = 3,
};

struct tagUPDATELAYEREDWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct HDC__* hdcDst;
  /* 0x0008 */ const struct tagPOINT* pptDst;
  /* 0x000c */ const struct tagSIZE* psize;
  /* 0x0010 */ struct HDC__* hdcSrc;
  /* 0x0014 */ const struct tagPOINT* pptSrc;
  /* 0x0018 */ unsigned long crKey;
  /* 0x001c */ const struct _BLENDFUNCTION* pblend;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ const struct tagRECT* prcDirty;
}; /* size: 0x0028 */

enum tagURLTEMPLATE
{
  URLTEMPLATE_CUSTOM = 0,
  URLTEMPLATE_PREDEFINED_MIN = 0x10000,
  URLTEMPLATE_LOW = 0x10000,
  URLTEMPLATE_MEDLOW = 0x10500,
  URLTEMPLATE_MEDIUM = 0x11000,
  URLTEMPLATE_MEDHIGH = 0x11500,
  URLTEMPLATE_HIGH = 0x12000,
  URLTEMPLATE_PREDEFINED_MAX = 0x20000,
};

enum tagURLZONE
{
  URLZONE_INVALID = -1,
  URLZONE_PREDEFINED_MIN = 0,
  URLZONE_LOCAL_MACHINE = 0,
  URLZONE_INTRANET = 1,
  URLZONE_TRUSTED = 2,
  URLZONE_INTERNET = 3,
  URLZONE_UNTRUSTED = 4,
  URLZONE_PREDEFINED_MAX = 999,
  URLZONE_USER_MIN = 1000,
  URLZONE_USER_MAX = 10000,
};

enum tagUSERCLASSTYPE
{
  USERCLASSTYPE_FULL = 1,
  USERCLASSTYPE_SHORT = 2,
  USERCLASSTYPE_APPNAME = 3,
};

struct tagUSEROBJECTFLAGS
{
  /* 0x0000 */ int fInherit;
  /* 0x0004 */ int fReserved;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

struct tagVARDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ unsigned short* lpstrSchema;
  union
  {
    /* 0x0008 */ unsigned long oInst;
    /* 0x0008 */ struct tagVARIANT* lpvarValue;
  }; /* size: 0x0004 */
  /* 0x000c */ struct tagELEMDESC elemdescVar;
  /* 0x001c */ unsigned short wVarFlags;
  /* 0x0020 */ enum tagVARKIND varkind;
}; /* size: 0x0024 */

enum tagVARFLAGS
{
  VARFLAG_FREADONLY = 1,
  VARFLAG_FSOURCE = 2,
  VARFLAG_FBINDABLE = 4,
  VARFLAG_FREQUESTEDIT = 8,
  VARFLAG_FDISPLAYBIND = 16,
  VARFLAG_FDEFAULTBIND = 32,
  VARFLAG_FHIDDEN = 64,
  VARFLAG_FRESTRICTED = 128,
  VARFLAG_FDEFAULTCOLLELEM = 256,
  VARFLAG_FUIDEFAULT = 512,
  VARFLAG_FNONBROWSABLE = 1024,
  VARFLAG_FREPLACEABLE = 2048,
  VARFLAG_FIMMEDIATEBIND = 4096,
};

struct tagVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ __int64 llVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ __int64* pllVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagVARIANT* pvarVal;
        /* 0x0008 */ void* byref;
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ unsigned __int64 ullVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ unsigned __int64* pullVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        struct
        {
          /* 0x0008 */ void* pvRecord;
          /* 0x000c */ struct IRecordInfo* pRecInfo;
        }; /* size: 0x0008 */
      }; /* size: 0x0008 */
    }; /* size: 0x0010 */
    /* 0x0000 */ struct tagDEC decVal;
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

enum tagVARKIND
{
  VAR_PERINSTANCE = 0,
  VAR_STATIC = 1,
  VAR_CONST = 2,
  VAR_DISPATCH = 3,
};

enum tagVIEWSTATUS
{
  VIEWSTATUS_OPAQUE = 1,
  VIEWSTATUS_SOLIDBKGND = 2,
  VIEWSTATUS_DVASPECTOPAQUE = 4,
  VIEWSTATUS_DVASPECTTRANSPARENT = 8,
  VIEWSTATUS_SURFACE = 16,
  VIEWSTATUS_3DSURFACE = 32,
};

struct tagVS_FIXEDFILEINFO
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwStrucVersion;
  /* 0x0008 */ unsigned long dwFileVersionMS;
  /* 0x000c */ unsigned long dwFileVersionLS;
  /* 0x0010 */ unsigned long dwProductVersionMS;
  /* 0x0014 */ unsigned long dwProductVersionLS;
  /* 0x0018 */ unsigned long dwFileFlagsMask;
  /* 0x001c */ unsigned long dwFileFlags;
  /* 0x0020 */ unsigned long dwFileOS;
  /* 0x0024 */ unsigned long dwFileType;
  /* 0x0028 */ unsigned long dwFileSubtype;
  /* 0x002c */ unsigned long dwFileDateMS;
  /* 0x0030 */ unsigned long dwFileDateLS;
}; /* size: 0x0034 */

struct tagVersionedStream
{
  /* 0x0000 */ struct _GUID guidVersion;
  /* 0x0010 */ struct IStream* pStream;
}; /* size: 0x0014 */

struct tagWCRANGE
{
  /* 0x0000 */ wchar_t wcLow;
  /* 0x0002 */ unsigned short cGlyphs;
}; /* size: 0x0004 */

struct tagWIN16BITMAP
{
  /* 0x0000 */ short bmType;
  /* 0x0002 */ short bmWidth;
  /* 0x0004 */ short bmHeight;
  /* 0x0006 */ short bmWidthBytes;
  /* 0x0008 */ unsigned char bmPlanes;
  /* 0x0009 */ unsigned char bmBitsPixel;
  /* 0x000a */ void* bmBits;
}; /* size: 0x000e */

struct tagWIN16METAFILEPICT
{
  /* 0x0000 */ short mm;
  /* 0x0002 */ short xExt;
  /* 0x0004 */ short yExt;
  /* 0x0006 */ unsigned short hMF;
}; /* size: 0x0008 */

struct tagWIN16RECT
{
  /* 0x0000 */ unsigned short left;
  /* 0x0002 */ unsigned short top;
  /* 0x0004 */ unsigned short right;
  /* 0x0006 */ unsigned short bottom;
}; /* size: 0x0008 */

struct tagWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcWindow;
  /* 0x0014 */ struct tagRECT rcClient;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ unsigned long dwExStyle;
  /* 0x002c */ unsigned long dwWindowStatus;
  /* 0x0030 */ unsigned int cxWindowBorders;
  /* 0x0034 */ unsigned int cyWindowBorders;
  /* 0x0038 */ unsigned short atomWindowType;
  /* 0x003a */ unsigned short wCreatorVersion;
}; /* size: 0x003c */

struct tagWINDOWPLACEMENT
{
  /* 0x0000 */ unsigned int length;
  /* 0x0004 */ unsigned int flags;
  /* 0x0008 */ unsigned int showCmd;
  /* 0x000c */ struct tagPOINT ptMinPosition;
  /* 0x0014 */ struct tagPOINT ptMaxPosition;
  /* 0x001c */ struct tagRECT rcNormalPosition;
}; /* size: 0x002c */

struct tagWINDOWPOS
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0004 */ struct HWND__* hwndInsertAfter;
  /* 0x0008 */ int x;
  /* 0x000c */ int y;
  /* 0x0010 */ int cx;
  /* 0x0014 */ int cy;
  /* 0x0018 */ unsigned int flags;
}; /* size: 0x001c */

struct tagWNDCLASSA
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ void* lpfnWndProc /* function */;
  /* 0x0008 */ int cbClsExtra;
  /* 0x000c */ int cbWndExtra;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0014 */ struct HICON__* hIcon;
  /* 0x0018 */ struct HICON__* hCursor;
  /* 0x001c */ struct HBRUSH__* hbrBackground;
  /* 0x0020 */ const char* lpszMenuName;
  /* 0x0024 */ const char* lpszClassName;
}; /* size: 0x0028 */

struct tagWNDCLASSEXA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x000c */ int cbClsExtra;
  /* 0x0010 */ int cbWndExtra;
  /* 0x0014 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ struct HICON__* hIcon;
  /* 0x001c */ struct HICON__* hCursor;
  /* 0x0020 */ struct HBRUSH__* hbrBackground;
  /* 0x0024 */ const char* lpszMenuName;
  /* 0x0028 */ const char* lpszClassName;
  /* 0x002c */ struct HICON__* hIconSm;
}; /* size: 0x0030 */

struct tagWNDCLASSEXW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x000c */ int cbClsExtra;
  /* 0x0010 */ int cbWndExtra;
  /* 0x0014 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ struct HICON__* hIcon;
  /* 0x001c */ struct HICON__* hCursor;
  /* 0x0020 */ struct HBRUSH__* hbrBackground;
  /* 0x0024 */ const wchar_t* lpszMenuName;
  /* 0x0028 */ const wchar_t* lpszClassName;
  /* 0x002c */ struct HICON__* hIconSm;
}; /* size: 0x0030 */

struct tagWNDCLASSW
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ void* lpfnWndProc /* function */;
  /* 0x0008 */ int cbClsExtra;
  /* 0x000c */ int cbWndExtra;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0014 */ struct HICON__* hIcon;
  /* 0x0018 */ struct HICON__* hCursor;
  /* 0x001c */ struct HBRUSH__* hbrBackground;
  /* 0x0020 */ const wchar_t* lpszMenuName;
  /* 0x0024 */ const wchar_t* lpszClassName;
}; /* size: 0x0028 */

struct tagWTSSESSION_NOTIFICATION
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSessionId;
}; /* size: 0x0008 */

struct tagXAptAddRefData
{
  /* 0x0000 */ unsigned short cIfs;
  /* 0x0004 */ struct tagREMINTERFACEREF* pIfRefs;
  /* 0x0008 */ HRESULT* pResults;
  /* 0x000c */ class CRemoteUnknown* pRemUnk;
}; /* size: 0x0010 */

struct tagXAptCallback
{
  /* 0x0000 */ __int64 pfnCallback;
  /* 0x0008 */ __int64 pParam;
  /* 0x0010 */ __int64 pServerCtx;
  /* 0x0018 */ __int64 pUnk;
  /* 0x0020 */ struct _GUID iid;
  /* 0x0030 */ int iMethod;
  /* 0x0034 */ struct _GUID guidProcessSecret;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

struct tagXAptQIData
{
  /* 0x0000 */ const struct _GUID* pIPID;
  /* 0x0004 */ unsigned long cRefs;
  /* 0x0008 */ unsigned short cIids;
  /* 0x000c */ struct _GUID* iids;
  /* 0x0010 */ struct tagREMQIRESULT** ppQIResults;
  /* 0x0014 */ class CRemoteUnknown* pRemUnk;
}; /* size: 0x0018 */

struct tagXAptReleaseData
{
  /* 0x0000 */ unsigned short cIfs;
  /* 0x0004 */ struct tagREMINTERFACEREF* pIfRefs;
  /* 0x0008 */ class CRemoteUnknown* pRemUnk;
}; /* size: 0x000c */

struct tagXCtxDisconnectData
{
  /* 0x0000 */ struct IUnknown* pServer;
  /* 0x0004 */ class CIDObject* pID;
  /* 0x0008 */ unsigned long cIFaces;
  /* 0x000c */ struct tagIFaceSvrRefs* pIFaceSvrRefs;
}; /* size: 0x0010 */

struct tagXCtxMarshalData
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ struct _GUID iid;
  /* 0x0014 */ struct _GUID moxid;
  /* 0x0024 */ class CStdWrapper* pWrapper;
  /* 0x0028 */ class IFaceEntry* pEntry;
  /* 0x002c */ struct IUnknown* pServer;
  /* 0x0030 */ class CObjectContext* pServerCtx;
  /* 0x0034 */ unsigned long dwMarshalFlags;
}; /* size: 0x0038 */

struct tagXCtxQIData
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0004 */ class CStdWrapper* pStdWrapper;
  /* 0x0008 */ class IFaceEntry* pEntry;
}; /* size: 0x000c */

struct tagXCtxWrapperData
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0004 */ struct IUnknown* pServer;
  /* 0x0008 */ unsigned long dwState;
  /* 0x000c */ class CObjectContext* pServerCtx;
  /* 0x0010 */ class CObjectContext* pClientCtx;
  /* 0x0014 */ void* pv;
}; /* size: 0x0018 */

struct tagXFORM
{
  /* 0x0000 */ float eM11;
  /* 0x0004 */ float eM12;
  /* 0x0008 */ float eM21;
  /* 0x000c */ float eM22;
  /* 0x0010 */ float eDx;
  /* 0x0014 */ float eDy;
}; /* size: 0x0018 */

enum tagXFORMCOORDS
{
  XFORMCOORDS_POSITION = 1,
  XFORMCOORDS_SIZE = 2,
  XFORMCOORDS_HIMETRICTOCONTAINER = 4,
  XFORMCOORDS_CONTAINERTOHIMETRIC = 8,
  XFORMCOORDS_EVENTCOMPAT = 16,
};

enum tagXMLEMEM_TYPE
{
  XMLELEMTYPE_ELEMENT = 0,
  XMLELEMTYPE_TEXT = 1,
  XMLELEMTYPE_COMMENT = 2,
  XMLELEMTYPE_DOCUMENT = 3,
  XMLELEMTYPE_DTD = 4,
  XMLELEMTYPE_PI = 5,
  XMLELEMTYPE_OTHER = 6,
};

struct threadlocaleinfostruct
{
  /* 0x0000 */ int refcount;
  /* 0x0004 */ unsigned int lc_codepage;
  /* 0x0008 */ unsigned int lc_collate_cp;
  /* 0x000c */ unsigned long lc_handle[6];
  /* 0x0024 */ struct tagLC_ID lc_id[6];
  /* 0x0048 */ struct
  {
    /* 0x0048 */ char* locale;
    /* 0x004c */ wchar_t* wlocale;
    /* 0x0050 */ int* refcount;
    /* 0x0054 */ int* wrefcount;
  } /* size: 0x0010 */ lc_category[6];
  /* 0x00a8 */ int lc_clike;
  /* 0x00ac */ int mb_cur_max;
  /* 0x00b0 */ int* lconv_intl_refcount;
  /* 0x00b4 */ int* lconv_num_refcount;
  /* 0x00b8 */ int* lconv_mon_refcount;
  /* 0x00bc */ struct lconv* lconv;
  /* 0x00c0 */ int* ctype1_refcount;
  /* 0x00c4 */ unsigned short* ctype1;
  /* 0x00c8 */ const unsigned short* pctype;
  /* 0x00cc */ const unsigned char* pclmap;
  /* 0x00d0 */ const unsigned char* pcumap;
  /* 0x00d4 */ struct __lc_time_data* lc_time_curr;
}; /* size: 0x00d8 */

struct threadmbcinfostruct;

struct tm
{
  /* 0x0000 */ int tm_sec;
  /* 0x0004 */ int tm_min;
  /* 0x0008 */ int tm_hour;
  /* 0x000c */ int tm_mday;
  /* 0x0010 */ int tm_mon;
  /* 0x0014 */ int tm_year;
  /* 0x0018 */ int tm_wday;
  /* 0x001c */ int tm_yday;
  /* 0x0020 */ int tm_isdst;
}; /* size: 0x0024 */

class type_info;

struct val_context
{
  /* 0x0000 */ int valuelen;
  /* 0x0004 */ void* value_context;
  /* 0x0008 */ void* val_buff_ptr;
}; /* size: 0x000c */

struct value_entA
{
  /* 0x0000 */ char* ve_valuename;
  /* 0x0004 */ unsigned long ve_valuelen;
  /* 0x0008 */ unsigned long ve_valueptr;
  /* 0x000c */ unsigned long ve_type;
}; /* size: 0x0010 */

struct value_entW
{
  /* 0x0000 */ wchar_t* ve_valuename;
  /* 0x0004 */ unsigned long ve_valuelen;
  /* 0x0008 */ unsigned long ve_valueptr;
  /* 0x000c */ unsigned long ve_type;
}; /* size: 0x0010 */

/*
??$AddRefInterface@UIDispatch@@@OAUTIL@@QAEJAAPAUIDispatch@@@Z
??$AddRefInterface@UIUnknown@@@OAUTIL@@QAEJAAPAUIUnknown@@@Z
??$ConvertInteger@VCCallDisposition@Rtl@BUCL@@_KK@BUCL@@YI?AVCCallDisposition@Rtl@0@_KAAK@Z
??$CreateFastStack@UDISPATCH_CLIENT_FRAME@@@@YGJPAPAU?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@@Z
??$CreateFastStack@UDISPATCH_SERVER_FRAME@@@@YGJPAPAU?$IFastStack@UDISPATCH_SERVER_FRAME@@@@@Z
??$CreateFastStack@VCallFrame@@@@YGJPAPAU?$IFastStack@VCallFrame@@@@@Z
??$QI@UICallFrame@@@@YGJPAUIUnknown@@AAPAUICallFrame@@@Z
??$QI@UICallFrameInit@@@@YGJPAUIUnknown@@AAPAUICallFrameInit@@@Z
??$QI@UICallUnmarshal@@@@YGJPAUIUnknown@@AAPAUICallUnmarshal@@@Z
??$QI@UIInterceptorBase@@@@YGJPAUIUnknown@@AAPAUIInterceptorBase@@@Z
??$QI@UIInterfaceRelated@@@@YGJPAUIUnknown@@AAPAUIInterfaceRelated@@@Z
??$RELEASE_INTERFACE@UIBlockingLock@@@@YGKAAPAUIBlockingLock@@@Z
??$RELEASE_INTERFACE@UIEnumSTATPROPSTG@@@@YGKAAPAUIEnumSTATPROPSTG@@@Z
??$RELEASE_INTERFACE@UIPersistStorage@@@@YGKAAPAUIPersistStorage@@@Z
??$RELEASE_INTERFACE@UIPersistStream@@@@YGKAAPAUIPersistStream@@@Z
??$RELEASE_INTERFACE@UIPropertyStorage@@@@YGKAAPAUIPropertyStorage@@@Z
??$RELEASE_INTERFACE@UIStorage@@@@YGKAAPAUIStorage@@@Z
??$RELEASE_INTERFACE@UIStream@@@@YGKAAPAUIStream@@@Z
??$RELEASE_INTERFACE@UIUnknown@@@@YGKAAPAUIUnknown@@@Z
??$RELEASE_INTERFACE@VCNFFTreeMutex@@@@YGKAAPAVCNFFTreeMutex@@@Z
??$RELEASE_INTERFACE@VCNtfsStorage@@@@YGKAAPAVCNtfsStorage@@@Z
??$RELEASE_INTERFACE@VCNtfsStream@@@@YGKAAPAVCNtfsStream@@@Z
??$RELEASE_INTERFACE@VCNtfsUpdateStreamForPropStg@@@@YGKAAPAVCNtfsUpdateStreamForPropStg@@@Z
??$RELEASE_INTERFACE@VCPropertySetStorage@@@@YGKAAPAVCPropertySetStorage@@@Z
??$RELEASE_INTERFACE@VCStatArray@@@@YGKAAPAVCStatArray@@@Z
??$Read@J@SerializedPropertyReader@@QAEJPAJ@Z
??$Read@K@SerializedPropertyReader@@QAEJPAK@Z
??$Read@U_GUID@@@SerializedPropertyReader@@QAEJPAU_GUID@@@Z
??$ReadArray@E@SerializedPropertyReader@@QAEJPAEK@Z
??$ReadArray@F@SerializedPropertyReader@@QAEJPAFK@Z
??$ReadArray@J@SerializedPropertyReader@@QAEJPAJK@Z
??$ReadArray@T_ULARGE_INTEGER@@@SerializedPropertyReader@@QAEJPAT_ULARGE_INTEGER@@K@Z
??$ReadArray@U_GUID@@@SerializedPropertyReader@@QAEJPAU_GUID@@K@Z
??$ReadArray@UtagDEC@@@SerializedPropertyReader@@QAEJPAUtagDEC@@K@Z
??$ReadArray@_J@SerializedPropertyReader@@QAEJPA_JK@Z
??$Release@UDISPATCH_CLIENT_FRAME@@@@YGXAAPAUDISPATCH_CLIENT_FRAME@@@Z
??$Release@UDISPATCH_SERVER_FRAME@@@@YGXAAPAUDISPATCH_SERVER_FRAME@@@Z
??$Release@UICallFrame@@@@YGXAAPAUICallFrame@@@Z
??$Release@UICallFrameEvents@@@@YGXAAPAUICallFrameEvents@@@Z
??$Release@UICallFrameWalker@@@@YGXAAPAUICallFrameWalker@@@Z
??$Release@UICallInterceptor@@@@YGXAAPAUICallInterceptor@@@Z
??$Release@UICallUnmarshal@@@@YGXAAPAUICallUnmarshal@@@Z
??$Release@UIMarshallingManager@@@@YGXAAPAUIMarshallingManager@@@Z
??$Release@UIRecordInfo@@@@YGXAAPAUIRecordInfo@@@Z
??$Release@UITypeInfo@@@@YGXAAPAUITypeInfo@@@Z
??$Release@UITypeLib@@@@YGXAAPAUITypeLib@@@Z
??$Release@UIUnknown@@@@YGXAAPAUIUnknown@@@Z
??$Release@UMD_INTERFACE@@@@YGXAAPAUMD_INTERFACE@@@Z
??$Release@UTYPEINFOVTBL@@@@YGXAAPAUTYPEINFOVTBL@@@Z
??$ReleaseInterface@UIDispatch@@@OAUTIL@@QAEJAAPAUIDispatch@@@Z
??$ReleaseInterface@UIUnknown@@@OAUTIL@@QAEJAAPAUIUnknown@@@Z
??$Set@UICallFrame@@@@YGXAAPAUICallFrame@@PAU0@@Z
??$Set@UICallFrameEvents@@@@YGXAAPAUICallFrameEvents@@PAU0@@Z
??$Set@UIMarshallingManager@@@@YGXAAPAUIMarshallingManager@@PAU0@@Z
??$Set@UMD_INTERFACE@@@@YGXAAPAUMD_INTERFACE@@PAU0@@Z
??$SetConcurrent@UICallFrameEvents@@@@YGXAAPAUICallFrameEvents@@PAU0@@Z
??$TxfInterlockedCompareExchange64@UDISPATCH_CLIENT_FRAME@@@@YG?AU?$InterlockedStack@UDISPATCH_CLIENT_FRAME@@@@PCU0@ABU0@1@Z
??$TxfInterlockedCompareExchange64@UDISPATCH_SERVER_FRAME@@@@YG?AU?$InterlockedStack@UDISPATCH_SERVER_FRAME@@@@PCU0@ABU0@1@Z
??$TxfInterlockedCompareExchange64@VCallFrame@@@@YG?AU?$InterlockedStack@VCallFrame@@@@PCU0@ABU0@1@Z
??$UploadSQMData@W4Ole32SQMFlags@@@@YGXW4Ole32SQMFlags@@@Z
??$WalkInterface@UIDispatch@@@OAUTIL@@QAEJPAPAUIDispatch@@PAUICallFrameWalker@@@Z
??$WalkInterface@UITypeInfo@@@OAUTIL@@QAEJPAPAUITypeInfo@@PAUICallFrameWalker@@@Z
??$WalkInterface@UIUnknown@@@OAUTIL@@QAEJPAPAUIUnknown@@PAUICallFrameWalker@@@Z
??$Zero@UARRAY_INFO@@@@YGXPAUARRAY_INFO@@@Z
??$Zero@UFRAME_RemoteInvoke@@@@YGXPAUFRAME_RemoteInvoke@@@Z
??$Zero@U_MIDL_STUB_DESC@@@@YGXPAU_MIDL_STUB_DESC@@@Z
??$Zero@U_MIDL_STUB_MESSAGE@@@@YGXPAU_MIDL_STUB_MESSAGE@@@Z
??$Zero@U__MIDL_ICallFrame_0001@@@@YGXPAU__MIDL_ICallFrame_0001@@@Z
??$Zero@UtagCInterfaceStubVtbl@@@@YGXPAUtagCInterfaceStubVtbl@@@Z
??0?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QAE@XZ
??0?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QAE@XZ
??0?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QAE@XZ
??0?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QAE@XZ
??0?$CArray@VCCacheNode@@@@AAE@KK@Z
??0?$CArray@VCFormatEtc@@@@AAE@KK@Z
??0?$CArray@VCStatData@@@@AAE@KK@Z
??0?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@QAE@PAUIUnknown@@PAX@Z
??0?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@QAE@PAUIUnknown@@PAX@Z
??0?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@QAE@PAUIUnknown@@PAX@Z
??0?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QAE@U_GUID@@@Z
??0?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QAE@U_GUID@@@Z
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAE@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@QAE@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAE@XZ
??0?$MAP_SHARED@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAE@XZ
??0?$MAP_SHARED@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@QAE@XZ
??0?$MAP_SHARED@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAE@XZ
??0?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@I@Z
??0?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@I@Z
??0?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@I@Z
??0ACTIVATION_PROPERTIES@@QAE@ABU_GUID@@00KKKKPAGPAPAUIUnknown@@PAUIComClassInfo@@@Z
??0ActivationProperties@@QAE@XZ
??0ActivationPropertiesIn@@QAE@XZ
??0ActivationPropertiesOut@@QAE@H@Z
??0Assoc@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAE@ABVMAP_KEY_GUID@@ABQAUINTERFACE_HELPER_CLSID@@@Z
??0Assoc@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAE@ABVMAP_KEY_GUID@@ABQAUMD_INTERFACE@@@Z
??0Assoc@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAE@ABVMAP_KEY_GUID@@ABQAUTYPEINFOVTBL@@@Z
??0CAddrExclusionList@@QAE@XZ
??0CAggId@@QAE@ABU_GUID@@AAJ@Z
??0CAntiMoniker@@AAE@K@Z
??0CAptCallCtrl@@QAE@XZ
??0CAptRpcChnl@@QAE@PAVCStdIdentity@@PAVOXIDEntry@@K@Z
??0CArrayFValue@@QAE@I@Z
??0CAsyncCall@@QAE@K@Z
??0CAsyncCall@@QAE@XZ
??0CAsyncUnknownMgr@@QAE@PAUIUnknown@@ABU_GUID@@1PAVCStdIdentity@@PAVCClientCallMgr@@AAJPAPAU1@@Z
??0CBaseMoniker@@IAE@XZ
??0CBasedBytePtr@@QAE@PAE@Z
??0CBasedContextPtr@@QAE@PAVCContext@@@Z
??0CBasedDFBasisPtr@@QAE@PAVCDFBasis@@@Z
??0CBasedDeltaBlockPtr@@QAE@PAUSDeltaBlock@@@Z
??0CBasedDeltaBlockPtrPtr@@QAE@PAVCBasedDeltaBlockPtr@@@Z
??0CBasedDeltaListPtr@@QAE@PAVCDeltaList@@@Z
??0CBasedDirectStreamPtr@@QAE@PAVCDirectStream@@@Z
??0CBasedDlElementPtr@@QAE@PAVCDlElement@@@Z
??0CBasedDocFilePtr@@QAE@PAVPDocFile@@@Z
??0CBasedFatPtr@@QAE@PAVCFat@@@Z
??0CBasedFreeBlockPtr@@QAE@PAUSFreeBlock@@@Z
??0CBasedGlobalContextPtr@@QAE@PAVCGlobalContext@@@Z
??0CBasedILockBytesPtrPtr@@QAE@PAPAUILockBytes@@@Z
??0CBasedMSFPagePtr@@QAE@PAVCMSFPage@@@Z
??0CBasedMSFPagePtrPtr@@QAE@PAVCBasedMSFPagePtr@@@Z
??0CBasedMSFPageTablePtr@@QAE@PAVCMSFPageTable@@@Z
??0CBasedMStreamPtr@@QAE@PAVCMStream@@@Z
??0CBasedMarshalListPtr@@QAE@PAVCMarshalList@@@Z
??0CBasedPagedVectorPtr@@QAE@PAVCPagedVector@@@Z
??0CBasedPubDocFilePtr@@QAE@PAVCPubDocFile@@@Z
??0CBasedPubStreamPtr@@QAE@PAVCPubStream@@@Z
??0CBasedRevertablePtr@@QAE@PAVPRevertable@@@Z
??0CBasedSStreamPtr@@QAE@PAVPSStream@@@Z
??0CBasedSeekPointerPtr@@QAE@PAVCSeekPointer@@@Z
??0CBasedTSetMemberPtr@@QAE@PAVPTSetMember@@@Z
??0CBasedTransactedStreamPtr@@QAE@PAVCTransactedStream@@@Z
??0CBasedUpdatePtr@@QAE@PAVCUpdate@@@Z
??0CBasedVectBitsPtr@@QAE@PAUCVectBits@@@Z
??0CBindCtx@@AAE@XZ
??0CBindStatusCallback@@QAE@AAJ@Z
??0CCache@@QAE@_J@Z
??0CCacheNode@@QAE@PAUtagFORMATETC@@KPAUIStorage@@@Z
??0CCacheNode@@QAE@XZ
??0CChannelHandle@@QAE@KKKPAVOXIDEntry@@KPAJ@Z
??0CChannelHandle@@QAE@PAV0@KPAJ@Z
??0CChannelObject@@QAE@PAVCClientCallMgr@@PAVCCtxComChnl@@@Z
??0CClass@@QAE@XZ
??0CClassEntry@CClassCache@@QAE@XZ
??0CClassMoniker@@QAE@ABU_GUID@@@Z
??0CCliModalLoop@@QAE@KKKH@Z
??0CClientCall@@QAE@K@Z
??0CClientCall@@QAE@XZ
??0CClientCallMgr@@QAE@PAUIUnknown@@ABU_GUID@@1PAVCStdIdentity@@PAV0@AAJPAPAU1@@Z
??0CClipDataObject@@AAE@XZ
??0CComActivator@@QAE@XZ
??0CComApartment@@QAE@W4tagAPTKIND@@@Z
??0CComCat@@AAE@H@Z
??0CComClassInfo@@QAE@XZ
??0CComNoClassInfo@@QAE@ABU_GUID@@@Z
??0CComNoClassInfo@@QAE@ABU_GUID@@PAG@Z
??0CComNoClassInfo@@QAE@PAG@Z
??0CComProcessInfo@@QAE@XZ
??0CComRegCatalog@@QAE@PAUHKEY__@@K@Z
??0CComSxSClassInfo@@QAE@PAXABU_GUID@@PBU_ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION@@K0K@Z
??0CCompositeMoniker@@QAE@XZ
??0CCompositeMonikerEnum@@AAE@HPAVCCompositeMoniker@@@Z
??0CConnectionPoint@@QAE@XZ
??0CContextPropList@@QAE@XZ
??0CContextSwitcher@@QAE@PAVCObjectContext@@@Z
??0CContinue@@QAE@P6GHJ@ZJ@Z
??0CCtxCall@@QAE@KKKK@Z
??0CCtxCall@@QAE@PAV0@@Z
??0CCtxChnl@@QAE@PAVCStdWrapper@@@Z
??0CCtxComChnl@@QAE@PAVCStdIdentity@@PAVOXIDEntry@@K@Z
??0CCtxConnectionManager@@QAE@PAJ@Z
??0CDAHolder@@QAE@XZ
??0CDFBasis@@QAE@QAUIMalloc@@KKPAVCGlobalContext@@@Z
??0CDIFat@@QAE@PAV0@@Z
??0CDIFat@@QAE@XZ
??0CDataAdviseCache@@AAE@XZ
??0CDdeConnectionTable@@QAE@XZ
??0CDdeObject@@AAE@PAUIUnknown@@@Z
??0CDdeServerCallMgr@@QAE@PAVCDDEServer@@@Z
??0CDdeServerCallMgr@@QAE@PAVCDefClient@@@Z
??0CDefClassFactory@@QAE@ABU_GUID@@@Z
??0CDefClient@@AAE@PAUIUnknown@@@Z
??0CDefLink@@AAE@PAUIUnknown@@@Z
??0CDefObject@@AAE@PAUIUnknown@@@Z
??0CDeltaList@@QAE@PAVCMStream@@0@Z
??0CDestObjectWrapper@@QAE@PAX@Z
??0CDirVector@@QAE@XZ
??0CDirectStream@@QAE@K@Z
??0CDirectory@@QAE@XZ
??0CDllClassEntry@CClassCache@@QAE@XZ
??0CDllFnPtrMoniker@CClassCache@@QAE@PAVCDllClassEntry@1@AAJ@Z
??0CDllHost@@QAE@XZ
??0CDllPathEntry@CClassCache@@QAE@ABUDLL_INSTANTIATION_PROPERTIES@@PAUHINSTANCE__@@P6GJABU_GUID@@2PAPAX@ZP6GJXZ@Z
??0CDocFile@@QAE@KPAVCDFBasis@@@Z
??0CDocFile@@QAE@PAVCMStream@@KKPAVCDFBasis@@@Z
??0CDocfileStreamName@@QAE@PBG@Z
??0CDragDataObject@@QAE@PAXK@Z
??0CDragOperation@@QAE@PAUIDataObject@@PAUIDropSource@@KPAKAAJ@Z
??0CDropTarget@@AAE@PAUHWND__@@0KPAVCDragOperation@@PAX@Z
??0CDwordBag@@QAE@AAV0@K@Z
??0CDwordBag@@QAE@K@Z
??0CEMfObject@@QAE@PAVCCacheNode@@K@Z
??0CEffPermsCacheLUID@@QAE@XZ
??0CEndpointEntry@@QAE@GPAG0K@Z
??0CEnumCategories@@QAE@XZ
??0CEnumCategoriesOfClass@@QAE@XZ
??0CEnumClassesOfCategories@@QAE@XZ
??0CEnumContextProps@@QAE@PAUtagContextProperty@@K@Z
??0CEnumContextProps@@QAE@PAV0@@Z
??0CEnumFmt10@@QAE@PAGKK@Z
??0CEnumFmt@@QAE@PAGKK@Z
??0CEnumFormatEtc@@AAE@AAV0@@Z
??0CEnumFormatEtc@@AAE@PAV?$CArray@VCCacheNode@@@@@Z
??0CEnumFormatEtcDataArray@@QAE@PAUFORMATETCDATAARRAY@@K@Z
??0CEnumSTATDATA@@QAE@PAVCDAHolder@@H@Z
??0CEnumSTATPROPBAG@@QAE@ABV0@@Z
??0CEnumSTATPROPBAG@@QAE@PAUIBlockingLock@@@Z
??0CEnumSTATPROPSETSTG@@QAE@AAV0@PAJ@Z
??0CEnumSTATPROPSETSTG@@QAE@PAUIStorage@@PAJ@Z
??0CEnumSTATPROPSTG@@QAE@ABV0@@Z
??0CEnumSTATPROPSTG@@QAE@PAVCStatArray@@@Z
??0CEnumStatData@@AAE@AAV0@@Z
??0CEnumStatData@@AAE@PAV?$CArray@VCCacheNode@@@@@Z
??0CEnumVerb@@AAE@PAUVerbList@@J@Z
??0CErrorObject@@QAE@XZ
??0CExposedDocFile@@QAE@PAVCPubDocFile@@PAVCDFBasis@@PAVCPerContext@@@Z
??0CExposedIterator@@QAE@PAVCPubDocFile@@PAVCDfName@@PAVCDFBasis@@PAVCPerContext@@@Z
??0CExposedStream@@QAE@XZ
??0CExtentList@@QAE@XZ
??0CFastBH@@QAE@PAX@Z
??0CFat@@QAE@K@Z
??0CFat@@QAE@PAV0@@Z
??0CFatVector@@QAE@K@Z
??0CFileMoniker@@AAE@XZ
??0CFileStream@@QAE@QAUIMalloc@@@Z
??0CFillLockBytes@@QAE@PAUILockBytes@@@Z
??0CFormat@@QAE@XZ
??0CFormatEtc@@QAE@PAUtagFORMATETC@@@Z
??0CFrameFilter@@QAE@PAUHWND__@@0@Z
??0CGIPMessageParam@@QAE@KU_GUID@@@Z
??0CGenObject@@QAE@PAVCCacheNode@@GK@Z
??0CGenericObject@@QAE@XZ
??0CGlobalContext@@QAE@PAUIMalloc@@AAJ@Z
??0CGlobalFileStream@@QAE@QAUIMalloc@@PBGKK@Z
??0CGlobalOptions@@QAE@XZ
??0CIDObject@@QAE@PAUIUnknown@@KK@Z
??0CImpAccessControl@COAccessControl@@QAE@PAUIUnknown@@0PAJ@Z
??0CItemMoniker@@AAE@XZ
??0CLSvrClassEntry@CClassCache@@QAE@KPAUIUnknown@@KKK@Z
??0CLUAMoniker@@QAE@K@Z
??0CLocalMachineNames@@QAE@XZ
??0CLock2@@QAE@AAVCMutexSem2@@@Z
??0CMREInnerUnknown@@QAE@PAVCManualResetEvent@@@Z
??0CMSFHeader@@QAE@G@Z
??0CMSFHeaderData@@QAE@G@Z
??0CMSFPage@@QAE@PAV0@@Z
??0CMSFPageTable@@QAE@QAVCMStream@@KK@Z
??0CMStream@@QAE@PAUIMalloc@@PAPAUILockBytes@@HKG@Z
??0CMStream@@QAE@PBV0@@Z
??0CManualResetEvent@@QAE@PAUIUnknown@@PAJ@Z
??0CMapDwordDword@@QAE@I@Z
??0CMapKeyToValue@@QAE@IIHP6GIPAXI@ZI@Z
??0CMapStringToPtr@@QAE@I@Z
??0CMapUintPtr@@QAE@I@Z
??0CMarshalImplPStream@@QAE@PAUIPersistStream@@@Z
??0CMarshalList@@IAE@XZ
??0CMemStm@@AAE@XZ
??0CMessageCall@@QAE@XZ
??0CMfObject@@QAE@PAVCCacheNode@@KH@Z
??0CMonikerBag@@QAE@AAV0@@Z
??0CMonikerBag@@QAE@XZ
??0CMonikerPtrBuf@@QAE@AAV0@@Z
??0CMutexSem2@@QAE@XZ
??0CNFFMappedStream@@QAE@PAVCNtfsStream@@@Z
??0CNdrStream@@QAE@PAEK@Z
??0CNoEnum@@QAE@XZ
??0CNtfsEnumSTATSTG@@QAE@AAV0@@Z
??0CNtfsEnumSTATSTG@@QAE@PAUIBlockingLock@@@Z
??0CNtfsSTATSTGArray@@QAE@PAUIBlockingLock@@@Z
??0CNtfsStorage@@QAE@K@Z
??0CNtfsStream@@QAE@PAVCNtfsStorage@@PAUIBlockingLock@@@Z
??0CNtfsStreamName@@QAE@PBG@Z
??0CNtfsUpdateStreamForPropStg@@QAE@PAVCNtfsStorage@@PAUIBlockingLock@@@Z
??0CNtfsUpdateStreamName@@QAE@PBG@Z
??0COAHolder@@QAE@XZ
??0CObjServer@@QAE@AAJ@Z
??0CObjectContext@@AAE@KABU_GUID@@@Z
??0CObjrefMoniker@@QAE@PAUIUnknown@@@Z
??0COleCache@@QAE@PAUIUnknown@@ABU_GUID@@K@Z
??0COleStaticMutexSem@@QAE@E@Z
??0CPageAllocator@@QAE@XZ
??0CPagedVector@@QAE@K@Z
??0CPerContext@@QAE@PAUIMalloc@@@Z
??0CPipeProxyImp@@QAE@PAUIUnknown@@PAUIRpcProxyBuffer@@00U_GUID@@@Z
??0CPointerMoniker@@QAE@PAUIUnknown@@@Z
??0CPolicySet@@QAE@K@Z
??0CPres@@QAE@XZ
??0CProcessExtensionTbl@@QAE@XZ
??0CProcessPatternTbl@@QAE@AAJ@Z
??0CPropSetName@@QAE@ABU_GUID@@@Z
??0CPropertyBagEx@@QAE@K@Z
??0CPropertySetStorage@@QAE@W4MAPPED_STREAM_OPTS@@@Z
??0CPropertySetStream@@QAE@GPAVIMappedStream@@PAVPMemoryAllocator@@@Z
??0CPropertyStorage@@QAE@W4MAPPED_STREAM_OPTS@@@Z
??0CPubDocFile@@QAE@PAV0@PAVPDocFile@@KKPAVCDFBasis@@PBVCDfName@@GPAVCMStream@@@Z
??0CPubMappedStream@@QAE@PAVCPubStream@@@Z
??0CPubStream@@QAE@PAVCPubDocFile@@KPBVCDfName@@@Z
??0CPunkForRelease@@QAE@PAUtagSTGMEDIUM@@K@Z
??0CROTItem@@QAE@XZ
??0CRWLock@@QAE@XZ
??0CRefCache@@QAE@XZ
??0CRefExportCount@@QAE@PAUIUnknown@@@Z
??0CRefMutexAutoLock@@QAE@PAVCRefMutexSem@@@Z
??0CRefMutexSem@@IAE@XZ
??0CRefStabilize@@QAE@PAVCRefExportCount@@@Z
??0CRemoteUnknown@@QAE@AAJPAU_GUID@@@Z
??0CRootPubDocFile@@QAE@QAUIMalloc@@@Z
??0CRotMonikerEnum@@QAE@AAV0@@Z
??0CRotMonikerEnum@@QAE@XZ
??0CRpcCall@@QAE@AAPAUIUnknown@@PAUtagRPCOLEMESSAGE@@ABU_GUID@@AAJW4_CALLSOURCE@@@Z
??0CRpcChannelBuffer@@QAE@PAVCStdIdentity@@PAVOXIDEntry@@K@Z
??0CRpcOptions@@QAE@PAVCStdIdentity@@PAUIUnknown@@@Z
??0CRpcThread@@QAE@P6GKPAX@Z0@Z
??0CRunningObjectTable@@QAE@XZ
??0CSCInnerUnknown@@QAE@PAVCSynchronizeContainer@@@Z
??0CSSMappedStream@@QAE@PAUIStream@@@Z
??0CSTATPROPBAGArray@@QAE@PAUIBlockingLock@@@Z
??0CSTInnerUnknown@@QAE@PAVCStdEvent@@@Z
??0CSafeBYTEArray@@QAE@K@Z
??0CSafeMarshaledStg@@QAE@PAUtagInterfaceData@@AAJ@Z
??0CSafeMultiHeap@@QAE@PAVCPerContext@@@Z
??0CServerCallMgr@CRpcChannelBuffer@@QAE@PAUtagRPCOLEMESSAGE@@PAUIUnknown@@1AAJ@Z
??0CServerSecurity@@QAE@PAVCMessageCall@@PAXPAJ@Z
??0CSessionMoniker@@QAE@KH@Z
??0CSimpEnumSTATSTG@@QAE@PAVCDfNameList@@0@Z
??0CSimpStorage@@QAE@XZ
??0CSimpStorageOpen@@QAE@XZ
??0CSimpStream@@QAE@XZ
??0CSimpStreamOpen@@QAE@XZ
??0CSmAllocator@@QAE@XZ
??0CSplit_QI@@QAE@AAJKPAUtagMULTI_QI@@@Z
??0CSpyTable@@QAE@PAH@Z
??0CSrvCallState@@QAE@K@Z
??0CStabilize@@QAE@PAVCSafeRefCount@@@Z
??0CStackWalkerStack@@QAE@PAVCStackWalkerSymbol@@K@Z
??0CStackWalkerSymbol@@QAE@XZ
??0CStatArray@@QAE@PAVCPropertySetStream@@PAJ@Z
??0CStatData@@QAE@PAUtagFORMATETC@@KPAUIAdviseSink@@K@Z
??0CStdEvent@@QAE@PAUIUnknown@@@Z
??0CStdIdentity@@QAE@KKPAUIUnknown@@0PAPAU1@PAH@Z
??0CStdMarshal@@QAE@XZ
??0CStdWrapper@@QAE@PAUIUnknown@@KPAVCIDObject@@@Z
??0CStmBuf@@QAE@XZ
??0CStreamCache@@QAE@XZ
??0CStreamChunkList@@QAE@KPAUCStreamChunk@@@Z
??0CStreamOnMessage@@QAE@PAPAEK@Z
??0CSurrogateProcessActivator@@QAE@XZ
??0CSynchronizeContainer@@QAE@PAUIUnknown@@@Z
??0CTransactedStream@@QAE@PBVCDfName@@KKPAVCMStream@@1@Z
??0CUpdate@@QAE@PBVCDfName@@0KKPAVPTSetMember@@@Z
??0CUrlMonWrapper@@QAE@XZ
??0CUserMarshalInfo@@QAE@PAKPAEK@Z
??0CVerifierTlsData@@QAE@XZ
??0CWorldSecurityDescriptor@@QAE@XZ
??0CWrappedDocFile@@QAE@PBVCDfName@@KKPAVCDFBasis@@PAVCPubDocFile@@@Z
??0CallFrame@@QAE@XZ
??0ComPsClassFactory@@QAE@PAUIUnknown@@PAUtagCStdPSFactoryBuffer@@@Z
??0ComVerifierSettings@@AAE@XZ
??0ContextInfo@@QAE@XZ
??0CpUnkList@@QAE@PAJ@Z
??0CpUnkMoniker@CClassCache@@QAE@PAVCLSvrClassEntry@1@AAJ@Z
??0CsCatInfo@@QAE@XZ
??0DISPATCH_CLIENT_FRAME@@QAE@PAUIUnknown@@KPAXPAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_FRAME@@QAE@PAUIUnknown@@KPAXPAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_INTERCEPTOR@@QAE@PAUIUnknown@@@Z
??0DISPATCH_SERVER_FRAME@@QAE@PAUIUnknown@@KPAXPAULEGACY_INTERCEPTOR@@@Z
??0DefaultIBindStatusCallback@@QAE@PAUHWND__@@PAUIBindStatusCallback@@@Z
??0EventPoolEntry@@QAE@PAX0@Z
??0GenericStream@@QAE@K@Z
??0GenericStream@@QAE@PAUtagInterfaceData@@@Z
??0GenericStream@@QAE@XZ
??0IFaceEntry@@QAE@PAV0@PAXPAUIRpcProxyBuffer@@1PAUIRpcStubBuffer@@ABU_GUID@@PAVCCtxChnl@@PAUICallInterceptor@@PAUIUnknown@@@Z
??0INTERFACE_HELPER_CLSID@@QAE@XZ
??0InstanceInfo@@QAE@XZ
??0InstantiationInfo@@QAE@XZ
??0Interceptor@@AAE@PAUIUnknown@@@Z
??0InterfaceWalkerFree@@QAE@PAUICallFrameWalker@@@Z
??0LEGACY_FRAME@@QAE@PAUIUnknown@@KPAXPAULEGACY_INTERCEPTOR@@@Z
??0LEGACY_INTERCEPTOR@@QAE@PAUIUnknown@@@Z
??0MD_INTERFACE_CACHE@@QAE@XZ
??0MD_METHOD@@QAE@XZ
??0MarshallingChannel@@QAE@PAUIUnknown@@@Z
??0OAUTIL@@QAE@PAUICallFrameWalker@@00HH@Z
??0OXIDEntry@@AAE@AB_KPAVMIDEntry@@PAUtagOXID_INFO@@KPAEKAAJ@Z
??0OpaqueDataInfo@@QAE@XZ
??0OutSerializer@ActivationPropertiesOut@@QAE@H@Z
??0PTSetMember@@IAE@PBVCDfName@@G@Z
??0SDDInfo@@QAE@PAUHWND__@@AAJ@Z
??0ScmReplyInfo@@QAE@XZ
??0ScmRequestInfo@@QAE@XZ
??0SecurityInfo@@QAE@XZ
??0SerializedPropertyReader@@QAE@PBUtagSERIALIZEDPROPERTYVALUE@@KPAJ@Z
??0Serializer@@QAE@KKK@Z
??0Serializer@@QAE@XZ
??0ServerLocationInfo@@QAE@XZ
??0SpecialProperties@@QAE@XZ
??0TYPEINFOVTBL@@QAE@XZ
??0VtblSplayNode@@QAE@PAX@Z
??0XSLOCK@@QAE@XZ
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAE@AAV?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@@Z
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAE@AAV?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@@Z
??1?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QAE@XZ
??1?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QAE@XZ
??1?$CArray@VCCacheNode@@@@AAE@XZ
??1?$CArray@VCFormatEtc@@@@AAE@XZ
??1?$CArray@VCStatData@@@@AAE@XZ
??1?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QAE@XZ
??1?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QAE@XZ
??1?$EnumMap@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@XZ
??1?$EnumMap@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@XZ
??1?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAE@XZ
??1?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@QAE@XZ
??1?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAE@XZ
??1?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@XZ
??1?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@XZ
??1?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAE@XZ
??1ActivationProperties@@UAE@XZ
??1ActivationPropertiesIn@@UAE@XZ
??1ActivationPropertiesOut@@UAE@XZ
??1CAggId@@AAE@XZ
??1CAptCallCtrl@@QAE@XZ
??1CAptRpcChnl@@MAE@XZ
??1CArrayFValue@@QAE@XZ
??1CAsyncCall@@UAE@XZ
??1CAsyncConnection@@QAE@XZ
??1CAsyncUnknownMgr@@QAE@XZ
??1CBaseMoniker@@UAE@XZ
??1CBindCtx@@AAE@XZ
??1CBindStatusCallback@@QAE@XZ
??1CCache@@QAE@XZ
??1CCacheNode@@QAE@XZ
??1CChannelHandle@@AAE@XZ
??1CChannelObject@@QAE@XZ
??1CClass@@QAE@XZ
??1CClassEntry@CClassCache@@QAE@XZ
??1CClassMoniker@@AAE@XZ
??1CCliModalLoop@@QAE@XZ
??1CClientCall@@UAE@XZ
??1CClientCallMgr@@QAE@XZ
??1CClipDataObject@@AAE@XZ
??1CComActivator@@UAE@XZ
??1CComApartment@@AAE@XZ
??1CComCat@@AAE@XZ
??1CComClassInfo@@QAE@XZ
??1CComNoClassInfo@@QAE@XZ
??1CComProcessInfo@@QAE@XZ
??1CComRegCatalog@@QAE@XZ
??1CComSxSClassInfo@@QAE@XZ
??1CCompositeMoniker@@UAE@XZ
??1CCompositeMonikerEnum@@AAE@XZ
??1CConnectionPoint@@QAE@XZ
??1CContextPropList@@QAE@XZ
??1CContextSwitcher@@QAE@XZ
??1CCtxCall@@QAE@XZ
??1CCtxComChnl@@EAE@XZ
??1CCtxConnectionManager@@QAE@XZ
??1CDAHolder@@EAE@XZ
??1CDFBasis@@QAE@XZ
??1CData@@QAE@XZ
??1CDataAdviseCache@@QAE@XZ
??1CDdeConnectionTable@@QAE@XZ
??1CDdeObject@@AAE@XZ
??1CDefClient@@AAE@XZ
??1CDefLink@@EAE@XZ
??1CDefObject@@EAE@XZ
??1CDeltaList@@QAE@XZ
??1CDestObjectWrapper@@QAE@XZ
??1CDfMutex@@QAE@XZ
??1CDirectStream@@QAE@XZ
??1CDllFnPtrMoniker@CClassCache@@QAE@XZ
??1CDocFile@@QAE@XZ
??1CDragDataObject@@QAE@XZ
??1CDragOperation@@QAE@XZ
??1CDropTarget@@AAE@XZ
??1CDualStringArray@@QAE@XZ
??1CEMfObject@@QAE@XZ
??1CEffPermsCacheLUID@@QAE@XZ
??1CEndPointAtom@@QAE@XZ
??1CEndpointEntry@@QAE@XZ
??1CEnumCategories@@QAE@XZ
??1CEnumCategoriesOfClass@@QAE@XZ
??1CEnumClassesOfCategories@@QAE@XZ
??1CEnumContextProps@@QAE@XZ
??1CEnumFormatEtc@@AAE@XZ
??1CEnumFormatEtcDataArray@@AAE@XZ
??1CEnumSTATDATA@@AAE@XZ
??1CEnumSTATPROPBAG@@QAE@XZ
??1CEnumSTATPROPSETSTG@@QAE@XZ
??1CEnumSTATPROPSTG@@AAE@XZ
??1CEnumStatData@@AAE@XZ
??1CErrorObject@@AAE@XZ
??1CExposedDocFile@@QAE@XZ
??1CExposedIterator@@QAE@XZ
??1CExposedStream@@QAE@XZ
??1CExtentList@@QAE@XZ
??1CFastBH@@QAE@XZ
??1CFat@@QAE@XZ
??1CFileMoniker@@EAE@XZ
??1CFileStream@@QAE@XZ
??1CFillLockBytes@@QAE@XZ
??1CFinishComposite@CClassCache@@QAE@XZ
??1CFmCtrlUnknown@@AAE@XZ
??1CFormatEtc@@QAE@XZ
??1CFrameFilter@@UAE@XZ
??1CGenObject@@QAE@XZ
??1CGenericObject@@QAE@XZ
??1CIDObject@@QAE@XZ
??1CImpAccessControl@COAccessControl@@QAE@XZ
??1CItemMoniker@@EAE@XZ
??1CLSvrClassEntry@CClassCache@@UAE@XZ
??1CLocalMachineNames@@QAE@XZ
??1CMSFPageTable@@QAE@XZ
??1CMStream@@QAE@XZ
??1CMachineNamesHelper@@QAE@XZ
??1CManualResetEvent@@QAE@XZ
??1CMapKeyToValue@@QAE@XZ
??1CMemStm@@QAE@XZ
??1CMessageCall@@MAE@XZ
??1CMfObject@@QAE@XZ
??1CMonikerPtrBuf@@QAE@XZ
??1CMutexSem2@@QAE@XZ
??1CNFFMappedStream@@QAE@XZ
??1CNFFTreeMutex@@QAE@XZ
??1CNtfsEnumSTATSTG@@QAE@XZ
??1CNtfsSTATSTGArray@@QAE@XZ
??1CNtfsStorage@@QAE@XZ
??1CNtfsStream@@UAE@XZ
??1CNtfsUpdateStreamForPropStg@@UAE@XZ
??1COAHolder@@EAE@XZ
??1COAccessControl@@QAE@XZ
??1CObjList@CBindCtx@@QAE@XZ
??1CObjServer@@QAE@XZ
??1CObjectContext@@AAE@XZ
??1CObjrefMoniker@@UAE@XZ
??1COleCache@@UAE@XZ
??1CPageAllocator@@QAE@XZ
??1CPagedVector@@QAE@XZ
??1CPerContext@@QAE@XZ
??1CPipeProxyImp@@UAE@XZ
??1CPointerMoniker@@UAE@XZ
??1CPolicySet@@QAE@XZ
??1CPres@@QAE@XZ
??1CProcessExtensionTbl@@QAE@XZ
??1CProcessPatternTbl@@QAE@XZ
??1CPropertyBagEx@@QAE@XZ
??1CPropertySetStorage@@QAE@XZ
??1CPropertyStorage@@QAE@XZ
??1CPtrCache@@QAE@XZ
??1CPubStream@@QAE@XZ
??1CPunkForRelease@@AAE@XZ
??1CRandomNumberGenerator@@QAE@XZ
??1CRefCache@@AAE@XZ
??1CRemoteUnknown@@QAE@XZ
??1CRpcChannelBuffer@@UAE@XZ
??1CRpcThread@@QAE@XZ
??1CRunningObjectTable@@QAE@XZ
??1CSSMappedStream@@QAE@XZ
??1CSTATPROPBAGArray@@QAE@XZ
??1CSafeBindCtx@@QAE@XZ
??1CSafeMarshaledStg@@QAE@XZ
??1CSafeMoniker@@QAE@XZ
??1CSafeMultiHeap@@QAE@XZ
??1CServerCallMgr@CRpcChannelBuffer@@QAE@XZ
??1CSharedMemoryBlock@@QAE@XZ
??1CSimpStorage@@QAE@XZ
??1CSimpStorageOpen@@QAE@XZ
??1CSplit_QI@@QAE@XZ
??1CSpyTable@@QAE@XZ
??1CStackWalker@@QAE@XZ
??1CStackWalkerStack@@QAE@XZ
??1CStackWalkerSymbol@@QAE@XZ
??1CStatArray@@AAE@XZ
??1CStatData@@QAE@XZ
??1CStdEvent@@QAE@XZ
??1CStdIdentity@@UAE@XZ
??1CStdMarshal@@QAE@XZ
??1CStdWrapper@@AAE@XZ
??1CStmBuf@@QAE@XZ
??1CStreamCache@@QAE@XZ
??1CSurrogateProcessActivator@@QAE@XZ
??1CSynchronizeContainer@@QAE@XZ
??1CTSSet@@QAE@XZ
??1CTransactedStream@@QAE@XZ
??1CUpdate@@QAE@XZ
??1CVerifierStackData@@QAE@XZ
??1CVerifierTlsData@@QAE@XZ
??1CWrappedDocFile@@QAE@XZ
??1CallFrame@@QAE@XZ
??1ComVerifierSettings@@AAE@XZ
??1CompObjStmData@@QAE@XZ
??1ContextInfo@@UAE@XZ
??1CpUnkList@@QAE@XZ
??1CsCatInfo@@QAE@XZ
??1DISPATCH_CLIENT_FRAME@@EAE@XZ
??1DISPATCH_INTERCEPTOR@@UAE@XZ
??1DefaultIBindStatusCallback@@UAE@XZ
??1GenericStream@@QAE@XZ
??1InstanceInfo@@UAE@XZ
??1InstantiationInfo@@UAE@XZ
??1Interceptor@@EAE@XZ
??1LEGACY_FRAME@@MAE@XZ
??1LEGACY_INTERCEPTOR@@UAE@XZ
??1MD_INTERFACE@@AAE@XZ
??1MD_METHOD@@QAE@XZ
??1MarshallingChannel@@QAE@XZ
??1OAUTIL@@QAE@XZ
??1OLEAUTOMATION_FUNCTIONS@@QAE@XZ
??1OpaqueDataInfo@@QAE@XZ
??1SDDInfo@@QAE@XZ
??1SafeCExposedDocFile@@QAE@XZ
??1SafeCExposedIterator@@QAE@XZ
??1SafeCExposedStream@@QAE@XZ
??1SafeIUnknown@@QAE@XZ
??1ScmReplyInfo@@UAE@XZ
??1ScmRequestInfo@@UAE@XZ
??1SecurityInfo@@UAE@XZ
??1Serializer@@QAE@XZ
??1ServerLocationInfo@@UAE@XZ
??1TYPEINFOVTBL@@EAE@XZ
??1XIPersistFile@@QAE@XZ
??1XIPersistStorage@@QAE@XZ
??1XIUnknown@@QAE@XZ
??1XSLOCK@@QAE@XZ
??2?$CArray@VCCacheNode@@@@SGPAXI@Z
??2?$CArray@VCFormatEtc@@@@SGPAXI@Z
??2?$CArray@VCStatData@@@@SGPAXI@Z
??2@YAPAXI@Z
??2AllocateThrow@@SGPAXI@Z
??2CClientCall@@SGPAXI@Z
??2CContextSwitcher@@SGPAXI@Z
??2CCtxCall@@SGPAXI@Z
??2CCtxComChnl@@SGPAXI@Z
??2CDebugEventFire@@SGPAXI@Z
??2CEndpointEntry@@SGPAXI@Z
??2CIDObject@@SGPAXI@Z
??2CMSFPage@@SGPAXIQAUIMalloc@@I@Z
??2CMallocBased@@SGPAXIQAUIMalloc@@@Z
??2CObjectContext@@SGPAXI@Z
??2CPolicySet@@SGPAXI@Z
??2CPrivAlloc@@SGPAXI@Z
??2CRpcThread@@SGPAXI@Z
??2CServerSecurity@@SGPAXI@Z
??2CStdWrapper@@SGPAXI@Z
??2CtxEntry@@SGPAXI@Z
??2EventPoolEntry@@SGPAXI@Z
??2LockEntry@@CGPAXI@Z
??2OXIDEntry@@CGPAXI@Z
??2POSTRELRIFREF@@SGPAXII@Z
??2TYPEINFOVTBL@@SGPAXII@Z
??3?$CArray@VCCacheNode@@@@SGXPAX@Z
??3?$CArray@VCFormatEtc@@@@SGXPAX@Z
??3?$CArray@VCStatData@@@@SGXPAX@Z
??3?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SAXPAX@Z
??3?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SAXPAX@Z
??3?$DedicatedAllocator@VCallFrame@@@@SAXPAX@Z
??3@YAXPAX@Z
??3CClientCall@@SGXPAX@Z
??3CContextSwitcher@@SGXPAX@Z
??3CCtxCall@@SGXPAX@Z
??3CCtxComChnl@@SGXPAX@Z
??3CDebugEventFire@@SGXPAX@Z
??3CEndpointEntry@@SGXPAX@Z
??3CIDObject@@SGXPAX@Z
??3CLSvrClassEntry@CClassCache@@SGXPAX@Z
??3CMallocBased@@SGXPAX@Z
??3CObjectContext@@SGXPAX@Z
??3CPolicySet@@SGXPAX@Z
??3CPrivAlloc@@SGXPAX@Z
??3CRpcThread@@SGXPAX@Z
??3CServerSecurity@@SGXPAX@Z
??3CStdWrapper@@SGXPAX@Z
??3CtxEntry@@SGXPAX@Z
??3EventPoolEntry@@SGXPAX@Z
??3LockEntry@@CGXPAX@Z
??3OXIDEntry@@CGXPAX@Z
??3POSTRELRIFREF@@SGXPAX@Z
??4?$EnumMap@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEAAV0@ABV0@@Z
??4?$EnumMap@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEAAV0@ABV0@@Z
??4CCacheNode@@QAEABV0@ABV0@@Z
??4CFormatEtc@@QAEABV0@ABV0@@Z
??4CStatData@@QAEABV0@ABV0@@Z
??4SpecialProperties@@QAEAAV0@AAV0@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAEAAV01@ABV01@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAEAAV01@ABV01@@Z
??8?$EnumMap@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABV0@@Z
??8?$EnumMap@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABV0@@Z
??8CContextPropList@@QAEHABV0@@Z
??8iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QBEHABV01@@Z
??8iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QBEHABV01@@Z
??ACRGTypeSizes@@QAEEH@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAEXH@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAEXH@Z
??M?$TXLargeIntegerWrapper@T_LARGE_INTEGER@@J_J@@QBEHV0@@Z
??_9CProcessActivator@@$BCA@AG
??_9CProcessActivator@@$BCE@AG
??_E?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UAEPAXI@Z
??_E?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@UAEPAXI@Z
??_E?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAEPAXI@Z
??_E?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAEPAXI@Z
??_E?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAEPAXI@Z
??_E?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@UAEPAXI@Z
??_E?$IFastStack@UDISPATCH_SERVER_FRAME@@@@UAEPAXI@Z
??_E?$IFastStack@VCallFrame@@@@UAEPAXI@Z
??_E?$InterlockedStackIndirect@UDISPATCH_CLIENT_FRAME@@@@UAEPAXI@Z
??_E?$InterlockedStackIndirect@UDISPATCH_SERVER_FRAME@@@@UAEPAXI@Z
??_E?$InterlockedStackIndirect@VCallFrame@@@@UAEPAXI@Z
??_EActivationProperties@@UAEPAXI@Z
??_EActivationPropertiesIn@@UAEPAXI@Z
??_EActivationPropertiesOut@@UAEPAXI@Z
??_ECAntiMoniker@@UAEPAXI@Z
??_ECAptRpcChnl@@MAEPAXI@Z
??_ECAsyncCall@@UAEPAXI@Z
??_ECBaseClassEntry@CClassCache@@UAEPAXI@Z
??_ECBaseMoniker@@UAEPAXI@Z
??_ECClientCall@@UAEPAXI@Z
??_ECComActivator@@UAEPAXI@Z
??_ECCompositeMoniker@@UAEPAXI@Z
??_ECCtxChnl@@UAEPAXI@Z
??_ECCtxComChnl@@EAEPAXI@Z
??_ECDAHolder@@EAEPAXI@Z
??_ECDAHolder@@G3AEPAXI@Z
??_ECDefLink@@EAEPAXI@Z
??_ECDefObject@@EAEPAXI@Z
??_ECDllClassEntry@CClassCache@@UAEPAXI@Z
??_ECFileMoniker@@EAEPAXI@Z
??_ECFinishObject@CDllPathEntry@CClassCache@@UAEPAXI@Z
??_ECFinishObject@CLSvrClassEntry@CClassCache@@UAEPAXI@Z
??_ECFrameFilter@@UAEPAXI@Z
??_ECHlprDialog@@UAEPAXI@Z
??_ECItemMoniker@@EAEPAXI@Z
??_ECLSvrClassEntry@CClassCache@@UAEPAXI@Z
??_ECLUAMoniker@@UAEPAXI@Z
??_ECMessageCall@@MAEPAXI@Z
??_ECNtfsStream@@UAEPAXI@Z
??_ECNtfsUpdateStreamForPropStg@@UAEPAXI@Z
??_ECOAHolder@@EAEPAXI@Z
??_ECOAHolder@@G3AEPAXI@Z
??_ECObjrefMoniker@@UAEPAXI@Z
??_ECOleCache@@UAEPAXI@Z
??_ECOleCache@@WM@AEPAXI@Z
??_ECPipePSFactory@@UAEPAXI@Z
??_ECPipeProxyImp@@UAEPAXI@Z
??_ECPointerMoniker@@UAEPAXI@Z
??_ECRefExportCount@@UAEPAXI@Z
??_ECRpcChannelBuffer@@UAEPAXI@Z
??_ECSafeRefCount@@UAEPAXI@Z
??_ECSessionMoniker@@UAEPAXI@Z
??_ECStdIdentity@@UAEPAXI@Z
??_EContextInfo@@UAEPAXI@Z
??_EDISPATCH_CLIENT_FRAME@@EAEPAXI@Z
??_EDISPATCH_FRAME@@UAEPAXI@Z
??_EDISPATCH_INTERCEPTOR@@UAEPAXI@Z
??_EDISPATCH_SERVER_FRAME@@EAEPAXI@Z
??_EDefaultIBindStatusCallback@@UAEPAXI@Z
??_EDefaultIBindStatusCallback@@W7AEPAXI@Z
??_EIFinish@@UAEPAXI@Z
??_EINTERFACE_HELPER_CLSID@@UAEPAXI@Z
??_EInstanceInfo@@UAEPAXI@Z
??_EInstantiationInfo@@UAEPAXI@Z
??_EInterceptor@@EAEPAXI@Z
??_ELEGACY_FRAME@@MAEPAXI@Z
??_ELEGACY_INTERCEPTOR@@UAEPAXI@Z
??_EMD_METHOD@@QAEPAXI@Z
??_EScmReplyInfo@@UAEPAXI@Z
??_EScmRequestInfo@@UAEPAXI@Z
??_ESecurityInfo@@UAEPAXI@Z
??_EServerLocationInfo@@UAEPAXI@Z
??_ETYPEINFOVTBL@@EAEPAXI@Z
??_G?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QAEPAXI@Z
??_G?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QAEPAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UAEPAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@UAEPAXI@Z
??_G?$CArray@VCCacheNode@@@@AAEPAXI@Z
??_G?$CArray@VCFormatEtc@@@@AAEPAXI@Z
??_G?$CArray@VCStatData@@@@AAEPAXI@Z
??_G?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAEPAXI@Z
??_G?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAEPAXI@Z
??_G?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAEPAXI@Z
??_G?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QAEPAXI@Z
??_G?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QAEPAXI@Z
??_G?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@UAEPAXI@Z
??_G?$IFastStack@UDISPATCH_SERVER_FRAME@@@@UAEPAXI@Z
??_G?$IFastStack@VCallFrame@@@@UAEPAXI@Z
??_G?$InterlockedStackIndirect@UDISPATCH_CLIENT_FRAME@@@@UAEPAXI@Z
??_G?$InterlockedStackIndirect@UDISPATCH_SERVER_FRAME@@@@UAEPAXI@Z
??_G?$InterlockedStackIndirect@VCallFrame@@@@UAEPAXI@Z
??_GActivationProperties@@UAEPAXI@Z
??_GActivationPropertiesIn@@UAEPAXI@Z
??_GActivationPropertiesOut@@UAEPAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEPAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEPAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEPAXI@Z
??_GCAddrExclusionList@@QAEPAXI@Z
??_GCAggId@@AAEPAXI@Z
??_GCAntiMoniker@@UAEPAXI@Z
??_GCAptCallCtrl@@QAEPAXI@Z
??_GCAptRpcChnl@@MAEPAXI@Z
??_GCAsyncCall@@UAEPAXI@Z
??_GCAsyncConnection@@QAEPAXI@Z
??_GCAsyncUnknownMgr@@QAEPAXI@Z
??_GCBaseClassEntry@CClassCache@@UAEPAXI@Z
??_GCBaseMoniker@@UAEPAXI@Z
??_GCBindCtx@@AAEPAXI@Z
??_GCBindStatusCallback@@QAEPAXI@Z
??_GCCache@@QAEPAXI@Z
??_GCCacheNode@@QAEPAXI@Z
??_GCChannelHandle@@AAEPAXI@Z
??_GCChannelObject@@QAEPAXI@Z
??_GCClassEntry@CClassCache@@QAEPAXI@Z
??_GCClassMoniker@@AAEPAXI@Z
??_GCClientCall@@UAEPAXI@Z
??_GCClientCallMgr@@QAEPAXI@Z
??_GCClipDataObject@@AAEPAXI@Z
??_GCComActivator@@UAEPAXI@Z
??_GCComApartment@@AAEPAXI@Z
??_GCComCat@@AAEPAXI@Z
??_GCComClassInfo@@QAEPAXI@Z
??_GCComNoClassInfo@@QAEPAXI@Z
??_GCComProcessInfo@@QAEPAXI@Z
??_GCComRegCatalog@@QAEPAXI@Z
??_GCComSxSClassInfo@@QAEPAXI@Z
??_GCCompositeMoniker@@UAEPAXI@Z
??_GCCompositeMonikerEnum@@AAEPAXI@Z
??_GCConnectionPoint@@QAEPAXI@Z
??_GCContextSwitcher@@QAEPAXI@Z
??_GCContinue@@AAEPAXI@Z
??_GCCtxCall@@QAEPAXI@Z
??_GCCtxChnl@@UAEPAXI@Z
??_GCCtxComChnl@@EAEPAXI@Z
??_GCCtxConnectionManager@@QAEPAXI@Z
??_GCDAHolder@@EAEPAXI@Z
??_GCDFBasis@@QAEPAXI@Z
??_GCDataAdviseCache@@QAEPAXI@Z
??_GCDdeObject@@AAEPAXI@Z
??_GCDefClient@@AAEPAXI@Z
??_GCDefLink@@EAEPAXI@Z
??_GCDefObject@@EAEPAXI@Z
??_GCDirectStream@@QAEPAXI@Z
??_GCDllClassEntry@CClassCache@@UAEPAXI@Z
??_GCDllPathEntry@CClassCache@@QAEPAXI@Z
??_GCDocFile@@QAEPAXI@Z
??_GCDragDataObject@@QAEPAXI@Z
??_GCDropTarget@@AAEPAXI@Z
??_GCDualStringArray@@QAEPAXI@Z
??_GCEMfObject@@QAEPAXI@Z
??_GCEndpointEntry@@QAEPAXI@Z
??_GCEnumCategories@@QAEPAXI@Z
??_GCEnumCategoriesOfClass@@QAEPAXI@Z
??_GCEnumClassesOfCategories@@QAEPAXI@Z
??_GCEnumContextProps@@QAEPAXI@Z
??_GCEnumFormatEtc@@AAEPAXI@Z
??_GCEnumFormatEtcDataArray@@AAEPAXI@Z
??_GCEnumSTATDATA@@AAEPAXI@Z
??_GCEnumSTATPROPBAG@@QAEPAXI@Z
??_GCEnumSTATPROPSETSTG@@QAEPAXI@Z
??_GCEnumSTATPROPSTG@@AAEPAXI@Z
??_GCEnumStatData@@AAEPAXI@Z
??_GCErrorObject@@AAEPAXI@Z
??_GCExposedDocFile@@QAEPAXI@Z
??_GCExposedIterator@@QAEPAXI@Z
??_GCExposedStream@@QAEPAXI@Z
??_GCFastBH@@QAEPAXI@Z
??_GCFileMoniker@@EAEPAXI@Z
??_GCFileStream@@QAEPAXI@Z
??_GCFillLockBytes@@QAEPAXI@Z
??_GCFinishObject@CDllPathEntry@CClassCache@@UAEPAXI@Z
??_GCFinishObject@CLSvrClassEntry@CClassCache@@UAEPAXI@Z
??_GCFmCtrlUnknown@@AAEPAXI@Z
??_GCFormatEtc@@QAEPAXI@Z
??_GCFrameFilter@@UAEPAXI@Z
??_GCGenObject@@QAEPAXI@Z
??_GCGlobalOptions@@QAEPAXI@Z
??_GCHlprDialog@@UAEPAXI@Z
??_GCIDObject@@QAEPAXI@Z
??_GCImpAccessControl@COAccessControl@@QAEPAXI@Z
??_GCItemMoniker@@EAEPAXI@Z
??_GCLSvrClassEntry@CClassCache@@UAEPAXI@Z
??_GCLUAMoniker@@UAEPAXI@Z
??_GCLocalMachineNames@@QAEPAXI@Z
??_GCMSFPage@@QAEPAXI@Z
??_GCMSFPageTable@@QAEPAXI@Z
??_GCMStream@@QAEPAXI@Z
??_GCMachineNamesHelper@@QAEPAXI@Z
??_GCManualResetEvent@@QAEPAXI@Z
??_GCMapStringToPtr@@QAEPAXI@Z
??_GCMapUintPtr@@QAEPAXI@Z
??_GCMemBytes@@AAEPAXI@Z
??_GCMemStm@@QAEPAXI@Z
??_GCMessageCall@@MAEPAXI@Z
??_GCMfObject@@QAEPAXI@Z
??_GCNFFTreeMutex@@QAEPAXI@Z
??_GCNtfsEnumSTATSTG@@QAEPAXI@Z
??_GCNtfsSTATSTGArray@@QAEPAXI@Z
??_GCNtfsStorage@@QAEPAXI@Z
??_GCNtfsStream@@UAEPAXI@Z
??_GCNtfsUpdateStreamForPropStg@@UAEPAXI@Z
??_GCOAHolder@@EAEPAXI@Z
??_GCOAccessControl@@QAEPAXI@Z
??_GCOLEDragDropHelper@@QAEPAXI@Z
??_GCObjList@CBindCtx@@QAEPAXI@Z
??_GCObjServer@@QAEPAXI@Z
??_GCObjectContext@@AAEPAXI@Z
??_GCObjrefMoniker@@UAEPAXI@Z
??_GCOleCache@@UAEPAXI@Z
??_GCPerContext@@QAEPAXI@Z
??_GCPipePSFactory@@UAEPAXI@Z
??_GCPipeProxyImp@@UAEPAXI@Z
??_GCPointerMoniker@@UAEPAXI@Z
??_GCPolicySet@@QAEPAXI@Z
??_GCPres@@QAEPAXI@Z
??_GCProcessExtensionTbl@@QAEPAXI@Z
??_GCProcessPatternTbl@@QAEPAXI@Z
??_GCPropertyBagEx@@QAEPAXI@Z
??_GCPropertySetStorage@@QAEPAXI@Z
??_GCPropertyStorage@@QAEPAXI@Z
??_GCPubDocFile@@QAEPAXI@Z
??_GCPubStream@@QAEPAXI@Z
??_GCPunkForRelease@@AAEPAXI@Z
??_GCROTItem@@QAEPAXI@Z
??_GCRefCache@@AAEPAXI@Z
??_GCRefExportCount@@UAEPAXI@Z
??_GCRefMutexSem@@QAEPAXI@Z
??_GCRemoteUnknown@@QAEPAXI@Z
??_GCRootPubDocFile@@QAEPAXI@Z
??_GCRotMonikerEnum@@QAEPAXI@Z
??_GCRpcChannelBuffer@@UAEPAXI@Z
??_GCRpcThread@@QAEPAXI@Z
??_GCRunningObjectTable@@QAEPAXI@Z
??_GCSSMappedStream@@QAEPAXI@Z
??_GCSTATPROPBAGArray@@QAEPAXI@Z
??_GCSafeRefCount@@UAEPAXI@Z
??_GCScmPatternTbl@@QAEPAXI@Z
??_GCServerCallMgr@CRpcChannelBuffer@@QAEPAXI@Z
??_GCServerSecurity@@QAEPAXI@Z
??_GCSessionMoniker@@UAEPAXI@Z
??_GCSharedMemoryBlock@@QAEPAXI@Z
??_GCSimpEnumSTATSTG@@QAEPAXI@Z
??_GCSimpStorage@@QAEPAXI@Z
??_GCSimpStorageOpen@@QAEPAXI@Z
??_GCSimpStream@@QAEPAXI@Z
??_GCSimpStreamOpen@@QAEPAXI@Z
??_GCSmAllocator@@QAEPAXI@Z
??_GCSpyTable@@QAEPAXI@Z
??_GCStackWalker@@QAEPAXI@Z
??_GCStackWalkerStack@@QAEPAXI@Z
??_GCStackWalkerSymbol@@QAEPAXI@Z
??_GCStatArray@@AAEPAXI@Z
??_GCStatData@@QAEPAXI@Z
??_GCStdEvent@@QAEPAXI@Z
??_GCStdIdentity@@UAEPAXI@Z
??_GCStdWrapper@@AAEPAXI@Z
??_GCSurrogateProcessActivator@@QAEPAXI@Z
??_GCSynchronizeContainer@@QAEPAXI@Z
??_GCTransactedStream@@QAEPAXI@Z
??_GCUpdate@@QAEPAXI@Z
??_GCVerifierTlsData@@QAEPAXI@Z
??_GCWrappedDocFile@@QAEPAXI@Z
??_GCallFrame@@QAEPAXI@Z
??_GContextInfo@@UAEPAXI@Z
??_GCpUnkList@@QAEPAXI@Z
??_GCpUnkMoniker@CClassCache@@QAEPAXI@Z
??_GCsCatInfo@@QAEPAXI@Z
??_GDISPATCH_CLIENT_FRAME@@EAEPAXI@Z
??_GDISPATCH_FRAME@@UAEPAXI@Z
??_GDISPATCH_INTERCEPTOR@@UAEPAXI@Z
??_GDISPATCH_SERVER_FRAME@@EAEPAXI@Z
??_GDefaultIBindStatusCallback@@UAEPAXI@Z
??_GGenericStream@@QAEPAXI@Z
??_GIFaceEntry@@QAEPAXI@Z
??_GIFinish@@UAEPAXI@Z
??_GINTERFACE_HELPER_CLSID@@UAEPAXI@Z
??_GInstanceInfo@@UAEPAXI@Z
??_GInstantiationInfo@@UAEPAXI@Z
??_GInterceptor@@EAEPAXI@Z
??_GLEGACY_FRAME@@MAEPAXI@Z
??_GLEGACY_INTERCEPTOR@@UAEPAXI@Z
??_GMD_INTERFACE@@AAEPAXI@Z
??_GMD_INTERFACE_CACHE@@QAEPAXI@Z
??_GMarshallingChannel@@QAEPAXI@Z
??_GOpaqueDataInfo@@QAEPAXI@Z
??_GSDDInfo@@QAEPAXI@Z
??_GScmReplyInfo@@UAEPAXI@Z
??_GScmRequestInfo@@UAEPAXI@Z
??_GSecurityInfo@@UAEPAXI@Z
??_GSerializer@@QAEPAXI@Z
??_GServerContextWorkData@@QAEPAXI@Z
??_GServerLocationInfo@@UAEPAXI@Z
??_GSpecialProperties@@QAEPAXI@Z
??_GTYPEINFOVTBL@@EAEPAXI@Z
??_H@YGXPAXIHP6EPAX0@Z@Z
??_I@YGXPAXIHP6EX0@Z@Z
?ANSIStmToStr@@YGJAAVCStmBufRead@@PAPADPAK@Z
?ANSIStrToStm@@YGJAAVCStmBufWrite@@PBD@Z
?ATHostActivatorGetClassObject@@YGJABU_GUID@@PAPAX@Z
?Abort@CMessageCall@@UAEXXZ
?AbortBegin@CAsyncStateMachine@@QAEJPAUIUnknown@@J@Z
?AckCancel@CAsyncCall@@UAEXXZ
?AckCancel@CClientCall@@UAEXXZ
?AcquireReaderLock@CRWLock@@QAIKK@Z
?AcquireWriterLock@CRWLock@@QAIKK@Z
?ActErrorPriority@@YGKJ@Z
?ActivateByContext@CProcessActivator@@EAGJPAVActivationPropertiesIn@@PAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@P81@AGJK1023@Z@Z
?ActivationAptCleanup@@YGXXZ
?ActivationBegins@CSurrogateProcessActivator@@EAGJXZ
?ActivationFails@CSurrogateProcessActivator@@EAGJXZ
?ActivationProcessCleanup@@YGXXZ
?ActivationProcessInit@@YGJXZ
?ActivationSucceeds@CSurrogateProcessActivator@@EAGJXZ
?Add@CChildInstanceList@@QAEXPAVPRevertable@@@Z
?Add@CContextList@@QAEXPAVCContext@@@Z
?Add@CContextPropList@@QAEHABU_GUID@@KPAUIUnknown@@@Z
?Add@CCtxPropHashTable@@QAEXPAVCObjectContext@@@Z
?Add@CCtxUUIDHashTable@@QAEXPAVCObjectContext@@@Z
?Add@CDWORDHashTable@@QAEXKKPAUSDWORDHashNode@@@Z
?Add@CDdeConnectionTable@@QAEJKGK@Z
?Add@CDwordBag@@QAEHK@Z
?Add@CExtHashTable@@QAEXKPBGPAUSExtHashNode@@@Z
?Add@CHashTable@@IAEXKPAUSHashChain@@@Z
?Add@CMonikerPtrBuf@@QAEJPAUIMoniker@@@Z
?Add@CMultiGUIDHashTable@@QAEXKABUSMultiGUIDKey@@PAUSMultiGUIDHashNode@@@Z
?Add@COIDTable@@QAEXPAVCIDObject@@@Z
?Add@CPIDTable@@QAEJPAVCIDObject@@@Z
?Add@CPSTable@@QAEXPAVCPolicySet@@@Z
?Add@CPtrBlock@@QAEXPAX@Z
?Add@CPtrCache@@QAEJPAX@Z
?Add@CSpyTable@@QAEHPAX@Z
?Add@CStringHashTable@@QAEXKPAUtagDUALSTRINGARRAY@@PAUSStringHashNode@@@Z
?Add@CUUIDHashTable@@QAEXKABU_GUID@@PAUSUUIDHashNode@@@Z
?Add@CUpdateList@@QAEPAVCUpdate@@QAUIMalloc@@PBVCDfName@@1KKPAVPTSetMember@@@Z
?Add@CVerifierStackData@@QAEJPAPAX@Z
?Add@CpUnkList@@QAEJPAUIUnknown@@@Z
?Add@HAS_INTERFACES@@QAEXABU1@@Z
?AddACEToStreamACL@@YGXPAUtagSTREAM_ACE@@PAUtagPCB@@@Z
?AddAccessList@CImpAccessControl@COAccessControl@@AAGJPAUtagSTREAM_ACE@@PAXKKK@Z
?AddBaseClassEntry@CClassEntry@CClassCache@@QAEXPAVCBaseClassEntry@2@@Z
?AddClient@@YGHPAPAXPAX1@Z
?AddConnection@CConnectionPoint@@UAGJPAUIProgressNotify@@PAK@Z
?AddConnection@CDefObject@@UAGKKK@Z
?AddContext@CCtxTable@@SGJPAVCObjectContext@@@Z
?AddCtxEntry@CStdWrapper@@QAEPAVCtxEntry@@PAVCPolicySet@@@Z
?AddCtxEntry@IFaceEntry@@QAEPAVCtxEntry@@PAVCPolicySet@@@Z
?AddDllAptEntry@CDllPathEntry@CClassCache@@QAEJPAVCDllAptEntry@2@@Z
?AddElement@CCache@@QAGJKGPAPAEPBGPAGPAUIUnknown@@PAPAU2@@Z
?AddElement@CCache@@QAGJKPAEGPAGPAUIUnknown@@PAPAU2@@Z
?AddEntry@CApartmentHashTable@@QAEJKAAK@Z
?AddEntry@CEndpointsTable@@QAEPAVCEndpointEntry@@GPAG0K@Z
?AddEntry@CProcessExtensionTbl@@AAEJABU_GUID@@PBGK@Z
?AddEntry@CRIFTable@@AAEJABU_GUID@@0KPAPAUtagRIFEntry@@@Z
?AddExtent@CExtentList@@QAEJPBU_MONIKEREXTENT@@@Z
?AddHydraSessionID@@YGXPAVActivationPropertiesIn@@@Z
?AddIPIDEntry@CStdMarshal@@AAEJPAVOXIDEntry@@PAU_GUID@@ABU3@PAVCCtxComChnl@@PAUIUnknown@@PAXPAPAUtagIPIDEntry@@@Z
?AddItem@?$CArray@VCCacheNode@@@@QAEKABVCCacheNode@@@Z
?AddItem@?$CArray@VCFormatEtc@@@@QAEKABVCFormatEtc@@@Z
?AddItem@?$CArray@VCStatData@@@@QAEKABVCStatData@@@Z
?AddMIDEntry@CMIDTable@@AAEJAB_KKPAUtagDUALSTRINGARRAY@@PAPAVMIDEntry@@@Z
?AddMarshal@CMarshalList@@QAEXPAV1@@Z
?AddMember@CTSSet@@QAEXPAVPTSetMember@@@Z
?AddOIDUnpinRequest@COIDTable@@QAEXPAVCIDObject@@@Z
?AddOXIDEntry@COXIDTable@@AAEJAB_KPAUtagOXID_INFO@@PAVMIDEntry@@KPAEKPAPAVOXIDEntry@@@Z
?AddOpaqueData@CComActivator@@UAGJPAUtagOpaqueData@@@Z
?AddOpaqueData@OpaqueDataInfo@@UAGJPAUtagOpaqueData@@@Z
?AddOrigClsCtx@@YGXPAVActivationPropertiesIn@@K@Z
?AddPartitionID@@YGXPAVActivationPropertiesIn@@@Z
?AddPolicy@CPolicySet@@UAGJKABU_GUID@@PAUIPolicy@@@Z
?AddRef@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAGKXZ
?AddRef@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAGKXZ
?AddRef@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAGKXZ
?AddRef@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGKXZ
?AddRef@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGKXZ
?AddRef@ActivationProperties@@UAGKXZ
?AddRef@ActivationProperties@@W3AGKXZ
?AddRef@ActivationProperties@@W7AGKXZ
?AddRef@ActivationPropertiesIn@@UAGKXZ
?AddRef@ActivationPropertiesIn@@W3AGKXZ
?AddRef@ActivationPropertiesIn@@W7AGKXZ
?AddRef@ActivationPropertiesIn@@WBKE@AGKXZ
?AddRef@ActivationPropertiesIn@@WBKI@AGKXZ
?AddRef@ActivationPropertiesIn@@WBKM@AGKXZ
?AddRef@ActivationPropertiesOut@@UAGKXZ
?AddRef@ActivationPropertiesOut@@W3AGKXZ
?AddRef@ActivationPropertiesOut@@W7AGKXZ
?AddRef@ActivationPropertiesOut@@WBKE@AGKXZ
?AddRef@ActivationPropertiesOut@@WBKI@AGKXZ
?AddRef@CAddrControl@@UAGKXZ
?AddRef@CAddrControl@@W3AGKXZ
?AddRef@CAddrExclusionList@@UAGKXZ
?AddRef@CAdvSinkImpl@CDefLink@@UAGKXZ
?AddRef@CAdvSinkImpl@CDefObject@@UAGKXZ
?AddRef@CAdviseSinkImpl@CDefClient@@UAGKXZ
?AddRef@CAdviseSinkImpl@COleCache@@UAGKXZ
?AddRef@CAggId@@UAGKXZ
?AddRef@CAsyncCall@@UAGKXZ
?AddRef@CAsyncCall@@W3AGKXZ
?AddRef@CAsyncConnection@@UAGKXZ
?AddRef@CAsyncUnknownMgr@@UAGKXZ
?AddRef@CAsyncUnknownMgr@@W3AGKXZ
?AddRef@CBaseMoniker@@UAGKXZ
?AddRef@CBaseMoniker@@W3AGKXZ
?AddRef@CBindCtx@@UAGKXZ
?AddRef@CBindStatusCallback@@UAGKXZ
?AddRef@CBindStatusCallback@@W3AGKXZ
?AddRef@CCacheDataImpl@COleCache@@UAGKXZ
?AddRef@CCacheUnkImpl@COleCache@@UAGKXZ
?AddRef@CCacheViewImpl@COleCache@@UAGKXZ
?AddRef@CChannelHandle@@QAEXXZ
?AddRef@CChannelObject@@UAGKXZ
?AddRef@CChannelObject@@W3AGKXZ
?AddRef@CChannelObject@@W7AGKXZ
?AddRef@CChannelObject@@WM@AGKXZ
?AddRef@CClassMoniker@@UAGKXZ
?AddRef@CClassMoniker@@W3AGKXZ
?AddRef@CClassMoniker@@W7AGKXZ
?AddRef@CClientCall@@UAGKXZ
?AddRef@CClientCall@@W3AGKXZ
?AddRef@CClientCallMgr@@UAGKXZ
?AddRef@CClientCallMgr@@W3AGKXZ
?AddRef@CClientCallMgr@@W7AGKXZ
?AddRef@CClientCallMgr@@WM@AGKXZ
?AddRef@CClipDataObject@@UAGKXZ
?AddRef@CComActivator@@UAGKXZ
?AddRef@CComActivator@@W3AGKXZ
?AddRef@CComActivator@@W7AGKXZ
?AddRef@CComApartment@@UAGKXZ
?AddRef@CComCat@@UAGKXZ
?AddRef@CComCat@@W3AGKXZ
?AddRef@CComCatalog@@UAGKXZ
?AddRef@CComCatalog@@W3AGKXZ
?AddRef@CComCatalog@@W7AGKXZ
?AddRef@CComCatalog@@WBA@AGKXZ
?AddRef@CComCatalog@@WBE@AGKXZ
?AddRef@CComCatalog@@WM@AGKXZ
?AddRef@CComClassInfo@@UAGKXZ
?AddRef@CComClassInfo@@W3AGKXZ
?AddRef@CComClassInfo@@W7AGKXZ
?AddRef@CComClassInfo@@WBA@AGKXZ
?AddRef@CComClassInfo@@WM@AGKXZ
?AddRef@CComNoClassInfo@@UAGKXZ
?AddRef@CComNoClassInfo@@W3AGKXZ
?AddRef@CComNoClassInfo@@W7AGKXZ
?AddRef@CComProcessInfo@@UAGKXZ
?AddRef@CComProcessInfo@@W3AGKXZ
?AddRef@CComProcessInfo@@W7AGKXZ
?AddRef@CComRegCatalog@@UAGKXZ
?AddRef@CComSxSCatalog@@UAGKXZ
?AddRef@CComSxSClassInfo@@UAGKXZ
?AddRef@CComSxSClassInfo@@W3AGKXZ
?AddRef@CComSxSClassInfo@@W7AGKXZ
?AddRef@CCompositeMonikerEnum@@UAGKXZ
?AddRef@CConnectionPoint@@UAGKXZ
?AddRef@CContextSwitcher@@UAGKXZ
?AddRef@CContinue@@UAGKXZ
?AddRef@CCtxCall@@UAGKXZ
?AddRef@CCtxChnl@@UAGKXZ
?AddRef@CCtxChnl@@W3AGKXZ
?AddRef@CCtxConnectionManager@@QAEKXZ
?AddRef@CCtxHook@@UAGKXZ
?AddRef@CDAHolder@@UAGKXZ
?AddRef@CDataObjectImpl@CDdeObject@@UAGKXZ
?AddRef@CDdeServerCallMgr@@UAGKXZ
?AddRef@CDdeServerCallMgr@@W3AGKXZ
?AddRef@CDdeServerCallMgr@@W7AGKXZ
?AddRef@CDebugChannelHook@@UAGKXZ
?AddRef@CDebugEventFire@@UAGKXZ
?AddRef@CDebugEventFireCF@@UAGKXZ
?AddRef@CDefLink@@UAGKXZ
?AddRef@CDefLink@@W3AGKXZ
?AddRef@CDefLink@@W7AGKXZ
?AddRef@CDefLink@@WBA@AGKXZ
?AddRef@CDefLink@@WM@AGKXZ
?AddRef@CDefObject@@UAGKXZ
?AddRef@CDefObject@@W3AGKXZ
?AddRef@CDefObject@@W7AGKXZ
?AddRef@CDefObject@@WBA@AGKXZ
?AddRef@CDefObject@@WM@AGKXZ
?AddRef@CDelayUnlockContainer@@UAGKXZ
?AddRef@CDestObject@@UAGKXZ
?AddRef@CDestObjectWrapper@@UAGKXZ
?AddRef@CDestObjectWrapper@@W3AGKXZ
?AddRef@CDllFnPtrMoniker@CClassCache@@UAGKXZ
?AddRef@CDllHost@@UAGKXZ
?AddRef@CDllHost@@W3AGKXZ
?AddRef@CDocfileUnmarshalFactory@@UAGKXZ
?AddRef@CDocfileUnmarshalFactory@@W3AGKXZ
?AddRef@CDragDataObject@@UAGKXZ
?AddRef@CDropTarget@@UAGKXZ
?AddRef@CDualStringArray@@QAEKXZ
?AddRef@CEMfObject@@UAGKXZ
?AddRef@CEnumCategories@@UAGKXZ
?AddRef@CEnumCategoriesOfClass@@UAGKXZ
?AddRef@CEnumClassesOfCategories@@UAGKXZ
?AddRef@CEnumContextProps@@UAGKXZ
?AddRef@CEnumFmt@@UAGKXZ
?AddRef@CEnumFormatEtc@@UAGKXZ
?AddRef@CEnumFormatEtcDataArray@@UAGKXZ
?AddRef@CEnumSTATDATA@@UAGKXZ
?AddRef@CEnumSTATPROPBAG@@UAGKXZ
?AddRef@CEnumSTATPROPSETSTG@@UAGKXZ
?AddRef@CEnumSTATPROPSTG@@UAGKXZ
?AddRef@CEnumStatData@@UAGKXZ
?AddRef@CEnumVerb@@EAGKXZ
?AddRef@CErrorChannelHook@@UAGKXZ
?AddRef@CErrorObject@@UAGKXZ
?AddRef@CErrorObject@@W3AGKXZ
?AddRef@CErrorObject@@W7AGKXZ
?AddRef@CExposedDocFile@@UAGKXZ
?AddRef@CExposedDocFile@@W3AGKXZ
?AddRef@CExposedDocFile@@WCA@AGKXZ
?AddRef@CExposedDocFile@@WCE@AGKXZ
?AddRef@CExposedDocFile@@WCI@AGKXZ
?AddRef@CExposedDocFile@@WCM@AGKXZ
?AddRef@CExposedDocFile@@WDA@AGKXZ
?AddRef@CExposedIterator@@UAGKXZ
?AddRef@CExposedIterator@@W3AGKXZ
?AddRef@CExposedStream@@UAGKXZ
?AddRef@CExposedStream@@W3AGKXZ
?AddRef@CExposedStream@@W7AGKXZ
?AddRef@CExposedStream@@WM@AGKXZ
?AddRef@CFileStream@@UAGKXZ
?AddRef@CFileStream@@W3AGKXZ
?AddRef@CFileStream@@W7AGKXZ
?AddRef@CFileStream@@WM@AGKXZ
?AddRef@CFillLockBytes@@UAGKXZ
?AddRef@CFillLockBytes@@W3AGKXZ
?AddRef@CFillLockBytes@@W7AGKXZ
?AddRef@CFmCtrlUnknown@@EAGKXZ
?AddRef@CFreeMarshaler@@UAGKXZ
?AddRef@CGIPMessageParam@@UAGKXZ
?AddRef@CGIPTable@@UAGKXZ
?AddRef@CGenObject@@UAGKXZ
?AddRef@CGlobalOptions@@UAGKXZ
?AddRef@CGlobalOptions@@W3AGKXZ
?AddRef@CIDObject@@UAGKXZ
?AddRef@CImpAccessControl@COAccessControl@@UAGKXZ
?AddRef@CImpAccessControl@COAccessControl@@W3AGKXZ
?AddRef@CInnerUnk@CComCat@@UAGKXZ
?AddRef@CInprocSystemActivator@@UAGKXZ
?AddRef@CInterfaceFromWindowProp@@UAGKXZ
?AddRef@CInternalUnk@CStdIdentity@@UAGKXZ
?AddRef@CInternalUnk@CStdIdentity@@W3AGKXZ
?AddRef@CLUAMoniker@@UAGKXZ
?AddRef@CLUAMoniker@@W3AGKXZ
?AddRef@CLUAMoniker@@WBE@AGKXZ
?AddRef@CLUAMoniker@@WBI@AGKXZ
?AddRef@CLocalMachineNames@@UAGKXZ
?AddRef@CMREInnerUnknown@@UAGKXZ
?AddRef@CManualResetEvent@@UAGKXZ
?AddRef@CManualResetEvent@@W3AGKXZ
?AddRef@CMarshalImplPStream@@UAGKXZ
?AddRef@CMemBytes@@UAGKXZ
?AddRef@CMemStm@@UAGKXZ
?AddRef@CMfObject@@UAGKXZ
?AddRef@CMonikerFactory@@UAGKXZ
?AddRef@CMonikerFactory@@W3AGKXZ
?AddRef@CNFFMappedStream@@UAGKXZ
?AddRef@CNFFTreeMutex@@UAGKXZ
?AddRef@CNdrStream@@UAGKXZ
?AddRef@CNoEnum@@UAGKXZ
?AddRef@CNtfsEnumSTATSTG@@UAGKXZ
?AddRef@CNtfsStorage@@UAGKXZ
?AddRef@CNtfsStorage@@W3AGKXZ
?AddRef@CNtfsStorage@@W7AGKXZ
?AddRef@CNtfsStorageForPropSetStg@@UAGKXZ
?AddRef@CNtfsStream@@UAGKXZ
?AddRef@CNtfsStream@@W3AGKXZ
?AddRef@CNullWalker@@UAGKXZ
?AddRef@COAHolder@@UAGKXZ
?AddRef@COAccessControl@@UAGKXZ
?AddRef@COLEDragDropHelper@@UAGKXZ
?AddRef@CObjServer@@UAGKXZ
?AddRef@CObjectContext@@UAGKXZ
?AddRef@CObjectContext@@W3AGKXZ
?AddRef@CObjectContext@@W7AGKXZ
?AddRef@CObjectContext@@WBA@AGKXZ
?AddRef@CObjectContext@@WBE@AGKXZ
?AddRef@CObjectContext@@WBI@AGKXZ
?AddRef@CObjectContext@@WM@AGKXZ
?AddRef@COleCache@@UAGKXZ
?AddRef@COleCache@@W3AGKXZ
?AddRef@COleCache@@W7AGKXZ
?AddRef@COleClientSiteImpl@CDefClient@@UAGKXZ
?AddRef@COleItemContainerImpl@CDdeObject@@UAGKXZ
?AddRef@COleObjectImpl@CDdeObject@@UAGKXZ
?AddRef@CPackagerMoniker@@UAGKXZ
?AddRef@CPersistStgImpl@CDdeObject@@UAGKXZ
?AddRef@CPipePSFactory@@UAGKXZ
?AddRef@CPipeProxyImp@@UAGKXZ
?AddRef@CPointerMoniker@@UAGKXZ
?AddRef@CPointerMoniker@@W3AGKXZ
?AddRef@CPointerMoniker@@WBE@AGKXZ
?AddRef@CPolicySet@@UAGKXZ
?AddRef@CPrivDragDrop@@UAGKXZ
?AddRef@CPrivUnknown@CAsyncUnknownMgr@@UAGKXZ
?AddRef@CPrivUnknown@CClientCallMgr@@UAGKXZ
?AddRef@CPrivUnknown@CDefLink@@UAGKXZ
?AddRef@CPrivUnknown@CDefObject@@UAGKXZ
?AddRef@CPropertyBagEx@@UAGKXZ
?AddRef@CPropertyBagEx@@W3AGKXZ
?AddRef@CPropertySetStorage@@UAGKXZ
?AddRef@CPropertyStorage@@UAGKXZ
?AddRef@CProxyManagerImpl@CDdeObject@@UAGKXZ
?AddRef@CPunkForRelease@@UAGKXZ
?AddRef@CRefMutexSem@@QAGKXZ
?AddRef@CRemoteUnknown@@UAGKXZ
?AddRef@CRotMonikerEnum@@UAGKXZ
?AddRef@CRpcCall@@UAGKXZ
?AddRef@CRpcCall@@W3AGKXZ
?AddRef@CRpcCall@@W7AGKXZ
?AddRef@CRpcChannelBuffer@@UAGKXZ
?AddRef@CRpcChannelBuffer@@W3AGKXZ
?AddRef@CRpcHelper@@UAGKXZ
?AddRef@CRpcOptions@@UAGKXZ
?AddRef@CRpcStubBufferImpl@CDdeObject@@UAGKXZ
?AddRef@CRunningObjectTable@@UAGKXZ
?AddRef@CRunningObjectTable@@W3AGKXZ
?AddRef@CSCInnerUnknown@@UAGKXZ
?AddRef@CSSMappedStream@@UAGKXZ
?AddRef@CSTInnerUnknown@@UAGKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@UAGKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@W3AGKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@W7AGKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@WM@AGKXZ
?AddRef@CServerSecurity@@UAGKXZ
?AddRef@CServerSecurity@@W3AGKXZ
?AddRef@CServerSecurity@@W7AGKXZ
?AddRef@CSessionMoniker@@UAGKXZ
?AddRef@CSessionMoniker@@W3AGKXZ
?AddRef@CSessionMoniker@@WBE@AGKXZ
?AddRef@CSimpEnumSTATSTG@@UAGKXZ
?AddRef@CSimpStorage@@UAGKXZ
?AddRef@CSimpStorage@@W3AGKXZ
?AddRef@CSimpStorage@@W7AGKXZ
?AddRef@CSimpStream@@UAGKXZ
?AddRef@CSimpStream@@W3AGKXZ
?AddRef@CSmAllocator@@UAGKXZ
?AddRef@CStackWalker@@UAGKXZ
?AddRef@CStackWalkerStack@@UAGKXZ
?AddRef@CStackWalkerSymbol@@UAGKXZ
?AddRef@CStatArray@@QAGKXZ
?AddRef@CStaticWrapper@@UAGKXZ
?AddRef@CStdClassFactory@@UAGKXZ
?AddRef@CStdEvent@@UAGKXZ
?AddRef@CStdEvent@@W3AGKXZ
?AddRef@CStdIdentity@@UAGKXZ
?AddRef@CStdIdentity@@W3AGKXZ
?AddRef@CStdIdentity@@WIE@AGKXZ
?AddRef@CStdIdentity@@WIM@AGKXZ
?AddRef@CStdIdentity@@WJI@AGKXZ
?AddRef@CStdIdentity@@WJM@AGKXZ
?AddRef@CStdWrapper@@UAGKXZ
?AddRef@CStreamOnMessage@@UAGKXZ
?AddRef@CSurrogateProcessActivator@@UAGKXZ
?AddRef@CSurrogateProcessActivator@@WBM@AGKXZ
?AddRef@CSurrogateProcessActivator@@WCA@AGKXZ
?AddRef@CSurrogateProcessActivator@@WCE@AGKXZ
?AddRef@CSynchronizeContainer@@UAGKXZ
?AddRef@CTrackingCompositeMoniker@@UAGKXZ
?AddRef@CTrackingFileMoniker@@UAGKXZ
?AddRef@CUnknownImpl@CDdeObject@@UAGKXZ
?AddRef@CUnknownImpl@CDefClient@@UAGKXZ
?AddRef@CUrlMonWrapper@@UAGKXZ
?AddRef@CallFrame@@UAGKXZ
?AddRef@CallFrame@@W3AGKXZ
?AddRef@ComPsClassFactory@@UAGKXZ
?AddRef@ComPsClassFactory@@W3AGKXZ
?AddRef@ContextInfo@@UAGKXZ
?AddRef@ContextInfo@@W3AGKXZ
?AddRef@ContextInfo@@WBE@AGKXZ
?AddRef@CpUnkMoniker@CClassCache@@UAGKXZ
?AddRef@CsCatInfo@@UAGKXZ
?AddRef@DDE_CHANNEL@@UAGKXZ
?AddRef@DDE_CHANNEL@@W3AGKXZ
?AddRef@DefaultIBindStatusCallback@@UAGKXZ
?AddRef@DefaultIBindStatusCallback@@W3AGKXZ
?AddRef@GenericStream@@UAGKXZ
?AddRef@GenericStream@@W3AGKXZ
?AddRef@InprocActpropsUnmarshaller@@UAGKXZ
?AddRef@InstanceInfo@@UAGKXZ
?AddRef@InstanceInfo@@W3AGKXZ
?AddRef@InstantiationInfo@@UAGKXZ
?AddRef@InstantiationInfo@@W3AGKXZ
?AddRef@Interceptor@@EAGKXZ
?AddRef@Interceptor@@G3AGKXZ
?AddRef@Interceptor@@G7AGKXZ
?AddRef@Interceptor@@GBE@AGKXZ
?AddRef@Interceptor@@GM@AGKXZ
?AddRef@InterfaceWalkerFree@@UAGKXZ
?AddRef@LEGACY_FRAME@@UAGKXZ
?AddRef@LEGACY_INTERCEPTOR@@UAGKXZ
?AddRef@LEGACY_INTERCEPTOR@@W3AGKXZ
?AddRef@LEGACY_INTERCEPTOR@@W7AGKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBA@AGKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBE@AGKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBM@AGKXZ
?AddRef@LEGACY_INTERCEPTOR@@WM@AGKXZ
?AddRef@MarshallingChannel@@UAGKXZ
?AddRef@MarshallingChannel@@W3AGKXZ
?AddRef@OpaqueDataInfo@@UAGKXZ
?AddRef@OpaqueDataInfo@@W3AGKXZ
?AddRef@OutSerializer@ActivationPropertiesOut@@UAGKXZ
?AddRef@POSTRELRIFREF@@UAGKXZ
?AddRef@PTSetMember@@QAEXXZ
?AddRef@SSimpleWalker@@UAGKXZ
?AddRef@ScmReplyInfo@@UAGKXZ
?AddRef@ScmReplyInfo@@W3AGKXZ
?AddRef@ScmRequestInfo@@UAGKXZ
?AddRef@ScmRequestInfo@@W3AGKXZ
?AddRef@SecurityInfo@@UAGKXZ
?AddRef@SecurityInfo@@W3AGKXZ
?AddRef@SecurityInfo@@W7AGKXZ
?AddRef@ServerLocationInfo@@UAGKXZ
?AddRef@ServerLocationInfo@@W3AGKXZ
?AddRef@SpecialProperties@@UAGKXZ
?AddRef@SpecialProperties@@W3AGKXZ
?AddRefInterface@OAUTIL@@QAEJABU_GUID@@PAPAX@Z
?AddRefOnProcess@CSurrogateProcessActivator@@UAGKXZ
?AddRefServerProcess@CClassCache@@SGKXZ
?AddRequestedIIDs@ActivationPropertiesIn@@UAGJKPAU_GUID@@@Z
?AddRequestedIIDs@InstantiationInfo@@QAEJKPAU_GUID@@@Z
?AddReservedItem@?$CArray@VCCacheNode@@@@QAEHABVCCacheNode@@K@Z
?AddSerializableIfs@ActivationProperties@@QAEJPAVSerializableProperty@@@Z
?AddSuppliedRefs@CStdMarshal@@AAEXPAUtagSTDOBJREF@@PAUtagIPIDEntry@@@Z
?AddSynchronize@CSynchronizeContainer@@UAGJPAUISynchronize@@@Z
?AddToApartmentChain@CLSvrClassEntry@CClassCache@@QAEJXZ
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QAEJPAV?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@@Z
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QAEJPAV?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@@Z
?AddToCache@MD_INTERFACE@@QAEJPAUMD_INTERFACE_CACHE@@@Z
?AddToFreeList@CRpcThreadCache@@QAEXPAVCRpcThread@@@Z
?AddToFreeList@CtxEntry@@QAEXPAPAV1@K@Z
?AddToOIDList@CIPIDTable@@QAEXPAUtagIPIDEntry@@@Z
?AddToOUPReqList@COIDTable@@CGXPAUSHashChain@@@Z
?AddXSMember@CPubDocFile@@QAEXPAVPTSetMember@@0K@Z
?AddpUnk@CCtxConnectionManager@@QAEJPAUIUnknown@@@Z
?AddrExclListInitialize2@CAddrExclusionList@@QAEJPAUIEnumString@@K@Z
?AddrExclListInitialize@CAddrExclusionList@@QAEJKPAPAG@Z
?Address@CStackWalkerSymbol@@UAG_KXZ
?AdjustToken@CChannelHandle@@QAEJKPAHPAPAX@Z
?AdvCancel@CAsyncCall@@UAEJXZ
?AdvCancel@CClientCall@@UAEJXZ
?Advance@SerializedPropertyReader@@QAEJK@Z
?Advise@CAsyncConnection@@UAGJPAUIUnknown@@PAK@Z
?Advise@CDAHolder@@UAGJPAUIDataObject@@PAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?Advise@CDataAdviseCache@@QAEJPAUIDataObject@@PAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?Advise@CDefLink@@UAGJPAUIAdviseSink@@PAK@Z
?Advise@CDefObject@@UAGJPAUIAdviseSink@@PAK@Z
?Advise@COAHolder@@UAGJPAUIAdviseSink@@PAK@Z
?Advise@COleObjectImpl@CDdeObject@@UAGJPAUIAdviseSink@@PAK@Z
?AdviseData@CDefClient@@QAEJPAUHWND__@@GPAXPAH@Z
?AdviseOn@CDdeObject@@AAEJGH@Z
?AdviseStdItems@CDefClient@@QAEJPAUHWND__@@GPAXPAH@Z
?AgeOutEntries@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QAEXXZ
?AgeOutEntries@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QAEXXZ
?Aggregate@CObjectContext@@UAGJPAUIUnknown@@@Z
?AllButFirst@CCompositeMoniker@@QAEPAUIMoniker@@XZ
?AllButLast@CCompositeMoniker@@QAEPAUIMoniker@@XZ
?Alloc@CErrorSmAllocator@@UAGPAXK@Z
?Alloc@CSmAllocator@@UAGPAXK@Z
?Alloc@CallFrame@@QAEPAXI@Z
?Alloc@CallFrame@@QAEPAXIH@Z
?Alloc@DeserializeHelper@@AAEJPAPAXK@Z
?AllocAndCopy@@YGPAXKPAXPAJ@Z
?AllocAndCopyBstr@DeserializeHelper@@AAEJPAPAGPBGK@Z
?AllocArray@DeserializeHelper@@AAEJPAPAXKK@Z
?AllocBuffer@CCtxCall@@QAEPAXXZ
?AllocBuffer@CallFrame@@QAEPAXI@Z
?AllocCallFromList@CAsyncCall@@SGPAVCMessageCall@@XZ
?AllocCount@DeserializeHelper@@AAEJK@Z
?AllocDdeChannel@CDdeObject@@QAEHPAPAVDDE_CHANNEL@@H@Z
?AllocEntry@CGIPTable@@AAEJPAPAUtagGIPEntry@@PAK@Z
?AllocEntry@CInternalPageAllocator@@QAEPAUtagPageEntry@@H@Z
?AllocEntry@CPageAllocator@@QAEPAUtagPageEntry@@H@Z
?AllocOIDs@OXIDEntry@@QAEJPAKPA_KK1@Z
?AllocSafeArray@DeserializeHelper@@AAEJPAPAUtagSAFEARRAY@@GKPBUtagSAFEARRAYBOUND@@K@Z
?AllocStack@CallFrame@@QAEJIH@Z
?Allocate@BstrDestroyer@DeserializeHelper@@EAEPAXK@Z
?Allocate@CCoTaskAllocator@@UAEPAXK@Z
?Allocate@CStreamCache@@QAEJPAVCFat@@KPAK@Z
?Allocate@SafeArrayDestroyer@DeserializeHelper@@EAEPAXK@Z
?AllocatePoolEntry@EventPoolEntry@@SGPAV1@H@Z
?AllowAsyncDocfile@@YGHXZ
?AllowForegroundTransfer@CStdIdentity@@UAGJPAX@Z
?AllowForegroundTransfer@CStdMarshal@@QAEJPAX@Z
?AllowServerORPCDebugging@@YGHPAVCMessageCall@@@Z
?AmIComplusProcess@CSurrogateActivator@@SGHPAPAU_GUID@@@Z
?ApartmentDllGetClassObject@@YGJABU_GUID@@0PAPAX@Z
?ApartmentUninitialize@@YGHH@Z
?AppInvoke@@YGJPAVCMessageCall@@PAVCRpcChannelBuffer@@PAUIRpcStubBuffer@@PAX3PAUtagIPIDEntry@@PAULocalThis@@@Z
?AppInvokeExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@PAXABU_GUID@@K@Z
?AppInvokeExceptionFilterWithMethodAddress@@YGJPAU_EXCEPTION_POINTERS@@PAXABU_GUID@@K1PBD@Z
?Append@CUpdateList@@QAEXPAVCUpdate@@@Z
?AppendAddress@CStackWalkerSymbol@@SGXPAGK_K@Z
?AppendDisplacement@CStackWalkerSymbol@@SGXPAGK_K@Z
?ApplyChanges@CDocFile@@QAEJAAVCUpdateList@@@Z
?AreNoClients@@YGHPAX@Z
?AreServicesRequired@CSurrogateProcessActivator@@UAGJXZ
?AspectsUpdated@COleCache@@AAEXK@Z
?AssertEmpty@CPageAllocator@@QAEXXZ
?AssignSerializedInterface@GenericStream@@QAEXPAPAUtagInterfaceData@@@Z
?AsyncFromSync@CRIFTable@@QAEJABU_GUID@@PAU2@@Z
?AsyncGetClassBits@CUrlMonWrapper@@UAGJABU_GUID@@PBG1KK1PAUIBindCtx@@K0K@Z
?AsyncReceive@CRpcChannelBuffer@@QAEJPAUtagRPCOLEMESSAGE@@KPAK@Z
?AsyncSend@CRpcChannelBuffer@@QAEJPAUtagRPCOLEMESSAGE@@PAK@Z
?AsyncStubInvoke@@YGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@PAVCStdIdentity@@PAUIRpcChannelBuffer@@PAUIRpcStubBuffer@@PAUtagIPIDEntry@@PAKPAJ@Z
?Attach@CStackWalker@@UAGJPAX@Z
?AttemptActivation@CProcessActivator@@EAGJPAVActivationPropertiesIn@@PAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@P81@AGJK1023@ZK@Z
?AttemptAgeOut@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QAEHK@Z
?AttemptAgeOut@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QAEHK@Z
?AttemptToPoolEntry@CRWLock@@AAEHXZ
?Base64ToIStream@@YGJPAGIPAPAUIStream@@@Z
?BeginCommit@CDeltaList@@QAEXPAVCTransactedStream@@@Z
?BeginCommit@CTransactedStream@@QAEJK@Z
?BeginCommit@CWrappedDocFile@@QAEJK@Z
?BeginCommit@PTSetMember@@QAEJK@Z
?BeginCommitFromChild@CDirectStream@@QAEJ_KPAVCDeltaList@@PAVCTransactedStream@@@Z
?BeginCommitFromChild@CDocFile@@QAEJAAVCUpdateList@@KPAVCWrappedDocFile@@@Z
?BeginCommitFromChild@CTransactedStream@@QAEJ_KPAVCDeltaList@@PAV1@@Z
?BeginCommitFromChild@CWrappedDocFile@@QAEJAAVCUpdateList@@KPAV1@@Z
?BeginCommitFromChild@PDocFile@@QAEJAAVCUpdateList@@KPAVCWrappedDocFile@@@Z
?BeginCommitFromChild@PSStream@@QAEJ_KPAVCDeltaList@@PAVCTransactedStream@@@Z
?BeginCopyOnWrite@CMStream@@QAEJK@Z
?BeginSession@CDebugEventFire@@UAGJABU_GUID@@PBG@Z
?BeginSurrogateTimeout@CSurrogateProcessActivator@@EAGJXZ
?BeginUpdates@CDefLink@@AAEXXZ
?BeginUsingLatestStream@CNFFMappedStream@@AAEXXZ
?BeginUsingUpdateStream@CNFFMappedStream@@AAEXXZ
?Begin_AddRef@CAsyncUnknownMgr@@UAGJXZ
?Begin_QueryInterface@CAsyncUnknownMgr@@UAGJABU_GUID@@@Z
?Begin_QueryMultipleInterfaces@CAsyncUnknownMgr@@UAGJKPAUtagMULTI_QI@@@Z
?Begin_QueryRemoteInterfaces@CStdMarshal@@QAEXGPAU_GUID@@PAUtagQICONTEXT@@@Z
?Begin_Release@CAsyncUnknownMgr@@UAGJXZ
?Begin_RemQIAndUnmarshal1@CStdMarshal@@AAEXGPAU_GUID@@PAUtagQICONTEXT@@@Z
?Begin_RemQIAndUnmarshal2@CStdMarshal@@AAEXGPAU_GUID@@PAUtagQICONTEXT@@@Z
?Begin_RemQIAndUnmarshal@CStdMarshal@@AAEXGPAU_GUID@@PAUtagQICONTEXT@@@Z
?BindIfRunning@CDefLink@@UAGJXZ
?BindSpeedFromBindCtx@@YGKPAUIBindCtx@@@Z
?BindToObject@CBaseMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CClassMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CCompositeMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CDllFnPtrMoniker@CClassCache@@UAGJABU_GUID@@PAPAX@Z
?BindToObject@CFileMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CItemMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CLUAMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CPackagerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CPointerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CSessionMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToObject@CpUnkMoniker@CClassCache@@UAGJABU_GUID@@PAPAX@Z
?BindToObjectNoSwitch@CDllFnPtrMoniker@CClassCache@@UAGJABU_GUID@@PAPAX@Z
?BindToObjectNoSwitch@CpUnkMoniker@CClassCache@@UAGJABU_GUID@@PAPAX@Z
?BindToSCMProxy@CRpcResolver@@AAEJH@Z
?BindToSource@CDefLink@@UAGJKPAUIBindCtx@@@Z
?BindToStorage@CBaseMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CClassMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CCompositeMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CFileMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CItemMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CLUAMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CPackagerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CPointerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BindToStorage@CSessionMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@ABU_GUID@@PAPAX@Z
?BlockFn@CCliModalLoop@@QAEJPAPAXKPAK@Z
?BlockUpCommit@@YGKK@Z
?BmDuplicate@@YGPAUHBITMAP__@@PAU1@PAKPAUtagBITMAP@@@Z
?BmToPres@@YGJPAXPAVCPres@@@Z
?BuildConsolidationControlSectList@CMStream@@QAEJPAPAKPAK@Z
?BuildIndirectIndexArray@@YGKKPBUtagPROPVARIANT@@PAK@Z
?BuildRotData@@YGJPAUIBindCtx@@PAUIMoniker@@PAEKPAK@Z
?BuildRotDataFromDisplayName@@YGJPAUIBindCtx@@PAUIMoniker@@PAEKPAK@Z
?BuildTree@CSimpStorage@@IAEKPAVCDirEntry@@KK@Z
?BulkUpdateOIDs@CRpcResolver@@QAEJKPAU__MIDL_ILocalObjectExporter_0004@@PAJKPAU__MIDL_ILocalObjectExporter_0003@@KPA_KKPAU__MIDL_ILocalObjectExporter_0002@@@Z
?ByValue@CallFrame@@QBEHABUPARAM_ATTRIBUTES@@PBEH@Z
?ByteSwapLong@@YGXAAK@Z
?ByteSwapThat@@YGXKPATWireThat@@@Z
?ByteSwapThis@@YGXKPATWireThis@@@Z
?CAccessControlCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CActivationPropertiesInCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CActivationPropertiesOutCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CAddrControlCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CAntiMonikerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CB2CCh@CPropertySetStream@@QBEKK@Z
?CCAddRefServerProcess@@YGKXZ
?CCCleanUpDllsForApartment@@YGJXZ
?CCCleanUpDllsForProcess@@YGJXZ
?CCCleanUpLocalServersForApartment@@YGJXZ
?CCFreeUnused@@YGJK@Z
?CCGetClassInformationForDde@@YGHABU_GUID@@PAU_tagDdeClassInfo@@@Z
?CCGetClassInformationFromKey@@YGHPAU_tagDdeClassInfo@@@Z
?CCGetClassObject@@YGJABUACTIVATION_PROPERTIES@@@Z
?CCGetOrCreateApartment@@YGJABUACTIVATION_PROPERTIES@@PAUDLL_INSTANTIATION_PROPERTIES@@PAK@Z
?CCGetOrLoadClass@@YGJABUACTIVATION_PROPERTIES@@@Z
?CCGetTreatAs@@YGJABU_GUID@@AAU1@@Z
?CCICallback@CProcessActivator@@EAGJKPAUIUnknown@@PAVActivationPropertiesIn@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CCLockServerForActivation@@YGJXZ
?CCRegisterServer@@YGJABU_GUID@@PAUIUnknown@@KKPAK@Z
?CCReleaseCatalogObjects@@YGXXZ
?CCReleaseServerProcess@@YGKXZ
?CCResumeProcessClassObjects@@YGJXZ
?CCRevoke@@YGJK@Z
?CCSetDdeServerWindow@@YGHKPAUHWND__@@@Z
?CCSuspendProcessClassObjects@@YGJXZ
?CCUnlockServerForActivation@@YGXXZ
?CCh2CB@CPropertySetStream@@QBEKK@Z
?CComActivatorCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CComCatCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CComCatCSCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CComCatalogCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CCompositeMonikerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CContextSwitcherCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CErrorObjectCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CFToSafeArray@@YGJPBUtagCLIPDATA@@PAPAUtagSAFEARRAY@@@Z
?CFreeThreadedMarshalerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CGIPTableCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CGlobalOptionsCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CInprocActpropsUnmarshallerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CItemMonikerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CLSIDFromAtom@@YGHGPAU_GUID@@@Z
?CLSIDFromAtomWithTreatAs@@YGJPAGPAU_GUID@@PAW4CNVTYP@@@Z
?CLSIDFromStringA@@YGJPADPAU_GUID@@@Z
?CLocalMachineNamesCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CMalloc_AddRef@@YGKPAUIMalloc@@@Z
?CMalloc_QueryInterface@@YGJPAUIMalloc@@ABU_GUID@@PAPAX@Z
?CMalloc_Release@@YGKPAUIMalloc@@@Z
?CManualResetEventCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?COLEDragDropHelperCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CObjectContextCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CPackagerMonikerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CPointerMonikerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CRetailMalloc_Alloc@@YGPAXPAUIMalloc@@K@Z
?CRetailMalloc_DidAlloc@@YGHPAUIMalloc@@PAX@Z
?CRetailMalloc_Free@@YGXPAUIMalloc@@PAX@Z
?CRetailMalloc_GetSize@@YGKPAUIMalloc@@PAX@Z
?CRetailMalloc_HeapMinimize@@YGXPAUIMalloc@@@Z
?CRetailMalloc_Realloc@@YGPAXPAUIMalloc@@PAXK@Z
?CRpcHelperCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CSpyMalloc_Alloc@@YGPAXPAUIMalloc@@K@Z
?CSpyMalloc_DidAlloc@@YGHPAUIMalloc@@PAX@Z
?CSpyMalloc_Free@@YGXPAUIMalloc@@PAX@Z
?CSpyMalloc_GetSize@@YGKPAUIMalloc@@PAX@Z
?CSpyMalloc_HeapMinimize@@YGXPAUIMalloc@@@Z
?CSpyMalloc_Realloc@@YGPAXPAUIMalloc@@PAXK@Z
?CStackWalkerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CStdEventCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CSynchronizeContainerCF_CreateInstance@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?Cache@COleCache@@UAGJPAUtagFORMATETC@@KPAK@Z
?CacheAccess@@YGXU_LUID@@H@Z
?CacheAccessCheck@@YGHU_LUID@@PAH@Z
?CacheCreateThread@@YGJP6GKPAX@Z0PAK@Z
?CacheSegment@CStreamCache@@AAEXPAUSSegment@@@Z
?CacheUnmarkedSect@CDIFat@@QAEXKKK@Z
?CalcFileMonikerHash@@YGJPAGKPAK@Z
?CalcSASize@@YGJKPAK@Z
?CalcSafeArrayElements@@YGJKPBUtagSAFEARRAYBOUND@@PAK@Z
?CalculateColorTableSize@@YGHIIIIPAK0@Z
?CalculateSpinCount@@YGKXZ
?CallAccessCheck@@YGHPAXPAU_SECURITY_DESCRIPTOR@@KPAH@Z
?CallBackExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@PAX@Z
?CallCompleted@CAsyncCall@@QAEXPAH@Z
?CallCompleted@CAsyncCall@@UAEXJ@Z
?CallCompleted@CClientCall@@UAEXJ@Z
?CallFinished@CAsyncCall@@UAEXXZ
?CallFinished@CChannelObject@@AAEXXZ
?CallFinished@CClientCall@@UAEXXZ
?CallIndirect@Interceptor@@UAGJPAJKPAXPAK@Z
?CallIndirect@LEGACY_INTERCEPTOR@@UAGJPAJKPAXPAK@Z
?CallInitCommonControls@@YGHXZ
?CallInitializers@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?CallPending@CChannelObject@@AAEXXZ
?CallSent@CAsyncCall@@QAEJXZ
?CallTheResolver@CComApartment@@AAEJXZ
?CallbackFuncForDraw@CEMfObject@@QAGHPAUHDC__@@PAUtagHANDLETABLE@@PBUtagENHMETARECORD@@HJ@Z
?CallbackFuncForDraw@CMfObject@@QAEHPAUHDC__@@PAUtagHANDLETABLE@@PAUtagMETARECORD@@H@Z
?CallbackFuncForGetColorSet@CMfObject@@QAEHPAUHDC__@@PAUtagHANDLETABLE@@PAUtagMETARECORD@@H@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QAEHK@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QAEHK@Z
?CanBeCollected@CCollectable@CClassCache@@QAEHXZ
?CanCallBack@CDdeObject@@AAEHPAH@Z
?CanDispatch@CAsyncCall@@UAEJXZ
?CanDispatch@CClientCall@@UAEJXZ
?CanMakeOutCall@@YGJKABU_GUID@@PAUtagRPCOLEMESSAGE@@@Z
?CanRetrieveOle2FromOle1@@YGHI@Z
?CanRunDown@CStdMarshal@@QAEEK@Z
?CanRundownOIDs@CComApartment@@QAEXKQA_KQAW4tagRUNDOWN_RESULT@@@Z
?CanShareParameter@@YG?AUHAS_INTERFACES@@PBU_MIDL_STUB_DESC@@ABUPARAM_DESCRIPTION@@ABUPARAM_ATTRIBUTES@@@Z
?CanUnload_rl@CDllPathEntry@CClassCache@@QAEJK@Z
?CanWrapperMarshal@CStdWrapper@@QAEHKK@Z
?Cancel@CAsyncCall@@UAEJHK@Z
?Cancel@CAsyncCall@@UAGJK@Z
?Cancel@CChannelObject@@UAGJK@Z
?Cancel@CClientCall@@UAEJHK@Z
?Cancel@CClientCall@@UAGJK@Z
?Cancel@CClientCallMgr@@UAGJK@Z
?Cancel@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?Cancel@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?Cancel@CServerCallMgr@CRpcChannelBuffer@@UAGJK@Z
?Cancel@CServerSecurity@@UAGJK@Z
?Cancel@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?CancelPendingCalls@@YGXPAUHWND__@@@Z
?CancelTheCall@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEXPAUIUnknown@@K@Z
?CancelTheCall@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEXPAUIUnknown@@K@Z
?CancelTheCall@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEXPAUIUnknown@@K@Z
?CatalogDllMain@@YGHPAUHINSTANCE__@@KPAX@Z
?CbParam@CallFrame@@QBEKKABUPARAM_DESCRIPTION@@@Z
?ChainIPIDEntry@CStdMarshal@@AAEXPAUtagIPIDEntry@@@Z
?ChangeData@CEMfObject@@AAEJPAUHENHMETAFILE__@@H@Z
?ChangeData@CGenObject@@AAEJPAXH@Z
?ChangeData@CMfObject@@AAEJPAXH@Z
?ChangeItem@CDdeObject@@AAEXPAD@Z
?ChangeOwner@@YGXPAX@Z
?ChangeRef@CRefCache@@QAEXPAUtagIPIDEntry@@HPAPAUtagREMINTERFACEREF@@PAG12@Z
?ChangeTopic@CDdeObject@@AAEJPAD@Z
?ChangeUsageCount@CGIPTable@@AAEJPAUtagGIPEntry@@J@Z
?ChangeXs@CPubDocFile@@IAEXKK@Z
?CheckAccess@@YGJPAXPAUtagIPIDEntry@@0HH0@Z
?CheckAccessControl@@YGJXZ
?CheckAcl@@YGJPAXH00@Z
?CheckAndSetKeepBuffer@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJXZ
?CheckAndSetKeepBuffer@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJXZ
?CheckAndSetKeepBuffer@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJXZ
?CheckApt@CDllFnPtrMoniker@CClassCache@@UAGJXZ
?CheckApt@CpUnkMoniker@CClassCache@@UAGJXZ
?CheckBitmapBits@@YGHQAUtagBITMAPINFOHEADER@@KK@Z
?CheckContextAfterCall@@YGHAAVCOleTls@@PAVCObjectContext@@@Z
?CheckCopyTo@CExposedDocFile@@AAEJXZ
?CheckCrossContextAggregation@CServerContextActivator@@EAGJPAVActivationPropertiesIn@@PAUIUnknown@@@Z
?CheckDownloadRegistrySettings@@YGKXZ
?CheckFlagsOnCreateOrOpen@@YGJHK@Z
?CheckForClsid@@YGJPAUIUserToken@@PBU_GUID@@PAH@Z
?CheckForProgID@@YGJPAUIUserToken@@PBGPAH@Z
?CheckForRefresh@CComCatalog@@CGJPAUIUserToken@@PAUIUnknown@@PAVCCache@@@Z
?CheckForWaiters@CComApartment@@AAEXXZ
?CheckForceHKLMForAppID@CComRegCatalog@@AAGJPAUHKEY__@@PAH@Z
?CheckForceHKLMForCLSID@CComRegCatalog@@AAGJPAUHKEY__@@0PAH@Z
?CheckIfCatChanged@@YGXPC_JPAH@Z
?CheckInitDde@@YGJH@Z
?CheckInprocClass@CClientContextActivator@@EAGJPAUIActivationPropertiesIn@@PAUDLL_INSTANTIATION_PROPERTIES@@AAHPAPAUILocalSystemActivator@@@Z
?CheckLrpc@@YGJXZ
?CheckMapView@CFileStream@@AAEJK@Z
?CheckMemoryGate@@YGJPAUIUnknown@@W4tagResourceGateId@@@Z
?CheckName@@YGJPBG@Z
?CheckNotComPlus@CDllFnPtrMoniker@CClassCache@@UAGJXZ
?CheckNotComPlus@CpUnkMoniker@CClassCache@@UAGJXZ
?CheckNotify@CCache@@AAGJPAH@Z
?CheckObjactAccess@@YGHXZ
?CheckOffset@@YGJIII@Z
?CheckRefresh@@YGJPAUIUserToken@@HPAU_KEY_NAME_INFORMATION@@PAU_KEY_FULL_INFORMATION@@PAH@Z
?CheckSafeArrayDims@@YGJK@Z
?CheckSegment@CStreamCache@@AAEHKUSCacheEntry@@PAK11@Z
?CheckSignature@@YGJPAE@Z
?CheckStatus@CRpcResolver@@CGJJ@Z
?CheckTymedCFCombination@@YGJPAUtagFORMATETC@@@Z
?CheckTypeInfo@@YGJPAUITypeInfo@@PAPAU1@1PAGPAHPAU_GUID@@1@Z
?CheckUninitDde@@YGXH@Z
?CheckVarType@@YGJG@Z
?CheckVarTypeToDeserialize@@YGJGHHH@Z
?CheckVarTypeToSerialize@@YGJGHHH@Z
?ChkIfLocalOID@@YGHAAUtagOBJREF@@PAPAVCStdIdentity@@H@Z
?CleanAllMemoryResources@@YGXPAUtagACL_DESCRIPTOR@@PAUtagPCB@@@Z
?CleanROTForApartment@@YGXXZ
?CleanStack@CMfObject@@AAEXXZ
?CleanUpDllsForApartment@CClassCache@@SGJXZ
?CleanUpDllsForProcess@CClassCache@@SGJXZ
?CleanUpLocalServersForApartment@CClassCache@@SGJXZ
?CleanUpStreamACL@@YGXPAUtagSTREAM_ACL@@@Z
?Cleanup@CApartmentHashTable@@QAEXXZ
?Cleanup@CAsyncCall@@SGXXZ
?Cleanup@CAuthInfo@@SGXXZ
?Cleanup@CCallTable@@QAEXXZ
?Cleanup@CClientCall@@SGXXZ
?Cleanup@CContextPropList@@SGXXZ
?Cleanup@CCtxCall@@SGXXZ
?Cleanup@CCtxChnl@@SGXXZ
?Cleanup@CCtxComChnl@@SGXXZ
?Cleanup@CCtxTable@@SGXXZ
?Cleanup@CDebugEventFire@@QAEXXZ
?Cleanup@CEndpointsTable@@QAEXXZ
?Cleanup@CEventCache@@QAEXXZ
?Cleanup@CGIPTable@@QAEXXZ
?Cleanup@CHashTable@@UAEXP6GXPAUSHashChain@@@Z@Z
?Cleanup@CIDObject@@SGXXZ
?Cleanup@CIPIDTable@@QAEXXZ
?Cleanup@CInternalPageAllocator@@QAEXXZ
?Cleanup@CMIDTable@@QAEXXZ
?Cleanup@CNameHashTable@@QAEXXZ
?Cleanup@COIDTable@@SGXXZ
?Cleanup@COXIDTable@@QAEXXZ
?Cleanup@CObjectContext@@SGXXZ
?Cleanup@CPIDTable@@SGXXZ
?Cleanup@CPSTable@@SGXXZ
?Cleanup@CPageAllocator@@QAEXXZ
?Cleanup@CPolicySet@@SGXXZ
?Cleanup@CPubMappedStream@@QAEXXZ
?Cleanup@CRIFTable@@QAEXXZ
?Cleanup@CROIDTable@@QAEXXZ
?Cleanup@CRWLock@@QAEXXZ
?Cleanup@CRpcResolver@@QAEXXZ
?Cleanup@CSSL@@SGXXZ
?Cleanup@CServerSecurity@@SGXXZ
?Cleanup@CStdWrapper@@SGXXZ
?Cleanup@CtxEntry@@SGXXZ
?Cleanup@EventPoolEntry@@QAEXXZ
?CleanupAccessList@CImpAccessControl@COAccessControl@@AAGXHPAUtagSTREAM_ACE@@PAXKK@Z
?CleanupApartment@CRunningObjectTable@@QAEJK@Z
?CleanupChannelHooks@@YGXXZ
?CleanupCtxTableEntry@@YGXPAUSHashChain@@@Z
?CleanupExtEntry@@YGXPAUSHashChain@@@Z
?CleanupFn@CDefLink@@EAEXXZ
?CleanupFn@CDefObject@@EAEXXZ
?CleanupFn@COleCache@@EAEXXZ
?CleanupFn@CRefExportCount@@EAEXXZ
?CleanupIdentity@@YGXPAUSHashChain@@@Z
?CleanupLeakedDomainStack@@YGJAAVCOleTls@@PAVCObjectContext@@@Z
?CleanupLocalState@InstanceInfo@@QAEXXZ
?CleanupMIDEntry@@YGXPAUSHashChain@@@Z
?CleanupPolicySets@@YGXPAUSHashChain@@@Z
?CleanupProperties@CEnumContextProps@@QAEXXZ
?CleanupProxy@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEXPAPAEPAPAUIUnknown@@PAPAUAsyncIPipeByte@@PAPAUISynchronize@@@Z
?CleanupProxy@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEXPAPAJPAPAUIUnknown@@PAPAUAsyncIPipeLong@@PAPAUISynchronize@@@Z
?CleanupProxy@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEXPAPANPAPAUIUnknown@@PAPAUAsyncIPipeDouble@@PAPAUISynchronize@@@Z
?CleanupRIFEntry@@YGXPAUSHashChain@@@Z
?CleanupRegOIDs@@YGXPAUSHashChain@@@Z
?CleanupRemoting@CComApartment@@QAEJXZ
?CleanupRemoting@OXIDEntry@@QAEJXZ
?CleanupServices@CSurrogateProcessActivator@@UAGJXZ
?CleanupStatArray@CEnumSTATPROPSETSTG@@AAEXXZ
?CleanupStrong@CRefCache@@AAEXPAPAUtagREMINTERFACEREF@@PAG@Z
?CleanupTables@CObjectContext@@QAEXXZ
?CleanupThreadCallObjects@@YGXPAUtagSOleTlsData@@@Z
?CleanupTlsMap@@YGXH@Z
?CleanupTlsState@@YGXPAUtagSOleTlsData@@H@Z
?CleanupWeak@CRefCache@@AAEXPAPAUtagREMINTERFACEREF@@PAG@Z
?Clear@ActivationPropertiesOut@@UAGJXZ
?ClearContextFlags@CObjectContext@@UAGJK@Z
?ClearEntry@CCallTable@@AAEPAUICancelMethodCalls@@PAU2@@Z
?ClearFreeList@CRpcThreadCache@@QAEXXZ
?ClearOutSerializer@OutSerializer@ActivationPropertiesOut@@QAEJXZ
?ClientBulkUpdateOIDWithPingServer@CROIDTable@@CGJKK@Z
?ClientCleanupFinish@CDllHost@@AAEXPAX@Z
?ClientCleanupStart@CDllHost@@AAEPAXXZ
?ClientDeRegisterOIDFromPingServer@CROIDTable@@QAEJPAVCRefCache@@H@Z
?ClientFillBuffer@CCtxHook@@UAGXABU_GUID@@0PAKPAX@Z
?ClientFillBuffer@CDebugChannelHook@@UAGXABU_GUID@@0PAKPAX@Z
?ClientFillBuffer@CErrorChannelHook@@UAGXABU_GUID@@0PAKPAX@Z
?ClientFindIRCEntry@CRefCache@@AAEPAUIRCEntry@@ABU_GUID@@@Z
?ClientGetBuffer@CRpcChannelBuffer@@IAEJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?ClientGetSize@@YGKPAKPAVCMessageCall@@@Z
?ClientGetSize@CCtxHook@@UAGXABU_GUID@@0PAK@Z
?ClientGetSize@CDebugChannelHook@@UAGXABU_GUID@@0PAK@Z
?ClientGetSize@CErrorChannelHook@@UAGXABU_GUID@@0PAK@Z
?ClientNotify@@YGJPATWireThat@@KPAPAXKJPAVCMessageCall@@@Z
?ClientNotify@CCtxHook@@UAGXABU_GUID@@0KPAXKJ@Z
?ClientNotify@CDebugChannelHook@@UAGXABU_GUID@@0KPAXKJ@Z
?ClientNotify@CErrorChannelHook@@UAGXABU_GUID@@0KPAXKJ@Z
?ClientRegisterOIDWithPingServer@CROIDTable@@QAEJABU_GUID@@AB_K1PAPAVCRefCache@@@Z
?ClientResolveOXID@COXIDTable@@QAEJAB_KPAUtagDUALSTRINGARRAY@@PAPAVOXIDEntry@@@Z
?ClientResolveOXID@CRpcResolver@@QAEJAB_KPAUtagOXID_INFO@@PA_KPAUtagDUALSTRINGARRAY@@PAKPAPAEPAG@Z
?ClientToDelegate@CDataAdviseCache@@AAEJKPAK@Z
?ClipReleaseCaptureForDrag@@YGXXZ
?ClipSetCaptureForDrag@@YGJPAVCDragOperation@@@Z
?ClipboardInitialize@@YGHXZ
?ClipboardProcessUninitialize@@YGXXZ
?ClipboardUninitialize@@YGXXZ
?ClipfmtToStm@@YGJAAVCStmBufWrite@@KKW4TXTTYPE@@@Z
?Clone@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGJPAPAUIEnumCATEGORYINFO@@@Z
?Clone@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGJPAPAUIEnumGUID@@@Z
?Clone@CAddrExclusionList@@UAGJPAPAUIEnumString@@@Z
?Clone@CCompositeMonikerEnum@@UAGJPAPAUIEnumMoniker@@@Z
?Clone@CEnumCategories@@UAGJPAPAUIEnumCATEGORYINFO@@@Z
?Clone@CEnumCategoriesOfClass@@UAGJPAPAUIEnumGUID@@@Z
?Clone@CEnumClassesOfCategories@@UAGJPAPAUIEnumGUID@@@Z
?Clone@CEnumContextProps@@UAGJPAPAUIEnumContextProps@@@Z
?Clone@CEnumFmt10@@UAGJPAPAUIEnumFORMATETC@@@Z
?Clone@CEnumFmt@@UAGJPAPAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtc@@UAGJPAPAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtcDataArray@@UAGJPAPAUIEnumFORMATETC@@@Z
?Clone@CEnumSTATDATA@@UAGJPAPAUIEnumSTATDATA@@@Z
?Clone@CEnumSTATPROPBAG@@UAGJPAPAUIEnumSTATPROPBAG@@@Z
?Clone@CEnumSTATPROPSETSTG@@UAGJPAPAUIEnumSTATPROPSETSTG@@@Z
?Clone@CEnumSTATPROPSTG@@UAGJPAPAUIEnumSTATPROPSTG@@@Z
?Clone@CEnumStatData@@UAGJPAPAUIEnumSTATDATA@@@Z
?Clone@CEnumVerb@@EAGJPAPAUIEnumOLEVERB@@@Z
?Clone@CExpParameterValidate@@SGJPAPAUIEnumSTATSTG@@@Z
?Clone@CExpParameterValidate@@SGJPAPAUIStream@@@Z
?Clone@CExposedIterator@@UAGJPAPAUIEnumSTATSTG@@@Z
?Clone@CExposedStream@@UAGJPAPAUIStream@@@Z
?Clone@CLocalMachineNames@@UAGJPAPAUIEnumString@@@Z
?Clone@CMemStm@@UAGJPAPAUIStream@@@Z
?Clone@CNdrStream@@UAGJPAPAUIStream@@@Z
?Clone@CNoEnum@@UAGJPAPAUIEnumUnknown@@@Z
?Clone@CNtfsEnumSTATSTG@@UAGJPAPAUIEnumSTATSTG@@@Z
?Clone@CNtfsStream@@UAGJPAPAUIStream@@@Z
?Clone@CRotMonikerEnum@@UAGJPAPAUIEnumMoniker@@@Z
?Clone@CSimpEnumSTATSTG@@UAGJPAPAUIEnumSTATSTG@@@Z
?Clone@CSimpStream@@UAGJPAPAUIStream@@@Z
?Clone@CStreamOnMessage@@UAGJPAPAUIStream@@@Z
?Clone@GenericStream@@QAEPAV1@XZ
?Clone@GenericStream@@UAGJPAPAUIStream@@@Z
?Close@?$AutoBlob@V?$Auto@U_LBLOB@@@Windows@@@Rtl@Windows@@QAEXXZ
?Close@CDefLink@@UAGJK@Z
?Close@CDefObject@@UAGJK@Z
?Close@CExposedStream@@UAGXPAJ@Z
?Close@CNFFMappedStream@@UAGXPAJ@Z
?Close@COleObjectImpl@CDdeObject@@UAGJK@Z
?Close@CPerContext@@QAEXXZ
?Close@CPropertySetStream@@QAEXPAJ@Z
?Close@CPubMappedStream@@QAEXPAJ@Z
?Close@CSSMappedStream@@UAGXPAJ@Z
?CloseCatalog@CSurrogateProcessActivator@@UAGJXZ
?CloseSharedFileMapping@@YGXPAX0@Z
?CoRegisterDisconnectCallback@@YGJPAUIUnknown@@KPAUIDisconnectSink@@PAXPAPAX@Z
?CoStackWalk64@@YGHKPAX0PAU_tagSTACKFRAME64@@0P6GH0_K0KPAK@ZP6GPAX02@ZP6G_K02@ZP6G_K00PAU_tagADDRESS64@@@Z@Z
?CoSymCleanup@@YGXPAX@Z
?CoSymGetModuleInfoW64@@YGHPAX_KPAU_IMAGEHLP_MODULEW64@@@Z
?CoSymGetSymFromAddr64@@YGHPAX_KPA_KPAU_IMAGEHLP_SYMBOL64@@@Z
?CoSymInitialize@@YGHPAXPADH@Z
?CoSymLoadModule64@@YG_KPAX0PAD1_KK@Z
?CoSymLock@@YGXXZ
?CoSymSetOptions@@YGKK@Z
?CoSymUnlock@@YGXXZ
?CoUnregisterDisconnectCallback@@YGJPAX@Z
?CoVrfBreakOnCallBackException@@YGHPAU_EXCEPTION_POINTERS@@PAX@Z
?CoVrfBreakOnException@@YGHPAU_EXCEPTION_POINTERS@@PAXPBU_GUID@@K@Z
?CoVrfBreakOnExceptionWithMethodAddress@@YGHPAU_EXCEPTION_POINTERS@@PAXPBU_GUID@@KPBD@Z
?CoVrfCaptureStackTrace@@YGXHHPAPAX@Z
?CoVrfCheckSecuritySettings@@YGXXZ
?CoVrfCheckThreadState@@YGJPAX@Z
?CoVrfDllMainCheck@@YGXXZ
?CoVrfFreeMemObjectChecks@@YGXPAXK0@Z
?CoVrfFreeMemVtblChecks@@YGXPAXK0@Z
?CoVrfFreeMemoryChecks@@YGJPAXK0@Z
?CoVrfGetThreadState@@YGJPAPAX@Z
?CoVrfHoldingNoLocks@@YGXXZ
?CoVrfNotifyCFSuccessWithNULL@@YGXPAUIClassFactory@@ABU_GUID@@1J@Z
?CoVrfNotifyCoInit@@YGXXZ
?CoVrfNotifyCoUninit@@YGXXZ
?CoVrfNotifyEnterServiceDomain@@YGXXZ
?CoVrfNotifyExtraLeaveServiceDomain@@YGXXZ
?CoVrfNotifyExtraOleUninit@@YGXXZ
?CoVrfNotifyExtraUninit@@YGXXZ
?CoVrfNotifyGCOSuccessWithNULL@@YGXPBGABU_GUID@@1J@Z
?CoVrfNotifyLeakedInits@@YGXXZ
?CoVrfNotifyLeakedOleInits@@YGXXZ
?CoVrfNotifyLeakedServiceDomain@@YGXXZ
?CoVrfNotifyLeaveServiceDomain@@YGXXZ
?CoVrfNotifyOleInit@@YGXXZ
?CoVrfNotifyOleUninit@@YGXXZ
?CoVrfNotifySmuggledProxy@@YGXABU_GUID@@KK@Z
?CoVrfNotifySmuggledWrapper@@YGXABU_GUID@@KPAVCStdWrapper@@@Z
?CoVrfReleaseThreadState@@YGXPAX@Z
?CoVrfStopTrackingObject@@YGXPAX@Z
?CoVrfStopTrackingVtbl@@YGXPAXPAPAUVtblSplayNode@@@Z
?CoVrfTrackObject@@YGPAXPAX@Z
?CoVrfTrackVtbl@@YGPAXPAXPAUVtblSplayNode@@@Z
?Collect@CClassCache@@SGJK@Z
?ComDllGetClassObject@@YGJABU_GUID@@0PAPAX@Z
?ComInvoke@@YGJPAVCMessageCall@@@Z
?ComInvokeWithLockAndIPID@@YGJPAVCMessageCall@@PAUtagIPIDEntry@@@Z
?ComPlusEnabled@CComCatalog@@CGHXZ
?ComSignal@@YGKPAX@Z
?ComSignalNA@@YGKPAX@Z
?Commit@CExposedDocFile@@UAGJK@Z
?Commit@CExposedStream@@UAGJK@Z
?Commit@CMemStm@@UAGJK@Z
?Commit@CNdrStream@@UAGJK@Z
?Commit@CNtfsStorage@@UAGJK@Z
?Commit@CNtfsStorageForPropSetStg@@UAGJK@Z
?Commit@CNtfsStream@@UAGJK@Z
?Commit@CPropertyBagEx@@QAEJK@Z
?Commit@CPropertyStorage@@UAGJK@Z
?Commit@CPubDocFile@@QAEJK@Z
?Commit@CPubStream@@QAEJK@Z
?Commit@CSharedMemoryBlock@@QAEJK@Z
?Commit@CSimpStorage@@UAGJK@Z
?Commit@CSimpStream@@UAGJK@Z
?Commit@CStreamOnMessage@@UAGJK@Z
?Commit@GenericStream@@UAGJK@Z
?Commit@Serializer@@QAEJXZ
?CommitTimestamps@CRootPubDocFile@@QAEXK@Z
?CommonPrefixWith@CAntiMoniker@@EAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CBaseMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CClassMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CCompositeMoniker@@EAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CFileMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CItemMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CLUAMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CObjrefMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CPackagerMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CPointerMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonPrefixWith@CSessionMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?CommonRelease@CObjectContext@@QAEKXZ
?Compare@CCtxPropHashTable@@UAEHPBXPAUSHashChain@@H@Z
?Compare@CCtxPropHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CCtxUUIDHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CDPEHashTable@CClassCache@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CDWORDHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CExtHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CMultiGUIDHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CNameHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@COIDHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CPIDHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CPSHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CStringHashTable@@UAEHPBXPAUSHashChain@@K@Z
?Compare@CUUIDHashTable@@UAEHPBXPAUSHashChain@@K@Z
?CompareAssocKey@CMapKeyToValue@@ABEHPAUCAssoc@1@PAXI@Z
?CompareNCharacters@@YGHPAG0K@Z
?Complete@CClassEntry@CClassCache@@QAEJPAH@Z
?CompleteDrop@CDragOperation@@QAEJXZ
?CompleteObjRef@@YGJAAUtagOBJREF@@AAUtagOXID_INFO@@ABU_GUID@@PAH@Z
?CompleteTreatAs@CClassEntry@CClassCache@@QAEXPAV12@@Z
?ComposeWith@CAntiMoniker@@EAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CBaseMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CClassMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CCompositeMoniker@@EAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CFileMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CItemMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CLUAMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CPackagerMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CPointerMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWith@CSessionMoniker@@UAGJPAUIMoniker@@HPAPAU2@@Z
?ComposeWithEnum@@YGJPAUIMoniker@@PAUIEnumMoniker@@PAPAU1@@Z
?ComputeConformance@CallFrame@@QAEKPAEPBEH@Z
?ComputeEffectiveAccess@@YGJPAUtagACL_DESCRIPTOR@@PAUtagSTREAM_ACL@@PAXPAK@Z
?ComputeVariance@CallFrame@@QAEXPAEPBEPAK2H@Z
?Connect@CDdeServerCallMgr@@UAGJPAUIUnknown@@@Z
?Connect@CPipeProxyImp@@UAGJPAUIRpcChannelBuffer@@@Z
?Connect@CProxyManagerImpl@CDdeObject@@UAGJU_GUID@@ABU3@@Z
?Connect@CRpcStubBufferImpl@CDdeObject@@UAGJPAUIUnknown@@@Z
?Connect@CServerCallMgr@CRpcChannelBuffer@@UAGJPAUIUnknown@@@Z
?ConnectCliIPIDEntry@CStdMarshal@@AAEJPAUtagSTDOBJREF@@PAVOXIDEntry@@PAUtagIPIDEntry@@@Z
?ConnectSrvIPIDEntry@CStdMarshal@@AAEJPAUtagIPIDEntry@@PAUIUnknown@@@Z
?Consolidate@CMStream@@QAEJXZ
?Consolidate@CPubDocFile@@IAEJK@Z
?ConsolidateStream@CMStream@@QAEJPAVCDirEntry@@KK@Z
?ContextCallHelper@CApartmentActivator@@EAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@P6GJPAX@ZPAVCObjectContext@@@Z
?ContextCallback@CContextSwitcher@@UAGJP6GJPAUtagComCallData@@@Z0ABU_GUID@@HPAUIUnknown@@@Z
?ContextCallback@CObjectContext@@UAGJP6GJPAUtagComCallData@@@Z0ABU_GUID@@HPAUIUnknown@@@Z
?ContextInvoke@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAUIRpcStubBuffer@@PAUtagIPIDEntry@@PAK@Z
?ContextInvoke@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAUIRpcStubBuffer@@PAUtagIPIDEntry@@PAK@Z
?ContextInvoke@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAUIRpcStubBuffer@@PAUtagIPIDEntry@@PAK@Z
?ContextOrApartmentCleanup@CGIPTable@@AAEXH@Z
?ContextSelector@CApartmentActivator@@EAGJPAUIActivationPropertiesIn@@AAHAAPAVCObjectContext@@@Z
?Contig@CFat@@QAEJPAUSSegment@@HKKPAK@Z
?Contig@CStreamCache@@QAEJKHPAUSSegment@@KPAK@Z
?ControlTracingForProcess@CRpcResolver@@QAEJKH@Z
?Convert10TargetDevice@@YGJPAXPAPAUtagDVTARGETDEVICE@@@Z
?Convert20TargetDevice@@YGJPBUtagDVTARGETDEVICE@@PAPAX@Z
?ConvertILB@CMStream@@AAEJK@Z
?ConvertInternalStream@CExposedDocFile@@AAEJPAV1@@Z
?ConvertMactPict@@YGPAUHMETAFILE__@@PAX@Z
?ConvertSectOffset@@YG_KKFG@Z
?ConvertStringToLCID@CComCat@@CGJPAKPAG@Z
?ConvertToFullHWND@@YGPAUHWND__@@PAU1@@Z
?ConvertToUnicode@@YGJPBDPAPAG@Z
?ConvertVariantToPropInfo@@YGXPAVCPropertySetStream@@KKQBUtagPROPSPEC@@QAKQBUtagPROPVARIANT@@PAUtagPROPERTY_INFORMATION@@PAKPAJ@Z
?Copy@CAuthInfo@@SGJPAUtagSOLE_AUTHENTICATION_LIST@@PAPAU2@K@Z
?Copy@CCtxComChnl@@QAEPAV1@PAVOXIDEntry@@ABU_GUID@@1@Z
?Copy@CallFrame@@UAGJW4__MIDL_ICallFrame_0003@@PAUICallFrameWalker@@PAPAUICallFrame@@@Z
?Copy@DISPATCH_CLIENT_FRAME@@UAGJW4__MIDL_ICallFrame_0003@@PAUICallFrameWalker@@PAPAUICallFrame@@@Z
?Copy@DISPATCH_SERVER_FRAME@@UAGJW4__MIDL_ICallFrame_0003@@PAUICallFrameWalker@@PAPAUICallFrame@@@Z
?Copy@OAUTIL@@QAEPAGPAG@Z
?CopyConformantArrayPriv@CallFrame@@QAEXPAEPAPAEPBEH@Z
?CopyDocFileToIStorage@CExposedDocFile@@AAEJPAVPDocFile@@PAUIStorage@@PAPAGK@Z
?CopyDualStringArray@@YGJPAUtagDUALSTRINGARRAY@@PAPAU1@@Z
?CopyEmbeddedPointers@CallFrame@@QAEXPAE0PBEH@Z
?CopyEmbeddedRepeatPointers@CallFrame@@QAEPBEPAE0PBEH@Z
?CopyFormatEtcDataArray@@YGXPAUFORMATETCDATAARRAY@@0IH@Z
?CopyFrom@FRAME_Invoke@@QAEXABUFRAME_RemoteInvoke@@@Z
?CopyLStreamToLStream@CPubDocFile@@IAEJPAUILockBytes@@0@Z
?CopyMsgForRetry@@YGJPAUtagRPCOLEMESSAGE@@PAVIInternalChannelBuffer@@J@Z
?CopyMsgForRetry@CAptRpcChnl@@AAEJPAUtagRPCOLEMESSAGE@@@Z
?CopyOpaqueData@OpaqueDataInfo@@QAEJPAUtagOpaqueData@@0KH@Z
?CopyPage@CMSFPageTable@@QAEJPAVCPagedVector@@PAVCMSFPage@@PAVCBasedMSFPagePtr@@@Z
?CopyPathFromUnicodeExtent@@YGJPAU_MONIKEREXTENT@@AAPAGAAG@Z
?CopyPathToUnicodeExtent@@YGJPAGKAAPAU_MONIKEREXTENT@@@Z
?CopyProxy@CChannelObject@@UAGJPAUIUnknown@@PAPAU2@@Z
?CopyProxy@CClientCallMgr@@UAGJPAUIUnknown@@PAPAU2@@Z
?CopyProxy@CClientSecurity@@UAGJPAUIUnknown@@PAPAU2@@Z
?CopyRecord@OAUTIL@@AAEJPAX0PAUITypeInfo@@H@Z
?CopyRecordAndAlloc@OAUTIL@@AAEJPAUIRecordInfo@@PAXPAPAXH@Z
?CopyRecordField@OAUTIL@@AAEJPAE0PAUtagTYPEDESC@@PAUITypeInfo@@H@Z
?CopySStreamToIStream@CExposedDocFile@@AAEJPAVPSStream@@PAUIStream@@@Z
?CopySStreamToSStream@@YGJPAVPSStream@@0@Z
?CopySTATPROPSTG@@YGJKPAUtagSTATPROPSTG@@PBU1@@Z
?CopySecDesc@@YGJPAU_SECURITY_DESCRIPTOR@@PAPAU1@@Z
?CopySect@CMStream@@AAEJKKFFPBEPAK@Z
?CopyString@@YGPADPBD@Z
?CopyString@@YGPAGPBG@Z
?CopyString@CDfName@@QAEXPBG@Z
?CopyStringArray@@YGJPAUtagDUALSTRINGARRAY@@0PAPAU1@@Z
?CopyTimesFrom@PTimeEntry@@QAEJPAV1@@Z
?CopyTo@CDocFile@@QAEJPAV1@KPAPAG@Z
?CopyTo@CExpParameterValidate@@SGJKPBU_GUID@@PAPAGPAUIStorage@@@Z
?CopyTo@CExpParameterValidate@@SGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@CExposedDocFile@@UAGJKPBU_GUID@@PAPAGPAUIStorage@@@Z
?CopyTo@CExposedStream@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@CMemStm@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@CNdrStream@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@CNtfsStorage@@UAGJKPBU_GUID@@PAPAGPAUIStorage@@@Z
?CopyTo@CNtfsStorageForPropSetStg@@UAGJKPBU_GUID@@PAPAGPAUIStorage@@@Z
?CopyTo@CNtfsStream@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@CSimpStorage@@UAGJKPBU_GUID@@PAPAGPAUIStorage@@@Z
?CopyTo@CSimpStream@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@CStreamOnMessage@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@GenericStream@@UAGJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2@Z
?CopyTo@Serializer@@QAEJPAV1@KK@Z
?CopyToMQI@@YGXKPAUtagSQIResult@@PAPAUtagMULTI_QI@@PAK@Z
?CopyToWorker@CExposedStream@@AAEJPAUIStream@@T_ULARGE_INTEGER@@PAT3@2PAVCSafeSem@@@Z
?CopyWorker@CallFrame@@QAEXPAEPAPAEPBEH@Z
?Count@CCompositeMoniker@@QAEJPAK@Z
?Count@CEnumContextProps@@UAGJPAK@Z
?CountContexts@CContextList@@QAEKXZ
?CountContexts@CDFBasis@@QAEKXZ
?CountFree@CFat@@AAEJPAK@Z
?CountRefs@CDdeServerCallMgr@@UAGKXZ
?CountRefs@CRpcStubBufferImpl@CDdeObject@@UAGKXZ
?CountRefs@CServerCallMgr@CRpcChannelBuffer@@UAGKXZ
?CountSectType@CFat@@QAEJPAKKKK@Z
?CountSegments@@YGHPAG@Z
?Create@CAntiMoniker@@SGPAUIMoniker@@K@Z
?Create@CAntiMoniker@@SGPAV1@XZ
?Create@CBindCtx@@SGPAUIBindCtx@@XZ
?Create@CClassEntry@CClassCache@@SGJABU_GUID@@KPAUIComClassInfo@@AAPAV12@@Z
?Create@CClipDataObject@@SGJPAPAUIDataObject@@PAUFORMATETCDATAARRAY@@@Z
?Create@CCompositeMoniker@@SGPAV1@PAUIMoniker@@0@Z
?Create@CCompositeMonikerEnum@@SGPAUIEnumMoniker@@HPAVCCompositeMoniker@@@Z
?Create@CDDEServer@@SGJPAGABU_GUID@@PAU_tagDdeClassInfo@@PAPAUHWND__@@GW4CNVTYP@@@Z
?Create@CDdeObject@@SGPAUIUnknown@@PAU2@ABU_GUID@@KGPAGPAPAV1@H@Z
?Create@CDefClient@@SGJPAVCDDEServer@@PAUIUnknown@@PAGHHHPAPAUHWND__@@@Z
?Create@CDefLink@@SGPAUIUnknown@@PAU2@@Z
?Create@CDefObject@@SGPAUIUnknown@@PAU2@ABU_GUID@@KPAUIClassFactory@@@Z
?Create@CFileMoniker@@SGPAV1@PBGGG@Z
?Create@CFrameFilter@@SGJPAUtagOLEMENU@@PAUHMENU__@@PAUHWND__@@2PAUIOleInPlaceFrame@@PAUIOleInPlaceActiveObject@@@Z
?Create@CItemMoniker@@SGPAV1@PBG0@Z
?Create@CMachineNamesHelper@@SGJPAVCDualStringArray@@PAPAV1@@Z
?Create@CMemBytes@@SGPAV1@PAX@Z
?Create@CMemStm@@SGPAV1@PAXPAVCRefMutexSem@@@Z
?Create@CObjrefMoniker@@SGPAV1@PAUIUnknown@@@Z
?Create@CPackagerMoniker@@SGJPAGPAUIMoniker@@HPAPAU2@@Z
?Create@CPlex@@SGPAU1@AAPAU1@II@Z
?Create@CPointerMoniker@@SGPAV1@PAUIUnknown@@@Z
?Create@CPropertySetStorage@@UAGJABU_GUID@@PBU2@KKPAPAUIPropertyStorage@@@Z
?Create@CPropertyStorage@@QAEJPAUIStorage@@ABU_GUID@@PBU3@KK@Z
?Create@CPropertyStorage@@QAEJPAUIStream@@ABU_GUID@@PBU3@KK@Z
?Create@CRunningObjectTable@@SGHXZ
?CreateAndLoadPresObj@CCacheNode@@AAEJH@Z
?CreateAnsiFromUnicode@@YGPADPBG@Z
?CreateArray@?$CArray@VCCacheNode@@@@SGPAV1@KK@Z
?CreateArray@?$CArray@VCFormatEtc@@@@SGPAV1@KK@Z
?CreateArray@?$CArray@VCStatData@@@@SGPAV1@KK@Z
?CreateCall@CStdIdentity@@UAGJABU_GUID@@PAUIUnknown@@0PAPAU3@@Z
?CreateChannel@CStdMarshal@@AAEJPAVOXIDEntry@@KABU_GUID@@1PAPAVCCtxComChnl@@@Z
?CreateClientHandler@@YGJABU_GUID@@0KPAPAVCStdIdentity@@@Z
?CreateClipDataObjectFromPersistedData@@YGJPAPAUIDataObject@@@Z
?CreateCommonDdeWindow@@YGJXZ
?CreateCompareBuffer@CContextPropList@@QAEHXZ
?CreateDataAdviseCache@CDataAdviseCache@@SGJPAPAV1@@Z
?CreateDdeClientHwnd@@YGPAUHWND__@@XZ
?CreateDdeProxy@@YGPAUIUnknown@@PAU1@ABU_GUID@@@Z
?CreateDdeSrvrWindow@@YGJABU_GUID@@GPAPAUHWND__@@HGW4CNVTYP@@@Z
?CreateDelegate@CDefObject@@AAEJXZ
?CreateDlg@CHlprDialog@@UAEPAUHWND__@@PAUHINSTANCE__@@PBGPAU2@@Z
?CreateDllClassEntry_rl@CClassEntry@CClassCache@@QAEJKABUACTIVATION_PROPERTIES@@AAPAVCDllClassEntry@2@@Z
?CreateDocFile@CDocFile@@QAEJPBVCDfName@@KKPAPAVPDocFile@@@Z
?CreateDocFile@CPubDocFile@@QAEJPBVCDfName@@KPAPAV1@@Z
?CreateDocFile@CWrappedDocFile@@QAEJPBVCDfName@@KKPAPAVPDocFile@@@Z
?CreateDocFile@PDocFile@@QAEJPBVCDfName@@KKPAPAV1@@Z
?CreateDragDataObject@@YGJPAXKPAPAUIDataObject@@@Z
?CreateEntry@CDirectory@@QAEJKPBVCDfName@@KPAK@Z
?CreateEntry@CExposedDocFile@@AAEJPBVCDfName@@KKPAPAX@Z
?CreateEntry@CStgHandle@@QAEJPBVCDfName@@KPAVCHandle@@@Z
?CreateEnumFormatEtc@CEnumFormatEtc@@SGPAUIEnumFORMATETC@@PAV?$CArray@VCCacheNode@@@@@Z
?CreateEnumStatData@CEnumStatData@@SGPAUIEnumSTATDATA@@PAV?$CArray@VCCacheNode@@@@@Z
?CreateEnvoyObjectContext@CObjectContext@@SGJPAUtagDATAELEMENT@@AAPAV1@@Z
?CreateFileMonikerComparisonBuffer@@YGJPAGPAEKPAK@Z
?CreateFromBindingHandle@CFastBH@@AAEJPAXPAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PAU_GUID@@@Z
?CreateFromBindingString@CFastBH@@AAEJPBGPAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PAU_GUID@@@Z
?CreateFromTypeInfo@Interceptor@@CGJABU_GUID@@PAUIUnknown@@PAUITypeInfo@@0PAPAX@Z
?CreateFromUpdate@PDocFile@@SGJPAVCUpdate@@PAV1@K@Z
?CreateHandle@@YGJPAVOXIDEntry@@KPAPAVCChannelHandle@@@Z
?CreateHandler@CAggId@@AAEJABU_GUID@@@Z
?CreateIFaceEntry@CStdWrapper@@QAEJABU_GUID@@PAXPAPAVIFaceEntry@@@Z
?CreateIdentity@CObjectContext@@QAEXPAUIComObjIdentity@@@Z
?CreateIncomplete@CClassEntry@CClassCache@@SGJABU_GUID@@KPAUIComClassInfo@@AAPAV12@K@Z
?CreateInprocInstanceHelper@@YGJPAUIClassFactory@@KPAUIUnknown@@KPAUtagMULTI_QI@@@Z
?CreateInstance@?$GenericInstantiator@UDISPATCH_INTERCEPTOR@@@@SGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CApartmentActivator@@UAGJPAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@CClassMonikerFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CClientContextActivator@@UAGJPAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@CDDEServer@@AAEJABU_GUID@@PAGPADPAUIUnknown@@PAPAVCDefClient@@PAUHWND__@@@Z
?CreateInstance@CDebugEventFireCF@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CDefClassFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CDocfileUnmarshalFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CFileMonikerFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CLUAMoniker@@UAGJABU_GUID@@PAUIUnknown@@KKKPAUtagMULTI_QI@@@Z
?CreateInstance@CObjServer@@UAGJPAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@CObjrefMonikerFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CProcessActivator@@UAGJPAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@CRefMutexSem@@SGPAV1@XZ
?CreateInstance@CRpcResolver@@QAEJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@CRpcResolver@@QAEJPAU_COSERVERINFO@@PAU_GUID@@KK1PAKPAPAGPAPAUtagMInterfacePointer@@PAJ@Z
?CreateInstance@CServerContextActivator@@UAGJPAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@CStdClassFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateInstance@CSurrogateProcessActivator@@UAGJPAUIUnknown@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?CreateInstance@ComPsClassFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?CreateLSvrClassEntry_rl@CClassEntry@CClassCache@@QAEJPAUIUnknown@@KKPAK@Z
?CreateLightPS@CStdWrapper@@AAEPAVIFaceEntry@@ABU_GUID@@PAXAAJ@Z
?CreateMappedStream@CPropertyStorage@@EAEJXZ
?CreateObjectContext@CObjectContext@@SGPAV1@K@Z
?CreateObjectDescriptor@@YGPAXU_GUID@@KPBUtagSIZE@@PBU_POINTL@@KPAG3@Z
?CreateOlePresObj@CCacheNode@@AAEJPAPAUIOlePresObj@@H@Z
?CreateOrOpenDocfileOnHandle@@YGHHKPAPAXABU_GUID@@0@Z
?CreateOrOpenStorage@CNtfsStorageForPropSetStg@@AAEJPBGPAUIStorage@@KPAPAGHPAPAU2@@Z
?CreateOrOpenStorageOnHandle@@YGHHKKPAXABU_GUID@@PAPAX@Z
?CreateOrOpenStorageOnILockBytes@CNtfsStorageForPropSetStg@@SGJPAUILockBytes@@PAUIStorage@@KPAPAGHPAPAU3@@Z
?CreatePoolEntry@EventPoolEntry@@SGPAV1@H@Z
?CreatePrototypeContext@CObjectContext@@SGJPAV1@PAPAV1@@Z
?CreateProxy@CPipePSFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAUIRpcProxyBuffer@@PAPAX@Z
?CreateProxy@CStdMarshal@@AAEJABU_GUID@@PAPAUIRpcProxyBuffer@@PAPAXPAH@Z
?CreateProxy@ComPsClassFactory@@UAGJPAUIUnknown@@ABU_GUID@@PAPAUIRpcProxyBuffer@@PAPAX@Z
?CreateServer@CProxyManagerImpl@CDdeObject@@UAGJABU_GUID@@KPAX@Z
?CreateServer@CStdIdentity@@UAGJABU_GUID@@KPAX@Z
?CreateSharedDragFormats@@YGPAXPAUIDataObject@@@Z
?CreateSharedFileMapping@@YGPAXPAGKKPAX1KPAPAXPAH@Z
?CreateStack@?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SGPAU?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@XZ
?CreateStack@?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SGPAU?$IFastStack@UDISPATCH_SERVER_FRAME@@@@XZ
?CreateStack@?$DedicatedAllocator@VCallFrame@@@@SGPAU?$IFastStack@VCallFrame@@@@XZ
?CreateStackTrace@CStackWalker@@UAGPAUIStackWalkerStack@@PAX0K@Z
?CreateState@CIDObject@@QAEJPAVCObjectContext@@@Z
?CreateStorage@CExpParameterValidate@@SGJPBGKKKPAPAUIStorage@@@Z
?CreateStorage@CExposedDocFile@@UAGJPBGKKKPAPAUIStorage@@@Z
?CreateStorage@CNtfsStorage@@UAGJPBGKKKPAPAUIStorage@@@Z
?CreateStorage@CNtfsStorageForPropSetStg@@UAGJPBGKKKPAPAUIStorage@@@Z
?CreateStorage@CSimpStorage@@UAGJPBGKKKPAPAUIStorage@@@Z
?CreateStream@CDocFile@@QAEJPBVCDfName@@KKPAPAVPSStream@@@Z
?CreateStream@CExpParameterValidate@@SGJPBGKKKPAPAUIStream@@@Z
?CreateStream@CExposedDocFile@@UAGJPBGKKKPAPAUIStream@@@Z
?CreateStream@CNtfsStorage@@UAGJPBGKKKPAPAUIStream@@@Z
?CreateStream@CNtfsStorageForPropSetStg@@UAGJPBGKKKPAPAUIStream@@@Z
?CreateStream@CPubDocFile@@QAEJPBVCDfName@@KPAPAVCPubStream@@@Z
?CreateStream@CSimpStorage@@UAGJPBGKKKPAPAUIStream@@@Z
?CreateStream@CSimpStorageOpen@@UAGJPBGKKKPAPAUIStream@@@Z
?CreateStream@CStmBufWrite@@QAEJPAUIStorage@@PBG@Z
?CreateStream@CWrappedDocFile@@QAEJPBVCDfName@@KKPAPAVPSStream@@@Z
?CreateStream@PDocFile@@QAEJPBVCDfName@@KKPAPAVPSStream@@@Z
?CreateStub@CPipePSFactory@@UAGJABU_GUID@@PAUIUnknown@@PAPAUIRpcStubBuffer@@@Z
?CreateStub@CStdMarshal@@AAEJABU_GUID@@PAPAUIRpcStubBuffer@@PAPAXPAHPAUIUnknown@@@Z
?CreateStub@ComPsClassFactory@@UAGJABU_GUID@@PAUIUnknown@@PAPAUIRpcStubBuffer@@@Z
?CreateUnicodeFromAnsi@@YGPAGPBD@Z
?CreateUpdateStreamIfNecessary@CNFFMappedStream@@AAEJXZ
?CreateUserDefinedStream@CPropertySetStorage@@IAEJPAUIStorage@@AAVCPropSetName@@KPAHPAPAUIStream@@@Z
?CreateVtblFromTypeInfo@@YGJPAUITypeInfo@@0ABU_GUID@@1HGPAUtagMethodInfo@@PAPAUTYPEINFOVTBL@@@Z
?CreateWrapper@@YGJPAX@Z
?CreateWrapperClipDataObjectFromFormatsArray@@YGJPAPAUIDataObject@@@Z
?Create_rl@CDllPathEntry@CClassCache@@SGJAAUDLL_INSTANTIATION_PROPERTIES@@ABUACTIVATION_PROPERTIES@@AAPAV12@@Z
?CrossAptAddRefFn@@YGJPAX@Z
?CrossAptQIFn@@YGJPAX@Z
?CrossAptRefToNA@@YGHAAUtagOBJREF@@@Z
?CrossAptReleaseFn@@YGJPAX@Z
?CrossCtxDisconnectFn@@YGJPAX@Z
?CrossCtxMarshalFn@@YGJPAX@Z
?CrossCtxQI@CStdWrapper@@AAEJPAVCPolicySet@@ABU_GUID@@PAPAVIFaceEntry@@@Z
?CrossCtxQIFn@@YGJPAX@Z
?CurlyStringToGUID@@YG_NPBGPAU_GUID@@@Z
?CycleToClassEntry@CClassEntry@CClassCache@@QAEPAV12@XZ
?DAdvise@CCacheDataImpl@COleCache@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?DAdvise@CClipDataObject@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?DAdvise@CDataObjectImpl@CDdeObject@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?DAdvise@CDefLink@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?DAdvise@CDefObject@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?DAdvise@CDragDataObject@@UAGJPAUtagFORMATETC@@KPAUIAdviseSink@@PAK@Z
?DDELibMain@@YGHPAXGGPAG@Z
?DFlagsToMode@@YGKK@Z
?DLLHostThreadEntry@@YGKPAX@Z
?DSACompare@@YGHPAUtagDUALSTRINGARRAY@@0@Z
?DUnadvise@CCacheDataImpl@COleCache@@UAGJK@Z
?DUnadvise@CClipDataObject@@UAGJK@Z
?DUnadvise@CDataObjectImpl@CDdeObject@@UAGJK@Z
?DUnadvise@CDefLink@@UAGJK@Z
?DUnadvise@CDefObject@@UAGJK@Z
?DUnadvise@CDragDataObject@@UAGJK@Z
?DdeBindToObject@@YGJPBGABU_GUID@@H1PAPAX@Z
?DdeIsRunning@@YGJU_GUID@@PBGPAUIBindCtx@@PAUIMoniker@@3@Z
?DeInit@CComCatalog@@QAEJXZ
?DeInitializeReadCache@CComCatalog@@CGJXZ
?Deactivate@CIDObject@@QAEJXZ
?Deactivate@CStdMarshal@@QAEXXZ
?Deactivate@CStdWrapper@@QAEXXZ
?DeallocatePoolEntry@EventPoolEntry@@SGXPAV1@@Z
?DebugServerQueryInterface@CDdeServerCallMgr@@UAGJPAPAX@Z
?DebugServerQueryInterface@CRpcStubBufferImpl@CDdeObject@@UAGJPAPAX@Z
?DebugServerQueryInterface@CServerCallMgr@CRpcChannelBuffer@@UAGJPAPAX@Z
?DebugServerRelease@CDdeServerCallMgr@@UAGXPAX@Z
?DebugServerRelease@CRpcStubBufferImpl@CDdeObject@@UAGXPAX@Z
?DebugServerRelease@CServerCallMgr@CRpcChannelBuffer@@UAGXPAX@Z
?DecCallCnt@OXIDEntry@@QAEKXZ
?DecRef@CNameHashTable@@QAEKKABU_GUID@@PAUtagSECURITYBINDING@@@Z
?DecRefCnt@MIDEntry@@QAEKXZ
?DecRefCnt@OXIDEntry@@QAEKXZ
?DecRefCount@CMachineNamesHelper@@QAEXXZ
?DecSrvIPIDCnt@CStdMarshal@@QAEXPAUtagIPIDEntry@@KKPAUtagSECURITYBINDING@@K@Z
?DecStrongAndNotifyAct@CStdMarshal@@AAEXPAUtagIPIDEntry@@K@Z
?DecStrongCnt@CStdIdentity@@QAEXH@Z
?DecTableCnt@CStdMarshal@@QAEXXZ
?DecTableStrongCnt@CRefCache@@QAEKHPAPAUtagREMINTERFACEREF@@PAG@Z
?DecWeakCnt@CStdIdentity@@QAEXH@Z
?DecideDestruction@CObjectContext@@AAEKXZ
?DecideDestruction@CStdWrapper@@AAEKPAVCPolicySet@@@Z
?DecideToUseMergedHive@CEnumClassesOfCategories@@AAEJPAUHKEY__@@KPAH@Z
?DeclareVisibility@CDdeObject@@AAEJHH@Z
?DecrementCount@CCtxConnectionManager@@QAEXXZ
?DecrementExportCount@CRefExportCount@@QAEKXZ
?DecrementNestCount@CRefExportCount@@QAEXXZ
?DecrementNestCount@CSafeRefCount@@QAEXXZ
?DecrementObjectReferences@CCtxConnectionManager@@SGXXZ
?DefaultAuthnServices@@YGJXZ
?DefaultAuthnSvc@@YGKPAVOXIDEntry@@@Z
?DefaultBlanket@@YGJKPAVOXIDEntry@@PAUSBlanket@@@Z
?DefaultCert@CSSL@@SGJPAPBU_CERT_CONTEXT@@@Z
?DefaultStringBindings@@YGJXZ
?DelegateCIAndGetCF@ActivationPropertiesIn@@UAGJPAUIUnknown@@PAPAUIActivationPropertiesOut@@PAPAUIClassFactory@@@Z
?DelegateCreateInstance@ActivationPropertiesIn@@UAGJPAUIUnknown@@PAPAUIActivationPropertiesOut@@@Z
?DelegateGetClassObject@ActivationPropertiesIn@@UAGJPAPAUIActivationPropertiesOut@@@Z
?Delete@CFileStream@@QAEXXZ
?Delete@CNtfsStream@@IAEJXZ
?Delete@CPropertySetStorage@@UAGJABU_GUID@@@Z
?Delete@CUpdateList@@QAEXPAVCUpdate@@@Z
?DeleteACEFromStreamACL@@YGHPAU_TRUSTEE_W@@KPAUtagACL_DESCRIPTOR@@PAUtagPCB@@@Z
?DeleteAdviseInfo@CDefClient@@QAEXXZ
?DeleteAllItems@?$CArray@VCCacheNode@@@@QAEXXZ
?DeleteAllItems@CDefClient@@AAEXXZ
?DeleteByName@CChildInstanceList@@QAEXPBVCDfName@@@Z
?DeleteChannel@CDdeObject@@AAEXPAVDDE_CHANNEL@@@Z
?DeleteContents@CDocFile@@QAEJXZ
?DeleteContents@CWrappedDocFile@@QAEJXZ
?DeleteContents@PDocFile@@QAEJXZ
?DeleteCtxEntries@CtxEntry@@SGXAAPAV1@K@Z
?DeleteExtent@CExtentList@@QAEJG@Z
?DeleteFromItemsList@CDefClient@@QAEXPAUHWND__@@@Z
?DeleteItem@?$CArray@VCCacheNode@@@@QAEHK@Z
?DeleteMappedStream@CPropertyStorage@@EAEXXZ
?DeleteMultiple@CPropertyBagEx@@UAGJKQBQBGK@Z
?DeleteMultiple@CPropertyStorage@@UAGJKQBUtagPROPSPEC@@@Z
?DeleteOpaqueData@CComActivator@@UAGJABU_GUID@@@Z
?DeleteOpaqueData@OpaqueDataInfo@@UAGJABU_GUID@@@Z
?DeletePoolEntry@EventPoolEntry@@SGXPAV1@@Z
?DeletePropertyNames@CPropertyStorage@@UAGJKQBK@Z
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QAEXXZ
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QAEXXZ
?DeleteStack@?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SGXXZ
?DeleteStack@?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SGXXZ
?DeleteStack@?$DedicatedAllocator@VCallFrame@@@@SGXXZ
?DeleteStream@CNtfsStream@@CGJPAPAX@Z
?DeleteTheFile@CFileStream@@AAEHPBG@Z
?DeliverAddRefPolicyEvents@CPolicySet@@QAEXXZ
?DeliverEvents@CPolicySet@@QAEJPAVCRpcCall@@W4tagCallType@@PAVCCtxCall@@@Z
?Destroy@COleStaticMutexSem@@QAEXXZ
?Destroy@tagMethodInfo@@QAEXXZ
?DestroyAllChildren@CDirectory@@QAEJKK@Z
?DestroyChild@CDirectory@@QAEJKPBVCDfName@@K@Z
?DestroyCommonDdeWindow@@YGJXZ
?DestroyDdeSrvrWindow@@YGJPAUHWND__@@G@Z
?DestroyElement@CExpParameterValidate@@SGJPBG@Z
?DestroyElement@CExposedDocFile@@UAGJPBG@Z
?DestroyElement@CNtfsStorage@@UAGJPBG@Z
?DestroyElement@CNtfsStorageForPropSetStg@@UAGJPBG@Z
?DestroyElement@CSimpStorage@@UAGJPBG@Z
?DestroyEntry@CDocFile@@QAEJPBVCDfName@@H@Z
?DestroyEntry@CHandle@@QAEJPBVCDfName@@@Z
?DestroyEntry@CMStream@@QAEJKPBVCDfName@@@Z
?DestroyEntry@CPubDocFile@@QAEJPBVCDfName@@H@Z
?DestroyEntry@CWrappedDocFile@@QAEJPBVCDfName@@H@Z
?DestroyEntry@PDocFile@@QAEJPBVCDfName@@H@Z
?DestroyIdentity@CObjectContext@@QAEXPAUIComObjIdentity@@@Z
?DestroyInstance@CDefClient@@QAEJXZ
?DestroyPSCache@CPolicySet@@SGXPAVCObjectContext@@@Z
?DestroyRunningObjectTable@@YGXXZ
?DestroyStreamElement@CNtfsStorage@@QAEJPBG@Z
?DetermineDosPathNameType@@YG?AW4PATH_TYPE@@PBG@Z
?DetermineLongestString@@YGHPAGAAPAG0@Z
?DeterminePolicySet@@YGJPAVCObjectContext@@0KPAPAVCPolicySet@@@Z
?DetermineUnicodePath@CFileMoniker@@QAEJPADAAPAGAAG@Z
?DfCreateSharedAllocator@@YGJPAPAUIMalloc@@H@Z
?DfCreateSimpDocfile@@YGJPBGKPAXPAPAUIStorage@@@Z
?DfFromLB@@YGJPAVCPerContext@@PAUILockBytes@@KKPAPAGPAPAVCExposedDocFile@@PAU_GUID@@@Z
?DfFromName@@YGJPBGKKPAPAGPAPAVCExposedDocFile@@PAKPAXPAU_GUID@@@Z
?DfGetTOD@@YGJPAU_FILETIME@@@Z
?DfIsRemoteFile@@YGHPAX@Z
?DfOpenSimpDocfile@@YGJPBGKPAXPAPAUIStorage@@@Z
?DfpNtStatusToHResult@@YGJJ@Z
?DialogProc@DefaultIBindStatusCallback@@EAEHPAUHWND__@@IIJ@Z
?DibDraw@@YGJPAXPAUHDC__@@PBU_RECTL@@@Z
?DibFillPaletteEntries@@YGXPAEGPAUtagLOGPALETTE@@@Z
?DibMakeLogPalette@@YGPAXPAEGPAPAUtagLOGPALETTE@@@Z
?DibToPres@@YGJPAXPAVCPres@@@Z
?DidAlloc@CErrorSmAllocator@@UAGHPAX@Z
?DidAlloc@CSmAllocator@@UAGHPAX@Z
?DirtyAll@CFat@@QAEJXZ
?DisOwn@SDeltaBlock@@QAEXG@Z
?DisableCOMDynamicAddrTracking@CAddrControl@@UAGJXZ
?DisableComInits@CServerSecurity@@UAGJPAX@Z
?DiscardCache@COleCache@@UAGJK@Z
?DiscardHPRES@CEMfObject@@UAGXXZ
?DiscardHPRES@CGenObject@@UAGXXZ
?DiscardHPRES@CMfObject@@UAGXXZ
?DiscardPresentation@CCacheNode@@QAEJPAUIStream@@@Z
?Disconnect@CDdeServerCallMgr@@UAGXXZ
?Disconnect@CPipeProxyImp@@UAGXXZ
?Disconnect@CProxyManagerImpl@CDdeObject@@UAGXXZ
?Disconnect@CRpcResolver@@AAEXXZ
?Disconnect@CRpcStubBufferImpl@CDdeObject@@UAGXXZ
?Disconnect@CServerCallMgr@CRpcChannelBuffer@@UAGXXZ
?Disconnect@CStdIdentity@@UAGXXZ
?Disconnect@CStdMarshal@@QAEXK@Z
?Disconnect@CStdWrapper@@QAEJPAVCPolicySet@@@Z
?DisconnectAllObjects@CCtxConnectionManager@@QAEJXZ
?DisconnectAndFreeSrvIPID@CStdMarshal@@AAEXPAUtagIPIDEntry@@@Z
?DisconnectAndRelease@CStdMarshal@@QAEXK@Z
?DisconnectCliIPIDs@CStdMarshal@@AAEXXZ
?DisconnectObject@ActivationProperties@@UAGJK@Z
?DisconnectObject@CClassMoniker@@UAGJK@Z
?DisconnectObject@CDocfileUnmarshalFactory@@UAGJK@Z
?DisconnectObject@CErrorObject@@UAGJK@Z
?DisconnectObject@CExposedDocFile@@UAGJK@Z
?DisconnectObject@CExposedStream@@UAGJK@Z
?DisconnectObject@CFreeMarshaler@@UAGJK@Z
?DisconnectObject@CMarshalImplPStream@@UAGJK@Z
?DisconnectObject@CObjectContext@@UAGJK@Z
?DisconnectObject@CPointerMoniker@@UAGJK@Z
?DisconnectObject@CSimpStorage@@UAGJK@Z
?DisconnectObject@CSimpStream@@UAGJK@Z
?DisconnectObject@CStaticWrapper@@UAGJK@Z
?DisconnectObject@CStdMarshal@@UAGJK@Z
?DisconnectObject@CStdWrapper@@UAGJK@Z
?DisconnectObject@InprocActpropsUnmarshaller@@UAGJK@Z
?DisconnectSrvIPIDs@CStdMarshal@@AAEXK@Z
?DisconnectSwitch@@YGJPAX@Z
?Dispatch@CRpcThread@@QAEXP6GKPAX@Z0@Z
?DispatchCall@@YGJPAUtagDISPATCHDATA@@@Z
?DispatchCall@@YGJPAVCMessageCall@@@Z
?Displacement@CStackWalkerSymbol@@UAG_KXZ
?DllGetClassObject@CDllHost@@UAGJ_KU_GUID@@ABU2@2PAPAUIUnknown@@K@Z
?DllGetClassObject@CDllPathEntry@CClassCache@@QAEJABU_GUID@@0PAPAUIUnknown@@H@Z
?DllGetCommitSig@@YGJPAUILockBytes@@PAK@Z
?DllGetScratchMultiStream@@YGJPAPAVCMStream@@HPAPAUILockBytes@@PAV1@@Z
?DllHostProcessInitialize@@YGJXZ
?DllHostProcessUninitialize@@YGXXZ
?DllHostThreadUninitialize@@YGXXZ
?DllIsMultiStream@@YGJPAUILockBytes@@@Z
?DllMultiStreamFromStream@@YGJPAUIMalloc@@PAPAVCMStream@@PAPAUILockBytes@@KK@Z
?DllReleaseMultiStream@@YGXPAVCMStream@@@Z
?DllSetCommitSig@@YGJPAUILockBytes@@K@Z
?DoATApartmentCreate@@YGJAAK@Z
?DoATClassCreate@@YGJP6GJABU_GUID@@0PAPAX@Z00PAPAUIUnknown@@@Z
?DoATClassCreate@@YGJPAVCDllPathEntry@CClassCache@@ABU_GUID@@1PAPAUIUnknown@@@Z
?DoAlloc@?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SGPAXI@Z
?DoAlloc@?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SGPAXI@Z
?DoAlloc@?$DedicatedAllocator@VCallFrame@@@@SGPAXI@Z
?DoCallback@CObjectContext@@UAGJP6GJPAX@Z0ABU_GUID@@I@Z
?DoCallback@CRemoteUnknown@@UAGJPAUtagXAptCallback@@@Z
?DoCoAuthIdentityFixup@SecurityInfo@@AAEJXZ
?DoCoAuthIdentityFixupIfNecessary@SecurityInfo@@AAEJXZ
?DoContextSensitiveHelp@CFrameFilter@@QAEHXZ
?DoConversionIfSpecialClass@CDefObject@@AAEJPAUIStorage@@@Z
?DoCreateInstance@CComActivator@@SGJABU_GUID@@PAUIUnknown@@KPAU_COSERVERINFO@@KPAUtagMULTI_QI@@PAVActivationPropertiesIn@@@Z
?DoGetClassObject@CComActivator@@SGJABU_GUID@@KPAU_COSERVERINFO@@0PAPAXPAVActivationPropertiesIn@@@Z
?DoGetInstanceFromFile@CComActivator@@SGJPAU_COSERVERINFO@@PAU_GUID@@PAUIUnknown@@KKPAGKPAUtagMULTI_QI@@PAVActivationPropertiesIn@@@Z
?DoGetInstanceFromStorage@CComActivator@@SGJPAU_COSERVERINFO@@PAU_GUID@@PAUIUnknown@@KPAUIStorage@@KPAUtagMULTI_QI@@PAVActivationPropertiesIn@@@Z
?DoInitNew@CDefClient@@QAEJXZ
?DoMTApartmentCreate@@YGJAAK@Z
?DoMTClassCreate@@YGJPAVCDllPathEntry@CClassCache@@ABU_GUID@@1PAPAUIUnknown@@@Z
?DoNTApartmentCreate@@YGJAAK@Z
?DoNTClassCreate@@YGJPAVCDllPathEntry@CClassCache@@ABU_GUID@@1PAPAUIUnknown@@@Z
?DoNormalListen@@YGJG@Z
?DoOle20Advise@CDefClient@@QAEJW4OLE_NOTIFICATION@@G@Z
?DoOle20UnAdviseAll@CDefClient@@QAEJXZ
?DoPostUnserializeCoAuthFixup@SecurityInfo@@AAEJXZ
?DoSTApartmentCreate@@YGJAAK@Z
?DoSTClassCreate@@YGJPAVCDllPathEntry@CClassCache@@ABU_GUID@@1PAPAUIUnknown@@@Z
?DoSTMTApartmentCreate@@YGJAAK@Z
?DoSTMTClassCreate@@YGJPAVCDllPathEntry@CClassCache@@ABU_GUID@@1PAPAUIUnknown@@@Z
?DoServerContextCCI@@YGJPAX@Z
?DoServerContextGCO@@YGJPAX@Z
?DoThreadSpecificCleanup@@YGXXZ
?DoVerb@CDefLink@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z
?DoVerb@CDefObject@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z
?DoVerb@COleObjectImpl@CDdeObject@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z
?DocDispatchIncomingCall@@YGJPAUtagDOCDISPATCHDATA@@@Z
?DocDoVerbItem@CDefClient@@QAEJPADGHH@Z
?DocExecute@CDefClient@@QAEJPAX@Z
?DocHandleIncomingCall@@YGJPAUtagDOCDISPATCHDATA@@@Z
?DocShowItem@CDefClient@@QAEJPADH@Z
?DocumentLevelConnect@CDdeObject@@AAEJPAUIBindCtx@@@Z
?Done@CleanupStack@@QAEXJ@Z
?DowngradeFromWriterLock@CRWLock@@QAIKPAULockCookie@@@Z
?DownloadClass@@YGJPAGK@Z
?DownloadClass@@YGJU_GUID@@K@Z
?DragDropProcessUninitialize@@YGXXZ
?DragEnter@CDropTarget@@UAGJPAUIDataObject@@KU_POINTL@@PAK@Z
?DragLeave@CDropTarget@@UAGJXZ
?DragOver@CDragOperation@@QAEHXZ
?DragOver@CDropTarget@@UAGJKU_POINTL@@PAK@Z
?Draw@CCacheNode@@QAEJPAXPAUHDC__@@1PBU_RECTL@@2P6GHK@ZK@Z
?Draw@CCacheViewImpl@COleCache@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z
?Draw@CEMfObject@@UAGJPAXPAUHDC__@@1PBU_RECTL@@2P6GHK@ZK@Z
?Draw@CGenObject@@UAGJPAXPAUHDC__@@1PBU_RECTL@@2P6GHK@ZK@Z
?Draw@CMfObject@@UAGJPAXPAUHDC__@@1PBU_RECTL@@2P6GHK@ZK@Z
?Drop@CDropTarget@@UAGJPAUIDataObject@@KU_POINTL@@PAK@Z
?DsaValid@@YGHPAUtagDUALSTRINGARRAY@@@Z
?DuCacheDelegate@@YGPAXPAPAUIUnknown@@ABU_GUID@@PAPAXPAU1@@Z
?DuLockContainer@@YGXPAUIOleClientSite@@HPAH@Z
?DuSetClientSite@@YGJHPAUIOleClientSite@@PAPAU1@PAH@Z
?DummyCleanup@@YGXPAUSHashChain@@@Z
?DumpList@CDeltaList@@AAEJXZ
?DupFileHandleToOthers@CFileStream@@AAEJXZ
?DupWCHARString@@YGJPBGAAPAGAAG@Z
?DuplicateAtom@@YGGG@Z
?DuplicateBitmap@@YGPAUHBITMAP__@@PAU1@@Z
?DuplicateMetaFile@@YGPAXPAX@Z
?DuplicatePropertyName@CPropertySetStream@@QBEPAGPBGPAJ@Z
?DwULIToAStr@@YGK_KPADH@Z
?DwULIToWStr@@YGK_KPAGH@Z
?DwordAlignPointer@SerializedPropertyReader@@QAEJXZ
?EMfCallbackFuncForDraw@@YGHPAUHDC__@@PAUtagHANDLETABLE@@PBUtagENHMETARECORD@@HJ@Z
?EatDotDots@@YGHPAPBGPAG@Z
?EatOne@CAntiMoniker@@QAEXPAPAUIMoniker@@@Z
?Empty@CDIFat@@QAEXXZ
?Empty@CDeltaList@@QAEXXZ
?Empty@CDirectory@@QAEXXZ
?Empty@CFat@@QAEXXZ
?Empty@CMStream@@QAEXXZ
?Empty@CPagedVector@@QAEXXZ
?Empty@CStreamCache@@QAEXXZ
?Empty@CUpdateList@@QAEXXZ
?EmptyCache@CChildInstanceList@@QAEXXZ
?EmptyCache@CPubDocFile@@QAEXXZ
?EmptyCache@CPubStream@@QAEXXZ
?EmptyCache@CTransactedStream@@QAEXXZ
?EmptyCache@CUpdateList@@QAEXXZ
?EmptyCache@CWrappedDocFile@@QAEXXZ
?EmptyCache@PDocFile@@QAEXXZ
?EmptyCache@PRevertable@@QAEXXZ
?EmptyCache@PSStream@@QAEXXZ
?EmptyCache@PTSetMember@@QAEXXZ
?EmptyRegion@CStreamCache@@QAEJKK@Z
?EnableCOMDynamicAddrTracking@CAddrControl@@UAGJXZ
?EnableComInits@CServerSecurity@@UAGJPAPAX@Z
?EnableDisableDynamicIPTracking@CRpcResolver@@QAEJH@Z
?EnableTracking@CDefLink@@AAEJPAUIMoniker@@K@Z
?EnableTracking@CFileMoniker@@UAGJPAUIMoniker@@K@Z
?EnableTracking@CTrackingCompositeMoniker@@UAGJPAUIMoniker@@K@Z
?EnableTracking@CTrackingFileMoniker@@UAGJPAUIMoniker@@K@Z
?Encode@?$CRtlSmartUcsEncoderTraitsBase@V?$CRtlSmartUcsEncoderTraits@U_LUNICODE_STRING@@@@@@SIJKPAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?Encode@?$CRtlSmartUcsEncoderTraitsBase@V?$CRtlSmartUcsEncoderTraits@U_LUNICODE_STRING@@@@@@SIJQBKKPAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?End@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAE?AViterator@1@XZ
?End@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAE?AViterator@1@XZ
?EndCommit@CDeltaList@@QAEXPAV1@K@Z
?EndCommit@CTransactedStream@@QAEXK@Z
?EndCommit@CWrappedDocFile@@QAEXK@Z
?EndCommit@PTSetMember@@QAEXK@Z
?EndCommitFromChild@CDirectStream@@QAEXKPAVCTransactedStream@@@Z
?EndCommitFromChild@CDocFile@@QAEXKPAVCWrappedDocFile@@@Z
?EndCommitFromChild@CTransactedStream@@QAEXKPAV1@@Z
?EndCommitFromChild@CWrappedDocFile@@QAEXKPAV1@@Z
?EndCommitFromChild@PDocFile@@QAEXKPAVCWrappedDocFile@@@Z
?EndCommitFromChild@PSStream@@QAEXKPAVCTransactedStream@@@Z
?EndCopyOnWrite@CMStream@@QAEJKK@Z
?EndSession@CDebugEventFire@@UAGJXZ
?EndUpdates@CDefLink@@AAEXXZ
?EndUsingLatestStream@CNFFMappedStream@@AAEXXZ
?EndUsingUpdateStream@CNFFMappedStream@@AAEXXZ
?EnlargeStreamACL@@YGJPAUtagPCB@@K@Z
?EnsureCLSIDIsRegistered@@YGXABU_GUID@@PAUIStorage@@@Z
?EnsureCatalogProviders@CComCatalog@@AAEXXZ
?EnsureLegacySupport@@YGHPAUIUnknown@@AAKAAPAX@Z
?EnsureWorkerThread@CROIDTable@@AAEJXZ
?EnterAfterCallback@@YGJPAUtagRPCOLEMESSAGE@@PAVCPolicySet@@PAJJAAVCRpcCall@@PAVCObjectContext@@4PAVCCtxCall@@HH@Z
?EnterBegin@CAsyncStateMachine@@QAEJPAUIUnknown@@@Z
?EnterFinish@CAsyncStateMachine@@QAEJPAUIUnknown@@@Z
?EnterForCallback@@YGJPAUtagRPCOLEMESSAGE@@PAVCPolicySet@@P6GJPAX@Z2ABU_GUID@@KPAUIUnknown@@PAJPAPAVCObjectContext@@@Z
?EnterNTA@@YGPAVCObjectContext@@PAV1@@Z
?EnterNTAIfNecessary@CDllHost@@AAEHAAVCOleTls@@PAPAVCObjectContext@@@Z
?EnterServiceDomain@@YGJPAUIObjContext@@@Z
?Enum@CAntiMoniker@@EAGJHPAPAUIEnumMoniker@@@Z
?Enum@CBaseMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CClassMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CCompositeMoniker@@EAGJHPAPAUIEnumMoniker@@@Z
?Enum@CFileMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CItemMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CObjrefMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CPackagerMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CPointerMoniker@@UAGJHPAPAUIEnumMoniker@@@Z
?Enum@CPropertyBagEx@@UAGJPBGKPAPAUIEnumSTATPROPBAG@@@Z
?Enum@CPropertySetStorage@@UAGJPAPAUIEnumSTATPROPSETSTG@@@Z
?Enum@CPropertyStorage@@UAGJPAPAUIEnumSTATPROPSTG@@@Z
?EnumAdvise@CDAHolder@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumAdvise@CDataAdviseCache@@QAEJPAPAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefLink@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefObject@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumAdvise@COAHolder@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumAdvise@COleObjectImpl@CDdeObject@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumAndAdvise@CDataAdviseCache@@QAEJPAUIDataObject@@H@Z
?EnumAndRemove@CHashTable@@UAEHP6GHPAUSHashChain@@PAX@Z1PAKPAPAX@Z
?EnumApplications@CComProcessInfo@@UAGJPAPAUIEnumUnknown@@@Z
?EnumCache@COleCache@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumCategories@CComCat@@UAGJKPAPAUIEnumCATEGORYINFO@@@Z
?EnumCategories@CsCatInfo@@UAGJKPAPAUIEnumCATEGORYINFO@@@Z
?EnumCategoriesOfClass@CComCat@@CGJABU_GUID@@PBGHPAPAUIEnumGUID@@@Z
?EnumClassesOfCategories@CComCat@@UAGJKQBU_GUID@@K0PAPAUIEnumGUID@@@Z
?EnumClassesOfCategories@CsCatInfo@@UAGJKQBU_GUID@@K0PAPAUIEnumGUID@@@Z
?EnumConnectionPoints@CAsyncConnectionContainer@@UAGJPAPAUIEnumConnectionPoints@@@Z
?EnumConnections@CAsyncConnection@@UAGJPAPAUIEnumConnections@@@Z
?EnumContextProps@CObjectContext@@UAGJPAPAUIEnumContextProps@@@Z
?EnumDAdvise@CCacheDataImpl@COleCache@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumDAdvise@CClipDataObject@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDataObjectImpl@CDdeObject@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefLink@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefObject@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDragDataObject@@UAGJPAPAUIEnumSTATDATA@@@Z
?EnumElements@CExpParameterValidate@@SGJKPAXKPAPAUIEnumSTATSTG@@@Z
?EnumElements@CExposedDocFile@@UAGJKPAXKPAPAUIEnumSTATSTG@@@Z
?EnumElements@CNtfsStorage@@UAGJKPAXKPAPAUIEnumSTATSTG@@@Z
?EnumElements@CNtfsStorageForPropSetStg@@UAGJKPAXKPAPAUIEnumSTATSTG@@@Z
?EnumElements@CSimpStorage@@UAGJKPAXKPAPAUIEnumSTATSTG@@@Z
?EnumElements@CSimpStorageOpen@@UAGJKPAXKPAPAUIEnumSTATSTG@@@Z
?EnumFormatEtc@CCacheDataImpl@COleCache@@UAGJKPAPAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CClipDataObject@@UAGJKPAPAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDataObjectImpl@CDdeObject@@UAGJKPAPAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefLink@@UAGJKPAPAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefObject@@UAGJKPAPAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDragDataObject@@UAGJKPAPAUIEnumFORMATETC@@@Z
?EnumImplCategoriesOfClass@CComCat@@UAGJABU_GUID@@PAPAUIEnumGUID@@@Z
?EnumImplCategoriesOfClass@CsCatInfo@@UAGJABU_GUID@@PAPAUIEnumGUID@@@Z
?EnumNtStreams@@YGJPAXPAPAU_FILE_STREAM_INFORMATION@@PAKH@Z
?EnumObjectParam@CBindCtx@@UAGJPAPAUIEnumString@@@Z
?EnumObjects@COleItemContainerImpl@CDdeObject@@UAGJKPAPAUIEnumUnknown@@@Z
?EnumReqCategoriesOfClass@CComCat@@UAGJABU_GUID@@PAPAUIEnumGUID@@@Z
?EnumReqCategoriesOfClass@CsCatInfo@@UAGJABU_GUID@@PAPAUIEnumGUID@@@Z
?EnumRetQueues@CComProcessInfo@@UAGJPAPAUIEnumUnknown@@@Z
?EnumRunning@CRunningObjectTable@@UAGJPAPAUIEnumMoniker@@@Z
?EnumVerbs@CDefLink@@UAGJPAPAUIEnumOLEVERB@@@Z
?EnumVerbs@CDefObject@@UAGJPAPAUIEnumOLEVERB@@@Z
?EnumVerbs@COleObjectImpl@CDdeObject@@UAGJPAPAUIEnumOLEVERB@@@Z
?EnumeratePropids@CPropertySetStream@@QAEEPAK00PAJ@Z
?Erase@CDdeConnectionTable@@QAEJXZ
?ErrorHandler@CCtxCall@@UAGJABU_GUID@@PAPAXHH@Z
?EstablishIID@CProxyManagerImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?ExcludeEntries@PDocFile@@SGJPAV1@PAPAG@Z
?Execute@CDdeObject@@AAEJPAVDDE_CHANNEL@@PAXHHH@Z
?Expand@CSpyTable@@AAEHXZ
?ExpandUNCName@@YGJPAGPAPAG0@Z
?ExpireEntry@OXIDEntry@@AAEXXZ
?Extend@CFat@@AAEJKK@Z
?ExtendMapView@CFileStream@@AAEJK@Z
?ExtractNameAndIndex@@YGHKPAG0IPAI@Z
?ExtractUnicodeString@@YGJPADGAAPAGAAG@Z
?FContinue@CContinue@@UAGJXZ
?FDisableAssociatedInterceptor@@YGHUHREG@@PBG@Z
?FIX_WIN32@@YGJJ@Z
?FIconFileFromClass@@YGHABU_GUID@@PAGIPAI@Z
?FInit@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@UAEHXZ
?FInit@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@UAEHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@UAEHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@UAEHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@UAEHXZ
?FInit@CMutexSem2@@QAEHXZ
?FInit@XLOCK@@QAEHXZ
?FIsAVariantType@@YGHG@Z
?FIsLCID@@YGHPAG@Z
?FastGetOrCreateLockEntry@LockEntry@@SGPAV1@QAVCRWLock@@@Z
?FetchFullKeyInformation@@YGJPAUHKEY__@@PAPAU_KEY_FULL_INFORMATION@@PAPAU_KEY_NAME_INFORMATION@@@Z
?FileBindToObject@@YGJPAUIMoniker@@PAGABU_GUID@@PAUIBindCtx@@PAUtagBIND_OPTS2@@02PAPAX@Z
?FilePointerEqual@CFileStream@@AAEH_K@Z
?FilePointerEqual@CGlobalFileStream@@QAEH_K@Z
?FillAppend@CFileStream@@UAGJPBXKPAK@Z
?FillAppend@CFillLockBytes@@UAGJPBXKPAK@Z
?FillAt@CFileStream@@UAGJT_ULARGE_INTEGER@@PBXKPAK@Z
?FillAt@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@PBXKPAK@Z
?FillBuffer@@YGPAXPAUWireExtentArray@@KKHPAVCMessageCall@@@Z
?FillBuffer@CPolicySet@@QAEJPAVCRpcCall@@W4tagCallType@@PAVCCtxCall@@@Z
?FillLocalOXIDInfo@@YGJAAUtagOBJREF@@AAUtagOXID_INFO@@@Z
?FillOXID_INFO@OXIDEntry@@QAEXPAUtagOXID_INFO@@@Z
?FillObjRef@CStdMarshal@@AAEXAAUtagOBJREF@@KKAAUtagCOMVERSION@@PAUtagIPIDEntry@@@Z
?FillSTD@CStdMarshal@@QAEXPAUtagSTDOBJREF@@KKPAUtagIPIDEntry@@@Z
?FinalConstruct@CComClassInfo@@QAEJPAUIUserToken@@PAUHKEY__@@PBU_GUID@@PAG1K1KH@Z
?FinalConstruct@CComProcessInfo@@QAGJABU_GUID@@PAGPAUHKEY__@@K2H@Z
?FinalizerBypassEnabled@@YGHXZ
?Find@CAuthInfo@@SGPAXPAUtagSECURITYBINDING@@@Z
?Find@CGlobalFileStream@@QAEPAUCFileStream@@K@Z
?Find@CSpyTable@@QAEHPAXPAK@Z
?FindAggStdMarshal@@YGJPAUIStream@@PAPAUIMarshal@@@Z
?FindAlreadyOpenStream@CNtfsStorage@@AAEHPBGPAPAVCNtfsStream@@@Z
?FindBase@CUpdateList@@SGPAVCUpdate@@PAV2@PAPBVCDfName@@@Z
?FindBlock@CSmAllocator@@AAEPAVCBlockHeader@@KPAPAV2@@Z
?FindByName@CChildInstanceList@@QAEPAVPRevertable@@PBVCDfName@@@Z
?FindClient@@YGPAXPAX0H@Z
?FindConnectionPoint@CAsyncConnectionContainer@@UAGJABU_GUID@@PAPAUIConnectionPoint@@@Z
?FindDocObj@CDDEServer@@QAEPAVCDefClient@@PAD@Z
?FindEntry@CDirectory@@AAEJKPBVCDfName@@W4DIRENTRYOP@@PAUSEntryBuffer@@@Z
?FindEntry@CEndpointsTable@@QAEPAVCEndpointEntry@@G@Z
?FindExisting@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QAEJABU_GUID@@PAPAUINTERFACE_HELPER_CLSID@@@Z
?FindExisting@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QAEJABU_GUID@@PAPAUTYPEINFOVTBL@@@Z
?FindExisting@MD_INTERFACE_CACHE@@QAEJABU_GUID@@PAPAUMD_INTERFACE@@@Z
?FindExt@@YGPBGPBG@Z
?FindExtent@CExtentList@@QAEJGAAPAU_MONIKEREXTENT@@@Z
?FindExtentId@@YGKPAUSHookList@@U_GUID@@@Z
?FindGreaterEntry@CDirectory@@QAEJKPBVCDfName@@PAK@Z
?FindGreaterEntry@CDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@@Z
?FindGreaterEntry@CPubDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@H@Z
?FindGreaterEntry@CWrappedDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@@Z
?FindGreaterEntry@PDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@@Z
?FindIPIDEntryByIID@CStdMarshal@@QAEJABU_GUID@@PAPAUtagIPIDEntry@@@Z
?FindIPIDEntryByIPID@CStdMarshal@@IAEJABU_GUID@@PAPAUtagIPIDEntry@@@Z
?FindIPIDEntryByInterface@CStdMarshal@@QAEJPAXPAPAUtagIPIDEntry@@@Z
?FindItem@CDefClient@@AAEJPAGPAPAV1@@Z
?FindLast@CFat@@QAEJPAK@Z
?FindMarshal@CMarshalList@@QBEPAV1@KPAX@Z
?FindMaxSect@CFat@@QAEJPAK@Z
?FindMaximalFileMoniker@@YGJPAGKPAKPAPAUIMoniker@@@Z
?FindMessage@CCliModalLoop@@AAEHK@Z
?FindName@CTSSet@@QAEPAVPTSetMember@@PBVCDfName@@K@Z
?FindObjectFormat@COleCache@@AAEXPAUIStorage@@@Z
?FindOffset@CDeltaList@@AAEJPAKKPAT_ULARGE_INTEGER@@H@Z
?FindOrCreateApartment@@YGJABU_GUID@@KPAUDLL_INSTANTIATION_PROPERTIES@@PAK@Z
?FindOrCreateIDObject@CPIDTable@@QAEJPAUIUnknown@@PAVCObjectContext@@HKPAPAVCIDObject@@@Z
?FindOrCreateMIDEntry@CMIDTable@@QAEJAB_KPAUtagDUALSTRINGARRAY@@PAPAVMIDEntry@@@Z
?FindOrCreateOXIDEntry@COXIDTable@@QAEJAB_KAAUtagOXID_INFO@@W4tagFOCOXID@@PAUtagDUALSTRINGARRAY@@0PAVMIDEntry@@KPAEKPAPAVOXIDEntry@@@Z
?FindOrCreateWrapper@@YGJPAUIUnknown@@PAVCObjectContext@@HKPAPAVCStdWrapper@@@Z
?FindPage@CMSFPageTable@@QAEJPAVCPagedVector@@KKPAPAVCMSFPage@@@Z
?FindPattern@CPatternTbl@@QAEJPAXPAU_GUID@@@Z
?FindPattern@CProcessPatternTbl@@QAEJPAXPAU_GUID@@@Z
?FindPrevCallOnLID@CCliModalLoop@@QAEPAV1@ABU_GUID@@@Z
?FindStdMarshal@@YGJAAUtagOBJREF@@HPAPAVCStdMarshal@@H@Z
?FindStreamInFSI@@YGPBU_FILE_STREAM_INFORMATION@@PBU1@PBG@Z
?FindSwapPage@CMSFPageTable@@AAEPAVCMSFPage@@XZ
?FindThread@XSLOCK@@AAEPAUOWNERENTRY@1@V?$OPAQUE_HANDLE@$00@@@Z
?FindThreadOrFree@XSLOCK@@AAEPAUOWNERENTRY@1@V?$OPAQUE_HANDLE@$00@@@Z
?FindUNCEndServer@@YGXPBGPAG@Z
?Finish@CFinishComposite@CClassCache@@QAEJXZ
?Finish@CFinishObject@CDllPathEntry@CClassCache@@UAGJXZ
?Finish@CFinishObject@CLSvrClassEntry@CClassCache@@UAGJXZ
?FinishShutdown@@YGXXZ
?Finish_AddRef@CAsyncUnknownMgr@@UAGKXZ
?Finish_QueryInterface@CAsyncUnknownMgr@@UAGJPAPAX@Z
?Finish_QueryMultipleInterfaces@CAsyncUnknownMgr@@UAGJPAUtagMULTI_QI@@@Z
?Finish_QueryRemoteInterfaces@CStdMarshal@@QAEJPAUtagSQIResult@@PAUtagQICONTEXT@@@Z
?Finish_Release@CAsyncUnknownMgr@@UAGKXZ
?Finish_RemQIAndUnmarshal1@CStdMarshal@@AAEJPAUtagSQIResult@@PAUtagQICONTEXT@@@Z
?Finish_RemQIAndUnmarshal2@CStdMarshal@@AAEJPAUtagSQIResult@@PAUtagQICONTEXT@@@Z
?Finish_RemQIAndUnmarshal@CStdMarshal@@AAEJPAUtagSQIResult@@PAUtagQICONTEXT@@@Z
?FireEvent@CDebugEventFire@@UAGJABU_GUID@@HPAK11KJW4eVSAEventFlags@@@Z
?First@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAE?AViterator@1@XZ
?First@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAE?AViterator@1@XZ
?First@CCompositeMoniker@@QAEPAUIMoniker@@XZ
?FirstMarshal@CStdMarshal@@AAEJPAUIUnknown@@K@Z
?FixUpPipeRegistry@@YGJXZ
?FixWriteBug@@YGJPAXPAPAX@Z
?Fixup@CDIFat@@QAEJPAVCMStream@@@Z
?FixupAccessControl@@YGJPAPAU_SECURITY_DESCRIPTOR@@K@Z
?FixupSecurityDescriptor@@YGJPAU_SECURITY_DESCRIPTOR_RELATIVE@@K@Z
?FlagClear@CComActivator@@UAGJK@Z
?FlagClear@SpecialProperties@@UAGJK@Z
?FlagQuery@CComActivator@@UAGJK@Z
?FlagQuery@SpecialProperties@@UAGJK@Z
?FlagSet@CComActivator@@UAGJK@Z
?FlagSet@SpecialProperties@@UAGJK@Z
?FlsThreadCleanupCallback@@YGXPAX@Z
?Flush@CCache@@QAGJG@Z
?Flush@CExposedStream@@UAGXPAJ@Z
?Flush@CFileStream@@UAGJXZ
?Flush@CFillLockBytes@@UAGJXZ
?Flush@CMSFPageTable@@QAEJXZ
?Flush@CMStream@@QAEJH@Z
?Flush@CMemBytes@@UAGJXZ
?Flush@CNFFMappedStream@@UAGXPAJ@Z
?Flush@CNtfsStream@@UAGJXZ
?Flush@CPubMappedStream@@QAEXPAJ@Z
?Flush@CSSMappedStream@@UAGXPAJ@Z
?Flush@CStmBufWrite@@QAEJXZ
?FlushBufferedData@CChildInstanceList@@QAEJH@Z
?FlushBufferedData@CPubDocFile@@QAEJH@Z
?FlushBufferedData@CPubStream@@QAEJH@Z
?FlushBufferedData@PRevertable@@QAEJH@Z
?FlushCache@CComCatalog@@UAGJXZ
?FlushCache@CComCatalog@@W3AGJXZ
?FlushCache@CComCatalog@@W7AGJXZ
?FlushCache@CComRegCatalog@@UAGJXZ
?FlushCache@CComSxSCatalog@@UAGJXZ
?FlushCache@CEffPermsCacheLUID@@QAEXXZ
?FlushCache@CFileStream@@UAGJXZ
?FlushHeader@CMStream@@QAEJG@Z
?FlushIdleEntries@CComCatalog@@UAGJXZ
?FlushPage@CMSFPageTable@@QAEJPAVCMSFPage@@@Z
?FlushProviderCaches@CComCatalog@@QAGXXZ
?FlushSCMBindings@CRpcResolver@@QAEJPAG@Z
?For@Interceptor@@SGJABU_GUID@@PAUIUnknown@@0PAPAX@Z
?ForOle32@Interceptor@@SGJABU_GUID@@PAUIUnknown@@0PAPAX@Z
?ForTypeInfo@Interceptor@@SGJABU_GUID@@PAUIUnknown@@PAUITypeInfo@@0PAPAX@Z
?ForcedShutdown@CSurrogateProcessActivator@@UAGJXZ
?Free@BstrDestroyer@DeserializeHelper@@EAEXPAX@Z
?Free@CCoTaskAllocator@@UAEXPAX@Z
?Free@CErrorSmAllocator@@UAGXPAX@Z
?Free@CEventCache@@QAEXPAX@Z
?Free@CSmAllocator@@UAGXPAX@Z
?Free@CallFrame@@QAEXPAX@Z
?Free@CallFrame@@UAGJPAUICallFrame@@PAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_CLIENT_FRAME@@UAGJPAUICallFrame@@PAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_SERVER_FRAME@@UAGJPAUICallFrame@@PAUICallFrameWalker@@1K1K@Z
?Free@SafeArrayDestroyer@DeserializeHelper@@EAEXPAX@Z
?FreeAssoc@CMapKeyToValue@@AAEXPAUCAssoc@1@@Z
?FreeAssocKey@CMapKeyToValue@@ABEXPAUCAssoc@1@@Z
?FreeBuffer@@YGXPAE@Z
?FreeBuffer@CChannelObject@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CCtxCall@@QAEXXZ
?FreeBuffer@CCtxChnl@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CCtxComChnl@@W3AGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CDdeServerCallMgr@@W3AGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CRpcChannelBuffer@@W3AGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@W3AGJPAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@MarshallingChannel@@UAGJPAUtagRPCOLEMESSAGE@@@Z
?FreeCleanupEntries@COXIDTable@@AAEXXZ
?FreeCurrentBuffers@CAddrExclusionList@@AAEXXZ
?FreeDataChain@CPlex@@QAEXXZ
?FreeDragDropInfo@@YGXPAX@Z
?FreeEmbeddedPointers@CallFrame@@QAEXPAEPBE@Z
?FreeEmbeddedRepeatPointers@CallFrame@@QAEPBEPAEPBE@Z
?FreeEntry@CGIPTable@@AAEXPAUtagGIPEntry@@@Z
?FreeExpiredEntries@COXIDTable@@QAEXK@Z
?FreeGDIdata@@YGHPAXG@Z
?FreeMetaDataCache@@YGXXZ
?FreeOXIDAndOIDs@OXIDEntry@@QAEJKPA_K@Z
?FreeObjRef@@YGXAAUtagOBJREF@@@Z
?FreePages@CMSFPageTable@@QAEXPAVCPagedVector@@@Z
?FreeParam@CallFrame@@UAGJKKPAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_CLIENT_FRAME@@UAGJKKPAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_SERVER_FRAME@@UAGJKKPAUICallFrameWalker@@K@Z
?FreePicklingBuff@@YGXPAUtagPCB@@@Z
?FreePokeData@@YGXPAX@Z
?FreePreRegMOID@@YGJABU_GUID@@@Z
?FreePreRegMOID@CComApartment@@QAEJABU_GUID@@@Z
?FreeRecord@OAUTIL@@AAEJPAXPAUIRecordInfo@@H@Z
?FreeRecord@OAUTIL@@AAEJPAXPAUITypeInfo@@H@Z
?FreeRecordField@OAUTIL@@AAEJPAEPAUtagTYPEDESC@@PAUITypeInfo@@H@Z
?FreeResources@CClipDataObject@@AAEXW4FreeResourcesFlags@@@Z
?FreeSrvrMem@CDDEServer@@AAEJXZ
?FreeStream@CDeltaList@@AAEXKK@Z
?FreeSurrogate@CCOMSurrogate@@SGJXZ
?FreeSurrogate@CSurrogateProcessActivator@@UAGJXZ
?FreeSurrogateIfNecessary@@YGXXZ
?FreeTable@CPagedVector@@QAEXK@Z
?FreeTypeInfoCache@@YGXXZ
?FreeUnused@CClassCache@@SGJK@Z
?FreeWorker@CallFrame@@QAEXPAEPBEH@Z
?Freeze@CCacheNode@@QAEJXZ
?Freeze@CCacheViewImpl@COleCache@@UAGJKJPAXPAK@Z
?Freeze@CObjectContext@@UAGJXZ
?GCOCallback@CProcessActivator@@EAGJKPAUIUnknown@@PAVActivationPropertiesIn@@PAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GIPTableApartmentUninitialize@@YGXXZ
?GIPTableContextUninitialize@@YGXXZ
?GIPTableProcessUninitialize@@YGXXZ
?GUIDToString@@YGXPBU_GUID@@PAG@Z
?GenerateDisplayName@CFileMoniker@@QAEJKPAG@Z
?GenerateRandomNumber@CRandomNumberGenerator@@QAEJPAEK@Z
?GenericObjectToIStorage@@YGJABVCGenericObject@@PAUIStorage@@PBUtagDVTARGETDEVICE@@@Z
?Get@CContextPropList@@QAEPAUtagContextProperty@@ABU_GUID@@@Z
?Get@CEventCache@@QAEJPAPAX@Z
?Get@CFastBH@@QAEPAXXZ
?GetAbsMkFromRel@CDefLink@@AAEJPAPAUIMoniker@@0@Z
?GetAccess@@YGJPAUILockBytes@@KPAK@Z
?GetAccessPermission@CComProcessInfo@@UAGJPAPAXPAK@Z
?GetAccessWithMask@@YGJPAUILockBytes@@KKPAK@Z
?GetActivateAtStorage@CComProcessInfo@@UAGJPAH@Z
?GetActivationFlags@ActivationPropertiesIn@@UAGJPAK@Z
?GetActivationID@ActivationPropertiesIn@@UAGJPAU_GUID@@@Z
?GetActivationID@ActivationPropertiesOut@@UAGJPAU_GUID@@@Z
?GetActivatorFromDllHost@CClassCache@@SGJHKPAK@Z
?GetActiveObject@CFrameFilter@@UAGJPAPAUIOleInPlaceActiveObject@@@Z
?GetActvFlags@CComActivator@@SGKK@Z
?GetAddress@CSmAllocator@@ABEPAVCBlockHeader@@K@Z
?GetAdvise@CCacheViewImpl@COleCache@@UAGJPAK0PAPAUIAdviseSink@@@Z
?GetAllAccessRights@CImpAccessControl@COAccessControl@@UAGJPAGPAPAU_ACTRL_ALISTW@@PAPAU_TRUSTEE_W@@2@Z
?GetAllOpaqueData@CComActivator@@UAGJPAPAUtagOpaqueData@@@Z
?GetAllOpaqueData@OpaqueDataInfo@@UAGJPAPAUtagOpaqueData@@@Z
?GetAllTimes@CDirEntry@@QAEXPAU_FILETIME@@00@Z
?GetAllTimes@CDirectory@@QAEJKPAU_FILETIME@@00@Z
?GetAllTimes@CDocFile@@QAEJPAU_FILETIME@@00@Z
?GetAllTimes@CMStream@@QAEJKPAU_FILETIME@@00@Z
?GetAllTimes@CStgHandle@@QAEJPAU_FILETIME@@00@Z
?GetAllTimes@CTransactedTimeEntry@@QAEXPAU_FILETIME@@00@Z
?GetAllTimes@CWrappedDocFile@@QAEJPAU_FILETIME@@00@Z
?GetAllTimes@PTimeEntry@@QAEJPAU_FILETIME@@00@Z
?GetAndTranslateOle1@CClipDataObject@@AAEJIPAPAG00PAPAD@Z
?GetApartment@ServerLocationInfo@@UAGJPAK@Z
?GetApartmentActivator@CProcessActivator@@EAGJPAVActivationPropertiesIn@@PAPAUISystemActivator@@@Z
?GetApartmentByID@@YGJKPAPAVCComApartment@@@Z
?GetApartmentChain@CClassCache@@SGPAVCLSvrClassEntry@1@H@Z
?GetApartmentClass@@YGJABU_GUID@@0PAPAX@Z
?GetApartmentToken@CDllHost@@UAGJAAK@Z
?GetAppIDFlags@CComProcessInfo@@UAGJPAK@Z
?GetApplication@CComClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetApplication@CComNoClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetApplication@CComSxSClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetApplicationInfo@CComCatalog@@UAGJABU_GUID@@0PAPAX@Z
?GetApplicationInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetApplicationInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetApplicationInfo@CComRegCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetApplicationInfo@CComSxSCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetApplicationInfoForExe@CComCatalog@@UAGJPAGABU_GUID@@PAPAX@Z
?GetApplicationInfoForExe@CComCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAX@Z
?GetApplicationInfoForExe@CComCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetApplicationInfoForExe@CComRegCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetApplicationInfoForExe@CComSxSCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetAssocAt@CMapKeyToValue@@ABEPAUCAssoc@1@PAXIAAI@Z
?GetAssocKeyPtr@CMapKeyToValue@@ABEXPAUCAssoc@1@PAPAXPAI@Z
?GetAssocValue@CMapKeyToValue@@ABEXPAUCAssoc@1@PAX@Z
?GetAsyncCallObject@@YGJPAUIUnknown@@0ABU_GUID@@1PAPAU1@PAPAX@Z
?GetAsyncIIDFromSyncIID@@YGJABU_GUID@@PAU1@@Z
?GetAsyncRemUnknown@CStdMarshal@@QAEJPAUIUnknown@@PAPAUAsyncIRemUnknown2@@PAPAU2@@Z
?GetAuthIdentity@SecurityInfo@@UAGJPAPAU_COAUTHIDENTITY@@@Z
?GetAuthenticationCapabilities@CComProcessInfo@@UAGJPAK@Z
?GetAuthenticationLevel@CComProcessInfo@@UAGJPAK@Z
?GetAuthnFlags@SecurityInfo@@UAGJPAK@Z
?GetAuthnLevel@SecurityInfo@@UAGJPAK@Z
?GetAuthnSvc@SecurityInfo@@UAGJPAK@Z
?GetAuthnSvcIndexForBinding@@YGKKPAUtagDUALSTRINGARRAY@@@Z
?GetAuthzSvc@SecurityInfo@@UAGJPAK@Z
?GetAvailableSize@Serializer@@QAEJPA_J@Z
?GetBase@CTransactedStream@@QAEPAVPSStream@@XZ
?GetBase@CWrappedDocFile@@QAEPAVPDocFile@@XZ
?GetBaseInterfaceIID@@YGJPAUITypeInfo@@PAU_GUID@@PAPAU1@@Z
?GetBaseMS@CPubDocFile@@QAEPAVCMStream@@XZ
?GetBaseMultiStream@CDFBasis@@QAEPAVCMStream@@XZ
?GetBinaryName@CComClassInfo@@UAGJPAPAG@Z
?GetBindInfo@CBindStatusCallback@@UAGJPAKPAU_tagBINDINFO@@@Z
?GetBindInfo@DefaultIBindStatusCallback@@UAGJPAKPAU_tagBINDINFO@@@Z
?GetBindOptions@CBindCtx@@UAGJPAUtagBIND_OPTS@@@Z
?GetBitmapData@CGenObject@@AAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetBits@CPagedVector@@QAEPAUCVectBits@@K@Z
?GetBoundSource@CDefLink@@UAGJPAPAUIUnknown@@@Z
?GetBuffer2@CCtxChnl@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@PAVCCtxCall@@HHPAK@Z
?GetBuffer2@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer2@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer2@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@@YGJKKPAPAEPAK@Z
?GetBuffer@CAptRpcChnl@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CAptRpcChnl@@W3AGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CChannelObject@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CCtxChnl@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CCtxComChnl@@W3AGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@W3AGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@CRpcChannelBuffer@@W3AGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@W3AGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetBuffer@GenericStream@@UAGJPAKPAPAE@Z
?GetBuffer@MarshallingChannel@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?GetCLSID@ContextInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@InstanceInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@InstantiationInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@OpaqueDataInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@OutSerializer@ActivationPropertiesOut@@UAGJPAU_GUID@@@Z
?GetCLSID@ScmReplyInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@ScmRequestInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@SecurityInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@ServerLocationInfo@@UAGJPAU_GUID@@@Z
?GetCLSID@SpecialProperties@@UAGJPAU_GUID@@@Z
?GetCOMVersion@ActivationPropertiesIn@@UAGJPAUtagCOMVERSION@@@Z
?GetCOSERVERINFO@SecurityInfo@@UAGJPAPAU_COSERVERINFO@@@Z
?GetCallCat@@YG?AW4tagCALLCATEGORY@@PAX@Z
?GetCallContext@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@PAPAX@Z
?GetCallContext@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@PAPAX@Z
?GetCallContext@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@PAPAX@Z
?GetCallFrame@CallFrame@@UAGPAV1@XZ
?GetCallInfo@CRpcCall@@UAGJPAPBXPAU_GUID@@PAKPAJ@Z
?GetCallObject@@YGJHPAPAVCMessageCall@@@Z
?GetCallSource@CRpcCall@@UAGJPAW4_CALLSOURCE@@@Z
?GetCallTypeForInCall@CAptCallCtrl@@QAEKPAPAVCCliModalLoop@@ABU_GUID@@K@Z
?GetCanonicalFormatEtc@CCacheDataImpl@COleCache@@UAGJPAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CClipDataObject@@UAGJPAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDataObjectImpl@CDdeObject@@UAGJPAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefLink@@UAGJPAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefObject@@UAGJPAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDragDataObject@@UAGJPAUtagFORMATETC@@0@Z
?GetCapabilities@SecurityInfo@@UAGJPAK@Z
?GetCatalogObject@ActivationProperties@@UAGJABU_GUID@@PAPAX@Z
?GetCategoryDesc@CComCat@@SGJPAUHKEY__@@KPAPAGPAK@Z
?GetCategoryDesc@CComCat@@UAGJABU_GUID@@KPAPAG@Z
?GetCategoryDesc@CsCatInfo@@UAGJABU_GUID@@KPAPAG@Z
?GetChannelCallMgr@@YGJPAUtagRPCOLEMESSAGE@@PAUIUnknown@@1PAPAVCServerCallMgr@CRpcChannelBuffer@@@Z
?GetChild@CDirectory@@QAEJKPAK@Z
?GetClass@ActivationPropertiesIn@@UAEJABU_GUID@@PAPAVSerializableProperty@@HPAH@Z
?GetClass@ActivationPropertiesOut@@UAEJABU_GUID@@PAPAVSerializableProperty@@HPAH@Z
?GetClass@CDocFile@@QAEJPAU_GUID@@@Z
?GetClass@CStgHandle@@QAEJPAU_GUID@@@Z
?GetClass@CWrappedDocFile@@QAEJPAU_GUID@@@Z
?GetClass@PDocFile@@QAEJPAU_GUID@@@Z
?GetClassBits@CDefObject@@AAEJPAU_GUID@@@Z
?GetClassContext@CComClassInfo@@UAGJW4tagCLSCTX@@PAW42@@Z
?GetClassContext@CComNoClassInfo@@UAGJW4tagCLSCTX@@PAW42@@Z
?GetClassContext@CComSxSClassInfo@@UAGJW4tagCLSCTX@@PAW42@@Z
?GetClassID@CAntiMoniker@@EAGJPAU_GUID@@@Z
?GetClassID@CClassMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@CCompositeMoniker@@EAGJPAU_GUID@@@Z
?GetClassID@CDefLink@@UAGJPAU_GUID@@@Z
?GetClassID@CDefObject@@UAGJPAU_GUID@@@Z
?GetClassID@CFileMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@CImpAccessControl@COAccessControl@@UAGJPAU_GUID@@@Z
?GetClassID@CItemMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@CLUAMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@CObjrefMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@COleCache@@UAGJPAU_GUID@@@Z
?GetClassID@CPackagerMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@CPersistStgImpl@CDdeObject@@UAGJPAU_GUID@@@Z
?GetClassID@CPointerMoniker@@UAGJPAU_GUID@@@Z
?GetClassID@CSessionMoniker@@UAGJPAU_GUID@@@Z
?GetClassId@CDirectory@@QAEJKPAU_GUID@@@Z
?GetClassInfoByApplication@CComCatalog@@UAGJABU_GUID@@000PAPAX@Z
?GetClassInfoByApplication@CComCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@111PAPAXPAX@Z
?GetClassInfoByPartition@CComCatalog@@UAGJABU_GUID@@00PAPAX@Z
?GetClassInfoByPartition@CComCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@11PAPAXPAX@Z
?GetClassInfoFlags@@YGXPAVActivationPropertiesIn@@PAH11@Z
?GetClassInfoFromClsid@@YGJABU_GUID@@PAPAUIComClassInfo@@K@Z
?GetClassInfoFromProgId@CComCatalog@@UAGJPAGABU_GUID@@PAPAX@Z
?GetClassInfoFromProgId@CComCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAX@Z
?GetClassInfoFromProgId@CComCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetClassInfoFromProgId@CComRegCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetClassInfoFromProgId@CComSxSCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetClassInfoInternal@CComCatalog@@AAGJKPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetClassInfoW@ActivationPropertiesIn@@UAGJABU_GUID@@PAPAX@Z
?GetClassInfoW@CComCatalog@@UAGJABU_GUID@@0PAPAX@Z
?GetClassInfoW@CComCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetClassInfoW@CComCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetClassInfoW@CComRegCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetClassInfoW@CComSxSCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetClassInformationForDde@CClassCache@@SGHABU_GUID@@PAU_tagDdeClassInfo@@@Z
?GetClassInformationFromKey@CClassCache@@SGHPAU_tagDdeClassInfo@@@Z
?GetClassInterface@CDllClassEntry@CClassCache@@UAEJPAPAVIMiniMoniker@2@@Z
?GetClassInterface@CLSvrClassEntry@CClassCache@@UAEJPAPAVIMiniMoniker@2@@Z
?GetClassNameW@CComClassInfo@@UAGJPAPAG@Z
?GetClassNameW@CComNoClassInfo@@UAGJPAPAG@Z
?GetClassNameW@CComSxSClassInfo@@UAGJPAPAG@Z
?GetClassObject@CApartmentActivator@@UAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObject@CClassCache@@SGJABUACTIVATION_PROPERTIES@@@Z
?GetClassObject@CClientContextActivator@@UAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObject@CDllClassEntry@CClassCache@@UAEJABU_GUID@@0PAPAUIUnknown@@K@Z
?GetClassObject@CDllHost@@QAEJ_KABU_GUID@@1PAPAUIUnknown@@K@Z
?GetClassObject@CLSvrClassEntry@CClassCache@@UAEJABU_GUID@@0PAPAUIUnknown@@K@Z
?GetClassObject@CLUAMoniker@@UAGJABU_GUID@@KK0PAPAX@Z
?GetClassObject@CObjServer@@UAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObject@CProcessActivator@@UAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObject@CRpcResolver@@QAEJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObject@CServerContextActivator@@UAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObject@CSessionMoniker@@UAGJABU_GUID@@KK0PAPAX@Z
?GetClassObject@CSurrogateProcessActivator@@UAGJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@@Z
?GetClassObjectActivator@CClassCache@@SGJKABUACTIVATION_PROPERTIES@@PAPAVIMiniMoniker@1@@Z
?GetClientContext@ContextInfo@@UAGJPAPAUIContext@@@Z
?GetClientImpersonating@CComActivator@@UAGJPAH@Z
?GetClientImpersonating@SpecialProperties@@UAGJPAH@Z
?GetClientInterfaceInfo@CRIFTable@@QAEPAU_RPC_CLIENT_INTERFACE@@ABU_GUID@@@Z
?GetClientNetworkAddress@@YGPAGPAX@Z
?GetClientPolicySet@CStdMarshal@@QAEPAVCPolicySet@@XZ
?GetClientSite@CDefLink@@UAGJPAPAUIOleClientSite@@@Z
?GetClientSite@CDefObject@@UAGJPAPAUIOleClientSite@@@Z
?GetClientSite@COleObjectImpl@CDdeObject@@UAGJPAPAUIOleClientSite@@@Z
?GetClientToken@ActivationPropertiesIn@@UAGJPAPAX@Z
?GetClipDataObjectFromTLS@@YGXPAPAUIDataObject@@@Z
?GetClipboardData@CDefLink@@UAGJKPAPAUIDataObject@@@Z
?GetClipboardData@CDefObject@@UAGJKPAPAUIDataObject@@@Z
?GetClipboardData@COleObjectImpl@CDdeObject@@UAGJKPAPAUIDataObject@@@Z
?GetClsctx@ActivationPropertiesIn@@UAGJPAK@Z
?GetClsid@ActivationPropertiesIn@@UAGJPAU_GUID@@@Z
?GetClsid@CProcessExtensionTbl@@QAEJPBGPAU_GUID@@@Z
?GetColorSet@CCacheNode@@QAEJPAXPAUHDC__@@PAPAUtagLOGPALETTE@@@Z
?GetColorSet@CCacheViewImpl@COleCache@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z
?GetColorSet@CEMfObject@@UAGJPAXPAUHDC__@@PAPAUtagLOGPALETTE@@@Z
?GetColorSet@CGenObject@@UAGJPAXPAUHDC__@@PAPAUtagLOGPALETTE@@@Z
?GetColorSet@CMfObject@@UAGJPAXPAUHDC__@@PAPAUtagLOGPALETTE@@@Z
?GetComActivatorForStage@@YGPAUISystemActivator@@W4tagACTIVATION_STAGE@@@Z
?GetComVersion@CDestObject@@UAGJAAUtagCOMVERSION@@@Z
?GetComVersion@CDestObjectWrapper@@UAGJAAUtagCOMVERSION@@@Z
?GetCommandPathAndDebug@CComProcessInfo@@UAGJPAHPAPAG@Z
?GetCommitInfo@CTransactedStream@@QAEXPA_K0@Z
?GetCommitInfo@CWrappedDocFile@@QAEXPA_K0@Z
?GetCommitInfo@PTSetMember@@QAEXPA_K0@Z
?GetCommitSize@CPubDocFile@@IAEJPA_K@Z
?GetComparisonData@CAntiMoniker@@UAGJPAEKPAK@Z
?GetComparisonData@CBaseMoniker@@UAGJPAEKPAK@Z
?GetComparisonData@CClassMoniker@@UAGJPAEKPAK@Z
?GetComparisonData@CCompositeMoniker@@EAGJPAEKPAK@Z
?GetComparisonData@CFileMoniker@@UAGJPAEKPAK@Z
?GetComparisonData@CItemMoniker@@UAGJPAEKPAK@Z
?GetComparisonData@CLUAMoniker@@UAGJPAEKPAK@Z
?GetComparisonData@CSessionMoniker@@UAGJPAEKPAK@Z
?GetConfiguredClsid@CComClassInfo@@UAGJPAPAU_GUID@@@Z
?GetConfiguredClsid@CComNoClassInfo@@UAGJPAPAU_GUID@@@Z
?GetConfiguredClsid@CComSxSClassInfo@@UAGJPAPAU_GUID@@@Z
?GetConnection@CRpcResolver@@QAEJXZ
?GetConnectionInterface@CAsyncConnection@@UAGJPAU_GUID@@@Z
?GetConnectionPointContainer@CAsyncConnection@@UAGJPAPAUIConnectionPointContainer@@@Z
?GetConnectionStatus@CProxyManagerImpl@CDdeObject@@UAGJXZ
?GetConnectionStatus@CStdIdentity@@UAGJXZ
?GetContainer@COleClientSiteImpl@CDefClient@@UAGJPAPAUIOleContainer@@@Z
?GetContext@ServerLocationInfo@@UAGJPAPAUIObjContext@@@Z
?GetContextFlags@CObjectContext@@UAGJPAK@Z
?GetContextId@CObjectContext@@UAGJPAU_GUID@@@Z
?GetContextInfo@ActivationPropertiesIn@@QAEJPAPAVContextInfo@@@Z
?GetContextMarshaler@CObjectContext@@UAGJPAPAUIContextMarshaler@@@Z
?GetControlFat@CDeltaList@@QAEPAVCFat@@XZ
?GetControlILB@CDeltaList@@QAEPAUILockBytes@@XZ
?GetControlKeysState@@YGGH@Z
?GetControlKeysStateOfParam@@YGGI@Z
?GetControlSectorSize@CDeltaList@@QAEGXZ
?GetControlStreamName@@YGPBGXZ
?GetCopiedFormatEtcDataArraySize@@YGJPAUFORMATETCDATAARRAY@@PAI@Z
?GetCopy@GenericStream@@UAGJPAE@Z
?GetCopy@Serializer@@QAEJPAPAV1@@Z
?GetCopyBase@CDFBasis@@QAEPAVCPubDocFile@@XZ
?GetCopyOfHPRES@CGenObject@@AAEPAXXZ
?GetCopyOfHPRES@CMfObject@@AAEPAXXZ
?GetCount@CObjectContext@@QAEKXZ
?GetCrmLogFileName@CComProcessInfo@@UAGJPAPAG@Z
?GetCsCatInfo@CComCat@@AAEJXZ
?GetCurrentAddrExclusionList@CAddrControl@@UAGJABU_GUID@@PAPAX@Z
?GetCurrentAddrExclusionList@CRpcResolver@@QAEJPAKPAPAPAG@Z
?GetCurrentApartmentId@@YGKXZ
?GetCurrentApartmentKind@@YG?AW4tagAPTKIND@@AAVCOleTls@@@Z
?GetCurrentApartmentKind@@YG?AW4tagAPTKIND@@XZ
?GetCurrentApartmentToken@@YGJAAKH@Z
?GetCurrentApartmentType@CObjectContext@@UAGJPAW4_APTTYPE@@@Z
?GetCurrentComApartment@@YGJPAPAVCComApartment@@@Z
?GetCurrentContext@@YGPAVCObjectContext@@XZ
?GetCurrentLogicalThreadId@CObjectContext@@UAGJPAU_GUID@@@Z
?GetCurrentMachineNames@CRpcResolver@@QAEJPAPAVCMachineNamesHelper@@@Z
?GetCurrentProcessDefaultStackCommit@CThreadStack@@AAEHXZ
?GetCurrentThreadType@CObjectContext@@UAGJPAW4_THDTYPE@@@Z
?GetCurrentToken@@YGJPAPAX@Z
?GetCustomActivatorClsids@CComClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAPAU_GUID@@@Z
?GetCustomActivatorClsids@CComNoClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAPAU_GUID@@@Z
?GetCustomActivatorClsids@CComSxSClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAPAU_GUID@@@Z
?GetCustomActivatorCount@CComClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAK@Z
?GetCustomActivatorCount@CComNoClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAK@Z
?GetCustomActivatorCount@CComSxSClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAK@Z
?GetCustomActivators@CComClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAPAPAUISystemActivator@@@Z
?GetCustomActivators@CComNoClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAPAPAUISystemActivator@@@Z
?GetCustomActivators@CComSxSClassInfo@@UAGJW4tagACTIVATION_STAGE@@PAPAPAUISystemActivator@@@Z
?GetCustomUnmarshaler@@YGJABU_GUID@@PAUIStream@@PAPAUIMarshal@@@Z
?GetDCE@CDllFnPtrMoniker@CClassCache@@UAGJPAPAVCDllClassEntry@2@@Z
?GetDCE@CpUnkMoniker@CClassCache@@UAGJPAPAVCDllClassEntry@2@@Z
?GetDCOMProtocolVersion@CRpcHelper@@UAGJPAK@Z
?GetDDEInfo@CLSvrClassEntry@CClassCache@@QAEJPAU_tagDdeClassInfo@@PAPAVIMiniMoniker@2@@Z
?GetDF@CPubDocFile@@QBEPAVPDocFile@@XZ
?GetDarwinIdentifier@CComClassInfo@@AAGJHPAUHKEY__@@PBGPAPAG@Z
?GetData@CCacheDataImpl@COleCache@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CCacheNode@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CClipDataObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CDataObjectImpl@CDdeObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CDefClient@@AAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CDefLink@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CDefObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CDragDataObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CEMfObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CGenObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetData@CMfObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataDelegate@CDefLink@@QAEPAUIDataObject@@XZ
?GetDataDelegate@CDefObject@@QAEPAUIDataObject@@XZ
?GetDataFat@CDeltaList@@QAEPAVCFat@@XZ
?GetDataFromDescriptor@@YGJPAUIDataObject@@PAU_GUID@@IW4tagGETCLSIDFLAGS@@PAPAGPAK@Z
?GetDataFromStorage@@YGJPAUIDataObject@@PAUtagFORMATETC@@PAUtagSTGMEDIUM@@PAPAUIStorage@@@Z
?GetDataFromStream@@YGJPAUIDataObject@@PAUtagFORMATETC@@PAUtagSTGMEDIUM@@PAPAUIStream@@@Z
?GetDataHere@CCacheDataImpl@COleCache@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CCacheNode@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CClipDataObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CDataObjectImpl@CDdeObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefLink@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CDragDataObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CEMfObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CGenObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataHere@CMfObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?GetDataILB@CDeltaList@@QAEPAUILockBytes@@XZ
?GetDataSectorShift@CDeltaList@@QAEGXZ
?GetDataSectorSize@CDeltaList@@QAEGXZ
?GetDefaultAccessPermissionsSD@CRpcResolver@@QAEPAU_SECURITY_DESCRIPTOR@@XZ
?GetDefaultAccessRestrictionsSD@CRpcResolver@@QAEPAU_SECURITY_DESCRIPTOR@@XZ
?GetDefaultAuthenticationLevel@CComActivator@@UAGJPAK@Z
?GetDefaultAuthenticationLevel@SpecialProperties@@UAGJPAK@Z
?GetDefaultCursorObject@CDragDefaultCursors@@SGPAV1@XZ
?GetDefaultIcon@@YGJABU_GUID@@PBGPAPAX@Z
?GetDelegatedMethodCount@@YGIPBUtagCInterfaceStubHeader@@@Z
?GetDeltaList@CDirectStream@@QAEPAVCDeltaList@@XZ
?GetDeltaList@CTransactedStream@@QAEPAVCDeltaList@@XZ
?GetDeltaList@PSStream@@QAEPAVCDeltaList@@XZ
?GetDescription@CErrorObject@@UAGJPAPAG@Z
?GetDestCtx@@YGKPAPAX@Z
?GetDestCtx@ActivationPropertiesIn@@UAGJPAK@Z
?GetDestCtx@CChannelObject@@UAGJPAKPAPAX@Z
?GetDestCtx@CCtxChnl@@UAGJPAKPAPAX@Z
?GetDestCtx@CDdeServerCallMgr@@UAGJPAKPAPAX@Z
?GetDestCtx@CDdeServerCallMgr@@W3AGJPAKPAPAX@Z
?GetDestCtx@CDestObject@@UAGJAAK@Z
?GetDestCtx@CDestObjectWrapper@@UAGJAAK@Z
?GetDestCtx@CRpcChannelBuffer@@UAGJPAKPAPAX@Z
?GetDestCtx@CRpcChannelBuffer@@W3AGJPAKPAPAX@Z
?GetDestCtx@DDE_CHANNEL@@UAGJPAKPAPAX@Z
?GetDestCtx@DDE_CHANNEL@@W3AGJPAKPAPAX@Z
?GetDestCtx@MarshallingChannel@@UAGJPAKPAPAX@Z
?GetDestCtxEx@CChannelObject@@UAGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@W3AGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxEx@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxEx@CRpcChannelBuffer@@W3AGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxEx@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxEx@DDE_CHANNEL@@W3AGJPAUtagRPCOLEMESSAGE@@PAKPAPAX@Z
?GetDestCtxPtr@@YGPAXPAUtagCOMVERSION@@@Z
?GetDir@CStreamCache@@AAEPAVCDirectory@@XZ
?GetDirEntry@CDirectory@@QAEJKKPAPAVCDirEntry@@@Z
?GetDisplayName@CAntiMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CBaseMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CClassMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CComClassInfo@@UAGJPAPAG@Z
?GetDisplayName@CCompositeMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CFileMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CItemMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CLUAMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CObjrefMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CPackagerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CPointerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayName@CSessionMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAPAG@Z
?GetDisplayNameLength@CFileMoniker@@QAEJPAK@Z
?GetDocFile@CDocFile@@QAEJPBVCDfName@@KPAPAVPDocFile@@@Z
?GetDocFile@CPubDocFile@@QAEJPBVCDfName@@KPAPAV1@@Z
?GetDocFile@CWrappedDocFile@@QAEJPBVCDfName@@KPAPAVPDocFile@@@Z
?GetDocFile@PDocFile@@QAEJPBVCDfName@@KPAPAV1@@Z
?GetDriveLetter@@YGGPBG@Z
?GetDropTarget@CDragOperation@@AAEJPAUHWND__@@0@Z
?GetESect@CFat@@QAEJKKPAK@Z
?GetESect@CMStream@@QAEJKKPAK@Z
?GetESect@CStreamCache@@QAEJKPAK@Z
?GetEffAccRights@CImpAccessControl@COAccessControl@@AAGJPAU_TRUSTEE_W@@PAK@Z
?GetElapsedTime@CCliModalLoop@@QAEKXZ
?GetElement@CCache@@QAGJKGPAPAEPBGPAGPAPAUIUnknown@@@Z
?GetElement@CCache@@QAGJKPAEGPAGPAPAUIUnknown@@@Z
?GetEmbedSourceFromOle1@CClipDataObject@@AAEJPAUtagSTGMEDIUM@@@Z
?GetEmbeddedObjectFromOle1@CClipDataObject@@AAEJPAUtagSTGMEDIUM@@@Z
?GetEmptyContext@@YGPAVCObjectContext@@XZ
?GetEndpoints@CComProcessInfo@@UAGJPAKPAPAUtagDCOM_ENDPOINT@@@Z
?GetEntry@CCallTable@@QAEPAUICancelMethodCalls@@K@Z
?GetEntry@CStgHandle@@QAEJPBVCDfName@@KPAVCHandle@@@Z
?GetEntryIndex@CInternalPageAllocator@@QAEJPAUtagPageEntry@@@Z
?GetEntryIndex@CPageAllocator@@QAEJPAUtagPageEntry@@@Z
?GetEntryPtr@CGIPTable@@AAEJKPAPAUtagGIPEntry@@@Z
?GetEntryPtr@CInternalPageAllocator@@QAEPAUtagPageEntry@@J@Z
?GetEntryPtr@CPageAllocator@@QAEPAUtagPageEntry@@J@Z
?GetEnvBlock@@YGHPAU_PRIV_SCM_INFO@@@Z
?GetEnvoyData@CObjectContext@@QAEJPAPAUtagDATAELEMENT@@@Z
?GetEnvoySizeMax@CObjectContext@@UAGJKPAK@Z
?GetEnvoyUnmarshalClass@CObjectContext@@UAGJKPAU_GUID@@@Z
?GetEventLogger@CDebugEventFire@@QAEJPAPAUISystemDebugEventFire@@@Z
?GetExtent@CCacheNode@@QAEJKPAUtagSIZE@@@Z
?GetExtent@CCacheViewImpl@COleCache@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z
?GetExtent@CDefLink@@UAGJKPAUtagSIZE@@@Z
?GetExtent@CDefObject@@UAGJKPAUtagSIZE@@@Z
?GetExtent@CEMfObject@@UAGJKPAUtagSIZE@@@Z
?GetExtent@CGenObject@@UAGJKPAUtagSIZE@@@Z
?GetExtent@CMfObject@@UAGJKPAUtagSIZE@@@Z
?GetExtent@COleCache@@QAEJKPAUtagSIZE@@@Z
?GetExtent@COleObjectImpl@CDdeObject@@UAGJKPAUtagSIZE@@@Z
?GetFQDN@CRpcResolver@@QAEJPAPAG@Z
?GetFailureInfo@CFileStream@@UAGJPAK0@Z
?GetFailureInfo@CFillLockBytes@@UAGJPAK0@Z
?GetFat@CStreamCache@@AAEPAVCFat@@XZ
?GetFatSect@CDIFat@@QAEJKPAK@Z
?GetFile@InstanceInfo@@UAGJPAPAGPAK@Z
?GetFilePath@CNtfsStorage@@AAEJPAPAG@Z
?GetFilePointer@CFileStream@@AAE_KXZ
?GetFirstAuthnSvcIndex@@YGKPAUtagDUALSTRINGARRAY@@@Z
?GetFlags@CDirectory@@QAEJKPAK@Z
?GetFormatEtcDataArray@CClipDataObject@@AAEJXZ
?GetFormatEtcDataArray@CDragDataObject@@AAEJXZ
?GetFrame@CallFrame@@QAEPAV1@AAPAV1@PAX@Z
?GetFree@CDirectory@@AAEJPAK@Z
?GetFree@CFat@@QAEJKPAKH@Z
?GetFreeChunk@CStreamChunkList@@QAEPAUCStreamChunk@@PAJ@Z
?GetFreeContig@CFat@@QAEJKPAUSSegment@@KPAK@Z
?GetFreeEntry@CtxEntry@@SGPAV1@PAPAV1@K@Z
?GetFreePage@CMSFPageTable@@QAEJPAPAVCMSFPage@@@Z
?GetFuncDescs@@YGJPAUITypeInfo@@PAUtagMethodInfo@@@Z
?GetGUID@CErrorObject@@UAGJPAU_GUID@@@Z
?GetHandle@CClientCallMgr@@UAGJPAPAX@Z
?GetHandle@CManualResetEvent@@UAGJPAPAX@Z
?GetHandle@CRpcChannelBuffer@@QAEJPAPAVCChannelHandle@@H@Z
?GetHandle@CStdEvent@@UAGJPAPAX@Z
?GetHead@CTSSet@@QAEPAVPTSetMember@@XZ
?GetHead@CUpdateList@@QBEPAVCUpdate@@XZ
?GetHelpContext@CErrorObject@@UAGJPAK@Z
?GetHelpFile@CErrorObject@@UAGJPAPAG@Z
?GetHelper@CallFrame@@QBE?AUOAUTIL@@XZ
?GetHmfp@CMfObject@@AAEPAXXZ
?GetHostProxy@CDllHost@@AAEPAUIDLLHost@@XZ
?GetIDestInfo@CDestObjectWrapper@@UAGXPAPAX@Z
?GetIDsOfNames@LEGACY_INTERCEPTOR@@QAGJPBU_GUID@@PAPAGIKPAJ@Z
?GetIDsOfNames@LEGACY_INTERCEPTOR@@UAGJABU_GUID@@PAPAGIKPAJ@Z
?GetIFDFromInterface@@YGJPAUIUnknown@@ABU_GUID@@KKPAPAUtagMInterfacePointer@@@Z
?GetIFaceEntry@CStdWrapper@@QAEPAVIFaceEntry@@ABU_GUID@@@Z
?GetIID@Interceptor@@EAGJPAU_GUID@@@Z
?GetIID@Interceptor@@EAGJPAU_GUID@@PAHPAKPAPAG@Z
?GetIID@LEGACY_INTERCEPTOR@@UAGJPAU_GUID@@@Z
?GetIID@LEGACY_INTERCEPTOR@@UAGJPAU_GUID@@PAHPAKPAPAG@Z
?GetIIDAndMethod@CallFrame@@UAGJPAU_GUID@@PAK@Z
?GetIIDAndMethod@DISPATCH_FRAME@@UAGJPAU_GUID@@PAK@Z
?GetIIDFromOBJREF@CRpcHelper@@UAGJPAXPAPAU_GUID@@@Z
?GetIIDFromObjRef@@YGJAAUtagOBJREF@@PAPAU_GUID@@@Z
?GetILB@CMStream@@QBEPAUILockBytes@@XZ
?GetIPIDEntry@@YGPAUtagIPIDEntry@@ABU_GUID@@@Z
?GetIconReference@CComClassInfo@@UAGJPAPAG@Z
?GetIdentity@CIDObject@@UAGJPAPAUIUnknown@@@Z
?GetIfdROT@InstanceInfo@@UAGJPAPAUtagMInterfacePointer@@@Z
?GetImpLevel@CRpcChannelBuffer@@QAEKXZ
?GetImpLevel@SecurityInfo@@UAGJPAK@Z
?GetImpersonationLevel@CComProcessInfo@@UAGJPAK@Z
?GetImplInterface@CStdWrapper@@QAEPAXABU_GUID@@@Z
?GetImplementedClsid@CComClassInfo@@UAGJPAPAU_GUID@@@Z
?GetImplementedClsid@CComNoClassInfo@@UAGJPAPAU_GUID@@@Z
?GetImplementedClsid@CComSxSClassInfo@@UAGJPAPAU_GUID@@@Z
?GetIndex@ActivationPropertiesIn@@UAGJPAH@Z
?GetIndicator@CCliRotHintTable@@QAEHK@Z
?GetInfo@CallFrame@@UAGJPAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@LEGACY_FRAME@@UAGJPAU__MIDL_ICallFrame_0001@@@Z
?GetInstanceHelper@@YGJPAU_COSERVERINFO@@PAU_GUID@@PAUIUnknown@@KKPAGPAUIStorage@@KPAUtagMULTI_QI@@PAVActivationPropertiesIn@@@Z
?GetInstanceHelperMulti@@YGJPAUIClassFactory@@KPAU_GUID@@PAPAUtagMInterfacePointer@@PAJPAPAUIUnknown@@PAVCDestObject@@@Z
?GetInstantiationInfo@ActivationPropertiesIn@@QAEJPAPAVInstantiationInfo@@@Z
?GetInterfaceFromGlobal@CGIPTable@@UAGJKABU_GUID@@PAPAX@Z
?GetInterfaceFromStdGlobal@@YGJKABU_GUID@@PAPAX@Z
?GetInterfaceFromWindowProp@CInterfaceFromWindowProp@@UAGJPAUHWND__@@ABU_GUID@@PAPAUIUnknown@@PAG@Z
?GetInterfaceHelperClsid@@YGJABU_GUID@@PAU1@PAH@Z
?GetInterfaceInfo@CComCatalog@@UAGJABU_GUID@@0PAPAX@Z
?GetInterfaceInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetInterfaceInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetInterfaceInfo@CComRegCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetInterfaceInfo@CComSxSCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetInternalClientContext@ContextInfo@@QAEJPAPAVCObjectContext@@@Z
?GetInternalContext@ServerLocationInfo@@QAEJPAPAVCObjectContext@@@Z
?GetInternalInterceptor@LEGACY_INTERCEPTOR@@QAEJABU_GUID@@PAPAUICallInterceptor@@@Z
?GetInternalPrototypeContext@ContextInfo@@QAEJPAPAVCObjectContext@@@Z
?GetItem@?$CArray@VCCacheNode@@@@QAEPAVCCacheNode@@K@Z
?GetItem@?$CArray@VCFormatEtc@@@@QAEPAVCFormatEtc@@K@Z
?GetItem@?$CArray@VCStatData@@@@QAEPAVCStatData@@K@Z
?GetItem@CMonikerPtrBuf@@QAEPAUIMoniker@@K@Z
?GetIterator@CEndpointsTable@@QAEKXZ
?GetKeyForReading@CComCat@@CGJABU_GUID@@PAPAUHKEY__@@@Z
?GetLCID@CPropertyBagEx@@AAEJXZ
?GetLUAEnabledSetting@CComClassInfo@@UAGJPAH@Z
?GetLUARunLevel@CComActivator@@UAGJPAK0@Z
?GetLUARunLevel@SpecialProperties@@UAGJPAK0@Z
?GetLaunchPermission@CComProcessInfo@@UAGJPAPAXPAK@Z
?GetLegacyBlanket@@YGJPAPAU_SECURITY_DESCRIPTOR@@PAK1@Z
?GetLength@CFat@@QAEJKPAK@Z
?GetLength@GenericStream@@UAGJPAK@Z
?GetLife@CObjectContext@@QAEPAVCContextLife@@XZ
?GetLinkSourceFromOle1@CClipDataObject@@AAEJPAUtagSTGMEDIUM@@@Z
?GetLocalBlob@ActivationProperties@@UAGJPAPAX@Z
?GetLocalMIDEntry@CMIDTable@@QAEJPAPAVMIDEntry@@@Z
?GetLocalOXIDEntry@@YGJPAPAVOXIDEntry@@@Z
?GetLocalResolverBindings@CRpcResolver@@QAEJPAPAVCDualStringArray@@@Z
?GetLocalRunningObjectForDde@@YGJPAGPAPAUIUnknown@@@Z
?GetLocalServer32BinaryBitness@CComClassInfo@@UAGJPAK@Z
?GetLocalServerType@CComClassInfo@@UAGJPAW4tagLocalServerType@@@Z
?GetLocalServerType@CComNoClassInfo@@UAGJPAW4tagLocalServerType@@@Z
?GetLocalServerType@CComSxSClassInfo@@UAGJPAW4tagLocalServerType@@@Z
?GetLockEntry@LockEntry@@SGPAV1@QAVCRWLock@@@Z
?GetLocksSupported@CFileStream@@UAGJPAK@Z
?GetMIDEntry@OXIDEntry@@QAEPAVMIDEntry@@XZ
?GetMS@CHandle@@QBEPAVCMStream@@XZ
?GetMStream@CDeltaList@@QAEPAVCMStream@@XZ
?GetMalloc@CMStream@@QBEPAUIMalloc@@XZ
?GetManifestLocation@CComProcessInfo@@UAGJPAPAG@Z
?GetMap@CDeltaList@@QAEJKKPAK@Z
?GetMapping@CProxyManagerImpl@CDdeObject@@UAGPAXXZ
?GetMapping@CStdIdentity@@UAGPAXXZ
?GetMarshalFlags@ActivationProperties@@UAGJPAK@Z
?GetMarshalSizeMax@ActivationProperties@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CClassMoniker@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CDestObjectWrapper@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CDocfileUnmarshalFactory@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CErrorObject@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CExposedDocFile@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CExposedStream@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CFreeMarshaler@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CMarshalImplPStream@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CObjectContext@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CPointerMoniker@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CSimpStorage@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CSimpStream@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CStaticWrapper@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CStdMarshal@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CStdWrapper@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalSizeMax@CallFrame@@UAGJPAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PAK@Z
?GetMarshalSizeMax@DISPATCH_CLIENT_FRAME@@UAGJPAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PAK@Z
?GetMarshalSizeMax@DISPATCH_SERVER_FRAME@@UAGJPAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PAK@Z
?GetMarshalSizeMax@InprocActpropsUnmarshaller@@UAGJABU_GUID@@PAXK1KPAK@Z
?GetMarshalledInterfaceBuffer@@YGJABU_GUID@@PAUIUnknown@@PAPAX@Z
?GetMarshalledResults@ActivationPropertiesOut@@UAGJPAKPAPAU_GUID@@PAPAJPAPAPAUtagMInterfacePointer@@@Z
?GetMarshallerFor@MarshallingChannel@@UAGJABU_GUID@@PAXPAPAUIMarshalSomeone@@@Z
?GetMaxSect@CFat@@QAEJPAK@Z
?GetMemoryFrame@LEGACY_FRAME@@QAEJXZ
?GetMemoryFrameFor@LEGACY_INTERCEPTOR@@QAEJPAPAUICallFrame@@PAULEGACY_FRAME@@@Z
?GetMethodInfo@Interceptor@@EAGJKPAU__MIDL_ICallFrame_0001@@PAPAG@Z
?GetMethodInfo@LEGACY_INTERCEPTOR@@UAGJKPAU__MIDL_ICallFrame_0001@@PAPAG@Z
?GetMiniFat@CStreamCache@@AAEPAVCFat@@XZ
?GetMiniStream@CMStream@@QBEPAVCDirectStream@@XZ
?GetMiscStatus@CDefLink@@UAGJKPAK@Z
?GetMiscStatus@CDefObject@@UAGJKPAK@Z
?GetMiscStatus@COleObjectImpl@CDdeObject@@UAGJKPAK@Z
?GetModulePath@CComClassInfo@@UAGJW4tagCLSCTX@@PAPAG@Z
?GetModulePath@CComNoClassInfo@@UAGJW4tagCLSCTX@@PAPAG@Z
?GetModulePath@CComSxSClassInfo@@UAGJW4tagCLSCTX@@PAPAG@Z
?GetMoniker@CDefLink@@UAGJKKPAPAUIMoniker@@@Z
?GetMoniker@CDefObject@@UAGJKKPAPAUIMoniker@@@Z
?GetMoniker@COleClientSiteImpl@CDefClient@@UAGJKKPAPAUIMoniker@@@Z
?GetMoniker@COleObjectImpl@CDdeObject@@UAGJKKPAPAUIMoniker@@@Z
?GetMonikerCompareBuffer@@YGJPAUIMoniker@@PAVCTmpMkEqBuf@@PAU_FILETIME@@PAPAUtagInterfaceData@@@Z
?GetMonikerType@@YGKPAUIMoniker@@@Z
?GetMsgQInputFlag@@YGKPAUtagRPCOLEMESSAGE@@@Z
?GetMutexName@CGlobalContext@@QAEJPAG@Z
?GetNFFTempName@@YGJPBGPAG@Z
?GetName@CFileStream@@QAEJPAPAG@Z
?GetNameFromSID@@YGJPAPAGPAXPAW4_TRUSTEE_TYPE@@@Z
?GetNames@CallFrame@@UAGJPAPAG0@Z
?GetNames@LEGACY_FRAME@@UAGJPAPAG0@Z
?GetNative@@YGJPAUIDataObject@@PAUtagSTGMEDIUM@@@Z
?GetNativeRegistryCatalog@CComCatalog@@UAGJABU_GUID@@PAPAX@Z
?GetNdrVersion@Interceptor@@EAGJPAK@Z
?GetNdrVersion@LEGACY_INTERCEPTOR@@UAGJPAK@Z
?GetNeededRefs@CStdMarshal@@AAEJPAUtagSTDOBJREF@@PAVOXIDEntry@@PAUtagIPIDEntry@@@Z
?GetNewDataIfNeeded@CLocalMachineNames@@AAEJXZ
?GetNewDeltaArray@CDeltaList@@AAEPAVCBasedDeltaBlockPtr@@K@Z
?GetNewLuid@PBasicEntry@@SGKPBUIMalloc@@@Z
?GetNewPage@CMSFPageTable@@AAEPAVCMSFPage@@XZ
?GetNewPageArray@CPagedVector@@AAEPAVCBasedMSFPagePtr@@K@Z
?GetNewThreadStackCommitSize@CThreadStack@@QAEIK@Z
?GetNewVectBits@CPagedVector@@AAEPAUCVectBits@@K@Z
?GetNext@?$CArray@VCCacheNode@@@@QAEPAVCCacheNode@@AAK@Z
?GetNext@?$CArray@VCFormatEtc@@@@QAEPAVCFormatEtc@@AAK@Z
?GetNext@?$CArray@VCStatData@@@@QAEPAVCStatData@@AAK@Z
?GetNext@CCompositeMonikerEnum@@AAEPAUIMoniker@@PAU2@@Z
?GetNext@CFat@@QAEJKPAK@Z
?GetNext@CFileStream@@QBEPAU1@XZ
?GetNext@CMSFPage@@QBEPAV1@XZ
?GetNext@CUpdate@@QBEPAV1@XZ
?GetNext@PRevertable@@QBEPAV1@XZ
?GetNextAssoc@CMapKeyToValue@@QBEXPAPAXKPAXPAI1@Z
?GetNextContextId@@YGXAAT_ULARGE_INTEGER@@@Z
?GetNextEntry@CEndpointsTable@@QAEPAVCEndpointEntry@@AAK@Z
?GetNextEntry@CInternalPageAllocator@@QAEJJ@Z
?GetNextMarshal@CMarshalList@@QBEPAV1@XZ
?GetNextProperty@CObjectContext@@QAEPAUtagContextProperty@@PAPAX@Z
?GetNonNativeRegistryCatalog@CComCatalog@@UAGJABU_GUID@@PAPAX@Z
?GetNtHandleSectorSize@@YGJPAXPAK@Z
?GetNtfsUnmangledNameInfo@@YGXQAU_FILE_STREAM_INFORMATION@@PAPBGPAK@Z
?GetOLEResourceDll@@YGPAUHINSTANCE__@@XZ
?GetOXIDEntry@CComApartment@@QAEJPAPAVOXIDEntry@@@Z
?GetOXIDFromObjRef@@YGPAVOXIDEntry@@AAUtagOBJREF@@@Z
?GetObjServer@@YGPAVCObjServer@@XZ
?GetObjServer@CCtxConnectionManager@@QAEPAVCObjServer@@XZ
?GetObjectDescriptorFromOle1@CClipDataObject@@AAEJIPAUtagSTGMEDIUM@@@Z
?GetObjectFromRotByPath@@YGJPAGPAPAUIUnknown@@@Z
?GetObjectHelperMulti@@YGJPAUIClassFactory@@KPAUIUnknown@@PAGPAUIStorage@@KPAU_GUID@@PAPAUtagMInterfacePointer@@PAJPAUtagMULTI_QI@@PAVCDestObject@@@Z
?GetObjectInterface@ActivationPropertiesOut@@UAGJABU_GUID@@KPAPAX@Z
?GetObjectInterfaces@ActivationPropertiesOut@@UAGJKKPAUtagMULTI_QI@@@Z
?GetObjectLink@@YGJPAUIDataObject@@PAUtagSTGMEDIUM@@@Z
?GetObjectParam@CBindCtx@@UAGJPAGPAPAUIUnknown@@@Z
?GetObjectStorage@COleItemContainerImpl@CDdeObject@@UAGJPAGPAUIBindCtx@@ABU_GUID@@PAPAX@Z
?GetObjectW@COleItemContainerImpl@CDdeObject@@UAGJPAGKPAUIBindCtx@@ABU_GUID@@PAPAX@Z
?GetObjectW@CRunningObjectTable@@UAGJPAUIMoniker@@PAPAUIUnknown@@@Z
?GetOle2FromOle1@CClipDataObject@@AAEJIPAUtagSTGMEDIUM@@@Z
?GetOleDelegate@CDefLink@@QAEPAUIOleObject@@XZ
?GetOleDelegate@CDefObject@@QAEPAUIOleObject@@XZ
?GetOleItemContainerDelegate@CDefLink@@AAEPAUIOleItemContainer@@XZ
?GetOpaqueData@CComActivator@@UAGJABU_GUID@@PAPAUtagOpaqueData@@@Z
?GetOpaqueData@OpaqueDataInfo@@UAGJABU_GUID@@PAPAUtagOpaqueData@@@Z
?GetOpaqueDataCount@CComActivator@@UAGJPAK@Z
?GetOpaqueDataCount@OpaqueDataInfo@@UAGJPAK@Z
?GetOpaqueDataInfo@ActivationProperties@@QAEJPAKPAPAUtagOpaqueData@@@Z
?GetOpen@@YGJPAUILockBytes@@KHPAK@Z
?GetOpenWithMask@@YGJPAUILockBytes@@KHKPAK@Z
?GetOrCreate@CFastBH@@QAEJPAXPAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PAU_GUID@@PAPAX@Z
?GetOrCreate@CFastBH@@QAEJPBGPAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PAU_GUID@@PAPAX@Z
?GetOrCreateApartment@CClassCache@@SGJABUACTIVATION_PROPERTIES@@PAUDLL_INSTANTIATION_PROPERTIES@@PAK@Z
?GetOrCreateBuffer@GenericStream@@UAGJKPAKPAPAE@Z
?GetOrCreateIFaceEntry@CStdWrapper@@QAEJABU_GUID@@PAUIUnknown@@PAVCObjectContext@@PAVCPolicySet@@PAPAX@Z
?GetOrCreateObjServer@@YGJPAPAVCObjServer@@@Z
?GetOrCreateSTAWindow@@YGPAUHWND__@@XZ
?GetOrCreateStdID@CIDObject@@QAEJHKPAPAVCStdIdentity@@@Z
?GetOrCreateWrapper@CIDObject@@QAEJHKPAPAVCStdWrapper@@@Z
?GetOrLoadClass@CClassCache@@SGJABUACTIVATION_PROPERTIES@@@Z
?GetOrLoadClassByContext_rl@CClassCache@@SGJKABUACTIVATION_PROPERTIES@@PAUIComClassInfo@@PAVCClassEntry@1@KAAPAVIMiniMoniker@1@@Z
?GetOrigClsctx@CComActivator@@UAGJPAK@Z
?GetOrigClsctx@SpecialProperties@@UAGJPAK@Z
?GetOwnerLink@@YGJPAUIDataObject@@PAUtagSTGMEDIUM@@@Z
?GetOwnerTableHint@XSLOCK@@AAEKV?$OPAQUE_HANDLE@$00@@@Z
?GetOxidsToRemove@COXIDTable@@QAEXPAU__MIDL_ILocalObjectExporter_0002@@PAK@Z
?GetPSClsid@CRIFTable@@QAEJABU_GUID@@PAU2@PAPAUtagRIFEntry@@@Z
?GetPSClsidHelper@CRIFTable@@AAEJABU_GUID@@PAU2@PAPAUtagRIFEntry@@@Z
?GetPSDelegate@CDefObject@@QAEPAUIPersistStorage@@XZ
?GetPSFactory@CStdMarshal@@AAEJABU_GUID@@PAUIUnknown@@PAPAUtagRIFEntry@@PAPAUIPSFactoryBuffer@@PAH@Z
?GetPSFactory@CStdWrapper@@AAEJABU_GUID@@PAPAUIPSFactoryBuffer@@@Z
?GetPage@CMSFPageTable@@QAEJPAVCPagedVector@@KKKPAPAVCMSFPage@@@Z
?GetPageSize@CThreadStack@@AAEHXZ
?GetPageTable@CMStream@@QBEPAVCMSFPageTable@@XZ
?GetParam@CallFrame@@UAGJKPAUtagVARIANT@@@Z
?GetParam@DISPATCH_FRAME@@UAGJKPAUtagVARIANT@@@Z
?GetParamInfo@CallFrame@@UAGJKPAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@DISPATCH_FRAME@@UAGJKPAU__MIDL_ICallFrame_0002@@@Z
?GetParent@CConnectionPoint@@UAGJPAPAUIDocfileAsyncConnectionPoint@@@Z
?GetParent@CPagedVector@@QBEPAVCMStream@@XZ
?GetParent@CPubDocFile@@QBEPAV1@XZ
?GetPartitionIDForClassInfo@@YGPBU_GUID@@PAUIComClassInfo@@@Z
?GetPartitionId@CComActivator@@UAGJPAU_GUID@@@Z
?GetPartitionId@SpecialProperties@@UAGJPAU_GUID@@@Z
?GetPathFromDarwinDescriptor@CComClassInfo@@AAGJHPAGPAPAG@Z
?GetPendingCallList@@YGPAUSPendingCall@@XZ
?GetPendingDisconnectType@CStdMarshal@@AAEKXZ
?GetPersistInfo@ActivationPropertiesIn@@QAEJPAPAVInstanceInfo@@@Z
?GetPersistentInstance@CObjServer@@UAGJPAU_GUID@@KPAGPAUtagMInterfacePointer@@K02PAPAU3@PAJPAVCDestObject@@@Z
?GetPersistentInstance@CRpcResolver@@QAEJPAUIActivationPropertiesIn@@PAPAUIActivationPropertiesOut@@PAH@Z
?GetPoolEntry@CRWLock@@AAERAVEventPoolEntry@@XZ
?GetPreRegMOID@@YGJPAU_GUID@@@Z
?GetPreRegMOID@CComApartment@@QAEJPAU_GUID@@@Z
?GetPreferredServerBitness@CComClassInfo@@UAGJPAK@Z
?GetPreferredServerBitness@CComProcessInfo@@UAGJPAK@Z
?GetPrev@CMSFPage@@QBEPAV1@XZ
?GetPrev@CUpdate@@QBEPAV1@XZ
?GetPriority@CBindStatusCallback@@UAGJPAJ@Z
?GetPriority@DefaultIBindStatusCallback@@UAGJPAJ@Z
?GetPrivateClipboardWindow@@YGPAUHWND__@@W4tagCLIPWINDOWFLAGS@@@Z
?GetProc@OLEAUTOMATION_FUNCTIONS@@AAEJJPBDPAPAX@Z
?GetProcess@CComClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetProcess@CComNoClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetProcess@CComSxSClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetProcess@ServerLocationInfo@@UAGJPAK0@Z
?GetProcessId@CComProcessInfo@@UAGJPAPAU_GUID@@@Z
?GetProcessInfo@CComCatalog@@UAGJABU_GUID@@0PAPAX@Z
?GetProcessInfo@CComCatalog@@UAGJKPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetProcessInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetProcessInfo@CComRegCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetProcessInfo@CComSxSCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetProcessInfoInternal@CComCatalog@@AAGJKPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetProcessInfoInternal@CComCatalog@@SGJKPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetProcessName@CComProcessInfo@@UAGJPAPAG@Z
?GetProcessRequestType@CComActivator@@UAGJPAK@Z
?GetProcessRequestType@SpecialProperties@@UAGJPAK@Z
?GetProcessSecret@CProcessSecret@@QAEJPAU_GUID@@@Z
?GetProcessType@CComProcessInfo@@UAGJPAW4tagProcessType@@@Z
?GetProgId@CComClassInfo@@UAGJPAPAG@Z
?GetProgId@CComNoClassInfo@@UAGJPAPAG@Z
?GetProgId@CComSxSClassInfo@@UAGJPAPAG@Z
?GetPropPtr@CEndPointAtom@@QAEPBGXZ
?GetPropertiesSizeMax@CObjectContext@@QAEJABU_GUID@@PAXK1KKHAAK@Z
?GetProperty@CObjectContext@@UAGJABU_GUID@@PAKPAPAUIUnknown@@@Z
?GetPropertyInfo@ActivationProperties@@QAEJABU_GUID@@PAPAX@Z
?GetProtocolVersion@CChannelObject@@UAGJPAK@Z
?GetProtocolVersion@CCtxChnl@@UAGJPAK@Z
?GetProtocolVersion@CDdeServerCallMgr@@UAGJPAK@Z
?GetProtocolVersion@CDdeServerCallMgr@@W3AGJPAK@Z
?GetProtocolVersion@CRpcChannelBuffer@@UAGJPAK@Z
?GetProtocolVersion@CRpcChannelBuffer@@W3AGJPAK@Z
?GetProtocolVersion@DDE_CHANNEL@@UAGJPAK@Z
?GetProtocolVersion@DDE_CHANNEL@@W3AGJPAK@Z
?GetProtocolVersion@MarshallingChannel@@UAGJPAK@Z
?GetPrototypeContext@ContextInfo@@UAGJPAPAUIContext@@@Z
?GetProxyStubClsid@@YGJPBU_GUID@@PAPBUtagProxyFileInfo@@PAU1@@Z
?GetRODelegate@CDefLink@@QAEPAUIRunnableObject@@XZ
?GetROTFlags@CComProcessInfo@@UAGJPAK@Z
?GetRPCIfFlagForSystemIID@@YGKPBU_GUID@@@Z
?GetRealDataObjPtr@CClipDataObject@@AAEPAUIDataObject@@XZ
?GetRealDataObjPtr@CDragDataObject@@AAEPAUIDataObject@@XZ
?GetRefCount@PTSetMember@@QAEJXZ
?GetRegCatalogObject@@YGJABU_GUID@@PAPAXK@Z
?GetRegisteredSink@Interceptor@@EAGJPAPAUICallFrameEvents@@@Z
?GetRegisteredSink@LEGACY_INTERCEPTOR@@UAGJPAPAUICallFrameEvents@@@Z
?GetRegistryAuthnLevel@@YGXPAUHKEY__@@PAK@Z
?GetRegistrySecDesc@@YGJPAUHKEY__@@PAGPAPAU_SECURITY_DESCRIPTOR@@PAKPAH@Z
?GetRegistrySecurityDescriptor@@YGJPAUHKEY__@@PBGPAPAU_SECURITY_DESCRIPTOR@@PAK@Z
?GetRegistryStringValue@@YGJPAUHKEY__@@PBG1KPAPAG@Z
?GetRemUnk@CComApartment@@QAEJPAPAUIRemUnknownN@@@Z
?GetRemUnk@CStdMarshal@@QAEJPAPAUIRemUnknown@@PAVOXIDEntry@@@Z
?GetRemUnk@OXIDEntry@@QAEJPAPAUIRemUnknown@@@Z
?GetRemoteFrame@LEGACY_FRAME@@QAEJXZ
?GetRemoteFrameFor@LEGACY_INTERCEPTOR@@QAEJPAPAUICallFrame@@PAULEGACY_FRAME@@@Z
?GetRemoteReplyInfo@ScmReplyInfo@@UAGJPAPAU_REMOTE_REPLY_SCM_INFO@@@Z
?GetRemoteRequestInfo@ScmRequestInfo@@UAGJPAPAU_REMOTE_REQUEST_SCM_INFO@@@Z
?GetRemoteServerName@CComClassInfo@@UAGJPAPAG@Z
?GetRemoteServerName@CComNoClassInfo@@UAGJPAPAG@Z
?GetRemoteServerName@CComProcessInfo@@UAGJPAPAG@Z
?GetRemoteServerName@CComSxSClassInfo@@UAGJPAPAG@Z
?GetRemoteServerName@ServerLocationInfo@@UAGJPAPAG@Z
?GetRequestedIIDs@ActivationPropertiesIn@@UAGJPAKPAPAU_GUID@@@Z
?GetRequestedInterface@CGIPTable@@AAEJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?GetReserved@CFreeList@@QAEPAXXZ
?GetReservedDocfile@CDocFile@@QAEPAV1@K@Z
?GetReservedStream@CWrappedDocFile@@QAEPAVCTransactedStream@@PBVCDfName@@KK@Z
?GetResolverInfo@ScmReplyInfo@@UAGJPAPAU_PRIV_RESOLVER_INFO@@@Z
?GetRetQueueInfo@CComCatalog@@UAGJPAGABU_GUID@@PAPAX@Z
?GetRetQueueInfo@CComCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAX@Z
?GetRetQueueInfo@CComCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetRetQueueInfo@CComRegCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetRetQueueInfo@CComSxSCatalog@@UAGJPAUIUserToken@@PAGABU_GUID@@PAPAXPAX@Z
?GetReturnActivationProperties@ActivationPropertiesIn@@UAGJPAPAVActivationPropertiesOut@@@Z
?GetReturnActivationProperties@ActivationPropertiesIn@@UAGJPAUIUnknown@@PAPAUIActivationPropertiesOut@@@Z
?GetReturnActivationPropertiesWithCF@ActivationPropertiesIn@@QAEJPAUIUnknown@@PAUIClassFactory@@PAPAUIActivationPropertiesOut@@@Z
?GetReturnValue@CallFrame@@UAGJXZ
?GetReturnValue@LEGACY_FRAME@@UAGJXZ
?GetRotItem@CRunningObjectTable@@AAEPAVCROTItem@@H@Z
?GetRpcOleMessage@CRpcCall@@UAGJPAPAUtagRPCOLEMESSAGE@@@Z
?GetRunAsType@CComProcessInfo@@UAGJPAW4tagRunAsType@@@Z
?GetRunAsUser@CComProcessInfo@@UAGJPAPAG@Z
?GetRunningClass@CDefLink@@UAGJPAU_GUID@@@Z
?GetRunningClass@CDefObject@@UAGJPAU_GUID@@@Z
?GetRunningObjectTable@CBindCtx@@UAGJPAPAUIRunningObjectTable@@@Z
?GetSCM@CRpcResolver@@AAEPAUISCMLocalActivator@@H@Z
?GetSIDFromName@@YGJPAPAXPAGPAW4_TRUSTEE_TYPE@@@Z
?GetSaferTrustLevel@CComProcessInfo@@UAGJPAK@Z
?GetScmInfo@ScmRequestInfo@@UAGJPAPAU_PRIV_SCM_INFO@@@Z
?GetScratch@CDFBasis@@QAEPAVCMStream@@XZ
?GetSecBinding@CRemoteUnknown@@AAEJPAPAUtagSECURITYBINDING@@@Z
?GetSect@CDIFat@@QAEJKPAK@Z
?GetSect@CFat@@QAEJKKPAK@Z
?GetSect@CMStream@@QAEJKKPAK@Z
?GetSect@CStreamCache@@QAEJKPAK@Z
?GetSectorSize@CFileStream@@UAGKXZ
?GetSecureRemUnk@CStdMarshal@@QAEJPAPAUIRemUnknown@@PAVOXIDEntry@@@Z
?GetSecurityInfo@ActivationPropertiesIn@@QAEJPAPAVSecurityInfo@@@Z
?GetSelfSID@CRpcResolver@@QAEJPAPAX@Z
?GetServer@CStdIdentity@@QAEPAUIUnknown@@XZ
?GetServerExecutable@CComClassInfo@@UAGJPAPAG@Z
?GetServerGroupInfo@CComCatalog@@UAGJABU_GUID@@0PAPAX@Z
?GetServerGroupInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetServerGroupInfo@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetServerGroupInfo@CComRegCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetServerGroupInfo@CComSxSCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetServerHR@CRpcCall@@UAGJPAJ@Z
?GetServerLocationInfo@ActivationPropertiesIn@@QAEJPAPAVServerLocationInfo@@@Z
?GetServerObjectContext@CProxyManagerImpl@CDdeObject@@UAGPAUIObjContext@@XZ
?GetServerObjectContext@CStdIdentity@@UAGPAUIObjContext@@XZ
?GetServerOidsToUnpin@COIDTable@@QAEXPA_KPAK@Z
?GetServerPid@SpecialProperties@@UAGJPAK@Z
?GetServerPrincipalName@SecurityInfo@@UAGJPAPAG@Z
?GetServiceName@CComProcessInfo@@UAGJPAPAG@Z
?GetServiceParameters@CComProcessInfo@@UAGJPAPAG@Z
?GetSessionId2@CComActivator@@UAGJPAKPAH1@Z
?GetSessionId2@SpecialProperties@@UAGJPAKPAH1@Z
?GetSessionId@CComActivator@@UAGJPAKPAH@Z
?GetSessionId@SpecialProperties@@UAGJPAKPAH@Z
?GetSharedRefs@CRefCache@@QAEJPAUtagIPIDEntry@@K@Z
?GetShellLink@CFileMoniker@@AAEJXZ
?GetShutdownIdleTime@CComProcessInfo@@UAGJPAK@Z
?GetSingleThreadHost@CDllHost@@AAEJXZ
?GetSingleThreadedHost@@YGJJ@Z
?GetSize@ActivationProperties@@QAEJAAVSerializer@@PAK@Z
?GetSize@CDirEntry@@QBE_KH@Z
?GetSize@CDirectStream@@QAEXPA_K@Z
?GetSize@CDirectory@@QAEJKPA_K@Z
?GetSize@CErrorSmAllocator@@UAGKPAX@Z
?GetSize@CExposedStream@@UAGKPAJ@Z
?GetSize@CExtentList@@QAEKXZ
?GetSize@CFileStream@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSize@CMStream@@QAEJKPA_K@Z
?GetSize@CNFFMappedStream@@UAGKPAJ@Z
?GetSize@CPolicySet@@QAEJPAVCRpcCall@@W4tagCallType@@PAVCCtxCall@@@Z
?GetSize@CPubMappedStream@@QAEKPAJ@Z
?GetSize@CPubStream@@QAEJPA_K@Z
?GetSize@CSSMappedStream@@UAGKPAJ@Z
?GetSize@CSmAllocator@@UAGKPAX@Z
?GetSize@CStmHandle@@QAEJPA_K@Z
?GetSize@CStreamCache@@AAE_KXZ
?GetSize@CTransactedStream@@QAEXPA_K@Z
?GetSize@ContextInfo@@UAGJPAXPAK@Z
?GetSize@InstanceInfo@@UAGJPAXPAK@Z
?GetSize@InstantiationInfo@@UAGJPAXPAK@Z
?GetSize@OpaqueDataInfo@@UAGJPAXPAK@Z
?GetSize@OutSerializer@ActivationPropertiesOut@@UAGJPAXPAK@Z
?GetSize@PSStream@@QAEXPA_K@Z
?GetSize@ScmReplyInfo@@UAGJPAXPAK@Z
?GetSize@ScmRequestInfo@@UAGJPAXPAK@Z
?GetSize@SecurityInfo@@UAGJPAXPAK@Z
?GetSize@ServerLocationInfo@@UAGJPAXPAK@Z
?GetSize@SpecialProperties@@UAGJPAXPAK@Z
?GetSizeMax@CAntiMoniker@@EAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CBaseMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CClassMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CCompositeMoniker@@EAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CFileMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CImpAccessControl@COAccessControl@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CItemMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CLUAMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CObjrefMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CPackagerMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CSessionMoniker@@UAGJPAT_ULARGE_INTEGER@@@Z
?GetSizingHandle@Serializer@@QAEJPAX@Z
?GetSlowTimeFactor@@YGKXZ
?GetSource@CErrorObject@@UAGJPAPAG@Z
?GetSourceDisplayName@CDefLink@@UAGJPAPAG@Z
?GetSourceMoniker@CDefLink@@UAGJPAPAUIMoniker@@@Z
?GetSpecialProperties@ActivationPropertiesIn@@QAEJPAPAVSpecialProperties@@@Z
?GetSt@CPubStream@@QBEPAVPSStream@@XZ
?GetStack@CStackWalkerStack@@UAGHKPAGJ@Z
?GetStackLocation@CallFrame@@UAGPAXXZ
?GetStackLocation@LEGACY_FRAME@@UAGPAXXZ
?GetStackSize@DISPATCH_INTERCEPTOR@@UAGJKPAK@Z
?GetStackSize@Interceptor@@EAGJKPAK@Z
?GetStackSize@LEGACY_INTERCEPTOR@@UAGJKPAK@Z
?GetStage@ActivationPropertiesIn@@UAGJPAW4tagACTIVATION_STAGE@@@Z
?GetStandardMarshallerFor@MarshallingChannel@@UAGJABU_GUID@@PAXPAUIUnknown@@0PAPAX@Z
?GetStart@CDirectory@@QAEJKPAK@Z
?GetStart@CMStream@@QBEKK@Z
?GetStart@CStreamCache@@AAEJPAK@Z
?GetState@CAsyncCall@@UAEJPAK@Z
?GetState@CClientCall@@UAEJPAK@Z
?GetState@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?GetState@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?GetState@CSmAllocator@@QAEXPAPAVCSharedMemoryBlock@@PAPAEPAK@Z
?GetState@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?GetStateBits@CDocFile@@QAEJPAK@Z
?GetStateBits@CStgHandle@@QAEJPAK@Z
?GetStateBits@CWrappedDocFile@@QAEJPAK@Z
?GetStateBits@PDocFile@@QAEJPAK@Z
?GetStaticContextUnmarshal@@YGJPAPAUIMarshal@@@Z
?GetStaticInfo@CStdWrapper@@EAGJPAUICallInterceptor@@@Z
?GetStaticUnMarshaler@@YGJPAPAUIMarshal@@@Z
?GetStaticWrapper@@YGJPAPAUIMarshal@@@Z
?GetStdId@@YGJPAUIUnknown@@PAPAU1@@Z
?GetStdIdFromIPID@@YGPAVCStdIdentity@@ABU_GUID@@@Z
?GetStdItemIndex@@YGHG@Z
?GetStdMarshalSize@@YGJABU_GUID@@0KPAXKPAK@Z
?GetStm@CCacheNode@@QAEPAUIStream@@HK@Z
?GetStorage@InstanceInfo@@UAGJPAPAUIStorage@@@Z
?GetStorageIFD@InstanceInfo@@UAGJPAPAUtagMInterfacePointer@@@Z
?GetStream@CDocFile@@QAEJPBVCDfName@@KPAPAVPSStream@@@Z
?GetStream@CPubDocFile@@QAEJPBVCDfName@@KPAPAVCPubStream@@@Z
?GetStream@CWrappedDocFile@@QAEJPBVCDfName@@KPAPAVPSStream@@@Z
?GetStream@PDocFile@@QAEJPBVCDfName@@KPAPAVPSStream@@@Z
?GetStreamHandle@CNtfsStorage@@QAEJPAPAXPBGKH@Z
?GetStreamPos@CObjectContext@@QAEJAAPAUIStream@@ABQAT_ULARGE_INTEGER@@@Z
?GetStringBindings@@YGJPAPAUtagDUALSTRINGARRAY@@@Z
?GetSurrogateCommandLine@CComClassInfo@@UAGJPAPAG@Z
?GetSurrogateCommandLine@CComNoClassInfo@@UAGJPAPAG@Z
?GetSurrogateCommandLine@CComSxSClassInfo@@UAGJPAPAG@Z
?GetSurrogatePath@CComProcessInfo@@UAGJPAPAG@Z
?GetSurrogateServerExecutable@CComProcessInfo@@UAGJPAPAG@Z
?GetSxSCatalogObject@@YGJABU_GUID@@PAPAX@Z
?GetSyncIIDFromAsyncIID@@YGJABU_GUID@@PAU1@@Z
?GetSystemSecurityDescriptors@CRpcResolver@@QAEJW4tagCOMSD@@PAPAX@Z
?GetTable@CDirVector@@QAEJKKPAPAVCDirSect@@@Z
?GetTable@CFatVector@@QAEJKKPAPAVCFatSect@@@Z
?GetTable@CPagedVector@@QAEJKKPAPAX@Z
?GetTableWithSect@CPagedVector@@QAEJKKKPAPAX@Z
?GetTail@CUpdateList@@QBEPAVCUpdate@@XZ
?GetTerminationStatus@CFileStream@@UAGJPAK@Z
?GetTerminationStatus@CFillLockBytes@@UAGJPAK@Z
?GetTextualSid@@YGHPAXPAGPAK@Z
?GetThreadAllocatorState@CPerContext@@QAEJXZ
?GetThreadID@CRpcResolver@@QAEXPAK@Z
?GetThreadWinstaDesktop@CRpcResolver@@QAEKXZ
?GetThreadingModel@CComClassInfo@@UAGJPAW4tagThreadingModel@@@Z
?GetThreadingModel@CComNoClassInfo@@UAGJPAW4tagThreadingModel@@@Z
?GetThreadingModel@CComSxSClassInfo@@UAGJPAW4tagThreadingModel@@@Z
?GetTime@CDirectory@@QAEJKW4WHICHTIME@@PAU_FILETIME@@@Z
?GetTime@CDocFile@@QAEJW4WHICHTIME@@PAU_FILETIME@@@Z
?GetTime@CMStream@@QAEJKW4WHICHTIME@@PAU_FILETIME@@@Z
?GetTime@CStgHandle@@QAEJW4WHICHTIME@@PAU_FILETIME@@@Z
?GetTime@CWrappedDocFile@@QAEJW4WHICHTIME@@PAU_FILETIME@@@Z
?GetTime@PTimeEntry@@QAEJW4WHICHTIME@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CBaseMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CClassMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CCompositeMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CFileMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CItemMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CLUAMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CObjrefMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CPackagerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CPointerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CRunningObjectTable@@UAGJPAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeOfLastChange@CSessionMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAU_FILETIME@@@Z
?GetTimeout@CMessageCall@@QAEKXZ
?GetTlsSmAllocator@@YGAAVCSmAllocator@@XZ
?GetToSTA@@YGJPAVOXIDEntry@@PAVCMessageCall@@@Z
?GetTokenElevationType@@YGJPAXPAW4_TOKEN_ELEVATION_TYPE@@@Z
?GetTokenForRpcClient@@YGPAXPAXH@Z
?GetTransactedDepth@CPubStream@@QBEGXZ
?GetTypeInfo@CComClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetTypeInfo@CComNoClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetTypeInfo@CComSxSClassInfo@@UAGJABU_GUID@@PAPAX@Z
?GetTypeInfo@LEGACY_INTERCEPTOR@@UAGJIKPAPAUITypeInfo@@@Z
?GetTypeInfoCount@LEGACY_INTERCEPTOR@@UAGJPAI@Z
?GetTypeInfoFromIID@@YGJABU_GUID@@PAPAUITypeInfo@@@Z
?GetTypeLibrary@CComCatalog@@UAGJABU_GUID@@0PAPAX@Z
?GetTypeLibrary@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAX@Z
?GetTypeLibrary@CComCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetTypeLibrary@CComRegCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetTypeLibrary@CComSxSCatalog@@UAGJPAUIUserToken@@ABU_GUID@@1PAPAXPAX@Z
?GetUNICODEProgID@@YGJPAVCompObjStmData@@PAPAG@Z
?GetUNICODEUserType@@YGJPAVCompObjStmData@@PAPAG@Z
?GetUnmarshalClass@ActivationProperties@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CClassMoniker@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CDocfileUnmarshalFactory@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CErrorObject@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CExposedDocFile@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CExposedStream@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CFreeMarshaler@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CMarshalImplPStream@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CObjectContext@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CPointerMoniker@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CSimpStorage@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CSimpStream@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CStaticWrapper@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CStdMarshal@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@CStdWrapper@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshalClass@InprocActpropsUnmarshaller@@UAGJABU_GUID@@PAXK1KPAU2@@Z
?GetUnmarshaller@MarshallingChannel@@UAGJABU_GUID@@PAPAUIMarshalSomeone@@@Z
?GetUnquotedPath@@YGJPAUIClassClassicInfo@@W4tagCLSCTX@@PAPAGPAGI@Z
?GetUnserialized@ActivationProperties@@UAGJABU_GUID@@PAPAXPAK2@Z
?GetUpdateOptions@CDefLink@@UAGJPAK@Z
?GetUserClassID@CDefLink@@UAGJPAU_GUID@@@Z
?GetUserClassID@CDefObject@@UAGJPAU_GUID@@@Z
?GetUserClassID@COleObjectImpl@CDdeObject@@UAGJPAU_GUID@@@Z
?GetUserFlags@CDirectory@@QAEJKPAK@Z
?GetUserSettings@CComClassInfo@@UAGJPAH@Z
?GetUserSettings@CComProcessInfo@@UAGJPAH@Z
?GetUserSid@@YGPAXPAX@Z
?GetUserType@CDefLink@@UAGJKPAPAG@Z
?GetUserType@CDefObject@@UAGJKPAPAG@Z
?GetUserType@COleObjectImpl@CDdeObject@@UAGJKPAPAG@Z
?GetValue@CPropertySetStream@@QAEPBUtagSERIALIZEDPROPERTYVALUE@@KPAKPAJ@Z
?GetVariantAllocSize@DeserializeHelper@@CGKG@Z
?GetVector@CMSFPage@@QBEPAVCPagedVector@@XZ
?GetVersionNumber@CComClassInfo@@UAGJPAK0@Z
?GetVersionNumber@CComNoClassInfo@@UAGJPAK0@Z
?GetVersionNumber@CComSxSClassInfo@@UAGJPAK0@Z
?GetVtbl@@YGJPAUITypeInfo@@ABU_GUID@@PAPAUTYPEINFOVTBL@@PAPAU1@@Z
?GetWalker@CallFrame@@QBE?AUOAUTIL@@XZ
?GetWindow@DefaultIBindStatusCallback@@UAGJABU_GUID@@PAPAUHWND__@@@Z
?GetWindowPropInterface@CRpcResolver@@QAEJPAUHWND__@@KHPAUtagSTDOBJREF@@PAUtagOXID_INFO@@@Z
?GetWrapperForContext@CStdIdentity@@UAGJPAVCObjectContext@@ABU_GUID@@PAPAX@Z
?GetXSM@CUpdate@@QBEPAVPTSetMember@@XZ
?GipBypassEnabled@@YGHXZ
?GiveUpRefs@CRefCache@@QAEXPAUtagIPIDEntry@@@Z
?GrantAccessRights@CImpAccessControl@COAccessControl@@UAGJPAU_ACTRL_ALISTW@@@Z
?Grow@CContextPropList@@AAEHXZ
?Grow@CInternalPageAllocator@@AAEPAUtagPageEntry@@XZ
?GuidFromString@@YGJPBGPAU_GUID@@@Z
?HBITMAP_UserUnmarshalWorker@@YGPAEPAKPAEPAPAUHBITMAP__@@K@Z
?HENHMETAFILE_UserUnmarshalWorker@@YGPAEPAKPAEPAPAUHENHMETAFILE__@@K@Z
?HIconAndSourceFromClass@@YGPAUHICON__@@ABU_GUID@@PAGKPAI@Z
?HMETAFILEPICT_UserUnmarshalWorker@@YGPAEPAKPAEPAPAXK@Z
?HPALETTE_UserUnmarshalWorker@@YGPAEPAKPAEPAPAUHPALETTE__@@K@Z
?HRGN_UserFree@@YGXPAKPAPAUHRGN__@@@Z
?HRGN_UserMarshal@@YGPAEPAKPAEPAPAUHRGN__@@@Z
?HRGN_UserSize@@YGKPAKKPAPAUHRGN__@@@Z
?HRGN_UserUnmarshal@@YGPAEPAKPAEPAPAUHRGN__@@@Z
?HandleFeedBack@CDragOperation@@QAEHJ@Z
?HandleFromHandle@@YGJPAUIDataObject@@PAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?HandleIncomingCall@@YGJABU_GUID@@GKPAX@Z
?HandleInitMsg@CDDEServer@@QAEHJ@Z
?HandleMessages@CDragOperation@@QAEHXZ
?HandlePendingDisconnect@CStdMarshal@@QAEJJ@Z
?HandlePendingMessage@CCliModalLoop@@AAEXXZ
?HandlePostReleaseRifRef@@YGJJ@Z
?HandleRejectedCall@CCliModalLoop@@AAEJPAVIInternalChannelBuffer@@@Z
?HandleWakeForMsg@CCliModalLoop@@AAEXXZ
?HandsOffStorage@CDefLink@@UAGJXZ
?HandsOffStorage@CDefObject@@UAGJXZ
?HandsOffStorage@COleCache@@UAGJXZ
?HandsOffStorage@CPersistStgImpl@CDdeObject@@UAGJXZ
?HasBCEs@CClassEntry@CClassCache@@QAEHXZ
?HasNoScratch@CMStream@@QBEHXZ
?HasWOWMsgArrived@CAsyncCall@@UAEHXZ
?HasWOWMsgArrived@CClientCall@@UAEHXZ
?Hash@@YGKPBEK@Z
?Hash@CAntiMoniker@@EAGJPAK@Z
?Hash@CBaseMoniker@@UAGJPAK@Z
?Hash@CCEHashTable@CClassCache@@QAEKABU_GUID@@0@Z
?Hash@CClassMoniker@@UAGJPAK@Z
?Hash@CCompositeMoniker@@EAGJPAK@Z
?Hash@CDPEHashTable@CClassCache@@QAEKPBG@Z
?Hash@CEffPermsCacheLUID@@AAEKU_LUID@@@Z
?Hash@CExtHashTable@@QAEKPBG@Z
?Hash@CFileMoniker@@UAGJPAK@Z
?Hash@CItemMoniker@@UAGJPAK@Z
?Hash@CLUAMoniker@@UAGJPAK@Z
?Hash@CMultiGUIDHashTable@@QAEKABUSMultiGUIDKey@@@Z
?Hash@CNameHashTable@@QAEKABU_GUID@@PAUtagSECURITYBINDING@@@Z
?Hash@CPIDHashTable@@QAEKPAUIUnknown@@PAVCObjectContext@@@Z
?Hash@CPSHashTable@@QAEKPAVCObjectContext@@0@Z
?Hash@CPackagerMoniker@@UAGJPAK@Z
?Hash@CPointerMoniker@@UAGJPAK@Z
?Hash@CSessionMoniker@@UAGJPAK@Z
?Hash@CStringHashTable@@QAEKPAUtagDUALSTRINGARRAY@@@Z
?HashChainToPolicySet@CPolicySet@@SGPAV1@PAUSHashChain@@@Z
?HashGuid@@YGKABU_GUID@@@Z
?HashNode@CCtxPropHashTable@@UAEKPAUSHashChain@@@Z
?HashNode@CCtxUUIDHashTable@@UAEKPAUSHashChain@@@Z
?HashNode@CDPEHashTable@CClassCache@@UAEKPAUSHashChain@@@Z
?HashNode@COIDHashTable@@UAEKPAUSHashChain@@@Z
?HashNode@CPIDHashTable@@UAEKPAUSHashChain@@@Z
?HashNode@CPSHashTable@@UAEKPAUSHashChain@@@Z
?HashPropChainToContext@CObjectContext@@SGPAV1@PAUSHashChain@@@Z
?HashUUIDChainToContext@CObjectContext@@SGPAV1@PAUSHashChain@@@Z
?HaveWriteAccess@CExposedDocFile@@UAGJXZ
?HeapMinimize@CErrorSmAllocator@@UAGXXZ
?HeapMinimize@CSmAllocator@@UAGXXZ
?HeldExclusive@CRWLock@@QAEHXZ
?HelperGetImplementedClsid@@YGJPAUIComClassInfo@@PAU_GUID@@1@Z
?HexStringToDword@@YGHAAPBGAAKHG@Z
?HkFindAndLoadDll@@YGXXZ
?HkLoadInProcServer@@YGPAUHINSTANCE__@@ABU_GUID@@@Z
?HrAStrToBStr@@YGJPBDPAPAG@Z
?HrAStrToWStr@@YGJPBDPAPAG@Z
?HrBStrToWStr@@YGJQAGPAPAG@Z
?HrCLSIDToStr@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvFromVTBOOL@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTBSTR@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTCF@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvFromVTCLSID@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvFromVTCY@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTDATE@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTDECIMAL@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTDISPATCH@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTEMPTY@@YGJPAUtagPROPVARIANT@@G@Z
?HrConvFromVTFILETIME@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvFromVTI8@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvFromVTLPSTR@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTLPWSTR@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrConvFromVTUI8@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvFromVTVERSIONEDSTREAM@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrConvertByRef@@YGJPAUtagPROPVARIANT@@PBU1@@Z
?HrConvertPVTypes@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrGetLIFromDouble@@YGJNPA_J@Z
?HrGetULIFromDouble@@YGJNPA_K@Z
?HrGetValFromBLOB@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrGetValFromBSTR@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?HrGetValFromDOUBLE@@YGJPAUtagPROPVARIANT@@PBU1@KGGN@Z
?HrGetValFromDWORD@@YGJPAUtagPROPVARIANT@@PBU1@KGGKH@Z
?HrGetValFromUNK@@YGJPAUtagPROPVARIANT@@PAUIUnknown@@G@Z
?HrPropVarVECTORToSAFEARRAY@@YGJPAUtagPROPVARIANT@@PBU1@KG@Z
?HrStrToCLSID@@YGJPAUtagPROPVARIANT@@PBU1@@Z
?HrStrToULI@@YGJPBUtagPROPVARIANT@@KGHPA_K@Z
?HrULIToStr@@YGJPAUtagPROPVARIANT@@PBU1@G@Z
?HrWStrToAStr@@YGJPBGPAPAD@Z
?HrWStrToBStr@@YGJPBGPAPAG@Z
?IBegin_QueryMultipleInterfaces@CAsyncUnknownMgr@@EAGJKPAUtagMULTI_QI@@@Z
?ICoCreateInstanceEx@@YGJABU_GUID@@PAUIUnknown@@KPAU_COSERVERINFO@@KKPAUtagMULTI_QI@@PAVActivationPropertiesIn@@@Z
?ICoGetClassObject@@YGJABU_GUID@@KPAU_COSERVERINFO@@0KPAPAXPAVActivationPropertiesIn@@@Z
?IFinish_QueryMultipleInterfaces@CAsyncUnknownMgr@@EAGJPAUtagMULTI_QI@@@Z
?IGetObject@CRunningObjectTable@@QAGJPAU_MnkEqBuf@@PAPAUIUnknown@@K@Z
?IGetObjectByPath@CRunningObjectTable@@QAEJPAGPAPAUIUnknown@@K@Z
?ILBFlush@@YGJPAUILockBytes@@H@Z
?ILBGetSize@@YGJPAUILockBytes@@PAT_ULARGE_INTEGER@@@Z
?INIT_DISABLED_FEATURES@DISABLED_FEATURES@@QAEXXZ
?IStreamToBase64@@YGJPAUIStream@@PAGI@Z
?IUpdateResolverBindings@@YGJ_KPAUtagDUALSTRINGARRAY@@PAPAU1@2@Z
?IconLabelTextOut@@YGXPAUHDC__@@PAUHFONT__@@HHIPAUtagRECT@@PBDI@Z
?ImpersonateClient@CServerCallMgr@CRpcChannelBuffer@@UAGJXZ
?ImpersonateClient@CServerSecurity@@UAGJXZ
?ImplicitPropVariantToVariantChangeType@@YGJPAUtagPROPVARIANT@@PBU1@K@Z
?IncOIDRefCnt@CROIDTable@@QAEXPAUSOIDRegistration@@@Z
?IncRef@CNameHashTable@@QAEJKABU_GUID@@PAUtagSECURITYBINDING@@@Z
?IncRefCount@CMachineNamesHelper@@QAEXXZ
?IncSrvIPIDCnt@CStdMarshal@@QAEJPAUtagIPIDEntry@@KKPAUtagSECURITYBINDING@@K@Z
?IncStrongAndNotifyAct@CStdMarshal@@AAEXPAUtagIPIDEntry@@K@Z
?IncStrongCnt@CStdIdentity@@QAEXXZ
?IncTableCnt@CStdMarshal@@QAEXXZ
?IncTableStrongCnt@CRefCache@@QAEKXZ
?IncWeakCnt@CStdIdentity@@QAEXXZ
?IncrementCallCount@CIDObject@@QAEJXZ
?IncrementCount@CCtxConnectionManager@@QAEXXZ
?IncrementLuid@CSmAllocator@@QAEKXZ
?IncrementNestCount@CRefExportCount@@QAEXXZ
?IncrementNestCount@CSafeRefCount@@QAEXXZ
?IncrementObjectReferences@CCtxConnectionManager@@SGXXZ
?IncrementPosition@Serializer@@QAEJK@Z
?Init@CAsyncConnection@@QAEJPAUIConnectionPointContainer@@PAV1@@Z
?Init@CClassCache@@SGHXZ
?Init@CConnectionPoint@@QAEJXZ
?Init@CCtxCall@@AAEXXZ
?Init@CDIFat@@QAEJPAVCMStream@@K@Z
?Init@CDeltaList@@QAEJ_KPAVCTransactedStream@@@Z
?Init@CDfMutex@@QAEJPAVCGlobalContext@@H@Z
?Init@CDirEntry@@QAEXK@Z
?Init@CDirSect@@QAEJG@Z
?Init@CDirectStream@@QAEJPAVCStgHandle@@PBVCDfName@@H@Z
?Init@CDirectory@@QAEJPAVCMStream@@K@Z
?Init@CDragDefaultCursors@@QAEHXZ
?Init@CEnumSTATPROPBAG@@QAEJPAUIPropertyStorage@@PBGK@Z
?Init@CExposedStream@@QAEJPAVCPubStream@@PAVCDFBasis@@PAVCPerContext@@PAVCSeekPointer@@@Z
?Init@CFat@@QAEJPAVCMStream@@KH@Z
?Init@CFatSect@@QAEJG@Z
?Init@CFillLockBytes@@QAEJXZ
?Init@CFinishObject@CLSvrClassEntry@CClassCache@@QAEXPAV23@@Z
?Init@CGlobalSecurity@@QAEJH@Z
?Init@CHandle@@QAEXPAVCMStream@@K@Z
?Init@CMSFPageTable@@QAEJXZ
?Init@CMStream@@QAEJXZ
?Init@CNFFMappedStream@@QAEJPAX@Z
?Init@CNFFTreeMutex@@QAEJXZ
?Init@CNtfsEnumSTATSTG@@UAGJPAX@Z
?Init@CNtfsSTATSTGArray@@QAEJPAX@Z
?Init@CNtfsStream@@UAEJPAXKPBGPAV1@@Z
?Init@COAccessControl@@QAGJPAUIUnknown@@@Z
?Init@COleStaticMutexSem@@QAEJXZ
?Init@CPagedVector@@QAEJPAVCMStream@@K@Z
?Init@CPropertyBagEx@@QAEXPAUIPropertySetStorage@@PAUIBlockingLock@@@Z
?Init@CPropertySetStorage@@QAEXPAUIStorage@@PAUIBlockingLock@@H@Z
?Init@CPubStream@@QAEXPAVPSStream@@K@Z
?Init@CRpcThread@@QAEJXZ
?Init@CSTATPROPBAGArray@@QAEJPAUIPropertyStorage@@PBGK@Z
?Init@CSharedMemoryBlock@@QAEJPAGKKPAX1H@Z
?Init@CSimpStorage@@QAEJPBGPAX@Z
?Init@CSimpStorageOpen@@QAEJPBGKPAX@Z
?Init@CSimpStream@@QAEJPAUCSimpStorage@@PAXK@Z
?Init@CSimpStreamOpen@@QAEJPAVCSimpStorageOpen@@PAXKKPAVCDfNameList@@@Z
?Init@CSmAllocator@@QAEJPAXKKH@Z
?Init@CStackBuffer@@QAEJK@Z
?Init@CStackWalkerSymbol@@QAEJPBG0_K1@Z
?Init@CStdMarshal@@QAEHPAUIUnknown@@PAVCStdIdentity@@ABU_GUID@@K@Z
?Init@CStmBufRead@@QAEXPAUIStream@@@Z
?Init@CStmBufWrite@@QAEXPAUIStream@@@Z
?Init@CStreamCache@@QAEXPAVCMStream@@KPAVCDirectStream@@@Z
?Init@CTransactedStream@@QAEJPAVPSStream@@@Z
?Init@CWrappedDocFile@@QAEJPAVPDocFile@@@Z
?Init@CallFrame@@QAEXPAXPAUMD_METHOD@@PAVInterceptor@@@Z
?Init@CleanupStack@@QAEXXZ
?Init@DLL_INSTANTIATION_PROPERTIES@@QAEJPBGKKABU_GUID@@H@Z
?Init@DefaultIBindStatusCallback@@QAEHPBG@Z
?Init@DeserializeHelper@@QAEJPAVPMemoryAllocator@@II@Z
?Init@LEGACY_INTERCEPTOR@@QAEJXZ
?Init@MIDEntry@@QAEXAB_K@Z
?Init@tagQICONTEXT@@QAEXG@Z
?InitAsync@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAPAUIUnknown@@PAPAUAsyncIPipeByte@@PAPAUISynchronize@@@Z
?InitAsync@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAPAUIUnknown@@PAPAUAsyncIPipeLong@@PAPAUISynchronize@@@Z
?InitAsync@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPAPAUIUnknown@@PAPAUAsyncIPipeDouble@@PAPAUISynchronize@@@Z
?InitCNtfsStream@CNtfsStorage@@QAEJPAVCNtfsStream@@PAXKPBG@Z
?InitCSIfNecessary@CComApartment@@AAEJXZ
?InitCache@COleCache@@UAGJPAUIDataObject@@@Z
?InitCallFrame@@YGHXZ
?InitCallObject@CAsyncCall@@UAEJW4tagCALLCATEGORY@@PAUtagRPCOLEMESSAGE@@KABU_GUID@@KUtagCOMVERSION@@PAVCChannelHandle@@@Z
?InitCallObject@CClientCall@@UAEJW4tagCALLCATEGORY@@PAUtagRPCOLEMESSAGE@@KABU_GUID@@KUtagCOMVERSION@@PAVCChannelHandle@@@Z
?InitCallObject@CMessageCall@@UAEJW4tagCALLCATEGORY@@PAUtagRPCOLEMESSAGE@@KABU_GUID@@KUtagCOMVERSION@@PAVCChannelHandle@@@Z
?InitChannelIfNecessary@@YGJXZ
?InitClientHwnd@CAsyncCall@@QAEXXZ
?InitClientSideHandle@CRpcChannelBuffer@@AAEJPAPAVCChannelHandle@@@Z
?InitClone@CAsyncConnection@@QAEJPAUIConnectionPointContainer@@PAV1@@Z
?InitClone@CAsyncConnectionContainer@@QAEJPAVCAsyncConnection@@@Z
?InitCommon@CMStream@@AAEJXZ
?InitConnection@CAsyncConnectionContainer@@QAEJPAVCAsyncConnection@@@Z
?InitConvert@CDIFat@@QAEJPAVCMStream@@K@Z
?InitConvert@CFat@@QAEJPAVCMStream@@K@Z
?InitConvert@CMStream@@QAEJH@Z
?InitCopy@CDIFat@@QAEXPAV1@@Z
?InitCopy@CDirectory@@QAEXPAV1@@Z
?InitCopy@CFat@@QAEXPAV1@@Z
?InitCopy@CMStream@@QAEXPAV1@@Z
?InitCopy@CPagedVector@@QAEXPAV1@@Z
?InitDisabledFeatures@@YGHXZ
?InitFromData@CDefLink@@UAGJPAUIDataObject@@HK@Z
?InitFromData@CDefObject@@UAGJPAUIDataObject@@HK@Z
?InitFromData@COleObjectImpl@CDdeObject@@UAGJPAUIDataObject@@HK@Z
?InitFromEntry@CDocFile@@QAEJPAVCStgHandle@@PBVCDfName@@H@Z
?InitFromFileStream@CFileStream@@QAEXPAU1@@Z
?InitFromGlobal@CFileStream@@QAEXPAVCGlobalFileStream@@@Z
?InitFromGlobal@CPerContext@@QAEJPAVCGlobalContext@@@Z
?InitFromGlobalFileStream@CGlobalFileStream@@QAEXPAV1@@Z
?InitFromHandle@CFileStream@@QAEJPAX@Z
?InitFromMainStreamHandle@CNtfsStorage@@QAEJPAPAXPBGHKK@Z
?InitFromName@CNtfsStorage@@QAEJPBGPAXHK@Z
?InitFromRegDb@CEnumFmt10@@UAGJPAUHKEY__@@@Z
?InitFromScratch@CEnumFmt10@@UAGJXZ
?InitGlobal@CFileStream@@QAEJKK@Z
?InitGlobals@@YGJXZ
?InitHashTable@CMapKeyToValue@@AAEHXZ
?InitHookOle@@YGXXZ
?InitHooksIfNecessary@@YGXXZ
?InitInd@CRootPubDocFile@@AAEJPAUILockBytes@@PAPAGKKH@Z
?InitLPACCEL@CPaccelEnum@@QAEHPAUHACCEL__@@H@Z
?InitLegacy@@YGHXZ
?InitMainThreadWnd@@YGJXZ
?InitMappedStreamMembers@CNFFMappedStream@@AAEXXZ
?InitMarshalling@@YGXXZ
?InitMetaDataCache@@YGHXZ
?InitNew@CDIFat@@QAEJPAVCMStream@@@Z
?InitNew@CDefLink@@UAGJPAUIStorage@@@Z
?InitNew@CDefObject@@UAGJPAUIStorage@@@Z
?InitNew@CDirectory@@QAEJPAVCMStream@@@Z
?InitNew@CFat@@QAEJPAVCMStream@@@Z
?InitNew@CMStream@@QAEJHT_ULARGE_INTEGER@@@Z
?InitNew@COleCache@@UAGJPAUIStorage@@@Z
?InitNew@CPersistStgImpl@CDdeObject@@UAGJPAUIStorage@@@Z
?InitNewContext@CPerContext@@QAEJXZ
?InitNotInd@CRootPubDocFile@@AAEJPAUILockBytes@@PAPAGKK@Z
?InitNotificationEvent@CPerContext@@QAEJPAUILockBytes@@@Z
?InitObject@CAsyncStateMachine@@AAEJPAUIUnknown@@@Z
?InitRangeLocksSector@CFat@@AAEXXZ
?InitRemoting@CComApartment@@QAEJXZ
?InitRemoting@OXIDEntry@@QAEJPAVCComApartment@@@Z
?InitResize@CDeltaList@@QAEJ_K@Z
?InitRoot@CRootPubDocFile@@QAEJPAUILockBytes@@KKPAPAGPAPAVCDFBasis@@PAKPAVCGlobalContext@@@Z
?InitRundown@OXIDEntry@@QAEXAAU_GUID@@@Z
?InitScratch@CFat@@QAEJPAV1@H@Z
?InitScratch@CFileStream@@QAEJXZ
?InitScratch@CMStream@@QAEJPAV1@H@Z
?InitScrollInt@CDragOperation@@AAEXXZ
?InitSecDescInACLDesc@@YGJPAUtagACL_DESCRIPTOR@@@Z
?InitSecret@CFreeMarshaler@@AAGJXZ
?InitSnapShot@CFileStream@@QAEJXZ
?InitStream@Serializer@@QAEJPAUIStream@@AAKKAAPAX@Z
?InitStreamBlock@CDeltaList@@AAEJK@Z
?InitSysConv@CDdeObject@@QAEHXZ
?InitSystem@CDirectStream@@QAEXPAVCMStream@@K_K@Z
?InitTbl@CScmPatternTbl@@QAEJXZ
?InitThreadCtx@@YGJAAPAVCObjectContext@@AAPAVCComApartment@@AAVCOleTls@@HW4tagAPTKIND@@@Z
?InitTypeInfoCache@@YGHXZ
?InitUnMarshal@CSharedMemoryBlock@@QAEJPAXKK@Z
?InitUsingTypeInfo@Interceptor@@AAEJABU_GUID@@PAUITypeInfo@@@Z
?InitWorker@CFileStream@@AAEJPBGKPAX@Z
?Init_DupFileHandle@CFileStream@@AAEJK@Z
?Init_GetNtOpenFlags@CFileStream@@AAEJPAK000@Z
?Init_GetTempName@CFileStream@@AAEJPAG0@Z
?Init_MemoryMap@CFileStream@@AAEJK@Z
?Init_OpenOrCreate@CFileStream@@AAEJPAG0KPAX@Z
?Initialize@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QAEJPAPAUIEnumCATEGORYINFO@@K@Z
?Initialize@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QAEJPAPAUIEnumGUID@@K@Z
?Initialize@ActivationPropertiesOut@@QAEHXZ
?Initialize@CApartmentHashTable@@QAEXXZ
?Initialize@CCacheNode@@AAEXKPAUIStorage@@@Z
?Initialize@CCallTable@@QAEXXZ
?Initialize@CComCat@@AAEJPAUIUnknown@@@Z
?Initialize@CComClassInfo@@AAGJPAUHKEY__@@PAUIUserToken@@H0KH@Z
?Initialize@CCompositeMoniker@@QAEHPAUIMoniker@@0@Z
?Initialize@CContextPropList@@SGXXZ
?Initialize@CCtxChnl@@SGXXZ
?Initialize@CCtxComChnl@@SGXI@Z
?Initialize@CCtxTable@@SGXXZ
?Initialize@CDebugEventFire@@QAEJXZ
?Initialize@CDllHost@@AAEJK@Z
?Initialize@CEndpointsTable@@QAEXXZ
?Initialize@CEnumCategories@@QAEJKPAUIEnumCATEGORYINFO@@@Z
?Initialize@CEnumCategoriesOfClass@@QAEJPAUHKEY__@@H@Z
?Initialize@CEnumClassesOfCategories@@QAEJKQBU_GUID@@K0PAUIEnumGUID@@@Z
?Initialize@CFileMoniker@@AAEHGPADGPAGGG@Z
?Initialize@CFileMoniker@@AAEHGPBGG@Z
?Initialize@CGIPTable@@QAEXXZ
?Initialize@CHashTable@@UAEXPAUSHashChain@@PAVCOleStaticMutexSem@@@Z
?Initialize@CHashTable@@UAEXPAUSHashChain@@PAVCRWLock@@@Z
?Initialize@CIDObject@@SGXXZ
?Initialize@CIPIDTable@@QAEXXZ
?Initialize@CInternalPageAllocator@@QAEXKGPAVCOleStaticMutexSem@@KP6GPAXI@ZP6GXPAX@Z@Z
?Initialize@CItemMoniker@@AAEHPBG0@Z
?Initialize@CItemMoniker@@AAEXPAGGPADG0G1G@Z
?Initialize@CMIDTable@@QAEXXZ
?Initialize@COIDTable@@SGXXZ
?Initialize@COXIDTable@@QAEXXZ
?Initialize@CObjectContext@@SGXXZ
?Initialize@CPIDTable@@SGXXZ
?Initialize@CPSTable@@SGXXZ
?Initialize@CPageAllocator@@QAEXKGPAVCOleStaticMutexSem@@KP6GPAXI@ZP6GXPAX@Z@Z
?Initialize@CPolicySet@@SGXXZ
?Initialize@CPropertyStorage@@AAEXXZ
?Initialize@CRIFTable@@QAEXXZ
?Initialize@CROIDTable@@QAEXXZ
?Initialize@CRWLock@@QAEHXZ
?Initialize@CRandomNumberGenerator@@AAEJXZ
?Initialize@CServerSecurity@@SGXXZ
?Initialize@CStdWrapper@@SGXXZ
?Initialize@CSurrogateProcessActivator@@QAEJXZ
?Initialize@CtxEntry@@SGXXZ
?Initialize@EVENT@@QAEXHH@Z
?Initialize@SEMAPHORE@@QAEXJJ@Z
?InitializeAccessControl@@YGJXZ
?InitializeActivation@CComActivator@@AAEJPAVActivationPropertiesIn@@@Z
?InitializeCatalogIfNeccessary@CComCatalog@@QAEJXZ
?InitializeCatalogIfNecessary@@YGJXZ
?InitializeEvent@CCtxConnectionManager@@QAE_NXZ
?InitializeForInprocActivations@CComClassInfo@@AAGJHPAUHKEY__@@@Z
?InitializeForOutOfProcActivations@CComClassInfo@@AAGJHPAUIUserToken@@PAUHKEY__@@K@Z
?InitializeHeap@CPageAllocator@@AAEHXZ
?InitializeISurrogate@CCOMSurrogate@@SGJPAUISurrogate@@@Z
?InitializeInvoke@DISPATCH_CLIENT_FRAME@@QAEXXZ
?InitializeLUAAndDisplaySettings@CComClassInfo@@AAGJPAUHKEY__@@@Z
?InitializeLocalServer@CComClassInfo@@AAGJHPAUHKEY__@@@Z
?InitializeLrpcSecurity@@YGXXZ
?InitializeNTA@@YGJXZ
?InitializeOnCreateOrOpen@CPropertyStorage@@AAEJKKABU_GUID@@H@Z
?InitializeProcessInfo@CComClassInfo@@AAGJPAUIUserToken@@@Z
?InitializePropertyStream@CPropertyStorage@@AAEJPBU_GUID@@0W4EInitializePropertyStream@1@@Z
?InitializeReadCache@CComCatalog@@CGJXZ
?InitializeSecurity@@YGJXZ
?InitializeServices@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?InitializeSurrogateInfo@CComClassInfo@@AAGJPAUHKEY__@@W4tagProcessType@@K@Z
?InitializeSystemSecurityDescriptors@CRpcResolver@@AAEJPAKKPAE@Z
?InitializeThreadingModel@CComClassInfo@@AAGJPAUHKEY__@@@Z
?InitializeTracing@@YGXPBG@Z
?InlineIsEqualGUID@@YGHABU_GUID@@0@Z
?InnerAddRef@Interceptor@@EAGKXZ
?InnerAddRef@LEGACY_FRAME@@UAGKXZ
?InnerAddRef@LEGACY_INTERCEPTOR@@UAGKXZ
?InnerAddRef@MarshallingChannel@@UAGKXZ
?InnerQueryInterface@DISPATCH_INTERCEPTOR@@UAGJABU_GUID@@PAPAX@Z
?InnerQueryInterface@Interceptor@@EAGJABU_GUID@@PAPAX@Z
?InnerQueryInterface@LEGACY_FRAME@@UAGJABU_GUID@@PAPAX@Z
?InnerQueryInterface@LEGACY_INTERCEPTOR@@UAGJABU_GUID@@PAPAX@Z
?InnerQueryInterface@MarshallingChannel@@UAGJABU_GUID@@PAPAX@Z
?InnerRelease@Interceptor@@EAGKXZ
?InnerRelease@LEGACY_FRAME@@UAGKXZ
?InnerRelease@LEGACY_INTERCEPTOR@@UAGKXZ
?InnerRelease@MarshallingChannel@@UAGKXZ
?InquireStringBindings@@YGJGPAH@Z
?Insert@CDfNameList@@QAEXPAPAV1@PAV1@1@Z
?InsertAt@CArrayFValue@@QAEHHPAXH@Z
?InsertBefore@CLinkable@@QAEXPAV1@@Z
?InsertEntry@CDirectory@@AAEJKKPBVCDfName@@@Z
?InsertSelfIntoList@CNtfsStream@@IAEXPAV1@@Z
?InsertXSMember@CPubDocFile@@QAEXPAVPTSetMember@@@Z
?InstallMsgFilter@CAptCallCtrl@@QAEPAUIMessageFilter@@PAU2@@Z
?InstantiatedProxy@CStdMarshal@@QAEHABU_GUID@@PAPAXPAJ@Z
?IntToUInt@@YGJHPAI@Z
?InterceptorThunk@@YAXKPAUIUnknown@@ZZ
?Interceptor_AddRef@@YGKPAUIUnknown@@@Z
?Interceptor_QueryInterface@@YGJPAUIUnknown@@ABU_GUID@@PAPAX@Z
?Interceptor_Release@@YGKPAUIUnknown@@@Z
?InterfaceMapHelper@CRIFTable@@AAEJABU_GUID@@PAU2@H@Z
?InterlockedDecRefCnt@@YGHPAK0@Z
?InterlockedRestoreRefCnt@@YGHPAK0@Z
?InternalAddRef@CClipDataObject@@AAEKXZ
?InternalAddRef@CObjectContext@@QAEKXZ
?InternalAddRef@CStdWrapper@@QAEKXZ
?InternalContextCallback@CObjectContext@@UAGJP6GJPAX@Z0ABU_GUID@@HPAUIUnknown@@@Z
?InternalDisconnectContext@@YGJKPAVCObjectContext@@@Z
?InternalQI@CStdWrapper@@AAEJABU_GUID@@PAPAXHHPAVCtxEntry@@@Z
?InternalQueryInterface@CObjectContext@@QAEJABU_GUID@@PAPAX@Z
?InternalRelease@CClipDataObject@@AAEKXZ
?InternalRelease@CObjectContext@@QAEKXZ
?InternalRelease@CStdWrapper@@QAEKPAVCPolicySet@@@Z
?Inverse@CBaseMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CClassMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CCompositeMoniker@@EAGJPAPAUIMoniker@@@Z
?Inverse@CFileMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CItemMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CLUAMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CPackagerMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CPointerMoniker@@UAGJPAPAUIMoniker@@@Z
?Inverse@CSessionMoniker@@UAGJPAPAUIMoniker@@@Z
?InverseFromEnum@@YGJPAUIEnumMoniker@@PAPAUIMoniker@@@Z
?Invoke@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAUIRpcChannelBuffer@@@Z
?Invoke@CRpcStubBufferImpl@CDdeObject@@UAGJPAUtagRPCOLEMESSAGE@@PAUIRpcChannelBuffer@@@Z
?Invoke@CServerCallMgr@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAUIRpcChannelBuffer@@@Z
?Invoke@CallFrame@@UAAJPAXZZ
?Invoke@DISPATCH_CLIENT_FRAME@@UAAJPAXZZ
?Invoke@DISPATCH_FRAME@@QAGJPAX@Z
?Invoke@DISPATCH_SERVER_FRAME@@UAAJPAXZZ
?Invoke@LEGACY_INTERCEPTOR@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z
?IrotEnumRunning@CRpcResolver@@QAEJPAPAU_MkInterfaceList@@@Z
?IrotGetObject@CRpcResolver@@QAEJKPAU_MnkEqBuf@@PAU_SCMREGKEY@@PAPAUtagInterfaceData@@@Z
?IrotGetTimeOfLastChange@CRpcResolver@@QAEJPAU_MnkEqBuf@@PAU_FILETIME@@@Z
?IrotIsRunning@CRpcResolver@@QAEJPAU_MnkEqBuf@@@Z
?IrotNoteChangeTime@CRpcResolver@@QAEJPAU_SCMREGKEY@@PAU_FILETIME@@@Z
?IrotRegister@CRpcResolver@@QAEJPAU_MnkEqBuf@@PAUtagInterfaceData@@1PAU_FILETIME@@KKPAU_SCMREGKEY@@@Z
?IrotRevoke@CRpcResolver@@QAEJPAU_SCMREGKEY@@PAPAUtagInterfaceData@@1@Z
?IsAbsoluteNonUNCPath@@YGHPBG@Z
?IsAbsolutePath@@YGHPBG@Z
?IsAccessAllowed@CImpAccessControl@COAccessControl@@UAGJPAU_TRUSTEE_W@@PAGKPAH@Z
?IsActive@CDebugEventFire@@UAGJXZ
?IsAdviseStdItems@@YGHG@Z
?IsAllowableProtseq@@YGHGGQAG@Z
?IsAllowedDCOMProtocol@@YGHPAX@Z
?IsAnonymousAccessAllowed@@YGXPAU_SECURITY_DESCRIPTOR@@PAH@Z
?IsAntiMoniker@@YGPAVCAntiMoniker@@PAUIMoniker@@@Z
?IsApartmentInitialized@@YGHXZ
?IsAtOrAbove@CPubDocFile@@QAEHPAV1@@Z
?IsBSTR@OLEAUTOMATION_FUNCTIONS@@QAEHABU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsBlank@CEMfObject@@UAGHXZ
?IsBlank@CGenObject@@UAGHXZ
?IsBlank@CMfObject@@UAGHXZ
?IsBrokenRefCount@@YGHPAU_GUID@@@Z
?IsCallCanceled@CAsyncCall@@UAEHXZ
?IsCallCanceled@CClientCall@@UAEHXZ
?IsCallCompleted@CAsyncCall@@UAEHXZ
?IsCallCompleted@CClientCall@@UAEHXZ
?IsCallDispatched@CAsyncCall@@UAEHXZ
?IsCallDispatched@CClientCall@@UAEHXZ
?IsCallableFromCurrentApartment@CStdIdentity@@QAEHH@Z
?IsCancelIssued@CAsyncCall@@UAEHXZ
?IsCancelIssued@CClientCall@@UAEHXZ
?IsClassOfCategories@CComCat@@UAGJABU_GUID@@KQBU2@K1@Z
?IsClassOfCategories@CsCatInfo@@UAGJABU_GUID@@KQBU2@K1@Z
?IsClassOfCategoriesEx@CComCat@@SGJPAUHKEY__@@PAGKQBU_GUID@@K2@Z
?IsClientContextOK@ContextInfo@@UAGJPAH@Z
?IsClientWaiting@CAsyncCall@@UAEHXZ
?IsClientWaiting@CClientCall@@UAEHXZ
?IsComPlusConfiguredClass@CComClassInfo@@UAGJPAH@Z
?IsComPlusConfiguredClass@CComNoClassInfo@@UAGJPAH@Z
?IsComPlusConfiguredClass@CComSxSClassInfo@@UAGJPAH@Z
?IsComplusProcess@CSurrogateActivator@@QAEHPAPAU_GUID@@@Z
?IsCompositeMoniker@@YGPAVCCompositeMoniker@@PAUIMoniker@@@Z
?IsComsvcsCLSID@@YGHABU_GUID@@@Z
?IsConnected@CChannelObject@@UAGJXZ
?IsConnected@CCtxChnl@@UAGJXZ
?IsConnected@CDdeServerCallMgr@@UAGJXZ
?IsConnected@CDdeServerCallMgr@@W3AGJXZ
?IsConnected@CProxyManagerImpl@CDdeObject@@UAGHXZ
?IsConnected@CRpcChannelBuffer@@UAGJXZ
?IsConnected@CRpcChannelBuffer@@W3AGJXZ
?IsConnected@CStdIdentity@@UAGHXZ
?IsConnected@DDE_CHANNEL@@UAGJXZ
?IsConnected@DDE_CHANNEL@@W3AGJXZ
?IsConnected@MarshallingChannel@@UAGJXZ
?IsContentStream@@YGHPBG@Z
?IsContextDisconnecting@CCtxConnectionManager@@SGHXZ
?IsControlStreamExtant@CNtfsStorage@@CGHPAU_FILE_STREAM_INFORMATION@@@Z
?IsCurrentBinaryEnabledForTracing@@YGHXZ
?IsDataStream@@YGHQAU_FILE_STREAM_INFORMATION@@@Z
?IsDeactivated@CIDObject@@UAGHXZ
?IsDenied@CChildInstanceList@@QAEJPBVCDfName@@KK@Z
?IsDirty@CBaseMoniker@@UAGJXZ
?IsDirty@CClassMoniker@@UAGJXZ
?IsDirty@CDefLink@@UAGJXZ
?IsDirty@CDefObject@@UAGJXZ
?IsDirty@CFileMoniker@@UAGJXZ
?IsDirty@CImpAccessControl@COAccessControl@@UAGJXZ
?IsDirty@CObjrefMoniker@@UAGJXZ
?IsDirty@COleCache@@UAGJXZ
?IsDirty@CPackagerMoniker@@UAGJXZ
?IsDirty@CPersistStgImpl@CDdeObject@@UAGJXZ
?IsDocfileStream@@YGHPBG@Z
?IsDragDropActive@COLEDragDropHelper@@UAGJPAH@Z
?IsElevatedToken@@YGJPAXPAH@Z
?IsEmpty@CDeltaList@@QAEHXZ
?IsEmpty@CPatternTbl@@QAEHXZ
?IsEmptyContext@@YGHPAVCObjectContext@@@Z
?IsEmptyString@@YGHPAG@Z
?IsEncryptedFile@CFileStream@@UAGHXZ
?IsEntry@CDirectory@@QAEJKPBVCDfName@@PAUSEntryBuffer@@@Z
?IsEntry@CDocFile@@QAEJPBVCDfName@@PAUSEntryBuffer@@@Z
?IsEntry@CPubDocFile@@QAEJPBVCDfName@@PAUSEntryBuffer@@@Z
?IsEntry@CStgHandle@@QAEJPBVCDfName@@PAUSEntryBuffer@@@Z
?IsEntry@CUpdateList@@QAE?AW4UlIsEntry@@PBVCDfName@@PAPAVCUpdate@@@Z
?IsEntry@CWrappedDocFile@@QAEJPBVCDfName@@PAUSEntryBuffer@@@Z
?IsEntry@PDocFile@@QAEJPBVCDfName@@PAUSEntryBuffer@@@Z
?IsEqual@CAntiMoniker@@EAGJPAUIMoniker@@@Z
?IsEqual@CBaseMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CClassMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CCompositeMoniker@@EAGJPAUIMoniker@@@Z
?IsEqual@CDfName@@QBEHPBV1@@Z
?IsEqual@CFileMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CItemMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CLUAMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CObjrefMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CPackagerMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CPointerMoniker@@UAGJPAUIMoniker@@@Z
?IsEqual@CSessionMoniker@@UAGJPAUIMoniker@@@Z
?IsEqualFMTIDByteSwap@@YGHABU_GUID@@0@Z
?IsEqualLUID@@YGHU_LUID@@0@Z
?IsEqualPfn@OLEAUTOMATION_FUNCTIONS@@AAEHPAX0@Z
?IsFile@@YGHGPAH@Z
?IsFileMapped@CFileStream@@AAEHXZ
?IsFileMoniker@@YGPAVCFileMoniker@@PAUIMoniker@@@Z
?IsFormatAvailable@CDdeObject@@AAEJPAUtagFORMATETC@@@Z
?IsFormatAvailable@CDefClient@@AAEHG@Z
?IsFromMachineHive@@YGJPAUHKEY__@@PAH@Z
?IsHandleValid@CDfMutex@@QAEHPAG@Z
?IsHandleValid@CFileStream@@QAEHXZ
?IsHandleValid@CPerContext@@QAEHXZ
?IsHiddenStream@@YGHPBU_FILE_STREAM_INFORMATION@@@Z
?IsHmenuEqual@@YGHPAUHMENU__@@0@Z
?IsIIDSupported@CDdeServerCallMgr@@UAGPAUIRpcStubBuffer@@ABU_GUID@@@Z
?IsIIDSupported@CRpcStubBufferImpl@CDdeObject@@UAGPAUIRpcStubBuffer@@ABU_GUID@@@Z
?IsIIDSupported@CServerCallMgr@CRpcChannelBuffer@@UAGPAUIRpcStubBuffer@@ABU_GUID@@@Z
?IsIOPending@CRpcThread@@QAEHXZ
?IsIidInList@@YGHABU_GUID@@PAPBU1@@Z
?IsImpersonating@CServerCallMgr@CRpcChannelBuffer@@UAGHXZ
?IsImpersonating@CServerSecurity@@UAGHXZ
?IsImplementedInterface@CAggId@@AAEJABU_GUID@@PAPAX@Z
?IsInLocalProcess@OXIDEntry@@QAEHXZ
?IsInMemory@CDeltaList@@QAEHXZ
?IsInScm@CRunningObjectTable@@QAEHPAU_MnkEqBuf@@@Z
?IsInStream@CDeltaList@@QAEHXZ
?IsInproc@SerializableProperty@@QAEHPAVSerializer@@@Z
?IsInternalCLSID@@YGHABU_GUID@@K0AAJPAPAX@Z
?IsItemMoniker@@YGPAVCItemMoniker@@PAUIMoniker@@@Z
?IsLocalCaller@@YGJPAXPAH@Z
?IsLocalizationPropid@@YGEK@Z
?IsLongComponent@@YGHPBGPAPAG@Z
?IsMDIAccelerator@@YGHPAUtagMSG@@PAG@Z
?IsMTAHostInitialized@@YGHXZ
?IsMacPICTSupported@@YGHXZ
?IsMarshalerCLSID@@YGHABU_GUID@@@Z
?IsMenuCollision@CFrameFilter@@QAEHIJ@Z
?IsMethodInvocationAllowed@CGlobalOptions@@UAGJPAXHKPAH1PAK@Z
?IsModified@CExposedStream@@UBGEXZ
?IsModified@CNFFMappedStream@@UBGEXZ
?IsModified@CPubMappedStream@@QBEEXZ
?IsModified@CSSMappedStream@@UBGEXZ
?IsNAWrapper@CStdWrapper@@QAEHXZ
?IsNCDrop@@YGHPAUHWND__@@UtagPOINT@@@Z
?IsNffAppropriate@CNtfsStorage@@KGJPAXPBG@Z
?IsNffAppropriate@CNtfsStorage@@SGJPBG@Z
?IsNoScratch@CDeltaList@@QAEHXZ
?IsNtStreamExtant@@YGHPBU_FILE_STREAM_INFORMATION@@PBG@Z
?IsOKToDeleteClientObject@@YGHPAVCStdIdentity@@PAK@Z
?IsObjectCreationAllowed@CGlobalOptions@@UAGJPAXPAU_GUID@@KHKPAH2PAK@Z
?IsObjectCreationAllowed@CRpcResolver@@QAEJPAU_GUID@@KHPAH1PAK@Z
?IsObjectMenu@CFrameFilter@@QAEXII@Z
?IsObjrefMoniker@@YGPAVCObjrefMoniker@@PAUIMoniker@@@Z
?IsOfflineFile@CNtfsStorage@@CGJPAX@Z
?IsOidInPreRegList@CComApartment@@AAEHAB_K@Z
?IsOidInReturnList@CComApartment@@AAEHAB_K@Z
?IsOle1Class@CFileMoniker@@AAEHPAU_GUID@@@Z
?IsOleCommand@@YGHGG@Z
?IsOleInitialized@@YGHXZ
?IsOriginalPropVariantType@@YGHG@Z
?IsOwned@CDeltaList@@QAEJKKPAH@Z
?IsOwned@SDeltaBlock@@QAE?BHG@Z
?IsOwnerLinkStdOleLink@@YGHXZ
?IsPathSeparator@@YGHG@Z
?IsPointerMoniker@@YGPAVCPointerMoniker@@PAUIMoniker@@@Z
?IsReadOnlyPropertySet@@YGEEE@Z
?IsReadOnlyPropid@@YGEK@Z
?IsReallyRunning@CDefLink@@UAGHXZ
?IsReduced@@YGHPAUIMoniker@@@Z
?IsRename@CUpdate@@QBEHXZ
?IsReverted@CPropertyStorage@@AAEHXZ
?IsRoot@CPubDocFile@@QBEHXZ
?IsRunning@CBaseMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@CClassMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@CCompositeMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@CDefLink@@UAGHXZ
?IsRunning@CDefObject@@UAGHXZ
?IsRunning@CFileMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@CItemMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@COleItemContainerImpl@CDdeObject@@UAGJPAG@Z
?IsRunning@CPackagerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@CPointerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@1@Z
?IsRunning@CRunningObjectTable@@UAGJPAUIMoniker@@@Z
?IsRunningInRPCSS@@YGHXZ
?IsRunningInThisTask@@YGJPAGPAH@Z
?IsSAFEARRAY@OLEAUTOMATION_FUNCTIONS@@QAEHABU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsSafeToDispatch@@YGHI@Z
?IsSameAsObjectFormatEtc@@YGJPAUtagFORMATETC@@G@Z
?IsSectType@CFat@@AAEJKK@Z
?IsSectorInList@CMStream@@QAEHKPAKK@Z
?IsSeparator@@YGHG@Z
?IsServer@CIDObject@@UAGHXZ
?IsSharableEmbeddedPointers@@YG?AUHAS_INTERFACES@@PBE@Z
?IsSharableEmbeddedRepeatPointers@@YG?AUHAS_INTERFACES@@AAPBE@Z
?IsShareableType@@YG?AUHAS_INTERFACES@@PBE@Z
?IsSingleServerInstance@@YGHXZ
?IsSingleWriter@CPubDocFile@@IAEJXZ
?IsSorted@CMSFPageTable@@AAEHPAVCMSFPage@@@Z
?IsSpecifiedStream@@YGHPBU_FILE_STREAM_INFORMATION@@PBG@Z
?IsSupportedVarType@@YGHG@Z
?IsSystemMoniker@CAntiMoniker@@EAGJPAK@Z
?IsSystemMoniker@CBaseMoniker@@UAGJPAK@Z
?IsSystemMoniker@CClassMoniker@@UAGJPAK@Z
?IsSystemMoniker@CCompositeMoniker@@EAGJPAK@Z
?IsSystemMoniker@CFileMoniker@@UAGJPAK@Z
?IsSystemMoniker@CItemMoniker@@UAGJPAK@Z
?IsSystemMoniker@CLUAMoniker@@UAGJPAK@Z
?IsSystemMoniker@CObjrefMoniker@@UAGJPAK@Z
?IsSystemMoniker@CPackagerMoniker@@UAGJPAK@Z
?IsSystemMoniker@CPointerMoniker@@UAGJPAK@Z
?IsSystemMoniker@CSessionMoniker@@UAGJPAK@Z
?IsTableStrongObjRef@@YGHPAUtagSTDOBJREF@@@Z
?IsTableWeakObjRef@@YGHPAUtagSTDOBJREF@@@Z
?IsTaskName@@YGHPBG@Z
?IsThreadInNTA@@YGHXZ
?IsTimerAtZero@CCliModalLoop@@QAEHXZ
?IsUIAccessToken@@YGJPAXPAH@Z
?IsUpToDate@CDefLink@@UAGJXZ
?IsUpToDate@CDefObject@@UAGJXZ
?IsUpToDate@COleObjectImpl@CDdeObject@@UAGJXZ
?IsUserHiveOK@@YGJPAXPAH@Z
?IsValid@CHandle@@QBEHXZ
?IsValidCOMSecurityDescriptor@@YGHPAU_SECURITY_DESCRIPTOR_RELATIVE@@PAH@Z
?IsValidIID@ActivationProperties@@IAEJABU_GUID@@@Z
?IsValidInApartment@CDllPathEntry@CClassCache@@QAEHK@Z
?IsValidIndex@CInternalPageAllocator@@QAEHJ@Z
?IsValidIndex@CPageAllocator@@QAEHJ@Z
?IsValidLINDEX@@YGHKJ@Z
?IsValidObjRefHeader@@YGJAAUtagOBJREF@@@Z
?IsValidPtrIn@@YGHPBXI@Z
?IsValidPtrOut@@YGHPAXI@Z
?IsValidReadPtrIn@@YGHPBXI@Z
?IsValidStgInterface@@YGHPAX@Z
?IsVariant@OLEAUTOMATION_FUNCTIONS@@QAEHABU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsVariantType@@YGHG@Z
?IsWOWThread@@YGHXZ
?IsWOWThreadCallable@@YGHXZ
?IsWin31DropTarget@@YGHPAUHWND__@@@Z
?IsWindowValid@@YGHPAUHWND__@@@Z
?IsWriteable@CExposedStream@@UBGEXZ
?IsWriteable@CNFFMappedStream@@UBGEXZ
?IsWriteable@CPropertyStorage@@AAEHW4EIsWriteable@1@@Z
?IsWriteable@CSSMappedStream@@UBGEXZ
?Item@CMachineNamesHelper@@QAEPBGK@Z
?ItemCallBack@CDefClient@@AAEJHPAG@Z
?KeepData@CDdeObject@@AAEJPAVDDE_CHANNEL@@PAX@Z
?KillStream@CMStream@@QAEJK_K@Z
?Last@CCompositeMoniker@@QAEPAUIMoniker@@XZ
?LaunchApp@CDdeObject@@AAEHXZ
?LazyMarshalGIPEntry@CGIPTable@@AAEJK@Z
?LazyMarshalGIPEntryCallback@@YGJPAX@Z
?LeaveNTA@@YGPAVCObjectContext@@PAV1@@Z
?LeaveServiceDomain@@YGJPAPAUIObjContext@@@Z
?LetExclusiveRun@XSLOCK@@AAEXXZ
?LetSharedRun@XSLOCK@@AAEXXZ
?Load@CAntiMoniker@@EAGJPAUIStream@@@Z
?Load@CBaseMoniker@@UAGJPAUIStream@@@Z
?Load@CCacheNode@@QAEJPAUIStream@@HH@Z
?Load@CClassMoniker@@UAGJPAUIStream@@@Z
?Load@CCompositeMoniker@@EAGJPAUIStream@@@Z
?Load@CDefLink@@UAGJPAUIStorage@@@Z
?Load@CDefObject@@UAGJPAUIStorage@@@Z
?Load@CEMfObject@@UAGJPAUIStream@@H@Z
?Load@CExtentList@@QAEJPAUIStream@@K@Z
?Load@CFileMoniker@@UAGJPAUIStream@@@Z
?Load@CGenObject@@UAGJPAUIStream@@H@Z
?Load@CImpAccessControl@COAccessControl@@UAGJPAUIStream@@@Z
?Load@CItemMoniker@@UAGJPAUIStream@@@Z
?Load@CLUAMoniker@@UAGJPAUIStream@@@Z
?Load@CMfObject@@UAGJPAUIStream@@H@Z
?Load@CObjrefMoniker@@UAGJPAUIStream@@@Z
?Load@COleCache@@QAEJPAUIStorage@@H@Z
?Load@COleCache@@UAGJPAUIStorage@@@Z
?Load@CPackagerMoniker@@UAGJPAUIStream@@@Z
?Load@CPersistStgImpl@CDdeObject@@UAGJPAUIStorage@@@Z
?Load@CSessionMoniker@@UAGJPAUIStream@@@Z
?Load@OLEAUTOMATION_FUNCTIONS@@AAEXXZ
?LoadDll@CDllPathEntry@CClassCache@@SGJAAUDLL_INSTANTIATION_PROPERTIES@@AAP6GJABU_GUID@@1PAPAX@ZAAP6GJXZAAPAUHINSTANCE__@@@Z
?LoadDllServer@CCOMSurrogate@@SGJABU_GUID@@@Z
?LoadDllServer@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?LoadHPRES@CEMfObject@@AAEPAUHENHMETAFILE__@@XZ
?LoadHPRES@CGenObject@@AAEPAXXZ
?LoadHPRES@CMfObject@@AAEPAXXZ
?LoadModule@CStackWalker@@CG_KPAX_K@Z
?LoadObject@CPropertyBagEx@@ABEJPAUtagPROPVARIANT@@0@Z
?LoadOleAut32@OLEAUTOMATION_FUNCTIONS@@AAEJXZ
?LoadPersistedDataObjectFromHGlobal@@YGJPAXPAPAUIDataObject@@@Z
?LoadPersistentObject@@YGJPAUIUnknown@@PAUIInstanceInfo@@@Z
?LoadPropVariantFromVectorElem@@YGJPAUtagPROPVARIANT@@PBU1@H@Z
?LoadResourceStrings@@YGXXZ
?LoadResultFromScm@CRotMonikerEnum@@QAEJPAU_MkInterfaceList@@@Z
?LoadSystemProc@@YGHPADPBDPAPAUHINSTANCE__@@PAP6GHXZ@Z
?LoadTOC@COleCache@@AAEJPAUIStream@@PAUIStorage@@@Z
?LoadTOCEntry@CCacheNode@@QAEJPAUIStream@@AAH@Z
?LocalAuthnService@@YGKG@Z
?LocalCall@@YGHXZ
?LocalMemAlloc@@YGPAXK@Z
?LocalMemFree@@YGXPAX@Z
?Locate@COleCache@@AAEPAVCCacheNode@@KJPAUtagDVTARGETDEVICE@@@Z
?Locate@COleCache@@AAEPAVCCacheNode@@PAUtagFORMATETC@@PAK@Z
?Lock@CComClassInfo@@UAGJXZ
?Lock@CComNoClassInfo@@UAGJXZ
?Lock@CComSxSClassInfo@@UAGJXZ
?Lock@CDDEServer@@QAEXHPAUHWND__@@@Z
?Lock@CExposedDocFile@@UAGJK@Z
?Lock@CExposedStream@@UAGJE@Z
?Lock@CNFFMappedStream@@UAGJE@Z
?Lock@CNFFTreeMutex@@UAGJK@Z
?Lock@CNtfsStorage@@UAGJK@Z
?Lock@CPropertySetStorage@@IAEXXZ
?Lock@CPropertyStorage@@AAEJXZ
?Lock@CPubMappedStream@@QAEJE@Z
?Lock@CSSMappedStream@@UAGJE@Z
?Lock@CStdWrapper@@QAEJPAVCPolicySet@@@Z
?LockCleanup@EventPoolEntry@@SGXPAV1@@Z
?LockClient@CStdMarshal@@QAEKXZ
?LockConnection@CProxyManagerImpl@CDdeObject@@UAGJHH@Z
?LockConnection@CStdIdentity@@UAGJHH@Z
?LockContainer@COleItemContainerImpl@CDdeObject@@UAGJH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAEHH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@QAEHH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAEHH@Z
?LockExclusive@XSLOCK@@QAEHH@Z
?LockInit@EventPoolEntry@@SGHXZ
?LockObjectExternal@CStdIdentity@@QAEJHH@Z
?LockRegion@CExpParameterValidate@@SGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CExposedStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CFileStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CMemBytes@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CMemStm@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNdrStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNtfsStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNtfsStream@@W3AGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CSimpStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CStreamOnMessage@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRegion@GenericStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?LockRunning@CDefLink@@UAGJHH@Z
?LockRunning@CDefObject@@UAGJHH@Z
?LockServer@CDebugEventFireCF@@UAGJH@Z
?LockServer@CDocfileUnmarshalFactory@@UAGJH@Z
?LockServer@CMonikerFactory@@UAGJH@Z
?LockServer@CStdClassFactory@@UAGJH@Z
?LockServer@CStdMarshal@@QAEXXZ
?LockServer@ComPsClassFactory@@UAGJH@Z
?LockServerForActivation@CClassCache@@SGJXZ
?LockShared@?$MAP_SHARED@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAEHH@Z
?LockShared@?$MAP_SHARED@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@QAEHH@Z
?LockShared@?$MAP_SHARED@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAEHH@Z
?LockShared@XSLOCK@@QAEHH@Z
?LogAccessFailed@@YGXPAXPAU_GUID@@1K0HW4tagEventLogModes@@W4tagEventLogSD@@@Z
?LogEventClassRegistration@@YGXJPAU_RegInput@@PAU_RegOutput@@@Z
?LogEventClassRevokation@@YGXABU_GUID@@K@Z
?LogEventCleanup@@YGXXZ
?LogEventClientCall@@YGXPAK@Z
?LogEventClientReturn@@YGXPAK@Z
?LogEventDisconnect@@YGXPBU_GUID@@PAVMIDEntry@@H@Z
?LogEventGetClassObject@@YGJABU_GUID@@PAPAX@Z
?LogEventInitialize@@YGXXZ
?LogEventIsActive@@YGHXZ
?LogEventMarshal@@YGXAAUtagOBJREF@@@Z
?LogEventStubEnter@@YGXPAK@Z
?LogEventStubException@@YGXPAK@Z
?LogEventStubLeave@@YGXPAK@Z
?LogEventUnmarshal@@YGXAAUtagOBJREF@@@Z
?LogInvalidSecurityDescriptor@@YGXPAU_GUID@@KW4tagEventLogSD@@@Z
?LogMacPictMsg@@YGXK@Z
?LookForConfiguredClsid@@YGJABU_GUID@@AAU1@K@Z
?LookUpEntry@CEffPermsCacheLUID@@QAEHU_LUID@@PAK@Z
?Lookup@CApartmentHashTable@@QAEPAUApartmentEntry@@K@Z
?Lookup@CCtxPropHashTable@@QAEPAVCObjectContext@@PAV2@H@Z
?Lookup@CCtxUUIDHashTable@@QAEPAVCObjectContext@@ABU_GUID@@@Z
?Lookup@CDIFat@@QAEJKPAK@Z
?Lookup@CDdeConnectionTable@@QAEJGPAK@Z
?Lookup@CHashTable@@IAEPAUSHashChain@@KPBX@Z
?Lookup@CMapKeyToValue@@QBEHPAXI0@Z
?Lookup@CMapStringToPtr@@QBEHPAGAAPAX@Z
?Lookup@COIDTable@@QAEPAVCIDObject@@ABU_GUID@@K@Z
?Lookup@CPIDTable@@QAEPAVCIDObject@@PAUIUnknown@@PAVCObjectContext@@H@Z
?Lookup@CPSHashTable@@QAEPAVCPolicySet@@KPAVCObjectContext@@0@Z
?Lookup@CPSTable@@QAEJPAVCObjectContext@@0PAPAVCPolicySet@@@Z
?LookupCE@CCEHashTable@CClassCache@@QAEPAVCClassEntry@2@KABUSMultiGUIDKey@@@Z
?LookupCE@CCEHashTable@CClassCache@@QAEPAVCClassEntry@2@KABU_GUID@@0@Z
?LookupCtxEntry@CStdWrapper@@QAEPAVCtxEntry@@PAVCObjectContext@@@Z
?LookupCtxEntry@IFaceEntry@@QAEPAVCtxEntry@@PAVCObjectContext@@@Z
?LookupEntry@CtxEntry@@SGPAV1@PAV1@PAVCObjectContext@@PAPAV1@K@Z
?LookupExistingContext@CCtxTable@@SGPAVCObjectContext@@ABU_GUID@@@Z
?LookupExistingContext@CCtxTable@@SGPAVCObjectContext@@PAV2@H@Z
?LookupFromIPIDTables@CIPIDTable@@QAEJABU_GUID@@PAPAUtagIPIDEntry@@PAPAVOXIDEntry@@@Z
?LookupHKey@CMapKeyToValue@@QBEHPAUHMAPKEY__@@PAX@Z
?LookupIPID@CIPIDTable@@QAEPAUtagIPIDEntry@@ABU_GUID@@@Z
?LookupMID@CMIDTable@@QAEPAVMIDEntry@@PAUtagDUALSTRINGARRAY@@PAK@Z
?LookupOXID@COXIDTable@@AAEPAVOXIDEntry@@AB_K0@Z
?LookupPrincName@@YGJGPAPAG@Z
?LookupRefCache@CROIDTable@@QAEPAVCRefCache@@ABU_GUID@@@Z
?LookupSOID@CROIDTable@@QAEPAUSOIDRegistration@@ABU_GUID@@PAK@Z
?MOXIDFromOXIDAndMID@@YGXAB_K0PAU_GUID@@@Z
?MTAInvoke@@YGJPAUtagRPCOLEMESSAGE@@KPAUIRpcStubBuffer@@PAVIInternalChannelBuffer@@PAUtagIPIDEntry@@PAK@Z
?MTAWorkerLoop@CDllHost@@AAEXPAX@Z
?MTHostActivatorGetClassObject@@YGJABU_GUID@@PAPAX@Z
?MWrite@CMStream@@QAEJKH_KPBXKPAVCStreamCache@@PAK@Z
?MakeCliIPIDEntry@CStdMarshal@@AAEJABU_GUID@@PAUtagSTDOBJREF@@PAVOXIDEntry@@PAPAUtagIPIDEntry@@@Z
?MakeCloakedSCMProxy@@YGJPAXPAPAX@Z
?MakeCollectable@CClassEntry@CClassCache@@QAEXXZ
?MakeCollectable@CCollectable@CClassCache@@QAEXXZ
?MakeCopyFlags@CExposedDocFile@@CGKKPBU_GUID@@@Z
?MakeDDEData@@YGHPAXHPAPAXH@Z
?MakeDataAtom@@YGGGH@Z
?MakeFakeObjRef@@YGJAAUtagOBJREF@@PAVOXIDEntry@@ABU_GUID@@2@Z
?MakeFileMapAddressValid@CFileStream@@AAEJK@Z
?MakeFileMapAddressValidWorker@CFileStream@@AAEJKK@Z
?MakeFileStub@CFileStream@@AAEJXZ
?MakeGlobal@@YGPAXPAD@Z
?MakeItemData@@YGPAXPAUDDEPOKE@@PAXG@Z
?MakeOwn@SDeltaBlock@@QAEXG@Z
?MakeProxyHelper@@YGJPAUtagDUALSTRINGARRAY@@ABU_GUID@@KKPAPAX@Z
?MakeRemUnk@OXIDEntry@@AAEJXZ
?MakeSCMEntry@COXIDTable@@QAEJAB_KPAUtagOXID_INFO@@PAPAVOXIDEntry@@@Z
?MakeSCMProxy@@YGJPAUtagDUALSTRINGARRAY@@ABU_GUID@@PAPAX@Z
?MakeServerEntry@COXIDTable@@QAEJPAPAVOXIDEntry@@@Z
?MakeValidInApartment_rl16@CDllPathEntry@CClassCache@@QAEJABU_GUID@@PAUHINSTANCE__@@P6GJ00PAPAX@ZP6GJXZ@Z
?MallocInitialize@@YGJXZ
?MallocUninitialize@@YGHXZ
?Map@CExposedStream@@UAGXEPAPAX@Z
?Map@CNFFMappedStream@@UAGXEPAPAX@Z
?Map@CPubMappedStream@@QAEXEPAPAX@Z
?Map@CSSMappedStream@@UAGXEPAPAX@Z
?MapCFToFormatetc@@YGJPAUHWND__@@IPAUtagFORMATETC@@@Z
?MapNameToPropId@@YGKPAVCPropertySetStream@@GQBUtagPROPSPEC@@KKKPAJ@Z
?MapStreamACLToAccessList@@YGJPAUtagPCB@@PAPAU_ACTRL_ALISTW@@@Z
?MapView@CFileStream@@AAEJKKK@Z
?MarkError@CServerCallMgr@CRpcChannelBuffer@@QAEKJ@Z
?MarkSect@CFat@@AAEJPAUSGetFreeStruct@@@Z
?Marshal@CDllHost@@AAEJXZ
?Marshal@CallFrame@@UAGJPAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PAXKPAK33@Z
?Marshal@DISPATCH_CLIENT_FRAME@@UAGJPAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PAXKPAK33@Z
?Marshal@DISPATCH_SERVER_FRAME@@UAGJPAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PAXKPAK33@Z
?MarshalClientIPID@CStdMarshal@@AAEJABU_GUID@@KKPAPAUtagIPIDEntry@@@Z
?MarshalEnvoy@CObjectContext@@UAGJPAUIStream@@K@Z
?MarshalEnvoyProperties@CObjectContext@@QAEJAAKAAPAUtagContextProperty@@PAUIStream@@K@Z
?MarshalHelperMulti@@YGJPAUIUnknown@@KPAU_GUID@@PAPAUtagMInterfacePointer@@PAJPAVCDestObject@@@Z
?MarshalIPID@CStdMarshal@@QAEJABU_GUID@@KKPAPAUtagIPIDEntry@@PAUIUnknown@@@Z
?MarshalInterface@ActivationProperties@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CClassMoniker@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CDestObjectWrapper@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CDocfileUnmarshalFactory@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CErrorObject@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CExposedDocFile@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CExposedStream@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CFreeMarshaler@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CMarshalImplPStream@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CObjectContext@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CPointerMoniker@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CSimpStorage@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CSimpStream@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CStaticWrapper@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CStdMarshal@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@CStdWrapper@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInterface@InprocActpropsUnmarshaller@@UAGJPAUIStream@@ABU_GUID@@PAXK2K@Z
?MarshalInternalObjRef@@YGJAAUtagOBJREF@@ABU_GUID@@PAXKPAPAX@Z
?MarshalItfPtrs@CCtxCall@@UAGJABU_GUID@@PAPAXHH@Z
?MarshalObjRef@@YGJAAUtagOBJREF@@ABU_GUID@@PAXKK2@Z
?MarshalObjRef@CStdMarshal@@QAEJAAUtagOBJREF@@ABU_GUID@@KKPAXPAUIUnknown@@@Z
?MarshalParam@CallFrame@@QAEXAAU_MIDL_STUB_MESSAGE@@KABUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PAE@Z
?MarshalProperties@CObjectContext@@QAEJAAKAAPAUtagContextProperty@@PAUIStream@@ABU_GUID@@PAXK4K@Z
?MarshalPropertyHeader@CObjectContext@@QAEJAAPAUIStream@@ABU_GUID@@PAUtagContextProperty@@AAT_ULARGE_INTEGER@@3@Z
?MarshalServer@CStdWrapper@@QAEJPAVCPolicySet@@PAUIStream@@ABU_GUID@@KPAXK@Z
?MarshalServerIPID@CStdMarshal@@AAEJABU_GUID@@KKPAPAUtagIPIDEntry@@PAUIUnknown@@@Z
?MarshalSizeHelper@@YGJKPAXKPAVCObjectContext@@HPAK@Z
?MarshaledByThisProcess@@YGHABUtagCONTEXTHEADER@@@Z
?MatchFormatetc@CClipDataObject@@AAE?AW4FormatMatchFlag@@PAUtagFORMATETC@@HPAW4tagTYMED@@@Z
?MaybeCreateDocWindow@@YGJGGPAUHWND__@@0@Z
?MaybeUnlaunchApp@CDdeObject@@AAEJXZ
?MemoryIncrement@CallFrame@@QAEPAEPAEPBEH@Z
?MfCallbackFuncForDraw@@YGHPAUHDC__@@PAUtagHANDLETABLE@@PAUtagMETARECORD@@HJ@Z
?MfCallbackFuncForGetColorSet@@YGHPAUHDC__@@PAUtagHANDLETABLE@@PAUtagMETARECORD@@HJ@Z
?MfGetSize@@YGKPAPAX@Z
?MfToPres@@YGJPAXPAVCPres@@@Z
?MnkMultiToUnicode@@YGJPADAAPAGKAAGI@Z
?MnkUnicodeToMulti@@YGJPAGGAAPADAAGAAH@Z
?ModalLoop@@YGJPAVCMessageCall@@@Z
?ModeToDFlags@@YGKK@Z
?ModeToNtFlags@CNtfsStorage@@CGJKKHPAK0000@Z
?ModuleName@CStackWalkerSymbol@@UAGPBGXZ
?MonikerDllGetClassObject@@YGJABU_GUID@@0PAPAX@Z
?MoveElementTo@CExpParameterValidate@@SGJPBGPAUIStorage@@0K@Z
?MoveElementTo@CExposedDocFile@@UAGJPBGPAUIStorage@@0K@Z
?MoveElementTo@CNtfsStorage@@UAGJPBGPAUIStorage@@0K@Z
?MoveElementTo@CNtfsStorageForPropSetStg@@UAGJPBGPAUIStorage@@0K@Z
?MoveElementTo@CSimpStorage@@UAGJPBGPAUIStorage@@0K@Z
?MoveElementWorker@CExposedDocFile@@AAEJPBGPAUIStorage@@0K@Z
?MoveSect@CMStream@@QAEJKKK@Z
?MustRunInClientContext@CComClassInfo@@UAGJPAH@Z
?MustRunInClientContext@CComNoClassInfo@@UAGJPAH@Z
?MustRunInClientContext@CComSxSClassInfo@@UAGJPAH@Z
?MyPeekMessage@CCliModalLoop@@QAEHPAUtagMSG@@PAUHWND__@@IIG@Z
?NAUninitialize@@YGXXZ
?NFFOpen@@YGJPBGKKHPAXABU_GUID@@PAPAX@Z
?NFFOpenOnHandle@@YGJHKKPAPAXABU_GUID@@0@Z
?NTHostActivatorGetClassObject@@YGJABU_GUID@@PAPAX@Z
?NTMaskToStandardMask@@YGXPAK0@Z
?NTServiceCtrlHandler@CSurrogateProcessActivator@@SGXK@Z
?NTServiceMain@CSurrogateProcessActivator@@SGXKPAPAG@Z
?NameCompare@CDirectory@@SGHPBVCDfName@@0@Z
?NameInSNB@@YGJPBVCDfName@@PAPAG@Z
?NativeToStorage@@YGJPAUIStorage@@PAX@Z
?NbNaRgtRA1@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEKPAK@Z
?NbNaRgtRA1@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJKPAK@Z
?NbNaRgtRA1@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANKPAK@Z
?NbNf1@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEK@Z
?NbNf1@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJK@Z
?NbNf1@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANK@Z
?NbaRgtRA3@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEKPAK@Z
?NbaRgtRA3@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJKPAK@Z
?NbaRgtRA3@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANKPAK@Z
?NbaRltRA2@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEKPAK@Z
?NbaRltRA2@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJKPAK@Z
?NbaRltRA2@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANKPAK@Z
?NdrClientZeroOut@@YGXPAU_MIDL_STUB_MESSAGE@@PBEPAE@Z
?NdrGetBaseInterfaceFromStub@@YGJPAUIRpcStubBuffer@@PAPAU1@PAU_GUID@@@Z
?NdrStringRead@@YGJPAUIStream@@PAPAG@Z
?NdrStringSize@@YGKPBG@Z
?NdrStringWrite@@YGJPAUIStream@@PBG@Z
?NdrpFindInterface@@YGHPAPBUtagProxyFileInfo@@ABU_GUID@@0PAJ@Z
?NegotiateDCOMVersion_Client@@YGXPAUtagCOMVERSION@@@Z
?NegotiateDllInstantiationProperties2@CDllPathEntry@CClassCache@@SGJKABU_GUID@@AAUDLL_INSTANTIATION_PROPERTIES@@PAUIComClassInfo@@PAVActivationPropertiesIn@@H@Z
?NegotiateDllInstantiationProperties@CDllPathEntry@CClassCache@@SGJKKABU_GUID@@AAUDLL_INSTANTIATION_PROPERTIES@@PAUIComClassInfo@@PAVActivationPropertiesIn@@H@Z
?NewAssoc@CMapKeyToValue@@AAEPAUCAssoc@1@IPAXI0@Z
?NewCNtfsStream@CNtfsStorage@@QAEJPBGKHPAPAVCNtfsStream@@@Z
?Next@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGJKPAUtagCATEGORYINFO@@PAK@Z
?Next@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGJKPAU_GUID@@PAK@Z
?Next@CAddrExclusionList@@UAGJKPAPAGPAK@Z
?Next@CCompositeMonikerEnum@@UAGJKPAPAUIMoniker@@PAK@Z
?Next@CEnumCategories@@UAGJKPAUtagCATEGORYINFO@@PAK@Z
?Next@CEnumCategoriesOfClass@@UAGJKPAU_GUID@@PAK@Z
?Next@CEnumClassesOfCategories@@UAGJKPAU_GUID@@PAK@Z
?Next@CEnumContextProps@@UAGJKPAUtagContextProperty@@PAK@Z
?Next@CEnumFmt10@@UAGJKPAUtagFORMATETC@@PAK@Z
?Next@CEnumFmt@@UAGJKPAUtagFORMATETC@@PAK@Z
?Next@CEnumFormatEtc@@UAGJKPAUtagFORMATETC@@PAK@Z
?Next@CEnumFormatEtcDataArray@@UAGJKPAUtagFORMATETC@@PAK@Z
?Next@CEnumSTATDATA@@UAGJKPAUtagSTATDATA@@PAK@Z
?Next@CEnumSTATPROPBAG@@UAGJKPAUtagSTATPROPBAG@@PAK@Z
?Next@CEnumSTATPROPSETSTG@@UAGJKPAUtagSTATPROPSETSTG@@PAK@Z
?Next@CEnumSTATPROPSTG@@UAGJKPAUtagSTATPROPSTG@@PAK@Z
?Next@CEnumStatData@@UAGJKPAUtagSTATDATA@@PAK@Z
?Next@CEnumVerb@@EAGJKPAUtagOLEVERB@@PAK@Z
?Next@CExpParameterValidate@@SGJKPAUtagSTATSTG@@PAK@Z
?Next@CExposedIterator@@UAGJKPAUtagSTATSTG@@PAK@Z
?Next@CLocalMachineNames@@UAGJKPAPAGPAK@Z
?Next@CNoEnum@@UAGJKPAPAUIUnknown@@PAK@Z
?Next@CNtfsEnumSTATSTG@@UAGJKPAUtagSTATSTG@@PAK@Z
?Next@CPtrCache@@QAEHPAPAX@Z
?Next@CRotMonikerEnum@@UAGJKPAPAUIMoniker@@PAK@Z
?Next@CSimpEnumSTATSTG@@UAGJKPAUtagSTATSTG@@PAK@Z
?Next@CStackWalkerSymbol@@UAGPAUIStackWalkerSymbol@@XZ
?NextAt@CNtfsSTATSTGArray@@QAEJKPAUtagSTATSTG@@PAK@Z
?NextAt@CSTATPROPBAGArray@@QAEJKPAUtagSTATPROPBAG@@PAK@Z
?NextAt@CStatArray@@QAEJKPAUtagSTATPROPSTG@@PAK@Z
?NextFSI@@YGPAU_FILE_STREAM_INFORMATION@@PBU1@@Z
?NoItemConnections@CDefClient@@QAEJXZ
?NoLongerNeeded@CClassEntry@CClassCache@@UAEHXZ
?NoteChangeTime@CRunningObjectTable@@UAGJKPAU_FILETIME@@@Z
?Notify@CAsyncConnection@@QAEJJPAUILockBytes@@PAVCPerContext@@PAVCSafeSem@@@Z
?Notify@CPolicySet@@QAEJPAVCRpcCall@@W4tagCallType@@PAVCCtxCall@@@Z
?NotifyActivation@@YGHHPAUIUnknown@@@Z
?NotifyContextAbandonment@CObjectContext@@QAEXXZ
?NotifyDDStartOrStop@CRpcResolver@@QAEJH@Z
?NotifyDisconnect@CStdMarshal@@AAEXXZ
?NotifyInitializeSpies@@YGJHHKJ@Z
?NotifyOIDIsPinned@CIDObject@@QAEXXZ
?NotifyOIDIsUnpinned@CIDObject@@QAEXXZ
?NotifyServerException@CObjectContext@@QAEXPAU_EXCEPTION_POINTERS@@@Z
?NotifySinks@CConnectionPoint@@UAGJKKHJ@Z
?NotifyStarted@CRpcResolver@@QAEJPAU_RegInput@@PAPAU_RegOutput@@@Z
?NotifyStopped@CRpcResolver@@QAEXABU_GUID@@K@Z
?NotifySurrogateInitializing@CRpcResolver@@QAEJXZ
?NotifySurrogatePaused@CRpcResolver@@QAEJXZ
?NotifySurrogateReady@CRpcResolver@@QAEJXZ
?NotifySurrogateResumed@CRpcResolver@@QAEJXZ
?NotifySurrogateStarted@CRpcResolver@@QAEJPAU_ProcessActivatorToken@@@Z
?NotifySurrogateStopped@CRpcResolver@@QAEJXZ
?NotifySurrogateUserInitializing@CRpcResolver@@QAEJXZ
?NotifyUnpinOutcome@COIDTable@@QAEXH@Z
?NotifyWorkWaiting@CROIDTable@@QAEXXZ
?NtStatusToScode@@YGJJ@Z
?NullOXIDReferencesInIPIDEntries@CStdMarshal@@QAEXXZ
?Nullify@CRpcCall@@UAGJJ@Z
?OIDChainToIDObject@CIDObject@@SGPAV1@PAUSHashChain@@@Z
?OIDUnpinReqChainToIDObject@CIDObject@@SGPAV1@PAUSHashChain@@@Z
?ORPCInterfaceSecCallback@@YGJPAX0@Z
?ObjectServerLoadDll@CObjServer@@UAGJPAU_GUID@@PAK@Z
?ObjectServerLoadDll@CSurrogateProcessActivator@@UAGJPAU_GUID@@PAK@Z
?ObtainPolicySet@@YGJPAVCObjectContext@@0KPAHPAPAVCPolicySet@@@Z
?ObtainStdIDFromOID@@YGJABU_GUID@@KHPAPAVCStdIdentity@@@Z
?ObtainStdIDFromUnk@@YGJPAUIUnknown@@KPAVCObjectContext@@KPAPAVCStdIdentity@@@Z
?ObtainWrapper@@YGPAVCStdWrapper@@PAUIUnknown@@HK@Z
?Ole10_CLSIDFromString@@YGJPBGPAU_GUID@@H@Z
?Ole10_ParseMoniker@@YGJPAUIMoniker@@PAPAG1@Z
?Ole10_StringFromCLSID@@YGJABU_GUID@@PAGH@Z
?Ole232DllGetClassObject@@YGJABU_GUID@@0PAPAX@Z
?OleCallBack@CDdeObject@@QAEJHPAVDDE_CHANNEL@@@Z
?OleDdeDeleteMetaFile@@YGXPAX@Z
?OleGetClipboardData@CClipDataObject@@AAEJIPAPAX@Z
?OleIsClipboardFormatAvailable@CClipDataObject@@AAEHI@Z
?OleLoadWithoutBinding@@YGJPAUIStorage@@HABU_GUID@@PAUIOleClientSite@@PAPAX@Z
?OleMainThreadWndProc@@YGJPAUHWND__@@IIJ@Z
?OleModalLoopBlockFn@@YGJPAX00@Z
?OleOpenClipboard@@YGJPAUHWND__@@PAPAU1@@Z
?OnAck@CDdeObject@@QAEHPAVDDE_CHANNEL@@J@Z
?OnCall@CCtxChnl@@UAGJPAUICallFrame@@@Z
?OnCall@LEGACY_INTERCEPTOR@@UAGJPAUICallFrame@@@Z
?OnClose@CAdvSinkImpl@CDefLink@@UAGXXZ
?OnClose@CAdvSinkImpl@CDefObject@@UAGXXZ
?OnClose@CAdviseSinkImpl@CDefClient@@UAGXXZ
?OnClose@CAdviseSinkImpl@COleCache@@UAGXXZ
?OnCodeInstallProblem@DefaultIBindStatusCallback@@UAGJKPBG0K@Z
?OnCrash@COleCache@@QAEJXZ
?OnData@CDdeObject@@QAEJPAVDDE_CHANNEL@@PAXG@Z
?OnDataAvailable@CBindStatusCallback@@UAGJKKPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?OnDataAvailable@CDdeObject@@QAEJPAVDDE_CHANNEL@@PAXG@Z
?OnDataAvailable@DefaultIBindStatusCallback@@UAGJKKPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefLink@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefObject@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@CDefClient@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@COleCache@@UAGXPAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?OnDisconnect@CRunningObjectTable@@UAGXPAX@Z
?OnEnterAltTabMode@CFrameFilter@@QAEXXZ
?OnEnterMenuMode@CFrameFilter@@QAEXXZ
?OnExitAltTabMode@CFrameFilter@@QAEXXZ
?OnExitMenuMode@CFrameFilter@@QAEXXZ
?OnExtentChange@CAdviseSinkImpl@CDefClient@@UAGXKPAUtagSIZE@@@Z
?OnInitAck@CDdeObject@@QAEXPAVDDE_CHANNEL@@PAUHWND__@@@Z
?OnLowResource@CBindStatusCallback@@UAGJK@Z
?OnLowResource@DefaultIBindStatusCallback@@UAGJK@Z
?OnMainThread@@YGHXZ
?OnMessage@CFrameFilter@@QAEJIIJ@Z
?OnObjectAvailable@CBindStatusCallback@@UAGJABU_GUID@@PAUIUnknown@@@Z
?OnObjectAvailable@DefaultIBindStatusCallback@@UAGJABU_GUID@@PAUIUnknown@@@Z
?OnProgress@CBindStatusCallback@@UAGJKKKPBG@Z
?OnProgress@DefaultIBindStatusCallback@@UAGJKKKPBG@Z
?OnRename@CAdvSinkImpl@CDefLink@@UAGXPAUIMoniker@@@Z
?OnRename@CAdvSinkImpl@CDefObject@@UAGXPAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@CDefClient@@UAGXPAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@COleCache@@UAGXPAUIMoniker@@@Z
?OnRun@COleCache@@UAGJPAUIDataObject@@@Z
?OnSave@CAdvSinkImpl@CDefLink@@UAGXXZ
?OnSave@CAdvSinkImpl@CDefObject@@UAGXXZ
?OnSave@CAdviseSinkImpl@CDefClient@@UAGXXZ
?OnSave@CAdviseSinkImpl@COleCache@@UAGXXZ
?OnShowWindow@COleClientSiteImpl@CDefClient@@UAGJH@Z
?OnStartBinding@CBindStatusCallback@@UAGJKPAUIBinding@@@Z
?OnStartBinding@DefaultIBindStatusCallback@@UAGJKPAUIBinding@@@Z
?OnStop@COleCache@@UAGJXZ
?OnStopBinding@CBindStatusCallback@@UAGJJPBG@Z
?OnStopBinding@DefaultIBindStatusCallback@@UAGJJPBG@Z
?OnSysCommand@CFrameFilter@@QAEJIJ@Z
?OnTerminate@CDdeObject@@QAEJPAVDDE_CHANNEL@@PAUHWND__@@@Z
?OnTimer@CDdeObject@@QAEXPAVDDE_CHANNEL@@@Z
?OnViewChange@CAdvSinkImpl@CDefLink@@UAGXKJ@Z
?OnViewChange@CAdvSinkImpl@CDefObject@@UAGXKJ@Z
?OnViewChange@CAdviseSinkImpl@CDefClient@@UAGXKJ@Z
?OnViewChange@CAdviseSinkImpl@COleCache@@UAGXKJ@Z
?OnWalkInterface@CCtxCall@@UAGJABU_GUID@@PAPAXHH@Z
?OnWalkInterface@CNullWalker@@UAGJABU_GUID@@PAPAXHH@Z
?OnWalkInterface@InterfaceWalkerFree@@UAGJABU_GUID@@PAPAXHH@Z
?OnWalkInterface@SSimpleWalker@@UAGJABU_GUID@@PAPAXHH@Z
?Open@CExposedStream@@UAGXPAVCPropertySetStream@@PAJ@Z
?Open@CNFFMappedStream@@UAGXPAVCPropertySetStream@@PAJ@Z
?Open@CPropertyBagEx@@UAGJPAUIUnknown@@PBGU_GUID@@KABU3@PAPAU2@@Z
?Open@CPropertySetStorage@@UAGJABU_GUID@@KPAPAUIPropertyStorage@@@Z
?Open@CPropertySetStream@@QAEXPBU_GUID@@0KPAKGKPAJ@Z
?Open@CPropertyStorage@@QAEJPAUIStorage@@ABU_GUID@@KK@Z
?Open@CPropertyStorage@@QAEJPAUIStream@@ABU_GUID@@KKH@Z
?Open@CPubMappedStream@@QAEXPAVCPropertySetStream@@PAJ@Z
?Open@CSSMappedStream@@UAGXPAVCPropertySetStream@@PAJ@Z
?OpenCatalog@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?OpenClassesRootSpecial@CEnumClassesOfCategories@@AAEJKPAPAUHKEY__@@@Z
?OpenControlStream@CNtfsStorage@@IAEJH@Z
?OpenEntry@CExposedDocFile@@AAEJPBVCDfName@@KKPAPAX@Z
?OpenHKey@CEnumFmt@@UAGJPAPAUHKEY__@@@Z
?OpenKeyFromUserHive@CEnumClassesOfCategories@@AAEJPAXPBGKPAPAUHKEY__@@@Z
?OpenNtFileHandle@CNtfsStorage@@CGJABU_UNICODE_STRING@@PAX1KKHPAPAX@Z
?OpenNtStream@CNtfsStorage@@AAEJABVCNtfsStreamName@@KKHPAPAX@Z
?OpenOrCreateStream@CStmBufWrite@@QAEJPAUIStorage@@PBG@Z
?OpenPropStg@CPropertyBagEx@@AAEJK@Z
?OpenSharedFileMapping@@YGPAXPAGKPAPAXK@Z
?OpenStorage@CExpParameterValidate@@SGJPBGPAUIStorage@@KPAPAGKPAPAU2@@Z
?OpenStorage@CExposedDocFile@@UAGJPBGPAUIStorage@@KPAPAGKPAPAU2@@Z
?OpenStorage@CNtfsStorage@@UAGJPBGPAUIStorage@@KPAPAGKPAPAU2@@Z
?OpenStorage@CNtfsStorageForPropSetStg@@UAGJPBGPAUIStorage@@KPAPAGKPAPAU2@@Z
?OpenStorage@CSimpStorage@@UAGJPBGPAUIStorage@@KPAPAGKPAPAU2@@Z
?OpenStream@CExpParameterValidate@@SGJPBGPAXKKPAPAUIStream@@@Z
?OpenStream@CExposedDocFile@@UAGJPBGPAXKKPAPAUIStream@@@Z
?OpenStream@CNtfsStorage@@UAGJPBGPAXKKPAPAUIStream@@@Z
?OpenStream@CNtfsStorageForPropSetStg@@UAGJPBGPAXKKPAPAUIStream@@@Z
?OpenStream@CSimpStorage@@UAGJPBGPAXKKPAPAUIStream@@@Z
?OpenStream@CSimpStorageOpen@@UAGJPBGPAXKKPAPAUIStream@@@Z
?OpenStream@CStmBufRead@@QAEJPAUIStorage@@PBG@Z
?OpenThreadTokenAtLevel@@YGJKPAPAX@Z
?OpenUpdateStream@CNFFMappedStream@@AAEJH@Z
?OurRtlAllocateStringRoutine@?A0xda0f03f0@@YGPAXK@Z
?OurRtlFreeStringRoutine@?A0xda0f03f0@@YGXPAX@Z
?OurRtlReallocateStringRoutine@?A0xda0f03f0@@YGPAXKPAX@Z
?OutCopy@CallFrame@@QAEXPAE0PBE@Z
?OutInit@CallFrame@@QAEXPAV1@PAPAE1PBE@Z
?OutZero@CallFrame@@QAEXPAEPBEH@Z
?OverrideTargetContext@ContextInfo@@UAGJABU_GUID@@@Z
?PBToSafeArray@@YGJKPBEPAPAUtagSAFEARRAY@@@Z
?PCAFireClassNotRegEvent@@YGXU_GUID@@@Z
?PCAIsCLSIDDeprecated@@YGHPAU_GUID@@@Z
?PIDChainToIDObject@CIDObject@@SGPAV1@PAUSHashChain@@@Z
?PadStream@CObjectContext@@QAEHAAPAUIStream@@@Z
?ParseClassID@@YGJPBGPAKPAU_GUID@@@Z
?ParseDisplayName@CAntiMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CBaseMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CClassMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CClassMonikerFactory@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
?ParseDisplayName@CCompositeMoniker@@EAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CFileMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CFileMonikerFactory@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
?ParseDisplayName@CItemMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CLUAMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CObjrefMonikerFactory@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
?ParseDisplayName@COleItemContainerImpl@CDdeObject@@UAGJPAUIBindCtx@@PAGPAKPAPAUIMoniker@@@Z
?ParseDisplayName@CPackagerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CPointerMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseDisplayName@CSessionMoniker@@UAGJPAUIBindCtx@@PAUIMoniker@@PAGPAKPAPAU3@@Z
?ParseStringArrayForUniques@CMachineNamesHelper@@CGXKPAPAGP6GXPAGPAX@Z2@Z
?ParseStringBindingsFromDSA@CMachineNamesHelper@@CGXPAUtagDUALSTRINGARRAY@@P6GXPAXPAUtagSTRINGBINDING@@K@Z1@Z
?PartialWrite@CTransactedStream@@AAEJKKPBEGG@Z
?PeekMessageExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z
?PeekOneMessage@@YGHPAUtagMSG@@PAUHWND__@@I@Z
?PeekRPCAndDDEMessage@CCliModalLoop@@AAEHXZ
?PeekTillDone@@YGXPAUHWND__@@@Z
?Peel@@YGHPAGGPAPAGK@Z
?PendingApplication@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?PendingInit@CSurrogateProcessActivator@@UAGXXZ
?PerformCallback@@YGJPAVCObjectContext@@P6GJPAX@Z1ABU_GUID@@KPAUIUnknown@@@Z
?PerformReaderSignaling@EventPoolEntry@@QAEKXZ
?PersistDataObjectToHGlobal@@YGPAXPAUIDataObject@@@Z
?PingSCM@CSurrogateProcessActivator@@CGKPAX@Z
?Poke@CDdeObject@@AAEJGPAX@Z
?PokeData@CDefClient@@QAEJPAUHWND__@@GPAX@Z
?PokeStdItems@CDefClient@@QAEJPAUHWND__@@GPAXH@Z
?Pop@?$InterlockedStack@UDISPATCH_CLIENT_FRAME@@@@QAEPAUDISPATCH_CLIENT_FRAME@@XZ
?Pop@?$InterlockedStack@UDISPATCH_SERVER_FRAME@@@@QAEPAUDISPATCH_SERVER_FRAME@@XZ
?Pop@?$InterlockedStack@VCallFrame@@@@QAEPAVCallFrame@@XZ
?Pop@?$InterlockedStackIndirect@UDISPATCH_CLIENT_FRAME@@@@UAEPAUDISPATCH_CLIENT_FRAME@@XZ
?Pop@?$InterlockedStackIndirect@UDISPATCH_SERVER_FRAME@@@@UAEPAUDISPATCH_SERVER_FRAME@@XZ
?Pop@?$InterlockedStackIndirect@VCallFrame@@@@UAEPAVCallFrame@@XZ
?Pop@CCompositeMonikerEnum@@AAEPAUIMoniker@@XZ
?PopDc@CMfObject@@AAEHXZ
?PopSList@@YGPAUtagPageEntry@@PAU1@PAVCOleStaticMutexSem@@@Z
?PopServiceDomainContext@@YGJPAUtagContextStackNode@@@Z
?PostAckToClient@@YGHPAUHWND__@@0GK@Z
?PostCallToSTA@OXIDEntry@@QAEJPAVCMessageCall@@@Z
?PostMessageToClient@@YGHPAUHWND__@@IIJ@Z
?PostMessageToClientWithReply@@YGHPAUHWND__@@IIJI@Z
?PostReleaseRifRef@@YGJPAUIRemUnknown@@PAVOXIDEntry@@GPAUtagREMINTERFACEREF@@PAUIUnknown@@@Z
?PostSysCommand@CDdeObject@@AAEJPAVDDE_CHANNEL@@PBDHH@Z
?PrClosePropertySet@@YGJPAVCPropertySetStream@@@Z
?PrCreatePropertySet@@YGJPAVIMappedStream@@GPBU_GUID@@1PAVPMemoryAllocator@@KPAKPAG3PAPAVCPropertySetStream@@@Z
?PrEnumerateProperties@@YGJPAVCPropertySetStream@@KPAK1QAUtagPROPSPEC@@QAUtagSTATPROPSTG@@@Z
?PrFlushPropertySet@@YGJPAVCPropertySetStream@@@Z
?PrPropertySetNameToGuid@@YGJKQBGPAU_GUID@@@Z
?PrQueryProperties@@YGJPAVCPropertySetStream@@KPBUtagPROPSPEC@@PAK2PAUtagPROPVARIANT@@2@Z
?PrQueryPropertyNames@@YGJPAVCPropertySetStream@@KPBKQAPAG@Z
?PrQueryPropertySet@@YGJPAVCPropertySetStream@@PAUtagSTATPROPSETSTG@@@Z
?PrSetProperties@@YGJPAVCPropertySetStream@@KKQBUtagPROPSPEC@@PAGQAKPAPAU_INDIRECTPROPERTY@@QBUtagPROPVARIANT@@@Z
?PrSetPropertyNames@@YGJPAVCPropertySetStream@@KPBKQBQBG@Z
?PrSetPropertySetClassId@@YGJPAVCPropertySetStream@@PBU_GUID@@@Z
?PreFillKnownIIDs@CRIFTable@@AAEPAUtagRIFEntry@@ABU_GUID@@@Z
?PrepareCtxEntries@CtxEntry@@SGXPAV1@K@Z
?PrepareForDestruction@CPolicySet@@QAEXXZ
?PrepareForDestruction@CStdWrapper@@QAEXPAVCPolicySet@@@Z
?PrepareForDestruction@IFaceEntry@@QAEXXZ
?PrepareForOverwrite@CPubDocFile@@IAEJXZ
?PrepareForRetry@CCtxHook@@QAEXPAVCCtxCall@@@Z
?PrepareWrapperForDestruction@@YGJPAX@Z
?PreventDisconnect@CStdMarshal@@QAEJXZ
?PreventPendingDisconnect@CStdMarshal@@QAEJXZ
?PrimeEventPool@EventPoolEntry@@SGHXZ
?PrincipalName@CSSL@@SGJPBU_CERT_CONTEXT@@PAPAG@Z
?PrintFriendlyDebugMessage@@YGXPAU_EXCEPTION_POINTERS@@PAXHPBD@Z
?PrivDragDrop@@YGJPAUHWND__@@W4tagDRAGOP@@PAXPAUIDataObject@@KU_POINTL@@PAK0PAPAX@Z
?PrivDragDrop@CPrivDragDrop@@UAGJPAUHWND__@@PAUtagInterfaceData@@KKU_POINTL@@PAKKPAUIDataObject@@0@Z
?PrivGetObjectContext@@YGJABU_GUID@@PAPAX@Z
?PrivGetReturnActivationProperties@ActivationPropertiesIn@@UAGJPAPAUIPrivActivationPropertiesOut@@@Z
?PrivHeapAlloc@@YGPAXPAXKK@Z
?PrivHeapFree@@YGHPAXK0@Z
?PrivMemAlloc8@@YGPAXI@Z
?PrivSetServerHRESULTInTLS@@YGJPAXJ@Z
?PrivSetServerHResult@@YGJPAUtagRPCOLEMESSAGE@@PAXJ@Z
?PrivateCleanup@CStdWrapper@@CGXXZ
?PrivateCopyProxy@CStdMarshal@@QAEJPAUIUnknown@@PAPAU2@@Z
?PrivateMemAlloc@@YGPAXI@Z
?PrivateMemFree@@YGXPAX@Z
?ProbeStreamToDetermineIfWriteable@CPropertyStorage@@AAEHXZ
?ProcessCleanup@CRWLock@@SGXXZ
?ProcessCleanup@EventPoolEntry@@SGXXZ
?ProcessCustomEPIfNecessary@@YGJGPAH@Z
?ProcessInit@CRWLock@@SGHXZ
?ProcessInit@EventPoolEntry@@SGHXZ
?ProcessInitialize@@YGJXZ
?ProcessUninitTlsCleanup@@YGXXZ
?ProcessUninitialize@@YGXXZ
?PropDupCLSID@@YGPAU_GUID@@QAU1@@Z
?PropDupClipData@@YGPAUtagCLIPDATA@@PBU1@@Z
?PropDupStr@@YGPADPBD@Z
?PropDupWStr@@YGPAGPBG@Z
?PropOkToMarshal@CObjectContext@@QAEHAAPAUtagContextProperty@@K@Z
?PropVariantChangeType@@YGJPAUtagPROPVARIANT@@PBU1@KGG@Z
?PropertyLengthNoEH@@YGKPBUtagSERIALIZEDPROPERTYVALUE@@KPAJ@Z
?PropertyRequiresConversion@CPropertyBagEx@@AAEHG@Z
?PropertyToVariant_BufferToStream@@YGJPBEIPAPAUIStream@@@Z
?PropertyToVariant_FixIndirect@@YGJPBEKPAUtagPROPVARIANT@@PAVPMemoryAllocator@@@Z
?PropertyToVariant_Wrapper@@YGKPBUtagSERIALIZEDPROPERTYVALUE@@KIPAVPMemoryAllocator@@IPAUtagPROPVARIANT@@PAKPAHPAJ@Z
?PrototypeExists@ContextInfo@@UAGJPAH@Z
?ProxyInitialize@@YGJPAU__MIDL_ICallFrame_0004@@PAUMarshallingChannel@@PAU_RPC_MESSAGE@@PAU_MIDL_STUB_MESSAGE@@PBU_MIDL_STUB_DESC@@K@Z
?ProxyPreCheck@DISPATCH_CLIENT_FRAME@@QAEJXZ
?ProxyToBindingHandle@CRpcOptions@@AAEJPAXPAPAVCChannelHandle@@HH@Z
?PrpConvertToMultiByte@@YGXPBGKGPAPADPAKPAJ@Z
?PrpConvertToUnicode@@YGXPBDKGPAPAGPAKPAJ@Z
?Pull@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAGJPAEKPAK@Z
?Pull@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAGJPAJKPAK@Z
?Pull@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAGJPANKPAK@Z
?PullDone6@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEKPAK@Z
?PullDone6@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJKPAK@Z
?PullDone6@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANKPAK@Z
?PullStateTransition@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJK@Z
?PullStateTransition@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJK@Z
?PullStateTransition@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJK@Z
?Push@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAGJPAEK@Z
?Push@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAGJPAJK@Z
?Push@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAGJPANK@Z
?Push@?$InterlockedStack@UDISPATCH_CLIENT_FRAME@@@@QAEXPAUDISPATCH_CLIENT_FRAME@@@Z
?Push@?$InterlockedStack@UDISPATCH_SERVER_FRAME@@@@QAEXPAUDISPATCH_SERVER_FRAME@@@Z
?Push@?$InterlockedStack@VCallFrame@@@@QAEXPAVCallFrame@@@Z
?Push@?$InterlockedStackIndirect@UDISPATCH_CLIENT_FRAME@@@@UAEXPAUDISPATCH_CLIENT_FRAME@@@Z
?Push@?$InterlockedStackIndirect@UDISPATCH_SERVER_FRAME@@@@UAEXPAUDISPATCH_SERVER_FRAME@@@Z
?Push@?$InterlockedStackIndirect@VCallFrame@@@@UAEXPAVCallFrame@@@Z
?Push@CCompositeMonikerEnum@@AAEHPAVCCompositeMoniker@@@Z
?Push@CleanupStack@@QAEJPAXPAVPMemoryAllocator@@@Z
?PushDc@CMfObject@@AAEHXZ
?PushDone5@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEK@Z
?PushDone5@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJK@Z
?PushDone5@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANK@Z
?PushSList@@YGXPAUtagPageEntry@@0PAVCOleStaticMutexSem@@@Z
?PushServiceDomainContext@@YGJABUtagContextStackNode@@@Z
?PushStateTransition@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJK@Z
?PushStateTransition@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJK@Z
?PushStateTransition@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJK@Z
?PutExtent@CExtentList@@QAEJPBU_MONIKEREXTENT@@@Z
?PutPropVariantDataIntoSafeArray@@YGJPAUtagSAFEARRAY@@PBUtagPROPVARIANT@@H@Z
?PutStreamACLIntoSecDesc@@YGJPAUtagSTREAM_ACL@@PAUtagACL_DESCRIPTOR@@@Z
?PutUNICODEProgID@@YGJPAVCompObjStmData@@PAG@Z
?PutUNICODEUserType@@YGJPAVCompObjStmData@@PAG@Z
?QIHelper@CObjectContext@@QAEJABU_GUID@@PAPAXH@Z
?QSortCompare@CMachineNamesHelper@@CAHPBX0@Z
?Query@CGlobalOptions@@UAGJKPAK@Z
?Query@CRpcOptions@@UAGJPAUIUnknown@@KPAK@Z
?QueryBlanket@CChannelObject@@UAGJPAUIUnknown@@PAK1PAPAG11PAPAX1@Z
?QueryBlanket@CClientCallMgr@@UAGJPAUIUnknown@@PAK1PAPAG11PAPAX1@Z
?QueryBlanket@CClientSecurity@@UAGJPAUIUnknown@@PAK1PAPAG11PAPAX1@Z
?QueryBlanket@CServerCallMgr@CRpcChannelBuffer@@UAGJPAK0PAPAG00PAPAX0@Z
?QueryBlanket@CServerSecurity@@UAGJPAK0PAPAG00PAPAX0@Z
?QueryBlanketFromChannel@@YGJPAVCRpcChannelBuffer@@PAK1PAPAG11PAPAX1@Z
?QueryDragDropActive@CRpcResolver@@QAEJPAH@Z
?QueryForIStream@@YGJPAUIUnknown@@PAPAUIStream@@@Z
?QueryFormatSupport@CCacheNode@@AAEHPAUIDataObject@@@Z
?QueryGetData@CCacheDataImpl@COleCache@@UAGJPAUtagFORMATETC@@@Z
?QueryGetData@CClipDataObject@@UAGJPAUtagFORMATETC@@@Z
?QueryGetData@CDataObjectImpl@CDdeObject@@UAGJPAUtagFORMATETC@@@Z
?QueryGetData@CDefLink@@UAGJPAUtagFORMATETC@@@Z
?QueryGetData@CDefObject@@UAGJPAUtagFORMATETC@@@Z
?QueryGetData@CDragDataObject@@UAGJPAUtagFORMATETC@@@Z
?QueryInterface@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationProperties@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationProperties@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationProperties@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesIn@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesIn@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesIn@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesIn@@WBKE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesIn@@WBKI@AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesIn@@WBKM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesOut@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesOut@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesOut@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesOut@@WBKE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@ActivationPropertiesOut@@WBKI@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CAddrControl@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAddrControl@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CAddrExclusionList@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAdvSinkImpl@CDefLink@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAdvSinkImpl@CDefObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAdviseSinkImpl@CDefClient@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAdviseSinkImpl@COleCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAggId@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAntiMoniker@@EAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAntiMoniker@@G3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CAsyncCall@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAsyncCall@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CAsyncConnection@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAsyncUnknownMgr@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CAsyncUnknownMgr@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CBaseMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CBaseMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CBindCtx@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CBindStatusCallback@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CBindStatusCallback@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CCacheDataImpl@COleCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CCacheUnkImpl@COleCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CCacheViewImpl@COleCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CChannelObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CChannelObject@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CChannelObject@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CChannelObject@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClassMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CClassMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClassMoniker@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClientCall@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CClientCall@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClientCallMgr@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CClientCallMgr@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClientCallMgr@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClientCallMgr@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CClipDataObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComActivator@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComActivator@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComActivator@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComApartment@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCat@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCat@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCatalog@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCatalog@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCatalog@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCatalog@@WBA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCatalog@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComCatalog@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComClassInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComClassInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComClassInfo@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComClassInfo@@WBA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComClassInfo@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComNoClassInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComNoClassInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComNoClassInfo@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComProcessInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComProcessInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComProcessInfo@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComRegCatalog@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComSxSCatalog@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComSxSClassInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CComSxSClassInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CComSxSClassInfo@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CCompositeMoniker@@EAGJABU_GUID@@PAPAX@Z
?QueryInterface@CCompositeMoniker@@G3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CCompositeMonikerEnum@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CConnectionPoint@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CContextSwitcher@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CContinue@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CCtxCall@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CCtxChnl@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CCtxChnl@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CCtxHook@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDAHolder@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDataObjectImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDdeServerCallMgr@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDdeServerCallMgr@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDdeServerCallMgr@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDebugChannelHook@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDebugEventFire@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDebugEventFireCF@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefLink@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefLink@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefLink@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefLink@@WBA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefLink@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefObject@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefObject@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefObject@@WBA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDefObject@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDelayUnlockContainer@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDestObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDestObjectWrapper@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDestObjectWrapper@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDllFnPtrMoniker@CClassCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDllHost@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDllHost@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDocfileUnmarshalFactory@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDocfileUnmarshalFactory@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CDragDataObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CDropTarget@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEMfObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumCategories@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumCategoriesOfClass@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumClassesOfCategories@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumContextProps@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumFmt@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumFormatEtc@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumFormatEtcDataArray@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumSTATDATA@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumSTATPROPBAG@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumSTATPROPSETSTG@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumSTATPROPSTG@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumStatData@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CEnumVerb@@EAGJABU_GUID@@PAPAX@Z
?QueryInterface@CErrorChannelHook@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CErrorObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CErrorObject@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CErrorObject@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExpParameterValidate@@SGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@WCA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@WCE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@WCI@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@WCM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedDocFile@@WDA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedIterator@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedIterator@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedStream@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedStream@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CExposedStream@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFileMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CFileMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFileStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CFileStream@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFileStream@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFileStream@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFillLockBytes@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CFillLockBytes@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFillLockBytes@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CFmCtrlUnknown@@EAGJABU_GUID@@PAPAX@Z
?QueryInterface@CFreeMarshaler@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CGIPMessageParam@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CGIPTable@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CGenObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CGlobalOptions@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CGlobalOptions@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CIDObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CImpAccessControl@COAccessControl@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CImpAccessControl@COAccessControl@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CInnerUnk@CComCat@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CInprocSystemActivator@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CInterfaceFromWindowProp@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CInternalUnk@CStdIdentity@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CInternalUnk@CStdIdentity@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CItemMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CItemMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CLUAMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CLUAMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CLUAMoniker@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CLUAMoniker@@WBI@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CLocalMachineNames@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CMREInnerUnknown@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CManualResetEvent@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CManualResetEvent@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CMarshalImplPStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CMemBytes@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CMemStm@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CMfObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CMonikerFactory@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CMonikerFactory@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CNFFMappedStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNFFTreeMutex@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNdrStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNoEnum@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsEnumSTATSTG@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsStorage@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsStorage@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsStorage@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsStorageForPropSetStg@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CNtfsStream@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CNullWalker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@COAHolder@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@COAccessControl@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@COLEDragDropHelper@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjServer@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@WBA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@WBI@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjectContext@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjrefMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjrefMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CObjrefMoniker@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@COleCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@COleCache@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@COleCache@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@COleClientSiteImpl@CDefClient@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@COleItemContainerImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@COleObjectImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPackagerMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPersistStgImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPipePSFactory@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPipeProxyImp@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPointerMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPointerMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CPointerMoniker@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CPolicySet@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPrivDragDrop@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPrivUnknown@CAsyncUnknownMgr@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPrivUnknown@CClientCallMgr@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPrivUnknown@CDefLink@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPrivUnknown@CDefObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPropertyBagEx@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPropertyBagEx@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CPropertySetStorage@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPropertyStorage@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CProxyManagerImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CPunkForRelease@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRemoteUnknown@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRotMonikerEnum@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcCall@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcCall@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcCall@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcChannelBuffer@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcChannelBuffer@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcHelper@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcOptions@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRpcStubBufferImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRunningObjectTable@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CRunningObjectTable@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSCInnerUnknown@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSSMappedStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSTInnerUnknown@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerSecurity@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerSecurity@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CServerSecurity@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSessionMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSessionMoniker@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSessionMoniker@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSimpEnumSTATSTG@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSimpStorage@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSimpStorage@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSimpStorage@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSimpStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSimpStream@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSmAllocator@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStackWalker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStackWalkerStack@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStackWalkerSymbol@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStaticWrapper@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdClassFactory@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdEvent@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdEvent@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdIdentity@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdIdentity@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdIdentity@@WIE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdIdentity@@WIM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdIdentity@@WJI@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdIdentity@@WJM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CStdWrapper@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CStreamOnMessage@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSurrogateProcessActivator@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CSurrogateProcessActivator@@WBM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSurrogateProcessActivator@@WCA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSurrogateProcessActivator@@WCE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CSynchronizeContainer@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CTrackingCompositeMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CTrackingFileMoniker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CUnknownImpl@CDdeObject@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CUnknownImpl@CDefClient@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CUrlMonWrapper@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CallFrame@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CallFrame@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ComPsClassFactory@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ComPsClassFactory@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ContextInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ContextInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ContextInfo@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@CpUnkMoniker@CClassCache@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@CsCatInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@DDE_CHANNEL@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@DDE_CHANNEL@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@DefaultIBindStatusCallback@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@DefaultIBindStatusCallback@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@GenericStream@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@GenericStream@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@InprocActpropsUnmarshaller@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@InstanceInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@InstanceInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@InstantiationInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@InstantiationInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@Interceptor@@EAGJABU_GUID@@PAPAX@Z
?QueryInterface@Interceptor@@G3AGJABU_GUID@@PAPAX@Z
?QueryInterface@Interceptor@@G7AGJABU_GUID@@PAPAX@Z
?QueryInterface@Interceptor@@GBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@Interceptor@@GM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@InterfaceWalkerFree@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_FRAME@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBA@AGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBE@AGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WM@AGJABU_GUID@@PAPAX@Z
?QueryInterface@MarshallingChannel@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@MarshallingChannel@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@OpaqueDataInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@OpaqueDataInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@OutSerializer@ActivationPropertiesOut@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@POSTRELRIFREF@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@SSimpleWalker@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ScmReplyInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ScmReplyInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@ScmRequestInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ScmRequestInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@SecurityInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@SecurityInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@SecurityInfo@@W7AGJABU_GUID@@PAPAX@Z
?QueryInterface@ServerLocationInfo@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@ServerLocationInfo@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterface@SpecialProperties@@UAGJABU_GUID@@PAPAX@Z
?QueryInterface@SpecialProperties@@W3AGJABU_GUID@@PAPAX@Z
?QueryInterfaceImpl@CAsyncUnknownMgr@@EAGJABU_GUID@@PAPAX@Z
?QueryInterfaceImpl@CClientCallMgr@@EAGJABU_GUID@@PAPAX@Z
?QueryInterfaceInternal@CComCatalog@@QBEJABU_GUID@@PAPAX@Z
?QueryInternalInterface@CInternalUnk@CStdIdentity@@UAGJABU_GUID@@PAPAX@Z
?QueryMultipleInterfaces@CAggId@@UAGJKPAUtagMULTI_QI@@@Z
?QueryMultipleInterfaces@CInternalUnk@CStdIdentity@@UAGJKPAUtagMULTI_QI@@@Z
?QueryMultipleInterfacesLocal@CInternalUnk@CStdIdentity@@QAEGKPAUtagMULTI_QI@@PAPAU3@PAU_GUID@@PAK@Z
?QueryPIDForActivation@CRpcResolver@@QAEJU_GUID@@KPAK@Z
?QueryPropertyNames@CPropertySetStream@@QAEEKPBKQAPAGPAJ@Z
?QueryPropertySet@CPropertySetStream@@QBEXPAUtagSTATPROPSETSTG@@PAJ@Z
?QueryPropid@CPropertySetStream@@QAEKPBGPAJ@Z
?QueryRemapped@CFat@@QAEJK@Z
?QueryRemoteInterfaces@CStdMarshal@@QAEJGPAU_GUID@@PAUtagSQIResult@@@Z
?QueryRevokeClassFactory@CDDEServer@@QAEHXZ
?QueueMessage@CComApartment@@QAEJIPAVIMessageParam@@@Z
?RPCSStoOLE32SecurityCallback@@YGJPAX0@Z
?RWLockFailfast@CRWLock@@SGXXZ
?RWResetReaderSignal@CRWLock@@AAEXXZ
?RWSetReaderSignal@CRWLock@@AAEXXZ
?RWSetWriterSignal@CRWLock@@AAEXXZ
?RWWaitForReaderSignal@CRWLock@@AAEKKAAH@Z
?RWWaitForWriterSignal@CRWLock@@AAEKKAAH@Z
?ReOpen@CExposedStream@@UAGXPAPAXPAJ@Z
?ReOpen@CNFFMappedStream@@UAGXPAPAXPAJ@Z
?ReOpen@CPropertySetStream@@QAEKPAJ@Z
?ReOpen@CPubMappedStream@@QAEXPAPAXPAJ@Z
?ReOpen@CSSMappedStream@@UAGXPAPAXPAJ@Z
?Reactivate@CIDObject@@QAEJPAUIUnknown@@@Z
?Reactivate@CStdMarshal@@QAEXPAUIUnknown@@@Z
?Reactivate@CStdWrapper@@QAEXPAUIUnknown@@@Z
?Read@CExpParameterValidate@@SGJPAXKPAK@Z
?Read@CExposedStream@@UAGJPAXKPAK@Z
?Read@CMemStm@@UAGJPAXKPAK@Z
?Read@CNFFMappedStream@@QAEXPAXKPAK@Z
?Read@CNdrStream@@UAGJPAXKPAK@Z
?Read@CNtfsStream@@UAGJPAXKPAK@Z
?Read@CPropertyBagEx@@UAGJPBGPAUtagVARIANT@@PAUIErrorLog@@@Z
?Read@CSafeAccess@@QAEXPAVCDFBasis@@@Z
?Read@CSimpStream@@UAGJPAXKPAK@Z
?Read@CSimpStreamOpen@@UAGJPAXKPAK@Z
?Read@CStmBufRead@@QAEJPAXK@Z
?Read@CStreamOnMessage@@UAGJPAXKPAK@Z
?Read@GenericStream@@UAGJPAXKPAK@Z
?ReadACLFromStream@@YGJPAUIStream@@PAUtagPCB@@PAUtagACL_DESCRIPTOR@@@Z
?ReadAnsiStringStream@@YGJPAUIStream@@AAPADAAG@Z
?ReadArrayWorkerNoSwap@SerializedPropertyReader@@AAEJPAXKK@Z
?ReadAt@CDirectStream@@QAEJ_KPAXKPAK@Z
?ReadAt@CExpParameterValidate@@SGJT_ULARGE_INTEGER@@PAXKPAK@Z
?ReadAt@CFileStream@@UAGJT_ULARGE_INTEGER@@PAXKPAK@Z
?ReadAt@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@PAXKPAK@Z
?ReadAt@CMemBytes@@UAGJT_ULARGE_INTEGER@@PAXKPAK@Z
?ReadAt@CNtfsStream@@UAGJT_ULARGE_INTEGER@@PAXKPAK@Z
?ReadAt@CPubStream@@QAEJ_KPAXKPAK@Z
?ReadAt@CTransactedStream@@QAEJ_KPAXKPAK@Z
?ReadAt@PSStream@@QAEJ_KPAXKPAK@Z
?ReadAt_FromFile@CFileStream@@AAEJ_KPAXKPAK@Z
?ReadAt_FromMap@CFileStream@@AAEJKPAXKPAK@Z
?ReadCompObjStm@@YGJPAUIStorage@@PAVCompObjStmData@@@Z
?ReadFileStreamInfo@CNtfsSTATSTGArray@@AAEJPAX@Z
?ReadKey@ComVerifierSettings@@CGHPBGH@Z
?ReadLong@CStmBufRead@@QAEJPAJ@Z
?ReadMap@CDeltaList@@AAEJPAKK0@Z
?ReadMultiple@CPropertyBagEx@@UAGJKQBQBGQAUtagPROPVARIANT@@PAUIErrorLog@@@Z
?ReadMultiple@CPropertyStorage@@UAGJKQBUtagPROPSPEC@@QAUtagPROPVARIANT@@@Z
?ReadObjRef@@YGJPAUIStream@@AAUtagOBJREF@@@Z
?ReadObjRefExtension@@YGJPAUIStream@@AAUtagOBJREF@@@Z
?ReadOleKey@ComVerifierSettings@@CGHPBGH@Z
?ReadPropertyNames@CPropertyStorage@@UAGJKQBKQAPAG@Z
?ReadRegistryStringValue@@YGJPAUHKEY__@@PBG1PAGK@Z
?ReadSafeArray@SerializedPropertyReader@@QAEJPAKPAPBUtagSAFEARRAYBOUND@@@Z
?ReadStreamHdrAndProcessExtents@CObjectContext@@QAEJPAUIStream@@AAUtagCONTEXTHEADER@@@Z
?ReadVarType@SerializedPropertyReader@@QAEJPAG@Z
?ReadWorkerNoSwap@SerializedPropertyReader@@AAEJPAXK@Z
?Realloc@CErrorSmAllocator@@UAGPAXPAXK@Z
?Realloc@CSmAllocator@@UAGPAXPAXK@Z
?Receive2@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive2@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive2@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive@CAptRpcChnl@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive@CAptRpcChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Receive@CChannelObject@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Receive@CCliModalLoop@@QAEJPAUtagRPCOLEMESSAGE@@KPAKPAVIInternalChannelBuffer@@@Z
?Receive@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Receive@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Receive@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Receive@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@KPAK@Z
?Receive@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?ReconnectProxies@CStdMarshal@@QAEXXZ
?RecursiveRegDeleteKey@@YGJPAUHKEY__@@PAD@Z
?RecycleLockEntry@LockEntry@@QAEXXZ
?Reduce@CBaseMoniker@@UAGJPAUIBindCtx@@KPAPAUIMoniker@@1@Z
?Reduce@CClassMoniker@@UAGJPAUIBindCtx@@KPAPAUIMoniker@@1@Z
?Reduce@CCompositeMoniker@@EAGJPAUIBindCtx@@KPAPAUIMoniker@@1@Z
?Reduce@CFileMoniker@@UAGJPAUIBindCtx@@KPAPAUIMoniker@@1@Z
?Reduce@CPackagerMoniker@@UAGJPAUIBindCtx@@KPAPAUIMoniker@@1@Z
?RefreshComPlusEnabled@CComCatalog@@UAGJXZ
?RefreshNames@CLocalMachineNames@@UAGJXZ
?RefreshNeeded@CComClassInfo@@EAGJPAUIUserToken@@PAH@Z
?RefreshNeeded@CComNoClassInfo@@UAGJPAUIUserToken@@PAH@Z
?RefreshNeeded@CComProcessInfo@@UAGJPAUIUserToken@@PAH@Z
?RegHelpResumeImpersonate@@YGXPAX@Z
?RegHelpSuspendImpersonate@@YGJPAPAX@Z
?RegReadDefValue@@YGJPAUHKEY__@@PAGPAPAG@Z
?Register@AppRegistration@@QAEJXZ
?Register@CAptCallCtrl@@QAEXPAUHWND__@@II@Z
?Register@CRunningObjectTable@@UAGJKPAUIUnknown@@PAUIMoniker@@PAK@Z
?Register@ClassRegistration@@QAEJXZ
?RegisterApartmentActivator@@YGJAAK@Z
?RegisterAsync@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAUIAsyncManager@@@Z
?RegisterAsync@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAUIAsyncManager@@@Z
?RegisterAsync@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAUIAsyncManager@@@Z
?RegisterAuthnServices@@YGJKPAUtagSOLE_AUTHENTICATION_SERVICE@@@Z
?RegisterCategories@CComCat@@UAGJKQAUtagCATEGORYINFO@@@Z
?RegisterClassImplCategories@CComCat@@UAGJABU_GUID@@KQAU2@@Z
?RegisterClassReqCategories@CComCat@@UAGJABU_GUID@@KQAU2@@Z
?RegisterClassXXXCategories@CComCat@@AAEJABU_GUID@@KQAU2@PBG@Z
?RegisterClientInterface@CRIFTable@@AAEJPAUtagRIFEntry@@ABU_GUID@@@Z
?RegisterContainerBound@@YGJPAUIBindCtx@@PAUIOleItemContainer@@@Z
?RegisterDcomInterfaces@@YGJXZ
?RegisterForDisconnect@CStdMarshal@@QAEJPAUIDisconnectSink@@PAXPAPAX@Z
?RegisterInterface@CRIFTable@@QAEJABU_GUID@@HPAUIRpcStubBuffer@@PAUtagRIFEntry@@@Z
?RegisterInterfaceInGlobal@CGIPTable@@UAGJPAUIUnknown@@ABU_GUID@@PAK@Z
?RegisterInterfaceInGlobalHlp@CGIPTable@@QAEJPAUIUnknown@@ABU_GUID@@KPAK@Z
?RegisterInterfaceMapping@CRIFTable@@AAEJABU_GUID@@0KPAUtagRIFEntry@@@Z
?RegisterItem@CDefClient@@AAEJPAGPAPAV1@H@Z
?RegisterLrpc@@YGJXZ
?RegisterOXIDAndOIDs@OXIDEntry@@QAEJPAKPA_K@Z
?RegisterObjectBound@CBindCtx@@UAGJPAUIUnknown@@@Z
?RegisterObjectParam@CBindCtx@@UAGJPAGPAUIUnknown@@@Z
?RegisterOleWndClass@@YGJXZ
?RegisterPSClsid@CRIFTable@@QAEJABU_GUID@@0@Z
?RegisterServer@CClassCache@@SGJABU_GUID@@PAUIUnknown@@KKPAK@Z
?RegisterServerInterface@CRIFTable@@AAEJPAUtagRIFEntry@@ABU_GUID@@PAUIRpcStubBuffer@@@Z
?RegisterSink@Interceptor@@EAGJPAUICallFrameEvents@@@Z
?RegisterSink@LEGACY_INTERCEPTOR@@UAGJPAUICallFrameEvents@@@Z
?RegisterThreadCleanupCallback@@YGJXZ
?RegisterUnregisterInterface@@YGJHUHREG@@ABU_GUID@@PBDPBGJHH@Z
?RegisterUnregisterProxy@@YGJHPAUHINSTANCE__@@PAPBUtagProxyFileInfo@@PBU_GUID@@PAPBU3@3@Z
?RegisterWindowPropInterface@CRpcResolver@@QAEJPAUHWND__@@PAUtagSTDOBJREF@@PAUtagOXID_INFO@@HPAK@Z
?RelativePathTo@CAntiMoniker@@EAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CBaseMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CClassMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CCompositeMoniker@@EAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CFileMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CItemMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CObjrefMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CPackagerMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?RelativePathTo@CPointerMoniker@@UAGJPAUIMoniker@@PAPAU2@@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QAEKH@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QAEKH@Z
?Release@?$CArray@VCCacheNode@@@@QAEKXZ
?Release@?$CArray@VCFormatEtc@@@@QAEKXZ
?Release@?$CArray@VCStatData@@@@QAEKXZ
?Release@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UAGKXZ
?Release@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UAGKXZ
?Release@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UAGKXZ
?Release@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGKXZ
?Release@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGKXZ
?Release@ActivationProperties@@UAGKXZ
?Release@ActivationProperties@@W3AGKXZ
?Release@ActivationProperties@@W7AGKXZ
?Release@ActivationPropertiesIn@@UAGKXZ
?Release@ActivationPropertiesIn@@W3AGKXZ
?Release@ActivationPropertiesIn@@W7AGKXZ
?Release@ActivationPropertiesIn@@WBKE@AGKXZ
?Release@ActivationPropertiesIn@@WBKI@AGKXZ
?Release@ActivationPropertiesIn@@WBKM@AGKXZ
?Release@ActivationPropertiesOut@@UAGKXZ
?Release@ActivationPropertiesOut@@W3AGKXZ
?Release@ActivationPropertiesOut@@W7AGKXZ
?Release@ActivationPropertiesOut@@WBKE@AGKXZ
?Release@ActivationPropertiesOut@@WBKI@AGKXZ
?Release@CAddrControl@@UAGKXZ
?Release@CAddrControl@@W3AGKXZ
?Release@CAddrExclusionList@@UAGKXZ
?Release@CAdvSinkImpl@CDefLink@@UAGKXZ
?Release@CAdvSinkImpl@CDefObject@@UAGKXZ
?Release@CAdviseSinkImpl@CDefClient@@UAGKXZ
?Release@CAdviseSinkImpl@COleCache@@UAGKXZ
?Release@CAggId@@UAGKXZ
?Release@CAsyncCall@@UAGKXZ
?Release@CAsyncCall@@W3AGKXZ
?Release@CAsyncConnection@@UAGKXZ
?Release@CAsyncUnknownMgr@@UAGKXZ
?Release@CAsyncUnknownMgr@@W3AGKXZ
?Release@CBaseMoniker@@UAGKXZ
?Release@CBaseMoniker@@W3AGKXZ
?Release@CBindCtx@@UAGKXZ
?Release@CBindStatusCallback@@UAGKXZ
?Release@CBindStatusCallback@@W3AGKXZ
?Release@CCacheDataImpl@COleCache@@UAGKXZ
?Release@CCacheUnkImpl@COleCache@@UAGKXZ
?Release@CCacheViewImpl@COleCache@@UAGKXZ
?Release@CChannelHandle@@QAEXXZ
?Release@CChannelObject@@UAGKXZ
?Release@CChannelObject@@W3AGKXZ
?Release@CChannelObject@@W7AGKXZ
?Release@CChannelObject@@WM@AGKXZ
?Release@CClassEntry@CClassCache@@UAEXXZ
?Release@CClassMoniker@@UAGKXZ
?Release@CClassMoniker@@W3AGKXZ
?Release@CClassMoniker@@W7AGKXZ
?Release@CClientCall@@UAGKXZ
?Release@CClientCall@@W3AGKXZ
?Release@CClientCallMgr@@UAGKXZ
?Release@CClientCallMgr@@W3AGKXZ
?Release@CClientCallMgr@@W7AGKXZ
?Release@CClientCallMgr@@WM@AGKXZ
?Release@CClipDataObject@@UAGKXZ
?Release@CComActivator@@UAGKXZ
?Release@CComActivator@@W3AGKXZ
?Release@CComActivator@@W7AGKXZ
?Release@CComApartment@@UAGKXZ
?Release@CComCat@@UAGKXZ
?Release@CComCat@@W3AGKXZ
?Release@CComCatalog@@UAGKXZ
?Release@CComCatalog@@W3AGKXZ
?Release@CComCatalog@@W7AGKXZ
?Release@CComCatalog@@WBA@AGKXZ
?Release@CComCatalog@@WBE@AGKXZ
?Release@CComCatalog@@WM@AGKXZ
?Release@CComClassInfo@@UAGKXZ
?Release@CComClassInfo@@W3AGKXZ
?Release@CComClassInfo@@W7AGKXZ
?Release@CComClassInfo@@WBA@AGKXZ
?Release@CComClassInfo@@WM@AGKXZ
?Release@CComNoClassInfo@@UAGKXZ
?Release@CComNoClassInfo@@W3AGKXZ
?Release@CComNoClassInfo@@W7AGKXZ
?Release@CComProcessInfo@@UAGKXZ
?Release@CComProcessInfo@@W3AGKXZ
?Release@CComProcessInfo@@W7AGKXZ
?Release@CComRegCatalog@@UAGKXZ
?Release@CComSxSCatalog@@UAGKXZ
?Release@CComSxSClassInfo@@UAGKXZ
?Release@CComSxSClassInfo@@W3AGKXZ
?Release@CComSxSClassInfo@@W7AGKXZ
?Release@CCompositeMonikerEnum@@UAGKXZ
?Release@CConnectionPoint@@UAGKXZ
?Release@CContextLife@@QAEXXZ
?Release@CContextSwitcher@@UAGKXZ
?Release@CContinue@@UAGKXZ
?Release@CCtxCall@@UAGKXZ
?Release@CCtxChnl@@UAGKXZ
?Release@CCtxChnl@@W3AGKXZ
?Release@CCtxConnectionManager@@QAEKXZ
?Release@CCtxHook@@UAGKXZ
?Release@CDAHolder@@UAGKXZ
?Release@CDataObjectImpl@CDdeObject@@UAGKXZ
?Release@CDdeServerCallMgr@@UAGKXZ
?Release@CDdeServerCallMgr@@W3AGKXZ
?Release@CDdeServerCallMgr@@W7AGKXZ
?Release@CDebugChannelHook@@UAGKXZ
?Release@CDebugEventFire@@UAGKXZ
?Release@CDebugEventFireCF@@UAGKXZ
?Release@CDefLink@@UAGKXZ
?Release@CDefLink@@W3AGKXZ
?Release@CDefLink@@W7AGKXZ
?Release@CDefLink@@WBA@AGKXZ
?Release@CDefLink@@WM@AGKXZ
?Release@CDefObject@@UAGKXZ
?Release@CDefObject@@W3AGKXZ
?Release@CDefObject@@W7AGKXZ
?Release@CDefObject@@WBA@AGKXZ
?Release@CDefObject@@WM@AGKXZ
?Release@CDelayUnlockContainer@@UAGKXZ
?Release@CDestObject@@UAGKXZ
?Release@CDestObjectWrapper@@UAGKXZ
?Release@CDestObjectWrapper@@W3AGKXZ
?Release@CDfMutex@@QAEXXZ
?Release@CDllAptEntry@CClassCache@@QAEJPAVCFinishObject@CDllPathEntry@2@AAH@Z
?Release@CDllFnPtrMoniker@CClassCache@@UAGKXZ
?Release@CDllHost@@UAGKXZ
?Release@CDllHost@@W3AGKXZ
?Release@CDllPathEntry@CClassCache@@QAEJPAVCFinishObject@12@@Z
?Release@CDocfileUnmarshalFactory@@UAGKXZ
?Release@CDocfileUnmarshalFactory@@W3AGKXZ
?Release@CDragDataObject@@UAGKXZ
?Release@CDropTarget@@UAGKXZ
?Release@CDualStringArray@@QAEKXZ
?Release@CEMfObject@@UAGKXZ
?Release@CEnumCategories@@UAGKXZ
?Release@CEnumCategoriesOfClass@@UAGKXZ
?Release@CEnumClassesOfCategories@@UAGKXZ
?Release@CEnumContextProps@@UAGKXZ
?Release@CEnumFmt10@@UAGKXZ
?Release@CEnumFmt@@UAGKXZ
?Release@CEnumFormatEtc@@UAGKXZ
?Release@CEnumFormatEtcDataArray@@UAGKXZ
?Release@CEnumSTATDATA@@UAGKXZ
?Release@CEnumSTATPROPBAG@@UAGKXZ
?Release@CEnumSTATPROPSETSTG@@UAGKXZ
?Release@CEnumSTATPROPSTG@@UAGKXZ
?Release@CEnumStatData@@UAGKXZ
?Release@CEnumVerb@@EAGKXZ
?Release@CErrorChannelHook@@UAGKXZ
?Release@CErrorObject@@UAGKXZ
?Release@CErrorObject@@W3AGKXZ
?Release@CErrorObject@@W7AGKXZ
?Release@CExposedDocFile@@UAGKXZ
?Release@CExposedDocFile@@W3AGKXZ
?Release@CExposedDocFile@@WCA@AGKXZ
?Release@CExposedDocFile@@WCE@AGKXZ
?Release@CExposedDocFile@@WCI@AGKXZ
?Release@CExposedDocFile@@WCM@AGKXZ
?Release@CExposedDocFile@@WDA@AGKXZ
?Release@CExposedIterator@@UAGKXZ
?Release@CExposedIterator@@W3AGKXZ
?Release@CExposedStream@@UAGKXZ
?Release@CExposedStream@@W3AGKXZ
?Release@CExposedStream@@W7AGKXZ
?Release@CExposedStream@@WM@AGKXZ
?Release@CFileStream@@UAGKXZ
?Release@CFileStream@@W3AGKXZ
?Release@CFileStream@@W7AGKXZ
?Release@CFileStream@@WM@AGKXZ
?Release@CFillLockBytes@@UAGKXZ
?Release@CFillLockBytes@@W3AGKXZ
?Release@CFillLockBytes@@W7AGKXZ
?Release@CFmCtrlUnknown@@EAGKXZ
?Release@CFreeMarshaler@@UAGKXZ
?Release@CGIPMessageParam@@UAGKXZ
?Release@CGIPTable@@UAGKXZ
?Release@CGenObject@@UAGKXZ
?Release@CGlobalOptions@@UAGKXZ
?Release@CGlobalOptions@@W3AGKXZ
?Release@CIDObject@@UAGKXZ
?Release@CImpAccessControl@COAccessControl@@UAGKXZ
?Release@CImpAccessControl@COAccessControl@@W3AGKXZ
?Release@CInnerUnk@CComCat@@UAGKXZ
?Release@CInprocSystemActivator@@UAGKXZ
?Release@CInterfaceFromWindowProp@@UAGKXZ
?Release@CInternalUnk@CStdIdentity@@UAGKXZ
?Release@CInternalUnk@CStdIdentity@@W3AGKXZ
?Release@CLSvrClassEntry@CClassCache@@QAEJPAVCFinishObject@12@@Z
?Release@CLUAMoniker@@UAGKXZ
?Release@CLUAMoniker@@W3AGKXZ
?Release@CLUAMoniker@@WBE@AGKXZ
?Release@CLUAMoniker@@WBI@AGKXZ
?Release@CLocalMachineNames@@UAGKXZ
?Release@CMREInnerUnknown@@UAGKXZ
?Release@CManualResetEvent@@UAGKXZ
?Release@CManualResetEvent@@W3AGKXZ
?Release@CMarshalImplPStream@@UAGKXZ
?Release@CMemBytes@@UAGKXZ
?Release@CMemStm@@UAGKXZ
?Release@CMfObject@@UAGKXZ
?Release@CMonikerFactory@@UAGKXZ
?Release@CMonikerFactory@@W3AGKXZ
?Release@CMutexSem2@@QAEXXZ
?Release@CNFFMappedStream@@UAGKXZ
?Release@CNFFTreeMutex@@UAGKXZ
?Release@CNdrStream@@UAGKXZ
?Release@CNoEnum@@UAGKXZ
?Release@CNtfsEnumSTATSTG@@UAGKXZ
?Release@CNtfsSTATSTGArray@@QAEXXZ
?Release@CNtfsStorage@@UAGKXZ
?Release@CNtfsStorage@@W3AGKXZ
?Release@CNtfsStorage@@W7AGKXZ
?Release@CNtfsStorageForPropSetStg@@UAGKXZ
?Release@CNtfsStream@@UAGKXZ
?Release@CNtfsStream@@W3AGKXZ
?Release@CNullWalker@@UAGKXZ
?Release@COAHolder@@UAGKXZ
?Release@COAccessControl@@UAGKXZ
?Release@COLEDragDropHelper@@UAGKXZ
?Release@CObjServer@@UAGKXZ
?Release@CObjectContext@@UAGKXZ
?Release@CObjectContext@@W3AGKXZ
?Release@CObjectContext@@W7AGKXZ
?Release@CObjectContext@@WBA@AGKXZ
?Release@CObjectContext@@WBE@AGKXZ
?Release@CObjectContext@@WBI@AGKXZ
?Release@CObjectContext@@WM@AGKXZ
?Release@COleCache@@UAGKXZ
?Release@COleCache@@W3AGKXZ
?Release@COleCache@@W7AGKXZ
?Release@COleClientSiteImpl@CDefClient@@UAGKXZ
?Release@COleItemContainerImpl@CDdeObject@@UAGKXZ
?Release@COleObjectImpl@CDdeObject@@UAGKXZ
?Release@COleStaticMutexSem@@QAEXXZ
?Release@CPackagerMoniker@@UAGKXZ
?Release@CPerContext@@QAEJXZ
?Release@CPersistStgImpl@CDdeObject@@UAGKXZ
?Release@CPipePSFactory@@UAGKXZ
?Release@CPipeProxyImp@@UAGKXZ
?Release@CPointerMoniker@@UAGKXZ
?Release@CPointerMoniker@@W3AGKXZ
?Release@CPointerMoniker@@WBE@AGKXZ
?Release@CPolicySet@@UAGKXZ
?Release@CPrivDragDrop@@UAGKXZ
?Release@CPrivUnknown@CAsyncUnknownMgr@@UAGKXZ
?Release@CPrivUnknown@CClientCallMgr@@UAGKXZ
?Release@CPrivUnknown@CDefLink@@UAGKXZ
?Release@CPrivUnknown@CDefObject@@UAGKXZ
?Release@CPropertyBagEx@@UAGKXZ
?Release@CPropertyBagEx@@W3AGKXZ
?Release@CPropertySetStorage@@UAGKXZ
?Release@CPropertyStorage@@UAGKXZ
?Release@CProxyManagerImpl@CDdeObject@@UAGKXZ
?Release@CPunkForRelease@@UAGKXZ
?Release@CRefMutexSem@@QAGKXZ
?Release@CRemoteUnknown@@UAGKXZ
?Release@CRotMonikerEnum@@UAGKXZ
?Release@CRpcCall@@UAGKXZ
?Release@CRpcCall@@W3AGKXZ
?Release@CRpcCall@@W7AGKXZ
?Release@CRpcChannelBuffer@@UAGKXZ
?Release@CRpcChannelBuffer@@W3AGKXZ
?Release@CRpcHelper@@UAGKXZ
?Release@CRpcOptions@@UAGKXZ
?Release@CRpcStubBufferImpl@CDdeObject@@UAGKXZ
?Release@CRunningObjectTable@@UAGKXZ
?Release@CRunningObjectTable@@W3AGKXZ
?Release@CSCInnerUnknown@@UAGKXZ
?Release@CSSMappedStream@@UAGKXZ
?Release@CSTATPROPBAGArray@@QAEKXZ
?Release@CSTInnerUnknown@@UAGKXZ
?Release@CSafeSem@@QAEXXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@UAGKXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@W3AGKXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@W7AGKXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@WM@AGKXZ
?Release@CServerSecurity@@UAGKXZ
?Release@CServerSecurity@@W3AGKXZ
?Release@CServerSecurity@@W7AGKXZ
?Release@CSessionMoniker@@UAGKXZ
?Release@CSessionMoniker@@W3AGKXZ
?Release@CSessionMoniker@@WBE@AGKXZ
?Release@CSimpEnumSTATSTG@@UAGKXZ
?Release@CSimpStorage@@UAGKXZ
?Release@CSimpStorage@@W3AGKXZ
?Release@CSimpStorage@@W7AGKXZ
?Release@CSimpStorageOpen@@UAGKXZ
?Release@CSimpStorageOpen@@W3AGKXZ
?Release@CSimpStorageOpen@@W7AGKXZ
?Release@CSimpStream@@UAGKXZ
?Release@CSimpStream@@W3AGKXZ
?Release@CSimpStreamOpen@@UAGKXZ
?Release@CSimpStreamOpen@@W3AGKXZ
?Release@CSmAllocator@@UAGKXZ
?Release@CStackWalker@@UAGKXZ
?Release@CStackWalkerStack@@UAGKXZ
?Release@CStackWalkerSymbol@@UAGKXZ
?Release@CStatArray@@QAGKXZ
?Release@CStaticWrapper@@UAGKXZ
?Release@CStdClassFactory@@UAGKXZ
?Release@CStdEvent@@UAGKXZ
?Release@CStdEvent@@W3AGKXZ
?Release@CStdIdentity@@UAGKXZ
?Release@CStdIdentity@@W3AGKXZ
?Release@CStdIdentity@@WIE@AGKXZ
?Release@CStdIdentity@@WIM@AGKXZ
?Release@CStdIdentity@@WJI@AGKXZ
?Release@CStdIdentity@@WJM@AGKXZ
?Release@CStdWrapper@@UAGKXZ
?Release@CStmBufRead@@QAEXXZ
?Release@CStmBufWrite@@QAEXXZ
?Release@CStreamOnMessage@@UAGKXZ
?Release@CSurrogateProcessActivator@@UAGKXZ
?Release@CSurrogateProcessActivator@@WBM@AGKXZ
?Release@CSurrogateProcessActivator@@WCA@AGKXZ
?Release@CSurrogateProcessActivator@@WCE@AGKXZ
?Release@CSynchronizeContainer@@UAGKXZ
?Release@CTrackingCompositeMoniker@@UAGKXZ
?Release@CTrackingFileMoniker@@UAGKXZ
?Release@CUnknownImpl@CDdeObject@@UAGKXZ
?Release@CUnknownImpl@CDefClient@@UAGKXZ
?Release@CUrlMonWrapper@@UAGKXZ
?Release@CallFrame@@UAGKXZ
?Release@CallFrame@@W3AGKXZ
?Release@ComPsClassFactory@@UAGKXZ
?Release@ComPsClassFactory@@W3AGKXZ
?Release@ContextInfo@@UAGKXZ
?Release@ContextInfo@@W3AGKXZ
?Release@ContextInfo@@WBE@AGKXZ
?Release@CpUnkMoniker@CClassCache@@UAGKXZ
?Release@CsCatInfo@@UAGKXZ
?Release@DDE_CHANNEL@@UAGKXZ
?Release@DDE_CHANNEL@@W3AGKXZ
?Release@DefaultIBindStatusCallback@@UAGKXZ
?Release@DefaultIBindStatusCallback@@W3AGKXZ
?Release@GenericStream@@UAGKXZ
?Release@GenericStream@@W3AGKXZ
?Release@InprocActpropsUnmarshaller@@UAGKXZ
?Release@InstanceInfo@@UAGKXZ
?Release@InstanceInfo@@W3AGKXZ
?Release@InstantiationInfo@@UAGKXZ
?Release@InstantiationInfo@@W3AGKXZ
?Release@Interceptor@@EAGKXZ
?Release@Interceptor@@G3AGKXZ
?Release@Interceptor@@G7AGKXZ
?Release@Interceptor@@GBE@AGKXZ
?Release@Interceptor@@GM@AGKXZ
?Release@InterfaceWalkerFree@@UAGKXZ
?Release@LEGACY_FRAME@@UAGKXZ
?Release@LEGACY_INTERCEPTOR@@UAGKXZ
?Release@LEGACY_INTERCEPTOR@@W3AGKXZ
?Release@LEGACY_INTERCEPTOR@@W7AGKXZ
?Release@LEGACY_INTERCEPTOR@@WBA@AGKXZ
?Release@LEGACY_INTERCEPTOR@@WBE@AGKXZ
?Release@LEGACY_INTERCEPTOR@@WBM@AGKXZ
?Release@LEGACY_INTERCEPTOR@@WM@AGKXZ
?Release@MD_INTERFACE@@QAEKXZ
?Release@MarshallingChannel@@UAGKXZ
?Release@MarshallingChannel@@W3AGKXZ
?Release@OpaqueDataInfo@@UAGKXZ
?Release@OpaqueDataInfo@@W3AGKXZ
?Release@OutSerializer@ActivationPropertiesOut@@UAGKXZ
?Release@PBasicEntry@@QAEXXZ
?Release@POSTRELRIFREF@@UAGKXZ
?Release@PTSetMember@@QAEXXZ
?Release@SEMAPHORE@@QAEXK@Z
?Release@SSimpleWalker@@UAGKXZ
?Release@ScmReplyInfo@@UAGKXZ
?Release@ScmReplyInfo@@W3AGKXZ
?Release@ScmRequestInfo@@UAGKXZ
?Release@ScmRequestInfo@@W3AGKXZ
?Release@SecurityInfo@@UAGKXZ
?Release@SecurityInfo@@W3AGKXZ
?Release@SecurityInfo@@W7AGKXZ
?Release@Serializer@@QAEKXZ
?Release@ServerLocationInfo@@UAGKXZ
?Release@ServerLocationInfo@@W3AGKXZ
?Release@SpecialProperties@@UAGKXZ
?Release@SpecialProperties@@W3AGKXZ
?ReleaseAccess@@YGXPAUILockBytes@@KK@Z
?ReleaseAccessWithMask@@YGXPAUILockBytes@@KKK@Z
?ReleaseAllIPIDEntries@CStdMarshal@@AAEXXZ
?ReleaseAllItems@CDefClient@@QAEXXZ
?ReleaseBlock@CDeltaList@@AAEXK@Z
?ReleaseBoundObjects@CBindCtx@@UAGJXZ
?ReleaseCallback@@YGJPAX@Z
?ReleaseCapture@CDragOperation@@QAEXXZ
?ReleaseCatalogObjects@CClassCache@@SGXXZ
?ReleaseClientTableStrong@CStdMarshal@@AAEJPAVOXIDEntry@@@Z
?ReleaseConnection@CDefObject@@UAGKKKH@Z
?ReleaseCtrlUnk@CStdIdentity@@QAEXXZ
?ReleaseCtxEntry@CStdWrapper@@QAEPAVCPolicySet@@PAVCtxEntry@@@Z
?ReleaseCurrentStream@CSimpStorage@@QAEXXZ
?ReleaseData@CComActivator@@AAEXXZ
?ReleaseDataDelegate@CDefLink@@QAEXXZ
?ReleaseEntry@CApartmentHashTable@@QAEJPAUApartmentEntry@@@Z
?ReleaseEntry@CDirectory@@QAEXK@Z
?ReleaseEntry@CIPIDTable@@QAEXPAUtagIPIDEntry@@@Z
?ReleaseEntry@CInternalPageAllocator@@QAEXPAUtagPageEntry@@@Z
?ReleaseEntry@CPageAllocator@@QAEXPAUtagPageEntry@@@Z
?ReleaseEntryList@CIPIDTable@@QAEXPAUtagIPIDEntry@@0@Z
?ReleaseEntryList@CInternalPageAllocator@@QAEXPAUtagPageEntry@@0@Z
?ReleaseEntryList@CPageAllocator@@QAEXPAUtagPageEntry@@0@Z
?ReleaseFuncDescs@@YGJGPAUtagMethodInfo@@@Z
?ReleaseGetFreeStruct@CFat@@AAEXPAUSGetFreeStruct@@@Z
?ReleaseIDObject@CStdMarshal@@QAEXPAVCIDObject@@@Z
?ReleaseIFD@@YGJPAUtagMInterfacePointer@@@Z
?ReleaseIPIDEntry@CRefCache@@QAEXPAUtagIPIDEntry@@PAPAUtagREMINTERFACEREF@@PAG@Z
?ReleaseInterface@CRIFTable@@QAEXABU_GUID@@@Z
?ReleaseInterface@OAUTIL@@QAEJABU_GUID@@PAPAX@Z
?ReleaseInterfaceData@@YGXPAUtagInterfaceData@@K@Z
?ReleaseInterfaces@SSimpleWalker@@QAEXXZ
?ReleaseInvalidSects@CDeltaList@@QAEJK@Z
?ReleaseLock@CRWLock@@QAIKPAULockCookie@@@Z
?ReleaseLock@XSLOCK@@QAEXXZ
?ReleaseLocks@CRootPubDocFile@@QAEXPAUILockBytes@@@Z
?ReleaseMIDEntry@CMIDTable@@QAEXPAVMIDEntry@@@Z
?ReleaseMarshalBuffer@@YGJPAUtagRPCOLEMESSAGE@@PAUIUnknown@@H@Z
?ReleaseMarshalData@ActivationProperties@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CClassMoniker@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CDocfileUnmarshalFactory@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CErrorObject@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CExposedDocFile@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CExposedStream@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CFreeMarshaler@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CMarshalImplPStream@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CObjectContext@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CPointerMoniker@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CSimpStorage@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CSimpStream@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CStaticWrapper@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CStdMarshal@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CStdWrapper@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@CallFrame@@UAGJPAXKKKPAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_CLIENT_FRAME@@UAGJPAXKKKPAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_SERVER_FRAME@@UAGJPAXKKKPAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@InprocActpropsUnmarshaller@@UAGJPAUIStream@@@Z
?ReleaseMarshalData@Interceptor@@EAGJKPAXKKKPAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@LEGACY_INTERCEPTOR@@UAGJKPAXKKKPAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalObjRef@@YGJAAUtagOBJREF@@@Z
?ReleaseMarshalObjRef@CStdMarshal@@QAEJAAUtagOBJREF@@@Z
?ReleaseMarshalledInterfaceBuffer@@YGJPAX@Z
?ReleaseMemoryInterceptor@LEGACY_INTERCEPTOR@@QAEXXZ
?ReleaseMemoryLock@CClassEntry@CClassCache@@QAEKPAH@Z
?ReleaseOXIDEntry@COXIDTable@@QAEXPAVOXIDEntry@@@Z
?ReleaseObjPtrs@CDefClient@@QAEJXZ
?ReleaseObjRefSwitch@@YGJPAX@Z
?ReleaseOleDelegate@CDefLink@@QAEXXZ
?ReleaseOleItemContainerDelegate@CDefLink@@AAEXXZ
?ReleaseOpen@@YGXPAUILockBytes@@KK@Z
?ReleaseOpenWithMask@@YGXPAUILockBytes@@KKK@Z
?ReleasePage@CMSFPageTable@@QAEXPAVCPagedVector@@KK@Z
?ReleasePoolEntry@CRWLock@@AAEHXZ
?ReleaseRODelegate@CDefLink@@QAEXXZ
?ReleaseReaderLock@CRWLock@@QAIKXZ
?ReleaseRefOnProcess@CSurrogateProcessActivator@@UAGKXZ
?ReleaseRemUnkCopy@CStdMarshal@@QAEXPAUIRemUnknown@@@Z
?ReleaseRemoteInterceptor@LEGACY_INTERCEPTOR@@QAEXXZ
?ReleaseSCMProxy@CRpcResolver@@QAEXXZ
?ReleaseServerProcess@CClassCache@@SGKXZ
?ReleaseStdID@CObjServer@@QAEXXZ
?ReleaseTable@CPagedVector@@QAEXK@Z
?ReleaseWriteAccess@CDFBasis@@QAEJXZ
?ReleaseWriteAccess@CExposedDocFile@@UAGJXZ
?ReleaseWriterLock@CRWLock@@QAIKXZ
?RelockServer@CStdMarshal@@QAEXXZ
?RemAddRef@CRemoteUnknown@@UAGJGQAUtagREMINTERFACEREF@@PAJ@Z
?RemAddRefWorker@CRemoteUnknown@@QAEJGQAUtagREMINTERFACEREF@@PAJH@Z
?RemChangeRef@CRemoteUnknown@@UAGJKGQAUtagREMINTERFACEREF@@@Z
?RemDdeRevokeClassFactory@@YGJPAVCDDEServer@@@Z
?RemIsConnected@CStdMarshal@@QAEHXZ
?RemQIAndUnmarshal@CStdMarshal@@AAEJGPAU_GUID@@PAUtagSQIResult@@@Z
?RemQueryInterface2@CRemoteUnknown@@UAGJABU_GUID@@GPAU2@PAJPAPAUtagMInterfacePointer@@@Z
?RemQueryInterface@CRemoteUnknown@@UAGJABU_GUID@@KGPAU2@PAPAUtagREMQIRESULT@@@Z
?RemRelease@CRemoteUnknown@@UAGJGQAUtagREMINTERFACEREF@@@Z
?RemReleaseWorker@CRemoteUnknown@@QAEJGQAUtagREMINTERFACEREF@@H@Z
?RemUnkAccessCheck@@YGJPAH@Z
?Remap@CDIFat@@QAEJKPAK@Z
?Remap@CFat@@QAEJKKKPAK000@Z
?RemapClassCtxForInProcServer@@YGKK@Z
?RemapSelf@CDIFat@@QAEJXZ
?RemoteAddRef@CStdMarshal@@AAEJPAUtagIPIDEntry@@PAVOXIDEntry@@KKH@Z
?RemoteChangeRef@CStdMarshal@@QAEJHH@Z
?RemoteChangeRifRef@CStdMarshal@@AAEJPAVOXIDEntry@@KGPAUtagREMINTERFACEREF@@@Z
?RemoteReleaseObjRef@@YGJAAUtagOBJREF@@@Z
?RemoteReleaseRifRef@@YGJPAVCStdMarshal@@PAVOXIDEntry@@GPAUtagREMINTERFACEREF@@@Z
?RemoteReleaseRifRefHelper@@YGJPAUIRemUnknown@@PAVOXIDEntry@@GPAUtagREMINTERFACEREF@@PAUIUnknown@@@Z
?RemoteReleaseStdObjRef@@YGJPAUtagSTDOBJREF@@PAVOXIDEntry@@@Z
?Remove@CContextList@@QAEXPAVCContext@@@Z
?Remove@CContextPropList@@QAEXABU_GUID@@@Z
?Remove@CCtxPropHashTable@@QAEXPAVCObjectContext@@@Z
?Remove@CCtxUUIDHashTable@@QAEXPAVCObjectContext@@@Z
?Remove@CHashTable@@QAEXPAUSHashChain@@@Z
?Remove@CMSFPage@@QAEXXZ
?Remove@COIDTable@@QAEXPAVCIDObject@@@Z
?Remove@CPIDTable@@QAEXPAVCIDObject@@@Z
?Remove@CPSTable@@QAEXPAVCPolicySet@@@Z
?Remove@CSpyTable@@QAEHPAX@Z
?Remove@CUpdateList@@QAEXPAVCUpdate@@@Z
?Remove@CpUnkList@@QAEXPAUIUnknown@@@Z
?RemoveAll@CMapKeyToValue@@QAEXXZ
?RemoveAll@CpUnkList@@QAEXXZ
?RemoveBaseClassEntry@CClassEntry@CClassCache@@QAEXPAVCBaseClassEntry@2@@Z
?RemoveClipboardDataObject@@YGJPAUHWND__@@K@Z
?RemoveCollectee@CCollectable@CClassCache@@QAEXPAV12@@Z
?RemoveConnection@CConnectionPoint@@UAGJK@Z
?RemoveCtxEntry@IFaceEntry@@QAEXPAVCObjectContext@@@Z
?RemoveDllClassEntry@CDllPathEntry@CClassCache@@QAEJPAVCDllClassEntry@2@@Z
?RemoveFromApartmentChain@CLSvrClassEntry@CClassCache@@QAEXXZ
?RemoveFromCacheLists@CPolicySet@@QAEXXZ
?RemoveFromFreeList@CRpcThreadCache@@QAEXPAVCRpcThread@@@Z
?RemoveFromList@@YGXPAUSOIDRegistration@@@Z
?RemoveFromOUPReqList@COIDTable@@CGXPAUSHashChain@@@Z
?RemoveHead@CpUnkList@@QAEPAUIUnknown@@XZ
?RemoveISurrogate@CSurrogateProcessActivator@@UAGJXZ
?RemoveItemFromItemList@CDefClient@@QAEXXZ
?RemoveKey@CMapKeyToValue@@QAEHPAXI@Z
?RemoveKey@CMapStringToPtr@@QAEHPAG@Z
?RemoveMarshal@CMarshalList@@QAEXPAV1@@Z
?RemoveMember@CTSSet@@QAEXPAVPTSetMember@@@Z
?RemoveMessage@CComApartment@@QAEJIPAVIMessageParam@@@Z
?RemoveOID@@YGHPAUSHashChain@@PAX@Z
?RemoveOIDUnpinRequest@COIDTable@@QAEXPAVCIDObject@@@Z
?RemovePID@@YGHPAUSHashChain@@PAX@Z
?RemoveProperty@CObjectContext@@UAGJABU_GUID@@@Z
?RemoveRequestedIIDs@ActivationPropertiesOut@@UAGJKPAU_GUID@@@Z
?RemoveRv@CChildInstanceList@@QAEXPAVPRevertable@@@Z
?RemoveSelfFromList@CNtfsStream@@IAEXXZ
?RemoveStdID@CIDObject@@QAEHXZ
?RemoveUnnecessaryXSMembers@CPubDocFile@@QAEXXZ
?RemoveWndProc@CFrameFilter@@QAEXXZ
?RemoveWrapper@CIDObject@@QAEHXZ
?RemoveXSMember@CPubDocFile@@QAEXPAVPTSetMember@@@Z
?RemovepUnk@CCtxConnectionManager@@QAEXPAUIUnknown@@@Z
?Rename@CNtfsStream@@AAEJPBGH@Z
?RenameElement@CExpParameterValidate@@SGJPBG0@Z
?RenameElement@CExposedDocFile@@UAGJPBG0@Z
?RenameElement@CNtfsStorage@@UAGJPBG0@Z
?RenameElement@CNtfsStorageForPropSetStg@@UAGJPBG0@Z
?RenameElement@CSimpStorage@@UAGJPBG0@Z
?RenameEntry@CDirectory@@QAEJKPBVCDfName@@0@Z
?RenameEntry@CDocFile@@QAEJPBVCDfName@@0@Z
?RenameEntry@CPubDocFile@@QAEJPBVCDfName@@0@Z
?RenameEntry@CStgHandle@@QAEJPBVCDfName@@0@Z
?RenameEntry@CWrappedDocFile@@QAEJPBVCDfName@@0@Z
?RenameEntry@PDocFile@@QAEJPBVCDfName@@0@Z
?RenameMember@CTSSet@@QAEXPBVCDfName@@K0@Z
?RenderFormat@@YGJPAUHWND__@@IPAUIDataObject@@@Z
?ReplaceHandle@CRpcChannelBuffer@@QAEXPAVCChannelHandle@@@Z
?ReplaceLocalEntry@CMIDTable@@QAEJPAUtagDUALSTRINGARRAY@@@Z
?ReplaceOriginalWithUpdate@CNFFMappedStream@@AAEJW4enumCREATE_NEW_UPDATE_STREAM@1@@Z
?ReportErrorOrigination@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QAEXPBU_RTL_CALL_SITE@34@@Z
?ReportErrorOrigination@Rtl@ErrorHandling@Windows@@YGXPBU_RTL_CALL_SITE@23@J@Z
?Request@CMutexSem2@@QAEXXZ
?Request@COleStaticMutexSem@@QAEXPBDK0@Z
?RequestData@CDdeObject@@AAEJG@Z
?RequestData@CDefClient@@QAEJPAUHWND__@@GGPAPAX@Z
?RequestDataStd@@YGJGPAPAX@Z
?RequestNewObjectLayout@COleClientSiteImpl@CDefClient@@UAGJXZ
?Reserve@CDFBasis@@QAEJIW4CDFB_CLASSTYPE@@@Z
?Reserve@CFreeList@@QAEJPAUIMalloc@@II@Z
?Reserve@CTransactedStream@@SGJIQAVCDFBasis@@@Z
?Reserve@CWrappedDocFile@@SGJIQAVCDFBasis@@@Z
?ReserveSects@CFat@@QAEJK@Z
?Reset@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGJXZ
?Reset@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGJXZ
?Reset@CAddrExclusionList@@UAGJXZ
?Reset@CBindStatusCallback@@UAGJXZ
?Reset@CClass@@QAEJABU_GUID@@@Z
?Reset@CClientCallMgr@@UAGJXZ
?Reset@CComActivator@@UAGJXZ
?Reset@CCompositeMonikerEnum@@UAGJXZ
?Reset@CEnumCategories@@UAGJXZ
?Reset@CEnumCategoriesOfClass@@UAGJXZ
?Reset@CEnumClassesOfCategories@@UAGJXZ
?Reset@CEnumContextProps@@UAGJXZ
?Reset@CEnumFmt@@UAGJXZ
?Reset@CEnumFormatEtc@@UAGJXZ
?Reset@CEnumFormatEtcDataArray@@UAGJXZ
?Reset@CEnumSTATDATA@@UAGJXZ
?Reset@CEnumSTATPROPBAG@@UAGJXZ
?Reset@CEnumSTATPROPSETSTG@@UAGJXZ
?Reset@CEnumSTATPROPSTG@@UAGJXZ
?Reset@CEnumStatData@@UAGJXZ
?Reset@CEnumVerb@@EAGJXZ
?Reset@CExposedIterator@@UAGJXZ
?Reset@CLocalMachineNames@@UAGJXZ
?Reset@CManualResetEvent@@UAGJXZ
?Reset@CNoEnum@@UAGJXZ
?Reset@CNtfsEnumSTATSTG@@UAGJXZ
?Reset@CObjectContext@@QAEJPAPAX@Z
?Reset@CRotMonikerEnum@@UAGJXZ
?Reset@CServerCallMgr@CRpcChannelBuffer@@UAGJXZ
?Reset@CSimpEnumSTATSTG@@UAGJXZ
?Reset@CSmAllocator@@AAEJXZ
?Reset@CStdEvent@@UAGJXZ
?Reset@ScmReplyInfo@@UAGJXZ
?Reset@ScmRequestInfo@@UAGJXZ
?Reset@SecurityInfo@@UAGJXZ
?ResetBits@CPagedVector@@QAEXXZ
?ResetCopyOnWrite@CFat@@QAEXXZ
?ResetInitializerTimeout@CSurrogateProcessActivator@@UAGJK@Z
?ResetObject@@YGJPAUIUnknown@@@Z
?ResetReaderEvent@EventPoolEntry@@QAEKXZ
?ResetStateForCall@CAsyncUnknownMgr@@UAEJXZ
?ResetTLS@CRpcThreadCache@@CGXXZ
?Resize@CDIFat@@AAEJK@Z
?Resize@CDirectory@@AAEJK@Z
?Resize@CFat@@QAEJK@Z
?Resize@CPagedVector@@QAEJK@Z
?ResizeNoSnapshot@CFat@@QAEJXZ
?ResizePicklingBuff@@YGJPAUtagPCB@@K@Z
?ResolveAddress@CStackWalker@@UAGPAUIStackWalkerSymbol@@_K@Z
?ResolveAddressInternal@CStackWalker@@AAEPAVCStackWalkerSymbol@@_KK@Z
?ResolveShellLink@CFileMoniker@@AAEJH@Z
?RestartServer@CComApartment@@QAEJXZ
?RestoreLock@CRWLock@@QAIKPAULockCookie@@PAH@Z
?RestoreSecurity@CServerSecurity@@QAEXH@Z
?RestoreShellLink@CFileMoniker@@AAEJPAH@Z
?RestoreToken@CChannelHandle@@QAEXHPAX@Z
?ResumeAll@CSurrogateProcessActivator@@UAGJXZ
?ResumeApplication@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?ResumeImpersonate@@YGXPAX@Z
?ResumeProcessClassObjects@CClassCache@@SGJXZ
?RetireServer@CRpcResolver@@QAEJPAU_GUID@@@Z
?RetryRPC@CRpcResolver@@CGHJ@Z
?ReturnCallToList@CAsyncCall@@QAEHPAV1@@Z
?ReturnClass@ActivationProperties@@QAEJABU_GUID@@PAVSerializableProperty@@@Z
?ReturnDocFile@CDocFile@@QAEXPAV1@@Z
?ReturnDocFile@CWrappedDocFile@@QAEXPAV1@@Z
?ReturnStream@CDocFile@@QAEXPAVCDirectStream@@@Z
?ReturnStream@CWrappedDocFile@@QAEXPAVCTransactedStream@@@Z
?ReturnToReserve@CDirectStream@@QAEXQAVCDFBasis@@@Z
?ReturnToReserve@CDocFile@@QAEXQAVCDFBasis@@@Z
?ReturnToReserve@CFreeList@@QAEXPAX@Z
?ReturnToReserve@CTransactedStream@@QAEXQAVCDFBasis@@@Z
?ReturnToReserve@CWrappedDocFile@@QAEXQAVCDFBasis@@@Z
?Revert@CExposedDocFile@@UAGJXZ
?Revert@CExposedStream@@UAGJXZ
?Revert@CMemStm@@UAGJXZ
?Revert@CNdrStream@@UAGJXZ
?Revert@CNtfsStorage@@UAGJXZ
?Revert@CNtfsStorageForPropSetStg@@UAGJXZ
?Revert@CNtfsStream@@UAGJXZ
?Revert@CPropertyStorage@@UAGJXZ
?Revert@CPubDocFile@@QAEJXZ
?Revert@CSimpStorage@@UAGJXZ
?Revert@CSimpStream@@UAGJXZ
?Revert@CStreamOnMessage@@UAGJXZ
?Revert@CTransactedStream@@QAEXXZ
?Revert@CWrappedDocFile@@QAEXXZ
?Revert@GenericStream@@UAGJXZ
?Revert@PTSetMember@@QAEXXZ
?RevertFromAbove@CPubDocFile@@QAEXXZ
?RevertFromAbove@CPubStream@@QAEXXZ
?RevertFromAbove@PRevertable@@QAEXXZ
?RevertToSelf@CServerCallMgr@CRpcChannelBuffer@@UAGJXZ
?RevertToSelf@CServerSecurity@@UAGJXZ
?RevertUpdate@CWrappedDocFile@@AAEXPAVCUpdate@@@Z
?Revoke@CClassCache@@SGJK@Z
?Revoke@CDDEServer@@QAEJXZ
?Revoke@CDefClient@@QAEJH@Z
?Revoke@CRunningObjectTable@@UAGJK@Z
?RevokeAccessRights@CImpAccessControl@COAccessControl@@UAGJPAGKQAU_TRUSTEE_W@@@Z
?RevokeAllEntries@CGIPTable@@QAEXXZ
?RevokeApartmentActivator@@YGJXZ
?RevokeFromMTA@@YGKPAX@Z
?RevokeHelper@CRunningObjectTable@@AAEJKH@Z
?RevokeInterfaceFromGlobal@CGIPTable@@UAGJK@Z
?RevokeInterfaceFromStdGlobal@@YGJK@Z
?RevokeOID@CStdIdentity@@QAEXXZ
?RevokeObjectBound@CBindCtx@@UAGJPAUIUnknown@@@Z
?RevokeObjectParam@CBindCtx@@UAGJPAG@Z
?RevokeStubRegistration@CROTItem@@QAEXXZ
?RollForwardIfNecessary@CNFFMappedStream@@AAEJXZ
?RotateEntry@CDirectory@@AAEJPBVCDfName@@KKPAK@Z
?RpcWorkerThreadEntry@CRpcThreadCache@@CGKPAX@Z
?RslvCancel@CMessageCall@@QAEJAAKJHPAVCCliModalLoop@@@Z
?RtlpDecodeBase64Chunklets@@YGJKP6I?AU_RTL_UCSCHAR_DECODER_RETURN_VALUE@@PBE0@Z00AAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?RtlpDecodeCharsUntilNotMatchPredicate@@YGJPBE0P6I?AU_RTL_UCSCHAR_DECODER_RETURN_VALUE@@00@ZP6IEKPAX@Z2PAPBEPAK@Z
?RtlpGenericBase64Encode@@YGJPBU_LBLOB@@PAU_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT@@@Z
?RtlpMatchBase64Whitespace@@YIEKPAX@Z
?RtlpSmartLBlobWritingContextResizePolicy@@YGJKKKPAK@Z
?Run@CDefLink@@UAGJPAUIBindCtx@@@Z
?Run@CDefObject@@UAGJPAUIBindCtx@@@Z
?RundownOid@CRemoteUnknown@@UAGJKQA_KQAE@Z
?RunningMoniker@@YGHPAUIBindCtx@@PAGKPAKPAPAUIMoniker@@@Z
?SBCallback2@CMachineNamesHelper@@CGXPAXPAUtagSTRINGBINDING@@K@Z
?SBCallback@CMachineNamesHelper@@CGXPAXPAUtagSTRINGBINDING@@K@Z
?SIZE@tagQICONTEXT@@SGKPAVCStdMarshal@@G@Z
?SIZENEEDED_ORPCTHAT@@YGKK@Z
?SIZENEEDED_ORPCTHIS@@YGKHK@Z
?STAHostTimerProc@@YGXPAUHWND__@@IIK@Z
?STAInvoke@@YGJPAUtagRPCOLEMESSAGE@@KPAUIRpcStubBuffer@@PAVIInternalChannelBuffer@@PAXPAUtagIPIDEntry@@PAK@Z
?STAWorkerLoop@CDllHost@@AAEXXZ
?STGMEDIUM_UserUnmarshalWorker@@YGPAEPAKPAEPAUtagSTGMEDIUM@@K@Z
?SafeArrayClear@OAUTIL@@QAEJPAUtagSAFEARRAY@@H@Z
?SafeArrayCopy@OAUTIL@@QAEJPAUtagSAFEARRAY@@PAPAU2@@Z
?SafeArrayCopyData@OAUTIL@@QAEJPAUtagSAFEARRAY@@0@Z
?SafeArrayDestroy@OAUTIL@@QAEJPAUtagSAFEARRAY@@@Z
?SafeArrayLock@OAUTIL@@QAEJPAUtagSAFEARRAY@@@Z
?SafeArrayMarshal@OLEAUTOMATION_FUNCTIONS@@CGPAEPAKPAEPAPAUtagSAFEARRAY@@@Z
?SafeArraySize@@YGKGKPAUtagSAFEARRAYBOUND@@@Z
?SafeArraySize@@YGKPAUtagSAFEARRAY@@@Z
?SafeArraySize@OLEAUTOMATION_FUNCTIONS@@CGKPAKKPAPAUtagSAFEARRAY@@@Z
?SafeArrayUnlock@OAUTIL@@QAEJPAUtagSAFEARRAY@@@Z
?SafeArrayUnmarshal@OLEAUTOMATION_FUNCTIONS@@CGPAEPAKPAEPAPAUtagSAFEARRAY@@@Z
?SafeCast@CRpcChannelBuffer@@SGPAV1@PAUIRpcChannelBuffer@@@Z
?SafeCastFromDWORD@CLSvrClassEntry@CClassCache@@SGJKAAPAV12@@Z
?SafeCastFromHashNode@CClassEntry@CClassCache@@SGPAV12@PAUSMultiGUIDHashNode@@@Z
?SafeRelease@CRefExportCount@@QAEKXZ
?SafeRelease@CSafeRefCount@@QAEKXZ
?SafeReleaseAndNULL@@YGXPAPAUIUnknown@@@Z
?SanityCheck@@YGJPBUtagCInterfaceStubHeader@@K@Z
?Save@CAntiMoniker@@EAGJPAUIStream@@H@Z
?Save@CBaseMoniker@@UAGJPAUIStream@@H@Z
?Save@CCacheNode@@QAEJPAUIStorage@@HH@Z
?Save@CClassMoniker@@UAGJPAUIStream@@H@Z
?Save@CCompositeMoniker@@EAGJPAUIStream@@H@Z
?Save@CDdeObject@@AAEJPAUIStorage@@@Z
?Save@CDefLink@@UAGJPAUIStorage@@H@Z
?Save@CDefObject@@UAGJPAUIStorage@@H@Z
?Save@CEMfObject@@UAGJPAUIStream@@@Z
?Save@CExtentList@@QAEJPAUIStream@@@Z
?Save@CFileMoniker@@UAGJPAUIStream@@H@Z
?Save@CGenObject@@UAGJPAUIStream@@@Z
?Save@CImpAccessControl@COAccessControl@@UAGJPAUIStream@@H@Z
?Save@CItemMoniker@@UAGJPAUIStream@@H@Z
?Save@CLUAMoniker@@UAGJPAUIStream@@H@Z
?Save@CMfObject@@UAGJPAUIStream@@@Z
?Save@CObjrefMoniker@@UAGJPAUIStream@@H@Z
?Save@COleCache@@UAGJPAUIStorage@@H@Z
?Save@CPackagerMoniker@@UAGJPAUIStream@@H@Z
?Save@CPersistStgImpl@CDdeObject@@UAGJPAUIStorage@@H@Z
?Save@CSessionMoniker@@UAGJPAUIStream@@H@Z
?SaveCompleted@CDefLink@@UAGJPAUIStorage@@@Z
?SaveCompleted@CDefObject@@UAGJPAUIStorage@@@Z
?SaveCompleted@COleCache@@UAGJPAUIStorage@@@Z
?SaveCompleted@CPersistStgImpl@CDdeObject@@UAGJPAUIStorage@@@Z
?SaveObject@COleClientSiteImpl@CDefClient@@UAGJXZ
?SaveTOC@COleCache@@AAEJPAUIStorage@@H@Z
?SaveTOCEntry@CCacheNode@@QAEJPAUIStream@@H@Z
?SaveUnicodeAsAnsi@@YGJPAUIStream@@PAGGPADG@Z
?ScalePictExt@CMfObject@@AAEXPAUHDC__@@HHHH@Z
?ScaleRectExt@CMfObject@@AAEXPAUHDC__@@HHHH@Z
?ScanArg@@YGPADPAD@Z
?ScanBoolArg@@YGPADPADPAH@Z
?ScanCommand@@YGGPADGPAPADPAG@Z
?ScanItemOptions@@YGJPAGPAH@Z
?ScanNumArg@@YGPADPADPAH@Z
?ScmGetThreadId@@YGXPAK@Z
?ScmRotHash@@YGKPAEKK@Z
?SearchBaseClassEntry@CClassEntry@CClassCache@@QAEJKAAPAVCBaseClassEntry@2@KPAH@Z
?SearchBaseClassEntryHelp@CClassEntry@CClassCache@@QAEJKAAPAVCBaseClassEntry@2@K@Z
?SearchDPEHash@CClassCache@@SGJPAGAAPAVCDllPathEntry@1@KK@Z
?SearchForDCE@CClassEntry@CClassCache@@QAEPAVCDllClassEntry@2@PAGK@Z
?SearchForLoadedClass@CClassCache@@SGJABUACTIVATION_PROPERTIES@@PAPAVCDllClassEntry@1@@Z
?SearchForPattern@CPatternTbl@@AAEJPAXPAU_GUID@@@Z
?SearchItem@CDefClient@@AAEPAV1@PAG@Z
?SearchList@COXIDTable@@AAEPAVOXIDEntry@@ABU_GUID@@PAV2@@Z
?SectToPair@CDIFat@@ABEXKPAKPAG@Z
?SectToPair@CFat@@ABEXKPAKPAG@Z
?SecureSect@CMStream@@QAEJK_KH@Z
?SecureStringFree@SecurityInfo@@CGXPAGK@Z
?Seek@CExpParameterValidate@@SGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CExposedStream@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CMemStm@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CNdrStream@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CNtfsStream@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CSimpStream@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CSimpStreamOpen@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@CStreamOnMessage@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?Seek@GenericStream@@UAGJT_LARGE_INTEGER@@KPAT_ULARGE_INTEGER@@@Z
?SeekTo@CFileStream@@AAE_K_K@Z
?SelectFat@CStreamCache@@AAEPAVCFat@@XZ
?Send2@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send2@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send2@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send@CAptRpcChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send@CAptRpcChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAUISynchronize@@@Z
?Send@CChannelObject@@UAGJPAUtagRPCOLEMESSAGE@@PAUISynchronize@@PAK@Z
?Send@CCliModalLoop@@QAEJPAUtagRPCOLEMESSAGE@@PAKPAVIInternalChannelBuffer@@@Z
?Send@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAUISynchronize@@PAK@Z
?Send@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAUISynchronize@@PAK@Z
?Send@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAUISynchronize@@PAK@Z
?Send@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?Send@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAUISynchronize@@PAK@Z
?SendCallToSTA@OXIDEntry@@QAEJPAVCMessageCall@@@Z
?SendDataMsg1@CDefClient@@AAEHPAXG@Z
?SendDataMsg@CDefClient@@AAEHG@Z
?SendDevInfo@CDefClient@@AAEXPAUHWND__@@@Z
?SendExecuteAck@CDefClient@@QAEXJ@Z
?SendInitMsgToChildren@@YGHPAUHWND__@@IIJ@Z
?SendMsgAndWaitForReply@CDdeObject@@AAEJPAVDDE_CHANNEL@@HGJHHHH@Z
?SendMsgToChildren@@YGHPAUHWND__@@IIJ@Z
?SendOnClose@CDdeObject@@AAEJXZ
?SendOnClose@COAHolder@@UAGJXZ
?SendOnDataChange@CDAHolder@@UAGJPAUIDataObject@@KK@Z
?SendOnDataChange@CDdeObject@@QAEJH@Z
?SendOnLinkSrcChange@COAHolder@@QAEJPAUIMoniker@@@Z
?SendOnRename@COAHolder@@UAGJPAUIMoniker@@@Z
?SendOnSave@COAHolder@@UAGJXZ
?SendReceive2@CCtxChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAJKPAVCCtxCall@@2PAUICallFrame@@3PAU__MIDL_ICallFrame_0001@@@Z
?SendReceive2@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive2@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive2@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CAptRpcChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CAptRpcChnl@@W3AGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CChannelObject@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CCliModalLoop@@QAEJPAUtagRPCOLEMESSAGE@@PAKPAVIInternalChannelBuffer@@@Z
?SendReceive@CCtxChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CCtxComChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CCtxComChnl@@W3AGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CDdeServerCallMgr@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CDdeServerCallMgr@@W3AGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CRpcChannelBuffer@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@CRpcChannelBuffer@@W3AGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@DDE_CHANNEL@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@DDE_CHANNEL@@W3AGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendReceive@MarshallingChannel@@UAGJPAUtagRPCOLEMESSAGE@@PAK@Z
?SendRenameMsgs@CDefClient@@AAEXPAX@Z
?SendServerTerminateMsg@CDDEServer@@AAEXXZ
?SendTerminateMsg@CDefClient@@AAEXXZ
?SendsProcessEvents@CComProcessInfo@@UAGJPAH@Z
?SerializableQueryInterface@ContextInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@InstanceInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@InstantiationInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@OpaqueDataInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@OutSerializer@ActivationPropertiesOut@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@ScmReplyInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@ScmRequestInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@SecurityInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@ServerLocationInfo@@UAGJABU_GUID@@PAPAX@Z
?SerializableQueryInterface@SpecialProperties@@UAGJABU_GUID@@PAPAX@Z
?Serialize@ActivationProperties@@QAEJAAVSerializer@@@Z
?Serialize@ContextInfo@@UAGJPAX@Z
?Serialize@InstanceInfo@@UAGJPAX@Z
?Serialize@InstantiationInfo@@UAGJPAX@Z
?Serialize@OpaqueDataInfo@@UAGJPAX@Z
?Serialize@OutSerializer@ActivationPropertiesOut@@UAGJPAX@Z
?Serialize@ScmReplyInfo@@UAGJPAX@Z
?Serialize@ScmRequestInfo@@UAGJPAX@Z
?Serialize@SecurityInfo@@UAGJPAX@Z
?Serialize@ServerLocationInfo@@UAGJPAX@Z
?Serialize@SpecialProperties@@UAGJPAX@Z
?SerializeSafeArrayBounds@@YGJPBUtagSAFEARRAY@@PAEPAK@Z
?SerializeToVector@CContextPropList@@QAEXAAPAUtagContextProperty@@@Z
?ServerAllocOIDs@CRpcResolver@@QAEJAA_KPAKPA_KK2@Z
?ServerCleanup@CDllHost@@AAEXK@Z
?ServerExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z
?ServerFillBuffer@CCtxHook@@UAGXABU_GUID@@0PAKPAXJ@Z
?ServerFillBuffer@CDebugChannelHook@@UAGXABU_GUID@@0PAKPAXJ@Z
?ServerFillBuffer@CErrorChannelHook@@UAGXABU_GUID@@0PAKPAXJ@Z
?ServerFreeOXIDAndOIDs@CRpcResolver@@QAEJAA_KKPA_K@Z
?ServerGetBuffer@CRpcChannelBuffer@@AAEJPAUtagRPCOLEMESSAGE@@ABU_GUID@@@Z
?ServerGetReservedID@CRpcResolver@@QAEJPA_K@Z
?ServerGetReservedMOID@CRpcResolver@@QAEJPAU_GUID@@@Z
?ServerGetSize@@YGKPAKPAVCMessageCall@@@Z
?ServerGetSize@CCtxHook@@UAGXABU_GUID@@0JPAK@Z
?ServerGetSize@CDebugChannelHook@@UAGXABU_GUID@@0JPAK@Z
?ServerGetSize@CErrorChannelHook@@UAGXABU_GUID@@0JPAK@Z
?ServerNotify@@YGJPATWireThis@@KPAPAXKPAVCMessageCall@@@Z
?ServerNotify@CCtxHook@@UAGXABU_GUID@@0KPAXK@Z
?ServerNotify@CDebugChannelHook@@UAGXABU_GUID@@0KPAXK@Z
?ServerNotify@CErrorChannelHook@@UAGXABU_GUID@@0KPAXK@Z
?ServerObjectCallable@CStdMarshal@@QAEPAVCObjectContext@@XZ
?ServerRegisterOXID@CRpcResolver@@QAEJAAUtagOXID_INFO@@PA_KPAKQA_K@Z
?ServerReply@CAsyncCall@@QAEXXZ
?ServicesReady@CSurrogateProcessActivator@@UAGXXZ
?Set@CAuthInfo@@SGXPAUtagSOLE_AUTHENTICATION_LIST@@@Z
?Set@CClass@@QAEJABU_GUID@@PAUIStorage@@@Z
?Set@CDfName@@QAEXGPBE@Z
?Set@CDfName@@QAEXPBG@Z
?Set@CDfName@@QAEXPBV1@@Z
?Set@CGlobalOptions@@UAGJKK@Z
?Set@CRpcOptions@@UAGJPAUIUnknown@@KK@Z
?Set@CSafeMoniker@@QAEXPAUIMoniker@@H@Z
?SetAccessRights@CImpAccessControl@COAccessControl@@UAGJPAU_ACTRL_ALISTW@@@Z
?SetActivationFlags@ActivationPropertiesIn@@UAGJK@Z
?SetAddrExclusionList@CRpcResolver@@QAEJKPAPAG@Z
?SetAdvise@CCacheViewImpl@COleCache@@UAGJKKPAUIAdviseSink@@@Z
?SetAllFileLockBytesTimes@CMStream@@QAEJU_FILETIME@@00@Z
?SetAllStreamsTimes@CNtfsStorage@@IAEJPBU_FILETIME@@00@Z
?SetAllTimes@CDirectory@@QAEJKU_FILETIME@@00@Z
?SetAllTimes@CDocFile@@QAEJU_FILETIME@@00@Z
?SetAllTimes@CFileStream@@QAEJU_FILETIME@@00@Z
?SetAllTimes@CMStream@@QAEJKU_FILETIME@@00@Z
?SetAllTimes@CStgHandle@@QAEJU_FILETIME@@00@Z
?SetAllTimes@CTransactedTimeEntry@@QAEXU_FILETIME@@00@Z
?SetAllTimes@CWrappedDocFile@@QAEJU_FILETIME@@00@Z
?SetAllTimes@PTimeEntry@@QAEJU_FILETIME@@00@Z
?SetAllocatorState@CPerContext@@QAEJPAPAV1@PAVCSmAllocator@@@Z
?SetApartment@ServerLocationInfo@@UAGJK@Z
?SetAppID@CRpcResolver@@QAEJU_GUID@@@Z
?SetAsBaseFor@DISPATCH_INTERCEPTOR@@UAGJPAUMD_INTERFACE@@PAH@Z
?SetAsBaseFor@Interceptor@@EAGJPAUMD_INTERFACE@@PAH@Z
?SetAsBaseFor@LEGACY_INTERCEPTOR@@UAGJPAUMD_INTERFACE@@PAH@Z
?SetAssocKey@CMapKeyToValue@@ABEHPAUCAssoc@1@PAXI@Z
?SetAssocValue@CMapKeyToValue@@ABEXPAUCAssoc@1@PAX@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@@@QAEHABVMAP_KEY_GUID@@ABQAUINTERFACE_HELPER_CLSID@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUMD_INTERFACE@@@@QAEHABVMAP_KEY_GUID@@ABQAUMD_INTERFACE@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@@@QAEHABVMAP_KEY_GUID@@ABQAUTYPEINFOVTBL@@@Z
?SetAt@CArrayFValue@@QAEXHPAX@Z
?SetAt@CMapDwordDword@@QAEHKK@Z
?SetAt@CMapKeyToValue@@QAEHPAXI0@Z
?SetAt@CMapStringToPtr@@QAEHPAGPAX@Z
?SetAt@CMapUintPtr@@QAEHIPAX@Z
?SetAtGrow@CArrayFValue@@QAEHHPAX@Z
?SetAuthIdentity@SecurityInfo@@UAGJPAU_COAUTHIDENTITY@@@Z
?SetAuthnFlags@SecurityInfo@@UAGJK@Z
?SetAuthnLevel@SecurityInfo@@UAGJK@Z
?SetAuthnService@OXIDEntry@@AAEJPAUtagOXID_INFO@@@Z
?SetAuthnSvc@SecurityInfo@@UAGJK@Z
?SetAuthzSvc@SecurityInfo@@UAGJK@Z
?SetBase@CTransactedStream@@QAEJPAVPSStream@@@Z
?SetBase@CWrappedDocFile@@QAEJPAVPDocFile@@@Z
?SetBaseMultiStream@CDFBasis@@QAEXPAVCMStream@@@Z
?SetBindOptions@CBindCtx@@UAGJPAUtagBIND_OPTS@@@Z
?SetBitmapData@CGenObject@@AAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@HPAUIDataObject@@@Z
?SetBlanket@CChannelObject@@UAGJPAUIUnknown@@KKPAGKKPAXK@Z
?SetBlanket@CClientCallMgr@@UAGJPAUIUnknown@@KKPAGKKPAXK@Z
?SetBlanket@CClientSecurity@@UAGJPAUIUnknown@@KKPAGKKPAXK@Z
?SetBlanketOnChannel@@YGJPAVCRpcChannelBuffer@@KKPAGKKPAXK@Z
?SetBuffer@GenericStream@@UAGJKPAE@Z
?SetCOAUTHINFO@SecurityInfo@@UAGJPAU_COAUTHINFO@@@Z
?SetCOSERVERINFO@SecurityInfo@@UAGJPAU_COSERVERINFO@@@Z
?SetCachedFilePointer@CFileStream@@AAEX_K@Z
?SetCallState@DDE_CHANNEL@@QAEXW4tagSERVERCALLEX@@J@Z
?SetCallerhWnd@CMessageCall@@QAEJXZ
?SetCapabilities@SecurityInfo@@UAGJK@Z
?SetChain@CMSFPage@@QAEXQAV1@0@Z
?SetChainLength@CFat@@QAEJKK@Z
?SetClass@CDocFile@@QAEJABU_GUID@@@Z
?SetClass@CExpParameterValidate@@SGJABU_GUID@@@Z
?SetClass@CExposedDocFile@@UAGJABU_GUID@@@Z
?SetClass@CMStream@@QAEJKABU_GUID@@@Z
?SetClass@CNtfsStorage@@UAGJABU_GUID@@@Z
?SetClass@CNtfsStorageForPropSetStg@@UAGJABU_GUID@@@Z
?SetClass@CPropertyStorage@@UAGJABU_GUID@@@Z
?SetClass@CPubDocFile@@QAEJABU_GUID@@@Z
?SetClass@CSimpStorage@@UAGJABU_GUID@@@Z
?SetClass@CSimpStorageOpen@@UAGJABU_GUID@@@Z
?SetClass@CStgHandle@@QAEJABU_GUID@@@Z
?SetClass@CWrappedDocFile@@QAEJABU_GUID@@@Z
?SetClass@PDocFile@@QAEJABU_GUID@@@Z
?SetClassId@CDirEntry@@QAEXU_GUID@@@Z
?SetClassId@CDirectory@@QAEJKU_GUID@@@Z
?SetClassId@CPropertySetStream@@QAEXPBU_GUID@@PAJ@Z
?SetClassInfo@ActivationPropertiesIn@@UAGJPAUIUnknown@@@Z
?SetClientContext@CPolicySet@@QAEXPAVCObjectContext@@@Z
?SetClientContext@ContextInfo@@UAGJPAUIContext@@@Z
?SetClientContextNotOK@ContextInfo@@UAGJXZ
?SetClientImpersonating@CComActivator@@UAGJH@Z
?SetClientImpersonating@SpecialProperties@@UAGJH@Z
?SetClientPolicySet@CStdMarshal@@QAEJPAVCPolicySet@@@Z
?SetClientSite@CDefClient@@QAEJXZ
?SetClientSite@CDefLink@@UAGJPAUIOleClientSite@@@Z
?SetClientSite@CDefObject@@UAGJPAUIOleClientSite@@@Z
?SetClientSite@COleObjectImpl@CDdeObject@@UAGJPAUIOleClientSite@@@Z
?SetClipDataObjectInTLS@@YGXPAUIDataObject@@KH@Z
?SetClipboardDataObject@@YGJPAUHWND__@@PAUIDataObject@@@Z
?SetClipboardFormats@@YGJPAUHWND__@@PAUIDataObject@@@Z
?SetClsctx@ActivationPropertiesIn@@UAGJK@Z
?SetColorBlack@CDirectory@@AAEJK@Z
?SetColorScheme@CDefLink@@UAGJPAUtagLOGPALETTE@@@Z
?SetColorScheme@CDefObject@@UAGJPAUtagLOGPALETTE@@@Z
?SetColorScheme@COleObjectImpl@CDdeObject@@UAGJPAUtagLOGPALETTE@@@Z
?SetComVersion@CDestObject@@UAGJAAUtagCOMVERSION@@@Z
?SetComVersion@CDestObjectWrapper@@UAGJAAUtagCOMVERSION@@@Z
?SetConnectionStatus@CStdIdentity@@QAEXJ@Z
?SetConstructFromFile@ActivationPropertiesIn@@UAGJPAGK@Z
?SetConstructFromStorage@ActivationPropertiesIn@@UAGJPAUIStorage@@@Z
?SetContainedObject@CDefLink@@UAGJH@Z
?SetContainedObject@CDefObject@@UAGJH@Z
?SetContext@CCtxComChnl@@QAEXPAVCObjectContext@@@Z
?SetContext@CFillLockBytes@@QAEXPAVCPerContext@@@Z
?SetContext@ServerLocationInfo@@UAGJPAUIObjContext@@@Z
?SetContextFlags@CObjectContext@@UAGJK@Z
?SetContextFlagsForAsyncCall@@YGXPAKPAUtagSTGMEDIUM@@@Z
?SetContextId@CObjectContext@@QAEXABU_GUID@@@Z
?SetContextInfo@ActivationPropertiesIn@@UAGJPAUIContext@@0@Z
?SetContextMarshaler@CObjectContext@@UAGJPAUIContextMarshaler@@@Z
?SetCopyAlignment@GenericStream@@UAGJK@Z
?SetCopyBase@CDFBasis@@QAEXPAVCPubDocFile@@@Z
?SetCopyOnWrite@CFat@@QAEXPAV1@K@Z
?SetCurrentFDT@CForcedDropTarget@@QAEXPAUHWND__@@@Z
?SetCurrentLogicalThreadId@CObjectContext@@UAGJABU_GUID@@@Z
?SetCurrentName@CUpdate@@QAEXPBVCDfName@@@Z
?SetCursor@CDragDefaultCursors@@QAEXK@Z
?SetDF@CPubDocFile@@QAEXPAVPDocFile@@@Z
?SetData@CCacheDataImpl@COleCache@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetData@CClipDataObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetData@CDataObjectImpl@CDdeObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetData@CDefLink@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetData@CDefObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetData@CDragDataObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetData@COleCache@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@H@Z
?SetDataWDO@CCacheNode@@QAEJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@HAAHPAUIDataObject@@@Z
?SetDataWDO@CEMfObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@HPAUIDataObject@@@Z
?SetDataWDO@CGenObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@HPAUIDataObject@@@Z
?SetDataWDO@CMfObject@@UAGJPAUtagFORMATETC@@PAUtagSTGMEDIUM@@HPAUIDataObject@@@Z
?SetDdeServerWindow@CClassCache@@SGHKPAUHWND__@@@Z
?SetDefaultAuthenticationLevel@CComActivator@@UAGJK@Z
?SetDefaultAuthenticationLevel@SpecialProperties@@UAGJK@Z
?SetDerivesFromIDispatch@MD_INTERFACE@@QAEJH@Z
?SetDescription@CErrorObject@@UAGJPAG@Z
?SetDestCtx@ActivationProperties@@UAGJK@Z
?SetDestCtx@CDestObject@@UAGJK@Z
?SetDestCtx@CDestObjectWrapper@@UAGJK@Z
?SetDirLength@CMSFHeader@@QAEJK@Z
?SetDirty@CPagedVector@@QAEJK@Z
?SetDirty@CPubDocFile@@QAEXXZ
?SetDirty@CPubStream@@QAEXXZ
?SetElementTimes@CExpParameterValidate@@SGJPBGPBU_FILETIME@@11@Z
?SetElementTimes@CExposedDocFile@@UAGJPBGPBU_FILETIME@@11@Z
?SetElementTimes@CNtfsStorage@@UAGJPBGPBU_FILETIME@@11@Z
?SetElementTimes@CNtfsStorageForPropSetStg@@UAGJPBGPBU_FILETIME@@11@Z
?SetElementTimes@CPubDocFile@@QAEJPBVCDfName@@PBU_FILETIME@@11@Z
?SetElementTimes@CSimpStorage@@UAGJPBGPBU_FILETIME@@11@Z
?SetEntry@CCallTable@@AAEJPAUICancelMethodCalls@@@Z
?SetEnvoyData@CObjectContext@@QAEJPAUtagDATAELEMENT@@@Z
?SetEventHandle@CStdEvent@@UAGJPAPAX@Z
?SetEventIfNeccessary@CCtxConnectionManager@@QAEXXZ
?SetExpiredTime@OXIDEntry@@AAEXXZ
?SetExtent@CDefLink@@UAGJKPAUtagSIZE@@@Z
?SetExtent@CDefObject@@UAGJKPAUtagSIZE@@@Z
?SetExtent@COleObjectImpl@CDdeObject@@UAGJKPAUtagSIZE@@@Z
?SetFatSect@CDIFat@@QAEJKK@Z
?SetFile@InstanceInfo@@UAGJPAGK@Z
?SetFileHandleTime@CNtfsStream@@CGJPAXPBU_FILETIME@@11@Z
?SetFileLockBytesTime@CMStream@@QAEJW4WHICHTIME@@U_FILETIME@@@Z
?SetFileSize@CNtfsStream@@AAEJABV?$TXLargeIntegerWrapper@T_ULARGE_INTEGER@@K_K@@@Z
?SetFillSize@CFileStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetFillSize@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@@Z
?SetForcedDropTarget@COLEDragDropHelper@@UAGJPAUHWND__@@H@Z
?SetGUID@CErrorObject@@UAGJABU_GUID@@@Z
?SetHandler@CAggId@@UAGJPAUIUnknown@@@Z
?SetHelpContext@CErrorObject@@UAGJK@Z
?SetHelpFile@CErrorObject@@UAGJPAG@Z
?SetHostNames@CDefLink@@UAGJPBG0@Z
?SetHostNames@CDefObject@@UAGJPBG0@Z
?SetHostNames@COleObjectImpl@CDdeObject@@UAGJPBG0@Z
?SetIDObject@CStdMarshal@@QAEXPAVCIDObject@@@Z
?SetIID@DISPATCH_INTERCEPTOR@@UAGJABU_GUID@@@Z
?SetIID@Interceptor@@EAGJABU_GUID@@@Z
?SetIID@LEGACY_INTERCEPTOR@@UAGJABU_GUID@@@Z
?SetILBInfo@CPerContext@@QAEXPAUILockBytes@@PAUCFileStream@@0K@Z
?SetIdleTimeoutToZero@CSurrogateProcessActivator@@UAGJXZ
?SetIfdROT@InstanceInfo@@UAGJPAUtagMInterfacePointer@@@Z
?SetImpLevel@SecurityInfo@@UAGJK@Z
?SetImpersonatingFlag@CRpcResolver@@AAEJPAUIActivationPropertiesIn@@@Z
?SetInitialState@CTransactedStream@@AAEJPAVPSStream@@@Z
?SetInitialState@CWrappedDocFile@@AAEJPAVPDocFile@@@Z
?SetInvalidParameter@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QAEXXZ
?SetInvalidParameter_NullPointer@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QAEXXZ
?SetLUARunLevel@CComActivator@@UAGJKK@Z
?SetLUARunLevel@SpecialProperties@@UAGJKK@Z
?SetLocalBlob@ActivationProperties@@UAGJPAX@Z
?SetLocalResolverBindings@CRpcResolver@@QAEJ_KPAVCDualStringArray@@@Z
?SetMapping@CProxyManagerImpl@CDdeObject@@UAGXPAX@Z
?SetMapping@CStdIdentity@@UAGXPAX@Z
?SetMarshalFlags@ActivationProperties@@UAGJK@Z
?SetMarshalledResults@ActivationPropertiesOut@@UAGJKPAU_GUID@@PAJPAPAUtagMInterfacePointer@@@Z
?SetMetaData@Interceptor@@AAEJPAUTYPEINFOVTBL@@@Z
?SetMetaData@MD_INTERFACE@@QAEJPAUTYPEINFOVTBL@@PBUtagCInterfaceStubHeader@@PBD@Z
?SetMetaData@MD_METHOD@@QAEXPBUtagCInterfaceStubHeader@@KPAUMD_INTERFACE@@PAUTYPEINFOVTBL@@@Z
?SetMiniSize@CMStream@@QAEJXZ
?SetModified@CExposedStream@@UAGXPAJ@Z
?SetModified@CNFFMappedStream@@UAGXPAJ@Z
?SetModified@CPubMappedStream@@QAEXPAJ@Z
?SetModified@CSSMappedStream@@UAGXPAJ@Z
?SetMoniker@CDefLink@@UAGJKPAUIMoniker@@@Z
?SetMoniker@CDefObject@@UAGJKPAUIMoniker@@@Z
?SetMoniker@COleObjectImpl@CDdeObject@@UAGJKPAUIMoniker@@@Z
?SetName@CDirEntry@@QAEXPBVCDfName@@@Z
?SetName@CGlobalFileStream@@QAEXPBG@Z
?SetNext@CDlElement@@QAEXPAV1@@Z
?SetNext@CFat@@QAEJKK@Z
?SetNext@CMSFPage@@QAEXQAV1@@Z
?SetNext@CUpdate@@QAEXPAV1@@Z
?SetNextMarshal@CMarshalList@@QAEXPAV1@@Z
?SetNoScratch@CFat@@QAEXPAV1@@Z
?SetNoSnapshot@CFat@@QAEXK@Z
?SetOID@CStdIdentity@@QAEJABU_GUID@@@Z
?SetObjServer@@YGXPAVCObjServer@@@Z
?SetObjServer@CCtxConnectionManager@@QAEXPAVCObjServer@@@Z
?SetObjectCountAtIdleTime@CSurrogateProcessActivator@@UAGJK@Z
?SetObjectInterfaces@ActivationPropertiesOut@@UAGJKPAU_GUID@@PAUIUnknown@@@Z
?SetOleThunkWowPtr@@YGXPAVOleThunkWOW@@@Z
?SetOrRevokeForcedDropTarget@CRpcResolver@@QAEJHPAUHWND__@@@Z
?SetOrigClsctx@CComActivator@@UAGJK@Z
?SetOrigClsctx@SpecialProperties@@UAGJK@Z
?SetOriginalName@CUpdate@@QAEXPBVCDfName@@@Z
?SetOwner@CImpAccessControl@COAccessControl@@UAGJPAU_TRUSTEE_W@@0@Z
?SetOwnerTableHint@XSLOCK@@AAEXV?$OPAQUE_HANDLE@$00@@PAUOWNERENTRY@1@@Z
?SetParam@CallFrame@@UAGJKPAUtagVARIANT@@@Z
?SetParam@DISPATCH_FRAME@@UAGJKPAUtagVARIANT@@@Z
?SetParamMetaData@MD_METHOD@@QAEXPAUMD_PARAM@@@Z
?SetParameters@CClassMoniker@@QAEJPBG@Z
?SetParent@CConnectionPoint@@QAEXPAUIDocfileAsyncConnectionPoint@@@Z
?SetParent@CDIFat@@QAEXPAVCMStream@@@Z
?SetParent@CDirectory@@QAEXPAVCMStream@@@Z
?SetParent@CFat@@QAEXPAVCMStream@@@Z
?SetParent@CPagedVector@@QAEXPAVCMStream@@@Z
?SetParent@OpaqueDataInfo@@UAGJPAUISerializableParent@@@Z
?SetParent@SerializableProperty@@UAGJPAUISerializableParent@@@Z
?SetPartitionId@CComActivator@@UAGJABU_GUID@@@Z
?SetPartitionId@SpecialProperties@@UAGJABU_GUID@@@Z
?SetPathShellLink@CFileMoniker@@AAEJXZ
?SetPendingDisconnectType@CStdMarshal@@AAEXK@Z
?SetPictExt@CMfObject@@AAEXPAUHDC__@@HH@Z
?SetPictOrg@CMfObject@@AAEXPAUHDC__@@HHH@Z
?SetPosition@GenericStream@@UAGJKK@Z
?SetPosition@Serializer@@QAEJK@Z
?SetPresBitsPos@CCacheNode@@AAEXPAUIStream@@AAK@Z
?SetPrev@CDlElement@@QAEXPAV1@@Z
?SetPrev@CMSFPage@@QAEXQAV1@@Z
?SetPrev@CUpdate@@QAEXPAV1@@Z
?SetProcess@ServerLocationInfo@@UAGJKK@Z
?SetProcessGUID@CSurrogateProcessActivator@@QAEXABU_GUID@@@Z
?SetProcessRequestType@CComActivator@@UAGJK@Z
?SetProcessRequestType@SpecialProperties@@UAGJK@Z
?SetProperty@CObjectContext@@UAGJABU_GUID@@KPAUIUnknown@@@Z
?SetPropertyNames@CPropertySetStream@@QAEXKPBKQBQBGPAJ@Z
?SetPrototypeContext@ContextInfo@@UAGJPAUIContext@@@Z
?SetPushBuffer@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJK@Z
?SetPushBuffer@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJK@Z
?SetPushBuffer@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJK@Z
?SetReadAhead@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEXK@Z
?SetReadAhead@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEXK@Z
?SetReadAhead@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEXK@Z
?SetReaderEvent@EventPoolEntry@@QAEKXZ
?SetRegistryValue@@YAJUHREG@@PBGZZ
?SetRegistryValue@@YGJUHREG@@PBG1@Z
?SetRemoteReplyInfo@ScmReplyInfo@@UAGJPAU_REMOTE_REPLY_SCM_INFO@@@Z
?SetRemoteRequestInfo@ScmRequestInfo@@UAGJPAU_REMOTE_REQUEST_SCM_INFO@@@Z
?SetRemoteServerName@ServerLocationInfo@@UAGJPAG@Z
?SetResolverInfo@ScmReplyInfo@@UAGJPAU_PRIV_RESOLVER_INFO@@@Z
?SetReturnValue@CallFrame@@UAGXJ@Z
?SetReturnValue@LEGACY_FRAME@@UAGXJ@Z
?SetScmInfo@ScmRequestInfo@@UAGJPAU_PRIV_SCM_INFO@@@Z
?SetScratch@CDFBasis@@QAEXPAVCMStream@@@Z
?SetScratchMS@CMStream@@QAEXPAV1@@Z
?SetSect@CMSFPageTable@@QAEXPAVCMSFPage@@K@Z
?SetSect@CPagedVector@@QAEXKK@Z
?SetSerializableIfs@ActivationProperties@@QAEXKPAVSerializableProperty@@@Z
?SetServerContext@CPolicySet@@QAEXPAVCObjectContext@@@Z
?SetServerPid@SpecialProperties@@UAGJK@Z
?SetServerPrincipalName@SecurityInfo@@UAGJPAG@Z
?SetSessionId@CComActivator@@UAGJKHH@Z
?SetSessionId@SpecialProperties@@UAGJKHH@Z
?SetSize@CArrayFValue@@QAEHHH@Z
?SetSize@CDirectStream@@QAEJ_K@Z
?SetSize@CDirectory@@QAEJK_K@Z
?SetSize@CExposedStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CExposedStream@@UAGXKEPAPAXPAJ@Z
?SetSize@CFileStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CMStream@@QAEJXZ
?SetSize@CMemBytes@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CMemStm@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CNFFMappedStream@@UAGXKEPAPAXPAJ@Z
?SetSize@CNdrStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CNtfsStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CNtfsStream@@W3AGJT_ULARGE_INTEGER@@@Z
?SetSize@CPubMappedStream@@QAEXKEPAPAXPAJ@Z
?SetSize@CPubStream@@QAEJ_K@Z
?SetSize@CSSMappedStream@@UAGXKEPAPAXPAJ@Z
?SetSize@CSimpStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CSimpStreamOpen@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CStreamOnMessage@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@CTransactedStream@@QAEJ_K@Z
?SetSize@GenericStream@@UAGJT_ULARGE_INTEGER@@@Z
?SetSize@PSStream@@QAEJ_K@Z
?SetSizeWorker@CFileStream@@AAEJ_K@Z
?SetSource@CErrorObject@@UAGJPAG@Z
?SetSourceDisplayName@CDefLink@@UAGJPBG@Z
?SetSourceMoniker@CDefLink@@UAGJPAUIMoniker@@ABU_GUID@@@Z
?SetStackLocation@CallFrame@@UAGXPAX@Z
?SetStackLocation@LEGACY_FRAME@@UAGXPAX@Z
?SetStageAndIndex@ActivationPropertiesIn@@UAGJW4tagACTIVATION_STAGE@@H@Z
?SetStart@CDirectory@@QAEJKK@Z
?SetState@CSmAllocator@@QAEXPAVCSharedMemoryBlock@@PAEKPAPAVCPerContext@@PAV3@@Z
?SetStateBits@CDocFile@@QAEJKK@Z
?SetStateBits@CExposedDocFile@@UAGJKK@Z
?SetStateBits@CNtfsStorage@@UAGJKK@Z
?SetStateBits@CNtfsStorageForPropSetStg@@UAGJKK@Z
?SetStateBits@CPubDocFile@@QAEJKK@Z
?SetStateBits@CSimpStorage@@UAGJKK@Z
?SetStateBits@CStgHandle@@QAEJKK@Z
?SetStateBits@CWrappedDocFile@@QAEJKK@Z
?SetStateBits@PDocFile@@QAEJKK@Z
?SetStdInfo@CDefClient@@AAEJPAUHWND__@@PAGPAX@Z
?SetStg@CCacheNode@@QAEJPAUIStorage@@@Z
?SetStorage@InstanceInfo@@UAGJPAUIStorage@@@Z
?SetStorageIFD@InstanceInfo@@UAGJPAUtagMInterfacePointer@@@Z
?SetStream@Serializer@@QAEJPAUIStream@@KK@Z
?SetStreamPos@CObjectContext@@QAEJAAPAUIStream@@_KABQAT_ULARGE_INTEGER@@@Z
?SetStreamTime@CNtfsStream@@AAEJPBU_FILETIME@@00@Z
?SetSxsActCtx@CMessageCall@@QAEXPAX@Z
?SetSz@CClass@@QAEJPAG@Z
?SetTargetDevice@CDdeObject@@AAEJPBUtagDVTARGETDEVICE@@@Z
?SetThreadAllocatorState@CPerContext@@QAEPAVCSmAllocator@@PAPAV1@@Z
?SetThreadLocal@CMessageCall@@QAEXH@Z
?SetTime@CDirectory@@QAEJKW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CDocFile@@QAEJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CFileStream@@QAEJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CMStream@@QAEJKW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CStgHandle@@QAEJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CWrappedDocFile@@QAEJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@PTimeEntry@@QAEJW4WHICHTIME@@U_FILETIME@@@Z
?SetTimes@CPropertyStorage@@UAGJPBU_FILETIME@@00@Z
?SetTopic@CDdeObject@@QAEXG@Z
?SetUpMarshallingDistance@ActivationProperties@@QAEKK@Z
?SetUpdateOptions@CDefLink@@UAGJK@Z
?SetUpdateTimes@CDefLink@@AAEJXZ
?SetUserFlags@CDirectory@@QAEJKKK@Z
?SetValue@CPropertySetStream@@QAEXKPAPAU_INDIRECTPROPERTY@@QBUtagPROPVARIANT@@PAUtagPROPERTY_INFORMATION@@PAGPAJ@Z
?SetVector@CMSFPage@@QAEXPAVCPagedVector@@@Z
?SetWriterEvent@EventPoolEntry@@QAEXXZ
?SetXSM@CUpdate@@QAEXPAVPTSetMember@@@Z
?SetZombie@CIDObject@@AAEXK@Z
?SetupAdviseConnection@CCacheNode@@QAEJPAUIDataObject@@PAUIAdviseSink@@@Z
?SetupForUnserializing@ActivationProperties@@QAEJPAVSerializer@@@Z
?SetupFusionContext@CSurrogateProcessActivator@@UAGJXZ
?SetupSecurity@CServerSecurity@@QAEJXZ
?SetupSecurity@CSurrogateProcessActivator@@UAGJXZ
?SetupSurrogateTimeout@CSurrogateProcessActivator@@UAGJXZ
?ShiftToEnd@?$CArray@VCCacheNode@@@@QAEHK@Z
?ShowDialog@CHlprDialog@@UAEHPAUHINSTANCE__@@PBGPAUHWND__@@@Z
?ShowObject@COleClientSiteImpl@CDefClient@@UAGJXZ
?ShutDown@CNFFMappedStream@@QAEJXZ
?ShutDown@CNtfsStream@@MAEJXZ
?ShutDown@CNtfsUpdateStreamForPropStg@@MAEJXZ
?ShutDown@CPropertyBagEx@@QAEJXZ
?ShutDownStorage@CNtfsStorage@@AAEJXZ
?Shutdown@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QAEXXZ
?Shutdown@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QAEXXZ
?SidToPair@CDirectory@@ABEJKPAKPAG@Z
?Signal@CBindStatusCallback@@UAGJXZ
?Signal@CChannelObject@@QAEXXZ
?Signal@CClientCallMgr@@UAGJXZ
?Signal@CManualResetEvent@@UAGJXZ
?Signal@CServerCallMgr@CRpcChannelBuffer@@UAGJXZ
?Signal@CStdEvent@@UAGJXZ
?SignalObject@@YGJPAUIUnknown@@@Z
?SignalTheClient@@YGXPAVCAsyncCall@@@Z
?SilentlyReportExceptions@@YGXPAU_EXCEPTION_POINTERS@@@Z
?Size@CStackWalkerStack@@UAGKJ@Z
?SizeOfTYPEDESC@@YGJPAUITypeInfo@@PAUtagTYPEDESC@@PAK@Z
?SizeTAdd@@YGJIIPAI@Z
?SizeTSub@@YGJIIPAI@Z
?Skip@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UAGJK@Z
?Skip@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UAGJK@Z
?Skip@CAddrExclusionList@@UAGJK@Z
?Skip@CCompositeMonikerEnum@@UAGJK@Z
?Skip@CEnumCategories@@UAGJK@Z
?Skip@CEnumCategoriesOfClass@@UAGJK@Z
?Skip@CEnumClassesOfCategories@@UAGJK@Z
?Skip@CEnumContextProps@@UAGJK@Z
?Skip@CEnumFmt10@@UAGJK@Z
?Skip@CEnumFmt@@UAGJK@Z
?Skip@CEnumFormatEtc@@UAGJK@Z
?Skip@CEnumFormatEtcDataArray@@UAGJK@Z
?Skip@CEnumSTATDATA@@UAGJK@Z
?Skip@CEnumSTATPROPBAG@@UAGJK@Z
?Skip@CEnumSTATPROPSETSTG@@UAGJK@Z
?Skip@CEnumSTATPROPSTG@@UAGJK@Z
?Skip@CEnumStatData@@UAGJK@Z
?Skip@CEnumVerb@@EAGJK@Z
?Skip@CExposedIterator@@UAGJK@Z
?Skip@CLocalMachineNames@@UAGJK@Z
?Skip@CNoEnum@@UAGJK@Z
?Skip@CNtfsEnumSTATSTG@@UAGJK@Z
?Skip@CRotMonikerEnum@@UAGJK@Z
?Skip@CSimpEnumSTATSTG@@UAGJK@Z
?SkipStdMarshal@@YGJPAUIStream@@PAU_GUID@@PAK@Z
?SlowGetOrCreateLockEntry@LockEntry@@CGPAV1@PAUThread@@QAVCRWLock@@@Z
?SortByStartAddress@CStreamChunkList@@QAEXXZ
?SpecialCleanup@COIDTable@@SGXPAVCIDObject@@@Z
?SplitEntry@CDirectory@@AAEJPBVCDfName@@KKKKKPAK@Z
?SrvrDispatchIncomingCall@@YGJPAUtagSRVRDISPATCHDATA@@@Z
?SrvrExecute@CDDEServer@@QAEJPAUHWND__@@PAX0@Z
?SrvrHandleIncomingCall@@YGJPAVCDDEServer@@PAUHWND__@@PAX1@Z
?StRead10NativeData@@YGJPAUIStorage@@PAPAX@Z
?StRead@@YGJPAUIStream@@PAXK@Z
?StSave10ItemName@@YGJPAUIStorage@@PBD@Z
?StSave10NativeData@@YGJPAUIStorage@@PAXH@Z
?StSetSize@@YGJPAUIStream@@KH@Z
?StandardCreateInstance@CComActivator@@UAGJABU_GUID@@PAUIUnknown@@KPAU_COSERVERINFO@@KPAUtagMULTI_QI@@@Z
?StandardGetClassObject@CComActivator@@UAGJABU_GUID@@KPAU_COSERVERINFO@@0PAPAX@Z
?StandardGetInstanceFromFile@CComActivator@@UAGJPAU_COSERVERINFO@@PAU_GUID@@PAUIUnknown@@KKPAGKPAUtagMULTI_QI@@@Z
?StandardGetInstanceFromIStorage@CComActivator@@UAGJPAU_COSERVERINFO@@PAU_GUID@@PAUIUnknown@@KPAUIStorage@@KPAUtagMULTI_QI@@@Z
?StandardMaskToNTMask@@YGXPAK0@Z
?StartAsyncMode@CFileStream@@QAEXXZ
?StartDisconnectIfNecessary@CObjectContext@@QAEHXZ
?StartMarshal@@YGJPAUIStream@@ABU_GUID@@1K@Z
?StartNTService@CSurrogateProcessActivator@@CGKPAX@Z
?StartNTServiceIfNecessary@CSurrogateProcessActivator@@UAGJXZ
?StartSendingSCMPings@CSurrogateProcessActivator@@EAGJXZ
?StartServer@CComApartment@@QAEJXZ
?StartServer@OXIDEntry@@QAEJXZ
?StartServerExternal@CComApartment@@QAEJXZ
?StartTimer@CCliModalLoop@@QAEJK@Z
?Stat@CExpParameterValidate@@SGJPAUtagSTATSTG@@K@Z
?Stat@CExposedDocFile@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CExposedStream@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CFileStream@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CFillLockBytes@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CMemBytes@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CMemStm@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CNdrStream@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CNtfsStorage@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CNtfsStorageForPropSetStg@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CNtfsStream@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CNtfsStream@@W3AGJPAUtagSTATSTG@@K@Z
?Stat@CPropertyStorage@@UAGJPAUtagSTATPROPSETSTG@@@Z
?Stat@CPubDocFile@@QAEJPAUtagSTATSTG@@K@Z
?Stat@CPubStream@@QAEJPAUtagSTATSTG@@K@Z
?Stat@CRootPubDocFile@@QAEJPAUtagSTATSTG@@K@Z
?Stat@CSimpStorage@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CSimpStorageOpen@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CSimpStream@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CSimpStreamOpen@@UAGJPAUtagSTATSTG@@K@Z
?Stat@CStreamOnMessage@@UAGJPAUtagSTATSTG@@K@Z
?Stat@GenericStream@@UAGJPAUtagSTATSTG@@K@Z
?Stat@PTSetMember@@QAEJPAUtagSTATSTG@@K@Z
?StatEntry@CDirectory@@QAEJKPAUSIterBuffer@@PAUtagSTATSTG@@@Z
?StatEntry@CDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@@Z
?StatEntry@CWrappedDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@@Z
?StatEntry@PDocFile@@QAEJPBVCDfName@@PAUSIterBuffer@@PAUtagSTATSTG@@@Z
?StaticReleaseMarshalData@CExposedDocFile@@SGJPAUIStream@@K@Z
?StaticReleaseMarshalData@CExposedStream@@SGJPAUIStream@@K@Z
?StdMarshalObject@@YGJPAUIStream@@ABU_GUID@@PAUIUnknown@@PAVCObjectContext@@KPAXK@Z
?StgConvertPropertyToVariantInternal@@YGEPBUtagSERIALIZEDPROPERTYVALUE@@KGPAUtagPROPVARIANT@@PAVPMemoryAllocator@@PAJ@Z
?StgConvertVariantToPropertyInternal@@YGPAUtagSERIALIZEDPROPERTYVALUE@@PBUtagPROPVARIANT@@GPAU1@PAKK2PAGPAJ@Z
?StgConvertVariantToPropertyNoEH@@YGPAUtagSERIALIZEDPROPERTYVALUE@@PBUtagPROPVARIANT@@GPAU1@PAKK2PAGPAJ@Z
?StgPropertyLengthAsVariantNoEH@@YGKPBUtagSERIALIZEDPROPERTYVALUE@@KGPAJ@Z
?StmToClipfmt@@YGJAAVCStmBufRead@@PAK1W4TXTTYPE@@@Z
?Stop@CDefObject@@QAEJXZ
?StopSendingSCMPings@CSurrogateProcessActivator@@EAGJXZ
?StopServer@CComApartment@@QAEJXZ
?StopServer@OXIDEntry@@QAEJXZ
?Storage32DllGetClassObject@@YGJABU_GUID@@0PAPAX@Z
?StoreISurrogate@CSurrogateProcessActivator@@UAGJPAUISurrogate@@@Z
?StreamExists@CNtfsStorage@@IAEJPBG@Z
?StringCat@@YAJPAPAGZZ
?StringCat@@YGJPAPAGPAD@Z
?StringCbCatA@@YGJPADIPBD@Z
?StringCbCatW@@YGJPAGIPBG@Z
?StringCbCopyA@@YGJPADIPBD@Z
?StringCbCopyNW@@YGJPAGIPBGI@Z
?StringCbCopyW@@YGJPAGIPBG@Z
?StringCbLengthA@@YGJPBDIPAI@Z
?StringCbLengthW@@YGJPBGIPAI@Z
?StringCbPrintfA@@YAJPADIPBDZZ
?StringCbPrintfW@@YAJPAGIPBGZZ
?StringCchCatW@@YGJPAGIPBG@Z
?StringCchCopyA@@YGJPADIPBD@Z
?StringCchCopyExA@@YGJPADIPBDPAPADPAIK@Z
?StringCchCopyExW@@YGJPAGIPBGPAPAGPAIK@Z
?StringCchCopyNExW@@YGJPAGIPBGIPAPAGPAIK@Z
?StringCchCopyNW@@YGJPAGIPBGI@Z
?StringCchCopyW@@YGJPAGIPBG@Z
?StringCchLengthA@@YGJPBDIPAI@Z
?StringCchLengthW@@YGJPBGIPAI@Z
?StringCchPrintfA@@YAJPADIPBDZZ
?StringCchPrintfExA@@YAJPADIPAPADPAIKPBDZZ
?StringCchPrintfW@@YAJPAGIPBGZZ
?StringConvert@CComCat@@AAEJPAGKPBG1@Z
?StringFromGuid@@YGXABU_GUID@@PAG@Z
?StringToGUID@@YG_NPBGPAU_GUID@@@Z
?StubInvoke@@YGJPAUtagRPCOLEMESSAGE@@PAVCStdIdentity@@PAUIRpcStubBuffer@@PAUIRpcChannelBuffer@@PAUtagIPIDEntry@@PAK@Z
?StubPostCheck@DISPATCH_SERVER_FRAME@@QAEJXZ
?StubPreCheck@DISPATCH_SERVER_FRAME@@QAEJXZ
?Subtract@CDdeConnectionTable@@QAEJKPAGPAK@Z
?SuspendAll@CSurrogateProcessActivator@@UAGJXZ
?SuspendApplication@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?SuspendImpersonate@@YGJPAPAX@Z
?SuspendProcessClassObjects@CClassCache@@SGJXZ
?SuspendProcessClassObjectsHelp@CClassCache@@SGJXZ
?SwitchAfterCallback@@YGJPAVCPolicySet@@AAVCRpcCall@@PAVCCtxCall@@2@Z
?SwitchAptAndDispatchCall@CRpcChannelBuffer@@QAEJPAPAVCMessageCall@@@Z
?SwitchForCallback@@YGJPAVCPolicySet@@P6GJPAX@Z1ABU_GUID@@KPAUIUnknown@@@Z
?SwitchSTA@@YGJPAVOXIDEntry@@PAPAVCMessageCall@@@Z
?SwitchToFile@CExposedDocFile@@UAGJPAG@Z
?SwitchToFile@CFileStream@@UAGJPBG_KKPAX@Z
?SwitchToFile@CRootPubDocFile@@QAEJPBGPAUILockBytes@@PAK@Z
?SymAPIExceptionFilter@@YGJPAU_EXCEPTION_POINTERS@@@Z
?SymbolName@CStackWalkerSymbol@@UAGPBGXZ
?Sync@CSharedMemoryBlock@@QAEJXZ
?Sync@CSmAllocator@@QAEJXZ
?SyncFromAsync@CRIFTable@@QAEJABU_GUID@@PAU2@@Z
?SyncInvoke2@CCtxChnl@@UAGJPAUtagRPCOLEMESSAGE@@PAKPAVCCtxCall@@2PAUICallFrame@@3PAU__MIDL_ICallFrame_0001@@PAJ@Z
?SyncReadAtFile@CNtfsStream@@AAEJT_ULARGE_INTEGER@@PAXKPAK@Z
?SyncStubInvoke@@YGJPAUtagRPCOLEMESSAGE@@ABU_GUID@@PAVCIDObject@@PAXPAUIRpcChannelBuffer@@PAUIRpcStubBuffer@@PAK@Z
?SyncWriteAtFile@CNtfsStream@@AAEJT_ULARGE_INTEGER@@PBXKPAK@Z
?SysCopyBSTRSrc@CallFrame@@QAEPAGPAG@Z
?SysFreeStringDst@CallFrame@@QAEXPAG@Z
?SzLibIdOfIID@@YGJUHREG@@PAU_GUID@@PAG2PAH@Z
?TLSAddToMap@@YGHPAUtagSOleTlsData@@@Z
?TLSAllocData@COleTls@@AAEJXZ
?TLSGetDdeClientWindow@@YGPAXXZ
?TLSGetDdeServer@@YGPAUHWND__@@XZ
?TLSGetLogicalThread@@YGPAU_GUID@@XZ
?TLSGrowMap@@YGHXZ
?TLSIsThreadDetaching@@YGEXZ
?TLSLookupThreadId@@YGPAUtagSOleTlsData@@K@Z
?TLSRemoveFromMap@@YGXPAUtagSOleTlsData@@@Z
?Take@CDfMutex@@QAEJK@Z
?Take@CSafeSem@@QAEJXZ
?TakeOverScmRegKey@CROTItem@@QAEHPAU_SCMREGKEY@@@Z
?TakeSem@CPerContext@@QAEJK@Z
?TearDownAdviseConnection@CCacheNode@@QAEJPAUIDataObject@@@Z
?TellNtSCMWeAreReady@CSurrogateProcessActivator@@UAGJXZ
?TellRpcSCMWeAreReady@CSurrogateProcessActivator@@UAGJXZ
?TellSCMWeAreDone@CSurrogateProcessActivator@@UAGJXZ
?TellSCMWeAreInitializing@CSurrogateProcessActivator@@UAGJXZ
?TellSCMWeAreStarted@CSurrogateProcessActivator@@UAGJABU_GUID@@@Z
?TermConv@CDdeObject@@AAEJPAVDDE_CHANNEL@@H@Z
?Terminate@CDefClient@@QAEJPAUHWND__@@0@Z
?Terminate@CFileStream@@UAGJH@Z
?Terminate@CFillLockBytes@@UAGJH@Z
?TerminateNonRenameClients@CDefClient@@AAEXPAV1@@Z
?TestCancel@CAsyncCall@@UAGJXZ
?TestCancel@CChannelObject@@UAGJXZ
?TestCancel@CClientCall@@UAGJXZ
?TestCancel@CClientCallMgr@@UAGJXZ
?TestCancel@CServerCallMgr@CRpcChannelBuffer@@UAGJXZ
?TestCancel@CServerSecurity@@UAGJXZ
?TestRegistryValue@@YGJUHREG@@PBG1@Z
?ThreadCleanup@COIDTable@@SGXXZ
?ThreadCleanup@CPIDTable@@SGXXZ
?ThreadCleanup@CPSTable@@SGXH@Z
?ThreadCleanup@CRWLock@@SGXPAX@Z
?ThreadCleanup@EventPoolEntry@@SGXXZ
?ThreadCleanup@LockEntry@@SGHPAX@Z
?ThreadDispatch@@YGKPAX@Z
?ThreadInit@CRWLock@@SGPAXK@Z
?ThreadInit@EventPoolEntry@@SGHXZ
?ThreadInit@LockEntry@@SGPAXK@Z
?ThreadInvoke@@YGXPAU_RPC_MESSAGE@@@Z
?ThreadSendReceive@@YGJPAVCMessageCall@@@Z
?ThreadSignal@@YGXPAU_RPC_ASYNC_STATE@@PAXW4_RPC_ASYNC_EVENT@@@Z
?ThreadWndProc@@YGJPAUHWND__@@IIJ@Z
?Throw@@YGXK@Z
?ThrowIfError@@YGXJ@Z
?ThrowIfNull@AllocateThrow@@CGXPAX@Z
?TicksToWait@CCliModalLoop@@AAEKXZ
?ToUnicode@@YGPAGPBD@Z
?ToUnicode@@YGXPBDPAGK@Z
?ToUtf8@@YGPADPBG@Z
?ToUtf8@@YGPADPBGK@Z
?TopSymbol@CStackWalkerStack@@UAGPAUIStackWalkerSymbol@@XZ
?TrackIPIDEntry@CRefCache@@QAEXPAUtagIPIDEntry@@@Z
?TranslateAcceleratorW@CSurrogatedObjectList@@SGHPAUtagMSG@@@Z
?TranslateFormatEtcData@@YGXPAUFORMATETCDATA@@PAUFORMATETCDATA64@@@Z
?TransmitCall@@YGJPAVOXIDEntry@@PAVCMessageCall@@@Z
?TryInterfaceHelper@Interceptor@@SGJABU_GUID@@PAUIUnknown@@0PAPAXPAH@Z
?TryInterfaceHelperForOle32@Interceptor@@SGJABU_GUID@@PAUIUnknown@@0PAPAXPAH@Z
?TryReadLocks@CDFBasis@@AAEJPAVCGlobalContext@@K@Z
?TryToLoadCLB@CComCatalog@@AAEJXZ
?TryTypeLib@Interceptor@@SGJABU_GUID@@PAUIUnknown@@0PAPAX@Z
?TurnOffAllMappings@CFileStream@@QAEXXZ
?TurnOffMapping@CFileStream@@AAEJH@Z
?UIntAdd@@YGJIIPAI@Z
?UIntToUShort@@YGJIPAG@Z
?ULongAdd@@YGJKKPAK@Z
?ULongLongAdd@@YGJ_K0PA_K@Z
?ULongLongToUInt@@YGJ_KPAI@Z
?ULongLongToULong@@YGJ_KPAK@Z
?ULongPtrAdd@@YGJKKPAK@Z
?ULongSub@@YGJKKPAK@Z
?ULongToUShort@@YGJKPAG@Z
?UShortAdd@@YGJGGPAG@Z
?UShortSub@@YGJGGPAG@Z
?UnAdviseData@CDefClient@@QAEJPAUHWND__@@G@Z
?UnAdviseOn@CDdeObject@@AAEJGH@Z
?UnInit@CItemMoniker@@AAEXXZ
?UnRegisterCategories@CComCat@@UAGJKQAU_GUID@@@Z
?UnRegisterClassImplCategories@CComCat@@UAGJABU_GUID@@KQAU2@@Z
?UnRegisterClassReqCategories@CComCat@@UAGJABU_GUID@@KQAU2@@Z
?UnRegisterClassXXXCategories@CComCat@@AAEJABU_GUID@@KQAU2@PBG@Z
?UnRegisterInterface@CRIFTable@@QAEXPAUtagRIFEntry@@H@Z
?UnRegisterOleWndClass@@YGXXZ
?UnSerialize@ContextInfo@@UAGJPAX@Z
?UnSerialize@InstanceInfo@@UAGJPAX@Z
?UnSerialize@InstantiationInfo@@UAGJPAX@Z
?UnSerialize@OpaqueDataInfo@@UAGJPAX@Z
?UnSerialize@OutSerializer@ActivationPropertiesOut@@UAGJPAX@Z
?UnSerialize@ScmReplyInfo@@UAGJPAX@Z
?UnSerialize@ScmRequestInfo@@UAGJPAX@Z
?UnSerialize@SecurityInfo@@UAGJPAX@Z
?UnSerialize@ServerLocationInfo@@UAGJPAX@Z
?UnSerialize@SpecialProperties@@UAGJPAX@Z
?UnSerializeCallBack@ActivationProperties@@QAEJABU_GUID@@PAPAVSerializableProperty@@@Z
?UnSerializeCallBack@ContextInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@InstanceInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@OpaqueDataInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@ScmReplyInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@ScmRequestInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@SecurityInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@ServerLocationInfo@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?UnSerializeCallBack@SpecialProperties@@UAGJABU_GUID@@PAPAUISerializable@@@Z
?Unadvise@CAsyncConnection@@UAGJK@Z
?Unadvise@CDAHolder@@UAGJK@Z
?Unadvise@CDataAdviseCache@@QAEJPAUIDataObject@@K@Z
?Unadvise@CDefLink@@UAGJK@Z
?Unadvise@CDefObject@@UAGJK@Z
?Unadvise@COAHolder@@UAGJK@Z
?Unadvise@COleObjectImpl@CDdeObject@@UAGJK@Z
?UnbindSource@CDefLink@@UAGJXZ
?Uncache@COleCache@@UAGJK@Z
?UnchainIPIDEntries@CStdMarshal@@AAEXPAUtagIPIDEntry@@@Z
?Unfreeze@CCacheNode@@QAEJAAH@Z
?Unfreeze@CCacheViewImpl@COleCache@@UAGJK@Z
?Uninit@CSmAllocator@@QAEJXZ
?UninitCallObject@CAsyncCall@@UAEXXZ
?UninitCallObject@CClientCall@@UAEXXZ
?UninitCallObject@CMessageCall@@MAEXXZ
?UninitHookOle@@YGXXZ
?UninitMainThreadWnd@@YGXXZ
?UninitializeAccessControl@@YGXXZ
?UninitializeCatalog@@YGJXZ
?UninitializeEvent@CCtxConnectionManager@@QAEXXZ
?UninitializeSecurity@@YGXXZ
?UninitializeTracing@@YGXPBG@Z
?UniqueStringCB2@CMachineNamesHelper@@CGXPAGPAX@Z
?UniqueStringCB@CMachineNamesHelper@@CGXPAGPAX@Z
?UnlaunchApp@CDdeObject@@AAEJXZ
?UnlinkSpyNode@@YGXPAUtagInitializeSpyNode@@@Z
?Unlock@@YGJPAVCPropertySetStream@@J@Z
?Unlock@CComClassInfo@@UAGJXZ
?Unlock@CComNoClassInfo@@UAGJXZ
?Unlock@CComSxSClassInfo@@UAGJXZ
?Unlock@CExposedDocFile@@UAGJXZ
?Unlock@CExposedStream@@UAGJXZ
?Unlock@CNFFMappedStream@@UAGJXZ
?Unlock@CNFFTreeMutex@@UAGJXZ
?Unlock@CNtfsStorage@@UAGJXZ
?Unlock@CPropertySetStorage@@IAEXXZ
?Unlock@CPropertyStorage@@AAEJXZ
?Unlock@CPubMappedStream@@QAEJXZ
?Unlock@CSSMappedStream@@UAGJXZ
?Unlock@CStdWrapper@@QAEXPAVCPolicySet@@@Z
?UnlockAndRelease@CStdIdentity@@QAEKXZ
?UnlockClient@CStdMarshal@@QAEKXZ
?UnlockRegion@CExpParameterValidate@@SGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CExposedStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CFileStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CMemBytes@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CMemStm@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNdrStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNtfsStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNtfsStream@@W3AGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CSimpStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CStreamOnMessage@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@GenericStream@@UAGJT_ULARGE_INTEGER@@0K@Z
?UnlockServer@CStdMarshal@@QAEXXZ
?UnlockServerForActivation@CClassCache@@SGXXZ
?UnmangleDocfileStreamName@@YGPBGPBG@Z
?Unmap@CExposedStream@@UAGXEPAPAX@Z
?Unmap@CNFFMappedStream@@UAGXEPAPAX@Z
?Unmap@CPubMappedStream@@QAEXEPAPAX@Z
?Unmap@CSSMappedStream@@UAGXEPAPAX@Z
?Unmarshal@CDllHost@@AAEJXZ
?Unmarshal@CExposedDocFile@@SGJPAUIStream@@PAPAXK@Z
?Unmarshal@CExposedStream@@SGJPAUIStream@@PAPAXK@Z
?Unmarshal@CFileStream@@SGJPAVCGlobalFileStream@@PAPAXK@Z
?Unmarshal@CallFrame@@UAGJPAXKKPAU__MIDL_ICallFrame_0004@@PAK@Z
?Unmarshal@DISPATCH_CLIENT_FRAME@@UAGJPAXKKPAU__MIDL_ICallFrame_0004@@PAK@Z
?Unmarshal@DISPATCH_INTERCEPTOR@@UAGJKPAXKHKPAU__MIDL_ICallFrame_0004@@PAKPAPAUICallFrame@@@Z
?Unmarshal@DISPATCH_SERVER_FRAME@@UAGJPAXKKPAU__MIDL_ICallFrame_0004@@PAK@Z
?Unmarshal@Interceptor@@EAGJKPAXKHKPAU__MIDL_ICallFrame_0004@@PAKPAPAUICallFrame@@@Z
?UnmarshalAtIndex@OutSerializer@ActivationPropertiesOut@@QAEXK@Z
?UnmarshalContext@@YGJPAUSDfMarshalPacket@@PAPAVCPerContext@@KHH@Z
?UnmarshalDragDataObject@@YGPAUIDataObject@@PAX@Z
?UnmarshalEnvoy@CObjectContext@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalFromEndpointProperty@@YGJPAUHWND__@@HPAPAUIUnknown@@PAH@Z
?UnmarshalIPID@CStdMarshal@@QAEJABU_GUID@@PAUtagSTDOBJREF@@PAVOXIDEntry@@PAPAX@Z
?UnmarshalInterface@ActivationProperties@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@ActivationPropertiesIn@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CClassMoniker@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CDocfileUnmarshalFactory@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CErrorObject@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CExposedDocFile@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CExposedStream@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CFreeMarshaler@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CMarshalImplPStream@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CObjectContext@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CPointerMoniker@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CSimpStorage@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CSimpStream@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CStaticWrapper@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CStdMarshal@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@CStdWrapper@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInterface@InprocActpropsUnmarshaller@@UAGJPAUIStream@@ABU_GUID@@PAPAX@Z
?UnmarshalInternalObjRef@@YGJAAUtagOBJREF@@PAPAX@Z
?UnmarshalItfPtrs@CCtxCall@@UAGJABU_GUID@@PAPAXHH@Z
?UnmarshalObjRef@@YGJAAUtagOBJREF@@PAPAXH@Z
?UnmarshalObjRef@CStdMarshal@@QAEJAAUtagOBJREF@@PAPAX@Z
?UnmarshalParam@CallFrame@@QAEXAAU_MIDL_STUB_MESSAGE@@ABUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PAE@Z
?UnmarshalRemUnk@OXIDEntry@@AAEJABU_GUID@@PAPAX@Z
?UnmarshalSharedMemory@@YGJPAUSDfMarshalPacket@@KPAVCPerContext@@@Z
?UnmarshalSwitch@@YGJPAX@Z
?Unregister@ClassRegistration@@QAEJXZ
?UnregisterDcomInterfaces@@YGJXZ
?UnregisterForDisconnect@CStdMarshal@@SGJPAX@Z
?UnregisterUnused@CRIFTable@@QAEXXZ
?UnregisterUnusedHelper@CRIFTable@@CGHPAUSHashChain@@PAX@Z
?UnregisterUnusedInterfaces@@YGXXZ
?Unreserve@CFreeList@@QAEXI@Z
?Unreserve@CTransactedStream@@SGXIQAVCDFBasis@@@Z
?Unreserve@CWrappedDocFile@@SGXIQAVCDFBasis@@@Z
?UnsetServerPid@SpecialProperties@@UAGJXZ
?Update@CCacheNode@@QAEJPAUIDataObject@@KAAH@Z
?Update@CDdeObject@@AAEJH@Z
?Update@CDefLink@@UAGJPAUIBindCtx@@@Z
?Update@CDefLink@@UAGJXZ
?Update@CDefObject@@UAGJXZ
?Update@COleObjectImpl@CDdeObject@@UAGJXZ
?Update@HAS_INTERFACES@@QBEXAAJ@Z
?UpdateActivationSettings@CRpcResolver@@QAEXXZ
?UpdateAddrExclusionList@CAddrControl@@UAGJPAUIUnknown@@@Z
?UpdateAdviseCounts@CDdeObject@@AAEJGHH@Z
?UpdateAutoOnSave@CDefLink@@AAEXXZ
?UpdateCOMPlusEnabled@@YGXXZ
?UpdateCache@COleCache@@UAGJPAUIDataObject@@KPAX@Z
?UpdateCacheNodeForNative@COleCache@@AAEPAVCCacheNode@@XZ
?UpdateCachedLocalMIDEntries@COXIDTable@@QAEJXZ
?UpdateClsid@@YGXPAU_GUID@@@Z
?UpdateCopy@CRpcChannelBuffer@@QAEXPAV1@@Z
?UpdateMIDEntry@OXIDEntry@@QAEPAVMIDEntry@@PAV2@@Z
?UpdateMksFromAbs@CDefLink@@AAEJPAUIMoniker@@0@Z
?UpdateReaderEventState@EventPoolEntry@@SGKPCKKAAH@Z
?UpdateRelMkFromAbsMk@CDefLink@@AAEXPAUIMoniker@@@Z
?UpdateResultsArray@@YGJJKPAUtagMULTI_QI@@@Z
?UpdateTarget@CDragOperation@@QAEHXZ
?UpdateUserClassID@CDefLink@@AAEXXZ
?UpdateWriterEventState@EventPoolEntry@@SGHPCKH@Z
?UpgradeToWriterLock@CRWLock@@QAIKPAULockCookie@@PAHK@Z
?UseWin31DragDrop@@YGHPAUIDataObject@@@Z
?Ut10NativeStmToContentsStm@@YGJPAUIStorage@@ABU_GUID@@H@Z
?UtCompareFormatEtc@@YGHPAUtagFORMATETC@@0@Z
?UtCompareTargetDevice@@YGHPAUtagDVTARGETDEVICE@@0@Z
?UtContentsStmTo10NativeStm@@YGJPAUIStorage@@ABU_GUID@@HPAI@Z
?UtConvertBitmapToDib@@YGPAXPAUHBITMAP__@@PAUHPALETTE__@@@Z
?UtConvertDibToBitmap@@YGPAUHBITMAP__@@PAX@Z
?UtCopyFormatEtc@@YGHPAUtagFORMATETC@@0@Z
?UtCopyStatData@@YGHPAUtagSTATDATA@@0@Z
?UtCopyTargetDevice@@YGPAUtagDVTARGETDEVICE@@PAU1@@Z
?UtCreateStorageOnHGlobal@@YGJPAXHPAPAUIStorage@@PAPAUILockBytes@@@Z
?UtDIBFileStmToPBrushNativeStm@@YGJPAUIStream@@0@Z
?UtDIBStmToDIBFileStm@@YGJPAUIStream@@K0@Z
?UtDupGlobal@@YGPAXPAXI@Z
?UtDupPalette@@YGPAUHPALETTE__@@PAU1@@Z
?UtDupPtr@@YGPAXPAXK@Z
?UtDupString@@YGPAGPBG@Z
?UtDupStringA@@YGPADPBD@Z
?UtFormatToTymed@@YGKG@Z
?UtGetClassID@@YGHPAUIUnknown@@PAU_GUID@@@Z
?UtGetDibExtents@@YGXPAUtagBITMAPINFOHEADER@@PAJ1@Z
?UtGetHDIBFromDIBFileStm@@YGJPAUIStream@@PAPAX@Z
?UtGetHEMFFromContentsStm@@YGXPAUIStream@@PAPAX@Z
?UtGetHEMFFromEMFStm@@YGJPAUIStream@@PAKPAPAUHENHMETAFILE__@@@Z
?UtGetHGLOBALFromStm@@YGJPAUIStream@@KPAPAX@Z
?UtGetHMFFromMFStm@@YGJPAUIStream@@KHPAPAX@Z
?UtGetHMFPICT@@YGPAXPAUHMETAFILE__@@HKK@Z
?UtGetHMFPICTFromMSDrawNativeStm@@YGJPAUIStream@@KPAPAX@Z
?UtGetHMFPICTFromPlaceableMFStm@@YGJPAUIStream@@PAPAX@Z
?UtGetHPRESFromNative@@YGPAXPAUIStorage@@PAUIStream@@GH@Z
?UtGetIconData@@YGJPAUIDataObject@@ABU_GUID@@PAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?UtGetPresStreamName@@YGXPAGH@Z
?UtGetSizeAndExtentsFromPlaceableMFStm@@YGJPAUIStream@@PAKPAJ2@Z
?UtGetTempFileName@@YGJPAG0@Z
?UtGetUNICODEData@@YGJKPADPAGPAPAG@Z
?UtHDIBFileToOlePresStm@@YGJPAXPAUIStream@@@Z
?UtHDIBToDIBFileStm@@YGJPAXKPAUIStream@@@Z
?UtHEMFToEMFStm@@YGJPAUHENHMETAFILE__@@KPAUIStream@@W4tagEMFWRITETYPE@@@Z
?UtHGLOBALtoFile@@YGJPAXKPBG@Z
?UtHGLOBALtoHGLOBAL@@YGJPAXK0@Z
?UtHGLOBALtoStm@@YGJPAXKPAUIStream@@@Z
?UtHGLOBALtoStorage@@YGJPAXPAUIStorage@@@Z
?UtHMFToMFStm@@YGJPAPAXKPAUIStream@@@Z
?UtHMFToPlaceableMFStm@@YGJPAPAXKJJPAUIStream@@@Z
?UtIsFormatSupported@@YGHPAUIDataObject@@KG@Z
?UtMFStmToPlaceableMFStm@@YGJPAUIStream@@KJJ0@Z
?UtOlePresStmToContentsStm@@YGJPAUIStorage@@PAGHPAI@Z
?UtOlePresStmToContentsStm@@YGJPAUIStorage@@PAGPAUIStream@@PAI@Z
?UtPaletteSize@@YGIPAUtagBITMAPINFOHEADER@@@Z
?UtPlaceableMFStmToMSDrawNativeStm@@YGJPAUIStream@@0@Z
?UtPutUNICODEData@@YGJKPAGPAPADPAPAGPAK@Z
?UtQueryPictFormat@@YGHPAUIDataObject@@PAUtagFORMATETC@@@Z
?UtReadOlePresStmHeader@@YGJPAUIStream@@PAUtagFORMATETC@@PAKPAH@Z
?UtReleaseStatData@@YGXPAUtagSTATDATA@@@Z
?UtRemoveExtraOlePresStreams@@YGXPAUIStorage@@H@Z
?UtWriteOlePresStmHeader@@YGJPAUIStream@@PAUtagFORMATETC@@K@Z
?UtilQueryProtocol@@YGHGPAG@Z
?ValidSig@CROTItem@@QAEHGH@Z
?Validate@CDocfileUnmarshalFactory@@QBEJXZ
?Validate@CExposedDocFile@@QBEJXZ
?Validate@CExposedIterator@@QBEJXZ
?Validate@CExposedStream@@QBEJXZ
?Validate@CMSFHeader@@QBEJXZ
?Validate@CPropertyStorage@@AAEJXZ
?Validate@CPubDocFile@@SGJPAV1@@Z
?ValidateAccessCheckClient@@YGJPAU_TRUSTEE_W@@@Z
?ValidateAndFixStreamACL@@YGJPAUtagSTREAM_ACL@@PAK1@Z
?ValidateAndRemapParams@@YGJABU_GUID@@AAKPAU_COSERVERINFO@@KPAUtagMULTI_QI@@@Z
?ValidateAndTransformAccReqList@@YGJPAU_ACTRL_ALISTW@@PAPAUtagSTREAM_ACE@@PAPAXPAK33@Z
?ValidateAnsiPath@CFileMoniker@@QAEJXZ
?ValidateCoServerInfo@@YGJPAU_COSERVERINFO@@@Z
?ValidateContext@CStdWrapper@@QAEJPAVCObjectContext@@PAVIFaceEntry@@PAPAVCtxEntry@@@Z
?ValidateContext@IFaceEntry@@QAEPAVCtxEntry@@PAVCObjectContext@@PAVCPolicySet@@@Z
?ValidateDIFat@CSimpStorageOpen@@QAEJPAKKK@Z
?ValidateDirectory@CSimpStorageOpen@@QAEJPAEK@Z
?ValidateFat@CSimpStorageOpen@@QAEJPAKK@Z
?ValidateGetBufferSize@CUserMarshalInfo@@QAEKXZ
?ValidateGrfAttrs@@YGJKK@Z
?ValidateGrfMode@@YGJKH@Z
?ValidateHeader@CSimpStorageOpen@@QAEJAAVCMSFHeader@@@Z
?ValidateInRGLPOLESTR@@YGJKQBQBG@Z
?ValidateInRGPROPVARIANT@@YGJKQBUtagPROPVARIANT@@@Z
?ValidateMarshalFlags@@YGJKPAXK@Z
?ValidateMarshalParams@@YGJPAUIStream@@PAUIUnknown@@KPAXK@Z
?ValidateNameW@@YGJPBGI@Z
?ValidateObjRef@@YGJPAUtagInterfaceData@@K@Z
?ValidateObjRefExtension@@YGJPAUtagInterfaceData@@KKAAUtagOBJREF@@@Z
?ValidateOutRGLPOLESTR@@YGJKQAPAG@Z
?ValidateOutRGPROPVARIANT@@YGJKQAUtagPROPVARIANT@@@Z
?ValidateRGPROPID@CPropertyStorage@@AAEJKQBK@Z
?ValidateRGPROPSPEC@CPropertyStorage@@AAEJKQBUtagPROPSPEC@@@Z
?ValidateRef@CPropertyStorage@@AAEJXZ
?ValidateSNB@@YGJPAPAG@Z
?ValidateSecurityDescriptor@@YGJPAX@Z
?ValidateSrvrClass@@YGHPAG0@Z
?ValidateStgOptions@@YGJPAUtagSTGOPTIONS@@KH@Z
?ValidateTrustee@@YGJPAU_TRUSTEE_W@@@Z
?ValidateTrusteeString@@YGJPAG@Z
?ValidateVTs@CPropertyStorage@@AAEJKQBUtagPROPVARIANT@@@Z
?ValidateWriteAccess@CExposedDocFile@@AAEJXZ
?ValidateWriteAccess@CExposedStream@@AAEJXZ
?VariantClear@OAUTIL@@QAEJPAUtagVARIANT@@H@Z
?VariantCopy@OAUTIL@@QAEJPAUtagVARIANT@@0H@Z
?VariantToProperty_Worker@@YGPAUtagSERIALIZEDPROPERTYVALUE@@PBUtagPROPVARIANT@@GPAU1@PAKKEE2PAGPAJ@Z
?VerifyAuthIdentity@@YGJPAU_COAUTHIDENTITY@@@Z
?VerifyCallerIsClipboardOwner@@YGPAUHWND__@@XZ
?VerifyDVTARGETDEVICE16@@YGJPBUtagDVTARGETDEVICE@@@Z
?VerifyExtent@@YGPAXPAUSHookList@@PAUWireExtentArray@@KPAPAUWireExtent@@K@Z
?VerifyIid@@YGJABU_GUID@@0@Z
?VerifyInterface@CClientCallMgr@@QAEJPAUIUnknown@@@Z
?VerifyLockType@@YGJK@Z
?VerifyMatchingSecret@CProcessSecret@@QAEJU_GUID@@@Z
?VerifyMoveFlags@@YGJK@Z
?VerifyPerms@@YGJKH@Z
?VerifyStatFlag@@YGJK@Z
?VerifyStructFromHGlobal@@YGJGPAX@Z
?VerifyThreadId@CThreadCheck@@QAEHXZ
?WOWMsgArrived@CAsyncCall@@UAEJXZ
?WOWMsgArrived@CClientCall@@UAEJXZ
?Wait@CBindStatusCallback@@UAGJKK@Z
?Wait@CClientCallMgr@@UAGJKK@Z
?Wait@CManualResetEvent@@UAGJKK@Z
?Wait@CServerCallMgr@CRpcChannelBuffer@@UAGJKK@Z
?Wait@CStdEvent@@UAGJKK@Z
?Wait@EVENT@@QAEJK@Z
?WaitForAccess@@YGJPAUILockBytes@@KPAK@Z
?WaitForAccess@CComApartment@@AAEJXZ
?WaitForApartmentShutdown@OXIDEntry@@QAEXXZ
?WaitForInitCompleted@CSurrogateProcessActivator@@UAGJKK@Z
?WaitForNTServiceIfNecessary@CSurrogateProcessActivator@@UAGJXZ
?WaitForPendingAsyncSends@@YGXXZ
?WaitForReaderEvent@EventPoolEntry@@QAEKKAAHPAVCRWLock@@@Z
?WaitForSurrogateTimeout@CSurrogateProcessActivator@@UAGJXZ
?WaitForWriteAccess@CDFBasis@@QAEJKPAVCGlobalContext@@@Z
?WaitForWriteAccess@CExposedDocFile@@UAGJK@Z
?WaitForWriterEvent@EventPoolEntry@@QAEKKAAHPAVCRWLock@@@Z
?WaitMultiple@CSynchronizeContainer@@UAGJKKPAPAUISynchronize@@@Z
?WaitObject@@YGJPAUIUnknown@@KK@Z
?WaitOnEvent@CCtxConnectionManager@@QAEKK@Z
?WakeUpWowClient@@YGXPAVCMessageCall@@@Z
?Walk@OAUTIL@@AAEJPAUtagSAFEARRAY@@PAUIRecordInfo@@KPAXPAPAX@Z
?Walk@OAUTIL@@AAEJPAUtagSAFEARRAY@@PAX@Z
?Walk@OAUTIL@@QAEJKPAUtagDISPPARAMS@@@Z
?Walk@OAUTIL@@QAEJPAUtagSAFEARRAY@@@Z
?Walk@OAUTIL@@QAEJPAUtagVARIANT@@@Z
?WalkConformantArrayPriv@CallFrame@@QAEXPAEPBE@Z
?WalkEmbeddedPointers@CallFrame@@QAEXPAEPBE@Z
?WalkEmbeddedRepeatPointers@CallFrame@@QAEPBEPAEPBE@Z
?WalkFrame@CallFrame@@UAGJKPAUICallFrameWalker@@@Z
?WalkFrame@DISPATCH_FRAME@@UAGJKPAUICallFrameWalker@@@Z
?WalkInterface@OAUTIL@@QAEJABU_GUID@@PAPAX@Z
?WalkInterface@OAUTIL@@QAEJABU_GUID@@PAPAXPAUICallFrameWalker@@@Z
?WalkRecord@OAUTIL@@AAEJPAXPAUIRecordInfo@@@Z
?WalkRecord@OAUTIL@@AAEJPAXPAUITypeInfo@@@Z
?WalkRecordField@OAUTIL@@AAEJPAEPAUtagTYPEDESC@@PAUITypeInfo@@@Z
?WalkThroughAlias@@YGJPAPAUITypeInfo@@PAPAUtagTYPEATTR@@@Z
?WalkWorker@CallFrame@@QAEXPAEPBE@Z
?WdtpGlobalUnmarshal@@YGPAEPAKPAEPAPAXHK@Z
?WdtpInterfacePointer_UserUnmarshalWorker@@YGPAEPAU_USER_MARSHAL_CB@@PAEPAPAUIUnknown@@ABU_GUID@@KH@Z
?WdtpRemotableHandle_UserMarshal@@YGPAEPAKPAEPAJ@Z
?WdtpRemotableHandle_UserSize@@YGKPAKKPAJ@Z
?WdtpRemotableHandle_UserUnmarshal@@YGPAEPAKPAEPAJ@Z
?WeOwn@CallFrame@@QAEHPAX@Z
?Win32ErrorToScode@@YGJK@Z
?Worker@DeserializeHelper@@QAEJPBUtagSERIALIZEDPROPERTYVALUE@@KHHHPAUtagPROPVARIANT@@PAK@Z
?WorkerLoop@CRpcThread@@QAEXXZ
?WorkerThread@CDllHost@@AAEJXZ
?WorkerThreadLoop@CROIDTable@@CGKPAX@Z
?WrapInterfaceForContext@CStdWrapper@@QAEJPAVCObjectContext@@PAUIUnknown@@ABU_GUID@@PAPAX@Z
?WrapperMarshalObject@@YGJPAUIStream@@ABU_GUID@@PAUIUnknown@@KPAXK@Z
?Write@CExpParameterValidate@@SGJPBXKPAK@Z
?Write@CExposedStream@@UAGJPBXKPAK@Z
?Write@CMemStm@@UAGJPBXKPAK@Z
?Write@CNFFMappedStream@@QAEXPBXKPAK@Z
?Write@CNdrStream@@UAGJPBXKPAK@Z
?Write@CNtfsStream@@UAGJPBXKPAK@Z
?Write@CPropertyBagEx@@UAGJPBGPAUtagVARIANT@@@Z
?Write@CPubMappedStream@@QAEJXZ
?Write@CSSMappedStream@@IAEJXZ
?Write@CSafeAccess@@QAEXPAVCDFBasis@@@Z
?Write@CSimpStream@@UAGJPBXKPAK@Z
?Write@CSimpStreamOpen@@UAGJPBXKPAK@Z
?Write@CStmBufWrite@@QAEJPBXK@Z
?Write@CStreamOnMessage@@UAGJPBXKPAK@Z
?Write@GenericStream@@UAGJPBXKPAK@Z
?Write@Serializer@@QAEJPAEK@Z
?WriteAnsiStringStream@@YGJPAUIStream@@PADK@Z
?WriteAt@CDirectStream@@QAEJ_KPBXKPAK@Z
?WriteAt@CExpParameterValidate@@SGJT_ULARGE_INTEGER@@PBXKPAK@Z
?WriteAt@CFileStream@@UAGJT_ULARGE_INTEGER@@PBXKPAK@Z
?WriteAt@CFillLockBytes@@UAGJT_ULARGE_INTEGER@@PBXKPAK@Z
?WriteAt@CMemBytes@@UAGJT_ULARGE_INTEGER@@PBXKPAK@Z
?WriteAt@CNtfsStream@@UAGJT_ULARGE_INTEGER@@PBXKPAK@Z
?WriteAt@CPubStream@@QAEJ_KPBXKPAK@Z
?WriteAt@CTransactedStream@@QAEJ_KPBXKPAK@Z
?WriteAt@PSStream@@QAEJ_KPBXKPAK@Z
?WriteAtWorker@CFileStream@@AAEJT_ULARGE_INTEGER@@PBXKPAK@Z
?WriteCompObjStm@@YGJPAUIStorage@@PAVCompObjStmData@@@Z
?WriteControlStream@CNtfsStorage@@IAEJXZ
?WriteCustomObjrefHeaderToStream@@YGJABU_GUID@@0KPAUIStream@@@Z
?WriteDoubleString@@YGJPAUIStream@@PAGGPADG@Z
?WriteEntry@CEffPermsCacheLUID@@QAEHU_LUID@@K@Z
?WriteLong@CStmBufWrite@@QAEJJ@Z
?WriteMap@CDeltaList@@AAEJPAKKK@Z
?WriteMappedStream@CNFFMappedStream@@AAEJXZ
?WriteMultiple@CPropertyBagEx@@UAGJKQBQBGQBUtagPROPVARIANT@@@Z
?WriteMultiple@CPropertyStorage@@UAGJKQBUtagPROPSPEC@@QBUtagPROPVARIANT@@K@Z
?WriteObjRef@@YGJPAUIStream@@AAUtagOBJREF@@K@Z
?WriteObjects@CPropertyBagEx@@AAEJKQBUtagPROPSPEC@@QBUtagPROPVARIANT@@@Z
?WriteOneObject@CPropertyBagEx@@AAEJPBUtagPROPSPEC@@PBUtagPROPVARIANT@@@Z
?WritePropertyNames@CPropertyStorage@@UAGJKQBKQBQAG@Z
?WriteStringStreamA@@YGJAAVCStmBufWrite@@PBD@Z
?_CompactChunk@CPropertySetStream@@AAEXPBUCStreamChunk@@JK@Z
?_CompactStream@CPropertySetStream@@AAEXPBVCStreamChunkList@@@Z
?_ComparePropertyNames@CPropertySetStream@@ABEEPBX0HKPAJ@Z
?_ComputeMinimumSize@CPropertySetStream@@AAEKKPAJ@Z
?_CountFreePropertyOffsets@CPropertySetStream@@AAEKPAJ@Z
?_Create@CPropertySetStream@@AAEXPBU_GUID@@0KGW4tagLOADSTATE@@KPAJ@Z
?_CreateLogger@CDebugEventFire@@UAEXXZ
?_CreateLogger@COle32DebugEventFire@@UAEXXZ
?_CreateUserDefinedSection@CPropertySetStream@@AAEEW4tagLOADSTATE@@KPAJ@Z
?_DeleteMovePropertyOffsets@CPropertySetStream@@AAEXPBUtagPROPERTY_INFORMATION@@KPAJ@Z
?_DestroyLogger@CDebugEventFire@@UAEXXZ
?_DestroyLogger@COle32DebugEventFire@@UAEXXZ
?_DictionaryEntryLength@CPropertySetStream@@ABEKPBUtagENTRY@@@Z
?_DictionaryLength@CPropertySetStream@@ABEKPBUtagDICTIONARY@@KPAJ@Z
?_Find@CContextList@@QAEPAVCContext@@K@Z
?_FixDocPartsElements@CPropertySetStream@@AAEEW4tagPATCHOP@@KPAXPBXPAK@Z
?_FixDocPartsVector@CPropertySetStream@@AAEEW4tagPATCHOP@@PAUtagSERIALIZEDPROPERTYVALUE@@PAK@Z
?_FixHeadingPairElements@CPropertySetStream@@AAEEW4tagPATCHOP@@KPAUtagSERIALIZEDPROPERTYVALUE@@PBU3@PAK@Z
?_FixHeadingPairVector@CPropertySetStream@@AAEEW4tagPATCHOP@@PAUtagSERIALIZEDPROPERTYVALUE@@PAK@Z
?_FixPackedPropertySet@CPropertySetStream@@AAEXPAJ@Z
?_FixSummaryInformation@CPropertySetStream@@AAEXPAKPAJ@Z
?_FixUnalignedUDPropSet@CPropertySetStream@@AAEXPAKPAJ@Z
?_GetAndValidateSectionHeader@CPropertySetStream@@AAEJPAPAUtagPROPERTYSECTIONHEADER@@@Z
?_GetHead@CContextList@@QBEPAVCContext@@XZ
?_GetNewOffset@CPropertySetStream@@ABEKPBVCStreamChunkList@@K@Z
?_GetNext@CDlElement@@QBEPAV1@XZ
?_GetPrev@CDlElement@@QBEPAV1@XZ
?_GetSectionHeader@CPropertySetStream@@AAEPAUtagPROPERTYSECTIONHEADER@@KPAJ@Z
?_InitSection@CPropertySetStream@@AAEXPAUtagFORMATIDOFFSET@@KH@Z
?_InsertMovePropertyOffsets@CPropertySetStream@@AAEXPBUtagPROPERTY_INFORMATION@@KKKPAJ@Z
?_IsLocalizationSettable@CPropertySetStream@@AAEEPAJ@Z
?_LoadHeader@CPropertySetStream@@AAE?AW4tagLOADSTATE@@PBU_GUID@@EPAJ@Z
?_LoadProperty@CPropertySetStream@@AAEPAUtagSERIALIZEDPROPERTYVALUE@@KPAKPAJ@Z
?_LoadPropertyOffsetPointers@CPropertySetStream@@AAEPAUtagPROPERTYSECTIONHEADER@@PAPAUtagPROPERTYIDOFFSET@@0PAJ@Z
?_LocalAlloc@@YGPAXI@Z
?_LocalFree@@YGXPAX@Z
?_MultiByteToWideChar@CPropertySetStream@@AAEXPBDKGPAPAGPAKPAJ@Z
?_PatchSectionOffsets@CPropertySetStream@@AAEXJ@Z
?_PropMoveMemory@@YGXPAXPBXK@Z
?_PropertyNameLength@CPropertySetStream@@ABEGPBXPAK@Z
?_SearchForCodePage@CPropertySetStream@@AAEXPAJ@Z
?_SetModified@CPropertySetStream@@AAEXPAJ@Z
?_UpdatePropertyOffsets@CPropertySetStream@@AAEXPBVCStreamChunkList@@PAJ@Z
?_ValidatePropertyOffsets@CPropertySetStream@@AAEJPAUtagPROPERTYSECTIONHEADER@@PAUtagPROPERTYIDOFFSET@@1@Z
?_WideCharToMultiByte@CPropertySetStream@@AAEXPBGKGPAPADPAKPAJ@Z
?_WinSqmDWORDEvent@@YGXPBU_EVENT_DESCRIPTOR@@PAU_GUID@@KK@Z
?_WriteMultiple@CPropertyStorage@@AAEJKQBUtagPROPSPEC@@QBUtagPROPVARIANT@@K@Z
?_WritePropertyNames@CPropertyStorage@@AAEJKQBKQBQAG@Z
?__Interceptor_meth1000@@YAJQAXZZ
?__Interceptor_meth1001@@YAJQAXZZ
?__Interceptor_meth1002@@YAJQAXZZ
?__Interceptor_meth1003@@YAJQAXZZ
?__Interceptor_meth1004@@YAJQAXZZ
?__Interceptor_meth1005@@YAJQAXZZ
?__Interceptor_meth1006@@YAJQAXZZ
?__Interceptor_meth1007@@YAJQAXZZ
?__Interceptor_meth1008@@YAJQAXZZ
?__Interceptor_meth1009@@YAJQAXZZ
?__Interceptor_meth100@@YAJQAXZZ
?__Interceptor_meth1010@@YAJQAXZZ
?__Interceptor_meth1011@@YAJQAXZZ
?__Interceptor_meth1012@@YAJQAXZZ
?__Interceptor_meth1013@@YAJQAXZZ
?__Interceptor_meth1014@@YAJQAXZZ
?__Interceptor_meth1015@@YAJQAXZZ
?__Interceptor_meth1016@@YAJQAXZZ
?__Interceptor_meth1017@@YAJQAXZZ
?__Interceptor_meth1018@@YAJQAXZZ
?__Interceptor_meth1019@@YAJQAXZZ
?__Interceptor_meth101@@YAJQAXZZ
?__Interceptor_meth1020@@YAJQAXZZ
?__Interceptor_meth1021@@YAJQAXZZ
?__Interceptor_meth1022@@YAJQAXZZ
?__Interceptor_meth1023@@YAJQAXZZ
?__Interceptor_meth102@@YAJQAXZZ
?__Interceptor_meth103@@YAJQAXZZ
?__Interceptor_meth104@@YAJQAXZZ
?__Interceptor_meth105@@YAJQAXZZ
?__Interceptor_meth106@@YAJQAXZZ
?__Interceptor_meth107@@YAJQAXZZ
?__Interceptor_meth108@@YAJQAXZZ
?__Interceptor_meth109@@YAJQAXZZ
?__Interceptor_meth10@@YAJQAXZZ
?__Interceptor_meth110@@YAJQAXZZ
?__Interceptor_meth111@@YAJQAXZZ
?__Interceptor_meth112@@YAJQAXZZ
?__Interceptor_meth113@@YAJQAXZZ
?__Interceptor_meth114@@YAJQAXZZ
?__Interceptor_meth115@@YAJQAXZZ
?__Interceptor_meth116@@YAJQAXZZ
?__Interceptor_meth117@@YAJQAXZZ
?__Interceptor_meth118@@YAJQAXZZ
?__Interceptor_meth119@@YAJQAXZZ
?__Interceptor_meth11@@YAJQAXZZ
?__Interceptor_meth120@@YAJQAXZZ
?__Interceptor_meth121@@YAJQAXZZ
?__Interceptor_meth122@@YAJQAXZZ
?__Interceptor_meth123@@YAJQAXZZ
?__Interceptor_meth124@@YAJQAXZZ
?__Interceptor_meth125@@YAJQAXZZ
?__Interceptor_meth126@@YAJQAXZZ
?__Interceptor_meth127@@YAJQAXZZ
?__Interceptor_meth128@@YAJQAXZZ
?__Interceptor_meth129@@YAJQAXZZ
?__Interceptor_meth12@@YAJQAXZZ
?__Interceptor_meth130@@YAJQAXZZ
?__Interceptor_meth131@@YAJQAXZZ
?__Interceptor_meth132@@YAJQAXZZ
?__Interceptor_meth133@@YAJQAXZZ
?__Interceptor_meth134@@YAJQAXZZ
?__Interceptor_meth135@@YAJQAXZZ
?__Interceptor_meth136@@YAJQAXZZ
?__Interceptor_meth137@@YAJQAXZZ
?__Interceptor_meth138@@YAJQAXZZ
?__Interceptor_meth139@@YAJQAXZZ
?__Interceptor_meth13@@YAJQAXZZ
?__Interceptor_meth140@@YAJQAXZZ
?__Interceptor_meth141@@YAJQAXZZ
?__Interceptor_meth142@@YAJQAXZZ
?__Interceptor_meth143@@YAJQAXZZ
?__Interceptor_meth144@@YAJQAXZZ
?__Interceptor_meth145@@YAJQAXZZ
?__Interceptor_meth146@@YAJQAXZZ
?__Interceptor_meth147@@YAJQAXZZ
?__Interceptor_meth148@@YAJQAXZZ
?__Interceptor_meth149@@YAJQAXZZ
?__Interceptor_meth14@@YAJQAXZZ
?__Interceptor_meth150@@YAJQAXZZ
?__Interceptor_meth151@@YAJQAXZZ
?__Interceptor_meth152@@YAJQAXZZ
?__Interceptor_meth153@@YAJQAXZZ
?__Interceptor_meth154@@YAJQAXZZ
?__Interceptor_meth155@@YAJQAXZZ
?__Interceptor_meth156@@YAJQAXZZ
?__Interceptor_meth157@@YAJQAXZZ
?__Interceptor_meth158@@YAJQAXZZ
?__Interceptor_meth159@@YAJQAXZZ
?__Interceptor_meth15@@YAJQAXZZ
?__Interceptor_meth160@@YAJQAXZZ
?__Interceptor_meth161@@YAJQAXZZ
?__Interceptor_meth162@@YAJQAXZZ
?__Interceptor_meth163@@YAJQAXZZ
?__Interceptor_meth164@@YAJQAXZZ
?__Interceptor_meth165@@YAJQAXZZ
?__Interceptor_meth166@@YAJQAXZZ
?__Interceptor_meth167@@YAJQAXZZ
?__Interceptor_meth168@@YAJQAXZZ
?__Interceptor_meth169@@YAJQAXZZ
?__Interceptor_meth16@@YAJQAXZZ
?__Interceptor_meth170@@YAJQAXZZ
?__Interceptor_meth171@@YAJQAXZZ
?__Interceptor_meth172@@YAJQAXZZ
?__Interceptor_meth173@@YAJQAXZZ
?__Interceptor_meth174@@YAJQAXZZ
?__Interceptor_meth175@@YAJQAXZZ
?__Interceptor_meth176@@YAJQAXZZ
?__Interceptor_meth177@@YAJQAXZZ
?__Interceptor_meth178@@YAJQAXZZ
?__Interceptor_meth179@@YAJQAXZZ
?__Interceptor_meth17@@YAJQAXZZ
?__Interceptor_meth180@@YAJQAXZZ
?__Interceptor_meth181@@YAJQAXZZ
?__Interceptor_meth182@@YAJQAXZZ
?__Interceptor_meth183@@YAJQAXZZ
?__Interceptor_meth184@@YAJQAXZZ
?__Interceptor_meth185@@YAJQAXZZ
?__Interceptor_meth186@@YAJQAXZZ
?__Interceptor_meth187@@YAJQAXZZ
?__Interceptor_meth188@@YAJQAXZZ
?__Interceptor_meth189@@YAJQAXZZ
?__Interceptor_meth18@@YAJQAXZZ
?__Interceptor_meth190@@YAJQAXZZ
?__Interceptor_meth191@@YAJQAXZZ
?__Interceptor_meth192@@YAJQAXZZ
?__Interceptor_meth193@@YAJQAXZZ
?__Interceptor_meth194@@YAJQAXZZ
?__Interceptor_meth195@@YAJQAXZZ
?__Interceptor_meth196@@YAJQAXZZ
?__Interceptor_meth197@@YAJQAXZZ
?__Interceptor_meth198@@YAJQAXZZ
?__Interceptor_meth199@@YAJQAXZZ
?__Interceptor_meth19@@YAJQAXZZ
?__Interceptor_meth200@@YAJQAXZZ
?__Interceptor_meth201@@YAJQAXZZ
?__Interceptor_meth202@@YAJQAXZZ
?__Interceptor_meth203@@YAJQAXZZ
?__Interceptor_meth204@@YAJQAXZZ
?__Interceptor_meth205@@YAJQAXZZ
?__Interceptor_meth206@@YAJQAXZZ
?__Interceptor_meth207@@YAJQAXZZ
?__Interceptor_meth208@@YAJQAXZZ
?__Interceptor_meth209@@YAJQAXZZ
?__Interceptor_meth20@@YAJQAXZZ
?__Interceptor_meth210@@YAJQAXZZ
?__Interceptor_meth211@@YAJQAXZZ
?__Interceptor_meth212@@YAJQAXZZ
?__Interceptor_meth213@@YAJQAXZZ
?__Interceptor_meth214@@YAJQAXZZ
?__Interceptor_meth215@@YAJQAXZZ
?__Interceptor_meth216@@YAJQAXZZ
?__Interceptor_meth217@@YAJQAXZZ
?__Interceptor_meth218@@YAJQAXZZ
?__Interceptor_meth219@@YAJQAXZZ
?__Interceptor_meth21@@YAJQAXZZ
?__Interceptor_meth220@@YAJQAXZZ
?__Interceptor_meth221@@YAJQAXZZ
?__Interceptor_meth222@@YAJQAXZZ
?__Interceptor_meth223@@YAJQAXZZ
?__Interceptor_meth224@@YAJQAXZZ
?__Interceptor_meth225@@YAJQAXZZ
?__Interceptor_meth226@@YAJQAXZZ
?__Interceptor_meth227@@YAJQAXZZ
?__Interceptor_meth228@@YAJQAXZZ
?__Interceptor_meth229@@YAJQAXZZ
?__Interceptor_meth22@@YAJQAXZZ
?__Interceptor_meth230@@YAJQAXZZ
?__Interceptor_meth231@@YAJQAXZZ
?__Interceptor_meth232@@YAJQAXZZ
?__Interceptor_meth233@@YAJQAXZZ
?__Interceptor_meth234@@YAJQAXZZ
?__Interceptor_meth235@@YAJQAXZZ
?__Interceptor_meth236@@YAJQAXZZ
?__Interceptor_meth237@@YAJQAXZZ
?__Interceptor_meth238@@YAJQAXZZ
?__Interceptor_meth239@@YAJQAXZZ
?__Interceptor_meth23@@YAJQAXZZ
?__Interceptor_meth240@@YAJQAXZZ
?__Interceptor_meth241@@YAJQAXZZ
?__Interceptor_meth242@@YAJQAXZZ
?__Interceptor_meth243@@YAJQAXZZ
?__Interceptor_meth244@@YAJQAXZZ
?__Interceptor_meth245@@YAJQAXZZ
?__Interceptor_meth246@@YAJQAXZZ
?__Interceptor_meth247@@YAJQAXZZ
?__Interceptor_meth248@@YAJQAXZZ
?__Interceptor_meth249@@YAJQAXZZ
?__Interceptor_meth24@@YAJQAXZZ
?__Interceptor_meth250@@YAJQAXZZ
?__Interceptor_meth251@@YAJQAXZZ
?__Interceptor_meth252@@YAJQAXZZ
?__Interceptor_meth253@@YAJQAXZZ
?__Interceptor_meth254@@YAJQAXZZ
?__Interceptor_meth255@@YAJQAXZZ
?__Interceptor_meth256@@YAJQAXZZ
?__Interceptor_meth257@@YAJQAXZZ
?__Interceptor_meth258@@YAJQAXZZ
?__Interceptor_meth259@@YAJQAXZZ
?__Interceptor_meth25@@YAJQAXZZ
?__Interceptor_meth260@@YAJQAXZZ
?__Interceptor_meth261@@YAJQAXZZ
?__Interceptor_meth262@@YAJQAXZZ
?__Interceptor_meth263@@YAJQAXZZ
?__Interceptor_meth264@@YAJQAXZZ
?__Interceptor_meth265@@YAJQAXZZ
?__Interceptor_meth266@@YAJQAXZZ
?__Interceptor_meth267@@YAJQAXZZ
?__Interceptor_meth268@@YAJQAXZZ
?__Interceptor_meth269@@YAJQAXZZ
?__Interceptor_meth26@@YAJQAXZZ
?__Interceptor_meth270@@YAJQAXZZ
?__Interceptor_meth271@@YAJQAXZZ
?__Interceptor_meth272@@YAJQAXZZ
?__Interceptor_meth273@@YAJQAXZZ
?__Interceptor_meth274@@YAJQAXZZ
?__Interceptor_meth275@@YAJQAXZZ
?__Interceptor_meth276@@YAJQAXZZ
?__Interceptor_meth277@@YAJQAXZZ
?__Interceptor_meth278@@YAJQAXZZ
?__Interceptor_meth279@@YAJQAXZZ
?__Interceptor_meth27@@YAJQAXZZ
?__Interceptor_meth280@@YAJQAXZZ
?__Interceptor_meth281@@YAJQAXZZ
?__Interceptor_meth282@@YAJQAXZZ
?__Interceptor_meth283@@YAJQAXZZ
?__Interceptor_meth284@@YAJQAXZZ
?__Interceptor_meth285@@YAJQAXZZ
?__Interceptor_meth286@@YAJQAXZZ
?__Interceptor_meth287@@YAJQAXZZ
?__Interceptor_meth288@@YAJQAXZZ
?__Interceptor_meth289@@YAJQAXZZ
?__Interceptor_meth28@@YAJQAXZZ
?__Interceptor_meth290@@YAJQAXZZ
?__Interceptor_meth291@@YAJQAXZZ
?__Interceptor_meth292@@YAJQAXZZ
?__Interceptor_meth293@@YAJQAXZZ
?__Interceptor_meth294@@YAJQAXZZ
?__Interceptor_meth295@@YAJQAXZZ
?__Interceptor_meth296@@YAJQAXZZ
?__Interceptor_meth297@@YAJQAXZZ
?__Interceptor_meth298@@YAJQAXZZ
?__Interceptor_meth299@@YAJQAXZZ
?__Interceptor_meth29@@YAJQAXZZ
?__Interceptor_meth300@@YAJQAXZZ
?__Interceptor_meth301@@YAJQAXZZ
?__Interceptor_meth302@@YAJQAXZZ
?__Interceptor_meth303@@YAJQAXZZ
?__Interceptor_meth304@@YAJQAXZZ
?__Interceptor_meth305@@YAJQAXZZ
?__Interceptor_meth306@@YAJQAXZZ
?__Interceptor_meth307@@YAJQAXZZ
?__Interceptor_meth308@@YAJQAXZZ
?__Interceptor_meth309@@YAJQAXZZ
?__Interceptor_meth30@@YAJQAXZZ
?__Interceptor_meth310@@YAJQAXZZ
?__Interceptor_meth311@@YAJQAXZZ
?__Interceptor_meth312@@YAJQAXZZ
?__Interceptor_meth313@@YAJQAXZZ
?__Interceptor_meth314@@YAJQAXZZ
?__Interceptor_meth315@@YAJQAXZZ
?__Interceptor_meth316@@YAJQAXZZ
?__Interceptor_meth317@@YAJQAXZZ
?__Interceptor_meth318@@YAJQAXZZ
?__Interceptor_meth319@@YAJQAXZZ
?__Interceptor_meth31@@YAJQAXZZ
?__Interceptor_meth320@@YAJQAXZZ
?__Interceptor_meth321@@YAJQAXZZ
?__Interceptor_meth322@@YAJQAXZZ
?__Interceptor_meth323@@YAJQAXZZ
?__Interceptor_meth324@@YAJQAXZZ
?__Interceptor_meth325@@YAJQAXZZ
?__Interceptor_meth326@@YAJQAXZZ
?__Interceptor_meth327@@YAJQAXZZ
?__Interceptor_meth328@@YAJQAXZZ
?__Interceptor_meth329@@YAJQAXZZ
?__Interceptor_meth32@@YAJQAXZZ
?__Interceptor_meth330@@YAJQAXZZ
?__Interceptor_meth331@@YAJQAXZZ
?__Interceptor_meth332@@YAJQAXZZ
?__Interceptor_meth333@@YAJQAXZZ
?__Interceptor_meth334@@YAJQAXZZ
?__Interceptor_meth335@@YAJQAXZZ
?__Interceptor_meth336@@YAJQAXZZ
?__Interceptor_meth337@@YAJQAXZZ
?__Interceptor_meth338@@YAJQAXZZ
?__Interceptor_meth339@@YAJQAXZZ
?__Interceptor_meth33@@YAJQAXZZ
?__Interceptor_meth340@@YAJQAXZZ
?__Interceptor_meth341@@YAJQAXZZ
?__Interceptor_meth342@@YAJQAXZZ
?__Interceptor_meth343@@YAJQAXZZ
?__Interceptor_meth344@@YAJQAXZZ
?__Interceptor_meth345@@YAJQAXZZ
?__Interceptor_meth346@@YAJQAXZZ
?__Interceptor_meth347@@YAJQAXZZ
?__Interceptor_meth348@@YAJQAXZZ
?__Interceptor_meth349@@YAJQAXZZ
?__Interceptor_meth34@@YAJQAXZZ
?__Interceptor_meth350@@YAJQAXZZ
?__Interceptor_meth351@@YAJQAXZZ
?__Interceptor_meth352@@YAJQAXZZ
?__Interceptor_meth353@@YAJQAXZZ
?__Interceptor_meth354@@YAJQAXZZ
?__Interceptor_meth355@@YAJQAXZZ
?__Interceptor_meth356@@YAJQAXZZ
?__Interceptor_meth357@@YAJQAXZZ
?__Interceptor_meth358@@YAJQAXZZ
?__Interceptor_meth359@@YAJQAXZZ
?__Interceptor_meth35@@YAJQAXZZ
?__Interceptor_meth360@@YAJQAXZZ
?__Interceptor_meth361@@YAJQAXZZ
?__Interceptor_meth362@@YAJQAXZZ
?__Interceptor_meth363@@YAJQAXZZ
?__Interceptor_meth364@@YAJQAXZZ
?__Interceptor_meth365@@YAJQAXZZ
?__Interceptor_meth366@@YAJQAXZZ
?__Interceptor_meth367@@YAJQAXZZ
?__Interceptor_meth368@@YAJQAXZZ
?__Interceptor_meth369@@YAJQAXZZ
?__Interceptor_meth36@@YAJQAXZZ
?__Interceptor_meth370@@YAJQAXZZ
?__Interceptor_meth371@@YAJQAXZZ
?__Interceptor_meth372@@YAJQAXZZ
?__Interceptor_meth373@@YAJQAXZZ
?__Interceptor_meth374@@YAJQAXZZ
?__Interceptor_meth375@@YAJQAXZZ
?__Interceptor_meth376@@YAJQAXZZ
?__Interceptor_meth377@@YAJQAXZZ
?__Interceptor_meth378@@YAJQAXZZ
?__Interceptor_meth379@@YAJQAXZZ
?__Interceptor_meth37@@YAJQAXZZ
?__Interceptor_meth380@@YAJQAXZZ
?__Interceptor_meth381@@YAJQAXZZ
?__Interceptor_meth382@@YAJQAXZZ
?__Interceptor_meth383@@YAJQAXZZ
?__Interceptor_meth384@@YAJQAXZZ
?__Interceptor_meth385@@YAJQAXZZ
?__Interceptor_meth386@@YAJQAXZZ
?__Interceptor_meth387@@YAJQAXZZ
?__Interceptor_meth388@@YAJQAXZZ
?__Interceptor_meth389@@YAJQAXZZ
?__Interceptor_meth38@@YAJQAXZZ
?__Interceptor_meth390@@YAJQAXZZ
?__Interceptor_meth391@@YAJQAXZZ
?__Interceptor_meth392@@YAJQAXZZ
?__Interceptor_meth393@@YAJQAXZZ
?__Interceptor_meth394@@YAJQAXZZ
?__Interceptor_meth395@@YAJQAXZZ
?__Interceptor_meth396@@YAJQAXZZ
?__Interceptor_meth397@@YAJQAXZZ
?__Interceptor_meth398@@YAJQAXZZ
?__Interceptor_meth399@@YAJQAXZZ
?__Interceptor_meth39@@YAJQAXZZ
?__Interceptor_meth3@@YAJQAXZZ
?__Interceptor_meth400@@YAJQAXZZ
?__Interceptor_meth401@@YAJQAXZZ
?__Interceptor_meth402@@YAJQAXZZ
?__Interceptor_meth403@@YAJQAXZZ
?__Interceptor_meth404@@YAJQAXZZ
?__Interceptor_meth405@@YAJQAXZZ
?__Interceptor_meth406@@YAJQAXZZ
?__Interceptor_meth407@@YAJQAXZZ
?__Interceptor_meth408@@YAJQAXZZ
?__Interceptor_meth409@@YAJQAXZZ
?__Interceptor_meth40@@YAJQAXZZ
?__Interceptor_meth410@@YAJQAXZZ
?__Interceptor_meth411@@YAJQAXZZ
?__Interceptor_meth412@@YAJQAXZZ
?__Interceptor_meth413@@YAJQAXZZ
?__Interceptor_meth414@@YAJQAXZZ
?__Interceptor_meth415@@YAJQAXZZ
?__Interceptor_meth416@@YAJQAXZZ
?__Interceptor_meth417@@YAJQAXZZ
?__Interceptor_meth418@@YAJQAXZZ
?__Interceptor_meth419@@YAJQAXZZ
?__Interceptor_meth41@@YAJQAXZZ
?__Interceptor_meth420@@YAJQAXZZ
?__Interceptor_meth421@@YAJQAXZZ
?__Interceptor_meth422@@YAJQAXZZ
?__Interceptor_meth423@@YAJQAXZZ
?__Interceptor_meth424@@YAJQAXZZ
?__Interceptor_meth425@@YAJQAXZZ
?__Interceptor_meth426@@YAJQAXZZ
?__Interceptor_meth427@@YAJQAXZZ
?__Interceptor_meth428@@YAJQAXZZ
?__Interceptor_meth429@@YAJQAXZZ
?__Interceptor_meth42@@YAJQAXZZ
?__Interceptor_meth430@@YAJQAXZZ
?__Interceptor_meth431@@YAJQAXZZ
?__Interceptor_meth432@@YAJQAXZZ
?__Interceptor_meth433@@YAJQAXZZ
?__Interceptor_meth434@@YAJQAXZZ
?__Interceptor_meth435@@YAJQAXZZ
?__Interceptor_meth436@@YAJQAXZZ
?__Interceptor_meth437@@YAJQAXZZ
?__Interceptor_meth438@@YAJQAXZZ
?__Interceptor_meth439@@YAJQAXZZ
?__Interceptor_meth43@@YAJQAXZZ
?__Interceptor_meth440@@YAJQAXZZ
?__Interceptor_meth441@@YAJQAXZZ
?__Interceptor_meth442@@YAJQAXZZ
?__Interceptor_meth443@@YAJQAXZZ
?__Interceptor_meth444@@YAJQAXZZ
?__Interceptor_meth445@@YAJQAXZZ
?__Interceptor_meth446@@YAJQAXZZ
?__Interceptor_meth447@@YAJQAXZZ
?__Interceptor_meth448@@YAJQAXZZ
?__Interceptor_meth449@@YAJQAXZZ
?__Interceptor_meth44@@YAJQAXZZ
?__Interceptor_meth450@@YAJQAXZZ
?__Interceptor_meth451@@YAJQAXZZ
?__Interceptor_meth452@@YAJQAXZZ
?__Interceptor_meth453@@YAJQAXZZ
?__Interceptor_meth454@@YAJQAXZZ
?__Interceptor_meth455@@YAJQAXZZ
?__Interceptor_meth456@@YAJQAXZZ
?__Interceptor_meth457@@YAJQAXZZ
?__Interceptor_meth458@@YAJQAXZZ
?__Interceptor_meth459@@YAJQAXZZ
?__Interceptor_meth45@@YAJQAXZZ
?__Interceptor_meth460@@YAJQAXZZ
?__Interceptor_meth461@@YAJQAXZZ
?__Interceptor_meth462@@YAJQAXZZ
?__Interceptor_meth463@@YAJQAXZZ
?__Interceptor_meth464@@YAJQAXZZ
?__Interceptor_meth465@@YAJQAXZZ
?__Interceptor_meth466@@YAJQAXZZ
?__Interceptor_meth467@@YAJQAXZZ
?__Interceptor_meth468@@YAJQAXZZ
?__Interceptor_meth469@@YAJQAXZZ
?__Interceptor_meth46@@YAJQAXZZ
?__Interceptor_meth470@@YAJQAXZZ
?__Interceptor_meth471@@YAJQAXZZ
?__Interceptor_meth472@@YAJQAXZZ
?__Interceptor_meth473@@YAJQAXZZ
?__Interceptor_meth474@@YAJQAXZZ
?__Interceptor_meth475@@YAJQAXZZ
?__Interceptor_meth476@@YAJQAXZZ
?__Interceptor_meth477@@YAJQAXZZ
?__Interceptor_meth478@@YAJQAXZZ
?__Interceptor_meth479@@YAJQAXZZ
?__Interceptor_meth47@@YAJQAXZZ
?__Interceptor_meth480@@YAJQAXZZ
?__Interceptor_meth481@@YAJQAXZZ
?__Interceptor_meth482@@YAJQAXZZ
?__Interceptor_meth483@@YAJQAXZZ
?__Interceptor_meth484@@YAJQAXZZ
?__Interceptor_meth485@@YAJQAXZZ
?__Interceptor_meth486@@YAJQAXZZ
?__Interceptor_meth487@@YAJQAXZZ
?__Interceptor_meth488@@YAJQAXZZ
?__Interceptor_meth489@@YAJQAXZZ
?__Interceptor_meth48@@YAJQAXZZ
?__Interceptor_meth490@@YAJQAXZZ
?__Interceptor_meth491@@YAJQAXZZ
?__Interceptor_meth492@@YAJQAXZZ
?__Interceptor_meth493@@YAJQAXZZ
?__Interceptor_meth494@@YAJQAXZZ
?__Interceptor_meth495@@YAJQAXZZ
?__Interceptor_meth496@@YAJQAXZZ
?__Interceptor_meth497@@YAJQAXZZ
?__Interceptor_meth498@@YAJQAXZZ
?__Interceptor_meth499@@YAJQAXZZ
?__Interceptor_meth49@@YAJQAXZZ
?__Interceptor_meth4@@YAJQAXZZ
?__Interceptor_meth500@@YAJQAXZZ
?__Interceptor_meth501@@YAJQAXZZ
?__Interceptor_meth502@@YAJQAXZZ
?__Interceptor_meth503@@YAJQAXZZ
?__Interceptor_meth504@@YAJQAXZZ
?__Interceptor_meth505@@YAJQAXZZ
?__Interceptor_meth506@@YAJQAXZZ
?__Interceptor_meth507@@YAJQAXZZ
?__Interceptor_meth508@@YAJQAXZZ
?__Interceptor_meth509@@YAJQAXZZ
?__Interceptor_meth50@@YAJQAXZZ
?__Interceptor_meth510@@YAJQAXZZ
?__Interceptor_meth511@@YAJQAXZZ
?__Interceptor_meth512@@YAJQAXZZ
?__Interceptor_meth513@@YAJQAXZZ
?__Interceptor_meth514@@YAJQAXZZ
?__Interceptor_meth515@@YAJQAXZZ
?__Interceptor_meth516@@YAJQAXZZ
?__Interceptor_meth517@@YAJQAXZZ
?__Interceptor_meth518@@YAJQAXZZ
?__Interceptor_meth519@@YAJQAXZZ
?__Interceptor_meth51@@YAJQAXZZ
?__Interceptor_meth520@@YAJQAXZZ
?__Interceptor_meth521@@YAJQAXZZ
?__Interceptor_meth522@@YAJQAXZZ
?__Interceptor_meth523@@YAJQAXZZ
?__Interceptor_meth524@@YAJQAXZZ
?__Interceptor_meth525@@YAJQAXZZ
?__Interceptor_meth526@@YAJQAXZZ
?__Interceptor_meth527@@YAJQAXZZ
?__Interceptor_meth528@@YAJQAXZZ
?__Interceptor_meth529@@YAJQAXZZ
?__Interceptor_meth52@@YAJQAXZZ
?__Interceptor_meth530@@YAJQAXZZ
?__Interceptor_meth531@@YAJQAXZZ
?__Interceptor_meth532@@YAJQAXZZ
?__Interceptor_meth533@@YAJQAXZZ
?__Interceptor_meth534@@YAJQAXZZ
?__Interceptor_meth535@@YAJQAXZZ
?__Interceptor_meth536@@YAJQAXZZ
?__Interceptor_meth537@@YAJQAXZZ
?__Interceptor_meth538@@YAJQAXZZ
?__Interceptor_meth539@@YAJQAXZZ
?__Interceptor_meth53@@YAJQAXZZ
?__Interceptor_meth540@@YAJQAXZZ
?__Interceptor_meth541@@YAJQAXZZ
?__Interceptor_meth542@@YAJQAXZZ
?__Interceptor_meth543@@YAJQAXZZ
?__Interceptor_meth544@@YAJQAXZZ
?__Interceptor_meth545@@YAJQAXZZ
?__Interceptor_meth546@@YAJQAXZZ
?__Interceptor_meth547@@YAJQAXZZ
?__Interceptor_meth548@@YAJQAXZZ
?__Interceptor_meth549@@YAJQAXZZ
?__Interceptor_meth54@@YAJQAXZZ
?__Interceptor_meth550@@YAJQAXZZ
?__Interceptor_meth551@@YAJQAXZZ
?__Interceptor_meth552@@YAJQAXZZ
?__Interceptor_meth553@@YAJQAXZZ
?__Interceptor_meth554@@YAJQAXZZ
?__Interceptor_meth555@@YAJQAXZZ
?__Interceptor_meth556@@YAJQAXZZ
?__Interceptor_meth557@@YAJQAXZZ
?__Interceptor_meth558@@YAJQAXZZ
?__Interceptor_meth559@@YAJQAXZZ
?__Interceptor_meth55@@YAJQAXZZ
?__Interceptor_meth560@@YAJQAXZZ
?__Interceptor_meth561@@YAJQAXZZ
?__Interceptor_meth562@@YAJQAXZZ
?__Interceptor_meth563@@YAJQAXZZ
?__Interceptor_meth564@@YAJQAXZZ
?__Interceptor_meth565@@YAJQAXZZ
?__Interceptor_meth566@@YAJQAXZZ
?__Interceptor_meth567@@YAJQAXZZ
?__Interceptor_meth568@@YAJQAXZZ
?__Interceptor_meth569@@YAJQAXZZ
?__Interceptor_meth56@@YAJQAXZZ
?__Interceptor_meth570@@YAJQAXZZ
?__Interceptor_meth571@@YAJQAXZZ
?__Interceptor_meth572@@YAJQAXZZ
?__Interceptor_meth573@@YAJQAXZZ
?__Interceptor_meth574@@YAJQAXZZ
?__Interceptor_meth575@@YAJQAXZZ
?__Interceptor_meth576@@YAJQAXZZ
?__Interceptor_meth577@@YAJQAXZZ
?__Interceptor_meth578@@YAJQAXZZ
?__Interceptor_meth579@@YAJQAXZZ
?__Interceptor_meth57@@YAJQAXZZ
?__Interceptor_meth580@@YAJQAXZZ
?__Interceptor_meth581@@YAJQAXZZ
?__Interceptor_meth582@@YAJQAXZZ
?__Interceptor_meth583@@YAJQAXZZ
?__Interceptor_meth584@@YAJQAXZZ
?__Interceptor_meth585@@YAJQAXZZ
?__Interceptor_meth586@@YAJQAXZZ
?__Interceptor_meth587@@YAJQAXZZ
?__Interceptor_meth588@@YAJQAXZZ
?__Interceptor_meth589@@YAJQAXZZ
?__Interceptor_meth58@@YAJQAXZZ
?__Interceptor_meth590@@YAJQAXZZ
?__Interceptor_meth591@@YAJQAXZZ
?__Interceptor_meth592@@YAJQAXZZ
?__Interceptor_meth593@@YAJQAXZZ
?__Interceptor_meth594@@YAJQAXZZ
?__Interceptor_meth595@@YAJQAXZZ
?__Interceptor_meth596@@YAJQAXZZ
?__Interceptor_meth597@@YAJQAXZZ
?__Interceptor_meth598@@YAJQAXZZ
?__Interceptor_meth599@@YAJQAXZZ
?__Interceptor_meth59@@YAJQAXZZ
?__Interceptor_meth5@@YAJQAXZZ
?__Interceptor_meth600@@YAJQAXZZ
?__Interceptor_meth601@@YAJQAXZZ
?__Interceptor_meth602@@YAJQAXZZ
?__Interceptor_meth603@@YAJQAXZZ
?__Interceptor_meth604@@YAJQAXZZ
?__Interceptor_meth605@@YAJQAXZZ
?__Interceptor_meth606@@YAJQAXZZ
?__Interceptor_meth607@@YAJQAXZZ
?__Interceptor_meth608@@YAJQAXZZ
?__Interceptor_meth609@@YAJQAXZZ
?__Interceptor_meth60@@YAJQAXZZ
?__Interceptor_meth610@@YAJQAXZZ
?__Interceptor_meth611@@YAJQAXZZ
?__Interceptor_meth612@@YAJQAXZZ
?__Interceptor_meth613@@YAJQAXZZ
?__Interceptor_meth614@@YAJQAXZZ
?__Interceptor_meth615@@YAJQAXZZ
?__Interceptor_meth616@@YAJQAXZZ
?__Interceptor_meth617@@YAJQAXZZ
?__Interceptor_meth618@@YAJQAXZZ
?__Interceptor_meth619@@YAJQAXZZ
?__Interceptor_meth61@@YAJQAXZZ
?__Interceptor_meth620@@YAJQAXZZ
?__Interceptor_meth621@@YAJQAXZZ
?__Interceptor_meth622@@YAJQAXZZ
?__Interceptor_meth623@@YAJQAXZZ
?__Interceptor_meth624@@YAJQAXZZ
?__Interceptor_meth625@@YAJQAXZZ
?__Interceptor_meth626@@YAJQAXZZ
?__Interceptor_meth627@@YAJQAXZZ
?__Interceptor_meth628@@YAJQAXZZ
?__Interceptor_meth629@@YAJQAXZZ
?__Interceptor_meth62@@YAJQAXZZ
?__Interceptor_meth630@@YAJQAXZZ
?__Interceptor_meth631@@YAJQAXZZ
?__Interceptor_meth632@@YAJQAXZZ
?__Interceptor_meth633@@YAJQAXZZ
?__Interceptor_meth634@@YAJQAXZZ
?__Interceptor_meth635@@YAJQAXZZ
?__Interceptor_meth636@@YAJQAXZZ
?__Interceptor_meth637@@YAJQAXZZ
?__Interceptor_meth638@@YAJQAXZZ
?__Interceptor_meth639@@YAJQAXZZ
?__Interceptor_meth63@@YAJQAXZZ
?__Interceptor_meth640@@YAJQAXZZ
?__Interceptor_meth641@@YAJQAXZZ
?__Interceptor_meth642@@YAJQAXZZ
?__Interceptor_meth643@@YAJQAXZZ
?__Interceptor_meth644@@YAJQAXZZ
?__Interceptor_meth645@@YAJQAXZZ
?__Interceptor_meth646@@YAJQAXZZ
?__Interceptor_meth647@@YAJQAXZZ
?__Interceptor_meth648@@YAJQAXZZ
?__Interceptor_meth649@@YAJQAXZZ
?__Interceptor_meth64@@YAJQAXZZ
?__Interceptor_meth650@@YAJQAXZZ
?__Interceptor_meth651@@YAJQAXZZ
?__Interceptor_meth652@@YAJQAXZZ
?__Interceptor_meth653@@YAJQAXZZ
?__Interceptor_meth654@@YAJQAXZZ
?__Interceptor_meth655@@YAJQAXZZ
?__Interceptor_meth656@@YAJQAXZZ
?__Interceptor_meth657@@YAJQAXZZ
?__Interceptor_meth658@@YAJQAXZZ
?__Interceptor_meth659@@YAJQAXZZ
?__Interceptor_meth65@@YAJQAXZZ
?__Interceptor_meth660@@YAJQAXZZ
?__Interceptor_meth661@@YAJQAXZZ
?__Interceptor_meth662@@YAJQAXZZ
?__Interceptor_meth663@@YAJQAXZZ
?__Interceptor_meth664@@YAJQAXZZ
?__Interceptor_meth665@@YAJQAXZZ
?__Interceptor_meth666@@YAJQAXZZ
?__Interceptor_meth667@@YAJQAXZZ
?__Interceptor_meth668@@YAJQAXZZ
?__Interceptor_meth669@@YAJQAXZZ
?__Interceptor_meth66@@YAJQAXZZ
?__Interceptor_meth670@@YAJQAXZZ
?__Interceptor_meth671@@YAJQAXZZ
?__Interceptor_meth672@@YAJQAXZZ
?__Interceptor_meth673@@YAJQAXZZ
?__Interceptor_meth674@@YAJQAXZZ
?__Interceptor_meth675@@YAJQAXZZ
?__Interceptor_meth676@@YAJQAXZZ
?__Interceptor_meth677@@YAJQAXZZ
?__Interceptor_meth678@@YAJQAXZZ
?__Interceptor_meth679@@YAJQAXZZ
?__Interceptor_meth67@@YAJQAXZZ
?__Interceptor_meth680@@YAJQAXZZ
?__Interceptor_meth681@@YAJQAXZZ
?__Interceptor_meth682@@YAJQAXZZ
?__Interceptor_meth683@@YAJQAXZZ
?__Interceptor_meth684@@YAJQAXZZ
?__Interceptor_meth685@@YAJQAXZZ
?__Interceptor_meth686@@YAJQAXZZ
?__Interceptor_meth687@@YAJQAXZZ
?__Interceptor_meth688@@YAJQAXZZ
?__Interceptor_meth689@@YAJQAXZZ
?__Interceptor_meth68@@YAJQAXZZ
?__Interceptor_meth690@@YAJQAXZZ
?__Interceptor_meth691@@YAJQAXZZ
?__Interceptor_meth692@@YAJQAXZZ
?__Interceptor_meth693@@YAJQAXZZ
?__Interceptor_meth694@@YAJQAXZZ
?__Interceptor_meth695@@YAJQAXZZ
?__Interceptor_meth696@@YAJQAXZZ
?__Interceptor_meth697@@YAJQAXZZ
?__Interceptor_meth698@@YAJQAXZZ
?__Interceptor_meth699@@YAJQAXZZ
?__Interceptor_meth69@@YAJQAXZZ
?__Interceptor_meth6@@YAJQAXZZ
?__Interceptor_meth700@@YAJQAXZZ
?__Interceptor_meth701@@YAJQAXZZ
?__Interceptor_meth702@@YAJQAXZZ
?__Interceptor_meth703@@YAJQAXZZ
?__Interceptor_meth704@@YAJQAXZZ
?__Interceptor_meth705@@YAJQAXZZ
?__Interceptor_meth706@@YAJQAXZZ
?__Interceptor_meth707@@YAJQAXZZ
?__Interceptor_meth708@@YAJQAXZZ
?__Interceptor_meth709@@YAJQAXZZ
?__Interceptor_meth70@@YAJQAXZZ
?__Interceptor_meth710@@YAJQAXZZ
?__Interceptor_meth711@@YAJQAXZZ
?__Interceptor_meth712@@YAJQAXZZ
?__Interceptor_meth713@@YAJQAXZZ
?__Interceptor_meth714@@YAJQAXZZ
?__Interceptor_meth715@@YAJQAXZZ
?__Interceptor_meth716@@YAJQAXZZ
?__Interceptor_meth717@@YAJQAXZZ
?__Interceptor_meth718@@YAJQAXZZ
?__Interceptor_meth719@@YAJQAXZZ
?__Interceptor_meth71@@YAJQAXZZ
?__Interceptor_meth720@@YAJQAXZZ
?__Interceptor_meth721@@YAJQAXZZ
?__Interceptor_meth722@@YAJQAXZZ
?__Interceptor_meth723@@YAJQAXZZ
?__Interceptor_meth724@@YAJQAXZZ
?__Interceptor_meth725@@YAJQAXZZ
?__Interceptor_meth726@@YAJQAXZZ
?__Interceptor_meth727@@YAJQAXZZ
?__Interceptor_meth728@@YAJQAXZZ
?__Interceptor_meth729@@YAJQAXZZ
?__Interceptor_meth72@@YAJQAXZZ
?__Interceptor_meth730@@YAJQAXZZ
?__Interceptor_meth731@@YAJQAXZZ
?__Interceptor_meth732@@YAJQAXZZ
?__Interceptor_meth733@@YAJQAXZZ
?__Interceptor_meth734@@YAJQAXZZ
?__Interceptor_meth735@@YAJQAXZZ
?__Interceptor_meth736@@YAJQAXZZ
?__Interceptor_meth737@@YAJQAXZZ
?__Interceptor_meth738@@YAJQAXZZ
?__Interceptor_meth739@@YAJQAXZZ
?__Interceptor_meth73@@YAJQAXZZ
?__Interceptor_meth740@@YAJQAXZZ
?__Interceptor_meth741@@YAJQAXZZ
?__Interceptor_meth742@@YAJQAXZZ
?__Interceptor_meth743@@YAJQAXZZ
?__Interceptor_meth744@@YAJQAXZZ
?__Interceptor_meth745@@YAJQAXZZ
?__Interceptor_meth746@@YAJQAXZZ
?__Interceptor_meth747@@YAJQAXZZ
?__Interceptor_meth748@@YAJQAXZZ
?__Interceptor_meth749@@YAJQAXZZ
?__Interceptor_meth74@@YAJQAXZZ
?__Interceptor_meth750@@YAJQAXZZ
?__Interceptor_meth751@@YAJQAXZZ
?__Interceptor_meth752@@YAJQAXZZ
?__Interceptor_meth753@@YAJQAXZZ
?__Interceptor_meth754@@YAJQAXZZ
?__Interceptor_meth755@@YAJQAXZZ
?__Interceptor_meth756@@YAJQAXZZ
?__Interceptor_meth757@@YAJQAXZZ
?__Interceptor_meth758@@YAJQAXZZ
?__Interceptor_meth759@@YAJQAXZZ
?__Interceptor_meth75@@YAJQAXZZ
?__Interceptor_meth760@@YAJQAXZZ
?__Interceptor_meth761@@YAJQAXZZ
?__Interceptor_meth762@@YAJQAXZZ
?__Interceptor_meth763@@YAJQAXZZ
?__Interceptor_meth764@@YAJQAXZZ
?__Interceptor_meth765@@YAJQAXZZ
?__Interceptor_meth766@@YAJQAXZZ
?__Interceptor_meth767@@YAJQAXZZ
?__Interceptor_meth768@@YAJQAXZZ
?__Interceptor_meth769@@YAJQAXZZ
?__Interceptor_meth76@@YAJQAXZZ
?__Interceptor_meth770@@YAJQAXZZ
?__Interceptor_meth771@@YAJQAXZZ
?__Interceptor_meth772@@YAJQAXZZ
?__Interceptor_meth773@@YAJQAXZZ
?__Interceptor_meth774@@YAJQAXZZ
?__Interceptor_meth775@@YAJQAXZZ
?__Interceptor_meth776@@YAJQAXZZ
?__Interceptor_meth777@@YAJQAXZZ
?__Interceptor_meth778@@YAJQAXZZ
?__Interceptor_meth779@@YAJQAXZZ
?__Interceptor_meth77@@YAJQAXZZ
?__Interceptor_meth780@@YAJQAXZZ
?__Interceptor_meth781@@YAJQAXZZ
?__Interceptor_meth782@@YAJQAXZZ
?__Interceptor_meth783@@YAJQAXZZ
?__Interceptor_meth784@@YAJQAXZZ
?__Interceptor_meth785@@YAJQAXZZ
?__Interceptor_meth786@@YAJQAXZZ
?__Interceptor_meth787@@YAJQAXZZ
?__Interceptor_meth788@@YAJQAXZZ
?__Interceptor_meth789@@YAJQAXZZ
?__Interceptor_meth78@@YAJQAXZZ
?__Interceptor_meth790@@YAJQAXZZ
?__Interceptor_meth791@@YAJQAXZZ
?__Interceptor_meth792@@YAJQAXZZ
?__Interceptor_meth793@@YAJQAXZZ
?__Interceptor_meth794@@YAJQAXZZ
?__Interceptor_meth795@@YAJQAXZZ
?__Interceptor_meth796@@YAJQAXZZ
?__Interceptor_meth797@@YAJQAXZZ
?__Interceptor_meth798@@YAJQAXZZ
?__Interceptor_meth799@@YAJQAXZZ
?__Interceptor_meth79@@YAJQAXZZ
?__Interceptor_meth7@@YAJQAXZZ
?__Interceptor_meth800@@YAJQAXZZ
?__Interceptor_meth801@@YAJQAXZZ
?__Interceptor_meth802@@YAJQAXZZ
?__Interceptor_meth803@@YAJQAXZZ
?__Interceptor_meth804@@YAJQAXZZ
?__Interceptor_meth805@@YAJQAXZZ
?__Interceptor_meth806@@YAJQAXZZ
?__Interceptor_meth807@@YAJQAXZZ
?__Interceptor_meth808@@YAJQAXZZ
?__Interceptor_meth809@@YAJQAXZZ
?__Interceptor_meth80@@YAJQAXZZ
?__Interceptor_meth810@@YAJQAXZZ
?__Interceptor_meth811@@YAJQAXZZ
?__Interceptor_meth812@@YAJQAXZZ
?__Interceptor_meth813@@YAJQAXZZ
?__Interceptor_meth814@@YAJQAXZZ
?__Interceptor_meth815@@YAJQAXZZ
?__Interceptor_meth816@@YAJQAXZZ
?__Interceptor_meth817@@YAJQAXZZ
?__Interceptor_meth818@@YAJQAXZZ
?__Interceptor_meth819@@YAJQAXZZ
?__Interceptor_meth81@@YAJQAXZZ
?__Interceptor_meth820@@YAJQAXZZ
?__Interceptor_meth821@@YAJQAXZZ
?__Interceptor_meth822@@YAJQAXZZ
?__Interceptor_meth823@@YAJQAXZZ
?__Interceptor_meth824@@YAJQAXZZ
?__Interceptor_meth825@@YAJQAXZZ
?__Interceptor_meth826@@YAJQAXZZ
?__Interceptor_meth827@@YAJQAXZZ
?__Interceptor_meth828@@YAJQAXZZ
?__Interceptor_meth829@@YAJQAXZZ
?__Interceptor_meth82@@YAJQAXZZ
?__Interceptor_meth830@@YAJQAXZZ
?__Interceptor_meth831@@YAJQAXZZ
?__Interceptor_meth832@@YAJQAXZZ
?__Interceptor_meth833@@YAJQAXZZ
?__Interceptor_meth834@@YAJQAXZZ
?__Interceptor_meth835@@YAJQAXZZ
?__Interceptor_meth836@@YAJQAXZZ
?__Interceptor_meth837@@YAJQAXZZ
?__Interceptor_meth838@@YAJQAXZZ
?__Interceptor_meth839@@YAJQAXZZ
?__Interceptor_meth83@@YAJQAXZZ
?__Interceptor_meth840@@YAJQAXZZ
?__Interceptor_meth841@@YAJQAXZZ
?__Interceptor_meth842@@YAJQAXZZ
?__Interceptor_meth843@@YAJQAXZZ
?__Interceptor_meth844@@YAJQAXZZ
?__Interceptor_meth845@@YAJQAXZZ
?__Interceptor_meth846@@YAJQAXZZ
?__Interceptor_meth847@@YAJQAXZZ
?__Interceptor_meth848@@YAJQAXZZ
?__Interceptor_meth849@@YAJQAXZZ
?__Interceptor_meth84@@YAJQAXZZ
?__Interceptor_meth850@@YAJQAXZZ
?__Interceptor_meth851@@YAJQAXZZ
?__Interceptor_meth852@@YAJQAXZZ
?__Interceptor_meth853@@YAJQAXZZ
?__Interceptor_meth854@@YAJQAXZZ
?__Interceptor_meth855@@YAJQAXZZ
?__Interceptor_meth856@@YAJQAXZZ
?__Interceptor_meth857@@YAJQAXZZ
?__Interceptor_meth858@@YAJQAXZZ
?__Interceptor_meth859@@YAJQAXZZ
?__Interceptor_meth85@@YAJQAXZZ
?__Interceptor_meth860@@YAJQAXZZ
?__Interceptor_meth861@@YAJQAXZZ
?__Interceptor_meth862@@YAJQAXZZ
?__Interceptor_meth863@@YAJQAXZZ
?__Interceptor_meth864@@YAJQAXZZ
?__Interceptor_meth865@@YAJQAXZZ
?__Interceptor_meth866@@YAJQAXZZ
?__Interceptor_meth867@@YAJQAXZZ
?__Interceptor_meth868@@YAJQAXZZ
?__Interceptor_meth869@@YAJQAXZZ
?__Interceptor_meth86@@YAJQAXZZ
?__Interceptor_meth870@@YAJQAXZZ
?__Interceptor_meth871@@YAJQAXZZ
?__Interceptor_meth872@@YAJQAXZZ
?__Interceptor_meth873@@YAJQAXZZ
?__Interceptor_meth874@@YAJQAXZZ
?__Interceptor_meth875@@YAJQAXZZ
?__Interceptor_meth876@@YAJQAXZZ
?__Interceptor_meth877@@YAJQAXZZ
?__Interceptor_meth878@@YAJQAXZZ
?__Interceptor_meth879@@YAJQAXZZ
?__Interceptor_meth87@@YAJQAXZZ
?__Interceptor_meth880@@YAJQAXZZ
?__Interceptor_meth881@@YAJQAXZZ
?__Interceptor_meth882@@YAJQAXZZ
?__Interceptor_meth883@@YAJQAXZZ
?__Interceptor_meth884@@YAJQAXZZ
?__Interceptor_meth885@@YAJQAXZZ
?__Interceptor_meth886@@YAJQAXZZ
?__Interceptor_meth887@@YAJQAXZZ
?__Interceptor_meth888@@YAJQAXZZ
?__Interceptor_meth889@@YAJQAXZZ
?__Interceptor_meth88@@YAJQAXZZ
?__Interceptor_meth890@@YAJQAXZZ
?__Interceptor_meth891@@YAJQAXZZ
?__Interceptor_meth892@@YAJQAXZZ
?__Interceptor_meth893@@YAJQAXZZ
?__Interceptor_meth894@@YAJQAXZZ
?__Interceptor_meth895@@YAJQAXZZ
?__Interceptor_meth896@@YAJQAXZZ
?__Interceptor_meth897@@YAJQAXZZ
?__Interceptor_meth898@@YAJQAXZZ
?__Interceptor_meth899@@YAJQAXZZ
?__Interceptor_meth89@@YAJQAXZZ
?__Interceptor_meth8@@YAJQAXZZ
?__Interceptor_meth900@@YAJQAXZZ
?__Interceptor_meth901@@YAJQAXZZ
?__Interceptor_meth902@@YAJQAXZZ
?__Interceptor_meth903@@YAJQAXZZ
?__Interceptor_meth904@@YAJQAXZZ
?__Interceptor_meth905@@YAJQAXZZ
?__Interceptor_meth906@@YAJQAXZZ
?__Interceptor_meth907@@YAJQAXZZ
?__Interceptor_meth908@@YAJQAXZZ
?__Interceptor_meth909@@YAJQAXZZ
?__Interceptor_meth90@@YAJQAXZZ
?__Interceptor_meth910@@YAJQAXZZ
?__Interceptor_meth911@@YAJQAXZZ
?__Interceptor_meth912@@YAJQAXZZ
?__Interceptor_meth913@@YAJQAXZZ
?__Interceptor_meth914@@YAJQAXZZ
?__Interceptor_meth915@@YAJQAXZZ
?__Interceptor_meth916@@YAJQAXZZ
?__Interceptor_meth917@@YAJQAXZZ
?__Interceptor_meth918@@YAJQAXZZ
?__Interceptor_meth919@@YAJQAXZZ
?__Interceptor_meth91@@YAJQAXZZ
?__Interceptor_meth920@@YAJQAXZZ
?__Interceptor_meth921@@YAJQAXZZ
?__Interceptor_meth922@@YAJQAXZZ
?__Interceptor_meth923@@YAJQAXZZ
?__Interceptor_meth924@@YAJQAXZZ
?__Interceptor_meth925@@YAJQAXZZ
?__Interceptor_meth926@@YAJQAXZZ
?__Interceptor_meth927@@YAJQAXZZ
?__Interceptor_meth928@@YAJQAXZZ
?__Interceptor_meth929@@YAJQAXZZ
?__Interceptor_meth92@@YAJQAXZZ
?__Interceptor_meth930@@YAJQAXZZ
?__Interceptor_meth931@@YAJQAXZZ
?__Interceptor_meth932@@YAJQAXZZ
?__Interceptor_meth933@@YAJQAXZZ
?__Interceptor_meth934@@YAJQAXZZ
?__Interceptor_meth935@@YAJQAXZZ
?__Interceptor_meth936@@YAJQAXZZ
?__Interceptor_meth937@@YAJQAXZZ
?__Interceptor_meth938@@YAJQAXZZ
?__Interceptor_meth939@@YAJQAXZZ
?__Interceptor_meth93@@YAJQAXZZ
?__Interceptor_meth940@@YAJQAXZZ
?__Interceptor_meth941@@YAJQAXZZ
?__Interceptor_meth942@@YAJQAXZZ
?__Interceptor_meth943@@YAJQAXZZ
?__Interceptor_meth944@@YAJQAXZZ
?__Interceptor_meth945@@YAJQAXZZ
?__Interceptor_meth946@@YAJQAXZZ
?__Interceptor_meth947@@YAJQAXZZ
?__Interceptor_meth948@@YAJQAXZZ
?__Interceptor_meth949@@YAJQAXZZ
?__Interceptor_meth94@@YAJQAXZZ
?__Interceptor_meth950@@YAJQAXZZ
?__Interceptor_meth951@@YAJQAXZZ
?__Interceptor_meth952@@YAJQAXZZ
?__Interceptor_meth953@@YAJQAXZZ
?__Interceptor_meth954@@YAJQAXZZ
?__Interceptor_meth955@@YAJQAXZZ
?__Interceptor_meth956@@YAJQAXZZ
?__Interceptor_meth957@@YAJQAXZZ
?__Interceptor_meth958@@YAJQAXZZ
?__Interceptor_meth959@@YAJQAXZZ
?__Interceptor_meth95@@YAJQAXZZ
?__Interceptor_meth960@@YAJQAXZZ
?__Interceptor_meth961@@YAJQAXZZ
?__Interceptor_meth962@@YAJQAXZZ
?__Interceptor_meth963@@YAJQAXZZ
?__Interceptor_meth964@@YAJQAXZZ
?__Interceptor_meth965@@YAJQAXZZ
?__Interceptor_meth966@@YAJQAXZZ
?__Interceptor_meth967@@YAJQAXZZ
?__Interceptor_meth968@@YAJQAXZZ
?__Interceptor_meth969@@YAJQAXZZ
?__Interceptor_meth96@@YAJQAXZZ
?__Interceptor_meth970@@YAJQAXZZ
?__Interceptor_meth971@@YAJQAXZZ
?__Interceptor_meth972@@YAJQAXZZ
?__Interceptor_meth973@@YAJQAXZZ
?__Interceptor_meth974@@YAJQAXZZ
?__Interceptor_meth975@@YAJQAXZZ
?__Interceptor_meth976@@YAJQAXZZ
?__Interceptor_meth977@@YAJQAXZZ
?__Interceptor_meth978@@YAJQAXZZ
?__Interceptor_meth979@@YAJQAXZZ
?__Interceptor_meth97@@YAJQAXZZ
?__Interceptor_meth980@@YAJQAXZZ
?__Interceptor_meth981@@YAJQAXZZ
?__Interceptor_meth982@@YAJQAXZZ
?__Interceptor_meth983@@YAJQAXZZ
?__Interceptor_meth984@@YAJQAXZZ
?__Interceptor_meth985@@YAJQAXZZ
?__Interceptor_meth986@@YAJQAXZZ
?__Interceptor_meth987@@YAJQAXZZ
?__Interceptor_meth988@@YAJQAXZZ
?__Interceptor_meth989@@YAJQAXZZ
?__Interceptor_meth98@@YAJQAXZZ
?__Interceptor_meth990@@YAJQAXZZ
?__Interceptor_meth991@@YAJQAXZZ
?__Interceptor_meth992@@YAJQAXZZ
?__Interceptor_meth993@@YAJQAXZZ
?__Interceptor_meth994@@YAJQAXZZ
?__Interceptor_meth995@@YAJQAXZZ
?__Interceptor_meth996@@YAJQAXZZ
?__Interceptor_meth997@@YAJQAXZZ
?__Interceptor_meth998@@YAJQAXZZ
?__Interceptor_meth999@@YAJQAXZZ
?__Interceptor_meth99@@YAJQAXZZ
?__Interceptor_meth9@@YAJQAXZZ
?add@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEXABVMAP_KEY_GUID@@ABQAUINTERFACE_HELPER_CLSID@@@Z
?add@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEXABVMAP_KEY_GUID@@ABQAUMD_INTERFACE@@@Z
?add@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEXABVMAP_KEY_GUID@@ABQAUTYPEINFOVTBL@@@Z
?bPSz4@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEK@Z
?bPSz4@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJK@Z
?bPSz4@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANK@Z
?baRgtB5@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEKPAK@Z
?baRgtB5@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJKPAK@Z
?baRgtB5@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANKPAK@Z
?baRltB4@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEKPAK@Z
?baRltB4@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJKPAK@Z
?baRltB4@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANKPAK@Z
?bfPgtF2@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEK@Z
?bfPgtF2@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJK@Z
?bfPgtF2@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANK@Z
?bfPltF3@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AAEJPAEK@Z
?bfPltF3@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AAEJPAJK@Z
?bfPltF3@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AAEJPANK@Z
?contains@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAV2@@Z
?contains@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAV2@@Z
?contains@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAV2@@Z
?dfwcsnicmp@@YGHPBG0I@Z
?find@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@ABEHABVMAP_KEY_GUID@@PAPAPAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@ABEHABVMAP_KEY_GUID@@PAPAPAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@ABEHABVMAP_KEY_GUID@@PAPAPAVAssoc@1@@Z
?fnChunkCompare@@YAHPBX0@Z
?fnOffsetCompare@@YAHPBX0@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXPAVAssoc@1@@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXPAVAssoc@1@@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXPAVAssoc@1@@Z
?freeCOAUTHIDENTITY@SecurityInfo@@SGXPAU_COAUTHIDENTITY@@@Z
?freeCOAUTHINFO@SecurityInfo@@SGXPAU_COAUTHINFO@@@Z
?freeCOSERVERINFO@SecurityInfo@@SGXPAU_COSERVERINFO@@@Z
?freeRemoteReplyInfo@ScmReplyInfo@@QAEXXZ
?freeRemoteRequest@ScmRequestInfo@@QAEXPAU_REMOTE_REQUEST_SCM_INFO@@@Z
?freeResolverInfo@ScmReplyInfo@@QAEXXZ
?freeScmInfo@ScmRequestInfo@@QAEXPAU_PRIV_SCM_INFO@@@Z
?grow@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXXZ
?grow@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXXZ
?grow@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXXZ
?iFindDIBits@@YGHPAUtagBITMAPINFOHEADER@@@Z
?map@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAPAPAUINTERFACE_HELPER_CLSID@@@Z
?map@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAPAUINTERFACE_HELPER_CLSID@@@Z
?map@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAPAPAUMD_INTERFACE@@@Z
?map@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAPAUMD_INTERFACE@@@Z
?map@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAPAPAUTYPEINFOVTBL@@@Z
?map@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QBEHABVMAP_KEY_GUID@@PAPAUTYPEINFOVTBL@@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXABVMAP_KEY_GUID@@ABQAUINTERFACE_HELPER_CLSID@@PAPAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXABVMAP_KEY_GUID@@ABQAUMD_INTERFACE@@PAPAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXABVMAP_KEY_GUID@@ABQAUTYPEINFOVTBL@@PAPAVAssoc@1@@Z
?next@?$EnumMap@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UAEHXZ
?next@?$EnumMap@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UAEHXZ
?releaseAssoc@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXPAVAssoc@1@@Z
?releaseAssoc@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AAEXPAVAssoc@1@@Z
?remove@?$Map@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEXABVMAP_KEY_GUID@@@Z
?remove@?$Map@VMAP_KEY_GUID@@PAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEXABVMAP_KEY_GUID@@@Z
?remove@?$Map@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QAEXABVMAP_KEY_GUID@@@Z
?reset@?$EnumMap@VMAP_KEY_GUID@@PAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UAEXXZ
?reset@?$EnumMap@VMAP_KEY_GUID@@PAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UAEXXZ
?utGetAppIdForModule@@YGJPAGK@Z
?utGetModuleName@@YGJPAGK@Z
?utGetProtseqFromTowerId@@YGPBGG@Z
?utGetTowerId@@YGGPBG@Z
?vDecRef@CPubDocFile@@QAEJXZ
?vRelease@CDFBasis@@QAEJXZ
?vRelease@CPubDocFile@@QAEJXZ
?vRelease@CPubStream@@QAEJXZ
?vRelease@CSeekPointer@@QAEXXZ
?vdtor@CPubDocFile@@QAEXXZ
?vdtor@CRootPubDocFile@@QAEXXZ
?wAllocDdePokeBlock@@YGPADKGPAPAX@Z
?wAtomFromCLSID@@YGGABU_GUID@@@Z
?wAtomLenA@@YGHG@Z
?wAtomName@@YGPAGG@Z
?wAtomNameA@@YGPADG@Z
?wBindIfRunning@@YGXPAUIUnknown@@@Z
?wCLSIDFromOle1Class@@YGJPAGPAU_GUID@@H@Z
?wCLSIDFromOle1Class@@YGJPBGPAU_GUID@@H@Z
?wCLSIDFromString@@YGJPAGPAU_GUID@@@Z
?wClassesMatch@@YGJABU_GUID@@PAG@Z
?wClassesMatchW@@YGJABU_GUID@@PAG@Z
?wClearRelativeMoniker@@YGXPAUIUnknown@@0@Z
?wClearWaitState@@YGHPAVDDE_CHANNEL@@@Z
?wCoCreateGuid@@YGJPAU_GUID@@@Z
?wCoGetCallerTID@@YGJPAK@Z
?wCoGetClassExt@@YGJPBGPAU_GUID@@@Z
?wCoGetClassPattern@@YGJPAXPAU_GUID@@@Z
?wCoGetCurrentLogicalThreadId@@YGJPAU_GUID@@@Z
?wCoGetInterfaceAndReleaseStream@@YGJPAUIStream@@ABU_GUID@@PAPAX@Z
?wCoGetTreatAsClass@@YGJABU_GUID@@PAU1@@Z
?wCoInitializeEx@@YGJAAVCOleTls@@K@Z
?wCoIsOle1Class@@YGHABU_GUID@@@Z
?wCoMarshalHresult@@YGJPAUIStream@@J@Z
?wCoMarshalInterThreadInterfaceInStream@@YGJABU_GUID@@PAUIUnknown@@PAPAUIStream@@@Z
?wCoRegisterComBinding@@YGJPAG0K@Z
?wCoTreatAsClass@@YGJABU_GUID@@0@Z
?wCoUninitialize@@YGXAAVCOleTls@@H@Z
?wCoUnmarshalHresult@@YGJPAUIStream@@PAJ@Z
?wCommonPrefixWith@CFileMoniker@@EAGJPAUIMoniker@@PAPAU2@@Z
?wCompareDllName@@YGHPBG0K@Z
?wCompatibleClasses@@YGJGG@Z
?wConvertIStorageToOLESTREAM@@YGJPAUIStorage@@PAU_OLESTREAM@@PAVCGenericObject@@@Z
?wConvertOLESTREAMToIStorage@@YGJPAU_OLESTREAM@@PAUIStorage@@PAVCGenericObject@@@Z
?wCreateFromDataEx@@YGJPAUIDataObject@@ABU_GUID@@KKKPAKPAUtagFORMATETC@@PAUIAdviseSink@@2PAUIOleClientSite@@PAUIStorage@@PAPAX@Z
?wCreateFromFileEx@@YGJPAUIMoniker@@PAUIDataObject@@ABU_GUID@@KKKPAKPAUtagFORMATETC@@PAUIAdviseSink@@3PAUIOleClientSite@@PAUIStorage@@PAPAX@Z
?wCreateLinkEx@@YGJPAUIMoniker@@ABU_GUID@@PAUIDataObject@@1KKKPAKPAUtagFORMATETC@@PAUIAdviseSink@@3PAUIOleClientSite@@PAUIStorage@@PAPAX@Z
?wCreateObject@@YGJU_GUID@@HABU1@PAUIOleClientSite@@PAUIStorage@@GPAPAX@Z
?wCreatePackageEx@@YGJPAUIDataObject@@ABU_GUID@@KKKPAKPAUtagFORMATETC@@PAUIAdviseSink@@2PAUIOleClientSite@@PAUIStorage@@HPAPAX@Z
?wCreateStgAroundNative@@YGJPAXGGW4CNVTYP@@GPAPAUIStorage@@PAPAUILockBytes@@@Z
?wDoLockUnlock@@YGXPAUIUnknown@@@Z
?wDoUpdate@@YGJPAUIUnknown@@@Z
?wDupAtom@@YGGG@Z
?wDupData@@YGJPAPAXPAXG@Z
?wExtendAtom@@YGGGH@Z
?wFileBind@@YGJPAGPAPAUIUnknown@@@Z
?wFreeData@@YGXPAXGH@Z
?wFreePokeData@@YGXPAVDDE_CHANNEL@@H@Z
?wGUIDFromString@@YGHPBGPAU_GUID@@@Z
?wGetData@@YGJPAUIDataObject@@PAUtagFORMATETC@@PAUtagSTGMEDIUM@@@Z
?wGetEndpointsForApp@@YGJPAU_GUID@@@Z
?wGetEnumFormatEtc@@YGJPAUIDataObject@@KPAPAUIEnumFORMATETC@@@Z
?wGetExeNameAtom@@YGGABU_GUID@@@Z
?wGetFrameFilterPtr@@YGPAVCFrameFilter@@PAUHWND__@@@Z
?wGetMonikerAndClassFromFile@@YGJPBGHPAPAUIMoniker@@PAHPAU_GUID@@PAPAUIDataObject@@@Z
?wGetMonikerAndClassFromObject@@YGJPAUIDataObject@@PAPAUIMoniker@@PAU_GUID@@@Z
?wGetOleMenuPtr@@YGPAUtagOLEMENU@@PAX@Z
?wGlobalAddAtom@@YGGPBG@Z
?wGlobalAddAtomA@@YGGPBD@Z
?wHandleCopy@@YGJPAX0@Z
?wHandleFromDdeData@@YGPAXPAX@Z
?wIIDFromString@@YGJPAGPAU_GUID@@@Z
?wInitializeCacheEx@@YGJPAUIDataObject@@ABU_GUID@@KKPAKPAUtagFORMATETC@@PAUIAdviseSink@@2PAXPAH@Z
?wInitiate@@YGHPAVDDE_CHANNEL@@GG@Z
?wIsOldServer@@YGHG@Z
?wLoadAndInitObjectEx@@YGJPAUIDataObject@@ABU_GUID@@KKPAKPAUtagFORMATETC@@PAUIAdviseSink@@2PAUIOleClientSite@@PAUIStorage@@PAPAX@Z
?wNeedToPackage@@YGHABU_GUID@@@Z
?wNewHandle@@YGPAXPADK@Z
?wNormalize@@YGJPAUtagFORMATETC@@0@Z
?wOle1ClassFromCLSID2@@YGHABU_GUID@@PAGH@Z
?wPostMessageToServer@@YGHPAVDDE_CHANNEL@@GJH@Z
?wPreparePokeBlock@@YGPAXPAXGGH@Z
?wProgIDFromCLSID@@YGJABU_GUID@@PAPAG@Z
?wQueryEmbedFormats@@YGGPAUIDataObject@@PAG@Z
?wQueryFormatSupport@@YGJPAXKPAUtagFORMATETC@@@Z
?wQueryLinkFormats@@YGGPAUIDataObject@@@Z
?wQueryUseCustomLink@@YGHABU_GUID@@@Z
?wRegGetClassExt@@YGJPBGPAU_GUID@@@Z
?wRegOpenClassKey@@YGJABU_GUID@@KPAPAUHKEY__@@@Z
?wRegOpenFileExtensionKey@@YGJPBGPAPAUHKEY__@@@Z
?wRegOpenInterfaceKey@@YGJABU_GUID@@PAPAUHKEY__@@@Z
?wRegOpenProgIDKey@@YGJPBGPAPAUHKEY__@@@Z
?wRegQueryAsyncIIDFromSyncIID@@YGJABU_GUID@@PAU1@@Z
?wRegQueryClassValue@@YGJABU_GUID@@PBGPAGH@Z
?wRegQueryPSClsid@@YGJABU_GUID@@PAU1@@Z
?wRegQuerySyncIIDFromAsyncIID@@YGJABU_GUID@@PAU1@@Z
?wReturnCreationError@@YGJJ@Z
?wSaveObjectWithoutCommit@@YGJPAUIUnknown@@PAUIStorage@@H@Z
?wScanItemOptions@@YGJGPAH@Z
?wSetTymed@@YGJPAUtagFORMATETC@@@Z
?wStringFromCLSID@@YGJABU_GUID@@PAPAG@Z
?wStringFromGUID2@@YGHABU_GUID@@PAGH@Z
?wStringFromIID@@YGJABU_GUID@@PAPAG@Z
?wStringFromUUID@@YGJABU_GUID@@PAG@Z
?wStuffIconOfFileEx@@YGJPBGHKKPAUtagFORMATETC@@PAUIUnknown@@@Z
?wTerminateIsComing@@YGHPAVDDE_CHANNEL@@@Z
?wTimedGetMessage@@YGJPAUtagMSG@@PAUHWND__@@GG@Z
?wTransferHandle@@YGJPAPAX0G@Z
?wUUIDFromString@@YGHPBGPAU_GUID@@@Z
?wValidateAdvfEx@@YGJKPAK@Z
?wValidateCreateParams@@YGJKKKPAKPAUtagFORMATETC@@PAUIAdviseSink@@0PAUIOleClientSite@@PAUIStorage@@@Z
?wValidateFormatEtc@@YGJKPAUtagFORMATETC@@0@Z
?wValidateFormatEtcEx@@YGJKPAKPAUtagFORMATETC@@1PAPAU1@PAH@Z
?wVerifyFormatEtc@@YGJPAUtagFORMATETC@@@Z
?wWriteFmtUserType@@YGJPAUIStorage@@ABU_GUID@@@Z
?wkProgIDFromCLSID@@YGJABU_GUID@@PAPAG@Z
@RtlCommitSmartLBlobUcsWritingContext@4
@RtlCommitSmartLBlobWritingContext@4
@RtlDecodeUtf16LE@8
@RtlEncodeUtf16LE@12
@RtlFinalizeSmartLBlobUcsWritingContext@4
@RtlFinalizeSmartLBlobWritingContext@4
@RtlFreeLBlob@4
@RtlIsLBlobValid@4
@RtlIsLUnicodeStringValid@4
@RtlPreInitializeSmartLBlobUcsWritingContext@4
@RtlPreInitializeSmartLBlobWritingContext@4
@RtlSmartMultiUcsEncoder_Utf16LE@12
@RtlSmartUcsEncoder_Utf16LE@8
@RtlWriteDataIntoSmartLBlobWritingContext@8
@__security_check_cookie@4
_ASYNC_STGMEDIUM_UserFree@8
_ASYNC_STGMEDIUM_UserMarshal@12
_ASYNC_STGMEDIUM_UserSize@12
_ASYNC_STGMEDIUM_UserUnmarshal@12
_ActivationContextInfoData_AlignSize@8
_ActivationContextInfoData_Decode@8
_ActivationContextInfoData_Encode@8
_AllocateReservedIds@20
_AssignEndpointProperty@8
_AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy@8
_AsyncIAdviseSink2_Begin_OnLinkSrcChange_Stub@8
_AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy@8
_AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Thunk@4
_AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy@4
_AsyncIAdviseSink2_Finish_OnLinkSrcChange_Stub@4
_AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy@4
_AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Thunk@4
_AsyncIAdviseSink_Begin_OnClose_Proxy@4
_AsyncIAdviseSink_Begin_OnClose_Stub@4
_AsyncIAdviseSink_Begin_OnDataChange_Proxy@12
_AsyncIAdviseSink_Begin_OnDataChange_Stub@12
_AsyncIAdviseSink_Begin_OnRename_Proxy@8
_AsyncIAdviseSink_Begin_OnRename_Stub@8
_AsyncIAdviseSink_Begin_OnSave_Proxy@4
_AsyncIAdviseSink_Begin_OnSave_Stub@4
_AsyncIAdviseSink_Begin_OnViewChange_Proxy@12
_AsyncIAdviseSink_Begin_OnViewChange_Stub@12
_AsyncIAdviseSink_Begin_RemoteOnClose_Proxy@4
_AsyncIAdviseSink_Begin_RemoteOnClose_Thunk@4
_AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy@12
_AsyncIAdviseSink_Begin_RemoteOnDataChange_Thunk@4
_AsyncIAdviseSink_Begin_RemoteOnRename_Proxy@8
_AsyncIAdviseSink_Begin_RemoteOnRename_Thunk@4
_AsyncIAdviseSink_Begin_RemoteOnSave_Proxy@4
_AsyncIAdviseSink_Begin_RemoteOnSave_Thunk@4
_AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy@12
_AsyncIAdviseSink_Begin_RemoteOnViewChange_Thunk@4
_AsyncIAdviseSink_Finish_OnClose_Proxy@4
_AsyncIAdviseSink_Finish_OnClose_Stub@4
_AsyncIAdviseSink_Finish_OnDataChange_Proxy@4
_AsyncIAdviseSink_Finish_OnDataChange_Stub@4
_AsyncIAdviseSink_Finish_OnRename_Proxy@4
_AsyncIAdviseSink_Finish_OnRename_Stub@4
_AsyncIAdviseSink_Finish_OnSave_Proxy@4
_AsyncIAdviseSink_Finish_OnSave_Stub@4
_AsyncIAdviseSink_Finish_OnViewChange_Proxy@4
_AsyncIAdviseSink_Finish_OnViewChange_Stub@4
_AsyncIAdviseSink_Finish_RemoteOnClose_Proxy@4
_AsyncIAdviseSink_Finish_RemoteOnClose_Thunk@4
_AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy@4
_AsyncIAdviseSink_Finish_RemoteOnDataChange_Thunk@4
_AsyncIAdviseSink_Finish_RemoteOnRename_Proxy@4
_AsyncIAdviseSink_Finish_RemoteOnRename_Thunk@4
_AsyncIAdviseSink_Finish_RemoteOnSave_Proxy@4
_AsyncIAdviseSink_Finish_RemoteOnSave_Thunk@4
_AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy@4
_AsyncIAdviseSink_Finish_RemoteOnViewChange_Thunk@4
_BSTR_UserFree@8
_BSTR_UserMarshal@12
_BSTR_UserSize@12
_BSTR_UserUnmarshal@12
_BindMoniker@16
_BulkUpdateOIDs@52
_CLIPFORMAT_UserFree@8
_CLIPFORMAT_UserMarshal@12
_CLIPFORMAT_UserSize@12
_CLIPFORMAT_UserUnmarshal@12
_CLSIDFromOle1Class@12
_CLSIDFromProgID@8
_CLSIDFromProgIDEx@8
_CLSIDFromString@8
_CStdStubBuffer_AddRef@4
_CStdStubBuffer_Connect@8
_CStdStubBuffer_CountRefs@4
_CStdStubBuffer_DebugServerQueryInterface@8
_CStdStubBuffer_DebugServerRelease@8
_CStdStubBuffer_Disconnect@4
_CStdStubBuffer_Invoke@12
_CStdStubBuffer_IsIIDSupported@8
_CStdStubBuffer_QueryInterface@12
_CStdStubBuffer_Release@4
_CUSTMACT_MIDL_user_allocate@4
_CUSTMACT_MIDL_user_free@4
_CallFrameInternal_CStdStubBuffer_Release@4
_ChannelProcessInitialize@0
_ChannelProcessUninitialize@0
_ChannelThreadUninitialize@0
_ClientDocWndProc@16
_ClientResolveOXID@40
_ClipboardWndProc@16
_CoAddRefServerProcess@0
_CoAllowSetForegroundWindow@8
_CoBuildVersion@0
_CoCancelCall@8
_CoCopyProxy@8
_CoCreateErrorInfo@4
_CoCreateFreeThreadedMarshaler@8
_CoCreateGuid@4
_CoCreateInstance@20
_CoCreateInstanceEx@24
_CoCreateObjectInContext@16
_CoDeactivateObject@8
_CoDisableCallCancellation@4
_CoDisconnectContext@4
_CoDisconnectObject@8
_CoDosDateTimeToFileTime@12
_CoEnableCallCancellation@4
_CoFileTimeNow@4
_CoFileTimeToDosDateTime@12
_CoFreeAllLibraries@0
_CoFreeLibrary@4
_CoFreeUnusedLibraries@0
_CoFreeUnusedLibrariesEx@8
_CoGetActivationState@24
_CoGetApartmentID@8
_CoGetCallContext@8
_CoGetCallState@8
_CoGetCallerTID@4
_CoGetCancelObject@12
_CoGetClassObject@20
_CoGetClassVersion@12
_CoGetContextToken@4
_CoGetCurrentLogicalThreadId@4
_CoGetCurrentProcess@0
_CoGetDefaultContext@12
_CoGetErrorInfo@8
_CoGetInstanceFromFile@32
_CoGetInstanceFromIStorage@28
_CoGetInterceptor@16
_CoGetInterceptorForOle32@16
_CoGetInterceptorFromTypeInfo@20
_CoGetInterfaceAndReleaseStream@12
_CoGetMalloc@8
_CoGetMarshalSizeMax@24
_CoGetModuleType@8
_CoGetObject@16
_CoGetObjectContext@8
_CoGetPSClsid@8
_CoGetProcessIdentifier@4
_CoGetStandardMarshal@24
_CoGetStdMarshalEx@12
_CoGetSystemSecurityPermissions@8
_CoGetTreatAsClass@8
_CoImpersonateClient@0
_CoInitialize@4
_CoInitializeEx@8
_CoInitializeSecurity@36
_CoInitializeWOW@8
_CoInstall@20
_CoInvalidateRemoteMachineBindings@4
_CoIsHandlerConnected@4
_CoIsHashedOle1Class@4
_CoIsOle1Class@4
_CoIsSurrogateProcess@0
_CoLoadLibrary@8
_CoLockObjectExternal@12
_CoMarshalHresult@8
_CoMarshalInterThreadInterfaceInStream@12
_CoMarshalInterface@24
_CoOpenClassKey@12
_CoPopServiceDomain@4
_CoPushServiceDomain@4
_CoQueryAuthenticationServices@8
_CoQueryClientBlanket@28
_CoQueryProxyBlanket@32
_CoQueryReleaseObject@4
_CoReactivateObject@8
_CoRegisterChannelHook@8
_CoRegisterClassObject@20
_CoRegisterInitializeSpy@8
_CoRegisterMallocSpy@4
_CoRegisterMessageFilter@8
_CoRegisterPSClsid@8
_CoRegisterSurrogate@4
_CoRegisterSurrogateEx@8
_CoRegisterSurrogatedObject@4
_CoReleaseMarshalData@4
_CoReleaseServerProcess@0
_CoResumeClassObjects@0
_CoRetireServer@4
_CoRevertToSelf@0
_CoRevokeClassObject@4
_CoRevokeInitializeSpy@8
_CoRevokeMallocSpy@0
_CoSetCancelObject@4
_CoSetErrorInfo@8
_CoSetProxyBlanket@32
_CoSetState@4
_CoStdMarshalObject@28
_CoSuspendClassObjects@0
_CoSwitchCallContext@8
_CoTaskMemAlloc@4
_CoTaskMemFree@4
_CoTaskMemRealloc@8
_CoTestCancel@0
_CoTreatAsClass@8
_CoUninitialize@0
_CoUnloadingWOW@4
_CoUnmarshalHresult@8
_CoUnmarshalInterface@12
_CoWaitForMultipleHandles@20
_ComPs_NdrDllCanUnloadNow@4
_ComPs_NdrDllGetClassObject@24
_ComPs_NdrDllRegisterProxy@20
_ComPs_NdrDllUnregisterProxy@20
_ComcatDllRegisterServer@0
_CommandLineFromMsiDescriptor@12
_Concatenate@12
_Connect@108
_ControlTracingForProcess@20
_ConvertSidToStringSidW@8
_CreateAntiMoniker@4
_CreateBindCtx@8
_CreateCallback@12
_CreateClassMoniker@8
_CreateDataAdviseHolder@4
_CreateDataCache@16
_CreateFileMoniker@8
_CreateGenericComposite@12
_CreateILockBytesOnHGlobal@12
_CreateIdentityHandler@24
_CreateItemMoniker@12
_CreateMemStm@8
_CreateObjrefMoniker@8
_CreateOle1FileMoniker@12
_CreateOleAdviseHolder@4
_CreatePackagerMoniker@12
_CreatePackagerMonikerEx@16
_CreatePointerMoniker@8
_CreateRegistryKey@12
_CreateStdProgressIndicator@16
_CreateStreamOnHGlobal@12
_CustomHeader_AlignSize@8
_CustomHeader_Decode@8
_CustomHeader_Encode@8
_DbgPrint
_DcomChannelSetHResult@12
_DdeCommonWndProc@16
_DebugORPCClientFillBuffer@32
_DebugORPCClientGetBufferSize@24
_DebugORPCClientNotify@36
_DebugORPCRestoreAuto@0
_DebugORPCServerFillBuffer@36
_DebugORPCServerGetBufferSize@28
_DebugORPCServerNotify@36
_DebugORPCSetAuto@0
_DelayLoadFailureHook@8
_DeleteRegistryKey@4
_DeleteRegistryValue@8
_DfCreateDocfile@24
_DfGetClass@8
_DfOpenDocfile@32
_DfOpenStorageEx@36
_DfUnMarshalInterface@16
_DialogProc@16
_DisableNewWM_PAINTDispatch@0
_DisallowDynamicORBindingChanges@0
_Disconnect@8
_DllDebugObjectRPCHook@8
_DllGetClassObject@12
_DllMain@12
_DllRegisterServer@0
_DoDragDrop@16
_DocWndProc@16
_DocfileUseLegacyNtfsFlags@0
_DragDropSetFDT@4
_EnableDisableDynamicIPTracking@16
_EnableHookObject@8
_EnumerateRegistryKeys@12
_ExportedIsValidPtrIn@8
_FLAG_STGMEDIUM_UserFree@8
_FLAG_STGMEDIUM_UserMarshal@12
_FLAG_STGMEDIUM_UserSize@12
_FLAG_STGMEDIUM_UserUnmarshal@12
_FindClassID@12
_FindClassMoniker@16
_FindFileMoniker@16
_FindLUAMoniker@16
_FindProgIdMoniker@16
_FindSessionMoniker@16
_FlushSCMBindings@16
_FmtIdToPropStgName@8
_FrameWndFilterProc@16
_FreeDDElParam@8
_FreePropVariantArray@8
_FreePropVariantArrayWorker@12
_GUIDFromString@8
_GetActivationPropertiesIn@36
_GetCatalogHelper@8
_GetCatalogObject2@8
_GetCatalogObject@8
_GetClassFile@8
_GetClassFileEx@12
_GetConvertStg@4
_GetCurrentAddrExclusionList@20
_GetDocumentBitStg@4
_GetHGlobalFromILockBytes@8
_GetHGlobalFromStream@8
_GetHookInterface@4
_GetInProcFreeMarshaler@4
_GetInterfaceFromWindowProp@16
_GetRegistryValue@16
_GetRunningObjectTable@8
_GetSafeAllocSize@0
_GetThreadID@16
_GetVtablePointer@4
_GetWindowPropInterface@32
_HACCEL_UserFree@8
_HACCEL_UserMarshal@12
_HACCEL_UserSize@12
_HACCEL_UserUnmarshal@12
_HBITMAP_UserFree@8
_HBITMAP_UserMarshal@12
_HBITMAP_UserSize@12
_HBITMAP_UserUnmarshal@12
_HBRUSH_UserFree@8
_HBRUSH_UserMarshal@12
_HBRUSH_UserSize@12
_HBRUSH_UserUnmarshal@12
_HDC_UserFree@8
_HDC_UserMarshal@12
_HDC_UserSize@12
_HDC_UserUnmarshal@12
_HENHMETAFILE_UserFree@8
_HENHMETAFILE_UserMarshal@12
_HENHMETAFILE_UserSize@12
_HENHMETAFILE_UserUnmarshal@12
_HGLOBAL_UserFree@8
_HGLOBAL_UserMarshal@12
_HGLOBAL_UserSize@12
_HGLOBAL_UserUnmarshal@12
_HICON_UserFree@8
_HICON_UserMarshal@12
_HICON_UserSize@12
_HICON_UserUnmarshal@12
_HMENU_UserFree@8
_HMENU_UserMarshal@12
_HMENU_UserSize@12
_HMENU_UserUnmarshal@12
_HMETAFILEPICT_UserFree@8
_HMETAFILEPICT_UserMarshal@12
_HMETAFILEPICT_UserSize@12
_HMETAFILEPICT_UserUnmarshal@12
_HMETAFILE_UserFree@8
_HMETAFILE_UserMarshal@12
_HMETAFILE_UserSize@12
_HMETAFILE_UserUnmarshal@12
_HPALETTE_UserFree@8
_HPALETTE_UserMarshal@12
_HPALETTE_UserSize@12
_HPALETTE_UserUnmarshal@12
_HWND_UserFree@8
_HWND_UserMarshal@12
_HWND_UserSize@12
_HWND_UserUnmarshal@12
_HkOleRegisterObject@16
_HrNt@4
_IAdviseSink2_OnLinkSrcChange_Proxy@8
_IAdviseSink2_OnLinkSrcChange_Stub@8
_IAdviseSink2_RemoteOnLinkSrcChange_Proxy@8
_IAdviseSink2_RemoteOnLinkSrcChange_Thunk@4
_IAdviseSink_OnClose_Proxy@4
_IAdviseSink_OnClose_Stub@4
_IAdviseSink_OnDataChange_Proxy@12
_IAdviseSink_OnDataChange_Stub@12
_IAdviseSink_OnRename_Proxy@8
_IAdviseSink_OnRename_Stub@8
_IAdviseSink_OnSave_Proxy@4
_IAdviseSink_OnSave_Stub@4
_IAdviseSink_OnViewChange_Proxy@12
_IAdviseSink_OnViewChange_Stub@12
_IAdviseSink_RemoteOnClose_Proxy@4
_IAdviseSink_RemoteOnClose_Thunk@4
_IAdviseSink_RemoteOnDataChange_Proxy@12
_IAdviseSink_RemoteOnDataChange_Thunk@4
_IAdviseSink_RemoteOnRename_Proxy@8
_IAdviseSink_RemoteOnRename_Thunk@4
_IAdviseSink_RemoteOnSave_Proxy@4
_IAdviseSink_RemoteOnSave_Thunk@4
_IAdviseSink_RemoteOnViewChange_Proxy@12
_IAdviseSink_RemoteOnViewChange_Thunk@4
_IBindCtx_GetBindOptions_Proxy@8
_IBindCtx_GetBindOptions_Stub@8
_IBindCtx_RemoteGetBindOptions_Proxy@8
_IBindCtx_RemoteGetBindOptions_Thunk@4
_IBindCtx_RemoteSetBindOptions_Proxy@8
_IBindCtx_RemoteSetBindOptions_Thunk@4
_IBindCtx_SetBindOptions_Proxy@8
_IBindCtx_SetBindOptions_Stub@8
_IClassFactory_CreateInstance_Proxy@16
_IClassFactory_CreateInstance_Stub@12
_IClassFactory_LockServer_Proxy@8
_IClassFactory_LockServer_Stub@8
_IClassFactory_RemoteCreateInstance_Proxy@12
_IClassFactory_RemoteCreateInstance_Thunk@4
_IClassFactory_RemoteLockServer_Thunk@4
_IDataObject_GetDataHere_Proxy@12
_IDataObject_GetDataHere_Stub@12
_IDataObject_GetData_Proxy@12
_IDataObject_GetData_Stub@12
_IDataObject_RemoteGetDataHere_Proxy@12
_IDataObject_RemoteGetDataHere_Thunk@4
_IDataObject_RemoteGetData_Proxy@12
_IDataObject_RemoteGetData_Thunk@4
_IDataObject_RemoteSetData_Proxy@16
_IDataObject_RemoteSetData_Thunk@4
_IDataObject_SetData_Proxy@16
_IDataObject_SetData_Stub@16
_IDispatch_Invoke_Proxy@36
_IDispatch_Invoke_Stub@48
_IDispatch_RemoteInvoke_Thunk@4
_IEnumConnectionPoints_Next_Proxy@16
_IEnumConnectionPoints_Next_Stub@16
_IEnumConnectionPoints_RemoteNext_Proxy@16
_IEnumConnectionPoints_RemoteNext_Thunk@4
_IEnumConnections_Next_Proxy@16
_IEnumConnections_Next_Stub@16
_IEnumConnections_RemoteNext_Proxy@16
_IEnumConnections_RemoteNext_Thunk@4
_IEnumFORMATETC_Next_Proxy@16
_IEnumFORMATETC_Next_Stub@16
_IEnumFORMATETC_RemoteNext_Proxy@16
_IEnumFORMATETC_RemoteNext_Thunk@4
_IEnumMoniker_Next_Proxy@16
_IEnumMoniker_Next_Stub@16
_IEnumMoniker_RemoteNext_Proxy@16
_IEnumMoniker_RemoteNext_Thunk@4
_IEnumOLEVERB_Next_Proxy@16
_IEnumOLEVERB_Next_Stub@16
_IEnumOLEVERB_RemoteNext_Proxy@16
_IEnumOLEVERB_RemoteNext_Thunk@4
_IEnumSTATDATA_Next_Proxy@16
_IEnumSTATDATA_Next_Stub@16
_IEnumSTATDATA_RemoteNext_Proxy@16
_IEnumSTATDATA_RemoteNext_Thunk@4
_IEnumSTATPROPSETSTG_Next_Proxy@16
_IEnumSTATPROPSETSTG_Next_Stub@16
_IEnumSTATPROPSETSTG_RemoteNext_Proxy@16
_IEnumSTATPROPSETSTG_RemoteNext_Thunk@4
_IEnumSTATPROPSTG_Next_Proxy@16
_IEnumSTATPROPSTG_Next_Stub@16
_IEnumSTATPROPSTG_RemoteNext_Proxy@16
_IEnumSTATPROPSTG_RemoteNext_Thunk@4
_IEnumSTATSTG_Next_Proxy@16
_IEnumSTATSTG_Next_Stub@16
_IEnumSTATSTG_RemoteNext_Proxy@16
_IEnumSTATSTG_RemoteNext_Thunk@4
_IEnumString_Next_Proxy@16
_IEnumString_Next_Stub@16
_IEnumString_RemoteNext_Proxy@16
_IEnumString_RemoteNext_Thunk@4
_IEnumUnknown_Next_Proxy@16
_IEnumUnknown_Next_Stub@16
_IEnumUnknown_RemoteNext_Proxy@16
_IEnumUnknown_RemoteNext_Thunk@4
_IFillLockBytes_FillAppend_Proxy@16
_IFillLockBytes_FillAppend_Stub@16
_IFillLockBytes_FillAt_Proxy@24
_IFillLockBytes_FillAt_Stub@24
_IFillLockBytes_RemoteFillAppend_Proxy@16
_IFillLockBytes_RemoteFillAppend_Thunk@4
_IFillLockBytes_RemoteFillAt_Proxy@24
_IFillLockBytes_RemoteFillAt_Thunk@4
_IIDFromString@8
_ILockBytes_ReadAt_Proxy@24
_ILockBytes_ReadAt_Stub@24
_ILockBytes_RemoteReadAt_Proxy@24
_ILockBytes_RemoteReadAt_Thunk@4
_ILockBytes_RemoteWriteAt_Proxy@24
_ILockBytes_RemoteWriteAt_Thunk@4
_ILockBytes_WriteAt_Proxy@24
_ILockBytes_WriteAt_Stub@24
_IMoniker_BindToObject_Proxy@20
_IMoniker_BindToObject_Stub@20
_IMoniker_BindToStorage_Proxy@20
_IMoniker_BindToStorage_Stub@20
_IMoniker_RemoteBindToObject_Proxy@20
_IMoniker_RemoteBindToObject_Thunk@4
_IMoniker_RemoteBindToStorage_Proxy@20
_IMoniker_RemoteBindToStorage_Thunk@4
_IOleCache2_RemoteUpdateCache_Proxy@16
_IOleCache2_RemoteUpdateCache_Thunk@4
_IOleCache2_UpdateCache_Proxy@16
_IOleCache2_UpdateCache_Stub@16
_IOleInPlaceActiveObject_RemoteResizeBorder_Proxy@20
_IOleInPlaceActiveObject_RemoteResizeBorder_Thunk@4
_IOleInPlaceActiveObject_RemoteTranslateAccelerator_Thunk@4
_IOleInPlaceActiveObject_ResizeBorder_Proxy@16
_IOleInPlaceActiveObject_ResizeBorder_Stub@20
_IOleInPlaceActiveObject_TranslateAccelerator_Proxy@8
_IOleInPlaceActiveObject_TranslateAccelerator_Stub@4
_IRunnableObject_IsRunning_Proxy@4
_IRunnableObject_IsRunning_Stub@4
_IRunnableObject_RemoteIsRunning_Proxy@4
_IRunnableObject_RemoteIsRunning_Thunk@4
_ISequentialStream_Read_Proxy@16
_ISequentialStream_Read_Stub@16
_ISequentialStream_RemoteRead_Proxy@16
_ISequentialStream_RemoteRead_Thunk@4
_ISequentialStream_RemoteWrite_Proxy@16
_ISequentialStream_RemoteWrite_Thunk@4
_ISequentialStream_Write_Proxy@16
_ISequentialStream_Write_Stub@16
_IStorage_CopyTo_Proxy@20
_IStorage_CopyTo_Stub@20
_IStorage_EnumElements_Proxy@20
_IStorage_EnumElements_Stub@24
_IStorage_OpenStream_Proxy@24
_IStorage_OpenStream_Stub@28
_IStorage_RemoteCopyTo_Proxy@20
_IStorage_RemoteCopyTo_Thunk@4
_IStorage_RemoteEnumElements_Proxy@24
_IStorage_RemoteEnumElements_Thunk@4
_IStorage_RemoteOpenStream_Proxy@28
_IStorage_RemoteOpenStream_Thunk@4
_IStream_CopyTo_Proxy@24
_IStream_CopyTo_Stub@24
_IStream_RemoteCopyTo_Proxy@24
_IStream_RemoteCopyTo_Thunk@4
_IStream_RemoteSeek_Proxy@20
_IStream_RemoteSeek_Thunk@4
_IStream_Seek_Proxy@20
_IStream_Seek_Stub@20
_IUnknown_AddRef_Proxy@4
_IUnknown_QueryInterface_Proxy@12
_IUnknown_Release_Proxy@4
_IViewObject_Draw_Proxy@44
_IViewObject_Draw_Stub@40
_IViewObject_Freeze_Proxy@20
_IViewObject_Freeze_Stub@20
_IViewObject_GetAdvise_Proxy@16
_IViewObject_GetAdvise_Stub@16
_IViewObject_GetColorSet_Proxy@28
_IViewObject_GetColorSet_Stub@28
_IViewObject_RemoteContinue@4
_IViewObject_RemoteDraw_Proxy@40
_IViewObject_RemoteDraw_Thunk@4
_IViewObject_RemoteFreeze_Proxy@20
_IViewObject_RemoteFreeze_Thunk@4
_IViewObject_RemoteGetAdvise_Proxy@16
_IViewObject_RemoteGetAdvise_Thunk@4
_IViewObject_RemoteGetColorSet_Proxy@28
_IViewObject_RemoteGetColorSet_Thunk@4
_I_RpcAsyncAbortCall@8
_I_RpcAsyncSetHandle@8
_I_RpcExceptionFilter@4
_InlineIsEqualGUID@8
_InstallApplication@4
_InstanceInfoData_AlignSize@8
_InstanceInfoData_Decode@8
_InstanceInfoData_Encode@8
_InstantiationInfoData_AlignSize@8
_InstantiationInfoData_Decode@8
_InstantiationInfoData_Encode@8
_InternalGetLongPathNameW@12
_InternalVerifyStackAvailable@4
_IrotEnumRunning@20
_IrotGetObject@32
_IrotGetTimeOfLastChange@24
_IrotIsRunning@20
_IrotNoteChangeTime@20
_IrotRegister@44
_IrotRevoke@24
_IsAccelerator@16
_IsClient@4
_IsEqualGUID@8
_IsInOut@4
_IsInterfaceImplementedByProxy@4
_IsObjectCreationAllowed@36
_IsStdIdentity@4
_IsValidIid@4
_IsValidInterface@4
_LPSAFEARRAY_Marshal@16
_LPSAFEARRAY_Size@16
_LPSAFEARRAY_Unmarshal@16
_LPSAFEARRAY_UserFree@8
_LPSAFEARRAY_UserMarshal@12
_LPSAFEARRAY_UserSize@12
_LPSAFEARRAY_UserUnmarshal@12
_LoadTypeLibEx@12
_LocationInfoData_AlignSize@8
_LocationInfoData_Decode@8
_LocationInfoData_Encode@8
_MGetDDElParamHi@8
_MGetDDElParamLo@8
_MIDL_user_allocate@4
_MIDL_user_free@4
_MKVDefaultHashKey@8
_MakeVerbList@12
_MesBufferHandleReset@24
_MesDecodeBufferHandleCreate@12
_MesEncodeFixedBufferHandleCreate@16
_MesHandleFree@4
_MessageFilterProc@12
_MkParseDisplayName@16
_MonikerCommonPrefixWith@12
_MonikerRelativePathTo@16
_MsiSetInternalUI@8
_NdrAsyncServerCall@4
_NdrCStdStubBuffer_Release@8
_NdrClientCall2
_NdrCreateServerInterfaceFromStub@8
_NdrDcomAsyncClientCall
_NdrGetSimpleTypeBufferAlignment@4
_NdrGetSimpleTypeBufferSize@4
_NdrGetSimpleTypeMemorySize@4
_NdrGetTypeFlags@4
_NdrGetUserMarshalInfo@12
_NdrMesTypeAlignSize2@20
_NdrMesTypeDecode2@20
_NdrMesTypeEncode2@20
_NdrOleAllocate@4
_NdrOleFree@4
_NdrOutInit@12
_NdrServerCall2@4
_NdrTypeMarshall@12
_NdrTypeSize@12
_NdrTypeUnmarshall@16
_NdrUnmarshallBasetypeInline@12
_NdrpGetProcFormatString@24
_NdrpGetTypeFormatString@12
_NdrpGetTypeGenCookie@4
_NdrpMemoryIncrement@12
_NdrpReleaseTypeFormatString@4
_NdrpReleaseTypeGenCookie@4
_NdrpVarVtOfTypeDesc@12
_NotifyDDStartOrStop@16
_NukeHandleAndReleasePunk@4
_OACleanup@0
_ObjactThreadUninitialize@0
_ObjrefDllRegisterServer@0
_Ole1ClassFromCLSID2@12
_OleConvertIStorageToOLESTREAM@8
_OleConvertIStorageToOLESTREAMEx@28
_OleConvertOLESTREAMToIStorage@12
_OleConvertOLESTREAMToIStorageEx@28
_OleCreate@28
_OleCreateDefaultHandler@16
_OleCreateEmbeddingHelper@24
_OleCreateEx@48
_OleCreateFromData@28
_OleCreateFromDataEx@48
_OleCreateFromFile@32
_OleCreateFromFileEx@52
_OleCreateLink@28
_OleCreateLinkEx@48
_OleCreateLinkFromData@28
_OleCreateLinkFromDataEx@48
_OleCreateLinkToFile@28
_OleCreateLinkToFileEx@48
_OleCreateMenuDescriptor@8
_OleCreateStaticFromData@28
_OleDestroyMenuDescriptor@4
_OleDoAutoConvert@8
_OleDraw@16
_OleDuplicateData@12
_OleFlushClipboard@0
_OleGetAutoConvert@8
_OleGetClipboard@4
_OleGetIconOfClass@12
_OleGetIconOfFile@8
_OleInitialize@4
_OleInitializeEx@8
_OleInitializeWOW@8
_OleIsCurrentClipboard@4
_OleIsDcMeta@4
_OleIsRunning@4
_OleLoad@16
_OleLoadFromStream@12
_OleLockRunning@12
_OleMetafilePictFromIconAndLabel@16
_OleNoteObjectVisible@8
_OleQueryCreateFromData@4
_OleQueryLinkFromData@4
_OleRegEnumFormatEtc@12
_OleRegEnumVerbs@8
_OleRegGetMiscStatus@12
_OleRegGetUserType@12
_OleReleaseEnumVerbCache@0
_OleRun@4
_OleSave@12
_OleSaveToStream@8
_OleSetAutoConvert@8
_OleSetClipboard@4
_OleSetContainedObject@8
_OleSetMenuDescriptor@20
_OleStdGetAuxUserType@20
_OleStdGetUserTypeOfClass@16
_OleTranslateAccelerator@12
_OleUninitialize@0
_OpenClassesRootKeyA@8
_OpenClassesRootKeyExA@12
_OpenClassesRootKeyExW@12
_OpenClassesRootKeyW@8
_OpenOrCreateStream@12
_OpenRegistryKey@20
_OrpcBreakpointFilter@8
_PackDDElParam@12
_Parse10DisplayName@20
_PrGuidToPropertySetName@8
_PrivAsyncGetClassBits@44
_PrivRegisterBindStatusCallback@16
_PrivRevokeBindStatusCallback@8
_ProcessActivatorInitializing@12
_ProcessActivatorPaused@12
_ProcessActivatorReady@12
_ProcessActivatorResumed@12
_ProcessActivatorStarted@16
_ProcessActivatorStopped@12
_ProcessActivatorUserInitializing@12
_ProgIDFromCLSID@8
_PropStgNameToFmtId@8
_PropSysAllocString@4
_PropSysFreeString@4
_PropVariantClear@4
_PropVariantClearWorker@8
_PropVariantCopy@8
_PropsOutInfo_AlignSize@8
_PropsOutInfo_Decode@8
_PropsOutInfo_Encode@8
_ProxyDllGetClassObject@12
_PrxDllGetClassObject@12
_PrxDllRegisterServer@0
_QueryClassesRootValueA@12
_QueryClassesRootValueW@12
_QueryDragDropActive@16
_QueryPIDForActivation@36
_ReadClassStg@8
_ReadClassStm@8
_ReadClipformatStm@8
_ReadFmtProgIdStg@8
_ReadFmtUserTypeStg@12
_ReadM1ClassStm@8
_ReadM1ClassStmBuf@8
_ReadMonikerStm@8
_ReadOleStg@24
_ReadStringStream@8
_ReadStringStreamA@8
_RegisterDragDrop@8
_RegisterInterfaceName@8
_RegisterWindowPropInterface@32
_ReleaseMemStm@8
_ReleaseStgMedium@4
_ResolverNotifyDDStartOrStop@4
_RetireServer@16
_RevokeDragDrop@4
_RtlApplicationVerifierStop@40
_RtlBase64EncodeLBlobToLUnicodeString@20
_RtlDecodeBase64LUnicodeStringToLBlob@20
_RtlInitializeSmartLBlobWritingContext@24
_RtlInitializeSmartLUnicodeStringWritingContext@20
_RtlReallocateLBlob@12
_RtlReportErrorOrigination@12
_RtlWriteDecodedUcsDataIntoSmartLBlobUcsWritingContext@16
_RtlWriteUcsDataIntoSmartLBlobUcsWritingContext@16
_RunningIn16bit@0
_SHATransform@8
_SHATransformP3@8
_SNB_UserFree@8
_SNB_UserMarshal@12
_SNB_UserSize@12
_SNB_UserUnmarshal@12
_STGMEDIUM_UserFree@8
_STGMEDIUM_UserMarshal@12
_STGMEDIUM_UserSize@12
_STGMEDIUM_UserUnmarshal@12
_STREAM_ACL_Decode@8
_STREAM_ACL_Encode@8
_STREAM_HEADER_Decode@8
_STREAM_HEADER_Encode@8
_SafeAllocaAllocateFromHeap@4
_SafeAllocaFreeToHeap@4
_SafeAllocaInitialize@16
_SafeArrayAllocData@4
_SafeArrayAllocDescriptor@8
_SafeArrayAllocDescriptorEx@12
_SafeArrayDestroy@4
_ScmReplyInfoData_AlignSize@8
_ScmReplyInfoData_Decode@8
_ScmReplyInfoData_Encode@8
_ScmRequestInfoData_AlignSize@8
_ScmRequestInfoData_Decode@8
_ScmRequestInfoData_Encode@8
_SecurityInfoData_AlignSize@8
_SecurityInfoData_Decode@8
_SecurityInfoData_Encode@8
_ServerAllocateOIDs@32
_ServerAllocateOXIDAndOIDs@48
_ServerFreeOXIDAndOIDs@24
_ServerRegisterClsid@20
_ServerRevokeClsid@16
_SetAddrExclusionList@20
_SetAppID@24
_SetClassesRootValueW@16
_SetConvertStg@8
_SetDocumentBitStg@8
_SetOrRevokeForcedDropTarget@20
_ShutdownCallFrame@0
_ShutdownTxfAux@0
_SpecialPropertiesData_AlignSize@8
_SpecialPropertiesData_Decode@8
_SpecialPropertiesData_Encode@8
_SrvrWndProc@16
_StartListen@0
_StgConvertPropertyToVariant@16
_StgConvertPropertyToVariantNoEH@24
_StgConvertVariantToProperty@28
_StgCreateDocfile@16
_StgCreateDocfileOnILockBytes@16
_StgCreatePropSetStg@12
_StgCreatePropStg@24
_StgCreateStorageEx@32
_StgGetIFillLockBytesOnFile@8
_StgGetIFillLockBytesOnILockBytes@8
_StgIsStorageFile@4
_StgIsStorageFileHandle@8
_StgIsStorageILockBytes@4
_StgOpenAsyncDocfileOnIFillLockBytes@16
_StgOpenPropStg@20
_StgOpenStorage@24
_StgOpenStorageEx@32
_StgOpenStorageOnHandle@24
_StgOpenStorageOnILockBytes@24
_StgPropertyLengthAsVariant@16
_StgSetTimes@16
_StopThread@4
_Storage32DllRegisterServer@0
_StringFromCLSID@8
_StringFromGUID2@12
_StringFromIID@8
_SysAllocStringByteLen@8
_SysFreeString@4
_SysStringByteLen@4
_SysWndProc@16
_ThreadNotification@12
_TraceMessage
_TxfDllMain@12
_TxfDllRegisterServer@0
_ULongAdd@12
_UnAssignEndpointProperty@12
_UnpackDDElParam@16
_UpdateActivationSettings@12
_UpdateDCOMSettings@0
_UpdateProcessTracing@8
_UseFTMFromCurrentApartment@0
_UtConvertDvtd16toDvtd32@12
_UtConvertDvtd32toDvtd16@12
_UtDoStreamOperation@16
_UtGetDvtd16Info@8
_UtGetDvtd32Info@8
_VARIANT_UserFree@8
_VARIANT_UserMarshal@12
_VARIANT_UserSize@12
_VARIANT_UserUnmarshal@12
_ValidateInPointers@0
_ValidateInterfaces@0
_ValidateOutPointers@0
_VariantClear@4
_VariantCopy@8
_VariantInit@4
_VerifyStackAvailable@4
_WNetGetConnectionW@12
_WNetGetUniversalNameW@16
_WPP_INIT_CONTROL_ARRAY@4
_WPP_SF_@16
_WPP_SF_D@20
_WPP_SF_DD@24
_WPP_SF_Dd_guid_d@32
_WPP_SF_ID@28
_WPP_SF_I_guid__guid_d@36
_WPP_SF_Idd@32
_WPP_SF_SD@24
_WPP_SF_SS@24
_WPP_SF_SSD@28
_WPP_SF_SSS@28
_WPP_SF_SSSS@32
_WPP_SF_SSSd@32
_WPP_SF_SSd@28
_WPP_SF_SSdD@32
_WPP_SF_S_guid_@24
_WPP_SF_S_guid__guid_d@32
_WPP_SF_S_guid_d@28
_WPP_SF_Sd@24
_WPP_SF_SdD@28
_WPP_SF_SdSD@32
_WPP_SF_Sdd@28
_WPP_SF_SddD@32
_WPP_SF_SdddD@36
_WPP_SF_SddddD@40
_WPP_SF__guid_D@24
_WPP_SF__guid_DDlD@36
_WPP_SF__guid_SD@28
_WPP_SF__guid_SSd@32
_WPP_SF__guid_Sd@28
_WPP_SF__guid__guid__guid_d_guid_@36
_WPP_SF__guid__guid__guid_d_guid_d@40
_WPP_SF__guid__guid_d@28
_WPP_SF__guid__guid_d_guid_@32
_WPP_SF__guid__guid_d_guid_d@36
_WPP_SF__guid__guid_dd@32
_WPP_SF__guid__guid_dl_sid_SSd@48
_WPP_SF__guid_d@24
_WPP_SF__guid_dD@28
_WPP_SF__guid_dS@28
_WPP_SF__guid_dSd@32
_WPP_SF__guid_d_guid_@28
_WPP_SF__guid_d_guid_d@32
_WPP_SF__guid_dd@28
_WPP_SF__guid_ddSS@36
_WPP_SF__guid_ddSSd@40
_WPP_SF__guid_ddd@32
_WPP_SF__guid_lD@28
_WPP_SF__guid_l_sid_@28
_WPP_SF__guid_l_sid_D@32
_WPP_SF__guid_l_sid_d@32
_WPP_SF__sid_D@24
_WPP_SF_d@20
_WPP_SF_dD@24
_WPP_SF_dDdD@32
_WPP_SF_d_guid_d@28
_WPP_SF_dd@24
_WPP_SF_ddD@28
_WPP_SF_dd_guid_d@32
_WPP_SF_ddd@28
_WPP_SF_ddd_guid_d@36
_WPP_SF_dddd@32
_WPP_SF_dlD@28
_WPP_SF_l@20
_WPP_SF_qD@24
_WPP_SF_qDD@28
_WPP_SF_qDd@28
_WPP_SF_qSD@28
_WPP_SF_qdP@28
_WdtpInterfacePointer_UserFree@4
_WdtpInterfacePointer_UserMarshal@20
_WdtpInterfacePointer_UserSize@20
_WdtpInterfacePointer_UserUnmarshal@16
_WinSqmEventEnabled@8
_WinSqmEventWrite@12
_WppCleanupUm@0
_WppControlCallback@16
_WppInitUm@4
_WriteClassStg@8
_WriteClassStm@8
_WriteClipformatStm@8
_WriteFmtUserTypeStg@12
_WriteM1ClassStm@8
_WriteM1ClassStmBuf@8
_WriteMonikerStm@8
_WriteOleStg@16
_WriteOleStgEx@20
_WriteStringStream@8
_XformHeightInPixelsToHimetric@8
_XformWidthInPixelsToHimetric@8
__CRT_INIT@12
__ControlTracing@8
__DllMainCRTStartup@12
__FindPESection
__GetCustomProtseqInfo@16
__IsNonwritableInCurrentImage
__NotifyFDT@8
__SEH_epilog4
__SEH_epilog4_GS
__SEH_prolog4
__SEH_prolog4_GS
__UpdateResolverBindings@24
__UseProtseq@20
__ValidateImageBase
__XcptFilter
___CppXcptFilter
___delayLoadHelper2@8
___dllonexit
___report_gsfailure
___security_init_cookie
__allmul
__alloca_probe_16
__allshl
__amsg_exit
__aulldiv
__aulldvrm
__aullrem
__aullshr
__callframeinternal_IID_Lookup@8
__chkstk
__except_handler4
__except_handler4_common
__ftol2
__initterm
__initterm_e
__local_unwind4
__lock
__mega_IID_Lookup@8
__onexit
__prop_IID_Lookup@8
__purecall
__resetstkoflw
__resetstkoflw_downlevel
__unlock
_atexit
_memcpy
_memset
_wRegQueryValue@16
_wRegSetValue@20
*/
