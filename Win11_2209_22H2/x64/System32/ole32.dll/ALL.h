struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
enum __scrt_module_type;
struct IPicture2;
class Microsoft::WRL::ComPtr<IApplicationAssociationRegistration>;
enum _NT_PRODUCT_TYPE;
union std::_Align_type<double,72>;
enum DISPLAYCONFIG_SCANLINE_ORDERING;
class allocateExtra_t;
enum _PNP_QUERY_RELATION;
class CLimitedWritableStorage::Stat::__l2::<lambda_c61124bf9311369ccd740ead4f8d81ee>;
class wil::details::StoredCallContextInfo;
enum wil::FailureType;
enum wil::FailureFlags;
struct wil::CallContextInfo;
struct wil::FailureInfo;
class wil::details::shared_buffer;
class wil::StoredFailureInfo;
struct _RTL_SRWLOCK;
class wil::srwlock;
class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>;
struct wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS;
struct _RTL_RB_TREE;
struct tagCAUUID;
struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::WindowId,0>;
enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS;
struct Windows::Foundation::Collections::IIterable_impl<__int64>;
struct wistd::__libcpp_is_integral<long>;
enum wil::details::PendingCallbackCancellationBehavior;
struct IXMLDOMImplementation;
struct Windows::Foundation::Internal::AggregateType<bool,unsigned char>;
enum _USER_ACTIVITY_PRESENCE;
class wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification> >;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
enum ReplacesCorHdrNumericDefines;
struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *>;
class CClassMonikerFactory;
enum _TAG_UNNAMED_1;
class Microsoft::WRL::ComPtr<IWeakReference>;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk;
enum _TAG_UNNAMED_2;
struct std::once_flag;
struct _mpProp;
enum _TP_CALLBACK_PRIORITY;
union _LARGE_INTEGER;
struct _SECTIONBASICINFO;
struct IComProcessInfo2;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >;
enum __scrt_native_startup_state;
struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *>;
struct _WPP_TRACE_CONTROL_BLOCK;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>;
enum ProcessToken::UserHiveOkState;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1>;
enum ISA_AVAILABILITY;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
enum _PSM_ACTIVATE_BACKGROUND_TYPE;
enum _TAG_UNNAMED_3;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> > >;
struct std::allocator_traits<std::allocator<unsigned short> >;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
enum _crt_argv_mode;
struct _MODLOAD_DATA;
struct _FILE_MOVE_CLUSTER_INFORMATION;
enum _EXCEPTION_DISPOSITION;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct Windows::Foundation::Collections::IVector<unsigned int>;
enum _TAG_UNNAMED_4;
class COleCache::CCacheViewImpl;
class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >;
enum _PS_ATTRIBUTE_NUM;
struct std::_Fake_allocator;
class wil::details::<lambda_6dd96684479744ebc07fc6b2d83b999d>;
enum _RTL_FEATURE_CONFIGURATION_PRIORITY;
struct std::_Container_base12;
struct _FILE_ID_128;
struct _CSV_QUERY_FILE_REVISION_FILE_ID_128;
class wil::last_error_context;
class CAptCallCtrl;
enum _TAG_UNNAMED_5;
enum _TAG_UNNAMED_6;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<double>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,_RTL_CRITICAL_SECTION *>;
enum PS_CREATE_STATE;
enum tagBINDSTATUS;
struct __vc_attributes::no_injected_textAttribute;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
enum _TAG_UNNAMED_7;
class COleCache::CAdviseSinkImpl;
struct IViewObjectEx;
enum _PS_STD_HANDLE_STATE;
class std::bad_typeid;
class wil::rtlsrwlock;
enum _PS_PROTECTED_SIGNER;
enum ProcessToken::DesignModeState;
struct _tlgWrapSz<char16_t>;
enum _TAG_UNNAMED_8;
struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_Ea;
enum _PS_PROTECTED_TYPE;
enum _PS_WAKE_REASON;
enum FORMATTAG;
class CData;
class CFormat;
union std::_String_val<std::_Simple_types<unsigned short> >::_Bxty;
class std::_String_val<std::_Simple_types<unsigned short> >;
class std::_Compressed_pair<std::allocator<unsigned short>,std::_String_val<std::_Simple_types<unsigned short> >,1>;
class std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >;
enum _TAG_UNNAMED_9;
struct Windows::Foundation::Collections::IVectorView<Windows::System::User *>;
struct GetTypeValueImpl<long,unsigned int,unsigned long>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibraryChange *>;
enum _JOBOBJECT_IO_PRIORITY_LIMIT_FLAGS;
struct wistd::__unique_ptr_deleter_sfinae<wil::cotaskmem_secure_deleter>;
struct _MEMORY_PARTITION_PAGE_RANGE;
enum _JOBOBJECT_PAGE_PRIORITY_LIMIT_FLAGS;
struct HACCEL__;
enum ProcessToken::ProcessILState;
union tagCY;
struct tagFONTDESC;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t>;
struct stat;
struct _MEMORY_PARTITION_CREATE_LARGE_PAGES_INFORMATION;
enum _TAG_UNNAMED_10;
struct _CRYPT_SEQUENCE_OF_ANY;
struct Microsoft::WRL::Details::FactoryCache;
enum __MIDL_ICodeInstall_0001;
struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int>;
class SafeIntInternal::SafeIntWin32Exception;
struct PPM_IDLE_STATE_ACCOUNTING;
struct PPM_IDLE_ACCOUNTING;
enum __MIDL_IUri_0001;
struct _GUID;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
class SafeCastHelper<unsigned short,unsigned short,0>;
enum _TAG_UNNAMED_11;
struct IImpersonateClipboardOwner;
struct Windows::Foundation::Collections::IVector<short>;
enum __MIDL_IUri_0002;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
enum _VRF_TRIAGE_CONTEXT;
struct Windows::Foundation::IAsyncOperation<int>;
struct __vc_attributes::satypeAttribute;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>;
enum INPUT_DESTINATION_IDENTITY;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >;
enum wil::details::EmptyVariant;
class CreateNdrTypeInfoFromTypeInfo::__l2::<lambda_8a353063373b4ec3de8834c4042dce90>;
class wil::details::lambda_call<<lambda_8a353063373b4ec3de8834c4042dce90> >;
struct Windows::Foundation::IAsyncOperation<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>;
enum _SYSTEM_INFORMATION_CLASS;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct IClipboardProtectionServices;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
enum _KCONTINUE_TYPE;
struct _tlgCharTraits<unsigned short>;
struct wistd::__any;
enum ProcessToken::NoAllAppPackagesState;
struct _SERVICE_STATUS_PROCESS;
struct _SERVICE_NOTIFY_1;
struct HGLRC__;
enum _SYSTEM_PROCESS_CLASSIFICATION;
struct _SYMBOL_INFOW;
enum tagDOMNodeType;
class wil::details::<lambda_1743b85cba782339a69c5aa862c27e7a>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
enum Windows::System::UserWatcherStatus;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
enum _TAG_UNNAMED_12;
struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
enum tagXMLEMEM_TYPE;
class TryGetNdrTypeInfo::__l2::<lambda_2e1c9c4fca2bd83b2812b8ab64129fec>;
class wil::details::<lambda_0338d048c56f4199739644ebb113d12c>;
enum tagBINDSTRING;
enum _FS_BPIO_INFLAGS;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t> > >;
struct _CRYPTOAPI_BLOB;
struct _CRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_BIT_BLOB;
struct _CERT_ISSUER_SERIAL_NUMBER;
struct _CERT_ID;
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
enum tagApplicationType;
struct _stat32;
class wil::details::<lambda_bfd2741a28d6faa92e23b84d2819b7af>;
struct IPolicy;
enum tagShutdownType;
enum _TAG_UNNAMED_13;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> > >;
struct _CMSG_HASHED_ENCODE_INFO;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct _NDR_SCONTEXT;
enum wil::FeaturePropertyGroupFlags;
class LargeIntRegMultiply<unsigned int,unsigned __int64>;
enum _tagPARSEACTION;
struct IActivationFactory;
struct _FILETIME;
struct _OCSP_BASIC_RESPONSE_INFO;
struct _TAPE_CREATE_PARTITION;
enum _tagPSUACTION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComCatalogSCM> >;
class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>;
enum _TAG_UNNAMED_14;
struct AsyncIUnknown;
enum _tagQUERYOPTION;
struct _MINIDUMP_MEMORY_INFO;
struct _MINIDUMP_CALLBACK_OUTPUT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassIterator> >;
enum _tagINTERNETFEATURELIST;
struct std::_Fake_proxy_ptr_impl;
enum std::_Invoker_strategy;
struct std::_Invoker_pmf_refwrap;
struct _SYSTEMTIME;
struct _TIME_ZONE_INFORMATION;
struct tagSTATPROPSETSTG;
class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>::ContextSensitiveHelp::__l2::<lambda_7f8f27448f522cea32614cee7579f563>;
enum _RTL_RESOURCE_POLICY_FLAGS;
class Microsoft::WRL::ComPtr<IMarshal>;
class Microsoft::WRL::FtmBase;
class GetCastMethod<unsigned short,unsigned short>;
enum Microsoft::WRL::Details::AsyncStatusInternal;
union std::_String_val<std::_Simple_types<char32_t> >::_Bxty;
class std::_String_val<std::_Simple_types<char32_t> >;
class std::_Compressed_pair<std::allocator<char32_t>,std::_String_val<std::_Simple_types<char32_t> >,1>;
class std::basic_string<char32_t,std::char_traits<char32_t>,std::allocator<char32_t> >;
enum _SYSTEM_FEATURE_CONFIGURATION_SECTION_TYPE;
enum _SYSTEM_POOL_LIMIT_MEM_TYPE;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct ITypeInfo;
class std::bad_weak_ptr;
class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >;
struct tagMETAHEADER;
enum _TAG_UNNAMED_15;
enum tagTYPEKIND;
struct _MINIDUMP_UNLOADED_MODULE;
struct Windows::Foundation::Collections::supports_cleanup<HSTRING__ *>;
enum tagCALLCONV;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
enum SHELL_LINK_DATA_FLAGS;
struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
enum _STORAGE_RESERVE_ID;
class wil::details::<lambda_18d5264b4415236c27080edcc8a953ea>;
struct _RTL_BITMAP;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IDragOperationInternal>;
struct _SE_ACCESS_REQUEST;
enum tagCOINITBASE;
enum __vc_attributes::event_sourceAttribute::type_e;
enum __vc_attributes::event_sourceAttribute::optimize_e;
struct __vc_attributes::event_sourceAttribute;
enum tagFUNCKIND;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardProtectionServices> const >;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > >;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
enum _TAG_UNNAMED_16;
struct _SINGLE_LIST_ENTRY;
struct wistd::__compressed_pair_elem<_KEY_VALUE_FULL_INFORMATION *,0,0>;
class wistd::__compressed_pair<_TOKEN_DEFAULT_DACL *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
enum tagVARKIND;
struct wistd::integral_constant<unsigned __int64,1>;
struct _OCSP_CERT_ID;
struct _OCSP_BASIC_RESPONSE_ENTRY;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
enum tagURLZONE;
struct std::_Basic_container_proxy_ptr12;
class CDefObject::CPrivUnknown;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0>;
enum FreeResourcesFlags;
struct _RPC_IF_ID;
enum RESOURCE_LAYOUT_DIRECTION;
struct _FILE_PIPE_PEEK_BUFFER;
class wil::com_ptr_t<ITypeLib,wil::err_returncode_policy>;
struct IConnectionPointContainer;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> >;
enum tagCLSCTX;
struct _LDBL12;
struct _CAT_NAMEVALUE;
class wil::details::<lambda_2f9d2ffb810523de44311142fa7a8c90>;
enum _URLZONEREG;
struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFile *>;
enum Windows::Foundation::Diagnostics::RoErrorReportingFlags;
struct _PS_MITIGATION_OPTIONS_MAP;
enum SE_WS_APPX_SIGNATURE_ORIGIN;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
class wistd::__compressed_pair<_TOKEN_GROUPS_AND_PRIVILEGES *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
class wistd::unique_ptr<_TOKEN_GROUPS_AND_PRIVILEGES,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
struct IOleInPlaceSiteEx;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
enum _MEM_DEDICATED_ATTRIBUTE_TYPE;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect>;
struct _MALLOC_FREE_STRUCT;
enum _KHETERO_CPU_POLICY;
class wistd::__function::__base<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
enum tagDESCKIND;
enum __MIDL_IGetBindHandle_0001;
enum KNOWN_FOLDER_FLAG;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::System::IUser *>;
struct _FILE_STANDARD_INFO;
struct IPersistMemory;
class LargeIntRegMultiply<__int64,unsigned int>;
enum _MEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE;
struct Windows::Foundation::Collections::is_pointer<unsigned int>;
enum PIDMSI_STATUS_VALUE;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
enum tagDHFlags;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibrary *>;
class wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> >;
struct IUnknown;
struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1>;
enum _FILE_ID_TYPE;
enum tagSYSKIND;
class Microsoft::WRL::ComPtr<IComClassIterator>;
struct GetTypeValueImpl<long,unsigned short const *,unsigned long,long>;
class IsInt<__int64>;
struct tagCFEntry;
enum tagGLOBALOPT_EH_VALUES;
enum _TAG_UNNAMED_17;
struct IOlePresObj;
struct _VCN_RANGE_INPUT_BUFFER;
class LargeIntRegMultiply<int,__int64>;
struct __vc_attributes::atl::perfmonAttribute;
enum tagCHANGEKIND;
class wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_35813abc48134a673502c50f3be72d9b>;
struct std::_Atomic_padded<long>;
struct std::_Atomic_storage<long,4>;
struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER;
enum _REFS_STREAM_SNAPSHOT_OPERATION;
struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
struct IPropertyNotifySink;
struct DataObjectFormats::CLIPBOARDFORMATENTRY;
enum _TAG_UNNAMED_18;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Notify::__l2::<lambda_c9f70ef396276824209f5bb13f61de84>;
enum _FIRMWARE_TYPE;
struct RPC_STATS_VECTOR;
struct tagEMR;
struct _RECTL;
struct _POINTL;
struct tagEMRPOLYPOLYLINE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int>;
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>;
enum _REFS_SET_VOLUME_COMPRESSION_INFO_FLAGS;
class Windows::Storage::FileProperties::VideoProperties;
class wil::details::unique_storage<wil::details::resource_policy<void *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >;
enum _JOBOBJECTINFOCLASS;
struct SHashChain;
struct SMultiGUIDKey;
struct SMultiGUIDHashNode;
enum Windows::System::UserWatcherUpdateKind;
class wil::details::<lambda_36b6383059ccf096d9b86cd05953661d>;
struct ICallFactory;
struct _MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION;
enum VARENUM;
struct tagOpaqueData;
class wil::details::<lambda_7840d9aae3ca824ac8870ae3063b1c35>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *>;
class wil::com_ptr_t<IObjectWithSite,wil::err_returncode_policy>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct tagCIEXYZ;
struct tagICEXYZTRIPLE;
struct tagLOGCOLORSPACEA;
enum tagTYSPEC;
struct _IMAGE_DYNAMIC_RELOCATION_TABLE;
struct tagVersionedStream;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
enum WilFailureReportFlags;
class wil::details_abi::SemaphoreValue;
struct Windows::Foundation::Collections::IVectorView<HSTRING__ *>;
enum _REFS_COMPRESSION_FORMATS;
struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
enum LSA_FOREST_TRUST_RECORD_TYPE;
enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e;
struct __vc_attributes::helper_attributes::v1_alttypeAttribute;
enum _LMR_QUERY_INFO_CLASS;
struct _LMR_QUERY_INFO_PARAM;
class Microsoft::WRL::ComPtr<CProcessExtensionTbl>;
struct _VM_COUNTERS_EX;
struct _VM_COUNTERS_EX2;
struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
enum _RTC_ErrorNumber;
enum tagRunAsType;
struct tagVS_FIXEDFILEINFO;
struct _MINIDUMP_MODULE_CALLBACK;
struct tagServerInformation;
class wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy>;
enum AppModelPolicy_PolicyValue;
struct std::_Char_traits<unsigned short,unsigned short>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IReference<Windows::Foundation::Point>;
struct _RPC_SECURITY_QOS;
enum WPP_DEFINE_BIT_NAMES;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
struct _XSTATE_FEATURE;
struct _XSTATE_CONFIG_FEATURE_MSC_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardTaskCompletion> >;
enum tagRPCOPT_PROPERTIES;
enum _TlgBlob_t;
class wistd::__compressed_pair<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
class wil::details::<lambda_600a97c4662e4e9b5ceb697a32b69886>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,wistd::integral_constant<unsigned __int64,2>,void *,__int64,-1,void *>;
enum AppModelPolicy_Type;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *>;
class wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t> >;
enum _RUNLEVEL;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *>;
union wistd::__aligned_storage<104,8,1>::type;
class wistd::function<void __cdecl(void)>;
class wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> >;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t> > >;
struct wil::details::event_watcher_state;
enum CO_MARSHALING_CONTEXT_ATTRIBUTES;
struct _UMS_SYSTEM_THREAD_INFORMATION;
class GetDataObjectEnterpriseId::__l2::<lambda_444db092903b510854fa5b0a4f709bfa>;
enum OLETLS_PREVENT_RUNDOWN_MITIGATION;
struct wistd::integral_constant<unsigned __int64,2>;
struct StringTraits<HSTRING__ *>;
struct IClassFactory;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0>;
enum tagGLOBALOPT_RO_FLAGS;
struct Windows::Foundation::Collections::IObservableVector<float>;
struct _ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE>;
enum TlgIn_t;
enum ApartmentType;
struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *>;
struct _SEALING_TIMESTAMP_ATTRIBUTE;
struct tagFORMATETC;
struct wistd::__compressed_pair_elem<wil::details::event_watcher_state *,0,0>;
struct tagSIZE;
enum tagOLETLSFLAGS;
struct _CLINFO;
struct IUnwrappableDataObject;
enum tagMSHCTX;
struct IPicture;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
enum ABI::Windows::Foundation::AsyncStatus;
enum RegistrationSource;
class std::reverse_iterator<std::_String_view_iterator<std::char_traits<unsigned short> > >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
enum tagGLOBALOPT_PROPERTIES;
struct std::char_traits<char>;
struct ILayoutStorage;
enum ThreadingModel;
struct _ENCLAVE_CREATE_INFO_SGX;
struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *>;
enum tagSTATFLAG;
struct wil::process_heap_deleter;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageItem *>;
enum COM_CALL_LOCALITY;
struct Windows::Foundation::Collections::is_foundation_struct<_GUID>;
class wistd::function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>;
struct Windows::Foundation::Collections::IVector<IInspectable *>;
struct _SYSTEM_VDM_INSTEMUL_INFO;
enum tagSTREAM_SEEK;
enum tagProcessType;
struct SExtHashNode;
struct tagSExtEntry;
class wil::details::shared_object<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> >;
enum _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::TlgState;
class _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>;
class wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>;
struct tagPROPBAG2;
class wil::details::<lambda_e940754a71e3d785858a2f617c0b6d67>;
enum tagEOLE_AUTHENTICATION_CAPABILITIES;
struct std::not_equal_to<void>;
class std::tuple<>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point>;
class wistd::__compressed_pair<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
class wistd::unique_ptr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
enum _RTL_FEATURE_CONFIGURATION_OPERATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IBindCtx> >;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >;
enum __MIDL___MIDL_itf_activate_0000_0010_0001;
class COAHolder;
struct IProvideClassInfo2;
class DragDropTelemetry::CallContext;
enum _APTTYPEQUALIFIER;
struct wistd::__function::__maybe_derive_from_binary_function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
enum ComLockOrder;
struct wil::details::DestroyThreadPoolWork<2>;
enum Windows::Storage::CreationCollisionOption;
enum _WPP_FLAG_LEN_ENUM;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> > >;
class CSidStr;
enum RO_ERROR_REPORTING_FLAGS;
class std::_Iostream_error_category2;
struct std::_Constexpr_immortalize_impl<std::_Iostream_error_category2>;
struct _Real_type<float>;
class CPrivAlloc;
struct Windows::Foundation::IAsyncOperation_impl<int>;
enum RO_INIT_TYPE;
enum tagDVASPECT;
class wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> >;
enum _TAG_UNNAMED_19;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator>;
struct wil::window_dc;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *>;
class CReadInterfaceDataFromInternalSourceMarshalingStream;
enum TrustLevel;
struct IWeakReference;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IBuffer *>;
enum TlgOut_t;
enum _TAG_UNNAMED_20;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
enum WhichTypeOfRundown;
struct HIMC__;
enum WPP_CTL_NAMES;
class _FSaveIconViaBitmaps::__l2::<lambda_1c754bbeedbcd4694084012f1aac925b>;
class wil::details::lambda_call<<lambda_1c754bbeedbcd4694084012f1aac925b> >;
enum _TAG_UNNAMED_21;
struct Windows::Foundation::Collections::IVectorView<unsigned char>;
enum _RTL_UMS_SCHEDULER_REASON;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SID;
struct _MANAGE_HOT_PATCH_QUERY_PATCHES;
struct Windows::Foundation::IExtensionRegistration;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> const >;
class IsInt<unsigned long>;
enum SLGP_FLAGS;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >;
struct wil::details_abi::ProcessLocalData;
class wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>;
struct tagOCPFIPARAMS;
enum tagCCF_FLAGS;
class std::_System_error_category;
struct std::_Constexpr_immortalize_impl<std::_System_error_category>;
enum _TAG_UNNAMED_22;
union _CPU_INFORMATION;
struct tagRECT;
struct tagPAINTSTRUCT;
struct wil::paint_dc;
enum SLR_FLAGS;
enum tagMKSYS;
struct $_TypeDescriptor$_extraBytes_20;
struct tagENHMETARECORD;
class RegistryKey;
struct IRpcChannelBuffer3;
struct _FILE_ALIGNMENT_INFORMATION;
enum _TAG_UNNAMED_23;
class SafeIntCompare<long,int>;
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
enum _LCN_WEAK_REFERENCE_STATE;
class std::runtime_error;
enum tagResourceGateId;
enum _GET_FILEEX_INFO_LEVELS;
class wil::details::<lambda_1b524260382d5af1e3356914d9f48146>;
struct tagEMRPOLYLINE;
enum _TAG_UNNAMED_24;
union _float_const;
struct _IMAGEHLP_LINEW64;
enum TraceLevel;
class Microsoft::WRL::ComPtr<IServiceHostBrokerProvider>;
enum _FILE_INFORMATION_CLASS;
class Microsoft::WRL::Wrappers::Event;
class wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t> >;
enum std::float_denorm_style;
enum _SharedVirtualDiskHandleState;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::AccessCache::AccessListEntry>;
struct FORMATETCDATA;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,float>;
struct IThunkManager;
struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::IStorageItem *>;
enum ExtentKeys;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *>;
enum _TAG_UNNAMED_25;
enum _TlgOptions_t;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct _CERT_CONTEXT;
struct IAdviseSinkEx;
struct Windows::Foundation::Collections::IIterable<bool>;
enum CFileMoniker::olever;
struct std::char_traits<unsigned short>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>;
enum CoGetTreatAsClassInternalFlags;
struct _PS_PROTECTION;
enum tagRpcCallClientLocality;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >;
enum tagLocalServerType;
struct _SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION;
struct _IMAGEHLP_CBA_EVENTW;
class AnalyzeTypeInfo::__l2::<lambda_ab54b4cb724860687691cbd1b551fd05>;
class wil::details::lambda_call<<lambda_ab54b4cb724860687691cbd1b551fd05> >;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibraryChange *>;
class Microsoft::WRL::ComPtr<IBindCtx>;
enum __MIDL___MIDL_itf_activate_0000_0010_0002;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> >;
enum _TAG_UNNAMED_26;
struct std::hash<float>;
enum Microsoft::WRL::RuntimeClassType;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,char *,0,std::nullptr_t> > >;
struct IOleUndoManager;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct tagBITMAPINFOHEADER;
enum __MIDL_IBindStatusCallback_0003;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct PACKAGE_VERSION;
enum Windows::Storage::FileProperties::PhotoOrientation;
struct IComCatalog2;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> >;
struct Windows::Foundation::Collections::IVectorView<enum Windows::System::UserWatcherUpdateKind>;
enum _TAG_UNNAMED_27;
enum tagMSHLFLAGS;
class wil::details::ThreadFailureCallbackHolder;
class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>;
class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>;
struct _AppBarData;
enum tagBINDSPEED;
struct IOleClientSite;
enum SYM_TYPE;
struct _IMAGEHLP_MODULEW64;
struct SYNTHESIZED_MAP;
enum tagACTIVATION_STAGE;
class Windows::System::User;
struct _CERT_EXTENSION;
enum PATH_TYPE;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64;
enum tagINVOKEKIND;
enum _TAG_UNNAMED_28;
class wil::details::<lambda_63960101b1ee22b80f95ebfda4fb8398>;
struct IPropertyStorage;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
enum _SYSTEM_VA_TYPE;
struct Windows::Foundation::IReference_impl<unsigned char>;
enum tagREGKIND;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource>;
struct _IMAGEHLP_CBA_EVENT;
class IntRegion<unsigned int,unsigned long>;
struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::event_watcher_state>,1,1>;
class wil::details::<lambda_0e40f415f9829abc64f0f2b3a638ba22>;
enum tagTYPEFLAGS;
enum _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;
struct std::hash<double>;
union _UNWIND_CODE;
struct Windows::Foundation::Collections::IVector<unsigned char>;
class wistd::__compressed_pair<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *,wil::process_heap_deleter>;
struct DELETE_USN_JOURNAL_DATA;
class Microsoft::WRL::WeakRef;
struct Windows::Foundation::Collections::is_pointer<_GUID>;
struct _SYSTEM_POWER_STATE_CONTEXT;
enum wil::empty_string_options;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>,IWeakReferenceSource>;
enum _TOKEN_INFORMATION_CLASS;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *>;
enum _TAG_UNNAMED_29;
struct IServerSecurity;
struct _PROC_THREAD_ATTRIBUTE;
struct _PROC_THREAD_ATTRIBUTE_LIST;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
enum tagGUIDKIND;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >;
enum _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;
class wil::details::<lambda_4484dc13178b50d6d8340115b070ef25>;
enum _TAG_UNNAMED_30;
struct tagPOINT;
enum _TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;
struct _CRYPT_3DES_KEY_STATE;
enum LoadOrFreeWhy;
struct IActivationStageInfo;
struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT;
struct wistd::__compressed_pair_elem<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *,0,0>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::Collections::IIterable<enum Windows::System::UserWatcherUpdateKind>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
enum tagSTDID_FLAGS;
struct _CERT_POLICIES_INFO;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *>;
enum Windows::Storage::StorageDeleteOption;
class TraceLoggingThreadActivityIdSetter;
struct _EVENT_DATA_DESCRIPTOR;
struct IClipboardTaskCompletion;
enum _INSTALLSPECTYPE;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64>;
enum tagCOINIT;
struct tagDRAWTEXTPARAMS;
struct _MINIDUMP_LOCATION_DESCRIPTOR;
struct _MINIDUMP_MEMORY_DESCRIPTOR;
struct _MINIDUMP_THREAD;
class ClassRegistration;
enum _TAG_UNNAMED_31;
class COleTls;
enum _TAG_UNNAMED_32;
struct _OLESTREAM;
enum MESSAGE_HANDLER_MESSAGE_TYPE;
enum tagHITRESULT;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect>;
class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>;
enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;
class CCompositeMonikerEnum;
enum _KEY_INFORMATION_CLASS;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Rect>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator>;
enum tagAspectInfoFlag;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
enum tagPictureAttributes;
enum SERVICEHOSTCONTROLLER_COM_REGISTRATION_TYPE;
struct Windows::Foundation::IReferenceArray<double>;
class Microsoft::WRL::ComPtr<IRestrictedErrorInfo>;
enum tagSET_COLUMNS_NOTIFY_OPTIONS;
struct _tlgWrapperPtrSize;
enum _RTL_FEATURE_ENABLED_STATE_OPTIONS;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double>;
struct _MOVE_FILE_DATA32;
struct wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle>;
struct LIST_ENTRY32;
struct _ACTIVATION_CONTEXT_STACK32;
enum UniversalMarshalerType;
struct std::integral_constant<bool,1>;
struct _SYSTEM_POOL_LIMIT_MEM_INFO;
struct tagCAUL;
enum _TAG_UNNAMED_33;
class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_695bd8186055aa888e76c377c51f9b1f>;
class wil::details::lambda_call<<lambda_695bd8186055aa888e76c377c51f9b1f> >;
struct IHttpNegotiate3;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IMoniker> >;
struct tagFONTSIGNATURE;
struct tagCHARSETINFO;
enum _EDP_AUDIT_OUTPUT_PROPERTY_INDEXES;
struct _stat64i32;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>;
enum SYNCMGR_PRESENTER_NEXT_STEP;
struct _FILE_FS_DEVICE_INFORMATION;
union _SYSDBG_LIVEDUMP_CONTROL_FLAGS;
union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES;
struct _SYSDBG_LIVEDUMP_CONTROL_V1;
class wil::folder_change_reader_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t> >,wil::err_returncode_policy>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::Search::SortEntry>;
enum __vc_attributes::helper_attributes::usageAttribute::usage_e;
struct Windows::System::IUserAuthenticationStatusChangingEventArgs;
enum _MODULE_WRITE_FLAGS;
struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
struct wil::details::static_lazy<DragDropTelemetry>::Completer;
enum __vc_attributes::threadingAttribute::threading_e;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>;
struct _CONSOLE_HISTORY_INFO;
struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *>;
struct ITypeComp;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
enum __vc_attributes::aggregatableAttribute::type_e;
struct IClassFactory2;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
enum _KEY_VALUE_INFORMATION_CLASS;
class CEnumFormatEtc;
struct IDragOperationInternal;
enum SYNCMGR_HANDLER_TYPE;
struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
class TryGetNdrTypeInfo::__l2::<lambda_1258db8bed1d9beae0452193350f83a8>;
struct Windows::Foundation::Collections::IIterator<unsigned __int64>;
struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *>;
enum __vc_attributes::event_receiverAttribute::type_e;
enum __vc_attributes::moduleAttribute::type_e;
struct tagCADBL;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
enum _EDP_CRED_SVC_INFO_TYPE;
struct Windows::Foundation::IReferenceArray_impl<double>;
struct Windows::Foundation::Collections::IObservableVector<IInspectable *>;
enum tagVIEWSTATUS;
class IInternalChannelBuffer;
enum tagDVASPECT2;
struct _MINIDUMP_HANDLE_DESCRIPTOR_2;
struct Windows::Foundation::Collections::IVectorView_impl<double,1>;
enum tagCOMSD;
class std::_String_const_iterator<std::_String_val<std::_Simple_types<unsigned short> > >;
enum COleCache::Locate::__l2::tagFormatType;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned __int64>;
struct __vcrt_assert_va_start_is_not_reference<char const *>;
struct Windows::Foundation::Collections::IVector_impl<unsigned int,1>;
struct Windows::Foundation::IReferenceArray_impl<__int64>;
class XWinRT::SecureVersionTag::TagManager;
enum tagCTRLINFO;
enum tagAR_STATE;
class Microsoft::WRL::Wrappers::Details::SyncLockExclusive;
struct _FPO_DATA;
enum CarefullyQueryNewInterfaceContext::ClaimsToImplementEverythingState;
class CarefullyQueryNewInterfaceContext;
struct _OPEN_PRINTER_PROPS_INFOW;
enum tagXFORMCOORDS;
enum _IMAGEHLP_STATUS_REASON;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessPatternTbl> const >;
class IsFloat<unsigned __int64,0>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
enum _IMAGEHLP_SYMBOL_TYPE_INFO;
struct __vc_attributes::idl_quoteAttribute;
class wil::unique_call<void (__cdecl*)(void),&OleUninitialize,1>;
enum _THREAD_WRITE_FLAGS;
class std::allocator<unsigned short>;
enum APPLICATION_LAYOUT_MODE;
enum CNVTYP;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *>;
class SafeIntInternal::SafeIntExceptionHandler<SafeIntInternal::SafeIntWin32Exception>;
class wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >;
class MultiplicationMethod<unsigned int,unsigned short>;
enum ACTCTX_REQUESTED_RUN_LEVEL;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
enum OLE_NOTIFICATION;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *>;
enum tagUSERCLASSTYPE;
class wil::details::pointer_range<unsigned short *>;
class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_c6ed493d5af5554e8c237144b3cdab2f>;
class wil::details::lambda_call<<lambda_c6ed493d5af5554e8c237144b3cdab2f> >;
struct _TP_CLEANUP_GROUP;
class IntTraits<unsigned __int64>;
struct _EXCEPTION_RECORD;
struct _M128A;
struct _XSAVE_FORMAT;
struct _CONTEXT;
enum _EXCEPTION_LOG_TYPE;
struct _EXCEPTION_LOG;
enum _MINIDUMP_SECONDARY_FLAGS;
struct MIPID;
enum wil::FolderChangeEvents;
enum _TAG_UNNAMED_34;
struct Windows::Foundation::IAsyncOperationCompletedHandler<int>;
class wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t> >;
class LargeIntRegMultiply<unsigned __int64,unsigned __int64>;
enum Ole32SQMFlags;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
enum CDragDefaultCursors::CURSOR_ID;
struct _CRYPT_ATTRIBUTE_TYPE_VALUE;
struct _SPC_INDIRECT_DATA_CONTENT;
class Microsoft::WRL::ComPtr<Microsoft::WRL::Details::WeakReferenceImpl>;
class Windows::Storage::StorageStreamTransaction;
struct _CERT_LOGOTYPE_DETAILS;
struct _CERT_LOGOTYPE_IMAGE;
enum EDP_SOURCE_ENTERPRISEID_OPTION;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>;
enum CDragDefaultCursors::SCROLL_TYPE;
enum _TAG_UNNAMED_35;
struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan>;
enum tagSTDMSHLFLAGS;
enum NAMESPACE_FOLDER_PREFERENCES_FLAGS;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
enum _TAG_UNNAMED_36;
class wil::details::lambda_call<<lambda_2e1c9c4fca2bd83b2812b8ab64129fec> >;
enum CALLFRAME_WALK;
struct Windows::Foundation::Collections::IVectorView<Windows::UI::WindowId>;
enum CALLFRAME_FREE;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct IProcessServerInfo;
enum EDP_AUDIT_ACTION;
struct _IMAGE_IMPORT_BY_NAME;
class wil::details::<lambda_2dccd720e70a8ebd6c5789ea1b627527>;
enum CALLFRAME_NULL;
struct Windows::Foundation::Collections::IIterator<IInspectable *>;
struct _REQUEST_OPLOCK_OUTPUT_BUFFER;
struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFile *>;
struct _FILE_STAT_LX_INFORMATION;
enum tagOLEDCFLAGS;
struct _MINIDUMP_DIRECTORY;
struct Windows::Foundation::IAsyncOperationWithProgress<int,int>;
enum tagUASFLAGS;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct _WPP_WIN2K_CONTROL_BLOCK;
struct ITypeCompVtbl;
enum FORMAT_CHARACTER;
class wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_exception_policy>;
class CHlprDialog;
struct Windows::Foundation::Collections::IMap<unsigned int,Windows::System::User *>;
enum _NgcEnabledModifiers;
struct IViewObject;
enum wil::details_abi::CountSize;
class wistd::__compressed_pair<void *,wil::process_heap_deleter>;
class wistd::unique_ptr<void,wil::process_heap_deleter>;
struct wil::details_abi::heap_buffer;
class wil::details_abi::RawUsageIndex;
struct wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,void *,0,std::nullptr_t>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> const >;
enum XWinRT::ComLock::Kind;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
enum tagCOWAIT_FLAGS;
struct IRpcChannelBuffer;
class RegistryKey::ValueInformationClass<_KEY_VALUE_BASIC_INFORMATION>;
enum wil::FeatureStage;
class std::chrono::duration<double,std::ratio<60,1> >;
class std::bad_alloc;
struct wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t>;
struct wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t>;
enum tagTYMED;
enum wil::FeatureChangeTime;
class _TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>;
struct utl::construct<CROTItem *>;
struct FRAME_GetIDsOfNames;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > >;
enum wil::UsageReportingMode;
class Microsoft::WRL::Wrappers::Mutex;
class CSrvCallState;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> > >;
enum wil_VariantPayloadType;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>;
class wil::details::<lambda_0745084665628eea082e096e8407b136>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>;
struct Windows::Foundation::IReferenceArray_impl<unsigned char>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
enum DDE_DISPATCH_FUNC;
enum wil_UsageReportingMode;
enum _SYSTEM_NET_RATE_CONTROL_TYPE;
struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER;
struct _SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT;
struct tagPROPPAGEINFO;
struct _MINIDUMP_EXCEPTION_INFORMATION;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
enum wil_FeatureStage;
struct std::ratio<1,1000>;
enum wil_FeatureStore;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *>;
struct tagRAWINPUTHEADER;
struct tagRAWMOUSE;
struct tagRAWKEYBOARD;
struct tagRAWHID;
struct tagRAWINPUT;
enum FEATURE_ENABLED_STATE;
enum FEATURE_CHANGE_TIME;
struct _OLETARGETDEVICE;
enum wil_FeatureEnabledStateKind;
class std::chrono::duration<double,std::ratio<1,1000> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFolder *>;
enum wil_details_FeatureTestStateKind;
enum _RTL_FEATURE_CONFIGURATION_TYPE;
class Windows::Storage::BulkAccess::FileInformation;
struct wistd::__compressed_pair_elem<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *,0,0>;
struct Windows::Foundation::Collections::IVector_impl<__int64,1>;
enum wil_FeatureVariantPayloadKind;
enum wil_FeatureEnabledState;
class wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >;
struct wistd::unique_ptr<unsigned short [0],wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >::_CheckArrayPointerConversion<unsigned short *>;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1>;
enum wil_FeatureChangeTime;
class wistd::__compressed_pair<char *,wistd::default_delete<char [0]> >;
class LargeIntRegMultiply<__int64,int>;
union _RemotableHandle::__MIDL_IWinTypes_0009;
enum wil_details_ServiceReportingKind;
enum wil_VariantReportingKind;
struct std::_WChar_traits<unsigned short>;
struct ICallInfo;
enum wil_ReportingKind;
struct tagCInterfaceStubHeader;
struct tagCInterfaceStubVtblTag;
enum _TAG_UNNAMED_37;
class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>;
class wil::details::shared_object<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> >;
class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>;
struct _MINIDUMP_MEMORY_DESCRIPTOR64;
struct _MINIDUMP_MEMORY64_LIST;
struct _LUID;
enum _TOKEN_TYPE;
enum _SECURITY_IMPERSONATION_LEVEL;
struct _TOKEN_STATISTICS;
enum _TAG_UNNAMED_38;
class wil::details::<lambda_1671716c99389d9118471eba8b7dd46b>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int>;
enum _TAG_UNNAMED_39;
class std::chrono::duration<__int64,std::ratio<1,1000000> >;
struct wistd::__compressed_pair_elem<wistd::default_delete<unsigned int [0]>,1,1>;
struct Windows::Foundation::Collections::IVectorView_impl<__int64,1>;
enum POWER_STATE_DISABLED_TYPE;
class std::_String_iterator<std::_String_val<std::_Simple_types<char> > >;
struct _RTL_FEATURE_USAGE_SUBSCRIPTION_TARGET;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IClipboardBrokerInternal>;
enum _TAG_UNNAMED_40;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumCategoriesOfCatalogClass> const >;
struct _HOT_PATCH_IMAGE_INFO;
struct _MANAGE_HOT_PATCH_UNLOAD_PATCH;
enum _TAG_UNNAMED_41;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned char>;
struct Windows::Foundation::Collections::IVectorChangedEventArgs;
enum tagOLERENDER;
enum _SPACTION;
struct __vc_attributes::threadingAttribute;
enum _TAG_UNNAMED_42;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
enum _TAG_UNNAMED_43;
enum tagCoModuleType;
class Common::AutoHandleHKEY;
struct _LIST_ENTRY;
struct _FLS_DATA;
struct _COMM_FAULT_OFFSETS;
enum _TAG_UNNAMED_44;
enum _TAG_UNNAMED_45;
class wil::com_ptr_t<IUnknown,wil::err_returncode_policy>;
struct Windows::Foundation::Collections::IIterator_impl<double,1>;
enum WINDOWCOMPOSITIONATTRIB;
enum EDGE_GESTURE_KIND;
class CClipDataObject;
enum _TAG_UNNAMED_46;
struct _IMAGE_RELOCATION;
class RoVariant::Accessor;
struct tagTYPEDESC;
struct tagIDLDESC;
struct tagPARAMDESC;
struct tagELEMDESC;
struct tagVARDESC;
class RegistryKey::KeyInformationClass<_KEY_VIRTUALIZATION_INFORMATION>;
struct _tlgProviderMetadata_t;
enum _TAG_UNNAMED_47;
class wistd::__compressed_pair<_KEY_VALUE_FULL_INFORMATION *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
class wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
enum _TAG_UNNAMED_48;
enum _TAG_UNNAMED_49;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::AccessCache::AccessListEntry>;
enum _TAG_UNNAMED_50;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *>;
enum WilFailureAction;
struct ISupportAllowLowerTrustActivation;
struct _CRYPT_PROVUI_FUNCS;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float>;
enum wil::StagingControlActions;
struct _BOOT_ENTRY;
struct _BOOT_ENTRY_LIST;
enum SYSTEM_POWER_CONDITION;
struct SET_POWER_SETTING_VALUE;
enum tagPROPPAGESTATUS;
struct SMIPIDHashNode;
struct Windows::Storage::Search::IQueryOptions;
enum _TAG_UNNAMED_51;
class std::chrono::duration<double,std::ratio<1,1000000000> >;
class CEnumHolder;
enum _TAG_UNNAMED_52;
class MultiplicationHelper<unsigned __int64,__int64,7>;
enum _TAG_UNNAMED_53;
class std::chrono::duration<double,std::ratio<1,1000000> >;
struct _FILE_PIPE_EVENT_SELECT_BUFFER;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessExtensionTbl> const >;
struct __vc_attributes::controlAttribute;
enum _TAG_UNNAMED_54;
enum PLM_MODIFIED_PAGES_SIMULATION_TYPE;
struct AsyncIAdviseSink2;
struct Microsoft::WRL::Details::CreatorMap;
enum FILE_USAGE_TYPE;
class std::__non_rtti_object;
struct IMallocSpy;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
enum _TAG_UNNAMED_55;
struct RPC_ENDPOINT_TEMPLATEW;
struct _MINIDUMP_MODULE;
enum _TAG_UNNAMED_56;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
enum MONITOR_DPI_TYPE;
struct XSAVE_CPU_INFO;
struct _XSAVE_SUPPORTED_CPU;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageItem *>;
enum _TAG_UNNAMED_57;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>;
enum _TAG_UNNAMED_58;
enum WIN32_SUBSYSTEM_HOST_TYPE;
struct Windows::Foundation::Collections::IVectorView_impl<short,1>;
enum wil::details_abi::UsageIndexesLoadOptions;
enum EDP_REQUEST_ACCESS_OVERRIDE;
enum EDP_TELEMETRY_CALLER;
struct EDP_REQUEST_ACCESS_OPTIONS;
struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node;
enum OBJFLAGS;
struct __vc_attributes::moduleAttribute;
class wil::details::unique_storage<wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t> >;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
enum _TAG_UNNAMED_59;
class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>;
struct IInternalUnknown;
struct _ITEMIDLIST_RELATIVE;
struct _WINTRUST_DATA;
enum _TAG_UNNAMED_60;
struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >;
enum _TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;
class _TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>;
enum _TAG_UNNAMED_61;
struct WINTRUST_FILE_INFO_;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *>;
class wil::details::<lambda_c3d007cad6bfd0fae208a2377afd7162>;
struct _RO_REGISTRATION_COOKIE;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct RTLWOW64_CROSSPROCESS_WORK_HEAD;
enum tagCONDITION_OPERATION;
enum _TAG_UNNAMED_62;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumFORMATETC>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct _PS_ATTRIBUTE;
struct _PS_ATTRIBUTE_LIST;
enum _TAG_UNNAMED_63;
struct std::_Atomic_padded<unsigned long>;
enum PLM_APPLICATION_STATE;
struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64>;
struct WINTRUST_CATALOG_INFO_;
class wil::details::<lambda_b551798b23ad7d5f9dd1d1c1d17d5fc9>;
struct _ACTIVATION_CONTEXT_STACK;
enum _TAG_UNNAMED_64;
struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(void)>;
struct tagMDICREATESTRUCTW;
enum _TAG_UNNAMED_65;
class AdHocCallFrame<IElementBehavior,<lambda_c9f70ef396276824209f5bb13f61de84> >;
struct _CTL_CONTEXT;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct IDragDropContainerProxy;
enum std::float_round_style;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct IEnumCallback;
enum Microsoft::WRL::CancelTransitionPolicy;
class CBrokeredClipDataObject::GetData::__l17::<lambda_69a057c63c786c100f3ea19039bf15ac>;
enum _TAG_UNNAMED_66;
struct std::_UInt_is_zero;
enum _TAG_UNNAMED_67;
struct Windows::Storage::IStorageStreamTransaction;
enum _SHELLSETWINDOWPOS_OPTIONS;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct tagGCP_RESULTSW;
enum _TAG_UNNAMED_68;
enum _TAG_UNNAMED_69;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> >;
class wil::details::<lambda_ec87cf16deae6897cc893140db9650f7>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct GetTypeValueImpl<long,unsigned short const *,unsigned short *,long>;
enum _TAG_UNNAMED_70;
enum KF_CATEGORY;
struct _CTL_ENTRY;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,float>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
enum _TAG_UNNAMED_71;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
enum _TAG_UNNAMED_72;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
enum _TAG_UNNAMED_73;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
enum tagOLEGETMONIKER;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *>;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >;
struct wistd::__make_signed<unsigned int,1>;
enum Windows::System::UserAuthenticationStatus;
class AdHocCallFrame<IOleInPlaceObjectWindowless,<lambda_cebf49c479c4b51a7dc8538f3542eaf8> >;
enum SYNCMGR_PROGRESS_STATUS;
struct _PO_WAKE_SOURCE_HISTORY;
struct tagLOGFONTA;
struct tagNONCLIENTMETRICSA;
enum _TAG_UNNAMED_74;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *>;
struct tagDUALSTRINGARRAY;
enum _TAG_UNNAMED_75;
struct HKEY__;
struct WINTRUST_BLOB_INFO_;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator>;
enum _TAG_UNNAMED_76;
struct Windows::Foundation::Collections::is_foundation_struct<IInspectable *>;
enum tagOLEWHICHMK;
struct _IMAGEHLP_GET_TYPE_INFO_PARAMS;
class MapEnumToSQMData<enum Ole32SQMFlags>;
struct LIST_ENTRY64;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
enum _TAG_UNNAMED_77;
struct wistd::__or_<>;
enum ACTIVATION_OBJECT_CONFIG_BEHAVIOR;
struct _wfinddata32_t;
struct __vc_attributes::atl::db_accessorAttribute;
struct WINTRUST_SGNR_INFO_;
struct _LAST_EXCEPTION_LOG;
class CMapKeyToValue;
class CMapUintPtr;
class XWinRT::AutoValue<HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >;
class XWinRT::AutoValue<IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >;
class Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0>;
enum Windows::Foundation::Diagnostics::CausalitySource;
struct Windows::Foundation::Collections::IMap<__int64,double>;
class CPaccelEnum;
enum _TAG_UNNAMED_78;
struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::AccessCache::AccessListEntry>;
enum _TAG_UNNAMED_79;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct _CRYPT_ATTRIBUTES;
struct _CMSG_SIGNER_INFO;
union _ULARGE_INTEGER;
struct tagBSTRBLOB;
struct tagBLOB;
struct tagCAC;
struct tagCAUB;
struct tagCAI;
struct tagCAUI;
struct tagCAL;
struct tagCAH;
struct tagCAUH;
struct tagCAFLT;
struct tagCABOOL;
struct tagCASCODE;
struct tagCACY;
struct tagCADATE;
struct tagCAFILETIME;
struct tagCACLSID;
struct tagCACLIPDATA;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCAPROPVARIANT;
struct tagDEC;
struct tagPROPVARIANT;
enum SPATIAL_INPUT_ACTIVATION_POLICY;
struct tagSTDOBJREF;
enum _TAG_UNNAMED_80;
enum RTL_DISK_SPEED_POLICY;
struct _RTL_DISK_SPEED_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator> >;
enum _TAG_UNNAMED_81;
struct WppPointerToUshort;
enum tagOLEMISC;
union CMapKeyToValue::CKeyWrap;
struct CMapKeyToValue::CAssoc;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *>;
struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
enum FLYOUTMENU_SETTING;
enum _TAG_UNNAMED_82;
class std::logic_error;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
enum _TAG_UNNAMED_83;
class stdext::bad_alloc;
enum _TAG_UNNAMED_84;
class wil::details::<lambda_c63cf361656f65a60020f4ec809d6ca1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileReference> const >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
class IsInt<unsigned int>;
enum _TAG_UNNAMED_85;
enum _TAG_UNNAMED_86;
enum tagCLIPWINDOWFLAGS;
struct IRunAsClipboard;
struct __vc_attributes::atl::request_handlerAttribute;
enum TASK_FLOW_ID;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float>;
enum _TAG_UNNAMED_87;
struct tagOBJREF;
enum _TAG_UNNAMED_88;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *>;
enum _TAG_UNNAMED_89;
class wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276>;
class wistd::__function::__func<<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276>,void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
enum _TAG_UNNAMED_90;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
enum _TAG_UNNAMED_91;
enum SEARCHPANE_HOTKEY;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct _PMD;
struct _s__CatchableType;
struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO;
enum _TAG_UNNAMED_92;
class wil::details::<lambda_1c79a90db9fd7b1a9e814504d97830b4>;
struct _MINIDUMP_THREAD_INFO_LIST;
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
enum _TAG_UNNAMED_93;
class std::fpos<_Mbstatet>;
enum tagGETCLSIDFLAGS;
struct _MINIDUMP_HEADER;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragOperation> const >;
enum _TAG_UNNAMED_94;
struct wistd::unary_function<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,void>;
struct SERVICE_TRIGGER_CUSTOM_STATE_ID;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
enum _TAG_UNNAMED_95;
class Microsoft::WRL::ComPtr<IDragDropExtensionForOLE>;
enum _TAG_UNNAMED_96;
class CStatData;
enum _SHARE_ITEM_TYPE;
struct wistd::default_delete<unsigned int [0]>;
enum _MINIDUMP_CALLBACK_TYPE;
union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
class wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *>;
enum _TAG_UNNAMED_97;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::AgileRef const >;
enum _TAG_UNNAMED_98;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan>;
struct IInspectable;
class wil::ThreadFailureCache;
enum _TAG_UNNAMED_99;
class wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
enum _TAG_UNNAMED_100;
struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Uri *>;
enum _TAG_UNNAMED_101;
class std::initializer_list<char>;
enum tagLC_ITEM_SET_TYPE;
struct _PROCESS_HANDLE_TRACING_ENABLE;
struct wistd::default_delete<char [0]>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef>;
class OleDragDropTracing::CallContext;
enum _TAG_UNNAMED_102;
struct _RTL_LFG_RNG_STATE;
enum _TAG_UNNAMED_103;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _CERT_DH_PARAMETERS;
struct Microsoft::WRL::RuntimeClassFlags<3>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus>;
enum _TAG_UNNAMED_104;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wil::select_result>;
enum _TAG_UNNAMED_105;
enum _TAG_UNNAMED_106;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FolderInformation *>;
struct _WIN_CERTIFICATE;
class CHwnd;
struct _EISA_PORT_DESCRIPTOR;
struct _EISA_PORT_CONFIGURATION;
enum tagSTGC;
struct tagFILTERREGION;
struct Windows::Foundation::IReferenceArray<_GUID>;
struct _SAFER_CODE_PROPERTIES_V1;
enum SPLASHSCREEN_IMAGE_TYPE;
class CPoint;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
class Windows::Internal::GitPtrImpl<Windows::Internal::GitPtr>;
enum Windows::Foundation::RegistrationScope;
struct _FILE_STANDARD_LINK_INFORMATION;
enum _TAG_UNNAMED_107;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>;
enum tagCLIPWNDFLAGS;
enum _TAG_UNNAMED_108;
struct WINTRUST_CERT_INFO_;
struct _tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EventWriteTransfer,_GUID const *,_GUID const *>;
enum tagCS_COLUMN_WIDTH_TYPE;
struct ISimpleFrameSite;
class CReadOnlyStream::CopyTo::__l8::<lambda_3aa8babb2821f2228e7076c7bcc65b4a>;
enum _TAG_UNNAMED_109;
union _RTL_RUN_ONCE;
class wil::details::static_lazy<ComTelemetryProvider>;
class wil::details::<lambda_50267deb61ad6fadbd165c817716b257>;
enum _TAG_UNNAMED_110;
class wistd::__function::__base<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>;
struct Windows::Foundation::Collections::IVector<bool>;
enum PICKER_TYPE;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
enum _TAG_UNNAMED_111;
struct _POWER_THROTTLING_PROCESS_STATE;
struct IROTData;
struct _MINIDUMP_SYSTEM_FILECACHE_INFORMATION;
struct _EISA_MEMORY_TYPE;
struct _EISA_MEMORY_CONFIGURATION;
enum EDP_POLICY_RESULT;
enum __MIDL___MIDL_itf_shpriv_0000_0034_0001;
class OleFlushClipboard::__l13::<lambda_9502ffa08436d10c47ab2b6016684077>;
class std::invalid_argument;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
enum EDP_CONTEXT_STATES;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
enum tagLC_SELECTION_MODE;
struct _CERT_STRONG_SIGN_PARA;
struct IComClassInfo;
enum _TAG_UNNAMED_112;
enum _TAG_UNNAMED_113;
struct std::forward_iterator_tag;
struct tagMETHODDATA;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
enum GET_PROPERTY_STORE_TYPE;
struct ITypeLib2;
enum _TAG_UNNAMED_114;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
struct wil::details::IFunctor;
enum _TAG_UNNAMED_115;
struct CArray<CStatData>::ArrayNode;
struct IDataAdviseHolder;
enum SHELL_BROWSER_FRAME_SIZE_POSITION;
enum _TAG_UNNAMED_116;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassInfo> const >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
enum _AGGREGATION_MODE;
class CFormatEtc;
struct CArray<CFormatEtc>::ArrayNode;
enum Windows::Storage::Provider::FileUpdateStatus;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >;
struct IApplicationAssociationRegistration;
enum _TAG_UNNAMED_117;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IClipboardTaskCompletion,Microsoft::WRL::FtmBase>;
enum _TAG_UNNAMED_118;
struct _SID_AND_ATTRIBUTES;
enum SYNCMGR_CANCEL_REQUEST;
struct __vcrt_va_list_is_reference<unsigned int>;
enum _TAG_UNNAMED_119;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
struct _IMAGE_LINENUMBER;
enum _FILE_INFO_BY_HANDLE_CLASS;
struct ISurrogateService;
struct _CERT_TRUST_STATUS;
struct _CERT_CHAIN_ELEMENT;
class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>;
struct IOleControl;
enum _TAG_UNNAMED_120;
struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > > >;
enum PATHCCH_OPTIONS;
class CSCMergedEnum<IEnumGUID,_GUID>;
struct _FP_32;
struct _FP_64;
struct _FP_80;
struct _FP_128;
enum Microsoft::WRL::ModuleType;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >;
enum _TAG_UNNAMED_121;
struct Windows::Foundation::Collections::VectorChangedEventHandler<float>;
enum tagREADYSTATE;
enum FULL_SCREEN_OVERLAYS;
class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
struct wistd::integral_constant<bool,0>;
struct IComDispatchInfo;
enum tagQACONTAINERFLAGS;
class wil::details::<lambda_5a3eff46511133451d1e1b0a53661816>;
struct Windows::Foundation::Collections::IVectorView<unsigned int>;
enum tagPROPBAG2_TYPE;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct IErrorInfo;
enum _WOW64_PROCESS;
struct IXTLRuntime;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>;
enum wil::RemoveDirectoryOptions;
class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::InitNew::__l2::<lambda_4f665fe9629adf1b6321c2bb89cc94f4>;
enum tagPOINTERINACTIVE;
struct _CRYPT_TIMESTAMP_RESPONSE;
enum _TAG_UNNAMED_122;
enum tagLOCKTYPE;
struct __WilFeatureTraits_Feature_MarshalByValue;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
enum _APPCONTAINER_SID_TYPE;
enum ADDRESS_MODE;
struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> > >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
struct _FILE_NAME_INFO;
enum _TAG_UNNAMED_123;
struct IPersistStorage;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification> > >;
struct wil::details::folder_watcher_state;
enum wil::details::ReportFailureOptions;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>;
enum wil::FolderChangeEvent;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1>;
struct tagCONTROLINFO;
class AdditionHelper<unsigned int,unsigned __int64,4>;
enum ComCatalogDiagnosticData::Catalogs;
enum _MINIDUMP_STREAM_TYPE;
struct Windows::Foundation::IReference_impl<unsigned __int64>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *>;
struct _remoteMETAFILEPICT;
class std::allocator<char>;
struct IUriBuilder;
enum _TAG_UNNAMED_124;
struct _IMAGE_BASE_RELOCATION;
class wil::details::<lambda_8a4932591d66949a311fbddd08dbf9c6>;
struct _SYSTEM_FIRMWARE_RAMDISK_INFORMATION;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs *>;
enum _CALLSOURCE;
class TryGetTypeInfoFromIIDViaRegistry::__l112::<lambda_fc60b093486e22f751d51f4c0f5d35fc>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *>;
struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&GlobalUnlock,void *>;
struct IXMLDOMAttribute;
enum _EDP_TAGGED_APP_MODE;
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
class wil::details::<lambda_744360b1878fd32916ff0a6b90bd54b5>;
enum ADJACENT_DISPLAY_EDGES;
enum tagACTIVATEFLAGS;
struct ICreateTypeInfo;
class CMonikerFactory;
enum tagExtentMode;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
enum _MINIDUMP_TYPE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDataFormatIterator> const >;
enum FILETYPEATTRIBUTEFLAGS;
struct _CRYPT_TRUST_REG_ENTRY;
struct IEnumConnections;
class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >;
enum IMAGEHLP_SF_TYPE;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct _RTL_VERIFIER_PAGEHEAP_INFORMATION;
struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION;
enum wil::ErrorReportingType;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
enum FormatMatchFlag;
enum CreateClipDataObjectOptions;
class CStmBufWrite;
enum tagREGCLS;
class std::basic_string_view<char32_t,std::char_traits<char32_t> >;
enum DISPLAYCONFIG_DEVICE_INFO_TYPE;
struct DISPLAYCONFIG_DEVICE_INFO_HEADER;
struct _DISPLAYCONFIG_SDR_WHITE_LEVEL;
struct IPropertyBag2;
enum Windows::Foundation::Collections::CollectionChange;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator>;
struct _IMAGEHLP_SYMBOL64;
struct _IMAGEHLP_SYMBOL64_PACKAGE;
struct ClassMonikerData;
class CClassMoniker;
enum IMAGEHLP_EXTENDED_OPTIONS;
struct _KEY_VALUE_BASIC_INFORMATION;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IUnknown,0,0>;
enum IMAGEHLP_HD_TYPE;
struct Windows::Foundation::Collections::IIterator_impl<__int64,1>;
struct INoMarshal;
struct SIP_SUBJECTINFO_;
enum _TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;
class _TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>;
enum PLM_TASKCOMPLETION_CATEGORY_FLAGS;
struct MarshalingContextAttributeValue;
class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >;
struct _IMAGE_EXPORT_DIRECTORY;
enum _TAG_UNNAMED_125;
enum tagMKREDUCE;
struct WilFailureCodeLocation;
struct __std_exception_data;
struct Windows::Foundation::IAsyncOperation_impl<IInspectable *>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageLibraryChange *>;
enum ComTlsFlags;
struct _TP_CALLBACK_ENVIRON_V3;
enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION;
struct Windows::Foundation::Point;
class CMapDwordDword;
enum TERMINATE_DOCUMENT;
enum tagCALLCATEGORY;
struct SIP_DISPATCH_INFO_;
struct _RTL_DYNAMIC_HASH_TABLE;
enum tagADVF;
struct _CERT_SIMPLE_CHAIN;
enum tagSERVERCALLEX;
struct tagSCROLLINFO;
struct _tlgWrapperByVal<4>;
enum _PROCESS_ENERGY_COMPONENT_TYPE_NUM;
enum tagMEMCTX;
enum Quirks::QuirkStatus;
struct _MINIDUMP_THREAD_EX;
class GetUserSidFromToken::__l2::<lambda_77bd92bdd913837a9604f653574db8f0>;
class wil::details::lambda_call<<lambda_77bd92bdd913837a9604f653574db8f0> >;
enum _TAG_UNNAMED_126;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *>;
struct _MINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION;
struct wil::details::static_lazy<ComTelemetry>::Completer;
struct _RTL_SPARSE_BITMAP_PARAMETER;
enum tagSERVERCALL;
enum tagDATADIR;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int>;
class Microsoft::WRL::ComPtr<IUnknown>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,void *>;
struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
class DragDropTelemetryHelper;
enum _TAG_UNNAMED_127;
class CPres;
enum _TAG_UNNAMED_128;
enum tagACTIVATIONTYPE;
struct Windows::Foundation::Collections::IVector<int>;
struct wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t>;
enum ClassRegistration::SERVER_TYPE;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wil::details::event_watcher_state *>;
struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER;
struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE;
class Microsoft::WRL::Details::WeakReferenceImpl;
struct _IMAGE_TLS_DIRECTORY64;
enum DIT_HITTESTATTRIBUTES;
struct _CTL_USAGE;
struct _CERT_USAGE_MATCH;
class wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_failfast_policy> >;
enum OCT_BANNED_API;
struct _SOURCEFILEW;
struct Windows::Foundation::Collections::IMap<__int64,__int64>;
struct _ACE_HEADER;
struct _SYSTEM_SCOPED_POLICY_ID_ACE;
enum tagOLECLOSE;
struct ISpecifyPropertyPages;
enum SELECTIONMANAGERVALUE;
struct StringTraits<unsigned short *>;
struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
class wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t> >;
enum tagACTIVATION_FLAGS;
class Common::AutoBaseHandle<HINSTANCE__ *,&Common::AutoHandleCloseModule<HINSTANCE__ *> >;
struct _CRYPT_PKCS12_PBE_PARAMS;
struct _STRING;
struct IPersistFile;
enum PLM_WINDOW_CHANGE;
class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
union _ARM64_NT_NEON128;
enum _TAG_UNNAMED_129;
class std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t> > >;
enum PLM_GPU_UTILIZATION_SIMULATION_TYPE;
struct _RTL_CRITICAL_SECTION;
class Microsoft::WRL::Wrappers::CriticalSection;
enum _TAG_UNNAMED_130;
enum SHARE_ACTIVATION_MODE;
struct Windows::Foundation::Collections::IIterator_impl<short,1>;
class wil::details::<lambda_6843b55dc6cff76e89c04bc1553212af>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFile *>;
enum _TAG_UNNAMED_131;
enum _TAG_UNNAMED_132;
class CClass;
class CGenericObject;
struct std::greater_equal<void>;
enum PROXY_PHASE;
class ModernSTAWaitContext;
enum _TAG_UNNAMED_133;
struct _JIT_DEBUG_INFO;
struct wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t>;
enum _PS_MITIGATION_OPTION;
struct Windows::Foundation::Collections::IMap_impl<__int64,double>;
class wil::details::<lambda_d452d2458692118f3227c5880e0fb0e0>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char>;
enum ITEMSVIEWSPYVALUE;
enum _TAG_UNNAMED_134;
struct CDefClient::COleClientSiteImpl;
struct ILockBytes;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>;
enum _TAG_UNNAMED_135;
class _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>;
enum DELAYED_RETRIEVAL_TYPE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef>;
enum _TAG_UNNAMED_136;
struct wistd::default_delete<_GUID [0]>;
enum CHK;
class CDdeServerCallMgr;
struct EXECUTEACK;
struct CDefClient::CUnknownImpl;
struct CDefClient::CAdviseSinkImpl;
class CDefClient;
struct _GENERIC_MAPPING;
class wil::details::<lambda_58dd77efe875d0a715711520f889fc12>;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> >;
enum ACTIVATION_OBJECT_STATE;
class wil::details::<lambda_34f7ec30e17aba67efa986c1e35470a3>;
enum _tagSHARE_EVENT;
struct IDummyHICONIncluder;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComClassIterator> >;
enum INPUTDELEGATION_MODE_FLAGS;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct IIdentifyHive;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
enum WINDOW_ARRANGEMENT_OPTIONS;
struct __vc_attributes::sourceAttribute;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>;
enum MODE_CHANGE_REASON;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
enum WINDOW_SIZE_PROGRESS_REQUEST;
struct _SYSTEM_CPU_SET_TAG_INFORMATION;
class wistd::__function::__base<void __cdecl(void)>;
struct wistd::__libcpp_is_integral<unsigned long>;
enum INPUT_DESTINATION_ROUTING_MODE;
enum DivisionState;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >;
struct FMTCACHE;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct wistd::__is_referenceable_impl;
enum _TAG_UNNAMED_137;
class wil::unique_struct<tagSTGMEDIUM,void (__cdecl*)(tagSTGMEDIUM *),&ReleaseStgMedium,std::nullptr_t,0>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
enum _TAG_UNNAMED_138;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
enum _TAG_UNNAMED_139;
struct Windows::Foundation::IReference<Windows::Foundation::DateTime>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>;
enum _TAG_UNNAMED_140;
struct _OMAP;
class std::_Ref_count_base;
enum ComparisonMethod;
struct IPropertyBag;
enum Windows::System::UserAgeConsentResult;
struct DBGHELP_DATA_REPORT_STRUCT;
class wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> >;
enum tagDISCARDCACHE;
struct Windows::Foundation::Collections::is_pointer<Windows::System::IUser *>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
enum _TAG_UNNAMED_141;
struct _UNICODE_STRING;
struct _CURDIR;
struct _RTL_DRIVE_LETTER_CURDIR;
struct _RTL_USER_PROCESS_PARAMETERS;
struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IBuffer *>;
enum _TAG_UNNAMED_142;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
class Microsoft::WRL::Wrappers::SRWLock;
enum _TAG_UNNAMED_143;
struct __vcrt_va_list_is_reference<char const *>;
class wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_exception_policy> >;
enum _TAG_UNNAMED_144;
enum _TAG_UNNAMED_145;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
enum _TAG_UNNAMED_146;
struct std::atomic<unsigned long>;
class CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
class CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
enum _TAG_UNNAMED_147;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> const >;
enum WilFailureProperties;
class DefaultIBindStatusCallback;
struct Windows::Foundation::IReference<double>;
enum Windows::Storage::FileAttributes;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wil::window_dc>;
enum WilFailureSubscriptionIdKind;
struct wil::details::close_invoke_helper<1,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,HSTRING_BUFFER__ *>;
enum _TAG_UNNAMED_148;
struct _callframeinternal_MIDL_TYPE_FORMAT_STRING;
enum SafeIntError;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
enum _FS_BPIO_OUTFLAGS;
struct _CRYPT_PROVIDER_CERT;
struct wil::hlocal_secure_deleter;
enum _TAG_UNNAMED_149;
enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *>;
struct tagEMRSCALEVIEWPORTEXTEX;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER;
enum _TAG_UNNAMED_150;
struct _CRYPT_PROVIDER_SGNR;
enum _MACHINE_ATTRIBUTES;
struct _CERT_PUBLIC_KEY_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_INFO;
class Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler>;
class Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_45abd8094c1017b7e15a72f54b22a4ba>;
class wil::details::lambda_call<<lambda_45abd8094c1017b7e15a72f54b22a4ba> >;
class wil::get_module_reference_for_thread::__l2::<lambda_2354d0eba41c0ae15d8f7cce2ec3a716>;
class wil::details::lambda_call<<lambda_2354d0eba41c0ae15d8f7cce2ec3a716> >;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool>;
enum _TAG_UNNAMED_151;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *>;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::UIDeactivate::__l2::<lambda_e225fcb61db02045a776fc8c7ed2b6cf>;
enum _NT_READ_FLAGS;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>;
struct _PROCESS_TELEMETRY_ID_INFORMATION;
enum _TAG_UNNAMED_152;
enum _TAG_UNNAMED_153;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumFORMATETC>;
enum _TAG_UNNAMED_154;
struct HSTRING_HEADER;
class Windows::Internal::StringReference;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Uri *>;
enum _TAG_UNNAMED_155;
class Microsoft::WRL::Wrappers::HStringReference;
struct Windows::Foundation::Collections::VectorChangedEventHandler<Windows::Storage::StorageFolder *>;
enum tagEXTCONN;
class CArray<CCacheNode>;
struct _tlgDataDescInit<_tlgIndexSequence<18,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17> >;
enum _EVENT_INFO_CLASS;
struct _CRL_ENTRY;
struct ICallInterceptor;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment>;
enum _TAG_UNNAMED_156;
enum _LINK_TRACKING_INFORMATION_TYPE;
struct _LINK_TRACKING_INFORMATION;
enum _TAG_UNNAMED_157;
struct _CERT_SELECT_CRITERIA;
enum std::io_errc;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>;
struct _MEMORY_RANGE_ENTRY;
enum Windows::ApplicationModel::Background::BackgroundTaskCancellationReason;
struct _MINIDUMP_SYSTEM_BASIC_INFORMATION;
class Windows::Internal::CoTaskMemPolicy<unsigned short>;
struct tagBITMAPCOREHEADER;
struct tagRGBTRIPLE;
struct tagBITMAPCOREINFO;
enum _TAG_UNNAMED_158;
enum _TAG_UNNAMED_159;
struct _XSTATE_CONFIGURATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> const >;
enum _TAG_UNNAMED_160;
struct _KSYSTEM_TIME;
struct _KUSER_SHARED_DATA;
class wil::details::<lambda_5ecc60cabf56feb436b73b233216c94c>;
struct _CRL_INFO;
struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *>;
enum std::pointer_safety;
enum _TAG_UNNAMED_161;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<bool> *>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int>;
struct wil::details::DestroyThreadPoolIo<2>;
class wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
class wil::details::ApiTelemetryLogger::ApiDataList;
enum _TAG_UNNAMED_162;
enum _TAG_UNNAMED_163;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
enum _TAG_UNNAMED_164;
struct HMAPKEY__;
struct Windows::Foundation::Collections::IIterator<float>;
enum WilFailureReportKind;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
enum _TAG_UNNAMED_165;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wil::paint_dc>;
struct _IMAGE_SECTION_HEADER;
struct _CRYPT_PROVIDER_PRIVDATA;
enum _TAG_UNNAMED_166;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IBuffer *>;
enum std::cv_status;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::UI::WindowId>;
class Microsoft::WRL::ComPtr<IPackagedComProxyStubCatalogInternal>;
struct _FILE_ZERO_DATA_INFORMATION_EX;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMoniker> const >;
enum _TAG_UNNAMED_167;
struct DLGTEMPLATE;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Point>;
struct ICatRegister;
enum _NT_WRITE_FLAGS;
struct PrivMemAllocator;
enum tagBIND_FLAGS;
struct wistd::default_delete<unsigned int [0]>::_EnableIfConvertible<unsigned int>;
struct IUriBuilderFactory;
struct _LDR_IMPORT_CALLBACK_INFO;
enum _TAG_UNNAMED_168;
enum _TAG_UNNAMED_169;
struct IImmersiveApplicationArrayService;
enum _TAG_UNNAMED_170;
struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>;
struct ISearchProtocol2;
enum BCRYPT_HASH_OPERATION_TYPE;
struct _BCRYPT_MULTI_HASH_OPERATION;
enum std::errc;
struct tagCURSORSHAPE;
struct ISequentialStream;
enum _TAG_UNNAMED_171;
enum _TAG_UNNAMED_172;
enum _TAG_UNNAMED_173;
enum Windows::Storage::FileProperties::PropertyPrefetchOptions;
struct _IMAGE_DYNAMIC_RELOCATION32_V2;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct IInternetProtocolRoot;
enum _TAG_UNNAMED_174;
struct wil::details::DestroyThreadPoolWait<2>;
enum _TAG_UNNAMED_175;
class COleCache::CCacheUnkImpl;
class CStreamDummy;
enum _TAG_UNNAMED_176;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
enum _TAG_UNNAMED_177;
struct _ALPC_SECURITY_ATTR;
struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1>;
enum _TAG_UNNAMED_178;
union std::_String_val<std::_Simple_types<char> >::_Bxty;
class std::_String_val<std::_Simple_types<char> >;
class std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>;
enum _WPP_FLAG_LEN_ENUM_MAX;
struct _ACCESS_ALLOWED_ACE;
struct Windows::Foundation::Collections::IVectorView<__int64>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFolder *>;
enum wil::ErrorReturn;
struct Windows::Foundation::Collections::IIterator<Windows::System::User *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>;
struct _CERT_KEYGEN_REQUEST_INFO;
enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS;
enum Windows::Storage::FileProperties::VideoOrientation;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumClassesOfCategories> const >;
struct Windows::Foundation::Collections::IIterator<short>;
class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >;
struct tagTEXTMETRICW;
struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFolder *>;
enum _TAG_UNNAMED_179;
struct std::hash<long double>;
struct wil::WNF_CHANGE_STAMP_STRUCT;
enum _TAG_UNNAMED_180;
class wil::details::pointer_range<wil::details_abi::ThreadLocalFailureInfo *>;
enum _TAG_UNNAMED_181;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>;
struct wistd::__nat;
enum _TAG_UNNAMED_182;
enum _SE_OBJECT_TYPE;
struct Windows::Foundation::IEventHandler_impl<IInspectable *>;
struct std::hash<std::thread::id>;
struct Windows::Foundation::Collections::IVector<Windows::Data::Text::TextSegment>;
enum _TAG_UNNAMED_183;
enum _TOKEN_ELEVATION_TYPE;
struct wil::cotaskmem_secure_deleter;
struct wil::details::IFunctorHost;
struct INdrVersion;
enum _TAG_UNNAMED_184;
struct _nlsversioninfo;
struct BATTERY_REPORTING_SCALE;
class wil::com_ptr_t<IPackagedComProxyStubCatalogInternal,wil::err_returncode_policy>;
struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct IPersistPropertyBag2;
enum _TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64>;
struct wistd::__make_unsigned<unsigned long,1>;
struct _SMB_SHARE_FLUSH_AND_PURGE_INPUT;
class SafeIntCompare<long,long>;
enum tagDRAGOP;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt> const >;
class Microsoft::WRL::Details::Nil;
struct __vcrt_assert_va_start_is_not_reference<unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
enum _TAG_UNNAMED_185;
enum DROPTARGETREENTRANCYMODEL;
class wil::details::<lambda_c39eae6bef46d2e9bbfab2bb710f3cfc>;
enum PROCESS_UICONTEXT;
class std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >;
class CSmAllocator;
enum GET_PACKAGE_SENTINEL_DISPOSITION;
struct wil::details::out_param_t<wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> > >;
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005;
struct _userHMETAFILEPICT;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
enum Windows::Storage::KnownFoldersAccessStatus;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char>;
struct wistd::__make_unsigned<unsigned short,1>;
enum _TAG_UNNAMED_186;
struct wil::details::localalloc_allocator;
enum SCALE_CHANGE_FLAGS;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>;
enum _TAG_UNNAMED_187;
struct Windows::Foundation::Collections::is_pointer<HSTRING__ *>;
class std::bad_cast;
struct _CERT_AUTHORITY_INFO_ACCESS;
enum _TAG_UNNAMED_188;
class wil::details::<lambda_c8e945aeb5064efaeeda99c05537d31a>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
enum WELL_KNOWN_SID_TYPE;
struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int>;
enum _TAG_UNNAMED_189;
struct wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification>;
struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>;
struct WilFailureReport;
struct wil::details::cotaskmem_allocator;
struct wil::details::SecureZeroData;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *>;
enum ProcessToken::AppContainerState;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *>;
struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int>;
enum _TAG_UNNAMED_190;
struct PPM_IDLE_STATE_BUCKET_EX;
struct PPM_IDLE_STATE_ACCOUNTING_EX;
class ComTelemetryProvider::CallContext;
enum ProcessToken::SysAppIdState;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt10> >;
enum ProcessToken::LifecycleManagerCanSuspendState;
struct _SERVICE_TABLE_ENTRYA;
enum _TAG_UNNAMED_191;
struct std::_Init_once_completer;
struct ITypeInfoVtbl;
enum ProcessToken::WakeOnIntraPackageCallState;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
enum _TAG_UNNAMED_192;
struct IInitializeSpy;
enum _TAG_UNNAMED_193;
enum _TP_DEBUG_CLASS;
enum _TAG_UNNAMED_194;
struct wistd::__compressed_pair_elem<wil::process_heap_deleter,1,1>;
class XWinRT::SRWLock;
enum _TAG_UNNAMED_195;
enum _TAG_UNNAMED_196;
enum _TAG_UNNAMED_197;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *>;
enum _ATOM_INFORMATION_CLASS;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
class InitializeAndReadIsAppContainer::__l2::<lambda_50fe48bf199844a7ed15a94e5b76e4d1>;
enum _TAG_UNNAMED_198;
enum _TAG_UNNAMED_199;
class Common::AutoHandleModule;
enum _TAG_UNNAMED_200;
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
class wil::details::<lambda_5c8c54d8468ec8b2664627b947e2a493>;
enum _TAG_UNNAMED_201;
enum _TAG_UNNAMED_202;
class MultiplicationHelper<unsigned int,unsigned short,3>;
enum AdditionState;
struct HDESK__;
enum _TAG_UNNAMED_203;
enum _TAG_UNNAMED_204;
enum _TAG_UNNAMED_205;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Skip::__l2::<lambda_19600923239bd138db611a3bcd35a184>;
struct wil::details::close_invoke_helper<1,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,_WNF_USER_SUBSCRIPTION *>;
enum _TAG_UNNAMED_206;
struct CDdeObject::COleItemContainerImpl;
enum RTLWOW64_CROSSPROCESS_WORK_OPERATION;
struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64>;
enum _TAG_UNNAMED_207;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFile *>;
enum _TAG_UNNAMED_208;
enum _TAG_UNNAMED_209;
enum _TAG_UNNAMED_210;
struct _MINIDUMP_MEMORY_INFO_LIST;
enum _TAG_UNNAMED_211;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *>;
enum _TAG_UNNAMED_212;
struct _KEY_SET_LAYER_INFORMATION;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,HKEY__ *,0,std::nullptr_t> > >;
enum _TAG_UNNAMED_213;
enum _TAG_UNNAMED_214;
struct Windows::Storage::AccessCache::IItemRemovedEventArgs;
enum _TAG_UNNAMED_215;
struct _PS_MITIGATION_AUDIT_OPTIONS_MAP;
struct _BCRYPT_DH_KEY_BLOB;
enum _TAG_UNNAMED_216;
struct ISurrogate;
struct _tlgProvider_t;
struct CDdeObject::CProxyManagerImpl;
struct _RTL_QUERY_DEBUG_VIRTUAL_PROCESS;
enum _DEBUG_CONTROL_SPACE_ITEM;
struct FRAME_Invoke;
struct DISPATCH_SERVER_FRAME;
enum _TAG_UNNAMED_217;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0>;
enum _TAG_UNNAMED_218;
class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >;
class OleIsCurrentClipboardInternal::__l17::<lambda_3904bc2c8ffcdb0dc095ee3ff7f15bb5>;
enum utl::float_round_style;
class std::error_condition;
enum _TAG_UNNAMED_219;
struct _SYSTEM_ACCESS_FILTER_ACE;
enum _TAG_UNNAMED_220;
struct ITypeFactory;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> >;
enum MultiplicationState;
struct _ACTIVATION_CONTEXT_DATA;
enum _TAG_UNNAMED_221;
enum _CM_SERVICE_NODE_TYPE;
struct _WNF_STATE_NAME;
struct tagRPCOLEMESSAGE;
enum wil::CustomReportingKind;
enum _TAG_UNNAMED_222;
enum wil::VariantReportingKind;
class Windows::Internal::String;
enum AppPolicyWindowingModel;
class wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::window_dc,HDC__ *,0,std::nullptr_t> >;
enum _TAG_UNNAMED_223;
class wil::details::EnsureCoalescedTimer::__l8::<lambda_d51448ba32f8ef42e59400edd4566183>;
enum _TAG_UNNAMED_224;
struct IOleInPlaceObject;
enum RESOURCE_CONTRAST;
struct Windows::Foundation::Collections::IVectorView<bool>;
struct _LONGDOUBLE;
struct Windows::Foundation::Collections::IIterable<HSTRING__ *>;
class wil::details::FeatureStateManager::EnsureSubscribedToStateChangesUnderLock::__l5::<lambda_1ad7ecfab602a777ecf020873216a663>;
enum _TAG_UNNAMED_225;
struct WINTRUST_SIGNATURE_SETTINGS_;
struct INTERPRETER_OPT_FLAGS;
struct __MIDL_ICallFrame_0001;
struct MD_METHOD;
struct IInternetThreadSwitch;
enum MACPICTFAILUREREASONS;
class std::initializer_list<char16_t>;
enum BinaryState;
struct IUri;
struct tagQACONTROL;
enum IMMERSIVELAUNCHERDISMISSMETHOD;
enum wil::FeatureString;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs *>;
enum SubtractionState;
struct _CERT_STRONG_SIGN_SERIALIZED_INFO;
enum _TAG_UNNAMED_226;
struct wistd::unique_ptr<_TOKEN_GROUPS_AND_PRIVILEGES,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;
enum tagOLECONTF;
enum _TAG_UNNAMED_227;
enum _SE_AUDIT_OPERATION;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t> > >;
enum _TAG_UNNAMED_228;
struct SYMSRV_INDEX_INFO;
struct Windows::Foundation::Collections::IIterable<__int64>;
enum RESOURCE_SCALE;
enum wil::SupportedExceptions;
struct _TP_CALLBACK_INSTANCE;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double>;
enum _TAG_UNNAMED_229;
enum tagSTRUCTURED_QUERY_SINGLE_OPTION;
enum __MIDL_IBindStatusCallback_0004;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
enum _TAG_UNNAMED_230;
struct _MINIDUMP_EXCEPTION_INFORMATION64;
class wil::details::<lambda_b31086e40af2dedb9a355c1c122855d8>;
enum Microsoft::WRL::ErrorPropagationPolicy;
struct PPM_WMI_PERF_STATE;
enum VERIFIER_MODE;
enum CastMethod;
enum _TAG_UNNAMED_231;
struct CBuffer;
class wil::ActivityThreadWatcher;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>;
struct __MIDL___MIDL_itf_activate_0000_0010_0004;
enum _SYSTEM_PIXEL_FORMAT;
struct IOleClassInfo;
class MultiplicationHelper<unsigned __int64,unsigned __int64,5>;
enum AbsMethod;
enum tagPOINTER_DEVICE_CURSOR_TYPE;
union _ARM64_FPSR_REG;
struct IWinRTApplicationCatalogInternal;
struct tagSOUNDSENTRYW;
enum _TAG_UNNAMED_232;
struct Windows::Storage::Search::IStorageQueryResultBase;
enum tagINPUT_MESSAGE_ORIGIN_ID;
struct _CAT_MEMBERINFO2;
enum tagRPCOPT_SERVER_LOCALITY_VALUES;
enum wil::EventOptions;
enum MCA_EXCEPTION_TYPE;
struct IPSFactoryBufferVtbl;
enum DISPLAYCONFIG_TOPOLOGY_ID;
enum _TAG_UNNAMED_233;
struct _RPC_BINDING_HANDLE_OPTIONS_V1;
struct tagMSG;
class wil::details::<lambda_ae697f559b36aa82565cc2bf31cbd3d4>;
class ComTelemetry::CallContext;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
enum _SECTION_INHERIT;
struct Windows::Foundation::Collections::supports_cleanup<unsigned __int64>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,wistd::integral_constant<unsigned __int64,2>,void *,__int64,-1,void *> > >;
enum __MIDL_ICallFrame_0003;
struct IXMLDOMText;
struct _MINIDUMP_VM_QUERY_CALLBACK;
enum _IDL_CS_CONVERT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumCategoriesOfCatalogClass> >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClientSecurity> >;
enum _TAG_UNNAMED_234;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64>;
struct _STACK_TRACE_DATABASE;
struct _SERVICE_LAUNCH_PROTECTED_INFO;
enum _TAG_UNNAMED_235;
struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct tagEMRGDICOMMENT;
enum tagPOINTER_BUTTON_CHANGE_TYPE;
enum _WATCHDOG_HANDLER_ACTION;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >;
struct _UNWIND_HISTORY_TABLE_ENTRY;
struct _UNWIND_HISTORY_TABLE;
class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IComClassIterator>;
enum _TAG_UNNAMED_236;
struct NCryptKeyName;
enum DBCOMPAREENUM;
enum _CSV_CONTROL_OP;
struct _CSV_CONTROL_PARAM;
struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *>;
enum _TAG_UNNAMED_237;
struct _TP_IO;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::AccessCache::AccessListEntry>;
enum _TAG_UNNAMED_238;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *>;
enum _TAG_UNNAMED_239;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<CProcessPatternTbl> >;
struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK;
struct Windows::Foundation::Collections::IVectorView_impl<float,1>;
enum _TAG_UNNAMED_240;
struct _tlgWrapSz<char>;
struct _SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION;
enum _TAG_UNNAMED_241;
struct _tlgWrapperPtrSizeType;
enum tagCPFLAGS;
class Microsoft::WRL::ComPtr<CBrokeredClipDataObject>;
enum _TAG_UNNAMED_242;
enum _TAG_UNNAMED_243;
struct std::atomic<long>;
enum _TAG_UNNAMED_244;
struct IErrorLog;
struct _IMAGEHLP_CBA_READ_MEMORY;
enum _TAG_UNNAMED_245;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
enum DBPROPENUM20;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
enum _TAG_UNNAMED_246;
enum _TAG_UNNAMED_247;
struct Windows::Foundation::Collections::IMapView_impl<__int64,double>;
struct IUrlMon;
struct SPointerHashNode;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::AgileRef>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
enum _TAG_UNNAMED_248;
struct _tlgDataDescInit<_tlgIndexSequence<20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19> >;
struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION;
enum _TAG_UNNAMED_249;
enum _TAG_UNNAMED_250;
enum _tagPI_FLAGS;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
enum _TAG_UNNAMED_251;
enum _TAG_UNNAMED_252;
enum _TAG_UNNAMED_253;
enum _TAG_UNNAMED_254;
enum _TAG_UNNAMED_255;
struct IProvideMultipleClassInfo;
class Microsoft::WRL::ComPtr<IGlobalInterfaceTable>;
class Windows::Internal::Details::Git;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageItem *>;
enum _TAG_UNNAMED_256;
enum _TAG_UNNAMED_257;
struct IMachineGlobalObjectTable;
struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64>;
enum _TAG_UNNAMED_258;
enum AddPackageDependencyOptions;
class SafeInt<long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >;
enum _TAG_UNNAMED_259;
struct tagRPC_ERROR_ENUM_HANDLE;
enum _TAG_UNNAMED_260;
enum _TAG_UNNAMED_261;
struct IEnumRGBQuad;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
enum _UNWIND_OP_CODES;
struct wistd::__compressed_pair_elem<unsigned short *,0,0>;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorChangedEventArgs>;
enum _RTL_GENERIC_COMPARE_RESULTS;
struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits;
class wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&CloseHandle> >;
enum _TAG_UNNAMED_262;
class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy>;
class AdHocInterceptor<IOleInPlaceObject>;
enum _TAG_UNNAMED_263;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
enum _TAG_UNNAMED_264;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Search::IndexedState>;
struct tagACTCTX_SECTION_KEYED_DATA;
enum _SUSPEND_RESILIENCY_TYPE;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int>;
struct ISimpleBinding;
enum AsycImageDataMembers;
enum _TAG_UNNAMED_265;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>;
struct DLGITEMTEMPLATE;
struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>;
enum __MIDL_IBindStatusCallbackEx_0001;
enum _TAG_UNNAMED_266;
class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>;
enum _CPU_SET_INFORMATION_TYPE;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>;
enum CI_WINDOWS_LOCKDOWN_RESTRICTION;
class std::lock_guard<std::mutex>;
enum _TAG_UNNAMED_267;
struct SPC_SIGINFO_;
class DragDropTelemetry;
enum _TAG_UNNAMED_268;
enum Windows::Storage::StorageItemTypes;
enum wil::SlimEventType;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator> const >;
struct _TP_POOL_STACK_INFORMATION;
enum _TAG_UNNAMED_269;
struct IFontDisp;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView>;
enum _RPC_HTTP_REDIRECTOR_STAGE;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct _FILE_STORAGE_INFO;
enum wil::WilInitializeCommand;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
struct _GROUP_AFFINITY;
struct _PROCESSOR_RELATIONSHIP;
struct _NUMA_NODE_RELATIONSHIP;
enum _PROCESSOR_CACHE_TYPE;
struct _CACHE_RELATIONSHIP;
struct _PROCESSOR_GROUP_INFO;
struct _GROUP_RELATIONSHIP;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime>;
enum _TRANSACTION_INFORMATION_CLASS;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
enum wil::ActivityOptions;
struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER;
enum FILE_WRITE_FLAGS;
struct _PROCESS_LEAP_SECOND_INFO;
enum _TAG_UNNAMED_270;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE;
enum _TAG_UNNAMED_271;
struct _SYSTEM_BIGPOOL_ENTRY;
struct _SYSTEM_BIGPOOL_INFORMATION;
enum Windows::Storage::StorageLibraryChangeType;
enum Windows::Storage::Search::FolderDepth;
struct IAllowAstaToAstaDeadlockRisk;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
enum _SUBSYSTEM_INFORMATION_TYPE;
class CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
enum Windows::Storage::Search::IndexerOption;
class ComEventActivity;
class wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindClose> >;
enum _TAG_UNNAMED_272;
enum Windows::Storage::NameCollisionOption;
enum Windows::Storage::Search::DateStackOption;
struct IProvideClassInfo;
enum tagRpcCallType;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct IPerPropertyBrowsing;
struct tagPALETTEENTRY;
enum Windows::Storage::FileProperties::ThumbnailMode;
enum Windows::Storage::FileProperties::ThumbnailOptions;
enum _MONITOR_DISPLAY_STATE;
enum _DEVICE_POWER_STATE;
struct _NDR_EXPR_DESC;
enum ServerProtectionLevel;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> > >;
enum _TAG_UNNAMED_273;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::KnownFoldersAccessStatus>;
enum _TAG_UNNAMED_274;
struct _tlgDataDescInit<_tlgIndexSequence<8,0,1,2,3,4,5,6,7> >;
struct CsFrame;
struct tagPICTDESC;
class CCacheStream;
class CRgPv;
class CNotifyCP;
class CPicture;
enum _KSOFTWARE_INTERRUPT_TARGET;
enum _TAG_UNNAMED_275;
struct IProtocolHandlerSite;
class wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> >;
enum __MIDL_IMonikerProp_0001;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class wil::details::<lambda_0a0ccd44a48273821f6c0d56fd4c080e>;
struct _MINIDUMP_MISC_INFO;
struct GetTypeValueImpl<long,unsigned short const *,unsigned short const *,long>;
class IsFloat<unsigned short,0>;
enum _TAG_UNNAMED_276;
struct SIP_INDIRECT_DATA_;
struct _Thrd_t;
class std::thread;
enum _IRQ_GROUP_POLICY;
struct _SYSTEM_FEATURE_CONFIGURATION_QUERY;
enum WMIDPREQUESTCODE;
class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>;
enum _SC_STATUS_TYPE;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>;
enum _KCLOCK_TIMER_DEADLINE_TYPE;
enum _TAG_UNNAMED_277;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> >;
enum _SHUTDOWN_ACTION;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::Search::SortEntry>;
enum _TAG_UNNAMED_278;
struct _CRYPT_PROVIDER_SIGSTATE;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
enum _TAG_UNNAMED_279;
class Windows::Foundation::Uri;
struct wistd::default_delete<unsigned short [0]>;
enum POWER_INFORMATION_LEVEL;
enum _TAG_UNNAMED_280;
struct _REFS_REMOVE_HARDLINK_BACKPOINTER;
enum CRefExportCount::tagTokens;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
enum _TAG_UNNAMED_281;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct ISynchronizeEvent;
struct IPackagedComProxyStubCatalogInternal;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IDragOperationInternal,0,0>;
enum _TAG_UNNAMED_282;
enum RpcProxyPerfCounters;
struct _MODEMSETTINGS;
enum _APTTYPE;
struct tagSTATSTG;
struct _FILE_PIPE_EVENT_BUFFER;
enum _THREAD_UMS_INFORMATION_COMMAND;
enum Microsoft::WRL::DelegateCheckMode;
enum _THREAD_WORKLOAD_CLASS;
class ComTelemetry;
enum _TAG_UNNAMED_283;
enum Microsoft::WRL::InvokeMode;
struct _NCryptAlgorithmName;
struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO;
struct STARTING_LCN_INPUT_BUFFER;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
enum _TAG_UNNAMED_284;
enum ENUM_FILE_INFORMATION_CLASS;
struct _CERT_REVOCATION_CRL_INFO;
struct _RTL_BITMAP_EX;
struct _RTL_RVA_LIST;
class wil::unique_any_t<wil::folder_change_reader_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >;
struct Windows::Storage::AccessCache::AccessListEntry;
enum _TAG_UNNAMED_285;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *>;
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState>;
enum SEARCHTEXTTYPE;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
enum Windows::Storage::Search::IndexedState;
struct tagINTERFACEDATA;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IServiceProvider> >;
struct _SYSTEM_HIBERFILE_INFORMATION;
enum _TAG_UNNAMED_286;
enum CONFIRMATIONRESPONSE;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>;
enum _TAG_UNNAMED_287;
struct _MEMORY_FRAME_INFORMATION;
struct _FILEOFFSET_INFORMATION;
struct _PAGEDIR_INFORMATION;
struct _UNIQUE_PROCESS_INFORMATION;
struct _MMPFN_IDENTITY;
struct _MM_ETW_PAGE_INFO;
enum _TAG_UNNAMED_288;
enum IMM_SYSTEM_MODE;
struct IXMLDSOControl;
class CEnumClassesOfCategories;
enum ComTrace::LogTokenFlags;
struct _EVENT_DESCRIPTOR;
struct _SECURITY_ATTRIBUTES;
enum _TAG_UNNAMED_289;
struct _FILE_LEVEL_TRIM_RANGE;
struct _FILE_LEVEL_TRIM;
enum SYNCMGR_RESOLUTION_FEEDBACK;
enum ZBID;
struct Windows::Foundation::Collections::IIterable_impl<enum Windows::System::UserWatcherUpdateKind>;
struct IWinInetCacheHints2;
enum IMMERSIVE_APPLICATION_PRESENTATION_CHANGE;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct IPointerInactive;
class SafeIntInternal::SafeIntExceptionHandler<SafeIntException>;
enum ELEVATION_REASON;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0>;
enum _RPC_NOTIFICATION_TYPES;
struct Windows::Foundation::IReferenceArray_impl<short>;
enum CONFLICT_FILTER;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct _ROOT_INFO_LUID;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IMarshal> >;
enum _HOT_PATCH_INFORMATION_CLASS;
struct IComClassInfo2;
enum _WOW64_SHARED_INFORMATION;
enum _REFS_SMR_VOLUME_GC_ACTION;
struct std::_Default_allocator_traits<std::allocator<char16_t> >;
struct Windows::Foundation::Collections::IMapView_impl<__int64,float>;
enum tagSM_KEYBOARDNAVIGATE;
enum _MSI_ACTION;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
enum _TAG_UNNAMED_290;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
enum tagDESTCATTYPE;
struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *>;
enum _TAG_UNNAMED_291;
struct _RTL_HEAP_STACK_QUERY;
enum Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResultStatus;
enum PROJECTION_TASK_TYPE;
struct IApartmentShutdown;
struct _CRYPT_PROVIDER_DEFUSAGE;
enum PREFERRED_LAUNCH_WINDOWING_MODE;
struct _PEBS_DS_SAVE_AREA32;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *>;
enum DESKTOP_VISIBILITY_NOTIFICATION_TYPE;
struct std::_Big_uint128;
enum _SC_EVENT_TYPE;
struct wistd::__compressed_pair_elem<wistd::default_delete<char [0]>,1,1>;
enum ImmersiveShellStartupType;
enum _TASKDIALOG_FLAGS;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IEnumGUID>;
enum _TAG_UNNAMED_292;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComClassInfo> >;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >;
struct XWinRT::SecureVersionTag;
struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>;
class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View;
class CDragOperation::IsDropAllowed::__l2::<lambda_f16c171f4a25340757779972fb9deba3>::()::__l2::<lambda_09ce9bf4b5ebdced0b50ca0d77cedf20>;
enum GET_VIEW_FOR_SWITCH_TYPE;
enum APPLICATION_VIEW_STATE;
struct CallEntryBuffer;
struct _s_ThrowInfo;
struct wistd::unique_ptr<void,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >::__nat;
enum AWSTYPE;
struct Windows::Foundation::Collections::IVector_impl<int,1>;
struct Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>;
struct IOleInPlaceSite;
enum APPLICATION_VIEW_ORIENTATION;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IVectorView<IInspectable *>;
struct tagCSPLATFORM;
enum _TAG_UNNAMED_293;
struct _tlgWrapperArray<4>;
enum _TAG_UNNAMED_294;
struct _KEY_VALUE_FULL_INFORMATION;
struct _CRYPT_TIMESTAMP_ACCURACY;
enum USER_INTERACTION_MODE;
struct CREATE_USN_JOURNAL_DATA;
struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *>;
enum VIEW_PRESENTATION_MODE;
struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int>;
enum DIALOG_DPI_CHANGE_BEHAVIORS;
enum _TAG_UNNAMED_295;
struct POWERBROADCAST_SETTING;
enum _PO_HIBER_FORCE_DISABLE_REASON;
enum SYNC_STREAM_COMPLETION_MODE;
struct _WIN32_FIND_DATAW;
enum APPLICATION_VIEW_MODE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMoniker> >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFile *>;
enum RTL_BSD_ITEM_TYPE;
struct std::_Zero_then_variadic_args_t;
enum APPLICATION_VIEW_MODE_FLAGS;
struct _TP_DEBUG_FREE_INFO;
enum tagENUMVIEWPROPFLAG;
struct _OBJECT_DIRECTORY_INFORMATION;
struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>,1,1>;
struct _STRING64;
enum WindowTransparencyMode;
enum PROCESS_UI_FLAGS;
struct IOleCacheControl;
struct wil::function_deleter<void * (__cdecl*)(void *),&LocalFree>;
enum _TAG_UNNAMED_296;
struct _MINIDUMP_CALLBACK_INFORMATION;
enum _TAG_UNNAMED_297;
class utl::allocator<CROTItem *>;
enum _POWER_STATE_TYPE;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,double>;
struct Microsoft::WRL::Implements<IAsyncInfo>;
enum _TAG_UNNAMED_298;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE;
struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2;
enum SERVICE_REGISTRY_STATE_TYPE;
enum _TAG_UNNAMED_299;
enum _BACKGROUND_TASK_CAPABILITY;
enum _POWER_REQUEST_TYPE;
enum _TAG_UNNAMED_300;
struct tagIncomingCallData;
struct Windows::Foundation::IAsyncActionWithProgress_impl<double>;
struct Windows::Foundation::IReference_impl<int>;
enum _TAG_UNNAMED_301;
enum _TAG_UNNAMED_302;
enum _TAG_UNNAMED_303;
struct _CRYPT_REGISTER_ACTIONID;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >;
enum _TAG_UNNAMED_304;
struct IEnumConnectionPoints;
enum _TAG_UNNAMED_305;
class RegistryKey::KeyInformationClass<_KEY_NODE_INFORMATION>;
enum tagURLTEMPLATE;
enum _TAG_UNNAMED_306;
struct _MODULE_TYPE_INFO;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::window_dc,HDC__ *,0,std::nullptr_t> > >;
enum _TAG_UNNAMED_307;
class CListHeader;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
enum _TAG_UNNAMED_308;
struct _QUERY_BAD_RANGES_OUTPUT_RANGE;
class RegistryKey::ValueInformationClass<_KEY_VALUE_FULL_INFORMATION>;
class std::bad_exception;
struct wil::unique_hglobal_locked;
enum IMMERSIVE_APPLICATION_GET_WINDOWS_FILTER;
struct _IMAGE_HOT_PATCH_BASE;
enum IMMAPPPROPERTYSTOREFLAGS;
class AdHocCallFrame<ISearchProtocol,<lambda_eb81b7dcb3076a64e0db4008f1f3b137> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct _MINIDUMP_THREAD_EX_LIST;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES;
enum IMMERSIVE_APPLICATION_QUERY_SERVICE_OPTION;
enum SPLASHSCREEN_ORIENTATION_PREFERENCE;
enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_OPTION;
class wil::unique_any_t<wil::folder_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >;
enum DISPLAYCONFIG_SCALING;
struct _MINIDUMP_PROCESS_VM_COUNTERS_1;
enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_DELIVERY_TYPE;
enum IMMAPP_SETTHUMBNAIL_PREVIEW_STATE;
class GetCastMethod<long,long>;
struct FRAME_GetTypeInfoCount;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Rect,1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View> const >;
enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0002;
enum _TAG_UNNAMED_309;
struct wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t>;
enum _TAG_UNNAMED_310;
struct wistd::__compressed_pair_elem<_TOKEN_PRIMARY_GROUP *,0,0>;
enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0001;
struct INFO;
struct _OBJECT_TYPE_INFORMATION;
enum _TAG_UNNAMED_311;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0003;
struct __noop_coroutine_frame_legacy;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0004;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *>;
enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0005;
class SafeCastHelper<long,long,0>;
enum _FP_IEEE_COMPARE_RESULT;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnknown> >;
enum _TAG_UNNAMED_312;
struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER;
class RegistryKey::KeyInformationClass<_KEY_CACHED_INFORMATION>;
class IntTraits<__int64>;
enum _TAG_UNNAMED_313;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IOutputStream *>;
struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *>;
struct tagFUNCDESC;
struct tagFORMATETC32;
struct FORMATETCDATA32;
struct FORMATETCDATAARRAY32;
struct _RTL_STACK_TRACE_ENTRY;
struct _ARM64_NT_CONTEXT;
enum IMMERSIVE_MONITOR_FILTER_FLAGS;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::paint_dc,HDC__ *,0,std::nullptr_t> > >;
struct IEnumGUID;
enum NATIVE_DISPLAY_ORIENTATION;
struct PROCESS_UICONTEXT_INFORMATION;
enum _TAG_UNNAMED_314;
struct _ldiv_t;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect>;
enum tagMENUPOPUPSELECT;
struct _tlgWrapSz<unsigned short>;
enum _TAG_UNNAMED_315;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *>;
struct IWinInetFileStream;
enum _TAG_UNNAMED_316;
struct IBindCallbackRedirect;
class RegistryKey::KeyInformationClass<_KEY_HANDLE_TAGS_INFORMATION>;
enum DEFAULTSAVEFOLDERTYPE;
class wil::details::<lambda_3e104d93bedb8b8afc3f0fe3885aebb9>;
enum tagTLG_AGGREGATE_OPTIONS;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
union FT;
struct wil::details::close_invoke_helper<1,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,HSTRING__ *>;
struct _MINIDUMP_LOCATION_DESCRIPTOR64;
enum _TAG_UNNAMED_317;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::InPlaceDeactivate::__l2::<lambda_6c7999a0825145bb8114241691193a37>;
enum BANNER_NOTIFICATION_EVENT;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE;
enum ASSOCIATIONTYPE;
enum ASSOCIATIONLEVEL;
struct _SMB_SHARE_FLUSH_AND_PURGE_OUTPUT;
enum FFFP_MODE;
struct DDEPOKE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>;
enum STUB_PHASE;
class std::_String_iterator<std::_String_val<std::_Simple_types<char16_t> > >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
enum tagCONDITION_TYPE;
struct Windows::Foundation::Collections::IIterator<__int64>;
class AdditionHelper<__int64,unsigned __int64,13>;
enum OLE_TRISTATE;
class SafeInt<unsigned short,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >;
enum _TAPE_DRIVE_PROBLEM_TYPE;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IServiceHostBrokerProvider> >;
enum _SPTEXT;
class wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter>;
struct _SYSDBG_LIVEDUMP_CONTROL;
struct IInternetProtocol;
enum EDIT_CONTROL_FEATURE;
struct ISpecialSystemProperties;
class CLimitedStreamBase::Stat::__l2::<lambda_1d7dcc53cb7b04382455cc4b0de5f8d7>;
enum IMMERSIVE_HOT_KEY_ID;
enum _TAG_UNNAMED_318;
enum KNOWNDESTCATEGORY;
enum FRAMEWORK_INPUT_PANE_BEHAVIOR_MODE;
enum IMMERSIVE_MONITOR_MOVE_DIRECTION;
class CBool;
enum PKA_FLAGS;
class std::chrono::duration<__int64,std::ratio<1,1000000000> >;
class std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >;
enum SHARING_MENU_PRESENTATION_STATE;
enum LIBRARYFOLDERFILTER;
class Microsoft::WRL::ComPtr<IInterfaceRelated>;
class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >;
enum SECURELOCKCODE;
enum IHM_DISPLAY_MODE;
struct DDEDATA;
class CDDEServer;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *>;
enum wil::FeatureControlKind;
class Microsoft::WRL::Wrappers::Details::SyncLockCriticalSection;
enum _SEARCH_QUERY_SYNTAX;
struct Windows::Foundation::IAsyncOperation<HSTRING__ *>;
enum VIRTUALIZEDSELECTIONARRAYVALUE;
enum MERGE_UPDATE_STATUS;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
enum _DMA_WIDTH;
struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS;
enum PINNEDLISTMODIFYCALLER;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::CreateAccessor::__l2::<lambda_ab7661f9106dbe63888238c0c4789392>;
struct _MINIDUMP_UNLOADED_MODULE_LIST;
struct wistd::binary_function<enum wil::FolderChangeEvent,unsigned short const *,void>;
enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardProtectionServices> >;
class CDefObject::CAdvSinkImpl;
class std::chrono::duration<__int64,std::ratio<1,10000000> >;
class std::chrono::time_point<std::filesystem::_File_time_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >;
struct std::_Make_signed2<2>;
enum tagPropPageOnApply;
class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>::GetDropTarget::__l2::<lambda_de8aae3bf856bab3be50d4e660b6e6f6>;
class Microsoft::WRL::ComPtr<IOSTaskCompletion>;
struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int>;
enum ELEVATION_STATE;
struct _IMAGE_BDD_INFO;
enum DESTLISTTYPE;
struct _SRCCODEINFO;
class CComCat::CInnerUnk;
enum LIBRARYSAVEFLAGS;
enum USER_TILE_TYPE;
class GetCastMethod<unsigned long,long>;
enum DBREASONENUM15;
class Microsoft::WRL::ComPtr<IOleDataFormatIterator>;
enum PackagePathType;
class Microsoft::WRL::ComPtr<IComCatalogSCM>;
class CComCat;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardTaskCompletion,Microsoft::WRL::FtmBase>;
enum wil::FeatureEnabledState;
class SubtractionHelper<__int64,unsigned __int64,21>;
enum tagPROPCTL_FLAGS;
struct DDEADVISE;
enum tagTASKTYPE;
struct _RTL_CRITICAL_SECTION64;
struct ICatInformation;
struct tagCOMVERSION;
struct tagORPCTHIS;
enum Windows::Foundation::Diagnostics::CausalitySynchronousWork;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::BulkAccess::IStorageItemInformation *>;
enum tagCS_COLUMN_SET;
struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
enum VIRTUALUIGROUPITEMVALUE;
struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct _SYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_INPUT;
enum LINESCROLLERVALUE;
struct _Combined_type<float,long double>;
struct _SPC_SERIALIZED_OBJECT;
struct SPC_LINK_;
enum STREAM_REFERENCE_TYPE;
struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>;
class RunSyncOnMTAThread::__l2::<lambda_e0acd7286b12d12902e038044f4b1749>;
enum Microsoft::WRL::AsyncResultType;
struct tagWNDCLASSEXA;
struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>;
enum std::memory_order;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t> > >;
enum tagLC_NEXT_INDEX_STATE;
enum CASE_REQUIREMENT;
enum Windows::Foundation::Diagnostics::CausalityRelation;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan>;
enum MFU_FOLDER_ACTION;
struct CDdeObject::CDataObjectImpl;
enum _REQUESTER_TYPE;
struct _DIAGNOSTIC_BUFFER;
struct _WAKE_TIMER_INFO;
enum SAFE_SAVE_OPTIONS;
struct BULK_SECURITY_TEST_DATA;
enum tagUAEVENT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardTaskCompletion> const >;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibrary *>;
enum tagVIEWSETTINGACTION;
struct Windows::Foundation::IAsyncOperation<Windows::System::User *>;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
enum DESTLISTKIND;
struct tagLC_ID;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IEnumFORMATETC>;
class IntTraits<unsigned long>;
enum IMM_APP_CHANGED;
struct _CPTABLEINFO;
struct _RTL_NLS_STATE;
struct GetTypeValueImpl<long>;
enum ITEMDEVIRTUALIZERVALUE;
struct tagDDECALLDATA;
enum SEARCH_SUBMIT_TYPE;
class std::numeric_limits<char>;
enum _TAG_UNNAMED_319;
enum STORAGEITEM_CREATION_TYPE;
enum tagINTERVAL_LIMIT_KIND;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> > >;
enum REMOVEITEMTYPE;
struct _ALPC_WORK_ON_BEHALF_TICKET;
enum OPERATION_TYPE;
class _TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>;
enum tagLC_POINT_TYPE;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
enum SYNCMGR_HANDLER_POLICIES;
class std::numeric_limits<unsigned char>;
struct _WRITE_USN_REASON_INPUT;
enum OPERATION_INTERRUPT_RESPONSE_SINGLE;
enum SYNCMGR_EVENT_LEVEL;
struct _tlgDataDescInit<_tlgIndexSequence<15,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14> >;
class Microsoft::WRL::ComPtr<IOleClassInfo>;
enum RESOLUTION_TYPE;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibraryChange *>;
enum OPERATION_MODE;
enum CHARM_WINDOW_VISIBILITY_BEHAVIOR;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct _KSPIN_LOCK_QUEUE;
struct _KLOCK_QUEUE_HANDLE;
enum LoadOrFreeWhat;
enum COMMAND_SET;
enum DISPLAYSETTINGEVENTTYPE;
enum _CSVFS_DISK_CONNECTIVITY;
class std::_Generic_error_category;
struct std::_Constexpr_immortalize_impl<std::_Generic_error_category>;
enum __MIDL___MIDL_itf_shpriv_0000_0034_0002;
struct tagPARAMDATA;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
enum SYNCMGR_PRESENTER_CHOICE;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short>;
enum SHELLSEARCHCOMMAND;
class std::numeric_limits<unsigned short>;
enum HOSTED_APP_CHANGED;
struct IClipboardBroker;
struct IOleUndoUnit;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IInputStream *>;
enum SEARCH_TYPEAHEAD_ITEM_TYPE;
enum LAST_COPYITEM_ERROR_TYPE;
struct IXMLDOMEntityReference;
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
struct IEnumOleUndoUnits;
enum tagITEM_CHANGE_TYPE;
struct _RTL_PROCESS_LOCK_INFORMATION;
enum tagRECYCLEBIN_TYPE;
enum TRYHARDERSCOPES;
struct HINSTANCE__;
struct IOleDataFormatIterator;
struct IOSTaskCompletion;
enum SHARE_MODE;
union _RTL_IMAGE_MITIGATION_POLICY;
struct _RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int>;
enum Windows::ApplicationModel::DataTransfer::DataPackageOperation;
enum ELEMENTSPYVALUE;
enum _WAIT_TYPE;
enum PROPCTL_RECT_TYPE;
struct _RTL_HEAP_INFORMATION;
struct _RTL_PROCESS_HEAPS;
enum SHELL_SEARCH_BAND_SEARCH_STATE;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
enum __MIDL___MIDL_itf_winrtfileapi_0000_0036_0001;
struct wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t>;
class wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> >;
enum VIEW_SETTING_ID;
class wistd::__compressed_pair<unsigned short *,wil::hlocal_secure_deleter>;
struct tagNEWTEXTMETRICW;
struct tagNEWTEXTMETRICEXW;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
enum tagLC_ITEM_SET_ORDER;
class std::numeric_limits<char16_t>;
enum tagBPASCODE;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>;
enum GETSORTCOLUMN;
struct _MINIDUMP_MODULE_LIST;
struct _CTL_ANY_SUBJECT_INFO;
enum SHARING_MENU_SHARE_STATE;
struct tagRAWINPUTDEVICELIST;
struct tagMETAFILEPICT;
enum SELECTIONSTATEVALUE;
enum SYNCMGR_UPDATE_REASON;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>;
enum APPLICATION_SEARCH_TYPE;
class std::numeric_limits<unsigned __int64>;
enum RenameOperationStatus;
class Windows::System::UserChangedEventArgs;
union XWinRT::FakeStl::_align_type<double,8>;
union XWinRT::FakeStl::_align_type<int,4>;
class XWinRT::ComLock;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator;
struct wil::details::ApiTelemetryLogger::StaticHandle;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> > >;
class wil::details::ApiTelemetryLogger;
struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float>;
enum COleCache::GetExtent::__l2::tagCacheType;
class std::numeric_limits<long double>;
enum tagDISPLAY_SUPPORTED_ORIENTATIONS;
class wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_e06473e64d77ff850420a9b624ffc716>;
struct _DCB;
struct _COMMCONFIG;
struct _NDR64_PROC_FORMAT;
struct _NDR64_BIND_CONTEXT;
struct _NDR64_BIND_AND_NOTIFY_EXTENSION;
struct _NDR64_PARAM_FLAGS;
struct _NDR64_PARAM_FORMAT;
struct __midl_frag214_t;
enum Windows::Foundation::ActivationType;
struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS;
struct _MINIDUMP_USER_STREAM_INFORMATION;
struct _PROCESS_MEMBERSHIP_INFORMATION;
enum _BUS_DATA_TYPE;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>;
enum _TAG_UNNAMED_320;
struct _IMAGEHLP_SYMBOLW64;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
enum _TAG_UNNAMED_321;
class std::length_error;
enum _TAG_UNNAMED_322;
struct wil::details::IFailureCallback;
struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1>;
enum _TAG_UNNAMED_323;
class COleStaticMutexSem;
struct Windows::Foundation::IReference<__int64>;
enum _TAG_UNNAMED_324;
enum _SECTION_INFORMATION_CLASS;
enum _TAG_UNNAMED_325;
enum tagQueryUpdateAction;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
enum SYNCMGR_CONFLICT_ITEM_TYPE;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
enum tagUISCB_FLAGS;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
struct _RTL_STACK_CONTEXT_ENTRY;
struct _RTL_STACK_CONTEXT;
enum tagAPP_RESOLVER_ITEM_FILTER_FLAGS;
enum tagExtendedErrorParamTypes;
struct tagBinaryParam;
struct tagRPC_EE_INFO_PARAM;
struct tagRPC_EXTENDED_ERROR_INFO;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>;
enum GETPROPERTYSTOREFLAGS;
struct Windows::System::IUserChangedEventArgs;
struct _CRYPT_X942_OTHER_INFO;
struct _MINIDUMP_SYSTEM_PERFORMANCE_INFORMATION;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *>;
enum Windows::Foundation::PropertyType;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFolder *>;
struct USN_RECORD_EXTENT;
enum Windows::ApplicationModel::Internal::DataTransfer::ClipboardPasteSignalReason;
enum Windows::ApplicationModel::Internal::DataTransfer::AppInfoSource;
enum _TAG_UNNAMED_326;
struct Windows::Foundation::IAsyncOperationCompletedHandler<bool>;
class wistd::__compressed_pair<void *,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >;
class wistd::unique_ptr<void,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >;
class std::chrono::duration<__int64,std::ratio<1,1> >;
enum _RTL_RXACT_OPERATION;
struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *>;
enum _TAG_UNNAMED_327;
enum _TAG_UNNAMED_328;
struct wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter>::__nat;
struct _MINIDUMP_SYSTEM_MEMORY_INFO_1;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::KnownFoldersAccessStatus>;
enum POWER_STATE_HANDLER_TYPE;
enum utl::float_denorm_style;
struct IPolicySet;
struct _MINIDUMP_USER_STREAM;
enum utl::ranges::_Impl::_Strategy;
struct IActivationPropertiesIn;
enum utl::_InvokeSyntax;
enum SYNC_ENGINE_STATE_FLAGS;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct _EDP_CRED_SVC_INFO;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> >;
enum FLYOUT_PLACEMENT;
struct CDdeObject::CUnknownImpl;
enum EC_HOST_UI_MODE;
struct __std_type_info_data;
class type_info;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
struct _IMAGEHLP_MODULE64;
struct _IMAGEHLP_MODULE64_EX;
enum _FINDEX_SEARCH_OPS;
enum _SIGDN;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::AgileRef const >;
enum APPDOCLISTTYPE;
struct _MEMORY_COMBINE_INFORMATION_EX2;
enum CPVIEW;
struct XMLDOMDocumentEvents;
enum _REFS_DEALLOCATE_RANGES_ALLOCATOR;
struct IComObjIdentity;
enum tagBANDSITECID;
enum PLACEHOLDER_STATES;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> const >;
enum OfflineFolderStatus;
enum __vc_attributes::pointer_defaultAttribute::type_e;
struct tagMsgRoutingInfo;
struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION;
enum ASSOCCLASS;
enum LIBRARYOPTIONFLAGS;
struct std::chrono::steady_clock;
struct wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >::__nat;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >;
enum Windows::Foundation::Diagnostics::CausalityTraceLevel;
struct tagPOINTER_DEVICE_PROPERTY;
enum _LDR_HOT_PATCH_STATE;
struct _TXFS_GET_METADATA_INFO_OUT;
struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
struct _RPC_SECURITY_QOS_V2_W;
enum _TAG_UNNAMED_329;
struct _SERVICE_TIMECHANGE_INFO;
enum PO_WAKE_SOURCE_TYPE;
struct _PO_WAKE_SOURCE_HEADER;
enum PO_FIXED_WAKE_SOURCE_TYPE;
struct _PO_WAKE_SOURCE_FIXED;
struct _MCGEN_TRACE_CONTEXT;
struct USN_JOURNAL_DATA_V1;
enum wil::ReportingKind;
enum CreatePackageDependencyOptions;
struct IDropSourceNotify;
enum RoVariant::States;
enum _SYSTEM_IOMMU_STATE;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IDragOperationInternal>;
enum _HARDWARE_COUNTER_TYPE;
enum _AUDIT_EVENT_TYPE;
enum _VRF_RULE_CLASS_ID;
enum _SYMBOLIC_LINK_INFO_CLASS;
struct _NETCONNECTINFOSTRUCT;
struct IDirectWriterLock;
enum tagDCOM_CALL_STATE;
enum tagEMFWRITETYPE;
enum CWMO_FLAGS;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct Windows::Foundation::IReferenceArray_impl<unsigned __int64>;
class wistd::__compressed_pair<unsigned short *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
class wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;
enum RTL_DISK_SPACE_POLICY;
struct _SYSDBG_BUS_DATA;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
enum _IO_SESSION_EVENT;
class std::domain_error;
enum _FILE_STORAGE_TIER_MEDIA_TYPE;
struct _MINIDUMP_FUNCTION_TABLE_STREAM;
class wil::details::<lambda_d122bb6e934ec4d461e1203d27396b90>;
enum _FILE_STORAGE_TIER_CLASS;
enum _SYSTEM_POWER_STATE;
struct ComVerifierSettings::ComVerifierSettingsState;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessPatternTbl> >;
enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
enum _THDTYPE;
struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::KnownFoldersAccessStatus>;
enum _ERROR_SEVERITY_VALUE;
class CDragDropBroker::RegisterDropTarget::__l11::<lambda_50ee3ecffe8efbd463e6350e39328809>;
enum Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemSource;
class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindClose> > >;
enum PackageOrigin;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
enum Windows::ApplicationModel::Internal::DataTransfer::ClipboardItemSaveResult;
struct _OUTPUT_DEBUG_STRING_INFO;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
class XLOCK;
class OPAQUE_HANDLE<1>;
struct XSLOCK::OWNERENTRY;
class EVENT;
class SEMAPHORE;
class XSLOCK;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>;
struct _SYSTEM_PERFORMANCE_INFORMATION;
enum _DUPLICATE_EXTENTS_STATE;
enum _SYSTEM_FEATURE_CONFIGURATION_UPDATE_TYPE;
struct _CERT_TRUST_LIST_INFO;
enum _tagEXPR_TOKEN;
struct AdHocInterceptorInterfaceEntry;
enum _TAG_UNNAMED_330;
enum _POWER_PLATFORM_ROLE;
struct Windows::Foundation::Collections::supports_cleanup<short>;
class wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_failfast_policy>;
enum _PORT_INFORMATION_CLASS;
enum _MEMORY_RESERVE_TYPE;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
struct _SPC_SP_AGENCY_INFO;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *>;
enum _CI_WINDOWS_LOCKDOWN_MODE;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> > >;
struct _RTL_SPARSE_BITMAP_CTX;
enum _PROCESSINFOCLASS;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct _MANAGE_HOT_PATCH_LOAD_PATCH;
enum RUNTIMEBROKER_CALLERIDENTITY_CHECK;
class wistd::__function::__base<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
enum tagCALLTYPE;
struct NDR_ALLOC_ALL_NODES_CONTEXT;
enum _TABLE_SEARCH_RESULT;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
enum _LDR_DLL_LOAD_REASON;
struct tagICONMETRICSA;
enum Windows::Storage::Streams::InputStreamOptions;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,unsigned short *>;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IUnknown>;
enum _TP_LOG_LEVEL;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(tagSTGMEDIUM *),&ReleaseStgMedium,tagSTGMEDIUM *>;
class wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >;
struct tagSTGOPTIONS;
struct tagOutgoingCallData;
struct tagOutgoingActivationData;
class ThreadLockOrderVerifier<enum ComLockOrder>;
struct tagSOleTlsData;
struct tagDVTARGETDEVICE;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
enum _KTMOBJECT_TYPE;
struct _REQUEST_OPLOCK_INPUT_BUFFER;
enum _FP__IEEE_ROUNDING_MODE;
struct _SOURCEFILE;
enum _FINDEX_INFO_LEVELS;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> > >;
enum tagINPUT_MESSAGE_DEVICE_TYPE;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IUriRuntimeClass *>;
struct _tagHIT_LOGGING_INFO;
enum Windows::Storage::FileAccessMode;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IUriRuntimeClass *>;
struct _SPC_IMAGE;
class wil::details::<lambda_4669b0b500b640868e67e954d122ad4c>;
enum _HIBERFILE_BUCKET_SIZE;
struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
class wil::details::<lambda_c7e555bad8dcd38ee4515a0e2b25b09b>;
struct _tlgDataDescInit<_tlgIndexSequence<7,0,1,2,3,4,5,6> >;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
enum _TAG_UNNAMED_331;
enum _TAG_UNNAMED_332;
enum _TAG_UNNAMED_333;
struct _IMAGEHLP_SYMBOLW64_PACKAGE;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
union _LDR_DLL_NOTIFICATION_DATA;
enum _TAG_UNNAMED_334;
struct IPipeByte;
enum _SERVERSILO_STATE;
struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *>;
enum _TAG_UNNAMED_335;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Uri *>;
class wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>;
enum _TAG_UNNAMED_336;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct IEnumHolder;
enum _TAG_UNNAMED_337;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Uri *>;
struct _SPC_PE_IMAGE_DATA;
enum _SYSDBG_COMMAND;
enum _TAG_UNNAMED_338;
enum _TAG_UNNAMED_339;
enum _PSM_BROKER_TOKEN_SCOPE;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>;
enum POWER_MONITOR_REQUEST_REASON;
enum _SAFER_IDENTIFICATION_TYPES;
struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable<<lambda_35813abc48134a673502c50f3be72d9b> >;
struct _POOLED_USAGE_AND_LIMITS;
enum PO_INTERNAL_WAKE_SOURCE_TYPE;
struct _EX_WNF_SUBSCRIPTION;
enum Windows::System::UserType;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DataStream;
enum Windows::System::UserPictureSize;
enum CallerLocalityIndicator;
class Microsoft::WRL::ComPtr<IClipboardProtectionServices>;
struct std::chrono::system_clock;
enum _IMAGE_POLICY_ENTRY_TYPE;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
enum _IMAGE_POLICY_ID;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
class Microsoft::WRL::Details::RuntimeClassBaseT<2>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
enum __MIDL_IAuthenticateEx_0001;
struct SDWORDHashNode;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumClassesOfCategories> >;
enum CertKeyType;
struct Windows::Foundation::Collections::IIterator<int>;
struct _IMAGEHLP_MODULEW64_EX;
enum _HARDERROR_RESPONSE;
enum __MIDL_IBindStatusCallback_0006;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct _TAPE_WRITE_MARKS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComCatalogSCM> const >;
enum _FS_BPIO_OPERATIONS;
enum _PARTITION_INFORMATION_CLASS;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *>;
enum __MIDL_IInternetSecurityManager_0002;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct _devicemodeA;
enum _FILE_METADATA_OPTIMIZATION_STATE;
struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceHostBrokerProvider> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > >;
enum _HARDERROR_RESPONSE_OPTION;
struct _tlgDataDescInit<_tlgIndexSequence<3,0,1> >;
enum _CPU_PARTITION_SET_INFORMATION_CLASS;
struct Windows::Foundation::Collections::IMap_impl<__int64,float>;
enum tagPENDINGTYPE;
struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>::EventType;
enum tagOLEVERBATTRIB;
class wil::details::shared_object<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> >;
class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>;
enum _TAG_UNNAMED_340;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
enum _WORKER_FACTORY_CALLBACK_CLASS;
struct _MIDL_INTERFACE_METHOD_PROPERTIES;
enum _TAG_UNNAMED_341;
enum _TAG_UNNAMED_342;
struct _FILE_FULL_EA_INFORMATION;
struct RPC_DISPATCH_TABLE;
struct IChannelHook;
enum _SHRINK_VOLUME_REQUEST_TYPES;
struct _ACL_SIZE_INFORMATION;
enum DISPLAYCONFIG_PIXELFORMAT;
enum tagDLFlags;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct tagCREATESTRUCTW;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
enum _LEARNING_MODE_LOG_LEVEL;
class wistd::__compressed_pair<unsigned short *,wil::cotaskmem_secure_deleter>;
class wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter>;
struct tagQUERYCONTEXT;
enum tagSTGMOVE;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
class wil::details::<lambda_0c906d58392d6bb09ce26349c7ffc916>;
enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS;
class Windows::Storage::FileProperties::DocumentProperties;
enum tagOLELINKBIND;
enum tagOLEUPDATE;
enum tagDIMENSION;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >;
struct _DEVICE_FLAGS;
struct _CM_COMPONENT_INFORMATION;
enum tagSTGTY;
struct _SYSTEM_BUILD_VERSION_INFORMATION;
enum _COVERAGE_REQUEST_CODES;
struct tagSTGMEDIUM;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IOperationCompletedEventArgs *> >;
enum _EVENT_INFORMATION_CLASS;
struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER;
struct _TAPE_PREPARE;
enum DisconnectType;
struct std::_WChar_traits<char16_t>;
enum _PO_SLEEP_DISABLE_REASON;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > const >;
enum _PO_CS_DEVICE_NOTIFICATION_TYPE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<double>;
enum _SUITE_TYPE;
struct _RTL_AVL_TREE;
enum _TIMER_TYPE;
enum QUERY_USER_NOTIFICATION_STATE;
struct _TRACE_GUID_REGISTRATION;
enum _EVENT_TYPE;
enum ECC_CURVE_ALG_ID_ENUM;
struct Windows::Foundation::Collections::IIterator<enum Windows::System::UserWatcherUpdateKind>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short>;
enum _PNP_VETO_TYPE;
struct _FILE_STANDARD_INFORMATION;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *>;
struct _CERT_REVOCATION_CHAIN_PARA;
enum _BOOT_ENTROPY_SOURCE_RESULT_CODE;
struct IDispatch;
struct IWinRTRuntimeClassInfo;
struct _CRYPT_PROVIDER_REFS;
enum COMPARTMENT_ID;
struct _SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION;
struct wistd::integral_constant<bool,1>;
struct tagExtentInfo;
class MultiplicationHelper<__int64,__int64,11>;
class XWinRT::CElementTraits<HSTRING__ *>;
enum _IRQ_DEVICE_POLICY;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct IMarshalEnvoy;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IRandomAccessStream *>;
enum _SYSTEM_MEMORY_LIST_COMMAND;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float>;
enum tagSTRUCTURED_QUERY_PARSE_ERROR;
enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Data::Text::TextSegment>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> > >;
enum EDGEUI_CORNEROREDGE;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct _PROCESS_ENERGY_TRACKING_STATE;
enum tagQUERY_PARSER_MANAGER_OPTION;
enum EDGEGESTURE_SWIPELOCATION;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
enum EDGEUI_COMPONENT;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *>;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>;
struct _POWER_SESSION_WINLOGON;
enum tagSTRUCTURED_QUERY_MULTIOPTION;
struct wil::details::shared_object<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
enum RAW_INPUT_MOUSE_BUTTON;
struct std::_Char_traits<char,int>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibrary *>;
enum EDGEGESTURE_INVOCATION_KIND;
struct _OVERLAPPED;
class RunSyncOnMTAThread::__l2::<lambda_2c8f2a792b4da02e47c1023e6a4a2993>;
struct IInternetProtocolInfo;
enum tagSTRUCTURED_QUERY_SYNTAX;
struct _XMIT_ROUTINE_QUINTUPLE;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
enum POWER_USER_PRESENCE_TYPE;
class Microsoft::WRL::ComPtr<IComClassInfo>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> >;
enum _SYSTEM_ACTIVITY_MODERATION_STATE;
enum APPWINDOW_TRANSITION_TYPE;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *>;
enum _PROCESS_WORKING_SET_OPERATION;
struct tagSTYLEBUFW;
enum _tagOIBDG_FLAGS;
class AdHocCallFrame<IOleInPlaceObject,<lambda_f9b153e28317f47b008789014cb39e3f> >;
class wil::details::unique_storage<wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t> >;
enum _REFS_STREAM_EXTENT_PROPERTIES;
struct _NDR_PROC_CONTEXT;
enum XLAT_SIDE;
struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *>;
enum SHSTOCKICONID;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >;
enum _CM_SHARE_DISPOSITION;
struct std::_Default_allocator_traits<std::allocator<char32_t> >;
enum _RPC_ASYNC_EVENT;
enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE;
enum _WNF_STATE_NAME_LIFETIME;
struct wistd::integral_constant<unsigned __int64,0>;
enum _TAG_UNNAMED_343;
class CancellableCall;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
enum _RTL_FEATURE_ENABLED_STATE;
union _MM_ETW_PAGE_EXTRA_INFO;
enum _IRQ_PRIORITY;
struct _PROCESS_HEAP_INFORMATION;
struct _HEAP_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
enum _TAG_UNNAMED_344;
class OleGetClipboardWithEnterpriseInfo::__l2::<lambda_8727e92fd6266caa8ecc4c31050fae19>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *>;
enum RPC_ADDRESS_CHANGE_TYPE;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::System::UserAgeConsentResult>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
enum ORIENTATION_PREFERENCE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::System::UserAgeConsentResult>;
enum _TAG_UNNAMED_345;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassInfo> >;
class CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
class CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
enum _INTERFACE_TYPE;
enum _TAG_UNNAMED_346;
struct tagLICINFO;
enum _TAG_UNNAMED_347;
struct IOleInPlaceSiteWindowless;
struct Windows::UI::Color;
enum _RTL_VERIFIER_REDIRECT_TYPE;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point>;
enum _REFS_SMR_VOLUME_GC_METHOD;
struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *>;
struct SYMSRV_EXTENDED_OUTPUT_DATA;
enum _TAG_UNNAMED_348;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
enum _TAG_UNNAMED_349;
struct DISPLAYCONFIG_RATIONAL;
struct DISPLAYCONFIG_2DREGION;
struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO;
struct DISPLAYCONFIG_TARGET_MODE;
struct DISPLAYCONFIG_TARGET_PREFERRED_MODE;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
enum _TAG_UNNAMED_350;
enum _TAG_UNNAMED_351;
struct Microsoft::WRL::CloakedIid<IMarshal>;
enum _TAG_UNNAMED_352;
struct Microsoft::WRL::DelegateTraits<-1>;
enum _TAG_UNNAMED_353;
struct Windows::Foundation::Collections::IIterable<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>;
enum _SECURE_SETTING_VALUE_TYPE;
struct tagLOGFONTW;
struct tagNONCLIENTMETRICSW;
enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION;
struct OleThunkWOW;
struct READ_USN_JOURNAL_DATA_V1;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IBindCtx> >;
struct _NT_TIB32;
struct _tagDATAINFO;
enum _TAG_UNNAMED_354;
enum _TAG_UNNAMED_355;
struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable_imp<<lambda_35813abc48134a673502c50f3be72d9b>,1>;
struct HSTRING_BUFFER__;
struct Windows::Foundation::Collections::IIterable<short>;
enum _TAG_UNNAMED_356;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>;
enum MEM_SECTION_EXTENDED_PARAMETER_TYPE;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1>;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View>;
struct _MINIDUMP_SYSTEM_INFO;
enum _TAG_UNNAMED_357;
struct wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]>;
struct wil::details::shared_object<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct Windows::Foundation::Collections::IIterable<unsigned char>;
enum _TAG_UNNAMED_358;
struct Windows::Foundation::Collections::IIterator_impl<int,1>;
struct Windows::Foundation::Collections::IIterator_impl<_GUID,1>;
enum SERVICE_SHARED_DIRECTORY_TYPE;
class std::chrono::duration<int,std::ratio<3600,1> >;
struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0>;
enum _TAG_UNNAMED_359;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct tagRGBQUAD;
struct IProcessLock;
enum _TAG_UNNAMED_360;
enum _HEAP_MEMORY_INFO_CLASS;
class wil::ProcessThreadFailureCache;
enum _RTL_UMS_THREAD_INFO_CLASS;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *>;
class CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
class CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct provider_info;
enum _IO_COMPLETION_INFORMATION_CLASS;
class AdHocCallFrame<ISearchProtocol,<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::WindowId>;
enum _SUSPEND_RESILIENCY_STATE;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *>;
enum CM_EXTENDED_PARAMETER_TYPE;
class CMultiGUIDHashTable;
struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>;
enum _WNF_DATA_SCOPE;
enum _PROC_THREAD_ATTRIBUTE_NUM;
struct _MINIDUMP_EXCEPTION;
struct MINIDUMP_EXCEPTION_STREAM;
enum WIN32_MEMORY_INFORMATION_CLASS;
class wil::details::shared_object<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> >;
class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>;
enum _THREAD_STATE_CHANGE_TYPE;
enum tagSF_TYPE;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
class AdHocCallFrame<IOleInPlaceObject,<lambda_5f36165614e701fb976ba4b91ba80c82> >;
struct IProxyManager;
enum _MEMORY_EXHAUSTION_TYPE;
class std::thread::id;
struct _tlgWrapperByVal<2>;
enum _QUERY_FILE_LAYOUT_FILTER_TYPE;
struct IServiceHostBrokerProvider;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct _POWER_SESSION_RIT_STATE;
enum _COPYFILE2_COPY_PHASE;
enum _WOW64_FUNCTION_CODE64;
struct Windows::Foundation::Collections::IMap<__int64,float>;
enum _LDR_DDAG_STATE;
enum _RTL_IMAGE_MITIGATION_OPTION_STATE;
enum __MIDL_IInternetZoneManager_0002;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> >;
enum _IO_PRIORITY_HINT;
struct API_VERSION;
struct Windows::Foundation::Collections::IIterable<Windows::UI::WindowId>;
enum _REFS_SMR_VOLUME_GC_STATE;
struct xtime;
class Microsoft::WRL::Details::FtmBaseMarker;
class wil::details::<lambda_0db01107b65731fa8f3a260111595080>;
struct Windows::Foundation::Collections::IIterable_impl<IInspectable *>;
enum _FUNCTION_TABLE_TYPE;
class std::chrono::duration<__int64,std::ratio<1,1000> >;
struct _MIDL_METHOD_PROPERTY_MAP;
class CObjectContext;
class wil::details::<lambda_061bfcc66307cbf7f16e1057cb0b9ce9>;
struct _CERT_SYSTEM_STORE_RELOCATE_PARA;
enum AppModelPolicy_GetPolicy_Internal::__l2::AppModelPolicy_AppType;
class XWinRT::SecureVersionTag::Tag;
struct _LOAD_ASDATA_TABLE;
enum _TAG_UNNAMED_361;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
enum _TAG_UNNAMED_362;
union std::_Align_type<double,80>;
class std::_Mutex_base;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
enum _SharedVirtualDiskSupportType;
enum _TAG_UNNAMED_363;
class PushLogicalThreadId;
struct Windows::Foundation::Collections::IVector_impl<Windows::UI::WindowId,0>;
enum _TAG_UNNAMED_364;
class std::scoped_lock<>;
class RegistryKey::ValueInformationClass<_KEY_VALUE_PARTIAL_INFORMATION>;
enum _TAG_UNNAMED_365;
class std::recursive_mutex;
class wil::details::ApiTelemetryLogger::CallContext;
enum _TAG_UNNAMED_366;
enum _TAG_UNNAMED_367;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer *>;
struct IRpcSyntaxNegotiate;
enum PackageDependencyLifetimeKind;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> >;
struct wistd::default_delete<_GUID [0]>::_EnableIfConvertible<_GUID>;
struct _REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER_ENTRY;
enum RTL_PHYSICAL_MEMORY_POLICY;
enum DCOM_ENDPOINT_FLAGS;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *>;
enum _SE_IMAGE_SIGNATURE_TYPE;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Rect>;
struct IPolicyMaker;
struct IRpcStubBufferVtbl;
class CVerifierTlsData;
enum __MIDL_IBindStatusCallback_0002;
struct IDragDropExtensionForOLE;
class CComApartment;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int>;
enum _BOOT_ENTROPY_SOURCE_ID;
class Microsoft::WRL::Details::StrongReference;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
enum SERVICE_DIRECTORY_TYPE;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComCatalogSCM> >;
struct Windows::Foundation::Collections::is_pointer<float>;
struct _PROCESSOR_IDLE_STATE;
enum _PROCESS_STATE_CHANGE_TYPE;
struct wistd::__aligned_storage<104,8,1>;
union _FILE_SEGMENT_ELEMENT;
enum _QUEUE_USER_APC_FLAGS;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>;
enum _SID_NAME_USE;
class RegistryKey::KeyInformationClass<_KEY_FLAGS_INFORMATION>;
struct IContinue;
struct IOleObject;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64>;
struct IPropertyPageSite;
enum POWER_ACTION;
struct _TOKEN_SOURCE;
struct Windows::Foundation::Collections::IVectorView<unsigned __int64>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID>;
enum _ALPC_PORT_INFORMATION_CLASS;
class std::pmr::memory_resource;
struct _TREEITEM;
enum HASHALGORITHM_ENUM;
struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
enum DSAFIPSVERSION_ENUM;
struct tagSOLE_AUTHENTICATION_LIST;
struct _BCRYPT_PROVIDER_NAME;
class Microsoft::WRL::Details::ModuleBase;
enum _PROCESS_TLS_INFORMATION_TYPE;
enum _VIRTUAL_STORAGE_BEHAVIOR_CODE;
class _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>;
enum MEM_EXTENDED_PARAMETER_TYPE;
struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
enum _WORKERFACTORYINFOCLASS;
struct _TAPE_SET_POSITION;
enum _SEMAPHORE_INFORMATION_CLASS;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,0,0>;
enum _OBJECT_INFORMATION_CLASS;
struct _TP_TIMER;
enum FILE_FLUSH_MODE;
struct _PORT_DATA_ENTRY;
enum _PROCESS_MEMORY_EXHAUSTION_TYPE;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
enum _ENLISTMENT_INFORMATION_CLASS;
class std::condition_variable;
enum _FSINFOCLASS;
enum tagHANDEDNESS;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
enum tagCOMCALLTYPE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point>;
struct wil::details::out_param_t<wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > >;
enum _MEMORY_WORKING_SET_EX_LOCATION;
struct _Real_type<long double>;
enum _REG_ACTION;
struct tagCStdPSFactoryBuffer;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>,0,0>;
enum _KPROFILE_SOURCE;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct _RPC_VERSION;
struct _RPC_SYNTAX_IDENTIFIER;
struct _MIDL_SYNTAX_INFO;
enum tagPOINTER_DEVICE_TYPE;
struct _CLIENT_ID;
struct _PORT_MESSAGE;
struct _LPC_UNREGISTER_PROCESS_MSG;
struct Microsoft::WRL::Details::BoolStruct;
struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventHandler;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
enum _system_handle_t;
enum _WNF_STATE_NAME_INFORMATION;
struct _SI_COPYFILE;
enum _COPYFILE2_MESSAGE_ACTION;
struct std::char_traits<char16_t>;
struct CPlex;
struct Windows::Foundation::IReference<short>;
enum std::_Uninitialized;
struct Windows::Foundation::Collections::IIterable<float>;
enum std::align_val_t;
enum WIN32_MEMORY_PARTITION_INFORMATION_CLASS;
class stdext::bad_exception;
enum _STATE_LOCATION_TYPE;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *>;
struct IXMLDocument2;
enum _RPC_NOTIFICATIONS;
struct HTASK__;
enum __MIDL_IInternetSecurityManager_0001;
struct _CrtMemBlockHeader;
enum IEObjectType;
class wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >;
enum _NORM_FORM;
struct std::try_to_lock_t;
struct _FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER;
enum _STREAM_INFO_LEVELS;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>;
class Microsoft::WRL::AgileRef;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
enum _PRT;
enum _TRANSACTION_STATE;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >;
struct _TXFS_LIST_TRANSACTIONS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService> const >;
class std::mutex;
class std::timed_mutex;
enum _RTL_SPARSE_BITMAP_CTX_OPERATION;
struct tagEMRSETMAPPERFLAGS;
enum _TIMER_INFORMATION_CLASS;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>;
enum tagLIBFLAGS;
struct SActivatableClassIdHashNode;
enum _DIRECTORY_NOTIFY_INFORMATION_CLASS;
struct tagDCOM_ENDPOINT;
enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS;
struct _TXFS_WRITE_BACKUP_INFORMATION;
enum _WATCHDOG_INFORMATION_CLASS;
struct Windows::Foundation::Collections::IIterable_impl<_GUID>;
class Microsoft::WRL::Details::EventTargetArray;
enum _MEMORY_PARTITION_CHARGE_SHARING_TYPE;
struct _RTL_SPLAY_LINKS;
enum _ACL_INFORMATION_CLASS;
enum _JOURNAL_INFORMATION_CLASS;
enum _FP_IEEE_OPERATION_CODE;
enum _CM_ERROR_CONTROL_TYPE;
struct std::integral_constant<bool,0>;
struct HGESTUREINFO__;
enum _KEY_SET_INFORMATION_CLASS;
class CClipboardBroker::SetClipboard::__l34::<lambda_be18d0e1c9460e7bb92c1a447c19d4fe>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64>;
enum _CM_SERVICE_LOAD_TYPE;
enum _PLUGPLAY_CONTROL_CLASS;
struct _POINTFLOAT;
enum _IMAGE_MITIGATION_POLICY;
enum BCRYPT_MULTI_OPERATION_TYPE;
enum _RTL_FEATURE_VARIANT_PAYLOAD_KIND;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
class MultiplicationHelper<long,long,1>;
enum _SC_ACTION_TYPE;
struct Windows::Foundation::Collections::IVector_impl<float,1>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >;
struct IDropSource;
enum _TIMER_SET_INFORMATION_CLASS;
class std::exception_ptr;
class std::nested_exception;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
enum _MEMORY_INFORMATION_CLASS;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *>;
struct IResourceGates;
struct IAggregator;
struct HUMPD__;
struct _DOCINFOA;
enum _IO_SESSION_STATE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleClassInfo> >;
struct Microsoft::WRL::RuntimeClassFlags<4>;
enum _RTL_SYSTEM_GLOBAL_DATA_ID;
struct wistd::__struct_double4;
enum _TRANSACTION_OUTCOME;
struct STARTING_VCN_INPUT_BUFFER;
struct tagAspectInfo;
struct Windows::Foundation::IReference<HSTRING__ *>;
enum _FP__IEEE_FORMAT;
struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IEnumFORMATETC,0,0>;
struct _SPC_SP_OPUS_INFO;
class std::basic_string_view<char,std::char_traits<char> >;
enum __MIDL_IBindStatusCallback_0001;
class wil::details::<lambda_72c5d536b9fc99c49a59c1d4980b8c49>;
struct EVENT_ENTRY_LOOKUP_TABLE;
struct TLG_AGG_INTERNAL_STATS;
struct TLG_AGGR_SESSION;
enum __MIDL_IInternetSecurityManager_0003;
struct IEnumCATEGORYINFO;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct Windows::Foundation::Collections::IIterable<_GUID>;
struct _EISA_IRQ_DESCRIPTOR;
struct _EISA_IRQ_CONFIGURATION;
enum tagEventLogModes;
enum tagRpcLocalAddressFormat;
struct _FILE_FS_DATA_COPY_INFORMATION;
enum POWER_SETTING_ALTITUDE;
struct wil::select_result;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wistd::integral_constant<unsigned __int64,0>,wil::select_result,void *,0,std::nullptr_t> >;
struct _SYSDBG_LIVEDUMP_SELECTIVE_CONTROL;
enum _MUTANT_INFORMATION_CLASS;
struct IPersistMoniker;
struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64>;
struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *>;
class AdditionHelper<long,long,6>;
enum _PLUGPLAY_EVENT_CATEGORY;
struct _ACL;
class IntRegion<unsigned long,unsigned long>;
enum __MIDL_IInternetZoneManager_0001;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
enum tagCALLSTATE;
struct tagMInterfacePointer;
enum _DISPLAYCONFIG_COLOR_ENCODING;
struct std::random_access_iterator_tag;
class Microsoft::WRL::ComPtr<IInspectable>;
struct _COAUTHINFO;
enum RTL_DISK_WRITE_CONSTRAINT_POLICY;
class CEnumStatData;
enum _MM_ETW_WORKING_SET_TYPE;
struct Windows::Foundation::IAsyncOperation<unsigned int>;
enum tagFEEDBACK_TYPE;
enum _TP_TRACE_TYPE;
struct _IMAGE_DEBUG_MISC;
struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int>;
struct _SD_CHANGE_MACHINE_SID_INPUT;
enum _SAFER_POLICY_INFO_CLASS;
struct GetTypeValueImpl<long,unsigned short const *,enum LoadOrFreeWhy,unsigned long>;
struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable<<lambda_e06473e64d77ff850420a9b624ffc716> >;
union _double_val;
enum _DMA_SPEED;
class wistd::__compressed_pair<_TOKEN_MANDATORY_LABEL *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
class wistd::unique_ptr<_TOKEN_MANDATORY_LABEL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
enum _POWER_MONITOR_REQUEST_TYPE;
struct _TOKEN_USER;
struct _SE_TOKEN_USER;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IDragOperationInternal>;
enum _PROCESS_ACTIVITY_TYPE;
struct std::_Equal_allocators;
struct tagINTERFACEINFO;
enum _DEP_SYSTEM_POLICY_TYPE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> const >;
struct _COAUTHIDENTITY;
enum _RTL_RESOURCE_CATEGORY;
enum _PROCESS_MITIGATION_POLICY;
enum _RTL_MEMORY_TYPE;
enum DISPLAYCONFIG_MODE_INFO_TYPE;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *>;
class CAbstractMarshalingStream;
struct _CMSG_SP3_COMPATIBLE_AUX_INFO;
enum _USER_MARSHAL_CB_TYPE;
struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION;
class Microsoft::WRL::Details::MakeAllocator<CProcessExtensionTbl>;
enum _VIRTUAL_MEMORY_INFORMATION_CLASS;
struct _OLESTREAMVTBL;
struct OleClipboardTracing::StaticHandle;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *>;
enum tagPOINTER_INPUT_TYPE;
struct NUMPARSE;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
enum DPI_HOSTING_BEHAVIOR;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>;
struct ComTelemetryProvider::StaticHandle;
enum __MIDL___MIDL_itf_activate_0000_0010_0003;
struct IOleInPlaceObjectWindowless;
enum tagCONTEXTEVENT;
struct wil::details::DestroyThreadPoolWait<0>;
class SafeIntCompare<unsigned int,unsigned short>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IExtensionRegistration *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
enum DPI_AWARENESS;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
enum SYSNLS_FUNCTION;
struct _WOF_EXTERNAL_INFO;
enum ECC_CURVE_TYPE_ENUM;
struct wistd::unique_ptr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;
enum _RTL_PATH_TYPE;
enum SERVICE_SHARED_REGISTRY_STATE_TYPE;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
class std::basic_string_view<char16_t,std::char_traits<char16_t> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> > const >;
enum AppPolicyLifecycleManagement;
class AdditionHelper<unsigned long,unsigned int,1>;
struct _CERT_POLICY_INFO;
enum _RTL_VERIFIER_INFORMATION_CLASS;
class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >;
struct _FILE_END_OF_FILE_INFORMATION;
struct _s__RTTIBaseClassArray;
enum AppPolicyThreadInitializationType;
class Microsoft::WRL::Details::MakeAllocator<Microsoft::WRL::Details::WeakReferenceImpl>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,_RTL_SRWLOCK *>;
struct _METADC;
struct _METAINFO;
enum _FILE_KNOWN_FOLDER_TYPE;
struct _PROCESS_MITIGATION_ASLR_POLICY;
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY;
struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY;
struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY;
struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY;
struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY;
struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY;
struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY;
struct _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY;
struct _PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY;
struct _PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY;
struct _PROCESS_MITIGATION_POLICY_INFORMATION;
enum _MANDATORY_LEVEL;
class CFontEventsCP;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct IGlobalInterfaceTable;
enum tagGLOBALOPT_RPCTP_VALUES;
struct _MINIDUMP_USER_RECORD;
struct std::nothrow_t;
enum _THREADINFOCLASS;
struct _tlgDataDescInit<_tlgIndexSequence<16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> >;
enum AppPolicyCreateFileAccess;
class wil::details::<lambda_4f3ec52b7543533c4222b284350504d0>;
struct Windows::Foundation::Collections::IIterable_impl<short>;
class OleGetClipboard::__l20::<lambda_c423ec492903d37bedc0b5c6ae7700cf>;
enum _COMPUTER_NAME_FORMAT;
struct Windows::Foundation::IReference<enum Windows::Storage::FileAttributes>;
struct _REPARSE_DATA_BUFFER;
struct _REPARSE_GUID_DATA_BUFFER;
struct _REPARSE_DATA_BUFFER_EX;
enum IMPORT_OBJECT_TYPE;
enum _CPU_PARTITION_QUERY_INFORMATION_CLASS;
class wil::details::<lambda_9c5331a7944ecca7e332e744444330f1>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardTaskCompletion> >;
struct RETRIEVAL_POINTER_COUNT;
enum ARM64_FNPDATA_FLAGS;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,HWILFAILUREWATCH__ *>;
struct _FILE_DISPOSITION_INFORMATION;
enum IMAGE_AUX_SYMBOL_TYPE;
struct IUnkInner;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference>;
struct __WilFeatureTraits_Feature_AdditionalComDebugOutput;
struct IRootStorage;
class Microsoft::WRL::Details::MakeAllocator<CProcessPatternTbl>;
enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_ROM_HEADERS;
enum _ACCESS_REASON_TYPE;
struct IOleParentUndoUnit;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FolderInformation *>;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
enum tagPENDINGMSG;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>;
enum SYSGEOCLASS;
struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct wistd::__compressed_pair_elem<wistd::default_delete<unsigned short [0]>,1,1>;
class wil::details::<lambda_6f57918b5b55001b59ace551d0aa2d6b>;
enum _OS_DEPLOYEMENT_STATE_VALUES;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct _WIN32K_SYSCALL_FILTER;
enum DISPLAYCONFIG_ROTATION;
struct DISPATCH_FRAME;
enum _HEAP_INFORMATION_CLASS;
class Microsoft::WRL::ComPtr<IDataObject>;
class SafeCastHelper<unsigned long,unsigned long,0>;
struct _FNSAVE_FORMAT;
enum OLETLS_CROSS_THREAD_FLAGS;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IExtensionRegistration *,1>;
enum EffectiveUnmarshalingPolicy;
struct IConnectionPoint;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageStreamTransaction *>;
enum _DPFLTR_TYPE;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,short>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk>;
enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS;
enum tagEventLogSD;
enum tagVARFLAGS;
struct IPipeLong;
enum IMPORT_OBJECT_NAME_TYPE;
struct GetTypeValueImpl<long,unsigned long>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>;
struct tagCALPOLESTR;
enum ARM64_FNPDATA_CR;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
enum _SC_ENUM_TYPE;
enum AppPolicyMediaFoundationCodecLoading;
struct _ITEMID_CHILD;
enum _PRIORITY_HINT;
enum _SE_VALIDATE_MAPPING_TYPE;
enum tagFUNCFLAGS;
struct IXMLAttribute;
enum tagPreferredServerBitness;
struct _OA_SAFEARRAY_USER_MARSHAL_ROUTINE_TRIPLE;
enum AgileReferenceOptions;
enum _SAFER_OBJECT_INFO_CLASS;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFolder *>;
enum _AVRF_MODE_FLAGS;
class IntTraits<long>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> >;
struct Windows::Foundation::IAsyncOperation<_GUID>;
enum PackageDependencyProcessorArchitectures;
struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData;
enum _PROCESS_INFORMATION_CLASS;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
enum __MIDL_IBindStatusCallback_0005;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *>;
struct tagMSLLHOOKSTRUCT;
struct IComClassIterator;
enum _COPYFILE2_MESSAGE_TYPE;
enum _THREAD_INFORMATION_CLASS;
struct _wfinddata64_t;
enum AppPolicyShowDeveloperDiagnostic;
struct _CRYPT_RC2_CBC_PARAMETERS;
struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
enum _FILTER_BOOT_OPTION_OPERATION;
struct IDataTransfer;
enum OFFER_PRIORITY;
struct wistd::__unique_ptr_deleter_sfinae<wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
struct tagRemHMETAFILEPICT;
struct tagSRVRDISPATCHDATA;
class RenderFormat::__l28::<lambda_ac11c26dd3ae65ee398a5e6a0af64263>;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
class Microsoft::WRL::ComPtr<CEnumFmt10>;
class wil::details::<lambda_9c9f931296e6a830dccf0d8124ec813c>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect>;
enum AppPolicyProcessTerminationMethod;
struct CompObjHdr;
enum TXTTYPE;
class CompObjStmData;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
enum AppPolicyClrCompat;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
enum POINTER_FEEDBACK_MODE;
class wil::details::<lambda_1aea5f85821ff488f802c562595593c0>;
enum LATENCY_TIME;
class Common::AutoPtr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,&ARI::AutoPtrAriHeapDeallocate<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION> >;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;
struct Windows::Foundation::Collections::IVector<double>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >;
struct wil::details::folder_change_reader_state;
enum TOOLTIP_DISMISS_FLAGS;
struct Windows::Storage::Streams::IRandomAccessStream;
enum SYSGEOTYPE;
enum APPSTATE;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>;
enum __MIDL___MIDL_itf_immact_0000_0002_0002;
class wil::details::<lambda_7eb39bb9e6cdfb6ff1aee2ae861927e3>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *>;
enum _operators;
enum _htmlCellAlign;
class Enum;
enum _htmlCellVAlign;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt10> const >;
enum _SEARCH_TERM_EXPANSION;
struct Windows::Foundation::IAsyncOperation<enum Windows::System::UserAgeConsentResult>;
struct std::atomic_flag;
struct _RTL_FEATURE_USAGE_REPORT;
enum _AUTH_TYPE;
class wil::details::<lambda_205ba715e1b020179bdaff1f99f14edf>;
struct tagProxyFileInfo;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
enum _PROXY_ACCESS;
class wil::details::<lambda_8cc21529f583b174057c6bb7b3da75d2>;
class MultiplicationMethod<unsigned short,unsigned short>;
enum DBPOSITIONFLAGSENUM;
struct FMT;
enum DBSORTENUM;
enum DBASYNCHPHASEENUM;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef const >;
enum DBREASONENUM;
struct tagCInterfaceProxyHeader;
struct tagCInterfaceProxyVtbl;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *>;
enum DBEVENTPHASEENUM;
enum DBINDEX_COL_ORDERENUM;
struct _PROXY_INFO;
struct Microsoft::WRL::RuntimeClassFlags<2>;
enum tagDBBOOKMARK;
struct Windows::Foundation::Collections::IIterable<unsigned int>;
class Windows::Internal::ResourceString;
class Microsoft::WRL::ComPtr<IUnwrappableDataObject>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> >;
enum DBKINDENUM;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Search::SortEntry>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileReference> >;
struct _SYSTEM_SHADOW_STACK_INFORMATION;
enum ISOFLAG;
struct _MINIDUMP_HANDLE_DESCRIPTOR;
struct Windows::Foundation::Collections::IVector<__int64>;
struct _SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS;
struct Windows::Foundation::Collections::IIterable_impl<double>;
class SafeCastHelper<unsigned long,long,1>;
enum tagCHUNKSTATE;
enum tagCHUNK_BREAKTYPE;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
enum _SQM_TYPE;
class HashInt;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *>;
class CTrackingCompositeMoniker;
enum _TAG_UNNAMED_368;
class wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> >;
struct __GENERIC_BINDING_INFO;
enum _TAG_UNNAMED_369;
class std::reverse_iterator<std::_String_view_iterator<std::char_traits<char32_t> > >;
enum _TAG_UNNAMED_370;
class Microsoft::WRL::ComPtr<INotARealInterface>;
struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable_imp<<lambda_e06473e64d77ff850420a9b624ffc716>,1>;
enum _TAG_UNNAMED_371;
struct IPersistPropertyBag;
class wil::com_ptr_t<NdrTypeInfo,wil::err_returncode_policy>;
enum _TAG_UNNAMED_372;
struct _SERVICE_FAILURE_ACTIONSA;
enum EXTENDED_NAME_FORMAT;
class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *>;
enum wil::OpenThreadTokenAs;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
enum _TAG_UNNAMED_373;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
struct _RPC_MESSAGE;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
class OleSetClipboard::__l14::<lambda_9370c4e5c64663684a8eb35dd7926c23>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
class OleClipboardTracing;
struct _IMAGEHLP_JIT_SYMBOL_MAP;
struct _TRIVERTEX;
class CDefLink::CPrivUnknown;
struct _IMAGE_ARM64EC_CODE_RANGE_ENTRY_POINT;
struct IThumbnailExtractor;
struct _MIDL_STUB_MESSAGE;
struct Windows::Foundation::IAsyncOperation<bool>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double>;
struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>;
struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *>;
struct _FILE_IO_PRIORITY_HINT_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >;
class AdditionMethod<unsigned long,unsigned int>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
class Windows::Internal::GitPtr;
class CClipClientDataWrapper;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRestrictedErrorInfo> const >;
class wil::details::<lambda_45db146a3bb9d5c040602df36a657518>;
struct Windows::Foundation::Collections::IMapView<__int64,__int64>;
class wil::details::failure_action_request;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct _FSCTL_UNMAP_SPACE_INPUT_BUFFER;
struct _EXCEPTION_POINTERS;
struct ITypeLib;
struct _MINIDUMP_HANDLE_OBJECT_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef const >;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::InPlaceDeactivate::__l2::<lambda_0d32688c0356eaf1376562cb0fa29181>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1>;
class wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> >;
struct CastGuardVftables;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
struct IcFrame;
struct _MODLOAD_PDBGUID_PDBAGE;
struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes>;
struct IFunctionDiscoveryNotification;
struct OsFrame;
class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >;
struct InFrame;
class CReadMInterfacePointerWithSourceAttributesMarshalingStream;
struct tagXFORM;
struct tagEMRBITBLT;
class CArray<CPropertySection *,CPropertySection * &>;
struct NDR_POINTER_QUEUE_STATE;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct tagCONNECTDATA;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFolder *>;
struct _KNONVOLATILE_CONTEXT_POINTERS;
struct IStream;
struct Windows::Foundation::Collections::IMapView<_GUID,bool>;
struct CMemString_PolicyCoTaskMem;
class Windows::Storage::StorageLibrary;
class SafeCastHelper<long,int,0>;
struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::PhotoOrientation>;
struct _SD_QUERY_STATS_INPUT;
struct _SD_ENUM_SDS_INPUT;
struct _SD_GLOBAL_CHANGE_INPUT;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct _RTL_CONDITION_VARIABLE;
struct _WIM_PROVIDER_EXTERNAL_INFO;
struct _PROCESSOR_POWER_INFORMATION;
struct _RTL_CRITICAL_SECTION_DEBUG;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOleDataFormatIterator> >;
struct tagContextStackNode;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>;
class std::chrono::duration<int,std::ratio<60,1> >;
struct wistd::unique_ptr<_TOKEN_PRIMARY_GROUP,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;
class wil::ResultException;
struct _FILE_VOLUME_NAME_INFORMATION;
struct _IMAGE_DATA_DIRECTORY;
struct _Real_widened<float,double>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDataObject> >;
struct _MINIDUMP_MEMORY_LIST;
struct tagWNDCLASSW;
struct _IMAGE_OPTIONAL_HEADER64;
struct _IMAGE_NT_HEADERS64;
struct wistd::__is_construct::__nat;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct _STARTUPINFOW;
struct _JOBOBJECT_WAKE_FILTER;
struct _JOBOBJECT_FREEZE_INFORMATION;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int>;
struct Windows::Foundation::Collections::IVectorView_impl<int,1>;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
struct _IMAGE_DOS_HEADER;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
class wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy>;
struct EHExceptionRecord::EHParameters;
struct EHExceptionRecord;
struct Windows::Foundation::Collections::IIterable<Windows::System::User *>;
struct _IMAGE_SYMBOL_EX;
struct _MANAGE_HOT_PATCH_CHECK_ENABLED;
class OleClipboardTracing::CallContext;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct _CERT_PAIR;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
class wil::details::static_lazy<wil::details::ApiTelemetryLogger>;
struct _onexit_table_t;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> >;
struct $_TypeDescriptor$_extraBytes_24;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>;
struct __scrt_narrow_argv_policy;
struct __scrt_narrow_environment_policy;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >;
struct wistd::__make_unsigned<int,1>;
struct _SYSTEM_POOL_ENTRY;
class Windows::Storage::StorageFolder;
struct IPSFactoryBuffer;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> > >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
union _SLIST_HEADER;
class wil::details::unique_storage<wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,HKEY__ *,0,std::nullptr_t> >;
struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64>;
struct _ITEMIDLIST_ABSOLUTE;
struct IRunnableObject;
struct IRpcStubBuffer;
struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable_imp<<lambda_af47d61301194c5d4839e4c10d405b79>,1>;
class wil::folder_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy>;
struct wil::details::out_param_t<wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> > > >;
class std::exception;
struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1>;
struct _tagADDRESS64;
struct _KDHELP64;
struct _tagSTACKFRAME_EX;
struct tagIPIDEntry;
struct _FAT_STATISTICS;
struct Windows::Foundation::Collections::IIterator<Windows::UI::WindowId>;
struct IRecordInfoVtbl;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileDataObject> const >;
class CallerCanAccessClipboardData::__l5::<lambda_2aa60daf810bf981192e67453d2e1fb5>;
class std::bad_array_new_length;
union std::_String_val<std::_Simple_types<char16_t> >::_Bxty;
class std::_String_val<std::_Simple_types<char16_t> >;
class std::_Compressed_pair<std::allocator<char16_t>,std::_String_val<std::_Simple_types<char16_t> >,1>;
class std::basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> >;
struct _wfinddata32i64_t;
struct _THREAD_POWER_THROTTLING_STATE;
struct IGlobalOptions;
struct __type_info_node;
struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *>;
struct tagCInterfaceStubVtbl;
struct IMarshalingStream;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>;
struct _iobuf;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect>;
class CFormatOnlyDataObject;
struct _NT_TIB64;
struct __crt_locale_data;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct __crt_multibyte_data;
struct __crt_locale_pointers;
struct Windows::Foundation::IEventHandler_impl<HSTRING__ *>;
class std::allocator<char16_t>;
struct _stat64;
struct Windows::Foundation::IReference<unsigned int>;
struct tagSTATPROPSTG;
class wil::details::<lambda_7e8a978c88e3279cb3232dbdb437313e>;
struct ThreadCallObjectCache;
struct Windows::Foundation::Collections::IVector_impl<unsigned char,1>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct __noop_coroutine_frame_standard;
struct IEnumSTATPROPSTG;
class AdHocCallFrame<IOleWindow,<lambda_7f8f27448f522cea32614cee7579f563> >;
struct GetTypeValueImpl<long,CRunningObjectTable *,long>;
struct _IMAGE_IMPORT_DESCRIPTOR;
struct _PROCESSOR_NUMBER;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int>;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *>;
struct _RTL_BALANCED_NODE;
struct _MUICCHEADER;
struct _MIDL_METHOD_PROPERTY;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct tagSERIALIZEDPROPERTYVALUE;
struct _SD_QUERY_STATS_OUTPUT;
struct IPartitionProperty;
struct tagPROPSPEC;
struct Windows::Foundation::Collections::supports_cleanup<_GUID>;
struct _SYSTEM_BASIC_INFORMATION;
struct _IMAGE_DYNAMIC_RELOCATION64;
struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList;
class wil::details::<lambda_d92ccf92f2e47eeb0e93ba93596d390c>;
struct GetTypeValueImpl<long,CFilteredRunningObjectTable *,long>;
class Windows::System::UserAuthenticationStatusChangingEventArgs;
struct EDP_CONTEXT;
class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t> > > >;
class wil::details::<lambda_b08d4e58c4a54b35f96127100f4f5d09>;
struct __vcrt_assert_va_start_is_not_reference<unsigned short const * const>;
struct IPropertySetStorage;
struct _SD_ENUM_SDS_ENTRY;
struct _SD_ENUM_SDS_OUTPUT;
struct tagInputRoutingInfo;
struct IFillLockBytes;
class CDefObject;
struct tagCLASS_DATA;
struct _FILE_OBJECTID_INFORMATION;
struct _SHELLEXECUTEINFOA;
struct std::_Make_unsigned2<2>;
struct wistd::__make_unsigned<unsigned __int64,1>;
struct _NDR_ASYNC_MESSAGE;
struct Windows::Foundation::Collections::is_foundation_struct<float>;
class wil::details_abi::ProcessLocalStorage<wil::details_abi::FeatureStateData>;
class wil::critical_section;
class wil::details_abi::heap_vector<wil::details_abi::SubscriptionList::Subscription>;
class wil::details_abi::SubscriptionList;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > >;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > >;
class wil::details_abi::heap_vector<wil_details_FeatureUsageSRUM>;
class wil::details::FeatureStateManager;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
class CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile *>;
struct std::_Distance_unknown;
class OleClipboardLock;
struct _TAPE_ERASE;
struct _FILE_BASIC_INFORMATION;
struct std::common_type<>;
struct std::_Nontrivial_dummy_type;
struct _FILE_FS_SIZE_INFORMATION;
struct _MINIDUMP_MISC_INFO_3;
class AdHocInterceptorForwarders<IOleWindow,IOleWindow>::ContextSensitiveHelp::__l2::<lambda_92c1c2c09ef3e1efce6163781ee57e61>;
class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IWeakReferenceSource,1,0>;
struct tagCLIPDATA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IBindCtx> const >;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
struct _MINIDUMP_THREAD_CALLBACK;
class std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t> > >;
class wil::details::ScopeExitFn<<lambda_444db092903b510854fa5b0a4f709bfa> >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct _EVENTLOGRECORD;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> >;
struct _KEY_CACHED_INFORMATION;
struct IStorage;
struct wil::details::RtlThreadPoolMethods;
struct Microsoft::WRL::ErrorHelper<0>;
class std::initializer_list<char32_t>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>;
struct tagSAFEARRAYBOUND;
struct tagSAFEARRAY;
class Microsoft::WRL::ComPtr<IAgileDataObject>;
struct wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t>;
class RunSyncOnMTAThread::__l2::<lambda_8a24869d9b18bed7b3421b4230e9e935>;
struct Windows::Foundation::IAsyncOperation_impl<_GUID>;
struct _RTLP_TAG_INFO;
struct _RTLP_HEAP_TAGGING_INFO;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Microsoft::WRL::Details::WeakReferenceImpl> const >;
struct _NDR_CS_ROUTINES;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> > const >;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct CFont::Load::__l2::FONTDATA;
class Microsoft::WRL::ComPtr<IClipboardTaskCompletion>;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct _APPINFO_PROCESS_INFORMATION;
class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Init::__l2::<lambda_b26c1a7a98add69a0d17b823be354735>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct _SYSDBG_VIRTUAL;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> const >;
class wil::details::EnsureCoalescedTimerSRUM::__l8::<lambda_5035b992506f4af81a770c5842624510>;
struct IContext;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>;
struct _OBJECT_ATTRIBUTES64;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator> const >;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;
class wil::details::<lambda_79649bc7eddf76cb0be9ed05125f432b>;
struct _SYSDBG_PHYSICAL;
struct IFilter;
class IntTraits<unsigned short>;
struct Windows::Foundation::Collections::IIterable_impl<int>;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct _tlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,5> >;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
class IsInt<unsigned short>;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *>;
struct __vcrt_assert_va_start_is_not_reference<__crt_locale_pointers * const>;
struct std::_Unused_parameter;
class wil::details::lambda_call<<lambda_1258db8bed1d9beae0452193350f83a8> >;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct EventRegistrationToken;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int>;
struct Windows::Foundation::IReferenceArray<unsigned int>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime>;
struct _MonikerWriteStruct;
class TryGetTypeInfoFromIIDViaRegistry::__l112::<lambda_b2c7739d5fc7084f4672933f9bcf410d>;
class wil::details::lambda_call<<lambda_b2c7739d5fc7084f4672933f9bcf410d> >;
struct _MonikerReadStruct;
class wil::details::<lambda_d5f05dc35505eea0a3a3955b1bf8b04e>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >;
struct tagBIND_OPTS;
struct FORMATETCDATAARRAY;
struct Microsoft::WRL::RuntimeClassFlags<1>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator> >;
struct _CMSG_KEY_TRANS_RECIPIENT_INFO;
union _INSTALLSPEC;
class CReadOnlyStorage::OpenStream::__l2::<lambda_fcb92e6a7323f565a84aeece59385ee4>;
struct IEnumString;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
struct _COORD;
struct _SMALL_RECT;
struct _CONSOLE_SELECTION_INFO;
struct IEnumSTATPROPSETSTG;
class Windows::Storage::AccessCache::ItemRemovedEventArgs;
class IsFloat<int,0>;
struct tagVARIANT;
struct tagPARAMDESCEX;
class AdHocCallFrame<IOleWindow,<lambda_a07c95792dcef3326839cb72fdfd78fd> >;
class ServerCall;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *>;
struct ISynchronizeMutex;
struct IRecordInfo;
struct _LDR_HOT_PATCH_DATA;
class CFileMonikerFactory;
struct _tlgWrapBuffer<_UNICODE_STRING>;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int>;
class CPolicySet;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService> >;
struct tagGESTURECONFIG;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>;
struct IObjContext;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> > >;
class CObjrefMonikerFactory;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t>;
struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
class CCtxCall;
struct wil::details::static_lazy<OleClipboardTracing>::Completer;
struct _TAPE_WMI_OPERATIONS;
class wil::details::<lambda_4cf8930b66a70cb94dfbc2fcc0185265>;
class Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t>;
struct __vc_attributes::helper_attributes::usageAttribute;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct _LDT_ENTRY;
struct _FILE_PIPE_SILO_ARRIVAL_INPUT;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct std::_Make_unsigned2<4>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime>;
class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class UnmarshalForQueryInterface;
struct _XSAVE_VENDOR;
struct Windows::Foundation::Collections::IMapView<__int64,float>;
class CTSmartObj<unsigned char *,CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem> >;
struct Windows::Foundation::IReferenceArray_impl<IInspectable *>;
class CBaseRPCTimeout;
struct tagOLE1DISPATCHDATA;
struct HSTR__;
struct tagRID_DEVICE_INFO_KEYBOARD;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class CoGetStandardMarshalInProgress;
struct __vc_attributes::event_receiverAttribute;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Search::SortEntry>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>;
struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *>;
class Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService>;
struct IRunningObjectTable;
class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t> > > >;
struct tagPOINTS;
struct tagEMRPOLYPOLYLINE16;
class wistd::__compressed_pair<VerbList *,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>;
class CArrayFValue;
struct tagARRAYDESC;
struct Windows::Foundation::Collections::IIterable_impl<float>;
class ClipboardDataObjectTask;
struct ComTrace::StaticHandle;
struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64>;
struct std::_Invoker_functor;
struct _TP_WAIT;
struct IXMLDOMNode;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct _s__RTTICompleteObjectLocator2;
struct wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t>;
struct IOplockStorage;
struct _OPEN_PRINTER_PROPS_INFOA;
struct std::_Invoker_pmd_refwrap;
struct IBindStatusCallback;
struct IBinding;
struct HWND__;
class wil::rtlcritical_section;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *>;
struct IBindCtx;
class DDE_CHANNEL;
struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION;
struct Windows::Foundation::IReferenceArray_impl<_GUID>;
struct _HARDWARE_COUNTER;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t>;
struct wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>;
struct IInternetProtocolSinkStackable;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >;
class wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy>;
class CUrlMonWrapper;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>;
class COleCache::CCacheDataImpl;
class COleCache;
class wil::details::static_lazy<ComTrace>;
struct wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,char *,0,std::nullptr_t>;
struct Windows::Foundation::Collections::IVector<enum Windows::System::UserWatcherUpdateKind>;
class Microsoft::WRL::ComPtr<IOleVerb>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >;
struct IPersistStream;
struct Windows::Foundation::Collections::is_pointer<short>;
struct tagDISPPARAMS;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>;
struct Windows::Foundation::IAsyncActionProgressHandler<double>;
struct _SCRUB_PARITY_EXTENT;
struct IOleAdviseHolder;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>;
struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION;
struct IPersist;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
class CCacheNode;
struct CArray<CCacheNode>::ArrayNode;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::AccessCache::AccessListEntry>;
class CBindStatusCallback;
struct Windows::Foundation::IReference_impl<HSTRING__ *>;
struct Windows::Foundation::Collections::IObservableVector<Windows::Storage::StorageFolder *>;
struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::window_dc,HDC__ *,0,std::nullptr_t>;
struct _TI_FINDCHILDREN_PARAMS;
struct HDC__;
class wil::details::<lambda_6553ee20546644424a77445b8a5340c1>;
struct _CM_KEYBOARD_DEVICE_DATA;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _CERT_CHAIN_CONTEXT;
struct Windows::Foundation::Collections::IIterable<IInspectable *>;
struct tagSTATDATA;
struct _RTL_RXACT_CONTEXT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> >;
struct Windows::Foundation::Collections::IVectorView<int>;
struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFolder *>;
struct IAdviseSink;
struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct wil::err_failfast_policy;
struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct _EXCEPTION_RECORD64;
class wil::details::<lambda_fc3d789a4bf360a0222f84e5ea461225>;
struct IActivationSecurityInfo;
class std::_String_view_iterator<std::char_traits<unsigned short> >;
class wil::details::<lambda_3627dded0254d04b0b7c46372800dfc0>;
struct _LDRP_CSLIST;
struct _CRYPT_KEY_SIGN_MESSAGE_PARA;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64>;
struct IImageFilter;
struct std::hash<std::error_code>;
struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::paint_dc,HDC__ *,0,std::nullptr_t>;
class wil::details::<lambda_22c1057028c38f542f58409464a556f9>;
struct Windows::Foundation::Collections::IIterable<int>;
struct std::_Conditionally_enabled_hash<int,1>;
struct wistd::unique_ptr<_TOKEN_MANDATORY_LABEL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;
struct __vc_attributes::atl::perf_objectAttribute;
struct Windows::Foundation::Collections::IIterator<unsigned int>;
class CDelayUnlockContainer;
struct tagSERIALKEYSW;
struct _MEMORY_PARTITION_CHARGE_SHARING_ATTRIBUTES;
struct IOleItemContainer;
struct std::hash<std::error_condition>;
struct wil::details::resource_policy<void *,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wistd::integral_constant<unsigned __int64,0>,wil::select_result,void *,0,std::nullptr_t>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IPropertySet *>;
struct _MIDL_SERVER_INFO_;
struct _tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,void const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteAgg,void const *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>;
struct _BCRYPT_OID;
class CAbstractStream;
struct _RTLP_CURDIR_REF;
class AdHocInterceptor<IPersistPropertyBag>;
struct _SYSTEM_AUDIT_ACE;
struct _CERT_INFO;
struct IImmersiveApplication;
class std::numeric_limits<unsigned long>;
class std::numeric_limits<long>;
struct _CMSG_ENCRYPTED_ENCODE_INFO;
class Microsoft::WRL::ComPtr<CProcessPatternTbl>;
class std::error_code;
class std::_System_error;
struct tagEMREXCLUDECLIPRECT;
class CProcessPatternTbl;
struct _CRL_CONTEXT;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>;
class CPatternTbl;
struct _tlgWrapSid<_SID>;
struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION;
class MultiplicationMethod<unsigned long,unsigned int>;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *>;
struct _WNF_TYPE_ID;
struct STblHdr;
class CBaseMInterfacePointerMarshalingStream;
class CScmPatternTbl;
class CDbgGuidStr;
struct Windows::System::IUserWatcher;
class wil::details::<lambda_0fe240b9a2328790579032b3121ed8b3>;
class Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs;
struct _HMAC_Info;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageItem *>;
class wistd::__function::__base<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>;
union tagBINDPTR;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION;
struct _SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION;
struct tagCOLORADJUSTMENT;
struct tagEMRSETCOLORADJUSTMENT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> const >;
struct tagBIND_OPTS3;
class CLUAMoniker;
struct ICallUnmarshal;
struct __WilFeatureTraits_Feature_PerAppRuntimeBroker;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct CDdeObject::COleObjectImpl;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>;
struct ICreateTypeLib2;
class wil::details::<lambda_277802bec955fc575f413391ad2f5cd9>;
struct Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *>;
struct _ACTIVATION_CONTEXT;
struct Windows::Foundation::Collections::IVectorView<_GUID>;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *>;
struct tagSECTIONHEADER;
class CArray<CProperty *,CProperty * &>;
class CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>;
class CPropertySection;
struct _MODEMDEVCAPS;
struct POWER_STATE_NOTIFY_HANDLER;
struct _tlgWrapperByVal<1>;
struct IEnumFORMATETC;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct GetTypeValueImpl<long,unsigned long,unsigned long>;
class wistd::unique_ptr<_TOKEN_DEFAULT_DACL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceProvider> const >;
struct _SYSTEM_CODEINTEGRITYPOLICY_INFORMATION;
struct std::_System_error_message;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> const >;
struct tagTLIBATTR;
class SafeCastHelper<unsigned long,unsigned __int64,2>;
union WPP_PROJECT_CONTROL_BLOCK;
struct ICallFrameWalker;
struct GetTypeValueImpl<long,_GUID *,unsigned long,unsigned long>;
class CBrokeredClipDataObject;
class wil::details::<lambda_61557cb02a2b9f3812832bd6815870c5>;
struct IMarshal;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point>;
struct _LOADED_IMAGE;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits;
class AdHocCallFrame<IPersist,<lambda_77a2b2d0129bbc926517a2760e67553c> >;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *>;
class SafeIntCompare<unsigned long,unsigned long>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>;
class wil::com_ptr_t<IInterfaceRelated,wil::err_returncode_policy>;
class wil::details::<lambda_b3e507ddf2cb8acd5eb135418c146420>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
class wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> >;
struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *>;
struct ImplementationHelpersDetails::IsUuidOfAnyHelper<Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct IPersistStreamInit;
class CExtHashTable;
class CProcessExtensionTbl;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64>;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::HasKey::__l5::<lambda_13b16af24a6654baa37229b7cf33de1f>;
struct APPLICATION_VIEW_DATA;
struct IMMAPP_APPLICATION_VIEW_DATA;
struct wistd::__unique_ptr_deleter_sfinae<wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
struct __vcrt_va_list_is_reference<unsigned long>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct IBlockingLock;
struct std::_Shared_ptr_spin_lock;
struct IXMLDocument;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>;
struct tagMethodInfo;
struct _CERT_FORTEZZA_DATA_PROP;
struct Windows::Foundation::Collections::is_pointer<int>;
class wistd::__compressed_pair<unsigned short *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
class wistd::unique_ptr<unsigned short [0],wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::AgileRef>;
struct Windows::Foundation::IEventHandler<IInspectable *>;
struct _RASTERIZER_STATUS;
struct IImmersiveApplicationArray;
struct IZoneIdentifier2;
struct IPartitionLookup;
struct _tlgWrapperByRef<16>;
struct CDdeObject::CPersistStgImpl;
struct wil::details::close_invoke_helper<0,void __cdecl(IObjectWithSite *),&wil::details::SetSiteNull,IObjectWithSite *>;
struct wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree>;
struct wistd::function<void __cdecl(void)>::__callable<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > >;
struct IMultiQI;
class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>;
struct __vc_attributes::aggregatableAttribute;
struct IEnumMoniker;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessExtensionTbl> >;
struct _IMAGEHLP_DUPLICATE_SYMBOL64;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int>;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
class CTLocalAllocPolicy;
struct IRpcProxyBuffer;
class Microsoft::WRL::ComPtr<IDropTarget>;
class DragDropTelemetry::DragDropSession;
class CDragOperation;
class wil::details::<lambda_a893c5d9c59f68b6d1db7bea5237305b>;
struct _CRYPT_PROVIDER_FUNCTIONS;
class Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics>;
class AdditionMethod<long,long>;
struct std::allocator_traits<std::allocator<char32_t> >;
struct _MINIDUMP_THREAD_EX_CALLBACK;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>;
struct IEnumSTATSTG;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IBuffer *>;
class Microsoft::WRL::ComPtr<IAgileReference>;
struct IObjectWithSite;
struct _TraceLoggingMetadata_t;
struct threadmbcinfostruct;
class GuidString;
class CUUIDHashTable;
struct _SHNAMEMAPPINGW;
struct _UUID_VECTOR;
struct Windows::Foundation::IReferenceArray_impl<unsigned int>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAllowAstaToAstaDeadlockRisk> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> const >;
struct _RTL_FEATURE_USAGE_DATA;
class OleClipboardAggregateTelemetry;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *>;
class SafeIntCompare<unsigned long,long>;
struct Guid;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,double>;
struct Windows::Foundation::IReference_impl<__int64>;
class ComVerifierSettings;
class AdHocInterceptor<IElementBehavior>;
class Windows::Storage::Streams::RandomAccessStreamReference;
struct _EXCEPTION_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO;
struct _EXIT_PROCESS_DEBUG_INFO;
struct _LOAD_DLL_DEBUG_INFO;
struct _UNLOAD_DLL_DEBUG_INFO;
struct _RIP_INFO;
struct _DEBUG_EVENT;
struct _INTENT_TO_SEAL_ATTRIBUTE;
class CDefLink::CAdvSinkImpl;
class CDefLink;
class wil::details::<lambda_26b4094157b33ec5a45622fcf1ed8ee7>;
struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64>;
struct tagTYPEATTR;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
struct Windows::Foundation::IReference_impl<unsigned int>;
class CCompositeMoniker;
struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct wistd::__compressed_pair_elem<_TOKEN_DEFAULT_DACL *,0,0>;
struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA;
struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;
struct INTERFACE_HELPER_CLSID;
class CReadInterfaceDataWithSourceAttributesMarshalingStream;
struct tagCOLORCORRECTPALETTE;
struct _SYMBOL_INFO;
struct _SYMBOL_INFO_PACKAGE;
class CWriteInterfaceDataMarshalingStream;
struct Windows::Foundation::Collections::IIterator<unsigned char>;
struct _WOW64_CPUAREA_INFO;
struct Windows::Foundation::IAsyncOperation<IInspectable *>;
struct _PLUGPLAY_EVENT_BLOCK;
struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *>;
class Microsoft::WRL::ComPtr<IObjectWithSite>;
struct _SRCCODEINFOW;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApplicationAssociationRegistration> const >;
struct HBITMAP__;
class CHashTable;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short>;
class OleClipboardTracing::Instance::__l2::<lambda_9f3a313a80b1998716fcb00bc3974d23>;
struct STARTING_LCN_INPUT_BUFFER_EX;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct HENHMETAFILE__;
struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>;
class wil::details::<lambda_d95aece34370f6ac5bb9524060d3f31e>;
struct wistd::__compressed_pair_elem<wil::hlocal_secure_deleter,1,1>;
struct MFT_ENUM_DATA_V0;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double>;
struct _CAT_MEMBERINFO;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *>;
class ComTrace::Instance::__l2::<lambda_f8a79a44bba2ee3470b25df359f31864>;
class Windows::System::UserWatcher;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,EDP_CONTEXT *>;
struct HREG;
struct _WIN_TRUST_SUBJECT_FILE;
struct tagTPMPARAMS;
struct _BCRYPT_PSS_PADDING_INFO;
struct _SPC_STATEMENT_TYPE;
class Interceptor;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64;
struct Windows::Foundation::Collections::IMap_impl<__int64,__int64>;
struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<4>;
struct IAgileReference;
class wil::details::default_query_policy;
struct _lldiv_t;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct IOleCache;
class wil::unique_com_call<IObjectWithSite,void __cdecl(IObjectWithSite *),&wil::details::SetSiteNull>;
struct ITypeLibVtbl;
struct tagEXCEPINFO;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct Windows::Foundation::IAsyncOperation<unsigned __int64>;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
class std::overflow_error;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *>;
union _POWER_STATE;
struct _SLIST_ENTRY;
class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
struct _tlgDataDescInit<_tlgIndexSequence<5,0,1,2,3,4> >;
struct tagLAYERPLANEDESCRIPTOR;
struct _TXFS_MODIFY_RM;
struct _SEALING_SIGNATURE_ATTRIBUTE;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IRandomAccessStreamReference *,1>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Point>;
struct IFont;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > const >;
struct _tlgCharTraits<char>;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::KnownFoldersAccessStatus>;
struct Windows::Foundation::IReference_impl<short>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *>;
struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>;
struct CDdeObject::CRpcStubBufferImpl;
struct _JOBOBJECT_WAKE_INFORMATION_V1;
struct IMoniker;
struct _CRYPT_IMAGE_REF;
struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct _CMC_TAGGED_REQUEST;
struct _MINIDUMP_MISC_INFO_2;
struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *>;
struct _WNF_USER_SUBSCRIPTION;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point>;
struct Windows::Foundation::IReferenceArray_impl<float>;
class Microsoft::WRL::Wrappers::Details::SyncLockShared;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> const >;
struct IPropertyPage2;
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct _TypeDescriptor;
class wil::details::<lambda_3f5f22ac39aadedce9d9ebf0feddf7cf>;
struct _s__CatchableTypeArray;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _STARTUPINFOEXW;
class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,0,0>;
struct _PROCESS_INFORMATION;
union _ARM64_FPCR_REG;
struct _SYSTEM_LEAP_SECOND_INFORMATION;
struct MAP_SHARED<MAP_KEY_GUID,NdrTypeInfo *>;
struct _SERVICE_DESCRIPTIONW;
struct _LOCALMANAGEDAPPLICATION;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1>;
struct _SPC_FINANCIAL_CRITERIA;
struct _MINIDUMP_THREAD_INFO;
class wil::details::lambda_call<<lambda_fc60b093486e22f751d51f4c0f5d35fc> >;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>,1>;
class wistd::__function::__func<<lambda_e06473e64d77ff850420a9b624ffc716>,void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
class Microsoft::WRL::ComPtr<IMoniker>;
struct _DUPLICATE_EXTENTS_DATA_EX;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >;
class GetCastMethod<unsigned long,int>;
struct wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >::__nat;
struct Windows::Foundation::Collections::IIterable<double>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Uri *>;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>;
struct std::_One_then_variadic_args_t;
struct tagEMRSTRETCHBLT;
struct _MINIDUMP_TOKEN_INFO_HEADER;
class AdHocCallFrame<IOleInPlaceObject,<lambda_e225fcb61db02045a776fc8c7ed2b6cf> >;
class CObjServer;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropContainerProxy> const >;
struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>;
struct wistd::__compressed_pair_elem<wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree>,1,1>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _NT_READ_FLAGS>;
struct _CRYPT_PROVUI_DATA;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBroker> >;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64>;
struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *>;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _IO_COUNTERS;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
class CActivationFilterContext;
struct _CRYPT_PROVIDER_DATA;
struct ICacheStream;
struct _CTL_INFO;
struct $_s__CatchableTypeArray$_extraBytes_16;
class Windows::Storage::FileProperties::StorageItemThumbnail;
struct Windows::Foundation::Collections::IVector<Windows::Foundation::Uri *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64>;
struct Windows::ApplicationModel::DataTransfer::IOperationCompletedEventArgs;
struct std::_Char_traits<char16_t,unsigned short>;
struct _CRYPT_ATTRIBUTE;
class wil::details::<lambda_ada71e15d5743ee3d82d84e02ffbb9ef>;
struct IWinInetHttpTimeouts;
class StringCache;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double>;
struct _RESTART_USN_JOURNAL_DATA;
struct _CERT_REVOCATION_INFO;
struct _OSVERSIONINFOEX2A;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropContainerProxy> >;
class wistd::unique_ptr<char [0],wistd::default_delete<char [0]> >;
struct _CRYPT_TIMESTAMP_REQUEST;
struct _OPERATION_END_PARAMETERS;
class wil::details_abi::heap_vector_iterator<wil::details::EnabledStateManager::CachedFeaturePropertyData>;
struct _PROVDATA_SIP;
class CAsyncCall;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wistd::integral_constant<unsigned __int64,0>,wil::select_result,void *,0,std::nullptr_t> > >;
struct WireContainerThis;
struct _KEY_HANDLE_TAGS_INFORMATION;
struct wistd::default_delete<wil::details::folder_watcher_state>;
struct __vc_attributes::propputAttribute;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IExtensionRegistration *>;
struct _EVENT_FILTER_DESCRIPTOR;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics> const >;
struct std::hash<std::nullptr_t>;
class CBindHost;
struct wistd::default_delete<wil::details::event_watcher_state>;
struct Windows::Foundation::Collections::IVector<unsigned __int64>;
struct Windows::Foundation::Collections::is_pointer<unsigned __int64>;
class Microsoft::WRL::ComPtr<wil::details::SyncAsyncActionOp>;
struct _MINIDUMP_MISC_INFO_5;
class CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
class utl::reverse_iterator<utl::_ArrayIt<unsigned __int64> >;
class wistd::__compressed_pair<unsigned short *,wistd::default_delete<unsigned short [0]> >;
class std::numeric_limits<char32_t>;
struct Windows::Foundation::IReference<Windows::Foundation::Size>;
struct _TOKEN_LINKED_TOKEN;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
struct wistd::__unique_ptr_deleter_sfinae<wil::hlocal_secure_deleter>;
struct tagMULTI_QI;
struct _SET_PURGE_FAILURE_MODE_INPUT;
struct _MINIDUMP_PROCESS_VM_COUNTERS_2;
struct Microsoft::WRL::DelegateTraits<1>;
class wil::unique_call<void (__cdecl*)(void),&CoUninitialize,1>;
class Microsoft::WRL::ComPtr<ITypeLib>;
struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *>;
class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>;
struct IAuthenticateEx;
struct IFontEventsDisp;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> const >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct wistd::__compressed_pair_elem<wil::cotaskmem_secure_deleter,1,1>;
class std::numeric_limits<__int64>;
class CAtom;
struct _ENCRYPTED_DATA_INFO;
class wil::details::<lambda_9a3f1b253d5803dff7b45a35318ab636>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct Windows::Foundation::Collections::IIterator<bool>;
union _AMD64_MXCSR_REG;
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK;
struct _MINIDUMP_IO_CALLBACK;
struct _MINIDUMP_VM_PRE_READ_CALLBACK;
struct _MINIDUMP_VM_POST_READ_CALLBACK;
struct _MINIDUMP_CALLBACK_INPUT;
class Microsoft::WRL::Details::MakeAllocator<ConversionClassIterator>;
class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<unsigned short> > > >;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> > const >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOleClassInfo> >;
struct tagGETCLIPBMETADATA;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short>;
class wistd::__function::__func<<lambda_35813abc48134a673502c50f3be72d9b>,void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>;
struct utl::integral_constant<bool,0>;
class CDdeConnectionTable;
class CDdeObject;
struct _tlgDataDescInit<_tlgIndexSequence<19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> > >;
struct _SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION;
class CPointerHashTable;
class AdHocInterceptor<IOleWindow>;
class CStmBufRead;
struct IOleInPlaceFrame;
struct wil::details_abi::ThreadLocalData;
struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node;
struct Windows::Foundation::IAsyncOperation_impl<double>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<bool> *>;
class Windows::Storage::FileProperties::ImageProperties;
struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO;
struct wil::details_abi::ThreadLocalFailureInfo;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >;
struct tagQACONTAINER;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
class BinaryMethod<long,int>;
struct _TOKEN_MANDATORY_LABEL;
struct HPALETTE__;
struct IBindHost;
class wil::details::<lambda_9b0da57ab9e02eb69ef404a87b57dcdb>;
struct IAgileDataObject;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *>;
struct IOleControlSite;
struct _CERT_LOGOTYPE_INFO;
struct _CERT_OTHER_LOGOTYPE_INFO;
struct IServiceProvider;
class wil::details::<lambda_a1a7323f8d6d33c944d50cb2e4bd6bef>;
class CReadOnlyStream;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct tagTEXTMETRICA;
struct tagPANOSE;
struct _OUTLINETEXTMETRICA;
struct _CSTRING;
struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>::EventTrackingType;
class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >;
struct IDebug;
struct _USER_MARSHAL_ROUTINE_QUADRUPLE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View> >;
class CAutoHandle_Policy<_IMAGELIST *>;
class Microsoft::WRL::ComPtr<CDragOperation>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
struct _APC_CALLBACK_DATA;
struct _MINIDUMP_THREAD_LIST;
struct _SCMREGKEY;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >;
class CDragDefaultCursors;
struct HICON__;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>;
struct Windows::Foundation::Collections::is_pointer<unsigned char>;
struct _MINIDUMP_HANDLE_DATA_STREAM;
class CForcedDropTarget;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Search::SortEntry>;
struct IEnumSCMProcessInfo;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IInspectable> >;
struct ICallFrameInit;
struct _tagSTACKFRAME64;
class CTSmartPtr<unsigned short *,CTContainer_PolicyCoTaskMem>;
struct HBRUSH__;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDataFormatIterator> >;
struct _IMAGEHLP_LINE64;
struct _CM_MONITOR_DEVICE_DATA;
struct IPictureDisp;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct wistd::enable_if<1,void>;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>;
struct _MINIDUMP_STRING;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::WindowId,0>;
struct PROCESS_PROTECTION_LEVEL_INFORMATION;
struct _MINIDUMP_THREAD_NAME;
struct _MINIDUMP_THREAD_NAME_LIST;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *>;
class IsFloat<long,0>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
struct wil::write_lock_required;
class CAutoHandle_Policy<HPALETTE__ *>;
struct Windows::Foundation::IAsyncActionProgressHandler_impl<double>;
struct FRAME_GetTypeInfo;
struct __vcrt_assert_va_start_is_not_reference<unsigned long>;
struct wistd::__compressed_pair_elem<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION *,0,0>;
struct wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,HKEY__ *,0,std::nullptr_t>;
struct _SECURITY_QUALITY_OF_SERVICE;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short>;
struct Windows::Foundation::IReference_impl<Windows::Foundation::Size>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>;
class wil::details::<lambda_050c322089e5dac1ea3294edcedf17de>;
struct Windows::Foundation::Collections::IMapView<unsigned int,Windows::System::User *>;
struct tagGUITHREADINFO;
struct _SYMBOL_INFO_PACKAGEW;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wil::details::SecureZeroData>;
struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> const >;
struct DISPATCH_INTERCEPTOR;
struct _tlgWrapperByVal<8>;
union wil_details_ReportedState;
union wil_details_RecordedState;
struct wil_details_FeatureReportingCache;
struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>;
struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *>;
struct _ASSEMBLY_STORAGE_MAP;
struct IRpcChannelBuffer2;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64>;
struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size>;
struct _FILE_IO_PRIORITY_HINT_INFORMATION_EX;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IUnknown>;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct Windows::Foundation::Collections::supports_cleanup<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct tagCADWORD;
struct Windows::Foundation::IAsyncOperationProgressHandler<int,int>;
struct tagDOCDISPATCHDATA;
struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>;
struct _NDR64_STRUCTURE_FLAGS;
struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT;
struct _NDR64_SIMPLE_MEMBER_FORMAT;
struct _NDR64_MEMPAD_FORMAT;
struct _NDR64_BUFFER_ALIGN_FORMAT;
struct __midl_frag14_t;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct IDataObject;
class DragDropLogging::CallContext;
struct Windows::Foundation::Collections::IIterator<double>;
struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int>;
struct ARRAY_INFO;
struct _RTL_VERIFIER_HELPER_TABLE;
struct wil::details::close_invoke_helper<1,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,_RTL_CRITICAL_SECTION *>;
struct _PREFIX_TABLE_ENTRY;
class Windows::Storage::StorageFile;
struct _NDR_CS_SIZE_CONVERT_ROUTINES;
struct tagACCEL;
class wil::details::<lambda_5a9ddac3867a5dcd6edf0ffa5576b047>;
struct _MINIDUMP_HANDLE_OPERATION_LIST;
class ComPsClassFactory;
struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>;
struct _RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY;
struct _CONNECTDLGSTRUCTA;
struct _NDR64_ARRAY_FLAGS;
struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT;
struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT;
struct REF_COUNTED_STRUCT;
struct HSTRING__;
class std::numeric_limits<signed char>;
struct Windows::Foundation::IMemoryBufferReference;
class wil::details::<lambda_a1cd407f1e75cd6c21535c6a38b98ecc>;
struct std::multiplies<void>;
class CEnumGeneric;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::System::User *>;
class wistd::__compressed_pair<_TOKEN_PRIMARY_GROUP *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
struct _CRYPT_CSP_PROVIDER;
struct Windows::Foundation::Collections::IIterator<HSTRING__ *>;
struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64>;
class wil::details::<lambda_abd5c7a9395c47cc5e5536f441cc4762>;
struct _MODLOAD_CVMISC;
struct std::integral_constant<unsigned __int64,0>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_only_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >;
class std::numeric_limits<float>;
struct IQuickActivate;
class ProcessToken;
class wil::details::<lambda_ef24b93a0ca4419704b7bf6aceb85173>;
struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>;
struct MD_INTERFACE_CACHE;
class Microsoft::WRL::ComPtr<ClipboardDataObjectTask>;
class ComTrace::CallContext;
struct Windows::Foundation::Collections::IIterator<_GUID>;
struct Windows::Foundation::IReference_impl<Windows::UI::Color>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,void *>;
struct _MUIREGISTRYINFO;
struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY;
struct _TIMER_BASIC_INFORMATION;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>;
struct _tlgDataDescInit<_tlgIndexSequence<41,0,1,2,3,4,5,7,8,9,11,12,13,15,16,17,19,20,21,23,24,25,27,28,29,31,32,33,35,36,37,39,40> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageItem *>;
class wil::details::init_once_completer;
class wil::details::<lambda_41f17fbf7270d2a9845e92c839228956>;
struct Windows::Foundation::IAsyncOperation<double>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> >;
struct IPropertyPage;
struct _FILE_SET_SPARSE_BUFFER;
struct GetTypeValueImpl<long,HINSTANCE__ *>;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageItem *>;
class wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79>;
class wistd::__function::__func<<lambda_af47d61301194c5d4839e4c10d405b79>,void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
struct _userSTGMEDIUM;
struct _userFLAG_STGMEDIUM;
struct wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&CloseHandle>;
class wil::details::<lambda_002d0cf30f23e5476abf381adf4b4634>;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,__int64,-1,void *>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumGUID>;
struct _PROPSHEETHEADERW_V2;
struct _KLDR_DATA_TABLE_ENTRY;
struct _CRYPT_PROVIDER_REGDEFUSAGE;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct Microsoft::WRL::ErrorHelper<16>;
class std::system_error;
struct Windows::Foundation::IReferenceArray<IInspectable *>;
struct IUnknownVtbl;
struct IEnumSTATDATA;
struct IObjectArray;
class AdHocInterceptorForwarders<IPersist,IPersistPropertyBag>;
struct _MINIDUMP_TOKEN_INFO_LIST;
struct wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindClose>;
struct OleDragDropTracing::StaticHandle;
class OleDragDropTracing;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
class stdext::bad_array_new_length;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> >;
struct _NDR64_POINTER_REPEAT_FLAGS;
struct _NDR64_REPEAT_FORMAT;
struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT;
struct _NDR64_POINTER_FORMAT;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size>;
struct IOleInPlaceUIWindow;
class CLimitedWritableStorage::RenameElement::__l2::<lambda_c44edb339ff6223e663ad4cffd1e49bf>;
struct Windows::Foundation::Collections::IVectorView<double>;
struct std::_Container_proxy;
struct tagEMRINVERTRGN;
struct _PUBLICKEYSTRUC;
struct SYMSRV_INDEX_INFOW;
struct _IMAGEHLP_STACK_FRAME;
struct _FILE_TRACKING_INFORMATION;
struct tagPOINTER_INFO;
struct _IMAGELISTDRAWPARAMS;
struct HWILFAILUREWATCH__;
class wil::details::unique_storage<wil::details::resource_policy<_CERT_CONTEXT const *,int (__cdecl*)(_CERT_CONTEXT const *),&CertFreeCertificateContext,wistd::integral_constant<unsigned __int64,0>,_CERT_CONTEXT const *,_CERT_CONTEXT const *,0,std::nullptr_t> >;
class Microsoft::WRL::Details::RuntimeClassBase;
class wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::paint_dc,HDC__ *,0,std::nullptr_t> >;
struct _FULL_PTR_XLAT_TABLES;
struct _QUERY_DIRECT_ACCESS_EXTENTS;
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
class CBrokeredClipDataObject::GetDataHere::__l24::<lambda_778d8f53ba4b57ebec80ff68c1cbb2d8>;
struct wil::details::shared_object<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
struct RETRIEVAL_POINTERS_BUFFER;
struct _STREAM_EXTENT_ENTRY;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > >;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct _RTL_FEATURE_USAGE_SUBSCRIPTION_DETAILS;
struct _SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE_ENTRY;
struct wistd::__compressed_pair_elem<unsigned int *,0,0>;
struct Windows::Foundation::IAsyncOperation_impl<__int64>;
struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *>;
struct wistd::__compressed_pair_elem<char *,0,0>;
struct _IMAGEHLP_SYMBOL_SRC;
class wil::details::unique_storage<wil::details::handle_null_only_resource_policy<int (__cdecl*)(void *),&CloseHandle> >;
struct std::_Iterator_base12;
struct _tlgDataDescInit<_tlgIndexSequence<4,0,1,3> >;
struct _PROCESS_SYSCALL_PROVIDER_INFORMATION;
class RegistryKey::ValueInformationClass<_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64>;
struct wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t>;
class LargeIntRegMultiply<unsigned int,__int64>;
class IntTraits<int>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IShareCompletedEventArgs *> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
class RegistryKey::KeyInformationClass<_KEY_BASIC_INFORMATION>;
struct _QUERY_BAD_RANGES_OUTPUT;
class RegistryKey::KeyInformationClass<_KEY_FULL_INFORMATION>;
class AdHocCallFrame<ISearchProtocol,<lambda_df48ef4dbe2e03a3af657bac67c3638a> >;
class RegistryKey::KeyInformationClass<_KEY_NAME_INFORMATION>;
struct _TOKEN_SECURITY_ATTRIBUTE_V1;
struct _Mtx_internal_imp_t;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>;
class wil::unique_call<long (__cdecl*)(void),&CoRevertToSelf,1>;
struct tagEMRPOLYLINE16;
struct AUDIT_CALLBACK_INFO;
struct tagPOINTF;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> >;
class MultiplicationHelper<unsigned long,unsigned __int64,8>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *>;
struct _WNF_EDP_TAGGED_APP_LAUNCHED_DATA;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFile *>;
struct DISPLAYCONFIG_PATH_SOURCE_INFO;
struct CMemString_PolicyLocalMem;
struct __midl_frag35_t;
struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0>;
class wil::details::<lambda_ee7b3ed02c85df2483c714df6999f530>;
class std::underflow_error;
struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION;
struct _s__ThrowInfo;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::IExtensionRegistration *>;
struct __vcrt_assert_va_start_is_not_reference<_UNICODE_STRING *>;
class ARI::AutoPtrAriHeap<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,IWeakReferenceSource>;
class CAutoHandle_HGLOBALPolicy;
struct Windows::Foundation::Collections::supports_cleanup<__int64>;
struct _MINIDUMP_MISC_INFO_4;
struct wil::details::midl_allocator;
struct _IO_STATUS_BLOCK;
struct _SYSTEM_POINTER_AUTH_INFORMATION;
struct _EDP_CRED_SVC_INFO_CXT;
struct Windows::Foundation::TimeSpan;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View>;
class std::reverse_iterator<std::_String_view_iterator<std::char_traits<char> > >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IRandomAccessStreamReference *>;
class Microsoft::WRL::Details::MakeAllocator<CEnumCategoriesOfCatalogClass>;
struct tagEMRTRANSPARENTBLT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> >;
struct _SE_SAFE_OPEN_PROMPT_RESULTS;
struct _SE_CODEINTEGRITY_ORIGIN_CLAIM;
class Microsoft::WRL::ComPtr<IDragDropContainerProxy>;
struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer;
struct _STORAGE_RESERVE_AREA_INFO;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0>;
struct IInternetSecurityMgrSite;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumSTATSTG> >;
struct tagOleMenuGroupWidths;
struct tagOLEMENUITEM;
struct tagOLEMENU;
struct _MIDL_STUB_DESC;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IClipboardTaskCompletion,Microsoft::WRL::FtmBase>;
struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *>;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>;
struct IMalloc;
struct IBindStatusCallbackEx;
struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragOperation> >;
class Microsoft::WRL::Wrappers::Semaphore;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComClassIterator> const >;
struct _NDR_CORRELATION_INFO;
struct _SCOPE_TABLE_ARM;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct _TAPE_GET_POSITION;
struct _COSERVERINFO;
struct IActivationFilter;
class Microsoft::WRL::ComPtr<CEnumCategoriesOfCatalogClass>;
struct _NT_TIB;
struct std::bidirectional_iterator_tag;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator;
struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct __vcrt_assert_va_start_is_not_reference<unsigned short const *>;
class std::recursive_timed_mutex;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *>;
class wil::details::<lambda_66b7a6286732428a0ea956db203c323e>;
struct IConversionClass;
class wistd::__compressed_pair<Microsoft::WRL::ComPtr<IUnknown> *,wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >;
class wistd::unique_ptr<Microsoft::WRL::ComPtr<IUnknown> [0],wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >;
struct Windows::Foundation::IReferenceArray<bool>;
struct Windows::Foundation::Collections::IMapView<__int64,double>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>;
struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT;
struct Windows::Foundation::Collections::IObservableVector_impl<float>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
class AppRegistration;
struct _SECTION_IMAGE_INFORMATION64;
class Microsoft::WRL::Details::DontUseNewUseMake;
struct std::allocator_traits<std::allocator<char16_t> >;
struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1>;
class wil::unique_call<void (__cdecl*)(void),&RoUninitialize,1>;
class CTSmartPtr<unsigned char,CTContainer_PolicyCoTaskMem>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::is_foundation_struct<__int64>;
struct Microsoft::WRL::Details::ImplementsBase;
struct wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter>::_CheckArrayPointerConversion<unsigned short *>;
struct wistd::__make_signed<short,1>;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFolder *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > const >;
struct _CERT_RDN;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
class wil::details::static_lazy<OleClipboardTracing>;
struct IMessageFilter;
struct _TP_WORK;
struct tagSAmdRegs;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >;
class CEnumCategoriesOfCatalogClass;
class Windows::Foundation::Collections::Internal::VectorChangedEventArgs;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
class wil::details::<lambda_8f209e3226c23f8bae7b997f49b3337d>;
struct OAUTIL;
class wistd::unique_ptr<_TOKEN_PRIMARY_GROUP,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct NEWHEADER;
struct _CERT_STORE_PROV_INFO;
class Microsoft::WRL::ComPtr<CEnumFmt>;
class AdditionMethod<unsigned int,unsigned __int64>;
struct OLEAUTOMATION_FUNCTIONS;
class wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,char *,0,std::nullptr_t> >;
class DISABLED_FEATURES;
struct DragDropLogging::StaticHandle;
struct Windows::Foundation::Collections::IVector_impl<short,1>;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_V2;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >;
class Microsoft::WRL::ComPtr<IMrtResourceManager>;
struct tagBITMAP;
struct IServerLocationInfo;
class RenderFormat::__l36::<lambda_a373bd52f4da993037bb233d5f4e11d7>;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageLibrary *>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *>;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >;
struct IStandardActivator;
class wil::com_ptr_t<IInterceptorBase,wil::err_returncode_policy>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1>;
struct _RTL_IMAGE_MITIGATION_HEAP_POLICY;
class Microsoft::WRL::ComPtr<OleClassInfoConversionClass>;
struct _GDI_TEB_BATCH;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *>;
class CBaseInterfaceDataMarshalingStream;
class MultiplicationHelper<unsigned short,unsigned short,2>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IBuffer *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IBuffer *>;
class MultiplicationMethod<long,long>;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct tagDISPATCHDATA;
struct wil::details::close_invoke_helper<1,int (__cdecl*)(_CERT_CONTEXT const *),&CertFreeCertificateContext,_CERT_CONTEXT const *>;
struct XWinRT::IntVersionTag;
struct BSTR_INTERNAL;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IBuffer *>;
class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
class std::numeric_limits<unsigned int>;
struct _LDR_ENUM_RESOURCE_ENTRY;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point>;
class SafeIntCompare<unsigned long,unsigned int>;
class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >;
class CALLFRAME_CACHE<NdrTypeInfo>;
struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
class MultiplicationHelper<unsigned long,unsigned int,3>;
class wil::details_abi::heap_vector_iterator<wil::details::EnabledStateManager::CachedUsageData>;
struct Windows::Foundation::Collections::is_pointer<Windows::Data::Text::TextSegment>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Data::Text::TextSegment>;
class MultiplicationHelper<__int64,unsigned __int64,15>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IRandomAccessStreamReference *>;
class std::unique_lock<std::mutex>;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::SetObjectRects::__l2::<lambda_4ca0b07237b8f95da55952ce2c79cfa1>;
struct Windows::Foundation::Collections::IIterator<Windows::Data::Text::TextSegment>;
struct METHOD_DESCRIPTOR;
struct SAFER_LEVEL_HANDLE__;
class wil::details::<lambda_ad907722de63cac077120380e02fd9bb>;
class std::numeric_limits<int>;
struct std::defer_lock_t;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Microsoft::WRL::Details::WeakReferenceImpl> >;
class IsFloat<unsigned int,0>;
class wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager>;
class wil::shutdown_aware_object<wil::details::FeatureStateManager>;
class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>::ContextSensitiveHelp::__l2::<lambda_524187a61b7f412a8ba870cd827a85c9>;
class wil::details::ScopeExitFn<<lambda_8727e92fd6266caa8ecc4c31050fae19> >;
struct wil::details::static_lazy<ComTrace>::Completer;
struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment>;
struct DISPLAYCONFIG_SOURCE_MODE;
struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO;
struct DISPLAYCONFIG_MODE_INFO;
struct Windows::Foundation::Collections::IVector<HSTRING__ *>;
struct _tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EtwEventWriteTransfer,_GUID const *,_GUID const *>;
struct wil::details::static_lazy<DragDropLogging>::Completer;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ICallingProcessInfo> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceHostBrokerProvider> const >;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::Save::__l2::<lambda_f62c6972a04c90594c2afef0651ebd10>;
class wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileDataObject> >;
struct _SAFER_IDENTIFICATION_HEADER;
struct _SAFER_URLZONE_IDENTIFICATION;
struct GetTypeValueImpl<long,unsigned short const *,unsigned short *>;
class CMIPIDHashTable;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
class wil::details::<lambda_5877c6a8812268070e769c7063060b2c>;
struct ComCatalogDiagnosticData;
class wil::com_ptr_t<IResourceReferenceHandler,wil::err_returncode_policy>;
class wil::details::static_lazy<ComTelemetry>;
class wistd::__compressed_pair<_GUID *,wistd::default_delete<_GUID [0]> >;
class wistd::unique_ptr<_GUID [0],wistd::default_delete<_GUID [0]> >;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int>;
class LargeIntRegMultiply<unsigned __int64,unsigned int>;
struct _SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE;
struct GetTypeValueImpl<long,long>;
struct _callframeinternal_MIDL_PROC_FORMAT_STRING;
struct Windows::Foundation::Collections::IPropertySet;
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
struct std::_Default_allocator_traits<std::allocator<char> >;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class CSurrogatedObjectList;
struct _TOKEN_MANDATORY_POLICY;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *>;
struct _PROCESS_DISK_COUNTERS;
union _ENERGY_STATE_DURATION;
struct _PROCESS_ENERGY_VALUES;
struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION_V2;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct WireContainerThat;
struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::VideoOrientation>;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,void *,0,std::nullptr_t> > >;
union _GDI_OBJECT::__MIDL_IAdviseSink_0002;
struct _GDI_OBJECT;
struct _REFS_QUERY_VOLUME_COMPRESSION_INFO_OUTPUT_BUFFER;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,ITypeLibRegistration,0,0>;
struct tagInitializeSpyNode;
struct wil::err_returncode_policy;
class wil::com_ptr_t<IOleClassInfo,wil::err_returncode_policy>;
class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy>;
class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy>;
class OleClassInfoConversionClass;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IInsertableCandidateIterator>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt> >;
struct _MONIKEREXTENT;
struct IXMLDOMElement;
struct IComProcessInfo;
class LargeIntRegMultiply<unsigned __int64,__int64>;
struct _MnkEqBuf;
class Microsoft::WRL::ComPtr<IStorage>;
struct IRpcChannelBufferVtbl;
struct IResourceContext;
struct _SECURITY_OBJECT_AI_PARAMS;
class LargeIntRegMultiply<__int64,__int64>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> >;
struct wil::details::close_invoke_helper<1,long (__cdecl*)(HKEY__ *),&RegCloseKey,HKEY__ *>;
struct tagWIN16RECT;
struct tagPLACEABLEMETAHEADER;
struct wil::DiagnosticsInfo;
struct __vc_attributes::atl::implements_categoryAttribute;
struct IShellLibrary;
struct _FILE_GET_EA_INFORMATION;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME;
class Microsoft::WRL::ComPtr<ReferencedRegistryKey>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>;
struct wil::details::static_lazy<ComTelemetryProvider>::Completer;
struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardProtectionServices> >;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FileInformation *>;
struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStorage> >;
class wil::details::<lambda_7177b7367338a42953a6b2a7b9cf512d>;
struct _FILE_REGION_INFO;
struct _FILE_REGION_OUTPUT;
struct tagDDEDISPATCHDATA;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _RTL_PROCESS_BACKTRACES;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::Collections::supports_cleanup<IInspectable *>;
struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>;
struct tagCBT_CREATEWNDA;
class wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> >;
class Quirks;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *>;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct Windows::Foundation::Collections::is_pointer<double>;
struct _REASON_CONTEXT;
struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>;
class MultiplicationHelper<unsigned int,unsigned long,3>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> const >;
class AdHocCallFrame<IPersistPropertyBag,<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4> >;
struct tagHW_PROFILE_INFOA;
struct USERPREFS;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct _SYSTEM_ENTROPY_TIMING_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> >;
struct __vcrt_va_list_is_reference<__crt_locale_pointers * const>;
class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CNode;
class Microsoft::WRL::ComPtr<IComClassCategoryInfo>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IObjectProvider> >;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,void *>;
class IntRegion<unsigned int,unsigned short>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFile *>;
struct _INSTALLDATA;
class CAutoHandle_Policy<HBITMAP__ *>;
class LargeIntRegMultiply<unsigned __int64,int>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRestrictedErrorInfo> >;
struct _SYSTEM_PREFETCH_STATS;
struct _wireSAFEARR_BSTR;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_VARIANT;
struct _wireSAFEARR_BRECORD;
struct _wireSAFEARR_HAVEIID;
struct _BYTE_SIZEDARR;
struct _SHORT_SIZEDARR;
struct _LONG_SIZEDARR;
struct _HYPER_SIZEDARR;
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
struct _wireSAFEARRAY_UNION;
struct _RTL_HEAP_WALK_ENTRY;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>;
class IsFloat<__int64,0>;
class CCoTaskMemPtr<unsigned short>;
struct _TOKEN_PRIMARY_GROUP;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>;
struct IPrivDragDrop;
class CAutoHandle_Policy<HFONT__ *>;
struct __NCRYPT_KEY_ACCESS_POLICY_BLOB;
struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFile *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDropTarget> >;
struct _ACCESS_DENIED_ACE;
class LargeIntRegMultiply<__int64,unsigned __int64>;
struct std::equal_to<void>;
class Microsoft::WRL::ComPtr<IPackagedComClassIdIterator>;
class ComClassIterator;
struct _XSAVE_VENDORS;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFolder *>;
struct __vc_attributes::iid_isAttribute;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragDropBroker> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>;
class wistd::__compressed_pair<wil::details::folder_watcher_state *,wistd::default_delete<wil::details::folder_watcher_state> >;
class wistd::unique_ptr<wil::details::folder_watcher_state,wistd::default_delete<wil::details::folder_watcher_state> >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
class SubtractionHelper<__int64,unsigned __int64,11>;
struct IRpcProxyBufferVtbl;
class wistd::unique_ptr<VerbList,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >;
struct _tlgDataDescInit<_tlgIndexSequence<0> >;
class CCoTaskMemPtr<unsigned short *>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumGUID>;
struct IOleDragDropBrokerHost;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IObjectProvider> const >;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>;
class wil::details::<lambda_c09a310d7f90d3d8c1b147c306561a28>;
class CActivatableClassIdHashTable;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct _UNICODE_PREFIX_TABLE_ENTRY;
class SafeIntCompare<unsigned int,unsigned long>;
class Microsoft::WRL::ComPtr<IStream>;
class CWrapperBase<IStream>;
class Microsoft::WRL::ComPtr<IAllowAstaToAstaDeadlockRisk>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct IDispatchVtbl;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
class CLimitedStreamBase;
struct _CLAIM_SECURITY_ATTRIBUTE_V1;
class CLimitedWritableStorage::Commit::__l2::<lambda_6d542ea311a46020d30b3ebc4539ced7>;
class MultiplicationMethod<unsigned int,unsigned long>;
class Microsoft::WRL::Details::MakeAllocator<InsertableCandidateIterator>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator> >;
struct _UNWIND_INFO;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider> >;
class wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy>;
struct Windows::Foundation::Collections::IVectorView<float>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IComProgIdIterator>;
struct _PROPSHEETPAGEA;
class CLimitedWritableStream::Clone::__l2::<lambda_90c58536661702964630d6bd2c4c001f>;
struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION;
class wil::details::<lambda_dc6c7cb493b28f6f1629b34c7299f344>;
class wil::details::<lambda_9b7d8b6887f59478af568096f31252cb>;
struct _TOKEN_GROUPS;
struct _NDR64_STRUCTURE_HEADER_FORMAT;
struct __midl_frag51_t;
struct __vc_attributes::atl::soap_namespaceAttribute;
struct __WilFeatureTraits_Feature_CDPAFSProdDomainUri;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float>;
class wil::com_ptr_t<IPackagedComClassCatalogInternal,wil::err_returncode_policy>;
struct Windows::Foundation::Collections::is_pointer<IInspectable *>;
struct IBindProtocol;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>;
struct Windows::Foundation::Collections::IIterable_impl<unsigned char>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAllowAstaToAstaDeadlockRisk> >;
struct Windows::Foundation::Collections::IVector<_GUID>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IPropertySet *>;
struct _FILE_NOTIFY_EXTENDED_INFORMATION;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IOleVerb>;
struct __WilFeatureTraits_Feature_DoDragDropOnContainerOS;
struct __WilFeatureTraits_Feature_ReadClipboardEvent;
struct _PEBS_DS_SAVE_AREA64;
struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>;
struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IInsertableCandidateIterator>;
struct Windows::Foundation::Collections::IVector_impl<_GUID,1>;
struct _NDR64_CONTEXT_HANDLE_FORMAT;
struct Windows::ApplicationModel::Background::IBackgroundTaskInstance;
class Microsoft::WRL::ComPtr<RegistryTypeLibRegistration>;
class wil::details::static_lazy<OleDragDropTracing>;
struct _TOKEN_ELEVATION;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,void *,0,std::nullptr_t> >;
struct VOLUME_BITMAP_BUFFER;
struct WilFailureReportInformation;
struct MOVE_FILE_DATA;
class CROTItem;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator> const >;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IRandomAccessStreamReference *,1>;
class wil::details::<lambda_b69b626372d1eeb16abfc1ff3dbc9587>;
struct __WilFeatureTraits_Feature_MarshalRestrictedErrorFromRpcss;
struct RundownInstrumentationData;
class Microsoft::WRL::ComPtr<TypeLibRegistrationReader>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>;
struct wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryInsertableCandidate> const >;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerbIterator> >;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,void *>;
class Microsoft::WRL::ComPtr<IClipboardBroker>;
class CLimitedWritableStream::SetSize::__l2::<lambda_d88a98539f99aa8d705874cde434eb96>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct IEnumGeneric;
struct _PARAM_STRUCT;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> >;
struct utl::random_access_iterator_tag;
struct utl::forward_iterator_tag;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
class DragDropLogging;
struct tagLOCALESIGNATURE;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits;
struct Windows::Foundation::Collections::IVectorView<short>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >;
struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
class wil::details::<lambda_09e63cec6544f3e41f5abdd3647f53b2>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>;
struct _SYSTEM_POLICY_INFORMATION;
struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
struct IComCatalogSCM;
class wil::unique_struct<wil::details::FeatureUsageDurationData,void (__cdecl*)(wil::details::FeatureUsageDurationData *) noexcept,&wil::details::FeatureUsageDurationData::Stop,std::nullptr_t,0>;
class CGdiCustodian;
class std::numeric_limits<bool>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;
struct Windows::Storage::Streams::IOutputStream;
struct MD_PARAM;
struct wistd::__compressed_pair_elem<void *,0,0>;
struct _RPC_BINDING_VECTOR;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Skip::__l2::<lambda_623afaff1ea6960797c30da1c8e48c6d>;
struct wistd::default_delete<unsigned short [0]>::_EnableIfConvertible<unsigned short>;
class std::numeric_limits<short>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IRandomAccessStream *,1>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,ITypeLibRegistration,Microsoft::WRL::FtmBase>;
class wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibrary *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>;
struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits;
struct Windows::Storage::BulkAccess::IStorageItemInformation;
struct Windows::Foundation::Collections::IIterable_impl<unsigned int>;
class wil::details::<lambda_7fcf7d166d242e924ce4e04610f961e3>;
struct _MIDL_STUBLESS_PROXY_INFO;
struct NdrTypeInfo;
struct _PHYSICAL_CHANNEL_RUN;
struct std::_Num_base;
struct wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter>::_CheckArrayPointerConversion<unsigned short *>;
struct wil::cert_context_t;
struct _SECURE_SPECULATION_CONTROL_INFORMATION;
class Microsoft::WRL::ComPtr<ITypeLibCatalogInternal>;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<char [0]> >;
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR;
class std::numeric_limits<double>;
struct std::ratio<1,1000000000>;
class Microsoft::WRL::ComPtr<IPackagedComProgIdIterator>;
struct Windows::Foundation::IReference<Windows::UI::Color>;
struct _LDR_SECTION_INFO;
struct _LDR_VERIFY_IMAGE_INFO;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IExtensionRegistration *>;
struct ICallingProcessInfo;
class wil::details::static_lazy<DragDropLogging>;
struct wistd::__compressed_pair_elem<VerbList *,0,0>;
struct wistd::unique_ptr<char [0],wistd::default_delete<char [0]> >::_CheckArrayPointerConversion<char *>;
struct wistd::__invoke_void_return_wrapper<void>;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<unsigned int [0]> >;
struct Windows::ApplicationModel::DataTransfer::IDataProviderDeferral;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
class wistd::__compressed_pair<unsigned int *,wistd::default_delete<unsigned int [0]> >;
class wistd::unique_ptr<unsigned int [0],wistd::default_delete<unsigned int [0]> >;
struct tagCBTACTIVATESTRUCT;
struct Windows::Foundation::IReference<bool>;
struct Microsoft::WRL::Details::CausalityNameHelper<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct wistd::unique_ptr<unsigned int [0],wistd::default_delete<unsigned int [0]> >::_CheckArrayPointerConversion<unsigned int *>;
class wistd::__compressed_pair<wil::details::event_watcher_state *,wistd::default_delete<wil::details::event_watcher_state> >;
struct _MESSAGE_RESOURCE_BLOCK;
class CFilteredRunningObjectTable;
class std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >;
struct wil::FeatureProperties;
struct Windows::Foundation::Rect;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IAsyncAction,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,wil_FeatureTestState *,0,std::nullptr_t> > >;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits;
struct wistd::__unique_ptr_deleter_sfinae<wil::process_heap_deleter>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IComClassIterator>;
struct IDisconnectSink;
union _RPC_ASYNC_NOTIFICATION_INFO;
struct _RPC_ASYNC_STATE;
class wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,wil_FeatureTestState *,0,std::nullptr_t> >;
struct std::ratio<1,10000000>;
struct std::ratio<1,1>;
struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *>;
struct Windows::ApplicationModel::DataTransfer::IDataProviderHandler;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> const >;
struct std::_Char_traits<char32_t,unsigned int>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>;
struct wistd::function<void __cdecl(void)>::__callable_imp<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >,0>;
struct Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *>;
class Microsoft::WRL::ComPtr<IComProgIdIterator>;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>;
struct wistd::unique_ptr<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> >::__nat;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::event_watcher_state> >;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *>;
struct std::filesystem::_File_time_clock;
struct std::ratio<3600,1>;
struct _s__RTTIClassHierarchyDescriptor;
class Windows::Storage::StorageLibraryChange;
struct __vc_attributes::objectAttribute;
class std::chrono::duration<double,std::ratio<3600,1> >;
struct Windows::Foundation::IReference<Windows::Foundation::Rect>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct _ACTIVATION_CONTEXT_STACK64;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> const >;
struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>;
struct _RTL_HANDLE_TABLE_ENTRY;
class wistd::unique_ptr<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct _NDR64_EXPR_OPERATOR;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct __vc_attributes::v1_enumAttribute;
struct std::ratio<60,1>;
class std::chrono::duration<double,std::ratio<1,1> >;
struct _LUID_AND_ATTRIBUTES;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IOleDataFormatIterator>;
struct wil::err_exception_policy;
struct _CERT_STORE_PROV_FIND_INFO;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int>;
class wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
struct Windows::System::IUserAuthenticationStatusChangeDeferral;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>;
struct tagEMRFILLRGN;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int>;
struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable_imp<<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276>,1>;
struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable<<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276> >;
struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable<<lambda_af47d61301194c5d4839e4c10d405b79> >;
struct _NDR64_ARRAY_ELEMENT_INFO;
struct wil::details::close_invoke_helper<1,void * (__cdecl*)(void *),&LocalFree,char *>;
struct Windows::Storage::IStorageLibraryChange;
struct __vcrt_va_list_is_reference<unsigned short const *>;
struct PrivMemDeleter;
class CPackagerMoniker;
struct std::ratio<1,1000000>;
struct HRAWINPUT__;
struct Windows::Foundation::IAsyncActionWithProgress<double>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView> >;
struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventHandler;
struct _TEB;
struct _tlgDataDescInit<_tlgIndexSequence<21,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20> >;
struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(void)>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView> const >;
struct _COVERAGE_MODULE_INFO;
class ComTrace;
struct Windows::Foundation::IReference<unsigned __int64>;
class stdext::exception;
struct wistd::__compressed_pair_elem<_TOKEN_MANDATORY_LABEL *,0,0>;
struct _tlgCharTraits<char16_t>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct _MUILANGLISTNODE;
struct METADC;
struct __vc_attributes::atl::soap_methodAttribute;
struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>;
struct Windows::Foundation::Collections::is_foundation_struct<double>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
struct Windows::Foundation::IAsyncOperation<__int64>;
struct KEY_PID_ARRAY;
struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>;
struct _tagDdeClassInfo;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float>;
struct _GDI_TEB_BATCH64;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *>;
struct _PROCESS_PRIORITY_CLASS_EX;
struct std::_Default_allocate_traits;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct tagBITMAPINFO;
struct IPropertyStore;
struct IComProcessInfo3;
struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *>;
struct tagCOPYDATASTRUCT;
struct IEnterpriseDropTarget;
struct Windows::Foundation::IAsyncOperation<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *>;
class wil::TraceLoggingProvider;
struct CO_MTA_USAGE_COOKIE__;
class IsInt<unsigned __int64>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoDataFormatIterator> const >;
struct std::_Container_base0;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > >;
struct _PRIVILEGE_SET;
struct RECTS;
struct WMFHEADER;
struct std::_Iterator_base0;
struct wistd::__compressed_pair_elem<_GUID *,0,0>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Point>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
struct _FILE_EA_INFORMATION;
struct Windows::ApplicationModel::Background::IBackgroundTaskCanceledEventHandler;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>;
struct std::_Leave_proxy_unbound;
struct Windows::Foundation::IReferenceArray<short>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<InsertableCandidateIterator> const >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > >;
class std::_String_view_iterator<std::char_traits<char> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64>;
struct tagI_RpcProxyCallbackInterface;
struct _CRYPT_PASSWORD_CREDENTIALSW;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct _TOKEN_CONTROL;
struct tagHIGHCONTRASTW;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::System::UserAgeConsentResult>;
struct _VIRTUAL_STORAGE_TYPE;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
struct _CHPEV2_CPUAREA_INFO;
class CEnumSTATDATA;
struct __vc_attributes::importidlAttribute;
class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>;
class IntRegion<unsigned short,unsigned short>;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W;
struct wistd::default_delete<char [0]>::_EnableIfConvertible<char>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Point>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>;
struct _VIDEOPARAMETERS;
struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>;
struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION;
struct Windows::Foundation::IReference<unsigned char>;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<unsigned short [0]> >;
struct _FILE_STORAGE_TIER_REGION;
class IntTraits<unsigned int>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>;
class wistd::unique_ptr<unsigned short [0],wistd::default_delete<unsigned short [0]> >;
struct GetTypeValueImpl<long,unsigned short *>;
class std::basic_string_view<unsigned short,std::char_traits<unsigned short> >;
struct PARAM_ATTRIBUTES;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult *>;
struct wistd::unique_ptr<unsigned short [0],wistd::default_delete<unsigned short [0]> >::_CheckArrayPointerConversion<unsigned short *>;
class MultiplicationHelper<unsigned long,unsigned long,3>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
class Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult;
struct _IMAGE_SYMBOL;
class ComTelemetryProvider;
struct IComThreadingInfo;
class IsFloat<unsigned long,0>;
class std::_String_view_iterator<std::char_traits<char16_t> >;
class std::reverse_iterator<std::_String_view_iterator<std::char_traits<char16_t> > >;
class Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IDataObject>;
struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits;
struct _MUILANGINFO;
struct Microsoft::WRL::Wrappers::HandleTraits::FileHandleTraits;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>;
union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005;
class IntRegion<long,long>;
class CGuidStr;
struct _cpinfoexA;
struct _tlgDataDescInit<_tlgIndexSequence<1,0> >;
class CDataAdviseCache;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
class Microsoft::WRL::Wrappers::HString;
struct _PROPSHEETHEADERA_V2;
struct Windows::Foundation::Collections::IVector<Windows::System::User *>;
struct _WOW64_LDT_ENTRY;
class std::_String_view_iterator<std::char_traits<char32_t> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRegistration> >;
struct _CMC_TAGGED_CERT_REQUEST;
class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >;
class wil::details::agile_query_policy;
struct __vc_attributes::displaybindAttribute;
class IntRegion<unsigned long,unsigned int>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >;
struct _IMAGE_POLICY_ENTRY;
struct _IMAGE_POLICY_METADATA;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *>;
class CArray<CPageHolder *,CPageHolder * &>;
struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibRegistration> >;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >;
struct Windows::Foundation::Collections::IVector_impl<double,1>;
struct _SYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION;
class CMutexSem2;
struct __WIL__WNF_STATE_NAME;
struct std::char_traits<char32_t>;
class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::AcquireWrite>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char>;
class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >;
class CEMfObject;
class std::basic_string<char,std::char_traits<char>,std::allocator<char> >;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
class Microsoft::WRL::Wrappers::RoInitializeWrapper;
struct wil::details::static_lazy<OleDragDropTracing>::Completer;
struct _PEB;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFile *>;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Rect>;
struct _CRYPT_MASK_GEN_ALGORITHM;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>;
struct FEATURE_LOGGED_TRAITS;
struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double>;
class wil::QueryFullProcessImageNameW::__l2::<lambda_e1bdf235c2021226f8c53f8fb7bf9230>;
class wil::GetFullPathNameW::__l2::<lambda_0c2afb377131ef1ab2244976d5fb45fc>;
class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t> > > >;
union __m64;
struct Windows::Foundation::Size;
struct _COMMPROP;
struct Windows::Foundation::IEventHandler<HSTRING__ *>;
struct std::allocator_traits<std::allocator<char> >;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::IVector<float>;
struct _RETRIEVAL_POINTER_BASE;
struct Windows::Foundation::Collections::is_foundation_struct<HSTRING__ *>;
struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY;
struct PARAM_DESCRIPTION;
struct __vc_attributes::bindableAttribute;
class CArray<CStatData>;
struct wistd::__compressed_pair_elem<wil::function_deleter<void * (__cdecl*)(void *),&LocalFree>,1,1>;
struct std::_String_constructor_concat_tag;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>;
struct std::input_iterator_tag;
class CArray<CFormatEtc>;
struct _FIXED;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _CMSG_RC4_AUX_INFO;
struct tagBIND_OPTS2;
struct __vc_attributes::licensedAttribute;
struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::supports_cleanup<float>;
class wil::details::<lambda_799dfdb4d0ddd17663577143d55dc686>;
class std::_String_iterator<std::_String_val<std::_Simple_types<unsigned short> > >;
struct __vc_attributes::transmit_asAttribute;
class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<unsigned short> > > >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IInsertableCandidate>;
struct _FILE_QUERY_SPARING_BUFFER;
class wil::details::<lambda_5272005b11df2c37c54721e20290035b>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct _PROCESS_CYCLE_TIME_INFORMATION;
class CMfObject;
struct Windows::Foundation::Collections::supports_cleanup<unsigned char>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>;
struct WilFailureSubscriptionInfo;
struct _Mbstatet;
struct tagInterfaceData;
struct _PEB_LDR_DATA;
class CClipboardBroker::CClipboardBrokerMTAHelper;
class Windows::Storage::FileProperties::BasicProperties;
struct Windows::Foundation::Collections::is_pointer<enum Windows::System::UserWatcherUpdateKind>;
struct _TP_POOL;
class Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList;
class CSyncSync;
struct IOlePackagerLinkNotify;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducedEventArgs *>;
struct _SHFILEINFOW;
struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducedEventArgs;
struct Windows::Foundation::Collections::is_foundation_struct<enum Windows::System::UserWatcherUpdateKind>;
struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable<<lambda_e1bdf235c2021226f8c53f8fb7bf9230> >;
class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::TryAcquireWrite>;
struct _tlgDataDescInit<_tlgIndexSequence<2,0,1> >;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IDataObject>;
struct _LEAP_SECOND_DATA;
class std::initializer_list<unsigned short>;
struct _CLIENT_ID64;
class wistd::__compressed_pair<_SYSTEM_PROCESS_INFORMATION *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct IRpcCall;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IDataObject>;
struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT;
struct Windows::Foundation::Collections::supports_cleanup<enum Windows::System::UserWatcherUpdateKind>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDropTarget> >;
class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::TryAcquireWrite>;
struct _STRING32;
struct tagRPC_CALL_ATTRIBUTES_V2_W;
class Microsoft::WRL::ComPtr<CEnumClassesOfCategories>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
class CStdClassFactory;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>;
class OleClassInfoDataFormatIterator;
class CEnumFormatEtcDataArray;
struct Windows::Foundation::Collections::supports_cleanup<unsigned int>;
struct _Real_widened<double,float>;
struct AsyncIPipeDouble;
struct _TEB64;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBroker>;
class CLimitedWritableStorage::OpenStorage::__l2::<lambda_e174a29c410f404b3b2cf06c7a80a00b>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClientSecurity> const >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,ITypeLibRegistration,Microsoft::WRL::FtmBase>;
struct IClientSecurity;
class Microsoft::WRL::Details::MakeAllocator<ClipboardDataObjectTask>;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>;
struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1>;
struct _MkInterfaceListEntry;
struct _MkInterfaceList;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct midluser_allocate_t;
struct Windows::Storage::IStorageFolder;
struct _FILE_MODE_INFORMATION;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,0,0>;
struct _PSP;
struct IInternetZoneManagerEx;
class CDropTargetAdapter;
class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IVectorChangedEventArgs>;
class CLimitedWritableStream::Revert::__l2::<lambda_1325d83fa6a9b5059b44fec492f19dcd>;
struct _PROPSHEETPAGEW;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float>;
struct Windows::Foundation::ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>;
struct MD_INTERFACE;
struct _TXFS_SAVEPOINT_INFORMATION;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IApplicationAssociationRegistration> >;
struct tagWPP_BINARY;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry>;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDragDropContainerProxy> >;
class Microsoft::WRL::Details::RuntimeClassBaseT<1>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct _APPINFO_STARTUPINFO;
class utl::numeric_limits<double>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>;
struct IUserContextProperties;
union _CLIENT_CALL_RETURN;
struct _TXFS_QUERY_RM_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObjectEx> const >;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >;
struct Windows::Foundation::Collections::is_foundation_struct<int>;
struct _CERT_ALT_NAME_INFO;
struct _CRL_DIST_POINT_NAME;
struct _CRL_DIST_POINT;
struct XWinRT::XPlex;
struct _tlgDataDescInit<_tlgIndexSequence<4,0,1,2,3> >;
struct _CHPEV2_PROCESS_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > const >;
struct CallerCanAccessClipboardData::__l5::AUDIT_CALLBACK_CONTEXT;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> >;
struct tagEMRMODIFYWORLDTRANSFORM;
struct _SHITEMID;
struct _ITEMIDLIST;
class std::_String_iterator<std::_String_val<std::_Simple_types<char32_t> > >;
struct tm;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>;
class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t> > > >;
struct _REFS_SMR_VOLUME_GC_PARAMETERS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClientSecurity> >;
struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *>;
class CLimitedWritableStream::Write::__l2::<lambda_901244bbe6ff11f30bcc324ded8f1e54>;
struct tagENHMETAHEADER;
class std::allocator<char32_t>;
class wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> >;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorChangedEventArgs,0,0>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION;
class CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem>;
class CDWORDHashTable;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IOleVerb>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>;
struct Windows::Foundation::IReference<float>;
struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>;
struct _ADMINISTRATOR_POWER_POLICY;
struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1>;
struct IComClassCategoryInfo;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
class wil::details::<lambda_76680e11d462fa50709ba31fa113f2df>;
struct _NETRESOURCEW;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceProvider> >;
struct SPatternEntry;
class CBmpLoader;
struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>;
struct CONFIRM_CONFLICT_ITEM;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1>;
struct __s_GUID;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
class CCliRotHintTable;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
struct Windows::Foundation::IUriRuntimeClass;
struct Windows::Foundation::Collections::supports_cleanup<int>;
struct Windows::ApplicationModel::DataTransfer::IDataPackage;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
struct IDropTarget;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoConversionClass> >;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal> const >;
struct _ais_MIDL_PROC_FORMAT_STRING;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IMap<_GUID,bool>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAsyncInfo> >;
struct _tlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,4,5> >;
class AdditionMethod<unsigned long,unsigned long>;
class Windows::ApplicationModel::Background::BackgroundTaskRegistration;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
class COleConditionVariable;
struct _FILE_COMPLETION_INFORMATION;
struct tagCATEGORYINFO;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>;
struct Windows::Foundation::IEventHandler<Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs *>;
class CClassObj;
class GetCastMethod<long,int>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::ApplicationModel::DataTransfer::IDataPackagePropertySet;
class std::out_of_range;
struct __vc_attributes::idAttribute;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerbIterator> const >;
class Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *>;
struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >;
struct __vc_attributes::optionalAttribute;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator>;
class TypeLibRegistrationReader;
class std::range_error;
class CReadOnlyStorage::OpenStorage::__l2::<lambda_25839262837d068401bf8c3397db2d8a>;
class IsInt<long>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IConversionClassIterator>;
struct _Cnd_internal_imp_t;
struct _complex;
class RunSyncOnMTAThread::__l2::<lambda_1f33e66c4d719b5f6d4f05584bc2ec2e>;
class std::error_category;
struct wil::TwoPhaseHStringConstructor;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct _CSV_QUERY_VOLUME_REDIRECT_STATE;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IPropertySet *>;
struct __vc_attributes::customAttribute;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IRestrictedErrorInfo> >;
class wil::details_abi::heap_vector<wil::details::EnabledStateManager::CachedUsageData>;
class RemoveClipboardDataObject::__l14::<lambda_acbbe6d18a978d7bf2cb06affbc8b61b>;
struct IRestrictedErrorInfo;
struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::folder_change_reader_state>,1,1>;
struct _FSCTL_QUERY_REGION_INFO_OUTPUT;
struct _TEB_ACTIVE_FRAME;
class MultiplicationMethod<unsigned long,unsigned long>;
struct __vc_attributes::helper_attributes::default_valueAttribute;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>;
class wil::details::<lambda_d7e7a7577a522a573f14fad6bfe08d23>;
struct std::hash<int>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> >;
class wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> >;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Clone::__l2::<lambda_56b5ba632d587fa357900841a044505e>;
struct _NDR64_EXPR_VAR;
struct __midl_frag194_t;
struct tagMETARECORD;
class CClipboardBroker::ValidateAndAcquireACImpersonationSource::__l8::<lambda_a4e555621f6ed4efaaeeaa7992cb2190>;
class Microsoft::WRL::ComPtr<OleClassInfoInsertableCandidate>;
struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
class CRWLock;
struct wistd::unique_ptr<void,wil::process_heap_deleter>::__nat;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >;
struct Windows::Storage::Streams::IRandomAccessStreamReference;
struct _PORT_VIEW;
class Microsoft::WRL::ComPtr<ITypeLibRegistration>;
struct $_s__CatchableTypeArray$_extraBytes_24;
struct _RTL_FEATURE_CONFIGURATION_UPDATE;
struct IImmersiveMonitor;
class wil::details::<lambda_4aba62e71581c6899d3a39f48f6710a6>;
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs;
struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal> >;
class CLock2;
struct Windows::Storage::Search::SortEntry;
struct Windows::ApplicationModel::DataTransfer::IDataProviderRequest;
struct _tlgWrapperBinary;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumFORMATETC> >;
struct _LUTF8_STRING;
struct wil::details::FeatureUsageDurationData;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::ApplicationModel::Background::IBackgroundTaskDeferral;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>;
struct SUUIDHashNode;
class wil::details::<lambda_f54394daa29a0c1145722625f4741bbf>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>;
struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Reset::__l2::<lambda_7a59a3cec997efd4251645394ee05088>;
struct _CLIENT_ID32;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *,1>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>;
class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper>;
class Windows::Storage::FileProperties::MusicProperties;
struct _CM_FLOPPY_DEVICE_DATA;
struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0>;
class wil::com_ptr_t<IComCatalogSCM,wil::err_returncode_policy>;
struct _tlgDataDescInit<_tlgIndexSequence<3,0,1,2> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *>;
struct _OBJECT_ATTRIBUTES32;
struct Windows::Foundation::DateTime;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> >;
struct _PROCESS_HANDLE_TABLE_ENTRY_INFO;
struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1>;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IRandomAccessStream *>;
class LargeIntRegMultiply<int,unsigned __int64>;
struct std::adopt_lock_t;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IClipboardBrokerInternal>;
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA;
struct Windows::Foundation::Collections::IVector<Windows::UI::WindowId>;
struct PACKAGEDEPENDENCY_CONTEXT__;
class Microsoft::WRL::Details::MakeAllocator<RegistryInsertableCandidate>;
class COleStaticLock;
struct _IR_TIMER_EXTRA_CREATE_PARAMETER;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<wil::details::SyncAsyncActionOp> const >;
struct Windows::UI::WindowId;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>;
struct _REPARSE_POINT_INFORMATION;
class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::Collections::IIterable<unsigned __int64>;
struct _SYSTEM_INTERRUPT_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >;
struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibraryChange *>;
class wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::IAsyncAction *>;
struct Windows::Foundation::IReferenceArray<HSTRING__ *>;
struct _FOCUS_EVENT_RECORD;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryTypeLibRegistration> const >;
class Microsoft::WRL::ComPtr<IServiceProvider>;
struct _XSAVE_AREA_HEADER;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >;
struct std::_Narrow_char_traits<char,int>;
struct IWrapperInfo;
class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference>;
struct Windows::Foundation::Collections::is_foundation_struct<short>;
struct _DISCDLGSTRUCTW;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService> >;
struct _BCRYPT_INTERFACE_VERSION;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *>;
struct wil::details::resource_policy<void *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>;
struct Windows::Foundation::IEventHandler<bool>;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IOperationCompletedEventArgs *>;
struct Windows::Foundation::IReference_impl<_GUID>;
struct __vcrt_va_list_is_reference<unsigned short const * const>;
struct _WOW64_FLOATING_SAVE_AREA;
struct _OSVERSIONINFOW;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct _RPC_BINDING_HANDLE_SECURITY_V1_A;
struct _REFS_DEALLOCATE_RANGES_RANGE;
class wil::condition_variable;
class CLimitedWritableStream::Commit::__l2::<lambda_0a18120dc7dcec8cb07768015f9b0617>;
struct _BCRYPT_ECCKEY_BLOB;
struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *>;
struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>;
struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>;
struct Windows::Foundation::Collections::is_foundation_struct<unsigned int>;
struct XSAVE_CPU_ERRATA;
struct tagIMMAPPTIMESTAMPS;
struct IClipboardBrokerInternal;
struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1>;
class Microsoft::WRL::ComPtr<IImpersonateClipboardOwner>;
struct wil::details::EnabledStateManager::CachedFeaturePropertyData;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction> const >;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IRandomAccessStreamReference *,1>;
class wil::com_ptr_t<IOleVerb,wil::err_returncode_policy>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> const >;
struct std::_Default_allocator_traits<std::allocator<unsigned short> >;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *>;
struct std::_Num_int_base;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,1,0>;
struct std::_Num_float_base;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationEnumerator> const >;
struct _TIME_FIELDS;
struct wil::read_lock_required;
struct IAsyncCallback;
class CWrapperBase<IStorage>::{dtor}::__l2::<lambda_1fabf05943988ec97a03c569b9148d41>;
class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CPair;
class SafeIntCompare<unsigned short,unsigned short>;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW;
class CEnumFmt;
struct CCompositeMonikerEnum::se;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,IInspectable *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
struct _JOBOBJECT_WAKE_INFORMATION;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,_TP_WAIT *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleClassInfo> const >;
struct __vc_attributes::atl::registration_scriptAttribute;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE;
struct wil::details::SystemThreadPoolMethods;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> const >;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&GlobalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
class Microsoft::WRL::Details::MakeAllocator<ReferencedRegistryKey>;
struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerb> const >;
struct CMemString_PolicyAutoMem;
class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::TryAcquireRead>;
class XWinRT::CElementTraitsBase<HSTRING__ *>;
struct wil::details::resource_policy<_CERT_CONTEXT const *,int (__cdecl*)(_CERT_CONTEXT const *),&CertFreeCertificateContext,wistd::integral_constant<unsigned __int64,0>,_CERT_CONTEXT const *,_CERT_CONTEXT const *,0,std::nullptr_t>;
struct wil::details_abi::SubscriptionList::Subscription;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct __vc_attributes::stringAttribute;
struct _EXTENDED_ENCRYPTED_DATA_INFO;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,_RTL_SRWLOCK *>;
struct IEnumOLEVERB;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IConversionClass>;
struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>;
class Windows::Storage::BulkAccess::FolderInformation;
class SafeIntException;
class CDragDropBroker;
class CEnumFmt10;
struct _PS_PKG_CLAIM;
struct IImmersiveApplicationWindow;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBroker,0,0>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FileInformation *>;
class wil::details::<lambda_f6f5a2d65a5be6901b153907bff1bc07>;
struct wistd::unique_ptr<wil::details::folder_change_reader_state,wistd::default_delete<wil::details::folder_change_reader_state> >::__nat;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>;
struct _JOBOBJECT_IO_PRIORITY_LIMIT;
struct __vcrt_assert_va_start_is_not_reference<unsigned short * *>;
struct _CRITICAL_PROCESS_EXCEPTION_DATA;
struct wil::ExpiredFeatureTraits<wil::details::FeatureTraitsBase>;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,ITypeLibRegistrationReader,Microsoft::WRL::FtmBase>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,_RTL_SRWLOCK *>;
struct Windows::Foundation::IActivatableClassRegistration;
class Microsoft::WRL::Details::MakeAllocator<CEnumFmt>;
struct EVENT_ENTRY;
class Microsoft::WRL::Details::MakeAllocator<CEnumFmt10>;
struct IPackagedComClassIdIterator;
struct _CRYPTNET_URL_CACHE_FLUSH_INFO;
struct _tlgDataDescInit<_tlgIndexSequence<9,0,1,2,3,4,5,6,7,8> >;
struct __vc_attributes::helper_attributes::multi_valueAttribute;
class Microsoft::WRL::ComPtr<IObjectProvider>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,void *>;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan>;
struct wil::details::close_invoke_helper<1,void * (__cdecl*)(void *),&LocalFree,unsigned short *>;
struct __vc_attributes::size_isAttribute;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >;
struct _CERT_LOGOTYPE_EXT_INFO;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IDataObject,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardTaskCompletion,0,0>;
struct wistd::__function::__maybe_derive_from_unary_function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>;
struct _CERT_LOGOTYPE_DATA;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Microsoft::WRL::FtmBase,1,1>;
struct GetTypeValueImpl<long,unsigned short const *,long>;
struct CClipDataObject::GetFormatEtcDataArray::__l12::SUPPORTED_EDP_ACCESS_DENIED_FORMATS_MAP;
struct _CERT_CREATE_CONTEXT_PARA;
struct PICTINFO;
class Common::AutoBaseHandle<HKEY__ *,&Common::AutoHandleCloseHKEY<HKEY__ *> >;
class BinaryAndHelper<long,int,0>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(unsigned short *),&SysFreeString,unsigned short *>;
class Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,_RTL_SRWLOCK *>;
struct wil::details::wnf_subscription_state_base;
struct wistd::__compressed_pair_elem<_TOKEN_GROUPS_AND_PRIVILEGES *,0,0>;
struct _RGNDATAHEADER;
struct _APP_MEMORY_INFORMATION;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IComProgIdIterator>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,_TP_TIMER *>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>;
struct _SECURITY_SEED_AND_LENGTH;
class Common::AutoHandle;
class CFunctionDiscoveryNotificationWrapper;
struct _BY_HANDLE_FILE_INFORMATION;
class Common::AutoBaseHandle<void *,&Common::CloseHandleHelper>;
struct GetTypeValueImpl<long,unsigned long,long>;
struct __vc_attributes::atl::db_paramAttribute;
class CAutoHandle_Policy<HRGN__ *>;
struct GetTypeValueImpl<long,unsigned short *,long>;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFolder *>;
class wil::details::<lambda_80d4cd0177896705b6a0b81f0b1f02f0>;
struct wil::details::ResultStatus;
struct _DROPFILES;
union _userHGLOBAL::__MIDL_IWinTypes_0003;
struct IWrappedProtocol;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >;
struct wil::details::static_lazy<wil::details::ApiTelemetryLogger>::Completer;
struct _DEVICE_DSM_DEFINITION;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFolder *>;
class EnumMap<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class CThreadCheck;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApplicationAssociationRegistration> >;
struct tagPOINTFX;
struct tagTTPOLYCURVE;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
struct wistd::__unique_ptr_deleter_sfinae<wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >;
struct _Real_widened<double,double>;
class wil::com_ptr_t<IComProgIdIterator,wil::err_returncode_policy>;
class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>;
struct _SC_ACTION;
class std::_Lockit;
struct _FILE_STORAGE_TIER;
struct wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDragDropBrokerHost> const >;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
class MAP_KEY_GUID;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&CoTaskMemFree,unsigned short *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
class wil::details::static_lazy<DragDropTelemetry>;
class AdHocCallFrame<IPersistPropertyBag,<lambda_4f665fe9629adf1b6321c2bb89cc94f4> >;
class Microsoft::WRL::ComPtr<IEnterpriseDropTarget>;
class CPrivDragDrop;
struct Windows::Storage::Streams::IBuffer;
class IsInt<int>;
struct _RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *> >;
struct _XSAVE_FEATURE;
struct Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct tagFULLPROPSPEC;
struct _DMA_CONFIGURATION_BYTE1;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFile *>;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
struct __vc_attributes::immediatebindAttribute;
struct _SECTION_IMAGE_INFORMATION;
struct _SECTION_INTERNAL_IMAGE_INFORMATION;
struct _CERT_QC_STATEMENT;
struct wil::details::shared_object<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject;
class SafeIntCompare<unsigned int,unsigned __int64>;
struct _HEAP_REGION_INFORMATION;
struct _HEAP_RANGE_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _HEAP_INFORMATION_ITEM;
class IntRegion<unsigned int,unsigned __int64>;
struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID>;
struct Windows::Foundation::Collections::IIterator_impl<enum Windows::System::UserWatcherUpdateKind,1>;
struct _GDI_TEB_BATCH32;
struct _TEB32;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
class wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_b791f461fdcdf6803f8b1ec4cfa018be>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> const >;
struct Windows::Storage::IStorageLibrary;
struct FRAME_RemoteInvoke;
struct _CRYPT_CONTEXTS;
class wil::details::<lambda_d19d7f1b8bdf8a926ead7d5f6c722f80>;
struct XWinRT::TXPOSITION;
struct tagRPC_CALL_ATTRIBUTES_V2_A;
class wil::manually_managed_shutdown_aware_object<wil::details::EnabledStateManager>;
class wil::shutdown_aware_object<wil::details::EnabledStateManager>;
struct _CRYPT_PKCS8_IMPORT_PARAMS;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>;
class wil::details_abi::ProcessLocalStorage<wil::details_abi::ProcessLocalData>;
struct __vc_attributes::propputrefAttribute;
class CallFrame;
struct _STARTUPINFOA;
struct _STARTUPINFOEXA;
struct tagLASTINPUTINFO;
struct INTERPRETER_OPT_FLAGS2;
struct NDR_PROC_HEADER_EXTS;
struct _ENCLAVE_INIT_INFO_VBS_BASIC;
struct ICallFrameEvents;
struct _QUOTA_LIMITS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> const >;
struct __vc_attributes::helper_attributes::repeatableAttribute;
class wil::ThreadErrorContext;
struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Search::SortEntry>;
struct _tlgDataDescInit<_tlgIndexSequence<23,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22> >;
struct POWER_ACTION_POLICY;
struct SYSTEM_POWER_LEVEL;
class Microsoft::WRL::Details::MakeAllocator<CDragOperation>;
struct _TIMER_SET_COALESCABLE_TIMER_INFO;
struct HMETAFILE__;
struct tagRemBRUSH;
class AdditionHelper<unsigned long,unsigned long,1>;
struct METAINFO;
struct tagCREATESTRUCTA;
struct tagLOGPALETTE;
struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::Search::SortEntry>;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
struct _NCRYPT_KEY_ATTEST_PADDING_INFO;
class CReadOnlyStorage;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView;
class MAP<XSLOCK,MAP_KEY_GUID,NdrTypeInfo *>::iterator;
class wistd::__function::__base<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
struct _CRYPT_KEY_PROV_PARAM;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>;
struct _TOKEN_DEFAULT_DACL;
struct _TOKEN_APPCONTAINER_INFORMATION;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>;
struct tagUPDATELAYEREDWINDOWINFO;
struct _CERT_REVOCATION_STATUS;
struct DESCRIPTOR;
class SafeInt<unsigned long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >;
struct _FLAGGED_WORD_BLOB;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDataObjectEx> >;
struct wistd::unique_ptr<_TOKEN_DEFAULT_DACL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;
class GetCastMethod<unsigned long,unsigned long>;
class CLimitedWritableStorage::SetStateBits::__l2::<lambda_239dc36ff89ef9343f5be4bc17d5a8ef>;
struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable;
struct _STREAM_LAYOUT_ENTRY;
class CWrapperBase<IEnumFORMATETC>::{dtor}::__l2::<lambda_1ff6a892073f82b990ab0d153c3cb3e5>;
struct _CERT_OR_CRL_BLOB;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Clone::__l2::<lambda_32dfadbef8f2a61c0d809fa552c11f81>;
struct _RTL_BALANCED_LINKS;
struct wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;
class CTrackingFileMoniker;
class CBrokeredClipDataObject::EnumFormatEtc::__l8::<lambda_99540f1d7c5160d07270185966a2dced>;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::AccessCache::AccessListEntry>;
struct _FS_BPIO_INPUT;
struct Windows::Foundation::Collections::is_pointer<__int64>;
class CReadOnlyStream::Clone::__l2::<lambda_baecf777eea7d88e008ba381e7d7d0c9>;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>;
class CLimitedStreamBase::Seek::__l2::<lambda_b2e3b810243455f1068e53fb5cb0f92b>;
struct Windows::Foundation::Collections::supports_cleanup<double>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>;
struct _SERVERSILO_BASIC_INFORMATION;
struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
struct Windows::Foundation::Collections::IIterator_impl<float,1>;
struct tagEMRSELECTPALETTE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> const >;
struct wil::details::close_invoke_helper<1,void * (__cdecl*)(void *),&LocalFree,void *>;
struct _COUNTER_READING;
class wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_8db0ce862824541f40dfb767113f1e28>;
class wistd::__function::__func<<lambda_8db0ce862824541f40dfb767113f1e28>,bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
struct IHttpSecurity;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >;
struct __vc_attributes::nonextensibleAttribute;
struct __vc_attributes::max_isAttribute;
struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Rect>;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
struct IEncodingFilterFactory;
struct __vc_attributes::library_blockAttribute;
struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2;
struct __vc_attributes::atl::synchronizeAttribute;
class CoInitializeIfNecessaryRAII;
class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator>;
struct wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>,wil::process_heap_deleter>::__nat;
struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID>;
class wil::details::<lambda_1ebcff27000e5705e9c69ccc51294205>;
class wistd::__compressed_pair<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *,wil::process_heap_deleter>;
class wil::details::<lambda_04ef605d2e5b33bd13b080eb8696f49e>;
struct _PS_SYSTEM_DLL_INIT_BLOCK;
struct Windows::Storage::IStorageFile;
struct _DSSSEED;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IEnumGUID,0,0>;
class ComTrace::LogTokenInfoImp::__l2::<lambda_ffa983ffbf68526ea3a3e363083aba95>;
struct Windows::Foundation::Collections::is_pointer<Windows::UI::WindowId>;
struct _PS_CREATE_INFO;
struct _PROCESS_POWER_THROTTLING_STATE;
struct Windows::Foundation::Collections::supports_cleanup<Windows::UI::WindowId>;
struct ITypeLibRegistrationReader;
struct _MENU_EVENT_RECORD;
class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::AcquireRead>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > >;
class Windows::ApplicationModel::DataTransfer::DataPackage;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *>;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::DataTransfer::DataPackage *,IInspectable *>;
struct wistd::__compressed_pair_elem<wistd::default_delete<_GUID [0]>,1,1>;
struct _SE_PACKAGE_CAPABILITY_INFO;
class MultiplicationMethod<unsigned long,unsigned __int64>;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>,IInspectable *>;
struct _RTL_TRACE_BLOCK;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<_GUID [0]> >;
class wil::details::EnabledStateManager::EnsureSubscribedToFeatureConfigurationChangesImpl::__l5::<lambda_fee8cea507d2413a58be13acfb66740a>;
struct _CSV_QUERY_MDS_PATH;
struct Windows::Foundation::IReferenceArray_impl<int>;
struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>;
struct _CERT_CRL_CONTEXT_PAIR;
struct _CERT_POLICY_MAPPINGS_INFO;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct wistd::unique_ptr<_GUID [0],wistd::default_delete<_GUID [0]> >::_CheckArrayPointerConversion<_GUID *>;
class GetCastMethod<unsigned long,unsigned int>;
struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>;
struct IActivationPropertiesOut;
struct DVTDINFO;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2;
class ImpersonationStateChecker;
class Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs;
struct _ICONINFO;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IShareCompletedEventArgs *>;
struct _COMPATIBILITY_CONTEXT_ELEMENT;
struct _SYSTEM_THREAD_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
struct Windows::Foundation::IReferenceArray<__int64>;
struct Windows::ApplicationModel::DataTransfer::IShareCompletedEventArgs;
class CTCoAllocPolicy;
struct Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0>::permission;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>;
struct _IMAGE_DELAYLOAD_DESCRIPTOR;
union _RATE_QUOTA_LIMIT;
struct Windows::ApplicationModel::DataTransfer::IShareProvider;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
struct _RemotableHandle;
struct Windows::Foundation::IReference_impl<double>;
struct Windows::ApplicationModel::DataTransfer::IShareTargetInfo;
struct _IMAGEINFO;
struct _QUOTA_LIMITS_EX;
struct _IMAGELIST;
class exception;
struct Windows::Foundation::Collections::Internal::NoVersionTag;
struct _RTL_VERIFIER_HEAP_TABLE;
struct tagTVITEMEXW;
struct _FILE_PIPE_LOCAL_INFORMATION;
struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>;
struct _NETRESOURCEA;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX;
struct _THREAD_BASIC_INFORMATION;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<bool> *>;
class Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem;
struct _FILE_BOTH_DIR_INFORMATION;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Reset::__l2::<lambda_442dbdd4e627d94aee8ed7535ac6295a>;
struct _SYSTEM_SECURITY_MODEL_INFORMATION;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *> >;
struct _SYSTEM_ISOLATED_USER_MODE_INFORMATION;
class CStabilize;
class CSafeRefCount;
struct _BOOT_ENTROPY_SOURCE_NT_RESULT;
struct Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::permission;
struct localeinfo_struct;
struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX;
struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>;
struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>;
struct _SYSTEM_ALARM_OBJECT_ACE;
class CLimitedWritableStorage::EnumElements::__l2::<lambda_447c46b66cbb21333d1664f5793f81f3>;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int>;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult *> >;
struct _TP_TASK;
struct _DELAYLOAD_PROC_DESCRIPTOR;
struct _DELAYLOAD_INFO;
struct Windows::Foundation::IReference_impl<float>;
struct _TP_DIRECT;
struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan>;
struct Windows::Foundation::Collections::Internal::detail::BaseHashValidator<HSTRING__ *>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult *> >;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect>;
struct Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::CloseAccessor::__l2::<lambda_202ebde2c4736aa82d78f43a76d480cf>;
struct Windows::Foundation::IReferenceArray<float>;
struct _IMAGE_THUNK_DATA64;
struct _MEMORY_PARTITION_CONFIGURATION_INFORMATION;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryChangedEventArgs *>;
struct tagLOGBRUSH32;
struct tagEMRCREATEBRUSHINDIRECT;
struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryChangedEventArgs *> >;
struct UDATE;
struct Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits;
struct _JOBOBJECT_MEMORY_USAGE_INFORMATION;
struct Windows::ApplicationModel::DataTransfer::IClipboardHistoryChangedEventArgs;
struct Windows::Foundation::IReferenceArray<unsigned char>;
struct _IMAGE_BOUND_FORWARDER_REF;
struct ICheckCalledServer;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<bool> *>;
struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct _cpinfo;
struct Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::permission;
struct IWeakReferenceSource;
struct val_context;
struct _CERT_POLICY95_QUALIFIER1;
struct IImageList;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >;
struct Windows::Foundation::IReference<int>;
struct _STORAGE_RESERVE_AREA_DEFINITION;
struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
class RunSyncOnMTAThread::__l2::<lambda_38ef1b70e7c7bbb6bcbf325f13bce3ad>;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
struct _SYSTEM_HANDLE_INFORMATION;
class CClipDataObject::CacheDataPointer::__l54::<lambda_27a1cab33e266522ee12881589f1a48d>;
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
struct _RESOLVED_USERNAME_INFO;
struct _RESOLVED_USERNAME_LIST;
struct _CONSOLE_FONT_INFO;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct ITaskAdvise;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IRandomAccessStream *>;
struct _ALPC_DATA_VIEW_ATTR;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>;
struct _SYSTEM_BOOT_LOGO_INFORMATION;
class wil::details::<lambda_03b8815c4721609e5712acf28470b934>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IRandomAccessStream *>;
struct _EFI_DRIVER_ENTRY;
struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64>;
struct _MANAGE_HOT_PATCH_APPLY_IMAGE_PATCH;
struct _EFI_DRIVER_ENTRY_LIST;
class XWinRT::CDefaultElementTraits<HSTRING__ *>;
struct IAsyncRpcChannelBuffer;
struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IRandomAccessStream *>;
struct _CRYPT_PROVIDER_REF;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan>;
struct tagPOINTER_TOUCH_INFO;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct Windows::Foundation::IReference<_GUID>;
struct IZoneIdentifier;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOSTaskCompletion> >;
struct _RPC_CLIENT_INTERFACE;
struct _CACHE_DESCRIPTOR;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IRandomAccessStream *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>;
struct _REARRANGE_FILE_DATA32;
struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IRandomAccessStream *>;
struct _SHCREATEPROCESSINFOW;
struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IRandomAccessStreamReference *>;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
struct XWinRT::StorageTempTraits<IInspectable *,IInspectable *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >;
struct tagDATAELEMENT;
struct XWinRT::StorageTempTraits<IInspectable *,IInspectable *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >::type;
struct tagOBJREFDATA;
struct _PO_WAKE_SOURCE_INFO;
struct XWinRT::SerializingLockPolicy;
struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int>;
struct tagWIN16BITMAP;
struct _tagpropertykey;
struct tagEXTLOGFONTW;
struct tagEMREXTCREATEFONTINDIRECTW;
struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>;
struct XWinRT::StringEquals;
struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>;
struct Windows::Foundation::IReferenceArray<int>;
struct XWinRT::StringHash;
struct _RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY;
struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *> >;
struct wistd::__libcpp_is_integral<char32_t>;
struct IFunctionInstance;
struct wistd::__libcpp_is_integral<unsigned int>;
class Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>;
struct IXMLHttpRequest;
struct _SD_CHANGE_MACHINE_SID_OUTPUT;
struct tagEMRTEXT;
struct XWinRT::StringLifetimeTraits;
struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *> >;
struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>;
struct _TOKEN_DEVICE_CLAIMS;
struct IWinInetCacheHints;
class XWinRT::StaReentrancyLock;
struct _CM_ROM_BLOCK;
struct _SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION;
struct Windows::Foundation::IAsyncOperation_impl<unsigned int>;
class XWinRT::detail::AtomicUpdater<0>;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
class XWinRT::detail::StorageReference<HSTRING__ *,HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >;
struct _SYSTEM_PREFETCH_OPTIONS;
struct _KEY_BASIC_INFORMATION;
class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::TryAcquireWrite>;
struct _IMAGE_THUNK_DATA32;
struct tagEMRSETTEXTCOLOR;
struct IShellItem2;
struct _PROCESS_ASSIGN_CPU_PARTITION_INFO;
struct Windows::Foundation::IAsyncActionWithProgress<unsigned int>;
struct _PROCESS_FAULT_INFORMATION;
struct _QUERY_CACHED_RUNS_RUN;
struct tagEMRPOLYDRAW;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
struct XWinRT::detail::TryAcquireWrite;
struct _PATCH_MAIN_CALLOUT_PARAMS;
struct XWinRT::detail::ReentrancyGuard<0>;
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002;
struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs *>;
struct Windows::Foundation::IReferenceArray<unsigned __int64>;
struct IClassClassicInfo3;
class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::TryAcquireRead>;
class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
struct _REPAIR_COPIES_OUTPUT;
struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;
class Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer;
struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>;
struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer *>;
struct tagCUSTDATA;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducedEventArgs *> >;
struct _KLDR_DATA_TABLE_ENTRY64;
struct IProcessInitControl;
class wil::com_ptr_t<ITypeInfo,wil::err_returncode_policy>;
struct XWinRT::detail::AcquireWrite;
struct _COMPONENT_FILTER;
struct XWinRT::detail::AcquireRead;
struct tagPOINTER_DEVICE_CURSOR_INFO;
struct Windows::Foundation::IPropertyValue;
class XWinRT::detail::AbiReference<HSTRING__ *,HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >;
class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::AcquireRead>;
struct _SE_AUDIT_INFO;
struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardOperationAppInfo;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>;
struct _BCRYPT_ECC_CURVE_NAMES;
struct _CRYPT_TIME_STAMP_REQUEST_INFO;
struct CONFLICT_ITEM_METADATA;
class CBrokeredClipDataObject::SetData::__l23::<lambda_eb30775d835ce1aa7514baf3cb9520bf>;
class CLimitedWritableStorage::MoveElementTo::__l11::<lambda_f3ee3880bbfa881d18ec7e87344dd5a6>;
class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::AcquireWrite>;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _THREAD_TLS_INFORMATION;
struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer *>,IInspectable *>;
struct tagRECT16;
struct tagEMRSETDIBITSTODEVICE;
struct _CLILIST;
struct wistd::enable_if<1,void *>;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>;
struct _HOSTNAMES;
struct _FILE_NAME_INFORMATION;
struct XWinRT::detail::TryAcquireRead;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::AcquireRead>;
struct _MM_ETW_PAGE_INFO_EX;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_POSITION_INFORMATION;
struct _FILE_ALL_INFORMATION;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>;
struct wistd::__lazy_or_impl<0>;
struct _MM_ETW_WORKING_SET_PFN_RUNDOWN;
class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::AcquireWrite>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _NT_WRITE_FLAGS>;
struct _PORT_DATA_INFORMATION;
struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Next::__l2::<lambda_5c690cab17f385c97bf7142c1739781b>;
struct _RTL_FEATURE_CONFIGURATION;
struct XWinRT::detail::ReentrancyGuard<1>;
struct IDataObjectEx;
struct _CHAR_INFO;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >;
union _TIMELINE_BITMAP;
struct _PROCESS_ENERGY_VALUES_EXTENSION;
struct _PROCESS_EXTENDED_ENERGY_VALUES;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::ReactivateAndUndo::__l2::<lambda_8cabb7dbc03479911dce050d042462ba>;
class XWinRT::detail::PresentationReference<HSTRING__ *,HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >;
struct IOleCache2;
class CRefExportCount;
struct _ImageArchitectureHeader;
class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::TryAcquireRead>;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::ShutDown::__l2::<lambda_df48ef4dbe2e03a3af657bac67c3638a>;
struct wil_details_RecordCachedUsage::__l2::Change;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&PrivMemFree,unsigned short *>;
struct _IMAGE_TLS_DIRECTORY32;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>;
class CRefStabilize;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&MIDL_user_free,unsigned short *>;
struct _LDR_FAILURE_DATA;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>;
struct AsyncIPipeByte;
struct _NLSTABLEINFO;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>;
struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT;
struct _IMAGE_VXD_HEADER;
class wil::details::weak_query_policy;
class DragDropLogging::Instance::__l2::<lambda_de72991bb9618b65cb2927d0cc7a4ae8>;
struct _GS_HANDLER_DATA;
class wil::details::<lambda_cd2002921047d4d26e2a55727e023aae>;
struct wil_FeatureTestState;
struct tagACTCTXW;
class XWinRT::CDefaultHashTraits<HSTRING__ *>;
struct XWinRT::InterfaceLifetimeTraits;
class XWinRT::CDefaultCompareTraits<HSTRING__ *>;
struct _HIBERFILE_BUCKET;
struct _FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT;
class wil::details::<lambda_161ef7638cd2cc94aeb4fe05f7a304b3>;
struct FEATURE_ERROR;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
struct _STREAMS_QUERY_ID_OUTPUT_BUFFER;
struct __WIL__WNF_TYPE_ID;
union _RTL_ELEVATION_FLAGS;
struct _wil_details_UsageSubscriptionData;
struct _OFLONGSTRUCTA;
struct _OFLONGSTRUCTW;
class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >;
struct wistd::less<void>;
struct FEATURE_STATE_CHANGE_SUBSCRIPTION__;
struct wistd::__struct_double;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
struct wistd::__libcpp_is_floating_point<float>;
class CPictioFileStream;
struct _PROCESS_UPTIME_INFORMATION;
class CGenObject;
class CLimitedWritableStorage::DestroyElement::__l2::<lambda_7d1fe11c787a4af78d8dd42692fd1f09>;
struct wistd::__type_list<wistd::__align_type<unsigned char>,wistd::__type_list<wistd::__align_type<unsigned short>,wistd::__type_list<wistd::__align_type<unsigned int>,wistd::__type_list<wistd::__align_type<unsigned long>,wistd::__type_list<wistd::__align_type<unsigned __int64>,wistd::__type_list<wistd::__align_type<double>,wistd::__type_list<wistd::__align_type<long double>,wistd::__type_list<wistd::__align_type<wistd::__struct_double>,wistd::__type_list<wistd::__align_type<wistd::__struct_double4>,wistd::__type_list<wistd::__align_type<int *>,wistd::__nat> > > > > > > > > >;
struct wil_details_RecordUsageResult;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
class wil::details::<lambda_3a34d3073f23e15fe303eff655bcc4f6>;
struct _MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION;
class CContainer_PolicySysFree;
struct wil_details_FeatureDescriptor;
struct wistd::__type_list<unsigned short,wistd::__type_list<unsigned int,wistd::__type_list<unsigned long,wistd::__type_list<unsigned __int64,wistd::__nat> > > >;
union wil_details_FeatureStateCache;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
struct wistd::__make_signed<unsigned long,1>;
struct wistd::__type_list<short,wistd::__type_list<int,wistd::__type_list<long,wistd::__type_list<__int64,wistd::__nat> > > >;
struct wil_FeatureState;
struct __vcrt_va_list_is_reference<_UNICODE_STRING *>;
struct wistd::__libcpp_is_function_imp::__dummy_type;
struct __vcrt_va_list_is_reference<unsigned short * *>;
struct wistd::__libcpp_is_integral<bool>;
struct wil_details_FeatureTestState;
struct wistd::__libcpp_is_integral<wchar_t>;
struct _PROCESS_COMMIT_RELEASE_INFORMATION;
struct __WIL_RTL_SRWLOCK;
class CTContainer_PolicyCoTaskMem;
class CTContainer_PolicyLocalMem;
struct wistd::__libcpp_is_integral<int>;
class CTContainer_PolicyHeapMem;
class wil::details::StagingFailureInformation;
struct _RTL_GENERIC_TABLE;
class CAutoHandle_Policy<void *>;
struct wil::details_abi::buffer_range;
class CLimitedWritableStream::CopyTo::__l11::<lambda_85adfdbc59dc2fecc6c73766ac5726d0>;
struct wistd::__make_unsigned<bool,1>;
class CAutoHandle_Policy<HINSTANCE__ *>;
struct MarshallingChannel;
class CAutoHandle_Policy<HKEY__ *>;
class CAutoHandle_Policy<HACCEL__ *>;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W;
class CAutoHandle_Policy<HWND__ *>;
struct LEGACY_FRAME;
class CAutoHandle_Policy<HDESK__ *>;
class CAutoHandle_Policy<HICON__ *>;
struct _IMAGE_FUNCTION_ENTRY;
class CMarshalImplPStream;
class CBaseMoniker;
struct tagABORTPATH;
struct __vc_attributes::restrictedAttribute;
class CAutoHandle_Policy<HWINSTA__ *>;
struct _FILE_NAMES_INFORMATION;
class wil::details_abi::heap_vector_iterator<wil_details_FeatureUsageSRUM>;
class CAutoHandle_Policy<HMENU__ *>;
struct HTOUCHINPUT__;
struct wil_details_FeatureUsageSRUM;
struct DISPATCH_CLIENT_FRAME;
class CTSmartPtr<unsigned short,CTContainer_PolicyCoTaskMem>;
struct _FILE_FS_METADATA_SIZE_INFORMATION;
struct _FILE_PIPE_REMOTE_INFORMATION;
class CAutoHandle_Policy<HBRUSH__ *>;
class wil::details::pointer_range<wil_details_FeatureUsageSRUM *>;
class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerMTAHelper>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBrokerInternal,0,0>;
class CTSmartObj<unsigned short *,CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem> >;
struct _FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX;
class CItemMoniker;
struct tagINPUT_TRANSFORM;
struct wil::StagingControl;
struct wil::StagingControlVariant;
class Interceptor::TryCreateFromTypeInfo::__l2::<lambda_99f6cd62eb16379982dc9ba875c44251>;
class wil::details::lambda_call<<lambda_99f6cd62eb16379982dc9ba875c44251> >;
struct _SD_GLOBAL_CHANGE_OUTPUT;
class CAutoHandle_Policy<HPEN__ *>;
class wistd::__function::__func<<lambda_0c2afb377131ef1ab2244976d5fb45fc>,long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,void *>;
struct _MULTI_TIME;
class CTSmartObj<unsigned short * *,CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem> >;
struct _ENCLAVE_CREATE_INFO_VBS;
struct _DSA;
struct _DPA;
struct wil::details_abi::UsageIndexProperty;
struct KNOWNFOLDER_DEFINITION;
class CAutoHandle_Policy<HDC__ *>;
struct std::_Invoker_pmf_pointer;
struct __vc_attributes::nonbrowsableAttribute;
class CRPCTimeout;
struct std::less<void>;
class CUnkownOnlyWrapper;
struct _MEMORY_IMAGE_INFORMATION;
class CWrapperBase<IUnknown>;
struct IShellItem;
struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable_imp<<lambda_b791f461fdcdf6803f8b1ec4cfa018be>,1>;
class CDragDataObject;
class wil::details::<lambda_7423537f294e7787dca37fdc0cb8c286>;
struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable<<lambda_b791f461fdcdf6803f8b1ec4cfa018be> >;
struct _CM_SERIAL_DEVICE_DATA;
class CCoTaskMemPtr<unsigned char>;
struct _EVENTSFORLOGFILE;
class CExtentList;
class CFileMoniker;
struct _AUTHENTICATION_INFO;
struct IShellLinkW;
struct _PO_SPR_ACTIVE_SESSION_DATA;
struct _SYSTEM_POOL_LIMIT_INFO;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable_imp<<lambda_8db0ce862824541f40dfb767113f1e28>,1>;
struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable<<lambda_8db0ce862824541f40dfb767113f1e28> >;
struct wil::details_abi::RawUsageIndex::Header;
struct tagOLEVERB;
struct wistd::__function::__maybe_derive_from_unary_function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
class wil::com_ptr_t<IOleVerbIterator,wil::err_returncode_policy>;
struct wistd::__function::__maybe_derive_from_binary_function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
struct _KERNEL_CET_CONTEXT;
struct tagMDICREATESTRUCTA;
struct _OSVERSIONINFOEX3A;
struct wil::details_abi::SerializedFailure;
class wil::details::pointer_range<__WIL__WNF_STATE_NAME const *>;
struct _RTL_IMAGE_MITIGATION_USER_POINTER_AUTH_POLICY;
struct __vc_attributes::helpstringcontextAttribute;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> const >;
struct IOleVerb;
class wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0>;
class wil::details_abi::UsageIndexBuffer<unsigned int,1>;
struct wil::details_abi::UsageIndexes;
struct _CRYPT_TIMESTAMP_PARA;
class ITrackingMoniker;
struct IElementBehavior;
class wistd::function<bool __cdecl(enum wil_details_ServiceReportingKind,unsigned int,unsigned int)>;
struct _RTL_BARRIER;
struct _UMS_CREATE_THREAD_ATTRIBUTES;
struct __vc_attributes::rangeAttribute;
class CAntiMoniker;
struct _ENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_INFLAGS>;
struct _RTL_UNLOAD_EVENT_TRACE64;
class wistd::function<bool __cdecl(unsigned int,void *,unsigned __int64,unsigned int)>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStream> >;
struct __vc_attributes::helpcontextAttribute;
class RegistryInsertableCandidate;
class CMapStringToPtr;
struct _devicemodeW;
class CLimitedWritableStream;
class CLimitedStreamBase::UnlockRegion::__l2::<lambda_f9b686faf07558546d2e0b9f147c5283>;
class ReferencedRegistryKey;
class wil::details_abi::heap_vector_iterator<wil::details_abi::SubscriptionList::Subscription>;
struct _SYSTEM_VERIFIER_ISSUE;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct IAsyncInfo;
struct _SERVICE_NOTIFY_2W;
struct _FILE_FULL_DIR_INFORMATION;
class CBindCtx;
union _RTL_TICK_LOCK;
class CBindCtx::CObjList;
struct _CALL_FRAME;
class wil::details_abi::FeatureStateData;
struct _MEMORY_WORKING_SET_BLOCK;
struct _CMSG_SIGNER_ENCODE_INFO;
struct IMrtResourceManager;
struct IForegroundTransfer;
struct _ENCLAVE_INIT_INFO_SGX;
struct _RTL_HASH_TABLE;
struct IComProgIdIterator;
class CWrapperBase<IStorage>;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
class CRotHintTable;
struct _RTL_RETPOLINE_BINARY_INFO;
class OleClassInfoInsertableCandidate;
class RegistryConversionClass;
struct wistd::default_delete<wil::details::folder_change_reader_state>;
struct _SERVICE_PRESHUTDOWN_INFO;
class CTmpMkEqBuf;
class Microsoft::WRL::ComPtr<ComClassIterator>;
struct _SERVICE_STATUS;
struct _ENUM_SERVICE_STATUSA;
struct IEnumUnknown;
struct __vc_attributes::atl::support_error_infoAttribute;
class wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>;
class MapEnumToSQMData<enum RpcssSQMFlags>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> const >;
struct _FILE_BASIC_INFO;
class wil::details::<lambda_915176d23a9d56f8e3fb39ade8c83749>;
struct std::plus<void>;
struct _CSV_IS_OWNED_BY_CSVFS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComClassIterator> >;
struct _CERT_POLICY_ID;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> >;
struct utl::hash<bool>;
struct tagWINDOWPLACEMENT;
struct wistd::__compressed_pair_elem<wil::details::folder_change_reader_state *,0,0>;
struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>;
struct tagNEWTEXTMETRICA;
struct tagNEWTEXTMETRICEXA;
class Microsoft::WRL::ComPtr<IAsyncInfo>;
struct SAFEARRAY_INTERNAL;
class Microsoft::WRL::ComPtr<IEnumSTATSTG>;
struct __vc_attributes::readonlyAttribute;
struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER;
struct utl::integral_constant<bool,1>;
struct tagAXISINFOA;
struct tagAXESLISTA;
struct tagENUMTEXTMETRICA;
struct IViewObject2;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAsyncInfo> const >;
class wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>,wil::process_heap_deleter>;
class utl::numeric_limits<bool>;
struct _CFG_CALL_TARGET_INFO;
class utl::_FloatLimits<float,24>;
class utl::numeric_limits<float>;
struct __vc_attributes::helper_attributes::process_earlyAttribute;
class utl::_FloatLimits<double,53>;
struct _RTL_TRACE_DATABASE;
struct _MEMORY_PARTITION_TRANSFER_INFORMATION;
class Microsoft::WRL::ComPtr<RegistryDataFormatIterator>;
struct _NDR_USER_MARSHAL_INFO_LEVEL1;
struct _NDR_USER_MARSHAL_INFO;
struct SSimpleWalker;
class RegistryDataFormatIterator;
struct HAS_INTERFACES;
class utl::_FloatLimits<long double,53>;
class utl::_NumLimitsBase;
struct _MAXVERSIONTESTED_INFO;
class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > >;
class utl::numeric_limits<long double>;
struct _ENCLAVE_CREATE_INFO_VBS_BASIC;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryDataFormatIterator> const >;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class utl::vector<unsigned __int64,utl::allocator<unsigned __int64> >;
class CDwordBag;
struct wistd::__compressed_pair_elem<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *,0,0>;
struct tagENUMLOGFONTA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryDataFormatIterator> >;
class utl::allocator<unsigned __int64>;
struct tagSOUNDSENTRYA;
struct _MEM_ADDRESS_REQUIREMENTS;
struct utl::vector<unsigned __int64,utl::allocator<unsigned __int64> >::_TmpElTy;
struct _LDRP_LOAD_CONTEXT;
class utl::_ArrayIt<unsigned __int64>;
class utl::_ArrayConstIt<unsigned __int64>;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct _RTL_PROCESS_MODULES;
class utl::reverse_iterator<utl::_ArrayConstIt<unsigned __int64> >;
class wil::details_abi::heap_vector<wil::details::EnabledStateManager::CachedFeaturePropertyData>;
class wil::details::EnabledStateManager;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
struct Microsoft::WRL::Details::RemoveReference<Microsoft::WRL::Wrappers::Mutex &>;
struct wil::details::EnabledStateManager::CachedUsageData;
class AdHocCallFrame<IOleInPlaceObject,<lambda_0d32688c0356eaf1376562cb0fa29181> >;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>;
class RunSyncOnMTAThread::__l2::<lambda_fd5f26b17dc0b306889b51c5fa24ff59>;
class Microsoft::WRL::RuntimeClass<Windows::Foundation::IAsyncAction,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct ITypeInfo2;
class CWrapperBase<IEnumSTATSTG>;
class Microsoft::WRL::ComPtr<TypeLibRegistrationEnumerator>;
struct _MANAGE_HOT_PATCH_QUERY_SINGLE_PATCH;
struct _WOW64_DESCRIPTOR_TABLE_ENTRY;
class Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator>;
class TypeLibRegistrationEnumerator;
struct IHttpNegotiate2;
struct ITypeLibCatalogInternal;
class _RTL_CONSTANT_STRING_remove_const_template_class<2>;
struct ITypeLibRegistrationIterator;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
class CLimitedWritableStorage;
struct tagWINDOWINFO;
class utl::_ContainerBase<unsigned __int64,utl::allocator<unsigned __int64> >;
class utl::_AllocBase<utl::allocator<unsigned __int64>,1>;
struct _NTPSS_MEMORY_BULK_INFORMATION;
struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>;
struct _JOURNAL_ABSOLUTE_INFORMATION;
struct _KEY_EVENT_RECORD;
struct _OSVERSIONINFOEX2W;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationEnumerator> >;
struct _CERT_REQUEST_INFO;
struct utl::allocator_traits<utl::allocator<unsigned __int64> >;
struct _KCONTINUE_ARGUMENT;
class CAutoHandle<void *>;
struct _FS_BPIO_RESULTS;
struct Windows::Foundation::IAsyncActionCompletedHandler;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct USN_RECORD_COMMON_HEADER;
struct USN_RECORD_V4;
struct FormatEntry;
class CTSmartObj<void *,CAutoHandle_Policy<void *> >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct IXMLDOMComment;
class wil::details::FeatureFunctorHost;
struct _CONNECTDLGSTRUCTW;
struct _ENUM_FLAG_SIZED_INTEGER<enum tagREGCLS>;
class Microsoft::WRL::ComPtr<IEnumFORMATETC>;
union _userHENHMETAFILE::__MIDL_IWinTypes_0006;
struct IDataFilter;
struct _PREFETCH_ALTERNATE_PARAM_INFO;
struct ITypeLibRegistration;
struct tagEMRLINETO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistration> const >;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES_EX;
class utl::vector<CROTItem *,utl::allocator<CROTItem *> >;
class CRunningObjectTable;
struct _FLAGGED_BYTE_BLOB;
struct CMPGUID;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> >;
struct _SYSTEM_ERROR_PORT_TIMEOUTS;
class AdHocInterceptorForwarders<IOleWindow,IOleWindow>;
struct _THREAD_NAME_INFORMATION;
struct Microsoft::WRL::ErrorPropagationPolicyTraits<-1>;
struct _CRYPT_OID_FUNC_ENTRY;
struct wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,wil_FeatureTestState *,0,std::nullptr_t>;
struct _RTL_IMAGE_MITIGATION_DEP_POLICY;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::FeatureUsageDurationData *) noexcept,&wil::details::FeatureUsageDurationData::Stop,wil::details::FeatureUsageDurationData *>;
struct _FXSAVE_FORMAT_WX86;
struct utl::vector<CROTItem *,utl::allocator<CROTItem *> >::_TmpElTy;
struct _FILE_ID_EXTD_DIR_INFO;
class utl::_ArrayIt<CROTItem *>;
class utl::_ArrayConstIt<CROTItem *>;
class utl::reverse_iterator<utl::_ArrayIt<CROTItem *> >;
class utl::reverse_iterator<utl::_ArrayConstIt<CROTItem *> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> const >;
struct _LDR_DDAG_NODE;
struct _TXFS_START_RM_INFORMATION;
struct wil::details::FeatureTraitsBase;
struct _CRT_FLOAT;
struct _ENUM_FLAG_SIZED_INTEGER<enum tagCOWAIT_FLAGS>;
struct _FILE_CASE_SENSITIVE_INFO;
class CWrapperBase<IEnumFORMATETC>;
struct SysInfo;
struct Microsoft::WRL::Details::Dummy;
struct _PS_MEMORY_RESERVE;
struct __WilFeatureTraits_Feature_NWMTest1;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoConversionClass> const >;
struct _LPC_CLIENT_DIED_MSG;
struct __WilFeatureTraits_Feature_MTestUx13;
struct __WilFeatureTraits_Feature_UxTest12;
class utl::_ContainerBase<CROTItem *,utl::allocator<CROTItem *> >;
struct __WilFeatureTraits_Feature_CDPNearshareEnhancedAdvertisement;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumUnknown,Microsoft::WRL::FtmBase>;
class utl::_AllocBase<utl::allocator<CROTItem *>,1>;
struct __WilFeatureTraits_Feature_CDPNearShareUDPDiscoveryFixup;
union _ASSEMBLY_VERSION;
struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_NWMTest1> >;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IInsertableCandidateIterator>;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
struct __WilFeatureTraits_Feature_CDPNearshareUDPRestriction;
class wil::details::<lambda_b5119c6713808ce967e206dec719b624>;
struct __vc_attributes::caseAttribute;
struct __WilFeatureTraits_Feature_ActivityFeedClientBackupAndRestore;
struct utl::allocator_traits<utl::allocator<CROTItem *> >;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct __WilFeatureTraits_Feature_CDPCloudClipboardMonitor;
class CMonikerBag;
struct __vc_attributes::length_isAttribute;
struct __WilFeatureTraits_Feature_ShowShareUIOnContainerOS;
struct tagEMRMASKBLT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ReferencedRegistryKey> const >;
class CMonikerPtrBuf;
struct _AMD64_CONTEXT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ReferencedRegistryKey> >;
class RunSyncOnMTAThread::__l2::<lambda_5d2c158ec0a9190eae11e19329324fcf>;
struct ClpboardOwnerState;
class CRotMonikerEnum;
struct __vc_attributes::varargAttribute;
class CSessionMoniker;
class CDragDropBroker::UnregisterDropTarget::__l5::<lambda_4927a812c17eeead1d983da7cbe73d5d>;
class RunSyncOnMTAThread::__l2::<lambda_9b16054ad48e172bb5548ecd4adf6ab4>;
struct IPackagedComProgIdIterator;
struct _ENCLAVE_LOAD_DATA_VBS_BASIC;
class RoVariant;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct wil::ExpiredFeatureBase<wil::details::FeatureTraitsBase,enum wil::details::EmptyVariant,0>;
struct _ARM64_CONTEXT;
class Microsoft::WRL::ComPtr<ICallingProcessInfo>;
struct _CLUSTER_RANGE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> const >;
struct IUrlAccessor;
struct _ARM_CONTEXT;
struct IObjectActivator;
struct _IMAGE_DYNAMIC_RELOCATION64_V2;
struct ICacheRefresh;
class Microsoft::WRL::ComPtr<IRegistration>;
struct IXMLDOMNamedNodeMap;
struct IRegistration;
struct HPEN__;
class CPointerMoniker;
class CClipboardBroker::SetClipboard::__l49::<lambda_ceb8f1db0b0f2dc512542b4e425d8ca5>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRegistration> const >;
struct _PS_CPU_QUOTA_QUERY_ENTRY;
struct _PS_CPU_QUOTA_QUERY_INFORMATION;
class CObjrefMoniker;
struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION;
struct _RPC_SECURITY_QOS_V2_A;
class AdHocCallFrame<ISearchProtocol2,<lambda_b7865aac57bfa228768998e2f76a980a> >;
struct _FILE_FULL_DIR_INFO;
struct _IMAGE_ARM64EC_REDIRECTION_ENTRY;
class RoVariant::OutRef;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::Init::__l2::<lambda_b4919db20cec154853a959297be03d11>;
struct RoVariant::USE_INSTEAD_ReleaseAndGetAddressOf;
class CClipboardBroker;
struct _PKCS12_PBES2_EXPORT_PARAMS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationReader> const >;
struct _IMAGE_OPTIONAL_HEADER;
struct tagCWPRETSTRUCT;
class CClipboardBroker::CClipboardBrokerExternalReference;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationReader> >;
struct utl::input_iterator_tag;
struct utl::bidirectional_iterator_tag;
struct utl::construct<unsigned __int64>;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct _CMC_RESPONSE_INFO;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IClipboardBroker>;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IConversionClass>;
struct _CMC_TAGGED_CONTENT_INFO;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
struct tagMENUITEMINFOW;
struct _SYSTEM_VERIFIER_INFORMATION;
struct HMENU__;
struct tagALTTABINFO;
struct _SYSTEM_FLUSH_INFORMATION;
class Microsoft::WRL::ComPtr<OleClassInfoDataFormatIterator>;
struct _ENUM_SERVICE_STATUSW;
struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IClipboardBroker>;
struct _SHQUERYRBINFO;
struct _RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY;
struct tagIMECHARPOSITION;
struct _RTL_BUFFER;
struct _RTL_UNICODE_STRING_BUFFER;
struct IGetContextId;
struct _HARDWARE_COUNTER_DATA;
struct _PROCESS_HANDLE_INFORMATION;
struct IResourceReferenceHandler;
struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass;
struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_Reparse;
union _STREAM_INFORMATION_ENTRY::_StreamInformation;
struct _STREAM_INFORMATION_ENTRY;
struct _OCSP_SIGNATURE_INFO;
class wil::com_ptr_t<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,wil::err_returncode_policy>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoDataFormatIterator> >;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _SL_KMEM_CACHE;
struct ANON_OBJECT_HEADER_BIGOBJ;
struct _FSCTL_UNMAP_SPACE_OUTPUT;
class Microsoft::WRL::ComPtr<IResourceReferenceHandler>;
struct wil::details::handle_null_only_resource_policy<int (__cdecl*)(void *),&CloseHandle>;
struct tagEMRPOLYDRAW16;
struct tagHELPWININFOA;
struct _FILE_COMPRESSION_INFORMATION;
struct _DRAGINFOW;
struct tagPOINTER_PEN_INFO;
struct _CERT_POLICY_MAPPING;
struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION;
class Microsoft::WRL::ComPtr<InsertableCandidateIterator>;
struct _CRYPT_PSOURCE_ALGORITHM;
struct _CRYPT_RSAES_OAEP_PARAMETERS;
class InsertableCandidateIterator;
struct tagEMRALPHABLEND;
struct _SET_CACHED_RUNS_STATE_INPUT_BUFFER;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> >;
struct _CERT_X942_DH_PARAMETERS;
struct _CRL_REVOCATION_INFO;
struct tagWCRANGE;
struct _FILE_PIPE_DELETE_SYMLINK_INPUT;
struct IRpcOptions;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBrokerInternal>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<InsertableCandidateIterator> >;
struct _MEMORY_BASIC_INFORMATION;
struct _PROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_POWER_POLICY;
struct _PROCESSOR_IDLE_STATES;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
struct _ALPC_PORT_ATTRIBUTES;
struct _SE_SECURITY_DESCRIPTOR;
struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE;
struct _CSV_QUERY_VOLUME_ID;
struct tagMOUSEMOVEPOINT;
struct _KEY_WRITE_TIME_INFORMATION;
class wil::details::SyncAsyncActionOp;
struct _HSM_OPCODE;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
class wil::details_abi::SerializedFailure::Serialize::__l2::<lambda_057488ec2a114cea6fb77af5c8c7453a>;
struct _ALPC_SERVER_INFORMATION;
class _RTL_CONSTANT_STRING_remove_const_template_class<1>;
struct _QUERY_STORAGE_RESERVE_INPUT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<wil::details::SyncAsyncActionOp> >;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
struct tagDELETEITEMSTRUCT;
struct _ALPC_SERVER_SESSION_INFORMATION;
struct _Wx86ThreadState;
struct _FILE_CASE_SENSITIVE_INFORMATION;
struct wil::details::out_param_t<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
struct _FILE_PIPE_INFORMATION;
struct _VIRTUALIZATION_INSTANCE_INFO_INPUT;
struct tagMOUSEINPUT;
struct tagKEYBDINPUT;
struct tagHARDWAREINPUT;
struct tagINPUT;
struct NOTIFY_USER_POWER_SETTING;
class Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction>;
struct _ENCLAVE_LOAD_INFO_VBS;
struct Windows::Foundation::IAsyncAction;
struct IPolicyAsync;
struct tagDESIGNVECTOR;
struct _NCRYPT_KEY_BLOB_HEADER;
struct _RTLP_PROCESS_REFLECTION_CONTEXT;
struct RESOURCE_QUALIFIER;
struct _CRYPT_SMIME_CAPABILITIES;
struct _MIDL_FORMAT_STRING;
struct IResourceCandidate;
struct IHttpNegotiate;
struct IInterfaceInfo;
struct _IMAGE_ENCLAVE_IMPORT;
struct IParseDisplayName;
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
struct _REFS_STREAM_SNAPSHOT_QUERY_DELTAS_INPUT_BUFFER;
struct _OBJECT_ATTRIBUTES;
struct _MEMORY_WORKING_SET_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >;
struct _SYSTEM_PROCESSOR_INFORMATION;
class RegistryTypeLibRegistration;
struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION;
struct _FILE_COMPRESSION_INFO;
struct _SYSTEM_BOOT_GRAPHICS_INFORMATION;
struct FILE_ID_DESCRIPTOR;
struct _ENUM_FLAG_SIZED_INTEGER<enum ComTlsFlags>;
struct _RTL_TIME_ZONE_INFORMATION;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
struct _FILE_PIPE_CREATE_SYMLINK_INPUT;
struct _PRIVKEYVER3;
class Microsoft::WRL::ComPtr<IClipboardBrokerInternal>;
struct _DEDUP_FILE_OPERATION;
class wil::details::<lambda_132f49eefa8249beb4394ff597c915e5>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryTypeLibRegistration> >;
class wil::com_ptr_t<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,wil::err_returncode_policy>;
struct _tagCODEBASEHOLD;
struct _SCRUB_PARITY_EXTENT_DATA;
struct _MUTANT_BASIC_INFORMATION;
struct _ENUM_SERVICE_STATUS_PROCESSW;
struct tagMENUBARINFO;
struct _KEY_NAME_INFORMATION;
class Microsoft::WRL::ComPtr<ITypeLibRegistrationReader>;
struct _SECURITY_CAPABILITIES;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
struct _SYSTEM_CPU_SET_INFORMATION;
union _SE_SID;
struct _RTL_HEAP_MEMORY_LIMIT_DATA;
struct _RTL_HEAP_MEMORY_LIMIT_INFO;
struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS>;
struct _REPAIR_COPIES_INPUT;
struct _FILE_REPARSE_POINT_INFORMATION;
struct _PROV_ENUMALGS;
struct _FSCTL_OFFLOAD_WRITE_OUTPUT;
struct _ENCRYPTION_BUFFER;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationReader> const >;
struct IAddrExclusionControl;
struct _SYSTEM_PAGEFILE_INFORMATION;
struct _SYSTEM_PAGEFILE_INFORMATION_EX;
struct _CM_SCSI_DEVICE_DATA;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
struct _DEFINE_STORAGE_RESERVE_INPUT;
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _ENLISTMENT_CRM_INFORMATION;
struct PROCESSOR_IDLE_TIMES;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
class wil::com_ptr_t<IRegistration,wil::err_returncode_policy>;
struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION;
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
struct _QUERY_CACHED_RUNS_BIN;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >;
struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistration> >;
struct IInternetSession;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
class CBrokerInstanceHolder;
struct _MUILANGLIST;
struct _GHOSTED_FILE_EXTENT;
struct _CRYPT_PROPERTY_REF;
struct _MUILANGUAGES;
struct tagSECURITYBINDING;
struct _MUISTRINGPOOL;
struct _CMSG_SIGNED_ENCODE_INFO;
struct _CMSG_ENVELOPED_ENCODE_INFO;
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
struct _MUILANGCFGLIST;
struct _CREATEFILE2_EXTENDED_PARAMETERS;
struct _MUILANGCFGNODE;
class Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider>;
struct _FILE_STAT_INFORMATION;
struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider;
struct _CERT_SIGNED_CONTENT_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction> >;
struct _DUPLICATE_EXTENTS_DATA;
struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
struct IPackagedComClassCatalogInternal;
struct _SYSTEM_FEATURE_CONFIGURATION_INFORMATION;
struct _CERT_SELECT_CHAIN_PARA;
struct _CERT_CHAIN_PARA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider> const >;
struct _NETINFOSTRUCT;
class Microsoft::WRL::Details::MakeAllocator<RegistryConversionClass>;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2;
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION;
struct _ACTIVATION_CONTEXT_MSIX_INFO;
struct _CTL_FIND_SUBJECT_PARA;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct IOleContainer;
union _PROCESS_READWRITEVM_LOGGING_INFORMATION;
struct _RTL_HEAP_ENTRY;
struct _CRYPT_RETRIEVE_AUX_INFO;
struct tagRemHBITMAP;
struct IWinInetInfo;
struct _FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER;
struct _PACKEDEVENTINFO;
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
class Microsoft::WRL::Details::MakeAllocator<OleClassInfoVerbIterator>;
struct wistd::__and_<>;
struct Microsoft::WRL::Details::ArgTraits<long (__cdecl Windows::Foundation::IAsyncActionCompletedHandler::*)(Windows::Foundation::IAsyncAction *,enum ABI::Windows::Foundation::AsyncStatus)>;
struct wistd::__libcpp_is_integral<char16_t>;
struct _RPC_SECURITY_QOS_V4_W;
struct IOleLink;
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider> >;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IOleVerbIterator,0,0>;
struct _OSVERSIONINFOA;
struct _QUERY_BAD_RANGES_INPUT_RANGE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnterpriseDropTarget> >;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct IObjectProvider;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IInsertableCandidate>;
struct _IMAGE_OS2_HEADER;
struct _QUERY_BAD_RANGES_INPUT;
struct _SYSTEM_MEMORY_CHANNEL_INFORMATION;
class Microsoft::WRL::Details::MakeAllocator<wil::details::SyncAsyncActionOp>;
struct IUserTokenInternal;
struct _CRYPT_PROVIDERS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationReader> >;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
struct tagLOGCOLORSPACEW;
struct tagEMRCREATECOLORSPACEW;
struct _FP_IEEE_VALUE;
struct tagEMRFILLPATH;
struct _JOURNAL_RENAME_KEY_INFORMATION;
class Microsoft::WRL::Details::MakeAllocator<TypeLibRegistrationEnumerator>;
struct _CONSOLE_FONT_INFOEX;
class Microsoft::WRL::Details::MakeAllocator<OleClassInfoInsertableCandidate>;
struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct tagICONMETRICSW;
class wil::details::<lambda_4117f85562b7434ff2afe7e3fa60a98a>;
struct _SE_LEARNING_MODE_USER_OBJECT_DATA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IObjectProvider> >;
struct _SHNAMEMAPPINGA;
class Microsoft::WRL::Details::MakeAllocator<OleClassInfoConversionClass>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CFormatOnlyDataObject> const >;
struct __NCRYPT_PCP_TPM_FW_VERSION_INFO;
struct _SYSDBG_KD_PULL_REMOTE_FILE;
struct _REDIRECTION_FUNCTION_DESCRIPTOR;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS>;
struct _SHFILEINFOA;
class wil::details::<lambda_7703c0f932abdb0459b9a0a45ad60d47>;
struct _CERT_EXTENSIONS;
class ClipboardWatchdog;
struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;
struct IClassActivator;
struct _ALPC_CONTEXT_ATTR;
struct USN_RECORD_V3;
class Microsoft::WRL::Details::MakeAllocator<CFormatOnlyDataObject>;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1>;
struct IXMLDOMParseError;
struct _QUERY_SERVICE_CONFIGW;
struct _SCRUB_DATA_OUTPUT;
struct _EXCEPTION_RECORD32;
struct wistd::unique_ptr<_SYSTEM_PROCESS_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >::__nat;
struct tagCUSTDATAITEM;
struct _PROCESS_WINDOW_INFORMATION;
class wistd::unique_ptr<_SYSTEM_PROCESS_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IEnumUnknown,Microsoft::WRL::FtmBase>;
struct _OUTLINETEXTMETRICW;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2;
struct _HEAP_SUMMARY;
struct _SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IConversionClassIterator>;
struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&FindClose,void *>;
class Microsoft::WRL::ComPtr<ICancelMethodCalls>;
struct IXMLElement;
struct ICancelMethodCalls;
struct _SHELLEXECUTEINFOW;
struct wil::details::variable_size_mapping<enum ComTlsFlags>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICancelMethodCalls> const >;
struct wistd::is_class<unsigned char>;
struct _BCRYPT_DH_PARAMETER_HEADER;
struct wistd::__make_signed<bool,1>;
struct tagPIXELFORMATDESCRIPTOR;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICancelMethodCalls> >;
struct _MEMORY_PARTITION_NODE_PAGE_INFORMATION;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ICancelMethodCalls> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> >;
struct tagWNDCLASSEXW;
class wil::com_ptr_t<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>,wil::err_returncode_policy>;
struct _COMPRESSED_DATA_INFO;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IRegistration> >;
struct RPC_INTERFACE_TEMPLATEW;
struct _CRYPT_PROVIDER_REG;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _CRYPT_HASH_MESSAGE_PARA;
struct _REDIRECTION_DESCRIPTOR;
struct tagEXTLOGFONTA;
struct _CRYPT_URL_ARRAY;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IInsertableCandidate>;
class ClipboardBrokerFactory;
struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventArgs;
class Microsoft::WRL::ComPtr<CClipboardBroker>;
struct _LDR_DATA_TABLE_ENTRY;
struct _IMAGE_DVRT_ARM64X_DELTA_FIXUP_RECORD;
class Microsoft::WRL::Details::MakeAllocator<OleClassInfoDataFormatIterator>;
struct tagSTYLEBUFA;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> >;
struct _DISPLAY_DEVICEA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> >;
struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;
struct _MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE;
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
struct _RTL_MODULE_BASIC_INFO;
struct _RTL_MODULE_EXTENDED_INFO;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IConversionClass,0,0>;
struct _GRADIENT_TRIANGLE;
struct IXMLDOMCDATASection;
struct _FILE_FS_OBJECTID_INFORMATION;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IAsyncInfo,1,0>;
struct IExtensionActivationContextProperties;
struct tagSTYLESTRUCT;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,ITypeLibRegistration,Microsoft::WRL::FtmBase>;
struct _SERVICE_PREFERRED_NODE_INFO;
struct _WIN32_FIND_STREAM_DATA;
struct _CERT_HASHED_URL;
struct tagEMREOF;
struct _CERT_LOGOTYPE_IMAGE_INFO;
struct tagEXTLOGPEN;
struct _CERT_LOGOTYPE_AUDIO;
struct _tagPROTOCOLFILTERDATA;
struct _CERT_LOGOTYPE_AUDIO_INFO;
struct IComCatalogInternal;
struct _CERT_LOGOTYPE_REFERENCE;
struct tagTouchPredictionParameters;
struct IInternetZoneManagerEx2;
struct _s__RTTIBaseClassDescriptor;
struct _OBJECT_TYPE_LIST;
struct ICatalogFileInfo;
struct wistd::__extract_key_first_tag;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IDragDropBroker,Microsoft::WRL::FtmBase>;
struct MENUITEMTEMPLATE;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1;
struct _SYSTEM_PROCESS_INFORMATION_EXTENSION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassIterator> const >;
struct wistd::is_class<bool>;
struct tagTITLEBARINFO;
struct wistd::__libcpp_is_floating_point<double>;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IDragDropBroker,Microsoft::WRL::FtmBase>;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
struct _PROCESS_PRIORITY_CLASS;
struct _ATOM_BASIC_INFORMATION;
struct _REFS_SET_VOLUME_COMPRESSION_INFO_INPUT_BUFFER;
struct wistd::__make_signed<long,1>;
union _MCI_STATS;
union _MCI_ADDR;
struct _MCA_EXCEPTION;
struct _IO_ERROR_LOG_PACKET;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
struct tagMULTIKEYHELPA;
struct _BCryptBufferDesc;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IDragDropBroker,Microsoft::WRL::FtmBase>;
struct _GENERATE_NAME_CONTEXT;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IAsyncAction,IWeakReferenceSource,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct IMPORT_OBJECT_HEADER;
struct _SILOOBJECT_ROOT_DIRECTORY;
struct _FS_BPIO_INFO;
struct IDragDropBroker;
struct wistd::__libcpp_is_integral<__int64>;
struct _SECURITY_DESCRIPTOR;
struct _FILE_STREAM_INFORMATION;
struct _BCRYPT_PKCS1_PADDING_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassCategoryInfo> >;
struct IIndirectCallTarget;
struct _SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION;
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT;
struct tagEMREXTFLOODFILL;
struct _KTMOBJECT_CURSOR;
struct _FILE_PREFETCH;
struct tagEMRSETVIEWPORTEXTEX;
struct _RTL_USER_PROCESS_INFORMATION64;
struct _TOKEN_ACCESS_INFORMATION;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComClassCategoryInfo> >;
struct tagRemHENHMETAFILE;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> >;
struct _HARDERROR_MSG;
struct _CONSOLE_CURSOR_INFO;
struct _FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct tagHW_PROFILE_INFOW;
struct __NCRYPT_PCP_RAW_POLICYDIGEST;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >;
struct _FILE_FS_LABEL_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDropTarget> const >;
struct _CMSG_MAIL_LIST_RECIPIENT_INFO;
struct _RTL_HEAP_TAG;
class Microsoft::WRL::ComPtr<RegistryVerbIterator>;
struct _CERT_CHAIN_ENGINE_CONFIG;
struct tagRemFORMATETC;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassCategoryInfo> const >;
struct _RTL_WORK_ON_BEHALF_TICKET_EX;
struct tagCLIENTCREATESTRUCT;
struct _CERT_RDN_ATTR;
struct _SYSTEM_SPECULATION_CONTROL_INFORMATION;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IConversionClassIterator>;
struct _SYSTEM_SINGLE_PROCESSOR_RELATIONSHIP_INFORMATION_REQUEST;
struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION;
struct _EVENT_BASIC_INFORMATION;
struct _DRAWPATRECT;
struct tagACTCTXA;
struct _IMAGE_ENCLAVE_CONFIG32;
struct _PLUGPLAY_NOTIFY_HDR;
struct _REMOTE_PORT_VIEW;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumUnknown,Microsoft::WRL::FtmBase>;
struct tagStorageLayout;
struct _DISPATCHER_CONTEXT_ARM64;
struct _WIM_PROVIDER_ADD_OVERLAY_INPUT;
struct tagDIBSECTION;
class Microsoft::WRL::ComPtr<CDragDropBroker>;
struct tagHANDLETABLE;
struct _ACCESS_ALLOWED_OBJECT_ACE;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,ITypeLibRegistrationReader,Microsoft::WRL::FtmBase>;
struct CM_Power_Data_s;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragDropBroker> >;
struct _PROCESS_WS_WATCH_INFORMATION;
class Microsoft::WRL::Details::MakeAllocator<RegistryVerbIterator>;
struct tagENUMLOGFONTEXW;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IConversionClass>;
struct _SYSTEM_POOL_LIMIT_INFORMATION;
class Microsoft::WRL::ComPtr<IOleDragDropBrokerHost>;
struct _RTL_TRACE_ENUMERATE;
struct ISoftDistExt;
class Microsoft::WRL::Details::MakeAllocator<RegistryTypeLibRegistration>;
struct tagEMRSETICMPROFILE;
struct _INVERTED_FUNCTION_TABLE_KERNEL_MODE;
struct IXMLDOMDocument;
struct IInternetBindInfoEx;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IConversionClassIterator,0,0>;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IOleVerbIterator>;
class RegistryVerb;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IOleVerbIterator>;
struct _PROCESS_HEAP_ENTRY;
struct _BOOT_AREA_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDragDropBrokerHost> >;
struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE;
class Microsoft::WRL::Details::MakeAllocator<OleClassInfoVerb>;
struct tagCURSORINFO;
struct ICreateTypeInfo2;
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerb> >;
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
class Microsoft::WRL::ComPtr<IDragDropBroker>;
struct _UNIVERSAL_NAME_INFOA;
struct _QUERY_CACHED_RUNS_OUTPUT;
class CEnumCategoriesOfClass;
struct Microsoft::WRL::Details::AsyncOptionsHelper<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct _MEMORY_PARTITION_PAGE_COMBINE_INFORMATION;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct Microsoft::WRL::Details::AsyncOptionsBase;
struct _CRYPT_PRIVATE_KEY_INFO;
struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropBroker> const >;
class CsCatInfo;
struct _CERT_CHAIN_POLICY_PARA;
struct _MEMORY_PARTITION_PAGEFILE_INFORMATION;
class Microsoft::WRL::ComPtr<ComProgIdIterator>;
struct _PROCESS_CHILD_PROCESS_INFORMATION;
struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >;
struct _CRYPT_DES_KEY_STATE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropBroker> >;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
struct _COMMTIMEOUTS;
struct _QUERY_CACHED_RUNS_ENTRY;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOleDragDropBrokerHost> >;
class CEnumCategories;
struct IEnumContextProps;
class wil::details::<lambda_a02f22db55fe6605d2c10792e4588a50>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDragDropBroker> >;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
class CBrokeredClipDataObject::{dtor}::__l8::<lambda_fde06876c4167ce29bb1eca24a889b37>;
class Microsoft::WRL::ComPtr<IClientSecurity>;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class wil::details::<lambda_b8e8d69d491182c5cec13c1d33e82913>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibRegistrationReader> >;
struct _MEMORY_PARTITION_MEMORY_THRESHOLDS_INFORMATION;
struct _FILE_ID_FULL_DIR_INFORMATION;
struct APP_LOCAL_DEVICE_ID;
struct _ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE>;
struct _SYSTEM_IOMMU_STATE_INFORMATION;
struct IWindowForBindingUI;
struct _CONTEXT_CHUNK;
struct _CONTEXT_EX;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IRandomAccessStream *,1>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>;
struct _WIN32_FIND_DATAA;
struct _CERT_CHAIN_POLICY_STATUS;
struct _RC_CONFIG;
struct value_entW;
struct _JOURNAL_CLIENT_INFORMATION;
struct _MEMORY_PRIORITY_INFORMATION;
struct std::_Make_signed2<1>;
class std::_Init_locks;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IComClassIterator>;
struct std::_Make_signed2<8>;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
union _IMAGE_AUX_SYMBOL_EX;
struct std::_Make_unsigned2<8>;
struct std::_Invoker_pmd_object;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> const >;
struct std::_Maximum<>;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct wistd::__compressed_pair_elem<_SYSTEM_PROCESS_INFORMATION *,0,0>;
struct std::greater<void>;
struct _SYSTEM_PROCESS_INFORMATION;
class DragDropTelemetry::Instance::__l2::<lambda_276c39db18535f17382b3e205d26374d>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IRandomAccessStream *,1>;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&CloseHandle,void *>;
struct _REPAIR_STORAGE_RESERVE_INPUT;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,ITypeLibRegistrationReader,0,0>;
struct _SYSTEM_POWER_STATUS;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IComClassIterator,0,0>;
class Microsoft::WRL::ComPtr<RegistryConversionClass>;
class Microsoft::WRL::Details::MakeAllocator<RegistryVerb>;
struct CPageHolderTemplate;
class CPageHolder;
struct _NOTIFYICONDATAA;
struct _ALPC_WORK_ON_BEHALF_ATTR;
class COlePropertySheet;
struct __NCRYPT_UI_POLICY;
struct tagFILTERKEYS;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IInsertableCandidateIterator,0,0>;
struct _FILE_REMOTE_PROTOCOL_INFORMATION;
struct IComCatalog;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IEnumUnknown,0,0>;
struct _LDR_SERVICE_TAG_RECORD;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IOleDataFormatIterator>;
class wil::Feature<__WilFeatureTraits_Feature_NWMTest1>;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<1>;
struct tagPOINTER_DEVICE_INFO;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wil_FeatureTestState *>;
struct HWINEVENTHOOK__;
struct _KLDR_DATA_TABLE_ENTRY32;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,void *>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IOleVerbIterator>;
struct _IMAGE_BDD_DYNAMIC_RELOCATION;
struct _SYSTEM_POWER_POLICY;
struct _REMSECURITY_ATTRIBUTES;
struct _tagRemBINDINFO;
struct IXMLElement2;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IOleVerb,0,0>;
struct _SYSDBG_TRIAGE_DUMP;
class Microsoft::WRL::Details::MakeAllocator<RegistryDataFormatIterator>;
struct HRSRC__;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>,1>;
struct _RTL_PROCESS_LOCKS;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IComProgIdIterator>;
class CArray<_GUID,_GUID &>;
struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::IAsyncAction *>;
struct IClassClassicInfo2;
class Microsoft::WRL::Details::MakeAllocator<TypeLibRegistrationReader>;
struct IWinRTCatalogInternal;
struct _RTL_RELATIVE_NAME_U;
struct DLGTEMPLATEEX;
struct _CRYPT_OBJID_TABLE;
struct _RTL_VERIFIER_DLL_DESCRIPTOR;
struct tagEMRCREATECOLORSPACE;
struct _RTL_VERIFIER_THUNK_DESCRIPTOR;
struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX;
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
struct _FILE_TYPE_NOTIFICATION_INPUT;
struct _tagStartParam;
struct wistd::__compressed_pair_elem<Microsoft::WRL::ComPtr<IUnknown> *,0,0>;
class Microsoft::WRL::Details::MakeAllocator<ComClassIterator>;
struct _FILE_REFERENCE_RANGE;
struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION;
struct _CERT_QC_STATEMENTS_EXT_INFO;
struct USN_JOURNAL_DATA_V0;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IComProgIdIterator,0,0>;
struct _SILOOBJECT_BASIC_INFORMATION;
struct tagMDINEXTMENU;
struct tagEXTLOGPEN32;
struct tagEMREXTCREATEPEN;
struct tagPOLYTEXTW;
struct _ASYNC_DUPLICATE_EXTENTS_STATUS;
struct _SYSTEM_FEATURE_CONFIGURATION_UPDATE;
struct _CERT_SUPPORTED_ALGORITHM_INFO;
struct _AVRF_CLIENT_ID_WOW64;
struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64;
struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION;
struct _DISPLAY_DEVICEW;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IAsyncAction,0,0>;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1>;
struct _OFSTRUCT;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IOleDataFormatIterator,0,0>;
struct _CERT_BIOMETRIC_EXT_INFO;
class Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal>;
struct PPM_THERMALCHANGE_EVENT;
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT;
struct _BCRYPT_ECCFULLKEY_BLOB;
struct _OVERLAPPED_ENTRY;
struct RTL_ACE_DATA;
class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IOleVerb>;
struct tagHELPWININFOW;
struct PPM_IDLESTATE_EVENT;
struct _QUERY_PERFORMANCE_COUNTER_FLAGS;
struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION;
struct RPC_ENDPOINT_TEMPLATEA;
struct _NDR64_STRING_FLAGS;
union _ldouble_val;
struct _NDR64_SYSTEM_HANDLE_FORMAT;
class Microsoft::WRL::Details::MakeAllocator<ComProgIdIterator>;
struct _TOKEN_ORIGIN;
struct _IMAGE_FILE_MACHINES;
struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION_ENTRY;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> >;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::HasKey::__l5::<lambda_b157e817e32bc316ac1016975a893c27>;
struct _IMAGE_FUNCTION_OVERRIDE_DYNAMIC_RELOCATION;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IInsertableCandidate,0,0>;
class RunSyncOnMTAThread::__l2::<lambda_3d6b690e680a9e04a9783c45d7617b8a>;
struct __midl_frag148_t;
struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::IAsyncAction *>;
struct _PEBS_DS_SAVE_AREA;
struct _PROCESSOR_PROFILE_CONTROL_AREA;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,ITypeLibRegistrationReader,Microsoft::WRL::FtmBase>;
struct NDR64_STRING_HEADER_FORMAT;
struct _NDR64_CONFORMANT_STRING_FORMAT;
struct _PROCESS_MEMORY_EXHAUSTION_INFO;
struct __midl_frag144_t;
struct tagMEASUREITEMSTRUCT;
class Microsoft::WRL::ComPtr<ConversionClassIterator>;
struct tagSOLE_AUTHENTICATION_SERVICE;
struct _SE_APPID_TAGGING_CLAIM_NODE;
struct _CRYPT_RC4_KEY_STATE;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
struct _FSCTL_OFFLOAD_WRITE_INPUT;
struct _TP_TASK_CALLBACKS;
struct __midl_frag127_t;
union _IMAGE_AUX_SYMBOL;
struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _SYSTEM_SESSION_BIGPOOL_INFORMATION;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>,1>;
struct __midl_frag29_t;
struct _RPC_SECURITY_QOS_V4_A;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ConversionClassIterator> const >;
struct _FILE_RENAME_INFORMATION;
struct __midl_frag2_t;
struct _INVERTED_FUNCTION_TABLE_USER_MODE;
struct _xml_error;
struct _DYNAMIC_FUNCTION_TABLE;
struct _SYSTEM_NUMA_INFORMATION;
struct tagEMRROUNDRECT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoInsertableCandidate> const >;
struct _ais_MIDL_TYPE_FORMAT_STRING;
struct _SYSTEM_TPM_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoInsertableCandidate> >;
struct WIN32_MEMORY_REGION_INFORMATION;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>,1>;
struct _TP_JOB;
struct _MARK_HANDLE_INFO32;
struct IInsertableCandidateIterator;
struct __midl_frag122_t;
struct _ENUM_FLAG_SIZED_INTEGER<enum CWMO_FLAGS>;
struct _PS_BNO_ISOLATION_PARAMETERS;
struct _CERT_POLICY_CONSTRAINTS_INFO;
struct USN_RANGE_TRACK_OUTPUT;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
struct _NDR64_CONF_ARRAY_HEADER_FORMAT;
struct IXMLDOMNodeList;
struct HCOLORSPACE__;
struct IComCatalogSettings;
struct _PROCESS_LEAP_SECOND_INFORMATION;
class Microsoft::WRL::ComPtr<OleClassInfoVerbIterator>;
class wil::com_ptr_t<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,wil::err_returncode_policy>;
class OleClassInfoVerbIterator;
struct IInternetSecurityManager;
struct _SUPPORTED_OS_INFO;
struct _SHSTOCKICONINFO;
struct __midl_frag193_t;
struct _SECURITY_DESCRIPTOR_RELATIVE;
struct _REPARSE_INDEX_KEY;
struct Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem;
struct __midl_frag168_t;
struct _CMC_STATUS_INFO;
struct __midl_frag137_t;
struct __midl_frag133_t;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
struct __midl_frag110_t;
struct _SAFER_HASH_IDENTIFICATION;
struct __midl_frag43_t;
struct __midl_frag40_t;
struct __midl_frag20_t;
struct Windows::ApplicationModel::DataTransfer::IDataPackagePropertySetView;
struct _SAFER_HASH_IDENTIFICATION2;
struct __midl_frag62_t;
struct __midl_frag24_t;
struct __midl_frag145_t;
struct _wireVARIANT;
struct __midl_frag16_t;
struct _SERVERSILO_INIT_INFORMATION;
struct __midl_frag103_t;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct tagLOGPEN;
struct tagEMRCREATEPEN;
struct _RPC_POLICY;
struct tagENUMLOGFONTW;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct IAdviseSink2;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
class ComProgIdIterator;
struct __midl_frag200_t;
struct tagMINMAXINFO;
struct _WINDOWS_OS_OPTIONS;
struct tagIMEMENUITEMINFOA;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX;
struct Windows::ApplicationModel::DataTransfer::IDataPackageView;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComProgIdIterator> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComProgIdIterator> >;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IOleDataFormatIterator>;
struct FR;
class CFont;
struct FONTFACEDATA;
class Microsoft::WRL::ComPtr<OleClassInfoVerb>;
class OleClassInfoVerb;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct RPC_IF_ID_VECTOR;
class CMemString<CMemString_PolicyCoTaskMem>;
struct _PROCESS_MITIGATION_DEP_POLICY;
struct IAuthenticate;
struct _THREAD_ENERGY_VALUES;
struct ICreateTypeLib;
struct _FILE_END_OF_FILE_INFORMATION_EX;
struct DISPLAYCONFIG_PATH_TARGET_INFO;
struct DISPLAYCONFIG_PATH_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerb> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerb> >;
struct _VARIABLE_NAME_AND_VALUE;
struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable_imp<<lambda_e1bdf235c2021226f8c53f8fb7bf9230>,1>;
class CTSmartPtr<unsigned short,CTContainer_PolicyLocalMem>;
struct _FIBER;
class SafeCastHelper<unsigned long,int,1>;
struct _Wx86TIB;
class ARI::ProcessToken::AutoSysAppId;
struct _SYSTEM_DEVICE_INFORMATION;
class wistd::__function::__func<<lambda_e1bdf235c2021226f8c53f8fb7bf9230>,long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>;
struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_CONFIGURATION_OPERATION>;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct PACKAGE_ID;
struct RTLWOW64_CROSSPROCESS_WORK_ITEM;
struct _BLENDFUNCTION;
struct _KEY_FULL_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler> const >;
struct _DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION;
struct _FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler> >;
struct _cpinfoexW;
class wil::details::<lambda_3789e6dda788e7acf31c02345dd5139e>;
struct tagACTCTX_SECTION_KEYED_DATA_2600;
struct Windows::Storage::Streams::IInputStream;
struct IUserToken;
struct _RTL_DISK_SPACE_INFO;
struct tagMONITORINFOEXW;
struct _PROCESS_SESSION_INFORMATION;
class wil::details::<lambda_8cd2267e17c06890009b9a372798381a>;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct AsyncIMultiQI;
struct HKL__;
struct _TRANSACTION_BASIC_INFORMATION;
struct _MEMORY_PARTITION_CHARGE_SHARING_INFORMATION;
struct _DRAGINFOA;
struct _BCRYPT_RSAKEY_BLOB;
struct _MicrosoftTelemetryAssertArgs;
struct tagTRACKMOUSEEVENT;
struct GetTypeValueImpl<long,unsigned short const *,enum LoadOrFreeWhy,HINSTANCE__ *>;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct GetTypeValueImpl<long,enum LoadOrFreeWhy,HINSTANCE__ *>;
struct __NCRYPT_SUPPORTED_LENGTHS;
struct IInternetProtocolEx;
struct _PROCESS_EXCEPTION_PORT;
struct tagRPC_CALL_ATTRIBUTES_V3_A;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>,1>;
struct WIN32_MEMORY_PARTITION_INFORMATION;
struct _REFS_STREAM_EXTENT;
struct _RTL_IMAGE_MITIGATION_ASLR_POLICY;
struct IPipeDouble;
struct _SYSTEM_PROCESSOR_FEATURES_INFORMATION;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>,1>;
struct _REFS_STREAM_SNAPSHOT_QUERY_DELTAS_OUTPUT_BUFFER;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryConversionClass> const >;
struct _WIM_PROVIDER_OVERLAY_ENTRY;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryConversionClass> >;
struct PROCESSOR_IDLESTATE_INFO;
struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc;
class CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
struct IWinRTServerInfo;
class AdHocCallFrame<IOleWindow,<lambda_600bd29f17b036b93b7550065426cbdf> >;
struct CO_DEVICE_CATALOG_COOKIE__;
struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_ENABLED_STATE_OPTIONS>;
struct _EXFAT_STATISTICS;
class Microsoft::WRL::ComPtr<RegistryInsertableCandidate>;
struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY;
struct _IMAGE_LOAD_CONFIG_DIRECTORY64;
struct _PREFIX_TABLE;
struct _MEMORY_COMBINE_INFORMATION_EX;
struct _OBJECT_NAME_INFORMATION;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct ImplementationHelpersDetails::IsUuidOfAnyHelper<ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>;
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryInsertableCandidate> >;
struct _ENUM_FLAG_SIZED_INTEGER<enum PackageDependencyProcessorArchitectures>;
struct _JOBOBJECT_IO_ATTRIBUTION_STATS;
struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
struct _OSVERSIONINFOEX3W;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
struct Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2>;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct Microsoft::WRL::ErrorPropagationPolicyTraits<1>;
struct _SYSTEM_POOL_INFORMATION;
class RegistryVerbIterator;
struct _KEY_TRUST_INFORMATION;
struct _CRYPT_CONTEXT_FUNCTIONS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerbIterator> const >;
struct tagEVENTMSG;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerbIterator> >;
class wil::details::<lambda_f2e474783984c20cfae428dbee0cad6f>;
struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT;
struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE;
struct tagANIMATIONINFO;
struct _RTL_RXACT_LOG;
struct tagEMRCREATEMONOBRUSH;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
struct _SYSTEM_ALARM_ACE;
struct tagENUMLOGFONTEXDVW;
struct NCRYPT_ALLOC_PARA;
struct _ICONINFOEXW;
struct RPC_CLIENT_INFORMATION1;
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION;
struct tagAXISINFOW;
struct tagAXESLISTW;
struct tagENUMTEXTMETRICW;
struct HSAVEDUILANGUAGES__;
struct IBindHttpSecurity;
struct _CrtMemState;
struct _HV_MINROOT_NUMA_LPS;
struct _SYSTEM_HYPERVISOR_MINROOT_INFORMATION;
struct CM_EXTENDED_PARAMETER;
struct HLSURF__;
class Microsoft::WRL::ComPtr<RegistryVerb>;
struct ISystemActivator;
struct Windows::Storage::FileProperties::IMusicProperties;
struct IActivationContextInfo;
struct IAgileObject;
struct tagGESTURENOTIFYSTRUCT;
struct _FILE_LAYOUT_NAME_ENTRY;
struct _IMAGE_DVRT_ARM64X_FIXUP_RECORD;
struct Windows::Storage::FileProperties::IVideoProperties;
class ConversionClassIterator;
struct tagRPC_CALL_ATTRIBUTES_V3_W;
struct _RPC_CALL_LOCAL_ADDRESS_V1;
struct COPYFILE2_MESSAGE;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
struct _NON_PAGED_DEBUG_INFO;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;
struct tagNCCALCSIZE_PARAMS;
struct _CRYPT_ECC_CMS_SHARED_INFO;
struct tagWINDOWPOS;
struct IExternalConnection;
struct Windows::Storage::FileProperties::IImageProperties;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ConversionClassIterator> >;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct _POWER_PLATFORM_INFORMATION;
struct _RTL_IMAGE_MITIGATION_REDIRECTION_TRUST_POLICY;
struct _ALPC_PORT_CALLBACK_INFORMATION;
struct tagINPUT_MESSAGE_SOURCE;
struct Windows::Storage::FileProperties::IDocumentProperties;
struct _COVERAGE_SECTION_HEADER;
struct tagTOUCH_HIT_TESTING_INPUT;
struct Microsoft::WRL::ErrorPropagationPolicyTraits<2>;
struct tagTOGGLEKEYS;
struct Windows::Storage::FileProperties::IBasicProperties;
struct IComCatalog2Internal;
struct IInsertableCandidate;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
struct _TOKEN_PRIVILEGES;
struct Windows::Storage::Streams::IRandomAccessStreamWithContentType;
struct IAsyncManager;
struct IXMLDOMEntity;
struct MFT_ENUM_DATA_V1;
struct ICall;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>;
struct tagDRAWITEMSTRUCT;
class CAggId;
struct wistd::unique_ptr<Microsoft::WRL::ComPtr<IUnknown> [0],wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >::_CheckArrayPointerConversion<Microsoft::WRL::ComPtr<IUnknown> *>;
struct _CERT_REVOCATION_PARA;
struct IXMLElementCollection;
struct wistd::__compressed_pair_elem<wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]>,1,1>;
struct IAddrTrackingControl;
struct IInternetSecurityManagerEx2;
struct _SYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION_V2;
struct IMarshal2;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
struct _IMAGE_FUNCTION_OVERRIDE_HEADER;
struct _CSV_QUERY_REDIRECT_STATE;
struct MachineGlobalObjectTableRegistrationToken__;
struct wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]>::_EnableIfConvertible<Microsoft::WRL::ComPtr<IUnknown> >;
struct _FILE_PREFETCH_EX;
struct tagOBJECTDESCRIPTOR;
struct IInternetProtocolSink;
struct _CERT_BASIC_CONSTRAINTS_INFO;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>;
struct _WIM_PROVIDER_START_INTEGRITY;
struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>;
struct _wireSAFEARRAY;
struct IClassClassicInfo;
struct IXMLDOMDocumentFragment;
struct _QUERY_CACHED_RUNS_INPUT;
struct wil::details::verify_single_flag_helper<1>;
struct _wireBRECORD;
struct _PSINJECTDATA;
struct _RTL_UMS_SCHEDULER_STARTUP_INFO;
struct _CRYPT_KEY_PROV_INFO;
class Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs;
class AdHocInterceptorForwarders<IOleWindow,IOleWindow>::GetWindow::__l2::<lambda_600bd29f17b036b93b7550065426cbdf>;
struct _CRYPT_CONTEXT_FUNCTION_CONFIG;
struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *>;
struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::SetObjectRects::__l2::<lambda_5f36165614e701fb976ba4b91ba80c82>;
struct Windows::Foundation::IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *>;
struct ITypeChangeEvents;
struct Windows::Foundation::Diagnostics::IAsyncCausalityTracerStatics;
struct tagCANDIDATELIST;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION;
struct tagRID_DEVICE_INFO_MOUSE;
struct IMonikerProp;
struct tagEMRRESIZEPALETTE;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::UIDeactivate::__l2::<lambda_f9b153e28317f47b008789014cb39e3f>;
struct tagFontPropSetTable;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct _PROCESS_DEVICEMAP_INFORMATION;
struct IReplaceClassInfo;
struct tagMOUSEHOOKSTRUCT;
union _PROCESS_MEMORY_ALLOCATION_MODE;
struct _WNF_DELIVERY_DESCRIPTOR;
struct _IMAGE_FUNCTION_ENTRY64;
struct HSPRITE__;
struct _KCRM_PROTOCOL_BLOB;
struct HHOOK__;
struct _KCRM_TRANSACTION_BLOB;
struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::IAsyncAction *>;
class InitializeTracing::__l2::<lambda_0940cd69598ba54cee9560fa9ab83a43>;
struct _FSCTL_OFFLOAD_READ_INPUT;
struct _OCSP_SIGNED_REQUEST_INFO;
struct IOverrideTargetContext;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1>;
struct IInternetZoneManager;
struct IConversionClassIterator;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1>;
struct _CERT_POLICY_QUALIFIER_INFO;
struct _GRADIENT_RECT;
struct tagENUMLOGFONTEXA;
struct tagENUMLOGFONTEXDVA;
struct tagSERIALKEYSA;
struct tagRPC_CALL_ATTRIBUTES_V1_W;
struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1>;
struct _EXTENDED_CREATE_INFORMATION;
struct _SC_NOTIFICATION_REGISTRATION;
struct _SL_APPX_CACHE_VALUE_DESCRIPTOR;
struct _SL_APPX_CACHE;
struct _DECRYPTION_STATUS_BUFFER;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1>;
struct _REFS_SET_VOLUME_DEDUP_INFO_INPUT_BUFFER;
struct tagCBT_CREATEWNDW;
struct IOleWindow;
struct _LDR_DATA_TABLE_ENTRY32;
struct _RPC_SECURITY_QOS_V3_A;
struct Windows::Storage::IStorageItem;
struct tagContextProperty;
struct IInterceptorBase;
struct ICallIndirect;
struct _FILE_DISPOSITION_INFO;
struct _FILE_LAYOUT_ENTRY;
struct _SYSTEM_VHD_BOOT_INFORMATION;
struct _SYSTEM_SINGLE_MODULE_INFORMATION;
struct _RDR_CALLOUT_STATE;
struct _FILE_NUMA_NODE_INFORMATION;
struct _CERT_POLICY_QUALIFIER_USER_NOTICE;
struct _CM_MCA_POS_DATA;
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA;
struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>;
struct _CRYPT_OID_INFO;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1>;
struct _ALPC_HANDLE_ATTR32;
struct tagORPCTHAT;
struct tagINPUT_INJECTION_VALUE;
struct _LMR_QUERY_SESSION_INFO;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct HDROP__;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
struct _FILESYSTEM_STATISTICS;
struct IEnumVARIANT;
struct _RTL_AVL_TABLE;
struct _FS_BPIO_OUTPUT;
struct _CMSG_CMS_SIGNER_INFO;
struct tagMOUSEHOOKSTRUCTEX;
struct _MESSAGE_RESOURCE_DATA;
struct tagSTAT_CHUNK;
class wil::details::<lambda_80f5f229d92db566bf1363a4b365356f>;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
class AdHocInterceptor<IOleInPlaceObjectWindowless>;
class AdHocInterceptor<IPersist>;
struct _SILO_USER_SHARED_DATA;
struct _CM_PNP_BIOS_DEVICE_NODE;
struct _CERT_TEMPLATE_EXT;
struct _PROCESS_JOB_MEMORY_INFO;
struct _CROSS_CERT_DIST_POINTS_INFO;
struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET;
struct _CSV_MGMT_LOCK;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct _ACCESS_DENIED_OBJECT_ACE;
union _PROCESS_AFFINITY_UPDATE_MODE;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct _TOKEN_AUDIT_POLICY;
struct _PATHNAME_BUFFER;
struct IDebugStream;
struct _FILEMUIINFO;
struct wil::details::MapToSmartType<HSTRING__ *,void>;
struct _POWER_SESSION_CONNECT;
struct _CMSG_RC2_AUX_INFO;
class wil::details::MapToSmartType<HSTRING__ *,void>::HStringWithRelease;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>;
struct _RTL_PERTHREAD_CURDIR;
struct _FILE_FS_CONTROL_INFORMATION;
struct FIND_BY_SID_OUTPUT;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct tagEMRSELECTCLIPPATH;
struct IMAGE_COR20_HEADER;
struct _FILE_PIPE_EVENT_ENUM_INPUT_BUFFER;
struct tagCOMPAREITEMSTRUCT;
struct _LEARNING_MODE_OBJECT_INFORMATION;
struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
struct tagMENUITEMINFOA;
struct _FILE_ZERO_DATA_INFORMATION;
struct tagENUMUILANG;
struct _FILE_RENAME_INFO;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
struct tagUSAGE_PROPERTIES;
struct _FILE_ALIGNMENT_INFO;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
class CStdIdentity;
struct _SERVICE_NOTIFY_2A;
struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>;
struct tagSOLE_AUTHENTICATION_INFO;
struct _nlsversioninfoex;
struct _KAFFINITY_EX;
struct tagEMRSETMITERLIMIT;
struct _PS_STD_HANDLE_INFO;
struct IXMLDOMDocumentType;
struct _GLYPHMETRICS;
struct tagDEBUGHOOKINFO;
class Microsoft::WRL::ComPtr<IResourceContext>;
class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::InitializeFormat::__l2::<lambda_dfa7955e9ecf8d08ec7c683e91935e9e>;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
struct IContextMarshaler;
struct std::less_equal<void>;
class wil::com_ptr_t<IComClassInfo,wil::err_returncode_policy>;
struct std::_Floating_type_traits<long double>;
union _DISPATCHER_CONTEXT_NONVOLREG_ARM64;
struct _PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION;
struct _PSFEATURE_OUTPUT;
struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration;
class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct tagEMREXTSELECTCLIPRGN;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>;
struct _ZONEATTRIBUTES;
struct _POWER_MONITOR_INVOCATION;
struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;
struct _CERT_KEY_CONTEXT;
struct DedicatedAllocator<CallFrame>;
struct _CRYPT_ENCODE_PARA;
struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventArgs;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
struct _ATOM_TABLE_INFORMATION;
class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>;
class wil::com_ptr_t<IComClassCategoryInfo,wil::err_returncode_policy>;
struct tagKERNINGPAIR;
struct _SECTION_IMAGE_INFORMATION32;
struct _RPC_PROTSEQ_VECTORW;
struct ICodeInstall;
struct MENUITEMTEMPLATEHEADER;
struct _RPC_SEC_CONTEXT_KEY_INFO;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
struct _SCOPE_TABLE_ARM64;
struct tagSTICKYKEYS;
struct _SSL_ECCKEY_BLOB;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>;
struct tagKBDLLHOOKSTRUCT;
class AdHocCallFrame<IOleWindow,<lambda_524187a61b7f412a8ba870cd827a85c9> >;
struct _PO_WAKE_SOURCE_INTERNAL;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
class AdHocCallFrame<IOleWindow,<lambda_3486a7fc69495c9349b1266d1aff572d> >;
class wil::details::<lambda_fa521078eed78ffe1c3cfda3117d3863>;
struct _RGNDATA;
struct ISynchronizeHandle;
struct _DISCDLGSTRUCTA;
struct _UNICODE_PREFIX_TABLE;
struct _HTTPSPolicyCallbackData;
struct Windows::System::IUser;
struct _NOTIFYICONDATAW;
class wil::details::<lambda_81879180566d4a5d3b0613440b5f29a5>;
struct ICallLocalityInfo;
struct _CTL_VERIFY_USAGE_STATUS;
class wil::details::<lambda_15ee1117c0f09c941ddf22843b3b6e42>;
struct Windows::Foundation::Collections::IVector_impl<enum Windows::System::UserWatcherUpdateKind,1>;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
struct _heapinfo;
class AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>::CreateAccessorEx::__l2::<lambda_b7865aac57bfa228768998e2f76a980a>;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _FILE_ID_BOTH_DIR_INFO;
class AdHocCallFrame<IPersist,<lambda_121ff239fc219aa2df927c67d0376548> >;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _TRANSACTION_BIND_INFORMATION;
struct IGetBindHandle;
struct IInternet;
struct Windows::Foundation::Collections::IVectorView_impl<enum Windows::System::UserWatcherUpdateKind,1>;
struct tagEMRPLGBLT;
struct SC_HANDLE__;
struct PPM_WMI_LEGACY_PERFSTATE;
struct _SYSTEM_LOOKASIDE_INFORMATION;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct IReleaseMarshalBuffers;
struct _SYSTEM_DMA_GUARD_POLICY_INFORMATION;
struct _THREAD_PERFORMANCE_DATA;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>;
struct tagGESTUREINFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnterpriseDropTarget> const >;
struct _SAFER_PATHNAME_IDENTIFICATION;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct _PERFORMANCE_DATA;
struct tagEMRGLSRECORD;
struct _KEY_TYPE_SUBTYPE;
struct _BCRYPT_DSA_PARAMETER_HEADER;
struct SHELLHOOKINFO;
struct _XSAVE_POLICY;
struct _SYSTEM_PROCESSOR_POLICY_INFORMATION;
struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _CRYPT_RSA_SSA_PSS_PARAMETERS;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<> >;
struct _ALPC_MESSAGE_ATTRIBUTES;
class CInterfaceFromWindowProp;
struct _COVERAGE_MODULE_REQUEST;
struct _COVERAGE_MODULES;
struct IInternetPriority;
class Microsoft::WRL::ComPtr<ICallFrameEvents>;
struct _PROCESS_MACHINE_INFORMATION;
struct _SHUFFLE_FILE_DATA;
struct IInterfaceFromWindowProp;
struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClass;
struct IGetProcessInfoInternal;
struct _CRYPT_INTERFACE_REG;
struct IHTMLFiltersCollection;
struct SDDInfo;
struct _WORKER_FACTORY_DEFERRED_WORK;
struct _Combined_type<float,double>;
class CEndPointAtom;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>;
struct IHTMLStyle;
struct _CSV_NAMESPACE_INFO;
class AdHocCallFrame<IElementBehavior,<lambda_b26c1a7a98add69a0d17b823be354735> >;
class Microsoft::WRL::ComPtr<CFormatOnlyDataObject>;
struct IExceptionNotification;
struct _GLYPHMETRICSFLOAT;
struct _NTFS_STATISTICS;
struct IInternetSecurityManagerEx;
struct tagEMRRESTOREDC;
struct Windows::Foundation::IWwwFormUrlDecoderEntry;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CFormatOnlyDataObject> >;
struct _IO_COMPLETION_BASIC_INFORMATION;
struct _DMA_CONFIGURATION_BYTE0;
struct _EISA_DMA_CONFIGURATION;
struct _SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE;
struct tagEMRSETCOLORSPACE;
struct _KEY_VALUE_ENTRY;
struct tagEMRGLSBOUNDEDRECORD;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnterpriseDropTarget> >;
struct _SERVICE_SID_INFO;
struct _CERT_LDAP_STORE_OPENED_PARA;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT;
struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _MUICCENTRY;
struct _FILE_LINK_ENTRY_INFORMATION;
struct tagRemHGLOBAL;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _FILE_OBJECTID_BUFFER;
struct _SERVICE_TRIGGER;
struct GetTypeValueImpl<long,HWND__ *,unsigned int,unsigned long>;
class CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
class CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
struct _CMSG_MAIL_LIST_ENCRYPT_INFO;
struct Windows::Data::Text::TextSegment;
struct _SAFER_CODE_PROPERTIES_V2;
struct ISynchronizeContainer;
class AdHocCallFrame<ISearchProtocol,<lambda_b4919db20cec154853a959297be03d11> >;
class PMemoryAllocator;
struct _RTL_DEBUG_INFORMATION32;
struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER_EX;
struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1>;
struct _RTL_HASH_ENTRY;
struct _SYSTEM_PROCESS_TRUST_LABEL_ACE;
struct _ACCESS_REASONS;
struct _ABCFLOAT;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wil::details::folder_change_reader_state *>;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wil::details::folder_watcher_state *>;
struct _RPC_SECURITY_QOS_V5_A;
struct _WGLSWAP;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A;
struct IWaitMultiple;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&FindCloseChangeNotification,void *>;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&FindCloseChangeNotification,wistd::integral_constant<unsigned __int64,0>,void *,__int64,-1,void *>;
struct _RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY;
struct _COMSTAT;
struct tagORPC_EXTENT_ARRAY;
struct tagORPC_EXTENT;
struct _FILE_DIRECTORY_INFORMATION;
struct _SE_ACCESS_REPLY;
struct _REFS_SMR_VOLUME_INFO_OUTPUT;
class CEnumConnectionsImpl;
struct tagUSEROBJECTFLAGS;
struct tagPROPERTYIDOFFSET;
struct wil::details::FeatureStorage<__WilFeatureTraits_Feature_NWMTest1,1>;
class wil::details::FeatureImpl<__WilFeatureTraits_Feature_NWMTest1>;
struct _OBJECT_TYPES_INFORMATION;
class SafeIntCompare<unsigned long,unsigned __int64>;
union _DL_EUI48;
class wil::details::<lambda_d209876616f5b5ccf229bbf422abd156>;
struct _JOBOBJECT_JOBSET_INFORMATION;
class SafeIntCompare<unsigned long,int>;
struct DICTENTRYHEADER;
struct DICTENTRY;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct tagHELPINFO;
struct _JOBOBJECT_MEMORY_USAGE_INFORMATION_V2;
struct _DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION;
struct _WIM_PROVIDER_INTEGRITY_STATUS;
struct _tagAUTHENTICATEINFO;
struct DISPLAYCONFIG_SOURCE_DEVICE_NAME;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::folder_change_reader_state> >;
struct _FILE_FS_VOLUME_INFORMATION;
class wistd::__compressed_pair<wil::details::folder_change_reader_state *,wistd::default_delete<wil::details::folder_change_reader_state> >;
class wistd::unique_ptr<wil::details::folder_change_reader_state,wistd::default_delete<wil::details::folder_change_reader_state> >;
struct _CMS_KEY_INFO;
struct $_TypeDescriptor$_extraBytes_16;
class CTGlobalAllocPolicy;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
class CTSmartObj<unsigned short *,CTSmartPtr_PolicyComplete<CTContainer_PolicyLocalMem> >;
struct __vc_attributes::defaultAttribute;
struct __vc_attributes::defaultbindAttribute;
struct wistd::unique_ptr<wil::details::folder_watcher_state,wistd::default_delete<wil::details::folder_watcher_state> >::__nat;
struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::folder_watcher_state> >;
struct _PO_WAKE_SOURCE_DEVICE;
struct __vc_attributes::ptrAttribute;
struct __vc_attributes::cpp_quoteAttribute;
struct _SYSTEM_VA_LIST_INFORMATION;
struct _PROCESS_ACCESS_TOKEN;
struct __vc_attributes::coclassAttribute;
struct __vc_attributes::lcidAttribute;
struct ASSOCIATIONELEMENT;
class wil::details::<lambda_47f9ee6fb0b5755eb2ee16e9695dcbdb>;
struct __vc_attributes::ms_unionAttribute;
struct _CRYPT_AES_256_KEY_STATE;
struct wistd::__compressed_pair_elem<wil::details::folder_watcher_state *,0,0>;
class wil::unique_struct<_TOKEN_LINKED_TOKEN,void (__cdecl*)(_TOKEN_LINKED_TOKEN *) noexcept,&wil::details::CloseTokenLinkedToken,std::nullptr_t,0>;
struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::folder_watcher_state>,1,1>;
struct __lc_time_data;
struct __vc_attributes::uidefaultAttribute;
struct __vc_attributes::publicAttribute;
struct lconv;
struct __vc_attributes::helper_attributes::notify_atlprovAttribute;
struct _SYSTEM_PROCESS_ID_INFORMATION;
struct __vc_attributes::helper_attributes::help_stringAttribute;
struct __vc_attributes::helper_attributes::requires_valueAttribute;
struct ISynchronize;
struct _PSFEATURE_CUSTPAPER;
struct __vc_attributes::helper_attributes::as_stringAttribute;
struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute;
struct _stat32i64;
struct __vc_attributes::helper_attributes::attributeAttribute;
struct _FILE_NOTIFY_INFORMATION;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<INotARealInterface> const >;
struct wil::next_entry_offset_iterator<_FILE_NOTIFY_INFORMATION>;
struct __vc_attributes::helper_attributes::v1_earlyAttribute;
struct INotARealInterface;
struct __vc_attributes::helper_attributes::v1_nameAttribute;
class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>::GetWindow::__l2::<lambda_3486a7fc69495c9349b1266d1aff572d>;
struct __vc_attributes::idl_moduleAttribute;
struct __vc_attributes::last_isAttribute;
class wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>;
struct __vc_attributes::importlibAttribute;
struct __vc_attributes::inAttribute;
struct tagREGISTERWORDW;
struct __vc_attributes::switch_typeAttribute;
struct _numberfmtW;
struct IXMLError;
struct IMarshallingManager;
struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable<<lambda_0c2afb377131ef1ab2244976d5fb45fc> >;
struct __vc_attributes::includelibAttribute;
struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable_imp<<lambda_0c2afb377131ef1ab2244976d5fb45fc>,1>;
struct __vc_attributes::helpstringdllAttribute;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct __vc_attributes::hiddenAttribute;
struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >;
class AdHocInterceptorForwarders<IPersist,IPersist>;
struct __vc_attributes::includeAttribute;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Lookup::__l5::<lambda_b9bc781cf4891e97cdc64fd226d3642a>;
struct __vc_attributes::wire_marshalAttribute;
class AdHocInterceptorForwarders<IPersist,IPersist>::GetClassID::__l2::<lambda_77a2b2d0129bbc926517a2760e67553c>;
struct _IMAGE_DYNAMIC_RELOCATION32;
struct __vc_attributes::emitidlAttribute;
class wistd::__function::__func<<lambda_b791f461fdcdf6803f8b1ec4cfa018be>,bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct InterfaceWalkerFree;
struct __vc_attributes::first_isAttribute;
struct tagEMRSETARCDIRECTION;
struct _SYSTEM_REF_TRACE_INFORMATION;
class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerExternalReference>;
struct __vc_attributes::oleautomationAttribute;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker>;
struct __vc_attributes::defaultvalueAttribute;
class Microsoft::WRL::Details::MakeAllocator<CDragDropBroker>;
class wil::details::<lambda_430053700ae9b88d68da62d9ff0cf050>;
struct __vc_attributes::propgetAttribute;
class wil::details::<lambda_f725a7e1c10857753400300473ba37a8>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IDragDropBroker,0,0>;
struct __vc_attributes::defaultvtableAttribute;
struct __vc_attributes::call_asAttribute;
struct __vc_attributes::dispinterfaceAttribute;
struct __vc_attributes::exportAttribute;
struct _KCRM_MARSHAL_HEADER;
struct __vc_attributes::hookAttribute;
struct _SQM_STREAM_ENTRY;
struct wistd::__invoke_void_return_wrapper<bool>;
class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,wistd::integral_constant<unsigned __int64,2>,void *,__int64,-1,void *> >;
struct wistd::__invoke_void_return_wrapper<long>;
struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&FindClose,wistd::integral_constant<unsigned __int64,0>,void *,__int64,-1,void *>;
struct __vc_attributes::atl::db_columnAttribute;
struct __vc_attributes::atl::soap_handlerAttribute;
class ImagePath;
class CTHeapAllocPolicy;
class wil::details::<lambda_a74ea9c4f4581fcfb226a1cd0bef07a8>;
struct __vc_attributes::atl::com_interface_entryAttribute;
class wil::details::<lambda_cb2b7e4968d7aedd052fd4c9f97fd424>;
struct __vc_attributes::atl::db_sourceAttribute;
struct __vc_attributes::atl::aggregatesAttribute;
struct __vc_attributes::atl::db_tableAttribute;
struct __vc_attributes::atl::soap_headerAttribute;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW;
struct __vc_attributes::atl::db_commandAttribute;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics> >;
struct __vc_attributes::atl::tag_nameAttribute;
struct _CONTAINER_ROOT_INFO_OUTPUT;
struct _FILE_PROVIDER_EXTERNAL_INFO_V1;
struct __vc_attributes::atl::rdxAttribute;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics> >;
struct __vc_attributes::atl::perf_counterAttribute;
struct EnumVerbCache;
struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO;
class CEnumVerb;
struct VerbList;
struct __vc_attributes::atl::requires_categoryAttribute;
struct _FLAG_STGMEDIUM;
struct __vc_attributes::noncreatableAttribute;
class wil::details::<lambda_d5e0fb0d03f8da8c44bdcbf9a859e563>;
struct __vc_attributes::defaultcollelemAttribute;
struct __vc_attributes::odlAttribute;
struct __vc_attributes::switch_isAttribute;
struct IOleVerbIterator;
class Microsoft::WRL::ComPtr<IOleVerbIterator>;
struct tagHDIBFILEHDR;
struct __vc_attributes::helpstringAttribute;
struct __vc_attributes::unhookAttribute;
struct __vc_attributes::progidAttribute;
struct tagPROPHEADER;
struct __vc_attributes::versionAttribute;
struct _OCSP_BASIC_SIGNED_RESPONSE_INFO;
struct __vc_attributes::dualAttribute;
struct _RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY;
struct __vc_attributes::implementsAttribute;
struct __vc_attributes::localAttribute;
struct __vc_attributes::pointer_defaultAttribute;
struct wistd::unique_ptr<VerbList,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >::__nat;
struct __vc_attributes::requesteditAttribute;
struct _TRANSACTION_LIST_ENTRY;
struct _TRANSACTION_LIST_INFORMATION;
struct _RPC_SERVER_INTERFACE;
struct _RPC_PROTSEQ_ENDPOINT;
struct __vc_attributes::pragmaAttribute;
struct __vc_attributes::appobjectAttribute;
struct __vc_attributes::retvalAttribute;
struct __vc_attributes::uuidAttribute;
struct __vc_attributes::entryAttribute;
class std::_Compressed_pair<std::default_delete<tagOLEVERB [0]>,tagOLEVERB *,1>;
class std::unique_ptr<tagOLEVERB [0],std::default_delete<tagOLEVERB [0]> >;
struct __vc_attributes::helpfileAttribute;
struct std::default_delete<tagOLEVERB [0]>;
struct __vc_attributes::async_uuidAttribute;
struct IComServices;
struct __vc_attributes::uniqueAttribute;
struct _WOF_VERSION_INFO;
struct __vc_attributes::vi_progidAttribute;
struct __vc_attributes::providerAttribute;
struct __vc_attributes::refAttribute;
struct __vc_attributes::usesgetlasterrorAttribute;
struct _SYSTEM_DIF_VOLATILE_INFORMATION_V2;
struct __vc_attributes::importAttribute;
struct __vc_attributes::outAttribute;
struct _QUERY_FILE_LAYOUT_INPUT;
struct wistd::__compressed_pair_elem<wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree>,1,1>;
class wil::details::<lambda_e7267742e4808ea59b03f0a98e0b174e>;
struct IComServices2;
struct _CRYPTPROTECT_PROMPTSTRUCT;
struct NTFS_EXTENDED_VOLUME_DATA;
struct _JOBOBJECT_INTERFERENCE_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_FLAGS;
class Microsoft::WRL::ComPtr<IDataObjectEx>;
struct _SYSTEM_FIRMWARE_PARTITION_INFORMATION;
struct _CRL_DIST_POINTS_INFO;
struct _FILE_NOTIFY_FULL_INFORMATION;
struct _CERT_ALT_NAME_ENTRY;
struct _CERT_OTHER_NAME;
struct _MEMORY_PHYSICAL_CONTIGUITY_INFORMATION;
struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER;
struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT;
struct _MEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION;
struct _CRYPT_PKCS8_EXPORT_PARAMS;
struct tagMENUINFO;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObjectEx> >;
struct _ICONINFOEXA;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
class CBrokeredClipDataObject::GetCanonicalFormatEtc::__l8::<lambda_081b6c7677eb82075ed79974a043e870>;
struct _SYSTEM_VSM_PROTECTION_INFORMATION;
struct tagAUDIODESCRIPTION;
struct _SERVICE_FAILURE_ACTIONSW;
struct _CMC_PEND_INFO;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct NCryptProviderName;
struct _PUBKEY;
struct tagBITMAPFILEHEADER;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _SINGLE_LIST_ENTRY32;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::ShutDown::__l2::<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>;
struct _EVENTLOG_FULL_INFORMATION;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::ReactivateAndUndo::__l2::<lambda_9f5ff7c0875bbd6db2722caf2496ccad>;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::FileHandleTraits>;
struct Microsoft::WRL::Details::RemoveReference<Microsoft::WRL::Wrappers::Event &>;
struct _DELETE_STORAGE_RESERVE_INPUT;
class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Detach::__l2::<lambda_d914c7f54183b33a257332a7d99c0d41>;
struct Microsoft::WRL::Details::RemoveReference<Microsoft::WRL::Wrappers::Semaphore &>;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
struct _QUERY_FILE_LAYOUT_OUTPUT;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::CloseAccessor::__l2::<lambda_c3d9c36ff6c5e276434071298f6b4b2c>;
struct _QUAD;
struct HIMCC__;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::CreateAccessor::__l2::<lambda_c0fa3d92ef3684ffb99dddd895e07e56>;
struct _COUNTED_REASON_CONTEXT;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
struct IXMLDOMNotation;
struct tagHARDWAREHOOKSTRUCT;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::Init::__l2::<lambda_eb81b7dcb3076a64e0db4008f1f3b137>;
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
struct _FLOAT128;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION;
struct _APPCATEGORYINFO;
struct _MOUSE_EVENT_RECORD;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct _INPUT_RECORD;
struct _SE_SET_FILE_CACHE_ORIGIN_CLAIM_INFORMATION;
struct _SYSTEM_WORKINGSET_ENTRY;
struct _KAFFINITY_ENUMERATION_CONTEXT;
struct _OSVERSIONINFOEXW;
struct _OBJECTID;
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
struct _userSTGMEDIUM::_STGMEDIUM_UNION;
union _userHMETAFILE::__MIDL_IWinTypes_0004;
struct _userHMETAFILE;
struct _BYTE_BLOB;
struct _userHENHMETAFILE;
struct tagEMROFFSETCLIPRGN;
struct IInitActivationPropertiesIn;
union _userHBITMAP::__MIDL_IWinTypes_0007;
struct _userHBITMAP;
struct _userBITMAP;
union _userHPALETTE::__MIDL_IWinTypes_0008;
struct _userHPALETTE;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;
struct _userHGLOBAL;
struct _CRYPT_CONTEXT_CONFIG;
struct _SYSTEM_POOLTAG;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _OCSP_BASIC_REVOKED_INFO;
struct wistd::__lazy_and_impl<1>;
struct _PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
struct wistd::__make_unsigned<long,1>;
struct _WOW64_CONTEXT;
struct _CMS_DH_KEY_INFO;
struct IStubManagerDisconnect;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct SYSTEM_POWER_CAPABILITIES;
struct AsyncIPipeLong;
struct _CM_PCCARD_DEVICE_DATA;
struct IMarshalSomeone;
struct _SYSTEM_ELAM_CERTIFICATE_INFORMATION;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _RTL_QUERY_REGISTRY_TABLE;
struct IProxyServerIdentity;
struct ISyncAdvise;
struct DedicatedAllocator<DISPATCH_SERVER_FRAME>;
struct _CERT_AUTHORITY_KEY_ID2_INFO;
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
class CUnknown;
struct _IMAGE_CHPE_RANGE_ENTRY;
struct _THREAD_UMS_INFORMATION;
struct _KEY_LAYER_INFORMATION;
struct _REFS_STREAM_SNAPSHOT_MANAGEMENT_INPUT_BUFFER;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
struct $_s__RTTIBaseClassArray$_extraBytes_24;
class CLimitedWritableStorage::SetElementTimes::__l2::<lambda_14b25aaf0db7771cb0bb6bcb1052a1a0>;
struct $_TypeDescriptor$_extraBytes_27;
class MAP<XSLOCK,MAP_KEY_GUID,NdrTypeInfo *>;
struct _FILE_REGION_INPUT;
class CLimitedStreamBase::Read::__l2::<lambda_1bddd38f1c2c61820f0511b0dcb5aeed>;
struct _OBJECT_BASIC_INFORMATION;
struct _CONTAINER_VOLUME_STATE;
struct _REMOTE_NAME_INFOA;
struct ImplementationHelpersDetails::IsUuidOfAnyHelper<>;
struct _ITEM_INFO;
struct std::_Atomic_integral_facade<long>;
struct _JOBOBJECT_CONTAINER_IDENTIFIER_V2;
struct _SCRUB_DATA_INPUT;
struct IActivationPropOutClean;
struct _RTL_HEAP_PARAMETERS;
struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS;
class AdHocInterceptor<ISearchProtocol>;
struct _RTL_SEGMENT_HEAP_VA_CALLBACKS;
class CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
class CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
struct IElementBehaviorSite;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct IInterfaceRelated;
struct _SERVICE_FAILURE_ACTIONS_FLAG;
struct _FILE_ALLOCATION_INFORMATION;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
struct ICallFrame;
struct _CMSG_CNG_CONTENT_DECRYPT_INFO;
struct RPC_IMPORT_CONTEXT_P;
struct _MARK_HANDLE_INFO;
struct IInternetBindInfo;
struct _MEMORYSTATUS;
struct _RTL_BSD_ITEM;
struct _LEAP_SECOND_DATA_REGISTRY_ENTRY;
struct tagMONITORINFO;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION;
struct _POWER_USER_PRESENCE;
union IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA;
struct _OPERATION_START_PARAMETERS;
struct _tagBINDINFO;
struct _RTLP_HEAP_SERIALIZED_MAPPING;
struct _DEVICE_DATA_SET_RANGE;
struct _currencyfmtW;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
struct IRpcHelper;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct _SYSTEM_PLATFORM_BINARY_INFORMATION;
class CLimitedWritableStorage::CreateStorage::__l2::<lambda_301f3587bff926b4515b80b83f6cb3c1>;
class CLinkable;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES;
struct ANON_OBJECT_HEADER;
struct timespec;
struct _RTL_RESOURCE;
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
class Microsoft::WRL::ComPtr<IInterceptorBase>;
struct _IMAGE_ARM64EC_METADATA;
struct _SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION;
class CLimitedStreamBase::LockRegion::__l2::<lambda_40922ab18465b876057f1185cc36db8e>;
struct tagLOGBRUSH;
class wil::details::<lambda_afb6b96a417bace253e89dfd48515382>;
struct tagMENUGETOBJECTINFO;
struct _ENUM_SERVICE_STATUS_PROCESSA;
struct AllocateThrow;
class CReadOnlyStorage::CopyTo::__l11::<lambda_43780e76f89b37287b17c05597560ff1>;
struct tagCOMBOBOXINFO;
struct __MIDL___MIDL_itf_wtypes_0000_0001_0001;
class HashWSTR;
struct _TOKEN_BNO_ISOLATION_INFORMATION;
class HashGUID;
struct _RPC_SECURITY_QOS_V3_W;
struct __MIDL_ICallFrame_0002;
struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>;
struct _CERT_ECC_SIGNATURE;
struct _SHFILEOPSTRUCTA;
struct INTERPRETER_FLAGS;
struct MAP_HASHER<MAP_KEY_GUID>;
union _FOUR_PART_VERSION;
class OleDragDropTracing::Instance::__l2::<lambda_56826768d7de29d088611d7a51e75d86>;
struct _LUNICODE_STRING;
struct _LBLOB;
struct _MEMORY_BAD_IDENTITY_INFORMATION;
struct _RTL_UNLOAD_EVENT_TRACE;
struct _MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION;
struct _CERT_SYSTEM_STORE_INFO;
struct _POWER_SESSION_TIMEOUTS;
struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT;
class AdHocCallFrame<IOleInPlaceObjectWindowless,<lambda_de8aae3bf856bab3be50d4e660b6e6f6> >;
struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Next::__l2::<lambda_67bd47486a8986df7d6cb4f09c809e77>;
class AdHocCallFrame<IOleInPlaceObject,<lambda_9f5ff7c0875bbd6db2722caf2496ccad> >;
struct _SYSTEM_MEMORY_USAGE_INFORMATION;
class AdHocCallFrame<IOleInPlaceObject,<lambda_4ca0b07237b8f95da55952ce2c79cfa1> >;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct IOleInPlaceActiveObject;
struct PPM_WMI_PERF_STATES_EX;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_RESOURCE_LIST;
struct _CRYPT_BLOB_ARRAY;
class CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner;
class CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >;
struct _EXTENT_READ_CACHE_INFO_BUFFER;
struct tagRemSTGMEDIUM;
class CLimitedWritableStorage::CopyTo::__l8::<lambda_715367da935c5581b17c1a3be965339d>;
class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::Load::__l2::<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>;
struct _SYSTEM_OBJECT_INFORMATION;
class CDragOperation::IsDropAllowed::__l2::<lambda_f16c171f4a25340757779972fb9deba3>;
class AdHocCallFrame<IPersistPropertyBag,<lambda_f62c6972a04c90594c2afef0651ebd10> >;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _CERT_KEY_ATTRIBUTES_INFO;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _CERT_PRIVATE_KEY_VALIDITY;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
struct _NV_MEMORY_RANGE;
struct tagRAWINPUTDEVICE;
struct _XSTATE_CONTEXT;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct _XSAVE_AREA;
class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>;
struct _FILE_END_OF_FILE_INFO;
class AdHocCallFrame<IOleInPlaceObject,<lambda_8cabb7dbc03479911dce050d042462ba> >;
class CLimitedWritableStorage::Revert::__l2::<lambda_828ba3180f084769e3a35cd5c8d78af3>;
class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>;
struct _HV_DETAILS;
class CWrapperBase<IStream>::{dtor}::__l2::<lambda_857927a93fbdbf954257c5a12af5e448>;
class AdHocCallFrame<IOleInPlaceObject,<lambda_6c7999a0825145bb8114241691193a37> >;
struct _FILE_LINK_INFORMATION;
struct IComCatalogLocation;
struct _CRYPT_DECRYPT_MESSAGE_PARA;
struct pvalueW;
struct _SERVICE_DELAYED_AUTO_START_INFO;
struct _CERT_X942_DH_VALIDATION_PARAMS;
struct _CMSG_KEY_AGREE_ENCRYPT_INFO;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
class AdHocCallFrame<IOleWindow,<lambda_92c1c2c09ef3e1efce6163781ee57e61> >;
struct _SYSTEM_ACTIVITY_MODERATION_INFO;
struct _PROCESS_FOREGROUND_BACKGROUND;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _CERT_NAME_VALUE;
struct _CONTAINER_ROOT_INFO_INPUT;
struct _FILE_DISPOSITION_INFORMATION_EX;
class CWrapperBase<IEnumSTATSTG>::{dtor}::__l2::<lambda_8f13d703fe13c76f69ce08951bcc75b5>;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _ENLISTMENT_BASIC_INFORMATION;
struct _SYSTEM_HYPERVISOR_BOOT_PAGES_INFORMATION;
struct _MEMORY_PARTITION_ATTRIBUTE_INFORMATION;
struct _SYSDBG_IO_SPACE;
struct _ENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_OUTFLAGS>;
struct _SYSTEM_INFO;
struct _RTL_IMAGE_MITIGATION_SEHOP_POLICY;
struct _RTL_VERIFIER_ALL_INFORMATION;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct std::_Atomic_storage<unsigned long,4>;
struct tagDROPSTRUCT;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct _XSAVE_CET_U_FORMAT;
class CLimitedWritableStorage::CreateStream::__l2::<lambda_9248f5e097f132b19a75522d4d896069>;
struct std::_Atomic_integral<unsigned long,4>;
struct ITimeAndNoticeControl;
class AdHocCallFrame<IElementBehavior,<lambda_d914c7f54183b33a257332a7d99c0d41> >;
struct std::_Atomic_integral_facade<unsigned long>;
struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT;
struct _SYSTEM_WRITE_CONSTRAINT_INFORMATION;
struct tagRECONVERTSTRING;
struct SYSTEM_BATTERY_STATE;
struct _SHFILEOPSTRUCTW;
class CReadOnlyStorage::Stat::__l2::<lambda_9ee25847ed46d519a0f8b2a7b76ad1cb>;
struct _SPARSE_OVERALLOCATE_DATA;
struct tagEMRPOLYTEXTOUTA;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _ENUM_FLAG_SIZED_INTEGER<enum FILE_WRITE_FLAGS>;
struct _CMSG_CTRL_DECRYPT_PARA;
struct _RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY;
class AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>;
struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class CReadOnlyStorage::EnumElements::__l2::<lambda_c2debb2788f3ef9f8ec79bcf639a9eba>;
class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>;
struct _SCHANNEL_ALG;
struct _TIME_DYNAMIC_ZONE_INFORMATION;
struct ISearchProtocol;
struct DISPLAYCONFIG_ADAPTER_NAME;
struct _ACL_REVISION_INFORMATION;
struct _NOTIFYICONIDENTIFIER;
struct _RPC_TRANSFER_SYNTAX;
struct _FILE_INFORMATION_DEFINITION;
class AdHocCallFrame<ISearchProtocol,<lambda_202ebde2c4736aa82d78f43a76d480cf> >;
struct _PROCESS_WORKING_SET_CONTROL;
struct _FILE_ALLOCATION_INFO;
struct _CRYPT_SMIME_CAPABILITY;
class CWrapperBase<IUnknown>::{dtor}::__l2::<lambda_c819397f95c37f5ccdbe095601a61b25>;
class CLimitedWritableStorage::OpenStream::__l2::<lambda_d171dd235d7ccf127f18467165bcf888>;
struct _FILE_PROVIDER_EXTERNAL_INFO_V0;
struct tagCHANGEFILTERSTRUCT;
class AdHocCallFrame<ISearchProtocol,<lambda_ab7661f9106dbe63888238c0c4789392> >;
struct _SERVICE_TABLE_ENTRYW;
class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
struct _PROCESS_SECURITY_DOMAIN_INFORMATION;
struct _UNIVERSAL_NAME_INFOW;
class Microsoft::WRL::ComPtr<ITypeInfo>;
struct _MEMORY_SHARED_COMMIT_INFORMATION;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct _CRYPT_DECODE_PARA;
class CBrokeredClipDataObject::QueryGetData::__l8::<lambda_e5c40cffaeebcd7486ba9b9e983680d3>;
struct _CONSOLE_SCREEN_BUFFER_INFOEX;
struct _CMC_TAGGED_ATTRIBUTE;
struct _MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES;
class Microsoft::WRL::ComPtr<NdrTypeInfo>;
struct _WIN32_STREAM_ID;
struct _div_t;
struct _SYSTEM_KERNEL_VA_SHADOW_INFORMATION;
class CDragOperation::RuntimeClassInitialize::__l69::<lambda_702d43245a365bbf444b64ed9d04c906>;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
class IntRegion<unsigned long,unsigned __int64>;
class SafeCastHelper<unsigned long,unsigned int,0>;
struct _CRYPT_TIMESTAMP_INFO;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator;
class CTSmartPtr_PolicyComplete<CTContainer_PolicyLocalMem>;
class CLocalMemPtr<unsigned short>;
struct _SCOPE_TABLE_AMD64;
struct _SYSTEM_CALL_COUNT_INFORMATION;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct threadlocaleinfostruct;
struct _FILE_STANDARD_INFORMATION_EX;
struct _ENCRYPTION_KEY_CTRL_INPUT;
struct _FSCTL_OFFLOAD_READ_OUTPUT;
struct IInternetHostSecurityManager;
class wil::details::<lambda_0fc8029a6791e39f2db3c508b91189aa>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<INotARealInterface> >;
struct _CERT_GENERAL_SUBTREE;
struct _SYSTEM_HYPERVISOR_DETAIL_INFORMATION;
struct CDragOperation::IsDropAllowed::__l2::PolicyArguments;
struct tagTTPOLYGONHEADER;
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
union _JOBOBJECT_ENERGY_TRACKING_STATE;
struct _WIM_PROVIDER_CONTROL_INTEGRITY;
struct _CRYPT_SIGN_MESSAGE_PARA;
struct _MUTANT_OWNER_INFORMATION;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
class wil::details::FeatureStateManager::EnsureSubscribedToProcessWideUsageFlushUnderLock::__l5::<lambda_152aa9d2a3a0648fa2fa7fcef514b376>;
struct _CRL_FIND_ISSUED_FOR_PARA;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _SQM_STREAM_ENTRY_EX;
struct _CERT_BIOMETRIC_DATA;
struct _SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION;
struct _RTL_CRITICAL_SECTION32;
struct tagEMRFRAMERGN;
struct _CRYPT_VERIFY_MESSAGE_PARA;
struct _NTFS_STATISTICS_EX;
struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
struct _FILE_DISPOSITION_INFO_EX;
struct _ENUM_FLAG_SIZED_INTEGER<enum AddPackageDependencyOptions>;
struct _BCRYPT_OID_LIST;
class CDefClassFactory;
struct _SID_AND_ATTRIBUTES_HASH;
struct tagOLEPRESSTMHDR;
struct _BCRYPT_OAEP_PADDING_INFO;
struct MEM_EXTENDED_PARAMETER;
struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX;
struct _X86_NT5_CONTEXT;
struct _exception;
struct tagSCROLLBARINFO;
struct HRGN__;
struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION;
struct _FILESYSTEM_STATISTICS_EX;
struct _CMC_TAGGED_OTHER_MSG;
union _PROCESS_LOGGING_INFORMATION;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct _BCRYPT_KEY_BLOB;
struct tagEMRANGLEARC;
struct _RESUME_PERFORMANCE;
struct _RTL_DEBUG_INFORMATION;
struct _PROCESS_BASIC_INFORMATION64;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
class ScheduleClipboardWorkWithPLM::__l2::<lambda_0400965d427fb7c7c2a6231862b780df>;
struct _POWER_THROTTLING_THREAD_STATE;
struct _RTL_SPARSE_BITMAP_RANGE;
struct _KERNEL_USER_TIMES;
struct _CTL_USAGE_MATCH;
struct _ENUM_FLAG_SIZED_INTEGER<enum CreatePackageDependencyOptions>;
struct IXMLDOMProcessingInstruction;
struct AsyncIAdviseSink;
struct _SYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_OUTPUT;
class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Lookup::__l5::<lambda_e2e96e51e42edcad6b3668af4a803eaf>;
struct _CMC_ADD_ATTRIBUTES_INFO;
struct _REARRANGE_FILE_DATA;
struct _SEMAPHORE_BASIC_INFORMATION;
struct XLOCK_LEAF;
struct LEGACY_INTERCEPTOR;
struct tagMSGBOXPARAMSW;
class GenericInstantiator<DISPATCH_INTERCEPTOR>;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct _REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER;
struct _RTL_IMAGE_POLICY_METADATA;
struct _MEMORY_BASIC_INFORMATION32;
struct _CSV_QUERY_FILE_REVISION;
struct _CSV_QUERY_MDS_PATH_V2;
struct ImplementationHelpersDetails::IsUuidOfAnyInterfaceInListHelper<InterfaceList<> >;
struct _INCREMENTAL_ACCESS_INFO;
struct _SHARED_VIRTUAL_DISK_SUPPORT;
class AdHocInterceptor<ISearchProtocol2>;
struct _FILE_FS_FULL_SIZE_INFORMATION_EX;
struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct _BCryptBuffer;
struct tagEMRSETVIEWPORTORGEX;
struct _CRYPT_ENCRYPT_MESSAGE_PARA;
struct _MAT2;
struct _RPC_SECURITY_QOS_V5_W;
struct tagEMRCREATEPALETTE;
struct wil::details::variable_size<1>;
struct _ALPC_BASIC_INFORMATION;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct _ENUM_FLAG_SIZED_INTEGER<enum _MACHINE_ATTRIBUTES>;
struct _RTL_PHYSICAL_MEMORY_INFO;
struct _MEMORY_PARTITION_INITIAL_ADD_INFORMATION;
struct _CRL_ISSUING_DIST_POINT;
struct tagPOINTER_TYPE_INFO;
struct ITypeMarshal;
struct IUriContainer;
struct _CRYPT_HASH_INFO;
struct _FILE_LEVEL_TRIM_OUTPUT;
struct _FSCTL_QUERY_REGION_INFO_INPUT;
struct PACKAGE_INFO;
struct _RTL_FEATURE_USAGE_SUBSCRIPTION_TABLE;
struct _FILE_ID_INFO;
struct _TEB_ACTIVE_FRAME_EX;
struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS;
struct _SYSTEM_POOL_ZEROING_INFORMATION;
struct _IMAGE_DEBUG_DIRECTORY;
struct _currencyfmtA;
struct tagRPC_CALL_ATTRIBUTES_V1_A;
class CALLFRAME_CACHE_ENTRY<NdrTypeInfo>;
struct _DUPLICATE_CLUSTER_DATA;
struct _MEMORY_PARTITION_NODE_INFORMATION;
struct _REMOTE_NAME_INFOW;
struct _RTL_HEAP_TAG_INFO;
struct SERVICE_STATUS_HANDLE__;
struct _CMC_ADD_EXTENSIONS_INFO;
struct _DISPATCHER_CONTEXT;
struct IAbandonmentNotification;
struct _BCRYPT_DSA_PARAMETER_HEADER_V2;
struct _SE_SET_FILE_CACHE_INFORMATION;
struct _LDR_DATA_TABLE_ENTRY64;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT;
struct _tagPROTOCOLDATA;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct wistd::__libcpp_is_integral<signed char>;
struct wistd::__libcpp_is_integral<unsigned short>;
struct wistd::__make_signed<int,1>;
struct wistd::__type_list<unsigned char,wistd::__type_list<unsigned short,wistd::__type_list<unsigned int,wistd::__type_list<unsigned long,wistd::__type_list<unsigned __int64,wistd::__nat> > > > >;
struct wistd::__make_unsigned<unsigned int,1>;
struct wistd::__make_unsigned<short,1>;
struct wistd::__is_nullptr_t_impl<std::nullptr_t>;
class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>::GetWindow::__l2::<lambda_a07c95792dcef3326839cb72fdfd78fd>;
struct wistd::__libcpp_is_floating_point<long double>;
struct wistd::__type_list<signed char,wistd::__type_list<short,wistd::__type_list<int,wistd::__type_list<long,wistd::__type_list<__int64,wistd::__nat> > > > >;
struct wistd::is_scalar<std::nullptr_t>;
struct wistd::__make_signed<unsigned short,1>;
struct wistd::__libcpp_is_void<void>;
struct wistd::is_class<int>;
struct wistd::__two;
struct wistd::__make_signed<__int64,1>;
struct wistd::__libcpp_is_integral<unsigned __int64>;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct wistd::__make_signed<unsigned __int64,1>;
struct wistd::__libcpp_is_integral<unsigned char>;
struct wistd::__extract_key_fail_tag;
struct wistd::__make_unsigned<__int64,1>;
struct wistd::__numeric_type<void>;
struct wistd::__extract_key_self_tag;
struct wistd::__libcpp_is_integral<char>;
struct wistd::__libcpp_is_integral<short>;
struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO;
struct _CM_EISA_FUNCTION_INFORMATION;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct _RTL_RVA_LIST_ITERATOR;
struct IHTMLElement;
struct tagIMEMENUITEMINFOW;
struct tagACCESSTIMEOUT;
struct _SYSTEM_HOT_PATCH_REGISTRY_VALUE;
struct _RTL_SPARSE_BITMAP_RUN;
struct _CFG_CALL_TARGET_LIST_INFORMATION;
struct value_entA;
struct _GDI_NONREMOTE;
struct _DWORD_BLOB;
struct _FILE_PATH;
struct _SL_HWID_DEVICE_INFO;
struct _VOLUME_REFS_INFO_BUFFER;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct pvalueA;
class AdHocCallFrame<ISearchProtocol,<lambda_c3d9c36ff6c5e276434071298f6b4b2c> >;
struct _FILE_ID_EXTD_BOTH_DIR_INFORMATION;
struct _PROCESS_TLS_INFORMATION;
struct _RTL_BITMAP_RUN;
struct _RTL_CIRCULAR_LIST_HEAD;
class AdHocCallFrame<ISearchProtocol,<lambda_c0fa3d92ef3684ffb99dddd895e07e56> >;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _SYSTEM_ACPI_AUDIT_INFORMATION;
struct _RTL_ENCLAVE_LAUNCH_TOKEN;
struct _VARIABLE_NAME;
struct tagTOUCHINPUT;
struct _ALPC_DIRECT_ATTR;
struct tagSTRINGBINDING;
struct _CERT_NAME_CONSTRAINTS_INFO;
struct tagEMRNAMEDESCAPE;
struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE;
struct _RTL_SEGMENT_HEAP_PARAMETERS;
struct _BCRYPT_KEY_DATA_BLOB_HEADER;
struct _KEY_NODE_INFORMATION;
struct _RSAPUBKEY;
struct _FP_IEEE_RECORD;
struct _SYSTEM_CONSOLE_INFORMATION;
struct _SYSTEM_POWER_INFORMATION;
struct _TP_ALPC;
struct _REFS_QUERY_VOLUME_DEDUP_INFO_OUTPUT_BUFFER;
struct _PO_WAKE_SOURCE_TIMER;
struct tagEMREXTESCAPE;
struct _MANAGEDAPPLICATION;
struct std::_Floating_type_traits<float>;
struct std::_Make_signed2<4>;
struct _OCSP_RESPONSE_INFO;
struct std::_Invoker_pmf_object;
struct std::_Invoker_pmd_pointer;
struct std::minus<void>;
struct _EXTENDED_CREATE_INFORMATION_32;
struct std::_Select<0>;
struct std::_Floating_type_traits<double>;
struct std::_Make_unsigned2<1>;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS>;
struct ICreateErrorInfo;
struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
struct _DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct PROCESSOR_IDLESTATE_POLICY;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
struct _USER_MARSHAL_CB;
struct _CTL_VERIFY_USAGE_PARA;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _numberfmtA;
struct _TRANSACTION_NOTIFICATION;
struct tagEMRSETPALETTEENTRIES;
struct _tagSOFTDISTINFO;
struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
struct tagMONITORINFOEXA;
struct _DOCINFOW;
struct tagMOUSEKEYS;
struct _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES;
struct _RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER;
struct _TRANSACTION_PROPERTIES_INFORMATION;
struct _CMSG_KEY_TRANS_ENCRYPT_INFO;
struct _wfinddata64i32_t;
struct _FILE_STREAM_INFO;
struct _CM_VIDEO_DEVICE_DATA;
struct _INITIAL_TEB;
struct _MEMORY_ENCLAVE_IMAGE_INFORMATION;
struct _WOF_EXTERNAL_FILE_ID;
struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT;
struct _REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER;
struct _CRYPT_URL_INFO;
union _userCLIPFORMAT::__MIDL_IWinTypes_0001;
struct _userCLIPFORMAT;
struct tagMULTIKEYHELPW;
struct _BOOT_OPTIONS;
struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_REQUEST;
struct _ENUM_FLAG_SIZED_INTEGER<enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS>;
struct _MEMORY_COMBINE_INFORMATION;
struct _RTL_UMS_CONTEXT;
struct tagNMHDR;
struct _RTL_UMS_COMPLETION_LIST;
struct _SYSTEM_INTERRUPT_CPU_SET_INFORMATION;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
struct tagWTSSESSION_NOTIFICATION;
struct _CRYPT_IMAGE_REG;
struct _CERT_DSS_PARAMETERS;
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
struct _JOBOBJECT_PAGE_PRIORITY_LIMIT;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _FILE_QUOTA_INFORMATION;
struct _OCSP_REQUEST_INFO;
struct IStdMarshalInfo;
struct _CRYPT_TIMESTAMP_CONTEXT;
struct _OCSP_REQUEST_ENTRY;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _RTL_USER_PROCESS_EXTENDED_PARAMETERS;
struct _KEY_VALUE_LAYER_INFORMATION;
struct DISPLAYCONFIG_TARGET_BASE_TYPE;
struct _RTL_IMAGE_MITIGATION_USER_SHADOW_STACK_POLICY;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
struct _RTL_RETPOLINE_ROUTINES;
struct tagCWPSTRUCT;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS>;
struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION;
struct _IO_STATUS_BLOCK32;
struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION;
struct _RTL_HANDLE_TABLE;
struct _NCRYPT_CIPHER_PADDING_INFO;
struct tagEMREXTTEXTOUTA;
struct _CMC_DATA_INFO;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct NET_ADDRESS_INFO_;
struct wil::details::variable_size<2>;
struct tagNC_ADDRESS;
struct _CM_EISA_SLOT_INFORMATION;
struct _SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION;
struct _FILE_REMOTE_PROTOCOL_INFO;
struct _MEMORYSTATUSEX;
struct _PACKAGE_INFO_REFERENCE;
struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION;
struct BITMAPV4HEADER;
struct HMONITOR__;
struct _SYSTEM_MEMORY_INFORMATION;
struct _PLEX_READ_DATA_REQUEST;
struct _SYSTEM_MANUFACTURING_INFORMATION;
struct _FILE_STORAGE_RESERVE_ID_INFORMATION;
struct _SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION;
struct _IMAGE_HOT_PATCH_INFO;
struct IProgressNotify;
struct _SE_IMPERSONATION_STATE;
struct USN_TRACK_MODIFIED_RANGES;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct USN_RECORD_V2;
union USN_RECORD_UNION;
struct tagRemSNB;
struct MOVE_FILE_RECORD_DATA;
struct READ_FILE_USN_DATA;
struct POWER_STATE_HANDLER;
struct _FILE_LAYOUT_INFO_ENTRY;
struct PPM_WMI_IDLE_STATES;
struct IFastRundown;
struct PPM_IDLE_ACCOUNTING_EX;
struct PPM_PERFSTATE_EVENT;
struct PPM_THERMAL_POLICY_EVENT;
struct REFS_VOLUME_DATA_BUFFER;
struct _CRT_DOUBLE;
struct BITMAPV5HEADER;
struct FLASHWINFO;
struct _REASON_BUFFER;
struct RPC_INTERFACE_TEMPLATEA;
struct READ_USN_JOURNAL_DATA_V0;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION;
struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION;
struct _PARSE_MESSAGE_CONTEXT;
struct _CPS_URLS;
struct _FILE_IS_REMOTE_DEVICE_INFORMATION;
struct _PROCESS_KEEPALIVE_COUNT_INFORMATION;
struct _THREAD_PROFILING_INFORMATION;
struct BSMINFO;
struct _CMSG_CONTENT_ENCRYPT_INFO;
struct _CMSG_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
struct _SYSTEM_DEVICE_DATA_INFORMATION;
struct _RTL_HEAP_STACK_CONTROL;
struct _PUBKEYVER3;
struct _MESSAGE_RESOURCE_ENTRY;
struct _CMSG_CMS_RECIPIENT_INFO;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _TOKEN_USER_CLAIMS;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _IMAGE_CHPE_METADATA_X86;
struct _FILE_MEMORY_PARTITION_INFORMATION;
struct _T2_SET_PARAMETERS_V0;
struct tagMSGBOXPARAMSA;
struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO;
struct _CTL_FIND_USAGE_PARA;
struct _CRYPTNET_URL_CACHE_RESPONSE_INFO;
struct _SYSTEM_FILECACHE_INFORMATION;
struct tagRemHPALETTE;
struct _SERVICE_DESCRIPTIONA;
struct _CERT_TPM_SPECIFICATION_INFO;
struct IWinInetHttpInfo;
struct _RTL_PROTECTED_ACCESS;
struct _IMAGE_NT_HEADERS;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION;
struct _SYSDBG_CONTROL_SPACE;
struct _FILE_ID_INFORMATION;
struct _SHRINK_VOLUME_INFORMATION;
struct _MIDL_INTERCEPTION_INFO;
struct tagCOMPOSITIONFORM;
struct _CERT_AUTHORITY_KEY_ID_INFO;
struct _MEMORY_EXHAUSTION_INFORMATION;
struct _CRYPT_CONTENT_INFO;
struct _FILE_ATTRIBUTE_TAG_INFO;
struct _CMSG_STREAM_INFO;
struct tagPELARRAY;
struct _ALPC_TOKEN_ATTR;
struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION;
struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS>;
struct _RTL_BACKOFF;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
struct _MEMORY_SCRUB_INFORMATION;
struct tagCOLORMATCHTOTARGET;
struct _BCRYPT_DSA_KEY_BLOB_V2;
struct _CRYPT_AES_128_KEY_STATE;
struct _IMAGE_HOT_PATCH_HASHES;
struct _PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION;
struct tagPOLYTEXTA;
struct _WIN32_MEMORY_RANGE_ENTRY;
struct _RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY;
struct tagEMRGRADIENTFILL;
struct tagEMRARC;
struct _FILE_ID_EXTD_DIR_INFORMATION;
struct _SYSTEM_XFG_FAILURE_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION;
struct _CSV_SET_VOLUME_ID;
struct _PS_CPU_QUOTA_SET_INFORMATION;
struct _Real_widened<float,float>;
struct _SYSTEM_NET_RATE_CONTROL_SET_CONTEXT;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION;
struct tagOIFI;
struct _CERT_NAME_INFO;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
struct tagTITLEBARINFOEX;
struct _PAGE_PRIORITY_INFORMATION;
struct _IO_ERROR_LOG_MESSAGE;
struct NTFS_VOLUME_DATA_BUFFER;
struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA;
struct _SCONTEXT_QUEUE;
struct _CERT_ACCESS_DESCRIPTION;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<2>;
struct _PROCESS_WAKE_INFORMATION;
struct _VM_COUNTERS;
struct _TOKEN_OWNER;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct _SYSDBG_MSR;
struct _CERT_REGISTRY_STORE_ROAMING_PARA;
struct _TPP_THREAD_DATA_CALLBACK;
struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED;
struct _RTL_DISK_WRITE_CONSTRAINT_INFO;
struct _SYSTEM_ROOT_SILO_INFORMATION;
struct IGetCatalogObject;
struct ISCMProcessControl;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A;
struct _OSVERSIONINFOEXA;
struct _CERT_BASIC_CONSTRAINTS2_INFO;
struct tagOXID_INFO;
struct _POWER_IDLE_RESILIENCY;
struct _SERVICE_TRIGGER_INFO;
struct _CRYPT_ECC_PRIVATE_KEY_INFO;
struct _FILE_GET_QUOTA_INFORMATION;
struct _ALPC_HANDLE_ATTR;
struct _RPC_PROTSEQ_VECTORA;
struct PPM_WMI_PERF_STATES;
struct _GET_FILTER_FILE_IDENTIFIER_INPUT;
struct _TOKEN_SID_INFORMATION;
struct _ALPC_MESSAGE_HANDLE_INFORMATION;
struct _CRYPT_SMART_CARD_ROOT_INFO;
struct _IMAGE_ENCLAVE_CONFIG64;
struct tagCANDIDATEFORM;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct _IMAGE_LOAD_CONFIG_DIRECTORY32;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
struct _CRYPT_PASSWORD_CREDENTIALSA;
struct _LDR_RESLOADER_RET;
struct tagWNDCLASSA;
struct _RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct ISupportErrorInfo;
struct _CM_SONIC_DEVICE_DATA;
struct _SYSTEM_SECUREBOOT_INFORMATION;
struct tagEMRSELECTOBJECT;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
struct _ImageArchitectureEntry;
struct _REG_NOTIFY_INFORMATION;
struct _FILE_MAILSLOT_PEEK_BUFFER;
struct _IO_SESSION_CONNECT_INFO;
struct _PROV_ENUMALGS_EX;
struct _PROCESS_MITIGATION_SEHOP_POLICY;
struct _RTL_USER_PROCESS_INFORMATION;
struct _FILE_SYSTEM_RECOGNITION_INFORMATION;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _APPCATEGORYINFOLIST;
struct _FILE_IO_COMPLETION_INFORMATION;
struct _SYSTEM_DIF_VOLATILE_INFORMATION;
struct tagEMRPIXELFORMAT;
struct _SYSTEM_PHYSICAL_MEMORY_INFORMATION;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _FILE_KNOWN_FOLDER_INFORMATION;
struct SChannelHookCallInfo;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct _NETWORK_APP_INSTANCE_EA;
union _float_val;
struct _JOB_SET_ARRAY;
struct tagSOAP_ACTIVATION_INFO;
struct CORRELATION_VECTOR;
struct _SYSTEM_FLAGS_INFORMATION;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct _BOOT_ENTROPY_NT_RESULT;
struct _LCN_WEAK_REFERENCE_BUFFER;
struct tagRID_DEVICE_INFO_HID;
struct tagRID_DEVICE_INFO;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct HFONT__;
struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT;
struct _ENCLAVE_INIT_INFO_VBS;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct BREAK_ON_STATUS_BUFFER;
struct USN_JOURNAL_DATA_V2;
struct FIND_BY_SID_DATA;
struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE;
struct _MEMORY_BASIC_INFORMATION64;
struct _THREAD_TEB_INFORMATION;
struct tagCLEANLOCALSTORAGE;
struct _X86_CALL_FRAME;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA;
struct _SERVICE_START_REASON;
struct _UMS_SCHEDULER_STARTUP_INFO;
struct ANON_OBJECT_HEADER_V2;
struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT;
struct _MANAGE_WRITES_TO_EXECUTABLE_MEMORY;
struct _CRYPT_CREDENTIALS;
struct _FILE_FS_SECTOR_SIZE_INFORMATION;
struct _ARM64EC_NT_CONTEXT;
struct _WORD_BLOB;
struct tagEMRSETPIXELV;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct _CONSOLE_READCONSOLE_CONTROL;
struct _QUERY_STORAGE_RESERVE_OUTPUT;
struct _ABC;
struct _DEDUP_CHUNK_INFORMATION_HASH32;
struct tagEMRSETWORLDTRANSFORM;
struct _tagPROTOCOL_ARGUMENT;
struct __crt_locale_data_public;
struct _CERT_CHAIN;
struct _BCRYPT_DSA_KEY_BLOB;
struct _DUPLICATE_EXTENTS_DATA_EX32;
struct tagEMRSTRETCHDIBITS;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct HWINSTA__;
struct _FILE_LINKS_INFORMATION;
struct tagMINIMIZEDMETRICS;
struct tagHIGHCONTRASTA;
struct tagEMRELLIPSE;
union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT;
struct _KEY_FLAGS_INFORMATION;
struct HSYNTHETICPOINTERDEVICE__;
struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct __BCRYPT_KEY_LENGTHS_STRUCT;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _RTL_FEATURE_CONFIGURATION_TABLE;
struct tagGLYPHSET;
struct _ENUM_FLAG_INTEGER_FOR_SIZE<8>;
struct _QUERY_SERVICE_CONFIGA;
struct tagEMRFORMAT;
struct PROCESSOR_PERFSTATE_POLICY;
struct tagREGISTERWORDA;
struct _CM_INT13_DRIVE_PARAMETER;
struct _RPC_BINDING_HANDLE_SECURITY_V1_W;
struct _CERT_KEY_USAGE_RESTRICTION_INFO;
struct COPYFILE2_EXTENDED_PARAMETERS_V2;
struct _RTL_RETPOLINE_RELOCATION_INDEX;
struct IXMLDOMCharacterData;
struct tagGCP_RESULTSA;
struct _CERT_PHYSICAL_STORE_INFO;
struct _DUPLICATE_EXTENTS_DATA32;
struct COPYFILE2_EXTENDED_PARAMETERS;
struct _AVRF_MEMORY_RANGE;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct CONFIRMSAFETY;
struct _LDOUBLE;
struct wil::details::variable_size<4>;
struct wil::details::variable_size<8>;
struct wil::variadic_logical_or<>;
struct _LCN_WEAK_REFERENCE_CREATE_INPUT_BUFFER;
struct _FILE_LINKS_FULL_ID_INFORMATION;
struct _CERT_OR_CRL_BUNDLE;
struct DISK_SPACE_INFORMATION;
struct _MEMORY_REGION_INFORMATION;
struct DPI_AWARENESS_CONTEXT__;
class HashVoidPtr;
struct __MIDL_ICallFrame_0004;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;
struct NDR_PROC_HEADER_EXTS64;
struct _timespec64;
struct std::_Atomic_integral<long,4>;
struct _TIMEOUT_INFO;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>::OnWindowMessage::__l2::<lambda_cebf49c479c4b51a7dc8538f3542eaf8>;
struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
class AdHocInterceptorForwarders<IPersist,IPersistPropertyBag>::GetClassID::__l2::<lambda_121ff239fc219aa2df927c67d0376548>;
struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >;
class CStmBuf;
class CDAHolder;
class CFrameFilter;
struct tagWIN16METAFILEPICT;
class CProperty;
struct FCR;
class CPropertySet;
struct tagFORMATIDOFFSET;
class GetCastMethod<unsigned long,unsigned __int64>;
union __m128;
struct wil::details::close_invoke_helper<1,void (__cdecl*)(_TOKEN_LINKED_TOKEN *) noexcept,&wil::details::CloseTokenLinkedToken,_TOKEN_LINKED_TOKEN *>;
struct GetTypeValueImpl<long,enum LoadOrFreeWhy,unsigned long>;
struct CFont::Save::__l2::FONTDATA;

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NameOffset : 31; /* bit position: 0 */
      /* 0x0000 */ unsigned long NameIsString : 1; /* bit position: 31 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Name;
    /* 0x0000 */ unsigned short Id;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long OffsetToData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long OffsetToDirectory : 31; /* bit position: 0 */
      /* 0x0004 */ unsigned long DataIsDirectory : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY; /* size: 0x0008 */

typedef enum __scrt_module_type
{
  dll = 0,
  exe = 1,
} _scrt_module_type, *P_scrt_module_type;

struct IPicture2
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IApplicationAssociationRegistration>
{
  /* 0x0000 */ struct IApplicationAssociationRegistration* ptr_;
}; /* size: 0x0008 */

typedef enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 1,
  NtProductLanManNt = 2,
  NtProductServer = 3,
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;

union std::_Align_type<double,72>
{
  union
  {
    /* 0x0000 */ double _Val;
    /* 0x0000 */ char _Pad[72];
  }; /* size: 0x0048 */
}; /* size: 0x0048 */

enum DISPLAYCONFIG_SCANLINE_ORDERING
{
  DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
  DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
  DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1,
};

class allocateExtra_t
{
}; /* size: 0x0001 */

typedef enum _PNP_QUERY_RELATION
{
  PnpQueryEjectRelations = 0,
  PnpQueryRemovalRelations = 1,
  PnpQueryPowerRelations = 2,
  PnpQueryBusRelations = 3,
  PnpQueryTransportRelations = 4,
  MaxPnpQueryRelations = 5,
} PNP_QUERY_RELATION, *PPNP_QUERY_RELATION;

class CLimitedWritableStorage::Stat::__l2::<lambda_c61124bf9311369ccd740ead4f8d81ee>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ struct tagSTATSTG*& pstatstg;
  /* 0x0010 */ unsigned long& grfStatFlag;
}; /* size: 0x0018 */

class wil::details::StoredCallContextInfo
{
  /* 0x0000 */ long Padding_0[6];
  /* 0x0018 */ BOOL m_ownsMessage;
}; /* size: 0x0020 */

enum wil::FailureType
{
  Exception = 0,
  Return = 1,
  Log = 2,
  FailFast = 3,
};

enum wil::FailureFlags
{
  None = 0,
  RequestFailFast = 1,
  RequestSuppressTelemetry = 2,
  RequestDebugBreak = 4,
  NtStatus = 8,
};

struct wil::CallContextInfo
{
  /* 0x0000 */ long contextId;
  /* 0x0004 */ long Padding_1;
  /* 0x0008 */ const char* contextName;
  /* 0x0010 */ const wchar_t* contextMessage;
}; /* size: 0x0018 */

struct wil::FailureInfo
{
  /* 0x0000 */ enum wil::FailureType type;
  /* 0x0004 */ enum wil::FailureFlags flags;
  /* 0x0008 */ HRESULT hr;
  /* 0x000c */ long status;
  /* 0x0010 */ long failureId;
  /* 0x0014 */ long Padding_2;
  /* 0x0018 */ const wchar_t* pszMessage;
  /* 0x0020 */ unsigned long threadId;
  /* 0x0024 */ long Padding_3;
  /* 0x0028 */ const char* pszCode;
  /* 0x0030 */ const char* pszFunction;
  /* 0x0038 */ const char* pszFile;
  /* 0x0040 */ unsigned int uLineNumber;
  /* 0x0044 */ int cFailureCount;
  /* 0x0048 */ const char* pszCallContext;
  /* 0x0050 */ struct wil::CallContextInfo callContextOriginating;
  /* 0x0068 */ struct wil::CallContextInfo callContextCurrent;
  /* 0x0080 */ const char* pszModule;
  /* 0x0088 */ void* returnAddress;
  /* 0x0090 */ void* callerReturnAddress;
}; /* size: 0x0098 */

class wil::details::shared_buffer
{
  /* 0x0000 */ long* m_pCopy;
  /* 0x0008 */ unsigned __int64 m_size;
}; /* size: 0x0010 */

class wil::StoredFailureInfo
{
  /* 0x0000 */ struct wil::FailureInfo m_failureInfo;
  /* 0x0098 */ class wil::details::shared_buffer m_spStrings;
}; /* size: 0x00a8 */

typedef struct _RTL_SRWLOCK
{
  /* 0x0000 */ void* Ptr;
} RTL_SRWLOCK, *PRTL_SRWLOCK; /* size: 0x0008 */

class wil::srwlock
{
  /* 0x0000 */ struct _RTL_SRWLOCK m_lock;
}; /* size: 0x0008 */

class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_4[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

struct wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_5;
  /* 0x0008 */ class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS
{
  JOB_OBJECT_NET_RATE_CONTROL_ENABLE = 1,
  JOB_OBJECT_NET_RATE_CONTROL_MAX_BANDWIDTH = 2,
  JOB_OBJECT_NET_RATE_CONTROL_DSCP_TAG = 4,
  JOB_OBJECT_NET_RATE_CONTROL_VALID_FLAGS = 7,
};

typedef struct _RTL_RB_TREE
{
  /* 0x0000 */ struct _RTL_BALANCED_NODE* Root;
  union
  {
    /* 0x0008 */ unsigned char Encoded : 1; /* bit position: 0 */
    /* 0x0008 */ struct _RTL_BALANCED_NODE* Min;
  }; /* size: 0x0008 */
} RTL_RB_TREE, *PRTL_RB_TREE; /* size: 0x0010 */

struct tagCAUUID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_6;
  /* 0x0008 */ struct _GUID* pElems;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::UI::WindowId,0>
{
}; /* size: 0x0008 */

enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS
{
  JOB_OBJECT_IO_RATE_CONTROL_ENABLE = 1,
  JOB_OBJECT_IO_RATE_CONTROL_STANDALONE_VOLUME = 2,
  JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ALL = 4,
  JOB_OBJECT_IO_RATE_CONTROL_FORCE_UNIT_ACCESS_ON_SOFT_CAP = 8,
  JOB_OBJECT_IO_RATE_CONTROL_VALID_FLAGS = 15,
};

struct Windows::Foundation::Collections::IIterable_impl<__int64>
{
}; /* size: 0x0008 */

struct wistd::__libcpp_is_integral<long>
{
}; /* size: 0x0001 */

enum wil::details::PendingCallbackCancellationBehavior
{
  Cancel = 0,
  Wait = 1,
  NoWait = 2,
};

struct IXMLDOMImplementation
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<bool,unsigned char>;

typedef enum _USER_ACTIVITY_PRESENCE
{
  PowerUserPresent = 0,
  PowerUserNotPresent = 1,
  PowerUserInactive = 2,
  PowerUserMaximum = 3,
  PowerUserInvalid = 3,
} USER_ACTIVITY_PRESENCE, *PUSER_ACTIVITY_PRESENCE;

class wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>* ptr_;
}; /* size: 0x0008 */

enum ReplacesCorHdrNumericDefines
{
  COMIMAGE_FLAGS_ILONLY = 1,
  COMIMAGE_FLAGS_32BITREQUIRED = 2,
  COMIMAGE_FLAGS_IL_LIBRARY = 4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COMIMAGE_FLAGS_32BITPREFERRED = 0x20000,
  COR_VERSION_MAJOR_V2 = 2,
  COR_VERSION_MAJOR = 2,
  COR_VERSION_MINOR = 5,
  COR_DELETED_NAME_LENGTH = 8,
  COR_VTABLEGAP_NAME_LENGTH = 8,
  NATIVE_TYPE_MAX_CB = 1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
  IMAGE_COR_MIH_METHODRVA = 1,
  IMAGE_COR_MIH_EHRVA = 2,
  IMAGE_COR_MIH_BASICBLOCK = 8,
  COR_VTABLE_32BIT = 1,
  COR_VTABLE_64BIT = 2,
  COR_VTABLE_FROM_UNMANAGED = 4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
  COR_VTABLE_CALL_MOST_DERIVED = 16,
  IMAGE_COR_EATJ_THUNK_SIZE = 32,
  MAX_CLASS_NAME = 1024,
  MAX_PACKAGE_NAME = 1024,
};

struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,IInspectable *>
{
}; /* size: 0x0008 */

class CClassMonikerFactory
{
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_1
{
  value = 1,
} TAG_UNNAMED_1, *PTAG_UNNAMED_1;

class Microsoft::WRL::ComPtr<IWeakReference>
{
  /* 0x0000 */ struct IWeakReference* ptr_;
}; /* size: 0x0008 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk
{
  /* 0x0000 */ const unsigned int sc_uChunkMax;
  /* 0x0004 */ long Padding_7;
  /* 0x0008 */ volatile long _uRefs;
  /* 0x000c */ unsigned int _uSize;
  /* 0x0010 */ struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>* _apPairs[16];
}; /* size: 0x0090 */

typedef enum _TAG_UNNAMED_2
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_2, *PTAG_UNNAMED_2;

struct std::once_flag
{
  /* 0x0000 */ void* _Opaque;
}; /* size: 0x0008 */

typedef struct _mpProp
{
  /* 0x0000 */ int dispid;
  /* 0x0004 */ long Padding_8;
  /* 0x0008 */ const wchar_t* szName;
} mpProp, *PmpProp; /* size: 0x0010 */

typedef enum _TP_CALLBACK_PRIORITY
{
  TP_CALLBACK_PRIORITY_HIGH = 0,
  TP_CALLBACK_PRIORITY_NORMAL = 1,
  TP_CALLBACK_PRIORITY_LOW = 2,
  TP_CALLBACK_PRIORITY_INVALID = 3,
  TP_CALLBACK_PRIORITY_COUNT = 3,
} TP_CALLBACK_PRIORITY, *PTP_CALLBACK_PRIORITY;

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
} LARGE_INTEGER, *PLARGE_INTEGER; /* size: 0x0008 */

typedef struct _SECTIONBASICINFO
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long AllocationAttributes;
  /* 0x000c */ long Padding_9;
  /* 0x0010 */ union _LARGE_INTEGER MaximumSize;
} SECTIONBASICINFO, *PSECTIONBASICINFO; /* size: 0x0018 */

struct IComProcessInfo2
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >
{
}; /* size: 0x0008 */

typedef enum __scrt_native_startup_state
{
  uninitialized = 0,
  initializing = 1,
  initialized = 2,
} _scrt_native_startup_state, *P_scrt_native_startup_state;

struct Windows::Foundation::Collections::IMap<unsigned int,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
  /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK* Next;
  /* 0x0008 */ unsigned __int64 UmRegistrationHandle;
  union
  {
    /* 0x0010 */ unsigned __int64 Logger;
    /* 0x0010 */ struct _WPP_WIN2K_CONTROL_BLOCK* Win2kCb;
    /* 0x0010 */ void* Ptr;
    /* 0x0010 */ struct _WPP_TRACE_CONTROL_BLOCK* Cb;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned char FlagsLen;
  /* 0x0019 */ unsigned char Level;
  /* 0x001a */ unsigned short Options;
  /* 0x001c */ unsigned long Flags[1];
  /* 0x0020 */ const struct _GUID* ControlGuid;
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *,1>
{
}; /* size: 0x0008 */

enum ProcessToken::UserHiveOkState
{
  UserHiveOkStateNotDetermined = 0,
  UserHiveIsOk = 1,
  UserHiveIsNotOk = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Point,1>
{
}; /* size: 0x0008 */

enum ISA_AVAILABILITY
{
  __ISA_AVAILABLE_X86 = 0,
  __ISA_AVAILABLE_SSE2 = 1,
  __ISA_AVAILABLE_SSE42 = 2,
  __ISA_AVAILABLE_AVX = 3,
  __ISA_AVAILABLE_ENFSTRG = 4,
  __ISA_AVAILABLE_AVX2 = 5,
  __ISA_AVAILABLE_AVX512 = 6,
  __ISA_AVAILABLE_ARMNT = 0,
  __ISA_AVAILABLE_NEON = 1,
  __ISA_AVAILABLE_NEON_ARM64 = 2,
};

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef enum _PSM_ACTIVATE_BACKGROUND_TYPE
{
  PsmActNotBackground = 0,
  PsmActMixedHost = 1,
  PsmActPureHost = 2,
  PsmActSystemHost = 3,
  PsmActInvalidType = 4,
} PSM_ACTIVATE_BACKGROUND_TYPE, *PPSM_ACTIVATE_BACKGROUND_TYPE;

typedef enum _TAG_UNNAMED_3
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_3, *PTAG_UNNAMED_3;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> > >
{
}; /* size: 0x0008 */

struct std::allocator_traits<std::allocator<unsigned short> >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *>;

typedef enum _crt_argv_mode
{
  _crt_argv_no_arguments = 0,
  _crt_argv_unexpanded_arguments = 1,
  _crt_argv_expanded_arguments = 2,
} crt_argv_mode, *Pcrt_argv_mode;

typedef struct _MODLOAD_DATA
{
  /* 0x0000 */ unsigned long ssize;
  /* 0x0004 */ unsigned long ssig;
  /* 0x0008 */ void* data;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned long flags;
} MODLOAD_DATA, *PMODLOAD_DATA; /* size: 0x0018 */

typedef struct _FILE_MOVE_CLUSTER_INFORMATION
{
  /* 0x0000 */ unsigned long ClusterCount;
  /* 0x0004 */ long Padding_10;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_MOVE_CLUSTER_INFORMATION, *PFILE_MOVE_CLUSTER_INFORMATION; /* size: 0x0018 */

typedef enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0,
  ExceptionContinueSearch = 1,
  ExceptionNestedException = 2,
  ExceptionCollidedUnwind = 3,
} EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector<unsigned int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_4
{
  value = 1,
} TAG_UNNAMED_4, *PTAG_UNNAMED_4;

class COleCache::CCacheViewImpl
{
}; /* size: 0x0008 */

class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >
{
  /* 0x0000 */ void* m_pOwner;
  /* 0x0008 */ class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CNode** m_ppBins;
  /* 0x0010 */ unsigned __int64 m_nElements;
  /* 0x0018 */ unsigned int m_nBins;
  /* 0x001c */ float m_fOptimalLoad;
  /* 0x0020 */ float m_fLoThreshold;
  /* 0x0024 */ float m_fHiThreshold;
  /* 0x0028 */ unsigned __int64 m_nHiRehashThreshold;
  /* 0x0030 */ unsigned __int64 m_nLoRehashThreshold;
  /* 0x0038 */ unsigned long m_nLockCount;
  /* 0x003c */ unsigned int m_nBlockSize;
  /* 0x0040 */ struct XWinRT::XPlex* m_pBlocks;
  /* 0x0048 */ class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CNode* m_pFree;
}; /* size: 0x0050 */

typedef enum _PS_ATTRIBUTE_NUM
{
  PsAttributeParentProcess = 0,
  PsAttributeDebugObject = 1,
  PsAttributeToken = 2,
  PsAttributeClientId = 3,
  PsAttributeTebAddress = 4,
  PsAttributeImageName = 5,
  PsAttributeImageInfo = 6,
  PsAttributeMemoryReserve = 7,
  PsAttributePriorityClass = 8,
  PsAttributeErrorMode = 9,
  PsAttributeStdHandleInfo = 10,
  PsAttributeHandleList = 11,
  PsAttributeGroupAffinity = 12,
  PsAttributePreferredNode = 13,
  PsAttributeIdealProcessor = 14,
  PsAttributeUmsThread = 15,
  PsAttributeMitigationOptions = 16,
  PsAttributeProtectionLevel = 17,
  PsAttributeSecureProcess = 18,
  PsAttributeJobList = 19,
  PsAttributeChildProcessPolicy = 20,
  PsAttributeAllApplicationPackagesPolicy = 21,
  PsAttributeWin32kFilter = 22,
  PsAttributeSafeOpenPromptOriginClaim = 23,
  PsAttributeBnoIsolation = 24,
  PsAttributeDesktopAppPolicy = 25,
  PsAttributeChpe = 26,
  PsAttributeMitigationAuditOptions = 27,
  PsAttributeMachineType = 28,
  PsAttributeComponentFilter = 29,
  PsAttributeEnableOptionalXStateFeatures = 30,
  PsAttributeMax = 31,
} PS_ATTRIBUTE_NUM, *PPS_ATTRIBUTE_NUM;

struct std::_Fake_allocator
{
}; /* size: 0x0001 */

class wil::details::<lambda_6dd96684479744ebc07fc6b2d83b999d>
{
}; /* size: 0x0001 */

typedef enum _RTL_FEATURE_CONFIGURATION_PRIORITY
{
  FeatureConfigurationPriorityImageDefault = 0,
  FeatureConfigurationPriorityEnrollment = 2,
  FeatureConfigurationPriorityService = 4,
  FeatureConfigurationPriorityUser = 8,
  FeatureConfigurationPriorityUserPolicy = 10,
  FeatureConfigurationPriorityTest = 12,
  FeatureConfigurationPriorityImageOverride = 15,
  FeatureConfigurationPriorityMax = 15,
} RTL_FEATURE_CONFIGURATION_PRIORITY, *PRTL_FEATURE_CONFIGURATION_PRIORITY;

struct std::_Container_base12
{
  /* 0x0000 */ struct std::_Container_proxy* _Myproxy;
}; /* size: 0x0008 */

typedef struct _FILE_ID_128
{
  /* 0x0000 */ unsigned char Identifier[16];
} FILE_ID_128, *PFILE_ID_128; /* size: 0x0010 */

typedef struct _CSV_QUERY_FILE_REVISION_FILE_ID_128
{
  /* 0x0000 */ struct _FILE_ID_128 FileId;
  /* 0x0010 */ __int64 FileRevision[3];
} CSV_QUERY_FILE_REVISION_FILE_ID_128, *PCSV_QUERY_FILE_REVISION_FILE_ID_128; /* size: 0x0028 */

class wil::last_error_context
{
  /* 0x0000 */ BOOL m_dismissed;
  /* 0x0001 */ char Padding_11[3];
  /* 0x0004 */ unsigned long m_error;
}; /* size: 0x0008 */

class CAptCallCtrl;

typedef enum _TAG_UNNAMED_5
{
  value = 0,
} TAG_UNNAMED_5, *PTAG_UNNAMED_5;

typedef enum _TAG_UNNAMED_6
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_6, *PTAG_UNNAMED_6;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<double>
{
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,_RTL_CRITICAL_SECTION *>
{
}; /* size: 0x0001 */

enum PS_CREATE_STATE
{
  PsCreateInitialState = 0,
  PsCreateFailOnFileOpen = 1,
  PsCreateFailOnSectionCreate = 2,
  PsCreateFailExeFormat = 3,
  PsCreateFailMachineMismatch = 4,
  PsCreateFailExeName = 5,
  PsCreateSuccess = 6,
  PsCreateMaximumStates = 7,
};

enum tagBINDSTATUS
{
  BINDSTATUS_FINDINGRESOURCE = 1,
  BINDSTATUS_CONNECTING = 2,
  BINDSTATUS_REDIRECTING = 3,
  BINDSTATUS_BEGINDOWNLOADDATA = 4,
  BINDSTATUS_DOWNLOADINGDATA = 5,
  BINDSTATUS_ENDDOWNLOADDATA = 6,
  BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
  BINDSTATUS_INSTALLINGCOMPONENTS = 8,
  BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
  BINDSTATUS_USINGCACHEDCOPY = 10,
  BINDSTATUS_SENDINGREQUEST = 11,
  BINDSTATUS_CLASSIDAVAILABLE = 12,
  BINDSTATUS_MIMETYPEAVAILABLE = 13,
  BINDSTATUS_CACHEFILENAMEAVAILABLE = 14,
  BINDSTATUS_BEGINSYNCOPERATION = 15,
  BINDSTATUS_ENDSYNCOPERATION = 16,
  BINDSTATUS_BEGINUPLOADDATA = 17,
  BINDSTATUS_UPLOADINGDATA = 18,
  BINDSTATUS_ENDUPLOADDATA = 19,
  BINDSTATUS_PROTOCOLCLASSID = 20,
  BINDSTATUS_ENCODING = 21,
  BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22,
  BINDSTATUS_CLASSINSTALLLOCATION = 23,
  BINDSTATUS_DECODING = 24,
  BINDSTATUS_LOADINGMIMEHANDLER = 25,
  BINDSTATUS_CONTENTDISPOSITIONATTACH = 26,
  BINDSTATUS_FILTERREPORTMIMETYPE = 27,
  BINDSTATUS_CLSIDCANINSTANTIATE = 28,
  BINDSTATUS_IUNKNOWNAVAILABLE = 29,
  BINDSTATUS_DIRECTBIND = 30,
  BINDSTATUS_RAWMIMETYPE = 31,
  BINDSTATUS_PROXYDETECTING = 32,
  BINDSTATUS_ACCEPTRANGES = 33,
  BINDSTATUS_COOKIE_SENT = 34,
  BINDSTATUS_COMPACT_POLICY_RECEIVED = 35,
  BINDSTATUS_COOKIE_SUPPRESSED = 36,
  BINDSTATUS_COOKIE_STATE_UNKNOWN = 37,
  BINDSTATUS_COOKIE_STATE_ACCEPT = 38,
  BINDSTATUS_COOKIE_STATE_REJECT = 39,
  BINDSTATUS_COOKIE_STATE_PROMPT = 40,
  BINDSTATUS_COOKIE_STATE_LEASH = 41,
  BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42,
  BINDSTATUS_POLICY_HREF = 43,
  BINDSTATUS_P3P_HEADER = 44,
  BINDSTATUS_SESSION_COOKIE_RECEIVED = 45,
  BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46,
  BINDSTATUS_SESSION_COOKIES_ALLOWED = 47,
  BINDSTATUS_CACHECONTROL = 48,
  BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49,
  BINDSTATUS_MIMETEXTPLAINMISMATCH = 50,
  BINDSTATUS_PUBLISHERAVAILABLE = 51,
  BINDSTATUS_DISPLAYNAMEAVAILABLE = 52,
  BINDSTATUS_SSLUX_NAVBLOCKED = 53,
  BINDSTATUS_SERVER_MIMETYPEAVAILABLE = 54,
  BINDSTATUS_SNIFFED_CLASSIDAVAILABLE = 55,
  BINDSTATUS_64BIT_PROGRESS = 56,
  BINDSTATUS_LAST = 56,
  BINDSTATUS_RESERVED_0 = 57,
  BINDSTATUS_RESERVED_1 = 58,
  BINDSTATUS_RESERVED_2 = 59,
  BINDSTATUS_RESERVED_3 = 60,
  BINDSTATUS_RESERVED_4 = 61,
  BINDSTATUS_RESERVED_5 = 62,
  BINDSTATUS_RESERVED_6 = 63,
  BINDSTATUS_RESERVED_7 = 64,
  BINDSTATUS_RESERVED_8 = 65,
  BINDSTATUS_RESERVED_9 = 66,
  BINDSTATUS_RESERVED_A = 67,
  BINDSTATUS_RESERVED_B = 68,
  BINDSTATUS_RESERVED_C = 69,
  BINDSTATUS_RESERVED_D = 70,
  BINDSTATUS_RESERVED_E = 71,
  BINDSTATUS_RESERVED_F = 72,
  BINDSTATUS_RESERVED_10 = 73,
  BINDSTATUS_RESERVED_11 = 74,
  BINDSTATUS_RESERVED_12 = 75,
  BINDSTATUS_RESERVED_13 = 76,
  BINDSTATUS_RESERVED_14 = 77,
  BINDSTATUS_LAST_PRIVATE = 77,
};

typedef struct __vc_attributes::no_injected_textAttribute
{
  /* 0x0000 */ BOOL value;
} _vc_attributes::no_injected_textAttribute, *P_vc_attributes::no_injected_textAttribute; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_7
{
  value = 0,
} TAG_UNNAMED_7, *PTAG_UNNAMED_7;

class COleCache::CAdviseSinkImpl
{
}; /* size: 0x0008 */

struct IViewObjectEx
{
}; /* size: 0x0008 */

typedef enum _PS_STD_HANDLE_STATE
{
  PsNeverDuplicate = 0,
  PsRequestDuplicate = 1,
  PsAlwaysDuplicate = 2,
  PsMaxStdHandleStates = 3,
} PS_STD_HANDLE_STATE, *PPS_STD_HANDLE_STATE;

class std::bad_typeid
{
}; /* size: 0x0010 */

class wil::rtlsrwlock
{
  /* 0x0000 */ struct _RTL_SRWLOCK m_lock;
}; /* size: 0x0008 */

typedef enum _PS_PROTECTED_SIGNER
{
  PsProtectedSignerNone = 0,
  PsProtectedSignerAuthenticode = 1,
  PsProtectedSignerCodeGen = 2,
  PsProtectedSignerAntimalware = 3,
  PsProtectedSignerLsa = 4,
  PsProtectedSignerWindows = 5,
  PsProtectedSignerWinTcb = 6,
  PsProtectedSignerWinSystem = 7,
  PsProtectedSignerApp = 8,
  PsProtectedSignerMax = 9,
} PS_PROTECTED_SIGNER, *PPS_PROTECTED_SIGNER;

enum ProcessToken::DesignModeState
{
  DesignModeNotDetermined = 0,
  InDesignMode = 1,
  InDesignModeV2 = 2,
  NotInDesignMode = 3,
};

typedef struct _tlgWrapSz<char16_t>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const char16_t* const Psz;
  }; /* size: 0x0008 */
} tlgWrapSz<char16_t>, *PtlgWrapSz<char16_t>; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_8
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_8, *PTAG_UNNAMED_8;

typedef struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_Ea
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long EaSize;
  /* 0x0008 */ unsigned long EaInformationOffset;
} STREAM_INFORMATION_ENTRY::_StreamInformation::_Ea, *PSTREAM_INFORMATION_ENTRY::_StreamInformation::_Ea; /* size: 0x000c */

typedef enum _PS_PROTECTED_TYPE
{
  PsProtectedTypeNone = 0,
  PsProtectedTypeProtectedLight = 1,
  PsProtectedTypeProtected = 2,
  PsProtectedTypeMax = 3,
} PS_PROTECTED_TYPE, *PPS_PROTECTED_TYPE;

typedef enum _PS_WAKE_REASON
{
  PsWakeReasonUser = 0,
  PsWakeReasonExecutionRequired = 1,
  PsWakeReasonKernel = 2,
  PsWakeReasonInstrumentation = 3,
  PsWakeReasonPreserveProcess = 4,
  PsWakeReasonActivityReference = 5,
  PsWakeReasonWorkOnBehalf = 6,
  PsMaxWakeReasons = 7,
} PS_WAKE_REASON, *PPS_WAKE_REASON;

enum FORMATTAG
{
  ftagNone = 0,
  ftagClipFormat = 1,
  ftagString = 2,
};

class CData
{
  /* 0x0000 */ unsigned long m_cbSize;
  /* 0x0004 */ long Padding_12;
  /* 0x0008 */ void* m_pv;
  /* 0x0010 */ void* m_h;
  /* 0x0018 */ int m_fNoFree;
}; /* size: 0x0020 */

class CFormat
{
  /* 0x0000 */ enum FORMATTAG m_ftag;
  /* 0x0004 */ long Padding_13;
  /* 0x0008 */ unsigned short m_cf;
  /* 0x000a */ char Padding_14[6];
  /* 0x0010 */ class CData m_dataFormatString;
}; /* size: 0x0030 */

union std::_String_val<std::_Simple_types<unsigned short> >::_Bxty
{
  union
  {
    /* 0x0000 */ wchar_t _Buf[8];
    /* 0x0000 */ wchar_t* _Ptr;
    /* 0x0000 */ char _Alias[8];
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

class std::_String_val<std::_Simple_types<unsigned short> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ union std::_String_val<std::_Simple_types<unsigned short> >::_Bxty _Bx;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned __int64 _Mysize;
  /* 0x0018 */ unsigned __int64 _Myres;
}; /* size: 0x0020 */

class std::_Compressed_pair<std::allocator<unsigned short>,std::_String_val<std::_Simple_types<unsigned short> >,1>
{
  /* 0x0000 */ class std::_String_val<std::_Simple_types<unsigned short> > _Myval2;
}; /* size: 0x0020 */

class std::basic_string<unsigned short,std::char_traits<unsigned short>,std::allocator<unsigned short> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ const BOOL _Can_memcpy_val;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_offset;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_size;
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ class std::_Compressed_pair<std::allocator<unsigned short>,std::_String_val<std::_Simple_types<unsigned short> >,1> _Mypair;
  }; /* size: 0x0020 */
}; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_9
{
  value = 1,
} TAG_UNNAMED_9, *PTAG_UNNAMED_9;

struct Windows::Foundation::Collections::IVectorView<Windows::System::User *>
{
}; /* size: 0x0008 */

struct GetTypeValueImpl<long,unsigned int,unsigned long>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibraryChange *>
{
}; /* size: 0x0008 */

typedef enum _JOBOBJECT_IO_PRIORITY_LIMIT_FLAGS
{
  JOBOBJECT_IO_PRIORITY_LIMIT_ENABLE = 1,
  JOBOBJECT_IO_PRIORITY_LIMIT_VALID_FLAGS = 1,
} JOBOBJECT_IO_PRIORITY_LIMIT_FLAGS, *PJOBOBJECT_IO_PRIORITY_LIMIT_FLAGS;

struct wistd::__unique_ptr_deleter_sfinae<wil::cotaskmem_secure_deleter>;

typedef struct _MEMORY_PARTITION_PAGE_RANGE
{
  /* 0x0000 */ unsigned __int64 StartPage;
  /* 0x0008 */ unsigned __int64 NumberOfPages;
} MEMORY_PARTITION_PAGE_RANGE, *PMEMORY_PARTITION_PAGE_RANGE; /* size: 0x0010 */

typedef enum _JOBOBJECT_PAGE_PRIORITY_LIMIT_FLAGS
{
  JOBOBJECT_PAGE_PRIORITY_LIMIT_ENABLE = 1,
  JOBOBJECT_PAGE_PRIORITY_LIMIT_VALID_FLAGS = 1,
} JOBOBJECT_PAGE_PRIORITY_LIMIT_FLAGS, *PJOBOBJECT_PAGE_PRIORITY_LIMIT_FLAGS;

struct HACCEL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

enum ProcessToken::ProcessILState
{
  ProcessILUndetermined = 0,
  ProcessILIsLessThanMediumIL = 1,
  ProcessILIsMediumOrGreaterIL = 2,
};

union tagCY
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Lo;
      /* 0x0004 */ long Hi;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 int64;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct tagFONTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ long Padding_15;
  /* 0x0008 */ wchar_t* lpstrName;
  /* 0x0010 */ union tagCY cySize;
  /* 0x0018 */ short sWeight;
  /* 0x001a */ short sCharset;
  /* 0x001c */ int fItalic;
  /* 0x0020 */ int fUnderline;
  /* 0x0024 */ int fStrikethrough;
}; /* size: 0x0028 */

struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_16[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
}; /* size: 0x0030 */

typedef struct _MEMORY_PARTITION_CREATE_LARGE_PAGES_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumaNode;
  /* 0x0008 */ unsigned __int64 LargePageSize;
  /* 0x0010 */ unsigned __int64 NumberOfLargePagesToCreate;
  /* 0x0018 */ unsigned __int64 NumberOfLargePagesCreated;
} MEMORY_PARTITION_CREATE_LARGE_PAGES_INFORMATION, *PMEMORY_PARTITION_CREATE_LARGE_PAGES_INFORMATION; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_10
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_10, *PTAG_UNNAMED_10;

typedef struct _CRYPT_SEQUENCE_OF_ANY
{
  /* 0x0000 */ unsigned long cValue;
  /* 0x0004 */ long Padding_17;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_SEQUENCE_OF_ANY, *PCRYPT_SEQUENCE_OF_ANY; /* size: 0x0010 */

struct Microsoft::WRL::Details::FactoryCache
{
  /* 0x0000 */ struct IUnknown* factory;
  union
  {
    union
    {
      /* 0x0008 */ struct _RO_REGISTRATION_COOKIE* winrt;
      /* 0x0008 */ unsigned long com;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ cookie;
}; /* size: 0x0010 */

typedef enum __MIDL_ICodeInstall_0001
{
  CIP_DISK_FULL = 0,
  CIP_ACCESS_DENIED = 1,
  CIP_NEWER_VERSION_EXISTS = 2,
  CIP_OLDER_VERSION_EXISTS = 3,
  CIP_NAME_CONFLICT = 4,
  CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
  CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
  CIP_UNSAFE_TO_ABORT = 7,
  CIP_NEED_REBOOT = 8,
  CIP_NEED_REBOOT_UI_PERMISSION = 9,
} _MIDL_ICodeInstall_0001, *P_MIDL_ICodeInstall_0001;

struct Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int>
{
}; /* size: 0x0008 */

class SafeIntInternal::SafeIntWin32Exception
{
}; /* size: 0x0001 */

struct PPM_IDLE_STATE_ACCOUNTING
{
  /* 0x0000 */ unsigned long IdleTransitions;
  /* 0x0004 */ unsigned long FailedTransitions;
  /* 0x0008 */ unsigned long InvalidBucketIndex;
  /* 0x000c */ long Padding_18;
  /* 0x0010 */ unsigned __int64 TotalTime;
  /* 0x0018 */ unsigned long IdleTimeBuckets[6];
}; /* size: 0x0030 */

struct PPM_IDLE_ACCOUNTING
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ long Padding_19;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING State[1];
}; /* size: 0x0048 */

typedef enum __MIDL_IUri_0001
{
  Uri_PROPERTY_ABSOLUTE_URI = 0,
  Uri_PROPERTY_STRING_START = 0,
  Uri_PROPERTY_AUTHORITY = 1,
  Uri_PROPERTY_DISPLAY_URI = 2,
  Uri_PROPERTY_DOMAIN = 3,
  Uri_PROPERTY_EXTENSION = 4,
  Uri_PROPERTY_FRAGMENT = 5,
  Uri_PROPERTY_HOST = 6,
  Uri_PROPERTY_PASSWORD = 7,
  Uri_PROPERTY_PATH = 8,
  Uri_PROPERTY_PATH_AND_QUERY = 9,
  Uri_PROPERTY_QUERY = 10,
  Uri_PROPERTY_RAW_URI = 11,
  Uri_PROPERTY_SCHEME_NAME = 12,
  Uri_PROPERTY_USER_INFO = 13,
  Uri_PROPERTY_USER_NAME = 14,
  Uri_PROPERTY_STRING_LAST = 14,
  Uri_PROPERTY_HOST_TYPE = 15,
  Uri_PROPERTY_DWORD_START = 15,
  Uri_PROPERTY_PORT = 16,
  Uri_PROPERTY_SCHEME = 17,
  Uri_PROPERTY_ZONE = 18,
  Uri_PROPERTY_DWORD_LAST = 18,
} _MIDL_IUri_0001, *P_MIDL_IUri_0001;

typedef struct _GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} GUID, *PGUID; /* size: 0x0010 */

typedef struct _TRANSACTION_ENLISTMENT_PAIR
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID ResourceManagerId;
} TRANSACTION_ENLISTMENT_PAIR, *PTRANSACTION_ENLISTMENT_PAIR; /* size: 0x0020 */

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
  /* 0x0000 */ struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
} TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION; /* size: 0x0020 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>
{
}; /* size: 0x0008 */

class SafeCastHelper<unsigned short,unsigned short,0>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_11
{
  value = 0,
} TAG_UNNAMED_11, *PTAG_UNNAMED_11;

struct IImpersonateClipboardOwner
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<short>
{
}; /* size: 0x0008 */

typedef enum __MIDL_IUri_0002
{
  Uri_HOST_UNKNOWN = 0,
  Uri_HOST_DNS = 1,
  Uri_HOST_IPV4 = 2,
  Uri_HOST_IPV6 = 3,
  Uri_HOST_IDN = 4,
} _MIDL_IUri_0002, *P_MIDL_IUri_0002;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>
{
}; /* size: 0x0008 */

typedef enum _VRF_TRIAGE_CONTEXT
{
  VRF_TRIAGE_CONTEXT_NONE = 0,
  VRF_TRIAGE_CONTEXT_DEFAULT = 1,
  VRF_TRIAGE_CONTEXT_DEVELOPMENT = 1,
  VRF_TRIAGE_CONTEXT_CERTIFICATION = 2,
  VRF_TRIAGE_CONTEXT_CERTIFICATION_STRICT = 3,
  VRF_TRIAGE_CONTEXT_FLIGHT_TARGETED = 4,
  VRF_TRIAGE_CONTEXT_FLIGHT_DIAGNOSTICS = 5,
  VRF_TRIAGE_CONTEXT_FLIGHT_MONITORING = 6,
  NUM_VRF_TRIAGE_CONTEXTS = 7,
} VRF_TRIAGE_CONTEXT, *PVRF_TRIAGE_CONTEXT;

struct Windows::Foundation::IAsyncOperation<int>
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::satypeAttribute
{
  /* 0x0000 */ const char* type;
} _vc_attributes::satypeAttribute, *P_vc_attributes::satypeAttribute; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>
{
}; /* size: 0x0001 */

enum INPUT_DESTINATION_IDENTITY
{
  IDID_NONE = 0,
  IDID_LUID = 1,
  IDID_INPUTROUTINGINFO = 2,
  IDID_WINDOW = 4,
};

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

enum wil::details::EmptyVariant
{
  None = 0,
};

class CreateNdrTypeInfoFromTypeInfo::__l2::<lambda_8a353063373b4ec3de8834c4042dce90>
{
  /* 0x0000 */ void*& typeGenCookie;
}; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_8a353063373b4ec3de8834c4042dce90> >
{
  /* 0x0000 */ class CreateNdrTypeInfoFromTypeInfo::__l2::<lambda_8a353063373b4ec3de8834c4042dce90> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_INFORMATION_CLASS
{
  SystemBasicInformation = 0,
  SystemProcessorInformation = 1,
  SystemPerformanceInformation = 2,
  SystemTimeOfDayInformation = 3,
  SystemPathInformation = 4,
  SystemProcessInformation = 5,
  SystemCallCountInformation = 6,
  SystemDeviceInformation = 7,
  SystemProcessorPerformanceInformation = 8,
  SystemFlagsInformation = 9,
  SystemCallTimeInformation = 10,
  SystemModuleInformation = 11,
  SystemLocksInformation = 12,
  SystemStackTraceInformation = 13,
  SystemPagedPoolInformation = 14,
  SystemNonPagedPoolInformation = 15,
  SystemHandleInformation = 16,
  SystemObjectInformation = 17,
  SystemPageFileInformation = 18,
  SystemVdmInstemulInformation = 19,
  SystemVdmBopInformation = 20,
  SystemFileCacheInformation = 21,
  SystemPoolTagInformation = 22,
  SystemInterruptInformation = 23,
  SystemDpcBehaviorInformation = 24,
  SystemFullMemoryInformation = 25,
  SystemLoadGdiDriverInformation = 26,
  SystemUnloadGdiDriverInformation = 27,
  SystemTimeAdjustmentInformation = 28,
  SystemSummaryMemoryInformation = 29,
  SystemMirrorMemoryInformation = 30,
  SystemPerformanceTraceInformation = 31,
  SystemObsolete0 = 32,
  SystemExceptionInformation = 33,
  SystemCrashDumpStateInformation = 34,
  SystemKernelDebuggerInformation = 35,
  SystemContextSwitchInformation = 36,
  SystemRegistryQuotaInformation = 37,
  SystemExtendServiceTableInformation = 38,
  SystemPrioritySeperation = 39,
  SystemVerifierAddDriverInformation = 40,
  SystemVerifierRemoveDriverInformation = 41,
  SystemProcessorIdleInformation = 42,
  SystemLegacyDriverInformation = 43,
  SystemCurrentTimeZoneInformation = 44,
  SystemLookasideInformation = 45,
  SystemTimeSlipNotification = 46,
  SystemSessionCreate = 47,
  SystemSessionDetach = 48,
  SystemSessionInformation = 49,
  SystemRangeStartInformation = 50,
  SystemVerifierInformation = 51,
  SystemVerifierThunkExtend = 52,
  SystemSessionProcessInformation = 53,
  SystemLoadGdiDriverInSystemSpace = 54,
  SystemNumaProcessorMap = 55,
  SystemPrefetcherInformation = 56,
  SystemExtendedProcessInformation = 57,
  SystemRecommendedSharedDataAlignment = 58,
  SystemComPlusPackage = 59,
  SystemNumaAvailableMemory = 60,
  SystemProcessorPowerInformation = 61,
  SystemEmulationBasicInformation = 62,
  SystemEmulationProcessorInformation = 63,
  SystemExtendedHandleInformation = 64,
  SystemLostDelayedWriteInformation = 65,
  SystemBigPoolInformation = 66,
  SystemSessionPoolTagInformation = 67,
  SystemSessionMappedViewInformation = 68,
  SystemHotpatchInformation = 69,
  SystemObjectSecurityMode = 70,
  SystemWatchdogTimerHandler = 71,
  SystemWatchdogTimerInformation = 72,
  SystemLogicalProcessorInformation = 73,
  SystemWow64SharedInformationObsolete = 74,
  SystemRegisterFirmwareTableInformationHandler = 75,
  SystemFirmwareTableInformation = 76,
  SystemModuleInformationEx = 77,
  SystemVerifierTriageInformation = 78,
  SystemSuperfetchInformation = 79,
  SystemMemoryListInformation = 80,
  SystemFileCacheInformationEx = 81,
  SystemThreadPriorityClientIdInformation = 82,
  SystemProcessorIdleCycleTimeInformation = 83,
  SystemVerifierCancellationInformation = 84,
  SystemProcessorPowerInformationEx = 85,
  SystemRefTraceInformation = 86,
  SystemSpecialPoolInformation = 87,
  SystemProcessIdInformation = 88,
  SystemErrorPortInformation = 89,
  SystemBootEnvironmentInformation = 90,
  SystemHypervisorInformation = 91,
  SystemVerifierInformationEx = 92,
  SystemTimeZoneInformation = 93,
  SystemImageFileExecutionOptionsInformation = 94,
  SystemCoverageInformation = 95,
  SystemPrefetchPatchInformation = 96,
  SystemVerifierFaultsInformation = 97,
  SystemSystemPartitionInformation = 98,
  SystemSystemDiskInformation = 99,
  SystemProcessorPerformanceDistribution = 100,
  SystemNumaProximityNodeInformation = 101,
  SystemDynamicTimeZoneInformation = 102,
  SystemCodeIntegrityInformation = 103,
  SystemProcessorMicrocodeUpdateInformation = 104,
  SystemProcessorBrandString = 105,
  SystemVirtualAddressInformation = 106,
  SystemLogicalProcessorAndGroupInformation = 107,
  SystemProcessorCycleTimeInformation = 108,
  SystemStoreInformation = 109,
  SystemRegistryAppendString = 110,
  SystemAitSamplingValue = 111,
  SystemVhdBootInformation = 112,
  SystemCpuQuotaInformation = 113,
  SystemNativeBasicInformation = 114,
  SystemErrorPortTimeouts = 115,
  SystemLowPriorityIoInformation = 116,
  SystemBootEntropyInformation = 117,
  SystemVerifierCountersInformation = 118,
  SystemPagedPoolInformationEx = 119,
  SystemSystemPtesInformationEx = 120,
  SystemNodeDistanceInformation = 121,
  SystemAcpiAuditInformation = 122,
  SystemBasicPerformanceInformation = 123,
  SystemQueryPerformanceCounterInformation = 124,
  SystemSessionBigPoolInformation = 125,
  SystemBootGraphicsInformation = 126,
  SystemScrubPhysicalMemoryInformation = 127,
  SystemBadPageInformation = 128,
  SystemProcessorProfileControlArea = 129,
  SystemCombinePhysicalMemoryInformation = 130,
  SystemEntropyInterruptTimingInformation = 131,
  SystemConsoleInformation = 132,
  SystemPlatformBinaryInformation = 133,
  SystemPolicyInformation = 134,
  SystemHypervisorProcessorCountInformation = 135,
  SystemDeviceDataInformation = 136,
  SystemDeviceDataEnumerationInformation = 137,
  SystemMemoryTopologyInformation = 138,
  SystemMemoryChannelInformation = 139,
  SystemBootLogoInformation = 140,
  SystemProcessorPerformanceInformationEx = 141,
  SystemCriticalProcessErrorLogInformation = 142,
  SystemSecureBootPolicyInformation = 143,
  SystemPageFileInformationEx = 144,
  SystemSecureBootInformation = 145,
  SystemEntropyInterruptTimingRawInformation = 146,
  SystemPortableWorkspaceEfiLauncherInformation = 147,
  SystemFullProcessInformation = 148,
  SystemKernelDebuggerInformationEx = 149,
  SystemBootMetadataInformation = 150,
  SystemSoftRebootInformation = 151,
  SystemElamCertificateInformation = 152,
  SystemOfflineDumpConfigInformation = 153,
  SystemProcessorFeaturesInformation = 154,
  SystemRegistryReconciliationInformation = 155,
  SystemEdidInformation = 156,
  SystemManufacturingInformation = 157,
  SystemEnergyEstimationConfigInformation = 158,
  SystemHypervisorDetailInformation = 159,
  SystemProcessorCycleStatsInformation = 160,
  SystemVmGenerationCountInformation = 161,
  SystemTrustedPlatformModuleInformation = 162,
  SystemKernelDebuggerFlags = 163,
  SystemCodeIntegrityPolicyInformation = 164,
  SystemIsolatedUserModeInformation = 165,
  SystemHardwareSecurityTestInterfaceResultsInformation = 166,
  SystemSingleModuleInformation = 167,
  SystemAllowedCpuSetsInformation = 168,
  SystemVsmProtectionInformation = 169,
  SystemInterruptCpuSetsInformation = 170,
  SystemSecureBootPolicyFullInformation = 171,
  SystemCodeIntegrityPolicyFullInformation = 172,
  SystemAffinitizedInterruptProcessorInformation = 173,
  SystemRootSiloInformation = 174,
  SystemCpuSetInformation = 175,
  SystemCpuSetTagInformation = 176,
  SystemWin32WerStartCallout = 177,
  SystemSecureKernelProfileInformation = 178,
  SystemCodeIntegrityPlatformManifestInformation = 179,
  SystemInterruptSteeringInformation = 180,
  SystemSupportedProcessorArchitectures = 181,
  SystemMemoryUsageInformation = 182,
  SystemCodeIntegrityCertificateInformation = 183,
  SystemPhysicalMemoryInformation = 184,
  SystemControlFlowTransition = 185,
  SystemKernelDebuggingAllowed = 186,
  SystemActivityModerationExeState = 187,
  SystemActivityModerationUserSettings = 188,
  SystemCodeIntegrityPoliciesFullInformation = 189,
  SystemCodeIntegrityUnlockInformation = 190,
  SystemIntegrityQuotaInformation = 191,
  SystemFlushInformation = 192,
  SystemProcessorIdleMaskInformation = 193,
  SystemSecureDumpEncryptionInformation = 194,
  SystemWriteConstraintInformation = 195,
  SystemKernelVaShadowInformation = 196,
  SystemHypervisorSharedPageInformation = 197,
  SystemFirmwareBootPerformanceInformation = 198,
  SystemCodeIntegrityVerificationInformation = 199,
  SystemFirmwarePartitionInformation = 200,
  SystemSpeculationControlInformation = 201,
  SystemDmaGuardPolicyInformation = 202,
  SystemEnclaveLaunchControlInformation = 203,
  SystemWorkloadAllowedCpuSetsInformation = 204,
  SystemCodeIntegrityUnlockModeInformation = 205,
  SystemLeapSecondInformation = 206,
  SystemFlags2Information = 207,
  SystemSecurityModelInformation = 208,
  SystemCodeIntegritySyntheticCacheInformation = 209,
  SystemFeatureConfigurationInformation = 210,
  SystemFeatureConfigurationSectionInformation = 211,
  SystemFeatureUsageSubscriptionInformation = 212,
  SystemSecureSpeculationControlInformation = 213,
  SystemSpacesBootInformation = 214,
  SystemFwRamdiskInformation = 215,
  SystemWheaIpmiHardwareInformation = 216,
  SystemDifSetRuleClassInformation = 217,
  SystemDifClearRuleClassInformation = 218,
  SystemDifApplyPluginVerificationOnDriver = 219,
  SystemDifRemovePluginVerificationOnDriver = 220,
  SystemShadowStackInformation = 221,
  SystemBuildVersionInformation = 222,
  SystemPoolLimitInformation = 223,
  SystemCodeIntegrityAddDynamicStore = 224,
  SystemCodeIntegrityClearDynamicStores = 225,
  SystemDifPoolTrackingInformation = 226,
  SystemPoolZeroingInformation = 227,
  SystemDpcWatchdogInformation = 228,
  SystemDpcWatchdogInformation2 = 229,
  SystemSupportedProcessorArchitectures2 = 230,
  SystemSingleProcessorRelationshipInformation = 231,
  SystemXfgCheckFailureInformation = 232,
  SystemIommuStateInformation = 233,
  SystemHypervisorMinrootInformation = 234,
  SystemHypervisorBootPagesInformation = 235,
  SystemPointerAuthInformation = 236,
  SystemSecureKernelDebuggerInformation = 237,
  SystemOriginalImageFeatureInformation = 238,
  MaxSystemInfoClass = 239,
} SYSTEM_INFORMATION_CLASS, *PSYSTEM_INFORMATION_CLASS;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0001 */

struct IClipboardProtectionServices
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>
{
}; /* size: 0x0008 */

typedef enum _KCONTINUE_TYPE
{
  KCONTINUE_UNWIND = 0,
  KCONTINUE_RESUME = 1,
  KCONTINUE_LONGJUMP = 2,
  KCONTINUE_SET = 3,
  KCONTINUE_LAST = 4,
  KCONTINUE_INVALID = 4,
} KCONTINUE_TYPE, *PKCONTINUE_TYPE;

typedef struct _tlgCharTraits<unsigned short>
{
} tlgCharTraits<unsigned short>, *PtlgCharTraits<unsigned short>; /* size: 0x0001 */

struct wistd::__any
{
}; /* size: 0x0001 */

enum ProcessToken::NoAllAppPackagesState
{
  NoAllAppPackagesNotDetermined = 0,
  NoAllAppPackagesPresent = 1,
  NoAllAppPackagesAbsent = 2,
};

typedef struct _SERVICE_STATUS_PROCESS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
  /* 0x001c */ unsigned long dwProcessId;
  /* 0x0020 */ unsigned long dwServiceFlags;
} SERVICE_STATUS_PROCESS, *PSERVICE_STATUS_PROCESS; /* size: 0x0024 */

typedef struct _SERVICE_NOTIFY_1
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_20;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
} SERVICE_NOTIFY_1, *PSERVICE_NOTIFY_1; /* size: 0x0040 */

struct HGLRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _SYSTEM_PROCESS_CLASSIFICATION
{
  SystemProcessClassificationNormal = 0,
  SystemProcessClassificationSystem = 1,
  SystemProcessClassificationSecureSystem = 2,
  SystemProcessClassificationMemCompression = 3,
  SystemProcessClassificationRegistry = 4,
  SystemProcessClassificationMaximum = 5,
} SYSTEM_PROCESS_CLASSIFICATION, *PSYSTEM_PROCESS_CLASSIFICATION;

typedef struct _SYMBOL_INFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_21;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ wchar_t Name[1];
  /* 0x0056 */ char __PADDING__[2];
} SYMBOL_INFOW, *PSYMBOL_INFOW; /* size: 0x0058 */

enum tagDOMNodeType
{
  NODE_INVALID = 0,
  NODE_ELEMENT = 1,
  NODE_ATTRIBUTE = 2,
  NODE_TEXT = 3,
  NODE_CDATA_SECTION = 4,
  NODE_ENTITY_REFERENCE = 5,
  NODE_ENTITY = 6,
  NODE_PROCESSING_INSTRUCTION = 7,
  NODE_COMMENT = 8,
  NODE_DOCUMENT = 9,
  NODE_DOCUMENT_TYPE = 10,
  NODE_DOCUMENT_FRAGMENT = 11,
  NODE_NOTATION = 12,
};

class wil::details::<lambda_1743b85cba782339a69c5aa862c27e7a>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>
{
}; /* size: 0x0008 */

enum Windows::System::UserWatcherStatus
{
  UserWatcherStatus_Created = 0,
  UserWatcherStatus_Started = 1,
  UserWatcherStatus_EnumerationCompleted = 2,
  UserWatcherStatus_Stopping = 3,
  UserWatcherStatus_Stopped = 4,
  UserWatcherStatus_Aborted = 5,
};

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_12
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_12, *PTAG_UNNAMED_12;

struct Windows::Foundation::Collections::IIterable_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0008 */

enum tagXMLEMEM_TYPE
{
  XMLELEMTYPE_ELEMENT = 0,
  XMLELEMTYPE_TEXT = 1,
  XMLELEMTYPE_COMMENT = 2,
  XMLELEMTYPE_DOCUMENT = 3,
  XMLELEMTYPE_DTD = 4,
  XMLELEMTYPE_PI = 5,
  XMLELEMTYPE_OTHER = 6,
};

class TryGetNdrTypeInfo::__l2::<lambda_2e1c9c4fca2bd83b2812b8ab64129fec>
{
}; /* size: 0x0001 */

class wil::details::<lambda_0338d048c56f4199739644ebb113d12c>
{
}; /* size: 0x0001 */

enum tagBINDSTRING
{
  BINDSTRING_HEADERS = 1,
  BINDSTRING_ACCEPT_MIMES = 2,
  BINDSTRING_EXTRA_URL = 3,
  BINDSTRING_LANGUAGE = 4,
  BINDSTRING_USERNAME = 5,
  BINDSTRING_PASSWORD = 6,
  BINDSTRING_UA_PIXELS = 7,
  BINDSTRING_UA_COLOR = 8,
  BINDSTRING_OS = 9,
  BINDSTRING_USER_AGENT = 10,
  BINDSTRING_ACCEPT_ENCODINGS = 11,
  BINDSTRING_POST_COOKIE = 12,
  BINDSTRING_POST_DATA_MIME = 13,
  BINDSTRING_URL = 14,
  BINDSTRING_IID = 15,
  BINDSTRING_FLAG_BIND_TO_OBJECT = 16,
  BINDSTRING_PTR_BIND_CONTEXT = 17,
  BINDSTRING_XDR_ORIGIN = 18,
  BINDSTRING_DOWNLOADPATH = 19,
  BINDSTRING_ROOTDOC_URL = 20,
  BINDSTRING_INITIAL_FILENAME = 21,
  BINDSTRING_PROXY_USERNAME = 22,
  BINDSTRING_PROXY_PASSWORD = 23,
  BINDSTRING_ENTERPRISE_ID = 24,
  BINDSTRING_DOC_URL = 25,
  BINDSTRING_SAMESITE_COOKIE_LEVEL = 26,
};

typedef enum _FS_BPIO_INFLAGS
{
  FSBPIO_INFL_None = 0,
  FSBPIO_INFL_SKIP_STORAGE_STACK_QUERY = 1,
} FS_BPIO_INFLAGS, *PFS_BPIO_INFLAGS;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef struct _CRYPTOAPI_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_22;
  /* 0x0008 */ unsigned char* pbData;
} CRYPTOAPI_BLOB, *PCRYPTOAPI_BLOB; /* size: 0x0010 */

typedef struct _CRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_ALGORITHM_IDENTIFIER, *PCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0018 */

typedef struct _CRYPT_BIT_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_23;
  /* 0x0008 */ unsigned char* pbData;
  /* 0x0010 */ unsigned long cUnusedBits;
  /* 0x0014 */ long __PADDING__[1];
} CRYPT_BIT_BLOB, *PCRYPT_BIT_BLOB; /* size: 0x0018 */

typedef struct _CERT_ISSUER_SERIAL_NUMBER
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerialNumber;
} CERT_ISSUER_SERIAL_NUMBER, *PCERT_ISSUER_SERIAL_NUMBER; /* size: 0x0020 */

typedef struct _CERT_ID
{
  /* 0x0000 */ unsigned long dwIdChoice;
  /* 0x0004 */ long Padding_24;
  union
  {
    /* 0x0008 */ struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB KeyId;
    struct
    {
      /* 0x0008 */ struct _CRYPTOAPI_BLOB HashId;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} CERT_ID, *PCERT_ID; /* size: 0x0028 */

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_25;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ unsigned __int64 hCryptProv;
  /* 0x0030 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0048 */ struct _CERT_ID RecipientId;
} CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO; /* size: 0x0070 */

enum tagApplicationType
{
  ServerApplication = 0,
  LibraryApplication = 1,
};

typedef struct _stat32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_26[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
} stat32, *Pstat32; /* size: 0x0024 */

class wil::details::<lambda_bfd2741a28d6faa92e23b84d2819b7af>
{
}; /* size: 0x0001 */

struct IPolicy
{
}; /* size: 0x0008 */

enum tagShutdownType
{
  IdleShutdown = 0,
  ForcedShutdown = 1,
};

typedef enum _TAG_UNNAMED_13
{
  value = 0,
} TAG_UNNAMED_13, *PTAG_UNNAMED_13;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef struct _CMSG_HASHED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_27;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
} CMSG_HASHED_ENCODE_INFO, *PCMSG_HASHED_ENCODE_INFO; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _NDR_SCONTEXT
{
  /* 0x0000 */ void* pad[2];
  /* 0x0010 */ void* userContext;
} NDR_SCONTEXT, *PNDR_SCONTEXT; /* size: 0x0018 */

enum wil::FeaturePropertyGroupFlags
{
  None = 0,
  StaticProperties = 1,
  FeatureEnabledState = 2,
};

class LargeIntRegMultiply<unsigned int,unsigned __int64>
{
}; /* size: 0x0001 */

typedef enum _tagPARSEACTION
{
  PARSE_CANONICALIZE = 1,
  PARSE_FRIENDLY = 2,
  PARSE_SECURITY_URL = 3,
  PARSE_ROOTDOCUMENT = 4,
  PARSE_DOCUMENT = 5,
  PARSE_ANCHOR = 6,
  PARSE_ENCODE_IS_UNESCAPE = 7,
  PARSE_DECODE_IS_ESCAPE = 8,
  PARSE_PATH_FROM_URL = 9,
  PARSE_URL_FROM_PATH = 10,
  PARSE_MIME = 11,
  PARSE_SERVER = 12,
  PARSE_SCHEMA = 13,
  PARSE_SITE = 14,
  PARSE_DOMAIN = 15,
  PARSE_LOCATION = 16,
  PARSE_SECURITY_DOMAIN = 17,
  PARSE_ESCAPE = 18,
  PARSE_UNESCAPE = 19,
} tagPARSEACTION, *PtagPARSEACTION;

struct IActivationFactory
{
}; /* size: 0x0008 */

typedef struct _FILETIME
{
  /* 0x0000 */ unsigned long dwLowDateTime;
  /* 0x0004 */ unsigned long dwHighDateTime;
} FILETIME, *PFILETIME; /* size: 0x0008 */

typedef struct _OCSP_BASIC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwResponderIdChoice;
  union
  {
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByNameResponderId;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByKeyResponderId;
  }; /* size: 0x0010 */
  /* 0x0018 */ struct _FILETIME ProducedAt;
  /* 0x0020 */ unsigned long cResponseEntry;
  /* 0x0024 */ long Padding_28;
  /* 0x0028 */ struct _OCSP_BASIC_RESPONSE_ENTRY* rgResponseEntry;
  /* 0x0030 */ unsigned long cExtension;
  /* 0x0034 */ long Padding_29;
  /* 0x0038 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_INFO, *POCSP_BASIC_RESPONSE_INFO; /* size: 0x0040 */

typedef struct _TAPE_CREATE_PARTITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
} TAPE_CREATE_PARTITION, *PTAPE_CREATE_PARTITION; /* size: 0x000c */

typedef enum _tagPSUACTION
{
  PSU_DEFAULT = 1,
  PSU_SECURITY_URL_ONLY = 2,
} tagPSUACTION, *PtagPSUACTION;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComCatalogSCM> >
{
}; /* size: 0x0008 */

class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_30[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

typedef enum _TAG_UNNAMED_14
{
  value = 0,
} TAG_UNNAMED_14, *PTAG_UNNAMED_14;

struct AsyncIUnknown
{
}; /* size: 0x0008 */

typedef enum _tagQUERYOPTION
{
  QUERY_EXPIRATION_DATE = 1,
  QUERY_TIME_OF_LAST_CHANGE = 2,
  QUERY_CONTENT_ENCODING = 3,
  QUERY_CONTENT_TYPE = 4,
  QUERY_REFRESH = 5,
  QUERY_RECOMBINE = 6,
  QUERY_CAN_NAVIGATE = 7,
  QUERY_USES_NETWORK = 8,
  QUERY_IS_CACHED = 9,
  QUERY_IS_INSTALLEDENTRY = 10,
  QUERY_IS_CACHED_OR_MAPPED = 11,
  QUERY_USES_CACHE = 12,
  QUERY_IS_SECURE = 13,
  QUERY_IS_SAFE = 14,
  QUERY_USES_HISTORYFOLDER = 15,
  QUERY_IS_CACHED_AND_USABLE_OFFLINE = 16,
} tagQUERYOPTION, *PtagQUERYOPTION;

typedef struct _MINIDUMP_MEMORY_INFO
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned int AllocationProtect;
  /* 0x0014 */ unsigned int __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned int State;
  /* 0x0024 */ unsigned int Protect;
  /* 0x0028 */ unsigned int Type;
  /* 0x002c */ unsigned int __alignment2;
} MINIDUMP_MEMORY_INFO, *PMINIDUMP_MEMORY_INFO; /* size: 0x0030 */

typedef struct _MINIDUMP_CALLBACK_OUTPUT
{
  union
  {
    /* 0x0000 */ unsigned long ModuleWriteFlags;
    /* 0x0000 */ unsigned long ThreadWriteFlags;
    /* 0x0000 */ unsigned long SecondaryFlags;
    struct
    {
      /* 0x0000 */ unsigned __int64 MemoryBase;
      /* 0x0008 */ unsigned long MemorySize;
    }; /* size: 0x000c */
    struct
    {
      /* 0x0000 */ int CheckCancel;
      /* 0x0004 */ int Cancel;
    }; /* size: 0x0008 */
    /* 0x0000 */ void* Handle;
    struct
    {
      /* 0x0000 */ struct _MINIDUMP_MEMORY_INFO VmRegion;
      /* 0x0030 */ int Continue;
    }; /* size: 0x0034 */
    struct
    {
      /* 0x0000 */ HRESULT VmQueryStatus;
      /* 0x0004 */ struct _MINIDUMP_MEMORY_INFO VmQueryResult;
    }; /* size: 0x0034 */
    struct
    {
      /* 0x0000 */ HRESULT VmReadStatus;
      /* 0x0004 */ unsigned long VmReadBytesCompleted;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ HRESULT Status;
      /* 0x0004 */ long __PADDING__[12];
    }; /* size: 0x0034 */
  }; /* size: 0x0034 */
} MINIDUMP_CALLBACK_OUTPUT, *PMINIDUMP_CALLBACK_OUTPUT; /* size: 0x0034 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassIterator> >
{
}; /* size: 0x0008 */

typedef enum _tagINTERNETFEATURELIST
{
  FEATURE_OBJECT_CACHING = 0,
  FEATURE_ZONE_ELEVATION = 1,
  FEATURE_MIME_HANDLING = 2,
  FEATURE_MIME_SNIFFING = 3,
  FEATURE_WINDOW_RESTRICTIONS = 4,
  FEATURE_WEBOC_POPUPMANAGEMENT = 5,
  FEATURE_BEHAVIORS = 6,
  FEATURE_DISABLE_MK_PROTOCOL = 7,
  FEATURE_LOCALMACHINE_LOCKDOWN = 8,
  FEATURE_SECURITYBAND = 9,
  FEATURE_RESTRICT_ACTIVEXINSTALL = 10,
  FEATURE_VALIDATE_NAVIGATE_URL = 11,
  FEATURE_RESTRICT_FILEDOWNLOAD = 12,
  FEATURE_ADDON_MANAGEMENT = 13,
  FEATURE_PROTOCOL_LOCKDOWN = 14,
  FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15,
  FEATURE_SAFE_BINDTOOBJECT = 16,
  FEATURE_UNC_SAVEDFILECHECK = 17,
  FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18,
  FEATURE_TABBED_BROWSING = 19,
  FEATURE_SSLUX = 20,
  FEATURE_DISABLE_NAVIGATION_SOUNDS = 21,
  FEATURE_DISABLE_LEGACY_COMPRESSION = 22,
  FEATURE_FORCE_ADDR_AND_STATUS = 23,
  FEATURE_XMLHTTP = 24,
  FEATURE_DISABLE_TELNET_PROTOCOL = 25,
  FEATURE_FEEDS = 26,
  FEATURE_BLOCK_INPUT_PROMPTS = 27,
  FEATURE_ENTRY_COUNT = 28,
} tagINTERNETFEATURELIST, *PtagINTERNETFEATURELIST;

struct std::_Fake_proxy_ptr_impl
{
}; /* size: 0x0001 */

enum std::_Invoker_strategy
{
  _Functor = 0,
  _Pmf_object = 1,
  _Pmf_refwrap = 2,
  _Pmf_pointer = 3,
  _Pmd_object = 4,
  _Pmd_refwrap = 5,
  _Pmd_pointer = 6,
};

struct std::_Invoker_pmf_refwrap
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct _SYSTEMTIME
{
  /* 0x0000 */ unsigned short wYear;
  /* 0x0002 */ unsigned short wMonth;
  /* 0x0004 */ unsigned short wDayOfWeek;
  /* 0x0006 */ unsigned short wDay;
  /* 0x0008 */ unsigned short wHour;
  /* 0x000a */ unsigned short wMinute;
  /* 0x000c */ unsigned short wSecond;
  /* 0x000e */ unsigned short wMilliseconds;
} SYSTEMTIME, *PSYSTEMTIME; /* size: 0x0010 */

typedef struct _TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
} TIME_ZONE_INFORMATION, *PTIME_ZONE_INFORMATION; /* size: 0x00ac */

struct tagSTATPROPSETSTG
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ struct _GUID clsid;
  /* 0x0020 */ unsigned long grfFlags;
  /* 0x0024 */ struct _FILETIME mtime;
  /* 0x002c */ struct _FILETIME ctime;
  /* 0x0034 */ struct _FILETIME atime;
  /* 0x003c */ unsigned long dwOSVersion;
}; /* size: 0x0040 */

class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>::ContextSensitiveHelp::__l2::<lambda_7f8f27448f522cea32614cee7579f563>
{
  /* 0x0000 */ int fEnterMode;
}; /* size: 0x0004 */

typedef enum _RTL_RESOURCE_POLICY_FLAGS
{
  RTL_RESOURCE_POLICY_FLAGS_NONE = 0,
} RTL_RESOURCE_POLICY_FLAGS, *PRTL_RESOURCE_POLICY_FLAGS;

class Microsoft::WRL::ComPtr<IMarshal>
{
  /* 0x0000 */ struct IMarshal* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::FtmBase
{
  /* 0x0000 */ long Padding_31[6];
  /* 0x0018 */ class Microsoft::WRL::ComPtr<IMarshal> marshaller_;
}; /* size: 0x0020 */

class GetCastMethod<unsigned short,unsigned short>
{
}; /* size: 0x0001 */

enum Microsoft::WRL::Details::AsyncStatusInternal
{
  _Undefined = -2,
  _Created = -1,
  _Started = 0,
  _Completed = 1,
  _Canceled = 2,
  _Error = 3,
  _Closed = 4,
};

union std::_String_val<std::_Simple_types<char32_t> >::_Bxty
{
  union
  {
    /* 0x0000 */ char32_t _Buf[4];
    /* 0x0000 */ char32_t* _Ptr;
    /* 0x0000 */ char _Alias[4];
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

class std::_String_val<std::_Simple_types<char32_t> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ union std::_String_val<std::_Simple_types<char32_t> >::_Bxty _Bx;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned __int64 _Mysize;
  /* 0x0018 */ unsigned __int64 _Myres;
}; /* size: 0x0020 */

class std::_Compressed_pair<std::allocator<char32_t>,std::_String_val<std::_Simple_types<char32_t> >,1>
{
  /* 0x0000 */ class std::_String_val<std::_Simple_types<char32_t> > _Myval2;
}; /* size: 0x0020 */

class std::basic_string<char32_t,std::char_traits<char32_t>,std::allocator<char32_t> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ const BOOL _Can_memcpy_val;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_offset;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_size;
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ class std::_Compressed_pair<std::allocator<char32_t>,std::_String_val<std::_Simple_types<char32_t> >,1> _Mypair;
  }; /* size: 0x0020 */
}; /* size: 0x0020 */

typedef enum _SYSTEM_FEATURE_CONFIGURATION_SECTION_TYPE
{
  SystemFeatureConfigurationSectionTypeBoot = 0,
  SystemFeatureConfigurationSectionTypeRuntime = 1,
  SystemFeatureConfigurationSectionTypeUsageTriggers = 2,
  SystemFeatureConfigurationSectionTypeCount = 3,
} SYSTEM_FEATURE_CONFIGURATION_SECTION_TYPE, *PSYSTEM_FEATURE_CONFIGURATION_SECTION_TYPE;

typedef enum _SYSTEM_POOL_LIMIT_MEM_TYPE
{
  SysPlMemPaged = 0,
  SysPlMemNonPaged = 1,
  SysPlMemTypeMax = 2,
} SYSTEM_POOL_LIMIT_MEM_TYPE, *PSYSTEM_POOL_LIMIT_MEM_TYPE;

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>
{
}; /* size: 0x0008 */

struct ITypeInfo
{
}; /* size: 0x0008 */

class std::bad_weak_ptr
{
}; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _RTL_SRWLOCK* m_ptr;
}; /* size: 0x0008 */

struct tagMETAHEADER
{
  /* 0x0000 */ unsigned short mtType;
  /* 0x0002 */ unsigned short mtHeaderSize;
  /* 0x0004 */ unsigned short mtVersion;
  /* 0x0006 */ unsigned long mtSize;
  /* 0x000a */ unsigned short mtNoObjects;
  /* 0x000c */ unsigned long mtMaxRecord;
  /* 0x0010 */ unsigned short mtNoParameters;
}; /* size: 0x0012 */

typedef enum _TAG_UNNAMED_15
{
  value = 1,
} TAG_UNNAMED_15, *PTAG_UNNAMED_15;

enum tagTYPEKIND
{
  TKIND_ENUM = 0,
  TKIND_RECORD = 1,
  TKIND_MODULE = 2,
  TKIND_INTERFACE = 3,
  TKIND_DISPATCH = 4,
  TKIND_COCLASS = 5,
  TKIND_ALIAS = 6,
  TKIND_UNION = 7,
  TKIND_MAX = 8,
};

typedef struct _MINIDUMP_UNLOADED_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
} MINIDUMP_UNLOADED_MODULE, *PMINIDUMP_UNLOADED_MODULE; /* size: 0x0018 */

struct Windows::Foundation::Collections::supports_cleanup<HSTRING__ *>
{
}; /* size: 0x0001 */

enum tagCALLCONV
{
  CC_FASTCALL = 0,
  CC_CDECL = 1,
  CC_MSCPASCAL = 2,
  CC_PASCAL = 2,
  CC_MACPASCAL = 3,
  CC_STDCALL = 4,
  CC_FPFASTCALL = 5,
  CC_SYSCALL = 6,
  CC_MPWCDECL = 7,
  CC_MPWPASCAL = 8,
  CC_MAX = 9,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>
{
}; /* size: 0x0001 */

enum SHELL_LINK_DATA_FLAGS
{
  SLDF_DEFAULT = 0,
  SLDF_HAS_ID_LIST = 1,
  SLDF_HAS_LINK_INFO = 2,
  SLDF_HAS_NAME = 4,
  SLDF_HAS_RELPATH = 8,
  SLDF_HAS_WORKINGDIR = 16,
  SLDF_HAS_ARGS = 32,
  SLDF_HAS_ICONLOCATION = 64,
  SLDF_UNICODE = 128,
  SLDF_FORCE_NO_LINKINFO = 256,
  SLDF_HAS_EXP_SZ = 512,
  SLDF_RUN_IN_SEPARATE = 1024,
  SLDF_HAS_DARWINID = 4096,
  SLDF_RUNAS_USER = 8192,
  SLDF_HAS_EXP_ICON_SZ = 16384,
  SLDF_NO_PIDL_ALIAS = 0xffff8000,
  SLDF_FORCE_UNCNAME = 0x10000,
  SLDF_RUN_WITH_SHIMLAYER = 0x20000,
  SLDF_FORCE_NO_LINKTRACK = 0x40000,
  SLDF_ENABLE_TARGET_METADATA = 0x80000,
  SLDF_DISABLE_LINK_PATH_TRACKING = 0x100000,
  SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING = 0x200000,
  SLDF_NO_KF_ALIAS = 0x400000,
  SLDF_ALLOW_LINK_TO_LINK = 0x800000,
  SLDF_UNALIAS_ON_SAVE = 0x1000000,
  SLDF_PREFER_ENVIRONMENT_PATH = 0x2000000,
  SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET = 0x4000000,
  SLDF_PERSIST_VOLUME_ID_RELATIVE = 0x8000000,
  SLDF_VALID = 0xffff7ff,
  SLDF_RESERVED = -2147483648,
};

struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

typedef enum _STORAGE_RESERVE_ID
{
  StorageReserveIdNone = 0,
  StorageReserveIdHard = 1,
  StorageReserveIdSoft = 2,
  StorageReserveIdUpdateScratch = 3,
  StorageReserveIdMax = 4,
} STORAGE_RESERVE_ID, *PSTORAGE_RESERVE_ID;

class wil::details::<lambda_18d5264b4415236c27080edcc8a953ea>
{
}; /* size: 0x0001 */

typedef struct _RTL_BITMAP
{
  /* 0x0000 */ unsigned long SizeOfBitMap;
  /* 0x0004 */ long Padding_32;
  /* 0x0008 */ unsigned long* Buffer;
} RTL_BITMAP, *PRTL_BITMAP; /* size: 0x0010 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IDragOperationInternal>
{
}; /* size: 0x0010 */

typedef struct _SE_ACCESS_REQUEST
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_33;
  /* 0x0008 */ struct _SE_SECURITY_DESCRIPTOR* SeSecurityDescriptor;
  /* 0x0010 */ unsigned long DesiredAccess;
  /* 0x0014 */ unsigned long PreviouslyGrantedAccess;
  /* 0x0018 */ void* PrincipalSelfSid;
  /* 0x0020 */ struct _GENERIC_MAPPING* GenericMapping;
  /* 0x0028 */ unsigned long ObjectTypeListCount;
  /* 0x002c */ long Padding_34;
  /* 0x0030 */ struct _OBJECT_TYPE_LIST* ObjectTypeList;
} SE_ACCESS_REQUEST, *PSE_ACCESS_REQUEST; /* size: 0x0038 */

enum tagCOINITBASE
{
  COINITBASE_MULTITHREADED = 0,
};

typedef enum __vc_attributes::event_sourceAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
} _vc_attributes::event_sourceAttribute::type_e, *P_vc_attributes::event_sourceAttribute::type_e;

typedef enum __vc_attributes::event_sourceAttribute::optimize_e
{
  speed = 0,
  size = 1,
} _vc_attributes::event_sourceAttribute::optimize_e, *P_vc_attributes::event_sourceAttribute::optimize_e;

typedef struct __vc_attributes::event_sourceAttribute
{
  /* 0x0000 */ enum __vc_attributes::event_sourceAttribute::type_e type;
  /* 0x0004 */ enum __vc_attributes::event_sourceAttribute::optimize_e optimize;
  /* 0x0008 */ BOOL decorate;
  /* 0x0009 */ char __PADDING__[3];
} _vc_attributes::event_sourceAttribute, *P_vc_attributes::event_sourceAttribute; /* size: 0x000c */

enum tagFUNCKIND
{
  FUNC_VIRTUAL = 0,
  FUNC_PUREVIRTUAL = 1,
  FUNC_NONVIRTUAL = 2,
  FUNC_STATIC = 3,
  FUNC_DISPATCH = 4,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardProtectionServices> const >;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_16
{
  value = 1,
} TAG_UNNAMED_16, *PTAG_UNNAMED_16;

typedef struct _SINGLE_LIST_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<_KEY_VALUE_FULL_INFORMATION *,0,0>
{
  /* 0x0000 */ struct _KEY_VALUE_FULL_INFORMATION* __value_;
}; /* size: 0x0008 */

class wistd::__compressed_pair<_TOKEN_DEFAULT_DACL *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
}; /* size: 0x0008 */

enum tagVARKIND
{
  VAR_PERINSTANCE = 0,
  VAR_STATIC = 1,
  VAR_CONST = 2,
  VAR_DISPATCH = 3,
};

struct wistd::integral_constant<unsigned __int64,1>
{
  /* 0x0000 */ const unsigned __int64 value;
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

typedef struct _OCSP_CERT_ID
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB IssuerNameHash;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB IssuerKeyHash;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB SerialNumber;
} OCSP_CERT_ID, *POCSP_CERT_ID; /* size: 0x0048 */

typedef struct _OCSP_BASIC_RESPONSE_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0048 */ unsigned long dwCertStatus;
  /* 0x004c */ long Padding_35;
  /* 0x0050 */ struct _OCSP_BASIC_REVOKED_INFO* pRevokedInfo;
  /* 0x0058 */ struct _FILETIME ThisUpdate;
  /* 0x0060 */ struct _FILETIME NextUpdate;
  /* 0x0068 */ unsigned long cExtension;
  /* 0x006c */ long Padding_36;
  /* 0x0070 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_ENTRY, *POCSP_BASIC_RESPONSE_ENTRY; /* size: 0x0078 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>
{
}; /* size: 0x0008 */

enum tagURLZONE
{
  URLZONE_INVALID = -1,
  URLZONE_PREDEFINED_MIN = 0,
  URLZONE_LOCAL_MACHINE = 0,
  URLZONE_INTRANET = 1,
  URLZONE_TRUSTED = 2,
  URLZONE_INTERNET = 3,
  URLZONE_UNTRUSTED = 4,
  URLZONE_PREDEFINED_MAX = 999,
  URLZONE_USER_MIN = 1000,
  URLZONE_USER_MAX = 10000,
};

struct std::_Basic_container_proxy_ptr12
{
  /* 0x0000 */ struct std::_Container_proxy* _Ptr;
}; /* size: 0x0008 */

class CDefObject::CPrivUnknown
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Data::Text::TextSegment,0>
{
}; /* size: 0x0008 */

enum FreeResourcesFlags
{
  RESET_AND_FREE = 1,
  JUST_RESET = 2,
};

typedef struct _RPC_IF_ID
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_IF_ID, *PRPC_IF_ID; /* size: 0x0014 */

enum RESOURCE_LAYOUT_DIRECTION
{
  LTR = 0,
  RTL = 1,
  TTBLTR = 2,
  TTBRTL = 3,
};

typedef struct _FILE_PIPE_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long ReadDataAvailable;
  /* 0x0008 */ unsigned long NumberOfMessages;
  /* 0x000c */ unsigned long MessageLength;
  /* 0x0010 */ char Data[1];
  /* 0x0011 */ char __PADDING__[3];
} FILE_PIPE_PEEK_BUFFER, *PFILE_PIPE_PEEK_BUFFER; /* size: 0x0014 */

class wil::com_ptr_t<ITypeLib,wil::err_returncode_policy>
{
  /* 0x0000 */ struct ITypeLib* m_ptr;
}; /* size: 0x0008 */

struct IConnectionPointContainer
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

enum tagCLSCTX
{
  CLSCTX_INPROC_SERVER = 1,
  CLSCTX_INPROC_HANDLER = 2,
  CLSCTX_LOCAL_SERVER = 4,
  CLSCTX_INPROC_SERVER16 = 8,
  CLSCTX_REMOTE_SERVER = 16,
  CLSCTX_INPROC_HANDLER16 = 32,
  CLSCTX_RESERVED1 = 64,
  CLSCTX_RESERVED2 = 128,
  CLSCTX_RESERVED3 = 256,
  CLSCTX_RESERVED4 = 512,
  CLSCTX_NO_CODE_DOWNLOAD = 1024,
  CLSCTX_RESERVED5 = 2048,
  CLSCTX_NO_CUSTOM_MARSHAL = 4096,
  CLSCTX_ENABLE_CODE_DOWNLOAD = 8192,
  CLSCTX_NO_FAILURE_LOG = 16384,
  CLSCTX_DISABLE_AAA = 0xffff8000,
  CLSCTX_ENABLE_AAA = 0x10000,
  CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
  CLSCTX_ACTIVATE_X86_SERVER = 0x40000,
  CLSCTX_ACTIVATE_32_BIT_SERVER = 0x40000,
  CLSCTX_ACTIVATE_64_BIT_SERVER = 0x80000,
  CLSCTX_ENABLE_CLOAKING = 0x100000,
  CLSCTX_APPCONTAINER = 0x400000,
  CLSCTX_ACTIVATE_AAA_AS_IU = 0x800000,
  CLSCTX_RESERVED6 = 0x1000000,
  CLSCTX_ACTIVATE_ARM32_SERVER = 0x2000000,
  CLSCTX_ALLOW_LOWER_TRUST_REGISTRATION = 0x4000000,
  CLSCTX_PS_DLL = -2147483648,
};

typedef struct _LDBL12
{
  /* 0x0000 */ unsigned char ld12[12];
} LDBL12, *PLDBL12; /* size: 0x000c */

typedef struct _CAT_NAMEVALUE
{
  /* 0x0000 */ wchar_t* pwszTag;
  /* 0x0008 */ unsigned long fdwFlags;
  /* 0x000c */ long Padding_37;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CAT_NAMEVALUE, *PCAT_NAMEVALUE; /* size: 0x0020 */

class wil::details::<lambda_2f9d2ffb810523de44311142fa7a8c90>
{
}; /* size: 0x0001 */

typedef enum _URLZONEREG
{
  URLZONEREG_DEFAULT = 0,
  URLZONEREG_HKLM = 1,
  URLZONEREG_HKCU = 2,
} URLZONEREG, *PURLZONEREG;

struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFile *>
{
}; /* size: 0x0008 */

enum Windows::Foundation::Diagnostics::RoErrorReportingFlags
{
  None = 0,
  SuppressExceptions = 1,
  ForceExceptions = 2,
  UseSetErrorInfo = 4,
  SuppressSetErrorInfo = 8,
};

typedef struct _PS_MITIGATION_OPTIONS_MAP
{
  /* 0x0000 */ unsigned __int64 Map[3];
} PS_MITIGATION_OPTIONS_MAP, *PPS_MITIGATION_OPTIONS_MAP; /* size: 0x0018 */

enum SE_WS_APPX_SIGNATURE_ORIGIN
{
  SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED = 0,
  SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN = 1,
  SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE = 2,
  SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS = 3,
  SE_WS_APPX_SIGNATURE_ORIGIN_ENTERPRISE = 4,
};

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<_TOKEN_GROUPS_AND_PRIVILEGES *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<_TOKEN_GROUPS_AND_PRIVILEGES,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_TOKEN_GROUPS_AND_PRIVILEGES *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > __ptr_;
}; /* size: 0x0008 */

struct IOleInPlaceSiteEx
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

typedef enum _MEM_DEDICATED_ATTRIBUTE_TYPE
{
  MemDedicatedAttributeReadBandwidth = 0,
  MemDedicatedAttributeReadLatency = 1,
  MemDedicatedAttributeWriteBandwidth = 2,
  MemDedicatedAttributeWriteLatency = 3,
  MemDedicatedAttributeMax = 4,
} MEM_DEDICATED_ATTRIBUTE_TYPE, *PMEM_DEDICATED_ATTRIBUTE_TYPE;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

typedef struct _MALLOC_FREE_STRUCT
{
  /* 0x0000 */ void* pfnAllocate /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
} MALLOC_FREE_STRUCT, *PMALLOC_FREE_STRUCT; /* size: 0x0010 */

typedef enum _KHETERO_CPU_POLICY
{
  KHeteroCpuPolicyAll = 0,
  KHeteroCpuPolicyLarge = 1,
  KHeteroCpuPolicyLargeOrIdle = 2,
  KHeteroCpuPolicySmall = 3,
  KHeteroCpuPolicySmallOrIdle = 4,
  KHeteroCpuPolicyDynamic = 5,
  KHeteroCpuPolicyStaticMax = 5,
  KHeteroCpuPolicyBiasedSmall = 6,
  KHeteroCpuPolicyBiasedLarge = 7,
  KHeteroCpuPolicyDefault = 8,
  KHeteroCpuPolicyMax = 9,
} KHETERO_CPU_POLICY, *PKHETERO_CPU_POLICY;

class wistd::__function::__base<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>
{
}; /* size: 0x0008 */

enum tagDESCKIND
{
  DESCKIND_NONE = 0,
  DESCKIND_FUNCDESC = 1,
  DESCKIND_VARDESC = 2,
  DESCKIND_TYPECOMP = 3,
  DESCKIND_IMPLICITAPPOBJ = 4,
  DESCKIND_MAX = 5,
};

typedef enum __MIDL_IGetBindHandle_0001
{
  BINDHANDLETYPES_APPCACHE = 0,
  BINDHANDLETYPES_DEPENDENCY = 1,
  BINDHANDLETYPES_COUNT = 2,
} _MIDL_IGetBindHandle_0001, *P_MIDL_IGetBindHandle_0001;

enum KNOWN_FOLDER_FLAG
{
  KF_FLAG_DEFAULT = 0,
  KF_FLAG_FORCE_APP_DATA_REDIRECTION = 0x80000,
  KF_FLAG_RETURN_FILTER_REDIRECTION_TARGET = 0x40000,
  KF_FLAG_FORCE_PACKAGE_REDIRECTION = 0x20000,
  KF_FLAG_NO_PACKAGE_REDIRECTION = 0x10000,
  KF_FLAG_FORCE_APPCONTAINER_REDIRECTION = 0x20000,
  KF_FLAG_NO_APPCONTAINER_REDIRECTION = 0x10000,
  KF_FLAG_CREATE = 0xffff8000,
  KF_FLAG_DONT_VERIFY = 16384,
  KF_FLAG_DONT_UNEXPAND = 8192,
  KF_FLAG_NO_ALIAS = 4096,
  KF_FLAG_INIT = 2048,
  KF_FLAG_DEFAULT_PATH = 1024,
  KF_FLAG_NOT_PARENT_RELATIVE = 512,
  KF_FLAG_SIMPLE_IDLIST = 256,
  KF_FLAG_ALIAS_ONLY = -2147483648,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::System::IUser *>
{
}; /* size: 0x0001 */

typedef struct _FILE_STANDARD_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFO, *PFILE_STANDARD_INFO; /* size: 0x0018 */

struct IPersistMemory
{
}; /* size: 0x0008 */

class LargeIntRegMultiply<__int64,unsigned int>
{
}; /* size: 0x0001 */

typedef enum _MEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE
{
  MemoryNotContiguous = 0,
  MemoryAlignedAndContiguous = 1,
  MemoryNotResident = 2,
  MemoryNotEligibleToMakeContiguous = 3,
  MemoryContiguityStateMax = 4,
} MEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE, *PMEMORY_PHYSICAL_CONTIGUITY_UNIT_STATE;

struct Windows::Foundation::Collections::is_pointer<unsigned int>
{
}; /* size: 0x0001 */

enum PIDMSI_STATUS_VALUE
{
  PIDMSI_STATUS_NORMAL = 0,
  PIDMSI_STATUS_NEW = 1,
  PIDMSI_STATUS_PRELIM = 2,
  PIDMSI_STATUS_DRAFT = 3,
  PIDMSI_STATUS_INPROGRESS = 4,
  PIDMSI_STATUS_EDIT = 5,
  PIDMSI_STATUS_REVIEW = 6,
  PIDMSI_STATUS_PROOF = 7,
  PIDMSI_STATUS_FINAL = 8,
  PIDMSI_STATUS_OTHER = 32767,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>
{
}; /* size: 0x0008 */

enum tagDHFlags
{
  DH_SAME_AS_LOAD = 1,
  DH_CONTAINED_OBJECT = 2,
  DH_LOCKED_CONTAINER = 4,
  DH_FORCED_RUNNING = 8,
  DH_EMBEDDING = 16,
  DH_INIT_NEW = 32,
  DH_STATIC = 64,
  DH_INPROC_HANDLER = 128,
  DH_DELAY_CREATE = 256,
  DH_COM_OUTEROBJECT = 512,
  DH_UNMARSHALED = 1024,
  DH_CLEANEDUP = 2048,
  DH_OLE1SERVER = 4096,
  DH_APICREATE = 8192,
};

struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibrary *>
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> >
{
}; /* size: 0x0008 */

struct IUnknown
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<HSTRING__ *,1>
{
}; /* size: 0x0008 */

typedef enum _FILE_ID_TYPE
{
  FileIdType = 0,
  ObjectIdType = 1,
  ExtendedFileIdType = 2,
  MaximumFileIdType = 3,
} FILE_ID_TYPE, *PFILE_ID_TYPE;

enum tagSYSKIND
{
  SYS_WIN16 = 0,
  SYS_WIN32 = 1,
  SYS_MAC = 2,
  SYS_WIN64 = 3,
};

class Microsoft::WRL::ComPtr<IComClassIterator>
{
  /* 0x0000 */ struct IComClassIterator* ptr_;
}; /* size: 0x0008 */

struct GetTypeValueImpl<long,unsigned short const *,unsigned long,long>
{
}; /* size: 0x0001 */

class IsInt<__int64>
{
}; /* size: 0x0001 */

struct tagCFEntry
{
  /* 0x0000 */ const struct _GUID* pclsid;
  /* 0x0008 */ void* pfnCI /* function */;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

enum tagGLOBALOPT_EH_VALUES
{
  COMGLB_EXCEPTION_HANDLE = 0,
  COMGLB_EXCEPTION_DONOT_HANDLE_FATAL = 1,
  COMGLB_EXCEPTION_DONOT_HANDLE = 1,
  COMGLB_EXCEPTION_DONOT_HANDLE_ANY = 2,
};

typedef enum _TAG_UNNAMED_17
{
  value = 1,
} TAG_UNNAMED_17, *PTAG_UNNAMED_17;

struct IOlePresObj
{
}; /* size: 0x0008 */

typedef struct _VCN_RANGE_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0008 */ union _LARGE_INTEGER ClusterCount;
} VCN_RANGE_INPUT_BUFFER, *PVCN_RANGE_INPUT_BUFFER; /* size: 0x0010 */

class LargeIntRegMultiply<int,__int64>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::atl::perfmonAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ BOOL register;
  /* 0x0009 */ char __PADDING__[7];
} _vc_attributes::atl::perfmonAttribute, *P_vc_attributes::atl::perfmonAttribute; /* size: 0x0010 */

enum tagCHANGEKIND
{
  CHANGEKIND_ADDMEMBER = 0,
  CHANGEKIND_DELETEMEMBER = 1,
  CHANGEKIND_SETNAMES = 2,
  CHANGEKIND_SETDOCUMENTATION = 3,
  CHANGEKIND_GENERAL = 4,
  CHANGEKIND_INVALIDATE = 5,
  CHANGEKIND_CHANGEFAILED = 6,
  CHANGEKIND_MAX = 7,
};

class wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_35813abc48134a673502c50f3be72d9b>;

struct std::_Atomic_padded<long>
{
  /* 0x0000 */ long _Value;
}; /* size: 0x0004 */

struct std::_Atomic_storage<long,4>
{
  /* 0x0000 */ struct std::_Atomic_padded<long> _Storage;
}; /* size: 0x0004 */

typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned __int64 Hint1;
  /* 0x0008 */ unsigned __int64 Hint2;
  /* 0x0010 */ unsigned __int64 Clsn;
  /* 0x0018 */ long Status;
  /* 0x001c */ long __PADDING__[1];
} FILE_INITIATE_REPAIR_OUTPUT_BUFFER, *PFILE_INITIATE_REPAIR_OUTPUT_BUFFER; /* size: 0x0020 */

typedef enum _REFS_STREAM_SNAPSHOT_OPERATION
{
  REFS_STREAM_SNAPSHOT_OPERATION_INVALID = 0,
  REFS_STREAM_SNAPSHOT_OPERATION_CREATE = 1,
  REFS_STREAM_SNAPSHOT_OPERATION_LIST = 2,
  REFS_STREAM_SNAPSHOT_OPERATION_QUERY_DELTAS = 3,
  REFS_STREAM_SNAPSHOT_OPERATION_REVERT = 4,
  REFS_STREAM_SNAPSHOT_OPERATION_SET_SHADOW_BTREE = 5,
  REFS_STREAM_SNAPSHOT_OPERATION_CLEAR_SHADOW_BTREE = 6,
  REFS_STREAM_SNAPSHOT_OPERATION_MAX = 6,
} REFS_STREAM_SNAPSHOT_OPERATION, *PREFS_STREAM_SNAPSHOT_OPERATION;

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0008 */ struct _GUID* SubjectType;
  /* 0x0010 */ void* Subject;
} WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT, *PWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT; /* size: 0x0018 */

struct IPropertyNotifySink
{
}; /* size: 0x0008 */

struct DataObjectFormats::CLIPBOARDFORMATENTRY
{
  /* 0x0000 */ unsigned short format;
  /* 0x0002 */ char Padding_38[6];
  /* 0x0008 */ const wchar_t* name;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_18
{
  value = 0,
} TAG_UNNAMED_18, *PTAG_UNNAMED_18;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Notify::__l2::<lambda_c9f70ef396276824209f5bb13f61de84>
{
  /* 0x0000 */ long lEvent;
  /* 0x0004 */ long Padding_39;
  /* 0x0008 */ struct tagVARIANT* pVar;
}; /* size: 0x0010 */

typedef enum _FIRMWARE_TYPE
{
  FirmwareTypeUnknown = 0,
  FirmwareTypeBios = 1,
  FirmwareTypeUefi = 2,
  FirmwareTypeMax = 3,
} FIRMWARE_TYPE, *PFIRMWARE_TYPE;

struct RPC_STATS_VECTOR
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ unsigned long Stats[1];
}; /* size: 0x0008 */

struct tagEMR
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
}; /* size: 0x0008 */

typedef struct _RECTL
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
} RECTL, *PRECTL; /* size: 0x0010 */

typedef struct _POINTL
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
} POINTL, *PPOINTL; /* size: 0x0008 */

struct tagEMRPOLYPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cptl;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct _POINTL aptl[1];
}; /* size: 0x002c */

struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned int>
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
} MINIDUMP_INCLUDE_MODULE_CALLBACK, *PMINIDUMP_INCLUDE_MODULE_CALLBACK; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

typedef enum _REFS_SET_VOLUME_COMPRESSION_INFO_FLAGS
{
  REFS_SET_VOLUME_COMPRESSION_INFO_FLAG_COMPRESS_SYNC = 1,
  REFS_SET_VOLUME_COMPRESSION_INFO_FLAG_MAX = 1,
} REFS_SET_VOLUME_COMPRESSION_INFO_FLAGS, *PREFS_SET_VOLUME_COMPRESSION_INFO_FLAGS;

class Windows::Storage::FileProperties::VideoProperties;

class wil::details::unique_storage<wil::details::resource_policy<void *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClipboardBrokerInternal>* ptr_;
}; /* size: 0x0008 */

typedef enum _JOBOBJECTINFOCLASS
{
  JobObjectBasicAccountingInformation = 1,
  JobObjectBasicLimitInformation = 2,
  JobObjectBasicProcessIdList = 3,
  JobObjectBasicUIRestrictions = 4,
  JobObjectSecurityLimitInformation = 5,
  JobObjectEndOfJobTimeInformation = 6,
  JobObjectAssociateCompletionPortInformation = 7,
  JobObjectBasicAndIoAccountingInformation = 8,
  JobObjectExtendedLimitInformation = 9,
  JobObjectJobSetInformation = 10,
  JobObjectGroupInformation = 11,
  JobObjectNotificationLimitInformation = 12,
  JobObjectLimitViolationInformation = 13,
  JobObjectGroupInformationEx = 14,
  JobObjectCpuRateControlInformation = 15,
  JobObjectCompletionFilter = 16,
  JobObjectCompletionCounter = 17,
  JobObjectFreezeInformation = 18,
  JobObjectExtendedAccountingInformation = 19,
  JobObjectWakeInformation = 20,
  JobObjectBackgroundInformation = 21,
  JobObjectSchedulingRankBiasInformation = 22,
  JobObjectTimerVirtualizationInformation = 23,
  JobObjectCycleTimeNotification = 24,
  JobObjectClearEvent = 25,
  JobObjectInterferenceInformation = 26,
  JobObjectClearPeakJobMemoryUsed = 27,
  JobObjectMemoryUsageInformation = 28,
  JobObjectSharedCommit = 29,
  JobObjectContainerId = 30,
  JobObjectIoRateControlInformation = 31,
  JobObjectSiloRootDirectory = 37,
  JobObjectServerSiloBasicInformation = 38,
  JobObjectServerSiloUserSharedData = 39,
  JobObjectServerSiloInitialize = 40,
  JobObjectServerSiloRunningState = 41,
  JobObjectIoAttribution = 42,
  JobObjectMemoryPartitionInformation = 43,
  JobObjectContainerTelemetryId = 44,
  JobObjectSiloSystemRoot = 45,
  JobObjectEnergyTrackingState = 46,
  JobObjectThreadImpersonationInformation = 47,
  JobObjectIoPriorityLimit = 48,
  JobObjectPagePriorityLimit = 49,
  JobObjectReserved1Information = 18,
  JobObjectReserved2Information = 19,
  JobObjectReserved3Information = 20,
  JobObjectReserved4Information = 21,
  JobObjectReserved5Information = 22,
  JobObjectReserved6Information = 23,
  JobObjectReserved7Information = 24,
  JobObjectReserved8Information = 25,
  JobObjectReserved9Information = 26,
  JobObjectReserved10Information = 27,
  JobObjectReserved11Information = 28,
  JobObjectReserved12Information = 29,
  JobObjectReserved13Information = 30,
  JobObjectReserved14Information = 31,
  JobObjectNetRateControlInformation = 32,
  JobObjectNotificationLimitInformation2 = 33,
  JobObjectLimitViolationInformation2 = 34,
  JobObjectCreateSilo = 35,
  JobObjectSiloBasicInformation = 36,
  JobObjectReserved15Information = 37,
  JobObjectReserved16Information = 38,
  JobObjectReserved17Information = 39,
  JobObjectReserved18Information = 40,
  JobObjectReserved19Information = 41,
  JobObjectReserved20Information = 42,
  JobObjectReserved21Information = 43,
  JobObjectReserved22Information = 44,
  JobObjectReserved23Information = 45,
  JobObjectReserved24Information = 46,
  JobObjectReserved25Information = 47,
  JobObjectReserved26Information = 48,
  JobObjectReserved27Information = 49,
  MaxJobObjectInfoClass = 50,
} JOBOBJECTINFOCLASS, *PJOBOBJECTINFOCLASS;

struct SHashChain
{
  /* 0x0000 */ struct SHashChain* pNext;
  /* 0x0008 */ struct SHashChain* pPrev;
}; /* size: 0x0010 */

struct SMultiGUIDKey
{
  /* 0x0000 */ int cGUID;
  /* 0x0004 */ long Padding_40;
  /* 0x0008 */ struct _GUID* aGUID;
}; /* size: 0x0010 */

struct SMultiGUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct SMultiGUIDKey key;
}; /* size: 0x0020 */

enum Windows::System::UserWatcherUpdateKind
{
  UserWatcherUpdateKind_Properties = 0,
  UserWatcherUpdateKind_Picture = 1,
};

class wil::details::<lambda_36b6383059ccf096d9b86cd05953661d>
{
}; /* size: 0x0001 */

struct ICallFactory
{
}; /* size: 0x0008 */

typedef struct _MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION
{
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long CommitEvents : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long Spare : 31; /* bit position: 1 */
      }; /* bitfield */
      /* 0x0000 */ unsigned long AllFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Flags;
  /* 0x0004 */ unsigned long HandleAttributes;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ long Padding_41;
  /* 0x0010 */ void* LowCommitCondition;
  /* 0x0018 */ void* HighCommitCondition;
  /* 0x0020 */ void* MaximumCommitCondition;
} MEMORY_PARTITION_MEMORY_EVENTS_INFORMATION, *PMEMORY_PARTITION_MEMORY_EVENTS_INFORMATION; /* size: 0x0028 */

enum VARENUM
{
  VT_EMPTY = 0,
  VT_NULL = 1,
  VT_I2 = 2,
  VT_I4 = 3,
  VT_R4 = 4,
  VT_R8 = 5,
  VT_CY = 6,
  VT_DATE = 7,
  VT_BSTR = 8,
  VT_DISPATCH = 9,
  VT_ERROR = 10,
  VT_BOOL = 11,
  VT_VARIANT = 12,
  VT_UNKNOWN = 13,
  VT_DECIMAL = 14,
  VT_I1 = 16,
  VT_UI1 = 17,
  VT_UI2 = 18,
  VT_UI4 = 19,
  VT_I8 = 20,
  VT_UI8 = 21,
  VT_INT = 22,
  VT_UINT = 23,
  VT_VOID = 24,
  VT_HRESULT = 25,
  VT_PTR = 26,
  VT_SAFEARRAY = 27,
  VT_CARRAY = 28,
  VT_USERDEFINED = 29,
  VT_LPSTR = 30,
  VT_LPWSTR = 31,
  VT_RECORD = 36,
  VT_INT_PTR = 37,
  VT_UINT_PTR = 38,
  VT_FILETIME = 64,
  VT_BLOB = 65,
  VT_STREAM = 66,
  VT_STORAGE = 67,
  VT_STREAMED_OBJECT = 68,
  VT_STORED_OBJECT = 69,
  VT_BLOB_OBJECT = 70,
  VT_CF = 71,
  VT_CLSID = 72,
  VT_VERSIONED_STREAM = 73,
  VT_BSTR_BLOB = 4095,
  VT_VECTOR = 4096,
  VT_ARRAY = 8192,
  VT_BYREF = 16384,
  VT_RESERVED = 0xffff8000,
  VT_ILLEGAL = 0xffffffff,
  VT_ILLEGALMASKED = 4095,
  VT_TYPEMASK = 4095,
};

struct tagOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ long Padding_42;
  /* 0x0020 */ unsigned char* data;
}; /* size: 0x0028 */

class wil::details::<lambda_7840d9aae3ca824ac8870ae3063b1c35>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

class wil::com_ptr_t<IObjectWithSite,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IObjectWithSite* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>
{
}; /* size: 0x0008 */

struct tagCIEXYZ
{
  /* 0x0000 */ long ciexyzX;
  /* 0x0004 */ long ciexyzY;
  /* 0x0008 */ long ciexyzZ;
}; /* size: 0x000c */

struct tagICEXYZTRIPLE
{
  /* 0x0000 */ struct tagCIEXYZ ciexyzRed;
  /* 0x000c */ struct tagCIEXYZ ciexyzGreen;
  /* 0x0018 */ struct tagCIEXYZ ciexyzBlue;
}; /* size: 0x0024 */

struct tagLOGCOLORSPACEA
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ char lcsFilename[260];
}; /* size: 0x0148 */

enum tagTYSPEC
{
  TYSPEC_CLSID = 0,
  TYSPEC_FILEEXT = 1,
  TYSPEC_MIMETYPE = 2,
  TYSPEC_FILENAME = 3,
  TYSPEC_PROGID = 4,
  TYSPEC_PACKAGENAME = 5,
  TYSPEC_OBJECTID = 6,
};

typedef struct _IMAGE_DYNAMIC_RELOCATION_TABLE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
} IMAGE_DYNAMIC_RELOCATION_TABLE, *PIMAGE_DYNAMIC_RELOCATION_TABLE; /* size: 0x0008 */

struct tagVersionedStream
{
  /* 0x0000 */ struct _GUID guidVersion;
  /* 0x0010 */ struct IStream* pStream;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>
{
}; /* size: 0x0008 */

enum WilFailureReportFlags
{
  None = 0,
  SuppressUnwatched = 1,
  SuppressRecent = 2,
  SuppressWatched = 4,
  AlwaysMonitorUnwatched = 8,
};

class wil::details_abi::SemaphoreValue
{
  /* 0x0000 */ class wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_semaphore;
  /* 0x0008 */ class wil::unique_any_t<wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_semaphoreHigh;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<HSTRING__ *>
{
}; /* size: 0x0008 */

typedef enum _REFS_COMPRESSION_FORMATS
{
  REFS_COMPRESSION_FORMAT_UNCOMPRESSED = 0,
  REFS_COMPRESSION_FORMAT_LZ4 = 1,
  REFS_COMPRESSION_FORMAT_ZSTD = 2,
  REFS_COMPRESSION_FORMAT_MAX = 3,
} REFS_COMPRESSION_FORMATS, *PREFS_COMPRESSION_FORMATS;

struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>
{
}; /* size: 0x0008 */

enum LSA_FOREST_TRUST_RECORD_TYPE
{
  ForestTrustTopLevelName = 0,
  ForestTrustTopLevelNameEx = 1,
  ForestTrustDomainInfo = 2,
  ForestTrustBinaryInfo = 3,
  ForestTrustScannerInfo = 4,
  ForestTrustRecordTypeLast = 4,
};

typedef enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e
{
  eBoolean = 0,
  eInteger = 1,
  eFloat = 2,
  eDouble = 3,
} _vc_attributes::helper_attributes::v1_alttypeAttribute::type_e, *P_vc_attributes::helper_attributes::v1_alttypeAttribute::type_e;

typedef struct __vc_attributes::helper_attributes::v1_alttypeAttribute
{
  /* 0x0000 */ enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e type;
} _vc_attributes::helper_attributes::v1_alttypeAttribute, *P_vc_attributes::helper_attributes::v1_alttypeAttribute; /* size: 0x0004 */

typedef enum _LMR_QUERY_INFO_CLASS
{
  LMRQuerySessionInfo = 1,
} LMR_QUERY_INFO_CLASS, *PLMR_QUERY_INFO_CLASS;

typedef struct _LMR_QUERY_INFO_PARAM
{
  /* 0x0000 */ enum _LMR_QUERY_INFO_CLASS Operation;
} LMR_QUERY_INFO_PARAM, *PLMR_QUERY_INFO_PARAM; /* size: 0x0004 */

class Microsoft::WRL::ComPtr<CProcessExtensionTbl>
{
  /* 0x0000 */ class CProcessExtensionTbl* ptr_;
}; /* size: 0x0008 */

typedef struct _VM_COUNTERS_EX
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_43;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0058 */ unsigned __int64 PrivateUsage;
} VM_COUNTERS_EX, *PVM_COUNTERS_EX; /* size: 0x0060 */

typedef struct _VM_COUNTERS_EX2
{
  /* 0x0000 */ struct _VM_COUNTERS_EX CountersEx;
  /* 0x0060 */ unsigned __int64 PrivateWorkingSetSize;
  /* 0x0068 */ unsigned __int64 SharedCommitUsage;
} VM_COUNTERS_EX2, *PVM_COUNTERS_EX2; /* size: 0x0070 */

struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IInputStream *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _RTC_ErrorNumber
{
  _RTC_CHKSTK = 0,
  _RTC_CVRT_LOSS_INFO = 1,
  _RTC_CORRUPT_STACK = 2,
  _RTC_UNINIT_LOCAL_USE = 3,
  _RTC_CORRUPTED_ALLOCA = 4,
  _RTC_ILLEGAL = 5,
} RTC_ErrorNumber, *PRTC_ErrorNumber;

enum tagRunAsType
{
  RunAsSpecifiedUser = 0,
  RunAsInteractiveUser = 1,
  RunAsLaunchingUser = 2,
  RunAsSessionVirtual = 3,
  RunAsPackage = 4,
};

struct tagVS_FIXEDFILEINFO
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwStrucVersion;
  /* 0x0008 */ unsigned long dwFileVersionMS;
  /* 0x000c */ unsigned long dwFileVersionLS;
  /* 0x0010 */ unsigned long dwProductVersionMS;
  /* 0x0014 */ unsigned long dwProductVersionLS;
  /* 0x0018 */ unsigned long dwFileFlagsMask;
  /* 0x001c */ unsigned long dwFileFlags;
  /* 0x0020 */ unsigned long dwFileOS;
  /* 0x0024 */ unsigned long dwFileType;
  /* 0x0028 */ unsigned long dwFileSubtype;
  /* 0x002c */ unsigned long dwFileDateMS;
  /* 0x0030 */ unsigned long dwFileDateLS;
}; /* size: 0x0034 */

typedef struct _MINIDUMP_MODULE_CALLBACK
{
  /* 0x0000 */ wchar_t* FullPath;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long CheckSum;
  /* 0x0018 */ unsigned long TimeDateStamp;
  /* 0x001c */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x0050 */ void* CvRecord;
  /* 0x0058 */ unsigned long SizeOfCvRecord;
  /* 0x005c */ void* MiscRecord;
  /* 0x0064 */ unsigned long SizeOfMiscRecord;
} MINIDUMP_MODULE_CALLBACK, *PMINIDUMP_MODULE_CALLBACK; /* size: 0x0068 */

struct tagServerInformation
{
  /* 0x0000 */ unsigned long dwServerPid;
  /* 0x0004 */ unsigned long dwServerTid;
  /* 0x0008 */ unsigned __int64 ui64ServerAddress;
}; /* size: 0x0010 */

class wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy>
{
}; /* size: 0x0008 */

enum AppModelPolicy_PolicyValue
{
  AppModelPolicy_LifecycleManager_Unmanaged = 0x10000,
  AppModelPolicy_LifecycleManager_ManagedByPLM = 0x10001,
  AppModelPolicy_LifecycleManager_ManagedByEM = 0x10002,
  AppModelPolicy_AppDataAccess_Allowed = 0x20000,
  AppModelPolicy_AppDataAccess_Denied = 0x20001,
  AppModelPolicy_WindowingModel_Hwnd = 0x30000,
  AppModelPolicy_WindowingModel_CoreWindow = 0x30001,
  AppModelPolicy_WindowingModel_LegacyPhone = 0x30002,
  AppModelPolicy_WindowingModel_None = 0x30003,
  AppModelPolicy_DllSearchOrder_Traditional = 0x40000,
  AppModelPolicy_DllSearchOrder_PackageGraphBased = 0x40001,
  AppModelPolicy_Fusion_Full = 0x50000,
  AppModelPolicy_Fusion_Limited = 0x50001,
  AppModelPolicy_NonWindowsCodecLoading_Allowed = 0x60000,
  AppModelPolicy_NonWindowsCodecLoading_Denied = 0x60001,
  AppModelPolicy_ProcessEnd_TerminateProcess = 0x70000,
  AppModelPolicy_ProcessEnd_ExitProcess = 0x70001,
  AppModelPolicy_BeginThreadInit_RoInitialize = 0x80000,
  AppModelPolicy_BeginThreadInit_None = 0x80001,
  AppModelPolicy_DeveloperInformation_UI = 0x90000,
  AppModelPolicy_DeveloperInformation_None = 0x90001,
  AppModelPolicy_CreateFileAccess_Full = 0xa0000,
  AppModelPolicy_CreateFileAccess_Limited = 0xa0001,
  AppModelPolicy_ImplicitPackageBreakaway_Allowed = 0xb0000,
  AppModelPolicy_ImplicitPackageBreakaway_Denied = 0xb0001,
  AppModelPolicy_ImplicitPackageBreakaway_DeniedByApp = 0xb0002,
  AppModelPolicy_ProcessActivationShim_None = 0xc0000,
  AppModelPolicy_ProcessActivationShim_PackagedCWALauncher = 0xc0001,
  AppModelPolicy_AppKnownToStateRepository_Known = 0xd0000,
  AppModelPolicy_AppKnownToStateRepository_Unknown = 0xd0001,
  AppModelPolicy_AudioManagement_Unmanaged = 0xe0000,
  AppModelPolicy_AudioManagement_ManagedByPBM = 0xe0001,
  AppModelPolicy_PackageMayContainPublicComRegistrations_Yes = 0xf0000,
  AppModelPolicy_PackageMayContainPublicComRegistrations_No = 0xf0001,
  AppModelPolicy_PackageMayContainPrivateComRegistrations_None = 0x100000,
  AppModelPolicy_PackageMayContainPrivateComRegistrations_PrivateHive = 0x100001,
  AppModelPolicy_LaunchCreateProcessExtensions_None = 0x110000,
  AppModelPolicy_LaunchCreateProcessExtensions_RegisterWithPsm = 0x110001,
  AppModelPolicy_LaunchCreateProcessExtensions_RegisterWithDesktopAppX = 0x110002,
  AppModelPolicy_LaunchCreateProcessExtensions_RegisterWithDesktopAppXNoHeliumContainer = 0x110003,
  AppModelPolicy_ClrCompat_Others = 0x120000,
  AppModelPolicy_ClrCompat_ClassicDesktop = 0x120001,
  AppModelPolicy_ClrCompat_Universal = 0x120002,
  AppModelPolicy_ClrCompat_PackagedDesktop = 0x120003,
  AppModelPolicy_LoaderIgnoreAlteredSearchForRelativePath_False = 0x130000,
  AppModelPolicy_LoaderIgnoreAlteredSearchForRelativePath_True = 0x130001,
  AppModelPolicy_ImplicitlyActivateClassicAAAServersAsIU_Yes = 0x140000,
  AppModelPolicy_ImplicitlyActivateClassicAAAServersAsIU_No = 0x140001,
  AppModelPolicy_ComClassicCatalog_MachineHiveAndUserHive = 0x150000,
  AppModelPolicy_ComClassicCatalog_MachineHiveOnly = 0x150001,
  AppModelPolicy_ComUnmarshaling_ForceStrongUnmarshaling = 0x160000,
  AppModelPolicy_ComUnmarshaling_ApplicationManaged = 0x160001,
  AppModelPolicy_ComAppLaunchPerfEnhancements_Enabled = 0x170000,
  AppModelPolicy_ComAppLaunchPerfEnhancements_Disabled = 0x170001,
  AppModelPolicy_ComSecurityInitialization_ApplicationManaged = 0x180000,
  AppModelPolicy_ComSecurityInitialization_SystemManaged = 0x180001,
  AppModelPolicy_RoInitializeSingleThreadedBehavior_ASTA = 0x190000,
  AppModelPolicy_RoInitializeSingleThreadedBehavior_STA = 0x190001,
  AppModelPolicy_ComDefaultExceptionHandling_HandleAll = 0x1a0000,
  AppModelPolicy_ComDefaultExceptionHandling_HandleNone = 0x1a0001,
  AppModelPolicy_ComOopProxyAgility_Agile = 0x1b0000,
  AppModelPolicy_ComOopProxyAgility_NonAgile = 0x1b0001,
  AppModelPolicy_AppServiceLifetime_StandardTimeout = 0x1c0000,
  AppModelPolicy_AppServiceLifetime_ExtensibleTimeout = 0x1c0001,
  AppModelPolicy_AppServiceLifetime_ExtendedForSamePackage = 0x1c0002,
  AppModelPolicy_WebPlatform_Edge = 0x1d0000,
  AppModelPolicy_WebPlatform_Legacy = 0x1d0001,
  AppModelPolicy_WinInetStoragePartitioning_Isolated = 0x1e0000,
  AppModelPolicy_WinInetStoragePartitioning_SharedWithAppContainer = 0x1e0001,
  AppModelPolicy_IndexerProtocolHandlerHost_PerUser = 0x1f0000,
  AppModelPolicy_IndexerProtocolHandlerHost_PerApp = 0x1f0001,
  AppModelPolicy_LoaderIncludeUserDirectories_False = 0x200000,
  AppModelPolicy_LoaderIncludeUserDirectories_True = 0x200001,
  AppModelPolicy_ConvertAppContainerToRestrictedAppContainer_False = 0x210000,
  AppModelPolicy_ConvertAppContainerToRestrictedAppContainer_True = 0x210001,
  AppModelPolicy_PackageMayContainPrivateMapiProvider_None = 0x220000,
  AppModelPolicy_PackageMayContainPrivateMapiProvider_PrivateHive = 0x220001,
  AppModelPolicy_AdminProcessPackageClaims_None = 0x230000,
  AppModelPolicy_AdminProcessPackageClaims_Caller = 0x230001,
  AppModelPolicy_RegistryRedirectionBehavior_None = 0x240000,
  AppModelPolicy_RegistryRedirectionBehavior_CopyOnWrite = 0x240001,
  AppModelPolicy_BypassCreateProcessAppxExtension_False = 0x250000,
  AppModelPolicy_BypassCreateProcessAppxExtension_True = 0x250001,
  AppModelPolicy_KnownFolderRedirection_Isolated = 0x260000,
  AppModelPolicy_KnownFolderRedirection_RedirectToPackage = 0x260001,
  AppModelPolicy_PrivateActivateAsPackageWinrtClasses_AllowNone = 0x270000,
  AppModelPolicy_PrivateActivateAsPackageWinrtClasses_AllowFullTrust = 0x270001,
  AppModelPolicy_PrivateActivateAsPackageWinrtClasses_AllowNonFullTrust = 0x270002,
  AppModelPolicy_AppPrivateFolderRedirection_None = 0x280000,
  AppModelPolicy_AppPrivateFolderRedirection_AppPrivate = 0x280001,
  AppModelPolicy_GlobalSystemAppDataAccess_Normal = 0x290000,
  AppModelPolicy_GlobalSystemAppDataAccess_Virtualized = 0x290001,
  AppModelPolicy_ConsoleHandleInheritance_ConsoleOnly = 0x2a0000,
  AppModelPolicy_ConsoleHandleInheritance_All = 0x2a0001,
  AppModelPolicy_ConsoleBufferAccess_RestrictedUnidirectional = 0x2b0000,
  AppModelPolicy_ConsoleBufferAccess_Unrestricted = 0x2b0001,
  AppModelPolicy_ConvertCallerTokenToUserTokenForDeployment_UserCallerToken = 0x2c0000,
  AppModelPolicy_ConvertCallerTokenToUserTokenForDeployment_ConvertTokenToUserToken = 0x2c0001,
  AppModelPolicy_ShellExecuteRetrieveIdentityFromCurrentProcess_False = 0x2d0000,
  AppModelPolicy_ShellExecuteRetrieveIdentityFromCurrentProcess_True = 0x2d0001,
  AppModelPolicy_CodeIntegritySigning_Default = 0x2e0000,
  AppModelPolicy_CodeIntegritySigning_OriginBased = 0x2e0001,
  AppModelPolicy_CodeIntegritySigning_OriginBasedForDev = 0x2e0002,
  AppModelPolicy_PTCActivation_Default = 0x2f0000,
  AppModelPolicy_PTCActivation_AllowActivationInBrokerForMediumILContainer = 0x2f0001,
  AppModelPolicy_Type_ComIntraPackageRpcCall_NoWake = 0x300000,
  AppModelPolicy_Type_ComIntraPackageRpcCall_Wake = 0x300001,
  AppModelPolicy_LoadUser32ShimOnWindowsCoreOS_True = 0x310000,
  AppModelPolicy_LoadUser32ShimOnWindowsCoreOS_False = 0x310001,
  AppModelPolicy_SecurityCapabilitiesOverride_None = 0x320000,
  AppModelPolicy_SecurityCapabilitiesOverride_PackageCapabilities = 0x320001,
  AppModelPolicy_CurrentDirectoryOverride_None = 0x330000,
  AppModelPolicy_CurrentDirectoryOverride_PackageInstallDirectory = 0x330001,
  AppModelPolicy_ComTokenMatchingForAAAServers_DontUseNtCompareTokens = 0x340000,
  AppModelPolicy_ComTokenMatchingForAAAServers_UseNtCompareTokens = 0x340001,
  AppModelPolicy_UseOriginalFileNameInTokenFQBNAttribute_False = 0x350000,
  AppModelPolicy_UseOriginalFileNameInTokenFQBNAttribute_True = 0x350001,
  AppModelPolicy_LoaderIncludeAlternateForwarders_False = 0x360000,
  AppModelPolicy_LoaderIncludeAlternateForwarders_True = 0x360001,
  AppModelPolicy_PullPackageDependencyData_False = 0x370000,
  AppModelPolicy_PullPackageDependencyData_True = 0x370001,
  AppModelPolicy_AppInstancingErrorBehavior_SuppressErrors = 0x380000,
  AppModelPolicy_AppInstancingErrorBehavior_RaiseErrors = 0x380001,
  AppModelPolicy_BackgroundTaskRegistrationType_Unsupported = 0x390000,
  AppModelPolicy_BackgroundTaskRegistrationType_Manifested = 0x390001,
  AppModelPolicy_BackgroundTaskRegistrationType_Win32Clsid = 0x390002,
  AppModelPolicy_Type_ModsPowerNotification_Disabled = 0x3a0000,
  AppModelPolicy_Type_ModsPowerNotification_Enabled = 0x3a0001,
  AppModelPolicy_Type_ModsPowerNotification_QueryDam = 0x3a0002,
};

struct std::_Char_traits<unsigned short,unsigned short>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<HSTRING__ *,unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

typedef struct _RPC_SECURITY_QOS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
} RPC_SECURITY_QOS, *PRPC_SECURITY_QOS; /* size: 0x0010 */

enum WPP_DEFINE_BIT_NAMES
{
  WPP_BLOCK_START_OLE32 = 0,
  WPP_BIT_ERRORS = 1,
  WPP_BIT_WARNING = 2,
  WPP_BIT_INFO = 3,
  WPP_BIT_VERBOSE = 4,
  WPP_BIT_CHATTY = 5,
  WPP_BIT_GARRULOUS = 6,
  WPP_BIT_LOQUACIOUS = 7,
  WPP_BLOCK_END_OLE32 = 8,
};

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >
{
}; /* size: 0x0008 */

typedef struct _XSTATE_FEATURE
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long Size;
} XSTATE_FEATURE, *PXSTATE_FEATURE; /* size: 0x0008 */

typedef struct _XSTATE_CONFIG_FEATURE_MSC_INFO
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int ContextSize;
  /* 0x0008 */ unsigned __int64 EnabledFeatures;
  /* 0x0010 */ struct _XSTATE_FEATURE Features[64];
} XSTATE_CONFIG_FEATURE_MSC_INFO, *PXSTATE_CONFIG_FEATURE_MSC_INFO; /* size: 0x0210 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardTaskCompletion> >
{
}; /* size: 0x0008 */

enum tagRPCOPT_PROPERTIES
{
  COMBND_RPCTIMEOUT = 1,
  COMBND_SERVER_LOCALITY = 2,
  COMBND_RESERVED1 = 4,
  COMBND_RESERVED2 = 5,
  COMBND_RESERVED3 = 8,
  COMBND_RESERVED4 = 16,
};

typedef enum _TlgBlob_t
{
  _TlgBlobNone = 0,
  _TlgBlobEnd = 1,
  _TlgBlobProvider = 2,
  _TlgBlobEvent3 = 3,
  _TlgBlobProvider3 = 4,
  _TlgBlobEvent2 = 5,
  _TlgBlobEvent4 = 6,
  _TlgBlobMax = 7,
} TlgBlob_t, *PTlgBlob_t;

class wistd::__compressed_pair<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >
{
}; /* size: 0x0008 */

class wil::details::<lambda_600a97c4662e4e9b5ceb697a32b69886>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,wistd::integral_constant<unsigned __int64,2>,void *,__int64,-1,void *>
{
}; /* size: 0x0001 */

enum AppModelPolicy_Type
{
  AppModelPolicy_Type_LifecycleManager = 1,
  AppModelPolicy_Type_AppDataAccess = 2,
  AppModelPolicy_Type_WindowingModel = 3,
  AppModelPolicy_Type_DllSearchOrder = 4,
  AppModelPolicy_Type_Fusion = 5,
  AppModelPolicy_Type_NonWindowsCodecLoading = 6,
  AppModelPolicy_Type_ProcessEnd = 7,
  AppModelPolicy_Type_BeginThreadInit = 8,
  AppModelPolicy_Type_DeveloperInformation = 9,
  AppModelPolicy_Type_CreateFileAccess = 10,
  AppModelPolicy_Type_ImplicitPackageBreakaway_Internal = 11,
  AppModelPolicy_Type_ProcessActivationShim = 12,
  AppModelPolicy_Type_AppKnownToStateRepository = 13,
  AppModelPolicy_Type_AudioManagement = 14,
  AppModelPolicy_Type_PackageMayContainPublicComRegistrations = 15,
  AppModelPolicy_Type_PackageMayContainPrivateComRegistrations = 16,
  AppModelPolicy_Type_LaunchCreateProcessExtensions = 17,
  AppModelPolicy_Type_ClrCompat = 18,
  AppModelPolicy_Type_LoaderIgnoreAlteredSearchForRelativePath = 19,
  AppModelPolicy_Type_ImplicitlyActivateClassicAAAServersAsIU = 20,
  AppModelPolicy_Type_ComClassicCatalog = 21,
  AppModelPolicy_Type_ComUnmarshaling = 22,
  AppModelPolicy_Type_ComAppLaunchPerfEnhancements = 23,
  AppModelPolicy_Type_ComSecurityInitialization = 24,
  AppModelPolicy_Type_RoInitializeSingleThreadedBehavior = 25,
  AppModelPolicy_Type_ComDefaultExceptionHandling = 26,
  AppModelPolicy_Type_ComOopProxyAgility = 27,
  AppModelPolicy_Type_AppServiceLifetime = 28,
  AppModelPolicy_Type_WebPlatform = 29,
  AppModelPolicy_Type_WinInetStoragePartitioning = 30,
  AppModelPolicy_Type_IndexerProtocolHandlerHost = 31,
  AppModelPolicy_Type_LoaderIncludeUserDirectories = 32,
  AppModelPolicy_Type_ConvertAppContainerToRestrictedAppContainer = 33,
  AppModelPolicy_Type_PackageMayContainPrivateMapiProvider = 34,
  AppModelPolicy_Type_AdminProcessPackageClaims = 35,
  AppModelPolicy_Type_RegistryRedirectionBehavior = 36,
  AppModelPolicy_Type_BypassCreateProcessAppxExtension = 37,
  AppModelPolicy_Type_KnownFolderRedirection = 38,
  AppModelPolicy_Type_PrivateActivateAsPackageWinrtClasses = 39,
  AppModelPolicy_Type_AppPrivateFolderRedirection = 40,
  AppModelPolicy_Type_GlobalSystemAppDataAccess = 41,
  AppModelPolicy_Type_ConsoleHandleInheritance = 42,
  AppModelPolicy_Type_ConsoleBufferAccess = 43,
  AppModelPolicy_Type_ConvertCallerTokenToUserTokenForDeployment = 44,
  AppModelPolicy_Type_ShellExecuteRetrieveIdentityFromCurrentProcess = 45,
  AppModelPolicy_Type_CodeIntegritySigning = 46,
  AppModelPolicy_Type_PTCActivation = 47,
  AppModelPolicy_Type_ComIntraPackageRpcCall = 48,
  AppModelPolicy_Type_LoadUser32ShimOnWindowsCoreOS = 49,
  AppModelPolicy_Type_SecurityCapabilitiesOverride = 50,
  AppModelPolicy_Type_CurrentDirectoryOverride = 51,
  AppModelPolicy_Type_ComTokenMatchingForAAAServers = 52,
  AppModelPolicy_Type_UseOriginalFileNameInTokenFQBNAttribute = 53,
  AppModelPolicy_Type_LoaderIncludeAlternateForwarders = 54,
  AppModelPolicy_Type_PullPackageDependencyData = 55,
  AppModelPolicy_Type_AppInstancingErrorBehavior = 56,
  AppModelPolicy_Type_BackgroundTaskRegistrationType = 57,
  AppModelPolicy_Type_ModsPowerNotification = 58,
  AppModelPolicy_Type_Count = 58,
};

struct Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *>
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::details::folder_watcher_state* m_ptr;
}; /* size: 0x0008 */

typedef enum _RUNLEVEL
{
  RUNLEVEL_LUA = 0,
  RUNLEVEL_HIGHEST = 1,
  RUNLEVEL_ADMIN = 2,
  RUNLEVEL_MAX_NON_UIA = 3,
  RUNLEVEL_LUA_UIA = 16,
  RUNLEVEL_HIGHEST_UIA = 17,
  RUNLEVEL_ADMIN_UIA = 18,
  RUNLEVEL_MAX = 19,
} RUNLEVEL, *PRUNLEVEL;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IInputStream *>
{
}; /* size: 0x0008 */

union wistd::__aligned_storage<104,8,1>::type
{
  union
  {
    /* 0x0000 */ unsigned __int64 __align;
    /* 0x0000 */ unsigned char __data[104];
  }; /* size: 0x0068 */
}; /* size: 0x0068 */

class wistd::function<void __cdecl(void)>
{
  /* 0x0000 */ const unsigned __int64 __buffer_size;
  /* 0x0008 */ union wistd::__aligned_storage<104,8,1>::type __buf_;
  /* 0x0070 */ class wistd::__function::__base<void __cdecl(void)>* __f_;
}; /* size: 0x0078 */

class wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> >
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct wil::details::event_watcher_state
{
  /* 0x0000 */ class wistd::function<void __cdecl(void)> m_callback;
  /* 0x0078 */ class wil::unique_any_t<wil::event_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_event;
  /* 0x0080 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t> > > m_threadPoolWait;
}; /* size: 0x0088 */

enum CO_MARSHALING_CONTEXT_ATTRIBUTES
{
  CO_MARSHALING_SOURCE_IS_APP_CONTAINER = 0,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_1 = -2147483648,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_2 = -2147483647,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_3 = -2147483646,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_4 = -2147483645,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_5 = -2147483644,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_6 = -2147483643,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_7 = -2147483642,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_8 = -2147483641,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_9 = -2147483640,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_10 = -2147483639,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_11 = -2147483638,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_12 = -2147483637,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_13 = -2147483636,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_14 = -2147483635,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_15 = -2147483634,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_16 = -2147483633,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_17 = -2147483632,
  CO_MARSHALING_CONTEXT_ATTRIBUTE_RESERVED_18 = -2147483631,
};

typedef struct _UMS_SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ unsigned long UmsVersion;
  union
  {
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long IsUmsSchedulerThread : 1; /* bit position: 0 */
      /* 0x0004 */ unsigned long IsUmsWorkerThread : 1; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0004 */ unsigned long ThreadUmsFlags;
  }; /* size: 0x0004 */
} UMS_SYSTEM_THREAD_INFORMATION, *PUMS_SYSTEM_THREAD_INFORMATION; /* size: 0x0008 */

class GetDataObjectEnterpriseId::__l2::<lambda_444db092903b510854fa5b0a4f709bfa>
{
}; /* size: 0x0001 */

enum OLETLS_PREVENT_RUNDOWN_MITIGATION
{
  NoMitigationInEffect = 0,
  MarshalingWithInParameterMitigation = 1,
  MarshalingWithInprocOutParameterMitigation = 2,
  MarshalingWithOutofprocOutParameterMitigation = 3,
  MarshalingWithMshlflagsTablestrong = 4,
  UnmarshalingWithInParameterMitigation = 5,
  UnmarshalingWithInprocOutParameterMitigation = 6,
  UnmarshalingWithOutofprocOutParameterMitigation = 7,
};

struct wistd::integral_constant<unsigned __int64,2>
{
  /* 0x0000 */ const unsigned __int64 value;
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

struct StringTraits<HSTRING__ *>
{
}; /* size: 0x0001 */

struct IClassFactory
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Search::SortEntry,0>
{
}; /* size: 0x0008 */

enum tagGLOBALOPT_RO_FLAGS
{
  COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES = 1,
  COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES = 2,
  COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES = 4,
  COMGLB_FAST_RUNDOWN = 8,
  COMGLB_RESERVED1 = 16,
  COMGLB_RESERVED2 = 32,
  COMGLB_RESERVED3 = 64,
  COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES = 128,
  COMGLB_RESERVED4 = 256,
  COMGLB_RESERVED5 = 512,
  COMGLB_RESERVED6 = 1024,
};

struct Windows::Foundation::Collections::IObservableVector<float>
{
}; /* size: 0x0008 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE>
{
} ENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE>, *PENUM_FLAG_SIZED_INTEGER<enum ORIENTATION_PREFERENCE>; /* size: 0x0001 */

enum TlgIn_t
{
  TlgInNULL = 0,
  TlgInUNICODESTRING = 1,
  TlgInANSISTRING = 2,
  TlgInINT8 = 3,
  TlgInUINT8 = 4,
  TlgInINT16 = 5,
  TlgInUINT16 = 6,
  TlgInINT32 = 7,
  TlgInUINT32 = 8,
  TlgInINT64 = 9,
  TlgInUINT64 = 10,
  TlgInFLOAT = 11,
  TlgInDOUBLE = 12,
  TlgInBOOL32 = 13,
  TlgInBINARY = 14,
  TlgInGUID = 15,
  _TlgInPOINTER_unsupported = 16,
  TlgInFILETIME = 17,
  TlgInSYSTEMTIME = 18,
  TlgInSID = 19,
  TlgInHEXINT32 = 20,
  TlgInHEXINT64 = 21,
  TlgInCOUNTEDSTRING = 22,
  TlgInCOUNTEDANSISTRING = 23,
  _TlgInSTRUCT = 24,
  TlgInCOUNTEDBINARY = 25,
  _TlgInMax = 26,
  TlgInINTPTR = 9,
  TlgInUINTPTR = 10,
  TlgInPOINTER = 21,
  TlgInLONG = 7,
  TlgInULONG = 8,
  TlgInHEXLONG = 20,
  _TlgInCcount = 32,
  TlgInVcount = 64,
  _TlgInChain = 128,
  _TlgInCustom = 96,
  _TlgInTypeMask = 31,
  _TlgInCountMask = 96,
  _TlgInFlagMask = 224,
};

enum ApartmentType
{
  ApartmentType_STA = 0,
  ApartmentType_ASTA = 1,
  ApartmentType_MTA = 2,
  ApartmentType_NA = 3,
  ApartmentType_BSTA = 4,
};

struct Windows::Foundation::Collections::IMap<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _SEALING_TIMESTAMP_ATTRIBUTE
{
  /* 0x0000 */ unsigned long version;
  /* 0x0004 */ unsigned long signerIndex;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB sealTimeStampToken;
} SEALING_TIMESTAMP_ATTRIBUTE, *PSEALING_TIMESTAMP_ATTRIBUTE; /* size: 0x0018 */

struct tagFORMATETC
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_44[6];
  /* 0x0008 */ struct tagDVTARGETDEVICE* ptd;
  /* 0x0010 */ unsigned long dwAspect;
  /* 0x0014 */ long lindex;
  /* 0x0018 */ unsigned long tymed;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct wistd::__compressed_pair_elem<wil::details::event_watcher_state *,0,0>
{
  /* 0x0000 */ struct wil::details::event_watcher_state* __value_;
}; /* size: 0x0008 */

struct tagSIZE
{
  /* 0x0000 */ long cx;
  /* 0x0004 */ long cy;
}; /* size: 0x0008 */

enum tagOLETLSFLAGS
{
  OLETLS_LOCALTID = 1,
  OLETLS_UUIDINITIALIZED = 2,
  OLETLS_INTHREADDETACH = 4,
  OLETLS_CHANNELTHREADINITIALZED = 8,
  OLETLS_WOWTHREAD = 16,
  OLETLS_THREADUNINITIALIZING = 32,
  OLETLS_DISABLE_OLE1DDE = 64,
  OLETLS_APARTMENTTHREADED = 128,
  OLETLS_MULTITHREADED = 256,
  OLETLS_IMPERSONATING = 512,
  OLETLS_DISABLE_EVENTLOGGER = 1024,
  OLETLS_INNEUTRALAPT = 2048,
  OLETLS_DISPATCHTHREAD = 4096,
  OLETLS_HOSTTHREAD = 8192,
  OLETLS_ALLOWCOINIT = 16384,
  OLETLS_PENDINGUNINIT = 0xffff8000,
  OLETLS_FIRSTMTAINIT = 0x10000,
  OLETLS_FIRSTNTAINIT = 0x20000,
  OLETLS_APTINITIALIZING = 0x40000,
  OLETLS_UIMSGSINMODALLOOP = 0x80000,
  OLETLS_MARSHALING_ERROR_OBJECT = 0x100000,
  OLETLS_WINRT_INITIALIZE = 0x200000,
  OLETLS_APPLICATION_STA = 0x400000,
  OLETLS_IN_SHUTDOWN_CALLBACKS = 0x800000,
  OLETLS_POINTER_INPUT_BLOCKED = 0x1000000,
  OLETLS_IN_ACTIVATION_FILTER = 0x2000000,
  OLETLS_ASTATOASTAEXEMPT_QUIRK = 0x4000000,
  OLETLS_ASTATOASTAEXEMPT_PROXY = 0x8000000,
  OLETLS_ASTATOASTAEXEMPT_INDOUBT = 0x10000000,
  OLETLS_DETECTED_USER_INITIALIZED = 0x20000000,
  OLETLS_BRIDGE_STA = 0x40000000,
  OLETLS_NAINITIALIZING = -2147483648,
};

typedef struct _CLINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ int bnative;
  /* 0x000c */ int format;
  /* 0x0010 */ int options;
  /* 0x0014 */ int bdata;
  /* 0x0018 */ void* hdevInfo;
  /* 0x0020 */ int bnewDevInfo;
  /* 0x0024 */ long __PADDING__[1];
} CLINFO, *PCLINFO; /* size: 0x0028 */

struct IUnwrappableDataObject
{
}; /* size: 0x0008 */

enum tagMSHCTX
{
  MSHCTX_LOCAL = 0,
  MSHCTX_NOSHAREDMEM = 1,
  MSHCTX_DIFFERENTMACHINE = 2,
  MSHCTX_INPROC = 3,
  MSHCTX_CROSSCTX = 4,
  MSHCTX_CONTAINER = 5,
};

struct IPicture
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

enum ABI::Windows::Foundation::AsyncStatus
{
  Started = 0,
  Completed = 1,
  Canceled = 2,
  Error = 3,
};

enum RegistrationSource
{
  RegistrationSourceSystemRegistry = 0,
  RegistrationSourcePrivateHive = 1,
  RegistrationSourcePackagedCom = 2,
  RegistrationSourceWinrt = 3,
  RegistrationSourceSxsManifest = 4,
  RegistrationSourceComPlusCatalog = 5,
  RegistrationSourceNone = 6,
};

class std::reverse_iterator<std::_String_view_iterator<std::char_traits<unsigned short> > >;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>
{
}; /* size: 0x0008 */

enum tagGLOBALOPT_PROPERTIES
{
  COMGLB_EXCEPTION_HANDLING = 1,
  COMGLB_APPID = 2,
  COMGLB_RPC_THREADPOOL_SETTING = 3,
  COMGLB_RO_SETTINGS = 4,
  COMGLB_UNMARSHALING_POLICY = 5,
  COMGLB_PROPERTIES_RESERVED1 = 6,
  COMGLB_PROPERTIES_RESERVED2 = 7,
  COMGLB_PROPERTIES_RESERVED3 = 8,
};

struct std::char_traits<char>
{
}; /* size: 0x0001 */

struct ILayoutStorage
{
}; /* size: 0x0008 */

enum ThreadingModel
{
  ApartmentThreaded = 0,
  FreeThreaded = 1,
  SingleThreaded = 2,
  BothThreaded = 3,
  NeutralThreaded = 4,
};

typedef struct _ENCLAVE_CREATE_INFO_SGX
{
  /* 0x0000 */ unsigned char Secs[4096];
} ENCLAVE_CREATE_INFO_SGX, *PENCLAVE_CREATE_INFO_SGX; /* size: 0x1000 */

struct Windows::Foundation::ITypedEventHandler<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

enum tagSTATFLAG
{
  STATFLAG_DEFAULT = 0,
  STATFLAG_NONAME = 1,
  STATFLAG_NOOPEN = 2,
};

struct wil::process_heap_deleter
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0001 */

enum COM_CALL_LOCALITY
{
  COM_CALL_LOCALITY_SAME_PROCESS = 0,
  COM_CALL_LOCALITY_CROSS_PROCESS = 1,
  COM_CALL_LOCALITY_CROSS_CONTAINER = 2,
  COM_CALL_LOCALITY_CROSS_MACHINE = 3,
};

struct Windows::Foundation::Collections::is_foundation_struct<_GUID>
{
}; /* size: 0x0001 */

class wistd::function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>
{
  /* 0x0000 */ const unsigned __int64 __buffer_size;
  /* 0x0008 */ union wistd::__aligned_storage<104,8,1>::type __buf_;
  /* 0x0070 */ class wistd::__function::__base<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>* __f_;
}; /* size: 0x0078 */

struct Windows::Foundation::Collections::IVector<IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_VDM_INSTEMUL_INFO
{
  /* 0x0000 */ unsigned long SegmentNotPresent;
  /* 0x0004 */ unsigned long VdmOpcode0F;
  /* 0x0008 */ unsigned long OpcodeESPrefix;
  /* 0x000c */ unsigned long OpcodeCSPrefix;
  /* 0x0010 */ unsigned long OpcodeSSPrefix;
  /* 0x0014 */ unsigned long OpcodeDSPrefix;
  /* 0x0018 */ unsigned long OpcodeFSPrefix;
  /* 0x001c */ unsigned long OpcodeGSPrefix;
  /* 0x0020 */ unsigned long OpcodeOPER32Prefix;
  /* 0x0024 */ unsigned long OpcodeADDR32Prefix;
  /* 0x0028 */ unsigned long OpcodeINSB;
  /* 0x002c */ unsigned long OpcodeINSW;
  /* 0x0030 */ unsigned long OpcodeOUTSB;
  /* 0x0034 */ unsigned long OpcodeOUTSW;
  /* 0x0038 */ unsigned long OpcodePUSHF;
  /* 0x003c */ unsigned long OpcodePOPF;
  /* 0x0040 */ unsigned long OpcodeINTnn;
  /* 0x0044 */ unsigned long OpcodeINTO;
  /* 0x0048 */ unsigned long OpcodeIRET;
  /* 0x004c */ unsigned long OpcodeINBimm;
  /* 0x0050 */ unsigned long OpcodeINWimm;
  /* 0x0054 */ unsigned long OpcodeOUTBimm;
  /* 0x0058 */ unsigned long OpcodeOUTWimm;
  /* 0x005c */ unsigned long OpcodeINB;
  /* 0x0060 */ unsigned long OpcodeINW;
  /* 0x0064 */ unsigned long OpcodeOUTB;
  /* 0x0068 */ unsigned long OpcodeOUTW;
  /* 0x006c */ unsigned long OpcodeLOCKPrefix;
  /* 0x0070 */ unsigned long OpcodeREPNEPrefix;
  /* 0x0074 */ unsigned long OpcodeREPPrefix;
  /* 0x0078 */ unsigned long OpcodeHLT;
  /* 0x007c */ unsigned long OpcodeCLI;
  /* 0x0080 */ unsigned long OpcodeSTI;
  /* 0x0084 */ unsigned long BopCount;
} SYSTEM_VDM_INSTEMUL_INFO, *PSYSTEM_VDM_INSTEMUL_INFO; /* size: 0x0088 */

enum tagSTREAM_SEEK
{
  STREAM_SEEK_SET = 0,
  STREAM_SEEK_CUR = 1,
  STREAM_SEEK_END = 2,
};

enum tagProcessType
{
  ProcessTypeNormal = 0,
  ProcessTypeService = 1,
  ProcessTypeComPlus = 2,
  ProcessTypeLegacySurrogate = 3,
  ProcessTypeComPlusService = 4,
};

struct SExtHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ const wchar_t* pwszExt;
}; /* size: 0x0018 */

struct tagSExtEntry
{
  /* 0x0000 */ struct SExtHashNode m_node;
  /* 0x0018 */ wchar_t* m_wszExt;
  /* 0x0020 */ struct _GUID m_clsid;
  /* 0x0030 */ wchar_t m_wszBuf[8];
}; /* size: 0x0040 */

class wil::details::shared_object<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

typedef enum _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::TlgState;

typedef class _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_45[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>, *PTlgActivityBase<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,70368744177664,5>; /* size: 0x0028 */

class wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>
{
  /* 0x0000 */ struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node* volatile m_hashArray[10];
}; /* size: 0x0050 */

struct tagPROPBAG2
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned short vt;
  /* 0x0006 */ unsigned short cfType;
  /* 0x0008 */ unsigned long dwHint;
  /* 0x000c */ long Padding_46;
  /* 0x0010 */ wchar_t* pstrName;
  /* 0x0018 */ struct _GUID clsid;
}; /* size: 0x0028 */

class wil::details::<lambda_e940754a71e3d785858a2f617c0b6d67>
{
}; /* size: 0x0001 */

enum tagEOLE_AUTHENTICATION_CAPABILITIES
{
  EOAC_NONE = 0,
  EOAC_MUTUAL_AUTH = 1,
  EOAC_STATIC_CLOAKING = 32,
  EOAC_DYNAMIC_CLOAKING = 64,
  EOAC_ANY_AUTHORITY = 128,
  EOAC_MAKE_FULLSIC = 256,
  EOAC_DEFAULT = 2048,
  EOAC_SECURE_REFS = 2,
  EOAC_ACCESS_CONTROL = 4,
  EOAC_APPID = 8,
  EOAC_DYNAMIC = 16,
  EOAC_REQUIRE_FULLSIC = 512,
  EOAC_AUTO_IMPERSONATE = 1024,
  EOAC_DISABLE_AAA = 4096,
  EOAC_NO_CUSTOM_MARSHAL = 8192,
  EOAC_RESERVED1 = 16384,
};

struct std::not_equal_to<void>
{
}; /* size: 0x0001 */

class std::tuple<>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > __ptr_;
}; /* size: 0x0008 */

typedef enum _RTL_FEATURE_CONFIGURATION_OPERATION
{
  FeatureConfigurationOperationNone = 0,
  FeatureConfigurationOperationFeatureState = 1,
  FeatureConfigurationOperationVariantState = 2,
  FeatureConfigurationOperationResetState = 4,
} RTL_FEATURE_CONFIGURATION_OPERATION, *PRTL_FEATURE_CONFIGURATION_OPERATION;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IBindCtx> >
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0001
{
  ST_SERVER = 1,
  ST_OLDSURROGATE = 2,
  ST_COMPLUSAPP = 3,
  ST_SERVICE = 4,
} _MIDL___MIDL_itf_activate_0000_0010_0001, *P_MIDL___MIDL_itf_activate_0000_0010_0001;

class COAHolder
{
  /* 0x0000 */ long Padding_47[8];
  /* 0x0020 */ struct IAdviseSink** m_ppIAS;
  /* 0x0028 */ int m_iSize;
}; /* size: 0x0030 */

struct IProvideClassInfo2
{
}; /* size: 0x0008 */

class DragDropTelemetry::CallContext
{
}; /* size: 0x0140 */

typedef enum _APTTYPEQUALIFIER
{
  APTTYPEQUALIFIER_NONE = 0,
  APTTYPEQUALIFIER_IMPLICIT_MTA = 1,
  APTTYPEQUALIFIER_NA_ON_MTA = 2,
  APTTYPEQUALIFIER_NA_ON_STA = 3,
  APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA = 4,
  APTTYPEQUALIFIER_NA_ON_MAINSTA = 5,
  APTTYPEQUALIFIER_APPLICATION_STA = 6,
  APTTYPEQUALIFIER_RESERVED_1 = 7,
} APTTYPEQUALIFIER, *PAPTTYPEQUALIFIER;

struct wistd::__function::__maybe_derive_from_binary_function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0010 */

enum ComLockOrder
{
  CDragDropBroker_s_registrationLock = 0,
  CDllHost__mxs = 1,
  g_MTAInitLock = 2,
  g_mxsSingleThreadOle = 3,
  gObjServerLock = 4,
  gChannelInitLock = 5,
  gIPIDLock = 6,
  gComLock = 7,
  gOXIDLock = 8,
  gContextLock = 9,
  gCallLock = 10,
  gChnlCallLock = 11,
  CGIPTable__mxs = 12,
  CRIFTable__mxs = 13,
  CRpcResolver__mxsResolver = 14,
  CApartmentHashTable__mxsAptTblLock = 15,
  gOleInitLock = 16,
  g_RotSem = 17,
  g_SpySem = 18,
  Highest = 19,
};

struct wil::details::DestroyThreadPoolWork<2>
{
}; /* size: 0x0001 */

enum Windows::Storage::CreationCollisionOption
{
  CreationCollisionOption_GenerateUniqueName = 0,
  CreationCollisionOption_ReplaceExisting = 1,
  CreationCollisionOption_FailIfExists = 2,
  CreationCollisionOption_OpenIfExists = 3,
};

typedef enum _WPP_FLAG_LEN_ENUM
{
  WPP_FLAG_LEN = 1,
} WPP_FLAG_LEN_ENUM, *PWPP_FLAG_LEN_ENUM;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

class CSidStr
{
  /* 0x0000 */ wchar_t* _pSid;
}; /* size: 0x0008 */

enum RO_ERROR_REPORTING_FLAGS
{
  RO_ERROR_REPORTING_NONE = 0,
  RO_ERROR_REPORTING_SUPPRESSEXCEPTIONS = 1,
  RO_ERROR_REPORTING_FORCEEXCEPTIONS = 2,
  RO_ERROR_REPORTING_USESETERRORINFO = 4,
  RO_ERROR_REPORTING_SUPPRESSSETERRORINFO = 8,
};

class std::_Iostream_error_category2
{
}; /* size: 0x0010 */

struct std::_Constexpr_immortalize_impl<std::_Iostream_error_category2>
{
  /* 0x0000 */ class std::_Iostream_error_category2 _Storage;
}; /* size: 0x0010 */

typedef struct _Real_type<float>
{
} Real_type<float>, *PReal_type<float>; /* size: 0x0001 */

class CPrivAlloc
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<int>
{
}; /* size: 0x0008 */

enum RO_INIT_TYPE
{
  RO_INIT_SINGLETHREADED = 0,
  RO_INIT_MULTITHREADED = 1,
};

enum tagDVASPECT
{
  DVASPECT_CONTENT = 1,
  DVASPECT_THUMBNAIL = 2,
  DVASPECT_ICON = 4,
  DVASPECT_DOCPRINT = 8,
};

class wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_19
{
  value = 0,
} TAG_UNNAMED_19, *PTAG_UNNAMED_19;

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator>
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator* ptr_;
}; /* size: 0x0008 */

struct wil::window_dc
{
  /* 0x0000 */ struct HDC__* dc;
  /* 0x0008 */ struct HWND__* hwnd;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *>
{
}; /* size: 0x0008 */

class CReadInterfaceDataFromInternalSourceMarshalingStream
{
}; /* size: 0x0030 */

enum TrustLevel
{
  BaseTrust = 0,
  PartialTrust = 1,
  FullTrust = 2,
};

struct IWeakReference
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

enum TlgOut_t
{
  TlgOutNULL = 0,
  TlgOutNOPRINT = 1,
  TlgOutSTRING = 2,
  TlgOutBOOLEAN = 3,
  TlgOutHEX = 4,
  TlgOutPID = 5,
  TlgOutTID = 6,
  TlgOutPORT = 7,
  TlgOutIPV4 = 8,
  TlgOutIPV6 = 9,
  TlgOutSOCKETADDRESS = 10,
  TlgOutXML = 11,
  TlgOutJSON = 12,
  TlgOutWIN32ERROR = 13,
  TlgOutNTSTATUS = 14,
  TlgOutHRESULT = 15,
  TlgOutFILETIME = 16,
  TlgOutSIGNED = 17,
  TlgOutUNSIGNED = 18,
  TlgOutUTF8 = 35,
  TlgOutPKCS7_WITH_TYPE_INFO = 36,
  TlgOutCODE_POINTER = 37,
  TlgOutDATETIME_UTC = 38,
  _TlgOutMax = 39,
  _TlgOutChain = 128,
  _TlgOutTypeMask = 127,
};

typedef enum _TAG_UNNAMED_20
{
  value = 0,
} TAG_UNNAMED_20, *PTAG_UNNAMED_20;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >
{
}; /* size: 0x0008 */

enum WhichTypeOfRundown
{
  NoRundown = 0,
  RundownInRemoteAddrefCall = 1,
  RundownInRemoteQueryInterfaceCall = 2,
  RundownInRemoteQueryInterface2Call = 3,
  RundownInNonIUnknownInterfaceCall = 4,
  RundownInServerSideUnmarshalInterface = 5,
};

struct HIMC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

enum WPP_CTL_NAMES
{
  WPP_CTL_OLE32 = 0,
  WPP_LAST_CTL = 1,
};

typedef class _FSaveIconViaBitmaps::__l2::<lambda_1c754bbeedbcd4694084012f1aac925b>
{
  /* 0x0000 */ void*& hdib;
} FSaveIconViaBitmaps::__l2::<lambda_1c754bbeedbcd4694084012f1aac925b>, *PFSaveIconViaBitmaps::__l2::<lambda_1c754bbeedbcd4694084012f1aac925b>; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_1c754bbeedbcd4694084012f1aac925b> >
{
  /* 0x0000 */ class _FSaveIconViaBitmaps::__l2::<lambda_1c754bbeedbcd4694084012f1aac925b> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_21
{
  value = 1,
} TAG_UNNAMED_21, *PTAG_UNNAMED_21;

struct Windows::Foundation::Collections::IVectorView<unsigned char>
{
}; /* size: 0x0008 */

typedef enum _RTL_UMS_SCHEDULER_REASON
{
  UmsSchedulerStartup = 0,
  UmsSchedulerThreadBlocked = 1,
  UmsSchedulerThreadYield = 2,
} RTL_UMS_SCHEDULER_REASON, *PRTL_UMS_SCHEDULER_REASON;

typedef struct _SID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY; /* size: 0x0006 */

typedef struct _SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
} SID, *PSID; /* size: 0x000c */

typedef struct _MANAGE_HOT_PATCH_QUERY_PATCHES
{
  /* 0x0000 */ unsigned long Version;
  union
  {
    union
    {
      /* 0x0004 */ struct _SID Sid;
      /* 0x0004 */ unsigned char Buffer[68];
    }; /* size: 0x0044 */
  } /* size: 0x0044 */ UserSid;
  /* 0x0048 */ unsigned long PatchCount;
  /* 0x004c */ long Padding_48;
  /* 0x0050 */ struct _UNICODE_STRING* PatchPathStrings;
  /* 0x0058 */ struct _HOT_PATCH_IMAGE_INFO* BaseInfos;
} MANAGE_HOT_PATCH_QUERY_PATCHES, *PMANAGE_HOT_PATCH_QUERY_PATCHES; /* size: 0x0060 */

struct Windows::Foundation::IExtensionRegistration
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> const >;

class IsInt<unsigned long>
{
}; /* size: 0x0001 */

enum SLGP_FLAGS
{
  SLGP_SHORTPATH = 1,
  SLGP_UNCPRIORITY = 2,
  SLGP_RAWPATH = 4,
  SLGP_RELATIVEPRIORITY = 8,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct wil::details_abi::ProcessLocalData
{
  /* 0x0000 */ unsigned short size;
  /* 0x0002 */ char Padding_49[2];
  /* 0x0004 */ volatile long failureSequenceId;
  /* 0x0008 */ class wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData> threads;
}; /* size: 0x0058 */

class wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>
{
  /* 0x0000 */ volatile long m_refCount;
  /* 0x0004 */ long Padding_50;
  /* 0x0008 */ class wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_mutex;
  /* 0x0010 */ class wil::details_abi::SemaphoreValue m_value;
  /* 0x0020 */ struct wil::details_abi::ProcessLocalData m_data;
}; /* size: 0x0078 */

struct tagOCPFIPARAMS
{
  /* 0x0000 */ unsigned long cbStructSize;
  /* 0x0004 */ long Padding_51;
  /* 0x0008 */ struct HWND__* hWndOwner;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ const wchar_t* lpszCaption;
  /* 0x0020 */ unsigned long cObjects;
  /* 0x0024 */ long Padding_52;
  /* 0x0028 */ struct IUnknown** lplpUnk;
  /* 0x0030 */ unsigned long cPages;
  /* 0x0034 */ long Padding_53;
  /* 0x0038 */ struct _GUID* lpPages;
  /* 0x0040 */ unsigned long lcid;
  /* 0x0044 */ long dispidInitialProperty;
}; /* size: 0x0048 */

enum tagCCF_FLAGS
{
  CCF_NONE = 0,
  CCF_AGGREGATABLE = 1,
};

class std::_System_error_category
{
}; /* size: 0x0010 */

struct std::_Constexpr_immortalize_impl<std::_System_error_category>
{
  /* 0x0000 */ class std::_System_error_category _Storage;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_22
{
  value = 1,
} TAG_UNNAMED_22, *PTAG_UNNAMED_22;

typedef union _CPU_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned int VendorId[3];
      /* 0x000c */ unsigned int VersionInformation;
      /* 0x0010 */ unsigned int FeatureInformation;
      /* 0x0014 */ unsigned int AMDExtendedCpuFeatures;
    } /* size: 0x0018 */ X86CpuInfo;
    struct
    {
      /* 0x0000 */ unsigned __int64 ProcessorFeatures[2];
    } /* size: 0x0010 */ OtherCpuInfo;
  }; /* size: 0x0018 */
} CPU_INFORMATION, *PCPU_INFORMATION; /* size: 0x0018 */

struct tagRECT
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
}; /* size: 0x0010 */

struct tagPAINTSTRUCT
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0008 */ int fErase;
  /* 0x000c */ struct tagRECT rcPaint;
  /* 0x001c */ int fRestore;
  /* 0x0020 */ int fIncUpdate;
  /* 0x0024 */ unsigned char rgbReserved[32];
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

struct wil::paint_dc
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct tagPAINTSTRUCT ps;
}; /* size: 0x0050 */

enum SLR_FLAGS
{
  SLR_NONE = 0,
  SLR_NO_UI = 1,
  SLR_ANY_MATCH = 2,
  SLR_UPDATE = 4,
  SLR_NOUPDATE = 8,
  SLR_NOSEARCH = 16,
  SLR_NOTRACK = 32,
  SLR_NOLINKINFO = 64,
  SLR_INVOKE_MSI = 128,
  SLR_NO_UI_WITH_MSG_PUMP = 257,
  SLR_OFFER_DELETE_WITHOUT_FILE = 512,
  SLR_KNOWNFOLDER = 1024,
  SLR_MACHINE_IN_LOCAL_TARGET = 2048,
  SLR_UPDATE_MACHINE_AND_SID = 4096,
  SLR_NO_OBJECT_ID = 8192,
};

enum tagMKSYS
{
  MKSYS_NONE = 0,
  MKSYS_GENERICCOMPOSITE = 1,
  MKSYS_FILEMONIKER = 2,
  MKSYS_ANTIMONIKER = 3,
  MKSYS_ITEMMONIKER = 4,
  MKSYS_POINTERMONIKER = 5,
  MKSYS_CLASSMONIKER = 7,
  MKSYS_OBJREFMONIKER = 8,
  MKSYS_SESSIONMONIKER = 9,
  MKSYS_LUAMONIKER = 10,
};

struct $_TypeDescriptor$_extraBytes_20
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char name[20];
}; /* size: 0x0024 */

struct tagENHMETARECORD
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ unsigned long dParm[1];
}; /* size: 0x000c */

class RegistryKey
{
  union
  {
    /* 0x0000 */ const HRESULT NotFound;
    /* 0x0000 */ const HRESULT InsufficientBuffer;
    /* 0x0000 */ const HRESULT InvalidData;
    /* 0x0000 */ const HRESULT UnsupportedType;
    /* 0x0000 */ const HRESULT NoMoreItems;
    /* 0x0000 */ const HRESULT NameCollision;
    /* 0x0000 */ const HRESULT ErrorMoreData;
    /* 0x0000 */ const HRESULT KeyDeleted;
    /* 0x0000 */ struct HKEY__* volatile _hkey;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct IRpcChannelBuffer3
{
}; /* size: 0x0008 */

typedef struct _FILE_ALIGNMENT_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_23
{
  value = 0,
} TAG_UNNAMED_23, *PTAG_UNNAMED_23;

class SafeIntCompare<long,int>
{
}; /* size: 0x0001 */

struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ void* lpInformation;
  /* 0x0008 */ void* lpSectionBase;
  /* 0x0010 */ unsigned long ulSectionLength;
  /* 0x0014 */ long Padding_54;
  /* 0x0018 */ void* lpSectionGlobalDataBase;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef enum _LCN_WEAK_REFERENCE_STATE
{
  LCN_WEAK_REFERENCE_VALID = 1,
  LCN_CHECKSUM_VALID = 2,
} LCN_WEAK_REFERENCE_STATE, *PLCN_WEAK_REFERENCE_STATE;

class std::runtime_error
{
}; /* size: 0x0010 */

enum tagResourceGateId
{
  CreateProcessMemoryGate = 0,
  CreateObjectMemoryGate = 1,
};

typedef enum _GET_FILEEX_INFO_LEVELS
{
  GetFileExInfoStandard = 0,
  GetFileExMaxInfoLevel = 1,
} GET_FILEEX_INFO_LEVELS, *PGET_FILEEX_INFO_LEVELS;

class wil::details::<lambda_1b524260382d5af1e3356914d9f48146>
{
}; /* size: 0x0001 */

struct tagEMRPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
}; /* size: 0x0024 */

typedef enum _TAG_UNNAMED_24
{
  value = 1,
} TAG_UNNAMED_24, *PTAG_UNNAMED_24;

typedef union _float_const
{
  union
  {
    /* 0x0000 */ unsigned short _Word[4];
    /* 0x0000 */ float _Float;
    /* 0x0000 */ double _Double;
    /* 0x0000 */ double _Long_double;
  }; /* size: 0x0008 */
} float_const, *Pfloat_const; /* size: 0x0008 */

typedef struct _IMAGEHLP_LINEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_55;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned long LineNumber;
  /* 0x0014 */ long Padding_56;
  /* 0x0018 */ wchar_t* FileName;
  /* 0x0020 */ unsigned __int64 Address;
} IMAGEHLP_LINEW64, *PIMAGEHLP_LINEW64; /* size: 0x0028 */

enum TraceLevel
{
  ERRORS = 0,
  WARNING = 1,
  INFO = 2,
  VERBOSE = 3,
  CHATTY = 4,
  GARRULOUS = 5,
  LOQUACIOUS = 6,
  NOISY_ERRORS = 7,
};

class Microsoft::WRL::ComPtr<IServiceHostBrokerProvider>
{
  /* 0x0000 */ struct IServiceHostBrokerProvider* ptr_;
}; /* size: 0x0008 */

typedef enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 1,
  FileFullDirectoryInformation = 2,
  FileBothDirectoryInformation = 3,
  FileBasicInformation = 4,
  FileStandardInformation = 5,
  FileInternalInformation = 6,
  FileEaInformation = 7,
  FileAccessInformation = 8,
  FileNameInformation = 9,
  FileRenameInformation = 10,
  FileLinkInformation = 11,
  FileNamesInformation = 12,
  FileDispositionInformation = 13,
  FilePositionInformation = 14,
  FileFullEaInformation = 15,
  FileModeInformation = 16,
  FileAlignmentInformation = 17,
  FileAllInformation = 18,
  FileAllocationInformation = 19,
  FileEndOfFileInformation = 20,
  FileAlternateNameInformation = 21,
  FileStreamInformation = 22,
  FilePipeInformation = 23,
  FilePipeLocalInformation = 24,
  FilePipeRemoteInformation = 25,
  FileMailslotQueryInformation = 26,
  FileMailslotSetInformation = 27,
  FileCompressionInformation = 28,
  FileObjectIdInformation = 29,
  FileCompletionInformation = 30,
  FileMoveClusterInformation = 31,
  FileQuotaInformation = 32,
  FileReparsePointInformation = 33,
  FileNetworkOpenInformation = 34,
  FileAttributeTagInformation = 35,
  FileTrackingInformation = 36,
  FileIdBothDirectoryInformation = 37,
  FileIdFullDirectoryInformation = 38,
  FileValidDataLengthInformation = 39,
  FileShortNameInformation = 40,
  FileIoCompletionNotificationInformation = 41,
  FileIoStatusBlockRangeInformation = 42,
  FileIoPriorityHintInformation = 43,
  FileSfioReserveInformation = 44,
  FileSfioVolumeInformation = 45,
  FileHardLinkInformation = 46,
  FileProcessIdsUsingFileInformation = 47,
  FileNormalizedNameInformation = 48,
  FileNetworkPhysicalNameInformation = 49,
  FileIdGlobalTxDirectoryInformation = 50,
  FileIsRemoteDeviceInformation = 51,
  FileUnusedInformation = 52,
  FileNumaNodeInformation = 53,
  FileStandardLinkInformation = 54,
  FileRemoteProtocolInformation = 55,
  FileRenameInformationBypassAccessCheck = 56,
  FileLinkInformationBypassAccessCheck = 57,
  FileVolumeNameInformation = 58,
  FileIdInformation = 59,
  FileIdExtdDirectoryInformation = 60,
  FileReplaceCompletionInformation = 61,
  FileHardLinkFullIdInformation = 62,
  FileIdExtdBothDirectoryInformation = 63,
  FileDispositionInformationEx = 64,
  FileRenameInformationEx = 65,
  FileRenameInformationExBypassAccessCheck = 66,
  FileDesiredStorageClassInformation = 67,
  FileStatInformation = 68,
  FileMemoryPartitionInformation = 69,
  FileStatLxInformation = 70,
  FileCaseSensitiveInformation = 71,
  FileLinkInformationEx = 72,
  FileLinkInformationExBypassAccessCheck = 73,
  FileStorageReserveIdInformation = 74,
  FileCaseSensitiveInformationForceAccessCheck = 75,
  FileKnownFolderInformation = 76,
  FileMaximumInformation = 77,
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

class Microsoft::WRL::Wrappers::Event
{
}; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct HSTRING_BUFFER__* m_ptr;
}; /* size: 0x0008 */

enum std::float_denorm_style
{
  denorm_indeterminate = -1,
  denorm_absent = 0,
  denorm_present = 1,
};

typedef enum _SharedVirtualDiskHandleState
{
  SharedVirtualDiskHandleStateNone = 0,
  SharedVirtualDiskHandleStateFileShared = 1,
  SharedVirtualDiskHandleStateHandleShared = 3,
} SharedVirtualDiskHandleState, *PSharedVirtualDiskHandleState;

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0008 */

struct FORMATETCDATA
{
  /* 0x0000 */ struct tagFORMATETC _FormatEtc;
  /* 0x0020 */ int fSaveOnFlush;
  /* 0x0024 */ unsigned long dwReserved1;
  /* 0x0028 */ unsigned long dwReserved2;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct Windows::Foundation::Collections::IKeyValuePair<__int64,float>
{
}; /* size: 0x0008 */

struct IThunkManager
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<unsigned char,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

enum ExtentKeys
{
  mnk_MAC = 1,
  mnk_DFS = 2,
  mnk_UNICODE = 3,
  mnk_MacPathName = 4,
  mnk_ShellLink = 5,
  mnk_TrackingInformation = 6,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *>;

typedef enum _TAG_UNNAMED_25
{
  __the_value = 0,
} TAG_UNNAMED_25, *PTAG_UNNAMED_25;

typedef enum _TlgOptions_t
{
  _TlgOptionNone = 0,
  _TlgOptionGroup = 1,
} TlgOptions_t, *PTlgOptions_t;

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<unsigned int> *>
{
}; /* size: 0x0008 */

typedef struct _CERT_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ long Padding_57;
  /* 0x0008 */ unsigned char* pbCertEncoded;
  /* 0x0010 */ unsigned long cbCertEncoded;
  /* 0x0014 */ long Padding_58;
  /* 0x0018 */ struct _CERT_INFO* pCertInfo;
  /* 0x0020 */ void* hCertStore;
} CERT_CONTEXT, *PCERT_CONTEXT; /* size: 0x0028 */

struct IAdviseSinkEx
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<bool>
{
}; /* size: 0x0008 */

enum CFileMoniker::olever
{
  undetermined = 0,
  ole1 = 1,
  ole2 = 2,
};

struct std::char_traits<unsigned short>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *,1>
{
}; /* size: 0x0008 */

enum CoGetTreatAsClassInternalFlags
{
  Default = 0,
  DisablePackagedComForTesting = -2147483648,
};

typedef struct _PS_PROTECTION
{
  union
  {
    /* 0x0000 */ unsigned char Level;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char Type : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned char Audit : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned char Signer : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
} PS_PROTECTION, *PPS_PROTECTION; /* size: 0x0001 */

enum tagRpcCallClientLocality
{
  rcclInvalid = 0,
  rcclLocal = 1,
  rcclRemote = 2,
  rcclClientUnknownLocality = 3,
};

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IUnwrappableDataObject>* ptr_;
}; /* size: 0x0008 */

enum tagLocalServerType
{
  LocalServerType16 = 0,
  LocalServerType32 = 1,
};

typedef struct _SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Cycles[2][4];
} SYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION, *PSYSTEM_PROCESSOR_CYCLE_STATS_INFORMATION; /* size: 0x0040 */

typedef struct _IMAGEHLP_CBA_EVENTW
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ const wchar_t* desc;
  /* 0x0010 */ void* object;
} IMAGEHLP_CBA_EVENTW, *PIMAGEHLP_CBA_EVENTW; /* size: 0x0018 */

class AnalyzeTypeInfo::__l2::<lambda_ab54b4cb724860687691cbd1b551fd05>
{
  /* 0x0000 */ struct ITypeInfo*& typeInfo;
  /* 0x0008 */ struct tagTYPEATTR*& typeAttr;
}; /* size: 0x0010 */

class wil::details::lambda_call<<lambda_ab54b4cb724860687691cbd1b551fd05> >
{
  /* 0x0000 */ class AnalyzeTypeInfo::__l2::<lambda_ab54b4cb724860687691cbd1b551fd05> m_lambda;
  /* 0x0010 */ BOOL m_call;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageLibraryChange *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IBindCtx>
{
  /* 0x0000 */ struct IBindCtx* ptr_;
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0002
{
  SIT_RUNAS_SPECIFIC_USER = 1,
  SIT_RUNAS_INTERACTIVE = 2,
} _MIDL___MIDL_itf_activate_0000_0010_0002, *P_MIDL___MIDL_itf_activate_0000_0010_0002;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_26
{
  value = 1,
} TAG_UNNAMED_26, *PTAG_UNNAMED_26;

struct std::hash<float>
{
}; /* size: 0x0001 */

enum Microsoft::WRL::RuntimeClassType
{
  WinRt = 1,
  ClassicCom = 2,
  WinRtClassicComMix = 3,
  InhibitWeakReference = 4,
  Delegate = 2,
  InhibitFtmBase = 8,
  InhibitRoOriginateError = 16,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,char *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct IOleUndoManager
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *>
{
}; /* size: 0x0008 */

struct tagBITMAPINFOHEADER
{
  /* 0x0000 */ unsigned long biSize;
  /* 0x0004 */ long biWidth;
  /* 0x0008 */ long biHeight;
  /* 0x000c */ unsigned short biPlanes;
  /* 0x000e */ unsigned short biBitCount;
  /* 0x0010 */ unsigned long biCompression;
  /* 0x0014 */ unsigned long biSizeImage;
  /* 0x0018 */ long biXPelsPerMeter;
  /* 0x001c */ long biYPelsPerMeter;
  /* 0x0020 */ unsigned long biClrUsed;
  /* 0x0024 */ unsigned long biClrImportant;
}; /* size: 0x0028 */

typedef enum __MIDL_IBindStatusCallback_0003
{
  BINDF_ASYNCHRONOUS = 1,
  BINDF_ASYNCSTORAGE = 2,
  BINDF_NOPROGRESSIVERENDERING = 4,
  BINDF_OFFLINEOPERATION = 8,
  BINDF_GETNEWESTVERSION = 16,
  BINDF_NOWRITECACHE = 32,
  BINDF_NEEDFILE = 64,
  BINDF_PULLDATA = 128,
  BINDF_IGNORESECURITYPROBLEM = 256,
  BINDF_RESYNCHRONIZE = 512,
  BINDF_HYPERLINK = 1024,
  BINDF_NO_UI = 2048,
  BINDF_SILENTOPERATION = 4096,
  BINDF_PRAGMA_NO_CACHE = 8192,
  BINDF_GETCLASSOBJECT = 16384,
  BINDF_RESERVED_1 = 0xffff8000,
  BINDF_FREE_THREADED = 0x10000,
  BINDF_DIRECT_READ = 0x20000,
  BINDF_FORMS_SUBMIT = 0x40000,
  BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
  BINDF_FROMURLMON = 0x100000,
  BINDF_FWD_BACK = 0x200000,
  BINDF_PREFERDEFAULTHANDLER = 0x400000,
  BINDF_ENFORCERESTRICTED = 0x800000,
  BINDF_RESERVED_2 = -2147483648,
  BINDF_RESERVED_3 = 0x1000000,
  BINDF_RESERVED_4 = 0x2000000,
  BINDF_RESERVED_5 = 0x4000000,
  BINDF_RESERVED_6 = 0x8000000,
  BINDF_RESERVED_7 = 0x40000000,
  BINDF_RESERVED_8 = 0x20000000,
} _MIDL_IBindStatusCallback_0003, *P_MIDL_IBindStatusCallback_0003;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>
{
}; /* size: 0x0008 */

struct PACKAGE_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

enum Windows::Storage::FileProperties::PhotoOrientation
{
  PhotoOrientation_Unspecified = 0,
  PhotoOrientation_Normal = 1,
  PhotoOrientation_FlipHorizontal = 2,
  PhotoOrientation_Rotate180 = 3,
  PhotoOrientation_FlipVertical = 4,
  PhotoOrientation_Transpose = 5,
  PhotoOrientation_Rotate270 = 6,
  PhotoOrientation_Transverse = 7,
  PhotoOrientation_Rotate90 = 8,
};

struct IComCatalog2
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_27
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_27, *PTAG_UNNAMED_27;

enum tagMSHLFLAGS
{
  MSHLFLAGS_NORMAL = 0,
  MSHLFLAGS_TABLESTRONG = 1,
  MSHLFLAGS_TABLEWEAK = 2,
  MSHLFLAGS_NOPING = 4,
  MSHLFLAGS_RESERVED1 = 8,
  MSHLFLAGS_RESERVED2 = 16,
  MSHLFLAGS_RESERVED3 = 32,
  MSHLFLAGS_RESERVED4 = 64,
};

class wil::details::ThreadFailureCallbackHolder
{
  union
  {
    /* 0x0000 */ volatile long s_telemetryId;
    /* 0x0000 */ class wil::details::ThreadFailureCallbackHolder** m_ppThreadList;
  }; /* size: 0x0008 */
  /* 0x0008 */ struct wil::details::IFailureCallback* m_pCallback;
  /* 0x0010 */ class wil::details::ThreadFailureCallbackHolder* m_pNext;
  /* 0x0018 */ unsigned long m_threadId;
  /* 0x001c */ long Padding_59;
  /* 0x0020 */ struct wil::CallContextInfo* m_pCallContext;
}; /* size: 0x0028 */

class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_60[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

typedef struct _AppBarData
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_61;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uCallbackMessage;
  /* 0x0014 */ unsigned int uEdge;
  /* 0x0018 */ struct tagRECT rc;
  /* 0x0028 */ __int64 lParam;
} AppBarData, *PAppBarData; /* size: 0x0030 */

enum tagBINDSPEED
{
  BINDSPEED_INDEFINITE = 1,
  BINDSPEED_MODERATE = 2,
  BINDSPEED_IMMEDIATE = 3,
};

struct IOleClientSite
{
}; /* size: 0x0008 */

enum SYM_TYPE
{
  SymNone = 0,
  SymCoff = 1,
  SymCv = 2,
  SymPdb = 3,
  SymExport = 4,
  SymDeferred = 5,
  SymSym = 6,
  SymDia = 7,
  SymVirtual = 8,
  NumSymTypes = 9,
};

typedef struct _IMAGEHLP_MODULEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_62;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ wchar_t ModuleName[32];
  /* 0x0064 */ wchar_t ImageName[256];
  /* 0x0264 */ wchar_t LoadedImageName[256];
  /* 0x0464 */ wchar_t LoadedPdbName[256];
  /* 0x0664 */ unsigned long CVSig;
  /* 0x0668 */ wchar_t CVData[780];
  /* 0x0c80 */ unsigned long PdbSig;
  /* 0x0c84 */ struct _GUID PdbSig70;
  /* 0x0c94 */ unsigned long PdbAge;
  /* 0x0c98 */ int PdbUnmatched;
  /* 0x0c9c */ int DbgUnmatched;
  /* 0x0ca0 */ int LineNumbers;
  /* 0x0ca4 */ int GlobalSymbols;
  /* 0x0ca8 */ int TypeInfo;
  /* 0x0cac */ int SourceIndexed;
  /* 0x0cb0 */ int Publics;
  /* 0x0cb4 */ unsigned long MachineType;
  /* 0x0cb8 */ unsigned long Reserved;
  /* 0x0cbc */ long __PADDING__[1];
} IMAGEHLP_MODULEW64, *PIMAGEHLP_MODULEW64; /* size: 0x0cc0 */

struct SYNTHESIZED_MAP
{
  /* 0x0000 */ unsigned short cfSynthesized;
  /* 0x0002 */ unsigned short cfOrig;
}; /* size: 0x0004 */

enum tagACTIVATION_STAGE
{
  CLIENT_CONTEXT_STAGE = 1,
  CLIENT_MACHINE_STAGE = 2,
  SERVER_MACHINE_STAGE = 3,
  SERVER_PROCESS_STAGE = 4,
  SERVER_CONTEXT_STAGE = 5,
};

class Windows::System::User;

typedef struct _CERT_EXTENSION
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ int fCritical;
  /* 0x000c */ long Padding_63;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CERT_EXTENSION, *PCERT_EXTENSION; /* size: 0x0020 */

enum PATH_TYPE
{
  PATH_TYPE_UNKNOWN = 0,
  PATH_TYPE_UNC_ABSOLUTE = 1,
  PATH_TYPE_LOCAL_DEVICE = 2,
  PATH_TYPE_ROOT_LOCAL_DEVICE = 3,
  PATH_TYPE_DRIVE_ABSOLUTE = 4,
  PATH_TYPE_DRIVE_RELATIVE = 5,
  PATH_TYPE_ROOTED = 6,
  PATH_TYPE_RELATIVE = 7,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *,1>
{
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_64;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ wchar_t FileName[261];
  /* 0x0222 */ unsigned char Reparse;
  /* 0x0223 */ char Padding_65[5];
  /* 0x0228 */ void* hFile;
  /* 0x0230 */ unsigned long Flags;
  /* 0x0234 */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOADW64, *PIMAGEHLP_DEFERRED_SYMBOL_LOADW64; /* size: 0x0238 */

enum tagINVOKEKIND
{
  INVOKE_FUNC = 1,
  INVOKE_PROPERTYGET = 2,
  INVOKE_PROPERTYPUT = 4,
  INVOKE_PROPERTYPUTREF = 8,
};

typedef enum _TAG_UNNAMED_28
{
  value = 0,
} TAG_UNNAMED_28, *PTAG_UNNAMED_28;

class wil::details::<lambda_63960101b1ee22b80f95ebfda4fb8398>
{
}; /* size: 0x0001 */

struct IPropertyStorage
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_VA_TYPE
{
  SystemVaTypeAll = 0,
  SystemVaTypeNonPagedPool = 1,
  SystemVaTypePagedPool = 2,
  SystemVaTypeSystemCache = 3,
  SystemVaTypeSystemPtes = 4,
  SystemVaTypeSessionSpace = 5,
  SystemVaTypeMax = 6,
} SYSTEM_VA_TYPE, *PSYSTEM_VA_TYPE;

struct Windows::Foundation::IReference_impl<unsigned char>
{
}; /* size: 0x0008 */

enum tagREGKIND
{
  REGKIND_DEFAULT = 0,
  REGKIND_REGISTER = 1,
  REGKIND_NONE = 2,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IVectorChangedEventArgs,IWeakReferenceSource>
{
}; /* size: 0x0010 */

typedef struct _IMAGEHLP_CBA_EVENT
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ char* desc;
  /* 0x0010 */ void* object;
} IMAGEHLP_CBA_EVENT, *PIMAGEHLP_CBA_EVENT; /* size: 0x0018 */

class IntRegion<unsigned int,unsigned long>
{
}; /* size: 0x0001 */

struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::event_watcher_state>,1,1>
{
}; /* size: 0x0001 */

class wil::details::<lambda_0e40f415f9829abc64f0f2b3a638ba22>
{
}; /* size: 0x0001 */

enum tagTYPEFLAGS
{
  TYPEFLAG_FAPPOBJECT = 1,
  TYPEFLAG_FCANCREATE = 2,
  TYPEFLAG_FLICENSED = 4,
  TYPEFLAG_FPREDECLID = 8,
  TYPEFLAG_FHIDDEN = 16,
  TYPEFLAG_FCONTROL = 32,
  TYPEFLAG_FDUAL = 64,
  TYPEFLAG_FNONEXTENSIBLE = 128,
  TYPEFLAG_FOLEAUTOMATION = 256,
  TYPEFLAG_FRESTRICTED = 512,
  TYPEFLAG_FAGGREGATABLE = 1024,
  TYPEFLAG_FREPLACEABLE = 2048,
  TYPEFLAG_FDISPATCHABLE = 4096,
  TYPEFLAG_FREVERSEBIND = 8192,
  TYPEFLAG_FPROXY = 16384,
};

typedef enum _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;

struct std::hash<double>
{
}; /* size: 0x0001 */

typedef union _UNWIND_CODE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char CodeOffset;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OpInfo : 4; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0002 */
    struct
    {
      /* 0x0000 */ unsigned char OffsetLow;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OffsetHigh : 4; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0002 */ EpilogueCode;
    /* 0x0000 */ unsigned short FrameOffset;
  }; /* size: 0x0002 */
} UNWIND_CODE, *PUNWIND_CODE; /* size: 0x0002 */

struct Windows::Foundation::Collections::IVector<unsigned char>
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *,wil::process_heap_deleter>
{
}; /* size: 0x0008 */

struct DELETE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ unsigned long DeleteFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class Microsoft::WRL::WeakRef
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<_GUID>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_POWER_STATE_CONTEXT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long TargetSystemState : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned long EffectiveSystemState : 4; /* bit position: 12 */
      /* 0x0000 */ unsigned long CurrentSystemState : 4; /* bit position: 16 */
      /* 0x0000 */ unsigned long IgnoreHibernationPath : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long PseudoTransition : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long KernelSoftReboot : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned long DirectedDripsTransition : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned long Reserved2 : 8; /* bit position: 24 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ContextAsUlong;
  }; /* size: 0x0004 */
} SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT; /* size: 0x0004 */

enum wil::empty_string_options
{
  returns_null = 0,
  returns_empty = 1,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>,IWeakReferenceSource>
{
}; /* size: 0x0010 */

typedef enum _TOKEN_INFORMATION_CLASS
{
  TokenUser = 1,
  TokenGroups = 2,
  TokenPrivileges = 3,
  TokenOwner = 4,
  TokenPrimaryGroup = 5,
  TokenDefaultDacl = 6,
  TokenSource = 7,
  TokenType = 8,
  TokenImpersonationLevel = 9,
  TokenStatistics = 10,
  TokenRestrictedSids = 11,
  TokenSessionId = 12,
  TokenGroupsAndPrivileges = 13,
  TokenSessionReference = 14,
  TokenSandBoxInert = 15,
  TokenAuditPolicy = 16,
  TokenOrigin = 17,
  TokenElevationType = 18,
  TokenLinkedToken = 19,
  TokenElevation = 20,
  TokenHasRestrictions = 21,
  TokenAccessInformation = 22,
  TokenVirtualizationAllowed = 23,
  TokenVirtualizationEnabled = 24,
  TokenIntegrityLevel = 25,
  TokenUIAccess = 26,
  TokenMandatoryPolicy = 27,
  TokenLogonSid = 28,
  TokenIsAppContainer = 29,
  TokenCapabilities = 30,
  TokenAppContainerSid = 31,
  TokenAppContainerNumber = 32,
  TokenUserClaimAttributes = 33,
  TokenDeviceClaimAttributes = 34,
  TokenRestrictedUserClaimAttributes = 35,
  TokenRestrictedDeviceClaimAttributes = 36,
  TokenDeviceGroups = 37,
  TokenRestrictedDeviceGroups = 38,
  TokenSecurityAttributes = 39,
  TokenIsRestricted = 40,
  TokenProcessTrustLevel = 41,
  TokenPrivateNameSpace = 42,
  TokenSingletonAttributes = 43,
  TokenBnoIsolation = 44,
  TokenChildProcessFlags = 45,
  TokenIsLessPrivilegedAppContainer = 46,
  TokenIsSandboxed = 47,
  TokenIsAppSilo = 48,
  MaxTokenInfoClass = 49,
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageLibrary *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_29
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_29, *PTAG_UNNAMED_29;

struct IServerSecurity
{
}; /* size: 0x0008 */

typedef struct _PROC_THREAD_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 Attribute;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned __int64 Value;
} PROC_THREAD_ATTRIBUTE, *PPROC_THREAD_ATTRIBUTE; /* size: 0x0018 */

typedef struct _PROC_THREAD_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned long PresentFlags;
  /* 0x0004 */ unsigned long AttributeCount;
  /* 0x0008 */ unsigned long LastAttribute;
  /* 0x000c */ unsigned long SpareUlong0;
  /* 0x0010 */ struct _PROC_THREAD_ATTRIBUTE* ExtendedFlagsAttribute;
  /* 0x0018 */ struct _PROC_THREAD_ATTRIBUTE Attributes[1];
} PROC_THREAD_ATTRIBUTE_LIST, *PPROC_THREAD_ATTRIBUTE_LIST; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

enum tagGUIDKIND
{
  GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1,
};

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >* ptr_;
}; /* size: 0x0008 */

typedef enum _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;

class wil::details::<lambda_4484dc13178b50d6d8340115b070ef25>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_30
{
  value = 1,
} TAG_UNNAMED_30, *PTAG_UNNAMED_30;

struct tagPOINT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
}; /* size: 0x0008 */

typedef enum _TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;

typedef struct _CRYPT_3DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[24];
  /* 0x0018 */ unsigned char IV[8];
  /* 0x0020 */ unsigned char Feedback[8];
} CRYPT_3DES_KEY_STATE, *PCRYPT_3DES_KEY_STATE; /* size: 0x0028 */

enum LoadOrFreeWhy
{
  LoadingInprocServer = 0,
  CoLoadLibraryCalled = 1,
  CoFreeLibraryCalled = 2,
  FailedToCreateAPathEntry = 3,
  AnotherThreadBeatUsHere = 4,
  NoValidEntryPoint = 5,
  NoLongerInUse = 6,
};

struct IActivationStageInfo
{
}; /* size: 0x0008 */

typedef struct _NCRYPT_VSM_KEY_ATTESTATION_STATEMENT
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long cbSignature;
  /* 0x000c */ unsigned long cbReport;
  /* 0x0010 */ unsigned long cbAttributes;
} NCRYPT_VSM_KEY_ATTESTATION_STATEMENT, *PNCRYPT_VSM_KEY_ATTESTATION_STATEMENT; /* size: 0x0014 */

struct wistd::__compressed_pair_elem<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *,0,0>
{
  /* 0x0000 */ class wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>* __value_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>
{
}; /* size: 0x0001 */

enum tagSTDID_FLAGS
{
  STDID_SERVER = 0,
  STDID_CLIENT = 1,
  STDID_FREETHREADED = 2,
  STDID_HAVEID = 4,
  STDID_IGNOREID = 8,
  STDID_AGGREGATED = 16,
  STDID_INDESTRUCTOR = 256,
  STDID_LOCKEDINMEM = 512,
  STDID_DEFHANDLER = 1024,
  STDID_AGGID = 2048,
  STDID_STCMRSHL = 4096,
  STDID_REMOVEDFROMIDOBJ = 8192,
  STDID_SYSTEM = 16384,
  STDID_FTM = 0xffff8000,
  STDID_NOIEC = 0x10000,
  STDID_FASTRUNDOWN = 0x20000,
  STDID_AGILE_OOP_PROXY = 0x40000,
  STDID_SUPPRESS_WAKE_SET = 0x80000,
  STDID_IMPLEMENTS_IAGILEOBJECT = 0x100000,
  STDID_ALLOW_ASTA_TO_ASTA_DEADLOCK_RISK = 0x200000,
  STDID_DO_NOT_DISTURB_SET = 0x400000,
  STDID_DISABLE_ASYNC_REMOTING_FOR_WINRT_ASYNC = 0x800000,
  STDID_FAKE_OID_FOR_INTERNAL_PROXY = 0x1000000,
  STDID_RUNDOWN_OBJECT_OF_INTEREST = 0x2000000,
  STDID_DISABLE_FASTRUNDOWN = 0x4000000,
  STDID_ALL = 0x7ffff1f,
};

typedef struct _CERT_POLICIES_INFO
{
  /* 0x0000 */ unsigned long cPolicyInfo;
  /* 0x0004 */ long Padding_66;
  /* 0x0008 */ struct _CERT_POLICY_INFO* rgPolicyInfo;
} CERT_POLICIES_INFO, *PCERT_POLICIES_INFO; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::BasicProperties *>
{
}; /* size: 0x0008 */

enum Windows::Storage::StorageDeleteOption
{
  StorageDeleteOption_Default = 0,
  StorageDeleteOption_PermanentDelete = 1,
};

class TraceLoggingThreadActivityIdSetter
{
  /* 0x0000 */ struct _GUID m_ActivityId;
  /* 0x0010 */ struct _GUID m_SavedActivityId;
}; /* size: 0x0020 */

typedef struct _EVENT_DATA_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  union
  {
    /* 0x000c */ unsigned long Reserved;
    struct
    {
      /* 0x000c */ unsigned char Type;
      /* 0x000d */ unsigned char Reserved1;
      /* 0x000e */ unsigned short Reserved2;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR; /* size: 0x0010 */

struct IClipboardTaskCompletion
{
}; /* size: 0x0008 */

typedef enum _INSTALLSPECTYPE
{
  APPNAME = 1,
  FILEEXT = 2,
  PROGID = 3,
  COMCLASS = 4,
} INSTALLSPECTYPE, *PINSTALLSPECTYPE;

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned __int64 UniqueProcessId;
  /* 0x0010 */ unsigned __int64 HandleValue;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned short CreatorBackTraceIndex;
  /* 0x001e */ unsigned short ObjectTypeIndex;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ unsigned long Reserved;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX; /* size: 0x0028 */

typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwReserved;
  /* 0x0008 */ const wchar_t* pwszServerName;
} SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA, *PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<__int64>
{
}; /* size: 0x0008 */

enum tagCOINIT
{
  COINIT_APARTMENTTHREADED = 2,
  COINIT_MULTITHREADED = 0,
  COINIT_DISABLE_OLE1DDE = 4,
  COINIT_SPEED_OVER_MEMORY = 8,
};

struct tagDRAWTEXTPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iTabLength;
  /* 0x0008 */ int iLeftMargin;
  /* 0x000c */ int iRightMargin;
  /* 0x0010 */ unsigned int uiLengthDrawn;
}; /* size: 0x0014 */

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned int DataSize;
  /* 0x0004 */ unsigned long Rva;
} MINIDUMP_LOCATION_DESCRIPTOR, *PMINIDUMP_LOCATION_DESCRIPTOR; /* size: 0x0008 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_MEMORY_DESCRIPTOR, *PMINIDUMP_MEMORY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _MINIDUMP_THREAD
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
} MINIDUMP_THREAD, *PMINIDUMP_THREAD; /* size: 0x0030 */

class ClassRegistration
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long serverType;
  /* 0x0014 */ long Padding_67;
  /* 0x0018 */ struct HINSTANCE__* hModule;
  /* 0x0020 */ const wchar_t* className;
  /* 0x0028 */ const wchar_t* progID;
  /* 0x0030 */ const wchar_t* versionIndependentProgID;
  /* 0x0038 */ const wchar_t* threadingModel;
  /* 0x0040 */ struct _GUID appid;
  /* 0x0050 */ struct _GUID moduleid;
  /* 0x0060 */ int fCreateService;
}; /* size: 0x0068 */

typedef enum _TAG_UNNAMED_31
{
  DataID = 2343,
} TAG_UNNAMED_31, *PTAG_UNNAMED_31;

class COleTls
{
  /* 0x0000 */ struct tagSOleTlsData* _pData;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_32
{
  value = 0,
} TAG_UNNAMED_32, *PTAG_UNNAMED_32;

typedef struct _OLESTREAM
{
  /* 0x0000 */ struct _OLESTREAMVTBL* lpstbl;
} OLESTREAM, *POLESTREAM; /* size: 0x0008 */

enum MESSAGE_HANDLER_MESSAGE_TYPE
{
  MHMT_KEY_TRACE = 0,
  MHMT_FORWARD_MESSAGE = 1,
};

enum tagHITRESULT
{
  HITRESULT_OUTSIDE = 0,
  HITRESULT_TRANSPARENT = 1,
  HITRESULT_CLOSE = 2,
  HITRESULT_HIT = 3,
};

struct Windows::Foundation::Collections::IVectorView_impl<unsigned __int64,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_68[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

typedef enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE
{
  MiniHandleObjectInformationNone = 0,
  MiniThreadInformation1 = 1,
  MiniMutantInformation1 = 2,
  MiniMutantInformation2 = 3,
  MiniProcessInformation1 = 4,
  MiniProcessInformation2 = 5,
  MiniEventInformation1 = 6,
  MiniSectionInformation1 = 7,
  MiniSemaphoreInformation1 = 8,
  MiniHandleObjectInformationTypeMax = 9,
} MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE, *PMINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;

class CCompositeMonikerEnum
{
  /* 0x0000 */ long Padding_69[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_70;
  /* 0x0010 */ class CCompositeMoniker* m_pCM;
  /* 0x0018 */ int m_fForward;
  /* 0x001c */ long Padding_71;
  /* 0x0020 */ struct CCompositeMonikerEnum::se* m_pBase;
  /* 0x0028 */ struct CCompositeMonikerEnum::se* m_pTop;
  /* 0x0030 */ struct IMoniker* m_pNext;
}; /* size: 0x0038 */

typedef enum _KEY_INFORMATION_CLASS
{
  KeyBasicInformation = 0,
  KeyNodeInformation = 1,
  KeyFullInformation = 2,
  KeyNameInformation = 3,
  KeyCachedInformation = 4,
  KeyFlagsInformation = 5,
  KeyVirtualizationInformation = 6,
  KeyHandleTagsInformation = 7,
  KeyTrustInformation = 8,
  KeyLayerInformation = 9,
  MaxKeyInfoClass = 10,
} KEY_INFORMATION_CLASS, *PKEY_INFORMATION_CLASS;

struct Windows::Foundation::Collections::IVector<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator>
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator* ptr_;
}; /* size: 0x0008 */

enum tagAspectInfoFlag
{
  DVASPECTINFOFLAG_CANOPTIMIZE = 1,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>
{
}; /* size: 0x0008 */

enum tagPictureAttributes
{
  PICTURE_SCALABLE = 1,
  PICTURE_TRANSPARENT = 2,
};

enum SERVICEHOSTCONTROLLER_COM_REGISTRATION_TYPE
{
  SCRT_LOCAL_SERVER = 0,
  SCRT_INPROC_SERVER = 1,
};

struct Windows::Foundation::IReferenceArray<double>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IRestrictedErrorInfo>
{
  /* 0x0000 */ struct IRestrictedErrorInfo* ptr_;
}; /* size: 0x0008 */

enum tagSET_COLUMNS_NOTIFY_OPTIONS
{
  SCNO_DEFAULT = 0,
  SCNO_REORDERONLY = 1,
};

typedef struct _tlgWrapperPtrSize
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const void* const Ptr;
  }; /* size: 0x0008 */
  /* 0x0008 */ const unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} tlgWrapperPtrSize, *PtlgWrapperPtrSize; /* size: 0x0010 */

typedef enum _RTL_FEATURE_ENABLED_STATE_OPTIONS
{
  FeatureEnabledStateOptionsNone = 0,
  FeatureEnabledStateOptionsWexpConfig = 1,
} RTL_FEATURE_ENABLED_STATE_OPTIONS, *PRTL_FEATURE_ENABLED_STATE_OPTIONS;

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,double>
{
}; /* size: 0x0008 */

typedef struct _MOVE_FILE_DATA32
{
  /* 0x0000 */ unsigned int FileHandle;
  /* 0x0004 */ long Padding_72;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
} MOVE_FILE_DATA32, *PMOVE_FILE_DATA32; /* size: 0x0020 */

struct wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle>
{
}; /* size: 0x0001 */

struct LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Flink;
  /* 0x0004 */ unsigned long Blink;
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_STACK32
{
  /* 0x0000 */ unsigned long ActiveFrame;
  /* 0x0004 */ struct LIST_ENTRY32 FrameListCache;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long NextCookieSequenceNumber;
  /* 0x0014 */ unsigned long StackId;
} ACTIVATION_CONTEXT_STACK32, *PACTIVATION_CONTEXT_STACK32; /* size: 0x0018 */

enum UniversalMarshalerType
{
  None = 0,
  PSAutomation = 1,
  PSDispatch = 2,
};

struct std::integral_constant<bool,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef struct _SYSTEM_POOL_LIMIT_MEM_INFO
{
  /* 0x0000 */ unsigned __int64 MemoryLimit;
  /* 0x0008 */ unsigned __int64 NotificationLimit;
} SYSTEM_POOL_LIMIT_MEM_INFO, *PSYSTEM_POOL_LIMIT_MEM_INFO; /* size: 0x0010 */

struct tagCAUL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_73;
  /* 0x0008 */ unsigned long* pElems;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_33
{
  value = 0,
} TAG_UNNAMED_33, *PTAG_UNNAMED_33;

class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_695bd8186055aa888e76c377c51f9b1f>
{
  /* 0x0000 */ struct HREG& hregTlb;
}; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_695bd8186055aa888e76c377c51f9b1f> >
{
  /* 0x0000 */ class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_695bd8186055aa888e76c377c51f9b1f> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

struct IHttpNegotiate3
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IMoniker> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IMoniker>* ptr_;
}; /* size: 0x0008 */

struct tagFONTSIGNATURE
{
  /* 0x0000 */ unsigned long fsUsb[4];
  /* 0x0010 */ unsigned long fsCsb[2];
}; /* size: 0x0018 */

struct tagCHARSETINFO
{
  /* 0x0000 */ unsigned int ciCharset;
  /* 0x0004 */ unsigned int ciACP;
  /* 0x0008 */ struct tagFONTSIGNATURE fs;
}; /* size: 0x0020 */

typedef enum _EDP_AUDIT_OUTPUT_PROPERTY_INDEXES
{
  EdpAuditPropertyUnsupported = -1,
  EdpAuditPropertyTimeStamp = 0,
  EdpAuditPropertyUserId = 1,
  EdpAuditPropertyPolicy = 2,
  EdpAuditPropertyJustification = 3,
  EdpAuditPropertyPreviousEnterpriseId = 7,
  EdpAuditPropertyFilePath = 8,
  EdpAuditPropertyProtectionRemovedMax = 8,
  EdpAuditPropertySourceEnterpriseId = 7,
  EdpAuditPropertySourceAppName = 8,
  EdpAuditPropertyDestinationEnterpriseId = 9,
  EdpAuditPropertyDestinationAppName = 10,
  EdpAuditPropertyDataInfo = 11,
  EdpAuditPropertyDataCopiedMax = 11,
  EdpAuditPropertyObject = 12,
  EdpAuditPropertyAction = 13,
  EdpAuditPropertySourceName = 14,
  EdpAuditPropertySourceEID = 7,
  EdpAuditPropertyDestinationName = 15,
  EdpAuditPropertyDestinationEID = 9,
  EdpAuditPropertyApplication = 16,
  EdpAuditPropertyApplicationGeneratedMax = 16,
} EDP_AUDIT_OUTPUT_PROPERTY_INDEXES, *PEDP_AUDIT_OUTPUT_PROPERTY_INDEXES;

typedef struct _stat64i32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_74[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat64i32, *Pstat64i32; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

enum SYNCMGR_PRESENTER_NEXT_STEP
{
  SYNCMGR_PNS_CONTINUE = 0,
  SYNCMGR_PNS_DEFAULT = 1,
  SYNCMGR_PNS_CANCEL = 2,
};

typedef struct _FILE_FS_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long Characteristics;
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION; /* size: 0x0008 */

typedef union _SYSDBG_LIVEDUMP_CONTROL_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long UseDumpStorageStack : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long CompressMemoryPagesData : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long IncludeUserSpaceMemoryPages : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AbortIfMemoryPressure : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long SelectiveDump : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsUlong;
  }; /* size: 0x0004 */
} SYSDBG_LIVEDUMP_CONTROL_FLAGS, *PSYSDBG_LIVEDUMP_CONTROL_FLAGS; /* size: 0x0004 */

typedef union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long HypervisorPages : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long NonEssentialHypervisorPages : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsUlong;
  }; /* size: 0x0004 */
} SYSDBG_LIVEDUMP_CONTROL_ADDPAGES, *PSYSDBG_LIVEDUMP_CONTROL_ADDPAGES; /* size: 0x0004 */

typedef struct _SYSDBG_LIVEDUMP_CONTROL_V1
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned __int64 BugCheckParam1;
  /* 0x0010 */ unsigned __int64 BugCheckParam2;
  /* 0x0018 */ unsigned __int64 BugCheckParam3;
  /* 0x0020 */ unsigned __int64 BugCheckParam4;
  /* 0x0028 */ void* DumpFileHandle;
  /* 0x0030 */ void* CancelEventHandle;
  /* 0x0038 */ union _SYSDBG_LIVEDUMP_CONTROL_FLAGS Flags;
  /* 0x003c */ union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES AddPagesControl;
} SYSDBG_LIVEDUMP_CONTROL_V1, *PSYSDBG_LIVEDUMP_CONTROL_V1; /* size: 0x0040 */

class wil::folder_change_reader_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t> >,wil::err_returncode_policy>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0008 */

typedef enum __vc_attributes::helper_attributes::usageAttribute::usage_e
{
  eAnyUsage = 0,
  eCoClassUsage = 1,
  eCOMInterfaceUsage = 2,
  eInterfaceUsage = 6,
  eMemberUsage = 8,
  eMethodUsage = 16,
  eInterfaceMethodUsage = 32,
  eInterfaceMemberUsage = 64,
  eCoClassMemberUsage = 128,
  eCoClassMethodUsage = 256,
  eGlobalMethodUsage = 768,
  eGlobalDataUsage = 1024,
  eClassUsage = 2048,
  eInterfaceParameterUsage = 4096,
  eMethodParameterUsage = 12288,
  eIDLModuleUsage = 16384,
  eAnonymousUsage = 0xffff8000,
  eTypedefUsage = 0x10000,
  eUnionUsage = 0x20000,
  eEnumUsage = 0x40000,
  eDefineTagUsage = 0x80000,
  eStructUsage = 0x100000,
  eLocalUsage = 0x200000,
  ePropertyUsage = 0x400000,
  eEventUsage = 0x800000,
  eTemplateUsage = 0x1000000,
  eModuleUsage = 0x1000000,
  eIllegalUsage = 0x2000000,
  eAsynchronousUsage = 0x4000000,
  eAnyIDLUsage = 0x3f7fff,
} _vc_attributes::helper_attributes::usageAttribute::usage_e, *P_vc_attributes::helper_attributes::usageAttribute::usage_e;

struct Windows::System::IUserAuthenticationStatusChangingEventArgs
{
}; /* size: 0x0008 */

typedef enum _MODULE_WRITE_FLAGS
{
  ModuleWriteModule = 1,
  ModuleWriteDataSeg = 2,
  ModuleWriteMiscRecord = 4,
  ModuleWriteCvRecord = 8,
  ModuleReferencedByMemory = 16,
  ModuleWriteTlsData = 32,
  ModuleWriteCodeSegs = 64,
} MODULE_WRITE_FLAGS, *PMODULE_WRITE_FLAGS;

struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>
{
}; /* size: 0x0008 */

struct wil::details::static_lazy<DragDropTelemetry>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<DragDropTelemetry>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef enum __vc_attributes::threadingAttribute::threading_e
{
  apartment = 1,
  single = 2,
  free = 3,
  neutral = 4,
  both = 5,
} _vc_attributes::threadingAttribute::threading_e, *P_vc_attributes::threadingAttribute::threading_e;

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _CONSOLE_HISTORY_INFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int HistoryBufferSize;
  /* 0x0008 */ unsigned int NumberOfHistoryBuffers;
  /* 0x000c */ unsigned long dwFlags;
} CONSOLE_HISTORY_INFO, *PCONSOLE_HISTORY_INFO; /* size: 0x0010 */

struct Windows::Foundation::IReferenceArray_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

struct ITypeComp
{
}; /* size: 0x0008 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef enum __vc_attributes::aggregatableAttribute::type_e
{
  never = 0,
  allowed = 1,
  always = 2,
} _vc_attributes::aggregatableAttribute::type_e, *P_vc_attributes::aggregatableAttribute::type_e;

struct IClassFactory2
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>
{
}; /* size: 0x0008 */

typedef enum _KEY_VALUE_INFORMATION_CLASS
{
  KeyValueBasicInformation = 0,
  KeyValueFullInformation = 1,
  KeyValuePartialInformation = 2,
  KeyValueFullInformationAlign64 = 3,
  KeyValuePartialInformationAlign64 = 4,
  KeyValueLayerInformation = 5,
  MaxKeyValueInfoClass = 6,
} KEY_VALUE_INFORMATION_CLASS, *PKEY_VALUE_INFORMATION_CLASS;

class CEnumFormatEtc
{
  /* 0x0000 */ long Padding_75[3];
  /* 0x000c */ unsigned long m_ulFlags;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_index;
  /* 0x0018 */ class CArray<CFormatEtc>* m_pFEArray;
}; /* size: 0x0020 */

struct IDragOperationInternal
{
}; /* size: 0x0008 */

enum SYNCMGR_HANDLER_TYPE
{
  SYNCMGR_HT_UNSPECIFIED = 0,
  SYNCMGR_HT_APPLICATION = 1,
  SYNCMGR_HT_DEVICE = 2,
  SYNCMGR_HT_FOLDER = 3,
  SYNCMGR_HT_SERVICE = 4,
  SYNCMGR_HT_COMPUTER = 5,
  SYNCMGR_HT_MIN = 0,
  SYNCMGR_HT_MAX = 5,
};

struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0008 */

class TryGetNdrTypeInfo::__l2::<lambda_1258db8bed1d9beae0452193350f83a8>
{
  /* 0x0000 */ unsigned short& methodCount;
  /* 0x0008 */ struct tagMethodInfo*& methodInfo;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

typedef enum __vc_attributes::event_receiverAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
} _vc_attributes::event_receiverAttribute::type_e, *P_vc_attributes::event_receiverAttribute::type_e;

typedef enum __vc_attributes::moduleAttribute::type_e
{
  dll = 1,
  exe = 2,
  service = 3,
  unspecified = 4,
  EXE = 2,
  SERVICE = 3,
} _vc_attributes::moduleAttribute::type_e, *P_vc_attributes::moduleAttribute::type_e;

struct tagCADBL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_76;
  /* 0x0008 */ double* pElems;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef enum _EDP_CRED_SVC_INFO_TYPE
{
  EdpCredSvcInfo_Unknown = 0,
  EdpCredSvcInfo_DplKeyState = 1,
  EdpCredSvcInfo_RevocationInfo = 2,
  EdpCredSvcInfo_Test_ReloadConfig = 3,
  EdpCredSvcInfo_Test_SetLockState = 4,
  EdpCredSvcInfo_SetProcessUiEnforcement = 5,
  EdpCredSvcInfo_ClearProcessUiEnforcement = 6,
  EdpCredSvcInfo_SetProcessTlsIndex = 7,
  EdpCredSvcInfo_SetSecondaryIdentities = 8,
  EdpCredSvcInfo_ConsumerDplKeyState = 9,
  EdpCredSvcInfo_GetDplUserCredentialInfo = 10,
  EdpCredSvcInfo_Test_ConsumerSetLockState = 11,
  EdpCredSvcInfo_ConsumerCredentialCreate = 12,
  EdpCredSvcInfo_Test_ConsumerCredentialDelete = 13,
  EdpCredSvcInfo_GetCredentialKeyID = 14,
  EdpCredSvcInfo_GetAppKeyForAppCache = 15,
  EdpCredSvcInfo_Max = 16,
} EDP_CRED_SVC_INFO_TYPE, *PEDP_CRED_SVC_INFO_TYPE;

struct Windows::Foundation::IReferenceArray_impl<double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IObservableVector<IInspectable *>
{
}; /* size: 0x0008 */

enum tagVIEWSTATUS
{
  VIEWSTATUS_OPAQUE = 1,
  VIEWSTATUS_SOLIDBKGND = 2,
  VIEWSTATUS_DVASPECTOPAQUE = 4,
  VIEWSTATUS_DVASPECTTRANSPARENT = 8,
  VIEWSTATUS_SURFACE = 16,
  VIEWSTATUS_3DSURFACE = 32,
};

class IInternalChannelBuffer
{
}; /* size: 0x0010 */

enum tagDVASPECT2
{
  DVASPECT_OPAQUE = 16,
  DVASPECT_TRANSPARENT = 32,
};

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR_2
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
  /* 0x0020 */ unsigned long ObjectInfoRva;
  /* 0x0024 */ unsigned int Reserved0;
} MINIDUMP_HANDLE_DESCRIPTOR_2, *PMINIDUMP_HANDLE_DESCRIPTOR_2; /* size: 0x0028 */

struct Windows::Foundation::Collections::IVectorView_impl<double,1>
{
}; /* size: 0x0008 */

enum tagCOMSD
{
  SD_LAUNCHPERMISSIONS = 0,
  SD_ACCESSPERMISSIONS = 1,
  SD_LAUNCHRESTRICTIONS = 2,
  SD_ACCESSRESTRICTIONS = 3,
};

class std::_String_const_iterator<std::_String_val<std::_Simple_types<unsigned short> > >;

enum COleCache::Locate::__l2::tagFormatType
{
  FORMATTYPE_NONE = 0,
  FORMATTYPE_ANY = 1,
  FORMATTYPE_ENHMF = 2,
  FORMATTYPE_DIB = 3,
  FORMATTYPE_MFPICT = 4,
  FORMATTYPE_USER = 5,
};

struct Windows::Foundation::Collections::is_foundation_struct<unsigned __int64>
{
}; /* size: 0x0001 */

typedef struct __vcrt_assert_va_start_is_not_reference<char const *>
{
} _vcrt_assert_va_start_is_not_reference<char const *>, *P_vcrt_assert_va_start_is_not_reference<char const *>; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector_impl<unsigned int,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<__int64>
{
}; /* size: 0x0008 */

class XWinRT::SecureVersionTag::TagManager
{
  /* 0x0000 */ class XWinRT::SecureVersionTag::Tag* _pTag;
}; /* size: 0x0008 */

enum tagCTRLINFO
{
  CTRLINFO_EATS_RETURN = 1,
  CTRLINFO_EATS_ESCAPE = 2,
};

enum tagAR_STATE
{
  AR_ENABLED = 0,
  AR_DISABLED = 1,
  AR_SUPPRESSED = 2,
  AR_REMOTESESSION = 4,
  AR_MULTIMON = 8,
  AR_NOSENSOR = 16,
  AR_NOT_SUPPORTED = 32,
  AR_DOCKED = 64,
  AR_LAPTOP = 128,
};

class Microsoft::WRL::Wrappers::Details::SyncLockExclusive
{
  /* 0x0000 */ struct _RTL_SRWLOCK* sync_;
}; /* size: 0x0008 */

typedef struct _FPO_DATA
{
  /* 0x0000 */ unsigned long ulOffStart;
  /* 0x0004 */ unsigned long cbProcSize;
  /* 0x0008 */ unsigned long cdwLocals;
  /* 0x000c */ unsigned short cdwParams;
  struct /* bitfield */
  {
    /* 0x000e */ unsigned short cbProlog : 8; /* bit position: 0 */
    /* 0x000e */ unsigned short cbRegs : 3; /* bit position: 8 */
    /* 0x000e */ unsigned short fHasSEH : 1; /* bit position: 11 */
    /* 0x000e */ unsigned short fUseBP : 1; /* bit position: 12 */
    /* 0x000e */ unsigned short reserved : 1; /* bit position: 13 */
    /* 0x000e */ unsigned short cbFrame : 2; /* bit position: 14 */
  }; /* bitfield */
} FPO_DATA, *PFPO_DATA; /* size: 0x0010 */

enum CarefullyQueryNewInterfaceContext::ClaimsToImplementEverythingState
{
  ClaimsToImplementEverythingUnknown = 0,
  DoesClaimToImplementEverything = 1,
  DoesNotClaimToImplementEverything = 2,
};

class CarefullyQueryNewInterfaceContext
{
  /* 0x0000 */ struct IUnknown* const _punk;
  /* 0x0008 */ enum CarefullyQueryNewInterfaceContext::ClaimsToImplementEverythingState _state;
}; /* size: 0x0010 */

typedef struct _OPEN_PRINTER_PROPS_INFOW
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_77;
  /* 0x0008 */ wchar_t* pszSheetName;
  /* 0x0010 */ unsigned int uSheetIndex;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ int bModal;
  /* 0x001c */ long __PADDING__[1];
} OPEN_PRINTER_PROPS_INFOW, *POPEN_PRINTER_PROPS_INFOW; /* size: 0x0020 */

enum tagXFORMCOORDS
{
  XFORMCOORDS_POSITION = 1,
  XFORMCOORDS_SIZE = 2,
  XFORMCOORDS_HIMETRICTOCONTAINER = 4,
  XFORMCOORDS_CONTAINERTOHIMETRIC = 8,
  XFORMCOORDS_EVENTCOMPAT = 16,
};

typedef enum _IMAGEHLP_STATUS_REASON
{
  BindOutOfMemory = 0,
  BindRvaToVaFailed = 1,
  BindNoRoomInImage = 2,
  BindImportModuleFailed = 3,
  BindImportProcedureFailed = 4,
  BindImportModule = 5,
  BindImportProcedure = 6,
  BindForwarder = 7,
  BindForwarderNOT = 8,
  BindImageModified = 9,
  BindExpandFileHeaders = 10,
  BindImageComplete = 11,
  BindMismatchedSymbols = 12,
  BindSymbolsNotUpdated = 13,
  BindImportProcedure32 = 14,
  BindImportProcedure64 = 15,
  BindForwarder32 = 16,
  BindForwarder64 = 17,
  BindForwarderNOT32 = 18,
  BindForwarderNOT64 = 19,
} IMAGEHLP_STATUS_REASON, *PIMAGEHLP_STATUS_REASON;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessPatternTbl> const >;

class IsFloat<unsigned __int64,0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _IMAGEHLP_SYMBOL_TYPE_INFO
{
  TI_GET_SYMTAG = 0,
  TI_GET_SYMNAME = 1,
  TI_GET_LENGTH = 2,
  TI_GET_TYPE = 3,
  TI_GET_TYPEID = 4,
  TI_GET_BASETYPE = 5,
  TI_GET_ARRAYINDEXTYPEID = 6,
  TI_FINDCHILDREN = 7,
  TI_GET_DATAKIND = 8,
  TI_GET_ADDRESSOFFSET = 9,
  TI_GET_OFFSET = 10,
  TI_GET_VALUE = 11,
  TI_GET_COUNT = 12,
  TI_GET_CHILDRENCOUNT = 13,
  TI_GET_BITPOSITION = 14,
  TI_GET_VIRTUALBASECLASS = 15,
  TI_GET_VIRTUALTABLESHAPEID = 16,
  TI_GET_VIRTUALBASEPOINTEROFFSET = 17,
  TI_GET_CLASSPARENTID = 18,
  TI_GET_NESTED = 19,
  TI_GET_SYMINDEX = 20,
  TI_GET_LEXICALPARENT = 21,
  TI_GET_ADDRESS = 22,
  TI_GET_THISADJUST = 23,
  TI_GET_UDTKIND = 24,
  TI_IS_EQUIV_TO = 25,
  TI_GET_CALLING_CONVENTION = 26,
  TI_IS_CLOSE_EQUIV_TO = 27,
  TI_GTIEX_REQS_VALID = 28,
  TI_GET_VIRTUALBASEOFFSET = 29,
  TI_GET_VIRTUALBASEDISPINDEX = 30,
  TI_GET_IS_REFERENCE = 31,
  TI_GET_INDIRECTVIRTUALBASECLASS = 32,
  TI_GET_VIRTUALBASETABLETYPE = 33,
  TI_GET_OBJECTPOINTERTYPE = 34,
  IMAGEHLP_SYMBOL_TYPE_INFO_MAX = 35,
} IMAGEHLP_SYMBOL_TYPE_INFO, *PIMAGEHLP_SYMBOL_TYPE_INFO;

typedef struct __vc_attributes::idl_quoteAttribute
{
  /* 0x0000 */ const char* text;
} _vc_attributes::idl_quoteAttribute, *P_vc_attributes::idl_quoteAttribute; /* size: 0x0008 */

class wil::unique_call<void (__cdecl*)(void),&OleUninitialize,1>
{
  /* 0x0000 */ BOOL m_call;
}; /* size: 0x0001 */

typedef enum _THREAD_WRITE_FLAGS
{
  ThreadWriteThread = 1,
  ThreadWriteStack = 2,
  ThreadWriteContext = 4,
  ThreadWriteBackingStore = 8,
  ThreadWriteInstructionWindow = 16,
  ThreadWriteThreadData = 32,
  ThreadWriteThreadInfo = 64,
} THREAD_WRITE_FLAGS, *PTHREAD_WRITE_FLAGS;

class std::allocator<unsigned short>
{
}; /* size: 0x0001 */

enum APPLICATION_LAYOUT_MODE
{
  ALM_NORMAL = 0,
  ALM_LOCKSCREEN = 1,
};

enum CNVTYP
{
  cnvtypNone = 0,
  cnvtypConvertTo = 1,
  cnvtypTreatAs = 2,
};

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,IWeakReference *>
{
}; /* size: 0x0008 */

class SafeIntInternal::SafeIntExceptionHandler<SafeIntInternal::SafeIntWin32Exception>
{
}; /* size: 0x0001 */

class wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

class MultiplicationMethod<unsigned int,unsigned short>
{
}; /* size: 0x0001 */

enum ACTCTX_REQUESTED_RUN_LEVEL
{
  ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
  ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
  ACTCTX_RUN_LEVEL_NUMBERS = 4,
};

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
  /* 0x0008 */ unsigned long UiAccess;
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION; /* size: 0x000c */

enum OLE_NOTIFICATION
{
  OLE_CHANGED = 0,
  OLE_SAVED = 1,
  OLE_CLOSED = 2,
  OLE_RENAMED = 3,
};

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *>
{
}; /* size: 0x0008 */

enum tagUSERCLASSTYPE
{
  USERCLASSTYPE_FULL = 1,
  USERCLASSTYPE_SHORT = 2,
  USERCLASSTYPE_APPNAME = 3,
};

class wil::details::pointer_range<unsigned short *>
{
  /* 0x0000 */ wchar_t* m_begin;
  /* 0x0008 */ wchar_t* m_end;
}; /* size: 0x0010 */

class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_c6ed493d5af5554e8c237144b3cdab2f>
{
  /* 0x0000 */ struct HREG& hregVersion;
}; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_c6ed493d5af5554e8c237144b3cdab2f> >
{
  /* 0x0000 */ class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_c6ed493d5af5554e8c237144b3cdab2f> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

struct _TP_CLEANUP_GROUP;

class IntTraits<unsigned __int64>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 maxInt;
    /* 0x0000 */ const unsigned __int64 minInt;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

typedef struct _EXCEPTION_RECORD
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0010 */ void* ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ long Padding_78;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD, *PEXCEPTION_RECORD; /* size: 0x0098 */

typedef struct _M128A
{
  /* 0x0000 */ unsigned __int64 Low;
  /* 0x0008 */ __int64 High;
} M128A, *PM128A; /* size: 0x0010 */

typedef struct _XSAVE_FORMAT
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _M128A FloatRegisters[8];
  /* 0x00a0 */ struct _M128A XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[96];
} XSAVE_FORMAT, *PXSAVE_FORMAT; /* size: 0x0200 */

typedef struct _CONTEXT
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  union
  {
    /* 0x0100 */ struct _XSAVE_FORMAT FltSave;
    struct
    {
      /* 0x0100 */ struct _M128A Header[2];
      /* 0x0120 */ struct _M128A Legacy[8];
      /* 0x01a0 */ struct _M128A Xmm0;
      /* 0x01b0 */ struct _M128A Xmm1;
      /* 0x01c0 */ struct _M128A Xmm2;
      /* 0x01d0 */ struct _M128A Xmm3;
      /* 0x01e0 */ struct _M128A Xmm4;
      /* 0x01f0 */ struct _M128A Xmm5;
      /* 0x0200 */ struct _M128A Xmm6;
      /* 0x0210 */ struct _M128A Xmm7;
      /* 0x0220 */ struct _M128A Xmm8;
      /* 0x0230 */ struct _M128A Xmm9;
      /* 0x0240 */ struct _M128A Xmm10;
      /* 0x0250 */ struct _M128A Xmm11;
      /* 0x0260 */ struct _M128A Xmm12;
      /* 0x0270 */ struct _M128A Xmm13;
      /* 0x0280 */ struct _M128A Xmm14;
      /* 0x0290 */ struct _M128A Xmm15;
    }; /* size: 0x01a0 */
  }; /* size: 0x0200 */
  /* 0x0300 */ struct _M128A VectorRegister[26];
  /* 0x04a0 */ unsigned __int64 VectorControl;
  /* 0x04a8 */ unsigned __int64 DebugControl;
  /* 0x04b0 */ unsigned __int64 LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 LastExceptionFromRip;
} CONTEXT, *PCONTEXT; /* size: 0x04d0 */

typedef enum _EXCEPTION_LOG_TYPE
{
  LogExceptionEmpty = 0,
  LogExceptionDispatch = 1,
  LogExceptionHandler = 2,
} EXCEPTION_LOG_TYPE, *PEXCEPTION_LOG_TYPE;

typedef struct _EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ long Padding_79[2];
  /* 0x00a0 */ struct _CONTEXT ContextRecord;
  /* 0x0570 */ enum _EXCEPTION_LOG_TYPE Type;
  /* 0x0574 */ long Disposition;
  /* 0x0578 */ unsigned __int64 Thread;
  /* 0x0580 */ unsigned __int64 ControlPc;
  /* 0x0588 */ void* Handler;
} EXCEPTION_LOG, *PEXCEPTION_LOG; /* size: 0x0590 */

typedef enum _MINIDUMP_SECONDARY_FLAGS
{
  MiniSecondaryWithoutPowerInfo = 1,
  MiniSecondaryValidFlags = 1,
} MINIDUMP_SECONDARY_FLAGS, *PMINIDUMP_SECONDARY_FLAGS;

struct MIPID
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ struct _GUID ipid;
  /* 0x0018 */ unsigned long dwApt;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

enum wil::FolderChangeEvents
{
  None = 0,
  FileName = 1,
  DirectoryName = 2,
  Attributes = 4,
  FileSize = 8,
  LastWriteTime = 16,
  Security = 256,
  All = 287,
};

typedef enum _TAG_UNNAMED_34
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_34, *PTAG_UNNAMED_34;

struct Windows::Foundation::IAsyncOperationCompletedHandler<int>
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::details::folder_change_reader_state* m_ptr;
}; /* size: 0x0008 */

class LargeIntRegMultiply<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0001 */

enum Ole32SQMFlags
{
  SixteenbitOLEUsage = 1,
  OLEDDEUsage = 2,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >
{
}; /* size: 0x0008 */

enum CDragDefaultCursors::CURSOR_ID
{
  NO_DROP = 0,
  MOVE_DROP = 1,
  COPY_DROP = 2,
  LINK_DROP = 3,
};

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CRYPT_ATTRIBUTE_TYPE_VALUE, *PCRYPT_ATTRIBUTE_TYPE_VALUE; /* size: 0x0018 */

typedef struct _SPC_INDIRECT_DATA_CONTENT
{
  /* 0x0000 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE Data;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Digest;
} SPC_INDIRECT_DATA_CONTENT, *PSPC_INDIRECT_DATA_CONTENT; /* size: 0x0040 */

class Microsoft::WRL::ComPtr<Microsoft::WRL::Details::WeakReferenceImpl>
{
  /* 0x0000 */ class Microsoft::WRL::Details::WeakReferenceImpl* ptr_;
}; /* size: 0x0008 */

class Windows::Storage::StorageStreamTransaction;

typedef struct _CERT_LOGOTYPE_DETAILS
{
  /* 0x0000 */ wchar_t* pwszMimeType;
  /* 0x0008 */ unsigned long cHashedUrl;
  /* 0x000c */ long Padding_80;
  /* 0x0010 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_DETAILS, *PCERT_LOGOTYPE_DETAILS; /* size: 0x0018 */

typedef struct _CERT_LOGOTYPE_IMAGE
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x0018 */ struct _CERT_LOGOTYPE_IMAGE_INFO* pLogotypeImageInfo;
} CERT_LOGOTYPE_IMAGE, *PCERT_LOGOTYPE_IMAGE; /* size: 0x0020 */

enum EDP_SOURCE_ENTERPRISEID_OPTION
{
  EDP_SOURCE_ENTERPRISEID_OPTION_USE_INPUT = 0,
  EDP_SOURCE_ENTERPRISEID_OPTION_EVALUATE_DATA_FILE_PATHS = 1,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *,1>
{
}; /* size: 0x0008 */

enum CDragDefaultCursors::SCROLL_TYPE
{
  NO_SCROLL = 0,
  SCROLL = 1,
};

typedef enum _TAG_UNNAMED_35
{
  IMETHOD_FIRST = 3,
  IMETHOD_GetTypeInfoCount = 3,
  IMETHOD_GetTypeInfo = 4,
  IMETHOD_GetIDsOfNames = 5,
  IMETHOD_Invoke = 6,
  IMETHOD_DISPATCH_MAX = 7,
  IPARAM_Invoke_DispId = 0,
  IPARAM_Invoke_Iid = 1,
  IPARAM_Invoke_Lcid = 2,
  IPARAM_Invoke_WFlags = 3,
  IPARAM_Invoke_DispParams = 4,
  IPARAM_Invoke_PVarResult = 5,
  IPARAM_Invoke_PExcepInfo = 6,
  IPARAM_Invoke_PUArgErr = 7,
} TAG_UNNAMED_35, *PTAG_UNNAMED_35;

struct Windows::Foundation::Collections::IMap<unsigned int,HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

enum tagSTDMSHLFLAGS
{
  SMEXF_SERVER = 1,
  SMEXF_HANDLER = 2,
};

enum NAMESPACE_FOLDER_PREFERENCES_FLAGS
{
  FVPF_DEFAULT = 0,
  FVPF_ALLOWITEMSVIEW = 1,
};

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_36
{
  __the_value = 0,
} TAG_UNNAMED_36, *PTAG_UNNAMED_36;

class wil::details::lambda_call<<lambda_2e1c9c4fca2bd83b2812b8ab64129fec> >
{
  /* 0x0000 */ class TryGetNdrTypeInfo::__l2::<lambda_2e1c9c4fca2bd83b2812b8ab64129fec> m_lambda;
  /* 0x0001 */ BOOL m_call;
}; /* size: 0x0002 */

enum CALLFRAME_WALK
{
  CALLFRAME_WALK_IN = 1,
  CALLFRAME_WALK_INOUT = 2,
  CALLFRAME_WALK_OUT = 4,
};

struct Windows::Foundation::Collections::IVectorView<Windows::UI::WindowId>
{
}; /* size: 0x0008 */

enum CALLFRAME_FREE
{
  CALLFRAME_FREE_NONE = 0,
  CALLFRAME_FREE_IN = 1,
  CALLFRAME_FREE_INOUT = 2,
  CALLFRAME_FREE_OUT = 4,
  CALLFRAME_FREE_TOP_INOUT = 8,
  CALLFRAME_FREE_TOP_OUT = 16,
  CALLFRAME_FREE_ALL = 31,
};

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

struct IProcessServerInfo
{
}; /* size: 0x0008 */

enum EDP_AUDIT_ACTION
{
  SystemGenerated = 0,
  FileDecrypt = 1,
  CopyToLocation = 2,
  SendToRecipient = 3,
  Other = 4,
  FileRead = 5,
  NetworkAccess = 6,
};

typedef struct _IMAGE_IMPORT_BY_NAME
{
  /* 0x0000 */ unsigned short Hint;
  /* 0x0002 */ char Name[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME; /* size: 0x0004 */

class wil::details::<lambda_2dccd720e70a8ebd6c5789ea1b627527>
{
}; /* size: 0x0001 */

enum CALLFRAME_NULL
{
  CALLFRAME_NULL_NONE = 0,
  CALLFRAME_NULL_INOUT = 2,
  CALLFRAME_NULL_OUT = 4,
  CALLFRAME_NULL_ALL = 6,
};

struct Windows::Foundation::Collections::IIterator<IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long OriginalOplockLevel;
  /* 0x0008 */ unsigned long NewOplockLevel;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long AccessMode;
  /* 0x0014 */ unsigned short ShareMode;
  /* 0x0016 */ char __PADDING__[2];
} REQUEST_OPLOCK_OUTPUT_BUFFER, *PREQUEST_OPLOCK_OUTPUT_BUFFER; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0008 */

typedef struct _FILE_STAT_LX_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileId;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0030 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long ReparseTag;
  /* 0x0040 */ unsigned long NumberOfLinks;
  /* 0x0044 */ unsigned long EffectiveAccess;
  /* 0x0048 */ unsigned long LxFlags;
  /* 0x004c */ unsigned long LxUid;
  /* 0x0050 */ unsigned long LxGid;
  /* 0x0054 */ unsigned long LxMode;
  /* 0x0058 */ unsigned long LxDeviceIdMajor;
  /* 0x005c */ unsigned long LxDeviceIdMinor;
} FILE_STAT_LX_INFORMATION, *PFILE_STAT_LX_INFORMATION; /* size: 0x0060 */

enum tagOLEDCFLAGS
{
  OLEDC_NODRAW = 1,
  OLEDC_PAINTBKGND = 2,
  OLEDC_OFFSCREEN = 4,
};

typedef struct _MINIDUMP_DIRECTORY
{
  /* 0x0000 */ unsigned int StreamType;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Location;
} MINIDUMP_DIRECTORY, *PMINIDUMP_DIRECTORY; /* size: 0x000c */

struct Windows::Foundation::IAsyncOperationWithProgress<int,int>
{
}; /* size: 0x0008 */

enum tagUASFLAGS
{
  UAS_NORMAL = 0,
  UAS_BLOCKED = 1,
  UAS_NOPARENTENABLE = 2,
  UAS_MASK = 3,
};

typedef struct _MEMORY_WORKING_SET_EX_BLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Win32Protection : 11; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned __int64 Node : 6; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 24 */
      /* 0x0000 */ unsigned __int64 Reserved : 3; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 SharedOriginal : 1; /* bit position: 30 */
      /* 0x0000 */ unsigned __int64 Bad : 1; /* bit position: 31 */
      /* 0x0000 */ unsigned __int64 Win32GraphicsProtection : 4; /* bit position: 32 */
      /* 0x0000 */ unsigned __int64 ReservedUlong : 28; /* bit position: 36 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Reserved0 : 14; /* bit position: 1 */
        /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
        /* 0x0000 */ unsigned __int64 Reserved1 : 5; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 PageTable : 1; /* bit position: 21 */
        /* 0x0000 */ unsigned __int64 Location : 2; /* bit position: 22 */
        /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 24 */
        /* 0x0000 */ unsigned __int64 ModifiedList : 1; /* bit position: 27 */
        /* 0x0000 */ unsigned __int64 Reserved2 : 2; /* bit position: 28 */
        /* 0x0000 */ unsigned __int64 SharedOriginal : 1; /* bit position: 30 */
        /* 0x0000 */ unsigned __int64 Bad : 1; /* bit position: 31 */
        /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
      }; /* bitfield */
    } /* size: 0x0008 */ Invalid;
  }; /* size: 0x0008 */
} MEMORY_WORKING_SET_EX_BLOCK, *PMEMORY_WORKING_SET_EX_BLOCK; /* size: 0x0008 */

typedef struct _WPP_WIN2K_CONTROL_BLOCK
{
  /* 0x0000 */ unsigned __int64 Logger;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Level;
  /* 0x0010 */ const struct _GUID* ControlGuid;
} WPP_WIN2K_CONTROL_BLOCK, *PWPP_WIN2K_CONTROL_BLOCK; /* size: 0x0018 */

struct ITypeCompVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Bind /* function */;
  /* 0x0020 */ void* BindType /* function */;
}; /* size: 0x0028 */

enum FORMAT_CHARACTER
{
  FC_ZERO = 0,
  FC_BYTE = 1,
  FC_CHAR = 2,
  FC_SMALL = 3,
  FC_USMALL = 4,
  FC_WCHAR = 5,
  FC_SHORT = 6,
  FC_USHORT = 7,
  FC_LONG = 8,
  FC_ULONG = 9,
  FC_FLOAT = 10,
  FC_HYPER = 11,
  FC_DOUBLE = 12,
  FC_ENUM16 = 13,
  FC_ENUM32 = 14,
  FC_IGNORE = 15,
  FC_ERROR_STATUS_T = 16,
  FC_RP = 17,
  FC_UP = 18,
  FC_OP = 19,
  FC_FP = 20,
  FC_STRUCT = 21,
  FC_PSTRUCT = 22,
  FC_CSTRUCT = 23,
  FC_CPSTRUCT = 24,
  FC_CVSTRUCT = 25,
  FC_BOGUS_STRUCT = 26,
  FC_CARRAY = 27,
  FC_CVARRAY = 28,
  FC_SMFARRAY = 29,
  FC_LGFARRAY = 30,
  FC_SMVARRAY = 31,
  FC_LGVARRAY = 32,
  FC_BOGUS_ARRAY = 33,
  FC_C_CSTRING = 34,
  FC_C_BSTRING = 35,
  FC_C_SSTRING = 36,
  FC_C_WSTRING = 37,
  FC_CSTRING = 38,
  FC_BSTRING = 39,
  FC_SSTRING = 40,
  FC_WSTRING = 41,
  FC_ENCAPSULATED_UNION = 42,
  FC_NON_ENCAPSULATED_UNION = 43,
  FC_BYTE_COUNT_POINTER = 44,
  FC_TRANSMIT_AS = 45,
  FC_REPRESENT_AS = 46,
  FC_IP = 47,
  FC_BIND_CONTEXT = 48,
  FC_BIND_GENERIC = 49,
  FC_BIND_PRIMITIVE = 50,
  FC_AUTO_HANDLE = 51,
  FC_CALLBACK_HANDLE = 52,
  FC_UNUSED1 = 53,
  FC_POINTER = 54,
  FC_ALIGNM2 = 55,
  FC_ALIGNM4 = 56,
  FC_ALIGNM8 = 57,
  FC_UNUSED2 = 58,
  FC_UNUSED3 = 59,
  FC_SYSTEM_HANDLE = 60,
  FC_STRUCTPAD1 = 61,
  FC_STRUCTPAD2 = 62,
  FC_STRUCTPAD3 = 63,
  FC_STRUCTPAD4 = 64,
  FC_STRUCTPAD5 = 65,
  FC_STRUCTPAD6 = 66,
  FC_STRUCTPAD7 = 67,
  FC_STRING_SIZED = 68,
  FC_UNUSED5 = 69,
  FC_NO_REPEAT = 70,
  FC_FIXED_REPEAT = 71,
  FC_VARIABLE_REPEAT = 72,
  FC_FIXED_OFFSET = 73,
  FC_VARIABLE_OFFSET = 74,
  FC_PP = 75,
  FC_EMBEDDED_COMPLEX = 76,
  FC_IN_PARAM = 77,
  FC_IN_PARAM_BASETYPE = 78,
  FC_IN_PARAM_NO_FREE_INST = 79,
  FC_IN_OUT_PARAM = 80,
  FC_OUT_PARAM = 81,
  FC_RETURN_PARAM = 82,
  FC_RETURN_PARAM_BASETYPE = 83,
  FC_DEREFERENCE = 84,
  FC_DIV_2 = 85,
  FC_MULT_2 = 86,
  FC_ADD_1 = 87,
  FC_SUB_1 = 88,
  FC_CALLBACK = 89,
  FC_CONSTANT_IID = 90,
  FC_END = 91,
  FC_PAD = 92,
  FC_EXPR = 93,
  FC_PARTIAL_IGNORE_PARAM = 94,
  FC_SPLIT_DEREFERENCE = 116,
  FC_SPLIT_DIV_2 = 117,
  FC_SPLIT_MULT_2 = 118,
  FC_SPLIT_ADD_1 = 119,
  FC_SPLIT_SUB_1 = 120,
  FC_SPLIT_CALLBACK = 121,
  FC_FORCED_BOGUS_STRUCT = 177,
  FC_TRANSMIT_AS_PTR = 178,
  FC_REPRESENT_AS_PTR = 179,
  FC_USER_MARSHAL = 180,
  FC_PIPE = 181,
  FC_SUPPLEMENT = 182,
  FC_RANGE = 183,
  FC_INT3264 = 184,
  FC_UINT3264 = 185,
  FC_CSARRAY = 186,
  FC_CS_TAG = 187,
  FC_STRUCTPADN = 188,
  FC_UNUSED7 = 189,
  FC_UNUSED8 = 190,
  FC_UNUSED9 = 191,
  FC_UNUSED10 = 192,
  FC_BUFFER_ALIGN = 193,
  FC_INT128 = 194,
  FC_UINT128 = 195,
  FC_FLOAT80 = 196,
  FC_FLOAT128 = 197,
  FC_END_OF_UNIVERSE = 198,
};

class wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_exception_policy>
{
}; /* size: 0x0008 */

class CHlprDialog
{
  /* 0x0000 */ long Padding_81[2];
  /* 0x0008 */ struct HINSTANCE__* m_hInstance;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IMap<unsigned int,Windows::System::User *>
{
}; /* size: 0x0008 */

typedef enum _NgcEnabledModifiers
{
  NgcEnabledModifier_ModifiersNotPresent = 0,
  NgcEnabledModifier_PostLogonProvisioningDisabled = 1,
  NgcEnabledModifier_CertificateRequiredForOnPremAuth = 2,
  NgcEnabledModifier_UseHelloCertsAsSmartCardCerts = 4,
  NgcEnabledModifier_UseCloudTrustForOnPremAuth = 8,
  NgcEnabledModifier_QueryDeploymentPolicy = 16,
} NgcEnabledModifiers, *PNgcEnabledModifiers;

struct IViewObject
{
}; /* size: 0x0008 */

enum wil::details_abi::CountSize
{
  None = 0,
  UnsignedShort = 1,
  UnsignedLong = 2,
};

class wistd::__compressed_pair<void *,wil::process_heap_deleter>
{
}; /* size: 0x0008 */

class wistd::unique_ptr<void,wil::process_heap_deleter>
{
  /* 0x0000 */ class wistd::__compressed_pair<void *,wil::process_heap_deleter> __ptr_;
}; /* size: 0x0008 */

struct wil::details_abi::heap_buffer
{
  /* 0x0000 */ long Padding_82[6];
  /* 0x0018 */ class wistd::unique_ptr<void,wil::process_heap_deleter> allocation;
}; /* size: 0x0020 */

class wil::details_abi::RawUsageIndex
{
  union
  {
    /* 0x0000 */ const unsigned short c_formatVersion;
    /* 0x0000 */ const unsigned short c_usageDataVersion;
  }; /* size: 0x0002 */
  /* 0x0002 */ const unsigned short c_indexSize;
  /* 0x0004 */ enum wil::details_abi::CountSize c_indexCountSize;
  /* 0x0005 */ char Padding_83;
  /* 0x0006 */ const unsigned short c_valueSize;
  /* 0x0008 */ enum wil::details_abi::CountSize c_valueCountSize;
  /* 0x0009 */ char Padding_84[7];
  /* 0x0010 */ const unsigned __int64 c_fixedValueSize;
  /* 0x0018 */ struct wil::details_abi::heap_buffer m_buffer;
  /* 0x0038 */ BOOL m_isDirty;
  /* 0x0039 */ BOOL m_sourceNewer;
  /* 0x003a */ BOOL m_allowGrowth;
}; /* size: 0x0040 */

struct wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> const >;

enum XWinRT::ComLock::Kind
{
  Kind_Srw = 0,
  Kind_StaReentrancy = 1,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>
{
}; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

enum tagCOWAIT_FLAGS
{
  COWAIT_DEFAULT = 0,
  COWAIT_WAITALL = 1,
  COWAIT_ALERTABLE = 2,
  COWAIT_INPUTAVAILABLE = 4,
  COWAIT_DISPATCH_CALLS = 8,
  COWAIT_DISPATCH_WINDOW_MESSAGES = 16,
};

struct IRpcChannelBuffer
{
}; /* size: 0x0008 */

class RegistryKey::ValueInformationClass<_KEY_VALUE_BASIC_INFORMATION>
{
  /* 0x0000 */ enum _KEY_VALUE_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

enum wil::FeatureStage
{
  AlwaysDisabled = 0,
  DisabledByDefault = 1,
  EnabledByDefault = 2,
  AlwaysEnabled = 3,
};

class std::chrono::duration<double,std::ratio<60,1> >
{
  /* 0x0000 */ double _MyRep;
}; /* size: 0x0008 */

class std::bad_alloc
{
}; /* size: 0x0018 */

struct wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

enum tagTYMED
{
  TYMED_HGLOBAL = 1,
  TYMED_FILE = 2,
  TYMED_ISTREAM = 4,
  TYMED_ISTORAGE = 8,
  TYMED_GDI = 16,
  TYMED_MFPICT = 32,
  TYMED_ENHMF = 64,
  TYMED_NULL = 0,
};

enum wil::FeatureChangeTime
{
  OnRead = 0,
  OnReload = 1,
  OnReboot = 3,
};

typedef class _TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_85[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>, *PTlgActivityBase<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType>,0,5>; /* size: 0x0028 */

struct utl::construct<CROTItem *>
{
}; /* size: 0x0001 */

struct FRAME_GetIDsOfNames
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ const struct _GUID& riid;
  /* 0x0010 */ wchar_t** rgszNames;
  /* 0x0018 */ unsigned int cNames;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned long lcid;
  /* 0x0024 */ char __pad4[4];
  /* 0x0028 */ long* rgDispId;
}; /* size: 0x0030 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

enum wil::UsageReportingMode
{
  Default = 0,
  SuppressPotential = 1,
  SuppressImplicit = 2,
};

class Microsoft::WRL::Wrappers::Mutex
{
}; /* size: 0x0010 */

class CSrvCallState;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

enum wil_VariantPayloadType
{
  wil_VariantPayloadType_None = 0,
  wil_VariantPayloadType_Fixed = 1,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *,1>
{
}; /* size: 0x0008 */

class wil::details::<lambda_0745084665628eea082e096e8407b136>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgress_impl<HSTRING__ *,unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<unsigned char>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>
{
}; /* size: 0x0008 */

enum DDE_DISPATCH_FUNC
{
  DDE_DISP_SENDONDATACHANGE = 1,
  DDE_DISP_OLECALLBACK = 2,
  DDE_DISP_SRVRWNDPROC = 3,
  DDE_DISP_DOCWNDPROC = 4,
};

enum wil_UsageReportingMode
{
  wil_UsageReportingMode_Default = 0,
  wil_UsageReportingMode_SuppressPotential = 1,
  wil_UsageReportingMode_SuppressImplicit = 2,
};

typedef enum _SYSTEM_NET_RATE_CONTROL_TYPE
{
  SystemNetRateControlSet = 0,
  SystemNetRateControlQuota = 1,
} SYSTEM_NET_RATE_CONTROL_TYPE, *PSYSTEM_NET_RATE_CONTROL_TYPE;

typedef struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER
{
  /* 0x0000 */ unsigned __int64 PolicyCookie;
  /* 0x0008 */ enum _SYSTEM_NET_RATE_CONTROL_TYPE Type;
  /* 0x000c */ long __PADDING__[1];
} SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER, *PSYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER; /* size: 0x0010 */

typedef struct _SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT
{
  /* 0x0000 */ struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER Header;
  /* 0x0010 */ unsigned __int64 OverQuotaHistory;
  /* 0x0018 */ unsigned long IntervalLength;
  /* 0x001c */ unsigned long NumberOfIntervals;
} SYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT, *PSYSTEM_NET_RATE_CONTROL_QUOTA_CONTEXT; /* size: 0x0020 */

struct tagPROPPAGEINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_86;
  /* 0x0008 */ wchar_t* pszTitle;
  /* 0x0010 */ struct tagSIZE size;
  /* 0x0018 */ wchar_t* pszDocString;
  /* 0x0020 */ wchar_t* pszHelpFile;
  /* 0x0028 */ unsigned long dwHelpContext;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _MINIDUMP_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ struct _EXCEPTION_POINTERS* ExceptionPointers;
  /* 0x000c */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION, *PMINIDUMP_EXCEPTION_INFORMATION; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>
{
}; /* size: 0x0008 */

enum wil_FeatureStage
{
  wil_FeatureStage_AlwaysDisabled = 0,
  wil_FeatureStage_DisabledByDefault = 1,
  wil_FeatureStage_EnabledByDefault = 2,
  wil_FeatureStage_AlwaysEnabled = 3,
};

struct std::ratio<1,1000>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

enum wil_FeatureStore
{
  wil_FeatureStore_Machine = 0,
  wil_FeatureStore_User = 1,
  wil_FeatureStore_All = 2,
};

struct Windows::Foundation::Collections::IMap_impl<unsigned int,HSTRING__ *>
{
}; /* size: 0x0008 */

struct tagRAWINPUTHEADER
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSize;
  /* 0x0008 */ void* hDevice;
  /* 0x0010 */ unsigned __int64 wParam;
}; /* size: 0x0018 */

struct tagRAWMOUSE
{
  /* 0x0000 */ unsigned short usFlags;
  /* 0x0002 */ char Padding_87[2];
  union
  {
    /* 0x0004 */ unsigned long ulButtons;
    struct
    {
      /* 0x0004 */ unsigned short usButtonFlags;
      /* 0x0006 */ unsigned short usButtonData;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ulRawButtons;
  /* 0x000c */ long lLastX;
  /* 0x0010 */ long lLastY;
  /* 0x0014 */ unsigned long ulExtraInformation;
}; /* size: 0x0018 */

struct tagRAWKEYBOARD
{
  /* 0x0000 */ unsigned short MakeCode;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ unsigned short VKey;
  /* 0x0008 */ unsigned int Message;
  /* 0x000c */ unsigned long ExtraInformation;
}; /* size: 0x0010 */

struct tagRAWHID
{
  /* 0x0000 */ unsigned long dwSizeHid;
  /* 0x0004 */ unsigned long dwCount;
  /* 0x0008 */ unsigned char bRawData[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

struct tagRAWINPUT
{
  /* 0x0000 */ struct tagRAWINPUTHEADER header;
  union
  {
    union
    {
      /* 0x0018 */ struct tagRAWMOUSE mouse;
      /* 0x0018 */ struct tagRAWKEYBOARD keyboard;
      /* 0x0018 */ struct tagRAWHID hid;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ data;
}; /* size: 0x0030 */

enum FEATURE_ENABLED_STATE
{
  FEATURE_ENABLED_STATE_DEFAULT = 0,
  FEATURE_ENABLED_STATE_DISABLED = 1,
  FEATURE_ENABLED_STATE_ENABLED = 2,
  FEATURE_ENABLED_STATE_HAS_NOTIFICATION = 128,
  FEATURE_ENABLED_STATE_IS_WEXP_CONFIGURATION = 64,
};

enum FEATURE_CHANGE_TIME
{
  FEATURE_CHANGE_TIME_READ = 0,
  FEATURE_CHANGE_TIME_MODULE_RELOAD = 1,
  FEATURE_CHANGE_TIME_SESSION = 2,
  FEATURE_CHANGE_TIME_REBOOT = 3,
  FEATURE_CHANGE_TIME_USER_FLAG = 128,
};

typedef struct _OLETARGETDEVICE
{
  /* 0x0000 */ unsigned short otdDeviceNameOffset;
  /* 0x0002 */ unsigned short otdDriverNameOffset;
  /* 0x0004 */ unsigned short otdPortNameOffset;
  /* 0x0006 */ unsigned short otdExtDevmodeOffset;
  /* 0x0008 */ unsigned short otdExtDevmodeSize;
  /* 0x000a */ unsigned short otdEnvironmentOffset;
  /* 0x000c */ unsigned short otdEnvironmentSize;
  /* 0x000e */ unsigned char otdData[1];
  /* 0x000f */ char __PADDING__[1];
} OLETARGETDEVICE, *POLETARGETDEVICE; /* size: 0x0010 */

enum wil_FeatureEnabledStateKind
{
  wil_FeatureEnabledStateKind_Service = 1,
  wil_FeatureEnabledStateKind_User = 2,
  wil_FeatureEnabledStateKind_Test = 3,
  wil_FeatureEnabledStateKind_Enrollment = 4,
};

class std::chrono::duration<double,std::ratio<1,1000> >
{
  /* 0x0000 */ double _MyRep;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0001 */

enum wil_details_FeatureTestStateKind
{
  wil_details_FeatureTestStateKind_EnabledState = 0,
  wil_details_FeatureTestStateKind_Variant = 1,
};

typedef enum _RTL_FEATURE_CONFIGURATION_TYPE
{
  RtlFeatureConfigurationBoot = 0,
  RtlFeatureConfigurationRuntime = 1,
  RtlFeatureConfigurationCount = 2,
} RTL_FEATURE_CONFIGURATION_TYPE, *PRTL_FEATURE_CONFIGURATION_TYPE;

class Windows::Storage::BulkAccess::FileInformation;

struct wistd::__compressed_pair_elem<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *,0,0>
{
  /* 0x0000 */ struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData* __value_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<__int64,1>
{
}; /* size: 0x0008 */

enum wil_FeatureVariantPayloadKind
{
  wil_FeatureVariantPayloadKind_None = 0,
  wil_FeatureVariantPayloadKind_Resident = 1,
  wil_FeatureVariantPayloadKind_External = 2,
};

enum wil_FeatureEnabledState
{
  wil_FeatureEnabledState_Default = 0,
  wil_FeatureEnabledState_Disabled = 1,
  wil_FeatureEnabledState_Enabled = 2,
};

class wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >
{
}; /* size: 0x0008 */

struct wistd::unique_ptr<unsigned short [0],wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >::_CheckArrayPointerConversion<unsigned short *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<unsigned int,1>
{
}; /* size: 0x0008 */

enum wil_FeatureChangeTime
{
  wil_FeatureChangeTime_OnRead = 0,
  wil_FeatureChangeTime_OnReload = 1,
  wil_FeatureChangeTime_OnSession = 2,
  wil_FeatureChangeTime_OnReboot = 3,
};

class wistd::__compressed_pair<char *,wistd::default_delete<char [0]> >
{
}; /* size: 0x0008 */

class LargeIntRegMultiply<__int64,int>
{
}; /* size: 0x0001 */

typedef union _RemotableHandle::__MIDL_IWinTypes_0009
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ long hRemote;
  }; /* size: 0x0004 */
} RemotableHandle::__MIDL_IWinTypes_0009, *PRemotableHandle::__MIDL_IWinTypes_0009; /* size: 0x0004 */

enum wil_details_ServiceReportingKind
{
  wil_details_ServiceReportingKind_UniqueUsage = 0,
  wil_details_ServiceReportingKind_UniqueOpportunity = 1,
  wil_details_ServiceReportingKind_DeviceUsage = 2,
  wil_details_ServiceReportingKind_DeviceOpportunity = 3,
  wil_details_ServiceReportingKind_PotentialUniqueUsage = 4,
  wil_details_ServiceReportingKind_PotentialUniqueOpportunity = 5,
  wil_details_ServiceReportingKind_PotentialDeviceUsage = 6,
  wil_details_ServiceReportingKind_PotentialDeviceOpportunity = 7,
  wil_details_ServiceReportingKind_EnabledTotalDuration = 8,
  wil_details_ServiceReportingKind_EnabledPausedDuration = 9,
  wil_details_ServiceReportingKind_DisabledTotalDuration = 10,
  wil_details_ServiceReportingKind_DisabledPausedDuration = 11,
  wil_details_ServiceReportingKind_CustomEnabledBase = 100,
  wil_details_ServiceReportingKind_CustomDisabledBase = 150,
  wil_details_ServiceReportingKind_Store = 254,
  wil_details_ServiceReportingKind_None = 255,
  wil_details_ServiceReportingKind_VariantDevicePotentialBase = 256,
  wil_details_ServiceReportingKind_VariantDeviceUsageBase = 320,
  wil_details_ServiceReportingKind_VariantUniquePotentialBase = 384,
  wil_details_ServiceReportingKind_VariantUniqueUsageBase = 448,
};

enum wil_VariantReportingKind
{
  wil_VariantReportingKind_None = 0,
  wil_VariantReportingKind_UniqueUsage = 1,
  wil_VariantReportingKind_DeviceUsage = 2,
};

struct std::_WChar_traits<unsigned short>
{
}; /* size: 0x0001 */

struct ICallInfo
{
}; /* size: 0x0008 */

enum wil_ReportingKind
{
  wil_ReportingKind_None = 0,
  wil_ReportingKind_UniqueUsage = 1,
  wil_ReportingKind_UniqueOpportunity = 2,
  wil_ReportingKind_DeviceUsage = 3,
  wil_ReportingKind_DeviceOpportunity = 4,
  wil_ReportingKind_TotalDuration = 5,
  wil_ReportingKind_PausedDuration = 6,
};

struct tagCInterfaceStubHeader
{
  /* 0x0000 */ const struct _GUID* piid;
  /* 0x0008 */ const struct _MIDL_SERVER_INFO_* pServerInfo;
  /* 0x0010 */ unsigned long DispatchTableCount;
  /* 0x0014 */ long Padding_88;
  /* 0x0018 */ void* const* pDispatchTable /* function */;
}; /* size: 0x0020 */

struct tagCInterfaceStubVtblTag
{
  /* 0x0000 */ struct tagCInterfaceStubHeader header;
  /* 0x0020 */ void* tag;
}; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_37
{
  value = 0,
} TAG_UNNAMED_37, *PTAG_UNNAMED_37;

class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_89[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

class wil::details::shared_object<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ unsigned __int64 DataSize;
} MINIDUMP_MEMORY_DESCRIPTOR64, *PMINIDUMP_MEMORY_DESCRIPTOR64; /* size: 0x0010 */

typedef struct _MINIDUMP_MEMORY64_LIST
{
  /* 0x0000 */ unsigned __int64 NumberOfMemoryRanges;
  /* 0x0008 */ unsigned __int64 BaseRva;
  /* 0x0010 */ struct _MINIDUMP_MEMORY_DESCRIPTOR64* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY64_LIST, *PMINIDUMP_MEMORY64_LIST; /* size: 0x0010 */

typedef struct _LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} LUID, *PLUID; /* size: 0x0008 */

typedef enum _TOKEN_TYPE
{
  TokenPrimary = 1,
  TokenImpersonation = 2,
} TOKEN_TYPE, *PTOKEN_TYPE;

typedef enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0,
  SecurityIdentification = 1,
  SecurityImpersonation = 2,
  SecurityDelegation = 3,
} SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

typedef struct _TOKEN_STATISTICS
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0018 */ enum _TOKEN_TYPE TokenType;
  /* 0x001c */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0020 */ unsigned long DynamicCharged;
  /* 0x0024 */ unsigned long DynamicAvailable;
  /* 0x0028 */ unsigned long GroupCount;
  /* 0x002c */ unsigned long PrivilegeCount;
  /* 0x0030 */ struct _LUID ModifiedId;
} TOKEN_STATISTICS, *PTOKEN_STATISTICS; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_38
{
  value = 1,
} TAG_UNNAMED_38, *PTAG_UNNAMED_38;

class wil::details::<lambda_1671716c99389d9118471eba8b7dd46b>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgress_impl<int,int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_39
{
  value = 1,
} TAG_UNNAMED_39, *PTAG_UNNAMED_39;

class std::chrono::duration<__int64,std::ratio<1,1000000> >
{
  /* 0x0000 */ __int64 _MyRep;
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wistd::default_delete<unsigned int [0]>,1,1>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<__int64,1>
{
}; /* size: 0x0008 */

enum POWER_STATE_DISABLED_TYPE
{
  PoDisabledStateSleeping1 = 0,
  PoDisabledStateSleeping2 = 1,
  PoDisabledStateSleeping3 = 2,
  PoDisabledStateSleeping4 = 3,
  PoDisabledStateSleeping0Idle = 4,
  PoDisabledStateReserved5 = 5,
  PoDisabledStateSleeping4Firmware = 6,
  PoDisabledStateMaximum = 7,
};

class std::_String_iterator<std::_String_val<std::_Simple_types<char> > >;

typedef struct _RTL_FEATURE_USAGE_SUBSCRIPTION_TARGET
{
  /* 0x0000 */ unsigned long Data[2];
} RTL_FEATURE_USAGE_SUBSCRIPTION_TARGET, *PRTL_FEATURE_USAGE_SUBSCRIPTION_TARGET; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IClipboardBrokerInternal>
{
  /* 0x0000 */ long Padding_90[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_40
{
  value = 1,
} TAG_UNNAMED_40, *PTAG_UNNAMED_40;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumCategoriesOfCatalogClass> const >;

typedef struct _HOT_PATCH_IMAGE_INFO
{
  /* 0x0000 */ unsigned long CheckSum;
  /* 0x0004 */ unsigned long TimeDateStamp;
} HOT_PATCH_IMAGE_INFO, *PHOT_PATCH_IMAGE_INFO; /* size: 0x0008 */

typedef struct _MANAGE_HOT_PATCH_UNLOAD_PATCH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _HOT_PATCH_IMAGE_INFO BaseInfo;
  union
  {
    union
    {
      /* 0x000c */ struct _SID Sid;
      /* 0x000c */ unsigned char Buffer[68];
    }; /* size: 0x0044 */
  } /* size: 0x0044 */ UserSid;
} MANAGE_HOT_PATCH_UNLOAD_PATCH, *PMANAGE_HOT_PATCH_UNLOAD_PATCH; /* size: 0x0050 */

typedef enum _TAG_UNNAMED_41
{
  value = 1,
} TAG_UNNAMED_41, *PTAG_UNNAMED_41;

struct Windows::Foundation::Collections::is_foundation_struct<unsigned char>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorChangedEventArgs
{
}; /* size: 0x0008 */

enum tagOLERENDER
{
  OLERENDER_NONE = 0,
  OLERENDER_DRAW = 1,
  OLERENDER_FORMAT = 2,
  OLERENDER_ASIS = 3,
};

typedef enum _SPACTION
{
  SPACTION_NONE = 0,
  SPACTION_MOVING = 1,
  SPACTION_COPYING = 2,
  SPACTION_RECYCLING = 3,
  SPACTION_APPLYINGATTRIBS = 4,
  SPACTION_DOWNLOADING = 5,
  SPACTION_SEARCHING_INTERNET = 6,
  SPACTION_CALCULATING = 7,
  SPACTION_UPLOADING = 8,
  SPACTION_SEARCHING_FILES = 9,
  SPACTION_DELETING = 10,
  SPACTION_RENAMING = 11,
  SPACTION_FORMATTING = 12,
  SPACTION_COPY_MOVING = 13,
} SPACTION, *PSPACTION;

typedef struct __vc_attributes::threadingAttribute
{
  /* 0x0000 */ enum __vc_attributes::threadingAttribute::threading_e value;
} _vc_attributes::threadingAttribute, *P_vc_attributes::threadingAttribute; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_42
{
  value = 1,
} TAG_UNNAMED_42, *PTAG_UNNAMED_42;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_43
{
  value = 0,
} TAG_UNNAMED_43, *PTAG_UNNAMED_43;

enum tagCoModuleType
{
  CO_MODULE_UNKNOWN = 0,
  CO_MODULE_32BIT = 1,
  CO_MODULE_64BIT = 2,
};

class Common::AutoHandleHKEY
{
}; /* size: 0x0008 */

typedef struct _LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY* Flink;
  /* 0x0008 */ struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; /* size: 0x0010 */

typedef struct _FLS_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* Slots[128];
} FLS_DATA, *PFLS_DATA; /* size: 0x0410 */

typedef struct _COMM_FAULT_OFFSETS
{
  /* 0x0000 */ short CommOffset;
  /* 0x0002 */ short FaultOffset;
} COMM_FAULT_OFFSETS, *PCOMM_FAULT_OFFSETS; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_44
{
  value = 1,
} TAG_UNNAMED_44, *PTAG_UNNAMED_44;

typedef enum _TAG_UNNAMED_45
{
  value = 0,
} TAG_UNNAMED_45, *PTAG_UNNAMED_45;

class wil::com_ptr_t<IUnknown,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IUnknown* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<double,1>
{
}; /* size: 0x0008 */

enum WINDOWCOMPOSITIONATTRIB
{
  WCA_UNDEFINED = 0,
  WCA_NCRENDERING_ENABLED = 1,
  WCA_NCRENDERING_POLICY = 2,
  WCA_TRANSITIONS_FORCEDISABLED = 3,
  WCA_ALLOW_NCPAINT = 4,
  WCA_CAPTION_BUTTON_BOUNDS = 5,
  WCA_NONCLIENT_RTL_LAYOUT = 6,
  WCA_FORCE_ICONIC_REPRESENTATION = 7,
  WCA_EXTENDED_FRAME_BOUNDS = 8,
  WCA_HAS_ICONIC_BITMAP = 9,
  WCA_THEME_ATTRIBUTES = 10,
  WCA_NCRENDERING_EXILED = 11,
  WCA_NCADORNMENTINFO = 12,
  WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
  WCA_VIDEO_OVERLAY_ACTIVE = 14,
  WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
  WCA_DISALLOW_PEEK = 16,
  WCA_CLOAK = 17,
  WCA_CLOAKED = 18,
  WCA_ACCENT_POLICY = 19,
  WCA_FREEZE_REPRESENTATION = 20,
  WCA_EVER_UNCLOAKED = 21,
  WCA_VISUAL_OWNER = 22,
  WCA_HOLOGRAPHIC = 23,
  WCA_EXCLUDED_FROM_DDA = 24,
  WCA_PASSIVEUPDATEMODE = 25,
  WCA_USEDARKMODECOLORS = 26,
  WCA_CORNER_STYLE = 27,
  WCA_PART_COLOR = 28,
  WCA_DISABLE_MOVESIZE_FEEDBACK = 29,
  WCA_SYSTEMBACKDROP_TYPE = 30,
  WCA_SET_TAGGED_WINDOW_RECT = 31,
  WCA_CLEAR_TAGGED_WINDOW_RECT = 32,
  WCA_LAST = 33,
};

enum EDGE_GESTURE_KIND
{
  EGK_TOUCH = 0,
  EGK_KEYBOARD = 1,
  EGK_MOUSE = 2,
};

class CClipDataObject
{
  /* 0x0000 */ long Padding_91[6];
  /* 0x0018 */ void* m_hOle1;
  /* 0x0020 */ struct IUnknown* m_pUnkOle1;
  /* 0x0028 */ unsigned long m_refs;
  /* 0x002c */ unsigned long m_Internalrefs;
  /* 0x0030 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0038 */ struct IDataObject* m_pDataObject;
  /* 0x0040 */ int m_fTriedToGetDataObject;
  /* 0x0044 */ BOOL m_fIsClientAppContainer;
  /* 0x0045 */ BOOL m_fIsEdpAccessDenied;
  /* 0x0046 */ char Padding_92[2];
  /* 0x0048 */ unsigned long m_dwPLMSourcePid;
}; /* size: 0x0050 */

typedef enum _TAG_UNNAMED_46
{
  value = 0,
} TAG_UNNAMED_46, *PTAG_UNNAMED_46;

typedef struct _IMAGE_RELOCATION
{
  union
  {
    /* 0x0000 */ unsigned long VirtualAddress;
    /* 0x0000 */ unsigned long RelocCount;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SymbolTableIndex;
  /* 0x0008 */ unsigned short Type;
} IMAGE_RELOCATION, *PIMAGE_RELOCATION; /* size: 0x000a */

class RoVariant::Accessor
{
  /* 0x0000 */ struct IInspectable* _pI;
  /* 0x0008 */ HRESULT _hrState;
}; /* size: 0x0010 */

struct tagTYPEDESC
{
  union
  {
    /* 0x0000 */ struct tagTYPEDESC* lptdesc;
    /* 0x0000 */ struct tagARRAYDESC* lpadesc;
    /* 0x0000 */ unsigned long hreftype;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagIDLDESC
{
  /* 0x0000 */ unsigned __int64 dwReserved;
  /* 0x0008 */ unsigned short wIDLFlags;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagPARAMDESC
{
  /* 0x0000 */ struct tagPARAMDESCEX* pparamdescex;
  /* 0x0008 */ unsigned short wParamFlags;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagELEMDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdesc;
  union
  {
    /* 0x0010 */ struct tagIDLDESC idldesc;
    /* 0x0010 */ struct tagPARAMDESC paramdesc;
  }; /* size: 0x0010 */
}; /* size: 0x0020 */

struct tagVARDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long Padding_93;
  /* 0x0008 */ wchar_t* lpstrSchema;
  union
  {
    /* 0x0010 */ unsigned long oInst;
    /* 0x0010 */ struct tagVARIANT* lpvarValue;
  }; /* size: 0x0008 */
  /* 0x0018 */ struct tagELEMDESC elemdescVar;
  /* 0x0038 */ unsigned short wVarFlags;
  /* 0x003a */ char Padding_94[2];
  /* 0x003c */ enum tagVARKIND varkind;
}; /* size: 0x0040 */

class RegistryKey::KeyInformationClass<_KEY_VIRTUALIZATION_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

typedef struct _tlgProviderMetadata_t
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ struct _GUID ProviderId;
  /* 0x0011 */ unsigned short RemainingSize;
} tlgProviderMetadata_t, *PtlgProviderMetadata_t; /* size: 0x0013 */

typedef enum _TAG_UNNAMED_47
{
  value = 1,
} TAG_UNNAMED_47, *PTAG_UNNAMED_47;

class wistd::__compressed_pair<_KEY_VALUE_FULL_INFORMATION *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_KEY_VALUE_FULL_INFORMATION *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> > __ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_48
{
  value = 1,
} TAG_UNNAMED_48, *PTAG_UNNAMED_48;

typedef enum _TAG_UNNAMED_49
{
  value = 0,
} TAG_UNNAMED_49, *PTAG_UNNAMED_49;

struct Windows::Foundation::IReference_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_50
{
  value = 1,
} TAG_UNNAMED_50, *PTAG_UNNAMED_50;

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *>;

enum WilFailureAction
{
  None = 0,
  RequestFailFast = 1,
  RequestSuppressTelemetry = 2,
  RequestDebugBreak = 3,
};

struct ISupportAllowLowerTrustActivation
{
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVUI_FUNCS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_95;
  /* 0x0008 */ struct _CRYPT_PROVUI_DATA* psUIData;
  /* 0x0010 */ void* pfnOnMoreInfoClick /* function */;
  /* 0x0018 */ void* pfnOnMoreInfoClickDefault /* function */;
  /* 0x0020 */ void* pfnOnAdvancedClick /* function */;
  /* 0x0028 */ void* pfnOnAdvancedClickDefault /* function */;
} CRYPT_PROVUI_FUNCS, *PCRYPT_PROVUI_FUNCS; /* size: 0x0030 */

struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<float>
{
}; /* size: 0x0008 */

enum wil::StagingControlActions
{
  Default = 0,
  Replace = 1,
};

typedef struct _BOOT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long FriendlyNameOffset;
  /* 0x0014 */ unsigned long BootFilePathOffset;
  /* 0x0018 */ unsigned long OsOptionsLength;
  /* 0x001c */ unsigned char OsOptions[1];
  /* 0x001d */ char __PADDING__[3];
} BOOT_ENTRY, *PBOOT_ENTRY; /* size: 0x0020 */

typedef struct _BOOT_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _BOOT_ENTRY BootEntry;
} BOOT_ENTRY_LIST, *PBOOT_ENTRY_LIST; /* size: 0x0024 */

enum SYSTEM_POWER_CONDITION
{
  PoAc = 0,
  PoDc = 1,
  PoHot = 2,
  PoConditionMaximum = 3,
};

struct SET_POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ enum SYSTEM_POWER_CONDITION PowerCondition;
  /* 0x0018 */ unsigned long DataLength;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

enum tagPROPPAGESTATUS
{
  PROPPAGESTATUS_DIRTY = 1,
  PROPPAGESTATUS_VALIDATE = 2,
  PROPPAGESTATUS_CLEAN = 4,
};

struct SMIPIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct MIPID mipid;
}; /* size: 0x0030 */

struct Windows::Storage::Search::IQueryOptions
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_51
{
  value = 1,
} TAG_UNNAMED_51, *PTAG_UNNAMED_51;

class std::chrono::duration<double,std::ratio<1,1000000000> >
{
  /* 0x0000 */ double _MyRep;
}; /* size: 0x0008 */

class CEnumHolder
{
  /* 0x0000 */ long Padding_96[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ unsigned short m_nCount;
  /* 0x000e */ char Padding_97[2];
  /* 0x0010 */ struct IEnumGeneric* m_pFirst;
  /* 0x0018 */ struct IEnumGeneric* m_pLast;
}; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_52
{
  _DEVICE_OR_RESOURCE_BUSY = 0,
  _INVALID_ARGUMENT = 1,
  _NO_SUCH_PROCESS = 2,
  _NOT_ENOUGH_MEMORY = 3,
  _OPERATION_NOT_PERMITTED = 4,
  _RESOURCE_DEADLOCK_WOULD_OCCUR = 5,
  _RESOURCE_UNAVAILABLE_TRY_AGAIN = 6,
} TAG_UNNAMED_52, *PTAG_UNNAMED_52;

class MultiplicationHelper<unsigned __int64,__int64,7>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_53
{
  value = 1,
} TAG_UNNAMED_53, *PTAG_UNNAMED_53;

class std::chrono::duration<double,std::ratio<1,1000000> >
{
  /* 0x0000 */ double _MyRep;
}; /* size: 0x0008 */

typedef struct _FILE_PIPE_EVENT_SELECT_BUFFER
{
  /* 0x0000 */ unsigned long EventTypes;
  /* 0x0004 */ long Padding_98;
  /* 0x0008 */ unsigned __int64 EventHandle;
} FILE_PIPE_EVENT_SELECT_BUFFER, *PFILE_PIPE_EVENT_SELECT_BUFFER; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessExtensionTbl> const >;

typedef struct __vc_attributes::controlAttribute
{
} _vc_attributes::controlAttribute, *P_vc_attributes::controlAttribute; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_54
{
  value = 0,
} TAG_UNNAMED_54, *PTAG_UNNAMED_54;

enum PLM_MODIFIED_PAGES_SIMULATION_TYPE
{
  PMPST_NONE = 0,
  PMPST_SYSTEMONLY = 1,
  PMPST_APPS = 2,
};

struct AsyncIAdviseSink2
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::CreatorMap
{
  /* 0x0000 */ void* factoryCreator /* function */;
  union
  {
    union
    {
      /* 0x0008 */ const struct _GUID* clsid;
      /* 0x0008 */ void* getRuntimeName /* function */;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ activationId;
  /* 0x0010 */ void* getTrustLevel /* function */;
  /* 0x0018 */ struct Microsoft::WRL::Details::FactoryCache* factoryCache;
  /* 0x0020 */ const wchar_t* serverName;
}; /* size: 0x0028 */

enum FILE_USAGE_TYPE
{
  FUT_PLAYING = 0,
  FUT_EDITING = 1,
  FUT_GENERIC = 2,
};

class std::__non_rtti_object
{
}; /* size: 0x0010 */

struct IMallocSpy
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_55
{
  value = 0,
} TAG_UNNAMED_55, *PTAG_UNNAMED_55;

struct RPC_ENDPOINT_TEMPLATEW
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_99;
  /* 0x0008 */ unsigned short* ProtSeq;
  /* 0x0010 */ unsigned short* Endpoint;
  /* 0x0018 */ void* SecurityDescriptor;
  /* 0x0020 */ unsigned long Backlog;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _MINIDUMP_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
  /* 0x0018 */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x004c */ struct _MINIDUMP_LOCATION_DESCRIPTOR CvRecord;
  /* 0x0054 */ struct _MINIDUMP_LOCATION_DESCRIPTOR MiscRecord;
  /* 0x005c */ unsigned __int64 Reserved0;
  /* 0x0064 */ unsigned __int64 Reserved1;
} MINIDUMP_MODULE, *PMINIDUMP_MODULE; /* size: 0x006c */

typedef enum _TAG_UNNAMED_56
{
  value = 0,
} TAG_UNNAMED_56, *PTAG_UNNAMED_56;

struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>
{
}; /* size: 0x0008 */

enum MONITOR_DPI_TYPE
{
  MDT_EFFECTIVE_DPI = 0,
  MDT_ANGULAR_DPI = 1,
  MDT_RAW_DPI = 2,
  MDT_DEFAULT = 0,
};

struct XSAVE_CPU_INFO
{
  /* 0x0000 */ unsigned char Processor;
  /* 0x0001 */ char Padding_100;
  /* 0x0002 */ unsigned short Family;
  /* 0x0004 */ unsigned short Model;
  /* 0x0006 */ unsigned short Stepping;
  /* 0x0008 */ unsigned short ExtendedModel;
  /* 0x000a */ char Padding_101[2];
  /* 0x000c */ unsigned long ExtendedFamily;
  /* 0x0010 */ unsigned __int64 MicrocodeVersion;
  /* 0x0018 */ unsigned long Reserved;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _XSAVE_SUPPORTED_CPU
{
  /* 0x0000 */ struct XSAVE_CPU_INFO CpuInfo;
  union
  {
    /* 0x0020 */ struct XSAVE_CPU_ERRATA* CpuErrata;
    /* 0x0020 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} XSAVE_SUPPORTED_CPU, *PXSAVE_SUPPORTED_CPU; /* size: 0x0028 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_57
{
  value = 0,
} TAG_UNNAMED_57, *PTAG_UNNAMED_57;

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
  /* 0x0000 */ long Padding_102[2];
  /* 0x0008 */ void* handle_;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_58
{
  value = 1,
} TAG_UNNAMED_58, *PTAG_UNNAMED_58;

enum WIN32_SUBSYSTEM_HOST_TYPE
{
  HOST_TYPE_UNDEFINED = 0,
  HOST_TYPE_CONTAINER_GUEST = 1,
  HOST_TYPE_CONTAINER_GUEST_STANDALONE = 2,
  HOST_TYPE_CONTAINER_GUEST_SANDBOX = 3,
};

struct Windows::Foundation::Collections::IVectorView_impl<short,1>
{
}; /* size: 0x0008 */

enum wil::details_abi::UsageIndexesLoadOptions
{
  None = 0,
  Clear = 1,
};

enum EDP_REQUEST_ACCESS_OVERRIDE
{
  EDP_REQUEST_ACCESS_OVERRIDE_NONE = 0,
  EDP_REQUEST_ACCESS_OVERRIDE_SHOW_BLOCK_DIALOG = 1,
  EDP_REQUEST_ACCESS_OVERRIDE_SHOW_OVERRIDE_DIALOG = 2,
  EDP_REQUEST_ACCESS_OVERRIDE_DISABLE_OVERRIDE_DIALOG = 3,
  EDP_REQUEST_ACCESS_OVERRIDE_NO_DIALOG = 4,
};

enum EDP_TELEMETRY_CALLER
{
  EDP_TELEMETRY_CALLER_COPYPASTE = 0,
  EDP_TELEMETRY_CALLER_SHARE = 1,
  EDP_TELEMETRY_CALLER_OLEDRAGDROP = 2,
  EDP_TELEMETRY_CALLER_WINRTDRAGDROP = 3,
  EDP_TELEMETRY_CALLER_WINRTSTATIC = 4,
  EDP_TELEMETRY_CALLER_OTHER = 5,
};

struct EDP_REQUEST_ACCESS_OPTIONS
{
  /* 0x0000 */ unsigned long processIdForClipboardConsentCache;
  /* 0x0004 */ long Padding_103;
  /* 0x0008 */ const wchar_t* dialogBlockedBodyText;
  /* 0x0010 */ const wchar_t* dialogOverrideBodyText;
  /* 0x0018 */ enum EDP_REQUEST_ACCESS_OVERRIDE overrideOption;
  /* 0x001c */ enum EDP_TELEMETRY_CALLER telemetryCaller;
  /* 0x0020 */ enum EDP_SOURCE_ENTERPRISEID_OPTION sourceEnterpriseIdOption;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node
{
  /* 0x0000 */ unsigned long threadId;
  /* 0x0004 */ long Padding_104;
  /* 0x0008 */ struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node* pNext;
  /* 0x0010 */ class wil::details::ThreadFailureCallbackHolder* value;
}; /* size: 0x0018 */

enum OBJFLAGS
{
  OBJFLAGS_LINK = 1,
  OBJFLAGS_DOCUMENT = 2,
  OBJFLAGS_CONVERT = 4,
  OBJFLAGS_CACHEEMPTY = 8,
};

typedef struct __vc_attributes::moduleAttribute
{
  /* 0x0000 */ enum __vc_attributes::moduleAttribute::type_e type;
  /* 0x0004 */ long Padding_105;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* version;
  /* 0x0018 */ const char* uuid;
  /* 0x0020 */ int lcid;
  /* 0x0024 */ BOOL control;
  /* 0x0025 */ char Padding_106[3];
  /* 0x0028 */ const char* helpstring;
  /* 0x0030 */ int helpstringcontext;
  /* 0x0034 */ long Padding_107;
  /* 0x0038 */ const char* helpstringdll;
  /* 0x0040 */ const char* helpfile;
  /* 0x0048 */ int helpcontext;
  /* 0x004c */ BOOL hidden;
  /* 0x004d */ BOOL restricted;
  /* 0x004e */ char Padding_108[2];
  /* 0x0050 */ const char* custom;
  /* 0x0058 */ const char* resource_name;
} _vc_attributes::moduleAttribute, *P_vc_attributes::moduleAttribute; /* size: 0x0060 */

class wil::details::unique_storage<wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct HWILFAILUREWATCH__* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_59
{
  value = 1,
} TAG_UNNAMED_59, *PTAG_UNNAMED_59;

class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
  /* 0x0000 */ unsigned long status_;
  /* 0x0004 */ long Padding_109;
  /* 0x0008 */ void* sync_;
}; /* size: 0x0010 */

struct IInternalUnknown
{
}; /* size: 0x0008 */

typedef struct _ITEMIDLIST_RELATIVE
{
} ITEMIDLIST_RELATIVE, *PITEMIDLIST_RELATIVE; /* size: 0x0003 */

typedef struct _WINTRUST_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_110;
  /* 0x0008 */ void* pPolicyCallbackData;
  /* 0x0010 */ void* pSIPClientData;
  /* 0x0018 */ unsigned long dwUIChoice;
  /* 0x001c */ unsigned long fdwRevocationChecks;
  /* 0x0020 */ unsigned long dwUnionChoice;
  /* 0x0024 */ long Padding_111;
  union
  {
    /* 0x0028 */ struct WINTRUST_FILE_INFO_* pFile;
    /* 0x0028 */ struct WINTRUST_CATALOG_INFO_* pCatalog;
    /* 0x0028 */ struct WINTRUST_BLOB_INFO_* pBlob;
    /* 0x0028 */ struct WINTRUST_SGNR_INFO_* pSgnr;
    /* 0x0028 */ struct WINTRUST_CERT_INFO_* pCert;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned long dwStateAction;
  /* 0x0034 */ long Padding_112;
  /* 0x0038 */ void* hWVTStateData;
  /* 0x0040 */ wchar_t* pwszURLReference;
  /* 0x0048 */ unsigned long dwProvFlags;
  /* 0x004c */ unsigned long dwUIContext;
  /* 0x0050 */ struct WINTRUST_SIGNATURE_SETTINGS_* pSignatureSettings;
} WINTRUST_DATA, *PWINTRUST_DATA; /* size: 0x0058 */

typedef enum _TAG_UNNAMED_60
{
  value = 1,
} TAG_UNNAMED_60, *PTAG_UNNAMED_60;

struct Windows::Foundation::Collections::IMap_impl<_GUID,IInspectable *>
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef enum _TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;

typedef class _TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_113[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>, *PTlgActivityBase<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_61
{
  value = 0,
} TAG_UNNAMED_61, *PTAG_UNNAMED_61;

struct WINTRUST_FILE_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_114;
  /* 0x0008 */ const wchar_t* pcwszFilePath;
  /* 0x0010 */ void* hFile;
  /* 0x0018 */ struct _GUID* pgKnownSubject;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_c3d007cad6bfd0fae208a2377afd7162>
{
}; /* size: 0x0001 */

typedef struct _RO_REGISTRATION_COOKIE
{
} RO_REGISTRATION_COOKIE, *PRO_REGISTRATION_COOKIE; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >
{
}; /* size: 0x0008 */

struct RTLWOW64_CROSSPROCESS_WORK_HEAD
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long First : 31; /* bit position: 0 */
        /* 0x0000 */ unsigned long HeavyFlush : 1; /* bit position: 31 */
      }; /* bitfield */
      /* 0x0004 */ unsigned long Sequence;
    }; /* size: 0x0008 */
    /* 0x0000 */ volatile __int64 Value;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

enum tagCONDITION_OPERATION
{
  COP_IMPLICIT = 0,
  COP_EQUAL = 1,
  COP_NOTEQUAL = 2,
  COP_LESSTHAN = 3,
  COP_GREATERTHAN = 4,
  COP_LESSTHANOREQUAL = 5,
  COP_GREATERTHANOREQUAL = 6,
  COP_VALUE_STARTSWITH = 7,
  COP_VALUE_ENDSWITH = 8,
  COP_VALUE_CONTAINS = 9,
  COP_VALUE_NOTCONTAINS = 10,
  COP_DOSWILDCARDS = 11,
  COP_WORD_EQUAL = 12,
  COP_WORD_STARTSWITH = 13,
  COP_APPLICATION_SPECIFIC = 14,
};

typedef enum _TAG_UNNAMED_62
{
  value = 1,
} TAG_UNNAMED_62, *PTAG_UNNAMED_62;

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumFORMATETC>
{
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>
{
}; /* size: 0x0008 */

typedef struct _PS_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 Attribute;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ unsigned __int64 Value;
    /* 0x0010 */ void* ValuePtr;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned __int64* ReturnLength;
} PS_ATTRIBUTE, *PPS_ATTRIBUTE; /* size: 0x0020 */

typedef struct _PS_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned __int64 TotalLength;
  /* 0x0008 */ struct _PS_ATTRIBUTE Attributes[1];
} PS_ATTRIBUTE_LIST, *PPS_ATTRIBUTE_LIST; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_63
{
  value = 1,
} TAG_UNNAMED_63, *PTAG_UNNAMED_63;

struct std::_Atomic_padded<unsigned long>
{
  /* 0x0000 */ unsigned long _Value;
}; /* size: 0x0004 */

enum PLM_APPLICATION_STATE
{
  PAS_UNKNOWN = 0,
  PAS_ACTIVE = 1,
  PAS_SUSPENDING = 2,
  PAS_SUSPENDED = 3,
  PAS_TERMINATED_BY_SYSTEM = 4,
  PAS_TERMINATED_BY_USER = 5,
  PAS_MAX = 6,
};

struct Windows::Foundation::IAsyncActionWithProgress<unsigned __int64>
{
}; /* size: 0x0008 */

struct WINTRUST_CATALOG_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwCatalogVersion;
  /* 0x0008 */ const wchar_t* pcwszCatalogFilePath;
  /* 0x0010 */ const wchar_t* pcwszMemberTag;
  /* 0x0018 */ const wchar_t* pcwszMemberFilePath;
  /* 0x0020 */ void* hMemberFile;
  /* 0x0028 */ unsigned char* pbCalculatedFileHash;
  /* 0x0030 */ unsigned long cbCalculatedFileHash;
  /* 0x0034 */ long Padding_115;
  /* 0x0038 */ const struct _CTL_CONTEXT* pcCatalogContext;
  /* 0x0040 */ void* hCatAdmin;
}; /* size: 0x0048 */

class wil::details::<lambda_b551798b23ad7d5f9dd1d1c1d17d5fc9>
{
}; /* size: 0x0001 */

typedef struct _ACTIVATION_CONTEXT_STACK
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* ActiveFrame;
  /* 0x0008 */ struct _LIST_ENTRY FrameListCache;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long NextCookieSequenceNumber;
  /* 0x0020 */ unsigned long StackId;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_STACK, *PACTIVATION_CONTEXT_STACK; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_64
{
  value = 0,
} TAG_UNNAMED_64, *PTAG_UNNAMED_64;

struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(void)>
{
}; /* size: 0x0001 */

struct tagMDICREATESTRUCTW
{
  /* 0x0000 */ const wchar_t* szClass;
  /* 0x0008 */ const wchar_t* szTitle;
  /* 0x0010 */ void* hOwner;
  /* 0x0018 */ int x;
  /* 0x001c */ int y;
  /* 0x0020 */ int cx;
  /* 0x0024 */ int cy;
  /* 0x0028 */ unsigned long style;
  /* 0x002c */ long Padding_116;
  /* 0x0030 */ __int64 lParam;
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_65
{
  value = 0,
} TAG_UNNAMED_65, *PTAG_UNNAMED_65;

class AdHocCallFrame<IElementBehavior,<lambda_c9f70ef396276824209f5bb13f61de84> >
{
  /* 0x0000 */ long Padding_117[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Notify::__l2::<lambda_c9f70ef396276824209f5bb13f61de84>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _CTL_CONTEXT
{
  /* 0x0000 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0004 */ long Padding_118;
  /* 0x0008 */ unsigned char* pbCtlEncoded;
  /* 0x0010 */ unsigned long cbCtlEncoded;
  /* 0x0014 */ long Padding_119;
  /* 0x0018 */ struct _CTL_INFO* pCtlInfo;
  /* 0x0020 */ void* hCertStore;
  /* 0x0028 */ void* hCryptMsg;
  /* 0x0030 */ unsigned char* pbCtlContent;
  /* 0x0038 */ unsigned long cbCtlContent;
  /* 0x003c */ long __PADDING__[1];
} CTL_CONTEXT, *PCTL_CONTEXT; /* size: 0x0040 */

struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>
{
}; /* size: 0x0008 */

struct IDragDropContainerProxy
{
}; /* size: 0x0008 */

enum std::float_round_style
{
  round_indeterminate = -1,
  round_toward_zero = 0,
  round_to_nearest = 1,
  round_toward_infinity = 2,
  round_toward_neg_infinity = 3,
};

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>
{
}; /* size: 0x0008 */

struct IEnumCallback
{
}; /* size: 0x0008 */

enum Microsoft::WRL::CancelTransitionPolicy
{
  RemainCanceled = 0,
  TransitionFromCanceled = 1,
};

class CBrokeredClipDataObject::GetData::__l17::<lambda_69a057c63c786c100f3ea19039bf15ac>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ struct tagFORMATETC*& pformatetcIn;
  /* 0x0010 */ struct tagSTGMEDIUM*& pmedium;
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_66
{
  value = 1,
} TAG_UNNAMED_66, *PTAG_UNNAMED_66;

struct std::_UInt_is_zero
{
  /* 0x0000 */ const unsigned int& _UInt;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_67
{
  value = 0,
} TAG_UNNAMED_67, *PTAG_UNNAMED_67;

struct Windows::Storage::IStorageStreamTransaction
{
}; /* size: 0x0008 */

typedef enum _SHELLSETWINDOWPOS_OPTIONS
{
  SSWP_OPTION_DEFAULT = 0,
  SSWP_OPTION_NOACTIVATE = 1,
  SSWP_OPTION_NOZORDER = 2,
  SSWP_OPTION_MONITOR_FROM_POSITION = 4,
  SSWP_OPTION_EXPLICIT_RCNORMAL = 8,
  SSWP_OPTION_FOREGROUND = 16,
  SSWP_OPTION_NONOTIFY = 32,
} SHELLSETWINDOWPOS_OPTIONS, *PSHELLSETWINDOWPOS_OPTIONS;

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >
{
}; /* size: 0x0008 */

struct tagGCP_RESULTSW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_120;
  /* 0x0008 */ wchar_t* lpOutString;
  /* 0x0010 */ unsigned int* lpOrder;
  /* 0x0018 */ int* lpDx;
  /* 0x0020 */ int* lpCaretPos;
  /* 0x0028 */ char* lpClass;
  /* 0x0030 */ wchar_t* lpGlyphs;
  /* 0x0038 */ unsigned int nGlyphs;
  /* 0x003c */ int nMaxFit;
}; /* size: 0x0040 */

typedef enum _TAG_UNNAMED_68
{
  value = 0,
} TAG_UNNAMED_68, *PTAG_UNNAMED_68;

typedef enum _TAG_UNNAMED_69
{
  value = 1,
} TAG_UNNAMED_69, *PTAG_UNNAMED_69;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk>* ptr_;
}; /* size: 0x0008 */

class wil::details::<lambda_ec87cf16deae6897cc893140db9650f7>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>
{
}; /* size: 0x0008 */

struct GetTypeValueImpl<long,unsigned short const *,unsigned short *,long>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_70
{
  value = 0,
} TAG_UNNAMED_70, *PTAG_UNNAMED_70;

enum KF_CATEGORY
{
  KF_CATEGORY_VIRTUAL = 1,
  KF_CATEGORY_FIXED = 2,
  KF_CATEGORY_COMMON = 3,
  KF_CATEGORY_PERUSER = 4,
};

typedef struct _CTL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ long Padding_121;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CTL_ENTRY, *PCTL_ENTRY; /* size: 0x0020 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,float>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_71
{
  value = 0,
} TAG_UNNAMED_71, *PTAG_UNNAMED_71;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_72
{
  value = 0,
} TAG_UNNAMED_72, *PTAG_UNNAMED_72;

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_73
{
  value = 0,
} TAG_UNNAMED_73, *PTAG_UNNAMED_73;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

enum tagOLEGETMONIKER
{
  OLEGETMONIKER_ONLYIFTHERE = 1,
  OLEGETMONIKER_FORCEASSIGN = 2,
  OLEGETMONIKER_UNASSIGN = 3,
  OLEGETMONIKER_TEMPFORUSER = 4,
};

struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::VideoProperties *>
{
}; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_122;
  /* 0x0008 */ const char* FrameName;
} TEB_ACTIVE_FRAME_CONTEXT, *PTEB_ACTIVE_FRAME_CONTEXT; /* size: 0x0010 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
  /* 0x0010 */ const char* SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX, *PTEB_ACTIVE_FRAME_CONTEXT_EX; /* size: 0x0018 */

class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >
{
  /* 0x0000 */ wchar_t* m_ptr;
}; /* size: 0x0008 */

struct wistd::__make_signed<unsigned int,1>
{
}; /* size: 0x0001 */

enum Windows::System::UserAuthenticationStatus
{
  UserAuthenticationStatus_Unauthenticated = 0,
  UserAuthenticationStatus_LocallyAuthenticated = 1,
  UserAuthenticationStatus_RemotelyAuthenticated = 2,
};

class AdHocCallFrame<IOleInPlaceObjectWindowless,<lambda_cebf49c479c4b51a7dc8538f3542eaf8> >
{
  /* 0x0000 */ long Padding_123[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>::OnWindowMessage::__l2::<lambda_cebf49c479c4b51a7dc8538f3542eaf8>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

enum SYNCMGR_PROGRESS_STATUS
{
  SYNCMGR_PS_UPDATING = 1,
  SYNCMGR_PS_UPDATING_INDETERMINATE = 2,
  SYNCMGR_PS_SUCCEEDED = 3,
  SYNCMGR_PS_FAILED = 4,
  SYNCMGR_PS_CANCELED = 5,
  SYNCMGR_PS_DISCONNECTED = 6,
  SYNCMGR_PS_MAX = 6,
};

typedef struct _PO_WAKE_SOURCE_HISTORY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_HISTORY, *PPO_WAKE_SOURCE_HISTORY; /* size: 0x0008 */

struct tagLOGFONTA
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ char lfFaceName[32];
}; /* size: 0x003c */

struct tagNONCLIENTMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTA lfCaptionFont;
  /* 0x0054 */ int iSmCaptionWidth;
  /* 0x0058 */ int iSmCaptionHeight;
  /* 0x005c */ struct tagLOGFONTA lfSmCaptionFont;
  /* 0x0098 */ int iMenuWidth;
  /* 0x009c */ int iMenuHeight;
  /* 0x00a0 */ struct tagLOGFONTA lfMenuFont;
  /* 0x00dc */ struct tagLOGFONTA lfStatusFont;
  /* 0x0118 */ struct tagLOGFONTA lfMessageFont;
  /* 0x0154 */ int iPaddedBorderWidth;
}; /* size: 0x0158 */

typedef enum _TAG_UNNAMED_74
{
  value = 1,
} TAG_UNNAMED_74, *PTAG_UNNAMED_74;

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *>;

struct tagDUALSTRINGARRAY
{
  /* 0x0000 */ unsigned short wNumEntries;
  /* 0x0002 */ unsigned short wSecurityOffset;
  /* 0x0004 */ unsigned short aStringArray[1];
}; /* size: 0x0006 */

typedef enum _TAG_UNNAMED_75
{
  value = 1,
} TAG_UNNAMED_75, *PTAG_UNNAMED_75;

struct HKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct WINTRUST_BLOB_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ long Padding_124;
  /* 0x0018 */ const wchar_t* pcwszDisplayName;
  /* 0x0020 */ unsigned long cbMemObject;
  /* 0x0024 */ long Padding_125;
  /* 0x0028 */ unsigned char* pbMemObject;
  /* 0x0030 */ unsigned long cbMemSignedMsg;
  /* 0x0034 */ long Padding_126;
  /* 0x0038 */ unsigned char* pbMemSignedMsg;
}; /* size: 0x0040 */

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_76
{
  value = 0,
} TAG_UNNAMED_76, *PTAG_UNNAMED_76;

struct Windows::Foundation::Collections::is_foundation_struct<IInspectable *>
{
}; /* size: 0x0001 */

enum tagOLEWHICHMK
{
  OLEWHICHMK_CONTAINER = 1,
  OLEWHICHMK_OBJREL = 2,
  OLEWHICHMK_OBJFULL = 3,
};

typedef struct _IMAGEHLP_GET_TYPE_INFO_PARAMS
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NumIds;
  /* 0x000c */ long Padding_127;
  /* 0x0010 */ unsigned long* TypeIds;
  /* 0x0018 */ unsigned __int64 TagFilter;
  /* 0x0020 */ unsigned long NumReqs;
  /* 0x0024 */ long Padding_128;
  /* 0x0028 */ enum _IMAGEHLP_SYMBOL_TYPE_INFO* ReqKinds;
  /* 0x0030 */ unsigned __int64* ReqOffsets;
  /* 0x0038 */ unsigned long* ReqSizes;
  /* 0x0040 */ unsigned __int64 ReqStride;
  /* 0x0048 */ unsigned __int64 BufferSize;
  /* 0x0050 */ void* Buffer;
  /* 0x0058 */ unsigned long EntriesMatched;
  /* 0x005c */ unsigned long EntriesFilled;
  /* 0x0060 */ unsigned __int64 TagsFound;
  /* 0x0068 */ unsigned __int64 AllReqsValid;
  /* 0x0070 */ unsigned long NumReqsValid;
  /* 0x0074 */ long Padding_129;
  /* 0x0078 */ unsigned __int64* ReqsValid;
} IMAGEHLP_GET_TYPE_INFO_PARAMS, *PIMAGEHLP_GET_TYPE_INFO_PARAMS; /* size: 0x0080 */

class MapEnumToSQMData<enum Ole32SQMFlags>
{
}; /* size: 0x0001 */

struct LIST_ENTRY64
{
  /* 0x0000 */ unsigned __int64 Flink;
  /* 0x0008 */ unsigned __int64 Blink;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_77
{
  value = 1,
} TAG_UNNAMED_77, *PTAG_UNNAMED_77;

struct wistd::__or_<>
{
}; /* size: 0x0001 */

enum ACTIVATION_OBJECT_CONFIG_BEHAVIOR
{
  AOCB_DEFAULT = 0,
  AOCB_SETFOREGROUNDWITHINAPPPROCESS = 1,
};

typedef struct _wfinddata32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ wchar_t name[260];
} wfinddata32_t, *Pwfinddata32_t; /* size: 0x021c */

typedef struct __vc_attributes::atl::db_accessorAttribute
{
  /* 0x0000 */ int id;
  /* 0x0004 */ BOOL auto_;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::atl::db_accessorAttribute, *P_vc_attributes::atl::db_accessorAttribute; /* size: 0x0008 */

struct WINTRUST_SGNR_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_130;
  /* 0x0008 */ const wchar_t* pcwszDisplayName;
  /* 0x0010 */ struct _CMSG_SIGNER_INFO* psSignerInfo;
  /* 0x0018 */ unsigned long chStores;
  /* 0x001c */ long Padding_131;
  /* 0x0020 */ void** pahStores;
}; /* size: 0x0028 */

typedef struct _LAST_EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ long Padding_132[2];
  /* 0x00a0 */ struct _CONTEXT ContextRecord;
  /* 0x0570 */ unsigned long ControlPc;
  /* 0x0574 */ enum _EXCEPTION_DISPOSITION Disposition;
  /* 0x0578 */ unsigned long HandlerData[5];
  /* 0x058c */ long __PADDING__[1];
} LAST_EXCEPTION_LOG, *PLAST_EXCEPTION_LOG; /* size: 0x0590 */

class CMapKeyToValue
{
  /* 0x0000 */ unsigned int m_cbValue;
  /* 0x0004 */ unsigned int m_cbKey;
  /* 0x0008 */ unsigned int m_cbKeyInAssoc;
  /* 0x000c */ long Padding_133;
  /* 0x0010 */ struct CMapKeyToValue::CAssoc** m_pHashTable;
  /* 0x0018 */ unsigned int m_nHashTableSize;
  /* 0x001c */ long Padding_134;
  /* 0x0020 */ void* m_lpfnHashKey /* function */;
  /* 0x0028 */ int m_nCount;
  /* 0x002c */ long Padding_135;
  /* 0x0030 */ struct CMapKeyToValue::CAssoc* m_pFreeList;
  /* 0x0038 */ struct CPlex* m_pBlocks;
  /* 0x0040 */ int m_nBlockSize;
}; /* size: 0x0048 */

class CMapUintPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

class XWinRT::AutoValue<HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >
{
  /* 0x0000 */ struct HSTRING__* _value;
}; /* size: 0x0008 */

class XWinRT::AutoValue<IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >
{
  /* 0x0000 */ struct IInspectable* _value;
}; /* size: 0x0008 */

class Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0>
{
  /* 0x0000 */ long Padding_136[8];
  /* 0x0020 */ class XWinRT::AutoValue<HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > _sKey;
  /* 0x0028 */ class XWinRT::AutoValue<IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> > _sValue;
}; /* size: 0x0030 */

enum Windows::Foundation::Diagnostics::CausalitySource
{
  CausalitySource_Application = 0,
  CausalitySource_Library = 1,
  CausalitySource_System = 2,
};

struct Windows::Foundation::Collections::IMap<__int64,double>
{
}; /* size: 0x0008 */

class CPaccelEnum
{
  /* 0x0000 */ struct tagACCEL* _lpaccel;
  /* 0x0008 */ struct tagACCEL* _lpaccelBase;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_78
{
  value = 1,
} TAG_UNNAMED_78, *PTAG_UNNAMED_78;

struct Windows::Foundation::Collections::IMapView_impl<__int64,HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_79
{
  value = 1,
} TAG_UNNAMED_79, *PTAG_UNNAMED_79;

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef struct _CRYPT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long cAttr;
  /* 0x0004 */ long Padding_137;
  /* 0x0008 */ struct _CRYPT_ATTRIBUTE* rgAttr;
} CRYPT_ATTRIBUTES, *PCRYPT_ATTRIBUTES; /* size: 0x0010 */

typedef struct _CMSG_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_138;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0040 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0058 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0068 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0078 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_SIGNER_INFO, *PCMSG_SIGNER_INFO; /* size: 0x0088 */

typedef union _ULARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ULARGE_INTEGER, *PULARGE_INTEGER; /* size: 0x0008 */

struct tagBSTRBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_139;
  /* 0x0008 */ unsigned char* pData;
}; /* size: 0x0010 */

struct tagBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_140;
  /* 0x0008 */ unsigned char* pBlobData;
}; /* size: 0x0010 */

struct tagCAC
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_141;
  /* 0x0008 */ char* pElems;
}; /* size: 0x0010 */

struct tagCAUB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_142;
  /* 0x0008 */ unsigned char* pElems;
}; /* size: 0x0010 */

struct tagCAI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_143;
  /* 0x0008 */ short* pElems;
}; /* size: 0x0010 */

struct tagCAUI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_144;
  /* 0x0008 */ unsigned short* pElems;
}; /* size: 0x0010 */

struct tagCAL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_145;
  /* 0x0008 */ long* pElems;
}; /* size: 0x0010 */

struct tagCAH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_146;
  /* 0x0008 */ union _LARGE_INTEGER* pElems;
}; /* size: 0x0010 */

struct tagCAUH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_147;
  /* 0x0008 */ union _ULARGE_INTEGER* pElems;
}; /* size: 0x0010 */

struct tagCAFLT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_148;
  /* 0x0008 */ float* pElems;
}; /* size: 0x0010 */

struct tagCABOOL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_149;
  /* 0x0008 */ short* pElems;
}; /* size: 0x0010 */

struct tagCASCODE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_150;
  /* 0x0008 */ long* pElems;
}; /* size: 0x0010 */

struct tagCACY
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_151;
  /* 0x0008 */ union tagCY* pElems;
}; /* size: 0x0010 */

struct tagCADATE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_152;
  /* 0x0008 */ double* pElems;
}; /* size: 0x0010 */

struct tagCAFILETIME
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_153;
  /* 0x0008 */ struct _FILETIME* pElems;
}; /* size: 0x0010 */

struct tagCACLSID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_154;
  /* 0x0008 */ struct _GUID* pElems;
}; /* size: 0x0010 */

struct tagCACLIPDATA
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_155;
  /* 0x0008 */ struct tagCLIPDATA* pElems;
}; /* size: 0x0010 */

struct tagCABSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_156;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

struct tagCABSTRBLOB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_157;
  /* 0x0008 */ struct tagBSTRBLOB* pElems;
}; /* size: 0x0010 */

struct tagCALPSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_158;
  /* 0x0008 */ char** pElems;
}; /* size: 0x0010 */

struct tagCALPWSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_159;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

struct tagCAPROPVARIANT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_160;
  /* 0x0008 */ struct tagPROPVARIANT* pElems;
}; /* size: 0x0010 */

struct tagDEC
{
  /* 0x0000 */ unsigned short wReserved;
  union
  {
    struct
    {
      /* 0x0002 */ unsigned char scale;
      /* 0x0003 */ unsigned char sign;
    }; /* size: 0x0002 */
    /* 0x0002 */ unsigned short signscale;
  }; /* size: 0x0002 */
  /* 0x0004 */ unsigned long Hi32;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Lo32;
      /* 0x000c */ unsigned long Mid32;
    }; /* size: 0x0008 */
    /* 0x0008 */ unsigned __int64 Lo64;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct tagPROPVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ union _LARGE_INTEGER hVal;
        /* 0x0008 */ union _ULARGE_INTEGER uhVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ short __OBSOLETE__VARIANT_BOOL;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ struct _FILETIME filetime;
        /* 0x0008 */ struct _GUID* puuid;
        /* 0x0008 */ struct tagCLIPDATA* pclipdata;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct tagBSTRBLOB bstrblobVal;
        /* 0x0008 */ struct tagBLOB blob;
        /* 0x0008 */ char* pszVal;
        /* 0x0008 */ wchar_t* pwszVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct IStream* pStream;
        /* 0x0008 */ struct IStorage* pStorage;
        /* 0x0008 */ struct tagVersionedStream* pVersionedStream;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ struct tagCAC cac;
        /* 0x0008 */ struct tagCAUB caub;
        /* 0x0008 */ struct tagCAI cai;
        /* 0x0008 */ struct tagCAUI caui;
        /* 0x0008 */ struct tagCAL cal;
        /* 0x0008 */ struct tagCAUL caul;
        /* 0x0008 */ struct tagCAH cah;
        /* 0x0008 */ struct tagCAUH cauh;
        /* 0x0008 */ struct tagCAFLT caflt;
        /* 0x0008 */ struct tagCADBL cadbl;
        /* 0x0008 */ struct tagCABOOL cabool;
        /* 0x0008 */ struct tagCASCODE cascode;
        /* 0x0008 */ struct tagCACY cacy;
        /* 0x0008 */ struct tagCADATE cadate;
        /* 0x0008 */ struct tagCAFILETIME cafiletime;
        /* 0x0008 */ struct tagCACLSID cauuid;
        /* 0x0008 */ struct tagCACLIPDATA caclipdata;
        /* 0x0008 */ struct tagCABSTR cabstr;
        /* 0x0008 */ struct tagCABSTRBLOB cabstrblob;
        /* 0x0008 */ struct tagCALPSTR calpstr;
        /* 0x0008 */ struct tagCALPWSTR calpwstr;
        /* 0x0008 */ struct tagCAPROPVARIANT capropvar;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagPROPVARIANT* pvarVal;
      }; /* size: 0x0010 */
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct tagDEC decVal;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

enum SPATIAL_INPUT_ACTIVATION_POLICY
{
  SIAP_ACTIVATE = 0,
  SIAP_NOACTIVATE = 1,
  SIAP_ACTIVATEIFAPPNOTINFOREGROUND = 2,
  SIAP_EAT = 4,
};

struct tagSTDOBJREF
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long cPublicRefs;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
  /* 0x0018 */ struct _GUID ipid;
}; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_80
{
  value = 1,
} TAG_UNNAMED_80, *PTAG_UNNAMED_80;

enum RTL_DISK_SPEED_POLICY
{
  RtlDiskSpeedPolicyNormal = 10,
  RtlDiskSpeedPolicyFast = 20,
};

typedef struct _RTL_DISK_SPEED_INFO
{
  /* 0x0000 */ enum RTL_DISK_SPEED_POLICY Policy;
} RTL_DISK_SPEED_INFO, *PRTL_DISK_SPEED_INFO; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator> >;

typedef enum _TAG_UNNAMED_81
{
  value = 0,
} TAG_UNNAMED_81, *PTAG_UNNAMED_81;

struct WppPointerToUshort
{
  /* 0x0000 */ unsigned short m_val;
}; /* size: 0x0002 */

enum tagOLEMISC
{
  OLEMISC_RECOMPOSEONRESIZE = 1,
  OLEMISC_ONLYICONIC = 2,
  OLEMISC_INSERTNOTREPLACE = 4,
  OLEMISC_STATIC = 8,
  OLEMISC_CANTLINKINSIDE = 16,
  OLEMISC_CANLINKBYOLE1 = 32,
  OLEMISC_ISLINKOBJECT = 64,
  OLEMISC_INSIDEOUT = 128,
  OLEMISC_ACTIVATEWHENVISIBLE = 256,
  OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512,
  OLEMISC_INVISIBLEATRUNTIME = 1024,
  OLEMISC_ALWAYSRUN = 2048,
  OLEMISC_ACTSLIKEBUTTON = 4096,
  OLEMISC_ACTSLIKELABEL = 8192,
  OLEMISC_NOUIACTIVATE = 16384,
  OLEMISC_ALIGNABLE = 0xffff8000,
  OLEMISC_SIMPLEFRAME = 0x10000,
  OLEMISC_SETCLIENTSITEFIRST = 0x20000,
  OLEMISC_IMEMODE = 0x40000,
  OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
  OLEMISC_WANTSTOMENUMERGE = 0x100000,
  OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,
};

union CMapKeyToValue::CKeyWrap
{
  union
  {
    /* 0x0000 */ unsigned char rgbKey[12];
    struct
    {
      /* 0x0000 */ void* pKey;
      /* 0x0008 */ unsigned int cbKey;
    }; /* size: 0x000c */
  }; /* size: 0x000c */
}; /* size: 0x0010 */

struct CMapKeyToValue::CAssoc
{
  /* 0x0000 */ struct CMapKeyToValue::CAssoc* pNext;
  /* 0x0008 */ unsigned int nHashValue;
  /* 0x000c */ long Padding_161;
  /* 0x0010 */ union CMapKeyToValue::CKeyWrap key;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IMapView_impl<_GUID,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 MinimumAddress;
  /* 0x0008 */ unsigned __int64 MaximumAddress;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned int EntryCount;
  /* 0x001c */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_DESCRIPTOR, *PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR; /* size: 0x0020 */

enum FLYOUTMENU_SETTING
{
  FMS_ShowSleepOption = 0,
  FMS_ShowHibernateOption = 1,
  FMS_ShowLockOption = 2,
};

typedef enum _TAG_UNNAMED_82
{
  value = 1,
} TAG_UNNAMED_82, *PTAG_UNNAMED_82;

class std::logic_error
{
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_83
{
  value = 0,
} TAG_UNNAMED_83, *PTAG_UNNAMED_83;

class stdext::bad_alloc
{
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_84
{
  value = 1,
} TAG_UNNAMED_84, *PTAG_UNNAMED_84;

class wil::details::<lambda_c63cf361656f65a60020f4ec809d6ca1>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileReference> const >;

struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0008 */

class IsInt<unsigned int>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_85
{
  value = 0,
} TAG_UNNAMED_85, *PTAG_UNNAMED_85;

typedef enum _TAG_UNNAMED_86
{
  value = 1,
} TAG_UNNAMED_86, *PTAG_UNNAMED_86;

enum tagCLIPWINDOWFLAGS
{
  CLIP_QUERY = 0,
  CLIP_CREATEIFNOTTHERE = 1,
};

struct IRunAsClipboard
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::atl::request_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* sdl;
} _vc_attributes::atl::request_handlerAttribute, *P_vc_attributes::atl::request_handlerAttribute; /* size: 0x0010 */

enum TASK_FLOW_ID
{
  TFID_ADD_USER = 0,
  TFID_CONNECT_LOCAL_USER = 1,
  TFID_CONNECT_DOMAIN_USER = 2,
  TFID_DISCONNECT_USER = 3,
  TFID_DISCONNECT_DOMAIN_USER = 4,
  TFID_CHANGE_LOCAL_PASSWORD = 5,
  TFID_CHANGE_ONLINE_PASSWORD = 6,
  TFID_COMPLETEACCOUNT = 7,
  TFID_TASKFLOW_MAX = 8,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,float>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_87
{
  value = 1,
} TAG_UNNAMED_87, *PTAG_UNNAMED_87;

struct tagOBJREF
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct _GUID iid;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0046 */ char __PADDING__[2];
      } /* size: 0x0030 */ u_standard;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct _GUID clsid;
        /* 0x0050 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0056 */ char __PADDING__[2];
      } /* size: 0x0040 */ u_handler;
      struct
      {
        /* 0x0018 */ struct _GUID clsid;
        /* 0x0028 */ unsigned long cbExtension;
        /* 0x002c */ unsigned long size;
        /* 0x0030 */ unsigned char* pData;
      } /* size: 0x0020 */ u_custom;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagOBJREFDATA* pORData;
        /* 0x0048 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x004e */ char __PADDING__[2];
      } /* size: 0x0038 */ u_extended;
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ u_objref;
}; /* size: 0x0058 */

typedef enum _TAG_UNNAMED_88
{
  value = 1,
} TAG_UNNAMED_88, *PTAG_UNNAMED_88;

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_89
{
  value = 1,
} TAG_UNNAMED_89, *PTAG_UNNAMED_89;

class wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276>;

class wistd::__function::__func<<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276>,void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>
{
  /* 0x0000 */ long Padding_162[2];
  /* 0x0008 */ class wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276> __f_;
}; /* size: 0x0040 */

typedef enum _TAG_UNNAMED_90
{
  value = 0,
} TAG_UNNAMED_90, *PTAG_UNNAMED_90;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_91
{
  value = 1,
} TAG_UNNAMED_91, *PTAG_UNNAMED_91;

enum SEARCHPANE_HOTKEY
{
  SPHK_SHOWSEARCHPANE = 0,
  SPHK_SEARCHSETTINGS = 1,
  SPHK_SEARCHFILES = 2,
  SPHK_APPS = 3,
};

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0001 */

typedef struct _PMD
{
  /* 0x0000 */ int mdisp;
  /* 0x0004 */ int pdisp;
  /* 0x0008 */ int vdisp;
} PMD, *PPMD; /* size: 0x000c */

typedef struct _s__CatchableType
{
  /* 0x0000 */ unsigned int properties;
  /* 0x0004 */ struct _TypeDescriptor* pType;
  /* 0x000c */ struct _PMD thisDisplacement;
  /* 0x0018 */ int sizeOrOffset;
  /* 0x001c */ void* copyFunction /* function */;
} s__CatchableType, *Ps__CatchableType; /* size: 0x0024 */

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwObjectType;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReserved;
  /* 0x0010 */ struct _FILETIME ThisUpdateTime;
  /* 0x0018 */ struct _FILETIME NextUpdateTime;
  /* 0x0020 */ struct _FILETIME PublishTime;
} CRYPTNET_URL_CACHE_PRE_FETCH_INFO, *PCRYPTNET_URL_CACHE_PRE_FETCH_INFO; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_92
{
  value = 0,
} TAG_UNNAMED_92, *PTAG_UNNAMED_92;

class wil::details::<lambda_1c79a90db9fd7b1a9e814504d97830b4>
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_THREAD_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned long NumberOfEntries;
} MINIDUMP_THREAD_INFO_LIST, *PMINIDUMP_THREAD_INFO_LIST; /* size: 0x000c */

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Linkage;
  /* 0x0010 */ unsigned __int64 Signature;
} RTL_DYNAMIC_HASH_TABLE_ENTRY, *PRTL_DYNAMIC_HASH_TABLE_ENTRY; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_93
{
  value = 1,
} TAG_UNNAMED_93, *PTAG_UNNAMED_93;

class std::fpos<_Mbstatet>;

enum tagGETCLSIDFLAGS
{
  USE_NORMAL_CLSID = 1,
  USE_STANDARD_LINK = 2,
};

typedef struct _MINIDUMP_HEADER
{
  /* 0x0000 */ unsigned int Signature;
  /* 0x0004 */ unsigned int Version;
  /* 0x0008 */ unsigned int NumberOfStreams;
  /* 0x000c */ unsigned long StreamDirectoryRva;
  /* 0x0010 */ unsigned int CheckSum;
  union
  {
    /* 0x0014 */ unsigned int Reserved;
    /* 0x0014 */ unsigned int TimeDateStamp;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned __int64 Flags;
} MINIDUMP_HEADER, *PMINIDUMP_HEADER; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragOperation> const >;

typedef enum _TAG_UNNAMED_94
{
  value = 0,
} TAG_UNNAMED_94, *PTAG_UNNAMED_94;

struct wistd::unary_function<wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &,void>
{
}; /* size: 0x0001 */

struct SERVICE_TRIGGER_CUSTOM_STATE_ID
{
  /* 0x0000 */ unsigned long Data[2];
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_95
{
  value = 1,
} TAG_UNNAMED_95, *PTAG_UNNAMED_95;

class Microsoft::WRL::ComPtr<IDragDropExtensionForOLE>
{
  /* 0x0000 */ struct IDragDropExtensionForOLE* ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_96
{
  value = 1,
} TAG_UNNAMED_96, *PTAG_UNNAMED_96;

class CStatData
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ long Padding_163;
  /* 0x0008 */ struct tagFORMATETC m_foretc;
  /* 0x0028 */ unsigned long m_dwAdvf;
  /* 0x002c */ long Padding_164;
  /* 0x0030 */ struct IAdviseSink* m_pAdvSink;
  /* 0x0038 */ unsigned long m_dwConnID;
}; /* size: 0x0040 */

typedef enum _SHARE_ITEM_TYPE
{
  SIT_FILE = 0,
  SIT_FOLDER = 1,
  SIT_DRIVE = 2,
  SIT_LIBRARY = 3,
  SIT_UNSUPPORTED = 4,
} SHARE_ITEM_TYPE, *PSHARE_ITEM_TYPE;

struct wistd::default_delete<unsigned int [0]>
{
}; /* size: 0x0001 */

typedef enum _MINIDUMP_CALLBACK_TYPE
{
  ModuleCallback = 0,
  ThreadCallback = 1,
  ThreadExCallback = 2,
  IncludeThreadCallback = 3,
  IncludeModuleCallback = 4,
  MemoryCallback = 5,
  CancelCallback = 6,
  WriteKernelMinidumpCallback = 7,
  KernelMinidumpStatusCallback = 8,
  RemoveMemoryCallback = 9,
  IncludeVmRegionCallback = 10,
  IoStartCallback = 11,
  IoWriteAllCallback = 12,
  IoFinishCallback = 13,
  ReadMemoryFailureCallback = 14,
  SecondaryFlagsCallback = 15,
  IsProcessSnapshotCallback = 16,
  VmStartCallback = 17,
  VmQueryCallback = 18,
  VmPreReadCallback = 19,
  VmPostReadCallback = 20,
} MINIDUMP_CALLBACK_TYPE, *PMINIDUMP_CALLBACK_TYPE;

union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer
{
  union
  {
    /* 0x0000 */ unsigned __int64 refCount;
    /* 0x0000 */ __int64 rawValue;
    /* 0x0000 */ void* ifHighBitIsSetThenShiftLeftToYieldPointerToWeakReference;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
  /* 0x0000 */ long Padding_165[8];
  /* 0x0020 */ union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer refCount_;
}; /* size: 0x0028 */

class wil::details::unique_storage<wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_97
{
  value = 1,
} TAG_UNNAMED_97, *PTAG_UNNAMED_97;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::AgileRef const >
{
  /* 0x0000 */ const class Microsoft::WRL::AgileRef* ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_98
{
  value = 1,
} TAG_UNNAMED_98, *PTAG_UNNAMED_98;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

struct IInspectable
{
}; /* size: 0x0008 */

class wil::ThreadFailureCache
{
  /* 0x0000 */ long Padding_166[2];
  /* 0x0008 */ class wil::StoredFailureInfo m_failure;
  /* 0x00b0 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
}; /* size: 0x00d8 */

typedef enum _TAG_UNNAMED_99
{
  value = 1,
} TAG_UNNAMED_99, *PTAG_UNNAMED_99;

class wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>
{
  /* 0x0000 */ const unsigned __int64 __buffer_size;
  /* 0x0008 */ union wistd::__aligned_storage<104,8,1>::type __buf_;
  /* 0x0070 */ class wistd::__function::__base<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>* __f_;
}; /* size: 0x0078 */

typedef enum _TAG_UNNAMED_100
{
  value = 1,
} TAG_UNNAMED_100, *PTAG_UNNAMED_100;

struct Windows::Foundation::Collections::IMap<unsigned int,IWeakReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Uri *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_101
{
  value = 1,
} TAG_UNNAMED_101, *PTAG_UNNAMED_101;

class std::initializer_list<char>
{
  /* 0x0000 */ const char* _First;
  /* 0x0008 */ const char* _Last;
}; /* size: 0x0010 */

enum tagLC_ITEM_SET_TYPE
{
  LCIC_ALLITEMS = 0,
  LCIC_SELECTED = 1,
  LCIC_CHECKED = 2,
};

typedef struct _PROCESS_HANDLE_TRACING_ENABLE
{
  /* 0x0000 */ unsigned long Flags;
} PROCESS_HANDLE_TRACING_ENABLE, *PPROCESS_HANDLE_TRACING_ENABLE; /* size: 0x0004 */

struct wistd::default_delete<char [0]>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef>
{
  /* 0x0000 */ class Microsoft::WRL::WeakRef* ptr_;
}; /* size: 0x0008 */

class OleDragDropTracing::CallContext
{
}; /* size: 0x0140 */

typedef enum _TAG_UNNAMED_102
{
  value = 1,
} TAG_UNNAMED_102, *PTAG_UNNAMED_102;

typedef struct _RTL_LFG_RNG_STATE
{
  /* 0x0000 */ unsigned long SeedArray[55];
  /* 0x00dc */ unsigned long Next;
  /* 0x00e0 */ unsigned long NextP;
} RTL_LFG_RNG_STATE, *PRTL_LFG_RNG_STATE; /* size: 0x00e4 */

typedef enum _TAG_UNNAMED_103
{
  value = 0,
} TAG_UNNAMED_103, *PTAG_UNNAMED_103;

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO
{
  /* 0x0000 */ unsigned char TransactionsActiveAtSnapshot;
} TXFS_TRANSACTION_ACTIVE_INFO, *PTXFS_TRANSACTION_ACTIVE_INFO; /* size: 0x0001 */

typedef struct _CERT_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
} CERT_DH_PARAMETERS, *PCERT_DH_PARAMETERS; /* size: 0x0020 */

struct Microsoft::WRL::RuntimeClassFlags<3>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Provider::FileUpdateStatus>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_104
{
  value = 1,
} TAG_UNNAMED_104, *PTAG_UNNAMED_104;

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wil::select_result>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_105
{
  value = 1,
} TAG_UNNAMED_105, *PTAG_UNNAMED_105;

typedef enum _TAG_UNNAMED_106
{
  value = 1,
} TAG_UNNAMED_106, *PTAG_UNNAMED_106;

struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FolderInformation *>
{
}; /* size: 0x0008 */

typedef struct _WIN_CERTIFICATE
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned short wRevision;
  /* 0x0006 */ unsigned short wCertificateType;
  /* 0x0008 */ unsigned char bCertificate[1];
  /* 0x0009 */ char __PADDING__[3];
} WIN_CERTIFICATE, *PWIN_CERTIFICATE; /* size: 0x000c */

class CHwnd
{
  /* 0x0000 */ struct HWND__* m_hwnd;
}; /* size: 0x0008 */

typedef struct _EISA_PORT_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char NumberPorts : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_PORT_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_PORT_DESCRIPTOR Configuration;
  /* 0x0001 */ unsigned short PortAddress;
} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION; /* size: 0x0003 */

enum tagSTGC
{
  STGC_DEFAULT = 0,
  STGC_OVERWRITE = 1,
  STGC_ONLYIFCURRENT = 2,
  STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4,
  STGC_CONSOLIDATE = 8,
};

struct tagFILTERREGION
{
  /* 0x0000 */ unsigned long idChunk;
  /* 0x0004 */ unsigned long cwcStart;
  /* 0x0008 */ unsigned long cwcExtent;
}; /* size: 0x000c */

struct Windows::Foundation::IReferenceArray<_GUID>
{
}; /* size: 0x0008 */

typedef struct _SAFER_CODE_PROPERTIES_V1
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwCheckFlags;
  /* 0x0008 */ const wchar_t* ImagePath;
  /* 0x0010 */ void* hImageFileHandle;
  /* 0x0018 */ unsigned long UrlZoneId;
  /* 0x001c */ unsigned char ImageHash[64];
  /* 0x005c */ unsigned long dwImageHashSize;
  /* 0x0060 */ union _LARGE_INTEGER ImageSize;
  /* 0x0068 */ unsigned int HashAlgorithm;
  /* 0x006c */ long Padding_167;
  /* 0x0070 */ unsigned char* pByteBlock;
  /* 0x0078 */ struct HWND__* hWndParent;
  /* 0x0080 */ unsigned long dwWVTUIChoice;
  /* 0x0084 */ long __PADDING__[1];
} SAFER_CODE_PROPERTIES_V1, *PSAFER_CODE_PROPERTIES_V1; /* size: 0x0088 */

enum SPLASHSCREEN_IMAGE_TYPE
{
  SSIT_SMALL = 0,
  SSIT_MEDIUM = 1,
  SSIT_LARGE = 2,
  SSIT_AUTO = 3,
  SSIT_COUNT = 4,
  SSIT_INVALID = 5,
};

class CPoint
{
  /* 0x0000 */ struct tagPOINT _pt;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>
{
}; /* size: 0x0001 */

class Windows::Internal::GitPtrImpl<Windows::Internal::GitPtr>
{
  /* 0x0000 */ long Padding_168[2];
  /* 0x0008 */ unsigned long _cookie;
  /* 0x000c */ HRESULT _hrInitGit;
}; /* size: 0x0010 */

enum Windows::Foundation::RegistrationScope
{
  RegistrationScope_PerMachine = 0,
  RegistrationScope_PerUser = 1,
  RegistrationScope_InboxApp = 2,
};

typedef struct _FILE_STANDARD_LINK_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAccessibleLinks;
  /* 0x0004 */ unsigned long TotalNumberOfLinks;
  /* 0x0008 */ unsigned char DeletePending;
  /* 0x0009 */ unsigned char Directory;
  /* 0x000a */ char __PADDING__[2];
} FILE_STANDARD_LINK_INFORMATION, *PFILE_STANDARD_LINK_INFORMATION; /* size: 0x000c */

typedef enum _TAG_UNNAMED_107
{
  value = 0,
} TAG_UNNAMED_107, *PTAG_UNNAMED_107;

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,IInspectable *>
{
}; /* size: 0x0008 */

enum tagCLIPWNDFLAGS
{
  CLIPWND_REMOVEFROMCLIPBOARD = 1,
  CLIPWND_IGNORECLIPBOARD = 2,
  CLIPWND_DONTCALLAPP = 4,
};

typedef enum _TAG_UNNAMED_108
{
  value = 0,
} TAG_UNNAMED_108, *PTAG_UNNAMED_108;

struct WINTRUST_CERT_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_169;
  /* 0x0008 */ const wchar_t* pcwszDisplayName;
  /* 0x0010 */ struct _CERT_CONTEXT* psCertContext;
  /* 0x0018 */ unsigned long chStores;
  /* 0x001c */ long Padding_170;
  /* 0x0020 */ void** pahStores;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ long Padding_171;
  /* 0x0030 */ struct _FILETIME* psftVerifyAsOf;
}; /* size: 0x0038 */

typedef struct _tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EventWriteTransfer,_GUID const *,_GUID const *>
{
} tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EventWriteTransfer,_GUID const *,_GUID const *>, *PtlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EventWriteTransfer,_GUID const *,_GUID const *>; /* size: 0x0001 */

enum tagCS_COLUMN_WIDTH_TYPE
{
  COLWT_CURRENT = 0,
  COLWT_DEFAULT = 1,
  COLWT_MINIMUM = 2,
  COLWT_IDEAL = 3,
};

struct ISimpleFrameSite
{
}; /* size: 0x0008 */

class CReadOnlyStream::CopyTo::__l8::<lambda_3aa8babb2821f2228e7076c7bcc65b4a>
{
  /* 0x0000 */ class CReadOnlyStream* const __this;
  /* 0x0008 */ struct IStream*& pstm;
  /* 0x0010 */ union _ULARGE_INTEGER& cb;
  /* 0x0018 */ union _ULARGE_INTEGER*& pcbRead;
  /* 0x0020 */ union _ULARGE_INTEGER*& pcbWritten;
}; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_109
{
  value = 1,
} TAG_UNNAMED_109, *PTAG_UNNAMED_109;

typedef union _RTL_RUN_ONCE
{
  union
  {
    /* 0x0000 */ void* Ptr;
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ unsigned __int64 State : 2; /* bit position: 0 */
  }; /* size: 0x0008 */
} RTL_RUN_ONCE, *PRTL_RUN_ONCE; /* size: 0x0008 */

class wil::details::static_lazy<ComTelemetryProvider>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[32];
}; /* size: 0x0028 */

class wil::details::<lambda_50267deb61ad6fadbd165c817716b257>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_110
{
  value = 1,
} TAG_UNNAMED_110, *PTAG_UNNAMED_110;

class wistd::__function::__base<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<bool>
{
}; /* size: 0x0008 */

enum PICKER_TYPE
{
  PICKER_TYPE_OPEN = 0,
  PICKER_TYPE_SAVE = 1,
  PICKER_TYPE_CONTACTS = 2,
  PICKER_TYPE_FILE_UPDATE = 3,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_111
{
  value = 0,
} TAG_UNNAMED_111, *PTAG_UNNAMED_111;

typedef struct _POWER_THROTTLING_PROCESS_STATE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long ControlMask;
  /* 0x0008 */ unsigned long StateMask;
} POWER_THROTTLING_PROCESS_STATE, *PPOWER_THROTTLING_PROCESS_STATE; /* size: 0x000c */

struct IROTData
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_SYSTEM_FILECACHE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CurrentSize;
  /* 0x0008 */ unsigned __int64 PeakSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ unsigned __int64 MinimumWorkingSet;
  /* 0x001c */ unsigned __int64 MaximumWorkingSet;
  /* 0x0024 */ unsigned __int64 CurrentSizeIncludingTransitionInPages;
  /* 0x002c */ unsigned __int64 PeakSizeIncludingTransitionInPages;
  /* 0x0034 */ unsigned long TransitionRePurposeCount;
  /* 0x0038 */ unsigned long Flags;
} MINIDUMP_SYSTEM_FILECACHE_INFORMATION, *PMINIDUMP_SYSTEM_FILECACHE_INFORMATION; /* size: 0x003c */

typedef struct _EISA_MEMORY_TYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ReadWrite : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Cached : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved0 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Type : 2; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE; /* size: 0x0001 */

typedef struct _EISA_MEMORY_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_MEMORY_TYPE ConfigurationByte;
  /* 0x0001 */ unsigned char DataSize;
  /* 0x0002 */ unsigned short AddressLowWord;
  /* 0x0004 */ unsigned char AddressHighByte;
  /* 0x0005 */ unsigned short MemorySize;
} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION; /* size: 0x0007 */

enum EDP_POLICY_RESULT
{
  EdpPolicyResult_Unknown = 0,
  EdpPolicyResult_Allowed = 1,
  EdpPolicyResult_Blocked = 2,
  EdpPolicyResult_ConsentRequired = 3,
  EdpPolicyResult_ConsentRequired_Add_Encryption = 4,
  EdpPolicyResult_MaxValue = 5,
};

typedef enum __MIDL___MIDL_itf_shpriv_0000_0034_0001
{
  NIE_NULL = 0,
  NIE_MouseMove = 1,
  NIE_MouseDown = 2,
  NIE_MouseUp = 3,
  NIE_MouseClick = 4,
  NIE_MouseDoubleClick = 5,
  NIE_ContextMenu = 6,
  NIE_KeyDown = 7,
  NIE_KeyUp = 8,
  NIE_Tooltip = 9,
  NIE_Reorder = 10,
} _MIDL___MIDL_itf_shpriv_0000_0034_0001, *P_MIDL___MIDL_itf_shpriv_0000_0034_0001;

class OleFlushClipboard::__l13::<lambda_9502ffa08436d10c47ab2b6016684077>
{
}; /* size: 0x0001 */

class std::invalid_argument
{
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>
{
}; /* size: 0x0008 */

enum EDP_CONTEXT_STATES
{
  EDP_CONTEXT_NONE = 0,
  EDP_CONTEXT_IS_EXEMPT = 1,
  EDP_CONTEXT_IS_ENLIGHTENED = 2,
  EDP_CONTEXT_IS_UNENLIGHTENED_ALLOWED = 4,
  EDP_CONTEXT_IS_PERMISSIVE = 8,
  EDP_CONTEXT_IS_COPY_EXEMPT = 16,
  EDP_CONTEXT_IS_DENIED = 32,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>
{
}; /* size: 0x0008 */

enum tagLC_SELECTION_MODE
{
  LCSM_DESELECT_ALL = 0,
  LCSM_SELECT_ALL = 1,
  LCSM_INVERTSELECTION = 2,
  LCSM_TOGGLE_SELECT_MODE = 3,
  LCSM_GET_SELECT_MODE = 4,
};

typedef struct _CERT_STRONG_SIGN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoChoice;
  union
  {
    /* 0x0008 */ void* pvInfo;
    /* 0x0008 */ struct _CERT_STRONG_SIGN_SERIALIZED_INFO* pSerializedInfo;
    /* 0x0008 */ char* pszOID;
  }; /* size: 0x0008 */
} CERT_STRONG_SIGN_PARA, *PCERT_STRONG_SIGN_PARA; /* size: 0x0010 */

struct IComClassInfo
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_112
{
  value = 0,
} TAG_UNNAMED_112, *PTAG_UNNAMED_112;

typedef enum _TAG_UNNAMED_113
{
  value = 0,
} TAG_UNNAMED_113, *PTAG_UNNAMED_113;

struct std::forward_iterator_tag
{
}; /* size: 0x0001 */

struct tagMETHODDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0008 */ struct tagPARAMDATA* ppdata;
  /* 0x0010 */ long dispid;
  /* 0x0014 */ unsigned int iMeth;
  /* 0x0018 */ enum tagCALLCONV cc;
  /* 0x001c */ unsigned int cArgs;
  /* 0x0020 */ unsigned short wFlags;
  /* 0x0022 */ unsigned short vtReturn;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>
{
}; /* size: 0x0008 */

enum GET_PROPERTY_STORE_TYPE
{
  GIPST_CACHED = 0,
  GIPST_FALLBACK = 1,
};

struct ITypeLib2
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_114
{
  value = 1,
} TAG_UNNAMED_114, *PTAG_UNNAMED_114;

struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >
{
}; /* size: 0x0008 */

struct wil::details::IFunctor
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_115
{
  value = 0,
} TAG_UNNAMED_115, *PTAG_UNNAMED_115;

struct CArray<CStatData>::ArrayNode
{
  /* 0x0000 */ class CStatData item;
  /* 0x0040 */ unsigned long next;
  /* 0x0044 */ unsigned long prev;
}; /* size: 0x0048 */

struct IDataAdviseHolder
{
}; /* size: 0x0008 */

enum SHELL_BROWSER_FRAME_SIZE_POSITION
{
  SBFSP_XPOS = 1,
  SBFSP_XOFF = 2,
  SBFSP_YPOS = 4,
  SBFSP_YOFF = 8,
  SBFSP_WIDTHSET = 16,
  SBFSP_WIDTHINCR = 32,
  SBFSP_HEIGHTSET = 64,
  SBFSP_HEIGHTINCR = 128,
  SBFSP_RESTRICT = -2147483648,
  SBFSP_XMASK = 3,
  SBFSP_YMASK = 12,
  SBFSP_MOVEMASK = 15,
  SBFSP_MOVERELMASK = 10,
  SBFSP_WIDTHMASK = 48,
  SBFSP_HEIGHTMASK = 192,
  SBFSP_SIZEMASK = 240,
  SBFSP_SIZERELMASK = 160,
  SBFSP_RELOPMASK = 170,
};

typedef enum _TAG_UNNAMED_116
{
  value = 1,
} TAG_UNNAMED_116, *PTAG_UNNAMED_116;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassInfo> const >;

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned char>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >
{
}; /* size: 0x0008 */

typedef enum _AGGREGATION_MODE
{
  AGGREGATION_MODE_NONE = 112,
  AGGREGATION_MODE_SUM = 113,
  AGGREGATION_MODE_MIN = 114,
  AGGREGATION_MODE_MAX = 115,
  AGGREGATION_MODE_INVALID = 116,
} AGGREGATION_MODE, *PAGGREGATION_MODE;

class CFormatEtc
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ long Padding_172;
  /* 0x0008 */ struct tagFORMATETC m_foretc;
}; /* size: 0x0028 */

struct CArray<CFormatEtc>::ArrayNode
{
  /* 0x0000 */ class CFormatEtc item;
  /* 0x0028 */ unsigned long next;
  /* 0x002c */ unsigned long prev;
}; /* size: 0x0030 */

enum Windows::Storage::Provider::FileUpdateStatus
{
  FileUpdateStatus_Incomplete = 0,
  FileUpdateStatus_Complete = 1,
  FileUpdateStatus_UserInputNeeded = 2,
  FileUpdateStatus_CurrentlyUnavailable = 3,
  FileUpdateStatus_Failed = 4,
  FileUpdateStatus_CompleteAndRenamed = 5,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct IApplicationAssociationRegistration
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_117
{
  value = 0,
} TAG_UNNAMED_117, *PTAG_UNNAMED_117;

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IClipboardTaskCompletion,Microsoft::WRL::FtmBase>
{
  /* 0x0000 */ long Padding_173[11];
  /* 0x002c */ volatile long refcount_;
}; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_118
{
  value = 0,
} TAG_UNNAMED_118, *PTAG_UNNAMED_118;

typedef struct _SID_AND_ATTRIBUTES
{
  /* 0x0000 */ void* Sid;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ long __PADDING__[1];
} SID_AND_ATTRIBUTES, *PSID_AND_ATTRIBUTES; /* size: 0x0010 */

enum SYNCMGR_CANCEL_REQUEST
{
  SYNCMGR_CR_NONE = 0,
  SYNCMGR_CR_CANCEL_ITEM = 1,
  SYNCMGR_CR_CANCEL_ALL = 2,
  SYNCMGR_CR_MAX = 2,
};

typedef struct __vcrt_va_list_is_reference<unsigned int>
{
} _vcrt_va_list_is_reference<unsigned int>, *P_vcrt_va_list_is_reference<unsigned int>; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_119
{
  value = 1,
} TAG_UNNAMED_119, *PTAG_UNNAMED_119;

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long FindAny;
  /* 0x0008 */ unsigned long FindLast;
  /* 0x000c */ unsigned long FindIdeal;
  /* 0x0010 */ unsigned long IdleAny;
  /* 0x0014 */ unsigned long IdleCurrent;
  /* 0x0018 */ unsigned long IdleLast;
  /* 0x001c */ unsigned long IdleIdeal;
  /* 0x0020 */ unsigned long PreemptAny;
  /* 0x0024 */ unsigned long PreemptCurrent;
  /* 0x0028 */ unsigned long PreemptLast;
  /* 0x002c */ unsigned long SwitchToIdle;
} SYSTEM_CONTEXT_SWITCH_INFORMATION, *PSYSTEM_CONTEXT_SWITCH_INFORMATION; /* size: 0x0030 */

typedef struct _IMAGE_LINENUMBER
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long SymbolTableIndex;
      /* 0x0000 */ unsigned long VirtualAddress;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Type;
  /* 0x0004 */ unsigned short Linenumber;
} IMAGE_LINENUMBER, *PIMAGE_LINENUMBER; /* size: 0x0006 */

typedef enum _FILE_INFO_BY_HANDLE_CLASS
{
  FileBasicInfo = 0,
  FileStandardInfo = 1,
  FileNameInfo = 2,
  FileRenameInfo = 3,
  FileDispositionInfo = 4,
  FileAllocationInfo = 5,
  FileEndOfFileInfo = 6,
  FileStreamInfo = 7,
  FileCompressionInfo = 8,
  FileAttributeTagInfo = 9,
  FileIdBothDirectoryInfo = 10,
  FileIdBothDirectoryRestartInfo = 11,
  FileIoPriorityHintInfo = 12,
  FileRemoteProtocolInfo = 13,
  FileFullDirectoryInfo = 14,
  FileFullDirectoryRestartInfo = 15,
  FileStorageInfo = 16,
  FileAlignmentInfo = 17,
  FileIdInfo = 18,
  FileIdExtdDirectoryInfo = 19,
  FileIdExtdDirectoryRestartInfo = 20,
  FileDispositionInfoEx = 21,
  FileRenameInfoEx = 22,
  FileCaseSensitiveInfo = 23,
  FileNormalizedNameInfo = 24,
  MaximumFileInfoByHandleClass = 25,
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;

struct ISurrogateService
{
}; /* size: 0x0008 */

typedef struct _CERT_TRUST_STATUS
{
  /* 0x0000 */ unsigned long dwErrorStatus;
  /* 0x0004 */ unsigned long dwInfoStatus;
} CERT_TRUST_STATUS, *PCERT_TRUST_STATUS; /* size: 0x0008 */

typedef struct _CERT_CHAIN_ELEMENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_174;
  /* 0x0008 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0010 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x0018 */ struct _CERT_REVOCATION_INFO* pRevocationInfo;
  /* 0x0020 */ struct _CTL_USAGE* pIssuanceUsage;
  /* 0x0028 */ struct _CTL_USAGE* pApplicationUsage;
  /* 0x0030 */ const wchar_t* pwszExtendedErrorInfo;
} CERT_CHAIN_ELEMENT, *PCERT_CHAIN_ELEMENT; /* size: 0x0038 */

class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_175[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

struct IOleControl
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_120
{
  value = 1,
} TAG_UNNAMED_120, *PTAG_UNNAMED_120;

struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > > >
{
  /* 0x0000 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > > m_value;
  /* 0x0008 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t> > > m_bufferHandle;
  /* 0x0010 */ wchar_t* m_charBuffer;
}; /* size: 0x0018 */

enum PATHCCH_OPTIONS
{
  PATHCCH_NONE = 0,
  PATHCCH_ALLOW_LONG_PATHS = 1,
  PATHCCH_FORCE_ENABLE_LONG_NAME_PROCESS = 2,
  PATHCCH_FORCE_DISABLE_LONG_NAME_PROCESS = 4,
  PATHCCH_DO_NOT_NORMALIZE_SEGMENTS = 8,
  PATHCCH_ENSURE_IS_EXTENDED_LENGTH_PATH = 16,
  PATHCCH_ENSURE_TRAILING_SLASH = 32,
  PATHCCH_CANONICALIZE_SLASHES = 64,
};

class CSCMergedEnum<IEnumGUID,_GUID>
{
  /* 0x0000 */ long Padding_176[2];
  /* 0x0008 */ struct IEnumGUID** m_pcsEnum;
  /* 0x0010 */ unsigned long m_cTotalEnum;
  /* 0x0014 */ unsigned long m_dwRefCount;
  /* 0x0018 */ unsigned long m_CurrentEnum;
  /* 0x001c */ struct _GUID m_myiid;
}; /* size: 0x0030 */

typedef struct _FP_32
{
  /* 0x0000 */ unsigned long W[1];
} FP_32, *PFP_32; /* size: 0x0004 */

typedef struct _FP_64
{
  /* 0x0000 */ unsigned long W[2];
} FP_64, *PFP_64; /* size: 0x0008 */

typedef struct _FP_80
{
  /* 0x0000 */ unsigned long W[3];
} FP_80, *PFP_80; /* size: 0x000c */

typedef struct _FP_128
{
  /* 0x0000 */ unsigned long W[4];
} FP_128, *PFP_128; /* size: 0x0010 */

enum Microsoft::WRL::ModuleType
{
  InProc = 1,
  OutOfProc = 2,
  DisableCaching = 4,
  InProcDisableCaching = 5,
  OutOfProcDisableCaching = 6,
};

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IGlobalInterfaceTable>* ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_121
{
  value = 1,
} TAG_UNNAMED_121, *PTAG_UNNAMED_121;

struct Windows::Foundation::Collections::VectorChangedEventHandler<float>
{
}; /* size: 0x0008 */

enum tagREADYSTATE
{
  READYSTATE_UNINITIALIZED = 0,
  READYSTATE_LOADING = 1,
  READYSTATE_LOADED = 2,
  READYSTATE_INTERACTIVE = 3,
  READYSTATE_COMPLETE = 4,
};

enum FULL_SCREEN_OVERLAYS
{
  FSO_Standard = 0,
  FSO_Minimal = 1,
};

class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0020 */

struct wistd::integral_constant<bool,0>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct IComDispatchInfo
{
}; /* size: 0x0008 */

enum tagQACONTAINERFLAGS
{
  QACONTAINER_SHOWHATCHING = 1,
  QACONTAINER_SHOWGRABHANDLES = 2,
  QACONTAINER_USERMODE = 4,
  QACONTAINER_DISPLAYASDEFAULT = 8,
  QACONTAINER_UIDEAD = 16,
  QACONTAINER_AUTOCLIP = 32,
  QACONTAINER_MESSAGEREFLECT = 64,
  QACONTAINER_SUPPORTSMNEMONICS = 128,
};

class wil::details::<lambda_5a3eff46511133451d1e1b0a53661816>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView<unsigned int>
{
}; /* size: 0x0008 */

enum tagPROPBAG2_TYPE
{
  PROPBAG2_TYPE_UNDEFINED = 0,
  PROPBAG2_TYPE_DATA = 1,
  PROPBAG2_TYPE_URL = 2,
  PROPBAG2_TYPE_OBJECT = 3,
  PROPBAG2_TYPE_STREAM = 4,
  PROPBAG2_TYPE_STORAGE = 5,
  PROPBAG2_TYPE_MONIKER = 6,
};

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0008 */

struct IErrorInfo
{
}; /* size: 0x0008 */

typedef enum _WOW64_PROCESS
{
  WOW64_PROCESS_UNINITIALIZED = 0,
  WOW64_PROCESS_YES = 1,
  WOW64_PROCESS_NO = 2,
} WOW64_PROCESS, *PWOW64_PROCESS;

struct IXTLRuntime
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0008 */

enum wil::RemoveDirectoryOptions
{
  None = 0,
  KeepRootDirectory = 1,
  RemoveReadOnly = 2,
};

class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::InitNew::__l2::<lambda_4f665fe9629adf1b6321c2bb89cc94f4>
{
}; /* size: 0x0001 */

enum tagPOINTERINACTIVE
{
  POINTERINACTIVE_ACTIVATEONENTRY = 1,
  POINTERINACTIVE_DEACTIVATEONLEAVE = 2,
  POINTERINACTIVE_ACTIVATEONDRAG = 4,
};

typedef struct _CRYPT_TIMESTAMP_RESPONSE
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ unsigned long cFreeText;
  /* 0x0008 */ wchar_t** rgFreeText;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB FailureInfo;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB ContentInfo;
} CRYPT_TIMESTAMP_RESPONSE, *PCRYPT_TIMESTAMP_RESPONSE; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_122
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_122, *PTAG_UNNAMED_122;

enum tagLOCKTYPE
{
  LOCK_WRITE = 1,
  LOCK_EXCLUSIVE = 2,
  LOCK_ONLYONCE = 4,
};

typedef struct __WilFeatureTraits_Feature_MarshalByValue
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy7;
    /* 0x0000 */ const char ___dummy5;
    /* 0x0000 */ const char ___dummy6;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_MarshalByValue, *P_WilFeatureTraits_Feature_MarshalByValue; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

typedef enum _APPCONTAINER_SID_TYPE
{
  NotAppContainerSidType = 0,
  ChildAppContainerSidType = 1,
  ParentAppContainerSidType = 2,
  InvalidAppContainerSidType = 3,
  MaxAppContainerSidType = 4,
} APPCONTAINER_SID_TYPE, *PAPPCONTAINER_SID_TYPE;

enum ADDRESS_MODE
{
  AddrMode1616 = 0,
  AddrMode1632 = 1,
  AddrModeReal = 2,
  AddrModeFlat = 3,
};

struct Windows::Foundation::Collections::IIterator_impl<unsigned __int64,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> > >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >
{
}; /* size: 0x0008 */

typedef struct _FILE_NAME_INFO
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFO, *PFILE_NAME_INFO; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_123
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_123, *PTAG_UNNAMED_123;

struct IPersistStorage
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification> > >
{
}; /* size: 0x0008 */

struct wil::details::folder_watcher_state
{
  /* 0x0000 */ class wistd::function<void __cdecl(void)> m_callback;
  /* 0x0078 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification> > > m_findChangeHandle;
  /* 0x0080 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t> > > m_threadPoolWait;
}; /* size: 0x0088 */

enum wil::details::ReportFailureOptions
{
  None = 0,
  ForcePlatformException = 1,
  MayRethrow = 2,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *,1>
{
}; /* size: 0x0008 */

enum wil::FolderChangeEvent
{
  ChangesLost = 0,
  Added = 1,
  Removed = 2,
  Modified = 3,
  RenameOldName = 4,
  RenameNewName = 5,
};

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Point,1>
{
}; /* size: 0x0008 */

struct tagCONTROLINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_177;
  /* 0x0008 */ struct HACCEL__* hAccel;
  /* 0x0010 */ unsigned short cAccel;
  /* 0x0012 */ char Padding_178[2];
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

class AdditionHelper<unsigned int,unsigned __int64,4>
{
}; /* size: 0x0001 */

enum ComCatalogDiagnosticData::Catalogs
{
  None = 0,
  SxS = 1,
  PackagedComCurrentPackage = 2,
  PrivateHive = 4,
  Cache = 8,
  CLB = 16,
  COMBaseInCLB = 32,
  PackagedComAllPackage = 64,
  RegistryNative = 128,
  RegistryX86WoW = 256,
  RegistryArm32WoW = 512,
  BSP = 1024,
  Driver = 2048,
};

typedef enum _MINIDUMP_STREAM_TYPE
{
  UnusedStream = 0,
  ReservedStream0 = 1,
  ReservedStream1 = 2,
  ThreadListStream = 3,
  ModuleListStream = 4,
  MemoryListStream = 5,
  ExceptionStream = 6,
  SystemInfoStream = 7,
  ThreadExListStream = 8,
  Memory64ListStream = 9,
  CommentStreamA = 10,
  CommentStreamW = 11,
  HandleDataStream = 12,
  FunctionTableStream = 13,
  UnloadedModuleListStream = 14,
  MiscInfoStream = 15,
  MemoryInfoListStream = 16,
  ThreadInfoListStream = 17,
  HandleOperationListStream = 18,
  TokenStream = 19,
  JavaScriptDataStream = 20,
  SystemMemoryInfoStream = 21,
  ProcessVmCountersStream = 22,
  IptTraceStream = 23,
  ThreadNamesStream = 24,
  ceStreamNull = 0xffff8000,
  ceStreamSystemInfo = 0xffff8001,
  ceStreamException = 0xffff8002,
  ceStreamModuleList = 0xffff8003,
  ceStreamProcessList = 0xffff8004,
  ceStreamThreadList = 0xffff8005,
  ceStreamThreadContextList = 0xffff8006,
  ceStreamThreadCallStackList = 0xffff8007,
  ceStreamMemoryVirtualList = 0xffff8008,
  ceStreamMemoryPhysicalList = 0xffff8009,
  ceStreamBucketParameters = 0xffff800a,
  ceStreamProcessModuleMap = 0xffff800b,
  ceStreamDiagnosisList = 0xffff800c,
  LastReservedStream = 0xffffffff,
} MINIDUMP_STREAM_TYPE, *PMINIDUMP_STREAM_TYPE;

struct Windows::Foundation::IReference_impl<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::Storage::StorageLibrary *,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _remoteMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ long Padding_179;
  /* 0x0010 */ struct _userHMETAFILE* hMF;
} remoteMETAFILEPICT, *PremoteMETAFILEPICT; /* size: 0x0018 */

class std::allocator<char>
{
}; /* size: 0x0001 */

struct IUriBuilder
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_124
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_124, *PTAG_UNNAMED_124;

typedef struct _IMAGE_BASE_RELOCATION
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long SizeOfBlock;
} IMAGE_BASE_RELOCATION, *PIMAGE_BASE_RELOCATION; /* size: 0x0008 */

class wil::details::<lambda_8a4932591d66949a311fbddd08dbf9c6>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_FIRMWARE_RAMDISK_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long BlockSize;
  /* 0x0008 */ unsigned __int64 BaseAddress;
  /* 0x0010 */ unsigned __int64 Size;
} SYSTEM_FIRMWARE_RAMDISK_INFORMATION, *PSYSTEM_FIRMWARE_RAMDISK_INFORMATION; /* size: 0x0018 */

struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs *>
{
}; /* size: 0x0008 */

typedef enum _CALLSOURCE
{
  CALLSOURCE_CROSSAPT = 0,
  CALLSOURCE_CROSSCTX = 1,
} CALLSOURCE, *PCALLSOURCE;

class TryGetTypeInfoFromIIDViaRegistry::__l112::<lambda_fc60b093486e22f751d51f4c0f5d35fc>
{
  /* 0x0000 */ struct HREG& hregPlatform;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,IWeakReference *>
{
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&GlobalUnlock,void *>
{
}; /* size: 0x0001 */

struct IXMLDOMAttribute
{
}; /* size: 0x0008 */

typedef enum _EDP_TAGGED_APP_MODE
{
  EdpTagUnenlightenedEnterpriseWin32 = 1,
  EdpTagUnenlightenedEnterpriseModern = 2,
} EDP_TAGGED_APP_MODE, *PEDP_TAGGED_APP_MODE;

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_180;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ unsigned long dwSignerIndex;
  /* 0x0014 */ unsigned long dwSignerType;
  /* 0x0018 */ void* pvSigner;
} CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA; /* size: 0x0020 */

class wil::details::<lambda_744360b1878fd32916ff0a6b90bd54b5>
{
}; /* size: 0x0001 */

enum ADJACENT_DISPLAY_EDGES
{
  ADE_NONE = 0,
  ADE_LEFT = 1,
  ADE_RIGHT = 2,
};

enum tagACTIVATEFLAGS
{
  ACTIVATE_WINDOWLESS = 1,
};

struct ICreateTypeInfo
{
}; /* size: 0x0008 */

class CMonikerFactory
{
}; /* size: 0x0010 */

enum tagExtentMode
{
  DVEXTENT_CONTENT = 0,
  DVEXTENT_INTEGRAL = 1,
};

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _MINIDUMP_TYPE
{
  MiniDumpNormal = 0,
  MiniDumpWithDataSegs = 1,
  MiniDumpWithFullMemory = 2,
  MiniDumpWithHandleData = 4,
  MiniDumpFilterMemory = 8,
  MiniDumpScanMemory = 16,
  MiniDumpWithUnloadedModules = 32,
  MiniDumpWithIndirectlyReferencedMemory = 64,
  MiniDumpFilterModulePaths = 128,
  MiniDumpWithProcessThreadData = 256,
  MiniDumpWithPrivateReadWriteMemory = 512,
  MiniDumpWithoutOptionalData = 1024,
  MiniDumpWithFullMemoryInfo = 2048,
  MiniDumpWithThreadInfo = 4096,
  MiniDumpWithCodeSegs = 8192,
  MiniDumpWithoutAuxiliaryState = 16384,
  MiniDumpWithFullAuxiliaryState = 0xffff8000,
  MiniDumpWithPrivateWriteCopyMemory = 0x10000,
  MiniDumpIgnoreInaccessibleMemory = 0x20000,
  MiniDumpWithTokenInformation = 0x40000,
  MiniDumpWithModuleHeaders = 0x80000,
  MiniDumpFilterTriage = 0x100000,
  MiniDumpWithAvxXStateContext = 0x200000,
  MiniDumpWithIptTrace = 0x400000,
  MiniDumpScanInaccessiblePartialPages = 0x800000,
  MiniDumpFilterWriteCombinedMemory = 0x1000000,
  MiniDumpValidTypeFlags = 0x1ffffff,
} MINIDUMP_TYPE, *PMINIDUMP_TYPE;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDataFormatIterator> const >;

enum FILETYPEATTRIBUTEFLAGS
{
  FTA_None = 0,
  FTA_Exclude = 1,
  FTA_Show = 2,
  FTA_HasExtension = 4,
  FTA_NoEdit = 8,
  FTA_NoRemove = 16,
  FTA_NoNewVerb = 32,
  FTA_NoEditVerb = 64,
  FTA_NoRemoveVerb = 128,
  FTA_NoEditDesc = 256,
  FTA_NoEditIcon = 512,
  FTA_NoEditDflt = 1024,
  FTA_NoEditVerbCmd = 2048,
  FTA_NoEditVerbExe = 4096,
  FTA_NoDDE = 8192,
  FTA_NoEditMIME = 0xffff8000,
  FTA_OpenIsSafe = 0x10000,
  FTA_AlwaysUnsafe = 0x20000,
  FTA_NoRecentDocs = 0x100000,
  FTA_SafeForElevation = 0x200000,
  FTA_AlwaysUseDirectInvoke = 0x400000,
};

typedef struct _CRYPT_TRUST_REG_ENTRY
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_181;
  /* 0x0008 */ wchar_t* pwszDLLName;
  /* 0x0010 */ wchar_t* pwszFunctionName;
} CRYPT_TRUST_REG_ENTRY, *PCRYPT_TRUST_REG_ENTRY; /* size: 0x0018 */

struct IEnumConnections
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _RTL_SRWLOCK* m_ptr;
}; /* size: 0x0008 */

enum IMAGEHLP_SF_TYPE
{
  sfImage = 0,
  sfDbg = 1,
  sfPdb = 2,
  sfMpd = 3,
  sfMax = 4,
};

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>
{
}; /* size: 0x0008 */

typedef struct _RTL_VERIFIER_PAGEHEAP_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long HeapFlags;
  /* 0x000c */ unsigned long ExtraFlags;
  /* 0x0010 */ unsigned __int64 HeapHandle;
} RTL_VERIFIER_PAGEHEAP_INFORMATION, *PRTL_VERIFIER_PAGEHEAP_INFORMATION; /* size: 0x0018 */

typedef struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long NumberPageHeaps;
  /* 0x0008 */ struct _RTL_VERIFIER_PAGEHEAP_INFORMATION PageHeapInformation[1];
} RTL_VERIFIER_PAGEHEAPS_INFORMATION, *PRTL_VERIFIER_PAGEHEAPS_INFORMATION; /* size: 0x0020 */

enum wil::ErrorReportingType
{
  None = 0,
  Telemetry = 1,
  TraceLogging = 2,
};

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>
{
}; /* size: 0x0008 */

enum FormatMatchFlag
{
  FORMAT_NOTFOUND = 1,
  FORMAT_BADMATCH = 2,
  FORMAT_GOODMATCH = 4,
};

enum CreateClipDataObjectOptions
{
  None = 0,
  ClientIsAppContainer = 1,
  EdpIsAccessDenied = 2,
};

class CStmBufWrite
{
}; /* size: 0x0118 */

enum tagREGCLS
{
  REGCLS_SINGLEUSE = 0,
  REGCLS_MULTIPLEUSE = 1,
  REGCLS_MULTI_SEPARATE = 2,
  REGCLS_SUSPENDED = 4,
  REGCLS_SURROGATE = 8,
  REGCLS_AGILE = 16,
};

class std::basic_string_view<char32_t,std::char_traits<char32_t> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ const char32_t* _Mydata;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 _Mysize;
}; /* size: 0x0010 */

enum DISPLAYCONFIG_DEVICE_INFO_TYPE
{
  DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3,
  DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4,
  DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_BASE_TYPE = 6,
  DISPLAYCONFIG_DEVICE_INFO_GET_SUPPORT_VIRTUAL_RESOLUTION = 7,
  DISPLAYCONFIG_DEVICE_INFO_SET_SUPPORT_VIRTUAL_RESOLUTION = 8,
  DISPLAYCONFIG_DEVICE_INFO_GET_ADVANCED_COLOR_INFO = 9,
  DISPLAYCONFIG_DEVICE_INFO_SET_ADVANCED_COLOR_STATE = 10,
  DISPLAYCONFIG_DEVICE_INFO_GET_SDR_WHITE_LEVEL = 11,
  DISPLAYCONFIG_DEVICE_INFO_GET_MONITOR_SPECIALIZATION = 12,
  DISPLAYCONFIG_DEVICE_INFO_SET_MONITOR_SPECIALIZATION = 13,
  DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = -1,
};

struct DISPLAYCONFIG_DEVICE_INFO_HEADER
{
  /* 0x0000 */ enum DISPLAYCONFIG_DEVICE_INFO_TYPE type;
  /* 0x0004 */ unsigned int size;
  /* 0x0008 */ struct _LUID adapterId;
  /* 0x0010 */ unsigned int id;
}; /* size: 0x0014 */

typedef struct _DISPLAYCONFIG_SDR_WHITE_LEVEL
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ unsigned long SDRWhiteLevel;
} DISPLAYCONFIG_SDR_WHITE_LEVEL, *PDISPLAYCONFIG_SDR_WHITE_LEVEL; /* size: 0x0018 */

struct IPropertyBag2
{
}; /* size: 0x0008 */

enum Windows::Foundation::Collections::CollectionChange
{
  CollectionChange_Reset = 0,
  CollectionChange_ItemInserted = 1,
  CollectionChange_ItemRemoved = 2,
  CollectionChange_ItemChanged = 3,
};

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator>
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_182;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ char Name[1];
  /* 0x001d */ char __PADDING__[3];
} IMAGEHLP_SYMBOL64, *PIMAGEHLP_SYMBOL64; /* size: 0x0020 */

typedef struct _IMAGEHLP_SYMBOL64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOL64 sym;
  /* 0x0020 */ char name[2001];
  /* 0x07f1 */ char __PADDING__[7];
} IMAGEHLP_SYMBOL64_PACKAGE, *PIMAGEHLP_SYMBOL64_PACKAGE; /* size: 0x07f8 */

struct ClassMonikerData
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long cbExtra;
}; /* size: 0x0014 */

class CClassMoniker
{
  /* 0x0000 */ long Padding_183[6];
  /* 0x0018 */ long _cRefs;
  /* 0x001c */ struct ClassMonikerData _data;
  /* 0x0030 */ void* _pExtra;
  /* 0x0038 */ wchar_t* _pszCodeBase;
  /* 0x0040 */ unsigned long _dwFileVersionMS;
  /* 0x0044 */ unsigned long _dwFileVersionLS;
}; /* size: 0x0048 */

enum IMAGEHLP_EXTENDED_OPTIONS
{
  SYMOPT_EX_DISABLEACCESSTIMEUPDATE = 0,
  SYMOPT_EX_LASTVALIDDEBUGDIRECTORY = 1,
  SYMOPT_EX_NOIMPLICITPATTERNSEARCH = 2,
  SYMOPT_EX_NEVERLOADSYMBOLS = 3,
  SYMOPT_EX_MAX = 4,
};

typedef struct _KEY_VALUE_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ wchar_t Name[1];
  /* 0x000e */ char __PADDING__[2];
} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION; /* size: 0x0010 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IUnknown,0,0>
{
}; /* size: 0x0001 */

enum IMAGEHLP_HD_TYPE
{
  hdBase = 0,
  hdSym = 1,
  hdSrc = 2,
  hdMax = 3,
};

struct Windows::Foundation::Collections::IIterator_impl<__int64,1>
{
}; /* size: 0x0008 */

struct INoMarshal
{
}; /* size: 0x0008 */

struct SIP_SUBJECTINFO_;

typedef enum _TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;

typedef class _TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_184[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>, *PTlgActivityBase<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>,0,5>; /* size: 0x0028 */

enum PLM_TASKCOMPLETION_CATEGORY_FLAGS
{
  PT_TC_NONE = 0,
  PT_TC_PBM = 1,
  PT_TC_FILEOPENPICKER = 2,
  PT_TC_SHARING = 4,
  PT_TC_PRINTING = 8,
  PT_TC_GENERIC = 16,
  PT_TC_CAMERA_DCA = 32,
  PT_TC_PRINTER_DCA = 64,
  PT_TC_PLAYTO = 128,
  PT_TC_FILESAVEPICKER = 256,
  PT_TC_CONTACTPICKER = 512,
  PT_TC_CACHEDFILEUPDATER_LOCAL = 1024,
  PT_TC_CACHEDFILEUPDATER_REMOTE = 2048,
  PT_TC_ERROR_REPORT = 8192,
  PT_TC_DATA_PACKAGE = 16384,
  PT_TC_CRASHDUMP = 0x10000,
  PT_TC_STREAMEDFILE = 0x20000,
  PT_TC_PBM_COMMUNICATION = 0x80000,
  PT_TC_HOSTEDAPPLICATION = 0x100000,
  PT_TC_MEDIA_CONTROLS_ACTIVE = 0x200000,
  PT_TC_EMPTYHOST = 0x400000,
  PT_TC_SCANNING = 0x800000,
  PT_TC_ACTIONS = 0x1000000,
  PT_TC_KERNEL_MODE = 0x20000000,
  PT_TC_REALTIMECOMM = 0x40000000,
  PT_TC_IGNORE_NAV_LEVEL_FOR_CS = -2147483648,
};

struct MarshalingContextAttributeValue
{
  /* 0x0000 */ enum CO_MARSHALING_CONTEXT_ATTRIBUTES attribute;
  /* 0x0004 */ long Padding_185;
  /* 0x0008 */ unsigned __int64 value;
}; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _RTL_SRWLOCK* m_ptr;
}; /* size: 0x0008 */

typedef struct _IMAGE_EXPORT_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long Base;
  /* 0x0014 */ unsigned long NumberOfFunctions;
  /* 0x0018 */ unsigned long NumberOfNames;
  /* 0x001c */ unsigned long AddressOfFunctions;
  /* 0x0020 */ unsigned long AddressOfNames;
  /* 0x0024 */ unsigned long AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_125
{
  UserMarshal_Index_BSTR = 0,
  UserMarshal_Index_VARIANT = 1,
  UserMarshal_Index_SafeArray = 2,
} TAG_UNNAMED_125, *PTAG_UNNAMED_125;

enum tagMKREDUCE
{
  MKRREDUCE_ONE = 0x30000,
  MKRREDUCE_TOUSER = 0x20000,
  MKRREDUCE_THROUGHUSER = 0x10000,
  MKRREDUCE_ALL = 0,
};

struct WilFailureCodeLocation
{
  /* 0x0000 */ unsigned short line;
  /* 0x0002 */ char Padding_186[2];
  /* 0x0004 */ unsigned int functionHash;
  /* 0x0008 */ const char* file;
  /* 0x0010 */ const char* module;
}; /* size: 0x0018 */

typedef struct __std_exception_data
{
  /* 0x0000 */ const char* _What;
  /* 0x0008 */ BOOL _DoFree;
  /* 0x0009 */ char __PADDING__[7];
} _std_exception_data, *P_std_exception_data; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation_impl<IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageLibraryChange *>
{
}; /* size: 0x0008 */

enum ComTlsFlags
{
  None = 0,
  ChainRestrictedErrors = 1,
};

typedef struct _TP_CALLBACK_ENVIRON_V3
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_187;
  /* 0x0008 */ struct _TP_POOL* Pool;
  /* 0x0010 */ struct _TP_CLEANUP_GROUP* CleanupGroup;
  /* 0x0018 */ void* CleanupGroupCancelCallback /* function */;
  /* 0x0020 */ void* RaceDll;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0030 */ void* FinalizationCallback /* function */;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long Flags;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0038 */ unsigned long LongFunction : 1; /* bit position: 0 */
          /* 0x0038 */ unsigned long Persistent : 1; /* bit position: 1 */
          /* 0x0038 */ unsigned long Private : 30; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ s;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x003c */ enum _TP_CALLBACK_PRIORITY CallbackPriority;
  /* 0x0040 */ unsigned long Size;
  /* 0x0044 */ long __PADDING__[1];
} TP_CALLBACK_ENVIRON_V3, *PTP_CALLBACK_ENVIRON_V3; /* size: 0x0048 */

typedef enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION
{
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL = 1,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_ADD = 2,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_DELETE = 3,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE = 4,
} TOKEN_SECURITY_ATTRIBUTE_OPERATION, *PTOKEN_SECURITY_ATTRIBUTE_OPERATION;

struct Windows::Foundation::Point
{
  /* 0x0000 */ float X;
  /* 0x0004 */ float Y;
}; /* size: 0x0008 */

class CMapDwordDword
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

enum TERMINATE_DOCUMENT
{
  Terminate_None = 0,
  Terminate_Detect = 1,
  Terminate_Received = 2,
};

enum tagCALLCATEGORY
{
  CALLCAT_NOCALL = 0,
  CALLCAT_SYNCHRONOUS = 1,
  CALLCAT_ASYNC = 2,
  CALLCAT_INPUTSYNC = 3,
  CALLCAT_INTERNALSYNC = 4,
  CALLCAT_INTERNALINPUTSYNC = 5,
  CALLCAT_SCMCALL = 6,
};

struct SIP_DISPATCH_INFO_;

typedef struct _RTL_DYNAMIC_HASH_TABLE
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Shift;
  /* 0x0008 */ unsigned long TableSize;
  /* 0x000c */ unsigned long Pivot;
  /* 0x0010 */ unsigned long DivisorMask;
  /* 0x0014 */ unsigned long NumEntries;
  /* 0x0018 */ unsigned long NonEmptyBuckets;
  /* 0x001c */ unsigned long NumEnumerators;
  /* 0x0020 */ void* Directory;
} RTL_DYNAMIC_HASH_TABLE, *PRTL_DYNAMIC_HASH_TABLE; /* size: 0x0028 */

enum tagADVF
{
  ADVF_NODATA = 1,
  ADVF_PRIMEFIRST = 2,
  ADVF_ONLYONCE = 4,
  ADVF_DATAONSTOP = 64,
  ADVFCACHE_NOHANDLER = 8,
  ADVFCACHE_FORCEBUILTIN = 16,
  ADVFCACHE_ONSAVE = 32,
};

typedef struct _CERT_SIMPLE_CHAIN
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cElement;
  /* 0x0010 */ struct _CERT_CHAIN_ELEMENT** rgpElement;
  /* 0x0018 */ struct _CERT_TRUST_LIST_INFO* pTrustListInfo;
  /* 0x0020 */ int fHasRevocationFreshnessTime;
  /* 0x0024 */ unsigned long dwRevocationFreshnessTime;
} CERT_SIMPLE_CHAIN, *PCERT_SIMPLE_CHAIN; /* size: 0x0028 */

enum tagSERVERCALLEX
{
  SERVERCALLEX_ISHANDLED = 0,
  SERVERCALLEX_REJECTED = 1,
  SERVERCALLEX_RETRYLATER = 2,
  SERVERCALLEX_ERROR = 3,
  SERVERCALLEX_CANCELED = 5,
};

struct tagSCROLLINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ int nMin;
  /* 0x000c */ int nMax;
  /* 0x0010 */ unsigned int nPage;
  /* 0x0014 */ int nPos;
  /* 0x0018 */ int nTrackPos;
}; /* size: 0x001c */

typedef struct _tlgWrapperByVal<4>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const unsigned int Value;
  }; /* size: 0x0004 */
} tlgWrapperByVal<4>, *PtlgWrapperByVal<4>; /* size: 0x0004 */

typedef enum _PROCESS_ENERGY_COMPONENT_TYPE_NUM
{
  PsEnergyComponentTypeCpu = 0,
  PsEnergyComponentTypeStorage = 1,
  PsEnergyComponentTypeNetwork = 2,
  PsEnergyComponentTypeMBB = 3,
  PsEnergyComponentTypeForegroundTime = 4,
  PsEnergyComponentTypeDesktopVisibleTime = 5,
  PsEnergyComponentTypeWindowResource = 6,
  PsEnergyComponentTypeCompositorResource = 7,
  PsEnergyComponentTypeTrackingState = 8,
  PsEnergyComponentTypeInput = 9,
  PsEnergyComponentTypeAudioIn = 10,
  PsEnergyComponentTypeAudioOut = 11,
  PsEnergyComponentTypeDisplayRequired = 12,
  PsEnergyComponentTypeKeyboardInput = 13,
  PsEnergyComponentTypeMouseInput = 14,
  PsEnergyComponentTypeMax = 15,
} PROCESS_ENERGY_COMPONENT_TYPE_NUM, *PPROCESS_ENERGY_COMPONENT_TYPE_NUM;

enum tagMEMCTX
{
  MEMCTX_TASK = 1,
  MEMCTX_SHARED = 2,
  MEMCTX_MACSYSTEM = 3,
  MEMCTX_UNKNOWN = -1,
  MEMCTX_SAME = -2,
};

enum Quirks::QuirkStatus
{
  QuirkStatusUndetermined = 0,
  QuirkEnabled = 1,
  QuirkDisabled = 2,
};

typedef struct _MINIDUMP_THREAD_EX
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
  /* 0x0030 */ struct _MINIDUMP_MEMORY_DESCRIPTOR BackingStore;
} MINIDUMP_THREAD_EX, *PMINIDUMP_THREAD_EX; /* size: 0x0040 */

class GetUserSidFromToken::__l2::<lambda_77bd92bdd913837a9604f653574db8f0>;

class wil::details::lambda_call<<lambda_77bd92bdd913837a9604f653574db8f0> >
{
  /* 0x0000 */ class GetUserSidFromToken::__l2::<lambda_77bd92bdd913837a9604f653574db8f0> m_lambda;
  /* 0x0000 */ long Padding_188[2];
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_126
{
  value = 0,
} TAG_UNNAMED_126, *PTAG_UNNAMED_126;

struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AvailablePages;
  /* 0x0008 */ unsigned __int64 CommittedPages;
  /* 0x0010 */ unsigned __int64 CommitLimit;
  /* 0x0018 */ unsigned __int64 PeakCommitment;
} MINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION, *PMINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION; /* size: 0x0020 */

struct wil::details::static_lazy<ComTelemetry>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<ComTelemetry>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _RTL_SPARSE_BITMAP_PARAMETER
{
  /* 0x0000 */ unsigned __int64 BitCountMax;
  /* 0x0008 */ unsigned long MetadataSizePerBit;
  /* 0x000c */ unsigned long BitsPerRange;
  /* 0x0010 */ unsigned long RangeCountMax;
  /* 0x0014 */ long Padding_189;
  /* 0x0018 */ void* AllocateRoutine /* function */;
  /* 0x0020 */ void* FreeRoutine /* function */;
  struct /* bitfield */
  {
    /* 0x0028 */ unsigned long DefaultBitsSet : 1; /* bit position: 0 */
    /* 0x0028 */ unsigned long SparseRangeArray : 1; /* bit position: 1 */
    /* 0x0028 */ unsigned long NoInternalLocking : 1; /* bit position: 2 */
    /* 0x0028 */ unsigned long SpareFlags : 29; /* bit position: 3 */
  }; /* bitfield */
  /* 0x002c */ long __PADDING__[1];
} RTL_SPARSE_BITMAP_PARAMETER, *PRTL_SPARSE_BITMAP_PARAMETER; /* size: 0x0030 */

enum tagSERVERCALL
{
  SERVERCALL_ISHANDLED = 0,
  SERVERCALL_REJECTED = 1,
  SERVERCALL_RETRYLATER = 2,
};

enum tagDATADIR
{
  DATADIR_GET = 1,
  DATADIR_SET = 2,
};

struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned int,unsigned int>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IUnknown>
{
  /* 0x0000 */ struct IUnknown* ptr_;
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,void *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned __int64>
{
}; /* size: 0x0008 */

class DragDropTelemetryHelper
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_127
{
  __the_value = 0,
} TAG_UNNAMED_127, *PTAG_UNNAMED_127;

class CPres
{
  /* 0x0000 */ class CFormat m_format;
  /* 0x0030 */ unsigned long m_ulHeight;
  /* 0x0034 */ unsigned long m_ulWidth;
  /* 0x0038 */ class CData m_data;
}; /* size: 0x0058 */

typedef enum _TAG_UNNAMED_128
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_128, *PTAG_UNNAMED_128;

enum tagACTIVATIONTYPE
{
  ACTIVATIONTYPE_UNCATEGORIZED = 0,
  ACTIVATIONTYPE_FROM_MONIKER = 1,
  ACTIVATIONTYPE_FROM_DATA = 2,
  ACTIVATIONTYPE_FROM_STORAGE = 4,
  ACTIVATIONTYPE_FROM_STREAM = 8,
  ACTIVATIONTYPE_FROM_FILE = 16,
};

struct Windows::Foundation::Collections::IVector<int>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

enum ClassRegistration::SERVER_TYPE
{
  INPROC_SERVER = 1,
  LOCAL_SERVER = 4,
  INPROC_HANDLER = 2,
  SERVER_TYPE_NONE = 0,
};

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wil::details::event_watcher_state *>
{
}; /* size: 0x0001 */

typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long KeyUsage;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long PerBootKey : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ unsigned long cbAlgName;
  /* 0x0010 */ unsigned long cbNonce;
  /* 0x0014 */ unsigned long cbAuthTag;
  /* 0x0018 */ unsigned long cbWrappingKey;
  /* 0x001c */ unsigned long cbIsolatedKey;
} NCRYPT_EXPORTED_ISOLATED_KEY_HEADER, *PNCRYPT_EXPORTED_ISOLATED_KEY_HEADER; /* size: 0x0020 */

typedef struct _NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE
{
  /* 0x0000 */ struct _NCRYPT_EXPORTED_ISOLATED_KEY_HEADER Header;
} NCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE, *PNCRYPT_EXPORTED_ISOLATED_KEY_ENVELOPE; /* size: 0x0020 */

class Microsoft::WRL::Details::WeakReferenceImpl
{
  /* 0x0000 */ long Padding_190[6];
  /* 0x0018 */ struct IUnknown* unknown_;
}; /* size: 0x0020 */

typedef struct _IMAGE_TLS_DIRECTORY64
{
  /* 0x0000 */ unsigned __int64 StartAddressOfRawData;
  /* 0x0008 */ unsigned __int64 EndAddressOfRawData;
  /* 0x0010 */ unsigned __int64 AddressOfIndex;
  /* 0x0018 */ unsigned __int64 AddressOfCallBacks;
  /* 0x0020 */ unsigned long SizeOfZeroFill;
  union
  {
    /* 0x0024 */ unsigned long Characteristics;
    struct /* bitfield */
    {
      /* 0x0024 */ unsigned long Reserved0 : 20; /* bit position: 0 */
      /* 0x0024 */ unsigned long Alignment : 4; /* bit position: 20 */
      /* 0x0024 */ unsigned long Reserved1 : 8; /* bit position: 24 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_TLS_DIRECTORY64, *PIMAGE_TLS_DIRECTORY64; /* size: 0x0028 */

enum DIT_HITTESTATTRIBUTES
{
  DIT_HITTESTATTRIBUTES_NONE = 0,
  DIT_HITTESTATTRIBUTES_MOUSEWHEEL = 1,
  DIT_HITTESTATTRIBUTES_MOUSEWHEELISINCREASING = 2,
  DIT_HITTESTATTRIBUTES_MOUSEWHEELISHORIZONTAL = 4,
  DIT_HITTESTATTRIBUTES_MOUSEBUTTONDOWN = 8,
  DIT_HITTESTATTRIBUTES_TOUCHTARGETING = 16,
  DIT_HITTESTATTRIBUTES_NOHOVERPOINTER = 32,
  DIT_HITTESTATTRIBUTES_BARRELBUTTONDOWN = 64,
  DIT_HITTESTATTRIBUTES_ERASERDOWN = 128,
  DIT_HITTESTATTRIBUTES_CONTROLDOWN = 256,
  DIT_HITTESTATTRIBUTES_HASCAPTURE = 512,
  DIT_HITTESTATTRIBUTES_VALID = 1023,
};

typedef struct _CTL_USAGE
{
  /* 0x0000 */ unsigned long cUsageIdentifier;
  /* 0x0004 */ long Padding_191;
  /* 0x0008 */ char** rgpszUsageIdentifier;
} CTL_USAGE, *PCTL_USAGE; /* size: 0x0010 */

typedef struct _CERT_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_192;
  /* 0x0008 */ struct _CTL_USAGE Usage;
} CERT_USAGE_MATCH, *PCERT_USAGE_MATCH; /* size: 0x0018 */

class wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_failfast_policy> >
{
}; /* size: 0x0008 */

enum OCT_BANNED_API
{
  OCT_BANNED_FIRST = 0,
  OCT_BANNED_GetWindowRect = 0,
  OCT_BANNED_ClientToScreen = 1,
  OCT_BANNED_ScreenToClient = 2,
  OCT_BANNED_MapWindowPoints = 3,
  OCT_BANNED_GetDC = 4,
  OCT_BANNED_GetDCEx = 5,
  OCT_BANNED_EnumDisplayMonitors = 6,
  OCT_BANNED_GetSystemMetrics = 7,
  OCT_BANNED_MonitorFromWindow = 8,
  OCT_BANNED_MonitorFromPoint = 9,
  OCT_BANNED_MonitorFromRect = 10,
  OCT_BANNED_GetMonitorInfoW = 11,
  OCT_BANNED_GetDpiForMonitorInternal = 12,
  OCT_BANNED_PhysicalToLogicalPoint = 13,
  OCT_BANNED_LogicalToPhysicalPoint = 14,
  OCT_BANNED_GetCurrentDpiInfo = 15,
  OCT_BANNED_ShellScaling_Window = 16,
  OCT_BANNED_ShellScaling_Monitor = 17,
  OCT_BANNED_ShellScaling_Device = 18,
  OCT_BANNED_LAST = 19,
};

typedef struct _SOURCEFILEW
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ wchar_t* FileName;
} SOURCEFILEW, *PSOURCEFILEW; /* size: 0x0010 */

struct Windows::Foundation::Collections::IMap<__int64,__int64>
{
}; /* size: 0x0008 */

typedef struct _ACE_HEADER
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char AceFlags;
  /* 0x0002 */ unsigned short AceSize;
} ACE_HEADER, *PACE_HEADER; /* size: 0x0004 */

typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_SCOPED_POLICY_ID_ACE, *PSYSTEM_SCOPED_POLICY_ID_ACE; /* size: 0x000c */

enum tagOLECLOSE
{
  OLECLOSE_SAVEIFDIRTY = 0,
  OLECLOSE_NOSAVE = 1,
  OLECLOSE_PROMPTSAVE = 2,
};

struct ISpecifyPropertyPages
{
}; /* size: 0x0008 */

enum SELECTIONMANAGERVALUE
{
  SMV_ITEMSELECTIONSTATES_REALIZED = 0,
  SMV_ITEMSELECTIONSTATES_UNREALIZED = 1,
  SMV_COLLECTIONSELECTIONSTATES_REALIZED = 2,
  SMV_COLLECTIONSELECTIONSTATES_UNREALIZED = 3,
  SMV_SELECTION = 4,
};

struct StringTraits<unsigned short *>
{
}; /* size: 0x0001 */

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ const wchar_t* lpPath;
  /* 0x0010 */ const wchar_t* lpDisplayName;
} WIN_TRUST_SUBJECT_FILE_AND_DISPLAY, *PWIN_TRUST_SUBJECT_FILE_AND_DISPLAY; /* size: 0x0018 */

class wil::details::unique_storage<wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _TP_WAIT* m_ptr;
}; /* size: 0x0008 */

enum tagACTIVATION_FLAGS
{
  ACTVFLAGS_NONE = 0,
  ACTVFLAGS_DISABLE_AAA = 2,
  ACTVFLAGS_ACTIVATE_X86_SERVER = 4,
  ACTVFLAGS_ACTIVATE_X64_SERVER = 8,
  ACTVFLAGS_SERVERSIDE_ACTIVATION = 16,
  ACTVFLAGS_NO_FAILURE_LOG = 32,
  ACTVFLAGS_ENABLE_CLOAKING = 64,
  ACTVFLAGS_REG_CATALOG_ONLY = 256,
  ACTVFLAGS_SXS_CATALOG_ONLY = 512,
  ACTVFLAGS_WINRT_LOCAL_SERVER = 1024,
  ACTVFLAGS_WINRT_PER_USER_OK = 2048,
  ACTVFLAGS_ACTIVATE_PSCLSID_FROM_PACKAGE = 4096,
  ACTVFLAGS_APPCONTAINER = 8192,
  ACTVFLAGS_IS_SXS_CLASS = 16384,
  ACTVFLAGS_BACKGROUND_MIXED_ACTIVATION = 0xffff8000,
  ACTVFLAGS_BACKGROUND_PURE_ACTIVATION = 0x10000,
  ACTVFLAGS_BACKGROUND_SYSTEM_ACTIVATION = 0x20000,
  ACTVFLAGS_DESIGNMODE_ACTIVATION = 0x40000,
  ACTVFLAGS_ACTIVATE_AS_IU = 0x80000,
  ACTVFLAGS_ACTIVATE_SHARED_AAP_SERVER = 0x100000,
  ACTVFLAGS_DISABLE_REMOTE_ACTIVATION = 0x200000,
  ACTVFLAGS_DESIGNMODE_V2_ACTIVATION = 0x400000,
  ACTVFLAGS_ACTIVATE_NATIVE_SERVER = 0x800000,
  ACTVFLAGS_ACTIVATE_ARM32_SERVER = 0x1000000,
  ACTVFLAGS_ACTIVATE_PACKAGED_IMPLEMENTATION_CLASS = 0x2000000,
  ACTVFLAGS_ALLOW_LOWER_TRUST_REGISTRATION = 0x4000000,
};

class Common::AutoBaseHandle<HINSTANCE__ *,&Common::AutoHandleCloseModule<HINSTANCE__ *> >
{
  /* 0x0000 */ struct HINSTANCE__* h;
}; /* size: 0x0008 */

typedef struct _CRYPT_PKCS12_PBE_PARAMS
{
  /* 0x0000 */ int iIterations;
  /* 0x0004 */ unsigned long cbSalt;
} CRYPT_PKCS12_PBE_PARAMS, *PCRYPT_PKCS12_PBE_PARAMS; /* size: 0x0008 */

typedef struct _STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_193;
  /* 0x0008 */ char* Buffer;
} STRING, *PSTRING; /* size: 0x0010 */

struct IPersistFile
{
}; /* size: 0x0008 */

enum PLM_WINDOW_CHANGE
{
  PWC_CREATED = 0,
  PWC_DESTROYED = 1,
  PWC_VISIBLE = 2,
  PWC_HIDDEN = 3,
  PWC_INTERACTIVE = 4,
  PWC_NON_INTERACTIVE = 5,
  PWC_NON_IAM_CREATED = 6,
};

class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0008 */

typedef union _ARM64_NT_NEON128
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 Low;
      /* 0x0008 */ __int64 High;
    }; /* size: 0x0010 */
    /* 0x0000 */ double D[2];
    /* 0x0000 */ float S[4];
    /* 0x0000 */ unsigned short H[8];
    /* 0x0000 */ unsigned char B[16];
  }; /* size: 0x0010 */
} ARM64_NT_NEON128, *PARM64_NT_NEON128; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_129
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_129, *PTAG_UNNAMED_129;

class std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t> > >;

enum PLM_GPU_UTILIZATION_SIMULATION_TYPE
{
  PGUS_HIGH = 0,
  PGUS_LOW = 1,
  PGUS_NONE = 2,
};

typedef struct _RTL_CRITICAL_SECTION
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ void* LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION; /* size: 0x0028 */

class Microsoft::WRL::Wrappers::CriticalSection
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION cs_;
}; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_130
{
  value = 0,
} TAG_UNNAMED_130, *PTAG_UNNAMED_130;

enum SHARE_ACTIVATION_MODE
{
  ACTIVATION_MODE_PRIVATE = 0,
  ACTIVATION_MODE_USER_RO = 1,
  ACTIVATION_MODE_LIBRARY_ADD = 2,
  ACTIVATION_MODE_LIBRARY_REMOVAL = 3,
  ACTIVATION_MODE_OTHER = 4,
};

struct Windows::Foundation::Collections::IIterator_impl<short,1>
{
}; /* size: 0x0008 */

class wil::details::<lambda_6843b55dc6cff76e89c04bc1553212af>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFile *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_131
{
  _Thrd_success = 0,
  _Thrd_nomem = 1,
  _Thrd_timedout = 2,
  _Thrd_busy = 3,
  _Thrd_error = 4,
} TAG_UNNAMED_131, *PTAG_UNNAMED_131;

typedef enum _TAG_UNNAMED_132
{
  _Mtx_plain = 1,
  _Mtx_try = 2,
  _Mtx_timed = 4,
  _Mtx_recursive = 256,
} TAG_UNNAMED_132, *PTAG_UNNAMED_132;

class CClass
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ wchar_t* m_szClsid;
}; /* size: 0x0018 */

class CGenericObject
{
  /* 0x0000 */ class CClass m_class;
  /* 0x0018 */ class CClass m_classLast;
  /* 0x0030 */ class CPres* m_ppres;
  /* 0x0038 */ class CData m_dataNative;
  /* 0x0058 */ int m_fLink;
  /* 0x005c */ int m_fStatic;
  /* 0x0060 */ int m_fNoBlankPres;
  /* 0x0064 */ long Padding_194;
  /* 0x0068 */ wchar_t* m_szTopic;
  /* 0x0070 */ wchar_t* m_szItem;
  /* 0x0078 */ unsigned long m_lnkupdopt;
}; /* size: 0x0080 */

struct std::greater_equal<void>
{
}; /* size: 0x0001 */

enum PROXY_PHASE
{
  PROXY_CALCSIZE = 0,
  PROXY_GETBUFFER = 1,
  PROXY_MARSHAL = 2,
  PROXY_SENDRECEIVE = 3,
  PROXY_UNMARSHAL = 4,
};

class ModernSTAWaitContext;

typedef enum _TAG_UNNAMED_133
{
  _Future_addr = 1,
  _Generic_addr = 3,
  _Iostream_addr = 5,
  _System_addr = 7,
} TAG_UNNAMED_133, *PTAG_UNNAMED_133;

typedef struct _JIT_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwProcessorArchitecture;
  /* 0x0008 */ unsigned long dwThreadID;
  /* 0x000c */ unsigned long dwReserved0;
  /* 0x0010 */ unsigned __int64 lpExceptionAddress;
  /* 0x0018 */ unsigned __int64 lpExceptionRecord;
  /* 0x0020 */ unsigned __int64 lpContextRecord;
} JIT_DEBUG_INFO, *PJIT_DEBUG_INFO; /* size: 0x0028 */

struct wil::details::resource_policy<HSTRING_BUFFER__ *,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,wistd::integral_constant<unsigned __int64,0>,HSTRING_BUFFER__ *,HSTRING_BUFFER__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef enum _PS_MITIGATION_OPTION
{
  PS_MITIGATION_OPTION_NX = 0,
  PS_MITIGATION_OPTION_SEHOP = 1,
  PS_MITIGATION_OPTION_FORCE_RELOCATE_IMAGES = 2,
  PS_MITIGATION_OPTION_HEAP_TERMINATE = 3,
  PS_MITIGATION_OPTION_BOTTOM_UP_ASLR = 4,
  PS_MITIGATION_OPTION_HIGH_ENTROPY_ASLR = 5,
  PS_MITIGATION_OPTION_STRICT_HANDLE_CHECKS = 6,
  PS_MITIGATION_OPTION_WIN32K_SYSTEM_CALL_DISABLE = 7,
  PS_MITIGATION_OPTION_EXTENSION_POINT_DISABLE = 8,
  PS_MITIGATION_OPTION_PROHIBIT_DYNAMIC_CODE = 9,
  PS_MITIGATION_OPTION_CONTROL_FLOW_GUARD = 10,
  PS_MITIGATION_OPTION_BLOCK_NON_MICROSOFT_BINARIES = 11,
  PS_MITIGATION_OPTION_FONT_DISABLE = 12,
  PS_MITIGATION_OPTION_IMAGE_LOAD_NO_REMOTE = 13,
  PS_MITIGATION_OPTION_IMAGE_LOAD_NO_LOW_LABEL = 14,
  PS_MITIGATION_OPTION_IMAGE_LOAD_PREFER_SYSTEM32 = 15,
  PS_MITIGATION_OPTION_RETURN_FLOW_GUARD = 16,
  PS_MITIGATION_OPTION_LOADER_INTEGRITY_CONTINUITY = 17,
  PS_MITIGATION_OPTION_STRICT_CONTROL_FLOW_GUARD = 18,
  PS_MITIGATION_OPTION_RESTRICT_SET_THREAD_CONTEXT = 19,
  PS_MITIGATION_OPTION_ROP_STACKPIVOT = 20,
  PS_MITIGATION_OPTION_ROP_CALLER_CHECK = 21,
  PS_MITIGATION_OPTION_ROP_SIMEXEC = 22,
  PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER = 23,
  PS_MITIGATION_OPTION_EXPORT_ADDRESS_FILTER_PLUS = 24,
  PS_MITIGATION_OPTION_RESTRICT_CHILD_PROCESS_CREATION = 25,
  PS_MITIGATION_OPTION_IMPORT_ADDRESS_FILTER = 26,
  PS_MITIGATION_OPTION_MODULE_TAMPERING_PROTECTION = 27,
  PS_MITIGATION_OPTION_RESTRICT_INDIRECT_BRANCH_PREDICTION = 28,
  PS_MITIGATION_OPTION_SPECULATIVE_STORE_BYPASS_DISABLE = 29,
  PS_MITIGATION_OPTION_ALLOW_DOWNGRADE_DYNAMIC_CODE_POLICY = 30,
  PS_MITIGATION_OPTION_CET_USER_SHADOW_STACKS = 31,
  PS_MITIGATION_OPTION_USER_CET_SET_CONTEXT_IP_VALIDATION = 32,
  PS_MITIGATION_OPTION_BLOCK_NON_CET_BINARIES = 33,
  PS_MITIGATION_OPTION_XTENDED_CONTROL_FLOW_GUARD = 34,
  PS_MITIGATION_OPTION_POINTER_AUTH_USER_IP = 35,
  PS_MITIGATION_OPTION_CET_DYNAMIC_APIS_OUT_OF_PROC_ONLY = 36,
  PS_MITIGATION_OPTION_REDIRECTION_TRUST = 37,
  PS_MITIGATION_OPTION_RESTRICT_CORE_SHARING = 38,
} PS_MITIGATION_OPTION, *PPS_MITIGATION_OPTION;

struct Windows::Foundation::Collections::IMap_impl<__int64,double>
{
}; /* size: 0x0008 */

class wil::details::<lambda_d452d2458692118f3227c5880e0fb0e0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<int,int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned char>
{
}; /* size: 0x0008 */

enum ITEMSVIEWSPYVALUE
{
  IVV_FOCUSEDITEM = 0,
  IVV_FIRSTPAGERESULTS_STATE = 1,
  IVV_SELECTIONMANAGER = 2,
  IVV_EVENTQUEUE_SIZE = 3,
  IVV_VIRTUALUIGROUPITEM_COLLECTION = 4,
  IVV_PROCESSID = 5,
  IVV_THREADID = 6,
  IVV_LINESCROLLER = 7,
};

typedef enum _TAG_UNNAMED_134
{
  value = 0,
} TAG_UNNAMED_134, *PTAG_UNNAMED_134;

struct CDefClient::COleClientSiteImpl
{
  /* 0x0000 */ long Padding_195[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

struct ILockBytes
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *,1>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_135
{
  value = 1,
} TAG_UNNAMED_135, *PTAG_UNNAMED_135;

typedef class _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_196[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>, *PTlgActivityBase<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType>,0,5>; /* size: 0x0028 */

enum DELAYED_RETRIEVAL_TYPE
{
  DRT_FILEITEM = 0,
  DRT_PREFETCHEDTHUMBNAIL = 1,
  DRT_PREFETCHEDPROPERTIES = 2,
  DRT_PROPERTIES = 3,
  DRT_MUSICPROPERTIES = 4,
  DRT_IMAGEPROPERTIES = 5,
  DRT_VIDEOPROPERTIES = 6,
  DRT_DOCUMENTPROPERTIES = 7,
  DRT_BASICPROPERTIES = 8,
  DRT_REMOTEFILEITEM = 9,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_136
{
  value = 1,
} TAG_UNNAMED_136, *PTAG_UNNAMED_136;

struct wistd::default_delete<_GUID [0]>
{
}; /* size: 0x0001 */

enum CHK
{
  chkDdeSrvr = 4660,
  chkDefClient = 22136,
};

class CDdeServerCallMgr
{
  /* 0x0000 */ long Padding_197[6];
  /* 0x0018 */ class CDefClient* m_pDefClient;
  /* 0x0020 */ class CDDEServer* m_pDDEServer;
}; /* size: 0x0028 */

struct EXECUTEACK
{
  /* 0x0000 */ int f;
  /* 0x0004 */ long Padding_198;
  /* 0x0008 */ void* hdata;
  /* 0x0010 */ struct HWND__* hwndFrom;
  /* 0x0018 */ struct HWND__* hwndTo;
}; /* size: 0x0020 */

struct CDefClient::CUnknownImpl
{
  /* 0x0000 */ long Padding_199[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

struct CDefClient::CAdviseSinkImpl
{
  /* 0x0000 */ long Padding_200[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

class CDefClient
{
  /* 0x0000 */ enum CHK m_chk;
  /* 0x0004 */ long Padding_201;
  /* 0x0008 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0030 */ enum tagSERVERCALLEX m_CallState;
  /* 0x0034 */ long Padding_202;
  /* 0x0038 */ struct IUnknown* m_pUnkOuter;
  /* 0x0040 */ struct IOleObject* m_lpoleObj;
  /* 0x0048 */ struct IDataObject* m_lpdataObj;
  /* 0x0050 */ int m_bCreateInst;
  /* 0x0054 */ int m_bTerminate;
  /* 0x0058 */ int m_termNo;
  /* 0x005c */ unsigned short m_aItem;
  /* 0x005e */ char Padding_203[2];
  /* 0x0060 */ void* m_hcli;
  /* 0x0068 */ class CDefClient* m_lpNextItem;
  /* 0x0070 */ int m_bContainer;
  /* 0x0074 */ int m_cRef;
  /* 0x0078 */ struct HWND__* m_hwnd;
  /* 0x0080 */ void* m_hdevInfo;
  /* 0x0088 */ void* m_hcliInfo;
  /* 0x0090 */ int m_fDidRealSetHostNames;
  /* 0x0094 */ int m_fDidSetClientSite;
  /* 0x0098 */ int m_fGotDdeAdvise;
  /* 0x009c */ int m_fCreatedNotConnected;
  /* 0x00a0 */ int m_fInOnClose;
  /* 0x00a4 */ int m_fInOleSave;
  /* 0x00a8 */ struct EXECUTEACK m_ExecuteAck;
  /* 0x00c8 */ unsigned long m_dwConnectionOleObj;
  /* 0x00cc */ unsigned long m_dwConnectionDataObj;
  /* 0x00d0 */ struct ILockBytes* m_plkbytNative;
  /* 0x00d8 */ struct IStorage* m_pstgNative;
  /* 0x00e0 */ int m_fRunningInSDI;
  /* 0x00e4 */ long Padding_204;
  /* 0x00e8 */ class CDDEServer* m_psrvrParent;
  /* 0x00f0 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x00f8 */ int m_fGotStdCloseDoc;
  /* 0x00fc */ int m_fGotEditNoPokeNativeYet;
  /* 0x0100 */ int m_fLocked;
  /* 0x0104 */ int m_fCallData;
  /* 0x0108 */ int m_fEmbed;
  /* 0x010c */ int m_cClients;
  /* 0x0110 */ class CDefClient* m_pdoc;
  /* 0x0118 */ struct CDefClient::CUnknownImpl m_Unknown;
  /* 0x0128 */ struct CDefClient::COleClientSiteImpl m_OleClientSite;
  /* 0x0138 */ struct CDefClient::CAdviseSinkImpl m_AdviseSink;
}; /* size: 0x0148 */

typedef struct _GENERIC_MAPPING
{
  /* 0x0000 */ unsigned long GenericRead;
  /* 0x0004 */ unsigned long GenericWrite;
  /* 0x0008 */ unsigned long GenericExecute;
  /* 0x000c */ unsigned long GenericAll;
} GENERIC_MAPPING, *PGENERIC_MAPPING; /* size: 0x0010 */

class wil::details::<lambda_58dd77efe875d0a715711520f889fc12>
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

enum ACTIVATION_OBJECT_STATE
{
  AOS_NONE = 0,
  AOS_ENABLED = 1,
  AOS_SUPPRESS_SPATIAL = 2,
  AOS_FOREGROUND = 4,
};

class wil::details::<lambda_34f7ec30e17aba67efa986c1e35470a3>
{
}; /* size: 0x0001 */

typedef enum _tagSHARE_EVENT
{
  SHARE_EVT_ITEM_SHARED = 0,
  SHARE_EVT_ITEM_UNSHARED = 1,
  SHARE_EVT_ERR_ITEM_LOCATION = 2,
  SHARE_EVT_ERR_NO_WRITE_DAC = 3,
  SHARE_EVT_ERR_INHERITED_PERM = 4,
  SHARE_EVT_ERR_CORRUPTED_LIBRARY = 5,
  SHARE_EVT_ERR_EXCLUSION_FAILED = 6,
  SHARE_EVT_ERR_ROOTDRIVE = 7,
  SHARE_EVT_ERR_SYSTEM_LOCATION = 8,
  SHARE_EVT_ERR_FOLDER_UNAVAILABLE_SCOPE = 9,
  SHARE_EVT_WARN_PUBLISH_FAILED = 10,
  SHARE_EVT_WARN_UNPUBLISH_FAILED = 11,
  SHARE_EVT_WARN_UPDATE_FAILED = 12,
  SHARE_EVT_WARN_NOT_SUPPORTED_SCOPE = 13,
  SHARE_EVT_WARN_FILESYSTEM_ACLS_NOT_SUPPORTED = 14,
  SHARE_EVT_WARN_ITEM_FILTERED = 15,
} tagSHARE_EVENT, *PtagSHARE_EVENT;

struct IDummyHICONIncluder
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComClassIterator> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IComClassIterator>* ptr_;
}; /* size: 0x0008 */

enum INPUTDELEGATION_MODE_FLAGS
{
  IDLM_OFF = 0,
  IDLM_KEYBOARD = 1,
  IDLM_SPATIAL = 2,
  IDLM_VALID_FLAGS = 3,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >
{
}; /* size: 0x0008 */

struct IIdentifyHive
{
}; /* size: 0x0008 */

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
{
  /* 0x0000 */ unsigned long PropagationCookie;
  /* 0x0004 */ struct _GUID UOW;
  /* 0x0014 */ struct _GUID TmIdentity;
  /* 0x0024 */ unsigned long BufferLength;
} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT; /* size: 0x0028 */

enum WINDOW_ARRANGEMENT_OPTIONS
{
  WAI_NONE = 0,
  WAI_SAFETYZONE = 1,
};

typedef struct __vc_attributes::sourceAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::sourceAttribute, *P_vc_attributes::sourceAttribute; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::Storage::Search::IStorageQueryResultBase *,IInspectable *>
{
}; /* size: 0x0008 */

enum MODE_CHANGE_REASON
{
  MCR_NONE = 0,
  MCR_ACTIVATION = 1,
  MCR_MONITORCHANGE = 2,
  MCR_OWNEDWINDOWCREATED = 3,
  MCR_SHOWDESKTOP = 4,
  MCR_ZBIDCHANGE = 5,
  MCR_PRESENTEDWINDOWCHANGED = 6,
  MCR_SIMULATED_ACTIVATION = 7,
  MCR_CROSS_MONITOR_ACTIVATION = 8,
};

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>
{
}; /* size: 0x0001 */

enum WINDOW_SIZE_PROGRESS_REQUEST
{
  WSPR_NONE = 0,
  WSPR_UPDATE = 1,
  WSPR_COMPLETE = 2,
};

typedef struct _SYSTEM_CPU_SET_TAG_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Tag;
  /* 0x0008 */ unsigned __int64 CpuSets[1];
} SYSTEM_CPU_SET_TAG_INFORMATION, *PSYSTEM_CPU_SET_TAG_INFORMATION; /* size: 0x0010 */

class wistd::__function::__base<void __cdecl(void)>
{
}; /* size: 0x0008 */

struct wistd::__libcpp_is_integral<unsigned long>
{
}; /* size: 0x0001 */

enum INPUT_DESTINATION_ROUTING_MODE
{
  IDRM_DEFAULT = 0,
  IDRM_OBSERVE = 1,
  IDRM_ISM = 2,
  IDRM_ROUTE_TO_MT = 3,
  IDRM_OBSERVE_RAW_ONLY = 4,
};

enum DivisionState
{
  DivisionState_OK = 0,
  DivisionState_UnsignedSigned = 1,
  DivisionState_SignedUnsigned32 = 2,
  DivisionState_SignedUnsigned64 = 3,
  DivisionState_SignedUnsigned = 4,
  DivisionState_SignedSigned = 5,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >
{
}; /* size: 0x0008 */

struct FMTCACHE
{
  /* 0x0000 */ struct tagFORMATETC fmt;
  /* 0x0020 */ unsigned long dwAspects;
  /* 0x0024 */ int fUseMe;
}; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>
{
}; /* size: 0x0008 */

struct wistd::__is_referenceable_impl
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_137
{
  value = 0,
} TAG_UNNAMED_137, *PTAG_UNNAMED_137;

class wil::unique_struct<tagSTGMEDIUM,void (__cdecl*)(tagSTGMEDIUM *),&ReleaseStgMedium,std::nullptr_t,0>
{
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_138
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 1,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_138, *PTAG_UNNAMED_138;

struct Windows::Foundation::Collections::IMap_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_139
{
  value = 0,
} TAG_UNNAMED_139, *PTAG_UNNAMED_139;

struct Windows::Foundation::IReference<Windows::Foundation::DateTime>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_140
{
  value = 0,
} TAG_UNNAMED_140, *PTAG_UNNAMED_140;

typedef struct _OMAP
{
  /* 0x0000 */ unsigned long rva;
  /* 0x0004 */ unsigned long rvaTo;
} OMAP, *POMAP; /* size: 0x0008 */

class std::_Ref_count_base
{
  /* 0x0000 */ long Padding_205[2];
  /* 0x0008 */ unsigned long _Uses;
  /* 0x000c */ unsigned long _Weaks;
}; /* size: 0x0010 */

enum ComparisonMethod
{
  ComparisonMethod_Ok = 0,
  ComparisonMethod_CastInt = 1,
  ComparisonMethod_CastInt64 = 2,
  ComparisonMethod_UnsignedT = 3,
  ComparisonMethod_UnsignedU = 4,
};

struct IPropertyBag
{
}; /* size: 0x0008 */

enum Windows::System::UserAgeConsentResult
{
  UserAgeConsentResult_NotEnforced = 0,
  UserAgeConsentResult_Included = 1,
  UserAgeConsentResult_NotIncluded = 2,
  UserAgeConsentResult_Unknown = 3,
  UserAgeConsentResult_Ambiguous = 4,
};

struct DBGHELP_DATA_REPORT_STRUCT
{
  /* 0x0000 */ const wchar_t* pBinPathNonExist;
  /* 0x0008 */ const wchar_t* pSymbolPathNonExist;
}; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _WNF_USER_SUBSCRIPTION* m_ptr;
}; /* size: 0x0008 */

enum tagDISCARDCACHE
{
  DISCARDCACHE_SAVEIFDIRTY = 0,
  DISCARDCACHE_NOSAVE = 1,
};

struct Windows::Foundation::Collections::is_pointer<Windows::System::IUser *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_141
{
  isFloat = 0,
} TAG_UNNAMED_141, *PTAG_UNNAMED_141;

typedef struct _UNICODE_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_206;
  /* 0x0008 */ wchar_t* Buffer;
} UNICODE_STRING, *PUNICODE_STRING; /* size: 0x0010 */

typedef struct _CURDIR
{
  /* 0x0000 */ struct _UNICODE_STRING DosPath;
  /* 0x0010 */ void* Handle;
} CURDIR, *PCURDIR; /* size: 0x0018 */

typedef struct _RTL_DRIVE_LETTER_CURDIR
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING DosPath;
} RTL_DRIVE_LETTER_CURDIR, *PRTL_DRIVE_LETTER_CURDIR; /* size: 0x0018 */

typedef struct _RTL_USER_PROCESS_PARAMETERS
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ void* ConsoleHandle;
  /* 0x0018 */ unsigned long ConsoleFlags;
  /* 0x001c */ long Padding_207;
  /* 0x0020 */ void* StandardInput;
  /* 0x0028 */ void* StandardOutput;
  /* 0x0030 */ void* StandardError;
  /* 0x0038 */ struct _CURDIR CurrentDirectory;
  /* 0x0050 */ struct _UNICODE_STRING DllPath;
  /* 0x0060 */ struct _UNICODE_STRING ImagePathName;
  /* 0x0070 */ struct _UNICODE_STRING CommandLine;
  /* 0x0080 */ void* Environment;
  /* 0x0088 */ unsigned long StartingX;
  /* 0x008c */ unsigned long StartingY;
  /* 0x0090 */ unsigned long CountX;
  /* 0x0094 */ unsigned long CountY;
  /* 0x0098 */ unsigned long CountCharsX;
  /* 0x009c */ unsigned long CountCharsY;
  /* 0x00a0 */ unsigned long FillAttribute;
  /* 0x00a4 */ unsigned long WindowFlags;
  /* 0x00a8 */ unsigned long ShowWindowFlags;
  /* 0x00ac */ long Padding_208;
  /* 0x00b0 */ struct _UNICODE_STRING WindowTitle;
  /* 0x00c0 */ struct _UNICODE_STRING DesktopInfo;
  /* 0x00d0 */ struct _UNICODE_STRING ShellInfo;
  /* 0x00e0 */ struct _UNICODE_STRING RuntimeData;
  /* 0x00f0 */ struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  /* 0x03f0 */ unsigned __int64 EnvironmentSize;
  /* 0x03f8 */ unsigned __int64 EnvironmentVersion;
  /* 0x0400 */ void* PackageDependencyData;
  /* 0x0408 */ unsigned long ProcessGroupId;
  /* 0x040c */ unsigned long LoaderThreads;
  /* 0x0410 */ struct _UNICODE_STRING RedirectionDllName;
  /* 0x0420 */ struct _UNICODE_STRING HeapPartitionName;
  /* 0x0430 */ unsigned __int64* DefaultThreadpoolCpuSetMasks;
  /* 0x0438 */ unsigned long DefaultThreadpoolCpuSetMaskCount;
  /* 0x043c */ unsigned long DefaultThreadpoolThreadMaximum;
  /* 0x0440 */ unsigned long HeapMemoryTypeMask;
  /* 0x0444 */ long __PADDING__[1];
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS; /* size: 0x0448 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_142
{
  value = 1,
} TAG_UNNAMED_142, *PTAG_UNNAMED_142;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0001 */

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0,
  NEC98x86 = 1,
  EndAlternatives = 2,
} ALTERNATIVE_ARCHITECTURE_TYPE, *PALTERNATIVE_ARCHITECTURE_TYPE;

class Microsoft::WRL::Wrappers::SRWLock
{
  /* 0x0000 */ struct _RTL_SRWLOCK SRWLock_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_143
{
  value = 1,
} TAG_UNNAMED_143, *PTAG_UNNAMED_143;

typedef struct __vcrt_va_list_is_reference<char const *>
{
} _vcrt_va_list_is_reference<char const *>, *P_vcrt_va_list_is_reference<char const *>; /* size: 0x0001 */

class wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_exception_policy> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_144
{
  value = 1,
} TAG_UNNAMED_144, *PTAG_UNNAMED_144;

typedef enum _TAG_UNNAMED_145
{
  value = 0,
} TAG_UNNAMED_145, *PTAG_UNNAMED_145;

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS
{
  JournalCreateKey = 0,
  JournalDeleteKey = 1,
  JournalRenameKey = 2,
  JournalSetValue = 3,
  JournalDeleteValue = 4,
  JournalSetKeySecurity = 5,
  JournalSetKeyUserFlags = 6,
  JournalSetLastWriteTime = 7,
  JournalBeginTransaction = 8,
  JournalCommitTransaction = 9,
  JournalAbortTransaction = 10,
  MaxJournalChangeAction = 11,
} JOURNAL_CHANGE_INFORMATION_CLASS, *PJOURNAL_CHANGE_INFORMATION_CLASS;

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_209;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long SecurityDescriptorLength;
  /* 0x002c */ long Padding_210;
  /* 0x0030 */ void* SecurityDescriptor;
  /* 0x0038 */ unsigned short ClassLength;
  /* 0x003a */ char Padding_211[6];
  /* 0x0040 */ void* ClassData;
  /* 0x0048 */ unsigned char SymbolicLink;
  /* 0x0049 */ char __PADDING__[7];
} JOURNAL_CREATE_DELETE_KEY_INFORMATION, *PJOURNAL_CREATE_DELETE_KEY_INFORMATION; /* size: 0x0050 */

typedef enum _TAG_UNNAMED_146
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_146, *PTAG_UNNAMED_146;

struct std::atomic<unsigned long>
{
  /* 0x0000 */ const BOOL is_always_lock_free;
  /* 0x0001 */ char __PADDING__[3];
}; /* size: 0x0004 */

class CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_212[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_213[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_147
{
  value = 0,
} TAG_UNNAMED_147, *PTAG_UNNAMED_147;

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> const >;

enum WilFailureProperties
{
  None = 0,
  IsEnabled = 1,
  AntiDefault = 2,
  FirstEnablementCheck = 4,
  PeriodicUsage = 16,
  ExplicitUsage = 32,
  ViolatesAssert = 64,
  RequestFailFast = 8192,
  RequestSuppressTelemetry = 16384,
  RequestDebugBreak = 0xffff8000,
};

class DefaultIBindStatusCallback
{
  /* 0x0000 */ long Padding_214[8];
  /* 0x0020 */ struct IBindStatusCallback* m_pibsc;
  /* 0x0028 */ long m_lRef;
  /* 0x002c */ long Padding_215;
  /* 0x0030 */ struct IBinding* m_pBinding;
  /* 0x0038 */ struct HWND__* m_hwndParent;
  /* 0x0040 */ struct HWND__* m_hDlg;
  /* 0x0048 */ unsigned long m_ulProgress;
  /* 0x004c */ unsigned long m_ulProgressMax;
  /* 0x0050 */ wchar_t m_szStatusText[260];
  /* 0x0258 */ int m_fShown;
}; /* size: 0x0260 */

struct Windows::Foundation::IReference<double>
{
}; /* size: 0x0008 */

enum Windows::Storage::FileAttributes
{
  FileAttributes_Normal = 0,
  FileAttributes_ReadOnly = 1,
  FileAttributes_Directory = 16,
  FileAttributes_Archive = 32,
  FileAttributes_Temporary = 256,
  FileAttributes_LocallyIncomplete = 512,
};

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wil::window_dc>
{
}; /* size: 0x0001 */

enum WilFailureSubscriptionIdKind
{
  None = 0,
  TIP = 1,
  Fix = 2,
  Feature = 3,
};

struct wil::details::close_invoke_helper<1,long (__cdecl*)(HSTRING_BUFFER__ *),&WindowsDeleteStringBuffer,HSTRING_BUFFER__ *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_148
{
  value = 1,
} TAG_UNNAMED_148, *PTAG_UNNAMED_148;

typedef struct _callframeinternal_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1257];
  /* 0x04eb */ char __PADDING__[1];
} callframeinternal_MIDL_TYPE_FORMAT_STRING, *Pcallframeinternal_MIDL_TYPE_FORMAT_STRING; /* size: 0x04ec */

enum SafeIntError
{
  SafeIntNoError = 0,
  SafeIntArithmeticOverflow = 1,
  SafeIntDivideByZero = 2,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>
{
}; /* size: 0x0008 */

typedef enum _FS_BPIO_OUTFLAGS
{
  FSBPIO_OUTFL_None = 0,
  FSBPIO_OUTFL_VOLUME_STACK_BYPASS_PAUSED = 1,
  FSBPIO_OUTFL_STREAM_BYPASS_PAUSED = 2,
  FSBPIO_OUTFL_FILTER_ATTACH_BLOCKED = 4,
  FSBPIO_OUTFL_COMPATIBLE_STORAGE_DRIVER = 8,
} FS_BPIO_OUTFLAGS, *PFS_BPIO_OUTFLAGS;

typedef struct _CRYPT_PROVIDER_CERT
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_216;
  /* 0x0008 */ const struct _CERT_CONTEXT* pCert;
  /* 0x0010 */ int fCommercial;
  /* 0x0014 */ int fTrustedRoot;
  /* 0x0018 */ int fSelfSigned;
  /* 0x001c */ int fTestCert;
  /* 0x0020 */ unsigned long dwRevokedReason;
  /* 0x0024 */ unsigned long dwConfidence;
  /* 0x0028 */ unsigned long dwError;
  /* 0x002c */ long Padding_217;
  /* 0x0030 */ struct _CTL_CONTEXT* pTrustListContext;
  /* 0x0038 */ int fTrustListSignerCert;
  /* 0x003c */ long Padding_218;
  /* 0x0040 */ const struct _CTL_CONTEXT* pCtlContext;
  /* 0x0048 */ unsigned long dwCtlError;
  /* 0x004c */ int fIsCyclic;
  /* 0x0050 */ struct _CERT_CHAIN_ELEMENT* pChainElement;
} CRYPT_PROVIDER_CERT, *PCRYPT_PROVIDER_CERT; /* size: 0x0058 */

struct wil::hlocal_secure_deleter
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_149
{
  value = 0,
} TAG_UNNAMED_149, *PTAG_UNNAMED_149;

enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags
{
  None = 0,
  SuppressExceptions = 1,
  ForceExceptions = 2,
  UseSetErrorInfo = 4,
  SuppressSetErrorInfo = 8,
};

struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

struct tagEMRSCALEVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long xNum;
  /* 0x000c */ long xDenom;
  /* 0x0010 */ long yNum;
  /* 0x0014 */ long yDenom;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0001 */

struct NCRYPT_TPM_LOADABLE_KEY_BLOB_HEADER
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long cbHeader;
  /* 0x0008 */ unsigned long cbPublic;
  /* 0x000c */ unsigned long cbPrivate;
  /* 0x0010 */ unsigned long cbName;
}; /* size: 0x0014 */

typedef enum _TAG_UNNAMED_150
{
  __the_value = 0,
} TAG_UNNAMED_150, *PTAG_UNNAMED_150;

typedef struct _CRYPT_PROVIDER_SGNR
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _FILETIME sftVerifyAsOf;
  /* 0x000c */ unsigned long csCertChain;
  /* 0x0010 */ struct _CRYPT_PROVIDER_CERT* pasCertChain;
  /* 0x0018 */ unsigned long dwSignerType;
  /* 0x001c */ long Padding_219;
  /* 0x0020 */ struct _CMSG_SIGNER_INFO* psSigner;
  /* 0x0028 */ unsigned long dwError;
  /* 0x002c */ unsigned long csCounterSigners;
  /* 0x0030 */ struct _CRYPT_PROVIDER_SGNR* pasCounterSigners;
  /* 0x0038 */ const struct _CERT_CHAIN_CONTEXT* pChainContext;
} CRYPT_PROVIDER_SGNR, *PCRYPT_PROVIDER_SGNR; /* size: 0x0040 */

typedef enum _MACHINE_ATTRIBUTES
{
  UserEnabled = 1,
  KernelEnabled = 2,
  Wow64Container = 4,
} MACHINE_ATTRIBUTES, *PMACHINE_ATTRIBUTES;

typedef struct _CERT_PUBLIC_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB PublicKey;
} CERT_PUBLIC_KEY_INFO, *PCERT_PUBLIC_KEY_INFO; /* size: 0x0030 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwOriginatorChoice;
  union
  {
    /* 0x0008 */ struct _CERT_ID OriginatorCertId;
    /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0030 */
  /* 0x0038 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0060 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0064 */ long Padding_220;
  /* 0x0068 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_INFO, *PCMSG_KEY_AGREE_RECIPIENT_INFO; /* size: 0x0070 */

class Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler>
{
  /* 0x0000 */ struct Windows::Foundation::IAsyncActionCompletedHandler* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >
{
  /* 0x0000 */ long Padding_221[4];
  /* 0x0010 */ long cCallbackMade_;
  /* 0x0014 */ long cCompleteDelegateAssigned_;
  /* 0x0018 */ class Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler> completeDelegate_;
  /* 0x0020 */ void* completeDelegateBucketAssist_;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IRestrictedErrorInfo> errorInfo_;
  /* 0x0030 */ enum Microsoft::WRL::Details::AsyncStatusInternal currentStatus_;
  /* 0x0034 */ volatile HRESULT errorCode_;
  /* 0x0038 */ unsigned int id_;
  /* 0x003c */ long Padding_222;
  /* 0x0040 */ void* asyncOperationBucketAssist_;
}; /* size: 0x0048 */

class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_45abd8094c1017b7e15a72f54b22a4ba>
{
  /* 0x0000 */ struct HREG& hregTlbId;
}; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_45abd8094c1017b7e15a72f54b22a4ba> >
{
  /* 0x0000 */ class TryGetTypeInfoFromIIDViaRegistry::__l2::<lambda_45abd8094c1017b7e15a72f54b22a4ba> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

class wil::get_module_reference_for_thread::__l2::<lambda_2354d0eba41c0ae15d8f7cce2ec3a716>;

class wil::details::lambda_call<<lambda_2354d0eba41c0ae15d8f7cce2ec3a716> >
{
  /* 0x0000 */ class wil::get_module_reference_for_thread::__l2::<lambda_2354d0eba41c0ae15d8f7cce2ec3a716> m_lambda;
  /* 0x0000 */ long Padding_223[2];
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IKeyValuePair<_GUID,bool>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_151
{
  value = 1,
} TAG_UNNAMED_151, *PTAG_UNNAMED_151;

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::UIDeactivate::__l2::<lambda_e225fcb61db02045a776fc8c7ed2b6cf>
{
}; /* size: 0x0001 */

typedef enum _NT_READ_FLAGS
{
  NT_READ_FLAG_NONE = 0,
} NT_READ_FLAGS, *PNT_READ_FLAGS;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_TELEMETRY_ID_INFORMATION
{
  /* 0x0000 */ unsigned long HeaderSize;
  /* 0x0004 */ unsigned long ProcessId;
  /* 0x0008 */ unsigned __int64 ProcessStartKey;
  /* 0x0010 */ unsigned __int64 CreateTime;
  /* 0x0018 */ unsigned __int64 CreateInterruptTime;
  /* 0x0020 */ unsigned __int64 CreateUnbiasedInterruptTime;
  /* 0x0028 */ unsigned __int64 ProcessSequenceNumber;
  /* 0x0030 */ unsigned __int64 SessionCreateTime;
  /* 0x0038 */ unsigned long SessionId;
  /* 0x003c */ unsigned long BootId;
  /* 0x0040 */ unsigned long ImageChecksum;
  /* 0x0044 */ unsigned long ImageTimeDateStamp;
  /* 0x0048 */ unsigned long UserSidOffset;
  /* 0x004c */ unsigned long ImagePathOffset;
  /* 0x0050 */ unsigned long PackageNameOffset;
  /* 0x0054 */ unsigned long RelativeAppNameOffset;
  /* 0x0058 */ unsigned long CommandLineOffset;
  /* 0x005c */ long __PADDING__[1];
} PROCESS_TELEMETRY_ID_INFORMATION, *PPROCESS_TELEMETRY_ID_INFORMATION; /* size: 0x0060 */

typedef enum _TAG_UNNAMED_152
{
  value = 1,
} TAG_UNNAMED_152, *PTAG_UNNAMED_152;

typedef enum _TAG_UNNAMED_153
{
  value = 1,
} TAG_UNNAMED_153, *PTAG_UNNAMED_153;

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumFORMATETC>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_154
{
  value = 1,
} TAG_UNNAMED_154, *PTAG_UNNAMED_154;

struct HSTRING_HEADER
{
  union
  {
    union
    {
      /* 0x0000 */ void* Reserved1;
      /* 0x0000 */ char Reserved2[24];
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Reserved;
}; /* size: 0x0018 */

class Windows::Internal::StringReference
{
  /* 0x0000 */ struct HSTRING__* _hstring;
  /* 0x0008 */ struct HSTRING_HEADER _header;
}; /* size: 0x0020 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Uri *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_155
{
  value = 0,
} TAG_UNNAMED_155, *PTAG_UNNAMED_155;

class Microsoft::WRL::Wrappers::HStringReference
{
  /* 0x0000 */ struct HSTRING_HEADER header_;
  /* 0x0018 */ struct HSTRING__* hstr_;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::VectorChangedEventHandler<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

enum tagEXTCONN
{
  EXTCONN_STRONG = 1,
  EXTCONN_WEAK = 2,
  EXTCONN_CALLABLE = 4,
};

class CArray<CCacheNode>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_224;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CCacheNode>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<18,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17> >
{
} tlgDataDescInit<_tlgIndexSequence<18,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17> >, *PtlgDataDescInit<_tlgIndexSequence<18,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17> >; /* size: 0x0001 */

typedef enum _EVENT_INFO_CLASS
{
  EventProviderBinaryTrackInfo = 0,
  EventProviderSetReserved1 = 1,
  EventProviderSetTraits = 2,
  EventProviderUseDescriptorType = 3,
  MaxEventInfo = 4,
} EVENT_INFO_CLASS, *PEVENT_INFO_CLASS;

typedef struct _CRL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0010 */ struct _FILETIME RevocationDate;
  /* 0x0018 */ unsigned long cExtension;
  /* 0x001c */ long Padding_225;
  /* 0x0020 */ struct _CERT_EXTENSION* rgExtension;
} CRL_ENTRY, *PCRL_ENTRY; /* size: 0x0028 */

struct ICallInterceptor
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_156
{
  value = 1,
} TAG_UNNAMED_156, *PTAG_UNNAMED_156;

typedef enum _LINK_TRACKING_INFORMATION_TYPE
{
  NtfsLinkTrackingInformation = 0,
  DfsLinkTrackingInformation = 1,
} LINK_TRACKING_INFORMATION_TYPE, *PLINK_TRACKING_INFORMATION_TYPE;

typedef struct _LINK_TRACKING_INFORMATION
{
  /* 0x0000 */ enum _LINK_TRACKING_INFORMATION_TYPE Type;
  /* 0x0004 */ unsigned char VolumeId[16];
} LINK_TRACKING_INFORMATION, *PLINK_TRACKING_INFORMATION; /* size: 0x0014 */

typedef enum _TAG_UNNAMED_157
{
  value = 0,
} TAG_UNNAMED_157, *PTAG_UNNAMED_157;

typedef struct _CERT_SELECT_CRITERIA
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long cPara;
  /* 0x0008 */ void** ppPara;
} CERT_SELECT_CRITERIA, *PCERT_SELECT_CRITERIA; /* size: 0x0010 */

enum std::io_errc
{
  stream = 1,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *,1>
{
}; /* size: 0x0008 */

typedef struct _MEMORY_RANGE_ENTRY
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ unsigned __int64 NumberOfBytes;
} MEMORY_RANGE_ENTRY, *PMEMORY_RANGE_ENTRY; /* size: 0x0010 */

enum Windows::ApplicationModel::Background::BackgroundTaskCancellationReason
{
  BackgroundTaskCancellationReason_Abort = 0,
  BackgroundTaskCancellationReason_Terminating = 1,
  BackgroundTaskCancellationReason_LoggingOff = 2,
  BackgroundTaskCancellationReason_ServicingUpdate = 3,
  BackgroundTaskCancellationReason_IdleTask = 4,
  BackgroundTaskCancellationReason_Uninstall = 5,
  BackgroundTaskCancellationReason_ConditionLoss = 6,
  BackgroundTaskCancellationReason_SystemPolicy = 7,
  BackgroundTaskCancellationReason_QuietHoursEntered = 8,
  BackgroundTaskCancellationReason_ExecutionTimeExceeded = 9,
  BackgroundTaskCancellationReason_ResourceRevocation = 10,
  BackgroundTaskCancellationReason_EnergySaver = 11,
};

typedef struct _MINIDUMP_SYSTEM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long TimerResolution;
  /* 0x0004 */ unsigned long PageSize;
  /* 0x0008 */ unsigned long NumberOfPhysicalPages;
  /* 0x000c */ unsigned long LowestPhysicalPageNumber;
  /* 0x0010 */ unsigned long HighestPhysicalPageNumber;
  /* 0x0014 */ unsigned long AllocationGranularity;
  /* 0x0018 */ unsigned __int64 MinimumUserModeAddress;
  /* 0x0020 */ unsigned __int64 MaximumUserModeAddress;
  /* 0x0028 */ unsigned __int64 ActiveProcessorsAffinityMask;
  /* 0x0030 */ unsigned long NumberOfProcessors;
} MINIDUMP_SYSTEM_BASIC_INFORMATION, *PMINIDUMP_SYSTEM_BASIC_INFORMATION; /* size: 0x0034 */

class Windows::Internal::CoTaskMemPolicy<unsigned short>
{
}; /* size: 0x0001 */

struct tagBITMAPCOREHEADER
{
  /* 0x0000 */ unsigned long bcSize;
  /* 0x0004 */ unsigned short bcWidth;
  /* 0x0006 */ unsigned short bcHeight;
  /* 0x0008 */ unsigned short bcPlanes;
  /* 0x000a */ unsigned short bcBitCount;
}; /* size: 0x000c */

struct tagRGBTRIPLE
{
  /* 0x0000 */ unsigned char rgbtBlue;
  /* 0x0001 */ unsigned char rgbtGreen;
  /* 0x0002 */ unsigned char rgbtRed;
}; /* size: 0x0003 */

struct tagBITMAPCOREINFO
{
  /* 0x0000 */ struct tagBITMAPCOREHEADER bmciHeader;
  /* 0x000c */ struct tagRGBTRIPLE bmciColors[1];
  /* 0x000f */ char __PADDING__[1];
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_158
{
  value = 1,
} TAG_UNNAMED_158, *PTAG_UNNAMED_158;

typedef enum _TAG_UNNAMED_159
{
  value = 1,
} TAG_UNNAMED_159, *PTAG_UNNAMED_159;

typedef struct _XSTATE_CONFIGURATION
{
  /* 0x0000 */ unsigned __int64 EnabledFeatures;
  /* 0x0008 */ unsigned __int64 EnabledVolatileFeatures;
  /* 0x0010 */ unsigned long Size;
  union
  {
    /* 0x0014 */ unsigned long ControlFlags;
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned long OptimizedSave : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned long CompactionEnabled : 1; /* bit position: 1 */
      /* 0x0014 */ unsigned long ExtendedFeatureDisable : 1; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _XSTATE_FEATURE Features[64];
  /* 0x0218 */ unsigned __int64 EnabledSupervisorFeatures;
  /* 0x0220 */ unsigned __int64 AlignedFeatures;
  /* 0x0228 */ unsigned long AllFeatureSize;
  /* 0x022c */ unsigned long AllFeatures[64];
  /* 0x032c */ long Padding_226;
  /* 0x0330 */ unsigned __int64 EnabledUserVisibleSupervisorFeatures;
  /* 0x0338 */ unsigned __int64 ExtendedFeatureDisableFeatures;
  /* 0x0340 */ unsigned long AllNonLargeFeatureSize;
  /* 0x0344 */ unsigned long Spare;
} XSTATE_CONFIGURATION, *PXSTATE_CONFIGURATION; /* size: 0x0348 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> const >;

typedef enum _TAG_UNNAMED_160
{
  value = 1,
} TAG_UNNAMED_160, *PTAG_UNNAMED_160;

typedef struct _KSYSTEM_TIME
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long High1Time;
  /* 0x0008 */ long High2Time;
} KSYSTEM_TIME, *PKSYSTEM_TIME; /* size: 0x000c */

typedef struct _KUSER_SHARED_DATA
{
  /* 0x0000 */ unsigned long TickCountLowDeprecated;
  /* 0x0004 */ unsigned long TickCountMultiplier;
  /* 0x0008 */ volatile struct _KSYSTEM_TIME InterruptTime;
  /* 0x0014 */ volatile struct _KSYSTEM_TIME SystemTime;
  /* 0x0020 */ volatile struct _KSYSTEM_TIME TimeZoneBias;
  /* 0x002c */ unsigned short ImageNumberLow;
  /* 0x002e */ unsigned short ImageNumberHigh;
  /* 0x0030 */ wchar_t NtSystemRoot[260];
  /* 0x0238 */ unsigned long MaxStackTraceDepth;
  /* 0x023c */ unsigned long CryptoExponent;
  /* 0x0240 */ unsigned long TimeZoneId;
  /* 0x0244 */ unsigned long LargePageMinimum;
  /* 0x0248 */ unsigned long AitSamplingValue;
  /* 0x024c */ unsigned long AppCompatFlag;
  /* 0x0250 */ unsigned __int64 RNGSeedVersion;
  /* 0x0258 */ unsigned long GlobalValidationRunlevel;
  /* 0x025c */ volatile long TimeZoneBiasStamp;
  /* 0x0260 */ unsigned long NtBuildNumber;
  /* 0x0264 */ enum _NT_PRODUCT_TYPE NtProductType;
  /* 0x0268 */ unsigned char ProductTypeIsValid;
  /* 0x0269 */ unsigned char Reserved0[1];
  /* 0x026a */ unsigned short NativeProcessorArchitecture;
  /* 0x026c */ unsigned long NtMajorVersion;
  /* 0x0270 */ unsigned long NtMinorVersion;
  /* 0x0274 */ unsigned char ProcessorFeatures[64];
  /* 0x02b4 */ unsigned long Reserved1;
  /* 0x02b8 */ unsigned long Reserved3;
  /* 0x02bc */ volatile unsigned long TimeSlip;
  /* 0x02c0 */ enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  /* 0x02c4 */ unsigned long BootId;
  /* 0x02c8 */ union _LARGE_INTEGER SystemExpirationDate;
  /* 0x02d0 */ unsigned long SuiteMask;
  /* 0x02d4 */ unsigned char KdDebuggerEnabled;
  union
  {
    /* 0x02d5 */ unsigned char MitigationPolicies;
    struct /* bitfield */
    {
      /* 0x02d5 */ unsigned char NXSupportPolicy : 2; /* bit position: 0 */
      /* 0x02d5 */ unsigned char SEHValidationPolicy : 2; /* bit position: 2 */
      /* 0x02d5 */ unsigned char CurDirDevicesSkippedForDlls : 2; /* bit position: 4 */
      /* 0x02d5 */ unsigned char Reserved : 2; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x02d6 */ unsigned short CyclesPerYield;
  /* 0x02d8 */ volatile unsigned long ActiveConsoleId;
  /* 0x02dc */ volatile unsigned long DismountCount;
  /* 0x02e0 */ unsigned long ComPlusPackage;
  /* 0x02e4 */ unsigned long LastSystemRITEventTickCount;
  /* 0x02e8 */ unsigned long NumberOfPhysicalPages;
  /* 0x02ec */ unsigned char SafeBootMode;
  /* 0x02ed */ unsigned char VirtualizationFlags;
  /* 0x02ee */ unsigned char Reserved12[2];
  union
  {
    /* 0x02f0 */ unsigned long SharedDataFlags;
    struct /* bitfield */
    {
      /* 0x02f0 */ unsigned long DbgErrorPortPresent : 1; /* bit position: 0 */
      /* 0x02f0 */ unsigned long DbgElevationEnabled : 1; /* bit position: 1 */
      /* 0x02f0 */ unsigned long DbgVirtEnabled : 1; /* bit position: 2 */
      /* 0x02f0 */ unsigned long DbgInstallerDetectEnabled : 1; /* bit position: 3 */
      /* 0x02f0 */ unsigned long DbgLkgEnabled : 1; /* bit position: 4 */
      /* 0x02f0 */ unsigned long DbgDynProcessorEnabled : 1; /* bit position: 5 */
      /* 0x02f0 */ unsigned long DbgConsoleBrokerEnabled : 1; /* bit position: 6 */
      /* 0x02f0 */ unsigned long DbgSecureBootEnabled : 1; /* bit position: 7 */
      /* 0x02f0 */ unsigned long DbgMultiSessionSku : 1; /* bit position: 8 */
      /* 0x02f0 */ unsigned long DbgMultiUsersInSessionSku : 1; /* bit position: 9 */
      /* 0x02f0 */ unsigned long DbgStateSeparationEnabled : 1; /* bit position: 10 */
      /* 0x02f0 */ unsigned long SpareBits : 21; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x02f4 */ unsigned long DataFlagsPad[1];
  /* 0x02f8 */ unsigned __int64 TestRetInstruction;
  /* 0x0300 */ __int64 QpcFrequency;
  /* 0x0308 */ unsigned long SystemCall;
  /* 0x030c */ unsigned long Reserved2;
  /* 0x0310 */ unsigned __int64 SystemCallPad[2];
  union
  {
    /* 0x0320 */ volatile struct _KSYSTEM_TIME TickCount;
    /* 0x0320 */ volatile unsigned __int64 TickCountQuad;
    /* 0x0320 */ unsigned long ReservedTickCountOverlay[3];
  }; /* size: 0x000c */
  /* 0x032c */ unsigned long TickCountPad[1];
  /* 0x0330 */ unsigned long Cookie;
  /* 0x0334 */ unsigned long CookiePad[1];
  /* 0x0338 */ __int64 ConsoleSessionForegroundProcessId;
  /* 0x0340 */ unsigned __int64 TimeUpdateLock;
  /* 0x0348 */ unsigned __int64 BaselineSystemTimeQpc;
  /* 0x0350 */ unsigned __int64 BaselineInterruptTimeQpc;
  /* 0x0358 */ unsigned __int64 QpcSystemTimeIncrement;
  /* 0x0360 */ unsigned __int64 QpcInterruptTimeIncrement;
  /* 0x0368 */ unsigned char QpcSystemTimeIncrementShift;
  /* 0x0369 */ unsigned char QpcInterruptTimeIncrementShift;
  /* 0x036a */ unsigned short UnparkedProcessorCount;
  /* 0x036c */ unsigned long EnclaveFeatureMask[4];
  /* 0x037c */ unsigned long TelemetryCoverageRound;
  /* 0x0380 */ unsigned short UserModeGlobalLogger[16];
  /* 0x03a0 */ unsigned long ImageFileExecutionOptions;
  /* 0x03a4 */ unsigned long LangGenerationCount;
  /* 0x03a8 */ unsigned __int64 Reserved4;
  /* 0x03b0 */ volatile unsigned __int64 InterruptTimeBias;
  /* 0x03b8 */ volatile unsigned __int64 QpcBias;
  /* 0x03c0 */ unsigned long ActiveProcessorCount;
  /* 0x03c4 */ volatile unsigned char ActiveGroupCount;
  /* 0x03c5 */ unsigned char Reserved9;
  union
  {
    /* 0x03c6 */ unsigned short QpcData;
    struct
    {
      /* 0x03c6 */ volatile unsigned char QpcBypassEnabled;
      /* 0x03c7 */ unsigned char QpcShift;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x03c8 */ union _LARGE_INTEGER TimeZoneBiasEffectiveStart;
  /* 0x03d0 */ union _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
  /* 0x03d8 */ struct _XSTATE_CONFIGURATION XState;
  /* 0x0720 */ struct _KSYSTEM_TIME FeatureConfigurationChangeStamp;
  /* 0x072c */ unsigned long Spare;
  /* 0x0730 */ unsigned __int64 UserPointerAuthMask;
} KUSER_SHARED_DATA, *PKUSER_SHARED_DATA; /* size: 0x0738 */

class wil::details::<lambda_5ecc60cabf56feb436b73b233216c94c>
{
}; /* size: 0x0001 */

typedef struct _CRL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_227;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0030 */ struct _FILETIME ThisUpdate;
  /* 0x0038 */ struct _FILETIME NextUpdate;
  /* 0x0040 */ unsigned long cCRLEntry;
  /* 0x0044 */ long Padding_228;
  /* 0x0048 */ struct _CRL_ENTRY* rgCRLEntry;
  /* 0x0050 */ unsigned long cExtension;
  /* 0x0054 */ long Padding_229;
  /* 0x0058 */ struct _CERT_EXTENSION* rgExtension;
} CRL_INFO, *PCRL_INFO; /* size: 0x0060 */

struct Windows::Foundation::Collections::IMapView<EventRegistrationToken,int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IInspectable *>
{
}; /* size: 0x0008 */

enum std::pointer_safety
{
  relaxed = 0,
  preferred = 1,
  strict = 2,
};

typedef enum _TAG_UNNAMED_161
{
  __the_value = 0,
} TAG_UNNAMED_161, *PTAG_UNNAMED_161;

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<bool> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned int>
{
}; /* size: 0x0008 */

struct wil::details::DestroyThreadPoolIo<2>
{
}; /* size: 0x0001 */

class wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >
{
  /* 0x0000 */ class wistd::__compressed_pair<wil::details::ApiTelemetryLogger::ApiDataList::ApiData *,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > __ptr_;
}; /* size: 0x0008 */

class wil::details::ApiTelemetryLogger::ApiDataList
{
  /* 0x0000 */ class wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > m_root;
  /* 0x0008 */ class wil::srwlock m_lock;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_162
{
  value = 0,
} TAG_UNNAMED_162, *PTAG_UNNAMED_162;

typedef enum _TAG_UNNAMED_163
{
  value = 1,
} TAG_UNNAMED_163, *PTAG_UNNAMED_163;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_164
{
  value = 1,
} TAG_UNNAMED_164, *PTAG_UNNAMED_164;

struct HMAPKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Windows::Foundation::Collections::IIterator<float>
{
}; /* size: 0x0008 */

enum WilFailureReportKind
{
  Exception = 0,
  Return = 1,
  Log = 2,
  FailFast = 3,
  Assert = 4,
};

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_165
{
  value = 1,
} TAG_UNNAMED_165, *PTAG_UNNAMED_165;

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wil::paint_dc>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned char Name[8];
  union
  {
    union
    {
      /* 0x0008 */ unsigned long PhysicalAddress;
      /* 0x0008 */ unsigned long VirtualSize;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Misc;
  /* 0x000c */ unsigned long VirtualAddress;
  /* 0x0010 */ unsigned long SizeOfRawData;
  /* 0x0014 */ unsigned long PointerToRawData;
  /* 0x0018 */ unsigned long PointerToRelocations;
  /* 0x001c */ unsigned long PointerToLinenumbers;
  /* 0x0020 */ unsigned short NumberOfRelocations;
  /* 0x0022 */ unsigned short NumberOfLinenumbers;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER; /* size: 0x0028 */

typedef struct _CRYPT_PROVIDER_PRIVDATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gProviderID;
  /* 0x0014 */ unsigned long cbProvData;
  /* 0x0018 */ void* pvProvData;
} CRYPT_PROVIDER_PRIVDATA, *PCRYPT_PROVIDER_PRIVDATA; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_166
{
  value = 1,
} TAG_UNNAMED_166, *PTAG_UNNAMED_166;

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

enum std::cv_status
{
  no_timeout = 0,
  timeout = 1,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::UI::WindowId>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IPackagedComProxyStubCatalogInternal>;

typedef struct _FILE_ZERO_DATA_INFORMATION_EX
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER BeyondFinalZero;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} FILE_ZERO_DATA_INFORMATION_EX, *PFILE_ZERO_DATA_INFORMATION_EX; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMoniker> const >;

typedef enum _TAG_UNNAMED_167
{
  value = 1,
} TAG_UNNAMED_167, *PTAG_UNNAMED_167;

struct DLGTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ unsigned short cdit;
  /* 0x000a */ short x;
  /* 0x000c */ short y;
  /* 0x000e */ short cx;
  /* 0x0010 */ short cy;
}; /* size: 0x0012 */

struct Windows::Foundation::IReference_impl<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

struct ICatRegister
{
}; /* size: 0x0008 */

typedef enum _NT_WRITE_FLAGS
{
  NT_WRITE_FLAG_NONE = 0,
  NT_WRITE_FLAG_WRITE_THROUGH = 1,
} NT_WRITE_FLAGS, *PNT_WRITE_FLAGS;

struct PrivMemAllocator
{
}; /* size: 0x0001 */

enum tagBIND_FLAGS
{
  BIND_MAYBOTHERUSER = 1,
  BIND_JUSTTESTEXISTENCE = 2,
};

struct wistd::default_delete<unsigned int [0]>::_EnableIfConvertible<unsigned int>
{
}; /* size: 0x0001 */

struct IUriBuilderFactory
{
}; /* size: 0x0008 */

typedef struct _LDR_IMPORT_CALLBACK_INFO
{
  /* 0x0000 */ void* ImportCallbackRoutine /* function */;
  /* 0x0008 */ void* ImportCallbackParameter;
} LDR_IMPORT_CALLBACK_INFO, *PLDR_IMPORT_CALLBACK_INFO; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_168
{
  value = 1,
} TAG_UNNAMED_168, *PTAG_UNNAMED_168;

typedef enum _TAG_UNNAMED_169
{
  value = 1,
} TAG_UNNAMED_169, *PTAG_UNNAMED_169;

struct IImmersiveApplicationArrayService
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_170
{
  value = 1,
} TAG_UNNAMED_170, *PTAG_UNNAMED_170;

struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::PhotoOrientation>
{
}; /* size: 0x0008 */

struct ISearchProtocol2
{
}; /* size: 0x0008 */

enum BCRYPT_HASH_OPERATION_TYPE
{
  BCRYPT_HASH_OPERATION_HASH_DATA = 1,
  BCRYPT_HASH_OPERATION_FINISH_HASH = 2,
};

typedef struct _BCRYPT_MULTI_HASH_OPERATION
{
  /* 0x0000 */ unsigned long iHash;
  /* 0x0004 */ enum BCRYPT_HASH_OPERATION_TYPE hashOperation;
  /* 0x0008 */ unsigned char* pbBuffer;
  /* 0x0010 */ unsigned long cbBuffer;
  /* 0x0014 */ long __PADDING__[1];
} BCRYPT_MULTI_HASH_OPERATION, *PBCRYPT_MULTI_HASH_OPERATION; /* size: 0x0018 */

enum std::errc
{
  address_family_not_supported = 102,
  address_in_use = 100,
  address_not_available = 101,
  already_connected = 113,
  argument_list_too_long = 7,
  argument_out_of_domain = 33,
  bad_address = 14,
  bad_file_descriptor = 9,
  bad_message = 104,
  broken_pipe = 32,
  connection_aborted = 106,
  connection_already_in_progress = 103,
  connection_refused = 107,
  connection_reset = 108,
  cross_device_link = 18,
  destination_address_required = 109,
  device_or_resource_busy = 16,
  directory_not_empty = 41,
  executable_format_error = 8,
  file_exists = 17,
  file_too_large = 27,
  filename_too_long = 38,
  function_not_supported = 40,
  host_unreachable = 110,
  identifier_removed = 111,
  illegal_byte_sequence = 42,
  inappropriate_io_control_operation = 25,
  interrupted = 4,
  invalid_argument = 22,
  invalid_seek = 29,
  io_error = 5,
  is_a_directory = 21,
  message_size = 115,
  network_down = 116,
  network_reset = 117,
  network_unreachable = 118,
  no_buffer_space = 119,
  no_child_process = 10,
  no_link = 121,
  no_lock_available = 39,
  no_message_available = 120,
  no_message = 122,
  no_protocol_option = 123,
  no_space_on_device = 28,
  no_stream_resources = 124,
  no_such_device_or_address = 6,
  no_such_device = 19,
  no_such_file_or_directory = 2,
  no_such_process = 3,
  not_a_directory = 20,
  not_a_socket = 128,
  not_a_stream = 125,
  not_connected = 126,
  not_enough_memory = 12,
  not_supported = 129,
  operation_canceled = 105,
  operation_in_progress = 112,
  operation_not_permitted = 1,
  operation_not_supported = 130,
  operation_would_block = 140,
  owner_dead = 133,
  permission_denied = 13,
  protocol_error = 134,
  protocol_not_supported = 135,
  read_only_file_system = 30,
  resource_deadlock_would_occur = 36,
  resource_unavailable_try_again = 11,
  result_out_of_range = 34,
  state_not_recoverable = 127,
  stream_timeout = 137,
  text_file_busy = 139,
  timed_out = 138,
  too_many_files_open_in_system = 23,
  too_many_files_open = 24,
  too_many_links = 31,
  too_many_symbolic_link_levels = 114,
  value_too_large = 132,
  wrong_protocol_type = 136,
};

struct tagCURSORSHAPE
{
  /* 0x0000 */ int xHotSpot;
  /* 0x0004 */ int yHotSpot;
  /* 0x0008 */ int cx;
  /* 0x000c */ int cy;
  /* 0x0010 */ int cbWidth;
  /* 0x0014 */ unsigned char Planes;
  /* 0x0015 */ unsigned char BitsPixel;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

struct ISequentialStream
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_171
{
  value = 1,
} TAG_UNNAMED_171, *PTAG_UNNAMED_171;

typedef enum _TAG_UNNAMED_172
{
  value = 1,
} TAG_UNNAMED_172, *PTAG_UNNAMED_172;

typedef enum _TAG_UNNAMED_173
{
  value = 0,
} TAG_UNNAMED_173, *PTAG_UNNAMED_173;

enum Windows::Storage::FileProperties::PropertyPrefetchOptions
{
  PropertyPrefetchOptions_None = 0,
  PropertyPrefetchOptions_MusicProperties = 1,
  PropertyPrefetchOptions_VideoProperties = 2,
  PropertyPrefetchOptions_ImageProperties = 4,
  PropertyPrefetchOptions_DocumentProperties = 8,
  PropertyPrefetchOptions_BasicProperties = 16,
};

typedef struct _IMAGE_DYNAMIC_RELOCATION32_V2
{
  /* 0x0000 */ unsigned long HeaderSize;
  /* 0x0004 */ unsigned long FixupInfoSize;
  /* 0x0008 */ unsigned long Symbol;
  /* 0x000c */ unsigned long SymbolGroup;
  /* 0x0010 */ unsigned long Flags;
} IMAGE_DYNAMIC_RELOCATION32_V2, *PIMAGE_DYNAMIC_RELOCATION32_V2; /* size: 0x0014 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>
{
}; /* size: 0x0008 */

struct IInternetProtocolRoot
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_174
{
  value = 1,
} TAG_UNNAMED_174, *PTAG_UNNAMED_174;

struct wil::details::DestroyThreadPoolWait<2>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_175
{
  value = 0,
} TAG_UNNAMED_175, *PTAG_UNNAMED_175;

class COleCache::CCacheUnkImpl
{
}; /* size: 0x0008 */

class CStreamDummy
{
  /* 0x0000 */ long Padding_230[2];
  /* 0x0008 */ long lPos;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_176
{
  value = 1,
} TAG_UNNAMED_176, *PTAG_UNNAMED_176;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>
{
}; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_177
{
  value = 1,
} TAG_UNNAMED_177, *PTAG_UNNAMED_177;

typedef struct _ALPC_SECURITY_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_231;
  /* 0x0008 */ struct _SECURITY_QUALITY_OF_SERVICE* QoS;
  /* 0x0010 */ void* ContextHandle;
} ALPC_SECURITY_ATTR, *PALPC_SECURITY_ATTR; /* size: 0x0018 */

struct Windows::Foundation::Collections::IVector_impl<unsigned __int64,1>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_178
{
  value = 0,
} TAG_UNNAMED_178, *PTAG_UNNAMED_178;

union std::_String_val<std::_Simple_types<char> >::_Bxty
{
  union
  {
    /* 0x0000 */ char _Buf[16];
    /* 0x0000 */ char* _Ptr;
    /* 0x0000 */ char _Alias[16];
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

class std::_String_val<std::_Simple_types<char> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ union std::_String_val<std::_Simple_types<char> >::_Bxty _Bx;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned __int64 _Mysize;
  /* 0x0018 */ unsigned __int64 _Myres;
}; /* size: 0x0020 */

class std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1>
{
  /* 0x0000 */ class std::_String_val<std::_Simple_types<char> > _Myval2;
}; /* size: 0x0020 */

typedef enum _WPP_FLAG_LEN_ENUM_MAX
{
  WPP_MAX_FLAG_LEN_CHECK = 1,
} WPP_FLAG_LEN_ENUM_MAX, *PWPP_FLAG_LEN_ENUM_MAX;

typedef struct _ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_ACE, *PACCESS_ALLOWED_ACE; /* size: 0x000c */

struct Windows::Foundation::Collections::IVectorView<__int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0008 */

enum wil::ErrorReturn
{
  Auto = 0,
  None = 1,
};

struct Windows::Foundation::Collections::IIterator<Windows::System::User *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *,1>
{
}; /* size: 0x0008 */

typedef struct _CERT_KEYGEN_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_232;
  /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0038 */ wchar_t* pwszChallengeString;
} CERT_KEYGEN_REQUEST_INFO, *PCERT_KEYGEN_REQUEST_INFO; /* size: 0x0040 */

typedef enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS
{
  SeSafeOpenExperienceNone = 0,
  SeSafeOpenExperienceCalled = 1,
  SeSafeOpenExperienceAppRepCalled = 2,
  SeSafeOpenExperiencePromptDisplayed = 4,
  SeSafeOpenExperienceUAC = 8,
  SeSafeOpenExperienceUninstaller = 16,
  SeSafeOpenExperienceIgnoreUnknownOrBad = 32,
  SeSafeOpenExperienceDefenderTrustedInstaller = 64,
  SeSafeOpenExperienceMOTWPresent = 128,
} SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS, *PSE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS;

enum Windows::Storage::FileProperties::VideoOrientation
{
  VideoOrientation_Normal = 0,
  VideoOrientation_Rotate90 = 90,
  VideoOrientation_Rotate180 = 180,
  VideoOrientation_Rotate270 = 270,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumClassesOfCategories> const >;

struct Windows::Foundation::Collections::IIterator<short>
{
}; /* size: 0x0008 */

class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >
{
  union
  {
    /* 0x0000 */ const wchar_t* s_pszTrimWhitespaceCharacterSet;
    /* 0x0000 */ const wchar_t* s_pszIsOnlyWhitespaceCharacterSet;
    /* 0x0000 */ const unsigned __int64 s_cchUnknown;
    /* 0x0000 */ wchar_t* _pszStringData;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 _cchStringData;
  /* 0x0010 */ unsigned __int64 _cchStringDataCapacity;
}; /* size: 0x0018 */

struct tagTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char __PADDING__[3];
}; /* size: 0x003c */

struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_179
{
  value = 1,
} TAG_UNNAMED_179, *PTAG_UNNAMED_179;

struct std::hash<long double>
{
}; /* size: 0x0001 */

struct wil::WNF_CHANGE_STAMP_STRUCT
{
  /* 0x0000 */ unsigned long value;
}; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_180
{
  value = 0,
} TAG_UNNAMED_180, *PTAG_UNNAMED_180;

class wil::details::pointer_range<wil::details_abi::ThreadLocalFailureInfo *>
{
  /* 0x0000 */ struct wil::details_abi::ThreadLocalFailureInfo* m_begin;
  /* 0x0008 */ struct wil::details_abi::ThreadLocalFailureInfo* m_end;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_181
{
  value = 1,
} TAG_UNNAMED_181, *PTAG_UNNAMED_181;

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *,1>
{
}; /* size: 0x0008 */

struct wistd::__nat
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_182
{
  value = 0,
} TAG_UNNAMED_182, *PTAG_UNNAMED_182;

typedef enum _SE_OBJECT_TYPE
{
  SE_UNKNOWN_OBJECT_TYPE = 0,
  SE_FILE_OBJECT = 1,
  SE_SERVICE = 2,
  SE_PRINTER = 3,
  SE_REGISTRY_KEY = 4,
  SE_LMSHARE = 5,
  SE_KERNEL_OBJECT = 6,
  SE_WINDOW_OBJECT = 7,
  SE_DS_OBJECT = 8,
  SE_DS_OBJECT_ALL = 9,
  SE_PROVIDER_DEFINED_OBJECT = 10,
  SE_WMIGUID_OBJECT = 11,
  SE_REGISTRY_WOW64_32KEY = 12,
  SE_REGISTRY_WOW64_64KEY = 13,
} SE_OBJECT_TYPE, *PSE_OBJECT_TYPE;

struct Windows::Foundation::IEventHandler_impl<IInspectable *>
{
}; /* size: 0x0008 */

struct std::hash<std::thread::id>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_183
{
  value = 1,
} TAG_UNNAMED_183, *PTAG_UNNAMED_183;

typedef enum _TOKEN_ELEVATION_TYPE
{
  TokenElevationTypeDefault = 1,
  TokenElevationTypeFull = 2,
  TokenElevationTypeLimited = 3,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE;

struct wil::cotaskmem_secure_deleter
{
}; /* size: 0x0001 */

struct wil::details::IFunctorHost
{
}; /* size: 0x0008 */

struct INdrVersion
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_184
{
  value = 1,
} TAG_UNNAMED_184, *PTAG_UNNAMED_184;

typedef struct _nlsversioninfo
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
  /* 0x000c */ unsigned long dwEffectiveId;
  /* 0x0010 */ struct _GUID guidCustomVersion;
} nlsversioninfo, *Pnlsversioninfo; /* size: 0x0020 */

struct BATTERY_REPORTING_SCALE
{
  /* 0x0000 */ unsigned long Granularity;
  /* 0x0004 */ unsigned long Capacity;
}; /* size: 0x0008 */

class wil::com_ptr_t<IPackagedComProxyStubCatalogInternal,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IPackagedComProxyStubCatalogInternal* m_ptr;
}; /* size: 0x0008 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1
{
  /* 0x0000 */ unsigned long Name;
  /* 0x0004 */ unsigned short ValueType;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ValueCount;
  union
  {
    union
    {
      /* 0x0010 */ unsigned long pInt64[1];
      /* 0x0010 */ unsigned long pUint64[1];
      /* 0x0010 */ unsigned long ppString[1];
      /* 0x0010 */ unsigned long pFqbn[1];
      /* 0x0010 */ unsigned long pOctetString[1];
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Values;
} TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1, *PTOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1; /* size: 0x0014 */

struct IPersistPropertyBag2
{
}; /* size: 0x0008 */

typedef enum _TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState
{
  TlgStateCreated = 0,
  TlgStateStarted = 1,
  TlgStateStopped = 2,
  TlgStateDestroyed = 3,
} TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState, *PTlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState;

struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,__int64>
{
}; /* size: 0x0008 */

struct wistd::__make_unsigned<unsigned long,1>
{
}; /* size: 0x0001 */

typedef struct _SMB_SHARE_FLUSH_AND_PURGE_INPUT
{
  /* 0x0000 */ unsigned short Version;
} SMB_SHARE_FLUSH_AND_PURGE_INPUT, *PSMB_SHARE_FLUSH_AND_PURGE_INPUT; /* size: 0x0002 */

class SafeIntCompare<long,long>
{
}; /* size: 0x0001 */

enum tagDRAGOP
{
  DRAGOP_ENTER = 1,
  DRAGOP_OVER = 2,
  DRAGOP_LEAVE = 3,
  DRAGOP_DROP = 4,
  DRAGOP_ENTER_FROM_APPCONTAINER = 5,
  DRAGOP_DROP_FROM_APPCONTAINER = 6,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt> const >;

class Microsoft::WRL::Details::Nil
{
}; /* size: 0x0001 */

typedef struct __vcrt_assert_va_start_is_not_reference<unsigned int>
{
} _vcrt_assert_va_start_is_not_reference<unsigned int>, *P_vcrt_assert_va_start_is_not_reference<unsigned int>; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_185
{
  value = 0,
} TAG_UNNAMED_185, *PTAG_UNNAMED_185;

enum DROPTARGETREENTRANCYMODEL
{
  DTRM_FREE = 0,
  DTRM_VIEW = 1,
  DTRM_PROCESS = 2,
};

class wil::details::<lambda_c39eae6bef46d2e9bbfab2bb710f3cfc>
{
}; /* size: 0x0001 */

enum PROCESS_UICONTEXT
{
  PROCESS_UICONTEXT_DESKTOP = 0,
  PROCESS_UICONTEXT_IMMERSIVE = 1,
  PROCESS_UICONTEXT_IMMERSIVE_BROKER = 2,
  PROCESS_UICONTEXT_IMMERSIVE_BROWSER = 3,
};

class std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > >;

class CSmAllocator;

enum GET_PACKAGE_SENTINEL_DISPOSITION
{
  GPSD_CREATE = 0,
  GPSD_CHECKEXISTENCE = 1,
};

struct wil::details::out_param_t<wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> > >
{
  /* 0x0000 */ class wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >& wrapper;
  /* 0x0008 */ struct _KEY_VALUE_FULL_INFORMATION* pRaw;
  /* 0x0010 */ BOOL replace;
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _remoteMETAFILEPICT* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILEPICT::__MIDL_IWinTypes_0005, *PuserHMETAFILEPICT::__MIDL_IWinTypes_0005; /* size: 0x0008 */

typedef struct _userHMETAFILEPICT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_233;
  /* 0x0008 */ union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
} userHMETAFILEPICT, *PuserHMETAFILEPICT; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>
{
}; /* size: 0x0008 */

enum Windows::Storage::KnownFoldersAccessStatus
{
  KnownFoldersAccessStatus_DeniedBySystem = 0,
  KnownFoldersAccessStatus_NotDeclaredByApp = 1,
  KnownFoldersAccessStatus_DeniedByUser = 2,
  KnownFoldersAccessStatus_UserPromptRequired = 3,
  KnownFoldersAccessStatus_Allowed = 4,
  KnownFoldersAccessStatus_AllowedPerAppFolder = 5,
};

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char>
{
}; /* size: 0x0008 */

struct wistd::__make_unsigned<unsigned short,1>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_186
{
  value = 1,
} TAG_UNNAMED_186, *PTAG_UNNAMED_186;

struct wil::details::localalloc_allocator
{
}; /* size: 0x0001 */

enum SCALE_CHANGE_FLAGS
{
  SCF_VALUE_NONE = 0,
  SCF_SCALE = 1,
  SCF_PHYSICAL = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *,1>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_187
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_187, *PTAG_UNNAMED_187;

struct Windows::Foundation::Collections::is_pointer<HSTRING__ *>
{
}; /* size: 0x0001 */

class std::bad_cast
{
}; /* size: 0x0010 */

typedef struct _CERT_AUTHORITY_INFO_ACCESS
{
  /* 0x0000 */ unsigned long cAccDescr;
  /* 0x0004 */ long Padding_234;
  /* 0x0008 */ struct _CERT_ACCESS_DESCRIPTION* rgAccDescr;
} CERT_AUTHORITY_INFO_ACCESS, *PCERT_AUTHORITY_INFO_ACCESS; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_188
{
  value = 1,
} TAG_UNNAMED_188, *PTAG_UNNAMED_188;

class wil::details::<lambda_c8e945aeb5064efaeeda99c05537d31a>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>
{
}; /* size: 0x0008 */

enum WELL_KNOWN_SID_TYPE
{
  WinNullSid = 0,
  WinWorldSid = 1,
  WinLocalSid = 2,
  WinCreatorOwnerSid = 3,
  WinCreatorGroupSid = 4,
  WinCreatorOwnerServerSid = 5,
  WinCreatorGroupServerSid = 6,
  WinNtAuthoritySid = 7,
  WinDialupSid = 8,
  WinNetworkSid = 9,
  WinBatchSid = 10,
  WinInteractiveSid = 11,
  WinServiceSid = 12,
  WinAnonymousSid = 13,
  WinProxySid = 14,
  WinEnterpriseControllersSid = 15,
  WinSelfSid = 16,
  WinAuthenticatedUserSid = 17,
  WinRestrictedCodeSid = 18,
  WinTerminalServerSid = 19,
  WinRemoteLogonIdSid = 20,
  WinLogonIdsSid = 21,
  WinLocalSystemSid = 22,
  WinLocalServiceSid = 23,
  WinNetworkServiceSid = 24,
  WinBuiltinDomainSid = 25,
  WinBuiltinAdministratorsSid = 26,
  WinBuiltinUsersSid = 27,
  WinBuiltinGuestsSid = 28,
  WinBuiltinPowerUsersSid = 29,
  WinBuiltinAccountOperatorsSid = 30,
  WinBuiltinSystemOperatorsSid = 31,
  WinBuiltinPrintOperatorsSid = 32,
  WinBuiltinBackupOperatorsSid = 33,
  WinBuiltinReplicatorSid = 34,
  WinBuiltinPreWindows2000CompatibleAccessSid = 35,
  WinBuiltinRemoteDesktopUsersSid = 36,
  WinBuiltinNetworkConfigurationOperatorsSid = 37,
  WinAccountAdministratorSid = 38,
  WinAccountGuestSid = 39,
  WinAccountKrbtgtSid = 40,
  WinAccountDomainAdminsSid = 41,
  WinAccountDomainUsersSid = 42,
  WinAccountDomainGuestsSid = 43,
  WinAccountComputersSid = 44,
  WinAccountControllersSid = 45,
  WinAccountCertAdminsSid = 46,
  WinAccountSchemaAdminsSid = 47,
  WinAccountEnterpriseAdminsSid = 48,
  WinAccountPolicyAdminsSid = 49,
  WinAccountRasAndIasServersSid = 50,
  WinNTLMAuthenticationSid = 51,
  WinDigestAuthenticationSid = 52,
  WinSChannelAuthenticationSid = 53,
  WinThisOrganizationSid = 54,
  WinOtherOrganizationSid = 55,
  WinBuiltinIncomingForestTrustBuildersSid = 56,
  WinBuiltinPerfMonitoringUsersSid = 57,
  WinBuiltinPerfLoggingUsersSid = 58,
  WinBuiltinAuthorizationAccessSid = 59,
  WinBuiltinTerminalServerLicenseServersSid = 60,
  WinBuiltinDCOMUsersSid = 61,
  WinBuiltinIUsersSid = 62,
  WinIUserSid = 63,
  WinBuiltinCryptoOperatorsSid = 64,
  WinUntrustedLabelSid = 65,
  WinLowLabelSid = 66,
  WinMediumLabelSid = 67,
  WinHighLabelSid = 68,
  WinSystemLabelSid = 69,
  WinWriteRestrictedCodeSid = 70,
  WinCreatorOwnerRightsSid = 71,
  WinCacheablePrincipalsGroupSid = 72,
  WinNonCacheablePrincipalsGroupSid = 73,
  WinEnterpriseReadonlyControllersSid = 74,
  WinAccountReadonlyControllersSid = 75,
  WinBuiltinEventLogReadersGroup = 76,
  WinNewEnterpriseReadonlyControllersSid = 77,
  WinBuiltinCertSvcDComAccessGroup = 78,
  WinMediumPlusLabelSid = 79,
  WinLocalLogonSid = 80,
  WinConsoleLogonSid = 81,
  WinThisOrganizationCertificateSid = 82,
  WinApplicationPackageAuthoritySid = 83,
  WinBuiltinAnyPackageSid = 84,
  WinCapabilityInternetClientSid = 85,
  WinCapabilityInternetClientServerSid = 86,
  WinCapabilityPrivateNetworkClientServerSid = 87,
  WinCapabilityPicturesLibrarySid = 88,
  WinCapabilityVideosLibrarySid = 89,
  WinCapabilityMusicLibrarySid = 90,
  WinCapabilityDocumentsLibrarySid = 91,
  WinCapabilitySharedUserCertificatesSid = 92,
  WinCapabilityEnterpriseAuthenticationSid = 93,
  WinCapabilityRemovableStorageSid = 94,
  WinBuiltinRDSRemoteAccessServersSid = 95,
  WinBuiltinRDSEndpointServersSid = 96,
  WinBuiltinRDSManagementServersSid = 97,
  WinUserModeDriversSid = 98,
  WinBuiltinHyperVAdminsSid = 99,
  WinAccountCloneableControllersSid = 100,
  WinBuiltinAccessControlAssistanceOperatorsSid = 101,
  WinBuiltinRemoteManagementUsersSid = 102,
  WinAuthenticationAuthorityAssertedSid = 103,
  WinAuthenticationServiceAssertedSid = 104,
  WinLocalAccountSid = 105,
  WinLocalAccountAndAdministratorSid = 106,
  WinAccountProtectedUsersSid = 107,
  WinCapabilityAppointmentsSid = 108,
  WinCapabilityContactsSid = 109,
  WinAccountDefaultSystemManagedSid = 110,
  WinBuiltinDefaultSystemManagedGroupSid = 111,
  WinBuiltinStorageReplicaAdminsSid = 112,
  WinAccountKeyAdminsSid = 113,
  WinAccountEnterpriseKeyAdminsSid = 114,
  WinAuthenticationKeyTrustSid = 115,
  WinAuthenticationKeyPropertyMFASid = 116,
  WinAuthenticationKeyPropertyAttestationSid = 117,
  WinAuthenticationFreshKeyAuthSid = 118,
  WinBuiltinDeviceOwnersSid = 119,
};

struct Windows::Foundation::Collections::IMapView_impl<EventRegistrationToken,int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_189
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 0,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 1,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_189, *PTAG_UNNAMED_189;

struct wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindCloseChangeNotification>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgress<HSTRING__ *,unsigned __int64>
{
}; /* size: 0x0008 */

struct WilFailureReport
{
  /* 0x0000 */ HRESULT hr;
  /* 0x0004 */ long Padding_235;
  /* 0x0008 */ const wchar_t* message;
  /* 0x0010 */ enum WilFailureReportKind kind;
  /* 0x0011 */ char Padding_236;
  /* 0x0012 */ enum WilFailureReportFlags flags;
  /* 0x0014 */ long Padding_237;
  /* 0x0018 */ struct WilFailureCodeLocation location;
}; /* size: 0x0030 */

struct wil::details::cotaskmem_allocator
{
}; /* size: 0x0001 */

struct wil::details::SecureZeroData
{
  /* 0x0000 */ void* pointer;
  /* 0x0008 */ unsigned __int64 sizeBytes;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *>
{
}; /* size: 0x0008 */

enum ProcessToken::AppContainerState
{
  NotDetermined = 0,
  AppContainer = 1,
  NotAppContainer = 2,
};

struct Windows::Foundation::Collections::IMapView_impl<_GUID,HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_190
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_190, *PTAG_UNNAMED_190;

struct PPM_IDLE_STATE_BUCKET_EX
{
  /* 0x0000 */ unsigned __int64 TotalTimeUs;
  /* 0x0008 */ unsigned long MinTimeUs;
  /* 0x000c */ unsigned long MaxTimeUs;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct PPM_IDLE_STATE_ACCOUNTING_EX
{
  /* 0x0000 */ unsigned __int64 TotalTime;
  /* 0x0008 */ unsigned long IdleTransitions;
  /* 0x000c */ unsigned long FailedTransitions;
  /* 0x0010 */ unsigned long InvalidBucketIndex;
  /* 0x0014 */ unsigned long MinTimeUs;
  /* 0x0018 */ unsigned long MaxTimeUs;
  /* 0x001c */ unsigned long CancelledTransitions;
  /* 0x0020 */ struct PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
}; /* size: 0x01a0 */

class ComTelemetryProvider::CallContext
{
}; /* size: 0x0140 */

enum ProcessToken::SysAppIdState
{
  SysAppIdNotDetermined = 0,
  SysAppIdPresent = 1,
  SysAppIdAbsent = 2,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt10> >;

enum ProcessToken::LifecycleManagerCanSuspendState
{
  LifecycleManagerCanSuspendNotDetermined = 0,
  LifecycleManagerCanSuspend = 1,
  LifecycleManagerCanNotSuspend = 2,
};

typedef struct _SERVICE_TABLE_ENTRYA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYA, *PSERVICE_TABLE_ENTRYA; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_191
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_191, *PTAG_UNNAMED_191;

struct std::_Init_once_completer
{
  /* 0x0000 */ struct std::once_flag& _Once;
  /* 0x0008 */ unsigned long _DwFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct ITypeInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeAttr /* function */;
  /* 0x0020 */ void* GetTypeComp /* function */;
  /* 0x0028 */ void* GetFuncDesc /* function */;
  /* 0x0030 */ void* GetVarDesc /* function */;
  /* 0x0038 */ void* GetNames /* function */;
  /* 0x0040 */ void* GetRefTypeOfImplType /* function */;
  /* 0x0048 */ void* GetImplTypeFlags /* function */;
  /* 0x0050 */ void* GetIDsOfNames /* function */;
  /* 0x0058 */ void* Invoke /* function */;
  /* 0x0060 */ void* GetDocumentation /* function */;
  /* 0x0068 */ void* GetDllEntry /* function */;
  /* 0x0070 */ void* GetRefTypeInfo /* function */;
  /* 0x0078 */ void* AddressOfMember /* function */;
  /* 0x0080 */ void* CreateInstance /* function */;
  /* 0x0088 */ void* GetMops /* function */;
  /* 0x0090 */ void* GetContainingTypeLib /* function */;
  /* 0x0098 */ void* ReleaseTypeAttr /* function */;
  /* 0x00a0 */ void* ReleaseFuncDesc /* function */;
  /* 0x00a8 */ void* ReleaseVarDesc /* function */;
}; /* size: 0x00b0 */

enum ProcessToken::WakeOnIntraPackageCallState
{
  WakeOnIntraPackageCallNotDetermined = 0,
  WakeOnIntraPackageCall = 1,
  NoWakeOnIntraPackageCall = 2,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_192
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_192, *PTAG_UNNAMED_192;

struct IInitializeSpy
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_193
{
  value = 0,
} TAG_UNNAMED_193, *PTAG_UNNAMED_193;

typedef enum _TP_DEBUG_CLASS
{
  TP_DEBUG_CLASS_POOL = 0,
} TP_DEBUG_CLASS, *PTP_DEBUG_CLASS;

typedef enum _TAG_UNNAMED_194
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_194, *PTAG_UNNAMED_194;

struct wistd::__compressed_pair_elem<wil::process_heap_deleter,1,1>
{
}; /* size: 0x0001 */

class XWinRT::SRWLock
{
  /* 0x0000 */ struct _RTL_SRWLOCK _srw;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_195
{
  value = 0,
} TAG_UNNAMED_195, *PTAG_UNNAMED_195;

typedef enum _TAG_UNNAMED_196
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_196, *PTAG_UNNAMED_196;

typedef enum _TAG_UNNAMED_197
{
  value = 1,
} TAG_UNNAMED_197, *PTAG_UNNAMED_197;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageStreamTransaction *>
{
}; /* size: 0x0008 */

typedef enum _ATOM_INFORMATION_CLASS
{
  AtomBasicInformation = 0,
  AtomTableInformation = 1,
} ATOM_INFORMATION_CLASS, *PATOM_INFORMATION_CLASS;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>
{
}; /* size: 0x0008 */

class InitializeAndReadIsAppContainer::__l2::<lambda_50fe48bf199844a7ed15a94e5b76e4d1>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_198
{
  value = 1,
} TAG_UNNAMED_198, *PTAG_UNNAMED_198;

typedef enum _TAG_UNNAMED_199
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_199, *PTAG_UNNAMED_199;

class Common::AutoHandleModule
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_200
{
  value = 1,
} TAG_UNNAMED_200, *PTAG_UNNAMED_200;

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
{
  union
  {
    /* 0x0000 */ struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
    /* 0x0000 */ struct _LIST_ENTRY* CurEntry;
  }; /* size: 0x0018 */
  /* 0x0018 */ struct _LIST_ENTRY* ChainHead;
  /* 0x0020 */ unsigned long BucketIndex;
  /* 0x0024 */ long __PADDING__[1];
} RTL_DYNAMIC_HASH_TABLE_ENUMERATOR, *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR; /* size: 0x0028 */

class wil::details::<lambda_5c8c54d8468ec8b2664627b947e2a493>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_201
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_201, *PTAG_UNNAMED_201;

typedef enum _TAG_UNNAMED_202
{
  value = 1,
} TAG_UNNAMED_202, *PTAG_UNNAMED_202;

class MultiplicationHelper<unsigned int,unsigned short,3>
{
}; /* size: 0x0001 */

enum AdditionState
{
  AdditionState_CastIntCheckMax = 0,
  AdditionState_CastUintCheckOverflow = 1,
  AdditionState_CastUintCheckOverflowMax = 2,
  AdditionState_CastUint64CheckOverflow = 3,
  AdditionState_CastUint64CheckOverflowMax = 4,
  AdditionState_CastIntCheckMinMax = 5,
  AdditionState_CastInt64CheckMinMax = 6,
  AdditionState_CastInt64CheckMax = 7,
  AdditionState_CastUint64CheckMinMax = 8,
  AdditionState_CastUint64CheckMinMax2 = 9,
  AdditionState_CastInt64CheckOverflow = 10,
  AdditionState_CastInt64CheckOverflowMinMax = 11,
  AdditionState_CastInt64CheckOverflowMax = 12,
  AdditionState_ManualCheckInt64Uint64 = 13,
  AdditionState_ManualCheck = 14,
  AdditionState_Error = 15,
};

struct HDESK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_203
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_203, *PTAG_UNNAMED_203;

typedef enum _TAG_UNNAMED_204
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_204, *PTAG_UNNAMED_204;

typedef enum _TAG_UNNAMED_205
{
  method = 4,
} TAG_UNNAMED_205, *PTAG_UNNAMED_205;

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Skip::__l2::<lambda_19600923239bd138db611a3bcd35a184>
{
  /* 0x0000 */ class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>* const __this;
  /* 0x0008 */ unsigned long& celt;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,_WNF_USER_SUBSCRIPTION *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_206
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_206, *PTAG_UNNAMED_206;

struct CDdeObject::COleItemContainerImpl
{
  /* 0x0000 */ long Padding_238[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

enum RTLWOW64_CROSSPROCESS_WORK_OPERATION
{
  CrossProcOperationMemoryAllocPreNotify = 0,
  CrossProcOperationMemoryAllocPostNotify = 1,
  CrossProcOperationMemoryFreePreNotify = 2,
  CrossProcOperationMemoryFreePostNotify = 3,
  CrossProcOperationMemoryProtectPreNotify = 4,
  CrossProcOperationMemoryProtectPostNotify = 5,
  CrossProcOperationInstructionCacheFlush = 6,
  CrossProcOperationInstructionCacheFlushHeavy = 7,
  CrossProcOperationMemoryDirtyNotify = 8,
};

struct Windows::Foundation::Collections::IIterable_impl<unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_207
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 0,
  isBothLT32Bit = 0,
  isBothLT64Bit = 0,
} TAG_UNNAMED_207, *PTAG_UNNAMED_207;

struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_208
{
  isSigned = 0,
  is64Bit = 1,
  is32Bit = 0,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 0,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 0,
  isUint32 = 0,
  isInt64 = 0,
  isUint64 = 1,
  bitCount = 64,
  isBool = 0,
} TAG_UNNAMED_208, *PTAG_UNNAMED_208;

typedef enum _TAG_UNNAMED_209
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_209, *PTAG_UNNAMED_209;

typedef enum _TAG_UNNAMED_210
{
  isFloat = 0,
} TAG_UNNAMED_210, *PTAG_UNNAMED_210;

typedef struct _MINIDUMP_MEMORY_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned __int64 NumberOfEntries;
} MINIDUMP_MEMORY_INFO_LIST, *PMINIDUMP_MEMORY_INFO_LIST; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_211
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_211, *PTAG_UNNAMED_211;

struct Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_212
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 1,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_212, *PTAG_UNNAMED_212;

typedef struct _KEY_SET_LAYER_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long IsTombstone : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long IsSupersedeLocal : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long IsSupersedeTree : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ClassIsInherited : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long Reserved : 28; /* bit position: 4 */
  }; /* bitfield */
} KEY_SET_LAYER_INFORMATION, *PKEY_SET_LAYER_INFORMATION; /* size: 0x0004 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,HKEY__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_213
{
  method = 3,
} TAG_UNNAMED_213, *PTAG_UNNAMED_213;

typedef enum _TAG_UNNAMED_214
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_214, *PTAG_UNNAMED_214;

struct Windows::Storage::AccessCache::IItemRemovedEventArgs
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_215
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_215, *PTAG_UNNAMED_215;

typedef struct _PS_MITIGATION_AUDIT_OPTIONS_MAP
{
  /* 0x0000 */ unsigned __int64 Map[3];
} PS_MITIGATION_AUDIT_OPTIONS_MAP, *PPS_MITIGATION_AUDIT_OPTIONS_MAP; /* size: 0x0018 */

typedef struct _BCRYPT_DH_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_DH_KEY_BLOB, *PBCRYPT_DH_KEY_BLOB; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_216
{
  isSigned = 0,
  is64Bit = 0,
  is32Bit = 0,
  is16Bit = 1,
  is8Bit = 0,
  isLT32Bit = 1,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 1,
  isInt32 = 0,
  isUint32 = 0,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 16,
  isBool = 0,
} TAG_UNNAMED_216, *PTAG_UNNAMED_216;

struct ISurrogate
{
}; /* size: 0x0008 */

typedef struct _tlgProvider_t
{
  /* 0x0000 */ unsigned int LevelPlus1;
  /* 0x0004 */ long Padding_239;
  /* 0x0008 */ const unsigned short* ProviderMetadataPtr;
  /* 0x0010 */ unsigned __int64 KeywordAny;
  /* 0x0018 */ unsigned __int64 KeywordAll;
  /* 0x0020 */ unsigned __int64 RegHandle;
  /* 0x0028 */ void* EnableCallback /* function */;
  /* 0x0030 */ void* CallbackContext;
} tlgProvider_t, *PtlgProvider_t; /* size: 0x0038 */

struct CDdeObject::CProxyManagerImpl
{
  /* 0x0000 */ long Padding_240[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

typedef struct _RTL_QUERY_DEBUG_VIRTUAL_PROCESS
{
  /* 0x0000 */ void* Context;
  /* 0x0008 */ void* ReadMemoryRoutine /* function */;
  /* 0x0010 */ void* QueryInformationRoutine /* function */;
} RTL_QUERY_DEBUG_VIRTUAL_PROCESS, *PRTL_QUERY_DEBUG_VIRTUAL_PROCESS; /* size: 0x0018 */

typedef enum _DEBUG_CONTROL_SPACE_ITEM
{
  DEBUG_CONTROL_SPACE_PCR = 0,
  DEBUG_CONTROL_SPACE_PRCB = 1,
  DEBUG_CONTROL_SPACE_KSPECIAL = 2,
  DEBUG_CONTROL_SPACE_THREAD = 3,
  DEBUG_CONTROL_SPACE_MAXIMUM = 4,
} DEBUG_CONTROL_SPACE_ITEM, *PDEBUG_CONTROL_SPACE_ITEM;

struct FRAME_Invoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ struct _GUID* piid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned short wFlags;
  /* 0x0022 */ char __pad4[4];
  /* 0x0026 */ char Padding_241[2];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* puArgErr;
}; /* size: 0x0048 */

struct DISPATCH_SERVER_FRAME
{
  /* 0x0000 */ long Padding_242[22];
  /* 0x0058 */ struct FRAME_Invoke m_memoryFrame;
  /* 0x00a0 */ int m_fDoneStubPrecheck;
  /* 0x00a4 */ int m_fDoneStubPostcheck;
}; /* size: 0x00a8 */

typedef enum _TAG_UNNAMED_217
{
  method = 3,
} TAG_UNNAMED_217, *PTAG_UNNAMED_217;

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Search::SortEntry,0>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_218
{
  isFloat = 0,
} TAG_UNNAMED_218, *PTAG_UNNAMED_218;

class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >
{
}; /* size: 0x0008 */

class OleIsCurrentClipboardInternal::__l17::<lambda_3904bc2c8ffcdb0dc095ee3ff7f15bb5>
{
  /* 0x0000 */ struct IDataObject* pDataObj;
}; /* size: 0x0008 */

enum utl::float_round_style
{
  round_indeterminate = -1,
  round_toward_zero = 0,
  round_to_nearest = 1,
  round_toward_infinity = 2,
  round_toward_neg_infinity = 3,
};

class std::error_condition
{
  /* 0x0000 */ int _Myval;
  /* 0x0004 */ long Padding_243;
  /* 0x0008 */ const class std::error_category* _Mycat;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_219
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_219, *PTAG_UNNAMED_219;

typedef struct _SYSTEM_ACCESS_FILTER_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ACCESS_FILTER_ACE, *PSYSTEM_ACCESS_FILTER_ACE; /* size: 0x000c */

typedef enum _TAG_UNNAMED_220
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_220, *PTAG_UNNAMED_220;

struct ITypeFactory
{
}; /* size: 0x0008 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_244;
  /* 0x0008 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0020 */ struct _CERT_ID RecipientId;
  /* 0x0048 */ struct _FILETIME Date;
  /* 0x0050 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO; /* size: 0x0058 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> >
{
}; /* size: 0x0008 */

enum MultiplicationState
{
  MultiplicationState_CastInt = 0,
  MultiplicationState_CastInt64 = 1,
  MultiplicationState_CastUint = 2,
  MultiplicationState_CastUint64 = 3,
  MultiplicationState_Uint64Uint = 4,
  MultiplicationState_Uint64Uint64 = 5,
  MultiplicationState_Uint64Int = 6,
  MultiplicationState_Uint64Int64 = 7,
  MultiplicationState_UintUint64 = 8,
  MultiplicationState_UintInt64 = 9,
  MultiplicationState_Int64Uint = 10,
  MultiplicationState_Int64Int64 = 11,
  MultiplicationState_Int64Int = 12,
  MultiplicationState_IntUint64 = 13,
  MultiplicationState_IntInt64 = 14,
  MultiplicationState_Int64Uint64 = 15,
  MultiplicationState_Error = 16,
};

struct _ACTIVATION_CONTEXT_DATA;

typedef enum _TAG_UNNAMED_221
{
  isSigned = 0,
  is64Bit = 0,
  is32Bit = 1,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 0,
  isUint32 = 1,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 32,
  isBool = 0,
} TAG_UNNAMED_221, *PTAG_UNNAMED_221;

typedef enum _CM_SERVICE_NODE_TYPE
{
  DriverType = 1,
  FileSystemType = 2,
  Win32ServiceOwnProcess = 16,
  Win32ServiceShareProcess = 32,
  AdapterType = 4,
  RecognizerType = 8,
} CM_SERVICE_NODE_TYPE, *PCM_SERVICE_NODE_TYPE;

typedef struct _WNF_STATE_NAME
{
  /* 0x0000 */ unsigned long Data[2];
} WNF_STATE_NAME, *PWNF_STATE_NAME; /* size: 0x0008 */

struct tagRPCOLEMESSAGE
{
  /* 0x0000 */ void* reserved1;
  /* 0x0008 */ unsigned long dataRepresentation;
  /* 0x000c */ long Padding_245;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long cbBuffer;
  /* 0x001c */ unsigned long iMethod;
  /* 0x0020 */ void* reserved2[5];
  /* 0x0048 */ unsigned long rpcFlags;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

enum wil::CustomReportingKind
{
  Custom1 = 0,
  Custom2 = 1,
  Custom3 = 2,
};

typedef enum _TAG_UNNAMED_222
{
  isSigned = 0,
  is64Bit = 0,
  is32Bit = 1,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 0,
  isUint32 = 1,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 32,
  isBool = 0,
} TAG_UNNAMED_222, *PTAG_UNNAMED_222;

enum wil::VariantReportingKind
{
  None = 0,
  UniqueUsage = 1,
  DeviceUsage = 2,
};

class Windows::Internal::String
{
  /* 0x0000 */ struct HSTRING__* _hstring;
}; /* size: 0x0008 */

enum AppPolicyWindowingModel
{
  AppPolicyWindowingModel_None = 0,
  AppPolicyWindowingModel_Universal = 1,
  AppPolicyWindowingModel_ClassicDesktop = 2,
  AppPolicyWindowingModel_ClassicPhone = 3,
};

class wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::window_dc,HDC__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::window_dc m_ptr;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_223
{
  isFloat = 0,
} TAG_UNNAMED_223, *PTAG_UNNAMED_223;

class wil::details::EnsureCoalescedTimer::__l8::<lambda_d51448ba32f8ef42e59400edd4566183>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_224
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_224, *PTAG_UNNAMED_224;

struct IOleInPlaceObject
{
}; /* size: 0x0008 */

enum RESOURCE_CONTRAST
{
  STANDARD = 0,
  HIGH = 1,
  BLACK_BACKGROUND = 2,
  WHITE_BACKGROUND = 3,
};

struct Windows::Foundation::Collections::IVectorView<bool>
{
}; /* size: 0x0008 */

typedef struct _LONGDOUBLE
{
  /* 0x0000 */ double x;
} LONGDOUBLE, *PLONGDOUBLE; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<HSTRING__ *>
{
}; /* size: 0x0008 */

class wil::details::FeatureStateManager::EnsureSubscribedToStateChangesUnderLock::__l5::<lambda_1ad7ecfab602a777ecf020873216a663>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_225
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_225, *PTAG_UNNAMED_225;

struct WINTRUST_SIGNATURE_SETTINGS_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwIndex;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cSecondarySigs;
  /* 0x0010 */ unsigned long dwVerifiedSigIndex;
  /* 0x0014 */ long Padding_246;
  /* 0x0018 */ struct _CERT_STRONG_SIGN_PARA* pCryptoPolicy;
}; /* size: 0x0020 */

struct INTERPRETER_OPT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ServerMustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientMustSize : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasReturn : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasPipes : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasAsyncUuid : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasExtensions : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasAsyncHandle : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

typedef struct __MIDL_ICallFrame_0001
{
  /* 0x0000 */ unsigned long iMethod;
  /* 0x0004 */ int fHasInValues;
  /* 0x0008 */ int fHasInOutValues;
  /* 0x000c */ int fHasOutValues;
  /* 0x0010 */ int fDerivesFromIDispatch;
  /* 0x0014 */ long cInInterfacesMax;
  /* 0x0018 */ long cInOutInterfacesMax;
  /* 0x001c */ long cOutInterfacesMax;
  /* 0x0020 */ long cTopLevelInInterfaces;
  /* 0x0024 */ struct _GUID iid;
  /* 0x0034 */ unsigned long cMethod;
  /* 0x0038 */ unsigned long cParams;
} _MIDL_ICallFrame_0001, *P_MIDL_ICallFrame_0001; /* size: 0x003c */

struct MD_METHOD
{
  /* 0x0000 */ unsigned long m_numberOfParams;
  /* 0x0004 */ long Padding_247;
  /* 0x0008 */ struct PARAM_DESCRIPTION* m_params;
  /* 0x0010 */ struct INTERPRETER_OPT_FLAGS m_optFlags;
  /* 0x0011 */ char Padding_248[3];
  /* 0x0014 */ unsigned long m_rpcFlags;
  /* 0x0018 */ const struct _MIDL_STUB_DESC* m_pStubDesc;
  /* 0x0020 */ unsigned long m_cbPushedByCaller;
  /* 0x0024 */ unsigned short m_cbClientBuffer;
  /* 0x0026 */ unsigned short m_cbServerBuffer;
  /* 0x0028 */ unsigned long m_cbStackInclRet;
  /* 0x002c */ struct __MIDL_ICallFrame_0001 m_info;
  /* 0x0068 */ int m_fCanShareAllParameters;
  /* 0x006c */ long Padding_249;
  /* 0x0070 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0078 */ unsigned long m_iMethod;
  /* 0x007c */ long Padding_250;
  /* 0x0080 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0088 */ struct MD_PARAM* m_rgParams;
  /* 0x0090 */ wchar_t* m_wszMethodName;
  /* 0x0098 */ struct NDR_PROC_HEADER_EXTS* m_pHeaderExts;
}; /* size: 0x00a0 */

struct IInternetThreadSwitch
{
}; /* size: 0x0008 */

enum MACPICTFAILUREREASONS
{
  MACPICTUNSUPPORTED = 0,
  MACPICTCONVERSIONDLLNOTFOUND = 1,
};

class std::initializer_list<char16_t>
{
  /* 0x0000 */ const char16_t* _First;
  /* 0x0008 */ const char16_t* _Last;
}; /* size: 0x0010 */

enum BinaryState
{
  BinaryState_OK = 0,
  BinaryState_Int8 = 1,
  BinaryState_Int16 = 2,
  BinaryState_Int32 = 3,
};

struct IUri
{
}; /* size: 0x0008 */

struct tagQACONTROL
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMiscStatus;
  /* 0x0008 */ unsigned long dwViewStatus;
  /* 0x000c */ unsigned long dwEventCookie;
  /* 0x0010 */ unsigned long dwPropNotifyCookie;
  /* 0x0014 */ unsigned long dwPointerActivationPolicy;
}; /* size: 0x0018 */

enum IMMERSIVELAUNCHERDISMISSMETHOD
{
  ILDM_INVALID = 0,
  ILDM_HSHELLTASKMAN = 1,
  ILDM_STARTCHARM = 2,
  ILDM_BACKGESTURE = 3,
  ILDM_ESCAPEKEY = 4,
  ILDM_SHOWDESKTOP = 5,
  ILDM_STARTTIP = 6,
  ILDM_GENERIC_NONANIMATING = 7,
  ILDM_SEARCH_OPENING = 8,
  ILDM_DRAG = 9,
};

enum wil::FeatureString
{
  Name = 0,
  Description = 1,
  GroupName = 2,
  GroupDescription = 3,
  EMail = 4,
  Link = 5,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs *>
{
}; /* size: 0x0008 */

enum SubtractionState
{
  SubtractionState_BothUnsigned = 0,
  SubtractionState_CastIntCheckMinMax = 1,
  SubtractionState_CastIntCheckMin = 2,
  SubtractionState_CastInt64CheckMinMax = 3,
  SubtractionState_CastInt64CheckMin = 4,
  SubtractionState_Uint64Int = 5,
  SubtractionState_UintInt64 = 6,
  SubtractionState_Int64Int = 7,
  SubtractionState_IntInt64 = 8,
  SubtractionState_Int64Uint = 9,
  SubtractionState_IntUint64 = 10,
  SubtractionState_Int64Uint64 = 11,
  SubtractionState_BothUnsigned2 = 12,
  SubtractionState_CastIntCheckMinMax2 = 13,
  SubtractionState_CastInt64CheckMinMax2 = 14,
  SubtractionState_Uint64Int2 = 15,
  SubtractionState_UintInt642 = 16,
  SubtractionState_Int64Int2 = 17,
  SubtractionState_IntInt642 = 18,
  SubtractionState_Int64Uint2 = 19,
  SubtractionState_IntUint642 = 20,
  SubtractionState_Int64Uint642 = 21,
  SubtractionState_Error = 22,
};

typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_251;
  /* 0x0008 */ wchar_t* pwszCNGSignHashAlgids;
  /* 0x0010 */ wchar_t* pwszCNGPubKeyMinBitLengths;
} CERT_STRONG_SIGN_SERIALIZED_INFO, *PCERT_STRONG_SIGN_SERIALIZED_INFO; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_226
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_226, *PTAG_UNNAMED_226;

struct wistd::unique_ptr<_TOKEN_GROUPS_AND_PRIVILEGES,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;

enum tagOLECONTF
{
  OLECONTF_EMBEDDINGS = 1,
  OLECONTF_LINKS = 2,
  OLECONTF_OTHERS = 4,
  OLECONTF_ONLYUSER = 8,
  OLECONTF_ONLYIFRUNNING = 16,
};

typedef enum _TAG_UNNAMED_227
{
  isSigned = 1,
  is64Bit = 1,
  is32Bit = 0,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 0,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 0,
  isUint32 = 0,
  isInt64 = 1,
  isUint64 = 0,
  bitCount = 64,
  isBool = 0,
} TAG_UNNAMED_227, *PTAG_UNNAMED_227;

typedef enum _SE_AUDIT_OPERATION
{
  AuditPrivilegeObject = 0,
  AuditPrivilegeService = 1,
  AuditAccessCheck = 2,
  AuditOpenObject = 3,
  AuditOpenObjectWithTransaction = 4,
  AuditCloseObject = 5,
  AuditDeleteObject = 6,
  AuditOpenObjectForDelete = 7,
  AuditOpenObjectForDeleteWithTransaction = 8,
  AuditCloseNonObject = 9,
  AuditOpenNonObject = 10,
  AuditObjectReference = 11,
  AuditHandleCreation = 12,
} SE_AUDIT_OPERATION, *PSE_AUDIT_OPERATION;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_228
{
  isFloat = 0,
} TAG_UNNAMED_228, *PTAG_UNNAMED_228;

struct SYMSRV_INDEX_INFO
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ char file[261];
  /* 0x0109 */ char Padding_252[3];
  /* 0x010c */ int stripped;
  /* 0x0110 */ unsigned long timestamp;
  /* 0x0114 */ unsigned long size;
  /* 0x0118 */ char dbgfile[261];
  /* 0x021d */ char pdbfile[261];
  /* 0x0322 */ char Padding_253[2];
  /* 0x0324 */ struct _GUID guid;
  /* 0x0334 */ unsigned long sig;
  /* 0x0338 */ unsigned long age;
}; /* size: 0x033c */

struct Windows::Foundation::Collections::IIterable<__int64>
{
}; /* size: 0x0008 */

enum RESOURCE_SCALE
{
  SCALE100_PERCENT = 0,
  SCALE140_PERCENT = 1,
  SCALE180_PERCENT = 2,
  SCALE80_PERCENT = 3,
  SCALE150_PERCENT = 4,
  SCALE160_PERCENT = 5,
  SCALE225_PERCENT = 6,
  SCALE120_PERCENT = 7,
  SCALE125_PERCENT = 8,
  SCALE200_PERCENT = 9,
  SCALE220_PERCENT = 10,
  SCALE240_PERCENT = 11,
  SCALE250_PERCENT = 12,
  SCALE300_PERCENT = 13,
  SCALE400_PERCENT = 14,
  SCALE500_PERCENT = 15,
};

enum wil::SupportedExceptions
{
  Default = 0,
  Known = 1,
  All = 2,
  None = 3,
  Thrown = 4,
  ThrownOrAlloc = 5,
};

struct _TP_CALLBACK_INSTANCE;

struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,double>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_229
{
  isSigned = 1,
  is64Bit = 0,
  is32Bit = 1,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 1,
  isUint32 = 0,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 32,
  isBool = 0,
} TAG_UNNAMED_229, *PTAG_UNNAMED_229;

enum tagSTRUCTURED_QUERY_SINGLE_OPTION
{
  SQSO_SCHEMA = 0,
  SQSO_LOCALE_WORD_BREAKING = 1,
  SQSO_WORD_BREAKER = 2,
  SQSO_NATURAL_SYNTAX = 3,
  SQSO_AUTOMATIC_WILDCARD = 4,
  SQSO_TRACE_LEVEL = 5,
  SQSO_LANGUAGE_KEYWORDS = 6,
  SQSO_SYNTAX = 7,
  SQSO_TIME_ZONE = 8,
  SQSO_IMPLICIT_CONNECTOR = 9,
  SQSO_CONNECTOR_CASE = 10,
};

typedef enum __MIDL_IBindStatusCallback_0004
{
  URL_ENCODING_NONE = 0,
  URL_ENCODING_ENABLE_UTF8 = 0x10000000,
  URL_ENCODING_DISABLE_UTF8 = 0x20000000,
} _MIDL_IBindStatusCallback_0004, *P_MIDL_IBindStatusCallback_0004;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_230
{
  isFloat = 0,
} TAG_UNNAMED_230, *PTAG_UNNAMED_230;

typedef struct _MINIDUMP_EXCEPTION_INFORMATION64
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned __int64 ExceptionRecord;
  /* 0x000c */ unsigned __int64 ContextRecord;
  /* 0x0014 */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION64, *PMINIDUMP_EXCEPTION_INFORMATION64; /* size: 0x0018 */

class wil::details::<lambda_b31086e40af2dedb9a355c1c122855d8>
{
}; /* size: 0x0001 */

enum Microsoft::WRL::ErrorPropagationPolicy
{
  PropagateDelegateError = 1,
  IgnoreDelegateError = 2,
  PropagateErrorWithWin8Quirk = -1,
};

struct PPM_WMI_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ unsigned char IncreaseLevel;
  /* 0x000a */ unsigned char DecreaseLevel;
  /* 0x000b */ unsigned char Type;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ long Padding_254;
  /* 0x0018 */ unsigned __int64 Control;
  /* 0x0020 */ unsigned __int64 Status;
  /* 0x0028 */ unsigned long HitCount;
  /* 0x002c */ unsigned long Reserved1;
  /* 0x0030 */ unsigned __int64 Reserved2;
  /* 0x0038 */ unsigned __int64 Reserved3;
}; /* size: 0x0040 */

enum VERIFIER_MODE
{
  VERIFIER_MODE_UNUSED = 0,
  VERIFIER_MODE_TRIAGE = 1,
  VERIFIER_MODE_FIELD = 2,
  VERIFIER_MODE_LOGO = 3,
  VERIFIER_MODE_TEST = 4,
};

enum CastMethod
{
  CastOK = 0,
  CastCheckLTZero = 1,
  CastCheckGTMax = 2,
  CastCheckMinMaxUnsigned = 3,
  CastCheckMinMaxSigned = 4,
  CastToFloat = 5,
  CastFromFloat = 6,
  CastToBool = 7,
  CastFromBool = 8,
};

typedef enum _TAG_UNNAMED_231
{
  value = 0,
} TAG_UNNAMED_231, *PTAG_UNNAMED_231;

struct CBuffer
{
  /* 0x0000 */ unsigned char* Cursor;
  /* 0x0008 */ unsigned __int64 BytesRemaining;
}; /* size: 0x0010 */

class wil::ActivityThreadWatcher
{
  /* 0x0000 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0020 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
}; /* size: 0x0048 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IWeakReference>
{
}; /* size: 0x0008 */

typedef struct __MIDL___MIDL_itf_activate_0000_0010_0004
{
  /* 0x0000 */ unsigned long ulNumClasses;
  /* 0x0004 */ long Padding_255;
  /* 0x0008 */ struct _GUID* pCLSIDs;
  /* 0x0010 */ unsigned long pidProcess;
  /* 0x0014 */ long Padding_256;
  /* 0x0018 */ void* hProcess;
  /* 0x0020 */ void* hImpersonationToken;
  /* 0x0028 */ wchar_t* pwszWinstaDesktop;
  /* 0x0030 */ unsigned long dwState;
  /* 0x0034 */ struct _GUID AppId;
  /* 0x0044 */ enum __MIDL___MIDL_itf_activate_0000_0010_0001 ServerType;
  /* 0x0048 */ enum __MIDL___MIDL_itf_activate_0000_0010_0002 ServerID;
  /* 0x004c */ struct _FILETIME ftCreated;
  /* 0x0054 */ long __PADDING__[1];
} _MIDL___MIDL_itf_activate_0000_0010_0004, *P_MIDL___MIDL_itf_activate_0000_0010_0004; /* size: 0x0058 */

typedef enum _SYSTEM_PIXEL_FORMAT
{
  SystemPixelFormatUnknown = 0,
  SystemPixelFormatR8G8B8 = 1,
  SystemPixelFormatR8G8B8X8 = 2,
  SystemPixelFormatB8G8R8 = 3,
  SystemPixelFormatB8G8R8X8 = 4,
} SYSTEM_PIXEL_FORMAT, *PSYSTEM_PIXEL_FORMAT;

struct IOleClassInfo
{
}; /* size: 0x0008 */

class MultiplicationHelper<unsigned __int64,unsigned __int64,5>
{
}; /* size: 0x0001 */

enum AbsMethod
{
  AbsMethodInt = 0,
  AbsMethodInt64 = 1,
  AbsMethodNoop = 2,
};

enum tagPOINTER_DEVICE_CURSOR_TYPE
{
  POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0,
  POINTER_DEVICE_CURSOR_TYPE_TIP = 1,
  POINTER_DEVICE_CURSOR_TYPE_ERASER = 2,
  POINTER_DEVICE_CURSOR_TYPE_MAX = -1,
};

typedef union _ARM64_FPSR_REG
{
  union
  {
    /* 0x0000 */ unsigned long Value;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long IOC : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long DZC : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long OFC : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long UFC : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long IXC : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long res0_1 : 2; /* bit position: 5 */
      /* 0x0000 */ unsigned long IDC : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long res0_2 : 19; /* bit position: 8 */
      /* 0x0000 */ unsigned long QC : 1; /* bit position: 27 */
      /* 0x0000 */ unsigned long V : 1; /* bit position: 28 */
      /* 0x0000 */ unsigned long C : 1; /* bit position: 29 */
      /* 0x0000 */ unsigned long Z : 1; /* bit position: 30 */
      /* 0x0000 */ unsigned long N : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} ARM64_FPSR_REG, *PARM64_FPSR_REG; /* size: 0x0004 */

struct IWinRTApplicationCatalogInternal
{
}; /* size: 0x0008 */

struct tagSOUNDSENTRYW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ wchar_t* lpszWindowsEffectDLL;
  /* 0x0030 */ unsigned long iWindowsEffectOrdinal;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_232
{
  value = 1,
} TAG_UNNAMED_232, *PTAG_UNNAMED_232;

struct Windows::Storage::Search::IStorageQueryResultBase
{
}; /* size: 0x0008 */

enum tagINPUT_MESSAGE_ORIGIN_ID
{
  IMO_UNAVAILABLE = 0,
  IMO_HARDWARE = 1,
  IMO_INJECTED = 2,
  IMO_SYSTEM = 4,
};

typedef struct _CAT_MEMBERINFO2
{
  /* 0x0000 */ struct _GUID SubjectGuid;
  /* 0x0010 */ unsigned long dwCertVersion;
} CAT_MEMBERINFO2, *PCAT_MEMBERINFO2; /* size: 0x0014 */

enum tagRPCOPT_SERVER_LOCALITY_VALUES
{
  SERVER_LOCALITY_PROCESS_LOCAL = 0,
  SERVER_LOCALITY_MACHINE_LOCAL = 1,
  SERVER_LOCALITY_REMOTE = 2,
};

enum wil::EventOptions
{
  None = 0,
  ManualReset = 1,
  Signaled = 2,
};

enum MCA_EXCEPTION_TYPE
{
  HAL_MCE_RECORD = 0,
  HAL_MCA_RECORD = 1,
};

struct IPSFactoryBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateProxy /* function */;
  /* 0x0020 */ void* CreateStub /* function */;
}; /* size: 0x0028 */

enum DISPLAYCONFIG_TOPOLOGY_ID
{
  DISPLAYCONFIG_TOPOLOGY_INTERNAL = 1,
  DISPLAYCONFIG_TOPOLOGY_CLONE = 2,
  DISPLAYCONFIG_TOPOLOGY_EXTEND = 4,
  DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 8,
  DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = -1,
};

typedef enum _TAG_UNNAMED_233
{
  value = 1,
} TAG_UNNAMED_233, *PTAG_UNNAMED_233;

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ComTimeout;
  /* 0x000c */ unsigned long CallTimeout;
} RPC_BINDING_HANDLE_OPTIONS_V1, *PRPC_BINDING_HANDLE_OPTIONS_V1; /* size: 0x0010 */

struct tagMSG
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ long Padding_257;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
  /* 0x0020 */ unsigned long time;
  /* 0x0024 */ struct tagPOINT pt;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

class wil::details::<lambda_ae697f559b36aa82565cc2bf31cbd3d4>
{
}; /* size: 0x0001 */

class ComTelemetry::CallContext
{
}; /* size: 0x0140 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>
{
}; /* size: 0x0001 */

typedef enum _SECTION_INHERIT
{
  ViewShare = 1,
  ViewUnmap = 2,
} SECTION_INHERIT, *PSECTION_INHERIT;

struct Windows::Foundation::Collections::supports_cleanup<unsigned __int64>
{
}; /* size: 0x0001 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,wistd::integral_constant<unsigned __int64,2>,void *,__int64,-1,void *> > >
{
}; /* size: 0x0008 */

typedef enum __MIDL_ICallFrame_0003
{
  CALLFRAME_COPY_NESTED = 1,
  CALLFRAME_COPY_INDEPENDENT = 2,
} _MIDL_ICallFrame_0003, *P_MIDL_ICallFrame_0003;

struct IXMLDOMText
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_VM_QUERY_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
} MINIDUMP_VM_QUERY_CALLBACK, *PMINIDUMP_VM_QUERY_CALLBACK; /* size: 0x0008 */

typedef enum _IDL_CS_CONVERT
{
  IDL_CS_NO_CONVERT = 0,
  IDL_CS_IN_PLACE_CONVERT = 1,
  IDL_CS_NEW_BUFFER_CONVERT = 2,
} IDL_CS_CONVERT, *PIDL_CS_CONVERT;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumCategoriesOfCatalogClass> >;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClientSecurity> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClientSecurity>* ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_234
{
  value = 0,
} TAG_UNNAMED_234, *PTAG_UNNAMED_234;

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,__int64>
{
}; /* size: 0x0008 */

struct _STACK_TRACE_DATABASE;

typedef struct _SERVICE_LAUNCH_PROTECTED_INFO
{
  /* 0x0000 */ unsigned long dwLaunchProtected;
} SERVICE_LAUNCH_PROTECTED_INFO, *PSERVICE_LAUNCH_PROTECTED_INFO; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_235
{
  value = 1,
} TAG_UNNAMED_235, *PTAG_UNNAMED_235;

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwQualifiers;
  /* 0x0008 */ unsigned long dwIssuanceUsageIndex;
} EV_EXTRA_CERT_CHAIN_POLICY_STATUS, *PEV_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x000c */

struct tagEMRGDICOMMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

enum tagPOINTER_BUTTON_CHANGE_TYPE
{
  POINTER_CHANGE_NONE = 0,
  POINTER_CHANGE_FIRSTBUTTON_DOWN = 1,
  POINTER_CHANGE_FIRSTBUTTON_UP = 2,
  POINTER_CHANGE_SECONDBUTTON_DOWN = 3,
  POINTER_CHANGE_SECONDBUTTON_UP = 4,
  POINTER_CHANGE_THIRDBUTTON_DOWN = 5,
  POINTER_CHANGE_THIRDBUTTON_UP = 6,
  POINTER_CHANGE_FOURTHBUTTON_DOWN = 7,
  POINTER_CHANGE_FOURTHBUTTON_UP = 8,
  POINTER_CHANGE_FIFTHBUTTON_DOWN = 9,
  POINTER_CHANGE_FIFTHBUTTON_UP = 10,
};

typedef enum _WATCHDOG_HANDLER_ACTION
{
  WdActionSetTimeoutValue = 0,
  WdActionQueryTimeoutValue = 1,
  WdActionResetTimer = 2,
  WdActionStopTimer = 3,
  WdActionStartTimer = 4,
  WdActionSetTriggerAction = 5,
  WdActionQueryTriggerAction = 6,
  WdActionQueryState = 7,
  WdActionSleep = 8,
  WdActionWake = 9,
  WdActionMarkHiberPhase = 10,
} WATCHDOG_HANDLER_ACTION, *PWATCHDOG_HANDLER_ACTION;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef struct _UNWIND_HISTORY_TABLE_ENTRY
{
  /* 0x0000 */ unsigned __int64 ImageBase;
  /* 0x0008 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry;
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY; /* size: 0x0010 */

typedef struct _UNWIND_HISTORY_TABLE
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned char LocalHint;
  /* 0x0005 */ unsigned char GlobalHint;
  /* 0x0006 */ unsigned char Search;
  /* 0x0007 */ unsigned char Once;
  /* 0x0008 */ unsigned __int64 LowAddress;
  /* 0x0010 */ unsigned __int64 HighAddress;
  /* 0x0018 */ struct _UNWIND_HISTORY_TABLE_ENTRY Entry[12];
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE; /* size: 0x00d8 */

class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >
{
  /* 0x0000 */ wchar_t* m_ptr;
}; /* size: 0x0008 */

typedef struct _KEY_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualizationCandidate : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
} KEY_VIRTUALIZATION_INFORMATION, *PKEY_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IComClassIterator>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_236
{
  value = 1,
} TAG_UNNAMED_236, *PTAG_UNNAMED_236;

struct NCryptKeyName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszAlgid;
  /* 0x0010 */ unsigned long dwLegacyKeySpec;
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

enum DBCOMPAREENUM
{
  DBCOMPARE_LT = 0,
  DBCOMPARE_EQ = 1,
  DBCOMPARE_GT = 2,
  DBCOMPARE_NE = 3,
  DBCOMPARE_NOTCOMPARABLE = 4,
};

typedef enum _CSV_CONTROL_OP
{
  CsvControlStartRedirectFile = 2,
  CsvControlStopRedirectFile = 3,
  CsvControlQueryRedirectState = 4,
  CsvControlQueryFileRevision = 6,
  CsvControlQueryMdsPath = 8,
  CsvControlQueryFileRevisionFileId128 = 9,
  CsvControlQueryVolumeRedirectState = 10,
  CsvControlEnableUSNRangeModificationTracking = 13,
  CsvControlMarkHandleLocalVolumeMount = 14,
  CsvControlUnmarkHandleLocalVolumeMount = 15,
  CsvControlGetCsvFsMdsPathV2 = 18,
  CsvControlDisableCaching = 19,
  CsvControlEnableCaching = 20,
  CsvControlStartForceDFO = 21,
  CsvControlStopForceDFO = 22,
  CsvControlQueryMdsPathNoPause = 23,
  CsvControlSetVolumeId = 24,
  CsvControlQueryVolumeId = 25,
} CSV_CONTROL_OP, *PCSV_CONTROL_OP;

typedef struct _CSV_CONTROL_PARAM
{
  /* 0x0000 */ enum _CSV_CONTROL_OP Operation;
  /* 0x0004 */ long Padding_258;
  /* 0x0008 */ __int64 Unused;
} CSV_CONTROL_PARAM, *PCSV_CONTROL_PARAM; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_237
{
  method = 0,
} TAG_UNNAMED_237, *PTAG_UNNAMED_237;

struct _TP_IO;

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_238
{
  method = 0,
} TAG_UNNAMED_238, *PTAG_UNNAMED_238;

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IWeakReference *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_239
{
  isBothSigned = 1,
  isBothUnsigned = 0,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_239, *PTAG_UNNAMED_239;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<CProcessPatternTbl> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<CProcessPatternTbl>* ptr_;
}; /* size: 0x0008 */

typedef struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long Bytes;
  /* 0x000c */ HRESULT FailureStatus;
} MINIDUMP_READ_MEMORY_FAILURE_CALLBACK, *PMINIDUMP_READ_MEMORY_FAILURE_CALLBACK; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView_impl<float,1>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_240
{
  method = 3,
} TAG_UNNAMED_240, *PTAG_UNNAMED_240;

typedef struct _tlgWrapSz<char>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const char* const Psz;
  }; /* size: 0x0008 */
} tlgWrapSz<char>, *PtlgWrapSz<char>; /* size: 0x0008 */

typedef struct _SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION
{
  /* 0x0000 */ unsigned char Enabled;
} SYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION, *PSYSTEM_ENERGY_ESTIMATION_CONFIG_INFORMATION; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_241
{
  method = 1,
} TAG_UNNAMED_241, *PTAG_UNNAMED_241;

typedef struct _tlgWrapperPtrSizeType
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const void* const Ptr;
  }; /* size: 0x0008 */
  /* 0x0008 */ const unsigned long Size;
  /* 0x000c */ const unsigned long Reserved;
} tlgWrapperPtrSizeType, *PtlgWrapperPtrSizeType; /* size: 0x0010 */

enum tagCPFLAGS
{
  CPFLAG_NONE = 0,
  CPFLAG_PROPAGATE = 1,
  CPFLAG_EXPOSE = 2,
  CPFLAG_ENVOY = 4,
  CPFLAG_MONITORSTUB = 8,
  CPFLAG_MONITORPROXY = 16,
  CPFLAG_DONTCOMPARE = 32,
};

class Microsoft::WRL::ComPtr<CBrokeredClipDataObject>
{
  /* 0x0000 */ class CBrokeredClipDataObject* ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_242
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 1,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_242, *PTAG_UNNAMED_242;

typedef enum _TAG_UNNAMED_243
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_243, *PTAG_UNNAMED_243;

struct std::atomic<long>
{
  /* 0x0000 */ const BOOL is_always_lock_free;
  /* 0x0001 */ char __PADDING__[3];
}; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_244
{
  method = 1,
} TAG_UNNAMED_244, *PTAG_UNNAMED_244;

struct IErrorLog
{
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_CBA_READ_MEMORY
{
  /* 0x0000 */ unsigned __int64 addr;
  /* 0x0008 */ void* buf;
  /* 0x0010 */ unsigned long bytes;
  /* 0x0014 */ long Padding_259;
  /* 0x0018 */ unsigned long* bytesread;
} IMAGEHLP_CBA_READ_MEMORY, *PIMAGEHLP_CBA_READ_MEMORY; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_245
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 1,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_245, *PTAG_UNNAMED_245;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Provider::FileUpdateStatus>
{
}; /* size: 0x0008 */

enum DBPROPENUM20
{
  DBPROP_IMultipleResults = 217,
  DBPROP_DATASOURCE_TYPE = 251,
  MDPROP_AXES = 252,
  MDPROP_FLATTENING_SUPPORT = 253,
  MDPROP_MDX_JOINCUBES = 254,
  MDPROP_NAMED_LEVELS = 255,
  MDPROP_RANGEROWSET = 256,
  MDPROP_MDX_SLICER = 218,
  MDPROP_MDX_CUBEQUALIFICATION = 219,
  MDPROP_MDX_OUTERREFERENCE = 220,
  MDPROP_MDX_QUERYBYPROPERTY = 221,
  MDPROP_MDX_CASESUPPORT = 222,
  MDPROP_MDX_STRING_COMPOP = 224,
  MDPROP_MDX_DESCFLAGS = 225,
  MDPROP_MDX_SET_FUNCTIONS = 226,
  MDPROP_MDX_MEMBER_FUNCTIONS = 227,
  MDPROP_MDX_NUMERIC_FUNCTIONS = 228,
  MDPROP_MDX_FORMULAS = 229,
  MDPROP_AGGREGATECELL_UPDATE = 230,
  MDPROP_MDX_AGGREGATECELL_UPDATE = 230,
  MDPROP_MDX_OBJQUALIFICATION = 261,
  MDPROP_MDX_NONMEASURE_EXPRESSIONS = 262,
  DBPROP_ACCESSORDER = 231,
  DBPROP_BOOKMARKINFO = 232,
  DBPROP_INIT_CATALOG = 233,
  DBPROP_ROW_BULKOPS = 234,
  DBPROP_PROVIDERFRIENDLYNAME = 235,
  DBPROP_LOCKMODE = 236,
  DBPROP_MULTIPLECONNECTIONS = 237,
  DBPROP_UNIQUEROWS = 238,
  DBPROP_SERVERDATAONINSERT = 239,
  DBPROP_STORAGEFLAGS = 240,
  DBPROP_CONNECTIONSTATUS = 244,
  DBPROP_ALTERCOLUMN = 245,
  DBPROP_COLUMNLCID = 246,
  DBPROP_RESETDATASOURCE = 247,
  DBPROP_INIT_OLEDBSERVICES = 248,
  DBPROP_IRowsetRefresh = 249,
  DBPROP_SERVERNAME = 250,
  DBPROP_IParentRowset = 257,
  DBPROP_HIDDENCOLUMNS = 258,
  DBPROP_PROVIDERMEMORY = 259,
  DBPROP_CLIENTCURSOR = 260,
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT
{
  /* 0x0000 */ unsigned __int64 Hits;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ char __PADDING__[7];
} SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT, *PSYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_246
{
  method = 3,
} TAG_UNNAMED_246, *PTAG_UNNAMED_246;

typedef enum _TAG_UNNAMED_247
{
  isBothSigned = 0,
  isBothUnsigned = 0,
  isLikeSigned = 0,
  isCastOK = 0,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_247, *PTAG_UNNAMED_247;

struct Windows::Foundation::Collections::IMapView_impl<__int64,double>
{
}; /* size: 0x0008 */

struct IUrlMon
{
}; /* size: 0x0008 */

struct SPointerHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ void* key;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::AgileRef>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_248
{
  method = 1,
} TAG_UNNAMED_248, *PTAG_UNNAMED_248;

typedef struct _tlgDataDescInit<_tlgIndexSequence<20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19> >
{
} tlgDataDescInit<_tlgIndexSequence<20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19> >, *PtlgDataDescInit<_tlgIndexSequence<20,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19> >; /* size: 0x0001 */

typedef struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION
{
  /* 0x0000 */ unsigned short NumberOfRanges;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE* Ranges;
} PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION, *PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGES_INFORMATION; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_249
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_249, *PTAG_UNNAMED_249;

typedef enum _TAG_UNNAMED_250
{
  method = 1,
} TAG_UNNAMED_250, *PTAG_UNNAMED_250;

typedef enum _tagPI_FLAGS
{
  PI_PARSE_URL = 1,
  PI_FILTER_MODE = 2,
  PI_FORCE_ASYNC = 4,
  PI_USE_WORKERTHREAD = 8,
  PI_MIMEVERIFICATION = 16,
  PI_CLSIDLOOKUP = 32,
  PI_DATAPROGRESS = 64,
  PI_SYNCHRONOUS = 128,
  PI_APARTMENTTHREADED = 256,
  PI_CLASSINSTALL = 512,
  PI_PASSONBINDCTX = 8192,
  PI_NOMIMEHANDLER = 0xffff8000,
  PI_LOADAPPDIRECT = 16384,
  PD_FORCE_SWITCH = 0x10000,
  PI_PREFERDEFAULTHANDLER = 0x20000,
} tagPI_FLAGS, *PtagPI_FLAGS;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_251
{
  method = 6,
} TAG_UNNAMED_251, *PTAG_UNNAMED_251;

typedef enum _TAG_UNNAMED_252
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 0,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 1,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_252, *PTAG_UNNAMED_252;

typedef enum _TAG_UNNAMED_253
{
  DataID = 2342,
} TAG_UNNAMED_253, *PTAG_UNNAMED_253;

typedef enum _TAG_UNNAMED_254
{
  isBothSigned = 1,
  isBothUnsigned = 0,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_254, *PTAG_UNNAMED_254;

typedef enum _TAG_UNNAMED_255
{
  isSigned = 1,
  is64Bit = 0,
  is32Bit = 1,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 1,
  isUint32 = 0,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 32,
  isBool = 0,
} TAG_UNNAMED_255, *PTAG_UNNAMED_255;

struct IProvideMultipleClassInfo
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IGlobalInterfaceTable>
{
  /* 0x0000 */ struct IGlobalInterfaceTable* ptr_;
}; /* size: 0x0008 */

class Windows::Internal::Details::Git
{
  /* 0x0000 */ unsigned long _cAcquired;
  /* 0x0004 */ long Padding_260;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IGlobalInterfaceTable> _spGit;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_256
{
  method = 2,
} TAG_UNNAMED_256, *PTAG_UNNAMED_256;

typedef enum _TAG_UNNAMED_257
{
  IntZone_UintLT32_UintLT32 = 1,
  IntZone_Uint32_UintLT64 = 0,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_257, *PTAG_UNNAMED_257;

struct IMachineGlobalObjectTable
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_258
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 1,
  isBothLT64Bit = 1,
} TAG_UNNAMED_258, *PTAG_UNNAMED_258;

enum AddPackageDependencyOptions
{
  AddPackageDependencyOptions_None = 0,
  AddPackageDependencyOptions_PrependIfRankCollision = 1,
};

class SafeInt<long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >
{
  /* 0x0000 */ long m_int;
}; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_259
{
  method = 0,
} TAG_UNNAMED_259, *PTAG_UNNAMED_259;

struct tagRPC_ERROR_ENUM_HANDLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_261;
  /* 0x0008 */ void* CurrentPos;
  /* 0x0010 */ void* Head;
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_260
{
  method = 0,
} TAG_UNNAMED_260, *PTAG_UNNAMED_260;

typedef enum _TAG_UNNAMED_261
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_261, *PTAG_UNNAMED_261;

struct IEnumRGBQuad
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _UNWIND_OP_CODES
{
  UWOP_PUSH_NONVOL = 0,
  UWOP_ALLOC_LARGE = 1,
  UWOP_ALLOC_SMALL = 2,
  UWOP_SET_FPREG = 3,
  UWOP_SAVE_NONVOL = 4,
  UWOP_SAVE_NONVOL_FAR = 5,
  UWOP_EPILOG = 6,
  UWOP_SPARE_CODE = 7,
  UWOP_SAVE_XMM128 = 8,
  UWOP_SAVE_XMM128_FAR = 9,
  UWOP_PUSH_MACHFRAME = 10,
} UNWIND_OP_CODES, *PUNWIND_OP_CODES;

struct wistd::__compressed_pair_elem<unsigned short *,0,0>
{
  /* 0x0000 */ wchar_t* __value_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IVectorChangedEventArgs>
{
  /* 0x0000 */ long Padding_262[6];
  /* 0x0018 */ union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer refCount_;
}; /* size: 0x0020 */

typedef enum _RTL_GENERIC_COMPARE_RESULTS
{
  GenericLessThan = 0,
  GenericGreaterThan = 1,
  GenericEqual = 2,
} RTL_GENERIC_COMPARE_RESULTS, *PRTL_GENERIC_COMPARE_RESULTS;

struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&CloseHandle> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_262
{
  method = 8,
} TAG_UNNAMED_262, *PTAG_UNNAMED_262;

class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy>
{
  /* 0x0000 */ struct ICallFrameEvents* m_ptr;
}; /* size: 0x0008 */

class AdHocInterceptor<IOleInPlaceObject>
{
  /* 0x0000 */ long Padding_263[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_263
{
  method = 0,
} TAG_UNNAMED_263, *PTAG_UNNAMED_263;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_264
{
  isFloat = 0,
} TAG_UNNAMED_264, *PTAG_UNNAMED_264;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Search::IndexedState>
{
}; /* size: 0x0008 */

struct tagACTCTX_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x0010 */ unsigned long ulLength;
  /* 0x0014 */ long Padding_264;
  /* 0x0018 */ void* lpSectionGlobalData;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long Padding_265;
  /* 0x0028 */ void* lpSectionBase;
  /* 0x0030 */ unsigned long ulSectionTotalLength;
  /* 0x0034 */ long Padding_266;
  /* 0x0038 */ void* hActCtx;
  /* 0x0040 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0044 */ unsigned long ulFlags;
  /* 0x0048 */ struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
}; /* size: 0x0070 */

typedef enum _SUSPEND_RESILIENCY_TYPE
{
  SuspendResiliencyTypeLocal = 0,
  SuspendResiliencyTypeCrossVM = 1,
} SUSPEND_RESILIENCY_TYPE, *PSUSPEND_RESILIENCY_TYPE;

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *>;

struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned int>
{
}; /* size: 0x0008 */

struct ISimpleBinding
{
}; /* size: 0x0008 */

enum AsycImageDataMembers
{
  AFM_IMAGE_HDC = 0,
  AFM_IMAGE_HBITMAP = 1,
  AFM_IMAGE_HPALETTE = 2,
  AFM_MASK_HDC = 3,
  AFM_MASK_HBITMAP = 4,
  AFM_MAX = 5,
};

typedef enum _TAG_UNNAMED_265
{
  __the_value = 0,
} TAG_UNNAMED_265, *PTAG_UNNAMED_265;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

struct DLGITEMTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ short x;
  /* 0x000a */ short y;
  /* 0x000c */ short cx;
  /* 0x000e */ short cy;
  /* 0x0010 */ unsigned short id;
}; /* size: 0x0012 */

struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>
{
}; /* size: 0x0001 */

typedef enum __MIDL_IBindStatusCallbackEx_0001
{
  BINDF2_DISABLEBASICOVERHTTP = 1,
  BINDF2_DISABLEAUTOCOOKIEHANDLING = 2,
  BINDF2_READ_DATA_GREATER_THAN_4GB = 4,
  BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID = 8,
  BINDF2_SETDOWNLOADMODE = 32,
  BINDF2_DISABLE_HTTP_REDIRECT_CACHING = 64,
  BINDF2_KEEP_CALLBACK_MODULE_LOADED = 128,
  BINDF2_ALLOW_PROXY_CRED_PROMPT = 256,
  BINDF2_RESERVED_17 = 512,
  BINDF2_RESERVED_16 = 1024,
  BINDF2_RESERVED_15 = 2048,
  BINDF2_RESERVED_14 = 4096,
  BINDF2_RESERVED_13 = 8192,
  BINDF2_RESERVED_12 = 16384,
  BINDF2_RESERVED_11 = 0xffff8000,
  BINDF2_RESERVED_10 = 0x10000,
  BINDF2_RESERVED_F = 0x20000,
  BINDF2_RESERVED_E = 0x40000,
  BINDF2_RESERVED_D = 0x80000,
  BINDF2_RESERVED_C = 0x100000,
  BINDF2_RESERVED_B = 0x200000,
  BINDF2_RESERVED_A = 0x400000,
  BINDF2_RESERVED_9 = 0x800000,
  BINDF2_RESERVED_8 = 0x1000000,
  BINDF2_RESERVED_7 = 0x2000000,
  BINDF2_RESERVED_6 = 0x4000000,
  BINDF2_RESERVED_5 = 0x8000000,
  BINDF2_RESERVED_4 = 0x10000000,
  BINDF2_RESERVED_3 = 0x20000000,
  BINDF2_RESERVED_2 = 0x40000000,
  BINDF2_RESERVED_1 = -2147483648,
} _MIDL_IBindStatusCallbackEx_0001, *P_MIDL_IBindStatusCallbackEx_0001;

typedef enum _TAG_UNNAMED_266
{
  value = 1,
} TAG_UNNAMED_266, *PTAG_UNNAMED_266;

class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>
{
  /* 0x0000 */ long Padding_267[10];
  /* 0x0028 */ class wil::details::StoredCallContextInfo m_callContext;
  /* 0x0048 */ int m_stopCountExpected;
  /* 0x004c */ HRESULT m_result;
  /* 0x0050 */ class wil::StoredFailureInfo m_failure;
  /* 0x00f8 */ class wil::srwlock m_lock;
}; /* size: 0x0100 */

typedef enum _CPU_SET_INFORMATION_TYPE
{
  CpuSetInformation = 0,
} CPU_SET_INFORMATION_TYPE, *PCPU_SET_INFORMATION_TYPE;

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<unsigned int> *>
{
}; /* size: 0x0008 */

enum CI_WINDOWS_LOCKDOWN_RESTRICTION
{
  CI_WINDOWS_LOCKDOWN_RESTRICTION_NONE = 0,
  CI_WINDOWS_LOCKDOWN_RESTRICTION_NOUNLOCK = 1,
  CI_WINDOWS_LOCKDOWN_RESTRICTION_NOUNLOCK_PERMANENT = 2,
  CI_WINDOWS_LOCKDOWN_RESTRICTION_MAX = 3,
};

class std::lock_guard<std::mutex>
{
  /* 0x0000 */ class std::mutex& _MyMutex;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_267
{
  value = 0,
} TAG_UNNAMED_267, *PTAG_UNNAMED_267;

struct SPC_SIGINFO_
{
  /* 0x0000 */ unsigned long dwSipVersion;
  /* 0x0004 */ struct _GUID gSIPGuid;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ unsigned long dwReserved3;
  /* 0x0020 */ unsigned long dwReserved4;
  /* 0x0024 */ unsigned long dwReserved5;
}; /* size: 0x0028 */

class DragDropTelemetry
{
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_268
{
  value = 1,
} TAG_UNNAMED_268, *PTAG_UNNAMED_268;

enum Windows::Storage::StorageItemTypes
{
  StorageItemTypes_None = 0,
  StorageItemTypes_File = 1,
  StorageItemTypes_Folder = 2,
};

enum wil::SlimEventType
{
  AutoReset = 0,
  ManualReset = 1,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,Microsoft::WRL::CloakedIid<IMarshal> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator> const >;

typedef struct _TP_POOL_STACK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 StackReserve;
  /* 0x0008 */ unsigned __int64 StackCommit;
} TP_POOL_STACK_INFORMATION, *PTP_POOL_STACK_INFORMATION; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_269
{
  value = 1,
} TAG_UNNAMED_269, *PTAG_UNNAMED_269;

struct IFontDisp
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef enum _RPC_HTTP_REDIRECTOR_STAGE
{
  RPCHTTP_RS_REDIRECT = 1,
  RPCHTTP_RS_ACCESS_1 = 2,
  RPCHTTP_RS_SESSION = 3,
  RPCHTTP_RS_ACCESS_2 = 4,
  RPCHTTP_RS_INTERFACE = 5,
} RPC_HTTP_REDIRECTOR_STAGE, *PRPC_HTTP_REDIRECTOR_STAGE;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>
{
}; /* size: 0x0008 */

typedef struct _FILE_STORAGE_INFO
{
  /* 0x0000 */ unsigned long LogicalBytesPerSector;
  /* 0x0004 */ unsigned long PhysicalBytesPerSectorForAtomicity;
  /* 0x0008 */ unsigned long PhysicalBytesPerSectorForPerformance;
  /* 0x000c */ unsigned long FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ByteOffsetForSectorAlignment;
  /* 0x0018 */ unsigned long ByteOffsetForPartitionAlignment;
} FILE_STORAGE_INFO, *PFILE_STORAGE_INFO; /* size: 0x001c */

enum wil::WilInitializeCommand
{
  Create = 0,
  Destroy = 1,
};

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP
{
  RelationProcessorCore = 0,
  RelationNumaNode = 1,
  RelationCache = 2,
  RelationProcessorPackage = 3,
  RelationGroup = 4,
  RelationProcessorDie = 5,
  RelationNumaNodeEx = 6,
  RelationProcessorModule = 7,
  RelationAll = 0xffffffff,
} LOGICAL_PROCESSOR_RELATIONSHIP, *PLOGICAL_PROCESSOR_RELATIONSHIP;

typedef struct _GROUP_AFFINITY
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned short Group;
  /* 0x000a */ unsigned short Reserved[3];
} GROUP_AFFINITY, *PGROUP_AFFINITY; /* size: 0x0010 */

typedef struct _PROCESSOR_RELATIONSHIP
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char EfficiencyClass;
  /* 0x0002 */ unsigned char Reserved[20];
  /* 0x0016 */ unsigned short GroupCount;
  /* 0x0018 */ struct _GROUP_AFFINITY GroupMask[1];
} PROCESSOR_RELATIONSHIP, *PPROCESSOR_RELATIONSHIP; /* size: 0x0028 */

typedef struct _NUMA_NODE_RELATIONSHIP
{
  /* 0x0000 */ unsigned long NodeNumber;
  /* 0x0004 */ unsigned char Reserved[18];
  /* 0x0016 */ unsigned short GroupCount;
  union
  {
    /* 0x0018 */ struct _GROUP_AFFINITY GroupMask;
    /* 0x0018 */ struct _GROUP_AFFINITY GroupMasks[1];
  }; /* size: 0x0010 */
} NUMA_NODE_RELATIONSHIP, *PNUMA_NODE_RELATIONSHIP; /* size: 0x0028 */

typedef enum _PROCESSOR_CACHE_TYPE
{
  CacheUnified = 0,
  CacheInstruction = 1,
  CacheData = 2,
  CacheTrace = 3,
} PROCESSOR_CACHE_TYPE, *PPROCESSOR_CACHE_TYPE;

typedef struct _CACHE_RELATIONSHIP
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long CacheSize;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
  /* 0x000c */ unsigned char Reserved[18];
  /* 0x001e */ unsigned short GroupCount;
  union
  {
    /* 0x0020 */ struct _GROUP_AFFINITY GroupMask;
    /* 0x0020 */ struct _GROUP_AFFINITY GroupMasks[1];
  }; /* size: 0x0010 */
} CACHE_RELATIONSHIP, *PCACHE_RELATIONSHIP; /* size: 0x0030 */

typedef struct _PROCESSOR_GROUP_INFO
{
  /* 0x0000 */ unsigned char MaximumProcessorCount;
  /* 0x0001 */ unsigned char ActiveProcessorCount;
  /* 0x0002 */ unsigned char Reserved[38];
  /* 0x0028 */ unsigned __int64 ActiveProcessorMask;
} PROCESSOR_GROUP_INFO, *PPROCESSOR_GROUP_INFO; /* size: 0x0030 */

typedef struct _GROUP_RELATIONSHIP
{
  /* 0x0000 */ unsigned short MaximumGroupCount;
  /* 0x0002 */ unsigned short ActiveGroupCount;
  /* 0x0004 */ unsigned char Reserved[20];
  /* 0x0018 */ struct _PROCESSOR_GROUP_INFO GroupInfo[1];
} GROUP_RELATIONSHIP, *PGROUP_RELATIONSHIP; /* size: 0x0048 */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
{
  /* 0x0000 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ struct _PROCESSOR_RELATIONSHIP Processor;
    /* 0x0008 */ struct _NUMA_NODE_RELATIONSHIP NumaNode;
    /* 0x0008 */ struct _CACHE_RELATIONSHIP Cache;
    /* 0x0008 */ struct _GROUP_RELATIONSHIP Group;
  }; /* size: 0x0048 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX; /* size: 0x0050 */

struct Windows::Foundation::IReferenceArray<Windows::Foundation::DateTime>
{
}; /* size: 0x0008 */

typedef enum _TRANSACTION_INFORMATION_CLASS
{
  TransactionBasicInformation = 0,
  TransactionPropertiesInformation = 1,
  TransactionEnlistmentInformation = 2,
  TransactionSuperiorEnlistmentInformation = 3,
  TransactionBindInformation = 4,
  TransactionDTCPrivateInformation = 5,
} TRANSACTION_INFORMATION_CLASS, *PTRANSACTION_INFORMATION_CLASS;

struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal> >
{
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>
{
}; /* size: 0x0008 */

enum wil::ActivityOptions
{
  None = 0,
  TelemetryOnFailure = 1,
  TraceLoggingOnFailure = 2,
};

typedef struct _IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER
{
  /* 0x0000 */ unsigned long EpilogueCount;
  /* 0x0004 */ unsigned char EpilogueByteCount;
  /* 0x0005 */ unsigned char BranchDescriptorElementSize;
  /* 0x0006 */ unsigned short BranchDescriptorCount;
} IMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER, *PIMAGE_EPILOGUE_DYNAMIC_RELOCATION_HEADER; /* size: 0x0008 */

enum FILE_WRITE_FLAGS
{
  FILE_WRITE_FLAGS_NONE = 0,
  FILE_WRITE_FLAGS_WRITE_THROUGH = 1,
};

typedef struct _PROCESS_LEAP_SECOND_INFO
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Reserved;
} PROCESS_LEAP_SECOND_INFO, *PPROCESS_LEAP_SECOND_INFO; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_270
{
  value = 0,
} TAG_UNNAMED_270, *PTAG_UNNAMED_270;

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE
{
  /* 0x0000 */ unsigned __int64 TimeAdjustment;
  /* 0x0008 */ unsigned char Enable;
  /* 0x0009 */ char __PADDING__[7];
} SYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE, *PSYSTEM_SET_TIME_ADJUST_INFORMATION_PRECISE; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_271
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_271, *PTAG_UNNAMED_271;

typedef struct _SYSTEM_BIGPOOL_ENTRY
{
  union
  {
    /* 0x0000 */ void* VirtualAddress;
    /* 0x0000 */ unsigned __int64 NonPaged : 1; /* bit position: 0 */
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 SizeInBytes;
  union
  {
    /* 0x0010 */ unsigned char Tag[4];
    /* 0x0010 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_BIGPOOL_ENTRY, *PSYSTEM_BIGPOOL_ENTRY; /* size: 0x0018 */

typedef struct _SYSTEM_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_268;
  /* 0x0008 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_BIGPOOL_INFORMATION, *PSYSTEM_BIGPOOL_INFORMATION; /* size: 0x0020 */

enum Windows::Storage::StorageLibraryChangeType
{
  StorageLibraryChangeType_Created = 0,
  StorageLibraryChangeType_Deleted = 1,
  StorageLibraryChangeType_MovedOrRenamed = 2,
  StorageLibraryChangeType_ContentsChanged = 3,
  StorageLibraryChangeType_MovedOutOfLibrary = 4,
  StorageLibraryChangeType_MovedIntoLibrary = 5,
  StorageLibraryChangeType_ContentsReplaced = 6,
  StorageLibraryChangeType_IndexingStatusChanged = 7,
  StorageLibraryChangeType_EncryptionChanged = 8,
  StorageLibraryChangeType_ChangeTrackingLost = 9,
};

enum Windows::Storage::Search::FolderDepth
{
  FolderDepth_Shallow = 0,
  FolderDepth_Deep = 1,
};

struct IAllowAstaToAstaDeadlockRisk
{
}; /* size: 0x0008 */

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_FS_VOLUME_FLAGS_INFORMATION, *PFILE_FS_VOLUME_FLAGS_INFORMATION; /* size: 0x0004 */

typedef enum _SUBSYSTEM_INFORMATION_TYPE
{
  SubsystemInformationTypeWin32 = 0,
  SubsystemInformationTypeWSL = 1,
  MaxSubsystemInformationType = 2,
} SUBSYSTEM_INFORMATION_TYPE, *PSUBSYSTEM_INFORMATION_TYPE;

class CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_269[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

enum Windows::Storage::Search::IndexerOption
{
  IndexerOption_UseIndexerWhenAvailable = 0,
  IndexerOption_OnlyUseIndexer = 1,
  IndexerOption_DoNotUseIndexer = 2,
  IndexerOption_OnlyUseIndexerAndOptimizeForIndexedProperties = 3,
};

class ComEventActivity
{
  /* 0x0000 */ struct _GUID m_previousActivityId;
  /* 0x0010 */ BOOL m_restore;
}; /* size: 0x0014 */

class wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindClose> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_272
{
  value = 1,
} TAG_UNNAMED_272, *PTAG_UNNAMED_272;

enum Windows::Storage::NameCollisionOption
{
  NameCollisionOption_GenerateUniqueName = 0,
  NameCollisionOption_ReplaceExisting = 1,
  NameCollisionOption_FailIfExists = 2,
};

enum Windows::Storage::Search::DateStackOption
{
  DateStackOption_None = 0,
  DateStackOption_Year = 1,
  DateStackOption_Month = 2,
};

struct IProvideClassInfo
{
}; /* size: 0x0008 */

enum tagRpcCallType
{
  rctInvalid = 0,
  rctNormal = 1,
  rctTraining = 2,
  rctGuaranteed = 3,
};

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >
{
}; /* size: 0x0001 */

struct IPerPropertyBrowsing
{
}; /* size: 0x0008 */

struct tagPALETTEENTRY
{
  /* 0x0000 */ unsigned char peRed;
  /* 0x0001 */ unsigned char peGreen;
  /* 0x0002 */ unsigned char peBlue;
  /* 0x0003 */ unsigned char peFlags;
}; /* size: 0x0004 */

enum Windows::Storage::FileProperties::ThumbnailMode
{
  ThumbnailMode_PicturesView = 0,
  ThumbnailMode_VideosView = 1,
  ThumbnailMode_MusicView = 2,
  ThumbnailMode_DocumentsView = 3,
  ThumbnailMode_ListView = 4,
  ThumbnailMode_SingleItem = 5,
};

enum Windows::Storage::FileProperties::ThumbnailOptions
{
  ThumbnailOptions_None = 0,
  ThumbnailOptions_ReturnOnlyIfCached = 1,
  ThumbnailOptions_ResizeThumbnail = 2,
  ThumbnailOptions_UseCurrentScale = 4,
};

typedef enum _MONITOR_DISPLAY_STATE
{
  PowerMonitorOff = 0,
  PowerMonitorOn = 1,
  PowerMonitorDim = 2,
} MONITOR_DISPLAY_STATE, *PMONITOR_DISPLAY_STATE;

typedef enum _DEVICE_POWER_STATE
{
  PowerDeviceUnspecified = 0,
  PowerDeviceD0 = 1,
  PowerDeviceD1 = 2,
  PowerDeviceD2 = 3,
  PowerDeviceD3 = 4,
  PowerDeviceMaximum = 5,
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef struct _NDR_EXPR_DESC
{
  /* 0x0000 */ const unsigned short* pOffset;
  /* 0x0008 */ const unsigned char* pFormatExpr;
} NDR_EXPR_DESC, *PNDR_EXPR_DESC; /* size: 0x0010 */

enum ServerProtectionLevel
{
  Default = -1,
  WindowsLight = 2,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_273
{
  value = 0,
} TAG_UNNAMED_273, *PTAG_UNNAMED_273;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::KnownFoldersAccessStatus>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_274
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_274, *PTAG_UNNAMED_274;

typedef struct _tlgDataDescInit<_tlgIndexSequence<8,0,1,2,3,4,5,6,7> >
{
} tlgDataDescInit<_tlgIndexSequence<8,0,1,2,3,4,5,6,7> >, *PtlgDataDescInit<_tlgIndexSequence<8,0,1,2,3,4,5,6,7> >; /* size: 0x0001 */

struct CsFrame
{
  /* 0x0000 */ unsigned __int64 SavedR10;
  /* 0x0008 */ unsigned __int64 SavedR11;
}; /* size: 0x0010 */

struct tagPICTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ unsigned int picType;
  union
  {
    struct
    {
      /* 0x0008 */ struct HBITMAP__* hbitmap;
      /* 0x0010 */ struct HPALETTE__* hpal;
    } /* size: 0x0010 */ bmp;
    struct
    {
      /* 0x0008 */ struct HMETAFILE__* hmeta;
      /* 0x0010 */ int xExt;
      /* 0x0014 */ int yExt;
    } /* size: 0x0010 */ wmf;
    struct
    {
      /* 0x0008 */ struct HICON__* hicon;
    } /* size: 0x0008 */ icon;
    struct
    {
      struct
      {
        /* 0x0008 */ struct HENHMETAFILE__* hemf;
      } /* size: 0x0008 */ emf;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

class CCacheStream
{
  /* 0x0000 */ long Padding_270[2];
  /* 0x0008 */ unsigned long m_stmixCacheID;
}; /* size: 0x0010 */

class CRgPv
{
  /* 0x0000 */ unsigned int m_cElems;
  /* 0x0004 */ long Padding_271;
  union
  {
    /* 0x0008 */ void* m_pv;
    /* 0x0008 */ void** m_rgpv;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

class CNotifyCP
{
  /* 0x0000 */ long Padding_272[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_273;
  /* 0x0010 */ struct IConnectionPointContainer* m_pcpc;
  /* 0x0018 */ class CRgPv m_rgpv;
  /* 0x0028 */ long m_lFreezeCount;
}; /* size: 0x0030 */

class CPicture
{
  /* 0x0000 */ long Padding_274[12];
  /* 0x0030 */ const unsigned char mc_fAsync : 1; /* bit position: 0 */
  /* 0x0031 */ char Padding_275[7];
  /* 0x0038 */ struct tagPICTDESC m_pic;
  /* 0x0050 */ struct tagSIZE m_slPixels;
  /* 0x0058 */ struct tagSIZE m_slHimetric;
  /* 0x0060 */ struct HDC__* m_hdc;
  /* 0x0068 */ struct HBITMAP__* m_hbmpAnd;
  /* 0x0070 */ struct HBITMAP__* m_hbmpXor;
  /* 0x0078 */ struct HBITMAP__* m_hbmpMask;
  /* 0x0080 */ unsigned long m_lLen;
  /* 0x0084 */ long Padding_276;
  /* 0x0088 */ class CGdiCustodian* m_pcstOwn;
  struct /* bitfield */
  {
    /* 0x0090 */ unsigned char m_fBitsLoaded : 1; /* bit position: 0 */
    /* 0x0090 */ unsigned char m_fOwn : 1; /* bit position: 1 */
    /* 0x0090 */ unsigned char m_fKeepOriginalFormat : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0091 */ unsigned char m_fTransparent;
  /* 0x0092 */ char Padding_277[6];
  /* 0x0098 */ struct ISimpleBinding* m_qbndData;
  /* 0x00a0 */ class CCacheStream m_csmOriginalFormat;
  /* 0x00b0 */ long m_cRefs;
  /* 0x00b4 */ long Padding_278;
  /* 0x00b8 */ class CNotifyCP m_cpNotify;
  /* 0x00e8 */ struct METAINFO* m_pMetaInfo;
  /* 0x00f0 */ struct METADC* m_pCurMdc;
  /* 0x00f8 */ int m_fMetaDC;
  /* 0x00fc */ int m_nRecord;
  /* 0x0100 */ HRESULT m_error;
  /* 0x0104 */ long Padding_279;
  /* 0x0108 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0110 */ int m_fConvert;
  union
  {
    /* 0x0000 */ unsigned int s_cPictObjs;
    /* 0x0000 */ struct ITypeInfo* s_ptinfo;
  }; /* size: 0x0008 */
}; /* size: 0x0118 */

typedef enum _KSOFTWARE_INTERRUPT_TARGET
{
  KSoftwareInterruptTargetNone = 0,
  KSoftwareInterruptTargetSingleProcessor = 1,
  KSoftwareInterruptTargetMultipleProcessors = 2,
  KSoftwareInterruptTargetMax = 3,
} KSOFTWARE_INTERRUPT_TARGET, *PKSOFTWARE_INTERRUPT_TARGET;

typedef enum _TAG_UNNAMED_275
{
  value = 1,
} TAG_UNNAMED_275, *PTAG_UNNAMED_275;

struct IProtocolHandlerSite
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

typedef enum __MIDL_IMonikerProp_0001
{
  MIMETYPEPROP = 0,
  USE_SRC_URL = 1,
  CLASSIDPROP = 2,
  TRUSTEDDOWNLOADPROP = 3,
  POPUPLEVELPROP = 4,
} _MIDL_IMonikerProp_0001, *P_MIDL_IMonikerProp_0001;

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

class wil::details::<lambda_0a0ccd44a48273821f6c0d56fd4c080e>
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_MISC_INFO
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
} MINIDUMP_MISC_INFO, *PMINIDUMP_MISC_INFO; /* size: 0x0018 */

struct GetTypeValueImpl<long,unsigned short const *,unsigned short const *,long>
{
}; /* size: 0x0001 */

class IsFloat<unsigned short,0>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_276
{
  value = 1,
} TAG_UNNAMED_276, *PTAG_UNNAMED_276;

struct SIP_INDIRECT_DATA_;

typedef struct _Thrd_t
{
  /* 0x0000 */ void* _Hnd;
  /* 0x0008 */ unsigned int _Id;
  /* 0x000c */ long __PADDING__[1];
} Thrd_t, *PThrd_t; /* size: 0x0010 */

class std::thread
{
  /* 0x0000 */ struct _Thrd_t _Thr;
}; /* size: 0x0010 */

typedef enum _IRQ_GROUP_POLICY
{
  GroupAffinityAllGroupZero = 0,
  GroupAffinityDontCare = 1,
} IRQ_GROUP_POLICY, *PIRQ_GROUP_POLICY;

typedef struct _SYSTEM_FEATURE_CONFIGURATION_QUERY
{
  /* 0x0000 */ enum _RTL_FEATURE_CONFIGURATION_TYPE ConfigurationType;
  /* 0x0004 */ unsigned int FeatureId;
} SYSTEM_FEATURE_CONFIGURATION_QUERY, *PSYSTEM_FEATURE_CONFIGURATION_QUERY; /* size: 0x0008 */

enum WMIDPREQUESTCODE
{
  WMI_GET_ALL_DATA = 0,
  WMI_GET_SINGLE_INSTANCE = 1,
  WMI_SET_SINGLE_INSTANCE = 2,
  WMI_SET_SINGLE_ITEM = 3,
  WMI_ENABLE_EVENTS = 4,
  WMI_DISABLE_EVENTS = 5,
  WMI_ENABLE_COLLECTION = 6,
  WMI_DISABLE_COLLECTION = 7,
  WMI_REGINFO = 8,
  WMI_EXECUTE_METHOD = 9,
  WMI_CAPTURE_STATE = 10,
};

class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef enum _SC_STATUS_TYPE
{
  SC_STATUS_PROCESS_INFO = 0,
} SC_STATUS_TYPE, *PSC_STATUS_TYPE;

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *,1>
{
}; /* size: 0x0008 */

typedef enum _KCLOCK_TIMER_DEADLINE_TYPE
{
  KClockTimerKTimerExpirationNonHr = 0,
  KClockTimerKTimerExpirationPseudoHr = 1,
  KClockTimerKTimer2ExpirationHr = 2,
  KClockTimerKTimersMax = 2,
  KClockTimerQuantumEnd = 3,
  KClockTimerGroupSchedulingGenerationEnd = 4,
  KClockTimerIdlePromotion = 5,
  KClockTimerBamQosHysteresisEnd = 6,
  KClockTimerMax = 7,
} KCLOCK_TIMER_DEADLINE_TYPE, *PKCLOCK_TIMER_DEADLINE_TYPE;

typedef enum _TAG_UNNAMED_277
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_277, *PTAG_UNNAMED_277;

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>,Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *> >
{
}; /* size: 0x0008 */

typedef enum _SHUTDOWN_ACTION
{
  ShutdownNoReboot = 0,
  ShutdownReboot = 1,
  ShutdownPowerOff = 2,
  ShutdownRebootForRecovery = 3,
} SHUTDOWN_ACTION, *PSHUTDOWN_ACTION;

struct Windows::Foundation::Collections::IIterable<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_278
{
  WPP_VER_WIN2K_CB_FORWARD_PTR = 1,
  WPP_VER_WHISTLER_CB_FORWARD_PTR = 2,
  WPP_VER_LH_CB_FORWARD_PTR = 3,
} TAG_UNNAMED_278, *PTAG_UNNAMED_278;

typedef struct _CRYPT_PROVIDER_SIGSTATE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_280;
  /* 0x0008 */ void** rhSecondarySigs;
  /* 0x0010 */ void* hPrimarySig;
  /* 0x0018 */ int fFirstAttemptMade;
  /* 0x001c */ int fNoMoreSigs;
  /* 0x0020 */ unsigned long cSecondarySigs;
  /* 0x0024 */ unsigned long dwCurrentIndex;
  /* 0x0028 */ int fSupportMultiSig;
  /* 0x002c */ unsigned long dwCryptoPolicySupport;
  /* 0x0030 */ unsigned long iAttemptCount;
  /* 0x0034 */ int fCheckedSealing;
  /* 0x0038 */ struct _SEALING_SIGNATURE_ATTRIBUTE* pSealingSignature;
} CRYPT_PROVIDER_SIGSTATE, *PCRYPT_PROVIDER_SIGSTATE; /* size: 0x0040 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_279
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_279, *PTAG_UNNAMED_279;

class Windows::Foundation::Uri;

struct wistd::default_delete<unsigned short [0]>
{
}; /* size: 0x0001 */

enum POWER_INFORMATION_LEVEL
{
  SystemPowerPolicyAc = 0,
  SystemPowerPolicyDc = 1,
  VerifySystemPolicyAc = 2,
  VerifySystemPolicyDc = 3,
  SystemPowerCapabilities = 4,
  SystemBatteryState = 5,
  SystemPowerStateHandler = 6,
  ProcessorStateHandler = 7,
  SystemPowerPolicyCurrent = 8,
  AdministratorPowerPolicy = 9,
  SystemReserveHiberFile = 10,
  ProcessorInformation = 11,
  SystemPowerInformation = 12,
  ProcessorStateHandler2 = 13,
  LastWakeTime = 14,
  LastSleepTime = 15,
  SystemExecutionState = 16,
  SystemPowerStateNotifyHandler = 17,
  ProcessorPowerPolicyAc = 18,
  ProcessorPowerPolicyDc = 19,
  VerifyProcessorPowerPolicyAc = 20,
  VerifyProcessorPowerPolicyDc = 21,
  ProcessorPowerPolicyCurrent = 22,
  SystemPowerStateLogging = 23,
  SystemPowerLoggingEntry = 24,
  SetPowerSettingValue = 25,
  NotifyUserPowerSetting = 26,
  PowerInformationLevelUnused0 = 27,
  SystemMonitorHiberBootPowerOff = 28,
  SystemVideoState = 29,
  TraceApplicationPowerMessage = 30,
  TraceApplicationPowerMessageEnd = 31,
  ProcessorPerfStates = 32,
  ProcessorIdleStates = 33,
  ProcessorCap = 34,
  SystemWakeSource = 35,
  SystemHiberFileInformation = 36,
  TraceServicePowerMessage = 37,
  ProcessorLoad = 38,
  PowerShutdownNotification = 39,
  MonitorCapabilities = 40,
  SessionPowerInit = 41,
  SessionDisplayState = 42,
  PowerRequestCreate = 43,
  PowerRequestAction = 44,
  GetPowerRequestList = 45,
  ProcessorInformationEx = 46,
  NotifyUserModeLegacyPowerEvent = 47,
  GroupPark = 48,
  ProcessorIdleDomains = 49,
  WakeTimerList = 50,
  SystemHiberFileSize = 51,
  ProcessorIdleStatesHv = 52,
  ProcessorPerfStatesHv = 53,
  ProcessorPerfCapHv = 54,
  ProcessorSetIdle = 55,
  LogicalProcessorIdling = 56,
  UserPresence = 57,
  PowerSettingNotificationName = 58,
  GetPowerSettingValue = 59,
  IdleResiliency = 60,
  SessionRITState = 61,
  SessionConnectNotification = 62,
  SessionPowerCleanup = 63,
  SessionLockState = 64,
  SystemHiberbootState = 65,
  PlatformInformation = 66,
  PdcInvocation = 67,
  MonitorInvocation = 68,
  FirmwareTableInformationRegistered = 69,
  SetShutdownSelectedTime = 70,
  SuspendResumeInvocation = 71,
  PlmPowerRequestCreate = 72,
  ScreenOff = 73,
  CsDeviceNotification = 74,
  PlatformRole = 75,
  LastResumePerformance = 76,
  DisplayBurst = 77,
  ExitLatencySamplingPercentage = 78,
  RegisterSpmPowerSettings = 79,
  PlatformIdleStates = 80,
  ProcessorIdleVeto = 81,
  PlatformIdleVeto = 82,
  SystemBatteryStatePrecise = 83,
  ThermalEvent = 84,
  PowerRequestActionInternal = 85,
  BatteryDeviceState = 86,
  PowerInformationInternal = 87,
  ThermalStandby = 88,
  SystemHiberFileType = 89,
  PhysicalPowerButtonPress = 90,
  QueryPotentialDripsConstraint = 91,
  EnergyTrackerCreate = 92,
  EnergyTrackerQuery = 93,
  UpdateBlackBoxRecorder = 94,
  SessionAllowExternalDmaDevices = 95,
  SendSuspendResumeNotification = 96,
  BlackBoxRecorderDirectAccessBuffer = 97,
  PowerInformationLevelMaximum = 98,
};

typedef enum _TAG_UNNAMED_280
{
  WPP_TRACE_OPTIONS = 43,
} TAG_UNNAMED_280, *PTAG_UNNAMED_280;

typedef struct _REFS_REMOVE_HARDLINK_BACKPOINTER
{
  /* 0x0000 */ unsigned __int64 ParentDirectory;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ wchar_t FileName[1];
  /* 0x0012 */ char __PADDING__[6];
} REFS_REMOVE_HARDLINK_BACKPOINTER, *PREFS_REMOVE_HARDLINK_BACKPOINTER; /* size: 0x0018 */

enum CRefExportCount::tagTokens
{
  ALIVE = 0,
  KILL = 1,
  DEAD = 2,
};

struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_281
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_281, *PTAG_UNNAMED_281;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>
{
}; /* size: 0x0008 */

struct ISynchronizeEvent
{
}; /* size: 0x0008 */

struct IPackagedComProxyStubCatalogInternal
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IDragOperationInternal,0,0>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_282
{
  value = 1,
} TAG_UNNAMED_282, *PTAG_UNNAMED_282;

enum RpcProxyPerfCounters
{
  RpcCurrentUniqueUser = 1,
  RpcBackEndConnectionAttempts = 2,
  RpcBackEndConnectionFailed = 3,
  RpcRequestsPerSecond = 4,
  RpcIncomingConnections = 5,
  RpcIncomingBandwidth = 6,
  RpcOutgoingBandwidth = 7,
  RpcAttemptedLbsDecisions = 8,
  RpcFailedLbsDecisions = 9,
  RpcAttemptedLbsMessages = 10,
  RpcFailedLbsMessages = 11,
  RpcLastCounter = 12,
};

typedef struct _MODEMSETTINGS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwCallSetupFailTimer;
  /* 0x0014 */ unsigned long dwInactivityTimeout;
  /* 0x0018 */ unsigned long dwSpeakerVolume;
  /* 0x001c */ unsigned long dwSpeakerMode;
  /* 0x0020 */ unsigned long dwPreferredModemOptions;
  /* 0x0024 */ unsigned long dwNegotiatedModemOptions;
  /* 0x0028 */ unsigned long dwNegotiatedDCERate;
  /* 0x002c */ unsigned char abVariablePortion[1];
  /* 0x002d */ char __PADDING__[3];
} MODEMSETTINGS, *PMODEMSETTINGS; /* size: 0x0030 */

typedef enum _APTTYPE
{
  APTTYPE_CURRENT = -1,
  APTTYPE_STA = 0,
  APTTYPE_MTA = 1,
  APTTYPE_NA = 2,
  APTTYPE_MAINSTA = 3,
} APTTYPE, *PAPTTYPE;

struct tagSTATSTG
{
  /* 0x0000 */ wchar_t* pwcsName;
  /* 0x0008 */ unsigned long type;
  /* 0x000c */ long Padding_281;
  /* 0x0010 */ union _ULARGE_INTEGER cbSize;
  /* 0x0018 */ struct _FILETIME mtime;
  /* 0x0020 */ struct _FILETIME ctime;
  /* 0x0028 */ struct _FILETIME atime;
  /* 0x0030 */ unsigned long grfMode;
  /* 0x0034 */ unsigned long grfLocksSupported;
  /* 0x0038 */ struct _GUID clsid;
  /* 0x0048 */ unsigned long grfStateBits;
  /* 0x004c */ unsigned long reserved;
}; /* size: 0x0050 */

typedef struct _FILE_PIPE_EVENT_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long EntryType;
  /* 0x0008 */ unsigned long ByteCount;
  /* 0x000c */ unsigned long KeyValue;
  /* 0x0010 */ unsigned long NumberRequests;
} FILE_PIPE_EVENT_BUFFER, *PFILE_PIPE_EVENT_BUFFER; /* size: 0x0014 */

typedef enum _THREAD_UMS_INFORMATION_COMMAND
{
  UmsInformationCommandInvalid = 0,
  UmsInformationCommandAttach = 1,
  UmsInformationCommandDetach = 2,
  UmsInformationCommandQuery = 3,
} THREAD_UMS_INFORMATION_COMMAND, *PTHREAD_UMS_INFORMATION_COMMAND;

enum Microsoft::WRL::DelegateCheckMode
{
  NoCheck = 1,
};

typedef enum _THREAD_WORKLOAD_CLASS
{
  ThreadWorkloadClassDefault = 0,
  ThreadWorkloadClassGraphics = 1,
  MaxThreadWorkloadClass = 2,
} THREAD_WORKLOAD_CLASS, *PTHREAD_WORKLOAD_CLASS;

class ComTelemetry
{
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_283
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_283, *PTAG_UNNAMED_283;

enum Microsoft::WRL::InvokeMode
{
  StopOnFirstError = 1,
  FireAll = 2,
};

typedef struct _NCryptAlgorithmName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwAlgOperations;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
} NCryptAlgorithmName, *PNCryptAlgorithmName; /* size: 0x0018 */

typedef struct _CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO
{
  /* 0x0000 */ unsigned long cCNGHashAlgid;
  /* 0x0004 */ long Padding_282;
  /* 0x0008 */ const wchar_t** rgpwszCNGHashAlgid;
  /* 0x0010 */ unsigned long dwWeakIndex;
  /* 0x0014 */ long __PADDING__[1];
} CRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO, *PCRYPT_VERIFY_CERT_SIGN_WEAK_HASH_INFO; /* size: 0x0018 */

struct STARTING_LCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_284
{
  value = 0,
} TAG_UNNAMED_284, *PTAG_UNNAMED_284;

enum ENUM_FILE_INFORMATION_CLASS
{
  ENUM_FILE_ID_BOTH_DIR_INFO = 0,
  ENUM_FILE_BOTH_DIR_INFO = 1,
  ENUM_FILE_FULL_DIR_INFO = 2,
};

typedef struct _CERT_REVOCATION_CRL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_283;
  /* 0x0008 */ const struct _CRL_CONTEXT* pBaseCrlContext;
  /* 0x0010 */ const struct _CRL_CONTEXT* pDeltaCrlContext;
  /* 0x0018 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0020 */ int fDeltaCrlEntry;
  /* 0x0024 */ long __PADDING__[1];
} CERT_REVOCATION_CRL_INFO, *PCERT_REVOCATION_CRL_INFO; /* size: 0x0028 */

typedef struct _RTL_BITMAP_EX
{
  /* 0x0000 */ unsigned __int64 SizeOfBitMap;
  /* 0x0008 */ unsigned __int64* Buffer;
} RTL_BITMAP_EX, *PRTL_BITMAP_EX; /* size: 0x0010 */

typedef struct _RTL_RVA_LIST
{
  /* 0x0000 */ unsigned __int64 RvaCount;
  /* 0x0008 */ unsigned long StateBitsPerRva;
  /* 0x000c */ long Padding_284;
  /* 0x0010 */ unsigned char* CompressedBuffer;
  /* 0x0018 */ unsigned __int64 CompressedBufferSize;
  /* 0x0020 */ struct _RTL_BITMAP_EX RvaStateBitMap;
  /* 0x0030 */ unsigned long* StateBitValueMap;
  /* 0x0038 */ void* ExtensionBuffer;
} RTL_RVA_LIST, *PRTL_RVA_LIST; /* size: 0x0040 */

class wil::unique_any_t<wil::folder_change_reader_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >
{
}; /* size: 0x0008 */

struct Windows::Storage::AccessCache::AccessListEntry
{
  /* 0x0000 */ struct HSTRING__* Token;
  /* 0x0008 */ struct HSTRING__* Metadata;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_285
{
  value = 0,
} TAG_UNNAMED_285, *PTAG_UNNAMED_285;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_RESOURCE_ATTRIBUTE_ACE, *PSYSTEM_RESOURCE_ATTRIBUTE_ACE; /* size: 0x000c */

struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::Search::IndexedState>
{
}; /* size: 0x0008 */

enum SEARCHTEXTTYPE
{
  STTYPE_DEFAULT = 0,
  STTYPE_INITIAL = 1,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>
{
}; /* size: 0x0008 */

enum Windows::Storage::Search::IndexedState
{
  IndexedState_Unknown = 0,
  IndexedState_NotIndexed = 1,
  IndexedState_PartiallyIndexed = 2,
  IndexedState_FullyIndexed = 3,
};

struct tagINTERFACEDATA
{
  /* 0x0000 */ struct tagMETHODDATA* pmethdata;
  /* 0x0008 */ unsigned int cMembers;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IServiceProvider> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IServiceProvider>* ptr_;
}; /* size: 0x0008 */

typedef struct _SYSTEM_HIBERFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfMcbPairs;
  /* 0x0004 */ long Padding_285;
  /* 0x0008 */ union _LARGE_INTEGER Mcb[1];
} SYSTEM_HIBERFILE_INFORMATION, *PSYSTEM_HIBERFILE_INFORMATION; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_286
{
  value = 1,
} TAG_UNNAMED_286, *PTAG_UNNAMED_286;

enum CONFIRMATIONRESPONSE
{
  CONFRES_CONTINUE = 0,
  CONFRES_SKIP = 1,
  CONFRES_RETRY = 2,
  CONFRES_RENAME = 3,
  CONFRES_CANCEL = 4,
  CONFRES_UNDO = 5,
  CONFRES_RENAME_LEFT = 3,
  CONFRES_RENAME_RIGHT = 6,
  CONFRES_ELEVATE = 7,
  CONFRES_CLOSE = 8,
};

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_287
{
  value = 1,
} TAG_UNNAMED_287, *PTAG_UNNAMED_287;

typedef struct _MEMORY_FRAME_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 UseDescription : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ListDescription : 3; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Cold : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Pinned : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 DontUse : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 57 */
    /* 0x0000 */ unsigned __int64 NonTradeable : 1; /* bit position: 60 */
    /* 0x0000 */ unsigned __int64 Reserved : 3; /* bit position: 61 */
  }; /* bitfield */
} MEMORY_FRAME_INFORMATION, *PMEMORY_FRAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILEOFFSET_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Offset : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} FILEOFFSET_INFORMATION, *PFILEOFFSET_INFORMATION; /* size: 0x0008 */

typedef struct _PAGEDIR_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageDirectoryBase : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} PAGEDIR_INFORMATION, *PPAGEDIR_INFORMATION; /* size: 0x0008 */

typedef struct _UNIQUE_PROCESS_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 UniqueProcessKey : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} UNIQUE_PROCESS_INFORMATION, *PUNIQUE_PROCESS_INFORMATION; /* size: 0x0008 */

typedef struct _MMPFN_IDENTITY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MEMORY_FRAME_INFORMATION e1;
      /* 0x0000 */ struct _FILEOFFSET_INFORMATION e2;
      /* 0x0000 */ struct _PAGEDIR_INFORMATION e3;
      /* 0x0000 */ struct _UNIQUE_PROCESS_INFORMATION e4;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ unsigned __int64 PageFrameIndex;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0010 */ unsigned __int64 Image : 1; /* bit position: 0 */
          /* 0x0010 */ unsigned __int64 Mismatch : 1; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0008 */ e1;
      struct
      {
        /* 0x0010 */ unsigned __int64 CombinedPage : 1; /* bit position: 0 */
      } /* size: 0x0008 */ e2;
      /* 0x0010 */ void* FileObject;
      /* 0x0010 */ void* UniqueFileObjectKey;
      /* 0x0010 */ void* ProtoPteAddress;
      /* 0x0010 */ void* VirtualAddress;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
} MMPFN_IDENTITY, *PMMPFN_IDENTITY; /* size: 0x0018 */

typedef struct _MM_ETW_PAGE_INFO
{
  /* 0x0000 */ struct _MMPFN_IDENTITY PfnIdentity;
} MM_ETW_PAGE_INFO, *PMM_ETW_PAGE_INFO; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_288
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_288, *PTAG_UNNAMED_288;

enum IMM_SYSTEM_MODE
{
  ISM_NONE = -1,
  ISM_DESKTOP = 0,
  ISM_IMMERSIVE = 1,
};

struct IXMLDSOControl
{
}; /* size: 0x0008 */

class CEnumClassesOfCategories
{
  /* 0x0000 */ long Padding_286[2];
  /* 0x0008 */ unsigned long m_dwRefCount;
  /* 0x000c */ long Padding_287;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IComClassIterator> _classIterator;
  /* 0x0018 */ unsigned long m_cImplemented;
  /* 0x001c */ long Padding_288;
  /* 0x0020 */ struct _GUID* m_rgcatidImpl;
  /* 0x0028 */ unsigned long m_cRequired;
  /* 0x002c */ long Padding_289;
  /* 0x0030 */ struct _GUID* m_rgcatidReq;
  /* 0x0038 */ struct IEnumGUID* m_pcsIEnumClsid;
  /* 0x0040 */ int m_fromcs;
  /* 0x0044 */ long Padding_290;
  /* 0x0048 */ class Microsoft::WRL::Wrappers::SRWLock _enumeratorLock;
  /* 0x0050 */ const BOOL m_disablePackagedComForTesting;
}; /* size: 0x0058 */

enum ComTrace::LogTokenFlags
{
  AppContainerSid = 1,
  Capabilities = 2,
  SecurityAttributes = 4,
  All = -1,
};

typedef struct _EVENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char Channel;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char Opcode;
  /* 0x0006 */ unsigned short Task;
  /* 0x0008 */ unsigned __int64 Keyword;
} EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR; /* size: 0x0010 */

typedef struct _SECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ long Padding_291;
  /* 0x0008 */ void* lpSecurityDescriptor;
  /* 0x0010 */ int bInheritHandle;
  /* 0x0014 */ long __PADDING__[1];
} SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_289
{
  value = 0,
} TAG_UNNAMED_289, *PTAG_UNNAMED_289;

typedef struct _FILE_LEVEL_TRIM_RANGE
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned __int64 Length;
} FILE_LEVEL_TRIM_RANGE, *PFILE_LEVEL_TRIM_RANGE; /* size: 0x0010 */

typedef struct _FILE_LEVEL_TRIM
{
  /* 0x0000 */ unsigned long Key;
  /* 0x0004 */ unsigned long NumRanges;
  /* 0x0008 */ struct _FILE_LEVEL_TRIM_RANGE Ranges[1];
} FILE_LEVEL_TRIM, *PFILE_LEVEL_TRIM; /* size: 0x0018 */

enum SYNCMGR_RESOLUTION_FEEDBACK
{
  SYNCMGR_RF_CONTINUE = 0,
  SYNCMGR_RF_REFRESH = 1,
  SYNCMGR_RF_CANCEL = 2,
};

enum ZBID
{
  ZBID_DEFAULT = 0,
  ZBID_DESKTOP = 1,
  ZBID_UIACCESS = 2,
  ZBID_IMMERSIVE_IHM = 3,
  ZBID_IMMERSIVE_NOTIFICATION = 4,
  ZBID_IMMERSIVE_APPCHROME = 5,
  ZBID_IMMERSIVE_MOGO = 6,
  ZBID_IMMERSIVE_EDGY = 7,
  ZBID_IMMERSIVE_INACTIVEMOBODY = 8,
  ZBID_IMMERSIVE_INACTIVEDOCK = 9,
  ZBID_IMMERSIVE_ACTIVEMOBODY = 10,
  ZBID_IMMERSIVE_ACTIVEDOCK = 11,
  ZBID_IMMERSIVE_BACKGROUND = 12,
  ZBID_IMMERSIVE_SEARCH = 13,
  ZBID_GENUINE_WINDOWS = 14,
  ZBID_IMMERSIVE_RESTRICTED = 15,
  ZBID_SYSTEM_TOOLS = 16,
  ZBID_LOCK = 17,
  ZBID_ABOVELOCK_UX = 18,
};

struct Windows::Foundation::Collections::IIterable_impl<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0008 */

struct IWinInetCacheHints2
{
}; /* size: 0x0008 */

enum IMMERSIVE_APPLICATION_PRESENTATION_CHANGE
{
  IAPC_ISAPPLICATIONWINDOWPRESENTED = 0,
  IAPC_SHOULDSHOWBACKBUTTON = 1,
  IAPC_TITLEUPDATED = 2,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct IPointerInactive
{
}; /* size: 0x0008 */

class SafeIntInternal::SafeIntExceptionHandler<SafeIntException>
{
}; /* size: 0x0001 */

enum ELEVATION_REASON
{
  ELEVATION_REASON_APPCOMPAT_EXPLICIT = 0,
  ELEVATION_REASON_APPCOMPAT_HEURISTIC = 1,
  ELEVATION_REASON_FUSION = 2,
  ELEVATION_REASON_INSTALLER = 3,
  ELEVATION_REASON_CLSID = 4,
  ELEVATION_REASON_MSI = 5,
  ELEVATION_REASON_REQUEST = 6,
  ELEVATION_REASON_AXIS = 7,
  ELEVATION_REASON_PACKAGED_APP = 8,
  ELEVATION_REASON_NUM_REASONS = 9,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IUnknown>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Search::SortEntry,0>
{
}; /* size: 0x0008 */

typedef enum _RPC_NOTIFICATION_TYPES
{
  RpcNotificationTypeNone = 0,
  RpcNotificationTypeEvent = 1,
  RpcNotificationTypeApc = 2,
  RpcNotificationTypeIoc = 3,
  RpcNotificationTypeHwnd = 4,
  RpcNotificationTypeCallback = 5,
} RPC_NOTIFICATION_TYPES, *PRPC_NOTIFICATION_TYPES;

struct Windows::Foundation::IReferenceArray_impl<short>
{
}; /* size: 0x0008 */

enum CONFLICT_FILTER
{
  CF_NO_FILTER = 0,
  CF_DIFFERENT_TIME_SIZE = 1,
};

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>
{
}; /* size: 0x0008 */

typedef struct _ROOT_INFO_LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} ROOT_INFO_LUID, *PROOT_INFO_LUID; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IMarshal> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IMarshal>* ptr_;
}; /* size: 0x0008 */

typedef enum _HOT_PATCH_INFORMATION_CLASS
{
  ManageHotPatchLoadPatch = 0,
  ManageHotPatchUnloadPatch = 1,
  ManageHotPatchQueryPatches = 2,
  ManageHotPatchLoadPatchForUser = 3,
  ManageHotPatchUnloadPatchForUser = 4,
  ManageHotPatchQueryPatchesForUser = 5,
  ManageHotPatchQueryActivePatches = 6,
  ManageHotPatchApplyImagePatch = 7,
  ManageHotPatchQuerySinglePatch = 8,
  ManageHotPatchCheckEnabled = 9,
  ManageHotPatchMax = 10,
} HOT_PATCH_INFORMATION_CLASS, *PHOT_PATCH_INFORMATION_CLASS;

struct IComClassInfo2
{
}; /* size: 0x0008 */

typedef enum _WOW64_SHARED_INFORMATION
{
  SharedNtdll32LdrInitializeThunk = 0,
  SharedNtdll32KiUserExceptionDispatcher = 1,
  SharedNtdll32KiUserApcDispatcher = 2,
  SharedNtdll32KiUserCallbackDispatcher = 3,
  SharedNtdll32RtlUserThreadStart = 4,
  SharedNtdll32pQueryProcessDebugInformationRemote = 5,
  SharedNtdll32BaseAddress = 6,
  SharedNtdll32LdrSystemDllInitBlock = 7,
  SharedNtdll32RtlpFreezeTimeBias = 8,
  Wow64SharedPageEntriesCount = 9,
} WOW64_SHARED_INFORMATION, *PWOW64_SHARED_INFORMATION;

typedef enum _REFS_SMR_VOLUME_GC_ACTION
{
  SmrGcActionStart = 1,
  SmrGcActionStartFullSpeed = 2,
  SmrGcActionPause = 3,
  SmrGcActionStop = 4,
} REFS_SMR_VOLUME_GC_ACTION, *PREFS_SMR_VOLUME_GC_ACTION;

struct std::_Default_allocator_traits<std::allocator<char16_t> >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView_impl<__int64,float>
{
}; /* size: 0x0008 */

enum tagSM_KEYBOARDNAVIGATE
{
  SM_ENTERINGSEACHVIEW = 0,
  SM_INSIDESEARCHVIEW = 1,
};

typedef enum _MSI_ACTION
{
  MSI_ACTION_INSTALL = 0,
  MSI_ACTION_UNINSTALL = 1,
  MSI_ACTION_UPDATE = 2,
  MSI_ACTION_UPDATE_HASH_MISMATCH = 3,
  MSI_ACTION_UPDATE_HASH_MISSING = 4,
  MSI_ACTION_MAX = 5,
} MSI_ACTION, *PMSI_ACTION;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_290
{
  value = 1,
} TAG_UNNAMED_290, *PTAG_UNNAMED_290;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>
{
}; /* size: 0x0008 */

enum tagDESTCATTYPE
{
  DCT_CUSTOM = 0,
  DCT_KNOWN = 1,
  DCT_TASKS = 2,
};

struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserChangedEventArgs *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_291
{
  value = 1,
} TAG_UNNAMED_291, *PTAG_UNNAMED_291;

typedef struct _RTL_HEAP_STACK_QUERY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_292;
  /* 0x0008 */ void* Process;
  /* 0x0010 */ void* WriteRoutine /* function */;
  /* 0x0018 */ void* SerializationContext;
  /* 0x0020 */ unsigned char QueryLevel;
  /* 0x0021 */ unsigned char Flags;
  /* 0x0022 */ char __PADDING__[6];
} RTL_HEAP_STACK_QUERY, *PRTL_HEAP_STACK_QUERY; /* size: 0x0028 */

enum Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResultStatus
{
  ClipboardHistoryItemsResultStatus_Success = 0,
  ClipboardHistoryItemsResultStatus_AccessDenied = 1,
  ClipboardHistoryItemsResultStatus_ClipboardHistoryDisabled = 2,
};

enum PROJECTION_TASK_TYPE
{
  PTT_START_PROJECTING = 0,
  PTT_SWAP_DISPLAYS = 1,
  PTT_STOP_PROJECTING = 2,
  PTT_VALIDATE = 3,
};

struct IApartmentShutdown
{
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_DEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gActionID;
  /* 0x0014 */ long Padding_293;
  /* 0x0018 */ void* pDefPolicyCallbackData;
  /* 0x0020 */ void* pDefSIPClientData;
} CRYPT_PROVIDER_DEFUSAGE, *PCRYPT_PROVIDER_DEFUSAGE; /* size: 0x0028 */

enum PREFERRED_LAUNCH_WINDOWING_MODE
{
  PLWM_Auto = 0,
  PLWM_PreferredLaunchViewSize = 1,
  PLWM_FullScreen = 2,
};

typedef struct _PEBS_DS_SAVE_AREA32
{
  /* 0x0000 */ unsigned long BtsBufferBase;
  /* 0x0004 */ unsigned long BtsIndex;
  /* 0x0008 */ unsigned long BtsAbsoluteMaximum;
  /* 0x000c */ unsigned long BtsInterruptThreshold;
  /* 0x0010 */ unsigned long PebsBufferBase;
  /* 0x0014 */ unsigned long PebsIndex;
  /* 0x0018 */ unsigned long PebsAbsoluteMaximum;
  /* 0x001c */ unsigned long PebsInterruptThreshold;
  /* 0x0020 */ unsigned __int64 PebsGpCounterReset[8];
  /* 0x0060 */ unsigned __int64 PebsFixedCounterReset[4];
} PEBS_DS_SAVE_AREA32, *PPEBS_DS_SAVE_AREA32; /* size: 0x0080 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,HSTRING__ *>
{
}; /* size: 0x0008 */

enum DESKTOP_VISIBILITY_NOTIFICATION_TYPE
{
  DVNT_GLOBAL = 0,
  DVNT_PERMONITOR = 1,
};

struct std::_Big_uint128
{
  /* 0x0000 */ unsigned __int64 _Upper;
  /* 0x0008 */ unsigned __int64 _Lower;
}; /* size: 0x0010 */

typedef enum _SC_EVENT_TYPE
{
  SC_EVENT_DATABASE_CHANGE = 0,
  SC_EVENT_PROPERTY_CHANGE = 1,
  SC_EVENT_STATUS_CHANGE = 2,
} SC_EVENT_TYPE, *PSC_EVENT_TYPE;

struct wistd::__compressed_pair_elem<wistd::default_delete<char [0]>,1,1>
{
}; /* size: 0x0001 */

enum ImmersiveShellStartupType
{
  ISST_FULL = 0,
  ISST_SAFE = 1,
  ISST_NONE = 2,
};

typedef enum _TASKDIALOG_FLAGS
{
  TDF_ENABLE_HYPERLINKS = 1,
  TDF_USE_HICON_MAIN = 2,
  TDF_USE_HICON_FOOTER = 4,
  TDF_ALLOW_DIALOG_CANCELLATION = 8,
  TDF_USE_COMMAND_LINKS = 16,
  TDF_USE_COMMAND_LINKS_NO_ICON = 32,
  TDF_EXPAND_FOOTER_AREA = 64,
  TDF_EXPANDED_BY_DEFAULT = 128,
  TDF_VERIFICATION_FLAG_CHECKED = 256,
  TDF_SHOW_PROGRESS_BAR = 512,
  TDF_SHOW_MARQUEE_PROGRESS_BAR = 1024,
  TDF_CALLBACK_TIMER = 2048,
  TDF_POSITION_RELATIVE_TO_WINDOW = 4096,
  TDF_RTL_LAYOUT = 8192,
  TDF_NO_DEFAULT_RADIO_BUTTON = 16384,
  TDF_CAN_BE_MINIMIZED = 0xffff8000,
  TDF_NO_SET_FOREGROUND = 0x10000,
  TDF_SIZE_TO_CONTENT = 0x1000000,
} TASKDIALOG_FLAGS, *PTASKDIALOG_FLAGS;

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IEnumGUID>
{
  /* 0x0000 */ long Padding_294[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_292
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_292, *PTAG_UNNAMED_292;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComClassInfo> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IComClassInfo>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >* ptr_;
}; /* size: 0x0008 */

struct XWinRT::SecureVersionTag
{
  /* 0x0000 */ class XWinRT::SecureVersionTag::Tag* _pVersion;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>
{
}; /* size: 0x0001 */

class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View
{
  /* 0x0000 */ long Padding_295[10];
  /* 0x0028 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > _spHashMap;
  /* 0x0030 */ struct XWinRT::SecureVersionTag _expectedVersion;
  /* 0x0038 */ struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *> _fnEquals;
}; /* size: 0x0040 */

class CDragOperation::IsDropAllowed::__l2::<lambda_f16c171f4a25340757779972fb9deba3>::()::__l2::<lambda_09ce9bf4b5ebdced0b50ca0d77cedf20>
{
}; /* size: 0x0001 */

enum GET_VIEW_FOR_SWITCH_TYPE
{
  GVFST_NORMAL_SWITCH = 0,
  GVFST_CONTRACT_ACTIVATION_SWITCH = 1,
};

enum APPLICATION_VIEW_STATE
{
  AVS_FULLSCREEN_LANDSCAPE = 0,
  AVS_FILLED = 1,
  AVS_SNAPPED = 2,
  AVS_FULLSCREEN_PORTRAIT = 3,
};

struct CallEntryBuffer
{
  /* 0x0000 */ unsigned __int64 Reserved[3];
}; /* size: 0x0018 */

typedef struct _s_ThrowInfo
{
  /* 0x0000 */ unsigned int attributes;
  /* 0x0004 */ int pmfnUnwind;
  /* 0x0008 */ int pForwardCompat;
  /* 0x000c */ int pCatchableTypeArray;
} s_ThrowInfo, *Ps_ThrowInfo; /* size: 0x0010 */

struct wistd::unique_ptr<void,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >::__nat;

enum AWSTYPE
{
  AWS_SCURVE = 0,
  AWS_LINEAR = 1,
};

struct Windows::Foundation::Collections::IVector_impl<int,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>
{
}; /* size: 0x0001 */

struct IOleInPlaceSite
{
}; /* size: 0x0008 */

enum APPLICATION_VIEW_ORIENTATION
{
  AVO_LANDSCAPE = 0,
  AVO_PORTRAIT = 1,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<IInspectable *>
{
}; /* size: 0x0008 */

struct tagCSPLATFORM
{
  /* 0x0000 */ unsigned long dwPlatformId;
  /* 0x0004 */ unsigned long dwVersionHi;
  /* 0x0008 */ unsigned long dwVersionLo;
  /* 0x000c */ unsigned long dwProcessorArch;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_293
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_293, *PTAG_UNNAMED_293;

typedef struct _tlgWrapperArray<4>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const void* const Ptr;
  }; /* size: 0x0008 */
  /* 0x0008 */ const unsigned short Length;
  /* 0x000a */ char __PADDING__[6];
} tlgWrapperArray<4>, *PtlgWrapperArray<4>; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_294
{
  value = 0,
} TAG_UNNAMED_294, *PTAG_UNNAMED_294;

typedef struct _KEY_VALUE_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataOffset;
  /* 0x000c */ unsigned long DataLength;
  /* 0x0010 */ unsigned long NameLength;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION; /* size: 0x0018 */

typedef struct _CRYPT_TIMESTAMP_ACCURACY
{
  /* 0x0000 */ unsigned long dwSeconds;
  /* 0x0004 */ unsigned long dwMillis;
  /* 0x0008 */ unsigned long dwMicros;
} CRYPT_TIMESTAMP_ACCURACY, *PCRYPT_TIMESTAMP_ACCURACY; /* size: 0x000c */

enum USER_INTERACTION_MODE
{
  UIM_MOUSE = 0,
  UIM_TOUCH = 1,
};

struct CREATE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 MaximumSize;
  /* 0x0008 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

enum VIEW_PRESENTATION_MODE
{
  VPM_DESKTOP = 0,
  VPM_HOLOGRAPHIC = 1,
};

struct Windows::Foundation::Collections::IMap_impl<EventRegistrationToken,int>
{
}; /* size: 0x0008 */

enum DIALOG_DPI_CHANGE_BEHAVIORS
{
  DDC_DEFAULT = 0,
  DDC_DISABLE_ALL = 1,
  DDC_DISABLE_RESIZE = 2,
  DDC_DISABLE_CONTROL_RELAYOUT = 4,
};

typedef enum _TAG_UNNAMED_295
{
  value = 0,
} TAG_UNNAMED_295, *PTAG_UNNAMED_295;

struct POWERBROADCAST_SETTING
{
  /* 0x0000 */ struct _GUID PowerSetting;
  /* 0x0010 */ unsigned long DataLength;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef enum _PO_HIBER_FORCE_DISABLE_REASON
{
  PoHiberForceDisableReasonPolicy = 0,
  PoHiberForceDisableReasonGuardedHost = 1,
  PoHiberForceDisableReasonMax = 2,
} PO_HIBER_FORCE_DISABLE_REASON, *PPO_HIBER_FORCE_DISABLE_REASON;

enum SYNC_STREAM_COMPLETION_MODE
{
  SSCM_DEFAULT = 0,
  SSCM_TRUNCATE = 1,
};

typedef struct _WIN32_FIND_DATAW
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ wchar_t cFileName[260];
  /* 0x0234 */ wchar_t cAlternateFileName[14];
} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW; /* size: 0x0250 */

enum APPLICATION_VIEW_MODE
{
  AVM_DEFAULT = 0,
  AVM_COMPACT_OVERLAY = 1,
  AVM_SPANNING = 2,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMoniker> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0001 */

enum RTL_BSD_ITEM_TYPE
{
  RtlBsdItemVersionNumber = 0,
  RtlBsdItemProductType = 1,
  RtlBsdItemAabEnabled = 2,
  RtlBsdItemAabTimeout = 3,
  RtlBsdItemBootGood = 4,
  RtlBsdItemBootShutdown = 5,
  RtlBsdSleepInProgress = 6,
  RtlBsdPowerTransition = 7,
  RtlBsdItemBootAttemptCount = 8,
  RtlBsdItemBootCheckpoint = 9,
  RtlBsdItemBootId = 10,
  RtlBsdItemShutdownBootId = 11,
  RtlBsdItemReportedAbnormalShutdownBootId = 12,
  RtlBsdItemErrorInfo = 13,
  RtlBsdItemPowerButtonPressInfo = 14,
  RtlBsdItemChecksum = 15,
  RtlBsdPowerTransitionExtension = 16,
  RtlBsdItemFeatureConfigurationState = 17,
  RtlBsdItemMax = 18,
};

struct std::_Zero_then_variadic_args_t
{
}; /* size: 0x0001 */

enum APPLICATION_VIEW_MODE_FLAGS
{
  AVMF_DEFAULT = 1,
  AVMF_COMPACT_OVERLAY = 2,
  AVMF_SPANNING = 4,
};

typedef struct _TP_DEBUG_FREE_INFO
{
  /* 0x0000 */ unsigned long FreeListSize;
} TP_DEBUG_FREE_INFO, *PTP_DEBUG_FREE_INFO; /* size: 0x0004 */

enum tagENUMVIEWPROPFLAG
{
  EVPF_NO_UNMATCH_ASPECRATIO = 1,
  EVPF_DISTINCT_RESOLUTION = 2,
};

typedef struct _OBJECT_DIRECTORY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING TypeName;
} OBJECT_DIRECTORY_INFORMATION, *POBJECT_DIRECTORY_INFORMATION; /* size: 0x0020 */

struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>,1,1>
{
}; /* size: 0x0001 */

typedef struct _STRING64
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_296;
  /* 0x0008 */ unsigned __int64 Buffer;
} STRING64, *PSTRING64; /* size: 0x0010 */

enum WindowTransparencyMode
{
  WTM_TransparentWhenActive = 0,
  WTM_AlwaysOpaque = 1,
  WTM_AlwaysTransparent = 2,
};

enum PROCESS_UI_FLAGS
{
  PROCESS_UIF_NONE = 0,
  PROCESS_UIF_AUTHORING_MODE = 1,
  PROCESS_UIF_RESTRICTIONS_DISABLED = 2,
};

struct IOleCacheControl
{
}; /* size: 0x0008 */

struct wil::function_deleter<void * (__cdecl*)(void *),&LocalFree>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_296
{
  value = 0,
} TAG_UNNAMED_296, *PTAG_UNNAMED_296;

typedef struct _MINIDUMP_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackRoutine /* function */;
  /* 0x0008 */ void* CallbackParam;
} MINIDUMP_CALLBACK_INFORMATION, *PMINIDUMP_CALLBACK_INFORMATION; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_297
{
  value = 1,
} TAG_UNNAMED_297, *PTAG_UNNAMED_297;

class utl::allocator<CROTItem *>
{
}; /* size: 0x0001 */

typedef enum _POWER_STATE_TYPE
{
  SystemPowerState = 0,
  DevicePowerState = 1,
} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

struct Windows::Foundation::Collections::IMap<HSTRING__ *,double>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Implements<IAsyncInfo>
{
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_298
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_298, *PTAG_UNNAMED_298;

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE
{
  ToleranceLow = 1,
  ToleranceMedium = 2,
  ToleranceHigh = 3,
} JOBOBJECT_RATE_CONTROL_TOLERANCE, *PJOBOBJECT_RATE_CONTROL_TOLERANCE;

struct JOBOBJECT_LIMIT_VIOLATION_INFORMATION_2
{
  /* 0x0000 */ unsigned long LimitFlags;
  /* 0x0004 */ unsigned long ViolationLimitFlags;
  /* 0x0008 */ unsigned __int64 IoReadBytes;
  /* 0x0010 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0018 */ unsigned __int64 IoWriteBytes;
  /* 0x0020 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0028 */ union _LARGE_INTEGER PerJobUserTime;
  /* 0x0030 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0038 */ unsigned __int64 JobMemory;
  union
  {
    /* 0x0040 */ unsigned __int64 JobHighMemoryLimit;
    /* 0x0040 */ unsigned __int64 JobMemoryLimit;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0048 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    /* 0x0048 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
  }; /* size: 0x0004 */
  union
  {
    /* 0x004c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
    /* 0x004c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlToleranceLimit;
  }; /* size: 0x0004 */
  /* 0x0050 */ unsigned __int64 JobLowMemoryLimit;
  /* 0x0058 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
  /* 0x005c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlToleranceLimit;
  /* 0x0060 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
  /* 0x0064 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlToleranceLimit;
}; /* size: 0x0068 */

enum SERVICE_REGISTRY_STATE_TYPE
{
  ServiceRegistryStateParameters = 0,
  ServiceRegistryStatePersistent = 1,
  MaxServiceRegistryStateType = 2,
};

typedef enum _TAG_UNNAMED_299
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_299, *PTAG_UNNAMED_299;

typedef enum _BACKGROUND_TASK_CAPABILITY
{
  BTC_AUDIO = 1,
  BTC_REALTIME_COMMUNICATION = 2,
  BTC_SYSTEM_EVENT = 4,
  BTC_TIMER = 8,
  BTC_PUSH_NOTIFICATION = 16,
  BTC_VPN_CLIENT = 32,
  BTC_DEVICE_SERVICING = 64,
  BTC_DEVICE_USE = 128,
  BTC_LOCATION = 256,
  BTC_CHAT_NOTIFICATION = 512,
  BTC_IOT = 1024,
  BTC_IMPLICIT = 4096,
  BTC_BLUETOOTH = 8192,
  BTC_DEVICE_CONNECTION_CHANGE = 16384,
  BTC_MEDIA_PROCESSING = 0x10000,
  BTC_PHONE_CALL = 0x20000,
  BTC_GENERAL = 0x40000,
  BTC_STARTUP = 0x80000,
  BTC_ANY_CAPABILITY = -1,
} BACKGROUND_TASK_CAPABILITY, *PBACKGROUND_TASK_CAPABILITY;

typedef enum _POWER_REQUEST_TYPE
{
  PowerRequestDisplayRequired = 0,
  PowerRequestSystemRequired = 1,
  PowerRequestAwayModeRequired = 2,
  PowerRequestExecutionRequired = 3,
} POWER_REQUEST_TYPE, *PPOWER_REQUEST_TYPE;

typedef enum _TAG_UNNAMED_300
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_300, *PTAG_UNNAMED_300;

struct tagIncomingCallData
{
  /* 0x0000 */ unsigned long dwClientPID;
}; /* size: 0x0004 */

struct Windows::Foundation::IAsyncActionWithProgress_impl<double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_301
{
  value = 1,
} TAG_UNNAMED_301, *PTAG_UNNAMED_301;

typedef enum _TAG_UNNAMED_302
{
  value = 0,
} TAG_UNNAMED_302, *PTAG_UNNAMED_302;

typedef enum _TAG_UNNAMED_303
{
  value = 1,
} TAG_UNNAMED_303, *PTAG_UNNAMED_303;

typedef struct _CRYPT_REGISTER_ACTIONID
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_297;
  /* 0x0008 */ struct _CRYPT_TRUST_REG_ENTRY sInitProvider;
  /* 0x0020 */ struct _CRYPT_TRUST_REG_ENTRY sObjectProvider;
  /* 0x0038 */ struct _CRYPT_TRUST_REG_ENTRY sSignatureProvider;
  /* 0x0050 */ struct _CRYPT_TRUST_REG_ENTRY sCertificateProvider;
  /* 0x0068 */ struct _CRYPT_TRUST_REG_ENTRY sCertificatePolicyProvider;
  /* 0x0080 */ struct _CRYPT_TRUST_REG_ENTRY sFinalPolicyProvider;
  /* 0x0098 */ struct _CRYPT_TRUST_REG_ENTRY sTestPolicyProvider;
  /* 0x00b0 */ struct _CRYPT_TRUST_REG_ENTRY sCleanupProvider;
} CRYPT_REGISTER_ACTIONID, *PCRYPT_REGISTER_ACTIONID; /* size: 0x00c8 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_304
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_304, *PTAG_UNNAMED_304;

struct IEnumConnectionPoints
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_305
{
  value = 0,
} TAG_UNNAMED_305, *PTAG_UNNAMED_305;

class RegistryKey::KeyInformationClass<_KEY_NODE_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

enum tagURLTEMPLATE
{
  URLTEMPLATE_CUSTOM = 0,
  URLTEMPLATE_PREDEFINED_MIN = 0x10000,
  URLTEMPLATE_LOW = 0x10000,
  URLTEMPLATE_MEDLOW = 0x10500,
  URLTEMPLATE_MEDIUM = 0x11000,
  URLTEMPLATE_MEDHIGH = 0x11500,
  URLTEMPLATE_HIGH = 0x12000,
  URLTEMPLATE_PREDEFINED_MAX = 0x20000,
};

typedef enum _TAG_UNNAMED_306
{
  value = 0,
} TAG_UNNAMED_306, *PTAG_UNNAMED_306;

typedef struct _MODULE_TYPE_INFO
{
  /* 0x0000 */ unsigned short dataLength;
  /* 0x0002 */ unsigned short leaf;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} MODULE_TYPE_INFO, *PMODULE_TYPE_INFO; /* size: 0x0006 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::window_dc,HDC__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_307
{
  value = 1,
} TAG_UNNAMED_307, *PTAG_UNNAMED_307;

class CListHeader
{
}; /* size: 0x0010 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_308
{
  value = 0,
} TAG_UNNAMED_308, *PTAG_UNNAMED_308;

typedef struct _QUERY_BAD_RANGES_OUTPUT_RANGE
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 StartOffset;
  /* 0x0010 */ unsigned __int64 LengthInBytes;
} QUERY_BAD_RANGES_OUTPUT_RANGE, *PQUERY_BAD_RANGES_OUTPUT_RANGE; /* size: 0x0018 */

class RegistryKey::ValueInformationClass<_KEY_VALUE_FULL_INFORMATION>
{
  /* 0x0000 */ enum _KEY_VALUE_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

class std::bad_exception
{
}; /* size: 0x0018 */

struct wil::unique_hglobal_locked
{
  /* 0x0000 */ long Padding_298[2];
  /* 0x0008 */ void* m_globalMemory;
}; /* size: 0x0010 */

enum IMMERSIVE_APPLICATION_GET_WINDOWS_FILTER
{
  IAGWF_ANY = 0,
  IAGWF_STRONGLY_NAMED = 1,
  IAGWF_PREFER_PENDING_PRESENTED = 2,
  IAGWF_ONLY_PENDING_PRESENTED = 3,
  IAGWF_PRESENTATION = 4,
  IAGWF_FRAME = 5,
};

typedef struct _IMAGE_HOT_PATCH_BASE
{
  /* 0x0000 */ unsigned long SequenceNumber;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long OriginalTimeDateStamp;
  /* 0x000c */ unsigned long OriginalCheckSum;
  /* 0x0010 */ unsigned long CodeIntegrityInfo;
  /* 0x0014 */ unsigned long CodeIntegritySize;
  /* 0x0018 */ unsigned long PatchTable;
  /* 0x001c */ unsigned long BufferOffset;
} IMAGE_HOT_PATCH_BASE, *PIMAGE_HOT_PATCH_BASE; /* size: 0x0020 */

enum IMMAPPPROPERTYSTOREFLAGS
{
  IAGPS_DEFAULT = 0,
};

class AdHocCallFrame<ISearchProtocol,<lambda_eb81b7dcb3076a64e0db4008f1f3b137> >
{
  /* 0x0000 */ long Padding_299[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::Init::__l2::<lambda_eb81b7dcb3076a64e0db4008f1f3b137>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_THREAD_EX_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD_EX* Threads /* zero-length array */;
} MINIDUMP_THREAD_EX_LIST, *PMINIDUMP_THREAD_EX_LIST; /* size: 0x0004 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::IPropertyValue *>
{
}; /* size: 0x0008 */

typedef struct _NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long cbPublicKeyBlob;
} NCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES, *PNCRYPT_ISOLATED_KEY_ATTESTED_ATTRIBUTES; /* size: 0x000c */

enum IMMERSIVE_APPLICATION_QUERY_SERVICE_OPTION
{
  IAQSO_DEFAULT = 0,
  IAQSO_FIRST_PACKAGED = 1,
  IAQSO_ANY_PACKAGED = 2,
};

enum SPLASHSCREEN_ORIENTATION_PREFERENCE
{
  SSOP_NONE = 0,
  SSOP_LANDSCAPE = 1,
  SSOP_PORTRAIT = 2,
  SSOP_LANDSCAPE_FLIPPED = 4,
  SSOP_PORTRAIT_FLIPPED = 8,
};

enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_OPTION
{
  NIAWO_ALL = 0,
  NIAWO_SKIP_SYSTEM_WINDOWS = 1,
  NIAWO_CURRENT_WINDOW_ONLY = 2,
  NIAWO_CURRENT_WINDOW_ONLY_IFF_APP = 3,
};

class wil::unique_any_t<wil::folder_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >
{
}; /* size: 0x0008 */

enum DISPLAYCONFIG_SCALING
{
  DISPLAYCONFIG_SCALING_IDENTITY = 1,
  DISPLAYCONFIG_SCALING_CENTERED = 2,
  DISPLAYCONFIG_SCALING_STRETCHED = 3,
  DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4,
  DISPLAYCONFIG_SCALING_CUSTOM = 5,
  DISPLAYCONFIG_SCALING_PREFERRED = 128,
  DISPLAYCONFIG_SCALING_FORCE_UINT32 = -1,
};

typedef struct _MINIDUMP_PROCESS_VM_COUNTERS_1
{
  /* 0x0000 */ unsigned short Revision;
  /* 0x0002 */ char Padding_300[2];
  /* 0x0004 */ unsigned long PageFaultCount;
  /* 0x0008 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0010 */ unsigned __int64 WorkingSetSize;
  /* 0x0018 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0020 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0028 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 PagefileUsage;
  /* 0x0040 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0048 */ unsigned __int64 PrivateUsage;
} MINIDUMP_PROCESS_VM_COUNTERS_1, *PMINIDUMP_PROCESS_VM_COUNTERS_1; /* size: 0x0050 */

enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_DELIVERY_TYPE
{
  NIAWDT_POST = 0,
  NIAWDT_SENDNOTIFY = 1,
};

enum IMMAPP_SETTHUMBNAIL_PREVIEW_STATE
{
  IMMSPS_VISIBLE = 0,
  IMMSPS_HIDDEN = 1,
};

class GetCastMethod<long,long>
{
}; /* size: 0x0001 */

struct FRAME_GetTypeInfoCount
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ unsigned int* pctinfo;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Rect,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View> const >;

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0002
{
  MCF_FORCE = 0,
  MCF_IF_NOT_VISIBLE = 1,
} _MIDL___MIDL_itf_shpriv_core_0000_0325_0002, *P_MIDL___MIDL_itf_shpriv_core_0000_0325_0002;

typedef enum _TAG_UNNAMED_309
{
  value = 0,
} TAG_UNNAMED_309, *PTAG_UNNAMED_309;

struct wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_310
{
  CB_PRIVATE_BUFFER = 256,
} TAG_UNNAMED_310, *PTAG_UNNAMED_310;

struct wistd::__compressed_pair_elem<_TOKEN_PRIMARY_GROUP *,0,0>
{
  /* 0x0000 */ struct _TOKEN_PRIMARY_GROUP* __value_;
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0001
{
  GVS_NORMAL = 0,
  GVS_USE_SPLASHSCREEN_VISUAL = 1,
  GVS_USE_SPLASHSCREEN_VISUAL_ONCE = 2,
} _MIDL___MIDL_itf_shpriv_core_0000_0325_0001, *P_MIDL___MIDL_itf_shpriv_core_0000_0325_0001;

struct INFO
{
  /* 0x0000 */ int fUsed;
  /* 0x0004 */ unsigned long dwConnection;
  /* 0x0008 */ unsigned short cf;
  /* 0x000a */ char Padding_301[2];
  /* 0x000c */ unsigned long grfAdvf;
}; /* size: 0x0010 */

typedef struct _OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long TotalNumberOfObjects;
  /* 0x0014 */ unsigned long TotalNumberOfHandles;
  /* 0x0018 */ unsigned long TotalPagedPoolUsage;
  /* 0x001c */ unsigned long TotalNonPagedPoolUsage;
  /* 0x0020 */ unsigned long TotalNamePoolUsage;
  /* 0x0024 */ unsigned long TotalHandleTableUsage;
  /* 0x0028 */ unsigned long HighWaterNumberOfObjects;
  /* 0x002c */ unsigned long HighWaterNumberOfHandles;
  /* 0x0030 */ unsigned long HighWaterPagedPoolUsage;
  /* 0x0034 */ unsigned long HighWaterNonPagedPoolUsage;
  /* 0x0038 */ unsigned long HighWaterNamePoolUsage;
  /* 0x003c */ unsigned long HighWaterHandleTableUsage;
  /* 0x0040 */ unsigned long InvalidAttributes;
  /* 0x0044 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0054 */ unsigned long ValidAccessMask;
  /* 0x0058 */ unsigned char SecurityRequired;
  /* 0x0059 */ unsigned char MaintainHandleCount;
  /* 0x005a */ unsigned char TypeIndex;
  /* 0x005b */ char ReservedByte;
  /* 0x005c */ unsigned long PoolType;
  /* 0x0060 */ unsigned long DefaultPagedPoolCharge;
  /* 0x0064 */ unsigned long DefaultNonPagedPoolCharge;
} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef enum _TAG_UNNAMED_311
{
  value = 1,
} TAG_UNNAMED_311, *PTAG_UNNAMED_311;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0003
{
  IABF_NONE = 0,
  IABF_INVALID_AUTOGLOM_DESTINATION = 1,
  IABF_AVOID_VIEW_FOR_SWITCH = 2,
  IABF_FORCE_TERMINATE_ON_CLOSE = -2147483648,
} _MIDL___MIDL_itf_shpriv_core_0000_0325_0003, *P_MIDL___MIDL_itf_shpriv_core_0000_0325_0003;

typedef struct __noop_coroutine_frame_legacy
{
  /* 0x0000 */ void* resume;
  /* 0x0008 */ int flag;
  /* 0x000c */ int index;
} _noop_coroutine_frame_legacy, *P_noop_coroutine_frame_legacy; /* size: 0x0010 */

struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0004
{
  GSF_LOCKSCREENACTIVATION = 1,
  GSF_ACTIVATION = 2,
} _MIDL___MIDL_itf_shpriv_core_0000_0325_0004, *P_MIDL___MIDL_itf_shpriv_core_0000_0325_0004;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IOutputStream *>
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_shpriv_core_0000_0325_0005
{
  IAQ_WIN8_WINDOWING_BEHAVIOR = 0,
  IAQ_REQUIRES_1366_PORTRAIT_MIN_HEIGHT = 1,
  IAQ_SHOW_ACTIONS_MENU = 2,
  IAQ_USE_WIN8X_COMPATIBILITY_SCALING = 3,
  IAQ_FULLSCREEN_8X_LEGACY_APP = 4,
  IAQ_WIN81_WINDOWING_BEHAVIOR = 5,
  IAQ_DONT_CACHE_TITLE_BAR_SETTINGS = 6,
  IAQ_USE_PREFERRED_STANDALONE_SIZE = 7,
} _MIDL___MIDL_itf_shpriv_core_0000_0325_0005, *P_MIDL___MIDL_itf_shpriv_core_0000_0325_0005;

class SafeCastHelper<long,long,0>
{
}; /* size: 0x0001 */

typedef enum _FP_IEEE_COMPARE_RESULT
{
  FpCompareEqual = 0,
  FpCompareGreater = 1,
  FpCompareLess = 2,
  FpCompareUnordered = 3,
} FP_IEEE_COMPARE_RESULT, *PFP_IEEE_COMPARE_RESULT;

struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V3
{
  /* 0x0000 */ __int64 MaxIops;
  /* 0x0008 */ __int64 MaxBandwidth;
  /* 0x0010 */ __int64 ReservationIops;
  /* 0x0018 */ wchar_t* VolumeName;
  /* 0x0020 */ unsigned long BaseIoSize;
  /* 0x0024 */ enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
  /* 0x0028 */ unsigned short VolumeNameLength;
  /* 0x002a */ char Padding_302[6];
  /* 0x0030 */ __int64 CriticalReservationIops;
  /* 0x0038 */ __int64 ReservationBandwidth;
  /* 0x0040 */ __int64 CriticalReservationBandwidth;
  /* 0x0048 */ __int64 MaxTimePercent;
  /* 0x0050 */ __int64 ReservationTimePercent;
  /* 0x0058 */ __int64 CriticalReservationTimePercent;
  /* 0x0060 */ __int64 SoftMaxIops;
  /* 0x0068 */ __int64 SoftMaxBandwidth;
  /* 0x0070 */ __int64 SoftMaxTimePercent;
  /* 0x0078 */ __int64 LimitExcessNotifyIops;
  /* 0x0080 */ __int64 LimitExcessNotifyBandwidth;
  /* 0x0088 */ __int64 LimitExcessNotifyTimePercent;
}; /* size: 0x0090 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnknown> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IUnknown>* ptr_;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_312
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_312, *PTAG_UNNAMED_312;

typedef struct _STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned long OptimalWriteSize;
  /* 0x0004 */ unsigned long StreamGranularitySize;
  /* 0x0008 */ unsigned long StreamIdMin;
  /* 0x000c */ unsigned long StreamIdMax;
} STREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER, *PSTREAMS_QUERY_PARAMETERS_OUTPUT_BUFFER; /* size: 0x0010 */

class RegistryKey::KeyInformationClass<_KEY_CACHED_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

class IntTraits<__int64>
{
  union
  {
    /* 0x0000 */ const __int64 maxInt;
    /* 0x0000 */ const __int64 minInt;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_313
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_313, *PTAG_UNNAMED_313;

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IOutputStream *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapChangedEventArgs<HSTRING__ *>
{
}; /* size: 0x0008 */

struct tagFUNCDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long Padding_303;
  /* 0x0008 */ long* lprgscode;
  /* 0x0010 */ struct tagELEMDESC* lprgelemdescParam;
  /* 0x0018 */ enum tagFUNCKIND funckind;
  /* 0x001c */ enum tagINVOKEKIND invkind;
  /* 0x0020 */ enum tagCALLCONV callconv;
  /* 0x0024 */ short cParams;
  /* 0x0026 */ short cParamsOpt;
  /* 0x0028 */ short oVft;
  /* 0x002a */ short cScodes;
  /* 0x002c */ long Padding_304;
  /* 0x0030 */ struct tagELEMDESC elemdescFunc;
  /* 0x0050 */ unsigned short wFuncFlags;
  /* 0x0052 */ char __PADDING__[6];
}; /* size: 0x0058 */

struct tagFORMATETC32
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_305[2];
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

struct FORMATETCDATA32
{
  /* 0x0000 */ struct tagFORMATETC32 _FormatEtc;
  /* 0x0014 */ int fSaveOnFlush;
  /* 0x0018 */ unsigned long dwReserved1;
  /* 0x001c */ unsigned long dwReserved2;
}; /* size: 0x0020 */

struct FORMATETCDATAARRAY32
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA32 _FormatEtcData[1];
}; /* size: 0x0038 */

struct _RTL_STACK_TRACE_ENTRY;

typedef struct _ARM64_NT_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Cpsr;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned __int64 X0;
      /* 0x0010 */ unsigned __int64 X1;
      /* 0x0018 */ unsigned __int64 X2;
      /* 0x0020 */ unsigned __int64 X3;
      /* 0x0028 */ unsigned __int64 X4;
      /* 0x0030 */ unsigned __int64 X5;
      /* 0x0038 */ unsigned __int64 X6;
      /* 0x0040 */ unsigned __int64 X7;
      /* 0x0048 */ unsigned __int64 X8;
      /* 0x0050 */ unsigned __int64 X9;
      /* 0x0058 */ unsigned __int64 X10;
      /* 0x0060 */ unsigned __int64 X11;
      /* 0x0068 */ unsigned __int64 X12;
      /* 0x0070 */ unsigned __int64 X13;
      /* 0x0078 */ unsigned __int64 X14;
      /* 0x0080 */ unsigned __int64 X15;
      /* 0x0088 */ unsigned __int64 X16;
      /* 0x0090 */ unsigned __int64 X17;
      /* 0x0098 */ unsigned __int64 X18;
      /* 0x00a0 */ unsigned __int64 X19;
      /* 0x00a8 */ unsigned __int64 X20;
      /* 0x00b0 */ unsigned __int64 X21;
      /* 0x00b8 */ unsigned __int64 X22;
      /* 0x00c0 */ unsigned __int64 X23;
      /* 0x00c8 */ unsigned __int64 X24;
      /* 0x00d0 */ unsigned __int64 X25;
      /* 0x00d8 */ unsigned __int64 X26;
      /* 0x00e0 */ unsigned __int64 X27;
      /* 0x00e8 */ unsigned __int64 X28;
      /* 0x00f0 */ unsigned __int64 Fp;
      /* 0x00f8 */ unsigned __int64 Lr;
    }; /* size: 0x00f8 */
    /* 0x0008 */ unsigned __int64 X[31];
  }; /* size: 0x00f8 */
  /* 0x0100 */ unsigned __int64 Sp;
  /* 0x0108 */ unsigned __int64 Pc;
  /* 0x0110 */ union _ARM64_NT_NEON128 V[32];
  /* 0x0310 */ unsigned long Fpcr;
  /* 0x0314 */ unsigned long Fpsr;
  /* 0x0318 */ unsigned long Bcr[8];
  /* 0x0338 */ unsigned __int64 Bvr[8];
  /* 0x0378 */ unsigned long Wcr[2];
  /* 0x0380 */ unsigned __int64 Wvr[2];
} ARM64_NT_CONTEXT, *PARM64_NT_CONTEXT; /* size: 0x0390 */

enum IMMERSIVE_MONITOR_FILTER_FLAGS
{
  IMMERSIVE_MONITOR_FILTER_FLAGS_NONE = 0,
  IMMERSIVE_MONITOR_FILTER_FLAGS_DISABLE_TRAY = 1,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::paint_dc,HDC__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0050 */

struct IEnumGUID
{
}; /* size: 0x0008 */

enum NATIVE_DISPLAY_ORIENTATION
{
  NDO_LANDSCAPE = 0,
  NDO_PORTRAIT = 1,
};

struct PROCESS_UICONTEXT_INFORMATION
{
  /* 0x0000 */ enum PROCESS_UICONTEXT processUIContext;
  /* 0x0004 */ enum PROCESS_UI_FLAGS flags;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_314
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_314, *PTAG_UNNAMED_314;

typedef struct _ldiv_t
{
  /* 0x0000 */ long quot;
  /* 0x0004 */ long rem;
} ldiv_t, *Pldiv_t; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

enum tagMENUPOPUPSELECT
{
  MPOS_EXECUTE = 0,
  MPOS_FULLCANCEL = 1,
  MPOS_CANCELLEVEL = 2,
  MPOS_SELECTLEFT = 3,
  MPOS_SELECTRIGHT = 4,
  MPOS_CHILDTRACKING = 5,
};

typedef struct _tlgWrapSz<unsigned short>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const wchar_t* const Psz;
  }; /* size: 0x0008 */
} tlgWrapSz<unsigned short>, *PtlgWrapSz<unsigned short>; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_315
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_315, *PTAG_UNNAMED_315;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<IInspectable *>
{
}; /* size: 0x0008 */

struct IWinInetFileStream
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_316
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_316, *PTAG_UNNAMED_316;

struct IBindCallbackRedirect
{
}; /* size: 0x0008 */

class RegistryKey::KeyInformationClass<_KEY_HANDLE_TAGS_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

enum DEFAULTSAVEFOLDERTYPE
{
  DSFT_DETECT = 1,
  DSFT_PRIVATE = 2,
  DSFT_PUBLIC = 3,
};

class wil::details::<lambda_3e104d93bedb8b8afc3f0fe3885aebb9>
{
}; /* size: 0x0001 */

enum tagTLG_AGGREGATE_OPTIONS
{
  TlgAggregateOptionFlushNone = 0,
  TlgAggregateOptionFlushNormal = 1,
  TlgAggregateOptionFlushHigh = 2,
  TlgAggregateOptionFlushInvalid = 3,
  TlgAggregateOptionFlushMask = 15,
  TlgAggregateOptionPaged = 0xffff8000,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >
{
}; /* size: 0x0008 */

union FT
{
  union
  {
    /* 0x0000 */ unsigned __int64 ft_scalar;
    /* 0x0000 */ struct _FILETIME ft_struct;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,HSTRING__ *>
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 DataSize;
  /* 0x0008 */ unsigned __int64 Rva;
} MINIDUMP_LOCATION_DESCRIPTOR64, *PMINIDUMP_LOCATION_DESCRIPTOR64; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_317
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_317, *PTAG_UNNAMED_317;

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::InPlaceDeactivate::__l2::<lambda_6c7999a0825145bb8114241691193a37>
{
}; /* size: 0x0001 */

enum BANNER_NOTIFICATION_EVENT
{
  BNE_Rendered = 0,
  BNE_Hovered = 1,
  BNE_Closed = 2,
  BNE_Dismissed = 3,
  BNE_Button1Clicked = 4,
  BNE_Button2Clicked = 5,
};

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP
{
  /* 0x0000 */ unsigned long NodeProximityId;
  /* 0x0004 */ unsigned short NodeNumber;
  /* 0x0006 */ char __PADDING__[2];
} SYSTEM_NUMA_PROXIMITY_MAP, *PSYSTEM_NUMA_PROXIMITY_MAP; /* size: 0x0008 */

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE
{
  LowMemoryResourceNotification = 0,
  HighMemoryResourceNotification = 1,
} MEMORY_RESOURCE_NOTIFICATION_TYPE, *PMEMORY_RESOURCE_NOTIFICATION_TYPE;

enum ASSOCIATIONTYPE
{
  AT_FILEEXTENSION = 0,
  AT_URLPROTOCOL = 1,
  AT_STARTMENUCLIENT = 2,
  AT_MIMETYPE = 3,
};

enum ASSOCIATIONLEVEL
{
  AL_MACHINE = 0,
  AL_EFFECTIVE = 1,
  AL_USER = 2,
};

typedef struct _SMB_SHARE_FLUSH_AND_PURGE_OUTPUT
{
  /* 0x0000 */ unsigned long cEntriesPurged;
} SMB_SHARE_FLUSH_AND_PURGE_OUTPUT, *PSMB_SHARE_FLUSH_AND_PURGE_OUTPUT; /* size: 0x0004 */

enum FFFP_MODE
{
  FFFP_EXACTMATCH = 0,
  FFFP_NEARESTPARENTMATCH = 1,
};

struct DDEPOKE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 13; /* bit position: 0 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short fReserved : 2; /* bit position: 14 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

enum STUB_PHASE
{
  STUB_UNMARSHAL = 0,
  STUB_CALL_SERVER = 1,
  STUB_MARSHAL = 2,
  STUB_CALL_SERVER_NO_HRESULT = 3,
};

class std::_String_iterator<std::_String_val<std::_Simple_types<char16_t> > >;

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>
{
}; /* size: 0x0001 */

enum tagCONDITION_TYPE
{
  CT_AND_CONDITION = 0,
  CT_OR_CONDITION = 1,
  CT_NOT_CONDITION = 2,
  CT_LEAF_CONDITION = 3,
};

struct Windows::Foundation::Collections::IIterator<__int64>
{
}; /* size: 0x0008 */

class AdditionHelper<__int64,unsigned __int64,13>
{
}; /* size: 0x0001 */

enum OLE_TRISTATE
{
  triUnchecked = 0,
  triChecked = 1,
  triGray = 2,
};

class SafeInt<unsigned short,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >
{
  /* 0x0000 */ unsigned short m_int;
}; /* size: 0x0002 */

typedef enum _TAPE_DRIVE_PROBLEM_TYPE
{
  TapeDriveProblemNone = 0,
  TapeDriveReadWriteWarning = 1,
  TapeDriveReadWriteError = 2,
  TapeDriveReadWarning = 3,
  TapeDriveWriteWarning = 4,
  TapeDriveReadError = 5,
  TapeDriveWriteError = 6,
  TapeDriveHardwareError = 7,
  TapeDriveUnsupportedMedia = 8,
  TapeDriveScsiConnectionError = 9,
  TapeDriveTimetoClean = 10,
  TapeDriveCleanDriveNow = 11,
  TapeDriveMediaLifeExpired = 12,
  TapeDriveSnappedTape = 13,
} TAPE_DRIVE_PROBLEM_TYPE, *PTAPE_DRIVE_PROBLEM_TYPE;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IServiceHostBrokerProvider> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IServiceHostBrokerProvider>* ptr_;
}; /* size: 0x0008 */

typedef enum _SPTEXT
{
  SPTEXT_ACTIONDESCRIPTION = 1,
  SPTEXT_ACTIONDETAIL = 2,
} SPTEXT, *PSPTEXT;

class wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter>
{
  /* 0x0000 */ class wistd::__compressed_pair<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData> *,wil::process_heap_deleter> __ptr_;
}; /* size: 0x0008 */

typedef struct _SYSDBG_LIVEDUMP_CONTROL
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned __int64 BugCheckParam1;
  /* 0x0010 */ unsigned __int64 BugCheckParam2;
  /* 0x0018 */ unsigned __int64 BugCheckParam3;
  /* 0x0020 */ unsigned __int64 BugCheckParam4;
  /* 0x0028 */ void* DumpFileHandle;
  /* 0x0030 */ void* CancelEventHandle;
  /* 0x0038 */ union _SYSDBG_LIVEDUMP_CONTROL_FLAGS Flags;
  /* 0x003c */ union _SYSDBG_LIVEDUMP_CONTROL_ADDPAGES AddPagesControl;
  /* 0x0040 */ struct _SYSDBG_LIVEDUMP_SELECTIVE_CONTROL* SelectiveControl;
} SYSDBG_LIVEDUMP_CONTROL, *PSYSDBG_LIVEDUMP_CONTROL; /* size: 0x0048 */

struct IInternetProtocol
{
}; /* size: 0x0008 */

enum EDIT_CONTROL_FEATURE
{
  EDIT_CONTROL_FEATURE_ENTERPRISE_DATA_PROTECTION_PASTE_SUPPORT = 0,
  EDIT_CONTROL_FEATURE_PASTE_NOTIFICATIONS = 1,
};

struct ISpecialSystemProperties
{
}; /* size: 0x0008 */

class CLimitedStreamBase::Stat::__l2::<lambda_1d7dcc53cb7b04382455cc4b0de5f8d7>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ struct tagSTATSTG*& pstatstg;
  /* 0x0010 */ unsigned long& grfStatFlag;
}; /* size: 0x0018 */

enum IMMERSIVE_HOT_KEY_ID
{
  IHKID_DESKTOP = 0,
  IHKID_MINIMIZEALL = 1,
  IHKID_SHAKE = 2,
  IHKID_PRIORPEARL = 3,
  IHKID_NEXTPEARL = 4,
  IHKID_SETTINGSCHARM = 5,
  IHKID_SETTINGSCHARM_ALTERNATE = 6,
  IHKID_CHARMBAR = 7,
  IHKID_APPBAR = 8,
  IHKID_SETFOCUS_CYCLENEXT = 9,
  IHKID_SETFOCUS_CYCLEPREV = 10,
  IHKID_ALLUPVIEW = 11,
  IHKID_DEVICESCHARM = 12,
  IHKID_SCREENSHOT_KEYBOARD = 13,
  IHKID_SCREENSHOT_FKEY = 14,
  IHKID_LAUNCHERTIPMENU = 15,
  IHKID_CHARMBAR_ALTERNATE = 16,
  IHKID_APPBAR_ALTERNATE = 17,
  IHKID_DEVICESCHARM_ALTERNATE = 18,
  IHKID_DEVICESCHARM_PROJECT_ALTERNATE = 19,
  IHKID_REARRANGE_CYCLENEXT_ALTERNATE = 20,
  IHKID_REARRANGE_CYCLEPREV_ALTERNATE = 21,
  IHKID_WIN_ARROW_LEFT = 22,
  IHKID_WIN_ARROW_LEFT_SHIFT = 23,
  IHKID_WIN_ARROW_RIGHT = 24,
  IHKID_WIN_ARROW_RIGHT_SHIFT = 25,
  IHKID_WIN_ARROW_UP = 26,
  IHKID_WIN_ARROW_DOWN = 27,
  IHKID_LAUNCH_FEEDBACKAPP = 28,
  IHKID_INKWORKSPACE = 29,
  IHKID_SEARCH_TEXT_APP = 30,
  IHKID_KEYBOARD_SEARCH_TEXT_APP = 31,
  IHKID_SEARCH_VOICE_APP = 32,
  IHKID_PTP_TAP_SEARCH_TEXT_APP = 33,
  IHKID_NOTE = 34,
  IHKID_NOTESCREENSHOT = 35,
  IHKID_VIRTUAL_DESKTOPS_LEFT = 36,
  IHKID_VIRTUAL_DESKTOPS_RIGHT = 37,
  IHKID_VIRTUAL_DESKTOPS_ADD = 38,
  IHKID_VIRTUAL_DESKTOPS_REMOVE = 39,
  IHKID_ALTTAB = 40,
  IHKID_ALTTAB_REVERSE = 41,
  IHKID_WINALTTAB = 42,
  IHKID_WINALTTAB_REVERSE = 43,
  IHKID_ALTTAB_STICKY = 44,
  IHKID_ALTTAB_STICKY_REVERSE = 45,
  IHKID_TABLET_MODE_CONTROLLER_SWITCH = 46,
  IHKID_TABLET_MODE_CONTROLLER_PROMPT = 47,
  IHKID_GAME_GUIDE_OVERLAY = 48,
  IHKID_TOGGLE_GAME_RECORDING = 49,
  IHKID_GAME_RECORD_CLIP = 50,
  IHKID_CAPTURE_GAME_SCREENSHOT = 51,
  IHKID_TOGGLE_GAME_RECORDING_INDICATOR = 52,
  IHKID_TOGGLE_MICROPHONE_CAPTURE = 53,
  IHKID_TOGGLE_BROADCAST = 54,
  IHKID_TOGGLE_WEBCAMERA_CAPTURE = 55,
  IHKID_GAMEDVR_NEXUS = 56,
  IHKID_ALTESC = 57,
  IHKID_ALTESC_REVERSE = 58,
  IHKID_ALT_GAME_GUIDE_OVERLAY = 59,
  IHKID_ALT_TOGGLE_GAME_RECORDING = 60,
  IHKID_ALT_GAME_RECORD_CLIP = 61,
  IHKID_ALT_CAPTURE_GAME_SCREENSHOT = 62,
  IHKID_ALT_TOGGLE_GAME_RECORDING_INDICATOR = 63,
  IHKID_ALT_TOGGLE_MICROPHONE_CAPTURE = 64,
  IHKID_ALT_TOGGLE_BROADCAST = 65,
  IHKID_ALT_TOGGLE_WEBCAMERA_CAPTURE = 66,
  IHKID_ACTION_CENTER_TOAST_FOCUS = 67,
  IHKID_GLOBAL_BACK = 68,
  IHKID_PEN_LONG_PRESS = 69,
  IHKID_SOFT_LANDING_FOCUS = 70,
  IHKID_EDP_BADGE_FOCUS = 71,
  IHKID_FULLSCREEN = 72,
  IHKID_CLOCKFLYOUT = 73,
  IHKID_TOGGLE_HOLOGRAPHIC = 74,
  IHKID_INKWORKSPACE_SCREEN_CAPTURE = 75,
  IHKID_SWITCH_BACK = 76,
  IHKID_MAGNIFIER_SETTINGS = 77,
  IHKID_NARRATOR_SETTINGS = 78,
  IHKID_LAUNCH_QUICKASSIST = 79,
  IHKID_LAUNCH_LANGUAGECOMMUNITYAPP = 80,
  IHKID_SHOULDER_TAP_FOCUS = 81,
  IHKID_TOGGLE_COLOR_FILTERING = 82,
  IHKID_APPCOMMAND_VOICE_COMMAND = 83,
  IHKID_TOGGLE_SPEECH_RECOGNITION = 84,
  IHKID_TOGGLE_ON_SCREEN_KEYBOARD = 85,
  IHKID_TOGGLE_TITLE_BAR_FOCUS = 86,
  IHKID_TOGGLE_PWILO_UX = 87,
  IHKID_SNAP_DESKTOP = 88,
  IHKID_PEN_UNDOCKED = 89,
  IHKID_PEN_DOCKED = 90,
  IHKID_GAMEBAR_CUSTOM_ACTION_1 = 91,
  IHKID_GAMEBAR_CUSTOM_ACTION_2 = 92,
  IHKID_GAMEBAR_CUSTOM_ACTION_3 = 93,
  IHKID_GAMEBAR_CUSTOM_ACTION_4 = 94,
  IHKID_GAMEBAR_CUSTOM_ACTION_5 = 95,
  IHKID_GAMEBAR_CUSTOM_ACTION_6 = 96,
  IHKID_GAMEBAR_CUSTOM_ACTION_7 = 97,
  IHKID_GAMEBAR_CUSTOM_ACTION_8 = 98,
  IHKID_GAMEBAR_CUSTOM_ACTION_9 = 99,
  IHKID_GAMEBAR_CUSTOM_ACTION_10 = 100,
  IHKID_TOGGLE_SNAPFLYOUT = 101,
  IHKID_TOGGLE_DASHBOARD = 102,
  IHKID_COLUMN_WINDOW_SNAP_LEFT = 103,
  IHKID_COLUMN_WINDOW_SNAP_RIGHT = 104,
  IHKID_COLUMN_WINDOW_SNAP_UP = 105,
  IHKID_COLUMN_WINDOW_SNAP_DOWN = 106,
  IHKID_TOGGLE_MACFLYOUT = 107,
  IHKID_MIRACAST_FOCUS = 108,
};

typedef enum _TAG_UNNAMED_318
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_318, *PTAG_UNNAMED_318;

enum KNOWNDESTCATEGORY
{
  KDC_FREQUENT = 1,
  KDC_RECENT = 2,
};

enum FRAMEWORK_INPUT_PANE_BEHAVIOR_MODE
{
  FIPBM_AUTO = 0,
  FIPBM_STORE_APP = 1,
  FIPBM_DESKTOP_APP = 2,
};

enum IMMERSIVE_MONITOR_MOVE_DIRECTION
{
  IMMD_PREVIOUS = 0,
  IMMD_NEXT = 1,
};

class CBool
{
  /* 0x0000 */ int value;
}; /* size: 0x0004 */

enum PKA_FLAGS
{
  PKA_SET = 0,
  PKA_APPEND = 1,
  PKA_DELETE = 2,
};

class std::chrono::duration<__int64,std::ratio<1,1000000000> >
{
  /* 0x0000 */ __int64 _MyRep;
}; /* size: 0x0008 */

class std::chrono::time_point<std::chrono::steady_clock,std::chrono::duration<__int64,std::ratio<1,1000000000> > >
{
  /* 0x0000 */ class std::chrono::duration<__int64,std::ratio<1,1000000000> > _MyDur;
}; /* size: 0x0008 */

enum SHARING_MENU_PRESENTATION_STATE
{
  PRESENTATION_STATE_UNKNOWN = 0,
  PRESENTATION_STATE_WORKGROUP = 1,
  PRESENTATION_STATE_HOMEGROUP = 2,
  PRESENTATION_STATE_DOMAIN = 3,
};

enum LIBRARYFOLDERFILTER
{
  LFF_FORCEFILESYSTEM = 1,
  LFF_STORAGEITEMS = 2,
  LFF_ALLITEMS = 3,
};

class Microsoft::WRL::ComPtr<IInterfaceRelated>;

class wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _RTL_SRWLOCK* m_ptr;
}; /* size: 0x0008 */

enum SECURELOCKCODE
{
  SECURELOCK_NOCHANGE = -1,
  SECURELOCK_SET_UNSECURE = 0,
  SECURELOCK_SET_MIXED = 1,
  SECURELOCK_SET_SECUREUNKNOWNBIT = 2,
  SECURELOCK_SET_SECURE40BIT = 3,
  SECURELOCK_SET_SECURE56BIT = 4,
  SECURELOCK_SET_FORTEZZA = 5,
  SECURELOCK_SET_SECURE128BIT = 6,
  SECURELOCK_FIRSTSUGGEST = 7,
  SECURELOCK_SUGGEST_UNSECURE = 7,
  SECURELOCK_SUGGEST_MIXED = 8,
  SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9,
  SECURELOCK_SUGGEST_SECURE40BIT = 10,
  SECURELOCK_SUGGEST_SECURE56BIT = 11,
  SECURELOCK_SUGGEST_FORTEZZA = 12,
  SECURELOCK_SUGGEST_SECURE128BIT = 13,
};

enum IHM_DISPLAY_MODE
{
  IDM_NONE = 0,
  IDM_IMMERSIVE = 1,
  IDM_FLOATING = 2,
  IDM_DOCKED = 3,
  IDM_SPLIT = 4,
};

struct DDEDATA
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short fResponse : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short reserved : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

class CDDEServer
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_dwClassFactoryKey;
  /* 0x0014 */ long Padding_306;
  /* 0x0018 */ struct IClassFactory* m_pClassFactory;
  /* 0x0020 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0048 */ int m_bTerminate;
  /* 0x004c */ long Padding_307;
  /* 0x0050 */ struct HWND__* m_hwnd;
  /* 0x0058 */ void* m_hcli;
  /* 0x0060 */ int m_termNo;
  /* 0x0064 */ int m_cSrvrClients;
  /* 0x0068 */ unsigned long m_fcfFlags;
  /* 0x006c */ enum CNVTYP m_cnvtyp;
  /* 0x0070 */ enum CHK m_chk;
  /* 0x0074 */ unsigned short m_aClass;
  /* 0x0076 */ unsigned short m_aOriginalClass;
  /* 0x0078 */ unsigned short m_aExe;
  /* 0x007a */ char Padding_308[2];
  /* 0x007c */ int m_fDoNotDestroyWindow;
}; /* size: 0x0080 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,HSTRING__ *>
{
}; /* size: 0x0008 */

enum wil::FeatureControlKind
{
  Service = 1,
  User = 2,
  Testing = 3,
  Enrollment = 4,
};

class Microsoft::WRL::Wrappers::Details::SyncLockCriticalSection
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION* sync_;
}; /* size: 0x0008 */

typedef enum _SEARCH_QUERY_SYNTAX
{
  SEARCH_NO_QUERY_SYNTAX = 0,
  SEARCH_ADVANCED_QUERY_SYNTAX = 1,
  SEARCH_NATURAL_QUERY_SYNTAX = 2,
} SEARCH_QUERY_SYNTAX, *PSEARCH_QUERY_SYNTAX;

struct Windows::Foundation::IAsyncOperation<HSTRING__ *>
{
}; /* size: 0x0008 */

enum VIRTUALIZEDSELECTIONARRAYVALUE
{
  VSAV_ZEROTHITEMDEVIRTUALIZER = 0,
  VSAV_PARTIALDEVIRTUALIZER = 1,
  VSAV_FULLDEVIRTUALIZER = 2,
  VSAV_STARTINGITEM = 3,
  VSAV_INDEXSTARTINGITEM = 4,
};

enum MERGE_UPDATE_STATUS
{
  MUS_COMPLETE = 0,
  MUS_USERINPUTNEEDED = 1,
  MUS_FAILED = 2,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>
{
}; /* size: 0x0008 */

typedef enum _DMA_WIDTH
{
  Width8Bits = 0,
  Width16Bits = 1,
  Width32Bits = 2,
  Width64Bits = 3,
  WidthNoWrap = 4,
  MaximumDmaWidth = 5,
} DMA_WIDTH, *PDMA_WIDTH;

typedef struct _SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long lError;
  /* 0x0008 */ wchar_t wszErrorText[512];
} SSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS, *PSSL_KEY_PIN_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x0408 */

enum PINNEDLISTMODIFYCALLER
{
  PMC_APPRESOLVERMIGRATION = 0,
  PMC_APPRESOLVERUNINSTALL = 1,
  PMC_APPRESOLVERUNPINUNIQUEID = 2,
  PMC_CONTENTDELIVERYMANAGERBROKER = 3,
  PMC_CONTEXTMENU = 4,
  PMC_DEFAULTMFUCHANGE = 5,
  PMC_DEFAULTMFUPIN = 6,
  PMC_DEFAULTMFUPINAUX = 7,
  PMC_DEFAULTMFUTRYPIN = 8,
  PMC_DEFAULTMFUUPGRADE = 9,
  PMC_IEXPLORERCOMMAND = 10,
  PMC_JUMPVIEWBROKER = 11,
  PMC_PINNEDLISTLAYOUT = 12,
  PMC_PINNEDLISTNONEXIST = 13,
  PMC_PINNEDLISTREORDERLAYOUT = 14,
  PMC_PINNEDLISTUNRESOLVE = 15,
  PMC_RETAILDEMO = 16,
  PMC_SHELLLINK = 17,
  PMC_STARTMENU = 18,
  PMC_STARTMNU = 19,
  PMC_TASKBANDBADSHORTCUT = 20,
  PMC_TASKBANDBROKENPIN = 21,
  PMC_TASKBANDDEDUPPIN = 22,
  PMC_TASKBANDINSERT = 23,
  PMC_TASKBANDMODIFY = 24,
  PMC_TASKBANDPIN = 25,
  PMC_TASKBANDPINGROUP = 26,
  PMC_TASKBANDREORDER = 27,
  PMC_TASKBARPINNABLESURFACEBROKER = 28,
  PMC_TASKBARPINNABLESURFACEBROKERMIGRATION = 29,
  PMC_TASKBARPINNINGBROKERFACTORY = 30,
  PMC_TESTCODE = 31,
  PMC_UNIFIEDTILEMODELBROKER = 32,
  PMC_TRIMOOBEPINS = 33,
  PMC_MICROSOFTEDGE = 34,
  PMC_UPDATESHORTCUT = 35,
  PMC_BROWSERDECLUTTER = 36,
  PMC_CLOUDDEFAULTLAYOUT = 37,
};

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::CreateAccessor::__l2::<lambda_ab7661f9106dbe63888238c0c4789392>
{
  /* 0x0000 */ const wchar_t* pcwszURL;
  /* 0x0008 */ struct _AUTHENTICATION_INFO* pAuthenticationInfo;
  /* 0x0010 */ struct _INCREMENTAL_ACCESS_INFO* pIncrementalAccessInfo;
  /* 0x0018 */ struct _ITEM_INFO* pItemInfo;
  /* 0x0020 */ struct IUrlAccessor** ppAccessor;
}; /* size: 0x0028 */

typedef struct _MINIDUMP_UNLOADED_MODULE_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
} MINIDUMP_UNLOADED_MODULE_LIST, *PMINIDUMP_UNLOADED_MODULE_LIST; /* size: 0x000c */

struct wistd::binary_function<enum wil::FolderChangeEvent,unsigned short const *,void>
{
}; /* size: 0x0001 */

enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult
{
  ProtectionPolicyEvaluationResult_Allowed = 0,
  ProtectionPolicyEvaluationResult_Blocked = 1,
  ProtectionPolicyEvaluationResult_ConsentRequired = 2,
};

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardProtectionServices> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClipboardProtectionServices>* ptr_;
}; /* size: 0x0008 */

class CDefObject::CAdvSinkImpl
{
}; /* size: 0x0008 */

class std::chrono::duration<__int64,std::ratio<1,10000000> >
{
  /* 0x0000 */ __int64 _MyRep;
}; /* size: 0x0008 */

class std::chrono::time_point<std::filesystem::_File_time_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
{
  /* 0x0000 */ class std::chrono::duration<__int64,std::ratio<1,10000000> > _MyDur;
}; /* size: 0x0008 */

struct std::_Make_signed2<2>
{
}; /* size: 0x0001 */

enum tagPropPageOnApply
{
  PPOAACTION_CANCEL = 0,
  PPOAACTION_OK = 1,
  PPOAACTION_APPLY = 2,
};

class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>::GetDropTarget::__l2::<lambda_de8aae3bf856bab3be50d4e660b6e6f6>
{
  /* 0x0000 */ struct IDropTarget** ppDropTarget;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IOSTaskCompletion>
{
  /* 0x0000 */ struct IOSTaskCompletion* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncActionWithProgress_impl<unsigned int>
{
}; /* size: 0x0008 */

enum ELEVATION_STATE
{
  ELEVATION_NOT_CHECKED = 0,
  ELEVATION_CHECKED_SHIELD = 1,
  ELEVATION_CHECKED_NOSHIELD = 2,
};

typedef struct _IMAGE_BDD_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long BDDSize;
} IMAGE_BDD_INFO, *PIMAGE_BDD_INFO; /* size: 0x0008 */

enum DESTLISTTYPE
{
  DLT_PINNED = 0,
  DLT_RECENT = 1,
  DLT_FREQUENT = 2,
};

typedef struct _SRCCODEINFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_309;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned __int64 ModBase;
  /* 0x0018 */ char Obj[261];
  /* 0x011d */ char FileName[261];
  /* 0x0222 */ char Padding_310[2];
  /* 0x0224 */ unsigned long LineNumber;
  /* 0x0228 */ unsigned __int64 Address;
} SRCCODEINFO, *PSRCCODEINFO; /* size: 0x0230 */

class CComCat::CInnerUnk
{
  /* 0x0000 */ long Padding_311[2];
  /* 0x0008 */ class CComCat* m_pObj;
}; /* size: 0x0010 */

enum LIBRARYSAVEFLAGS
{
  LSF_FAILIFTHERE = 0,
  LSF_OVERRIDEEXISTING = 1,
  LSF_MAKEUNIQUENAME = 2,
};

enum USER_TILE_TYPE
{
  UTT_IMAGE_96 = 0,
  UTT_IMAGE_448 = 1,
  UTT_VIDEO_448 = 2,
  UTT_DEFAULT = 3,
  UTT_IMAGE_32 = 4,
  UTT_IMAGE_40 = 5,
  UTT_IMAGE_48 = 6,
  UTT_IMAGE_192 = 7,
  UTT_VIDEO_192 = 8,
  UTT_IMAGE_240 = 9,
  UTT_VIDEO_240 = 10,
  UTT_IMAGE_64 = 11,
  UTT_IMAGE_208 = 12,
  UTT_IMAGE_424 = 13,
  UTT_IMAGE_1080 = 14,
};

class GetCastMethod<unsigned long,long>
{
}; /* size: 0x0001 */

enum DBREASONENUM15
{
  DBREASON_ROWPOSITION_CHANGED = 15,
  DBREASON_ROWPOSITION_CHAPTERCHANGED = 16,
  DBREASON_ROWPOSITION_CLEARED = 17,
  DBREASON_ROW_ASYNCHINSERT = 18,
};

class Microsoft::WRL::ComPtr<IOleDataFormatIterator>
{
  /* 0x0000 */ struct IOleDataFormatIterator* ptr_;
}; /* size: 0x0008 */

enum PackagePathType
{
  PackagePathType_Install = 0,
  PackagePathType_Mutable = 1,
  PackagePathType_Effective = 2,
  PackagePathType_MachineExternal = 3,
  PackagePathType_UserExternal = 4,
  PackagePathType_EffectiveExternal = 5,
};

class Microsoft::WRL::ComPtr<IComCatalogSCM>
{
  /* 0x0000 */ struct IComCatalogSCM* ptr_;
}; /* size: 0x0008 */

class CComCat
{
  /* 0x0000 */ long Padding_312[4];
  /* 0x0010 */ class CComCat::CInnerUnk* m_punkInner;
  /* 0x0018 */ struct IUnknown* m_punkOuter;
  /* 0x0020 */ struct ICatInformation* m_pcsICatInfo;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION m_csCatInfoInit;
  /* 0x0050 */ unsigned long m_dwRefCount;
  /* 0x0054 */ int m_fCsFlag;
  /* 0x0058 */ int m_bLockValid;
  /* 0x005c */ const BOOL m_disablePackagedComForTesting;
  /* 0x005d */ char Padding_313[3];
  /* 0x0060 */ class Microsoft::WRL::ComPtr<IComCatalogSCM> _comCatalog;
}; /* size: 0x0068 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardTaskCompletion,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0030 */

enum wil::FeatureEnabledState
{
  Default = 0,
  Disabled = 1,
  Enabled = 2,
};

class SubtractionHelper<__int64,unsigned __int64,21>
{
}; /* size: 0x0001 */

enum tagPROPCTL_FLAGS
{
  PCF_NONE = 0,
  PCF_VISIBLE = 1,
  PCF_READONLY = 2,
  PCF_USEACTIVEBORDERS = 4,
  PCF_USEEDITINVITATION = 8,
  PCF_VERTPOS_TOP = 0,
  PCF_VERTPOS_CENTER = 16,
  PCF_VERTPOS_BOTTOM = 32,
  PCF_VERTPOS_MASK = 48,
  PCF_HORZPOS_LEFT = 0,
  PCF_HORZPOS_CENTER = 64,
  PCF_HORZPOS_RIGHT = 128,
  PCF_HORZPOS_MASK = 192,
  PCF_RTLREADING = 512,
  PCF_CAN_WRAP_TEXT = 1024,
  PCF_POS_MASK = 1776,
  PCF_NORMAL_TEXT = 0,
  PCF_SHADOW_TEXT = 256,
  PCF_FONT_MASK = 256,
  PCF_FLAGS_MASK = 2047,
};

struct DDEADVISE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short reserved : 14; /* bit position: 0 */
    /* 0x0000 */ unsigned short fDeferUpd : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
}; /* size: 0x0004 */

enum tagTASKTYPE
{
  NOTASKS = 0,
  SPECIALPICTURETASKS = 1,
  SPECIALMUSICTASKS = 2,
  SPECIALDOCUMENTTASKS = 3,
  SPECIALVIDEOTASKS = 4,
  SPECIALGENERICTASKS = 5,
  VIEWCONTROLTASKS = 6,
  COMMONFILEDIALOGTASKS = 7,
};

typedef struct _RTL_CRITICAL_SECTION64
{
  /* 0x0000 */ unsigned __int64 DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ unsigned __int64 OwningThread;
  /* 0x0018 */ unsigned __int64 LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION64, *PRTL_CRITICAL_SECTION64; /* size: 0x0028 */

struct ICatInformation
{
}; /* size: 0x0008 */

struct tagCOMVERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
}; /* size: 0x0004 */

struct tagORPCTHIS
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ long Padding_314;
  /* 0x0020 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0028 */

enum Windows::Foundation::Diagnostics::CausalitySynchronousWork
{
  CausalitySynchronousWork_CompletionNotification = 0,
  CausalitySynchronousWork_ProgressNotification = 1,
  CausalitySynchronousWork_Execution = 2,
};

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0001 */

enum tagCS_COLUMN_SET
{
  COLSET_ALL = 0,
  COLSET_VISIBLE = 1,
  COLSET_COLUMNID = 2,
};

struct Windows::Foundation::IAsyncActionProgressHandler<unsigned int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>
{
}; /* size: 0x0008 */

enum VIRTUALUIGROUPITEMVALUE
{
  VUGIV_VERSION = 0,
  VUGIV_ITEM = 1,
  VUGIV_ITEMCOLLECTION = 2,
};

struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_315;
  /* 0x0008 */ wchar_t* FeatureName;
  /* 0x0010 */ unsigned long BornOnVersion;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_INPUT, *PSYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_INPUT; /* size: 0x0018 */

enum LINESCROLLERVALUE
{
  LSV_VIRT_ANCHOR_X = 0,
  LSV_VIRT_ANCHOR_Y = 1,
  LSV_VIRT_TARGET_X = 2,
  LSV_VIRT_TARGET_Y = 3,
};

typedef struct _Combined_type<float,long double>
{
} Combined_type<float,long double>, *PCombined_type<float,long double>; /* size: 0x0001 */

typedef struct _SPC_SERIALIZED_OBJECT
{
  /* 0x0000 */ unsigned char ClassId[16];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerializedData;
} SPC_SERIALIZED_OBJECT, *PSPC_SERIALIZED_OBJECT; /* size: 0x0020 */

struct SPC_LINK_
{
  /* 0x0000 */ unsigned long dwLinkChoice;
  /* 0x0004 */ long Padding_316;
  union
  {
    /* 0x0008 */ wchar_t* pwszUrl;
    /* 0x0008 */ struct _SPC_SERIALIZED_OBJECT Moniker;
    struct
    {
      /* 0x0008 */ wchar_t* pwszFile;
      /* 0x0010 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

enum STREAM_REFERENCE_TYPE
{
  STREAMREFERENCE_NONE = 0,
  STREAMREFERENCE_FILE = 1,
  STREAMREFERENCE_URI = 2,
  STREAMREFERENCE_STREAM = 3,
  STREAMREFERENCE_DLLRESOURCE = 4,
};

struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)>
{
}; /* size: 0x0001 */

class RunSyncOnMTAThread::__l2::<lambda_e0acd7286b12d12902e038044f4b1749>
{
  /* 0x0000 */ class CClipboardBroker::ValidateAndAcquireACImpersonationSource::__l8::<lambda_a4e555621f6ed4efaaeeaa7992cb2190>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

enum Microsoft::WRL::AsyncResultType
{
  SingleResult = 1,
  MultipleResults = 2,
};

struct tagWNDCLASSEXA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const char* lpszMenuName;
  /* 0x0040 */ const char* lpszClassName;
  /* 0x0048 */ struct HICON__* hIconSm;
}; /* size: 0x0050 */

struct wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData>
{
}; /* size: 0x0001 */

enum std::memory_order
{
  memory_order_relaxed = 0,
  memory_order_consume = 1,
  memory_order_acquire = 2,
  memory_order_release = 3,
  memory_order_acq_rel = 4,
  memory_order_seq_cst = 5,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

enum tagLC_NEXT_INDEX_STATE
{
  LCNIS_DEFAULT = 0,
  LCNIS_SELECTED = 1,
  LCNIS_FOCUSED = 2,
  LCNIS_SELECTIONMARKED = 3,
};

enum CASE_REQUIREMENT
{
  CASE_REQUIREMENT_ANY = 0,
  CASE_REQUIREMENT_UPPER_IF_AQS = 1,
};

enum Windows::Foundation::Diagnostics::CausalityRelation
{
  CausalityRelation_AssignDelegate = 0,
  CausalityRelation_Join = 1,
  CausalityRelation_Choice = 2,
  CausalityRelation_Cancel = 3,
  CausalityRelation_Error = 4,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

enum MFU_FOLDER_ACTION
{
  UNSPECIFIED = 0,
  OPEN_FILE_IN = 1,
  SAVE_FILE_IN = 2,
  COPY_FROM = 3,
  PASTE_TO = 4,
  MOVE_TO = 5,
  COPY_PASTE = 6,
  SHARE = 7,
  MOVE = 8,
  CREATE = 9,
  OPEN_FOLDER = 10,
  OPEN_FOLDER_IN = 11,
  CREATE_IN = 12,
  ENUM_COUNT = 13,
};

struct CDdeObject::CDataObjectImpl
{
  /* 0x0000 */ long Padding_317[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

typedef enum _REQUESTER_TYPE
{
  KernelRequester = 0,
  UserProcessRequester = 1,
  UserSharedServiceRequester = 2,
} REQUESTER_TYPE, *PREQUESTER_TYPE;

typedef struct _DIAGNOSTIC_BUFFER
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum _REQUESTER_TYPE CallerType;
  /* 0x000c */ long Padding_318;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned __int64 ProcessImageNameOffset;
      /* 0x0018 */ unsigned long ProcessId;
      /* 0x001c */ unsigned long ServiceTag;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0010 */ unsigned __int64 DeviceDescriptionOffset;
      /* 0x0018 */ unsigned __int64 DevicePathOffset;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0020 */ unsigned __int64 ReasonOffset;
} DIAGNOSTIC_BUFFER, *PDIAGNOSTIC_BUFFER; /* size: 0x0028 */

typedef struct _WAKE_TIMER_INFO
{
  /* 0x0000 */ unsigned __int64 OffsetToNext;
  /* 0x0008 */ union _ULARGE_INTEGER DueTime;
  /* 0x0010 */ unsigned long Period;
  /* 0x0014 */ long Padding_319;
  /* 0x0018 */ struct _DIAGNOSTIC_BUFFER ReasonContext;
} WAKE_TIMER_INFO, *PWAKE_TIMER_INFO; /* size: 0x0040 */

enum SAFE_SAVE_OPTIONS
{
  SSO_DEFAULT = 0,
  SSO_NO_READER_OPLOCK = 1,
  SSO_OPEN_REPARSE_POINT = 2,
  SSO_WRITE_SHARING_ON_READ_WRITE_ACCESS_MODE = 4,
  SSO_READONLY_OVERRIDE = 8,
  SSO_FREEZE_MODIFIED_DATE = 16,
  SSO_IMPERSONATE_CREATING_THREAD = 32,
  SSO_DISPOSITION_MASK = 0xffffff00,
};

struct BULK_SECURITY_TEST_DATA
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long SecurityIds[1];
}; /* size: 0x0008 */

enum tagUAEVENT
{
  UAE_LAUNCH = 0,
  UAE_SWITCH = 1,
  UAE_TIME = 2,
  UAE_SESSION = 3,
  UAE_EXCLUDEAPP = 4,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardTaskCompletion> const >;

struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageLibrary *>
{
}; /* size: 0x0008 */

enum tagVIEWSETTINGACTION
{
  VSA_Extend = 0,
  VSA_Clone = 1,
  VSA_Disconnect = 2,
  VSA_Force = 3,
  VSA_Noopt = 4,
  VSA_Unforce = 5,
};

struct Windows::Foundation::IAsyncOperation<Windows::System::User *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
  /* 0x0014 */ long Padding_320;
  union
  {
    /* 0x0018 */ unsigned __int64 BootFlags;
    struct /* bitfield */
    {
      /* 0x0018 */ unsigned __int64 DbgMenuOsSelection : 1; /* bit position: 0 */
      /* 0x0018 */ unsigned __int64 DbgHiberBoot : 1; /* bit position: 1 */
      /* 0x0018 */ unsigned __int64 DbgSoftBoot : 1; /* bit position: 2 */
      /* 0x0018 */ unsigned __int64 DbgMeasuredLaunch : 1; /* bit position: 3 */
      /* 0x0018 */ unsigned __int64 DbgMeasuredLaunchCapable : 1; /* bit position: 4 */
      /* 0x0018 */ unsigned __int64 DbgSystemHiveReplace : 1; /* bit position: 5 */
      /* 0x0018 */ unsigned __int64 DbgMeasuredLaunchSmmProtections : 1; /* bit position: 6 */
      /* 0x0018 */ unsigned __int64 DbgMeasuredLaunchSmmLevel : 7; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION; /* size: 0x0020 */

enum DESTLISTKIND
{
  DESTLISTKIND_FIRST = 0,
  DESTLISTKIND_AUTOMATIC = 0,
  DESTLISTKIND_CUSTOM = 1,
  DESTLISTKIND_LAST = 1,
};

struct tagLC_ID
{
  /* 0x0000 */ unsigned short wLanguage;
  /* 0x0002 */ unsigned short wCountry;
  /* 0x0004 */ unsigned short wCodePage;
}; /* size: 0x0006 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IEnumFORMATETC>
{
  /* 0x0000 */ long Padding_321[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

class IntTraits<unsigned long>
{
  union
  {
    /* 0x0000 */ const unsigned long maxInt;
    /* 0x0000 */ const unsigned long minInt;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

enum IMM_APP_CHANGED
{
  IAC_UNKNOWN = 0,
  IAC_STARTED = 1,
  IAC_FOREGROUND = 2,
  IAC_BACKGROUND = 3,
  IAC_SHOWN = 4,
  IAC_HIDDEN = 5,
  IAC_CLOSED = 6,
  IAC_WINDOWPRESENTATIONDECLINED = 7,
  IAC_PRESENTEDWINDOWCHANGED = 8,
  IAC_MOBODYENTERED = 9,
  IAC_MOBODYEXIT = 10,
  IAC_HASPACKAGEID = 11,
  IAC_FORGOTTEN = 12,
  IAC_INTERACTIVE = 13,
  IAC_NON_INTERACTIVE = 14,
  IAC_PENDINGPRESENTEDWINDOWCANCELED = 15,
  IAC_FORGOTTEN_FOR_TERMINATION = 16,
  IAC_MONITORCHANGED = 17,
};

typedef struct _CPTABLEINFO
{
  /* 0x0000 */ unsigned short CodePage;
  /* 0x0002 */ unsigned short MaximumCharacterSize;
  /* 0x0004 */ unsigned short DefaultChar;
  /* 0x0006 */ unsigned short UniDefaultChar;
  /* 0x0008 */ unsigned short TransDefaultChar;
  /* 0x000a */ unsigned short TransUniDefaultChar;
  /* 0x000c */ unsigned short DBCSCodePage;
  /* 0x000e */ unsigned char LeadByte[12];
  /* 0x001a */ char Padding_322[6];
  /* 0x0020 */ unsigned short* MultiByteTable;
  /* 0x0028 */ void* WideCharTable;
  /* 0x0030 */ unsigned short* DBCSRanges;
  /* 0x0038 */ unsigned short* DBCSOffsets;
} CPTABLEINFO, *PCPTABLEINFO; /* size: 0x0040 */

typedef struct _RTL_NLS_STATE
{
  /* 0x0000 */ struct _CPTABLEINFO DefaultAcpTableInfo;
  /* 0x0040 */ struct _CPTABLEINFO DefaultOemTableInfo;
  /* 0x0080 */ unsigned short* ActiveCodePageData;
  /* 0x0088 */ unsigned short* OemCodePageData;
  /* 0x0090 */ unsigned short* LeadByteInfo;
  /* 0x0098 */ unsigned short* OemLeadByteInfo;
  /* 0x00a0 */ unsigned short* CaseMappingData;
  /* 0x00a8 */ unsigned short* UnicodeUpcaseTable844;
  /* 0x00b0 */ unsigned short* UnicodeLowercaseTable844;
} RTL_NLS_STATE, *PRTL_NLS_STATE; /* size: 0x00b8 */

struct GetTypeValueImpl<long>
{
}; /* size: 0x0001 */

enum ITEMDEVIRTUALIZERVALUE
{
  IDV_STARTINGITEM = 0,
  IDV_DEVIRTUALIZATIONTYPE = 1,
  IDV_ISDEVIRTUALIZED = 2,
  IDV_HRDEVIRTUALIZE = 3,
  IDV_ELAPSEDFULLDEVIRTUALIZATIONTIME = 4,
};

struct tagDDECALLDATA
{
  /* 0x0000 */ struct HWND__* hwndSvr;
  /* 0x0008 */ unsigned short wMsg;
  /* 0x000a */ char Padding_323[6];
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
  /* 0x0020 */ struct HWND__* hwndCli;
  /* 0x0028 */ int fFreeOnError;
  /* 0x002c */ int fDone;
  /* 0x0030 */ class DDE_CHANNEL* pChannel;
}; /* size: 0x0038 */

enum SEARCH_SUBMIT_TYPE
{
  SST_SEARCH_BUTTON = 0,
  SST_ENTER_KEY = 1,
  SST_TYPEAHEAD = 2,
};

class std::numeric_limits<char>
{
  union
  {
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_319
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 0,
  isBothLT32Bit = 0,
  isBothLT64Bit = 0,
} TAG_UNNAMED_319, *PTAG_UNNAMED_319;

enum STORAGEITEM_CREATION_TYPE
{
  SICT_ITEM = 0,
  SICT_INFORMATION = 1,
};

enum tagINTERVAL_LIMIT_KIND
{
  ILK_EXPLICIT_INCLUDED = 0,
  ILK_EXPLICIT_EXCLUDED = 1,
  ILK_NEGATIVE_INFINITY = 2,
  ILK_POSITIVE_INFINITY = 3,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

enum REMOVEITEMTYPE
{
  RIT_DEFAULT = 0,
  RIT_DELETE = 1,
};

typedef struct _ALPC_WORK_ON_BEHALF_TICKET
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned long ThreadCreationTimeLow;
} ALPC_WORK_ON_BEHALF_TICKET, *PALPC_WORK_ON_BEHALF_TICKET; /* size: 0x0008 */

enum OPERATION_TYPE
{
  OT_NONE = 0,
  OT_COPY = 1,
  OT_MOVE = 2,
  OT_RECYCLE = 3,
  OT_DELETE = 4,
  OT_RENAME = 5,
  OT_APPLYPROPS = 6,
  OT_DOWNLOAD = 7,
  OT_MOVE_AS_COPY_DELETE = 8,
};

typedef class _TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_324[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>, *PTlgActivityBase<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType>,0,5>; /* size: 0x0028 */

enum tagLC_POINT_TYPE
{
  LCPT_SCREEN = 0,
  LCPT_CLIENT = 1,
  LCPT_SCROLL = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>
{
}; /* size: 0x0008 */

enum SYNCMGR_HANDLER_POLICIES
{
  SYNCMGR_HPM_NONE = 0,
  SYNCMGR_HPM_PREVENT_ACTIVATE = 1,
  SYNCMGR_HPM_PREVENT_DEACTIVATE = 2,
  SYNCMGR_HPM_PREVENT_ENABLE = 4,
  SYNCMGR_HPM_PREVENT_DISABLE = 8,
  SYNCMGR_HPM_PREVENT_START_SYNC = 16,
  SYNCMGR_HPM_PREVENT_STOP_SYNC = 32,
  SYNCMGR_HPM_DISABLE_ENABLE = 256,
  SYNCMGR_HPM_DISABLE_DISABLE = 512,
  SYNCMGR_HPM_DISABLE_START_SYNC = 1024,
  SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048,
  SYNCMGR_HPM_DISABLE_BROWSE = 4096,
  SYNCMGR_HPM_DISABLE_SCHEDULE = 8192,
  SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 0x10000,
  SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48,
  SYNCMGR_HPM_VALID_MASK = 0x12f3f,
};

class std::numeric_limits<unsigned char>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef struct _WRITE_USN_REASON_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long UsnReasonToWrite;
} WRITE_USN_REASON_INPUT, *PWRITE_USN_REASON_INPUT; /* size: 0x0008 */

enum OPERATION_INTERRUPT_RESPONSE_SINGLE
{
  OIRS_ELEVATE = 1,
  OIRS_DELETE = 2,
  OIRS_SKIP = 3,
  OIRS_CANCEL = 4,
  OIRS_RETRY = 5,
  OIRS_YES = 6,
  OIRS_OK = 7,
  OIRS_NO = 8,
  OIRS_KEEPSOURCE = 9,
  OIRS_KEEPDEST = 10,
  OIRS_KEEPBOTH = 11,
  OIRS_KEEPASWORK = 12,
  OIRS_KEEPASPERSONAL = 13,
};

enum SYNCMGR_EVENT_LEVEL
{
  SYNCMGR_EL_INFORMATION = 1,
  SYNCMGR_EL_WARNING = 2,
  SYNCMGR_EL_ERROR = 3,
  SYNCMGR_EL_MAX = 3,
};

typedef struct _tlgDataDescInit<_tlgIndexSequence<15,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14> >
{
} tlgDataDescInit<_tlgIndexSequence<15,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14> >, *PtlgDataDescInit<_tlgIndexSequence<15,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14> >; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IOleClassInfo>
{
  /* 0x0000 */ struct IOleClassInfo* ptr_;
}; /* size: 0x0008 */

enum RESOLUTION_TYPE
{
  RT_REPLACE = 1,
  RT_SKIP = 2,
  RT_DECIDEFOREACH = 3,
  RT_KEEPASWORK = 4,
  RT_KEEPASPERSONAL = 5,
  RT_IGNORE = 6,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibraryChange *>
{
}; /* size: 0x0001 */

enum OPERATION_MODE
{
  OM_PREPARING = 1,
  OM_RUNNING = 2,
  OM_INDETERMINATE = 3,
  OM_INTERRUPTED = 4,
};

enum CHARM_WINDOW_VISIBILITY_BEHAVIOR
{
  CWVB_DEFAULT = 0,
  CWVB_RETAIN_VISIBILITY = 1,
  CWVB_RETAIN_VISIBILITY_ONCE = 2,
  CWVB_RETAIN_FOREGROUND = 3,
};

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>
{
}; /* size: 0x0008 */

typedef struct _KSPIN_LOCK_QUEUE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE* volatile Next;
  /* 0x0008 */ unsigned __int64* volatile Lock;
} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE; /* size: 0x0010 */

typedef struct _KLOCK_QUEUE_HANDLE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE LockQueue;
  /* 0x0010 */ unsigned char OldIrql;
  /* 0x0011 */ char __PADDING__[7];
} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE; /* size: 0x0018 */

enum LoadOrFreeWhat
{
  LoadLibrarySucceeded = 0,
  LoadLibraryFailed = 1,
  CallingFreeLibrary = 2,
};

enum COMMAND_SET
{
  CS_FIRST = 0,
  CS_SORTORDER = 0,
  CS_NAVPANE = 1,
  CS_PREVIEWPANE = 2,
  CS_SHOWHIDE = 3,
  CS_CLIPBOARD = 4,
  CS_VOLUMEADDREMOVE = 5,
  CS_LIBRARYADD = 6,
  CS_LEGACYBARSCHANGED = 7,
  CS_WORKOFFLINE = 8,
  CS_FILTER = 9,
  CS_LAST = 10,
};

enum DISPLAYSETTINGEVENTTYPE
{
  DSET_DISPLAYDATA_LOADED = 1,
  DSET_PATH_CHANGED = 2,
  DSET_VIEW_ORDER_CHANGED = 4,
  DSET_VIEW_POSITION_CHANGED = 256,
  DSET_VIEW_RESOLUTION_CHANGED = 512,
  DSET_VIEW_COLOR_CHANGED = 1024,
  DSET_VIEW_FREQ_CHANGED = 2048,
  DSET_VIEW_ROTATION_CHANGED = 4096,
  DSET_VIEW_PRIMARY_CHANGED = 8192,
  DSET_VIEW_AUTOROTATION_CHANGED = 16384,
  DSET_VIEW_STEREO_CHANGED = 0xffff8000,
  DSET_VIEW_PROPERTY_CHANGED = 0xffffff00,
};

typedef enum _CSVFS_DISK_CONNECTIVITY
{
  CsvFsDiskConnectivityNone = 0,
  CsvFsDiskConnectivityMdsNodeOnly = 1,
  CsvFsDiskConnectivitySubsetOfNodes = 2,
  CsvFsDiskConnectivityAllNodes = 3,
} CSVFS_DISK_CONNECTIVITY, *PCSVFS_DISK_CONNECTIVITY;

class std::_Generic_error_category
{
}; /* size: 0x0010 */

struct std::_Constexpr_immortalize_impl<std::_Generic_error_category>
{
  /* 0x0000 */ class std::_Generic_error_category _Storage;
}; /* size: 0x0010 */

typedef enum __MIDL___MIDL_itf_shpriv_0000_0034_0002
{
  NIEMB_NULL = 0,
  NIEMB_Left = 1,
  NIEMB_Middle = 2,
  NIEMB_Right = 3,
} _MIDL___MIDL_itf_shpriv_0000_0034_0002, *P_MIDL___MIDL_itf_shpriv_0000_0034_0002;

struct tagPARAMDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >
{
}; /* size: 0x0001 */

enum SYNCMGR_PRESENTER_CHOICE
{
  SYNCMGR_PC_NO_CHOICE = 0,
  SYNCMGR_PC_KEEP_ONE = 1,
  SYNCMGR_PC_KEEP_MULTIPLE = 2,
  SYNCMGR_PC_KEEP_RECENT = 3,
  SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4,
  SYNCMGR_PC_SKIP = 5,
};

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,short>
{
}; /* size: 0x0008 */

enum SHELLSEARCHCOMMAND
{
  SSC_SEARCH_EXEC = 0,
  SSC_SEARCH_RETURNKEY = 1,
  SSC_AUTOCOMPLETE_DELETE = 2,
};

class std::numeric_limits<unsigned short>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

enum HOSTED_APP_CHANGED
{
  HAC_STARTED = 0,
  HAC_CLOSED = 1,
  HAC_INTERACTIVE = 2,
  HAC_NON_INTERACTIVE = 3,
};

struct IClipboardBroker
{
}; /* size: 0x0008 */

struct IOleUndoUnit
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IInputStream *>
{
}; /* size: 0x0008 */

enum SEARCH_TYPEAHEAD_ITEM_TYPE
{
  STA_TYPE_SEARCHSUGGESTION = 0,
  STA_TYPE_SEPARATOR = 1,
  STA_TYPE_RESULTSUGGESTION = 2,
};

enum LAST_COPYITEM_ERROR_TYPE
{
  LAST_COPYITEM_ERROR_SRC = 0,
  LAST_COPYITEM_ERROR_DST = 1,
  LAST_COPYITEM_ERROR_NOINFO = 2,
};

struct IXMLDOMEntityReference
{
}; /* size: 0x0008 */

typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER
{
  /* 0x0000 */ unsigned short ChecksumAlgorithm;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ChecksumChunkSizeInBytes;
  /* 0x000c */ unsigned long ClusterSizeInBytes;
} FSCTL_GET_INTEGRITY_INFORMATION_BUFFER, *PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER; /* size: 0x0010 */

struct IEnumOleUndoUnits
{
}; /* size: 0x0008 */

enum tagITEM_CHANGE_TYPE
{
  ICHT_INSERT = 0,
  ICHT_DELETE = 1,
  ICHT_UPDATE = 2,
  ICHT_FILTER = 3,
};

typedef struct _RTL_PROCESS_LOCK_INFORMATION
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ unsigned short Type;
  /* 0x000a */ unsigned short CreatorBackTraceIndex;
  /* 0x000c */ long Padding_325;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ long LockCount;
  /* 0x001c */ unsigned long ContentionCount;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ long RecursionCount;
  /* 0x0028 */ unsigned long NumberOfWaitingShared;
  /* 0x002c */ unsigned long NumberOfWaitingExclusive;
} RTL_PROCESS_LOCK_INFORMATION, *PRTL_PROCESS_LOCK_INFORMATION; /* size: 0x0030 */

enum tagRECYCLEBIN_TYPE
{
  RBT_VOLUME = 0,
  RBT_KNOWNFOLDER = 1,
};

enum TRYHARDERSCOPES
{
  THS_SPECIFIC_LIBRARY = 0,
  THS_ALL_LIBRARIES = 1,
  THS_ALL_USER_LIBRARIES = 2,
  THS_COMPUTER = 3,
  THS_CUSTOM_CANCEL = 4,
  THS_CUSTOM_NAVIGATE = 5,
  THS_INTERNET = 6,
  THS_GP_LIBRARY = 7,
  THS_GP_URL = 8,
  THS_SUBFOLDER = 9,
  THS_FILE_CONTENTS = 10,
  THS_UNUSED = 11,
  THS_OTHER = 12,
  THS_HISTORYVAULT = 13,
};

struct HINSTANCE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IOleDataFormatIterator
{
}; /* size: 0x0008 */

struct IOSTaskCompletion
{
}; /* size: 0x0008 */

enum SHARE_MODE
{
  MODE_SMB = 0,
  MODE_INPLACE = 1,
  MODE_LIBRARY = 2,
  MODE_CLASSIC = 3,
};

typedef union _RTL_IMAGE_MITIGATION_POLICY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 AuditState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 AuditFlag : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 EnableAdditionalAuditingOption : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Reserved : 60; /* bit position: 4 */
    }; /* bitfield */
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 PolicyState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 AlwaysInherit : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 EnableAdditionalPolicyOption : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 AuditReserved : 60; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} RTL_IMAGE_MITIGATION_POLICY, *PRTL_IMAGE_MITIGATION_POLICY; /* size: 0x0008 */

typedef struct _RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY StrictHandleChecks;
} RTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY, *PRTL_IMAGE_MITIGATION_STRICT_HANDLE_CHECK_POLICY; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,unsigned int>
{
}; /* size: 0x0008 */

enum Windows::ApplicationModel::DataTransfer::DataPackageOperation
{
  DataPackageOperation_None = 0,
  DataPackageOperation_Copy = 1,
  DataPackageOperation_Move = 2,
  DataPackageOperation_Link = 4,
};

enum ELEMENTSPYVALUE
{
  ESV_DISPLAYNAME = 0,
  ESV_POINTERVALUE = 1,
  ESV_UICOLLECTION_UIVERSION = 2,
  ESV_UICOLLECTION_DISPLAYNAME = 3,
  ESV_UICOLLECTION_COLLECTION = 4,
};

typedef enum _WAIT_TYPE
{
  WaitAll = 0,
  WaitAny = 1,
  WaitNotification = 2,
  WaitDequeue = 3,
  WaitDpc = 4,
} WAIT_TYPE, *PWAIT_TYPE;

enum PROPCTL_RECT_TYPE
{
  PCRT_MINIMUM = 0,
  PCRT_IDEAL = 1,
};

typedef struct _RTL_HEAP_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned short EntryOverhead;
  /* 0x000e */ unsigned short CreatorBackTraceIndex;
  /* 0x0010 */ unsigned __int64 BytesAllocated;
  /* 0x0018 */ unsigned __int64 BytesCommitted;
  /* 0x0020 */ unsigned long NumberOfTags;
  /* 0x0024 */ unsigned long NumberOfEntries;
  /* 0x0028 */ unsigned long NumberOfPseudoTags;
  /* 0x002c */ unsigned long PseudoTagGranularity;
  /* 0x0030 */ unsigned long Reserved[5];
  /* 0x0044 */ long Padding_326;
  /* 0x0048 */ struct _RTL_HEAP_TAG* Tags;
  /* 0x0050 */ struct _RTL_HEAP_ENTRY* Entries;
  /* 0x0058 */ unsigned __int64 HeapTag;
} RTL_HEAP_INFORMATION, *PRTL_HEAP_INFORMATION; /* size: 0x0060 */

typedef struct _RTL_PROCESS_HEAPS
{
  /* 0x0000 */ unsigned long NumberOfHeaps;
  /* 0x0004 */ long Padding_327;
  /* 0x0008 */ struct _RTL_HEAP_INFORMATION Heaps[1];
} RTL_PROCESS_HEAPS, *PRTL_PROCESS_HEAPS; /* size: 0x0068 */

enum SHELL_SEARCH_BAND_SEARCH_STATE
{
  SSBSS_DEFAULT = 0,
  SSBSS_NEW_PROVIDERS = 1,
  SSBSS_WEB = 2,
  SSBSS_FOLDER = 3,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>
{
}; /* size: 0x0001 */

typedef enum __MIDL___MIDL_itf_winrtfileapi_0000_0036_0001
{
  PIL_MANAGED_BY_APPLICATION = 0,
  PIL_MOST_RECENTLY_USED = 1,
  PIL_SYSTEM = 2,
  PIL_CURRENT_WORKING_DIRECTORY = 3,
} _MIDL___MIDL_itf_winrtfileapi_0000_0036_0001, *P_MIDL___MIDL_itf_winrtfileapi_0000_0036_0001;

struct wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _TP_TIMER* m_ptr;
}; /* size: 0x0008 */

enum VIEW_SETTING_ID
{
  VSIDF_VIEWMODE = 1,
  VSIDF_IMAGESIZE = 2,
  VSIDF_SORTCOLUMNS = 4,
  VSIDF_GROUPBY = 8,
  VSIDF_FOLDERFLAGS = 16,
  VSIDF_SUBSETCOUNT = 32,
  VSIDF_FOLDERTYPE = 64,
  VSIDF_VISIBLECOLUMNSWIDTH = 128,
  VSIDF_VISIBLECOLUMNSSET = 256,
  VSIDF_VISIBLECOLUMNSORDER = 512,
  VSIDF_VISIBLECOLUMNSALL = 896,
};

class wistd::__compressed_pair<unsigned short *,wil::hlocal_secure_deleter>
{
}; /* size: 0x0008 */

struct tagNEWTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char Padding_328[3];
  /* 0x003c */ unsigned long ntmFlags;
  /* 0x0040 */ unsigned int ntmSizeEM;
  /* 0x0044 */ unsigned int ntmCellHeight;
  /* 0x0048 */ unsigned int ntmAvgWidth;
}; /* size: 0x004c */

struct tagNEWTEXTMETRICEXW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICW ntmTm;
  /* 0x004c */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0064 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>
{
}; /* size: 0x0001 */

enum tagLC_ITEM_SET_ORDER
{
  LCISO_DEFAULT = 0,
  LCISO_FOCUSEDFIRST = 1,
  LCISO_VISIBLEORDER = 2,
};

class std::numeric_limits<char16_t>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

enum tagBPASCODE
{
  BPAS_START = 0,
  BPAS_INDETERMINATE = 1,
  BPAS_STOP = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *,1>
{
}; /* size: 0x0008 */

enum GETSORTCOLUMN
{
  GSC_ARRANGEBY = 0,
  GSC_SORTBY = 1,
};

typedef struct _MINIDUMP_MODULE_LIST
{
  /* 0x0000 */ unsigned int NumberOfModules;
  /* 0x0004 */ struct _MINIDUMP_MODULE* Modules /* zero-length array */;
} MINIDUMP_MODULE_LIST, *PMINIDUMP_MODULE_LIST; /* size: 0x0004 */

typedef struct _CTL_ANY_SUBJECT_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
} CTL_ANY_SUBJECT_INFO, *PCTL_ANY_SUBJECT_INFO; /* size: 0x0028 */

enum SHARING_MENU_SHARE_STATE
{
  SHARE_STATE_UNKNOWN = 0,
  SHARE_STATE_NOT_SHAREABLE = 1,
  SHARE_STATE_SHAREABLE = 2,
};

struct tagRAWINPUTDEVICELIST
{
  /* 0x0000 */ void* hDevice;
  /* 0x0008 */ unsigned long dwType;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct tagMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ long Padding_329;
  /* 0x0010 */ struct HMETAFILE__* hMF;
}; /* size: 0x0018 */

enum SELECTIONSTATEVALUE
{
  SSV_ITEM = 0,
  SSV_ISSELECTED = 1,
  SSV_ITEMCOLLECTION = 2,
  SSV_SELECTEDTYPE = 3,
};

enum SYNCMGR_UPDATE_REASON
{
  SYNCMGR_UR_ADDED = 0,
  SYNCMGR_UR_CHANGED = 1,
  SYNCMGR_UR_REMOVED = 2,
  SYNCMGR_UR_MAX = 2,
};

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>;

enum APPLICATION_SEARCH_TYPE
{
  AST_LOCAL = 0,
  AST_GLOBAL = 1,
};

class std::numeric_limits<unsigned __int64>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

enum RenameOperationStatus
{
  ROS_Completed = 0,
  ROS_Interrupted = 1,
};

class Windows::System::UserChangedEventArgs;

union XWinRT::FakeStl::_align_type<double,8>
{
  union
  {
    /* 0x0000 */ double _val;
    /* 0x0000 */ char _pad[8];
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

union XWinRT::FakeStl::_align_type<int,4>
{
  union
  {
    /* 0x0000 */ int _val;
    /* 0x0000 */ char _pad[4];
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

class XWinRT::ComLock
{
  /* 0x0000 */ enum XWinRT::ComLock::Kind kind;
  /* 0x0004 */ long Padding_330;
  union
  {
    /* 0x0008 */ union XWinRT::FakeStl::_align_type<double,8> asSrw;
    /* 0x0008 */ union XWinRT::FakeStl::_align_type<int,4> asSrl;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >* ptr_;
}; /* size: 0x0008 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator
{
  /* 0x0000 */ long Padding_331[8];
  /* 0x0020 */ class XWinRT::ComLock _comLock;
  /* 0x0030 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > _spNextView;
  /* 0x0038 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > _spCurrentIter;
}; /* size: 0x0040 */

struct wil::details::ApiTelemetryLogger::StaticHandle
{
  /* 0x0000 */ const struct _tlgProvider_t* handle;
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

class wil::details::ApiTelemetryLogger
{
  /* 0x0000 */ long Padding_332[6];
  /* 0x0018 */ struct wil::details::ApiTelemetryLogger::StaticHandle m_staticHandle;
  /* 0x0020 */ class wil::details::ApiTelemetryLogger::ApiDataList m_apiDataList;
  /* 0x0030 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> > > m_fireEventThreadPoolTimer;
  /* 0x0038 */ unsigned int m_fireEventDelay;
  /* 0x003c */ const unsigned long c_fireEventDelayLimit;
}; /* size: 0x0040 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<__int64,float>
{
}; /* size: 0x0008 */

enum COleCache::GetExtent::__l2::tagCacheType
{
  CACHETYPE_NONE = 0,
  CACHETYPE_NODATA = 1,
  CACHETYPE_ONSTOP = 2,
  CACHETYPE_ONSAVE = 3,
  CACHETYPE_NORMAL = 4,
};

class std::numeric_limits<long double>
{
  union
  {
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

enum tagDISPLAY_SUPPORTED_ORIENTATIONS
{
  DSO_NONE = 0,
  DSO_0 = 1,
  DSO_90 = 2,
  DSO_180 = 4,
  DSO_270 = 8,
};

class wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_e06473e64d77ff850420a9b624ffc716>;

typedef struct _DCB
{
  /* 0x0000 */ unsigned long DCBlength;
  /* 0x0004 */ unsigned long BaudRate;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long fBinary : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long fParity : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long fOutxCtsFlow : 1; /* bit position: 2 */
    /* 0x0008 */ unsigned long fOutxDsrFlow : 1; /* bit position: 3 */
    /* 0x0008 */ unsigned long fDtrControl : 2; /* bit position: 4 */
    /* 0x0008 */ unsigned long fDsrSensitivity : 1; /* bit position: 6 */
    /* 0x0008 */ unsigned long fTXContinueOnXoff : 1; /* bit position: 7 */
    /* 0x0008 */ unsigned long fOutX : 1; /* bit position: 8 */
    /* 0x0008 */ unsigned long fInX : 1; /* bit position: 9 */
    /* 0x0008 */ unsigned long fErrorChar : 1; /* bit position: 10 */
    /* 0x0008 */ unsigned long fNull : 1; /* bit position: 11 */
    /* 0x0008 */ unsigned long fRtsControl : 2; /* bit position: 12 */
    /* 0x0008 */ unsigned long fAbortOnError : 1; /* bit position: 14 */
    /* 0x0008 */ unsigned long fDummy2 : 17; /* bit position: 15 */
  }; /* bitfield */
  /* 0x000c */ unsigned short wReserved;
  /* 0x000e */ unsigned short XonLim;
  /* 0x0010 */ unsigned short XoffLim;
  /* 0x0012 */ unsigned char ByteSize;
  /* 0x0013 */ unsigned char Parity;
  /* 0x0014 */ unsigned char StopBits;
  /* 0x0015 */ char XonChar;
  /* 0x0016 */ char XoffChar;
  /* 0x0017 */ char ErrorChar;
  /* 0x0018 */ char EofChar;
  /* 0x0019 */ char EvtChar;
  /* 0x001a */ unsigned short wReserved1;
} DCB, *PDCB; /* size: 0x001c */

typedef struct _COMMCONFIG
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned short wVersion;
  /* 0x0006 */ unsigned short wReserved;
  /* 0x0008 */ struct _DCB dcb;
  /* 0x0024 */ unsigned long dwProviderSubType;
  /* 0x0028 */ unsigned long dwProviderOffset;
  /* 0x002c */ unsigned long dwProviderSize;
  /* 0x0030 */ wchar_t wcProviderData[1];
  /* 0x0032 */ char __PADDING__[2];
} COMMCONFIG, *PCOMMCONFIG; /* size: 0x0034 */

typedef struct _NDR64_PROC_FORMAT
{
  /* 0x0000 */ unsigned int Flags;
  /* 0x0004 */ unsigned int StackSize;
  /* 0x0008 */ unsigned int ConstantClientBufferSize;
  /* 0x000c */ unsigned int ConstantServerBufferSize;
  /* 0x0010 */ unsigned short RpcFlags;
  /* 0x0012 */ unsigned short FloatDoubleMask;
  /* 0x0014 */ unsigned short NumberOfParams;
  /* 0x0016 */ unsigned short ExtensionSize;
} NDR64_PROC_FORMAT, *PNDR64_PROC_FORMAT; /* size: 0x0018 */

typedef struct _NDR64_BIND_CONTEXT
{
  /* 0x0000 */ unsigned char HandleType;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short StackOffset;
  /* 0x0004 */ unsigned char RoutineIndex;
  /* 0x0005 */ unsigned char Ordinal;
} NDR64_BIND_CONTEXT, *PNDR64_BIND_CONTEXT; /* size: 0x0006 */

typedef struct _NDR64_BIND_AND_NOTIFY_EXTENSION
{
  /* 0x0000 */ struct _NDR64_BIND_CONTEXT Binding;
  /* 0x0006 */ unsigned short NotifyIndex;
} NDR64_BIND_AND_NOTIFY_EXTENSION, *PNDR64_BIND_AND_NOTIFY_EXTENSION; /* size: 0x0008 */

typedef struct _NDR64_PARAM_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short Reserved : 2; /* bit position: 13 */
    /* 0x0000 */ unsigned short UseCache : 1; /* bit position: 15 */
  }; /* bitfield */
} NDR64_PARAM_FLAGS, *PNDR64_PARAM_FLAGS; /* size: 0x0002 */

typedef struct _NDR64_PARAM_FORMAT
{
  /* 0x0000 */ const void* Type;
  /* 0x0008 */ struct _NDR64_PARAM_FLAGS Attributes;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned int StackOffset;
} NDR64_PARAM_FORMAT, *PNDR64_PARAM_FORMAT; /* size: 0x0010 */

typedef struct __midl_frag214_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag214_t, *P_midl_frag214_t; /* size: 0x0050 */

enum Windows::Foundation::ActivationType
{
  ActivationType_InProcess = 0,
  ActivationType_OutOfProcess = 1,
  ActivationType_RemoteProcess = 2,
};

typedef struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS
{
  /* 0x0000 */ void* KeyHandle;
  /* 0x0008 */ struct _UNICODE_STRING* ValueNamePointer;
  /* 0x0010 */ unsigned long* RequiredLengthPointer;
  /* 0x0018 */ unsigned char* Buffer;
  /* 0x0020 */ unsigned long BufferLength;
  /* 0x0024 */ unsigned long Type;
  /* 0x0028 */ unsigned char* AppendBuffer;
  /* 0x0030 */ unsigned long AppendBufferLength;
  /* 0x0034 */ unsigned char CreateIfDoesntExist;
  /* 0x0035 */ unsigned char TruncateExistingValue;
  /* 0x0036 */ char __PADDING__[2];
} SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS, *PSYSTEM_REGISTRY_APPEND_STRING_PARAMETERS; /* size: 0x0038 */

typedef struct _MINIDUMP_USER_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long UserStreamCount;
  /* 0x0004 */ struct _MINIDUMP_USER_STREAM* UserStreamArray;
} MINIDUMP_USER_STREAM_INFORMATION, *PMINIDUMP_USER_STREAM_INFORMATION; /* size: 0x000c */

typedef struct _PROCESS_MEMBERSHIP_INFORMATION
{
  /* 0x0000 */ unsigned long ServerSiloId;
} PROCESS_MEMBERSHIP_INFORMATION, *PPROCESS_MEMBERSHIP_INFORMATION; /* size: 0x0004 */

typedef enum _BUS_DATA_TYPE
{
  ConfigurationSpaceUndefined = -1,
  Cmos = 0,
  EisaConfiguration = 1,
  Pos = 2,
  CbusConfiguration = 3,
  PCIConfiguration = 4,
  VMEConfiguration = 5,
  NuBusConfiguration = 6,
  PCMCIAConfiguration = 7,
  MPIConfiguration = 8,
  MPSAConfiguration = 9,
  PNPISAConfiguration = 10,
  SgiInternalConfiguration = 11,
  MaximumBusDataType = 12,
} BUS_DATA_TYPE, *PBUS_DATA_TYPE;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_320
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_320, *PTAG_UNNAMED_320;

typedef struct _IMAGEHLP_SYMBOLW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_333;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ wchar_t Name[1];
  /* 0x001e */ char __PADDING__[2];
} IMAGEHLP_SYMBOLW64, *PIMAGEHLP_SYMBOLW64; /* size: 0x0020 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_321
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_321, *PTAG_UNNAMED_321;

class std::length_error
{
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_322
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_322, *PTAG_UNNAMED_322;

struct wil::details::IFailureCallback
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<IInspectable *,1>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_323
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_323, *PTAG_UNNAMED_323;

class COleStaticMutexSem
{
  /* 0x0000 */ enum ComLockOrder _lockOrder;
  /* 0x0001 */ unsigned char _fInitialized;
  /* 0x0002 */ unsigned char _fUseSpincount;
  /* 0x0003 */ char Padding_334;
  /* 0x0004 */ unsigned long _cLocks;
  /* 0x0008 */ unsigned long _dwLine;
  /* 0x000c */ long Padding_335;
  /* 0x0010 */ const char* _pszFile;
  /* 0x0018 */ const char* _pszLockName;
  /* 0x0020 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0048 */

struct Windows::Foundation::IReference<__int64>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_324
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_324, *PTAG_UNNAMED_324;

typedef enum _SECTION_INFORMATION_CLASS
{
  SectionBasicInformation = 0,
  SectionImageInformation = 1,
  SectionRelocationInformation = 2,
  SectionOriginalBaseInformation = 3,
  SectionInternalImageInformation = 4,
  MaxSectionInfoClass = 5,
} SECTION_INFORMATION_CLASS, *PSECTION_INFORMATION_CLASS;

typedef enum _TAG_UNNAMED_325
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_325, *PTAG_UNNAMED_325;

enum tagQueryUpdateAction
{
  QUA_ADD = 0,
  QUA_REMOVE = 1,
  QUA_CHANGE = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IPropertySet *,1>
{
}; /* size: 0x0008 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

enum SYNCMGR_CONFLICT_ITEM_TYPE
{
  SYNCMGR_CIT_UPDATED = 1,
  SYNCMGR_CIT_DELETED = 2,
};

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ wchar_t* InterfaceList;
  /* 0x0020 */ unsigned long InterfaceListSize;
  /* 0x0024 */ unsigned long Flags;
} PLUGPLAY_CONTROL_INTERFACE_LIST_DATA, *PPLUGPLAY_CONTROL_INTERFACE_LIST_DATA; /* size: 0x0028 */

enum tagUISCB_FLAGS
{
  UISCBF_HASITEMSREADY = 1,
  UISCBF_ITEMSREADY = 2,
};

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS
{
  ActivationContextBasicInformation = 1,
  ActivationContextDetailedInformation = 2,
  AssemblyDetailedInformationInActivationContext = 3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 4,
  RunlevelInformationInActivationContext = 5,
  CompatibilityInformationInActivationContext = 6,
  ActivationContextManifestResourceName = 7,
  MaxActivationContextInfoClass = 8,
  AssemblyDetailedInformationInActivationContxt = 3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 4,
} ACTIVATION_CONTEXT_INFO_CLASS, *PACTIVATION_CONTEXT_INFO_CLASS;

typedef struct _RTL_STACK_CONTEXT_ENTRY
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Data;
} RTL_STACK_CONTEXT_ENTRY, *PRTL_STACK_CONTEXT_ENTRY; /* size: 0x0010 */

typedef struct _RTL_STACK_CONTEXT
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ long Padding_336;
  /* 0x0008 */ struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
} RTL_STACK_CONTEXT, *PRTL_STACK_CONTEXT; /* size: 0x0018 */

enum tagAPP_RESOLVER_ITEM_FILTER_FLAGS
{
  ARIFF_NONE = 0,
  ARIFF_REQUIRE_PREVENT_PINNING_NOT_SET = 1,
  ARIFF_REQUIRE_PINNABLE = 2,
};

enum tagExtendedErrorParamTypes
{
  eeptAnsiString = 1,
  eeptUnicodeString = 2,
  eeptLongVal = 3,
  eeptShortVal = 4,
  eeptPointerVal = 5,
  eeptNone = 6,
  eeptBinary = 7,
};

struct tagBinaryParam
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ short Size;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagRPC_EE_INFO_PARAM
{
  /* 0x0000 */ enum tagExtendedErrorParamTypes ParameterType;
  /* 0x0004 */ long Padding_337;
  union
  {
    union
    {
      /* 0x0008 */ char* AnsiString;
      /* 0x0008 */ wchar_t* UnicodeString;
      /* 0x0008 */ long LVal;
      /* 0x0008 */ short SVal;
      /* 0x0008 */ unsigned __int64 PVal;
      /* 0x0008 */ struct tagBinaryParam BVal;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
}; /* size: 0x0018 */

struct tagRPC_EXTENDED_ERROR_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_338;
  /* 0x0008 */ wchar_t* ComputerName;
  /* 0x0010 */ unsigned long ProcessID;
  union
  {
    union
    {
      /* 0x0014 */ struct _SYSTEMTIME SystemTime;
      /* 0x0014 */ struct _FILETIME FileTime;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
  /* 0x0024 */ unsigned long GeneratingComponent;
  /* 0x0028 */ unsigned long Status;
  /* 0x002c */ unsigned short DetectionLocation;
  /* 0x002e */ unsigned short Flags;
  /* 0x0030 */ int NumberOfParameters;
  /* 0x0034 */ long Padding_339;
  /* 0x0038 */ struct tagRPC_EE_INFO_PARAM Parameters[4];
}; /* size: 0x0098 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IWeakReference>
{
  /* 0x0000 */ long Padding_340[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

enum GETPROPERTYSTOREFLAGS
{
  GPS_DEFAULT = 0,
  GPS_HANDLERPROPERTIESONLY = 1,
  GPS_READWRITE = 2,
  GPS_TEMPORARY = 4,
  GPS_FASTPROPERTIESONLY = 8,
  GPS_OPENSLOWITEM = 16,
  GPS_DELAYCREATION = 32,
  GPS_BESTEFFORT = 64,
  GPS_NO_OPLOCK = 128,
  GPS_PREFERQUERYPROPERTIES = 256,
  GPS_EXTRINSICPROPERTIES = 512,
  GPS_EXTRINSICPROPERTIESONLY = 1024,
  GPS_VOLATILEPROPERTIES = 2048,
  GPS_VOLATILEPROPERTIESONLY = 4096,
  GPS_MASK_VALID = 8191,
};

struct Windows::System::IUserChangedEventArgs
{
}; /* size: 0x0008 */

typedef struct _CRYPT_X942_OTHER_INFO
{
  /* 0x0000 */ char* pszContentEncryptionObjId;
  /* 0x0008 */ unsigned char rgbCounter[4];
  /* 0x000c */ unsigned char rgbKeyLength[4];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PubInfo;
} CRYPT_X942_OTHER_INFO, *PCRYPT_X942_OTHER_INFO; /* size: 0x0020 */

typedef struct _MINIDUMP_SYSTEM_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IdleProcessTime;
  /* 0x0008 */ unsigned __int64 IoReadTransferCount;
  /* 0x0010 */ unsigned __int64 IoWriteTransferCount;
  /* 0x0018 */ unsigned __int64 IoOtherTransferCount;
  /* 0x0020 */ unsigned long IoReadOperationCount;
  /* 0x0024 */ unsigned long IoWriteOperationCount;
  /* 0x0028 */ unsigned long IoOtherOperationCount;
  /* 0x002c */ unsigned long AvailablePages;
  /* 0x0030 */ unsigned long CommittedPages;
  /* 0x0034 */ unsigned long CommitLimit;
  /* 0x0038 */ unsigned long PeakCommitment;
  /* 0x003c */ unsigned long PageFaultCount;
  /* 0x0040 */ unsigned long CopyOnWriteCount;
  /* 0x0044 */ unsigned long TransitionCount;
  /* 0x0048 */ unsigned long CacheTransitionCount;
  /* 0x004c */ unsigned long DemandZeroCount;
  /* 0x0050 */ unsigned long PageReadCount;
  /* 0x0054 */ unsigned long PageReadIoCount;
  /* 0x0058 */ unsigned long CacheReadCount;
  /* 0x005c */ unsigned long CacheIoCount;
  /* 0x0060 */ unsigned long DirtyPagesWriteCount;
  /* 0x0064 */ unsigned long DirtyWriteIoCount;
  /* 0x0068 */ unsigned long MappedPagesWriteCount;
  /* 0x006c */ unsigned long MappedWriteIoCount;
  /* 0x0070 */ unsigned long PagedPoolPages;
  /* 0x0074 */ unsigned long NonPagedPoolPages;
  /* 0x0078 */ unsigned long PagedPoolAllocs;
  /* 0x007c */ unsigned long PagedPoolFrees;
  /* 0x0080 */ unsigned long NonPagedPoolAllocs;
  /* 0x0084 */ unsigned long NonPagedPoolFrees;
  /* 0x0088 */ unsigned long FreeSystemPtes;
  /* 0x008c */ unsigned long ResidentSystemCodePage;
  /* 0x0090 */ unsigned long TotalSystemDriverPages;
  /* 0x0094 */ unsigned long TotalSystemCodePages;
  /* 0x0098 */ unsigned long NonPagedPoolLookasideHits;
  /* 0x009c */ unsigned long PagedPoolLookasideHits;
  /* 0x00a0 */ unsigned long AvailablePagedPoolPages;
  /* 0x00a4 */ unsigned long ResidentSystemCachePage;
  /* 0x00a8 */ unsigned long ResidentPagedPoolPage;
  /* 0x00ac */ unsigned long ResidentSystemDriverPage;
  /* 0x00b0 */ unsigned long CcFastReadNoWait;
  /* 0x00b4 */ unsigned long CcFastReadWait;
  /* 0x00b8 */ unsigned long CcFastReadResourceMiss;
  /* 0x00bc */ unsigned long CcFastReadNotPossible;
  /* 0x00c0 */ unsigned long CcFastMdlReadNoWait;
  /* 0x00c4 */ unsigned long CcFastMdlReadWait;
  /* 0x00c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x00cc */ unsigned long CcFastMdlReadNotPossible;
  /* 0x00d0 */ unsigned long CcMapDataNoWait;
  /* 0x00d4 */ unsigned long CcMapDataWait;
  /* 0x00d8 */ unsigned long CcMapDataNoWaitMiss;
  /* 0x00dc */ unsigned long CcMapDataWaitMiss;
  /* 0x00e0 */ unsigned long CcPinMappedDataCount;
  /* 0x00e4 */ unsigned long CcPinReadNoWait;
  /* 0x00e8 */ unsigned long CcPinReadWait;
  /* 0x00ec */ unsigned long CcPinReadNoWaitMiss;
  /* 0x00f0 */ unsigned long CcPinReadWaitMiss;
  /* 0x00f4 */ unsigned long CcCopyReadNoWait;
  /* 0x00f8 */ unsigned long CcCopyReadWait;
  /* 0x00fc */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x0100 */ unsigned long CcCopyReadWaitMiss;
  /* 0x0104 */ unsigned long CcMdlReadNoWait;
  /* 0x0108 */ unsigned long CcMdlReadWait;
  /* 0x010c */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x0110 */ unsigned long CcMdlReadWaitMiss;
  /* 0x0114 */ unsigned long CcReadAheadIos;
  /* 0x0118 */ unsigned long CcLazyWriteIos;
  /* 0x011c */ unsigned long CcLazyWritePages;
  /* 0x0120 */ unsigned long CcDataFlushes;
  /* 0x0124 */ unsigned long CcDataPages;
  /* 0x0128 */ unsigned long ContextSwitches;
  /* 0x012c */ unsigned long FirstLevelTbFills;
  /* 0x0130 */ unsigned long SecondLevelTbFills;
  /* 0x0134 */ unsigned long SystemCalls;
  /* 0x0138 */ unsigned __int64 CcTotalDirtyPages;
  /* 0x0140 */ unsigned __int64 CcDirtyPageThreshold;
  /* 0x0148 */ __int64 ResidentAvailablePages;
  /* 0x0150 */ unsigned __int64 SharedCommittedPages;
} MINIDUMP_SYSTEM_PERFORMANCE_INFORMATION, *PMINIDUMP_SYSTEM_PERFORMANCE_INFORMATION; /* size: 0x0158 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,IInspectable *>
{
}; /* size: 0x0008 */

enum Windows::Foundation::PropertyType
{
  PropertyType_Empty = 0,
  PropertyType_UInt8 = 1,
  PropertyType_Int16 = 2,
  PropertyType_UInt16 = 3,
  PropertyType_Int32 = 4,
  PropertyType_UInt32 = 5,
  PropertyType_Int64 = 6,
  PropertyType_UInt64 = 7,
  PropertyType_Single = 8,
  PropertyType_Double = 9,
  PropertyType_Char16 = 10,
  PropertyType_Boolean = 11,
  PropertyType_String = 12,
  PropertyType_Inspectable = 13,
  PropertyType_DateTime = 14,
  PropertyType_TimeSpan = 15,
  PropertyType_Guid = 16,
  PropertyType_Point = 17,
  PropertyType_Size = 18,
  PropertyType_Rect = 19,
  PropertyType_OtherType = 20,
  PropertyType_UInt8Array = 1025,
  PropertyType_Int16Array = 1026,
  PropertyType_UInt16Array = 1027,
  PropertyType_Int32Array = 1028,
  PropertyType_UInt32Array = 1029,
  PropertyType_Int64Array = 1030,
  PropertyType_UInt64Array = 1031,
  PropertyType_SingleArray = 1032,
  PropertyType_DoubleArray = 1033,
  PropertyType_Char16Array = 1034,
  PropertyType_BooleanArray = 1035,
  PropertyType_StringArray = 1036,
  PropertyType_InspectableArray = 1037,
  PropertyType_DateTimeArray = 1038,
  PropertyType_TimeSpanArray = 1039,
  PropertyType_GuidArray = 1040,
  PropertyType_PointArray = 1041,
  PropertyType_SizeArray = 1042,
  PropertyType_RectArray = 1043,
  PropertyType_OtherTypeArray = 1044,
};

struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0008 */

struct USN_RECORD_EXTENT
{
  /* 0x0000 */ __int64 Offset;
  /* 0x0008 */ __int64 Length;
}; /* size: 0x0010 */

enum Windows::ApplicationModel::Internal::DataTransfer::ClipboardPasteSignalReason
{
  ClipboardPasteSignalReason_None = 0,
  ClipboardPasteSignalReason_KeyCombination = 1,
  ClipboardPasteSignalReason_KeyCombinationHardwareKeyboard = 2,
  ClipboardPasteSignalReason_History = 3,
};

enum Windows::ApplicationModel::Internal::DataTransfer::AppInfoSource
{
  AppInfoSource_Unknown = 0,
  AppInfoSource_ClipboardOwnerProcessId = 1,
  AppInfoSource_ClipobardOwnerHwnd = 2,
  AppInfoSource_ForegroundProcessId = 3,
  AppInfoSource_ForegroundHwnd = 4,
  AppInfoSource_ClipboardOwnerProcessResolver = 5,
  AppInfoSource_ForegroundProcessResolver = 6,
};

typedef enum _TAG_UNNAMED_326
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_326, *PTAG_UNNAMED_326;

struct Windows::Foundation::IAsyncOperationCompletedHandler<bool>
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<void *,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<void,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<void *,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> > __ptr_;
}; /* size: 0x0008 */

class std::chrono::duration<__int64,std::ratio<1,1> >
{
  /* 0x0000 */ __int64 _MyRep;
}; /* size: 0x0008 */

typedef enum _RTL_RXACT_OPERATION
{
  RtlRXactOperationDelete = 1,
  RtlRXactOperationSetValue = 2,
  RtlRXactOperationDelAttribute = 3,
  RtlRXactOperationSetAttribute = 4,
} RTL_RXACT_OPERATION, *PRTL_RXACT_OPERATION;

struct Windows::Foundation::Collections::IMapView<unsigned int,IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IObservableVector_impl<IInspectable *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_327
{
  __the_value = 0,
} TAG_UNNAMED_327, *PTAG_UNNAMED_327;

typedef enum _TAG_UNNAMED_328
{
  __the_value = 0,
} TAG_UNNAMED_328, *PTAG_UNNAMED_328;

struct wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>,wil::process_heap_deleter>::__nat;

typedef struct _MINIDUMP_SYSTEM_MEMORY_INFO_1
{
  /* 0x0000 */ unsigned short Revision;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ struct _MINIDUMP_SYSTEM_BASIC_INFORMATION BasicInfo;
  /* 0x0038 */ struct _MINIDUMP_SYSTEM_FILECACHE_INFORMATION FileCacheInfo;
  /* 0x0074 */ struct _MINIDUMP_SYSTEM_BASIC_PERFORMANCE_INFORMATION BasicPerfInfo;
  /* 0x0094 */ struct _MINIDUMP_SYSTEM_PERFORMANCE_INFORMATION PerfInfo;
} MINIDUMP_SYSTEM_MEMORY_INFO_1, *PMINIDUMP_SYSTEM_MEMORY_INFO_1; /* size: 0x01ec */

struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Storage::KnownFoldersAccessStatus>
{
}; /* size: 0x0008 */

enum POWER_STATE_HANDLER_TYPE
{
  PowerStateSleeping1 = 0,
  PowerStateSleeping2 = 1,
  PowerStateSleeping3 = 2,
  PowerStateSleeping4 = 3,
  PowerStateShutdownOff = 4,
  PowerStateShutdownReset = 5,
  PowerStateSleeping4Firmware = 6,
  PowerStateMaximum = 7,
};

enum utl::float_denorm_style
{
  denorm_indeterminate = -1,
  denorm_absent = 0,
  denorm_present = 1,
};

struct IPolicySet
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_USER_STREAM
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* Buffer;
} MINIDUMP_USER_STREAM, *PMINIDUMP_USER_STREAM; /* size: 0x0010 */

enum utl::ranges::_Impl::_Strategy
{
  _StratNone = 0,
  _StratArray = 1,
  _StratMember = 2,
  _StratAdl = 3,
  _StratDifference = 4,
};

struct IActivationPropertiesIn
{
}; /* size: 0x0008 */

enum utl::_InvokeSyntax
{
  _InvokeSyntaxMfpObject = 0,
  _InvokeSyntaxMfpRefWrap = 1,
  _InvokeSyntaxMfpPointer = 2,
  _InvokeSyntaxMopObject = 3,
  _InvokeSyntaxMopRefWrap = 4,
  _InvokeSyntaxMopPointer = 5,
  _InvokeSyntaxFunctor = 6,
};

enum SYNC_ENGINE_STATE_FLAGS
{
  SESF_NONE = 0,
  SESF_SERVICE_QUOTA_NEARING_LIMIT = 1,
  SESF_SERVICE_QUOTA_EXCEEDED_LIMIT = 2,
  SESF_AUTHENTICATION_ERROR = 4,
  SESF_PAUSED_DUE_TO_METERED_NETWORK = 8,
  SESF_PAUSED_DUE_TO_DISK_SPACE_FULL = 16,
  SESF_PAUSED_DUE_TO_CLIENT_POLICY = 32,
  SESF_PAUSED_DUE_TO_SERVICE_POLICY = 64,
  SESF_SERVICE_UNAVAILABLE = 128,
  SESF_PAUSED_DUE_TO_USER_REQUEST = 256,
  SESF_ALL_FLAGS = 511,
};

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0008 */

typedef struct _EDP_CRED_SVC_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ enum _EDP_CRED_SVC_INFO_TYPE eInfoType;
  union
  {
    struct
    {
      /* 0x0008 */ int bLocked;
      /* 0x000c */ struct _FILETIME ftDueTime;
    } /* size: 0x000c */ DplKeyState;
    struct
    {
      /* 0x0008 */ int bIsActive;
      /* 0x000c */ int bWasRevoked;
      /* 0x0010 */ int bNotFound;
      /* 0x0014 */ struct _FILETIME ftRevocationTime;
    } /* size: 0x0014 */ RevocationInfo;
    struct
    {
      /* 0x0008 */ int bLocked;
    } /* size: 0x0004 */ TestDeviceLockState;
    struct
    {
      /* 0x0008 */ unsigned long ProcessId;
      /* 0x000c */ unsigned long TlsIndex;
    } /* size: 0x0008 */ ProcessTlsInfo;
    struct
    {
      /* 0x0008 */ wchar_t wszSecondaryIdentities[1];
    } /* size: 0x0002 */ EdpSecondaryIdentities;
    struct
    {
      /* 0x0008 */ unsigned __int64 DplUserId;
      /* 0x0010 */ unsigned __int64 DplCredentialId;
      /* 0x0018 */ unsigned char DplKeyDropAnnounced;
      /* 0x0019 */ unsigned char DplIsConsumerCredential;
      /* 0x001a */ char __PADDING__[6];
    } /* size: 0x0018 */ DplUserCredentialInfo;
    struct
    {
      /* 0x0008 */ unsigned long KeyIDOffset;
      /* 0x000c */ unsigned long KeyIDSize;
      /* 0x0010 */ wchar_t wszCredentialId[1];
      /* 0x0012 */ char __PADDING__[2];
    } /* size: 0x000c */ ConsumerDplCredentialCreate;
    struct
    {
      /* 0x0008 */ unsigned long CredentialLevel;
    } /* size: 0x0004 */ ConsumerDplCredentialDelete;
    struct
    {
      /* 0x0008 */ unsigned long cbKeyID;
      /* 0x000c */ unsigned char pbKeyID[1];
      /* 0x000d */ char __PADDING__[3];
    } /* size: 0x0008 */ CredentialKeyID;
    struct
    {
      /* 0x0008 */ unsigned char pbAppIdSalt[32];
      /* 0x0028 */ unsigned char pbAppIdHash[32];
      /* 0x0048 */ unsigned char pbAppKey[32];
      /* 0x0068 */ struct _GUID CryptoSession;
      /* 0x0078 */ unsigned long dwProtectionSequence;
      /* 0x007c */ unsigned long dwKdfVcn;
      /* 0x0080 */ unsigned long cbKeyID;
      /* 0x0084 */ unsigned char pbKeyID[1];
      /* 0x0085 */ char __PADDING__[3];
    } /* size: 0x0080 */ AppKeyCacheInfo;
  }; /* size: 0x0080 */
} EDP_CRED_SVC_INFO, *PEDP_CRED_SVC_INFO; /* size: 0x0088 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDragDropExtensionForOLE>* ptr_;
}; /* size: 0x0008 */

enum FLYOUT_PLACEMENT
{
  FP_DEFAULT = 0,
  FP_ABOVE = 1,
  FP_BELOW = 2,
  FP_LEFT = 3,
  FP_RIGHT = 4,
};

struct CDdeObject::CUnknownImpl
{
  /* 0x0000 */ long Padding_341[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

enum EC_HOST_UI_MODE
{
  ECHUIM_DESKTOP = 0,
  ECHUIM_IMMERSIVE = 1,
  ECHUIM_SYSTEM_LAUNCHER = 2,
};

typedef struct __std_type_info_data
{
  /* 0x0000 */ const char* _UndecoratedName;
  /* 0x0008 */ const char _DecoratedName[1];
  /* 0x0009 */ char __PADDING__[7];
} _std_type_info_data, *P_std_type_info_data; /* size: 0x0010 */

class type_info
{
  /* 0x0000 */ long Padding_342[2];
  /* 0x0008 */ struct __std_type_info_data _Data;
}; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA, *PPLUGPLAY_CONTROL_DEVICE_CONTROL_DATA; /* size: 0x0018 */

typedef struct _IMAGEHLP_MODULE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_343;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ char ModuleName[32];
  /* 0x0044 */ char ImageName[256];
  /* 0x0144 */ char LoadedImageName[256];
  /* 0x0244 */ char LoadedPdbName[256];
  /* 0x0344 */ unsigned long CVSig;
  /* 0x0348 */ char CVData[780];
  /* 0x0654 */ unsigned long PdbSig;
  /* 0x0658 */ struct _GUID PdbSig70;
  /* 0x0668 */ unsigned long PdbAge;
  /* 0x066c */ int PdbUnmatched;
  /* 0x0670 */ int DbgUnmatched;
  /* 0x0674 */ int LineNumbers;
  /* 0x0678 */ int GlobalSymbols;
  /* 0x067c */ int TypeInfo;
  /* 0x0680 */ int SourceIndexed;
  /* 0x0684 */ int Publics;
  /* 0x0688 */ unsigned long MachineType;
  /* 0x068c */ unsigned long Reserved;
} IMAGEHLP_MODULE64, *PIMAGEHLP_MODULE64; /* size: 0x0690 */

typedef struct _IMAGEHLP_MODULE64_EX
{
  /* 0x0000 */ struct _IMAGEHLP_MODULE64 Module;
  /* 0x0690 */ unsigned long RegionFlags;
  /* 0x0694 */ long __PADDING__[1];
} IMAGEHLP_MODULE64_EX, *PIMAGEHLP_MODULE64_EX; /* size: 0x0698 */

typedef enum _FINDEX_SEARCH_OPS
{
  FindExSearchNameMatch = 0,
  FindExSearchLimitToDirectories = 1,
  FindExSearchLimitToDevices = 2,
  FindExSearchMaxSearchOp = 3,
} FINDEX_SEARCH_OPS, *PFINDEX_SEARCH_OPS;

typedef enum _SIGDN
{
  SIGDN_NORMALDISPLAY = 0,
  SIGDN_PARENTRELATIVEPARSING = -2147385343,
  SIGDN_DESKTOPABSOLUTEPARSING = -2147319808,
  SIGDN_PARENTRELATIVEEDITING = -2147282943,
  SIGDN_DESKTOPABSOLUTEEDITING = -2147172352,
  SIGDN_FILESYSPATH = -2147123200,
  SIGDN_URL = -2147057664,
  SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743,
  SIGDN_PARENTRELATIVE = -2146959359,
  SIGDN_PARENTRELATIVEFORUI = -2146877439,
} SIGDN, *PSIGDN;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::AgileRef const >
{
}; /* size: 0x0008 */

enum APPDOCLISTTYPE
{
  ADLT_RECENT = 0,
  ADLT_FREQUENT = 1,
};

typedef struct _MEMORY_COMBINE_INFORMATION_EX2
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 PagesCombined;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long Padding_344;
  /* 0x0018 */ void* ProcessHandle;
} MEMORY_COMBINE_INFORMATION_EX2, *PMEMORY_COMBINE_INFORMATION_EX2; /* size: 0x0020 */

enum CPVIEW
{
  CPVIEW_CLASSIC = 0,
  CPVIEW_ALLITEMS = 0,
  CPVIEW_CATEGORY = 1,
  CPVIEW_HOME = 1,
};

struct XMLDOMDocumentEvents
{
}; /* size: 0x0008 */

typedef enum _REFS_DEALLOCATE_RANGES_ALLOCATOR
{
  REFS_DEALLOCATE_RANGES_ALLOCATOR_NONE = 0,
  REFS_DEALLOCATE_RANGES_ALLOCATOR_SAA = 1,
  REFS_DEALLOCATE_RANGES_ALLOCATOR_CAA = 2,
  REFS_DEALLOCATE_RANGES_ALLOCATOR_MAA = 3,
} REFS_DEALLOCATE_RANGES_ALLOCATOR, *PREFS_DEALLOCATE_RANGES_ALLOCATOR;

struct IComObjIdentity
{
}; /* size: 0x0008 */

enum tagBANDSITECID
{
  BSID_BANDADDED = 0,
  BSID_BANDREMOVED = 1,
};

enum PLACEHOLDER_STATES
{
  PS_NONE = 0,
  PS_MARKED_FOR_OFFLINE_AVAILABILITY = 1,
  PS_FULL_PRIMARY_STREAM_AVAILABLE = 2,
  PS_CREATE_FILE_ACCESSIBLE = 4,
  PS_CLOUDFILE_PLACEHOLDER = 8,
  PS_DEFAULT = 7,
  PS_ALL = 15,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> const >;

enum OfflineFolderStatus
{
  OFS_INACTIVE = -1,
  OFS_ONLINE = 0,
  OFS_OFFLINE = 1,
  OFS_SERVERBACK = 2,
  OFS_DIRTYCACHE = 3,
};

typedef enum __vc_attributes::pointer_defaultAttribute::type_e
{
  ptr = 0,
  ref = 1,
  unique = 2,
} _vc_attributes::pointer_defaultAttribute::type_e, *P_vc_attributes::pointer_defaultAttribute::type_e;

struct tagMsgRoutingInfo
{
  /* 0x0000 */ unsigned int SystemProcessID;
  /* 0x0004 */ unsigned int SystemThreadID;
  /* 0x0008 */ unsigned __int64 Identity;
  /* 0x0010 */ unsigned __int64 ItemID;
  /* 0x0018 */ struct _GUID ConnectionGuid;
}; /* size: 0x0028 */

typedef struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long PageRelativeOffset : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned long IndirectCall : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned long IATIndex : 19; /* bit position: 13 */
  }; /* bitfield */
} IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION, *PIMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION; /* size: 0x0004 */

enum ASSOCCLASS
{
  ASSOCCLASS_SHELL_KEY = 0,
  ASSOCCLASS_PROGID_KEY = 1,
  ASSOCCLASS_PROGID_STR = 2,
  ASSOCCLASS_CLSID_KEY = 3,
  ASSOCCLASS_CLSID_STR = 4,
  ASSOCCLASS_APP_KEY = 5,
  ASSOCCLASS_APP_STR = 6,
  ASSOCCLASS_SYSTEM_STR = 7,
  ASSOCCLASS_FOLDER = 8,
  ASSOCCLASS_STAR = 9,
  ASSOCCLASS_FIXED_PROGID_STR = 10,
  ASSOCCLASS_PROTOCOL_STR = 11,
};

enum LIBRARYOPTIONFLAGS
{
  LOF_DEFAULT = 0,
  LOF_PINNEDTONAVPANE = 1,
  LOF_MASK_ALL = 1,
};

struct std::chrono::steady_clock
{
  /* 0x0000 */ const BOOL is_steady;
}; /* size: 0x0001 */

struct wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >::__nat;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::StorageItemThumbnail *,Windows::Storage::Streams::IRandomAccessStreamWithContentType *> >
{
}; /* size: 0x0008 */

enum Windows::Foundation::Diagnostics::CausalityTraceLevel
{
  CausalityTraceLevel_Required = 0,
  CausalityTraceLevel_Important = 1,
  CausalityTraceLevel_Verbose = 2,
};

struct tagPOINTER_DEVICE_PROPERTY
{
  /* 0x0000 */ int logicalMin;
  /* 0x0004 */ int logicalMax;
  /* 0x0008 */ int physicalMin;
  /* 0x000c */ int physicalMax;
  /* 0x0010 */ unsigned int unit;
  /* 0x0014 */ unsigned int unitExponent;
  /* 0x0018 */ unsigned short usagePageId;
  /* 0x001a */ unsigned short usageId;
}; /* size: 0x001c */

typedef enum _LDR_HOT_PATCH_STATE
{
  LdrHotPatchBaseImage = 0,
  LdrHotPatchNotApplied = 1,
  LdrHotPatchAppliedReverse = 2,
  LdrHotPatchAppliedForward = 3,
  LdrHotPatchFailedToPatch = 4,
  LdrHotPatchStateMax = 5,
} LDR_HOT_PATCH_STATE, *PLDR_HOT_PATCH_STATE;

typedef struct _TXFS_GET_METADATA_INFO_OUT
{
  struct
  {
    /* 0x0000 */ __int64 LowPart;
    /* 0x0008 */ __int64 HighPart;
  } /* size: 0x0010 */ TxfFileId;
  /* 0x0010 */ struct _GUID LockingTransaction;
  /* 0x0020 */ unsigned __int64 LastLsn;
  /* 0x0028 */ unsigned long TransactionState;
  /* 0x002c */ long __PADDING__[1];
} TXFS_GET_METADATA_INFO_OUT, *PTXFS_GET_METADATA_INFO_OUT; /* size: 0x0030 */

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int iDeltaCrlIndicator;
  /* 0x0008 */ struct _FILETIME* pftCacheResync;
  /* 0x0010 */ struct _FILETIME* pLastSyncTime;
  /* 0x0018 */ struct _FILETIME* pMaxAgeTime;
  /* 0x0020 */ struct _CERT_REVOCATION_CHAIN_PARA* pChainPara;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* pDeltaCrlIndicator;
} CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO, *PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO; /* size: 0x0030 */

typedef struct _RPC_SECURITY_QOS_V2_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_345;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
} RPC_SECURITY_QOS_V2_W, *PRPC_SECURITY_QOS_V2_W; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_329
{
  None = 0,
  Relative = 1,
  Ids = 2,
  Absolute = 3,
} TAG_UNNAMED_329, *PTAG_UNNAMED_329;

typedef struct _SERVICE_TIMECHANGE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER liNewTime;
  /* 0x0008 */ union _LARGE_INTEGER liOldTime;
} SERVICE_TIMECHANGE_INFO, *PSERVICE_TIMECHANGE_INFO; /* size: 0x0010 */

enum PO_WAKE_SOURCE_TYPE
{
  DeviceWakeSourceType = 0,
  FixedWakeSourceType = 1,
  TimerWakeSourceType = 2,
  TimerPresumedWakeSourceType = 3,
  InternalWakeSourceType = 4,
};

typedef struct _PO_WAKE_SOURCE_HEADER
{
  /* 0x0000 */ enum PO_WAKE_SOURCE_TYPE Type;
  /* 0x0004 */ unsigned long Size;
} PO_WAKE_SOURCE_HEADER, *PPO_WAKE_SOURCE_HEADER; /* size: 0x0008 */

enum PO_FIXED_WAKE_SOURCE_TYPE
{
  FixedWakeSourcePowerButton = 0,
  FixedWakeSourceSleepButton = 1,
  FixedWakeSourceRtc = 2,
  FixedWakeSourceDozeToHibernate = 3,
};

typedef struct _PO_WAKE_SOURCE_FIXED
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
} PO_WAKE_SOURCE_FIXED, *PPO_WAKE_SOURCE_FIXED; /* size: 0x000c */

typedef struct _MCGEN_TRACE_CONTEXT
{
  /* 0x0000 */ unsigned __int64 RegistrationHandle;
  /* 0x0008 */ unsigned __int64 Logger;
  /* 0x0010 */ unsigned __int64 MatchAnyKeyword;
  /* 0x0018 */ unsigned __int64 MatchAllKeyword;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long IsEnabled;
  /* 0x0028 */ unsigned char Level;
  /* 0x0029 */ unsigned char Reserve;
  /* 0x002a */ unsigned short EnableBitsCount;
  /* 0x002c */ long Padding_346;
  /* 0x0030 */ unsigned long* EnableBitMask;
  /* 0x0038 */ const unsigned __int64* EnableKeyWords;
  /* 0x0040 */ const unsigned char* EnableLevel;
} MCGEN_TRACE_CONTEXT, *PMCGEN_TRACE_CONTEXT; /* size: 0x0048 */

struct USN_JOURNAL_DATA_V1
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
  /* 0x0038 */ unsigned short MinSupportedMajorVersion;
  /* 0x003a */ unsigned short MaxSupportedMajorVersion;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

enum wil::ReportingKind
{
  None = 0,
  UniqueUsage = 1,
  UniqueOpportunity = 2,
  DeviceUsage = 3,
  DeviceOpportunity = 4,
  TotalDuration = 5,
  PausedDuration = 6,
};

enum CreatePackageDependencyOptions
{
  CreatePackageDependencyOptions_None = 0,
  CreatePackageDependencyOptions_DoNotVerifyDependencyResolution = 1,
  CreatePackageDependencyOptions_ScopeIsSystem = 2,
};

struct IDropSourceNotify
{
}; /* size: 0x0008 */

enum RoVariant::States
{
  StateIsNull = 0,
  StateIsObjNoRef = 1,
  StateIsObj = 3,
  StateIsPV = 7,
};

typedef enum _SYSTEM_IOMMU_STATE
{
  IommuStateBlock = 0,
  IommuStateUnblock = 1,
} SYSTEM_IOMMU_STATE, *PSYSTEM_IOMMU_STATE;

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IDragOperationInternal>
{
  /* 0x0000 */ long Padding_347[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef enum _HARDWARE_COUNTER_TYPE
{
  PMCCounter = 0,
  MaxHardwareCounterType = 1,
} HARDWARE_COUNTER_TYPE, *PHARDWARE_COUNTER_TYPE;

typedef enum _AUDIT_EVENT_TYPE
{
  AuditEventObjectAccess = 0,
  AuditEventDirectoryServiceAccess = 1,
} AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;

typedef enum _VRF_RULE_CLASS_ID
{
  DifPluginSpecialPool = 0,
  DifPluginIrqlRuleClass = 1,
  VrfAllocationFailuresRuleClass = 2,
  DifPluginPoolTracking = 3,
  DifPluginIoRuleClass = 4,
  DifPluginDeadlock = 5,
  VrfEnhancedIORuleClass = 6,
  DifPluginDmaRuleClass = 7,
  DifPluginSecurity = 8,
  VrfForcePendingIORequestRuleClass = 9,
  VrfIRPTrackingRuleClass = 10,
  DifPluginMiscellaneous = 11,
  VrfMoreDebuggingRuleClass = 12,
  VrfMDLInvariantStackRuleClass = 13,
  VrfMDLInvariantDriverRuleClass = 14,
  DifPluginPowerDelayFuzzing = 15,
  VrfPortMiniportRuleClass = 16,
  DifPluginDdiStandard = 17,
  DifPluginAutoFail = 18,
  DifPluginDdiStateful = 19,
  VrfRuleClassBase = 20,
  VrfNdisWifiRuleClass = 21,
  DifPluginDriverLogging = 22,
  DifPluginSyncDelayFuzzing = 23,
  VrfVMSwitchingRuleClass = 24,
  VrfCodeIntegrityRuleClass = 25,
  VrfBelow4GBAllocationRuleClass = 26,
  VrfProcessorBranchTraceRuleClass = 27,
  VrfAdvancedMMRuleClass = 28,
  VrfExtendingXDVTimeLimit = 29,
  VrfSystemBIOSRuleClass = 30,
  VrfHardwareRuleClass = 31,
  DifPluginDriverIsolation = 32,
  DifPluginWdfRuleClass = 33,
  DifPluginDdiMoreirql = 34,
  DifPluginMode = 35,
  ReservedForDVRF36 = 36,
  DifPluginTest = 37,
  DifPluginInfoDisclosureIRPRule = 38,
  DifPluginLwSP = 39,
  DifPluginAvxCorruption = 40,
  DifPluginAccessModeMismatch = 41,
  ReservedForDVRF42 = 42,
  ReservedForDVRF43 = 43,
  ReservedForDVRF44 = 44,
  ReservedForDVRF45 = 45,
  ReservedForDVRF46 = 46,
  ReservedForDVRF47 = 47,
  ReservedForDVRF48 = 48,
  ReservedForDVRF49 = 49,
  ReservedForDVRF50 = 50,
  ReservedForDVRF51 = 51,
  ReservedForDVRF52 = 52,
  ReservedForDVRF53 = 53,
  ReservedForDVRF54 = 54,
  ReservedForDVRF55 = 55,
  ReservedForDVRF56 = 56,
  ReservedForDVRF57 = 57,
  ReservedForDVRF58 = 58,
  ReservedForDVRF59 = 59,
  ReservedForDVRF60 = 60,
  ReservedForDVRF61 = 61,
  ReservedForDVRF62 = 62,
  ReservedForDVRF63 = 63,
  VrfRuleClassSizeMax = 64,
} VRF_RULE_CLASS_ID, *PVRF_RULE_CLASS_ID;

typedef enum _SYMBOLIC_LINK_INFO_CLASS
{
  SymbolicLinkGlobalInformation = 1,
  SymbolicLinkAccessMask = 2,
} SYMBOLIC_LINK_INFO_CLASS, *PSYMBOLIC_LINK_INFO_CLASS;

typedef struct _NETCONNECTINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwSpeed;
  /* 0x000c */ unsigned long dwDelay;
  /* 0x0010 */ unsigned long dwOptDataSize;
} NETCONNECTINFOSTRUCT, *PNETCONNECTINFOSTRUCT; /* size: 0x0014 */

struct IDirectWriterLock
{
}; /* size: 0x0008 */

enum tagDCOM_CALL_STATE
{
  DCOM_NONE = 0,
  DCOM_CALL_COMPLETE = 1,
  DCOM_CALL_CANCELED = 2,
};

enum tagEMFWRITETYPE
{
  WRITE_AS_WMF = 13,
  WRITE_AS_EMF = 17,
};

enum CWMO_FLAGS
{
  CWMO_DEFAULT = 0,
  CWMO_DISPATCH_CALLS = 1,
  CWMO_DISPATCH_WINDOW_MESSAGES = 2,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_LOGGING_ENTRY
{
  /* 0x0000 */ unsigned long Reason;
  /* 0x0004 */ unsigned long States;
} SYSTEM_POWER_LOGGING_ENTRY, *PSYSTEM_POWER_LOGGING_ENTRY; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<unsigned __int64>
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<unsigned short *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<unsigned short *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > __ptr_;
}; /* size: 0x0008 */

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
{
  ToleranceIntervalShort = 1,
  ToleranceIntervalMedium = 2,
  ToleranceIntervalLong = 3,
} JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL, *PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;

enum RTL_DISK_SPACE_POLICY
{
  RtlDiskSpacePolicyVeryLow = 5,
  RtlDiskSpacePolicyLow = 10,
  RtlDiskSpacePolicyBelowNormal = 15,
  RtlDiskSpacePolicyNormal = 20,
};

typedef struct _SYSDBG_BUS_DATA
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ long Padding_348;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _BUS_DATA_TYPE BusDataType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long SlotNumber;
} SYSDBG_BUS_DATA, *PSYSDBG_BUS_DATA; /* size: 0x0020 */

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS
{
  AlpcMessageSidInformation = 0,
  AlpcMessageTokenModifiedIdInformation = 1,
  AlpcMessageDirectStatusInformation = 2,
  AlpcMessageHandleInformation = 3,
} ALPC_MESSAGE_INFORMATION_CLASS, *PALPC_MESSAGE_INFORMATION_CLASS;

typedef enum _IO_SESSION_EVENT
{
  IoSessionEventIgnore = 0,
  IoSessionEventCreated = 1,
  IoSessionEventTerminated = 2,
  IoSessionEventConnected = 3,
  IoSessionEventDisconnected = 4,
  IoSessionEventLogon = 5,
  IoSessionEventLogoff = 6,
  IoSessionEventMax = 7,
} IO_SESSION_EVENT, *PIO_SESSION_EVENT;

class std::domain_error
{
}; /* size: 0x0010 */

typedef enum _FILE_STORAGE_TIER_MEDIA_TYPE
{
  FileStorageTierMediaTypeUnspecified = 0,
  FileStorageTierMediaTypeDisk = 1,
  FileStorageTierMediaTypeSsd = 2,
  FileStorageTierMediaTypeScm = 4,
  FileStorageTierMediaTypeMax = 5,
} FILE_STORAGE_TIER_MEDIA_TYPE, *PFILE_STORAGE_TIER_MEDIA_TYPE;

typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int SizeOfNativeDescriptor;
  /* 0x000c */ unsigned int SizeOfFunctionEntry;
  /* 0x0010 */ unsigned int NumberOfDescriptors;
  /* 0x0014 */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_STREAM, *PMINIDUMP_FUNCTION_TABLE_STREAM; /* size: 0x0018 */

class wil::details::<lambda_d122bb6e934ec4d461e1203d27396b90>
{
}; /* size: 0x0001 */

typedef enum _FILE_STORAGE_TIER_CLASS
{
  FileStorageTierClassUnspecified = 0,
  FileStorageTierClassCapacity = 1,
  FileStorageTierClassPerformance = 2,
  FileStorageTierClassMax = 3,
} FILE_STORAGE_TIER_CLASS, *PFILE_STORAGE_TIER_CLASS;

typedef enum _SYSTEM_POWER_STATE
{
  PowerSystemUnspecified = 0,
  PowerSystemWorking = 1,
  PowerSystemSleeping1 = 2,
  PowerSystemSleeping2 = 3,
  PowerSystemSleeping3 = 4,
  PowerSystemHibernate = 5,
  PowerSystemShutdown = 6,
  PowerSystemMaximum = 7,
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

struct ComVerifierSettings::ComVerifierSettingsState
{
  /* 0x0000 */ BOOL _fCallBacksInitialized;
  /* 0x0001 */ BOOL _fEnableDllMainChecks;
  /* 0x0002 */ BOOL _fEnableBreakOnException;
  /* 0x0003 */ BOOL _fEnableVerifyLocks;
  /* 0x0004 */ BOOL _fEnableVerifyThreadState;
  /* 0x0005 */ BOOL _fEnableVerifyChannelState;
  /* 0x0006 */ BOOL _fVerifyOleInitCalled;
  /* 0x0007 */ BOOL _fEnableVerifySecurity;
  /* 0x0008 */ BOOL _fEnableVerifyProxies;
  /* 0x0009 */ BOOL _fEnableVerifyClassFactory;
  /* 0x000a */ BOOL _fEnableObjectTracking;
  /* 0x000b */ BOOL _fEnableVTBLTracking;
  /* 0x000c */ BOOL _fEnableSecBlanketChecks;
  /* 0x000d */ BOOL _fEnableAggressiveDllUnload;
  /* 0x000e */ BOOL _fEnablePrematureStubRundownCheck;
  /* 0x000f */ BOOL _fEnableWinrtAsyncPatternContractChecks;
  /* 0x0010 */ BOOL _fEnableWinrtAsyncLearningModeChecks;
  /* 0x0011 */ BOOL _fUseSlowStackTraces;
  /* 0x0012 */ BOOL _fCheckUnrecommendedUsageFromAPC;
  /* 0x0013 */ BOOL _fCheckMarshalingToUntrustedProcess;
  /* 0x0014 */ BOOL _fCheckClassicMarshalingToUntrustedProcess;
  /* 0x0015 */ BOOL _fVerifyFatalExceptionHandlingDisabled;
  /* 0x0016 */ char Padding_349[2];
  /* 0x0018 */ unsigned long _ulMaxStackTracesPerThread;
  /* 0x001c */ unsigned long _ulMaxStackTracesPerProcess;
  /* 0x0020 */ unsigned long _dwAggressiveDllUnloadPeriod;
  /* 0x0024 */ long Padding_350;
  /* 0x0028 */ void* _pfnVerifierIsDllEntryActive /* function */;
  /* 0x0030 */ void* _pfnVerifierIsCurrentThreadHoldingLocks /* function */;
  /* 0x0038 */ void* _pfnVerifierAddFreeMemoryCallback /* function */;
  /* 0x0040 */ void* _pfnVerifierDeleteFreeMemoryCallback /* function */;
  /* 0x0048 */ void* _pfnVerifierGetPropertyValueByName /* function */;
}; /* size: 0x0050 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessPatternTbl> >
{
}; /* size: 0x0008 */

enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE
{
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MAXVERSIONTESTED = 3,
};

typedef enum _THDTYPE
{
  THDTYPE_BLOCKMESSAGES = 0,
  THDTYPE_PROCESSMESSAGES = 1,
} THDTYPE, *PTHDTYPE;

struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::KnownFoldersAccessStatus>
{
}; /* size: 0x0008 */

typedef enum _ERROR_SEVERITY_VALUE
{
  ErrorRecoverable = 0,
  ErrorFatal = 1,
  ErrorCorrected = 2,
  ErrorOthers = 3,
} ERROR_SEVERITY_VALUE, *PERROR_SEVERITY_VALUE;

class CDragDropBroker::RegisterDropTarget::__l11::<lambda_50ee3ecffe8efbd463e6350e39328809>
{
  /* 0x0000 */ class Windows::Internal::GitPtr& GITDropTarget;
  /* 0x0008 */ struct HWND__*& hwnd;
}; /* size: 0x0010 */

enum Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemSource
{
  ClipboardHistoryItemSource_Local = 0,
  ClipboardHistoryItemSource_Cloud = 1,
};

class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindClose> > >
{
}; /* size: 0x0008 */

enum PackageOrigin
{
  PackageOrigin_Unknown = 0,
  PackageOrigin_Unsigned = 1,
  PackageOrigin_Inbox = 2,
  PackageOrigin_Store = 3,
  PackageOrigin_DeveloperUnsigned = 4,
  PackageOrigin_DeveloperSigned = 5,
  PackageOrigin_LineOfBusiness = 6,
};

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >
{
}; /* size: 0x0008 */

enum Windows::ApplicationModel::Internal::DataTransfer::ClipboardItemSaveResult
{
  ClipboardItemSaveResult_Unknown = 0,
  ClipboardItemSaveResult_Success = 1,
  ClipboardItemSaveResult_ExceedsSize = 2,
  ClipboardItemSaveResult_EnterpriseProtected = 3,
  ClipboardItemSaveResult_NotEligible = 4,
  ClipboardItemSaveResult_NoSupportedFormats = 5,
  ClipboardItemSaveResult_NoAccount = 6,
  ClipboardItemSaveResult_Throttled = 7,
};

typedef struct _OUTPUT_DEBUG_STRING_INFO
{
  /* 0x0000 */ char* lpDebugStringData;
  /* 0x0008 */ unsigned short fUnicode;
  /* 0x000a */ unsigned short nDebugStringLength;
  /* 0x000c */ long __PADDING__[1];
} OUTPUT_DEBUG_STRING_INFO, *POUTPUT_DEBUG_STRING_INFO; /* size: 0x0010 */

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS
{
  ResourceManagerBasicInformation = 0,
  ResourceManagerCompletionInformation = 1,
} RESOURCEMANAGER_INFORMATION_CLASS, *PRESOURCEMANAGER_INFORMATION_CLASS;

class XLOCK
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION critSec;
  /* 0x0028 */ int m_fCsInitialized;
}; /* size: 0x0030 */

class OPAQUE_HANDLE<1>
{
  /* 0x0000 */ unsigned __int64 m_h;
}; /* size: 0x0008 */

struct XSLOCK::OWNERENTRY
{
  /* 0x0000 */ class OPAQUE_HANDLE<1> dwThreadId;
  union
  {
    /* 0x0008 */ long ownerCount;
    /* 0x0008 */ unsigned long tableSize;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class EVENT
{
  /* 0x0000 */ void* m_hEvent;
}; /* size: 0x0008 */

class SEMAPHORE
{
  /* 0x0000 */ void* m_hSem;
}; /* size: 0x0008 */

class XSLOCK
{
  /* 0x0000 */ class XLOCK m_lock;
  /* 0x0030 */ unsigned long m_cOwner;
  /* 0x0034 */ long Padding_351;
  /* 0x0038 */ struct XSLOCK::OWNERENTRY m_ownerThreads[2];
  /* 0x0058 */ struct XSLOCK::OWNERENTRY* m_ownerTable;
  /* 0x0060 */ class EVENT m_eventExclusiveWaiters;
  /* 0x0068 */ class SEMAPHORE m_semaphoreSharedWaiters;
  /* 0x0070 */ unsigned long m_cExclusiveWaiters;
  /* 0x0074 */ unsigned long m_cSharedWaiters;
  /* 0x0078 */ int m_isOwnedExclusive;
}; /* size: 0x0080 */

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>
{
  /* 0x0000 */ long Padding_352[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

typedef struct _SYSTEM_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleProcessTime;
  /* 0x0008 */ union _LARGE_INTEGER IoReadTransferCount;
  /* 0x0010 */ union _LARGE_INTEGER IoWriteTransferCount;
  /* 0x0018 */ union _LARGE_INTEGER IoOtherTransferCount;
  /* 0x0020 */ unsigned long IoReadOperationCount;
  /* 0x0024 */ unsigned long IoWriteOperationCount;
  /* 0x0028 */ unsigned long IoOtherOperationCount;
  /* 0x002c */ unsigned long AvailablePages;
  /* 0x0030 */ unsigned long CommittedPages;
  /* 0x0034 */ unsigned long CommitLimit;
  /* 0x0038 */ unsigned long PeakCommitment;
  /* 0x003c */ unsigned long PageFaultCount;
  /* 0x0040 */ unsigned long CopyOnWriteCount;
  /* 0x0044 */ unsigned long TransitionCount;
  /* 0x0048 */ unsigned long CacheTransitionCount;
  /* 0x004c */ unsigned long DemandZeroCount;
  /* 0x0050 */ unsigned long PageReadCount;
  /* 0x0054 */ unsigned long PageReadIoCount;
  /* 0x0058 */ unsigned long CacheReadCount;
  /* 0x005c */ unsigned long CacheIoCount;
  /* 0x0060 */ unsigned long DirtyPagesWriteCount;
  /* 0x0064 */ unsigned long DirtyWriteIoCount;
  /* 0x0068 */ unsigned long MappedPagesWriteCount;
  /* 0x006c */ unsigned long MappedWriteIoCount;
  /* 0x0070 */ unsigned long PagedPoolPages;
  /* 0x0074 */ unsigned long NonPagedPoolPages;
  /* 0x0078 */ unsigned long PagedPoolAllocs;
  /* 0x007c */ unsigned long PagedPoolFrees;
  /* 0x0080 */ unsigned long NonPagedPoolAllocs;
  /* 0x0084 */ unsigned long NonPagedPoolFrees;
  /* 0x0088 */ unsigned long FreeSystemPtes;
  /* 0x008c */ unsigned long ResidentSystemCodePage;
  /* 0x0090 */ unsigned long TotalSystemDriverPages;
  /* 0x0094 */ unsigned long TotalSystemCodePages;
  /* 0x0098 */ unsigned long NonPagedPoolLookasideHits;
  /* 0x009c */ unsigned long PagedPoolLookasideHits;
  /* 0x00a0 */ unsigned long AvailablePagedPoolPages;
  /* 0x00a4 */ unsigned long ResidentSystemCachePage;
  /* 0x00a8 */ unsigned long ResidentPagedPoolPage;
  /* 0x00ac */ unsigned long ResidentSystemDriverPage;
  /* 0x00b0 */ unsigned long CcFastReadNoWait;
  /* 0x00b4 */ unsigned long CcFastReadWait;
  /* 0x00b8 */ unsigned long CcFastReadResourceMiss;
  /* 0x00bc */ unsigned long CcFastReadNotPossible;
  /* 0x00c0 */ unsigned long CcFastMdlReadNoWait;
  /* 0x00c4 */ unsigned long CcFastMdlReadWait;
  /* 0x00c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x00cc */ unsigned long CcFastMdlReadNotPossible;
  /* 0x00d0 */ unsigned long CcMapDataNoWait;
  /* 0x00d4 */ unsigned long CcMapDataWait;
  /* 0x00d8 */ unsigned long CcMapDataNoWaitMiss;
  /* 0x00dc */ unsigned long CcMapDataWaitMiss;
  /* 0x00e0 */ unsigned long CcPinMappedDataCount;
  /* 0x00e4 */ unsigned long CcPinReadNoWait;
  /* 0x00e8 */ unsigned long CcPinReadWait;
  /* 0x00ec */ unsigned long CcPinReadNoWaitMiss;
  /* 0x00f0 */ unsigned long CcPinReadWaitMiss;
  /* 0x00f4 */ unsigned long CcCopyReadNoWait;
  /* 0x00f8 */ unsigned long CcCopyReadWait;
  /* 0x00fc */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x0100 */ unsigned long CcCopyReadWaitMiss;
  /* 0x0104 */ unsigned long CcMdlReadNoWait;
  /* 0x0108 */ unsigned long CcMdlReadWait;
  /* 0x010c */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x0110 */ unsigned long CcMdlReadWaitMiss;
  /* 0x0114 */ unsigned long CcReadAheadIos;
  /* 0x0118 */ unsigned long CcLazyWriteIos;
  /* 0x011c */ unsigned long CcLazyWritePages;
  /* 0x0120 */ unsigned long CcDataFlushes;
  /* 0x0124 */ unsigned long CcDataPages;
  /* 0x0128 */ unsigned long ContextSwitches;
  /* 0x012c */ unsigned long FirstLevelTbFills;
  /* 0x0130 */ unsigned long SecondLevelTbFills;
  /* 0x0134 */ unsigned long SystemCalls;
  /* 0x0138 */ unsigned __int64 CcTotalDirtyPages;
  /* 0x0140 */ unsigned __int64 CcDirtyPageThreshold;
  /* 0x0148 */ __int64 ResidentAvailablePages;
  /* 0x0150 */ unsigned __int64 SharedCommittedPages;
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION; /* size: 0x0158 */

typedef enum _DUPLICATE_EXTENTS_STATE
{
  FileSnapStateInactive = 0,
  FileSnapStateSource = 1,
  FileSnapStateTarget = 2,
} DUPLICATE_EXTENTS_STATE, *PDUPLICATE_EXTENTS_STATE;

typedef enum _SYSTEM_FEATURE_CONFIGURATION_UPDATE_TYPE
{
  SystemFeatureConfigurationUpdateTypeUpdate = 0,
  SystemFeatureConfigurationUpdateTypeOverwrite = 1,
  SystemFeatureConfigurationUpdateTypeCount = 2,
} SYSTEM_FEATURE_CONFIGURATION_UPDATE_TYPE, *PSYSTEM_FEATURE_CONFIGURATION_UPDATE_TYPE;

typedef struct _CERT_TRUST_LIST_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_353;
  /* 0x0008 */ struct _CTL_ENTRY* pCtlEntry;
  /* 0x0010 */ const struct _CTL_CONTEXT* pCtlContext;
} CERT_TRUST_LIST_INFO, *PCERT_TRUST_LIST_INFO; /* size: 0x0018 */

typedef enum _tagEXPR_TOKEN
{
  FC_EXPR_START = 0,
  FC_EXPR_ILLEGAL = 0,
  FC_EXPR_CONST32 = 1,
  FC_EXPR_CONST64 = 2,
  FC_EXPR_VAR = 3,
  FC_EXPR_OPER = 4,
  FC_EXPR_NOOP = 5,
  FC_EXPR_END = 6,
} tagEXPR_TOKEN, *PtagEXPR_TOKEN;

struct AdHocInterceptorInterfaceEntry
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ void* make /* function */;
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_330
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_330, *PTAG_UNNAMED_330;

typedef enum _POWER_PLATFORM_ROLE
{
  PlatformRoleUnspecified = 0,
  PlatformRoleDesktop = 1,
  PlatformRoleMobile = 2,
  PlatformRoleWorkstation = 3,
  PlatformRoleEnterpriseServer = 4,
  PlatformRoleSOHOServer = 5,
  PlatformRoleAppliancePC = 6,
  PlatformRolePerformanceServer = 7,
  PlatformRoleSlate = 8,
  PlatformRoleMaximum = 9,
} POWER_PLATFORM_ROLE, *PPOWER_PLATFORM_ROLE;

struct Windows::Foundation::Collections::supports_cleanup<short>
{
}; /* size: 0x0001 */

class wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_failfast_policy>
{
}; /* size: 0x0008 */

typedef enum _PORT_INFORMATION_CLASS
{
  PortBasicInformation = 0,
  PortDumpInformation = 1,
} PORT_INFORMATION_CLASS, *PPORT_INFORMATION_CLASS;

typedef enum _MEMORY_RESERVE_TYPE
{
  MemoryReserveUserApc = 0,
  MemoryReserveIoCompletion = 1,
  MemoryReserveTypeMax = 2,
} MEMORY_RESERVE_TYPE, *PMEMORY_RESERVE_TYPE;

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS
{
  TransactionManagerBasicInformation = 0,
  TransactionManagerLogInformation = 1,
  TransactionManagerLogPathInformation = 2,
  TransactionManagerRecoveryInformation = 4,
  TransactionManagerOnlineProbeInformation = 3,
  TransactionManagerOldestTransactionInformation = 5,
} TRANSACTIONMANAGER_INFORMATION_CLASS, *PTRANSACTIONMANAGER_INFORMATION_CLASS;

typedef struct _SPC_SP_AGENCY_INFO
{
  /* 0x0000 */ struct SPC_LINK_* pPolicyInformation;
  /* 0x0008 */ wchar_t* pwszPolicyDisplayText;
  /* 0x0010 */ struct _SPC_IMAGE* pLogoImage;
  /* 0x0018 */ struct SPC_LINK_* pLogoLink;
} SPC_SP_AGENCY_INFO, *PSPC_SP_AGENCY_INFO; /* size: 0x0020 */

struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *>
{
}; /* size: 0x0008 */

typedef enum _CI_WINDOWS_LOCKDOWN_MODE
{
  CI_WINDOWS_LOCKDOWN_MODE_UNLOCKED = 0,
  CI_WINDOWS_LOCKDOWN_MODE_TRIAL = 1,
  CI_WINDOWS_LOCKDOWN_MODE_LOCKED = 2,
  CI_WINDOWS_LOCKDOWN_MODE_MAX = 3,
} CI_WINDOWS_LOCKDOWN_MODE, *PCI_WINDOWS_LOCKDOWN_MODE;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef struct _RTL_SPARSE_BITMAP_CTX
{
  /* 0x0000 */ unsigned __int64 Lock;
  /* 0x0008 */ struct _RTL_SPARSE_BITMAP_RANGE** BitmapRanges;
  /* 0x0010 */ struct _RTL_BITMAP RangeArrayCommitStatus;
  /* 0x0020 */ void* AllocateRoutine /* function */;
  /* 0x0028 */ void* FreeRoutine /* function */;
  /* 0x0030 */ unsigned long RangeCount;
  /* 0x0034 */ unsigned long RangeIndexLimit;
  /* 0x0038 */ unsigned long BitsPerRange;
  /* 0x003c */ unsigned long RangeCountMax;
  /* 0x0040 */ unsigned long RangeMetadataOffset;
  /* 0x0044 */ unsigned long MetadataSizePerBit;
  struct /* bitfield */
  {
    /* 0x0048 */ unsigned long DefaultBitsSet : 1; /* bit position: 0 */
    /* 0x0048 */ unsigned long SparseRangeArray : 1; /* bit position: 1 */
    /* 0x0048 */ unsigned long NoInternalLocking : 1; /* bit position: 2 */
    /* 0x0048 */ unsigned long SpareFlags : 29; /* bit position: 3 */
  }; /* bitfield */
  /* 0x004c */ long __PADDING__[1];
} RTL_SPARSE_BITMAP_CTX, *PRTL_SPARSE_BITMAP_CTX; /* size: 0x0050 */

typedef enum _PROCESSINFOCLASS
{
  ProcessBasicInformation = 0,
  ProcessQuotaLimits = 1,
  ProcessIoCounters = 2,
  ProcessVmCounters = 3,
  ProcessTimes = 4,
  ProcessBasePriority = 5,
  ProcessRaisePriority = 6,
  ProcessDebugPort = 7,
  ProcessExceptionPort = 8,
  ProcessAccessToken = 9,
  ProcessLdtInformation = 10,
  ProcessLdtSize = 11,
  ProcessDefaultHardErrorMode = 12,
  ProcessIoPortHandlers = 13,
  ProcessPooledUsageAndLimits = 14,
  ProcessWorkingSetWatch = 15,
  ProcessUserModeIOPL = 16,
  ProcessEnableAlignmentFaultFixup = 17,
  ProcessPriorityClass = 18,
  ProcessWx86Information = 19,
  ProcessHandleCount = 20,
  ProcessAffinityMask = 21,
  ProcessPriorityBoost = 22,
  ProcessDeviceMap = 23,
  ProcessSessionInformation = 24,
  ProcessForegroundInformation = 25,
  ProcessWow64Information = 26,
  ProcessImageFileName = 27,
  ProcessLUIDDeviceMapsEnabled = 28,
  ProcessBreakOnTermination = 29,
  ProcessDebugObjectHandle = 30,
  ProcessDebugFlags = 31,
  ProcessHandleTracing = 32,
  ProcessIoPriority = 33,
  ProcessExecuteFlags = 34,
  ProcessTlsInformation = 35,
  ProcessCookie = 36,
  ProcessImageInformation = 37,
  ProcessCycleTime = 38,
  ProcessPagePriority = 39,
  ProcessInstrumentationCallback = 40,
  ProcessThreadStackAllocation = 41,
  ProcessWorkingSetWatchEx = 42,
  ProcessImageFileNameWin32 = 43,
  ProcessImageFileMapping = 44,
  ProcessAffinityUpdateMode = 45,
  ProcessMemoryAllocationMode = 46,
  ProcessGroupInformation = 47,
  ProcessTokenVirtualizationEnabled = 48,
  ProcessOwnerInformation = 49,
  ProcessWindowInformation = 50,
  ProcessHandleInformation = 51,
  ProcessMitigationPolicy = 52,
  ProcessDynamicFunctionTableInformation = 53,
  ProcessHandleCheckingMode = 54,
  ProcessKeepAliveCount = 55,
  ProcessRevokeFileHandles = 56,
  ProcessWorkingSetControl = 57,
  ProcessHandleTable = 58,
  ProcessCheckStackExtentsMode = 59,
  ProcessCommandLineInformation = 60,
  ProcessProtectionInformation = 61,
  ProcessMemoryExhaustion = 62,
  ProcessFaultInformation = 63,
  ProcessTelemetryIdInformation = 64,
  ProcessCommitReleaseInformation = 65,
  ProcessDefaultCpuSetsInformation = 66,
  ProcessAllowedCpuSetsInformation = 67,
  ProcessReserved1Information = 66,
  ProcessReserved2Information = 67,
  ProcessSubsystemProcess = 68,
  ProcessJobMemoryInformation = 69,
  ProcessInPrivate = 70,
  ProcessRaiseUMExceptionOnInvalidHandleClose = 71,
  ProcessIumChallengeResponse = 72,
  ProcessChildProcessInformation = 73,
  ProcessHighGraphicsPriorityInformation = 74,
  ProcessSubsystemInformation = 75,
  ProcessEnergyValues = 76,
  ProcessPowerThrottlingState = 77,
  ProcessReserved3Information = 78,
  ProcessWin32kSyscallFilterInformation = 79,
  ProcessDisableSystemAllowedCpuSets = 80,
  ProcessWakeInformation = 81,
  ProcessEnergyTrackingState = 82,
  ProcessManageWritesToExecutableMemory = 83,
  ProcessCaptureTrustletLiveDump = 84,
  ProcessTelemetryCoverage = 85,
  ProcessEnclaveInformation = 86,
  ProcessEnableReadWriteVmLogging = 87,
  ProcessUptimeInformation = 88,
  ProcessImageSection = 89,
  ProcessDebugAuthInformation = 90,
  ProcessSystemResourceManagement = 91,
  ProcessSequenceNumber = 92,
  ProcessReserved4Information = 93,
  ProcessSecurityDomainInformation = 94,
  ProcessCombineSecurityDomainsInformation = 95,
  ProcessEnableLogging = 96,
  ProcessLeapSecondInformation = 97,
  ProcessFiberShadowStackAllocation = 98,
  ProcessFreeFiberShadowStackAllocation = 99,
  ProcessAltSystemCallInformation = 100,
  ProcessDynamicEHContinuationTargets = 101,
  ProcessDynamicEnforcedCetCompatibleRanges = 102,
  ProcessCreateStateChange = 103,
  ProcessApplyStateChange = 104,
  ProcessEnableOptionalXStateFeatures = 105,
  ProcessAltPrefetchParam = 106,
  ProcessAssignCpuPartitions = 107,
  ProcessPriorityClassEx = 108,
  ProcessMembershipInformation = 109,
  ProcessEffectiveIoPriority = 110,
  ProcessEffectivePagePriority = 111,
  MaxProcessInfoClass = 112,
} PROCESSINFOCLASS, *PPROCESSINFOCLASS;

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>
{
}; /* size: 0x0001 */

typedef struct _MANAGE_HOT_PATCH_LOAD_PATCH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_354;
  /* 0x0008 */ struct _UNICODE_STRING PatchPath;
  union
  {
    union
    {
      /* 0x0018 */ struct _SID Sid;
      /* 0x0018 */ unsigned char Buffer[68];
    }; /* size: 0x0044 */
  } /* size: 0x0044 */ UserSid;
  /* 0x005c */ struct _HOT_PATCH_IMAGE_INFO BaseInfo;
  /* 0x0064 */ long __PADDING__[1];
} MANAGE_HOT_PATCH_LOAD_PATCH, *PMANAGE_HOT_PATCH_LOAD_PATCH; /* size: 0x0068 */

enum RUNTIMEBROKER_CALLERIDENTITY_CHECK
{
  RCC_ASSERT_IF_RUNTIMEBROKER = 0,
  RCC_FAIL_IF_RUNTIMEBROKER = 1,
  RCC_ALLOW_IF_RUNTIMEBROKER = 2,
};

class wistd::__function::__base<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>
{
}; /* size: 0x0008 */

enum tagCALLTYPE
{
  CALLTYPE_TOPLEVEL = 1,
  CALLTYPE_NESTED = 2,
  CALLTYPE_ASYNC = 3,
  CALLTYPE_TOPLEVEL_CALLPENDING = 4,
  CALLTYPE_ASYNC_CALLPENDING = 5,
};

struct NDR_ALLOC_ALL_NODES_CONTEXT;

typedef enum _TABLE_SEARCH_RESULT
{
  TableEmptyTree = 0,
  TableFoundNode = 1,
  TableInsertAsLeft = 2,
  TableInsertAsRight = 3,
} TABLE_SEARCH_RESULT, *PTABLE_SEARCH_RESULT;

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::AccessCache::AccessListEntry,0>
{
}; /* size: 0x0008 */

typedef enum _LDR_DLL_LOAD_REASON
{
  LoadReasonStaticDependency = 0,
  LoadReasonStaticForwarderDependency = 1,
  LoadReasonDynamicForwarderDependency = 2,
  LoadReasonDelayloadDependency = 3,
  LoadReasonDynamicLoad = 4,
  LoadReasonAsImageLoad = 5,
  LoadReasonAsDataLoad = 6,
  LoadReasonEnclavePrimary = 7,
  LoadReasonEnclaveDependency = 8,
  LoadReasonPatchImage = 9,
  LoadReasonUnknown = -1,
} LDR_DLL_LOAD_REASON, *PLDR_DLL_LOAD_REASON;

struct tagICONMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTA lfFont;
}; /* size: 0x004c */

enum Windows::Storage::Streams::InputStreamOptions
{
  InputStreamOptions_None = 0,
  InputStreamOptions_Partial = 1,
  InputStreamOptions_ReadAhead = 2,
};

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,unsigned short *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IUnknown>
{
  /* 0x0000 */ long Padding_355[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef enum _TP_LOG_LEVEL
{
  TP_LOG_LEVEL_ERROR = 0,
  TP_LOG_LEVEL_WARNING = 1,
  TP_LOG_LEVEL_INFO = 2,
  TP_LOG_LEVEL_TRACE_ENTER = 3,
  TP_LOG_LEVEL_TRACE_LEAVE = 4,
} TP_LOG_LEVEL, *PTP_LOG_LEVEL;

struct wil::details::close_invoke_helper<1,void (__cdecl*)(tagSTGMEDIUM *),&ReleaseStgMedium,tagSTGMEDIUM *>
{
}; /* size: 0x0001 */

class wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

struct tagSTGOPTIONS
{
  /* 0x0000 */ unsigned short usVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned long ulSectorSize;
  /* 0x0008 */ const wchar_t* pwcsTemplateFile;
}; /* size: 0x0010 */

struct tagOutgoingCallData
{
  /* 0x0000 */ unsigned long dwServerPID;
  /* 0x0004 */ unsigned long dwServerTID;
}; /* size: 0x0008 */

struct tagOutgoingActivationData
{
  /* 0x0000 */ struct _GUID guidServer;
}; /* size: 0x0010 */

class ThreadLockOrderVerifier<enum ComLockOrder>
{
  /* 0x0000 */ unsigned int _locksHeldByThread;
}; /* size: 0x0004 */

struct tagSOleTlsData
{
  /* 0x0000 */ void* pvThreadBase;
  /* 0x0008 */ class CSmAllocator* pSmAllocator;
  /* 0x0010 */ unsigned long dwApartmentID;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ long TlsMapIndex;
  /* 0x001c */ long Padding_356;
  /* 0x0020 */ void** ppTlsSlot;
  /* 0x0028 */ unsigned long cComInits;
  /* 0x002c */ unsigned long cOleInits;
  /* 0x0030 */ unsigned long cCalls;
  /* 0x0034 */ long Padding_357;
  /* 0x0038 */ class ServerCall* pServerCall;
  /* 0x0040 */ struct ThreadCallObjectCache* pCallObjectCache;
  /* 0x0048 */ struct tagContextStackNode* pContextStack;
  /* 0x0050 */ class CObjServer* pObjServer;
  /* 0x0058 */ unsigned long dwTIDCaller;
  /* 0x005c */ long Padding_358;
  /* 0x0060 */ void* pCurrentCtxForNefariousReaders;
  /* 0x0068 */ class CObjectContext* pCurrentContext;
  /* 0x0070 */ class CObjectContext* pEmptyCtx;
  /* 0x0078 */ unsigned __int64 ContextId;
  /* 0x0080 */ class CComApartment* pNativeApt;
  /* 0x0088 */ struct IUnknown* pCallContext;
  /* 0x0090 */ class CCtxCall* pCtxCall;
  /* 0x0098 */ class CPolicySet* pPS;
  /* 0x00a0 */ void* pvPendingCallsFront;
  /* 0x00a8 */ void* pvPendingCallsBack;
  /* 0x00b0 */ class CAptCallCtrl* pCallCtrl;
  /* 0x00b8 */ class CSrvCallState* pTopSCS;
  /* 0x00c0 */ struct HWND__* hwndSTA;
  /* 0x00c8 */ long cORPCNestingLevel;
  /* 0x00cc */ unsigned long cDebugData;
  /* 0x00d0 */ struct _GUID LogicalThreadId;
  /* 0x00e0 */ void* hThread;
  /* 0x00e8 */ void* hRevert;
  /* 0x00f0 */ struct IUnknown* pAsyncRelease;
  /* 0x00f8 */ struct HWND__* hwndDdeServer;
  /* 0x0100 */ struct HWND__* hwndDdeClient;
  /* 0x0108 */ unsigned long cServeDdeObjects;
  /* 0x010c */ long Padding_359;
  /* 0x0110 */ void* pSTALSvrsFront;
  /* 0x0118 */ struct HWND__* hwndClip;
  /* 0x0120 */ struct IDataObject* pDataObjClip;
  /* 0x0128 */ unsigned long dwClipSeqNum;
  /* 0x012c */ unsigned long fIsClipWrapper;
  /* 0x0130 */ struct IUnknown* punkState;
  /* 0x0138 */ unsigned long cCallCancellation;
  /* 0x013c */ unsigned long cAsyncSends;
  /* 0x0140 */ class CAsyncCall* pAsyncCallList;
  /* 0x0148 */ class CSurrogatedObjectList* pSurrogateList;
  /* 0x0150 */ void* pRWLockTlsEntry;
  /* 0x0158 */ struct CallEntryBuffer CallEntry;
  /* 0x0170 */ struct tagInitializeSpyNode* pFirstSpyReg;
  /* 0x0178 */ struct tagInitializeSpyNode* pFirstFreeSpyReg;
  /* 0x0180 */ class CVerifierTlsData* pVerifierData;
  /* 0x0188 */ unsigned long dwMaxSpy;
  /* 0x018c */ unsigned char cCustomMarshallerRecursion;
  /* 0x018d */ char Padding_360[3];
  /* 0x0190 */ void* pDragCursors;
  /* 0x0198 */ struct IUnknown* punkError;
  /* 0x01a0 */ unsigned long cbErrorData;
  /* 0x01a4 */ struct tagOutgoingCallData outgoingCallData;
  /* 0x01ac */ struct tagIncomingCallData incomingCallData;
  /* 0x01b0 */ struct tagOutgoingActivationData outgoingActivationData;
  /* 0x01c0 */ unsigned long cReentrancyFromUserAPC;
  /* 0x01c4 */ long Padding_361;
  /* 0x01c8 */ class ModernSTAWaitContext* pModernSTAWaitContext;
  /* 0x01d0 */ volatile unsigned long dwCrossThreadFlags;
  /* 0x01d4 */ unsigned long dwNestedRemRelease;
  /* 0x01d8 */ unsigned long cIncomingTouchedASTACalls;
  /* 0x01dc */ long Padding_362;
  /* 0x01e0 */ class PushLogicalThreadId* pTopPushedLogicalThreadId;
  /* 0x01e8 */ unsigned long iXslockOwnerTableHint;
  /* 0x01ec */ enum OLETLS_PREVENT_RUNDOWN_MITIGATION currentPreventRundownMitigation;
  /* 0x01f0 */ int fOweForcedBulkUpdateForCurrentMitigation;
  /* 0x01f4 */ long Padding_363;
  /* 0x01f8 */ struct IUnknown* pClipboardBroker;
  /* 0x0200 */ unsigned long dwActivationType;
  /* 0x0204 */ unsigned long cTouchedAstasInActiveCall;
  /* 0x0208 */ const unsigned __int64* pTouchedAstasInActiveCall;
  /* 0x0210 */ class UnmarshalForQueryInterface* pTopmostUnmarshalForQueryInterface;
  /* 0x0218 */ class CoGetStandardMarshalInProgress* pTopmostCoGetStandardMarshalInProgress;
  /* 0x0220 */ const struct WireContainerThis* requestContainerPassthroughData;
  /* 0x0228 */ unsigned long requestContainerPassthroughDataSize;
  /* 0x022c */ int freeRequestContainerPassthroughData;
  /* 0x0230 */ struct WireContainerThat* responseContainerPassthroughData;
  /* 0x0238 */ unsigned long responseContainerPassthroughDataSize;
  /* 0x023c */ enum ComTlsFlags comTlsFlags;
  /* 0x0240 */ class ThreadLockOrderVerifier<enum ComLockOrder> lockOrderVerifier;
  /* 0x0244 */ long __PADDING__[1];
}; /* size: 0x0248 */

struct tagDVTARGETDEVICE
{
  /* 0x0000 */ unsigned long tdSize;
  /* 0x0004 */ unsigned short tdDriverNameOffset;
  /* 0x0006 */ unsigned short tdDeviceNameOffset;
  /* 0x0008 */ unsigned short tdPortNameOffset;
  /* 0x000a */ unsigned short tdExtDevmodeOffset;
  /* 0x000c */ unsigned char tdData[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING
{
  /* 0x0000 */ void* ResolutionContext;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING; /* size: 0x0008 */

typedef enum _KTMOBJECT_TYPE
{
  KTMOBJECT_TRANSACTION = 0,
  KTMOBJECT_TRANSACTION_MANAGER = 1,
  KTMOBJECT_RESOURCE_MANAGER = 2,
  KTMOBJECT_ENLISTMENT = 3,
  KTMOBJECT_INVALID = 4,
} KTMOBJECT_TYPE, *PKTMOBJECT_TYPE;

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long RequestedOplockLevel;
  /* 0x0008 */ unsigned long Flags;
} REQUEST_OPLOCK_INPUT_BUFFER, *PREQUEST_OPLOCK_INPUT_BUFFER; /* size: 0x000c */

typedef enum _FP__IEEE_ROUNDING_MODE
{
  FpRoundNearest = 0,
  FpRoundMinusInfinity = 1,
  FpRoundPlusInfinity = 2,
  FpRoundChopped = 3,
} FP__IEEE_ROUNDING_MODE, *PFP__IEEE_ROUNDING_MODE;

typedef struct _SOURCEFILE
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ char* FileName;
} SOURCEFILE, *PSOURCEFILE; /* size: 0x0010 */

typedef enum _FINDEX_INFO_LEVELS
{
  FindExInfoStandard = 0,
  FindExInfoBasic = 1,
  FindExInfoMaxInfoLevel = 2,
} FINDEX_INFO_LEVELS, *PFINDEX_INFO_LEVELS;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

enum tagINPUT_MESSAGE_DEVICE_TYPE
{
  IMDT_UNAVAILABLE = 0,
  IMDT_KEYBOARD = 1,
  IMDT_MOUSE = 2,
  IMDT_TOUCH = 4,
  IMDT_PEN = 8,
  IMDT_TOUCHPAD = 16,
};

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IUriRuntimeClass *>
{
}; /* size: 0x0001 */

typedef struct _tagHIT_LOGGING_INFO
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_364;
  /* 0x0008 */ char* lpszLoggedUrlName;
  /* 0x0010 */ struct _SYSTEMTIME StartTime;
  /* 0x0020 */ struct _SYSTEMTIME EndTime;
  /* 0x0030 */ char* lpszExtendedInfo;
} tagHIT_LOGGING_INFO, *PtagHIT_LOGGING_INFO; /* size: 0x0038 */

enum Windows::Storage::FileAccessMode
{
  FileAccessMode_Read = 0,
  FileAccessMode_ReadWrite = 1,
};

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IUriRuntimeClass *>
{
}; /* size: 0x0001 */

typedef struct _SPC_IMAGE
{
  /* 0x0000 */ struct SPC_LINK_* pImageLink;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Bitmap;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Metafile;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB EnhancedMetafile;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB GifFile;
} SPC_IMAGE, *PSPC_IMAGE; /* size: 0x0048 */

class wil::details::<lambda_4669b0b500b640868e67e954d122ad4c>
{
}; /* size: 0x0001 */

typedef enum _HIBERFILE_BUCKET_SIZE
{
  HiberFileBucket1GB = 0,
  HiberFileBucket2GB = 1,
  HiberFileBucket4GB = 2,
  HiberFileBucket8GB = 3,
  HiberFileBucket16GB = 4,
  HiberFileBucket32GB = 5,
  HiberFileBucketUnlimited = 6,
  HiberFileBucketMax = 7,
} HIBERFILE_BUCKET_SIZE, *PHIBERFILE_BUCKET_SIZE;

struct Windows::Foundation::Collections::IMap<_GUID,HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_c7e555bad8dcd38ee4515a0e2b25b09b>
{
}; /* size: 0x0001 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<7,0,1,2,3,4,5,6> >
{
} tlgDataDescInit<_tlgIndexSequence<7,0,1,2,3,4,5,6> >, *PtlgDataDescInit<_tlgIndexSequence<7,0,1,2,3,4,5,6> >; /* size: 0x0001 */

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_331
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_331, *PTAG_UNNAMED_331;

typedef enum _TAG_UNNAMED_332
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_332, *PTAG_UNNAMED_332;

typedef enum _TAG_UNNAMED_333
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_333, *PTAG_UNNAMED_333;

typedef struct _IMAGEHLP_SYMBOLW64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOLW64 sym;
  /* 0x0020 */ wchar_t name[2001];
  /* 0x0fc2 */ char __PADDING__[6];
} IMAGEHLP_SYMBOLW64_PACKAGE, *PIMAGEHLP_SYMBOLW64_PACKAGE; /* size: 0x0fc8 */

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_365;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_LOADED_NOTIFICATION_DATA, *PLDR_DLL_LOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_366;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_UNLOADED_NOTIFICATION_DATA, *PLDR_DLL_UNLOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef union _LDR_DLL_NOTIFICATION_DATA
{
  union
  {
    /* 0x0000 */ struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    /* 0x0000 */ struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
  }; /* size: 0x0028 */
} LDR_DLL_NOTIFICATION_DATA, *PLDR_DLL_NOTIFICATION_DATA; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_334
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_334, *PTAG_UNNAMED_334;

struct IPipeByte
{
}; /* size: 0x0008 */

typedef enum _SERVERSILO_STATE
{
  SERVERSILO_INITING = 0,
  SERVERSILO_STARTED = 1,
  SERVERSILO_SHUTTING_DOWN = 2,
  SERVERSILO_TERMINATING = 3,
  SERVERSILO_TERMINATED = 4,
} SERVERSILO_STATE, *PSERVERSILO_STATE;

typedef struct _SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long AlignmentShift;
  /* 0x0008 */ unsigned __int64 FileOffsetToAlign;
  /* 0x0010 */ unsigned long FallbackAlignmentShift;
  /* 0x0014 */ long __PADDING__[1];
} SET_DAX_ALLOC_ALIGNMENT_HINT_INPUT, *PSET_DAX_ALLOC_ALIGNMENT_HINT_INPUT; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::BasicProperties *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_335
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_335, *PTAG_UNNAMED_335;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Uri *>
{
}; /* size: 0x0008 */

class wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>
{
  /* 0x0000 */ struct wil::details_abi::ThreadLocalStorage<wil::details::ThreadFailureCallbackHolder *>::Node* volatile m_hashArray[10];
}; /* size: 0x0050 */

typedef enum _TAG_UNNAMED_336
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_336, *PTAG_UNNAMED_336;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct IEnumHolder
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_337
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_337, *PTAG_UNNAMED_337;

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Uri *>
{
}; /* size: 0x0008 */

typedef struct _SPC_PE_IMAGE_DATA
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB Flags;
  /* 0x0018 */ struct SPC_LINK_* pFile;
} SPC_PE_IMAGE_DATA, *PSPC_PE_IMAGE_DATA; /* size: 0x0020 */

typedef enum _SYSDBG_COMMAND
{
  SysDbgQueryModuleInformation = 0,
  SysDbgQueryTraceInformation = 1,
  SysDbgSetTracepoint = 2,
  SysDbgSetSpecialCall = 3,
  SysDbgClearSpecialCalls = 4,
  SysDbgQuerySpecialCalls = 5,
  SysDbgBreakPoint = 6,
  SysDbgQueryVersion = 7,
  SysDbgReadVirtual = 8,
  SysDbgWriteVirtual = 9,
  SysDbgReadPhysical = 10,
  SysDbgWritePhysical = 11,
  SysDbgReadControlSpace = 12,
  SysDbgWriteControlSpace = 13,
  SysDbgReadIoSpace = 14,
  SysDbgWriteIoSpace = 15,
  SysDbgReadMsr = 16,
  SysDbgWriteMsr = 17,
  SysDbgReadBusData = 18,
  SysDbgWriteBusData = 19,
  SysDbgCheckLowMemory = 20,
  SysDbgEnableKernelDebugger = 21,
  SysDbgDisableKernelDebugger = 22,
  SysDbgGetAutoKdEnable = 23,
  SysDbgSetAutoKdEnable = 24,
  SysDbgGetPrintBufferSize = 25,
  SysDbgSetPrintBufferSize = 26,
  SysDbgGetKdUmExceptionEnable = 27,
  SysDbgSetKdUmExceptionEnable = 28,
  SysDbgGetTriageDump = 29,
  SysDbgGetKdBlockEnable = 30,
  SysDbgSetKdBlockEnable = 31,
  SysDbgRegisterForUmBreakInfo = 32,
  SysDbgGetUmBreakPid = 33,
  SysDbgClearUmBreakPid = 34,
  SysDbgGetUmAttachPid = 35,
  SysDbgClearUmAttachPid = 36,
  SysDbgGetLiveKernelDump = 37,
  SysDbgKdPullRemoteFile = 38,
} SYSDBG_COMMAND, *PSYSDBG_COMMAND;

typedef enum _TAG_UNNAMED_338
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_338, *PTAG_UNNAMED_338;

typedef enum _TAG_UNNAMED_339
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_339, *PTAG_UNNAMED_339;

typedef enum _PSM_BROKER_TOKEN_SCOPE
{
  PsmBrokerTokenScopePackage = 0,
  PsmBrokerTokenScopeApplication = 1,
  PsmBrokerTokenScopeCount = 2,
} PSM_BROKER_TOKEN_SCOPE, *PPSM_BROKER_TOKEN_SCOPE;

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *,1>
{
}; /* size: 0x0008 */

enum POWER_MONITOR_REQUEST_REASON
{
  MonitorRequestReasonUnknown = 0,
  MonitorRequestReasonPowerButton = 1,
  MonitorRequestReasonRemoteConnection = 2,
  MonitorRequestReasonScMonitorpower = 3,
  MonitorRequestReasonUserInput = 4,
  MonitorRequestReasonAcDcDisplayBurst = 5,
  MonitorRequestReasonUserDisplayBurst = 6,
  MonitorRequestReasonPoSetSystemState = 7,
  MonitorRequestReasonSetThreadExecutionState = 8,
  MonitorRequestReasonFullWake = 9,
  MonitorRequestReasonSessionUnlock = 10,
  MonitorRequestReasonScreenOffRequest = 11,
  MonitorRequestReasonIdleTimeout = 12,
  MonitorRequestReasonPolicyChange = 13,
  MonitorRequestReasonSleepButton = 14,
  MonitorRequestReasonLid = 15,
  MonitorRequestReasonBatteryCountChange = 16,
  MonitorRequestReasonGracePeriod = 17,
  MonitorRequestReasonPnP = 18,
  MonitorRequestReasonDP = 19,
  MonitorRequestReasonSxTransition = 20,
  MonitorRequestReasonSystemIdle = 21,
  MonitorRequestReasonNearProximity = 22,
  MonitorRequestReasonThermalStandby = 23,
  MonitorRequestReasonResumePdc = 24,
  MonitorRequestReasonResumeS4 = 25,
  MonitorRequestReasonTerminal = 26,
  MonitorRequestReasonPdcSignal = 27,
  MonitorRequestReasonAcDcDisplayBurstSuppressed = 28,
  MonitorRequestReasonSystemStateEntered = 29,
  MonitorRequestReasonWinrt = 30,
  MonitorRequestReasonUserInputKeyboard = 31,
  MonitorRequestReasonUserInputMouse = 32,
  MonitorRequestReasonUserInputTouchpad = 33,
  MonitorRequestReasonUserInputPen = 34,
  MonitorRequestReasonUserInputAccelerometer = 35,
  MonitorRequestReasonUserInputHid = 36,
  MonitorRequestReasonUserInputPoUserPresent = 37,
  MonitorRequestReasonUserInputSessionSwitch = 38,
  MonitorRequestReasonUserInputInitialization = 39,
  MonitorRequestReasonPdcSignalWindowsMobilePwrNotif = 40,
  MonitorRequestReasonPdcSignalWindowsMobileShell = 41,
  MonitorRequestReasonPdcSignalHeyCortana = 42,
  MonitorRequestReasonPdcSignalHolographicShell = 43,
  MonitorRequestReasonPdcSignalFingerprint = 44,
  MonitorRequestReasonDirectedDrips = 45,
  MonitorRequestReasonDim = 46,
  MonitorRequestReasonBuiltinPanel = 47,
  MonitorRequestReasonDisplayRequiredUnDim = 48,
  MonitorRequestReasonBatteryCountChangeSuppressed = 49,
  MonitorRequestReasonResumeModernStandby = 50,
  MonitorRequestReasonTerminalInit = 51,
  MonitorRequestReasonPdcSignalSensorsHumanPresence = 52,
  MonitorRequestReasonBatteryPreCritical = 53,
  MonitorRequestReasonUserInputTouch = 54,
  MonitorRequestReasonMax = 55,
};

typedef enum _SAFER_IDENTIFICATION_TYPES
{
  SaferIdentityDefault = 0,
  SaferIdentityTypeImageName = 1,
  SaferIdentityTypeImageHash = 2,
  SaferIdentityTypeUrlZone = 3,
  SaferIdentityTypeCertificate = 4,
} SAFER_IDENTIFICATION_TYPES, *PSAFER_IDENTIFICATION_TYPES;

struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable<<lambda_35813abc48134a673502c50f3be72d9b> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef struct _POOLED_USAGE_AND_LIMITS
{
  /* 0x0000 */ unsigned __int64 PeakPagedPoolUsage;
  /* 0x0008 */ unsigned __int64 PagedPoolUsage;
  /* 0x0010 */ unsigned __int64 PagedPoolLimit;
  /* 0x0018 */ unsigned __int64 PeakNonPagedPoolUsage;
  /* 0x0020 */ unsigned __int64 NonPagedPoolUsage;
  /* 0x0028 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0030 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0038 */ unsigned __int64 PagefileUsage;
  /* 0x0040 */ unsigned __int64 PagefileLimit;
} POOLED_USAGE_AND_LIMITS, *PPOOLED_USAGE_AND_LIMITS; /* size: 0x0048 */

enum PO_INTERNAL_WAKE_SOURCE_TYPE
{
  InternalWakeSourceDozeToHibernate = 0,
  InternalWakeSourcePredictedUserPresence = 1,
  InternalWakeSourceTimerOverride = 2,
};

struct _EX_WNF_SUBSCRIPTION;

enum Windows::System::UserType
{
  UserType_LocalUser = 0,
  UserType_RemoteUser = 1,
  UserType_LocalGuest = 2,
  UserType_RemoteGuest = 3,
  UserType_SystemManaged = 4,
};

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>
{
}; /* size: 0x0008 */

typedef struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DataStream
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Vdl;
} STREAM_INFORMATION_ENTRY::_StreamInformation::_DataStream, *PSTREAM_INFORMATION_ENTRY::_StreamInformation::_DataStream; /* size: 0x0010 */

enum Windows::System::UserPictureSize
{
  UserPictureSize_Size64x64 = 0,
  UserPictureSize_Size208x208 = 1,
  UserPictureSize_Size424x424 = 2,
  UserPictureSize_Size1080x1080 = 3,
};

enum CallerLocalityIndicator
{
  CallerIsDirect = 0,
  CallerIsInproc = 1,
  CallerIsOutofproc = 2,
};

class Microsoft::WRL::ComPtr<IClipboardProtectionServices>
{
  /* 0x0000 */ struct IClipboardProtectionServices* ptr_;
}; /* size: 0x0008 */

struct std::chrono::system_clock
{
  /* 0x0000 */ const BOOL is_steady;
}; /* size: 0x0001 */

typedef enum _IMAGE_POLICY_ENTRY_TYPE
{
  ImagePolicyEntryTypeNone = 0,
  ImagePolicyEntryTypeBool = 1,
  ImagePolicyEntryTypeInt8 = 2,
  ImagePolicyEntryTypeUInt8 = 3,
  ImagePolicyEntryTypeInt16 = 4,
  ImagePolicyEntryTypeUInt16 = 5,
  ImagePolicyEntryTypeInt32 = 6,
  ImagePolicyEntryTypeUInt32 = 7,
  ImagePolicyEntryTypeInt64 = 8,
  ImagePolicyEntryTypeUInt64 = 9,
  ImagePolicyEntryTypeAnsiString = 10,
  ImagePolicyEntryTypeUnicodeString = 11,
  ImagePolicyEntryTypeOverride = 12,
  ImagePolicyEntryTypeMaximum = 13,
} IMAGE_POLICY_ENTRY_TYPE, *PIMAGE_POLICY_ENTRY_TYPE;

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
  /* 0x0010 */ unsigned short ClientComputerNameLength;
  /* 0x0012 */ wchar_t ClientComputerBuffer[16];
  /* 0x0032 */ char __PADDING__[6];
} FILE_PIPE_CLIENT_PROCESS_BUFFER_EX, *PFILE_PIPE_CLIENT_PROCESS_BUFFER_EX; /* size: 0x0038 */

typedef enum _IMAGE_POLICY_ID
{
  ImagePolicyIdNone = 0,
  ImagePolicyIdEtw = 1,
  ImagePolicyIdDebug = 2,
  ImagePolicyIdCrashDump = 3,
  ImagePolicyIdCrashDumpKey = 4,
  ImagePolicyIdCrashDumpKeyGuid = 5,
  ImagePolicyIdParentSd = 6,
  ImagePolicyIdParentSdRev = 7,
  ImagePolicyIdSvn = 8,
  ImagePolicyIdDeviceId = 9,
  ImagePolicyIdCapability = 10,
  ImagePolicyIdScenarioId = 11,
  ImagePolicyIdMaximum = 12,
} IMAGE_POLICY_ID, *PIMAGE_POLICY_ID;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_367;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
  /* 0x0028 */ struct _SEC_WINNT_AUTH_IDENTITY_A* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_368;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A; /* size: 0x0040 */

class Microsoft::WRL::Details::RuntimeClassBaseT<2>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum __MIDL_IAuthenticateEx_0001
{
  AUTHENTICATEF_PROXY = 1,
  AUTHENTICATEF_BASIC = 2,
  AUTHENTICATEF_HTTP = 4,
} _MIDL_IAuthenticateEx_0001, *P_MIDL_IAuthenticateEx_0001;

struct SDWORDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long key;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumClassesOfCategories> >;

enum CertKeyType
{
  KeyTypeOther = 0,
  KeyTypeVirtualSmartCard = 1,
  KeyTypePhysicalSmartCard = 2,
  KeyTypePassport = 3,
  KeyTypePassportRemote = 4,
  KeyTypePassportSmartCard = 5,
  KeyTypeHardware = 6,
  KeyTypeSoftware = 7,
  KeyTypeSelfSigned = 8,
};

struct Windows::Foundation::Collections::IIterator<int>
{
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_MODULEW64_EX
{
  /* 0x0000 */ struct _IMAGEHLP_MODULEW64 Module;
  /* 0x0cc0 */ unsigned long RegionFlags;
  /* 0x0cc4 */ long __PADDING__[1];
} IMAGEHLP_MODULEW64_EX, *PIMAGEHLP_MODULEW64_EX; /* size: 0x0cc8 */

typedef enum _HARDERROR_RESPONSE
{
  ResponseReturnToCaller = 0,
  ResponseNotHandled = 1,
  ResponseAbort = 2,
  ResponseCancel = 3,
  ResponseIgnore = 4,
  ResponseNo = 5,
  ResponseOk = 6,
  ResponseRetry = 7,
  ResponseYes = 8,
  ResponseTryAgain = 9,
  ResponseContinue = 10,
} HARDERROR_RESPONSE, *PHARDERROR_RESPONSE;

typedef enum __MIDL_IBindStatusCallback_0006
{
  BSCF_FIRSTDATANOTIFICATION = 1,
  BSCF_INTERMEDIATEDATANOTIFICATION = 2,
  BSCF_LASTDATANOTIFICATION = 4,
  BSCF_DATAFULLYAVAILABLE = 8,
  BSCF_AVAILABLEDATASIZEUNKNOWN = 16,
  BSCF_SKIPDRAINDATAFORFILEURLS = 32,
  BSCF_64BITLENGTHDOWNLOAD = 64,
} _MIDL_IBindStatusCallback_0006, *P_MIDL_IBindStatusCallback_0006;

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>
{
}; /* size: 0x0001 */

typedef struct _TAPE_WRITE_MARKS
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned char Immediate;
  /* 0x0009 */ char __PADDING__[3];
} TAPE_WRITE_MARKS, *PTAPE_WRITE_MARKS; /* size: 0x000c */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComCatalogSCM> const >;

typedef enum _FS_BPIO_OPERATIONS
{
  FS_BPIO_OP_ENABLE = 1,
  FS_BPIO_OP_DISABLE = 2,
  FS_BPIO_OP_QUERY = 3,
  FS_BPIO_OP_VOLUME_STACK_PAUSE = 4,
  FS_BPIO_OP_VOLUME_STACK_RESUME = 5,
  FS_BPIO_OP_STREAM_PAUSE = 6,
  FS_BPIO_OP_STREAM_RESUME = 7,
  FS_BPIO_OP_GET_INFO = 8,
  FS_BPIO_OP_MAX_OPERATION = 9,
} FS_BPIO_OPERATIONS, *PFS_BPIO_OPERATIONS;

typedef enum _PARTITION_INFORMATION_CLASS
{
  SystemMemoryPartitionInformation = 0,
  SystemMemoryPartitionMoveMemory = 1,
  SystemMemoryPartitionAddPagefile = 2,
  SystemMemoryPartitionCombineMemory = 3,
  SystemMemoryPartitionInitialAddMemory = 4,
  SystemMemoryPartitionGetMemoryEvents = 5,
  SystemMemoryPartitionSetAttributes = 6,
  SystemMemoryPartitionNodeInformation = 7,
  SystemMemoryPartitionCreateLargePages = 8,
  SystemMemoryPartitionDedicatedMemoryInformation = 9,
  SystemMemoryPartitionOpenDedicatedMemory = 10,
  SystemMemoryPartitionMemoryChargeAttributes = 11,
  SystemMemoryPartitionClearAttributes = 12,
  SystemMemoryPartitionSetMemoryThresholds = 13,
  SystemMemoryPartitionMax = 14,
} PARTITION_INFORMATION_CLASS, *PPARTITION_INFORMATION_CLASS;

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::ItemRemovedEventArgs *,Windows::Storage::AccessCache::IItemRemovedEventArgs *>;

typedef enum __MIDL_IInternetSecurityManager_0002
{
  PUAFOUT_DEFAULT = 0,
  PUAFOUT_ISLOCKZONEPOLICY = 1,
} _MIDL_IInternetSecurityManager_0002, *P_MIDL_IInternetSecurityManager_0002;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>
{
}; /* size: 0x0001 */

typedef struct _devicemodeA
{
  /* 0x0000 */ unsigned char dmDeviceName[32];
  /* 0x0020 */ unsigned short dmSpecVersion;
  /* 0x0022 */ unsigned short dmDriverVersion;
  /* 0x0024 */ unsigned short dmSize;
  /* 0x0026 */ unsigned short dmDriverExtra;
  /* 0x0028 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x002c */ short dmOrientation;
      /* 0x002e */ short dmPaperSize;
      /* 0x0030 */ short dmPaperLength;
      /* 0x0032 */ short dmPaperWidth;
      /* 0x0034 */ short dmScale;
      /* 0x0036 */ short dmCopies;
      /* 0x0038 */ short dmDefaultSource;
      /* 0x003a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x002c */ struct _POINTL dmPosition;
      /* 0x0034 */ unsigned long dmDisplayOrientation;
      /* 0x0038 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x003c */ short dmColor;
  /* 0x003e */ short dmDuplex;
  /* 0x0040 */ short dmYResolution;
  /* 0x0042 */ short dmTTOption;
  /* 0x0044 */ short dmCollate;
  /* 0x0046 */ unsigned char dmFormName[32];
  /* 0x0066 */ unsigned short dmLogPixels;
  /* 0x0068 */ unsigned long dmBitsPerPel;
  /* 0x006c */ unsigned long dmPelsWidth;
  /* 0x0070 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x0074 */ unsigned long dmDisplayFlags;
    /* 0x0074 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x0078 */ unsigned long dmDisplayFrequency;
  /* 0x007c */ unsigned long dmICMMethod;
  /* 0x0080 */ unsigned long dmICMIntent;
  /* 0x0084 */ unsigned long dmMediaType;
  /* 0x0088 */ unsigned long dmDitherType;
  /* 0x008c */ unsigned long dmReserved1;
  /* 0x0090 */ unsigned long dmReserved2;
  /* 0x0094 */ unsigned long dmPanningWidth;
  /* 0x0098 */ unsigned long dmPanningHeight;
} devicemodeA, *PdevicemodeA; /* size: 0x009c */

typedef enum _FILE_METADATA_OPTIMIZATION_STATE
{
  FileMetadataOptimizationNone = 0,
  FileMetadataOptimizationInProgress = 1,
  FileMetadataOptimizationPending = 2,
} FILE_METADATA_OPTIMIZATION_STATE, *PFILE_METADATA_OPTIMIZATION_STATE;

typedef struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION
{
  /* 0x0000 */ unsigned short NumberOfTargets;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET* Targets;
} PROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION, *PPROCESS_DYNAMIC_EH_CONTINUATION_TARGETS_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceHostBrokerProvider> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > >
{
}; /* size: 0x0008 */

typedef enum _HARDERROR_RESPONSE_OPTION
{
  OptionAbortRetryIgnore = 0,
  OptionOk = 1,
  OptionOkCancel = 2,
  OptionRetryCancel = 3,
  OptionYesNo = 4,
  OptionYesNoCancel = 5,
  OptionShutdownSystem = 6,
  OptionOkNoWait = 7,
  OptionCancelTryContinue = 8,
} HARDERROR_RESPONSE_OPTION, *PHARDERROR_RESPONSE_OPTION;

typedef struct _tlgDataDescInit<_tlgIndexSequence<3,0,1> >
{
} tlgDataDescInit<_tlgIndexSequence<3,0,1> >, *PtlgDataDescInit<_tlgIndexSequence<3,0,1> >; /* size: 0x0001 */

typedef enum _CPU_PARTITION_SET_INFORMATION_CLASS
{
  CpuPartitionSetMax = 0,
} CPU_PARTITION_SET_INFORMATION_CLASS, *PCPU_PARTITION_SET_INFORMATION_CLASS;

struct Windows::Foundation::Collections::IMap_impl<__int64,float>
{
}; /* size: 0x0008 */

enum tagPENDINGTYPE
{
  PENDINGTYPE_TOPLEVEL = 1,
  PENDINGTYPE_NESTED = 2,
};

struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>::EventType
{
}; /* size: 0x0001 */

enum tagOLEVERBATTRIB
{
  OLEVERBATTRIB_NEVERDIRTIES = 1,
  OLEVERBATTRIB_ONCONTAINERMENU = 2,
};

class wil::details::shared_object<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

typedef enum _TAG_UNNAMED_340
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_340, *PTAG_UNNAMED_340;

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>
{
}; /* size: 0x0008 */

typedef enum _WORKER_FACTORY_CALLBACK_CLASS
{
  WorkerFactoryCallbackNormal = 0,
  WorkerFactoryCallbackLongRunning = 1,
  WorkerFactoryCallbackIndependent = 2,
  WorkerFactoryCallbackDetectedUnrecoverableError = 3,
} WORKER_FACTORY_CALLBACK_CLASS, *PWORKER_FACTORY_CALLBACK_CLASS;

typedef struct _MIDL_INTERFACE_METHOD_PROPERTIES
{
  /* 0x0000 */ unsigned short MethodCount;
  /* 0x0002 */ char Padding_369[6];
  /* 0x0008 */ const struct _MIDL_METHOD_PROPERTY_MAP* const* MethodProperties;
} MIDL_INTERFACE_METHOD_PROPERTIES, *PMIDL_INTERFACE_METHOD_PROPERTIES; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_341
{
  _tlgLevelConst = 101,
} TAG_UNNAMED_341, *PTAG_UNNAMED_341;

typedef enum _TAG_UNNAMED_342
{
  _tlgLevelConst = 3,
} TAG_UNNAMED_342, *PTAG_UNNAMED_342;

typedef struct _FILE_FULL_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char EaNameLength;
  /* 0x0006 */ unsigned short EaValueLength;
  /* 0x0008 */ char EaName[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION; /* size: 0x000c */

struct RPC_DISPATCH_TABLE
{
  /* 0x0000 */ unsigned int DispatchTableCount;
  /* 0x0004 */ long Padding_370;
  /* 0x0008 */ void** DispatchTable /* function */;
  /* 0x0010 */ __int64 Reserved;
}; /* size: 0x0018 */

struct IChannelHook
{
}; /* size: 0x0008 */

typedef enum _SHRINK_VOLUME_REQUEST_TYPES
{
  ShrinkPrepare = 1,
  ShrinkCommit = 2,
  ShrinkAbort = 3,
} SHRINK_VOLUME_REQUEST_TYPES, *PSHRINK_VOLUME_REQUEST_TYPES;

typedef struct _ACL_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long AceCount;
  /* 0x0004 */ unsigned long AclBytesInUse;
  /* 0x0008 */ unsigned long AclBytesFree;
} ACL_SIZE_INFORMATION, *PACL_SIZE_INFORMATION; /* size: 0x000c */

enum DISPLAYCONFIG_PIXELFORMAT
{
  DISPLAYCONFIG_PIXELFORMAT_8BPP = 1,
  DISPLAYCONFIG_PIXELFORMAT_16BPP = 2,
  DISPLAYCONFIG_PIXELFORMAT_24BPP = 3,
  DISPLAYCONFIG_PIXELFORMAT_32BPP = 4,
  DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5,
  DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = -1,
};

enum tagDLFlags
{
  DL_SAME_AS_LOAD = 1,
  DL_NO_SCRIBBLE_MODE = 2,
  DL_DIRTY_LINK = 4,
  DL_LOCKED_CONTAINER = 8,
  DL_LOCKED_RUNNABLEOBJECT = 16,
  DL_LOCKED_OLEITEMCONTAINER = 32,
  DL_CLEANEDUP = 64,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

struct tagCREATESTRUCTW
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x0010 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndParent;
  /* 0x0020 */ int cy;
  /* 0x0024 */ int cx;
  /* 0x0028 */ int y;
  /* 0x002c */ int x;
  /* 0x0030 */ long style;
  /* 0x0034 */ long Padding_371;
  /* 0x0038 */ const wchar_t* lpszName;
  /* 0x0040 */ const wchar_t* lpszClass;
  /* 0x0048 */ unsigned long dwExStyle;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _LEARNING_MODE_LOG_LEVEL
{
  LearningModeLogLevelPassive = 0,
  LearningModeLogLevelNormalApc = 1,
  LearningModeLogLevelSpecialApc = 2,
  LearningModeLogLevelMax = 3,
} LEARNING_MODE_LOG_LEVEL, *PLEARNING_MODE_LOG_LEVEL;

class wistd::__compressed_pair<unsigned short *,wil::cotaskmem_secure_deleter>
{
}; /* size: 0x0008 */

class wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter>
{
  /* 0x0000 */ class wistd::__compressed_pair<unsigned short *,wil::cotaskmem_secure_deleter> __ptr_;
}; /* size: 0x0008 */

struct tagQUERYCONTEXT
{
  /* 0x0000 */ unsigned long dwContext;
  /* 0x0004 */ struct tagCSPLATFORM Platform;
  /* 0x0014 */ unsigned long Locale;
  /* 0x0018 */ unsigned long dwVersionHi;
  /* 0x001c */ unsigned long dwVersionLo;
}; /* size: 0x0020 */

enum tagSTGMOVE
{
  STGMOVE_MOVE = 0,
  STGMOVE_COPY = 1,
  STGMOVE_SHALLOWCOPY = 2,
};

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>
{
}; /* size: 0x0001 */

class wil::details::<lambda_0c906d58392d6bb09ce26349c7ffc916>
{
}; /* size: 0x0001 */

enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS
{
  DCDC_DEFAULT = 0,
  DCDC_DISABLE_FONT_UPDATE = 1,
  DCDC_DISABLE_RELAYOUT = 2,
};

class Windows::Storage::FileProperties::DocumentProperties;

enum tagOLELINKBIND
{
  OLELINKBIND_EVENIFCLASSDIFF = 1,
};

enum tagOLEUPDATE
{
  OLEUPDATE_ALWAYS = 1,
  OLEUPDATE_ONCALL = 3,
};

enum tagDIMENSION
{
  XDIMENSION = 88,
  YDIMENSION = 89,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *> >
{
}; /* size: 0x0008 */

typedef struct _DEVICE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Failed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long ReadOnly : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long Removable : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ConsoleIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long ConsoleOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Input : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Output : 1; /* bit position: 6 */
  }; /* bitfield */
} DEVICE_FLAGS, *PDEVICE_FLAGS; /* size: 0x0004 */

typedef struct _CM_COMPONENT_INFORMATION
{
  /* 0x0000 */ struct _DEVICE_FLAGS Flags;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Key;
  /* 0x000c */ long Padding_372;
  /* 0x0010 */ unsigned __int64 AffinityMask;
} CM_COMPONENT_INFORMATION, *PCM_COMPONENT_INFORMATION; /* size: 0x0018 */

enum tagSTGTY
{
  STGTY_STORAGE = 1,
  STGTY_STREAM = 2,
  STGTY_LOCKBYTES = 3,
  STGTY_PROPERTY = 4,
};

typedef struct _SYSTEM_BUILD_VERSION_INFORMATION
{
  /* 0x0000 */ unsigned short LayerNumber;
  /* 0x0002 */ unsigned short LayerCount;
  /* 0x0004 */ unsigned long OsMajorVersion;
  /* 0x0008 */ unsigned long OsMinorVersion;
  /* 0x000c */ unsigned long NtBuildNumber;
  /* 0x0010 */ unsigned long NtBuildQfe;
  /* 0x0014 */ unsigned char LayerName[128];
  /* 0x0094 */ unsigned char NtBuildBranch[128];
  /* 0x0114 */ unsigned char NtBuildLab[128];
  /* 0x0194 */ unsigned char NtBuildLabEx[128];
  /* 0x0214 */ unsigned char NtBuildStamp[26];
  /* 0x022e */ unsigned char NtBuildArch[16];
  /* 0x023e */ char Padding_373[2];
  union
  {
    union
    {
      /* 0x0240 */ unsigned long Value32;
      struct /* bitfield */
      {
        /* 0x0240 */ unsigned long IsTopLevel : 1; /* bit position: 0 */
        /* 0x0240 */ unsigned long IsChecked : 1; /* bit position: 1 */
      }; /* bitfield */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Flags;
} SYSTEM_BUILD_VERSION_INFORMATION, *PSYSTEM_BUILD_VERSION_INFORMATION; /* size: 0x0244 */

typedef enum _COVERAGE_REQUEST_CODES
{
  CoverageAllModules = 0,
  CoverageSearchByHash = 1,
  CoverageSearchByName = 2,
} COVERAGE_REQUEST_CODES, *PCOVERAGE_REQUEST_CODES;

struct tagSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ long Padding_374;
  union
  {
    /* 0x0008 */ struct HBITMAP__* hBitmap;
    /* 0x0008 */ void* hMetaFilePict;
    /* 0x0008 */ struct HENHMETAFILE__* hEnhMetaFile;
    /* 0x0008 */ void* hGlobal;
    /* 0x0008 */ wchar_t* lpszFileName;
    /* 0x0008 */ struct IStream* pstm;
    /* 0x0008 */ struct IStorage* pstg;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct IUnknown* pUnkForRelease;
}; /* size: 0x0018 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IOperationCompletedEventArgs *> >
{
}; /* size: 0x0008 */

typedef enum _EVENT_INFORMATION_CLASS
{
  EventBasicInformation = 0,
} EVENT_INFORMATION_CLASS, *PEVENT_INFORMATION_CLASS;

typedef struct _STREAMS_ASSOCIATE_ID_INPUT_BUFFER
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long StreamId;
} STREAMS_ASSOCIATE_ID_INPUT_BUFFER, *PSTREAMS_ASSOCIATE_ID_INPUT_BUFFER; /* size: 0x0008 */

typedef struct _TAPE_PREPARE
{
  /* 0x0000 */ unsigned long Operation;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_PREPARE, *PTAPE_PREPARE; /* size: 0x0008 */

enum DisconnectType
{
  NORMAL = 1,
  RELEASE = 2,
  APPLICATION = 4,
  UNINIT = 8,
  RUNDOWN = 16,
  SYSTEM = 32,
};

struct std::_WChar_traits<char16_t>
{
}; /* size: 0x0001 */

typedef enum _PO_SLEEP_DISABLE_REASON
{
  PoSleepDisableReasonVideo = 0,
  PoSleepDisableReasonHypervisor = 1,
  PoSleepDisableReasonVhdBoot = 2,
  PoSleepDisableReasonPortableWorkspace = 3,
  PoSleepDisableReasonPolicy = 4,
  PoSleepDisableReasonGuardedHost = 5,
  PoSleepDisableReasonMax = 6,
} PO_SLEEP_DISABLE_REASON, *PPO_SLEEP_DISABLE_REASON;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > const >;

typedef enum _PO_CS_DEVICE_NOTIFICATION_TYPE
{
  PoCsDeviceNotificationStorage = 0,
  PoCsDeviceNotificationWiFi = 1,
  PoCsDeviceNotificationMbn = 2,
  PoCsDeviceNotificationAudio = 3,
  PoCsDeviceNotificationEthernet = 4,
  PoCsDeviceNotificationMaximum = 5,
} PO_CS_DEVICE_NOTIFICATION_TYPE, *PPO_CS_DEVICE_NOTIFICATION_TYPE;

struct Windows::Foundation::IAsyncOperationCompletedHandler<double>
{
}; /* size: 0x0008 */

typedef enum _SUITE_TYPE
{
  SmallBusiness = 0,
  Enterprise = 1,
  BackOffice = 2,
  CommunicationServer = 3,
  TerminalServer = 4,
  SmallBusinessRestricted = 5,
  EmbeddedNT = 6,
  DataCenter = 7,
  SingleUserTS = 8,
  Personal = 9,
  Blade = 10,
  EmbeddedRestricted = 11,
  SecurityAppliance = 12,
  StorageServer = 13,
  ComputeServer = 14,
  WHServer = 15,
  PhoneNT = 16,
  MultiUserTS = 17,
  MaxSuiteType = 18,
} SUITE_TYPE, *PSUITE_TYPE;

typedef struct _RTL_AVL_TREE
{
  /* 0x0000 */ struct _RTL_BALANCED_NODE* Root;
} RTL_AVL_TREE, *PRTL_AVL_TREE; /* size: 0x0008 */

typedef enum _TIMER_TYPE
{
  NotificationTimer = 0,
  SynchronizationTimer = 1,
} TIMER_TYPE, *PTIMER_TYPE;

enum QUERY_USER_NOTIFICATION_STATE
{
  QUNS_NOT_PRESENT = 1,
  QUNS_BUSY = 2,
  QUNS_RUNNING_D3D_FULL_SCREEN = 3,
  QUNS_PRESENTATION_MODE = 4,
  QUNS_ACCEPTS_NOTIFICATIONS = 5,
  QUNS_QUIET_TIME = 6,
  QUNS_APP = 7,
};

typedef struct _TRACE_GUID_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* Guid;
  /* 0x0008 */ void* RegHandle;
} TRACE_GUID_REGISTRATION, *PTRACE_GUID_REGISTRATION; /* size: 0x0010 */

typedef enum _EVENT_TYPE
{
  NotificationEvent = 0,
  SynchronizationEvent = 1,
} EVENT_TYPE, *PEVENT_TYPE;

enum ECC_CURVE_ALG_ID_ENUM
{
  BCRYPT_NO_CURVE_GENERATION_ALG_ID = 0,
};

struct Windows::Foundation::Collections::IIterator<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short>
{
}; /* size: 0x0008 */

typedef enum _PNP_VETO_TYPE
{
  PNP_VetoTypeUnknown = 0,
  PNP_VetoLegacyDevice = 1,
  PNP_VetoPendingClose = 2,
  PNP_VetoWindowsApp = 3,
  PNP_VetoWindowsService = 4,
  PNP_VetoOutstandingOpen = 5,
  PNP_VetoDevice = 6,
  PNP_VetoDriver = 7,
  PNP_VetoIllegalDeviceRequest = 8,
  PNP_VetoInsufficientPower = 9,
  PNP_VetoNonDisableable = 10,
  PNP_VetoLegacyDriver = 11,
  PNP_VetoInsufficientRights = 12,
  PNP_VetoAlreadyRemoved = 13,
} PNP_VETO_TYPE, *PPNP_VETO_TYPE;

typedef struct _FILE_STANDARD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION; /* size: 0x0018 */

struct Windows::Foundation::ITypedEventHandler<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::ItemRemovedEventArgs *>
{
}; /* size: 0x0008 */

typedef struct _CERT_REVOCATION_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_375;
  /* 0x0008 */ void* hChainEngine;
  /* 0x0010 */ void* hAdditionalStore;
  /* 0x0018 */ unsigned long dwChainFlags;
  /* 0x001c */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0020 */ struct _FILETIME* pftCurrentTime;
  /* 0x0028 */ struct _FILETIME* pftCacheResync;
  /* 0x0030 */ unsigned long cbMaxUrlRetrievalByteCount;
  /* 0x0034 */ long __PADDING__[1];
} CERT_REVOCATION_CHAIN_PARA, *PCERT_REVOCATION_CHAIN_PARA; /* size: 0x0038 */

typedef enum _BOOT_ENTROPY_SOURCE_RESULT_CODE
{
  BootEntropySourceStructureUninitialized = 0,
  BootEntropySourceDisabledByPolicy = 1,
  BootEntropySourceNotPresent = 2,
  BootEntropySourceError = 3,
  BootEntropySourceSuccess = 4,
} BOOT_ENTROPY_SOURCE_RESULT_CODE, *PBOOT_ENTROPY_SOURCE_RESULT_CODE;

struct IDispatch
{
}; /* size: 0x0008 */

struct IWinRTRuntimeClassInfo
{
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_REFS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_376;
  /* 0x0008 */ struct _CRYPT_PROVIDER_REF** rgpProviders;
} CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS; /* size: 0x0010 */

enum COMPARTMENT_ID
{
  UNSPECIFIED_COMPARTMENT_ID = 0,
  DEFAULT_COMPARTMENT_ID = 1,
};

typedef struct _SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION
{
  /* 0x0000 */ void* HypervisorSharedUserVa;
} SYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION, *PSYSTEM_HYPERVISOR_SHARED_PAGE_INFORMATION; /* size: 0x0008 */

struct wistd::integral_constant<bool,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct tagExtentInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwExtentMode;
  /* 0x0008 */ struct tagSIZE sizelProposed;
}; /* size: 0x0010 */

class MultiplicationHelper<__int64,__int64,11>
{
}; /* size: 0x0001 */

class XWinRT::CElementTraits<HSTRING__ *>
{
}; /* size: 0x0002 */

typedef enum _IRQ_DEVICE_POLICY
{
  IrqPolicyMachineDefault = 0,
  IrqPolicyAllCloseProcessors = 1,
  IrqPolicyOneCloseProcessor = 2,
  IrqPolicyAllProcessorsInMachine = 3,
  IrqPolicySpecifiedProcessors = 4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 5,
  IrqPolicyAllProcessorsInMachineWhenSteered = 6,
} IRQ_DEVICE_POLICY, *PIRQ_DEVICE_POLICY;

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>
{
}; /* size: 0x0001 */

struct IMarshalEnvoy
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_MEMORY_LIST_COMMAND
{
  MemoryCaptureAccessedBits = 0,
  MemoryCaptureAndResetAccessedBits = 1,
  MemoryEmptyWorkingSets = 2,
  MemoryFlushModifiedList = 3,
  MemoryPurgeStandbyList = 4,
  MemoryPurgeLowPriorityStandbyList = 5,
  MemoryCommandMax = 6,
} SYSTEM_MEMORY_LIST_COMMAND, *PSYSTEM_MEMORY_LIST_COMMAND;

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,float>
{
}; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_PARSE_ERROR
{
  SQPE_NONE = 0,
  SQPE_EXTRA_OPENING_PARENTHESIS = 1,
  SQPE_EXTRA_CLOSING_PARENTHESIS = 2,
  SQPE_IGNORED_MODIFIER = 3,
  SQPE_IGNORED_CONNECTOR = 4,
  SQPE_IGNORED_KEYWORD = 5,
  SQPE_UNHANDLED = 6,
};

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001
{
  NEC_LOW = 0,
  NEC_MEDIUM = 1,
  NEC_HIGH = 2,
} _MIDL___MIDL_itf_structuredquery_0000_0012_0001, *P_MIDL___MIDL_itf_structuredquery_0000_0012_0001;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> > >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> >* ptr_;
}; /* size: 0x0008 */

enum EDGEUI_CORNEROREDGE
{
  EUICNR_UNKNOWN = -1,
  EUICNR_TOPLEFT = 0,
  EUICNR_TOPRIGHT = 1,
  EUICNR_BOTTOMLEFT = 2,
  EUICNR_BOTTOMRIGHT = 3,
  EUICNR_BOTTOM = 4,
  EUICNR_TOP = 5,
};

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned char>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>
{
}; /* size: 0x0001 */

typedef struct _PROCESS_ENERGY_TRACKING_STATE
{
  /* 0x0000 */ unsigned long StateUpdateMask;
  /* 0x0004 */ unsigned long StateDesiredValue;
  /* 0x0008 */ unsigned long StateSequence;
  /* 0x000c */ unsigned long UpdateTag : 1; /* bit position: 0 */
  /* 0x0010 */ wchar_t Tag[64];
} PROCESS_ENERGY_TRACKING_STATE, *PPROCESS_ENERGY_TRACKING_STATE; /* size: 0x0090 */

enum tagQUERY_PARSER_MANAGER_OPTION
{
  QPMO_SCHEMA_BINARY_NAME = 0,
  QPMO_PRELOCALIZED_SCHEMA_BINARY_PATH = 1,
  QPMO_UNLOCALIZED_SCHEMA_BINARY_PATH = 2,
  QPMO_LOCALIZED_SCHEMA_BINARY_PATH = 3,
  QPMO_APPEND_LCID_TO_LOCALIZED_PATH = 4,
  QPMO_LOCALIZER_SUPPORT = 5,
};

enum EDGEGESTURE_SWIPELOCATION
{
  EGSL_NA = 0,
  EGSL_NA_DESIGNMODE = 1,
  EGSL_TOP = 2,
  EGSL_BOTTOM = 3,
};

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>
{
}; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA
{
  /* 0x0000 */ void* UserFileHandle;
  /* 0x0008 */ long Status;
  /* 0x000c */ unsigned long DeviceInstanceLen;
  /* 0x0010 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_TARGET_RELATION_DATA, *PPLUGPLAY_CONTROL_TARGET_RELATION_DATA; /* size: 0x0018 */

enum EDGEUI_COMPONENT
{
  EUICMP_UNKNOWN = -1,
  EUICMP_SWITCHER = 0,
  EUICMP_CHARMSBAR = 1,
  EUICMP_APPBAR = 2,
  EUICMP_TASKBAR = 3,
  EUICMP_TITLEBAR = 4,
  EUICMP_TABLETMODEVIEWMANAGER = 5,
  EUICMP_ACTIONCENTER = 6,
  EUICMP_DASHBOARD = 7,
  EUICMP_TOTALCOUNT = 8,
};

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct _POWER_SESSION_WINLOGON
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned char Console;
  /* 0x0005 */ unsigned char Locked;
  /* 0x0006 */ char __PADDING__[2];
} POWER_SESSION_WINLOGON, *PPOWER_SESSION_WINLOGON; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_MULTIOPTION
{
  SQMO_VIRTUAL_PROPERTY = 0,
  SQMO_DEFAULT_PROPERTY = 1,
  SQMO_GENERATOR_FOR_TYPE = 2,
  SQMO_MAP_PROPERTY = 3,
};

struct wil::details::shared_object<wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_377;
  /* 0x0008 */ class wil::ActivityBase<ComTelemetryProvider,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTelemetryProvider,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

enum RAW_INPUT_MOUSE_BUTTON
{
  RIMB_LEFT = 0,
  RIMB_RIGHT = 1,
  RIMB_MIDDLE = 2,
  RIMB_BUTTON4 = 3,
  RIMB_BUTTON5 = 4,
};

struct std::_Char_traits<char,int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibrary *>
{
}; /* size: 0x0001 */

enum EDGEGESTURE_INVOCATION_KIND
{
  EGIK_TOUCH = 0,
  EGIK_KEYBOARD = 1,
  EGIK_MOUSE = 2,
};

typedef struct _OVERLAPPED
{
  /* 0x0000 */ unsigned __int64 Internal;
  /* 0x0008 */ unsigned __int64 InternalHigh;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned long Offset;
      /* 0x0014 */ unsigned long OffsetHigh;
    }; /* size: 0x0008 */
    /* 0x0010 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0018 */ void* hEvent;
} OVERLAPPED, *POVERLAPPED; /* size: 0x0020 */

class RunSyncOnMTAThread::__l2::<lambda_2c8f2a792b4da02e47c1023e6a4a2993>
{
  /* 0x0000 */ class RenderFormat::__l28::<lambda_ac11c26dd3ae65ee398a5e6a0af64263>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

struct IInternetProtocolInfo
{
}; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_SYNTAX
{
  SQS_NO_SYNTAX = 0,
  SQS_ADVANCED_QUERY_SYNTAX = 1,
  SQS_NATURAL_QUERY_SYNTAX = 2,
};

typedef struct _XMIT_ROUTINE_QUINTUPLE
{
  /* 0x0000 */ void* pfnTranslateToXmit /* function */;
  /* 0x0008 */ void* pfnTranslateFromXmit /* function */;
  /* 0x0010 */ void* pfnFreeXmit /* function */;
  /* 0x0018 */ void* pfnFreeInst /* function */;
} XMIT_ROUTINE_QUINTUPLE, *PXMIT_ROUTINE_QUINTUPLE; /* size: 0x0020 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0001 */

enum POWER_USER_PRESENCE_TYPE
{
  UserNotPresent = 0,
  UserPresent = 1,
  UserUnknown = 255,
};

class Microsoft::WRL::ComPtr<IComClassInfo>
{
  /* 0x0000 */ struct IComClassInfo* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> >;

typedef enum _SYSTEM_ACTIVITY_MODERATION_STATE
{
  SystemActivityModerationStateSystemManaged = 0,
  SystemActivityModerationStateUserManagedAllowThrottling = 1,
  SystemActivityModerationStateUserManagedDisableThrottling = 2,
  MaxSystemActivityModerationState = 3,
} SYSTEM_ACTIVITY_MODERATION_STATE, *PSYSTEM_ACTIVITY_MODERATION_STATE;

enum APPWINDOW_TRANSITION_TYPE
{
  AWTT_NONE = 0,
  AWTT_CROSSFADE = 1,
  AWTT_NO_SPRITE = 2,
  AWTT_CHARM_POPUP = 4,
};

struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

typedef enum _PROCESS_WORKING_SET_OPERATION
{
  ProcessWorkingSetSwap = 0,
  ProcessWorkingSetEmpty = 1,
  ProcessWorkingSetOperationMax = 2,
} PROCESS_WORKING_SET_OPERATION, *PPROCESS_WORKING_SET_OPERATION;

struct tagSTYLEBUFW
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ wchar_t szDescription[32];
}; /* size: 0x0044 */

typedef enum _tagOIBDG_FLAGS
{
  OIBDG_APARTMENTTHREADED = 256,
  OIBDG_DATAONLY = 4096,
} tagOIBDG_FLAGS, *PtagOIBDG_FLAGS;

class AdHocCallFrame<IOleInPlaceObject,<lambda_f9b153e28317f47b008789014cb39e3f> >
{
  /* 0x0000 */ long Padding_378[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::UIDeactivate::__l2::<lambda_f9b153e28317f47b008789014cb39e3f>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class wil::details::unique_storage<wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct EDP_CONTEXT* m_ptr;
}; /* size: 0x0008 */

typedef enum _REFS_STREAM_EXTENT_PROPERTIES
{
  REFS_STREAM_EXTENT_PROPERTY_VALID = 16,
  REFS_STREAM_EXTENT_PROPERTY_STREAM_RESERVED = 32,
  REFS_STREAM_EXTENT_PROPERTY_CRC32 = 128,
  REFS_STREAM_EXTENT_PROPERTY_CRC64 = 256,
  REFS_STREAM_EXTENT_PROPERTY_GHOSTED = 512,
  REFS_STREAM_EXTENT_PROPERTY_READONLY = 1024,
  REFS_STREAM_EXTENT_PROPERTY_SPARSE = 8,
} REFS_STREAM_EXTENT_PROPERTIES, *PREFS_STREAM_EXTENT_PROPERTIES;

struct _NDR_PROC_CONTEXT;

enum XLAT_SIDE
{
  XLAT_SERVER = 1,
  XLAT_CLIENT = 2,
};

struct Windows::Foundation::Collections::IMap_impl<_GUID,HSTRING__ *>
{
}; /* size: 0x0008 */

enum SHSTOCKICONID
{
  SIID_DOCNOASSOC = 0,
  SIID_DOCASSOC = 1,
  SIID_APPLICATION = 2,
  SIID_FOLDER = 3,
  SIID_FOLDEROPEN = 4,
  SIID_DRIVE525 = 5,
  SIID_DRIVE35 = 6,
  SIID_DRIVEREMOVE = 7,
  SIID_DRIVEFIXED = 8,
  SIID_DRIVENET = 9,
  SIID_DRIVENETDISABLED = 10,
  SIID_DRIVECD = 11,
  SIID_DRIVERAM = 12,
  SIID_WORLD = 13,
  SIID_SERVER = 15,
  SIID_PRINTER = 16,
  SIID_MYNETWORK = 17,
  SIID_FIND = 22,
  SIID_HELP = 23,
  SIID_SHARE = 28,
  SIID_LINK = 29,
  SIID_SLOWFILE = 30,
  SIID_RECYCLER = 31,
  SIID_RECYCLERFULL = 32,
  SIID_MEDIACDAUDIO = 40,
  SIID_LOCK = 47,
  SIID_AUTOLIST = 49,
  SIID_PRINTERNET = 50,
  SIID_SERVERSHARE = 51,
  SIID_PRINTERFAX = 52,
  SIID_PRINTERFAXNET = 53,
  SIID_PRINTERFILE = 54,
  SIID_STACK = 55,
  SIID_MEDIASVCD = 56,
  SIID_STUFFEDFOLDER = 57,
  SIID_DRIVEUNKNOWN = 58,
  SIID_DRIVEDVD = 59,
  SIID_MEDIADVD = 60,
  SIID_MEDIADVDRAM = 61,
  SIID_MEDIADVDRW = 62,
  SIID_MEDIADVDR = 63,
  SIID_MEDIADVDROM = 64,
  SIID_MEDIACDAUDIOPLUS = 65,
  SIID_MEDIACDRW = 66,
  SIID_MEDIACDR = 67,
  SIID_MEDIACDBURN = 68,
  SIID_MEDIABLANKCD = 69,
  SIID_MEDIACDROM = 70,
  SIID_AUDIOFILES = 71,
  SIID_IMAGEFILES = 72,
  SIID_VIDEOFILES = 73,
  SIID_MIXEDFILES = 74,
  SIID_FOLDERBACK = 75,
  SIID_FOLDERFRONT = 76,
  SIID_SHIELD = 77,
  SIID_WARNING = 78,
  SIID_INFO = 79,
  SIID_ERROR = 80,
  SIID_KEY = 81,
  SIID_SOFTWARE = 82,
  SIID_RENAME = 83,
  SIID_DELETE = 84,
  SIID_MEDIAAUDIODVD = 85,
  SIID_MEDIAMOVIEDVD = 86,
  SIID_MEDIAENHANCEDCD = 87,
  SIID_MEDIAENHANCEDDVD = 88,
  SIID_MEDIAHDDVD = 89,
  SIID_MEDIABLURAY = 90,
  SIID_MEDIAVCD = 91,
  SIID_MEDIADVDPLUSR = 92,
  SIID_MEDIADVDPLUSRW = 93,
  SIID_DESKTOPPC = 94,
  SIID_MOBILEPC = 95,
  SIID_USERS = 96,
  SIID_MEDIASMARTMEDIA = 97,
  SIID_MEDIACOMPACTFLASH = 98,
  SIID_DEVICECELLPHONE = 99,
  SIID_DEVICECAMERA = 100,
  SIID_DEVICEVIDEOCAMERA = 101,
  SIID_DEVICEAUDIOPLAYER = 102,
  SIID_NETWORKCONNECT = 103,
  SIID_INTERNET = 104,
  SIID_ZIPFILE = 105,
  SIID_SETTINGS = 106,
  SIID_DRIVEHDDVD = 132,
  SIID_DRIVEBD = 133,
  SIID_MEDIAHDDVDROM = 134,
  SIID_MEDIAHDDVDR = 135,
  SIID_MEDIAHDDVDRAM = 136,
  SIID_MEDIABDROM = 137,
  SIID_MEDIABDR = 138,
  SIID_MEDIABDRE = 139,
  SIID_CLUSTEREDDRIVE = 140,
  SIID_MAX_ICONS = 181,
};

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef enum _CM_SHARE_DISPOSITION
{
  CmResourceShareUndetermined = 0,
  CmResourceShareDeviceExclusive = 1,
  CmResourceShareDriverExclusive = 2,
  CmResourceShareShared = 3,
} CM_SHARE_DISPOSITION, *PCM_SHARE_DISPOSITION;

struct std::_Default_allocator_traits<std::allocator<char32_t> >
{
}; /* size: 0x0001 */

typedef enum _RPC_ASYNC_EVENT
{
  RpcCallComplete = 0,
  RpcSendComplete = 1,
  RpcReceiveComplete = 2,
  RpcClientDisconnect = 3,
  RpcClientCancel = 4,
} RPC_ASYNC_EVENT, *PRPC_ASYNC_EVENT;

typedef enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE
{
  SystemActivityModerationAppTypeClassic = 0,
  SystemActivityModerationAppTypePackaged = 1,
  MaxSystemActivityModerationAppType = 2,
} SYSTEM_ACTIVITY_MODERATION_APP_TYPE, *PSYSTEM_ACTIVITY_MODERATION_APP_TYPE;

typedef enum _WNF_STATE_NAME_LIFETIME
{
  WnfWellKnownStateName = 0,
  WnfPermanentStateName = 1,
  WnfPersistentStateName = 2,
  WnfTemporaryStateName = 3,
} WNF_STATE_NAME_LIFETIME, *PWNF_STATE_NAME_LIFETIME;

struct wistd::integral_constant<unsigned __int64,0>
{
  /* 0x0000 */ const unsigned __int64 value;
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_343
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_343, *PTAG_UNNAMED_343;

class CancellableCall
{
  /* 0x0000 */ unsigned long m_tid;
  /* 0x0004 */ HRESULT m_hr;
  /* 0x0008 */ class CancellableCall* m_pPrevious;
  /* 0x0010 */ class CancellableCall* m_pNext;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >
{
}; /* size: 0x0001 */

typedef enum _RTL_FEATURE_ENABLED_STATE
{
  FeatureEnabledStateDefault = 0,
  FeatureEnabledStateDisabled = 1,
  FeatureEnabledStateEnabled = 2,
} RTL_FEATURE_ENABLED_STATE, *PRTL_FEATURE_ENABLED_STATE;

typedef union _MM_ETW_PAGE_EXTRA_INFO
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 SharedInitial : 1; /* bit position: 0 */
    } /* size: 0x0008 */ e1;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 WorkingSetType : 2; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 NotAddedtoWS : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned __int64 COWFault : 1; /* bit position: 3 */
      }; /* bitfield */
    } /* size: 0x0008 */ e2;
    /* 0x0000 */ unsigned __int64 ProtoPte;
    /* 0x0000 */ void* VirtualAddress;
  }; /* size: 0x0008 */
} MM_ETW_PAGE_EXTRA_INFO, *PMM_ETW_PAGE_EXTRA_INFO; /* size: 0x0008 */

typedef enum _IRQ_PRIORITY
{
  IrqPriorityUndefined = 0,
  IrqPriorityLow = 1,
  IrqPriorityNormal = 2,
  IrqPriorityHigh = 3,
} IRQ_PRIORITY, *PIRQ_PRIORITY;

typedef struct _PROCESS_HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned long NumberOfHeaps;
  /* 0x0014 */ long Padding_379;
  /* 0x0018 */ unsigned __int64 FirstHeapInformationOffset;
} PROCESS_HEAP_INFORMATION, *PPROCESS_HEAP_INFORMATION; /* size: 0x0020 */

typedef struct _HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Mode;
  /* 0x000c */ long Padding_380;
  /* 0x0010 */ unsigned __int64 ReserveSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
  /* 0x0020 */ unsigned __int64 FirstRegionInformationOffset;
  /* 0x0028 */ unsigned __int64 NextHeapInformationOffset;
} HEAP_INFORMATION, *PHEAP_INFORMATION; /* size: 0x0030 */

typedef struct _HEAP_EXTENDED_INFORMATION
{
  /* 0x0000 */ void* Process;
  /* 0x0008 */ unsigned __int64 Heap;
  /* 0x0010 */ unsigned long Level;
  /* 0x0014 */ long Padding_381;
  /* 0x0018 */ void* CallbackRoutine /* function */;
  /* 0x0020 */ void* CallbackContext;
  union
  {
    /* 0x0028 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0028 */ struct _HEAP_INFORMATION HeapInformation;
  }; /* size: 0x0030 */
} HEAP_EXTENDED_INFORMATION, *PHEAP_EXTENDED_INFORMATION; /* size: 0x0058 */

typedef enum _TAG_UNNAMED_344
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_344, *PTAG_UNNAMED_344;

class OleGetClipboardWithEnterpriseInfo::__l2::<lambda_8727e92fd6266caa8ecc4c31050fae19>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0008 */

enum RPC_ADDRESS_CHANGE_TYPE
{
  PROTOCOL_NOT_LOADED = 1,
  PROTOCOL_LOADED = 2,
  PROTOCOL_ADDRESS_CHANGE = 3,
};

struct Windows::Foundation::IAsyncOperation_impl<enum Windows::System::UserAgeConsentResult>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>
{
}; /* size: 0x0008 */

enum ORIENTATION_PREFERENCE
{
  ORIENTATION_PREFERENCE_NONE = 0,
  ORIENTATION_PREFERENCE_LANDSCAPE = 1,
  ORIENTATION_PREFERENCE_PORTRAIT = 2,
  ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 4,
  ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 8,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::System::UserAgeConsentResult>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_345
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_345, *PTAG_UNNAMED_345;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassInfo> >
{
}; /* size: 0x0008 */

class CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_382[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_383[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

typedef enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = -1,
  Internal = 0,
  Isa = 1,
  Eisa = 2,
  MicroChannel = 3,
  TurboChannel = 4,
  PCIBus = 5,
  VMEBus = 6,
  NuBus = 7,
  PCMCIABus = 8,
  CBus = 9,
  MPIBus = 10,
  MPSABus = 11,
  ProcessorInternal = 12,
  InternalPowerBus = 13,
  PNPISABus = 14,
  PNPBus = 15,
  Vmcs = 16,
  ACPIBus = 17,
  MaximumInterfaceType = 18,
} INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef enum _TAG_UNNAMED_346
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_346, *PTAG_UNNAMED_346;

struct tagLICINFO
{
  /* 0x0000 */ long cbLicInfo;
  /* 0x0004 */ int fRuntimeKeyAvail;
  /* 0x0008 */ int fLicVerified;
}; /* size: 0x000c */

typedef enum _TAG_UNNAMED_347
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_347, *PTAG_UNNAMED_347;

struct IOleInPlaceSiteWindowless
{
}; /* size: 0x0008 */

struct Windows::UI::Color
{
  /* 0x0000 */ unsigned char A;
  /* 0x0001 */ unsigned char R;
  /* 0x0002 */ unsigned char G;
  /* 0x0003 */ unsigned char B;
}; /* size: 0x0004 */

typedef enum _RTL_VERIFIER_REDIRECT_TYPE
{
  VerifierGPALookup = 0,
  VerifierDelayloadLookup = 1,
  VerifierLegacyLookup = 2,
  VerifierMaxLookupType = 3,
} RTL_VERIFIER_REDIRECT_TYPE, *PRTL_VERIFIER_REDIRECT_TYPE;

struct Windows::Foundation::IReferenceArray<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

typedef enum _REFS_SMR_VOLUME_GC_METHOD
{
  SmrGcMethodCompaction = 1,
  SmrGcMethodCompression = 2,
  SmrGcMethodRotation = 3,
} REFS_SMR_VOLUME_GC_METHOD, *PREFS_SMR_VOLUME_GC_METHOD;

struct Windows::Foundation::Collections::IMap_impl<__int64,HSTRING__ *>
{
}; /* size: 0x0008 */

struct SYMSRV_EXTENDED_OUTPUT_DATA
{
  /* 0x0000 */ unsigned long sizeOfStruct;
  /* 0x0004 */ unsigned long version;
  /* 0x0008 */ wchar_t filePtrMsg[261];
  /* 0x0212 */ char __PADDING__[2];
}; /* size: 0x0214 */

typedef enum _TAG_UNNAMED_348
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_348, *PTAG_UNNAMED_348;

struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IBuffer *,unsigned int>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_349
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_349, *PTAG_UNNAMED_349;

struct DISPLAYCONFIG_RATIONAL
{
  /* 0x0000 */ unsigned int Numerator;
  /* 0x0004 */ unsigned int Denominator;
}; /* size: 0x0008 */

struct DISPLAYCONFIG_2DREGION
{
  /* 0x0000 */ unsigned int cx;
  /* 0x0004 */ unsigned int cy;
}; /* size: 0x0008 */

struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO
{
  /* 0x0000 */ unsigned __int64 pixelRate;
  /* 0x0008 */ struct DISPLAYCONFIG_RATIONAL hSyncFreq;
  /* 0x0010 */ struct DISPLAYCONFIG_RATIONAL vSyncFreq;
  /* 0x0018 */ struct DISPLAYCONFIG_2DREGION activeSize;
  /* 0x0020 */ struct DISPLAYCONFIG_2DREGION totalSize;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0028 */ unsigned int videoStandard : 16; /* bit position: 0 */
        /* 0x0028 */ unsigned int vSyncFreqDivider : 6; /* bit position: 16 */
        /* 0x0028 */ unsigned int reserved : 10; /* bit position: 22 */
      }; /* bitfield */
    } /* size: 0x0004 */ AdditionalSignalInfo;
    /* 0x0028 */ unsigned int videoStandard;
  }; /* size: 0x0004 */
  /* 0x002c */ enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
}; /* size: 0x0030 */

struct DISPLAYCONFIG_TARGET_MODE
{
  /* 0x0000 */ struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO targetVideoSignalInfo;
}; /* size: 0x0030 */

struct DISPLAYCONFIG_TARGET_PREFERRED_MODE
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ unsigned int width;
  /* 0x0018 */ unsigned int height;
  /* 0x001c */ long Padding_384;
  /* 0x0020 */ struct DISPLAYCONFIG_TARGET_MODE targetMode;
}; /* size: 0x0050 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_350
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_350, *PTAG_UNNAMED_350;

typedef enum _TAG_UNNAMED_351
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_351, *PTAG_UNNAMED_351;

struct Microsoft::WRL::CloakedIid<IMarshal>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_352
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_352, *PTAG_UNNAMED_352;

struct Microsoft::WRL::DelegateTraits<-1>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_353
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_353, *PTAG_UNNAMED_353;

struct Windows::Foundation::Collections::IIterable<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *,1>
{
}; /* size: 0x0008 */

typedef enum _SECURE_SETTING_VALUE_TYPE
{
  SecureSettingValueTypeBoolean = 0,
  SecureSettingValueTypeUlong = 1,
  SecureSettingValueTypeBinary = 2,
  SecureSettingValueTypeString = 3,
  SecureSettingValueTypeUnknown = 4,
} SECURE_SETTING_VALUE_TYPE, *PSECURE_SETTING_VALUE_TYPE;

struct tagLOGFONTW
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ wchar_t lfFaceName[32];
}; /* size: 0x005c */

struct tagNONCLIENTMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTW lfCaptionFont;
  /* 0x0074 */ int iSmCaptionWidth;
  /* 0x0078 */ int iSmCaptionHeight;
  /* 0x007c */ struct tagLOGFONTW lfSmCaptionFont;
  /* 0x00d8 */ int iMenuWidth;
  /* 0x00dc */ int iMenuHeight;
  /* 0x00e0 */ struct tagLOGFONTW lfMenuFont;
  /* 0x013c */ struct tagLOGFONTW lfStatusFont;
  /* 0x0198 */ struct tagLOGFONTW lfMessageFont;
  /* 0x01f4 */ int iPaddedBorderWidth;
}; /* size: 0x01f8 */

typedef enum _LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION
{
  MarshalDirectionMarshal = 0,
  MarshalDirectionUnmarshal = 1,
} LRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION, *PLRPC_SYSTEM_HANDLE_MARSHAL_DIRECTION;

struct OleThunkWOW
{
}; /* size: 0x0008 */

struct READ_USN_JOURNAL_DATA_V1
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
  /* 0x0028 */ unsigned short MinMajorVersion;
  /* 0x002a */ unsigned short MaxMajorVersion;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IBindCtx> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IBindCtx>* ptr_;
}; /* size: 0x0008 */

typedef struct _NT_TIB32
{
  /* 0x0000 */ unsigned long ExceptionList;
  /* 0x0004 */ unsigned long StackBase;
  /* 0x0008 */ unsigned long StackLimit;
  /* 0x000c */ unsigned long SubSystemTib;
  union
  {
    /* 0x0010 */ unsigned long FiberData;
    /* 0x0010 */ unsigned long Version;
  }; /* size: 0x0004 */
  /* 0x0014 */ unsigned long ArbitraryUserPointer;
  /* 0x0018 */ unsigned long Self;
} NT_TIB32, *PNT_TIB32; /* size: 0x001c */

typedef struct _tagDATAINFO
{
  /* 0x0000 */ unsigned long ulTotalSize;
  /* 0x0004 */ unsigned long ulavrPacketSize;
  /* 0x0008 */ unsigned long ulConnectSpeed;
  /* 0x000c */ unsigned long ulProcessorSpeed;
} tagDATAINFO, *PtagDATAINFO; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_354
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_354, *PTAG_UNNAMED_354;

typedef enum _TAG_UNNAMED_355
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_355, *PTAG_UNNAMED_355;

struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable_imp<<lambda_35813abc48134a673502c50f3be72d9b>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct HSTRING_BUFFER__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Windows::Foundation::Collections::IIterable<short>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_356
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_356, *PTAG_UNNAMED_356;

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>
{
  /* 0x0000 */ long Padding_385[2];
  /* 0x0008 */ void* handle_;
}; /* size: 0x0010 */

enum MEM_SECTION_EXTENDED_PARAMETER_TYPE
{
  MemSectionExtendedParameterInvalidType = 0,
  MemSectionExtendedParameterUserPhysicalFlags = 1,
  MemSectionExtendedParameterNumaNode = 2,
  MemSectionExtendedParameterSigningLevel = 3,
  MemSectionExtendedParameterMax = 4,
};

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFolder *,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _MINIDUMP_SYSTEM_INFO
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  union
  {
    /* 0x0006 */ unsigned short Reserved0;
    struct
    {
      /* 0x0006 */ unsigned char NumberOfProcessors;
      /* 0x0007 */ unsigned char ProductType;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x0008 */ unsigned int MajorVersion;
  /* 0x000c */ unsigned int MinorVersion;
  /* 0x0010 */ unsigned int BuildNumber;
  /* 0x0014 */ unsigned int PlatformId;
  /* 0x0018 */ unsigned long CSDVersionRva;
  union
  {
    /* 0x001c */ unsigned int Reserved1;
    struct
    {
      /* 0x001c */ unsigned short SuiteMask;
      /* 0x001e */ unsigned short Reserved2;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0020 */ union _CPU_INFORMATION Cpu;
} MINIDUMP_SYSTEM_INFO, *PMINIDUMP_SYSTEM_INFO; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_357
{
  _tlgLevelConst = 2,
} TAG_UNNAMED_357, *PTAG_UNNAMED_357;

struct wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]>
{
}; /* size: 0x0001 */

struct wil::details::shared_object<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_386;
  /* 0x0008 */ class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

struct Windows::Foundation::Collections::IIterable<unsigned char>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_358
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_358, *PTAG_UNNAMED_358;

struct Windows::Foundation::Collections::IIterator_impl<int,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<_GUID,1>
{
}; /* size: 0x0008 */

enum SERVICE_SHARED_DIRECTORY_TYPE
{
  ServiceSharedDirectoryPersistentState = 0,
};

class std::chrono::duration<int,std::ratio<3600,1> >
{
  /* 0x0000 */ int _MyRep;
}; /* size: 0x0004 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Data::Text::TextSegment,0>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_359
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_359, *PTAG_UNNAMED_359;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>
{
}; /* size: 0x0008 */

struct tagRGBQUAD
{
  /* 0x0000 */ unsigned char rgbBlue;
  /* 0x0001 */ unsigned char rgbGreen;
  /* 0x0002 */ unsigned char rgbRed;
  /* 0x0003 */ unsigned char rgbReserved;
}; /* size: 0x0004 */

struct IProcessLock
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_360
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_360, *PTAG_UNNAMED_360;

typedef enum _HEAP_MEMORY_INFO_CLASS
{
  HeapMemoryBasicInformation = 0,
} HEAP_MEMORY_INFO_CLASS, *PHEAP_MEMORY_INFO_CLASS;

class wil::ProcessThreadFailureCache
{
  /* 0x0000 */ long Padding_387[2];
  /* 0x0008 */ class wil::StoredFailureInfo m_failure;
  /* 0x00b0 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HWILFAILUREWATCH__ *,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,wistd::integral_constant<unsigned __int64,0>,HWILFAILUREWATCH__ *,HWILFAILUREWATCH__ *,0,std::nullptr_t> > > m_watch;
}; /* size: 0x00b8 */

typedef enum _RTL_UMS_THREAD_INFO_CLASS
{
  UmsThreadInvalidInfoClass = 0,
  UmsThreadUserContext = 1,
  UmsThreadPriority = 2,
  UmsThreadAffinity = 3,
  UmsThreadTeb = 4,
  UmsThreadIsSuspended = 5,
  UmsThreadIsTerminated = 6,
  UmsThreadMaxInfoClass = 7,
} RTL_UMS_THREAD_INFO_CLASS, *PRTL_UMS_THREAD_INFO_CLASS;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::ImageProperties *>
{
}; /* size: 0x0008 */

class CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_388[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_389[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

struct wil::details::shared_object<wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_390;
  /* 0x0008 */ class wil::ActivityBase<wil::details::ApiTelemetryLogger,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<wil::details::ApiTelemetryLogger,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

struct provider_info
{
  /* 0x0000 */ void* pi_R0_1val /* function */;
  /* 0x0008 */ void* pi_R0_allvals /* function */;
  /* 0x0010 */ void* pi_R3_1val /* function */;
  /* 0x0018 */ void* pi_R3_allvals /* function */;
  /* 0x0020 */ unsigned long pi_flags;
  /* 0x0024 */ long Padding_391;
  /* 0x0028 */ void* pi_key_context;
}; /* size: 0x0030 */

typedef enum _IO_COMPLETION_INFORMATION_CLASS
{
  IoCompletionBasicInformation = 0,
} IO_COMPLETION_INFORMATION_CLASS, *PIO_COMPLETION_INFORMATION_CLASS;

class AdHocCallFrame<ISearchProtocol,<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe> >
{
  /* 0x0000 */ long Padding_392[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::ShutDown::__l2::<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::UI::WindowId>
{
}; /* size: 0x0008 */

typedef enum _SUSPEND_RESILIENCY_STATE
{
  SuspendResiliencyStateUnknown = 0,
  SuspendResiliencyStateSuspending = 1,
  SuspendResiliencyStateResuming = 2,
  SuspendResiliencyStateTerminating = 3,
  SuspendResiliencyStateSuspended = 4,
  SuspendResiliencyStateRunning = 5,
} SUSPEND_RESILIENCY_STATE, *PSUSPEND_RESILIENCY_STATE;

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *>;

enum CM_EXTENDED_PARAMETER_TYPE
{
  CmExtendedParameterInvalidType = 0,
  CmExtendedParameterTrustClassKey = 1,
  CmExtendedParameterEvent = 2,
  CmExtendedParameterFileAccessToken = 3,
  CmExtendedParameterMax = 4,
};

class CMultiGUIDHashTable
{
}; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperationProgressHandler<HSTRING__ *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef enum _WNF_DATA_SCOPE
{
  WnfDataScopeSystem = 0,
  WnfDataScopeSession = 1,
  WnfDataScopeUser = 2,
  WnfDataScopeProcess = 3,
  WnfDataScopeMachine = 4,
  WnfDataScopePhysicalMachine = 5,
} WNF_DATA_SCOPE, *PWNF_DATA_SCOPE;

typedef enum _PROC_THREAD_ATTRIBUTE_NUM
{
  ProcThreadAttributeParentProcess = 0,
  ProcThreadAttributeHandleList = 2,
  ProcThreadAttributeGroupAffinity = 3,
  ProcThreadAttributePreferredNode = 4,
  ProcThreadAttributeIdealProcessor = 5,
  ProcThreadAttributeUmsThread = 6,
  ProcThreadAttributeMitigationPolicy = 7,
  ProcThreadAttributeSecurityCapabilities = 9,
  ProcThreadAttributeProtectionLevel = 11,
  ProcThreadAttributeJobList = 13,
  ProcThreadAttributeChildProcessPolicy = 14,
  ProcThreadAttributeAllApplicationPackagesPolicy = 15,
  ProcThreadAttributeWin32kFilter = 16,
  ProcThreadAttributeSafeOpenPromptOriginClaim = 17,
  ProcThreadAttributeDesktopAppPolicy = 18,
  ProcThreadAttributePseudoConsole = 22,
  ProcThreadAttributeMitigationAuditPolicy = 24,
  ProcThreadAttributeMachineType = 25,
  ProcThreadAttributeComponentFilter = 26,
  ProcThreadAttributeEnableOptionalXStateFeatures = 27,
  ProcThreadAttributeTrustedApp = 29,
} PROC_THREAD_ATTRIBUTE_NUM, *PPROC_THREAD_ATTRIBUTE_NUM;

typedef struct _MINIDUMP_EXCEPTION
{
  /* 0x0000 */ unsigned int ExceptionCode;
  /* 0x0004 */ unsigned int ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned int NumberParameters;
  /* 0x001c */ unsigned int __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} MINIDUMP_EXCEPTION, *PMINIDUMP_EXCEPTION; /* size: 0x0098 */

struct MINIDUMP_EXCEPTION_STREAM
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int __alignment;
  /* 0x0008 */ struct _MINIDUMP_EXCEPTION ExceptionRecord;
  /* 0x00a0 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
}; /* size: 0x00a8 */

enum WIN32_MEMORY_INFORMATION_CLASS
{
  MemoryRegionInfo = 0,
};

class wil::details::shared_object<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<OleClipboardTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleClipboardTracing,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

typedef enum _THREAD_STATE_CHANGE_TYPE
{
  ThreadStateChangeSuspend = 0,
  ThreadStateChangeResume = 1,
  ThreadStateChangeMax = 2,
} THREAD_STATE_CHANGE_TYPE, *PTHREAD_STATE_CHANGE_TYPE;

enum tagSF_TYPE
{
  SF_ERROR = 10,
  SF_I1 = 16,
  SF_I2 = 2,
  SF_I4 = 3,
  SF_I8 = 20,
  SF_BSTR = 8,
  SF_UNKNOWN = 13,
  SF_DISPATCH = 9,
  SF_VARIANT = 12,
  SF_RECORD = 36,
  SF_HAVEIID = 0xffff800d,
};

struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Foundation::IPropertyValue *>
{
}; /* size: 0x0008 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_5f36165614e701fb976ba4b91ba80c82> >
{
  /* 0x0000 */ long Padding_393[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::SetObjectRects::__l2::<lambda_5f36165614e701fb976ba4b91ba80c82>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct IProxyManager
{
}; /* size: 0x0008 */

typedef enum _MEMORY_EXHAUSTION_TYPE
{
  MemoryExhaustionTypeFailFastOnCommitFailure = 0,
  MemoryExhaustionTypeMax = 1,
} MEMORY_EXHAUSTION_TYPE, *PMEMORY_EXHAUSTION_TYPE;

class std::thread::id
{
  /* 0x0000 */ unsigned int _Id;
}; /* size: 0x0004 */

typedef struct _tlgWrapperByVal<2>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const unsigned short Value;
  }; /* size: 0x0004 */
} tlgWrapperByVal<2>, *PtlgWrapperByVal<2>; /* size: 0x0002 */

typedef enum _QUERY_FILE_LAYOUT_FILTER_TYPE
{
  QUERY_FILE_LAYOUT_FILTER_TYPE_NONE = 0,
  QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS = 1,
  QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID = 2,
  QUERY_FILE_LAYOUT_FILTER_TYPE_STORAGE_RESERVE_ID = 3,
  QUERY_FILE_LAYOUT_NUM_FILTER_TYPES = 4,
} QUERY_FILE_LAYOUT_FILTER_TYPE, *PQUERY_FILE_LAYOUT_FILTER_TYPE;

struct IServiceHostBrokerProvider
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>
{
}; /* size: 0x0001 */

typedef struct _POWER_SESSION_RIT_STATE
{
  /* 0x0000 */ unsigned char Active;
  /* 0x0001 */ char Padding_394[7];
  /* 0x0008 */ unsigned __int64 LastInputTime;
} POWER_SESSION_RIT_STATE, *PPOWER_SESSION_RIT_STATE; /* size: 0x0010 */

typedef enum _COPYFILE2_COPY_PHASE
{
  COPYFILE2_PHASE_NONE = 0,
  COPYFILE2_PHASE_PREPARE_SOURCE = 1,
  COPYFILE2_PHASE_PREPARE_DEST = 2,
  COPYFILE2_PHASE_READ_SOURCE = 3,
  COPYFILE2_PHASE_WRITE_DESTINATION = 4,
  COPYFILE2_PHASE_SERVER_COPY = 5,
  COPYFILE2_PHASE_NAMEGRAFT_COPY = 6,
  COPYFILE2_PHASE_MAX = 7,
} COPYFILE2_COPY_PHASE, *PCOPYFILE2_COPY_PHASE;

typedef enum _WOW64_FUNCTION_CODE64
{
  WOW64_FUNCTION_NOP = 0,
  WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
  WOW64_FUNCTION_CPU_TURBO_THUNK_CONTROL = 2,
  WOW64_FUNCTION_CPU_CFG_DISPATCH_CONTROL = 3,
  WOW64_FUNCTION_CPU_OPTIMIZE_CHPE_IMPORT_THUNKS = 4,
  WOW64_FUNCTION_MAXIMUM = 5,
} WOW64_FUNCTION_CODE64, *PWOW64_FUNCTION_CODE64;

struct Windows::Foundation::Collections::IMap<__int64,float>
{
}; /* size: 0x0008 */

typedef enum _LDR_DDAG_STATE
{
  LdrModulesMerged = -5,
  LdrModulesInitError = -4,
  LdrModulesSnapError = -3,
  LdrModulesUnloaded = -2,
  LdrModulesUnloading = -1,
  LdrModulesPlaceHolder = 0,
  LdrModulesMapping = 1,
  LdrModulesMapped = 2,
  LdrModulesWaitingForDependencies = 3,
  LdrModulesSnapping = 4,
  LdrModulesSnapped = 5,
  LdrModulesCondensed = 6,
  LdrModulesReadyToInit = 7,
  LdrModulesInitializing = 8,
  LdrModulesReadyToRun = 9,
} LDR_DDAG_STATE, *PLDR_DDAG_STATE;

typedef enum _RTL_IMAGE_MITIGATION_OPTION_STATE
{
  RtlMitigationOptionStateNotConfigured = 0,
  RtlMitigationOptionStateOn = 1,
  RtlMitigationOptionStateOff = 2,
} RTL_IMAGE_MITIGATION_OPTION_STATE, *PRTL_IMAGE_MITIGATION_OPTION_STATE;

typedef enum __MIDL_IInternetZoneManager_0002
{
  ZAFLAGS_CUSTOM_EDIT = 1,
  ZAFLAGS_ADD_SITES = 2,
  ZAFLAGS_REQUIRE_VERIFICATION = 4,
  ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8,
  ZAFLAGS_INCLUDE_INTRANET_SITES = 16,
  ZAFLAGS_NO_UI = 32,
  ZAFLAGS_SUPPORTS_VERIFICATION = 64,
  ZAFLAGS_UNC_AS_INTRANET = 128,
  ZAFLAGS_DETECT_INTRANET = 256,
  ZAFLAGS_USE_LOCKED_ZONES = 0x10000,
  ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 0x20000,
  ZAFLAGS_NO_CACHE = 0x40000,
} _MIDL_IInternetZoneManager_0002, *P_MIDL_IInternetZoneManager_0002;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> >
{
}; /* size: 0x0008 */

typedef enum _IO_PRIORITY_HINT
{
  IoPriorityVeryLow = 0,
  IoPriorityLow = 1,
  IoPriorityNormal = 2,
  IoPriorityHigh = 3,
  IoPriorityCritical = 4,
  MaxIoPriorityTypes = 5,
} IO_PRIORITY_HINT, *PIO_PRIORITY_HINT;

struct API_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Reserved;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::UI::WindowId>
{
}; /* size: 0x0008 */

typedef enum _REFS_SMR_VOLUME_GC_STATE
{
  SmrGcStateInactive = 0,
  SmrGcStatePaused = 1,
  SmrGcStateActive = 2,
  SmrGcStateActiveFullSpeed = 3,
} REFS_SMR_VOLUME_GC_STATE, *PREFS_SMR_VOLUME_GC_STATE;

struct xtime
{
  /* 0x0000 */ __int64 sec;
  /* 0x0008 */ long nsec;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class Microsoft::WRL::Details::FtmBaseMarker
{
}; /* size: 0x0001 */

class wil::details::<lambda_0db01107b65731fa8f3a260111595080>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<IInspectable *>
{
}; /* size: 0x0008 */

typedef enum _FUNCTION_TABLE_TYPE
{
  RF_SORTED = 0,
  RF_UNSORTED = 1,
  RF_CALLBACK = 2,
  RF_KERNEL_DYNAMIC = 3,
} FUNCTION_TABLE_TYPE, *PFUNCTION_TABLE_TYPE;

class std::chrono::duration<__int64,std::ratio<1,1000> >
{
  /* 0x0000 */ __int64 _MyRep;
}; /* size: 0x0008 */

typedef struct _MIDL_METHOD_PROPERTY_MAP
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_395;
  /* 0x0008 */ const struct _MIDL_METHOD_PROPERTY* Properties;
} MIDL_METHOD_PROPERTY_MAP, *PMIDL_METHOD_PROPERTY_MAP; /* size: 0x0010 */

class CObjectContext;

class wil::details::<lambda_061bfcc66307cbf7f16e1057cb0b9ce9>
{
}; /* size: 0x0001 */

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA
{
  union
  {
    /* 0x0000 */ struct HKEY__* hKeyBase;
    /* 0x0000 */ void* pvBase;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ void* pvSystemStore;
    /* 0x0008 */ const char* pszSystemStore;
    /* 0x0008 */ const wchar_t* pwszSystemStore;
  }; /* size: 0x0008 */
} CERT_SYSTEM_STORE_RELOCATE_PARA, *PCERT_SYSTEM_STORE_RELOCATE_PARA; /* size: 0x0010 */

enum AppModelPolicy_GetPolicy_Internal::__l2::AppModelPolicy_AppType
{
  AppModelPolicy_AppType_Universal = 1,
  AppModelPolicy_AppType_Centennial = 2,
  AppModelPolicy_AppType_Desktop = 3,
  AppModelPolicy_AppType_PackagedService = 4,
  AppModelPolicy_AppType_PerAppBroker = 5,
  AppModelPolicy_AppType_PartialTrustCentennial = 6,
  AppModelPolicy_AppType_FullTrustUniversal = 7,
  AppModelPolicy_AppType_SuspendablePerAppBroker = 8,
  AppModelPolicy_AppType_Win32Alacarte = 9,
  AppModelPolicy_AppType_XboxGame = 10,
  AppModelPolicy_AppType_SuspendableCentennial = 11,
  AppModelPolicy_AppType_Count = 11,
};

class XWinRT::SecureVersionTag::Tag
{
  /* 0x0000 */ long _iRefCount;
}; /* size: 0x0004 */

typedef struct _LOAD_ASDATA_TABLE
{
  /* 0x0000 */ void* Module;
  /* 0x0008 */ wchar_t* FilePath;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ void* Handle;
  /* 0x0020 */ long RefCount;
  /* 0x0024 */ long Padding_396;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
} LOAD_ASDATA_TABLE, *PLOAD_ASDATA_TABLE; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_361
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_361, *PTAG_UNNAMED_361;

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_362
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_362, *PTAG_UNNAMED_362;

union std::_Align_type<double,80>
{
  union
  {
    /* 0x0000 */ double _Val;
    /* 0x0000 */ char _Pad[80];
  }; /* size: 0x0050 */
}; /* size: 0x0050 */

class std::_Mutex_base
{
  /* 0x0000 */ union std::_Align_type<double,80> _Mtx_storage;
}; /* size: 0x0050 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>
{
}; /* size: 0x0008 */

typedef enum _SharedVirtualDiskSupportType
{
  SharedVirtualDisksUnsupported = 0,
  SharedVirtualDisksSupported = 1,
  SharedVirtualDiskSnapshotsSupported = 3,
  SharedVirtualDiskCDPSnapshotsSupported = 7,
} SharedVirtualDiskSupportType, *PSharedVirtualDiskSupportType;

typedef enum _TAG_UNNAMED_363
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_363, *PTAG_UNNAMED_363;

class PushLogicalThreadId;

struct Windows::Foundation::Collections::IVector_impl<Windows::UI::WindowId,0>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_364
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_364, *PTAG_UNNAMED_364;

class std::scoped_lock<>
{
}; /* size: 0x0001 */

class RegistryKey::ValueInformationClass<_KEY_VALUE_PARTIAL_INFORMATION>
{
  /* 0x0000 */ enum _KEY_VALUE_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_365
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_365, *PTAG_UNNAMED_365;

class std::recursive_mutex
{
}; /* size: 0x0050 */

class wil::details::ApiTelemetryLogger::CallContext
{
}; /* size: 0x0140 */

typedef enum _TAG_UNNAMED_366
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_366, *PTAG_UNNAMED_366;

typedef enum _TAG_UNNAMED_367
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_367, *PTAG_UNNAMED_367;

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

struct IRpcSyntaxNegotiate
{
}; /* size: 0x0008 */

enum PackageDependencyLifetimeKind
{
  PackageDependencyLifetimeKind_Process = 0,
  PackageDependencyLifetimeKind_FilePath = 1,
  PackageDependencyLifetimeKind_RegistryKey = 2,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> >
{
}; /* size: 0x0008 */

struct wistd::default_delete<_GUID [0]>::_EnableIfConvertible<_GUID>
{
}; /* size: 0x0001 */

typedef struct _REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER_ENTRY
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned short SnapshotNameLength;
  /* 0x0006 */ char Padding_397[2];
  /* 0x0008 */ unsigned __int64 SnapshotCreationTime;
  /* 0x0010 */ unsigned __int64 StreamSize;
  /* 0x0018 */ unsigned __int64 StreamAllocationSize;
  /* 0x0020 */ unsigned __int64 Reserved[2];
  /* 0x0030 */ wchar_t SnapshotName[1];
  /* 0x0032 */ char __PADDING__[6];
} REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER_ENTRY, *PREFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER_ENTRY; /* size: 0x0038 */

enum RTL_PHYSICAL_MEMORY_POLICY
{
  RtlPhysicalMemoryPolicyLow = 10,
  RtlPhysicalMemoryPolicyNormal = 20,
};

enum DCOM_ENDPOINT_FLAGS
{
  fUseInternetPorts = 1,
};

struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::MusicProperties *>
{
}; /* size: 0x0008 */

typedef enum _SE_IMAGE_SIGNATURE_TYPE
{
  SeImageSignatureNone = 0,
  SeImageSignatureEmbedded = 1,
  SeImageSignatureCache = 2,
  SeImageSignatureCatalogCached = 3,
  SeImageSignatureCatalogNotCached = 4,
  SeImageSignatureCatalogHint = 5,
  SeImageSignaturePackageCatalog = 6,
  SeImageSignaturePplMitigated = 7,
} SE_IMAGE_SIGNATURE_TYPE, *PSE_IMAGE_SIGNATURE_TYPE;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Rect>
{
}; /* size: 0x0001 */

struct IPolicyMaker
{
}; /* size: 0x0008 */

struct IRpcStubBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Connect /* function */;
  /* 0x0020 */ void* Disconnect /* function */;
  /* 0x0028 */ void* Invoke /* function */;
  /* 0x0030 */ void* IsIIDSupported /* function */;
  /* 0x0038 */ void* CountRefs /* function */;
  /* 0x0040 */ void* DebugServerQueryInterface /* function */;
  /* 0x0048 */ void* DebugServerRelease /* function */;
}; /* size: 0x0050 */

class CVerifierTlsData;

typedef enum __MIDL_IBindStatusCallback_0002
{
  BINDINFOF_URLENCODESTGMEDDATA = 1,
  BINDINFOF_URLENCODEDEXTRAINFO = 2,
} _MIDL_IBindStatusCallback_0002, *P_MIDL_IBindStatusCallback_0002;

struct IDragDropExtensionForOLE
{
}; /* size: 0x0008 */

class CComApartment;

struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned int>
{
}; /* size: 0x0008 */

typedef enum _BOOT_ENTROPY_SOURCE_ID
{
  BootEntropySourceNone = 0,
  BootEntropySourceSeedfile = 1,
  BootEntropySourceExternal = 2,
  BootEntropySourceTpm = 3,
  BootEntropySourceRdrand = 4,
  BootEntropySourceTime = 5,
  BootEntropySourceAcpiOem0 = 6,
  BootEntropySourceUefi = 7,
  BootEntropySourceCng = 8,
  BootEntropySourceTcbTpm = 9,
  BootEntropySourceTcbRdrand = 10,
  BootMaxEntropySources = 10,
} BOOT_ENTROPY_SOURCE_ID, *PBOOT_ENTROPY_SOURCE_ID;

class Microsoft::WRL::Details::StrongReference
{
  /* 0x0000 */ long strongRefCount_;
}; /* size: 0x0004 */

struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0008 */

enum SERVICE_DIRECTORY_TYPE
{
  ServiceDirectoryPersistentState = 0,
  ServiceDirectoryTypeMax = 1,
};

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComCatalogSCM> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IComCatalogSCM>* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<float>
{
}; /* size: 0x0001 */

typedef struct _PROCESSOR_IDLE_STATE
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0001 */ char Padding_398[3];
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ unsigned __int64 Context;
  /* 0x0018 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE, *PPROCESSOR_IDLE_STATE; /* size: 0x0020 */

typedef enum _PROCESS_STATE_CHANGE_TYPE
{
  ProcessStateChangeSuspend = 0,
  ProcessStateChangeResume = 1,
  ProcessStateChangeMax = 2,
} PROCESS_STATE_CHANGE_TYPE, *PPROCESS_STATE_CHANGE_TYPE;

struct wistd::__aligned_storage<104,8,1>
{
}; /* size: 0x0001 */

typedef union _FILE_SEGMENT_ELEMENT
{
  union
  {
    /* 0x0000 */ void* Buffer;
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT; /* size: 0x0008 */

typedef enum _QUEUE_USER_APC_FLAGS
{
  QUEUE_USER_APC_FLAGS_NONE = 0,
  QUEUE_USER_APC_FLAGS_SPECIAL_USER_APC = 1,
  QUEUE_USER_APC_CALLBACK_DATA_CONTEXT = 0x10000,
} QUEUE_USER_APC_FLAGS, *PQUEUE_USER_APC_FLAGS;

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::IPropertyValue *>
{
}; /* size: 0x0008 */

typedef enum _SID_NAME_USE
{
  SidTypeUser = 1,
  SidTypeGroup = 2,
  SidTypeDomain = 3,
  SidTypeAlias = 4,
  SidTypeWellKnownGroup = 5,
  SidTypeDeletedAccount = 6,
  SidTypeInvalid = 7,
  SidTypeUnknown = 8,
  SidTypeComputer = 9,
  SidTypeLabel = 10,
  SidTypeLogonSession = 11,
} SID_NAME_USE, *PSID_NAME_USE;

class RegistryKey::KeyInformationClass<_KEY_FLAGS_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

struct IContinue
{
}; /* size: 0x0008 */

struct IOleObject
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
{
  SystemCrashDumpDisable = 0,
  SystemCrashDumpReconfigure = 1,
  SystemCrashDumpInitializationComplete = 2,
} SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS, *PSYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;

struct Windows::Foundation::IAsyncOperationCompletedHandler<__int64>
{
}; /* size: 0x0008 */

struct IPropertyPageSite
{
}; /* size: 0x0008 */

enum POWER_ACTION
{
  PowerActionNone = 0,
  PowerActionReserved = 1,
  PowerActionSleep = 2,
  PowerActionHibernate = 3,
  PowerActionShutdown = 4,
  PowerActionShutdownReset = 5,
  PowerActionShutdownOff = 6,
  PowerActionWarmEject = 7,
  PowerActionDisplayOff = 8,
};

typedef struct _TOKEN_SOURCE
{
  /* 0x0000 */ char SourceName[8];
  /* 0x0008 */ struct _LUID SourceIdentifier;
} TOKEN_SOURCE, *PTOKEN_SOURCE; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<_GUID>
{
}; /* size: 0x0008 */

typedef enum _ALPC_PORT_INFORMATION_CLASS
{
  AlpcBasicInformation = 0,
  AlpcPortInformation = 1,
  AlpcAssociateCompletionPortInformation = 2,
  AlpcConnectedSIDInformation = 3,
  AlpcServerInformation = 4,
  AlpcMessageZoneInformation = 5,
  AlpcRegisterCompletionListInformation = 6,
  AlpcUnregisterCompletionListInformation = 7,
  AlpcAdjustCompletionListConcurrencyCountInformation = 8,
  AlpcRegisterCallbackInformation = 9,
  AlpcCompletionListRundownInformation = 10,
  AlpcWaitForPortReferences = 11,
  AlpcServerSessionInformation = 12,
} ALPC_PORT_INFORMATION_CLASS, *PALPC_PORT_INFORMATION_CLASS;

class std::pmr::memory_resource
{
}; /* size: 0x0008 */

struct _TREEITEM;

enum HASHALGORITHM_ENUM
{
  DSA_HASH_ALGORITHM_SHA1 = 0,
  DSA_HASH_ALGORITHM_SHA256 = 1,
  DSA_HASH_ALGORITHM_SHA512 = 2,
};

struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>
{
}; /* size: 0x0001 */

enum DSAFIPSVERSION_ENUM
{
  DSA_FIPS186_2 = 0,
  DSA_FIPS186_3 = 1,
};

struct tagSOLE_AUTHENTICATION_LIST
{
  /* 0x0000 */ unsigned long cAuthInfo;
  /* 0x0004 */ long Padding_399;
  /* 0x0008 */ struct tagSOLE_AUTHENTICATION_INFO* aAuthInfo;
}; /* size: 0x0010 */

typedef struct _BCRYPT_PROVIDER_NAME
{
  /* 0x0000 */ wchar_t* pszProviderName;
} BCRYPT_PROVIDER_NAME, *PBCRYPT_PROVIDER_NAME; /* size: 0x0008 */

class Microsoft::WRL::Details::ModuleBase
{
  union
  {
    /* 0x0000 */ void* moduleLock_;
    /* 0x0000 */ volatile unsigned long objectCount_;
    /* 0x0000 */ class Microsoft::WRL::Details::ModuleBase* module_;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef enum _PROCESS_TLS_INFORMATION_TYPE
{
  ProcessTlsReplaceIndex = 0,
  ProcessTlsReplaceVector = 1,
  MaxProcessTlsOperation = 2,
} PROCESS_TLS_INFORMATION_TYPE, *PPROCESS_TLS_INFORMATION_TYPE;

typedef enum _VIRTUAL_STORAGE_BEHAVIOR_CODE
{
  VirtualStorageBehaviorUndefined = 0,
  VirtualStorageBehaviorCacheWriteThrough = 1,
  VirtualStorageBehaviorCacheWriteBack = 2,
  VirtualStorageBehaviorStopIoProcessing = 3,
  VirtualStorageBehaviorRestartIoProcessing = 4,
} VIRTUAL_STORAGE_BEHAVIOR_CODE, *PVIRTUAL_STORAGE_BEHAVIOR_CODE;

typedef class _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>
{
  union
  {
    struct
    {
      /* 0x0000 */ enum _TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>::TlgState m_State;
      /* 0x0004 */ BOOL m_HasRelatedId;
      /* 0x0005 */ char Padding_400[3];
      /* 0x0008 */ struct _GUID m_Id;
      /* 0x0018 */ struct _GUID m_CapturedRelatedId;
    }; /* size: 0x0025 */
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
  }; /* size: 0x0025 */
} TlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>, *PTlgActivityBase<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>,0,5>; /* size: 0x0028 */

enum MEM_EXTENDED_PARAMETER_TYPE
{
  MemExtendedParameterInvalidType = 0,
  MemExtendedParameterAddressRequirements = 1,
  MemExtendedParameterNumaNode = 2,
  MemExtendedParameterPartitionHandle = 3,
  MemExtendedParameterUserPhysicalHandle = 4,
  MemExtendedParameterAttributeFlags = 5,
  MemExtendedParameterImageMachine = 6,
  MemExtendedParameterMax = 7,
};

struct wistd::__function::__maybe_derive_from_binary_function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>
{
}; /* size: 0x0001 */

typedef enum _WORKERFACTORYINFOCLASS
{
  WorkerFactoryTimeout = 0,
  WorkerFactoryRetryTimeout = 1,
  WorkerFactoryIdleTimeout = 2,
  WorkerFactoryBindingCount = 3,
  WorkerFactoryThreadMinimum = 4,
  WorkerFactoryThreadMaximum = 5,
  WorkerFactoryPaused = 6,
  WorkerFactoryBasicInformation = 7,
  WorkerFactoryAdjustThreadGoal = 8,
  WorkerFactoryCallbackType = 9,
  WorkerFactoryStackInformation = 10,
  WorkerFactoryThreadBasePriority = 11,
  WorkerFactoryTimeoutWaiters = 12,
  WorkerFactoryFlags = 13,
  WorkerFactoryThreadSoftMaximum = 14,
  WorkerFactoryThreadCpuSets = 15,
  MaxWorkerFactoryInfoClass = 16,
} WORKERFACTORYINFOCLASS, *PWORKERFACTORYINFOCLASS;

typedef struct _TAPE_SET_POSITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
  /* 0x0010 */ unsigned char Immediate;
  /* 0x0011 */ char __PADDING__[7];
} TAPE_SET_POSITION, *PTAPE_SET_POSITION; /* size: 0x0018 */

typedef enum _SEMAPHORE_INFORMATION_CLASS
{
  SemaphoreBasicInformation = 0,
} SEMAPHORE_INFORMATION_CLASS, *PSEMAPHORE_INFORMATION_CLASS;

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,0,0>
{
}; /* size: 0x0001 */

typedef enum _OBJECT_INFORMATION_CLASS
{
  ObjectBasicInformation = 0,
  ObjectNameInformation = 1,
  ObjectTypeInformation = 2,
  ObjectTypesInformation = 3,
  ObjectHandleFlagInformation = 4,
  ObjectSessionInformation = 5,
  ObjectSessionObjectInformation = 6,
  MaxObjectInfoClass = 7,
} OBJECT_INFORMATION_CLASS, *POBJECT_INFORMATION_CLASS;

struct _TP_TIMER;

enum FILE_FLUSH_MODE
{
  FILE_FLUSH_DEFAULT = 0,
  FILE_FLUSH_DATA = 1,
  FILE_FLUSH_MIN_METADATA = 2,
  FILE_FLUSH_NO_SYNC = 3,
};

typedef struct _PORT_DATA_ENTRY
{
  /* 0x0000 */ void* Base;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PORT_DATA_ENTRY, *PPORT_DATA_ENTRY; /* size: 0x0010 */

typedef enum _PROCESS_MEMORY_EXHAUSTION_TYPE
{
  PMETypeFailFastOnCommitFailure = 0,
  PMETypeMax = 1,
} PROCESS_MEMORY_EXHAUSTION_TYPE, *PPROCESS_MEMORY_EXHAUSTION_TYPE;

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>
{
}; /* size: 0x0008 */

typedef enum _ENLISTMENT_INFORMATION_CLASS
{
  EnlistmentBasicInformation = 0,
  EnlistmentRecoveryInformation = 1,
  EnlistmentCrmInformation = 2,
} ENLISTMENT_INFORMATION_CLASS, *PENLISTMENT_INFORMATION_CLASS;

class std::condition_variable
{
  /* 0x0000 */ union std::_Align_type<double,72> _Cnd_storage;
}; /* size: 0x0048 */

typedef enum _FSINFOCLASS
{
  FileFsVolumeInformation = 1,
  FileFsLabelInformation = 2,
  FileFsSizeInformation = 3,
  FileFsDeviceInformation = 4,
  FileFsAttributeInformation = 5,
  FileFsControlInformation = 6,
  FileFsFullSizeInformation = 7,
  FileFsObjectIdInformation = 8,
  FileFsDriverPathInformation = 9,
  FileFsVolumeFlagsInformation = 10,
  FileFsSectorSizeInformation = 11,
  FileFsDataCopyInformation = 12,
  FileFsMetadataSizeInformation = 13,
  FileFsFullSizeInformationEx = 14,
  FileFsMaximumInformation = 15,
} FSINFOCLASS, *PFSINFOCLASS;

enum tagHANDEDNESS
{
  HANDEDNESS_LEFT = 0,
  HANDEDNESS_RIGHT = 1,
};

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::VideoProperties *,Windows::Storage::FileProperties::IVideoProperties *> >
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,IWeakReferenceSource,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0018 */

enum tagCOMCALLTYPE
{
  CALLTYPE_OUTGOING_CALL = 0,
  CALLTYPE_INCOMING_CALL = 1,
  CALLTYPE_ACTIVATION = 2,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::VideoProperties *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

struct wil::details::out_param_t<wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > >
{
  /* 0x0000 */ class wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >& wrapper;
  /* 0x0008 */ wchar_t* pRaw;
  /* 0x0010 */ BOOL replace;
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

typedef enum _MEMORY_WORKING_SET_EX_LOCATION
{
  MemoryLocationInvalid = 0,
  MemoryLocationResident = 1,
  MemoryLocationPagefile = 2,
  MemoryLocationReserved = 3,
} MEMORY_WORKING_SET_EX_LOCATION, *PMEMORY_WORKING_SET_EX_LOCATION;

typedef struct _Real_type<long double>
{
} Real_type<long double>, *PReal_type<long double>; /* size: 0x0001 */

typedef enum _REG_ACTION
{
  KeyAdded = 0,
  KeyRemoved = 1,
  KeyModified = 2,
} REG_ACTION, *PREG_ACTION;

struct tagCStdPSFactoryBuffer
{
  /* 0x0000 */ const struct IPSFactoryBufferVtbl* lpVtbl;
  /* 0x0008 */ long RefCount;
  /* 0x000c */ long Padding_401;
  /* 0x0010 */ const struct tagProxyFileInfo** pProxyFileList;
  /* 0x0018 */ long Filler1;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>,0,0>
{
}; /* size: 0x0001 */

typedef enum _KPROFILE_SOURCE
{
  ProfileTime = 0,
  ProfileAlignmentFixup = 1,
  ProfileTotalIssues = 2,
  ProfilePipelineDry = 3,
  ProfileLoadInstructions = 4,
  ProfilePipelineFrozen = 5,
  ProfileBranchInstructions = 6,
  ProfileTotalNonissues = 7,
  ProfileDcacheMisses = 8,
  ProfileIcacheMisses = 9,
  ProfileCacheMisses = 10,
  ProfileBranchMispredictions = 11,
  ProfileStoreInstructions = 12,
  ProfileFpInstructions = 13,
  ProfileIntegerInstructions = 14,
  Profile2Issue = 15,
  Profile3Issue = 16,
  Profile4Issue = 17,
  ProfileSpecialInstructions = 18,
  ProfileTotalCycles = 19,
  ProfileIcacheIssues = 20,
  ProfileDcacheAccesses = 21,
  ProfileMemoryBarrierCycles = 22,
  ProfileLoadLinkedIssues = 23,
  ProfileMaximum = 24,
} KPROFILE_SOURCE, *PKPROFILE_SOURCE;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0001 */

typedef struct _RPC_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} RPC_VERSION, *PRPC_VERSION; /* size: 0x0004 */

typedef struct _RPC_SYNTAX_IDENTIFIER
{
  /* 0x0000 */ struct _GUID SyntaxGUID;
  /* 0x0010 */ struct _RPC_VERSION SyntaxVersion;
} RPC_SYNTAX_IDENTIFIER, *PRPC_SYNTAX_IDENTIFIER; /* size: 0x0014 */

typedef struct _MIDL_SYNTAX_INFO
{
  /* 0x0000 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x0014 */ long Padding_402;
  /* 0x0018 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0020 */ const unsigned char* ProcString;
  /* 0x0028 */ const unsigned short* FmtStringOffset;
  /* 0x0030 */ const unsigned char* TypeString;
  /* 0x0038 */ const void* aUserMarshalQuadruple;
  /* 0x0040 */ const struct _MIDL_INTERFACE_METHOD_PROPERTIES* pMethodProperties;
  /* 0x0048 */ unsigned __int64 pReserved2;
} MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO; /* size: 0x0050 */

enum tagPOINTER_DEVICE_TYPE
{
  POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1,
  POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2,
  POINTER_DEVICE_TYPE_TOUCH = 3,
  POINTER_DEVICE_TYPE_TOUCH_PAD = 4,
  POINTER_DEVICE_TYPE_MAX = -1,
};

typedef struct _CLIENT_ID
{
  /* 0x0000 */ void* UniqueProcess;
  /* 0x0008 */ void* UniqueThread;
} CLIENT_ID, *PCLIENT_ID; /* size: 0x0010 */

typedef struct _PORT_MESSAGE
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ short DataLength;
        /* 0x0002 */ short TotalLength;
      } /* size: 0x0004 */ s1;
      /* 0x0000 */ unsigned long Length;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ short Type;
        /* 0x0006 */ short DataInfoOffset;
      } /* size: 0x0004 */ s2;
      /* 0x0004 */ unsigned long ZeroInit;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  union
  {
    /* 0x0008 */ struct _CLIENT_ID ClientId;
    /* 0x0008 */ double DoNotUseThisField;
  }; /* size: 0x0010 */
  /* 0x0018 */ unsigned long MessageId;
  /* 0x001c */ long Padding_403;
  union
  {
    /* 0x0020 */ unsigned __int64 ClientViewSize;
    struct
    {
      /* 0x0020 */ unsigned long CallbackId;
      /* 0x0024 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PORT_MESSAGE, *PPORT_MESSAGE; /* size: 0x0028 */

typedef struct _LPC_UNREGISTER_PROCESS_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ void* UniqueProcessId;
} LPC_UNREGISTER_PROCESS_MSG, *PLPC_UNREGISTER_PROCESS_MSG; /* size: 0x0030 */

struct Microsoft::WRL::Details::BoolStruct
{
  /* 0x0000 */ int Member;
}; /* size: 0x0004 */

struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventHandler
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef enum _system_handle_t
{
  SYSTEM_HANDLE_FILE = 0,
  SYSTEM_HANDLE_SEMAPHORE = 1,
  SYSTEM_HANDLE_EVENT = 2,
  SYSTEM_HANDLE_MUTEX = 3,
  SYSTEM_HANDLE_PROCESS = 4,
  SYSTEM_HANDLE_TOKEN = 5,
  SYSTEM_HANDLE_SECTION = 6,
  SYSTEM_HANDLE_REG_KEY = 7,
  SYSTEM_HANDLE_THREAD = 8,
  SYSTEM_HANDLE_COMPOSITION_OBJECT = 9,
  SYSTEM_HANDLE_SOCKET = 10,
  SYSTEM_HANDLE_JOB = 11,
  SYSTEM_HANDLE_PIPE = 12,
  SYSTEM_HANDLE_MAX = 12,
  SYSTEM_HANDLE_INVALID = 255,
} system_handle_t, *Psystem_handle_t;

typedef enum _WNF_STATE_NAME_INFORMATION
{
  WnfInfoStateNameExist = 0,
  WnfInfoSubscribersPresent = 1,
  WnfInfoIsQuiescent = 2,
} WNF_STATE_NAME_INFORMATION, *PWNF_STATE_NAME_INFORMATION;

typedef struct _SI_COPYFILE
{
  /* 0x0000 */ unsigned long SourceFileNameLength;
  /* 0x0004 */ unsigned long DestinationFileNameLength;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ wchar_t FileNameBuffer[1];
  /* 0x000e */ char __PADDING__[2];
} SI_COPYFILE, *PSI_COPYFILE; /* size: 0x0010 */

typedef enum _COPYFILE2_MESSAGE_ACTION
{
  COPYFILE2_PROGRESS_CONTINUE = 0,
  COPYFILE2_PROGRESS_CANCEL = 1,
  COPYFILE2_PROGRESS_STOP = 2,
  COPYFILE2_PROGRESS_QUIET = 3,
  COPYFILE2_PROGRESS_PAUSE = 4,
} COPYFILE2_MESSAGE_ACTION, *PCOPYFILE2_MESSAGE_ACTION;

struct std::char_traits<char16_t>
{
}; /* size: 0x0001 */

struct CPlex
{
  /* 0x0000 */ struct CPlex* pNext;
  /* 0x0008 */ unsigned int nMax;
  /* 0x000c */ unsigned int nCur;
}; /* size: 0x0010 */

struct Windows::Foundation::IReference<short>
{
}; /* size: 0x0008 */

enum std::_Uninitialized
{
  _Noinit = 0,
};

struct Windows::Foundation::Collections::IIterable<float>
{
}; /* size: 0x0008 */

enum std::align_val_t
{
};

enum WIN32_MEMORY_PARTITION_INFORMATION_CLASS
{
  MemoryPartitionInfo = 0,
  MemoryPartitionDedicatedMemoryInfo = 1,
};

class stdext::bad_exception
{
}; /* size: 0x0010 */

typedef enum _STATE_LOCATION_TYPE
{
  LocationTypeRegistry = 0,
  LocationTypeFileSystem = 1,
  LocationTypeMaximum = 2,
} STATE_LOCATION_TYPE, *PSTATE_LOCATION_TYPE;

struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<IInspectable *>
{
}; /* size: 0x0008 */

struct IXMLDocument2
{
}; /* size: 0x0008 */

typedef enum _RPC_NOTIFICATIONS
{
  RpcNotificationCallNone = 0,
  RpcNotificationClientDisconnect = 1,
  RpcNotificationCallCancel = 2,
} RPC_NOTIFICATIONS, *PRPC_NOTIFICATIONS;

struct HTASK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum __MIDL_IInternetSecurityManager_0001
{
  PUAF_DEFAULT = 0,
  PUAF_NOUI = 1,
  PUAF_ISFILE = 2,
  PUAF_WARN_IF_DENIED = 4,
  PUAF_FORCEUI_FOREGROUND = 8,
  PUAF_CHECK_TIFS = 16,
  PUAF_DONTCHECKBOXINDIALOG = 32,
  PUAF_TRUSTED = 64,
  PUAF_ACCEPT_WILDCARD_SCHEME = 128,
  PUAF_ENFORCERESTRICTED = 256,
  PUAF_NOSAVEDFILECHECK = 512,
  PUAF_REQUIRESAVEDFILECHECK = 1024,
  PUAF_DONT_USE_CACHE = 4096,
  PUAF_RESERVED1 = 8192,
  PUAF_RESERVED2 = 16384,
  PUAF_LMZ_UNLOCKED = 0x10000,
  PUAF_LMZ_LOCKED = 0x20000,
  PUAF_DEFAULTZONEPOL = 0x40000,
  PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 0x80000,
  PUAF_NOUIIFLOCKED = 0x100000,
  PUAF_DRAGPROTOCOLCHECK = 0x200000,
} _MIDL_IInternetSecurityManager_0001, *P_MIDL_IInternetSecurityManager_0001;

struct _CrtMemBlockHeader;

enum IEObjectType
{
  IE_EPM_OBJECT_EVENT = 0,
  IE_EPM_OBJECT_MUTEX = 1,
  IE_EPM_OBJECT_SEMAPHORE = 2,
  IE_EPM_OBJECT_SHARED_MEMORY = 3,
  IE_EPM_OBJECT_WAITABLE_TIMER = 4,
  IE_EPM_OBJECT_FILE = 5,
  IE_EPM_OBJECT_NAMED_PIPE = 6,
  IE_EPM_OBJECT_REGISTRY = 7,
};

class wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::details::event_watcher_state* m_ptr;
}; /* size: 0x0008 */

typedef enum _NORM_FORM
{
  NormalizationOther = 0,
  NormalizationC = 1,
  NormalizationD = 2,
  NormalizationKC = 5,
  NormalizationKD = 6,
} NORM_FORM, *PNORM_FORM;

struct std::try_to_lock_t
{
}; /* size: 0x0001 */

typedef struct _FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER ByteCount;
  /* 0x0010 */ struct _GUID RecallOwnerGuid;
  /* 0x0020 */ unsigned long RecallMetadataBufferSize;
  /* 0x0024 */ unsigned char RecallMetadataBuffer[1];
  /* 0x0025 */ char __PADDING__[3];
} FSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER, *PFSCTL_GHOST_FILE_EXTENTS_INPUT_BUFFER; /* size: 0x0028 */

typedef enum _STREAM_INFO_LEVELS
{
  FindStreamInfoStandard = 0,
  FindStreamInfoMaxInfoLevel = 1,
} STREAM_INFO_LEVELS, *PSTREAM_INFO_LEVELS;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::AgileRef
{
}; /* size: 0x0008 */

struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
}; /* size: 0x0001 */

typedef enum _PRT
{
  PRT_IGNORE = 0,
  PRT_CREATE_NEW = 1,
  PRT_USE_THIS = 2,
  PRT_USE_THIS_ONLY = 3,
} PRT, *PPRT;

typedef enum _TRANSACTION_STATE
{
  TransactionStateNormal = 1,
  TransactionStateIndoubt = 2,
  TransactionStateCommittedNotify = 3,
} TRANSACTION_STATE, *PTRANSACTION_STATE;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
{
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_MIRACAST = 15,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_WIRED = 16,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INDIRECT_VIRTUAL = 17,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_USB_TUNNEL = 18,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = -2147483648,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = -1,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::ImageProperties *,Windows::Storage::FileProperties::IImageProperties *> >
{
}; /* size: 0x0008 */

typedef struct _TXFS_LIST_TRANSACTIONS
{
  /* 0x0000 */ unsigned __int64 NumberOfTransactions;
  /* 0x0008 */ unsigned __int64 BufferSizeRequired;
} TXFS_LIST_TRANSACTIONS, *PTXFS_LIST_TRANSACTIONS; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService> const >;

class std::mutex
{
}; /* size: 0x0050 */

class std::timed_mutex
{
  /* 0x0000 */ class std::mutex _My_mutex;
  /* 0x0050 */ class std::condition_variable _My_cond;
  /* 0x0098 */ unsigned int _My_locked;
}; /* size: 0x00a0 */

typedef enum _RTL_SPARSE_BITMAP_CTX_OPERATION
{
  RtlSparseBitmapOperationClear = 0,
  RtlSparseBitmapOperationSet = 1,
  RtlSparseBitmapOperationAny = 2,
  RtlSparseBitmapOperationMax = 3,
} RTL_SPARSE_BITMAP_CTX_OPERATION, *PRTL_SPARSE_BITMAP_CTX_OPERATION;

struct tagEMRSETMAPPERFLAGS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

typedef enum _TIMER_INFORMATION_CLASS
{
  TimerBasicInformation = 0,
} TIMER_INFORMATION_CLASS, *PTIMER_INFORMATION_CLASS;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0008 */

enum tagLIBFLAGS
{
  LIBFLAG_FRESTRICTED = 1,
  LIBFLAG_FCONTROL = 2,
  LIBFLAG_FHIDDEN = 4,
  LIBFLAG_FHASDISKIMAGE = 8,
};

struct SActivatableClassIdHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ const wchar_t* activatableClassId;
}; /* size: 0x0018 */

typedef enum _DIRECTORY_NOTIFY_INFORMATION_CLASS
{
  DirectoryNotifyInformation = 1,
  DirectoryNotifyExtendedInformation = 2,
  DirectoryNotifyFullInformation = 3,
  DirectoryNotifyMaximumInformation = 4,
} DIRECTORY_NOTIFY_INFORMATION_CLASS, *PDIRECTORY_NOTIFY_INFORMATION_CLASS;

struct tagDCOM_ENDPOINT
{
  /* 0x0000 */ wchar_t* wszProtSeq;
  /* 0x0008 */ wchar_t* wszPorts;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef enum _READ_DIRECTORY_NOTIFY_INFORMATION_CLASS
{
  ReadDirectoryNotifyInformation = 1,
  ReadDirectoryNotifyExtendedInformation = 2,
  ReadDirectoryNotifyFullInformation = 3,
  ReadDirectoryNotifyMaximumInformation = 4,
} READ_DIRECTORY_NOTIFY_INFORMATION_CLASS, *PREAD_DIRECTORY_NOTIFY_INFORMATION_CLASS;

typedef struct _TXFS_WRITE_BACKUP_INFORMATION
{
  /* 0x0000 */ unsigned char Buffer[1];
} TXFS_WRITE_BACKUP_INFORMATION, *PTXFS_WRITE_BACKUP_INFORMATION; /* size: 0x0001 */

typedef enum _WATCHDOG_INFORMATION_CLASS
{
  WdInfoTimeoutValue = 0,
  WdInfoResetTimer = 1,
  WdInfoStopTimer = 2,
  WdInfoStartTimer = 3,
  WdInfoTriggerAction = 4,
  WdInfoState = 5,
  WdInfoTriggerReset = 6,
  WdInfoNop = 7,
  WdInfoGeneratedLastReset = 8,
  WdInfoInvalid = 9,
} WATCHDOG_INFORMATION_CLASS, *PWATCHDOG_INFORMATION_CLASS;

struct Windows::Foundation::Collections::IIterable_impl<_GUID>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::EventTargetArray
{
  /* 0x0000 */ long Padding_404[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IUnknown>* begin_;
  /* 0x0018 */ class Microsoft::WRL::ComPtr<IUnknown>* end_;
  /* 0x0020 */ void** bucketAssists_;
}; /* size: 0x0028 */

typedef enum _MEMORY_PARTITION_CHARGE_SHARING_TYPE
{
  MemoryPartitionMemorySharingTypeVirtual = 0,
  MemoryPartitionMemorySharingTypePhysical = 1,
  MemoryPartitionMemorySharingTypeMaximum = 2,
} MEMORY_PARTITION_CHARGE_SHARING_TYPE, *PMEMORY_PARTITION_CHARGE_SHARING_TYPE;

typedef struct _RTL_SPLAY_LINKS
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* Parent;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS* RightChild;
} RTL_SPLAY_LINKS, *PRTL_SPLAY_LINKS; /* size: 0x0018 */

typedef enum _ACL_INFORMATION_CLASS
{
  AclRevisionInformation = 1,
  AclSizeInformation = 2,
} ACL_INFORMATION_CLASS, *PACL_INFORMATION_CLASS;

typedef enum _JOURNAL_INFORMATION_CLASS
{
  JournalAbsoluteInformation = 0,
  JournalClientInformation = 1,
  MaxJournalInformation = 2,
} JOURNAL_INFORMATION_CLASS, *PJOURNAL_INFORMATION_CLASS;

typedef enum _FP_IEEE_OPERATION_CODE
{
  FpCodeUnspecified = 0,
  FpCodeAdd = 1,
  FpCodeSubtract = 2,
  FpCodeMultiply = 3,
  FpCodeDivide = 4,
  FpCodeSquareRoot = 5,
  FpCodeRemainder = 6,
  FpCodeCompare = 7,
  FpCodeConvert = 8,
  FpCodeRound = 9,
  FpCodeTruncate = 10,
  FpCodeFloor = 11,
  FpCodeCeil = 12,
  FpCodeAcos = 13,
  FpCodeAsin = 14,
  FpCodeAtan = 15,
  FpCodeAtan2 = 16,
  FpCodeCabs = 17,
  FpCodeCos = 18,
  FpCodeCosh = 19,
  FpCodeExp = 20,
  FpCodeFabs = 21,
  FpCodeFmod = 22,
  FpCodeFrexp = 23,
  FpCodeHypot = 24,
  FpCodeLdexp = 25,
  FpCodeLog = 26,
  FpCodeLog10 = 27,
  FpCodeModf = 28,
  FpCodePow = 29,
  FpCodeSin = 30,
  FpCodeSinh = 31,
  FpCodeTan = 32,
  FpCodeTanh = 33,
  FpCodeY0 = 34,
  FpCodeY1 = 35,
  FpCodeYn = 36,
} FP_IEEE_OPERATION_CODE, *PFP_IEEE_OPERATION_CODE;

typedef enum _CM_ERROR_CONTROL_TYPE
{
  IgnoreError = 0,
  NormalError = 1,
  SevereError = 2,
  CriticalError = 3,
} CM_ERROR_CONTROL_TYPE, *PCM_ERROR_CONTROL_TYPE;

struct std::integral_constant<bool,0>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct HGESTUREINFO__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _KEY_SET_INFORMATION_CLASS
{
  KeyWriteTimeInformation = 0,
  KeyWow64FlagsInformation = 1,
  KeyControlFlagsInformation = 2,
  KeySetVirtualizationInformation = 3,
  KeySetDebugInformation = 4,
  KeySetHandleTagsInformation = 5,
  KeySetLayerInformation = 6,
  MaxKeySetInfoClass = 7,
} KEY_SET_INFORMATION_CLASS, *PKEY_SET_INFORMATION_CLASS;

class CClipboardBroker::SetClipboard::__l34::<lambda_be18d0e1c9460e7bb92c1a447c19d4fe>
{
  /* 0x0000 */ class Windows::Internal::GitPtr& GITSourceDataObject;
  /* 0x0008 */ void*& hCallerToken;
  /* 0x0010 */ class Windows::Internal::GitPtr& GITWrappedDataObject;
  /* 0x0018 */ void*& pMTAWrapperRawAddress;
  /* 0x0020 */ unsigned long& dwSourceProcessId;
  /* 0x0028 */ BOOL& fPlmManaged;
}; /* size: 0x0030 */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,__int64>
{
}; /* size: 0x0008 */

typedef enum _CM_SERVICE_LOAD_TYPE
{
  BootLoad = 0,
  SystemLoad = 1,
  AutoLoad = 2,
  DemandLoad = 3,
  DisableLoad = 4,
} CM_SERVICE_LOAD_TYPE, *PCM_SERVICE_LOAD_TYPE;

typedef enum _PLUGPLAY_CONTROL_CLASS
{
  PlugPlayControlEnumerateDevice = 0,
  PlugPlayControlRegisterNewDevice = 1,
  PlugPlayControlDeregisterDevice = 2,
  PlugPlayControlInitializeDevice = 3,
  PlugPlayControlStartDevice = 4,
  PlugPlayControlUnlockDevice = 5,
  PlugPlayControlQueryAndRemoveDevice = 6,
  PlugPlayControlUserResponse = 7,
  PlugPlayControlGenerateLegacyDevice = 8,
  PlugPlayControlGetInterfaceDeviceList = 9,
  PlugPlayControlProperty = 10,
  PlugPlayControlDeviceClassAssociation = 11,
  PlugPlayControlGetRelatedDevice = 12,
  PlugPlayControlGetInterfaceDeviceAlias = 13,
  PlugPlayControlDeviceStatus = 14,
  PlugPlayControlGetDeviceDepth = 15,
  PlugPlayControlQueryDeviceRelations = 16,
  PlugPlayControlTargetDeviceRelation = 17,
  PlugPlayControlQueryConflictList = 18,
  PlugPlayControlRetrieveDock = 19,
  PlugPlayControlResetDevice = 20,
  PlugPlayControlHaltDevice = 21,
  PlugPlayControlGetBlockedDriverList = 22,
  PlugPlayControlGetDeviceInterfaceEnabled = 23,
  MaxPlugPlayControl = 24,
} PLUGPLAY_CONTROL_CLASS, *PPLUGPLAY_CONTROL_CLASS;

typedef struct _POINTFLOAT
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
} POINTFLOAT, *PPOINTFLOAT; /* size: 0x0008 */

typedef enum _IMAGE_MITIGATION_POLICY
{
  ImageDepPolicy = 0,
  ImageAslrPolicy = 1,
  ImageDynamicCodePolicy = 2,
  ImageStrictHandleCheckPolicy = 3,
  ImageSystemCallDisablePolicy = 4,
  ImageMitigationOptionsMask = 5,
  ImageExtensionPointDisablePolicy = 6,
  ImageControlFlowGuardPolicy = 7,
  ImageSignaturePolicy = 8,
  ImageFontDisablePolicy = 9,
  ImageImageLoadPolicy = 10,
  ImagePayloadRestrictionPolicy = 11,
  ImageChildProcessPolicy = 12,
  ImageSehopPolicy = 13,
  ImageHeapPolicy = 14,
  ImageUserShadowStackPolicy = 15,
  ImageRedirectionTrustPolicy = 16,
  ImageUserPointerAuthPolicy = 17,
  MaxImageMitigationPolicy = 18,
} IMAGE_MITIGATION_POLICY, *PIMAGE_MITIGATION_POLICY;

enum BCRYPT_MULTI_OPERATION_TYPE
{
  BCRYPT_OPERATION_TYPE_HASH = 1,
};

typedef enum _RTL_FEATURE_VARIANT_PAYLOAD_KIND
{
  FeatureVariantPayloadKindNone = 0,
  FeatureVariantPayloadKindResident = 1,
  FeatureVariantPayloadKindExternal = 2,
} RTL_FEATURE_VARIANT_PAYLOAD_KIND, *PRTL_FEATURE_VARIANT_PAYLOAD_KIND;

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >
{
}; /* size: 0x0008 */

class MultiplicationHelper<long,long,1>
{
}; /* size: 0x0001 */

typedef enum _SC_ACTION_TYPE
{
  SC_ACTION_NONE = 0,
  SC_ACTION_RESTART = 1,
  SC_ACTION_REBOOT = 2,
  SC_ACTION_RUN_COMMAND = 3,
  SC_ACTION_OWN_RESTART = 4,
} SC_ACTION_TYPE, *PSC_ACTION_TYPE;

struct Windows::Foundation::Collections::IVector_impl<float,1>
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct IDropSource
{
}; /* size: 0x0008 */

typedef enum _TIMER_SET_INFORMATION_CLASS
{
  TimerSetCoalescableTimer = 0,
  MaxTimerInfoClass = 1,
} TIMER_SET_INFORMATION_CLASS, *PTIMER_SET_INFORMATION_CLASS;

class std::exception_ptr
{
  /* 0x0000 */ void* _Data1;
  /* 0x0008 */ void* _Data2;
}; /* size: 0x0010 */

class std::nested_exception
{
  /* 0x0000 */ long Padding_405[2];
  /* 0x0008 */ class std::exception_ptr _Exc;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef enum _MEMORY_INFORMATION_CLASS
{
  MemoryBasicInformation = 0,
  MemoryWorkingSetInformation = 1,
  MemoryMappedFilenameInformation = 2,
  MemoryRegionInformation = 3,
  MemoryWorkingSetExInformation = 4,
  MemorySharedCommitInformation = 5,
  MemoryImageInformation = 6,
  MemoryRegionInformationEx = 7,
  MemoryPrivilegedBasicInformation = 8,
  MemoryEnclaveImageInformation = 9,
  MemoryBasicInformationCapped = 10,
  MemoryPhysicalContiguityInformation = 11,
  MemoryBadInformation = 12,
  MemoryBadInformationAllProcesses = 13,
} MEMORY_INFORMATION_CLASS, *PMEMORY_INFORMATION_CLASS;

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

struct IResourceGates
{
}; /* size: 0x0008 */

struct IAggregator
{
}; /* size: 0x0008 */

struct HUMPD__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _DOCINFOA
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ long Padding_406;
  /* 0x0008 */ const char* lpszDocName;
  /* 0x0010 */ const char* lpszOutput;
  /* 0x0018 */ const char* lpszDatatype;
  /* 0x0020 */ unsigned long fwType;
  /* 0x0024 */ long __PADDING__[1];
} DOCINFOA, *PDOCINFOA; /* size: 0x0028 */

typedef enum _IO_SESSION_STATE
{
  IoSessionStateCreated = 1,
  IoSessionStateInitialized = 2,
  IoSessionStateConnected = 3,
  IoSessionStateDisconnected = 4,
  IoSessionStateDisconnectedLoggedOn = 5,
  IoSessionStateLoggedOn = 6,
  IoSessionStateLoggedOff = 7,
  IoSessionStateTerminated = 8,
  IoSessionStateMax = 9,
} IO_SESSION_STATE, *PIO_SESSION_STATE;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleClassInfo> >
{
}; /* size: 0x0008 */

struct Microsoft::WRL::RuntimeClassFlags<4>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef enum _RTL_SYSTEM_GLOBAL_DATA_ID
{
  GlobalDataIdUnknown = 0,
  GlobalDataIdRngSeedVersion = 1,
  GlobalDataIdInterruptTime = 2,
  GlobalDataIdTimeZoneBias = 3,
  GlobalDataIdImageNumberLow = 4,
  GlobalDataIdImageNumberHigh = 5,
  GlobalDataIdTimeZoneId = 6,
  GlobalDataIdNtMajorVersion = 7,
  GlobalDataIdNtMinorVersion = 8,
  GlobalDataIdSystemExpirationDate = 9,
  GlobalDataIdKdDebuggerEnabled = 10,
  GlobalDataIdCyclesPerYield = 11,
  GlobalDataIdSafeBootMode = 12,
  GlobalDataIdLastSystemRITEventTickCount = 13,
  GlobalDataIdConsoleSharedDataFlags = 14,
  GlobalDataIdNtSystemRootDrive = 15,
  GlobalDataIdQpcShift = 16,
  GlobalDataIdQpcBypassEnabled = 17,
  GlobalDataIdQpcData = 18,
  GlobalDataIdQpcBias = 19,
} RTL_SYSTEM_GLOBAL_DATA_ID, *PRTL_SYSTEM_GLOBAL_DATA_ID;

struct wistd::__struct_double4
{
  /* 0x0000 */ double __lx[4];
}; /* size: 0x0020 */

typedef enum _TRANSACTION_OUTCOME
{
  TransactionOutcomeUndetermined = 1,
  TransactionOutcomeCommitted = 2,
  TransactionOutcomeAborted = 3,
} TRANSACTION_OUTCOME, *PTRANSACTION_OUTCOME;

struct STARTING_VCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingVcn;
}; /* size: 0x0008 */

struct tagAspectInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<HSTRING__ *>
{
}; /* size: 0x0008 */

typedef enum _FP__IEEE_FORMAT
{
  FpFormatFp32 = 0,
  FpFormatFp64 = 1,
  FpFormatFp80 = 2,
  FpFormatFp128 = 3,
  FpFormatI16 = 4,
  FpFormatI32 = 5,
  FpFormatI64 = 6,
  FpFormatU16 = 7,
  FpFormatU32 = 8,
  FpFormatU64 = 9,
  FpFormatCompare = 10,
  FpFormatString = 11,
} FP__IEEE_FORMAT, *PFP__IEEE_FORMAT;

struct Windows::Foundation::Collections::IMapView<unsigned int,IWeakReference *>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IEnumFORMATETC,0,0>
{
}; /* size: 0x0001 */

typedef struct _SPC_SP_OPUS_INFO
{
  /* 0x0000 */ const wchar_t* pwszProgramName;
  /* 0x0008 */ struct SPC_LINK_* pMoreInfo;
  /* 0x0010 */ struct SPC_LINK_* pPublisherInfo;
} SPC_SP_OPUS_INFO, *PSPC_SP_OPUS_INFO; /* size: 0x0018 */

class std::basic_string_view<char,std::char_traits<char> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ const char* _Mydata;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 _Mysize;
}; /* size: 0x0010 */

typedef enum __MIDL_IBindStatusCallback_0001
{
  BINDVERB_GET = 0,
  BINDVERB_POST = 1,
  BINDVERB_PUT = 2,
  BINDVERB_CUSTOM = 3,
  BINDVERB_RESERVED1 = 4,
} _MIDL_IBindStatusCallback_0001, *P_MIDL_IBindStatusCallback_0001;

class wil::details::<lambda_72c5d536b9fc99c49a59c1d4980b8c49>
{
}; /* size: 0x0001 */

struct EVENT_ENTRY_LOOKUP_TABLE
{
  /* 0x0000 */ struct EVENT_ENTRY* EntryBuckets[32];
  /* 0x0100 */ unsigned long NumEventEntries;
  /* 0x0104 */ unsigned long NextBucketToFlush;
}; /* size: 0x0108 */

struct TLG_AGG_INTERNAL_STATS
{
  /* 0x0000 */ unsigned __int64 TotalEntriesFlushed;
  /* 0x0008 */ unsigned __int64 NumFlushes;
  /* 0x0010 */ unsigned long MaxEntriesStored;
  /* 0x0014 */ unsigned long MaxEntriesFlushed;
  /* 0x0018 */ unsigned long MinEntriesFlushed;
  /* 0x001c */ unsigned long NumBucketLimitReached;
  /* 0x0020 */ unsigned long NumAllocationFailures;
  /* 0x0024 */ unsigned long NumLargeEventFailures;
}; /* size: 0x0028 */

struct TLG_AGGR_SESSION
{
  /* 0x0000 */ struct EVENT_ENTRY_LOOKUP_TABLE TlgHashTable;
  /* 0x0108 */ struct _RTL_SRWLOCK SharedLock;
  /* 0x0110 */ struct TLG_AGG_INTERNAL_STATS InternalStats;
  /* 0x0138 */ void* pEnableCallback /* function */;
  /* 0x0140 */ void* pCallbackContext;
  /* 0x0148 */ const struct _tlgProvider_t* hProvider;
  /* 0x0150 */ struct TLG_AGGR_SESSION* NextSession;
  /* 0x0158 */ struct _TP_TIMER* Timer;
  /* 0x0160 */ unsigned int FlushPeriod_ms;
  /* 0x0164 */ unsigned char CompleteFlushPending;
  /* 0x0165 */ char __PADDING__[3];
}; /* size: 0x0168 */

typedef enum __MIDL_IInternetSecurityManager_0003
{
  SZM_CREATE = 0,
  SZM_DELETE = 1,
} _MIDL_IInternetSecurityManager_0003, *P_MIDL_IInternetSecurityManager_0003;

struct IEnumCATEGORYINFO
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<_GUID>
{
}; /* size: 0x0008 */

typedef struct _EISA_IRQ_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Interrupt : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char LevelTriggered : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_IRQ_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
  /* 0x0001 */ unsigned char Reserved;
} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION; /* size: 0x0002 */

enum tagEventLogModes
{
  Eventlog_ModeLaunch = 0,
  EventLog_ModeActivate = 1,
  EventLog_ModeAccess = 2,
  EventLog_ModeDontCare = 3,
};

enum tagRpcLocalAddressFormat
{
  rlafInvalid = 0,
  rlafIPv4 = 1,
  rlafIPv6 = 2,
};

typedef struct _FILE_FS_DATA_COPY_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfCopies;
} FILE_FS_DATA_COPY_INFORMATION, *PFILE_FS_DATA_COPY_INFORMATION; /* size: 0x0004 */

enum POWER_SETTING_ALTITUDE
{
  ALTITUDE_GROUP_POLICY = 0,
  ALTITUDE_USER = 1,
  ALTITUDE_RUNTIME_OVERRIDE = 2,
  ALTITUDE_PROVISIONING = 3,
  ALTITUDE_OEM_CUSTOMIZATION = 4,
  ALTITUDE_INTERNAL_OVERRIDE = 5,
  ALTITUDE_OS_DEFAULT = 6,
};

struct wil::select_result
{
  /* 0x0000 */ void* hgdi;
  /* 0x0008 */ struct HDC__* hdc;
}; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wistd::integral_constant<unsigned __int64,0>,wil::select_result,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::select_result m_ptr;
}; /* size: 0x0010 */

typedef struct _SYSDBG_LIVEDUMP_SELECTIVE_CONTROL
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  union
  {
    struct /* bitfield */
    {
      /* 0x0008 */ unsigned __int64 ThreadKernelStacks : 1; /* bit position: 0 */
      /* 0x0008 */ unsigned __int64 ReservedFlags : 63; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0008 */ unsigned __int64 Flags;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned __int64 Reserved[4];
} SYSDBG_LIVEDUMP_SELECTIVE_CONTROL, *PSYSDBG_LIVEDUMP_SELECTIVE_CONTROL; /* size: 0x0030 */

typedef enum _MUTANT_INFORMATION_CLASS
{
  MutantBasicInformation = 0,
  MutantOwnerInformation = 1,
} MUTANT_INFORMATION_CLASS, *PMUTANT_INFORMATION_CLASS;

struct IPersistMoniker
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgress<Windows::Storage::Streams::IBuffer *,unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::VectorChangedEventHandler_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

class AdditionHelper<long,long,6>
{
}; /* size: 0x0001 */

typedef enum _PLUGPLAY_EVENT_CATEGORY
{
  HardwareProfileChangeEvent = 0,
  TargetDeviceChangeEvent = 1,
  DeviceClassChangeEvent = 2,
  CustomDeviceEvent = 3,
  DeviceInstallEvent = 4,
  DeviceArrivalEvent = 5,
  VetoEvent = 6,
  BlockedDriverEvent = 7,
  InvalidIDEvent = 8,
  DevicePropertyChangeEvent = 9,
  DeviceInstanceRemovalEvent = 10,
  DeviceInstanceStartedEvent = 11,
  MaxPlugEventCategory = 12,
} PLUGPLAY_EVENT_CATEGORY, *PPLUGPLAY_EVENT_CATEGORY;

typedef struct _ACL
{
  /* 0x0000 */ unsigned char AclRevision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short AclSize;
  /* 0x0004 */ unsigned short AceCount;
  /* 0x0006 */ unsigned short Sbz2;
} ACL, *PACL; /* size: 0x0008 */

class IntRegion<unsigned long,unsigned long>
{
}; /* size: 0x0001 */

typedef enum __MIDL_IInternetZoneManager_0001
{
  MAX_ZONE_PATH = 260,
  MAX_ZONE_DESCRIPTION = 200,
} _MIDL_IInternetZoneManager_0001, *P_MIDL_IInternetZoneManager_0001;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0001 */

enum tagCALLSTATE
{
  CALLSTATE_NOT_IN_CALL = -1,
  CALLSTATE_DATA_NOT_AVAILABLE = 0,
};

struct tagMInterfacePointer
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef enum _DISPLAYCONFIG_COLOR_ENCODING
{
  DISPLAYCONFIG_COLOR_ENCODING_RGB = 0,
  DISPLAYCONFIG_COLOR_ENCODING_YCBCR444 = 1,
  DISPLAYCONFIG_COLOR_ENCODING_YCBCR422 = 2,
  DISPLAYCONFIG_COLOR_ENCODING_YCBCR420 = 3,
  DISPLAYCONFIG_COLOR_ENCODING_INTENSITY = 4,
  DISPLAYCONFIG_COLOR_ENCODING_FORCE_UINT32 = -1,
} DISPLAYCONFIG_COLOR_ENCODING, *PDISPLAYCONFIG_COLOR_ENCODING;

struct std::random_access_iterator_tag
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IInspectable>
{
  /* 0x0000 */ struct IInspectable* ptr_;
}; /* size: 0x0008 */

typedef struct _COAUTHINFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pwszServerPrincName;
  /* 0x0010 */ unsigned long dwAuthnLevel;
  /* 0x0014 */ unsigned long dwImpersonationLevel;
  /* 0x0018 */ struct _COAUTHIDENTITY* pAuthIdentityData;
  /* 0x0020 */ unsigned long dwCapabilities;
  /* 0x0024 */ long __PADDING__[1];
} COAUTHINFO, *PCOAUTHINFO; /* size: 0x0028 */

enum RTL_DISK_WRITE_CONSTRAINT_POLICY
{
  RtlDiskWriteConstraintPolicyLimited = 50,
  RtlDiskWriteConstraintPolicyNormal = 100,
};

class CEnumStatData
{
  /* 0x0000 */ long Padding_407[3];
  /* 0x000c */ unsigned long m_ulFlags;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_index;
  /* 0x0018 */ class CArray<CStatData>* m_pSDArray;
}; /* size: 0x0020 */

typedef enum _MM_ETW_WORKING_SET_TYPE
{
  MmEtwWorkingSetTypeUser = 0,
  MmEtwWorkingSetTypeSession = 1,
  MmEtwWorkingSetTypeSystem = 2,
  MmEtwWorkingSetTypeMaximum = 3,
} MM_ETW_WORKING_SET_TYPE, *PMM_ETW_WORKING_SET_TYPE;

struct Windows::Foundation::IAsyncOperation<unsigned int>
{
}; /* size: 0x0008 */

enum tagFEEDBACK_TYPE
{
  FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1,
  FEEDBACK_PEN_BARRELVISUALIZATION = 2,
  FEEDBACK_PEN_TAP = 3,
  FEEDBACK_PEN_DOUBLETAP = 4,
  FEEDBACK_PEN_PRESSANDHOLD = 5,
  FEEDBACK_PEN_RIGHTTAP = 6,
  FEEDBACK_TOUCH_TAP = 7,
  FEEDBACK_TOUCH_DOUBLETAP = 8,
  FEEDBACK_TOUCH_PRESSANDHOLD = 9,
  FEEDBACK_TOUCH_RIGHTTAP = 10,
  FEEDBACK_GESTURE_PRESSANDTAP = 11,
  FEEDBACK_MAX = -1,
};

typedef enum _TP_TRACE_TYPE
{
  TpTraceThreadPriority = 1,
  TpTraceThreadAffinity = 2,
  MaxTpTraceType = 3,
} TP_TRACE_TYPE, *PTP_TRACE_TYPE;

typedef struct _IMAGE_DEBUG_MISC
{
  /* 0x0000 */ unsigned long DataType;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned char Unicode;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationWithProgress<unsigned int,unsigned int>
{
}; /* size: 0x0008 */

typedef struct _SD_CHANGE_MACHINE_SID_INPUT
{
  /* 0x0000 */ unsigned short CurrentMachineSIDOffset;
  /* 0x0002 */ unsigned short CurrentMachineSIDLength;
  /* 0x0004 */ unsigned short NewMachineSIDOffset;
  /* 0x0006 */ unsigned short NewMachineSIDLength;
} SD_CHANGE_MACHINE_SID_INPUT, *PSD_CHANGE_MACHINE_SID_INPUT; /* size: 0x0008 */

typedef enum _SAFER_POLICY_INFO_CLASS
{
  SaferPolicyLevelList = 1,
  SaferPolicyEnableTransparentEnforcement = 2,
  SaferPolicyDefaultLevel = 3,
  SaferPolicyEvaluateUserScope = 4,
  SaferPolicyScopeFlags = 5,
  SaferPolicyDefaultLevelFlags = 6,
  SaferPolicyAuthenticodeEnabled = 7,
} SAFER_POLICY_INFO_CLASS, *PSAFER_POLICY_INFO_CLASS;

struct GetTypeValueImpl<long,unsigned short const *,enum LoadOrFreeWhy,unsigned long>
{
}; /* size: 0x0001 */

struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable<<lambda_e06473e64d77ff850420a9b624ffc716> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef union _double_val
{
  union
  {
    /* 0x0000 */ unsigned short _Sh[4];
    /* 0x0000 */ double _Val;
  }; /* size: 0x0008 */
} double_val, *Pdouble_val; /* size: 0x0008 */

typedef enum _DMA_SPEED
{
  Compatible = 0,
  TypeA = 1,
  TypeB = 2,
  TypeC = 3,
  TypeF = 4,
  MaximumDmaSpeed = 5,
} DMA_SPEED, *PDMA_SPEED;

class wistd::__compressed_pair<_TOKEN_MANDATORY_LABEL *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<_TOKEN_MANDATORY_LABEL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_TOKEN_MANDATORY_LABEL *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > __ptr_;
}; /* size: 0x0008 */

typedef enum _POWER_MONITOR_REQUEST_TYPE
{
  MonitorRequestTypeOff = 0,
  MonitorRequestTypeOnAndPresent = 1,
  MonitorRequestTypeToggleOn = 2,
} POWER_MONITOR_REQUEST_TYPE, *PPOWER_MONITOR_REQUEST_TYPE;

typedef struct _TOKEN_USER
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES User;
} TOKEN_USER, *PTOKEN_USER; /* size: 0x0010 */

typedef struct _SE_TOKEN_USER
{
  union
  {
    /* 0x0000 */ struct _TOKEN_USER TokenUser;
    /* 0x0000 */ struct _SID_AND_ATTRIBUTES User;
  }; /* size: 0x0010 */
  union
  {
    /* 0x0010 */ struct _SID Sid;
    /* 0x0010 */ unsigned char Buffer[68];
  }; /* size: 0x0044 */
  /* 0x0054 */ long __PADDING__[1];
} SE_TOKEN_USER, *PSE_TOKEN_USER; /* size: 0x0058 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IDragOperationInternal>
{
}; /* size: 0x0008 */

typedef enum _PROCESS_ACTIVITY_TYPE
{
  ProcessActivityTypeAudio = 0,
  ProcessActivityTypeMax = 1,
} PROCESS_ACTIVITY_TYPE, *PPROCESS_ACTIVITY_TYPE;

struct std::_Equal_allocators
{
}; /* size: 0x0001 */

struct tagINTERFACEINFO
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0008 */ struct _GUID iid;
  /* 0x0018 */ unsigned short wMethod;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

typedef enum _DEP_SYSTEM_POLICY_TYPE
{
  DEPPolicyAlwaysOff = 0,
  DEPPolicyAlwaysOn = 1,
  DEPPolicyOptIn = 2,
  DEPPolicyOptOut = 3,
  DEPTotalPolicyCount = 4,
} DEP_SYSTEM_POLICY_TYPE, *PDEP_SYSTEM_POLICY_TYPE;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> const >;

typedef struct _COAUTHIDENTITY
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_408;
  /* 0x0010 */ unsigned short* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_409;
  /* 0x0020 */ unsigned short* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} COAUTHIDENTITY, *PCOAUTHIDENTITY; /* size: 0x0030 */

typedef enum _RTL_RESOURCE_CATEGORY
{
  RtlResTypePhysicalMemoryTier = 0,
  RtlResTypeDiskSpaceTier = 1,
  RtlResTypeDiskSpeedTier = 2,
  RtlResTypeDiskWriteConstraintTier = 3,
  RtlResTypeMax = 4,
} RTL_RESOURCE_CATEGORY, *PRTL_RESOURCE_CATEGORY;

typedef enum _PROCESS_MITIGATION_POLICY
{
  ProcessDEPPolicy = 0,
  ProcessASLRPolicy = 1,
  ProcessDynamicCodePolicy = 2,
  ProcessStrictHandleCheckPolicy = 3,
  ProcessSystemCallDisablePolicy = 4,
  ProcessMitigationOptionsMask = 5,
  ProcessExtensionPointDisablePolicy = 6,
  ProcessControlFlowGuardPolicy = 7,
  ProcessSignaturePolicy = 8,
  ProcessFontDisablePolicy = 9,
  ProcessImageLoadPolicy = 10,
  ProcessSystemCallFilterPolicy = 11,
  ProcessPayloadRestrictionPolicy = 12,
  ProcessChildProcessPolicy = 13,
  ProcessSideChannelIsolationPolicy = 14,
  ProcessUserShadowStackPolicy = 15,
  ProcessRedirectionTrustPolicy = 16,
  ProcessUserPointerAuthPolicy = 17,
  ProcessSEHOPPolicy = 18,
  MaxProcessMitigationPolicy = 19,
} PROCESS_MITIGATION_POLICY, *PPROCESS_MITIGATION_POLICY;

typedef enum _RTL_MEMORY_TYPE
{
  MemoryTypePaged = 0,
  MemoryTypeNonPaged = 1,
  MemoryType64KPage = 2,
  MemoryTypeLargePage = 3,
  MemoryTypeHugePage = 4,
  MemoryTypeCustom = 5,
  MemoryTypeMax = 6,
} RTL_MEMORY_TYPE, *PRTL_MEMORY_TYPE;

enum DISPLAYCONFIG_MODE_INFO_TYPE
{
  DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
  DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
  DISPLAYCONFIG_MODE_INFO_TYPE_DESKTOP_IMAGE = 3,
  DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = -1,
};

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

class CAbstractMarshalingStream
{
}; /* size: 0x0010 */

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
} CMSG_SP3_COMPATIBLE_AUX_INFO, *PCMSG_SP3_COMPATIBLE_AUX_INFO; /* size: 0x0008 */

typedef enum _USER_MARSHAL_CB_TYPE
{
  USER_MARSHAL_CB_BUFFER_SIZE = 0,
  USER_MARSHAL_CB_MARSHALL = 1,
  USER_MARSHAL_CB_UNMARSHALL = 2,
  USER_MARSHAL_CB_FREE = 3,
} USER_MARSHAL_CB_TYPE, *PUSER_MARSHAL_CB_TYPE;

typedef struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION
{
  /* 0x0000 */ unsigned char EfiLauncherEnabled;
} SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION, *PSYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<CProcessExtensionTbl>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef enum _VIRTUAL_MEMORY_INFORMATION_CLASS
{
  VmPrefetchInformation = 0,
  VmPagePriorityInformation = 1,
  VmCfgCallTargetInformation = 2,
  VmPageDirtyStateInformation = 3,
  VmImageHotPatchInformation = 4,
  VmPhysicalContiguityInformation = 5,
  VmVirtualMachinePrepopulateInformation = 6,
  VmRemoveFromWorkingSetInformation = 7,
} VIRTUAL_MEMORY_INFORMATION_CLASS, *PVIRTUAL_MEMORY_INFORMATION_CLASS;

typedef struct _OLESTREAMVTBL
{
  /* 0x0000 */ void* Get /* function */;
  /* 0x0008 */ void* Put /* function */;
} OLESTREAMVTBL, *POLESTREAMVTBL; /* size: 0x0010 */

struct OleClipboardTracing::StaticHandle
{
  /* 0x0000 */ const struct _tlgProvider_t* handle;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

enum tagPOINTER_INPUT_TYPE
{
  PT_POINTER = 1,
  PT_TOUCH = 2,
  PT_PEN = 3,
  PT_MOUSE = 4,
  PT_TOUCHPAD = 5,
};

struct NUMPARSE
{
  /* 0x0000 */ int cDig;
  /* 0x0004 */ unsigned long dwInFlags;
  /* 0x0008 */ unsigned long dwOutFlags;
  /* 0x000c */ int cchUsed;
  /* 0x0010 */ int nBaseShift;
  /* 0x0014 */ int nPwr10;
}; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>
{
}; /* size: 0x0008 */

enum DPI_HOSTING_BEHAVIOR
{
  DPI_HOSTING_BEHAVIOR_INVALID = -1,
  DPI_HOSTING_BEHAVIOR_DEFAULT = 0,
  DPI_HOSTING_BEHAVIOR_MIXED = 1,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1,IMarshal>
{
}; /* size: 0x0008 */

struct ComTelemetryProvider::StaticHandle
{
  /* 0x0000 */ const struct _tlgProvider_t* handle;
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0003
{
  SPIF_COMPLUS = 1,
  SPIF_SUSPENDED = 2,
  SPIF_RETIRED = 4,
  SPIF_READY = 8,
  SPIF_PAUSED = 16,
} _MIDL___MIDL_itf_activate_0000_0010_0003, *P_MIDL___MIDL_itf_activate_0000_0010_0003;

struct IOleInPlaceObjectWindowless
{
}; /* size: 0x0008 */

enum tagCONTEXTEVENT
{
  CONTEXTEVENT_NONE = 0,
  CONTEXTEVENT_CALL = 1,
  CONTEXTEVENT_ENTER = 2,
  CONTEXTEVENT_LEAVE = 4,
  CONTEXTEVENT_RETURN = 8,
  CONTEXTEVENT_CALLFILLBUFFER = 16,
  CONTEXTEVENT_ENTERWITHBUFFER = 32,
  CONTEXTEVENT_LEAVEFILLBUFFER = 64,
  CONTEXTEVENT_RETURNWITHBUFFER = 128,
  CONTEXTEVENT_BEGINCALL = 256,
  CONTEXTEVENT_BEGINENTER = 512,
  CONTEXTEVENT_BEGINLEAVE = 1024,
  CONTEXTEVENT_BEGINRETURN = 2048,
  CONTEXTEVENT_FINISHCALL = 4096,
  CONTEXTEVENT_FINISHENTER = 8192,
  CONTEXTEVENT_FINISHLEAVE = 16384,
  CONTEXTEVENT_FINISHRETURN = 0xffff8000,
  CONTEXTEVENT_BEGINCALLFILLBUFFER = 0x10000,
  CONTEXTEVENT_BEGINENTERWITHBUFFER = 0x20000,
  CONTEXTEVENT_FINISHLEAVEFILLBUFFER = 0x40000,
  CONTEXTEVENT_FINISHRETURNWITHBUFFER = 0x80000,
  CONTEXTEVENT_LEAVEEXCEPTION = 0x100000,
  CONTEXTEVENT_LEAVEEXCEPTIONFILLBUFFER = 0x200000,
  CONTEXTEVENT_RETURNEXCEPTION = 0x400000,
  CONTEXTEVENT_RETURNEXCEPTIONWITHBUFFER = 0x800000,
  CONTEXTEVENT_ADDREFPOLICY = 0x10000000,
  CONTEXTEVENT_RELEASEPOLICY = 0x20000000,
};

struct wil::details::DestroyThreadPoolWait<0>
{
}; /* size: 0x0001 */

class SafeIntCompare<unsigned int,unsigned short>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IExtensionRegistration *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >
{
}; /* size: 0x0008 */

enum DPI_AWARENESS
{
  DPI_AWARENESS_INVALID = -1,
  DPI_AWARENESS_UNAWARE = 0,
  DPI_AWARENESS_SYSTEM_AWARE = 1,
  DPI_AWARENESS_PER_MONITOR_AWARE = 2,
};

struct Microsoft::WRL::Details::Selector<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >
{
}; /* size: 0x0020 */

enum SYSNLS_FUNCTION
{
  COMPARE_STRING = 1,
};

typedef struct _WOF_EXTERNAL_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Provider;
} WOF_EXTERNAL_INFO, *PWOF_EXTERNAL_INFO; /* size: 0x0008 */

enum ECC_CURVE_TYPE_ENUM
{
  BCRYPT_ECC_PRIME_SHORT_WEIERSTRASS_CURVE = 1,
  BCRYPT_ECC_PRIME_TWISTED_EDWARDS_CURVE = 2,
  BCRYPT_ECC_PRIME_MONTGOMERY_CURVE = 3,
};

struct wistd::unique_ptr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;

typedef enum _RTL_PATH_TYPE
{
  RtlPathTypeUnknown = 0,
  RtlPathTypeUncAbsolute = 1,
  RtlPathTypeDriveAbsolute = 2,
  RtlPathTypeDriveRelative = 3,
  RtlPathTypeRooted = 4,
  RtlPathTypeRelative = 5,
  RtlPathTypeLocalDevice = 6,
  RtlPathTypeRootLocalDevice = 7,
} RTL_PATH_TYPE, *PRTL_PATH_TYPE;

enum SERVICE_SHARED_REGISTRY_STATE_TYPE
{
  ServiceSharedRegistryPersistentState = 0,
};

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IInputStream *,unsigned __int64>
{
}; /* size: 0x0008 */

class std::basic_string_view<char16_t,std::char_traits<char16_t> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ const char16_t* _Mydata;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 _Mysize;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> > const >;

enum AppPolicyLifecycleManagement
{
  AppPolicyLifecycleManagement_Unmanaged = 0,
  AppPolicyLifecycleManagement_Managed = 1,
};

class AdditionHelper<unsigned long,unsigned int,1>
{
}; /* size: 0x0001 */

typedef struct _CERT_POLICY_INFO
{
  /* 0x0000 */ char* pszPolicyIdentifier;
  /* 0x0008 */ unsigned long cPolicyQualifier;
  /* 0x000c */ long Padding_410;
  /* 0x0010 */ struct _CERT_POLICY_QUALIFIER_INFO* rgPolicyQualifier;
} CERT_POLICY_INFO, *PCERT_POLICY_INFO; /* size: 0x0018 */

typedef enum _RTL_VERIFIER_INFORMATION_CLASS
{
  VerifierAllInformation = 0,
  VerifierPageHeapsInformation = 1,
  VerifierRuntimeFlagsInformation = 2,
  VerifierFaultInjectInformation = 3,
  MaxVerifierInformation = 4,
} RTL_VERIFIER_INFORMATION_CLASS, *PRTL_VERIFIER_INFORMATION_CLASS;

class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >
{
  /* 0x0000 */ wchar_t* m_ptr;
}; /* size: 0x0008 */

typedef struct _FILE_END_OF_FILE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; /* size: 0x0008 */

typedef struct _s__RTTIBaseClassArray
{
  union
  {
    /* 0x0000 */ const struct _s__RTTIBaseClassDescriptor** arrayOfBaseClassDescriptors /* zero-length array */;
    /* 0x0000 */ long __PADDING__[1];
  }; /* size: 0x0004 */
} s__RTTIBaseClassArray, *Ps__RTTIBaseClassArray; /* size: 0x0004 */

enum AppPolicyThreadInitializationType
{
  AppPolicyThreadInitializationType_None = 0,
  AppPolicyThreadInitializationType_InitializeWinRT = 1,
};

class Microsoft::WRL::Details::MakeAllocator<Microsoft::WRL::Details::WeakReferenceImpl>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,_RTL_SRWLOCK *>
{
}; /* size: 0x0001 */

typedef struct _METADC
{
  /* 0x0000 */ int xMwo;
  /* 0x0004 */ int yMwo;
  /* 0x0008 */ int xMwe;
  /* 0x000c */ int yMwe;
  /* 0x0010 */ int xre;
  /* 0x0014 */ int yre;
  /* 0x0018 */ struct _METADC* pNext;
} METADC, *PMETADC; /* size: 0x0020 */

typedef struct _METAINFO
{
  /* 0x0000 */ struct _METADC headDc;
  /* 0x0020 */ int xwo;
  /* 0x0024 */ int ywo;
  /* 0x0028 */ int xwe;
  /* 0x002c */ int ywe;
  /* 0x0030 */ int xro;
  /* 0x0034 */ int yro;
} METAINFO, *PMETAINFO; /* size: 0x0038 */

typedef enum _FILE_KNOWN_FOLDER_TYPE
{
  KnownFolderNone = 0,
  KnownFolderDesktop = 1,
  KnownFolderDocuments = 2,
  KnownFolderDownloads = 3,
  KnownFolderMusic = 4,
  KnownFolderPictures = 5,
  KnownFolderVideos = 6,
  KnownFolderOther = 7,
  KnownFolderMax = 7,
} FILE_KNOWN_FOLDER_TYPE, *PFILE_KNOWN_FOLDER_TYPE;

typedef struct _PROCESS_MITIGATION_ASLR_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableBottomUpRandomization : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long EnableForceRelocateImages : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long EnableHighEntropy : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long DisallowStrippedImages : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ReservedFlags : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_ASLR_POLICY, *PPROCESS_MITIGATION_ASLR_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RaiseExceptionOnInvalidHandleReference : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long HandleExceptionsPermanentlyEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY, *PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long DisallowWin32kSystemCalls : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AuditDisallowWin32kSystemCalls : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY, *PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long DisableExtensionPoints : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ReservedFlags : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY, *PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ProhibitDynamicCode : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AllowThreadOptOut : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long AllowRemoteDowngrade : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AuditProhibitDynamicCode : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ReservedFlags : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_DYNAMIC_CODE_POLICY, *PPROCESS_MITIGATION_DYNAMIC_CODE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableControlFlowGuard : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long EnableExportSuppression : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long StrictMode : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long EnableXfg : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long EnableXfgAuditMode : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long ReservedFlags : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY, *PPROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long MicrosoftSignedOnly : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long StoreSignedOnly : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long MitigationOptIn : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AuditMicrosoftSignedOnly : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long AuditStoreSignedOnly : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long ReservedFlags : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY, *PPROCESS_MITIGATION_BINARY_SIGNATURE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long DisableNonSystemFonts : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AuditNonSystemFontLoading : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_FONT_DISABLE_POLICY, *PPROCESS_MITIGATION_FONT_DISABLE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NoRemoteImages : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long NoLowMandatoryLabelImages : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long PreferSystem32Images : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AuditNoRemoteImages : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long AuditNoLowMandatoryLabelImages : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long ReservedFlags : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_IMAGE_LOAD_POLICY, *PPROCESS_MITIGATION_IMAGE_LOAD_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long FilterId : 4; /* bit position: 0 */
      /* 0x0000 */ unsigned long ReservedFlags : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY, *PPROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableExportAddressFilter : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AuditExportAddressFilter : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long EnableExportAddressFilterPlus : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AuditExportAddressFilterPlus : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long EnableImportAddressFilter : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long AuditImportAddressFilter : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long EnableRopStackPivot : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long AuditRopStackPivot : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long EnableRopCallerCheck : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long AuditRopCallerCheck : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long EnableRopSimExec : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long AuditRopSimExec : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long ReservedFlags : 20; /* bit position: 12 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY, *PPROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NoChildProcessCreation : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AuditNoChildProcessCreation : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long AllowSecureProcessCreation : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReservedFlags : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_CHILD_PROCESS_POLICY, *PPROCESS_MITIGATION_CHILD_PROCESS_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long SmtBranchTargetIsolation : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long IsolateSecurityDomain : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long DisablePageCombine : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long SpeculativeStoreBypassDisable : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long RestrictCoreSharing : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long ReservedFlags : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY, *PPROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableUserShadowStack : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AuditUserShadowStack : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long SetContextIpValidation : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long AuditSetContextIpValidation : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long EnableUserShadowStackStrictMode : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long BlockNonCetBinaries : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long BlockNonCetBinariesNonEhcont : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long AuditBlockNonCetBinaries : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long CetDynamicApisOutOfProcOnly : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long SetContextIpValidationRelaxedMode : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long ReservedFlags : 22; /* bit position: 10 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY, *PPROCESS_MITIGATION_USER_SHADOW_STACK_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnforceRedirectionTrust : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AuditRedirectionTrust : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY, *PPROCESS_MITIGATION_REDIRECTION_TRUST_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnablePointerAuthUserIp : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ReservedFlags : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY, *PPROCESS_MITIGATION_USER_POINTER_AUTH_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_POLICY_INFORMATION
{
  /* 0x0000 */ enum _PROCESS_MITIGATION_POLICY Policy;
  union
  {
    /* 0x0004 */ struct _PROCESS_MITIGATION_ASLR_POLICY ASLRPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY StrictHandleCheckPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY SystemCallDisablePolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ExtensionPointDisablePolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_DYNAMIC_CODE_POLICY DynamicCodePolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_CONTROL_FLOW_GUARD_POLICY ControlFlowGuardPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_BINARY_SIGNATURE_POLICY SignaturePolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_FONT_DISABLE_POLICY FontDisablePolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_IMAGE_LOAD_POLICY ImageLoadPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_SYSTEM_CALL_FILTER_POLICY SystemCallFilterPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_PAYLOAD_RESTRICTION_POLICY PayloadRestrictionPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_CHILD_PROCESS_POLICY ChildProcessPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_SIDE_CHANNEL_ISOLATION_POLICY SideChannelIsolationPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_USER_SHADOW_STACK_POLICY UserShadowStackPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_REDIRECTION_TRUST_POLICY RedirectionTrustPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_USER_POINTER_AUTH_POLICY UserPointerAuthPolicy;
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_POLICY_INFORMATION, *PPROCESS_MITIGATION_POLICY_INFORMATION; /* size: 0x0008 */

typedef enum _MANDATORY_LEVEL
{
  MandatoryLevelUntrusted = 0,
  MandatoryLevelLow = 1,
  MandatoryLevelMedium = 2,
  MandatoryLevelHigh = 3,
  MandatoryLevelSystem = 4,
  MandatoryLevelSecureProcess = 5,
  MandatoryLevelCount = 6,
} MANDATORY_LEVEL, *PMANDATORY_LEVEL;

class CFontEventsCP
{
  /* 0x0000 */ long Padding_411[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_412;
  /* 0x0010 */ struct IConnectionPointContainer* m_pcpc;
  /* 0x0018 */ class CRgPv m_rgpv;
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>
{
}; /* size: 0x0008 */

struct IGlobalInterfaceTable
{
}; /* size: 0x0008 */

enum tagGLOBALOPT_RPCTP_VALUES
{
  COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL = 0,
  COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL = 1,
};

typedef struct _MINIDUMP_USER_RECORD
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_USER_RECORD, *PMINIDUMP_USER_RECORD; /* size: 0x000c */

struct std::nothrow_t
{
}; /* size: 0x0001 */

typedef enum _THREADINFOCLASS
{
  ThreadBasicInformation = 0,
  ThreadTimes = 1,
  ThreadPriority = 2,
  ThreadBasePriority = 3,
  ThreadAffinityMask = 4,
  ThreadImpersonationToken = 5,
  ThreadDescriptorTableEntry = 6,
  ThreadEnableAlignmentFaultFixup = 7,
  ThreadEventPair_Reusable = 8,
  ThreadQuerySetWin32StartAddress = 9,
  ThreadZeroTlsCell = 10,
  ThreadPerformanceCount = 11,
  ThreadAmILastThread = 12,
  ThreadIdealProcessor = 13,
  ThreadPriorityBoost = 14,
  ThreadSetTlsArrayAddress = 15,
  ThreadIsIoPending = 16,
  ThreadHideFromDebugger = 17,
  ThreadBreakOnTermination = 18,
  ThreadSwitchLegacyState = 19,
  ThreadIsTerminated = 20,
  ThreadLastSystemCall = 21,
  ThreadIoPriority = 22,
  ThreadCycleTime = 23,
  ThreadPagePriority = 24,
  ThreadActualBasePriority = 25,
  ThreadTebInformation = 26,
  ThreadCSwitchMon = 27,
  ThreadCSwitchPmu = 28,
  ThreadWow64Context = 29,
  ThreadGroupInformation = 30,
  ThreadUmsInformation = 31,
  ThreadCounterProfiling = 32,
  ThreadIdealProcessorEx = 33,
  ThreadCpuAccountingInformation = 34,
  ThreadSuspendCount = 35,
  ThreadHeterogeneousCpuPolicy = 36,
  ThreadContainerId = 37,
  ThreadNameInformation = 38,
  ThreadSelectedCpuSets = 39,
  ThreadSystemThreadInformation = 40,
  ThreadActualGroupAffinity = 41,
  ThreadDynamicCodePolicyInfo = 42,
  ThreadExplicitCaseSensitivity = 43,
  ThreadWorkOnBehalfTicket = 44,
  ThreadSubsystemInformation = 45,
  ThreadDbgkWerReportActive = 46,
  ThreadAttachContainer = 47,
  ThreadManageWritesToExecutableMemory = 48,
  ThreadPowerThrottlingState = 49,
  ThreadWorkloadClass = 50,
  ThreadCreateStateChange = 51,
  ThreadApplyStateChange = 52,
  ThreadStrongerBadHandleChecks = 53,
  ThreadEffectiveIoPriority = 54,
  ThreadEffectivePagePriority = 55,
  MaxThreadInfoClass = 56,
} THREADINFOCLASS, *PTHREADINFOCLASS;

typedef struct _tlgDataDescInit<_tlgIndexSequence<16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> >
{
} tlgDataDescInit<_tlgIndexSequence<16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> >, *PtlgDataDescInit<_tlgIndexSequence<16,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15> >; /* size: 0x0001 */

enum AppPolicyCreateFileAccess
{
  AppPolicyCreateFileAccess_Full = 0,
  AppPolicyCreateFileAccess_Limited = 1,
};

class wil::details::<lambda_4f3ec52b7543533c4222b284350504d0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<short>
{
}; /* size: 0x0008 */

class OleGetClipboard::__l20::<lambda_c423ec492903d37bedc0b5c6ae7700cf>
{
  /* 0x0000 */ struct IDataObject** ppBrokerCClipDataObject;
  /* 0x0008 */ unsigned long& dwClipSequenceNumber;
}; /* size: 0x0010 */

typedef enum _COMPUTER_NAME_FORMAT
{
  ComputerNameNetBIOS = 0,
  ComputerNameDnsHostname = 1,
  ComputerNameDnsDomain = 2,
  ComputerNameDnsFullyQualified = 3,
  ComputerNamePhysicalNetBIOS = 4,
  ComputerNamePhysicalDnsHostname = 5,
  ComputerNamePhysicalDnsDomain = 6,
  ComputerNamePhysicalDnsFullyQualified = 7,
  ComputerNameMax = 8,
} COMPUTER_NAME_FORMAT, *PCOMPUTER_NAME_FORMAT;

struct Windows::Foundation::IReference<enum Windows::Storage::FileAttributes>
{
}; /* size: 0x0008 */

typedef struct _REPARSE_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ unsigned long Flags;
      /* 0x0014 */ wchar_t PathBuffer[1];
      /* 0x0016 */ char __PADDING__[2];
    } /* size: 0x0010 */ SymbolicLinkReparseBuffer;
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ wchar_t PathBuffer[1];
    } /* size: 0x000a */ MountPointReparseBuffer;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned char DataBuffer[1];
      } /* size: 0x0001 */ GenericReparseBuffer;
      /* 0x0009 */ char __PADDING__[15];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER; /* size: 0x0018 */

typedef struct _REPARSE_GUID_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ struct _GUID ReparseGuid;
  struct
  {
    /* 0x0018 */ unsigned char DataBuffer[1];
  } /* size: 0x0001 */ GenericReparseBuffer;
  /* 0x0019 */ char __PADDING__[3];
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER; /* size: 0x001c */

typedef struct _REPARSE_DATA_BUFFER_EX
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ExistingReparseTag;
  /* 0x0008 */ struct _GUID ExistingReparseGuid;
  /* 0x0018 */ unsigned __int64 Reserved;
  union
  {
    /* 0x0020 */ struct _REPARSE_DATA_BUFFER ReparseDataBuffer;
    /* 0x0020 */ struct _REPARSE_GUID_DATA_BUFFER ReparseGuidDataBuffer;
  }; /* size: 0x001c */
  /* 0x003c */ long __PADDING__[1];
} REPARSE_DATA_BUFFER_EX, *PREPARSE_DATA_BUFFER_EX; /* size: 0x0040 */

enum IMPORT_OBJECT_TYPE
{
  IMPORT_OBJECT_CODE = 0,
  IMPORT_OBJECT_DATA = 1,
  IMPORT_OBJECT_CONST = 2,
};

typedef enum _CPU_PARTITION_QUERY_INFORMATION_CLASS
{
  CpuPartitionQueryCpus = 0,
  CpuPartitionQueryMax = 1,
} CPU_PARTITION_QUERY_INFORMATION_CLASS, *PCPU_PARTITION_QUERY_INFORMATION_CLASS;

class wil::details::<lambda_9c5331a7944ecca7e332e744444330f1>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardTaskCompletion> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClipboardTaskCompletion>* ptr_;
}; /* size: 0x0008 */

struct RETRIEVAL_POINTER_COUNT
{
  /* 0x0000 */ unsigned long ExtentCount;
}; /* size: 0x0004 */

enum ARM64_FNPDATA_FLAGS
{
  PdataRefToFullXdata = 0,
  PdataPackedUnwindFunction = 1,
  PdataPackedUnwindFragment = 2,
};

struct wil::details::close_invoke_helper<1,void (__cdecl*)(HWILFAILUREWATCH__ *),&WilFailureWatcherUnsubscribe,HWILFAILUREWATCH__ *>
{
}; /* size: 0x0001 */

typedef struct _FILE_DISPOSITION_INFORMATION
{
  /* 0x0000 */ unsigned char DeleteFile;
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; /* size: 0x0001 */

enum IMAGE_AUX_SYMBOL_TYPE
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
};

struct IUnkInner
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference>
{
}; /* size: 0x0010 */

typedef struct __WilFeatureTraits_Feature_AdditionalComDebugOutput
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy13;
    /* 0x0000 */ const char ___dummy11;
    /* 0x0000 */ const char ___dummy12;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_AdditionalComDebugOutput, *P_WilFeatureTraits_Feature_AdditionalComDebugOutput; /* size: 0x0001 */

struct IRootStorage
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<CProcessPatternTbl>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES
{
  COMGLB_UNMARSHALING_POLICY_NORMAL = 0,
  COMGLB_UNMARSHALING_POLICY_STRONG = 1,
  COMGLB_UNMARSHALING_POLICY_HYBRID = 2,
};

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_FILE_HEADER
{
  /* 0x0000 */ unsigned short Machine;
  /* 0x0002 */ unsigned short NumberOfSections;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long PointerToSymbolTable;
  /* 0x000c */ unsigned long NumberOfSymbols;
  /* 0x0010 */ unsigned short SizeOfOptionalHeader;
  /* 0x0012 */ unsigned short Characteristics;
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER; /* size: 0x0014 */

typedef struct _IMAGE_ROM_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long BaseOfBss;
  /* 0x0020 */ unsigned long GprMask;
  /* 0x0024 */ unsigned long CprMask[4];
  /* 0x0034 */ unsigned long GpValue;
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER; /* size: 0x0038 */

typedef struct _IMAGE_ROM_HEADERS
{
  /* 0x0000 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0014 */ struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS; /* size: 0x004c */

typedef enum _ACCESS_REASON_TYPE
{
  AccessReasonNone = 0,
  AccessReasonAllowedAce = 0x10000,
  AccessReasonDeniedAce = 0x20000,
  AccessReasonAllowedParentAce = 0x30000,
  AccessReasonDeniedParentAce = 0x40000,
  AccessReasonNotGrantedByCape = 0x50000,
  AccessReasonNotGrantedByParentCape = 0x60000,
  AccessReasonNotGrantedToAppContainer = 0x70000,
  AccessReasonMissingPrivilege = 0x100000,
  AccessReasonFromPrivilege = 0x200000,
  AccessReasonIntegrityLevel = 0x300000,
  AccessReasonOwnership = 0x400000,
  AccessReasonNullDacl = 0x500000,
  AccessReasonEmptyDacl = 0x600000,
  AccessReasonNoSD = 0x700000,
  AccessReasonNoGrant = 0x800000,
  AccessReasonTrustLabel = 0x900000,
  AccessReasonFilterAce = 0xa00000,
} ACCESS_REASON_TYPE, *PACCESS_REASON_TYPE;

struct IOleParentUndoUnit
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FolderInformation *>
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION
{
  SystemFirmwareTable_Enumerate = 0,
  SystemFirmwareTable_Get = 1,
} SYSTEM_FIRMWARE_TABLE_ACTION, *PSYSTEM_FIRMWARE_TABLE_ACTION;

enum tagPENDINGMSG
{
  PENDINGMSG_CANCELCALL = 0,
  PENDINGMSG_WAITNOPROCESS = 1,
  PENDINGMSG_WAITDEFPROCESS = 2,
};

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<Windows::Storage::Streams::IBuffer *,unsigned int>
{
}; /* size: 0x0008 */

enum SYSGEOCLASS
{
  GEOCLASS_NATION = 16,
  GEOCLASS_REGION = 14,
  GEOCLASS_ALL = 0,
};

struct Windows::Foundation::IAsyncOperationProgressHandler<Windows::Storage::Streams::IBuffer *,unsigned int>
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wistd::default_delete<unsigned short [0]>,1,1>
{
}; /* size: 0x0001 */

class wil::details::<lambda_6f57918b5b55001b59ace551d0aa2d6b>
{
}; /* size: 0x0001 */

typedef enum _OS_DEPLOYEMENT_STATE_VALUES
{
  OS_DEPLOYMENT_STANDARD = 1,
  OS_DEPLOYMENT_COMPACT = 2,
} OS_DEPLOYEMENT_STATE_VALUES, *POS_DEPLOYEMENT_STATE_VALUES;

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef struct _WIN32K_SYSCALL_FILTER
{
  /* 0x0000 */ unsigned long FilterState;
  /* 0x0004 */ unsigned long FilterSet;
} WIN32K_SYSCALL_FILTER, *PWIN32K_SYSCALL_FILTER; /* size: 0x0008 */

enum DISPLAYCONFIG_ROTATION
{
  DISPLAYCONFIG_ROTATION_IDENTITY = 1,
  DISPLAYCONFIG_ROTATION_ROTATE90 = 2,
  DISPLAYCONFIG_ROTATION_ROTATE180 = 3,
  DISPLAYCONFIG_ROTATION_ROTATE270 = 4,
  DISPLAYCONFIG_ROTATION_FORCE_UINT32 = -1,
};

struct DISPATCH_FRAME
{
}; /* size: 0x0058 */

typedef enum _HEAP_INFORMATION_CLASS
{
  HeapCompatibilityInformation = 0,
  HeapEnableTerminationOnCorruption = 1,
  HeapExtendedInformation = 2,
  HeapOptimizeResources = 3,
  HeapTaggingInformation = 4,
  HeapStackDatabase = 5,
  HeapMemoryLimit = 6,
  HeapTag = 7,
  HeapDetailedFailureInformation = -2147483647,
  HeapSetDebuggingInformation = -2147483646,
} HEAP_INFORMATION_CLASS, *PHEAP_INFORMATION_CLASS;

class Microsoft::WRL::ComPtr<IDataObject>
{
  /* 0x0000 */ struct IDataObject* ptr_;
}; /* size: 0x0008 */

class SafeCastHelper<unsigned long,unsigned long,0>
{
}; /* size: 0x0001 */

typedef struct _FNSAVE_FORMAT
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
} FNSAVE_FORMAT, *PFNSAVE_FORMAT; /* size: 0x006c */

enum OLETLS_CROSS_THREAD_FLAGS
{
  OLETLS_CROSS_THREAD_PRIORITY_EVENT_PENDING = 1,
  OLETLS_CROSS_THREAD_DISPATCHABLE_CALL_PENDING = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IExtensionRegistration *,1>
{
}; /* size: 0x0008 */

enum EffectiveUnmarshalingPolicy
{
  None = 0,
  Classic = 1,
  Strong = 2,
};

struct IConnectionPoint
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageStreamTransaction *>
{
}; /* size: 0x0008 */

typedef enum _DPFLTR_TYPE
{
  DPFLTR_SYSTEM_ID = 0,
  DPFLTR_SMSS_ID = 1,
  DPFLTR_SETUP_ID = 2,
  DPFLTR_NTFS_ID = 3,
  DPFLTR_FSTUB_ID = 4,
  DPFLTR_CRASHDUMP_ID = 5,
  DPFLTR_CDAUDIO_ID = 6,
  DPFLTR_CDROM_ID = 7,
  DPFLTR_CLASSPNP_ID = 8,
  DPFLTR_DISK_ID = 9,
  DPFLTR_REDBOOK_ID = 10,
  DPFLTR_STORPROP_ID = 11,
  DPFLTR_SCSIPORT_ID = 12,
  DPFLTR_SCSIMINIPORT_ID = 13,
  DPFLTR_CONFIG_ID = 14,
  DPFLTR_I8042PRT_ID = 15,
  DPFLTR_SERMOUSE_ID = 16,
  DPFLTR_LSERMOUS_ID = 17,
  DPFLTR_KBDHID_ID = 18,
  DPFLTR_MOUHID_ID = 19,
  DPFLTR_KBDCLASS_ID = 20,
  DPFLTR_MOUCLASS_ID = 21,
  DPFLTR_TWOTRACK_ID = 22,
  DPFLTR_WMILIB_ID = 23,
  DPFLTR_ACPI_ID = 24,
  DPFLTR_AMLI_ID = 25,
  DPFLTR_HALIA64_ID = 26,
  DPFLTR_VIDEO_ID = 27,
  DPFLTR_SVCHOST_ID = 28,
  DPFLTR_VIDEOPRT_ID = 29,
  DPFLTR_TCPIP_ID = 30,
  DPFLTR_DMSYNTH_ID = 31,
  DPFLTR_NTOSPNP_ID = 32,
  DPFLTR_FASTFAT_ID = 33,
  DPFLTR_SAMSS_ID = 34,
  DPFLTR_PNPMGR_ID = 35,
  DPFLTR_NETAPI_ID = 36,
  DPFLTR_SCSERVER_ID = 37,
  DPFLTR_SCCLIENT_ID = 38,
  DPFLTR_SERIAL_ID = 39,
  DPFLTR_SERENUM_ID = 40,
  DPFLTR_UHCD_ID = 41,
  DPFLTR_RPCPROXY_ID = 42,
  DPFLTR_AUTOCHK_ID = 43,
  DPFLTR_DCOMSS_ID = 44,
  DPFLTR_UNIMODEM_ID = 45,
  DPFLTR_SIS_ID = 46,
  DPFLTR_FLTMGR_ID = 47,
  DPFLTR_WMICORE_ID = 48,
  DPFLTR_BURNENG_ID = 49,
  DPFLTR_IMAPI_ID = 50,
  DPFLTR_SXS_ID = 51,
  DPFLTR_FUSION_ID = 52,
  DPFLTR_IDLETASK_ID = 53,
  DPFLTR_SOFTPCI_ID = 54,
  DPFLTR_TAPE_ID = 55,
  DPFLTR_MCHGR_ID = 56,
  DPFLTR_IDEP_ID = 57,
  DPFLTR_PCIIDE_ID = 58,
  DPFLTR_FLOPPY_ID = 59,
  DPFLTR_FDC_ID = 60,
  DPFLTR_TERMSRV_ID = 61,
  DPFLTR_W32TIME_ID = 62,
  DPFLTR_PREFETCHER_ID = 63,
  DPFLTR_RSFILTER_ID = 64,
  DPFLTR_FCPORT_ID = 65,
  DPFLTR_PCI_ID = 66,
  DPFLTR_DMIO_ID = 67,
  DPFLTR_DMCONFIG_ID = 68,
  DPFLTR_DMADMIN_ID = 69,
  DPFLTR_WSOCKTRANSPORT_ID = 70,
  DPFLTR_VSS_ID = 71,
  DPFLTR_PNPMEM_ID = 72,
  DPFLTR_PROCESSOR_ID = 73,
  DPFLTR_DMSERVER_ID = 74,
  DPFLTR_SR_ID = 75,
  DPFLTR_INFINIBAND_ID = 76,
  DPFLTR_IHVDRIVER_ID = 77,
  DPFLTR_IHVVIDEO_ID = 78,
  DPFLTR_IHVAUDIO_ID = 79,
  DPFLTR_IHVNETWORK_ID = 80,
  DPFLTR_IHVSTREAMING_ID = 81,
  DPFLTR_IHVBUS_ID = 82,
  DPFLTR_HPS_ID = 83,
  DPFLTR_RTLTHREADPOOL_ID = 84,
  DPFLTR_LDR_ID = 85,
  DPFLTR_TCPIP6_ID = 86,
  DPFLTR_ISAPNP_ID = 87,
  DPFLTR_SHPC_ID = 88,
  DPFLTR_STORPORT_ID = 89,
  DPFLTR_STORMINIPORT_ID = 90,
  DPFLTR_PRINTSPOOLER_ID = 91,
  DPFLTR_VSSDYNDISK_ID = 92,
  DPFLTR_VERIFIER_ID = 93,
  DPFLTR_VDS_ID = 94,
  DPFLTR_VDSBAS_ID = 95,
  DPFLTR_VDSDYN_ID = 96,
  DPFLTR_VDSDYNDR_ID = 97,
  DPFLTR_VDSLDR_ID = 98,
  DPFLTR_VDSUTIL_ID = 99,
  DPFLTR_DFRGIFC_ID = 100,
  DPFLTR_DEFAULT_ID = 101,
  DPFLTR_MM_ID = 102,
  DPFLTR_DFSC_ID = 103,
  DPFLTR_WOW64_ID = 104,
  DPFLTR_ALPC_ID = 105,
  DPFLTR_WDI_ID = 106,
  DPFLTR_PERFLIB_ID = 107,
  DPFLTR_KTM_ID = 108,
  DPFLTR_IOSTRESS_ID = 109,
  DPFLTR_HEAP_ID = 110,
  DPFLTR_WHEA_ID = 111,
  DPFLTR_USERGDI_ID = 112,
  DPFLTR_MMCSS_ID = 113,
  DPFLTR_TPM_ID = 114,
  DPFLTR_THREADORDER_ID = 115,
  DPFLTR_ENVIRON_ID = 116,
  DPFLTR_EMS_ID = 117,
  DPFLTR_WDT_ID = 118,
  DPFLTR_FVEVOL_ID = 119,
  DPFLTR_NDIS_ID = 120,
  DPFLTR_NVCTRACE_ID = 121,
  DPFLTR_LUAFV_ID = 122,
  DPFLTR_APPCOMPAT_ID = 123,
  DPFLTR_USBSTOR_ID = 124,
  DPFLTR_SBP2PORT_ID = 125,
  DPFLTR_COVERAGE_ID = 126,
  DPFLTR_CACHEMGR_ID = 127,
  DPFLTR_MOUNTMGR_ID = 128,
  DPFLTR_CFR_ID = 129,
  DPFLTR_TXF_ID = 130,
  DPFLTR_KSECDD_ID = 131,
  DPFLTR_FLTREGRESS_ID = 132,
  DPFLTR_MPIO_ID = 133,
  DPFLTR_MSDSM_ID = 134,
  DPFLTR_UDFS_ID = 135,
  DPFLTR_PSHED_ID = 136,
  DPFLTR_STORVSP_ID = 137,
  DPFLTR_LSASS_ID = 138,
  DPFLTR_SSPICLI_ID = 139,
  DPFLTR_CNG_ID = 140,
  DPFLTR_EXFAT_ID = 141,
  DPFLTR_FILETRACE_ID = 142,
  DPFLTR_XSAVE_ID = 143,
  DPFLTR_SE_ID = 144,
  DPFLTR_DRIVEEXTENDER_ID = 145,
  DPFLTR_POWER_ID = 146,
  DPFLTR_CRASHDUMPXHCI_ID = 147,
  DPFLTR_GPIO_ID = 148,
  DPFLTR_REFS_ID = 149,
  DPFLTR_WER_ID = 150,
  DPFLTR_CAPIMG_ID = 151,
  DPFLTR_VPCI_ID = 152,
  DPFLTR_STORAGECLASSMEMORY_ID = 153,
  DPFLTR_FSLIB_ID = 154,
  DPFLTR_ENDOFTABLE_ID = 155,
} DPFLTR_TYPE, *PDPFLTR_TYPE;

struct Windows::Foundation::Collections::IMap<HSTRING__ *,short>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk>
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk* ptr_;
}; /* size: 0x0008 */

enum JOBOBJECT_IO_ATTRIBUTION_CONTROL_FLAGS
{
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_ENABLE = 1,
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_DISABLE = 2,
  JOBOBJECT_IO_ATTRIBUTION_CONTROL_VALID_FLAGS = 3,
};

enum tagEventLogSD
{
  EventLog_MACHINEACCESSRESTRICTIONS = 0,
  EventLog_MACHINELAUNCHRESTRICTIONS = 1,
  EventLog_DEFAULTLAUNCHPERMISSIONS = 2,
  EventLog_DEFAULTACCESSPERMISSIONS = 3,
  EventLog_SERVERLAUNCHPERMISSIONS = 4,
  EventLog_SERVERACCESSPERMISSIONSREG = 5,
  EventLog_SERVERACCESSPERMISSIONSPROG = 6,
  EventLog_DONTCARE = 7,
};

enum tagVARFLAGS
{
  VARFLAG_FREADONLY = 1,
  VARFLAG_FSOURCE = 2,
  VARFLAG_FBINDABLE = 4,
  VARFLAG_FREQUESTEDIT = 8,
  VARFLAG_FDISPLAYBIND = 16,
  VARFLAG_FDEFAULTBIND = 32,
  VARFLAG_FHIDDEN = 64,
  VARFLAG_FRESTRICTED = 128,
  VARFLAG_FDEFAULTCOLLELEM = 256,
  VARFLAG_FUIDEFAULT = 512,
  VARFLAG_FNONBROWSABLE = 1024,
  VARFLAG_FREPLACEABLE = 2048,
  VARFLAG_FIMMEDIATEBIND = 4096,
};

struct IPipeLong
{
}; /* size: 0x0008 */

enum IMPORT_OBJECT_NAME_TYPE
{
  IMPORT_OBJECT_ORDINAL = 0,
  IMPORT_OBJECT_NAME = 1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 2,
  IMPORT_OBJECT_NAME_UNDECORATE = 3,
  IMPORT_OBJECT_NAME_EXPORTAS = 4,
};

struct GetTypeValueImpl<long,unsigned long>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::IStorageItemInformation *> *>
{
}; /* size: 0x0008 */

struct tagCALPOLESTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_413;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

enum ARM64_FNPDATA_CR
{
  PdataCrUnchained = 0,
  PdataCrUnchainedSavedLr = 1,
  PdataCrChainedWithPac = 2,
  PdataCrChained = 3,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >
{
}; /* size: 0x0008 */

typedef enum _SC_ENUM_TYPE
{
  SC_ENUM_PROCESS_INFO = 0,
} SC_ENUM_TYPE, *PSC_ENUM_TYPE;

enum AppPolicyMediaFoundationCodecLoading
{
  AppPolicyMediaFoundationCodecLoading_All = 0,
  AppPolicyMediaFoundationCodecLoading_InboxOnly = 1,
};

typedef struct _ITEMID_CHILD
{
} ITEMID_CHILD, *PITEMID_CHILD; /* size: 0x0003 */

typedef enum _PRIORITY_HINT
{
  IoPriorityHintVeryLow = 0,
  IoPriorityHintLow = 1,
  IoPriorityHintNormal = 2,
  MaximumIoPriorityHintType = 3,
} PRIORITY_HINT, *PPRIORITY_HINT;

typedef enum _SE_VALIDATE_MAPPING_TYPE
{
  SE_VALIDATE_MAPPING_HEADER_ONLY = 0,
  SE_VALIDATE_MAPPING_ENTIRE_IMAGE = 1,
  SE_VALIDATE_MAPPING_ENTIRE_IMAGE_CLEAN = 2,
} SE_VALIDATE_MAPPING_TYPE, *PSE_VALIDATE_MAPPING_TYPE;

enum tagFUNCFLAGS
{
  FUNCFLAG_FRESTRICTED = 1,
  FUNCFLAG_FSOURCE = 2,
  FUNCFLAG_FBINDABLE = 4,
  FUNCFLAG_FREQUESTEDIT = 8,
  FUNCFLAG_FDISPLAYBIND = 16,
  FUNCFLAG_FDEFAULTBIND = 32,
  FUNCFLAG_FHIDDEN = 64,
  FUNCFLAG_FUSESGETLASTERROR = 128,
  FUNCFLAG_FDEFAULTCOLLELEM = 256,
  FUNCFLAG_FUIDEFAULT = 512,
  FUNCFLAG_FNONBROWSABLE = 1024,
  FUNCFLAG_FREPLACEABLE = 2048,
  FUNCFLAG_FIMMEDIATEBIND = 4096,
};

struct IXMLAttribute
{
}; /* size: 0x0008 */

enum tagPreferredServerBitness
{
  SERVER_BITNESS_DEFAULT = 0,
  SERVER_BITNESS_FOLLOW_CLIENT = 1,
  SERVER_BITNESS_X86 = 2,
  SERVER_BITNESS_X64 = 3,
  SERVER_BITNESS_ARM32 = 4,
  SERVER_BITNESS_ARM64 = 5,
  SERVER_BITNESS_NATIVE = -2147483648,
};

typedef struct _OA_SAFEARRAY_USER_MARSHAL_ROUTINE_TRIPLE
{
  /* 0x0000 */ void* pfnBufferSize /* function */;
  /* 0x0008 */ void* pfnMarshall /* function */;
  /* 0x0010 */ void* pfnUnmarshall /* function */;
} OA_SAFEARRAY_USER_MARSHAL_ROUTINE_TRIPLE, *POA_SAFEARRAY_USER_MARSHAL_ROUTINE_TRIPLE; /* size: 0x0018 */

enum AgileReferenceOptions
{
  AGILEREFERENCE_DEFAULT = 0,
  AGILEREFERENCE_DELAYEDMARSHAL = 1,
};

typedef enum _SAFER_OBJECT_INFO_CLASS
{
  SaferObjectLevelId = 1,
  SaferObjectScopeId = 2,
  SaferObjectFriendlyName = 3,
  SaferObjectDescription = 4,
  SaferObjectBuiltin = 5,
  SaferObjectDisallowed = 6,
  SaferObjectDisableMaxPrivilege = 7,
  SaferObjectInvertDeletedPrivileges = 8,
  SaferObjectDeletedPrivileges = 9,
  SaferObjectDefaultOwner = 10,
  SaferObjectSidsToDisable = 11,
  SaferObjectRestrictedSidsInverted = 12,
  SaferObjectRestrictedSidsAdded = 13,
  SaferObjectAllIdentificationGuids = 14,
  SaferObjectSingleIdentification = 15,
  SaferObjectExtendedError = 16,
} SAFER_OBJECT_INFO_CLASS, *PSAFER_OBJECT_INFO_CLASS;

struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

typedef enum _AVRF_MODE_FLAGS
{
  APP_VERIFIER_DISABLED = 0,
  APP_VERIFIER_ENABLED = 1,
  APP_VERIFIER_MITIGATIONS = 2,
} AVRF_MODE_FLAGS, *PAVRF_MODE_FLAGS;

class IntTraits<long>
{
  union
  {
    /* 0x0000 */ const long maxInt;
    /* 0x0000 */ const long minInt;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> >;

struct Windows::Foundation::IAsyncOperation<_GUID>
{
}; /* size: 0x0008 */

enum PackageDependencyProcessorArchitectures
{
  PackageDependencyProcessorArchitectures_None = 0,
  PackageDependencyProcessorArchitectures_Neutral = 1,
  PackageDependencyProcessorArchitectures_X86 = 2,
  PackageDependencyProcessorArchitectures_X64 = 4,
  PackageDependencyProcessorArchitectures_Arm = 8,
  PackageDependencyProcessorArchitectures_Arm64 = 16,
  PackageDependencyProcessorArchitectures_X86A64 = 32,
};

struct wil::details::ApiTelemetryLogger::ApiDataList::ApiData
{
  /* 0x0000 */ const wchar_t* className;
  /* 0x0008 */ const wchar_t* apiName;
  /* 0x0010 */ const char* specialization;
  /* 0x0018 */ volatile long* counterReference;
  /* 0x0020 */ class wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > next;
}; /* size: 0x0028 */

typedef enum _PROCESS_INFORMATION_CLASS
{
  ProcessMemoryPriority = 0,
  ProcessMemoryExhaustionInfo = 1,
  ProcessAppMemoryInfo = 2,
  ProcessInPrivateInfo = 3,
  ProcessPowerThrottling = 4,
  ProcessReservedValue1 = 5,
  ProcessTelemetryCoverageInfo = 6,
  ProcessProtectionLevelInfo = 7,
  ProcessLeapSecondInfo = 8,
  ProcessMachineTypeInfo = 9,
  ProcessInformationClassMax = 10,
} PROCESS_INFORMATION_CLASS, *PPROCESS_INFORMATION_CLASS;

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef enum __MIDL_IBindStatusCallback_0005
{
  BINDINFO_OPTIONS_WININETFLAG = 0x10000,
  BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
  BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
  BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
  BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
  BINDINFO_OPTIONS_SECURITYOPTOUT = 0x200000,
  BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 0x400000,
  BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 0x800000,
  BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 0x1000000,
  BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 0x2000000,
  BINDINFO_WPC_DOWNLOADBLOCKED = 0x8000000,
  BINDINFO_WPC_LOGGING_ENABLED = 0x10000000,
  BINDINFO_OPTIONS_ALLOWCONNECTDATA = 0x20000000,
  BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 0x40000000,
  BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648,
} _MIDL_IBindStatusCallback_0005, *P_MIDL_IBindStatusCallback_0005;

struct Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *>
{
}; /* size: 0x0008 */

struct tagMSLLHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long flags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ long Padding_414;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

struct IComClassIterator
{
}; /* size: 0x0008 */

typedef enum _COPYFILE2_MESSAGE_TYPE
{
  COPYFILE2_CALLBACK_NONE = 0,
  COPYFILE2_CALLBACK_CHUNK_STARTED = 1,
  COPYFILE2_CALLBACK_CHUNK_FINISHED = 2,
  COPYFILE2_CALLBACK_STREAM_STARTED = 3,
  COPYFILE2_CALLBACK_STREAM_FINISHED = 4,
  COPYFILE2_CALLBACK_POLL_CONTINUE = 5,
  COPYFILE2_CALLBACK_ERROR = 6,
  COPYFILE2_CALLBACK_MAX = 7,
} COPYFILE2_MESSAGE_TYPE, *PCOPYFILE2_MESSAGE_TYPE;

typedef enum _THREAD_INFORMATION_CLASS
{
  ThreadMemoryPriority = 0,
  ThreadAbsoluteCpuPriority = 1,
  ThreadDynamicCodePolicy = 2,
  ThreadPowerThrottling = 3,
  ThreadInformationClassMax = 4,
} THREAD_INFORMATION_CLASS, *PTHREAD_INFORMATION_CLASS;

typedef struct _wfinddata64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_415;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddata64_t, *Pwfinddata64_t; /* size: 0x0230 */

enum AppPolicyShowDeveloperDiagnostic
{
  AppPolicyShowDeveloperDiagnostic_None = 0,
  AppPolicyShowDeveloperDiagnostic_ShowUI = 1,
};

typedef struct _CRYPT_RC2_CBC_PARAMETERS
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ int fIV;
  /* 0x0008 */ unsigned char rgbIV[8];
} CRYPT_RC2_CBC_PARAMETERS, *PCRYPT_RC2_CBC_PARAMETERS; /* size: 0x0010 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
{
  /* 0x0000 */ void* pValue;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ long __PADDING__[1];
} TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE, *PTOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE; /* size: 0x0010 */

typedef enum _FILTER_BOOT_OPTION_OPERATION
{
  FilterBootOptionOperationOpenSystemStore = 0,
  FilterBootOptionOperationSetElement = 1,
  FilterBootOptionOperationDeleteElement = 2,
  FilterBootOptionOperationMax = 3,
} FILTER_BOOT_OPTION_OPERATION, *PFILTER_BOOT_OPTION_OPERATION;

struct IDataTransfer
{
}; /* size: 0x0008 */

enum OFFER_PRIORITY
{
  VmOfferPriorityVeryLow = 1,
  VmOfferPriorityLow = 2,
  VmOfferPriorityBelowNormal = 3,
  VmOfferPriorityNormal = 4,
};

struct wistd::__unique_ptr_deleter_sfinae<wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >;

struct tagRemHMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ unsigned long cbData;
  /* 0x0010 */ unsigned char data[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct tagSRVRDISPATCHDATA
{
  /* 0x0000 */ long Padding_416[2];
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ void* hData;
  /* 0x0018 */ struct HWND__* wParam;
  /* 0x0020 */ class CDDEServer* lpsrvr;
}; /* size: 0x0028 */

class RenderFormat::__l28::<lambda_ac11c26dd3ae65ee398a5e6a0af64263>
{
  /* 0x0000 */ struct HWND__*& hClipWnd;
  /* 0x0008 */ void*& pvMTADataObject;
  /* 0x0010 */ unsigned int& cf;
  /* 0x0018 */ struct tagSTGMEDIUM& medium;
  /* 0x0020 */ BOOL& fMediumIsInMTA;
}; /* size: 0x0028 */

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL
{
  BackTraceDatabaseCreate = 0,
  BackTraceDatabaseDelete = 1,
  BackTraceDatabaseFlush = 2,
  BackTraceDatabaseMaxControl = 3,
} RTL_STACK_TRACE_DATABASE_CONTROL, *PRTL_STACK_TRACE_DATABASE_CONTROL;

class Microsoft::WRL::ComPtr<CEnumFmt10>
{
  /* 0x0000 */ class CEnumFmt10* ptr_;
}; /* size: 0x0008 */

class wil::details::<lambda_9c9f931296e6a830dccf0d8124ec813c>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

enum AppPolicyProcessTerminationMethod
{
  AppPolicyProcessTerminationMethod_ExitProcess = 0,
  AppPolicyProcessTerminationMethod_TerminateProcess = 1,
};

struct CompObjHdr
{
  /* 0x0000 */ unsigned long m_dwFirstDword;
  /* 0x0004 */ unsigned long m_dwOSVer;
  /* 0x0008 */ unsigned long m_unused;
  /* 0x000c */ struct _GUID m_clsClass;
}; /* size: 0x001c */

enum TXTTYPE
{
  TT_UNICODE = 0,
  TT_ANSI = 1,
};

class CompObjStmData
{
  /* 0x0000 */ struct CompObjHdr m_hdr;
  /* 0x001c */ unsigned long m_cchUserType;
  /* 0x0020 */ unsigned long m_cchProgID;
  /* 0x0024 */ unsigned long m_dwFormatTag;
  /* 0x0028 */ unsigned long m_ulFormatID;
  /* 0x002c */ long Padding_417;
  /* 0x0030 */ wchar_t* m_pszOUserType;
  /* 0x0038 */ wchar_t* m_pszOProgID;
  /* 0x0040 */ char* m_pszAUserType;
  /* 0x0048 */ char* m_pszAProgID;
  /* 0x0050 */ enum TXTTYPE ttClipString;
}; /* size: 0x0058 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>
{
}; /* size: 0x0008 */

enum AppPolicyClrCompat
{
  AppPolicyClrCompat_Other = 0,
  AppPolicyClrCompat_ClassicDesktop = 1,
  AppPolicyClrCompat_Universal = 2,
  AppPolicyClrCompat_PackagedDesktop = 3,
};

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

enum POINTER_FEEDBACK_MODE
{
  POINTER_FEEDBACK_DEFAULT = 1,
  POINTER_FEEDBACK_INDIRECT = 2,
  POINTER_FEEDBACK_NONE = 3,
};

class wil::details::<lambda_1aea5f85821ff488f802c562595593c0>
{
}; /* size: 0x0001 */

enum LATENCY_TIME
{
  LT_DONT_CARE = 0,
  LT_LOWEST_LATENCY = 1,
};

class Common::AutoPtr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,&ARI::AutoPtrAriHeapDeallocate<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION> >
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* p;
}; /* size: 0x0008 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> >;

struct Windows::Foundation::Collections::IVector<double>
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >
{
}; /* size: 0x0008 */

struct wil::details::folder_change_reader_state
{
  /* 0x0000 */ class wistd::function<void __cdecl(enum wil::FolderChangeEvent,unsigned short const *)> m_callback;
  /* 0x0078 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> > > m_folderHandle;
  /* 0x0080 */ int m_isRecursive;
  /* 0x0084 */ enum wil::FolderChangeEvents m_filter;
  /* 0x0088 */ struct _OVERLAPPED m_overlapped;
  /* 0x00a8 */ struct _TP_IO* m_tpIo;
  /* 0x00b0 */ class wil::srwlock m_cancelLock;
  /* 0x00b8 */ char m_readBuffer[4096];
}; /* size: 0x10b8 */

enum TOOLTIP_DISMISS_FLAGS
{
  TDF_REGISTER = 1,
  TDF_UNREGISTER = 2,
};

struct Windows::Storage::Streams::IRandomAccessStream
{
}; /* size: 0x0008 */

enum SYSGEOTYPE
{
  GEO_NATION = 1,
  GEO_LATITUDE = 2,
  GEO_LONGITUDE = 3,
  GEO_ISO2 = 4,
  GEO_ISO3 = 5,
  GEO_RFC1766 = 6,
  GEO_LCID = 7,
  GEO_FRIENDLYNAME = 8,
  GEO_OFFICIALNAME = 9,
  GEO_TIMEZONES = 10,
  GEO_OFFICIALLANGUAGES = 11,
  GEO_ISO_UN_NUMBER = 12,
  GEO_PARENT = 13,
  GEO_DIALINGCODE = 14,
  GEO_CURRENCYCODE = 15,
  GEO_CURRENCYSYMBOL = 16,
  GEO_NAME = 17,
  GEO_ID = 18,
};

enum APPSTATE
{
  ABSENT = 0,
  ASSIGNED = 1,
  PUBLISHED = 2,
};

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,HSTRING__ *> *,1>
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_immact_0000_0002_0002
{
  INVALID_LUA_RUNLEVEL = -1,
} _MIDL___MIDL_itf_immact_0000_0002_0002, *P_MIDL___MIDL_itf_immact_0000_0002_0002;

class wil::details::<lambda_7eb39bb9e6cdfb6ff1aee2ae861927e3>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::StorageItemThumbnail *>
{
}; /* size: 0x0008 */

typedef enum _operators
{
  OP_START = 0,
  OP_ILLEGAL = 0,
  OP_UNARY_START = 1,
  OP_UNARY_ARITHMETIC_START = 1,
  OP_UNARY_PLUS = 1,
  OP_UNARY_MINUS = 2,
  OP_UNARY_ARITHMETIC_END = 3,
  OP_UNARY_LOGICAL_START = 3,
  OP_UNARY_NOT = 3,
  OP_UNARY_COMPLEMENT = 4,
  OP_UNARY_LOGICAL_END = 5,
  OP_UNARY_INDIRECTION = 5,
  OP_UNARY_CAST = 6,
  OP_UNARY_AND = 7,
  OP_UNARY_SIZEOF = 8,
  OP_UNARY_ALIGNOF = 9,
  OP_PRE_INCR = 10,
  OP_PRE_DECR = 11,
  OP_POST_INCR = 12,
  OP_POST_DECR = 13,
  OP_UNARY_END = 14,
  OP_BINARY_START = 14,
  OP_BINARY_ARITHMETIC_START = 14,
  OP_PLUS = 14,
  OP_MINUS = 15,
  OP_STAR = 16,
  OP_SLASH = 17,
  OP_MOD = 18,
  OP_BINARY_ARITHMETIC_END = 19,
  OP_BINARY_SHIFT_START = 19,
  OP_LEFT_SHIFT = 19,
  OP_RIGHT_SHIFT = 20,
  OP_BINARY_SHIFT_END = 21,
  OP_BINARY_RELATIONAL_START = 21,
  OP_LESS = 21,
  OP_LESS_EQUAL = 22,
  OP_GREATER_EQUAL = 23,
  OP_GREATER = 24,
  OP_EQUAL = 25,
  OP_NOT_EQUAL = 26,
  OP_BINARY_RELATIONAL_END = 27,
  OP_BINARY_BITWISE_START = 27,
  OP_AND = 27,
  OP_OR = 28,
  OP_XOR = 29,
  OP_BINARY_BITWISE_END = 30,
  OP_BINARY_LOGICAL_START = 30,
  OP_LOGICAL_AND = 30,
  OP_LOGICAL_OR = 31,
  OP_BINARY_LOGICAL_END = 32,
  OP_BINARY_TERNARY_START = 32,
  OP_QM = 32,
  OP_COLON = 33,
  OP_BINARY_TERNARY_END = 34,
  OP_BINARY_END = 34,
  OP_INTERNAL_START = 34,
  OP_FUNCTION = 35,
  OP_PARAM = 36,
  OP_POINTSTO = 37,
  OP_DOT = 38,
  OP_INDEX = 39,
  OP_COMMA = 40,
  OP_STMT = 41,
  OP_ASSIGN = 42,
  OP_ASYNCSPLIT = 43,
  OP_CORR_POINTER = 44,
  OP_CORR_TOP_LEVEL = 45,
  OP_END = 46,
} operators, *Poperators;

typedef enum _htmlCellAlign
{
  htmlCellAlignNotSet = 0,
  htmlCellAlignLeft = 1,
  htmlCellAlignCenter = 2,
  htmlCellAlignRight = 3,
  htmlCellAlignMiddle = 2,
  htmlCellAlign_Max = 0x7fffffff,
} htmlCellAlign, *PhtmlCellAlign;

class Enum
{
}; /* size: 0x0008 */

typedef enum _htmlCellVAlign
{
  htmlCellVAlignNotSet = 0,
  htmlCellVAlignTop = 1,
  htmlCellVAlignMiddle = 2,
  htmlCellVAlignBottom = 3,
  htmlCellVAlignBaseline = 4,
  htmlCellVAlignCenter = 2,
  htmlCellVAlign_Max = 0x7fffffff,
} htmlCellVAlign, *PhtmlCellVAlign;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt10> const >;

typedef enum _SEARCH_TERM_EXPANSION
{
  SEARCH_TERM_NO_EXPANSION = 0,
  SEARCH_TERM_PREFIX_ALL = 1,
  SEARCH_TERM_STEM_ALL = 2,
} SEARCH_TERM_EXPANSION, *PSEARCH_TERM_EXPANSION;

struct Windows::Foundation::IAsyncOperation<enum Windows::System::UserAgeConsentResult>
{
}; /* size: 0x0008 */

struct std::atomic_flag
{
  /* 0x0000 */ struct std::atomic<long> _Storage;
}; /* size: 0x0004 */

typedef struct _RTL_FEATURE_USAGE_REPORT
{
  /* 0x0000 */ unsigned int FeatureId;
  /* 0x0004 */ unsigned short ReportingKind;
  /* 0x0006 */ unsigned short ReportingOptions;
} RTL_FEATURE_USAGE_REPORT, *PRTL_FEATURE_USAGE_REPORT; /* size: 0x0008 */

typedef enum _AUTH_TYPE
{
  eAUTH_TYPE_ANONYMOUS = 0,
  eAUTH_TYPE_NTLM = 1,
  eAUTH_TYPE_BASIC = 2,
} AUTH_TYPE, *PAUTH_TYPE;

class wil::details::<lambda_205ba715e1b020179bdaff1f99f14edf>
{
}; /* size: 0x0001 */

struct tagProxyFileInfo
{
  /* 0x0000 */ struct tagCInterfaceProxyVtbl* const* pProxyVtblList;
  /* 0x0008 */ struct tagCInterfaceStubVtbl* const* pStubVtblList;
  /* 0x0010 */ const char* const* pNamesArray;
  /* 0x0018 */ const struct _GUID** pDelegatedIIDs;
  /* 0x0020 */ void* const pIIDLookupRtn /* function */;
  /* 0x0028 */ unsigned short TableSize;
  /* 0x002a */ unsigned short TableVersion;
  /* 0x002c */ long Padding_418;
  /* 0x0030 */ const struct _GUID** pAsyncIIDLookup;
  /* 0x0038 */ __int64 Filler2;
  /* 0x0040 */ __int64 Filler3;
  /* 0x0048 */ __int64 Filler4;
}; /* size: 0x0050 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>
{
}; /* size: 0x0008 */

typedef enum _PROXY_ACCESS
{
  PROXY_ACCESS_PRECONFIG = 0,
  PROXY_ACCESS_DIRECT = 1,
  PROXY_ACCESS_PROXY = 2,
} PROXY_ACCESS, *PPROXY_ACCESS;

class wil::details::<lambda_8cc21529f583b174057c6bb7b3da75d2>
{
}; /* size: 0x0001 */

class MultiplicationMethod<unsigned short,unsigned short>
{
}; /* size: 0x0001 */

enum DBPOSITIONFLAGSENUM
{
  DBPOSITION_OK = 0,
  DBPOSITION_NOROW = 1,
  DBPOSITION_BOF = 2,
  DBPOSITION_EOF = 3,
};

struct FMT
{
  /* 0x0000 */ unsigned short cf;
  /* 0x0002 */ char Padding_419[2];
  /* 0x0004 */ unsigned long dw;
}; /* size: 0x0008 */

enum DBSORTENUM
{
  DBSORT_ASCENDING = 0,
  DBSORT_DESCENDING = 1,
};

enum DBASYNCHPHASEENUM
{
  DBASYNCHPHASE_INITIALIZATION = 0,
  DBASYNCHPHASE_POPULATION = 1,
  DBASYNCHPHASE_COMPLETE = 2,
  DBASYNCHPHASE_CANCELED = 3,
};

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef const >
{
  /* 0x0000 */ const class Microsoft::WRL::WeakRef* ptr_;
}; /* size: 0x0008 */

enum DBREASONENUM
{
  DBREASON_ROWSET_FETCHPOSITIONCHANGE = 0,
  DBREASON_ROWSET_RELEASE = 1,
  DBREASON_COLUMN_SET = 2,
  DBREASON_COLUMN_RECALCULATED = 3,
  DBREASON_ROW_ACTIVATE = 4,
  DBREASON_ROW_RELEASE = 5,
  DBREASON_ROW_DELETE = 6,
  DBREASON_ROW_FIRSTCHANGE = 7,
  DBREASON_ROW_INSERT = 8,
  DBREASON_ROW_RESYNCH = 9,
  DBREASON_ROW_UNDOCHANGE = 10,
  DBREASON_ROW_UNDOINSERT = 11,
  DBREASON_ROW_UNDODELETE = 12,
  DBREASON_ROW_UPDATE = 13,
  DBREASON_ROWSET_CHANGED = 14,
};

struct tagCInterfaceProxyHeader
{
  /* 0x0000 */ const void* pStublessProxyInfo;
  /* 0x0008 */ const struct _GUID* piid;
}; /* size: 0x0010 */

struct tagCInterfaceProxyVtbl
{
  /* 0x0000 */ struct tagCInterfaceProxyHeader header;
  /* 0x0010 */ void** Vtbl /* zero-length array */;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

enum DBEVENTPHASEENUM
{
  DBEVENTPHASE_OKTODO = 0,
  DBEVENTPHASE_ABOUTTODO = 1,
  DBEVENTPHASE_SYNCHAFTER = 2,
  DBEVENTPHASE_FAILEDTODO = 3,
  DBEVENTPHASE_DIDEVENT = 4,
};

enum DBINDEX_COL_ORDERENUM
{
  DBINDEX_COL_ORDER_ASC = 0,
  DBINDEX_COL_ORDER_DESC = 1,
};

typedef struct _PROXY_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_420;
  /* 0x0008 */ const wchar_t* pcwszUserAgent;
  /* 0x0010 */ enum _PROXY_ACCESS paUseProxy;
  /* 0x0014 */ int fLocalBypass;
  /* 0x0018 */ unsigned long dwPortNumber;
  /* 0x001c */ long Padding_421;
  /* 0x0020 */ const wchar_t* pcwszProxyName;
  /* 0x0028 */ const wchar_t* pcwszBypassList;
} PROXY_INFO, *PPROXY_INFO; /* size: 0x0030 */

struct Microsoft::WRL::RuntimeClassFlags<2>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

enum tagDBBOOKMARK
{
  DBBMK_INVALID = 0,
  DBBMK_FIRST = 1,
  DBBMK_LAST = 2,
};

struct Windows::Foundation::Collections::IIterable<unsigned int>
{
}; /* size: 0x0008 */

class Windows::Internal::ResourceString
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IUnwrappableDataObject>
{
  /* 0x0000 */ struct IUnwrappableDataObject* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> >
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>* ptr_;
}; /* size: 0x0008 */

enum DBKINDENUM
{
  DBKIND_GUID_NAME = 0,
  DBKIND_GUID_PROPID = 1,
  DBKIND_NAME = 2,
  DBKIND_PGUID_NAME = 3,
  DBKIND_PGUID_PROPID = 4,
  DBKIND_PROPID = 5,
  DBKIND_GUID = 6,
};

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileReference> >;

typedef struct _SYSTEM_SHADOW_STACK_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long CetCapable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long UserCetAllowed : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedForUserCet : 6; /* bit position: 2 */
      /* 0x0000 */ unsigned long KernelCetEnabled : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long KernelCetAuditModeEnabled : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long ReservedForKernelCet : 6; /* bit position: 10 */
      /* 0x0000 */ unsigned long Reserved : 16; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} SYSTEM_SHADOW_STACK_INFORMATION, *PSYSTEM_SHADOW_STACK_INFORMATION; /* size: 0x0004 */

enum ISOFLAG
{
  ISOFLAG_RETAIN_COMMIT_DC = 1,
  ISOFLAG_RETAIN_COMMIT = 2,
  ISOFLAG_RETAIN_COMMIT_NO = 3,
  ISOFLAG_RETAIN_ABORT_DC = 4,
  ISOFLAG_RETAIN_ABORT = 8,
  ISOFLAG_RETAIN_ABORT_NO = 12,
  ISOFLAG_RETAIN_DONTCARE = 5,
  ISOFLAG_RETAIN_BOTH = 10,
  ISOFLAG_RETAIN_NONE = 15,
  ISOFLAG_OPTIMISTIC = 16,
  ISOFLAG_READONLY = 32,
};

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
} MINIDUMP_HANDLE_DESCRIPTOR, *PMINIDUMP_HANDLE_DESCRIPTOR; /* size: 0x0020 */

struct Windows::Foundation::Collections::IVector<__int64>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS
{
  /* 0x0000 */ void* UserKeyHandle;
} SYSTEM_ACTIVITY_MODERATION_USER_SETTINGS, *PSYSTEM_ACTIVITY_MODERATION_USER_SETTINGS; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<double>
{
}; /* size: 0x0008 */

class SafeCastHelper<unsigned long,long,1>
{
}; /* size: 0x0001 */

enum tagCHUNKSTATE
{
  CHUNK_TEXT = 1,
  CHUNK_VALUE = 2,
  CHUNK_FILTER_OWNED_VALUE = 4,
};

enum tagCHUNK_BREAKTYPE
{
  CHUNK_NO_BREAK = 0,
  CHUNK_EOW = 1,
  CHUNK_EOS = 2,
  CHUNK_EOP = 3,
  CHUNK_EOC = 4,
};

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BufferLength;
  /* 0x0008 */ void* Buffer;
} PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA, *PPLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA; /* size: 0x0010 */

typedef enum _SQM_TYPE
{
  SQM_TYPE_NONE = 0,
  SQM_TYPE_DWORD = 1,
  SQM_TYPE_STRING = 2,
  SQM_TYPE_DWORD64 = 3,
} SQM_TYPE, *PSQM_TYPE;

class HashInt
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

class CTrackingCompositeMoniker
{
  /* 0x0000 */ long Padding_422[2];
  /* 0x0008 */ class CCompositeMoniker* _pCCM;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_368
{
  method = 0,
} TAG_UNNAMED_368, *PTAG_UNNAMED_368;

class wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION* m_ptr;
}; /* size: 0x0008 */

typedef struct __GENERIC_BINDING_INFO
{
  /* 0x0000 */ void* pObj;
  /* 0x0008 */ unsigned int Size;
  /* 0x000c */ long Padding_423;
  /* 0x0010 */ void* pfnBind /* function */;
  /* 0x0018 */ void* pfnUnbind /* function */;
} _GENERIC_BINDING_INFO, *P_GENERIC_BINDING_INFO; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_369
{
  method = 2,
} TAG_UNNAMED_369, *PTAG_UNNAMED_369;

class std::reverse_iterator<std::_String_view_iterator<std::char_traits<char32_t> > >;

typedef enum _TAG_UNNAMED_370
{
  isBothSigned = 0,
  isBothUnsigned = 0,
  isLikeSigned = 0,
  isCastOK = 0,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_370, *PTAG_UNNAMED_370;

class Microsoft::WRL::ComPtr<INotARealInterface>
{
  /* 0x0000 */ struct INotARealInterface* ptr_;
}; /* size: 0x0008 */

struct wistd::function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>::__callable_imp<<lambda_e06473e64d77ff850420a9b624ffc716>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_371
{
  method = 1,
} TAG_UNNAMED_371, *PTAG_UNNAMED_371;

struct IPersistPropertyBag
{
}; /* size: 0x0008 */

class wil::com_ptr_t<NdrTypeInfo,wil::err_returncode_policy>
{
  /* 0x0000 */ struct NdrTypeInfo* m_ptr;
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_372
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 0,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 1,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_372, *PTAG_UNNAMED_372;

typedef struct _SERVICE_FAILURE_ACTIONSA
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ long Padding_424;
  /* 0x0008 */ char* lpRebootMsg;
  /* 0x0010 */ char* lpCommand;
  /* 0x0018 */ unsigned long cActions;
  /* 0x001c */ long Padding_425;
  /* 0x0020 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSA, *PSERVICE_FAILURE_ACTIONSA; /* size: 0x0028 */

enum EXTENDED_NAME_FORMAT
{
  NameUnknown = 0,
  NameFullyQualifiedDN = 1,
  NameSamCompatible = 2,
  NameDisplay = 3,
  NameUniqueId = 6,
  NameCanonical = 7,
  NameUserPrincipal = 8,
  NameCanonicalEx = 9,
  NameServicePrincipal = 10,
  NameDnsDomain = 12,
  NameGivenName = 13,
  NameSurname = 14,
};

class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>
{
  /* 0x0000 */ long Padding_426[46];
  /* 0x00b8 */ class XSLOCK m_xslAgeOutLock;
  /* 0x0138 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x013c */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x0140 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

enum wil::OpenThreadTokenAs
{
  Current = 0,
  Self = 1,
};

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_373
{
  _tlgLevelConst = 5,
} TAG_UNNAMED_373, *PTAG_UNNAMED_373;

struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_427;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING ValueName;
  /* 0x0038 */ unsigned long OldValueType;
  /* 0x003c */ unsigned long OldDataLength;
  /* 0x0040 */ void* OldData;
  /* 0x0048 */ unsigned long NewValueType;
  /* 0x004c */ unsigned long NewDataLength;
  /* 0x0050 */ void* NewData;
} JOURNAL_SET_DELETE_VALUE_INFORMATION, *PJOURNAL_SET_DELETE_VALUE_INFORMATION; /* size: 0x0058 */

typedef struct _RPC_MESSAGE
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long DataRepresentation;
  /* 0x000c */ long Padding_428;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned int BufferLength;
  /* 0x001c */ unsigned int ProcNum;
  /* 0x0020 */ struct _RPC_SYNTAX_IDENTIFIER* TransferSyntax;
  /* 0x0028 */ void* RpcInterfaceInformation;
  /* 0x0030 */ void* ReservedForRuntime;
  /* 0x0038 */ void* ManagerEpv;
  /* 0x0040 */ void* ImportContext;
  /* 0x0048 */ unsigned long RpcFlags;
  /* 0x004c */ long __PADDING__[1];
} RPC_MESSAGE, *PRPC_MESSAGE; /* size: 0x0050 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>
{
}; /* size: 0x0008 */

class OleSetClipboard::__l14::<lambda_9370c4e5c64663684a8eb35dd7926c23>
{
  /* 0x0000 */ struct IDataObject* pDataObject;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>
{
}; /* size: 0x0008 */

class OleClipboardTracing
{
  /* 0x0000 */ long Padding_429[6];
  /* 0x0018 */ struct OleClipboardTracing::StaticHandle m_staticHandle;
}; /* size: 0x0020 */

typedef struct _IMAGEHLP_JIT_SYMBOL_MAP
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_430;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned __int64 BaseOfImage;
} IMAGEHLP_JIT_SYMBOL_MAP, *PIMAGEHLP_JIT_SYMBOL_MAP; /* size: 0x0018 */

typedef struct _TRIVERTEX
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
  /* 0x0008 */ unsigned short Red;
  /* 0x000a */ unsigned short Green;
  /* 0x000c */ unsigned short Blue;
  /* 0x000e */ unsigned short Alpha;
} TRIVERTEX, *PTRIVERTEX; /* size: 0x0010 */

class CDefLink::CPrivUnknown
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ARM64EC_CODE_RANGE_ENTRY_POINT
{
  /* 0x0000 */ unsigned long StartRva;
  /* 0x0004 */ unsigned long EndRva;
  /* 0x0008 */ unsigned long EntryPoint;
} IMAGE_ARM64EC_CODE_RANGE_ENTRY_POINT, *PIMAGE_ARM64EC_CODE_RANGE_ENTRY_POINT; /* size: 0x000c */

struct IThumbnailExtractor
{
}; /* size: 0x0008 */

typedef struct _MIDL_STUB_MESSAGE
{
  /* 0x0000 */ struct _RPC_MESSAGE* RpcMsg;
  /* 0x0008 */ unsigned char* Buffer;
  /* 0x0010 */ unsigned char* BufferStart;
  /* 0x0018 */ unsigned char* BufferEnd;
  /* 0x0020 */ unsigned char* BufferMark;
  /* 0x0028 */ unsigned long BufferLength;
  /* 0x002c */ unsigned long MemorySize;
  /* 0x0030 */ unsigned char* Memory;
  /* 0x0038 */ unsigned char IsClient;
  /* 0x0039 */ unsigned char Pad;
  /* 0x003a */ unsigned short uFlags2;
  /* 0x003c */ int ReuseBuffer;
  /* 0x0040 */ struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
  /* 0x0048 */ struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
  /* 0x0050 */ int IgnoreEmbeddedPointers;
  /* 0x0054 */ long Padding_431;
  /* 0x0058 */ unsigned char* PointerBufferMark;
  /* 0x0060 */ unsigned char CorrDespIncrement;
  /* 0x0061 */ unsigned char uFlags;
  /* 0x0062 */ unsigned short UniquePtrCount;
  /* 0x0064 */ long Padding_432;
  /* 0x0068 */ unsigned __int64 MaxCount;
  /* 0x0070 */ unsigned long Offset;
  /* 0x0074 */ unsigned long ActualCount;
  /* 0x0078 */ void* pfnAllocate /* function */;
  /* 0x0080 */ void* pfnFree /* function */;
  /* 0x0088 */ unsigned char* StackTop;
  /* 0x0090 */ unsigned char* pPresentedType;
  /* 0x0098 */ unsigned char* pTransmitType;
  /* 0x00a0 */ void* SavedHandle;
  /* 0x00a8 */ const struct _MIDL_STUB_DESC* StubDesc;
  /* 0x00b0 */ struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
  /* 0x00b8 */ unsigned long FullPtrRefId;
  /* 0x00bc */ unsigned long PointerLength;
  struct /* bitfield */
  {
    /* 0x00c0 */ int fInDontFree : 1; /* bit position: 0 */
    /* 0x00c0 */ int fDontCallFreeInst : 1; /* bit position: 1 */
    /* 0x00c0 */ int fUnused1 : 1; /* bit position: 2 */
    /* 0x00c0 */ int fHasReturn : 1; /* bit position: 3 */
    /* 0x00c0 */ int fHasExtensions : 1; /* bit position: 4 */
    /* 0x00c0 */ int fHasNewCorrDesc : 1; /* bit position: 5 */
    /* 0x00c0 */ int fIsIn : 1; /* bit position: 6 */
    /* 0x00c0 */ int fIsOut : 1; /* bit position: 7 */
    /* 0x00c0 */ int fIsOicf : 1; /* bit position: 8 */
    /* 0x00c0 */ int fBufferValid : 1; /* bit position: 9 */
    /* 0x00c0 */ int fHasMemoryValidateCallback : 1; /* bit position: 10 */
    /* 0x00c0 */ int fInFree : 1; /* bit position: 11 */
    /* 0x00c0 */ int fNeedMCCP : 1; /* bit position: 12 */
    /* 0x00c0 */ int fUnused2 : 3; /* bit position: 13 */
    /* 0x00c0 */ int fUnused3 : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x00c4 */ unsigned long dwDestContext;
  /* 0x00c8 */ void* pvDestContext;
  /* 0x00d0 */ struct _NDR_SCONTEXT** SavedContextHandles;
  /* 0x00d8 */ long ParamNumber;
  /* 0x00dc */ long Padding_433;
  /* 0x00e0 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x00e8 */ struct ARRAY_INFO* pArrayInfo;
  /* 0x00f0 */ unsigned long* SizePtrCountArray;
  /* 0x00f8 */ unsigned long* SizePtrOffsetArray;
  /* 0x0100 */ unsigned long* SizePtrLengthArray;
  /* 0x0108 */ void* pArgQueue;
  /* 0x0110 */ unsigned long dwStubPhase;
  /* 0x0114 */ long Padding_434;
  /* 0x0118 */ void* LowStackMark;
  /* 0x0120 */ struct _NDR_ASYNC_MESSAGE* pAsyncMsg;
  /* 0x0128 */ struct _NDR_CORRELATION_INFO* pCorrInfo;
  /* 0x0130 */ unsigned char* pCorrMemory;
  /* 0x0138 */ void* pMemoryList;
  /* 0x0140 */ __int64 pCSInfo;
  /* 0x0148 */ unsigned char* ConformanceMark;
  /* 0x0150 */ unsigned char* VarianceMark;
  /* 0x0158 */ __int64 Unused;
  /* 0x0160 */ struct _NDR_PROC_CONTEXT* pContext;
  /* 0x0168 */ void* ContextHandleHash;
  /* 0x0170 */ void* pUserMarshalList;
  /* 0x0178 */ __int64 Reserved51_3;
  /* 0x0180 */ __int64 Reserved51_4;
  /* 0x0188 */ __int64 Reserved51_5;
} MIDL_STUB_MESSAGE, *PMIDL_STUB_MESSAGE; /* size: 0x0190 */

struct Windows::Foundation::IAsyncOperation<bool>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<double>
{
}; /* size: 0x0008 */

typedef struct _CERT_SERVER_OCSP_RESPONSE_OPEN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long* pcbUsedSize;
  /* 0x0010 */ wchar_t* pwszOcspDirectory;
  /* 0x0018 */ void* pfnUpdateCallback /* function */;
  /* 0x0020 */ void* pvUpdateCallbackArg;
} CERT_SERVER_OCSP_RESPONSE_OPEN_PARA, *PCERT_SERVER_OCSP_RESPONSE_OPEN_PARA; /* size: 0x0028 */

struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IObservableVector_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _FILE_IO_PRIORITY_HINT_INFO
{
  /* 0x0000 */ enum _PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFO, *PFILE_IO_PRIORITY_HINT_INFO; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >
{
}; /* size: 0x0008 */

class AdditionMethod<unsigned long,unsigned int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>
{
}; /* size: 0x0008 */

class Windows::Internal::GitPtr
{
}; /* size: 0x0010 */

class CClipClientDataWrapper
{
  /* 0x0000 */ long Padding_435[12];
  /* 0x0030 */ unsigned long m_refs;
  /* 0x0034 */ long Padding_436;
  /* 0x0038 */ class Microsoft::WRL::ComPtr<IDataObject> m_pBrokerClipData;
  /* 0x0040 */ class Windows::Internal::GitPtr m_pGitInnerClipData;
}; /* size: 0x0050 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRestrictedErrorInfo> const >;

class wil::details::<lambda_45db146a3bb9d5c040602df36a657518>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView<__int64,__int64>
{
}; /* size: 0x0008 */

class wil::details::failure_action_request
{
  /* 0x0000 */ struct HWILFAILUREWATCH__* m_watch;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>
{
}; /* size: 0x0008 */

typedef struct _FSCTL_UNMAP_SPACE_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER BytesToUnmap;
} FSCTL_UNMAP_SPACE_INPUT_BUFFER, *PFSCTL_UNMAP_SPACE_INPUT_BUFFER; /* size: 0x0008 */

typedef struct _EXCEPTION_POINTERS
{
  /* 0x0000 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0008 */ struct _CONTEXT* ContextRecord;
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS; /* size: 0x0010 */

struct ITypeLib
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_HANDLE_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextInfoRva;
  /* 0x0004 */ unsigned int InfoType;
  /* 0x0008 */ unsigned int SizeOfInfo;
} MINIDUMP_HANDLE_OBJECT_INFORMATION, *PMINIDUMP_HANDLE_OBJECT_INFORMATION; /* size: 0x000c */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef const >
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::InPlaceDeactivate::__l2::<lambda_0d32688c0356eaf1376562cb0fa29181>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Rect,1>
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct HSTRING__* m_ptr;
}; /* size: 0x0008 */

struct CastGuardVftables
{
  /* 0x0000 */ char padding[128];
}; /* size: 0x0080 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

struct IcFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 Fill;
}; /* size: 0x0028 */

typedef struct _MODLOAD_PDBGUID_PDBAGE
{
  /* 0x0000 */ struct _GUID PdbGuid;
  /* 0x0010 */ unsigned long PdbAge;
} MODLOAD_PDBGUID_PDBAGE, *PMODLOAD_PDBGUID_PDBAGE; /* size: 0x0014 */

struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileAttributes>
{
}; /* size: 0x0008 */

struct IFunctionDiscoveryNotification
{
}; /* size: 0x0008 */

struct OsFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 SavedXmm0;
  /* 0x0030 */ unsigned __int64 SavedXmm1;
  /* 0x0038 */ unsigned __int64 SavedXmm2;
  /* 0x0040 */ unsigned __int64 SavedXmm3;
  /* 0x0048 */ unsigned __int64 pRegs;
  /* 0x0050 */ unsigned __int64 pArgs;
  /* 0x0058 */ unsigned long cbArgs;
  /* 0x005c */ unsigned long Fill1;
  /* 0x0060 */ unsigned long ReturnValue;
  /* 0x0064 */ unsigned long Fill2;
}; /* size: 0x0068 */

class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char> > > >;

struct InFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 SavedRbp;
  /* 0x0028 */ unsigned __int64 SavedRsi;
  /* 0x0030 */ unsigned __int64 SavedRdi;
}; /* size: 0x0038 */

class CReadMInterfacePointerWithSourceAttributesMarshalingStream
{
  /* 0x0000 */ long Padding_437[12];
  /* 0x0030 */ unsigned __int64 _cAttributesProvided;
  /* 0x0038 */ const struct MarshalingContextAttributeValue* _pAttributesProvided;
}; /* size: 0x0040 */

struct tagXFORM
{
  /* 0x0000 */ float eM11;
  /* 0x0004 */ float eM12;
  /* 0x0008 */ float eM21;
  /* 0x000c */ float eM22;
  /* 0x0010 */ float eDx;
  /* 0x0014 */ float eDy;
}; /* size: 0x0018 */

struct tagEMRBITBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
}; /* size: 0x0064 */

class CArray<CPropertySection *,CPropertySection * &>
{
  /* 0x0000 */ class CPropertySection** m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

struct NDR_POINTER_QUEUE_STATE;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  union
  {
    /* 0x0008 */ unsigned long UnwindInfoAddress;
    /* 0x0008 */ unsigned long UnwindData;
  }; /* size: 0x0004 */
} IMAGE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_RUNTIME_FUNCTION_ENTRY; /* size: 0x000c */

struct tagCONNECTDATA
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0008 */ unsigned long dwCookie;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0001 */

typedef struct _KNONVOLATILE_CONTEXT_POINTERS
{
  union
  {
    /* 0x0000 */ struct _M128A* FloatingContext[16];
    struct
    {
      /* 0x0000 */ struct _M128A* Xmm0;
      /* 0x0008 */ struct _M128A* Xmm1;
      /* 0x0010 */ struct _M128A* Xmm2;
      /* 0x0018 */ struct _M128A* Xmm3;
      /* 0x0020 */ struct _M128A* Xmm4;
      /* 0x0028 */ struct _M128A* Xmm5;
      /* 0x0030 */ struct _M128A* Xmm6;
      /* 0x0038 */ struct _M128A* Xmm7;
      /* 0x0040 */ struct _M128A* Xmm8;
      /* 0x0048 */ struct _M128A* Xmm9;
      /* 0x0050 */ struct _M128A* Xmm10;
      /* 0x0058 */ struct _M128A* Xmm11;
      /* 0x0060 */ struct _M128A* Xmm12;
      /* 0x0068 */ struct _M128A* Xmm13;
      /* 0x0070 */ struct _M128A* Xmm14;
      /* 0x0078 */ struct _M128A* Xmm15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
  union
  {
    /* 0x0080 */ unsigned __int64* IntegerContext[16];
    struct
    {
      /* 0x0080 */ unsigned __int64* Rax;
      /* 0x0088 */ unsigned __int64* Rcx;
      /* 0x0090 */ unsigned __int64* Rdx;
      /* 0x0098 */ unsigned __int64* Rbx;
      /* 0x00a0 */ unsigned __int64* Rsp;
      /* 0x00a8 */ unsigned __int64* Rbp;
      /* 0x00b0 */ unsigned __int64* Rsi;
      /* 0x00b8 */ unsigned __int64* Rdi;
      /* 0x00c0 */ unsigned __int64* R8;
      /* 0x00c8 */ unsigned __int64* R9;
      /* 0x00d0 */ unsigned __int64* R10;
      /* 0x00d8 */ unsigned __int64* R11;
      /* 0x00e0 */ unsigned __int64* R12;
      /* 0x00e8 */ unsigned __int64* R13;
      /* 0x00f0 */ unsigned __int64* R14;
      /* 0x00f8 */ unsigned __int64* R15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS; /* size: 0x0100 */

struct IStream
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<_GUID,bool>
{
}; /* size: 0x0008 */

struct CMemString_PolicyCoTaskMem
{
}; /* size: 0x0001 */

class Windows::Storage::StorageLibrary;

class SafeCastHelper<long,int,0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::PhotoOrientation>
{
}; /* size: 0x0008 */

typedef struct _SD_QUERY_STATS_INPUT
{
  /* 0x0000 */ unsigned long Reserved;
} SD_QUERY_STATS_INPUT, *PSD_QUERY_STATS_INPUT; /* size: 0x0004 */

typedef struct _SD_ENUM_SDS_INPUT
{
  /* 0x0000 */ unsigned __int64 StartingOffset;
  /* 0x0008 */ unsigned __int64 MaxSDEntriesToReturn;
} SD_ENUM_SDS_INPUT, *PSD_ENUM_SDS_INPUT; /* size: 0x0010 */

typedef struct _SD_GLOBAL_CHANGE_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ChangeType;
  union
  {
    /* 0x0008 */ struct _SD_CHANGE_MACHINE_SID_INPUT SdChange;
    /* 0x0008 */ struct _SD_QUERY_STATS_INPUT SdQueryStats;
    /* 0x0008 */ struct _SD_ENUM_SDS_INPUT SdEnumSds;
  }; /* size: 0x0010 */
} SD_GLOBAL_CHANGE_INPUT, *PSD_GLOBAL_CHANGE_INPUT; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef struct _RTL_CONDITION_VARIABLE
{
  /* 0x0000 */ void* Ptr;
} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE; /* size: 0x0008 */

typedef struct _WIM_PROVIDER_EXTERNAL_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER DataSourceId;
  /* 0x0010 */ unsigned char ResourceHash[20];
  /* 0x0024 */ long __PADDING__[1];
} WIM_PROVIDER_EXTERNAL_INFO, *PWIM_PROVIDER_EXTERNAL_INFO; /* size: 0x0028 */

typedef struct _PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long Number;
  /* 0x0004 */ unsigned long MaxMhz;
  /* 0x0008 */ unsigned long CurrentMhz;
  /* 0x000c */ unsigned long MhzLimit;
  /* 0x0010 */ unsigned long MaxIdleState;
  /* 0x0014 */ unsigned long CurrentIdleState;
} PROCESSOR_POWER_INFORMATION, *PPROCESSOR_POWER_INFORMATION; /* size: 0x0018 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_438;
  /* 0x0008 */ struct _RTL_CRITICAL_SECTION* CriticalSection;
  /* 0x0010 */ struct _LIST_ENTRY ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x002e */ unsigned short Identifier;
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOleDataFormatIterator> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IOleDataFormatIterator>* ptr_;
}; /* size: 0x0008 */

struct tagContextStackNode
{
  /* 0x0000 */ struct tagContextStackNode* pNext;
  /* 0x0008 */ class CObjectContext* pSavedContext;
  /* 0x0010 */ class CObjectContext* pServerContext;
  /* 0x0018 */ class CCtxCall* pClientCall;
  /* 0x0020 */ class CCtxCall* pServerCall;
  /* 0x0028 */ class CPolicySet* pPS;
}; /* size: 0x0030 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>;

class std::chrono::duration<int,std::ratio<60,1> >
{
  /* 0x0000 */ int _MyRep;
}; /* size: 0x0004 */

struct wistd::unique_ptr<_TOKEN_PRIMARY_GROUP,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;

class wil::ResultException
{
  /* 0x0000 */ long Padding_439[6];
  /* 0x0018 */ class wil::StoredFailureInfo m_failure;
  /* 0x00c0 */ class wil::details::shared_buffer m_what;
}; /* size: 0x00d0 */

typedef struct _FILE_VOLUME_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceNameLength;
  /* 0x0004 */ wchar_t DeviceName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_VOLUME_NAME_INFORMATION, *PFILE_VOLUME_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _IMAGE_DATA_DIRECTORY
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY; /* size: 0x0008 */

typedef struct _Real_widened<float,double>
{
} Real_widened<float,double>, *PReal_widened<float,double>; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDataObject> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDataObject>* ptr_;
}; /* size: 0x0008 */

typedef struct _MINIDUMP_MEMORY_LIST
{
  /* 0x0000 */ unsigned int NumberOfMemoryRanges;
  /* 0x0004 */ struct _MINIDUMP_MEMORY_DESCRIPTOR* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY_LIST, *PMINIDUMP_MEMORY_LIST; /* size: 0x0004 */

struct tagWNDCLASSW
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ long Padding_440;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const wchar_t* lpszMenuName;
  /* 0x0040 */ const wchar_t* lpszClassName;
}; /* size: 0x0048 */

typedef struct _IMAGE_OPTIONAL_HEADER64
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned __int64 ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned __int64 SizeOfStackReserve;
  /* 0x0050 */ unsigned __int64 SizeOfStackCommit;
  /* 0x0058 */ unsigned __int64 SizeOfHeapReserve;
  /* 0x0060 */ unsigned __int64 SizeOfHeapCommit;
  /* 0x0068 */ unsigned long LoaderFlags;
  /* 0x006c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0070 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64; /* size: 0x00f0 */

typedef struct _IMAGE_NT_HEADERS64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64; /* size: 0x0108 */

struct wistd::__is_construct::__nat
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char>,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0008 */

typedef struct _STARTUPINFOW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_441;
  /* 0x0008 */ wchar_t* lpReserved;
  /* 0x0010 */ wchar_t* lpDesktop;
  /* 0x0018 */ wchar_t* lpTitle;
  /* 0x0020 */ unsigned long dwX;
  /* 0x0024 */ unsigned long dwY;
  /* 0x0028 */ unsigned long dwXSize;
  /* 0x002c */ unsigned long dwYSize;
  /* 0x0030 */ unsigned long dwXCountChars;
  /* 0x0034 */ unsigned long dwYCountChars;
  /* 0x0038 */ unsigned long dwFillAttribute;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned short wShowWindow;
  /* 0x0042 */ unsigned short cbReserved2;
  /* 0x0044 */ long Padding_442;
  /* 0x0048 */ unsigned char* lpReserved2;
  /* 0x0050 */ void* hStdInput;
  /* 0x0058 */ void* hStdOutput;
  /* 0x0060 */ void* hStdError;
} STARTUPINFOW, *PSTARTUPINFOW; /* size: 0x0068 */

typedef struct _JOBOBJECT_WAKE_FILTER
{
  /* 0x0000 */ unsigned long HighEdgeFilter;
  /* 0x0004 */ unsigned long LowEdgeFilter;
} JOBOBJECT_WAKE_FILTER, *PJOBOBJECT_WAKE_FILTER; /* size: 0x0008 */

typedef struct _JOBOBJECT_FREEZE_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long FreezeOperation : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long FilterOperation : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long SwapOperation : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned char Freeze;
  /* 0x0005 */ unsigned char Swap;
  /* 0x0006 */ unsigned char Reserved0[2];
  /* 0x0008 */ struct _JOBOBJECT_WAKE_FILTER WakeFilter;
} JOBOBJECT_FREEZE_INFORMATION, *PJOBOBJECT_FREEZE_INFORMATION; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<Windows::Storage::Streams::IBuffer *,unsigned int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<int,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
  /* 0x0000 */ long Padding_443[6];
  /* 0x0018 */ union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer refCount_;
}; /* size: 0x0020 */

typedef struct _IMAGE_DOS_HEADER
{
  /* 0x0000 */ unsigned short e_magic;
  /* 0x0002 */ unsigned short e_cblp;
  /* 0x0004 */ unsigned short e_cp;
  /* 0x0006 */ unsigned short e_crlc;
  /* 0x0008 */ unsigned short e_cparhdr;
  /* 0x000a */ unsigned short e_minalloc;
  /* 0x000c */ unsigned short e_maxalloc;
  /* 0x000e */ unsigned short e_ss;
  /* 0x0010 */ unsigned short e_sp;
  /* 0x0012 */ unsigned short e_csum;
  /* 0x0014 */ unsigned short e_ip;
  /* 0x0016 */ unsigned short e_cs;
  /* 0x0018 */ unsigned short e_lfarlc;
  /* 0x001a */ unsigned short e_ovno;
  /* 0x001c */ unsigned short e_res[4];
  /* 0x0024 */ unsigned short e_oemid;
  /* 0x0026 */ unsigned short e_oeminfo;
  /* 0x0028 */ unsigned short e_res2[10];
  /* 0x003c */ long e_lfanew;
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER; /* size: 0x0040 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned char>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>
{
}; /* size: 0x0008 */

class wil::semaphore_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy>
{
}; /* size: 0x0008 */

struct EHExceptionRecord::EHParameters
{
  /* 0x0000 */ unsigned long magicNumber;
  /* 0x0004 */ long Padding_444;
  /* 0x0008 */ void* pExceptionObject;
  /* 0x0010 */ const struct _s_ThrowInfo* pThrowInfo;
  /* 0x0018 */ void* pThrowImageBase;
}; /* size: 0x0020 */

struct EHExceptionRecord
{
  /* 0x0000 */ unsigned long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0010 */ void* ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ long Padding_445;
  /* 0x0020 */ struct EHExceptionRecord::EHParameters params;
}; /* size: 0x0040 */

struct Windows::Foundation::Collections::IIterable<Windows::System::User *>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_SYMBOL_EX
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ long SectionNumber;
  /* 0x0010 */ unsigned short Type;
  /* 0x0012 */ unsigned char StorageClass;
  /* 0x0013 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL_EX, *PIMAGE_SYMBOL_EX; /* size: 0x0014 */

typedef struct _MANAGE_HOT_PATCH_CHECK_ENABLED
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
} MANAGE_HOT_PATCH_CHECK_ENABLED, *PMANAGE_HOT_PATCH_CHECK_ENABLED; /* size: 0x0008 */

class OleClipboardTracing::CallContext
{
}; /* size: 0x0140 */

struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE_V2
{
  /* 0x0000 */ __int64 MaxIops;
  /* 0x0008 */ __int64 MaxBandwidth;
  /* 0x0010 */ __int64 ReservationIops;
  /* 0x0018 */ wchar_t* VolumeName;
  /* 0x0020 */ unsigned long BaseIoSize;
  /* 0x0024 */ enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
  /* 0x0028 */ unsigned short VolumeNameLength;
  /* 0x002a */ char Padding_446[6];
  /* 0x0030 */ __int64 CriticalReservationIops;
  /* 0x0038 */ __int64 ReservationBandwidth;
  /* 0x0040 */ __int64 CriticalReservationBandwidth;
  /* 0x0048 */ __int64 MaxTimePercent;
  /* 0x0050 */ __int64 ReservationTimePercent;
  /* 0x0058 */ __int64 CriticalReservationTimePercent;
}; /* size: 0x0060 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >
{
}; /* size: 0x0008 */

typedef struct _CERT_PAIR
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Forward;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Reverse;
} CERT_PAIR, *PCERT_PAIR; /* size: 0x0020 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

class wil::details::static_lazy<wil::details::ApiTelemetryLogger>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[64];
}; /* size: 0x0048 */

typedef struct _onexit_table_t
{
  /* 0x0000 */ void** _first /* function */;
  /* 0x0008 */ void** _last /* function */;
  /* 0x0010 */ void** _end /* function */;
} onexit_table_t, *Ponexit_table_t; /* size: 0x0018 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

struct $_TypeDescriptor$_extraBytes_24
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char name[24];
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *,1>
{
}; /* size: 0x0008 */

typedef struct __scrt_narrow_argv_policy
{
} _scrt_narrow_argv_policy, *P_scrt_narrow_argv_policy; /* size: 0x0001 */

typedef struct __scrt_narrow_environment_policy
{
} _scrt_narrow_environment_policy, *P_scrt_narrow_environment_policy; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *> >
{
}; /* size: 0x0008 */

struct wistd::__make_unsigned<int,1>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_POOL_ENTRY
{
  /* 0x0000 */ unsigned char Allocated;
  /* 0x0001 */ unsigned char Spare0;
  /* 0x0002 */ unsigned short AllocatorBackTraceIndex;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ unsigned char Tag[4];
    /* 0x0008 */ unsigned long TagUlong;
    /* 0x0008 */ void* ProcessChargedQuota;
  }; /* size: 0x0008 */
} SYSTEM_POOL_ENTRY, *PSYSTEM_POOL_ENTRY; /* size: 0x0010 */

class Windows::Storage::StorageFolder;

struct IPSFactoryBuffer
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> > >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >
{
}; /* size: 0x0008 */

typedef union _SLIST_HEADER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 Alignment;
      /* 0x0008 */ unsigned __int64 Region;
    }; /* size: 0x0010 */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 48; /* bit position: 16 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 Reserved : 4; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 NextEntry : 60; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0010 */ HeaderX64;
  }; /* size: 0x0010 */
} SLIST_HEADER, *PSLIST_HEADER; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,HKEY__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct HKEY__* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<__int64,__int64>
{
}; /* size: 0x0008 */

typedef struct _ITEMIDLIST_ABSOLUTE
{
} ITEMIDLIST_ABSOLUTE, *PITEMIDLIST_ABSOLUTE; /* size: 0x0003 */

struct IRunnableObject
{
}; /* size: 0x0008 */

struct IRpcStubBuffer
{
}; /* size: 0x0008 */

struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable_imp<<lambda_af47d61301194c5d4839e4c10d405b79>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

class wil::folder_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::folder_watcher_state *,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_watcher_state *,wil::details::folder_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy>
{
}; /* size: 0x0008 */

struct wil::details::out_param_t<wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> > > >
{
  /* 0x0000 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >& wrapper;
  /* 0x0008 */ void* pRaw;
  /* 0x0010 */ BOOL replace;
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

class std::exception
{
  /* 0x0000 */ long Padding_447[2];
  /* 0x0008 */ struct __std_exception_data _Data;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IVectorView_impl<_GUID,1>
{
}; /* size: 0x0008 */

typedef struct _tagADDRESS64
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned short Segment;
  /* 0x000a */ char Padding_448[2];
  /* 0x000c */ enum ADDRESS_MODE Mode;
} tagADDRESS64, *PtagADDRESS64; /* size: 0x0010 */

typedef struct _KDHELP64
{
  /* 0x0000 */ unsigned __int64 Thread;
  /* 0x0008 */ unsigned long ThCallbackStack;
  /* 0x000c */ unsigned long ThCallbackBStore;
  /* 0x0010 */ unsigned long NextCallback;
  /* 0x0014 */ unsigned long FramePointer;
  /* 0x0018 */ unsigned __int64 KiCallUserMode;
  /* 0x0020 */ unsigned __int64 KeUserCallbackDispatcher;
  /* 0x0028 */ unsigned __int64 SystemRangeStart;
  /* 0x0030 */ unsigned __int64 KiUserExceptionDispatcher;
  /* 0x0038 */ unsigned __int64 StackBase;
  /* 0x0040 */ unsigned __int64 StackLimit;
  /* 0x0048 */ unsigned long BuildVersion;
  /* 0x004c */ unsigned long RetpolineStubFunctionTableSize;
  /* 0x0050 */ unsigned __int64 RetpolineStubFunctionTable;
  /* 0x0058 */ unsigned long RetpolineStubOffset;
  /* 0x005c */ unsigned long RetpolineStubSize;
  /* 0x0060 */ unsigned __int64 Reserved0[2];
} KDHELP64, *PKDHELP64; /* size: 0x0070 */

typedef struct _tagSTACKFRAME_EX
{
  /* 0x0000 */ struct _tagADDRESS64 AddrPC;
  /* 0x0010 */ struct _tagADDRESS64 AddrReturn;
  /* 0x0020 */ struct _tagADDRESS64 AddrFrame;
  /* 0x0030 */ struct _tagADDRESS64 AddrStack;
  /* 0x0040 */ struct _tagADDRESS64 AddrBStore;
  /* 0x0050 */ void* FuncTableEntry;
  /* 0x0058 */ unsigned __int64 Params[4];
  /* 0x0078 */ int Far;
  /* 0x007c */ int Virtual;
  /* 0x0080 */ unsigned __int64 Reserved[3];
  /* 0x0098 */ struct _KDHELP64 KdHelp;
  /* 0x0108 */ unsigned long StackFrameSize;
  /* 0x010c */ unsigned long InlineFrameContext;
} tagSTACKFRAME_EX, *PtagSTACKFRAME_EX; /* size: 0x0110 */

struct tagIPIDEntry;

typedef struct _FAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} FAT_STATISTICS, *PFAT_STATISTICS; /* size: 0x0024 */

struct Windows::Foundation::Collections::IIterator<Windows::UI::WindowId>
{
}; /* size: 0x0008 */

struct IRecordInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* RecordInit /* function */;
  /* 0x0020 */ void* RecordClear /* function */;
  /* 0x0028 */ void* RecordCopy /* function */;
  /* 0x0030 */ void* GetGuid /* function */;
  /* 0x0038 */ void* GetName /* function */;
  /* 0x0040 */ void* GetSize /* function */;
  /* 0x0048 */ void* GetTypeInfo /* function */;
  /* 0x0050 */ void* GetField /* function */;
  /* 0x0058 */ void* GetFieldNoCopy /* function */;
  /* 0x0060 */ void* PutField /* function */;
  /* 0x0068 */ void* PutFieldNoCopy /* function */;
  /* 0x0070 */ void* GetFieldNames /* function */;
  /* 0x0078 */ void* IsMatchingType /* function */;
  /* 0x0080 */ void* RecordCreate /* function */;
  /* 0x0088 */ void* RecordCreateCopy /* function */;
  /* 0x0090 */ void* RecordDestroy /* function */;
}; /* size: 0x0098 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileDataObject> const >;

class CallerCanAccessClipboardData::__l5::<lambda_2aa60daf810bf981192e67453d2e1fb5>
{
}; /* size: 0x0001 */

class std::bad_array_new_length
{
}; /* size: 0x0018 */

union std::_String_val<std::_Simple_types<char16_t> >::_Bxty
{
  union
  {
    /* 0x0000 */ char16_t _Buf[8];
    /* 0x0000 */ char16_t* _Ptr;
    /* 0x0000 */ char _Alias[8];
  }; /* size: 0x0010 */
}; /* size: 0x0010 */

class std::_String_val<std::_Simple_types<char16_t> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ union std::_String_val<std::_Simple_types<char16_t> >::_Bxty _Bx;
  }; /* size: 0x0010 */
  /* 0x0010 */ unsigned __int64 _Mysize;
  /* 0x0018 */ unsigned __int64 _Myres;
}; /* size: 0x0020 */

class std::_Compressed_pair<std::allocator<char16_t>,std::_String_val<std::_Simple_types<char16_t> >,1>
{
  /* 0x0000 */ class std::_String_val<std::_Simple_types<char16_t> > _Myval2;
}; /* size: 0x0020 */

class std::basic_string<char16_t,std::char_traits<char16_t>,std::allocator<char16_t> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ const BOOL _Can_memcpy_val;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_offset;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_size;
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ class std::_Compressed_pair<std::allocator<char16_t>,std::_String_val<std::_Simple_types<char16_t> >,1> _Mypair;
  }; /* size: 0x0020 */
}; /* size: 0x0020 */

typedef struct _wfinddata32i64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ __int64 size;
  /* 0x0018 */ wchar_t name[260];
} wfinddata32i64_t, *Pwfinddata32i64_t; /* size: 0x0220 */

typedef struct _THREAD_POWER_THROTTLING_STATE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long ControlMask;
  /* 0x0008 */ unsigned long StateMask;
} THREAD_POWER_THROTTLING_STATE, *PTHREAD_POWER_THROTTLING_STATE; /* size: 0x000c */

struct IGlobalOptions
{
}; /* size: 0x0008 */

typedef struct __type_info_node
{
  /* 0x0000 */ union _SLIST_HEADER _Header;
} _type_info_node, *P_type_info_node; /* size: 0x0010 */

struct Windows::Foundation::Collections::IMapView<__int64,HSTRING__ *>
{
}; /* size: 0x0008 */

struct tagCInterfaceStubVtbl
{
  /* 0x0000 */ struct tagCInterfaceStubHeader header;
  /* 0x0020 */ struct IRpcStubBufferVtbl Vtbl;
}; /* size: 0x0070 */

struct IMarshalingStream
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<unsigned int,Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *,1>
{
}; /* size: 0x0008 */

typedef struct _iobuf
{
  /* 0x0000 */ void* _Placeholder;
} iobuf, *Piobuf; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

class CFormatOnlyDataObject
{
  /* 0x0000 */ long Padding_449[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IDataObject> m_spInner;
}; /* size: 0x0018 */

typedef struct _NT_TIB64
{
  /* 0x0000 */ unsigned __int64 ExceptionList;
  /* 0x0008 */ unsigned __int64 StackBase;
  /* 0x0010 */ unsigned __int64 StackLimit;
  /* 0x0018 */ unsigned __int64 SubSystemTib;
  union
  {
    /* 0x0020 */ unsigned __int64 FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ unsigned __int64 ArbitraryUserPointer;
  /* 0x0030 */ unsigned __int64 Self;
} NT_TIB64, *PNT_TIB64; /* size: 0x0038 */

struct __crt_locale_data;

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS
{
  /* 0x0000 */ void* PristineRoutine /* function */;
  /* 0x0008 */ void* NewRoutine /* function */;
} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS; /* size: 0x0010 */

struct __crt_multibyte_data;

typedef struct __crt_locale_pointers
{
  /* 0x0000 */ struct __crt_locale_data* locinfo;
  /* 0x0008 */ struct __crt_multibyte_data* mbcinfo;
} _crt_locale_pointers, *P_crt_locale_pointers; /* size: 0x0010 */

struct Windows::Foundation::IEventHandler_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

class std::allocator<char16_t>
{
}; /* size: 0x0001 */

typedef struct _stat64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_450[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_451;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stat64, *Pstat64; /* size: 0x0038 */

struct Windows::Foundation::IReference<unsigned int>
{
}; /* size: 0x0008 */

struct tagSTATPROPSTG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0008 */ unsigned long propid;
  /* 0x000c */ unsigned short vt;
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

class wil::details::<lambda_7e8a978c88e3279cb3232dbdb437313e>
{
}; /* size: 0x0001 */

struct ThreadCallObjectCache;

struct Windows::Foundation::Collections::IVector_impl<unsigned char,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX
{
  /* 0x0000 */ unsigned long VerifyMode;
  /* 0x0004 */ unsigned long OptionChanges;
  /* 0x0008 */ struct _UNICODE_STRING PreviousBucketName;
  /* 0x0018 */ unsigned long IrpCancelTimeoutMsec;
  /* 0x001c */ unsigned long VerifierExtensionEnabled;
  /* 0x0020 */ unsigned long Reserved[1];
  /* 0x0024 */ long __PADDING__[1];
} SYSTEM_VERIFIER_INFORMATION_EX, *PSYSTEM_VERIFIER_INFORMATION_EX; /* size: 0x0028 */

typedef struct __noop_coroutine_frame_standard
{
  /* 0x0000 */ void* resume;
  /* 0x0008 */ void* destroy;
  /* 0x0010 */ char promise;
  /* 0x0011 */ char __PADDING__[7];
} _noop_coroutine_frame_standard, *P_noop_coroutine_frame_standard; /* size: 0x0018 */

struct IEnumSTATPROPSTG
{
}; /* size: 0x0008 */

class AdHocCallFrame<IOleWindow,<lambda_7f8f27448f522cea32614cee7579f563> >
{
  /* 0x0000 */ long Padding_452[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>::ContextSensitiveHelp::__l2::<lambda_7f8f27448f522cea32614cee7579f563>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct GetTypeValueImpl<long,CRunningObjectTable *,long>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_IMPORT_DESCRIPTOR
{
  union
  {
    /* 0x0000 */ unsigned long Characteristics;
    /* 0x0000 */ unsigned long OriginalFirstThunk;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long ForwarderChain;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long FirstThunk;
} IMAGE_IMPORT_DESCRIPTOR, *PIMAGE_IMPORT_DESCRIPTOR; /* size: 0x0014 */

typedef struct _PROCESSOR_NUMBER
{
  /* 0x0000 */ unsigned short Group;
  /* 0x0002 */ unsigned char Number;
  /* 0x0003 */ unsigned char Reserved;
} PROCESSOR_NUMBER, *PPROCESSOR_NUMBER; /* size: 0x0004 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<int,int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *>
{
}; /* size: 0x0008 */

typedef struct _RTL_BALANCED_NODE
{
  union
  {
    /* 0x0000 */ struct _RTL_BALANCED_NODE* Children[2];
    struct
    {
      /* 0x0000 */ struct _RTL_BALANCED_NODE* Left;
      /* 0x0008 */ struct _RTL_BALANCED_NODE* Right;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0010 */ unsigned char Red : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned char Balance : 2; /* bit position: 0 */
    /* 0x0010 */ unsigned __int64 ParentValue;
  }; /* size: 0x0008 */
} RTL_BALANCED_NODE, *PRTL_BALANCED_NODE; /* size: 0x0018 */

typedef struct _MUICCHEADER
{
  /* 0x0000 */ unsigned int ulMaxStringsSize;
  /* 0x0004 */ unsigned int ulSizeStrings;
  /* 0x0008 */ unsigned int ulMaxNumInstalledCultures;
  /* 0x000c */ unsigned int ulNumInstalledCultures;
  /* 0x0010 */ unsigned int ulMaxNumUnverifiedCultures;
  /* 0x0014 */ unsigned int ulNumUnverifiedCultures;
} MUICCHEADER, *PMUICCHEADER; /* size: 0x0018 */

typedef struct _MIDL_METHOD_PROPERTY
{
  /* 0x0000 */ unsigned long Id;
  /* 0x0004 */ long Padding_453;
  /* 0x0008 */ unsigned __int64 Value;
} MIDL_METHOD_PROPERTY, *PMIDL_METHOD_PROPERTY; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>
{
}; /* size: 0x0001 */

struct tagSERIALIZEDPROPERTYVALUE
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned char rgb[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _SD_QUERY_STATS_OUTPUT
{
  /* 0x0000 */ unsigned __int64 SdsStreamSize;
  /* 0x0008 */ unsigned __int64 SdsAllocationSize;
  /* 0x0010 */ unsigned __int64 SiiStreamSize;
  /* 0x0018 */ unsigned __int64 SiiAllocationSize;
  /* 0x0020 */ unsigned __int64 SdhStreamSize;
  /* 0x0028 */ unsigned __int64 SdhAllocationSize;
  /* 0x0030 */ unsigned __int64 NumSDTotal;
  /* 0x0038 */ unsigned __int64 NumSDUnused;
} SD_QUERY_STATS_OUTPUT, *PSD_QUERY_STATS_OUTPUT; /* size: 0x0040 */

struct IPartitionProperty
{
}; /* size: 0x0008 */

struct tagPROPSPEC
{
  /* 0x0000 */ unsigned long ulKind;
  /* 0x0004 */ long Padding_454;
  union
  {
    /* 0x0008 */ unsigned long propid;
    /* 0x0008 */ wchar_t* lpwstr;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::supports_cleanup<_GUID>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long TimerResolution;
  /* 0x0008 */ unsigned long PageSize;
  /* 0x000c */ unsigned long NumberOfPhysicalPages;
  /* 0x0010 */ unsigned long LowestPhysicalPageNumber;
  /* 0x0014 */ unsigned long HighestPhysicalPageNumber;
  /* 0x0018 */ unsigned long AllocationGranularity;
  /* 0x001c */ long Padding_455;
  /* 0x0020 */ unsigned __int64 MinimumUserModeAddress;
  /* 0x0028 */ unsigned __int64 MaximumUserModeAddress;
  /* 0x0030 */ unsigned __int64 ActiveProcessorsAffinityMask;
  /* 0x0038 */ char NumberOfProcessors;
  /* 0x0039 */ char __PADDING__[7];
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION; /* size: 0x0040 */

typedef struct _IMAGE_DYNAMIC_RELOCATION64
{
  /* 0x0000 */ unsigned __int64 Symbol;
  /* 0x0008 */ unsigned long BaseRelocSize;
} IMAGE_DYNAMIC_RELOCATION64, *PIMAGE_DYNAMIC_RELOCATION64; /* size: 0x000c */

struct Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList
{
}; /* size: 0x0008 */

class wil::details::<lambda_d92ccf92f2e47eeb0e93ba93596d390c>
{
}; /* size: 0x0001 */

struct GetTypeValueImpl<long,CFilteredRunningObjectTable *,long>
{
}; /* size: 0x0001 */

class Windows::System::UserAuthenticationStatusChangingEventArgs;

struct EDP_CONTEXT
{
  /* 0x0000 */ enum EDP_CONTEXT_STATES contextStates;
  /* 0x0004 */ unsigned long allowedEnterpriseIdCount;
  /* 0x0008 */ wchar_t* enterpriseIdForUIEnforcement;
  /* 0x0010 */ wchar_t* allowedEnterpriseIds[1];
}; /* size: 0x0018 */

class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t> > > >;

class wil::details::<lambda_b08d4e58c4a54b35f96127100f4f5d09>
{
}; /* size: 0x0001 */

typedef struct __vcrt_assert_va_start_is_not_reference<unsigned short const * const>
{
} _vcrt_assert_va_start_is_not_reference<unsigned short const * const>, *P_vcrt_assert_va_start_is_not_reference<unsigned short const * const>; /* size: 0x0001 */

struct IPropertySetStorage
{
}; /* size: 0x0008 */

typedef struct _SD_ENUM_SDS_ENTRY
{
  /* 0x0000 */ unsigned long Hash;
  /* 0x0004 */ unsigned long SecurityId;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ unsigned char Descriptor[1];
  /* 0x0015 */ char __PADDING__[3];
} SD_ENUM_SDS_ENTRY, *PSD_ENUM_SDS_ENTRY; /* size: 0x0018 */

typedef struct _SD_ENUM_SDS_OUTPUT
{
  /* 0x0000 */ unsigned __int64 NextOffset;
  /* 0x0008 */ unsigned __int64 NumSDEntriesReturned;
  /* 0x0010 */ unsigned __int64 NumSDBytesReturned;
  /* 0x0018 */ struct _SD_ENUM_SDS_ENTRY SDEntry[1];
} SD_ENUM_SDS_OUTPUT, *PSD_ENUM_SDS_OUTPUT; /* size: 0x0030 */

struct tagInputRoutingInfo
{
  /* 0x0000 */ unsigned int peerId;
  /* 0x0004 */ unsigned int itemId;
  /* 0x0008 */ struct tagMsgRoutingInfo msgRoutingInfo;
}; /* size: 0x0030 */

struct IFillLockBytes
{
}; /* size: 0x0008 */

class CDefObject
{
  /* 0x0000 */ long Padding_456[20];
  /* 0x0050 */ class CDefObject::CPrivUnknown m_Unknown;
  /* 0x0058 */ class CDefObject::CAdvSinkImpl m_AdviseSink;
  /* 0x0060 */ HRESULT m_ContentSRVMSHResult;
  /* 0x0064 */ unsigned long m_ContentSRVMSBits;
  /* 0x0068 */ HRESULT m_ContentREGMSHResult;
  /* 0x006c */ unsigned long m_ContentREGMSBits;
  /* 0x0070 */ struct IOleObject* m_pOleDelegate;
  /* 0x0078 */ struct IDataObject* m_pDataDelegate;
  /* 0x0080 */ struct IPersistStorage* m_pPSDelegate;
  /* 0x0088 */ unsigned long m_cConnections;
  /* 0x008c */ long Padding_457;
  /* 0x0090 */ struct IUnknown* m_pUnkOuter;
  /* 0x0098 */ struct _GUID m_clsidServer;
  /* 0x00a8 */ struct _GUID m_clsidBits;
  /* 0x00b8 */ unsigned long m_flags;
  /* 0x00bc */ unsigned long m_dwObjFlags;
  /* 0x00c0 */ struct IClassFactory* m_pCFDelegate;
  /* 0x00c8 */ struct IUnknown* m_pUnkDelegate;
  /* 0x00d0 */ struct IProxyManager* m_pProxyMgr;
  /* 0x00d8 */ class COleCache* m_pCOleCache;
  /* 0x00e0 */ class COAHolder* m_pOAHolder;
  /* 0x00e8 */ unsigned long m_dwConnOle;
  /* 0x00ec */ long Padding_458;
  /* 0x00f0 */ struct IOleClientSite* m_pAppClientSite;
  /* 0x00f8 */ struct IStorage* m_pStg;
  /* 0x0100 */ char* m_pHostNames;
  /* 0x0108 */ unsigned long m_ibCntrObj;
  /* 0x010c */ long Padding_459;
  /* 0x0110 */ class CDataAdviseCache* m_pDataAdvCache;
}; /* size: 0x0118 */

struct tagCLASS_DATA
{
  /* 0x0000 */ const struct _GUID* pclsid;
  /* 0x0008 */ const wchar_t* wszName;
  /* 0x0010 */ const wchar_t* wszProgId;
}; /* size: 0x0018 */

typedef struct _FILE_OBJECTID_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0018 */ unsigned char BirthVolumeId[16];
      /* 0x0028 */ unsigned char BirthObjectId[16];
      /* 0x0038 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0018 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_INFORMATION, *PFILE_OBJECTID_INFORMATION; /* size: 0x0048 */

typedef struct _SHELLEXECUTEINFOA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const char* lpVerb;
  /* 0x0018 */ const char* lpFile;
  /* 0x0020 */ const char* lpParameters;
  /* 0x0028 */ const char* lpDirectory;
  /* 0x0030 */ int nShow;
  /* 0x0034 */ long Padding_460;
  /* 0x0038 */ struct HINSTANCE__* hInstApp;
  /* 0x0040 */ void* lpIDList;
  /* 0x0048 */ const char* lpClass;
  /* 0x0050 */ struct HKEY__* hkeyClass;
  /* 0x0058 */ unsigned long dwHotKey;
  /* 0x005c */ long Padding_461;
  union
  {
    /* 0x0060 */ void* hIcon;
    /* 0x0060 */ void* hMonitor;
  }; /* size: 0x0008 */
  /* 0x0068 */ void* hProcess;
} SHELLEXECUTEINFOA, *PSHELLEXECUTEINFOA; /* size: 0x0070 */

struct std::_Make_unsigned2<2>
{
}; /* size: 0x0001 */

struct wistd::__make_unsigned<unsigned __int64,1>
{
}; /* size: 0x0001 */

struct _NDR_ASYNC_MESSAGE;

struct Windows::Foundation::Collections::is_foundation_struct<float>
{
}; /* size: 0x0001 */

class wil::details_abi::ProcessLocalStorage<wil::details_abi::FeatureStateData>
{
  /* 0x0000 */ const char* m_staticNameWithVersion;
  /* 0x0008 */ class wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>* m_data;
}; /* size: 0x0010 */

class wil::critical_section
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_cs;
}; /* size: 0x0028 */

class wil::details_abi::heap_vector<wil::details_abi::SubscriptionList::Subscription>
{
  /* 0x0000 */ struct wil::details_abi::heap_buffer m_data;
}; /* size: 0x0020 */

class wil::details_abi::SubscriptionList
{
  /* 0x0000 */ class wil::critical_section m_unsubscribeLock;
  /* 0x0028 */ class wil::details_abi::heap_vector<wil::details_abi::SubscriptionList::Subscription> m_subscriptions;
}; /* size: 0x0048 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

class wil::details_abi::heap_vector<wil_details_FeatureUsageSRUM>
{
  /* 0x0000 */ struct wil::details_abi::heap_buffer m_data;
}; /* size: 0x0020 */

class wil::details::FeatureStateManager
{
  /* 0x0000 */ BOOL m_fInitialized;
  /* 0x0001 */ char Padding_462[7];
  /* 0x0008 */ class wil::details_abi::ProcessLocalStorage<wil::details_abi::FeatureStateData> m_dataStorage;
  /* 0x0018 */ class wil::details_abi::FeatureStateData* m_data;
  /* 0x0020 */ class wil::srwlock m_lock;
  /* 0x0028 */ class wil::srwlock m_SRUMlock;
  /* 0x0030 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> > > m_timer;
  /* 0x0038 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> > > m_SRUMtimer;
  /* 0x0040 */ BOOL m_SRUMtimerSet;
  /* 0x0041 */ BOOL m_timerSet;
  /* 0x0042 */ char Padding_463[6];
  /* 0x0048 */ class wil::details_abi::SubscriptionList m_stateChangeSubscriptions;
  /* 0x0090 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > > m_featureConfigurationChangeSubscription;
  /* 0x0098 */ class wil::details_abi::SubscriptionList m_usageFlushSubscriptions;
  /* 0x00e0 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > > m_processWideUsageFlushSubscription;
  /* 0x00e8 */ class wil::details_abi::heap_vector<wil_details_FeatureUsageSRUM> m_cachedSRUMUsageTrackingData;
}; /* size: 0x0108 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulEncodedAssemblyIdentityLength;
  /* 0x0008 */ unsigned long ulManifestPathType;
  /* 0x000c */ unsigned long ulManifestPathLength;
  /* 0x0010 */ union _LARGE_INTEGER liManifestLastWriteTime;
  /* 0x0018 */ unsigned long ulPolicyPathType;
  /* 0x001c */ unsigned long ulPolicyPathLength;
  /* 0x0020 */ union _LARGE_INTEGER liPolicyLastWriteTime;
  /* 0x0028 */ unsigned long ulMetadataSatelliteRosterIndex;
  /* 0x002c */ unsigned long ulManifestVersionMajor;
  /* 0x0030 */ unsigned long ulManifestVersionMinor;
  /* 0x0034 */ unsigned long ulPolicyVersionMajor;
  /* 0x0038 */ unsigned long ulPolicyVersionMinor;
  /* 0x003c */ unsigned long ulAssemblyDirectoryNameLength;
  /* 0x0040 */ const wchar_t* lpAssemblyEncodedAssemblyIdentity;
  /* 0x0048 */ const wchar_t* lpAssemblyManifestPath;
  /* 0x0050 */ const wchar_t* lpAssemblyPolicyPath;
  /* 0x0058 */ const wchar_t* lpAssemblyDirectoryName;
  /* 0x0060 */ unsigned long ulFileCount;
  /* 0x0064 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION; /* size: 0x0068 */

class CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_464[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageFile *>
{
}; /* size: 0x0008 */

struct std::_Distance_unknown
{
}; /* size: 0x0001 */

class OleClipboardLock
{
  /* 0x0000 */ BOOL m_locked;
}; /* size: 0x0001 */

typedef struct _TAPE_ERASE
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_ERASE, *PTAPE_ERASE; /* size: 0x0008 */

typedef struct _FILE_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION; /* size: 0x0028 */

struct std::common_type<>
{
}; /* size: 0x0001 */

struct std::_Nontrivial_dummy_type
{
}; /* size: 0x0001 */

typedef struct _FILE_FS_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER AvailableAllocationUnits;
  /* 0x0010 */ unsigned long SectorsPerAllocationUnit;
  /* 0x0014 */ unsigned long BytesPerSector;
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION; /* size: 0x0018 */

typedef struct _MINIDUMP_MISC_INFO_3
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
  /* 0x002c */ unsigned int ProcessIntegrityLevel;
  /* 0x0030 */ unsigned int ProcessExecuteFlags;
  /* 0x0034 */ unsigned int ProtectedProcess;
  /* 0x0038 */ unsigned int TimeZoneId;
  /* 0x003c */ struct _TIME_ZONE_INFORMATION TimeZone;
} MINIDUMP_MISC_INFO_3, *PMINIDUMP_MISC_INFO_3; /* size: 0x00e8 */

class AdHocInterceptorForwarders<IOleWindow,IOleWindow>::ContextSensitiveHelp::__l2::<lambda_92c1c2c09ef3e1efce6163781ee57e61>
{
  /* 0x0000 */ int fEnterMode;
}; /* size: 0x0004 */

class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >
{
}; /* size: 0x0020 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IWeakReferenceSource,1,0>
{
}; /* size: 0x0001 */

struct tagCLIPDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long ulClipFmt;
  /* 0x0008 */ unsigned char* pClipData;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IBindCtx> const >;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x000c */ long Padding_465;
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ unsigned long SizeOfContext;
  /* 0x04e4 */ unsigned __int64 StackBase;
  /* 0x04ec */ unsigned __int64 StackEnd;
  /* 0x04f4 */ long __PADDING__[3];
} MINIDUMP_THREAD_CALLBACK, *PMINIDUMP_THREAD_CALLBACK; /* size: 0x0500 */

class std::_String_const_iterator<std::_String_val<std::_Simple_types<char32_t> > >;

class wil::details::ScopeExitFn<<lambda_444db092903b510854fa5b0a4f709bfa> >
{
  /* 0x0000 */ class GetDataObjectEnterpriseId::__l2::<lambda_444db092903b510854fa5b0a4f709bfa> m_exitFunctor;
  /* 0x0001 */ BOOL m_shouldRun;
}; /* size: 0x0002 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0001 */

typedef struct _EVENTLOGRECORD
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long RecordNumber;
  /* 0x000c */ unsigned long TimeGenerated;
  /* 0x0010 */ unsigned long TimeWritten;
  /* 0x0014 */ unsigned long EventID;
  /* 0x0018 */ unsigned short EventType;
  /* 0x001a */ unsigned short NumStrings;
  /* 0x001c */ unsigned short EventCategory;
  /* 0x001e */ unsigned short ReservedFlags;
  /* 0x0020 */ unsigned long ClosingRecordNumber;
  /* 0x0024 */ unsigned long StringOffset;
  /* 0x0028 */ unsigned long UserSidLength;
  /* 0x002c */ unsigned long UserSidOffset;
  /* 0x0030 */ unsigned long DataLength;
  /* 0x0034 */ unsigned long DataOffset;
} EVENTLOGRECORD, *PEVENTLOGRECORD; /* size: 0x0038 */

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> >
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _KEY_CACHED_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long SubKeys;
  /* 0x0010 */ unsigned long MaxNameLen;
  /* 0x0014 */ unsigned long Values;
  /* 0x0018 */ unsigned long MaxValueNameLen;
  /* 0x001c */ unsigned long MaxValueDataLen;
  /* 0x0020 */ unsigned long NameLength;
  /* 0x0024 */ long __PADDING__[1];
} KEY_CACHED_INFORMATION, *PKEY_CACHED_INFORMATION; /* size: 0x0028 */

struct IStorage
{
}; /* size: 0x0008 */

struct wil::details::RtlThreadPoolMethods
{
}; /* size: 0x0001 */

struct Microsoft::WRL::ErrorHelper<0>
{
}; /* size: 0x0001 */

class std::initializer_list<char32_t>
{
  /* 0x0000 */ const char32_t* _First;
  /* 0x0008 */ const char32_t* _Last;
}; /* size: 0x0010 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource>
{
}; /* size: 0x0008 */

struct tagSAFEARRAYBOUND
{
  /* 0x0000 */ unsigned long cElements;
  /* 0x0004 */ long lLbound;
}; /* size: 0x0008 */

struct tagSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ long Padding_466;
  /* 0x0010 */ void* pvData;
  /* 0x0018 */ struct tagSAFEARRAYBOUND rgsabound[1];
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IAgileDataObject>
{
  /* 0x0000 */ struct IAgileDataObject* ptr_;
}; /* size: 0x0008 */

struct wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class RunSyncOnMTAThread::__l2::<lambda_8a24869d9b18bed7b3421b4230e9e935>
{
  /* 0x0000 */ class RemoveClipboardDataObject::__l14::<lambda_acbbe6d18a978d7bf2cb06affbc8b61b>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation_impl<_GUID>
{
}; /* size: 0x0008 */

typedef struct _RTLP_TAG_INFO
{
  /* 0x0000 */ struct _GUID Id;
  /* 0x0010 */ unsigned __int64 CurrentAllocatedBytes;
} RTLP_TAG_INFO, *PRTLP_TAG_INFO; /* size: 0x0018 */

typedef struct _RTLP_HEAP_TAGGING_INFO
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ long Padding_467;
  /* 0x0008 */ void* Process;
  /* 0x0010 */ unsigned __int64 EntriesCount;
  /* 0x0018 */ struct _RTLP_TAG_INFO Entries[1];
} RTLP_HEAP_TAGGING_INFO, *PRTLP_HEAP_TAGGING_INFO; /* size: 0x0030 */

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable;
    /* 0x0000 */ struct _DYNAMIC_FUNCTION_TABLE* DynamicTable;
  }; /* size: 0x0008 */
  /* 0x0008 */ void* ImageBase;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long SizeOfTable;
} INVERTED_FUNCTION_TABLE_ENTRY, *PINVERTED_FUNCTION_TABLE_ENTRY; /* size: 0x0018 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Microsoft::WRL::Details::WeakReferenceImpl> const >;

typedef struct _NDR_CS_ROUTINES
{
  /* 0x0000 */ struct _NDR_CS_SIZE_CONVERT_ROUTINES* pSizeConvertRoutines;
  /* 0x0008 */ void** pTagGettingRoutines /* function */;
} NDR_CS_ROUTINES, *PNDR_CS_ROUTINES; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> > const >;

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0001 */

struct CFont::Load::__l2::FONTDATA
{
  /* 0x0000 */ unsigned char bFlags;
  /* 0x0001 */ short sWeight;
  /* 0x0003 */ unsigned long ulHeight;
  /* 0x0007 */ unsigned char bFaceLen;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IClipboardTaskCompletion>
{
  /* 0x0000 */ struct IClipboardTaskCompletion* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>
{
}; /* size: 0x0008 */

typedef struct _APPINFO_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned __int64 hProcess;
  /* 0x0008 */ unsigned __int64 hThread;
  /* 0x0010 */ unsigned long dwProcessId;
  /* 0x0014 */ unsigned long dwThreadId;
} APPINFO_PROCESS_INFORMATION, *PAPPINFO_PROCESS_INFORMATION; /* size: 0x0018 */

class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Init::__l2::<lambda_b26c1a7a98add69a0d17b823be354735>
{
  /* 0x0000 */ struct IElementBehaviorSite* pBehaviorSite;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>
{
}; /* size: 0x0001 */

typedef struct _SYSDBG_VIRTUAL
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_VIRTUAL, *PSYSDBG_VIRTUAL; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> const >;

class wil::details::EnsureCoalescedTimerSRUM::__l8::<lambda_5035b992506f4af81a770c5842624510>
{
}; /* size: 0x0001 */

struct IContext
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFile *>
{
}; /* size: 0x0008 */

typedef struct _OBJECT_ATTRIBUTES64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_468;
  /* 0x0008 */ unsigned __int64 RootDirectory;
  /* 0x0010 */ unsigned __int64 ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_469;
  /* 0x0020 */ unsigned __int64 SecurityDescriptor;
  /* 0x0028 */ unsigned __int64 SecurityQualityOfService;
} OBJECT_ATTRIBUTES64, *POBJECT_ATTRIBUTES64; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator> const >;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

class wil::details::<lambda_79649bc7eddf76cb0be9ed05125f432b>
{
}; /* size: 0x0001 */

typedef struct _SYSDBG_PHYSICAL
{
  /* 0x0000 */ union _LARGE_INTEGER Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_PHYSICAL, *PSYSDBG_PHYSICAL; /* size: 0x0018 */

struct IFilter
{
}; /* size: 0x0008 */

class IntTraits<unsigned short>
{
  union
  {
    /* 0x0000 */ const unsigned short maxInt;
    /* 0x0000 */ const unsigned short minInt;
  }; /* size: 0x0002 */
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<int>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 ZeroBits;
  /* 0x0010 */ void* StackBase;
} PROCESS_STACK_ALLOCATION_INFORMATION, *PPROCESS_STACK_ALLOCATION_INFORMATION; /* size: 0x0018 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>
{
}; /* size: 0x0001 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,5> >
{
} tlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,5> >, *PtlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,5> >; /* size: 0x0001 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>;

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

class IsInt<unsigned short>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long FuncStart;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long PrologLen : 8; /* bit position: 0 */
    /* 0x0004 */ unsigned long FuncLen : 22; /* bit position: 8 */
    /* 0x0004 */ unsigned long ThirtyTwoBit : 1; /* bit position: 30 */
    /* 0x0004 */ unsigned long ExceptionFlag : 1; /* bit position: 31 */
  }; /* bitfield */
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

typedef struct __vcrt_assert_va_start_is_not_reference<__crt_locale_pointers * const>
{
} _vcrt_assert_va_start_is_not_reference<__crt_locale_pointers * const>, *P_vcrt_assert_va_start_is_not_reference<__crt_locale_pointers * const>; /* size: 0x0001 */

struct std::_Unused_parameter
{
}; /* size: 0x0001 */

class wil::details::lambda_call<<lambda_1258db8bed1d9beae0452193350f83a8> >
{
  /* 0x0000 */ class TryGetNdrTypeInfo::__l2::<lambda_1258db8bed1d9beae0452193350f83a8> m_lambda;
  /* 0x0010 */ BOOL m_call;
}; /* size: 0x0018 */

typedef struct _QUERY_SERVICE_LOCK_STATUSW
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ long Padding_470;
  /* 0x0008 */ wchar_t* lpLockOwner;
  /* 0x0010 */ unsigned long dwLockDuration;
  /* 0x0014 */ long __PADDING__[1];
} QUERY_SERVICE_LOCK_STATUSW, *PQUERY_SERVICE_LOCK_STATUSW; /* size: 0x0018 */

struct EventRegistrationToken
{
  /* 0x0000 */ __int64 value;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<EventRegistrationToken,int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<unsigned int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<Windows::Foundation::DateTime>
{
}; /* size: 0x0008 */

typedef struct _MonikerWriteStruct
{
  /* 0x0000 */ unsigned short m_endServer;
  /* 0x0002 */ unsigned short m_w;
  /* 0x0004 */ struct _GUID m_clsid;
  /* 0x0014 */ unsigned long m_ole1;
} MonikerWriteStruct, *PMonikerWriteStruct; /* size: 0x0018 */

class TryGetTypeInfoFromIIDViaRegistry::__l112::<lambda_b2c7739d5fc7084f4672933f9bcf410d>
{
  /* 0x0000 */ struct HREG& hregLang;
}; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_b2c7739d5fc7084f4672933f9bcf410d> >
{
  /* 0x0000 */ class TryGetTypeInfoFromIIDViaRegistry::__l112::<lambda_b2c7739d5fc7084f4672933f9bcf410d> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

typedef struct _MonikerReadStruct
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_ole1;
  /* 0x0014 */ unsigned long m_cbExtents;
} MonikerReadStruct, *PMonikerReadStruct; /* size: 0x0018 */

class wil::details::<lambda_d5f05dc35505eea0a3a3955b1bf8b04e>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >* ptr_;
}; /* size: 0x0008 */

struct tagBIND_OPTS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long grfFlags;
  /* 0x0008 */ unsigned long grfMode;
  /* 0x000c */ unsigned long dwTickCountDeadline;
}; /* size: 0x0010 */

struct FORMATETCDATAARRAY
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA _FormatEtcData[1];
}; /* size: 0x0048 */

struct Microsoft::WRL::RuntimeClassFlags<1>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator> >;

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_471;
  /* 0x0008 */ struct _CERT_ID RecipientId;
  /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0048 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_TRANS_RECIPIENT_INFO, *PCMSG_KEY_TRANS_RECIPIENT_INFO; /* size: 0x0058 */

typedef union _INSTALLSPEC
{
  union
  {
    struct
    {
      /* 0x0000 */ wchar_t* Name;
      /* 0x0008 */ struct _GUID GPOId;
    } /* size: 0x0018 */ AppName;
    /* 0x0000 */ wchar_t* FileExt;
    /* 0x0000 */ wchar_t* ProgId;
    struct
    {
      /* 0x0000 */ struct _GUID Clsid;
      /* 0x0010 */ unsigned long ClsCtx;
    } /* size: 0x0014 */ COMClass;
  }; /* size: 0x0018 */
} INSTALLSPEC, *PINSTALLSPEC; /* size: 0x0018 */

class CReadOnlyStorage::OpenStream::__l2::<lambda_fcb92e6a7323f565a84aeece59385ee4>
{
  /* 0x0000 */ class CReadOnlyStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ void*& reserved1;
  /* 0x0018 */ unsigned long& grfMode;
  /* 0x0020 */ unsigned long& reserved2;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IStream>& spInnerStream;
}; /* size: 0x0030 */

struct IEnumString
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>
{
}; /* size: 0x0008 */

typedef struct _COORD
{
  /* 0x0000 */ short X;
  /* 0x0002 */ short Y;
} COORD, *PCOORD; /* size: 0x0004 */

typedef struct _SMALL_RECT
{
  /* 0x0000 */ short Left;
  /* 0x0002 */ short Top;
  /* 0x0004 */ short Right;
  /* 0x0006 */ short Bottom;
} SMALL_RECT, *PSMALL_RECT; /* size: 0x0008 */

typedef struct _CONSOLE_SELECTION_INFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct _COORD dwSelectionAnchor;
  /* 0x0008 */ struct _SMALL_RECT srSelection;
} CONSOLE_SELECTION_INFO, *PCONSOLE_SELECTION_INFO; /* size: 0x0010 */

struct IEnumSTATPROPSETSTG
{
}; /* size: 0x0008 */

class Windows::Storage::AccessCache::ItemRemovedEventArgs;

class IsFloat<int,0>
{
}; /* size: 0x0001 */

struct tagVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ __int64 llVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ short __OBSOLETE__VARIANT_BOOL;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ __int64* pllVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ short* __OBSOLETE__VARIANT_PBOOL;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagVARIANT* pvarVal;
        /* 0x0008 */ void* byref;
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ unsigned __int64 ullVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ unsigned __int64* pullVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        struct
        {
          /* 0x0008 */ void* pvRecord;
          /* 0x0010 */ struct IRecordInfo* pRecInfo;
        }; /* size: 0x0010 */
      }; /* size: 0x0010 */
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct tagDEC decVal;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

struct tagPARAMDESCEX
{
  /* 0x0000 */ unsigned long cBytes;
  /* 0x0004 */ long Padding_472;
  /* 0x0008 */ struct tagVARIANT varDefaultValue;
}; /* size: 0x0020 */

class AdHocCallFrame<IOleWindow,<lambda_a07c95792dcef3326839cb72fdfd78fd> >
{
  /* 0x0000 */ long Padding_473[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>::GetWindow::__l2::<lambda_a07c95792dcef3326839cb72fdfd78fd>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class ServerCall;

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0008 */

struct ISynchronizeMutex
{
}; /* size: 0x0008 */

struct IRecordInfo
{
}; /* size: 0x0008 */

typedef struct _LDR_HOT_PATCH_DATA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_474;
  /* 0x0008 */ void* PatchLoadLibrary /* function */;
  /* 0x0010 */ void* PatchGetProcAddress /* function */;
} LDR_HOT_PATCH_DATA, *PLDR_HOT_PATCH_DATA; /* size: 0x0018 */

class CFileMonikerFactory
{
}; /* size: 0x0010 */

typedef struct _tlgWrapBuffer<_UNICODE_STRING>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const struct _UNICODE_STRING* const Ptr;
  }; /* size: 0x0008 */
} tlgWrapBuffer<_UNICODE_STRING>, *PtlgWrapBuffer<_UNICODE_STRING>; /* size: 0x0008 */

typedef struct _TAPE_SET_MEDIA_PARAMETERS
{
  /* 0x0000 */ unsigned long BlockSize;
} TAPE_SET_MEDIA_PARAMETERS, *PTAPE_SET_MEDIA_PARAMETERS; /* size: 0x0004 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<int>
{
}; /* size: 0x0008 */

class CPolicySet;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService>* ptr_;
}; /* size: 0x0008 */

struct tagGESTURECONFIG
{
  /* 0x0000 */ unsigned long dwID;
  /* 0x0004 */ unsigned long dwWant;
  /* 0x0008 */ unsigned long dwBlock;
}; /* size: 0x000c */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

struct IObjContext
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> > >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> >* ptr_;
}; /* size: 0x0008 */

class CObjrefMonikerFactory
{
}; /* size: 0x0010 */

struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseMutex,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::ITypedEventHandler<Windows::Foundation::IMemoryBufferReference *,IInspectable *>
{
}; /* size: 0x0008 */

class CCtxCall;

struct wil::details::static_lazy<OleClipboardTracing>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<OleClipboardTracing>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _TAPE_WMI_OPERATIONS
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long DataBufferSize;
  /* 0x0008 */ void* DataBuffer;
} TAPE_WMI_OPERATIONS, *PTAPE_WMI_OPERATIONS; /* size: 0x0010 */

class wil::details::<lambda_4cf8930b66a70cb94dfbc2fcc0185265>
{
}; /* size: 0x0001 */

class Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs;

struct wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,wistd::integral_constant<unsigned __int64,2>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::helper_attributes::usageAttribute
{
  /* 0x0000 */ unsigned int value;
} _vc_attributes::helper_attributes::usageAttribute, *P_vc_attributes::helper_attributes::usageAttribute; /* size: 0x0004 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>
{
}; /* size: 0x0001 */

typedef struct _LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} LDT_ENTRY, *PLDT_ENTRY; /* size: 0x0008 */

typedef struct _FILE_PIPE_SILO_ARRIVAL_INPUT
{
  /* 0x0000 */ void* JobHandle;
} FILE_PIPE_SILO_ARRIVAL_INPUT, *PFILE_PIPE_SILO_ARRIVAL_INPUT; /* size: 0x0008 */

struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct std::_Make_unsigned2<4>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::DateTime>
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,1>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} ALPC_PORT_MESSAGE_ZONE_INFORMATION, *PALPC_PORT_MESSAGE_ZONE_INFORMATION; /* size: 0x0010 */

struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

class UnmarshalForQueryInterface;

typedef struct _XSAVE_VENDOR
{
  /* 0x0000 */ unsigned long VendorId[3];
  /* 0x000c */ long Padding_475;
  /* 0x0010 */ struct _XSAVE_SUPPORTED_CPU SupportedCpu;
} XSAVE_VENDOR, *PXSAVE_VENDOR; /* size: 0x0038 */

struct Windows::Foundation::Collections::IMapView<__int64,float>
{
}; /* size: 0x0008 */

class CTSmartObj<unsigned char *,CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem> >
{
  /* 0x0000 */ unsigned char* _obj;
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<IInspectable *>
{
}; /* size: 0x0008 */

class CBaseRPCTimeout
{
  union
  {
    /* 0x0000 */ const unsigned long s_dwDefaultRPCTimeOut;
    /* 0x0000 */ const unsigned long s_dwRepeatRPCTimeOut;
    /* 0x0000 */ unsigned long _dwThreadId;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL _fTimedOut;
  /* 0x0005 */ char Padding_476[3];
  /* 0x0008 */ HRESULT _hrCancelEnabled;
  /* 0x000c */ long Padding_477;
  /* 0x0010 */ void* _hTimer;
}; /* size: 0x0018 */

struct tagOLE1DISPATCHDATA
{
  /* 0x0000 */ enum DDE_DISPATCH_FUNC wDispFunc;
}; /* size: 0x0004 */

struct HSTR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagRID_DEVICE_INFO_KEYBOARD
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSubType;
  /* 0x0008 */ unsigned long dwKeyboardMode;
  /* 0x000c */ unsigned long dwNumberOfFunctionKeys;
  /* 0x0010 */ unsigned long dwNumberOfIndicators;
  /* 0x0014 */ unsigned long dwNumberOfKeysTotal;
}; /* size: 0x0018 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

class CoGetStandardMarshalInProgress;

typedef struct __vc_attributes::event_receiverAttribute
{
  /* 0x0000 */ enum __vc_attributes::event_receiverAttribute::type_e type;
  /* 0x0004 */ BOOL layout_dependent;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::event_receiverAttribute, *P_vc_attributes::event_receiverAttribute; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler_impl<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService>
{
  /* 0x0000 */ struct IImmersiveApplicationArrayService* ptr_;
}; /* size: 0x0008 */

struct IRunningObjectTable
{
}; /* size: 0x0008 */

class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char16_t> > > >;

struct tagPOINTS
{
  /* 0x0000 */ short x;
  /* 0x0002 */ short y;
}; /* size: 0x0004 */

struct tagEMRPOLYPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cpts;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct tagPOINTS apts[1];
}; /* size: 0x0028 */

class wistd::__compressed_pair<VerbList *,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::IMemoryBufferReference *,IInspectable *>
{
}; /* size: 0x0008 */

class CArrayFValue
{
  /* 0x0000 */ unsigned char* m_pData;
  /* 0x0008 */ unsigned int m_cbValue;
  /* 0x000c */ int m_nSize;
  /* 0x0010 */ int m_nMaxSize;
  /* 0x0014 */ int m_nGrowBy;
}; /* size: 0x0018 */

struct tagARRAYDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdescElem;
  /* 0x0010 */ unsigned short cDims;
  /* 0x0012 */ char Padding_478[2];
  /* 0x0014 */ struct tagSAFEARRAYBOUND rgbounds[1];
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterable_impl<float>
{
}; /* size: 0x0008 */

class ClipboardDataObjectTask
{
  /* 0x0000 */ long Padding_479[12];
  /* 0x0030 */ class Microsoft::WRL::Wrappers::CriticalSection m_CallCS;
  /* 0x0058 */ class CancellableCall* m_pOutstandingCalls;
  /* 0x0060 */ struct _TP_TIMER* m_pCancellationTimer;
  /* 0x0068 */ volatile BOOL m_fTaskActive;
  /* 0x0069 */ char Padding_480[3];
  /* 0x006c */ volatile unsigned long m_dwCancellationThreadId;
  /* 0x0070 */ BOOL m_fReleaseOnTimeout;
  /* 0x0071 */ char Padding_481[7];
  /* 0x0078 */ class Microsoft::WRL::ComPtr<IOSTaskCompletion> m_spTaskCompletion;
}; /* size: 0x0080 */

struct ComTrace::StaticHandle
{
  /* 0x0000 */ const struct _tlgProvider_t* handle;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<unsigned __int64>
{
}; /* size: 0x0008 */

struct std::_Invoker_functor
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct _TP_WAIT;

struct IXMLDOMNode
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::AccessCache::AccessListEntry,0>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0008 */

typedef struct _s__RTTICompleteObjectLocator2
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long offset;
  /* 0x0008 */ unsigned long cdOffset;
  /* 0x000c */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0014 */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
  /* 0x001c */ const struct _s__RTTICompleteObjectLocator2* pSelf;
} s__RTTICompleteObjectLocator2, *Ps__RTTICompleteObjectLocator2; /* size: 0x0024 */

struct wil::details::resource_policy<_TP_WAIT *,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_WAIT *,_TP_WAIT *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct IOplockStorage
{
}; /* size: 0x0008 */

typedef struct _OPEN_PRINTER_PROPS_INFOA
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_482;
  /* 0x0008 */ char* pszSheetName;
  /* 0x0010 */ unsigned int uSheetIndex;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ int bModal;
  /* 0x001c */ long __PADDING__[1];
} OPEN_PRINTER_PROPS_INFOA, *POPEN_PRINTER_PROPS_INFOA; /* size: 0x0020 */

struct std::_Invoker_pmd_refwrap
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct IBindStatusCallback
{
}; /* size: 0x0008 */

struct IBinding
{
}; /* size: 0x0008 */

struct HWND__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class wil::rtlcritical_section
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_cs;
}; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

struct IBindCtx
{
}; /* size: 0x0008 */

class DDE_CHANNEL
{
  /* 0x0000 */ long Padding_483[4];
  /* 0x0010 */ unsigned long m_cRefs;
  /* 0x0014 */ long Padding_484;
  /* 0x0018 */ struct HWND__* hwndCli;
  /* 0x0020 */ struct HWND__* hwndSvr;
  /* 0x0028 */ int bTerminating;
  /* 0x002c */ int iExtraTerms;
  /* 0x0030 */ unsigned short wTimer;
  /* 0x0032 */ char Padding_485[2];
  /* 0x0034 */ unsigned long dwStartTickCount;
  /* 0x0038 */ unsigned short msgFirst;
  /* 0x003a */ unsigned short msgLast;
  /* 0x003c */ long Padding_486;
  /* 0x0040 */ struct HWND__* msghwnd;
  /* 0x0048 */ int fRejected;
  /* 0x004c */ unsigned short wMsg;
  /* 0x004e */ char Padding_487[2];
  /* 0x0050 */ __int64 lParam;
  /* 0x0058 */ int iAwaitAck;
  /* 0x005c */ HRESULT hres;
  /* 0x0060 */ void* hopt;
  /* 0x0068 */ void* hDdePoke;
  /* 0x0070 */ void* hCommands;
  /* 0x0078 */ unsigned short wChannelDeleted;
  /* 0x007a */ char Padding_488[6];
  /* 0x0080 */ struct tagDDECALLDATA* pCD;
  /* 0x0088 */ enum tagSERVERCALLEX CallState;
  /* 0x008c */ int bFreedhopt;
}; /* size: 0x0090 */

typedef struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short PageRelativeOffset : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short IndirectCall : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short RexWPrefix : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short CfgCheck : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short Reserved : 1; /* bit position: 15 */
  }; /* bitfield */
} IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION, *PIMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION; /* size: 0x0002 */

struct Windows::Foundation::IReferenceArray_impl<_GUID>
{
}; /* size: 0x0008 */

typedef struct _HARDWARE_COUNTER
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Index;
} HARDWARE_COUNTER, *PHARDWARE_COUNTER; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct IInternetProtocolSinkStackable
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

class wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy>
{
}; /* size: 0x0008 */

class CUrlMonWrapper
{
  /* 0x0000 */ long Padding_489[2];
  /* 0x0008 */ long _cRef;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned __int64>
{
}; /* size: 0x0008 */

class COleCache::CCacheDataImpl
{
}; /* size: 0x0008 */

class COleCache
{
  /* 0x0000 */ long Padding_490[16];
  /* 0x0040 */ class COleCache::CCacheUnkImpl m_UnkPrivate;
  /* 0x0048 */ class COleCache::CCacheDataImpl m_Data;
  /* 0x0050 */ class COleCache::CCacheViewImpl m_ViewObject;
  /* 0x0058 */ class COleCache::CAdviseSinkImpl m_AdviseSink;
  /* 0x0060 */ struct IUnknown* m_pUnkOuter;
  /* 0x0068 */ struct IStorage* m_pStg;
  /* 0x0070 */ struct _GUID m_clsid;
  /* 0x0080 */ unsigned short m_cfFormat;
  /* 0x0082 */ char Padding_491[2];
  /* 0x0084 */ unsigned long m_ulFlags;
  /* 0x0088 */ class CArray<CCacheNode>* m_pCacheArray;
  /* 0x0090 */ struct IAdviseSink* m_pViewAdvSink;
  /* 0x0098 */ unsigned long m_advfView;
  /* 0x009c */ unsigned long m_aspectsView;
  /* 0x00a0 */ unsigned long m_dwFrozenAspects;
  /* 0x00a4 */ long Padding_492;
  /* 0x00a8 */ struct IDataObject* m_pDataObject;
}; /* size: 0x00b0 */

class wil::details::static_lazy<ComTrace>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[32];
}; /* size: 0x0028 */

struct wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,char *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IOleVerb>;

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>* ptr_;
}; /* size: 0x0008 */

struct IPersistStream
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<short>
{
}; /* size: 0x0001 */

struct tagDISPPARAMS
{
  /* 0x0000 */ struct tagVARIANT* rgvarg;
  /* 0x0008 */ long* rgdispidNamedArgs;
  /* 0x0010 */ unsigned int cArgs;
  /* 0x0014 */ unsigned int cNamedArgs;
}; /* size: 0x0018 */

struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&wil::details::FreeProcessHeap,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncActionProgressHandler<double>
{
}; /* size: 0x0008 */

typedef struct _SCRUB_PARITY_EXTENT
{
  /* 0x0000 */ __int64 Offset;
  /* 0x0008 */ unsigned __int64 Length;
} SCRUB_PARITY_EXTENT, *PSCRUB_PARITY_EXTENT; /* size: 0x0010 */

struct IOleAdviseHolder
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(unsigned short *),&SysFreeString,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct DISPLAYCONFIG_SUPPORT_VIRTUAL_RESOLUTION
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int disableMonitorVirtualResolution : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
}; /* size: 0x0018 */

struct IPersist
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>
{
}; /* size: 0x0001 */

class CCacheNode
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ struct tagFORMATETC m_foretc;
  /* 0x0030 */ unsigned long m_advf;
  /* 0x0034 */ long m_lWidth;
  /* 0x0038 */ long m_lHeight;
  /* 0x003c */ unsigned long m_dwFlags;
  /* 0x0040 */ struct IStorage* m_pStg;
  /* 0x0048 */ int m_iStreamNum;
  /* 0x004c */ unsigned long m_dwPresBitsPos;
  /* 0x0050 */ unsigned long m_dwSavedPresBitsPos;
  /* 0x0054 */ int m_fConvert;
  /* 0x0058 */ struct IOlePresObj* m_pPresObj;
  /* 0x0060 */ struct IOlePresObj* m_pPresObjAfterFreeze;
  /* 0x0068 */ struct IDataObject* m_pDataObject;
  /* 0x0070 */ unsigned long m_dwAdvConnId;
}; /* size: 0x0078 */

struct CArray<CCacheNode>::ArrayNode
{
  /* 0x0000 */ class CCacheNode item;
  /* 0x0078 */ unsigned long next;
  /* 0x007c */ unsigned long prev;
}; /* size: 0x0080 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0008 */

class CBindStatusCallback
{
  /* 0x0000 */ long Padding_493[4];
  /* 0x0010 */ long _cRef;
  /* 0x0014 */ HRESULT _hr;
  /* 0x0018 */ void* _hEvent;
}; /* size: 0x0020 */

struct Windows::Foundation::IReference_impl<HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IObservableVector<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::window_dc) noexcept,&wil::window_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::window_dc,HDC__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef struct _TI_FINDCHILDREN_PARAMS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Start;
  /* 0x0008 */ unsigned long ChildId[1];
} TI_FINDCHILDREN_PARAMS, *PTI_FINDCHILDREN_PARAMS; /* size: 0x000c */

struct HDC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class wil::details::<lambda_6553ee20546644424a77445b8a5340c1>
{
}; /* size: 0x0001 */

typedef struct _CM_KEYBOARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char Subtype;
  /* 0x0006 */ unsigned short KeyboardFlags;
} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA; /* size: 0x0008 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long NameFlags;
  /* 0x000c */ long Padding_494;
  /* 0x0010 */ __int64 FileId;
  /* 0x0018 */ unsigned long Reserved1;
  /* 0x001c */ unsigned long Reserved2;
  /* 0x0020 */ __int64 Reserved3;
  /* 0x0028 */ wchar_t FileName[1];
  /* 0x002a */ char __PADDING__[6];
} TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY, *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY; /* size: 0x0030 */

typedef struct _CERT_CHAIN_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cChain;
  /* 0x0010 */ struct _CERT_SIMPLE_CHAIN** rgpChain;
  /* 0x0018 */ unsigned long cLowerQualityChainContext;
  /* 0x001c */ long Padding_495;
  /* 0x0020 */ const struct _CERT_CHAIN_CONTEXT** rgpLowerQualityChainContext;
  /* 0x0028 */ int fHasRevocationFreshnessTime;
  /* 0x002c */ unsigned long dwRevocationFreshnessTime;
  /* 0x0030 */ unsigned long dwCreateFlags;
  /* 0x0034 */ struct _GUID ChainId;
  /* 0x0044 */ long __PADDING__[1];
} CERT_CHAIN_CONTEXT, *PCERT_CHAIN_CONTEXT; /* size: 0x0048 */

struct Windows::Foundation::Collections::IIterable<IInspectable *>
{
}; /* size: 0x0008 */

struct tagSTATDATA
{
  /* 0x0000 */ struct tagFORMATETC formatetc;
  /* 0x0020 */ unsigned long advf;
  /* 0x0024 */ long Padding_496;
  /* 0x0028 */ struct IAdviseSink* pAdvSink;
  /* 0x0030 */ unsigned long dwConnection;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _RTL_RXACT_CONTEXT
{
  /* 0x0000 */ void* RootRegistryKey;
  /* 0x0008 */ void* RXactKey;
  /* 0x0010 */ unsigned char HandlesValid;
  /* 0x0011 */ char Padding_497[7];
  /* 0x0018 */ struct _RTL_RXACT_LOG* RXactLog;
} RTL_RXACT_CONTEXT, *PRTL_RXACT_CONTEXT; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

struct IAdviseSink
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>
{
}; /* size: 0x0008 */

struct wil::err_failfast_policy
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0008 */

typedef struct _EXCEPTION_RECORD64
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ unsigned long __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64; /* size: 0x0098 */

class wil::details::<lambda_fc3d789a4bf360a0222f84e5ea461225>
{
}; /* size: 0x0001 */

struct IActivationSecurityInfo
{
}; /* size: 0x0008 */

class std::_String_view_iterator<std::char_traits<unsigned short> >;

class wil::details::<lambda_3627dded0254d04b0b7c46372800dfc0>
{
}; /* size: 0x0001 */

typedef struct _LDRP_CSLIST
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Tail;
} LDRP_CSLIST, *PLDRP_CSLIST; /* size: 0x0008 */

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_498;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0030 */ void* pvHashAuxInfo;
  /* 0x0038 */ struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
} CRYPT_KEY_SIGN_MESSAGE_PARA, *PCRYPT_KEY_SIGN_MESSAGE_PARA; /* size: 0x0050 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,__int64>
{
}; /* size: 0x0008 */

struct IImageFilter
{
}; /* size: 0x0008 */

struct std::hash<std::error_code>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::paint_dc,HDC__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class wil::details::<lambda_22c1057028c38f542f58409464a556f9>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<int>
{
}; /* size: 0x0008 */

struct std::_Conditionally_enabled_hash<int,1>
{
}; /* size: 0x0001 */

struct wistd::unique_ptr<_TOKEN_MANDATORY_LABEL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;

typedef struct __vc_attributes::atl::perf_objectAttribute
{
  /* 0x0000 */ int name_res;
  /* 0x0004 */ int help_res;
  /* 0x0008 */ const char* namestring;
  /* 0x0010 */ const char* helpstring;
  /* 0x0018 */ int detail;
  /* 0x001c */ BOOL no_instances;
  /* 0x001d */ char Padding_499[3];
  /* 0x0020 */ const char* class_;
  /* 0x0028 */ int maxinstnamelen;
  /* 0x002c */ long __PADDING__[1];
} _vc_attributes::atl::perf_objectAttribute, *P_vc_attributes::atl::perf_objectAttribute; /* size: 0x0030 */

struct Windows::Foundation::Collections::IIterator<unsigned int>
{
}; /* size: 0x0008 */

class CDelayUnlockContainer
{
  /* 0x0000 */ long Padding_500[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_501;
  /* 0x0010 */ struct IOleItemContainer* m_pOleCont;
}; /* size: 0x0018 */

struct tagSERIALKEYSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszActivePort;
  /* 0x0010 */ wchar_t* lpszPort;
  /* 0x0018 */ unsigned int iBaudRate;
  /* 0x001c */ unsigned int iPortState;
  /* 0x0020 */ unsigned int iActive;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _MEMORY_PARTITION_CHARGE_SHARING_ATTRIBUTES
{
  /* 0x0000 */ enum _MEMORY_PARTITION_CHARGE_SHARING_TYPE Type;
  /* 0x0004 */ long Padding_502;
  /* 0x0008 */ unsigned __int64 CurrentChargeInPages;
  /* 0x0010 */ unsigned __int64 PeakChargeInPages;
  /* 0x0018 */ unsigned __int64 ChargeLimitInPages;
  /* 0x0020 */ unsigned __int64 ChargeFailures;
} MEMORY_PARTITION_CHARGE_SHARING_ATTRIBUTES, *PMEMORY_PARTITION_CHARGE_SHARING_ATTRIBUTES; /* size: 0x0028 */

struct IOleItemContainer
{
}; /* size: 0x0008 */

struct std::hash<std::error_condition>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<void *,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wistd::integral_constant<unsigned __int64,0>,wil::select_result,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0001 */

typedef struct _MIDL_SERVER_INFO_
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0008 */ void* const* DispatchTable /* function */;
  /* 0x0010 */ const unsigned char* ProcString;
  /* 0x0018 */ const unsigned short* FmtStringOffset;
  /* 0x0020 */ void* const* ThunkTable /* function */;
  /* 0x0028 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0030 */ unsigned __int64 nCount;
  /* 0x0038 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_SERVER_INFO_, *PMIDL_SERVER_INFO_; /* size: 0x0040 */

typedef struct _tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,void const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteAgg,void const *>
{
} tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,void const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteAgg,void const *>, *PtlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,void const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteAgg,void const *>; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_OID
{
  /* 0x0000 */ unsigned long cbOID;
  /* 0x0004 */ long Padding_503;
  /* 0x0008 */ unsigned char* pbOID;
} BCRYPT_OID, *PBCRYPT_OID; /* size: 0x0010 */

class CAbstractStream
{
  /* 0x0000 */ long Padding_504[2];
  /* 0x0008 */ volatile unsigned long _cRefs;
}; /* size: 0x0010 */

struct _RTLP_CURDIR_REF;

class AdHocInterceptor<IPersistPropertyBag>
{
  /* 0x0000 */ long Padding_505[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

typedef struct _SYSTEM_AUDIT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_ACE, *PSYSTEM_AUDIT_ACE; /* size: 0x000c */

typedef struct _CERT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_506;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0040 */ struct _FILETIME NotBefore;
  /* 0x0048 */ struct _FILETIME NotAfter;
  /* 0x0050 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0060 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0090 */ struct _CRYPT_BIT_BLOB IssuerUniqueId;
  /* 0x00a8 */ struct _CRYPT_BIT_BLOB SubjectUniqueId;
  /* 0x00c0 */ unsigned long cExtension;
  /* 0x00c4 */ long Padding_507;
  /* 0x00c8 */ struct _CERT_EXTENSION* rgExtension;
} CERT_INFO, *PCERT_INFO; /* size: 0x00d0 */

struct IImmersiveApplication
{
}; /* size: 0x0008 */

class std::numeric_limits<unsigned long>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class std::numeric_limits<long>
{
  union
  {
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_508;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0020 */ void* pvEncryptionAuxInfo;
} CMSG_ENCRYPTED_ENCODE_INFO, *PCMSG_ENCRYPTED_ENCODE_INFO; /* size: 0x0028 */

class Microsoft::WRL::ComPtr<CProcessPatternTbl>
{
  /* 0x0000 */ class CProcessPatternTbl* ptr_;
}; /* size: 0x0008 */

class std::error_code
{
  /* 0x0000 */ int _Myval;
  /* 0x0004 */ long Padding_509;
  /* 0x0008 */ const class std::error_category* _Mycat;
}; /* size: 0x0010 */

class std::_System_error
{
  /* 0x0000 */ long Padding_510[4];
  /* 0x0010 */ class std::error_code _Mycode;
}; /* size: 0x0020 */

struct tagEMREXCLUDECLIPRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclClip;
}; /* size: 0x0018 */

class CProcessPatternTbl
{
  /* 0x0000 */ long Padding_511[4];
  /* 0x0010 */ class CPatternTbl* m_pPatTbl;
  /* 0x0018 */ class CScmPatternTbl* m_pScmPatTbl;
}; /* size: 0x0020 */

typedef struct _CRL_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ long Padding_512;
  /* 0x0008 */ unsigned char* pbCrlEncoded;
  /* 0x0010 */ unsigned long cbCrlEncoded;
  /* 0x0014 */ long Padding_513;
  /* 0x0018 */ struct _CRL_INFO* pCrlInfo;
  /* 0x0020 */ void* hCertStore;
} CRL_CONTEXT, *PCRL_CONTEXT; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Provider::FileUpdateStatus>
{
}; /* size: 0x0008 */

class CPatternTbl
{
  /* 0x0000 */ struct STblHdr* _pTblHdr;
  /* 0x0008 */ unsigned char* _pStart;
}; /* size: 0x0010 */

typedef struct _tlgWrapSid<_SID>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const struct _SID* const Sid;
  }; /* size: 0x0008 */
} tlgWrapSid<_SID>, *PtlgWrapSid<_SID>; /* size: 0x0008 */

typedef struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION
{
  /* 0x0000 */ void* ReflectionProcessHandle;
  /* 0x0008 */ void* ReflectionThreadHandle;
  /* 0x0010 */ struct _CLIENT_ID ReflectionClientId;
} RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION, *PRTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION; /* size: 0x0020 */

class MultiplicationMethod<unsigned long,unsigned int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *>
{
}; /* size: 0x0008 */

typedef struct _WNF_TYPE_ID
{
  /* 0x0000 */ struct _GUID TypeId;
} WNF_TYPE_ID, *PWNF_TYPE_ID; /* size: 0x0010 */

struct STblHdr
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long cbLargest;
  /* 0x0008 */ unsigned long OffsStart;
  /* 0x000c */ unsigned long OffsEnd;
}; /* size: 0x0010 */

class CBaseMInterfacePointerMarshalingStream
{
  /* 0x0000 */ long Padding_514[4];
  /* 0x0010 */ long _lOffset;
  /* 0x0014 */ long _cbDataSize;
  /* 0x0018 */ unsigned long _cbBufferSize;
  /* 0x001c */ long Padding_515;
  /* 0x0020 */ struct tagMInterfacePointer* _pMInterfacePointer;
  /* 0x0028 */ int _fFree;
}; /* size: 0x0030 */

class CScmPatternTbl
{
  /* 0x0000 */ unsigned char* _pLocTbl;
}; /* size: 0x0008 */

class CDbgGuidStr
{
}; /* size: 0x0001 */

struct Windows::System::IUserWatcher
{
}; /* size: 0x0008 */

class wil::details::<lambda_0fe240b9a2328790579032b3121ed8b3>
{
}; /* size: 0x0001 */

class Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs;

typedef struct _HMAC_Info
{
  /* 0x0000 */ unsigned int HashAlgid;
  /* 0x0004 */ long Padding_516;
  /* 0x0008 */ unsigned char* pbInnerString;
  /* 0x0010 */ unsigned long cbInnerString;
  /* 0x0014 */ long Padding_517;
  /* 0x0018 */ unsigned char* pbOuterString;
  /* 0x0020 */ unsigned long cbOuterString;
  /* 0x0024 */ long __PADDING__[1];
} HMAC_Info, *PHMAC_Info; /* size: 0x0028 */

struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

class wistd::__function::__base<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>;

union tagBINDPTR
{
  union
  {
    /* 0x0000 */ struct tagFUNCDESC* lpfuncdesc;
    /* 0x0000 */ struct tagVARDESC* lpvardesc;
    /* 0x0000 */ struct ITypeComp* lptcomp;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION
{
  /* 0x0000 */ struct _GUID PolicyPublisher;
  /* 0x0010 */ unsigned long PolicyVersion;
  /* 0x0014 */ unsigned long PolicyOptions;
} SYSTEM_SECUREBOOT_POLICY_INFORMATION, *PSYSTEM_SECUREBOOT_POLICY_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION PolicyInformation;
  /* 0x0018 */ unsigned long PolicySize;
  /* 0x001c */ unsigned char Policy[1];
  /* 0x001d */ char __PADDING__[3];
} SYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION, *PSYSTEM_SECUREBOOT_POLICY_FULL_INFORMATION; /* size: 0x0020 */

struct tagCOLORADJUSTMENT
{
  /* 0x0000 */ unsigned short caSize;
  /* 0x0002 */ unsigned short caFlags;
  /* 0x0004 */ unsigned short caIlluminantIndex;
  /* 0x0006 */ unsigned short caRedGamma;
  /* 0x0008 */ unsigned short caGreenGamma;
  /* 0x000a */ unsigned short caBlueGamma;
  /* 0x000c */ unsigned short caReferenceBlack;
  /* 0x000e */ unsigned short caReferenceWhite;
  /* 0x0010 */ short caContrast;
  /* 0x0012 */ short caBrightness;
  /* 0x0014 */ short caColorfulness;
  /* 0x0016 */ short caRedGreenTint;
}; /* size: 0x0018 */

struct tagEMRSETCOLORADJUSTMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagCOLORADJUSTMENT ColorAdjustment;
}; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> const >;

struct tagBIND_OPTS3
{
  /* 0x0000 */ long Padding_518[10];
  /* 0x0028 */ struct HWND__* hwnd;
}; /* size: 0x0030 */

class CLUAMoniker
{
  /* 0x0000 */ long Padding_519[14];
  /* 0x0038 */ unsigned long m_runLevel;
  /* 0x003c */ int m_bHaveBindOpts;
  /* 0x0040 */ struct tagBIND_OPTS3 m_bindopts3;
}; /* size: 0x0070 */

struct ICallUnmarshal
{
}; /* size: 0x0008 */

typedef struct __WilFeatureTraits_Feature_PerAppRuntimeBroker
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy4;
    /* 0x0000 */ const char ___dummy0;
    /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
    /* 0x0000 */ const char ___dummy1;
    /* 0x0000 */ const char ___dummy2;
    /* 0x0000 */ const char ___dummy3;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_PerAppRuntimeBroker, *P_WilFeatureTraits_Feature_PerAppRuntimeBroker; /* size: 0x0001 */

struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&GlobalUnlock,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

struct CDdeObject::COleObjectImpl
{
  /* 0x0000 */ long Padding_520[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,IInspectable *>
{
}; /* size: 0x0008 */

struct ICreateTypeLib2
{
}; /* size: 0x0008 */

class wil::details::<lambda_277802bec955fc575f413391ad2f5cd9>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Internal::AggregateType<Windows::System::UserChangedEventArgs *,Windows::System::IUserChangedEventArgs *>;

struct _ACTIVATION_CONTEXT;

struct Windows::Foundation::Collections::IVectorView<_GUID>
{
}; /* size: 0x0008 */

typedef struct _IO_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Option;
  /* 0x0001 */ unsigned char Type;
  /* 0x0002 */ unsigned char ShareDisposition;
  /* 0x0003 */ unsigned char Spare1;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short Spare2;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Port;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory;
      struct
      {
        /* 0x0008 */ unsigned long MinimumVector;
        /* 0x000c */ unsigned long MaximumVector;
        /* 0x0010 */ enum _IRQ_DEVICE_POLICY AffinityPolicy;
        /* 0x0014 */ enum _IRQ_PRIORITY PriorityPolicy;
        /* 0x0018 */ unsigned __int64 TargetedProcessors;
      } /* size: 0x0018 */ Interrupt;
      struct
      {
        /* 0x0008 */ unsigned long MinimumChannel;
        /* 0x000c */ unsigned long MaximumChannel;
      } /* size: 0x0008 */ Dma;
      struct
      {
        /* 0x0008 */ unsigned long RequestLine;
        /* 0x000c */ unsigned long Reserved;
        /* 0x0010 */ unsigned long Channel;
        /* 0x0014 */ unsigned long TransferWidth;
      } /* size: 0x0010 */ DmaV3;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Generic;
      struct
      {
        /* 0x0008 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long MinBusNumber;
        /* 0x0010 */ unsigned long MaxBusNumber;
        /* 0x0014 */ unsigned long Reserved;
      } /* size: 0x0010 */ BusNumber;
      struct
      {
        /* 0x0008 */ unsigned long Priority;
        /* 0x000c */ unsigned long Reserved1;
        /* 0x0010 */ unsigned long Reserved2;
      } /* size: 0x000c */ ConfigData;
      struct
      {
        /* 0x0008 */ unsigned long Length40;
        /* 0x000c */ unsigned long Alignment40;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory40;
      struct
      {
        /* 0x0008 */ unsigned long Length48;
        /* 0x000c */ unsigned long Alignment48;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory48;
      struct
      {
        /* 0x0008 */ unsigned long Length64;
        /* 0x000c */ unsigned long Alignment64;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory64;
      struct
      {
        /* 0x0008 */ unsigned char Class;
        /* 0x0009 */ unsigned char Type;
        /* 0x000a */ unsigned char Reserved1;
        /* 0x000b */ unsigned char Reserved2;
        /* 0x000c */ unsigned long IdLowPart;
        /* 0x0010 */ unsigned long IdHighPart;
      } /* size: 0x000c */ Connection;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _IO_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST; /* size: 0x0028 */

struct Windows::Foundation::Collections::IMapView<unsigned int,HSTRING__ *>
{
}; /* size: 0x0008 */

struct tagSECTIONHEADER
{
  /* 0x0000 */ unsigned long cbSection;
  /* 0x0004 */ unsigned long cProperties;
}; /* size: 0x0008 */

class CArray<CProperty *,CProperty * &>
{
  /* 0x0000 */ class CProperty** m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

class CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>
{
  /* 0x0000 */ struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc** m_pHashTable;
  /* 0x0008 */ unsigned int m_nHashTableSize;
  /* 0x000c */ int m_nCount;
  /* 0x0010 */ struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc* m_pFreeList;
  /* 0x0018 */ struct CPlex* m_pBlocks;
  /* 0x0020 */ int m_nBlockSize;
}; /* size: 0x0028 */

class CPropertySection
{
  /* 0x0000 */ struct _GUID m_FormatID;
  /* 0x0010 */ struct tagSECTIONHEADER m_SH;
  /* 0x0018 */ class CArray<CProperty *,CProperty * &> m_PropList;
  /* 0x0030 */ class CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &> m_NameDict;
  /* 0x0058 */ wchar_t* m_pwszSectionName;
}; /* size: 0x0060 */

typedef struct _MODEMDEVCAPS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwModemProviderVersion;
  /* 0x0014 */ unsigned long dwModemManufacturerOffset;
  /* 0x0018 */ unsigned long dwModemManufacturerSize;
  /* 0x001c */ unsigned long dwModemModelOffset;
  /* 0x0020 */ unsigned long dwModemModelSize;
  /* 0x0024 */ unsigned long dwModemVersionOffset;
  /* 0x0028 */ unsigned long dwModemVersionSize;
  /* 0x002c */ unsigned long dwDialOptions;
  /* 0x0030 */ unsigned long dwCallSetupFailTimer;
  /* 0x0034 */ unsigned long dwInactivityTimeout;
  /* 0x0038 */ unsigned long dwSpeakerVolume;
  /* 0x003c */ unsigned long dwSpeakerMode;
  /* 0x0040 */ unsigned long dwModemOptions;
  /* 0x0044 */ unsigned long dwMaxDTERate;
  /* 0x0048 */ unsigned long dwMaxDCERate;
  /* 0x004c */ unsigned char abVariablePortion[1];
  /* 0x004d */ char __PADDING__[3];
} MODEMDEVCAPS, *PMODEMDEVCAPS; /* size: 0x0050 */

struct POWER_STATE_NOTIFY_HANDLER
{
  /* 0x0000 */ void* Handler /* function */;
  /* 0x0008 */ void* Context;
}; /* size: 0x0010 */

typedef struct _tlgWrapperByVal<1>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const unsigned char Value;
  }; /* size: 0x0004 */
} tlgWrapperByVal<1>, *PtlgWrapperByVal<1>; /* size: 0x0001 */

struct IEnumFORMATETC
{
}; /* size: 0x0008 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

struct GetTypeValueImpl<long,unsigned long,unsigned long>
{
}; /* size: 0x0001 */

class wistd::unique_ptr<_TOKEN_DEFAULT_DACL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_TOKEN_DEFAULT_DACL *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > __ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceProvider> const >;

typedef struct _SYSTEM_CODEINTEGRITYPOLICY_INFORMATION
{
  /* 0x0000 */ unsigned long Options;
  /* 0x0004 */ unsigned long HVCIOptions;
  /* 0x0008 */ unsigned __int64 Version;
  /* 0x0010 */ struct _GUID PolicyGuid;
} SYSTEM_CODEINTEGRITYPOLICY_INFORMATION, *PSYSTEM_CODEINTEGRITYPOLICY_INFORMATION; /* size: 0x0020 */

struct std::_System_error_message
{
  /* 0x0000 */ char* _Str;
  /* 0x0008 */ unsigned __int64 _Length;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationWithProgress_impl<Windows::Storage::Streams::IInputStream *,unsigned __int64>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> const >;

struct tagTLIBATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ enum tagSYSKIND syskind;
  /* 0x0018 */ unsigned short wMajorVerNum;
  /* 0x001a */ unsigned short wMinorVerNum;
  /* 0x001c */ unsigned short wLibFlags;
  /* 0x001e */ char __PADDING__[2];
}; /* size: 0x0020 */

class SafeCastHelper<unsigned long,unsigned __int64,2>
{
}; /* size: 0x0001 */

union WPP_PROJECT_CONTROL_BLOCK
{
  union
  {
    /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK Control;
    /* 0x0000 */ unsigned char ReserveSpace[40];
  }; /* size: 0x0028 */
}; /* size: 0x0028 */

struct ICallFrameWalker
{
}; /* size: 0x0008 */

struct GetTypeValueImpl<long,_GUID *,unsigned long,unsigned long>
{
}; /* size: 0x0001 */

class CBrokeredClipDataObject
{
  union
  {
    /* 0x0000 */ unsigned short s_cfPreferredDropEffect;
    /* 0x0000 */ unsigned short s_cfPerformedDropEffect;
    /* 0x0000 */ unsigned short s_cfLogicalPerformedDropEffect;
    /* 0x0000 */ unsigned short s_cfPasteSucceeded;
    /* 0x0000 */ unsigned short s_cfDropDescription;
  }; /* size: 0x0002 */
  /* 0x0002 */ char Padding_521[14];
  /* 0x0010 */ long m_refs;
  /* 0x0014 */ long Padding_522;
  /* 0x0018 */ void* m_hOwnerToken;
  /* 0x0020 */ unsigned long m_dwSourceProcessId;
  /* 0x0024 */ BOOL m_fOwnerIsPlmManaged;
  /* 0x0025 */ char Padding_523[3];
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IDataObject> m_spDataObject;
}; /* size: 0x0030 */

class wil::details::<lambda_61557cb02a2b9f3812832bd6815870c5>
{
}; /* size: 0x0001 */

struct IMarshal
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

typedef struct _LOADED_IMAGE
{
  /* 0x0000 */ char* ModuleName;
  /* 0x0008 */ void* hFile;
  /* 0x0010 */ unsigned char* MappedAddress;
  /* 0x0018 */ struct _IMAGE_NT_HEADERS64* FileHeader;
  /* 0x0020 */ struct _IMAGE_SECTION_HEADER* LastRvaSection;
  /* 0x0028 */ unsigned long NumberOfSections;
  /* 0x002c */ long Padding_524;
  /* 0x0030 */ struct _IMAGE_SECTION_HEADER* Sections;
  /* 0x0038 */ unsigned long Characteristics;
  /* 0x003c */ unsigned char fSystemImage;
  /* 0x003d */ unsigned char fDOSImage;
  /* 0x003e */ unsigned char fReadOnly;
  /* 0x003f */ unsigned char Version;
  /* 0x0040 */ struct _LIST_ENTRY Links;
  /* 0x0050 */ unsigned long SizeOfImage;
  /* 0x0054 */ long __PADDING__[1];
} LOADED_IMAGE, *PLOADED_IMAGE; /* size: 0x0058 */

struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits
{
}; /* size: 0x0001 */

class AdHocCallFrame<IPersist,<lambda_77a2b2d0129bbc926517a2760e67553c> >
{
  /* 0x0000 */ long Padding_525[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IPersist,IPersist>::GetClassID::__l2::<lambda_77a2b2d0129bbc926517a2760e67553c>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

class SafeIntCompare<unsigned long,unsigned long>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

class wil::com_ptr_t<IInterfaceRelated,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IInterfaceRelated* m_ptr;
}; /* size: 0x0008 */

class wil::details::<lambda_b3e507ddf2cb8acd5eb135418c146420>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<_RTL_CRITICAL_SECTION *,void (__cdecl*)(_RTL_CRITICAL_SECTION *),&LeaveCriticalSection,wistd::integral_constant<unsigned __int64,1>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::System::UserWatcher *,Windows::System::UserAuthenticationStatusChangingEventArgs *>
{
}; /* size: 0x0008 */

struct ImplementationHelpersDetails::IsUuidOfAnyHelper<Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0001 */

struct IPersistStreamInit
{
}; /* size: 0x0008 */

class CExtHashTable
{
}; /* size: 0x0028 */

class CProcessExtensionTbl
{
  /* 0x0000 */ long Padding_526[4];
  /* 0x0010 */ class CExtHashTable _HashTbl;
  /* 0x0038 */ void* heapHandle;
}; /* size: 0x0040 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,__int64>
{
}; /* size: 0x0008 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::HasKey::__l5::<lambda_13b16af24a6654baa37229b7cf33de1f>
{
  /* 0x0000 */ struct HSTRING__*& key;
  /* 0x0008 */ unsigned char*& found;
}; /* size: 0x0010 */

struct APPLICATION_VIEW_DATA
{
  /* 0x0000 */ enum APPLICATION_VIEW_STATE viewState;
  /* 0x0004 */ enum APPLICATION_VIEW_ORIENTATION viewOrientation;
  /* 0x0008 */ enum ADJACENT_DISPLAY_EDGES displayEdges;
  /* 0x000c */ int fIsOnLockScreen;
  /* 0x0010 */ int fIsFullScreenMode;
  /* 0x0014 */ enum USER_INTERACTION_MODE userInteractionMode;
  /* 0x0018 */ enum VIEW_PRESENTATION_MODE presentationMode;
  /* 0x001c */ enum APPLICATION_VIEW_MODE viewMode;
  /* 0x0020 */ enum APPLICATION_VIEW_MODE_FLAGS allowedViewModes;
  /* 0x0024 */ enum WindowTransparencyMode windowTransparencyMode;
  /* 0x0028 */ int canOpenInNewTab;
}; /* size: 0x002c */

struct IMMAPP_APPLICATION_VIEW_DATA
{
  /* 0x0000 */ struct APPLICATION_VIEW_DATA current;
  /* 0x002c */ struct APPLICATION_VIEW_DATA deferred;
}; /* size: 0x0058 */

struct wistd::__unique_ptr_deleter_sfinae<wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >;

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>
{
}; /* size: 0x0001 */

typedef struct __vcrt_va_list_is_reference<unsigned long>
{
} _vcrt_va_list_is_reference<unsigned long>, *P_vcrt_va_list_is_reference<unsigned long>; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<unsigned int> *>
{
}; /* size: 0x0008 */

struct IBlockingLock
{
}; /* size: 0x0008 */

struct std::_Shared_ptr_spin_lock
{
}; /* size: 0x0001 */

struct IXMLDocument
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *,1>
{
}; /* size: 0x0008 */

struct tagMethodInfo
{
  /* 0x0000 */ struct tagFUNCDESC* pFuncDesc;
  /* 0x0008 */ struct ITypeInfo* pTypeInfo;
}; /* size: 0x0010 */

typedef struct _CERT_FORTEZZA_DATA_PROP
{
  /* 0x0000 */ unsigned char SerialNumber[8];
  /* 0x0008 */ int CertIndex;
  /* 0x000c */ unsigned char CertLabel[36];
} CERT_FORTEZZA_DATA_PROP, *PCERT_FORTEZZA_DATA_PROP; /* size: 0x0030 */

struct Windows::Foundation::Collections::is_pointer<int>
{
}; /* size: 0x0001 */

class wistd::__compressed_pair<unsigned short *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<unsigned short [0],wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<unsigned short *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> > __ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::AgileRef>
{
  /* 0x0000 */ class Microsoft::WRL::AgileRef* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IEventHandler<IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _RASTERIZER_STATUS
{
  /* 0x0000 */ short nSize;
  /* 0x0002 */ short wFlags;
  /* 0x0004 */ short nLanguageID;
} RASTERIZER_STATUS, *PRASTERIZER_STATUS; /* size: 0x0006 */

struct IImmersiveApplicationArray
{
}; /* size: 0x0008 */

struct IZoneIdentifier2
{
}; /* size: 0x0008 */

struct IPartitionLookup
{
}; /* size: 0x0008 */

typedef struct _tlgWrapperByRef<16>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const void* const Ptr;
  }; /* size: 0x0008 */
} tlgWrapperByRef<16>, *PtlgWrapperByRef<16>; /* size: 0x0008 */

struct CDdeObject::CPersistStgImpl
{
  /* 0x0000 */ long Padding_527[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<0,void __cdecl(IObjectWithSite *),&wil::details::SetSiteNull,IObjectWithSite *>
{
}; /* size: 0x0001 */

struct wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree>
{
}; /* size: 0x0001 */

struct wistd::function<void __cdecl(void)>::__callable<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> > >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct IMultiQI
{
}; /* size: 0x0008 */

class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ long Padding_528[2];
  /* 0x0008 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0010 */ class CLinkable* m_pLinkable;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *,1>
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::aggregatableAttribute
{
  /* 0x0000 */ enum __vc_attributes::aggregatableAttribute::type_e type;
} _vc_attributes::aggregatableAttribute, *P_vc_attributes::aggregatableAttribute; /* size: 0x0004 */

struct IEnumMoniker
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CProcessExtensionTbl> >;

typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long NumberOfDups;
  /* 0x0008 */ struct _IMAGEHLP_SYMBOL64* Symbol;
  /* 0x0010 */ unsigned long SelectedSymbol;
  /* 0x0014 */ long __PADDING__[1];
} IMAGEHLP_DUPLICATE_SYMBOL64, *PIMAGEHLP_DUPLICATE_SYMBOL64; /* size: 0x0018 */

struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler_impl<unsigned int>
{
}; /* size: 0x0008 */

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION
{
  /* 0x0000 */ unsigned char Next;
  /* 0x0001 */ char Padding_529[3];
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned __int64 Size;
} HEAP_BLOCK_EXTRA_INFORMATION, *PHEAP_BLOCK_EXTRA_INFORMATION; /* size: 0x0010 */

class CTLocalAllocPolicy
{
}; /* size: 0x0001 */

struct IRpcProxyBuffer
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IDropTarget>
{
  /* 0x0000 */ struct IDropTarget* ptr_;
}; /* size: 0x0008 */

class DragDropTelemetry::DragDropSession
{
}; /* size: 0x0140 */

class CDragOperation
{
  /* 0x0000 */ long Padding_530[4];
  /* 0x0010 */ struct IDataObject* _pDataObject;
  /* 0x0018 */ struct tagInterfaceData* _DOBuffer;
  /* 0x0020 */ struct IDropSource* _pDropSource;
  /* 0x0028 */ struct IDropSourceNotify* _pDSNotify;
  /* 0x0030 */ class CDropTargetAdapter* _pDropTargetAdapter;
  /* 0x0038 */ void* m_dropTargetFromWindowProperty;
  /* 0x0040 */ class Microsoft::WRL::ComPtr<IDropTarget> m_nonRPCSSRegisteredDropTarget;
  /* 0x0048 */ void* _hFormats;
  /* 0x0050 */ class CPoint _cpt;
  /* 0x0058 */ unsigned long _dwOKEffects;
  /* 0x005c */ unsigned long _dwEffect;
  /* 0x0060 */ unsigned long* _pdwEffect;
  /* 0x0068 */ int _fEscapePressed;
  /* 0x006c */ long Padding_531;
  /* 0x0070 */ struct HICON__* _curOld;
  /* 0x0078 */ struct HWND__* _hwndLast;
  /* 0x0080 */ unsigned long _grfKeyState;
  /* 0x0084 */ HRESULT _hrDragResult;
  /* 0x0088 */ int _fMouseCaptured;
  /* 0x008c */ long Padding_532;
  /* 0x0090 */ class CDragDefaultCursors* _pcddcDefault;
  /* 0x0098 */ BOOL m_hasHDROPClipboardFormat;
  /* 0x0099 */ char Padding_533[3];
  /* 0x009c */ unsigned long _dwFinalKeyState;
  /* 0x00a0 */ class CPoint _cptFinalCursorPos;
  /* 0x00a8 */ int _fWinRTDrag;
  /* 0x00ac */ long Padding_534;
  /* 0x00b0 */ void* _hDragInProgress;
  /* 0x00b8 */ BOOL _fDropCompleted;
  /* 0x00b9 */ char Padding_535[7];
  /* 0x00c0 */ void* _hDragSourceToken;
  /* 0x00c8 */ int _fSourceIsAppContainer;
  /* 0x00cc */ BOOL _fConcurrentDrag;
  /* 0x00cd */ BOOL _fWinRtExtensionLoadAttempted;
  union
  {
    /* 0x0000 */ BOOL s_fDoDragDropInFlight;
    /* 0x0000 */ long s_wScrollInt;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_536[51];
  /* 0x00d0 */ class Microsoft::WRL::ComPtr<IDragDropExtensionForOLE> _spWinRtExtension;
  /* 0x00d8 */ class Microsoft::WRL::ComPtr<IUnknown> _spWinRtExclusionToken;
  /* 0x00e0 */ class DragDropTelemetry::DragDropSession _telemetrySession;
  /* 0x0220 */ BOOL m_isEdpActive;
  /* 0x0221 */ BOOL m_isTargetWinRt;
  /* 0x0222 */ char Padding_537[6];
  /* 0x0228 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > m_sourceEnterpriseId;
  /* 0x0230 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > m_dataObjectEnterpriseId;
  /* 0x0238 */ BOOL m_dataObjectHasEnterpriseId;
  /* 0x0239 */ BOOL m_backgroundContainerDrag;
}; /* size: 0x0240 */

class wil::details::<lambda_a893c5d9c59f68b6d1db7bea5237305b>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_PROVIDER_FUNCTIONS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_538;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
  /* 0x0018 */ void* pfnAddStore2Chain /* function */;
  /* 0x0020 */ void* pfnAddSgnr2Chain /* function */;
  /* 0x0028 */ void* pfnAddCert2Chain /* function */;
  /* 0x0030 */ void* pfnAddPrivData2Chain /* function */;
  /* 0x0038 */ void* pfnInitialize /* function */;
  /* 0x0040 */ void* pfnObjectTrust /* function */;
  /* 0x0048 */ void* pfnSignatureTrust /* function */;
  /* 0x0050 */ void* pfnCertificateTrust /* function */;
  /* 0x0058 */ void* pfnFinalPolicy /* function */;
  /* 0x0060 */ void* pfnCertCheckPolicy /* function */;
  /* 0x0068 */ void* pfnTestFinalPolicy /* function */;
  /* 0x0070 */ struct _CRYPT_PROVUI_FUNCS* psUIpfns;
  /* 0x0078 */ void* pfnCleanupPolicy /* function */;
} CRYPT_PROVIDER_FUNCTIONS, *PCRYPT_PROVIDER_FUNCTIONS; /* size: 0x0080 */

class Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics>
{
  /* 0x0000 */ struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics* ptr_;
}; /* size: 0x0008 */

class AdditionMethod<long,long>
{
}; /* size: 0x0001 */

struct std::allocator_traits<std::allocator<char32_t> >
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_THREAD_EX_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x000c */ long Padding_539;
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ unsigned long SizeOfContext;
  /* 0x04e4 */ unsigned __int64 StackBase;
  /* 0x04ec */ unsigned __int64 StackEnd;
  /* 0x04f4 */ unsigned __int64 BackingStoreBase;
  /* 0x04fc */ unsigned __int64 BackingStoreEnd;
  /* 0x0504 */ long __PADDING__[3];
} MINIDUMP_THREAD_EX_CALLBACK, *PMINIDUMP_THREAD_EX_CALLBACK; /* size: 0x0510 */

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<HSTRING__ *,unsigned __int64>
{
}; /* size: 0x0008 */

struct IEnumSTATSTG
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IAgileReference>
{
  /* 0x0000 */ struct IAgileReference* ptr_;
}; /* size: 0x0008 */

struct IObjectWithSite
{
}; /* size: 0x0008 */

typedef struct _TraceLoggingMetadata_t
{
  /* 0x0000 */ unsigned int Signature;
  /* 0x0004 */ unsigned short Size;
  /* 0x0006 */ unsigned char Version;
  /* 0x0007 */ unsigned char Flags;
  /* 0x0008 */ unsigned __int64 Magic;
} TraceLoggingMetadata_t, *PTraceLoggingMetadata_t; /* size: 0x0010 */

struct threadmbcinfostruct;

class GuidString
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Length;
    /* 0x0000 */ wchar_t m_string[39];
  }; /* size: 0x004e */
}; /* size: 0x004e */

class CUUIDHashTable
{
}; /* size: 0x0028 */

typedef struct _SHNAMEMAPPINGW
{
  /* 0x0000 */ wchar_t* pszOldPath;
  /* 0x0008 */ wchar_t* pszNewPath;
  /* 0x0010 */ int cchOldPath;
  /* 0x0014 */ int cchNewPath;
} SHNAMEMAPPINGW, *PSHNAMEMAPPINGW; /* size: 0x0018 */

typedef struct _UUID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_540;
  /* 0x0008 */ struct _GUID* Uuid[1];
} UUID_VECTOR, *PUUID_VECTOR; /* size: 0x0010 */

struct Windows::Foundation::IReferenceArray_impl<unsigned int>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAllowAstaToAstaDeadlockRisk> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> const >;

typedef struct _RTL_FEATURE_USAGE_DATA
{
  /* 0x0000 */ unsigned int FeatureId;
  /* 0x0004 */ unsigned short ReportingKind;
  /* 0x0006 */ unsigned short Reserved;
} RTL_FEATURE_USAGE_DATA, *PRTL_FEATURE_USAGE_DATA; /* size: 0x0008 */

class OleClipboardAggregateTelemetry
{
  /* 0x0000 */ const struct _tlgProvider_t* _provider;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<unsigned int,IWeakReference *>
{
}; /* size: 0x0008 */

class SafeIntCompare<unsigned long,long>
{
}; /* size: 0x0001 */

struct Guid
{
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IKeyValuePair<__int64,double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<__int64>
{
}; /* size: 0x0008 */

class ComVerifierSettings
{
  union
  {
    /* 0x0000 */ BOOL s_fPgAllocUseSystemHeap;
    /* 0x0000 */ BOOL s_fPgAllocHeapIsPrivate;
    /* 0x0000 */ unsigned long s_dwAggressiveMTATesting;
    /* 0x0000 */ class ComVerifierSettings s_singleton;
    /* 0x0000 */ struct ComVerifierSettings::ComVerifierSettingsState* _pSettingsState;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class AdHocInterceptor<IElementBehavior>
{
  /* 0x0000 */ long Padding_541[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

class Windows::Storage::Streams::RandomAccessStreamReference;

typedef struct _EXCEPTION_DEBUG_INFO
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ unsigned long dwFirstChance;
  /* 0x009c */ long __PADDING__[1];
} EXCEPTION_DEBUG_INFO, *PEXCEPTION_DEBUG_INFO; /* size: 0x00a0 */

typedef struct _CREATE_THREAD_DEBUG_INFO
{
  /* 0x0000 */ void* hThread;
  /* 0x0008 */ void* lpThreadLocalBase;
  /* 0x0010 */ void* lpStartAddress /* function */;
} CREATE_THREAD_DEBUG_INFO, *PCREATE_THREAD_DEBUG_INFO; /* size: 0x0018 */

typedef struct _CREATE_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* hProcess;
  /* 0x0010 */ void* hThread;
  /* 0x0018 */ void* lpBaseOfImage;
  /* 0x0020 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0024 */ unsigned long nDebugInfoSize;
  /* 0x0028 */ void* lpThreadLocalBase;
  /* 0x0030 */ void* lpStartAddress /* function */;
  /* 0x0038 */ void* lpImageName;
  /* 0x0040 */ unsigned short fUnicode;
  /* 0x0042 */ char __PADDING__[6];
} CREATE_PROCESS_DEBUG_INFO, *PCREATE_PROCESS_DEBUG_INFO; /* size: 0x0048 */

typedef struct _EXIT_THREAD_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_THREAD_DEBUG_INFO, *PEXIT_THREAD_DEBUG_INFO; /* size: 0x0004 */

typedef struct _EXIT_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_PROCESS_DEBUG_INFO, *PEXIT_PROCESS_DEBUG_INFO; /* size: 0x0004 */

typedef struct _LOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* lpBaseOfDll;
  /* 0x0010 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0014 */ unsigned long nDebugInfoSize;
  /* 0x0018 */ void* lpImageName;
  /* 0x0020 */ unsigned short fUnicode;
  /* 0x0022 */ char __PADDING__[6];
} LOAD_DLL_DEBUG_INFO, *PLOAD_DLL_DEBUG_INFO; /* size: 0x0028 */

typedef struct _UNLOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* lpBaseOfDll;
} UNLOAD_DLL_DEBUG_INFO, *PUNLOAD_DLL_DEBUG_INFO; /* size: 0x0008 */

typedef struct _RIP_INFO
{
  /* 0x0000 */ unsigned long dwError;
  /* 0x0004 */ unsigned long dwType;
} RIP_INFO, *PRIP_INFO; /* size: 0x0008 */

typedef struct _DEBUG_EVENT
{
  /* 0x0000 */ unsigned long dwDebugEventCode;
  /* 0x0004 */ unsigned long dwProcessId;
  /* 0x0008 */ unsigned long dwThreadId;
  /* 0x000c */ long Padding_542;
  union
  {
    union
    {
      /* 0x0010 */ struct _EXCEPTION_DEBUG_INFO Exception;
      /* 0x0010 */ struct _CREATE_THREAD_DEBUG_INFO CreateThread;
      /* 0x0010 */ struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
      /* 0x0010 */ struct _EXIT_THREAD_DEBUG_INFO ExitThread;
      /* 0x0010 */ struct _EXIT_PROCESS_DEBUG_INFO ExitProcess;
      /* 0x0010 */ struct _LOAD_DLL_DEBUG_INFO LoadDll;
      /* 0x0010 */ struct _UNLOAD_DLL_DEBUG_INFO UnloadDll;
      /* 0x0010 */ struct _OUTPUT_DEBUG_STRING_INFO DebugString;
      /* 0x0010 */ struct _RIP_INFO RipInfo;
    }; /* size: 0x00a0 */
  } /* size: 0x00a0 */ u;
} DEBUG_EVENT, *PDEBUG_EVENT; /* size: 0x00b0 */

typedef struct _INTENT_TO_SEAL_ATTRIBUTE
{
  /* 0x0000 */ unsigned long version;
  /* 0x0004 */ unsigned char seal;
  /* 0x0005 */ char __PADDING__[3];
} INTENT_TO_SEAL_ATTRIBUTE, *PINTENT_TO_SEAL_ATTRIBUTE; /* size: 0x0008 */

class CDefLink::CAdvSinkImpl
{
}; /* size: 0x0008 */

class CDefLink
{
  /* 0x0000 */ long Padding_543[20];
  /* 0x0050 */ class CDefLink::CPrivUnknown m_Unknown;
  /* 0x0058 */ class CDefLink::CAdvSinkImpl m_AdviseSink;
  /* 0x0060 */ unsigned long m_flags;
  /* 0x0064 */ unsigned long m_dwObjFlags;
  /* 0x0068 */ struct IDataObject* m_pDataDelegate;
  /* 0x0070 */ struct IOleObject* m_pOleDelegate;
  /* 0x0078 */ struct IRunnableObject* m_pRODelegate;
  /* 0x0080 */ struct IOleItemContainer* m_pOleItemContainerDelegate;
  /* 0x0088 */ HRESULT m_ContentSRVMSHResult;
  /* 0x008c */ unsigned long m_ContentSRVMSBits;
  /* 0x0090 */ HRESULT m_ContentREGMSHResult;
  /* 0x0094 */ unsigned long m_ContentREGMSBits;
  /* 0x0098 */ unsigned long m_cRefsOnLink;
  /* 0x009c */ long Padding_544;
  /* 0x00a0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00a8 */ struct IMoniker* m_pMonikerAbs;
  /* 0x00b0 */ struct IMoniker* m_pMonikerRel;
  /* 0x00b8 */ struct IUnknown* m_pUnkDelegate;
  /* 0x00c0 */ unsigned long m_dwUpdateOpt;
  /* 0x00c4 */ struct _GUID m_clsid;
  /* 0x00d4 */ long Padding_545;
  /* 0x00d8 */ struct IStorage* m_pStg;
  /* 0x00e0 */ class COleCache* m_pCOleCache;
  /* 0x00e8 */ class COAHolder* m_pCOAHolder;
  /* 0x00f0 */ unsigned long m_dwConnOle;
  /* 0x00f4 */ long Padding_546;
  /* 0x00f8 */ class CDataAdviseCache* m_pDataAdvCache;
  /* 0x0100 */ struct IOleClientSite* m_pAppClientSite;
  /* 0x0108 */ unsigned long m_dwConnTime;
  /* 0x010c */ struct _FILETIME m_ltChangeOfUpdate;
  /* 0x0114 */ struct _FILETIME m_ltKnownUpToDate;
  /* 0x011c */ struct _FILETIME m_rtUpdate;
}; /* size: 0x0128 */

class wil::details::<lambda_26b4094157b33ec5a45622fcf1ed8ee7>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IKeyValuePair<__int64,__int64>
{
}; /* size: 0x0008 */

struct tagTYPEATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ unsigned long dwReserved;
  /* 0x0018 */ long memidConstructor;
  /* 0x001c */ long memidDestructor;
  /* 0x0020 */ wchar_t* lpstrSchema;
  /* 0x0028 */ unsigned long cbSizeInstance;
  /* 0x002c */ enum tagTYPEKIND typekind;
  /* 0x0030 */ unsigned short cFuncs;
  /* 0x0032 */ unsigned short cVars;
  /* 0x0034 */ unsigned short cImplTypes;
  /* 0x0036 */ unsigned short cbSizeVft;
  /* 0x0038 */ unsigned short cbAlignment;
  /* 0x003a */ unsigned short wTypeFlags;
  /* 0x003c */ unsigned short wMajorVerNum;
  /* 0x003e */ unsigned short wMinorVerNum;
  /* 0x0040 */ struct tagTYPEDESC tdescAlias;
  /* 0x0050 */ struct tagIDLDESC idldescType;
}; /* size: 0x0060 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<unsigned int>
{
}; /* size: 0x0008 */

class CCompositeMoniker
{
  /* 0x0000 */ long Padding_547[10];
  /* 0x0028 */ class CTrackingCompositeMoniker _tcm;
  /* 0x0038 */ struct IMoniker* m_pmkLeft;
  /* 0x0040 */ struct IMoniker* m_pmkRight;
  /* 0x0048 */ int m_fReduced;
  /* 0x004c */ int m_fReduceForced;
}; /* size: 0x0050 */

struct Windows::Foundation::Collections::IMapView_impl<_GUID,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<_TOKEN_DEFAULT_DACL *,0,0>
{
  /* 0x0000 */ struct _TOKEN_DEFAULT_DACL* __value_;
}; /* size: 0x0008 */

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0008 */ struct _WIN_CERTIFICATE* lpCertificate;
} WIN_SPUB_TRUSTED_PUBLISHER_DATA, *PWIN_SPUB_TRUSTED_PUBLISHER_DATA; /* size: 0x0010 */

typedef struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM
{
  union
  {
    union
    {
      /* 0x0000 */ struct SERVICE_TRIGGER_CUSTOM_STATE_ID CustomStateId;
      struct
      {
        /* 0x0000 */ unsigned long DataOffset;
        /* 0x0004 */ unsigned char Data[1];
        /* 0x0005 */ char __PADDING__[3];
      } /* size: 0x0008 */ s;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM, *PSERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM; /* size: 0x0008 */

struct INTERFACE_HELPER_CLSID
{
  /* 0x0000 */ long Padding_548[12];
  /* 0x0030 */ struct _GUID m_clsid;
  /* 0x0040 */ int m_fDisableTypeLib;
  /* 0x0044 */ int m_fDisableAll;
  /* 0x0048 */ int m_fFoundHelper;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

class CReadInterfaceDataWithSourceAttributesMarshalingStream
{
  /* 0x0000 */ long Padding_549[12];
  /* 0x0030 */ unsigned __int64 _cAttributesProvided;
  /* 0x0038 */ const struct MarshalingContextAttributeValue* _pAttributesProvided;
}; /* size: 0x0040 */

struct tagCOLORCORRECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPalette;
  /* 0x000c */ unsigned long nFirstEntry;
  /* 0x0010 */ unsigned long nPalEntries;
  /* 0x0014 */ unsigned long nReserved;
}; /* size: 0x0018 */

typedef struct _SYMBOL_INFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_550;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ char Name[1];
  /* 0x0055 */ char __PADDING__[3];
} SYMBOL_INFO, *PSYMBOL_INFO; /* size: 0x0058 */

typedef struct _SYMBOL_INFO_PACKAGE
{
  /* 0x0000 */ struct _SYMBOL_INFO si;
  /* 0x0058 */ char name[2001];
  /* 0x0829 */ char __PADDING__[7];
} SYMBOL_INFO_PACKAGE, *PSYMBOL_INFO_PACKAGE; /* size: 0x0830 */

class CWriteInterfaceDataMarshalingStream
{
}; /* size: 0x0030 */

struct Windows::Foundation::Collections::IIterator<unsigned char>
{
}; /* size: 0x0008 */

typedef struct _WOW64_CPUAREA_INFO
{
  union
  {
    /* 0x0000 */ void* Context;
    /* 0x0000 */ struct _X86_NT5_CONTEXT* ContextX86;
    /* 0x0000 */ struct _AMD64_CONTEXT* ContextAmd64;
    /* 0x0000 */ struct _ARM_CONTEXT* ContextArm;
    /* 0x0000 */ struct _ARM64_CONTEXT* ContextArm64;
  }; /* size: 0x0008 */
  /* 0x0008 */ void** PerThreadDataLocation;
  /* 0x0010 */ unsigned long* ContextFlagsLocation;
  /* 0x0018 */ unsigned long* CpuAreaFlagsLocation;
  /* 0x0020 */ unsigned long ArchContextFlag;
  /* 0x0024 */ unsigned short Machine;
  /* 0x0026 */ unsigned short Pad1;
  /* 0x0028 */ volatile long* KernelWriteToExecutableSignaledLocation;
} WOW64_CPUAREA_INFO, *PWOW64_CPUAREA_INFO; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperation<IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _PLUGPLAY_EVENT_BLOCK
{
  /* 0x0000 */ struct _GUID EventGuid;
  /* 0x0010 */ enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ long Padding_551;
  /* 0x0018 */ unsigned long* Result;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long TotalSize;
  /* 0x0028 */ void* DeviceObject;
  union
  {
    union
    {
      struct
      {
        /* 0x0030 */ struct _GUID ClassGuid;
        /* 0x0040 */ wchar_t SymbolicLinkName[1];
        /* 0x0042 */ char __PADDING__[2];
      } /* size: 0x0014 */ DeviceClass;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ TargetDevice;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ InstallDevice;
      struct
      {
        /* 0x0030 */ void* NotificationStructure;
        /* 0x0038 */ wchar_t DeviceId[1];
        /* 0x003a */ char __PADDING__[6];
      } /* size: 0x0010 */ CustomNotification;
      struct
      {
        /* 0x0030 */ void* Notification;
      } /* size: 0x0008 */ ProfileNotification;
      struct
      {
        /* 0x0030 */ unsigned long NotificationCode;
        /* 0x0034 */ unsigned long NotificationData;
      } /* size: 0x0008 */ PowerNotification;
      struct
      {
        /* 0x0030 */ enum _PNP_VETO_TYPE VetoType;
        /* 0x0034 */ wchar_t DeviceIdVetoNameBuffer[1];
        /* 0x0036 */ char __PADDING__[2];
      } /* size: 0x0008 */ VetoNotification;
      struct
      {
        /* 0x0030 */ struct _GUID BlockedDriverGuid;
      } /* size: 0x0010 */ BlockedDriverNotification;
      struct
      {
        /* 0x0030 */ wchar_t ParentId[1];
      } /* size: 0x0002 */ InvalidIDNotification;
      struct
      {
        /* 0x0030 */ struct _GUID PowerSettingGuid;
        /* 0x0040 */ unsigned long Flags;
        /* 0x0044 */ unsigned long SessionId;
        /* 0x0048 */ unsigned long DataLength;
        /* 0x004c */ unsigned char Data[1];
        /* 0x004d */ char __PADDING__[3];
      } /* size: 0x0020 */ PowerSettingNotification;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ PropertyChangeNotification;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ DeviceInstanceNotification;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
} PLUGPLAY_EVENT_BLOCK, *PPLUGPLAY_EVENT_BLOCK; /* size: 0x0050 */

struct Windows::Foundation::Collections::IMap<__int64,HSTRING__ *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IObjectWithSite>;

typedef struct _SRCCODEINFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_552;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned __int64 ModBase;
  /* 0x0018 */ wchar_t Obj[261];
  /* 0x0222 */ wchar_t FileName[261];
  /* 0x042c */ unsigned long LineNumber;
  /* 0x0430 */ unsigned __int64 Address;
} SRCCODEINFOW, *PSRCCODEINFOW; /* size: 0x0438 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApplicationAssociationRegistration> const >;

struct HBITMAP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CHashTable
{
  /* 0x0000 */ long Padding_553[2];
  /* 0x0008 */ class COleStaticMutexSem* _pExLock;
  /* 0x0010 */ class CRWLock* _pRWLock;
  /* 0x0018 */ struct SHashChain* _buckets;
  /* 0x0020 */ unsigned long _cCurEntries;
  /* 0x0024 */ unsigned long _cMaxEntries;
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,short>
{
}; /* size: 0x0008 */

class OleClipboardTracing::Instance::__l2::<lambda_9f3a313a80b1998716fcb00bc3974d23>
{
}; /* size: 0x0001 */

struct STARTING_LCN_INPUT_BUFFER_EX
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0008 */

struct HENHMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>;

class wil::details::<lambda_d95aece34370f6ac5bb9524060d3f31e>
{
}; /* size: 0x0001 */

struct wistd::__compressed_pair_elem<wil::hlocal_secure_deleter,1,1>
{
}; /* size: 0x0001 */

struct MFT_ENUM_DATA_V0
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
}; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,double>
{
}; /* size: 0x0008 */

typedef struct _CAT_MEMBERINFO
{
  /* 0x0000 */ wchar_t* pwszSubjGuid;
  /* 0x0008 */ unsigned long dwCertVersion;
  /* 0x000c */ long __PADDING__[1];
} CAT_MEMBERINFO, *PCAT_MEMBERINFO; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVector<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

class ComTrace::Instance::__l2::<lambda_f8a79a44bba2ee3470b25df359f31864>
{
}; /* size: 0x0001 */

class Windows::System::UserWatcher;

struct wil::details::close_invoke_helper<1,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,EDP_CONTEXT *>
{
}; /* size: 0x0001 */

struct HREG
{
  /* 0x0000 */ void* h;
}; /* size: 0x0008 */

typedef struct _WIN_TRUST_SUBJECT_FILE
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ const wchar_t* lpPath;
} WIN_TRUST_SUBJECT_FILE, *PWIN_TRUST_SUBJECT_FILE; /* size: 0x0010 */

struct tagTPMPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct tagRECT rcExclude;
}; /* size: 0x0014 */

typedef struct _BCRYPT_PSS_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0008 */ unsigned long cbSalt;
  /* 0x000c */ long __PADDING__[1];
} BCRYPT_PSS_PADDING_INFO, *PBCRYPT_PSS_PADDING_INFO; /* size: 0x0010 */

typedef struct _SPC_STATEMENT_TYPE
{
  /* 0x0000 */ unsigned long cKeyPurposeId;
  /* 0x0004 */ long Padding_554;
  /* 0x0008 */ char** rgpszKeyPurposeId;
} SPC_STATEMENT_TYPE, *PSPC_STATEMENT_TYPE; /* size: 0x0010 */

class Interceptor
{
  /* 0x0000 */ long Padding_555[12];
  /* 0x0030 */ struct ICallFrameEvents* m_pCallSink;
  /* 0x0038 */ void* const* m_pvtbl /* function */;
  /* 0x0040 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0048 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0050 */ const struct tagProxyFileInfo** m_pProxyFileList;
  /* 0x0058 */ const char* m_szInterfaceName;
  /* 0x0060 */ int m_fMdOwnsHeader;
  /* 0x0064 */ int m_fUsingTypelib;
  /* 0x0068 */ class wil::com_ptr_t<NdrTypeInfo,wil::err_returncode_policy> m_ndrTypeInfo;
  /* 0x0070 */ unsigned int m_cMethodsBase;
  /* 0x0074 */ long Padding_556;
  /* 0x0078 */ struct ICallInterceptor* m_pBaseInterceptor;
  /* 0x0080 */ struct IUnknown* m_punkBaseInterceptor;
  /* 0x0088 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x0090 */ struct IUnknown* m_punkOuter;
  /* 0x0098 */ long m_refs;
}; /* size: 0x00a0 */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_557;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ char FileName[260];
  /* 0x011c */ unsigned char Reparse;
  /* 0x011d */ char Padding_558[3];
  /* 0x0120 */ void* hFile;
  /* 0x0128 */ unsigned long Flags;
  /* 0x012c */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOAD64, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD64; /* size: 0x0130 */

struct Windows::Foundation::Collections::IMap_impl<__int64,__int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<IInspectable *,1>
{
}; /* size: 0x0008 */

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<4>
{
} ENUM_FLAG_INTEGER_FOR_SIZE<4>, *PENUM_FLAG_INTEGER_FOR_SIZE<4>; /* size: 0x0001 */

struct IAgileReference
{
}; /* size: 0x0008 */

class wil::details::default_query_policy
{
}; /* size: 0x0001 */

typedef struct _lldiv_t
{
  /* 0x0000 */ __int64 quot;
  /* 0x0008 */ __int64 rem;
} lldiv_t, *Plldiv_t; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>
{
}; /* size: 0x0008 */

struct IOleCache
{
}; /* size: 0x0008 */

class wil::unique_com_call<IObjectWithSite,void __cdecl(IObjectWithSite *),&wil::details::SetSiteNull>
{
  /* 0x0000 */ struct IObjectWithSite* m_ptr;
}; /* size: 0x0008 */

struct ITypeLibVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeInfoCount /* function */;
  /* 0x0020 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetTypeInfoType /* function */;
  /* 0x0030 */ void* GetTypeInfoOfGuid /* function */;
  /* 0x0038 */ void* GetLibAttr /* function */;
  /* 0x0040 */ void* GetTypeComp /* function */;
  /* 0x0048 */ void* GetDocumentation /* function */;
  /* 0x0050 */ void* IsName /* function */;
  /* 0x0058 */ void* FindName /* function */;
  /* 0x0060 */ void* ReleaseTLibAttr /* function */;
}; /* size: 0x0068 */

struct tagEXCEPINFO
{
  /* 0x0000 */ unsigned short wCode;
  /* 0x0002 */ unsigned short wReserved;
  /* 0x0004 */ long Padding_559;
  /* 0x0008 */ wchar_t* bstrSource;
  /* 0x0010 */ wchar_t* bstrDescription;
  /* 0x0018 */ wchar_t* bstrHelpFile;
  /* 0x0020 */ unsigned long dwHelpContext;
  /* 0x0024 */ long Padding_560;
  /* 0x0028 */ void* pvReserved;
  /* 0x0030 */ void* pfnDeferredFillIn /* function */;
  /* 0x0038 */ long scode;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>;

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<unsigned int,HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::System::UserWatcher *,Windows::System::IUserWatcher *>,Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>
{
}; /* size: 0x0008 */

class std::overflow_error
{
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *>
{
}; /* size: 0x0008 */

typedef union _POWER_STATE
{
  union
  {
    /* 0x0000 */ enum _SYSTEM_POWER_STATE SystemState;
    /* 0x0000 */ enum _DEVICE_POWER_STATE DeviceState;
  }; /* size: 0x0004 */
} POWER_STATE, *PPOWER_STATE; /* size: 0x0004 */

typedef struct _SLIST_ENTRY
{
  /* 0x0000 */ struct _SLIST_ENTRY* Next;
  /* 0x0008 */ long __PADDING__[2];
} SLIST_ENTRY, *PSLIST_ENTRY; /* size: 0x0010 */

class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
}; /* size: 0x0028 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<5,0,1,2,3,4> >
{
} tlgDataDescInit<_tlgIndexSequence<5,0,1,2,3,4> >, *PtlgDataDescInit<_tlgIndexSequence<5,0,1,2,3,4> >; /* size: 0x0001 */

struct tagLAYERPLANEDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerPlane;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long crTransparent;
}; /* size: 0x0020 */

typedef struct _TXFS_MODIFY_RM
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long LogContainerCountMax;
  /* 0x0008 */ unsigned long LogContainerCountMin;
  /* 0x000c */ unsigned long LogContainerCount;
  /* 0x0010 */ unsigned long LogGrowthIncrement;
  /* 0x0014 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0018 */ unsigned __int64 Reserved;
  /* 0x0020 */ unsigned short LoggingMode;
  /* 0x0022 */ char __PADDING__[6];
} TXFS_MODIFY_RM, *PTXFS_MODIFY_RM; /* size: 0x0028 */

typedef struct _SEALING_SIGNATURE_ATTRIBUTE
{
  /* 0x0000 */ unsigned long version;
  /* 0x0004 */ unsigned long signerIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER signatureAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB encryptedDigest;
} SEALING_SIGNATURE_ATTRIBUTE, *PSEALING_SIGNATURE_ATTRIBUTE; /* size: 0x0030 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IRandomAccessStreamReference *,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Point>
{
}; /* size: 0x0001 */

struct IFont
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > const >;

typedef struct _tlgCharTraits<char>
{
} tlgCharTraits<char>, *PtlgCharTraits<char>; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::KnownFoldersAccessStatus>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<short>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,IWeakReference *>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<_RTL_SRWLOCK *,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,wistd::integral_constant<unsigned __int64,2>,_RTL_SRWLOCK *,_RTL_SRWLOCK *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct CDdeObject::CRpcStubBufferImpl
{
  /* 0x0000 */ long Padding_561[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

typedef struct _JOBOBJECT_WAKE_INFORMATION_V1
{
  /* 0x0000 */ unsigned __int64 NotificationChannel;
  /* 0x0008 */ unsigned __int64 WakeCounters[4];
} JOBOBJECT_WAKE_INFORMATION_V1, *PJOBOBJECT_WAKE_INFORMATION_V1; /* size: 0x0028 */

struct IMoniker
{
}; /* size: 0x0008 */

typedef struct _CRYPT_IMAGE_REF
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long __PADDING__[1];
} CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF; /* size: 0x0010 */

struct wil::details::resource_policy<_RTL_CRITICAL_SECTION *,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,wistd::integral_constant<unsigned __int64,2>,_RTL_CRITICAL_SECTION *,_RTL_CRITICAL_SECTION *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>
{
}; /* size: 0x0001 */

typedef struct _CMC_TAGGED_REQUEST
{
  /* 0x0000 */ unsigned long dwTaggedRequestChoice;
  /* 0x0004 */ long Padding_562;
  /* 0x0008 */ struct _CMC_TAGGED_CERT_REQUEST* pTaggedCertRequest;
} CMC_TAGGED_REQUEST, *PCMC_TAGGED_REQUEST; /* size: 0x0010 */

typedef struct _MINIDUMP_MISC_INFO_2
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
} MINIDUMP_MISC_INFO_2, *PMINIDUMP_MISC_INFO_2; /* size: 0x002c */

struct Windows::Foundation::Collections::IMapView<_GUID,IInspectable *>
{
}; /* size: 0x0008 */

struct _WNF_USER_SUBSCRIPTION;

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<float>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::Details::SyncLockShared
{
  /* 0x0000 */ struct _RTL_SRWLOCK* sync_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> const >;

struct IPropertyPage2
{
}; /* size: 0x0008 */

typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long AttributeCount;
  union
  {
    /* 0x0008 */ struct _CLAIM_SECURITY_ATTRIBUTE_V1* pAttributeV1;
  } /* size: 0x0008 */ Attribute;
} CLAIM_SECURITY_ATTRIBUTES_INFORMATION, *PCLAIM_SECURITY_ATTRIBUTES_INFORMATION; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FolderInformation *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0008 */

typedef struct _TypeDescriptor
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char* name /* zero-length array */;
} TypeDescriptor, *PTypeDescriptor; /* size: 0x0010 */

class wil::details::<lambda_3f5f22ac39aadedce9d9ebf0feddf7cf>
{
}; /* size: 0x0001 */

typedef struct _s__CatchableTypeArray
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType** arrayOfCatchableTypes /* zero-length array */;
} s__CatchableTypeArray, *Ps__CatchableTypeArray; /* size: 0x0004 */

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA
{
  /* 0x0000 */ unsigned long DeviceInstanceLength;
  /* 0x0004 */ long Padding_563;
  /* 0x0008 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA, *PPLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA; /* size: 0x0010 */

typedef struct _STARTUPINFOEXW
{
  /* 0x0000 */ struct _STARTUPINFOW StartupInfo;
  /* 0x0068 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXW, *PSTARTUPINFOEXW; /* size: 0x0070 */

class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,70368744177664,5,33554432,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,0,0>
{
}; /* size: 0x0001 */

typedef struct _PROCESS_INFORMATION
{
  /* 0x0000 */ void* hProcess;
  /* 0x0008 */ void* hThread;
  /* 0x0010 */ unsigned long dwProcessId;
  /* 0x0014 */ unsigned long dwThreadId;
} PROCESS_INFORMATION, *PPROCESS_INFORMATION; /* size: 0x0018 */

typedef union _ARM64_FPCR_REG
{
  union
  {
    /* 0x0000 */ unsigned long Value;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long res0_1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long IOE : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long DZE : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long OFE : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long UFE : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long IXE : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long res0_2 : 2; /* bit position: 13 */
      /* 0x0000 */ unsigned long IDE : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long Len : 3; /* bit position: 16 */
      /* 0x0000 */ unsigned long FZ16 : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long Stride : 2; /* bit position: 20 */
      /* 0x0000 */ unsigned long RMode : 2; /* bit position: 22 */
      /* 0x0000 */ unsigned long FZ : 1; /* bit position: 24 */
      /* 0x0000 */ unsigned long DN : 1; /* bit position: 25 */
      /* 0x0000 */ unsigned long AHP : 1; /* bit position: 26 */
      /* 0x0000 */ unsigned long res0_3 : 5; /* bit position: 27 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} ARM64_FPCR_REG, *PARM64_FPCR_REG; /* size: 0x0004 */

typedef struct _SYSTEM_LEAP_SECOND_INFORMATION
{
  /* 0x0000 */ unsigned char Enabled;
  /* 0x0001 */ char Padding_564[3];
  /* 0x0004 */ unsigned long Flags;
} SYSTEM_LEAP_SECOND_INFORMATION, *PSYSTEM_LEAP_SECOND_INFORMATION; /* size: 0x0008 */

struct MAP_SHARED<MAP_KEY_GUID,NdrTypeInfo *>
{
}; /* size: 0x00b8 */

typedef struct _SERVICE_DESCRIPTIONW
{
  /* 0x0000 */ wchar_t* lpDescription;
} SERVICE_DESCRIPTIONW, *PSERVICE_DESCRIPTIONW; /* size: 0x0008 */

typedef struct _LOCALMANAGEDAPPLICATION
{
  /* 0x0000 */ wchar_t* pszDeploymentName;
  /* 0x0008 */ wchar_t* pszPolicyName;
  /* 0x0010 */ wchar_t* pszProductId;
  /* 0x0018 */ unsigned long dwState;
  /* 0x001c */ long __PADDING__[1];
} LOCALMANAGEDAPPLICATION, *PLOCALMANAGEDAPPLICATION; /* size: 0x0020 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Point,1>
{
}; /* size: 0x0008 */

typedef struct _SPC_FINANCIAL_CRITERIA
{
  /* 0x0000 */ int fFinancialInfoAvailable;
  /* 0x0004 */ int fMeetsCriteria;
} SPC_FINANCIAL_CRITERIA, *PSPC_FINANCIAL_CRITERIA; /* size: 0x0008 */

typedef struct _MINIDUMP_THREAD_INFO
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int DumpFlags;
  /* 0x0008 */ unsigned int DumpError;
  /* 0x000c */ unsigned int ExitStatus;
  /* 0x0010 */ unsigned __int64 CreateTime;
  /* 0x0018 */ unsigned __int64 ExitTime;
  /* 0x0020 */ unsigned __int64 KernelTime;
  /* 0x0028 */ unsigned __int64 UserTime;
  /* 0x0030 */ unsigned __int64 StartAddress;
  /* 0x0038 */ unsigned __int64 Affinity;
} MINIDUMP_THREAD_INFO, *PMINIDUMP_THREAD_INFO; /* size: 0x0040 */

class wil::details::lambda_call<<lambda_fc60b093486e22f751d51f4c0f5d35fc> >
{
  /* 0x0000 */ class TryGetTypeInfoFromIIDViaRegistry::__l112::<lambda_fc60b093486e22f751d51f4c0f5d35fc> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>,1>
{
}; /* size: 0x0008 */

class wistd::__function::__func<<lambda_e06473e64d77ff850420a9b624ffc716>,void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>
{
  /* 0x0000 */ long Padding_565[2];
  /* 0x0008 */ class wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_e06473e64d77ff850420a9b624ffc716> __f_;
}; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<IMoniker>
{
  /* 0x0000 */ struct IMoniker* ptr_;
}; /* size: 0x0008 */

typedef struct _DUPLICATE_EXTENTS_DATA_EX
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ void* FileHandle;
  /* 0x0010 */ union _LARGE_INTEGER SourceFileOffset;
  /* 0x0018 */ union _LARGE_INTEGER TargetFileOffset;
  /* 0x0020 */ union _LARGE_INTEGER ByteCount;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} DUPLICATE_EXTENTS_DATA_EX, *PDUPLICATE_EXTENTS_DATA_EX; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::BasicProperties *,Windows::Storage::FileProperties::IBasicProperties *> >
{
}; /* size: 0x0008 */

class GetCastMethod<unsigned long,int>
{
}; /* size: 0x0001 */

struct wistd::unique_ptr<_KEY_VALUE_FULL_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >::__nat;

struct Windows::Foundation::Collections::IIterable<double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Uri *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>
{
}; /* size: 0x0008 */

struct std::_One_then_variadic_args_t
{
}; /* size: 0x0001 */

struct tagEMRSTRETCHBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

typedef struct _MINIDUMP_TOKEN_INFO_HEADER
{
  /* 0x0000 */ unsigned long TokenSize;
  /* 0x0004 */ unsigned long TokenId;
  /* 0x0008 */ unsigned __int64 TokenHandle;
} MINIDUMP_TOKEN_INFO_HEADER, *PMINIDUMP_TOKEN_INFO_HEADER; /* size: 0x0010 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_e225fcb61db02045a776fc8c7ed2b6cf> >
{
  /* 0x0000 */ long Padding_566[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::UIDeactivate::__l2::<lambda_e225fcb61db02045a776fc8c7ed2b6cf>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class CObjServer;

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* Previous;
  /* 0x0008 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} RTL_ACTIVATION_CONTEXT_STACK_FRAME, *PRTL_ACTIVATION_CONTEXT_STACK_FRAME; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropContainerProxy> const >;

struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>;

struct wistd::__compressed_pair_elem<wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree>,1,1>
{
}; /* size: 0x0001 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _NT_READ_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _NT_READ_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum _NT_READ_FLAGS>; /* size: 0x0001 */

typedef struct _CRYPT_PROVUI_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwFinalError;
  /* 0x0008 */ wchar_t* pYesButtonText;
  /* 0x0010 */ wchar_t* pNoButtonText;
  /* 0x0018 */ wchar_t* pMoreInfoButtonText;
  /* 0x0020 */ wchar_t* pAdvancedLinkText;
  /* 0x0028 */ wchar_t* pCopyActionText;
  /* 0x0030 */ wchar_t* pCopyActionTextNoTS;
  /* 0x0038 */ wchar_t* pCopyActionTextNotSigned;
} CRYPT_PROVUI_DATA, *PCRYPT_PROVUI_DATA; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBroker> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClipboardBroker>* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncActionProgressHandler_impl<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<_GUID,HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalUserTime;
  /* 0x0008 */ union _LARGE_INTEGER TotalKernelTime;
  /* 0x0010 */ union _LARGE_INTEGER ThisPeriodTotalUserTime;
  /* 0x0018 */ union _LARGE_INTEGER ThisPeriodTotalKernelTime;
  /* 0x0020 */ unsigned long TotalPageFaultCount;
  /* 0x0024 */ unsigned long TotalProcesses;
  /* 0x0028 */ unsigned long ActiveProcesses;
  /* 0x002c */ unsigned long TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION; /* size: 0x0030 */

typedef struct _IO_COUNTERS
{
  /* 0x0000 */ unsigned __int64 ReadOperationCount;
  /* 0x0008 */ unsigned __int64 WriteOperationCount;
  /* 0x0010 */ unsigned __int64 OtherOperationCount;
  /* 0x0018 */ unsigned __int64 ReadTransferCount;
  /* 0x0020 */ unsigned __int64 WriteTransferCount;
  /* 0x0028 */ unsigned __int64 OtherTransferCount;
} IO_COUNTERS, *PIO_COUNTERS; /* size: 0x0030 */

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION; /* size: 0x0060 */

class CActivationFilterContext
{
  /* 0x0000 */ int m_dwPreviousActivationType;
}; /* size: 0x0004 */

typedef struct _CRYPT_PROVIDER_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_567;
  /* 0x0008 */ struct _WINTRUST_DATA* pWintrustData;
  /* 0x0010 */ int fOpenedFile;
  /* 0x0014 */ long Padding_568;
  /* 0x0018 */ struct HWND__* hWndParent;
  /* 0x0020 */ struct _GUID* pgActionID;
  /* 0x0028 */ unsigned __int64 hProv;
  /* 0x0030 */ unsigned long dwError;
  /* 0x0034 */ unsigned long dwRegSecuritySettings;
  /* 0x0038 */ unsigned long dwRegPolicySettings;
  /* 0x003c */ long Padding_569;
  /* 0x0040 */ struct _CRYPT_PROVIDER_FUNCTIONS* psPfns;
  /* 0x0048 */ unsigned long cdwTrustStepErrors;
  /* 0x004c */ long Padding_570;
  /* 0x0050 */ unsigned long* padwTrustStepErrors;
  /* 0x0058 */ unsigned long chStores;
  /* 0x005c */ long Padding_571;
  /* 0x0060 */ void** pahStores;
  /* 0x0068 */ unsigned long dwEncoding;
  /* 0x006c */ long Padding_572;
  /* 0x0070 */ void* hMsg;
  /* 0x0078 */ unsigned long csSigners;
  /* 0x007c */ long Padding_573;
  /* 0x0080 */ struct _CRYPT_PROVIDER_SGNR* pasSigners;
  /* 0x0088 */ unsigned long csProvPrivData;
  /* 0x008c */ long Padding_574;
  /* 0x0090 */ struct _CRYPT_PROVIDER_PRIVDATA* pasProvPrivData;
  /* 0x0098 */ unsigned long dwSubjectChoice;
  /* 0x009c */ long Padding_575;
  /* 0x00a0 */ struct _PROVDATA_SIP* pPDSip;
  /* 0x00a8 */ char* pszUsageOID;
  /* 0x00b0 */ int fRecallWithState;
  /* 0x00b4 */ struct _FILETIME sftSystemTime;
  /* 0x00bc */ long Padding_576;
  /* 0x00c0 */ char* pszCTLSignerUsageOID;
  /* 0x00c8 */ unsigned long dwProvFlags;
  /* 0x00cc */ unsigned long dwFinalError;
  /* 0x00d0 */ struct _CERT_USAGE_MATCH* pRequestUsage;
  /* 0x00d8 */ unsigned long dwTrustPubSettings;
  /* 0x00dc */ unsigned long dwUIStateFlags;
  /* 0x00e0 */ struct _CRYPT_PROVIDER_SIGSTATE* pSigState;
  /* 0x00e8 */ struct WINTRUST_SIGNATURE_SETTINGS_* pSigSettings;
} CRYPT_PROVIDER_DATA, *PCRYPT_PROVIDER_DATA; /* size: 0x00f0 */

struct ICacheStream
{
}; /* size: 0x0008 */

typedef struct _CTL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_577;
  /* 0x0008 */ struct _CTL_USAGE SubjectUsage;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB SequenceNumber;
  /* 0x0038 */ struct _FILETIME ThisUpdate;
  /* 0x0040 */ struct _FILETIME NextUpdate;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0060 */ unsigned long cCTLEntry;
  /* 0x0064 */ long Padding_578;
  /* 0x0068 */ struct _CTL_ENTRY* rgCTLEntry;
  /* 0x0070 */ unsigned long cExtension;
  /* 0x0074 */ long Padding_579;
  /* 0x0078 */ struct _CERT_EXTENSION* rgExtension;
} CTL_INFO, *PCTL_INFO; /* size: 0x0080 */

struct $_s__CatchableTypeArray$_extraBytes_16
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType* arrayOfCatchableTypes[2];
}; /* size: 0x0014 */

class Windows::Storage::FileProperties::StorageItemThumbnail;

struct Windows::Foundation::Collections::IVector<Windows::Foundation::Uri *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,__int64>
{
}; /* size: 0x0008 */

struct Windows::ApplicationModel::DataTransfer::IOperationCompletedEventArgs
{
}; /* size: 0x0008 */

struct std::_Char_traits<char16_t,unsigned short>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_ATTRIBUTE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long cValue;
  /* 0x000c */ long Padding_580;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_ATTRIBUTE, *PCRYPT_ATTRIBUTE; /* size: 0x0018 */

class wil::details::<lambda_ada71e15d5743ee3d82d84e02ffbb9ef>
{
}; /* size: 0x0001 */

struct IWinInetHttpTimeouts
{
}; /* size: 0x0008 */

class StringCache
{
  /* 0x0000 */ const wchar_t* volatile _pszValue;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,double>
{
}; /* size: 0x0008 */

typedef struct _RESTART_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Reserved[3];
} RESTART_USN_JOURNAL_DATA, *PRESTART_USN_JOURNAL_DATA; /* size: 0x0010 */

typedef struct _CERT_REVOCATION_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRevocationResult;
  /* 0x0008 */ const char* pszRevocationOid;
  /* 0x0010 */ void* pvOidSpecificInfo;
  /* 0x0018 */ int fHasFreshnessTime;
  /* 0x001c */ unsigned long dwFreshnessTime;
  /* 0x0020 */ struct _CERT_REVOCATION_CRL_INFO* pCrlInfo;
} CERT_REVOCATION_INFO, *PCERT_REVOCATION_INFO; /* size: 0x0028 */

typedef struct _OSVERSIONINFOEX2A
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
  /* 0x009c */ unsigned long wSuiteMaskEx;
  /* 0x00a0 */ unsigned long wReserved2;
} OSVERSIONINFOEX2A, *POSVERSIONINFOEX2A; /* size: 0x00a4 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropContainerProxy> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<char [0],wistd::default_delete<char [0]> >
{
  /* 0x0000 */ class wistd::__compressed_pair<char *,wistd::default_delete<char [0]> > __ptr_;
}; /* size: 0x0008 */

typedef struct _CRYPT_TIMESTAMP_REQUEST
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_581;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB HashedMessage;
  /* 0x0030 */ char* pszTSAPolicyId;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB Nonce;
  /* 0x0048 */ int fCertReq;
  /* 0x004c */ unsigned long cExtension;
  /* 0x0050 */ struct _CERT_EXTENSION* rgExtension;
} CRYPT_TIMESTAMP_REQUEST, *PCRYPT_TIMESTAMP_REQUEST; /* size: 0x0058 */

typedef struct _OPERATION_END_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long OperationId;
  /* 0x0008 */ unsigned long Flags;
} OPERATION_END_PARAMETERS, *POPERATION_END_PARAMETERS; /* size: 0x000c */

class wil::details_abi::heap_vector_iterator<wil::details::EnabledStateManager::CachedFeaturePropertyData>
{
  /* 0x0000 */ struct wil::details::EnabledStateManager::CachedFeaturePropertyData* m_pointer;
}; /* size: 0x0008 */

typedef struct _PROVDATA_SIP
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ long Padding_582;
  /* 0x0018 */ struct SIP_DISPATCH_INFO_* pSip;
  /* 0x0020 */ struct SIP_DISPATCH_INFO_* pCATSip;
  /* 0x0028 */ struct SIP_SUBJECTINFO_* psSipSubjectInfo;
  /* 0x0030 */ struct SIP_SUBJECTINFO_* psSipCATSubjectInfo;
  /* 0x0038 */ struct SIP_INDIRECT_DATA_* psIndirectData;
} PROVDATA_SIP, *PPROVDATA_SIP; /* size: 0x0040 */

class CAsyncCall;

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::select_result) noexcept,&wil::select_result::close,wistd::integral_constant<unsigned __int64,0>,wil::select_result,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0010 */

struct WireContainerThis;

typedef struct _KEY_HANDLE_TAGS_INFORMATION
{
  /* 0x0000 */ unsigned long HandleTags;
} KEY_HANDLE_TAGS_INFORMATION, *PKEY_HANDLE_TAGS_INFORMATION; /* size: 0x0004 */

struct wistd::default_delete<wil::details::folder_watcher_state>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::propputAttribute
{
} _vc_attributes::propputAttribute, *P_vc_attributes::propputAttribute; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::IExtensionRegistration *>
{
}; /* size: 0x0008 */

typedef struct _EVENT_FILTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Type;
} EVENT_FILTER_DESCRIPTOR, *PEVENT_FILTER_DESCRIPTOR; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics> const >;

struct std::hash<std::nullptr_t>
{
}; /* size: 0x0001 */

class CBindHost
{
}; /* size: 0x0018 */

struct wistd::default_delete<wil::details::event_watcher_state>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector<unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<unsigned __int64>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<wil::details::SyncAsyncActionOp>
{
  /* 0x0000 */ class wil::details::SyncAsyncActionOp* ptr_;
}; /* size: 0x0008 */

typedef struct _MINIDUMP_MISC_INFO_5
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
  /* 0x002c */ unsigned int ProcessIntegrityLevel;
  /* 0x0030 */ unsigned int ProcessExecuteFlags;
  /* 0x0034 */ unsigned int ProtectedProcess;
  /* 0x0038 */ unsigned int TimeZoneId;
  /* 0x003c */ struct _TIME_ZONE_INFORMATION TimeZone;
  /* 0x00e8 */ wchar_t BuildString[260];
  /* 0x02f0 */ wchar_t DbgBldStr[40];
  /* 0x0340 */ struct _XSTATE_CONFIG_FEATURE_MSC_INFO XStateData;
  /* 0x0550 */ unsigned int ProcessCookie;
} MINIDUMP_MISC_INFO_5, *PMINIDUMP_MISC_INFO_5; /* size: 0x0554 */

class CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_583[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

class utl::reverse_iterator<utl::_ArrayIt<unsigned __int64> >;

class wistd::__compressed_pair<unsigned short *,wistd::default_delete<unsigned short [0]> >
{
}; /* size: 0x0008 */

class std::numeric_limits<char32_t>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct Windows::Foundation::IReference<Windows::Foundation::Size>
{
}; /* size: 0x0008 */

typedef struct _TOKEN_LINKED_TOKEN
{
  /* 0x0000 */ void* LinkedToken;
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
  /* 0x0000 */ long Padding_584[8];
  /* 0x0020 */ union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer refCount_;
}; /* size: 0x0028 */

struct wistd::__unique_ptr_deleter_sfinae<wil::hlocal_secure_deleter>;

struct tagMULTI_QI
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0008 */ struct IUnknown* pItf;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _SET_PURGE_FAILURE_MODE_INPUT
{
  /* 0x0000 */ unsigned long Flags;
} SET_PURGE_FAILURE_MODE_INPUT, *PSET_PURGE_FAILURE_MODE_INPUT; /* size: 0x0004 */

typedef struct _MINIDUMP_PROCESS_VM_COUNTERS_2
{
  /* 0x0000 */ unsigned short Revision;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long PageFaultCount;
  /* 0x0008 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0010 */ unsigned __int64 WorkingSetSize;
  /* 0x0018 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0020 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0028 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 PagefileUsage;
  /* 0x0040 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0048 */ unsigned __int64 PeakVirtualSize;
  /* 0x0050 */ unsigned __int64 VirtualSize;
  /* 0x0058 */ unsigned __int64 PrivateUsage;
  /* 0x0060 */ unsigned __int64 PrivateWorkingSetSize;
  /* 0x0068 */ unsigned __int64 SharedCommitUsage;
  /* 0x0070 */ unsigned __int64 JobSharedCommitUsage;
  /* 0x0078 */ unsigned __int64 JobPrivateCommitUsage;
  /* 0x0080 */ unsigned __int64 JobPeakPrivateCommitUsage;
  /* 0x0088 */ unsigned __int64 JobPrivateCommitLimit;
  /* 0x0090 */ unsigned __int64 JobTotalCommitLimit;
} MINIDUMP_PROCESS_VM_COUNTERS_2, *PMINIDUMP_PROCESS_VM_COUNTERS_2; /* size: 0x0098 */

struct Microsoft::WRL::DelegateTraits<1>
{
}; /* size: 0x0001 */

class wil::unique_call<void (__cdecl*)(void),&CoUninitialize,1>
{
  /* 0x0000 */ BOOL m_call;
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<ITypeLib>;

struct Windows::Foundation::Collections::VectorChangedEventHandler<HSTRING__ *>
{
}; /* size: 0x0008 */

class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>
{
  /* 0x0000 */ long Padding_585[2];
  /* 0x0008 */ struct IEnumCATEGORYINFO** m_pcsEnum;
  /* 0x0010 */ unsigned long m_cTotalEnum;
  /* 0x0014 */ unsigned long m_dwRefCount;
  /* 0x0018 */ unsigned long m_CurrentEnum;
  /* 0x001c */ struct _GUID m_myiid;
}; /* size: 0x0030 */

struct IAuthenticateEx
{
}; /* size: 0x0008 */

struct IFontEventsDisp
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> const >;

struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wil::cotaskmem_secure_deleter,1,1>
{
}; /* size: 0x0001 */

class std::numeric_limits<__int64>
{
  union
  {
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class CAtom
{
  /* 0x0000 */ unsigned short m_atom;
}; /* size: 0x0002 */

typedef struct _ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned __int64 StartingFileOffset;
  /* 0x0008 */ unsigned long OutputBufferOffset;
  /* 0x000c */ unsigned long BytesWithinFileSize;
  /* 0x0010 */ unsigned long BytesWithinValidDataLength;
  /* 0x0014 */ unsigned short CompressionFormat;
  /* 0x0016 */ unsigned char DataUnitShift;
  /* 0x0017 */ unsigned char ChunkShift;
  /* 0x0018 */ unsigned char ClusterShift;
  /* 0x0019 */ unsigned char EncryptionFormat;
  /* 0x001a */ unsigned short NumberOfDataBlocks;
  /* 0x001c */ unsigned long DataBlockSize[1];
} ENCRYPTED_DATA_INFO, *PENCRYPTED_DATA_INFO; /* size: 0x0020 */

class wil::details::<lambda_9a3f1b253d5803dff7b45a35318ab636>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<bool,unsigned char> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<bool>
{
}; /* size: 0x0008 */

typedef union _AMD64_MXCSR_REG
{
  union
  {
    /* 0x0000 */ unsigned long Value;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long IE : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long DE : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ZE : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long OE : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long UE : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long PE : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long DAZ : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long IM : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long DM : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long ZM : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long OM : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long UM : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long PM : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long RC : 2; /* bit position: 13 */
      /* 0x0000 */ unsigned long FZ : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long res : 16; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} AMD64_MXCSR_REG, *PAMD64_MXCSR_REG; /* size: 0x0004 */

typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
} MINIDUMP_INCLUDE_THREAD_CALLBACK, *PMINIDUMP_INCLUDE_THREAD_CALLBACK; /* size: 0x0004 */

typedef struct _MINIDUMP_IO_CALLBACK
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long BufferBytes;
} MINIDUMP_IO_CALLBACK, *PMINIDUMP_IO_CALLBACK; /* size: 0x001c */

typedef struct _MINIDUMP_VM_PRE_READ_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Size;
} MINIDUMP_VM_PRE_READ_CALLBACK, *PMINIDUMP_VM_PRE_READ_CALLBACK; /* size: 0x0014 */

typedef struct _MINIDUMP_VM_POST_READ_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Completed;
  /* 0x0018 */ HRESULT Status;
} MINIDUMP_VM_POST_READ_CALLBACK, *PMINIDUMP_VM_POST_READ_CALLBACK; /* size: 0x001c */

typedef struct _MINIDUMP_CALLBACK_INPUT
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ void* ProcessHandle;
  /* 0x000c */ unsigned long CallbackType;
  union
  {
    /* 0x0010 */ HRESULT Status;
    /* 0x0010 */ struct _MINIDUMP_THREAD_CALLBACK Thread;
    /* 0x0010 */ struct _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
    /* 0x0010 */ struct _MINIDUMP_MODULE_CALLBACK Module;
    /* 0x0010 */ struct _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
    /* 0x0010 */ struct _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
    /* 0x0010 */ struct _MINIDUMP_IO_CALLBACK Io;
    /* 0x0010 */ struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK ReadMemoryFailure;
    /* 0x0010 */ unsigned long SecondaryFlags;
    /* 0x0010 */ struct _MINIDUMP_VM_QUERY_CALLBACK VmQuery;
    /* 0x0010 */ struct _MINIDUMP_VM_PRE_READ_CALLBACK VmPreRead;
    struct
    {
      /* 0x0010 */ struct _MINIDUMP_VM_POST_READ_CALLBACK VmPostRead;
      /* 0x002c */ long __PADDING__[317];
    }; /* size: 0x0510 */
  }; /* size: 0x0510 */
} MINIDUMP_CALLBACK_INPUT, *PMINIDUMP_CALLBACK_INPUT; /* size: 0x0520 */

class Microsoft::WRL::Details::MakeAllocator<ConversionClassIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<unsigned short> > > >;

struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<double>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> > const >;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOleClassInfo> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IOleClassInfo>* ptr_;
}; /* size: 0x0008 */

struct tagGETCLIPBMETADATA
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ int IsDelayRendered;
  /* 0x0008 */ int IsSynthetic;
}; /* size: 0x000c */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,short>
{
}; /* size: 0x0008 */

class wistd::__function::__func<<lambda_35813abc48134a673502c50f3be72d9b>,void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>
{
  /* 0x0000 */ long Padding_586[2];
  /* 0x0008 */ class wil::details::ApiTelemetryLogger::FireEvent_::__l2::<lambda_35813abc48134a673502c50f3be72d9b> __f_;
}; /* size: 0x0010 */

struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(unsigned short const *,unsigned short const *,char const *,unsigned int *,unsigned short)>
{
}; /* size: 0x0001 */

struct utl::integral_constant<bool,0>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

class CDdeConnectionTable
{
  /* 0x0000 */ void* m_h;
  /* 0x0008 */ unsigned long m_cinfo;
}; /* size: 0x0010 */

class CDdeObject
{
  /* 0x0000 */ int m_fDoingSendOnDataChange;
  /* 0x0004 */ unsigned long m_cRefCount;
  /* 0x0008 */ struct CDdeObject::CUnknownImpl m_Unknown;
  /* 0x0018 */ struct CDdeObject::COleObjectImpl m_Ole;
  /* 0x0028 */ struct CDdeObject::CDataObjectImpl m_Data;
  /* 0x0038 */ struct CDdeObject::CPersistStgImpl m_PersistStg;
  /* 0x0048 */ struct CDdeObject::CProxyManagerImpl m_ProxyMgr;
  /* 0x0058 */ struct CDdeObject::COleItemContainerImpl m_OleItemContainer;
  /* 0x0068 */ struct CDdeObject::CRpcStubBufferImpl m_RpcStubBuffer;
  /* 0x0078 */ unsigned long m_refs;
  /* 0x007c */ unsigned long m_ulObjType;
  /* 0x0080 */ struct _GUID m_clsid;
  /* 0x0090 */ unsigned short m_aClass;
  /* 0x0092 */ unsigned short m_aExeName;
  /* 0x0094 */ unsigned short m_aTopic;
  /* 0x0096 */ unsigned short m_aItem;
  /* 0x0098 */ int m_bRunning;
  /* 0x009c */ long Padding_587;
  /* 0x00a0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00a8 */ struct IOleClientSite* m_pOleClientSite;
  /* 0x00b0 */ struct IStorage* m_pstg;
  /* 0x00b8 */ int m_bInitNew;
  /* 0x00bc */ int m_bOldSvr;
  /* 0x00c0 */ void* m_hNative;
  /* 0x00c8 */ void* m_hPict;
  /* 0x00d0 */ void* m_hExtra;
  /* 0x00d8 */ unsigned short m_cfPict;
  /* 0x00da */ unsigned short m_cfExtra;
  /* 0x00dc */ int m_fDidSendOnClose;
  /* 0x00e0 */ int m_fNoStdCloseDoc;
  /* 0x00e4 */ int m_fDidStdCloseDoc;
  /* 0x00e8 */ int m_fDidStdOpenDoc;
  /* 0x00ec */ int m_fDidGetObject;
  /* 0x00f0 */ int m_fDidLaunchApp;
  /* 0x00f4 */ int m_fUpdateOnSave;
  /* 0x00f8 */ int m_fGotCloseData;
  /* 0x00fc */ unsigned long m_cLocks;
  /* 0x0100 */ int m_fVisible;
  /* 0x0104 */ int m_fWasEverVisible;
  /* 0x0108 */ int m_fCalledOnShow;
  /* 0x010c */ unsigned long m_chk;
  /* 0x0110 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x0118 */ int m_iAdvClose;
  /* 0x011c */ int m_iAdvSave;
  /* 0x0120 */ int m_iAdvChange;
  /* 0x0124 */ int m_fDidAdvNative;
  /* 0x0128 */ unsigned short m_wTerminate;
  /* 0x012a */ char Padding_588[6];
  /* 0x0130 */ struct IDataAdviseHolder* m_pDataAdvHolder;
  /* 0x0138 */ struct IOleAdviseHolder* m_pOleAdvHolder;
  /* 0x0140 */ class CDdeConnectionTable m_ConnectionTable;
  /* 0x0150 */ class DDE_CHANNEL* m_pSysChannel;
  /* 0x0158 */ class DDE_CHANNEL* m_pDocChannel;
}; /* size: 0x0160 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18> >
{
} tlgDataDescInit<_tlgIndexSequence<19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18> >, *PtlgDataDescInit<_tlgIndexSequence<19,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18> >; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *> > >
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ unsigned long ValidStructureSize;
  /* 0x0008 */ unsigned long NextExtentIndex;
  /* 0x000c */ unsigned long ExtentRestart;
  /* 0x0010 */ unsigned long CycleCount;
  /* 0x0014 */ unsigned long TimeoutCount;
  /* 0x0018 */ unsigned __int64 CycleTime;
  /* 0x0020 */ unsigned __int64 CycleTimeMax;
  /* 0x0028 */ unsigned __int64 ExtentTime;
  /* 0x0030 */ unsigned long ExtentTimeIndex;
  /* 0x0034 */ unsigned long ExtentTimeMaxIndex;
  /* 0x0038 */ unsigned __int64 ExtentTimeMax;
  /* 0x0040 */ unsigned __int64 HyperFlushTimeMax;
  /* 0x0048 */ unsigned __int64 TranslateVaTimeMax;
  /* 0x0050 */ unsigned __int64 DebugExemptionCount;
  /* 0x0058 */ unsigned __int64 TbHitCount;
  /* 0x0060 */ unsigned __int64 TbMissCount;
  /* 0x0068 */ unsigned __int64 VinaPendingYield;
  /* 0x0070 */ unsigned __int64 HashCycles;
  /* 0x0078 */ unsigned long HistogramOffset;
  /* 0x007c */ unsigned long HistogramBuckets;
  /* 0x0080 */ unsigned long HistogramShift;
  /* 0x0084 */ unsigned long Reserved1;
  /* 0x0088 */ unsigned __int64 PageNotPresentCount;
} SYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION, *PSYSTEM_SECURE_KERNEL_HYPERGUARD_PROFILE_INFORMATION; /* size: 0x0090 */

class CPointerHashTable
{
}; /* size: 0x0028 */

class AdHocInterceptor<IOleWindow>
{
  /* 0x0000 */ long Padding_589[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

class CStmBufRead
{
}; /* size: 0x0118 */

struct IOleInPlaceFrame
{
}; /* size: 0x0008 */

struct wil::details_abi::ThreadLocalData
{
  /* 0x0000 */ unsigned short size;
  /* 0x0002 */ char Padding_590[2];
  /* 0x0004 */ unsigned int threadId;
  /* 0x0008 */ volatile long* failureSequenceId;
  /* 0x0010 */ unsigned int latestSubscribedFailureSequenceId;
  /* 0x0014 */ long Padding_591;
  /* 0x0018 */ struct wil::details_abi::ThreadLocalFailureInfo* errors;
  /* 0x0020 */ unsigned short errorAllocCount;
  /* 0x0022 */ unsigned short errorCurrentIndex;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node
{
  /* 0x0000 */ unsigned long threadId;
  /* 0x0004 */ long Padding_592;
  /* 0x0008 */ struct wil::details_abi::ThreadLocalStorage<wil::details_abi::ThreadLocalData>::Node* pNext;
  /* 0x0010 */ struct wil::details_abi::ThreadLocalData value;
}; /* size: 0x0038 */

struct Windows::Foundation::IAsyncOperation_impl<double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<bool> *>
{
}; /* size: 0x0008 */

class Windows::Storage::FileProperties::ImageProperties;

typedef struct _DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int advancedColorSupported : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int advancedColorEnabled : 1; /* bit position: 1 */
      /* 0x0014 */ unsigned int wideColorEnforced : 1; /* bit position: 2 */
      /* 0x0014 */ unsigned int advancedColorForceDisabled : 1; /* bit position: 3 */
      /* 0x0014 */ unsigned int reserved : 28; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
  /* 0x0018 */ enum _DISPLAYCONFIG_COLOR_ENCODING colorEncoding;
  /* 0x001c */ unsigned int bitsPerColorChannel;
} DISPLAYCONFIG_GET_ADVANCED_COLOR_INFO, *PDISPLAYCONFIG_GET_ADVANCED_COLOR_INFO; /* size: 0x0020 */

struct wil::details_abi::ThreadLocalFailureInfo
{
  /* 0x0000 */ unsigned short size;
  /* 0x0002 */ unsigned char reserved1[2];
  /* 0x0004 */ unsigned int sequenceId;
  /* 0x0008 */ HRESULT hr;
  /* 0x000c */ long Padding_593;
  /* 0x0010 */ const char* fileName;
  /* 0x0018 */ unsigned short lineNumber;
  /* 0x001a */ unsigned char failureType;
  /* 0x001b */ unsigned char reserved2;
  /* 0x001c */ long Padding_594;
  /* 0x0020 */ const char* modulePath;
  /* 0x0028 */ void* returnAddress;
  /* 0x0030 */ void* callerReturnAddress;
  /* 0x0038 */ const wchar_t* message;
  /* 0x0040 */ void* stringBuffer;
  /* 0x0048 */ unsigned __int64 stringBufferSize;
}; /* size: 0x0050 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> >
{
}; /* size: 0x0020 */

struct tagQACONTAINER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_595;
  /* 0x0008 */ struct IOleClientSite* pClientSite;
  /* 0x0010 */ struct IAdviseSinkEx* pAdviseSink;
  /* 0x0018 */ struct IPropertyNotifySink* pPropertyNotifySink;
  /* 0x0020 */ struct IUnknown* pUnkEventSink;
  /* 0x0028 */ unsigned long dwAmbientFlags;
  /* 0x002c */ unsigned long colorFore;
  /* 0x0030 */ unsigned long colorBack;
  /* 0x0034 */ long Padding_596;
  /* 0x0038 */ struct IFont* pFont;
  /* 0x0040 */ struct IOleUndoManager* pUndoMgr;
  /* 0x0048 */ unsigned long dwAppearance;
  /* 0x004c */ long lcid;
  /* 0x0050 */ struct HPALETTE__* hpal;
  /* 0x0058 */ struct IBindHost* pBindHost;
  /* 0x0060 */ struct IOleControlSite* pOleControlSite;
  /* 0x0068 */ struct IServiceProvider* pServiceProvider;
}; /* size: 0x0070 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>
{
}; /* size: 0x0001 */

class BinaryMethod<long,int>
{
}; /* size: 0x0001 */

typedef struct _TOKEN_MANDATORY_LABEL
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES Label;
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL; /* size: 0x0010 */

struct HPALETTE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IBindHost
{
}; /* size: 0x0008 */

class wil::details::<lambda_9b0da57ab9e02eb69ef404a87b57dcdb>
{
}; /* size: 0x0001 */

struct IAgileDataObject
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

struct IOleControlSite
{
}; /* size: 0x0008 */

typedef struct _CERT_LOGOTYPE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeInfoChoice;
  /* 0x0004 */ long Padding_597;
  union
  {
    /* 0x0008 */ struct _CERT_LOGOTYPE_DATA* pLogotypeDirectInfo;
    /* 0x0008 */ struct _CERT_LOGOTYPE_REFERENCE* pLogotypeIndirectInfo;
  }; /* size: 0x0008 */
} CERT_LOGOTYPE_INFO, *PCERT_LOGOTYPE_INFO; /* size: 0x0010 */

typedef struct _CERT_OTHER_LOGOTYPE_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO LogotypeInfo;
} CERT_OTHER_LOGOTYPE_INFO, *PCERT_OTHER_LOGOTYPE_INFO; /* size: 0x0018 */

struct IServiceProvider
{
}; /* size: 0x0008 */

class wil::details::<lambda_a1a7323f8d6d33c944d50cb2e4bd6bef>
{
}; /* size: 0x0001 */

class CReadOnlyStream
{
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>
{
}; /* size: 0x0008 */

struct tagTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char __PADDING__[3];
}; /* size: 0x0038 */

struct tagPANOSE
{
  /* 0x0000 */ unsigned char bFamilyType;
  /* 0x0001 */ unsigned char bSerifStyle;
  /* 0x0002 */ unsigned char bWeight;
  /* 0x0003 */ unsigned char bProportion;
  /* 0x0004 */ unsigned char bContrast;
  /* 0x0005 */ unsigned char bStrokeVariation;
  /* 0x0006 */ unsigned char bArmStyle;
  /* 0x0007 */ unsigned char bLetterform;
  /* 0x0008 */ unsigned char bMidline;
  /* 0x0009 */ unsigned char bXHeight;
}; /* size: 0x000a */

typedef struct _OUTLINETEXTMETRICA
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICA otmTextMetrics;
  /* 0x003c */ unsigned char otmFiller;
  /* 0x003d */ struct tagPANOSE otmPanoseNumber;
  /* 0x0047 */ char Padding_598;
  /* 0x0048 */ unsigned int otmfsSelection;
  /* 0x004c */ unsigned int otmfsType;
  /* 0x0050 */ int otmsCharSlopeRise;
  /* 0x0054 */ int otmsCharSlopeRun;
  /* 0x0058 */ int otmItalicAngle;
  /* 0x005c */ unsigned int otmEMSquare;
  /* 0x0060 */ int otmAscent;
  /* 0x0064 */ int otmDescent;
  /* 0x0068 */ unsigned int otmLineGap;
  /* 0x006c */ unsigned int otmsCapEmHeight;
  /* 0x0070 */ unsigned int otmsXHeight;
  /* 0x0074 */ struct tagRECT otmrcFontBox;
  /* 0x0084 */ int otmMacAscent;
  /* 0x0088 */ int otmMacDescent;
  /* 0x008c */ unsigned int otmMacLineGap;
  /* 0x0090 */ unsigned int otmusMinimumPPEM;
  /* 0x0094 */ struct tagPOINT otmptSubscriptSize;
  /* 0x009c */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a4 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00ac */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b4 */ unsigned int otmsStrikeoutSize;
  /* 0x00b8 */ int otmsStrikeoutPosition;
  /* 0x00bc */ int otmsUnderscoreSize;
  /* 0x00c0 */ int otmsUnderscorePosition;
  /* 0x00c4 */ long Padding_599;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00d0 */ char* otmpFaceName;
  /* 0x00d8 */ char* otmpStyleName;
  /* 0x00e0 */ char* otmpFullName;
} OUTLINETEXTMETRICA, *POUTLINETEXTMETRICA; /* size: 0x00e8 */

typedef struct _CSTRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_600;
  /* 0x0008 */ const char* Buffer;
} CSTRING, *PCSTRING; /* size: 0x0010 */

struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>::EventTrackingType
{
}; /* size: 0x0001 */

class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >
{
  /* 0x0000 */ const unsigned int s_cuMaxSize;
  /* 0x0004 */ long Padding_601[9];
  /* 0x0028 */ class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> > _hashMap;
  /* 0x0078 */ struct Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *> _fnHash;
  /* 0x0079 */ struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *> _fnEquals;
  /* 0x007a */ char Padding_602[6];
  /* 0x0080 */ class XWinRT::ComLock _comLock;
  /* 0x0090 */ class XWinRT::SecureVersionTag::TagManager _versionManager;
  /* 0x0098 */ BOOL _initialized;
  /* 0x0099 */ struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>::EventType _evtMapChanged;
  /* 0x009a */ struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>::EventTrackingType _listeners;
  /* 0x009b */ char Padding_603;
  /* 0x009c */ long _reentrancyGuard;
}; /* size: 0x00a0 */

struct IDebug
{
}; /* size: 0x0008 */

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE
{
  /* 0x0000 */ void* pfnBufferSize /* function */;
  /* 0x0008 */ void* pfnMarshall /* function */;
  /* 0x0010 */ void* pfnUnmarshall /* function */;
  /* 0x0018 */ void* pfnFree /* function */;
} USER_MARSHAL_ROUTINE_QUADRUPLE, *PUSER_MARSHAL_ROUTINE_QUADRUPLE; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View> >;

class CAutoHandle_Policy<_IMAGELIST *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<CDragOperation>
{
  /* 0x0000 */ class CDragOperation* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IWeakReference *> *>
{
}; /* size: 0x0001 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const wchar_t* AssemblyName;
  /* 0x0010 */ unsigned long AssemblyNameLength;
  /* 0x0014 */ unsigned long HashAlgorithm;
  /* 0x0018 */ unsigned long PseudoKey;
  /* 0x001c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DATA, *PACTIVATION_CONTEXT_ASSEMBLY_DATA; /* size: 0x0020 */

typedef struct _APC_CALLBACK_DATA
{
  /* 0x0000 */ unsigned __int64 Parameter;
  /* 0x0008 */ struct _CONTEXT* ContextRecord;
  /* 0x0010 */ unsigned __int64 Reserved0;
  /* 0x0018 */ unsigned __int64 Reserved1;
} APC_CALLBACK_DATA, *PAPC_CALLBACK_DATA; /* size: 0x0020 */

typedef struct _MINIDUMP_THREAD_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD* Threads /* zero-length array */;
} MINIDUMP_THREAD_LIST, *PMINIDUMP_THREAD_LIST; /* size: 0x0004 */

typedef struct _SCMREGKEY
{
  /* 0x0000 */ unsigned __int64 dwEntryLoc;
  /* 0x0008 */ unsigned long dwHash;
  /* 0x000c */ unsigned long dwScmId;
} SCMREGKEY, *PSCMREGKEY; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IImpersonateClipboardOwner>* ptr_;
}; /* size: 0x0008 */

class CDragDefaultCursors
{
  /* 0x0000 */ struct HICON__* ahcursorDefaults[4][2];
}; /* size: 0x0040 */

struct HICON__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
  /* 0x0000 */ long Padding_604[2];
  /* 0x0008 */ void* handle_;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_pointer<unsigned char>
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_HANDLE_DATA_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int NumberOfDescriptors;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_DATA_STREAM, *PMINIDUMP_HANDLE_DATA_STREAM; /* size: 0x0010 */

class CForcedDropTarget
{
  /* 0x0000 */ struct HWND__* _hwndFDTCurrent;
  /* 0x0008 */ int _fDragDropActive;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0008 */

struct IEnumSCMProcessInfo
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IInspectable> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IInspectable>* ptr_;
}; /* size: 0x0008 */

struct ICallFrameInit
{
}; /* size: 0x0008 */

typedef struct _tagSTACKFRAME64
{
  /* 0x0000 */ struct _tagADDRESS64 AddrPC;
  /* 0x0010 */ struct _tagADDRESS64 AddrReturn;
  /* 0x0020 */ struct _tagADDRESS64 AddrFrame;
  /* 0x0030 */ struct _tagADDRESS64 AddrStack;
  /* 0x0040 */ struct _tagADDRESS64 AddrBStore;
  /* 0x0050 */ void* FuncTableEntry;
  /* 0x0058 */ unsigned __int64 Params[4];
  /* 0x0078 */ int Far;
  /* 0x007c */ int Virtual;
  /* 0x0080 */ unsigned __int64 Reserved[3];
  /* 0x0098 */ struct _KDHELP64 KdHelp;
} tagSTACKFRAME64, *PtagSTACKFRAME64; /* size: 0x0108 */

class CTSmartPtr<unsigned short *,CTContainer_PolicyCoTaskMem>
{
}; /* size: 0x0008 */

struct HBRUSH__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDataFormatIterator> >
{
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_LINE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_605;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned long LineNumber;
  /* 0x0014 */ long Padding_606;
  /* 0x0018 */ char* FileName;
  /* 0x0020 */ unsigned __int64 Address;
} IMAGEHLP_LINE64, *PIMAGEHLP_LINE64; /* size: 0x0028 */

typedef struct _CM_MONITOR_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short HorizontalScreenSize;
  /* 0x0006 */ unsigned short VerticalScreenSize;
  /* 0x0008 */ unsigned short HorizontalResolution;
  /* 0x000a */ unsigned short VerticalResolution;
  /* 0x000c */ unsigned short HorizontalDisplayTimeLow;
  /* 0x000e */ unsigned short HorizontalDisplayTime;
  /* 0x0010 */ unsigned short HorizontalDisplayTimeHigh;
  /* 0x0012 */ unsigned short HorizontalBackPorchLow;
  /* 0x0014 */ unsigned short HorizontalBackPorch;
  /* 0x0016 */ unsigned short HorizontalBackPorchHigh;
  /* 0x0018 */ unsigned short HorizontalFrontPorchLow;
  /* 0x001a */ unsigned short HorizontalFrontPorch;
  /* 0x001c */ unsigned short HorizontalFrontPorchHigh;
  /* 0x001e */ unsigned short HorizontalSyncLow;
  /* 0x0020 */ unsigned short HorizontalSync;
  /* 0x0022 */ unsigned short HorizontalSyncHigh;
  /* 0x0024 */ unsigned short VerticalBackPorchLow;
  /* 0x0026 */ unsigned short VerticalBackPorch;
  /* 0x0028 */ unsigned short VerticalBackPorchHigh;
  /* 0x002a */ unsigned short VerticalFrontPorchLow;
  /* 0x002c */ unsigned short VerticalFrontPorch;
  /* 0x002e */ unsigned short VerticalFrontPorchHigh;
  /* 0x0030 */ unsigned short VerticalSyncLow;
  /* 0x0032 */ unsigned short VerticalSync;
  /* 0x0034 */ unsigned short VerticalSyncHigh;
} CM_MONITOR_DEVICE_DATA, *PCM_MONITOR_DEVICE_DATA; /* size: 0x0036 */

struct IPictureDisp
{
}; /* size: 0x0008 */

struct NTFS_FILE_RECORD_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>
{
}; /* size: 0x0001 */

struct wistd::enable_if<1,void>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_STRING
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ wchar_t* Buffer /* zero-length array */;
} MINIDUMP_STRING, *PMINIDUMP_STRING; /* size: 0x0004 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::UI::WindowId,0>
{
}; /* size: 0x0008 */

struct PROCESS_PROTECTION_LEVEL_INFORMATION
{
  /* 0x0000 */ unsigned long ProtectionLevel;
}; /* size: 0x0004 */

typedef struct _MINIDUMP_THREAD_NAME
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned __int64 RvaOfThreadName;
} MINIDUMP_THREAD_NAME, *PMINIDUMP_THREAD_NAME; /* size: 0x000c */

typedef struct _MINIDUMP_THREAD_NAME_LIST
{
  /* 0x0000 */ unsigned long NumberOfThreadNames;
  /* 0x0004 */ struct _MINIDUMP_THREAD_NAME* ThreadNames /* zero-length array */;
} MINIDUMP_THREAD_NAME_LIST, *PMINIDUMP_THREAD_NAME_LIST; /* size: 0x0004 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,HSTRING__ *>
{
}; /* size: 0x0008 */

class IsFloat<long,0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0001 */

struct wil::write_lock_required
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HPALETTE__ *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncActionProgressHandler_impl<double>
{
}; /* size: 0x0008 */

struct FRAME_GetTypeInfo
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ unsigned int iTInfo;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ char __pad2[4];
  /* 0x0018 */ struct ITypeInfo** ppTInfo;
}; /* size: 0x0020 */

typedef struct __vcrt_assert_va_start_is_not_reference<unsigned long>
{
} _vcrt_assert_va_start_is_not_reference<unsigned long>, *P_vcrt_assert_va_start_is_not_reference<unsigned long>; /* size: 0x0001 */

struct wistd::__compressed_pair_elem<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION *,0,0>
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* __value_;
}; /* size: 0x0008 */

struct wil::details::resource_policy<HKEY__ *,long (__cdecl*)(HKEY__ *),&RegCloseKey,wistd::integral_constant<unsigned __int64,0>,HKEY__ *,HKEY__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef struct _SECURITY_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char __PADDING__[2];
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE; /* size: 0x000c */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,short>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<Windows::Foundation::Size>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>
{
}; /* size: 0x0008 */

class wil::details::<lambda_050c322089e5dac1ea3294edcedf17de>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView<unsigned int,Windows::System::User *>
{
}; /* size: 0x0008 */

struct tagGUITHREADINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HWND__* hwndActive;
  /* 0x0010 */ struct HWND__* hwndFocus;
  /* 0x0018 */ struct HWND__* hwndCapture;
  /* 0x0020 */ struct HWND__* hwndMenuOwner;
  /* 0x0028 */ struct HWND__* hwndMoveSize;
  /* 0x0030 */ struct HWND__* hwndCaret;
  /* 0x0038 */ struct tagRECT rcCaret;
}; /* size: 0x0048 */

typedef struct _SYMBOL_INFO_PACKAGEW
{
  /* 0x0000 */ struct _SYMBOL_INFOW si;
  /* 0x0058 */ wchar_t name[2001];
  /* 0x0ffa */ char __PADDING__[6];
} SYMBOL_INFO_PACKAGEW, *PSYMBOL_INFO_PACKAGEW; /* size: 0x1000 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wil::details::SecureZeroData>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> const >;

struct DISPATCH_INTERCEPTOR
{
}; /* size: 0x00d0 */

typedef struct _tlgWrapperByVal<8>
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const unsigned __int64 Value;
  }; /* size: 0x0008 */
} tlgWrapperByVal<8>, *PtlgWrapperByVal<8>; /* size: 0x0008 */

union wil_details_ReportedState
{
  union
  {
    /* 0x0000 */ unsigned int exchange;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned int queuedForReporting : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned int reportedDeviceUsage : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned int reportedDevicePotential : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned int reportedDeviceOpportunity : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned int reportedDevicePotentialOpportunity : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned int usageCount : 9; /* bit position: 5 */
      /* 0x0000 */ unsigned int usageCountRepresentsPotential : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned int opportunityCount : 7; /* bit position: 15 */
      /* 0x0000 */ unsigned int opportunityCountRepresentsPotential : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned int unused : 9; /* bit position: 23 */
    }; /* bitfield */
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

union wil_details_RecordedState
{
  union
  {
    /* 0x0000 */ unsigned int exchange;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned int recordedDeviceUsage : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned int recordedDevicePotential : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned int recordedDeviceOpportunity : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned int recordedDevicePotentialOpportunity : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned int recordedVariantDeviceUsage : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned int recordedVariant : 6; /* bit position: 5 */
      /* 0x0000 */ unsigned int unused : 21; /* bit position: 11 */
    }; /* bitfield */
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct wil_details_FeatureReportingCache
{
  /* 0x0000 */ union wil_details_ReportedState reported;
  /* 0x0004 */ union wil_details_RecordedState recorded;
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>;

struct Windows::Foundation::Collections::IKeyValuePair_impl<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

struct _ASSEMBLY_STORAGE_MAP;

struct IRpcChannelBuffer2
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray_impl<Windows::Foundation::Size>
{
}; /* size: 0x0008 */

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION_EX
{
  /* 0x0000 */ enum _IO_PRIORITY_HINT PriorityHint;
  /* 0x0004 */ unsigned char BoostOutstanding;
  /* 0x0005 */ char __PADDING__[3];
} FILE_IO_PRIORITY_HINT_INFORMATION_EX, *PFILE_IO_PRIORITY_HINT_INFORMATION_EX; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IUnknown>
{
}; /* size: 0x0010 */

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Sids;
  /* 0x0010 */ unsigned long RestrictedSidCount;
  /* 0x0014 */ unsigned long RestrictedSidLength;
  /* 0x0018 */ struct _SID_AND_ATTRIBUTES* RestrictedSids;
  /* 0x0020 */ unsigned long PrivilegeCount;
  /* 0x0024 */ unsigned long PrivilegeLength;
  /* 0x0028 */ struct _LUID_AND_ATTRIBUTES* Privileges;
  /* 0x0030 */ struct _LUID AuthenticationId;
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES; /* size: 0x0038 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_607;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
  /* 0x0028 */ void* Extra1;
  /* 0x0030 */ void* Extra2;
  /* 0x0038 */ void* Extra3;
  /* 0x0040 */ void* Extra4;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED; /* size: 0x0048 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0001 */

typedef struct _FILE_MAILSLOT_SET_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER* ReadTimeout;
} FILE_MAILSLOT_SET_INFORMATION, *PFILE_MAILSLOT_SET_INFORMATION; /* size: 0x0008 */

struct tagCADWORD
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_608;
  /* 0x0008 */ unsigned long* pElems;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationProgressHandler<int,int>
{
}; /* size: 0x0008 */

struct tagDOCDISPATCHDATA
{
  /* 0x0000 */ long Padding_609[2];
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned long msg;
  /* 0x0014 */ long Padding_610;
  /* 0x0018 */ unsigned __int64 wParam;
  /* 0x0020 */ __int64 lParam;
  /* 0x0028 */ void* hdata;
  /* 0x0030 */ unsigned short aItem;
  /* 0x0032 */ char Padding_611[6];
  /* 0x0038 */ class CDefClient* lpclient;
}; /* size: 0x0040 */

struct wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>
{
}; /* size: 0x0001 */

typedef struct _NDR64_STRUCTURE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasPointerInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HasMemberInfo : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasConfArray : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasOrigPointerInfo : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasOrigMemberInfo : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved2 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_STRUCTURE_FLAGS, *PNDR64_STRUCTURE_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* OriginalMemberLayout;
  /* 0x0010 */ const void* OriginalPointerLayout;
  /* 0x0018 */ const void* PointerLayout;
} NDR64_BOGUS_STRUCTURE_HEADER_FORMAT, *PNDR64_BOGUS_STRUCTURE_HEADER_FORMAT; /* size: 0x0020 */

typedef struct _NDR64_SIMPLE_MEMBER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserved1;
  /* 0x0002 */ unsigned short Reserved2;
  /* 0x0004 */ unsigned int Reserved3;
} NDR64_SIMPLE_MEMBER_FORMAT, *PNDR64_SIMPLE_MEMBER_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_MEMPAD_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserve1;
  /* 0x0002 */ unsigned short MemPad;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_MEMPAD_FORMAT, *PNDR64_MEMPAD_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_BUFFER_ALIGN_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_BUFFER_ALIGN_FORMAT, *PNDR64_BUFFER_ALIGN_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag14_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag10;
    /* 0x0070 */ struct _NDR64_MEMPAD_FORMAT frag11;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag12;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag13;
    /* 0x0088 */ struct _NDR64_MEMPAD_FORMAT frag14;
    /* 0x0090 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag15;
    /* 0x0098 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag16;
  } /* size: 0x0080 */ frag2;
} _midl_frag14_t, *P_midl_frag14_t; /* size: 0x00a0 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>
{
}; /* size: 0x0008 */

struct IDataObject
{
}; /* size: 0x0008 */

class DragDropLogging::CallContext
{
}; /* size: 0x0140 */

struct Windows::Foundation::Collections::IIterator<double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<EventRegistrationToken,int>
{
}; /* size: 0x0008 */

struct ARRAY_INFO
{
  /* 0x0000 */ long Dimension;
  /* 0x0004 */ long Padding_612;
  /* 0x0008 */ unsigned long* BufferConformanceMark;
  /* 0x0010 */ unsigned long* BufferVarianceMark;
  /* 0x0018 */ unsigned long* MaxCountArray;
  /* 0x0020 */ unsigned long* OffsetArray;
  /* 0x0028 */ unsigned long* ActualCountArray;
}; /* size: 0x0030 */

typedef struct _RTL_VERIFIER_HELPER_TABLE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_613;
  /* 0x0008 */ void* VerifierEngGetStackTraceAddress /* function */;
  /* 0x0010 */ void* VerifierEngNtdllHeapFreeCallback /* function */;
  /* 0x0018 */ void* VerifierEngLogStackTrace /* function */;
  /* 0x0020 */ const struct _UNICODE_STRING* UnicodeImageName;
  /* 0x0028 */ void* VerifierEngCommitDebugInfo /* function */;
  /* 0x0030 */ void* VerifierEngSetProcessDebugInformation /* function */;
  /* 0x0038 */ void* VerifierEngQueryImageFileExecutionOptionsEx /* function */;
  /* 0x0040 */ unsigned long* AddressDphGlobalFlags;
  /* 0x0048 */ struct _RTL_VERIFIER_HEAP_TABLE* VerifierTable;
  /* 0x0050 */ struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR* VerifierDescriptor;
  /* 0x0058 */ void* OptionsKey;
  /* 0x0060 */ void* SystemDllBase;
  /* 0x0068 */ void* VerifierEngGetStackTraceAddressEx /* function */;
  /* 0x0070 */ void* VerifierEngReleaseStackTrace /* function */;
  /* 0x0078 */ void* VerifierEngStdInitializeStackTrace /* function */;
  /* 0x0080 */ void* VerifierEngStdDeleteStackTrace /* function */;
  /* 0x0088 */ void* VerifierEngStdLogStackTrace /* function */;
  /* 0x0090 */ void* VerifierEngStdReleaseStackTrace /* function */;
} RTL_VERIFIER_HELPER_TABLE, *PRTL_VERIFIER_HELPER_TABLE; /* size: 0x0098 */

struct wil::details::close_invoke_helper<1,long (__cdecl*)(_RTL_CRITICAL_SECTION *),&RtlLeaveCriticalSection,_RTL_CRITICAL_SECTION *>
{
}; /* size: 0x0001 */

typedef struct _PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_614;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0028 */ struct _STRING* Prefix;
} PREFIX_TABLE_ENTRY, *PPREFIX_TABLE_ENTRY; /* size: 0x0030 */

class Windows::Storage::StorageFile;

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES
{
  /* 0x0000 */ void* pfnNetSize /* function */;
  /* 0x0008 */ void* pfnToNetCs /* function */;
  /* 0x0010 */ void* pfnLocalSize /* function */;
  /* 0x0018 */ void* pfnFromNetCs /* function */;
} NDR_CS_SIZE_CONVERT_ROUTINES, *PNDR_CS_SIZE_CONVERT_ROUTINES; /* size: 0x0020 */

struct tagACCEL
{
  /* 0x0000 */ unsigned char fVirt;
  /* 0x0001 */ char Padding_615;
  /* 0x0002 */ unsigned short key;
  /* 0x0004 */ unsigned short cmd;
}; /* size: 0x0006 */

class wil::details::<lambda_5a9ddac3867a5dcd6edf0ffa5576b047>
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_HANDLE_OPERATION_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_OPERATION_LIST, *PMINIDUMP_HANDLE_OPERATION_LIST; /* size: 0x0010 */

class ComPsClassFactory
{
  /* 0x0000 */ long Padding_616[4];
  /* 0x0010 */ long m_crefs;
  /* 0x0014 */ long Padding_617;
  /* 0x0018 */ struct IPSFactoryBuffer* m_pDelegatee;
  /* 0x0020 */ const struct tagProxyFileInfo** m_pProxyFileList;
}; /* size: 0x0028 */

struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>
{
  /* 0x0000 */ const unsigned long IidCount;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY BlockNonMicrosoftSignedBinaries;
  /* 0x0008 */ union _RTL_IMAGE_MITIGATION_POLICY EnforceSigningOnModuleDependencies;
} RTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY, *PRTL_IMAGE_MITIGATION_BINARY_SIGNATURE_POLICY; /* size: 0x0010 */

typedef struct _CONNECTDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_618;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct _NETRESOURCEA* lpConnRes;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTA, *PCONNECTDLGSTRUCTA; /* size: 0x0020 */

typedef struct _NDR64_ARRAY_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasPointerInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HasElementInfo : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char IsMultiDimensional : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char IsArrayofStrings : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved2 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved4 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_ARRAY_FLAGS, *PNDR64_ARRAY_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char NumberDims;
  /* 0x0004 */ unsigned int NumberElements;
  /* 0x0008 */ const void* Element;
} NDR64_BOGUS_ARRAY_HEADER_FORMAT, *PNDR64_BOGUS_ARRAY_HEADER_FORMAT; /* size: 0x0010 */

typedef struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT FixedArrayFormat;
  /* 0x0010 */ const void* ConfDescription;
  /* 0x0018 */ const void* VarDescription;
  /* 0x0020 */ const void* OffsetDescription;
} NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT, *PNDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT; /* size: 0x0028 */

struct REF_COUNTED_STRUCT
{
  /* 0x0000 */ long Padding_619[2];
  /* 0x0008 */ long m_refs;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct HSTRING__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class std::numeric_limits<signed char>
{
  union
  {
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct Windows::Foundation::IMemoryBufferReference
{
}; /* size: 0x0008 */

class wil::details::<lambda_a1cd407f1e75cd6c21535c6a38b98ecc>
{
}; /* size: 0x0001 */

struct std::multiplies<void>
{
}; /* size: 0x0001 */

class CEnumGeneric
{
  /* 0x0000 */ long Padding_620[2];
  /* 0x0008 */ struct _GUID m_iid;
  /* 0x0018 */ unsigned long m_refs;
  /* 0x001c */ unsigned long m_dwCurrent;
  /* 0x0020 */ unsigned long m_dwDirection;
  /* 0x0024 */ long Padding_621;
  /* 0x0028 */ struct IEnumCallback* m_pEnumCallback;
  /* 0x0030 */ struct IEnumHolder* m_pParent;
  /* 0x0038 */ struct IEnumGeneric* m_pNext;
  /* 0x0040 */ struct IEnumGeneric* m_pPrev;
}; /* size: 0x0048 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::System::User *>
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<_TOKEN_PRIMARY_GROUP *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
}; /* size: 0x0008 */

typedef struct _CRYPT_CSP_PROVIDER
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ long Padding_622;
  /* 0x0008 */ wchar_t* pwszProviderName;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB Signature;
} CRYPT_CSP_PROVIDER, *PCRYPT_CSP_PROVIDER; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterator<HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncActionWithProgressCompletedHandler<unsigned __int64>
{
}; /* size: 0x0008 */

class wil::details::<lambda_abd5c7a9395c47cc5e5536f441cc4762>
{
}; /* size: 0x0001 */

typedef struct _MODLOAD_CVMISC
{
  /* 0x0000 */ unsigned long oCV;
  /* 0x0004 */ long Padding_623;
  /* 0x0008 */ unsigned __int64 cCV;
  /* 0x0010 */ unsigned long oMisc;
  /* 0x0014 */ long Padding_624;
  /* 0x0018 */ unsigned __int64 cMisc;
  /* 0x0020 */ unsigned long dtImage;
  /* 0x0024 */ unsigned long cImage;
} MODLOAD_CVMISC, *PMODLOAD_CVMISC; /* size: 0x0028 */

struct std::integral_constant<unsigned __int64,0>
{
  /* 0x0000 */ const unsigned __int64 value;
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::handle_null_only_resource_policy<int (__cdecl*)(void *),&CloseHandle> > >
{
}; /* size: 0x0008 */

class std::numeric_limits<float>
{
  union
  {
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct IQuickActivate
{
}; /* size: 0x0008 */

class ProcessToken
{
  union
  {
    /* 0x0000 */ const unsigned long InvalidSessionId;
    /* 0x0000 */ void* _pSelfSid;
  }; /* size: 0x0008 */
  /* 0x0008 */ struct HSTRING__* volatile _stringSelfSid;
  /* 0x0010 */ void* _pPackageSid;
  /* 0x0018 */ struct HSTRING__* volatile _stringPackageSid;
  /* 0x0020 */ struct HSTRING__* volatile _packageMoniker;
  /* 0x0028 */ BOOL _fHasPackageMonikerBeenChecked;
  /* 0x0029 */ char Padding_625[3];
  /* 0x002c */ enum ProcessToken::UserHiveOkState _userHiveOkState;
  /* 0x0030 */ enum ProcessToken::AppContainerState _appContainerState;
  /* 0x0034 */ enum ProcessToken::DesignModeState _designModeState;
  /* 0x0038 */ enum ProcessToken::SysAppIdState _sysAppIdState;
  /* 0x003c */ enum ProcessToken::NoAllAppPackagesState _noAllAppPackagesState;
  /* 0x0040 */ enum ProcessToken::LifecycleManagerCanSuspendState _lifecycleManagerCanSuspendState;
  /* 0x0044 */ enum ProcessToken::WakeOnIntraPackageCallState _wakeOnIntraPackageCallState;
  /* 0x0048 */ enum ProcessToken::ProcessILState _processILState;
  /* 0x004c */ BOOL _fHasPkgClaimBeenChecked;
  /* 0x004d */ char Padding_626[3];
  /* 0x0050 */ unsigned __int64 _pkgFlags;
  /* 0x0058 */ unsigned long _sessionId;
}; /* size: 0x0060 */

class wil::details::<lambda_ef24b93a0ca4419704b7bf6aceb85173>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>
{
}; /* size: 0x0008 */

struct MD_INTERFACE_CACHE
{
}; /* size: 0x00b8 */

class Microsoft::WRL::ComPtr<ClipboardDataObjectTask>
{
  /* 0x0000 */ class ClipboardDataObjectTask* ptr_;
}; /* size: 0x0008 */

class ComTrace::CallContext
{
}; /* size: 0x0140 */

struct Windows::Foundation::Collections::IIterator<_GUID>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<Windows::UI::Color>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>
{
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,void *>
{
}; /* size: 0x0001 */

typedef struct _MUIREGISTRYINFO
{
  /* 0x0000 */ unsigned int Owned;
  /* 0x0004 */ unsigned short InstallLanguageFallback[4];
  /* 0x000c */ unsigned long Generation;
  /* 0x0010 */ unsigned long ProcessGeneration;
  /* 0x0014 */ long Padding_627;
  /* 0x0018 */ struct _MUILANGUAGES* Installed;
  /* 0x0020 */ struct _MUISTRINGPOOL* Strings;
  /* 0x0028 */ struct _MUILANGCFGLIST* MachineConfig;
  /* 0x0030 */ struct _MUILANGCFGLIST* UserConfig;
  /* 0x0038 */ struct _MUILANGLIST* MachinePreferred;
  /* 0x0040 */ struct _MUILANGLIST* UserPreferred;
  /* 0x0048 */ struct _MUILANGLIST* ProcessPreferred;
  /* 0x0050 */ struct _MUILANGLIST* MergedUser;
  /* 0x0058 */ struct _MUILANGLIST* MergedMachine;
  /* 0x0060 */ struct _MUILANGLIST* MergedFallback;
  /* 0x0068 */ struct _MUIREGISTRYINFO* PrevRegInfo;
  /* 0x0070 */ unsigned long MUI_Locked;
  /* 0x0074 */ unsigned long MUI_SE;
  /* 0x0078 */ unsigned long MUI_NumberAllowed;
  /* 0x007c */ long Padding_628;
  /* 0x0080 */ wchar_t* MUI_AllowedLanguage;
  /* 0x0088 */ wchar_t* MUI_InstalledSKU;
  /* 0x0090 */ unsigned long cbInstalledSKU;
  /* 0x0094 */ unsigned long cbAllowedLanguage;
  /* 0x0098 */ wchar_t* MUI_DisallowedLanguage;
  /* 0x00a0 */ unsigned long cbDisallowedLanguage;
  /* 0x00a4 */ long __PADDING__[1];
} MUIREGISTRYINFO, *PMUIREGISTRYINFO; /* size: 0x00a8 */

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY
{
  /* 0x0000 */ struct _GUID* SubjectType;
  /* 0x0008 */ void* Subject;
} WIN_TRUST_ACTDATA_SUBJECT_ONLY, *PWIN_TRUST_ACTDATA_SUBJECT_ONLY; /* size: 0x0010 */

typedef struct _TIMER_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER RemainingTime;
  /* 0x0008 */ unsigned char TimerState;
  /* 0x0009 */ char __PADDING__[7];
} TIMER_BASIC_INFORMATION, *PTIMER_BASIC_INFORMATION; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<41,0,1,2,3,4,5,7,8,9,11,12,13,15,16,17,19,20,21,23,24,25,27,28,29,31,32,33,35,36,37,39,40> >
{
} tlgDataDescInit<_tlgIndexSequence<41,0,1,2,3,4,5,7,8,9,11,12,13,15,16,17,19,20,21,23,24,25,27,28,29,31,32,33,35,36,37,39,40> >, *PtlgDataDescInit<_tlgIndexSequence<41,0,1,2,3,4,5,7,8,9,11,12,13,15,16,17,19,20,21,23,24,25,27,28,29,31,32,33,35,36,37,39,40> >; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0001 */

class wil::details::init_once_completer
{
  /* 0x0000 */ union _RTL_RUN_ONCE& m_once;
  /* 0x0008 */ unsigned long m_flags;
}; /* size: 0x0010 */

class wil::details::<lambda_41f17fbf7270d2a9845e92c839228956>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation<double>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0> >
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0>* ptr_;
}; /* size: 0x0008 */

struct IPropertyPage
{
}; /* size: 0x0008 */

typedef struct _FILE_SET_SPARSE_BUFFER
{
  /* 0x0000 */ unsigned char SetSparse;
} FILE_SET_SPARSE_BUFFER, *PFILE_SET_SPARSE_BUFFER; /* size: 0x0001 */

struct GetTypeValueImpl<long,HINSTANCE__ *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

class wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79>;

class wistd::__function::__func<<lambda_af47d61301194c5d4839e4c10d405b79>,void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>
{
  /* 0x0000 */ long Padding_629[2];
  /* 0x0008 */ class wil::details::ApiTelemetryLogger::ApiDataList::Flush::__l7::<lambda_af47d61301194c5d4839e4c10d405b79> __f_;
}; /* size: 0x0020 */

typedef struct _userSTGMEDIUM
{
  /* 0x0000 */ struct IUnknown* pUnkForRelease;
} userSTGMEDIUM, *PuserSTGMEDIUM; /* size: 0x0008 */

typedef struct _userFLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct _userSTGMEDIUM Stgmed;
} userFLAG_STGMEDIUM, *PuserFLAG_STGMEDIUM; /* size: 0x0010 */

struct wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&CloseHandle>
{
}; /* size: 0x0001 */

class wil::details::<lambda_002d0cf30f23e5476abf381adf4b4634>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,__int64,-1,void *>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumGUID>
{
}; /* size: 0x0008 */

typedef struct _PROPSHEETHEADERW_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndParent;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszCaption;
  /* 0x0028 */ unsigned int nPages;
  /* 0x002c */ long Padding_630;
  union
  {
    /* 0x0030 */ unsigned int nStartPage;
    /* 0x0030 */ const wchar_t* pStartPage;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ const struct _PROPSHEETPAGEW* ppsp;
    /* 0x0038 */ struct _PSP** phpage;
  }; /* size: 0x0008 */
  /* 0x0040 */ void* pfnCallback /* function */;
  union
  {
    /* 0x0048 */ struct HBITMAP__* hbmWatermark;
    /* 0x0048 */ const wchar_t* pszbmWatermark;
  }; /* size: 0x0008 */
  /* 0x0050 */ struct HPALETTE__* hplWatermark;
  union
  {
    /* 0x0058 */ struct HBITMAP__* hbmHeader;
    /* 0x0058 */ const wchar_t* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETHEADERW_V2, *PPROPSHEETHEADERW_V2; /* size: 0x0060 */

typedef struct _KLDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ void* ExceptionTable;
  /* 0x0018 */ unsigned long ExceptionTableSize;
  /* 0x001c */ long Padding_631;
  /* 0x0020 */ void* GpValue;
  /* 0x0028 */ struct _NON_PAGED_DEBUG_INFO* NonPagedDebugInfo;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_632;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x006e */ unsigned short SignatureLevel : 4; /* bit position: 0 */
        /* 0x006e */ unsigned short SignatureType : 3; /* bit position: 4 */
        /* 0x006e */ unsigned short Frozen : 2; /* bit position: 7 */
        /* 0x006e */ unsigned short HotPatch : 1; /* bit position: 9 */
        /* 0x006e */ unsigned short Unused : 6; /* bit position: 10 */
      }; /* bitfield */
      /* 0x006e */ unsigned short EntireField;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ u1;
  /* 0x0070 */ void* SectionPointer;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long CoverageSectionSize;
  /* 0x0080 */ void* CoverageSection;
  /* 0x0088 */ void* LoadedImports;
  union
  {
    /* 0x0090 */ void* Spare;
    /* 0x0090 */ struct _KLDR_DATA_TABLE_ENTRY* NtDataTableEntry;
  }; /* size: 0x0008 */
  /* 0x0098 */ unsigned long SizeOfImageNotRounded;
  /* 0x009c */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY, *PKLDR_DATA_TABLE_ENTRY; /* size: 0x00a0 */

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_633;
  /* 0x0008 */ struct _GUID* pgActionID;
  /* 0x0010 */ wchar_t* pwszDllName;
  /* 0x0018 */ char* pwszLoadCallbackDataFunctionName;
  /* 0x0020 */ char* pwszFreeCallbackDataFunctionName;
} CRYPT_PROVIDER_REGDEFUSAGE, *PCRYPT_PROVIDER_REGDEFUSAGE; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::ErrorHelper<16>
{
}; /* size: 0x0001 */

class std::system_error
{
}; /* size: 0x0020 */

struct Windows::Foundation::IReferenceArray<IInspectable *>
{
}; /* size: 0x0008 */

struct IUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
}; /* size: 0x0018 */

struct IEnumSTATDATA
{
}; /* size: 0x0008 */

struct IObjectArray
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IPersist,IPersistPropertyBag>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct _MINIDUMP_TOKEN_INFO_LIST
{
  /* 0x0000 */ unsigned long TokenListSize;
  /* 0x0004 */ unsigned long TokenListEntries;
  /* 0x0008 */ unsigned long ListHeaderSize;
  /* 0x000c */ unsigned long ElementHeaderSize;
} MINIDUMP_TOKEN_INFO_LIST, *PMINIDUMP_TOKEN_INFO_LIST; /* size: 0x0010 */

struct wil::details::handle_invalid_resource_policy<int (__cdecl*)(void *),&FindClose>
{
}; /* size: 0x0001 */

struct OleDragDropTracing::StaticHandle
{
  /* 0x0000 */ const struct _tlgProvider_t* handle;
}; /* size: 0x0008 */

class OleDragDropTracing
{
  /* 0x0000 */ long Padding_634[6];
  /* 0x0018 */ struct OleDragDropTracing::StaticHandle m_staticHandle;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>
{
}; /* size: 0x0008 */

class stdext::bad_array_new_length
{
}; /* size: 0x0010 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Activation::BackgroundActivatedEventArgs *,Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs *> >
{
}; /* size: 0x0008 */

typedef struct _NDR64_POINTER_REPEAT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char SetCorrMark : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 7; /* bit position: 1 */
  }; /* bitfield */
} NDR64_POINTER_REPEAT_FLAGS, *PNDR64_POINTER_REPEAT_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_REPEAT_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ struct _NDR64_POINTER_REPEAT_FLAGS Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Increment;
  /* 0x0008 */ unsigned int OffsetToArray;
  /* 0x000c */ unsigned int NumberOfPointers;
} NDR64_REPEAT_FORMAT, *PNDR64_REPEAT_FORMAT; /* size: 0x0010 */

typedef struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned int Offset;
  /* 0x0004 */ unsigned int Reserved;
} NDR64_POINTER_INSTANCE_HEADER_FORMAT, *PNDR64_POINTER_INSTANCE_HEADER_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_POINTER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_635;
  /* 0x0008 */ const void* Pointee;
} NDR64_POINTER_FORMAT, *PNDR64_POINTER_FORMAT; /* size: 0x0010 */

struct Windows::Foundation::IReferenceArray<Windows::Foundation::Size>
{
}; /* size: 0x0008 */

struct IOleInPlaceUIWindow
{
}; /* size: 0x0008 */

class CLimitedWritableStorage::RenameElement::__l2::<lambda_c44edb339ff6223e663ad4cffd1e49bf>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsOldName;
  /* 0x0010 */ const wchar_t*& pwcsNewName;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IVectorView<double>
{
}; /* size: 0x0008 */

struct std::_Container_proxy
{
  /* 0x0000 */ const struct std::_Container_base12* _Mycont;
  /* 0x0008 */ struct std::_Iterator_base12* _Myfirstiter;
}; /* size: 0x0010 */

struct tagEMRINVERTRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned char RgnData[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

typedef struct _PUBLICKEYSTRUC
{
  /* 0x0000 */ unsigned char bType;
  /* 0x0001 */ unsigned char bVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned int aiKeyAlg;
} PUBLICKEYSTRUC, *PPUBLICKEYSTRUC; /* size: 0x0008 */

struct SYMSRV_INDEX_INFOW
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ wchar_t file[261];
  /* 0x020e */ char Padding_636[2];
  /* 0x0210 */ int stripped;
  /* 0x0214 */ unsigned long timestamp;
  /* 0x0218 */ unsigned long size;
  /* 0x021c */ wchar_t dbgfile[261];
  /* 0x0426 */ wchar_t pdbfile[261];
  /* 0x0630 */ struct _GUID guid;
  /* 0x0640 */ unsigned long sig;
  /* 0x0644 */ unsigned long age;
}; /* size: 0x0648 */

typedef struct _IMAGEHLP_STACK_FRAME
{
  /* 0x0000 */ unsigned __int64 InstructionOffset;
  /* 0x0008 */ unsigned __int64 ReturnOffset;
  /* 0x0010 */ unsigned __int64 FrameOffset;
  /* 0x0018 */ unsigned __int64 StackOffset;
  /* 0x0020 */ unsigned __int64 BackingStoreOffset;
  /* 0x0028 */ unsigned __int64 FuncTableEntry;
  /* 0x0030 */ unsigned __int64 Params[4];
  /* 0x0050 */ unsigned __int64 Reserved[5];
  /* 0x0078 */ int Virtual;
  /* 0x007c */ unsigned long Reserved2;
} IMAGEHLP_STACK_FRAME, *PIMAGEHLP_STACK_FRAME; /* size: 0x0080 */

typedef struct _FILE_TRACKING_INFORMATION
{
  /* 0x0000 */ void* DestinationFile;
  /* 0x0008 */ unsigned long ObjectInformationLength;
  /* 0x000c */ char ObjectInformation[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_TRACKING_INFORMATION, *PFILE_TRACKING_INFORMATION; /* size: 0x0010 */

struct tagPOINTER_INFO
{
  /* 0x0000 */ unsigned long pointerType;
  /* 0x0004 */ unsigned int pointerId;
  /* 0x0008 */ unsigned int frameId;
  /* 0x000c */ unsigned int pointerFlags;
  /* 0x0010 */ void* sourceDevice;
  /* 0x0018 */ struct HWND__* hwndTarget;
  /* 0x0020 */ struct tagPOINT ptPixelLocation;
  /* 0x0028 */ struct tagPOINT ptHimetricLocation;
  /* 0x0030 */ struct tagPOINT ptPixelLocationRaw;
  /* 0x0038 */ struct tagPOINT ptHimetricLocationRaw;
  /* 0x0040 */ unsigned long dwTime;
  /* 0x0044 */ unsigned int historyCount;
  /* 0x0048 */ int InputData;
  /* 0x004c */ unsigned long dwKeyStates;
  /* 0x0050 */ unsigned __int64 PerformanceCount;
  /* 0x0058 */ enum tagPOINTER_BUTTON_CHANGE_TYPE ButtonChangeType;
  /* 0x005c */ long __PADDING__[1];
}; /* size: 0x0060 */

typedef struct _IMAGELISTDRAWPARAMS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_637;
  /* 0x0008 */ struct _IMAGELIST* himl;
  /* 0x0010 */ int i;
  /* 0x0014 */ long Padding_638;
  /* 0x0018 */ struct HDC__* hdcDst;
  /* 0x0020 */ int x;
  /* 0x0024 */ int y;
  /* 0x0028 */ int cx;
  /* 0x002c */ int cy;
  /* 0x0030 */ int xBitmap;
  /* 0x0034 */ int yBitmap;
  /* 0x0038 */ unsigned long rgbBk;
  /* 0x003c */ unsigned long rgbFg;
  /* 0x0040 */ unsigned int fStyle;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ unsigned long fState;
  /* 0x004c */ unsigned long Frame;
  /* 0x0050 */ unsigned long crEffect;
  /* 0x0054 */ long __PADDING__[1];
} IMAGELISTDRAWPARAMS, *PIMAGELISTDRAWPARAMS; /* size: 0x0058 */

struct HWILFAILUREWATCH__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class wil::details::unique_storage<wil::details::resource_policy<_CERT_CONTEXT const *,int (__cdecl*)(_CERT_CONTEXT const *),&CertFreeCertificateContext,wistd::integral_constant<unsigned __int64,0>,_CERT_CONTEXT const *,_CERT_CONTEXT const *,0,std::nullptr_t> >
{
  /* 0x0000 */ const struct _CERT_CONTEXT* m_ptr;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassBase
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<HDC__ *,void (__cdecl*)(wil::paint_dc) noexcept,&wil::paint_dc::close,wistd::integral_constant<unsigned __int64,0>,wil::paint_dc,HDC__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::paint_dc m_ptr;
}; /* size: 0x0050 */

typedef struct _FULL_PTR_XLAT_TABLES
{
  /* 0x0000 */ void* RefIdToPointer;
  /* 0x0008 */ void* PointerToRefId;
  /* 0x0010 */ unsigned long NextRefId;
  /* 0x0014 */ enum XLAT_SIDE XlatSide;
} FULL_PTR_XLAT_TABLES, *PFULL_PTR_XLAT_TABLES; /* size: 0x0018 */

typedef struct _QUERY_DIRECT_ACCESS_EXTENTS
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Reserved;
} QUERY_DIRECT_ACCESS_EXTENTS, *PQUERY_DIRECT_ACCESS_EXTENTS; /* size: 0x0018 */

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long cValue;
  /* 0x000c */ long Padding_639;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY; /* size: 0x0018 */

class CBrokeredClipDataObject::GetDataHere::__l24::<lambda_778d8f53ba4b57ebec80ff68c1cbb2d8>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ struct tagFORMATETC*& pformatetc;
  /* 0x0010 */ struct tagSTGMEDIUM& localMedium;
}; /* size: 0x0018 */

struct wil::details::shared_object<wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_640;
  /* 0x0008 */ class wil::ActivityBase<ComTrace,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<ComTrace,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

struct RETRIEVAL_POINTERS_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ long Padding_641;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER NextVcn;
    /* 0x0018 */ union _LARGE_INTEGER Lcn;
  } /* size: 0x0010 */ Extents[1];
}; /* size: 0x0020 */

typedef struct _STREAM_EXTENT_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_642;
  union
  {
    /* 0x0008 */ struct RETRIEVAL_POINTERS_BUFFER RetrievalPointers;
  } /* size: 0x0020 */ ExtentInformation;
} STREAM_EXTENT_ENTRY, *PSTREAM_EXTENT_ENTRY; /* size: 0x0028 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Collections::IPropertySet *,1>
{
}; /* size: 0x0008 */

typedef struct _RTL_FEATURE_USAGE_SUBSCRIPTION_DETAILS
{
  /* 0x0000 */ unsigned int FeatureId;
  /* 0x0004 */ unsigned short ReportingKind;
  /* 0x0006 */ unsigned short ReportingOptions;
  /* 0x0008 */ struct _RTL_FEATURE_USAGE_SUBSCRIPTION_TARGET ReportingTarget;
} RTL_FEATURE_USAGE_SUBSCRIPTION_DETAILS, *PRTL_FEATURE_USAGE_SUBSCRIPTION_DETAILS; /* size: 0x0010 */

typedef struct _SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE_ENTRY
{
  /* 0x0000 */ unsigned long Remove;
  /* 0x0004 */ struct _RTL_FEATURE_USAGE_SUBSCRIPTION_DETAILS Details;
} SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE_ENTRY, *PSYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE_ENTRY; /* size: 0x0014 */

struct wistd::__compressed_pair_elem<unsigned int *,0,0>
{
  /* 0x0000 */ unsigned int* __value_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<__int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<unsigned int,IWeakReference *>
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<char *,0,0>
{
  /* 0x0000 */ char* __value_;
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_SYMBOL_SRC
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ unsigned long type;
  /* 0x0008 */ char file[260];
} IMAGEHLP_SYMBOL_SRC, *PIMAGEHLP_SYMBOL_SRC; /* size: 0x010c */

class wil::details::unique_storage<wil::details::handle_null_only_resource_policy<int (__cdecl*)(void *),&CloseHandle> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

struct std::_Iterator_base12
{
  union
  {
    /* 0x0000 */ const BOOL _Unwrap_when_unverified;
    /* 0x0000 */ struct std::_Container_proxy* _Myproxy;
  }; /* size: 0x0008 */
  /* 0x0008 */ struct std::_Iterator_base12* _Mynextiter;
}; /* size: 0x0010 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<4,0,1,3> >
{
} tlgDataDescInit<_tlgIndexSequence<4,0,1,3> >, *PtlgDataDescInit<_tlgIndexSequence<4,0,1,3> >; /* size: 0x0001 */

typedef struct _PROCESS_SYSCALL_PROVIDER_INFORMATION
{
  /* 0x0000 */ struct _GUID ProviderId;
  /* 0x0010 */ unsigned char Level;
  /* 0x0011 */ char __PADDING__[3];
} PROCESS_SYSCALL_PROVIDER_INFORMATION, *PPROCESS_SYSCALL_PROVIDER_INFORMATION; /* size: 0x0014 */

class RegistryKey::ValueInformationClass<_KEY_VALUE_PARTIAL_INFORMATION_ALIGN64>
{
  /* 0x0000 */ enum _KEY_VALUE_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

struct wil::details::resource_policy<wil::details::folder_change_reader_state *,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wistd::integral_constant<unsigned __int64,2>,wil::details::folder_change_reader_state *,wil::details::folder_change_reader_state *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<unsigned int,__int64>
{
}; /* size: 0x0001 */

class IntTraits<int>
{
  union
  {
    /* 0x0000 */ const int maxInt;
    /* 0x0000 */ const int minInt;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IShareCompletedEventArgs *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

class RegistryKey::KeyInformationClass<_KEY_BASIC_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

typedef struct _QUERY_BAD_RANGES_OUTPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumBadRanges;
  /* 0x0008 */ unsigned __int64 NextOffsetToLookUp;
  /* 0x0010 */ struct _QUERY_BAD_RANGES_OUTPUT_RANGE BadRanges[1];
} QUERY_BAD_RANGES_OUTPUT, *PQUERY_BAD_RANGES_OUTPUT; /* size: 0x0028 */

class RegistryKey::KeyInformationClass<_KEY_FULL_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

class AdHocCallFrame<ISearchProtocol,<lambda_df48ef4dbe2e03a3af657bac67c3638a> >
{
  /* 0x0000 */ long Padding_643[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::ShutDown::__l2::<lambda_df48ef4dbe2e03a3af657bac67c3638a>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class RegistryKey::KeyInformationClass<_KEY_NAME_INFORMATION>
{
  /* 0x0000 */ enum _KEY_INFORMATION_CLASS Class;
}; /* size: 0x0001 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_V1
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ unsigned short ValueType;
  /* 0x0012 */ unsigned short Reserved;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long ValueCount;
  /* 0x001c */ long Padding_644;
  union
  {
    union
    {
      /* 0x0020 */ __int64* pInt64;
      /* 0x0020 */ unsigned __int64* pUint64;
      /* 0x0020 */ struct _UNICODE_STRING* pString;
      /* 0x0020 */ struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE* pFqbn;
      /* 0x0020 */ struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE* pOctetString;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Values;
} TOKEN_SECURITY_ATTRIBUTE_V1, *PTOKEN_SECURITY_ATTRIBUTE_V1; /* size: 0x0028 */

struct _Mtx_internal_imp_t;

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>;

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,1>
{
}; /* size: 0x0001 */

class wil::unique_call<long (__cdecl*)(void),&CoRevertToSelf,1>
{
  /* 0x0000 */ BOOL m_call;
}; /* size: 0x0001 */

struct tagEMRPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
}; /* size: 0x0020 */

struct AUDIT_CALLBACK_INFO
{
  /* 0x0000 */ wchar_t* sourceDescription;
  /* 0x0008 */ wchar_t* targetDescription;
  /* 0x0010 */ wchar_t* dataDescription;
  /* 0x0018 */ enum EDP_AUDIT_ACTION action;
  /* 0x001c */ unsigned long targetProcessId;
  /* 0x0020 */ wchar_t* targetAppId;
  /* 0x0028 */ wchar_t* dataFilePaths;
}; /* size: 0x0030 */

struct tagPOINTF
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> >
{
}; /* size: 0x0008 */

class MultiplicationHelper<unsigned long,unsigned __int64,8>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _WNF_EDP_TAGGED_APP_LAUNCHED_DATA
{
  /* 0x0000 */ enum _EDP_TAGGED_APP_MODE Mode;
  /* 0x0004 */ long Padding_645;
  /* 0x0008 */ struct _UNICODE_STRING AppFilePath;
  /* 0x0018 */ struct _UNICODE_STRING EnterpriseId;
} WNF_EDP_TAGGED_APP_LAUNCHED_DATA, *PWNF_EDP_TAGGED_APP_LAUNCHED_DATA; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0008 */

struct DISPLAYCONFIG_PATH_SOURCE_INFO
{
  /* 0x0000 */ struct _LUID adapterId;
  /* 0x0008 */ unsigned int id;
  union
  {
    /* 0x000c */ unsigned int modeInfoIdx;
    struct /* bitfield */
    {
      /* 0x000c */ unsigned int cloneGroupId : 16; /* bit position: 0 */
      /* 0x000c */ unsigned int sourceModeInfoIdx : 16; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0010 */ unsigned int statusFlags;
}; /* size: 0x0014 */

struct CMemString_PolicyLocalMem
{
}; /* size: 0x0001 */

typedef struct __midl_frag35_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag35_t, *P_midl_frag35_t; /* size: 0x0030 */

struct Windows::Foundation::Collections::IObservableVector<HSTRING__ *>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0>
{
}; /* size: 0x0001 */

class wil::details::<lambda_ee7b3ed02c85df2483c714df6999f530>
{
}; /* size: 0x0001 */

class std::underflow_error
{
}; /* size: 0x0010 */

typedef struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long AttributeCount;
  union
  {
    /* 0x0008 */ struct _TOKEN_SECURITY_ATTRIBUTE_V1* pAttributeV1;
  } /* size: 0x0008 */ Attribute;
} TOKEN_SECURITY_ATTRIBUTES_INFORMATION, *PTOKEN_SECURITY_ATTRIBUTES_INFORMATION; /* size: 0x0010 */

typedef struct _s__ThrowInfo
{
  /* 0x0000 */ unsigned int attributes;
  /* 0x0004 */ void* pmfnUnwind /* function */;
  /* 0x000c */ void* pForwardCompat /* function */;
  /* 0x0014 */ const struct _s__CatchableTypeArray* pCatchableTypeArray;
} s__ThrowInfo, *Ps__ThrowInfo; /* size: 0x001c */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::IExtensionRegistration *>
{
}; /* size: 0x0001 */

typedef struct __vcrt_assert_va_start_is_not_reference<_UNICODE_STRING *>
{
} _vcrt_assert_va_start_is_not_reference<_UNICODE_STRING *>, *P_vcrt_assert_va_start_is_not_reference<_UNICODE_STRING *>; /* size: 0x0001 */

class ARI::AutoPtrAriHeap<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,unsigned int>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,IWeakReferenceSource>
{
}; /* size: 0x0010 */

class CAutoHandle_HGLOBALPolicy
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<__int64>
{
}; /* size: 0x0001 */

typedef struct _MINIDUMP_MISC_INFO_4
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
  /* 0x002c */ unsigned int ProcessIntegrityLevel;
  /* 0x0030 */ unsigned int ProcessExecuteFlags;
  /* 0x0034 */ unsigned int ProtectedProcess;
  /* 0x0038 */ unsigned int TimeZoneId;
  /* 0x003c */ struct _TIME_ZONE_INFORMATION TimeZone;
  /* 0x00e8 */ wchar_t BuildString[260];
  /* 0x02f0 */ wchar_t DbgBldStr[40];
} MINIDUMP_MISC_INFO_4, *PMINIDUMP_MISC_INFO_4; /* size: 0x0340 */

struct wil::details::midl_allocator
{
}; /* size: 0x0001 */

typedef struct _IO_STATUS_BLOCK
{
  union
  {
    /* 0x0000 */ long Status;
    /* 0x0000 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 Information;
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK; /* size: 0x0010 */

typedef struct _SYSTEM_POINTER_AUTH_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned short SupportedFlags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short AddressAuthSupported : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short AddressAuthQarma : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned short GenericAuthSupported : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned short GenericAuthQarma : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned short SupportedReserved : 12; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0002 */ unsigned short EnabledFlags;
    struct /* bitfield */
    {
      /* 0x0002 */ unsigned short UserPerProcessIpAuthEnabled : 1; /* bit position: 0 */
      /* 0x0002 */ unsigned short UserGlobalIpAuthEnabled : 1; /* bit position: 1 */
      /* 0x0002 */ unsigned short UserEnabledReserved : 6; /* bit position: 2 */
      /* 0x0002 */ unsigned short KernelIpAuthEnabled : 1; /* bit position: 8 */
      /* 0x0002 */ unsigned short KernelEnabledReserved : 7; /* bit position: 9 */
    }; /* bitfield */
  }; /* size: 0x0002 */
} SYSTEM_POINTER_AUTH_INFORMATION, *PSYSTEM_POINTER_AUTH_INFORMATION; /* size: 0x0004 */

typedef struct _EDP_CRED_SVC_INFO_CXT
{
  /* 0x0000 */ unsigned long cbSize;
  union
  {
    struct
    {
      /* 0x0004 */ struct _FILETIME ftRevocationTimeSince;
      /* 0x000c */ struct _GUID CredentialGuid;
    } /* size: 0x0018 */ RevocationInfo;
    struct
    {
      /* 0x0004 */ unsigned long CredentialLevel;
    } /* size: 0x0004 */ ConsumerDplStateInfo;
    struct
    {
      /* 0x0004 */ unsigned long CredentialLevel;
      /* 0x0008 */ wchar_t wszCredentialId[1];
      /* 0x000a */ char __PADDING__[2];
    } /* size: 0x0008 */ CredentialKeyID;
    struct
    {
      /* 0x0004 */ unsigned char pbAppIdSalt[32];
      /* 0x0024 */ unsigned char pbAppIdHash[32];
      /* 0x0044 */ unsigned long KeyIDOffset;
      /* 0x0048 */ unsigned long KeyIDSize;
      /* 0x004c */ struct _GUID CryptoSession;
      /* 0x005c */ unsigned long dwProtectionSequence;
      /* 0x0060 */ unsigned long dwKdfVcn;
      /* 0x0064 */ unsigned long CredentialLevel;
      /* 0x0068 */ wchar_t wszCredentialId[1];
      /* 0x006a */ char __PADDING__[2];
    } /* size: 0x0068 */ AppKeyCacheInfo;
  }; /* size: 0x0068 */
} EDP_CRED_SVC_INFO_CXT, *PEDP_CRED_SVC_INFO_CXT; /* size: 0x006c */

struct Windows::Foundation::TimeSpan
{
  /* 0x0000 */ __int64 Duration;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View>
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::View* ptr_;
}; /* size: 0x0008 */

class std::reverse_iterator<std::_String_view_iterator<std::char_traits<char> > >;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<CEnumCategoriesOfCatalogClass>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct tagEMRTRANSPARENTBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> >
{
}; /* size: 0x0008 */

typedef struct _SE_SAFE_OPEN_PROMPT_RESULTS
{
  /* 0x0000 */ enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS Results;
  /* 0x0004 */ wchar_t Path[260];
} SE_SAFE_OPEN_PROMPT_RESULTS, *PSE_SAFE_OPEN_PROMPT_RESULTS; /* size: 0x020c */

typedef struct _SE_CODEINTEGRITY_ORIGIN_CLAIM
{
  /* 0x0000 */ struct _SE_SAFE_OPEN_PROMPT_RESULTS PromptResults;
  /* 0x020c */ long Padding_646;
  /* 0x0210 */ struct _SINGLE_LIST_ENTRY AppIdTaggingClaimsHead;
} SE_CODEINTEGRITY_ORIGIN_CLAIM, *PSE_CODEINTEGRITY_ORIGIN_CLAIM; /* size: 0x0218 */

class Microsoft::WRL::ComPtr<IDragDropContainerProxy>
{
  /* 0x0000 */ struct IDragDropContainerProxy* ptr_;
}; /* size: 0x0008 */

struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer
{
}; /* size: 0x0008 */

typedef struct _STORAGE_RESERVE_AREA_INFO
{
  /* 0x0000 */ enum _STORAGE_RESERVE_ID Id;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ __int64 SpaceGuarantee;
  /* 0x0010 */ __int64 SpaceUsed;
} STORAGE_RESERVE_AREA_INFO, *PSTORAGE_RESERVE_AREA_INFO; /* size: 0x0018 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0>
{
}; /* size: 0x0001 */

struct IInternetSecurityMgrSite
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumSTATSTG> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>* ptr_;
}; /* size: 0x0008 */

struct tagOleMenuGroupWidths
{
  /* 0x0000 */ long width[6];
}; /* size: 0x0018 */

struct tagOLEMENUITEM
{
  /* 0x0000 */ unsigned int item;
  /* 0x0004 */ unsigned short fwPopup;
  /* 0x0006 */ char Padding_647[2];
  /* 0x0008 */ int fObjectMenu;
}; /* size: 0x000c */

struct tagOLEMENU
{
  /* 0x0000 */ unsigned short wSignature;
  /* 0x0002 */ char Padding_648[2];
  /* 0x0004 */ unsigned long hwndFrame;
  /* 0x0008 */ unsigned long hmenuCombined;
  /* 0x000c */ struct tagOleMenuGroupWidths MenuWidths;
  /* 0x0024 */ long lMenuCnt;
  /* 0x0028 */ struct tagOLEMENUITEM menuitem[1];
}; /* size: 0x0034 */

typedef struct _MIDL_STUB_DESC
{
  /* 0x0000 */ void* RpcInterfaceInformation;
  /* 0x0008 */ void* pfnAllocate /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
  union
  {
    union
    {
      /* 0x0018 */ void** pAutoHandle;
      /* 0x0018 */ void** pPrimitiveHandle;
      /* 0x0018 */ struct __GENERIC_BINDING_INFO* pGenericBindingInfo;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ IMPLICIT_HANDLE_INFO;
  /* 0x0020 */ void* const* apfnNdrRundownRoutines /* function */;
  /* 0x0028 */ const struct _GENERIC_BINDING_ROUTINE_PAIR* aGenericBindingRoutinePairs;
  /* 0x0030 */ void* const* apfnExprEval /* function */;
  /* 0x0038 */ const struct _XMIT_ROUTINE_QUINTUPLE* aXmitQuintuple;
  /* 0x0040 */ const unsigned char* pFormatTypes;
  /* 0x0048 */ int fCheckBounds;
  /* 0x004c */ unsigned long Version;
  /* 0x0050 */ struct _MALLOC_FREE_STRUCT* pMallocFreeStruct;
  /* 0x0058 */ long MIDLVersion;
  /* 0x005c */ long Padding_649;
  /* 0x0060 */ const struct _COMM_FAULT_OFFSETS* CommFaultOffsets;
  /* 0x0068 */ const struct _USER_MARSHAL_ROUTINE_QUADRUPLE* aUserMarshalQuadruple;
  /* 0x0070 */ void* const* NotifyRoutineTable /* function */;
  /* 0x0078 */ unsigned __int64 mFlags;
  /* 0x0080 */ const struct _NDR_CS_ROUTINES* CsRoutineTables;
  /* 0x0088 */ void* ProxyServerInfo;
  /* 0x0090 */ const struct _NDR_EXPR_DESC* pExprInfo;
} MIDL_STUB_DESC, *PMIDL_STUB_DESC; /* size: 0x0098 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IClipboardTaskCompletion,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _GENERIC_BINDING_ROUTINE_PAIR
{
  /* 0x0000 */ void* pfnBind /* function */;
  /* 0x0008 */ void* pfnUnbind /* function */;
} GENERIC_BINDING_ROUTINE_PAIR, *PGENERIC_BINDING_ROUTINE_PAIR; /* size: 0x0010 */

struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IPropertySet *,1>
{
}; /* size: 0x0008 */

struct IMalloc
{
}; /* size: 0x0008 */

struct IBindStatusCallbackEx
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::VectorChangedEventHandler<IInspectable *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragOperation> >;

class Microsoft::WRL::Wrappers::Semaphore
{
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComClassIterator> const >;

struct _NDR_CORRELATION_INFO;

typedef struct _SCOPE_TABLE_ARM
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE_ARM, *PSCOPE_TABLE_ARM; /* size: 0x0014 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>
{
}; /* size: 0x0001 */

typedef struct _TAPE_GET_POSITION
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
} TAPE_GET_POSITION, *PTAPE_GET_POSITION; /* size: 0x0010 */

typedef struct _COSERVERINFO
{
  /* 0x0000 */ unsigned long dwReserved1;
  /* 0x0004 */ long Padding_650;
  /* 0x0008 */ wchar_t* pwszName;
  /* 0x0010 */ struct _COAUTHINFO* pAuthInfo;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ long __PADDING__[1];
} COSERVERINFO, *PCOSERVERINFO; /* size: 0x0020 */

struct IActivationFilter
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<CEnumCategoriesOfCatalogClass>
{
  /* 0x0000 */ class CEnumCategoriesOfCatalogClass* ptr_;
}; /* size: 0x0008 */

typedef struct _NT_TIB
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0008 */ void* StackBase;
  /* 0x0010 */ void* StackLimit;
  /* 0x0018 */ void* SubSystemTib;
  union
  {
    /* 0x0020 */ void* FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ void* ArbitraryUserPointer;
  /* 0x0030 */ struct _NT_TIB* Self;
} NT_TIB, *PNT_TIB; /* size: 0x0038 */

struct std::bidirectional_iterator_tag
{
}; /* size: 0x0001 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator
{
  /* 0x0000 */ long Padding_651[8];
  /* 0x0020 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> _spChunk;
  /* 0x0028 */ unsigned int _uIndex;
}; /* size: 0x0030 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

typedef struct __vcrt_assert_va_start_is_not_reference<unsigned short const *>
{
} _vcrt_assert_va_start_is_not_reference<unsigned short const *>, *P_vcrt_assert_va_start_is_not_reference<unsigned short const *>; /* size: 0x0001 */

class std::recursive_timed_mutex
{
  /* 0x0000 */ class std::mutex _My_mutex;
  /* 0x0050 */ class std::condition_variable _My_cond;
  /* 0x0098 */ unsigned int _My_locked;
  /* 0x009c */ class std::thread::id _My_owner;
}; /* size: 0x00a0 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_66b7a6286732428a0ea956db203c323e>
{
}; /* size: 0x0001 */

struct IConversionClass
{
}; /* size: 0x0008 */

class wistd::__compressed_pair<Microsoft::WRL::ComPtr<IUnknown> *,wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<Microsoft::WRL::ComPtr<IUnknown> [0],wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >
{
  /* 0x0000 */ class wistd::__compressed_pair<Microsoft::WRL::ComPtr<IUnknown> *,wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> > __ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<bool>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<__int64,double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

typedef struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ unsigned long TotalExtentCount;
  /* 0x0008 */ unsigned char Extents[1];
  /* 0x0009 */ char __PADDING__[3];
} FSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT, *PFSCTL_QUERY_GHOSTED_FILE_EXTENTS_OUTPUT; /* size: 0x000c */

struct Windows::Foundation::Collections::IObservableVector_impl<float>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>
{
}; /* size: 0x0008 */

class AppRegistration
{
  /* 0x0000 */ struct _GUID appid;
  /* 0x0010 */ const wchar_t* appName;
  /* 0x0018 */ int dllSurrogate;
  /* 0x001c */ long Padding_652;
  /* 0x0020 */ struct HINSTANCE__* hModuleSurrogate;
}; /* size: 0x0028 */

typedef struct _SECTION_IMAGE_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_653;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  union
  {
    struct
    {
      /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
      /* 0x002a */ unsigned short MinorOperatingSystemVersion;
    }; /* size: 0x0004 */
    /* 0x0028 */ unsigned long OperatingSystemVersion;
  }; /* size: 0x0004 */
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION64, *PSECTION_IMAGE_INFORMATION64; /* size: 0x0040 */

class Microsoft::WRL::Details::DontUseNewUseMake
{
}; /* size: 0x0001 */

struct std::allocator_traits<std::allocator<char16_t> >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<IInspectable *,1>
{
}; /* size: 0x0008 */

class wil::unique_call<void (__cdecl*)(void),&RoUninitialize,1>
{
  /* 0x0000 */ BOOL m_call;
}; /* size: 0x0001 */

class CTSmartPtr<unsigned char,CTContainer_PolicyCoTaskMem>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<__int64>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsBase
{
}; /* size: 0x0001 */

struct wistd::unique_ptr<unsigned short [0],wil::cotaskmem_secure_deleter>::_CheckArrayPointerConversion<unsigned short *>
{
}; /* size: 0x0001 */

struct wistd::__make_signed<short,1>
{
}; /* size: 0x0001 */

typedef struct _TAPE_SET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long EOTWarningZoneSize;
} TAPE_SET_DRIVE_PARAMETERS, *PTAPE_SET_DRIVE_PARAMETERS; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::DocumentProperties *,Windows::Storage::FileProperties::IDocumentProperties *>;

struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IOutputStream *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > const >;

typedef struct _CERT_RDN
{
  /* 0x0000 */ unsigned long cRDNAttr;
  /* 0x0004 */ long Padding_654;
  /* 0x0008 */ struct _CERT_RDN_ATTR* rgRDNAttr;
} CERT_RDN, *PCERT_RDN; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>
{
}; /* size: 0x0008 */

class wil::details::static_lazy<OleClipboardTracing>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[32];
}; /* size: 0x0028 */

struct IMessageFilter
{
}; /* size: 0x0008 */

struct _TP_WORK;

struct tagSAmdRegs
{
  /* 0x0000 */ __int64* prt;
  /* 0x0008 */ void* pArgs;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IOutputStream *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> >
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>* ptr_;
}; /* size: 0x0008 */

class CEnumCategoriesOfCatalogClass
{
  /* 0x0000 */ long Padding_655[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > _categories;
  /* 0x0018 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > _categoriesIterator;
  /* 0x0020 */ unsigned long _iteratorPosition;
}; /* size: 0x0028 */

class Windows::Foundation::Collections::Internal::VectorChangedEventArgs
{
  /* 0x0000 */ long Padding_656[8];
  /* 0x0020 */ enum Windows::Foundation::Collections::CollectionChange _change;
  /* 0x0024 */ unsigned int _index;
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_8f209e3226c23f8bae7b997f49b3337d>
{
}; /* size: 0x0001 */

struct OAUTIL
{
  /* 0x0000 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0008 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0010 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0018 */ int m_fWorkingOnInParam;
  /* 0x001c */ int m_fWorkingOnOutParam;
  /* 0x0020 */ int m_fDoNotWalkInterfaces;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

class wistd::unique_ptr<_TOKEN_PRIMARY_GROUP,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_TOKEN_PRIMARY_GROUP *,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> > __ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0001 */

struct NEWHEADER
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short ResType;
  /* 0x0004 */ unsigned short ResCount;
}; /* size: 0x0006 */

typedef struct _CERT_STORE_PROV_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cStoreProvFunc;
  /* 0x0008 */ void** rgpvStoreProvFunc;
  /* 0x0010 */ void* hStoreProv;
  /* 0x0018 */ unsigned long dwStoreProvFlags;
  /* 0x001c */ long Padding_657;
  /* 0x0020 */ void* hStoreProvFuncAddr2;
} CERT_STORE_PROV_INFO, *PCERT_STORE_PROV_INFO; /* size: 0x0028 */

class Microsoft::WRL::ComPtr<CEnumFmt>
{
  /* 0x0000 */ class CEnumFmt* ptr_;
}; /* size: 0x0008 */

class AdditionMethod<unsigned int,unsigned __int64>
{
}; /* size: 0x0001 */

struct OLEAUTOMATION_FUNCTIONS
{
  /* 0x0000 */ struct HINSTANCE__* hOleAut32;
  /* 0x0008 */ int fProcAddressesLoaded;
  /* 0x000c */ long Padding_658;
  /* 0x0010 */ struct _USER_MARSHAL_ROUTINE_QUADRUPLE UserMarshalRoutines[3];
  /* 0x0070 */ struct _OA_SAFEARRAY_USER_MARSHAL_ROUTINE_TRIPLE oaSafeArrayUserMarshalRoutines;
}; /* size: 0x0088 */

class wil::details::unique_storage<wil::details::resource_policy<char *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,char *,char *,0,std::nullptr_t> >
{
  /* 0x0000 */ char* m_ptr;
}; /* size: 0x0008 */

class DISABLED_FEATURES
{
  union
  {
    /* 0x0000 */ int s_fDisableAll;
    /* 0x0000 */ int s_fDisableTypelibs;
    /* 0x0000 */ int s_fDisableDispatch;
    /* 0x0000 */ int s_fDisableAllForOle32;
    /* 0x0000 */ int s_fDisableDispatchForOle32;
    /* 0x0000 */ union _RTL_RUN_ONCE s_InitOnce;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

struct DragDropLogging::StaticHandle
{
  /* 0x0000 */ const struct _tlgProvider_t* handle;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<short,1>
{
}; /* size: 0x0008 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_V2
{
  /* 0x0000 */ unsigned __int64 ClientSession;
  /* 0x0008 */ void* ClientProcess;
} FILE_PIPE_CLIENT_PROCESS_BUFFER_V2, *PFILE_PIPE_CLIENT_PROCESS_BUFFER_V2; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IMrtResourceManager>;

struct tagBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ long Padding_659;
  /* 0x0018 */ void* bmBits;
}; /* size: 0x0020 */

struct IServerLocationInfo
{
}; /* size: 0x0008 */

class RenderFormat::__l36::<lambda_a373bd52f4da993037bb233d5f4e11d7>
{
  /* 0x0000 */ struct tagSTGMEDIUM& medium;
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>;

struct Windows::Foundation::IAsyncOperation<Windows::Storage::StorageLibrary *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

struct IStandardActivator
{
}; /* size: 0x0008 */

class wil::com_ptr_t<IInterceptorBase,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IInterceptorBase* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageItem *,1>
{
}; /* size: 0x0008 */

typedef struct _RTL_IMAGE_MITIGATION_HEAP_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY TerminateOnHeapErrors;
} RTL_IMAGE_MITIGATION_HEAP_POLICY, *PRTL_IMAGE_MITIGATION_HEAP_POLICY; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<OleClassInfoConversionClass>
{
  /* 0x0000 */ class OleClassInfoConversionClass* ptr_;
}; /* size: 0x0008 */

typedef struct _GDI_TEB_BATCH
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Offset : 31; /* bit position: 0 */
    /* 0x0000 */ unsigned long HasRenderingCommand : 1; /* bit position: 31 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_660;
  /* 0x0008 */ unsigned __int64 HDC;
  /* 0x0010 */ unsigned long Buffer[310];
} GDI_TEB_BATCH, *PGDI_TEB_BATCH; /* size: 0x04e8 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::StorageItemThumbnail *>
{
}; /* size: 0x0008 */

class CBaseInterfaceDataMarshalingStream
{
}; /* size: 0x0030 */

class MultiplicationHelper<unsigned short,unsigned short,2>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0001 */

class MultiplicationMethod<long,long>
{
}; /* size: 0x0001 */

typedef struct _SEC_WINNT_AUTH_IDENTITY_W
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_661;
  /* 0x0010 */ unsigned short* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_662;
  /* 0x0020 */ unsigned short* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_W, *PSEC_WINNT_AUTH_IDENTITY_W; /* size: 0x0030 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct tagDISPATCHDATA
{
  /* 0x0000 */ long scode;
  /* 0x0004 */ long Padding_663;
  /* 0x0008 */ void* pData;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,int (__cdecl*)(_CERT_CONTEXT const *),&CertFreeCertificateContext,_CERT_CONTEXT const *>
{
}; /* size: 0x0001 */

struct XWinRT::IntVersionTag
{
  /* 0x0000 */ int _iVersion;
}; /* size: 0x0004 */

struct BSTR_INTERNAL
{
  /* 0x0000 */ unsigned long cbPayload;
  /* 0x0004 */ wchar_t* sz /* zero-length array */;
}; /* size: 0x0004 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IBuffer *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView>
{
  /* 0x0000 */ class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>
{
}; /* size: 0x0001 */

class std::numeric_limits<unsigned int>
{
  union
  {
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef struct _LDR_ENUM_RESOURCE_ENTRY
{
  /* 0x0000 */ union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 NameOrId;
      /* 0x0000 */ struct _IMAGE_RESOURCE_DIRECTORY_STRING* Name;
      struct
      {
        /* 0x0000 */ unsigned short Id;
        /* 0x0002 */ unsigned short NameIsPresent;
      }; /* size: 0x0004 */
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Path[3];
  /* 0x0018 */ void* Data;
  /* 0x0020 */ unsigned long Size;
  /* 0x0024 */ unsigned long Reserved;
} LDR_ENUM_RESOURCE_ENTRY, *PLDR_ENUM_RESOURCE_ENTRY; /* size: 0x0028 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,double>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Point>
{
}; /* size: 0x0008 */

class SafeIntCompare<unsigned long,unsigned int>
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >
{
  /* 0x0000 */ wchar_t* m_ptr;
}; /* size: 0x0008 */

class CALLFRAME_CACHE<NdrTypeInfo>
{
  /* 0x0000 */ long Padding_664[46];
  /* 0x00b8 */ class XSLOCK m_xslAgeOutLock;
  /* 0x0138 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x013c */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x0140 */

struct Windows::Foundation::IAsyncOperation_impl<enum Windows::Storage::Search::IndexedState>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>
{
}; /* size: 0x0008 */

class MultiplicationHelper<unsigned long,unsigned int,3>
{
}; /* size: 0x0001 */

class wil::details_abi::heap_vector_iterator<wil::details::EnabledStateManager::CachedUsageData>
{
  /* 0x0000 */ struct wil::details::EnabledStateManager::CachedUsageData* m_pointer;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0001 */

class MultiplicationHelper<__int64,unsigned __int64,15>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0001 */

class std::unique_lock<std::mutex>
{
  /* 0x0000 */ class std::mutex* _Pmtx;
  /* 0x0008 */ BOOL _Owns;
}; /* size: 0x0010 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::SetObjectRects::__l2::<lambda_4ca0b07237b8f95da55952ce2c79cfa1>
{
  /* 0x0000 */ const struct tagRECT* lprcPosRect;
  /* 0x0008 */ const struct tagRECT* lprcClipRect;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0008 */

struct METHOD_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* m_szMethodName;
  /* 0x0008 */ short m_cParams;
  /* 0x000a */ char Padding_665[6];
  /* 0x0010 */ unsigned short* m_paramVTs;
}; /* size: 0x0018 */

struct SAFER_LEVEL_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class wil::details::<lambda_ad907722de63cac077120380e02fd9bb>
{
}; /* size: 0x0001 */

class std::numeric_limits<int>
{
  union
  {
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct std::defer_lock_t
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Microsoft::WRL::Details::WeakReferenceImpl> >;

class IsFloat<unsigned int,0>
{
}; /* size: 0x0001 */

class wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager>
{
  /* 0x0000 */ unsigned char m_raw[264];
}; /* size: 0x0108 */

class wil::shutdown_aware_object<wil::details::FeatureStateManager>
{
  /* 0x0000 */ class wil::manually_managed_shutdown_aware_object<wil::details::FeatureStateManager> m_object;
}; /* size: 0x0108 */

class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>::ContextSensitiveHelp::__l2::<lambda_524187a61b7f412a8ba870cd827a85c9>
{
  /* 0x0000 */ int fEnterMode;
}; /* size: 0x0004 */

class wil::details::ScopeExitFn<<lambda_8727e92fd6266caa8ecc4c31050fae19> >
{
  /* 0x0000 */ class OleGetClipboardWithEnterpriseInfo::__l2::<lambda_8727e92fd6266caa8ecc4c31050fae19> m_exitFunctor;
  /* 0x0001 */ BOOL m_shouldRun;
}; /* size: 0x0002 */

struct wil::details::static_lazy<ComTrace>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<ComTrace>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment>
{
}; /* size: 0x0008 */

struct DISPLAYCONFIG_SOURCE_MODE
{
  /* 0x0000 */ unsigned int width;
  /* 0x0004 */ unsigned int height;
  /* 0x0008 */ enum DISPLAYCONFIG_PIXELFORMAT pixelFormat;
  /* 0x000c */ struct _POINTL position;
}; /* size: 0x0014 */

struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO
{
  /* 0x0000 */ struct _POINTL PathSourceSize;
  /* 0x0008 */ struct _RECTL DesktopImageRegion;
  /* 0x0018 */ struct _RECTL DesktopImageClip;
}; /* size: 0x0028 */

struct DISPLAYCONFIG_MODE_INFO
{
  /* 0x0000 */ enum DISPLAYCONFIG_MODE_INFO_TYPE infoType;
  /* 0x0004 */ unsigned int id;
  /* 0x0008 */ struct _LUID adapterId;
  union
  {
    /* 0x0010 */ struct DISPLAYCONFIG_TARGET_MODE targetMode;
    /* 0x0010 */ struct DISPLAYCONFIG_SOURCE_MODE sourceMode;
    struct
    {
      /* 0x0010 */ struct DISPLAYCONFIG_DESKTOP_IMAGE_INFO desktopImageInfo;
      /* 0x0038 */ long __PADDING__[2];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
}; /* size: 0x0040 */

struct Windows::Foundation::Collections::IVector<HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EtwEventWriteTransfer,_GUID const *,_GUID const *>
{
} tlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EtwEventWriteTransfer,_GUID const *,_GUID const *>, *PtlgWriteTemplate<long __cdecl(_tlgProvider_t const *,void const *,_GUID const *,_GUID const *,unsigned int,_EVENT_DATA_DESCRIPTOR *),&_tlgWriteTransfer_EtwEventWriteTransfer,_GUID const *,_GUID const *>; /* size: 0x0001 */

struct wil::details::static_lazy<DragDropLogging>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<DragDropLogging>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ICallingProcessInfo> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ICallingProcessInfo>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceHostBrokerProvider> const >;

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoVersion;
  /* 0x0008 */ unsigned char* pbNonce;
  /* 0x0010 */ unsigned long cbNonce;
  /* 0x0014 */ long Padding_666;
  /* 0x0018 */ unsigned char* pbAuthData;
  /* 0x0020 */ unsigned long cbAuthData;
  /* 0x0024 */ long Padding_667;
  /* 0x0028 */ unsigned char* pbTag;
  /* 0x0030 */ unsigned long cbTag;
  /* 0x0034 */ long Padding_668;
  /* 0x0038 */ unsigned char* pbMacContext;
  /* 0x0040 */ unsigned long cbMacContext;
  /* 0x0044 */ unsigned long cbAAD;
  /* 0x0048 */ unsigned __int64 cbData;
  /* 0x0050 */ unsigned long dwFlags;
  /* 0x0054 */ long __PADDING__[1];
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO; /* size: 0x0058 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::Save::__l2::<lambda_f62c6972a04c90594c2afef0651ebd10>
{
  /* 0x0000 */ struct IPropertyBag* pPropBag;
  /* 0x0008 */ int fClearDirty;
  /* 0x000c */ int fSaveAllProperties;
}; /* size: 0x0010 */

class wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2>
{
}; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAgileDataObject> >;

typedef struct _SAFER_IDENTIFICATION_HEADER
{
  /* 0x0000 */ enum _SAFER_IDENTIFICATION_TYPES dwIdentificationType;
  /* 0x0004 */ unsigned long cbStructSize;
  /* 0x0008 */ struct _GUID IdentificationGuid;
  /* 0x0018 */ struct _FILETIME lastModified;
} SAFER_IDENTIFICATION_HEADER, *PSAFER_IDENTIFICATION_HEADER; /* size: 0x0020 */

typedef struct _SAFER_URLZONE_IDENTIFICATION
{
  /* 0x0000 */ struct _SAFER_IDENTIFICATION_HEADER header;
  /* 0x0020 */ unsigned long UrlZoneId;
  /* 0x0024 */ unsigned long dwSaferFlags;
} SAFER_URLZONE_IDENTIFICATION, *PSAFER_URLZONE_IDENTIFICATION; /* size: 0x0028 */

struct GetTypeValueImpl<long,unsigned short const *,unsigned short *>
{
}; /* size: 0x0001 */

class CMIPIDHashTable
{
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_5877c6a8812268070e769c7063060b2c>
{
}; /* size: 0x0001 */

struct ComCatalogDiagnosticData
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long FlagsForCache;
  /* 0x0008 */ enum ComCatalogDiagnosticData::Catalogs TriedCatalogs;
  /* 0x000c */ enum ComCatalogDiagnosticData::Catalogs FoundInCatalogs;
  /* 0x0010 */ enum ComCatalogDiagnosticData::Catalogs AcceptedCatalogs;
  /* 0x0014 */ enum ComCatalogDiagnosticData::Catalogs SelectedCatalog;
}; /* size: 0x0018 */

class wil::com_ptr_t<IResourceReferenceHandler,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IResourceReferenceHandler* m_ptr;
}; /* size: 0x0008 */

class wil::details::static_lazy<ComTelemetry>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[24];
}; /* size: 0x0020 */

class wistd::__compressed_pair<_GUID *,wistd::default_delete<_GUID [0]> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<_GUID [0],wistd::default_delete<_GUID [0]> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_GUID *,wistd::default_delete<_GUID [0]> > __ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,unsigned int>
{
}; /* size: 0x0008 */

class LargeIntRegMultiply<unsigned __int64,unsigned int>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE
{
  /* 0x0000 */ void* NetRateControlDispatch /* function */;
} SYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE, *PSYSTEM_NET_RATE_CONTROL_CALLBACK_TABLE; /* size: 0x0008 */

struct GetTypeValueImpl<long,long>
{
}; /* size: 0x0001 */

typedef struct _callframeinternal_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[759];
  /* 0x02f9 */ char __PADDING__[1];
} callframeinternal_MIDL_PROC_FORMAT_STRING, *Pcallframeinternal_MIDL_PROC_FORMAT_STRING; /* size: 0x02fa */

struct Windows::Foundation::Collections::IPropertySet
{
}; /* size: 0x0008 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long NumberOfMatches;
  /* 0x0008 */ unsigned long BufferSizeRequired;
} LOOKUP_STREAM_FROM_CLUSTER_OUTPUT, *PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT; /* size: 0x000c */

struct std::_Default_allocator_traits<std::allocator<char> >
{
}; /* size: 0x0001 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

class CSurrogatedObjectList;

typedef struct _TOKEN_MANDATORY_POLICY
{
  /* 0x0000 */ unsigned long Policy;
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY; /* size: 0x0004 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::DocumentProperties *>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_DISK_COUNTERS
{
  /* 0x0000 */ unsigned __int64 BytesRead;
  /* 0x0008 */ unsigned __int64 BytesWritten;
  /* 0x0010 */ unsigned __int64 ReadOperationCount;
  /* 0x0018 */ unsigned __int64 WriteOperationCount;
  /* 0x0020 */ unsigned __int64 FlushOperationCount;
} PROCESS_DISK_COUNTERS, *PPROCESS_DISK_COUNTERS; /* size: 0x0028 */

typedef union _ENERGY_STATE_DURATION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Value;
    struct
    {
      /* 0x0000 */ unsigned long LastChangeTime;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long Duration : 31; /* bit position: 0 */
        /* 0x0004 */ unsigned long IsInState : 1; /* bit position: 31 */
      }; /* bitfield */
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} ENERGY_STATE_DURATION, *PENERGY_STATE_DURATION; /* size: 0x0008 */

typedef struct _PROCESS_ENERGY_VALUES
{
  /* 0x0000 */ unsigned __int64 Cycles[2][4];
  /* 0x0040 */ unsigned __int64 DiskEnergy;
  /* 0x0048 */ unsigned __int64 NetworkTailEnergy;
  /* 0x0050 */ unsigned __int64 MBBTailEnergy;
  /* 0x0058 */ unsigned __int64 NetworkTxRxBytes;
  /* 0x0060 */ unsigned __int64 MBBTxRxBytes;
  union
  {
    /* 0x0068 */ union _ENERGY_STATE_DURATION Durations[3];
    struct
    {
      /* 0x0068 */ union _ENERGY_STATE_DURATION ForegroundDuration;
      /* 0x0070 */ union _ENERGY_STATE_DURATION DesktopVisibleDuration;
      /* 0x0078 */ union _ENERGY_STATE_DURATION PSMForegroundDuration;
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
  /* 0x0080 */ unsigned long CompositionRendered;
  /* 0x0084 */ unsigned long CompositionDirtyGenerated;
  /* 0x0088 */ unsigned long CompositionDirtyPropagated;
  /* 0x008c */ unsigned long Reserved1;
  /* 0x0090 */ unsigned __int64 AttributedCycles[2][4];
  /* 0x00d0 */ unsigned __int64 WorkOnBehalfCycles[2][4];
} PROCESS_ENERGY_VALUES, *PPROCESS_ENERGY_VALUES; /* size: 0x0110 */

typedef struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION_V2
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
  /* 0x0060 */ struct _PROCESS_DISK_COUNTERS DiskIoInfo;
  /* 0x0088 */ unsigned __int64 ContextSwitches;
  /* 0x0090 */ union _LARGE_INTEGER TotalCycleTime;
  /* 0x0098 */ unsigned __int64 ReadyTime;
  /* 0x00a0 */ struct _PROCESS_ENERGY_VALUES EnergyValues;
  /* 0x01b0 */ unsigned __int64 KernelWaitTime;
  /* 0x01b8 */ unsigned __int64 UserWaitTime;
} JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION_V2, *PJOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION_V2; /* size: 0x01c0 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct WireContainerThat;

struct Windows::Foundation::IReference<enum Windows::Storage::FileProperties::VideoOrientation>
{
}; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,void *,0,std::nullptr_t> > >
{
}; /* size: 0x0010 */

typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002
{
  union
  {
    /* 0x0000 */ struct _userHBITMAP* hBitmap;
    /* 0x0000 */ struct _userHPALETTE* hPalette;
    /* 0x0000 */ struct _userHGLOBAL* hGeneric;
  }; /* size: 0x0008 */
} GDI_OBJECT::__MIDL_IAdviseSink_0002, *PGDI_OBJECT::__MIDL_IAdviseSink_0002; /* size: 0x0008 */

typedef struct _GDI_OBJECT
{
  /* 0x0000 */ unsigned long ObjectType;
  /* 0x0004 */ long Padding_669;
  /* 0x0008 */ union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
} GDI_OBJECT, *PGDI_OBJECT; /* size: 0x0010 */

typedef struct _REFS_QUERY_VOLUME_COMPRESSION_INFO_OUTPUT_BUFFER
{
  /* 0x0000 */ enum _REFS_COMPRESSION_FORMATS DefaultCompressionFormat;
  /* 0x0004 */ short DefaultCompressionLevel;
  /* 0x0006 */ char Padding_670[2];
  /* 0x0008 */ unsigned long DefaultCompressionChunkSizeBytes;
  /* 0x000c */ unsigned long VolumeClusterSizeBytes;
  /* 0x0010 */ unsigned __int64 TotalVolumeClusters;
  /* 0x0018 */ unsigned __int64 TotalAllocatedClusters;
  /* 0x0020 */ unsigned __int64 TotalCompressibleClustersAllocated;
  /* 0x0028 */ unsigned __int64 TotalCompressibleClustersInUse;
  /* 0x0030 */ unsigned __int64 TotalCompressedClusters;
  /* 0x0038 */ unsigned __int64 Reserved[6];
} REFS_QUERY_VOLUME_COMPRESSION_INFO_OUTPUT_BUFFER, *PREFS_QUERY_VOLUME_COMPRESSION_INFO_OUTPUT_BUFFER; /* size: 0x0068 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,ITypeLibRegistration,0,0>
{
}; /* size: 0x0001 */

struct tagInitializeSpyNode
{
  /* 0x0000 */ struct tagInitializeSpyNode* pNext;
  /* 0x0008 */ struct tagInitializeSpyNode* pPrev;
  /* 0x0010 */ unsigned long dwRefs;
  /* 0x0014 */ unsigned long dwCookie;
  /* 0x0018 */ struct IInitializeSpy* pInitSpy;
}; /* size: 0x0020 */

struct wil::err_returncode_policy
{
}; /* size: 0x0001 */

class wil::com_ptr_t<IOleClassInfo,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IOleClassInfo* m_ptr;
}; /* size: 0x0008 */

class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IMrtResourceManager* m_ptr;
}; /* size: 0x0008 */

class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IResourceContext* m_ptr;
}; /* size: 0x0008 */

class OleClassInfoConversionClass
{
  /* 0x0000 */ long Padding_671[4];
  /* 0x0010 */ struct _GUID m_classId;
  /* 0x0020 */ class wil::com_ptr_t<IOleClassInfo,wil::err_returncode_policy> m_oleClassInfo;
  /* 0x0028 */ class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy> m_resourceManager;
  /* 0x0030 */ class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy> m_resourceContext;
}; /* size: 0x0038 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IInsertableCandidateIterator>
{
  /* 0x0000 */ long Padding_672[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CEnumFmt> >;

typedef struct _MONIKEREXTENT
{
  /* 0x0000 */ unsigned long cbExtentBytes;
  /* 0x0004 */ unsigned short usKeyValue;
  /* 0x0006 */ unsigned char achExtentBytes[1];
  /* 0x0007 */ char __PADDING__[1];
} MONIKEREXTENT, *PMONIKEREXTENT; /* size: 0x0008 */

struct IXMLDOMElement
{
}; /* size: 0x0008 */

struct IComProcessInfo
{
}; /* size: 0x0008 */

class LargeIntRegMultiply<unsigned __int64,__int64>
{
}; /* size: 0x0001 */

typedef struct _MnkEqBuf
{
  /* 0x0000 */ unsigned long cdwSize;
  /* 0x0004 */ unsigned char abEqData[1];
  /* 0x0005 */ char __PADDING__[3];
} MnkEqBuf, *PMnkEqBuf; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IStorage>
{
  /* 0x0000 */ struct IStorage* ptr_;
}; /* size: 0x0008 */

struct IRpcChannelBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetBuffer /* function */;
  /* 0x0020 */ void* SendReceive /* function */;
  /* 0x0028 */ void* FreeBuffer /* function */;
  /* 0x0030 */ void* GetDestCtx /* function */;
  /* 0x0038 */ void* IsConnected /* function */;
}; /* size: 0x0040 */

struct IResourceContext
{
}; /* size: 0x0008 */

typedef struct _SECURITY_OBJECT_AI_PARAMS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ConstraintMask;
} SECURITY_OBJECT_AI_PARAMS, *PSECURITY_OBJECT_AI_PARAMS; /* size: 0x0008 */

class LargeIntRegMultiply<__int64,__int64>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> >
{
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,long (__cdecl*)(HKEY__ *),&RegCloseKey,HKEY__ *>
{
}; /* size: 0x0001 */

struct tagWIN16RECT
{
  /* 0x0000 */ unsigned short left;
  /* 0x0002 */ unsigned short top;
  /* 0x0004 */ unsigned short right;
  /* 0x0006 */ unsigned short bottom;
}; /* size: 0x0008 */

struct tagPLACEABLEMETAHEADER
{
  /* 0x0000 */ unsigned long key;
  /* 0x0004 */ unsigned short hmf;
  /* 0x0006 */ struct tagWIN16RECT bbox;
  /* 0x000e */ unsigned short inch;
  /* 0x0010 */ unsigned long reserved;
  /* 0x0014 */ unsigned short checksum;
}; /* size: 0x0016 */

struct wil::DiagnosticsInfo
{
  /* 0x0000 */ void* returnAddress;
  /* 0x0008 */ const char* file;
  /* 0x0010 */ const char* name;
  /* 0x0018 */ unsigned short line;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

typedef struct __vc_attributes::atl::implements_categoryAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::implements_categoryAttribute, *P_vc_attributes::atl::implements_categoryAttribute; /* size: 0x0008 */

struct IShellLibrary
{
}; /* size: 0x0008 */

typedef struct _FILE_GET_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char EaNameLength;
  /* 0x0005 */ char EaName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_GET_EA_INFORMATION, *PFILE_GET_EA_INFORMATION; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>
{
}; /* size: 0x0001 */

struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned int friendlyNameFromEdid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned int friendlyNameForced : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned int edidIdsValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned int reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned int value;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

struct DISPLAYCONFIG_TARGET_DEVICE_NAME
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
  /* 0x0018 */ enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
  /* 0x001c */ unsigned short edidManufactureId;
  /* 0x001e */ unsigned short edidProductCodeId;
  /* 0x0020 */ unsigned int connectorInstance;
  /* 0x0024 */ wchar_t monitorFriendlyDeviceName[64];
  /* 0x00a4 */ wchar_t monitorDevicePath[128];
}; /* size: 0x01a4 */

class Microsoft::WRL::ComPtr<ReferencedRegistryKey>
{
  /* 0x0000 */ class ReferencedRegistryKey* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,IWeakReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::Streams::IInputStream *>
{
}; /* size: 0x0008 */

struct wil::details::static_lazy<ComTelemetryProvider>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<ComTelemetryProvider>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVector_impl<HSTRING__ *,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardProtectionServices> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::FileInformation *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<IInspectable *,IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStorage> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IStorage>* ptr_;
}; /* size: 0x0008 */

class wil::details::<lambda_7177b7367338a42953a6b2a7b9cf512d>
{
}; /* size: 0x0001 */

typedef struct _FILE_REGION_INFO
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long Usage;
  /* 0x0014 */ unsigned long Reserved;
} FILE_REGION_INFO, *PFILE_REGION_INFO; /* size: 0x0018 */

typedef struct _FILE_REGION_OUTPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalRegionEntryCount;
  /* 0x0008 */ unsigned long RegionEntryCount;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ struct _FILE_REGION_INFO Region[1];
} FILE_REGION_OUTPUT, *PFILE_REGION_OUTPUT; /* size: 0x0028 */

struct tagDDEDISPATCHDATA
{
  /* 0x0000 */ long Padding_673[2];
  /* 0x0008 */ class CDdeObject* pCDdeObject;
  /* 0x0010 */ unsigned int iArg;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION
{
  /* 0x0000 */ char* SymbolicBackTrace;
  /* 0x0008 */ unsigned long TraceCount;
  /* 0x000c */ unsigned short Index;
  /* 0x000e */ unsigned short Depth;
  /* 0x0010 */ void* BackTrace[32];
} RTL_PROCESS_BACKTRACE_INFORMATION, *PRTL_PROCESS_BACKTRACE_INFORMATION; /* size: 0x0110 */

typedef struct _RTL_PROCESS_BACKTRACES
{
  /* 0x0000 */ unsigned __int64 CommittedMemory;
  /* 0x0008 */ unsigned __int64 ReservedMemory;
  /* 0x0010 */ unsigned long NumberOfBackTraceLookups;
  /* 0x0014 */ unsigned long NumberOfBackTraces;
  /* 0x0018 */ struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
} RTL_PROCESS_BACKTRACES, *PRTL_PROCESS_BACKTRACES; /* size: 0x0128 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<IInspectable *>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct tagCBT_CREATEWNDA
{
  /* 0x0000 */ struct tagCREATESTRUCTA* lpcs;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0010 */

class wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct FEATURE_STATE_CHANGE_SUBSCRIPTION__* m_ptr;
}; /* size: 0x0008 */

class Quirks
{
  union
  {
    /* 0x0000 */ enum Quirks::QuirkStatus s_dropOrReorderInputInAsta;
    /* 0x0000 */ enum Quirks::QuirkStatus s_allowAstaToAstaCalls;
    /* 0x0000 */ enum Quirks::QuirkStatus s_disableThresholdAppLaunchPerfFeature;
    /* 0x0000 */ enum Quirks::QuirkStatus s_disableWinrtAsyncChannel;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> >
{
  /* 0x0000 */ long Padding_674[6];
  /* 0x0018 */ union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer refCount_;
}; /* size: 0x0020 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned char CurrentFrequency;
  /* 0x0001 */ unsigned char ThermalLimitFrequency;
  /* 0x0002 */ unsigned char ConstantThrottleFrequency;
  /* 0x0003 */ unsigned char DegradedThrottleFrequency;
  /* 0x0004 */ unsigned char LastBusyFrequency;
  /* 0x0005 */ unsigned char LastC3Frequency;
  /* 0x0006 */ unsigned char LastAdjustedBusyFrequency;
  /* 0x0007 */ unsigned char ProcessorMinThrottle;
  /* 0x0008 */ unsigned char ProcessorMaxThrottle;
  /* 0x0009 */ char Padding_675[3];
  /* 0x000c */ unsigned long NumberOfFrequencies;
  /* 0x0010 */ unsigned long PromotionCount;
  /* 0x0014 */ unsigned long DemotionCount;
  /* 0x0018 */ unsigned long ErrorCount;
  /* 0x001c */ unsigned long RetryCount;
  /* 0x0020 */ unsigned __int64 CurrentFrequencyTime;
  /* 0x0028 */ unsigned __int64 CurrentProcessorTime;
  /* 0x0030 */ unsigned __int64 CurrentProcessorIdleTime;
  /* 0x0038 */ unsigned __int64 LastProcessorTime;
  /* 0x0040 */ unsigned __int64 LastProcessorIdleTime;
  /* 0x0048 */ unsigned __int64 Energy;
} SYSTEM_PROCESSOR_POWER_INFORMATION, *PSYSTEM_PROCESSOR_POWER_INFORMATION; /* size: 0x0050 */

struct Windows::Foundation::Collections::is_pointer<double>
{
}; /* size: 0x0001 */

typedef struct _REASON_CONTEXT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ struct HINSTANCE__* LocalizedReasonModule;
        /* 0x0010 */ unsigned long LocalizedReasonId;
        /* 0x0014 */ unsigned long ReasonStringCount;
        /* 0x0018 */ wchar_t** ReasonStrings;
      } /* size: 0x0018 */ Detailed;
      /* 0x0008 */ wchar_t* SimpleReasonString;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Reason;
} REASON_CONTEXT, *PREASON_CONTEXT; /* size: 0x0020 */

struct Windows::Foundation::IReference_impl<enum Windows::Storage::FileProperties::VideoOrientation>
{
}; /* size: 0x0008 */

class MultiplicationHelper<unsigned int,unsigned long,3>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> const >;

class AdHocCallFrame<IPersistPropertyBag,<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4> >
{
  /* 0x0000 */ long Padding_676[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::Load::__l2::<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct tagHW_PROFILE_INFOA
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ char szHwProfileGuid[39];
  /* 0x002b */ char szHwProfileName[80];
  /* 0x007b */ char __PADDING__[1];
}; /* size: 0x007c */

struct USERPREFS
{
  /* 0x0000 */ char signature[6];
  /* 0x0006 */ unsigned short version;
  /* 0x0008 */ unsigned short size;
  /* 0x000a */ char Padding_677[6];
  /* 0x0010 */ char* sourceFilename;
  /* 0x0018 */ void* sourceHandle;
  /* 0x0020 */ char* destinationFilename;
  /* 0x0028 */ unsigned char penPatternAction;
  /* 0x0029 */ unsigned char nonSquarePenAction;
  /* 0x002a */ unsigned char penModeAction;
  /* 0x002b */ unsigned char textModeAction;
  /* 0x002c */ unsigned char nonRectRegionAction;
  /* 0x002d */ char Padding_678[3];
  /* 0x0030 */ int optimizePP;
  /* 0x0034 */ unsigned short reserved[6];
}; /* size: 0x0040 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ENTROPY_TIMING_INFORMATION
{
  /* 0x0000 */ void* EntropyRoutine /* function */;
  /* 0x0008 */ void* InitializationRoutine /* function */;
  /* 0x0010 */ void* InitializationContext;
} SYSTEM_ENTROPY_TIMING_INFORMATION, *PSYSTEM_ENTROPY_TIMING_INFORMATION; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> >
{
}; /* size: 0x0008 */

typedef struct __vcrt_va_list_is_reference<__crt_locale_pointers * const>
{
} _vcrt_va_list_is_reference<__crt_locale_pointers * const>, *P_vcrt_va_list_is_reference<__crt_locale_pointers * const>; /* size: 0x0001 */

class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CNode
{
  /* 0x0000 */ long Padding_679[4];
  /* 0x0010 */ class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CNode* m_pNext;
  /* 0x0018 */ unsigned int m_nHash;
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IComClassCategoryInfo>
{
  /* 0x0000 */ struct IComClassCategoryInfo* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IObjectProvider> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IObjectProvider>* ptr_;
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,void *>
{
}; /* size: 0x0001 */

class IntRegion<unsigned int,unsigned short>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0001 */

typedef struct _INSTALLDATA
{
  /* 0x0000 */ enum _INSTALLSPECTYPE Type;
  /* 0x0004 */ long Padding_680;
  /* 0x0008 */ union _INSTALLSPEC Spec;
} INSTALLDATA, *PINSTALLDATA; /* size: 0x0020 */

class CAutoHandle_Policy<HBITMAP__ *>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<unsigned __int64,int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRestrictedErrorInfo> >
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PREFETCH_STATS
{
  /* 0x0000 */ unsigned long DemandFilePageCount;
  /* 0x0004 */ unsigned long DemandFileIOCount;
  /* 0x0008 */ unsigned long TrickleFilePageCount;
  /* 0x000c */ unsigned long TrickleFileIOCount;
  /* 0x0010 */ unsigned long DemandPrivatePageCount;
  /* 0x0014 */ unsigned long DemandPrivateIOCount;
  /* 0x0018 */ unsigned long TricklePrivatePageCount;
  /* 0x001c */ unsigned long TricklePrivateIOCount;
} SYSTEM_PREFETCH_STATS, *PSYSTEM_PREFETCH_STATS; /* size: 0x0020 */

typedef struct _wireSAFEARR_BSTR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_681;
  /* 0x0008 */ struct _FLAGGED_WORD_BLOB** aBstr;
} wireSAFEARR_BSTR, *PwireSAFEARR_BSTR; /* size: 0x0010 */

typedef struct _wireSAFEARR_UNKNOWN
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_682;
  /* 0x0008 */ struct IUnknown** apUnknown;
} wireSAFEARR_UNKNOWN, *PwireSAFEARR_UNKNOWN; /* size: 0x0010 */

typedef struct _wireSAFEARR_DISPATCH
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_683;
  /* 0x0008 */ struct IDispatch** apDispatch;
} wireSAFEARR_DISPATCH, *PwireSAFEARR_DISPATCH; /* size: 0x0010 */

typedef struct _wireSAFEARR_VARIANT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_684;
  /* 0x0008 */ struct _wireVARIANT** aVariant;
} wireSAFEARR_VARIANT, *PwireSAFEARR_VARIANT; /* size: 0x0010 */

typedef struct _wireSAFEARR_BRECORD
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_685;
  /* 0x0008 */ struct _wireBRECORD** aRecord;
} wireSAFEARR_BRECORD, *PwireSAFEARR_BRECORD; /* size: 0x0010 */

typedef struct _wireSAFEARR_HAVEIID
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_686;
  /* 0x0008 */ struct IUnknown** apUnknown;
  /* 0x0010 */ struct _GUID iid;
} wireSAFEARR_HAVEIID, *PwireSAFEARR_HAVEIID; /* size: 0x0020 */

typedef struct _BYTE_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_687;
  /* 0x0008 */ unsigned char* pData;
} BYTE_SIZEDARR, *PBYTE_SIZEDARR; /* size: 0x0010 */

typedef struct _SHORT_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_688;
  /* 0x0008 */ unsigned short* pData;
} SHORT_SIZEDARR, *PSHORT_SIZEDARR; /* size: 0x0010 */

typedef struct _LONG_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_689;
  /* 0x0008 */ unsigned long* pData;
} LONG_SIZEDARR, *PLONG_SIZEDARR; /* size: 0x0010 */

typedef struct _HYPER_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_690;
  /* 0x0008 */ __int64* pData;
} HYPER_SIZEDARR, *PHYPER_SIZEDARR; /* size: 0x0010 */

typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001
{
  union
  {
    /* 0x0000 */ struct _wireSAFEARR_BSTR BstrStr;
    /* 0x0000 */ struct _wireSAFEARR_UNKNOWN UnknownStr;
    /* 0x0000 */ struct _wireSAFEARR_DISPATCH DispatchStr;
    /* 0x0000 */ struct _wireSAFEARR_VARIANT VariantStr;
    /* 0x0000 */ struct _wireSAFEARR_BRECORD RecordStr;
    /* 0x0000 */ struct _wireSAFEARR_HAVEIID HaveIidStr;
    /* 0x0000 */ struct _BYTE_SIZEDARR ByteStr;
    /* 0x0000 */ struct _SHORT_SIZEDARR WordStr;
    /* 0x0000 */ struct _LONG_SIZEDARR LongStr;
    /* 0x0000 */ struct _HYPER_SIZEDARR HyperStr;
  }; /* size: 0x0020 */
} wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001, *PwireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001; /* size: 0x0020 */

typedef struct _wireSAFEARRAY_UNION
{
  /* 0x0000 */ unsigned long sfType;
  /* 0x0004 */ long Padding_691;
  /* 0x0008 */ union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
} wireSAFEARRAY_UNION, *PwireSAFEARRAY_UNION; /* size: 0x0028 */

typedef struct _RTL_HEAP_WALK_ENTRY
{
  /* 0x0000 */ void* DataAddress;
  /* 0x0008 */ unsigned __int64 DataSize;
  /* 0x0010 */ unsigned char OverheadBytes;
  /* 0x0011 */ unsigned char SegmentIndex;
  /* 0x0012 */ unsigned short Flags;
  /* 0x0014 */ long Padding_692;
  union
  {
    struct
    {
      /* 0x0018 */ unsigned __int64 Settable;
      /* 0x0020 */ unsigned short TagIndex;
      /* 0x0022 */ unsigned short AllocatorBackTraceIndex;
      /* 0x0024 */ unsigned long Reserved[2];
      /* 0x002c */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0018 */ unsigned long CommittedSize;
      /* 0x001c */ unsigned long UnCommittedSize;
      /* 0x0020 */ void* FirstEntry;
      /* 0x0028 */ void* LastEntry;
    } /* size: 0x0018 */ Segment;
  }; /* size: 0x0018 */
} RTL_HEAP_WALK_ENTRY, *PRTL_HEAP_WALK_ENTRY; /* size: 0x0030 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *,1>
{
}; /* size: 0x0008 */

class IsFloat<__int64,0>
{
}; /* size: 0x0001 */

class CCoTaskMemPtr<unsigned short>
{
}; /* size: 0x0008 */

typedef struct _TOKEN_PRIMARY_GROUP
{
  /* 0x0000 */ void* PrimaryGroup;
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *,1>
{
}; /* size: 0x0008 */

struct IPrivDragDrop
{
}; /* size: 0x0008 */

class CAutoHandle_Policy<HFONT__ *>
{
}; /* size: 0x0001 */

typedef struct __NCRYPT_KEY_ACCESS_POLICY_BLOB
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwPolicyFlags;
  /* 0x0008 */ unsigned long cbUserSid;
  /* 0x000c */ unsigned long cbApplicationSid;
} _NCRYPT_KEY_ACCESS_POLICY_BLOB, *P_NCRYPT_KEY_ACCESS_POLICY_BLOB; /* size: 0x0010 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDropTarget> >
{
}; /* size: 0x0008 */

typedef struct _ACCESS_DENIED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_ACE, *PACCESS_DENIED_ACE; /* size: 0x000c */

class LargeIntRegMultiply<__int64,unsigned __int64>
{
}; /* size: 0x0001 */

struct std::equal_to<void>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IPackagedComClassIdIterator>
{
  /* 0x0000 */ struct IPackagedComClassIdIterator* ptr_;
}; /* size: 0x0008 */

class ComClassIterator
{
  /* 0x0000 */ long Padding_693[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ReferencedRegistryKey> _registryClsidParentKey;
  /* 0x0018 */ unsigned long _registryClsidIndex;
  /* 0x001c */ long Padding_694;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IComCatalogSCM> _comCatalog;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> _packagedComClassIdIterator;
}; /* size: 0x0030 */

typedef struct _XSAVE_VENDORS
{
  /* 0x0000 */ unsigned long NumberOfVendors;
  /* 0x0004 */ long Padding_695;
  /* 0x0008 */ struct _XSAVE_VENDOR Vendor[1];
} XSAVE_VENDORS, *PXSAVE_VENDORS; /* size: 0x0040 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::iid_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
} _vc_attributes::iid_isAttribute, *P_vc_attributes::iid_isAttribute; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragDropBroker> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,short> *>
{
}; /* size: 0x0001 */

class wistd::__compressed_pair<wil::details::folder_watcher_state *,wistd::default_delete<wil::details::folder_watcher_state> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<wil::details::folder_watcher_state,wistd::default_delete<wil::details::folder_watcher_state> >
{
  /* 0x0000 */ class wistd::__compressed_pair<wil::details::folder_watcher_state *,wistd::default_delete<wil::details::folder_watcher_state> > __ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IInspectable *>
{
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0001 */

class SubtractionHelper<__int64,unsigned __int64,11>
{
}; /* size: 0x0001 */

struct IRpcProxyBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Connect /* function */;
  /* 0x0020 */ void* Disconnect /* function */;
}; /* size: 0x0028 */

class wistd::unique_ptr<VerbList,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<VerbList *,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> > __ptr_;
}; /* size: 0x0008 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<0> >
{
} tlgDataDescInit<_tlgIndexSequence<0> >, *PtlgDataDescInit<_tlgIndexSequence<0> >; /* size: 0x0001 */

class CCoTaskMemPtr<unsigned short *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumGUID>
{
}; /* size: 0x0010 */

struct IOleDragDropBrokerHost
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IObjectProvider> const >;

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFile *> *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_c09a310d7f90d3d8c1b147c306561a28>
{
}; /* size: 0x0001 */

class CActivatableClassIdHashTable
{
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0001 */

typedef struct _UNICODE_PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_696;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* CaseMatch;
  /* 0x0018 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0030 */ struct _UNICODE_STRING* Prefix;
} UNICODE_PREFIX_TABLE_ENTRY, *PUNICODE_PREFIX_TABLE_ENTRY; /* size: 0x0038 */

class SafeIntCompare<unsigned int,unsigned long>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IStream>
{
  /* 0x0000 */ struct IStream* ptr_;
}; /* size: 0x0008 */

class CWrapperBase<IStream>
{
  /* 0x0000 */ long Padding_697[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream> m_spInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_spPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IAllowAstaToAstaDeadlockRisk>
{
  /* 0x0000 */ struct IAllowAstaToAstaDeadlockRisk* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>
{
}; /* size: 0x0001 */

struct IDispatchVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeInfoCount /* function */;
  /* 0x0020 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetIDsOfNames /* function */;
  /* 0x0030 */ void* Invoke /* function */;
}; /* size: 0x0038 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>
{
}; /* size: 0x0001 */

class CLimitedStreamBase
{
}; /* size: 0x0020 */

typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1
{
  /* 0x0000 */ wchar_t* Name;
  /* 0x0008 */ unsigned short ValueType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long ValueCount;
  /* 0x0014 */ long Padding_698;
  union
  {
    union
    {
      /* 0x0018 */ __int64* pInt64;
      /* 0x0018 */ unsigned __int64* pUint64;
      /* 0x0018 */ wchar_t** ppString;
      /* 0x0018 */ struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE* pFqbn;
      /* 0x0018 */ struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE* pOctetString;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Values;
} CLAIM_SECURITY_ATTRIBUTE_V1, *PCLAIM_SECURITY_ATTRIBUTE_V1; /* size: 0x0020 */

class CLimitedWritableStorage::Commit::__l2::<lambda_6d542ea311a46020d30b3ebc4539ced7>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ unsigned long& grfCommitFlags;
}; /* size: 0x0010 */

class MultiplicationMethod<unsigned int,unsigned long>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<InsertableCandidateIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator> >;

typedef struct _UNWIND_INFO
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Version : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Flags : 5; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0001 */ unsigned char SizeOfProlog;
  /* 0x0002 */ unsigned char CountOfCodes;
  struct /* bitfield */
  {
    /* 0x0003 */ unsigned char FrameRegister : 4; /* bit position: 0 */
    /* 0x0003 */ unsigned char FrameOffset : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ union _UNWIND_CODE UnwindCode[1];
} UNWIND_INFO, *PUNWIND_INFO; /* size: 0x0006 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider>* ptr_;
}; /* size: 0x0008 */

class wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<float>
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IComProgIdIterator>
{
}; /* size: 0x0010 */

typedef struct _PROPSHEETPAGEA
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const char* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const char* pszHeaderTitle;
  /* 0x0050 */ const char* pszHeaderSubTitle;
  /* 0x0058 */ void* hActCtx;
  union
  {
    /* 0x0060 */ struct HBITMAP__* hbmHeader;
    /* 0x0060 */ const char* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETPAGEA, *PPROPSHEETPAGEA; /* size: 0x0068 */

class CLimitedWritableStream::Clone::__l2::<lambda_90c58536661702964630d6bd2c4c001f>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream>& spInner;
}; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ThreadingModel;
  /* 0x000c */ struct _GUID ReferenceClsid;
  /* 0x001c */ struct _GUID ConfiguredClsid;
  /* 0x002c */ struct _GUID ImplementedClsid;
  /* 0x003c */ struct _GUID TypeLibraryId;
  /* 0x004c */ unsigned long ModuleLength;
  /* 0x0050 */ unsigned long ModuleOffset;
  /* 0x0054 */ unsigned long ProgIdLength;
  /* 0x0058 */ unsigned long ProgIdOffset;
  /* 0x005c */ unsigned long ShimDataLength;
  /* 0x0060 */ unsigned long ShimDataOffset;
  /* 0x0064 */ unsigned long MiscStatusDefault;
  /* 0x0068 */ unsigned long MiscStatusContent;
  /* 0x006c */ unsigned long MiscStatusThumbnail;
  /* 0x0070 */ unsigned long MiscStatusIcon;
  /* 0x0074 */ unsigned long MiscStatusDocPrint;
} ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION, *PACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION; /* size: 0x0078 */

class wil::details::<lambda_dc6c7cb493b28f6f1629b34c7299f344>
{
}; /* size: 0x0001 */

class wil::details::<lambda_9b7d8b6887f59478af568096f31252cb>
{
}; /* size: 0x0001 */

typedef struct _TOKEN_GROUPS
{
  /* 0x0000 */ unsigned long GroupCount;
  /* 0x0004 */ long Padding_699;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES Groups[1];
} TOKEN_GROUPS, *PTOKEN_GROUPS; /* size: 0x0018 */

typedef struct _NDR64_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
} NDR64_STRUCTURE_HEADER_FORMAT, *PNDR64_STRUCTURE_HEADER_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag51_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag51_t, *P_midl_frag51_t; /* size: 0x0008 */

typedef struct __vc_attributes::atl::soap_namespaceAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::soap_namespaceAttribute, *P_vc_attributes::atl::soap_namespaceAttribute; /* size: 0x0008 */

typedef struct __WilFeatureTraits_Feature_CDPAFSProdDomainUri
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy30;
    /* 0x0000 */ const char ___dummy26;
    /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
    /* 0x0000 */ const char ___dummy27;
    /* 0x0000 */ const char ___dummy28;
    /* 0x0000 */ const char ___dummy29;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_CDPAFSProdDomainUri, *P_WilFeatureTraits_Feature_CDPAFSProdDomainUri; /* size: 0x0001 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float>
{
}; /* size: 0x0008 */

class wil::com_ptr_t<IPackagedComClassCatalogInternal,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IPackagedComClassCatalogInternal* m_ptr;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<IInspectable *>
{
}; /* size: 0x0001 */

struct IBindProtocol
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<unsigned char>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAllowAstaToAstaDeadlockRisk> >;

struct Windows::Foundation::Collections::IVector<_GUID>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0001 */

typedef struct _FILE_NOTIFY_EXTENDED_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastModificationTime;
  /* 0x0018 */ union _LARGE_INTEGER LastChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0028 */ union _LARGE_INTEGER AllocatedLength;
  /* 0x0030 */ union _LARGE_INTEGER FileSize;
  /* 0x0038 */ unsigned long FileAttributes;
  union
  {
    /* 0x003c */ unsigned long ReparsePointTag;
    /* 0x003c */ unsigned long EaSize;
  }; /* size: 0x0004 */
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ union _LARGE_INTEGER ParentFileId;
  /* 0x0050 */ unsigned long FileNameLength;
  /* 0x0054 */ wchar_t FileName[1];
  /* 0x0056 */ char __PADDING__[2];
} FILE_NOTIFY_EXTENDED_INFORMATION, *PFILE_NOTIFY_EXTENDED_INFORMATION; /* size: 0x0058 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IOleVerb>
{
}; /* size: 0x0010 */

typedef struct __WilFeatureTraits_Feature_DoDragDropOnContainerOS
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy45;
    /* 0x0000 */ const char ___dummy43;
    /* 0x0000 */ const char ___dummy44;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_DoDragDropOnContainerOS, *P_WilFeatureTraits_Feature_DoDragDropOnContainerOS; /* size: 0x0001 */

typedef struct __WilFeatureTraits_Feature_ReadClipboardEvent
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy39;
    /* 0x0000 */ const char ___dummy37;
    /* 0x0000 */ const char ___dummy38;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_ReadClipboardEvent, *P_WilFeatureTraits_Feature_ReadClipboardEvent; /* size: 0x0001 */

typedef struct _PEBS_DS_SAVE_AREA64
{
  /* 0x0000 */ unsigned __int64 BtsBufferBase;
  /* 0x0008 */ unsigned __int64 BtsIndex;
  /* 0x0010 */ unsigned __int64 BtsAbsoluteMaximum;
  /* 0x0018 */ unsigned __int64 BtsInterruptThreshold;
  /* 0x0020 */ unsigned __int64 PebsBufferBase;
  /* 0x0028 */ unsigned __int64 PebsIndex;
  /* 0x0030 */ unsigned __int64 PebsAbsoluteMaximum;
  /* 0x0038 */ unsigned __int64 PebsInterruptThreshold;
  /* 0x0040 */ unsigned __int64 PebsGpCounterReset[8];
  /* 0x0080 */ unsigned __int64 PebsFixedCounterReset[4];
} PEBS_DS_SAVE_AREA64, *PPEBS_DS_SAVE_AREA64; /* size: 0x00a0 */

struct Windows::Foundation::Collections::IObservableVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::BulkAccess::FileInformation *> *>
{
}; /* size: 0x0008 */

struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IInsertableCandidateIterator>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<_GUID,1>
{
}; /* size: 0x0008 */

typedef struct _NDR64_CONTEXT_HANDLE_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char ContextFlags;
  /* 0x0002 */ unsigned char RundownRoutineIndex;
  /* 0x0003 */ unsigned char Ordinal;
} NDR64_CONTEXT_HANDLE_FORMAT, *PNDR64_CONTEXT_HANDLE_FORMAT; /* size: 0x0004 */

struct Windows::ApplicationModel::Background::IBackgroundTaskInstance
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<RegistryTypeLibRegistration>
{
  /* 0x0000 */ class RegistryTypeLibRegistration* ptr_;
}; /* size: 0x0008 */

class wil::details::static_lazy<OleDragDropTracing>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[32];
}; /* size: 0x0028 */

typedef struct _TOKEN_ELEVATION
{
  /* 0x0000 */ unsigned long TokenIsElevated;
} TOKEN_ELEVATION, *PTOKEN_ELEVATION; /* size: 0x0004 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(wil::details::SecureZeroData) noexcept,&wil::details::SecureZeroData::Close,wistd::integral_constant<unsigned __int64,0>,wil::details::SecureZeroData,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil::details::SecureZeroData m_ptr;
}; /* size: 0x0010 */

struct VOLUME_BITMAP_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0008 */ union _LARGE_INTEGER BitmapSize;
  /* 0x0010 */ unsigned char Buffer[1];
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

struct WilFailureReportInformation
{
  /* 0x0000 */ long id;
  /* 0x0004 */ enum WilFailureAction action;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct MOVE_FILE_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class CROTItem
{
  /* 0x0000 */ unsigned short _wItemSig;
  /* 0x0002 */ char Padding_700[2];
  /* 0x0004 */ int _fDontCallApp;
  /* 0x0008 */ struct _SCMREGKEY _scmregkey;
  /* 0x0018 */ unsigned long _hApt;
  /* 0x001c */ long Padding_701;
  /* 0x0020 */ void* _pvStubRegistration;
}; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::SplitIterator> const >;

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IRandomAccessStreamReference *,1>
{
}; /* size: 0x0008 */

class wil::details::<lambda_b69b626372d1eeb16abfc1ff3dbc9587>
{
}; /* size: 0x0001 */

typedef struct __WilFeatureTraits_Feature_MarshalRestrictedErrorFromRpcss
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy10;
    /* 0x0000 */ const char ___dummy8;
    /* 0x0000 */ const char ___dummy9;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_MarshalRestrictedErrorFromRpcss, *P_WilFeatureTraits_Feature_MarshalRestrictedErrorFromRpcss; /* size: 0x0001 */

struct RundownInstrumentationData
{
  /* 0x0000 */ struct _GUID iidOfCall;
  /* 0x0010 */ unsigned long method;
  /* 0x0014 */ struct _GUID ipid;
  /* 0x0024 */ enum WhichTypeOfRundown whichTypeOfRundown;
  /* 0x0028 */ struct _GUID implementedInterface1;
  /* 0x0038 */ struct _GUID implementedInterface2;
  /* 0x0048 */ struct _GUID implementedInterface3;
}; /* size: 0x0058 */

class Microsoft::WRL::ComPtr<TypeLibRegistrationReader>
{
  /* 0x0000 */ class TypeLibRegistrationReader* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<enum Windows::Security::EnterpriseData::ProtectionPolicyEvaluationResult>
{
}; /* size: 0x0008 */

struct wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryInsertableCandidate> const >;

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *> >
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerbIterator> >;

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::ReleaseSemaphore,void *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IClipboardBroker>
{
  /* 0x0000 */ struct IClipboardBroker* ptr_;
}; /* size: 0x0008 */

class CLimitedWritableStream::SetSize::__l2::<lambda_d88a98539f99aa8d705874cde434eb96>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
  /* 0x0008 */ union _ULARGE_INTEGER& libNewSize;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>
{
}; /* size: 0x0001 */

struct IEnumGeneric
{
}; /* size: 0x0008 */

typedef struct _PARAM_STRUCT
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char Pad0[4];
  /* 0x0010 */ const struct _GUID* const riid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char Pad1[4];
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ char Pad2[4];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* pArgErr;
  /* 0x0048 */ unsigned int cVarRef;
  /* 0x004c */ char Pad3[4];
  /* 0x0050 */ unsigned int* rgVarRefIdx;
  /* 0x0058 */ struct tagVARIANT* rgVarRef;
  /* 0x0060 */ HRESULT _RetVal;
  /* 0x0064 */ long __PADDING__[1];
} PARAM_STRUCT, *PPARAM_STRUCT; /* size: 0x0068 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IIterable<Windows::Foundation::Point> *>
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::SetEvent,wistd::integral_constant<unsigned __int64,1>,void *,void *,0,std::nullptr_t> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

struct utl::random_access_iterator_tag
{
}; /* size: 0x0001 */

struct utl::forward_iterator_tag
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits
{
}; /* size: 0x0001 */

class DragDropLogging
{
  /* 0x0000 */ long Padding_702[6];
  /* 0x0018 */ struct DragDropLogging::StaticHandle m_staticHandle;
}; /* size: 0x0020 */

struct tagLOCALESIGNATURE
{
  /* 0x0000 */ unsigned long lsUsb[4];
  /* 0x0010 */ unsigned long lsCsbDefault[2];
  /* 0x0018 */ unsigned long lsCsbSupported[2];
}; /* size: 0x0020 */

struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView<short>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::FileProperties::MusicProperties *,Windows::Storage::FileProperties::IMusicProperties *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>
{
}; /* size: 0x0008 */

class wil::details::<lambda_09e63cec6544f3e41f5abdd3647f53b2>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *,1>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_POLICY_INFORMATION
{
  /* 0x0000 */ void* InputData;
  /* 0x0008 */ void* OutputData;
  /* 0x0010 */ unsigned long InputDataSize;
  /* 0x0014 */ unsigned long OutputDataSize;
  /* 0x0018 */ unsigned long Version;
  /* 0x001c */ long __PADDING__[1];
} SYSTEM_POLICY_INFORMATION, *PSYSTEM_POLICY_INFORMATION; /* size: 0x0020 */

struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
  /* 0x0000 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > m_value;
}; /* size: 0x0008 */

struct IComCatalogSCM
{
}; /* size: 0x0008 */

class wil::unique_struct<wil::details::FeatureUsageDurationData,void (__cdecl*)(wil::details::FeatureUsageDurationData *) noexcept,&wil::details::FeatureUsageDurationData::Stop,std::nullptr_t,0>
{
}; /* size: 0x0010 */

class CGdiCustodian
{
  /* 0x0000 */ long Padding_703[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_704;
  /* 0x0010 */ void* ma_hgdiClxn[3];
}; /* size: 0x0028 */

class std::numeric_limits<bool>
{
  /* 0x0000 */ const int digits;
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::Streams::IRandomAccessStreamWithContentType *>
{
}; /* size: 0x0008 */

struct Windows::Storage::Streams::IOutputStream
{
}; /* size: 0x0008 */

struct MD_PARAM
{
  /* 0x0000 */ int m_fCanShare;
  /* 0x0004 */ int m_fMayHaveInterfacePointers;
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<void *,0,0>
{
  /* 0x0000 */ void* __value_;
}; /* size: 0x0008 */

typedef struct _RPC_BINDING_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_705;
  /* 0x0008 */ void* BindingH[1];
} RPC_BINDING_VECTOR, *PRPC_BINDING_VECTOR; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>
{
}; /* size: 0x0001 */

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Skip::__l2::<lambda_623afaff1ea6960797c30da1c8e48c6d>
{
  /* 0x0000 */ class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>* const __this;
  /* 0x0008 */ unsigned long& celt;
}; /* size: 0x0010 */

struct wistd::default_delete<unsigned short [0]>::_EnableIfConvertible<unsigned short>
{
}; /* size: 0x0001 */

class std::numeric_limits<short>
{
  union
  {
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IRandomAccessStream *,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,ITypeLibRegistration,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0030 */

class wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter>
{
  /* 0x0000 */ class wistd::__compressed_pair<unsigned short *,wil::hlocal_secure_deleter> __ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::IStorageLibrary *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,HSTRING__ *> *>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits
{
}; /* size: 0x0001 */

struct Windows::Storage::BulkAccess::IStorageItemInformation
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<unsigned int>
{
}; /* size: 0x0008 */

class wil::details::<lambda_7fcf7d166d242e924ce4e04610f961e3>
{
}; /* size: 0x0001 */

typedef struct _MIDL_STUBLESS_PROXY_INFO
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0008 */ const unsigned char* ProcFormatString;
  /* 0x0010 */ const unsigned short* FormatStringOffset;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0020 */ unsigned __int64 nCount;
  /* 0x0028 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_STUBLESS_PROXY_INFO, *PMIDL_STUBLESS_PROXY_INFO; /* size: 0x0030 */

struct NdrTypeInfo
{
  /* 0x0000 */ long Padding_706[12];
  /* 0x0030 */ char* m_szInterfaceName;
  /* 0x0038 */ struct METHOD_DESCRIPTOR* m_rgMethodDescs;
  /* 0x0040 */ struct _GUID m_iidBase;
  /* 0x0050 */ struct _MIDL_STUB_DESC m_stubDesc;
  /* 0x00e8 */ struct _MIDL_SERVER_INFO_ m_stubInfo;
  /* 0x0128 */ struct tagCInterfaceStubHeader m_stubHeader;
  /* 0x0148 */ struct _MIDL_STUBLESS_PROXY_INFO m_proxyInfo;
  /* 0x0178 */ struct tagCInterfaceProxyHeader m_proxyHeader;
  /* 0x0188 */ unsigned short m_formatStringOffsetTable[1];
  /* 0x018a */ char __PADDING__[6];
}; /* size: 0x0190 */

typedef struct _PHYSICAL_CHANNEL_RUN
{
  /* 0x0000 */ unsigned long NodeNumber;
  /* 0x0004 */ unsigned long ChannelNumber;
  /* 0x0008 */ unsigned __int64 BasePage;
  /* 0x0010 */ unsigned __int64 PageCount;
  /* 0x0018 */ unsigned __int64 Flags;
} PHYSICAL_CHANNEL_RUN, *PPHYSICAL_CHANNEL_RUN; /* size: 0x0020 */

struct std::_Num_base
{
  union
  {
    /* 0x0000 */ enum std::float_denorm_style has_denorm;
    /* 0x0000 */ const BOOL has_denorm_loss;
    /* 0x0000 */ const BOOL has_infinity;
    /* 0x0000 */ const BOOL has_quiet_NaN;
    /* 0x0000 */ const BOOL has_signaling_NaN;
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL is_exact;
    /* 0x0000 */ const BOOL is_iec559;
    /* 0x0000 */ const BOOL is_integer;
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const BOOL tinyness_before;
    /* 0x0000 */ const BOOL traps;
    /* 0x0000 */ enum std::float_round_style round_style;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
    /* 0x0000 */ const int radix;
  }; /* size: 0x0004 */
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct wistd::unique_ptr<unsigned short [0],wil::hlocal_secure_deleter>::_CheckArrayPointerConversion<unsigned short *>
{
}; /* size: 0x0001 */

struct wil::cert_context_t
{
}; /* size: 0x0008 */

typedef struct _SECURE_SPECULATION_CONTROL_INFORMATION
{
  struct
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long KvaShadowSupported : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long KvaShadowEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long KvaShadowUserGlobal : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long KvaShadowPcid : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long MbClearEnabled : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long L1TFMitigated : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long BpbEnabled : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long IbrsPresent : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long EnhancedIbrs : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long StibpPresent : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long SsbdSupported : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long SsbdRequired : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long BpbKernelToUser : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long BpbUserToKernel : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved : 18; /* bit position: 14 */
    }; /* bitfield */
  } /* size: 0x0004 */ SecureSpeculationFlags;
} SECURE_SPECULATION_CONTROL_INFORMATION, *PSECURE_SPECULATION_CONTROL_INFORMATION; /* size: 0x0004 */

class Microsoft::WRL::ComPtr<ITypeLibCatalogInternal>
{
  /* 0x0000 */ struct ITypeLibCatalogInternal* ptr_;
}; /* size: 0x0008 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<char [0]> >;

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_707;
  /* 0x0008 */ struct _RTL_VERIFIER_DLL_DESCRIPTOR* ProviderDlls;
  /* 0x0010 */ void* ProviderDllLoadCallback /* function */;
  /* 0x0018 */ void* ProviderDllUnloadCallback /* function */;
  /* 0x0020 */ wchar_t* VerifierImage;
  /* 0x0028 */ unsigned long VerifierFlags;
  /* 0x002c */ unsigned long VerifierDebug;
  /* 0x0030 */ void* RtlpGetStackTraceAddress;
  /* 0x0038 */ void* RtlpDebugPageHeapCreate;
  /* 0x0040 */ void* RtlpDebugPageHeapDestroy;
  /* 0x0048 */ void* ProviderNtdllHeapFreeCallback /* function */;
} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR; /* size: 0x0050 */

class std::numeric_limits<double>
{
  union
  {
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct std::ratio<1,1000000000>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IPackagedComProgIdIterator>
{
  /* 0x0000 */ struct IPackagedComProgIdIterator* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<Windows::UI::Color>
{
}; /* size: 0x0008 */

typedef struct _LDR_SECTION_INFO
{
  /* 0x0000 */ void* SectionHandle;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ long Padding_708;
  /* 0x0010 */ struct _OBJECT_ATTRIBUTES* ObjA;
  /* 0x0018 */ unsigned long SectionPageProtection;
  /* 0x001c */ unsigned long AllocationAttributes;
} LDR_SECTION_INFO, *PLDR_SECTION_INFO; /* size: 0x0020 */

typedef struct _LDR_VERIFY_IMAGE_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
  /* 0x0018 */ struct _LDR_SECTION_INFO SectionInfo;
  /* 0x0038 */ unsigned short ImageCharacteristics;
  /* 0x003a */ char __PADDING__[6];
} LDR_VERIFY_IMAGE_INFO, *PLDR_VERIFY_IMAGE_INFO; /* size: 0x0040 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::IExtensionRegistration *>
{
}; /* size: 0x0001 */

struct ICallingProcessInfo
{
}; /* size: 0x0008 */

class wil::details::static_lazy<DragDropLogging>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[32];
}; /* size: 0x0028 */

struct wistd::__compressed_pair_elem<VerbList *,0,0>
{
  /* 0x0000 */ struct VerbList* __value_;
}; /* size: 0x0008 */

struct wistd::unique_ptr<char [0],wistd::default_delete<char [0]> >::_CheckArrayPointerConversion<char *>
{
}; /* size: 0x0001 */

struct wistd::__invoke_void_return_wrapper<void>
{
}; /* size: 0x0001 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<unsigned int [0]> >;

struct Windows::ApplicationModel::DataTransfer::IDataProviderDeferral
{
}; /* size: 0x0008 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

class wistd::__compressed_pair<unsigned int *,wistd::default_delete<unsigned int [0]> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<unsigned int [0],wistd::default_delete<unsigned int [0]> >
{
  /* 0x0000 */ class wistd::__compressed_pair<unsigned int *,wistd::default_delete<unsigned int [0]> > __ptr_;
}; /* size: 0x0008 */

struct tagCBTACTIVATESTRUCT
{
  /* 0x0000 */ int fMouse;
  /* 0x0004 */ long Padding_709;
  /* 0x0008 */ struct HWND__* hWndActive;
}; /* size: 0x0010 */

struct Windows::Foundation::IReference<bool>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::CausalityNameHelper<Windows::Foundation::IAsyncActionCompletedHandler,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >
{
}; /* size: 0x0001 */

struct wistd::unique_ptr<unsigned int [0],wistd::default_delete<unsigned int [0]> >::_CheckArrayPointerConversion<unsigned int *>
{
}; /* size: 0x0001 */

class wistd::__compressed_pair<wil::details::event_watcher_state *,wistd::default_delete<wil::details::event_watcher_state> >
{
}; /* size: 0x0008 */

typedef struct _MESSAGE_RESOURCE_BLOCK
{
  /* 0x0000 */ unsigned long LowId;
  /* 0x0004 */ unsigned long HighId;
  /* 0x0008 */ unsigned long OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK; /* size: 0x000c */

class CFilteredRunningObjectTable
{
}; /* size: 0x0008 */

class std::chrono::time_point<std::chrono::system_clock,std::chrono::duration<__int64,std::ratio<1,10000000> > >
{
  /* 0x0000 */ class std::chrono::duration<__int64,std::ratio<1,10000000> > _MyDur;
}; /* size: 0x0008 */

struct wil::FeatureProperties
{
  /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
  /* 0x0001 */ char Padding_710[3];
  /* 0x0004 */ enum wil::FeatureStage stage;
  /* 0x0008 */ BOOL isEnabledByDefault;
  /* 0x0009 */ char Padding_711;
  /* 0x000a */ unsigned short version;
  /* 0x000c */ unsigned short baseVersion;
  /* 0x000e */ BOOL isEnabled;
  /* 0x000f */ char __PADDING__[1];
}; /* size: 0x0010 */

struct Windows::Foundation::Rect
{
  /* 0x0000 */ float X;
  /* 0x0004 */ float Y;
  /* 0x0008 */ float Width;
  /* 0x000c */ float Height;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<1>,1,1,0,Windows::Foundation::IAsyncAction,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >
{
  /* 0x0000 */ long Padding_712[24];
  /* 0x0060 */ union Microsoft::WRL::Details::ReferenceCountOrWeakReferencePointer refCount_;
}; /* size: 0x0068 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,wil_FeatureTestState *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits
{
}; /* size: 0x0001 */

struct wistd::__unique_ptr_deleter_sfinae<wil::process_heap_deleter>;

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IComClassIterator>
{
}; /* size: 0x0010 */

struct IDisconnectSink
{
}; /* size: 0x0008 */

typedef union _RPC_ASYNC_NOTIFICATION_INFO
{
  union
  {
    struct
    {
      /* 0x0000 */ void* NotificationRoutine /* function */;
      /* 0x0008 */ void* hThread;
    } /* size: 0x0010 */ APC;
    struct
    {
      /* 0x0000 */ void* hIOPort;
      /* 0x0008 */ unsigned long dwNumberOfBytesTransferred;
      /* 0x000c */ long Padding_713;
      /* 0x0010 */ unsigned __int64 dwCompletionKey;
      /* 0x0018 */ struct _OVERLAPPED* lpOverlapped;
    } /* size: 0x0020 */ IOC;
    struct
    {
      /* 0x0000 */ struct HWND__* hWnd;
      /* 0x0008 */ unsigned int Msg;
      /* 0x000c */ long __PADDING__[1];
    } /* size: 0x0010 */ HWND;
    /* 0x0000 */ void* hEvent;
    /* 0x0000 */ void* NotificationRoutine /* function */;
  }; /* size: 0x0020 */
} RPC_ASYNC_NOTIFICATION_INFO, *PRPC_ASYNC_NOTIFICATION_INFO; /* size: 0x0020 */

typedef struct _RPC_ASYNC_STATE
{
  /* 0x0000 */ unsigned int Size;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ long Lock;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ void* StubInfo;
  /* 0x0018 */ void* UserInfo;
  /* 0x0020 */ void* RuntimeInfo;
  /* 0x0028 */ enum _RPC_ASYNC_EVENT Event;
  /* 0x002c */ enum _RPC_NOTIFICATION_TYPES NotificationType;
  /* 0x0030 */ union _RPC_ASYNC_NOTIFICATION_INFO u;
  /* 0x0050 */ __int64 Reserved[4];
} RPC_ASYNC_STATE, *PRPC_ASYNC_STATE; /* size: 0x0070 */

class wil::details::unique_storage<wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,wil_FeatureTestState *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct wil_FeatureTestState* m_ptr;
}; /* size: 0x0008 */

struct std::ratio<1,10000000>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

struct std::ratio<1,1>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgress_impl<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

struct Windows::ApplicationModel::DataTransfer::IDataProviderHandler
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> const >;

struct std::_Char_traits<char32_t,unsigned int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0001 */

struct wistd::function<void __cdecl(void)>::__callable_imp<wil::unique_any_t<wil::event_watcher_t<wil::details::unique_storage<wil::details::resource_policy<wil::details::event_watcher_state *,void (__cdecl*)(wil::details::event_watcher_state *),&wil::details::delete_event_watcher_state,wistd::integral_constant<unsigned __int64,2>,wil::details::event_watcher_state *,wil::details::event_watcher_state *,0,std::nullptr_t> >,wil::err_returncode_policy> >,0>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct Windows::Foundation::Internal::AggregateType<Windows::System::UserAuthenticationStatusChangingEventArgs *,Windows::System::IUserAuthenticationStatusChangingEventArgs *>;

class Microsoft::WRL::ComPtr<IComProgIdIterator>;

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>
{
}; /* size: 0x0020 */

struct wistd::unique_ptr<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> >::__nat;

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::event_watcher_state> >;

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

struct std::filesystem::_File_time_clock
{
  /* 0x0000 */ const BOOL is_steady;
}; /* size: 0x0001 */

struct std::ratio<3600,1>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

typedef struct _s__RTTIClassHierarchyDescriptor
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long attributes;
  /* 0x0008 */ unsigned long numBaseClasses;
  /* 0x000c */ const struct _s__RTTIBaseClassArray* pBaseClassArray;
} s__RTTIClassHierarchyDescriptor, *Ps__RTTIClassHierarchyDescriptor; /* size: 0x0014 */

class Windows::Storage::StorageLibraryChange;

typedef struct __vc_attributes::objectAttribute
{
} _vc_attributes::objectAttribute, *P_vc_attributes::objectAttribute; /* size: 0x0001 */

class std::chrono::duration<double,std::ratio<3600,1> >
{
  /* 0x0000 */ double _MyRep;
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>
{
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_STACK64
{
  /* 0x0000 */ unsigned __int64 ActiveFrame;
  /* 0x0008 */ struct LIST_ENTRY64 FrameListCache;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long NextCookieSequenceNumber;
  /* 0x0020 */ unsigned long StackId;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_STACK64, *PACTIVATION_CONTEXT_STACK64; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> const >;

struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *>
{
}; /* size: 0x0001 */

typedef struct _RTL_HANDLE_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    /* 0x0000 */ struct _RTL_HANDLE_TABLE_ENTRY* NextFree;
  }; /* size: 0x0008 */
} RTL_HANDLE_TABLE_ENTRY, *PRTL_HANDLE_TABLE_ENTRY; /* size: 0x0008 */

class wistd::unique_ptr<wil::details::event_watcher_state,wistd::default_delete<wil::details::event_watcher_state> >
{
  /* 0x0000 */ class wistd::__compressed_pair<wil::details::event_watcher_state *,wistd::default_delete<wil::details::event_watcher_state> > __ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef struct _NDR64_EXPR_OPERATOR
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Operator;
  /* 0x0002 */ unsigned char CastType;
  /* 0x0003 */ unsigned char Reserved;
} NDR64_EXPR_OPERATOR, *PNDR64_EXPR_OPERATOR; /* size: 0x0004 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::v1_enumAttribute
{
} _vc_attributes::v1_enumAttribute, *P_vc_attributes::v1_enumAttribute; /* size: 0x0001 */

struct std::ratio<60,1>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

class std::chrono::duration<double,std::ratio<1,1> >
{
  /* 0x0000 */ double _MyRep;
}; /* size: 0x0008 */

typedef struct _LUID_AND_ATTRIBUTES
{
  /* 0x0000 */ struct _LUID Luid;
  /* 0x0008 */ unsigned long Attributes;
} LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES; /* size: 0x000c */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IOleDataFormatIterator>
{
}; /* size: 0x0008 */

struct wil::err_exception_policy
{
}; /* size: 0x0001 */

typedef struct _CERT_STORE_PROV_FIND_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long dwFindFlags;
  /* 0x000c */ unsigned long dwFindType;
  /* 0x0010 */ const void* pvFindPara;
} CERT_STORE_PROV_FIND_INFO, *PCERT_STORE_PROV_FIND_INFO; /* size: 0x0018 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned int,unsigned int>
{
}; /* size: 0x0008 */

class wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>
{
  /* 0x0000 */ const unsigned __int64 __buffer_size;
  /* 0x0008 */ union wistd::__aligned_storage<104,8,1>::type __buf_;
  /* 0x0070 */ class wistd::__function::__base<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>* __f_;
}; /* size: 0x0078 */

struct Windows::System::IUserAuthenticationStatusChangeDeferral
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>
{
}; /* size: 0x0008 */

struct tagEMRFILLRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ unsigned char RgnData[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,unsigned int>
{
}; /* size: 0x0008 */

struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable_imp<<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable<<lambda_22cbdb4d3fc57eb0ef26a2cc5efb1276> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct wistd::function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>::__callable<<lambda_af47d61301194c5d4839e4c10d405b79> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef struct _NDR64_ARRAY_ELEMENT_INFO
{
  /* 0x0000 */ unsigned int ElementMemSize;
  /* 0x0004 */ long Padding_714;
  /* 0x0008 */ const void* Element;
} NDR64_ARRAY_ELEMENT_INFO, *PNDR64_ARRAY_ELEMENT_INFO; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,void * (__cdecl*)(void *),&LocalFree,char *>
{
}; /* size: 0x0001 */

struct Windows::Storage::IStorageLibraryChange
{
}; /* size: 0x0008 */

typedef struct __vcrt_va_list_is_reference<unsigned short const *>
{
} _vcrt_va_list_is_reference<unsigned short const *>, *P_vcrt_va_list_is_reference<unsigned short const *>; /* size: 0x0001 */

struct PrivMemDeleter
{
}; /* size: 0x0001 */

class CPackagerMoniker
{
  /* 0x0000 */ long Padding_715[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_716;
  /* 0x0010 */ wchar_t* m_szFile;
  /* 0x0018 */ struct IMoniker* m_pmk;
  /* 0x0020 */ int m_fLink;
}; /* size: 0x0028 */

struct std::ratio<1,1000000>
{
  union
  {
    /* 0x0000 */ const __int64 num;
    /* 0x0000 */ const __int64 den;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

struct HRAWINPUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Windows::Foundation::IAsyncActionWithProgress<double>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView> >;

struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventHandler
{
}; /* size: 0x0008 */

typedef struct _TEB
{
  /* 0x0000 */ struct _NT_TIB NtTib;
  /* 0x0038 */ void* EnvironmentPointer;
  /* 0x0040 */ struct _CLIENT_ID ClientId;
  /* 0x0050 */ void* ActiveRpcHandle;
  /* 0x0058 */ void* ThreadLocalStoragePointer;
  /* 0x0060 */ struct _PEB* ProcessEnvironmentBlock;
  /* 0x0068 */ unsigned long LastErrorValue;
  /* 0x006c */ unsigned long CountOfOwnedCriticalSections;
  /* 0x0070 */ void* CsrClientThread;
  /* 0x0078 */ void* Win32ThreadInfo;
  /* 0x0080 */ unsigned long User32Reserved[26];
  /* 0x00e8 */ unsigned long UserReserved[5];
  /* 0x00fc */ long Padding_717;
  /* 0x0100 */ void* WOW32Reserved;
  /* 0x0108 */ unsigned long CurrentLocale;
  /* 0x010c */ unsigned long FpSoftwareStatusRegister;
  /* 0x0110 */ void* ReservedForDebuggerInstrumentation[16];
  /* 0x0190 */ void* SystemReserved1[30];
  /* 0x0280 */ char PlaceholderCompatibilityMode;
  /* 0x0281 */ unsigned char PlaceholderHydrationAlwaysExplicit;
  /* 0x0282 */ char PlaceholderReserved[10];
  /* 0x028c */ unsigned long ProxiedProcessId;
  /* 0x0290 */ struct _ACTIVATION_CONTEXT_STACK _ActivationStack;
  /* 0x02b8 */ unsigned char WorkingOnBehalfTicket[8];
  /* 0x02c0 */ long ExceptionCode;
  /* 0x02c4 */ unsigned char Padding0[4];
  /* 0x02c8 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x02d0 */ unsigned __int64 InstrumentationCallbackSp;
  /* 0x02d8 */ unsigned __int64 InstrumentationCallbackPreviousPc;
  /* 0x02e0 */ unsigned __int64 InstrumentationCallbackPreviousSp;
  /* 0x02e8 */ unsigned long TxFsContext;
  /* 0x02ec */ unsigned char InstrumentationCallbackDisabled;
  /* 0x02ed */ unsigned char UnalignedLoadStoreExceptions;
  /* 0x02ee */ unsigned char Padding1[2];
  /* 0x02f0 */ struct _GDI_TEB_BATCH GdiTebBatch;
  /* 0x07d8 */ struct _CLIENT_ID RealClientId;
  /* 0x07e8 */ void* GdiCachedProcessHandle;
  /* 0x07f0 */ unsigned long GdiClientPID;
  /* 0x07f4 */ unsigned long GdiClientTID;
  /* 0x07f8 */ void* GdiThreadLocalInfo;
  /* 0x0800 */ unsigned __int64 Win32ClientInfo[62];
  /* 0x09f0 */ void* glDispatchTable[233];
  /* 0x1138 */ unsigned __int64 glReserved1[29];
  /* 0x1220 */ void* glReserved2;
  /* 0x1228 */ void* glSectionInfo;
  /* 0x1230 */ void* glSection;
  /* 0x1238 */ void* glTable;
  /* 0x1240 */ void* glCurrentRC;
  /* 0x1248 */ void* glContext;
  /* 0x1250 */ unsigned long LastStatusValue;
  /* 0x1254 */ unsigned char Padding2[4];
  /* 0x1258 */ struct _UNICODE_STRING StaticUnicodeString;
  /* 0x1268 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x1472 */ unsigned char Padding3[6];
  /* 0x1478 */ void* DeallocationStack;
  /* 0x1480 */ void* TlsSlots[64];
  /* 0x1680 */ struct _LIST_ENTRY TlsLinks;
  /* 0x1690 */ void* Vdm;
  /* 0x1698 */ void* ReservedForNtRpc;
  /* 0x16a0 */ void* DbgSsReserved[2];
  /* 0x16b0 */ unsigned long HardErrorMode;
  /* 0x16b4 */ unsigned char Padding4[4];
  /* 0x16b8 */ void* Instrumentation[11];
  /* 0x1710 */ struct _GUID ActivityId;
  /* 0x1720 */ void* SubProcessTag;
  /* 0x1728 */ void* PerflibData;
  /* 0x1730 */ void* EtwTraceData;
  /* 0x1738 */ void* WinSockData;
  /* 0x1740 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x1744 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x1744 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x1744 */ unsigned char ReservedPad0;
      /* 0x1745 */ unsigned char ReservedPad1;
      /* 0x1746 */ unsigned char ReservedPad2;
      /* 0x1747 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x1748 */ unsigned long GuaranteedStackBytes;
  /* 0x174c */ unsigned char Padding5[4];
  /* 0x1750 */ void* ReservedForPerf;
  /* 0x1758 */ void* ReservedForOle;
  /* 0x1760 */ unsigned long WaitingOnLoaderLock;
  /* 0x1764 */ unsigned char Padding6[4];
  /* 0x1768 */ void* SavedPriorityState;
  /* 0x1770 */ unsigned __int64 ReservedForCodeCoverage;
  /* 0x1778 */ void* ThreadPoolData;
  /* 0x1780 */ void** TlsExpansionSlots;
  /* 0x1788 */ struct _CHPEV2_CPUAREA_INFO* ChpeV2CpuAreaInfo;
  /* 0x1790 */ void* Unused;
  /* 0x1798 */ unsigned long MuiGeneration;
  /* 0x179c */ unsigned long IsImpersonating;
  /* 0x17a0 */ void* NlsCache;
  /* 0x17a8 */ void* pShimData;
  /* 0x17b0 */ unsigned long HeapData;
  /* 0x17b4 */ unsigned char Padding7[4];
  /* 0x17b8 */ void* CurrentTransactionHandle;
  /* 0x17c0 */ struct _TEB_ACTIVE_FRAME* ActiveFrame;
  /* 0x17c8 */ void* FlsData;
  /* 0x17d0 */ void* PreferredLanguages;
  /* 0x17d8 */ void* UserPrefLanguages;
  /* 0x17e0 */ void* MergedPrefLanguages;
  /* 0x17e8 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x17ec */ volatile unsigned short CrossTebFlags;
    /* 0x17ec */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x17ee */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x17ee */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x17ee */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x17ee */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x17ee */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x17ee */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x17ee */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x17ee */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x17ee */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x17ee */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x17ee */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x17ee */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x17ee */ unsigned short SessionAware : 1; /* bit position: 11 */
      /* 0x17ee */ unsigned short LoadOwner : 1; /* bit position: 12 */
      /* 0x17ee */ unsigned short LoaderWorker : 1; /* bit position: 13 */
      /* 0x17ee */ unsigned short SkipLoaderInit : 1; /* bit position: 14 */
      /* 0x17ee */ unsigned short SkipFileAPIBrokering : 1; /* bit position: 15 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x17f0 */ void* TxnScopeEnterCallback;
  /* 0x17f8 */ void* TxnScopeExitCallback;
  /* 0x1800 */ void* TxnScopeContext;
  /* 0x1808 */ unsigned long LockCount;
  /* 0x180c */ long WowTebOffset;
  /* 0x1810 */ void* ResourceRetValue;
  /* 0x1818 */ void* ReservedForWdf;
  /* 0x1820 */ unsigned __int64 ReservedForCrt;
  /* 0x1828 */ struct _GUID EffectiveContainerId;
  /* 0x1838 */ unsigned __int64 LastSleepCounter;
  /* 0x1840 */ unsigned long SpinCallCount;
  /* 0x1844 */ unsigned char Padding8[4];
  /* 0x1848 */ unsigned __int64 ExtendedFeatureDisableMask;
} TEB, *PTEB; /* size: 0x1850 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<21,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20> >
{
} tlgDataDescInit<_tlgIndexSequence<21,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20> >, *PtlgDataDescInit<_tlgIndexSequence<21,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20> >; /* size: 0x0001 */

struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(void)>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView> const >;

typedef struct _COVERAGE_MODULE_INFO
{
  /* 0x0000 */ unsigned long ModuleInfoSize;
  /* 0x0004 */ unsigned long IsBinaryLoaded;
  /* 0x0008 */ struct _UNICODE_STRING ModulePathName;
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned char CoverageSection[1];
  /* 0x001d */ char __PADDING__[3];
} COVERAGE_MODULE_INFO, *PCOVERAGE_MODULE_INFO; /* size: 0x0020 */

class ComTrace
{
  /* 0x0000 */ long Padding_718[6];
  /* 0x0018 */ struct ComTrace::StaticHandle m_staticHandle;
}; /* size: 0x0020 */

struct Windows::Foundation::IReference<unsigned __int64>
{
}; /* size: 0x0008 */

class stdext::exception
{
  /* 0x0000 */ long Padding_719[2];
  /* 0x0008 */ const char* _Ptr;
}; /* size: 0x0010 */

struct wistd::__compressed_pair_elem<_TOKEN_MANDATORY_LABEL *,0,0>
{
  /* 0x0000 */ struct _TOKEN_MANDATORY_LABEL* __value_;
}; /* size: 0x0008 */

typedef struct _tlgCharTraits<char16_t>
{
} tlgCharTraits<char16_t>, *PtlgCharTraits<char16_t>; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>
{
}; /* size: 0x0001 */

typedef struct _MUILANGLISTNODE
{
  /* 0x0000 */ unsigned short LanguageType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ short LanguageSpec;
} MUILANGLISTNODE, *PMUILANGLISTNODE; /* size: 0x0006 */

struct METADC
{
  /* 0x0000 */ int xMwo;
  /* 0x0004 */ int yMwo;
  /* 0x0008 */ int xMwe;
  /* 0x000c */ int yMwe;
  /* 0x0010 */ int xre;
  /* 0x0014 */ int yre;
  /* 0x0018 */ struct METADC* pNext;
}; /* size: 0x0020 */

typedef struct __vc_attributes::atl::soap_methodAttribute
{
  /* 0x0000 */ const char* name;
} _vc_attributes::atl::soap_methodAttribute, *P_vc_attributes::atl::soap_methodAttribute; /* size: 0x0008 */

struct wistd::__function::__maybe_derive_from_unary_function<void __cdecl(wistd::unique_ptr<wil::details::ApiTelemetryLogger::ApiDataList::ApiData,wistd::default_delete<wil::details::ApiTelemetryLogger::ApiDataList::ApiData> > &)>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<double>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<__int64>
{
}; /* size: 0x0008 */

struct KEY_PID_ARRAY
{
  /* 0x0000 */ void* PID;
  /* 0x0008 */ struct _UNICODE_STRING KeyName;
}; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperationWithProgress<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _tagDdeClassInfo
{
  /* 0x0000 */ unsigned long dwContextMask;
  /* 0x0004 */ int fClaimFactory;
  /* 0x0008 */ unsigned long dwContext;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwThreadId;
  /* 0x0014 */ unsigned long dwRegistrationKey;
  /* 0x0018 */ struct IUnknown* punk;
} tagDdeClassInfo, *PtagDdeClassInfo; /* size: 0x0020 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,float>
{
}; /* size: 0x0008 */

typedef struct _GDI_TEB_BATCH64
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Offset : 31; /* bit position: 0 */
    /* 0x0000 */ unsigned long HasRenderingCommand : 1; /* bit position: 31 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_720;
  /* 0x0008 */ unsigned __int64 HDC;
  /* 0x0010 */ unsigned long Buffer[310];
} GDI_TEB_BATCH64, *PGDI_TEB_BATCH64; /* size: 0x04e8 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap_impl<unsigned int,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_PRIORITY_CLASS_EX
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned short ForegroundValid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned short PriorityClassValid : 1; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned short AllFlags;
  }; /* size: 0x0002 */
  /* 0x0002 */ unsigned char PriorityClass;
  /* 0x0003 */ unsigned char Foreground;
} PROCESS_PRIORITY_CLASS_EX, *PPROCESS_PRIORITY_CLASS_EX; /* size: 0x0004 */

struct std::_Default_allocate_traits
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>
{
}; /* size: 0x0001 */

struct tagBITMAPINFO
{
  /* 0x0000 */ struct tagBITMAPINFOHEADER bmiHeader;
  /* 0x0028 */ struct tagRGBQUAD bmiColors[1];
}; /* size: 0x002c */

struct IPropertyStore
{
}; /* size: 0x0008 */

struct IComProcessInfo3
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<HSTRING__ *>
{
}; /* size: 0x0008 */

struct tagCOPYDATASTRUCT
{
  /* 0x0000 */ unsigned __int64 dwData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ long Padding_721;
  /* 0x0010 */ void* lpData;
}; /* size: 0x0018 */

struct IEnterpriseDropTarget
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *>
{
}; /* size: 0x0008 */

class wil::TraceLoggingProvider
{
  /* 0x0000 */ long Padding_722[2];
  /* 0x0008 */ const struct _tlgProvider_t* m_providerHandle;
  /* 0x0010 */ BOOL m_ownsProviderHandle;
  /* 0x0011 */ char Padding_723[3];
  /* 0x0014 */ enum wil::ErrorReportingType m_errorReportingType;
}; /* size: 0x0018 */

struct CO_MTA_USAGE_COOKIE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class IsInt<unsigned __int64>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoDataFormatIterator> const >;

struct std::_Container_base0
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > >
{
}; /* size: 0x0048 */

typedef struct _PRIVILEGE_SET
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ unsigned long Control;
  /* 0x0008 */ struct _LUID_AND_ATTRIBUTES Privilege[1];
} PRIVILEGE_SET, *PPRIVILEGE_SET; /* size: 0x0014 */

struct RECTS
{
  /* 0x0000 */ short left;
  /* 0x0002 */ short top;
  /* 0x0004 */ short right;
  /* 0x0006 */ short bottom;
}; /* size: 0x0008 */

struct WMFHEADER
{
  /* 0x0000 */ unsigned short hmf;
  /* 0x0002 */ struct RECTS rcBox;
  /* 0x000a */ unsigned short inch;
  /* 0x000c */ unsigned long ulReserved;
  /* 0x0010 */ unsigned short checksum;
}; /* size: 0x0012 */

struct std::_Iterator_base0
{
  /* 0x0000 */ const BOOL _Unwrap_when_unverified;
}; /* size: 0x0001 */

struct wistd::__compressed_pair_elem<_GUID *,0,0>
{
  /* 0x0000 */ struct _GUID* __value_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Point>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::Streams::IBuffer *,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>
{
}; /* size: 0x0008 */

typedef struct _FILE_EA_INFORMATION
{
  /* 0x0000 */ unsigned long EaSize;
} FILE_EA_INFORMATION, *PFILE_EA_INFORMATION; /* size: 0x0004 */

struct Windows::ApplicationModel::Background::IBackgroundTaskCanceledEventHandler
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageFolder *> *>
{
}; /* size: 0x0008 */

struct std::_Leave_proxy_unbound
{
}; /* size: 0x0001 */

struct Windows::Foundation::IReferenceArray<short>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Rect,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<InsertableCandidateIterator> const >;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >* ptr_;
}; /* size: 0x0008 */

class std::_String_view_iterator<std::char_traits<char> >;

struct Windows::Foundation::IAsyncOperationCompletedHandler<unsigned __int64>
{
}; /* size: 0x0008 */

struct tagI_RpcProxyCallbackInterface
{
  /* 0x0000 */ void* IsValidMachineFn /* function */;
  /* 0x0008 */ void* GetClientAddressFn /* function */;
  /* 0x0010 */ void* GetConnectionTimeoutFn /* function */;
  /* 0x0018 */ void* PerformCalloutFn /* function */;
  /* 0x0020 */ void* FreeCalloutStateFn /* function */;
  /* 0x0028 */ void* GetClientSessionAndResourceUUIDFn /* function */;
  /* 0x0030 */ void* ProxyFilterIfFn /* function */;
  /* 0x0038 */ void* RpcProxyUpdatePerfCounterFn /* function */;
  /* 0x0040 */ void* RpcProxyUpdatePerfCounterBackendServerFn /* function */;
}; /* size: 0x0048 */

typedef struct _CRYPT_PASSWORD_CREDENTIALSW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_724;
  /* 0x0008 */ wchar_t* pszUsername;
  /* 0x0010 */ wchar_t* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSW, *PCRYPT_PASSWORD_CREDENTIALSW; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::Storage::StorageLibraryChange *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>
{
}; /* size: 0x0001 */

typedef struct _TOKEN_CONTROL
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
  /* 0x0018 */ struct _TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL, *PTOKEN_CONTROL; /* size: 0x0028 */

struct tagHIGHCONTRASTW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszDefaultScheme;
}; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::System::UserAgeConsentResult>
{
}; /* size: 0x0008 */

typedef struct _VIRTUAL_STORAGE_TYPE
{
  /* 0x0000 */ unsigned long DeviceId;
  /* 0x0004 */ struct _GUID VendorId;
} VIRTUAL_STORAGE_TYPE, *PVIRTUAL_STORAGE_TYPE; /* size: 0x0014 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY
{
  /* 0x0000 */ unsigned long EntryLength;
  /* 0x0004 */ unsigned long DependencyTypeFlags;
  /* 0x0008 */ unsigned long ProviderSpecificFlags;
  /* 0x000c */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
} STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY, *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY; /* size: 0x0020 */

struct _CHPEV2_CPUAREA_INFO;

class CEnumSTATDATA
{
  /* 0x0000 */ long Padding_725[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ int m_iDataEnum;
  /* 0x0010 */ class CDAHolder* m_pHolder;
}; /* size: 0x0018 */

typedef struct __vc_attributes::importidlAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::importidlAttribute, *P_vc_attributes::importidlAttribute; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
  /* 0x0000 */ unsigned long status_;
  /* 0x0004 */ long Padding_726;
  /* 0x0008 */ void* sync_;
}; /* size: 0x0010 */

class IntRegion<unsigned short,unsigned short>
{
}; /* size: 0x0001 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_727;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_W; /* size: 0x0028 */

struct wistd::default_delete<char [0]>::_EnableIfConvertible<char>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Point>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<enum Windows::Storage::Search::IndexedState>
{
}; /* size: 0x0008 */

typedef struct _VIDEOPARAMETERS
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long dwOffset;
  /* 0x0014 */ unsigned long dwCommand;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwMode;
  /* 0x0020 */ unsigned long dwTVStandard;
  /* 0x0024 */ unsigned long dwAvailableModes;
  /* 0x0028 */ unsigned long dwAvailableTVStandard;
  /* 0x002c */ unsigned long dwFlickerFilter;
  /* 0x0030 */ unsigned long dwOverScanX;
  /* 0x0034 */ unsigned long dwOverScanY;
  /* 0x0038 */ unsigned long dwMaxUnscaledX;
  /* 0x003c */ unsigned long dwMaxUnscaledY;
  /* 0x0040 */ unsigned long dwPositionX;
  /* 0x0044 */ unsigned long dwPositionY;
  /* 0x0048 */ unsigned long dwBrightness;
  /* 0x004c */ unsigned long dwContrast;
  /* 0x0050 */ unsigned long dwCPType;
  /* 0x0054 */ unsigned long dwCPCommand;
  /* 0x0058 */ unsigned long dwCPStandard;
  /* 0x005c */ unsigned long dwCPKey;
  /* 0x0060 */ unsigned long bCP_APSTriggerBits;
  /* 0x0064 */ unsigned char bOEMCopyProtection[256];
} VIDEOPARAMETERS, *PVIDEOPARAMETERS; /* size: 0x0164 */

struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfRuns;
  /* 0x0008 */ unsigned long NumberOfNodes;
  /* 0x000c */ unsigned long NumberOfChannels;
  /* 0x0010 */ struct _PHYSICAL_CHANNEL_RUN Run[1];
} SYSTEM_MEMORY_TOPOLOGY_INFORMATION, *PSYSTEM_MEMORY_TOPOLOGY_INFORMATION; /* size: 0x0030 */

struct Windows::Foundation::IReference<unsigned char>
{
}; /* size: 0x0008 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<unsigned short [0]> >;

typedef struct _FILE_STORAGE_TIER_REGION
{
  /* 0x0000 */ struct _GUID TierId;
  /* 0x0010 */ unsigned __int64 Offset;
  /* 0x0018 */ unsigned __int64 Length;
} FILE_STORAGE_TIER_REGION, *PFILE_STORAGE_TIER_REGION; /* size: 0x0020 */

class IntTraits<unsigned int>
{
  union
  {
    /* 0x0000 */ const unsigned int maxInt;
    /* 0x0000 */ const unsigned int minInt;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler_impl<unsigned int,unsigned int>
{
}; /* size: 0x0008 */

class wistd::unique_ptr<unsigned short [0],wistd::default_delete<unsigned short [0]> >
{
  /* 0x0000 */ class wistd::__compressed_pair<unsigned short *,wistd::default_delete<unsigned short [0]> > __ptr_;
}; /* size: 0x0008 */

struct GetTypeValueImpl<long,unsigned short *>
{
}; /* size: 0x0001 */

class std::basic_string_view<unsigned short,std::char_traits<unsigned short> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ const wchar_t* _Mydata;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 _Mysize;
}; /* size: 0x0010 */

struct PARAM_ATTRIBUTES
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short ServerAllocSize : 3; /* bit position: 13 */
  }; /* bitfield */
}; /* size: 0x0002 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult *>;

struct wistd::unique_ptr<unsigned short [0],wistd::default_delete<unsigned short [0]> >::_CheckArrayPointerConversion<unsigned short *>
{
}; /* size: 0x0001 */

class MultiplicationHelper<unsigned long,unsigned long,3>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>
{
}; /* size: 0x0001 */

class Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult;

typedef struct _IMAGE_SYMBOL
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ short SectionNumber;
  /* 0x000e */ unsigned short Type;
  /* 0x0010 */ unsigned char StorageClass;
  /* 0x0011 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL, *PIMAGE_SYMBOL; /* size: 0x0012 */

class ComTelemetryProvider
{
  /* 0x0000 */ long Padding_728[6];
  /* 0x0018 */ struct ComTelemetryProvider::StaticHandle m_staticHandle;
}; /* size: 0x0020 */

struct IComThreadingInfo
{
}; /* size: 0x0008 */

class IsFloat<unsigned long,0>
{
}; /* size: 0x0001 */

class std::_String_view_iterator<std::char_traits<char16_t> >;

class std::reverse_iterator<std::_String_view_iterator<std::char_traits<char16_t> > >;

class Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs;

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IDataObject>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits
{
}; /* size: 0x0001 */

typedef struct _MUILANGINFO
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short LangId;
  /* 0x0006 */ short LangNameIndex;
  /* 0x0008 */ unsigned short FallbackTypes;
  /* 0x000a */ short NeutralLangSpec;
  /* 0x000c */ short FallbackSpecs[4];
  /* 0x0014 */ short AlternateCodePage[4];
} MUILANGINFO, *PMUILANGINFO; /* size: 0x001c */

struct Microsoft::WRL::Wrappers::HandleTraits::FileHandleTraits
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0001 */

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005
{
  union
  {
    /* 0x0000 */ struct _GUID clsid;
    /* 0x0000 */ wchar_t* pFileExt;
    /* 0x0000 */ wchar_t* pMimeType;
    /* 0x0000 */ wchar_t* pProgId;
    /* 0x0000 */ wchar_t* pFileName;
    struct
    {
      /* 0x0000 */ wchar_t* pPackageName;
      /* 0x0008 */ struct _GUID PolicyId;
    } /* size: 0x0018 */ ByName;
    struct
    {
      /* 0x0000 */ struct _GUID ObjectId;
      /* 0x0010 */ struct _GUID PolicyId;
    } /* size: 0x0020 */ ByObjectId;
  }; /* size: 0x0020 */
} _MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005; /* size: 0x0020 */

class IntRegion<long,long>
{
}; /* size: 0x0001 */

class CGuidStr
{
  /* 0x0000 */ wchar_t _wszGuid[40];
}; /* size: 0x0050 */

typedef struct _cpinfoexA
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ char CodePageName[260];
} cpinfoexA, *PcpinfoexA; /* size: 0x011c */

typedef struct _tlgDataDescInit<_tlgIndexSequence<1,0> >
{
} tlgDataDescInit<_tlgIndexSequence<1,0> >, *PtlgDataDescInit<_tlgIndexSequence<1,0> >; /* size: 0x0001 */

class CDataAdviseCache
{
  /* 0x0000 */ struct IDataAdviseHolder* m_pDAH;
  /* 0x0008 */ class CMapDwordDword m_mapClientToDelegate;
}; /* size: 0x0050 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::HString
{
  /* 0x0000 */ struct HSTRING__* hstr_;
}; /* size: 0x0008 */

typedef struct _PROPSHEETHEADERA_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndParent;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszCaption;
  /* 0x0028 */ unsigned int nPages;
  /* 0x002c */ long Padding_729;
  union
  {
    /* 0x0030 */ unsigned int nStartPage;
    /* 0x0030 */ const char* pStartPage;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ const struct _PROPSHEETPAGEA* ppsp;
    /* 0x0038 */ struct _PSP** phpage;
  }; /* size: 0x0008 */
  /* 0x0040 */ void* pfnCallback /* function */;
  union
  {
    /* 0x0048 */ struct HBITMAP__* hbmWatermark;
    /* 0x0048 */ const char* pszbmWatermark;
  }; /* size: 0x0008 */
  /* 0x0050 */ struct HPALETTE__* hplWatermark;
  union
  {
    /* 0x0058 */ struct HBITMAP__* hbmHeader;
    /* 0x0058 */ const char* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETHEADERA_V2, *PPROPSHEETHEADERA_V2; /* size: 0x0060 */

struct Windows::Foundation::Collections::IVector<Windows::System::User *>
{
}; /* size: 0x0008 */

typedef struct _WOW64_LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} WOW64_LDT_ENTRY, *PWOW64_LDT_ENTRY; /* size: 0x0008 */

class std::_String_view_iterator<std::char_traits<char32_t> >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRegistration> >
{
}; /* size: 0x0008 */

typedef struct _CMC_TAGGED_CERT_REQUEST
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_730;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SignedCertRequest;
} CMC_TAGGED_CERT_REQUEST, *PCMC_TAGGED_CERT_REQUEST; /* size: 0x0018 */

class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >
{
  /* 0x0000 */ wchar_t* m_ptr;
}; /* size: 0x0008 */

class wil::details::agile_query_policy
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::displaybindAttribute
{
} _vc_attributes::displaybindAttribute, *P_vc_attributes::displaybindAttribute; /* size: 0x0001 */

class IntRegion<unsigned long,unsigned int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *> >
{
}; /* size: 0x0001 */

typedef struct _IMAGE_POLICY_ENTRY
{
  /* 0x0000 */ enum _IMAGE_POLICY_ENTRY_TYPE Type;
  /* 0x0004 */ enum _IMAGE_POLICY_ID PolicyId;
  union
  {
    union
    {
      /* 0x0008 */ const void* None;
      /* 0x0008 */ unsigned char BoolValue;
      /* 0x0008 */ char Int8Value;
      /* 0x0008 */ unsigned char UInt8Value;
      /* 0x0008 */ short Int16Value;
      /* 0x0008 */ unsigned short UInt16Value;
      /* 0x0008 */ int Int32Value;
      /* 0x0008 */ unsigned int UInt32Value;
      /* 0x0008 */ __int64 Int64Value;
      /* 0x0008 */ unsigned __int64 UInt64Value;
      /* 0x0008 */ const char* AnsiStringValue;
      /* 0x0008 */ const wchar_t* UnicodeStringValue;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} IMAGE_POLICY_ENTRY, *PIMAGE_POLICY_ENTRY; /* size: 0x0010 */

typedef struct _IMAGE_POLICY_METADATA
{
  /* 0x0000 */ unsigned char Version;
  /* 0x0001 */ unsigned char Reserved0[7];
  /* 0x0008 */ unsigned __int64 ApplicationId;
  /* 0x0010 */ struct _IMAGE_POLICY_ENTRY* Policies /* zero-length array */;
} IMAGE_POLICY_METADATA, *PIMAGE_POLICY_METADATA; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::BulkAccess::IStorageItemInformation *>
{
}; /* size: 0x0008 */

class CArray<CPageHolder *,CPageHolder * &>
{
  /* 0x0000 */ class CPageHolder** m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IMapChangedEventArgs_impl<_GUID>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibRegistration> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ITypeLibRegistration>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask>* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<double,1>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long AllFlags : 24; /* bit position: 8 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Dummy : 8; /* bit position: 0 */
        /* 0x0000 */ unsigned long SingleDpcTimeLimitPresent : 1; /* bit position: 8 */
        /* 0x0000 */ unsigned long CumulativeDpcTimeLimitPresent : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned long SingleDpcSoftTimeLimitPresent : 1; /* bit position: 10 */
        /* 0x0000 */ unsigned long CumulativeDpcSoftTimeLimitPresent : 1; /* bit position: 11 */
        /* 0x0000 */ unsigned long Reserved : 20; /* bit position: 12 */
      }; /* bitfield */
    } /* size: 0x0004 */ Flags;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SingleDpcTimeLimitMs;
  /* 0x0008 */ unsigned long CumulativeDpcTimeLimitMs;
  /* 0x000c */ unsigned long SingleDpcSoftTimeLimitMs;
  /* 0x0010 */ unsigned long CumulativeDpcSoftTimeLimitMs;
} SYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION, *PSYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION; /* size: 0x0014 */

class CMutexSem2
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_cs;
  /* 0x0028 */ int m_fCsInitialized;
}; /* size: 0x0030 */

typedef struct __WIL__WNF_STATE_NAME
{
  /* 0x0000 */ unsigned long Data[2];
} _WIL__WNF_STATE_NAME, *P_WIL__WNF_STATE_NAME; /* size: 0x0008 */

struct std::char_traits<char32_t>
{
}; /* size: 0x0001 */

class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::AcquireWrite>
{
  /* 0x0000 */ class XWinRT::StaReentrancyLock* _pLock;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,unsigned char>
{
}; /* size: 0x0008 */

class std::reverse_iterator<std::_String_const_iterator<std::_String_val<std::_Simple_types<char> > > >;

class CEMfObject
{
  /* 0x0000 */ long Padding_731[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ long Padding_732;
  /* 0x0010 */ struct HENHMETAFILE__* m_hPres;
  /* 0x0018 */ int m_nRecord;
  /* 0x001c */ HRESULT m_error;
  /* 0x0020 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0028 */ void* m_pfnContinue /* function */;
  /* 0x0030 */ unsigned __int64 m_dwContinue;
  /* 0x0038 */ unsigned long m_dwAspect;
  /* 0x003c */ unsigned long m_dwSize;
  /* 0x0040 */ long m_lWidth;
  /* 0x0044 */ long m_lHeight;
  /* 0x0048 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0050 */

class std::basic_string<char,std::char_traits<char>,std::allocator<char> >
{
  union
  {
    /* 0x0000 */ const unsigned __int64 _BUF_SIZE;
    /* 0x0000 */ const unsigned __int64 _ALLOC_MASK;
    /* 0x0000 */ const BOOL _Can_memcpy_val;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_offset;
    /* 0x0000 */ const unsigned __int64 _Memcpy_val_size;
    /* 0x0000 */ const unsigned __int64 npos;
    /* 0x0000 */ class std::_Compressed_pair<std::allocator<char>,std::_String_val<std::_Simple_types<char> >,1> _Mypair;
  }; /* size: 0x0020 */
}; /* size: 0x0020 */

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION
{
  /* 0x0000 */ unsigned long PrefetchPatchCount;
} SYSTEM_PREFETCH_PATCH_INFORMATION, *PSYSTEM_PREFETCH_PATCH_INFORMATION; /* size: 0x0004 */

class Microsoft::WRL::Wrappers::RoInitializeWrapper
{
  /* 0x0000 */ HRESULT _hr;
}; /* size: 0x0004 */

struct wil::details::static_lazy<OleDragDropTracing>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<OleDragDropTracing>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _PEB
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char SkipPatchingUser32Forwarders : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char IsPackagedProcess : 1; /* bit position: 4 */
      /* 0x0003 */ unsigned char IsAppContainer : 1; /* bit position: 5 */
      /* 0x0003 */ unsigned char IsProtectedProcessLight : 1; /* bit position: 6 */
      /* 0x0003 */ unsigned char IsLongPathAwareProcess : 1; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ unsigned char Padding0[4];
  /* 0x0008 */ void* Mutant;
  /* 0x0010 */ void* ImageBaseAddress;
  /* 0x0018 */ struct _PEB_LDR_DATA* Ldr;
  /* 0x0020 */ struct _RTL_USER_PROCESS_PARAMETERS* ProcessParameters;
  /* 0x0028 */ void* SubSystemData;
  /* 0x0030 */ void* ProcessHeap;
  /* 0x0038 */ struct _RTL_CRITICAL_SECTION* FastPebLock;
  /* 0x0040 */ union _SLIST_HEADER* volatile AtlThunkSListPtr;
  /* 0x0048 */ void* IFEOKey;
  union
  {
    /* 0x0050 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0050 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0050 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0050 */ unsigned long ProcessUsingVEH : 1; /* bit position: 2 */
      /* 0x0050 */ unsigned long ProcessUsingVCH : 1; /* bit position: 3 */
      /* 0x0050 */ unsigned long ProcessUsingFTH : 1; /* bit position: 4 */
      /* 0x0050 */ unsigned long ProcessPreviouslyThrottled : 1; /* bit position: 5 */
      /* 0x0050 */ unsigned long ProcessCurrentlyThrottled : 1; /* bit position: 6 */
      /* 0x0050 */ unsigned long ProcessImagesHotPatched : 1; /* bit position: 7 */
      /* 0x0050 */ unsigned long ReservedBits0 : 24; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0054 */ unsigned char Padding1[4];
  union
  {
    /* 0x0058 */ void* KernelCallbackTable;
    /* 0x0058 */ void* UserSharedInfoPtr;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long SystemReserved;
  /* 0x0064 */ unsigned long AtlThunkSListPtr32;
  /* 0x0068 */ void* ApiSetMap;
  /* 0x0070 */ unsigned long TlsExpansionCounter;
  /* 0x0074 */ unsigned char Padding2[4];
  /* 0x0078 */ struct _RTL_BITMAP* TlsBitmap;
  /* 0x0080 */ unsigned long TlsBitmapBits[2];
  /* 0x0088 */ void* ReadOnlySharedMemoryBase;
  /* 0x0090 */ void* SharedData;
  /* 0x0098 */ void** ReadOnlyStaticServerData;
  /* 0x00a0 */ void* AnsiCodePageData;
  /* 0x00a8 */ void* OemCodePageData;
  /* 0x00b0 */ void* UnicodeCaseTableData;
  /* 0x00b8 */ unsigned long NumberOfProcessors;
  /* 0x00bc */ unsigned long NtGlobalFlag;
  /* 0x00c0 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x00c8 */ unsigned __int64 HeapSegmentReserve;
  /* 0x00d0 */ unsigned __int64 HeapSegmentCommit;
  /* 0x00d8 */ unsigned __int64 HeapDeCommitTotalFreeThreshold;
  /* 0x00e0 */ unsigned __int64 HeapDeCommitFreeBlockThreshold;
  /* 0x00e8 */ unsigned long NumberOfHeaps;
  /* 0x00ec */ unsigned long MaximumNumberOfHeaps;
  /* 0x00f0 */ void** ProcessHeaps;
  /* 0x00f8 */ void* GdiSharedHandleTable;
  /* 0x0100 */ void* ProcessStarterHelper;
  /* 0x0108 */ unsigned long GdiDCAttributeList;
  /* 0x010c */ unsigned char Padding3[4];
  /* 0x0110 */ struct _RTL_CRITICAL_SECTION* LoaderLock;
  /* 0x0118 */ unsigned long OSMajorVersion;
  /* 0x011c */ unsigned long OSMinorVersion;
  /* 0x0120 */ unsigned short OSBuildNumber;
  /* 0x0122 */ unsigned short OSCSDVersion;
  /* 0x0124 */ unsigned long OSPlatformId;
  /* 0x0128 */ unsigned long ImageSubsystem;
  /* 0x012c */ unsigned long ImageSubsystemMajorVersion;
  /* 0x0130 */ unsigned long ImageSubsystemMinorVersion;
  /* 0x0134 */ unsigned char Padding4[4];
  /* 0x0138 */ unsigned __int64 ActiveProcessAffinityMask;
  /* 0x0140 */ unsigned long GdiHandleBuffer[60];
  /* 0x0230 */ void* PostProcessInitRoutine /* function */;
  /* 0x0238 */ struct _RTL_BITMAP* TlsExpansionBitmap;
  /* 0x0240 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x02c0 */ unsigned long SessionId;
  /* 0x02c4 */ unsigned char Padding5[4];
  /* 0x02c8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x02d0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x02d8 */ void* pShimData;
  /* 0x02e0 */ void* AppCompatInfo;
  /* 0x02e8 */ struct _UNICODE_STRING CSDVersion;
  /* 0x02f8 */ const struct _ACTIVATION_CONTEXT_DATA* ActivationContextData;
  /* 0x0300 */ struct _ASSEMBLY_STORAGE_MAP* ProcessAssemblyStorageMap;
  /* 0x0308 */ const struct _ACTIVATION_CONTEXT_DATA* SystemDefaultActivationContextData;
  /* 0x0310 */ struct _ASSEMBLY_STORAGE_MAP* SystemAssemblyStorageMap;
  /* 0x0318 */ unsigned __int64 MinimumStackCommit;
  /* 0x0320 */ void* SparePointers[2];
  /* 0x0330 */ void* PatchLoaderData;
  /* 0x0338 */ struct _CHPEV2_PROCESS_INFO* ChpeV2ProcessInfo;
  /* 0x0340 */ unsigned long AppModelFeatureState;
  /* 0x0344 */ unsigned long SpareUlongs[2];
  /* 0x034c */ unsigned short ActiveCodePage;
  /* 0x034e */ unsigned short OemCodePage;
  /* 0x0350 */ unsigned short UseCaseMapping;
  /* 0x0352 */ unsigned short UnusedNlsField;
  /* 0x0354 */ long Padding_733;
  /* 0x0358 */ void* WerRegistrationData;
  /* 0x0360 */ void* WerShipAssertPtr;
  /* 0x0368 */ void* EcCodeBitMap;
  /* 0x0370 */ void* pImageHeaderHash;
  union
  {
    /* 0x0378 */ unsigned long TracingFlags;
    struct /* bitfield */
    {
      /* 0x0378 */ unsigned long HeapTracingEnabled : 1; /* bit position: 0 */
      /* 0x0378 */ unsigned long CritSecTracingEnabled : 1; /* bit position: 1 */
      /* 0x0378 */ unsigned long LibLoaderTracingEnabled : 1; /* bit position: 2 */
      /* 0x0378 */ unsigned long SpareTracingBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x037c */ unsigned char Padding6[4];
  /* 0x0380 */ unsigned __int64 CsrServerReadOnlySharedMemoryBase;
  /* 0x0388 */ unsigned __int64 TppWorkerpListLock;
  /* 0x0390 */ struct _LIST_ENTRY TppWorkerpList;
  /* 0x03a0 */ void* WaitOnAddressHashTable[128];
  /* 0x07a0 */ void* TelemetryCoverageHeader;
  /* 0x07a8 */ unsigned long CloudFileFlags;
  /* 0x07ac */ unsigned long CloudFileDiagFlags;
  /* 0x07b0 */ char PlaceholderCompatibilityMode;
  /* 0x07b1 */ char PlaceholderCompatibilityModeReserved[7];
  /* 0x07b8 */ struct _LEAP_SECOND_DATA* LeapSecondData;
  union
  {
    /* 0x07c0 */ unsigned long LeapSecondFlags;
    struct /* bitfield */
    {
      /* 0x07c0 */ unsigned long SixtySecondEnabled : 1; /* bit position: 0 */
      /* 0x07c0 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x07c4 */ unsigned long NtGlobalFlag2;
  /* 0x07c8 */ unsigned __int64 ExtendedFeatureDisableMask;
} PEB, *PPEB; /* size: 0x07d0 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::StorageFile *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Rect>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_MASK_GEN_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
} CRYPT_MASK_GEN_ALGORITHM, *PCRYPT_MASK_GEN_ALGORITHM; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,__int64> *>
{
}; /* size: 0x0008 */

struct FEATURE_LOGGED_TRAITS
{
  /* 0x0000 */ unsigned short version;
  /* 0x0002 */ unsigned short baseVersion;
  /* 0x0004 */ unsigned char stage;
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double>
{
}; /* size: 0x0008 */

class wil::QueryFullProcessImageNameW::__l2::<lambda_e1bdf235c2021226f8c53f8fb7bf9230>;

class wil::GetFullPathNameW::__l2::<lambda_0c2afb377131ef1ab2244976d5fb45fc>;

class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char16_t> > > >;

typedef union __m64
{
  union
  {
    /* 0x0000 */ unsigned __int64 m64_u64;
    /* 0x0000 */ float m64_f32[2];
    /* 0x0000 */ char m64_i8[8];
    /* 0x0000 */ short m64_i16[4];
    /* 0x0000 */ int m64_i32[2];
    /* 0x0000 */ __int64 m64_i64;
    /* 0x0000 */ unsigned char m64_u8[8];
    /* 0x0000 */ unsigned short m64_u16[4];
    /* 0x0000 */ unsigned int m64_u32[2];
  }; /* size: 0x0008 */
} _m64, *P_m64; /* size: 0x0008 */

struct Windows::Foundation::Size
{
  /* 0x0000 */ float Width;
  /* 0x0004 */ float Height;
}; /* size: 0x0008 */

typedef struct _COMMPROP
{
  /* 0x0000 */ unsigned short wPacketLength;
  /* 0x0002 */ unsigned short wPacketVersion;
  /* 0x0004 */ unsigned long dwServiceMask;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwMaxTxQueue;
  /* 0x0010 */ unsigned long dwMaxRxQueue;
  /* 0x0014 */ unsigned long dwMaxBaud;
  /* 0x0018 */ unsigned long dwProvSubType;
  /* 0x001c */ unsigned long dwProvCapabilities;
  /* 0x0020 */ unsigned long dwSettableParams;
  /* 0x0024 */ unsigned long dwSettableBaud;
  /* 0x0028 */ unsigned short wSettableData;
  /* 0x002a */ unsigned short wSettableStopParity;
  /* 0x002c */ unsigned long dwCurrentTxQueue;
  /* 0x0030 */ unsigned long dwCurrentRxQueue;
  /* 0x0034 */ unsigned long dwProvSpec1;
  /* 0x0038 */ unsigned long dwProvSpec2;
  /* 0x003c */ wchar_t wcProvChar[1];
  /* 0x003e */ char __PADDING__[2];
} COMMPROP, *PCOMMPROP; /* size: 0x0040 */

struct Windows::Foundation::IEventHandler<HSTRING__ *>
{
}; /* size: 0x0008 */

struct std::allocator_traits<std::allocator<char> >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector<float>
{
}; /* size: 0x0008 */

typedef struct _RETRIEVAL_POINTER_BASE
{
  /* 0x0000 */ union _LARGE_INTEGER FileAreaOffset;
} RETRIEVAL_POINTER_BASE, *PRETRIEVAL_POINTER_BASE; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<HSTRING__ *>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  union
  {
    /* 0x0004 */ unsigned long UnwindData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long Flag : 2; /* bit position: 0 */
      /* 0x0004 */ unsigned long FunctionLength : 11; /* bit position: 2 */
      /* 0x0004 */ unsigned long RegF : 3; /* bit position: 13 */
      /* 0x0004 */ unsigned long RegI : 4; /* bit position: 16 */
      /* 0x0004 */ unsigned long H : 1; /* bit position: 20 */
      /* 0x0004 */ unsigned long CR : 2; /* bit position: 21 */
      /* 0x0004 */ unsigned long FrameSize : 9; /* bit position: 23 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ARM64_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

struct PARAM_DESCRIPTION
{
  /* 0x0000 */ struct PARAM_ATTRIBUTES ParamAttr;
  /* 0x0002 */ unsigned short StackOffset;
  union
  {
    /* 0x0004 */ unsigned short TypeOffset;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Unused;
    } /* size: 0x0002 */ SimpleType;
  }; /* size: 0x0002 */
}; /* size: 0x0006 */

typedef struct __vc_attributes::bindableAttribute
{
} _vc_attributes::bindableAttribute, *P_vc_attributes::bindableAttribute; /* size: 0x0001 */

class CArray<CStatData>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_734;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CStatData>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

struct wistd::__compressed_pair_elem<wil::function_deleter<void * (__cdecl*)(void *),&LocalFree>,1,1>
{
}; /* size: 0x0001 */

struct std::_String_constructor_concat_tag
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<__int64,double> *>
{
}; /* size: 0x0008 */

struct std::input_iterator_tag
{
}; /* size: 0x0001 */

class CArray<CFormatEtc>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_735;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CFormatEtc>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

typedef struct _FIXED
{
  /* 0x0000 */ unsigned short fract;
  /* 0x0002 */ short value;
} FIXED, *PFIXED; /* size: 0x0004 */

typedef struct _EXCEPTION_REGISTRATION_RECORD
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* Next;
  /* 0x0008 */ void* Handler /* function */;
} EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD; /* size: 0x0010 */

typedef struct _CMSG_RC4_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC4_AUX_INFO, *PCMSG_RC4_AUX_INFO; /* size: 0x0008 */

struct tagBIND_OPTS2
{
  /* 0x0000 */ long Padding_736[4];
  /* 0x0010 */ unsigned long dwTrackFlags;
  /* 0x0014 */ unsigned long dwClassContext;
  /* 0x0018 */ unsigned long locale;
  /* 0x001c */ long Padding_737;
  /* 0x0020 */ struct _COSERVERINFO* pServerInfo;
}; /* size: 0x0028 */

typedef struct __vc_attributes::licensedAttribute
{
} _vc_attributes::licensedAttribute, *P_vc_attributes::licensedAttribute; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapView<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<float>
{
}; /* size: 0x0001 */

class wil::details::<lambda_799dfdb4d0ddd17663577143d55dc686>
{
}; /* size: 0x0001 */

class std::_String_iterator<std::_String_val<std::_Simple_types<unsigned short> > >;

typedef struct __vc_attributes::transmit_asAttribute
{
  /* 0x0000 */ const char* xmit_type;
} _vc_attributes::transmit_asAttribute, *P_vc_attributes::transmit_asAttribute; /* size: 0x0008 */

class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<unsigned short> > > >;

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IInsertableCandidate>
{
}; /* size: 0x0010 */

typedef struct _FILE_QUERY_SPARING_BUFFER
{
  /* 0x0000 */ unsigned long SparingUnitBytes;
  /* 0x0004 */ unsigned char SoftwareSparing;
  /* 0x0005 */ char Padding_738[3];
  /* 0x0008 */ unsigned long TotalSpareBlocks;
  /* 0x000c */ unsigned long FreeSpareBlocks;
} FILE_QUERY_SPARING_BUFFER, *PFILE_QUERY_SPARING_BUFFER; /* size: 0x0010 */

class wil::details::<lambda_5272005b11df2c37c54721e20290035b>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} PROCESS_CYCLE_TIME_INFORMATION, *PPROCESS_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

class CMfObject
{
  /* 0x0000 */ long Padding_739[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ long Padding_740;
  /* 0x0010 */ struct HMETAFILE__* m_hPres;
  /* 0x0018 */ struct _METAINFO* m_pMetaInfo;
  /* 0x0020 */ struct _METADC* m_pCurMdc;
  /* 0x0028 */ int m_fMetaDC;
  /* 0x002c */ int m_nRecord;
  /* 0x0030 */ HRESULT m_error;
  /* 0x0034 */ long Padding_741;
  /* 0x0038 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0040 */ int m_fConvert;
  /* 0x0044 */ long Padding_742;
  /* 0x0048 */ void* m_pfnContinue /* function */;
  /* 0x0050 */ unsigned __int64 m_dwContinue;
  /* 0x0058 */ unsigned long m_dwAspect;
  /* 0x005c */ unsigned long m_dwSize;
  /* 0x0060 */ long m_lWidth;
  /* 0x0064 */ long m_lHeight;
  /* 0x0068 */ class CCacheNode* m_pCacheNode;
  /* 0x0070 */ struct HPALETTE__* m_hPalDCOriginal;
  /* 0x0078 */ struct HPALETTE__* m_hPalLast;
}; /* size: 0x0080 */

struct Windows::Foundation::Collections::supports_cleanup<unsigned char>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::System::User *> *>
{
}; /* size: 0x0008 */

struct WilFailureSubscriptionInfo
{
  /* 0x0000 */ enum WilFailureProperties properties;
  /* 0x0002 */ unsigned short version;
  /* 0x0004 */ unsigned int id;
  /* 0x0008 */ enum WilFailureSubscriptionIdKind idKind;
  /* 0x0009 */ char Padding_743[7];
  /* 0x0010 */ struct WilFailureCodeLocation subscriptionLocation;
  /* 0x0028 */ HRESULT actionResults[3];
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _Mbstatet
{
  /* 0x0000 */ unsigned long _Wchar;
  /* 0x0004 */ unsigned short _Byte;
  /* 0x0006 */ unsigned short _State;
} Mbstatet, *PMbstatet; /* size: 0x0008 */

struct tagInterfaceData
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1024];
}; /* size: 0x0404 */

typedef struct _PEB_LDR_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_744[3];
  /* 0x0008 */ void* SsHandle;
  /* 0x0010 */ struct _LIST_ENTRY InLoadOrderModuleList;
  /* 0x0020 */ struct _LIST_ENTRY InMemoryOrderModuleList;
  /* 0x0030 */ struct _LIST_ENTRY InInitializationOrderModuleList;
  /* 0x0040 */ void* EntryInProgress;
  /* 0x0048 */ unsigned char ShutdownInProgress;
  /* 0x0049 */ char Padding_745[7];
  /* 0x0050 */ void* ShutdownThreadId;
} PEB_LDR_DATA, *PPEB_LDR_DATA; /* size: 0x0058 */

class CClipboardBroker::CClipboardBrokerMTAHelper
{
}; /* size: 0x0010 */

class Windows::Storage::FileProperties::BasicProperties;

struct Windows::Foundation::Collections::is_pointer<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0001 */

struct _TP_POOL;

class Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList;

class CSyncSync
{
  /* 0x0000 */ long Padding_746[6];
  /* 0x0018 */ class CPicture* m_ppictGuest2;
  /* 0x0020 */ struct IImageFilter* m_ifltGuest;
}; /* size: 0x0028 */

struct IOlePackagerLinkNotify
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducedEventArgs *>;

typedef struct _SHFILEINFOW
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0008 */ int iIcon;
  /* 0x000c */ unsigned long dwAttributes;
  /* 0x0010 */ wchar_t szDisplayName[260];
  /* 0x0218 */ wchar_t szTypeName[80];
} SHFILEINFOW, *PSHFILEINFOW; /* size: 0x02b8 */

struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducedEventArgs
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0001 */

struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable<<lambda_e1bdf235c2021226f8c53f8fb7bf9230> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::TryAcquireWrite>
{
  /* 0x0000 */ class XWinRT::SRWLock* _pLock;
}; /* size: 0x0008 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<2,0,1> >
{
} tlgDataDescInit<_tlgIndexSequence<2,0,1> >, *PtlgDataDescInit<_tlgIndexSequence<2,0,1> >; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IDataObject>
{
}; /* size: 0x0010 */

struct _LEAP_SECOND_DATA;

class std::initializer_list<unsigned short>
{
  /* 0x0000 */ const wchar_t* _First;
  /* 0x0008 */ const wchar_t* _Last;
}; /* size: 0x0010 */

typedef struct _CLIENT_ID64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} CLIENT_ID64, *PCLIENT_ID64; /* size: 0x0010 */

class wistd::__compressed_pair<_SYSTEM_PROCESS_INFORMATION *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >
{
}; /* size: 0x0008 */

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0004 */ long Padding_747;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} FILE_PROCESS_IDS_USING_FILE_INFORMATION, *PFILE_PROCESS_IDS_USING_FILE_INFORMATION; /* size: 0x0010 */

struct IRpcCall
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IDataObject>
{
  /* 0x0000 */ long Padding_748[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef struct _WIM_PROVIDER_REMOVE_OVERLAY_INPUT
{
  /* 0x0000 */ union _LARGE_INTEGER DataSourceId;
} WIM_PROVIDER_REMOVE_OVERLAY_INPUT, *PWIM_PROVIDER_REMOVE_OVERLAY_INPUT; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<enum Windows::System::UserWatcherUpdateKind>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDropTarget> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDropTarget>* ptr_;
}; /* size: 0x0008 */

class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::TryAcquireWrite>
{
  /* 0x0000 */ class XWinRT::StaReentrancyLock* _pLock;
}; /* size: 0x0008 */

typedef struct _STRING32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ unsigned long Buffer;
} STRING32, *PSTRING32; /* size: 0x0008 */

struct tagRPC_CALL_ATTRIBUTES_V2_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_749;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_750;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ enum tagRpcCallClientLocality IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_751[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

class Microsoft::WRL::ComPtr<CEnumClassesOfCategories>
{
  /* 0x0000 */ class CEnumClassesOfCategories* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>
{
}; /* size: 0x0008 */

class CStdClassFactory
{
  /* 0x0000 */ long Padding_752[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwIndex;
}; /* size: 0x0010 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::AccessCache::StorageItemMostRecentlyUsedList *,Windows::Storage::AccessCache::IStorageItemMostRecentlyUsedList *>;

class OleClassInfoDataFormatIterator
{
  /* 0x0000 */ long Padding_753[4];
  /* 0x0010 */ class Microsoft::WRL::Wrappers::HString _dataFormatsMultiSz;
  /* 0x0018 */ unsigned int _nextDataFormatOffset;
}; /* size: 0x0020 */

class CEnumFormatEtcDataArray
{
  /* 0x0000 */ long Padding_754[3];
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ unsigned long m_cOffset;
  /* 0x0014 */ long Padding_755;
  /* 0x0018 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::supports_cleanup<unsigned int>
{
}; /* size: 0x0001 */

typedef struct _Real_widened<double,float>
{
} Real_widened<double,float>, *PReal_widened<double,float>; /* size: 0x0001 */

struct AsyncIPipeDouble
{
}; /* size: 0x0008 */

typedef struct _TEB64
{
  /* 0x0000 */ struct _NT_TIB64 NtTib;
  /* 0x0038 */ unsigned __int64 EnvironmentPointer;
  /* 0x0040 */ struct _CLIENT_ID64 ClientId;
  /* 0x0050 */ unsigned __int64 ActiveRpcHandle;
  /* 0x0058 */ unsigned __int64 ThreadLocalStoragePointer;
  /* 0x0060 */ unsigned __int64 ProcessEnvironmentBlock;
  /* 0x0068 */ unsigned long LastErrorValue;
  /* 0x006c */ unsigned long CountOfOwnedCriticalSections;
  /* 0x0070 */ unsigned __int64 CsrClientThread;
  /* 0x0078 */ unsigned __int64 Win32ThreadInfo;
  /* 0x0080 */ unsigned long User32Reserved[26];
  /* 0x00e8 */ unsigned long UserReserved[5];
  /* 0x00fc */ long Padding_756;
  /* 0x0100 */ unsigned __int64 WOW32Reserved;
  /* 0x0108 */ unsigned long CurrentLocale;
  /* 0x010c */ unsigned long FpSoftwareStatusRegister;
  /* 0x0110 */ unsigned __int64 ReservedForDebuggerInstrumentation[16];
  /* 0x0190 */ unsigned __int64 SystemReserved1[30];
  /* 0x0280 */ char PlaceholderCompatibilityMode;
  /* 0x0281 */ unsigned char PlaceholderHydrationAlwaysExplicit;
  /* 0x0282 */ char PlaceholderReserved[10];
  /* 0x028c */ unsigned long ProxiedProcessId;
  /* 0x0290 */ struct _ACTIVATION_CONTEXT_STACK64 _ActivationStack;
  /* 0x02b8 */ unsigned char WorkingOnBehalfTicket[8];
  /* 0x02c0 */ long ExceptionCode;
  /* 0x02c4 */ unsigned char Padding0[4];
  /* 0x02c8 */ unsigned __int64 ActivationContextStackPointer;
  /* 0x02d0 */ unsigned __int64 InstrumentationCallbackSp;
  /* 0x02d8 */ unsigned __int64 InstrumentationCallbackPreviousPc;
  /* 0x02e0 */ unsigned __int64 InstrumentationCallbackPreviousSp;
  /* 0x02e8 */ unsigned long TxFsContext;
  /* 0x02ec */ unsigned char InstrumentationCallbackDisabled;
  /* 0x02ed */ unsigned char UnalignedLoadStoreExceptions;
  /* 0x02ee */ unsigned char Padding1[2];
  /* 0x02f0 */ struct _GDI_TEB_BATCH64 GdiTebBatch;
  /* 0x07d8 */ struct _CLIENT_ID64 RealClientId;
  /* 0x07e8 */ unsigned __int64 GdiCachedProcessHandle;
  /* 0x07f0 */ unsigned long GdiClientPID;
  /* 0x07f4 */ unsigned long GdiClientTID;
  /* 0x07f8 */ unsigned __int64 GdiThreadLocalInfo;
  /* 0x0800 */ unsigned __int64 Win32ClientInfo[62];
  /* 0x09f0 */ unsigned __int64 glDispatchTable[233];
  /* 0x1138 */ unsigned __int64 glReserved1[29];
  /* 0x1220 */ unsigned __int64 glReserved2;
  /* 0x1228 */ unsigned __int64 glSectionInfo;
  /* 0x1230 */ unsigned __int64 glSection;
  /* 0x1238 */ unsigned __int64 glTable;
  /* 0x1240 */ unsigned __int64 glCurrentRC;
  /* 0x1248 */ unsigned __int64 glContext;
  /* 0x1250 */ unsigned long LastStatusValue;
  /* 0x1254 */ unsigned char Padding2[4];
  /* 0x1258 */ struct _STRING64 StaticUnicodeString;
  /* 0x1268 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x1472 */ unsigned char Padding3[6];
  /* 0x1478 */ unsigned __int64 DeallocationStack;
  /* 0x1480 */ unsigned __int64 TlsSlots[64];
  /* 0x1680 */ struct LIST_ENTRY64 TlsLinks;
  /* 0x1690 */ unsigned __int64 Vdm;
  /* 0x1698 */ unsigned __int64 ReservedForNtRpc;
  /* 0x16a0 */ unsigned __int64 DbgSsReserved[2];
  /* 0x16b0 */ unsigned long HardErrorMode;
  /* 0x16b4 */ unsigned char Padding4[4];
  /* 0x16b8 */ unsigned __int64 Instrumentation[11];
  /* 0x1710 */ struct _GUID ActivityId;
  /* 0x1720 */ unsigned __int64 SubProcessTag;
  /* 0x1728 */ unsigned __int64 PerflibData;
  /* 0x1730 */ unsigned __int64 EtwTraceData;
  /* 0x1738 */ unsigned __int64 WinSockData;
  /* 0x1740 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x1744 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x1744 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x1744 */ unsigned char ReservedPad0;
      /* 0x1745 */ unsigned char ReservedPad1;
      /* 0x1746 */ unsigned char ReservedPad2;
      /* 0x1747 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x1748 */ unsigned long GuaranteedStackBytes;
  /* 0x174c */ unsigned char Padding5[4];
  /* 0x1750 */ unsigned __int64 ReservedForPerf;
  /* 0x1758 */ unsigned __int64 ReservedForOle;
  /* 0x1760 */ unsigned long WaitingOnLoaderLock;
  /* 0x1764 */ unsigned char Padding6[4];
  /* 0x1768 */ unsigned __int64 SavedPriorityState;
  /* 0x1770 */ unsigned __int64 ReservedForCodeCoverage;
  /* 0x1778 */ unsigned __int64 ThreadPoolData;
  /* 0x1780 */ unsigned __int64 TlsExpansionSlots;
  /* 0x1788 */ unsigned __int64 ChpeV2CpuAreaInfo;
  /* 0x1790 */ unsigned __int64 Unused;
  /* 0x1798 */ unsigned long MuiGeneration;
  /* 0x179c */ unsigned long IsImpersonating;
  /* 0x17a0 */ unsigned __int64 NlsCache;
  /* 0x17a8 */ unsigned __int64 pShimData;
  /* 0x17b0 */ unsigned long HeapData;
  /* 0x17b4 */ unsigned char Padding7[4];
  /* 0x17b8 */ unsigned __int64 CurrentTransactionHandle;
  /* 0x17c0 */ unsigned __int64 ActiveFrame;
  /* 0x17c8 */ unsigned __int64 FlsData;
  /* 0x17d0 */ unsigned __int64 PreferredLanguages;
  /* 0x17d8 */ unsigned __int64 UserPrefLanguages;
  /* 0x17e0 */ unsigned __int64 MergedPrefLanguages;
  /* 0x17e8 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x17ec */ volatile unsigned short CrossTebFlags;
    /* 0x17ec */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x17ee */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x17ee */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x17ee */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x17ee */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x17ee */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x17ee */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x17ee */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x17ee */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x17ee */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x17ee */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x17ee */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x17ee */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x17ee */ unsigned short SessionAware : 1; /* bit position: 11 */
      /* 0x17ee */ unsigned short LoadOwner : 1; /* bit position: 12 */
      /* 0x17ee */ unsigned short LoaderWorker : 1; /* bit position: 13 */
      /* 0x17ee */ unsigned short SkipLoaderInit : 1; /* bit position: 14 */
      /* 0x17ee */ unsigned short SkipFileAPIBrokering : 1; /* bit position: 15 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x17f0 */ unsigned __int64 TxnScopeEnterCallback;
  /* 0x17f8 */ unsigned __int64 TxnScopeExitCallback;
  /* 0x1800 */ unsigned __int64 TxnScopeContext;
  /* 0x1808 */ unsigned long LockCount;
  /* 0x180c */ long WowTebOffset;
  /* 0x1810 */ unsigned __int64 ResourceRetValue;
  /* 0x1818 */ unsigned __int64 ReservedForWdf;
  /* 0x1820 */ unsigned __int64 ReservedForCrt;
  /* 0x1828 */ struct _GUID EffectiveContainerId;
  /* 0x1838 */ unsigned __int64 LastSleepCounter;
  /* 0x1840 */ unsigned long SpinCallCount;
  /* 0x1844 */ unsigned char Padding8[4];
  /* 0x1848 */ unsigned __int64 ExtendedFeatureDisableMask;
} TEB64, *PTEB64; /* size: 0x1850 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBroker>
{
}; /* size: 0x0010 */

class CLimitedWritableStorage::OpenStorage::__l2::<lambda_e174a29c410f404b3b2cf06c7a80a00b>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ struct IStorage*& pstgPriority;
  /* 0x0018 */ unsigned long& grfMode;
  /* 0x0020 */ wchar_t**& snbExclude;
  /* 0x0028 */ unsigned long& reserved;
  /* 0x0030 */ class Microsoft::WRL::ComPtr<IStorage>& spInner;
}; /* size: 0x0038 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClientSecurity> const >;

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,ITypeLibRegistration,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0028 */

struct IClientSecurity
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<ClipboardDataObjectTask>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<unsigned int,1>
{
}; /* size: 0x0008 */

typedef struct _MkInterfaceListEntry
{
  /* 0x0000 */ struct tagInterfaceData* pIFD;
  /* 0x0008 */ int fRegisteredByAppContainer;
  /* 0x000c */ long __PADDING__[1];
} MkInterfaceListEntry, *PMkInterfaceListEntry; /* size: 0x0010 */

typedef struct _MkInterfaceList
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_757;
  /* 0x0008 */ struct _MkInterfaceListEntry apIFDList[1];
} MkInterfaceList, *PMkInterfaceList; /* size: 0x0018 */

typedef struct _TAPE_GET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long DefaultBlockSize;
  /* 0x0008 */ unsigned long MaximumBlockSize;
  /* 0x000c */ unsigned long MinimumBlockSize;
  /* 0x0010 */ unsigned long MaximumPartitionCount;
  /* 0x0014 */ unsigned long FeaturesLow;
  /* 0x0018 */ unsigned long FeaturesHigh;
  /* 0x001c */ unsigned long EOTWarningZoneSize;
} TAPE_GET_DRIVE_PARAMETERS, *PTAPE_GET_DRIVE_PARAMETERS; /* size: 0x0020 */

struct midluser_allocate_t
{
}; /* size: 0x0001 */

struct Windows::Storage::IStorageFolder
{
}; /* size: 0x0008 */

typedef struct _FILE_MODE_INFORMATION
{
  /* 0x0000 */ unsigned long Mode;
} FILE_MODE_INFORMATION, *PFILE_MODE_INFORMATION; /* size: 0x0004 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *>,0,0>
{
}; /* size: 0x0001 */

struct _PSP;

struct IInternetZoneManagerEx
{
}; /* size: 0x0008 */

class CDropTargetAdapter
{
  /* 0x0000 */ struct HWND__* _hwndOLE;
  /* 0x0008 */ struct HWND__* _hwnd31;
  /* 0x0010 */ unsigned long _dwEffectLast;
  /* 0x0014 */ long Padding_758;
  /* 0x0018 */ class CDragOperation* _pdo;
  /* 0x0020 */ void* _hDDInfo;
  /* 0x0028 */ BOOL _checkedForEnterpriseDropTarget;
  /* 0x0029 */ char Padding_759[3];
  /* 0x002c */ HRESULT _hrEnterpriseDropTargetCheck;
  /* 0x0030 */ int _isEnterpriseDropTarget;
  /* 0x0034 */ int _supportsEvaluatingEdpPolicy;
}; /* size: 0x0038 */

class Microsoft::WRL::RuntimeClass<Windows::Foundation::Collections::IVectorChangedEventArgs>
{
}; /* size: 0x0020 */

class CLimitedWritableStream::Revert::__l2::<lambda_1325d83fa6a9b5059b44fec492f19dcd>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
}; /* size: 0x0008 */

typedef struct _PROPSHEETPAGEW
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const wchar_t* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const wchar_t* pszHeaderTitle;
  /* 0x0050 */ const wchar_t* pszHeaderSubTitle;
  /* 0x0058 */ void* hActCtx;
  union
  {
    /* 0x0060 */ struct HBITMAP__* hbmHeader;
    /* 0x0060 */ const wchar_t* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETPAGEW, *PPROPSHEETPAGEW; /* size: 0x0068 */

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,float>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::Storage::BulkAccess::IStorageItemInformation *,IInspectable *>
{
}; /* size: 0x0008 */

struct MD_INTERFACE
{
  /* 0x0000 */ volatile long m_refs;
  /* 0x0004 */ unsigned long m_cMethods;
  /* 0x0008 */ unsigned long m_cMethodsInBaseInterface;
  /* 0x000c */ long Padding_760;
  /* 0x0010 */ struct MD_METHOD* m_rgMethodsAlloc;
  /* 0x0018 */ struct MD_METHOD* m_rgMethods;
  /* 0x0020 */ struct MD_PARAM* m_rgParams;
  /* 0x0028 */ int m_fFreeInfoOnRelease;
  /* 0x002c */ int m_fDerivesFromIDispatch;
  /* 0x0030 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0038 */ const char* m_szInterfaceName;
  /* 0x0040 */ struct MD_INTERFACE_CACHE* m_pcache;
}; /* size: 0x0048 */

typedef struct _TXFS_SAVEPOINT_INFORMATION
{
  /* 0x0000 */ void* KtmTransaction;
  /* 0x0008 */ unsigned long ActionCode;
  /* 0x000c */ unsigned long SavepointId;
} TXFS_SAVEPOINT_INFORMATION, *PTXFS_SAVEPOINT_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IApplicationAssociationRegistration> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IApplicationAssociationRegistration>* ptr_;
}; /* size: 0x0008 */

struct tagWPP_BINARY
{
  /* 0x0000 */ const void* Buffer;
  /* 0x0008 */ unsigned short Length;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY
{
  /* 0x0000 */ unsigned long DeviceInstance;
  /* 0x0004 */ unsigned long DeviceFlags;
  /* 0x0008 */ unsigned long ResourceType;
  /* 0x000c */ long Padding_761;
  /* 0x0010 */ unsigned __int64 ResourceStart;
  /* 0x0018 */ unsigned __int64 ResourceEnd;
  /* 0x0020 */ unsigned long ResourceFlags;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_ENTRY, *PPLUGPLAY_CONTROL_CONFLICT_ENTRY; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDragDropContainerProxy> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDragDropContainerProxy>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassBaseT<1>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>
{
}; /* size: 0x0001 */

typedef struct _APPINFO_STARTUPINFO
{
  /* 0x0000 */ wchar_t* lpTitle;
  /* 0x0008 */ unsigned long dwX;
  /* 0x000c */ unsigned long dwY;
  /* 0x0010 */ unsigned long dwXSize;
  /* 0x0014 */ unsigned long dwYSize;
  /* 0x0018 */ unsigned long dwXCountChars;
  /* 0x001c */ unsigned long dwYCountChars;
  /* 0x0020 */ unsigned long dwFillAttribute;
  /* 0x0024 */ unsigned long dwFlags;
  /* 0x0028 */ unsigned short wShowWindow;
  /* 0x002a */ char Padding_762[2];
  /* 0x002c */ struct tagPOINT ptMonitor;
  /* 0x0034 */ long __PADDING__[1];
} APPINFO_STARTUPINFO, *PAPPINFO_STARTUPINFO; /* size: 0x0038 */

class utl::numeric_limits<double>
{
  /* 0x0000 */ const unsigned int _Mdig;
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *>
{
}; /* size: 0x0001 */

struct IUserContextProperties
{
}; /* size: 0x0008 */

typedef union _CLIENT_CALL_RETURN
{
  union
  {
    /* 0x0000 */ void* Pointer;
    /* 0x0000 */ __int64 Simple;
  }; /* size: 0x0008 */
} CLIENT_CALL_RETURN, *PCLIENT_CALL_RETURN; /* size: 0x0008 */

typedef struct _TXFS_QUERY_RM_INFORMATION
{
  /* 0x0000 */ unsigned long BytesRequired;
  /* 0x0004 */ long Padding_763;
  /* 0x0008 */ unsigned __int64 TailLsn;
  /* 0x0010 */ unsigned __int64 CurrentLsn;
  /* 0x0018 */ unsigned __int64 ArchiveTailLsn;
  /* 0x0020 */ unsigned __int64 LogContainerSize;
  /* 0x0028 */ union _LARGE_INTEGER HighestVirtualClock;
  /* 0x0030 */ unsigned long LogContainerCount;
  /* 0x0034 */ unsigned long LogContainerCountMax;
  /* 0x0038 */ unsigned long LogContainerCountMin;
  /* 0x003c */ unsigned long LogGrowthIncrement;
  /* 0x0040 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ unsigned short LoggingMode;
  /* 0x004a */ unsigned short Reserved;
  /* 0x004c */ unsigned long RmState;
  /* 0x0050 */ unsigned __int64 LogCapacity;
  /* 0x0058 */ unsigned __int64 LogFree;
  /* 0x0060 */ unsigned __int64 TopsSize;
  /* 0x0068 */ unsigned __int64 TopsUsed;
  /* 0x0070 */ unsigned __int64 TransactionCount;
  /* 0x0078 */ unsigned __int64 OnePCCount;
  /* 0x0080 */ unsigned __int64 TwoPCCount;
  /* 0x0088 */ unsigned __int64 NumberLogFileFull;
  /* 0x0090 */ unsigned __int64 OldestTransactionAge;
  /* 0x0098 */ struct _GUID RMName;
  /* 0x00a8 */ unsigned long TmLogPathOffset;
  /* 0x00ac */ long __PADDING__[1];
} TXFS_QUERY_RM_INFORMATION, *PTXFS_QUERY_RM_INFORMATION; /* size: 0x00b0 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObjectEx> const >;

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > >
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<int>
{
}; /* size: 0x0001 */

typedef struct _CERT_ALT_NAME_INFO
{
  /* 0x0000 */ unsigned long cAltEntry;
  /* 0x0004 */ long Padding_764;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY* rgAltEntry;
} CERT_ALT_NAME_INFO, *PCERT_ALT_NAME_INFO; /* size: 0x0010 */

typedef struct _CRL_DIST_POINT_NAME
{
  /* 0x0000 */ unsigned long dwDistPointNameChoice;
  /* 0x0004 */ long Padding_765;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO FullName;
} CRL_DIST_POINT_NAME, *PCRL_DIST_POINT_NAME; /* size: 0x0018 */

typedef struct _CRL_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB ReasonFlags;
  /* 0x0030 */ struct _CERT_ALT_NAME_INFO CRLIssuer;
} CRL_DIST_POINT, *PCRL_DIST_POINT; /* size: 0x0040 */

struct XWinRT::XPlex
{
  /* 0x0000 */ struct XWinRT::XPlex* pNext;
}; /* size: 0x0008 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<4,0,1,2,3> >
{
} tlgDataDescInit<_tlgIndexSequence<4,0,1,2,3> >, *PtlgDataDescInit<_tlgIndexSequence<4,0,1,2,3> >; /* size: 0x0001 */

struct _CHPEV2_PROCESS_INFO;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > const >;

struct CallerCanAccessClipboardData::__l5::AUDIT_CALLBACK_CONTEXT
{
  /* 0x0000 */ struct IDataObject* dataObject;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IPackagedComClassIdIterator>* ptr_;
}; /* size: 0x0008 */

struct tagEMRMODIFYWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
  /* 0x0020 */ unsigned long iMode;
}; /* size: 0x0024 */

typedef struct _SHITEMID
{
  /* 0x0000 */ unsigned short cb;
  /* 0x0002 */ unsigned char abID[1];
} SHITEMID, *PSHITEMID; /* size: 0x0003 */

typedef struct _ITEMIDLIST
{
  /* 0x0000 */ struct _SHITEMID mkid;
} ITEMIDLIST, *PITEMIDLIST; /* size: 0x0003 */

class std::_String_iterator<std::_String_val<std::_Simple_types<char32_t> > >;

struct tm
{
  /* 0x0000 */ int tm_sec;
  /* 0x0004 */ int tm_min;
  /* 0x0008 */ int tm_hour;
  /* 0x000c */ int tm_mday;
  /* 0x0010 */ int tm_mon;
  /* 0x0014 */ int tm_year;
  /* 0x0018 */ int tm_wday;
  /* 0x001c */ int tm_yday;
  /* 0x0020 */ int tm_isdst;
}; /* size: 0x0024 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<__int64,__int64> *>
{
}; /* size: 0x0001 */

class std::reverse_iterator<std::_String_iterator<std::_String_val<std::_Simple_types<char32_t> > > >;

typedef struct _REFS_SMR_VOLUME_GC_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ enum _REFS_SMR_VOLUME_GC_ACTION Action;
  /* 0x000c */ enum _REFS_SMR_VOLUME_GC_METHOD Method;
  /* 0x0010 */ unsigned long IoGranularity;
  /* 0x0014 */ unsigned long CompressionFormat;
  /* 0x0018 */ unsigned __int64 Unused[8];
} REFS_SMR_VOLUME_GC_PARAMETERS, *PREFS_SMR_VOLUME_GC_PARAMETERS; /* size: 0x0058 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClientSecurity> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<unsigned int,IWeakReference *>
{
}; /* size: 0x0008 */

class CLimitedWritableStream::Write::__l2::<lambda_901244bbe6ff11f30bcc324ded8f1e54>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
  /* 0x0008 */ const void*& pv;
  /* 0x0010 */ unsigned long& cb;
  /* 0x0018 */ unsigned long*& pcbWritten;
}; /* size: 0x0020 */

struct tagENHMETAHEADER
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _RECTL rclFrame;
  /* 0x0028 */ unsigned long dSignature;
  /* 0x002c */ unsigned long nVersion;
  /* 0x0030 */ unsigned long nBytes;
  /* 0x0034 */ unsigned long nRecords;
  /* 0x0038 */ unsigned short nHandles;
  /* 0x003a */ unsigned short sReserved;
  /* 0x003c */ unsigned long nDescription;
  /* 0x0040 */ unsigned long offDescription;
  /* 0x0044 */ unsigned long nPalEntries;
  /* 0x0048 */ struct tagSIZE szlDevice;
  /* 0x0050 */ struct tagSIZE szlMillimeters;
  /* 0x0058 */ unsigned long cbPixelFormat;
  /* 0x005c */ unsigned long offPixelFormat;
  /* 0x0060 */ unsigned long bOpenGL;
  /* 0x0064 */ struct tagSIZE szlMicrometers;
}; /* size: 0x006c */

class std::allocator<char32_t>
{
}; /* size: 0x0001 */

class wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>
{
  /* 0x0000 */ const unsigned __int64 __buffer_size;
  /* 0x0008 */ union wistd::__aligned_storage<104,8,1>::type __buf_;
  /* 0x0070 */ class wistd::__function::__base<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>* __f_;
}; /* size: 0x0078 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IVectorChangedEventArgs,0,0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0001 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_766;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC; /* size: 0x0028 */

typedef struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfLogicalProcessors;
  /* 0x0004 */ unsigned long NumberOfCores;
} SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION, *PSYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION; /* size: 0x0008 */

class CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem>
{
}; /* size: 0x0001 */

class CDWORDHashTable
{
}; /* size: 0x0028 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IOleVerb>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<float>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMapView<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

typedef struct _ADMINISTRATOR_POWER_POLICY
{
  /* 0x0000 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x0008 */ unsigned long MinVideoTimeout;
  /* 0x000c */ unsigned long MaxVideoTimeout;
  /* 0x0010 */ unsigned long MinSpindownTimeout;
  /* 0x0014 */ unsigned long MaxSpindownTimeout;
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY; /* size: 0x0018 */

struct Windows::Foundation::Collections::IIterator_impl<HSTRING__ *,1>
{
}; /* size: 0x0008 */

struct IComClassCategoryInfo
{
}; /* size: 0x0008 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST
{
  /* 0x0000 */ unsigned long RequestLevel;
  /* 0x0004 */ unsigned long RequestFlags;
} STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST, *PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST; /* size: 0x0008 */

class wil::details::<lambda_76680e11d462fa50709ba31fa113f2df>
{
}; /* size: 0x0001 */

typedef struct _NETRESOURCEW
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0018 */ wchar_t* lpRemoteName;
  /* 0x0020 */ wchar_t* lpComment;
  /* 0x0028 */ wchar_t* lpProvider;
} NETRESOURCEW, *PNETRESOURCEW; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IServiceProvider> >
{
}; /* size: 0x0008 */

struct SPatternEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long ulEntryLen;
  /* 0x0014 */ long lFileOffset;
  /* 0x0018 */ unsigned long ulCb;
  union
  {
    /* 0x001c */ unsigned char abData[1];
    /* 0x001c */ unsigned char abMinimum[4];
  }; /* size: 0x0004 */
}; /* size: 0x0020 */

class CBmpLoader
{
  union
  {
    /* 0x0000 */ unsigned char m_rgbBMI[1068];
    /* 0x0000 */ struct tagBITMAPINFO m_bmiCooked;
  }; /* size: 0x042c */
  /* 0x042c */ long Padding_767;
  union
  {
    /* 0x0430 */ unsigned char* m_pbDiskHeadr;
    /* 0x0430 */ struct tagBITMAPCOREHEADER* m_pbmchDiskHeadr;
    /* 0x0430 */ struct tagBITMAPINFOHEADER* m_pbmihDiskHeadr;
  }; /* size: 0x0008 */
  /* 0x0438 */ long m_lSize;
  /* 0x043c */ long m_nWidth;
  /* 0x0440 */ long m_nHeight;
  /* 0x0444 */ int m_nTableSize;
  /* 0x0448 */ int m_nTableEntries;
  /* 0x044c */ long Padding_768;
  /* 0x0450 */ unsigned char* m_pbBits;
  /* 0x0458 */ int m_fWin;
  /* 0x045c */ int m_fVgaPal;
}; /* size: 0x0460 */

struct Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *>
{
}; /* size: 0x0008 */

struct CONFIRM_CONFLICT_ITEM
{
  /* 0x0000 */ struct IShellItem2* pShellItem;
  /* 0x0008 */ wchar_t* pszOriginalName;
  /* 0x0010 */ wchar_t* pszAlternateName;
  /* 0x0018 */ wchar_t* pszLocationShort;
  /* 0x0020 */ wchar_t* pszLocationFull;
  /* 0x0028 */ enum SYNCMGR_CONFLICT_ITEM_TYPE nType;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *,1>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,1,1>
{
}; /* size: 0x0001 */

typedef struct __s_GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} _s_GUID, *P_s_GUID; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>
{
}; /* size: 0x0001 */

class CCliRotHintTable
{
  /* 0x0000 */ long Padding_769[2];
  /* 0x0008 */ void* _hSm;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IUriRuntimeClass
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<int>
{
}; /* size: 0x0001 */

struct Windows::ApplicationModel::DataTransfer::IDataPackage
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>
{
}; /* size: 0x0008 */

struct IDropTarget
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoConversionClass> >;

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal> const >;

typedef struct _ais_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1375];
  /* 0x0561 */ char __PADDING__[1];
} ais_MIDL_PROC_FORMAT_STRING, *Pais_MIDL_PROC_FORMAT_STRING; /* size: 0x0562 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMap<_GUID,bool>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAsyncInfo> >;

typedef struct _tlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,4,5> >
{
} tlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,4,5> >, *PtlgDataDescInit<_tlgIndexSequence<6,0,1,2,3,4,5> >; /* size: 0x0001 */

class AdditionMethod<unsigned long,unsigned long>
{
}; /* size: 0x0001 */

class Windows::ApplicationModel::Background::BackgroundTaskRegistration;

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistration *,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>;

struct Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0008 */

class COleConditionVariable
{
  /* 0x0000 */ struct _RTL_CONDITION_VARIABLE _cv;
}; /* size: 0x0008 */

typedef struct _FILE_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* Port;
  /* 0x0008 */ void* Key;
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION; /* size: 0x0010 */

struct tagCATEGORYINFO
{
  /* 0x0000 */ struct _GUID catid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ wchar_t szDescription[128];
}; /* size: 0x0114 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IEventHandler<Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs *>
{
}; /* size: 0x0008 */

class CClassObj
{
  /* 0x0000 */ long Padding_770[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_771;
  /* 0x0010 */ void* m_pfnCreate /* function */;
}; /* size: 0x0018 */

class GetCastMethod<long,int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>
{
}; /* size: 0x0001 */

struct Windows::ApplicationModel::DataTransfer::IDataPackagePropertySet
{
}; /* size: 0x0008 */

class std::out_of_range
{
}; /* size: 0x0010 */

typedef struct __vc_attributes::idAttribute
{
  /* 0x0000 */ int id_num;
} _vc_attributes::idAttribute, *P_vc_attributes::idAttribute; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerbIterator> const >;

class Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup;

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *>;

struct Windows::Foundation::Collections::IMapView_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Background::BackgroundTaskRegistrationGroup *,Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup *> >
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::optionalAttribute
{
} _vc_attributes::optionalAttribute, *P_vc_attributes::optionalAttribute; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkElementIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

class TypeLibRegistrationReader
{
  /* 0x0000 */ long Padding_772[12];
  /* 0x0030 */ BOOL m_disablePackagedComForTesting;
}; /* size: 0x0038 */

class std::range_error
{
}; /* size: 0x0010 */

class CReadOnlyStorage::OpenStorage::__l2::<lambda_25839262837d068401bf8c3397db2d8a>
{
  /* 0x0000 */ class CReadOnlyStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ struct IStorage*& pstgPriority;
  /* 0x0018 */ unsigned long& grfMode;
  /* 0x0020 */ wchar_t**& snbExclude;
  /* 0x0028 */ unsigned long& reserved;
  /* 0x0030 */ class Microsoft::WRL::ComPtr<IStorage>& spInner;
}; /* size: 0x0038 */

class IsInt<long>
{
}; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IConversionClassIterator>
{
}; /* size: 0x0010 */

struct _Cnd_internal_imp_t;

typedef struct _complex
{
  /* 0x0000 */ double x;
  /* 0x0008 */ double y;
} complex, *Pcomplex; /* size: 0x0010 */

class RunSyncOnMTAThread::__l2::<lambda_1f33e66c4d719b5f6d4f05584bc2ec2e>
{
  /* 0x0000 */ class RenderFormat::__l36::<lambda_a373bd52f4da993037bb233d5f4e11d7>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

class std::error_category
{
  /* 0x0000 */ long Padding_773[2];
  /* 0x0008 */ unsigned __int64 _Addr;
}; /* size: 0x0010 */

struct wil::TwoPhaseHStringConstructor
{
  /* 0x0000 */ unsigned int m_characterLength;
  /* 0x0004 */ long Padding_774;
  /* 0x0008 */ struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > > > m_maker;
}; /* size: 0x0020 */

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  /* 0x0000 */ unsigned long ulAssemblyIndex;
  /* 0x0004 */ unsigned long ulFileIndexInAssembly;
} ACTIVATION_CONTEXT_QUERY_INDEX, *PACTIVATION_CONTEXT_QUERY_INDEX; /* size: 0x0008 */

typedef struct _CSV_QUERY_VOLUME_REDIRECT_STATE
{
  /* 0x0000 */ unsigned long MdsNodeId;
  /* 0x0004 */ unsigned long DsNodeId;
  /* 0x0008 */ unsigned char IsDiskConnected;
  /* 0x0009 */ unsigned char ClusterEnableDirectIo;
  /* 0x000a */ char Padding_775[2];
  /* 0x000c */ enum _CSVFS_DISK_CONNECTIVITY DiskConnectivity;
} CSV_QUERY_VOLUME_REDIRECT_STATE, *PCSV_QUERY_VOLUME_REDIRECT_STATE; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IPropertySet *>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::customAttribute
{
  /* 0x0000 */ char* value;
} _vc_attributes::customAttribute, *P_vc_attributes::customAttribute; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IRestrictedErrorInfo> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IRestrictedErrorInfo>* ptr_;
}; /* size: 0x0008 */

class wil::details_abi::heap_vector<wil::details::EnabledStateManager::CachedUsageData>
{
  /* 0x0000 */ struct wil::details_abi::heap_buffer m_data;
}; /* size: 0x0020 */

class RemoveClipboardDataObject::__l14::<lambda_acbbe6d18a978d7bf2cb06affbc8b61b>
{
  /* 0x0000 */ void*& pDataObjInMTA;
}; /* size: 0x0008 */

struct IRestrictedErrorInfo
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::folder_change_reader_state>,1,1>
{
}; /* size: 0x0001 */

typedef struct _FSCTL_QUERY_REGION_INFO_OUTPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned __int64 Alignment;
  /* 0x0018 */ unsigned long TotalNumberOfRegions;
  /* 0x001c */ unsigned long NumberOfRegionsReturned;
  /* 0x0020 */ struct _FILE_STORAGE_TIER_REGION Regions[1];
} FSCTL_QUERY_REGION_INFO_OUTPUT, *PFSCTL_QUERY_REGION_INFO_OUTPUT; /* size: 0x0040 */

typedef struct _TEB_ACTIVE_FRAME
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_776;
  /* 0x0008 */ struct _TEB_ACTIVE_FRAME* Previous;
  /* 0x0010 */ const struct _TEB_ACTIVE_FRAME_CONTEXT* Context;
} TEB_ACTIVE_FRAME, *PTEB_ACTIVE_FRAME; /* size: 0x0018 */

class MultiplicationMethod<unsigned long,unsigned long>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::helper_attributes::default_valueAttribute
{
  /* 0x0000 */ void* value;
} _vc_attributes::helper_attributes::default_valueAttribute, *P_vc_attributes::helper_attributes::default_valueAttribute; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Storage::Streams::IInputStream *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_d7e7a7577a522a573f14fad6bfe08d23>
{
}; /* size: 0x0001 */

struct std::hash<int>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> >
{
}; /* size: 0x0008 */

class wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> >
{
  /* 0x0000 */ struct FEATURE_STATE_CHANGE_SUBSCRIPTION__* m_ptr;
}; /* size: 0x0008 */

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Clone::__l2::<lambda_56b5ba632d587fa357900841a044505e>
{
  /* 0x0000 */ class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>& spInner;
}; /* size: 0x0010 */

typedef struct _NDR64_EXPR_VAR
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char VarType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Offset;
} NDR64_EXPR_VAR, *PNDR64_EXPR_VAR; /* size: 0x0008 */

typedef struct __midl_frag194_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag194_t, *P_midl_frag194_t; /* size: 0x000c */

struct tagMETARECORD
{
  /* 0x0000 */ unsigned long rdSize;
  /* 0x0004 */ unsigned short rdFunction;
  /* 0x0006 */ unsigned short rdParm[1];
}; /* size: 0x0008 */

class CClipboardBroker::ValidateAndAcquireACImpersonationSource::__l8::<lambda_a4e555621f6ed4efaaeeaa7992cb2190>
{
  /* 0x0000 */ class Windows::Internal::GitPtr& GITMTAHelper;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<OleClassInfoInsertableCandidate>
{
  /* 0x0000 */ class OleClassInfoInsertableCandidate* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<enum Windows::Storage::Provider::FileUpdateStatus>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FolderInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>
{
}; /* size: 0x0008 */

class CRWLock;

struct wistd::unique_ptr<void,wil::process_heap_deleter>::__nat;

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageStreamTransaction *,Windows::Storage::IStorageStreamTransaction *> >
{
}; /* size: 0x0008 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >;

struct Windows::Storage::Streams::IRandomAccessStreamReference
{
}; /* size: 0x0008 */

typedef struct _PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_777;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ unsigned long SectionOffset;
  /* 0x0014 */ long Padding_778;
  /* 0x0018 */ unsigned __int64 ViewSize;
  /* 0x0020 */ void* ViewBase;
  /* 0x0028 */ void* ViewRemoteBase;
} PORT_VIEW, *PPORT_VIEW; /* size: 0x0030 */

class Microsoft::WRL::ComPtr<ITypeLibRegistration>
{
  /* 0x0000 */ struct ITypeLibRegistration* ptr_;
}; /* size: 0x0008 */

struct $_s__CatchableTypeArray$_extraBytes_24
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType* arrayOfCatchableTypes[3];
}; /* size: 0x001c */

typedef struct _RTL_FEATURE_CONFIGURATION_UPDATE
{
  /* 0x0000 */ unsigned int FeatureId;
  /* 0x0004 */ enum _RTL_FEATURE_CONFIGURATION_PRIORITY Priority;
  /* 0x0008 */ enum _RTL_FEATURE_ENABLED_STATE EnabledState;
  /* 0x000c */ enum _RTL_FEATURE_ENABLED_STATE_OPTIONS EnabledStateOptions;
  /* 0x0010 */ unsigned char Variant;
  /* 0x0011 */ unsigned char Reserved[3];
  /* 0x0014 */ enum _RTL_FEATURE_VARIANT_PAYLOAD_KIND VariantPayloadKind;
  /* 0x0018 */ unsigned int VariantPayload;
  /* 0x001c */ enum _RTL_FEATURE_CONFIGURATION_OPERATION Operation;
} RTL_FEATURE_CONFIGURATION_UPDATE, *PRTL_FEATURE_CONFIGURATION_UPDATE; /* size: 0x0020 */

struct IImmersiveMonitor
{
}; /* size: 0x0008 */

class wil::details::<lambda_4aba62e71581c6899d3a39f48f6710a6>
{
}; /* size: 0x0001 */

typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY* ChainHead;
  /* 0x0008 */ struct _LIST_ENTRY* PrevLinkage;
  /* 0x0010 */ unsigned __int64 Signature;
} RTL_DYNAMIC_HASH_TABLE_CONTEXT, *PRTL_DYNAMIC_HASH_TABLE_CONTEXT; /* size: 0x0018 */

struct Windows::ApplicationModel::Activation::IBackgroundActivatedEventArgs
{
}; /* size: 0x0008 */

typedef struct _NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long pcrAlg;
  /* 0x000c */ unsigned long cbSignature;
  /* 0x0010 */ unsigned long cbQuote;
  /* 0x0014 */ unsigned long cbPcrs;
} NCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT, *PNCRYPT_TPM_PLATFORM_ATTESTATION_STATEMENT; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal>* ptr_;
}; /* size: 0x0008 */

class CLock2
{
  /* 0x0000 */ class CMutexSem2& m_mxs;
}; /* size: 0x0008 */

struct Windows::Storage::Search::SortEntry
{
  /* 0x0000 */ struct HSTRING__* PropertyName;
  /* 0x0008 */ unsigned char AscendingOrder;
  /* 0x0009 */ char __PADDING__[7];
}; /* size: 0x0010 */

struct Windows::ApplicationModel::DataTransfer::IDataProviderRequest
{
}; /* size: 0x0008 */

typedef struct _tlgWrapperBinary
{
  union
  {
    /* 0x0000 */ const unsigned int DataDescCount;
    /* 0x0000 */ const void* const Ptr;
  }; /* size: 0x0008 */
  /* 0x0008 */ const unsigned short Size;
  /* 0x000a */ char __PADDING__[6];
} tlgWrapperBinary, *PtlgWrapperBinary; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumFORMATETC> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IEnumFORMATETC>* ptr_;
}; /* size: 0x0008 */

typedef struct _LUTF8_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LUTF8_STRING, *PLUTF8_STRING; /* size: 0x0018 */

struct wil::details::FeatureUsageDurationData
{
  /* 0x0000 */ unsigned int featureId;
  /* 0x0004 */ BOOL enabled;
  /* 0x0005 */ enum wil::ReportingKind kind;
  /* 0x0006 */ char Padding_779[2];
  /* 0x0008 */ union _LARGE_INTEGER counterStart;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>
{
}; /* size: 0x0001 */

struct Windows::ApplicationModel::Background::IBackgroundTaskDeferral
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,HSTRING__ *>
{
}; /* size: 0x0008 */

struct SUUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct _GUID key;
}; /* size: 0x0020 */

class wil::details::<lambda_f54394daa29a0c1145722625f4741bbf>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<HSTRING__ *,unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER
{
  /* 0x0000 */ unsigned char PrologueByteCount;
} IMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER, *PIMAGE_PROLOGUE_DYNAMIC_RELOCATION_HEADER; /* size: 0x0001 */

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Reset::__l2::<lambda_7a59a3cec997efd4251645394ee05088>
{
  /* 0x0000 */ class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>* const __this;
}; /* size: 0x0008 */

typedef struct _CLIENT_ID32
{
  /* 0x0000 */ unsigned long UniqueProcess;
  /* 0x0004 */ unsigned long UniqueThread;
} CLIENT_ID32, *PCLIENT_ID32; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IWeakReference *> *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper>
{
  /* 0x0000 */ class CClipboardBroker::CClipboardBrokerMTAHelper* ptr_;
}; /* size: 0x0008 */

class Windows::Storage::FileProperties::MusicProperties;

typedef struct _CM_FLOPPY_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ char Size[8];
  /* 0x000c */ unsigned long MaxDensity;
  /* 0x0010 */ unsigned long MountDensity;
  /* 0x0014 */ unsigned char StepRateHeadUnloadTime;
  /* 0x0015 */ unsigned char HeadLoadTime;
  /* 0x0016 */ unsigned char MotorOffTime;
  /* 0x0017 */ unsigned char SectorLengthCode;
  /* 0x0018 */ unsigned char SectorPerTrack;
  /* 0x0019 */ unsigned char ReadWriteGapLength;
  /* 0x001a */ unsigned char DataTransferLength;
  /* 0x001b */ unsigned char FormatGapLength;
  /* 0x001c */ unsigned char FormatFillCharacter;
  /* 0x001d */ unsigned char HeadSettleTime;
  /* 0x001e */ unsigned char MotorSettleTime;
  /* 0x001f */ unsigned char MaximumTrackValue;
  /* 0x0020 */ unsigned char DataTransferRate;
  /* 0x0021 */ char __PADDING__[3];
} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA; /* size: 0x0024 */

struct Windows::Foundation::Collections::MapChangedEventHandler<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Data::Text::TextSegment,0>
{
}; /* size: 0x0008 */

class wil::com_ptr_t<IComCatalogSCM,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IComCatalogSCM* m_ptr;
}; /* size: 0x0008 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<3,0,1,2> >
{
} tlgDataDescInit<_tlgIndexSequence<3,0,1,2> >, *PtlgDataDescInit<_tlgIndexSequence<3,0,1,2> >; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Storage::FileProperties::MusicProperties *>
{
}; /* size: 0x0008 */

typedef struct _OBJECT_ATTRIBUTES32
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long RootDirectory;
  /* 0x0008 */ unsigned long ObjectName;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long SecurityDescriptor;
  /* 0x0014 */ unsigned long SecurityQualityOfService;
} OBJECT_ATTRIBUTES32, *POBJECT_ATTRIBUTES32; /* size: 0x0018 */

struct Windows::Foundation::DateTime
{
  /* 0x0000 */ __int64 UniversalTime;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> >;

typedef struct _PROCESS_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ void* HandleValue;
  /* 0x0008 */ unsigned __int64 HandleCount;
  /* 0x0010 */ unsigned __int64 PointerCount;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned long ObjectTypeIndex;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ unsigned long Reserved;
} PROCESS_HANDLE_TABLE_ENTRY_INFO, *PPROCESS_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0028 */

typedef struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfHandles;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _PROCESS_HANDLE_TABLE_ENTRY_INFO Handles[1];
} PROCESS_HANDLE_SNAPSHOT_INFORMATION, *PPROCESS_HANDLE_SNAPSHOT_INFORMATION; /* size: 0x0038 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageItem *,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<int,unsigned __int64>
{
}; /* size: 0x0001 */

struct std::adopt_lock_t
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IClipboardBrokerInternal>
{
}; /* size: 0x0008 */

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_780;
  /* 0x0008 */ const char* pszUsageIdentifier;
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ unsigned long dwAcquirePrivateKeyFlags;
  /* 0x0018 */ unsigned long cIssuer;
  /* 0x001c */ long Padding_781;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB* rgIssuer;
  /* 0x0028 */ void* pfnFindCallback /* function */;
  /* 0x0030 */ void* pvFindArg;
} CERT_CHAIN_FIND_BY_ISSUER_PARA, *PCERT_CHAIN_FIND_BY_ISSUER_PARA; /* size: 0x0038 */

struct Windows::Foundation::Collections::IVector<Windows::UI::WindowId>
{
}; /* size: 0x0008 */

struct PACKAGEDEPENDENCY_CONTEXT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class Microsoft::WRL::Details::MakeAllocator<RegistryInsertableCandidate>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

class COleStaticLock
{
  /* 0x0000 */ class COleStaticMutexSem& _mxs;
}; /* size: 0x0008 */

typedef struct _IR_TIMER_EXTRA_CREATE_PARAMETER
{
  /* 0x0000 */ unsigned short ComponentId;
  /* 0x0002 */ unsigned short RelativeId;
} IR_TIMER_EXTRA_CREATE_PARAMETER, *PIR_TIMER_EXTRA_CREATE_PARAMETER; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<wil::details::SyncAsyncActionOp> const >;

struct Windows::UI::WindowId
{
  /* 0x0000 */ unsigned __int64 Value;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,HSTRING__ *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<__int64,float> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,double> *>
{
}; /* size: 0x0001 */

typedef struct _REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ unsigned short ReparseDataLength;
  /* 0x0002 */ unsigned short UnparsedNameLength;
} REPARSE_POINT_INFORMATION, *PREPARSE_POINT_INFORMATION; /* size: 0x0004 */

class Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator
{
  /* 0x0000 */ long Padding_782[8];
  /* 0x0020 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > _spHashMap;
  /* 0x0028 */ struct XWinRT::TXPOSITION* volatile _position;
  /* 0x0030 */ struct XWinRT::SecureVersionTag _expectedVersion;
}; /* size: 0x0038 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_INTERRUPT_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long DpcCount;
  /* 0x0008 */ unsigned long DpcRate;
  /* 0x000c */ unsigned long TimeIncrement;
  /* 0x0010 */ unsigned long DpcBypassCount;
  /* 0x0014 */ unsigned long ApcBypassCount;
} SYSTEM_INTERRUPT_INFORMATION, *PSYSTEM_INTERRUPT_INFORMATION; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > >
{
}; /* size: 0x0008 */

typedef struct _CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_783;
  /* 0x0008 */ const wchar_t* TriggerId;
} CUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG, *PCUSTOM_SYSTEM_EVENT_TRIGGER_CONFIG; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageLibraryChange *>
{
}; /* size: 0x0001 */

class wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >
{
  /* 0x0000 */ struct wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject* m_pCopy;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::IAsyncAction *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<HSTRING__ *>
{
}; /* size: 0x0008 */

typedef struct _FOCUS_EVENT_RECORD
{
  /* 0x0000 */ int bSetFocus;
} FOCUS_EVENT_RECORD, *PFOCUS_EVENT_RECORD; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryTypeLibRegistration> const >;

class Microsoft::WRL::ComPtr<IServiceProvider>
{
  /* 0x0000 */ struct IServiceProvider* ptr_;
}; /* size: 0x0008 */

typedef struct _XSAVE_AREA_HEADER
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned __int64 CompactionMask;
  /* 0x0010 */ unsigned __int64 Reserved2[6];
} XSAVE_AREA_HEADER, *PXSAVE_AREA_HEADER; /* size: 0x0040 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >
{
  /* 0x0000 */ long Padding_784[10];
  /* 0x0028 */ class XWinRT::SRWLock _lock;
  /* 0x0030 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView> _spLeftHalf;
  /* 0x0038 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > _spRightHalf;
  /* 0x0040 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *> > _spIterator;
  /* 0x0048 */ unsigned int _uSize;
  /* 0x004c */ struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *> _fnEquals;
  /* 0x004d */ BOOL _fInitialized;
}; /* size: 0x0050 */

struct std::_Narrow_char_traits<char,int>
{
}; /* size: 0x0001 */

struct IWrapperInfo
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference>
{
  /* 0x0000 */ class CClipboardBroker::CClipboardBrokerExternalReference* ptr_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_foundation_struct<short>
{
}; /* size: 0x0001 */

typedef struct _DISCDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_785;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0018 */ wchar_t* lpRemoteName;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} DISCDLGSTRUCTW, *PDISCDLGSTRUCTW; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImmersiveApplicationArrayService> >
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_INTERFACE_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} BCRYPT_INTERFACE_VERSION, *PBCRYPT_INTERFACE_VERSION; /* size: 0x0004 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::ImageProperties *>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<void *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IEventHandler<bool>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::OperationCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IOperationCompletedEventArgs *>;

struct Windows::Foundation::IReference_impl<_GUID>
{
}; /* size: 0x0008 */

typedef struct __vcrt_va_list_is_reference<unsigned short const * const>
{
} _vcrt_va_list_is_reference<unsigned short const * const>, *P_vcrt_va_list_is_reference<unsigned short const * const>; /* size: 0x0001 */

typedef struct _WOW64_FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} WOW64_FLOATING_SAVE_AREA, *PWOW64_FLOATING_SAVE_AREA; /* size: 0x0070 */

typedef struct _OSVERSIONINFOW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
} OSVERSIONINFOW, *POSVERSIONINFOW; /* size: 0x0114 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,float> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>
{
}; /* size: 0x0001 */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_786;
  /* 0x0008 */ unsigned char* ServerPrincName;
  /* 0x0010 */ unsigned long AuthnLevel;
  /* 0x0014 */ unsigned long AuthnSvc;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_A* AuthIdentity;
  /* 0x0020 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_A, *PRPC_BINDING_HANDLE_SECURITY_V1_A; /* size: 0x0028 */

typedef struct _REFS_DEALLOCATE_RANGES_RANGE
{
  /* 0x0000 */ unsigned __int64 StartOfRange;
  /* 0x0008 */ unsigned __int64 CountOfRange;
} REFS_DEALLOCATE_RANGES_RANGE, *PREFS_DEALLOCATE_RANGES_RANGE; /* size: 0x0010 */

class wil::condition_variable
{
  /* 0x0000 */ struct _RTL_CONDITION_VARIABLE m_cv;
}; /* size: 0x0008 */

class CLimitedWritableStream::Commit::__l2::<lambda_0a18120dc7dcec8cb07768015f9b0617>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
  /* 0x0008 */ unsigned long& grfCommitFlags;
}; /* size: 0x0010 */

typedef struct _BCRYPT_ECCKEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_ECCKEY_BLOB, *PBCRYPT_ECCKEY_BLOB; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<_GUID,IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::IPropertyValue *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<unsigned int>
{
}; /* size: 0x0001 */

struct XSAVE_CPU_ERRATA
{
  /* 0x0000 */ unsigned long NumberOfErrata;
  /* 0x0004 */ long Padding_787;
  /* 0x0008 */ struct XSAVE_CPU_INFO Errata[1];
}; /* size: 0x0028 */

struct tagIMMAPPTIMESTAMPS
{
  /* 0x0000 */ struct _FILETIME ftCreation;
  /* 0x0008 */ struct _FILETIME ftClosed;
  /* 0x0010 */ struct _FILETIME ftActivation;
  /* 0x0018 */ struct _FILETIME ftInactive;
  /* 0x0020 */ struct _FILETIME ftVisible;
  /* 0x0028 */ struct _FILETIME ftHidden;
}; /* size: 0x0030 */

struct IClipboardBrokerInternal
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<unsigned char,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IImpersonateClipboardOwner>
{
  /* 0x0000 */ struct IImpersonateClipboardOwner* ptr_;
}; /* size: 0x0008 */

struct wil::details::EnabledStateManager::CachedFeaturePropertyData
{
  /* 0x0000 */ enum wil_FeatureChangeTime changeTime;
  /* 0x0004 */ long Padding_788;
  /* 0x0008 */ union wil_details_FeatureStateCache* data;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction> const >;

typedef struct _TAPE_GET_MEDIA_PARAMETERS
{
  /* 0x0000 */ union _LARGE_INTEGER Capacity;
  /* 0x0008 */ union _LARGE_INTEGER Remaining;
  /* 0x0010 */ unsigned long BlockSize;
  /* 0x0014 */ unsigned long PartitionCount;
  /* 0x0018 */ unsigned char WriteProtected;
  /* 0x0019 */ char __PADDING__[7];
} TAPE_GET_MEDIA_PARAMETERS, *PTAPE_GET_MEDIA_PARAMETERS; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IRandomAccessStreamReference *,1>
{
}; /* size: 0x0008 */

class wil::com_ptr_t<IOleVerb,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IOleVerb* m_ptr;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> const >;

struct std::_Default_allocator_traits<std::allocator<unsigned short> >
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *>
{
}; /* size: 0x0008 */

struct std::_Num_int_base
{
  union
  {
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL is_exact;
    /* 0x0000 */ const BOOL is_integer;
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const int radix;
  }; /* size: 0x0004 */
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,1,0>
{
}; /* size: 0x0001 */

struct std::_Num_float_base
{
  union
  {
    /* 0x0000 */ enum std::float_denorm_style has_denorm;
    /* 0x0000 */ const BOOL has_infinity;
    /* 0x0000 */ const BOOL has_quiet_NaN;
    /* 0x0000 */ const BOOL has_signaling_NaN;
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL is_iec559;
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ enum std::float_round_style round_style;
    /* 0x0000 */ const int radix;
  }; /* size: 0x0004 */
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationEnumerator> const >;

typedef struct _TIME_FIELDS
{
  /* 0x0000 */ short Year;
  /* 0x0002 */ short Month;
  /* 0x0004 */ short Day;
  /* 0x0006 */ short Hour;
  /* 0x0008 */ short Minute;
  /* 0x000a */ short Second;
  /* 0x000c */ short Milliseconds;
  /* 0x000e */ short Weekday;
} TIME_FIELDS, *PTIME_FIELDS; /* size: 0x0010 */

struct wil::read_lock_required
{
}; /* size: 0x0001 */

struct IAsyncCallback
{
}; /* size: 0x0008 */

class CWrapperBase<IStorage>::{dtor}::__l2::<lambda_1fabf05943988ec97a03c569b9148d41>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

class XWinRT::XHashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits,XWinRT::CElementTraits<IInspectable *> >::CPair
{
  /* 0x0000 */ struct HSTRING__* const m_key;
  /* 0x0008 */ struct IInspectable* m_value;
}; /* size: 0x0010 */

class SafeIntCompare<unsigned short,unsigned short>
{
}; /* size: 0x0001 */

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ long Padding_789;
  /* 0x0008 */ wchar_t* pszComment;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ long __PADDING__[1];
} SERVICE_CONTROL_STATUS_REASON_PARAMSW, *PSERVICE_CONTROL_STATUS_REASON_PARAMSW; /* size: 0x0038 */

class CEnumFmt
{
  /* 0x0000 */ long Padding_790[4];
  /* 0x0010 */ unsigned long m_dwDirection;
  /* 0x0014 */ long Padding_791;
  /* 0x0018 */ class Microsoft::WRL::ComPtr<IOleDataFormatIterator> m_dataFormatIterator;
  /* 0x0020 */ struct FMTCACHE m_cache;
}; /* size: 0x0048 */

struct CCompositeMonikerEnum::se
{
  /* 0x0000 */ class CCompositeMoniker* m_pCM;
  /* 0x0008 */ struct CCompositeMonikerEnum::se* m_pseNext;
  /* 0x0010 */ struct CCompositeMonikerEnum::se* m_psePrev;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::BackgroundTaskRegistration *> *,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_WAKE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NotificationChannel;
  /* 0x0008 */ unsigned __int64 WakeCounters[7];
} JOBOBJECT_WAKE_INFORMATION, *PJOBOBJECT_WAKE_INFORMATION; /* size: 0x0040 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_TP_WAIT *),&wil::details::DestroyThreadPoolWait<0>::Destroy,_TP_WAIT *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleClassInfo> const >;

typedef struct __vc_attributes::atl::registration_scriptAttribute
{
  /* 0x0000 */ const char* script;
} _vc_attributes::atl::registration_scriptAttribute, *P_vc_attributes::atl::registration_scriptAttribute; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<_GUID,bool> *>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE
{
  /* 0x0000 */ unsigned __int64 TimeAdjustment;
  /* 0x0008 */ unsigned __int64 TimeIncrement;
  /* 0x0010 */ unsigned char Enable;
  /* 0x0011 */ char __PADDING__[7];
} SYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE, *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION_PRECISE; /* size: 0x0018 */

struct wil::details::SystemThreadPoolMethods
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> const >;

struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&GlobalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<ReferencedRegistryKey>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Storage::FileProperties::DocumentProperties *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerb> const >;

struct CMemString_PolicyAutoMem
{
}; /* size: 0x0001 */

class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::TryAcquireRead>
{
  /* 0x0000 */ class XWinRT::SRWLock* _pLock;
}; /* size: 0x0008 */

class XWinRT::CElementTraitsBase<HSTRING__ *>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<_CERT_CONTEXT const *,int (__cdecl*)(_CERT_CONTEXT const *),&CertFreeCertificateContext,wistd::integral_constant<unsigned __int64,0>,_CERT_CONTEXT const *,_CERT_CONTEXT const *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct wil::details_abi::SubscriptionList::Subscription
{
  /* 0x0000 */ void* callback /* function */;
  /* 0x0008 */ void* context;
}; /* size: 0x0010 */

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NETWORK_PHYSICAL_NAME_INFORMATION, *PFILE_NETWORK_PHYSICAL_NAME_INFORMATION; /* size: 0x0008 */

typedef struct __vc_attributes::stringAttribute
{
} _vc_attributes::stringAttribute, *P_vc_attributes::stringAttribute; /* size: 0x0001 */

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned long ExtendedCode;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
} EXTENDED_ENCRYPTED_DATA_INFO, *PEXTENDED_ENCRYPTED_DATA_INFO; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockExclusive,_RTL_SRWLOCK *>
{
}; /* size: 0x0001 */

struct IEnumOLEVERB
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IConversionClass>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<IInspectable *,IInspectable *> *>
{
}; /* size: 0x0008 */

class Windows::Storage::BulkAccess::FolderInformation;

class SafeIntException
{
  /* 0x0000 */ enum SafeIntError m_code;
}; /* size: 0x0004 */

class CDragDropBroker
{
  /* 0x0000 */ class COleStaticMutexSem s_registrationLock;
}; /* size: 0x0030 */

class CEnumFmt10
{
  /* 0x0000 */ long Padding_792[4];
  /* 0x0010 */ unsigned long m_dwDirection;
  /* 0x0014 */ unsigned long m_iKey;
  /* 0x0018 */ struct FMT* m_rgFmt;
  /* 0x0020 */ unsigned __int64 m_cFmt;
}; /* size: 0x0028 */

typedef struct _PS_PKG_CLAIM
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Origin : 8; /* bit position: 0 */
} PS_PKG_CLAIM, *PPS_PKG_CLAIM; /* size: 0x0008 */

struct IImmersiveApplicationWindow
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBroker,0,0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::BulkAccess::FileInformation *>
{
}; /* size: 0x0008 */

class wil::details::<lambda_f6f5a2d65a5be6901b153907bff1bc07>
{
}; /* size: 0x0001 */

struct wistd::unique_ptr<wil::details::folder_change_reader_state,wistd::default_delete<wil::details::folder_change_reader_state> >::__nat;

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Storage::IStorageItem *> *>
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_IO_PRIORITY_LIMIT
{
  /* 0x0000 */ enum _JOBOBJECT_IO_PRIORITY_LIMIT_FLAGS Flags;
  /* 0x0004 */ unsigned long Priority;
} JOBOBJECT_IO_PRIORITY_LIMIT, *PJOBOBJECT_IO_PRIORITY_LIMIT; /* size: 0x0008 */

typedef struct __vcrt_assert_va_start_is_not_reference<unsigned short * *>
{
} _vcrt_assert_va_start_is_not_reference<unsigned short * *>, *P_vcrt_assert_va_start_is_not_reference<unsigned short * *>; /* size: 0x0001 */

typedef struct _CRITICAL_PROCESS_EXCEPTION_DATA
{
  /* 0x0000 */ struct _GUID ReportId;
  /* 0x0010 */ struct _UNICODE_STRING ModuleName;
  /* 0x0020 */ unsigned long ModuleTimestamp;
  /* 0x0024 */ unsigned long ModuleSize;
  /* 0x0028 */ unsigned __int64 Offset;
} CRITICAL_PROCESS_EXCEPTION_DATA, *PCRITICAL_PROCESS_EXCEPTION_DATA; /* size: 0x0030 */

struct wil::ExpiredFeatureTraits<wil::details::FeatureTraitsBase>
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,ITypeLibRegistrationReader,Microsoft::WRL::FtmBase>
{
  /* 0x0000 */ long Padding_793[11];
  /* 0x002c */ volatile long refcount_;
}; /* size: 0x0030 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&RtlReleaseSRWLockShared,_RTL_SRWLOCK *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IActivatableClassRegistration
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<CEnumFmt>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct EVENT_ENTRY
{
  /* 0x0000 */ struct _EVENT_DESCRIPTOR EventDescriptor;
  /* 0x0010 */ struct _EVENT_DATA_DESCRIPTOR* UserData;
  /* 0x0018 */ struct EVENT_ENTRY* LeftEntry;
  /* 0x0020 */ struct EVENT_ENTRY* RightEntry;
  /* 0x0028 */ unsigned int Hash;
  /* 0x002c */ unsigned char UserDataCount;
  /* 0x002d */ unsigned char NumAggregateFields;
}; /* size: 0x002e */

class Microsoft::WRL::Details::MakeAllocator<CEnumFmt10>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct IPackagedComClassIdIterator
{
}; /* size: 0x0008 */

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwExemptSeconds;
  /* 0x0008 */ struct _FILETIME ExpireTime;
} CRYPTNET_URL_CACHE_FLUSH_INFO, *PCRYPTNET_URL_CACHE_FLUSH_INFO; /* size: 0x0010 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<9,0,1,2,3,4,5,6,7,8> >
{
} tlgDataDescInit<_tlgIndexSequence<9,0,1,2,3,4,5,6,7,8> >, *PtlgDataDescInit<_tlgIndexSequence<9,0,1,2,3,4,5,6,7,8> >; /* size: 0x0001 */

typedef struct __vc_attributes::helper_attributes::multi_valueAttribute
{
} _vc_attributes::helper_attributes::multi_valueAttribute, *P_vc_attributes::helper_attributes::multi_valueAttribute; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IObjectProvider>
{
  /* 0x0000 */ struct IObjectProvider* ptr_;
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *) noexcept,&wil::details::ResetEvent,void *>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IdleTime;
  /* 0x0008 */ unsigned __int64 C1Time;
  /* 0x0010 */ unsigned __int64 C2Time;
  /* 0x0018 */ unsigned __int64 C3Time;
  /* 0x0020 */ unsigned long C1Transitions;
  /* 0x0024 */ unsigned long C2Transitions;
  /* 0x0028 */ unsigned long C3Transitions;
  /* 0x002c */ unsigned long Padding;
} SYSTEM_PROCESSOR_IDLE_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_INFORMATION; /* size: 0x0030 */

struct Windows::Foundation::IReference<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void * (__cdecl*)(void *),&LocalFree,unsigned short *>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::size_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::size_isAttribute, *P_vc_attributes::size_isAttribute; /* size: 0x0008 */

struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::FtmBase> > >
{
}; /* size: 0x0001 */

typedef struct _CERT_LOGOTYPE_EXT_INFO
{
  /* 0x0000 */ unsigned long cCommunityLogo;
  /* 0x0004 */ long Padding_794;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO* rgCommunityLogo;
  /* 0x0010 */ struct _CERT_LOGOTYPE_INFO* pIssuerLogo;
  /* 0x0018 */ struct _CERT_LOGOTYPE_INFO* pSubjectLogo;
  /* 0x0020 */ unsigned long cOtherLogo;
  /* 0x0024 */ long Padding_795;
  /* 0x0028 */ struct _CERT_OTHER_LOGOTYPE_INFO* rgOtherLogo;
} CERT_LOGOTYPE_EXT_INFO, *PCERT_LOGOTYPE_EXT_INFO; /* size: 0x0030 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IDataObject,0,0>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardTaskCompletion,0,0>
{
}; /* size: 0x0001 */

struct wistd::__function::__maybe_derive_from_unary_function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>
{
}; /* size: 0x0001 */

typedef struct _CERT_LOGOTYPE_DATA
{
  /* 0x0000 */ unsigned long cLogotypeImage;
  /* 0x0004 */ long Padding_796;
  /* 0x0008 */ struct _CERT_LOGOTYPE_IMAGE* rgLogotypeImage;
  /* 0x0010 */ unsigned long cLogotypeAudio;
  /* 0x0014 */ long Padding_797;
  /* 0x0018 */ struct _CERT_LOGOTYPE_AUDIO* rgLogotypeAudio;
} CERT_LOGOTYPE_DATA, *PCERT_LOGOTYPE_DATA; /* size: 0x0020 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Microsoft::WRL::FtmBase,1,1>
{
}; /* size: 0x0001 */

struct GetTypeValueImpl<long,unsigned short const *,long>
{
}; /* size: 0x0001 */

struct CClipDataObject::GetFormatEtcDataArray::__l12::SUPPORTED_EDP_ACCESS_DENIED_FORMATS_MAP
{
  /* 0x0000 */ unsigned short cf;
  /* 0x0002 */ BOOL isOnClipboard;
  /* 0x0003 */ char __PADDING__[1];
}; /* size: 0x0004 */

typedef struct _CERT_CREATE_CONTEXT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_798;
  /* 0x0008 */ void* pfnFree /* function */;
  /* 0x0010 */ void* pvFree;
  /* 0x0018 */ void* pfnSort /* function */;
  /* 0x0020 */ void* pvSort;
} CERT_CREATE_CONTEXT_PARA, *PCERT_CREATE_CONTEXT_PARA; /* size: 0x0028 */

struct PICTINFO
{
  /* 0x0000 */ void* hmf;
  /* 0x0008 */ struct tagRECT bbox;
  /* 0x0018 */ unsigned short inch;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

class Common::AutoBaseHandle<HKEY__ *,&Common::AutoHandleCloseHKEY<HKEY__ *> >
{
  /* 0x0000 */ struct HKEY__* h;
}; /* size: 0x0008 */

class BinaryAndHelper<long,int,0>
{
}; /* size: 0x0001 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(unsigned short *),&SysFreeString,unsigned short *>
{
}; /* size: 0x0001 */

class Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs;

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_RTL_SRWLOCK *),&ReleaseSRWLockShared,_RTL_SRWLOCK *>
{
}; /* size: 0x0001 */

struct wil::details::wnf_subscription_state_base
{
  /* 0x0000 */ long Padding_799[2];
  /* 0x0008 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_WNF_USER_SUBSCRIPTION *,long (__cdecl*)(_WNF_USER_SUBSCRIPTION *),&RtlUnsubscribeWnfNotificationWaitForCompletion,wistd::integral_constant<unsigned __int64,0>,_WNF_USER_SUBSCRIPTION *,_WNF_USER_SUBSCRIPTION *,0,std::nullptr_t> > > m_subscription;
}; /* size: 0x0010 */

struct wistd::__compressed_pair_elem<_TOKEN_GROUPS_AND_PRIVILEGES *,0,0>
{
  /* 0x0000 */ struct _TOKEN_GROUPS_AND_PRIVILEGES* __value_;
}; /* size: 0x0008 */

typedef struct _RGNDATAHEADER
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long iType;
  /* 0x0008 */ unsigned long nCount;
  /* 0x000c */ unsigned long nRgnSize;
  /* 0x0010 */ struct tagRECT rcBound;
} RGNDATAHEADER, *PRGNDATAHEADER; /* size: 0x0020 */

typedef struct _APP_MEMORY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AvailableCommit;
  /* 0x0008 */ unsigned __int64 PrivateCommitUsage;
  /* 0x0010 */ unsigned __int64 PeakPrivateCommitUsage;
  /* 0x0018 */ unsigned __int64 TotalCommitUsage;
} APP_MEMORY_INFORMATION, *PAPP_MEMORY_INFORMATION; /* size: 0x0020 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IComProgIdIterator>
{
  /* 0x0000 */ long Padding_800[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,_TP_TIMER *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned char> *>
{
}; /* size: 0x0001 */

typedef struct _SECURITY_SEED_AND_LENGTH
{
  /* 0x0000 */ unsigned char Length;
  /* 0x0001 */ unsigned char Seed;
} SECURITY_SEED_AND_LENGTH, *PSECURITY_SEED_AND_LENGTH; /* size: 0x0002 */

class Common::AutoHandle
{
}; /* size: 0x0008 */

class CFunctionDiscoveryNotificationWrapper
{
}; /* size: 0x0008 */

typedef struct _BY_HANDLE_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long dwVolumeSerialNumber;
  /* 0x0020 */ unsigned long nFileSizeHigh;
  /* 0x0024 */ unsigned long nFileSizeLow;
  /* 0x0028 */ unsigned long nNumberOfLinks;
  /* 0x002c */ unsigned long nFileIndexHigh;
  /* 0x0030 */ unsigned long nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION; /* size: 0x0034 */

class Common::AutoBaseHandle<void *,&Common::CloseHandleHelper>
{
  /* 0x0000 */ void* h;
}; /* size: 0x0008 */

struct GetTypeValueImpl<long,unsigned long,long>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::atl::db_paramAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0008 */ const char* paramtype;
  /* 0x0010 */ const char* dbtype;
  /* 0x0018 */ const char* precision;
  /* 0x0020 */ const char* scale;
  /* 0x0028 */ const char* status;
  /* 0x0030 */ const char* length;
} _vc_attributes::atl::db_paramAttribute, *P_vc_attributes::atl::db_paramAttribute; /* size: 0x0038 */

class CAutoHandle_Policy<HRGN__ *>
{
}; /* size: 0x0001 */

struct GetTypeValueImpl<long,unsigned short *,long>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFolder *>
{
}; /* size: 0x0001 */

class wil::details::<lambda_80d4cd0177896705b6a0b81f0b1f02f0>
{
}; /* size: 0x0001 */

struct wil::details::ResultStatus
{
  /* 0x0000 */ HRESULT hr;
  /* 0x0004 */ long status;
  /* 0x0008 */ BOOL isNtStatus;
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _DROPFILES
{
  /* 0x0000 */ unsigned long pFiles;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ int fWide;
} DROPFILES, *PDROPFILES; /* size: 0x0014 */

typedef union _userHGLOBAL::__MIDL_IWinTypes_0003
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _FLAGGED_BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHGLOBAL::__MIDL_IWinTypes_0003, *PuserHGLOBAL::__MIDL_IWinTypes_0003; /* size: 0x0008 */

struct IWrappedProtocol
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *> >
{
}; /* size: 0x0001 */

struct wil::details::static_lazy<wil::details::ApiTelemetryLogger>::Completer
{
  /* 0x0000 */ class wil::details::static_lazy<wil::details::ApiTelemetryLogger>* m_pSelf;
  /* 0x0008 */ unsigned long m_flags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _DEVICE_DSM_DEFINITION
{
  /* 0x0000 */ unsigned long Action;
  /* 0x0004 */ unsigned char SingleRange;
  /* 0x0005 */ char Padding_801[3];
  /* 0x0008 */ unsigned long ParameterBlockAlignment;
  /* 0x000c */ unsigned long ParameterBlockLength;
  /* 0x0010 */ unsigned char HasOutput;
  /* 0x0011 */ char Padding_802[3];
  /* 0x0014 */ unsigned long OutputBlockAlignment;
  /* 0x0018 */ unsigned long OutputBlockLength;
} DEVICE_DSM_DEFINITION, *PDEVICE_DSM_DEFINITION; /* size: 0x001c */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::StorageFolder *>
{
}; /* size: 0x0008 */

class EnumMap<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ long Padding_803[2];
  /* 0x0008 */ class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0010 */ class CLinkable* m_pLinkable;
}; /* size: 0x0018 */

class CThreadCheck
{
  /* 0x0000 */ unsigned long m_tid;
}; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApplicationAssociationRegistration> >
{
}; /* size: 0x0008 */

struct tagPOINTFX
{
  /* 0x0000 */ struct _FIXED x;
  /* 0x0004 */ struct _FIXED y;
}; /* size: 0x0008 */

struct tagTTPOLYCURVE
{
  /* 0x0000 */ unsigned short wType;
  /* 0x0002 */ unsigned short cpfx;
  /* 0x0004 */ struct tagPOINTFX apfx[1];
}; /* size: 0x000c */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Foundation::Collections::IKeyValuePair<EventRegistrationToken,int> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::Foundation::Collections::IPropertySet *> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>
{
}; /* size: 0x0008 */

struct wistd::__unique_ptr_deleter_sfinae<wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >;

typedef struct _Real_widened<double,double>
{
} Real_widened<double,double>, *PReal_widened<double,double>; /* size: 0x0001 */

class wil::com_ptr_t<IComProgIdIterator,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IComProgIdIterator* m_ptr;
}; /* size: 0x0008 */

class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>
{
  union
  {
    /* 0x0000 */ const unsigned __int64 Keyword;
    /* 0x0000 */ const unsigned char Level;
    /* 0x0000 */ const unsigned __int64 PrivacyTag;
  }; /* size: 0x0008 */
  /* 0x0008 */ class wil::details::ThreadFailureCallbackHolder m_callbackHolder;
  /* 0x0030 */ class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType>* m_pActivityData;
  /* 0x0038 */ class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> m_activityData;
  /* 0x0138 */ class wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> > m_sharedActivityData;
}; /* size: 0x0140 */

typedef struct _SC_ACTION
{
  /* 0x0000 */ enum _SC_ACTION_TYPE Type;
  /* 0x0004 */ unsigned long Delay;
} SC_ACTION, *PSC_ACTION; /* size: 0x0008 */

class std::_Lockit
{
  /* 0x0000 */ int _Locktype;
}; /* size: 0x0004 */

typedef struct _FILE_STORAGE_TIER
{
  /* 0x0000 */ struct _GUID Id;
  /* 0x0010 */ wchar_t Name[256];
  /* 0x0210 */ wchar_t Description[256];
  /* 0x0410 */ unsigned __int64 Flags;
  /* 0x0418 */ unsigned __int64 ProvisionedCapacity;
  /* 0x0420 */ enum _FILE_STORAGE_TIER_MEDIA_TYPE MediaType;
  /* 0x0424 */ enum _FILE_STORAGE_TIER_CLASS Class;
} FILE_STORAGE_TIER, *PFILE_STORAGE_TIER; /* size: 0x0428 */

struct wil::details::shared_object<wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_804;
  /* 0x0008 */ class wil::ActivityBase<DragDropLogging,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<DragDropLogging,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDragDropBrokerHost> const >;

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Collections::IKeyValuePair<unsigned int,IInspectable *> *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>
{
}; /* size: 0x0008 */

class MAP_KEY_GUID
{
  /* 0x0000 */ struct _GUID guid;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&CoTaskMemFree,unsigned short *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Storage::IStorageItem *>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_HANDLE_TRACING_ENTRY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ struct _CLIENT_ID ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_805;
  /* 0x0020 */ void* Stacks[16];
} PROCESS_HANDLE_TRACING_ENTRY, *PPROCESS_HANDLE_TRACING_ENTRY; /* size: 0x00a0 */

typedef struct _PROCESS_HANDLE_TRACING_QUERY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_806;
  /* 0x0010 */ struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
} PROCESS_HANDLE_TRACING_QUERY, *PPROCESS_HANDLE_TRACING_QUERY; /* size: 0x00b0 */

typedef struct _WIN32_FILE_ATTRIBUTE_DATA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA, *PWIN32_FILE_ATTRIBUTE_DATA; /* size: 0x0024 */

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long DeviceDepth;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEPTH_DATA, *PPLUGPLAY_CONTROL_DEPTH_DATA; /* size: 0x0018 */

class wil::details::static_lazy<DragDropTelemetry>
{
  /* 0x0000 */ union _RTL_RUN_ONCE m_initOnce;
  /* 0x0008 */ unsigned char m_storage[24];
}; /* size: 0x0020 */

class AdHocCallFrame<IPersistPropertyBag,<lambda_4f665fe9629adf1b6321c2bb89cc94f4> >
{
  /* 0x0000 */ long Padding_807[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::InitNew::__l2::<lambda_4f665fe9629adf1b6321c2bb89cc94f4>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IEnterpriseDropTarget>
{
  /* 0x0000 */ struct IEnterpriseDropTarget* ptr_;
}; /* size: 0x0008 */

class CPrivDragDrop
{
  /* 0x0000 */ long Padding_808[2];
  /* 0x0008 */ unsigned long _ulRefCnt;
  /* 0x000c */ long Padding_809;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IDropTarget> _pDropTarget;
  /* 0x0018 */ class Microsoft::WRL::ComPtr<IDataObject> _pCurrentDataObject;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IEnterpriseDropTarget> _pEnterpriseDropTarget;
  /* 0x0028 */ struct HWND__* _hwnd;
  /* 0x0030 */ BOOL _fBrokerInstance;
  /* 0x0031 */ BOOL m_dropTargetIsRPCSSRegistered;
  /* 0x0032 */ char Padding_810[6];
  /* 0x0038 */ struct CO_MTA_USAGE_COOKIE__* _mtaCookie;
}; /* size: 0x0040 */

struct Windows::Storage::Streams::IBuffer
{
}; /* size: 0x0008 */

class IsInt<int>
{
}; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY DisableExtensionPoints;
} RTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY, *PRTL_IMAGE_MITIGATION_EXTENSION_POINT_DISABLE_POLICY; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *> >
{
}; /* size: 0x0001 */

typedef struct _XSAVE_FEATURE
{
  /* 0x0000 */ unsigned long FeatureId;
  /* 0x0004 */ long Padding_811;
  union
  {
    /* 0x0008 */ struct _XSAVE_VENDORS* Vendors;
    /* 0x0008 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} XSAVE_FEATURE, *PXSAVE_FEATURE; /* size: 0x0010 */

struct Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *>;

struct tagFULLPROPSPEC
{
  /* 0x0000 */ struct _GUID guidPropSet;
  /* 0x0010 */ struct tagPROPSPEC psProperty;
}; /* size: 0x0020 */

typedef struct _DMA_CONFIGURATION_BYTE1
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Reserved0 : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned char TransferSize : 2; /* bit position: 2 */
    /* 0x0000 */ unsigned char Timing : 2; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 2; /* bit position: 6 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE1, *PDMA_CONFIGURATION_BYTE1; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::IStorageFile *>
{
}; /* size: 0x0001 */

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_812;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ union _LARGE_INTEGER OldLastWriteTime;
  /* 0x0030 */ union _LARGE_INTEGER NewLastWriteTime;
} JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION, *PJOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION; /* size: 0x0038 */

typedef struct __vc_attributes::immediatebindAttribute
{
} _vc_attributes::immediatebindAttribute, *P_vc_attributes::immediatebindAttribute; /* size: 0x0001 */

typedef struct _SECTION_IMAGE_INFORMATION
{
  /* 0x0000 */ void* TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_813;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  union
  {
    struct
    {
      /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
      /* 0x002a */ unsigned short MinorOperatingSystemVersion;
    }; /* size: 0x0004 */
    /* 0x0028 */ unsigned long OperatingSystemVersion;
  }; /* size: 0x0004 */
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlusNativeReady : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ComPlusILOnly : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 2 */
      /* 0x0033 */ unsigned char ImageMappedFlat : 1; /* bit position: 3 */
      /* 0x0033 */ unsigned char BaseBelow4gb : 1; /* bit position: 4 */
      /* 0x0033 */ unsigned char ComPlusPrefer32bit : 1; /* bit position: 5 */
      /* 0x0033 */ unsigned char Reserved : 2; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION; /* size: 0x0040 */

typedef struct _SECTION_INTERNAL_IMAGE_INFORMATION
{
  /* 0x0000 */ struct _SECTION_IMAGE_INFORMATION SectionInformation;
  union
  {
    /* 0x0040 */ unsigned long ExtendedFlags;
    struct /* bitfield */
    {
      /* 0x0040 */ unsigned long ImageExportSuppressionEnabled : 1; /* bit position: 0 */
      /* 0x0040 */ unsigned long ImageCetShadowStacksReady : 1; /* bit position: 1 */
      /* 0x0040 */ unsigned long ImageXfgEnabled : 1; /* bit position: 2 */
      /* 0x0040 */ unsigned long ImageCetShadowStacksStrictMode : 1; /* bit position: 3 */
      /* 0x0040 */ unsigned long ImageCetSetContextIpValidationRelaxedMode : 1; /* bit position: 4 */
      /* 0x0040 */ unsigned long ImageCetDynamicApisAllowInProc : 1; /* bit position: 5 */
      /* 0x0040 */ unsigned long ImageCetDowngradeReserved1 : 1; /* bit position: 6 */
      /* 0x0040 */ unsigned long ImageCetDowngradeReserved2 : 1; /* bit position: 7 */
      /* 0x0040 */ unsigned long Reserved : 24; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0044 */ long __PADDING__[1];
} SECTION_INTERNAL_IMAGE_INFORMATION, *PSECTION_INTERNAL_IMAGE_INFORMATION; /* size: 0x0048 */

typedef struct _CERT_QC_STATEMENT
{
  /* 0x0000 */ char* pszStatementId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB StatementInfo;
} CERT_QC_STATEMENT, *PCERT_QC_STATEMENT; /* size: 0x0018 */

struct wil::details::shared_object<wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> >::RefAndObject
{
  /* 0x0000 */ long m_refCount;
  /* 0x0004 */ long Padding_814;
  /* 0x0008 */ class wil::ActivityBase<OleDragDropTracing,1,0,5,0,_TlgReflectorTag_Param0IsProviderType>::ActivityData<OleDragDropTracing,_TlgReflectorTag_Param0IsProviderType> m_object;
}; /* size: 0x0108 */

class SafeIntCompare<unsigned int,unsigned __int64>
{
}; /* size: 0x0001 */

typedef struct _HEAP_REGION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 ReserveSize;
  /* 0x0010 */ unsigned __int64 CommitSize;
  /* 0x0018 */ unsigned __int64 FirstRangeInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRegionInformationOffset;
} HEAP_REGION_INFORMATION, *PHEAP_REGION_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ unsigned long Protection;
  /* 0x0018 */ unsigned __int64 FirstBlockInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRangeInformationOffset;
} HEAP_RANGE_INFORMATION, *PHEAP_RANGE_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_BLOCK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_815;
  /* 0x0010 */ unsigned __int64 DataSize;
  /* 0x0018 */ unsigned __int64 OverheadSize;
  /* 0x0020 */ unsigned __int64 NextBlockInformationOffset;
} HEAP_BLOCK_INFORMATION, *PHEAP_BLOCK_INFORMATION; /* size: 0x0028 */

typedef struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION
{
  /* 0x0000 */ unsigned __int64 SegmentReserveSize;
  /* 0x0008 */ unsigned __int64 SegmentCommitSize;
  /* 0x0010 */ unsigned __int64 SegmentCount;
  /* 0x0018 */ unsigned __int64 AllocatedSize;
  /* 0x0020 */ unsigned __int64 LargeAllocReserveSize;
  /* 0x0028 */ unsigned __int64 LargeAllocCommitSize;
} SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION, *PSEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION; /* size: 0x0030 */

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long HeapIndex;
  /* 0x000c */ unsigned long LastHeapIndex;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned __int64 ReserveSize;
  /* 0x0020 */ unsigned __int64 CommitSize;
  /* 0x0028 */ unsigned long SegmentCount;
  /* 0x002c */ long Padding_816;
  /* 0x0030 */ unsigned __int64 LargeUCRMemory;
  /* 0x0038 */ unsigned long UCRLength;
  /* 0x003c */ long Padding_817;
  /* 0x0040 */ unsigned __int64 AllocatedSpace;
  /* 0x0048 */ unsigned __int64 FreeSpace;
  /* 0x0050 */ unsigned long FreeListLength;
  /* 0x0054 */ unsigned long Contention;
  /* 0x0058 */ unsigned long VirtualBlocks;
  /* 0x005c */ unsigned long CommitRate;
  /* 0x0060 */ unsigned long DecommitRate;
  /* 0x0064 */ long Padding_818;
  /* 0x0068 */ unsigned __int64 HeapTag;
  /* 0x0070 */ struct _SEGMENT_HEAP_PERFORMANCE_COUNTER_INFORMATION SegmentHeapPerfInformation;
} HEAP_PERFORMANCE_COUNTERS_INFORMATION, *PHEAP_PERFORMANCE_COUNTERS_INFORMATION; /* size: 0x00a0 */

typedef struct _HEAP_INFORMATION_ITEM
{
  /* 0x0000 */ unsigned long Level;
  /* 0x0004 */ long Padding_819;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0010 */ struct _HEAP_INFORMATION HeapInformation;
    /* 0x0010 */ struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    /* 0x0010 */ struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    /* 0x0010 */ struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    /* 0x0010 */ struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    struct
    {
      /* 0x0010 */ unsigned __int64 DynamicStart;
      /* 0x0018 */ long __PADDING__[38];
    }; /* size: 0x00a0 */
  }; /* size: 0x00a0 */
} HEAP_INFORMATION_ITEM, *PHEAP_INFORMATION_ITEM; /* size: 0x00b0 */

class IntRegion<unsigned int,unsigned __int64>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMapChangedEventArgs<_GUID>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<enum Windows::System::UserWatcherUpdateKind,1>
{
}; /* size: 0x0008 */

typedef struct _GDI_TEB_BATCH32
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Offset : 31; /* bit position: 0 */
    /* 0x0000 */ unsigned long HasRenderingCommand : 1; /* bit position: 31 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long HDC;
  /* 0x0008 */ unsigned long Buffer[310];
} GDI_TEB_BATCH32, *PGDI_TEB_BATCH32; /* size: 0x04e0 */

typedef struct _TEB32
{
  /* 0x0000 */ struct _NT_TIB32 NtTib;
  /* 0x001c */ unsigned long EnvironmentPointer;
  /* 0x0020 */ struct _CLIENT_ID32 ClientId;
  /* 0x0028 */ unsigned long ActiveRpcHandle;
  /* 0x002c */ unsigned long ThreadLocalStoragePointer;
  /* 0x0030 */ unsigned long ProcessEnvironmentBlock;
  /* 0x0034 */ unsigned long LastErrorValue;
  /* 0x0038 */ unsigned long CountOfOwnedCriticalSections;
  /* 0x003c */ unsigned long CsrClientThread;
  /* 0x0040 */ unsigned long Win32ThreadInfo;
  /* 0x0044 */ unsigned long User32Reserved[26];
  /* 0x00ac */ unsigned long UserReserved[5];
  /* 0x00c0 */ unsigned long WOW32Reserved;
  /* 0x00c4 */ unsigned long CurrentLocale;
  /* 0x00c8 */ unsigned long FpSoftwareStatusRegister;
  /* 0x00cc */ unsigned long ReservedForDebuggerInstrumentation[16];
  /* 0x010c */ unsigned long SystemReserved1[26];
  /* 0x0174 */ char PlaceholderCompatibilityMode;
  /* 0x0175 */ unsigned char PlaceholderHydrationAlwaysExplicit;
  /* 0x0176 */ char PlaceholderReserved[10];
  /* 0x0180 */ unsigned long ProxiedProcessId;
  /* 0x0184 */ struct _ACTIVATION_CONTEXT_STACK32 _ActivationStack;
  /* 0x019c */ unsigned char WorkingOnBehalfTicket[8];
  /* 0x01a4 */ long ExceptionCode;
  /* 0x01a8 */ unsigned long ActivationContextStackPointer;
  /* 0x01ac */ unsigned long InstrumentationCallbackSp;
  /* 0x01b0 */ unsigned long InstrumentationCallbackPreviousPc;
  /* 0x01b4 */ unsigned long InstrumentationCallbackPreviousSp;
  /* 0x01b8 */ unsigned char InstrumentationCallbackDisabled;
  /* 0x01b9 */ unsigned char SpareBytes[23];
  /* 0x01d0 */ unsigned long TxFsContext;
  /* 0x01d4 */ struct _GDI_TEB_BATCH32 GdiTebBatch;
  /* 0x06b4 */ struct _CLIENT_ID32 RealClientId;
  /* 0x06bc */ unsigned long GdiCachedProcessHandle;
  /* 0x06c0 */ unsigned long GdiClientPID;
  /* 0x06c4 */ unsigned long GdiClientTID;
  /* 0x06c8 */ unsigned long GdiThreadLocalInfo;
  /* 0x06cc */ unsigned long Win32ClientInfo[62];
  /* 0x07c4 */ unsigned long glDispatchTable[233];
  /* 0x0b68 */ unsigned long glReserved1[29];
  /* 0x0bdc */ unsigned long glReserved2;
  /* 0x0be0 */ unsigned long glSectionInfo;
  /* 0x0be4 */ unsigned long glSection;
  /* 0x0be8 */ unsigned long glTable;
  /* 0x0bec */ unsigned long glCurrentRC;
  /* 0x0bf0 */ unsigned long glContext;
  /* 0x0bf4 */ unsigned long LastStatusValue;
  /* 0x0bf8 */ struct _STRING32 StaticUnicodeString;
  /* 0x0c00 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x0e0a */ char Padding_820[2];
  /* 0x0e0c */ unsigned long DeallocationStack;
  /* 0x0e10 */ unsigned long TlsSlots[64];
  /* 0x0f10 */ struct LIST_ENTRY32 TlsLinks;
  /* 0x0f18 */ unsigned long Vdm;
  /* 0x0f1c */ unsigned long ReservedForNtRpc;
  /* 0x0f20 */ unsigned long DbgSsReserved[2];
  /* 0x0f28 */ unsigned long HardErrorMode;
  /* 0x0f2c */ unsigned long Instrumentation[9];
  /* 0x0f50 */ struct _GUID ActivityId;
  /* 0x0f60 */ unsigned long SubProcessTag;
  /* 0x0f64 */ unsigned long PerflibData;
  /* 0x0f68 */ unsigned long EtwTraceData;
  /* 0x0f6c */ unsigned long WinSockData;
  /* 0x0f70 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x0f74 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x0f74 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x0f74 */ unsigned char ReservedPad0;
      /* 0x0f75 */ unsigned char ReservedPad1;
      /* 0x0f76 */ unsigned char ReservedPad2;
      /* 0x0f77 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0f78 */ unsigned long GuaranteedStackBytes;
  /* 0x0f7c */ unsigned long ReservedForPerf;
  /* 0x0f80 */ unsigned long ReservedForOle;
  /* 0x0f84 */ unsigned long WaitingOnLoaderLock;
  /* 0x0f88 */ unsigned long SavedPriorityState;
  /* 0x0f8c */ unsigned long ReservedForCodeCoverage;
  /* 0x0f90 */ unsigned long ThreadPoolData;
  /* 0x0f94 */ unsigned long TlsExpansionSlots;
  /* 0x0f98 */ unsigned long MuiGeneration;
  /* 0x0f9c */ unsigned long IsImpersonating;
  /* 0x0fa0 */ unsigned long NlsCache;
  /* 0x0fa4 */ unsigned long pShimData;
  /* 0x0fa8 */ unsigned long HeapData;
  /* 0x0fac */ unsigned long CurrentTransactionHandle;
  /* 0x0fb0 */ unsigned long ActiveFrame;
  /* 0x0fb4 */ unsigned long FlsData;
  /* 0x0fb8 */ unsigned long PreferredLanguages;
  /* 0x0fbc */ unsigned long UserPrefLanguages;
  /* 0x0fc0 */ unsigned long MergedPrefLanguages;
  /* 0x0fc4 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x0fc8 */ volatile unsigned short CrossTebFlags;
    /* 0x0fc8 */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x0fca */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x0fca */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x0fca */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x0fca */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x0fca */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x0fca */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x0fca */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x0fca */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x0fca */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x0fca */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x0fca */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x0fca */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x0fca */ unsigned short SessionAware : 1; /* bit position: 11 */
      /* 0x0fca */ unsigned short LoadOwner : 1; /* bit position: 12 */
      /* 0x0fca */ unsigned short LoaderWorker : 1; /* bit position: 13 */
      /* 0x0fca */ unsigned short SkipLoaderInit : 1; /* bit position: 14 */
      /* 0x0fca */ unsigned short SkipFileAPIBrokering : 1; /* bit position: 15 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x0fcc */ unsigned long TxnScopeEnterCallback;
  /* 0x0fd0 */ unsigned long TxnScopeExitCallback;
  /* 0x0fd4 */ unsigned long TxnScopeContext;
  /* 0x0fd8 */ unsigned long LockCount;
  /* 0x0fdc */ long WowTebOffset;
  /* 0x0fe0 */ unsigned long ResourceRetValue;
  /* 0x0fe4 */ unsigned long ReservedForWdf;
  /* 0x0fe8 */ unsigned __int64 ReservedForCrt;
  /* 0x0ff0 */ struct _GUID EffectiveContainerId;
  /* 0x1000 */ unsigned __int64 LastSleepCounter;
  /* 0x1008 */ unsigned long SpinCallCount;
  /* 0x100c */ long Padding_821;
  /* 0x1010 */ unsigned __int64 ExtendedFeatureDisableMask;
} TEB32, *PTEB32; /* size: 0x1018 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

class wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_b791f461fdcdf6803f8b1ec4cfa018be>;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> const >;

struct Windows::Storage::IStorageLibrary
{
}; /* size: 0x0008 */

struct FRAME_RemoteInvoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ struct _GUID* piid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ char __pad4[4];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* puArgErr;
  /* 0x0048 */ unsigned int cVarRef;
  /* 0x004c */ char __pad9[4];
  /* 0x0050 */ unsigned int* rgVarRefIdx;
  /* 0x0058 */ struct tagVARIANT* rgVarRef;
}; /* size: 0x0060 */

typedef struct _CRYPT_CONTEXTS
{
  /* 0x0000 */ unsigned long cContexts;
  /* 0x0004 */ long Padding_822;
  /* 0x0008 */ wchar_t** rgpszContexts;
} CRYPT_CONTEXTS, *PCRYPT_CONTEXTS; /* size: 0x0010 */

class wil::details::<lambda_d19d7f1b8bdf8a926ead7d5f6c722f80>
{
}; /* size: 0x0001 */

struct XWinRT::TXPOSITION
{
}; /* size: 0x0001 */

struct tagRPC_CALL_ATTRIBUTES_V2_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_823;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_824;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ unsigned long IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_825[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

class wil::manually_managed_shutdown_aware_object<wil::details::EnabledStateManager>
{
  /* 0x0000 */ unsigned char m_raw[112];
}; /* size: 0x0070 */

class wil::shutdown_aware_object<wil::details::EnabledStateManager>
{
  /* 0x0000 */ class wil::manually_managed_shutdown_aware_object<wil::details::EnabledStateManager> m_object;
}; /* size: 0x0070 */

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0010 */ void* pResolvehCryptProvFunc /* function */;
  /* 0x0018 */ void* pVoidResolveFunc;
  /* 0x0020 */ void* pDecryptPrivateKeyFunc /* function */;
  /* 0x0028 */ void* pVoidDecryptFunc;
} CRYPT_PKCS8_IMPORT_PARAMS, *PCRYPT_PKCS8_IMPORT_PARAMS; /* size: 0x0030 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,unsigned int> *>
{
}; /* size: 0x0001 */

class wil::details_abi::ProcessLocalStorage<wil::details_abi::ProcessLocalData>
{
  /* 0x0000 */ const char* m_staticNameWithVersion;
  /* 0x0008 */ class wil::details_abi::ProcessLocalStorageData<wil::details_abi::ProcessLocalData>* m_data;
}; /* size: 0x0010 */

typedef struct __vc_attributes::propputrefAttribute
{
} _vc_attributes::propputrefAttribute, *P_vc_attributes::propputrefAttribute; /* size: 0x0001 */

class CallFrame
{
  /* 0x0000 */ long Padding_826[4];
  /* 0x0010 */ struct MD_METHOD* m_pmd;
  /* 0x0018 */ void* m_pvArgs;
  /* 0x0020 */ int m_fIsCopy;
  /* 0x0024 */ int m_fIsUnmarshal;
  /* 0x0028 */ __int64 m_hrReturnValue;
  /* 0x0030 */ void* m_pvMemCur;
  /* 0x0038 */ void* m_pvArgsSrc;
  /* 0x0040 */ class Interceptor* m_pInterceptor;
  /* 0x0048 */ int m_fPropogatingOutParam;
  /* 0x004c */ int m_fWorkingOnInParam;
  /* 0x0050 */ int m_fWorkingOnOutParam;
  /* 0x0054 */ long Padding_827;
  /* 0x0058 */ class CallFrame* m_pAllocatorFrame;
  /* 0x0060 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0068 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0070 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0078 */ unsigned char* m_StackTop;
  /* 0x0080 */ unsigned char* m_Memory;
  /* 0x0088 */ unsigned __int64 m_MaxCount;
  /* 0x0090 */ unsigned __int64 m_Offset;
  /* 0x0098 */ unsigned __int64 m_ActualCount;
  /* 0x00a0 */ struct ARRAY_INFO* m_pArrayInfo;
  /* 0x00a8 */ long m_refs;
  /* 0x00ac */ unsigned char m_pvMem[256];
  /* 0x01ac */ int m_fCanUseBuffer;
  /* 0x01b0 */ struct tagBLOB m_blobBuffer;
  /* 0x01c0 */ int m_fWeOwnBlobBuffer;
}; /* size: 0x01c8 */

typedef struct _STARTUPINFOA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_828;
  /* 0x0008 */ char* lpReserved;
  /* 0x0010 */ char* lpDesktop;
  /* 0x0018 */ char* lpTitle;
  /* 0x0020 */ unsigned long dwX;
  /* 0x0024 */ unsigned long dwY;
  /* 0x0028 */ unsigned long dwXSize;
  /* 0x002c */ unsigned long dwYSize;
  /* 0x0030 */ unsigned long dwXCountChars;
  /* 0x0034 */ unsigned long dwYCountChars;
  /* 0x0038 */ unsigned long dwFillAttribute;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned short wShowWindow;
  /* 0x0042 */ unsigned short cbReserved2;
  /* 0x0044 */ long Padding_829;
  /* 0x0048 */ unsigned char* lpReserved2;
  /* 0x0050 */ void* hStdInput;
  /* 0x0058 */ void* hStdOutput;
  /* 0x0060 */ void* hStdError;
} STARTUPINFOA, *PSTARTUPINFOA; /* size: 0x0068 */

typedef struct _STARTUPINFOEXA
{
  /* 0x0000 */ struct _STARTUPINFOA StartupInfo;
  /* 0x0068 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXA, *PSTARTUPINFOEXA; /* size: 0x0070 */

struct tagLASTINPUTINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwTime;
}; /* size: 0x0008 */

struct INTERPRETER_OPT_FLAGS2
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasNewCorrDesc : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientCorrCheck : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ServerCorrCheck : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasNotify : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasNotify2 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasComplexReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasConformanceRange : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasBigByValueParam : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct NDR_PROC_HEADER_EXTS
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
}; /* size: 0x0008 */

typedef struct _ENCLAVE_INIT_INFO_VBS_BASIC
{
  /* 0x0000 */ unsigned char FamilyId[16];
  /* 0x0010 */ unsigned char ImageId[16];
  /* 0x0020 */ unsigned __int64 EnclaveSize;
  /* 0x0028 */ unsigned long EnclaveSvn;
  /* 0x002c */ unsigned long Reserved;
  union
  {
    /* 0x0030 */ void* SignatureInfoHandle;
    /* 0x0030 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} ENCLAVE_INIT_INFO_VBS_BASIC, *PENCLAVE_INIT_INFO_VBS_BASIC; /* size: 0x0038 */

struct ICallFrameEvents
{
}; /* size: 0x0008 */

typedef struct _QUOTA_LIMITS
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> const >;

typedef struct __vc_attributes::helper_attributes::repeatableAttribute
{
} _vc_attributes::helper_attributes::repeatableAttribute, *P_vc_attributes::helper_attributes::repeatableAttribute; /* size: 0x0001 */

class wil::ThreadErrorContext
{
  /* 0x0000 */ struct wil::details_abi::ThreadLocalData* m_data;
  /* 0x0008 */ unsigned long m_sequenceIdStart;
  /* 0x000c */ unsigned long m_sequenceIdLast;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::is_pointer<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0001 */

typedef struct _tlgDataDescInit<_tlgIndexSequence<23,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22> >
{
} tlgDataDescInit<_tlgIndexSequence<23,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22> >, *PtlgDataDescInit<_tlgIndexSequence<23,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22> >; /* size: 0x0001 */

struct POWER_ACTION_POLICY
{
  /* 0x0000 */ enum POWER_ACTION Action;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long EventCode;
}; /* size: 0x000c */

struct SYSTEM_POWER_LEVEL
{
  /* 0x0000 */ unsigned char Enable;
  /* 0x0001 */ unsigned char Spare[3];
  /* 0x0004 */ unsigned long BatteryLevel;
  /* 0x0008 */ struct POWER_ACTION_POLICY PowerPolicy;
  /* 0x0014 */ enum _SYSTEM_POWER_STATE MinSystemState;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::MakeAllocator<CDragOperation>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER DueTime;
  /* 0x0008 */ void* TimerApcRoutine /* function */;
  /* 0x0010 */ void* TimerContext;
  /* 0x0018 */ struct _COUNTED_REASON_CONTEXT* WakeContext;
  /* 0x0020 */ unsigned long Period;
  /* 0x0024 */ unsigned long TolerableDelay;
  /* 0x0028 */ unsigned char* PreviousState;
} TIMER_SET_COALESCABLE_TIMER_INFO, *PTIMER_SET_COALESCABLE_TIMER_INFO; /* size: 0x0030 */

struct HMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagRemBRUSH
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

class AdditionHelper<unsigned long,unsigned long,1>
{
}; /* size: 0x0001 */

struct METAINFO
{
  /* 0x0000 */ struct METADC headDc;
  /* 0x0020 */ int xwo;
  /* 0x0024 */ int ywo;
  /* 0x0028 */ int xwe;
  /* 0x002c */ int ywe;
  /* 0x0030 */ int xro;
  /* 0x0034 */ int yro;
}; /* size: 0x0038 */

struct tagCREATESTRUCTA
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x0010 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndParent;
  /* 0x0020 */ int cy;
  /* 0x0024 */ int cx;
  /* 0x0028 */ int y;
  /* 0x002c */ int x;
  /* 0x0030 */ long style;
  /* 0x0034 */ long Padding_830;
  /* 0x0038 */ const char* lpszName;
  /* 0x0040 */ const char* lpszClass;
  /* 0x0048 */ unsigned long dwExStyle;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

struct tagLOGPALETTE
{
  /* 0x0000 */ unsigned short palVersion;
  /* 0x0002 */ unsigned short palNumEntries;
  /* 0x0004 */ struct tagPALETTEENTRY palPalEntry[1];
}; /* size: 0x0008 */

struct Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::Search::SortEntry>
{
}; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ union _LARGE_INTEGER VirtualClock;
} TRANSACTIONMANAGER_BASIC_INFORMATION, *PTRANSACTIONMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _NCRYPT_KEY_ATTEST_PADDING_INFO
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ long Padding_831;
  /* 0x0008 */ unsigned char* pbKeyBlob;
  /* 0x0010 */ unsigned long cbKeyBlob;
  /* 0x0014 */ long Padding_832;
  /* 0x0018 */ unsigned char* pbKeyAuth;
  /* 0x0020 */ unsigned long cbKeyAuth;
  /* 0x0024 */ long __PADDING__[1];
} NCRYPT_KEY_ATTEST_PADDING_INFO, *PNCRYPT_KEY_ATTEST_PADDING_INFO; /* size: 0x0028 */

class CReadOnlyStorage
{
}; /* size: 0x0020 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::ChunkView
{
  /* 0x0000 */ long Padding_833[10];
  /* 0x0028 */ class Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Chunk> _spChunk;
  /* 0x0030 */ struct Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *> _fnEquals;
}; /* size: 0x0038 */

class MAP<XSLOCK,MAP_KEY_GUID,NdrTypeInfo *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x0018 */ int m_fDone;
  /* 0x001c */ long Padding_834;
  /* 0x0020 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0028 */ struct NdrTypeInfo** m_pvalue;
  /* 0x0030 */ class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x0038 */

class wistd::__function::__base<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>
{
}; /* size: 0x0008 */

typedef struct _CRYPT_KEY_PROV_PARAM
{
  /* 0x0000 */ unsigned long dwParam;
  /* 0x0004 */ long Padding_835;
  /* 0x0008 */ unsigned char* pbData;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned long dwFlags;
} CRYPT_KEY_PROV_PARAM, *PCRYPT_KEY_PROV_PARAM; /* size: 0x0018 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,Windows::Foundation::Collections::IVector<HSTRING__ *> *> *>
{
}; /* size: 0x0001 */

typedef struct _TOKEN_DEFAULT_DACL
{
  /* 0x0000 */ struct _ACL* DefaultDacl;
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL; /* size: 0x0008 */

typedef struct _TOKEN_APPCONTAINER_INFORMATION
{
  /* 0x0000 */ void* TokenAppContainer;
} TOKEN_APPCONTAINER_INFORMATION, *PTOKEN_APPCONTAINER_INFORMATION; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFile *,Windows::Storage::IStorageFile *>,1>
{
}; /* size: 0x0008 */

struct tagUPDATELAYEREDWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_836;
  /* 0x0008 */ struct HDC__* hdcDst;
  /* 0x0010 */ const struct tagPOINT* pptDst;
  /* 0x0018 */ const struct tagSIZE* psize;
  /* 0x0020 */ struct HDC__* hdcSrc;
  /* 0x0028 */ const struct tagPOINT* pptSrc;
  /* 0x0030 */ unsigned long crKey;
  /* 0x0034 */ long Padding_837;
  /* 0x0038 */ const struct _BLENDFUNCTION* pblend;
  /* 0x0040 */ unsigned long dwFlags;
  /* 0x0044 */ long Padding_838;
  /* 0x0048 */ const struct tagRECT* prcDirty;
}; /* size: 0x0050 */

typedef struct _CERT_REVOCATION_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwIndex;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReason;
  /* 0x0010 */ int fHasFreshnessTime;
  /* 0x0014 */ unsigned long dwFreshnessTime;
} CERT_REVOCATION_STATUS, *PCERT_REVOCATION_STATUS; /* size: 0x0018 */

struct DESCRIPTOR
{
  /* 0x0000 */ unsigned char bWidth;
  /* 0x0001 */ unsigned char bHeight;
  /* 0x0002 */ unsigned char colorCount;
  /* 0x0003 */ unsigned char bReserved;
  /* 0x0004 */ unsigned short xHotSpot;
  /* 0x0006 */ unsigned short yHotSpot;
  /* 0x0008 */ unsigned long BytesInRes;
  /* 0x000c */ unsigned long OffsetToBits;
}; /* size: 0x0010 */

class SafeInt<unsigned long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >
{
  /* 0x0000 */ unsigned long m_int;
}; /* size: 0x0004 */

typedef struct _FLAGGED_WORD_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned short asData[1];
  /* 0x000a */ char __PADDING__[2];
} FLAGGED_WORD_BLOB, *PFLAGGED_WORD_BLOB; /* size: 0x000c */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDataObjectEx> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDataObjectEx>* ptr_;
}; /* size: 0x0008 */

struct wistd::unique_ptr<_TOKEN_DEFAULT_DACL,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;

class GetCastMethod<unsigned long,unsigned long>
{
}; /* size: 0x0001 */

class CLimitedWritableStorage::SetStateBits::__l2::<lambda_239dc36ff89ef9343f5be4bc17d5a8ef>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ unsigned long& grfStateBits;
  /* 0x0010 */ unsigned long& grfMask;
}; /* size: 0x0018 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE
{
  /* 0x0000 */ unsigned __int64 Version;
  /* 0x0008 */ struct _UNICODE_STRING Name;
} TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE, *PTOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE; /* size: 0x0018 */

struct Windows::ApplicationModel::Background::IBackgroundTaskYieldable
{
}; /* size: 0x0008 */

typedef struct _STREAM_LAYOUT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long NextStreamOffset;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ExtentInformationOffset;
  /* 0x0010 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0018 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0020 */ unsigned long StreamInformationOffset;
  /* 0x0024 */ unsigned long AttributeTypeCode;
  /* 0x0028 */ unsigned long AttributeFlags;
  /* 0x002c */ unsigned long StreamIdentifierLength;
  /* 0x0030 */ wchar_t StreamIdentifier[1];
  /* 0x0032 */ char __PADDING__[6];
} STREAM_LAYOUT_ENTRY, *PSTREAM_LAYOUT_ENTRY; /* size: 0x0038 */

class CWrapperBase<IEnumFORMATETC>::{dtor}::__l2::<lambda_1ff6a892073f82b990ab0d153c3cb3e5>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

typedef struct _CERT_OR_CRL_BLOB
{
  /* 0x0000 */ unsigned long dwChoice;
  /* 0x0004 */ unsigned long cbEncoded;
  /* 0x0008 */ unsigned char* pbEncoded;
} CERT_OR_CRL_BLOB, *PCERT_OR_CRL_BLOB; /* size: 0x0010 */

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Clone::__l2::<lambda_32dfadbef8f2a61c0d809fa552c11f81>
{
  /* 0x0000 */ class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumFORMATETC>& spInner;
}; /* size: 0x0010 */

typedef struct _RTL_BALANCED_LINKS
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS* Parent;
  /* 0x0008 */ struct _RTL_BALANCED_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_BALANCED_LINKS* RightChild;
  /* 0x0018 */ char Balance;
  /* 0x0019 */ unsigned char Reserved[3];
  /* 0x001c */ long __PADDING__[1];
} RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS; /* size: 0x0020 */

struct wistd::unique_ptr<unsigned short,wil::function_deleter<void * (__cdecl*)(void *),&LocalFree> >::__nat;

class CTrackingFileMoniker
{
  /* 0x0000 */ long Padding_839[2];
  /* 0x0008 */ class CFileMoniker* _pCFM;
}; /* size: 0x0010 */

class CBrokeredClipDataObject::EnumFormatEtc::__l8::<lambda_99540f1d7c5160d07270185966a2dced>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ unsigned long& dwDirection;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IEnumFORMATETC>& spInner;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0001 */

typedef struct _FS_BPIO_INPUT
{
  /* 0x0000 */ enum _FS_BPIO_OPERATIONS Operation;
  /* 0x0004 */ enum _FS_BPIO_INFLAGS InFlags;
  /* 0x0008 */ unsigned __int64 Reserved1;
  /* 0x0010 */ unsigned __int64 Reserved2;
} FS_BPIO_INPUT, *PFS_BPIO_INPUT; /* size: 0x0018 */

struct Windows::Foundation::Collections::is_pointer<__int64>
{
}; /* size: 0x0001 */

class CReadOnlyStream::Clone::__l2::<lambda_baecf777eea7d88e008ba381e7d7d0c9>
{
  /* 0x0000 */ class CReadOnlyStream* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream>& spNewInner;
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::AccessCache::AccessListEntry>
{
}; /* size: 0x0008 */

class CLimitedStreamBase::Seek::__l2::<lambda_b2e3b810243455f1068e53fb5cb0f92b>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ union _LARGE_INTEGER& dlibMove;
  /* 0x0010 */ unsigned long& dwOrigin;
  /* 0x0018 */ union _ULARGE_INTEGER*& plibNewPosition;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::supports_cleanup<double>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::IWwwFormUrlDecoderEntry *,1>
{
}; /* size: 0x0008 */

typedef struct _SERVERSILO_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long ServiceSessionId;
  /* 0x0004 */ enum _SERVERSILO_STATE State;
  /* 0x0008 */ long ExitStatus;
  /* 0x000c */ unsigned char IsDownlevelContainer;
  /* 0x000d */ char Padding_840[3];
  /* 0x0010 */ void* ApiSetSchema;
  /* 0x0018 */ void* HostApiSetSchema;
} SERVERSILO_BASIC_INFORMATION, *PSERVERSILO_BASIC_INFORMATION; /* size: 0x0020 */

typedef struct _SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwReserved;
  /* 0x0008 */ wchar_t* pwszServerName;
  /* 0x0010 */ char* rgpszHpkpValue[2];
} SSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA, *PSSL_HPKP_HEADER_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0020 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<float,1>
{
}; /* size: 0x0008 */

struct tagEMRSELECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
}; /* size: 0x000c */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> const >;

struct wil::details::close_invoke_helper<1,void * (__cdecl*)(void *),&LocalFree,void *>
{
}; /* size: 0x0001 */

typedef struct _COUNTER_READING
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Index;
  /* 0x0008 */ unsigned __int64 Start;
  /* 0x0010 */ unsigned __int64 Total;
} COUNTER_READING, *PCOUNTER_READING; /* size: 0x0018 */

class wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_8db0ce862824541f40dfb767113f1e28>
{
  /* 0x0000 */ unsigned __int64& read;
  /* 0x0008 */ unsigned __int64& valuesWritten;
  /* 0x0010 */ class wil::details_abi::RawUsageIndex& persistedUsage;
}; /* size: 0x0018 */

class wistd::__function::__func<<lambda_8db0ce862824541f40dfb767113f1e28>,bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>
{
  /* 0x0000 */ long Padding_841[2];
  /* 0x0008 */ class wil::details_abi::RecordWnfUsageIndex::__l4::<lambda_8db0ce862824541f40dfb767113f1e28> __f_;
}; /* size: 0x0020 */

struct IHttpSecurity
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *> >
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::nonextensibleAttribute
{
} _vc_attributes::nonextensibleAttribute, *P_vc_attributes::nonextensibleAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::max_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::max_isAttribute, *P_vc_attributes::max_isAttribute; /* size: 0x0008 */

struct Windows::Foundation::Collections::is_pointer<Windows::Foundation::Rect>
{
}; /* size: 0x0001 */

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char ShareDisposition;
  /* 0x0002 */ unsigned short Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Generic;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Port;
      struct
      {
        /* 0x0004 */ unsigned long Level;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned __int64 Affinity;
      } /* size: 0x0010 */ Interrupt;
      struct
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Reserved;
            /* 0x0006 */ unsigned short MessageCount;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Raw;
          struct
          {
            /* 0x0004 */ unsigned long Level;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Translated;
        }; /* size: 0x0010 */
      } /* size: 0x0010 */ MessageInterrupt;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Memory;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long Port;
        /* 0x000c */ unsigned long Reserved1;
      } /* size: 0x000c */ Dma;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long RequestLine;
        /* 0x000c */ unsigned char TransferWidth;
        /* 0x000d */ unsigned char Reserved1;
        /* 0x000e */ unsigned char Reserved2;
        /* 0x000f */ unsigned char Reserved3;
      } /* size: 0x000c */ DmaV3;
      struct
      {
        /* 0x0004 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0004 */ unsigned long Start;
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Reserved;
      } /* size: 0x000c */ BusNumber;
      struct
      {
        /* 0x0004 */ unsigned long DataSize;
        /* 0x0008 */ unsigned long Reserved1;
        /* 0x000c */ unsigned long Reserved2;
      } /* size: 0x000c */ DeviceSpecificData;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length40;
      } /* size: 0x000c */ Memory40;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length48;
      } /* size: 0x000c */ Memory48;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length64;
      } /* size: 0x000c */ Memory64;
      struct
      {
        /* 0x0004 */ unsigned char Class;
        /* 0x0005 */ unsigned char Type;
        /* 0x0006 */ unsigned char Reserved1;
        /* 0x0007 */ unsigned char Reserved2;
        /* 0x0008 */ unsigned long IdLowPart;
        /* 0x000c */ unsigned long IdHighPart;
      } /* size: 0x000c */ Connection;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _CM_PARTIAL_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST; /* size: 0x001c */

struct IEncodingFilterFactory
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::library_blockAttribute
{
} _vc_attributes::library_blockAttribute, *P_vc_attributes::library_blockAttribute; /* size: 0x0001 */

struct JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_2
{
  /* 0x0000 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0008 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0010 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  union
  {
    /* 0x0018 */ unsigned __int64 JobHighMemoryLimit;
    /* 0x0018 */ unsigned __int64 JobMemoryLimit;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0020 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
    /* 0x0020 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE CpuRateControlTolerance;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0024 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
    /* 0x0024 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL CpuRateControlToleranceInterval;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long LimitFlags;
  /* 0x002c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE IoRateControlTolerance;
  /* 0x0030 */ unsigned __int64 JobLowMemoryLimit;
  /* 0x0038 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL IoRateControlToleranceInterval;
  /* 0x003c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE NetRateControlTolerance;
  /* 0x0040 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL NetRateControlToleranceInterval;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

typedef struct __vc_attributes::atl::synchronizeAttribute
{
} _vc_attributes::atl::synchronizeAttribute, *P_vc_attributes::atl::synchronizeAttribute; /* size: 0x0001 */

class CoInitializeIfNecessaryRAII
{
  /* 0x0000 */ BOOL _isCoInitialized;
}; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Iterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>,wil::process_heap_deleter>::__nat;

struct Windows::Foundation::IAsyncOperationCompletedHandler<_GUID>
{
}; /* size: 0x0008 */

class wil::details::<lambda_1ebcff27000e5705e9c69ccc51294205>
{
}; /* size: 0x0001 */

class wistd::__compressed_pair<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *,wil::process_heap_deleter>
{
}; /* size: 0x0008 */

class wil::details::<lambda_04ef605d2e5b33bd13b080eb8696f49e>
{
}; /* size: 0x0001 */

typedef struct _PS_SYSTEM_DLL_INIT_BLOCK
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_842;
  /* 0x0008 */ unsigned __int64 SystemDllWowRelocation;
  /* 0x0010 */ unsigned __int64 SystemDllNativeRelocation;
  /* 0x0018 */ unsigned __int64 Wow64SharedInformation[16];
  /* 0x0098 */ unsigned long RngData;
  union
  {
    /* 0x009c */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x009c */ unsigned long CfgOverride : 1; /* bit position: 0 */
      /* 0x009c */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x00a0 */ struct _PS_MITIGATION_OPTIONS_MAP MitigationOptionsMap;
  /* 0x00b8 */ unsigned __int64 CfgBitMap;
  /* 0x00c0 */ unsigned __int64 CfgBitMapSize;
  /* 0x00c8 */ unsigned __int64 Wow64CfgBitMap;
  /* 0x00d0 */ unsigned __int64 Wow64CfgBitMapSize;
  /* 0x00d8 */ struct _PS_MITIGATION_AUDIT_OPTIONS_MAP MitigationAuditOptionsMap;
} PS_SYSTEM_DLL_INIT_BLOCK, *PPS_SYSTEM_DLL_INIT_BLOCK; /* size: 0x00f0 */

struct Windows::Storage::IStorageFile
{
}; /* size: 0x0008 */

typedef struct _DSSSEED
{
  /* 0x0000 */ unsigned long counter;
  /* 0x0004 */ unsigned char seed[20];
} DSSSEED, *PDSSSEED; /* size: 0x0018 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IEnumGUID,0,0>
{
}; /* size: 0x0001 */

class ComTrace::LogTokenInfoImp::__l2::<lambda_ffa983ffbf68526ea3a3e363083aba95>
{
  /* 0x0000 */ unsigned long& flags;
  /* 0x0008 */ void*& token;
  /* 0x0010 */ class ComTrace* const __this;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::is_pointer<Windows::UI::WindowId>
{
}; /* size: 0x0001 */

typedef struct _PS_CREATE_INFO
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum PS_CREATE_STATE State;
  /* 0x000c */ long Padding_843;
  union
  {
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long InitFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char WriteOutputOnExit : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char DetectManifest : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char IFEOSkipRedirects : 1; /* bit position: 2 */
            /* 0x0010 */ unsigned char IFEODoNotPropagateKeyState : 1; /* bit position: 3 */
            /* 0x0010 */ unsigned char SpareBits1 : 4; /* bit position: 4 */
          }; /* bitfield */
          /* 0x0011 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x0012 */ unsigned short ProhibitedImageCharacteristics : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0014 */ unsigned long AdditionalFileAccess;
    } /* size: 0x0008 */ InitState;
    struct
    {
      /* 0x0010 */ void* FileHandle;
    } /* size: 0x0008 */ FailSection;
    struct
    {
      /* 0x0010 */ unsigned short DllCharacteristics;
    } /* size: 0x0002 */ ExeFormat;
    struct
    {
      /* 0x0010 */ void* IFEOKey;
    } /* size: 0x0008 */ ExeName;
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long OutputFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char ProtectedProcess : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char AddressSpaceOverride : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char DevOverrideEnabled : 1; /* bit position: 2 */
            /* 0x0010 */ unsigned char ManifestDetected : 1; /* bit position: 3 */
            /* 0x0010 */ unsigned char ProtectedProcessLight : 1; /* bit position: 4 */
            /* 0x0010 */ unsigned char SpareBits1 : 3; /* bit position: 5 */
          }; /* bitfield */
          /* 0x0011 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x0012 */ unsigned short SpareBits3 : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0004 */ long Padding_844;
      /* 0x0018 */ void* FileHandle;
      /* 0x0020 */ void* SectionHandle;
      /* 0x0028 */ unsigned __int64 UserProcessParametersNative;
      /* 0x0030 */ unsigned long UserProcessParametersWow64;
      /* 0x0034 */ unsigned long CurrentParameterFlags;
      /* 0x0038 */ unsigned __int64 PebAddressNative;
      /* 0x0040 */ unsigned long PebAddressWow64;
      /* 0x0034 */ long Padding_845;
      /* 0x0048 */ unsigned __int64 ManifestAddress;
      /* 0x0050 */ unsigned long ManifestSize;
      /* 0x0054 */ long __PADDING__[1];
    } /* size: 0x0048 */ SuccessState;
  }; /* size: 0x0048 */
} PS_CREATE_INFO, *PPS_CREATE_INFO; /* size: 0x0058 */

typedef struct _PROCESS_POWER_THROTTLING_STATE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long ControlMask;
  /* 0x0008 */ unsigned long StateMask;
} PROCESS_POWER_THROTTLING_STATE, *PPROCESS_POWER_THROTTLING_STATE; /* size: 0x000c */

struct Windows::Foundation::Collections::supports_cleanup<Windows::UI::WindowId>
{
}; /* size: 0x0001 */

struct ITypeLibRegistrationReader
{
}; /* size: 0x0008 */

typedef struct _MENU_EVENT_RECORD
{
  /* 0x0000 */ unsigned int dwCommandId;
} MENU_EVENT_RECORD, *PMENU_EVENT_RECORD; /* size: 0x0004 */

class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::AcquireRead>
{
  /* 0x0000 */ class XWinRT::ComLock* _pLock;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > > > >;

class Windows::ApplicationModel::DataTransfer::DataPackage;

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>;

struct Windows::Foundation::IAsyncOperationCompletedHandler<IInspectable *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::DataTransfer::DataPackage *,IInspectable *>
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wistd::default_delete<_GUID [0]>,1,1>
{
}; /* size: 0x0001 */

typedef struct _SE_PACKAGE_CAPABILITY_INFO
{
  /* 0x0000 */ unsigned long Remaining;
  /* 0x0004 */ unsigned long PackageGrantedAccess;
  /* 0x0008 */ unsigned long CapabilityGrantedAccess;
  /* 0x000c */ unsigned long UserGroupsRemaining;
  /* 0x0010 */ unsigned long AllAppPackagesSkippedAccess;
  /* 0x0014 */ unsigned char PackagesPresent;
  /* 0x0015 */ unsigned char PackageMatch;
  /* 0x0016 */ unsigned char CapabilityMatch;
  /* 0x0017 */ unsigned char LogPermissiveFailure;
  /* 0x0018 */ unsigned char AllAppPackagesSkipped;
  /* 0x0019 */ char __PADDING__[3];
} SE_PACKAGE_CAPABILITY_INFO, *PSE_PACKAGE_CAPABILITY_INFO; /* size: 0x001c */

class MultiplicationMethod<unsigned long,unsigned __int64>
{
}; /* size: 0x0001 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::DataPackage *,Windows::ApplicationModel::DataTransfer::IDataPackage *>,IInspectable *>
{
}; /* size: 0x0008 */

typedef struct _RTL_TRACE_BLOCK
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long Padding_846;
  /* 0x0010 */ unsigned __int64 UserCount;
  /* 0x0018 */ unsigned __int64 UserSize;
  /* 0x0020 */ void* UserContext;
  /* 0x0028 */ struct _RTL_TRACE_BLOCK* Next;
  /* 0x0030 */ void** Trace;
} RTL_TRACE_BLOCK, *PRTL_TRACE_BLOCK; /* size: 0x0038 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<_GUID [0]> >;

class wil::details::EnabledStateManager::EnsureSubscribedToFeatureConfigurationChangesImpl::__l5::<lambda_fee8cea507d2413a58be13acfb66740a>
{
}; /* size: 0x0001 */

typedef struct _CSV_QUERY_MDS_PATH
{
  /* 0x0000 */ unsigned long MdsNodeId;
  /* 0x0004 */ unsigned long DsNodeId;
  /* 0x0008 */ unsigned long PathLength;
  /* 0x000c */ wchar_t Path[1];
  /* 0x000e */ char __PADDING__[2];
} CSV_QUERY_MDS_PATH, *PCSV_QUERY_MDS_PATH; /* size: 0x0010 */

struct Windows::Foundation::IReferenceArray_impl<int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IMap<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

typedef struct _CERT_CRL_CONTEXT_PAIR
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0008 */ const struct _CRL_CONTEXT* pCrlContext;
} CERT_CRL_CONTEXT_PAIR, *PCERT_CRL_CONTEXT_PAIR; /* size: 0x0010 */

typedef struct _CERT_POLICY_MAPPINGS_INFO
{
  /* 0x0000 */ unsigned long cPolicyMapping;
  /* 0x0004 */ long Padding_847;
  /* 0x0008 */ struct _CERT_POLICY_MAPPING* rgPolicyMapping;
} CERT_POLICY_MAPPINGS_INFO, *PCERT_POLICY_MAPPINGS_INFO; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct wistd::unique_ptr<_GUID [0],wistd::default_delete<_GUID [0]> >::_CheckArrayPointerConversion<_GUID *>
{
}; /* size: 0x0001 */

class GetCastMethod<unsigned long,unsigned int>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IMap_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationProgressHandler_impl<unsigned int,unsigned int>
{
}; /* size: 0x0008 */

struct IActivationPropertiesOut
{
}; /* size: 0x0008 */

struct DVTDINFO
{
  /* 0x0000 */ unsigned int cbConvertSize;
  /* 0x0004 */ unsigned int cchDrvName;
  /* 0x0008 */ unsigned int cchDevName;
  /* 0x000c */ unsigned int cchPortName;
}; /* size: 0x0010 */

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2
{
  /* 0x0000 */ unsigned long LimitFlags;
  /* 0x0004 */ unsigned long ViolationLimitFlags;
  /* 0x0008 */ unsigned __int64 IoReadBytes;
  /* 0x0010 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0018 */ unsigned __int64 IoWriteBytes;
  /* 0x0020 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0028 */ union _LARGE_INTEGER PerJobUserTime;
  /* 0x0030 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0038 */ unsigned __int64 JobMemory;
  /* 0x0040 */ unsigned __int64 JobLowMemoryLimit;
  /* 0x0048 */ unsigned __int64 JobHighMemoryLimit;
  /* 0x0050 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  /* 0x0054 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
} JOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2, *PJOBOBJECT_LIMIT_VIOLATION_INFORMATION_V2; /* size: 0x0058 */

class ImpersonationStateChecker
{
  /* 0x0000 */ BOOL _wasImpersonating;
}; /* size: 0x0001 */

class Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs;

typedef struct _ICONINFO
{
  /* 0x0000 */ int fIcon;
  /* 0x0004 */ unsigned long xHotspot;
  /* 0x0008 */ unsigned long yHotspot;
  /* 0x000c */ long Padding_848;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
} ICONINFO, *PICONINFO; /* size: 0x0020 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ShareCompletedEventArgs *,Windows::ApplicationModel::DataTransfer::IShareCompletedEventArgs *>;

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT
{
  /* 0x0000 */ struct _GUID Id;
  /* 0x0010 */ enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
  /* 0x0014 */ long Padding_849;
  /* 0x0018 */ unsigned __int64 MaxVersionTested;
} COMPATIBILITY_CONTEXT_ELEMENT, *PCOMPATIBILITY_CONTEXT_ELEMENT; /* size: 0x0020 */

typedef struct _SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER KernelTime;
  /* 0x0008 */ union _LARGE_INTEGER UserTime;
  /* 0x0010 */ union _LARGE_INTEGER CreateTime;
  /* 0x0018 */ unsigned long WaitTime;
  /* 0x001c */ long Padding_850;
  /* 0x0020 */ void* StartAddress;
  /* 0x0028 */ struct _CLIENT_ID ClientId;
  /* 0x0038 */ long Priority;
  /* 0x003c */ long BasePriority;
  /* 0x0040 */ unsigned long ContextSwitches;
  /* 0x0044 */ unsigned long ThreadState;
  /* 0x0048 */ unsigned long WaitReason;
  /* 0x004c */ long __PADDING__[1];
} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION; /* size: 0x0050 */

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
  /* 0x0050 */ void* StackBase;
  /* 0x0058 */ void* StackLimit;
  /* 0x0060 */ void* Win32StartAddress;
  /* 0x0068 */ void* TebBase;
  /* 0x0070 */ unsigned __int64 Reserved2;
  /* 0x0078 */ unsigned __int64 Reserved3;
  /* 0x0080 */ unsigned __int64 Reserved4;
} SYSTEM_EXTENDED_THREAD_INFORMATION, *PSYSTEM_EXTENDED_THREAD_INFORMATION; /* size: 0x0088 */

struct Windows::Foundation::IReferenceArray<__int64>
{
}; /* size: 0x0008 */

struct Windows::ApplicationModel::DataTransfer::IShareCompletedEventArgs
{
}; /* size: 0x0008 */

class CTCoAllocPolicy
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::Internal::SimpleKeyValuePair<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,0>::permission
{
}; /* size: 0x0001 */

typedef struct _KEY_WOW64_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long UserFlags;
} KEY_WOW64_FLAGS_INFORMATION, *PKEY_WOW64_FLAGS_INFORMATION; /* size: 0x0004 */

struct Windows::Foundation::Collections::Internal::HashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,0,0,0>
{
  union
  {
    /* 0x0000 */ const BOOL hasObservable;
    /* 0x0000 */ const BOOL isAgile;
  }; /* size: 0x0001 */
}; /* size: 0x0001 */

typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long AllAttributes;
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long RvaBased : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long ReservedAttributes : 31; /* bit position: 1 */
      }; /* bitfield */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Attributes;
  /* 0x0004 */ unsigned long DllNameRVA;
  /* 0x0008 */ unsigned long ModuleHandleRVA;
  /* 0x000c */ unsigned long ImportAddressTableRVA;
  /* 0x0010 */ unsigned long ImportNameTableRVA;
  /* 0x0014 */ unsigned long BoundImportAddressTableRVA;
  /* 0x0018 */ unsigned long UnloadInformationTableRVA;
  /* 0x001c */ unsigned long TimeDateStamp;
} IMAGE_DELAYLOAD_DESCRIPTOR, *PIMAGE_DELAYLOAD_DESCRIPTOR; /* size: 0x0020 */

typedef union _RATE_QUOTA_LIMIT
{
  union
  {
    /* 0x0000 */ unsigned long RateData;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RatePercent : 7; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved0 : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT; /* size: 0x0004 */

struct Windows::ApplicationModel::DataTransfer::IShareProvider
{
}; /* size: 0x0008 */

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long OperationStatus;
  /* 0x0010 */ unsigned long ExtendedError;
  /* 0x0014 */ unsigned long TargetDetailedError;
  /* 0x0018 */ unsigned long ReservedStatus;
  /* 0x001c */ unsigned long OutputBlockOffset;
  /* 0x0020 */ unsigned long OutputBlockLength;
} DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT, *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT; /* size: 0x0024 */

typedef struct _RemotableHandle
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ union _RemotableHandle::__MIDL_IWinTypes_0009 u;
} RemotableHandle, *PRemotableHandle; /* size: 0x0008 */

struct Windows::Foundation::IReference_impl<double>
{
}; /* size: 0x0008 */

struct Windows::ApplicationModel::DataTransfer::IShareTargetInfo
{
}; /* size: 0x0008 */

typedef struct _IMAGEINFO
{
  /* 0x0000 */ struct HBITMAP__* hbmImage;
  /* 0x0008 */ struct HBITMAP__* hbmMask;
  /* 0x0010 */ int Unused1;
  /* 0x0014 */ int Unused2;
  /* 0x0018 */ struct tagRECT rcImage;
} IMAGEINFO, *PIMAGEINFO; /* size: 0x0028 */

typedef struct _QUOTA_LIMITS_EX
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
  /* 0x0030 */ unsigned __int64 WorkingSetLimit;
  /* 0x0038 */ unsigned __int64 Reserved2;
  /* 0x0040 */ unsigned __int64 Reserved3;
  /* 0x0048 */ unsigned __int64 Reserved4;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ union _RATE_QUOTA_LIMIT CpuRateLimit;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX; /* size: 0x0058 */

struct _IMAGELIST;

class exception
{
  /* 0x0000 */ long Padding_851[2];
  /* 0x0008 */ const char* _m_what;
  /* 0x0010 */ int _m_doFree;
}; /* size: 0x0018 */

struct Windows::Foundation::Collections::Internal::NoVersionTag
{
}; /* size: 0x0001 */

typedef struct _RTL_VERIFIER_HEAP_TABLE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_852;
  /* 0x0008 */ void* VrfHeapAllocate /* function */;
  /* 0x0010 */ void* VrfHeapReAllocate /* function */;
  /* 0x0018 */ void* VrfHeapFree /* function */;
  /* 0x0020 */ void* VrfHeapCreate /* function */;
  /* 0x0028 */ void* VrfHeapDestroy /* function */;
  /* 0x0030 */ void* VrfHeapExtend /* function */;
  /* 0x0038 */ void* VrfGetProcessHeaps /* function */;
  /* 0x0040 */ void* VrfHeapWalk /* function */;
  /* 0x0048 */ void* VrfHeapLock /* function */;
  /* 0x0050 */ void* VrfHeapUnlock /* function */;
  /* 0x0058 */ void* VrfHeapIsLocked /* function */;
  /* 0x0060 */ void* VrfHeapValidate /* function */;
  /* 0x0068 */ void* VrfHeapSetUserValue /* function */;
  /* 0x0070 */ void* VrfHeapGetUserInfo /* function */;
  /* 0x0078 */ void* VrfHeapSetUserFlags /* function */;
  /* 0x0080 */ void* VrfHeapSerialize /* function */;
  /* 0x0088 */ void* VrfHeapSize /* function */;
  /* 0x0090 */ void* VrfHeapCompact /* function */;
  /* 0x0098 */ void* VrfHeapZero /* function */;
  /* 0x00a0 */ void* VrfQueryVerifierOptions /* function */;
  /* 0x00a8 */ void* VrfSetVerifierOptions /* function */;
} RTL_VERIFIER_HEAP_TABLE, *PRTL_VERIFIER_HEAP_TABLE; /* size: 0x00b0 */

struct tagTVITEMEXW
{
  /* 0x0000 */ unsigned int mask;
  /* 0x0004 */ long Padding_853;
  /* 0x0008 */ struct _TREEITEM* hItem;
  /* 0x0010 */ unsigned int state;
  /* 0x0014 */ unsigned int stateMask;
  /* 0x0018 */ wchar_t* pszText;
  /* 0x0020 */ int cchTextMax;
  /* 0x0024 */ int iImage;
  /* 0x0028 */ int iSelectedImage;
  /* 0x002c */ int cChildren;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ int iIntegral;
  /* 0x003c */ unsigned int uStateEx;
  /* 0x0040 */ struct HWND__* hwnd;
  /* 0x0048 */ int iExpandedImage;
  /* 0x004c */ int iReserved;
}; /* size: 0x0050 */

typedef struct _FILE_PIPE_LOCAL_INFORMATION
{
  /* 0x0000 */ unsigned long NamedPipeType;
  /* 0x0004 */ unsigned long NamedPipeConfiguration;
  /* 0x0008 */ unsigned long MaximumInstances;
  /* 0x000c */ unsigned long CurrentInstances;
  /* 0x0010 */ unsigned long InboundQuota;
  /* 0x0014 */ unsigned long ReadDataAvailable;
  /* 0x0018 */ unsigned long OutboundQuota;
  /* 0x001c */ unsigned long WriteQuotaAvailable;
  /* 0x0020 */ unsigned long NamedPipeState;
  /* 0x0024 */ unsigned long NamedPipeEnd;
} FILE_PIPE_LOCAL_INFORMATION, *PFILE_PIPE_LOCAL_INFORMATION; /* size: 0x0028 */

struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>
{
}; /* size: 0x0001 */

typedef struct _NETRESOURCEA
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0018 */ char* lpRemoteName;
  /* 0x0020 */ char* lpComment;
  /* 0x0028 */ char* lpProvider;
} NETRESOURCEA, *PNETRESOURCEA; /* size: 0x0030 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ unsigned long Spare0;
  /* 0x0030 */ union _LARGE_INTEGER AvailableTime;
  /* 0x0038 */ union _LARGE_INTEGER Spare1;
  /* 0x0040 */ union _LARGE_INTEGER Spare2;
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX; /* size: 0x0048 */

typedef struct _THREAD_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_854;
  /* 0x0008 */ struct _TEB* TebBaseAddress;
  /* 0x0010 */ struct _CLIENT_ID ClientId;
  /* 0x0020 */ unsigned __int64 AffinityMask;
  /* 0x0028 */ long Priority;
  /* 0x002c */ long BasePriority;
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<bool> *>
{
}; /* size: 0x0008 */

class Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem;

typedef struct _FILE_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_855;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ wchar_t FileName[1];
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION; /* size: 0x0060 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>;

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Reset::__l2::<lambda_442dbdd4e627d94aee8ed7535ac6295a>
{
  /* 0x0000 */ class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>* const __this;
}; /* size: 0x0008 */

typedef struct _SYSTEM_SECURITY_MODEL_INFORMATION
{
  struct
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ReservedFlag : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AllowDeviceOwnerProtectionDowngrade : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  } /* size: 0x0004 */ SecurityModelFlags;
} SYSTEM_SECURITY_MODEL_INFORMATION, *PSYSTEM_SECURITY_MODEL_INFORMATION; /* size: 0x0004 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *> >
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ISOLATED_USER_MODE_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char SecureKernelRunning : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HvciEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HvciStrictMode : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char DebugEnabled : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char FirmwarePageProtection : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char EncryptionKeyAvailable : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char SpareFlags : 2; /* bit position: 6 */
  }; /* bitfield */
  struct /* bitfield */
  {
    /* 0x0001 */ unsigned char TrustletRunning : 1; /* bit position: 0 */
    /* 0x0001 */ unsigned char HvciDisableAllowed : 1; /* bit position: 1 */
    /* 0x0001 */ unsigned char HardwareEnforcedVbs : 1; /* bit position: 2 */
    /* 0x0001 */ unsigned char NoSecrets : 1; /* bit position: 3 */
    /* 0x0001 */ unsigned char SpareFlags2 : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0002 */ unsigned char Spare0[6];
  /* 0x0008 */ unsigned __int64 Spare1;
} SYSTEM_ISOLATED_USER_MODE_INFORMATION, *PSYSTEM_ISOLATED_USER_MODE_INFORMATION; /* size: 0x0010 */

class CStabilize
{
  /* 0x0000 */ class CSafeRefCount* m_pSafeRefCount;
}; /* size: 0x0008 */

class CSafeRefCount
{
  /* 0x0000 */ long Padding_856[2];
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ int m_fInDelete;
  /* 0x0010 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0018 */

typedef struct _BOOT_ENTROPY_SOURCE_NT_RESULT
{
  /* 0x0000 */ enum _BOOT_ENTROPY_SOURCE_ID SourceId;
  /* 0x0004 */ long Padding_857;
  /* 0x0008 */ unsigned __int64 Policy;
  /* 0x0010 */ enum _BOOT_ENTROPY_SOURCE_RESULT_CODE ResultCode;
  /* 0x0014 */ long ResultStatus;
  /* 0x0018 */ unsigned __int64 Time;
  /* 0x0020 */ unsigned long EntropyLength;
  /* 0x0024 */ unsigned char EntropyData[64];
  /* 0x0064 */ long __PADDING__[1];
} BOOT_ENTROPY_SOURCE_NT_RESULT, *PBOOT_ENTROPY_SOURCE_NT_RESULT; /* size: 0x0068 */

struct Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::permission
{
}; /* size: 0x0001 */

struct localeinfo_struct
{
  /* 0x0000 */ struct threadlocaleinfostruct* locinfo;
  /* 0x0008 */ struct threadmbcinfostruct* mbcinfo;
}; /* size: 0x0010 */

typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT_EX
{
  /* 0x0000 */ unsigned short HeaderSize;
  /* 0x0002 */ char Padding_858[2];
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NotificationInfoSize;
  /* 0x000c */ unsigned short NotificationInfoOffset;
  /* 0x000e */ unsigned short ProviderMajorVersion;
} VIRTUALIZATION_INSTANCE_INFO_INPUT_EX, *PVIRTUALIZATION_INSTANCE_INFO_INPUT_EX; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ALARM_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE; /* size: 0x0030 */

class CLimitedWritableStorage::EnumElements::__l2::<lambda_447c46b66cbb21333d1664f5793f81f3>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ unsigned long& reserved1;
  /* 0x0010 */ void*& reserved2;
  /* 0x0018 */ unsigned long& reserved3;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>& spInner;
}; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<int,int>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Machine;
  /* 0x0006 */ unsigned short Characteristics;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long CheckSum;
  /* 0x0010 */ unsigned long ImageBase;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned long NumberOfSections;
  /* 0x001c */ unsigned long ExportedNamesSize;
  /* 0x0020 */ unsigned long DebugDirectorySize;
  /* 0x0024 */ unsigned long SectionAlignment;
  /* 0x0028 */ unsigned long Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER; /* size: 0x0030 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult *> >
{
}; /* size: 0x0008 */

typedef struct _TP_TASK
{
  /* 0x0000 */ const struct _TP_TASK_CALLBACKS* Callbacks;
  /* 0x0008 */ unsigned long NumaNode;
  /* 0x000c */ unsigned char IdealProcessor;
  /* 0x000d */ char Padding_859[3];
  /* 0x0010 */ struct _LIST_ENTRY ListEntry;
} TP_TASK, *PTP_TASK; /* size: 0x0020 */

typedef struct _DELAYLOAD_PROC_DESCRIPTOR
{
  /* 0x0000 */ unsigned long ImportDescribedByName;
  /* 0x0004 */ long Padding_860;
  union
  {
    union
    {
      /* 0x0008 */ const char* Name;
      /* 0x0008 */ unsigned long Ordinal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Description;
} DELAYLOAD_PROC_DESCRIPTOR, *PDELAYLOAD_PROC_DESCRIPTOR; /* size: 0x0010 */

typedef struct _DELAYLOAD_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_861;
  /* 0x0008 */ const struct _IMAGE_DELAYLOAD_DESCRIPTOR* DelayloadDescriptor;
  /* 0x0010 */ struct _IMAGE_THUNK_DATA64* ThunkAddress;
  /* 0x0018 */ const char* TargetDllName;
  /* 0x0020 */ struct _DELAYLOAD_PROC_DESCRIPTOR TargetApiDescriptor;
  /* 0x0030 */ void* TargetModuleBase;
  /* 0x0038 */ void* Unused;
  /* 0x0040 */ unsigned long LastError;
  /* 0x0044 */ long __PADDING__[1];
} DELAYLOAD_INFO, *PDELAYLOAD_INFO; /* size: 0x0048 */

struct Windows::Foundation::IReference_impl<float>
{
}; /* size: 0x0008 */

typedef struct _TP_DIRECT
{
  /* 0x0000 */ struct _TP_TASK Task;
  /* 0x0020 */ unsigned __int64 Lock;
  /* 0x0028 */ struct _LIST_ENTRY IoCompletionInformationList;
  /* 0x0038 */ void* Callback /* function */;
  /* 0x0040 */ unsigned long NumaNode;
  /* 0x0044 */ unsigned char IdealProcessor;
  /* 0x0045 */ char __PADDING__[3];
} TP_DIRECT, *PTP_DIRECT; /* size: 0x0048 */

struct Windows::Foundation::IReference_impl<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::Internal::detail::BaseHashValidator<HSTRING__ *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItemsResult *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult *> >
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned __int64 BeginAddress;
  /* 0x0008 */ unsigned __int64 EndAddress;
  /* 0x0010 */ unsigned __int64 ExceptionHandler;
  /* 0x0018 */ unsigned __int64 HandlerData;
  /* 0x0020 */ unsigned __int64 PrologEndAddress;
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY; /* size: 0x0028 */

struct Windows::Foundation::IReferenceArray<Windows::Foundation::Rect>
{
}; /* size: 0x0008 */

struct Windows::ApplicationModel::DataTransfer::IClipboardHistoryItemsResult
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::CloseAccessor::__l2::<lambda_202ebde2c4736aa82d78f43a76d480cf>
{
  /* 0x0000 */ struct IUrlAccessor* pAccessor;
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<float>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_THUNK_DATA64
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 ForwarderString;
      /* 0x0000 */ unsigned __int64 Function;
      /* 0x0000 */ unsigned __int64 Ordinal;
      /* 0x0000 */ unsigned __int64 AddressOfData;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} IMAGE_THUNK_DATA64, *PIMAGE_THUNK_DATA64; /* size: 0x0008 */

typedef struct _MEMORY_PARTITION_CONFIGURATION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumaNode;
  /* 0x0008 */ unsigned long Channel;
  /* 0x000c */ unsigned long NumberOfNumaNodes;
  /* 0x0010 */ unsigned __int64 ResidentAvailablePages;
  /* 0x0018 */ unsigned __int64 CommittedPages;
  /* 0x0020 */ unsigned __int64 CommitLimit;
  /* 0x0028 */ unsigned __int64 PeakCommitment;
  /* 0x0030 */ unsigned __int64 TotalNumberOfPages;
  /* 0x0038 */ unsigned __int64 AvailablePages;
  /* 0x0040 */ unsigned __int64 ZeroPages;
  /* 0x0048 */ unsigned __int64 FreePages;
  /* 0x0050 */ unsigned __int64 StandbyPages;
  /* 0x0058 */ unsigned __int64 StandbyPageCountByPriority[8];
  /* 0x0098 */ unsigned __int64 RepurposedPagesByPriority[8];
  /* 0x00d8 */ unsigned __int64 MaximumCommitLimit;
  /* 0x00e0 */ unsigned __int64 Reserved;
  /* 0x00e8 */ unsigned long PartitionId;
  /* 0x00ec */ long __PADDING__[1];
} MEMORY_PARTITION_CONFIGURATION_INFORMATION, *PMEMORY_PARTITION_CONFIGURATION_INFORMATION; /* size: 0x00f0 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryChangedEventArgs *>;

struct tagLOGBRUSH32
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned long lbHatch;
}; /* size: 0x000c */

struct tagEMRCREATEBRUSHINDIRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ struct tagLOGBRUSH32 lb;
}; /* size: 0x0018 */

struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryChangedEventArgs *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryChangedEventArgs *> >
{
}; /* size: 0x0008 */

struct UDATE
{
  /* 0x0000 */ struct _SYSTEMTIME st;
  /* 0x0010 */ unsigned short wDayOfYear;
}; /* size: 0x0012 */

struct Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::KeyTraits
{
}; /* size: 0x0002 */

typedef struct _JOBOBJECT_MEMORY_USAGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 JobMemory;
  /* 0x0008 */ unsigned __int64 PeakJobMemoryUsed;
} JOBOBJECT_MEMORY_USAGE_INFORMATION, *PJOBOBJECT_MEMORY_USAGE_INFORMATION; /* size: 0x0010 */

struct Windows::ApplicationModel::DataTransfer::IClipboardHistoryChangedEventArgs
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<unsigned char>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_BOUND_FORWARDER_REF
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short Reserved;
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF; /* size: 0x0008 */

struct ICheckCalledServer
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<bool> *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::MapChangedEventHandler_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

typedef struct _cpinfo
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ char __PADDING__[2];
} cpinfo, *Pcpinfo; /* size: 0x0014 */

struct Windows::Foundation::Collections::Internal::HashMap<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultHash<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::permission
{
}; /* size: 0x0001 */

struct IWeakReferenceSource
{
}; /* size: 0x0008 */

struct val_context
{
  /* 0x0000 */ int valuelen;
  /* 0x0004 */ long Padding_862;
  /* 0x0008 */ void* value_context;
  /* 0x0010 */ void* val_buff_ptr;
}; /* size: 0x0018 */

typedef struct _CERT_POLICY95_QUALIFIER1
{
  /* 0x0000 */ wchar_t* pszPracticesReference;
  /* 0x0008 */ char* pszNoticeIdentifier;
  /* 0x0010 */ char* pszNSINoticeIdentifier;
  /* 0x0018 */ unsigned long cCPSURLs;
  /* 0x001c */ long Padding_863;
  /* 0x0020 */ struct _CPS_URLS* rgCPSURLs;
} CERT_POLICY95_QUALIFIER1, *PCERT_POLICY95_QUALIFIER1; /* size: 0x0028 */

struct IImageList
{
}; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IObservableMap_impl<HSTRING__ *,Windows::Foundation::Internal::AggregateType<Windows::Storage::Streams::RandomAccessStreamReference *,Windows::Storage::Streams::IRandomAccessStreamReference *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<int>
{
}; /* size: 0x0008 */

typedef struct _STORAGE_RESERVE_AREA_DEFINITION
{
  /* 0x0000 */ enum _STORAGE_RESERVE_ID Id;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ __int64 SpaceGuarantee;
} STORAGE_RESERVE_AREA_DEFINITION, *PSTORAGE_RESERVE_AREA_DEFINITION; /* size: 0x0010 */

struct Windows::Foundation::Collections::IObservableMap<HSTRING__ *,Windows::Storage::Streams::RandomAccessStreamReference *>
{
}; /* size: 0x0008 */

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS
{
  /* 0x0000 */ unsigned long SizeStruct;
  /* 0x0004 */ unsigned long Option;
  /* 0x0008 */ unsigned char OptionData[1];
  /* 0x0009 */ char __PADDING__[3];
} RTL_PROCESS_VERIFIER_OPTIONS, *PRTL_PROCESS_VERIFIER_OPTIONS; /* size: 0x000c */

class RunSyncOnMTAThread::__l2::<lambda_38ef1b70e7c7bbb6bcbf325f13bce3ad>
{
  /* 0x0000 */ class CClipDataObject::CacheDataPointer::__l54::<lambda_27a1cab33e266522ee12881589f1a48d>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ unsigned short UniqueProcessId;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned char ObjectTypeIndex;
  /* 0x0005 */ unsigned char HandleAttributes;
  /* 0x0006 */ unsigned short HandleValue;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long GrantedAccess;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_HANDLE_TABLE_ENTRY_INFO, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0018 */

typedef struct _SYSTEM_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfHandles;
  /* 0x0004 */ long Padding_864;
  /* 0x0008 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION; /* size: 0x0020 */

class CClipDataObject::CacheDataPointer::__l54::<lambda_27a1cab33e266522ee12881589f1a48d>
{
  /* 0x0000 */ struct IDataObject*& pMTADataObj;
  /* 0x0008 */ class Windows::Internal::GitPtr& GITSourceInnerDataObject;
}; /* size: 0x0010 */

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_865;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_866;
  /* 0x0018 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
  /* 0x0020 */ unsigned long dwRecipientIndex;
  /* 0x0024 */ long __PADDING__[1];
} CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA; /* size: 0x0028 */

typedef struct _RESOLVED_USERNAME_INFO
{
  /* 0x0000 */ int bResolved;
  /* 0x0004 */ long Padding_867;
  /* 0x0008 */ wchar_t* pszResolvedName;
} RESOLVED_USERNAME_INFO, *PRESOLVED_USERNAME_INFO; /* size: 0x0010 */

typedef struct _RESOLVED_USERNAME_LIST
{
  /* 0x0000 */ unsigned long cItems;
  /* 0x0004 */ long Padding_868;
  /* 0x0008 */ struct _RESOLVED_USERNAME_INFO rgUserNameInfo[1];
} RESOLVED_USERNAME_LIST, *PRESOLVED_USERNAME_LIST; /* size: 0x0018 */

typedef struct _CONSOLE_FONT_INFO
{
  /* 0x0000 */ unsigned long nFont;
  /* 0x0004 */ struct _COORD dwFontSize;
} CONSOLE_FONT_INFO, *PCONSOLE_FONT_INFO; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS
{
  /* 0x0000 */ unsigned long NullDeviceInstance;
  /* 0x0004 */ wchar_t DeviceInstanceStrings[1];
  /* 0x0006 */ char __PADDING__[2];
} PLUGPLAY_CONTROL_CONFLICT_STRINGS, *PPLUGPLAY_CONTROL_CONFLICT_STRINGS; /* size: 0x0008 */

struct ITaskAdvise
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0001 */

typedef struct _ALPC_DATA_VIEW_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_869;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ void* ViewBase;
  /* 0x0018 */ unsigned __int64 ViewSize;
} ALPC_DATA_VIEW_ATTR, *PALPC_DATA_VIEW_ATTR; /* size: 0x0020 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVector<unsigned int> *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_BOOT_LOGO_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BitmapOffset;
} SYSTEM_BOOT_LOGO_INFORMATION, *PSYSTEM_BOOT_LOGO_INFORMATION; /* size: 0x0008 */

class wil::details::<lambda_03b8815c4721609e5712acf28470b934>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

typedef struct _EFI_DRIVER_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long FriendlyNameOffset;
  /* 0x0010 */ unsigned long DriverFilePathOffset;
} EFI_DRIVER_ENTRY, *PEFI_DRIVER_ENTRY; /* size: 0x0014 */

struct Windows::Foundation::IAsyncActionProgressHandler<unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _MANAGE_HOT_PATCH_APPLY_IMAGE_PATCH
{
  /* 0x0000 */ unsigned long Version;
  union
  {
    union
    {
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long ApplyReversePatches : 1; /* bit position: 0 */
        /* 0x0004 */ unsigned long ApplyForwardPatches : 1; /* bit position: 1 */
        /* 0x0004 */ unsigned long UndoPatch : 1; /* bit position: 2 */
        /* 0x0004 */ unsigned long Spare : 29; /* bit position: 3 */
      }; /* bitfield */
      /* 0x0004 */ unsigned long AllFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Flags;
  /* 0x0008 */ void* ProcessHandle;
  /* 0x0010 */ void* BaseImageAddress;
  /* 0x0018 */ void* PatchImageAddress;
} MANAGE_HOT_PATCH_APPLY_IMAGE_PATCH, *PMANAGE_HOT_PATCH_APPLY_IMAGE_PATCH; /* size: 0x0020 */

typedef struct _EFI_DRIVER_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _EFI_DRIVER_ENTRY DriverEntry;
} EFI_DRIVER_ENTRY_LIST, *PEFI_DRIVER_ENTRY_LIST; /* size: 0x0018 */

class XWinRT::CDefaultElementTraits<HSTRING__ *>
{
}; /* size: 0x0002 */

struct IAsyncRpcChannelBuffer
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_REF
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ long Padding_870;
  /* 0x0008 */ wchar_t* pszFunction;
  /* 0x0010 */ wchar_t* pszProvider;
  /* 0x0018 */ unsigned long cProperties;
  /* 0x001c */ long Padding_871;
  /* 0x0020 */ struct _CRYPT_PROPERTY_REF** rgpProperties;
  /* 0x0028 */ struct _CRYPT_IMAGE_REF* pUM;
  /* 0x0030 */ struct _CRYPT_IMAGE_REF* pKM;
} CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF; /* size: 0x0038 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::TimeSpan>
{
}; /* size: 0x0008 */

struct tagPOINTER_TOUCH_INFO
{
  /* 0x0000 */ struct tagPOINTER_INFO pointerInfo;
  /* 0x0060 */ unsigned int touchFlags;
  /* 0x0064 */ unsigned int touchMask;
  /* 0x0068 */ struct tagRECT rcContact;
  /* 0x0078 */ struct tagRECT rcContactRaw;
  /* 0x0088 */ unsigned int orientation;
  /* 0x008c */ unsigned int pressure;
}; /* size: 0x0090 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReference<_GUID>
{
}; /* size: 0x0008 */

struct IZoneIdentifier
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOSTaskCompletion> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IOSTaskCompletion>* ptr_;
}; /* size: 0x0008 */

typedef struct _RPC_CLIENT_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ long Padding_872;
  /* 0x0030 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0038 */ unsigned int RpcProtseqEndpointCount;
  /* 0x003c */ long Padding_873;
  /* 0x0040 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0048 */ unsigned __int64 Reserved;
  /* 0x0050 */ const void* InterpreterInfo;
  /* 0x0058 */ unsigned int Flags;
  /* 0x005c */ long __PADDING__[1];
} RPC_CLIENT_INTERFACE, *PRPC_CLIENT_INTERFACE; /* size: 0x0060 */

typedef struct _CACHE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
} CACHE_DESCRIPTOR, *PCACHE_DESCRIPTOR; /* size: 0x000c */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ProcessorMask;
  /* 0x0008 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x000c */ long Padding_874;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char Flags;
    } /* size: 0x0001 */ ProcessorCore;
    struct
    {
      /* 0x0010 */ unsigned long NodeNumber;
    } /* size: 0x0004 */ NumaNode;
    /* 0x0010 */ struct _CACHE_DESCRIPTOR Cache;
    /* 0x0010 */ unsigned __int64 Reserved[2];
  }; /* size: 0x0010 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION; /* size: 0x0020 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IMap<HSTRING__ *,IInspectable *> *>
{
}; /* size: 0x0008 */

typedef struct _REARRANGE_FILE_DATA32
{
  /* 0x0000 */ unsigned __int64 SourceStartingOffset;
  /* 0x0008 */ unsigned __int64 TargetOffset;
  /* 0x0010 */ unsigned int SourceFileHandle;
  /* 0x0014 */ unsigned long Length;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} REARRANGE_FILE_DATA32, *PREARRANGE_FILE_DATA32; /* size: 0x0020 */

struct Windows::Foundation::Collections::IVector<Windows::Storage::Streams::IRandomAccessStream *>
{
}; /* size: 0x0008 */

typedef struct _SHCREATEPROCESSINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const wchar_t* pszFile;
  /* 0x0018 */ const wchar_t* pszParameters;
  /* 0x0020 */ const wchar_t* pszCurrentDirectory;
  /* 0x0028 */ void* hUserToken;
  /* 0x0030 */ struct _SECURITY_ATTRIBUTES* lpProcessAttributes;
  /* 0x0038 */ struct _SECURITY_ATTRIBUTES* lpThreadAttributes;
  /* 0x0040 */ int bInheritHandles;
  /* 0x0044 */ unsigned long dwCreationFlags;
  /* 0x0048 */ struct _STARTUPINFOW* lpStartupInfo;
  /* 0x0050 */ struct _PROCESS_INFORMATION* lpProcessInformation;
} SHCREATEPROCESSINFOW, *PSHCREATEPROCESSINFOW; /* size: 0x0058 */

struct Windows::Foundation::Collections::IVectorView<Windows::Storage::Streams::IRandomAccessStreamReference *>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION
{
  /* 0x0000 */ enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
  /* 0x0004 */ unsigned long DataValue;
} SYSTEM_WATCHDOG_TIMER_INFORMATION, *PSYSTEM_WATCHDOG_TIMER_INFORMATION; /* size: 0x0008 */

struct XWinRT::StorageTempTraits<IInspectable *,IInspectable *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >
{
}; /* size: 0x0001 */

struct tagDATAELEMENT
{
  /* 0x0000 */ struct _GUID dataID;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ unsigned long cbRounded;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

struct XWinRT::StorageTempTraits<IInspectable *,IInspectable *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >::type
{
}; /* size: 0x0001 */

struct tagOBJREFDATA
{
  /* 0x0000 */ unsigned long nElms;
  /* 0x0004 */ long Padding_875;
  /* 0x0008 */ struct tagDATAELEMENT** ppElmArray;
}; /* size: 0x0010 */

typedef struct _PO_WAKE_SOURCE_INFO
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_INFO, *PPO_WAKE_SOURCE_INFO; /* size: 0x0008 */

struct XWinRT::SerializingLockPolicy
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<unsigned int>
{
}; /* size: 0x0008 */

struct tagWIN16BITMAP
{
  /* 0x0000 */ short bmType;
  /* 0x0002 */ short bmWidth;
  /* 0x0004 */ short bmHeight;
  /* 0x0006 */ short bmWidthBytes;
  /* 0x0008 */ unsigned char bmPlanes;
  /* 0x0009 */ unsigned char bmBitsPixel;
  /* 0x000a */ void* bmBits;
}; /* size: 0x0012 */

typedef struct _tagpropertykey
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long pid;
} tagpropertykey, *Ptagpropertykey; /* size: 0x0014 */

struct tagEXTLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ unsigned long elfVersion;
  /* 0x0120 */ unsigned long elfStyleSize;
  /* 0x0124 */ unsigned long elfMatch;
  /* 0x0128 */ unsigned long elfReserved;
  /* 0x012c */ unsigned char elfVendorId[4];
  /* 0x0130 */ unsigned long elfCulture;
  /* 0x0134 */ struct tagPANOSE elfPanose;
  /* 0x013e */ char __PADDING__[2];
}; /* size: 0x0140 */

struct tagEMREXTCREATEFONTINDIRECTW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihFont;
  /* 0x000c */ struct tagEXTLOGFONTW elfw;
}; /* size: 0x014c */

struct Windows::Foundation::Collections::is_pointer<Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>
{
}; /* size: 0x0001 */

struct XWinRT::StringEquals
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::is_foundation_struct<Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IReferenceArray<int>
{
}; /* size: 0x0008 */

struct XWinRT::StringHash
{
}; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY BlockRemoteImageLoads;
  /* 0x0008 */ union _RTL_IMAGE_MITIGATION_POLICY BlockLowLabelImageLoads;
  /* 0x0010 */ union _RTL_IMAGE_MITIGATION_POLICY PreferSystem32;
} RTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY, *PRTL_IMAGE_MITIGATION_IMAGE_LOAD_POLICY; /* size: 0x0018 */

struct Windows::Foundation::Collections::supports_cleanup<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *> >
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<char32_t>
{
}; /* size: 0x0001 */

struct IFunctionInstance
{
}; /* size: 0x0008 */

struct wistd::__libcpp_is_integral<unsigned int>
{
}; /* size: 0x0001 */

class Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal;

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>;

struct IXMLHttpRequest
{
}; /* size: 0x0008 */

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT
{
  /* 0x0000 */ unsigned __int64 NumSDChangedSuccess;
  /* 0x0008 */ unsigned __int64 NumSDChangedFail;
  /* 0x0010 */ unsigned __int64 NumSDUnused;
  /* 0x0018 */ unsigned __int64 NumSDTotal;
  /* 0x0020 */ unsigned __int64 NumMftSDChangedSuccess;
  /* 0x0028 */ unsigned __int64 NumMftSDChangedFail;
  /* 0x0030 */ unsigned __int64 NumMftSDTotal;
} SD_CHANGE_MACHINE_SID_OUTPUT, *PSD_CHANGE_MACHINE_SID_OUTPUT; /* size: 0x0038 */

struct tagEMRTEXT
{
  /* 0x0000 */ struct _POINTL ptlReference;
  /* 0x0008 */ unsigned long nChars;
  /* 0x000c */ unsigned long offString;
  /* 0x0010 */ unsigned long fOptions;
  /* 0x0014 */ struct _RECTL rcl;
  /* 0x0024 */ unsigned long offDx;
}; /* size: 0x0028 */

struct XWinRT::StringLifetimeTraits
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterable_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *> >
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterable<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>
{
}; /* size: 0x0008 */

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER
{
  /* 0x0000 */ void* EventHandle;
  /* 0x0008 */ unsigned long KeyValue;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_ASSIGN_EVENT_BUFFER, *PFILE_PIPE_ASSIGN_EVENT_BUFFER; /* size: 0x0010 */

struct Windows::Foundation::IAsyncOperationProgressHandler<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0008 */

typedef struct _TOKEN_DEVICE_CLAIMS
{
  /* 0x0000 */ void* DeviceClaims;
} TOKEN_DEVICE_CLAIMS, *PTOKEN_DEVICE_CLAIMS; /* size: 0x0008 */

struct IWinInetCacheHints
{
}; /* size: 0x0008 */

class XWinRT::StaReentrancyLock
{
  union
  {
    /* 0x0000 */ int _iReadCount;
    /* 0x0000 */ const int sc_iWriteOffset;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _CM_ROM_BLOCK
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Size;
} CM_ROM_BLOCK, *PCM_ROM_BLOCK; /* size: 0x0008 */

typedef struct _SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ long Padding_876;
  /* 0x0010 */ void* Image;
} SYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION, *PSYSTEM_CODEINTEGRITYVERIFICATION_INFORMATION; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation_impl<unsigned int>
{
}; /* size: 0x0008 */

class XWinRT::detail::AtomicUpdater<0>
{
  /* 0x0000 */ BOOL _fSta;
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

class XWinRT::detail::StorageReference<HSTRING__ *,HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PREFETCH_OPTIONS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long LowerPriority : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualOffsets : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long TrickleIOs : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long SkipInStorePages : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long PrefetchFilesByVa : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long SkipMemoryStorePages : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Spare : 2; /* bit position: 6 */
    /* 0x0000 */ unsigned long ScenarioType : 8; /* bit position: 8 */
  }; /* bitfield */
} SYSTEM_PREFETCH_OPTIONS, *PSYSTEM_PREFETCH_OPTIONS; /* size: 0x0004 */

typedef struct _KEY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long NameLength;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[6];
} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION; /* size: 0x0018 */

class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::TryAcquireWrite>
{
  /* 0x0000 */ class XWinRT::ComLock* _pLock;
}; /* size: 0x0008 */

typedef struct _IMAGE_THUNK_DATA32
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long ForwarderString;
      /* 0x0000 */ unsigned long Function;
      /* 0x0000 */ unsigned long Ordinal;
      /* 0x0000 */ unsigned long AddressOfData;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
} IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32; /* size: 0x0004 */

struct tagEMRSETTEXTCOLOR
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long crColor;
}; /* size: 0x000c */

struct IShellItem2
{
}; /* size: 0x0008 */

typedef struct _PROCESS_ASSIGN_CPU_PARTITION_INFO
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long CpuPartitionCount;
  /* 0x0008 */ void* CpuPartitionHandles[1];
} PROCESS_ASSIGN_CPU_PARTITION_INFO, *PPROCESS_ASSIGN_CPU_PARTITION_INFO; /* size: 0x0010 */

struct Windows::Foundation::IAsyncActionWithProgress<unsigned int>
{
}; /* size: 0x0008 */

typedef struct _PROCESS_FAULT_INFORMATION
{
  /* 0x0000 */ unsigned long FaultFlags;
  /* 0x0004 */ unsigned long AdditionalInfo;
} PROCESS_FAULT_INFORMATION, *PPROCESS_FAULT_INFORMATION; /* size: 0x0008 */

typedef struct _QUERY_CACHED_RUNS_RUN
{
  /* 0x0000 */ __int64 Lcn;
  /* 0x0008 */ __int64 Length;
} QUERY_CACHED_RUNS_RUN, *PQUERY_CACHED_RUNS_RUN; /* size: 0x0010 */

struct tagEMRPOLYDRAW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
  /* 0x0024 */ unsigned char abTypes[1];
  /* 0x0025 */ char __PADDING__[3];
}; /* size: 0x0028 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVectorView<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  union
  {
    /* 0x0004 */ unsigned long UnwindData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long Flag : 2; /* bit position: 0 */
      /* 0x0004 */ unsigned long FunctionLength : 11; /* bit position: 2 */
      /* 0x0004 */ unsigned long Ret : 2; /* bit position: 13 */
      /* 0x0004 */ unsigned long H : 1; /* bit position: 15 */
      /* 0x0004 */ unsigned long Reg : 3; /* bit position: 16 */
      /* 0x0004 */ unsigned long R : 1; /* bit position: 19 */
      /* 0x0004 */ unsigned long L : 1; /* bit position: 20 */
      /* 0x0004 */ unsigned long C : 1; /* bit position: 21 */
      /* 0x0004 */ unsigned long StackAdjust : 10; /* bit position: 22 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_ARM_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

struct XWinRT::detail::TryAcquireWrite
{
}; /* size: 0x0001 */

typedef struct _PATCH_MAIN_CALLOUT_PARAMS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long PatchPhase;
  /* 0x0008 */ unsigned long Flags;
} PATCH_MAIN_CALLOUT_PARAMS, *PPATCH_MAIN_CALLOUT_PARAMS; /* size: 0x000c */

struct XWinRT::detail::ReentrancyGuard<0>
{
}; /* size: 0x0001 */

typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _DWORD_BLOB* hRemote;
  }; /* size: 0x0008 */
} GDI_NONREMOTE::__MIDL_IWinTypes_0002, *PGDI_NONREMOTE::__MIDL_IWinTypes_0002; /* size: 0x0008 */

struct Windows::Foundation::ITypedEventHandler<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs *>
{
}; /* size: 0x0008 */

struct Windows::Foundation::IReferenceArray<unsigned __int64>
{
}; /* size: 0x0008 */

struct IClassClassicInfo3
{
}; /* size: 0x0008 */

class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::TryAcquireRead>
{
  /* 0x0000 */ class XWinRT::StaReentrancyLock* _pLock;
}; /* size: 0x0008 */

class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

typedef struct _REPAIR_COPIES_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Status;
  /* 0x0008 */ union _LARGE_INTEGER ResumeFileOffset;
} REPAIR_COPIES_OUTPUT, *PREPAIR_COPIES_OUTPUT; /* size: 0x0010 */

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
{
  /* 0x0000 */ unsigned long dwDataType;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char* pData;
} SERVICE_TRIGGER_SPECIFIC_DATA_ITEM, *PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM; /* size: 0x0010 */

class Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer;

struct Windows::Foundation::IAsyncOperationWithProgressCompletedHandler<unsigned int,unsigned int>
{
}; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer *>;

struct tagCUSTDATA
{
  /* 0x0000 */ unsigned long cCustData;
  /* 0x0004 */ long Padding_877;
  /* 0x0008 */ struct tagCUSTDATAITEM* prgCustData;
}; /* size: 0x0010 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer *>,Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducedEventArgs *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducedEventArgs *> >
{
}; /* size: 0x0008 */

typedef struct _KLDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ unsigned __int64 __Undefined1;
  /* 0x0018 */ unsigned __int64 __Undefined2;
  /* 0x0020 */ unsigned __int64 __Undefined3;
  /* 0x0028 */ unsigned __int64 NonPagedDebugInfo;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_878;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Undefined5;
  /* 0x0070 */ unsigned __int64 __Undefined6;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long __padding1;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ unsigned long __padding2;
} KLDR_DATA_TABLE_ENTRY64, *PKLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

struct IProcessInitControl
{
}; /* size: 0x0008 */

class wil::com_ptr_t<ITypeInfo,wil::err_returncode_policy>
{
  /* 0x0000 */ struct ITypeInfo* m_ptr;
}; /* size: 0x0008 */

struct XWinRT::detail::AcquireWrite
{
}; /* size: 0x0001 */

typedef struct _COMPONENT_FILTER
{
  /* 0x0000 */ unsigned long ComponentFlags;
} COMPONENT_FILTER, *PCOMPONENT_FILTER; /* size: 0x0004 */

struct XWinRT::detail::AcquireRead
{
}; /* size: 0x0001 */

struct tagPOINTER_DEVICE_CURSOR_INFO
{
  /* 0x0000 */ unsigned int cursorId;
  /* 0x0004 */ enum tagPOINTER_DEVICE_CURSOR_TYPE cursor;
}; /* size: 0x0008 */

struct Windows::Foundation::IPropertyValue
{
}; /* size: 0x0008 */

class XWinRT::detail::AbiReference<HSTRING__ *,HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >
{
}; /* size: 0x0008 */

class XWinRT::detail::LockHolder<XWinRT::StaReentrancyLock,XWinRT::detail::AcquireRead>
{
  /* 0x0000 */ class XWinRT::StaReentrancyLock* _pLock;
}; /* size: 0x0008 */

typedef struct _SE_AUDIT_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ enum _AUDIT_EVENT_TYPE AuditType;
  /* 0x0008 */ enum _SE_AUDIT_OPERATION AuditOperation;
  /* 0x000c */ unsigned long AuditFlags;
  /* 0x0010 */ struct _UNICODE_STRING SubsystemName;
  /* 0x0020 */ struct _UNICODE_STRING ObjectTypeName;
  /* 0x0030 */ struct _UNICODE_STRING ObjectName;
  /* 0x0040 */ void* HandleId;
  /* 0x0048 */ struct _GUID* TransactionId;
  /* 0x0050 */ struct _LUID* OperationId;
  /* 0x0058 */ unsigned char ObjectCreation;
  /* 0x0059 */ unsigned char GenerateOnClose;
  /* 0x005a */ char __PADDING__[6];
} SE_AUDIT_INFO, *PSE_AUDIT_INFO; /* size: 0x0060 */

struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardOperationAppInfo
{
}; /* size: 0x0008 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IMap<HSTRING__ *,HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_ECC_CURVE_NAMES
{
  /* 0x0000 */ unsigned long dwEccCurveNames;
  /* 0x0004 */ long Padding_879;
  /* 0x0008 */ wchar_t** pEccCurveNames;
} BCRYPT_ECC_CURVE_NAMES, *PBCRYPT_ECC_CURVE_NAMES; /* size: 0x0010 */

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO
{
  /* 0x0000 */ char* pszTimeStampAlgorithm;
  /* 0x0008 */ char* pszContentType;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Content;
  /* 0x0020 */ unsigned long cAttribute;
  /* 0x0024 */ long Padding_880;
  /* 0x0028 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CRYPT_TIME_STAMP_REQUEST_INFO, *PCRYPT_TIME_STAMP_REQUEST_INFO; /* size: 0x0030 */

struct CONFLICT_ITEM_METADATA
{
  /* 0x0000 */ struct _FILETIME ftDateModified;
  /* 0x0008 */ unsigned __int64 ullSize;
  /* 0x0010 */ wchar_t* pszItemName;
  /* 0x0018 */ wchar_t* pszItemPath;
  /* 0x0020 */ int fHasConnectedElement;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

class CBrokeredClipDataObject::SetData::__l23::<lambda_eb30775d835ce1aa7514baf3cb9520bf>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ struct tagFORMATETC*& pformatetc;
  /* 0x0010 */ struct tagSTGMEDIUM*& pmedium;
  /* 0x0018 */ int& fRelease;
}; /* size: 0x0020 */

class CLimitedWritableStorage::MoveElementTo::__l11::<lambda_f3ee3880bbfa881d18ec7e87344dd5a6>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IStorage>& spOuter;
  /* 0x0018 */ const wchar_t*& pwcsNewName;
  /* 0x0020 */ unsigned long& grfFlags;
}; /* size: 0x0028 */

class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::AcquireWrite>
{
  /* 0x0000 */ class XWinRT::SRWLock* _pLock;
}; /* size: 0x0008 */

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long TransactionState;
  /* 0x0014 */ unsigned long Reserved1;
  /* 0x0018 */ unsigned long Reserved2;
  /* 0x001c */ long Padding_881;
  /* 0x0020 */ __int64 Reserved3;
} TXFS_LIST_TRANSACTIONS_ENTRY, *PTXFS_LIST_TRANSACTIONS_ENTRY; /* size: 0x0028 */

typedef struct _THREAD_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_882;
  union
  {
    /* 0x0008 */ void* NewTlsData;
    /* 0x0008 */ void* OldTlsData;
  }; /* size: 0x0008 */
  /* 0x0010 */ void* ThreadId;
} THREAD_TLS_INFORMATION, *PTHREAD_TLS_INFORMATION; /* size: 0x0018 */

struct Windows::Foundation::ITypedEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardSignalProducer *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardSignalProducer *>,IInspectable *>
{
}; /* size: 0x0008 */

struct tagRECT16
{
  /* 0x0000 */ short left;
  /* 0x0002 */ short top;
  /* 0x0004 */ short right;
  /* 0x0006 */ short bottom;
}; /* size: 0x0008 */

struct tagEMRSETDIBITSTODEVICE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long iStartScan;
  /* 0x0048 */ unsigned long cScans;
}; /* size: 0x004c */

typedef struct _CLILIST
{
  /* 0x0000 */ void* hcliNext;
  /* 0x0008 */ void* info[20];
} CLILIST, *PCLILIST; /* size: 0x00a8 */

struct wistd::enable_if<1,void *>
{
}; /* size: 0x0001 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<HSTRING__ *> *>
{
}; /* size: 0x0008 */

typedef struct _HOSTNAMES
{
  /* 0x0000 */ unsigned short clientNameOffset;
  /* 0x0002 */ unsigned short documentNameOffset;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} HOSTNAMES, *PHOSTNAMES; /* size: 0x0006 */

typedef struct _FILE_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION; /* size: 0x0008 */

struct XWinRT::detail::TryAcquireRead
{
}; /* size: 0x0001 */

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ struct _GUID LockingTransactionId;
  /* 0x0058 */ unsigned long TxInfoFlags;
  /* 0x005c */ wchar_t FileName[1];
  /* 0x005e */ char __PADDING__[2];
} FILE_ID_GLOBAL_TX_DIR_INFORMATION, *PFILE_ID_GLOBAL_TX_DIR_INFORMATION; /* size: 0x0060 */

class XWinRT::detail::LockHolder<XWinRT::SRWLock,XWinRT::detail::AcquireRead>
{
  /* 0x0000 */ class XWinRT::SRWLock* _pLock;
}; /* size: 0x0008 */

typedef struct _MM_ETW_PAGE_INFO_EX
{
  /* 0x0000 */ struct _MM_ETW_PAGE_INFO PageInfo;
  /* 0x0018 */ union _MM_ETW_PAGE_EXTRA_INFO Info;
} MM_ETW_PAGE_INFO_EX, *PMM_ETW_PAGE_INFO_EX; /* size: 0x0020 */

typedef struct _FILE_INTERNAL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IndexNumber;
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ACCESS_INFORMATION
{
  /* 0x0000 */ unsigned long AccessFlags;
} FILE_ACCESS_INFORMATION, *PFILE_ACCESS_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_POSITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CurrentByteOffset;
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ALL_INFORMATION
{
  /* 0x0000 */ struct _FILE_BASIC_INFORMATION BasicInformation;
  /* 0x0028 */ struct _FILE_STANDARD_INFORMATION StandardInformation;
  /* 0x0040 */ struct _FILE_INTERNAL_INFORMATION InternalInformation;
  /* 0x0048 */ struct _FILE_EA_INFORMATION EaInformation;
  /* 0x004c */ struct _FILE_ACCESS_INFORMATION AccessInformation;
  /* 0x0050 */ struct _FILE_POSITION_INFORMATION PositionInformation;
  /* 0x0058 */ struct _FILE_MODE_INFORMATION ModeInformation;
  /* 0x005c */ struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
  /* 0x0060 */ struct _FILE_NAME_INFORMATION NameInformation;
} FILE_ALL_INFORMATION, *PFILE_ALL_INFORMATION; /* size: 0x0068 */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::Collections::IVectorView<HSTRING__ *> *>
{
}; /* size: 0x0008 */

struct wistd::__lazy_or_impl<0>
{
}; /* size: 0x0001 */

typedef struct _MM_ETW_WORKING_SET_PFN_RUNDOWN
{
  /* 0x0000 */ unsigned __int64 ProcessId;
  /* 0x0008 */ unsigned __int64 EntryCount;
  /* 0x0010 */ struct _MM_ETW_PAGE_INFO_EX WorkingSetInfo[1];
} MM_ETW_WORKING_SET_PFN_RUNDOWN, *PMM_ETW_WORKING_SET_PFN_RUNDOWN; /* size: 0x0030 */

class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::AcquireWrite>
{
  /* 0x0000 */ class XWinRT::ComLock* _pLock;
}; /* size: 0x0008 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _NT_WRITE_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _NT_WRITE_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum _NT_WRITE_FLAGS>; /* size: 0x0001 */

typedef struct _PORT_DATA_INFORMATION
{
  /* 0x0000 */ unsigned long CountDataEntries;
  /* 0x0004 */ long Padding_883;
  /* 0x0008 */ struct _PORT_DATA_ENTRY DataEntries[1];
} PORT_DATA_INFORMATION, *PPORT_DATA_INFORMATION; /* size: 0x0018 */

struct Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *>
{
}; /* size: 0x0008 */

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Next::__l2::<lambda_5c690cab17f385c97bf7142c1739781b>
{
  /* 0x0000 */ class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>* const __this;
  /* 0x0008 */ unsigned long& celt;
  /* 0x0010 */ struct tagSTATSTG*& rgelt;
  /* 0x0018 */ unsigned long*& pceltFetched;
}; /* size: 0x0020 */

typedef struct _RTL_FEATURE_CONFIGURATION
{
  /* 0x0000 */ unsigned int FeatureId;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned int Priority : 4; /* bit position: 0 */
    /* 0x0004 */ unsigned int EnabledState : 2; /* bit position: 4 */
    /* 0x0004 */ unsigned int IsWexpConfiguration : 1; /* bit position: 6 */
    /* 0x0004 */ unsigned int HasSubscriptions : 1; /* bit position: 7 */
    /* 0x0004 */ unsigned int Variant : 6; /* bit position: 8 */
    /* 0x0004 */ unsigned int VariantPayloadKind : 2; /* bit position: 14 */
  }; /* bitfield */
  /* 0x0008 */ unsigned int VariantPayload;
} RTL_FEATURE_CONFIGURATION, *PRTL_FEATURE_CONFIGURATION; /* size: 0x000c */

struct XWinRT::detail::ReentrancyGuard<1>
{
  /* 0x0000 */ HRESULT _hr;
  /* 0x0004 */ long Padding_884;
  /* 0x0008 */ volatile long* _pGuard;
}; /* size: 0x0010 */

struct IDataObjectEx
{
}; /* size: 0x0008 */

typedef struct _CHAR_INFO
{
  union
  {
    union
    {
      /* 0x0000 */ wchar_t UnicodeChar;
      /* 0x0000 */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Char;
  /* 0x0002 */ unsigned short Attributes;
} CHAR_INFO, *PCHAR_INFO; /* size: 0x0004 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

typedef union _TIMELINE_BITMAP
{
  union
  {
    /* 0x0000 */ unsigned __int64 Value;
    struct
    {
      /* 0x0000 */ unsigned long EndTime;
      /* 0x0004 */ unsigned long Bitmap;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} TIMELINE_BITMAP, *PTIMELINE_BITMAP; /* size: 0x0008 */

typedef struct _PROCESS_ENERGY_VALUES_EXTENSION
{
  union
  {
    /* 0x0000 */ union _TIMELINE_BITMAP Timelines[14];
    struct
    {
      /* 0x0000 */ union _TIMELINE_BITMAP CpuTimeline;
      /* 0x0008 */ union _TIMELINE_BITMAP DiskTimeline;
      /* 0x0010 */ union _TIMELINE_BITMAP NetworkTimeline;
      /* 0x0018 */ union _TIMELINE_BITMAP MBBTimeline;
      /* 0x0020 */ union _TIMELINE_BITMAP ForegroundTimeline;
      /* 0x0028 */ union _TIMELINE_BITMAP DesktopVisibleTimeline;
      /* 0x0030 */ union _TIMELINE_BITMAP CompositionRenderedTimeline;
      /* 0x0038 */ union _TIMELINE_BITMAP CompositionDirtyGeneratedTimeline;
      /* 0x0040 */ union _TIMELINE_BITMAP CompositionDirtyPropagatedTimeline;
      /* 0x0048 */ union _TIMELINE_BITMAP InputTimeline;
      /* 0x0050 */ union _TIMELINE_BITMAP AudioInTimeline;
      /* 0x0058 */ union _TIMELINE_BITMAP AudioOutTimeline;
      /* 0x0060 */ union _TIMELINE_BITMAP DisplayRequiredTimeline;
      /* 0x0068 */ union _TIMELINE_BITMAP KeyboardInputTimeline;
    }; /* size: 0x0070 */
  }; /* size: 0x0070 */
  union
  {
    /* 0x0070 */ union _ENERGY_STATE_DURATION Durations[5];
    struct
    {
      /* 0x0070 */ union _ENERGY_STATE_DURATION InputDuration;
      /* 0x0078 */ union _ENERGY_STATE_DURATION AudioInDuration;
      /* 0x0080 */ union _ENERGY_STATE_DURATION AudioOutDuration;
      /* 0x0088 */ union _ENERGY_STATE_DURATION DisplayRequiredDuration;
      /* 0x0090 */ union _ENERGY_STATE_DURATION PSMBackgroundDuration;
    }; /* size: 0x0028 */
  }; /* size: 0x0028 */
  /* 0x0098 */ unsigned long KeyboardInput;
  /* 0x009c */ unsigned long MouseInput;
} PROCESS_ENERGY_VALUES_EXTENSION, *PPROCESS_ENERGY_VALUES_EXTENSION; /* size: 0x00a0 */

typedef struct _PROCESS_EXTENDED_ENERGY_VALUES
{
  /* 0x0000 */ struct _PROCESS_ENERGY_VALUES Base;
  /* 0x0110 */ struct _PROCESS_ENERGY_VALUES_EXTENSION Extension;
} PROCESS_EXTENDED_ENERGY_VALUES, *PPROCESS_EXTENDED_ENERGY_VALUES; /* size: 0x01b0 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::ReactivateAndUndo::__l2::<lambda_8cabb7dbc03479911dce050d042462ba>
{
}; /* size: 0x0001 */

class XWinRT::detail::PresentationReference<HSTRING__ *,HSTRING__ *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> >
{
  /* 0x0000 */ struct HSTRING__* const* _pStorageAddress;
}; /* size: 0x0008 */

struct IOleCache2
{
}; /* size: 0x0008 */

class CRefExportCount
{
  /* 0x0000 */ long Padding_885[2];
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ unsigned long m_cExportCount;
  /* 0x0010 */ unsigned long m_IsZombie;
  /* 0x0014 */ unsigned long m_Status;
  /* 0x0018 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0020 */

typedef struct _ImageArchitectureHeader
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int AmaskValue : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned int : 7; /* bit position: 1 */
    /* 0x0000 */ unsigned int AmaskShift : 8; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long FirstEntryRVA;
} ImageArchitectureHeader, *PImageArchitectureHeader; /* size: 0x0008 */

class XWinRT::detail::LockHolder<XWinRT::ComLock,XWinRT::detail::TryAcquireRead>
{
  /* 0x0000 */ class XWinRT::ComLock* _pLock;
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::ShutDown::__l2::<lambda_df48ef4dbe2e03a3af657bac67c3638a>
{
}; /* size: 0x0001 */

struct wil_details_RecordCachedUsage::__l2::Change
{
  /* 0x0000 */ enum wil_details_ServiceReportingKind kind;
  /* 0x0004 */ unsigned int count;
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&PrivMemFree,unsigned short *>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_TLS_DIRECTORY32
{
  /* 0x0000 */ unsigned long StartAddressOfRawData;
  /* 0x0004 */ unsigned long EndAddressOfRawData;
  /* 0x0008 */ unsigned long AddressOfIndex;
  /* 0x000c */ unsigned long AddressOfCallBacks;
  /* 0x0010 */ unsigned long SizeOfZeroFill;
  union
  {
    /* 0x0014 */ unsigned long Characteristics;
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned long Reserved0 : 20; /* bit position: 0 */
      /* 0x0014 */ unsigned long Alignment : 4; /* bit position: 20 */
      /* 0x0014 */ unsigned long Reserved1 : 8; /* bit position: 24 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_TLS_DIRECTORY32, *PIMAGE_TLS_DIRECTORY32; /* size: 0x0018 */

struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

class CRefStabilize
{
  /* 0x0000 */ class CRefExportCount* m_pRefExportCount;
}; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&MIDL_user_free,unsigned short *>
{
}; /* size: 0x0001 */

typedef struct _LDR_FAILURE_DATA
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ wchar_t ImageName[32];
  /* 0x0044 */ wchar_t AdditionalInfo[32];
} LDR_FAILURE_DATA, *PLDR_FAILURE_DATA; /* size: 0x0084 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

struct wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct AsyncIPipeByte
{
}; /* size: 0x0008 */

typedef struct _NLSTABLEINFO
{
  /* 0x0000 */ struct _CPTABLEINFO OemTableInfo;
  /* 0x0040 */ struct _CPTABLEINFO AnsiTableInfo;
  /* 0x0080 */ unsigned short* UpperCaseTable;
  /* 0x0088 */ unsigned short* LowerCaseTable;
} NLSTABLEINFO, *PNLSTABLEINFO; /* size: 0x0090 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST
{
  /* 0x0000 */ unsigned long Reserved1;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ unsigned long ConflictsCounted;
  /* 0x000c */ unsigned long ConflictsListed;
  /* 0x0010 */ unsigned long RequiredBufferSize;
  /* 0x0014 */ long Padding_886;
  /* 0x0018 */ struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
} PLUGPLAY_CONTROL_CONFLICT_LIST, *PPLUGPLAY_CONTROL_CONFLICT_LIST; /* size: 0x0040 */

struct Windows::Foundation::IAsyncOperation<Windows::Foundation::Collections::IVector<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *> *>
{
}; /* size: 0x0008 */

typedef struct _GET_FILTER_FILE_IDENTIFIER_OUTPUT
{
  /* 0x0000 */ unsigned short FilterFileIdentifierLength;
  /* 0x0002 */ unsigned char FilterFileIdentifier[1];
  /* 0x0003 */ char __PADDING__[1];
} GET_FILTER_FILE_IDENTIFIER_OUTPUT, *PGET_FILTER_FILE_IDENTIFIER_OUTPUT; /* size: 0x0004 */

typedef struct _IMAGE_VXD_HEADER
{
  /* 0x0000 */ unsigned short e32_magic;
  /* 0x0002 */ unsigned char e32_border;
  /* 0x0003 */ unsigned char e32_worder;
  /* 0x0004 */ unsigned long e32_level;
  /* 0x0008 */ unsigned short e32_cpu;
  /* 0x000a */ unsigned short e32_os;
  /* 0x000c */ unsigned long e32_ver;
  /* 0x0010 */ unsigned long e32_mflags;
  /* 0x0014 */ unsigned long e32_mpages;
  /* 0x0018 */ unsigned long e32_startobj;
  /* 0x001c */ unsigned long e32_eip;
  /* 0x0020 */ unsigned long e32_stackobj;
  /* 0x0024 */ unsigned long e32_esp;
  /* 0x0028 */ unsigned long e32_pagesize;
  /* 0x002c */ unsigned long e32_lastpagesize;
  /* 0x0030 */ unsigned long e32_fixupsize;
  /* 0x0034 */ unsigned long e32_fixupsum;
  /* 0x0038 */ unsigned long e32_ldrsize;
  /* 0x003c */ unsigned long e32_ldrsum;
  /* 0x0040 */ unsigned long e32_objtab;
  /* 0x0044 */ unsigned long e32_objcnt;
  /* 0x0048 */ unsigned long e32_objmap;
  /* 0x004c */ unsigned long e32_itermap;
  /* 0x0050 */ unsigned long e32_rsrctab;
  /* 0x0054 */ unsigned long e32_rsrccnt;
  /* 0x0058 */ unsigned long e32_restab;
  /* 0x005c */ unsigned long e32_enttab;
  /* 0x0060 */ unsigned long e32_dirtab;
  /* 0x0064 */ unsigned long e32_dircnt;
  /* 0x0068 */ unsigned long e32_fpagetab;
  /* 0x006c */ unsigned long e32_frectab;
  /* 0x0070 */ unsigned long e32_impmod;
  /* 0x0074 */ unsigned long e32_impmodcnt;
  /* 0x0078 */ unsigned long e32_impproc;
  /* 0x007c */ unsigned long e32_pagesum;
  /* 0x0080 */ unsigned long e32_datapage;
  /* 0x0084 */ unsigned long e32_preload;
  /* 0x0088 */ unsigned long e32_nrestab;
  /* 0x008c */ unsigned long e32_cbnrestab;
  /* 0x0090 */ unsigned long e32_nressum;
  /* 0x0094 */ unsigned long e32_autodata;
  /* 0x0098 */ unsigned long e32_debuginfo;
  /* 0x009c */ unsigned long e32_debuglen;
  /* 0x00a0 */ unsigned long e32_instpreload;
  /* 0x00a4 */ unsigned long e32_instdemand;
  /* 0x00a8 */ unsigned long e32_heapsize;
  /* 0x00ac */ unsigned char e32_res3[12];
  /* 0x00b8 */ unsigned long e32_winresoff;
  /* 0x00bc */ unsigned long e32_winreslen;
  /* 0x00c0 */ unsigned short e32_devid;
  /* 0x00c2 */ unsigned short e32_ddkver;
} IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER; /* size: 0x00c4 */

class wil::details::weak_query_policy
{
}; /* size: 0x0001 */

class DragDropLogging::Instance::__l2::<lambda_de72991bb9618b65cb2927d0cc7a4ae8>
{
}; /* size: 0x0001 */

typedef struct _GS_HANDLER_DATA
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long EHandler : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned long UHandler : 1; /* bit position: 1 */
          /* 0x0000 */ unsigned long HasAlignment : 1; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
      /* 0x0000 */ long CookieOffset;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x0004 */ long AlignedBaseOffset;
  /* 0x0008 */ long Alignment;
} GS_HANDLER_DATA, *PGS_HANDLER_DATA; /* size: 0x000c */

class wil::details::<lambda_cd2002921047d4d26e2a55727e023aae>
{
}; /* size: 0x0001 */

struct wil_FeatureTestState;

struct tagACTCTXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* lpSource;
  /* 0x0010 */ unsigned short wProcessorArchitecture;
  /* 0x0012 */ unsigned short wLangId;
  /* 0x0014 */ long Padding_887;
  /* 0x0018 */ const wchar_t* lpAssemblyDirectory;
  /* 0x0020 */ const wchar_t* lpResourceName;
  /* 0x0028 */ const wchar_t* lpApplicationName;
  /* 0x0030 */ struct HINSTANCE__* hModule;
}; /* size: 0x0038 */

class XWinRT::CDefaultHashTraits<HSTRING__ *>
{
}; /* size: 0x0001 */

struct XWinRT::InterfaceLifetimeTraits
{
}; /* size: 0x0001 */

class XWinRT::CDefaultCompareTraits<HSTRING__ *>
{
}; /* size: 0x0001 */

typedef struct _HIBERFILE_BUCKET
{
  /* 0x0000 */ unsigned __int64 MaxPhysicalMemory;
  /* 0x0008 */ unsigned long PhysicalMemoryPercent[3];
  /* 0x0014 */ long __PADDING__[1];
} HIBERFILE_BUCKET, *PHIBERFILE_BUCKET; /* size: 0x0018 */

typedef struct _FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT
{
  /* 0x0000 */ enum _FILE_METADATA_OPTIMIZATION_STATE State;
  /* 0x0004 */ unsigned long AttributeListSize;
  /* 0x0008 */ unsigned long MetadataSpaceUsed;
  /* 0x000c */ unsigned long MetadataSpaceAllocated;
  /* 0x0010 */ unsigned long NumberOfFileRecords;
  /* 0x0014 */ unsigned long NumberOfResidentAttributes;
  /* 0x0018 */ unsigned long NumberOfNonresidentAttributes;
  /* 0x001c */ unsigned long TotalInProgress;
  /* 0x0020 */ unsigned long TotalPending;
} FILE_QUERY_METADATA_OPTIMIZATION_OUTPUT, *PFILE_QUERY_METADATA_OPTIMIZATION_OUTPUT; /* size: 0x0024 */

class wil::details::<lambda_161ef7638cd2cc94aeb4fe05f7a304b3>
{
}; /* size: 0x0001 */

struct FEATURE_ERROR
{
  /* 0x0000 */ HRESULT hr;
  /* 0x0004 */ unsigned short lineNumber;
  /* 0x0006 */ char Padding_888[2];
  /* 0x0008 */ const char* file;
  /* 0x0010 */ const char* process;
  /* 0x0018 */ const char* modulePath;
  /* 0x0020 */ unsigned int callerReturnAddressOffset;
  /* 0x0024 */ long Padding_889;
  /* 0x0028 */ const char* callerModule;
  /* 0x0030 */ const char* message;
  /* 0x0038 */ unsigned short originLineNumber;
  /* 0x003a */ char Padding_890[6];
  /* 0x0040 */ const char* originFile;
  /* 0x0048 */ const char* originModule;
  /* 0x0050 */ unsigned int originCallerReturnAddressOffset;
  /* 0x0054 */ long Padding_891;
  /* 0x0058 */ const char* originCallerModule;
  /* 0x0060 */ const char* originName;
}; /* size: 0x0068 */

struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&PrivMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
}; /* size: 0x0001 */

typedef struct _STREAMS_QUERY_ID_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned long StreamId;
} STREAMS_QUERY_ID_OUTPUT_BUFFER, *PSTREAMS_QUERY_ID_OUTPUT_BUFFER; /* size: 0x0004 */

typedef struct __WIL__WNF_TYPE_ID
{
  /* 0x0000 */ struct _GUID TypeId;
} _WIL__WNF_TYPE_ID, *P_WIL__WNF_TYPE_ID; /* size: 0x0010 */

typedef union _RTL_ELEVATION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ElevationEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long InstallerDetectEnabled : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReservedBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RTL_ELEVATION_FLAGS, *PRTL_ELEVATION_FLAGS; /* size: 0x0004 */

typedef struct _wil_details_UsageSubscriptionData
{
  /* 0x0000 */ unsigned int featureId;
  /* 0x0004 */ unsigned short serviceReportingKind;
  /* 0x0006 */ char __PADDING__[2];
} wil_details_UsageSubscriptionData, *Pwil_details_UsageSubscriptionData; /* size: 0x0008 */

typedef struct _OFLONGSTRUCTA
{
  /* 0x0000 */ unsigned int nErrCode;
  /* 0x0004 */ char szPathName[260];
} OFLONGSTRUCTA, *POFLONGSTRUCTA; /* size: 0x0108 */

typedef struct _OFLONGSTRUCTW
{
  /* 0x0000 */ unsigned int nErrCode;
  /* 0x0004 */ wchar_t szPathName[260];
} OFLONGSTRUCTW, *POFLONGSTRUCTW; /* size: 0x020c */

class wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> >
{
  /* 0x0000 */ wchar_t* m_ptr;
}; /* size: 0x0008 */

struct wistd::less<void>
{
}; /* size: 0x0001 */

struct FEATURE_STATE_CHANGE_SUBSCRIPTION__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct wistd::__struct_double
{
  /* 0x0000 */ double __lx;
}; /* size: 0x0008 */

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT
{
  union
  {
    /* 0x0000 */ unsigned long BufferLength;
    struct
    {
      /* 0x0000 */ unsigned char Buffer[1];
      /* 0x0001 */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} TXFS_READ_BACKUP_INFORMATION_OUT, *PTXFS_READ_BACKUP_INFORMATION_OUT; /* size: 0x0004 */

struct wil::details::string_allocator<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&MIDL_user_free,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_floating_point<float>
{
}; /* size: 0x0001 */

class CPictioFileStream
{
  /* 0x0000 */ long Padding_892[2];
  /* 0x0008 */ int _hfile;
  /* 0x000c */ long m_lRefs;
}; /* size: 0x0010 */

typedef struct _PROCESS_UPTIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 QueryInterruptTime;
  /* 0x0008 */ unsigned __int64 QueryUnbiasedTime;
  /* 0x0010 */ unsigned __int64 EndInterruptTime;
  /* 0x0018 */ unsigned __int64 TimeSinceCreation;
  /* 0x0020 */ unsigned __int64 Uptime;
  /* 0x0028 */ unsigned __int64 SuspendedTime;
  struct /* bitfield */
  {
    /* 0x0030 */ unsigned long HangCount : 4; /* bit position: 0 */
    /* 0x0030 */ unsigned long GhostCount : 4; /* bit position: 4 */
    /* 0x0030 */ unsigned long Crashed : 1; /* bit position: 8 */
    /* 0x0030 */ unsigned long Terminated : 1; /* bit position: 9 */
  }; /* bitfield */
  /* 0x0034 */ long __PADDING__[1];
} PROCESS_UPTIME_INFORMATION, *PPROCESS_UPTIME_INFORMATION; /* size: 0x0038 */

class CGenObject
{
  /* 0x0000 */ long Padding_893[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ unsigned long m_dwAspect;
  /* 0x0010 */ unsigned long m_dwSize;
  /* 0x0014 */ long m_lWidth;
  /* 0x0018 */ long m_lHeight;
  /* 0x001c */ long Padding_894;
  /* 0x0020 */ void* m_hPres;
  /* 0x0028 */ unsigned short m_cfFormat;
  /* 0x002a */ char Padding_895[6];
  /* 0x0030 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0038 */

class CLimitedWritableStorage::DestroyElement::__l2::<lambda_7d1fe11c787a4af78d8dd42692fd1f09>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
}; /* size: 0x0010 */

struct wistd::__type_list<wistd::__align_type<unsigned char>,wistd::__type_list<wistd::__align_type<unsigned short>,wistd::__type_list<wistd::__align_type<unsigned int>,wistd::__type_list<wistd::__align_type<unsigned long>,wistd::__type_list<wistd::__align_type<unsigned __int64>,wistd::__type_list<wistd::__align_type<double>,wistd::__type_list<wistd::__align_type<long double>,wistd::__type_list<wistd::__align_type<wistd::__struct_double>,wistd::__type_list<wistd::__align_type<wistd::__struct_double4>,wistd::__type_list<wistd::__align_type<int *>,wistd::__nat> > > > > > > > > >;

struct wil_details_RecordUsageResult
{
  /* 0x0000 */ int queueBackground;
  /* 0x0004 */ unsigned int countImmediate;
  /* 0x0008 */ enum wil_details_ServiceReportingKind kindImmediate;
  /* 0x000c */ unsigned int payloadId;
  /* 0x0010 */ int ignoredUse;
  /* 0x0014 */ int isWexpConfiguration;
}; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0018 */ wchar_t* VetoName;
  /* 0x0020 */ unsigned long VetoNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA, *PPLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA; /* size: 0x0028 */

class wil::details::<lambda_3a34d3073f23e15fe303eff655bcc4f6>
{
}; /* size: 0x0001 */

typedef struct _MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SizeOfInformation;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AttributesOffset;
  /* 0x0010 */ unsigned long AttributeCount;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ unsigned __int64 TypeId;
} MEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION, *PMEMORY_PARTITION_DEDICATED_MEMORY_INFORMATION; /* size: 0x0020 */

class CContainer_PolicySysFree
{
}; /* size: 0x0001 */

struct wil_details_FeatureDescriptor
{
  /* 0x0000 */ union wil_details_FeatureStateCache* featureStateCache;
  /* 0x0008 */ struct wil_details_FeatureReportingCache* featureReportingCache;
  /* 0x0010 */ unsigned int featureId;
  /* 0x0014 */ unsigned char changeTime;
  /* 0x0015 */ unsigned char isAlwaysDisabled;
  /* 0x0016 */ unsigned char isAlwaysEnabled;
  /* 0x0017 */ unsigned char isEnabledByDefault;
  /* 0x0018 */ const struct wil_details_FeatureDescriptor* const* requiresFeatures;
  /* 0x0020 */ unsigned char variant;
  /* 0x0021 */ char Padding_896[3];
  /* 0x0024 */ enum wil_FeatureVariantPayloadKind payloadKind;
  /* 0x0028 */ unsigned int payload;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct wistd::__type_list<unsigned short,wistd::__type_list<unsigned int,wistd::__type_list<unsigned long,wistd::__type_list<unsigned __int64,wistd::__nat> > > >;

union wil_details_FeatureStateCache
{
  union
  {
    /* 0x0000 */ unsigned int exchange;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned int stateCached : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned int hasNotificationCached : 1; /* bit position: 1 */
        /* 0x0000 */ unsigned int variantCached : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned int effectiveState : 1; /* bit position: 3 */
        /* 0x0000 */ unsigned int desiredState : 1; /* bit position: 4 */
        /* 0x0000 */ unsigned int configuredState : 2; /* bit position: 5 */
        /* 0x0000 */ unsigned int needsRefresh : 1; /* bit position: 7 */
        /* 0x0000 */ unsigned int hasNotification : 1; /* bit position: 8 */
        /* 0x0000 */ unsigned int isWexpConfiguration : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned int variant : 6; /* bit position: 10 */
        /* 0x0000 */ unsigned int unused : 16; /* bit position: 16 */
      }; /* bitfield */
      /* 0x0004 */ unsigned int payloadId;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 exchange64;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER
{
  /* 0x0000 */ unsigned short ChecksumAlgorithm;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Flags;
} FSCTL_SET_INTEGRITY_INFORMATION_BUFFER, *PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER; /* size: 0x0008 */

struct wistd::__make_signed<unsigned long,1>
{
}; /* size: 0x0001 */

struct wistd::__type_list<short,wistd::__type_list<int,wistd::__type_list<long,wistd::__type_list<__int64,wistd::__nat> > > >;

struct wil_FeatureState
{
  /* 0x0000 */ enum wil_FeatureEnabledState enabledState;
  /* 0x0004 */ unsigned char variant;
  /* 0x0005 */ char Padding_897[3];
  /* 0x0008 */ enum wil_FeatureVariantPayloadKind payloadKind;
  /* 0x000c */ unsigned int payload;
  /* 0x0010 */ int hasNotification;
  /* 0x0014 */ int isWexpConfiguration;
}; /* size: 0x0018 */

typedef struct __vcrt_va_list_is_reference<_UNICODE_STRING *>
{
} _vcrt_va_list_is_reference<_UNICODE_STRING *>, *P_vcrt_va_list_is_reference<_UNICODE_STRING *>; /* size: 0x0001 */

struct wistd::__libcpp_is_function_imp::__dummy_type
{
}; /* size: 0x0001 */

typedef struct __vcrt_va_list_is_reference<unsigned short * *>
{
} _vcrt_va_list_is_reference<unsigned short * *>, *P_vcrt_va_list_is_reference<unsigned short * *>; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<bool>
{
}; /* size: 0x0001 */

struct wil_details_FeatureTestState
{
  /* 0x0000 */ enum wil_details_FeatureTestStateKind kind;
  /* 0x0004 */ unsigned int featureId;
  /* 0x0008 */ enum wil_FeatureEnabledState state;
  /* 0x000c */ unsigned char variant;
  /* 0x000d */ char Padding_898[3];
  /* 0x0010 */ unsigned int payload;
  /* 0x0014 */ enum wil_FeatureVariantPayloadKind payloadKind;
  /* 0x0018 */ struct wil_details_FeatureTestState* next;
}; /* size: 0x0020 */

struct wistd::__libcpp_is_integral<wchar_t>
{
}; /* size: 0x0001 */

typedef struct _PROCESS_COMMIT_RELEASE_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long Eligible : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long ReleaseRepurposedMemResetCommit : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long ForceReleaseMemResetCommit : 1; /* bit position: 2 */
    /* 0x0004 */ unsigned long Spare : 29; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0008 */ unsigned __int64 CommitDebt;
  /* 0x0010 */ unsigned __int64 CommittedMemResetSize;
  /* 0x0018 */ unsigned __int64 RepurposedMemResetSize;
} PROCESS_COMMIT_RELEASE_INFORMATION, *PPROCESS_COMMIT_RELEASE_INFORMATION; /* size: 0x0020 */

typedef struct __WIL_RTL_SRWLOCK
{
  /* 0x0000 */ void* Ptr;
} _WIL_RTL_SRWLOCK, *P_WIL_RTL_SRWLOCK; /* size: 0x0008 */

class CTContainer_PolicyCoTaskMem
{
}; /* size: 0x0001 */

class CTContainer_PolicyLocalMem
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<int>
{
}; /* size: 0x0001 */

class CTContainer_PolicyHeapMem
{
}; /* size: 0x0001 */

class wil::details::StagingFailureInformation
{
  /* 0x0000 */ long Padding_899[26];
  /* 0x0068 */ char m_processName[64];
  /* 0x00a8 */ char m_callerModule[64];
  /* 0x00e8 */ char m_originCallerModule[64];
  /* 0x0128 */ char m_message[96];
}; /* size: 0x0188 */

typedef struct _RTL_GENERIC_TABLE
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* TableRoot;
  /* 0x0008 */ struct _LIST_ENTRY InsertOrderList;
  /* 0x0018 */ struct _LIST_ENTRY* OrderedPointer;
  /* 0x0020 */ unsigned long WhichOrderedElement;
  /* 0x0024 */ unsigned long NumberGenericTableElements;
  /* 0x0028 */ void* CompareRoutine /* function */;
  /* 0x0030 */ void* AllocateRoutine /* function */;
  /* 0x0038 */ void* FreeRoutine /* function */;
  /* 0x0040 */ void* TableContext;
} RTL_GENERIC_TABLE, *PRTL_GENERIC_TABLE; /* size: 0x0048 */

class CAutoHandle_Policy<void *>
{
}; /* size: 0x0001 */

struct wil::details_abi::buffer_range
{
  /* 0x0000 */ unsigned char* buffer;
  /* 0x0008 */ unsigned char* bufferEnd;
  /* 0x0010 */ unsigned char* bufferAllocEnd;
}; /* size: 0x0018 */

class CLimitedWritableStream::CopyTo::__l11::<lambda_85adfdbc59dc2fecc6c73766ac5726d0>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream>& spOuter;
  /* 0x0010 */ union _ULARGE_INTEGER& cb;
  /* 0x0018 */ union _ULARGE_INTEGER*& pcbRead;
  /* 0x0020 */ union _ULARGE_INTEGER*& pcbWritten;
}; /* size: 0x0028 */

struct wistd::__make_unsigned<bool,1>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HINSTANCE__ *>
{
}; /* size: 0x0001 */

struct MarshallingChannel
{
  /* 0x0000 */ long Padding_900[6];
  /* 0x0018 */ struct IMarshallingManager* m_pMarshaller;
  /* 0x0020 */ unsigned long m_dwDestContext;
  /* 0x0024 */ long Padding_901;
  /* 0x0028 */ void* m_pvDestContext;
  /* 0x0030 */ struct IUnknown* m_punkOuter;
  /* 0x0038 */ long m_refs;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

class CAutoHandle_Policy<HKEY__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HACCEL__ *>
{
}; /* size: 0x0001 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ long Padding_902;
  /* 0x0010 */ unsigned short* NetworkAddress;
  /* 0x0018 */ unsigned short* StringEndpoint;
  union
  {
    /* 0x0020 */ unsigned short* Reserved;
  } /* size: 0x0008 */ u1;
  /* 0x0028 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_W, *PRPC_BINDING_HANDLE_TEMPLATE_V1_W; /* size: 0x0038 */

class CAutoHandle_Policy<HWND__ *>
{
}; /* size: 0x0001 */

struct LEGACY_FRAME
{
  /* 0x0000 */ long Padding_903[4];
  /* 0x0010 */ void* m_pvArgs;
  /* 0x0018 */ const unsigned long m_iMethod;
  /* 0x001c */ long Padding_904;
  /* 0x0020 */ __int64 m_hrReturnValue;
  /* 0x0028 */ struct LEGACY_INTERCEPTOR* m_pInterceptor;
  /* 0x0030 */ struct ICallFrame* m_premoteFrame;
  /* 0x0038 */ struct ICallFrame* m_pmemoryFrame;
  /* 0x0040 */ int m_fAfterCall;
  /* 0x0044 */ long Padding_905;
  /* 0x0048 */ struct IUnknown* m_punkOuter;
  /* 0x0050 */ long m_refs;
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

class CAutoHandle_Policy<HDESK__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HICON__ *>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long StartingAddress;
  /* 0x0004 */ unsigned long EndingAddress;
  /* 0x0008 */ unsigned long EndOfPrologue;
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY; /* size: 0x000c */

class CMarshalImplPStream
{
  /* 0x0000 */ long Padding_906[2];
  /* 0x0008 */ struct IPersistStream* m_pPS;
}; /* size: 0x0010 */

class CBaseMoniker
{
  /* 0x0000 */ long Padding_907[4];
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ long Padding_908;
  /* 0x0018 */ class CMarshalImplPStream m_marshal;
}; /* size: 0x0028 */

struct tagABORTPATH
{
  /* 0x0000 */ struct tagEMR emr;
}; /* size: 0x0008 */

typedef struct __vc_attributes::restrictedAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::restrictedAttribute, *P_vc_attributes::restrictedAttribute; /* size: 0x0008 */

class CAutoHandle_Policy<HWINSTA__ *>
{
}; /* size: 0x0001 */

typedef struct _FILE_NAMES_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NAMES_INFORMATION, *PFILE_NAMES_INFORMATION; /* size: 0x0010 */

class wil::details_abi::heap_vector_iterator<wil_details_FeatureUsageSRUM>;

class CAutoHandle_Policy<HMENU__ *>
{
}; /* size: 0x0001 */

struct HTOUCHINPUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct wil_details_FeatureUsageSRUM
{
  /* 0x0000 */ unsigned int featureId;
  /* 0x0004 */ unsigned short serviceReportingKind;
  /* 0x0006 */ char Padding_909[2];
  /* 0x0008 */ unsigned long usageCount;
}; /* size: 0x000c */

struct DISPATCH_CLIENT_FRAME
{
  /* 0x0000 */ long Padding_910[22];
  /* 0x0058 */ int m_fDoneProxyPrecheck;
  /* 0x005c */ int m_fIsCopy;
  /* 0x0060 */ struct FRAME_RemoteInvoke m_remoteFrame;
  /* 0x00c0 */ struct tagDISPPARAMS m_dispParams;
  /* 0x00d8 */ struct tagVARIANT m_varResult;
  /* 0x00f0 */ struct tagEXCEPINFO m_excepInfo;
  /* 0x0130 */ unsigned int m_uArgErr;
  /* 0x0134 */ unsigned int m_aVarRefIdx[16];
  /* 0x0174 */ long Padding_911;
  /* 0x0178 */ struct tagVARIANT m_aVarRef[16];
  /* 0x02f8 */ struct tagVARIANT m_aVarArg[16];
  /* 0x0478 */ unsigned char* m_pBuffer;
}; /* size: 0x0480 */

class CTSmartPtr<unsigned short,CTContainer_PolicyCoTaskMem>
{
}; /* size: 0x0008 */

typedef struct _FILE_FS_METADATA_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalMetadataAllocationUnits;
  /* 0x0008 */ unsigned long SectorsPerAllocationUnit;
  /* 0x000c */ unsigned long BytesPerSector;
} FILE_FS_METADATA_SIZE_INFORMATION, *PFILE_FS_METADATA_SIZE_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_PIPE_REMOTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CollectDataTime;
  /* 0x0008 */ unsigned long MaximumCollectionCount;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_REMOTE_INFORMATION, *PFILE_PIPE_REMOTE_INFORMATION; /* size: 0x0010 */

class CAutoHandle_Policy<HBRUSH__ *>
{
}; /* size: 0x0001 */

class wil::details::pointer_range<wil_details_FeatureUsageSRUM *>
{
  /* 0x0000 */ struct wil_details_FeatureUsageSRUM* m_begin;
  /* 0x0008 */ struct wil_details_FeatureUsageSRUM* m_end;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerMTAHelper>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBrokerInternal,0,0>
{
}; /* size: 0x0001 */

class CTSmartObj<unsigned short *,CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem> >
{
  /* 0x0000 */ wchar_t* _obj;
}; /* size: 0x0008 */

typedef struct _FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX
{
  /* 0x0000 */ enum _STORAGE_RESERVE_ID StorageReserveId;
  /* 0x0004 */ long Padding_912;
  /* 0x0008 */ __int64 SpaceUsed;
} FILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX, *PFILE_QUERY_STORAGE_RESERVE_ID_INFORMATION_EX; /* size: 0x0010 */

class CItemMoniker
{
  /* 0x0000 */ long Padding_913[10];
  /* 0x0028 */ wchar_t* m_lpszItem;
  /* 0x0030 */ char* m_pszAnsiItem;
  /* 0x0038 */ unsigned short m_ccItem;
  /* 0x003a */ unsigned short m_cbAnsiItem;
  /* 0x003c */ long Padding_914;
  /* 0x0040 */ wchar_t* m_lpszDelimiter;
  /* 0x0048 */ char* m_pszAnsiDelimiter;
  /* 0x0050 */ unsigned short m_ccDelimiter;
  /* 0x0052 */ unsigned short m_cbAnsiDelimiter;
  /* 0x0054 */ unsigned long m_fHashValueValid : 1; /* bit position: 0 */
  /* 0x0058 */ unsigned long m_dwHashValue;
  /* 0x005c */ long Padding_915;
  /* 0x0060 */ class CMutexSem2 m_mxs;
}; /* size: 0x0090 */

struct tagINPUT_TRANSFORM
{
  union
  {
    struct
    {
      /* 0x0000 */ float _11;
      /* 0x0004 */ float _12;
      /* 0x0008 */ float _13;
      /* 0x000c */ float _14;
      /* 0x0010 */ float _21;
      /* 0x0014 */ float _22;
      /* 0x0018 */ float _23;
      /* 0x001c */ float _24;
      /* 0x0020 */ float _31;
      /* 0x0024 */ float _32;
      /* 0x0028 */ float _33;
      /* 0x002c */ float _34;
      /* 0x0030 */ float _41;
      /* 0x0034 */ float _42;
      /* 0x0038 */ float _43;
      /* 0x003c */ float _44;
    }; /* size: 0x0040 */
    /* 0x0000 */ float m[4][4];
  }; /* size: 0x0040 */
}; /* size: 0x0040 */

struct wil::StagingControl
{
  /* 0x0000 */ unsigned int id;
  /* 0x0004 */ enum wil::FeatureEnabledState state;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct wil::StagingControlVariant
{
  /* 0x0000 */ unsigned int id;
  /* 0x0004 */ unsigned char variantId;
  /* 0x0005 */ char Padding_916[3];
  /* 0x0008 */ unsigned int payload;
}; /* size: 0x000c */

class Interceptor::TryCreateFromTypeInfo::__l2::<lambda_99f6cd62eb16379982dc9ba875c44251>
{
  /* 0x0000 */ class Interceptor*& interceptor;
}; /* size: 0x0008 */

class wil::details::lambda_call<<lambda_99f6cd62eb16379982dc9ba875c44251> >
{
  /* 0x0000 */ class Interceptor::TryCreateFromTypeInfo::__l2::<lambda_99f6cd62eb16379982dc9ba875c44251> m_lambda;
  /* 0x0008 */ BOOL m_call;
}; /* size: 0x0010 */

typedef struct _SD_GLOBAL_CHANGE_OUTPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ChangeType;
  union
  {
    /* 0x0008 */ struct _SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
    /* 0x0008 */ struct _SD_QUERY_STATS_OUTPUT SdQueryStats;
    struct
    {
      /* 0x0008 */ struct _SD_ENUM_SDS_OUTPUT SdEnumSds;
      /* 0x0038 */ long __PADDING__[4];
    }; /* size: 0x0040 */
  }; /* size: 0x0040 */
} SD_GLOBAL_CHANGE_OUTPUT, *PSD_GLOBAL_CHANGE_OUTPUT; /* size: 0x0048 */

class CAutoHandle_Policy<HPEN__ *>
{
}; /* size: 0x0001 */

class wistd::__function::__func<<lambda_0c2afb377131ef1ab2244976d5fb45fc>,long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>
{
  /* 0x0000 */ long Padding_917[2];
  /* 0x0008 */ class wil::GetFullPathNameW::__l2::<lambda_0c2afb377131ef1ab2244976d5fb45fc> __f_;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,void *>
{
}; /* size: 0x0001 */

typedef struct _MULTI_TIME
{
  /* 0x0000 */ union _LARGE_INTEGER Qpc;
  /* 0x0008 */ union _LARGE_INTEGER HostQpc;
  /* 0x0010 */ __int64 SystemTime;
} MULTI_TIME, *PMULTI_TIME; /* size: 0x0018 */

class CTSmartObj<unsigned short * *,CTSmartPtr_PolicyComplete<CTContainer_PolicyCoTaskMem> >
{
  /* 0x0000 */ wchar_t** _obj;
}; /* size: 0x0008 */

typedef struct _ENCLAVE_CREATE_INFO_VBS
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned char OwnerID[32];
} ENCLAVE_CREATE_INFO_VBS, *PENCLAVE_CREATE_INFO_VBS; /* size: 0x0024 */

struct _DSA;

struct _DPA;

struct wil::details_abi::UsageIndexProperty
{
  /* 0x0000 */ const unsigned short c_size;
  /* 0x0002 */ enum wil::details_abi::CountSize c_countSize;
  /* 0x0003 */ char Padding_918;
  /* 0x0004 */ unsigned int count;
  /* 0x0008 */ unsigned short size;
  /* 0x000a */ char Padding_919[6];
  /* 0x0010 */ void* countBuffer;
  /* 0x0018 */ void* value;
}; /* size: 0x0020 */

struct KNOWNFOLDER_DEFINITION
{
  /* 0x0000 */ enum KF_CATEGORY category;
  /* 0x0004 */ long Padding_920;
  /* 0x0008 */ wchar_t* pszName;
  /* 0x0010 */ wchar_t* pszDescription;
  /* 0x0018 */ struct _GUID fidParent;
  /* 0x0028 */ wchar_t* pszRelativePath;
  /* 0x0030 */ wchar_t* pszParsingName;
  /* 0x0038 */ wchar_t* pszTooltip;
  /* 0x0040 */ wchar_t* pszLocalizedName;
  /* 0x0048 */ wchar_t* pszIcon;
  /* 0x0050 */ wchar_t* pszSecurity;
  /* 0x0058 */ unsigned long dwAttributes;
  /* 0x005c */ unsigned long kfdFlags;
  /* 0x0060 */ struct _GUID ftidType;
}; /* size: 0x0070 */

class CAutoHandle_Policy<HDC__ *>
{
}; /* size: 0x0001 */

struct std::_Invoker_pmf_pointer
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct __vc_attributes::nonbrowsableAttribute
{
} _vc_attributes::nonbrowsableAttribute, *P_vc_attributes::nonbrowsableAttribute; /* size: 0x0001 */

class CRPCTimeout
{
}; /* size: 0x0018 */

struct std::less<void>
{
}; /* size: 0x0001 */

class CUnkownOnlyWrapper
{
}; /* size: 0x0020 */

typedef struct _MEMORY_IMAGE_INFORMATION
{
  /* 0x0000 */ void* ImageBase;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  union
  {
    /* 0x0010 */ unsigned long ImageFlags;
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long ImagePartialMap : 1; /* bit position: 0 */
      /* 0x0010 */ unsigned long ImageNotExecutable : 1; /* bit position: 1 */
      /* 0x0010 */ unsigned long ImageSigningLevel : 4; /* bit position: 2 */
      /* 0x0010 */ unsigned long Reserved : 26; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0014 */ long __PADDING__[1];
} MEMORY_IMAGE_INFORMATION, *PMEMORY_IMAGE_INFORMATION; /* size: 0x0018 */

class CWrapperBase<IUnknown>
{
  /* 0x0000 */ long Padding_921[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IUnknown> m_spInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_spPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

struct IShellItem
{
}; /* size: 0x0008 */

struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable_imp<<lambda_b791f461fdcdf6803f8b1ec4cfa018be>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

class CDragDataObject
{
  /* 0x0000 */ long Padding_922[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_923;
  /* 0x0010 */ struct tagInterfaceData* _pIFDDataObject;
  /* 0x0018 */ int _fSourceIsAppContainer;
  /* 0x001c */ long Padding_924;
  /* 0x0020 */ struct IDataObject* _pIDataObject;
  /* 0x0028 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0030 */ unsigned long _dwSmId;
}; /* size: 0x0038 */

class wil::details::<lambda_7423537f294e7787dca37fdc0cb8c286>
{
}; /* size: 0x0001 */

struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable<<lambda_b791f461fdcdf6803f8b1ec4cfa018be> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef struct _CM_SERIAL_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long BaudClock;
} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA; /* size: 0x0008 */

class CCoTaskMemPtr<unsigned char>
{
}; /* size: 0x0008 */

typedef struct _EVENTSFORLOGFILE
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ wchar_t szLogicalLogFile[256];
  /* 0x0204 */ unsigned long ulNumRecords;
  /* 0x0208 */ struct _EVENTLOGRECORD* pEventLogRecords /* zero-length array */;
} EVENTSFORLOGFILE, *PEVENTSFORLOGFILE; /* size: 0x0208 */

class CExtentList
{
  /* 0x0000 */ unsigned long m_cbMonikerExtents;
  /* 0x0004 */ long Padding_925;
  /* 0x0008 */ unsigned char* m_pchMonikerExtents;
}; /* size: 0x0010 */

class CFileMoniker
{
  /* 0x0000 */ long Padding_926[10];
  /* 0x0028 */ struct _GUID m_clsid;
  /* 0x0038 */ class CExtentList m_ExtentList;
  /* 0x0048 */ wchar_t* m_szPath;
  /* 0x0050 */ char* m_pszAnsiPath;
  /* 0x0058 */ unsigned short m_ccPath;
  /* 0x005a */ unsigned short m_cbAnsiPath;
  /* 0x005c */ unsigned long m_dwHashValue;
  struct /* bitfield */
  {
    /* 0x0060 */ unsigned long m_fUnicodeExtent : 1; /* bit position: 0 */
    /* 0x0060 */ unsigned long m_fClassVerified : 1; /* bit position: 1 */
    /* 0x0060 */ unsigned long m_fHashValueValid : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0064 */ unsigned char m_fShellLinkInitialized;
  /* 0x0065 */ char Padding_927[3];
  struct /* bitfield */
  {
    /* 0x0068 */ unsigned long m_fTrackingEnabled : 1; /* bit position: 0 */
    /* 0x0068 */ unsigned long m_fSaveShellLink : 1; /* bit position: 1 */
    /* 0x0068 */ unsigned long m_fDirty : 1; /* bit position: 2 */
    /* 0x0068 */ unsigned long m_fReduceEnabled : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x006c */ unsigned short m_cAnti;
  /* 0x006e */ unsigned short m_endServer;
  /* 0x0070 */ enum CFileMoniker::olever m_ole1;
  /* 0x0074 */ long Padding_928;
  /* 0x0078 */ struct IShellLinkW* m_pShellLink;
  /* 0x0080 */ class CTrackingFileMoniker _tfm;
  /* 0x0090 */ class CMutexSem2 m_mxs;
}; /* size: 0x00c0 */

typedef struct _AUTHENTICATION_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ enum _AUTH_TYPE atAuthenticationType;
  /* 0x0008 */ const wchar_t* pcwszUser;
  /* 0x0010 */ const wchar_t* pcwszPassword;
} AUTHENTICATION_INFO, *PAUTHENTICATION_INFO; /* size: 0x0018 */

struct IShellLinkW
{
}; /* size: 0x0008 */

typedef struct _PO_SPR_ACTIVE_SESSION_DATA
{
  /* 0x0000 */ unsigned char Start;
  /* 0x0001 */ char Padding_929[3];
  /* 0x0004 */ struct _GUID ActiveSessionGuid;
} PO_SPR_ACTIVE_SESSION_DATA, *PPO_SPR_ACTIVE_SESSION_DATA; /* size: 0x0014 */

typedef struct _SYSTEM_POOL_LIMIT_INFO
{
  /* 0x0000 */ unsigned long PoolTag;
  /* 0x0004 */ long Padding_930;
  /* 0x0008 */ struct _SYSTEM_POOL_LIMIT_MEM_INFO MemLimits[2];
  /* 0x0028 */ struct _WNF_STATE_NAME NotificationHandle;
} SYSTEM_POOL_LIMIT_INFO, *PSYSTEM_POOL_LIMIT_INFO; /* size: 0x0030 */

typedef struct _SYSTEM_AUDIT_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE; /* size: 0x0030 */

struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable_imp<<lambda_8db0ce862824541f40dfb767113f1e28>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct wistd::function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>::__callable<<lambda_8db0ce862824541f40dfb767113f1e28> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct wil::details_abi::RawUsageIndex::Header
{
  /* 0x0000 */ unsigned short formatVersion;
  /* 0x0002 */ unsigned short version;
  /* 0x0004 */ unsigned short indexSize;
  /* 0x0006 */ unsigned short valueSize;
  /* 0x0008 */ enum wil::details_abi::CountSize indexCountSize;
  /* 0x0009 */ enum wil::details_abi::CountSize valueCountSize;
}; /* size: 0x000a */

struct tagOLEVERB
{
  /* 0x0000 */ long lVerb;
  /* 0x0004 */ long Padding_931;
  /* 0x0008 */ wchar_t* lpszVerbName;
  /* 0x0010 */ unsigned long fuFlags;
  /* 0x0014 */ unsigned long grfAttribs;
}; /* size: 0x0018 */

struct wistd::__function::__maybe_derive_from_unary_function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>
{
}; /* size: 0x0001 */

class wil::com_ptr_t<IOleVerbIterator,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IOleVerbIterator* m_ptr;
}; /* size: 0x0008 */

struct wistd::__function::__maybe_derive_from_binary_function<bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>
{
}; /* size: 0x0001 */

typedef struct _KERNEL_CET_CONTEXT
{
  /* 0x0000 */ unsigned __int64 Ssp;
  /* 0x0008 */ unsigned __int64 Rip;
  /* 0x0010 */ unsigned short SegCs;
  union
  {
    /* 0x0012 */ unsigned short AllFlags;
    struct /* bitfield */
    {
      /* 0x0012 */ unsigned short UseWrss : 1; /* bit position: 0 */
      /* 0x0012 */ unsigned short PopShadowStackOne : 1; /* bit position: 1 */
      /* 0x0012 */ unsigned short Unused : 14; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x0014 */ unsigned short Fill[2];
} KERNEL_CET_CONTEXT, *PKERNEL_CET_CONTEXT; /* size: 0x0018 */

struct tagMDICREATESTRUCTA
{
  /* 0x0000 */ const char* szClass;
  /* 0x0008 */ const char* szTitle;
  /* 0x0010 */ void* hOwner;
  /* 0x0018 */ int x;
  /* 0x001c */ int y;
  /* 0x0020 */ int cx;
  /* 0x0024 */ int cy;
  /* 0x0028 */ unsigned long style;
  /* 0x002c */ long Padding_932;
  /* 0x0030 */ __int64 lParam;
}; /* size: 0x0038 */

typedef struct _OSVERSIONINFOEX3A
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  union
  {
    /* 0x0010 */ unsigned long dwPlatformId;
    /* 0x0010 */ unsigned long dwQfeNumber;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0014 */ char szCSDVersion[128];
    /* 0x0014 */ char szLayerAttrib[128];
  }; /* size: 0x0080 */
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
  /* 0x009c */ unsigned long wSuiteMaskEx;
  /* 0x00a0 */ unsigned long wReserved2;
  union
  {
    union
    {
      /* 0x00a4 */ unsigned short wRawInput16;
      struct /* bitfield */
      {
        /* 0x00a4 */ unsigned short wLayerNumber : 12; /* bit position: 0 */
        /* 0x00a4 */ unsigned short wAttribSelector : 4; /* bit position: 12 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Input;
  /* 0x00a6 */ unsigned short wLayerCount;
  /* 0x00a8 */ unsigned long dwLayerFlags;
} OSVERSIONINFOEX3A, *POSVERSIONINFOEX3A; /* size: 0x00ac */

struct wil::details_abi::SerializedFailure
{
  /* 0x0000 */ HRESULT hr;
  /* 0x0004 */ unsigned short lineNumber;
  /* 0x0006 */ unsigned short file;
  /* 0x0008 */ unsigned short modulePath;
  /* 0x000a */ unsigned short callerModule;
  /* 0x000c */ unsigned int callerReturnAddressOffset;
  /* 0x0010 */ unsigned short message;
  /* 0x0012 */ unsigned short originLineNumber;
  /* 0x0014 */ unsigned short originFile;
  /* 0x0016 */ unsigned short originModule;
  /* 0x0018 */ unsigned int originCallerReturnAddressOffset;
  /* 0x001c */ unsigned short originCallerModule;
  /* 0x001e */ unsigned short originName;
  /* 0x0020 */ unsigned short process;
  /* 0x0022 */ char __PADDING__[2];
}; /* size: 0x0024 */

class wil::details::pointer_range<__WIL__WNF_STATE_NAME const *>
{
  /* 0x0000 */ const struct __WIL__WNF_STATE_NAME* m_begin;
  /* 0x0008 */ const struct __WIL__WNF_STATE_NAME* m_end;
}; /* size: 0x0010 */

typedef struct _RTL_IMAGE_MITIGATION_USER_POINTER_AUTH_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY PointerAuthUserIp;
} RTL_IMAGE_MITIGATION_USER_POINTER_AUTH_POLICY, *PRTL_IMAGE_MITIGATION_USER_POINTER_AUTH_POLICY; /* size: 0x0008 */

typedef struct __vc_attributes::helpstringcontextAttribute
{
  /* 0x0000 */ int contextid;
} _vc_attributes::helpstringcontextAttribute, *P_vc_attributes::helpstringcontextAttribute; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> const >;

struct IOleVerb
{
}; /* size: 0x0008 */

class wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0>
{
}; /* size: 0x0040 */

class wil::details_abi::UsageIndexBuffer<unsigned int,1>
{
}; /* size: 0x0040 */

struct wil::details_abi::UsageIndexes
{
  /* 0x0000 */ class wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,0> device;
  /* 0x0040 */ class wil::details_abi::UsageIndex<enum wil_details_ServiceReportingKind,unsigned int,2> unique;
  /* 0x0080 */ class wil::details_abi::UsageIndexBuffer<unsigned int,1> error;
}; /* size: 0x00c0 */

typedef struct _CRYPT_TIMESTAMP_PARA
{
  /* 0x0000 */ const char* pszTSAPolicyId;
  /* 0x0008 */ int fRequestCerts;
  /* 0x000c */ long Padding_933;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Nonce;
  /* 0x0020 */ unsigned long cExtension;
  /* 0x0024 */ long Padding_934;
  /* 0x0028 */ struct _CERT_EXTENSION* rgExtension;
} CRYPT_TIMESTAMP_PARA, *PCRYPT_TIMESTAMP_PARA; /* size: 0x0030 */

class ITrackingMoniker
{
}; /* size: 0x0008 */

struct IElementBehavior
{
}; /* size: 0x0008 */

class wistd::function<bool __cdecl(enum wil_details_ServiceReportingKind,unsigned int,unsigned int)>;

typedef struct _RTL_BARRIER
{
  union
  {
    struct
    {
      /* 0x0000 */ volatile long Barrier;
      /* 0x0004 */ long LeftBarrier;
      /* 0x0008 */ void* WaitEvent[2];
      /* 0x0018 */ long TotalProcessors;
      /* 0x001c */ unsigned long Spins;
    }; /* size: 0x0020 */
    struct
    {
      /* 0x0000 */ unsigned long Reserved1;
      /* 0x0004 */ unsigned long Reserved2;
      /* 0x0008 */ unsigned __int64 Reserved3[2];
      /* 0x0018 */ unsigned long Reserved4;
      /* 0x001c */ unsigned long Reserved5;
    } /* size: 0x0020 */ DUMMYRESERVEDSTRUCTNAME;
  }; /* size: 0x0020 */
} RTL_BARRIER, *PRTL_BARRIER; /* size: 0x0020 */

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_935;
  union
  {
    /* 0x0008 */ struct _RTL_UMS_CONTEXT* RtlUmsContext;
    /* 0x0008 */ void* UmsContext;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ struct _RTL_UMS_COMPLETION_LIST* RtlUmsCompletionList;
    /* 0x0010 */ void* UmsCompletionList;
  }; /* size: 0x0008 */
} UMS_CREATE_THREAD_ATTRIBUTES, *PUMS_CREATE_THREAD_ATTRIBUTES; /* size: 0x0018 */

typedef struct __vc_attributes::rangeAttribute
{
  /* 0x0000 */ int low_val;
  /* 0x0004 */ int high_val;
} _vc_attributes::rangeAttribute, *P_vc_attributes::rangeAttribute; /* size: 0x0008 */

class CAntiMoniker
{
  /* 0x0000 */ long Padding_936[10];
  /* 0x0028 */ unsigned long m_count;
}; /* size: 0x0030 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_INFLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_INFLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_INFLAGS>; /* size: 0x0001 */

typedef struct _RTL_UNLOAD_EVENT_TRACE64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ unsigned long Version[2];
  /* 0x0064 */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE64, *PRTL_UNLOAD_EVENT_TRACE64; /* size: 0x0068 */

class wistd::function<bool __cdecl(unsigned int,void *,unsigned __int64,unsigned int)>;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStream> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IStream>* ptr_;
}; /* size: 0x0008 */

typedef struct __vc_attributes::helpcontextAttribute
{
  /* 0x0000 */ const char* helpcontext_value;
} _vc_attributes::helpcontextAttribute, *P_vc_attributes::helpcontextAttribute; /* size: 0x0008 */

class RegistryInsertableCandidate
{
  /* 0x0000 */ long Padding_937[4];
  /* 0x0010 */ class Microsoft::WRL::Wrappers::HString _progId;
  /* 0x0018 */ struct _GUID _classId;
  /* 0x0028 */ class RegistryKey _progIdKey;
  /* 0x0030 */ class RegistryKey _clsidKey;
}; /* size: 0x0038 */

class CMapStringToPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

typedef struct _devicemodeW
{
  /* 0x0000 */ wchar_t dmDeviceName[32];
  /* 0x0040 */ unsigned short dmSpecVersion;
  /* 0x0042 */ unsigned short dmDriverVersion;
  /* 0x0044 */ unsigned short dmSize;
  /* 0x0046 */ unsigned short dmDriverExtra;
  /* 0x0048 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x004c */ short dmOrientation;
      /* 0x004e */ short dmPaperSize;
      /* 0x0050 */ short dmPaperLength;
      /* 0x0052 */ short dmPaperWidth;
      /* 0x0054 */ short dmScale;
      /* 0x0056 */ short dmCopies;
      /* 0x0058 */ short dmDefaultSource;
      /* 0x005a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x004c */ struct _POINTL dmPosition;
      /* 0x0054 */ unsigned long dmDisplayOrientation;
      /* 0x0058 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x005c */ short dmColor;
  /* 0x005e */ short dmDuplex;
  /* 0x0060 */ short dmYResolution;
  /* 0x0062 */ short dmTTOption;
  /* 0x0064 */ short dmCollate;
  /* 0x0066 */ wchar_t dmFormName[32];
  /* 0x00a6 */ unsigned short dmLogPixels;
  /* 0x00a8 */ unsigned long dmBitsPerPel;
  /* 0x00ac */ unsigned long dmPelsWidth;
  /* 0x00b0 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x00b4 */ unsigned long dmDisplayFlags;
    /* 0x00b4 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x00b8 */ unsigned long dmDisplayFrequency;
  /* 0x00bc */ unsigned long dmICMMethod;
  /* 0x00c0 */ unsigned long dmICMIntent;
  /* 0x00c4 */ unsigned long dmMediaType;
  /* 0x00c8 */ unsigned long dmDitherType;
  /* 0x00cc */ unsigned long dmReserved1;
  /* 0x00d0 */ unsigned long dmReserved2;
  /* 0x00d4 */ unsigned long dmPanningWidth;
  /* 0x00d8 */ unsigned long dmPanningHeight;
} devicemodeW, *PdevicemodeW; /* size: 0x00dc */

class CLimitedWritableStream
{
}; /* size: 0x0020 */

class CLimitedStreamBase::UnlockRegion::__l2::<lambda_f9b686faf07558546d2e0b9f147c5283>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ union _ULARGE_INTEGER& libOffset;
  /* 0x0010 */ union _ULARGE_INTEGER& cb;
  /* 0x0018 */ unsigned long& dwLockType;
}; /* size: 0x0020 */

class ReferencedRegistryKey
{
}; /* size: 0x0018 */

class wil::details_abi::heap_vector_iterator<wil::details_abi::SubscriptionList::Subscription>;

typedef struct _SYSTEM_VERIFIER_ISSUE
{
  /* 0x0000 */ unsigned __int64 IssueType;
  /* 0x0008 */ void* Address;
  /* 0x0010 */ unsigned __int64 Parameters[2];
} SYSTEM_VERIFIER_ISSUE, *PSYSTEM_VERIFIER_ISSUE; /* size: 0x0020 */

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION
{
  /* 0x0000 */ unsigned long CancelProbability;
  /* 0x0004 */ unsigned long CancelThreshold;
  /* 0x0008 */ unsigned long CompletionThreshold;
  /* 0x000c */ unsigned long CancellationVerifierDisabled;
  /* 0x0010 */ unsigned long AvailableIssues;
  /* 0x0014 */ long Padding_938;
  /* 0x0018 */ struct _SYSTEM_VERIFIER_ISSUE Issues[128];
} SYSTEM_VERIFIER_CANCELLATION_INFORMATION, *PSYSTEM_VERIFIER_CANCELLATION_INFORMATION; /* size: 0x1018 */

struct IAsyncInfo
{
}; /* size: 0x0008 */

typedef struct _SERVICE_NOTIFY_2W
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_939;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0040 */ unsigned long dwNotificationTriggered;
  /* 0x0044 */ long Padding_940;
  /* 0x0048 */ wchar_t* pszServiceNames;
} SERVICE_NOTIFY_2W, *PSERVICE_NOTIFY_2W; /* size: 0x0050 */

typedef struct _FILE_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFORMATION, *PFILE_FULL_DIR_INFORMATION; /* size: 0x0048 */

class CBindCtx
{
  /* 0x0000 */ long Padding_941[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_942;
  /* 0x0010 */ struct tagBIND_OPTS3 m_bindopts;
  /* 0x0040 */ class CBindCtx::CObjList* m_pFirstObj;
  /* 0x0048 */ class CMapStringToPtr* m_pMap;
  /* 0x0050 */ BOOL m_trustedRotOnly;
}; /* size: 0x0058 */

typedef union _RTL_TICK_LOCK
{
  union
  {
    /* 0x0000 */ unsigned __int64 AsULong64;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Busy : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Ticks : 63; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0008 */
} RTL_TICK_LOCK, *PRTL_TICK_LOCK; /* size: 0x0008 */

class CBindCtx::CObjList
{
  /* 0x0000 */ struct IUnknown* m_punk;
  /* 0x0008 */ class CBindCtx::CObjList* m_pNext;
}; /* size: 0x0010 */

typedef struct _CALL_FRAME
{
  /* 0x0000 */ void* ReturnAddress;
  /* 0x0008 */ void* Param1Home;
  /* 0x0010 */ void* Param2Home;
  /* 0x0018 */ void* Param3Home;
  /* 0x0020 */ void* Param4Home;
} CALL_FRAME, *PCALL_FRAME; /* size: 0x0028 */

class wil::details_abi::FeatureStateData
{
  /* 0x0000 */ class wil::srwlock m_lock;
  /* 0x0008 */ struct wil::details_abi::UsageIndexes m_usage;
  /* 0x00c8 */ class wil::details_abi::SubscriptionList m_processWideUsageFlushSubscriptions;
}; /* size: 0x0110 */

typedef struct _MEMORY_WORKING_SET_BLOCK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 Node : 3; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 VirtualPage : 52; /* bit position: 12 */
  }; /* bitfield */
} MEMORY_WORKING_SET_BLOCK, *PMEMORY_WORKING_SET_BLOCK; /* size: 0x0008 */

typedef struct _CMSG_SIGNER_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_943;
  /* 0x0008 */ struct _CERT_INFO* pCertInfo;
  union
  {
    /* 0x0010 */ unsigned __int64 hCryptProv;
    /* 0x0010 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long dwKeySpec;
  /* 0x001c */ long Padding_944;
  /* 0x0020 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0038 */ void* pvHashAuxInfo;
  /* 0x0040 */ unsigned long cAuthAttr;
  /* 0x0044 */ long Padding_945;
  /* 0x0048 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0050 */ unsigned long cUnauthAttr;
  /* 0x0054 */ long Padding_946;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
} CMSG_SIGNER_ENCODE_INFO, *PCMSG_SIGNER_ENCODE_INFO; /* size: 0x0060 */

struct IMrtResourceManager
{
}; /* size: 0x0008 */

struct IForegroundTransfer
{
}; /* size: 0x0008 */

typedef struct _ENCLAVE_INIT_INFO_SGX
{
  /* 0x0000 */ unsigned char SigStruct[1808];
  /* 0x0710 */ unsigned char Reserved1[240];
  /* 0x0800 */ unsigned char EInitToken[304];
  /* 0x0930 */ unsigned char Reserved2[1744];
} ENCLAVE_INIT_INFO_SGX, *PENCLAVE_INIT_INFO_SGX; /* size: 0x1000 */

typedef struct _RTL_HASH_TABLE
{
  /* 0x0000 */ unsigned long EntryCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long MaskBitCount : 5; /* bit position: 0 */
    /* 0x0004 */ unsigned long BucketCount : 27; /* bit position: 5 */
  }; /* bitfield */
  /* 0x0008 */ struct _SINGLE_LIST_ENTRY* Buckets;
} RTL_HASH_TABLE, *PRTL_HASH_TABLE; /* size: 0x0010 */

struct IComProgIdIterator
{
}; /* size: 0x0008 */

class CWrapperBase<IStorage>
{
  /* 0x0000 */ long Padding_947[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStorage> m_spInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_spPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned __int64 RootIndex;
  /* 0x0010 */ unsigned char CancelResolution;
  /* 0x0011 */ unsigned char NoMoreEntries;
  /* 0x0012 */ char Padding_948[6];
  /* 0x0018 */ struct _UNICODE_STRING Root;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT; /* size: 0x0028 */

class CRotHintTable
{
  /* 0x0000 */ unsigned char* _pbHintArray;
}; /* size: 0x0008 */

typedef struct _RTL_RETPOLINE_BINARY_INFO
{
  /* 0x0000 */ long RetpolineStubsStartRva;
  /* 0x0004 */ unsigned long CfgDispatchFunctionPtrRva;
  /* 0x0008 */ unsigned long IATRva;
  /* 0x000c */ unsigned long IATSize;
  /* 0x0010 */ long* ImportRvas;
  /* 0x0018 */ unsigned __int64* IAT;
  /* 0x0020 */ void* ImageBase;
  /* 0x0028 */ void* CheckFunction /* function */;
} RTL_RETPOLINE_BINARY_INFO, *PRTL_RETPOLINE_BINARY_INFO; /* size: 0x0030 */

class OleClassInfoInsertableCandidate
{
  /* 0x0000 */ long Padding_949[4];
  /* 0x0010 */ struct _GUID m_classId;
  /* 0x0020 */ class wil::com_ptr_t<IOleClassInfo,wil::err_returncode_policy> m_oleClassInfo;
  /* 0x0028 */ class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy> m_resourceManager;
  /* 0x0030 */ class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy> m_resourceContext;
  /* 0x0038 */ BOOL m_insertable;
  /* 0x0039 */ BOOL m_isControl;
}; /* size: 0x0040 */

class RegistryConversionClass
{
  /* 0x0000 */ long Padding_950[4];
  /* 0x0010 */ struct _GUID _classId;
  /* 0x0020 */ class RegistryKey _clsidKey;
}; /* size: 0x0028 */

struct wistd::default_delete<wil::details::folder_change_reader_state>
{
}; /* size: 0x0001 */

typedef struct _SERVICE_PRESHUTDOWN_INFO
{
  /* 0x0000 */ unsigned long dwPreshutdownTimeout;
} SERVICE_PRESHUTDOWN_INFO, *PSERVICE_PRESHUTDOWN_INFO; /* size: 0x0004 */

class CTmpMkEqBuf
{
  /* 0x0000 */ struct _MnkEqBuf _mkeqbuf;
  /* 0x0008 */ unsigned char _abData[2047];
}; /* size: 0x0808 */

class Microsoft::WRL::ComPtr<ComClassIterator>
{
  /* 0x0000 */ class ComClassIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _SERVICE_STATUS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
} SERVICE_STATUS, *PSERVICE_STATUS; /* size: 0x001c */

typedef struct _ENUM_SERVICE_STATUSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ char* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS ServiceStatus;
  /* 0x002c */ long __PADDING__[1];
} ENUM_SERVICE_STATUSA, *PENUM_SERVICE_STATUSA; /* size: 0x0030 */

struct IEnumUnknown
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::atl::support_error_infoAttribute
{
  /* 0x0000 */ const char* error_interface;
} _vc_attributes::atl::support_error_infoAttribute, *P_vc_attributes::atl::support_error_infoAttribute; /* size: 0x0008 */

class wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>
{
  /* 0x0000 */ volatile long m_refCount;
  /* 0x0004 */ long Padding_951;
  /* 0x0008 */ class wil::unique_any_t<wil::mutex_t<wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *) noexcept,&wil::details::CloseHandle,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t> >,wil::err_returncode_policy> > m_mutex;
  /* 0x0010 */ class wil::details_abi::SemaphoreValue m_value;
  /* 0x0020 */ class wil::details_abi::FeatureStateData m_data;
}; /* size: 0x0130 */

class MapEnumToSQMData<enum RpcssSQMFlags>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> const >;

typedef struct _FILE_BASIC_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFO, *PFILE_BASIC_INFO; /* size: 0x0028 */

class wil::details::<lambda_915176d23a9d56f8e3fb39ade8c83749>
{
}; /* size: 0x0001 */

struct std::plus<void>
{
}; /* size: 0x0001 */

typedef struct _CSV_IS_OWNED_BY_CSVFS
{
  /* 0x0000 */ unsigned char OwnedByCSVFS;
} CSV_IS_OWNED_BY_CSVFS, *PCSV_IS_OWNED_BY_CSVFS; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComClassIterator> >;

typedef struct _CERT_POLICY_ID
{
  /* 0x0000 */ unsigned long cCertPolicyElementId;
  /* 0x0004 */ long Padding_952;
  /* 0x0008 */ char** rgpszCertPolicyElementId;
} CERT_POLICY_ID, *PCERT_POLICY_ID; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> >
{
}; /* size: 0x0008 */

struct utl::hash<bool>
{
}; /* size: 0x0001 */

struct tagWINDOWPLACEMENT
{
  /* 0x0000 */ unsigned int length;
  /* 0x0004 */ unsigned int flags;
  /* 0x0008 */ unsigned int showCmd;
  /* 0x000c */ struct tagPOINT ptMinPosition;
  /* 0x0014 */ struct tagPOINT ptMaxPosition;
  /* 0x001c */ struct tagRECT rcNormalPosition;
}; /* size: 0x002c */

struct wistd::__compressed_pair_elem<wil::details::folder_change_reader_state *,0,0>
{
  /* 0x0000 */ struct wil::details::folder_change_reader_state* __value_;
}; /* size: 0x0008 */

struct wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,wistd::integral_constant<unsigned __int64,0>,void *,void *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

struct tagNEWTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char Padding_953[3];
  /* 0x0038 */ unsigned long ntmFlags;
  /* 0x003c */ unsigned int ntmSizeEM;
  /* 0x0040 */ unsigned int ntmCellHeight;
  /* 0x0044 */ unsigned int ntmAvgWidth;
}; /* size: 0x0048 */

struct tagNEWTEXTMETRICEXA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICA ntmTm;
  /* 0x0048 */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0060 */

class Microsoft::WRL::ComPtr<IAsyncInfo>
{
  /* 0x0000 */ struct IAsyncInfo* ptr_;
}; /* size: 0x0008 */

struct SAFEARRAY_INTERNAL
{
  union
  {
    /* 0x0000 */ struct _GUID iid;
    struct
    {
      /* 0x0000 */ long __dummy0[3];
      /* 0x000c */ long vt;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ unsigned long __dummy1[2];
      /* 0x0008 */ struct IRecordInfo* piri;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0010 */ struct tagSAFEARRAY array;
}; /* size: 0x0030 */

class Microsoft::WRL::ComPtr<IEnumSTATSTG>
{
  /* 0x0000 */ struct IEnumSTATSTG* ptr_;
}; /* size: 0x0008 */

typedef struct __vc_attributes::readonlyAttribute
{
} _vc_attributes::readonlyAttribute, *P_vc_attributes::readonlyAttribute; /* size: 0x0001 */

typedef struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER
{
  /* 0x0000 */ unsigned long RangeCount;
  /* 0x0004 */ long Padding_954;
  /* 0x0008 */ struct _REFS_DEALLOCATE_RANGES_RANGE Ranges[1];
} REFS_DEALLOCATE_RANGES_INPUT_BUFFER, *PREFS_DEALLOCATE_RANGES_INPUT_BUFFER; /* size: 0x0018 */

struct utl::integral_constant<bool,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct tagAXISINFOA
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ unsigned char axAxisName[16];
}; /* size: 0x0018 */

struct tagAXESLISTA
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOA axlAxisInfo[16];
}; /* size: 0x0188 */

struct tagENUMTEXTMETRICA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXA etmNewTextMetricEx;
  /* 0x0060 */ struct tagAXESLISTA etmAxesList;
}; /* size: 0x01e8 */

struct IViewObject2
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IAsyncInfo> const >;

class wistd::unique_ptr<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>,wil::process_heap_deleter>
{
  /* 0x0000 */ class wistd::__compressed_pair<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *,wil::process_heap_deleter> __ptr_;
}; /* size: 0x0008 */

class utl::numeric_limits<bool>
{
  union
  {
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const BOOL is_integer;
    /* 0x0000 */ const BOOL is_exact;
    /* 0x0000 */ const int radix;
    /* 0x0000 */ const BOOL is_bounded;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef struct _CFG_CALL_TARGET_INFO
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned __int64 Flags;
} CFG_CALL_TARGET_INFO, *PCFG_CALL_TARGET_INFO; /* size: 0x0010 */

class utl::_FloatLimits<float,24>
{
  union
  {
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int radix;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const BOOL has_infinity;
    /* 0x0000 */ const BOOL has_quiet_NaN;
    /* 0x0000 */ const BOOL has_signaling_NaN;
    /* 0x0000 */ enum utl::float_denorm_style has_denorm;
    /* 0x0000 */ const BOOL has_denorm_loss;
    /* 0x0000 */ const BOOL is_iec559;
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL tinyness_before;
    /* 0x0000 */ enum utl::float_round_style round_style;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class utl::numeric_limits<float>
{
  /* 0x0000 */ const unsigned int _Mdig;
}; /* size: 0x0001 */

typedef struct __vc_attributes::helper_attributes::process_earlyAttribute
{
} _vc_attributes::helper_attributes::process_earlyAttribute, *P_vc_attributes::helper_attributes::process_earlyAttribute; /* size: 0x0001 */

class utl::_FloatLimits<double,53>
{
  union
  {
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int radix;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const BOOL has_infinity;
    /* 0x0000 */ const BOOL has_quiet_NaN;
    /* 0x0000 */ const BOOL has_signaling_NaN;
    /* 0x0000 */ enum utl::float_denorm_style has_denorm;
    /* 0x0000 */ const BOOL has_denorm_loss;
    /* 0x0000 */ const BOOL is_iec559;
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL tinyness_before;
    /* 0x0000 */ enum utl::float_round_style round_style;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct _RTL_TRACE_DATABASE;

typedef struct _MEMORY_PARTITION_TRANSFER_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfPages;
  /* 0x0008 */ unsigned long NumaNode;
  /* 0x000c */ unsigned long Flags;
} MEMORY_PARTITION_TRANSFER_INFORMATION, *PMEMORY_PARTITION_TRANSFER_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<RegistryDataFormatIterator>
{
  /* 0x0000 */ class RegistryDataFormatIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ long Padding_955;
  /* 0x0010 */ void* pfnAllocate /* function */;
  /* 0x0018 */ void* pfnFree /* function */;
  /* 0x0020 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x0028 */ unsigned __int64 Reserved[5];
} NDR_USER_MARSHAL_INFO_LEVEL1, *PNDR_USER_MARSHAL_INFO_LEVEL1; /* size: 0x0050 */

typedef struct _NDR_USER_MARSHAL_INFO
{
  /* 0x0000 */ unsigned long InformationLevel;
  /* 0x0004 */ long Padding_956;
  /* 0x0008 */ struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
} NDR_USER_MARSHAL_INFO, *PNDR_USER_MARSHAL_INFO; /* size: 0x0058 */

struct SSimpleWalker
{
  /* 0x0000 */ long Padding_957[2];
  /* 0x0008 */ unsigned long _cItfs;
  /* 0x000c */ long Padding_958;
  /* 0x0010 */ struct IUnknown* _arpUnk[10];
  /* 0x0060 */ struct IUnknown** _ppUnk;
}; /* size: 0x0068 */

class RegistryDataFormatIterator
{
  /* 0x0000 */ long Padding_959[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ReferencedRegistryKey> _dataFormatsKey;
  /* 0x0018 */ unsigned long _dataFormatIndex;
}; /* size: 0x0020 */

struct HAS_INTERFACES
{
  /* 0x0000 */ long m_cInterfaces;
}; /* size: 0x0004 */

class utl::_FloatLimits<long double,53>
{
  union
  {
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const int radix;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const BOOL has_infinity;
    /* 0x0000 */ const BOOL has_quiet_NaN;
    /* 0x0000 */ const BOOL has_signaling_NaN;
    /* 0x0000 */ enum utl::float_denorm_style has_denorm;
    /* 0x0000 */ const BOOL has_denorm_loss;
    /* 0x0000 */ const BOOL is_iec559;
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL tinyness_before;
    /* 0x0000 */ enum utl::float_round_style round_style;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

class utl::_NumLimitsBase
{
  union
  {
    /* 0x0000 */ const BOOL is_specialized;
    /* 0x0000 */ const BOOL is_signed;
    /* 0x0000 */ const int digits;
    /* 0x0000 */ const int digits10;
    /* 0x0000 */ const int max_digits10;
    /* 0x0000 */ const BOOL is_integer;
    /* 0x0000 */ const BOOL is_exact;
    /* 0x0000 */ const int radix;
    /* 0x0000 */ const int min_exponent;
    /* 0x0000 */ const int min_exponent10;
    /* 0x0000 */ const int max_exponent;
    /* 0x0000 */ const int max_exponent10;
    /* 0x0000 */ const BOOL has_infinity;
    /* 0x0000 */ const BOOL has_quiet_NaN;
    /* 0x0000 */ const BOOL has_signaling_NaN;
    /* 0x0000 */ enum utl::float_denorm_style has_denorm;
    /* 0x0000 */ const BOOL has_denorm_loss;
    /* 0x0000 */ const BOOL is_iec559;
    /* 0x0000 */ const BOOL is_bounded;
    /* 0x0000 */ const BOOL is_modulo;
    /* 0x0000 */ const BOOL traps;
    /* 0x0000 */ const BOOL tinyness_before;
    /* 0x0000 */ enum utl::float_round_style round_style;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef struct _MAXVERSIONTESTED_INFO
{
  /* 0x0000 */ unsigned __int64 MaxVersionTested;
} MAXVERSIONTESTED_INFO, *PMAXVERSIONTESTED_INFO; /* size: 0x0008 */

class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > >
{
}; /* size: 0x0008 */

class utl::numeric_limits<long double>
{
  /* 0x0000 */ const unsigned int _Mdig;
}; /* size: 0x0001 */

typedef struct _ENCLAVE_CREATE_INFO_VBS_BASIC
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned char OwnerID[32];
} ENCLAVE_CREATE_INFO_VBS_BASIC, *PENCLAVE_CREATE_INFO_VBS_BASIC; /* size: 0x0024 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryDataFormatIterator> const >;

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_960[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_961;
  /* 0x0030 */ struct MD_INTERFACE* m_r;
}; /* size: 0x0038 */

class utl::vector<unsigned __int64,utl::allocator<unsigned __int64> >
{
  /* 0x0000 */ unsigned __int64* _MyBegin;
  /* 0x0008 */ unsigned __int64* _MyEnd;
  /* 0x0010 */ unsigned __int64* _MyLimit;
}; /* size: 0x0018 */

class CDwordBag
{
  /* 0x0000 */ class utl::vector<unsigned __int64,utl::allocator<unsigned __int64> > _wordBag;
  /* 0x0018 */ BOOL constructSucceeded;
}; /* size: 0x0020 */

struct wistd::__compressed_pair_elem<wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData> *,0,0>
{
  /* 0x0000 */ class wil::details_abi::ProcessLocalStorageData<wil::details_abi::FeatureStateData>* __value_;
}; /* size: 0x0008 */

struct tagENUMLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
}; /* size: 0x009c */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryDataFormatIterator> >;

class utl::allocator<unsigned __int64>
{
}; /* size: 0x0001 */

struct tagSOUNDSENTRYA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ char* lpszWindowsEffectDLL;
  /* 0x0030 */ unsigned long iWindowsEffectOrdinal;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _MEM_ADDRESS_REQUIREMENTS
{
  /* 0x0000 */ void* LowestStartingAddress;
  /* 0x0008 */ void* HighestEndingAddress;
  /* 0x0010 */ unsigned __int64 Alignment;
} MEM_ADDRESS_REQUIREMENTS, *PMEM_ADDRESS_REQUIREMENTS; /* size: 0x0018 */

struct utl::vector<unsigned __int64,utl::allocator<unsigned __int64> >::_TmpElTy;

struct _LDRP_LOAD_CONTEXT;

class utl::_ArrayIt<unsigned __int64>;

class utl::_ArrayConstIt<unsigned __int64>;

typedef struct _RTL_PROCESS_MODULE_INFORMATION
{
  /* 0x0000 */ void* Section;
  /* 0x0008 */ void* MappedBase;
  /* 0x0010 */ void* ImageBase;
  /* 0x0018 */ unsigned long ImageSize;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ unsigned short LoadOrderIndex;
  /* 0x0022 */ unsigned short InitOrderIndex;
  /* 0x0024 */ unsigned short LoadCount;
  /* 0x0026 */ unsigned short OffsetToFileName;
  /* 0x0028 */ unsigned char FullPathName[256];
} RTL_PROCESS_MODULE_INFORMATION, *PRTL_PROCESS_MODULE_INFORMATION; /* size: 0x0128 */

typedef struct _RTL_PROCESS_MODULES
{
  /* 0x0000 */ unsigned long NumberOfModules;
  /* 0x0004 */ long Padding_962;
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
} RTL_PROCESS_MODULES, *PRTL_PROCESS_MODULES; /* size: 0x0130 */

class utl::reverse_iterator<utl::_ArrayConstIt<unsigned __int64> >;

class wil::details_abi::heap_vector<wil::details::EnabledStateManager::CachedFeaturePropertyData>
{
  /* 0x0000 */ struct wil::details_abi::heap_buffer m_data;
}; /* size: 0x0020 */

class wil::details::EnabledStateManager
{
  /* 0x0000 */ BOOL m_fInitialized;
  /* 0x0001 */ char Padding_963[7];
  /* 0x0008 */ class wil::srwlock m_lock;
  /* 0x0010 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<_TP_TIMER *,void (__cdecl*)(_TP_TIMER *),&wil::details::DestroyThreadPoolTimer<wil::details::SystemThreadPoolMethods,0>::Destroy,wistd::integral_constant<unsigned __int64,0>,_TP_TIMER *,_TP_TIMER *,0,std::nullptr_t> > > m_timer;
  /* 0x0018 */ BOOL m_timerSet;
  /* 0x0019 */ char Padding_964[3];
  /* 0x001c */ unsigned int m_enabledStateEpoch;
  /* 0x0020 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > > m_subscription;
  /* 0x0028 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t> > > m_usageFlushSubscription;
  /* 0x0030 */ class wil::details_abi::heap_vector<wil::details::EnabledStateManager::CachedUsageData> m_cachedUsageTrackingData;
  /* 0x0050 */ class wil::details_abi::heap_vector<wil::details::EnabledStateManager::CachedFeaturePropertyData> m_cachedFeatureProperties;
}; /* size: 0x0070 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX
{
  /* 0x0000 */ unsigned short NextOffset;
  /* 0x0002 */ char Padding_965[6];
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
  /* 0x0130 */ unsigned long ImageChecksum;
  /* 0x0134 */ unsigned long TimeDateStamp;
  /* 0x0138 */ void* DefaultBase;
} RTL_PROCESS_MODULE_INFORMATION_EX, *PRTL_PROCESS_MODULE_INFORMATION_EX; /* size: 0x0140 */

struct Microsoft::WRL::Details::RemoveReference<Microsoft::WRL::Wrappers::Mutex &>
{
}; /* size: 0x0001 */

struct wil::details::EnabledStateManager::CachedUsageData
{
  /* 0x0000 */ unsigned int id;
  /* 0x0004 */ long Padding_966;
  /* 0x0008 */ struct wil_details_FeatureReportingCache* data;
}; /* size: 0x0010 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_0d32688c0356eaf1376562cb0fa29181> >
{
  /* 0x0000 */ long Padding_967[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::InPlaceDeactivate::__l2::<lambda_0d32688c0356eaf1376562cb0fa29181>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>
{
}; /* size: 0x0020 */

class RunSyncOnMTAThread::__l2::<lambda_fd5f26b17dc0b306889b51c5fa24ff59>
{
  /* 0x0000 */ class CClipboardBroker::SetClipboard::__l49::<lambda_ceb8f1db0b0f2dc512542b4e425d8ca5>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

class Microsoft::WRL::RuntimeClass<Windows::Foundation::IAsyncAction,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >
{
}; /* size: 0x0068 */

struct ITypeInfo2
{
}; /* size: 0x0008 */

class CWrapperBase<IEnumSTATSTG>
{
  /* 0x0000 */ long Padding_968[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG> m_spInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_spPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<TypeLibRegistrationEnumerator>
{
  /* 0x0000 */ class TypeLibRegistrationEnumerator* ptr_;
}; /* size: 0x0008 */

typedef struct _MANAGE_HOT_PATCH_QUERY_SINGLE_PATCH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_969;
  /* 0x0008 */ void* ProcessHandle;
  /* 0x0010 */ struct _HOT_PATCH_IMAGE_INFO BaseInfo;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_970;
  /* 0x0020 */ struct _UNICODE_STRING PatchPathString;
} MANAGE_HOT_PATCH_QUERY_SINGLE_PATCH, *PMANAGE_HOT_PATCH_QUERY_SINGLE_PATCH; /* size: 0x0030 */

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY
{
  /* 0x0000 */ unsigned long Selector;
  /* 0x0004 */ struct _WOW64_LDT_ENTRY Descriptor;
} WOW64_DESCRIPTOR_TABLE_ENTRY, *PWOW64_DESCRIPTOR_TABLE_ENTRY; /* size: 0x000c */

class Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator>
{
  /* 0x0000 */ struct ITypeLibRegistrationIterator* ptr_;
}; /* size: 0x0008 */

class TypeLibRegistrationEnumerator
{
  /* 0x0000 */ long Padding_971[12];
  /* 0x0030 */ class Microsoft::WRL::ComPtr<ReferencedRegistryKey> _registryTypeLibParentKey;
  /* 0x0038 */ unsigned long _registryTypeLibIndex;
  /* 0x003c */ long Padding_972;
  /* 0x0040 */ class Microsoft::WRL::ComPtr<ReferencedRegistryKey> _registryTypeLibKey;
  /* 0x0048 */ unsigned long _registryVersionIndex;
  /* 0x004c */ long Padding_973;
  /* 0x0050 */ class Microsoft::WRL::ComPtr<ReferencedRegistryKey> _registryVersionKey;
  /* 0x0058 */ unsigned long _registryLocaleIndex;
  /* 0x005c */ struct _GUID _registryTypeLibId;
  /* 0x006c */ wchar_t _registryVersion[256];
  /* 0x026c */ long Padding_974;
  /* 0x0270 */ class Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> _packagedComTypeLibCatalog;
  /* 0x0278 */ class Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> _packagedComTypeLibIterator;
  /* 0x0280 */ BOOL _finishedRegistryEnumeration;
  /* 0x0281 */ char Padding_975[7];
  /* 0x0288 */ class Microsoft::WRL::Wrappers::SRWLock _enumeratorLock;
  /* 0x0290 */ BOOL m_disablePackagedComForTesting;
}; /* size: 0x0298 */

struct IHttpNegotiate2
{
}; /* size: 0x0008 */

struct ITypeLibCatalogInternal
{
}; /* size: 0x0008 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<2>
{
} RTL_CONSTANT_STRING_remove_const_template_class<2>, *PRTL_CONSTANT_STRING_remove_const_template_class<2>; /* size: 0x0001 */

struct ITypeLibRegistrationIterator
{
}; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

class CLimitedWritableStorage
{
}; /* size: 0x0020 */

struct tagWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcWindow;
  /* 0x0014 */ struct tagRECT rcClient;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ unsigned long dwExStyle;
  /* 0x002c */ unsigned long dwWindowStatus;
  /* 0x0030 */ unsigned int cxWindowBorders;
  /* 0x0034 */ unsigned int cyWindowBorders;
  /* 0x0038 */ unsigned short atomWindowType;
  /* 0x003a */ unsigned short wCreatorVersion;
}; /* size: 0x003c */

class utl::_ContainerBase<unsigned __int64,utl::allocator<unsigned __int64> >
{
}; /* size: 0x0001 */

class utl::_AllocBase<utl::allocator<unsigned __int64>,1>
{
}; /* size: 0x0001 */

typedef struct _NTPSS_MEMORY_BULK_INFORMATION
{
  /* 0x0000 */ unsigned long QueryFlags;
  /* 0x0004 */ unsigned long NumberOfEntries;
  /* 0x0008 */ void* NextValidAddress;
} NTPSS_MEMORY_BULK_INFORMATION, *PNTPSS_MEMORY_BULK_INFORMATION; /* size: 0x0010 */

struct wil::details::resource_policy<FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::WilApi_UnsubscribeFeatureStateChangeNotification,wistd::integral_constant<unsigned __int64,0>,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef struct _JOURNAL_ABSOLUTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER EndTimeStamp;
  /* 0x0010 */ unsigned __int64 NumberOfRecords;
  /* 0x0018 */ unsigned long FillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_ABSOLUTE_INFORMATION, *PJOURNAL_ABSOLUTE_INFORMATION; /* size: 0x0020 */

typedef struct _KEY_EVENT_RECORD
{
  /* 0x0000 */ int bKeyDown;
  /* 0x0004 */ unsigned short wRepeatCount;
  /* 0x0006 */ unsigned short wVirtualKeyCode;
  /* 0x0008 */ unsigned short wVirtualScanCode;
  union
  {
    union
    {
      /* 0x000a */ wchar_t UnicodeChar;
      /* 0x000a */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ uChar;
  /* 0x000c */ unsigned long dwControlKeyState;
} KEY_EVENT_RECORD, *PKEY_EVENT_RECORD; /* size: 0x0010 */

typedef struct _OSVERSIONINFOEX2W
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
  /* 0x011c */ unsigned long wSuiteMaskEx;
  /* 0x0120 */ unsigned long wReserved2;
} OSVERSIONINFOEX2W, *POSVERSIONINFOEX2W; /* size: 0x0124 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationEnumerator> >;

typedef struct _CERT_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_976;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0018 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0048 */ unsigned long cAttribute;
  /* 0x004c */ long Padding_977;
  /* 0x0050 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CERT_REQUEST_INFO, *PCERT_REQUEST_INFO; /* size: 0x0058 */

struct utl::allocator_traits<utl::allocator<unsigned __int64> >
{
}; /* size: 0x0001 */

typedef struct _KCONTINUE_ARGUMENT
{
  /* 0x0000 */ enum _KCONTINUE_TYPE ContinueType;
  /* 0x0004 */ unsigned long ContinueFlags;
  /* 0x0008 */ unsigned __int64 Reserved[2];
} KCONTINUE_ARGUMENT, *PKCONTINUE_ARGUMENT; /* size: 0x0018 */

class CAutoHandle<void *>
{
}; /* size: 0x0008 */

typedef struct _FS_BPIO_RESULTS
{
  /* 0x0000 */ long OpStatus;
  /* 0x0004 */ unsigned short FailingDriverNameLen;
  /* 0x0006 */ wchar_t FailingDriverName[32];
  /* 0x0046 */ unsigned short FailureReasonLen;
  /* 0x0048 */ wchar_t FailureReason[128];
} FS_BPIO_RESULTS, *PFS_BPIO_RESULTS; /* size: 0x0148 */

struct Windows::Foundation::IAsyncActionCompletedHandler
{
}; /* size: 0x0008 */

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  /* 0x0000 */ unsigned char First0x24BytesOfBootSector[36];
} FSCTL_QUERY_FAT_BPB_BUFFER, *PFSCTL_QUERY_FAT_BPB_BUFFER; /* size: 0x0024 */

struct USN_RECORD_COMMON_HEADER
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
}; /* size: 0x0008 */

struct USN_RECORD_V4
{
  /* 0x0000 */ struct USN_RECORD_COMMON_HEADER Header;
  /* 0x0008 */ struct _FILE_ID_128 FileReferenceNumber;
  /* 0x0018 */ struct _FILE_ID_128 ParentFileReferenceNumber;
  /* 0x0028 */ __int64 Usn;
  /* 0x0030 */ unsigned long Reason;
  /* 0x0034 */ unsigned long SourceInfo;
  /* 0x0038 */ unsigned long RemainingExtents;
  /* 0x003c */ unsigned short NumberOfExtents;
  /* 0x003e */ unsigned short ExtentSize;
  /* 0x0040 */ struct USN_RECORD_EXTENT Extents[1];
}; /* size: 0x0050 */

struct FormatEntry
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_978[2];
  /* 0x0004 */ unsigned long tymed;
  /* 0x0008 */ wchar_t* formatName;
  /* 0x0010 */ int formatNameLen;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

class CTSmartObj<void *,CAutoHandle_Policy<void *> >
{
  /* 0x0000 */ void* _obj;
}; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

struct IXMLDOMComment
{
}; /* size: 0x0008 */

class wil::details::FeatureFunctorHost
{
  /* 0x0000 */ long Padding_979[2];
  /* 0x0008 */ class wil::ThreadErrorContext m_context;
  /* 0x0018 */ const struct wil::DiagnosticsInfo& m_diagnostics;
  /* 0x0020 */ unsigned int m_featureId;
}; /* size: 0x0028 */

typedef struct _CONNECTDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_980;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct _NETRESOURCEW* lpConnRes;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTW, *PCONNECTDLGSTRUCTW; /* size: 0x0020 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum tagREGCLS>
{
} ENUM_FLAG_SIZED_INTEGER<enum tagREGCLS>, *PENUM_FLAG_SIZED_INTEGER<enum tagREGCLS>; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IEnumFORMATETC>
{
  /* 0x0000 */ struct IEnumFORMATETC* ptr_;
}; /* size: 0x0008 */

typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHENHMETAFILE::__MIDL_IWinTypes_0006, *PuserHENHMETAFILE::__MIDL_IWinTypes_0006; /* size: 0x0008 */

struct IDataFilter
{
}; /* size: 0x0008 */

typedef struct _PREFETCH_ALTERNATE_PARAM_INFO
{
  /* 0x0000 */ unsigned long Parameter;
} PREFETCH_ALTERNATE_PARAM_INFO, *PPREFETCH_ALTERNATE_PARAM_INFO; /* size: 0x0004 */

struct ITypeLibRegistration
{
}; /* size: 0x0008 */

struct tagEMRLINETO
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptl;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistration> const >;

struct PPM_WMI_IDLE_STATE
{
  /* 0x0000 */ unsigned long Latency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned char PromotePercent;
  /* 0x000d */ unsigned char DemotePercent;
  /* 0x000e */ unsigned char StateType;
  /* 0x000f */ unsigned char Reserved;
  /* 0x0010 */ unsigned long StateFlags;
  /* 0x0014 */ unsigned long Context;
  /* 0x0018 */ unsigned long IdleHandler;
  /* 0x001c */ unsigned long Reserved1;
}; /* size: 0x0020 */

struct PPM_WMI_IDLE_STATES_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ void* TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

class utl::vector<CROTItem *,utl::allocator<CROTItem *> >
{
  /* 0x0000 */ class CROTItem** _MyBegin;
  /* 0x0008 */ class CROTItem** _MyEnd;
  /* 0x0010 */ class CROTItem** _MyLimit;
}; /* size: 0x0018 */

class CRunningObjectTable
{
  /* 0x0000 */ long Padding_981[4];
  /* 0x0010 */ class utl::vector<CROTItem *,utl::allocator<CROTItem *> > _rotList;
  /* 0x0028 */ class CCliRotHintTable _crht;
  /* 0x0038 */ unsigned short _wSigRotItem;
}; /* size: 0x0040 */

typedef struct _FLAGGED_BYTE_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned char abData[1];
  /* 0x0009 */ char __PADDING__[3];
} FLAGGED_BYTE_BLOB, *PFLAGGED_BYTE_BLOB; /* size: 0x000c */

struct CMPGUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned long Data2;
  /* 0x0008 */ unsigned long Data3;
  /* 0x000c */ unsigned long Data4;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> >
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ERROR_PORT_TIMEOUTS
{
  /* 0x0000 */ unsigned long StartTimeout;
  /* 0x0004 */ unsigned long CommTimeout;
} SYSTEM_ERROR_PORT_TIMEOUTS, *PSYSTEM_ERROR_PORT_TIMEOUTS; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleWindow,IOleWindow>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct _THREAD_NAME_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING ThreadName;
} THREAD_NAME_INFORMATION, *PTHREAD_NAME_INFORMATION; /* size: 0x0010 */

struct Microsoft::WRL::ErrorPropagationPolicyTraits<-1>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_OID_FUNC_ENTRY
{
  /* 0x0000 */ const char* pszOID;
  /* 0x0008 */ void* pvFuncAddr;
} CRYPT_OID_FUNC_ENTRY, *PCRYPT_OID_FUNC_ENTRY; /* size: 0x0010 */

struct wil::details::resource_policy<wil_FeatureTestState *,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wistd::integral_constant<unsigned __int64,0>,wil_FeatureTestState *,wil_FeatureTestState *,0,std::nullptr_t>
{
}; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_DEP_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY Dep;
} RTL_IMAGE_MITIGATION_DEP_POLICY, *PRTL_IMAGE_MITIGATION_DEP_POLICY; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::FeatureUsageDurationData *) noexcept,&wil::details::FeatureUsageDurationData::Stop,wil::details::FeatureUsageDurationData *>;

typedef struct _FXSAVE_FORMAT_WX86
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned short TagWord;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned long ErrorSelector;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned long DataSelector;
  /* 0x0018 */ unsigned long MXCsr;
  /* 0x001c */ unsigned long MXCsr_Mask;
  /* 0x0020 */ unsigned char RegisterArea[128];
  /* 0x00a0 */ unsigned char Reserved3[128];
  /* 0x0120 */ unsigned char Reserved4[224];
} FXSAVE_FORMAT_WX86, *PFXSAVE_FORMAT_WX86; /* size: 0x0200 */

struct utl::vector<CROTItem *,utl::allocator<CROTItem *> >::_TmpElTy;

typedef struct _FILE_ID_EXTD_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ unsigned long ReparsePointTag;
  /* 0x0048 */ struct _FILE_ID_128 FileId;
  /* 0x0058 */ wchar_t FileName[1];
  /* 0x005a */ char __PADDING__[6];
} FILE_ID_EXTD_DIR_INFO, *PFILE_ID_EXTD_DIR_INFO; /* size: 0x0060 */

class utl::_ArrayIt<CROTItem *>;

class utl::_ArrayConstIt<CROTItem *>;

class utl::reverse_iterator<utl::_ArrayIt<CROTItem *> >;

class utl::reverse_iterator<utl::_ArrayConstIt<CROTItem *> >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> const >;

typedef struct _LDR_DDAG_NODE
{
  /* 0x0000 */ struct _LIST_ENTRY Modules;
  /* 0x0010 */ struct _LDR_SERVICE_TAG_RECORD* ServiceTagList;
  /* 0x0018 */ unsigned long LoadCount;
  /* 0x001c */ unsigned long LoadWhileUnloadingCount;
  /* 0x0020 */ unsigned long LowestLink;
  /* 0x0024 */ long Padding_982;
  /* 0x0028 */ struct _LDRP_CSLIST Dependencies;
  /* 0x0030 */ struct _LDRP_CSLIST IncomingDependencies;
  /* 0x0038 */ enum _LDR_DDAG_STATE State;
  /* 0x003c */ long Padding_983;
  /* 0x0040 */ struct _SINGLE_LIST_ENTRY CondenseLink;
  /* 0x0048 */ unsigned long PreorderNumber;
  /* 0x004c */ long __PADDING__[1];
} LDR_DDAG_NODE, *PLDR_DDAG_NODE; /* size: 0x0050 */

typedef struct _TXFS_START_RM_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_984;
  /* 0x0008 */ unsigned __int64 LogContainerSize;
  /* 0x0010 */ unsigned long LogContainerCountMin;
  /* 0x0014 */ unsigned long LogContainerCountMax;
  /* 0x0018 */ unsigned long LogGrowthIncrement;
  /* 0x001c */ unsigned long LogAutoShrinkPercentage;
  /* 0x0020 */ unsigned long TmLogPathOffset;
  /* 0x0024 */ unsigned short TmLogPathLength;
  /* 0x0026 */ unsigned short LoggingMode;
  /* 0x0028 */ unsigned short LogPathLength;
  /* 0x002a */ unsigned short Reserved;
  /* 0x002c */ wchar_t LogPath[1];
  /* 0x002e */ char __PADDING__[2];
} TXFS_START_RM_INFORMATION, *PTXFS_START_RM_INFORMATION; /* size: 0x0030 */

struct wil::details::FeatureTraitsBase
{
  union
  {
    /* 0x0000 */ enum wil::details::EmptyVariant defaultVariant;
    /* 0x0000 */ enum wil_VariantPayloadType payloadType;
    /* 0x0000 */ const unsigned int defaultPayloadValue;
    /* 0x0000 */ const unsigned short version;
    /* 0x0000 */ const unsigned short baseVersion;
    /* 0x0000 */ enum wil::FeatureStage stageOverride;
    /* 0x0000 */ enum wil::FeatureStage stageChkOverride;
    /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
    /* 0x0000 */ enum wil::UsageReportingMode usageReportingMode;
  }; /* size: 0x0004 */
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct _CRT_FLOAT
{
  /* 0x0000 */ float f;
} CRT_FLOAT, *PCRT_FLOAT; /* size: 0x0004 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum tagCOWAIT_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum tagCOWAIT_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum tagCOWAIT_FLAGS>; /* size: 0x0001 */

typedef struct _FILE_CASE_SENSITIVE_INFO
{
  /* 0x0000 */ unsigned long Flags;
} FILE_CASE_SENSITIVE_INFO, *PFILE_CASE_SENSITIVE_INFO; /* size: 0x0004 */

class CWrapperBase<IEnumFORMATETC>
{
  /* 0x0000 */ long Padding_985[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumFORMATETC> m_spInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_spPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

struct SysInfo
{
  /* 0x0000 */ struct HDC__* m_hdc;
  /* 0x0008 */ struct HBITMAP__* m_hbmpStock;
  /* 0x0010 */ struct HBITMAP__* m_hbmpColor;
  /* 0x0018 */ struct HPALETTE__* m_hpalDefault;
  /* 0x0020 */ struct HPALETTE__* m_hpalRainbow;
  /* 0x0028 */ int m_cxIcon;
  /* 0x002c */ int m_cyIcon;
  /* 0x0030 */ int m_nScrLogPixelsX;
  /* 0x0034 */ int m_nScrLogPixelsY;
  /* 0x0038 */ int m_nScrBitCount;
  /* 0x003c */ int m_nScrColorCount;
  /* 0x0040 */ int m_nIconColorCount;
  /* 0x0044 */ int m_nScrPaletteSize;
  /* 0x0048 */ class Microsoft::WRL::Wrappers::SRWLock m_lockStreams;
  /* 0x0050 */ struct IStorage* m_pstg;
  /* 0x0058 */ unsigned long m_cStreams;
  /* 0x005c */ unsigned long m_stmixNext;
  /* 0x0060 */ struct _RTL_CRITICAL_SECTION m_critDCBusy;
  /* 0x0088 */ struct _RTL_CRITICAL_SECTION m_critMemberBusy;
}; /* size: 0x00b0 */

struct Microsoft::WRL::Details::Dummy
{
}; /* size: 0x0001 */

typedef struct _PS_MEMORY_RESERVE
{
  /* 0x0000 */ void* ReserveAddress;
  /* 0x0008 */ unsigned __int64 ReserveSize;
} PS_MEMORY_RESERVE, *PPS_MEMORY_RESERVE; /* size: 0x0010 */

typedef struct __WilFeatureTraits_Feature_NWMTest1
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy4;
    /* 0x0000 */ const char ___dummy0;
    /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
    /* 0x0000 */ const char ___dummy1;
    /* 0x0000 */ const char ___dummy2;
    /* 0x0000 */ const char ___dummy3;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_NWMTest1, *P_WilFeatureTraits_Feature_NWMTest1; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoConversionClass> const >;

typedef struct _LPC_CLIENT_DIED_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ union _LARGE_INTEGER CreateTime;
} LPC_CLIENT_DIED_MSG, *PLPC_CLIENT_DIED_MSG; /* size: 0x0030 */

typedef struct __WilFeatureTraits_Feature_MTestUx13
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy9;
    /* 0x0000 */ const char ___dummy5;
    /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
    /* 0x0000 */ const char ___dummy6;
    /* 0x0000 */ const char ___dummy7;
    /* 0x0000 */ const char ___dummy8;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_MTestUx13, *P_WilFeatureTraits_Feature_MTestUx13; /* size: 0x0001 */

typedef struct __WilFeatureTraits_Feature_UxTest12
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy14;
    /* 0x0000 */ const char ___dummy10;
    /* 0x0000 */ enum wil::FeatureChangeTime changeTime;
    /* 0x0000 */ const char ___dummy11;
    /* 0x0000 */ const char ___dummy12;
    /* 0x0000 */ const char ___dummy13;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_UxTest12, *P_WilFeatureTraits_Feature_UxTest12; /* size: 0x0001 */

class utl::_ContainerBase<CROTItem *,utl::allocator<CROTItem *> >
{
}; /* size: 0x0001 */

typedef struct __WilFeatureTraits_Feature_CDPNearshareEnhancedAdvertisement
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy17;
    /* 0x0000 */ const char ___dummy15;
    /* 0x0000 */ const char ___dummy16;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_CDPNearshareEnhancedAdvertisement, *P_WilFeatureTraits_Feature_CDPNearshareEnhancedAdvertisement; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IEnumUnknown,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0030 */

class utl::_AllocBase<utl::allocator<CROTItem *>,1>
{
}; /* size: 0x0001 */

typedef struct __WilFeatureTraits_Feature_CDPNearShareUDPDiscoveryFixup
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy22;
    /* 0x0000 */ const char ___dummy18;
    /* 0x0000 */ const char ___dummy19;
    /* 0x0000 */ const char ___dummy20;
    /* 0x0000 */ const char ___dummy21;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_CDPNearShareUDPDiscoveryFixup, *P_WilFeatureTraits_Feature_CDPNearShareUDPDiscoveryFixup; /* size: 0x0001 */

typedef union _ASSEMBLY_VERSION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short Build;
      /* 0x0002 */ unsigned short Revision;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ASSEMBLY_VERSION, *PASSEMBLY_VERSION; /* size: 0x0008 */

struct wil::details::RequiredFeatures<wil::Feature<__WilFeatureTraits_Feature_NWMTest1> >
{
}; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IInsertableCandidateIterator>
{
}; /* size: 0x0010 */

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
{
  /* 0x0000 */ unsigned long MarshalCookie;
  /* 0x0004 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT; /* size: 0x0014 */

typedef struct __WilFeatureTraits_Feature_CDPNearshareUDPRestriction
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy25;
    /* 0x0000 */ const char ___dummy23;
    /* 0x0000 */ const char ___dummy24;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_CDPNearshareUDPRestriction, *P_WilFeatureTraits_Feature_CDPNearshareUDPRestriction; /* size: 0x0001 */

class wil::details::<lambda_b5119c6713808ce967e206dec719b624>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::caseAttribute
{
  /* 0x0000 */ int value;
} _vc_attributes::caseAttribute, *P_vc_attributes::caseAttribute; /* size: 0x0004 */

typedef struct __WilFeatureTraits_Feature_ActivityFeedClientBackupAndRestore
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy33;
    /* 0x0000 */ const char ___dummy31;
    /* 0x0000 */ const char ___dummy32;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_ActivityFeedClientBackupAndRestore, *P_WilFeatureTraits_Feature_ActivityFeedClientBackupAndRestore; /* size: 0x0001 */

struct utl::allocator_traits<utl::allocator<CROTItem *> >
{
}; /* size: 0x0001 */

typedef struct _REQUEST_RAW_ENCRYPTED_DATA
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} REQUEST_RAW_ENCRYPTED_DATA, *PREQUEST_RAW_ENCRYPTED_DATA; /* size: 0x0010 */

typedef struct __WilFeatureTraits_Feature_CDPCloudClipboardMonitor
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy36;
    /* 0x0000 */ const char ___dummy34;
    /* 0x0000 */ const char ___dummy35;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_CDPCloudClipboardMonitor, *P_WilFeatureTraits_Feature_CDPCloudClipboardMonitor; /* size: 0x0001 */

class CMonikerBag
{
}; /* size: 0x0020 */

typedef struct __vc_attributes::length_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::length_isAttribute, *P_vc_attributes::length_isAttribute; /* size: 0x0008 */

typedef struct __WilFeatureTraits_Feature_ShowShareUIOnContainerOS
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ enum wil::FeatureStage stage;
    /* 0x0000 */ const char ___dummy42;
    /* 0x0000 */ const char ___dummy40;
    /* 0x0000 */ const char ___dummy41;
    /* 0x0000 */ enum wil::FeatureStage activeStage;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
} _WilFeatureTraits_Feature_ShowShareUIOnContainerOS, *P_WilFeatureTraits_Feature_ShowShareUIOnContainerOS; /* size: 0x0001 */

struct tagEMRMASKBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long xMask;
  /* 0x0068 */ long yMask;
  /* 0x006c */ unsigned long iUsageMask;
  /* 0x0070 */ unsigned long offBmiMask;
  /* 0x0074 */ unsigned long cbBmiMask;
  /* 0x0078 */ unsigned long offBitsMask;
  /* 0x007c */ unsigned long cbBitsMask;
}; /* size: 0x0080 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ReferencedRegistryKey> const >;

class CMonikerPtrBuf
{
}; /* size: 0x0020 */

struct _AMD64_CONTEXT;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ReferencedRegistryKey> >;

class RunSyncOnMTAThread::__l2::<lambda_5d2c158ec0a9190eae11e19329324fcf>
{
  /* 0x0000 */ class CDragDropBroker::UnregisterDropTarget::__l5::<lambda_4927a812c17eeead1d983da7cbe73d5d>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

struct ClpboardOwnerState
{
  /* 0x0000 */ struct _TP_WAIT* waiter;
  /* 0x0008 */ void* hProcess;
}; /* size: 0x0010 */

class CRotMonikerEnum
{
  /* 0x0000 */ long Padding_986[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwOffset;
  /* 0x0010 */ class CMonikerPtrBuf _mkptrbuf;
}; /* size: 0x0030 */

typedef struct __vc_attributes::varargAttribute
{
} _vc_attributes::varargAttribute, *P_vc_attributes::varargAttribute; /* size: 0x0001 */

class CSessionMoniker
{
  /* 0x0000 */ long Padding_987[12];
  /* 0x0030 */ unsigned long m_sessionid;
  /* 0x0034 */ int m_bUseConsoleSession;
  /* 0x0038 */ int m_bHaveBindOpts;
  /* 0x003c */ long Padding_988;
  /* 0x0040 */ struct tagBIND_OPTS2 m_bindopts2;
}; /* size: 0x0068 */

class CDragDropBroker::UnregisterDropTarget::__l5::<lambda_4927a812c17eeead1d983da7cbe73d5d>
{
  /* 0x0000 */ struct HWND__*& hwnd;
}; /* size: 0x0008 */

class RunSyncOnMTAThread::__l2::<lambda_9b16054ad48e172bb5548ecd4adf6ab4>
{
  /* 0x0000 */ class CClipboardBroker::SetClipboard::__l34::<lambda_be18d0e1c9460e7bb92c1a447c19d4fe>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

struct IPackagedComProgIdIterator
{
}; /* size: 0x0008 */

typedef struct _ENCLAVE_LOAD_DATA_VBS_BASIC
{
  /* 0x0000 */ unsigned long PageType;
} ENCLAVE_LOAD_DATA_VBS_BASIC, *PENCLAVE_LOAD_DATA_VBS_BASIC; /* size: 0x0004 */

class RoVariant
{
  /* 0x0000 */ struct IInspectable* _pI;
  /* 0x0008 */ HRESULT _hrState;
}; /* size: 0x0010 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct wil::ExpiredFeatureBase<wil::details::FeatureTraitsBase,enum wil::details::EmptyVariant,0>
{
}; /* size: 0x0001 */

struct _ARM64_CONTEXT;

class Microsoft::WRL::ComPtr<ICallingProcessInfo>
{
  /* 0x0000 */ struct ICallingProcessInfo* ptr_;
}; /* size: 0x0008 */

typedef struct _CLUSTER_RANGE
{
  /* 0x0000 */ union _LARGE_INTEGER StartingCluster;
  /* 0x0008 */ union _LARGE_INTEGER ClusterCount;
} CLUSTER_RANGE, *PCLUSTER_RANGE; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> const >;

struct IUrlAccessor
{
}; /* size: 0x0008 */

struct _ARM_CONTEXT;

struct IObjectActivator
{
}; /* size: 0x0008 */

typedef struct _IMAGE_DYNAMIC_RELOCATION64_V2
{
  /* 0x0000 */ unsigned long HeaderSize;
  /* 0x0004 */ unsigned long FixupInfoSize;
  /* 0x0008 */ unsigned __int64 Symbol;
  /* 0x0010 */ unsigned long SymbolGroup;
  /* 0x0014 */ unsigned long Flags;
} IMAGE_DYNAMIC_RELOCATION64_V2, *PIMAGE_DYNAMIC_RELOCATION64_V2; /* size: 0x0018 */

struct ICacheRefresh
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IRegistration>
{
  /* 0x0000 */ struct IRegistration* ptr_;
}; /* size: 0x0008 */

struct IXMLDOMNamedNodeMap
{
}; /* size: 0x0008 */

struct IRegistration
{
}; /* size: 0x0008 */

struct HPEN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CPointerMoniker
{
  /* 0x0000 */ long Padding_989[12];
  /* 0x0030 */ struct IUnknown* m_pUnk;
}; /* size: 0x0038 */

class CClipboardBroker::SetClipboard::__l49::<lambda_ceb8f1db0b0f2dc512542b4e425d8ca5>
{
  /* 0x0000 */ void*& pMTAWrapperRawAddress;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRegistration> const >;

typedef struct _PS_CPU_QUOTA_QUERY_ENTRY
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long Weight;
} PS_CPU_QUOTA_QUERY_ENTRY, *PPS_CPU_QUOTA_QUERY_ENTRY; /* size: 0x0008 */

typedef struct _PS_CPU_QUOTA_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long SessionCount;
  /* 0x0004 */ struct _PS_CPU_QUOTA_QUERY_ENTRY SessionInformation[1];
} PS_CPU_QUOTA_QUERY_INFORMATION, *PPS_CPU_QUOTA_QUERY_INFORMATION; /* size: 0x000c */

class CObjrefMoniker
{
  /* 0x0000 */ long Padding_990[14];
  /* 0x0038 */ wchar_t* m_lpszDisplayName;
}; /* size: 0x0040 */

typedef struct _HEAP_OPTIMIZE_RESOURCES_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
} HEAP_OPTIMIZE_RESOURCES_INFORMATION, *PHEAP_OPTIMIZE_RESOURCES_INFORMATION; /* size: 0x0008 */

typedef struct _RPC_SECURITY_QOS_V2_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_991;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
} RPC_SECURITY_QOS_V2_A, *PRPC_SECURITY_QOS_V2_A; /* size: 0x0020 */

class AdHocCallFrame<ISearchProtocol2,<lambda_b7865aac57bfa228768998e2f76a980a> >
{
  /* 0x0000 */ long Padding_992[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>::CreateAccessorEx::__l2::<lambda_b7865aac57bfa228768998e2f76a980a>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _FILE_FULL_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFO, *PFILE_FULL_DIR_INFO; /* size: 0x0048 */

typedef struct _IMAGE_ARM64EC_REDIRECTION_ENTRY
{
  /* 0x0000 */ unsigned long Source;
  /* 0x0004 */ unsigned long Destination;
} IMAGE_ARM64EC_REDIRECTION_ENTRY, *PIMAGE_ARM64EC_REDIRECTION_ENTRY; /* size: 0x0008 */

class RoVariant::OutRef
{
  /* 0x0000 */ class RoVariant* _pOwner;
  /* 0x0008 */ struct IInspectable* _pI;
}; /* size: 0x0010 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::Init::__l2::<lambda_b4919db20cec154853a959297be03d11>
{
  /* 0x0000 */ struct _TIMEOUT_INFO* pTimeoutInfo;
  /* 0x0008 */ struct IProtocolHandlerSite* pProtocolHandlerSite;
  /* 0x0010 */ struct _PROXY_INFO* pProxyInfo;
}; /* size: 0x0018 */

struct RoVariant::USE_INSTEAD_ReleaseAndGetAddressOf
{
}; /* size: 0x0001 */

class CClipboardBroker
{
}; /* size: 0x0010 */

typedef struct _PKCS12_PBES2_EXPORT_PARAMS
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_993;
  /* 0x0008 */ void* hNcryptDescriptor;
  /* 0x0010 */ wchar_t* pwszPbes2Alg;
} PKCS12_PBES2_EXPORT_PARAMS, *PPKCS12_PBES2_EXPORT_PARAMS; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationReader> const >;

typedef struct _IMAGE_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned long SizeOfStackReserve;
  /* 0x004c */ unsigned long SizeOfStackCommit;
  /* 0x0050 */ unsigned long SizeOfHeapReserve;
  /* 0x0054 */ unsigned long SizeOfHeapCommit;
  /* 0x0058 */ unsigned long LoaderFlags;
  /* 0x005c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0060 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER; /* size: 0x00e0 */

struct tagCWPRETSTRUCT
{
  /* 0x0000 */ __int64 lResult;
  /* 0x0008 */ __int64 lParam;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ unsigned int message;
  /* 0x001c */ long Padding_994;
  /* 0x0020 */ struct HWND__* hwnd;
}; /* size: 0x0028 */

class CClipboardBroker::CClipboardBrokerExternalReference
{
  /* 0x0000 */ long Padding_995[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IClipboardBroker> _impl;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<TypeLibRegistrationReader> >;

struct utl::input_iterator_tag
{
}; /* size: 0x0001 */

struct utl::bidirectional_iterator_tag
{
}; /* size: 0x0001 */

struct utl::construct<unsigned __int64>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION
{
  /* 0x0000 */ unsigned long VetoType;
  /* 0x0004 */ long Padding_996;
  /* 0x0008 */ struct _UNICODE_STRING VetoList;
} SYSTEM_LEGACY_DRIVER_INFORMATION, *PSYSTEM_LEGACY_DRIVER_INFORMATION; /* size: 0x0018 */

typedef struct _CMC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ long Padding_997;
  /* 0x0008 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0010 */ unsigned long cTaggedContentInfo;
  /* 0x0014 */ long Padding_998;
  /* 0x0018 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0020 */ unsigned long cTaggedOtherMsg;
  /* 0x0024 */ long Padding_999;
  /* 0x0028 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_RESPONSE_INFO, *PCMC_RESPONSE_INFO; /* size: 0x0030 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IClipboardBroker>
{
  /* 0x0000 */ long Padding_1000[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IConversionClass>
{
}; /* size: 0x0010 */

typedef struct _CMC_TAGGED_CONTENT_INFO
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1001;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncodedContentInfo;
} CMC_TAGGED_CONTENT_INFO, *PCMC_TAGGED_CONTENT_INFO; /* size: 0x0018 */

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION
{
  /* 0x0000 */ unsigned char KernelDebuggerEnabled;
  /* 0x0001 */ unsigned char KernelDebuggerNotPresent;
} SYSTEM_KERNEL_DEBUGGER_INFORMATION, *PSYSTEM_KERNEL_DEBUGGER_INFORMATION; /* size: 0x0002 */

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT; /* size: 0x0020 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned long RootIndexUsed;
  /* 0x000c */ long __PADDING__[1];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL; /* size: 0x0010 */

struct tagMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ long Padding_1002;
  /* 0x0018 */ struct HMENU__* hSubMenu;
  /* 0x0020 */ struct HBITMAP__* hbmpChecked;
  /* 0x0028 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0030 */ unsigned __int64 dwItemData;
  /* 0x0038 */ wchar_t* dwTypeData;
  /* 0x0040 */ unsigned int cch;
  /* 0x0044 */ long Padding_1003;
  /* 0x0048 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0050 */

typedef struct _SYSTEM_VERIFIER_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Level;
  /* 0x0008 */ unsigned long RuleClasses[2];
  /* 0x0010 */ unsigned long TriageContext;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0014 */ unsigned long AreAllDriversBeingVerified : 1; /* bit position: 0 */
          /* 0x0014 */ unsigned long DisabledFromCrash : 1; /* bit position: 1 */
          /* 0x0014 */ unsigned long Spare : 30; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ Flags;
      /* 0x0014 */ unsigned long Whole;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  /* 0x0018 */ struct _UNICODE_STRING DriverName;
  /* 0x0028 */ unsigned long RaiseIrqls;
  /* 0x002c */ unsigned long AcquireSpinLocks;
  /* 0x0030 */ unsigned long SynchronizeExecutions;
  /* 0x0034 */ unsigned long AllocationsAttempted;
  /* 0x0038 */ unsigned long AllocationsSucceeded;
  /* 0x003c */ unsigned long AllocationsSucceededSpecialPool;
  /* 0x0040 */ unsigned long AllocationsWithNoTag;
  /* 0x0044 */ unsigned long TrimRequests;
  /* 0x0048 */ unsigned long Trims;
  /* 0x004c */ unsigned long AllocationsFailed;
  /* 0x0050 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0054 */ unsigned long Loads;
  /* 0x0058 */ unsigned long Unloads;
  /* 0x005c */ unsigned long UnTrackedPool;
  /* 0x0060 */ unsigned long CurrentPagedPoolAllocations;
  /* 0x0064 */ unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0068 */ unsigned long PeakPagedPoolAllocations;
  /* 0x006c */ unsigned long PeakNonPagedPoolAllocations;
  /* 0x0070 */ unsigned __int64 PagedPoolUsageInBytes;
  /* 0x0078 */ unsigned __int64 NonPagedPoolUsageInBytes;
  /* 0x0080 */ unsigned __int64 PeakPagedPoolUsageInBytes;
  /* 0x0088 */ unsigned __int64 PeakNonPagedPoolUsageInBytes;
} SYSTEM_VERIFIER_INFORMATION, *PSYSTEM_VERIFIER_INFORMATION; /* size: 0x0090 */

struct HMENU__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagALTTABINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int cItems;
  /* 0x0008 */ int cColumns;
  /* 0x000c */ int cRows;
  /* 0x0010 */ int iColFocus;
  /* 0x0014 */ int iRowFocus;
  /* 0x0018 */ int cxItem;
  /* 0x001c */ int cyItem;
  /* 0x0020 */ struct tagPOINT ptStart;
}; /* size: 0x0028 */

typedef struct _SYSTEM_FLUSH_INFORMATION
{
  /* 0x0000 */ unsigned long SupportedFlushMethods;
  /* 0x0004 */ unsigned long ProcessorCacheFlushSize;
  /* 0x0008 */ unsigned __int64 SystemFlushCapabilities;
  /* 0x0010 */ unsigned __int64 Reserved[2];
} SYSTEM_FLUSH_INFORMATION, *PSYSTEM_FLUSH_INFORMATION; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<OleClassInfoDataFormatIterator>
{
  /* 0x0000 */ class OleClassInfoDataFormatIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _ENUM_SERVICE_STATUSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ wchar_t* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS ServiceStatus;
  /* 0x002c */ long __PADDING__[1];
} ENUM_SERVICE_STATUSW, *PENUM_SERVICE_STATUSW; /* size: 0x0030 */

typedef struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_VERIFIER_INFORMATION Legacy;
  /* 0x0090 */ unsigned long RaiseIrqls;
  /* 0x0094 */ unsigned long AcquireSpinLocks;
  /* 0x0098 */ unsigned long SynchronizeExecutions;
  /* 0x009c */ unsigned long AllocationsWithNoTag;
  /* 0x00a0 */ unsigned long AllocationsFailed;
  /* 0x00a4 */ unsigned long AllocationsFailedDeliberately;
  /* 0x00a8 */ unsigned __int64 LockedBytes;
  /* 0x00b0 */ unsigned __int64 PeakLockedBytes;
  /* 0x00b8 */ unsigned __int64 MappedLockedBytes;
  /* 0x00c0 */ unsigned __int64 PeakMappedLockedBytes;
  /* 0x00c8 */ unsigned __int64 MappedIoSpaceBytes;
  /* 0x00d0 */ unsigned __int64 PeakMappedIoSpaceBytes;
  /* 0x00d8 */ unsigned __int64 PagesForMdlBytes;
  /* 0x00e0 */ unsigned __int64 PeakPagesForMdlBytes;
  /* 0x00e8 */ unsigned __int64 ContiguousMemoryBytes;
  /* 0x00f0 */ unsigned __int64 PeakContiguousMemoryBytes;
  /* 0x00f8 */ unsigned long ExecutePoolTypes;
  /* 0x00fc */ unsigned long ExecutePageProtections;
  /* 0x0100 */ unsigned long ExecutePageMappings;
  /* 0x0104 */ unsigned long ExecuteWriteSections;
  /* 0x0108 */ unsigned long SectionAlignmentFailures;
  /* 0x010c */ unsigned long IATInExecutableSection;
} SYSTEM_VERIFIER_COUNTERS_INFORMATION, *PSYSTEM_VERIFIER_COUNTERS_INFORMATION; /* size: 0x0110 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IClipboardBroker>
{
}; /* size: 0x0008 */

typedef struct _SHQUERYRBINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1004;
  /* 0x0008 */ __int64 i64Size;
  /* 0x0010 */ __int64 i64NumItems;
} SHQUERYRBINFO, *PSHQUERYRBINFO; /* size: 0x0018 */

typedef struct _RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY EnableExportAddressFilter;
  /* 0x0008 */ union _RTL_IMAGE_MITIGATION_POLICY EnableExportAddressFilterPlus;
  /* 0x0010 */ union _RTL_IMAGE_MITIGATION_POLICY EnableImportAddressFilter;
  /* 0x0018 */ union _RTL_IMAGE_MITIGATION_POLICY EnableRopStackPivot;
  /* 0x0020 */ union _RTL_IMAGE_MITIGATION_POLICY EnableRopCallerCheck;
  /* 0x0028 */ union _RTL_IMAGE_MITIGATION_POLICY EnableRopSimExec;
  /* 0x0030 */ wchar_t EafPlusModuleList[512];
} RTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY, *PRTL_IMAGE_MITIGATION_PAYLOAD_RESTRICTION_POLICY; /* size: 0x0430 */

struct tagIMECHARPOSITION
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCharPos;
  /* 0x0008 */ struct tagPOINT pt;
  /* 0x0010 */ unsigned int cLineHeight;
  /* 0x0014 */ struct tagRECT rcDocument;
}; /* size: 0x0024 */

typedef struct _RTL_BUFFER
{
  /* 0x0000 */ unsigned char* Buffer;
  /* 0x0008 */ unsigned char* StaticBuffer;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ unsigned __int64 StaticSize;
} RTL_BUFFER, *PRTL_BUFFER; /* size: 0x0020 */

typedef struct _RTL_UNICODE_STRING_BUFFER
{
  /* 0x0000 */ struct _UNICODE_STRING String;
  /* 0x0010 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0030 */ unsigned char MinimumStaticBufferForTerminalNul[2];
  /* 0x0032 */ char __PADDING__[6];
} RTL_UNICODE_STRING_BUFFER, *PRTL_UNICODE_STRING_BUFFER; /* size: 0x0038 */

struct IGetContextId
{
}; /* size: 0x0008 */

typedef struct _HARDWARE_COUNTER_DATA
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Value;
} HARDWARE_COUNTER_DATA, *PHARDWARE_COUNTER_DATA; /* size: 0x0010 */

typedef struct _PROCESS_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long HandleCount;
  /* 0x0004 */ unsigned long HandleCountHighWatermark;
} PROCESS_HANDLE_INFORMATION, *PPROCESS_HANDLE_INFORMATION; /* size: 0x0008 */

struct IResourceReferenceHandler
{
}; /* size: 0x0008 */

typedef struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass
{
  /* 0x0000 */ enum _FILE_STORAGE_TIER_CLASS Class;
  /* 0x0004 */ unsigned long Flags;
} STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass, *PSTREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass; /* size: 0x0008 */

typedef struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_Reparse
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long ReparseDataSize;
  /* 0x0008 */ unsigned long ReparseDataOffset;
} STREAM_INFORMATION_ENTRY::_StreamInformation::_Reparse, *PSTREAM_INFORMATION_ENTRY::_StreamInformation::_Reparse; /* size: 0x000c */

typedef union _STREAM_INFORMATION_ENTRY::_StreamInformation
{
  union
  {
    /* 0x0000 */ struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DesiredStorageClass DesiredStorageClass;
    /* 0x0000 */ struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_DataStream DataStream;
    /* 0x0000 */ struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_Reparse Reparse;
    /* 0x0000 */ struct _STREAM_INFORMATION_ENTRY::_StreamInformation::_Ea Ea;
  }; /* size: 0x0010 */
} STREAM_INFORMATION_ENTRY::_StreamInformation, *PSTREAM_INFORMATION_ENTRY::_StreamInformation; /* size: 0x0010 */

typedef struct _STREAM_INFORMATION_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _STREAM_INFORMATION_ENTRY::_StreamInformation StreamInformation;
} STREAM_INFORMATION_ENTRY, *PSTREAM_INFORMATION_ENTRY; /* size: 0x0018 */

typedef struct _OCSP_SIGNATURE_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB Signature;
  /* 0x0030 */ unsigned long cCertEncoded;
  /* 0x0034 */ long Padding_1005;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
} OCSP_SIGNATURE_INFO, *POCSP_SIGNATURE_INFO; /* size: 0x0040 */

class wil::com_ptr_t<Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,wil::err_returncode_policy>
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IIterable<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>* m_ptr;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoDataFormatIterator> >;

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ unsigned short DataLength;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[2];
} SL_KMEM_CACHE_VALUE_DESCRIPTOR, *PSL_KMEM_CACHE_VALUE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _SL_KMEM_CACHE
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long SizeOfData;
  /* 0x0008 */ unsigned long SignatureSize;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long Version;
  /* 0x0014 */ struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_KMEM_CACHE, *PSL_KMEM_CACHE; /* size: 0x0028 */

struct ANON_OBJECT_HEADER_BIGOBJ
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
  /* 0x002c */ unsigned long NumberOfSections;
  /* 0x0030 */ unsigned long PointerToSymbolTable;
  /* 0x0034 */ unsigned long NumberOfSymbols;
}; /* size: 0x0038 */

typedef struct _FSCTL_UNMAP_SPACE_OUTPUT
{
  /* 0x0000 */ union _LARGE_INTEGER BytesUnmapped;
} FSCTL_UNMAP_SPACE_OUTPUT, *PFSCTL_UNMAP_SPACE_OUTPUT; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IResourceReferenceHandler>;

struct wil::details::handle_null_only_resource_policy<int (__cdecl*)(void *),&CloseHandle>
{
}; /* size: 0x0001 */

struct tagEMRPOLYDRAW16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
  /* 0x0020 */ unsigned char abTypes[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

struct tagHELPWININFOA
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ char rgchMember[2];
  /* 0x001a */ char __PADDING__[2];
}; /* size: 0x001c */

typedef struct _FILE_COMPRESSION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFORMATION, *PFILE_COMPRESSION_INFORMATION; /* size: 0x0010 */

typedef struct _DRAGINFOW
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ wchar_t* lpFileList;
  /* 0x0018 */ unsigned long grfKeyState;
  /* 0x001c */ long __PADDING__[1];
} DRAGINFOW, *PDRAGINFOW; /* size: 0x0020 */

struct tagPOINTER_PEN_INFO
{
  /* 0x0000 */ struct tagPOINTER_INFO pointerInfo;
  /* 0x0060 */ unsigned int penFlags;
  /* 0x0064 */ unsigned int penMask;
  /* 0x0068 */ unsigned int pressure;
  /* 0x006c */ unsigned int rotation;
  /* 0x0070 */ int tiltX;
  /* 0x0074 */ int tiltY;
}; /* size: 0x0078 */

typedef struct _CERT_POLICY_MAPPING
{
  /* 0x0000 */ char* pszIssuerDomainPolicy;
  /* 0x0008 */ char* pszSubjectDomainPolicy;
} CERT_POLICY_MAPPING, *PCERT_POLICY_MAPPING; /* size: 0x0010 */

typedef struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AvailablePages;
  /* 0x0008 */ unsigned __int64 CommittedPages;
  /* 0x0010 */ unsigned __int64 CommitLimit;
  /* 0x0018 */ unsigned __int64 PeakCommitment;
} SYSTEM_BASIC_PERFORMANCE_INFORMATION, *PSYSTEM_BASIC_PERFORMANCE_INFORMATION; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<InsertableCandidateIterator>
{
  /* 0x0000 */ class InsertableCandidateIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _CRYPT_PSOURCE_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncodingParameters;
} CRYPT_PSOURCE_ALGORITHM, *PCRYPT_PSOURCE_ALGORITHM; /* size: 0x0018 */

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x0038 */ struct _CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
} CRYPT_RSAES_OAEP_PARAMETERS, *PCRYPT_RSAES_OAEP_PARAMETERS; /* size: 0x0050 */

class InsertableCandidateIterator
{
  /* 0x0000 */ long Padding_1006[4];
  /* 0x0010 */ class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy> m_resourceManager;
  /* 0x0018 */ class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy> m_resourceContext;
  /* 0x0020 */ class wil::com_ptr_t<IComProgIdIterator,wil::err_returncode_policy> m_progIdIterator;
}; /* size: 0x0028 */

struct tagEMRALPHABLEND
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

typedef struct _SET_CACHED_RUNS_STATE_INPUT_BUFFER
{
  /* 0x0000 */ unsigned char Enable;
} SET_CACHED_RUNS_STATE_INPUT_BUFFER, *PSET_CACHED_RUNS_STATE_INPUT_BUFFER; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> >;

typedef struct _CERT_X942_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB j;
  /* 0x0040 */ struct _CERT_X942_DH_VALIDATION_PARAMS* pValidationParams;
} CERT_X942_DH_PARAMETERS, *PCERT_X942_DH_PARAMETERS; /* size: 0x0048 */

typedef struct _CRL_REVOCATION_INFO
{
  /* 0x0000 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0008 */ const struct _CRL_CONTEXT* pCrlContext;
  /* 0x0010 */ const struct _CERT_CHAIN_CONTEXT* pCrlIssuerChain;
} CRL_REVOCATION_INFO, *PCRL_REVOCATION_INFO; /* size: 0x0018 */

struct tagWCRANGE
{
  /* 0x0000 */ wchar_t wcLow;
  /* 0x0002 */ unsigned short cGlyphs;
}; /* size: 0x0004 */

typedef struct _FILE_PIPE_DELETE_SYMLINK_INPUT
{
  /* 0x0000 */ unsigned short NameOffset;
  /* 0x0002 */ unsigned short NameLength;
} FILE_PIPE_DELETE_SYMLINK_INPUT, *PFILE_PIPE_DELETE_SYMLINK_INPUT; /* size: 0x0004 */

struct IRpcOptions
{
}; /* size: 0x0008 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBrokerInternal>
{
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<InsertableCandidateIterator> >;

typedef struct _MEMORY_BASIC_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ void* AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ unsigned short PartitionId;
  /* 0x0016 */ char Padding_1007[2];
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ long __PADDING__[1];
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _PROCESSOR_POWER_POLICY_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned long DemoteLimit;
  /* 0x0008 */ unsigned long PromoteLimit;
  /* 0x000c */ unsigned char DemotePercent;
  /* 0x000d */ unsigned char PromotePercent;
  /* 0x000e */ unsigned char Spare[2];
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned long AllowDemotion : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned long AllowPromotion : 1; /* bit position: 1 */
    /* 0x0010 */ unsigned long Reserved : 30; /* bit position: 2 */
  }; /* bitfield */
} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO; /* size: 0x0014 */

typedef struct _PROCESSOR_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char DynamicThrottle;
  /* 0x0005 */ unsigned char Spare[3];
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DisableCStates : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ unsigned long PolicyCount;
  /* 0x0010 */ struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY; /* size: 0x004c */

typedef struct _PROCESSOR_IDLE_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct _PROCESSOR_IDLE_STATE State[1];
} PROCESSOR_IDLE_STATES, *PPROCESSOR_IDLE_STATES; /* size: 0x0038 */

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long PropertyType;
  /* 0x0014 */ long Padding_1008;
  /* 0x0018 */ void* Buffer;
  /* 0x0020 */ unsigned long BufferSize;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_PROPERTY_DATA, *PPLUGPLAY_CONTROL_PROPERTY_DATA; /* size: 0x0028 */

typedef struct _ALPC_PORT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x0010 */ unsigned __int64 MaxMessageLength;
  /* 0x0018 */ unsigned __int64 MemoryBandwidth;
  /* 0x0020 */ unsigned __int64 MaxPoolUsage;
  /* 0x0028 */ unsigned __int64 MaxSectionSize;
  /* 0x0030 */ unsigned __int64 MaxViewSize;
  /* 0x0038 */ unsigned __int64 MaxTotalSectionSize;
  /* 0x0040 */ unsigned long DupObjectTypes;
  /* 0x0044 */ unsigned long Reserved;
} ALPC_PORT_ATTRIBUTES, *PALPC_PORT_ATTRIBUTES; /* size: 0x0048 */

typedef struct _SE_SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ void* SecurityDescriptor;
} SE_SECURITY_DESCRIPTOR, *PSE_SECURITY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int enableAdvancedColor : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
} DISPLAYCONFIG_SET_ADVANCED_COLOR_STATE, *PDISPLAYCONFIG_SET_ADVANCED_COLOR_STATE; /* size: 0x0018 */

typedef struct _CSV_QUERY_VOLUME_ID
{
  /* 0x0000 */ struct _GUID VolumeId;
} CSV_QUERY_VOLUME_ID, *PCSV_QUERY_VOLUME_ID; /* size: 0x0010 */

struct tagMOUSEMOVEPOINT
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ long Padding_1009;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

typedef struct _KEY_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
} KEY_WRITE_TIME_INFORMATION, *PKEY_WRITE_TIME_INFORMATION; /* size: 0x0008 */

class wil::details::SyncAsyncActionOp
{
}; /* size: 0x0068 */

typedef struct _HSM_OPCODE
{
  /* 0x0000 */ unsigned long Tag;
  /* 0x0004 */ unsigned long Code;
} HSM_OPCODE, *PHSM_OPCODE; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING SymbolicLinkName;
  /* 0x0010 */ struct _GUID* AliasClassGuid;
  /* 0x0018 */ wchar_t* AliasSymbolicLinkName;
  /* 0x0020 */ unsigned long AliasSymbolicLinkNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA, *PPLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA; /* size: 0x0028 */

class wil::details_abi::SerializedFailure::Serialize::__l2::<lambda_057488ec2a114cea6fb77af5c8c7453a>
{
  /* 0x0000 */ unsigned char*& bufferStart;
  /* 0x0008 */ unsigned __int64& required;
  /* 0x0010 */ unsigned __int64& capacity;
  /* 0x0018 */ unsigned char*& buffer;
  /* 0x0020 */ unsigned char*& bufferEnd;
}; /* size: 0x0028 */

typedef struct _ALPC_SERVER_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* ThreadHandle;
    } /* size: 0x0008 */ In;
    struct
    {
      /* 0x0000 */ unsigned char ThreadBlocked;
      /* 0x0001 */ char Padding_1010[7];
      /* 0x0008 */ void* ConnectedProcessId;
      /* 0x0010 */ struct _UNICODE_STRING ConnectionPortName;
    } /* size: 0x0020 */ Out;
  }; /* size: 0x0020 */
} ALPC_SERVER_INFORMATION, *PALPC_SERVER_INFORMATION; /* size: 0x0020 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<1>
{
} RTL_CONSTANT_STRING_remove_const_template_class<1>, *PRTL_CONSTANT_STRING_remove_const_template_class<1>; /* size: 0x0001 */

typedef struct _QUERY_STORAGE_RESERVE_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AreaIdOffset;
  /* 0x000c */ unsigned long AreaIdCount;
  /* 0x0010 */ enum _STORAGE_RESERVE_ID AreaId[1];
} QUERY_STORAGE_RESERVE_INPUT, *PQUERY_STORAGE_RESERVE_INPUT; /* size: 0x0014 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<wil::details::SyncAsyncActionOp> >;

typedef struct _CONSOLE_SCREEN_BUFFER_INFO
{
  /* 0x0000 */ struct _COORD dwSize;
  /* 0x0004 */ struct _COORD dwCursorPosition;
  /* 0x0008 */ unsigned short wAttributes;
  /* 0x000a */ struct _SMALL_RECT srWindow;
  /* 0x0012 */ struct _COORD dwMaximumWindowSize;
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO; /* size: 0x0016 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY
{
  /* 0x0000 */ unsigned long EntryLength;
  /* 0x0004 */ unsigned long DependencyTypeFlags;
  /* 0x0008 */ unsigned long ProviderSpecificFlags;
  /* 0x000c */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
  /* 0x0020 */ unsigned long AncestorLevel;
  /* 0x0024 */ unsigned long HostVolumeNameOffset;
  /* 0x0028 */ unsigned long HostVolumeNameSize;
  /* 0x002c */ unsigned long DependentVolumeNameOffset;
  /* 0x0030 */ unsigned long DependentVolumeNameSize;
  /* 0x0034 */ unsigned long RelativePathOffset;
  /* 0x0038 */ unsigned long RelativePathSize;
  /* 0x003c */ unsigned long DependentDeviceNameOffset;
  /* 0x0040 */ unsigned long DependentDeviceNameSize;
} STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY, *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY; /* size: 0x0044 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE
{
  /* 0x0000 */ unsigned long ResponseLevel;
  /* 0x0004 */ unsigned long NumberEntries;
  union
  {
    /* 0x0008 */ struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY* Lev1Depends /* zero-length array */;
    /* 0x0008 */ struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY* Lev2Depends /* zero-length array */;
    /* 0x0008 */ long __PADDING__[17];
  }; /* size: 0x0044 */
} STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE, *PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE; /* size: 0x004c */

struct tagDELETEITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ long Padding_1011;
  /* 0x0010 */ struct HWND__* hwndItem;
  /* 0x0018 */ unsigned __int64 itemData;
}; /* size: 0x0020 */

typedef struct _ALPC_SERVER_SESSION_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long ProcessId;
} ALPC_SERVER_SESSION_INFORMATION, *PALPC_SERVER_SESSION_INFORMATION; /* size: 0x0008 */

typedef struct _Wx86ThreadState
{
  /* 0x0000 */ unsigned long* CallBx86Eip;
  /* 0x0008 */ void* DeallocationCpu;
  /* 0x0010 */ unsigned char UseKnownWx86Dll;
  /* 0x0011 */ char OleStubInvoked;
  /* 0x0012 */ char __PADDING__[6];
} Wx86ThreadState, *PWx86ThreadState; /* size: 0x0018 */

typedef struct _FILE_CASE_SENSITIVE_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_CASE_SENSITIVE_INFORMATION, *PFILE_CASE_SENSITIVE_INFORMATION; /* size: 0x0004 */

struct wil::details::out_param_t<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
  /* 0x0000 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void (__cdecl*)(void *),&CoTaskMemFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > >& wrapper;
  /* 0x0008 */ wchar_t* pRaw;
  /* 0x0010 */ BOOL replace;
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

typedef struct _FILE_PIPE_INFORMATION
{
  /* 0x0000 */ unsigned long ReadMode;
  /* 0x0004 */ unsigned long CompletionMode;
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION; /* size: 0x0008 */

typedef struct _VIRTUALIZATION_INSTANCE_INFO_INPUT
{
  /* 0x0000 */ unsigned long NumberOfWorkerThreads;
  /* 0x0004 */ unsigned long Flags;
} VIRTUALIZATION_INSTANCE_INFO_INPUT, *PVIRTUALIZATION_INSTANCE_INFO_INPUT; /* size: 0x0008 */

struct tagMOUSEINPUT
{
  /* 0x0000 */ long dx;
  /* 0x0004 */ long dy;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ long Padding_1012;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

struct tagKEYBDINPUT
{
  /* 0x0000 */ unsigned short wVk;
  /* 0x0002 */ unsigned short wScan;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ long Padding_1013;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

struct tagHARDWAREINPUT
{
  /* 0x0000 */ unsigned long uMsg;
  /* 0x0004 */ unsigned short wParamL;
  /* 0x0006 */ unsigned short wParamH;
}; /* size: 0x0008 */

struct tagINPUT
{
  /* 0x0000 */ unsigned long type;
  /* 0x0004 */ long Padding_1014;
  union
  {
    /* 0x0008 */ struct tagMOUSEINPUT mi;
    /* 0x0008 */ struct tagKEYBDINPUT ki;
    struct
    {
      /* 0x0008 */ struct tagHARDWAREINPUT hi;
      /* 0x0010 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

struct NOTIFY_USER_POWER_SETTING
{
  /* 0x0000 */ struct _GUID Guid;
}; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction>
{
  /* 0x0000 */ struct Windows::Foundation::IAsyncAction* ptr_;
}; /* size: 0x0008 */

typedef struct _ENCLAVE_LOAD_INFO_VBS
{
  union
  {
    /* 0x0000 */ void* ImageHandle;
    /* 0x0000 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned short NameLength;
  /* 0x000a */ wchar_t Name[1];
  /* 0x000c */ long __PADDING__[1];
} ENCLAVE_LOAD_INFO_VBS, *PENCLAVE_LOAD_INFO_VBS; /* size: 0x0010 */

struct Windows::Foundation::IAsyncAction
{
}; /* size: 0x0008 */

struct IPolicyAsync
{
}; /* size: 0x0008 */

struct tagDESIGNVECTOR
{
  /* 0x0000 */ unsigned long dvReserved;
  /* 0x0004 */ unsigned long dvNumAxes;
  /* 0x0008 */ long dvValues[16];
}; /* size: 0x0048 */

typedef struct _NCRYPT_KEY_BLOB_HEADER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbAlgName;
  /* 0x000c */ unsigned long cbKeyData;
} NCRYPT_KEY_BLOB_HEADER, *PNCRYPT_KEY_BLOB_HEADER; /* size: 0x0010 */

typedef struct _RTLP_PROCESS_REFLECTION_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ReflectionContextSize;
  /* 0x0008 */ unsigned long ReflectionFlags;
  /* 0x000c */ long Padding_1015;
  /* 0x0010 */ void* ReflectionRoutine /* function */;
  /* 0x0018 */ void* ReflectionParameter;
  /* 0x0020 */ void* ReflectedProcessCreatedEvent;
  /* 0x0028 */ void* ReflectedProcessHandlesDuplicatedEvent;
  /* 0x0030 */ void* ReflectionStartEvent;
  /* 0x0038 */ struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION ReflectionInformation;
} RTLP_PROCESS_REFLECTION_CONTEXT, *PRTLP_PROCESS_REFLECTION_CONTEXT; /* size: 0x0058 */

struct RESOURCE_QUALIFIER
{
  /* 0x0000 */ wchar_t* pszQualifierName;
  /* 0x0008 */ wchar_t* pszQualifierValue;
  /* 0x0010 */ int bIsDefault;
  /* 0x0014 */ unsigned int uiPriority;
  /* 0x0018 */ double dMatchedScore;
  /* 0x0020 */ double dDefaultScore;
}; /* size: 0x0028 */

typedef struct _CRYPT_SMIME_CAPABILITIES
{
  /* 0x0000 */ unsigned long cCapability;
  /* 0x0004 */ long Padding_1016;
  /* 0x0008 */ struct _CRYPT_SMIME_CAPABILITY* rgCapability;
} CRYPT_SMIME_CAPABILITIES, *PCRYPT_SMIME_CAPABILITIES; /* size: 0x0010 */

typedef struct _MIDL_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char* Format /* zero-length array */;
} MIDL_FORMAT_STRING, *PMIDL_FORMAT_STRING; /* size: 0x0002 */

struct IResourceCandidate
{
}; /* size: 0x0008 */

struct IHttpNegotiate
{
}; /* size: 0x0008 */

struct IInterfaceInfo
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ENCLAVE_IMPORT
{
  /* 0x0000 */ unsigned long MatchType;
  /* 0x0004 */ unsigned long MinimumSecurityVersion;
  /* 0x0008 */ unsigned char UniqueOrAuthorID[32];
  /* 0x0028 */ unsigned char FamilyID[16];
  /* 0x0038 */ unsigned char ImageID[16];
  /* 0x0048 */ unsigned long ImportName;
  /* 0x004c */ unsigned long Reserved;
} IMAGE_ENCLAVE_IMPORT, *PIMAGE_ENCLAVE_IMPORT; /* size: 0x0050 */

struct IParseDisplayName
{
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
{
  /* 0x0000 */ unsigned long ElementCount;
  /* 0x0004 */ long Padding_1017;
  /* 0x0008 */ struct _COMPATIBILITY_CONTEXT_ELEMENT* Elements /* zero-length array */;
} ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION, *PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION; /* size: 0x0008 */

typedef struct _REFS_STREAM_SNAPSHOT_QUERY_DELTAS_INPUT_BUFFER
{
  /* 0x0000 */ __int64 StartingVcn;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
} REFS_STREAM_SNAPSHOT_QUERY_DELTAS_INPUT_BUFFER, *PREFS_STREAM_SNAPSHOT_QUERY_DELTAS_INPUT_BUFFER; /* size: 0x0010 */

typedef struct _OBJECT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1018;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_1019;
  /* 0x0020 */ void* SecurityDescriptor;
  /* 0x0028 */ void* SecurityQualityOfService;
} OBJECT_ATTRIBUTES, *POBJECT_ATTRIBUTES; /* size: 0x0030 */

typedef struct _MEMORY_WORKING_SET_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfEntries;
  /* 0x0008 */ struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
} MEMORY_WORKING_SET_INFORMATION, *PMEMORY_WORKING_SET_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  /* 0x0006 */ unsigned short MaximumProcessors;
  /* 0x0008 */ unsigned long ProcessorFeatureBits;
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION; /* size: 0x000c */

class RegistryTypeLibRegistration
{
  /* 0x0000 */ long Padding_1020[12];
  /* 0x0030 */ struct _GUID _typeLibId;
  /* 0x0040 */ wchar_t _version[256];
  /* 0x0240 */ unsigned long _localeId;
  /* 0x0244 */ long Padding_1021;
  /* 0x0248 */ class Microsoft::WRL::ComPtr<ReferencedRegistryKey> _versionKey;
  /* 0x0250 */ class RegistryKey _localeKey;
}; /* size: 0x0258 */

struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION
{
  /* 0x0000 */ unsigned short score;
  /* 0x0002 */ char Padding_1022[2];
  /* 0x0004 */ struct tagPOINT adjustedPoint;
}; /* size: 0x000c */

typedef struct _FILE_COMPRESSION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFO, *PFILE_COMPRESSION_INFO; /* size: 0x0010 */

typedef struct _SYSTEM_BOOT_GRAPHICS_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FrameBuffer;
  /* 0x0008 */ unsigned long Width;
  /* 0x000c */ unsigned long Height;
  /* 0x0010 */ unsigned long PixelStride;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ enum _SYSTEM_PIXEL_FORMAT Format;
  /* 0x001c */ unsigned long DisplayRotation;
} SYSTEM_BOOT_GRAPHICS_INFORMATION, *PSYSTEM_BOOT_GRAPHICS_INFORMATION; /* size: 0x0020 */

struct FILE_ID_DESCRIPTOR
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ enum _FILE_ID_TYPE Type;
  union
  {
    /* 0x0008 */ union _LARGE_INTEGER FileId;
    /* 0x0008 */ struct _GUID ObjectId;
    /* 0x0008 */ struct _FILE_ID_128 ExtendedFileId;
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum ComTlsFlags>
{
} ENUM_FLAG_SIZED_INTEGER<enum ComTlsFlags>, *PENUM_FLAG_SIZED_INTEGER<enum ComTlsFlags>; /* size: 0x0001 */

typedef struct _RTL_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _TIME_FIELDS StandardStart;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _TIME_FIELDS DaylightStart;
  /* 0x00a8 */ long DaylightBias;
} RTL_TIME_ZONE_INFORMATION, *PRTL_TIME_ZONE_INFORMATION; /* size: 0x00ac */

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ struct _RTL_TIME_ZONE_INFORMATION tzi;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} RTL_DYNAMIC_TIME_ZONE_INFORMATION, *PRTL_DYNAMIC_TIME_ZONE_INFORMATION; /* size: 0x01b0 */

typedef struct _FILE_PIPE_CREATE_SYMLINK_INPUT
{
  /* 0x0000 */ unsigned short NameOffset;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned short SubstituteNameOffset;
  /* 0x0006 */ unsigned short SubstituteNameLength;
  /* 0x0008 */ unsigned long Flags;
} FILE_PIPE_CREATE_SYMLINK_INPUT, *PFILE_PIPE_CREATE_SYMLINK_INPUT; /* size: 0x000c */

typedef struct _PRIVKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ unsigned long bitlenX;
  /* 0x0014 */ struct _DSSSEED DSSSeed;
} PRIVKEYVER3, *PPRIVKEYVER3; /* size: 0x002c */

class Microsoft::WRL::ComPtr<IClipboardBrokerInternal>
{
  /* 0x0000 */ struct IClipboardBrokerInternal* ptr_;
}; /* size: 0x0008 */

typedef struct _DEDUP_FILE_OPERATION
{
  /* 0x0000 */ unsigned long Code;
} DEDUP_FILE_OPERATION, *PDEDUP_FILE_OPERATION; /* size: 0x0004 */

class wil::details::<lambda_132f49eefa8249beb4394ff597c915e5>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryTypeLibRegistration> >;

class wil::com_ptr_t<Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>,wil::err_returncode_policy>
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IMapView<HSTRING__ *,IInspectable *>* m_ptr;
}; /* size: 0x0008 */

typedef struct _tagCODEBASEHOLD
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1023;
  /* 0x0008 */ wchar_t* szDistUnit;
  /* 0x0010 */ wchar_t* szCodeBase;
  /* 0x0018 */ unsigned long dwVersionMS;
  /* 0x001c */ unsigned long dwVersionLS;
  /* 0x0020 */ unsigned long dwStyle;
  /* 0x0024 */ long __PADDING__[1];
} tagCODEBASEHOLD, *PtagCODEBASEHOLD; /* size: 0x0028 */

typedef struct _SCRUB_PARITY_EXTENT_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short NumberOfParityExtents;
  /* 0x0006 */ unsigned short MaximumNumberOfParityExtents;
  /* 0x0008 */ struct _SCRUB_PARITY_EXTENT ParityExtents[1];
} SCRUB_PARITY_EXTENT_DATA, *PSCRUB_PARITY_EXTENT_DATA; /* size: 0x0018 */

typedef struct _MUTANT_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ unsigned char OwnedByCaller;
  /* 0x0005 */ unsigned char AbandonedState;
  /* 0x0006 */ char __PADDING__[2];
} MUTANT_BASIC_INFORMATION, *PMUTANT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ wchar_t* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
  /* 0x0034 */ long __PADDING__[1];
} ENUM_SERVICE_STATUS_PROCESSW, *PENUM_SERVICE_STATUS_PROCESSW; /* size: 0x0038 */

struct tagMENUBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcBar;
  /* 0x0014 */ long Padding_1024;
  /* 0x0018 */ struct HMENU__* hMenu;
  /* 0x0020 */ struct HWND__* hwndMenu;
  struct /* bitfield */
  {
    /* 0x0028 */ int fBarFocused : 1; /* bit position: 0 */
    /* 0x0028 */ int fFocused : 1; /* bit position: 1 */
    /* 0x0028 */ int fUnused : 30; /* bit position: 2 */
  }; /* bitfield */
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _KEY_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long NameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<ITypeLibRegistrationReader>
{
  /* 0x0000 */ struct ITypeLibRegistrationReader* ptr_;
}; /* size: 0x0008 */

typedef struct _SECURITY_CAPABILITIES
{
  /* 0x0000 */ void* AppContainerSid;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Capabilities;
  /* 0x0010 */ unsigned long CapabilityCount;
  /* 0x0014 */ unsigned long Reserved;
} SECURITY_CAPABILITIES, *PSECURITY_CAPABILITIES; /* size: 0x0018 */

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1025;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _GUID TransactionID;
} JOURNAL_TRANSACTION_BOUNDARY_INFORMATION, *PJOURNAL_TRANSACTION_BOUNDARY_INFORMATION; /* size: 0x0028 */

typedef struct _SYSTEM_CPU_SET_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ enum _CPU_SET_INFORMATION_TYPE Type;
  struct
  {
    /* 0x0008 */ unsigned long Id;
    /* 0x000c */ unsigned short Group;
    /* 0x000e */ unsigned char LogicalProcessorIndex;
    /* 0x000f */ unsigned char CoreIndex;
    /* 0x0010 */ unsigned char LastLevelCacheIndex;
    /* 0x0011 */ unsigned char NumaNodeIndex;
    /* 0x0012 */ unsigned char EfficiencyClass;
    union
    {
      /* 0x0013 */ unsigned char AllFlags;
      struct /* bitfield */
      {
        /* 0x0013 */ unsigned char Parked : 1; /* bit position: 0 */
        /* 0x0013 */ unsigned char Allocated : 1; /* bit position: 1 */
        /* 0x0013 */ unsigned char AllocatedToTargetProcess : 1; /* bit position: 2 */
        /* 0x0013 */ unsigned char RealTime : 1; /* bit position: 3 */
        /* 0x0013 */ unsigned char ReservedFlags : 4; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0001 */
    union
    {
      /* 0x0014 */ unsigned long Reserved;
      /* 0x0014 */ unsigned char SchedulingClass;
    }; /* size: 0x0004 */
    /* 0x0018 */ unsigned __int64 AllocationTag;
  } /* size: 0x0018 */ CpuSet;
} SYSTEM_CPU_SET_INFORMATION, *PSYSTEM_CPU_SET_INFORMATION; /* size: 0x0020 */

typedef union _SE_SID
{
  union
  {
    /* 0x0000 */ struct _SID Sid;
    /* 0x0000 */ unsigned char Buffer[68];
  }; /* size: 0x0044 */
} SE_SID, *PSE_SID; /* size: 0x0044 */

typedef struct _RTL_HEAP_MEMORY_LIMIT_DATA
{
  /* 0x0000 */ unsigned __int64 CommitLimitBytes;
  /* 0x0008 */ unsigned __int64 CommitLimitFailureCode;
  /* 0x0010 */ unsigned __int64 MaxAllocationSizeBytes;
  /* 0x0018 */ unsigned __int64 AllocationLimitFailureCode;
} RTL_HEAP_MEMORY_LIMIT_DATA, *PRTL_HEAP_MEMORY_LIMIT_DATA; /* size: 0x0020 */

typedef struct _RTL_HEAP_MEMORY_LIMIT_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1026;
  /* 0x0008 */ struct _RTL_HEAP_MEMORY_LIMIT_DATA Data;
} RTL_HEAP_MEMORY_LIMIT_INFO, *PRTL_HEAP_MEMORY_LIMIT_INFO; /* size: 0x0028 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS>; /* size: 0x0001 */

typedef struct _REPAIR_COPIES_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER FileOffset;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ unsigned long SourceCopy;
  /* 0x0018 */ unsigned long NumberOfRepairCopies;
  /* 0x001c */ unsigned long RepairCopies[1];
} REPAIR_COPIES_INPUT, *PREPAIR_COPIES_INPUT; /* size: 0x0020 */

typedef struct _FILE_REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned long Tag;
  /* 0x000c */ long __PADDING__[1];
} FILE_REPARSE_POINT_INFORMATION, *PFILE_REPARSE_POINT_INFORMATION; /* size: 0x0010 */

typedef struct _PROV_ENUMALGS
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwBitLen;
  /* 0x0008 */ unsigned long dwNameLen;
  /* 0x000c */ char szName[20];
} PROV_ENUMALGS, *PPROV_ENUMALGS; /* size: 0x0020 */

typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 LengthWritten;
} FSCTL_OFFLOAD_WRITE_OUTPUT, *PFSCTL_OFFLOAD_WRITE_OUTPUT; /* size: 0x0010 */

typedef struct _ENCRYPTION_BUFFER
{
  /* 0x0000 */ unsigned long EncryptionOperation;
  /* 0x0004 */ unsigned char Private[1];
  /* 0x0005 */ char __PADDING__[3];
} ENCRYPTION_BUFFER, *PENCRYPTION_BUFFER; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationReader> const >;

struct IAddrExclusionControl
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PAGEFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long TotalSize;
  /* 0x0008 */ unsigned long TotalInUse;
  /* 0x000c */ unsigned long PeakUsage;
  /* 0x0010 */ struct _UNICODE_STRING PageFileName;
} SYSTEM_PAGEFILE_INFORMATION, *PSYSTEM_PAGEFILE_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_PAGEFILE_INFORMATION_EX
{
  /* 0x0000 */ struct _SYSTEM_PAGEFILE_INFORMATION Info;
  /* 0x0020 */ unsigned long MinimumSize;
  /* 0x0024 */ unsigned long MaximumSize;
} SYSTEM_PAGEFILE_INFORMATION_EX, *PSYSTEM_PAGEFILE_INFORMATION_EX; /* size: 0x0028 */

typedef struct _CM_SCSI_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char HostIdentifier;
  /* 0x0005 */ char __PADDING__[1];
} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA; /* size: 0x0006 */

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION
{
  /* 0x0000 */ unsigned long ActionTaken;
  /* 0x0004 */ long Padding_1027;
  /* 0x0008 */ unsigned __int64 CrashData[5];
  /* 0x0030 */ unsigned long VerifierMode;
  /* 0x0034 */ unsigned long VerifierFlags;
  /* 0x0038 */ wchar_t VerifierTargets[256];
} SYSTEM_VERIFIER_TRIAGE_INFORMATION, *PSYSTEM_VERIFIER_TRIAGE_INFORMATION; /* size: 0x0238 */

typedef struct _DEFINE_STORAGE_RESERVE_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AreaDefinitionOffset;
  /* 0x000c */ unsigned long AreaDefinitionCount;
  /* 0x0010 */ struct _STORAGE_RESERVE_AREA_DEFINITION AreaDefinition[1];
} DEFINE_STORAGE_RESERVE_INPUT, *PDEFINE_STORAGE_RESERVE_INPUT; /* size: 0x0020 */

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA
{
  /* 0x0000 */ struct HKEY__* hKeyBase;
  /* 0x0008 */ wchar_t* pwszRegPath;
} CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA; /* size: 0x0010 */

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER PerProcessUserTimeLimit;
  /* 0x0008 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0010 */ unsigned long LimitFlags;
  /* 0x0014 */ long Padding_1028;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0028 */ unsigned long ActiveProcessLimit;
  /* 0x002c */ long Padding_1029;
  /* 0x0030 */ unsigned __int64 Affinity;
  /* 0x0038 */ unsigned long PriorityClass;
  /* 0x003c */ unsigned long SchedulingClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION; /* size: 0x0040 */

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  /* 0x0040 */ struct _IO_COUNTERS IoInfo;
  /* 0x0070 */ unsigned __int64 ProcessMemoryLimit;
  /* 0x0078 */ unsigned __int64 JobMemoryLimit;
  /* 0x0080 */ unsigned __int64 PeakProcessMemoryUsed;
  /* 0x0088 */ unsigned __int64 PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION; /* size: 0x0090 */

typedef struct _ENLISTMENT_CRM_INFORMATION
{
  /* 0x0000 */ struct _GUID CrmTransactionManagerId;
  /* 0x0010 */ struct _GUID CrmResourceManagerId;
  /* 0x0020 */ struct _GUID CrmEnlistmentId;
} ENLISTMENT_CRM_INFORMATION, *PENLISTMENT_CRM_INFORMATION; /* size: 0x0030 */

struct PROCESSOR_IDLE_TIMES
{
  /* 0x0000 */ unsigned __int64 StartTime;
  /* 0x0008 */ unsigned __int64 EndTime;
  /* 0x0010 */ unsigned long Reserved[4];
}; /* size: 0x0020 */

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY NextEntry;
  /* 0x0010 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0020 */ struct _UNICODE_STRING FullDllName;
  /* 0x0030 */ unsigned long CoverageSectionSize;
  /* 0x0034 */ long Padding_1030;
  /* 0x0038 */ void* CoverageSection;
} COVERAGE_UNLOADED_MODULE_ENTRY, *PCOVERAGE_UNLOADED_MODULE_ENTRY; /* size: 0x0040 */

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ValidDataLength;
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION; /* size: 0x0008 */

class wil::com_ptr_t<IRegistration,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IRegistration* m_ptr;
}; /* size: 0x0008 */

typedef struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* Attributes;
  /* 0x0008 */ enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION* Operations;
} TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION, *PTOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION; /* size: 0x0010 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1031;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ unsigned __int64 hCryptProv;
  /* 0x0030 */ unsigned long dwKeyChoice;
  /* 0x0034 */ long Padding_1032;
  union
  {
    /* 0x0038 */ unsigned __int64 hKeyEncryptionKey;
    /* 0x0038 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0008 */
  /* 0x0040 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0050 */ struct _FILETIME Date;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO; /* size: 0x0060 */

typedef struct _QUERY_CACHED_RUNS_BIN
{
  /* 0x0000 */ __int64 MaxLength;
  /* 0x0008 */ unsigned long RunCount;
  /* 0x000c */ unsigned long EffectiveAllocations;
} QUERY_CACHED_RUNS_BIN, *PQUERY_CACHED_RUNS_BIN; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >
{
}; /* size: 0x0008 */

typedef struct _PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} PROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE, *PPROCESS_DYNAMIC_ENFORCED_ADDRESS_RANGE; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistration> >
{
}; /* size: 0x0008 */

struct IInternetSession
{
}; /* size: 0x0008 */

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* IoCompletionPortHandle;
  /* 0x0008 */ unsigned __int64 CompletionKey;
} RESOURCEMANAGER_COMPLETION_INFORMATION, *PRESOURCEMANAGER_COMPLETION_INFORMATION; /* size: 0x0010 */

class CBrokerInstanceHolder
{
  /* 0x0000 */ class Windows::Internal::GitPtr _GITBroker;
}; /* size: 0x0010 */

typedef struct _MUILANGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ unsigned char bUseUseMachineConfigList;
  /* 0x0009 */ char Padding_1033[7];
  /* 0x0010 */ struct _MUIREGISTRYINFO* RegInfo;
  /* 0x0018 */ struct _MUILANGLISTNODE* Languages;
  /* 0x0020 */ unsigned __int64 ullMask;
  /* 0x0028 */ unsigned int uConsoleFlag;
  /* 0x002c */ wchar_t Checksum[10];
} MUILANGLIST, *PMUILANGLIST; /* size: 0x0040 */

typedef struct _GHOSTED_FILE_EXTENT
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER ByteCount;
  /* 0x0010 */ struct _GUID RecallOwnerGuid;
  /* 0x0020 */ unsigned long NextEntryOffset;
  /* 0x0024 */ unsigned long RecallMetadataBufferSize;
  /* 0x0028 */ unsigned char RecallMetadataBuffer[1];
  /* 0x0029 */ char __PADDING__[7];
} GHOSTED_FILE_EXTENT, *PGHOSTED_FILE_EXTENT; /* size: 0x0030 */

typedef struct _CRYPT_PROPERTY_REF
{
  /* 0x0000 */ wchar_t* pszProperty;
  /* 0x0008 */ unsigned long cbValue;
  /* 0x000c */ long Padding_1034;
  /* 0x0010 */ unsigned char* pbValue;
} CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF; /* size: 0x0018 */

typedef struct _MUILANGUAGES
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumLanguages;
  /* 0x0006 */ unsigned short NumLanguages;
  /* 0x0008 */ unsigned short NumInstalledLanguages;
  /* 0x000a */ char Padding_1035[6];
  /* 0x0010 */ struct _MUILANGINFO* LangInfos;
} MUILANGUAGES, *PMUILANGUAGES; /* size: 0x0018 */

struct tagSECURITYBINDING
{
  /* 0x0000 */ unsigned short wAuthnSvc;
  /* 0x0002 */ unsigned short wAuthzSvc;
  /* 0x0004 */ unsigned short aPrincName;
}; /* size: 0x0006 */

typedef struct _MUISTRINGPOOL
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumStrings;
  /* 0x0006 */ unsigned short NumStrings;
  /* 0x0008 */ unsigned short MaxNumCharsInPool;
  /* 0x000a */ unsigned short NumCharsInPool;
  /* 0x000c */ long Padding_1036;
  /* 0x0010 */ short* Strings;
  /* 0x0018 */ wchar_t* Pool;
} MUISTRINGPOOL, *PMUISTRINGPOOL; /* size: 0x0020 */

typedef struct _CMSG_SIGNED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cSigners;
  /* 0x0008 */ struct _CMSG_SIGNER_ENCODE_INFO* rgSigners;
  /* 0x0010 */ unsigned long cCertEncoded;
  /* 0x0014 */ long Padding_1037;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
  /* 0x0020 */ unsigned long cCrlEncoded;
  /* 0x0024 */ long Padding_1038;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* rgCrlEncoded;
} CMSG_SIGNED_ENCODE_INFO, *PCMSG_SIGNED_ENCODE_INFO; /* size: 0x0030 */

typedef struct _CMSG_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1039;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long cRecipients;
  /* 0x0034 */ long Padding_1040;
  /* 0x0038 */ struct _CERT_INFO** rgpRecipients;
} CMSG_ENVELOPED_ENCODE_INFO, *PCMSG_ENVELOPED_ENCODE_INFO; /* size: 0x0040 */

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1041;
  /* 0x0008 */ struct _CMSG_SIGNED_ENCODE_INFO SignedInfo;
  /* 0x0038 */ struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
} CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO; /* size: 0x0078 */

typedef struct _MUILANGCFGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ struct _MUILANGCFGNODE* LanguageConfigs;
} MUILANGCFGLIST, *PMUILANGCFGLIST; /* size: 0x0010 */

typedef struct _CREATEFILE2_EXTENDED_PARAMETERS
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFileAttributes;
  /* 0x0008 */ unsigned long dwFileFlags;
  /* 0x000c */ unsigned long dwSecurityQosFlags;
  /* 0x0010 */ struct _SECURITY_ATTRIBUTES* lpSecurityAttributes;
  /* 0x0018 */ void* hTemplateFile;
} CREATEFILE2_EXTENDED_PARAMETERS, *PCREATEFILE2_EXTENDED_PARAMETERS; /* size: 0x0020 */

typedef struct _MUILANGCFGNODE
{
  /* 0x0000 */ short LangSpec;
  /* 0x0002 */ unsigned short FallbackTypes;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ short FallbackSpecs[3];
} MUILANGCFGNODE, *PMUILANGCFGNODE; /* size: 0x000c */

class Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider>
{
  /* 0x0000 */ struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider* ptr_;
}; /* size: 0x0008 */

typedef struct _FILE_STAT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileId;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0030 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long ReparseTag;
  /* 0x0040 */ unsigned long NumberOfLinks;
  /* 0x0044 */ unsigned long EffectiveAccess;
} FILE_STAT_INFORMATION, *PFILE_STAT_INFORMATION; /* size: 0x0048 */

struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider
{
}; /* size: 0x0008 */

typedef struct _CERT_SIGNED_CONTENT_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0028 */ struct _CRYPT_BIT_BLOB Signature;
} CERT_SIGNED_CONTENT_INFO, *PCERT_SIGNED_CONTENT_INFO; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncAction> >
{
}; /* size: 0x0008 */

typedef struct _DUPLICATE_EXTENTS_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileOffset;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileOffset;
  /* 0x0018 */ union _LARGE_INTEGER ByteCount;
} DUPLICATE_EXTENTS_DATA, *PDUPLICATE_EXTENTS_DATA; /* size: 0x0020 */

typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT
{
  /* 0x0000 */ unsigned __int64 VetoedFromAltitudeIntegral;
  /* 0x0008 */ unsigned __int64 VetoedFromAltitudeDecimal;
  /* 0x0010 */ wchar_t Reason[256];
} CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT, *PCSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT; /* size: 0x0210 */

struct IPackagedComClassCatalogInternal
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_FEATURE_CONFIGURATION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ChangeStamp;
  /* 0x0008 */ struct _RTL_FEATURE_CONFIGURATION Configuration;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_FEATURE_CONFIGURATION_INFORMATION, *PSYSTEM_FEATURE_CONFIGURATION_INFORMATION; /* size: 0x0018 */

typedef struct _CERT_SELECT_CHAIN_PARA
{
  /* 0x0000 */ void* hChainEngine;
  /* 0x0008 */ struct _FILETIME* pTime;
  /* 0x0010 */ void* hAdditionalStore;
  /* 0x0018 */ struct _CERT_CHAIN_PARA* pChainPara;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} CERT_SELECT_CHAIN_PARA, *PCERT_SELECT_CHAIN_PARA; /* size: 0x0028 */

typedef struct _CERT_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1042;
  /* 0x0008 */ struct _CERT_USAGE_MATCH RequestedUsage;
} CERT_CHAIN_PARA, *PCERT_CHAIN_PARA; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider> const >;

typedef struct _NETINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwProviderVersion;
  /* 0x0008 */ unsigned long dwStatus;
  /* 0x000c */ unsigned long dwCharacteristics;
  /* 0x0010 */ unsigned __int64 dwHandle;
  /* 0x0018 */ unsigned short wNetType;
  /* 0x001a */ char Padding_1043[2];
  /* 0x001c */ unsigned long dwPrinters;
  /* 0x0020 */ unsigned long dwDrives;
  /* 0x0024 */ long __PADDING__[1];
} NETINFOSTRUCT, *PNETINFOSTRUCT; /* size: 0x0028 */

class Microsoft::WRL::Details::MakeAllocator<RegistryConversionClass>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  /* 0x0040 */ struct _IO_COUNTERS IoInfo;
  /* 0x0070 */ unsigned __int64 ProcessMemoryLimit;
  /* 0x0078 */ unsigned __int64 JobMemoryLimit;
  /* 0x0080 */ unsigned __int64 PeakProcessMemoryUsed;
  /* 0x0088 */ unsigned __int64 PeakJobMemoryUsed;
  /* 0x0090 */ unsigned __int64 JobTotalMemoryLimit;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION_V2; /* size: 0x0098 */

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION
{
  /* 0x0000 */ void* pfnCompletion /* function */;
  /* 0x0008 */ void* pvCompletion;
} CRYPT_ASYNC_RETRIEVAL_COMPLETION, *PCRYPT_ASYNC_RETRIEVAL_COMPLETION; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_MSIX_INFO
{
  /* 0x0000 */ wchar_t ApplicationUserModelId[130];
} ACTIVATION_CONTEXT_MSIX_INFO, *PACTIVATION_CONTEXT_MSIX_INFO; /* size: 0x0104 */

typedef struct _CTL_FIND_SUBJECT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1044;
  /* 0x0008 */ struct _CTL_FIND_USAGE_PARA* pUsagePara;
  /* 0x0010 */ unsigned long dwSubjectType;
  /* 0x0014 */ long Padding_1045;
  /* 0x0018 */ void* pvSubject;
} CTL_FIND_SUBJECT_PARA, *PCTL_FIND_SUBJECT_PARA; /* size: 0x0020 */

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  /* 0x0000 */ unsigned char Name[16];
  /* 0x0010 */ unsigned char Date[12];
  /* 0x001c */ unsigned char UserID[6];
  /* 0x0022 */ unsigned char GroupID[6];
  /* 0x0028 */ unsigned char Mode[8];
  /* 0x0030 */ unsigned char Size[10];
  /* 0x003a */ unsigned char EndHeader[2];
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER; /* size: 0x003c */

struct IOleContainer
{
}; /* size: 0x0008 */

typedef union _PROCESS_READWRITEVM_LOGGING_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned char Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned char EnableReadVmLogging : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned char EnableWriteVmLogging : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned char Unused : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
} PROCESS_READWRITEVM_LOGGING_INFORMATION, *PPROCESS_READWRITEVM_LOGGING_INFORMATION; /* size: 0x0001 */

typedef struct _RTL_HEAP_ENTRY
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned short Flags;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long Padding_1046;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ unsigned __int64 Settable;
        /* 0x0018 */ unsigned long Tag;
        /* 0x001c */ long __PADDING__[1];
      } /* size: 0x0010 */ s1;
      struct
      {
        /* 0x0010 */ unsigned __int64 CommittedSize;
        /* 0x0018 */ void* FirstBlock;
      } /* size: 0x0010 */ s2;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} RTL_HEAP_ENTRY, *PRTL_HEAP_ENTRY; /* size: 0x0020 */

typedef struct _CRYPT_RETRIEVE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1047;
  /* 0x0008 */ struct _FILETIME* pLastSyncTime;
  /* 0x0010 */ unsigned long dwMaxUrlRetrievalByteCount;
  /* 0x0014 */ long Padding_1048;
  /* 0x0018 */ struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO* pPreFetchInfo;
  /* 0x0020 */ struct _CRYPTNET_URL_CACHE_FLUSH_INFO* pFlushInfo;
  /* 0x0028 */ struct _CRYPTNET_URL_CACHE_RESPONSE_INFO** ppResponseInfo;
  /* 0x0030 */ wchar_t* pwszCacheFileNamePrefix;
  /* 0x0038 */ struct _FILETIME* pftCacheResync;
  /* 0x0040 */ int fProxyCacheRetrieval;
  /* 0x0044 */ unsigned long dwHttpStatusCode;
  /* 0x0048 */ wchar_t** ppwszErrorResponseHeaders;
  /* 0x0050 */ struct _CRYPTOAPI_BLOB** ppErrorContentBlob;
} CRYPT_RETRIEVE_AUX_INFO, *PCRYPT_RETRIEVE_AUX_INFO; /* size: 0x0058 */

struct tagRemHBITMAP
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct IWinInetInfo
{
}; /* size: 0x0008 */

typedef struct _FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned long EventTypes;
} FILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER, *PFILE_PIPE_EVENT_ENUM_OUTPUT_BUFFER; /* size: 0x0004 */

typedef struct _PACKEDEVENTINFO
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long ulNumEventsForLogFile;
  /* 0x0008 */ unsigned long* ulOffsets /* zero-length array */;
} PACKEDEVENTINFO, *PPACKEDEVENTINFO; /* size: 0x0008 */

typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1
{
  /* 0x0000 */ unsigned long Name;
  /* 0x0004 */ unsigned short ValueType;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ValueCount;
  union
  {
    union
    {
      /* 0x0010 */ unsigned long pInt64[1];
      /* 0x0010 */ unsigned long pUint64[1];
      /* 0x0010 */ unsigned long ppString[1];
      /* 0x0010 */ unsigned long pFqbn[1];
      /* 0x0010 */ unsigned long pOctetString[1];
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Values;
} CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1, *PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1; /* size: 0x0014 */

class Microsoft::WRL::Details::MakeAllocator<OleClassInfoVerbIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct wistd::__and_<>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ArgTraits<long (__cdecl Windows::Foundation::IAsyncActionCompletedHandler::*)(Windows::Foundation::IAsyncAction *,enum ABI::Windows::Foundation::AsyncStatus)>
{
  /* 0x0000 */ const int args;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<char16_t>
{
}; /* size: 0x0001 */

typedef struct _RPC_SECURITY_QOS_V4_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1049;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long __PADDING__[1];
} RPC_SECURITY_QOS_V4_W, *PRPC_SECURITY_QOS_V4_W; /* size: 0x0030 */

struct IOleLink
{
}; /* size: 0x0008 */

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA
{
  /* 0x0000 */ unsigned long cOID;
  /* 0x0004 */ long Padding_1050;
  /* 0x0008 */ char** rgpszOID;
} CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardBrokerProvider> >
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IOleVerbIterator,0,0>
{
}; /* size: 0x0001 */

typedef struct _OSVERSIONINFOA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
} OSVERSIONINFOA, *POSVERSIONINFOA; /* size: 0x0094 */

typedef struct _QUERY_BAD_RANGES_INPUT_RANGE
{
  /* 0x0000 */ unsigned __int64 StartOffset;
  /* 0x0008 */ unsigned __int64 LengthInBytes;
} QUERY_BAD_RANGES_INPUT_RANGE, *PQUERY_BAD_RANGES_INPUT_RANGE; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnterpriseDropTarget> >
{
}; /* size: 0x0008 */

typedef struct _QUERY_SERVICE_LOCK_STATUSA
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ long Padding_1051;
  /* 0x0008 */ char* lpLockOwner;
  /* 0x0010 */ unsigned long dwLockDuration;
  /* 0x0014 */ long __PADDING__[1];
} QUERY_SERVICE_LOCK_STATUSA, *PQUERY_SERVICE_LOCK_STATUSA; /* size: 0x0018 */

struct PPM_PERFSTATE_DOMAIN_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Latency;
  /* 0x0008 */ unsigned long Speed;
  /* 0x000c */ long Padding_1052;
  /* 0x0010 */ unsigned __int64 Processors;
}; /* size: 0x0018 */

struct IObjectProvider
{
}; /* size: 0x0008 */

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK
{
  /* 0x0000 */ unsigned char Signature[4];
  /* 0x0004 */ unsigned char Revision;
  /* 0x0005 */ unsigned char Length;
  /* 0x0006 */ unsigned short ControlField;
  /* 0x0008 */ unsigned char Checksum;
  /* 0x0009 */ unsigned long EventFlagAddress;
  /* 0x000d */ unsigned short RealModeEntryOffset;
  /* 0x000f */ unsigned short RealModeEntrySegment;
  /* 0x0011 */ unsigned short ProtectedModeEntryOffset;
  /* 0x0013 */ unsigned long ProtectedModeCodeBaseAddress;
  /* 0x0017 */ unsigned long OemDeviceId;
  /* 0x001b */ unsigned short RealModeDataBaseAddress;
  /* 0x001d */ unsigned long ProtectedModeDataBaseAddress;
} CM_PNP_BIOS_INSTALLATION_CHECK, *PCM_PNP_BIOS_INSTALLATION_CHECK; /* size: 0x0021 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IInsertableCandidate>
{
  /* 0x0000 */ long Padding_1053[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef struct _IMAGE_OS2_HEADER
{
  /* 0x0000 */ unsigned short ne_magic;
  /* 0x0002 */ char ne_ver;
  /* 0x0003 */ char ne_rev;
  /* 0x0004 */ unsigned short ne_enttab;
  /* 0x0006 */ unsigned short ne_cbenttab;
  /* 0x0008 */ long ne_crc;
  /* 0x000c */ unsigned short ne_flags;
  /* 0x000e */ unsigned short ne_autodata;
  /* 0x0010 */ unsigned short ne_heap;
  /* 0x0012 */ unsigned short ne_stack;
  /* 0x0014 */ long ne_csip;
  /* 0x0018 */ long ne_sssp;
  /* 0x001c */ unsigned short ne_cseg;
  /* 0x001e */ unsigned short ne_cmod;
  /* 0x0020 */ unsigned short ne_cbnrestab;
  /* 0x0022 */ unsigned short ne_segtab;
  /* 0x0024 */ unsigned short ne_rsrctab;
  /* 0x0026 */ unsigned short ne_restab;
  /* 0x0028 */ unsigned short ne_modtab;
  /* 0x002a */ unsigned short ne_imptab;
  /* 0x002c */ long ne_nrestab;
  /* 0x0030 */ unsigned short ne_cmovent;
  /* 0x0032 */ unsigned short ne_align;
  /* 0x0034 */ unsigned short ne_cres;
  /* 0x0036 */ unsigned char ne_exetyp;
  /* 0x0037 */ unsigned char ne_flagsothers;
  /* 0x0038 */ unsigned short ne_pretthunks;
  /* 0x003a */ unsigned short ne_psegrefbytes;
  /* 0x003c */ unsigned short ne_swaparea;
  /* 0x003e */ unsigned short ne_expver;
} IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER; /* size: 0x0040 */

typedef struct _QUERY_BAD_RANGES_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumRanges;
  /* 0x0008 */ struct _QUERY_BAD_RANGES_INPUT_RANGE Ranges[1];
} QUERY_BAD_RANGES_INPUT, *PQUERY_BAD_RANGES_INPUT; /* size: 0x0018 */

typedef struct _SYSTEM_MEMORY_CHANNEL_INFORMATION
{
  /* 0x0000 */ unsigned long ChannelNumber;
  /* 0x0004 */ unsigned long ChannelHeatIndex;
  /* 0x0008 */ unsigned __int64 TotalPageCount;
  /* 0x0010 */ unsigned __int64 ZeroPageCount;
  /* 0x0018 */ unsigned __int64 FreePageCount;
  /* 0x0020 */ unsigned __int64 StandbyPageCount;
} SYSTEM_MEMORY_CHANNEL_INFORMATION, *PSYSTEM_MEMORY_CHANNEL_INFORMATION; /* size: 0x0028 */

class Microsoft::WRL::Details::MakeAllocator<wil::details::SyncAsyncActionOp>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct IUserTokenInternal
{
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_1054;
  /* 0x0008 */ wchar_t** rgpszProviders;
} CRYPT_PROVIDERS, *PCRYPT_PROVIDERS; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibRegistrationReader> >
{
}; /* size: 0x0008 */

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1055;
  /* 0x0008 */ struct KEY_PID_ARRAY KeyArray[1];
} KEY_OPEN_SUBKEYS_INFORMATION, *PKEY_OPEN_SUBKEYS_INFORMATION; /* size: 0x0020 */

struct tagLOGCOLORSPACEW
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ wchar_t lcsFilename[260];
}; /* size: 0x024c */

struct tagEMRCREATECOLORSPACEW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEW lcs;
  /* 0x0258 */ unsigned long dwFlags;
  /* 0x025c */ unsigned long cbData;
  /* 0x0260 */ unsigned char Data[1];
  /* 0x0261 */ char __PADDING__[3];
}; /* size: 0x0264 */

typedef struct _FP_IEEE_VALUE
{
  union
  {
    union
    {
      /* 0x0000 */ short I16Value;
      /* 0x0000 */ unsigned short U16Value;
      /* 0x0000 */ long I32Value;
      /* 0x0000 */ unsigned long U32Value;
      /* 0x0000 */ void* StringValue;
      /* 0x0000 */ unsigned long CompareValue;
      /* 0x0000 */ struct _FP_32 Fp32Value;
      /* 0x0000 */ union _LARGE_INTEGER I64Value;
      /* 0x0000 */ union _ULARGE_INTEGER U64Value;
      /* 0x0000 */ struct _FP_64 Fp64Value;
      /* 0x0000 */ struct _FP_80 Fp80Value;
      /* 0x0000 */ struct _FP_128 Fp128Value;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Value;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long RoundingMode : 2; /* bit position: 0 */
      /* 0x0010 */ unsigned long Inexact : 1; /* bit position: 2 */
      /* 0x0010 */ unsigned long Underflow : 1; /* bit position: 3 */
      /* 0x0010 */ unsigned long Overflow : 1; /* bit position: 4 */
      /* 0x0010 */ unsigned long ZeroDivide : 1; /* bit position: 5 */
      /* 0x0010 */ unsigned long InvalidOperation : 1; /* bit position: 6 */
      /* 0x0010 */ unsigned long OperandValid : 1; /* bit position: 7 */
      /* 0x0010 */ unsigned long Format : 4; /* bit position: 8 */
      /* 0x0010 */ unsigned long Precision : 4; /* bit position: 12 */
      /* 0x0010 */ unsigned long Operation : 12; /* bit position: 16 */
      /* 0x0010 */ unsigned long Spare : 3; /* bit position: 28 */
      /* 0x0010 */ unsigned long HardwareException : 1; /* bit position: 31 */
    }; /* bitfield */
  } /* size: 0x0004 */ Control;
  /* 0x0014 */ long __PADDING__[1];
} FP_IEEE_VALUE, *PFP_IEEE_VALUE; /* size: 0x0018 */

struct tagEMRFILLPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
}; /* size: 0x0018 */

typedef struct _JOURNAL_RENAME_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1056;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING KeyKeyName;
} JOURNAL_RENAME_KEY_INFORMATION, *PJOURNAL_RENAME_KEY_INFORMATION; /* size: 0x0038 */

class Microsoft::WRL::Details::MakeAllocator<TypeLibRegistrationEnumerator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _CONSOLE_FONT_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long nFont;
  /* 0x0008 */ struct _COORD dwFontSize;
  /* 0x000c */ unsigned int FontFamily;
  /* 0x0010 */ unsigned int FontWeight;
  /* 0x0014 */ wchar_t FaceName[32];
} CONSOLE_FONT_INFOEX, *PCONSOLE_FONT_INFOEX; /* size: 0x0054 */

class Microsoft::WRL::Details::MakeAllocator<OleClassInfoInsertableCandidate>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ErrorPropagationOptionsHelper<0,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >
{
  /* 0x0000 */ enum Microsoft::WRL::ErrorPropagationPolicy PropagationPolicy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct tagICONMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTW lfFont;
}; /* size: 0x006c */

class wil::details::<lambda_4117f85562b7434ff2afe7e3fa60a98a>
{
}; /* size: 0x0001 */

typedef struct _SE_LEARNING_MODE_USER_OBJECT_DATA
{
  /* 0x0000 */ unsigned long Cookie;
  /* 0x0004 */ long Padding_1057;
  /* 0x0008 */ struct _UNICODE_STRING* ObjectType;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectName;
} SE_LEARNING_MODE_USER_OBJECT_DATA, *PSE_LEARNING_MODE_USER_OBJECT_DATA; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IObjectProvider> >
{
}; /* size: 0x0008 */

typedef struct _SHNAMEMAPPINGA
{
  /* 0x0000 */ char* pszOldPath;
  /* 0x0008 */ char* pszNewPath;
  /* 0x0010 */ int cchOldPath;
  /* 0x0014 */ int cchNewPath;
} SHNAMEMAPPINGA, *PSHNAMEMAPPINGA; /* size: 0x0018 */

class Microsoft::WRL::Details::MakeAllocator<OleClassInfoConversionClass>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CFormatOnlyDataObject> const >;

typedef struct __NCRYPT_PCP_TPM_FW_VERSION_INFO
{
  /* 0x0000 */ unsigned short major1;
  /* 0x0002 */ unsigned short major2;
  /* 0x0004 */ unsigned short minor1;
  /* 0x0006 */ unsigned short minor2;
} _NCRYPT_PCP_TPM_FW_VERSION_INFO, *P_NCRYPT_PCP_TPM_FW_VERSION_INFO; /* size: 0x0008 */

typedef struct _SYSDBG_KD_PULL_REMOTE_FILE
{
  /* 0x0000 */ struct _UNICODE_STRING ImageFileName;
} SYSDBG_KD_PULL_REMOTE_FILE, *PSYSDBG_KD_PULL_REMOTE_FILE; /* size: 0x0010 */

typedef struct _REDIRECTION_FUNCTION_DESCRIPTOR
{
  /* 0x0000 */ const char* DllName;
  /* 0x0008 */ const char* FunctionName;
  /* 0x0010 */ void* RedirectionTarget;
} REDIRECTION_FUNCTION_DESCRIPTOR, *PREDIRECTION_FUNCTION_DESCRIPTOR; /* size: 0x0018 */

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ unsigned char TimeoutSpecified;
  /* 0x000d */ char Padding_1058;
  /* 0x000e */ wchar_t Name[1];
} FILE_PIPE_WAIT_FOR_BUFFER, *PFILE_PIPE_WAIT_FOR_BUFFER; /* size: 0x0010 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS>
{
} ENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS>, *PENUM_FLAG_SIZED_INTEGER<enum DIALOG_CONTROL_DPI_CHANGE_BEHAVIORS>; /* size: 0x0001 */

typedef struct _SHFILEINFOA
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0008 */ int iIcon;
  /* 0x000c */ unsigned long dwAttributes;
  /* 0x0010 */ char szDisplayName[260];
  /* 0x0114 */ char szTypeName[80];
  /* 0x0164 */ long __PADDING__[1];
} SHFILEINFOA, *PSHFILEINFOA; /* size: 0x0168 */

class wil::details::<lambda_7703c0f932abdb0459b9a0a45ad60d47>
{
}; /* size: 0x0001 */

typedef struct _CERT_EXTENSIONS
{
  /* 0x0000 */ unsigned long cExtension;
  /* 0x0004 */ long Padding_1059;
  /* 0x0008 */ struct _CERT_EXTENSION* rgExtension;
} CERT_EXTENSIONS, *PCERT_EXTENSIONS; /* size: 0x0010 */

class ClipboardWatchdog
{
  union
  {
    struct
    {
      /* 0x0000 */ struct _TP_TIMER* m_timer;
      /* 0x0008 */ unsigned long m_monitoredThreadID;
    }; /* size: 0x000c */
    /* 0x0000 */ const __int64 MethodTimeout;
    /* 0x0000 */ const __int64 CheckInRate;
    /* 0x0000 */ const __int64 BufferedTimeout;
  }; /* size: 0x000c */
}; /* size: 0x0010 */

typedef struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1060;
  /* 0x0008 */ void* pfnGet /* function */;
  /* 0x0010 */ void* pfnRelease /* function */;
  /* 0x0018 */ void* pfnFreePassword /* function */;
  /* 0x0020 */ void* pfnFree /* function */;
  /* 0x0028 */ void* pfnFreeIdentifier /* function */;
} CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE, *PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE; /* size: 0x0030 */

struct IClassActivator
{
}; /* size: 0x0008 */

typedef struct _ALPC_CONTEXT_ATTR
{
  /* 0x0000 */ void* PortContext;
  /* 0x0008 */ void* MessageContext;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long MessageId;
  /* 0x0018 */ unsigned long CallbackId;
  /* 0x001c */ long __PADDING__[1];
} ALPC_CONTEXT_ATTR, *PALPC_CONTEXT_ATTR; /* size: 0x0020 */

struct USN_RECORD_V3
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ struct _FILE_ID_128 FileReferenceNumber;
  /* 0x0018 */ struct _FILE_ID_128 ParentFileReferenceNumber;
  /* 0x0028 */ __int64 Usn;
  /* 0x0030 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0038 */ unsigned long Reason;
  /* 0x003c */ unsigned long SourceInfo;
  /* 0x0040 */ unsigned long SecurityId;
  /* 0x0044 */ unsigned long FileAttributes;
  /* 0x0048 */ unsigned short FileNameLength;
  /* 0x004a */ unsigned short FileNameOffset;
  /* 0x004c */ wchar_t FileName[1];
  /* 0x004e */ char __PADDING__[2];
}; /* size: 0x0050 */

class Microsoft::WRL::Details::MakeAllocator<CFormatOnlyDataObject>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IBuffer *,1>
{
}; /* size: 0x0008 */

struct IXMLDOMParseError
{
}; /* size: 0x0008 */

typedef struct _QUERY_SERVICE_CONFIGW
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ long Padding_1061;
  /* 0x0010 */ wchar_t* lpBinaryPathName;
  /* 0x0018 */ wchar_t* lpLoadOrderGroup;
  /* 0x0020 */ unsigned long dwTagId;
  /* 0x0024 */ long Padding_1062;
  /* 0x0028 */ wchar_t* lpDependencies;
  /* 0x0030 */ wchar_t* lpServiceStartName;
  /* 0x0038 */ wchar_t* lpDisplayName;
} QUERY_SERVICE_CONFIGW, *PQUERY_SERVICE_CONFIGW; /* size: 0x0040 */

typedef struct _SCRUB_DATA_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Status;
  /* 0x000c */ long Padding_1063;
  /* 0x0010 */ unsigned __int64 ErrorFileOffset;
  /* 0x0018 */ unsigned __int64 ErrorLength;
  /* 0x0020 */ unsigned __int64 NumberOfBytesRepaired;
  /* 0x0028 */ unsigned __int64 NumberOfBytesFailed;
  /* 0x0030 */ unsigned __int64 InternalFileReference;
  /* 0x0038 */ unsigned short ResumeContextLength;
  /* 0x003a */ unsigned short ParityExtentDataOffset;
  /* 0x003c */ unsigned long Reserved[9];
  /* 0x0060 */ unsigned __int64 NumberOfMetadataBytesProcessed;
  /* 0x0068 */ unsigned __int64 NumberOfDataBytesProcessed;
  /* 0x0070 */ unsigned __int64 TotalNumberOfMetadataBytesInUse;
  /* 0x0078 */ unsigned __int64 TotalNumberOfDataBytesInUse;
  /* 0x0080 */ unsigned __int64 DataBytesSkippedDueToNoAllocation;
  /* 0x0088 */ unsigned __int64 DataBytesSkippedDueToInvalidRun;
  /* 0x0090 */ unsigned __int64 DataBytesSkippedDueToIntegrityStream;
  /* 0x0098 */ unsigned __int64 DataBytesSkippedDueToRegionBeingClean;
  /* 0x00a0 */ unsigned __int64 DataBytesSkippedDueToLockConflict;
  /* 0x00a8 */ unsigned __int64 DataBytesSkippedDueToNoScrubDataFlag;
  /* 0x00b0 */ unsigned __int64 DataBytesSkippedDueToNoScrubNonIntegrityStreamFlag;
  /* 0x00b8 */ unsigned __int64 DataBytesScrubbed;
  /* 0x00c0 */ unsigned char ResumeContext[1040];
} SCRUB_DATA_OUTPUT, *PSCRUB_DATA_OUTPUT; /* size: 0x04d0 */

typedef struct _EXCEPTION_RECORD32
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned long ExceptionRecord;
  /* 0x000c */ unsigned long ExceptionAddress;
  /* 0x0010 */ unsigned long NumberParameters;
  /* 0x0014 */ unsigned long ExceptionInformation[15];
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32; /* size: 0x0050 */

struct wistd::unique_ptr<_SYSTEM_PROCESS_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >::__nat;

struct tagCUSTDATAITEM
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ struct tagVARIANT varValue;
}; /* size: 0x0028 */

typedef struct _PROCESS_WINDOW_INFORMATION
{
  /* 0x0000 */ unsigned long WindowFlags;
  /* 0x0004 */ unsigned short WindowTitleLength;
  /* 0x0006 */ wchar_t WindowTitle[1];
} PROCESS_WINDOW_INFORMATION, *PPROCESS_WINDOW_INFORMATION; /* size: 0x0008 */

class wistd::unique_ptr<_SYSTEM_PROCESS_INFORMATION,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> >
{
  /* 0x0000 */ class wistd::__compressed_pair<_SYSTEM_PROCESS_INFORMATION *,wil::function_deleter<void (__cdecl*)(void *),&CoTaskMemFree> > __ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IEnumUnknown,Microsoft::WRL::FtmBase>
{
  /* 0x0000 */ long Padding_1064[11];
  /* 0x002c */ volatile long refcount_;
}; /* size: 0x0030 */

typedef struct _OUTLINETEXTMETRICW
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICW otmTextMetrics;
  /* 0x0040 */ unsigned char otmFiller;
  /* 0x0041 */ struct tagPANOSE otmPanoseNumber;
  /* 0x004b */ char Padding_1065;
  /* 0x004c */ unsigned int otmfsSelection;
  /* 0x0050 */ unsigned int otmfsType;
  /* 0x0054 */ int otmsCharSlopeRise;
  /* 0x0058 */ int otmsCharSlopeRun;
  /* 0x005c */ int otmItalicAngle;
  /* 0x0060 */ unsigned int otmEMSquare;
  /* 0x0064 */ int otmAscent;
  /* 0x0068 */ int otmDescent;
  /* 0x006c */ unsigned int otmLineGap;
  /* 0x0070 */ unsigned int otmsCapEmHeight;
  /* 0x0074 */ unsigned int otmsXHeight;
  /* 0x0078 */ struct tagRECT otmrcFontBox;
  /* 0x0088 */ int otmMacAscent;
  /* 0x008c */ int otmMacDescent;
  /* 0x0090 */ unsigned int otmMacLineGap;
  /* 0x0094 */ unsigned int otmusMinimumPPEM;
  /* 0x0098 */ struct tagPOINT otmptSubscriptSize;
  /* 0x00a0 */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a8 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00b0 */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b8 */ unsigned int otmsStrikeoutSize;
  /* 0x00bc */ int otmsStrikeoutPosition;
  /* 0x00c0 */ int otmsUnderscoreSize;
  /* 0x00c4 */ int otmsUnderscorePosition;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00d0 */ char* otmpFaceName;
  /* 0x00d8 */ char* otmpStyleName;
  /* 0x00e0 */ char* otmpFullName;
} OUTLINETEXTMETRICW, *POUTLINETEXTMETRICW; /* size: 0x00e8 */

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2
{
  /* 0x0000 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0008 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0010 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0018 */ unsigned __int64 JobLowMemoryLimit;
  /* 0x0020 */ unsigned __int64 JobHighMemoryLimit;
  /* 0x0028 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  /* 0x002c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
  /* 0x0030 */ unsigned long LimitFlags;
  /* 0x0034 */ long __PADDING__[1];
} JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2, *PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION_V2; /* size: 0x0038 */

typedef struct _HEAP_SUMMARY
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_1066;
  /* 0x0008 */ unsigned __int64 cbAllocated;
  /* 0x0010 */ unsigned __int64 cbCommitted;
  /* 0x0018 */ unsigned __int64 cbReserved;
  /* 0x0020 */ unsigned __int64 cbMaxReserve;
} HEAP_SUMMARY, *PHEAP_SUMMARY; /* size: 0x0028 */

typedef struct _SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION
{
  /* 0x0000 */ void* ImageFile;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ long __PADDING__[1];
} SYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION, *PSYSTEM_CODEINTEGRITY_CERTIFICATE_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IConversionClassIterator>
{
  /* 0x0000 */ long Padding_1067[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&FindClose,void *>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<ICancelMethodCalls>
{
  /* 0x0000 */ struct ICancelMethodCalls* ptr_;
}; /* size: 0x0008 */

struct IXMLElement
{
}; /* size: 0x0008 */

struct ICancelMethodCalls
{
}; /* size: 0x0008 */

typedef struct _SHELLEXECUTEINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const wchar_t* lpVerb;
  /* 0x0018 */ const wchar_t* lpFile;
  /* 0x0020 */ const wchar_t* lpParameters;
  /* 0x0028 */ const wchar_t* lpDirectory;
  /* 0x0030 */ int nShow;
  /* 0x0034 */ long Padding_1068;
  /* 0x0038 */ struct HINSTANCE__* hInstApp;
  /* 0x0040 */ void* lpIDList;
  /* 0x0048 */ const wchar_t* lpClass;
  /* 0x0050 */ struct HKEY__* hkeyClass;
  /* 0x0058 */ unsigned long dwHotKey;
  /* 0x005c */ long Padding_1069;
  union
  {
    /* 0x0060 */ void* hIcon;
    /* 0x0060 */ void* hMonitor;
  }; /* size: 0x0008 */
  /* 0x0068 */ void* hProcess;
} SHELLEXECUTEINFOW, *PSHELLEXECUTEINFOW; /* size: 0x0070 */

struct wil::details::variable_size_mapping<enum ComTlsFlags>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICancelMethodCalls> const >;

struct wistd::is_class<unsigned char>
{
}; /* size: 0x0001 */

typedef struct _BCRYPT_DH_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
} BCRYPT_DH_PARAMETER_HEADER, *PBCRYPT_DH_PARAMETER_HEADER; /* size: 0x000c */

struct wistd::__make_signed<bool,1>
{
}; /* size: 0x0001 */

struct tagPIXELFORMATDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerType;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long dwLayerMask;
  /* 0x0020 */ unsigned long dwVisibleMask;
  /* 0x0024 */ unsigned long dwDamageMask;
}; /* size: 0x0028 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICancelMethodCalls> >
{
}; /* size: 0x0008 */

typedef struct _MEMORY_PARTITION_NODE_PAGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalPageCount;
  /* 0x0008 */ unsigned __int64 SmallFreePageCount;
  /* 0x0010 */ unsigned __int64 SmallZeroPageCount;
  /* 0x0018 */ unsigned __int64 MediumFreePageCount;
  /* 0x0020 */ unsigned __int64 MediumZeroPageCount;
  /* 0x0028 */ unsigned __int64 LargeFreePageCount;
  /* 0x0030 */ unsigned __int64 LargeZeroPageCount;
  /* 0x0038 */ unsigned __int64 HugeFreePageCount;
  /* 0x0040 */ unsigned __int64 HugeZeroPageCount;
} MEMORY_PARTITION_NODE_PAGE_INFORMATION, *PMEMORY_PARTITION_NODE_PAGE_INFORMATION; /* size: 0x0048 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ICancelMethodCalls> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ICancelMethodCalls>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> >
{
}; /* size: 0x0008 */

struct tagWNDCLASSEXW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const wchar_t* lpszMenuName;
  /* 0x0040 */ const wchar_t* lpszClassName;
  /* 0x0048 */ struct HICON__* hIconSm;
}; /* size: 0x0050 */

class wil::com_ptr_t<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>,wil::err_returncode_policy>
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *>* m_ptr;
}; /* size: 0x0008 */

typedef struct _COMPRESSED_DATA_INFO
{
  /* 0x0000 */ unsigned short CompressionFormatAndEngine;
  /* 0x0002 */ unsigned char CompressionUnitShift;
  /* 0x0003 */ unsigned char ChunkShift;
  /* 0x0004 */ unsigned char ClusterShift;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ unsigned short NumberOfChunks;
  /* 0x0008 */ unsigned long CompressedChunkSizes[1];
} COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO; /* size: 0x000c */

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long ExceptionHandler;
  /* 0x000c */ unsigned long HandlerData;
  /* 0x0010 */ unsigned long PrologEndAddress;
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY; /* size: 0x0014 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IRegistration> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IRegistration>* ptr_;
}; /* size: 0x0008 */

struct RPC_INTERFACE_TEMPLATEW
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1070;
  /* 0x0008 */ void* IfSpec;
  /* 0x0010 */ struct _GUID* MgrTypeUuid;
  /* 0x0018 */ void* MgrEpv;
  /* 0x0020 */ unsigned int Flags;
  /* 0x0024 */ unsigned int MaxCalls;
  /* 0x0028 */ unsigned int MaxRpcSize;
  /* 0x002c */ long Padding_1071;
  /* 0x0030 */ void* IfCallback /* function */;
  /* 0x0038 */ struct _UUID_VECTOR* UuidVector;
  /* 0x0040 */ unsigned short* Annotation;
  /* 0x0048 */ void* SecurityDescriptor;
}; /* size: 0x0050 */

typedef struct _CRYPT_PROVIDER_REG
{
  /* 0x0000 */ unsigned long cAliases;
  /* 0x0004 */ long Padding_1072;
  /* 0x0008 */ wchar_t** rgpszAliases;
  /* 0x0010 */ struct _CRYPT_IMAGE_REG* pUM;
  /* 0x0018 */ struct _CRYPT_IMAGE_REG* pKM;
} CRYPT_PROVIDER_REG, *PCRYPT_PROVIDER_REG; /* size: 0x0020 */

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION
{
  /* 0x0000 */ unsigned char DriverInPath;
  /* 0x0001 */ char Padding_1073[3];
  /* 0x0004 */ unsigned long DriverNameLength;
  /* 0x0008 */ wchar_t DriverName[1];
  /* 0x000a */ char __PADDING__[2];
} FILE_FS_DRIVER_PATH_INFORMATION, *PFILE_FS_DRIVER_PATH_INFORMATION; /* size: 0x000c */

typedef struct _CRYPT_HASH_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
} CRYPT_HASH_MESSAGE_PARA, *PCRYPT_HASH_MESSAGE_PARA; /* size: 0x0030 */

typedef struct _REDIRECTION_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long FunctionCount;
  /* 0x0008 */ const struct _REDIRECTION_FUNCTION_DESCRIPTOR* Redirections;
} REDIRECTION_DESCRIPTOR, *PREDIRECTION_DESCRIPTOR; /* size: 0x0010 */

struct tagEXTLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned long elfVersion;
  /* 0x00a0 */ unsigned long elfStyleSize;
  /* 0x00a4 */ unsigned long elfMatch;
  /* 0x00a8 */ unsigned long elfReserved;
  /* 0x00ac */ unsigned char elfVendorId[4];
  /* 0x00b0 */ unsigned long elfCulture;
  /* 0x00b4 */ struct tagPANOSE elfPanose;
  /* 0x00be */ char __PADDING__[2];
}; /* size: 0x00c0 */

typedef struct _CRYPT_URL_ARRAY
{
  /* 0x0000 */ unsigned long cUrl;
  /* 0x0004 */ long Padding_1074;
  /* 0x0008 */ wchar_t** rgwszUrl;
} CRYPT_URL_ARRAY, *PCRYPT_URL_ARRAY; /* size: 0x0010 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IInsertableCandidate>
{
}; /* size: 0x0008 */

class ClipboardBrokerFactory
{
  union
  {
    /* 0x0000 */ class CBrokerInstanceHolder* s_pServerBroker;
    /* 0x0000 */ void* s_hServerThreadEvent;
    /* 0x0000 */ void* s_hWorkerThread;
    /* 0x0000 */ void* s_hServerThreadStopEvent;
    /* 0x0000 */ class Microsoft::WRL::Wrappers::CriticalSection s_initCS;
  }; /* size: 0x0028 */
}; /* size: 0x0001 */

struct Windows::ApplicationModel::Background::IBackgroundTaskCompletedEventArgs
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<CClipboardBroker>
{
  /* 0x0000 */ class CClipboardBroker* ptr_;
}; /* size: 0x0008 */

typedef struct _LDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ struct _LIST_ENTRY InMemoryOrderLinks;
  /* 0x0020 */ struct _LIST_ENTRY InInitializationOrderLinks;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_1075;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  union
  {
    /* 0x0068 */ unsigned char FlagGroup[4];
    /* 0x0068 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0068 */ unsigned long PackagedBinary : 1; /* bit position: 0 */
      /* 0x0068 */ unsigned long MarkedForRemoval : 1; /* bit position: 1 */
      /* 0x0068 */ unsigned long ImageDll : 1; /* bit position: 2 */
      /* 0x0068 */ unsigned long LoadNotificationsSent : 1; /* bit position: 3 */
      /* 0x0068 */ unsigned long TelemetryEntryProcessed : 1; /* bit position: 4 */
      /* 0x0068 */ unsigned long ProcessStaticImport : 1; /* bit position: 5 */
      /* 0x0068 */ unsigned long InLegacyLists : 1; /* bit position: 6 */
      /* 0x0068 */ unsigned long InIndexes : 1; /* bit position: 7 */
      /* 0x0068 */ unsigned long ShimDll : 1; /* bit position: 8 */
      /* 0x0068 */ unsigned long InExceptionTable : 1; /* bit position: 9 */
      /* 0x0068 */ unsigned long ReservedFlags1 : 2; /* bit position: 10 */
      /* 0x0068 */ unsigned long LoadInProgress : 1; /* bit position: 12 */
      /* 0x0068 */ unsigned long LoadConfigProcessed : 1; /* bit position: 13 */
      /* 0x0068 */ unsigned long EntryProcessed : 1; /* bit position: 14 */
      /* 0x0068 */ unsigned long ProtectDelayLoad : 1; /* bit position: 15 */
      /* 0x0068 */ unsigned long ReservedFlags3 : 2; /* bit position: 16 */
      /* 0x0068 */ unsigned long DontCallForThreads : 1; /* bit position: 18 */
      /* 0x0068 */ unsigned long ProcessAttachCalled : 1; /* bit position: 19 */
      /* 0x0068 */ unsigned long ProcessAttachFailed : 1; /* bit position: 20 */
      /* 0x0068 */ unsigned long CorDeferredValidate : 1; /* bit position: 21 */
      /* 0x0068 */ unsigned long CorImage : 1; /* bit position: 22 */
      /* 0x0068 */ unsigned long DontRelocate : 1; /* bit position: 23 */
      /* 0x0068 */ unsigned long CorILOnly : 1; /* bit position: 24 */
      /* 0x0068 */ unsigned long ChpeImage : 1; /* bit position: 25 */
      /* 0x0068 */ unsigned long ChpeEmulatorImage : 1; /* bit position: 26 */
      /* 0x0068 */ unsigned long ReservedFlags5 : 1; /* bit position: 27 */
      /* 0x0068 */ unsigned long Redirected : 1; /* bit position: 28 */
      /* 0x0068 */ unsigned long ReservedFlags6 : 2; /* bit position: 29 */
      /* 0x0068 */ unsigned long CompatDatabaseProcessed : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x006c */ unsigned short ObsoleteLoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  /* 0x0070 */ struct _LIST_ENTRY HashLinks;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ long Padding_1076;
  /* 0x0088 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
  /* 0x0090 */ void* Lock;
  /* 0x0098 */ struct _LDR_DDAG_NODE* DdagNode;
  /* 0x00a0 */ struct _LIST_ENTRY NodeModuleLink;
  /* 0x00b0 */ struct _LDRP_LOAD_CONTEXT* LoadContext;
  /* 0x00b8 */ void* ParentDllBase;
  /* 0x00c0 */ void* SwitchBackContext;
  /* 0x00c8 */ struct _RTL_BALANCED_NODE BaseAddressIndexNode;
  /* 0x00e0 */ struct _RTL_BALANCED_NODE MappingInfoIndexNode;
  /* 0x00f8 */ unsigned __int64 OriginalBase;
  /* 0x0100 */ union _LARGE_INTEGER LoadTime;
  /* 0x0108 */ unsigned long BaseNameHashValue;
  /* 0x010c */ enum _LDR_DLL_LOAD_REASON LoadReason;
  /* 0x0110 */ unsigned long ImplicitPathOptions;
  /* 0x0114 */ unsigned long ReferenceCount;
  /* 0x0118 */ unsigned long DependentLoadFlags;
  /* 0x011c */ unsigned char SigningLevel;
  /* 0x011d */ char Padding_1077[3];
  /* 0x0120 */ unsigned long CheckSum;
  /* 0x0124 */ long Padding_1078;
  /* 0x0128 */ void* ActivePatchImageBase;
  /* 0x0130 */ enum _LDR_HOT_PATCH_STATE HotPatchState;
  /* 0x0134 */ long __PADDING__[1];
} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY; /* size: 0x0138 */

typedef struct _IMAGE_DVRT_ARM64X_DELTA_FIXUP_RECORD
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short Offset : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short Type : 2; /* bit position: 12 */
    /* 0x0000 */ unsigned short Sign : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short Scale : 1; /* bit position: 15 */
  }; /* bitfield */
} IMAGE_DVRT_ARM64X_DELTA_FIXUP_RECORD, *PIMAGE_DVRT_ARM64X_DELTA_FIXUP_RECORD; /* size: 0x0002 */

class Microsoft::WRL::Details::MakeAllocator<OleClassInfoDataFormatIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct tagSTYLEBUFA
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ char szDescription[32];
}; /* size: 0x0024 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ITypeLibRegistrationIterator>* ptr_;
}; /* size: 0x0008 */

typedef struct _DISPLAY_DEVICEA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ char DeviceName[32];
  /* 0x0024 */ char DeviceString[128];
  /* 0x00a4 */ unsigned long StateFlags;
  /* 0x00a8 */ char DeviceID[128];
  /* 0x0128 */ char DeviceKey[128];
} DISPLAY_DEVICEA, *PDISPLAY_DEVICEA; /* size: 0x01a8 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> >;

typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ long Padding_1079;
  /* 0x0008 */ char* Buffer;
} RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR, *PRPC_C_OPT_COOKIE_AUTH_DESCRIPTOR; /* size: 0x0010 */

typedef struct _MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE
{
  /* 0x0000 */ enum _MEM_DEDICATED_ATTRIBUTE_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Value;
} MEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE, *PMEMORY_PARTITION_DEDICATED_MEMORY_ATTRIBUTE; /* size: 0x0010 */

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1080;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  /* 0x0018 */ unsigned long dwRecipientIndex;
  /* 0x001c */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0020 */ unsigned __int64 hKeyEncryptionKey;
    /* 0x0020 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0008 */
} CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA; /* size: 0x0028 */

typedef struct _RTL_MODULE_BASIC_INFO
{
  /* 0x0000 */ void* ImageBase;
} RTL_MODULE_BASIC_INFO, *PRTL_MODULE_BASIC_INFO; /* size: 0x0008 */

typedef struct _RTL_MODULE_EXTENDED_INFO
{
  /* 0x0000 */ struct _RTL_MODULE_BASIC_INFO BasicInfo;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ unsigned short FileNameOffset;
  /* 0x000e */ unsigned char FullPathName[256];
  /* 0x010e */ char __PADDING__[2];
} RTL_MODULE_EXTENDED_INFO, *PRTL_MODULE_EXTENDED_INFO; /* size: 0x0110 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IConversionClass,0,0>
{
}; /* size: 0x0001 */

typedef struct _GRADIENT_TRIANGLE
{
  /* 0x0000 */ unsigned long Vertex1;
  /* 0x0004 */ unsigned long Vertex2;
  /* 0x0008 */ unsigned long Vertex3;
} GRADIENT_TRIANGLE, *PGRADIENT_TRIANGLE; /* size: 0x000c */

struct IXMLDOMCDATASection
{
}; /* size: 0x0008 */

typedef struct _FILE_FS_OBJECTID_INFORMATION
{
  /* 0x0000 */ unsigned char ObjectId[16];
  /* 0x0010 */ unsigned char ExtendedInfo[48];
} FILE_FS_OBJECTID_INFORMATION, *PFILE_FS_OBJECTID_INFORMATION; /* size: 0x0040 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,IAsyncInfo,1,0>
{
}; /* size: 0x0001 */

struct IExtensionActivationContextProperties
{
}; /* size: 0x0008 */

struct tagSTYLESTRUCT
{
  /* 0x0000 */ unsigned long styleOld;
  /* 0x0004 */ unsigned long styleNew;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,ITypeLibRegistration,Microsoft::WRL::FtmBase>
{
  /* 0x0000 */ long Padding_1081[11];
  /* 0x002c */ volatile long refcount_;
}; /* size: 0x0030 */

typedef struct _SERVICE_PREFERRED_NODE_INFO
{
  /* 0x0000 */ unsigned short usPreferredNode;
  /* 0x0002 */ unsigned char fDelete;
  /* 0x0003 */ char __PADDING__[1];
} SERVICE_PREFERRED_NODE_INFO, *PSERVICE_PREFERRED_NODE_INFO; /* size: 0x0004 */

typedef struct _WIN32_FIND_STREAM_DATA
{
  /* 0x0000 */ union _LARGE_INTEGER StreamSize;
  /* 0x0008 */ wchar_t cStreamName[296];
} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA; /* size: 0x0258 */

typedef struct _CERT_HASHED_URL
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Hash;
  /* 0x0028 */ wchar_t* pwszUrl;
} CERT_HASHED_URL, *PCERT_HASHED_URL; /* size: 0x0030 */

struct tagEMREOF
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long nPalEntries;
  /* 0x000c */ unsigned long offPalEntries;
  /* 0x0010 */ unsigned long nSizeLast;
}; /* size: 0x0014 */

typedef struct _CERT_LOGOTYPE_IMAGE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeImageInfoChoice;
  /* 0x0004 */ unsigned long dwFileSize;
  /* 0x0008 */ unsigned long dwXSize;
  /* 0x000c */ unsigned long dwYSize;
  /* 0x0010 */ unsigned long dwLogotypeImageResolutionChoice;
  union
  {
    /* 0x0014 */ unsigned long dwNumBits;
    /* 0x0014 */ unsigned long dwTableSize;
  }; /* size: 0x0004 */
  /* 0x0018 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_IMAGE_INFO, *PCERT_LOGOTYPE_IMAGE_INFO; /* size: 0x0020 */

struct tagEXTLOGPEN
{
  /* 0x0000 */ unsigned long elpPenStyle;
  /* 0x0004 */ unsigned long elpWidth;
  /* 0x0008 */ unsigned int elpBrushStyle;
  /* 0x000c */ unsigned long elpColor;
  /* 0x0010 */ unsigned __int64 elpHatch;
  /* 0x0018 */ unsigned long elpNumEntries;
  /* 0x001c */ unsigned long elpStyleEntry[1];
}; /* size: 0x0020 */

typedef struct _CERT_LOGOTYPE_AUDIO
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x0018 */ struct _CERT_LOGOTYPE_AUDIO_INFO* pLogotypeAudioInfo;
} CERT_LOGOTYPE_AUDIO, *PCERT_LOGOTYPE_AUDIO; /* size: 0x0020 */

typedef struct _tagPROTOCOLFILTERDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1082;
  /* 0x0008 */ struct IInternetProtocolSink* pProtocolSink;
  /* 0x0010 */ struct IInternetProtocol* pProtocol;
  /* 0x0018 */ struct IUnknown* pUnk;
  /* 0x0020 */ unsigned long dwFilterFlags;
  /* 0x0024 */ long __PADDING__[1];
} tagPROTOCOLFILTERDATA, *PtagPROTOCOLFILTERDATA; /* size: 0x0028 */

typedef struct _CERT_LOGOTYPE_AUDIO_INFO
{
  /* 0x0000 */ unsigned long dwFileSize;
  /* 0x0004 */ unsigned long dwPlayTime;
  /* 0x0008 */ unsigned long dwChannels;
  /* 0x000c */ unsigned long dwSampleRate;
  /* 0x0010 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_AUDIO_INFO, *PCERT_LOGOTYPE_AUDIO_INFO; /* size: 0x0018 */

struct IComCatalogInternal
{
}; /* size: 0x0008 */

typedef struct _CERT_LOGOTYPE_REFERENCE
{
  /* 0x0000 */ unsigned long cHashedUrl;
  /* 0x0004 */ long Padding_1083;
  /* 0x0008 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_REFERENCE, *PCERT_LOGOTYPE_REFERENCE; /* size: 0x0010 */

struct tagTouchPredictionParameters
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int dwLatency;
  /* 0x0008 */ unsigned int dwSampleTime;
  /* 0x000c */ unsigned int bUseHWTimeStamp;
}; /* size: 0x0010 */

struct IInternetZoneManagerEx2
{
}; /* size: 0x0008 */

typedef struct _s__RTTIBaseClassDescriptor
{
  /* 0x0000 */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0008 */ unsigned long numContainedBases;
  /* 0x000c */ struct _PMD where;
  /* 0x0018 */ unsigned long attributes;
  /* 0x001c */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
} s__RTTIBaseClassDescriptor, *Ps__RTTIBaseClassDescriptor; /* size: 0x0024 */

typedef struct _OBJECT_TYPE_LIST
{
  /* 0x0000 */ unsigned short Level;
  /* 0x0002 */ unsigned short Sbz;
  /* 0x0004 */ long Padding_1084;
  /* 0x0008 */ struct _GUID* ObjectType;
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST; /* size: 0x0010 */

struct ICatalogFileInfo
{
}; /* size: 0x0008 */

struct wistd::__extract_key_first_tag
{
}; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IDragDropBroker,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0030 */

struct MENUITEMTEMPLATE
{
  /* 0x0000 */ unsigned short mtOption;
  /* 0x0002 */ unsigned short mtID;
  /* 0x0004 */ wchar_t mtString[1];
}; /* size: 0x0006 */

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1; /* size: 0x0014 */

typedef struct _SYSTEM_PROCESS_INFORMATION_EXTENSION
{
  /* 0x0000 */ struct _PROCESS_DISK_COUNTERS DiskCounters;
  /* 0x0028 */ unsigned __int64 ContextSwitches;
  union
  {
    /* 0x0030 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0030 */ unsigned long HasStrongId : 1; /* bit position: 0 */
      /* 0x0030 */ unsigned long Classification : 4; /* bit position: 1 */
      /* 0x0030 */ unsigned long BackgroundActivityModerated : 1; /* bit position: 5 */
      /* 0x0030 */ unsigned long Spare : 26; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long UserSidOffset;
  /* 0x0038 */ unsigned long PackageFullNameOffset;
  /* 0x003c */ long Padding_1085;
  /* 0x0040 */ struct _PROCESS_ENERGY_VALUES EnergyValues;
  /* 0x0150 */ unsigned long AppIdOffset;
  /* 0x0154 */ long Padding_1086;
  /* 0x0158 */ unsigned __int64 SharedCommitCharge;
  /* 0x0160 */ unsigned long JobObjectId;
  /* 0x0164 */ unsigned long SpareUlong;
  /* 0x0168 */ unsigned __int64 ProcessSequenceNumber;
} SYSTEM_PROCESS_INFORMATION_EXTENSION, *PSYSTEM_PROCESS_INFORMATION_EXTENSION; /* size: 0x0170 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassIterator> const >;

struct wistd::is_class<bool>
{
}; /* size: 0x0001 */

struct tagTITLEBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
}; /* size: 0x002c */

struct wistd::__libcpp_is_floating_point<double>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IDragDropBroker,Microsoft::WRL::FtmBase>
{
  /* 0x0000 */ long Padding_1087[11];
  /* 0x002c */ volatile long refcount_;
}; /* size: 0x0030 */

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const struct _GUID* ExtensionGuid;
  /* 0x0010 */ unsigned long Id;
  /* 0x0014 */ unsigned long Depth;
  /* 0x0018 */ unsigned long OutFlags;
  /* 0x001c */ long __PADDING__[1];
} FINDFIRSTACTIVATIONCONTEXTSECTION, *PFINDFIRSTACTIVATIONCONTEXTSECTION; /* size: 0x0020 */

typedef struct _PROCESS_PRIORITY_CLASS
{
  /* 0x0000 */ unsigned char Foreground;
  /* 0x0001 */ unsigned char PriorityClass;
} PROCESS_PRIORITY_CLASS, *PPROCESS_PRIORITY_CLASS; /* size: 0x0002 */

typedef struct _ATOM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned short UsageCount;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short NameLength;
  /* 0x0006 */ wchar_t Name[1];
} ATOM_BASIC_INFORMATION, *PATOM_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _REFS_SET_VOLUME_COMPRESSION_INFO_INPUT_BUFFER
{
  /* 0x0000 */ enum _REFS_COMPRESSION_FORMATS CompressionFormat;
  /* 0x0004 */ short CompressionLevel;
  /* 0x0006 */ char Padding_1088[2];
  /* 0x0008 */ unsigned long CompressionChunkSizeBytes;
  /* 0x000c */ enum _REFS_SET_VOLUME_COMPRESSION_INFO_FLAGS Flags;
  /* 0x0010 */ unsigned __int64 Reserved[8];
} REFS_SET_VOLUME_COMPRESSION_INFO_INPUT_BUFFER, *PREFS_SET_VOLUME_COMPRESSION_INFO_INPUT_BUFFER; /* size: 0x0050 */

struct wistd::__make_signed<long,1>
{
}; /* size: 0x0001 */

typedef union _MCI_STATS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short McaErrorCode;
      /* 0x0002 */ unsigned short ModelErrorCode;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OtherInformation : 25; /* bit position: 0 */
        /* 0x0004 */ unsigned long ContextCorrupt : 1; /* bit position: 25 */
        /* 0x0004 */ unsigned long AddressValid : 1; /* bit position: 26 */
        /* 0x0004 */ unsigned long MiscValid : 1; /* bit position: 27 */
        /* 0x0004 */ unsigned long ErrorEnabled : 1; /* bit position: 28 */
        /* 0x0004 */ unsigned long UncorrectedError : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long StatusOverFlow : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Valid : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0008 */ MciStatus;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_STATS, *PMCI_STATS; /* size: 0x0008 */

typedef union _MCI_ADDR
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Address;
      /* 0x0004 */ unsigned long Reserved;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_ADDR, *PMCI_ADDR; /* size: 0x0008 */

typedef struct _MCA_EXCEPTION
{
  /* 0x0000 */ unsigned long VersionNumber;
  /* 0x0004 */ enum MCA_EXCEPTION_TYPE ExceptionType;
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long ProcessorNumber;
  /* 0x0014 */ unsigned long Reserved1;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned char BankNumber;
        /* 0x0019 */ unsigned char Reserved2[7];
        /* 0x0020 */ union _MCI_STATS Status;
        /* 0x0028 */ union _MCI_ADDR Address;
        /* 0x0030 */ unsigned __int64 Misc;
      } /* size: 0x0020 */ Mca;
      struct
      {
        /* 0x0018 */ unsigned __int64 Address;
        /* 0x0020 */ unsigned __int64 Type;
      } /* size: 0x0010 */ Mce;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
  /* 0x0038 */ unsigned long ExtCnt;
  /* 0x003c */ unsigned long Reserved3;
  /* 0x0040 */ unsigned __int64 ExtReg[24];
} MCA_EXCEPTION, *PMCA_EXCEPTION; /* size: 0x0100 */

typedef struct _IO_ERROR_LOG_PACKET
{
  /* 0x0000 */ unsigned char MajorFunctionCode;
  /* 0x0001 */ unsigned char RetryCount;
  /* 0x0002 */ unsigned short DumpDataSize;
  /* 0x0004 */ unsigned short NumberOfStrings;
  /* 0x0006 */ unsigned short StringOffset;
  /* 0x0008 */ unsigned short EventCategory;
  /* 0x000a */ char Padding_1089[2];
  /* 0x000c */ long ErrorCode;
  /* 0x0010 */ unsigned long UniqueErrorValue;
  /* 0x0014 */ long FinalStatus;
  /* 0x0018 */ unsigned long SequenceNumber;
  /* 0x001c */ unsigned long IoControlCode;
  /* 0x0020 */ union _LARGE_INTEGER DeviceOffset;
  /* 0x0028 */ unsigned long DumpData[1];
  /* 0x002c */ long __PADDING__[1];
} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; /* size: 0x0030 */

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulFilenameLength;
  /* 0x0008 */ unsigned long ulPathLength;
  /* 0x000c */ long Padding_1090;
  /* 0x0010 */ const wchar_t* lpFileName;
  /* 0x0018 */ const wchar_t* lpFilePath;
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION; /* size: 0x0020 */

struct tagMULTIKEYHELPA
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ char mkKeylist;
  /* 0x0005 */ char szKeyphrase[1];
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

typedef struct _BCryptBufferDesc
{
  /* 0x0000 */ unsigned long ulVersion;
  /* 0x0004 */ unsigned long cBuffers;
  /* 0x0008 */ struct _BCryptBuffer* pBuffers;
} BCryptBufferDesc, *PBCryptBufferDesc; /* size: 0x0010 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IDragDropBroker,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0028 */

typedef struct _GENERATE_NAME_CONTEXT
{
  /* 0x0000 */ unsigned short Checksum;
  /* 0x0002 */ unsigned char ChecksumInserted;
  /* 0x0003 */ unsigned char NameLength;
  /* 0x0004 */ wchar_t NameBuffer[8];
  /* 0x0014 */ unsigned long ExtensionLength;
  /* 0x0018 */ wchar_t ExtensionBuffer[4];
  /* 0x0020 */ unsigned long LastIndexValue;
} GENERATE_NAME_CONTEXT, *PGENERATE_NAME_CONTEXT; /* size: 0x0024 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,0,Windows::Foundation::IAsyncAction,IWeakReferenceSource,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >
{
}; /* size: 0x0058 */

struct IMPORT_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long SizeOfData;
  union
  {
    /* 0x0010 */ unsigned short Ordinal;
    /* 0x0010 */ unsigned short Hint;
  }; /* size: 0x0002 */
  struct /* bitfield */
  {
    /* 0x0012 */ unsigned short Type : 2; /* bit position: 0 */
    /* 0x0012 */ unsigned short NameType : 3; /* bit position: 2 */
    /* 0x0012 */ unsigned short Reserved : 11; /* bit position: 5 */
  }; /* bitfield */
}; /* size: 0x0014 */

typedef struct _SILOOBJECT_ROOT_DIRECTORY
{
  union
  {
    /* 0x0000 */ unsigned long ControlFlags;
    /* 0x0000 */ struct _UNICODE_STRING Path;
  }; /* size: 0x0010 */
} SILOOBJECT_ROOT_DIRECTORY, *PSILOOBJECT_ROOT_DIRECTORY; /* size: 0x0010 */

typedef struct _FS_BPIO_INFO
{
  /* 0x0000 */ unsigned long ActiveBypassIoCount;
  /* 0x0004 */ unsigned short StorageDriverNameLen;
  /* 0x0006 */ wchar_t StorageDriverName[32];
  /* 0x0046 */ char __PADDING__[2];
} FS_BPIO_INFO, *PFS_BPIO_INFO; /* size: 0x0048 */

struct IDragDropBroker
{
}; /* size: 0x0008 */

struct wistd::__libcpp_is_integral<__int64>
{
}; /* size: 0x0001 */

typedef struct _SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ long Padding_1091;
  /* 0x0008 */ void* Owner;
  /* 0x0010 */ void* Group;
  /* 0x0018 */ struct _ACL* Sacl;
  /* 0x0020 */ struct _ACL* Dacl;
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR; /* size: 0x0028 */

typedef struct _FILE_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFORMATION, *PFILE_STREAM_INFORMATION; /* size: 0x0020 */

typedef struct _BCRYPT_PKCS1_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
} BCRYPT_PKCS1_PADDING_INFO, *PBCRYPT_PKCS1_PADDING_INFO; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassCategoryInfo> >
{
}; /* size: 0x0008 */

struct IIndirectCallTarget
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Locked : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long UnlockApplied : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long UnlockIdValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned char UnlockId[32];
} SYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION, *PSYSTEM_CODEINTEGRITY_UNLOCK_INFORMATION; /* size: 0x0024 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfClusters;
  /* 0x0008 */ union _LARGE_INTEGER Cluster[1];
} LOOKUP_STREAM_FROM_CLUSTER_INPUT, *PLOOKUP_STREAM_FROM_CLUSTER_INPUT; /* size: 0x0010 */

struct tagEMREXTFLOODFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlStart;
  /* 0x0010 */ unsigned long crColor;
  /* 0x0014 */ unsigned long iMode;
}; /* size: 0x0018 */

typedef struct _KTMOBJECT_CURSOR
{
  /* 0x0000 */ struct _GUID LastQuery;
  /* 0x0010 */ unsigned long ObjectIdCount;
  /* 0x0014 */ struct _GUID ObjectIds[1];
} KTMOBJECT_CURSOR, *PKTMOBJECT_CURSOR; /* size: 0x0024 */

typedef struct _FILE_PREFETCH
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH, *PFILE_PREFETCH; /* size: 0x0010 */

struct tagEMRSETVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagSIZE szlExtent;
}; /* size: 0x0010 */

typedef struct _RTL_USER_PROCESS_INFORMATION64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1092;
  /* 0x0008 */ __int64 Process;
  /* 0x0010 */ __int64 Thread;
  /* 0x0018 */ struct _CLIENT_ID64 ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
} RTL_USER_PROCESS_INFORMATION64, *PRTL_USER_PROCESS_INFORMATION64; /* size: 0x0068 */

typedef struct _TOKEN_ACCESS_INFORMATION
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES_HASH* SidHash;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES_HASH* RestrictedSidHash;
  /* 0x0010 */ struct _TOKEN_PRIVILEGES* Privileges;
  /* 0x0018 */ struct _LUID AuthenticationId;
  /* 0x0020 */ enum _TOKEN_TYPE TokenType;
  /* 0x0024 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0028 */ struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ unsigned long AppContainerNumber;
  /* 0x0034 */ long Padding_1093;
  /* 0x0038 */ void* PackageSid;
  /* 0x0040 */ struct _SID_AND_ATTRIBUTES_HASH* CapabilitiesHash;
  /* 0x0048 */ void* TrustLevelSid;
  /* 0x0050 */ void* SecurityAttributes;
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION; /* size: 0x0058 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IComClassCategoryInfo> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IComClassCategoryInfo>* ptr_;
}; /* size: 0x0008 */

struct tagRemHENHMETAFILE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
  /* 0x0000 */ unsigned long LogPathLength;
  /* 0x0004 */ wchar_t LogPath[1];
  /* 0x0006 */ char __PADDING__[2];
} TRANSACTIONMANAGER_LOGPATH_INFORMATION, *PTRANSACTIONMANAGER_LOGPATH_INFORMATION; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibCatalogInternal> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ITypeLibCatalogInternal>* ptr_;
}; /* size: 0x0008 */

typedef struct _HARDERROR_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ long Status;
  /* 0x002c */ long Padding_1094;
  /* 0x0030 */ union _LARGE_INTEGER ErrorTime;
  /* 0x0038 */ unsigned long ValidResponseOptions;
  /* 0x003c */ unsigned long Response;
  /* 0x0040 */ unsigned long NumberOfParameters;
  /* 0x0044 */ unsigned long UnicodeStringParameterMask;
  /* 0x0048 */ unsigned __int64 Parameters[5];
} HARDERROR_MSG, *PHARDERROR_MSG; /* size: 0x0070 */

typedef struct _CONSOLE_CURSOR_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ int bVisible;
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO; /* size: 0x0008 */

typedef struct _FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX
{
  /* 0x0000 */ enum _STORAGE_RESERVE_ID StorageReserveId;
  /* 0x0004 */ unsigned long Flags;
} FILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX, *PFILE_SET_STORAGE_RESERVE_ID_INFORMATION_EX; /* size: 0x0008 */

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long SizeOfBuf;
  /* 0x0008 */ void* Buffer;
} SYSTEM_SESSION_PROCESS_INFORMATION, *PSYSTEM_SESSION_PROCESS_INFORMATION; /* size: 0x0010 */

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION; /* size: 0x0004 */

struct tagHW_PROFILE_INFOW
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ wchar_t szHwProfileGuid[39];
  /* 0x0052 */ wchar_t szHwProfileName[80];
  /* 0x00f2 */ char __PADDING__[2];
}; /* size: 0x00f4 */

typedef struct __NCRYPT_PCP_RAW_POLICYDIGEST
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long cbDigest;
} _NCRYPT_PCP_RAW_POLICYDIGEST, *P_NCRYPT_PCP_RAW_POLICYDIGEST; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IWeakReferenceSource,Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > >
{
}; /* size: 0x0050 */

typedef struct _FILE_FS_LABEL_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeLabelLength;
  /* 0x0004 */ wchar_t VolumeLabel[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_FS_LABEL_INFORMATION, *PFILE_FS_LABEL_INFORMATION; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDropTarget> const >;

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1095;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0040 */ struct _FILETIME Date;
  /* 0x0048 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_INFO, *PCMSG_MAIL_LIST_RECIPIENT_INFO; /* size: 0x0050 */

typedef struct _RTL_HEAP_TAG
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
  /* 0x0010 */ unsigned short TagIndex;
  /* 0x0012 */ unsigned short CreatorBackTraceIndex;
  /* 0x0014 */ wchar_t TagName[24];
  /* 0x0044 */ long __PADDING__[1];
} RTL_HEAP_TAG, *PRTL_HEAP_TAG; /* size: 0x0048 */

class Microsoft::WRL::ComPtr<RegistryVerbIterator>
{
  /* 0x0000 */ class RegistryVerbIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _CERT_CHAIN_ENGINE_CONFIG
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1096;
  /* 0x0008 */ void* hRestrictedRoot;
  /* 0x0010 */ void* hRestrictedTrust;
  /* 0x0018 */ void* hRestrictedOther;
  /* 0x0020 */ unsigned long cAdditionalStore;
  /* 0x0024 */ long Padding_1097;
  /* 0x0028 */ void** rghAdditionalStore;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0038 */ unsigned long MaximumCachedCertificates;
  /* 0x003c */ unsigned long CycleDetectionModulus;
  /* 0x0040 */ void* hExclusiveRoot;
  /* 0x0048 */ void* hExclusiveTrustedPeople;
  /* 0x0050 */ unsigned long dwExclusiveFlags;
  /* 0x0054 */ long __PADDING__[1];
} CERT_CHAIN_ENGINE_CONFIG, *PCERT_CHAIN_ENGINE_CONFIG; /* size: 0x0058 */

struct tagRemFORMATETC
{
  /* 0x0000 */ unsigned long cfFormat;
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IComClassCategoryInfo> const >;

typedef struct _RTL_WORK_ON_BEHALF_TICKET_EX
{
  /* 0x0000 */ struct _ALPC_WORK_ON_BEHALF_TICKET Ticket;
  union
  {
    /* 0x0008 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0008 */ unsigned long CurrentThread : 1; /* bit position: 0 */
      /* 0x0008 */ unsigned long Reserved1 : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long Reserved2;
} RTL_WORK_ON_BEHALF_TICKET_EX, *PRTL_WORK_ON_BEHALF_TICKET_EX; /* size: 0x0010 */

struct tagCLIENTCREATESTRUCT
{
  /* 0x0000 */ void* hWindowMenu;
  /* 0x0008 */ unsigned int idFirstChild;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _CERT_RDN_ATTR
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long dwValueType;
  /* 0x000c */ long Padding_1098;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CERT_RDN_ATTR, *PCERT_RDN_ATTR; /* size: 0x0020 */

typedef struct _SYSTEM_SPECULATION_CONTROL_INFORMATION
{
  struct
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long BpbEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long BpbDisabledSystemPolicy : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long BpbDisabledNoHardwareSupport : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long SpecCtrlEnumerated : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long SpecCmdEnumerated : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long IbrsPresent : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long StibpPresent : 1; /* bit position: 6 */
      /* 0x0000 */ unsigned long SmepPresent : 1; /* bit position: 7 */
      /* 0x0000 */ unsigned long SpeculativeStoreBypassDisableAvailable : 1; /* bit position: 8 */
      /* 0x0000 */ unsigned long SpeculativeStoreBypassDisableSupported : 1; /* bit position: 9 */
      /* 0x0000 */ unsigned long SpeculativeStoreBypassDisabledSystemWide : 1; /* bit position: 10 */
      /* 0x0000 */ unsigned long SpeculativeStoreBypassDisabledKernel : 1; /* bit position: 11 */
      /* 0x0000 */ unsigned long SpeculativeStoreBypassDisableRequired : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long BpbDisabledKernelToUser : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long SpecCtrlRetpolineEnabled : 1; /* bit position: 14 */
      /* 0x0000 */ unsigned long SpecCtrlImportOptimizationEnabled : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned long EnhancedIbrs : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long HvL1tfStatusAvailable : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long HvL1tfProcessorNotAffected : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long HvL1tfMigitationEnabled : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long HvL1tfMigitationNotEnabled_Hardware : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long HvL1tfMigitationNotEnabled_LoadOption : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long HvL1tfMigitationNotEnabled_CoreScheduler : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned long EnhancedIbrsReported : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned long MdsHardwareProtected : 1; /* bit position: 24 */
      /* 0x0000 */ unsigned long MbClearEnabled : 1; /* bit position: 25 */
      /* 0x0000 */ unsigned long MbClearReported : 1; /* bit position: 26 */
      /* 0x0000 */ unsigned long ReservedTaa : 4; /* bit position: 27 */
      /* 0x0000 */ unsigned long Reserved : 1; /* bit position: 31 */
    }; /* bitfield */
  } /* size: 0x0004 */ SpeculationControlFlags;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long ReservedFb : 5; /* bit position: 0 */
      /* 0x0004 */ unsigned long BhbEnabled : 1; /* bit position: 5 */
      /* 0x0004 */ unsigned long BhbDisabledSystemPolicy : 1; /* bit position: 6 */
      /* 0x0004 */ unsigned long BhbDisabledNoHardwareSupport : 1; /* bit position: 7 */
      /* 0x0004 */ unsigned long Reserved : 24; /* bit position: 8 */
    }; /* bitfield */
  } /* size: 0x0004 */ SpeculationControlFlags2;
} SYSTEM_SPECULATION_CONTROL_INFORMATION, *PSYSTEM_SPECULATION_CONTROL_INFORMATION; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IConversionClassIterator>
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_SINGLE_PROCESSOR_RELATIONSHIP_INFORMATION_REQUEST
{
  /* 0x0000 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x0004 */ struct _PROCESSOR_NUMBER ProcessorNumber;
} SYSTEM_SINGLE_PROCESSOR_RELATIONSHIP_INFORMATION_REQUEST, *PSYSTEM_SINGLE_PROCESSOR_RELATIONSHIP_INFORMATION_REQUEST; /* size: 0x0008 */

typedef struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDevicePath;
} PROCESS_REVOKE_FILE_HANDLES_INFORMATION, *PPROCESS_REVOKE_FILE_HANDLES_INFORMATION; /* size: 0x0010 */

typedef struct _EVENT_BASIC_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TYPE EventType;
  /* 0x0004 */ long EventState;
} EVENT_BASIC_INFORMATION, *PEVENT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _DRAWPATRECT
{
  /* 0x0000 */ struct tagPOINT ptPosition;
  /* 0x0008 */ struct tagPOINT ptSize;
  /* 0x0010 */ unsigned short wStyle;
  /* 0x0012 */ unsigned short wPattern;
} DRAWPATRECT, *PDRAWPATRECT; /* size: 0x0014 */

struct tagACTCTXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const char* lpSource;
  /* 0x0010 */ unsigned short wProcessorArchitecture;
  /* 0x0012 */ unsigned short wLangId;
  /* 0x0014 */ long Padding_1099;
  /* 0x0018 */ const char* lpAssemblyDirectory;
  /* 0x0020 */ const char* lpResourceName;
  /* 0x0028 */ const char* lpApplicationName;
  /* 0x0030 */ struct HINSTANCE__* hModule;
}; /* size: 0x0038 */

typedef struct _IMAGE_ENCLAVE_CONFIG32
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long MinimumRequiredConfigSize;
  /* 0x0008 */ unsigned long PolicyFlags;
  /* 0x000c */ unsigned long NumberOfImports;
  /* 0x0010 */ unsigned long ImportList;
  /* 0x0014 */ unsigned long ImportEntrySize;
  /* 0x0018 */ unsigned char FamilyID[16];
  /* 0x0028 */ unsigned char ImageID[16];
  /* 0x0038 */ unsigned long ImageVersion;
  /* 0x003c */ unsigned long SecurityVersion;
  /* 0x0040 */ unsigned long EnclaveSize;
  /* 0x0044 */ unsigned long NumberOfThreads;
  /* 0x0048 */ unsigned long EnclaveFlags;
} IMAGE_ENCLAVE_CONFIG32, *PIMAGE_ENCLAVE_CONFIG32; /* size: 0x004c */

typedef struct _PLUGPLAY_NOTIFY_HDR
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} PLUGPLAY_NOTIFY_HDR, *PPLUGPLAY_NOTIFY_HDR; /* size: 0x0014 */

typedef struct _REMOTE_PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1100;
  /* 0x0008 */ unsigned __int64 ViewSize;
  /* 0x0010 */ void* ViewBase;
} REMOTE_PORT_VIEW, *PREMOTE_PORT_VIEW; /* size: 0x0018 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IEnumUnknown,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0028 */

struct tagStorageLayout
{
  /* 0x0000 */ unsigned long LayoutType;
  /* 0x0004 */ long Padding_1101;
  /* 0x0008 */ wchar_t* pwcsElementName;
  /* 0x0010 */ union _LARGE_INTEGER cOffset;
  /* 0x0018 */ union _LARGE_INTEGER cBytes;
}; /* size: 0x0020 */

typedef struct _DISPATCHER_CONTEXT_ARM64
{
  /* 0x0000 */ unsigned __int64 ControlPc;
  /* 0x0008 */ unsigned __int64 ImageBase;
  /* 0x0010 */ struct _IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY* FunctionEntry;
  /* 0x0018 */ unsigned __int64 EstablisherFrame;
  /* 0x0020 */ unsigned __int64 TargetPc;
  /* 0x0028 */ struct _ARM64_NT_CONTEXT* ContextRecord;
  /* 0x0030 */ void* LanguageHandler /* function */;
  /* 0x0038 */ void* HandlerData;
  /* 0x0040 */ struct _UNWIND_HISTORY_TABLE* HistoryTable;
  /* 0x0048 */ unsigned long ScopeIndex;
  /* 0x004c */ unsigned char ControlPcIsUnwound;
  /* 0x004d */ char Padding_1102[3];
  /* 0x0050 */ unsigned char* NonVolatileRegisters;
} DISPATCHER_CONTEXT_ARM64, *PDISPATCHER_CONTEXT_ARM64; /* size: 0x0058 */

typedef struct _WIM_PROVIDER_ADD_OVERLAY_INPUT
{
  /* 0x0000 */ unsigned long WimType;
  /* 0x0004 */ unsigned long WimIndex;
  /* 0x0008 */ unsigned long WimFileNameOffset;
  /* 0x000c */ unsigned long WimFileNameLength;
} WIM_PROVIDER_ADD_OVERLAY_INPUT, *PWIM_PROVIDER_ADD_OVERLAY_INPUT; /* size: 0x0010 */

struct tagDIBSECTION
{
  /* 0x0000 */ struct tagBITMAP dsBm;
  /* 0x0020 */ struct tagBITMAPINFOHEADER dsBmih;
  /* 0x0048 */ unsigned long dsBitfields[3];
  /* 0x0054 */ long Padding_1103;
  /* 0x0058 */ void* dshSection;
  /* 0x0060 */ unsigned long dsOffset;
  /* 0x0064 */ long __PADDING__[1];
}; /* size: 0x0068 */

class Microsoft::WRL::ComPtr<CDragDropBroker>
{
  /* 0x0000 */ class CDragDropBroker* ptr_;
}; /* size: 0x0008 */

struct tagHANDLETABLE
{
  /* 0x0000 */ void* objectHandle[1];
}; /* size: 0x0008 */

typedef struct _ACCESS_ALLOWED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE; /* size: 0x0030 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,ITypeLibRegistrationReader,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0028 */

struct CM_Power_Data_s
{
  /* 0x0000 */ unsigned long PD_Size;
  /* 0x0004 */ enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
  /* 0x0008 */ unsigned long PD_Capabilities;
  /* 0x000c */ unsigned long PD_D1Latency;
  /* 0x0010 */ unsigned long PD_D2Latency;
  /* 0x0014 */ unsigned long PD_D3Latency;
  /* 0x0018 */ enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  /* 0x0034 */ enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
}; /* size: 0x0038 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CDragDropBroker> >;

typedef struct _PROCESS_WS_WATCH_INFORMATION
{
  /* 0x0000 */ void* FaultingPc;
  /* 0x0008 */ void* FaultingVa;
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::MakeAllocator<RegistryVerbIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct tagENUMLOGFONTEXW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ wchar_t elfScript[32];
}; /* size: 0x015c */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IConversionClass>
{
  /* 0x0000 */ long Padding_1104[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef struct _SYSTEM_POOL_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long EntryCount;
  /* 0x0008 */ struct _SYSTEM_POOL_LIMIT_INFO LimitEntries[1];
} SYSTEM_POOL_LIMIT_INFORMATION, *PSYSTEM_POOL_LIMIT_INFORMATION; /* size: 0x0038 */

class Microsoft::WRL::ComPtr<IOleDragDropBrokerHost>
{
  /* 0x0000 */ struct IOleDragDropBrokerHost* ptr_;
}; /* size: 0x0008 */

typedef struct _RTL_TRACE_ENUMERATE
{
  /* 0x0000 */ struct _RTL_TRACE_DATABASE* Database;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ long Padding_1105;
  /* 0x0010 */ struct _RTL_TRACE_BLOCK* Block;
} RTL_TRACE_ENUMERATE, *PRTL_TRACE_ENUMERATE; /* size: 0x0018 */

struct ISoftDistExt
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<RegistryTypeLibRegistration>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct tagEMRSETICMPROFILE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cbName;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _INVERTED_FUNCTION_TABLE_KERNEL_MODE
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long MaximumSize;
  /* 0x0008 */ volatile unsigned long Epoch;
  /* 0x000c */ unsigned char Overflow;
  /* 0x000d */ char Padding_1106[3];
  /* 0x0010 */ struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[256];
} INVERTED_FUNCTION_TABLE_KERNEL_MODE, *PINVERTED_FUNCTION_TABLE_KERNEL_MODE; /* size: 0x1810 */

struct IXMLDOMDocument
{
}; /* size: 0x0008 */

struct IInternetBindInfoEx
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IConversionClassIterator,0,0>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::Selector<Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1>,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >
{
}; /* size: 0x0001 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IOleVerbIterator>
{
}; /* size: 0x0010 */

class RegistryVerb
{
  /* 0x0000 */ long Padding_1107[4];
  /* 0x0010 */ long m_id;
  /* 0x0014 */ long Padding_1108;
  /* 0x0018 */ class RegistryKey m_verbKey;
  /* 0x0020 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > > m_name;
  /* 0x0028 */ unsigned long m_flags;
  /* 0x002c */ unsigned long m_attributes;
}; /* size: 0x0030 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IOleVerbIterator>
{
  /* 0x0000 */ long Padding_1109[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

typedef struct _PROCESS_HEAP_ENTRY
{
  /* 0x0000 */ void* lpData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char cbOverhead;
  /* 0x000d */ unsigned char iRegionIndex;
  /* 0x000e */ unsigned short wFlags;
  union
  {
    struct
    {
      /* 0x0010 */ void* hMem;
      /* 0x0018 */ unsigned long dwReserved[3];
      /* 0x0024 */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0010 */ unsigned long dwCommittedSize;
      /* 0x0014 */ unsigned long dwUnCommittedSize;
      /* 0x0018 */ void* lpFirstBlock;
      /* 0x0020 */ void* lpLastBlock;
    } /* size: 0x0018 */ Region;
  }; /* size: 0x0018 */
} PROCESS_HEAP_ENTRY, *PPROCESS_HEAP_ENTRY; /* size: 0x0028 */

typedef struct _BOOT_AREA_INFO
{
  /* 0x0000 */ unsigned long BootSectorCount;
  /* 0x0004 */ long Padding_1110;
  /* 0x0008 */ struct
  {
    /* 0x0008 */ union _LARGE_INTEGER Offset;
  } /* size: 0x0008 */ BootSectors[2];
} BOOT_AREA_INFO, *PBOOT_AREA_INFO; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOleDragDropBrokerHost> >
{
}; /* size: 0x0008 */

typedef struct _FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER ByteCount;
} FSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE, *PFSCTL_QUERY_GHOSTED_FILE_EXTENTS_INPUT_RANGE; /* size: 0x0010 */

class Microsoft::WRL::Details::MakeAllocator<OleClassInfoVerb>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct tagCURSORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HICON__* hCursor;
  /* 0x0010 */ struct tagPOINT ptScreenPos;
}; /* size: 0x0018 */

struct ICreateTypeInfo2
{
}; /* size: 0x0008 */

typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
{
  /* 0x0000 */ unsigned __int64 Version;
  /* 0x0008 */ wchar_t* Name;
} CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE, *PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerb> >;

typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
{
  /* 0x0000 */ void* pValue;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ long __PADDING__[1];
} CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE, *PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<IDragDropBroker>
{
  /* 0x0000 */ struct IDragDropBroker* ptr_;
}; /* size: 0x0008 */

typedef struct _UNIVERSAL_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
} UNIVERSAL_NAME_INFOA, *PUNIVERSAL_NAME_INFOA; /* size: 0x0008 */

typedef struct _QUERY_CACHED_RUNS_OUTPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long FirstEntryOffset;
} QUERY_CACHED_RUNS_OUTPUT, *PQUERY_CACHED_RUNS_OUTPUT; /* size: 0x000c */

class CEnumCategoriesOfClass
{
  /* 0x0000 */ long Padding_1111[2];
  /* 0x0008 */ unsigned long m_dwRefCount;
  /* 0x000c */ int m_bMapOldKeys;
  /* 0x0010 */ struct HKEY__* m_hKey;
  /* 0x0018 */ unsigned long m_dwIndex;
  /* 0x001c */ long Padding_1112;
  /* 0x0020 */ struct HKEY__* m_hKeyCats;
  /* 0x0028 */ unsigned long m_dwOldKeyIndex;
  /* 0x002c */ long Padding_1113;
  /* 0x0030 */ struct IUnknown* m_pCloned;
  /* 0x0038 */ class Microsoft::WRL::Wrappers::SRWLock _enumeratorLock;
}; /* size: 0x0040 */

struct Microsoft::WRL::Details::AsyncOptionsHelper<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ unsigned char Register;
  /* 0x0005 */ char Padding_1114[3];
  /* 0x0008 */ void* FirmwareTableHandler /* function */;
  /* 0x0010 */ void* DriverObject;
} SYSTEM_FIRMWARE_TABLE_HANDLER, *PSYSTEM_FIRMWARE_TABLE_HANDLER; /* size: 0x0018 */

typedef struct _MEMORY_PARTITION_PAGE_COMBINE_INFORMATION
{
  /* 0x0000 */ void* StopHandle;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_1115;
  /* 0x0010 */ unsigned __int64 TotalNumberOfPages;
} MEMORY_PARTITION_PAGE_COMBINE_INFORMATION, *PMEMORY_PARTITION_PAGE_COMBINE_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
  /* 0x0008 */ unsigned long TableID;
  /* 0x000c */ unsigned long TableBufferLength;
  /* 0x0010 */ unsigned char TableBuffer[1];
  /* 0x0011 */ char __PADDING__[3];
} SYSTEM_FIRMWARE_TABLE_INFORMATION, *PSYSTEM_FIRMWARE_TABLE_INFORMATION; /* size: 0x0014 */

struct Microsoft::WRL::Details::AsyncOptionsBase
{
  union
  {
    /* 0x0000 */ const BOOL hasCausalityOptions;
    /* 0x0000 */ const BOOL hasErrorPropagationPolicy;
    /* 0x0000 */ const BOOL hasCausalityOperationName;
    /* 0x0000 */ const BOOL isCausalityEnabled;
  }; /* size: 0x0001 */
}; /* size: 0x0001 */

typedef struct _CRYPT_PRIVATE_KEY_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1116;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0030 */ struct _CRYPT_ATTRIBUTES* pAttributes;
} CRYPT_PRIVATE_KEY_INFO, *PCRYPT_PRIVATE_KEY_INFO; /* size: 0x0038 */

struct Microsoft::WRL::Details::AsyncCausalityOptionsHelper<1,Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >
{
  /* 0x0000 */ const BOOL CausalityEnabled;
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropBroker> const >;

class CsCatInfo
{
  /* 0x0000 */ long Padding_1117[2];
  /* 0x0008 */ unsigned long m_uRefs;
  /* 0x000c */ unsigned long m_cCalls;
  /* 0x0010 */ struct ICatInformation** m_pICatInfo;
  /* 0x0018 */ unsigned long m_cICatInfo;
  /* 0x001c */ long Padding_1118;
  /* 0x0020 */ struct HINSTANCE__* m_hInstCstore;
}; /* size: 0x0028 */

typedef struct _CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ void* pvExtraPolicyPara;
} CERT_CHAIN_POLICY_PARA, *PCERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

typedef struct _MEMORY_PARTITION_PAGEFILE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING PageFileName;
  /* 0x0010 */ union _LARGE_INTEGER MinimumSize;
  /* 0x0018 */ union _LARGE_INTEGER MaximumSize;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long __PADDING__[1];
} MEMORY_PARTITION_PAGEFILE_INFORMATION, *PMEMORY_PARTITION_PAGEFILE_INFORMATION; /* size: 0x0028 */

class Microsoft::WRL::ComPtr<ComProgIdIterator>
{
  /* 0x0000 */ class ComProgIdIterator* ptr_;
}; /* size: 0x0008 */

typedef struct _PROCESS_CHILD_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned char ProhibitChildProcesses;
  /* 0x0001 */ unsigned char AlwaysAllowSecureChildProcess;
  /* 0x0002 */ unsigned char AuditProhibitChildProcesses;
} PROCESS_CHILD_PROCESS_INFORMATION, *PPROCESS_CHILD_PROCESS_INFORMATION; /* size: 0x0003 */

struct Microsoft::WRL::Details::Selector<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> >,Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,Microsoft::WRL::Details::ImplementsMarker<Microsoft::WRL::AsyncBase<Windows::Foundation::IAsyncActionCompletedHandler,Microsoft::WRL::Details::Nil,1,Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2> > > > >
{
}; /* size: 0x0048 */

typedef struct _CRYPT_DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[8];
  /* 0x0008 */ unsigned char IV[8];
  /* 0x0010 */ unsigned char Feedback[8];
} CRYPT_DES_KEY_STATE, *PCRYPT_DES_KEY_STATE; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDragDropBroker> >
{
}; /* size: 0x0008 */

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION
{
  /* 0x0000 */ enum _IO_PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFORMATION, *PFILE_IO_PRIORITY_HINT_INFORMATION; /* size: 0x0004 */

typedef struct _COMMTIMEOUTS
{
  /* 0x0000 */ unsigned long ReadIntervalTimeout;
  /* 0x0004 */ unsigned long ReadTotalTimeoutMultiplier;
  /* 0x0008 */ unsigned long ReadTotalTimeoutConstant;
  /* 0x000c */ unsigned long WriteTotalTimeoutMultiplier;
  /* 0x0010 */ unsigned long WriteTotalTimeoutConstant;
} COMMTIMEOUTS, *PCOMMTIMEOUTS; /* size: 0x0014 */

typedef struct _QUERY_CACHED_RUNS_ENTRY
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long TierNameOffset;
  /* 0x0008 */ unsigned long TierNameLength;
  /* 0x000c */ unsigned long MediaType;
  /* 0x0010 */ __int64 LongestFreedRun;
  /* 0x0018 */ __int64 Alignment;
  /* 0x0020 */ unsigned long TotalBins;
  /* 0x0024 */ unsigned long BinsMatched;
  /* 0x0028 */ unsigned long BinsReturned;
  /* 0x002c */ unsigned long BinsOffset;
  /* 0x0030 */ unsigned long MaxRuns;
  /* 0x0034 */ unsigned long TotalRuns;
  /* 0x0038 */ unsigned long RunsMatched;
  /* 0x003c */ unsigned long RunsReturned;
  /* 0x0040 */ unsigned long RunsOffset;
  /* 0x0044 */ long __PADDING__[1];
} QUERY_CACHED_RUNS_ENTRY, *PQUERY_CACHED_RUNS_ENTRY; /* size: 0x0048 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOleDragDropBrokerHost> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IOleDragDropBrokerHost>* ptr_;
}; /* size: 0x0008 */

class CEnumCategories
{
  /* 0x0000 */ long Padding_1119[2];
  /* 0x0008 */ struct HKEY__* m_hKey;
  /* 0x0010 */ unsigned long m_dwIndex;
  /* 0x0014 */ unsigned long m_lcid;
  /* 0x0018 */ struct IEnumCATEGORYINFO* m_pcsIEnumCat;
  /* 0x0020 */ int m_fromcs;
  /* 0x0024 */ unsigned long m_dwRefCount;
  /* 0x0028 */ class Microsoft::WRL::Wrappers::SRWLock _enumeratorLock;
}; /* size: 0x0030 */

struct IEnumContextProps
{
}; /* size: 0x0008 */

class wil::details::<lambda_a02f22db55fe6605d2c10792e4588a50>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDragDropBroker> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDragDropBroker>* ptr_;
}; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION
{
  /* 0x0000 */ struct _GUID LogIdentity;
} TRANSACTIONMANAGER_LOG_INFORMATION, *PTRANSACTIONMANAGER_LOG_INFORMATION; /* size: 0x0010 */

class CBrokeredClipDataObject::{dtor}::__l8::<lambda_fde06876c4167ce29bb1eca24a889b37>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IClientSecurity>
{
  /* 0x0000 */ struct IClientSecurity* ptr_;
}; /* size: 0x0008 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_1120[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_1121;
  /* 0x0030 */ struct INTERFACE_HELPER_CLSID* m_r;
}; /* size: 0x0038 */

class wil::details::<lambda_b8e8d69d491182c5cec13c1d33e82913>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ITypeLibRegistrationReader> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ITypeLibRegistrationReader>* ptr_;
}; /* size: 0x0008 */

typedef struct _MEMORY_PARTITION_MEMORY_THRESHOLDS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1122;
  /* 0x0008 */ unsigned __int64 LowMemoryThresholdInPages;
  /* 0x0010 */ unsigned __int64 HighMemoryThresholdInPages;
} MEMORY_PARTITION_MEMORY_THRESHOLDS_INFORMATION, *PMEMORY_PARTITION_MEMORY_THRESHOLDS_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_ID_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ long Padding_1123;
  /* 0x0048 */ union _LARGE_INTEGER FileId;
  /* 0x0050 */ wchar_t FileName[1];
  /* 0x0052 */ char __PADDING__[6];
} FILE_ID_FULL_DIR_INFORMATION, *PFILE_ID_FULL_DIR_INFORMATION; /* size: 0x0058 */

struct APP_LOCAL_DEVICE_ID
{
  /* 0x0000 */ unsigned char value[32];
}; /* size: 0x0020 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE>
{
} ENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE>, *PENUM_FLAG_SIZED_INTEGER<enum tagAR_STATE>; /* size: 0x0001 */

typedef struct _SYSTEM_IOMMU_STATE_INFORMATION
{
  /* 0x0000 */ enum _SYSTEM_IOMMU_STATE State;
  /* 0x0004 */ long Padding_1124;
  /* 0x0008 */ void* Pdo;
} SYSTEM_IOMMU_STATE_INFORMATION, *PSYSTEM_IOMMU_STATE_INFORMATION; /* size: 0x0010 */

struct IWindowForBindingUI
{
}; /* size: 0x0008 */

typedef struct _CONTEXT_CHUNK
{
  /* 0x0000 */ long Offset;
  /* 0x0004 */ unsigned long Length;
} CONTEXT_CHUNK, *PCONTEXT_CHUNK; /* size: 0x0008 */

typedef struct _CONTEXT_EX
{
  /* 0x0000 */ struct _CONTEXT_CHUNK All;
  /* 0x0008 */ struct _CONTEXT_CHUNK Legacy;
  /* 0x0010 */ struct _CONTEXT_CHUNK XState;
  /* 0x0018 */ struct _CONTEXT_CHUNK KernelCet;
} CONTEXT_EX, *PCONTEXT_EX; /* size: 0x0020 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::Streams::IRandomAccessStream *,1>
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<1>,1,IAsyncInfo>
{
}; /* size: 0x0008 */

typedef struct _WIN32_FIND_DATAA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ char cFileName[260];
  /* 0x0130 */ char cAlternateFileName[14];
  /* 0x013e */ char __PADDING__[2];
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA; /* size: 0x0140 */

typedef struct _CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ long lChainIndex;
  /* 0x000c */ long lElementIndex;
  /* 0x0010 */ void* pvExtraPolicyStatus;
} CERT_CHAIN_POLICY_STATUS, *PCERT_CHAIN_POLICY_STATUS; /* size: 0x0018 */

typedef struct _RC_CONFIG
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwLength;
  /* 0x0008 */ unsigned long dwRCConfigVersion;
  /* 0x000c */ unsigned long dwFilePathType;
  /* 0x0010 */ unsigned long dwFileType;
  /* 0x0014 */ unsigned long dwSystemAttributes;
  /* 0x0018 */ unsigned long dwUltimateFallbackLocation;
  /* 0x001c */ unsigned long dwServiceCheckSum[4];
  /* 0x002c */ unsigned long dwChecksum[4];
  /* 0x003c */ unsigned long dwReserved1;
  /* 0x0040 */ unsigned long dwReserved2;
  /* 0x0044 */ unsigned long dwMUIFileNameOffset;
  /* 0x0048 */ unsigned long dwMUIFileNameLength;
  /* 0x004c */ unsigned long dwMUIFilePathOffset;
  /* 0x0050 */ unsigned long dwMUIFilePathLength;
  /* 0x0054 */ unsigned long dwMainResNameTypesOffset;
  /* 0x0058 */ unsigned long dwMainResNameTypesLength;
  /* 0x005c */ unsigned long dwMainResIDTypesOffset;
  /* 0x0060 */ unsigned long dwMainResIDTypesLength;
  /* 0x0064 */ unsigned long dwMUIResNameTypesOffset;
  /* 0x0068 */ unsigned long dwMUIResNameTypesLength;
  /* 0x006c */ unsigned long dwMUIResIDTypesOffset;
  /* 0x0070 */ unsigned long dwMUIResIDTypesLength;
  /* 0x0074 */ unsigned long dwLanguageOffset;
  /* 0x0078 */ unsigned long dwLanguageLength;
  /* 0x007c */ unsigned long dwUltimateFallbackLanguageOffset;
  /* 0x0080 */ unsigned long dwUltimateFallbackLanguageLength;
} RC_CONFIG, *PRC_CONFIG; /* size: 0x0084 */

struct value_entW
{
  /* 0x0000 */ wchar_t* ve_valuename;
  /* 0x0008 */ unsigned long ve_valuelen;
  /* 0x000c */ long Padding_1125;
  /* 0x0010 */ unsigned __int64 ve_valueptr;
  /* 0x0018 */ unsigned long ve_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _JOURNAL_CLIENT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTimeStamp;
  /* 0x0010 */ unsigned __int64 RecordsToProcess;
  /* 0x0018 */ unsigned long RelativeFillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_CLIENT_INFORMATION, *PJOURNAL_CLIENT_INFORMATION; /* size: 0x0020 */

typedef struct _MEMORY_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long MemoryPriority;
} MEMORY_PRIORITY_INFORMATION, *PMEMORY_PRIORITY_INFORMATION; /* size: 0x0004 */

struct std::_Make_signed2<1>
{
}; /* size: 0x0001 */

class std::_Init_locks
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IComClassIterator>
{
  /* 0x0000 */ long Padding_1126[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

struct std::_Make_signed2<8>
{
}; /* size: 0x0001 */

struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  /* 0x0000 */ unsigned char bAuxType;
  /* 0x0001 */ unsigned char bReserved;
  /* 0x0002 */ unsigned long SymbolTableIndex;
  /* 0x0006 */ unsigned char rgbReserved[12];
}; /* size: 0x0012 */

typedef union _IMAGE_AUX_SYMBOL_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long WeakDefaultSymIndex;
      /* 0x0004 */ unsigned long WeakSearchType;
      /* 0x0008 */ unsigned char rgbReserved[12];
    } /* size: 0x0014 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[20];
    } /* size: 0x0014 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ unsigned char bReserved;
      /* 0x0010 */ short HighNumber;
      /* 0x0012 */ unsigned char rgbReserved[2];
    } /* size: 0x0014 */ Section;
    struct
    {
      /* 0x0000 */ struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
      /* 0x0012 */ unsigned char rgbReserved[2];
    }; /* size: 0x0014 */
    struct
    {
      /* 0x0000 */ unsigned long crc;
      /* 0x0004 */ unsigned char rgbReserved[16];
    } /* size: 0x0014 */ CRC;
  }; /* size: 0x0014 */
} IMAGE_AUX_SYMBOL_EX, *PIMAGE_AUX_SYMBOL_EX; /* size: 0x0014 */

struct std::_Make_unsigned2<8>
{
}; /* size: 0x0001 */

struct std::_Invoker_pmd_object
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IPackagedComClassIdIterator> const >;

struct std::_Maximum<>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ char NameString[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING; /* size: 0x0004 */

struct wistd::__compressed_pair_elem<_SYSTEM_PROCESS_INFORMATION *,0,0>
{
  /* 0x0000 */ struct _SYSTEM_PROCESS_INFORMATION* __value_;
}; /* size: 0x0008 */

struct std::greater<void>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfThreads;
  /* 0x0008 */ union _LARGE_INTEGER WorkingSetPrivateSize;
  /* 0x0010 */ unsigned long HardFaultCount;
  /* 0x0014 */ unsigned long NumberOfThreadsHighWatermark;
  /* 0x0018 */ unsigned __int64 CycleTime;
  /* 0x0020 */ union _LARGE_INTEGER CreateTime;
  /* 0x0028 */ union _LARGE_INTEGER UserTime;
  /* 0x0030 */ union _LARGE_INTEGER KernelTime;
  /* 0x0038 */ struct _UNICODE_STRING ImageName;
  /* 0x0048 */ long BasePriority;
  /* 0x004c */ long Padding_1127;
  /* 0x0050 */ void* UniqueProcessId;
  /* 0x0058 */ void* InheritedFromUniqueProcessId;
  /* 0x0060 */ unsigned long HandleCount;
  /* 0x0064 */ unsigned long SessionId;
  /* 0x0068 */ unsigned __int64 UniqueProcessKey;
  /* 0x0070 */ unsigned __int64 PeakVirtualSize;
  /* 0x0078 */ unsigned __int64 VirtualSize;
  /* 0x0080 */ unsigned long PageFaultCount;
  /* 0x0084 */ long Padding_1128;
  /* 0x0088 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0090 */ unsigned __int64 WorkingSetSize;
  /* 0x0098 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x00a0 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x00a8 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x00b0 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x00b8 */ unsigned __int64 PagefileUsage;
  /* 0x00c0 */ unsigned __int64 PeakPagefileUsage;
  /* 0x00c8 */ unsigned __int64 PrivatePageCount;
  /* 0x00d0 */ union _LARGE_INTEGER ReadOperationCount;
  /* 0x00d8 */ union _LARGE_INTEGER WriteOperationCount;
  /* 0x00e0 */ union _LARGE_INTEGER OtherOperationCount;
  /* 0x00e8 */ union _LARGE_INTEGER ReadTransferCount;
  /* 0x00f0 */ union _LARGE_INTEGER WriteTransferCount;
  /* 0x00f8 */ union _LARGE_INTEGER OtherTransferCount;
} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION; /* size: 0x0100 */

class DragDropTelemetry::Instance::__l2::<lambda_276c39db18535f17382b3e205d26374d>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IRandomAccessStream *,1>
{
}; /* size: 0x0008 */

typedef struct _TXFS_CREATE_MINIVERSION_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long BaseVersion;
  /* 0x0008 */ unsigned short MiniVersion;
  /* 0x000a */ char __PADDING__[2];
} TXFS_CREATE_MINIVERSION_INFO, *PTXFS_CREATE_MINIVERSION_INFO; /* size: 0x000c */

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long CodeIntegrityOptions;
} SYSTEM_CODEINTEGRITY_INFORMATION, *PSYSTEM_CODEINTEGRITY_INFORMATION; /* size: 0x0008 */

struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&CloseHandle,void *>
{
}; /* size: 0x0001 */

typedef struct _REPAIR_STORAGE_RESERVE_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AreaIdOffset;
  /* 0x000c */ unsigned long AreaIdCount;
  /* 0x0010 */ enum _STORAGE_RESERVE_ID AreaId[1];
} REPAIR_STORAGE_RESERVE_INPUT, *PREPAIR_STORAGE_RESERVE_INPUT; /* size: 0x0014 */

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _ACTIVATION_CONTEXT* ActivationContext;
    /* 0x0000 */ void* hActCtx;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ unsigned long Flags;
    /* 0x0008 */ unsigned long dwFlags;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION; /* size: 0x0010 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,ITypeLibRegistrationReader,0,0>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_POWER_STATUS
{
  /* 0x0000 */ unsigned char ACLineStatus;
  /* 0x0001 */ unsigned char BatteryFlag;
  /* 0x0002 */ unsigned char BatteryLifePercent;
  /* 0x0003 */ unsigned char SystemStatusFlag;
  /* 0x0004 */ unsigned long BatteryLifeTime;
  /* 0x0008 */ unsigned long BatteryFullLifeTime;
} SYSTEM_POWER_STATUS, *PSYSTEM_POWER_STATUS; /* size: 0x000c */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IComClassIterator,0,0>
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<RegistryConversionClass>
{
  /* 0x0000 */ class RegistryConversionClass* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<RegistryVerb>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct CPageHolderTemplate
{
  /* 0x0000 */ char Padding_1129[18];
  /* 0x0012 */ wchar_t MenuName;
  /* 0x0014 */ wchar_t ClassName;
  /* 0x0016 */ wchar_t szCaption;
  /* 0x0018 */ unsigned short wPointSize;
  /* 0x001a */ wchar_t szFontName;
}; /* size: 0x001c */

class CPageHolder
{
  /* 0x0000 */ long Padding_1130[2];
  /* 0x0008 */ struct _GUID m_clsid;
  /* 0x0018 */ struct HWND__* m_hWnd;
  /* 0x0020 */ unsigned int m_bActive : 1; /* bit position: 0 */
  /* 0x0024 */ unsigned int m_fSiteTranslateAcceleratorCalled;
  union
  {
    /* 0x0028 */ char* m_pszHelpFileA;
    /* 0x0028 */ wchar_t* m_pszHelpFileW;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned long m_dwHelpContext;
  /* 0x0034 */ unsigned long m_lcid;
  /* 0x0038 */ struct CPageHolderTemplate m_dlgTemplate;
  /* 0x0054 */ long Padding_1131;
  /* 0x0058 */ struct IPropertyPage* m_pOlePropPage;
  union
  {
    /* 0x0060 */ struct _PROPSHEETPAGEA m_propSheetPageA;
    /* 0x0060 */ struct _PROPSHEETPAGEW m_propSheetPageW;
  }; /* size: 0x0068 */
  /* 0x00c8 */ long m_dispidStart;
  /* 0x00cc */ long Padding_1132;
  /* 0x00d0 */ class COlePropertySheet* m_pOlePropSheet;
  /* 0x00d8 */ int m_fUnicodePage;
}; /* size: 0x00e0 */

typedef struct _NOTIFYICONDATAA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1133;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ unsigned int uFlags;
  /* 0x0018 */ unsigned int uCallbackMessage;
  /* 0x001c */ long Padding_1134;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ char szTip[128];
  /* 0x00a8 */ unsigned long dwState;
  /* 0x00ac */ unsigned long dwStateMask;
  /* 0x00b0 */ char szInfo[256];
  union
  {
    /* 0x01b0 */ unsigned int uTimeout;
    /* 0x01b0 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x01b4 */ char szInfoTitle[64];
  /* 0x01f4 */ unsigned long dwInfoFlags;
  /* 0x01f8 */ struct _GUID guidItem;
  /* 0x0208 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAA, *PNOTIFYICONDATAA; /* size: 0x0210 */

typedef struct _ALPC_WORK_ON_BEHALF_ATTR
{
  /* 0x0000 */ struct _ALPC_WORK_ON_BEHALF_TICKET Ticket;
} ALPC_WORK_ON_BEHALF_ATTR, *PALPC_WORK_ON_BEHALF_ATTR; /* size: 0x0008 */

class COlePropertySheet
{
  /* 0x0000 */ struct _PROPSHEETHEADERW_V2 m_pshW;
  /* 0x0060 */ unsigned long m_cObjects;
  /* 0x0064 */ long Padding_1135;
  /* 0x0068 */ struct IUnknown** m_ppUnk;
  /* 0x0070 */ unsigned long m_lcid;
  /* 0x0074 */ long Padding_1136;
  /* 0x0078 */ class CArray<CPageHolder *,CPageHolder * &> m_pageArray;
  /* 0x0090 */ struct HWND__* m_hWnd;
}; /* size: 0x0098 */

typedef struct __NCRYPT_UI_POLICY
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* pszCreationTitle;
  /* 0x0010 */ const wchar_t* pszFriendlyName;
  /* 0x0018 */ const wchar_t* pszDescription;
} _NCRYPT_UI_POLICY, *P_NCRYPT_UI_POLICY; /* size: 0x0020 */

struct tagFILTERKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iWaitMSec;
  /* 0x000c */ unsigned long iDelayMSec;
  /* 0x0010 */ unsigned long iRepeatMSec;
  /* 0x0014 */ unsigned long iBounceMSec;
}; /* size: 0x0018 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IInsertableCandidateIterator,0,0>
{
}; /* size: 0x0001 */

typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureSize;
  /* 0x0004 */ unsigned long Protocol;
  /* 0x0008 */ unsigned short ProtocolMajorVersion;
  /* 0x000a */ unsigned short ProtocolMinorVersion;
  /* 0x000c */ unsigned short ProtocolRevision;
  /* 0x000e */ unsigned short Reserved;
  /* 0x0010 */ unsigned long Flags;
  struct
  {
    /* 0x0014 */ unsigned long Reserved[8];
  } /* size: 0x0020 */ GenericReserved;
  union
  {
    union
    {
      struct
      {
        struct
        {
          /* 0x0034 */ unsigned long Capabilities;
        } /* size: 0x0004 */ Server;
        struct
        {
          /* 0x0038 */ unsigned long Capabilities;
          /* 0x003c */ unsigned long ShareFlags;
          /* 0x0040 */ unsigned char ShareType;
          /* 0x0041 */ unsigned char Reserved0[3];
          /* 0x0044 */ unsigned long Reserved1;
        } /* size: 0x0010 */ Share;
      } /* size: 0x0014 */ Smb2;
      /* 0x0034 */ unsigned long Reserved[16];
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ ProtocolSpecific;
} FILE_REMOTE_PROTOCOL_INFORMATION, *PFILE_REMOTE_PROTOCOL_INFORMATION; /* size: 0x0074 */

struct IComCatalog
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IEnumUnknown,0,0>
{
}; /* size: 0x0001 */

typedef struct _LDR_SERVICE_TAG_RECORD
{
  /* 0x0000 */ struct _LDR_SERVICE_TAG_RECORD* Next;
  /* 0x0008 */ unsigned long ServiceTag;
  /* 0x000c */ long __PADDING__[1];
} LDR_SERVICE_TAG_RECORD, *PLDR_SERVICE_TAG_RECORD; /* size: 0x0010 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IOleDataFormatIterator>
{
  /* 0x0000 */ long Padding_1137[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

class wil::Feature<__WilFeatureTraits_Feature_NWMTest1>
{
  union
  {
    /* 0x0000 */ const unsigned int id;
    /* 0x0000 */ const BOOL isAlwaysDisabled;
    /* 0x0000 */ const BOOL isAlwaysEnabled;
    /* 0x0000 */ const BOOL isEnabledByDefault;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<1>
{
} ENUM_FLAG_INTEGER_FOR_SIZE<1>, *PENUM_FLAG_INTEGER_FOR_SIZE<1>; /* size: 0x0001 */

struct tagPOINTER_DEVICE_INFO
{
  /* 0x0000 */ unsigned long displayOrientation;
  /* 0x0004 */ long Padding_1138;
  /* 0x0008 */ void* device;
  /* 0x0010 */ enum tagPOINTER_DEVICE_TYPE pointerDeviceType;
  /* 0x0014 */ long Padding_1139;
  /* 0x0018 */ struct HMONITOR__* monitor;
  /* 0x0020 */ unsigned long startingCursorId;
  /* 0x0024 */ unsigned short maxActiveContacts;
  /* 0x0026 */ wchar_t productString[520];
  /* 0x0436 */ char __PADDING__[2];
}; /* size: 0x0438 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil_FeatureTestState *),&wil_FreeFeatureTestState,wil_FeatureTestState *>
{
}; /* size: 0x0001 */

struct HWINEVENTHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _KLDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ unsigned long __Undefined1;
  /* 0x000c */ unsigned long __Undefined2;
  /* 0x0010 */ unsigned long __Undefined3;
  /* 0x0014 */ unsigned long NonPagedDebugInfo;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short __Undefined5;
  /* 0x003c */ unsigned long __Undefined6;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY32, *PKLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(FEATURE_STATE_CHANGE_SUBSCRIPTION__ *),&wil::details::UnsubscribeProcessWideUsageFlush,FEATURE_STATE_CHANGE_SUBSCRIPTION__ *>
{
}; /* size: 0x0001 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(void *),&wil::details::UnregisterWilFeatureConfigurationChange,void *>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IOleVerbIterator>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_BDD_DYNAMIC_RELOCATION
{
  /* 0x0000 */ unsigned short Left;
  /* 0x0002 */ unsigned short Right;
  /* 0x0004 */ unsigned long Value;
} IMAGE_BDD_DYNAMIC_RELOCATION, *PIMAGE_BDD_DYNAMIC_RELOCATION; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ struct POWER_ACTION_POLICY PowerButton;
  /* 0x0010 */ struct POWER_ACTION_POLICY SleepButton;
  /* 0x001c */ struct POWER_ACTION_POLICY LidClose;
  /* 0x0028 */ enum _SYSTEM_POWER_STATE LidOpenWake;
  /* 0x002c */ unsigned long Reserved;
  /* 0x0030 */ struct POWER_ACTION_POLICY Idle;
  /* 0x003c */ unsigned long IdleTimeout;
  /* 0x0040 */ unsigned char IdleSensitivity;
  /* 0x0041 */ unsigned char DynamicThrottle;
  /* 0x0042 */ unsigned char Spare2[2];
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x004c */ enum _SYSTEM_POWER_STATE ReducedLatencySleep;
  /* 0x0050 */ unsigned long WinLogonFlags;
  /* 0x0054 */ unsigned long Spare3;
  /* 0x0058 */ unsigned long DozeS4Timeout;
  /* 0x005c */ unsigned long BroadcastCapacityResolution;
  /* 0x0060 */ struct SYSTEM_POWER_LEVEL DischargePolicy[4];
  /* 0x00c0 */ unsigned long VideoTimeout;
  /* 0x00c4 */ unsigned char VideoDimDisplay;
  /* 0x00c5 */ char Padding_1140[3];
  /* 0x00c8 */ unsigned long VideoReserved[3];
  /* 0x00d4 */ unsigned long SpindownTimeout;
  /* 0x00d8 */ unsigned char OptimizeForPower;
  /* 0x00d9 */ unsigned char FanThrottleTolerance;
  /* 0x00da */ unsigned char ForcedThrottle;
  /* 0x00db */ unsigned char MinThrottle;
  /* 0x00dc */ struct POWER_ACTION_POLICY OverThrottled;
} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY; /* size: 0x00e8 */

typedef struct _REMSECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long lpSecurityDescriptor;
  /* 0x0008 */ int bInheritHandle;
} REMSECURITY_ATTRIBUTES, *PREMSECURITY_ATTRIBUTES; /* size: 0x000c */

typedef struct _tagRemBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1141;
  /* 0x0008 */ wchar_t* szExtraInfo;
  /* 0x0010 */ unsigned long grfBindInfoF;
  /* 0x0014 */ unsigned long dwBindVerb;
  /* 0x0018 */ wchar_t* szCustomVerb;
  /* 0x0020 */ unsigned long cbstgmedData;
  /* 0x0024 */ unsigned long dwOptions;
  /* 0x0028 */ unsigned long dwOptionsFlags;
  /* 0x002c */ unsigned long dwCodePage;
  /* 0x0030 */ struct _REMSECURITY_ATTRIBUTES securityAttributes;
  /* 0x003c */ struct _GUID iid;
  /* 0x004c */ long Padding_1142;
  /* 0x0050 */ struct IUnknown* pUnk;
  /* 0x0058 */ unsigned long dwReserved;
  /* 0x005c */ long __PADDING__[1];
} tagRemBINDINFO, *PtagRemBINDINFO; /* size: 0x0060 */

struct IXMLElement2
{
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IOleVerb,0,0>
{
}; /* size: 0x0001 */

typedef struct _SYSDBG_TRIAGE_DUMP
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned __int64 BugCheckParam1;
  /* 0x0010 */ unsigned __int64 BugCheckParam2;
  /* 0x0018 */ unsigned __int64 BugCheckParam3;
  /* 0x0020 */ unsigned __int64 BugCheckParam4;
  /* 0x0028 */ unsigned long ProcessHandles;
  /* 0x002c */ unsigned long ThreadHandles;
  /* 0x0030 */ void** Handles;
} SYSDBG_TRIAGE_DUMP, *PSYSDBG_TRIAGE_DUMP; /* size: 0x0038 */

class Microsoft::WRL::Details::MakeAllocator<RegistryDataFormatIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct HRSRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>,1>
{
}; /* size: 0x0008 */

typedef struct _RTL_PROCESS_LOCKS
{
  /* 0x0000 */ unsigned long NumberOfLocks;
  /* 0x0004 */ long Padding_1143;
  /* 0x0008 */ struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
} RTL_PROCESS_LOCKS, *PRTL_PROCESS_LOCKS; /* size: 0x0038 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,0,IComProgIdIterator>
{
}; /* size: 0x0008 */

class CArray<_GUID,_GUID &>
{
  /* 0x0000 */ struct _GUID* m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

struct Windows::Foundation::IAsyncOperation_impl<Windows::Foundation::IAsyncAction *>
{
}; /* size: 0x0008 */

struct IClassClassicInfo2
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<TypeLibRegistrationReader>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

struct IWinRTCatalogInternal
{
}; /* size: 0x0008 */

typedef struct _RTL_RELATIVE_NAME_U
{
  /* 0x0000 */ struct _UNICODE_STRING RelativeName;
  /* 0x0010 */ void* ContainingDirectory;
  /* 0x0018 */ struct _RTLP_CURDIR_REF* CurDirRef;
} RTL_RELATIVE_NAME_U, *PRTL_RELATIVE_NAME_U; /* size: 0x0020 */

struct DLGTEMPLATEEX
{
  /* 0x0000 */ unsigned short dlgVer;
  /* 0x0002 */ unsigned short signature;
  /* 0x0004 */ unsigned long helpID;
  /* 0x0008 */ unsigned long exStyle;
  /* 0x000c */ unsigned long style;
  /* 0x0010 */ unsigned short cDlgItems;
  /* 0x0012 */ short x;
  /* 0x0014 */ short y;
  /* 0x0016 */ short cx;
  /* 0x0018 */ short cy;
}; /* size: 0x001a */

typedef struct _CRYPT_OBJID_TABLE
{
  /* 0x0000 */ unsigned long dwAlgId;
  /* 0x0004 */ long Padding_1144;
  /* 0x0008 */ const char* pszObjId;
} CRYPT_OBJID_TABLE, *PCRYPT_OBJID_TABLE; /* size: 0x0010 */

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* DllName;
  /* 0x0008 */ unsigned long DllFlags;
  /* 0x000c */ long Padding_1145;
  /* 0x0010 */ void* DllAddress;
  /* 0x0018 */ struct _RTL_VERIFIER_THUNK_DESCRIPTOR* DllThunks;
} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR; /* size: 0x0020 */

struct tagEMRCREATECOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEA lcs;
}; /* size: 0x0154 */

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  /* 0x0000 */ char* ThunkName;
  /* 0x0008 */ void* ThunkOldAddress;
  /* 0x0010 */ void* ThunkNewAddress;
} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR; /* size: 0x0018 */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX
{
  /* 0x0000 */ unsigned long PreferredNode;
  /* 0x0004 */ unsigned long Reserved0;
  /* 0x0008 */ unsigned long Reserved1;
  /* 0x000c */ unsigned long Reserved2;
  /* 0x0010 */ struct _PROCESS_STACK_ALLOCATION_INFORMATION AllocInfo;
} PROCESS_STACK_ALLOCATION_INFORMATION_EX, *PPROCESS_STACK_ALLOCATION_INFORMATION_EX; /* size: 0x0028 */

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1146;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_1147;
  /* 0x0018 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
  /* 0x0020 */ unsigned long dwRecipientIndex;
  /* 0x0024 */ unsigned long dwRecipientEncryptedKeyIndex;
  /* 0x0028 */ struct _CRYPT_BIT_BLOB OriginatorPublicKey;
} CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA; /* size: 0x0040 */

typedef struct _FILE_TYPE_NOTIFICATION_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumFileTypeIDs;
  /* 0x0008 */ struct _GUID FileTypeID[1];
} FILE_TYPE_NOTIFICATION_INPUT, *PFILE_TYPE_NOTIFICATION_INPUT; /* size: 0x0018 */

typedef struct _tagStartParam
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ struct IBindCtx* pIBindCtx;
  /* 0x0018 */ struct IUnknown* pItf;
} tagStartParam, *PtagStartParam; /* size: 0x0020 */

struct wistd::__compressed_pair_elem<Microsoft::WRL::ComPtr<IUnknown> *,0,0>
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IUnknown>* __value_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<ComClassIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _FILE_REFERENCE_RANGE
{
  /* 0x0000 */ unsigned __int64 StartingFileReferenceNumber;
  /* 0x0008 */ unsigned __int64 EndingFileReferenceNumber;
} FILE_REFERENCE_RANGE, *PFILE_REFERENCE_RANGE; /* size: 0x0010 */

typedef struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short PageRelativeOffset : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short RegisterNumber : 4; /* bit position: 12 */
  }; /* bitfield */
} IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION, *PIMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION; /* size: 0x0002 */

typedef struct _CERT_QC_STATEMENTS_EXT_INFO
{
  /* 0x0000 */ unsigned long cStatement;
  /* 0x0004 */ long Padding_1148;
  /* 0x0008 */ struct _CERT_QC_STATEMENT* rgStatement;
} CERT_QC_STATEMENTS_EXT_INFO, *PCERT_QC_STATEMENTS_EXT_INFO; /* size: 0x0010 */

struct USN_JOURNAL_DATA_V0
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0038 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IComProgIdIterator,0,0>
{
}; /* size: 0x0001 */

typedef struct _SILOOBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long SiloId;
  /* 0x0004 */ unsigned long SiloParentId;
  /* 0x0008 */ unsigned long NumberOfProcesses;
  /* 0x000c */ unsigned char IsInServerSilo;
  /* 0x000d */ unsigned char Reserved[3];
} SILOOBJECT_BASIC_INFORMATION, *PSILOOBJECT_BASIC_INFORMATION; /* size: 0x0010 */

struct tagMDINEXTMENU
{
  /* 0x0000 */ struct HMENU__* hmenuIn;
  /* 0x0008 */ struct HMENU__* hmenuNext;
  /* 0x0010 */ struct HWND__* hwndNext;
}; /* size: 0x0018 */

struct tagEXTLOGPEN32
{
  /* 0x0000 */ unsigned long elpPenStyle;
  /* 0x0004 */ unsigned long elpWidth;
  /* 0x0008 */ unsigned int elpBrushStyle;
  /* 0x000c */ unsigned long elpColor;
  /* 0x0010 */ unsigned long elpHatch;
  /* 0x0014 */ unsigned long elpNumEntries;
  /* 0x0018 */ unsigned long elpStyleEntry[1];
}; /* size: 0x001c */

struct tagEMREXTCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ unsigned long offBmi;
  /* 0x0010 */ unsigned long cbBmi;
  /* 0x0014 */ unsigned long offBits;
  /* 0x0018 */ unsigned long cbBits;
  /* 0x001c */ struct tagEXTLOGPEN32 elp;
}; /* size: 0x0038 */

struct tagPOLYTEXTW
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ long Padding_1149;
  /* 0x0010 */ const wchar_t* lpstr;
  /* 0x0018 */ unsigned int uiFlags;
  /* 0x001c */ struct tagRECT rcl;
  /* 0x002c */ long Padding_1150;
  /* 0x0030 */ int* pdx;
}; /* size: 0x0038 */

typedef struct _ASYNC_DUPLICATE_EXTENTS_STATUS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _DUPLICATE_EXTENTS_STATE State;
  /* 0x0008 */ unsigned __int64 SourceFileOffset;
  /* 0x0010 */ unsigned __int64 TargetFileOffset;
  /* 0x0018 */ unsigned __int64 ByteCount;
  /* 0x0020 */ unsigned __int64 BytesDuplicated;
} ASYNC_DUPLICATE_EXTENTS_STATUS, *PASYNC_DUPLICATE_EXTENTS_STATUS; /* size: 0x0028 */

typedef struct _SYSTEM_FEATURE_CONFIGURATION_UPDATE
{
  /* 0x0000 */ enum _SYSTEM_FEATURE_CONFIGURATION_UPDATE_TYPE UpdateType;
  /* 0x0004 */ long Padding_1151;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned __int64 PreviousChangeStamp;
      /* 0x0010 */ enum _RTL_FEATURE_CONFIGURATION_TYPE ConfigurationType;
      /* 0x0014 */ unsigned long UpdateCount;
      /* 0x0018 */ struct _RTL_FEATURE_CONFIGURATION_UPDATE Updates[1];
    } /* size: 0x0030 */ Update;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned __int64 PreviousChangeStamp;
        /* 0x0010 */ enum _RTL_FEATURE_CONFIGURATION_TYPE ConfigurationType;
        /* 0x000c */ long Padding_1152;
        /* 0x0018 */ unsigned __int64 BufferSize;
        /* 0x0020 */ void* Buffer;
      } /* size: 0x0020 */ Overwrite;
      /* 0x0028 */ long __PADDING__[4];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} SYSTEM_FEATURE_CONFIGURATION_UPDATE, *PSYSTEM_FEATURE_CONFIGURATION_UPDATE; /* size: 0x0038 */

typedef struct _CERT_SUPPORTED_ALGORITHM_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB IntendedKeyUsage;
  /* 0x0030 */ struct _CERT_POLICIES_INFO IntendedCertPolicies;
} CERT_SUPPORTED_ALGORITHM_INFO, *PCERT_SUPPORTED_ALGORITHM_INFO; /* size: 0x0040 */

typedef struct _AVRF_CLIENT_ID_WOW64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} AVRF_CLIENT_ID_WOW64, *PAVRF_CLIENT_ID_WOW64; /* size: 0x0010 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ struct _AVRF_CLIENT_ID_WOW64 ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_1153;
  /* 0x0020 */ unsigned __int64 Stacks[16];
} AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64; /* size: 0x00a0 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_1154;
  /* 0x0010 */ struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64 HandleTrace[1];
} AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64; /* size: 0x00b0 */

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0008 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0010 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0018 */ unsigned __int64 JobMemoryLimit;
  /* 0x0020 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  /* 0x0024 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
  /* 0x0028 */ unsigned long LimitFlags;
  /* 0x002c */ long __PADDING__[1];
} JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION, *PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION; /* size: 0x0030 */

typedef struct _DISPLAY_DEVICEW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ wchar_t DeviceName[32];
  /* 0x0044 */ wchar_t DeviceString[128];
  /* 0x0144 */ unsigned long StateFlags;
  /* 0x0148 */ wchar_t DeviceID[128];
  /* 0x0248 */ wchar_t DeviceKey[128];
} DISPLAY_DEVICEW, *PDISPLAY_DEVICEW; /* size: 0x0348 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<1,Windows::Foundation::IAsyncAction,0,0>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFile *,1>
{
}; /* size: 0x0008 */

typedef struct _OFSTRUCT
{
  /* 0x0000 */ unsigned char cBytes;
  /* 0x0001 */ unsigned char fFixedDisk;
  /* 0x0002 */ unsigned short nErrCode;
  /* 0x0004 */ unsigned short Reserved1;
  /* 0x0006 */ unsigned short Reserved2;
  /* 0x0008 */ char szPathName[128];
} OFSTRUCT, *POFSTRUCT; /* size: 0x0088 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IOleDataFormatIterator,0,0>
{
}; /* size: 0x0001 */

typedef struct _CERT_BIOMETRIC_EXT_INFO
{
  /* 0x0000 */ unsigned long cBiometricData;
  /* 0x0004 */ long Padding_1155;
  /* 0x0008 */ struct _CERT_BIOMETRIC_DATA* rgBiometricData;
} CERT_BIOMETRIC_EXT_INFO, *PCERT_BIOMETRIC_EXT_INFO; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<IPackagedComClassCatalogInternal>
{
  /* 0x0000 */ struct IPackagedComClassCatalogInternal* ptr_;
}; /* size: 0x0008 */

struct PPM_THERMALCHANGE_EVENT
{
  /* 0x0000 */ unsigned long ThermalConstraint;
  /* 0x0004 */ long Padding_1156;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1157;
  /* 0x0008 */ unsigned char* pbEncodedOcspResponse;
  /* 0x0010 */ unsigned long cbEncodedOcspResponse;
  /* 0x0014 */ long __PADDING__[1];
} CERT_SERVER_OCSP_RESPONSE_CONTEXT, *PCERT_SERVER_OCSP_RESPONSE_CONTEXT; /* size: 0x0018 */

typedef struct _BCRYPT_ECCFULLKEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ enum ECC_CURVE_TYPE_ENUM dwCurveType;
  /* 0x000c */ enum ECC_CURVE_ALG_ID_ENUM dwCurveGenerationAlgId;
  /* 0x0010 */ unsigned long cbFieldLength;
  /* 0x0014 */ unsigned long cbSubgroupOrder;
  /* 0x0018 */ unsigned long cbCofactor;
  /* 0x001c */ unsigned long cbSeed;
} BCRYPT_ECCFULLKEY_BLOB, *PBCRYPT_ECCFULLKEY_BLOB; /* size: 0x0020 */

typedef struct _OVERLAPPED_ENTRY
{
  /* 0x0000 */ unsigned __int64 lpCompletionKey;
  /* 0x0008 */ struct _OVERLAPPED* lpOverlapped;
  /* 0x0010 */ unsigned __int64 Internal;
  /* 0x0018 */ unsigned long dwNumberOfBytesTransferred;
  /* 0x001c */ long __PADDING__[1];
} OVERLAPPED_ENTRY, *POVERLAPPED_ENTRY; /* size: 0x0020 */

struct RTL_ACE_DATA
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char InheritFlags;
  /* 0x0002 */ unsigned char AceFlags;
  /* 0x0003 */ char Padding_1158;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ void** Sid;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::RuntimeClassImpl<Microsoft::WRL::RuntimeClassFlags<2>,1,0,0,IOleVerb>
{
  /* 0x0000 */ long Padding_1159[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

struct tagHELPWININFOW
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ wchar_t rgchMember[2];
}; /* size: 0x001c */

struct PPM_IDLESTATE_EVENT
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned long OldState;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct _QUERY_PERFORMANCE_COUNTER_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long KernelTransition : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ul;
  }; /* size: 0x0004 */
} QUERY_PERFORMANCE_COUNTER_FLAGS, *PQUERY_PERFORMANCE_COUNTER_FLAGS; /* size: 0x0004 */

typedef struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _QUERY_PERFORMANCE_COUNTER_FLAGS Flags;
  /* 0x0008 */ struct _QUERY_PERFORMANCE_COUNTER_FLAGS ValidFlags;
} SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION, *PSYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION; /* size: 0x000c */

struct RPC_ENDPOINT_TEMPLATEA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1160;
  /* 0x0008 */ unsigned char* ProtSeq;
  /* 0x0010 */ unsigned char* Endpoint;
  /* 0x0018 */ void* SecurityDescriptor;
  /* 0x0020 */ unsigned long Backlog;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _NDR64_STRING_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char IsSized : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char IsRanged : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Reserved4 : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Reserved5 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved6 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved7 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved8 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_STRING_FLAGS, *PNDR64_STRING_FLAGS; /* size: 0x0001 */

typedef union _ldouble_val
{
  union
  {
    /* 0x0000 */ unsigned short _Sh[4];
    /* 0x0000 */ double _Val;
  }; /* size: 0x0008 */
} ldouble_val, *Pldouble_val; /* size: 0x0008 */

typedef struct _NDR64_SYSTEM_HANDLE_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char HandleType;
  /* 0x0002 */ char Padding_1161[2];
  /* 0x0004 */ unsigned int DesiredAccess;
} NDR64_SYSTEM_HANDLE_FORMAT, *PNDR64_SYSTEM_HANDLE_FORMAT; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<ComProgIdIterator>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct _TOKEN_ORIGIN
{
  /* 0x0000 */ struct _LUID OriginatingLogonSession;
} TOKEN_ORIGIN, *PTOKEN_ORIGIN; /* size: 0x0008 */

typedef struct _IMAGE_FILE_MACHINES
{
  union
  {
    /* 0x0000 */ unsigned long Value;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long x86 : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long amd64 : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long arm : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long arm64 : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long arm64ec : 1; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_FILE_MACHINES, *PIMAGE_FILE_MACHINES; /* size: 0x0004 */

typedef struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION_ENTRY
{
  /* 0x0000 */ unsigned __int64 ChangeStamp;
  /* 0x0008 */ void* Section;
  /* 0x0010 */ unsigned __int64 Size;
} SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION_ENTRY, *PSYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION_ENTRY; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IPackagedComProgIdIterator>* ptr_;
}; /* size: 0x0008 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::HasKey::__l5::<lambda_b157e817e32bc316ac1016975a893c27>
{
}; /* size: 0x0001 */

typedef struct _IMAGE_FUNCTION_OVERRIDE_DYNAMIC_RELOCATION
{
  /* 0x0000 */ unsigned long OriginalRva;
  /* 0x0004 */ unsigned long BDDOffset;
  /* 0x0008 */ unsigned long RvaSize;
  /* 0x000c */ unsigned long BaseRelocSize;
} IMAGE_FUNCTION_OVERRIDE_DYNAMIC_RELOCATION, *PIMAGE_FUNCTION_OVERRIDE_DYNAMIC_RELOCATION; /* size: 0x0010 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IInsertableCandidate,0,0>
{
}; /* size: 0x0001 */

class RunSyncOnMTAThread::__l2::<lambda_3d6b690e680a9e04a9783c45d7617b8a>
{
  /* 0x0000 */ class CDragDropBroker::RegisterDropTarget::__l11::<lambda_50ee3ecffe8efbd463e6350e39328809>& operation;
  /* 0x0008 */ volatile HRESULT& hr;
}; /* size: 0x0010 */

typedef struct __midl_frag148_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b0 */ struct _NDR64_PARAM_FORMAT frag12;
  /* 0x00c0 */ struct _NDR64_PARAM_FORMAT frag13;
  /* 0x00d0 */ struct _NDR64_PARAM_FORMAT frag14;
  /* 0x00e0 */ struct _NDR64_PARAM_FORMAT frag15;
} _midl_frag148_t, *P_midl_frag148_t; /* size: 0x00f0 */

struct Windows::Foundation::IAsyncOperationCompletedHandler_impl<Windows::Foundation::IAsyncAction *>
{
}; /* size: 0x0008 */

typedef struct _PEBS_DS_SAVE_AREA
{
  union
  {
    /* 0x0000 */ struct _PEBS_DS_SAVE_AREA32 As32Bit;
    /* 0x0000 */ struct _PEBS_DS_SAVE_AREA64 As64Bit;
  }; /* size: 0x00a0 */
} PEBS_DS_SAVE_AREA, *PPEBS_DS_SAVE_AREA; /* size: 0x00a0 */

typedef struct _PROCESSOR_PROFILE_CONTROL_AREA
{
  /* 0x0000 */ struct _PEBS_DS_SAVE_AREA PebsDsSaveArea;
} PROCESSOR_PROFILE_CONTROL_AREA, *PPROCESSOR_PROFILE_CONTROL_AREA; /* size: 0x00a0 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,ITypeLibRegistrationReader,Microsoft::WRL::FtmBase>
{
}; /* size: 0x0030 */

struct NDR64_STRING_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ struct _NDR64_STRING_FLAGS Flags;
  /* 0x0002 */ unsigned short ElementSize;
}; /* size: 0x0004 */

typedef struct _NDR64_CONFORMANT_STRING_FORMAT
{
  /* 0x0000 */ struct NDR64_STRING_HEADER_FORMAT Header;
} NDR64_CONFORMANT_STRING_FORMAT, *PNDR64_CONFORMANT_STRING_FORMAT; /* size: 0x0004 */

typedef struct _PROCESS_MEMORY_EXHAUSTION_INFO
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ enum _PROCESS_MEMORY_EXHAUSTION_TYPE Type;
  /* 0x0008 */ unsigned __int64 Value;
} PROCESS_MEMORY_EXHAUSTION_INFO, *PPROCESS_MEMORY_EXHAUSTION_INFO; /* size: 0x0010 */

typedef struct __midl_frag144_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag144_t, *P_midl_frag144_t; /* size: 0x0028 */

struct tagMEASUREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemWidth;
  /* 0x0010 */ unsigned int itemHeight;
  /* 0x0014 */ long Padding_1162;
  /* 0x0018 */ unsigned __int64 itemData;
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<ConversionClassIterator>
{
  /* 0x0000 */ class ConversionClassIterator* ptr_;
}; /* size: 0x0008 */

struct tagSOLE_AUTHENTICATION_SERVICE
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pPrincipalName;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _SE_APPID_TAGGING_CLAIM_NODE
{
  /* 0x0000 */ struct _UNICODE_STRING AppIdTaggingKey;
  /* 0x0010 */ struct _UNICODE_STRING AppIdTaggingValue;
  /* 0x0020 */ struct _SINGLE_LIST_ENTRY ListEntry;
} SE_APPID_TAGGING_CLAIM_NODE, *PSE_APPID_TAGGING_CLAIM_NODE; /* size: 0x0028 */

typedef struct _CRYPT_RC4_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char SBox[256];
  /* 0x0110 */ unsigned char i;
  /* 0x0111 */ unsigned char j;
} CRYPT_RC4_KEY_STATE, *PCRYPT_RC4_KEY_STATE; /* size: 0x0112 */

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER BootTime;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTime;
  /* 0x0010 */ union _LARGE_INTEGER TimeZoneBias;
  /* 0x0018 */ unsigned long TimeZoneId;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ unsigned __int64 BootTimeBias;
  /* 0x0028 */ unsigned __int64 SleepTimeBias;
} SYSTEM_TIMEOFDAY_INFORMATION, *PSYSTEM_TIMEOFDAY_INFORMATION; /* size: 0x0030 */

typedef struct _FSCTL_OFFLOAD_WRITE_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 FileOffset;
  /* 0x0010 */ unsigned __int64 CopyLength;
  /* 0x0018 */ unsigned __int64 TransferOffset;
  /* 0x0020 */ unsigned char Token[512];
} FSCTL_OFFLOAD_WRITE_INPUT, *PFSCTL_OFFLOAD_WRITE_INPUT; /* size: 0x0220 */

typedef struct _TP_TASK_CALLBACKS
{
  /* 0x0000 */ void* ExecuteCallback /* function */;
  /* 0x0008 */ void* Unposted /* function */;
} TP_TASK_CALLBACKS, *PTP_TASK_CALLBACKS; /* size: 0x0010 */

typedef struct __midl_frag127_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag127_t, *P_midl_frag127_t; /* size: 0x0050 */

typedef union _IMAGE_AUX_SYMBOL
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long TagIndex;
      union
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Linenumber;
            /* 0x0006 */ unsigned short Size;
          } /* size: 0x0004 */ LnSz;
          /* 0x0004 */ unsigned long TotalSize;
        }; /* size: 0x0004 */
      } /* size: 0x0004 */ Misc;
      union
      {
        union
        {
          struct
          {
            /* 0x0008 */ unsigned long PointerToLinenumber;
            /* 0x000c */ unsigned long PointerToNextFunction;
          } /* size: 0x0008 */ Function;
          struct
          {
            /* 0x0008 */ unsigned short Dimension[4];
          } /* size: 0x0008 */ Array;
        }; /* size: 0x0008 */
      } /* size: 0x0008 */ FcnAry;
      /* 0x0010 */ unsigned short TvIndex;
    } /* size: 0x0012 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[18];
    } /* size: 0x0012 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ unsigned char bReserved;
      /* 0x0010 */ short HighNumber;
    } /* size: 0x0012 */ Section;
    /* 0x0000 */ struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    struct
    {
      /* 0x0000 */ unsigned long crc;
      /* 0x0004 */ unsigned char rgbReserved[14];
    } /* size: 0x0012 */ CRC;
  }; /* size: 0x0012 */
} IMAGE_AUX_SYMBOL, *PIMAGE_AUX_SYMBOL; /* size: 0x0012 */

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRootProgramQualifierFlags;
} EV_EXTRA_CERT_CHAIN_POLICY_PARA, *PEV_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0008 */

typedef struct _SYSTEM_SESSION_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_SESSION_BIGPOOL_INFORMATION, *PSYSTEM_SESSION_BIGPOOL_INFORMATION; /* size: 0x0028 */

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
  }; /* bitfield */
} KEY_SET_VIRTUALIZATION_INFORMATION, *PKEY_SET_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>,1>
{
}; /* size: 0x0008 */

typedef struct __midl_frag29_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag29_t, *P_midl_frag29_t; /* size: 0x0060 */

typedef struct _RPC_SECURITY_QOS_V4_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1163;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long __PADDING__[1];
} RPC_SECURITY_QOS_V4_A, *PRPC_SECURITY_QOS_V4_A; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ConversionClassIterator> const >;

typedef struct _FILE_RENAME_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned char ReplaceIfExists;
    /* 0x0000 */ unsigned long Flags;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1164;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION; /* size: 0x0018 */

typedef struct __midl_frag2_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b0 */ struct _NDR64_PARAM_FORMAT frag12;
  /* 0x00c0 */ struct _NDR64_PARAM_FORMAT frag13;
  /* 0x00d0 */ struct _NDR64_PARAM_FORMAT frag14;
} _midl_frag2_t, *P_midl_frag2_t; /* size: 0x00e0 */

typedef struct _INVERTED_FUNCTION_TABLE_USER_MODE
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long MaximumSize;
  /* 0x0008 */ volatile unsigned long Epoch;
  /* 0x000c */ unsigned char Overflow;
  /* 0x000d */ char Padding_1165[3];
  /* 0x0010 */ struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
} INVERTED_FUNCTION_TABLE_USER_MODE, *PINVERTED_FUNCTION_TABLE_USER_MODE; /* size: 0x3010 */

typedef struct _xml_error
{
  /* 0x0000 */ unsigned int _nLine;
  /* 0x0004 */ long Padding_1166;
  /* 0x0008 */ wchar_t* _pchBuf;
  /* 0x0010 */ unsigned int _cchBuf;
  /* 0x0014 */ unsigned int _ich;
  /* 0x0018 */ wchar_t* _pszFound;
  /* 0x0020 */ wchar_t* _pszExpected;
  /* 0x0028 */ unsigned long _reserved1;
  /* 0x002c */ unsigned long _reserved2;
} xml_error, *Pxml_error; /* size: 0x0030 */

typedef struct _DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable;
  /* 0x0018 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0020 */ unsigned __int64 MinimumAddress;
  /* 0x0028 */ unsigned __int64 MaximumAddress;
  /* 0x0030 */ unsigned __int64 BaseAddress;
  /* 0x0038 */ void* Callback /* function */;
  /* 0x0040 */ void* Context;
  /* 0x0048 */ wchar_t* OutOfProcessCallbackDll;
  /* 0x0050 */ enum _FUNCTION_TABLE_TYPE Type;
  /* 0x0054 */ unsigned long EntryCount;
  /* 0x0058 */ struct _RTL_BALANCED_NODE TreeNodeMin;
  /* 0x0070 */ struct _RTL_BALANCED_NODE TreeNodeMax;
} DYNAMIC_FUNCTION_TABLE, *PDYNAMIC_FUNCTION_TABLE; /* size: 0x0088 */

typedef struct _SYSTEM_NUMA_INFORMATION
{
  /* 0x0000 */ unsigned long HighestNodeNumber;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    /* 0x0008 */ struct _GROUP_AFFINITY ActiveProcessorsGroupAffinity[64];
    /* 0x0008 */ unsigned __int64 AvailableMemory[64];
    /* 0x0008 */ unsigned __int64 Pad[128];
  }; /* size: 0x0400 */
} SYSTEM_NUMA_INFORMATION, *PSYSTEM_NUMA_INFORMATION; /* size: 0x0408 */

struct tagEMRROUNDRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct tagSIZE szlCorner;
}; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoInsertableCandidate> const >;

typedef struct _ais_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[241];
  /* 0x00f3 */ char __PADDING__[1];
} ais_MIDL_TYPE_FORMAT_STRING, *Pais_MIDL_TYPE_FORMAT_STRING; /* size: 0x00f4 */

typedef struct _SYSTEM_TPM_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} SYSTEM_TPM_INFORMATION, *PSYSTEM_TPM_INFORMATION; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoInsertableCandidate> >;

struct WIN32_MEMORY_REGION_INFORMATION
{
  /* 0x0000 */ void* AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  union
  {
    /* 0x000c */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x000c */ unsigned long Private : 1; /* bit position: 0 */
      /* 0x000c */ unsigned long MappedDataFile : 1; /* bit position: 1 */
      /* 0x000c */ unsigned long MappedImage : 1; /* bit position: 2 */
      /* 0x000c */ unsigned long MappedPageFile : 1; /* bit position: 3 */
      /* 0x000c */ unsigned long MappedPhysical : 1; /* bit position: 4 */
      /* 0x000c */ unsigned long DirectMapped : 1; /* bit position: 5 */
      /* 0x000c */ unsigned long Reserved : 26; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0010 */ unsigned __int64 RegionSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
}; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::Internal::DataTransfer::ClipboardHistoryItemInternal *,Windows::ApplicationModel::Internal::DataTransfer::IClipboardHistoryItemInternal *>,1>
{
}; /* size: 0x0008 */

struct _TP_JOB;

typedef struct _MARK_HANDLE_INFO32
{
  union
  {
    /* 0x0000 */ unsigned long UsnSourceInfo;
    /* 0x0000 */ unsigned long CopyNumber;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned int VolumeHandle;
  /* 0x0008 */ unsigned long HandleInfo;
} MARK_HANDLE_INFO32, *PMARK_HANDLE_INFO32; /* size: 0x000c */

struct IInsertableCandidateIterator
{
}; /* size: 0x0008 */

typedef struct __midl_frag122_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag122_t, *P_midl_frag122_t; /* size: 0x0050 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CWMO_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum CWMO_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum CWMO_FLAGS>; /* size: 0x0001 */

typedef struct _PS_BNO_ISOLATION_PARAMETERS
{
  /* 0x0000 */ struct _UNICODE_STRING IsolationPrefix;
  /* 0x0010 */ unsigned long HandleCount;
  /* 0x0014 */ long Padding_1167;
  /* 0x0018 */ void** Handles;
  /* 0x0020 */ unsigned char IsolationEnabled;
  /* 0x0021 */ char __PADDING__[7];
} PS_BNO_ISOLATION_PARAMETERS, *PPS_BNO_ISOLATION_PARAMETERS; /* size: 0x0028 */

typedef struct _CERT_POLICY_CONSTRAINTS_INFO
{
  /* 0x0000 */ int fRequireExplicitPolicy;
  /* 0x0004 */ unsigned long dwRequireExplicitPolicySkipCerts;
  /* 0x0008 */ int fInhibitPolicyMapping;
  /* 0x000c */ unsigned long dwInhibitPolicyMappingSkipCerts;
} CERT_POLICY_CONSTRAINTS_INFO, *PCERT_POLICY_CONSTRAINTS_INFO; /* size: 0x0010 */

struct USN_RANGE_TRACK_OUTPUT
{
  /* 0x0000 */ __int64 Usn;
}; /* size: 0x0008 */

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_
{
  /* 0x0000 */ void* TargetFileObject;
  /* 0x0008 */ unsigned long TargetLinkTrackingInformationLength;
  /* 0x000c */ unsigned char TargetLinkTrackingInformationBuffer[1];
  /* 0x000d */ char __PADDING__[3];
} REMOTE_LINK_TRACKING_INFORMATION_, *PREMOTE_LINK_TRACKING_INFORMATION_; /* size: 0x0010 */

typedef struct _NDR64_CONF_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int ElementSize;
  /* 0x0008 */ const void* ConfDescriptor;
} NDR64_CONF_ARRAY_HEADER_FORMAT, *PNDR64_CONF_ARRAY_HEADER_FORMAT; /* size: 0x0010 */

struct IXMLDOMNodeList
{
}; /* size: 0x0008 */

struct HCOLORSPACE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IComCatalogSettings
{
}; /* size: 0x0008 */

typedef struct _PROCESS_LEAP_SECOND_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Reserved;
} PROCESS_LEAP_SECOND_INFORMATION, *PPROCESS_LEAP_SECOND_INFORMATION; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<OleClassInfoVerbIterator>
{
  /* 0x0000 */ class OleClassInfoVerbIterator* ptr_;
}; /* size: 0x0008 */

class wil::com_ptr_t<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,wil::err_returncode_policy>
{
  /* 0x0000 */ struct Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>* m_ptr;
}; /* size: 0x0008 */

class OleClassInfoVerbIterator
{
  /* 0x0000 */ long Padding_1168[4];
  /* 0x0010 */ class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy> m_resourceManager;
  /* 0x0018 */ class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy> m_resourceContext;
  /* 0x0020 */ class wil::com_ptr_t<Windows::Foundation::Collections::IIterator<Windows::Foundation::Collections::IKeyValuePair<HSTRING__ *,IInspectable *> *>,wil::err_returncode_policy> m_verbIterator;
  /* 0x0028 */ unsigned int m_verbCount;
}; /* size: 0x0030 */

struct IInternetSecurityManager
{
}; /* size: 0x0008 */

typedef struct _SUPPORTED_OS_INFO
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} SUPPORTED_OS_INFO, *PSUPPORTED_OS_INFO; /* size: 0x0004 */

typedef struct _SHSTOCKICONINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1169;
  /* 0x0008 */ struct HICON__* hIcon;
  /* 0x0010 */ int iSysImageIndex;
  /* 0x0014 */ int iIcon;
  /* 0x0018 */ wchar_t szPath[260];
} SHSTOCKICONINFO, *PSHSTOCKICONINFO; /* size: 0x0220 */

typedef struct __midl_frag193_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag193_t, *P_midl_frag193_t; /* size: 0x0050 */

typedef struct _SECURITY_DESCRIPTOR_RELATIVE
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ unsigned long Owner;
  /* 0x0008 */ unsigned long Group;
  /* 0x000c */ unsigned long Sacl;
  /* 0x0010 */ unsigned long Dacl;
} SECURITY_DESCRIPTOR_RELATIVE, *PSECURITY_DESCRIPTOR_RELATIVE; /* size: 0x0014 */

typedef struct _REPARSE_INDEX_KEY
{
  /* 0x0000 */ unsigned long FileReparseTag;
  /* 0x0004 */ union _LARGE_INTEGER FileId;
} REPARSE_INDEX_KEY, *PREPARSE_INDEX_KEY; /* size: 0x000c */

struct Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem
{
}; /* size: 0x0008 */

typedef struct __midl_frag168_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b0 */ struct _NDR64_PARAM_FORMAT frag12;
  /* 0x00c0 */ struct _NDR64_PARAM_FORMAT frag13;
  /* 0x00d0 */ struct _NDR64_PARAM_FORMAT frag14;
  /* 0x00e0 */ struct _NDR64_PARAM_FORMAT frag15;
  /* 0x00f0 */ struct _NDR64_PARAM_FORMAT frag16;
  /* 0x0100 */ struct _NDR64_PARAM_FORMAT frag17;
  /* 0x0110 */ struct _NDR64_PARAM_FORMAT frag18;
  /* 0x0120 */ struct _NDR64_PARAM_FORMAT frag19;
} _midl_frag168_t, *P_midl_frag168_t; /* size: 0x0130 */

typedef struct _CMC_STATUS_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ unsigned long cBodyList;
  /* 0x0008 */ unsigned long* rgdwBodyList;
  /* 0x0010 */ wchar_t* pwszStatusString;
  /* 0x0018 */ unsigned long dwOtherInfoChoice;
  /* 0x001c */ long Padding_1170;
  union
  {
    /* 0x0020 */ unsigned long dwFailInfo;
    /* 0x0020 */ struct _CMC_PEND_INFO* pPendInfo;
  }; /* size: 0x0008 */
} CMC_STATUS_INFO, *PCMC_STATUS_INFO; /* size: 0x0028 */

typedef struct __midl_frag137_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag137_t, *P_midl_frag137_t; /* size: 0x0060 */

typedef struct __midl_frag133_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag133_t, *P_midl_frag133_t; /* size: 0x0040 */

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned long TimeIncrement;
  /* 0x0008 */ unsigned char Enable;
  /* 0x0009 */ char __PADDING__[3];
} SYSTEM_QUERY_TIME_ADJUST_INFORMATION, *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION; /* size: 0x000c */

typedef struct __midl_frag110_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
} _midl_frag110_t, *P_midl_frag110_t; /* size: 0x00a0 */

typedef struct _SAFER_HASH_IDENTIFICATION
{
  /* 0x0000 */ struct _SAFER_IDENTIFICATION_HEADER header;
  /* 0x0020 */ wchar_t Description[256];
  /* 0x0220 */ wchar_t FriendlyName[256];
  /* 0x0420 */ unsigned long HashSize;
  /* 0x0424 */ unsigned char ImageHash[64];
  /* 0x0464 */ unsigned int HashAlgorithm;
  /* 0x0468 */ union _LARGE_INTEGER ImageSize;
  /* 0x0470 */ unsigned long dwSaferFlags;
  /* 0x0474 */ long __PADDING__[1];
} SAFER_HASH_IDENTIFICATION, *PSAFER_HASH_IDENTIFICATION; /* size: 0x0478 */

typedef struct __midl_frag43_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b0 */ struct _NDR64_PARAM_FORMAT frag12;
  /* 0x00c0 */ struct _NDR64_PARAM_FORMAT frag13;
  /* 0x00d0 */ struct _NDR64_PARAM_FORMAT frag14;
} _midl_frag43_t, *P_midl_frag43_t; /* size: 0x00e0 */

typedef struct __midl_frag40_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag40_t, *P_midl_frag40_t; /* size: 0x0040 */

typedef struct __midl_frag20_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag20_t, *P_midl_frag20_t; /* size: 0x0008 */

struct Windows::ApplicationModel::DataTransfer::IDataPackagePropertySetView
{
}; /* size: 0x0008 */

typedef struct _SAFER_HASH_IDENTIFICATION2
{
  /* 0x0000 */ struct _SAFER_HASH_IDENTIFICATION hashIdentification;
  /* 0x0478 */ unsigned long HashSize;
  /* 0x047c */ unsigned char ImageHash[64];
  /* 0x04bc */ unsigned int HashAlgorithm;
} SAFER_HASH_IDENTIFICATION2, *PSAFER_HASH_IDENTIFICATION2; /* size: 0x04c0 */

typedef struct __midl_frag62_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b0 */ struct _NDR64_PARAM_FORMAT frag12;
  /* 0x00c0 */ struct _NDR64_PARAM_FORMAT frag13;
  /* 0x00d0 */ struct _NDR64_PARAM_FORMAT frag14;
  /* 0x00e0 */ struct _NDR64_PARAM_FORMAT frag15;
  /* 0x00f0 */ struct _NDR64_PARAM_FORMAT frag16;
  /* 0x0100 */ struct _NDR64_PARAM_FORMAT frag17;
  /* 0x0110 */ struct _NDR64_PARAM_FORMAT frag18;
  /* 0x0120 */ struct _NDR64_PARAM_FORMAT frag19;
  /* 0x0130 */ struct _NDR64_PARAM_FORMAT frag20;
  /* 0x0140 */ struct _NDR64_PARAM_FORMAT frag21;
} _midl_frag62_t, *P_midl_frag62_t; /* size: 0x0150 */

typedef struct __midl_frag24_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag24_t, *P_midl_frag24_t; /* size: 0x0050 */

typedef struct __midl_frag145_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag145_t, *P_midl_frag145_t; /* size: 0x0010 */

typedef struct _wireVARIANT
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long rpcReserved;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ unsigned short wReserved1;
  /* 0x000c */ unsigned short wReserved2;
  /* 0x000e */ unsigned short wReserved3;
  union
  {
    /* 0x0010 */ __int64 llVal;
    /* 0x0010 */ long lVal;
    /* 0x0010 */ unsigned char bVal;
    /* 0x0010 */ short iVal;
    /* 0x0010 */ float fltVal;
    /* 0x0010 */ double dblVal;
    /* 0x0010 */ short boolVal;
    /* 0x0010 */ long scode;
    /* 0x0010 */ union tagCY cyVal;
    /* 0x0010 */ double date;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB* bstrVal;
    /* 0x0010 */ struct IUnknown* punkVal;
    /* 0x0010 */ struct IDispatch* pdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY** parray;
    /* 0x0010 */ struct _wireBRECORD* brecVal;
    /* 0x0010 */ unsigned char* pbVal;
    /* 0x0010 */ short* piVal;
    /* 0x0010 */ long* plVal;
    /* 0x0010 */ __int64* pllVal;
    /* 0x0010 */ float* pfltVal;
    /* 0x0010 */ double* pdblVal;
    /* 0x0010 */ short* pboolVal;
    /* 0x0010 */ long* pscode;
    /* 0x0010 */ union tagCY* pcyVal;
    /* 0x0010 */ double* pdate;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB** pbstrVal;
    /* 0x0010 */ struct IUnknown** ppunkVal;
    /* 0x0010 */ struct IDispatch** ppdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY*** pparray;
    /* 0x0010 */ struct _wireVARIANT** pvarVal;
    /* 0x0010 */ char cVal;
    /* 0x0010 */ unsigned short uiVal;
    /* 0x0010 */ unsigned long ulVal;
    /* 0x0010 */ unsigned __int64 ullVal;
    /* 0x0010 */ int intVal;
    /* 0x0010 */ unsigned int uintVal;
    /* 0x0010 */ struct tagDEC decVal;
    /* 0x0010 */ struct tagDEC* pdecVal;
    /* 0x0010 */ char* pcVal;
    /* 0x0010 */ unsigned short* puiVal;
    /* 0x0010 */ unsigned long* pulVal;
    /* 0x0010 */ unsigned __int64* pullVal;
    /* 0x0010 */ int* pintVal;
    struct
    {
      /* 0x0010 */ unsigned int* puintVal;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} wireVARIANT, *PwireVARIANT; /* size: 0x0020 */

typedef struct __midl_frag16_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag16_t, *P_midl_frag16_t; /* size: 0x0010 */

typedef struct _SERVERSILO_INIT_INFORMATION
{
  /* 0x0000 */ void* DeleteEvent;
  /* 0x0008 */ unsigned char IsDownlevelContainer;
  /* 0x0009 */ char __PADDING__[7];
} SERVERSILO_INIT_INFORMATION, *PSERVERSILO_INIT_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag103_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag103_t, *P_midl_frag103_t; /* size: 0x0060 */

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION
{
  /* 0x0000 */ unsigned long FileSystemAttributes;
  /* 0x0004 */ long MaximumComponentNameLength;
  /* 0x0008 */ unsigned long FileSystemNameLength;
  /* 0x000c */ wchar_t FileSystemName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_FS_ATTRIBUTE_INFORMATION, *PFILE_FS_ATTRIBUTE_INFORMATION; /* size: 0x0010 */

struct tagLOGPEN
{
  /* 0x0000 */ unsigned int lopnStyle;
  /* 0x0004 */ struct tagPOINT lopnWidth;
  /* 0x000c */ unsigned long lopnColor;
}; /* size: 0x0010 */

struct tagEMRCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ struct tagLOGPEN lopn;
}; /* size: 0x001c */

typedef struct _RPC_POLICY
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ unsigned long EndpointFlags;
  /* 0x0008 */ unsigned long NICFlags;
} RPC_POLICY, *PRPC_POLICY; /* size: 0x000c */

struct tagENUMLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
}; /* size: 0x011c */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION* Information;
  /* 0x0008 */ void* SectionBase;
  /* 0x0010 */ unsigned long SectionLength;
  /* 0x0014 */ long Padding_1171;
  /* 0x0018 */ void* SectionGlobalDataBase;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA; /* size: 0x0028 */

struct IAdviseSink2
{
}; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION
{
  /* 0x0000 */ struct _GUID OldestTransactionGuid;
} TRANSACTIONMANAGER_OLDEST_INFORMATION, *PTRANSACTIONMANAGER_OLDEST_INFORMATION; /* size: 0x0010 */

class ComProgIdIterator
{
  /* 0x0000 */ long Padding_1172[4];
  /* 0x0010 */ class RegistryKey _registryClassesRootKey;
  /* 0x0018 */ unsigned long _registryClassesRootIndex;
  /* 0x001c */ long Padding_1173;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IComCatalogSCM> _comCatalog;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IPackagedComProgIdIterator> _packagedComProgIdIterator;
}; /* size: 0x0030 */

typedef struct __midl_frag200_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
} _midl_frag200_t, *P_midl_frag200_t; /* size: 0x00b0 */

struct tagMINMAXINFO
{
  /* 0x0000 */ struct tagPOINT ptReserved;
  /* 0x0008 */ struct tagPOINT ptMaxSize;
  /* 0x0010 */ struct tagPOINT ptMaxPosition;
  /* 0x0018 */ struct tagPOINT ptMinTrackSize;
  /* 0x0020 */ struct tagPOINT ptMaxTrackSize;
}; /* size: 0x0028 */

typedef struct _WINDOWS_OS_OPTIONS
{
  /* 0x0000 */ unsigned char Signature[8];
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ unsigned long OsLoadPathOffset;
  /* 0x0014 */ wchar_t OsLoadOptions[1];
  /* 0x0016 */ char __PADDING__[2];
} WINDOWS_OS_OPTIONS, *PWINDOWS_OS_OPTIONS; /* size: 0x0018 */

struct tagIMEMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0018 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ char szString[80];
  /* 0x0074 */ long Padding_1174;
  /* 0x0078 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0080 */

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX
{
  /* 0x0000 */ unsigned char EnableIntegrity;
  /* 0x0001 */ unsigned char KeepIntegrityStateUnchanged;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned char Version;
  /* 0x0009 */ unsigned char Reserved2[7];
} FSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX, *PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER_EX; /* size: 0x0010 */

struct Windows::ApplicationModel::DataTransfer::IDataPackageView
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComProgIdIterator> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ComProgIdIterator> >;

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IOleDataFormatIterator>
{
}; /* size: 0x0010 */

struct FR
{
  /* 0x0000 */ union tagCY cySize;
  /* 0x0008 */ long cyLogical;
  /* 0x000c */ long cyHimetric;
  /* 0x0010 */ short sCharset;
  /* 0x0012 */ short sWeight;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned char fBold : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned char fItalic : 1; /* bit position: 1 */
      /* 0x0014 */ unsigned char fUnderline : 1; /* bit position: 2 */
      /* 0x0014 */ unsigned char fStrikethrough : 1; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0014 */ unsigned char bFlags;
  }; /* size: 0x0001 */
  /* 0x0015 */ char Padding_1175;
  /* 0x0016 */ wchar_t rgchFace[32];
  /* 0x0056 */ char __PADDING__[2];
}; /* size: 0x0058 */

class CFont
{
  /* 0x0000 */ long Padding_1176[12];
  /* 0x0030 */ class CNotifyCP m_cpNotify;
  /* 0x0060 */ class CFontEventsCP m_cpEvents;
  /* 0x0088 */ struct FR m_fr;
  /* 0x00e0 */ struct HDC__* m_hdc;
  /* 0x00e8 */ struct HFONT__* m_hfont;
  /* 0x00f0 */ int m_nFcr;
  /* 0x00f4 */ long m_cRefs;
  struct /* bitfield */
  {
    /* 0x00f8 */ unsigned char m_fNameDirty : 1; /* bit position: 0 */
    /* 0x00f8 */ unsigned char m_fCharSetDirty : 1; /* bit position: 1 */
    /* 0x00f8 */ unsigned char m_fNotifyOff : 1; /* bit position: 2 */
  }; /* bitfield */
  union
  {
    /* 0x0000 */ int s_cFcr;
    /* 0x0000 */ struct FCR* s_rgfcr;
    /* 0x0000 */ int s_cFontObjs;
    /* 0x0000 */ int s_fInit;
    /* 0x0000 */ struct ITypeInfo* s_ptinfo;
  }; /* size: 0x0008 */
}; /* size: 0x0100 */

struct FONTFACEDATA
{
  /* 0x0000 */ unsigned long dwCharSet;
  /* 0x0004 */ unsigned long dwPreferredCharSet;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<OleClassInfoVerb>
{
  /* 0x0000 */ class OleClassInfoVerb* ptr_;
}; /* size: 0x0008 */

class OleClassInfoVerb
{
  /* 0x0000 */ long Padding_1177[4];
  /* 0x0010 */ class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy> m_resourceManager;
  /* 0x0018 */ class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy> m_resourceContext;
  /* 0x0020 */ long m_id;
  /* 0x0024 */ long Padding_1178;
  /* 0x0028 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<HSTRING__ *,long (__cdecl*)(HSTRING__ *),&WindowsDeleteString,wistd::integral_constant<unsigned __int64,0>,HSTRING__ *,HSTRING__ *,0,std::nullptr_t> > > m_nameStringOrResourceReference;
  /* 0x0030 */ unsigned long m_flags;
  /* 0x0034 */ unsigned long m_attributes;
}; /* size: 0x0038 */

typedef struct _FILE_FS_FULL_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER CallerAvailableAllocationUnits;
  /* 0x0010 */ union _LARGE_INTEGER ActualAvailableAllocationUnits;
  /* 0x0018 */ unsigned long SectorsPerAllocationUnit;
  /* 0x001c */ unsigned long BytesPerSector;
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION; /* size: 0x0020 */

struct RPC_IF_ID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1179;
  /* 0x0008 */ struct _RPC_IF_ID* IfId[1];
}; /* size: 0x0010 */

class CMemString<CMemString_PolicyCoTaskMem>
{
  /* 0x0000 */ wchar_t* _psz;
}; /* size: 0x0008 */

typedef struct _PROCESS_MITIGATION_DEP_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Enable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long DisableAtlThunkEmulation : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned char Permanent;
  /* 0x0005 */ char __PADDING__[3];
} PROCESS_MITIGATION_DEP_POLICY, *PPROCESS_MITIGATION_DEP_POLICY; /* size: 0x0008 */

struct IAuthenticate
{
}; /* size: 0x0008 */

typedef struct _THREAD_ENERGY_VALUES
{
  /* 0x0000 */ unsigned __int64 Cycles[2][4];
  /* 0x0040 */ unsigned __int64 AttributedCycles[2][4];
  /* 0x0080 */ unsigned __int64 WorkOnBehalfCycles[2][4];
  /* 0x00c0 */ union _TIMELINE_BITMAP CpuTimeline;
} THREAD_ENERGY_VALUES, *PTHREAD_ENERGY_VALUES; /* size: 0x00c8 */

struct ICreateTypeLib
{
}; /* size: 0x0008 */

typedef struct _FILE_END_OF_FILE_INFORMATION_EX
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0008 */ union _LARGE_INTEGER PagingFileSizeInMM;
  /* 0x0010 */ union _LARGE_INTEGER PagingFileMaxSize;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} FILE_END_OF_FILE_INFORMATION_EX, *PFILE_END_OF_FILE_INFORMATION_EX; /* size: 0x0020 */

struct DISPLAYCONFIG_PATH_TARGET_INFO
{
  /* 0x0000 */ struct _LUID adapterId;
  /* 0x0008 */ unsigned int id;
  union
  {
    /* 0x000c */ unsigned int modeInfoIdx;
    struct /* bitfield */
    {
      /* 0x000c */ unsigned int desktopModeInfoIdx : 16; /* bit position: 0 */
      /* 0x000c */ unsigned int targetModeInfoIdx : 16; /* bit position: 16 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0010 */ enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
  /* 0x0014 */ enum DISPLAYCONFIG_ROTATION rotation;
  /* 0x0018 */ enum DISPLAYCONFIG_SCALING scaling;
  /* 0x001c */ struct DISPLAYCONFIG_RATIONAL refreshRate;
  /* 0x0024 */ enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
  /* 0x0028 */ int targetAvailable;
  /* 0x002c */ unsigned int statusFlags;
}; /* size: 0x0030 */

struct DISPLAYCONFIG_PATH_INFO
{
  /* 0x0000 */ struct DISPLAYCONFIG_PATH_SOURCE_INFO sourceInfo;
  /* 0x0014 */ struct DISPLAYCONFIG_PATH_TARGET_INFO targetInfo;
  /* 0x0044 */ unsigned int flags;
}; /* size: 0x0048 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerb> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<OleClassInfoVerb> >;

typedef struct _VARIABLE_NAME_AND_VALUE
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long ValueOffset;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ struct _GUID VendorGuid;
  /* 0x0020 */ wchar_t Name[1];
  /* 0x0022 */ char __PADDING__[2];
} VARIABLE_NAME_AND_VALUE, *PVARIABLE_NAME_AND_VALUE; /* size: 0x0024 */

struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable_imp<<lambda_e1bdf235c2021226f8c53f8fb7bf9230>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

class CTSmartPtr<unsigned short,CTContainer_PolicyLocalMem>
{
}; /* size: 0x0008 */

typedef struct _FIBER
{
  /* 0x0000 */ void* FiberData;
  /* 0x0008 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* DeallocationStack;
  /* 0x0028 */ void* Pad;
  /* 0x0030 */ struct _CONTEXT FiberContext;
  /* 0x0500 */ struct _Wx86TIB* Wx86Tib;
  /* 0x0508 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x0510 */ void* FlsData;
  /* 0x0518 */ unsigned long GuaranteedStackBytes;
  /* 0x051c */ unsigned short TebFlags;
  /* 0x051e */ unsigned short ReservedPad;
  /* 0x0520 */ unsigned __int64 FiberCookie;
  /* 0x0528 */ long __PADDING__[2];
} FIBER, *PFIBER; /* size: 0x0530 */

class SafeCastHelper<unsigned long,int,1>
{
}; /* size: 0x0001 */

typedef struct _Wx86TIB
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long InitialPc;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* DeallocationStack;
  /* 0x0014 */ unsigned long LogFlags;
  /* 0x0018 */ unsigned long InitialSp;
  /* 0x001c */ unsigned char SimulationCount;
  /* 0x001d */ unsigned char InCpuSimulation;
  /* 0x001e */ unsigned char EmulateInitialPc;
  /* 0x001f */ unsigned char Initialized;
  /* 0x0020 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0024 */ void* CpuContext;
  /* 0x0028 */ struct _CONTEXT* InitialExceptionContext;
  /* 0x002c */ void* pCallersRIID;
  /* 0x0030 */ void* pCallersUnknown;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ void* SelfRegDllName;
  /* 0x003c */ void* SelfRegDllHandle;
} Wx86TIB, *PWx86TIB; /* size: 0x0040 */

class ARI::ProcessToken::AutoSysAppId
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* attributes;
  /* 0x0008 */ const struct _TOKEN_SECURITY_ATTRIBUTE_V1* sysAppId;
}; /* size: 0x0010 */

typedef struct _SYSTEM_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfDisks;
  /* 0x0004 */ unsigned long NumberOfFloppies;
  /* 0x0008 */ unsigned long NumberOfCdRoms;
  /* 0x000c */ unsigned long NumberOfTapes;
  /* 0x0010 */ unsigned long NumberOfSerialPorts;
  /* 0x0014 */ unsigned long NumberOfParallelPorts;
} SYSTEM_DEVICE_INFORMATION, *PSYSTEM_DEVICE_INFORMATION; /* size: 0x0018 */

class wistd::__function::__func<<lambda_e1bdf235c2021226f8c53f8fb7bf9230>,long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>
{
  /* 0x0000 */ long Padding_1180[2];
  /* 0x0008 */ class wil::QueryFullProcessImageNameW::__l2::<lambda_e1bdf235c2021226f8c53f8fb7bf9230> __f_;
}; /* size: 0x0018 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_CONFIGURATION_OPERATION>
{
} ENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_CONFIGURATION_OPERATION>, *PENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_CONFIGURATION_OPERATION>; /* size: 0x0001 */

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Settable;
  /* 0x0008 */ unsigned short TagIndex;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long __PADDING__[1];
} HEAP_BLOCK_SETTABLE_INFORMATION, *PHEAP_BLOCK_SETTABLE_INFORMATION; /* size: 0x0010 */

struct PACKAGE_ID
{
  /* 0x0000 */ unsigned int reserved;
  /* 0x0004 */ unsigned int processorArchitecture;
  /* 0x0008 */ struct PACKAGE_VERSION version;
  /* 0x0010 */ wchar_t* name;
  /* 0x0018 */ wchar_t* publisher;
  /* 0x0020 */ wchar_t* resourceId;
  /* 0x0028 */ wchar_t* publisherId;
}; /* size: 0x0030 */

struct RTLWOW64_CROSSPROCESS_WORK_ITEM
{
  /* 0x0000 */ unsigned long Next;
  /* 0x0004 */ enum RTLWOW64_CROSSPROCESS_WORK_OPERATION Operation;
  union
  {
    struct
    {
      /* 0x0008 */ void* BaseAddress;
      /* 0x0010 */ unsigned __int64 RegionSize;
      /* 0x0018 */ unsigned long AllocationType;
      /* 0x001c */ unsigned long Protect;
      /* 0x0020 */ long SyscallStatus;
      /* 0x0024 */ long __PADDING__[1];
    } /* size: 0x0020 */ MemoryAllocData;
    struct
    {
      /* 0x0008 */ void* BaseAddress;
      /* 0x0010 */ unsigned __int64 RegionSize;
      /* 0x0018 */ unsigned long FreeType;
      /* 0x001c */ long SyscallStatus;
    } /* size: 0x0018 */ MemoryFreeData;
    struct
    {
      /* 0x0008 */ void* BaseAddress;
      /* 0x0010 */ unsigned __int64 RegionSize;
      /* 0x0018 */ unsigned long NewProtect;
      /* 0x001c */ long SyscallStatus;
    } /* size: 0x0018 */ MemoryProtectData;
    struct
    {
      /* 0x0008 */ void* BaseAddress;
      /* 0x0010 */ unsigned __int64 Length;
    } /* size: 0x0010 */ InstructionCacheFlushData;
    struct
    {
      struct
      {
        /* 0x0008 */ void* BaseAddress;
        /* 0x0010 */ unsigned __int64 RegionSize;
      } /* size: 0x0010 */ MemoryDirtyData;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

typedef struct _BLENDFUNCTION
{
  /* 0x0000 */ unsigned char BlendOp;
  /* 0x0001 */ unsigned char BlendFlags;
  /* 0x0002 */ unsigned char SourceConstantAlpha;
  /* 0x0003 */ unsigned char AlphaFormat;
} BLENDFUNCTION, *PBLENDFUNCTION; /* size: 0x0004 */

typedef struct _KEY_FULL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long SubKeys;
  /* 0x0018 */ unsigned long MaxNameLen;
  /* 0x001c */ unsigned long MaxClassLen;
  /* 0x0020 */ unsigned long Values;
  /* 0x0024 */ unsigned long MaxValueNameLen;
  /* 0x0028 */ unsigned long MaxValueDataLen;
  /* 0x002c */ wchar_t Class[1];
  /* 0x002e */ char __PADDING__[2];
} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler> const >;

typedef struct _DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int isSpecializationEnabled : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _GUID specializationType;
  /* 0x0028 */ struct _GUID specializationSubType;
  /* 0x0038 */ wchar_t specializationApplicationName[128];
} DISPLAYCONFIG_SET_MONITOR_SPECIALIZATION, *PDISPLAYCONFIG_SET_MONITOR_SPECIALIZATION; /* size: 0x0138 */

typedef struct _FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT
{
  /* 0x0000 */ unsigned long NumaNode;
} FSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT, *PFSCTL_QUERY_VOLUME_NUMA_INFO_OUTPUT; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::Foundation::IAsyncActionCompletedHandler> >;

typedef struct _cpinfoexW
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ wchar_t CodePageName[260];
} cpinfoexW, *PcpinfoexW; /* size: 0x0220 */

class wil::details::<lambda_3789e6dda788e7acf31c02345dd5139e>
{
}; /* size: 0x0001 */

struct tagACTCTX_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x0010 */ unsigned long ulLength;
  /* 0x0014 */ long Padding_1181;
  /* 0x0018 */ void* lpSectionGlobalData;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long Padding_1182;
  /* 0x0028 */ void* lpSectionBase;
  /* 0x0030 */ unsigned long ulSectionTotalLength;
  /* 0x0034 */ long Padding_1183;
  /* 0x0038 */ void* hActCtx;
  /* 0x0040 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

struct Windows::Storage::Streams::IInputStream
{
}; /* size: 0x0008 */

struct IUserToken
{
}; /* size: 0x0008 */

typedef struct _RTL_DISK_SPACE_INFO
{
  /* 0x0000 */ enum RTL_DISK_SPACE_POLICY Policy;
} RTL_DISK_SPACE_INFO, *PRTL_DISK_SPACE_INFO; /* size: 0x0004 */

struct tagMONITORINFOEXW
{
  /* 0x0000 */ long Padding_1184[10];
  /* 0x0028 */ wchar_t szDevice[32];
}; /* size: 0x0068 */

typedef struct _PROCESS_SESSION_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
} PROCESS_SESSION_INFORMATION, *PPROCESS_SESSION_INFORMATION; /* size: 0x0004 */

class wil::details::<lambda_8cd2267e17c06890009b9a372798381a>
{
}; /* size: 0x0001 */

typedef struct _PROCESS_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_1185;
  /* 0x0008 */ struct _PEB* PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ long Padding_1186;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION, *PPROCESS_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION BasicInfo;
  union
  {
    /* 0x0038 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned long IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned long IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned long IsFrozen : 1; /* bit position: 4 */
      /* 0x0038 */ unsigned long IsBackground : 1; /* bit position: 5 */
      /* 0x0038 */ unsigned long IsStronglyNamed : 1; /* bit position: 6 */
      /* 0x0038 */ unsigned long IsSecureProcess : 1; /* bit position: 7 */
      /* 0x0038 */ unsigned long IsSubsystemProcess : 1; /* bit position: 8 */
      /* 0x0038 */ unsigned long SpareBits : 23; /* bit position: 9 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION, *PPROCESS_EXTENDED_BASIC_INFORMATION; /* size: 0x0040 */

struct AsyncIMultiQI
{
}; /* size: 0x0008 */

struct HKL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _TRANSACTION_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Outcome;
} TRANSACTION_BASIC_INFORMATION, *PTRANSACTION_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _MEMORY_PARTITION_CHARGE_SHARING_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfTypes;
  /* 0x0008 */ struct _MEMORY_PARTITION_CHARGE_SHARING_ATTRIBUTES PartitionChargeSharing[1];
} MEMORY_PARTITION_CHARGE_SHARING_INFORMATION, *PMEMORY_PARTITION_CHARGE_SHARING_INFORMATION; /* size: 0x0030 */

typedef struct _DRAGINFOA
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ char* lpFileList;
  /* 0x0018 */ unsigned long grfKeyState;
  /* 0x001c */ long __PADDING__[1];
} DRAGINFOA, *PDRAGINFOA; /* size: 0x0020 */

typedef struct _BCRYPT_RSAKEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long BitLength;
  /* 0x0008 */ unsigned long cbPublicExp;
  /* 0x000c */ unsigned long cbModulus;
  /* 0x0010 */ unsigned long cbPrime1;
  /* 0x0014 */ unsigned long cbPrime2;
} BCRYPT_RSAKEY_BLOB, *PBCRYPT_RSAKEY_BLOB; /* size: 0x0018 */

typedef struct _MicrosoftTelemetryAssertArgs
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1187;
  /* 0x0008 */ unsigned __int64 ImageBase;
  /* 0x0010 */ unsigned __int64 ReturnAddress;
  /* 0x0018 */ unsigned char HasArgs;
  /* 0x0019 */ char Padding_1188[7];
  /* 0x0020 */ const char* OriginatingBinary;
  /* 0x0028 */ unsigned long Dword1;
  /* 0x002c */ unsigned long Dword2;
  /* 0x0030 */ unsigned char DumpNeeded;
  /* 0x0031 */ char __PADDING__[7];
} MicrosoftTelemetryAssertArgs, *PMicrosoftTelemetryAssertArgs; /* size: 0x0038 */

struct tagTRACKMOUSEEVENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTrack;
  /* 0x0010 */ unsigned long dwHoverTime;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct GetTypeValueImpl<long,unsigned short const *,enum LoadOrFreeWhy,HINSTANCE__ *>
{
}; /* size: 0x0001 */

typedef struct _FILE_SFIO_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned long MinimumTransferSize;
} FILE_SFIO_VOLUME_INFORMATION, *PFILE_SFIO_VOLUME_INFORMATION; /* size: 0x000c */

struct GetTypeValueImpl<long,enum LoadOrFreeWhy,HINSTANCE__ *>
{
}; /* size: 0x0001 */

typedef struct __NCRYPT_SUPPORTED_LENGTHS
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
  /* 0x000c */ unsigned long dwDefaultLength;
} _NCRYPT_SUPPORTED_LENGTHS, *P_NCRYPT_SUPPORTED_LENGTHS; /* size: 0x0010 */

struct IInternetProtocolEx
{
}; /* size: 0x0008 */

typedef struct _PROCESS_EXCEPTION_PORT
{
  /* 0x0000 */ void* ExceptionPortHandle;
  /* 0x0008 */ unsigned long StateFlags;
  /* 0x000c */ long __PADDING__[1];
} PROCESS_EXCEPTION_PORT, *PPROCESS_EXCEPTION_PORT; /* size: 0x0010 */

struct tagRPC_CALL_ATTRIBUTES_V3_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_1189;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_1190;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ unsigned long IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_1191[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ unsigned long ClientIdentifierBufferLength;
  /* 0x0070 */ unsigned char* ClientIdentifier;
}; /* size: 0x0078 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>,1>
{
}; /* size: 0x0008 */

struct WIN32_MEMORY_PARTITION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumaNode;
  /* 0x0008 */ unsigned long Channel;
  /* 0x000c */ unsigned long NumberOfNumaNodes;
  /* 0x0010 */ unsigned __int64 ResidentAvailablePages;
  /* 0x0018 */ unsigned __int64 CommittedPages;
  /* 0x0020 */ unsigned __int64 CommitLimit;
  /* 0x0028 */ unsigned __int64 PeakCommitment;
  /* 0x0030 */ unsigned __int64 TotalNumberOfPages;
  /* 0x0038 */ unsigned __int64 AvailablePages;
  /* 0x0040 */ unsigned __int64 ZeroPages;
  /* 0x0048 */ unsigned __int64 FreePages;
  /* 0x0050 */ unsigned __int64 StandbyPages;
  /* 0x0058 */ unsigned __int64 Reserved[16];
  /* 0x00d8 */ unsigned __int64 MaximumCommitLimit;
  /* 0x00e0 */ unsigned __int64 Reserved2;
  /* 0x00e8 */ unsigned long PartitionId;
  /* 0x00ec */ long __PADDING__[1];
}; /* size: 0x00f0 */

typedef struct _REFS_STREAM_EXTENT
{
  /* 0x0000 */ __int64 Vcn;
  /* 0x0008 */ __int64 Lcn;
  /* 0x0010 */ __int64 Length;
  /* 0x0018 */ unsigned short Properties;
  /* 0x001a */ char __PADDING__[6];
} REFS_STREAM_EXTENT, *PREFS_STREAM_EXTENT; /* size: 0x0020 */

typedef struct _RTL_IMAGE_MITIGATION_ASLR_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY ForceRelocateImages;
  /* 0x0008 */ union _RTL_IMAGE_MITIGATION_POLICY BottomUpRandomization;
  /* 0x0010 */ union _RTL_IMAGE_MITIGATION_POLICY HighEntropyRandomization;
} RTL_IMAGE_MITIGATION_ASLR_POLICY, *PRTL_IMAGE_MITIGATION_ASLR_POLICY; /* size: 0x0018 */

struct IPipeDouble
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_FEATURES_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ProcessorFeatureBits;
  /* 0x0008 */ unsigned __int64 Reserved[3];
} SYSTEM_PROCESSOR_FEATURES_INFORMATION, *PSYSTEM_PROCESSOR_FEATURES_INFORMATION; /* size: 0x0020 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::ApplicationModel::DataTransfer::ClipboardHistoryItem *,Windows::ApplicationModel::DataTransfer::IClipboardHistoryItem *>,1>
{
}; /* size: 0x0008 */

typedef struct _REFS_STREAM_SNAPSHOT_QUERY_DELTAS_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ unsigned long Reserved[2];
  /* 0x000c */ long Padding_1192;
  /* 0x0010 */ struct _REFS_STREAM_EXTENT Extents[1];
} REFS_STREAM_SNAPSHOT_QUERY_DELTAS_OUTPUT_BUFFER, *PREFS_STREAM_SNAPSHOT_QUERY_DELTAS_OUTPUT_BUFFER; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryConversionClass> const >;

typedef struct _WIM_PROVIDER_OVERLAY_ENTRY
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_1193;
  /* 0x0008 */ union _LARGE_INTEGER DataSourceId;
  /* 0x0010 */ struct _GUID WimGuid;
  /* 0x0020 */ unsigned long WimFileNameOffset;
  /* 0x0024 */ unsigned long WimType;
  /* 0x0028 */ unsigned long WimIndex;
  /* 0x002c */ unsigned long Flags;
} WIM_PROVIDER_OVERLAY_ENTRY, *PWIM_PROVIDER_OVERLAY_ENTRY; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryConversionClass> >;

struct PROCESSOR_IDLESTATE_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned char DemotePercent;
  /* 0x0005 */ unsigned char PromotePercent;
  /* 0x0006 */ unsigned char Spare[2];
}; /* size: 0x0008 */

struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc
{
  /* 0x0000 */ struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc* pNext;
  /* 0x0008 */ unsigned int nHashValue;
  /* 0x000c */ long Padding_1194;
  /* 0x0010 */ wchar_t* key;
  /* 0x0018 */ unsigned long value;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_1195[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

struct IWinRTServerInfo
{
}; /* size: 0x0008 */

class AdHocCallFrame<IOleWindow,<lambda_600bd29f17b036b93b7550065426cbdf> >
{
  /* 0x0000 */ long Padding_1196[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleWindow,IOleWindow>::GetWindow::__l2::<lambda_600bd29f17b036b93b7550065426cbdf>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct CO_DEVICE_CATALOG_COOKIE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_ENABLED_STATE_OPTIONS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_ENABLED_STATE_OPTIONS>, *PENUM_FLAG_SIZED_INTEGER<enum _RTL_FEATURE_ENABLED_STATE_OPTIONS>; /* size: 0x0001 */

typedef struct _EXFAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} EXFAT_STATISTICS, *PEXFAT_STATISTICS; /* size: 0x0024 */

class Microsoft::WRL::ComPtr<RegistryInsertableCandidate>
{
  /* 0x0000 */ class RegistryInsertableCandidate* ptr_;
}; /* size: 0x0008 */

typedef struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Catalog;
  /* 0x0004 */ unsigned long CatalogOffset;
  /* 0x0008 */ unsigned long Reserved;
} IMAGE_LOAD_CONFIG_CODE_INTEGRITY, *PIMAGE_LOAD_CONFIG_CODE_INTEGRITY; /* size: 0x000c */

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY64
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 LockPrefixTable;
  /* 0x0030 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0038 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0040 */ unsigned __int64 ProcessAffinityMask;
  /* 0x0048 */ unsigned long ProcessHeapFlags;
  /* 0x004c */ unsigned short CSDVersion;
  /* 0x004e */ unsigned short DependentLoadFlags;
  /* 0x0050 */ unsigned __int64 EditList;
  /* 0x0058 */ unsigned __int64 SecurityCookie;
  /* 0x0060 */ unsigned __int64 SEHandlerTable;
  /* 0x0068 */ unsigned __int64 SEHandlerCount;
  /* 0x0070 */ unsigned __int64 GuardCFCheckFunctionPointer;
  /* 0x0078 */ unsigned __int64 GuardCFDispatchFunctionPointer;
  /* 0x0080 */ unsigned __int64 GuardCFFunctionTable;
  /* 0x0088 */ unsigned __int64 GuardCFFunctionCount;
  /* 0x0090 */ unsigned long GuardFlags;
  /* 0x0094 */ struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
  /* 0x00a0 */ unsigned __int64 GuardAddressTakenIatEntryTable;
  /* 0x00a8 */ unsigned __int64 GuardAddressTakenIatEntryCount;
  /* 0x00b0 */ unsigned __int64 GuardLongJumpTargetTable;
  /* 0x00b8 */ unsigned __int64 GuardLongJumpTargetCount;
  /* 0x00c0 */ unsigned __int64 DynamicValueRelocTable;
  /* 0x00c8 */ unsigned __int64 CHPEMetadataPointer;
  /* 0x00d0 */ unsigned __int64 GuardRFFailureRoutine;
  /* 0x00d8 */ unsigned __int64 GuardRFFailureRoutineFunctionPointer;
  /* 0x00e0 */ unsigned long DynamicValueRelocTableOffset;
  /* 0x00e4 */ unsigned short DynamicValueRelocTableSection;
  /* 0x00e6 */ unsigned short Reserved2;
  /* 0x00e8 */ unsigned __int64 GuardRFVerifyStackPointerFunctionPointer;
  /* 0x00f0 */ unsigned long HotPatchTableOffset;
  /* 0x00f4 */ unsigned long Reserved3;
  /* 0x00f8 */ unsigned __int64 EnclaveConfigurationPointer;
  /* 0x0100 */ unsigned __int64 VolatileMetadataPointer;
  /* 0x0108 */ unsigned __int64 GuardEHContinuationTable;
  /* 0x0110 */ unsigned __int64 GuardEHContinuationCount;
  /* 0x0118 */ unsigned __int64 GuardXFGCheckFunctionPointer;
  /* 0x0120 */ unsigned __int64 GuardXFGDispatchFunctionPointer;
  /* 0x0128 */ unsigned __int64 GuardXFGTableDispatchFunctionPointer;
  /* 0x0130 */ unsigned __int64 CastGuardOsDeterminedFailureMode;
  /* 0x0138 */ unsigned __int64 GuardMemcpyFunctionPointer;
} IMAGE_LOAD_CONFIG_DIRECTORY64, *PIMAGE_LOAD_CONFIG_DIRECTORY64; /* size: 0x0140 */

typedef struct _PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_1197;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
} PREFIX_TABLE, *PPREFIX_TABLE; /* size: 0x0010 */

typedef struct _MEMORY_COMBINE_INFORMATION_EX
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 PagesCombined;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} MEMORY_COMBINE_INFORMATION_EX, *PMEMORY_COMBINE_INFORMATION_EX; /* size: 0x0018 */

typedef struct _OBJECT_NAME_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_CALL_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long TotalCalls;
  /* 0x0008 */ union _LARGE_INTEGER TimeOfCalls[1];
} SYSTEM_CALL_TIME_INFORMATION, *PSYSTEM_CALL_TIME_INFORMATION; /* size: 0x0010 */

struct ImplementationHelpersDetails::IsUuidOfAnyHelper<ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibrary *,Windows::Storage::IStorageLibrary *>,1>
{
}; /* size: 0x0008 */

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EncryptedPrivateKey;
} CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryInsertableCandidate> >;

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum PackageDependencyProcessorArchitectures>
{
} ENUM_FLAG_SIZED_INTEGER<enum PackageDependencyProcessorArchitectures>, *PENUM_FLAG_SIZED_INTEGER<enum PackageDependencyProcessorArchitectures>; /* size: 0x0001 */

typedef struct _JOBOBJECT_IO_ATTRIBUTION_STATS
{
  /* 0x0000 */ unsigned __int64 IoCount;
  /* 0x0008 */ unsigned __int64 TotalNonOverlappedQueueTime;
  /* 0x0010 */ unsigned __int64 TotalNonOverlappedServiceTime;
  /* 0x0018 */ unsigned __int64 TotalSize;
} JOBOBJECT_IO_ATTRIBUTION_STATS, *PJOBOBJECT_IO_ATTRIBUTION_STATS; /* size: 0x0020 */

typedef struct _JOBOBJECT_IO_ATTRIBUTION_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
  /* 0x0004 */ long Padding_1198;
  /* 0x0008 */ struct _JOBOBJECT_IO_ATTRIBUTION_STATS ReadStats;
  /* 0x0028 */ struct _JOBOBJECT_IO_ATTRIBUTION_STATS WriteStats;
} JOBOBJECT_IO_ATTRIBUTION_INFORMATION, *PJOBOBJECT_IO_ATTRIBUTION_INFORMATION; /* size: 0x0048 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _OSVERSIONINFOEX3W
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  union
  {
    /* 0x0010 */ unsigned long dwPlatformId;
    /* 0x0010 */ unsigned long dwQfeNumber;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0014 */ wchar_t szCSDVersion[128];
    /* 0x0014 */ wchar_t szLayerAttrib[128];
  }; /* size: 0x0100 */
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
  /* 0x011c */ unsigned long wSuiteMaskEx;
  /* 0x0120 */ unsigned long wReserved2;
  union
  {
    union
    {
      /* 0x0124 */ unsigned short wRawInput16;
      struct /* bitfield */
      {
        /* 0x0124 */ unsigned short wLayerNumber : 12; /* bit position: 0 */
        /* 0x0124 */ unsigned short wAttribSelector : 4; /* bit position: 12 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Input;
  /* 0x0126 */ unsigned short wLayerCount;
  /* 0x0128 */ unsigned long dwLayerFlags;
} OSVERSIONINFOEX3W, *POSVERSIONINFOEX3W; /* size: 0x012c */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

struct Microsoft::WRL::AsyncCausalityOptions<&wil::details::SyncAsyncActionName,&GUID_CAUSALITY_WINDOWS_PLATFORM_ID,2>
{
  union
  {
    /* 0x0000 */ const BOOL hasCausalityOptions;
    /* 0x0000 */ const BOOL hasCausalityOperationName;
  }; /* size: 0x0001 */
}; /* size: 0x0001 */

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long Reserved[10];
} PUBLIC_OBJECT_BASIC_INFORMATION, *PPUBLIC_OBJECT_BASIC_INFORMATION; /* size: 0x0038 */

struct Microsoft::WRL::ErrorPropagationPolicyTraits<1>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_POOL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalSize;
  /* 0x0008 */ void* FirstEntry;
  /* 0x0010 */ unsigned short EntryOverhead;
  /* 0x0012 */ unsigned char PoolTagPresent;
  /* 0x0013 */ unsigned char Spare0;
  /* 0x0014 */ unsigned long NumberOfEntries;
  /* 0x0018 */ struct _SYSTEM_POOL_ENTRY Entries[1];
} SYSTEM_POOL_INFORMATION, *PSYSTEM_POOL_INFORMATION; /* size: 0x0028 */

class RegistryVerbIterator
{
  /* 0x0000 */ long Padding_1199[4];
  /* 0x0010 */ class RegistryKey _verbsKey;
  /* 0x0018 */ unsigned long _verbsIndex;
}; /* size: 0x0020 */

typedef struct _KEY_TRUST_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long TrustedKey : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
} KEY_TRUST_INFORMATION, *PKEY_TRUST_INFORMATION; /* size: 0x0004 */

typedef struct _CRYPT_CONTEXT_FUNCTIONS
{
  /* 0x0000 */ unsigned long cFunctions;
  /* 0x0004 */ long Padding_1200;
  /* 0x0008 */ wchar_t** rgpszFunctions;
} CRYPT_CONTEXT_FUNCTIONS, *PCRYPT_CONTEXT_FUNCTIONS; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerbIterator> const >;

struct tagEVENTMSG
{
  /* 0x0000 */ unsigned int message;
  /* 0x0004 */ unsigned int paramL;
  /* 0x0008 */ unsigned int paramH;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ struct HWND__* hwnd;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<RegistryVerbIterator> >;

class wil::details::<lambda_f2e474783984c20cfae428dbee0cad6f>
{
}; /* size: 0x0001 */

typedef struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT
{
  /* 0x0000 */ unsigned long UnusedLong;
  /* 0x0004 */ long Padding_1201;
  /* 0x0008 */ void* UnusedPointer[25];
} RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT, *PRTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT; /* size: 0x00d0 */

typedef struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1202;
  /* 0x0008 */ void* VerifierEngLogStackTrace /* function */;
  /* 0x0010 */ void* VerifierEngReleaseStackTrace /* function */;
  /* 0x0018 */ void* VerifierEngGetStackTraceAddressEx /* function */;
  /* 0x0020 */ struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT UnusedStruct;
  /* 0x00f0 */ void* VerifierEngSetHeapPathCaller /* function */;
} RTL_VERIFIER_PROVIDER_HELPER_TABLE, *PRTL_VERIFIER_PROVIDER_HELPER_TABLE; /* size: 0x00f8 */

struct tagANIMATIONINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iMinAnimate;
}; /* size: 0x0008 */

typedef struct _RTL_RXACT_LOG
{
  /* 0x0000 */ unsigned long OperationCount;
  /* 0x0004 */ unsigned long LogSize;
  /* 0x0008 */ unsigned long LogSizeInUse;
  /* 0x000c */ unsigned long Alignment;
} RTL_RXACT_LOG, *PRTL_RXACT_LOG; /* size: 0x0010 */

struct tagEMRCREATEMONOBRUSH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long ulFormatVersion;
  /* 0x0008 */ unsigned long ulAssemblyCount;
  /* 0x000c */ unsigned long ulRootManifestPathType;
  /* 0x0010 */ unsigned long ulRootManifestPathChars;
  /* 0x0014 */ unsigned long ulRootConfigurationPathType;
  /* 0x0018 */ unsigned long ulRootConfigurationPathChars;
  /* 0x001c */ unsigned long ulAppDirPathType;
  /* 0x0020 */ unsigned long ulAppDirPathChars;
  /* 0x0024 */ long Padding_1203;
  /* 0x0028 */ const wchar_t* lpRootManifestPath;
  /* 0x0030 */ const wchar_t* lpRootConfigurationPath;
  /* 0x0038 */ const wchar_t* lpAppDirPath;
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION; /* size: 0x0040 */

typedef struct _SYSTEM_ALARM_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_ACE, *PSYSTEM_ALARM_ACE; /* size: 0x000c */

struct tagENUMLOGFONTEXDVW
{
  /* 0x0000 */ struct tagENUMLOGFONTEXW elfEnumLogfontEx;
  /* 0x015c */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x01a4 */

struct NCRYPT_ALLOC_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1204;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
}; /* size: 0x0018 */

typedef struct _ICONINFOEXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
  /* 0x0020 */ unsigned short wResID;
  /* 0x0022 */ wchar_t szModName[260];
  /* 0x022a */ wchar_t szResName[260];
  /* 0x0432 */ char __PADDING__[6];
} ICONINFOEXW, *PICONINFOEXW; /* size: 0x0438 */

struct RPC_CLIENT_INFORMATION1
{
  /* 0x0000 */ unsigned char* UserName;
  /* 0x0008 */ unsigned char* ComputerName;
  /* 0x0010 */ unsigned short Privilege;
  /* 0x0012 */ char Padding_1205[2];
  /* 0x0014 */ unsigned long AuthFlags;
}; /* size: 0x0018 */

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeFlags;
  /* 0x0004 */ unsigned long FlagMask;
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Reserved;
} FILE_FS_PERSISTENT_VOLUME_INFORMATION, *PFILE_FS_PERSISTENT_VOLUME_INFORMATION; /* size: 0x0010 */

struct tagAXISINFOW
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ wchar_t axAxisName[16];
}; /* size: 0x0028 */

struct tagAXESLISTW
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOW axlAxisInfo[16];
}; /* size: 0x0288 */

struct tagENUMTEXTMETRICW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXW etmNewTextMetricEx;
  /* 0x0064 */ struct tagAXESLISTW etmAxesList;
}; /* size: 0x02ec */

struct HSAVEDUILANGUAGES__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IBindHttpSecurity
{
}; /* size: 0x0008 */

typedef struct _CrtMemState
{
  /* 0x0000 */ struct _CrtMemBlockHeader* pBlockHeader;
  /* 0x0008 */ unsigned __int64 lCounts[5];
  /* 0x0030 */ unsigned __int64 lSizes[5];
  /* 0x0058 */ unsigned __int64 lHighWaterCount;
  /* 0x0060 */ unsigned __int64 lTotalCount;
} CrtMemState, *PCrtMemState; /* size: 0x0068 */

typedef struct _HV_MINROOT_NUMA_LPS
{
  /* 0x0000 */ unsigned long NodeIndex;
  /* 0x0004 */ long Padding_1206;
  /* 0x0008 */ unsigned __int64 Mask[16];
} HV_MINROOT_NUMA_LPS, *PHV_MINROOT_NUMA_LPS; /* size: 0x0088 */

typedef struct _SYSTEM_HYPERVISOR_MINROOT_INFORMATION
{
  /* 0x0000 */ unsigned long NumProc;
  /* 0x0004 */ unsigned long RootProc;
  /* 0x0008 */ unsigned long RootProcNumaNodesSpecified;
  /* 0x000c */ unsigned short RootProcNumaNodes[64];
  /* 0x008c */ unsigned long RootProcPerCore;
  /* 0x0090 */ unsigned long RootProcPerNode;
  /* 0x0094 */ unsigned long RootProcNumaNodesLpsSpecified;
  /* 0x0098 */ struct _HV_MINROOT_NUMA_LPS RootProcNumaNodeLps[64];
} SYSTEM_HYPERVISOR_MINROOT_INFORMATION, *PSYSTEM_HYPERVISOR_MINROOT_INFORMATION; /* size: 0x2298 */

struct CM_EXTENDED_PARAMETER
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Type : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Reserved : 56; /* bit position: 8 */
  }; /* bitfield */
  union
  {
    /* 0x0008 */ unsigned __int64 ULong64;
    /* 0x0008 */ void* Pointer;
    /* 0x0008 */ unsigned __int64 Size;
    /* 0x0008 */ void* Handle;
    /* 0x0008 */ unsigned long ULong;
    struct
    {
      /* 0x0008 */ unsigned long AccessMask;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct HLSURF__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class Microsoft::WRL::ComPtr<RegistryVerb>
{
  /* 0x0000 */ class RegistryVerb* ptr_;
}; /* size: 0x0008 */

struct ISystemActivator
{
}; /* size: 0x0008 */

struct Windows::Storage::FileProperties::IMusicProperties
{
}; /* size: 0x0008 */

struct IActivationContextInfo
{
}; /* size: 0x0008 */

struct IAgileObject
{
}; /* size: 0x0008 */

struct tagGESTURENOTIFYSTRUCT
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTarget;
  /* 0x0010 */ struct tagPOINTS ptsLocation;
  /* 0x0014 */ unsigned long dwInstanceID;
}; /* size: 0x0018 */

typedef struct _FILE_LAYOUT_NAME_ENTRY
{
  /* 0x0000 */ unsigned long NextNameOffset;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ wchar_t FileName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_LAYOUT_NAME_ENTRY, *PFILE_LAYOUT_NAME_ENTRY; /* size: 0x0020 */

typedef struct _IMAGE_DVRT_ARM64X_FIXUP_RECORD
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short Offset : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short Type : 2; /* bit position: 12 */
    /* 0x0000 */ unsigned short Size : 2; /* bit position: 14 */
  }; /* bitfield */
} IMAGE_DVRT_ARM64X_FIXUP_RECORD, *PIMAGE_DVRT_ARM64X_FIXUP_RECORD; /* size: 0x0002 */

struct Windows::Storage::FileProperties::IVideoProperties
{
}; /* size: 0x0008 */

class ConversionClassIterator
{
  /* 0x0000 */ long Padding_1207[4];
  /* 0x0010 */ class wil::com_ptr_t<IMrtResourceManager,wil::err_returncode_policy> m_resourceManager;
  /* 0x0018 */ class wil::com_ptr_t<IResourceContext,wil::err_returncode_policy> m_resourceContext;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IComClassIterator> m_classIterator;
}; /* size: 0x0028 */

struct tagRPC_CALL_ATTRIBUTES_V3_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_1208;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_1209;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ enum tagRpcCallClientLocality IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_1210[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ unsigned long ClientIdentifierBufferLength;
  /* 0x0070 */ unsigned char* ClientIdentifier;
}; /* size: 0x0078 */

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ long Padding_1211;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long BufferSize;
  /* 0x0014 */ enum tagRpcLocalAddressFormat AddressFormat;
} RPC_CALL_LOCAL_ADDRESS_V1, *PRPC_CALL_LOCAL_ADDRESS_V1; /* size: 0x0018 */

struct COPYFILE2_MESSAGE
{
  /* 0x0000 */ enum _COPYFILE2_MESSAGE_TYPE Type;
  /* 0x0004 */ unsigned long dwPadding;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwReserved;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliChunkNumber;
        /* 0x0028 */ union _ULARGE_INTEGER uliChunkSize;
        /* 0x0030 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliTotalFileSize;
      } /* size: 0x0038 */ ChunkStarted;
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwFlags;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliChunkNumber;
        /* 0x0028 */ union _ULARGE_INTEGER uliChunkSize;
        /* 0x0030 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliStreamBytesTransferred;
        /* 0x0040 */ union _ULARGE_INTEGER uliTotalFileSize;
        /* 0x0048 */ union _ULARGE_INTEGER uliTotalBytesTransferred;
      } /* size: 0x0048 */ ChunkFinished;
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwReserved;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0028 */ union _ULARGE_INTEGER uliTotalFileSize;
      } /* size: 0x0028 */ StreamStarted;
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwReserved;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0028 */ union _ULARGE_INTEGER uliStreamBytesTransferred;
        /* 0x0030 */ union _ULARGE_INTEGER uliTotalFileSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliTotalBytesTransferred;
      } /* size: 0x0038 */ StreamFinished;
      struct
      {
        /* 0x0008 */ unsigned long dwReserved;
      } /* size: 0x0004 */ PollContinue;
      struct
      {
        /* 0x0008 */ enum _COPYFILE2_COPY_PHASE CopyPhase;
        /* 0x000c */ unsigned long dwStreamNumber;
        /* 0x0010 */ HRESULT hrFailure;
        /* 0x0014 */ unsigned long dwReserved;
        /* 0x0018 */ union _ULARGE_INTEGER uliChunkNumber;
        /* 0x0020 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0028 */ union _ULARGE_INTEGER uliStreamBytesTransferred;
        /* 0x0030 */ union _ULARGE_INTEGER uliTotalFileSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliTotalBytesTransferred;
      } /* size: 0x0038 */ Error;
    }; /* size: 0x0048 */
  } /* size: 0x0048 */ Info;
}; /* size: 0x0050 */

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO
{
  /* 0x0000 */ unsigned long UniqueProcessId;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 Buffer;
} RTL_QUERY_DEBUG_INFORMATION_INFO, *PRTL_QUERY_DEBUG_INFORMATION_INFO; /* size: 0x0010 */

typedef struct _NON_PAGED_DEBUG_INFO
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned short Machine;
  /* 0x000a */ unsigned short Characteristics;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned __int64 ImageBase;
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO; /* size: 0x0020 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W
{
  /* 0x0000 */ void* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1212;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
  /* 0x0028 */ void* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_1213;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W; /* size: 0x0040 */

struct tagNCCALCSIZE_PARAMS
{
  /* 0x0000 */ struct tagRECT rgrc[3];
  /* 0x0030 */ struct tagWINDOWPOS* lppos;
}; /* size: 0x0038 */

typedef struct _CRYPT_ECC_CMS_SHARED_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EntityUInfo;
  /* 0x0028 */ unsigned char rgbSuppPubInfo[4];
  /* 0x002c */ long __PADDING__[1];
} CRYPT_ECC_CMS_SHARED_INFO, *PCRYPT_ECC_CMS_SHARED_INFO; /* size: 0x0030 */

struct tagWINDOWPOS
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ int cx;
  /* 0x001c */ int cy;
  /* 0x0020 */ unsigned int flags;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct IExternalConnection
{
}; /* size: 0x0008 */

struct Windows::Storage::FileProperties::IImageProperties
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ConversionClassIterator> >;

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DriverName;
  /* 0x0010 */ void* ImageAddress;
  /* 0x0018 */ void* SectionPointer;
  /* 0x0020 */ void* EntryPoint;
  /* 0x0028 */ struct _IMAGE_EXPORT_DIRECTORY* ExportSectionPointer;
  /* 0x0030 */ unsigned long ImageLength;
  /* 0x0034 */ long __PADDING__[1];
} SYSTEM_GDI_DRIVER_INFORMATION, *PSYSTEM_GDI_DRIVER_INFORMATION; /* size: 0x0038 */

typedef struct _POWER_PLATFORM_INFORMATION
{
  /* 0x0000 */ unsigned char AoAc;
} POWER_PLATFORM_INFORMATION, *PPOWER_PLATFORM_INFORMATION; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_REDIRECTION_TRUST_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY BlockUntrustedRedirections;
} RTL_IMAGE_MITIGATION_REDIRECTION_TRUST_POLICY, *PRTL_IMAGE_MITIGATION_REDIRECTION_TRUST_POLICY; /* size: 0x0008 */

typedef struct _ALPC_PORT_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackObject;
  /* 0x0008 */ void* Context;
} ALPC_PORT_CALLBACK_INFORMATION, *PALPC_PORT_CALLBACK_INFORMATION; /* size: 0x0010 */

struct tagINPUT_MESSAGE_SOURCE
{
  /* 0x0000 */ enum tagINPUT_MESSAGE_DEVICE_TYPE deviceType;
  /* 0x0004 */ enum tagINPUT_MESSAGE_ORIGIN_ID originId;
}; /* size: 0x0008 */

struct Windows::Storage::FileProperties::IDocumentProperties
{
}; /* size: 0x0008 */

typedef struct _COVERAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long CoverageType;
  /* 0x0008 */ unsigned char MD5Hash[16];
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned long CoverageVectorSize;
  /* 0x0020 */ unsigned long CoverageVectorOffset;
  /* 0x0024 */ unsigned long ExtraDataOffset;
} COVERAGE_SECTION_HEADER, *PCOVERAGE_SECTION_HEADER; /* size: 0x0028 */

struct tagTOUCH_HIT_TESTING_INPUT
{
  /* 0x0000 */ unsigned int pointerId;
  /* 0x0004 */ struct tagPOINT point;
  /* 0x000c */ struct tagRECT boundingBox;
  /* 0x001c */ struct tagRECT nonOccludedBoundingBox;
  /* 0x002c */ unsigned int orientation;
}; /* size: 0x0030 */

struct Microsoft::WRL::ErrorPropagationPolicyTraits<2>
{
}; /* size: 0x0001 */

struct tagTOGGLEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

struct Windows::Storage::FileProperties::IBasicProperties
{
}; /* size: 0x0008 */

struct IComCatalog2Internal
{
}; /* size: 0x0008 */

struct IInsertableCandidate
{
}; /* size: 0x0008 */

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long ConcurrencyCount;
  /* 0x0010 */ unsigned long AttributeFlags;
  /* 0x0014 */ long __PADDING__[1];
} ALPC_PORT_COMPLETION_LIST_INFORMATION, *PALPC_PORT_COMPLETION_LIST_INFORMATION; /* size: 0x0018 */

typedef struct _TOKEN_PRIVILEGES
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ struct _LUID_AND_ATTRIBUTES Privileges[1];
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES; /* size: 0x0010 */

struct Windows::Storage::Streams::IRandomAccessStreamWithContentType
{
}; /* size: 0x0008 */

struct IAsyncManager
{
}; /* size: 0x0008 */

struct IXMLDOMEntity
{
}; /* size: 0x0008 */

struct MFT_ENUM_DATA_V1
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
  /* 0x0018 */ unsigned short MinMajorVersion;
  /* 0x001a */ unsigned short MaxMajorVersion;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct ICall
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::BulkAccess::FileInformation *,Windows::Storage::BulkAccess::IStorageItemInformation *>,1>
{
}; /* size: 0x0008 */

struct tagDRAWITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemAction;
  /* 0x0010 */ unsigned int itemState;
  /* 0x0014 */ long Padding_1214;
  /* 0x0018 */ struct HWND__* hwndItem;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ struct tagRECT rcItem;
  /* 0x0038 */ unsigned __int64 itemData;
}; /* size: 0x0040 */

class CAggId;

struct wistd::unique_ptr<Microsoft::WRL::ComPtr<IUnknown> [0],wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]> >::_CheckArrayPointerConversion<Microsoft::WRL::ComPtr<IUnknown> *>
{
}; /* size: 0x0001 */

typedef struct _CERT_REVOCATION_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1215;
  /* 0x0008 */ const struct _CERT_CONTEXT* pIssuerCert;
  /* 0x0010 */ unsigned long cCertStore;
  /* 0x0014 */ long Padding_1216;
  /* 0x0018 */ void** rgCertStore;
  /* 0x0020 */ void* hCrlStore;
  /* 0x0028 */ struct _FILETIME* pftTimeToUse;
} CERT_REVOCATION_PARA, *PCERT_REVOCATION_PARA; /* size: 0x0030 */

struct IXMLElementCollection
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]>,1,1>
{
}; /* size: 0x0001 */

struct IAddrTrackingControl
{
}; /* size: 0x0008 */

struct IInternetSecurityManagerEx2
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION_V2
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long AllFlags : 24; /* bit position: 8 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long Dummy : 8; /* bit position: 0 */
        /* 0x0000 */ unsigned long SingleDpcTimeLimitPresent : 1; /* bit position: 8 */
        /* 0x0000 */ unsigned long CumulativeDpcTimeLimitPresent : 1; /* bit position: 9 */
        /* 0x0000 */ unsigned long SingleDpcSoftTimeLimitPresent : 1; /* bit position: 10 */
        /* 0x0000 */ unsigned long CumulativeDpcSoftTimeLimitPresent : 1; /* bit position: 11 */
        /* 0x0000 */ unsigned long SingleDpcProfileThresholdPresent : 1; /* bit position: 12 */
        /* 0x0000 */ unsigned long CumulativeDpcProfileThresholdPresent : 1; /* bit position: 13 */
        /* 0x0000 */ unsigned long ProfileBufferSizePresent : 1; /* bit position: 14 */
        /* 0x0000 */ unsigned long Reserved : 17; /* bit position: 15 */
      }; /* bitfield */
    } /* size: 0x0004 */ Flags;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SingleDpcTimeLimitMs;
  /* 0x0008 */ unsigned long CumulativeDpcTimeLimitMs;
  /* 0x000c */ unsigned long SingleDpcSoftTimeLimitMs;
  /* 0x0010 */ unsigned long CumulativeDpcSoftTimeLimitMs;
  /* 0x0014 */ unsigned long SingleDpcProfileThresholdMs;
  /* 0x0018 */ unsigned long CumulativeDpcProfileThresholdMs;
  /* 0x001c */ unsigned long ProfileBufferSizeBytes;
} SYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION_V2, *PSYSTEM_DPC_WATCHDOG_CONFIGURATION_INFORMATION_V2; /* size: 0x0020 */

struct IMarshal2
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>
{
}; /* size: 0x0008 */

typedef struct _IMAGE_FUNCTION_OVERRIDE_HEADER
{
  /* 0x0000 */ unsigned long FuncOverrideSize;
} IMAGE_FUNCTION_OVERRIDE_HEADER, *PIMAGE_FUNCTION_OVERRIDE_HEADER; /* size: 0x0004 */

typedef struct _CSV_QUERY_REDIRECT_STATE
{
  /* 0x0000 */ unsigned long MdsNodeId;
  /* 0x0004 */ unsigned long DsNodeId;
  /* 0x0008 */ unsigned char FileRedirected;
  /* 0x0009 */ char __PADDING__[3];
} CSV_QUERY_REDIRECT_STATE, *PCSV_QUERY_REDIRECT_STATE; /* size: 0x000c */

struct MachineGlobalObjectTableRegistrationToken__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct wistd::default_delete<Microsoft::WRL::ComPtr<IUnknown> [0]>::_EnableIfConvertible<Microsoft::WRL::ComPtr<IUnknown> >
{
}; /* size: 0x0001 */

typedef struct _FILE_PREFETCH_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH_EX, *PFILE_PREFETCH_EX; /* size: 0x0018 */

struct tagOBJECTDESCRIPTOR
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long dwDrawAspect;
  /* 0x0018 */ struct tagSIZE sizel;
  /* 0x0020 */ struct _POINTL pointl;
  /* 0x0028 */ unsigned long dwStatus;
  /* 0x002c */ unsigned long dwFullUserTypeName;
  /* 0x0030 */ unsigned long dwSrcOfCopy;
}; /* size: 0x0034 */

struct IInternetProtocolSink
{
}; /* size: 0x0008 */

typedef struct _CERT_BASIC_CONSTRAINTS_INFO
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB SubjectType;
  /* 0x0018 */ int fPathLenConstraint;
  /* 0x001c */ unsigned long dwPathLenConstraint;
  /* 0x0020 */ unsigned long cSubtreesConstraint;
  /* 0x0024 */ long Padding_1217;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* rgSubtreesConstraint;
} CERT_BASIC_CONSTRAINTS_INFO, *PCERT_BASIC_CONSTRAINTS_INFO; /* size: 0x0030 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::BulkAccess::IStorageItemInformation *,1>
{
}; /* size: 0x0008 */

typedef struct _WIM_PROVIDER_START_INTEGRITY
{
  /* 0x0000 */ union _LARGE_INTEGER DataSourceId;
} WIM_PROVIDER_START_INTEGRITY, *PWIM_PROVIDER_START_INTEGRITY; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageLibraryChange *,Windows::Storage::IStorageLibraryChange *>,1>
{
}; /* size: 0x0008 */

typedef struct _wireSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ long Padding_1218;
  /* 0x0010 */ struct _wireSAFEARRAY_UNION uArrayStructs;
  /* 0x0038 */ struct tagSAFEARRAYBOUND rgsabound[1];
} wireSAFEARRAY, *PwireSAFEARRAY; /* size: 0x0040 */

struct IClassClassicInfo
{
}; /* size: 0x0008 */

struct IXMLDOMDocumentFragment
{
}; /* size: 0x0008 */

typedef struct _QUERY_CACHED_RUNS_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Min;
        /* 0x000c */ unsigned long Max;
      } /* size: 0x0008 */ BinRange;
      struct
      {
        /* 0x0008 */ __int64 Min;
        /* 0x0010 */ __int64 Max;
      } /* size: 0x0010 */ LcnRange;
      struct
      {
        /* 0x0008 */ __int64 Min;
        /* 0x0010 */ __int64 Max;
      } /* size: 0x0010 */ LengthRange;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ RunFilter;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned long Min;
        /* 0x001c */ unsigned long Max;
      } /* size: 0x0008 */ BinRange;
      struct
      {
        /* 0x0018 */ __int64 Min;
        /* 0x0020 */ __int64 Max;
      } /* size: 0x0010 */ LengthRange;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ BinFilter;
} QUERY_CACHED_RUNS_INPUT, *PQUERY_CACHED_RUNS_INPUT; /* size: 0x0028 */

struct wil::details::verify_single_flag_helper<1>
{
  /* 0x0000 */ const unsigned __int64 value;
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

typedef struct _wireBRECORD
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ struct IRecordInfo* pRecInfo;
  /* 0x0010 */ unsigned char* pRecord;
} wireBRECORD, *PwireBRECORD; /* size: 0x0018 */

typedef struct _PSINJECTDATA
{
  /* 0x0000 */ unsigned long DataBytes;
  /* 0x0004 */ unsigned short InjectionPoint;
  /* 0x0006 */ unsigned short PageNumber;
} PSINJECTDATA, *PPSINJECTDATA; /* size: 0x0008 */

typedef struct _RTL_UMS_SCHEDULER_STARTUP_INFO
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_1219;
  /* 0x0008 */ struct _RTL_UMS_COMPLETION_LIST* CompletionList;
  /* 0x0010 */ void* SchedulerProc /* function */;
  /* 0x0018 */ void* SchedulerParam;
} RTL_UMS_SCHEDULER_STARTUP_INFO, *PRTL_UMS_SCHEDULER_STARTUP_INFO; /* size: 0x0020 */

typedef struct _CRYPT_KEY_PROV_INFO
{
  /* 0x0000 */ wchar_t* pwszContainerName;
  /* 0x0008 */ wchar_t* pwszProvName;
  /* 0x0010 */ unsigned long dwProvType;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ unsigned long cProvParam;
  /* 0x001c */ long Padding_1220;
  /* 0x0020 */ struct _CRYPT_KEY_PROV_PARAM* rgProvParam;
  /* 0x0028 */ unsigned long dwKeySpec;
  /* 0x002c */ long __PADDING__[1];
} CRYPT_KEY_PROV_INFO, *PCRYPT_KEY_PROV_INFO; /* size: 0x0030 */

class Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs;

class AdHocInterceptorForwarders<IOleWindow,IOleWindow>::GetWindow::__l2::<lambda_600bd29f17b036b93b7550065426cbdf>
{
  /* 0x0000 */ struct HWND__** phwnd;
}; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_FUNCTION_CONFIG, *PCRYPT_CONTEXT_FUNCTION_CONFIG; /* size: 0x0008 */

struct Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *>;

struct Windows::Foundation::IEventHandler_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *,Windows::Foundation::Diagnostics::ITracingStatusChangedEventArgs *> >
{
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::SetObjectRects::__l2::<lambda_5f36165614e701fb976ba4b91ba80c82>
{
  /* 0x0000 */ const struct tagRECT* lprcPosRect;
  /* 0x0008 */ const struct tagRECT* lprcClipRect;
}; /* size: 0x0010 */

struct Windows::Foundation::IEventHandler<Windows::Foundation::Diagnostics::TracingStatusChangedEventArgs *>
{
}; /* size: 0x0008 */

struct ITypeChangeEvents
{
}; /* size: 0x0008 */

struct Windows::Foundation::Diagnostics::IAsyncCausalityTracerStatics
{
}; /* size: 0x0008 */

struct tagCANDIDATELIST
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ unsigned long dwCount;
  /* 0x000c */ unsigned long dwSelection;
  /* 0x0010 */ unsigned long dwPageStart;
  /* 0x0014 */ unsigned long dwPageSize;
  /* 0x0018 */ unsigned long dwOffset[1];
}; /* size: 0x001c */

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION
{
  /* 0x0000 */ unsigned long LimitFlags;
  /* 0x0004 */ unsigned long ViolationLimitFlags;
  /* 0x0008 */ unsigned __int64 IoReadBytes;
  /* 0x0010 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0018 */ unsigned __int64 IoWriteBytes;
  /* 0x0020 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0028 */ union _LARGE_INTEGER PerJobUserTime;
  /* 0x0030 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0038 */ unsigned __int64 JobMemory;
  /* 0x0040 */ unsigned __int64 JobMemoryLimit;
  /* 0x0048 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  /* 0x004c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlToleranceLimit;
} JOBOBJECT_LIMIT_VIOLATION_INFORMATION, *PJOBOBJECT_LIMIT_VIOLATION_INFORMATION; /* size: 0x0050 */

struct tagRID_DEVICE_INFO_MOUSE
{
  /* 0x0000 */ unsigned long dwId;
  /* 0x0004 */ unsigned long dwNumberOfButtons;
  /* 0x0008 */ unsigned long dwSampleRate;
  /* 0x000c */ int fHasHorizontalWheel;
}; /* size: 0x0010 */

struct IMonikerProp
{
}; /* size: 0x0008 */

struct tagEMRRESIZEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long cEntries;
}; /* size: 0x0010 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::UIDeactivate::__l2::<lambda_f9b153e28317f47b008789014cb39e3f>
{
}; /* size: 0x0001 */

struct tagFontPropSetTable
{
  /* 0x0000 */ const wchar_t* lpname;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char Padding_1221[2];
  /* 0x000c */ long memid;
}; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ struct _UNICODE_STRING Reference;
  /* 0x0028 */ unsigned char Register;
  /* 0x0029 */ char Padding_1222[7];
  /* 0x0030 */ wchar_t* SymLink;
  /* 0x0038 */ unsigned long SymLinkLength;
  /* 0x003c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA, *PPLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA; /* size: 0x0040 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION; /* size: 0x0028 */

struct IReplaceClassInfo
{
}; /* size: 0x0008 */

struct tagMOUSEHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned int wHitTestCode;
  /* 0x0014 */ long Padding_1223;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

typedef union _PROCESS_MEMORY_ALLOCATION_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TopDown : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MEMORY_ALLOCATION_MODE, *PPROCESS_MEMORY_ALLOCATION_MODE; /* size: 0x0004 */

typedef struct _WNF_DELIVERY_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 SubscriptionId;
  /* 0x0008 */ struct _WNF_STATE_NAME StateName;
  /* 0x0010 */ unsigned long ChangeStamp;
  /* 0x0014 */ unsigned long StateDataSize;
  /* 0x0018 */ unsigned long EventMask;
  /* 0x001c */ struct _WNF_TYPE_ID TypeId;
  /* 0x002c */ unsigned long StateDataOffset;
} WNF_DELIVERY_DESCRIPTOR, *PWNF_DELIVERY_DESCRIPTOR; /* size: 0x0030 */

typedef struct _IMAGE_FUNCTION_ENTRY64
{
  /* 0x0000 */ unsigned __int64 StartingAddress;
  /* 0x0008 */ unsigned __int64 EndingAddress;
  union
  {
    /* 0x0010 */ unsigned __int64 EndOfPrologue;
    /* 0x0010 */ unsigned __int64 UnwindInfoAddress;
  }; /* size: 0x0008 */
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64; /* size: 0x0018 */

struct HSPRITE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _KCRM_PROTOCOL_BLOB
{
  /* 0x0000 */ struct _GUID ProtocolId;
  /* 0x0010 */ unsigned long StaticInfoLength;
  /* 0x0014 */ unsigned long TransactionIdInfoLength;
  /* 0x0018 */ unsigned long Unused1;
  /* 0x001c */ unsigned long Unused2;
} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB; /* size: 0x0020 */

struct HHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _KCRM_TRANSACTION_BLOB
{
  /* 0x0000 */ struct _GUID UOW;
  /* 0x0010 */ struct _GUID TmIdentity;
  /* 0x0020 */ unsigned long IsolationLevel;
  /* 0x0024 */ unsigned long IsolationFlags;
  /* 0x0028 */ unsigned long Timeout;
  /* 0x002c */ wchar_t Description[64];
} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB; /* size: 0x00ac */

struct Windows::Foundation::IAsyncOperationCompletedHandler<Windows::Foundation::IAsyncAction *>
{
}; /* size: 0x0008 */

class InitializeTracing::__l2::<lambda_0940cd69598ba54cee9560fa9ab83a43>
{
}; /* size: 0x0001 */

typedef struct _FSCTL_OFFLOAD_READ_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long TokenTimeToLive;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned __int64 FileOffset;
  /* 0x0018 */ unsigned __int64 CopyLength;
} FSCTL_OFFLOAD_READ_INPUT, *PFSCTL_OFFLOAD_READ_INPUT; /* size: 0x0020 */

typedef struct _OCSP_SIGNED_REQUEST_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _OCSP_SIGNATURE_INFO* pOptionalSignatureInfo;
} OCSP_SIGNED_REQUEST_INFO, *POCSP_SIGNED_REQUEST_INFO; /* size: 0x0018 */

struct IOverrideTargetContext
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageFolder *,1>
{
}; /* size: 0x0008 */

struct IInternetZoneManager
{
}; /* size: 0x0008 */

struct IConversionClassIterator
{
}; /* size: 0x0008 */

struct NTFS_FILE_RECORD_OUTPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
  /* 0x0008 */ unsigned long FileRecordLength;
  /* 0x000c */ unsigned char FileRecordBuffer[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFolder *,1>
{
}; /* size: 0x0008 */

typedef struct _CERT_POLICY_QUALIFIER_INFO
{
  /* 0x0000 */ char* pszPolicyQualifierId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Qualifier;
} CERT_POLICY_QUALIFIER_INFO, *PCERT_POLICY_QUALIFIER_INFO; /* size: 0x0018 */

typedef struct _GRADIENT_RECT
{
  /* 0x0000 */ unsigned long UpperLeft;
  /* 0x0004 */ unsigned long LowerRight;
} GRADIENT_RECT, *PGRADIENT_RECT; /* size: 0x0008 */

struct tagENUMLOGFONTEXA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned char elfScript[32];
}; /* size: 0x00bc */

struct tagENUMLOGFONTEXDVA
{
  /* 0x0000 */ struct tagENUMLOGFONTEXA elfEnumLogfontEx;
  /* 0x00bc */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x0104 */

struct tagSERIALKEYSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszActivePort;
  /* 0x0010 */ char* lpszPort;
  /* 0x0018 */ unsigned int iBaudRate;
  /* 0x001c */ unsigned int iPortState;
  /* 0x0020 */ unsigned int iActive;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct tagRPC_CALL_ATTRIBUTES_V1_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_1224;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_1225;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct Windows::Foundation::Collections::IVector_impl<Windows::Storage::IStorageFile *,1>
{
}; /* size: 0x0008 */

typedef struct _EXTENDED_CREATE_INFORMATION
{
  /* 0x0000 */ __int64 ExtendedCreateFlags;
  /* 0x0008 */ void* EaBuffer;
  /* 0x0010 */ unsigned long EaLength;
  /* 0x0014 */ long __PADDING__[1];
} EXTENDED_CREATE_INFORMATION, *PEXTENDED_CREATE_INFORMATION; /* size: 0x0018 */

struct _SC_NOTIFICATION_REGISTRATION;

typedef struct _SL_APPX_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char HashedName[32];
  /* 0x0020 */ unsigned __int64 Expiration;
  /* 0x0028 */ unsigned long DataSize;
  /* 0x002c */ unsigned char Data[1];
  /* 0x002d */ char __PADDING__[3];
} SL_APPX_CACHE_VALUE_DESCRIPTOR, *PSL_APPX_CACHE_VALUE_DESCRIPTOR; /* size: 0x0030 */

typedef struct _SL_APPX_CACHE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long DataSize;
  /* 0x000c */ long Padding_1226;
  /* 0x0010 */ unsigned __int64 DataCheckSum;
  /* 0x0018 */ struct _SL_APPX_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_APPX_CACHE, *PSL_APPX_CACHE; /* size: 0x0048 */

typedef struct _DECRYPTION_STATUS_BUFFER
{
  /* 0x0000 */ unsigned char NoEncryptedStreams;
} DECRYPTION_STATUS_BUFFER, *PDECRYPTION_STATUS_BUFFER; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::IStorageFile *,1>
{
}; /* size: 0x0008 */

typedef struct _REFS_SET_VOLUME_DEDUP_INFO_INPUT_BUFFER
{
  /* 0x0000 */ unsigned char Enable;
} REFS_SET_VOLUME_DEDUP_INFO_INPUT_BUFFER, *PREFS_SET_VOLUME_DEDUP_INFO_INPUT_BUFFER; /* size: 0x0001 */

struct tagCBT_CREATEWNDW
{
  /* 0x0000 */ struct tagCREATESTRUCTW* lpcs;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0010 */

struct IOleWindow
{
}; /* size: 0x0008 */

typedef struct _LDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ struct LIST_ENTRY32 InMemoryOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY32 InInitializationOrderLinks;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short TlsIndex;
  union
  {
    /* 0x003c */ struct LIST_ENTRY32 HashLinks;
    struct
    {
      /* 0x003c */ unsigned long SectionPointer;
      /* 0x0040 */ unsigned long CheckSum;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0044 */ unsigned long TimeDateStamp;
    /* 0x0044 */ unsigned long LoadedImports;
  }; /* size: 0x0004 */
} LDR_DATA_TABLE_ENTRY32, *PLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

typedef struct _RPC_SECURITY_QOS_V3_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1227;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
} RPC_SECURITY_QOS_V3_A, *PRPC_SECURITY_QOS_V3_A; /* size: 0x0028 */

struct Windows::Storage::IStorageItem
{
}; /* size: 0x0008 */

struct tagContextProperty
{
  /* 0x0000 */ struct _GUID policyId;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ long Padding_1228;
  /* 0x0018 */ struct IUnknown* pUnk;
}; /* size: 0x0020 */

struct IInterceptorBase
{
}; /* size: 0x0008 */

struct ICallIndirect
{
}; /* size: 0x0008 */

typedef struct _FILE_DISPOSITION_INFO
{
  /* 0x0000 */ unsigned char DeleteFileW;
} FILE_DISPOSITION_INFO, *PFILE_DISPOSITION_INFO; /* size: 0x0001 */

typedef struct _FILE_LAYOUT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long NextFileOffset;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long FileAttributes;
  /* 0x0010 */ unsigned __int64 FileReferenceNumber;
  /* 0x0018 */ unsigned long FirstNameOffset;
  /* 0x001c */ unsigned long FirstStreamOffset;
  /* 0x0020 */ unsigned long ExtraInfoOffset;
  /* 0x0024 */ unsigned long ExtraInfoLength;
} FILE_LAYOUT_ENTRY, *PFILE_LAYOUT_ENTRY; /* size: 0x0028 */

typedef struct _SYSTEM_VHD_BOOT_INFORMATION
{
  /* 0x0000 */ unsigned char OsDiskIsVhd;
  /* 0x0001 */ char Padding_1229[3];
  /* 0x0004 */ unsigned long OsVhdFilePathOffset;
  /* 0x0008 */ wchar_t OsVhdParentVolume[1];
  /* 0x000a */ char __PADDING__[2];
} SYSTEM_VHD_BOOT_INFORMATION, *PSYSTEM_VHD_BOOT_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_SINGLE_MODULE_INFORMATION
{
  /* 0x0000 */ void* TargetModuleAddress;
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION_EX ExInfo;
} SYSTEM_SINGLE_MODULE_INFORMATION, *PSYSTEM_SINGLE_MODULE_INFORMATION; /* size: 0x0148 */

typedef struct _RDR_CALLOUT_STATE
{
  /* 0x0000 */ long LastError;
  /* 0x0004 */ long Padding_1230;
  /* 0x0008 */ void* LastEEInfo;
  /* 0x0010 */ enum _RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;
  /* 0x0014 */ long Padding_1231;
  /* 0x0018 */ unsigned short* ServerName;
  /* 0x0020 */ unsigned short* ServerPort;
  /* 0x0028 */ unsigned short* RemoteUser;
  /* 0x0030 */ unsigned short* AuthType;
  /* 0x0038 */ unsigned char ResourceTypePresent;
  /* 0x0039 */ unsigned char SessionIdPresent;
  /* 0x003a */ unsigned char InterfacePresent;
  /* 0x003b */ char Padding_1232;
  /* 0x003c */ struct _GUID ResourceType;
  /* 0x004c */ struct _GUID SessionId;
  /* 0x005c */ struct _RPC_SYNTAX_IDENTIFIER Interface;
  /* 0x0070 */ void* CertContext;
} RDR_CALLOUT_STATE, *PRDR_CALLOUT_STATE; /* size: 0x0078 */

typedef struct _FILE_NUMA_NODE_INFORMATION
{
  /* 0x0000 */ unsigned short NodeNumber;
} FILE_NUMA_NODE_INFORMATION, *PFILE_NUMA_NODE_INFORMATION; /* size: 0x0002 */

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE
{
  /* 0x0000 */ struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE* pNoticeReference;
  /* 0x0008 */ wchar_t* pszDisplayText;
} CERT_POLICY_QUALIFIER_USER_NOTICE, *PCERT_POLICY_QUALIFIER_USER_NOTICE; /* size: 0x0010 */

typedef struct _CM_MCA_POS_DATA
{
  /* 0x0000 */ unsigned short AdapterId;
  /* 0x0002 */ unsigned char PosData1;
  /* 0x0003 */ unsigned char PosData2;
  /* 0x0004 */ unsigned char PosData3;
  /* 0x0005 */ unsigned char PosData4;
} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA; /* size: 0x0006 */

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
} CRYPT_KEY_VERIFY_MESSAGE_PARA, *PCRYPT_KEY_VERIFY_MESSAGE_PARA; /* size: 0x0010 */

struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
}; /* size: 0x00b8 */

struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>
{
  /* 0x0000 */ union _SLIST_HEADER g_listHead;
  /* 0x0010 */ char __PADDING__[4294967281];
}; /* size: 0x0001 */

typedef struct _CRYPT_OID_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1233;
  /* 0x0008 */ const char* pszOID;
  /* 0x0010 */ const wchar_t* pwszName;
  /* 0x0018 */ unsigned long dwGroupId;
  union
  {
    /* 0x001c */ unsigned long dwValue;
    /* 0x001c */ unsigned int Algid;
    /* 0x001c */ unsigned long dwLength;
  }; /* size: 0x0004 */
  /* 0x0020 */ struct _CRYPTOAPI_BLOB ExtraInfo;
} CRYPT_OID_INFO, *PCRYPT_OID_INFO; /* size: 0x0030 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::Storage::IStorageItem *,1>
{
}; /* size: 0x0008 */

typedef struct _ALPC_HANDLE_ATTR32
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved0 : 16; /* bit position: 0 */
      /* 0x0000 */ unsigned long SameAccess : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long SameAttributes : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long Indirect : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long Inherit : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long Reserved1 : 12; /* bit position: 20 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long Handle;
  /* 0x0008 */ unsigned long ObjectType;
  union
  {
    /* 0x000c */ unsigned long DesiredAccess;
    /* 0x000c */ unsigned long GrantedAccess;
  }; /* size: 0x0004 */
} ALPC_HANDLE_ATTR32, *PALPC_HANDLE_ATTR32; /* size: 0x0010 */

struct tagORPCTHAT
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ long Padding_1234;
  /* 0x0008 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0010 */

struct tagINPUT_INJECTION_VALUE
{
  /* 0x0000 */ unsigned short page;
  /* 0x0002 */ unsigned short usage;
  /* 0x0004 */ int value;
  /* 0x0008 */ unsigned short index;
  /* 0x000a */ char __PADDING__[2];
}; /* size: 0x000c */

typedef struct _LMR_QUERY_SESSION_INFO
{
  /* 0x0000 */ unsigned __int64 SessionId;
} LMR_QUERY_SESSION_INFO, *PLMR_QUERY_SESSION_INFO; /* size: 0x0008 */

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1235;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldSecurityDescriptorLength;
  /* 0x002c */ long Padding_1236;
  /* 0x0030 */ void* OldSecurityDescriptor;
  /* 0x0038 */ unsigned long NewSecurityDescriptorLength;
  /* 0x003c */ long Padding_1237;
  /* 0x0040 */ void* NewSecurityDescriptor;
} JOURNAL_SET_KEY_SECURITY_INFORMATION, *PJOURNAL_SET_KEY_SECURITY_INFORMATION; /* size: 0x0048 */

struct HDROP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING
{
  /* 0x0000 */ const void* Data;
  /* 0x0008 */ unsigned long AssemblyRosterIndex;
  /* 0x000c */ long Padding_1238;
  /* 0x0010 */ void* ResolutionContext;
  /* 0x0018 */ struct _UNICODE_STRING Root;
  /* 0x0028 */ unsigned char KnownRoot;
  /* 0x0029 */ char Padding_1239[7];
  /* 0x0030 */ unsigned __int64 RootCount;
  /* 0x0038 */ unsigned char CancelResolution;
  /* 0x0039 */ char __PADDING__[7];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING; /* size: 0x0040 */

typedef struct _FILESYSTEM_STATISTICS
{
  /* 0x0000 */ unsigned short FileSystemType;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ unsigned long SizeOfCompleteStructure;
  /* 0x0008 */ unsigned long UserFileReads;
  /* 0x000c */ unsigned long UserFileReadBytes;
  /* 0x0010 */ unsigned long UserDiskReads;
  /* 0x0014 */ unsigned long UserFileWrites;
  /* 0x0018 */ unsigned long UserFileWriteBytes;
  /* 0x001c */ unsigned long UserDiskWrites;
  /* 0x0020 */ unsigned long MetaDataReads;
  /* 0x0024 */ unsigned long MetaDataReadBytes;
  /* 0x0028 */ unsigned long MetaDataDiskReads;
  /* 0x002c */ unsigned long MetaDataWrites;
  /* 0x0030 */ unsigned long MetaDataWriteBytes;
  /* 0x0034 */ unsigned long MetaDataDiskWrites;
} FILESYSTEM_STATISTICS, *PFILESYSTEM_STATISTICS; /* size: 0x0038 */

struct IEnumVARIANT
{
}; /* size: 0x0008 */

typedef struct _RTL_AVL_TABLE
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedRoot;
  /* 0x0020 */ void* OrderedPointer;
  /* 0x0028 */ unsigned long WhichOrderedElement;
  /* 0x002c */ unsigned long NumberGenericTableElements;
  /* 0x0030 */ unsigned long DepthOfTree;
  /* 0x0034 */ long Padding_1240;
  /* 0x0038 */ struct _RTL_BALANCED_LINKS* RestartKey;
  /* 0x0040 */ unsigned long DeleteCount;
  /* 0x0044 */ long Padding_1241;
  /* 0x0048 */ void* CompareRoutine /* function */;
  /* 0x0050 */ void* AllocateRoutine /* function */;
  /* 0x0058 */ void* FreeRoutine /* function */;
  /* 0x0060 */ void* TableContext;
} RTL_AVL_TABLE, *PRTL_AVL_TABLE; /* size: 0x0068 */

typedef struct _FS_BPIO_OUTPUT
{
  /* 0x0000 */ enum _FS_BPIO_OPERATIONS Operation;
  /* 0x0004 */ enum _FS_BPIO_OUTFLAGS OutFlags;
  /* 0x0008 */ unsigned __int64 Reserved1;
  /* 0x0010 */ unsigned __int64 Reserved2;
  union
  {
    /* 0x0018 */ struct _FS_BPIO_RESULTS Enable;
    /* 0x0018 */ struct _FS_BPIO_RESULTS Query;
    /* 0x0018 */ struct _FS_BPIO_RESULTS VolumeStackResume;
    /* 0x0018 */ struct _FS_BPIO_RESULTS StreamResume;
    struct
    {
      /* 0x0018 */ struct _FS_BPIO_INFO GetInfo;
      /* 0x0060 */ long __PADDING__[64];
    }; /* size: 0x0148 */
  }; /* size: 0x0148 */
} FS_BPIO_OUTPUT, *PFS_BPIO_OUTPUT; /* size: 0x0160 */

typedef struct _CMSG_CMS_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1242;
  /* 0x0008 */ struct _CERT_ID SignerId;
  /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0060 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0070 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0080 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_CMS_SIGNER_INFO, *PCMSG_CMS_SIGNER_INFO; /* size: 0x0090 */

struct tagMOUSEHOOKSTRUCTEX
{
  /* 0x0000 */ long Padding_1243[8];
  /* 0x0020 */ unsigned long mouseData;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _MESSAGE_RESOURCE_DATA
{
  /* 0x0000 */ unsigned long NumberOfBlocks;
  /* 0x0004 */ struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA; /* size: 0x0010 */

struct tagSTAT_CHUNK
{
  /* 0x0000 */ unsigned long idChunk;
  /* 0x0004 */ enum tagCHUNK_BREAKTYPE breakType;
  /* 0x0008 */ enum tagCHUNKSTATE flags;
  /* 0x000c */ unsigned long locale;
  /* 0x0010 */ struct tagFULLPROPSPEC attribute;
  /* 0x0030 */ unsigned long idChunkSource;
  /* 0x0034 */ unsigned long cwcStartSource;
  /* 0x0038 */ unsigned long cwcLenSource;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

class wil::details::<lambda_80f5f229d92db566bf1363a4b365356f>
{
}; /* size: 0x0001 */

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned short CompoundAceType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long SidStart;
} COMPOUND_ACCESS_ALLOWED_ACE, *PCOMPOUND_ACCESS_ALLOWED_ACE; /* size: 0x0010 */

class AdHocInterceptor<IOleInPlaceObjectWindowless>
{
  /* 0x0000 */ long Padding_1244[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

class AdHocInterceptor<IPersist>
{
  /* 0x0000 */ long Padding_1245[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

typedef struct _SILO_USER_SHARED_DATA
{
  /* 0x0000 */ unsigned long ServiceSessionId;
  /* 0x0004 */ unsigned long ActiveConsoleId;
  /* 0x0008 */ __int64 ConsoleSessionForegroundProcessId;
  /* 0x0010 */ enum _NT_PRODUCT_TYPE NtProductType;
  /* 0x0014 */ unsigned long SuiteMask;
  /* 0x0018 */ unsigned long SharedUserSessionId;
  /* 0x001c */ unsigned char IsMultiSessionSku;
  /* 0x001d */ unsigned char IsStateSeparationEnabled;
  /* 0x001e */ wchar_t NtSystemRoot[260];
  /* 0x0226 */ unsigned short UserModeGlobalLogger[16];
  /* 0x0246 */ char Padding_1246[2];
  /* 0x0248 */ unsigned long TimeZoneId;
  /* 0x024c */ volatile long TimeZoneBiasStamp;
  /* 0x0250 */ struct _KSYSTEM_TIME TimeZoneBias;
  /* 0x025c */ long Padding_1247;
  /* 0x0260 */ union _LARGE_INTEGER TimeZoneBiasEffectiveStart;
  /* 0x0268 */ union _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
} SILO_USER_SHARED_DATA, *PSILO_USER_SHARED_DATA; /* size: 0x0270 */

typedef struct _CM_PNP_BIOS_DEVICE_NODE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Node;
  /* 0x0003 */ unsigned long ProductId;
  /* 0x0007 */ unsigned char DeviceType[3];
  /* 0x000a */ unsigned short DeviceAttributes;
} CM_PNP_BIOS_DEVICE_NODE, *PCM_PNP_BIOS_DEVICE_NODE; /* size: 0x000c */

typedef struct _CERT_TEMPLATE_EXT
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long dwMajorVersion;
  /* 0x000c */ int fMinorVersion;
  /* 0x0010 */ unsigned long dwMinorVersion;
  /* 0x0014 */ long __PADDING__[1];
} CERT_TEMPLATE_EXT, *PCERT_TEMPLATE_EXT; /* size: 0x0018 */

typedef struct _PROCESS_JOB_MEMORY_INFO
{
  /* 0x0000 */ unsigned __int64 SharedCommitUsage;
  /* 0x0008 */ unsigned __int64 PrivateCommitUsage;
  /* 0x0010 */ unsigned __int64 PeakPrivateCommitUsage;
  /* 0x0018 */ unsigned __int64 PrivateCommitLimit;
  /* 0x0020 */ unsigned __int64 TotalCommitLimit;
} PROCESS_JOB_MEMORY_INFO, *PPROCESS_JOB_MEMORY_INFO; /* size: 0x0028 */

typedef struct _CROSS_CERT_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long dwSyncDeltaTime;
  /* 0x0004 */ unsigned long cDistPoint;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO* rgDistPoint;
} CROSS_CERT_DIST_POINTS_INFO, *PCROSS_CERT_DIST_POINTS_INFO; /* size: 0x0010 */

typedef struct _PROCESS_DYNAMIC_EH_CONTINUATION_TARGET
{
  /* 0x0000 */ unsigned __int64 TargetAddress;
  /* 0x0008 */ unsigned __int64 Flags;
} PROCESS_DYNAMIC_EH_CONTINUATION_TARGET, *PPROCESS_DYNAMIC_EH_CONTINUATION_TARGET; /* size: 0x0010 */

typedef struct _CSV_MGMT_LOCK
{
  /* 0x0000 */ unsigned long Flags;
} CSV_MGMT_LOCK, *PCSV_MGMT_LOCK; /* size: 0x0004 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ enum _PNP_QUERY_RELATION Operation;
  /* 0x0014 */ unsigned long BufferLength;
  /* 0x0018 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA, *PPLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA; /* size: 0x0020 */

typedef struct _ACCESS_DENIED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE; /* size: 0x0030 */

typedef union _PROCESS_AFFINITY_UPDATE_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableAutoUpdate : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Permanent : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_AFFINITY_UPDATE_MODE, *PPROCESS_AFFINITY_UPDATE_MODE; /* size: 0x0004 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwFlags;
} BCRYPT_ALGORITHM_IDENTIFIER, *PBCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0010 */

typedef struct _TOKEN_AUDIT_POLICY
{
  /* 0x0000 */ unsigned char PerUserPolicy[30];
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY; /* size: 0x001e */

typedef struct _PATHNAME_BUFFER
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} PATHNAME_BUFFER, *PPATHNAME_BUFFER; /* size: 0x0008 */

struct IDebugStream
{
}; /* size: 0x0008 */

typedef struct _FILEMUIINFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwFileType;
  /* 0x000c */ unsigned char pChecksum[16];
  /* 0x001c */ unsigned char pServiceChecksum[16];
  /* 0x002c */ unsigned long dwLanguageNameOffset;
  /* 0x0030 */ unsigned long dwTypeIDMainSize;
  /* 0x0034 */ unsigned long dwTypeIDMainOffset;
  /* 0x0038 */ unsigned long dwTypeNameMainOffset;
  /* 0x003c */ unsigned long dwTypeIDMUISize;
  /* 0x0040 */ unsigned long dwTypeIDMUIOffset;
  /* 0x0044 */ unsigned long dwTypeNameMUIOffset;
  /* 0x0048 */ unsigned char abBuffer[8];
} FILEMUIINFO, *PFILEMUIINFO; /* size: 0x0050 */

struct wil::details::MapToSmartType<HSTRING__ *,void>
{
}; /* size: 0x0001 */

typedef struct _POWER_SESSION_CONNECT
{
  /* 0x0000 */ unsigned char Connected;
  /* 0x0001 */ unsigned char Console;
} POWER_SESSION_CONNECT, *PPOWER_SESSION_CONNECT; /* size: 0x0002 */

typedef struct _CMSG_RC2_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC2_AUX_INFO, *PCMSG_RC2_AUX_INFO; /* size: 0x0008 */

class wil::details::MapToSmartType<HSTRING__ *,void>::HStringWithRelease
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Storage::StorageFolder *,Windows::Storage::IStorageFolder *>,1>
{
}; /* size: 0x0008 */

typedef struct _RTL_PERTHREAD_CURDIR
{
  /* 0x0000 */ struct _RTL_DRIVE_LETTER_CURDIR* CurrentDirectories;
  /* 0x0008 */ struct _UNICODE_STRING* ImageName;
  /* 0x0010 */ void* Environment;
} RTL_PERTHREAD_CURDIR, *PRTL_PERTHREAD_CURDIR; /* size: 0x0018 */

typedef struct _FILE_FS_CONTROL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FreeSpaceStartFiltering;
  /* 0x0008 */ union _LARGE_INTEGER FreeSpaceThreshold;
  /* 0x0010 */ union _LARGE_INTEGER FreeSpaceStopFiltering;
  /* 0x0018 */ union _LARGE_INTEGER DefaultQuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER DefaultQuotaLimit;
  /* 0x0028 */ unsigned long FileSystemControlFlags;
  /* 0x002c */ long __PADDING__[1];
} FILE_FS_CONTROL_INFORMATION, *PFILE_FS_CONTROL_INFORMATION; /* size: 0x0030 */

struct FIND_BY_SID_OUTPUT
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

typedef struct _FILE_ID_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_1248;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_1249[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFORMATION, *PFILE_ID_BOTH_DIR_INFORMATION; /* size: 0x0070 */

struct tagEMRSELECTCLIPPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iMode;
}; /* size: 0x000c */

struct IMAGE_COR20_HEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned short MajorRuntimeVersion;
  /* 0x0006 */ unsigned short MinorRuntimeVersion;
  /* 0x0008 */ struct _IMAGE_DATA_DIRECTORY MetaData;
  /* 0x0010 */ unsigned long Flags;
  union
  {
    /* 0x0014 */ unsigned long EntryPointToken;
    /* 0x0014 */ unsigned long EntryPointRVA;
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _IMAGE_DATA_DIRECTORY Resources;
  /* 0x0020 */ struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
  /* 0x0028 */ struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
  /* 0x0030 */ struct _IMAGE_DATA_DIRECTORY VTableFixups;
  /* 0x0038 */ struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  /* 0x0040 */ struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
}; /* size: 0x0048 */

typedef struct _FILE_PIPE_EVENT_ENUM_INPUT_BUFFER
{
  /* 0x0000 */ unsigned __int64 EventHandle;
} FILE_PIPE_EVENT_ENUM_INPUT_BUFFER, *PFILE_PIPE_EVENT_ENUM_INPUT_BUFFER; /* size: 0x0008 */

struct tagCOMPAREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ struct HWND__* hwndItem;
  /* 0x0010 */ unsigned int itemID1;
  /* 0x0014 */ long Padding_1250;
  /* 0x0018 */ unsigned __int64 itemData1;
  /* 0x0020 */ unsigned int itemID2;
  /* 0x0024 */ long Padding_1251;
  /* 0x0028 */ unsigned __int64 itemData2;
  /* 0x0030 */ unsigned long dwLocaleId;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _LEARNING_MODE_OBJECT_INFORMATION
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListEntry;
  /* 0x0008 */ enum _LEARNING_MODE_LOG_LEVEL LogLevel;
  /* 0x000c */ long Padding_1252;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectType;
  /* 0x0018 */ struct _UNICODE_STRING* ObjectName;
  /* 0x0020 */ void* RootDirectory;
  /* 0x0028 */ struct _UNICODE_STRING FullObjectName;
} LEARNING_MODE_OBJECT_INFORMATION, *PLEARNING_MODE_OBJECT_INFORMATION; /* size: 0x0038 */

struct Windows::Foundation::Collections::IVector_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>
{
}; /* size: 0x0008 */

struct tagMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ long Padding_1253;
  /* 0x0018 */ struct HMENU__* hSubMenu;
  /* 0x0020 */ struct HBITMAP__* hbmpChecked;
  /* 0x0028 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0030 */ unsigned __int64 dwItemData;
  /* 0x0038 */ char* dwTypeData;
  /* 0x0040 */ unsigned int cch;
  /* 0x0044 */ long Padding_1254;
  /* 0x0048 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0050 */

typedef struct _FILE_ZERO_DATA_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER BeyondFinalZero;
} FILE_ZERO_DATA_INFORMATION, *PFILE_ZERO_DATA_INFORMATION; /* size: 0x0010 */

struct tagENUMUILANG
{
  /* 0x0000 */ unsigned long NumOfEnumUILang;
  /* 0x0004 */ unsigned long SizeOfEnumUIBuffer;
  /* 0x0008 */ unsigned short* pEnumUIBuffer;
}; /* size: 0x0010 */

typedef struct _FILE_RENAME_INFO
{
  union
  {
    /* 0x0000 */ unsigned char ReplaceIfExists;
    /* 0x0000 */ unsigned long Flags;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1255;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFO, *PFILE_RENAME_INFO; /* size: 0x0018 */

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING ServiceName;
  /* 0x0010 */ wchar_t* DeviceInstance;
  /* 0x0018 */ unsigned long DeviceInstanceLength;
  /* 0x001c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA, *PPLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA; /* size: 0x0020 */

struct tagUSAGE_PROPERTIES
{
  /* 0x0000 */ unsigned short level;
  /* 0x0002 */ unsigned short page;
  /* 0x0004 */ unsigned short usage;
  /* 0x0006 */ char Padding_1256[2];
  /* 0x0008 */ int logicalMinimum;
  /* 0x000c */ int logicalMaximum;
  /* 0x0010 */ unsigned short unit;
  /* 0x0012 */ unsigned short exponent;
  /* 0x0014 */ unsigned char count;
  /* 0x0015 */ char Padding_1257[3];
  /* 0x0018 */ int physicalMinimum;
  /* 0x001c */ int physicalMaximum;
}; /* size: 0x0020 */

typedef struct _FILE_ALIGNMENT_INFO
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFO, *PFILE_ALIGNMENT_INFO; /* size: 0x0004 */

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  /* 0x0000 */ unsigned long UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS; /* size: 0x0004 */

class CStdIdentity;

typedef struct _SERVICE_NOTIFY_2A
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1258;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0040 */ unsigned long dwNotificationTriggered;
  /* 0x0044 */ long Padding_1259;
  /* 0x0048 */ char* pszServiceNames;
} SERVICE_NOTIFY_2A, *PSERVICE_NOTIFY_2A; /* size: 0x0050 */

struct Windows::Foundation::Collections::IVectorView_impl<Windows::ApplicationModel::Background::IBackgroundTaskYieldable *,1>
{
}; /* size: 0x0008 */

struct tagSOLE_AUTHENTICATION_INFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ void* pAuthInfo;
}; /* size: 0x0010 */

typedef struct _nlsversioninfoex
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
  /* 0x000c */ unsigned long dwEffectiveId;
  /* 0x0010 */ struct _GUID guidCustomVersion;
} nlsversioninfoex, *Pnlsversioninfoex; /* size: 0x0020 */

typedef struct _KAFFINITY_EX
{
  /* 0x0000 */ unsigned short Count;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    /* 0x0008 */ unsigned __int64 Bitmap[1];
    /* 0x0008 */ unsigned __int64 StaticBitmap[32];
  }; /* size: 0x0100 */
} KAFFINITY_EX, *PKAFFINITY_EX; /* size: 0x0108 */

struct tagEMRSETMITERLIMIT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ float eMiterLimit;
}; /* size: 0x000c */

typedef struct _PS_STD_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StdHandleState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long PseudoHandleMask : 3; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long StdHandleSubsystemType;
} PS_STD_HANDLE_INFO, *PPS_STD_HANDLE_INFO; /* size: 0x0008 */

struct IXMLDOMDocumentType
{
}; /* size: 0x0008 */

typedef struct _GLYPHMETRICS
{
  /* 0x0000 */ unsigned int gmBlackBoxX;
  /* 0x0004 */ unsigned int gmBlackBoxY;
  /* 0x0008 */ struct tagPOINT gmptGlyphOrigin;
  /* 0x0010 */ short gmCellIncX;
  /* 0x0012 */ short gmCellIncY;
} GLYPHMETRICS, *PGLYPHMETRICS; /* size: 0x0014 */

struct tagDEBUGHOOKINFO
{
  /* 0x0000 */ unsigned long idThread;
  /* 0x0004 */ unsigned long idThreadInstaller;
  /* 0x0008 */ __int64 lParam;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ int code;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IResourceContext>;

class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::InitializeFormat::__l2::<lambda_dfa7955e9ecf8d08ec7c683e91935e9e>
{
}; /* size: 0x0001 */

struct Windows::ApplicationModel::Background::IBackgroundTaskRegistrationGroup
{
}; /* size: 0x0008 */

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ unsigned long Flags;
} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT; /* size: 0x0014 */

struct IContextMarshaler
{
}; /* size: 0x0008 */

struct std::less_equal<void>
{
}; /* size: 0x0001 */

class wil::com_ptr_t<IComClassInfo,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IComClassInfo* m_ptr;
}; /* size: 0x0008 */

struct std::_Floating_type_traits<long double>
{
}; /* size: 0x0001 */

typedef union _DISPATCHER_CONTEXT_NONVOLREG_ARM64
{
  union
  {
    /* 0x0000 */ unsigned char Buffer[152];
    struct
    {
      /* 0x0000 */ unsigned __int64 GpNvRegs[11];
      /* 0x0058 */ double FpNvRegs[8];
    }; /* size: 0x0098 */
  }; /* size: 0x0098 */
} DISPATCHER_CONTEXT_NONVOLREG_ARM64, *PDISPATCHER_CONTEXT_NONVOLREG_ARM64; /* size: 0x0098 */

typedef struct _PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Callback;
} PROCESS_INSTRUMENTATION_CALLBACK_INFORMATION, *PPROCESS_INSTRUMENTATION_CALLBACK_INFORMATION; /* size: 0x0010 */

typedef struct _PSFEATURE_OUTPUT
{
  /* 0x0000 */ int bPageIndependent;
  /* 0x0004 */ int bSetPageDevice;
} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT; /* size: 0x0008 */

struct Windows::ApplicationModel::Background::IBackgroundTaskRegistration
{
}; /* size: 0x0008 */

class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>
{
  /* 0x0000 */ long Padding_1260[2];
  /* 0x0008 */ unsigned long m_dwReleaseTime;
  /* 0x000c */ long Padding_1261;
  /* 0x0010 */ class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>* m_pcache;
  /* 0x0018 */ volatile long m_refs;
  /* 0x001c */ struct _GUID m_guidkey;
}; /* size: 0x0030 */

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE
{
  /* 0x0000 */ void* CommitBase;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned __int64 ReserveSize;
} RTL_STACK_TRACE_DATABASE_CREATE, *PRTL_STACK_TRACE_DATABASE_CREATE; /* size: 0x0018 */

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL
{
  /* 0x0000 */ unsigned long ControlCode;
  /* 0x0004 */ unsigned long ControlSize;
  union
  {
    /* 0x0008 */ unsigned char ControlData[1];
    /* 0x0008 */ struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
  }; /* size: 0x0018 */
} RTL_PROCESS_BACKTRACES_CONTROL, *PRTL_PROCESS_BACKTRACES_CONTROL; /* size: 0x0020 */

struct tagEMREXTSELECTCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbRgnData;
  /* 0x000c */ unsigned long iMode;
  /* 0x0010 */ unsigned char RgnData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *> *,1>
{
}; /* size: 0x0008 */

typedef struct _ZONEATTRIBUTES
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t szDisplayName[260];
  /* 0x020c */ wchar_t szDescription[200];
  /* 0x039c */ wchar_t szIconPath[260];
  /* 0x05a4 */ unsigned long dwTemplateMinLevel;
  /* 0x05a8 */ unsigned long dwTemplateRecommended;
  /* 0x05ac */ unsigned long dwTemplateCurrentLevel;
  /* 0x05b0 */ unsigned long dwFlags;
} ZONEATTRIBUTES, *PZONEATTRIBUTES; /* size: 0x05b4 */

typedef struct _POWER_MONITOR_INVOCATION
{
  /* 0x0000 */ unsigned char Console;
  /* 0x0001 */ char Padding_1262[3];
  /* 0x0004 */ enum POWER_MONITOR_REQUEST_REASON RequestReason;
} POWER_MONITOR_INVOCATION, *PPOWER_MONITOR_INVOCATION; /* size: 0x0008 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<_GUID,Windows::ApplicationModel::Background::IBackgroundTaskRegistration *>
{
}; /* size: 0x0008 */

typedef struct _CERT_KEY_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1263;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long __PADDING__[1];
} CERT_KEY_CONTEXT, *PCERT_KEY_CONTEXT; /* size: 0x0018 */

struct DedicatedAllocator<CallFrame>
{
  /* 0x0000 */ union _SLIST_HEADER g_listHead;
  /* 0x0010 */ char __PADDING__[4294967281];
}; /* size: 0x0001 */

typedef struct _CRYPT_ENCODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1264;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
} CRYPT_ENCODE_PARA, *PCRYPT_ENCODE_PARA; /* size: 0x0018 */

struct Windows::ApplicationModel::Background::IBackgroundTaskProgressEventArgs
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION
{
  /* 0x0000 */ unsigned long Probability;
  /* 0x0004 */ unsigned long MaxProbability;
  /* 0x0008 */ struct _UNICODE_STRING PoolTags;
  /* 0x0018 */ struct _UNICODE_STRING Applications;
} SYSTEM_VERIFIER_FAULTS_INFORMATION, *PSYSTEM_VERIFIER_FAULTS_INFORMATION; /* size: 0x0028 */

typedef struct _ATOM_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAtoms;
  /* 0x0004 */ unsigned short Atoms[1];
  /* 0x0006 */ char __PADDING__[2];
} ATOM_TABLE_INFORMATION, *PATOM_TABLE_INFORMATION; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

class wil::com_ptr_t<IComClassCategoryInfo,wil::err_returncode_policy>
{
  /* 0x0000 */ struct IComClassCategoryInfo* m_ptr;
}; /* size: 0x0008 */

struct tagKERNINGPAIR
{
  /* 0x0000 */ unsigned short wFirst;
  /* 0x0002 */ unsigned short wSecond;
  /* 0x0004 */ int iKernAmount;
}; /* size: 0x0008 */

typedef struct _SECTION_IMAGE_INFORMATION32
{
  /* 0x0000 */ unsigned long TransferAddress;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ unsigned long MaximumStackSize;
  /* 0x000c */ unsigned long CommittedStackSize;
  /* 0x0010 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned short SubSystemMinorVersion;
      /* 0x0016 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0014 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  union
  {
    struct
    {
      /* 0x0018 */ unsigned short MajorOperatingSystemVersion;
      /* 0x001a */ unsigned short MinorOperatingSystemVersion;
    }; /* size: 0x0004 */
    /* 0x0018 */ unsigned long OperatingSystemVersion;
  }; /* size: 0x0004 */
  /* 0x001c */ unsigned short ImageCharacteristics;
  /* 0x001e */ unsigned short DllCharacteristics;
  /* 0x0020 */ unsigned short Machine;
  /* 0x0022 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0023 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0023 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0023 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0023 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0024 */ unsigned long LoaderFlags;
  /* 0x0028 */ unsigned long ImageFileSize;
  /* 0x002c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION32, *PSECTION_IMAGE_INFORMATION32; /* size: 0x0030 */

typedef struct _RPC_PROTSEQ_VECTORW
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ long Padding_1265;
  /* 0x0008 */ unsigned short* Protseq[1];
} RPC_PROTSEQ_VECTORW, *PRPC_PROTSEQ_VECTORW; /* size: 0x0010 */

struct ICodeInstall
{
}; /* size: 0x0008 */

struct MENUITEMTEMPLATEHEADER
{
  /* 0x0000 */ unsigned short versionNumber;
  /* 0x0002 */ unsigned short offset;
}; /* size: 0x0004 */

typedef struct _RPC_SEC_CONTEXT_KEY_INFO
{
  /* 0x0000 */ unsigned long EncryptAlgorithm;
  /* 0x0004 */ unsigned long KeySize;
  /* 0x0008 */ unsigned long SignatureAlgorithm;
} RPC_SEC_CONTEXT_KEY_INFO, *PRPC_SEC_CONTEXT_KEY_INFO; /* size: 0x000c */

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 LastRecoveredLsn;
} TRANSACTIONMANAGER_RECOVERY_INFORMATION, *PTRANSACTIONMANAGER_RECOVERY_INFORMATION; /* size: 0x0008 */

typedef struct _SCOPE_TABLE_ARM64
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE_ARM64, *PSCOPE_TABLE_ARM64; /* size: 0x0014 */

struct tagSTICKYKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

typedef struct _SSL_ECCKEY_BLOB
{
  /* 0x0000 */ unsigned long dwCurveType;
  /* 0x0004 */ unsigned long cbKey;
} SSL_ECCKEY_BLOB, *PSSL_ECCKEY_BLOB; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Collections::IKeyValuePair<unsigned int,Windows::System::User *> *,1>
{
}; /* size: 0x0008 */

struct tagKBDLLHOOKSTRUCT
{
  /* 0x0000 */ unsigned long vkCode;
  /* 0x0004 */ unsigned long scanCode;
  /* 0x0008 */ unsigned long flags;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

class AdHocCallFrame<IOleWindow,<lambda_524187a61b7f412a8ba870cd827a85c9> >
{
  /* 0x0000 */ long Padding_1266[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>::ContextSensitiveHelp::__l2::<lambda_524187a61b7f412a8ba870cd827a85c9>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _PO_WAKE_SOURCE_INTERNAL
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ enum PO_INTERNAL_WAKE_SOURCE_TYPE InternalWakeSourceType;
} PO_WAKE_SOURCE_INTERNAL, *PPO_WAKE_SOURCE_INTERNAL; /* size: 0x000c */

struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

class AdHocCallFrame<IOleWindow,<lambda_3486a7fc69495c9349b1266d1aff572d> >
{
  /* 0x0000 */ long Padding_1267[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>::GetWindow::__l2::<lambda_3486a7fc69495c9349b1266d1aff572d>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class wil::details::<lambda_fa521078eed78ffe1c3cfda3117d3863>
{
}; /* size: 0x0001 */

typedef struct _RGNDATA
{
  /* 0x0000 */ struct _RGNDATAHEADER rdh;
  /* 0x0020 */ char Buffer[1];
  /* 0x0021 */ char __PADDING__[3];
} RGNDATA, *PRGNDATA; /* size: 0x0024 */

struct ISynchronizeHandle
{
}; /* size: 0x0008 */

typedef struct _DISCDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_1268;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0018 */ char* lpRemoteName;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} DISCDLGSTRUCTA, *PDISCDLGSTRUCTA; /* size: 0x0028 */

typedef struct _UNICODE_PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_1269;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* LastNextEntry;
} UNICODE_PREFIX_TABLE, *PUNICODE_PREFIX_TABLE; /* size: 0x0018 */

typedef struct _HTTPSPolicyCallbackData
{
  union
  {
    /* 0x0000 */ unsigned long cbStruct;
    /* 0x0000 */ unsigned long cbSize;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwAuthType;
  /* 0x0008 */ unsigned long fdwChecks;
  /* 0x000c */ long Padding_1270;
  /* 0x0010 */ wchar_t* pwszServerName;
} HTTPSPolicyCallbackData, *PHTTPSPolicyCallbackData; /* size: 0x0018 */

struct Windows::System::IUser
{
}; /* size: 0x0008 */

typedef struct _NOTIFYICONDATAW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1271;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ unsigned int uFlags;
  /* 0x0018 */ unsigned int uCallbackMessage;
  /* 0x001c */ long Padding_1272;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ wchar_t szTip[128];
  /* 0x0128 */ unsigned long dwState;
  /* 0x012c */ unsigned long dwStateMask;
  /* 0x0130 */ wchar_t szInfo[256];
  union
  {
    /* 0x0330 */ unsigned int uTimeout;
    /* 0x0330 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x0334 */ wchar_t szInfoTitle[64];
  /* 0x03b4 */ unsigned long dwInfoFlags;
  /* 0x03b8 */ struct _GUID guidItem;
  /* 0x03c8 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAW, *PNOTIFYICONDATAW; /* size: 0x03d0 */

class wil::details::<lambda_81879180566d4a5d3b0613440b5f29a5>
{
}; /* size: 0x0001 */

struct ICallLocalityInfo
{
}; /* size: 0x0008 */

typedef struct _CTL_VERIFY_USAGE_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long Padding_1273;
  /* 0x0010 */ const struct _CTL_CONTEXT** ppCtl;
  /* 0x0018 */ unsigned long dwCtlEntryIndex;
  /* 0x001c */ long Padding_1274;
  /* 0x0020 */ const struct _CERT_CONTEXT** ppSigner;
  /* 0x0028 */ unsigned long dwSignerIndex;
  /* 0x002c */ long __PADDING__[1];
} CTL_VERIFY_USAGE_STATUS, *PCTL_VERIFY_USAGE_STATUS; /* size: 0x0030 */

class wil::details::<lambda_15ee1117c0f09c941ddf22843b3b6e42>
{
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IVector_impl<enum Windows::System::UserWatcherUpdateKind,1>
{
}; /* size: 0x0008 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO
{
  /* 0x0000 */ struct _CERT_ID RecipientId;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0038 */ struct _FILETIME Date;
  /* 0x0040 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO; /* size: 0x0048 */

typedef struct _heapinfo
{
  /* 0x0000 */ int* _pentry;
  /* 0x0008 */ unsigned __int64 _size;
  /* 0x0010 */ int _useflag;
  /* 0x0014 */ long __PADDING__[1];
} heapinfo, *Pheapinfo; /* size: 0x0018 */

class AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>::CreateAccessorEx::__l2::<lambda_b7865aac57bfa228768998e2f76a980a>
{
  /* 0x0000 */ const wchar_t* pcwszURL;
  /* 0x0008 */ struct _AUTHENTICATION_INFO* pAuthenticationInfo;
  /* 0x0010 */ struct _INCREMENTAL_ACCESS_INFO* pIncrementalAccessInfo;
  /* 0x0018 */ struct _ITEM_INFO* pItemInfo;
  /* 0x0020 */ const struct tagBLOB* pUserData;
  /* 0x0028 */ struct IUrlAccessor** ppAccessor;
}; /* size: 0x0030 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef struct _FILE_ID_BOTH_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_1275;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_1276[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFO, *PFILE_ID_BOTH_DIR_INFO; /* size: 0x0070 */

class AdHocCallFrame<IPersist,<lambda_121ff239fc219aa2df927c67d0376548> >
{
  /* 0x0000 */ long Padding_1277[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IPersist,IPersistPropertyBag>::GetClassID::__l2::<lambda_121ff239fc219aa2df927c67d0376548>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  /* 0x0000 */ unsigned long ListSize;
  /* 0x0004 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long SlotNumber;
  /* 0x0010 */ unsigned long Reserved[3];
  /* 0x001c */ unsigned long AlternativeLists;
  /* 0x0020 */ struct _IO_RESOURCE_LIST List[1];
} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST; /* size: 0x0048 */

typedef struct _TRANSACTION_BIND_INFORMATION
{
  /* 0x0000 */ void* TmHandle;
} TRANSACTION_BIND_INFORMATION, *PTRANSACTION_BIND_INFORMATION; /* size: 0x0008 */

struct IGetBindHandle
{
}; /* size: 0x0008 */

struct IInternet
{
}; /* size: 0x0008 */

struct Windows::Foundation::Collections::IVectorView_impl<enum Windows::System::UserWatcherUpdateKind,1>
{
}; /* size: 0x0008 */

struct tagEMRPLGBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _POINTL aptlDest[3];
  /* 0x0030 */ long xSrc;
  /* 0x0034 */ long ySrc;
  /* 0x0038 */ long cxSrc;
  /* 0x003c */ long cySrc;
  /* 0x0040 */ struct tagXFORM xformSrc;
  /* 0x0058 */ unsigned long crBkColorSrc;
  /* 0x005c */ unsigned long iUsageSrc;
  /* 0x0060 */ unsigned long offBmiSrc;
  /* 0x0064 */ unsigned long cbBmiSrc;
  /* 0x0068 */ unsigned long offBitsSrc;
  /* 0x006c */ unsigned long cbBitsSrc;
  /* 0x0070 */ long xMask;
  /* 0x0074 */ long yMask;
  /* 0x0078 */ unsigned long iUsageMask;
  /* 0x007c */ unsigned long offBmiMask;
  /* 0x0080 */ unsigned long cbBmiMask;
  /* 0x0084 */ unsigned long offBitsMask;
  /* 0x0088 */ unsigned long cbBitsMask;
}; /* size: 0x008c */

struct SC_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct PPM_WMI_LEGACY_PERFSTATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long PercentFrequency;
}; /* size: 0x000c */

typedef struct _SYSTEM_LOOKASIDE_INFORMATION
{
  /* 0x0000 */ unsigned short CurrentDepth;
  /* 0x0002 */ unsigned short MaximumDepth;
  /* 0x0004 */ unsigned long TotalAllocates;
  /* 0x0008 */ unsigned long AllocateMisses;
  /* 0x000c */ unsigned long TotalFrees;
  /* 0x0010 */ unsigned long FreeMisses;
  /* 0x0014 */ unsigned long Type;
  /* 0x0018 */ unsigned long Tag;
  /* 0x001c */ unsigned long Size;
} SYSTEM_LOOKASIDE_INFORMATION, *PSYSTEM_LOOKASIDE_INFORMATION; /* size: 0x0020 */

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1278;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldFlags;
  /* 0x002c */ unsigned long NewFlags;
} JOURNAL_SET_KEY_USER_FLAGS_INFORMATION, *PJOURNAL_SET_KEY_USER_FLAGS_INFORMATION; /* size: 0x0030 */

struct IReleaseMarshalBuffers
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_DMA_GUARD_POLICY_INFORMATION
{
  /* 0x0000 */ unsigned char DmaGuardPolicyEnabled;
} SYSTEM_DMA_GUARD_POLICY_INFORMATION, *PSYSTEM_DMA_GUARD_POLICY_INFORMATION; /* size: 0x0001 */

typedef struct _THREAD_PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ struct _PROCESSOR_NUMBER ProcessorNumber;
  /* 0x0008 */ unsigned long ContextSwitches;
  /* 0x000c */ unsigned long HwCountersCount;
  /* 0x0010 */ volatile unsigned __int64 UpdateCount;
  /* 0x0018 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0020 */ unsigned __int64 HardwareCounters;
  /* 0x0028 */ struct _COUNTER_READING CycleTime;
  /* 0x0040 */ struct _COUNTER_READING HwCounters[16];
} THREAD_PERFORMANCE_DATA, *PTHREAD_PERFORMANCE_DATA; /* size: 0x01c0 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalSlots;
} PROCESS_HANDLE_TRACING_ENABLE_EX, *PPROCESS_HANDLE_TRACING_ENABLE_EX; /* size: 0x0008 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::System::User *,Windows::System::IUser *>,1>
{
}; /* size: 0x0008 */

struct tagGESTUREINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwID;
  /* 0x000c */ long Padding_1279;
  /* 0x0010 */ struct HWND__* hwndTarget;
  /* 0x0018 */ struct tagPOINTS ptsLocation;
  /* 0x001c */ unsigned long dwInstanceID;
  /* 0x0020 */ unsigned long dwSequenceID;
  /* 0x0024 */ long Padding_1280;
  /* 0x0028 */ unsigned __int64 ullArguments;
  /* 0x0030 */ unsigned int cbExtraArgs;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnterpriseDropTarget> const >;

typedef struct _SAFER_PATHNAME_IDENTIFICATION
{
  /* 0x0000 */ struct _SAFER_IDENTIFICATION_HEADER header;
  /* 0x0020 */ wchar_t Description[256];
  /* 0x0220 */ wchar_t* ImageName;
  /* 0x0228 */ unsigned long dwSaferFlags;
  /* 0x022c */ long __PADDING__[1];
} SAFER_PATHNAME_IDENTIFICATION, *PSAFER_PATHNAME_IDENTIFICATION; /* size: 0x0230 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_1281;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_1282;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_1283;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600; /* size: 0x0048 */

typedef struct _PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char HwCountersCount;
  /* 0x0004 */ unsigned long ContextSwitchCount;
  /* 0x0008 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0010 */ unsigned __int64 CycleTime;
  /* 0x0018 */ unsigned long RetryCount;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ struct _HARDWARE_COUNTER_DATA HwCounters[16];
} PERFORMANCE_DATA, *PPERFORMANCE_DATA; /* size: 0x0120 */

struct tagEMRGLSRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _KEY_TYPE_SUBTYPE
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ struct _GUID Type;
  /* 0x0014 */ struct _GUID Subtype;
} KEY_TYPE_SUBTYPE, *PKEY_TYPE_SUBTYPE; /* size: 0x0024 */

typedef struct _BCRYPT_DSA_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
  /* 0x000c */ unsigned char Count[4];
  /* 0x0010 */ unsigned char Seed[20];
  /* 0x0024 */ unsigned char q[20];
} BCRYPT_DSA_PARAMETER_HEADER, *PBCRYPT_DSA_PARAMETER_HEADER; /* size: 0x0038 */

struct SHELLHOOKINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct tagRECT rc;
}; /* size: 0x0018 */

typedef struct _XSAVE_POLICY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long MaxSaveAreaLength;
  /* 0x0010 */ unsigned __int64 FeatureBitmask;
  /* 0x0018 */ unsigned long NumberOfFeatures;
  /* 0x001c */ long Padding_1284;
  /* 0x0020 */ struct _XSAVE_FEATURE Features[1];
} XSAVE_POLICY, *PXSAVE_POLICY; /* size: 0x0030 */

typedef struct _SYSTEM_PROCESSOR_POLICY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long PolicyId;
  /* 0x0008 */ struct _XSAVE_POLICY Policy;
} SYSTEM_PROCESSOR_POLICY_INFORMATION, *PSYSTEM_PROCESSOR_POLICY_INFORMATION; /* size: 0x0038 */

struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int bootPersistenceOn : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
}; /* size: 0x0018 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x0038 */ unsigned long dwSaltLength;
  /* 0x003c */ unsigned long dwTrailerField;
} CRYPT_RSA_SSA_PSS_PARAMETERS, *PCRYPT_RSA_SSA_PSS_PARAMETERS; /* size: 0x0040 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<> >
{
}; /* size: 0x0008 */

typedef struct _ALPC_MESSAGE_ATTRIBUTES
{
  /* 0x0000 */ unsigned long AllocatedAttributes;
  /* 0x0004 */ unsigned long ValidAttributes;
} ALPC_MESSAGE_ATTRIBUTES, *PALPC_MESSAGE_ATTRIBUTES; /* size: 0x0008 */

class CInterfaceFromWindowProp
{
  /* 0x0000 */ long Padding_1285[2];
  /* 0x0008 */ unsigned long _ulRefCnt;
}; /* size: 0x0010 */

typedef struct _COVERAGE_MODULE_REQUEST
{
  /* 0x0000 */ enum _COVERAGE_REQUEST_CODES RequestType;
  /* 0x0004 */ long Padding_1286;
  union
  {
    union
    {
      /* 0x0008 */ unsigned char MD5Hash[16];
      /* 0x0008 */ struct _UNICODE_STRING ModuleName;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ SearchInfo;
} COVERAGE_MODULE_REQUEST, *PCOVERAGE_MODULE_REQUEST; /* size: 0x0018 */

typedef struct _COVERAGE_MODULES
{
  /* 0x0000 */ unsigned long ListAndReset;
  /* 0x0004 */ unsigned long NumberOfModules;
  /* 0x0008 */ struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
  /* 0x0020 */ struct _COVERAGE_MODULE_INFO Modules[1];
} COVERAGE_MODULES, *PCOVERAGE_MODULES; /* size: 0x0040 */

struct IInternetPriority
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<ICallFrameEvents>;

typedef struct _PROCESS_MACHINE_INFORMATION
{
  /* 0x0000 */ unsigned short ProcessMachine;
  /* 0x0002 */ unsigned short Res0;
  /* 0x0004 */ enum _MACHINE_ATTRIBUTES MachineAttributes;
} PROCESS_MACHINE_INFORMATION, *PPROCESS_MACHINE_INFORMATION; /* size: 0x0008 */

typedef struct _SHUFFLE_FILE_DATA
{
  /* 0x0000 */ __int64 StartingOffset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} SHUFFLE_FILE_DATA, *PSHUFFLE_FILE_DATA; /* size: 0x0018 */

struct IInterfaceFromWindowProp
{
}; /* size: 0x0008 */

struct Windows::Foundation::IWwwFormUrlDecoderRuntimeClass
{
}; /* size: 0x0008 */

struct IGetProcessInfoInternal
{
}; /* size: 0x0008 */

typedef struct _CRYPT_INTERFACE_REG
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cFunctions;
  /* 0x000c */ long Padding_1287;
  /* 0x0010 */ wchar_t** rgpszFunctions;
} CRYPT_INTERFACE_REG, *PCRYPT_INTERFACE_REG; /* size: 0x0018 */

struct IHTMLFiltersCollection
{
}; /* size: 0x0008 */

struct SDDInfo
{
  /* 0x0000 */ int fLocal;
  /* 0x0004 */ int fTargetIsBrokered;
  /* 0x0008 */ struct IPrivDragDrop* pPDP;
}; /* size: 0x0010 */

typedef struct _WORKER_FACTORY_DEFERRED_WORK
{
  /* 0x0000 */ struct _PORT_MESSAGE* AlpcSendMessage;
  /* 0x0008 */ void* AlpcSendMessagePort;
  /* 0x0010 */ unsigned long AlpcSendMessageFlags;
  /* 0x0014 */ unsigned long Flags;
} WORKER_FACTORY_DEFERRED_WORK, *PWORKER_FACTORY_DEFERRED_WORK; /* size: 0x0018 */

typedef struct _Combined_type<float,double>
{
} Combined_type<float,double>, *PCombined_type<float,double>; /* size: 0x0001 */

class CEndPointAtom
{
  /* 0x0000 */ unsigned short s_AtomProp;
}; /* size: 0x0001 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Foundation::Internal::AggregateType<Windows::Foundation::Uri *,Windows::Foundation::IUriRuntimeClass *>,1>
{
}; /* size: 0x0008 */

struct IHTMLStyle
{
}; /* size: 0x0008 */

typedef struct _CSV_NAMESPACE_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long DeviceNumber;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ unsigned long SectorSize;
  /* 0x0014 */ long __PADDING__[1];
} CSV_NAMESPACE_INFO, *PCSV_NAMESPACE_INFO; /* size: 0x0018 */

class AdHocCallFrame<IElementBehavior,<lambda_b26c1a7a98add69a0d17b823be354735> >
{
  /* 0x0000 */ long Padding_1288[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Init::__l2::<lambda_b26c1a7a98add69a0d17b823be354735>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<CFormatOnlyDataObject>
{
  /* 0x0000 */ class CFormatOnlyDataObject* ptr_;
}; /* size: 0x0008 */

struct IExceptionNotification
{
}; /* size: 0x0008 */

typedef struct _GLYPHMETRICSFLOAT
{
  /* 0x0000 */ float gmfBlackBoxX;
  /* 0x0004 */ float gmfBlackBoxY;
  /* 0x0008 */ struct _POINTFLOAT gmfptGlyphOrigin;
  /* 0x0010 */ float gmfCellIncX;
  /* 0x0014 */ float gmfCellIncY;
} GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT; /* size: 0x0018 */

typedef struct _NTFS_STATISTICS
{
  /* 0x0000 */ unsigned long LogFileFullExceptions;
  /* 0x0004 */ unsigned long OtherExceptions;
  /* 0x0008 */ unsigned long MftReads;
  /* 0x000c */ unsigned long MftReadBytes;
  /* 0x0010 */ unsigned long MftWrites;
  /* 0x0014 */ unsigned long MftWriteBytes;
  struct
  {
    /* 0x0018 */ unsigned short Write;
    /* 0x001a */ unsigned short Create;
    /* 0x001c */ unsigned short SetInfo;
    /* 0x001e */ unsigned short Flush;
  } /* size: 0x0008 */ MftWritesUserLevel;
  /* 0x0020 */ unsigned short MftWritesFlushForLogFileFull;
  /* 0x0022 */ unsigned short MftWritesLazyWriter;
  /* 0x0024 */ unsigned short MftWritesUserRequest;
  /* 0x0026 */ char Padding_1289[2];
  /* 0x0028 */ unsigned long Mft2Writes;
  /* 0x002c */ unsigned long Mft2WriteBytes;
  struct
  {
    /* 0x0030 */ unsigned short Write;
    /* 0x0032 */ unsigned short Create;
    /* 0x0034 */ unsigned short SetInfo;
    /* 0x0036 */ unsigned short Flush;
  } /* size: 0x0008 */ Mft2WritesUserLevel;
  /* 0x0038 */ unsigned short Mft2WritesFlushForLogFileFull;
  /* 0x003a */ unsigned short Mft2WritesLazyWriter;
  /* 0x003c */ unsigned short Mft2WritesUserRequest;
  /* 0x003e */ char Padding_1290[2];
  /* 0x0040 */ unsigned long RootIndexReads;
  /* 0x0044 */ unsigned long RootIndexReadBytes;
  /* 0x0048 */ unsigned long RootIndexWrites;
  /* 0x004c */ unsigned long RootIndexWriteBytes;
  /* 0x0050 */ unsigned long BitmapReads;
  /* 0x0054 */ unsigned long BitmapReadBytes;
  /* 0x0058 */ unsigned long BitmapWrites;
  /* 0x005c */ unsigned long BitmapWriteBytes;
  /* 0x0060 */ unsigned short BitmapWritesFlushForLogFileFull;
  /* 0x0062 */ unsigned short BitmapWritesLazyWriter;
  /* 0x0064 */ unsigned short BitmapWritesUserRequest;
  struct
  {
    /* 0x0066 */ unsigned short Write;
    /* 0x0068 */ unsigned short Create;
    /* 0x006a */ unsigned short SetInfo;
  } /* size: 0x0006 */ BitmapWritesUserLevel;
  /* 0x006c */ unsigned long MftBitmapReads;
  /* 0x0070 */ unsigned long MftBitmapReadBytes;
  /* 0x0074 */ unsigned long MftBitmapWrites;
  /* 0x0078 */ unsigned long MftBitmapWriteBytes;
  /* 0x007c */ unsigned short MftBitmapWritesFlushForLogFileFull;
  /* 0x007e */ unsigned short MftBitmapWritesLazyWriter;
  /* 0x0080 */ unsigned short MftBitmapWritesUserRequest;
  struct
  {
    /* 0x0082 */ unsigned short Write;
    /* 0x0084 */ unsigned short Create;
    /* 0x0086 */ unsigned short SetInfo;
    /* 0x0088 */ unsigned short Flush;
  } /* size: 0x0008 */ MftBitmapWritesUserLevel;
  /* 0x008a */ char Padding_1291[2];
  /* 0x008c */ unsigned long UserIndexReads;
  /* 0x0090 */ unsigned long UserIndexReadBytes;
  /* 0x0094 */ unsigned long UserIndexWrites;
  /* 0x0098 */ unsigned long UserIndexWriteBytes;
  /* 0x009c */ unsigned long LogFileReads;
  /* 0x00a0 */ unsigned long LogFileReadBytes;
  /* 0x00a4 */ unsigned long LogFileWrites;
  /* 0x00a8 */ unsigned long LogFileWriteBytes;
  struct
  {
    /* 0x00ac */ unsigned long Calls;
    /* 0x00b0 */ unsigned long Clusters;
    /* 0x00b4 */ unsigned long Hints;
    /* 0x00b8 */ unsigned long RunsReturned;
    /* 0x00bc */ unsigned long HintsHonored;
    /* 0x00c0 */ unsigned long HintsClusters;
    /* 0x00c4 */ unsigned long Cache;
    /* 0x00c8 */ unsigned long CacheClusters;
    /* 0x00cc */ unsigned long CacheMiss;
    /* 0x00d0 */ unsigned long CacheMissClusters;
  } /* size: 0x0028 */ Allocate;
  /* 0x00d4 */ unsigned long DiskResourcesExhausted;
} NTFS_STATISTICS, *PNTFS_STATISTICS; /* size: 0x00d8 */

struct IInternetSecurityManagerEx
{
}; /* size: 0x0008 */

struct tagEMRRESTOREDC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long iRelative;
}; /* size: 0x000c */

struct Windows::Foundation::IWwwFormUrlDecoderEntry
{
}; /* size: 0x0008 */

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CFormatOnlyDataObject> >;

typedef struct _IO_COMPLETION_BASIC_INFORMATION
{
  /* 0x0000 */ long Depth;
} IO_COMPLETION_BASIC_INFORMATION, *PIO_COMPLETION_BASIC_INFORMATION; /* size: 0x0004 */

typedef struct _DMA_CONFIGURATION_BYTE0
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Channel : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 3; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE0, *PDMA_CONFIGURATION_BYTE0; /* size: 0x0001 */

typedef struct _EISA_DMA_CONFIGURATION
{
  /* 0x0000 */ struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
  /* 0x0001 */ struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION; /* size: 0x0002 */

typedef struct _SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE
{
  /* 0x0000 */ unsigned long UpdateCount;
  /* 0x0004 */ struct _SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE_ENTRY Updates[1];
} SYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE, *PSYSTEM_FEATURE_USAGE_SUBSCRIPTION_UPDATE; /* size: 0x0018 */

struct tagEMRSETCOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
}; /* size: 0x000c */

typedef struct _KEY_VALUE_ENTRY
{
  /* 0x0000 */ struct _UNICODE_STRING* ValueName;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned long DataOffset;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ long __PADDING__[1];
} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY; /* size: 0x0018 */

struct tagEMRGLSBOUNDEDRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbData;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnterpriseDropTarget> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IEnterpriseDropTarget>* ptr_;
}; /* size: 0x0008 */

typedef struct _SERVICE_SID_INFO
{
  /* 0x0000 */ unsigned long dwServiceSidType;
} SERVICE_SID_INFO, *PSERVICE_SID_INFO; /* size: 0x0004 */

typedef struct _CERT_LDAP_STORE_OPENED_PARA
{
  /* 0x0000 */ void* pvLdapSessionHandle;
  /* 0x0008 */ const wchar_t* pwszLdapUrl;
} CERT_LDAP_STORE_OPENED_PARA, *PCERT_LDAP_STORE_OPENED_PARA; /* size: 0x0010 */

typedef struct _SYSTEM_HANDLE_INFORMATION_EX
{
  /* 0x0000 */ unsigned __int64 NumberOfHandles;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX; /* size: 0x0038 */

typedef struct _WIM_PROVIDER_UPDATE_OVERLAY_INPUT
{
  /* 0x0000 */ union _LARGE_INTEGER DataSourceId;
  /* 0x0008 */ unsigned long WimFileNameOffset;
  /* 0x000c */ unsigned long WimFileNameLength;
} WIM_PROVIDER_UPDATE_OVERLAY_INPUT, *PWIM_PROVIDER_UPDATE_OVERLAY_INPUT; /* size: 0x0010 */

struct Windows::Foundation::Collections::IKeyValuePair_impl<HSTRING__ *,Windows::Foundation::Collections::IVectorView<Windows::Data::Text::TextSegment> *>
{
}; /* size: 0x0008 */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fCommercial;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x0008 */

typedef struct _MUICCENTRY
{
  /* 0x0000 */ unsigned int lCultureNameOffset;
  /* 0x0004 */ unsigned int ulCultureID;
  /* 0x0008 */ unsigned long ulLanguageType;
  /* 0x000c */ long Padding_1292;
  /* 0x0010 */ struct _MUICCENTRY* pNeutralCulture;
  /* 0x0018 */ struct _MUICCENTRY* lBaseLanguageIndices[4];
  /* 0x0038 */ int lParentLanguageIndices[4];
} MUICCENTRY, *PMUICCENTRY; /* size: 0x0048 */

typedef struct _FILE_LINK_ENTRY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_1293;
  /* 0x0008 */ __int64 ParentFileId;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_ENTRY_INFORMATION, *PFILE_LINK_ENTRY_INFORMATION; /* size: 0x0018 */

struct tagRemHGLOBAL
{
  /* 0x0000 */ long fNullHGlobal;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char data[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short NumberOfModuleForwarderRefs;
} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR; /* size: 0x0008 */

typedef struct _FILE_OBJECTID_BUFFER
{
  /* 0x0000 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char BirthVolumeId[16];
      /* 0x0020 */ unsigned char BirthObjectId[16];
      /* 0x0030 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0010 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_BUFFER, *PFILE_OBJECTID_BUFFER; /* size: 0x0040 */

typedef struct _SERVICE_TRIGGER
{
  /* 0x0000 */ unsigned long dwTriggerType;
  /* 0x0004 */ unsigned long dwAction;
  /* 0x0008 */ struct _GUID* pTriggerSubtype;
  /* 0x0010 */ unsigned long cDataItems;
  /* 0x0014 */ long Padding_1294;
  /* 0x0018 */ struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM* pDataItems;
} SERVICE_TRIGGER, *PSERVICE_TRIGGER; /* size: 0x0020 */

struct GetTypeValueImpl<long,HWND__ *,unsigned int,unsigned long>
{
}; /* size: 0x0001 */

class CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_1295[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_1296[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ long __PADDING__[1];
} CMSG_MAIL_LIST_ENCRYPT_INFO, *PCMSG_MAIL_LIST_ENCRYPT_INFO; /* size: 0x0038 */

struct Windows::Data::Text::TextSegment
{
  /* 0x0000 */ unsigned int StartPosition;
  /* 0x0004 */ unsigned int Length;
}; /* size: 0x0008 */

typedef struct _SAFER_CODE_PROPERTIES_V2
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwCheckFlags;
  /* 0x0008 */ const wchar_t* ImagePath;
  /* 0x0010 */ void* hImageFileHandle;
  /* 0x0018 */ unsigned long UrlZoneId;
  /* 0x001c */ unsigned char ImageHash[64];
  /* 0x005c */ unsigned long dwImageHashSize;
  /* 0x0060 */ union _LARGE_INTEGER ImageSize;
  /* 0x0068 */ unsigned int HashAlgorithm;
  /* 0x006c */ long Padding_1297;
  /* 0x0070 */ unsigned char* pByteBlock;
  /* 0x0078 */ struct HWND__* hWndParent;
  /* 0x0080 */ unsigned long dwWVTUIChoice;
  /* 0x0084 */ long Padding_1298;
  /* 0x0088 */ const wchar_t* PackageMoniker;
  /* 0x0090 */ const wchar_t* PackagePublisher;
  /* 0x0098 */ const wchar_t* PackageName;
  /* 0x00a0 */ unsigned __int64 PackageVersion;
  /* 0x00a8 */ int PackageIsFramework;
  /* 0x00ac */ long __PADDING__[1];
} SAFER_CODE_PROPERTIES_V2, *PSAFER_CODE_PROPERTIES_V2; /* size: 0x00b0 */

struct ISynchronizeContainer
{
}; /* size: 0x0008 */

class AdHocCallFrame<ISearchProtocol,<lambda_b4919db20cec154853a959297be03d11> >
{
  /* 0x0000 */ long Padding_1299[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::Init::__l2::<lambda_b4919db20cec154853a959297be03d11>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class PMemoryAllocator;

typedef struct _RTL_DEBUG_INFORMATION32
{
  /* 0x0000 */ unsigned long SectionHandleClient;
  /* 0x0004 */ unsigned long ViewBaseClient;
  /* 0x0008 */ unsigned long ViewBaseTarget;
  /* 0x000c */ unsigned long ViewBaseDelta;
  /* 0x0010 */ unsigned long EventPairClient;
  /* 0x0014 */ unsigned long EventPairTarget;
  /* 0x0018 */ unsigned long TargetProcessId;
  /* 0x001c */ unsigned long TargetThreadHandle;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long OffsetFree;
  /* 0x0028 */ unsigned long CommitSize;
  /* 0x002c */ unsigned long ViewSize;
  union
  {
    /* 0x0030 */ unsigned long Modules;
    /* 0x0030 */ unsigned long ModulesEx;
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long BackTraces;
  /* 0x0038 */ unsigned long Heaps;
  /* 0x003c */ unsigned long Locks;
  /* 0x0040 */ unsigned long SpecificHeap;
  /* 0x0044 */ unsigned long TargetProcessHandle;
  /* 0x0048 */ unsigned long VerifierOptions;
  /* 0x004c */ unsigned long ProcessHeap;
  /* 0x0050 */ unsigned long CriticalSectionHandle;
  /* 0x0054 */ unsigned long CriticalSectionOwnerThread;
  /* 0x0058 */ unsigned long Reserved[4];
} RTL_DEBUG_INFORMATION32, *PRTL_DEBUG_INFORMATION32; /* size: 0x0068 */

typedef struct _REFS_DEALLOCATE_RANGES_INPUT_BUFFER_EX
{
  /* 0x0000 */ unsigned long RangeCount;
  /* 0x0004 */ enum _REFS_DEALLOCATE_RANGES_ALLOCATOR Allocator;
  /* 0x0008 */ __int64 StreamReserveUpdateCount;
  /* 0x0010 */ unsigned long OffsetToRanges;
  /* 0x0014 */ unsigned long OffsetToLeakCounts;
  /* 0x0018 */ unsigned __int64 Reserved[2];
} REFS_DEALLOCATE_RANGES_INPUT_BUFFER_EX, *PREFS_DEALLOCATE_RANGES_INPUT_BUFFER_EX; /* size: 0x0028 */

struct Windows::Foundation::Collections::IIterator_impl<Windows::Storage::Streams::IBuffer *,1>
{
}; /* size: 0x0008 */

typedef struct _RTL_HASH_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY BucketLink;
  /* 0x0008 */ unsigned __int64 Key;
} RTL_HASH_ENTRY, *PRTL_HASH_ENTRY; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESS_TRUST_LABEL_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_PROCESS_TRUST_LABEL_ACE, *PSYSTEM_PROCESS_TRUST_LABEL_ACE; /* size: 0x000c */

typedef struct _ACCESS_REASONS
{
  /* 0x0000 */ unsigned long Data[32];
} ACCESS_REASONS, *PACCESS_REASONS; /* size: 0x0080 */

typedef struct _ABCFLOAT
{
  /* 0x0000 */ float abcfA;
  /* 0x0004 */ float abcfB;
  /* 0x0008 */ float abcfC;
} ABCFLOAT, *PABCFLOAT; /* size: 0x000c */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::folder_change_reader_state *),&wil::details::delete_folder_change_reader_state,wil::details::folder_change_reader_state *>
{
}; /* size: 0x0001 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(wil::details::folder_watcher_state *),&wil::details::delete_folder_watcher_state,wil::details::folder_watcher_state *>
{
}; /* size: 0x0001 */

typedef struct _RPC_SECURITY_QOS_V5_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1300;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long Padding_1301;
  /* 0x0030 */ void* ServerSecurityDescriptor;
} RPC_SECURITY_QOS_V5_A, *PRPC_SECURITY_QOS_V5_A; /* size: 0x0038 */

typedef struct _WGLSWAP
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0008 */ unsigned int uiFlags;
  /* 0x000c */ long __PADDING__[1];
} WGLSWAP, *PWGLSWAP; /* size: 0x0010 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1302;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_A; /* size: 0x0028 */

struct IWaitMultiple
{
}; /* size: 0x0008 */

typedef struct _SEC_WINNT_AUTH_IDENTITY_A
{
  /* 0x0000 */ unsigned char* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_1303;
  /* 0x0010 */ unsigned char* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_1304;
  /* 0x0020 */ unsigned char* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_A, *PSEC_WINNT_AUTH_IDENTITY_A; /* size: 0x0030 */

struct wil::details::close_invoke_helper<1,int (__cdecl*)(void *),&FindCloseChangeNotification,void *>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&FindCloseChangeNotification,wistd::integral_constant<unsigned __int64,0>,void *,__int64,-1,void *>
{
}; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY BlockDynamicCode;
} RTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY, *PRTL_IMAGE_MITIGATION_DYNAMIC_CODE_POLICY; /* size: 0x0008 */

typedef struct _COMSTAT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long fCtsHold : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long fDsrHold : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long fRlsdHold : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long fXoffHold : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long fXoffSent : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long fEof : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long fTxim : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long fReserved : 25; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long cbInQue;
  /* 0x0008 */ unsigned long cbOutQue;
} COMSTAT, *PCOMSTAT; /* size: 0x000c */

struct tagORPC_EXTENT_ARRAY
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ struct tagORPC_EXTENT** extent;
}; /* size: 0x0010 */

struct tagORPC_EXTENT
{
  /* 0x0000 */ struct _GUID id;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _FILE_DIRECTORY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ wchar_t FileName[1];
  /* 0x0042 */ char __PADDING__[6];
} FILE_DIRECTORY_INFORMATION, *PFILE_DIRECTORY_INFORMATION; /* size: 0x0048 */

typedef struct _SE_ACCESS_REPLY
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ResultListCount;
  /* 0x0008 */ unsigned long* GrantedAccess;
  /* 0x0010 */ long* AccessStatus;
  /* 0x0018 */ struct _ACCESS_REASONS* AccessReason;
  /* 0x0020 */ struct _PRIVILEGE_SET** Privileges;
} SE_ACCESS_REPLY, *PSE_ACCESS_REPLY; /* size: 0x0028 */

typedef struct _REFS_SMR_VOLUME_INFO_OUTPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER SizeOfRandomlyWritableTier;
  /* 0x0010 */ union _LARGE_INTEGER FreeSpaceInRandomlyWritableTier;
  /* 0x0018 */ union _LARGE_INTEGER SizeofSMRTier;
  /* 0x0020 */ union _LARGE_INTEGER FreeSpaceInSMRTier;
  /* 0x0028 */ union _LARGE_INTEGER UsableFreeSpaceInSMRTier;
  /* 0x0030 */ enum _REFS_SMR_VOLUME_GC_STATE VolumeGcState;
  /* 0x0034 */ long VolumeGcLastStatus;
  /* 0x0038 */ unsigned long CurrentGcBandFillPercentage;
  /* 0x003c */ long Padding_1305;
  /* 0x0040 */ unsigned __int64 Unused[6];
} REFS_SMR_VOLUME_INFO_OUTPUT, *PREFS_SMR_VOLUME_INFO_OUTPUT; /* size: 0x0070 */

class CEnumConnectionsImpl
{
  /* 0x0000 */ long Padding_1306[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long m_curidx;
  /* 0x0010 */ class CRgPv m_rgpv;
}; /* size: 0x0020 */

struct tagUSEROBJECTFLAGS
{
  /* 0x0000 */ int fInherit;
  /* 0x0004 */ int fReserved;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

struct tagPROPERTYIDOFFSET
{
  /* 0x0000 */ unsigned long propertyID;
  /* 0x0004 */ unsigned long dwOffset;
}; /* size: 0x0008 */

struct wil::details::FeatureStorage<__WilFeatureTraits_Feature_NWMTest1,1>
{
  /* 0x0000 */ union wil_details_FeatureStateCache m_featureStateCache;
  /* 0x0008 */ struct wil_details_FeatureReportingCache m_featureReporting;
}; /* size: 0x0010 */

class wil::details::FeatureImpl<__WilFeatureTraits_Feature_NWMTest1>
{
  /* 0x0000 */ struct wil::details::FeatureStorage<__WilFeatureTraits_Feature_NWMTest1,1> m_storage;
}; /* size: 0x0010 */

typedef struct _OBJECT_TYPES_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTypes;
} OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION; /* size: 0x0004 */

class SafeIntCompare<unsigned long,unsigned __int64>
{
}; /* size: 0x0001 */

union _DL_EUI48;

class wil::details::<lambda_d209876616f5b5ccf229bbf422abd156>
{
}; /* size: 0x0001 */

typedef struct _JOBOBJECT_JOBSET_INFORMATION
{
  /* 0x0000 */ unsigned long MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION; /* size: 0x0004 */

class SafeIntCompare<unsigned long,int>
{
}; /* size: 0x0001 */

struct DICTENTRYHEADER
{
  /* 0x0000 */ unsigned long dwPropID;
  /* 0x0004 */ unsigned long cb;
}; /* size: 0x0008 */

struct DICTENTRY
{
  /* 0x0000 */ struct DICTENTRYHEADER hdr;
  /* 0x0008 */ wchar_t sz[256];
}; /* size: 0x0208 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64; /* size: 0x000c */

struct tagHELPINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iContextType;
  /* 0x0008 */ int iCtrlId;
  /* 0x000c */ long Padding_1307;
  /* 0x0010 */ void* hItemHandle;
  /* 0x0018 */ unsigned __int64 dwContextId;
  /* 0x0020 */ struct tagPOINT MousePos;
}; /* size: 0x0028 */

typedef struct _JOBOBJECT_MEMORY_USAGE_INFORMATION_V2
{
  /* 0x0000 */ struct _JOBOBJECT_MEMORY_USAGE_INFORMATION BasicInfo;
  /* 0x0010 */ unsigned __int64 JobSharedMemory;
  /* 0x0018 */ unsigned __int64 Reserved[2];
} JOBOBJECT_MEMORY_USAGE_INFORMATION_V2, *PJOBOBJECT_MEMORY_USAGE_INFORMATION_V2; /* size: 0x0028 */

typedef struct _DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int isSpecializationEnabled : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int isSpecializationAvailableForMonitor : 1; /* bit position: 1 */
      /* 0x0014 */ unsigned int isSpecializationAvailableForSystem : 1; /* bit position: 2 */
      /* 0x0014 */ unsigned int reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
} DISPLAYCONFIG_GET_MONITOR_SPECIALIZATION, *PDISPLAYCONFIG_GET_MONITOR_SPECIALIZATION; /* size: 0x0018 */

typedef struct _WIM_PROVIDER_INTEGRITY_STATUS
{
  /* 0x0000 */ unsigned char IntegrityComplete;
  /* 0x0001 */ unsigned char IntegrityRunning;
  /* 0x0002 */ char Padding_1308[6];
  /* 0x0008 */ unsigned __int64 IntegrityAvailable;
  /* 0x0010 */ unsigned __int64 IntegrityRequired;
} WIM_PROVIDER_INTEGRITY_STATUS, *PWIM_PROVIDER_INTEGRITY_STATUS; /* size: 0x0018 */

typedef struct _tagAUTHENTICATEINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} tagAUTHENTICATEINFO, *PtagAUTHENTICATEINFO; /* size: 0x0008 */

struct DISPLAYCONFIG_SOURCE_DEVICE_NAME
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ wchar_t viewGdiDeviceName[32];
}; /* size: 0x0054 */

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::folder_change_reader_state> >;

typedef struct _FILE_FS_VOLUME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeCreationTime;
  /* 0x0008 */ unsigned long VolumeSerialNumber;
  /* 0x000c */ unsigned long VolumeLabelLength;
  /* 0x0010 */ unsigned char SupportsObjects;
  /* 0x0011 */ char Padding_1309;
  /* 0x0012 */ wchar_t VolumeLabel[1];
  /* 0x0014 */ long __PADDING__[1];
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION; /* size: 0x0018 */

class wistd::__compressed_pair<wil::details::folder_change_reader_state *,wistd::default_delete<wil::details::folder_change_reader_state> >
{
}; /* size: 0x0008 */

class wistd::unique_ptr<wil::details::folder_change_reader_state,wistd::default_delete<wil::details::folder_change_reader_state> >
{
  /* 0x0000 */ class wistd::__compressed_pair<wil::details::folder_change_reader_state *,wistd::default_delete<wil::details::folder_change_reader_state> > __ptr_;
}; /* size: 0x0008 */

typedef struct _CMS_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned char* pbOID;
  /* 0x0010 */ unsigned long cbOID;
  /* 0x0014 */ long __PADDING__[1];
} CMS_KEY_INFO, *PCMS_KEY_INFO; /* size: 0x0018 */

struct $_TypeDescriptor$_extraBytes_16
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char name[16];
}; /* size: 0x0020 */

class CTGlobalAllocPolicy
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON
{
  /* 0x0000 */ unsigned char AffectedState[8];
  /* 0x0008 */ unsigned long PowerReasonCode;
  /* 0x000c */ unsigned long PowerReasonLength;
} SYSTEM_POWER_STATE_DISABLE_REASON, *PSYSTEM_POWER_STATE_DISABLE_REASON; /* size: 0x0010 */

class CTSmartObj<unsigned short *,CTSmartPtr_PolicyComplete<CTContainer_PolicyLocalMem> >
{
  /* 0x0000 */ wchar_t* _obj;
}; /* size: 0x0008 */

typedef struct __vc_attributes::defaultAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::defaultAttribute, *P_vc_attributes::defaultAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::defaultbindAttribute
{
} _vc_attributes::defaultbindAttribute, *P_vc_attributes::defaultbindAttribute; /* size: 0x0001 */

struct wistd::unique_ptr<wil::details::folder_watcher_state,wistd::default_delete<wil::details::folder_watcher_state> >::__nat;

struct wistd::__unique_ptr_deleter_sfinae<wistd::default_delete<wil::details::folder_watcher_state> >;

typedef struct _PO_WAKE_SOURCE_DEVICE
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ wchar_t InstancePath[1];
  /* 0x000a */ char __PADDING__[2];
} PO_WAKE_SOURCE_DEVICE, *PPO_WAKE_SOURCE_DEVICE; /* size: 0x000c */

typedef struct __vc_attributes::ptrAttribute
{
} _vc_attributes::ptrAttribute, *P_vc_attributes::ptrAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::cpp_quoteAttribute
{
  /* 0x0000 */ const char* string;
} _vc_attributes::cpp_quoteAttribute, *P_vc_attributes::cpp_quoteAttribute; /* size: 0x0008 */

typedef struct _SYSTEM_VA_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 VirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualPeak;
  /* 0x0010 */ unsigned __int64 VirtualLimit;
  /* 0x0018 */ unsigned __int64 AllocationFailures;
} SYSTEM_VA_LIST_INFORMATION, *PSYSTEM_VA_LIST_INFORMATION; /* size: 0x0020 */

typedef struct _PROCESS_ACCESS_TOKEN
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ void* Thread;
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN; /* size: 0x0010 */

typedef struct __vc_attributes::coclassAttribute
{
} _vc_attributes::coclassAttribute, *P_vc_attributes::coclassAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::lcidAttribute
{
} _vc_attributes::lcidAttribute, *P_vc_attributes::lcidAttribute; /* size: 0x0001 */

struct ASSOCIATIONELEMENT
{
  /* 0x0000 */ enum ASSOCCLASS ac;
  /* 0x0004 */ long Padding_1310;
  /* 0x0008 */ struct HKEY__* hkClass;
  /* 0x0010 */ const wchar_t* pszClass;
}; /* size: 0x0018 */

class wil::details::<lambda_47f9ee6fb0b5755eb2ee16e9695dcbdb>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::ms_unionAttribute
{
} _vc_attributes::ms_unionAttribute, *P_vc_attributes::ms_unionAttribute; /* size: 0x0001 */

typedef struct _CRYPT_AES_256_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[32];
  /* 0x0020 */ unsigned char IV[16];
  /* 0x0030 */ unsigned char EncryptionState[16][15];
  /* 0x0120 */ unsigned char DecryptionState[16][15];
  /* 0x0210 */ unsigned char Feedback[16];
} CRYPT_AES_256_KEY_STATE, *PCRYPT_AES_256_KEY_STATE; /* size: 0x0220 */

struct wistd::__compressed_pair_elem<wil::details::folder_watcher_state *,0,0>
{
  /* 0x0000 */ struct wil::details::folder_watcher_state* __value_;
}; /* size: 0x0008 */

class wil::unique_struct<_TOKEN_LINKED_TOKEN,void (__cdecl*)(_TOKEN_LINKED_TOKEN *) noexcept,&wil::details::CloseTokenLinkedToken,std::nullptr_t,0>
{
}; /* size: 0x0008 */

struct wistd::__compressed_pair_elem<wistd::default_delete<wil::details::folder_watcher_state>,1,1>
{
}; /* size: 0x0001 */

struct __lc_time_data;

typedef struct __vc_attributes::uidefaultAttribute
{
} _vc_attributes::uidefaultAttribute, *P_vc_attributes::uidefaultAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::publicAttribute
{
} _vc_attributes::publicAttribute, *P_vc_attributes::publicAttribute; /* size: 0x0001 */

struct lconv;

typedef struct __vc_attributes::helper_attributes::notify_atlprovAttribute
{
} _vc_attributes::helper_attributes::notify_atlprovAttribute, *P_vc_attributes::helper_attributes::notify_atlprovAttribute; /* size: 0x0001 */

typedef struct _SYSTEM_PROCESS_ID_INFORMATION
{
  /* 0x0000 */ void* ProcessId;
  /* 0x0008 */ struct _UNICODE_STRING ImageName;
} SYSTEM_PROCESS_ID_INFORMATION, *PSYSTEM_PROCESS_ID_INFORMATION; /* size: 0x0018 */

typedef struct __vc_attributes::helper_attributes::help_stringAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::helper_attributes::help_stringAttribute, *P_vc_attributes::helper_attributes::help_stringAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::helper_attributes::requires_valueAttribute
{
} _vc_attributes::helper_attributes::requires_valueAttribute, *P_vc_attributes::helper_attributes::requires_valueAttribute; /* size: 0x0001 */

struct ISynchronize
{
}; /* size: 0x0008 */

typedef struct _PSFEATURE_CUSTPAPER
{
  /* 0x0000 */ long lOrientation;
  /* 0x0004 */ long lWidth;
  /* 0x0008 */ long lHeight;
  /* 0x000c */ long lWidthOffset;
  /* 0x0010 */ long lHeightOffset;
} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER; /* size: 0x0014 */

typedef struct __vc_attributes::helper_attributes::as_stringAttribute
{
} _vc_attributes::helper_attributes::as_stringAttribute, *P_vc_attributes::helper_attributes::as_stringAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ const int Typedef;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::helper_attributes::source_annotation_attributeAttribute, *P_vc_attributes::helper_attributes::source_annotation_attributeAttribute; /* size: 0x0008 */

typedef struct _stat32i64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1311[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_1312;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ long st_atime;
  /* 0x0024 */ long st_mtime;
  /* 0x0028 */ long st_ctime;
  /* 0x002c */ long __PADDING__[1];
} stat32i64, *Pstat32i64; /* size: 0x0030 */

typedef struct __vc_attributes::helper_attributes::attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ BOOL Inherited;
  /* 0x0006 */ char __PADDING__[2];
} _vc_attributes::helper_attributes::attributeAttribute, *P_vc_attributes::helper_attributes::attributeAttribute; /* size: 0x0008 */

typedef struct _FILE_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<INotARealInterface> const >;

struct wil::next_entry_offset_iterator<_FILE_NOTIFY_INFORMATION>
{
  /* 0x0000 */ struct _FILE_NOTIFY_INFORMATION* current_;
}; /* size: 0x0008 */

typedef struct __vc_attributes::helper_attributes::v1_earlyAttribute
{
} _vc_attributes::helper_attributes::v1_earlyAttribute, *P_vc_attributes::helper_attributes::v1_earlyAttribute; /* size: 0x0001 */

struct INotARealInterface
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::helper_attributes::v1_nameAttribute
{
  /* 0x0000 */ const char* name;
} _vc_attributes::helper_attributes::v1_nameAttribute, *P_vc_attributes::helper_attributes::v1_nameAttribute; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObjectWindowless>::GetWindow::__l2::<lambda_3486a7fc69495c9349b1266d1aff572d>
{
  /* 0x0000 */ struct HWND__** phwnd;
}; /* size: 0x0008 */

typedef struct __vc_attributes::idl_moduleAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* dllname;
  /* 0x0010 */ const char* version;
  /* 0x0018 */ const char* uuid;
  /* 0x0020 */ const char* helpstring;
  /* 0x0028 */ int helpstringcontext;
  /* 0x002c */ int helpcontext;
  /* 0x0030 */ BOOL hidden;
  /* 0x0031 */ BOOL restricted;
  /* 0x0032 */ char __PADDING__[6];
} _vc_attributes::idl_moduleAttribute, *P_vc_attributes::idl_moduleAttribute; /* size: 0x0038 */

typedef struct __vc_attributes::last_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::last_isAttribute, *P_vc_attributes::last_isAttribute; /* size: 0x0008 */

class wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>
{
  /* 0x0000 */ const unsigned __int64 __buffer_size;
  /* 0x0008 */ union wistd::__aligned_storage<104,8,1>::type __buf_;
  /* 0x0070 */ class wistd::__function::__base<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>* __f_;
}; /* size: 0x0078 */

typedef struct __vc_attributes::importlibAttribute
{
  /* 0x0000 */ const char* tlb_file;
} _vc_attributes::importlibAttribute, *P_vc_attributes::importlibAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::inAttribute
{
} _vc_attributes::inAttribute, *P_vc_attributes::inAttribute; /* size: 0x0001 */

struct tagREGISTERWORDW
{
  /* 0x0000 */ wchar_t* lpReading;
  /* 0x0008 */ wchar_t* lpWord;
}; /* size: 0x0010 */

typedef struct __vc_attributes::switch_typeAttribute
{
  /* 0x0000 */ const char* switch_type_specifier;
} _vc_attributes::switch_typeAttribute, *P_vc_attributes::switch_typeAttribute; /* size: 0x0008 */

typedef struct _numberfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_1313;
  /* 0x0010 */ wchar_t* lpDecimalSep;
  /* 0x0018 */ wchar_t* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ long __PADDING__[1];
} numberfmtW, *PnumberfmtW; /* size: 0x0028 */

struct IXMLError
{
}; /* size: 0x0008 */

struct IMarshallingManager
{
}; /* size: 0x0008 */

struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable<<lambda_0c2afb377131ef1ab2244976d5fb45fc> >
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef struct __vc_attributes::includelibAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::includelibAttribute, *P_vc_attributes::includelibAttribute; /* size: 0x0008 */

struct wistd::function<long __cdecl(unsigned short *,unsigned __int64,unsigned __int64 *)>::__callable_imp<<lambda_0c2afb377131ef1ab2244976d5fb45fc>,1>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

typedef struct __vc_attributes::helpstringdllAttribute
{
  /* 0x0000 */ const char* dllname;
} _vc_attributes::helpstringdllAttribute, *P_vc_attributes::helpstringdllAttribute; /* size: 0x0008 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::hiddenAttribute
{
} _vc_attributes::hiddenAttribute, *P_vc_attributes::hiddenAttribute; /* size: 0x0001 */

struct wil::details::string_maker<wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > >
{
  /* 0x0000 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<unsigned short *,void * (__cdecl*)(void *),&LocalFree,wistd::integral_constant<unsigned __int64,0>,unsigned short *,unsigned short *,0,std::nullptr_t> > > m_value;
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IPersist,IPersist>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct __vc_attributes::includeAttribute
{
  /* 0x0000 */ const char* include_file;
} _vc_attributes::includeAttribute, *P_vc_attributes::includeAttribute; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Lookup::__l5::<lambda_b9bc781cf4891e97cdc64fd226d3642a>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::wire_marshalAttribute
{
  /* 0x0000 */ const char* wire_type;
} _vc_attributes::wire_marshalAttribute, *P_vc_attributes::wire_marshalAttribute; /* size: 0x0008 */

class AdHocInterceptorForwarders<IPersist,IPersist>::GetClassID::__l2::<lambda_77a2b2d0129bbc926517a2760e67553c>
{
  /* 0x0000 */ struct _GUID* pClassID;
}; /* size: 0x0008 */

typedef struct _IMAGE_DYNAMIC_RELOCATION32
{
  /* 0x0000 */ unsigned long Symbol;
  /* 0x0004 */ unsigned long BaseRelocSize;
} IMAGE_DYNAMIC_RELOCATION32, *PIMAGE_DYNAMIC_RELOCATION32; /* size: 0x0008 */

typedef struct __vc_attributes::emitidlAttribute
{
  union
  {
    /* 0x0000 */ const int restricted;
    /* 0x0000 */ const int forced;
    /* 0x0000 */ const int push;
    /* 0x0000 */ const int pop;
    /* 0x0000 */ int value;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL defaultimports;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::emitidlAttribute, *P_vc_attributes::emitidlAttribute; /* size: 0x0008 */

class wistd::__function::__func<<lambda_b791f461fdcdf6803f8b1ec4cfa018be>,bool __cdecl(void *,unsigned __int64,void *,unsigned __int64,unsigned int)>
{
  /* 0x0000 */ long Padding_1314[2];
  /* 0x0008 */ class wil::details_abi::LoadWnfUsageIndex::__l9::<lambda_b791f461fdcdf6803f8b1ec4cfa018be> __f_;
}; /* size: 0x0018 */

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemPartition;
} SYSTEM_SYSTEM_PARTITION_INFORMATION, *PSYSTEM_SYSTEM_PARTITION_INFORMATION; /* size: 0x0010 */

struct InterfaceWalkerFree
{
  /* 0x0000 */ long Padding_1315[2];
  /* 0x0008 */ struct ICallFrameWalker* m_pWalker;
}; /* size: 0x0010 */

typedef struct __vc_attributes::first_isAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::first_isAttribute, *P_vc_attributes::first_isAttribute; /* size: 0x0008 */

struct tagEMRSETARCDIRECTION
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iArcDirection;
}; /* size: 0x000c */

typedef struct _SYSTEM_REF_TRACE_INFORMATION
{
  /* 0x0000 */ unsigned char TraceEnable;
  /* 0x0001 */ unsigned char TracePermanent;
  /* 0x0002 */ char Padding_1316[6];
  /* 0x0008 */ struct _UNICODE_STRING TraceProcessName;
  /* 0x0018 */ struct _UNICODE_STRING TracePoolTags;
} SYSTEM_REF_TRACE_INFORMATION, *PSYSTEM_REF_TRACE_INFORMATION; /* size: 0x0028 */

class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerExternalReference>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct __vc_attributes::oleautomationAttribute
{
} _vc_attributes::oleautomationAttribute, *P_vc_attributes::oleautomationAttribute; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

typedef struct __vc_attributes::defaultvalueAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::defaultvalueAttribute, *P_vc_attributes::defaultvalueAttribute; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<CDragDropBroker>
{
  /* 0x0000 */ char* buffer_;
}; /* size: 0x0008 */

class wil::details::<lambda_430053700ae9b88d68da62d9ff0cf050>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::propgetAttribute
{
} _vc_attributes::propgetAttribute, *P_vc_attributes::propgetAttribute; /* size: 0x0001 */

class wil::details::<lambda_f725a7e1c10857753400300473ba37a8>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IDragDropBroker,0,0>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::defaultvtableAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::defaultvtableAttribute, *P_vc_attributes::defaultvtableAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::call_asAttribute
{
  /* 0x0000 */ void* local_proc;
} _vc_attributes::call_asAttribute, *P_vc_attributes::call_asAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::dispinterfaceAttribute
{
} _vc_attributes::dispinterfaceAttribute, *P_vc_attributes::dispinterfaceAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::exportAttribute
{
} _vc_attributes::exportAttribute, *P_vc_attributes::exportAttribute; /* size: 0x0001 */

typedef struct _KCRM_MARSHAL_HEADER
{
  /* 0x0000 */ unsigned long VersionMajor;
  /* 0x0004 */ unsigned long VersionMinor;
  /* 0x0008 */ unsigned long NumProtocols;
  /* 0x000c */ unsigned long Unused;
} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER; /* size: 0x0010 */

typedef struct __vc_attributes::hookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0008 */ const char* source;
  /* 0x0010 */ const char* handler;
  /* 0x0018 */ const char* receiver;
} _vc_attributes::hookAttribute, *P_vc_attributes::hookAttribute; /* size: 0x0020 */

typedef struct _SQM_STREAM_ENTRY
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1317;
  union
  {
    union
    {
      /* 0x0008 */ const wchar_t* pwszVal;
      /* 0x0008 */ unsigned long dwVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ val;
} SQM_STREAM_ENTRY, *PSQM_STREAM_ENTRY; /* size: 0x0010 */

struct wistd::__invoke_void_return_wrapper<bool>
{
}; /* size: 0x0001 */

class wil::details::unique_storage<wil::details::resource_policy<void *,void (__cdecl*)(void *),&wil::details::RevertImpersonateToken,wistd::integral_constant<unsigned __int64,2>,void *,__int64,-1,void *> >
{
  /* 0x0000 */ void* m_ptr;
}; /* size: 0x0008 */

struct wistd::__invoke_void_return_wrapper<long>
{
}; /* size: 0x0001 */

struct wil::details::resource_policy<void *,int (__cdecl*)(void *),&FindClose,wistd::integral_constant<unsigned __int64,0>,void *,__int64,-1,void *>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::atl::db_columnAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0008 */ const char* dbtype;
  /* 0x0010 */ const char* precision;
  /* 0x0018 */ const char* scale;
  /* 0x0020 */ const char* status;
  /* 0x0028 */ const char* length;
} _vc_attributes::atl::db_columnAttribute, *P_vc_attributes::atl::db_columnAttribute; /* size: 0x0030 */

typedef struct __vc_attributes::atl::soap_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* namespace;
  /* 0x0010 */ const char* protocol;
  /* 0x0018 */ const char* style;
  /* 0x0020 */ const char* use;
} _vc_attributes::atl::soap_handlerAttribute, *P_vc_attributes::atl::soap_handlerAttribute; /* size: 0x0028 */

class ImagePath
{
}; /* size: 0x0001 */

class CTHeapAllocPolicy
{
}; /* size: 0x0001 */

class wil::details::<lambda_a74ea9c4f4581fcfb226a1cd0bef07a8>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::atl::com_interface_entryAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::com_interface_entryAttribute, *P_vc_attributes::atl::com_interface_entryAttribute; /* size: 0x0008 */

class wil::details::<lambda_cb2b7e4968d7aedd052fd4c9f97fd424>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::atl::db_sourceAttribute
{
  /* 0x0000 */ const char* source;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* hresult;
} _vc_attributes::atl::db_sourceAttribute, *P_vc_attributes::atl::db_sourceAttribute; /* size: 0x0018 */

typedef struct __vc_attributes::atl::aggregatesAttribute
{
  /* 0x0000 */ const char* clsid;
} _vc_attributes::atl::aggregatesAttribute, *P_vc_attributes::atl::aggregatesAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::atl::db_tableAttribute
{
  /* 0x0000 */ const char* table;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* source_name;
  /* 0x0018 */ const char* hresult;
  /* 0x0020 */ const char* bulk_fetch;
} _vc_attributes::atl::db_tableAttribute, *P_vc_attributes::atl::db_tableAttribute; /* size: 0x0028 */

typedef struct __vc_attributes::atl::soap_headerAttribute
{
  /* 0x0000 */ const char* value;
  /* 0x0008 */ BOOL required;
  /* 0x0009 */ BOOL in;
  /* 0x000a */ BOOL out;
  /* 0x000b */ char __PADDING__[5];
} _vc_attributes::atl::soap_headerAttribute, *P_vc_attributes::atl::soap_headerAttribute; /* size: 0x0010 */

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW
{
  /* 0x0000 */ wchar_t* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOW, *PSERVICE_REQUIRED_PRIVILEGES_INFOW; /* size: 0x0008 */

typedef struct __vc_attributes::atl::db_commandAttribute
{
  /* 0x0000 */ const char* command;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* source_name;
  /* 0x0018 */ const char* hresult;
  /* 0x0020 */ const char* bindings;
  /* 0x0028 */ const char* bulk_fetch;
} _vc_attributes::atl::db_commandAttribute, *P_vc_attributes::atl::db_commandAttribute; /* size: 0x0030 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics>* ptr_;
}; /* size: 0x0008 */

typedef struct __vc_attributes::atl::tag_nameAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* parse_func;
} _vc_attributes::atl::tag_nameAttribute, *P_vc_attributes::atl::tag_nameAttribute; /* size: 0x0010 */

typedef struct _CONTAINER_ROOT_INFO_OUTPUT
{
  /* 0x0000 */ unsigned short ContainerRootIdLength;
  /* 0x0002 */ unsigned char ContainerRootId[1];
  /* 0x0003 */ char __PADDING__[1];
} CONTAINER_ROOT_INFO_OUTPUT, *PCONTAINER_ROOT_INFO_OUTPUT; /* size: 0x0004 */

typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V1
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Algorithm;
  /* 0x0008 */ unsigned long Flags;
} FILE_PROVIDER_EXTERNAL_INFO_V1, *PFILE_PROVIDER_EXTERNAL_INFO_V1; /* size: 0x000c */

typedef struct __vc_attributes::atl::rdxAttribute
{
  /* 0x0000 */ const char* key;
  /* 0x0008 */ const char* valuename;
  /* 0x0010 */ const char* regtype;
} _vc_attributes::atl::rdxAttribute, *P_vc_attributes::atl::rdxAttribute; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics> >
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::atl::perf_counterAttribute
{
  /* 0x0000 */ const char* namestring;
  /* 0x0008 */ const char* helpstring;
  /* 0x0010 */ int name_res;
  /* 0x0014 */ int help_res;
  /* 0x0018 */ int countertype;
  /* 0x001c */ int defscale;
  /* 0x0020 */ BOOL default_counter;
  /* 0x0021 */ char Padding_1318[3];
  /* 0x0024 */ int detail;
  /* 0x0028 */ int max_counter_size;
  /* 0x002c */ long Padding_1319;
  /* 0x0030 */ const char* countertype_string;
} _vc_attributes::atl::perf_counterAttribute, *P_vc_attributes::atl::perf_counterAttribute; /* size: 0x0038 */

struct EnumVerbCache
{
  /* 0x0000 */ class CEnumVerb* pEnum;
}; /* size: 0x0008 */

typedef struct _NCRYPT_PLATFORM_ATTEST_PADDING_INFO
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long pcrMask;
} NCRYPT_PLATFORM_ATTEST_PADDING_INFO, *PNCRYPT_PLATFORM_ATTEST_PADDING_INFO; /* size: 0x0008 */

class CEnumVerb
{
  /* 0x0000 */ long Padding_1320[2];
  /* 0x0008 */ unsigned long m_cRef;
  /* 0x000c */ long m_iVerb;
  /* 0x0010 */ struct VerbList* m_VerbList;
}; /* size: 0x0018 */

struct VerbList
{
  /* 0x0000 */ unsigned long cRef;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long cVerbs;
  /* 0x0018 */ struct tagOLEVERB oleverb[1];
}; /* size: 0x0030 */

typedef struct __vc_attributes::atl::requires_categoryAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::requires_categoryAttribute, *P_vc_attributes::atl::requires_categoryAttribute; /* size: 0x0008 */

typedef struct _FLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct tagSTGMEDIUM Stgmed;
} FLAG_STGMEDIUM, *PFLAG_STGMEDIUM; /* size: 0x0020 */

typedef struct __vc_attributes::noncreatableAttribute
{
} _vc_attributes::noncreatableAttribute, *P_vc_attributes::noncreatableAttribute; /* size: 0x0001 */

class wil::details::<lambda_d5e0fb0d03f8da8c44bdcbf9a859e563>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::defaultcollelemAttribute
{
} _vc_attributes::defaultcollelemAttribute, *P_vc_attributes::defaultcollelemAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::odlAttribute
{
} _vc_attributes::odlAttribute, *P_vc_attributes::odlAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::switch_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
} _vc_attributes::switch_isAttribute, *P_vc_attributes::switch_isAttribute; /* size: 0x0008 */

struct IOleVerbIterator
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IOleVerbIterator>;

struct tagHDIBFILEHDR
{
  /* 0x0000 */ unsigned long dwCompression;
  /* 0x0004 */ unsigned long dwWidth;
  /* 0x0008 */ unsigned long dwHeight;
  /* 0x000c */ unsigned long dwSize;
}; /* size: 0x0010 */

typedef struct __vc_attributes::helpstringAttribute
{
  /* 0x0000 */ const char* help_text_string;
} _vc_attributes::helpstringAttribute, *P_vc_attributes::helpstringAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::unhookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0008 */ const char* source;
  /* 0x0010 */ const char* handler;
  /* 0x0018 */ const char* receiver;
} _vc_attributes::unhookAttribute, *P_vc_attributes::unhookAttribute; /* size: 0x0020 */

typedef struct __vc_attributes::progidAttribute
{
  /* 0x0000 */ const char* name;
} _vc_attributes::progidAttribute, *P_vc_attributes::progidAttribute; /* size: 0x0008 */

struct tagPROPHEADER
{
  /* 0x0000 */ unsigned short wByteOrder;
  /* 0x0002 */ unsigned short wFormat;
  /* 0x0004 */ unsigned long dwOSVer;
  /* 0x0008 */ struct _GUID clsID;
  /* 0x0018 */ unsigned long cSections;
}; /* size: 0x001c */

typedef struct __vc_attributes::versionAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::versionAttribute, *P_vc_attributes::versionAttribute; /* size: 0x0008 */

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _OCSP_SIGNATURE_INFO SignatureInfo;
} OCSP_BASIC_SIGNED_RESPONSE_INFO, *POCSP_BASIC_SIGNED_RESPONSE_INFO; /* size: 0x0050 */

typedef struct __vc_attributes::dualAttribute
{
} _vc_attributes::dualAttribute, *P_vc_attributes::dualAttribute; /* size: 0x0001 */

typedef struct _RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY ControlFlowGuard;
  /* 0x0008 */ union _RTL_IMAGE_MITIGATION_POLICY StrictControlFlowGuard;
} RTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY, *PRTL_IMAGE_MITIGATION_CONTROL_FLOW_GUARD_POLICY; /* size: 0x0010 */

typedef struct __vc_attributes::implementsAttribute
{
  /* 0x0000 */ const char* interfaces;
  /* 0x0008 */ const char* dispinterfaces;
} _vc_attributes::implementsAttribute, *P_vc_attributes::implementsAttribute; /* size: 0x0010 */

typedef struct __vc_attributes::localAttribute
{
} _vc_attributes::localAttribute, *P_vc_attributes::localAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::pointer_defaultAttribute
{
  /* 0x0000 */ enum __vc_attributes::pointer_defaultAttribute::type_e type;
} _vc_attributes::pointer_defaultAttribute, *P_vc_attributes::pointer_defaultAttribute; /* size: 0x0004 */

struct wistd::unique_ptr<VerbList,wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree> >::__nat;

typedef struct __vc_attributes::requesteditAttribute
{
} _vc_attributes::requesteditAttribute, *P_vc_attributes::requesteditAttribute; /* size: 0x0001 */

typedef struct _TRANSACTION_LIST_ENTRY
{
  /* 0x0000 */ struct _GUID UOW;
} TRANSACTION_LIST_ENTRY, *PTRANSACTION_LIST_ENTRY; /* size: 0x0010 */

typedef struct _TRANSACTION_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTransactions;
  /* 0x0004 */ struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
} TRANSACTION_LIST_INFORMATION, *PTRANSACTION_LIST_INFORMATION; /* size: 0x0014 */

typedef struct _RPC_SERVER_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ long Padding_1321;
  /* 0x0030 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0038 */ unsigned int RpcProtseqEndpointCount;
  /* 0x003c */ long Padding_1322;
  /* 0x0040 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0048 */ void* DefaultManagerEpv;
  /* 0x0050 */ const void* InterpreterInfo;
  /* 0x0058 */ unsigned int Flags;
  /* 0x005c */ long __PADDING__[1];
} RPC_SERVER_INTERFACE, *PRPC_SERVER_INTERFACE; /* size: 0x0060 */

typedef struct _RPC_PROTSEQ_ENDPOINT
{
  /* 0x0000 */ unsigned char* RpcProtocolSequence;
  /* 0x0008 */ unsigned char* Endpoint;
} RPC_PROTSEQ_ENDPOINT, *PRPC_PROTSEQ_ENDPOINT; /* size: 0x0010 */

typedef struct __vc_attributes::pragmaAttribute
{
  /* 0x0000 */ const char* token_sequence;
} _vc_attributes::pragmaAttribute, *P_vc_attributes::pragmaAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::appobjectAttribute
{
} _vc_attributes::appobjectAttribute, *P_vc_attributes::appobjectAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::retvalAttribute
{
} _vc_attributes::retvalAttribute, *P_vc_attributes::retvalAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::uuidAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::uuidAttribute, *P_vc_attributes::uuidAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::entryAttribute
{
  /* 0x0000 */ const char* entry_id;
} _vc_attributes::entryAttribute, *P_vc_attributes::entryAttribute; /* size: 0x0008 */

class std::_Compressed_pair<std::default_delete<tagOLEVERB [0]>,tagOLEVERB *,1>
{
  /* 0x0000 */ struct tagOLEVERB* _Myval2;
}; /* size: 0x0008 */

class std::unique_ptr<tagOLEVERB [0],std::default_delete<tagOLEVERB [0]> >
{
  /* 0x0000 */ class std::_Compressed_pair<std::default_delete<tagOLEVERB [0]>,tagOLEVERB *,1> _Mypair;
}; /* size: 0x0008 */

typedef struct __vc_attributes::helpfileAttribute
{
  /* 0x0000 */ const char* filename;
} _vc_attributes::helpfileAttribute, *P_vc_attributes::helpfileAttribute; /* size: 0x0008 */

struct std::default_delete<tagOLEVERB [0]>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::async_uuidAttribute
{
  /* 0x0000 */ const char* uuid;
} _vc_attributes::async_uuidAttribute, *P_vc_attributes::async_uuidAttribute; /* size: 0x0008 */

struct IComServices
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::uniqueAttribute
{
} _vc_attributes::uniqueAttribute, *P_vc_attributes::uniqueAttribute; /* size: 0x0001 */

typedef struct _WOF_VERSION_INFO
{
  /* 0x0000 */ unsigned long WofVersion;
} WOF_VERSION_INFO, *PWOF_VERSION_INFO; /* size: 0x0004 */

typedef struct __vc_attributes::vi_progidAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::vi_progidAttribute, *P_vc_attributes::vi_progidAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::providerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* uuid;
  /* 0x0010 */ int cookies;
  /* 0x0014 */ long __PADDING__[1];
} _vc_attributes::providerAttribute, *P_vc_attributes::providerAttribute; /* size: 0x0018 */

typedef struct __vc_attributes::refAttribute
{
} _vc_attributes::refAttribute, *P_vc_attributes::refAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::usesgetlasterrorAttribute
{
} _vc_attributes::usesgetlasterrorAttribute, *P_vc_attributes::usesgetlasterrorAttribute; /* size: 0x0001 */

typedef struct _SYSTEM_DIF_VOLATILE_INFORMATION_V2
{
  /* 0x0000 */ unsigned long RuleClasses[2];
  /* 0x0008 */ unsigned long VerifierOption;
  /* 0x000c */ unsigned long TriageContext;
  /* 0x0010 */ unsigned long PoolTags[10];
} SYSTEM_DIF_VOLATILE_INFORMATION_V2, *PSYSTEM_DIF_VOLATILE_INFORMATION_V2; /* size: 0x0038 */

typedef struct __vc_attributes::importAttribute
{
  /* 0x0000 */ const char* idl_file;
} _vc_attributes::importAttribute, *P_vc_attributes::importAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::outAttribute
{
} _vc_attributes::outAttribute, *P_vc_attributes::outAttribute; /* size: 0x0001 */

typedef struct _QUERY_FILE_LAYOUT_INPUT
{
  union
  {
    /* 0x0000 */ unsigned long FilterEntryCount;
    /* 0x0000 */ unsigned long NumberOfPairs;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ enum _QUERY_FILE_LAYOUT_FILTER_TYPE FilterType;
  /* 0x000c */ unsigned long Reserved;
  union
  {
    union
    {
      /* 0x0010 */ struct _CLUSTER_RANGE ClusterRanges[1];
      /* 0x0010 */ struct _FILE_REFERENCE_RANGE FileReferenceRanges[1];
      /* 0x0010 */ enum _STORAGE_RESERVE_ID StorageReserveIds[1];
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Filter;
} QUERY_FILE_LAYOUT_INPUT, *PQUERY_FILE_LAYOUT_INPUT; /* size: 0x0020 */

struct wistd::__compressed_pair_elem<wil::function_deleter<void (__cdecl*)(void *),&PrivMemFree>,1,1>
{
}; /* size: 0x0001 */

class wil::details::<lambda_e7267742e4808ea59b03f0a98e0b174e>
{
}; /* size: 0x0001 */

struct IComServices2
{
}; /* size: 0x0008 */

typedef struct _CRYPTPROTECT_PROMPTSTRUCT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwPromptFlags;
  /* 0x0008 */ struct HWND__* hwndApp;
  /* 0x0010 */ const wchar_t* szPrompt;
} CRYPTPROTECT_PROMPTSTRUCT, *PCRYPTPROTECT_PROMPTSTRUCT; /* size: 0x0018 */

struct NTFS_EXTENDED_VOLUME_DATA
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned long BytesPerPhysicalSector;
  /* 0x000c */ unsigned short LfsMajorVersion;
  /* 0x000e */ unsigned short LfsMinorVersion;
  /* 0x0010 */ unsigned long MaxDeviceTrimExtentCount;
  /* 0x0014 */ unsigned long MaxDeviceTrimByteCount;
  /* 0x0018 */ unsigned long MaxVolumeTrimExtentCount;
  /* 0x001c */ unsigned long MaxVolumeTrimByteCount;
}; /* size: 0x0020 */

typedef struct _JOBOBJECT_INTERFERENCE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Count;
} JOBOBJECT_INTERFERENCE_INFORMATION, *PJOBOBJECT_INTERFERENCE_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_KERNEL_DEBUGGER_FLAGS
{
  /* 0x0000 */ unsigned char KernelDebuggerIgnoreUmExceptions;
} SYSTEM_KERNEL_DEBUGGER_FLAGS, *PSYSTEM_KERNEL_DEBUGGER_FLAGS; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IDataObjectEx>
{
  /* 0x0000 */ struct IDataObjectEx* ptr_;
}; /* size: 0x0008 */

typedef struct _SYSTEM_FIRMWARE_PARTITION_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING FirmwarePartition;
} SYSTEM_FIRMWARE_PARTITION_INFORMATION, *PSYSTEM_FIRMWARE_PARTITION_INFORMATION; /* size: 0x0010 */

typedef struct _CRL_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long cDistPoint;
  /* 0x0004 */ long Padding_1323;
  /* 0x0008 */ struct _CRL_DIST_POINT* rgDistPoint;
} CRL_DIST_POINTS_INFO, *PCRL_DIST_POINTS_INFO; /* size: 0x0010 */

typedef struct _FILE_NOTIFY_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastModificationTime;
  /* 0x0018 */ union _LARGE_INTEGER LastChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0028 */ union _LARGE_INTEGER AllocatedLength;
  /* 0x0030 */ union _LARGE_INTEGER FileSize;
  /* 0x0038 */ unsigned long FileAttributes;
  union
  {
    /* 0x003c */ unsigned long ReparsePointTag;
    /* 0x003c */ unsigned long EaSize;
  }; /* size: 0x0004 */
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ union _LARGE_INTEGER ParentFileId;
  /* 0x0050 */ unsigned short FileNameLength;
  /* 0x0052 */ unsigned char FileNameFlags;
  /* 0x0053 */ unsigned char Reserved;
  /* 0x0054 */ wchar_t FileName[1];
  /* 0x0056 */ char __PADDING__[2];
} FILE_NOTIFY_FULL_INFORMATION, *PFILE_NOTIFY_FULL_INFORMATION; /* size: 0x0058 */

typedef struct _CERT_ALT_NAME_ENTRY
{
  /* 0x0000 */ unsigned long dwAltNameChoice;
  /* 0x0004 */ long Padding_1324;
  union
  {
    /* 0x0008 */ struct _CERT_OTHER_NAME* pOtherName;
    /* 0x0008 */ wchar_t* pwszRfc822Name;
    /* 0x0008 */ wchar_t* pwszDNSName;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB DirectoryName;
    /* 0x0008 */ wchar_t* pwszURL;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB IPAddress;
    struct
    {
      /* 0x0008 */ char* pszRegisteredID;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} CERT_ALT_NAME_ENTRY, *PCERT_ALT_NAME_ENTRY; /* size: 0x0018 */

typedef struct _CERT_OTHER_NAME
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_OTHER_NAME, *PCERT_OTHER_NAME; /* size: 0x0018 */

typedef struct _MEMORY_PHYSICAL_CONTIGUITY_INFORMATION
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned __int64 ContiguityUnitSize;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_1325;
  /* 0x0020 */ struct _MEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION* ContiguityUnitInformation;
} MEMORY_PHYSICAL_CONTIGUITY_INFORMATION, *PMEMORY_PHYSICAL_CONTIGUITY_INFORMATION; /* size: 0x0028 */

struct RETRIEVAL_POINTERS_AND_REFCOUNT_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ long Padding_1326;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER NextVcn;
    /* 0x0018 */ union _LARGE_INTEGER Lcn;
    /* 0x0020 */ unsigned long ReferenceCount;
    /* 0x0024 */ long __PADDING__[1];
  } /* size: 0x0018 */ Extents[1];
}; /* size: 0x0028 */

typedef struct __NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT
{
  /* 0x0000 */ unsigned int Magic;
  /* 0x0004 */ unsigned int Version;
  /* 0x0008 */ unsigned int HeaderSize;
  /* 0x000c */ unsigned int cbCertifyInfo;
  /* 0x0010 */ unsigned int cbSignature;
  /* 0x0014 */ unsigned int cbTpmPublic;
} _NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT, *P_NCRYPT_PCP_TPM_WEB_AUTHN_ATTESTATION_STATEMENT; /* size: 0x0018 */

typedef struct _MEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long State : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AllInformation;
  }; /* size: 0x0004 */
} MEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION, *PMEMORY_PHYSICAL_CONTIGUITY_UNIT_INFORMATION; /* size: 0x0004 */

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS
{
  /* 0x0000 */ unsigned __int64 hCryptProv;
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ long Padding_1327;
  /* 0x0010 */ char* pszPrivateKeyObjId;
  /* 0x0018 */ void* pEncryptPrivateKeyFunc /* function */;
  /* 0x0020 */ void* pVoidEncryptFunc;
} CRYPT_PKCS8_EXPORT_PARAMS, *PCRYPT_PKCS8_EXPORT_PARAMS; /* size: 0x0028 */

struct tagMENUINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ unsigned long dwStyle;
  /* 0x000c */ unsigned int cyMax;
  /* 0x0010 */ struct HBRUSH__* hbrBack;
  /* 0x0018 */ unsigned long dwContextHelpID;
  /* 0x001c */ long Padding_1328;
  /* 0x0020 */ unsigned __int64 dwMenuData;
}; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObjectEx> >
{
}; /* size: 0x0008 */

typedef struct _ICONINFOEXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
  /* 0x0020 */ unsigned short wResID;
  /* 0x0022 */ char szModName[260];
  /* 0x0126 */ char szResName[260];
  /* 0x022a */ char __PADDING__[6];
} ICONINFOEXA, *PICONINFOEXA; /* size: 0x0230 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long Padding_1329;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION_EX, *PPROCESS_DEVICEMAP_INFORMATION_EX; /* size: 0x0030 */

class CBrokeredClipDataObject::GetCanonicalFormatEtc::__l8::<lambda_081b6c7677eb82075ed79974a043e870>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ struct tagFORMATETC*& pformatetc;
  /* 0x0010 */ struct tagFORMATETC*& pformatetcOut;
}; /* size: 0x0018 */

typedef struct _SYSTEM_VSM_PROTECTION_INFORMATION
{
  /* 0x0000 */ unsigned char DmaProtectionsAvailable;
  /* 0x0001 */ unsigned char DmaProtectionsInUse;
  /* 0x0002 */ unsigned char HardwareMbecAvailable;
  /* 0x0003 */ unsigned char ApicVirtualizationAvailable;
} SYSTEM_VSM_PROTECTION_INFORMATION, *PSYSTEM_VSM_PROTECTION_INFORMATION; /* size: 0x0004 */

struct tagAUDIODESCRIPTION
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int Enabled;
  /* 0x0008 */ unsigned long Locale;
}; /* size: 0x000c */

typedef struct _SERVICE_FAILURE_ACTIONSW
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ long Padding_1330;
  /* 0x0008 */ wchar_t* lpRebootMsg;
  /* 0x0010 */ wchar_t* lpCommand;
  /* 0x0018 */ unsigned long cActions;
  /* 0x001c */ long Padding_1331;
  /* 0x0020 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSW, *PSERVICE_FAILURE_ACTIONSW; /* size: 0x0028 */

typedef struct _CMC_PEND_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PendToken;
  /* 0x0010 */ struct _FILETIME PendTime;
} CMC_PEND_INFO, *PCMC_PEND_INFO; /* size: 0x0018 */

typedef struct _IMAGE_RESOURCE_DIR_STRING_U
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ wchar_t NameString[1];
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U; /* size: 0x0004 */

struct NCryptProviderName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszComment;
}; /* size: 0x0010 */

typedef struct _PUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
} PUBKEY, *PPUBKEY; /* size: 0x0008 */

struct tagBITMAPFILEHEADER
{
  /* 0x0000 */ unsigned short bfType;
  /* 0x0002 */ unsigned long bfSize;
  /* 0x0006 */ unsigned short bfReserved1;
  /* 0x0008 */ unsigned short bfReserved2;
  /* 0x000a */ unsigned long bfOffBits;
}; /* size: 0x000e */

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION; /* size: 0x0008 */

typedef struct _SINGLE_LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Next;
} SINGLE_LIST_ENTRY32, *PSINGLE_LIST_ENTRY32; /* size: 0x0004 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::ShutDown::__l2::<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>
{
}; /* size: 0x0001 */

typedef struct _EVENTLOG_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long dwFull;
} EVENTLOG_FULL_INFORMATION, *PEVENTLOG_FULL_INFORMATION; /* size: 0x0004 */

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA
{
  /* 0x0000 */ char* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOA, *PSERVICE_REQUIRED_PRIVILEGES_INFOA; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::ReactivateAndUndo::__l2::<lambda_9f5ff7c0875bbd6db2722caf2496ccad>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::FileHandleTraits>;

struct Microsoft::WRL::Details::RemoveReference<Microsoft::WRL::Wrappers::Event &>
{
}; /* size: 0x0001 */

typedef struct _DELETE_STORAGE_RESERVE_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long AreaIdOffset;
  /* 0x000c */ unsigned long AreaIdCount;
  /* 0x0010 */ enum _STORAGE_RESERVE_ID AreaId[1];
} DELETE_STORAGE_RESERVE_INPUT, *PDELETE_STORAGE_RESERVE_INPUT; /* size: 0x0014 */

class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Detach::__l2::<lambda_d914c7f54183b33a257332a7d99c0d41>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::RemoveReference<Microsoft::WRL::Wrappers::Semaphore &>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION
{
  /* 0x0000 */ enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
} SYSTEM_CRASH_DUMP_STATE_INFORMATION, *PSYSTEM_CRASH_DUMP_STATE_INFORMATION; /* size: 0x0004 */

typedef struct _QUERY_FILE_LAYOUT_OUTPUT
{
  /* 0x0000 */ unsigned long FileEntryCount;
  /* 0x0004 */ unsigned long FirstFileOffset;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
} QUERY_FILE_LAYOUT_OUTPUT, *PQUERY_FILE_LAYOUT_OUTPUT; /* size: 0x0010 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::CloseAccessor::__l2::<lambda_c3d9c36ff6c5e276434071298f6b4b2c>
{
  /* 0x0000 */ struct IUrlAccessor* pAccessor;
}; /* size: 0x0008 */

typedef struct _QUAD
{
  union
  {
    /* 0x0000 */ __int64 UseThisFieldToCopy;
    /* 0x0000 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
} QUAD, *PQUAD; /* size: 0x0008 */

struct HIMCC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::CreateAccessor::__l2::<lambda_c0fa3d92ef3684ffb99dddd895e07e56>
{
  /* 0x0000 */ const wchar_t* pcwszURL;
  /* 0x0008 */ struct _AUTHENTICATION_INFO* pAuthenticationInfo;
  /* 0x0010 */ struct _INCREMENTAL_ACCESS_INFO* pIncrementalAccessInfo;
  /* 0x0018 */ struct _ITEM_INFO* pItemInfo;
  /* 0x0020 */ struct IUrlAccessor** ppAccessor;
}; /* size: 0x0028 */

typedef struct _COUNTED_REASON_CONTEXT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    struct
    {
      /* 0x0008 */ struct _UNICODE_STRING ResourceFileName;
      /* 0x0018 */ unsigned short ResourceReasonId;
      /* 0x001a */ char Padding_1332[2];
      /* 0x001c */ unsigned long StringCount;
      /* 0x0020 */ struct _UNICODE_STRING* ReasonStrings;
    }; /* size: 0x001e */
    struct
    {
      /* 0x0008 */ struct _UNICODE_STRING SimpleString;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} COUNTED_REASON_CONTEXT, *PCOUNTED_REASON_CONTEXT; /* size: 0x0028 */

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfObjects;
  /* 0x0008 */ unsigned long NumberOfHandles;
  /* 0x000c */ unsigned long TypeIndex;
  /* 0x0010 */ unsigned long InvalidAttributes;
  /* 0x0014 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0024 */ unsigned long ValidAccessMask;
  /* 0x0028 */ unsigned long PoolType;
  /* 0x002c */ unsigned char SecurityRequired;
  /* 0x002d */ unsigned char WaitableObject;
  /* 0x002e */ char Padding_1333[2];
  /* 0x0030 */ struct _UNICODE_STRING TypeName;
} SYSTEM_OBJECTTYPE_INFORMATION, *PSYSTEM_OBJECTTYPE_INFORMATION; /* size: 0x0040 */

struct IXMLDOMNotation
{
}; /* size: 0x0008 */

struct tagHARDWAREHOOKSTRUCT
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ long Padding_1334;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
}; /* size: 0x0020 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::Init::__l2::<lambda_eb81b7dcb3076a64e0db4008f1f3b137>
{
  /* 0x0000 */ struct _TIMEOUT_INFO* pTimeoutInfo;
  /* 0x0008 */ struct IProtocolHandlerSite* pProtocolHandlerSite;
  /* 0x0010 */ struct _PROXY_INFO* pProxyInfo;
}; /* size: 0x0018 */

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ unsigned long dwUnauthAttrIndex;
} CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x000c */

typedef struct _FLOAT128
{
  /* 0x0000 */ __int64 LowPart;
  /* 0x0008 */ __int64 HighPart;
} FLOAT128, *PFLOAT128; /* size: 0x0010 */

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE; /* size: 0x000c */

typedef struct _PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ void* Ssp;
} PROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION, *PPROCESS_FREE_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION; /* size: 0x0008 */

typedef struct _APPCATEGORYINFO
{
  /* 0x0000 */ unsigned long Locale;
  /* 0x0004 */ long Padding_1335;
  /* 0x0008 */ wchar_t* pszDescription;
  /* 0x0010 */ struct _GUID AppCategoryId;
} APPCATEGORYINFO, *PAPPCATEGORYINFO; /* size: 0x0020 */

typedef struct _MOUSE_EVENT_RECORD
{
  /* 0x0000 */ struct _COORD dwMousePosition;
  /* 0x0004 */ unsigned long dwButtonState;
  /* 0x0008 */ unsigned long dwControlKeyState;
  /* 0x000c */ unsigned long dwEventFlags;
} MOUSE_EVENT_RECORD, *PMOUSE_EVENT_RECORD; /* size: 0x0010 */

typedef struct _WINDOW_BUFFER_SIZE_RECORD
{
  /* 0x0000 */ struct _COORD dwSize;
} WINDOW_BUFFER_SIZE_RECORD, *PWINDOW_BUFFER_SIZE_RECORD; /* size: 0x0004 */

typedef struct _INPUT_RECORD
{
  /* 0x0000 */ unsigned short EventType;
  /* 0x0002 */ char Padding_1336[2];
  union
  {
    union
    {
      /* 0x0004 */ struct _KEY_EVENT_RECORD KeyEvent;
      /* 0x0004 */ struct _MOUSE_EVENT_RECORD MouseEvent;
      /* 0x0004 */ struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
      /* 0x0004 */ struct _MENU_EVENT_RECORD MenuEvent;
      /* 0x0004 */ struct _FOCUS_EVENT_RECORD FocusEvent;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Event;
} INPUT_RECORD, *PINPUT_RECORD; /* size: 0x0014 */

typedef struct _SE_SET_FILE_CACHE_ORIGIN_CLAIM_INFORMATION
{
  /* 0x0000 */ unsigned __int64 OriginClaimSize;
  /* 0x0008 */ void* OriginClaim;
} SE_SET_FILE_CACHE_ORIGIN_CLAIM_INFORMATION, *PSE_SET_FILE_CACHE_ORIGIN_CLAIM_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_WORKINGSET_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long UniqueProcessId;
    /* 0x0000 */ unsigned long SessionId;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1337;
  /* 0x0008 */ unsigned __int64 WorkingSetPageCount;
  /* 0x0010 */ unsigned __int64 CommitPageCount;
  union
  {
    /* 0x0018 */ unsigned __int64 PagedPoolPageCount;
    /* 0x0018 */ unsigned __int64 VirtualSizeInPages;
  }; /* size: 0x0008 */
  /* 0x0020 */ unsigned __int64 PrivateWorkingSetPageCount;
} SYSTEM_WORKINGSET_ENTRY, *PSYSTEM_WORKINGSET_ENTRY; /* size: 0x0028 */

typedef struct _KAFFINITY_ENUMERATION_CONTEXT
{
  /* 0x0000 */ struct _KAFFINITY_EX* Affinity;
  /* 0x0008 */ unsigned __int64 CurrentMask;
  /* 0x0010 */ unsigned short CurrentIndex;
  /* 0x0012 */ char __PADDING__[6];
} KAFFINITY_ENUMERATION_CONTEXT, *PKAFFINITY_ENUMERATION_CONTEXT; /* size: 0x0018 */

typedef struct _OSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW; /* size: 0x011c */

typedef struct _OBJECTID
{
  /* 0x0000 */ struct _GUID Lineage;
  /* 0x0010 */ unsigned long Uniquifier;
} OBJECTID, *POBJECTID; /* size: 0x0014 */

typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003
{
  union
  {
    /* 0x0000 */ struct _userHMETAFILEPICT* hMetaFilePict;
    /* 0x0000 */ struct _userHENHMETAFILE* hHEnhMetaFile;
    /* 0x0000 */ struct _GDI_OBJECT* hGdiHandle;
    /* 0x0000 */ struct _userHGLOBAL* hGlobal;
    /* 0x0000 */ wchar_t* lpszFileName;
    /* 0x0000 */ struct _BYTE_BLOB* pstm;
    /* 0x0000 */ struct _BYTE_BLOB* pstg;
  }; /* size: 0x0008 */
} userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003, *PuserSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003; /* size: 0x0008 */

typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ long Padding_1338;
  /* 0x0008 */ union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
} userSTGMEDIUM::_STGMEDIUM_UNION, *PuserSTGMEDIUM::_STGMEDIUM_UNION; /* size: 0x0010 */

typedef union _userHMETAFILE::__MIDL_IWinTypes_0004
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILE::__MIDL_IWinTypes_0004, *PuserHMETAFILE::__MIDL_IWinTypes_0004; /* size: 0x0008 */

typedef struct _userHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1339;
  /* 0x0008 */ union _userHMETAFILE::__MIDL_IWinTypes_0004 u;
} userHMETAFILE, *PuserHMETAFILE; /* size: 0x0010 */

typedef struct _BYTE_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
} BYTE_BLOB, *PBYTE_BLOB; /* size: 0x0008 */

typedef struct _userHENHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1340;
  /* 0x0008 */ union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
} userHENHMETAFILE, *PuserHENHMETAFILE; /* size: 0x0010 */

struct tagEMROFFSETCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOffset;
}; /* size: 0x0010 */

struct IInitActivationPropertiesIn
{
}; /* size: 0x0008 */

typedef union _userHBITMAP::__MIDL_IWinTypes_0007
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _userBITMAP* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHBITMAP::__MIDL_IWinTypes_0007, *PuserHBITMAP::__MIDL_IWinTypes_0007; /* size: 0x0008 */

typedef struct _userHBITMAP
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1341;
  /* 0x0008 */ union _userHBITMAP::__MIDL_IWinTypes_0007 u;
} userHBITMAP, *PuserHBITMAP; /* size: 0x0010 */

typedef struct _userBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ unsigned long cbSize;
  /* 0x0018 */ unsigned char pBuffer[1];
  /* 0x0019 */ char __PADDING__[3];
} userBITMAP, *PuserBITMAP; /* size: 0x001c */

typedef union _userHPALETTE::__MIDL_IWinTypes_0008
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct tagLOGPALETTE* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHPALETTE::__MIDL_IWinTypes_0008, *PuserHPALETTE::__MIDL_IWinTypes_0008; /* size: 0x0008 */

typedef struct _userHPALETTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1342;
  /* 0x0008 */ union _userHPALETTE::__MIDL_IWinTypes_0008 u;
} userHPALETTE, *PuserHPALETTE; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA
{
  /* 0x0000 */ unsigned long BufferLength;
  /* 0x0004 */ long Padding_1343;
  /* 0x0008 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_INSTALL_DATA, *PPLUGPLAY_CONTROL_INSTALL_DATA; /* size: 0x0010 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A
{
  /* 0x0000 */ void* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1344;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
  /* 0x0028 */ void* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_1345;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A; /* size: 0x0040 */

typedef struct _userHGLOBAL
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1346;
  /* 0x0008 */ union _userHGLOBAL::__MIDL_IWinTypes_0003 u;
} userHGLOBAL, *PuserHGLOBAL; /* size: 0x0010 */

typedef struct _CRYPT_CONTEXT_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_CONFIG, *PCRYPT_CONTEXT_CONFIG; /* size: 0x0008 */

typedef struct _SYSTEM_POOLTAG
{
  union
  {
    /* 0x0000 */ unsigned char Tag[4];
    /* 0x0000 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long PagedAllocs;
  /* 0x0008 */ unsigned long PagedFrees;
  /* 0x000c */ long Padding_1347;
  /* 0x0010 */ unsigned __int64 PagedUsed;
  /* 0x0018 */ unsigned long NonPagedAllocs;
  /* 0x001c */ unsigned long NonPagedFrees;
  /* 0x0020 */ unsigned __int64 NonPagedUsed;
} SYSTEM_POOLTAG, *PSYSTEM_POOLTAG; /* size: 0x0028 */

typedef struct _SYSTEM_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1348;
  /* 0x0008 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_POOLTAG_INFORMATION, *PSYSTEM_POOLTAG_INFORMATION; /* size: 0x0030 */

typedef struct _OCSP_BASIC_REVOKED_INFO
{
  /* 0x0000 */ struct _FILETIME RevocationDate;
  /* 0x0008 */ unsigned long dwCrlReasonCode;
} OCSP_BASIC_REVOKED_INFO, *POCSP_BASIC_REVOKED_INFO; /* size: 0x000c */

struct wistd::__lazy_and_impl<1>
{
}; /* size: 0x0001 */

typedef struct _PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION
{
  /* 0x0000 */ void* ProcessHandle;
} PROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION, *PPROCESS_COMBINE_SECURITY_DOMAINS_INFORMATION; /* size: 0x0008 */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ struct _CMSG_SIGNER_INFO* pSignerInfo;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

struct wistd::__make_unsigned<long,1>
{
}; /* size: 0x0001 */

typedef struct _WOW64_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _WOW64_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  /* 0x00cc */ unsigned char ExtendedRegisters[512];
} WOW64_CONTEXT, *PWOW64_CONTEXT; /* size: 0x02cc */

typedef struct _CMS_DH_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ char* pszContentEncObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PubInfo;
  /* 0x0020 */ void* pReserved;
} CMS_DH_KEY_INFO, *PCMS_DH_KEY_INFO; /* size: 0x0028 */

struct IStubManagerDisconnect
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_MANDATORY_LABEL_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE; /* size: 0x000c */

struct SYSTEM_POWER_CAPABILITIES
{
  /* 0x0000 */ unsigned char PowerButtonPresent;
  /* 0x0001 */ unsigned char SleepButtonPresent;
  /* 0x0002 */ unsigned char LidPresent;
  /* 0x0003 */ unsigned char SystemS1;
  /* 0x0004 */ unsigned char SystemS2;
  /* 0x0005 */ unsigned char SystemS3;
  /* 0x0006 */ unsigned char SystemS4;
  /* 0x0007 */ unsigned char SystemS5;
  /* 0x0008 */ unsigned char HiberFilePresent;
  /* 0x0009 */ unsigned char FullWake;
  /* 0x000a */ unsigned char VideoDimPresent;
  /* 0x000b */ unsigned char ApmPresent;
  /* 0x000c */ unsigned char UpsPresent;
  /* 0x000d */ unsigned char ThermalControl;
  /* 0x000e */ unsigned char ProcessorThrottle;
  /* 0x000f */ unsigned char ProcessorMinThrottle;
  /* 0x0010 */ unsigned char ProcessorMaxThrottle;
  /* 0x0011 */ unsigned char FastSystemS4;
  /* 0x0012 */ unsigned char Hiberboot;
  /* 0x0013 */ unsigned char WakeAlarmPresent;
  /* 0x0014 */ unsigned char AoAc;
  /* 0x0015 */ unsigned char DiskSpinDown;
  /* 0x0016 */ unsigned char HiberFileType;
  /* 0x0017 */ unsigned char AoAcConnectivitySupported;
  /* 0x0018 */ unsigned char spare3[6];
  /* 0x001e */ unsigned char SystemBatteriesPresent;
  /* 0x001f */ unsigned char BatteriesAreShortTerm;
  /* 0x0020 */ struct BATTERY_REPORTING_SCALE BatteryScale[3];
  /* 0x0038 */ enum _SYSTEM_POWER_STATE AcOnLineWake;
  /* 0x003c */ enum _SYSTEM_POWER_STATE SoftLidWake;
  /* 0x0040 */ enum _SYSTEM_POWER_STATE RtcWake;
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinDeviceWakeState;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
}; /* size: 0x004c */

struct AsyncIPipeLong
{
}; /* size: 0x0008 */

typedef struct _CM_PCCARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char ErrorCode;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long BusData;
  /* 0x0008 */ unsigned long DeviceId;
  /* 0x000c */ unsigned long LegacyBaseAddress;
  /* 0x0010 */ unsigned char IRQMap[16];
} CM_PCCARD_DEVICE_DATA, *PCM_PCCARD_DEVICE_DATA; /* size: 0x0020 */

struct IMarshalSomeone
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ELAM_CERTIFICATE_INFORMATION
{
  /* 0x0000 */ void* ElamDriverFile;
} SYSTEM_ELAM_CERTIFICATE_INFORMATION, *PSYSTEM_ELAM_CERTIFICATE_INFORMATION; /* size: 0x0008 */

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA
{
  /* 0x0000 */ unsigned long BytesPerSector;
  /* 0x0004 */ unsigned long NumberOfCylinders;
  /* 0x0008 */ unsigned long SectorsPerTrack;
  /* 0x000c */ unsigned long NumberOfHeads;
} CM_DISK_GEOMETRY_DEVICE_DATA, *PCM_DISK_GEOMETRY_DEVICE_DATA; /* size: 0x0010 */

typedef struct _RTL_QUERY_REGISTRY_TABLE
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_1349;
  /* 0x0010 */ wchar_t* Name;
  /* 0x0018 */ void* EntryContext;
  /* 0x0020 */ unsigned long DefaultType;
  /* 0x0024 */ long Padding_1350;
  /* 0x0028 */ void* DefaultData;
  /* 0x0030 */ unsigned long DefaultLength;
  /* 0x0034 */ long __PADDING__[1];
} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE; /* size: 0x0038 */

struct IProxyServerIdentity
{
}; /* size: 0x0008 */

struct ISyncAdvise
{
}; /* size: 0x0008 */

struct DedicatedAllocator<DISPATCH_SERVER_FRAME>
{
  /* 0x0000 */ union _SLIST_HEADER g_listHead;
  /* 0x0010 */ char __PADDING__[4294967281];
}; /* size: 0x0001 */

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CERT_ALT_NAME_INFO AuthorityCertIssuer;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
} CERT_AUTHORITY_KEY_ID2_INFO, *PCERT_AUTHORITY_KEY_ID2_INFO; /* size: 0x0030 */

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE
{
  /* 0x0000 */ char* pszOrganization;
  /* 0x0008 */ unsigned long cNoticeNumbers;
  /* 0x000c */ long Padding_1351;
  /* 0x0010 */ int* rgNoticeNumbers;
} CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE; /* size: 0x0018 */

class CUnknown
{
  /* 0x0000 */ long Padding_1352[2];
  /* 0x0008 */ unsigned long m_cbRefs;
}; /* size: 0x0010 */

typedef struct _IMAGE_CHPE_RANGE_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long StartOffset;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NativeCode : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long AddressBits : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long Length;
} IMAGE_CHPE_RANGE_ENTRY, *PIMAGE_CHPE_RANGE_ENTRY; /* size: 0x0008 */

typedef struct _THREAD_UMS_INFORMATION
{
  /* 0x0000 */ enum _THREAD_UMS_INFORMATION_COMMAND Command;
  /* 0x0004 */ long Padding_1353;
  union
  {
    struct
    {
      /* 0x0008 */ struct _RTL_UMS_COMPLETION_LIST* CompletionList;
      /* 0x0010 */ struct _RTL_UMS_CONTEXT* UmsContext;
    }; /* size: 0x0010 */
    /* 0x0008 */ unsigned long Flags;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned long IsUmsSchedulerThread : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned long IsUmsWorkerThread : 1; /* bit position: 1 */
      }; /* bitfield */
      /* 0x000c */ long __PADDING__[3];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} THREAD_UMS_INFORMATION, *PTHREAD_UMS_INFORMATION; /* size: 0x0018 */

typedef struct _KEY_LAYER_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long IsTombstone : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long IsSupersedeLocal : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long IsSupersedeTree : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ClassIsInherited : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long Reserved : 28; /* bit position: 4 */
  }; /* bitfield */
} KEY_LAYER_INFORMATION, *PKEY_LAYER_INFORMATION; /* size: 0x0004 */

typedef struct _REFS_STREAM_SNAPSHOT_MANAGEMENT_INPUT_BUFFER
{
  /* 0x0000 */ enum _REFS_STREAM_SNAPSHOT_OPERATION Operation;
  /* 0x0004 */ unsigned short SnapshotNameLength;
  /* 0x0006 */ unsigned short OperationInputBufferLength;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned short NameAndInputBuffer[1];
  /* 0x001a */ char __PADDING__[6];
} REFS_STREAM_SNAPSHOT_MANAGEMENT_INPUT_BUFFER, *PREFS_STREAM_SNAPSHOT_MANAGEMENT_INPUT_BUFFER; /* size: 0x0020 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
  /* 0x0000 */ long Padding_1354[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

struct $_s__RTTIBaseClassArray$_extraBytes_24
{
  /* 0x0000 */ const struct _s__RTTIBaseClassDescriptor* arrayOfBaseClassDescriptors[3];
  /* 0x0018 */ long __PADDING__[1];
}; /* size: 0x001c */

class CLimitedWritableStorage::SetElementTimes::__l2::<lambda_14b25aaf0db7771cb0bb6bcb1052a1a0>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ const struct _FILETIME*& pctime;
  /* 0x0018 */ const struct _FILETIME*& patime;
  /* 0x0020 */ const struct _FILETIME*& pmtime;
}; /* size: 0x0028 */

struct $_TypeDescriptor$_extraBytes_27
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char name[27];
}; /* size: 0x002b */

class MAP<XSLOCK,MAP_KEY_GUID,NdrTypeInfo *>
{
  /* 0x0000 */ long Padding_1355[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

typedef struct _FILE_REGION_INPUT
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long DesiredUsage;
  /* 0x0014 */ long __PADDING__[1];
} FILE_REGION_INPUT, *PFILE_REGION_INPUT; /* size: 0x0018 */

class CLimitedStreamBase::Read::__l2::<lambda_1bddd38f1c2c61820f0511b0dcb5aeed>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ void*& pv;
  /* 0x0010 */ unsigned long& cb;
  /* 0x0018 */ unsigned long*& pcbRead;
}; /* size: 0x0020 */

typedef struct _OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long PagedPoolCharge;
  /* 0x0014 */ unsigned long NonPagedPoolCharge;
  /* 0x0018 */ unsigned long Reserved[3];
  /* 0x0024 */ unsigned long NameInfoSize;
  /* 0x0028 */ unsigned long TypeInfoSize;
  /* 0x002c */ unsigned long SecurityDescriptorSize;
  /* 0x0030 */ union _LARGE_INTEGER CreationTime;
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _CONTAINER_VOLUME_STATE
{
  /* 0x0000 */ unsigned long Flags;
} CONTAINER_VOLUME_STATE, *PCONTAINER_VOLUME_STATE; /* size: 0x0004 */

typedef struct _REMOTE_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
  /* 0x0008 */ char* lpConnectionName;
  /* 0x0010 */ char* lpRemainingPath;
} REMOTE_NAME_INFOA, *PREMOTE_NAME_INFOA; /* size: 0x0018 */

struct ImplementationHelpersDetails::IsUuidOfAnyHelper<>
{
}; /* size: 0x0001 */

typedef struct _ITEM_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_1356;
  /* 0x0008 */ const wchar_t* pcwszFromEMail;
  /* 0x0010 */ const wchar_t* pcwszApplicationName;
  /* 0x0018 */ const wchar_t* pcwszCatalogName;
  /* 0x0020 */ const wchar_t* pcwszContentClass;
} ITEM_INFO, *PITEM_INFO; /* size: 0x0028 */

struct std::_Atomic_integral_facade<long>
{
}; /* size: 0x0004 */

typedef struct _JOBOBJECT_CONTAINER_IDENTIFIER_V2
{
  /* 0x0000 */ struct _GUID ContainerId;
  /* 0x0010 */ struct _GUID ContainerTelemetryId;
  /* 0x0020 */ unsigned long JobId;
} JOBOBJECT_CONTAINER_IDENTIFIER_V2, *PJOBOBJECT_CONTAINER_IDENTIFIER_V2; /* size: 0x0024 */

typedef struct _SCRUB_DATA_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long MaximumIos;
  /* 0x000c */ unsigned long ObjectId[4];
  /* 0x001c */ unsigned long Reserved[41];
  /* 0x00c0 */ unsigned char ResumeContext[1040];
} SCRUB_DATA_INPUT, *PSCRUB_DATA_INPUT; /* size: 0x04d0 */

struct IActivationPropOutClean
{
}; /* size: 0x0008 */

typedef struct _RTL_HEAP_PARAMETERS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1357;
  /* 0x0008 */ unsigned __int64 SegmentReserve;
  /* 0x0010 */ unsigned __int64 SegmentCommit;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0030 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0038 */ unsigned __int64 InitialCommit;
  /* 0x0040 */ unsigned __int64 InitialReserve;
  /* 0x0048 */ void* CommitRoutine /* function */;
  /* 0x0050 */ unsigned __int64 Reserved[2];
} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS; /* size: 0x0060 */

typedef struct _SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwErrorLevel;
  /* 0x0008 */ unsigned long dwErrorCategory;
  /* 0x000c */ unsigned long dwReserved;
  /* 0x0010 */ wchar_t wszErrorText[256];
} SSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS, *PSSL_F12_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x0210 */

class AdHocInterceptor<ISearchProtocol>
{
  /* 0x0000 */ long Padding_1358[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

typedef struct _RTL_SEGMENT_HEAP_VA_CALLBACKS
{
  /* 0x0000 */ void* CallbackContext;
  /* 0x0008 */ void* AllocateVirtualMemory /* function */;
  /* 0x0010 */ void* FreeVirtualMemory /* function */;
  /* 0x0018 */ void* QueryVirtualMemory /* function */;
} RTL_SEGMENT_HEAP_VA_CALLBACKS, *PRTL_SEGMENT_HEAP_VA_CALLBACKS; /* size: 0x0020 */

class CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_1359[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_1360[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

struct IElementBehaviorSite
{
}; /* size: 0x0008 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct IInterfaceRelated
{
}; /* size: 0x0008 */

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG
{
  /* 0x0000 */ int fFailureActionsOnNonCrashFailures;
} SERVICE_FAILURE_ACTIONS_FLAG, *PSERVICE_FAILURE_ACTIONS_FLAG; /* size: 0x0004 */

typedef struct _FILE_ALLOCATION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFORMATION, *PFILE_ALLOCATION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
} FILE_PIPE_CLIENT_PROCESS_BUFFER, *PFILE_PIPE_CLIENT_PROCESS_BUFFER; /* size: 0x0010 */

struct ICallFrame
{
}; /* size: 0x0008 */

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1361;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0020 */ void* pfnAlloc /* function */;
  /* 0x0028 */ void* pfnFree /* function */;
  /* 0x0030 */ unsigned __int64 hNCryptKey;
  /* 0x0038 */ unsigned char* pbContentEncryptKey;
  /* 0x0040 */ unsigned long cbContentEncryptKey;
  /* 0x0044 */ long Padding_1362;
  /* 0x0048 */ void* hCNGContentEncryptKey;
  /* 0x0050 */ unsigned char* pbCNGContentEncryptKeyObject;
} CMSG_CNG_CONTENT_DECRYPT_INFO, *PCMSG_CNG_CONTENT_DECRYPT_INFO; /* size: 0x0058 */

struct RPC_IMPORT_CONTEXT_P
{
  /* 0x0000 */ void* LookupContext;
  /* 0x0008 */ void* ProposedHandle;
  /* 0x0010 */ struct _RPC_BINDING_VECTOR* Bindings;
}; /* size: 0x0018 */

typedef struct _MARK_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long UsnSourceInfo;
    /* 0x0000 */ unsigned long CopyNumber;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1363;
  /* 0x0008 */ void* VolumeHandle;
  /* 0x0010 */ unsigned long HandleInfo;
  /* 0x0014 */ long __PADDING__[1];
} MARK_HANDLE_INFO, *PMARK_HANDLE_INFO; /* size: 0x0018 */

struct IInternetBindInfo
{
}; /* size: 0x0008 */

typedef struct _MEMORYSTATUS
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 dwTotalPhys;
  /* 0x0010 */ unsigned __int64 dwAvailPhys;
  /* 0x0018 */ unsigned __int64 dwTotalPageFile;
  /* 0x0020 */ unsigned __int64 dwAvailPageFile;
  /* 0x0028 */ unsigned __int64 dwTotalVirtual;
  /* 0x0030 */ unsigned __int64 dwAvailVirtual;
} MEMORYSTATUS, *PMEMORYSTATUS; /* size: 0x0038 */

typedef struct _RTL_BSD_ITEM
{
  /* 0x0000 */ enum RTL_BSD_ITEM_TYPE Type;
  /* 0x0004 */ long Padding_1364;
  /* 0x0008 */ void* DataBuffer;
  /* 0x0010 */ unsigned long DataLength;
  /* 0x0014 */ long __PADDING__[1];
} RTL_BSD_ITEM, *PRTL_BSD_ITEM; /* size: 0x0018 */

typedef struct _LEAP_SECOND_DATA_REGISTRY_ENTRY
{
  /* 0x0000 */ short Year;
  /* 0x0002 */ short Month;
  /* 0x0004 */ short Day;
  /* 0x0006 */ short Hour;
  /* 0x0008 */ short Flags;
  /* 0x000a */ short Reserved;
} LEAP_SECOND_DATA_REGISTRY_ENTRY, *PLEAP_SECOND_DATA_REGISTRY_ENTRY; /* size: 0x000c */

struct tagMONITORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcMonitor;
  /* 0x0014 */ struct tagRECT rcWork;
  /* 0x0024 */ unsigned long dwFlags;
}; /* size: 0x0028 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG32
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned long CriticalSection;
  /* 0x0008 */ struct LIST_ENTRY32 ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x001e */ unsigned short Identifier;
} RTL_CRITICAL_SECTION_DEBUG32, *PRTL_CRITICAL_SECTION_DEBUG32; /* size: 0x0020 */

struct JOBOBJECT_NET_RATE_CONTROL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 MaxBandwidth;
  /* 0x0008 */ enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS ControlFlags;
  /* 0x000c */ unsigned char DscpTag;
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _POWER_USER_PRESENCE
{
  /* 0x0000 */ enum POWER_USER_PRESENCE_TYPE UserPresence;
} POWER_USER_PRESENCE, *PPOWER_USER_PRESENCE; /* size: 0x0004 */

union IMAGE_ARM64_RUNTIME_FUNCTION_ENTRY_XDATA
{
  union
  {
    /* 0x0000 */ unsigned long HeaderData;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long FunctionLength : 18; /* bit position: 0 */
      /* 0x0000 */ unsigned long Version : 2; /* bit position: 18 */
      /* 0x0000 */ unsigned long ExceptionDataPresent : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long EpilogInHeader : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long EpilogCount : 5; /* bit position: 22 */
      /* 0x0000 */ unsigned long CodeWords : 5; /* bit position: 27 */
    }; /* bitfield */
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

typedef struct _OPERATION_START_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long OperationId;
  /* 0x0008 */ unsigned long Flags;
} OPERATION_START_PARAMETERS, *POPERATION_START_PARAMETERS; /* size: 0x000c */

typedef struct _tagBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1365;
  /* 0x0008 */ wchar_t* szExtraInfo;
  /* 0x0010 */ struct tagSTGMEDIUM stgmedData;
  /* 0x0028 */ unsigned long grfBindInfoF;
  /* 0x002c */ unsigned long dwBindVerb;
  /* 0x0030 */ wchar_t* szCustomVerb;
  /* 0x0038 */ unsigned long cbstgmedData;
  /* 0x003c */ unsigned long dwOptions;
  /* 0x0040 */ unsigned long dwOptionsFlags;
  /* 0x0044 */ unsigned long dwCodePage;
  /* 0x0048 */ struct _SECURITY_ATTRIBUTES securityAttributes;
  /* 0x0060 */ struct _GUID iid;
  /* 0x0070 */ struct IUnknown* pUnk;
  /* 0x0078 */ unsigned long dwReserved;
  /* 0x007c */ long __PADDING__[1];
} tagBINDINFO, *PtagBINDINFO; /* size: 0x0080 */

typedef struct _RTLP_HEAP_SERIALIZED_MAPPING
{
  /* 0x0000 */ unsigned __int64 Allocation;
  /* 0x0008 */ void* StackReference;
  /* 0x0010 */ unsigned __int64 Size;
} RTLP_HEAP_SERIALIZED_MAPPING, *PRTLP_HEAP_SERIALIZED_MAPPING; /* size: 0x0018 */

typedef struct _DEVICE_DATA_SET_RANGE
{
  /* 0x0000 */ __int64 StartingOffset;
  /* 0x0008 */ unsigned __int64 LengthInBytes;
} DEVICE_DATA_SET_RANGE, *PDEVICE_DATA_SET_RANGE; /* size: 0x0010 */

typedef struct _currencyfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_1366;
  /* 0x0010 */ wchar_t* lpDecimalSep;
  /* 0x0018 */ wchar_t* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ unsigned int PositiveOrder;
  /* 0x0028 */ wchar_t* lpCurrencySymbol;
} currencyfmtW, *PcurrencyfmtW; /* size: 0x0030 */

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION
{
  /* 0x0000 */ unsigned char Inherit;
  /* 0x0001 */ unsigned char ProtectFromClose;
} OBJECT_HANDLE_FLAG_INFORMATION, *POBJECT_HANDLE_FLAG_INFORMATION; /* size: 0x0002 */

struct IRpcHelper
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned char HypervisorConnected;
  /* 0x0001 */ unsigned char HypervisorDebuggingEnabled;
  /* 0x0002 */ unsigned char HypervisorPresent;
  /* 0x0003 */ unsigned char HypervisorSchedulerType;
  /* 0x0004 */ unsigned char Spare0[4];
  /* 0x0008 */ unsigned __int64 EnabledEnlightenments;
} SYSTEM_HYPERVISOR_QUERY_INFORMATION, *PSYSTEM_HYPERVISOR_QUERY_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_PLATFORM_BINARY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 PhysicalAddress;
  /* 0x0008 */ void* HandoffBuffer;
  /* 0x0010 */ void* CommandLineBuffer;
  /* 0x0018 */ unsigned long HandoffBufferSize;
  /* 0x001c */ unsigned long CommandLineBufferSize;
} SYSTEM_PLATFORM_BINARY_INFORMATION, *PSYSTEM_PLATFORM_BINARY_INFORMATION; /* size: 0x0020 */

class CLimitedWritableStorage::CreateStorage::__l2::<lambda_301f3587bff926b4515b80b83f6cb3c1>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ unsigned long& grfMode;
  /* 0x0018 */ unsigned long& reserved1;
  /* 0x0020 */ unsigned long& reserved2;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IStorage>& spInner;
}; /* size: 0x0030 */

class CLinkable
{
  /* 0x0000 */ class CLinkable* m_pNext;
  /* 0x0008 */ class CLinkable* m_pPrev;
}; /* size: 0x0010 */

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ParameterBlockOffset;
  /* 0x0010 */ unsigned long ParameterBlockLength;
  /* 0x0014 */ unsigned long DataSetRangesOffset;
  /* 0x0018 */ unsigned long DataSetRangesLength;
} DEVICE_MANAGE_DATA_SET_ATTRIBUTES, *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES; /* size: 0x001c */

struct ANON_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
}; /* size: 0x0020 */

struct timespec
{
  /* 0x0000 */ __int64 tv_sec;
  /* 0x0008 */ long tv_nsec;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _RTL_RESOURCE
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION CriticalSection;
  /* 0x0028 */ void* SharedSemaphore;
  /* 0x0030 */ volatile unsigned long NumberOfWaitingShared;
  /* 0x0034 */ long Padding_1367;
  /* 0x0038 */ void* ExclusiveSemaphore;
  /* 0x0040 */ volatile unsigned long NumberOfWaitingExclusive;
  /* 0x0044 */ volatile long NumberOfActive;
  /* 0x0048 */ void* ExclusiveOwnerThread;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ long Padding_1368;
  /* 0x0058 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
} RTL_RESOURCE, *PRTL_RESOURCE; /* size: 0x0060 */

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ int fCommercial;
} AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x000c */

class Microsoft::WRL::ComPtr<IInterceptorBase>;

typedef struct _IMAGE_ARM64EC_METADATA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long CodeMap;
  /* 0x0008 */ unsigned long CodeMapCount;
  /* 0x000c */ unsigned long CodeRangesToEntryPoints;
  /* 0x0010 */ unsigned long RedirectionMetadata;
  /* 0x0014 */ unsigned long tbd__os_arm64x_dispatch_call_no_redirect;
  /* 0x0018 */ unsigned long tbd__os_arm64x_dispatch_ret;
  /* 0x001c */ unsigned long tbd__os_arm64x_dispatch_call;
  /* 0x0020 */ unsigned long tbd__os_arm64x_dispatch_icall;
  /* 0x0024 */ unsigned long tbd__os_arm64x_dispatch_icall_cfg;
  /* 0x0028 */ unsigned long AlternateEntryPoint;
  /* 0x002c */ unsigned long AuxiliaryIAT;
  /* 0x0030 */ unsigned long CodeRangesToEntryPointsCount;
  /* 0x0034 */ unsigned long RedirectionMetadataCount;
  /* 0x0038 */ unsigned long GetX64InformationFunctionPointer;
  /* 0x003c */ unsigned long SetX64InformationFunctionPointer;
  /* 0x0040 */ unsigned long ExtraRFETable;
  /* 0x0044 */ unsigned long ExtraRFETableSize;
  /* 0x0048 */ unsigned long __os_arm64x_dispatch_fptr;
  /* 0x004c */ unsigned long AuxiliaryIATCopy;
} IMAGE_ARM64EC_METADATA, *PIMAGE_ARM64EC_METADATA; /* size: 0x0050 */

typedef struct _SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION
{
  /* 0x0000 */ unsigned long PlatformManifestSize;
  /* 0x0004 */ unsigned char PlatformManifest[1];
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION, *PSYSTEM_SECUREBOOT_PLATFORM_MANIFEST_INFORMATION; /* size: 0x0008 */

class CLimitedStreamBase::LockRegion::__l2::<lambda_40922ab18465b876057f1185cc36db8e>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ union _ULARGE_INTEGER& libOffset;
  /* 0x0010 */ union _ULARGE_INTEGER& cb;
  /* 0x0018 */ unsigned long& dwLockType;
}; /* size: 0x0020 */

struct tagLOGBRUSH
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned __int64 lbHatch;
}; /* size: 0x0010 */

class wil::details::<lambda_afb6b96a417bace253e89dfd48515382>
{
}; /* size: 0x0001 */

struct tagMENUGETOBJECTINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned int uPos;
  /* 0x0008 */ struct HMENU__* hmenu;
  /* 0x0010 */ void* riid;
  /* 0x0018 */ void* pvObj;
}; /* size: 0x0020 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ char* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
  /* 0x0034 */ long __PADDING__[1];
} ENUM_SERVICE_STATUS_PROCESSA, *PENUM_SERVICE_STATUS_PROCESSA; /* size: 0x0038 */

struct AllocateThrow
{
}; /* size: 0x0001 */

class CReadOnlyStorage::CopyTo::__l11::<lambda_43780e76f89b37287b17c05597560ff1>
{
  /* 0x0000 */ class CReadOnlyStorage* const __this;
  /* 0x0008 */ unsigned long& ciidExclude;
  /* 0x0010 */ const struct _GUID*& rgiidExclude;
  /* 0x0018 */ wchar_t**& snbExclude;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IStorage>& spOuter;
}; /* size: 0x0028 */

struct tagCOMBOBOXINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcItem;
  /* 0x0014 */ struct tagRECT rcButton;
  /* 0x0024 */ unsigned long stateButton;
  /* 0x0028 */ struct HWND__* hwndCombo;
  /* 0x0030 */ struct HWND__* hwndItem;
  /* 0x0038 */ struct HWND__* hwndList;
}; /* size: 0x0040 */

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001
{
  /* 0x0000 */ unsigned long tyspec;
  /* 0x0004 */ long Padding_1369;
  /* 0x0008 */ union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
} _MIDL___MIDL_itf_wtypes_0000_0001_0001, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001; /* size: 0x0028 */

class HashWSTR
{
}; /* size: 0x0001 */

typedef struct _TOKEN_BNO_ISOLATION_INFORMATION
{
  /* 0x0000 */ wchar_t* IsolationPrefix;
  /* 0x0008 */ unsigned char IsolationEnabled;
  /* 0x0009 */ char __PADDING__[7];
} TOKEN_BNO_ISOLATION_INFORMATION, *PTOKEN_BNO_ISOLATION_INFORMATION; /* size: 0x0010 */

class HashGUID
{
}; /* size: 0x0001 */

typedef struct _RPC_SECURITY_QOS_V3_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1370;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
} RPC_SECURITY_QOS_V3_W, *PRPC_SECURITY_QOS_V3_W; /* size: 0x0028 */

typedef struct __MIDL_ICallFrame_0002
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ unsigned char fOut;
  /* 0x0002 */ char Padding_1371[2];
  /* 0x0004 */ unsigned long stackOffset;
  /* 0x0008 */ unsigned long cbParam;
} _MIDL_ICallFrame_0002, *P_MIDL_ICallFrame_0002; /* size: 0x000c */

struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>
{
}; /* size: 0x00b8 */

typedef struct _CERT_ECC_SIGNATURE
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB r;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB s;
} CERT_ECC_SIGNATURE, *PCERT_ECC_SIGNATURE; /* size: 0x0020 */

typedef struct _SHFILEOPSTRUCTA
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int wFunc;
  /* 0x000c */ long Padding_1372;
  /* 0x0010 */ const char* pFrom;
  /* 0x0018 */ const char* pTo;
  /* 0x0020 */ unsigned short fFlags;
  /* 0x0022 */ char Padding_1373[2];
  /* 0x0024 */ int fAnyOperationsAborted;
  /* 0x0028 */ void* hNameMappings;
  /* 0x0030 */ const char* lpszProgressTitle;
} SHFILEOPSTRUCTA, *PSHFILEOPSTRUCTA; /* size: 0x0038 */

struct INTERPRETER_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char FullPtrUsed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char RpcSsAllocUsed : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ObjectProc : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasRpcFlags : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char IgnoreObjectException : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasCommOrFault : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char UseNewInitRoutines : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct MAP_HASHER<MAP_KEY_GUID>
{
}; /* size: 0x0001 */

typedef union _FOUR_PART_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version64;
    struct
    {
      /* 0x0000 */ unsigned long BuildAndRevision;
      /* 0x0004 */ unsigned long MajorAndMinor;
    } /* size: 0x0008 */ Version32;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    } /* size: 0x0008 */ Version16;
  }; /* size: 0x0008 */
} FOUR_PART_VERSION, *PFOUR_PART_VERSION; /* size: 0x0008 */

class OleDragDropTracing::Instance::__l2::<lambda_56826768d7de29d088611d7a51e75d86>
{
}; /* size: 0x0001 */

typedef struct _LUNICODE_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ wchar_t* Buffer;
} LUNICODE_STRING, *PLUNICODE_STRING; /* size: 0x0018 */

typedef struct _LBLOB
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LBLOB, *PLBLOB; /* size: 0x0018 */

typedef struct _MEMORY_BAD_IDENTITY_INFORMATION
{
  union
  {
    union
    {
      /* 0x0000 */ void* VirtualAddress;
      /* 0x0000 */ unsigned __int64 PageFrameIndex;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0008 */ unsigned __int64 Poisoned : 1; /* bit position: 0 */
          /* 0x0008 */ unsigned __int64 Physical : 1; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0008 */ e1;
      /* 0x0008 */ unsigned __int64 AllInformation;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
} MEMORY_BAD_IDENTITY_INFORMATION, *PMEMORY_BAD_IDENTITY_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_UNLOAD_EVENT_TRACE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ unsigned long Version[2];
  /* 0x0064 */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE, *PRTL_UNLOAD_EVENT_TRACE; /* size: 0x0068 */

typedef struct _MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION
{
  /* 0x0000 */ unsigned __int64 DedicatedMemoryTypeId;
  /* 0x0008 */ unsigned long HandleAttributes;
  /* 0x000c */ unsigned long DesiredAccess;
  /* 0x0010 */ void* DedicatedMemoryPartitionHandle;
} MEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION, *PMEMORY_PARTITION_DEDICATED_MEMORY_OPEN_INFORMATION; /* size: 0x0018 */

typedef struct _CERT_SYSTEM_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
} CERT_SYSTEM_STORE_INFO, *PCERT_SYSTEM_STORE_INFO; /* size: 0x0004 */

typedef struct _POWER_SESSION_TIMEOUTS
{
  /* 0x0000 */ unsigned long InputTimeout;
  /* 0x0004 */ unsigned long DisplayTimeout;
} POWER_SESSION_TIMEOUTS, *PPOWER_SESSION_TIMEOUTS; /* size: 0x0008 */

typedef struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Enabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long AsULONG;
  }; /* size: 0x0004 */
} SYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT, *PSYSTEM_INTERRUPT_STEERING_INFORMATION_OUTPUT; /* size: 0x0004 */

class AdHocCallFrame<IOleInPlaceObjectWindowless,<lambda_de8aae3bf856bab3be50d4e660b6e6f6> >
{
  /* 0x0000 */ long Padding_1374[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>::GetDropTarget::__l2::<lambda_de8aae3bf856bab3be50d4e660b6e6f6>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_1375;
  /* 0x0008 */ wchar_t** rgpszProviders;
} CRYPT_CONTEXT_FUNCTION_PROVIDERS, *PCRYPT_CONTEXT_FUNCTION_PROVIDERS; /* size: 0x0010 */

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Next::__l2::<lambda_67bd47486a8986df7d6cb4f09c809e77>
{
  /* 0x0000 */ class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>* const __this;
  /* 0x0008 */ unsigned long& celt;
  /* 0x0010 */ struct tagFORMATETC*& rgelt;
  /* 0x0018 */ unsigned long*& pceltFetched;
}; /* size: 0x0020 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_9f5ff7c0875bbd6db2722caf2496ccad> >
{
  /* 0x0000 */ long Padding_1376[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::ReactivateAndUndo::__l2::<lambda_9f5ff7c0875bbd6db2722caf2496ccad>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _SYSTEM_MEMORY_USAGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalPhysicalBytes;
  /* 0x0008 */ unsigned __int64 AvailableBytes;
  /* 0x0010 */ __int64 ResidentAvailableBytes;
  /* 0x0018 */ unsigned __int64 CommittedBytes;
  /* 0x0020 */ unsigned __int64 SharedCommittedBytes;
  /* 0x0028 */ unsigned __int64 CommitLimitBytes;
  /* 0x0030 */ unsigned __int64 PeakCommitmentBytes;
} SYSTEM_MEMORY_USAGE_INFORMATION, *PSYSTEM_MEMORY_USAGE_INFORMATION; /* size: 0x0038 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_4ca0b07237b8f95da55952ce2c79cfa1> >
{
  /* 0x0000 */ long Padding_1377[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObjectWindowless>::SetObjectRects::__l2::<lambda_4ca0b07237b8f95da55952ce2c79cfa1>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _CM_RESOURCE_LIST* ResourceList;
  /* 0x0018 */ unsigned long ResourceListSize;
  /* 0x001c */ long Padding_1378;
  /* 0x0020 */ struct _PLUGPLAY_CONTROL_CONFLICT_LIST* ConflictBuffer;
  /* 0x0028 */ unsigned long ConflictBufferSize;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ long Status;
  /* 0x0034 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_DATA, *PPLUGPLAY_CONTROL_CONFLICT_DATA; /* size: 0x0038 */

struct IOleInPlaceActiveObject
{
}; /* size: 0x0008 */

struct PPM_WMI_PERF_STATES_EX
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_1379;
  /* 0x0028 */ void* TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR; /* size: 0x0024 */

typedef struct _CM_RESOURCE_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST; /* size: 0x0028 */

typedef struct _CRYPT_BLOB_ARRAY
{
  /* 0x0000 */ unsigned long cBlob;
  /* 0x0004 */ long Padding_1380;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgBlob;
} CRYPT_BLOB_ARRAY, *PCRYPT_BLOB_ARRAY; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner
{
  /* 0x0000 */ long Padding_1381[2];
  /* 0x0008 */ struct std::atomic<unsigned long> m_innerReferences;
}; /* size: 0x0010 */

class CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >
{
  /* 0x0000 */ long Padding_1382[4];
  /* 0x0010 */ class CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner m_inner;
  /* 0x0020 */ struct IUnknown* const m_punkOuter;
}; /* size: 0x0028 */

typedef struct _EXTENT_READ_CACHE_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER AllocatedCache;
  /* 0x0008 */ union _LARGE_INTEGER PopulatedCache;
  /* 0x0010 */ union _LARGE_INTEGER InErrorCache;
} EXTENT_READ_CACHE_INFO_BUFFER, *PEXTENT_READ_CACHE_INFO_BUFFER; /* size: 0x0018 */

struct tagRemSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ unsigned long dwHandleType;
  /* 0x0008 */ unsigned long pData;
  /* 0x000c */ unsigned long pUnkForRelease;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

class CLimitedWritableStorage::CopyTo::__l8::<lambda_715367da935c5581b17c1a3be965339d>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ unsigned long& ciidExclude;
  /* 0x0010 */ const struct _GUID*& rgiidExclude;
  /* 0x0018 */ wchar_t**& snbExclude;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IStorage>& spOuter;
}; /* size: 0x0028 */

class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::Load::__l2::<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>
{
  /* 0x0000 */ struct IPropertyBag* pPropBag;
  /* 0x0008 */ struct IErrorLog* pErrorLog;
}; /* size: 0x0010 */

typedef struct _SYSTEM_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_1383;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ void* CreatorUniqueProcess;
  /* 0x0018 */ unsigned short CreatorBackTraceIndex;
  /* 0x001a */ unsigned short Flags;
  /* 0x001c */ long PointerCount;
  /* 0x0020 */ long HandleCount;
  /* 0x0024 */ unsigned long PagedPoolCharge;
  /* 0x0028 */ unsigned long NonPagedPoolCharge;
  /* 0x002c */ long Padding_1384;
  /* 0x0030 */ void* ExclusiveProcessId;
  /* 0x0038 */ void* SecurityDescriptor;
  /* 0x0040 */ struct _OBJECT_NAME_INFORMATION NameInfo;
} SYSTEM_OBJECT_INFORMATION, *PSYSTEM_OBJECT_INFORMATION; /* size: 0x0050 */

class CDragOperation::IsDropAllowed::__l2::<lambda_f16c171f4a25340757779972fb9deba3>
{
}; /* size: 0x0001 */

class AdHocCallFrame<IPersistPropertyBag,<lambda_f62c6972a04c90594c2afef0651ebd10> >
{
  /* 0x0000 */ long Padding_1385[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>::Save::__l2::<lambda_f62c6972a04c90594c2afef0651ebd10>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned char* IoStatusBlockRange;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} FILE_IOSTATUSBLOCK_RANGE_INFORMATION, *PFILE_IOSTATUSBLOCK_RANGE_INFORMATION; /* size: 0x0010 */

typedef struct _CERT_KEY_ATTRIBUTES_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB IntendedKeyUsage;
  /* 0x0028 */ struct _CERT_PRIVATE_KEY_VALIDITY* pPrivateKeyUsagePeriod;
} CERT_KEY_ATTRIBUTES_INFO, *PCERT_KEY_ATTRIBUTES_INFO; /* size: 0x0030 */

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_IO_COMPLETION_NOTIFICATION_INFORMATION, *PFILE_IO_COMPLETION_NOTIFICATION_INFORMATION; /* size: 0x0004 */

typedef struct _CERT_PRIVATE_KEY_VALIDITY
{
  /* 0x0000 */ struct _FILETIME NotBefore;
  /* 0x0008 */ struct _FILETIME NotAfter;
} CERT_PRIVATE_KEY_VALIDITY, *PCERT_PRIVATE_KEY_VALIDITY; /* size: 0x0010 */

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA
{
  union
  {
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
  }; /* size: 0x0040 */
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA; /* size: 0x0040 */

typedef struct _NV_MEMORY_RANGE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 Length;
} NV_MEMORY_RANGE, *PNV_MEMORY_RANGE; /* size: 0x0010 */

struct tagRAWINPUTDEVICE
{
  /* 0x0000 */ unsigned short usUsagePage;
  /* 0x0002 */ unsigned short usUsage;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTarget;
}; /* size: 0x0010 */

typedef struct _XSTATE_CONTEXT
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long Reserved1;
  /* 0x0010 */ struct _XSAVE_AREA* Area;
  /* 0x0018 */ void* Buffer;
} XSTATE_CONTEXT, *PXSTATE_CONTEXT; /* size: 0x0020 */

typedef struct _IMAGE_COFF_SYMBOLS_HEADER
{
  /* 0x0000 */ unsigned long NumberOfSymbols;
  /* 0x0004 */ unsigned long LvaToFirstSymbol;
  /* 0x0008 */ unsigned long NumberOfLinenumbers;
  /* 0x000c */ unsigned long LvaToFirstLinenumber;
  /* 0x0010 */ unsigned long RvaToFirstByteOfCode;
  /* 0x0014 */ unsigned long RvaToLastByteOfCode;
  /* 0x0018 */ unsigned long RvaToFirstByteOfData;
  /* 0x001c */ unsigned long RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER; /* size: 0x0020 */

typedef struct _XSAVE_AREA
{
  /* 0x0000 */ struct _XSAVE_FORMAT LegacyState;
  /* 0x0200 */ struct _XSAVE_AREA_HEADER Header;
} XSAVE_AREA, *PXSAVE_AREA; /* size: 0x0240 */

class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct _FILE_END_OF_FILE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFO, *PFILE_END_OF_FILE_INFO; /* size: 0x0008 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_8cabb7dbc03479911dce050d042462ba> >
{
  /* 0x0000 */ long Padding_1386[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::ReactivateAndUndo::__l2::<lambda_8cabb7dbc03479911dce050d042462ba>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

class CLimitedWritableStorage::Revert::__l2::<lambda_828ba3180f084769e3a35cd5c8d78af3>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
}; /* size: 0x0008 */

class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct _HV_DETAILS
{
  /* 0x0000 */ unsigned long Data[4];
} HV_DETAILS, *PHV_DETAILS; /* size: 0x0010 */

class CWrapperBase<IStream>::{dtor}::__l2::<lambda_857927a93fbdbf954257c5a12af5e448>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

class AdHocCallFrame<IOleInPlaceObject,<lambda_6c7999a0825145bb8114241691193a37> >
{
  /* 0x0000 */ long Padding_1387[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>::InPlaceDeactivate::__l2::<lambda_6c7999a0825145bb8114241691193a37>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _FILE_LINK_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned char ReplaceIfExists;
    /* 0x0000 */ unsigned long Flags;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1388;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_INFORMATION, *PFILE_LINK_INFORMATION; /* size: 0x0018 */

struct IComCatalogLocation
{
}; /* size: 0x0008 */

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long cCertStore;
  /* 0x000c */ long Padding_1389;
  /* 0x0010 */ void** rghCertStore;
} CRYPT_DECRYPT_MESSAGE_PARA, *PCRYPT_DECRYPT_MESSAGE_PARA; /* size: 0x0018 */

struct pvalueW
{
  /* 0x0000 */ wchar_t* pv_valuename;
  /* 0x0008 */ int pv_valuelen;
  /* 0x000c */ long Padding_1390;
  /* 0x0010 */ void* pv_value_context;
  /* 0x0018 */ unsigned long pv_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _SERVICE_DELAYED_AUTO_START_INFO
{
  /* 0x0000 */ int fDelayedAutostart;
} SERVICE_DELAYED_AUTO_START_INFO, *PSERVICE_DELAYED_AUTO_START_INFO; /* size: 0x0004 */

typedef struct _CERT_X942_DH_VALIDATION_PARAMS
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB seed;
  /* 0x0018 */ unsigned long pgenCounter;
  /* 0x001c */ long __PADDING__[1];
} CERT_X942_DH_VALIDATION_PARAMS, *PCERT_X942_DH_VALIDATION_PARAMS; /* size: 0x0020 */

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0030 */ unsigned long dwOriginatorChoice;
  /* 0x0034 */ long Padding_1391;
  union
  {
    /* 0x0038 */ struct _CERT_ID OriginatorCertId;
    /* 0x0038 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0030 */
  /* 0x0068 */ unsigned long cKeyAgreeKeyEncryptInfo;
  /* 0x006c */ long Padding_1392;
  /* 0x0070 */ struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO** rgpKeyAgreeKeyEncryptInfo;
  /* 0x0078 */ unsigned long dwFlags;
  /* 0x007c */ long __PADDING__[1];
} CMSG_KEY_AGREE_ENCRYPT_INFO, *PCMSG_KEY_AGREE_ENCRYPT_INFO; /* size: 0x0080 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1393;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO; /* size: 0x0018 */

class AdHocCallFrame<IOleWindow,<lambda_92c1c2c09ef3e1efce6163781ee57e61> >
{
  /* 0x0000 */ long Padding_1394[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IOleWindow,IOleWindow>::ContextSensitiveHelp::__l2::<lambda_92c1c2c09ef3e1efce6163781ee57e61>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _SYSTEM_ACTIVITY_MODERATION_INFO
{
  /* 0x0000 */ struct _UNICODE_STRING Identifier;
  /* 0x0010 */ enum _SYSTEM_ACTIVITY_MODERATION_STATE ModerationState;
  /* 0x0014 */ enum _SYSTEM_ACTIVITY_MODERATION_APP_TYPE AppType;
} SYSTEM_ACTIVITY_MODERATION_INFO, *PSYSTEM_ACTIVITY_MODERATION_INFO; /* size: 0x0018 */

typedef struct _PROCESS_FOREGROUND_BACKGROUND
{
  /* 0x0000 */ unsigned char Foreground;
} PROCESS_FOREGROUND_BACKGROUND, *PPROCESS_FOREGROUND_BACKGROUND; /* size: 0x0001 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef struct _CERT_NAME_VALUE
{
  /* 0x0000 */ unsigned long dwValueType;
  /* 0x0004 */ long Padding_1395;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_NAME_VALUE, *PCERT_NAME_VALUE; /* size: 0x0018 */

typedef struct _CONTAINER_ROOT_INFO_INPUT
{
  /* 0x0000 */ unsigned long Flags;
} CONTAINER_ROOT_INFO_INPUT, *PCONTAINER_ROOT_INFO_INPUT; /* size: 0x0004 */

typedef struct _FILE_DISPOSITION_INFORMATION_EX
{
  /* 0x0000 */ unsigned long Flags;
} FILE_DISPOSITION_INFORMATION_EX, *PFILE_DISPOSITION_INFORMATION_EX; /* size: 0x0004 */

class CWrapperBase<IEnumSTATSTG>::{dtor}::__l2::<lambda_8f13d703fe13c76f69ce08951bcc75b5>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef struct _ENLISTMENT_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID TransactionId;
  /* 0x0020 */ struct _GUID ResourceManagerId;
} ENLISTMENT_BASIC_INFORMATION, *PENLISTMENT_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _SYSTEM_HYPERVISOR_BOOT_PAGES_INFORMATION
{
  /* 0x0000 */ unsigned long RangeCount;
  /* 0x0004 */ unsigned long Pad;
  /* 0x0008 */ unsigned __int64 RangeArray[1];
} SYSTEM_HYPERVISOR_BOOT_PAGES_INFORMATION, *PSYSTEM_HYPERVISOR_BOOT_PAGES_INFORMATION; /* size: 0x0010 */

typedef struct _MEMORY_PARTITION_ATTRIBUTE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Flags;
} MEMORY_PARTITION_ATTRIBUTE_INFORMATION, *PMEMORY_PARTITION_ATTRIBUTE_INFORMATION; /* size: 0x0008 */

typedef struct _SYSDBG_IO_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long AddressSpace;
} SYSDBG_IO_SPACE, *PSYSDBG_IO_SPACE; /* size: 0x0020 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_OUTFLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_OUTFLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum _FS_BPIO_OUTFLAGS>; /* size: 0x0001 */

typedef struct _SYSTEM_INFO
{
  union
  {
    /* 0x0000 */ unsigned long dwOemId;
    struct
    {
      /* 0x0000 */ unsigned short wProcessorArchitecture;
      /* 0x0002 */ unsigned short wReserved;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwPageSize;
  /* 0x0008 */ void* lpMinimumApplicationAddress;
  /* 0x0010 */ void* lpMaximumApplicationAddress;
  /* 0x0018 */ unsigned __int64 dwActiveProcessorMask;
  /* 0x0020 */ unsigned long dwNumberOfProcessors;
  /* 0x0024 */ unsigned long dwProcessorType;
  /* 0x0028 */ unsigned long dwAllocationGranularity;
  /* 0x002c */ unsigned short wProcessorLevel;
  /* 0x002e */ unsigned short wProcessorRevision;
} SYSTEM_INFO, *PSYSTEM_INFO; /* size: 0x0030 */

typedef struct _RTL_IMAGE_MITIGATION_SEHOP_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY Sehop;
} RTL_IMAGE_MITIGATION_SEHOP_POLICY, *PRTL_IMAGE_MITIGATION_SEHOP_POLICY; /* size: 0x0008 */

typedef struct _RTL_VERIFIER_ALL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned __int64 OffsetPageHeapsInformation;
  /* 0x0010 */ unsigned __int64 OffsetRuntimeFlagsInformation;
  /* 0x0018 */ unsigned __int64 OffsetFaultInjectInformation;
} RTL_VERIFIER_ALL_INFORMATION, *PRTL_VERIFIER_ALL_INFORMATION; /* size: 0x0020 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG64
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_1396;
  /* 0x0008 */ unsigned __int64 CriticalSection;
  /* 0x0010 */ struct LIST_ENTRY64 ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x002e */ unsigned short Identifier;
} RTL_CRITICAL_SECTION_DEBUG64, *PRTL_CRITICAL_SECTION_DEBUG64; /* size: 0x0030 */

struct std::_Atomic_storage<unsigned long,4>
{
  /* 0x0000 */ struct std::_Atomic_padded<unsigned long> _Storage;
}; /* size: 0x0004 */

struct tagDROPSTRUCT
{
  /* 0x0000 */ struct HWND__* hwndSource;
  /* 0x0008 */ struct HWND__* hwndSink;
  /* 0x0010 */ unsigned long wFmt;
  /* 0x0014 */ long Padding_1397;
  /* 0x0018 */ unsigned __int64 dwData;
  /* 0x0020 */ struct tagPOINT ptDrop;
  /* 0x0028 */ unsigned long dwControlData;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _XSAVE_CET_U_FORMAT
{
  /* 0x0000 */ unsigned __int64 Ia32CetUMsr;
  /* 0x0008 */ unsigned __int64 Ia32Pl3SspMsr;
} XSAVE_CET_U_FORMAT, *PXSAVE_CET_U_FORMAT; /* size: 0x0010 */

class CLimitedWritableStorage::CreateStream::__l2::<lambda_9248f5e097f132b19a75522d4d896069>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ unsigned long& grfMode;
  /* 0x0018 */ unsigned long& reserved1;
  /* 0x0020 */ unsigned long& reserved2;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IStream>& spInner;
}; /* size: 0x0030 */

struct std::_Atomic_integral<unsigned long,4>
{
}; /* size: 0x0004 */

struct ITimeAndNoticeControl
{
}; /* size: 0x0008 */

class AdHocCallFrame<IElementBehavior,<lambda_d914c7f54183b33a257332a7d99c0d41> >
{
  /* 0x0000 */ long Padding_1398[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>::Detach::__l2::<lambda_d914c7f54183b33a257332a7d99c0d41>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

struct std::_Atomic_integral_facade<unsigned long>
{
}; /* size: 0x0004 */

typedef struct _BCRYPT_MULTI_OBJECT_LENGTH_STRUCT
{
  /* 0x0000 */ unsigned long cbPerObject;
  /* 0x0004 */ unsigned long cbPerElement;
} BCRYPT_MULTI_OBJECT_LENGTH_STRUCT, *PBCRYPT_MULTI_OBJECT_LENGTH_STRUCT; /* size: 0x0008 */

typedef struct _SYSTEM_WRITE_CONSTRAINT_INFORMATION
{
  /* 0x0000 */ unsigned long WriteConstraintPolicy;
  /* 0x0004 */ unsigned long Reserved;
} SYSTEM_WRITE_CONSTRAINT_INFORMATION, *PSYSTEM_WRITE_CONSTRAINT_INFORMATION; /* size: 0x0008 */

struct tagRECONVERTSTRING
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwStrLen;
  /* 0x000c */ unsigned long dwStrOffset;
  /* 0x0010 */ unsigned long dwCompStrLen;
  /* 0x0014 */ unsigned long dwCompStrOffset;
  /* 0x0018 */ unsigned long dwTargetStrLen;
  /* 0x001c */ unsigned long dwTargetStrOffset;
}; /* size: 0x0020 */

struct SYSTEM_BATTERY_STATE
{
  /* 0x0000 */ unsigned char AcOnLine;
  /* 0x0001 */ unsigned char BatteryPresent;
  /* 0x0002 */ unsigned char Charging;
  /* 0x0003 */ unsigned char Discharging;
  /* 0x0004 */ unsigned char Spare1[3];
  /* 0x0007 */ unsigned char Tag;
  /* 0x0008 */ unsigned long MaxCapacity;
  /* 0x000c */ unsigned long RemainingCapacity;
  /* 0x0010 */ unsigned long Rate;
  /* 0x0014 */ unsigned long EstimatedTime;
  /* 0x0018 */ unsigned long DefaultAlert1;
  /* 0x001c */ unsigned long DefaultAlert2;
}; /* size: 0x0020 */

typedef struct _SHFILEOPSTRUCTW
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int wFunc;
  /* 0x000c */ long Padding_1399;
  /* 0x0010 */ const wchar_t* pFrom;
  /* 0x0018 */ const wchar_t* pTo;
  /* 0x0020 */ unsigned short fFlags;
  /* 0x0022 */ char Padding_1400[2];
  /* 0x0024 */ int fAnyOperationsAborted;
  /* 0x0028 */ void* hNameMappings;
  /* 0x0030 */ const wchar_t* lpszProgressTitle;
} SHFILEOPSTRUCTW, *PSHFILEOPSTRUCTW; /* size: 0x0038 */

class CReadOnlyStorage::Stat::__l2::<lambda_9ee25847ed46d519a0f8b2a7b76ad1cb>
{
  /* 0x0000 */ class CReadOnlyStorage* const __this;
  /* 0x0008 */ struct tagSTATSTG*& pstatstg;
  /* 0x0010 */ unsigned long& grfStatFlag;
}; /* size: 0x0018 */

typedef struct _SPARSE_OVERALLOCATE_DATA
{
  /* 0x0000 */ unsigned long SparseOverAllocateSize;
} SPARSE_OVERALLOCATE_DATA, *PSPARSE_OVERALLOCATE_DATA; /* size: 0x0004 */

struct tagEMRPOLYTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ long cStrings;
  /* 0x0028 */ struct tagEMRTEXT aemrtext[1];
}; /* size: 0x0050 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_ALARM_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE; /* size: 0x000c */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum FILE_WRITE_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum FILE_WRITE_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum FILE_WRITE_FLAGS>; /* size: 0x0001 */

typedef struct _CMSG_CTRL_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1401;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ unsigned long dwRecipientIndex;
} CMSG_CTRL_DECRYPT_PARA, *PCMSG_CTRL_DECRYPT_PARA; /* size: 0x0018 */

typedef struct _RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY DisallowChildProcessCreation;
} RTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY, *PRTL_IMAGE_MITIGATION_CHILD_PROCESS_POLICY; /* size: 0x0008 */

class AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

struct DeriveInterfaces<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0010 */

class CReadOnlyStorage::EnumElements::__l2::<lambda_c2debb2788f3ef9f8ec79bcf639a9eba>
{
  /* 0x0000 */ class CReadOnlyStorage* const __this;
  /* 0x0008 */ unsigned long& reserved1;
  /* 0x0010 */ void*& reserved2;
  /* 0x0018 */ unsigned long& reserved3;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>& spInner;
}; /* size: 0x0028 */

class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>
{
  /* 0x0000 */ const wchar_t* const s_interfaceName;
}; /* size: 0x0008 */

typedef struct _SCHANNEL_ALG
{
  /* 0x0000 */ unsigned long dwUse;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned long cBits;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwReserved;
} SCHANNEL_ALG, *PSCHANNEL_ALG; /* size: 0x0014 */

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} TIME_DYNAMIC_ZONE_INFORMATION, *PTIME_DYNAMIC_ZONE_INFORMATION; /* size: 0x01b0 */

struct ISearchProtocol
{
}; /* size: 0x0008 */

struct DISPLAYCONFIG_ADAPTER_NAME
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ wchar_t adapterDevicePath[128];
}; /* size: 0x0114 */

typedef struct _ACL_REVISION_INFORMATION
{
  /* 0x0000 */ unsigned long AclRevision;
} ACL_REVISION_INFORMATION, *PACL_REVISION_INFORMATION; /* size: 0x0004 */

typedef struct _NOTIFYICONIDENTIFIER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1402;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ struct _GUID guidItem;
  /* 0x0024 */ long __PADDING__[1];
} NOTIFYICONIDENTIFIER, *PNOTIFYICONIDENTIFIER; /* size: 0x0028 */

typedef struct _RPC_TRANSFER_SYNTAX
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_TRANSFER_SYNTAX, *PRPC_TRANSFER_SYNTAX; /* size: 0x0014 */

typedef struct _FILE_INFORMATION_DEFINITION
{
  /* 0x0000 */ enum _FILE_INFORMATION_CLASS Class;
  /* 0x0004 */ unsigned long NextEntryOffset;
  /* 0x0008 */ unsigned long FileNameLengthOffset;
  /* 0x000c */ unsigned long FileNameOffset;
} FILE_INFORMATION_DEFINITION, *PFILE_INFORMATION_DEFINITION; /* size: 0x0010 */

class AdHocCallFrame<ISearchProtocol,<lambda_202ebde2c4736aa82d78f43a76d480cf> >
{
  /* 0x0000 */ long Padding_1403[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::CloseAccessor::__l2::<lambda_202ebde2c4736aa82d78f43a76d480cf>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _PROCESS_WORKING_SET_CONTROL
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _PROCESS_WORKING_SET_OPERATION Operation;
  /* 0x0008 */ unsigned long Flags;
} PROCESS_WORKING_SET_CONTROL, *PPROCESS_WORKING_SET_CONTROL; /* size: 0x000c */

typedef struct _FILE_ALLOCATION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFO, *PFILE_ALLOCATION_INFO; /* size: 0x0008 */

typedef struct _CRYPT_SMIME_CAPABILITY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_SMIME_CAPABILITY, *PCRYPT_SMIME_CAPABILITY; /* size: 0x0018 */

class CWrapperBase<IUnknown>::{dtor}::__l2::<lambda_c819397f95c37f5ccdbe095601a61b25>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

class CLimitedWritableStorage::OpenStream::__l2::<lambda_d171dd235d7ccf127f18467165bcf888>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ void*& reserved1;
  /* 0x0018 */ unsigned long& grfMode;
  /* 0x0020 */ unsigned long& reserved2;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IStream>& spInner;
}; /* size: 0x0030 */

typedef struct _FILE_PROVIDER_EXTERNAL_INFO_V0
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Algorithm;
} FILE_PROVIDER_EXTERNAL_INFO_V0, *PFILE_PROVIDER_EXTERNAL_INFO_V0; /* size: 0x0008 */

struct tagCHANGEFILTERSTRUCT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ExtStatus;
}; /* size: 0x0008 */

class AdHocCallFrame<ISearchProtocol,<lambda_ab7661f9106dbe63888238c0c4789392> >
{
  /* 0x0000 */ long Padding_1404[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol2>::CreateAccessor::__l2::<lambda_ab7661f9106dbe63888238c0c4789392>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _SERVICE_TABLE_ENTRYW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYW, *PSERVICE_TABLE_ENTRYW; /* size: 0x0010 */

class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_1405[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,NdrTypeInfo *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_1406;
  /* 0x0030 */ struct NdrTypeInfo* m_r;
}; /* size: 0x0038 */

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long FlagsToEnable;
  /* 0x0004 */ unsigned long FlagsToDisable;
} SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION, *PSYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION; /* size: 0x0008 */

typedef struct _PROCESS_SECURITY_DOMAIN_INFORMATION
{
  /* 0x0000 */ unsigned __int64 SecurityDomain;
} PROCESS_SECURITY_DOMAIN_INFORMATION, *PPROCESS_SECURITY_DOMAIN_INFORMATION; /* size: 0x0008 */

typedef struct _UNIVERSAL_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
} UNIVERSAL_NAME_INFOW, *PUNIVERSAL_NAME_INFOW; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<ITypeInfo>;

typedef struct _MEMORY_SHARED_COMMIT_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CommitSize;
} MEMORY_SHARED_COMMIT_INFORMATION, *PMEMORY_SHARED_COMMIT_INFORMATION; /* size: 0x0008 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _CRYPT_DECODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1407;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
} CRYPT_DECODE_PARA, *PCRYPT_DECODE_PARA; /* size: 0x0018 */

class CBrokeredClipDataObject::QueryGetData::__l8::<lambda_e5c40cffaeebcd7486ba9b9e983680d3>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ struct tagFORMATETC*& pformatetc;
}; /* size: 0x0010 */

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _COORD dwSize;
  /* 0x0008 */ struct _COORD dwCursorPosition;
  /* 0x000c */ unsigned short wAttributes;
  /* 0x000e */ struct _SMALL_RECT srWindow;
  /* 0x0016 */ struct _COORD dwMaximumWindowSize;
  /* 0x001a */ unsigned short wPopupAttributes;
  /* 0x001c */ int bFullscreenSupported;
  /* 0x0020 */ unsigned long ColorTable[16];
} CONSOLE_SCREEN_BUFFER_INFOEX, *PCONSOLE_SCREEN_BUFFER_INFOEX; /* size: 0x0060 */

typedef struct _CMC_TAGGED_ATTRIBUTE
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1408;
  /* 0x0008 */ struct _CRYPT_ATTRIBUTE Attribute;
} CMC_TAGGED_ATTRIBUTE, *PCMC_TAGGED_ATTRIBUTE; /* size: 0x0020 */

typedef struct _MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1409;
  /* 0x0008 */ void* ProcessHandle;
  /* 0x0010 */ unsigned long PatchCount;
  /* 0x0014 */ long Padding_1410;
  /* 0x0018 */ struct _UNICODE_STRING* PatchPathStrings;
  /* 0x0020 */ struct _HOT_PATCH_IMAGE_INFO* BaseInfos;
  /* 0x0028 */ unsigned long* PatchSequenceNumbers;
} MANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES, *PMANAGE_HOT_PATCH_QUERY_ACTIVE_PATCHES; /* size: 0x0030 */

class Microsoft::WRL::ComPtr<NdrTypeInfo>;

typedef struct _WIN32_STREAM_ID
{
  /* 0x0000 */ unsigned long dwStreamId;
  /* 0x0004 */ unsigned long dwStreamAttributes;
  /* 0x0008 */ union _LARGE_INTEGER Size;
  /* 0x0010 */ unsigned long dwStreamNameSize;
  /* 0x0014 */ wchar_t cStreamName[1];
  /* 0x0016 */ char __PADDING__[2];
} WIN32_STREAM_ID, *PWIN32_STREAM_ID; /* size: 0x0018 */

typedef struct _div_t
{
  /* 0x0000 */ int quot;
  /* 0x0004 */ int rem;
} div_t, *Pdiv_t; /* size: 0x0008 */

typedef struct _SYSTEM_KERNEL_VA_SHADOW_INFORMATION
{
  struct
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long KvaShadowEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long KvaShadowUserGlobal : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long KvaShadowPcid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long KvaShadowInvpcid : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long KvaShadowRequired : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long KvaShadowRequiredAvailable : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long InvalidPteBit : 6; /* bit position: 6 */
      /* 0x0000 */ unsigned long L1DataCacheFlushSupported : 1; /* bit position: 12 */
      /* 0x0000 */ unsigned long L1TerminalFaultMitigationPresent : 1; /* bit position: 13 */
      /* 0x0000 */ unsigned long Reserved : 18; /* bit position: 14 */
    }; /* bitfield */
  } /* size: 0x0004 */ KvaShadowFlags;
} SYSTEM_KERNEL_VA_SHADOW_INFORMATION, *PSYSTEM_KERNEL_VA_SHADOW_INFORMATION; /* size: 0x0004 */

class CDragOperation::RuntimeClassInitialize::__l69::<lambda_702d43245a365bbf444b64ed9d04c906>
{
  /* 0x0000 */ struct tagMSG& msg;
}; /* size: 0x0008 */

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEnlistments;
  /* 0x0004 */ struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
} TRANSACTION_ENLISTMENTS_INFORMATION, *PTRANSACTION_ENLISTMENTS_INFORMATION; /* size: 0x0024 */

class IntRegion<unsigned long,unsigned __int64>
{
}; /* size: 0x0001 */

class SafeCastHelper<unsigned long,unsigned int,0>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_TIMESTAMP_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1411;
  /* 0x0008 */ char* pszTSAPolicyId;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB HashedMessage;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0048 */ struct _FILETIME ftTime;
  /* 0x0050 */ struct _CRYPT_TIMESTAMP_ACCURACY* pvAccuracy;
  /* 0x0058 */ int fOrdering;
  /* 0x005c */ long Padding_1412;
  /* 0x0060 */ struct _CRYPTOAPI_BLOB Nonce;
  /* 0x0070 */ struct _CRYPTOAPI_BLOB Tsa;
  /* 0x0080 */ unsigned long cExtension;
  /* 0x0084 */ long Padding_1413;
  /* 0x0088 */ struct _CERT_EXTENSION* rgExtension;
} CRYPT_TIMESTAMP_INFO, *PCRYPT_TIMESTAMP_INFO; /* size: 0x0090 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x0018 */ int m_fDone;
  /* 0x001c */ long Padding_1414;
  /* 0x0020 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0028 */ struct INTERFACE_HELPER_CLSID** m_pvalue;
  /* 0x0030 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x0038 */

class CTSmartPtr_PolicyComplete<CTContainer_PolicyLocalMem>
{
}; /* size: 0x0001 */

class CLocalMemPtr<unsigned short>
{
}; /* size: 0x0008 */

typedef struct _SCOPE_TABLE_AMD64
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE_AMD64, *PSCOPE_TABLE_AMD64; /* size: 0x0014 */

typedef struct _SYSTEM_CALL_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long NumberOfTables;
} SYSTEM_CALL_COUNT_INFORMATION, *PSYSTEM_CALL_COUNT_INFORMATION; /* size: 0x0008 */

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} ALPC_PORT_ASSOCIATE_COMPLETION_PORT, *PALPC_PORT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

struct threadlocaleinfostruct
{
  /* 0x0000 */ int refcount;
  /* 0x0004 */ unsigned int lc_codepage;
  /* 0x0008 */ unsigned int lc_collate_cp;
  /* 0x000c */ unsigned long lc_handle[6];
  /* 0x0024 */ struct tagLC_ID lc_id[6];
  /* 0x0048 */ struct
  {
    /* 0x0048 */ char* locale;
    /* 0x0050 */ wchar_t* wlocale;
    /* 0x0058 */ int* refcount;
    /* 0x0060 */ int* wrefcount;
  } /* size: 0x0020 */ lc_category[6];
  /* 0x0108 */ int lc_clike;
  /* 0x010c */ int mb_cur_max;
  /* 0x0110 */ int* lconv_intl_refcount;
  /* 0x0118 */ int* lconv_num_refcount;
  /* 0x0120 */ int* lconv_mon_refcount;
  /* 0x0128 */ struct lconv* lconv;
  /* 0x0130 */ int* ctype1_refcount;
  /* 0x0138 */ unsigned short* ctype1;
  /* 0x0140 */ const unsigned short* pctype;
  /* 0x0148 */ const unsigned char* pclmap;
  /* 0x0150 */ const unsigned char* pcumap;
  /* 0x0158 */ struct __lc_time_data* lc_time_curr;
}; /* size: 0x0160 */

typedef struct _FILE_STANDARD_INFORMATION_EX
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ unsigned char AlternateStream;
  /* 0x0017 */ unsigned char MetadataAttribute;
} FILE_STANDARD_INFORMATION_EX, *PFILE_STANDARD_INFORMATION_EX; /* size: 0x0018 */

typedef struct _ENCRYPTION_KEY_CTRL_INPUT
{
  /* 0x0000 */ unsigned long HeaderSize;
  /* 0x0004 */ unsigned long StructureSize;
  /* 0x0008 */ unsigned short KeyOffset;
  /* 0x000a */ unsigned short KeySize;
  /* 0x000c */ unsigned long DplLock;
  /* 0x0010 */ unsigned __int64 DplUserId;
  /* 0x0018 */ unsigned __int64 DplCredentialId;
} ENCRYPTION_KEY_CTRL_INPUT, *PENCRYPTION_KEY_CTRL_INPUT; /* size: 0x0020 */

typedef struct _FSCTL_OFFLOAD_READ_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 TransferLength;
  /* 0x0010 */ unsigned char Token[512];
} FSCTL_OFFLOAD_READ_OUTPUT, *PFSCTL_OFFLOAD_READ_OUTPUT; /* size: 0x0210 */

struct IInternetHostSecurityManager
{
}; /* size: 0x0008 */

class wil::details::<lambda_0fc8029a6791e39f2db3c508b91189aa>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<INotARealInterface> >;

typedef struct _CERT_GENERAL_SUBTREE
{
  /* 0x0000 */ struct _CERT_ALT_NAME_ENTRY Base;
  /* 0x0018 */ unsigned long dwMinimum;
  /* 0x001c */ int fMaximum;
  /* 0x0020 */ unsigned long dwMaximum;
  /* 0x0024 */ long __PADDING__[1];
} CERT_GENERAL_SUBTREE, *PCERT_GENERAL_SUBTREE; /* size: 0x0028 */

typedef struct _SYSTEM_HYPERVISOR_DETAIL_INFORMATION
{
  /* 0x0000 */ struct _HV_DETAILS HvVendorAndMaxFunction;
  /* 0x0010 */ struct _HV_DETAILS HypervisorInterface;
  /* 0x0020 */ struct _HV_DETAILS HypervisorVersion;
  /* 0x0030 */ struct _HV_DETAILS HvFeatures;
  /* 0x0040 */ struct _HV_DETAILS HwFeatures;
  /* 0x0050 */ struct _HV_DETAILS EnlightenmentInfo;
  /* 0x0060 */ struct _HV_DETAILS ImplementationLimits;
} SYSTEM_HYPERVISOR_DETAIL_INFORMATION, *PSYSTEM_HYPERVISOR_DETAIL_INFORMATION; /* size: 0x0070 */

struct CDragOperation::IsDropAllowed::__l2::PolicyArguments
{
  /* 0x0000 */ const wchar_t* sourceEnterpriseId;
  /* 0x0008 */ class wil::unique_any_t<wil::details::unique_storage<wil::details::resource_policy<EDP_CONTEXT *,void (__cdecl*)(EDP_CONTEXT *),&EdpFreeContext,wistd::integral_constant<unsigned __int64,0>,EDP_CONTEXT *,EDP_CONTEXT *,0,std::nullptr_t> > > targetContext;
  /* 0x0010 */ struct HWND__* targetWindow;
  /* 0x0018 */ struct IDataObject* dataObject;
  /* 0x0020 */ BOOL hasHDROPClipboardFormat;
  /* 0x0021 */ char Padding_1415[3];
  /* 0x0024 */ enum EDP_POLICY_RESULT policyResult;
}; /* size: 0x0028 */

struct tagTTPOLYGONHEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ struct tagPOINTFX pfxStart;
}; /* size: 0x0010 */

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB blob;
} CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x0018 */

typedef union _JOBOBJECT_ENERGY_TRACKING_STATE
{
  union
  {
    /* 0x0000 */ unsigned __int64 Value;
    struct
    {
      /* 0x0000 */ unsigned long UpdateMask;
      /* 0x0004 */ unsigned long DesiredState;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} JOBOBJECT_ENERGY_TRACKING_STATE, *PJOBOBJECT_ENERGY_TRACKING_STATE; /* size: 0x0008 */

typedef struct _WIM_PROVIDER_CONTROL_INTEGRITY
{
  /* 0x0000 */ unsigned long ControlCode;
} WIM_PROVIDER_CONTROL_INTEGRITY, *PWIM_PROVIDER_CONTROL_INTEGRITY; /* size: 0x0004 */

typedef struct _CRYPT_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ const struct _CERT_CONTEXT* pSigningCert;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
  /* 0x0030 */ unsigned long cMsgCert;
  /* 0x0034 */ long Padding_1416;
  /* 0x0038 */ const struct _CERT_CONTEXT** rgpMsgCert;
  /* 0x0040 */ unsigned long cMsgCrl;
  /* 0x0044 */ long Padding_1417;
  /* 0x0048 */ const struct _CRL_CONTEXT** rgpMsgCrl;
  /* 0x0050 */ unsigned long cAuthAttr;
  /* 0x0054 */ long Padding_1418;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0060 */ unsigned long cUnauthAttr;
  /* 0x0064 */ long Padding_1419;
  /* 0x0068 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
  /* 0x0070 */ unsigned long dwFlags;
  /* 0x0074 */ unsigned long dwInnerContentType;
} CRYPT_SIGN_MESSAGE_PARA, *PCRYPT_SIGN_MESSAGE_PARA; /* size: 0x0078 */

typedef struct _MUTANT_OWNER_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
} MUTANT_OWNER_INFORMATION, *PMUTANT_OWNER_INFORMATION; /* size: 0x0010 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

class wil::details::FeatureStateManager::EnsureSubscribedToProcessWideUsageFlushUnderLock::__l5::<lambda_152aa9d2a3a0648fa2fa7fcef514b376>
{
}; /* size: 0x0001 */

typedef struct _CRL_FIND_ISSUED_FOR_PARA
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pSubjectCert;
  /* 0x0008 */ const struct _CERT_CONTEXT* pIssuerCert;
} CRL_FIND_ISSUED_FOR_PARA, *PCRL_FIND_ISSUED_FOR_PARA; /* size: 0x0010 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _TXFS_GET_TRANSACTED_VERSION
{
  /* 0x0000 */ unsigned long ThisBaseVersion;
  /* 0x0004 */ unsigned long LatestVersion;
  /* 0x0008 */ unsigned short ThisMiniVersion;
  /* 0x000a */ unsigned short FirstMiniVersion;
  /* 0x000c */ unsigned short LatestMiniVersion;
  /* 0x000e */ char __PADDING__[2];
} TXFS_GET_TRANSACTED_VERSION, *PTXFS_GET_TRANSACTED_VERSION; /* size: 0x0010 */

typedef struct _SQM_STREAM_ENTRY_EX
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwType;
  union
  {
    union
    {
      /* 0x0008 */ const wchar_t* pwszVal;
      /* 0x0008 */ unsigned long dwVal;
      /* 0x0008 */ unsigned __int64 qwVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ val;
} SQM_STREAM_ENTRY_EX, *PSQM_STREAM_ENTRY_EX; /* size: 0x0010 */

typedef struct _CERT_BIOMETRIC_DATA
{
  /* 0x0000 */ unsigned long dwTypeOfBiometricDataChoice;
  /* 0x0004 */ long Padding_1420;
  union
  {
    /* 0x0008 */ unsigned long dwPredefined;
    /* 0x0008 */ char* pszObjId;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct _CERT_HASHED_URL HashedUrl;
} CERT_BIOMETRIC_DATA, *PCERT_BIOMETRIC_DATA; /* size: 0x0040 */

typedef struct _SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION
{
  /* 0x0000 */ unsigned __int64 WorkloadClass;
  /* 0x0008 */ unsigned __int64 CpuSets[1];
} SYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION, *PSYSTEM_WORKLOAD_ALLOWED_CPU_SET_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_CRITICAL_SECTION32
{
  /* 0x0000 */ unsigned long DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ unsigned long OwningThread;
  /* 0x0010 */ unsigned long LockSemaphore;
  /* 0x0014 */ unsigned long SpinCount;
} RTL_CRITICAL_SECTION32, *PRTL_CRITICAL_SECTION32; /* size: 0x0018 */

struct tagEMRFRAMERGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ struct tagSIZE szlStroke;
  /* 0x0028 */ unsigned char RgnData[1];
  /* 0x0029 */ char __PADDING__[3];
}; /* size: 0x002c */

typedef struct _CRYPT_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ void* pfnGetSignerCertificate /* function */;
  /* 0x0018 */ void* pvGetArg;
} CRYPT_VERIFY_MESSAGE_PARA, *PCRYPT_VERIFY_MESSAGE_PARA; /* size: 0x0020 */

typedef struct _NTFS_STATISTICS_EX
{
  /* 0x0000 */ unsigned long LogFileFullExceptions;
  /* 0x0004 */ unsigned long OtherExceptions;
  /* 0x0008 */ unsigned __int64 MftReads;
  /* 0x0010 */ unsigned __int64 MftReadBytes;
  /* 0x0018 */ unsigned __int64 MftWrites;
  /* 0x0020 */ unsigned __int64 MftWriteBytes;
  struct
  {
    /* 0x0028 */ unsigned long Write;
    /* 0x002c */ unsigned long Create;
    /* 0x0030 */ unsigned long SetInfo;
    /* 0x0034 */ unsigned long Flush;
  } /* size: 0x0010 */ MftWritesUserLevel;
  /* 0x0038 */ unsigned long MftWritesFlushForLogFileFull;
  /* 0x003c */ unsigned long MftWritesLazyWriter;
  /* 0x0040 */ unsigned long MftWritesUserRequest;
  /* 0x0044 */ long Padding_1421;
  /* 0x0048 */ unsigned __int64 Mft2Writes;
  /* 0x0050 */ unsigned __int64 Mft2WriteBytes;
  struct
  {
    /* 0x0058 */ unsigned long Write;
    /* 0x005c */ unsigned long Create;
    /* 0x0060 */ unsigned long SetInfo;
    /* 0x0064 */ unsigned long Flush;
  } /* size: 0x0010 */ Mft2WritesUserLevel;
  /* 0x0068 */ unsigned long Mft2WritesFlushForLogFileFull;
  /* 0x006c */ unsigned long Mft2WritesLazyWriter;
  /* 0x0070 */ unsigned long Mft2WritesUserRequest;
  /* 0x0074 */ long Padding_1422;
  /* 0x0078 */ unsigned __int64 RootIndexReads;
  /* 0x0080 */ unsigned __int64 RootIndexReadBytes;
  /* 0x0088 */ unsigned __int64 RootIndexWrites;
  /* 0x0090 */ unsigned __int64 RootIndexWriteBytes;
  /* 0x0098 */ unsigned __int64 BitmapReads;
  /* 0x00a0 */ unsigned __int64 BitmapReadBytes;
  /* 0x00a8 */ unsigned __int64 BitmapWrites;
  /* 0x00b0 */ unsigned __int64 BitmapWriteBytes;
  /* 0x00b8 */ unsigned long BitmapWritesFlushForLogFileFull;
  /* 0x00bc */ unsigned long BitmapWritesLazyWriter;
  /* 0x00c0 */ unsigned long BitmapWritesUserRequest;
  struct
  {
    /* 0x00c4 */ unsigned long Write;
    /* 0x00c8 */ unsigned long Create;
    /* 0x00cc */ unsigned long SetInfo;
    /* 0x00d0 */ unsigned long Flush;
  } /* size: 0x0010 */ BitmapWritesUserLevel;
  /* 0x00d4 */ long Padding_1423;
  /* 0x00d8 */ unsigned __int64 MftBitmapReads;
  /* 0x00e0 */ unsigned __int64 MftBitmapReadBytes;
  /* 0x00e8 */ unsigned __int64 MftBitmapWrites;
  /* 0x00f0 */ unsigned __int64 MftBitmapWriteBytes;
  /* 0x00f8 */ unsigned long MftBitmapWritesFlushForLogFileFull;
  /* 0x00fc */ unsigned long MftBitmapWritesLazyWriter;
  /* 0x0100 */ unsigned long MftBitmapWritesUserRequest;
  struct
  {
    /* 0x0104 */ unsigned long Write;
    /* 0x0108 */ unsigned long Create;
    /* 0x010c */ unsigned long SetInfo;
    /* 0x0110 */ unsigned long Flush;
  } /* size: 0x0010 */ MftBitmapWritesUserLevel;
  /* 0x0114 */ long Padding_1424;
  /* 0x0118 */ unsigned __int64 UserIndexReads;
  /* 0x0120 */ unsigned __int64 UserIndexReadBytes;
  /* 0x0128 */ unsigned __int64 UserIndexWrites;
  /* 0x0130 */ unsigned __int64 UserIndexWriteBytes;
  /* 0x0138 */ unsigned __int64 LogFileReads;
  /* 0x0140 */ unsigned __int64 LogFileReadBytes;
  /* 0x0148 */ unsigned __int64 LogFileWrites;
  /* 0x0150 */ unsigned __int64 LogFileWriteBytes;
  struct
  {
    /* 0x0158 */ unsigned long Calls;
    /* 0x015c */ unsigned long RunsReturned;
    /* 0x0160 */ unsigned long Hints;
    /* 0x0164 */ unsigned long HintsHonored;
    /* 0x0168 */ unsigned long Cache;
    /* 0x016c */ unsigned long CacheMiss;
    /* 0x0170 */ unsigned __int64 Clusters;
    /* 0x0178 */ unsigned __int64 HintsClusters;
    /* 0x0180 */ unsigned __int64 CacheClusters;
    /* 0x0188 */ unsigned __int64 CacheMissClusters;
  } /* size: 0x0038 */ Allocate;
  /* 0x0190 */ unsigned long DiskResourcesExhausted;
  /* 0x0194 */ long Padding_1425;
  /* 0x0198 */ unsigned __int64 VolumeTrimCount;
  /* 0x01a0 */ unsigned __int64 VolumeTrimTime;
  /* 0x01a8 */ unsigned __int64 VolumeTrimByteCount;
  /* 0x01b0 */ unsigned __int64 FileLevelTrimCount;
  /* 0x01b8 */ unsigned __int64 FileLevelTrimTime;
  /* 0x01c0 */ unsigned __int64 FileLevelTrimByteCount;
  /* 0x01c8 */ unsigned __int64 VolumeTrimSkippedCount;
  /* 0x01d0 */ unsigned __int64 VolumeTrimSkippedByteCount;
  /* 0x01d8 */ unsigned __int64 NtfsFillStatInfoFromMftRecordCalledCount;
  /* 0x01e0 */ unsigned __int64 NtfsFillStatInfoFromMftRecordBailedBecauseOfAttributeListCount;
  /* 0x01e8 */ unsigned __int64 NtfsFillStatInfoFromMftRecordBailedBecauseOfNonResReparsePointCount;
} NTFS_STATISTICS_EX, *PNTFS_STATISTICS_EX; /* size: 0x01f0 */

struct Windows::ApplicationModel::Internal::DataTransfer::IClipboardPolicyStatics
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorNumber;
  /* 0x0004 */ unsigned long StateCount;
  /* 0x0008 */ struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
} SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION; /* size: 0x0018 */

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION
{
  /* 0x0000 */ unsigned long Spare;
  /* 0x0004 */ unsigned long DpcQueueDepth;
  /* 0x0008 */ unsigned long MinimumDpcRate;
  /* 0x000c */ unsigned long AdjustDpcThreshold;
  /* 0x0010 */ unsigned long IdealDpcRate;
} SYSTEM_DPC_BEHAVIOR_INFORMATION, *PSYSTEM_DPC_BEHAVIOR_INFORMATION; /* size: 0x0014 */

typedef struct _FILE_DISPOSITION_INFO_EX
{
  /* 0x0000 */ unsigned long Flags;
} FILE_DISPOSITION_INFO_EX, *PFILE_DISPOSITION_INFO_EX; /* size: 0x0004 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum AddPackageDependencyOptions>
{
} ENUM_FLAG_SIZED_INTEGER<enum AddPackageDependencyOptions>, *PENUM_FLAG_SIZED_INTEGER<enum AddPackageDependencyOptions>; /* size: 0x0001 */

typedef struct _BCRYPT_OID_LIST
{
  /* 0x0000 */ unsigned long dwOIDCount;
  /* 0x0004 */ long Padding_1426;
  /* 0x0008 */ struct _BCRYPT_OID* pOIDs;
} BCRYPT_OID_LIST, *PBCRYPT_OID_LIST; /* size: 0x0010 */

class CDefClassFactory
{
  /* 0x0000 */ long Padding_1427[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ struct _GUID m_clsid;
}; /* size: 0x0020 */

typedef struct _SID_AND_ATTRIBUTES_HASH
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ long Padding_1428;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* SidAttr;
  /* 0x0010 */ unsigned __int64 Hash[32];
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH; /* size: 0x0110 */

struct tagOLEPRESSTMHDR
{
  /* 0x0000 */ unsigned long dwAspect;
  /* 0x0004 */ unsigned long dwLindex;
  /* 0x0008 */ unsigned long dwAdvf;
}; /* size: 0x000c */

typedef struct _BCRYPT_OAEP_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0008 */ unsigned char* pbLabel;
  /* 0x0010 */ unsigned long cbLabel;
  /* 0x0014 */ long __PADDING__[1];
} BCRYPT_OAEP_PADDING_INFO, *PBCRYPT_OAEP_PADDING_INFO; /* size: 0x0018 */

struct MEM_EXTENDED_PARAMETER
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Type : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Reserved : 56; /* bit position: 8 */
  }; /* bitfield */
  union
  {
    /* 0x0008 */ unsigned __int64 ULong64;
    /* 0x0008 */ void* Pointer;
    /* 0x0008 */ unsigned __int64 Size;
    /* 0x0008 */ void* Handle;
    struct
    {
      /* 0x0008 */ unsigned long ULong;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

typedef struct _WIM_PROVIDER_SUSPEND_OVERLAY_INPUT
{
  /* 0x0000 */ union _LARGE_INTEGER DataSourceId;
} WIM_PROVIDER_SUSPEND_OVERLAY_INPUT, *PWIM_PROVIDER_SUSPEND_OVERLAY_INPUT; /* size: 0x0008 */

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX
{
  /* 0x0000 */ unsigned char DebuggerAllowed;
  /* 0x0001 */ unsigned char DebuggerEnabled;
  /* 0x0002 */ unsigned char DebuggerPresent;
} SYSTEM_KERNEL_DEBUGGER_INFORMATION_EX, *PSYSTEM_KERNEL_DEBUGGER_INFORMATION_EX; /* size: 0x0003 */

struct _X86_NT5_CONTEXT;

typedef struct _exception
{
  /* 0x0000 */ int type;
  /* 0x0004 */ long Padding_1429;
  /* 0x0008 */ char* name;
  /* 0x0010 */ double arg1;
  /* 0x0018 */ double arg2;
  /* 0x0020 */ double retval;
} exception, *Pexception; /* size: 0x0028 */

struct tagSCROLLBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcScrollBar;
  /* 0x0014 */ int dxyLineButton;
  /* 0x0018 */ int xyThumbTop;
  /* 0x001c */ int xyThumbBottom;
  /* 0x0020 */ int reserved;
  /* 0x0024 */ unsigned long rgstate[6];
}; /* size: 0x003c */

struct HRGN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION
{
  /* 0x0000 */ unsigned long LowPriReadOperations;
  /* 0x0004 */ unsigned long LowPriWriteOperations;
  /* 0x0008 */ unsigned long KernelBumpedToNormalOperations;
  /* 0x000c */ unsigned long LowPriPagingReadOperations;
  /* 0x0010 */ unsigned long KernelPagingReadsBumpedToNormal;
  /* 0x0014 */ unsigned long LowPriPagingWriteOperations;
  /* 0x0018 */ unsigned long KernelPagingWritesBumpedToNormal;
  /* 0x001c */ unsigned long BoostedIrpCount;
  /* 0x0020 */ unsigned long BoostedPagingIrpCount;
  /* 0x0024 */ unsigned long BlanketBoostCount;
} SYSTEM_LOW_PRIORITY_IO_INFORMATION, *PSYSTEM_LOW_PRIORITY_IO_INFORMATION; /* size: 0x0028 */

typedef struct _FILESYSTEM_STATISTICS_EX
{
  /* 0x0000 */ unsigned short FileSystemType;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ unsigned long SizeOfCompleteStructure;
  /* 0x0008 */ unsigned __int64 UserFileReads;
  /* 0x0010 */ unsigned __int64 UserFileReadBytes;
  /* 0x0018 */ unsigned __int64 UserDiskReads;
  /* 0x0020 */ unsigned __int64 UserFileWrites;
  /* 0x0028 */ unsigned __int64 UserFileWriteBytes;
  /* 0x0030 */ unsigned __int64 UserDiskWrites;
  /* 0x0038 */ unsigned __int64 MetaDataReads;
  /* 0x0040 */ unsigned __int64 MetaDataReadBytes;
  /* 0x0048 */ unsigned __int64 MetaDataDiskReads;
  /* 0x0050 */ unsigned __int64 MetaDataWrites;
  /* 0x0058 */ unsigned __int64 MetaDataWriteBytes;
  /* 0x0060 */ unsigned __int64 MetaDataDiskWrites;
} FILESYSTEM_STATISTICS_EX, *PFILESYSTEM_STATISTICS_EX; /* size: 0x0068 */

typedef struct _CMC_TAGGED_OTHER_MSG
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1430;
  /* 0x0008 */ char* pszObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CMC_TAGGED_OTHER_MSG, *PCMC_TAGGED_OTHER_MSG; /* size: 0x0020 */

typedef union _PROCESS_LOGGING_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableReadVmLogging : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long EnableWriteVmLogging : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long EnableProcessSuspendResumeLogging : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long EnableThreadSuspendResumeLogging : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long EnableLocalExecProtectVmLogging : 1; /* bit position: 4 */
      /* 0x0000 */ unsigned long EnableRemoteExecProtectVmLogging : 1; /* bit position: 5 */
      /* 0x0000 */ unsigned long Reserved : 26; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_LOGGING_INFORMATION, *PPROCESS_LOGGING_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long ViewFailures;
  /* 0x0010 */ unsigned __int64 NumberOfBytesAvailable;
  /* 0x0018 */ unsigned __int64 NumberOfBytesAvailableContiguous;
} SYSTEM_SESSION_MAPPED_VIEW_INFORMATION, *PSYSTEM_SESSION_MAPPED_VIEW_INFORMATION; /* size: 0x0020 */

typedef struct _BCRYPT_KEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
} BCRYPT_KEY_BLOB, *PBCRYPT_KEY_BLOB; /* size: 0x0004 */

struct tagEMRANGLEARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlCenter;
  /* 0x0010 */ unsigned long nRadius;
  /* 0x0014 */ float eStartAngle;
  /* 0x0018 */ float eSweepAngle;
}; /* size: 0x001c */

typedef struct _RESUME_PERFORMANCE
{
  /* 0x0000 */ unsigned long PostTimeMs;
  /* 0x0004 */ long Padding_1431;
  /* 0x0008 */ unsigned __int64 TotalResumeTimeMs;
  /* 0x0010 */ unsigned __int64 ResumeCompleteTimestamp;
} RESUME_PERFORMANCE, *PRESUME_PERFORMANCE; /* size: 0x0018 */

typedef struct _RTL_DEBUG_INFORMATION
{
  /* 0x0000 */ void* SectionHandleClient;
  /* 0x0008 */ void* ViewBaseClient;
  /* 0x0010 */ void* ViewBaseTarget;
  /* 0x0018 */ unsigned __int64 ViewBaseDelta;
  /* 0x0020 */ void* EventPairClient;
  /* 0x0028 */ void* EventPairTarget;
  /* 0x0030 */ void* TargetProcessId;
  /* 0x0038 */ void* TargetThreadHandle;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ long Padding_1432;
  /* 0x0048 */ unsigned __int64 OffsetFree;
  /* 0x0050 */ unsigned __int64 CommitSize;
  /* 0x0058 */ unsigned __int64 ViewSize;
  union
  {
    /* 0x0060 */ struct _RTL_PROCESS_MODULES* Modules;
    /* 0x0060 */ struct _RTL_PROCESS_MODULE_INFORMATION_EX* ModulesEx;
  }; /* size: 0x0008 */
  /* 0x0068 */ struct _RTL_PROCESS_BACKTRACES* BackTraces;
  /* 0x0070 */ struct _RTL_PROCESS_HEAPS* Heaps;
  /* 0x0078 */ struct _RTL_PROCESS_LOCKS* Locks;
  /* 0x0080 */ void* SpecificHeap;
  /* 0x0088 */ void* TargetProcessHandle;
  /* 0x0090 */ struct _RTL_PROCESS_VERIFIER_OPTIONS* VerifierOptions;
  /* 0x0098 */ void* ProcessHeap;
  /* 0x00a0 */ void* CriticalSectionHandle;
  /* 0x00a8 */ void* CriticalSectionOwnerThread;
  /* 0x00b0 */ void* Reserved[4];
} RTL_DEBUG_INFORMATION, *PRTL_DEBUG_INFORMATION; /* size: 0x00d0 */

typedef struct _PROCESS_BASIC_INFORMATION64
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ unsigned int Pad1;
  /* 0x0008 */ unsigned __int64 PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ unsigned int Pad2;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION64, *PPROCESS_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
  union
  {
    /* 0x0038 */ unsigned int Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned int IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned int IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned int IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned int IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned int IsFrozen : 1; /* bit position: 4 */
      /* 0x0038 */ unsigned int IsBackground : 1; /* bit position: 5 */
      /* 0x0038 */ unsigned int IsStronglyNamed : 1; /* bit position: 6 */
      /* 0x0038 */ unsigned int IsSecureProcess : 1; /* bit position: 7 */
      /* 0x0038 */ unsigned int IsPicoProcess : 1; /* bit position: 8 */
      /* 0x0038 */ unsigned int SpareBits : 23; /* bit position: 9 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION64, *PPROCESS_EXTENDED_BASIC_INFORMATION64; /* size: 0x0040 */

class ScheduleClipboardWorkWithPLM::__l2::<lambda_0400965d427fb7c7c2a6231862b780df>
{
}; /* size: 0x0001 */

typedef struct _POWER_THROTTLING_THREAD_STATE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long ControlMask;
  /* 0x0008 */ unsigned long StateMask;
} POWER_THROTTLING_THREAD_STATE, *PPOWER_THROTTLING_THREAD_STATE; /* size: 0x000c */

typedef struct _RTL_SPARSE_BITMAP_RANGE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 Lock;
      /* 0x0008 */ struct _RTL_BITMAP RangeBitmap;
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct _SINGLE_LIST_ENTRY Next;
      /* 0x0008 */ long __PADDING__[4];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
} RTL_SPARSE_BITMAP_RANGE, *PRTL_SPARSE_BITMAP_RANGE; /* size: 0x0018 */

typedef struct _KERNEL_USER_TIMES
{
  /* 0x0000 */ union _LARGE_INTEGER CreateTime;
  /* 0x0008 */ union _LARGE_INTEGER ExitTime;
  /* 0x0010 */ union _LARGE_INTEGER KernelTime;
  /* 0x0018 */ union _LARGE_INTEGER UserTime;
} KERNEL_USER_TIMES, *PKERNEL_USER_TIMES; /* size: 0x0020 */

typedef struct _CTL_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1433;
  /* 0x0008 */ struct _CTL_USAGE Usage;
} CTL_USAGE_MATCH, *PCTL_USAGE_MATCH; /* size: 0x0018 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum CreatePackageDependencyOptions>
{
} ENUM_FLAG_SIZED_INTEGER<enum CreatePackageDependencyOptions>, *PENUM_FLAG_SIZED_INTEGER<enum CreatePackageDependencyOptions>; /* size: 0x0001 */

struct IXMLDOMProcessingInstruction
{
}; /* size: 0x0008 */

struct AsyncIAdviseSink
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_OUTPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned char FeatureIsEnabled;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_OUTPUT, *PSYSTEM_ORIGINAL_IMAGE_FEATURE_INFORMATION_OUTPUT; /* size: 0x0008 */

class Windows::Foundation::Collections::Internal::NaiveSplitView<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultEqualityPredicate<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *>,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *>,Windows::Foundation::Collections::Internal::DefaultHashMapOptions<HSTRING__ *,IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<HSTRING__ *> > >::Lookup::__l5::<lambda_e2e96e51e42edcad6b3668af4a803eaf>
{
  /* 0x0000 */ struct HSTRING__*& key;
  /* 0x0008 */ class XWinRT::AutoValue<IInspectable *,Windows::Foundation::Collections::Internal::DefaultLifetimeTraits<IInspectable *> >& v;
}; /* size: 0x0010 */

typedef struct _CMC_ADD_ATTRIBUTES_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ long Padding_1434;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CMC_ADD_ATTRIBUTES_INFO, *PCMC_ADD_ATTRIBUTES_INFO; /* size: 0x0020 */

typedef struct _REARRANGE_FILE_DATA
{
  /* 0x0000 */ unsigned __int64 SourceStartingOffset;
  /* 0x0008 */ unsigned __int64 TargetOffset;
  /* 0x0010 */ void* SourceFileHandle;
  /* 0x0018 */ unsigned long Length;
  /* 0x001c */ unsigned long Flags;
} REARRANGE_FILE_DATA, *PREARRANGE_FILE_DATA; /* size: 0x0020 */

typedef struct _SEMAPHORE_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ long MaximumCount;
} SEMAPHORE_BASIC_INFORMATION, *PSEMAPHORE_BASIC_INFORMATION; /* size: 0x0008 */

struct XLOCK_LEAF
{
}; /* size: 0x0030 */

struct LEGACY_INTERCEPTOR
{
  /* 0x0000 */ long Padding_1435[16];
  /* 0x0040 */ struct ICallFrameEvents* m_psink;
  /* 0x0048 */ struct _GUID m_iid;
  /* 0x0058 */ unsigned long m_cMethods;
  /* 0x005c */ long Padding_1436;
  /* 0x0060 */ struct XLOCK_LEAF m_frameLock;
  /* 0x0090 */ struct ICallFrame** m_ppframeCustomer;
  /* 0x0098 */ struct ICallInterceptor* m_premoteInterceptor;
  /* 0x00a0 */ int m_fRegdWithRemoteInterceptor;
  /* 0x00a4 */ long Padding_1437;
  /* 0x00a8 */ struct ICallInterceptor* m_pmemoryInterceptor;
  /* 0x00b0 */ int m_fRegdWithMemoryInterceptor;
  /* 0x00b4 */ long Padding_1438;
  /* 0x00b8 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x00c0 */ struct IUnknown* m_punkOuter;
  /* 0x00c8 */ long m_refs;
  /* 0x00cc */ int m_fShuttingDown;
}; /* size: 0x00d0 */

struct tagMSGBOXPARAMSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_1439;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const wchar_t* lpszText;
  /* 0x0020 */ const wchar_t* lpszCaption;
  /* 0x0028 */ unsigned long dwStyle;
  /* 0x002c */ long Padding_1440;
  /* 0x0030 */ const wchar_t* lpszIcon;
  /* 0x0038 */ unsigned __int64 dwContextHelpId;
  /* 0x0040 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0048 */ unsigned long dwLanguageId;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

class GenericInstantiator<DISPATCH_INTERCEPTOR>
{
}; /* size: 0x0001 */

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDeviceInstance;
  /* 0x0010 */ unsigned long Relation;
  /* 0x0014 */ long Padding_1441;
  /* 0x0018 */ wchar_t* RelatedDeviceInstance;
  /* 0x0020 */ unsigned long RelatedDeviceInstanceLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_RELATED_DEVICE_DATA, *PPLUGPLAY_CONTROL_RELATED_DEVICE_DATA; /* size: 0x0028 */

typedef struct _REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned long EntryCount;
  /* 0x0004 */ unsigned long BufferSizeRequiredForQuery;
  /* 0x0008 */ unsigned long Reserved[2];
  /* 0x0010 */ struct _REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER_ENTRY Entries[1];
} REFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER, *PREFS_STREAM_SNAPSHOT_LIST_OUTPUT_BUFFER; /* size: 0x0048 */

typedef struct _RTL_IMAGE_POLICY_METADATA
{
  /* 0x0000 */ const struct _IMAGE_POLICY_METADATA* PolicyMetadata;
  /* 0x0008 */ unsigned __int64 LBound;
  /* 0x0010 */ unsigned __int64 UBound;
} RTL_IMAGE_POLICY_METADATA, *PRTL_IMAGE_POLICY_METADATA; /* size: 0x0018 */

typedef struct _MEMORY_BASIC_INFORMATION32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionSize;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Protect;
  /* 0x0018 */ unsigned long Type;
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32; /* size: 0x001c */

typedef struct _CSV_QUERY_FILE_REVISION
{
  /* 0x0000 */ __int64 FileId;
  /* 0x0008 */ __int64 FileRevision[3];
} CSV_QUERY_FILE_REVISION, *PCSV_QUERY_FILE_REVISION; /* size: 0x0020 */

typedef struct _CSV_QUERY_MDS_PATH_V2
{
  /* 0x0000 */ __int64 Version;
  /* 0x0008 */ unsigned long RequiredSize;
  /* 0x000c */ unsigned long MdsNodeId;
  /* 0x0010 */ unsigned long DsNodeId;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ enum _CSVFS_DISK_CONNECTIVITY DiskConnectivity;
  /* 0x001c */ struct _GUID VolumeId;
  /* 0x002c */ unsigned long IpAddressOffset;
  /* 0x0030 */ unsigned long IpAddressLength;
  /* 0x0034 */ unsigned long PathOffset;
  /* 0x0038 */ unsigned long PathLength;
  /* 0x003c */ long __PADDING__[1];
} CSV_QUERY_MDS_PATH_V2, *PCSV_QUERY_MDS_PATH_V2; /* size: 0x0040 */

struct ImplementationHelpersDetails::IsUuidOfAnyInterfaceInListHelper<InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _INCREMENTAL_ACCESS_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ struct _FILETIME ftLastModifiedTime;
} INCREMENTAL_ACCESS_INFO, *PINCREMENTAL_ACCESS_INFO; /* size: 0x000c */

typedef struct _SHARED_VIRTUAL_DISK_SUPPORT
{
  /* 0x0000 */ enum _SharedVirtualDiskSupportType SharedVirtualDiskSupport;
  /* 0x0004 */ enum _SharedVirtualDiskHandleState HandleState;
} SHARED_VIRTUAL_DISK_SUPPORT, *PSHARED_VIRTUAL_DISK_SUPPORT; /* size: 0x0008 */

class AdHocInterceptor<ISearchProtocol2>
{
  /* 0x0000 */ long Padding_1442[10];
  /* 0x0028 */ class wil::srwlock m_lock;
  /* 0x0030 */ class wil::com_ptr_t<ICallFrameEvents,wil::err_returncode_policy> m_sink;
}; /* size: 0x0038 */

typedef struct _FILE_FS_FULL_SIZE_INFORMATION_EX
{
  /* 0x0000 */ unsigned __int64 ActualTotalAllocationUnits;
  /* 0x0008 */ unsigned __int64 ActualAvailableAllocationUnits;
  /* 0x0010 */ unsigned __int64 ActualPoolUnavailableAllocationUnits;
  /* 0x0018 */ unsigned __int64 CallerTotalAllocationUnits;
  /* 0x0020 */ unsigned __int64 CallerAvailableAllocationUnits;
  /* 0x0028 */ unsigned __int64 CallerPoolUnavailableAllocationUnits;
  /* 0x0030 */ unsigned __int64 UsedAllocationUnits;
  /* 0x0038 */ unsigned __int64 TotalReservedAllocationUnits;
  /* 0x0040 */ unsigned __int64 VolumeStorageReserveAllocationUnits;
  /* 0x0048 */ unsigned __int64 AvailableCommittedAllocationUnits;
  /* 0x0050 */ unsigned __int64 PoolAvailableAllocationUnits;
  /* 0x0058 */ unsigned long SectorsPerAllocationUnit;
  /* 0x005c */ unsigned long BytesPerSector;
} FILE_FS_FULL_SIZE_INFORMATION_EX, *PFILE_FS_FULL_SIZE_INFORMATION_EX; /* size: 0x0060 */

typedef struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_1443[3];
  /* 0x0008 */ unsigned long FaultProbability[16];
  /* 0x0048 */ unsigned long FaultBreak[16];
  /* 0x0088 */ unsigned long TargetMaximumIndex;
  /* 0x008c */ long Padding_1444;
  /* 0x0090 */ unsigned __int64 FaultTargetStart[128];
  /* 0x0490 */ unsigned __int64 FaultTargetEnd[128];
  /* 0x0890 */ unsigned long ExclusionMaximumIndex;
  /* 0x0894 */ long Padding_1445;
  /* 0x0898 */ unsigned __int64 FaultExclusionStart[128];
  /* 0x0c98 */ unsigned __int64 FaultExclusionEnd[128];
} RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION, *PRTL_VERIFIER_FAULT_INJECTIONS_INFORMATION; /* size: 0x1098 */

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _BCryptBuffer
{
  /* 0x0000 */ unsigned long cbBuffer;
  /* 0x0004 */ unsigned long BufferType;
  /* 0x0008 */ void* pvBuffer;
} BCryptBuffer, *PBCryptBuffer; /* size: 0x0010 */

struct tagEMRSETVIEWPORTORGEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOrigin;
}; /* size: 0x0010 */

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwInnerContentType;
} CRYPT_ENCRYPT_MESSAGE_PARA, *PCRYPT_ENCRYPT_MESSAGE_PARA; /* size: 0x0038 */

typedef struct _MAT2
{
  /* 0x0000 */ struct _FIXED eM11;
  /* 0x0004 */ struct _FIXED eM12;
  /* 0x0008 */ struct _FIXED eM21;
  /* 0x000c */ struct _FIXED eM22;
} MAT2, *PMAT2; /* size: 0x0010 */

typedef struct _RPC_SECURITY_QOS_V5_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1446;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long Padding_1447;
  /* 0x0030 */ void* ServerSecurityDescriptor;
} RPC_SECURITY_QOS_V5_W, *PRPC_SECURITY_QOS_V5_W; /* size: 0x0038 */

struct tagEMRCREATEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ struct tagLOGPALETTE lgpl;
}; /* size: 0x0014 */

struct wil::details::variable_size<1>
{
}; /* size: 0x0001 */

typedef struct _ALPC_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long SequenceNo;
  /* 0x0008 */ void* PortContext;
} ALPC_BASIC_INFORMATION, *PALPC_BASIC_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_SFIO_RESERVE_INFORMATION
{
  /* 0x0000 */ unsigned long RequestsPerPeriod;
  /* 0x0004 */ unsigned long Period;
  /* 0x0008 */ unsigned char RetryFailures;
  /* 0x0009 */ unsigned char Discardable;
  /* 0x000a */ char Padding_1448[2];
  /* 0x000c */ unsigned long RequestSize;
  /* 0x0010 */ unsigned long NumOutstandingRequests;
} FILE_SFIO_RESERVE_INFORMATION, *PFILE_SFIO_RESERVE_INFORMATION; /* size: 0x0014 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _MACHINE_ATTRIBUTES>
{
} ENUM_FLAG_SIZED_INTEGER<enum _MACHINE_ATTRIBUTES>, *PENUM_FLAG_SIZED_INTEGER<enum _MACHINE_ATTRIBUTES>; /* size: 0x0001 */

typedef struct _RTL_PHYSICAL_MEMORY_INFO
{
  /* 0x0000 */ enum RTL_PHYSICAL_MEMORY_POLICY Policy;
} RTL_PHYSICAL_MEMORY_INFO, *PRTL_PHYSICAL_MEMORY_INFO; /* size: 0x0004 */

typedef struct _MEMORY_PARTITION_INITIAL_ADD_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfRanges;
  /* 0x0008 */ unsigned __int64 NumberOfPagesAdded;
  /* 0x0010 */ unsigned __int64 DedicatedMemoryAttributes[4];
  /* 0x0030 */ struct _MEMORY_PARTITION_PAGE_RANGE PartitionRanges[1];
} MEMORY_PARTITION_INITIAL_ADD_INFORMATION, *PMEMORY_PARTITION_INITIAL_ADD_INFORMATION; /* size: 0x0040 */

typedef struct _CRL_ISSUING_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x0018 */ int fOnlyContainsUserCerts;
  /* 0x001c */ int fOnlyContainsCACerts;
  /* 0x0020 */ struct _CRYPT_BIT_BLOB OnlySomeReasonFlags;
  /* 0x0038 */ int fIndirectCRL;
  /* 0x003c */ long __PADDING__[1];
} CRL_ISSUING_DIST_POINT, *PCRL_ISSUING_DIST_POINT; /* size: 0x0040 */

struct tagPOINTER_TYPE_INFO
{
  /* 0x0000 */ unsigned long type;
  /* 0x0004 */ long Padding_1449;
  union
  {
    /* 0x0008 */ struct tagPOINTER_TOUCH_INFO touchInfo;
    struct
    {
      /* 0x0008 */ struct tagPOINTER_PEN_INFO penInfo;
      /* 0x0080 */ long __PADDING__[6];
    }; /* size: 0x0090 */
  }; /* size: 0x0090 */
}; /* size: 0x0098 */

struct ITypeMarshal
{
}; /* size: 0x0008 */

struct IUriContainer
{
}; /* size: 0x0008 */

typedef struct _CRYPT_HASH_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Hash;
} CRYPT_HASH_INFO, *PCRYPT_HASH_INFO; /* size: 0x0028 */

typedef struct _FILE_LEVEL_TRIM_OUTPUT
{
  /* 0x0000 */ unsigned long NumRangesProcessed;
} FILE_LEVEL_TRIM_OUTPUT, *PFILE_LEVEL_TRIM_OUTPUT; /* size: 0x0004 */

typedef struct _FSCTL_QUERY_REGION_INFO_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long NumberOfTierIds;
  /* 0x0010 */ struct _GUID TierIds[1];
} FSCTL_QUERY_REGION_INFO_INPUT, *PFSCTL_QUERY_REGION_INFO_INPUT; /* size: 0x0020 */

struct PACKAGE_INFO
{
  /* 0x0000 */ unsigned int reserved;
  /* 0x0004 */ unsigned int flags;
  /* 0x0008 */ wchar_t* path;
  /* 0x0010 */ wchar_t* packageFullName;
  /* 0x0018 */ wchar_t* packageFamilyName;
  /* 0x0020 */ struct PACKAGE_ID packageId;
}; /* size: 0x0050 */

typedef struct _RTL_FEATURE_USAGE_SUBSCRIPTION_TABLE
{
  /* 0x0000 */ unsigned long SubscriptionCount;
  /* 0x0004 */ struct _RTL_FEATURE_USAGE_SUBSCRIPTION_DETAILS Subscriptions[1];
} RTL_FEATURE_USAGE_SUBSCRIPTION_TABLE, *PRTL_FEATURE_USAGE_SUBSCRIPTION_TABLE; /* size: 0x0014 */

typedef struct _FILE_ID_INFO
{
  /* 0x0000 */ unsigned __int64 VolumeSerialNumber;
  /* 0x0008 */ struct _FILE_ID_128 FileId;
} FILE_ID_INFO, *PFILE_ID_INFO; /* size: 0x0018 */

typedef struct _TEB_ACTIVE_FRAME_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME BasicFrame;
  /* 0x0018 */ void* ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX, *PTEB_ACTIVE_FRAME_EX; /* size: 0x0020 */

typedef struct _NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1450;
  /* 0x0008 */ unsigned __int64 TrustletId;
  /* 0x0010 */ unsigned long MinSvn;
  /* 0x0014 */ unsigned long FlagsMask;
  /* 0x0018 */ unsigned long FlagsExpected;
  struct /* bitfield */
  {
    /* 0x001c */ unsigned long AllowDebugging : 1; /* bit position: 0 */
    /* 0x001c */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
} NCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS, *PNCRYPT_VSM_KEY_ATTESTATION_CLAIM_RESTRICTIONS; /* size: 0x0020 */

typedef struct _SYSTEM_POOL_ZEROING_INFORMATION
{
  /* 0x0000 */ unsigned char PoolZeroingSupportPresent;
} SYSTEM_POOL_ZEROING_INFORMATION, *PSYSTEM_POOL_ZEROING_INFORMATION; /* size: 0x0001 */

typedef struct _IMAGE_DEBUG_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long SizeOfData;
  /* 0x0014 */ unsigned long AddressOfRawData;
  /* 0x0018 */ unsigned long PointerToRawData;
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY; /* size: 0x001c */

typedef struct _currencyfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_1451;
  /* 0x0010 */ char* lpDecimalSep;
  /* 0x0018 */ char* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ unsigned int PositiveOrder;
  /* 0x0028 */ char* lpCurrencySymbol;
} currencyfmtA, *PcurrencyfmtA; /* size: 0x0030 */

struct tagRPC_CALL_ATTRIBUTES_V1_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_1452;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_1453;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

class CALLFRAME_CACHE_ENTRY<NdrTypeInfo>
{
  /* 0x0000 */ long Padding_1454[2];
  /* 0x0008 */ unsigned long m_dwReleaseTime;
  /* 0x000c */ long Padding_1455;
  /* 0x0010 */ class CALLFRAME_CACHE<NdrTypeInfo>* m_pcache;
  /* 0x0018 */ volatile long m_refs;
  /* 0x001c */ struct _GUID m_guidkey;
}; /* size: 0x0030 */

typedef struct _DUPLICATE_CLUSTER_DATA
{
  /* 0x0000 */ __int64 SourceLcn;
  /* 0x0008 */ union _LARGE_INTEGER TargetFileOffset;
  /* 0x0010 */ unsigned long DuplicationLimit;
  /* 0x0014 */ unsigned long Reserved;
} DUPLICATE_CLUSTER_DATA, *PDUPLICATE_CLUSTER_DATA; /* size: 0x0018 */

typedef struct _MEMORY_PARTITION_NODE_INFORMATION
{
  /* 0x0000 */ unsigned long NumaNodeCount;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _MEMORY_PARTITION_NODE_PAGE_INFORMATION* NodePageInformation;
} MEMORY_PARTITION_NODE_INFORMATION, *PMEMORY_PARTITION_NODE_INFORMATION; /* size: 0x0010 */

typedef struct _REMOTE_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
  /* 0x0008 */ wchar_t* lpConnectionName;
  /* 0x0010 */ wchar_t* lpRemainingPath;
} REMOTE_NAME_INFOW, *PREMOTE_NAME_INFOW; /* size: 0x0018 */

typedef struct _RTL_HEAP_TAG_INFO
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
} RTL_HEAP_TAG_INFO, *PRTL_HEAP_TAG_INFO; /* size: 0x0010 */

struct SERVICE_STATUS_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CMC_ADD_EXTENSIONS_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x0010 */ unsigned long cExtension;
  /* 0x0014 */ long Padding_1456;
  /* 0x0018 */ struct _CERT_EXTENSION* rgExtension;
} CMC_ADD_EXTENSIONS_INFO, *PCMC_ADD_EXTENSIONS_INFO; /* size: 0x0020 */

typedef struct _DISPATCHER_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ControlPc;
  /* 0x0008 */ unsigned __int64 ImageBase;
  /* 0x0010 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry;
  /* 0x0018 */ unsigned __int64 EstablisherFrame;
  /* 0x0020 */ unsigned __int64 TargetIp;
  /* 0x0028 */ struct _CONTEXT* ContextRecord;
  /* 0x0030 */ void* LanguageHandler /* function */;
  /* 0x0038 */ void* HandlerData;
  /* 0x0040 */ struct _UNWIND_HISTORY_TABLE* HistoryTable;
  /* 0x0048 */ unsigned long ScopeIndex;
  /* 0x004c */ unsigned long Fill0;
} DISPATCHER_CONTEXT, *PDISPATCHER_CONTEXT; /* size: 0x0050 */

struct IAbandonmentNotification
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_DSA_PARAMETER_HEADER_V2
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
  /* 0x000c */ enum HASHALGORITHM_ENUM hashAlgorithm;
  /* 0x0010 */ enum DSAFIPSVERSION_ENUM standardVersion;
  /* 0x0014 */ unsigned long cbSeedLength;
  /* 0x0018 */ unsigned long cbGroupSize;
  /* 0x001c */ unsigned char Count[4];
} BCRYPT_DSA_PARAMETER_HEADER_V2, *PBCRYPT_DSA_PARAMETER_HEADER_V2; /* size: 0x0020 */

typedef struct _SE_SET_FILE_CACHE_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_1457;
  union
  {
    /* 0x0008 */ struct _UNICODE_STRING CatalogDirectoryPath;
    /* 0x0008 */ struct _SE_SET_FILE_CACHE_ORIGIN_CLAIM_INFORMATION OriginClaimInfo;
  }; /* size: 0x0010 */
} SE_SET_FILE_CACHE_INFORMATION, *PSE_SET_FILE_CACHE_INFORMATION; /* size: 0x0018 */

typedef struct _LDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY64 InMemoryOrderLinks;
  /* 0x0020 */ struct LIST_ENTRY64 InInitializationOrderLinks;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_1458;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct LIST_ENTRY64 HashLinks;
    struct
    {
      /* 0x0070 */ unsigned __int64 SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ unsigned __int64 LoadedImports;
  }; /* size: 0x0008 */
} LDR_DATA_TABLE_ENTRY64, *PLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ enum _VIRTUAL_STORAGE_BEHAVIOR_CODE BehaviorCode;
} VIRTUAL_STORAGE_SET_BEHAVIOR_INPUT, *PVIRTUAL_STORAGE_SET_BEHAVIOR_INPUT; /* size: 0x0008 */

typedef struct _tagPROTOCOLDATA
{
  /* 0x0000 */ unsigned long grfFlags;
  /* 0x0004 */ unsigned long dwState;
  /* 0x0008 */ void* pData;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ long __PADDING__[1];
} tagPROTOCOLDATA, *PtagPROTOCOLDATA; /* size: 0x0018 */

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
  /* 0x0010 */ long Priority;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_THREAD_CID_PRIORITY_INFORMATION, *PSYSTEM_THREAD_CID_PRIORITY_INFORMATION; /* size: 0x0018 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IOleInPlaceObject>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObject,IOleInPlaceObject>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<signed char>
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<unsigned short>
{
}; /* size: 0x0001 */

struct wistd::__make_signed<int,1>
{
}; /* size: 0x0001 */

struct wistd::__type_list<unsigned char,wistd::__type_list<unsigned short,wistd::__type_list<unsigned int,wistd::__type_list<unsigned long,wistd::__type_list<unsigned __int64,wistd::__nat> > > > >
{
}; /* size: 0x0001 */

struct wistd::__make_unsigned<unsigned int,1>
{
}; /* size: 0x0001 */

struct wistd::__make_unsigned<short,1>
{
}; /* size: 0x0001 */

struct wistd::__is_nullptr_t_impl<std::nullptr_t>
{
}; /* size: 0x0001 */

class AdHocInterceptorForwarders<IOleWindow,IOleInPlaceObject>::GetWindow::__l2::<lambda_a07c95792dcef3326839cb72fdfd78fd>
{
  /* 0x0000 */ struct HWND__** phwnd;
}; /* size: 0x0008 */

struct wistd::__libcpp_is_floating_point<long double>
{
}; /* size: 0x0001 */

struct wistd::__type_list<signed char,wistd::__type_list<short,wistd::__type_list<int,wistd::__type_list<long,wistd::__type_list<__int64,wistd::__nat> > > > >
{
}; /* size: 0x0001 */

struct wistd::is_scalar<std::nullptr_t>
{
}; /* size: 0x0001 */

struct wistd::__make_signed<unsigned short,1>
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_void<void>
{
}; /* size: 0x0001 */

struct wistd::is_class<int>
{
}; /* size: 0x0001 */

struct wistd::__two
{
  /* 0x0000 */ char __lx[2];
}; /* size: 0x0002 */

struct wistd::__make_signed<__int64,1>
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<unsigned __int64>
{
}; /* size: 0x0001 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

struct wistd::__make_signed<unsigned __int64,1>
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<unsigned char>
{
}; /* size: 0x0001 */

struct wistd::__extract_key_fail_tag
{
}; /* size: 0x0001 */

struct wistd::__make_unsigned<__int64,1>
{
}; /* size: 0x0001 */

struct wistd::__numeric_type<void>
{
  /* 0x0000 */ const BOOL value;
}; /* size: 0x0001 */

struct wistd::__extract_key_self_tag
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<char>
{
}; /* size: 0x0001 */

struct wistd::__libcpp_is_integral<short>
{
}; /* size: 0x0001 */

typedef struct _MIDL_WINRT_TYPE_SERIALIZATION_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1459;
  /* 0x0008 */ const unsigned char* TypeFormatString;
  /* 0x0010 */ unsigned short FormatStringSize;
  /* 0x0012 */ unsigned short TypeOffset;
  /* 0x0014 */ long Padding_1460;
  /* 0x0018 */ const struct _MIDL_STUB_DESC* StubDesc;
} MIDL_WINRT_TYPE_SERIALIZATION_INFO, *PMIDL_WINRT_TYPE_SERIALIZATION_INFO; /* size: 0x0020 */

typedef struct _CM_EISA_FUNCTION_INFORMATION
{
  /* 0x0000 */ unsigned long CompressedId;
  /* 0x0004 */ unsigned char IdSlotFlags1;
  /* 0x0005 */ unsigned char IdSlotFlags2;
  /* 0x0006 */ unsigned char MinorRevision;
  /* 0x0007 */ unsigned char MajorRevision;
  /* 0x0008 */ unsigned char Selections[26];
  /* 0x0022 */ unsigned char FunctionFlags;
  /* 0x0023 */ unsigned char TypeString[80];
  /* 0x0073 */ struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
  /* 0x00b2 */ struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
  /* 0x00c0 */ struct _EISA_DMA_CONFIGURATION EisaDma[4];
  /* 0x00c8 */ struct _EISA_PORT_CONFIGURATION EisaPort[20];
  /* 0x0104 */ unsigned char InitializationData[60];
} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION; /* size: 0x0140 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

typedef struct _RTL_RVA_LIST_ITERATOR
{
  /* 0x0000 */ unsigned long CurrentRva;
  /* 0x0004 */ unsigned long CurrentRvaIndex;
  /* 0x0008 */ unsigned long CompressedRvaDataOffset;
} RTL_RVA_LIST_ITERATOR, *PRTL_RVA_LIST_ITERATOR; /* size: 0x000c */

struct IHTMLElement
{
}; /* size: 0x0008 */

struct tagIMEMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0018 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ wchar_t szString[80];
  /* 0x00c4 */ long Padding_1461;
  /* 0x00c8 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x00d0 */

struct tagACCESSTIMEOUT
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iTimeOutMSec;
}; /* size: 0x000c */

typedef struct _SYSTEM_HOT_PATCH_REGISTRY_VALUE
{
  /* 0x0000 */ unsigned short ImageNameLength;
  /* 0x0002 */ wchar_t ImageName[1];
} SYSTEM_HOT_PATCH_REGISTRY_VALUE, *PSYSTEM_HOT_PATCH_REGISTRY_VALUE; /* size: 0x0004 */

typedef struct _RTL_SPARSE_BITMAP_RUN
{
  /* 0x0000 */ unsigned long StartingIndexLow;
  /* 0x0004 */ unsigned long StartingIndexHigh;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long Padding_1462;
  /* 0x0010 */ void* Metadata;
} RTL_SPARSE_BITMAP_RUN, *PRTL_SPARSE_BITMAP_RUN; /* size: 0x0018 */

typedef struct _CFG_CALL_TARGET_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long* NumberOfEntriesProcessed;
  /* 0x0010 */ struct _CFG_CALL_TARGET_INFO* CallTargetInfo;
  /* 0x0018 */ void* Section;
  /* 0x0020 */ unsigned __int64 FileOffset;
} CFG_CALL_TARGET_LIST_INFORMATION, *PCFG_CALL_TARGET_LIST_INFORMATION; /* size: 0x0028 */

struct value_entA
{
  /* 0x0000 */ char* ve_valuename;
  /* 0x0008 */ unsigned long ve_valuelen;
  /* 0x000c */ long Padding_1463;
  /* 0x0010 */ unsigned __int64 ve_valueptr;
  /* 0x0018 */ unsigned long ve_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _GDI_NONREMOTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1464;
  /* 0x0008 */ union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
} GDI_NONREMOTE, *PGDI_NONREMOTE; /* size: 0x0010 */

typedef struct _DWORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long alData[1];
} DWORD_BLOB, *PDWORD_BLOB; /* size: 0x0008 */

typedef struct _FILE_PATH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned char FilePath[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_PATH, *PFILE_PATH; /* size: 0x0010 */

typedef struct _SL_HWID_DEVICE_INFO
{
  /* 0x0000 */ unsigned long SizeBytes;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char DeviceRemovalPolicy;
  /* 0x0006 */ unsigned char AuthenticationStatus;
  /* 0x0007 */ unsigned char Disposition;
  /* 0x0008 */ unsigned long DeviceNodeLevel;
  /* 0x000c */ struct _GUID Guid;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
} SL_HWID_DEVICE_INFO, *PSL_HWID_DEVICE_INFO; /* size: 0x0020 */

typedef struct _VOLUME_REFS_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER CacheSizeInBytes;
  /* 0x0008 */ union _LARGE_INTEGER AllocatedCacheInBytes;
  /* 0x0010 */ union _LARGE_INTEGER PopulatedCacheInBytes;
  /* 0x0018 */ union _LARGE_INTEGER InErrorCacheInBytes;
  /* 0x0020 */ union _LARGE_INTEGER MemoryUsedForCacheMetadata;
  /* 0x0028 */ unsigned long CacheLineSize;
  /* 0x002c */ long CacheTransactionsOutstanding;
  /* 0x0030 */ long CacheLinesFree;
  /* 0x0034 */ long CacheLinesInError;
  /* 0x0038 */ union _LARGE_INTEGER CacheHitsInBytes;
  /* 0x0040 */ union _LARGE_INTEGER CacheMissesInBytes;
  /* 0x0048 */ union _LARGE_INTEGER CachePopulationUpdatesInBytes;
  /* 0x0050 */ union _LARGE_INTEGER CacheWriteThroughUpdatesInBytes;
  /* 0x0058 */ union _LARGE_INTEGER CacheInvalidationsInBytes;
  /* 0x0060 */ union _LARGE_INTEGER CacheOverReadsInBytes;
  /* 0x0068 */ union _LARGE_INTEGER MetadataWrittenBytes;
  /* 0x0070 */ long CacheHitCounter;
  /* 0x0074 */ long CacheMissCounter;
  /* 0x0078 */ long CacheLineAllocationCounter;
  /* 0x007c */ long CacheInvalidationsCounter;
  /* 0x0080 */ long CachePopulationUpdatesCounter;
  /* 0x0084 */ long CacheWriteThroughUpdatesCounter;
  /* 0x0088 */ long MaxCacheTransactionsOutstanding;
  /* 0x008c */ long DataWritesReallocationCount;
  /* 0x0090 */ long DataInPlaceWriteCount;
  /* 0x0094 */ long MetadataAllocationsFastTierCount;
  /* 0x0098 */ long MetadataAllocationsSlowTierCount;
  /* 0x009c */ long DataAllocationsFastTierCount;
  /* 0x00a0 */ long DataAllocationsSlowTierCount;
  /* 0x00a4 */ long DestagesSlowTierToFastTier;
  /* 0x00a8 */ long DestagesFastTierToSlowTier;
  /* 0x00ac */ long SlowTierDataFillRatio;
  /* 0x00b0 */ long FastTierDataFillRatio;
  /* 0x00b4 */ long SlowTierMetadataFillRatio;
  /* 0x00b8 */ long FastTierMetadataFillRatio;
  /* 0x00bc */ long SlowToFastDestageReadLatency;
  /* 0x00c0 */ long SlowToFastDestageReadLatencyBase;
  /* 0x00c4 */ long SlowToFastDestageWriteLatency;
  /* 0x00c8 */ long SlowToFastDestageWriteLatencyBase;
  /* 0x00cc */ long FastToSlowDestageReadLatency;
  /* 0x00d0 */ long FastToSlowDestageReadLatencyBase;
  /* 0x00d4 */ long FastToSlowDestageWriteLatency;
  /* 0x00d8 */ long FastToSlowDestageWriteLatencyBase;
  /* 0x00dc */ long SlowTierContainerFillRatio;
  /* 0x00e0 */ long SlowTierContainerFillRatioBase;
  /* 0x00e4 */ long FastTierContainerFillRatio;
  /* 0x00e8 */ long FastTierContainerFillRatioBase;
  /* 0x00ec */ long TreeUpdateLatency;
  /* 0x00f0 */ long TreeUpdateLatencyBase;
  /* 0x00f4 */ long CheckpointLatency;
  /* 0x00f8 */ long CheckpointLatencyBase;
  /* 0x00fc */ long TreeUpdateCount;
  /* 0x0100 */ long CheckpointCount;
  /* 0x0104 */ long LogWriteCount;
  /* 0x0108 */ long LogFillRatio;
  /* 0x010c */ long ReadCacheInvalidationsForOverwrite;
  /* 0x0110 */ long ReadCacheInvalidationsForReuse;
  /* 0x0114 */ long ReadCacheInvalidationsGeneral;
  /* 0x0118 */ long ReadCacheChecksOnMount;
  /* 0x011c */ long ReadCacheIssuesOnMount;
  /* 0x0120 */ long TrimLatency;
  /* 0x0124 */ long TrimLatencyBase;
  /* 0x0128 */ long DataCompactionCount;
  /* 0x012c */ long CompactionReadLatency;
  /* 0x0130 */ long CompactionReadLatencyBase;
  /* 0x0134 */ long CompactionWriteLatency;
  /* 0x0138 */ long CompactionWriteLatencyBase;
  /* 0x013c */ long Padding_1465;
  /* 0x0140 */ union _LARGE_INTEGER DataInPlaceWriteClusterCount;
  /* 0x0148 */ long CompactionFailedDueToIneligibleContainer;
  /* 0x014c */ long CompactionFailedDueToMaxFragmentation;
  /* 0x0150 */ long CompactedContainerFillRatio;
  /* 0x0154 */ long CompactedContainerFillRatioBase;
  /* 0x0158 */ long ContainerMoveRetryCount;
  /* 0x015c */ long ContainerMoveFailedDueToIneligibleContainer;
  /* 0x0160 */ long CompactionFailureCount;
  /* 0x0164 */ long ContainerMoveFailureCount;
  /* 0x0168 */ union _LARGE_INTEGER NumberOfDirtyMetadataPages;
  /* 0x0170 */ long NumberOfDirtyTableListEntries;
  /* 0x0174 */ long NumberOfDeleteQueueEntries;
} VOLUME_REFS_INFO_BUFFER, *PVOLUME_REFS_INFO_BUFFER; /* size: 0x0178 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentFixupCount;
  /* 0x0004 */ unsigned long ExceptionDispatchCount;
  /* 0x0008 */ unsigned long FloatingEmulationCount;
  /* 0x000c */ unsigned long ByteWordEmulationCount;
} SYSTEM_EXCEPTION_INFORMATION, *PSYSTEM_EXCEPTION_INFORMATION; /* size: 0x0010 */

struct pvalueA
{
  /* 0x0000 */ char* pv_valuename;
  /* 0x0008 */ int pv_valuelen;
  /* 0x000c */ long Padding_1466;
  /* 0x0010 */ void* pv_value_context;
  /* 0x0018 */ unsigned long pv_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class AdHocCallFrame<ISearchProtocol,<lambda_c3d9c36ff6c5e276434071298f6b4b2c> >
{
  /* 0x0000 */ long Padding_1467[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::CloseAccessor::__l2::<lambda_c3d9c36ff6c5e276434071298f6b4b2c>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _FILE_ID_EXTD_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ unsigned long ReparsePointTag;
  /* 0x0048 */ struct _FILE_ID_128 FileId;
  /* 0x0058 */ char ShortNameLength;
  /* 0x0059 */ char Padding_1468;
  /* 0x005a */ wchar_t ShortName[12];
  /* 0x0072 */ wchar_t FileName[1];
  /* 0x0074 */ long __PADDING__[1];
} FILE_ID_EXTD_BOTH_DIR_INFORMATION, *PFILE_ID_EXTD_BOTH_DIR_INFORMATION; /* size: 0x0078 */

typedef struct _PROCESS_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long OperationType;
  /* 0x0008 */ unsigned long ThreadDataCount;
  union
  {
    /* 0x000c */ unsigned long TlsIndex;
    /* 0x000c */ unsigned long PreviousCount;
  }; /* size: 0x0004 */
  /* 0x0010 */ struct _THREAD_TLS_INFORMATION ThreadData[1];
} PROCESS_TLS_INFORMATION, *PPROCESS_TLS_INFORMATION; /* size: 0x0028 */

typedef struct _RTL_BITMAP_RUN
{
  /* 0x0000 */ unsigned long StartingIndex;
  /* 0x0004 */ unsigned long NumberOfBits;
} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN; /* size: 0x0008 */

typedef struct _RTL_CIRCULAR_LIST_HEAD
{
  /* 0x0000 */ struct _LIST_ENTRY* HeadEntry;
} RTL_CIRCULAR_LIST_HEAD, *PRTL_CIRCULAR_LIST_HEAD; /* size: 0x0008 */

class AdHocCallFrame<ISearchProtocol,<lambda_c0fa3d92ef3684ffb99dddd895e07e56> >
{
  /* 0x0000 */ long Padding_1469[2];
  /* 0x0008 */ class AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>::CreateAccessor::__l2::<lambda_c0fa3d92ef3684ffb99dddd895e07e56>& m_lambda;
  /* 0x0010 */ const wchar_t* const m_interfaceName;
  /* 0x0018 */ const wchar_t* const m_methodName;
}; /* size: 0x0020 */

typedef struct _KEY_CONTROL_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
} KEY_CONTROL_FLAGS_INFORMATION, *PKEY_CONTROL_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_ACPI_AUDIT_INFORMATION
{
  /* 0x0000 */ unsigned long RsdpCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long SameRsdt : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long SlicPresent : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long SlicDifferent : 1; /* bit position: 2 */
  }; /* bitfield */
} SYSTEM_ACPI_AUDIT_INFORMATION, *PSYSTEM_ACPI_AUDIT_INFORMATION; /* size: 0x0008 */

typedef struct _RTL_ENCLAVE_LAUNCH_TOKEN
{
  /* 0x0000 */ unsigned char Measurement[32];
  /* 0x0020 */ unsigned char AuthorId[32];
  /* 0x0040 */ unsigned char FamilyId[16];
  /* 0x0050 */ unsigned char ImageId[16];
  /* 0x0060 */ unsigned __int64 EnclaveSize;
  /* 0x0068 */ unsigned long EnclaveSvn;
  /* 0x006c */ unsigned long PolicyFlags;
} RTL_ENCLAVE_LAUNCH_TOKEN, *PRTL_ENCLAVE_LAUNCH_TOKEN; /* size: 0x0070 */

typedef struct _VARIABLE_NAME
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _GUID VendorGuid;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} VARIABLE_NAME, *PVARIABLE_NAME; /* size: 0x0018 */

struct tagTOUCHINPUT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
  /* 0x0008 */ void* hSource;
  /* 0x0010 */ unsigned long dwID;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ unsigned long dwMask;
  /* 0x001c */ unsigned long dwTime;
  /* 0x0020 */ unsigned __int64 dwExtraInfo;
  /* 0x0028 */ unsigned long cxContact;
  /* 0x002c */ unsigned long cyContact;
}; /* size: 0x0030 */

typedef struct _ALPC_DIRECT_ATTR
{
  /* 0x0000 */ void* Event;
} ALPC_DIRECT_ATTR, *PALPC_DIRECT_ATTR; /* size: 0x0008 */

struct tagSTRINGBINDING
{
  /* 0x0000 */ unsigned short wTowerId;
  /* 0x0002 */ unsigned short aNetworkAddr;
}; /* size: 0x0004 */

typedef struct _CERT_NAME_CONSTRAINTS_INFO
{
  /* 0x0000 */ unsigned long cPermittedSubtree;
  /* 0x0004 */ long Padding_1470;
  /* 0x0008 */ struct _CERT_GENERAL_SUBTREE* rgPermittedSubtree;
  /* 0x0010 */ unsigned long cExcludedSubtree;
  /* 0x0014 */ long Padding_1471;
  /* 0x0018 */ struct _CERT_GENERAL_SUBTREE* rgExcludedSubtree;
} CERT_NAME_CONSTRAINTS_INFO, *PCERT_NAME_CONSTRAINTS_INFO; /* size: 0x0020 */

struct tagEMRNAMEDESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbDriver;
  /* 0x0010 */ int cbEscData;
  /* 0x0014 */ unsigned char EscData[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long MemoryTypeMask;
  /* 0x0008 */ unsigned long NumaNode;
  /* 0x000c */ long Padding_1472;
  union
  {
    /* 0x0010 */ void* PartitionHandle;
    /* 0x0010 */ struct _RTL_SEGMENT_HEAP_VA_CALLBACKS* Callbacks;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned __int64 Reserved[2];
} RTL_SEGMENT_HEAP_MEMORY_SOURCE, *PRTL_SEGMENT_HEAP_MEMORY_SOURCE; /* size: 0x0028 */

typedef struct _RTL_SEGMENT_HEAP_PARAMETERS
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _RTL_SEGMENT_HEAP_MEMORY_SOURCE MemorySource;
  /* 0x0030 */ unsigned __int64 Reserved[4];
} RTL_SEGMENT_HEAP_PARAMETERS, *PRTL_SEGMENT_HEAP_PARAMETERS; /* size: 0x0050 */

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long cbKeyData;
} BCRYPT_KEY_DATA_BLOB_HEADER, *PBCRYPT_KEY_DATA_BLOB_HEADER; /* size: 0x000c */

typedef struct _KEY_NODE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long NameLength;
  /* 0x0018 */ wchar_t Name[1];
  /* 0x001a */ char __PADDING__[6];
} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION; /* size: 0x0020 */

typedef struct _RSAPUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
  /* 0x0008 */ unsigned long pubexp;
} RSAPUBKEY, *PRSAPUBKEY; /* size: 0x000c */

typedef struct _FP_IEEE_RECORD
{
  /* 0x0000 */ struct _FP_IEEE_VALUE Operand1;
  /* 0x0018 */ struct _FP_IEEE_VALUE Operand2;
  /* 0x0030 */ struct _FP_IEEE_VALUE Result;
} FP_IEEE_RECORD, *PFP_IEEE_RECORD; /* size: 0x0048 */

typedef struct _SYSTEM_CONSOLE_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DriverLoaded : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 31; /* bit position: 1 */
  }; /* bitfield */
} SYSTEM_CONSOLE_INFORMATION, *PSYSTEM_CONSOLE_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long MaxIdlenessAllowed;
  /* 0x0004 */ unsigned long Idleness;
  /* 0x0008 */ unsigned long TimeRemaining;
  /* 0x000c */ unsigned char CoolingMode;
  /* 0x000d */ char __PADDING__[3];
} SYSTEM_POWER_INFORMATION, *PSYSTEM_POWER_INFORMATION; /* size: 0x0010 */

struct _TP_ALPC;

typedef struct _REFS_QUERY_VOLUME_DEDUP_INFO_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned char Enabled;
} REFS_QUERY_VOLUME_DEDUP_INFO_OUTPUT_BUFFER, *PREFS_QUERY_VOLUME_DEDUP_INFO_OUTPUT_BUFFER; /* size: 0x0001 */

typedef struct _PO_WAKE_SOURCE_TIMER
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ struct _DIAGNOSTIC_BUFFER Reason;
} PO_WAKE_SOURCE_TIMER, *PPO_WAKE_SOURCE_TIMER; /* size: 0x0030 */

struct tagEMREXTESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbEscData;
  /* 0x0010 */ unsigned char EscData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

typedef struct _MANAGEDAPPLICATION
{
  /* 0x0000 */ wchar_t* pszPackageName;
  /* 0x0008 */ wchar_t* pszPublisher;
  /* 0x0010 */ unsigned long dwVersionHi;
  /* 0x0014 */ unsigned long dwVersionLo;
  /* 0x0018 */ unsigned long dwRevision;
  /* 0x001c */ struct _GUID GpoId;
  /* 0x002c */ long Padding_1473;
  /* 0x0030 */ wchar_t* pszPolicyName;
  /* 0x0038 */ struct _GUID ProductId;
  /* 0x0048 */ unsigned short Language;
  /* 0x004a */ char Padding_1474[6];
  /* 0x0050 */ wchar_t* pszOwner;
  /* 0x0058 */ wchar_t* pszCompany;
  /* 0x0060 */ wchar_t* pszComments;
  /* 0x0068 */ wchar_t* pszContact;
  /* 0x0070 */ wchar_t* pszSupportUrl;
  /* 0x0078 */ unsigned long dwPathType;
  /* 0x007c */ int bInstalled;
} MANAGEDAPPLICATION, *PMANAGEDAPPLICATION; /* size: 0x0080 */

struct std::_Floating_type_traits<float>
{
  union
  {
    /* 0x0000 */ const int _Mantissa_bits;
    /* 0x0000 */ const int _Exponent_bits;
    /* 0x0000 */ const int _Maximum_binary_exponent;
    /* 0x0000 */ const int _Minimum_binary_exponent;
    /* 0x0000 */ const int _Exponent_bias;
    /* 0x0000 */ const int _Sign_shift;
    /* 0x0000 */ const int _Exponent_shift;
    /* 0x0000 */ const unsigned int _Exponent_mask;
    /* 0x0000 */ const unsigned int _Normal_mantissa_mask;
    /* 0x0000 */ const unsigned int _Denormal_mantissa_mask;
    /* 0x0000 */ const unsigned int _Special_nan_mantissa_mask;
    /* 0x0000 */ const unsigned int _Shifted_sign_mask;
    /* 0x0000 */ const unsigned int _Shifted_exponent_mask;
  }; /* size: 0x0004 */
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct std::_Make_signed2<4>
{
}; /* size: 0x0001 */

typedef struct _OCSP_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ long Padding_1475;
  /* 0x0008 */ char* pszObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} OCSP_RESPONSE_INFO, *POCSP_RESPONSE_INFO; /* size: 0x0020 */

struct std::_Invoker_pmf_object
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct std::_Invoker_pmd_pointer
{
  /* 0x0000 */ enum std::_Invoker_strategy _Strategy;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

struct std::minus<void>
{
}; /* size: 0x0001 */

typedef struct _EXTENDED_CREATE_INFORMATION_32
{
  /* 0x0000 */ __int64 ExtendedCreateFlags;
  /* 0x0008 */ void* EaBuffer;
  /* 0x000c */ unsigned long EaLength;
} EXTENDED_CREATE_INFORMATION_32, *PEXTENDED_CREATE_INFORMATION_32; /* size: 0x0010 */

struct std::_Select<0>
{
}; /* size: 0x0001 */

struct std::_Floating_type_traits<double>
{
  union
  {
    /* 0x0000 */ const int _Mantissa_bits;
    /* 0x0000 */ const int _Exponent_bits;
    /* 0x0000 */ const int _Maximum_binary_exponent;
    /* 0x0000 */ const int _Minimum_binary_exponent;
    /* 0x0000 */ const int _Exponent_bias;
    /* 0x0000 */ const int _Sign_shift;
    /* 0x0000 */ const int _Exponent_shift;
    /* 0x0000 */ const unsigned __int64 _Exponent_mask;
    /* 0x0000 */ const unsigned __int64 _Normal_mantissa_mask;
    /* 0x0000 */ const unsigned __int64 _Denormal_mantissa_mask;
    /* 0x0000 */ const unsigned __int64 _Special_nan_mantissa_mask;
    /* 0x0000 */ const unsigned __int64 _Shifted_sign_mask;
    /* 0x0000 */ const unsigned __int64 _Shifted_exponent_mask;
  }; /* size: 0x0008 */
  /* 0x0008 */ char __PADDING__[4294967289];
}; /* size: 0x0001 */

struct std::_Make_unsigned2<1>
{
}; /* size: 0x0001 */

typedef struct _THREAD_LAST_SYSCALL_INFORMATION
{
  /* 0x0000 */ void* FirstArgument;
  /* 0x0008 */ unsigned short SystemCallNumber;
  /* 0x000a */ unsigned short Pad[3];
  /* 0x0010 */ unsigned __int64 WaitTime;
} THREAD_LAST_SYSCALL_INFORMATION, *PTHREAD_LAST_SYSCALL_INFORMATION; /* size: 0x0018 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum JOB_OBJECT_NET_RATE_CONTROL_FLAGS>; /* size: 0x0001 */

struct ICreateErrorInfo
{
}; /* size: 0x0008 */

typedef struct __NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ int iExpiration;
  /* 0x0008 */ unsigned char pabNonce[32];
  /* 0x0028 */ unsigned char pabPolicyRef[32];
  /* 0x0048 */ unsigned char pabHMAC[32];
} _NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO, *P_NCRYPT_PCP_HMAC_AUTH_SIGNATURE_INFO; /* size: 0x0068 */

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION
{
  /* 0x0000 */ struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
  /* 0x0014 */ long Padding_1476;
  /* 0x0018 */ void* FileObject;
  /* 0x0020 */ long NameBufferOffset;
  /* 0x0024 */ unsigned char CustomDataBuffer[1];
  /* 0x0025 */ char __PADDING__[3];
} PLUGPLAY_CUSTOM_NOTIFICATION, *PPLUGPLAY_CUSTOM_NOTIFICATION; /* size: 0x0028 */

typedef struct _DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Size;
  /* 0x0008 */ unsigned short DpcWatchdogProfileOffset;
  /* 0x000a */ char Padding_1477[2];
  /* 0x000c */ unsigned long DpcWatchdogProfileLength;
} DPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK, *PDPC_WATCHDOG_GLOBAL_TRIAGE_BLOCK; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ long __PADDING__[1];
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION; /* size: 0x0030 */

struct PROCESSOR_IDLESTATE_POLICY
{
  /* 0x0000 */ unsigned short Revision;
  union
  {
    union
    {
      /* 0x0002 */ unsigned short AsUSHORT;
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short AllowScaling : 1; /* bit position: 0 */
        /* 0x0002 */ unsigned short Disabled : 1; /* bit position: 1 */
        /* 0x0002 */ unsigned short Reserved : 14; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Flags;
  /* 0x0004 */ unsigned long PolicyCount;
  /* 0x0008 */ struct PROCESSOR_IDLESTATE_INFO Policy[3];
}; /* size: 0x0020 */

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  /* 0x0000 */ unsigned long NumberOfAssignedProcesses;
  /* 0x0004 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST; /* size: 0x0010 */

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR
{
  /* 0x0000 */ wchar_t* pwszName;
  /* 0x0008 */ wchar_t* pwszValue;
} CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR; /* size: 0x0010 */

typedef struct _USER_MARSHAL_CB
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1478;
  /* 0x0008 */ struct _MIDL_STUB_MESSAGE* pStubMsg;
  /* 0x0010 */ const unsigned char* pReserve;
  /* 0x0018 */ unsigned long Signature;
  /* 0x001c */ enum _USER_MARSHAL_CB_TYPE CBType;
  /* 0x0020 */ const unsigned char* pFormat;
  /* 0x0028 */ const unsigned char* pTypeFormat;
} USER_MARSHAL_CB, *PUSER_MARSHAL_CB; /* size: 0x0030 */

typedef struct _CTL_VERIFY_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1479;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0018 */ unsigned long cCtlStore;
  /* 0x001c */ long Padding_1480;
  /* 0x0020 */ void** rghCtlStore;
  /* 0x0028 */ unsigned long cSignerStore;
  /* 0x002c */ long Padding_1481;
  /* 0x0030 */ void** rghSignerStore;
} CTL_VERIFY_USAGE_PARA, *PCTL_VERIFY_USAGE_PARA; /* size: 0x0038 */

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_SESSION_POOLTAG_INFORMATION, *PSYSTEM_SESSION_POOLTAG_INFORMATION; /* size: 0x0038 */

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumMessageSize;
  /* 0x0004 */ unsigned long MailslotQuota;
  /* 0x0008 */ unsigned long NextMessageSize;
  /* 0x000c */ unsigned long MessagesAvailable;
  /* 0x0010 */ union _LARGE_INTEGER ReadTimeout;
} FILE_MAILSLOT_QUERY_INFORMATION, *PFILE_MAILSLOT_QUERY_INFORMATION; /* size: 0x0018 */

typedef struct _numberfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_1482;
  /* 0x0010 */ char* lpDecimalSep;
  /* 0x0018 */ char* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ long __PADDING__[1];
} numberfmtA, *PnumberfmtA; /* size: 0x0028 */

typedef struct _TRANSACTION_NOTIFICATION
{
  /* 0x0000 */ void* TransactionKey;
  /* 0x0008 */ unsigned long TransactionNotification;
  /* 0x000c */ long Padding_1483;
  /* 0x0010 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0018 */ unsigned long ArgumentLength;
  /* 0x001c */ long __PADDING__[1];
} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION; /* size: 0x0020 */

struct tagEMRSETPALETTEENTRIES
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long iStart;
  /* 0x0010 */ unsigned long cEntries;
  /* 0x0014 */ struct tagPALETTEENTRY aPalEntries[1];
}; /* size: 0x0018 */

typedef struct _tagSOFTDISTINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwAdState;
  /* 0x000c */ long Padding_1484;
  /* 0x0010 */ wchar_t* szTitle;
  /* 0x0018 */ wchar_t* szAbstract;
  /* 0x0020 */ wchar_t* szHREF;
  /* 0x0028 */ unsigned long dwInstalledVersionMS;
  /* 0x002c */ unsigned long dwInstalledVersionLS;
  /* 0x0030 */ unsigned long dwUpdateVersionMS;
  /* 0x0034 */ unsigned long dwUpdateVersionLS;
  /* 0x0038 */ unsigned long dwAdvertisedVersionMS;
  /* 0x003c */ unsigned long dwAdvertisedVersionLS;
  /* 0x0040 */ unsigned long dwReserved;
  /* 0x0044 */ long __PADDING__[1];
} tagSOFTDISTINFO, *PtagSOFTDISTINFO; /* size: 0x0048 */

typedef struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long QueryFlags;
  /* 0x0008 */ unsigned long HashAlgorithm;
  /* 0x000c */ long Padding_1485;
  /* 0x0010 */ union _LARGE_INTEGER RangeOffsetInFile;
  /* 0x0018 */ union _LARGE_INTEGER RangeLength;
} DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER, *PDEDUP_QUERY_FILE_HASHES_INPUT_BUFFER; /* size: 0x0020 */

struct tagMONITORINFOEXA
{
  /* 0x0000 */ long Padding_1486[10];
  /* 0x0028 */ char szDevice[32];
}; /* size: 0x0048 */

typedef struct _DOCINFOW
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ long Padding_1487;
  /* 0x0008 */ const wchar_t* lpszDocName;
  /* 0x0010 */ const wchar_t* lpszOutput;
  /* 0x0018 */ const wchar_t* lpszDatatype;
  /* 0x0020 */ unsigned long fwType;
  /* 0x0024 */ long __PADDING__[1];
} DOCINFOW, *PDOCINFOW; /* size: 0x0028 */

struct tagMOUSEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iMaxSpeed;
  /* 0x000c */ unsigned long iTimeToMaxSpeed;
  /* 0x0010 */ unsigned long iCtrlSpeed;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
}; /* size: 0x001c */

typedef struct _POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES
{
  /* 0x0000 */ unsigned char IsAllowed;
} POWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES, *PPOWER_SESSION_ALLOW_EXTERNAL_DMA_DEVICES; /* size: 0x0001 */

typedef struct _RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short PointerSize;
  /* 0x0004 */ long Padding_1488;
  /* 0x0008 */ unsigned __int64 Heap;
  /* 0x0010 */ unsigned __int64 TotalCommit;
  /* 0x0018 */ unsigned __int64 TotalReserve;
} RTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER, *PRTLP_HEAP_STACK_TRACE_SERIALIZATION_HEADER; /* size: 0x0020 */

typedef struct _TRANSACTION_PROPERTIES_INFORMATION
{
  /* 0x0000 */ unsigned long IsolationLevel;
  /* 0x0004 */ unsigned long IsolationFlags;
  /* 0x0008 */ union _LARGE_INTEGER Timeout;
  /* 0x0010 */ unsigned long Outcome;
  /* 0x0014 */ unsigned long DescriptionLength;
  /* 0x0018 */ wchar_t Description[1];
  /* 0x001a */ char __PADDING__[6];
} TRANSACTION_PROPERTIES_INFORMATION, *PTRANSACTION_PROPERTIES_INFORMATION; /* size: 0x0020 */

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ long __PADDING__[1];
} CMSG_KEY_TRANS_ENCRYPT_INFO, *PCMSG_KEY_TRANS_ENCRYPT_INFO; /* size: 0x0038 */

typedef struct _wfinddata64i32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_1489;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata64i32_t, *Pwfinddata64i32_t; /* size: 0x0230 */

typedef struct _FILE_STREAM_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFO, *PFILE_STREAM_INFO; /* size: 0x0020 */

typedef struct _CM_VIDEO_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long VideoClock;
} CM_VIDEO_DEVICE_DATA, *PCM_VIDEO_DEVICE_DATA; /* size: 0x0008 */

typedef struct _INITIAL_TEB
{
  struct
  {
    /* 0x0000 */ void* OldStackBase;
    /* 0x0008 */ void* OldStackLimit;
  } /* size: 0x0010 */ OldInitialTeb;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* StackAllocationBase;
} INITIAL_TEB, *PINITIAL_TEB; /* size: 0x0028 */

typedef struct _MEMORY_ENCLAVE_IMAGE_INFORMATION
{
  /* 0x0000 */ struct _MEMORY_IMAGE_INFORMATION ImageInfo;
  /* 0x0018 */ unsigned char UniqueID[32];
  /* 0x0038 */ unsigned char AuthorID[32];
} MEMORY_ENCLAVE_IMAGE_INFORMATION, *PMEMORY_ENCLAVE_IMAGE_INFORMATION; /* size: 0x0058 */

typedef struct _WOF_EXTERNAL_FILE_ID
{
  /* 0x0000 */ struct _FILE_ID_128 FileId;
} WOF_EXTERNAL_FILE_ID, *PWOF_EXTERNAL_FILE_ID; /* size: 0x0010 */

typedef struct _FSCTL_QUERY_STORAGE_CLASSES_OUTPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long TotalNumberOfTiers;
  /* 0x0010 */ unsigned long NumberOfTiersReturned;
  /* 0x0014 */ long Padding_1490;
  /* 0x0018 */ struct _FILE_STORAGE_TIER Tiers[1];
} FSCTL_QUERY_STORAGE_CLASSES_OUTPUT, *PFSCTL_QUERY_STORAGE_CLASSES_OUTPUT; /* size: 0x0440 */

typedef struct _REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER
{
  /* 0x0000 */ unsigned char ResetCounters;
} REFS_VOLUME_COUNTER_INFO_INPUT_BUFFER, *PREFS_VOLUME_COUNTER_INFO_INPUT_BUFFER; /* size: 0x0001 */

typedef struct _CRYPT_URL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSyncDeltaTime;
  /* 0x0008 */ unsigned long cGroup;
  /* 0x000c */ long Padding_1491;
  /* 0x0010 */ unsigned long* rgcGroupEntry;
} CRYPT_URL_INFO, *PCRYPT_URL_INFO; /* size: 0x0018 */

typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001
{
  union
  {
    /* 0x0000 */ unsigned long dwValue;
    /* 0x0000 */ wchar_t* pwszName;
  }; /* size: 0x0008 */
} userCLIPFORMAT::__MIDL_IWinTypes_0001, *PuserCLIPFORMAT::__MIDL_IWinTypes_0001; /* size: 0x0008 */

typedef struct _userCLIPFORMAT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1492;
  /* 0x0008 */ union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
} userCLIPFORMAT, *PuserCLIPFORMAT; /* size: 0x0010 */

struct tagMULTIKEYHELPW
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ wchar_t mkKeylist;
  /* 0x0006 */ wchar_t szKeyphrase[1];
}; /* size: 0x0008 */

typedef struct _BOOT_OPTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Timeout;
  /* 0x000c */ unsigned long CurrentBootEntryId;
  /* 0x0010 */ unsigned long NextBootEntryId;
  /* 0x0014 */ wchar_t HeadlessRedirection[1];
  /* 0x0016 */ char __PADDING__[2];
} BOOT_OPTIONS, *PBOOT_OPTIONS; /* size: 0x0018 */

typedef struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_REQUEST
{
  /* 0x0000 */ unsigned __int64 PreviousChangeStamps[3];
} SYSTEM_FEATURE_CONFIGURATION_SECTIONS_REQUEST, *PSYSTEM_FEATURE_CONFIGURATION_SECTIONS_REQUEST; /* size: 0x0018 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS>, *PENUM_FLAG_SIZED_INTEGER<enum _SE_SAFE_OPEN_PROMPT_EXPERIENCE_RESULTS>; /* size: 0x0001 */

typedef struct _MEMORY_COMBINE_INFORMATION
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 PagesCombined;
} MEMORY_COMBINE_INFORMATION, *PMEMORY_COMBINE_INFORMATION; /* size: 0x0010 */

typedef struct _RTL_UMS_CONTEXT
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  /* 0x0008 */ long Padding_1493[2];
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ void* Teb;
  /* 0x04e8 */ void* UserContext;
  union
  {
    struct /* bitfield */
    {
      /* 0x04f0 */ volatile unsigned long ScheduledThread : 1; /* bit position: 0 */
      /* 0x04f0 */ volatile unsigned long Suspended : 1; /* bit position: 1 */
      /* 0x04f0 */ volatile unsigned long VolatileContext : 1; /* bit position: 2 */
      /* 0x04f0 */ volatile unsigned long Terminated : 1; /* bit position: 3 */
      /* 0x04f0 */ volatile unsigned long DebugActive : 1; /* bit position: 4 */
      /* 0x04f0 */ volatile unsigned long RunningOnSelfThread : 1; /* bit position: 5 */
      /* 0x04f0 */ volatile unsigned long DenyRunningOnSelfThread : 1; /* bit position: 6 */
    }; /* bitfield */
    /* 0x04f0 */ volatile long Flags;
  }; /* size: 0x0004 */
  /* 0x04f4 */ long Padding_1494;
  union
  {
    struct /* bitfield */
    {
      /* 0x04f8 */ volatile unsigned __int64 KernelUpdateLock : 2; /* bit position: 0 */
      /* 0x04f8 */ volatile unsigned __int64 PrimaryClientID : 62; /* bit position: 2 */
    }; /* bitfield */
    /* 0x04f8 */ volatile unsigned __int64 ContextLock;
  }; /* size: 0x0008 */
  /* 0x0500 */ struct _RTL_UMS_CONTEXT* PrimaryUmsContext;
  /* 0x0508 */ unsigned long SwitchCount;
  /* 0x050c */ unsigned long KernelYieldCount;
  /* 0x0510 */ unsigned long MixedYieldCount;
  /* 0x0514 */ unsigned long YieldCount;
  /* 0x0518 */ long __PADDING__[2];
} RTL_UMS_CONTEXT, *PRTL_UMS_CONTEXT; /* size: 0x0520 */

struct tagNMHDR
{
  /* 0x0000 */ struct HWND__* hwndFrom;
  /* 0x0008 */ unsigned __int64 idFrom;
  /* 0x0010 */ unsigned int code;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _RTL_UMS_COMPLETION_LIST
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* ThreadListHead;
  /* 0x0008 */ void* CompletionEvent;
  /* 0x0010 */ unsigned long CompletionFlags;
  /* 0x0014 */ long Padding_1495;
  /* 0x0018 */ struct _SINGLE_LIST_ENTRY InternalListHead;
} RTL_UMS_COMPLETION_LIST, *PRTL_UMS_COMPLETION_LIST; /* size: 0x0020 */

typedef struct _SYSTEM_INTERRUPT_CPU_SET_INFORMATION
{
  /* 0x0000 */ unsigned long Gsiv;
  /* 0x0004 */ unsigned short Group;
  /* 0x0006 */ char Padding_1496[2];
  /* 0x0008 */ unsigned __int64 CpuSets;
} SYSTEM_INTERRUPT_CPU_SET_INFORMATION, *PSYSTEM_INTERRUPT_CPU_SET_INFORMATION; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Operation;
  /* 0x0014 */ unsigned long DeviceStatus;
  /* 0x0018 */ unsigned long DeviceProblem;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ long ProblemStatus;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_STATUS_DATA, *PPLUGPLAY_CONTROL_STATUS_DATA; /* size: 0x0028 */

struct tagWTSSESSION_NOTIFICATION
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSessionId;
}; /* size: 0x0008 */

typedef struct _CRYPT_IMAGE_REG
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0008 */ unsigned long cInterfaces;
  /* 0x000c */ long Padding_1497;
  /* 0x0010 */ struct _CRYPT_INTERFACE_REG** rgpInterfaces;
} CRYPT_IMAGE_REG, *PCRYPT_IMAGE_REG; /* size: 0x0018 */

typedef struct _CERT_DSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB g;
} CERT_DSS_PARAMETERS, *PCERT_DSS_PARAMETERS; /* size: 0x0030 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToNext;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER Reserved;
  /* 0x0010 */ union _LARGE_INTEGER Cluster;
  /* 0x0018 */ wchar_t FileName[1];
  /* 0x001a */ char __PADDING__[6];
} LOOKUP_STREAM_FROM_CLUSTER_ENTRY, *PLOOKUP_STREAM_FROM_CLUSTER_ENTRY; /* size: 0x0020 */

typedef struct _JOBOBJECT_PAGE_PRIORITY_LIMIT
{
  /* 0x0000 */ enum _JOBOBJECT_PAGE_PRIORITY_LIMIT_FLAGS Flags;
  /* 0x0004 */ unsigned long Priority;
} JOBOBJECT_PAGE_PRIORITY_LIMIT, *PJOBOBJECT_PAGE_PRIORITY_LIMIT; /* size: 0x0008 */

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastVirtualClock;
  /* 0x0008 */ unsigned __int64 LastRedoLsn;
  /* 0x0010 */ unsigned __int64 HighestRecoveryLsn;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} TXFS_ROLLFORWARD_REDO_INFORMATION, *PTXFS_ROLLFORWARD_REDO_INFORMATION; /* size: 0x0020 */

typedef struct _FILE_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0010 */ union _LARGE_INTEGER QuotaUsed;
  /* 0x0018 */ union _LARGE_INTEGER QuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER QuotaLimit;
  /* 0x0028 */ struct _SID Sid;
  /* 0x0034 */ long __PADDING__[1];
} FILE_QUOTA_INFORMATION, *PFILE_QUOTA_INFORMATION; /* size: 0x0038 */

typedef struct _OCSP_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1498;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY* pRequestorName;
  /* 0x0010 */ unsigned long cRequestEntry;
  /* 0x0014 */ long Padding_1499;
  /* 0x0018 */ struct _OCSP_REQUEST_ENTRY* rgRequestEntry;
  /* 0x0020 */ unsigned long cExtension;
  /* 0x0024 */ long Padding_1500;
  /* 0x0028 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_INFO, *POCSP_REQUEST_INFO; /* size: 0x0030 */

struct IStdMarshalInfo
{
}; /* size: 0x0008 */

typedef struct _CRYPT_TIMESTAMP_CONTEXT
{
  /* 0x0000 */ unsigned long cbEncoded;
  /* 0x0004 */ long Padding_1501;
  /* 0x0008 */ unsigned char* pbEncoded;
  /* 0x0010 */ struct _CRYPT_TIMESTAMP_INFO* pTimeStamp;
} CRYPT_TIMESTAMP_CONTEXT, *PCRYPT_TIMESTAMP_CONTEXT; /* size: 0x0018 */

typedef struct _OCSP_REQUEST_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0048 */ unsigned long cExtension;
  /* 0x004c */ long Padding_1502;
  /* 0x0050 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_ENTRY, *POCSP_REQUEST_ENTRY; /* size: 0x0058 */

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemDisk;
} SYSTEM_SYSTEM_DISK_INFORMATION, *PSYSTEM_SYSTEM_DISK_INFORMATION; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA
{
  /* 0x0000 */ unsigned long Response;
  /* 0x0004 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0008 */ wchar_t* VetoName;
  /* 0x0010 */ unsigned long VetoNameLength;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_USER_RESPONSE_DATA, *PPLUGPLAY_CONTROL_USER_RESPONSE_DATA; /* size: 0x0018 */

typedef struct _RTL_USER_PROCESS_EXTENDED_PARAMETERS
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short NodeNumber;
  /* 0x0004 */ long Padding_1503;
  /* 0x0008 */ void* ProcessSecurityDescriptor;
  /* 0x0010 */ void* ThreadSecurityDescriptor;
  /* 0x0018 */ void* ParentProcess;
  /* 0x0020 */ void* DebugPort;
  /* 0x0028 */ void* TokenHandle;
  /* 0x0030 */ void* JobHandle;
} RTL_USER_PROCESS_EXTENDED_PARAMETERS, *PRTL_USER_PROCESS_EXTENDED_PARAMETERS; /* size: 0x0038 */

typedef struct _KEY_VALUE_LAYER_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long IsTombstone : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
} KEY_VALUE_LAYER_INFORMATION, *PKEY_VALUE_LAYER_INFORMATION; /* size: 0x0004 */

struct DISPLAYCONFIG_TARGET_BASE_TYPE
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY baseOutputTechnology;
}; /* size: 0x0018 */

typedef struct _RTL_IMAGE_MITIGATION_USER_SHADOW_STACK_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY UserShadowStack;
  /* 0x0008 */ union _RTL_IMAGE_MITIGATION_POLICY SetContextIpValidation;
  /* 0x0010 */ union _RTL_IMAGE_MITIGATION_POLICY BlockNonCetBinaries;
} RTL_IMAGE_MITIGATION_USER_SHADOW_STACK_POLICY, *PRTL_IMAGE_MITIGATION_USER_SHADOW_STACK_POLICY; /* size: 0x0018 */

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long Reserved[22];
} _PUBLIC_OBJECT_TYPE_INFORMATION, *P_PUBLIC_OBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef struct _RTL_RETPOLINE_ROUTINES
{
  /* 0x0000 */ unsigned long UnwindDataOffset;
  /* 0x0004 */ unsigned long SwitchtableJump[16];
  /* 0x0044 */ unsigned long CfgIndirectRax;
  /* 0x0048 */ unsigned long NonCfgIndirectRax;
  /* 0x004c */ unsigned long ImportR10;
  /* 0x0050 */ unsigned long JumpHpat;
} RTL_RETPOLINE_ROUTINES, *PRTL_RETPOLINE_ROUTINES; /* size: 0x0054 */

struct tagCWPSTRUCT
{
  /* 0x0000 */ __int64 lParam;
  /* 0x0008 */ unsigned __int64 wParam;
  /* 0x0010 */ unsigned int message;
  /* 0x0014 */ long Padding_1504;
  /* 0x0018 */ struct HWND__* hwnd;
}; /* size: 0x0020 */

typedef struct _IMAGE_RESOURCE_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned short NumberOfNamedEntries;
  /* 0x000e */ unsigned short NumberOfIdEntries;
} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY; /* size: 0x0010 */

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER DirectoryCount;
  /* 0x0008 */ union _LARGE_INTEGER FileCount;
  /* 0x0010 */ unsigned short FsFormatMajVersion;
  /* 0x0012 */ unsigned short FsFormatMinVersion;
  /* 0x0014 */ wchar_t FsFormatName[12];
  /* 0x002c */ long Padding_1505;
  /* 0x0030 */ union _LARGE_INTEGER FormatTime;
  /* 0x0038 */ union _LARGE_INTEGER LastUpdateTime;
  /* 0x0040 */ wchar_t CopyrightInfo[34];
  /* 0x0084 */ wchar_t AbstractInfo[34];
  /* 0x00c8 */ wchar_t FormattingImplementationInfo[34];
  /* 0x010c */ wchar_t LastModifyingImplementationInfo[34];
} FILE_QUERY_ON_DISK_VOL_INFO_BUFFER, *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER; /* size: 0x0150 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS>
{
} ENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS>, *PENUM_FLAG_SIZED_INTEGER<enum DIALOG_DPI_CHANGE_BEHAVIORS>; /* size: 0x0001 */

typedef struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION
{
  /* 0x0000 */ struct _DYNAMIC_FUNCTION_TABLE* DynamicFunctionTable;
  /* 0x0008 */ unsigned char Remove;
  /* 0x0009 */ char __PADDING__[7];
} PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION, *PPROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION; /* size: 0x0010 */

typedef struct _IO_STATUS_BLOCK32
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long Information;
} IO_STATUS_BLOCK32, *PIO_STATUS_BLOCK32; /* size: 0x0008 */

typedef struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
  /* 0x0060 */ struct _PROCESS_DISK_COUNTERS DiskIoInfo;
  /* 0x0088 */ unsigned __int64 ContextSwitches;
  /* 0x0090 */ union _LARGE_INTEGER TotalCycleTime;
  /* 0x0098 */ unsigned __int64 ReadyTime;
  /* 0x00a0 */ struct _PROCESS_ENERGY_VALUES EnergyValues;
} JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION, *PJOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION; /* size: 0x01b0 */

typedef struct _RTL_HANDLE_TABLE
{
  /* 0x0000 */ unsigned long MaximumNumberOfHandles;
  /* 0x0004 */ unsigned long SizeOfHandleTableEntry;
  /* 0x0008 */ unsigned long UseHeap;
  /* 0x000c */ unsigned long TableSize;
  /* 0x0010 */ struct _RTL_HANDLE_TABLE_ENTRY* FreeHandles;
  /* 0x0018 */ struct _RTL_HANDLE_TABLE_ENTRY* CommittedHandles;
  /* 0x0020 */ struct _RTL_HANDLE_TABLE_ENTRY* UnCommittedHandles;
  /* 0x0028 */ struct _RTL_HANDLE_TABLE_ENTRY* MaxReservedHandles;
} RTL_HANDLE_TABLE, *PRTL_HANDLE_TABLE; /* size: 0x0030 */

typedef struct _NCRYPT_CIPHER_PADDING_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char* pbIV;
  /* 0x0010 */ unsigned long cbIV;
  /* 0x0014 */ long Padding_1506;
  /* 0x0018 */ unsigned char* pbOtherInfo;
  /* 0x0020 */ unsigned long cbOtherInfo;
  /* 0x0024 */ long __PADDING__[1];
} NCRYPT_CIPHER_PADDING_INFO, *PNCRYPT_CIPHER_PADDING_INFO; /* size: 0x0028 */

struct tagEMREXTTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ struct tagEMRTEXT emrtext;
}; /* size: 0x004c */

typedef struct _CMC_DATA_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ long Padding_1507;
  /* 0x0008 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0010 */ unsigned long cTaggedRequest;
  /* 0x0014 */ long Padding_1508;
  /* 0x0018 */ struct _CMC_TAGGED_REQUEST* rgTaggedRequest;
  /* 0x0020 */ unsigned long cTaggedContentInfo;
  /* 0x0024 */ long Padding_1509;
  /* 0x0028 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0030 */ unsigned long cTaggedOtherMsg;
  /* 0x0034 */ long Padding_1510;
  /* 0x0038 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_DATA_INFO, *PCMC_DATA_INFO; /* size: 0x0040 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_1511;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_1512;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_1513;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA; /* size: 0x0070 */

struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;

struct NET_ADDRESS_INFO_;

struct wil::details::variable_size<2>
{
}; /* size: 0x0001 */

struct tagNC_ADDRESS
{
  /* 0x0000 */ struct NET_ADDRESS_INFO_* pAddrInfo;
  /* 0x0008 */ unsigned short PortNumber;
  /* 0x000a */ unsigned char PrefixLength;
  /* 0x000b */ char __PADDING__[5];
}; /* size: 0x0010 */

typedef struct _CM_EISA_SLOT_INFORMATION
{
  /* 0x0000 */ unsigned char ReturnCode;
  /* 0x0001 */ unsigned char ReturnFlags;
  /* 0x0002 */ unsigned char MajorRevision;
  /* 0x0003 */ unsigned char MinorRevision;
  /* 0x0004 */ unsigned short Checksum;
  /* 0x0006 */ unsigned char NumberFunctions;
  /* 0x0007 */ unsigned char FunctionInformation;
  /* 0x0008 */ unsigned long CompressedId;
} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION; /* size: 0x000c */

typedef struct _SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION
{
  /* 0x0000 */ unsigned char EnclaveLaunchSigner[32];
} SYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION, *PSYSTEM_ENCLAVE_LAUNCH_CONTROL_INFORMATION; /* size: 0x0020 */

typedef struct _FILE_REMOTE_PROTOCOL_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureSize;
  /* 0x0004 */ unsigned long Protocol;
  /* 0x0008 */ unsigned short ProtocolMajorVersion;
  /* 0x000a */ unsigned short ProtocolMinorVersion;
  /* 0x000c */ unsigned short ProtocolRevision;
  /* 0x000e */ unsigned short Reserved;
  /* 0x0010 */ unsigned long Flags;
  struct
  {
    /* 0x0014 */ unsigned long Reserved[8];
  } /* size: 0x0020 */ GenericReserved;
  union
  {
    union
    {
      struct
      {
        struct
        {
          /* 0x0034 */ unsigned long Capabilities;
        } /* size: 0x0004 */ Server;
        struct
        {
          /* 0x0038 */ unsigned long Capabilities;
          /* 0x003c */ unsigned long ShareFlags;
        } /* size: 0x0008 */ Share;
      } /* size: 0x000c */ Smb2;
      /* 0x0034 */ unsigned long Reserved[16];
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ ProtocolSpecific;
} FILE_REMOTE_PROTOCOL_INFO, *PFILE_REMOTE_PROTOCOL_INFO; /* size: 0x0074 */

typedef struct _MEMORYSTATUSEX
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 ullTotalPhys;
  /* 0x0010 */ unsigned __int64 ullAvailPhys;
  /* 0x0018 */ unsigned __int64 ullTotalPageFile;
  /* 0x0020 */ unsigned __int64 ullAvailPageFile;
  /* 0x0028 */ unsigned __int64 ullTotalVirtual;
  /* 0x0030 */ unsigned __int64 ullAvailVirtual;
  /* 0x0038 */ unsigned __int64 ullAvailExtendedVirtual;
} MEMORYSTATUSEX, *PMEMORYSTATUSEX; /* size: 0x0040 */

typedef struct _PACKAGE_INFO_REFERENCE
{
  /* 0x0000 */ void* reserved;
} PACKAGE_INFO_REFERENCE, *PPACKAGE_INFO_REFERENCE; /* size: 0x0008 */

typedef struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION
{
  /* 0x0000 */ unsigned __int64 OverallChangeStamp;
  /* 0x0008 */ struct _SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION_ENTRY Descriptors[3];
} SYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION, *PSYSTEM_FEATURE_CONFIGURATION_SECTIONS_INFORMATION; /* size: 0x0050 */

struct BITMAPV4HEADER
{
  /* 0x0000 */ unsigned long bV4Size;
  /* 0x0004 */ long bV4Width;
  /* 0x0008 */ long bV4Height;
  /* 0x000c */ unsigned short bV4Planes;
  /* 0x000e */ unsigned short bV4BitCount;
  /* 0x0010 */ unsigned long bV4V4Compression;
  /* 0x0014 */ unsigned long bV4SizeImage;
  /* 0x0018 */ long bV4XPelsPerMeter;
  /* 0x001c */ long bV4YPelsPerMeter;
  /* 0x0020 */ unsigned long bV4ClrUsed;
  /* 0x0024 */ unsigned long bV4ClrImportant;
  /* 0x0028 */ unsigned long bV4RedMask;
  /* 0x002c */ unsigned long bV4GreenMask;
  /* 0x0030 */ unsigned long bV4BlueMask;
  /* 0x0034 */ unsigned long bV4AlphaMask;
  /* 0x0038 */ unsigned long bV4CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV4Endpoints;
  /* 0x0060 */ unsigned long bV4GammaRed;
  /* 0x0064 */ unsigned long bV4GammaGreen;
  /* 0x0068 */ unsigned long bV4GammaBlue;
}; /* size: 0x006c */

struct HMONITOR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_MEMORY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 PagedPoolCommitPageCount;
  /* 0x0008 */ unsigned __int64 NonPagedPoolPageCount;
  /* 0x0010 */ unsigned __int64 MdlPageCount;
  /* 0x0018 */ unsigned __int64 CommitPageCount;
} SYSTEM_MEMORY_INFORMATION, *PSYSTEM_MEMORY_INFORMATION; /* size: 0x0020 */

typedef struct _PLEX_READ_DATA_REQUEST
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ unsigned long ByteLength;
  /* 0x000c */ unsigned long PlexNumber;
} PLEX_READ_DATA_REQUEST, *PPLEX_READ_DATA_REQUEST; /* size: 0x0010 */

typedef struct _SYSTEM_MANUFACTURING_INFORMATION
{
  /* 0x0000 */ unsigned long Options;
  /* 0x0004 */ long Padding_1514;
  /* 0x0008 */ struct _UNICODE_STRING ProfileName;
} SYSTEM_MANUFACTURING_INFORMATION, *PSYSTEM_MANUFACTURING_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_STORAGE_RESERVE_ID_INFORMATION
{
  /* 0x0000 */ enum _STORAGE_RESERVE_ID StorageReserveId;
} FILE_STORAGE_RESERVE_ID_INFORMATION, *PFILE_STORAGE_RESERVE_ID_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Machine : 16; /* bit position: 0 */
    /* 0x0000 */ unsigned long KernelMode : 1; /* bit position: 16 */
    /* 0x0000 */ unsigned long UserMode : 1; /* bit position: 17 */
    /* 0x0000 */ unsigned long Native : 1; /* bit position: 18 */
    /* 0x0000 */ unsigned long Process : 1; /* bit position: 19 */
    /* 0x0000 */ unsigned long WoW64Container : 1; /* bit position: 20 */
    /* 0x0000 */ unsigned long ReservedZero0 : 11; /* bit position: 21 */
  }; /* bitfield */
} SYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION, *PSYSTEM_SUPPORTED_PROCESSOR_ARCHITECTURES_INFORMATION; /* size: 0x0004 */

typedef struct _IMAGE_HOT_PATCH_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long SequenceNumber;
  /* 0x000c */ unsigned long BaseImageList;
  /* 0x0010 */ unsigned long BaseImageCount;
  /* 0x0014 */ unsigned long BufferOffset;
  /* 0x0018 */ unsigned long ExtraPatchSize;
} IMAGE_HOT_PATCH_INFO, *PIMAGE_HOT_PATCH_INFO; /* size: 0x001c */

struct IProgressNotify
{
}; /* size: 0x0008 */

typedef struct _SE_IMPERSONATION_STATE
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ unsigned char CopyOnOpen;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char Padding_1515[2];
  /* 0x000c */ enum _SECURITY_IMPERSONATION_LEVEL Level;
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE; /* size: 0x0010 */

struct USN_TRACK_MODIFIED_RANGES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Unused;
  /* 0x0008 */ unsigned __int64 ChunkSize;
  /* 0x0010 */ __int64 FileSizeThreshold;
}; /* size: 0x0018 */

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
{
  /* 0x0000 */ unsigned long SavepointId;
} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT; /* size: 0x0004 */

struct USN_RECORD_V2
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned __int64 FileReferenceNumber;
  /* 0x0010 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0018 */ __int64 Usn;
  /* 0x0020 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0028 */ unsigned long Reason;
  /* 0x002c */ unsigned long SourceInfo;
  /* 0x0030 */ unsigned long SecurityId;
  /* 0x0034 */ unsigned long FileAttributes;
  /* 0x0038 */ unsigned short FileNameLength;
  /* 0x003a */ unsigned short FileNameOffset;
  /* 0x003c */ wchar_t FileName[1];
  /* 0x003e */ char __PADDING__[2];
}; /* size: 0x0040 */

union USN_RECORD_UNION
{
  union
  {
    /* 0x0000 */ struct USN_RECORD_COMMON_HEADER Header;
    /* 0x0000 */ struct USN_RECORD_V2 V2;
    /* 0x0000 */ struct USN_RECORD_V3 V3;
    /* 0x0000 */ struct USN_RECORD_V4 V4;
  }; /* size: 0x0050 */
}; /* size: 0x0050 */

struct tagRemSNB
{
  /* 0x0000 */ unsigned long ulCntStr;
  /* 0x0004 */ unsigned long ulCntChar;
  /* 0x0008 */ wchar_t rgString[1];
  /* 0x000a */ char __PADDING__[2];
}; /* size: 0x000c */

struct MOVE_FILE_RECORD_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileRecord;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileRecord;
}; /* size: 0x0018 */

struct READ_FILE_USN_DATA
{
  /* 0x0000 */ unsigned short MinMajorVersion;
  /* 0x0002 */ unsigned short MaxMajorVersion;
}; /* size: 0x0004 */

struct POWER_STATE_HANDLER
{
  /* 0x0000 */ enum POWER_STATE_HANDLER_TYPE Type;
  /* 0x0004 */ unsigned char RtcWake;
  /* 0x0005 */ unsigned char Spare[3];
  /* 0x0008 */ void* Handler /* function */;
  /* 0x0010 */ void* Context;
}; /* size: 0x0018 */

typedef struct _FILE_LAYOUT_INFO_ENTRY
{
  struct
  {
    /* 0x0000 */ union _LARGE_INTEGER CreationTime;
    /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
    /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
    /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
    /* 0x0020 */ unsigned long FileAttributes;
    /* 0x0024 */ long __PADDING__[1];
  } /* size: 0x0028 */ BasicInformation;
  /* 0x0028 */ unsigned long OwnerId;
  /* 0x002c */ unsigned long SecurityId;
  /* 0x0030 */ __int64 Usn;
  /* 0x0038 */ enum _STORAGE_RESERVE_ID StorageReserveId;
  /* 0x003c */ long __PADDING__[1];
} FILE_LAYOUT_INFO_ENTRY, *PFILE_LAYOUT_INFO_ENTRY; /* size: 0x0040 */

struct PPM_WMI_IDLE_STATES
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

struct IFastRundown
{
}; /* size: 0x0008 */

struct PPM_IDLE_ACCOUNTING_EX
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ unsigned long AbortCount;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING_EX State[1];
}; /* size: 0x01b8 */

struct PPM_PERFSTATE_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Status;
  /* 0x0008 */ unsigned long Latency;
  /* 0x000c */ unsigned long Speed;
  /* 0x0010 */ unsigned long Processor;
}; /* size: 0x0014 */

struct PPM_THERMAL_POLICY_EVENT
{
  /* 0x0000 */ unsigned char Mode;
  /* 0x0001 */ char Padding_1516[7];
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

struct REFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned long MajorVersion;
  /* 0x0008 */ unsigned long MinorVersion;
  /* 0x000c */ unsigned long BytesPerPhysicalSector;
  /* 0x0010 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0018 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0020 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0028 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0030 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0038 */ unsigned long BytesPerSector;
  /* 0x003c */ unsigned long BytesPerCluster;
  /* 0x0040 */ union _LARGE_INTEGER MaximumSizeOfResidentFile;
  /* 0x0048 */ unsigned short FastTierDataFillRatio;
  /* 0x004a */ unsigned short SlowTierDataFillRatio;
  /* 0x004c */ unsigned long DestagesFastTierToSlowTierRate;
  /* 0x0050 */ union _LARGE_INTEGER Reserved[9];
}; /* size: 0x0098 */

typedef struct _CRT_DOUBLE
{
  /* 0x0000 */ double x;
} CRT_DOUBLE, *PCRT_DOUBLE; /* size: 0x0008 */

struct BITMAPV5HEADER
{
  /* 0x0000 */ unsigned long bV5Size;
  /* 0x0004 */ long bV5Width;
  /* 0x0008 */ long bV5Height;
  /* 0x000c */ unsigned short bV5Planes;
  /* 0x000e */ unsigned short bV5BitCount;
  /* 0x0010 */ unsigned long bV5Compression;
  /* 0x0014 */ unsigned long bV5SizeImage;
  /* 0x0018 */ long bV5XPelsPerMeter;
  /* 0x001c */ long bV5YPelsPerMeter;
  /* 0x0020 */ unsigned long bV5ClrUsed;
  /* 0x0024 */ unsigned long bV5ClrImportant;
  /* 0x0028 */ unsigned long bV5RedMask;
  /* 0x002c */ unsigned long bV5GreenMask;
  /* 0x0030 */ unsigned long bV5BlueMask;
  /* 0x0034 */ unsigned long bV5AlphaMask;
  /* 0x0038 */ unsigned long bV5CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV5Endpoints;
  /* 0x0060 */ unsigned long bV5GammaRed;
  /* 0x0064 */ unsigned long bV5GammaGreen;
  /* 0x0068 */ unsigned long bV5GammaBlue;
  /* 0x006c */ unsigned long bV5Intent;
  /* 0x0070 */ unsigned long bV5ProfileData;
  /* 0x0074 */ unsigned long bV5ProfileSize;
  /* 0x0078 */ unsigned long bV5Reserved;
}; /* size: 0x007c */

struct FLASHWINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_1517;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ unsigned int uCount;
  /* 0x0018 */ unsigned long dwTimeout;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _REASON_BUFFER
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1518;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned __int64 ResourceFileNameOffset;
      /* 0x0010 */ unsigned short ResourceReasonId;
      /* 0x0012 */ char Padding_1519[2];
      /* 0x0014 */ unsigned long StringCount;
      /* 0x0018 */ unsigned __int64 SubstitutionStringsOffset;
    }; /* size: 0x0016 */
    struct
    {
      /* 0x0008 */ unsigned __int64 SimpleStringOffset;
      /* 0x0010 */ long __PADDING__[4];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
} REASON_BUFFER, *PREASON_BUFFER; /* size: 0x0020 */

struct RPC_INTERFACE_TEMPLATEA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1520;
  /* 0x0008 */ void* IfSpec;
  /* 0x0010 */ struct _GUID* MgrTypeUuid;
  /* 0x0018 */ void* MgrEpv;
  /* 0x0020 */ unsigned int Flags;
  /* 0x0024 */ unsigned int MaxCalls;
  /* 0x0028 */ unsigned int MaxRpcSize;
  /* 0x002c */ long Padding_1521;
  /* 0x0030 */ void* IfCallback /* function */;
  /* 0x0038 */ struct _UUID_VECTOR* UuidVector;
  /* 0x0040 */ unsigned char* Annotation;
  /* 0x0048 */ void* SecurityDescriptor;
}; /* size: 0x0050 */

struct READ_USN_JOURNAL_DATA_V0
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
}; /* size: 0x0028 */

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned char Enable;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_SET_TIME_ADJUST_INFORMATION, *PSYSTEM_SET_TIME_ADJUST_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _FILE_ID_128 ParentFileId;
  /* 0x0014 */ unsigned long FileNameLength;
  /* 0x0018 */ wchar_t FileName[1];
  /* 0x001a */ char __PADDING__[2];
} FILE_LINK_ENTRY_FULL_ID_INFORMATION, *PFILE_LINK_ENTRY_FULL_ID_INFORMATION; /* size: 0x001c */

typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
  union
  {
    /* 0x0004 */ unsigned long CpuRate;
    /* 0x0004 */ unsigned long Weight;
    struct
    {
      /* 0x0004 */ unsigned short MinRate;
      /* 0x0006 */ unsigned short MaxRate;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} JOBOBJECT_CPU_RATE_CONTROL_INFORMATION, *PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION; /* size: 0x0008 */

typedef struct _PARSE_MESSAGE_CONTEXT
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long cwSavColumn;
  /* 0x0008 */ unsigned __int64 iwSrc;
  /* 0x0010 */ unsigned __int64 iwDst;
  /* 0x0018 */ unsigned __int64 iwDstSpace;
  /* 0x0020 */ char* lpvArgStart;
} PARSE_MESSAGE_CONTEXT, *PPARSE_MESSAGE_CONTEXT; /* size: 0x0028 */

typedef struct _CPS_URLS
{
  /* 0x0000 */ wchar_t* pszURL;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pAlgorithm;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* pDigest;
} CPS_URLS, *PCPS_URLS; /* size: 0x0018 */

typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned char IsRemote;
} FILE_IS_REMOTE_DEVICE_INFORMATION, *PFILE_IS_REMOTE_DEVICE_INFORMATION; /* size: 0x0001 */

typedef struct _PROCESS_KEEPALIVE_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long WakeCount;
  /* 0x0004 */ unsigned long NoWakeCount;
} PROCESS_KEEPALIVE_COUNT_INFORMATION, *PPROCESS_KEEPALIVE_COUNT_INFORMATION; /* size: 0x0008 */

typedef struct _THREAD_PROFILING_INFORMATION
{
  /* 0x0000 */ unsigned __int64 HardwareCounters;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Enable;
  /* 0x0010 */ struct _THREAD_PERFORMANCE_DATA* PerformanceData;
} THREAD_PROFILING_INFORMATION, *PTHREAD_PROFILING_INFORMATION; /* size: 0x0018 */

struct BSMINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_1522;
  /* 0x0008 */ struct HDESK__* hdesk;
  /* 0x0010 */ struct HWND__* hwnd;
  /* 0x0018 */ struct _LUID luid;
}; /* size: 0x0020 */

typedef struct _CMSG_CONTENT_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1523;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long cRecipients;
  /* 0x0034 */ long Padding_1524;
  /* 0x0038 */ struct _CMSG_RECIPIENT_ENCODE_INFO* rgCmsRecipients;
  /* 0x0040 */ void* pfnAlloc /* function */;
  /* 0x0048 */ void* pfnFree /* function */;
  /* 0x0050 */ unsigned long dwEncryptFlags;
  /* 0x0054 */ long Padding_1525;
  union
  {
    /* 0x0058 */ unsigned __int64 hContentEncryptKey;
    /* 0x0058 */ void* hCNGContentEncryptKey;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long dwFlags;
  /* 0x0064 */ int fCNG;
  /* 0x0068 */ unsigned char* pbCNGContentEncryptKeyObject;
  /* 0x0070 */ unsigned char* pbContentEncryptKey;
  /* 0x0078 */ unsigned long cbContentEncryptKey;
  /* 0x007c */ long __PADDING__[1];
} CMSG_CONTENT_ENCRYPT_INFO, *PCMSG_CONTENT_ENCRYPT_INFO; /* size: 0x0080 */

typedef struct _CMSG_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  /* 0x0004 */ long Padding_1526;
  union
  {
    /* 0x0008 */ struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO* pKeyTrans;
    /* 0x0008 */ struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO* pKeyAgree;
    /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO* pMailList;
  }; /* size: 0x0008 */
} CMSG_RECIPIENT_ENCODE_INFO, *PCMSG_RECIPIENT_ENCODE_INFO; /* size: 0x0010 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1527;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
  /* 0x0040 */ void* pvKeyWrapAuxInfo;
  /* 0x0048 */ unsigned __int64 hCryptProv;
  /* 0x0050 */ unsigned long dwKeySpec;
  /* 0x0054 */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0058 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pEphemeralAlgorithm;
    /* 0x0058 */ struct _CERT_ID* pSenderId;
  }; /* size: 0x0008 */
  /* 0x0060 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0070 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0074 */ long Padding_1528;
  /* 0x0078 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO; /* size: 0x0080 */

typedef struct _SYSTEM_DEVICE_DATA_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceId;
  /* 0x0010 */ struct _UNICODE_STRING DataName;
  /* 0x0020 */ unsigned long DataType;
  /* 0x0024 */ unsigned long DataBufferLength;
  /* 0x0028 */ void* DataBuffer;
} SYSTEM_DEVICE_DATA_INFORMATION, *PSYSTEM_DEVICE_DATA_INFORMATION; /* size: 0x0030 */

typedef struct _RTL_HEAP_STACK_CONTROL
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ long Padding_1529;
  /* 0x0008 */ void* Process;
} RTL_HEAP_STACK_CONTROL, *PRTL_HEAP_STACK_CONTROL; /* size: 0x0010 */

typedef struct _PUBKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ struct _DSSSEED DSSSeed;
} PUBKEYVER3, *PPUBKEYVER3; /* size: 0x0028 */

typedef struct _MESSAGE_RESOURCE_ENTRY
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned char Text[1];
  /* 0x0005 */ char __PADDING__[1];
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY; /* size: 0x0006 */

typedef struct _CMSG_CMS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  /* 0x0004 */ long Padding_1530;
  union
  {
    /* 0x0008 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
    /* 0x0008 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
    /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  }; /* size: 0x0008 */
} CMSG_CMS_RECIPIENT_INFO, *PCMSG_CMS_RECIPIENT_INFO; /* size: 0x0010 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1531;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
  /* 0x0028 */ struct _SEC_WINNT_AUTH_IDENTITY_W* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_1532;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W; /* size: 0x0040 */

typedef struct _IMAGE_RESOURCE_DATA_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToData;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long CodePage;
  /* 0x000c */ unsigned long Reserved;
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY; /* size: 0x0010 */

typedef struct _TOKEN_USER_CLAIMS
{
  /* 0x0000 */ void* UserClaims;
} TOKEN_USER_CLAIMS, *PTOKEN_USER_CLAIMS; /* size: 0x0008 */

typedef struct _FILE_ALLOCATED_RANGE_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} FILE_ALLOCATED_RANGE_BUFFER, *PFILE_ALLOCATED_RANGE_BUFFER; /* size: 0x0010 */

typedef struct _IMAGE_CHPE_METADATA_X86
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long CHPECodeAddressRangeOffset;
  /* 0x0008 */ unsigned long CHPECodeAddressRangeCount;
  /* 0x000c */ unsigned long WowA64ExceptionHandlerFunctionPointer;
  /* 0x0010 */ unsigned long WowA64DispatchCallFunctionPointer;
  /* 0x0014 */ unsigned long WowA64DispatchIndirectCallFunctionPointer;
  /* 0x0018 */ unsigned long WowA64DispatchIndirectCallCfgFunctionPointer;
  /* 0x001c */ unsigned long WowA64DispatchRetFunctionPointer;
  /* 0x0020 */ unsigned long WowA64DispatchRetLeafFunctionPointer;
  /* 0x0024 */ unsigned long WowA64DispatchJumpFunctionPointer;
  /* 0x0028 */ unsigned long CompilerIATPointer;
  /* 0x002c */ unsigned long WowA64RdtscFunctionPointer;
} IMAGE_CHPE_METADATA_X86, *PIMAGE_CHPE_METADATA_X86; /* size: 0x0030 */

typedef struct _FILE_MEMORY_PARTITION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 OwnerPartitionHandle;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned char NoCrossPartitionAccess;
        /* 0x0009 */ unsigned char Spare[3];
      }; /* size: 0x0004 */
      /* 0x0008 */ unsigned long AllFlags;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Flags;
  /* 0x000c */ long __PADDING__[1];
} FILE_MEMORY_PARTITION_INFORMATION, *PFILE_MEMORY_PARTITION_INFORMATION; /* size: 0x0010 */

typedef struct _T2_SET_PARAMETERS_V0
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ __int64 NoWakeTolerance;
} T2_SET_PARAMETERS_V0, *PT2_SET_PARAMETERS_V0; /* size: 0x0010 */

struct tagMSGBOXPARAMSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_1533;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const char* lpszText;
  /* 0x0020 */ const char* lpszCaption;
  /* 0x0028 */ unsigned long dwStyle;
  /* 0x002c */ long Padding_1534;
  /* 0x0030 */ const char* lpszIcon;
  /* 0x0038 */ unsigned __int64 dwContextHelpId;
  /* 0x0040 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0048 */ unsigned long dwLanguageId;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB CertSignHashCNGAlgPropData;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB CertIssuerPubKeyBitLengthPropData;
} CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO, *PCRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO; /* size: 0x0020 */

typedef struct _CTL_FIND_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1535;
  /* 0x0008 */ struct _CTL_USAGE SubjectUsage;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0028 */ struct _CERT_INFO* pSigner;
} CTL_FIND_USAGE_PARA, *PCTL_FIND_USAGE_PARA; /* size: 0x0030 */

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned short wResponseType;
  /* 0x0006 */ unsigned short wResponseFlags;
  /* 0x0008 */ struct _FILETIME LastModifiedTime;
  /* 0x0010 */ unsigned long dwMaxAge;
  /* 0x0014 */ long Padding_1536;
  /* 0x0018 */ const wchar_t* pwszETag;
  /* 0x0020 */ unsigned long dwProxyId;
  /* 0x0024 */ long __PADDING__[1];
} CRYPTNET_URL_CACHE_RESPONSE_INFO, *PCRYPTNET_URL_CACHE_RESPONSE_INFO; /* size: 0x0028 */

typedef struct _SYSTEM_FILECACHE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CurrentSize;
  /* 0x0008 */ unsigned __int64 PeakSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_1537;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSet;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSet;
  /* 0x0028 */ unsigned __int64 CurrentSizeIncludingTransitionInPages;
  /* 0x0030 */ unsigned __int64 PeakSizeIncludingTransitionInPages;
  /* 0x0038 */ unsigned long TransitionRePurposeCount;
  /* 0x003c */ unsigned long Flags;
} SYSTEM_FILECACHE_INFORMATION, *PSYSTEM_FILECACHE_INFORMATION; /* size: 0x0040 */

struct tagRemHPALETTE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _SERVICE_DESCRIPTIONA
{
  /* 0x0000 */ char* lpDescription;
} SERVICE_DESCRIPTIONA, *PSERVICE_DESCRIPTIONA; /* size: 0x0008 */

typedef struct _CERT_TPM_SPECIFICATION_INFO
{
  /* 0x0000 */ wchar_t* pwszFamily;
  /* 0x0008 */ unsigned long dwLevel;
  /* 0x000c */ unsigned long dwRevision;
} CERT_TPM_SPECIFICATION_INFO, *PCERT_TPM_SPECIFICATION_INFO; /* size: 0x0010 */

struct IWinInetHttpInfo
{
}; /* size: 0x0008 */

typedef struct _RTL_PROTECTED_ACCESS
{
  /* 0x0000 */ unsigned long DominateMask;
  /* 0x0004 */ unsigned long DeniedProcessAccess;
  /* 0x0008 */ unsigned long DeniedThreadAccess;
} RTL_PROTECTED_ACCESS, *PRTL_PROTECTED_ACCESS; /* size: 0x000c */

typedef struct _IMAGE_NT_HEADERS
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
} IMAGE_NT_HEADERS, *PIMAGE_NT_HEADERS; /* size: 0x00f8 */

struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION
{
  /* 0x0000 */ __int64 MaxIops;
  /* 0x0008 */ __int64 MaxBandwidth;
  /* 0x0010 */ __int64 ReservationIops;
  /* 0x0018 */ const wchar_t* VolumeName;
  /* 0x0020 */ unsigned long BaseIoSize;
  /* 0x0024 */ unsigned long ControlFlags;
}; /* size: 0x0028 */

typedef struct _SYSDBG_CONTROL_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ unsigned long Processor;
} SYSDBG_CONTROL_SPACE, *PSYSDBG_CONTROL_SPACE; /* size: 0x0018 */

typedef struct _FILE_ID_INFORMATION
{
  /* 0x0000 */ unsigned __int64 VolumeSerialNumber;
  /* 0x0008 */ struct _FILE_ID_128 FileId;
} FILE_ID_INFORMATION, *PFILE_ID_INFORMATION; /* size: 0x0018 */

typedef struct _SHRINK_VOLUME_INFORMATION
{
  /* 0x0000 */ enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
  /* 0x0004 */ long Padding_1538;
  /* 0x0008 */ unsigned __int64 Flags;
  /* 0x0010 */ __int64 NewNumberOfSectors;
} SHRINK_VOLUME_INFORMATION, *PSHRINK_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _MIDL_INTERCEPTION_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1539;
  /* 0x0008 */ const unsigned char* ProcString;
  /* 0x0010 */ const unsigned short* ProcFormatOffsetTable;
  /* 0x0018 */ unsigned long ProcCount;
  /* 0x001c */ long Padding_1540;
  /* 0x0020 */ const unsigned char* TypeString;
} MIDL_INTERCEPTION_INFO, *PMIDL_INTERCEPTION_INFO; /* size: 0x0028 */

struct tagCOMPOSITIONFORM
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ struct tagPOINT ptCurrentPos;
  /* 0x000c */ struct tagRECT rcArea;
}; /* size: 0x001c */

typedef struct _CERT_AUTHORITY_KEY_ID_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB CertIssuer;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB CertSerialNumber;
} CERT_AUTHORITY_KEY_ID_INFO, *PCERT_AUTHORITY_KEY_ID_INFO; /* size: 0x0030 */

typedef struct _MEMORY_EXHAUSTION_INFORMATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ enum _MEMORY_EXHAUSTION_TYPE Type;
  /* 0x0008 */ unsigned __int64 Value;
} MEMORY_EXHAUSTION_INFORMATION, *PMEMORY_EXHAUSTION_INFORMATION; /* size: 0x0010 */

typedef struct _CRYPT_CONTENT_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Content;
} CRYPT_CONTENT_INFO, *PCRYPT_CONTENT_INFO; /* size: 0x0018 */

typedef struct _FILE_ATTRIBUTE_TAG_INFO
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFO, *PFILE_ATTRIBUTE_TAG_INFO; /* size: 0x0008 */

typedef struct _CMSG_STREAM_INFO
{
  /* 0x0000 */ unsigned long cbContent;
  /* 0x0004 */ long Padding_1541;
  /* 0x0008 */ void* pfnStreamOutput /* function */;
  /* 0x0010 */ void* pvArg;
} CMSG_STREAM_INFO, *PCMSG_STREAM_INFO; /* size: 0x0018 */

struct tagPELARRAY
{
  /* 0x0000 */ long paXCount;
  /* 0x0004 */ long paYCount;
  /* 0x0008 */ long paXExt;
  /* 0x000c */ long paYExt;
  /* 0x0010 */ unsigned char paRGBs;
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

typedef struct _ALPC_TOKEN_ATTR
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
} ALPC_TOKEN_ATTR, *PALPC_TOKEN_ATTR; /* size: 0x0018 */

typedef struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ProviderFlags;
  /* 0x0008 */ unsigned long DebugFlags;
  /* 0x000c */ unsigned long Spare;
} RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION, *PRTL_VERIFIER_RUNTIME_FLAGS_INFORMATION; /* size: 0x0010 */

typedef struct _ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS>
{
} ENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS>, *PENUM_FLAG_SIZED_INTEGER<enum _RTL_RESOURCE_POLICY_FLAGS>; /* size: 0x0001 */

typedef struct _RTL_BACKOFF
{
  /* 0x0000 */ unsigned long Delay;
} RTL_BACKOFF, *PRTL_BACKOFF; /* size: 0x0004 */

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long RegistryQuotaAllowed;
  /* 0x0004 */ unsigned long RegistryQuotaUsed;
  /* 0x0008 */ unsigned __int64 PagedPoolSize;
} SYSTEM_REGISTRY_QUOTA_INFORMATION, *PSYSTEM_REGISTRY_QUOTA_INFORMATION; /* size: 0x0010 */

typedef struct _MEMORY_SCRUB_INFORMATION
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 PagesScrubbed;
} MEMORY_SCRUB_INFORMATION, *PMEMORY_SCRUB_INFORMATION; /* size: 0x0010 */

struct tagCOLORMATCHTOTARGET
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwAction;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long cbName;
  /* 0x0014 */ unsigned long cbData;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

typedef struct _BCRYPT_DSA_KEY_BLOB_V2
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
  /* 0x0008 */ enum HASHALGORITHM_ENUM hashAlgorithm;
  /* 0x000c */ enum DSAFIPSVERSION_ENUM standardVersion;
  /* 0x0010 */ unsigned long cbSeedLength;
  /* 0x0014 */ unsigned long cbGroupSize;
  /* 0x0018 */ unsigned char Count[4];
} BCRYPT_DSA_KEY_BLOB_V2, *PBCRYPT_DSA_KEY_BLOB_V2; /* size: 0x001c */

typedef struct _CRYPT_AES_128_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char IV[16];
  /* 0x0020 */ unsigned char EncryptionState[16][11];
  /* 0x00d0 */ unsigned char DecryptionState[16][11];
  /* 0x0180 */ unsigned char Feedback[16];
} CRYPT_AES_128_KEY_STATE, *PCRYPT_AES_128_KEY_STATE; /* size: 0x0190 */

typedef struct _IMAGE_HOT_PATCH_HASHES
{
  /* 0x0000 */ unsigned char SHA256[32];
  /* 0x0020 */ unsigned char SHA1[20];
} IMAGE_HOT_PATCH_HASHES, *PIMAGE_HOT_PATCH_HASHES; /* size: 0x0034 */

typedef struct _PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned long PreferredNode;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ void* Ssp;
} PROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION, *PPROCESS_FIBER_SHADOW_STACK_ALLOCATION_INFORMATION; /* size: 0x0020 */

struct tagPOLYTEXTA
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ long Padding_1542;
  /* 0x0010 */ const char* lpstr;
  /* 0x0018 */ unsigned int uiFlags;
  /* 0x001c */ struct tagRECT rcl;
  /* 0x002c */ long Padding_1543;
  /* 0x0030 */ int* pdx;
}; /* size: 0x0038 */

typedef struct _WIN32_MEMORY_RANGE_ENTRY
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ unsigned __int64 NumberOfBytes;
} WIN32_MEMORY_RANGE_ENTRY, *PWIN32_MEMORY_RANGE_ENTRY; /* size: 0x0010 */

typedef struct _RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY DisableNonSystemFonts;
} RTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY, *PRTL_IMAGE_MITIGATION_FONT_DISABLE_POLICY; /* size: 0x0008 */

struct tagEMRGRADIENTFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nVer;
  /* 0x001c */ unsigned long nTri;
  /* 0x0020 */ unsigned long ulMode;
  /* 0x0024 */ struct _TRIVERTEX Ver[1];
}; /* size: 0x0034 */

struct tagEMRARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct _POINTL ptlStart;
  /* 0x0020 */ struct _POINTL ptlEnd;
}; /* size: 0x0028 */

typedef struct _FILE_ID_EXTD_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ unsigned long ReparsePointTag;
  /* 0x0048 */ struct _FILE_ID_128 FileId;
  /* 0x0058 */ wchar_t FileName[1];
  /* 0x005a */ char __PADDING__[6];
} FILE_ID_EXTD_DIR_INFORMATION, *PFILE_ID_EXTD_DIR_INFORMATION; /* size: 0x0060 */

typedef struct _SYSTEM_XFG_FAILURE_INFORMATION
{
  /* 0x0000 */ void* ReturnAddress;
  /* 0x0008 */ void* TargetAddress;
  /* 0x0010 */ unsigned long DispatchMode;
  /* 0x0014 */ long Padding_1544;
  /* 0x0018 */ unsigned __int64 XfgValue;
} SYSTEM_XFG_FAILURE_INFORMATION, *PSYSTEM_XFG_FAILURE_INFORMATION; /* size: 0x0020 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION; /* size: 0x0010 */

typedef struct _CSV_SET_VOLUME_ID
{
  /* 0x0000 */ struct _GUID VolumeId;
} CSV_SET_VOLUME_ID, *PCSV_SET_VOLUME_ID; /* size: 0x0010 */

typedef struct _PS_CPU_QUOTA_SET_INFORMATION
{
  /* 0x0000 */ __int64 SessionHandle;
  /* 0x0008 */ unsigned long Weight;
  /* 0x000c */ long __PADDING__[1];
} PS_CPU_QUOTA_SET_INFORMATION, *PPS_CPU_QUOTA_SET_INFORMATION; /* size: 0x0010 */

typedef struct _Real_widened<float,float>
{
} Real_widened<float,float>, *PReal_widened<float,float>; /* size: 0x0001 */

typedef struct _SYSTEM_NET_RATE_CONTROL_SET_CONTEXT
{
  /* 0x0000 */ struct _SYSTEM_NET_RATE_CONTROL_CONTEXT_HEADER Header;
  /* 0x0010 */ unsigned __int64 MaxBandwidth;
  /* 0x0018 */ struct _GUID* ContainerId;
  union
  {
    /* 0x0020 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0020 */ unsigned long Set : 1; /* bit position: 0 */
      /* 0x0020 */ unsigned long Update : 1; /* bit position: 1 */
      /* 0x0020 */ unsigned long Clear : 1; /* bit position: 2 */
      /* 0x0020 */ unsigned long DscpTagEnabled : 1; /* bit position: 3 */
      /* 0x0020 */ unsigned long MaxBandwidthEnabled : 1; /* bit position: 4 */
      /* 0x0020 */ unsigned long Reserved : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0024 */ unsigned char DscpTag;
  /* 0x0025 */ char __PADDING__[3];
} SYSTEM_NET_RATE_CONTROL_SET_CONTEXT, *PSYSTEM_NET_RATE_CONTROL_SET_CONTEXT; /* size: 0x0028 */

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ZeroPageCount;
  /* 0x0008 */ unsigned __int64 FreePageCount;
  /* 0x0010 */ unsigned __int64 ModifiedPageCount;
  /* 0x0018 */ unsigned __int64 ModifiedNoWritePageCount;
  /* 0x0020 */ unsigned __int64 BadPageCount;
  /* 0x0028 */ unsigned __int64 PageCountByPriority[8];
  /* 0x0068 */ unsigned __int64 RepurposedPagesByPriority[8];
  /* 0x00a8 */ unsigned __int64 ModifiedPageCountPageFile;
} SYSTEM_MEMORY_LIST_INFORMATION, *PSYSTEM_MEMORY_LIST_INFORMATION; /* size: 0x00b0 */

typedef struct _FILE_DESIRED_STORAGE_CLASS_INFORMATION
{
  /* 0x0000 */ enum _FILE_STORAGE_TIER_CLASS Class;
  /* 0x0004 */ unsigned long Flags;
} FILE_DESIRED_STORAGE_CLASS_INFORMATION, *PFILE_DESIRED_STORAGE_CLASS_INFORMATION; /* size: 0x0008 */

struct tagOIFI
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fMDIApp;
  /* 0x0008 */ struct HWND__* hwndFrame;
  /* 0x0010 */ struct HACCEL__* haccel;
  /* 0x0018 */ unsigned int cAccelEntries;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _CERT_NAME_INFO
{
  /* 0x0000 */ unsigned long cRDN;
  /* 0x0004 */ long Padding_1545;
  /* 0x0008 */ struct _CERT_RDN* rgRDN;
} CERT_NAME_INFO, *PCERT_NAME_INFO; /* size: 0x0010 */

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION
{
  /* 0x0000 */ void* VirtualAddress;
  union
  {
    union
    {
      /* 0x0008 */ struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
      /* 0x0008 */ unsigned __int64 Long;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MEMORY_WORKING_SET_EX_INFORMATION, *PMEMORY_WORKING_SET_EX_INFORMATION; /* size: 0x0010 */

struct tagTITLEBARINFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
  /* 0x002c */ struct tagRECT rgrect[6];
}; /* size: 0x008c */

typedef struct _PAGE_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long PagePriority;
} PAGE_PRIORITY_INFORMATION, *PPAGE_PRIORITY_INFORMATION; /* size: 0x0004 */

typedef struct _IO_ERROR_LOG_MESSAGE
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned short DriverNameLength;
  /* 0x0006 */ char Padding_1546[2];
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long DriverNameOffset;
  /* 0x0014 */ long Padding_1547;
  /* 0x0018 */ struct _IO_ERROR_LOG_PACKET EntryData;
} IO_ERROR_LOG_MESSAGE, *PIO_ERROR_LOG_MESSAGE; /* size: 0x0048 */

struct NTFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0008 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0010 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0018 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0020 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0028 */ unsigned long BytesPerSector;
  /* 0x002c */ unsigned long BytesPerCluster;
  /* 0x0030 */ unsigned long BytesPerFileRecordSegment;
  /* 0x0034 */ unsigned long ClustersPerFileRecordSegment;
  /* 0x0038 */ union _LARGE_INTEGER MftValidDataLength;
  /* 0x0040 */ union _LARGE_INTEGER MftStartLcn;
  /* 0x0048 */ union _LARGE_INTEGER Mft2StartLcn;
  /* 0x0050 */ union _LARGE_INTEGER MftZoneStart;
  /* 0x0058 */ union _LARGE_INTEGER MftZoneEnd;
}; /* size: 0x0060 */

typedef struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA
{
  /* 0x0000 */ struct _PROCESSOR_PROFILE_CONTROL_AREA* ProcessorProfileControlArea;
  /* 0x0008 */ unsigned char Allocate;
  /* 0x0009 */ char __PADDING__[7];
} SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA, *PSYSTEM_PROCESSOR_PROFILE_CONTROL_AREA; /* size: 0x0010 */

typedef struct _SCONTEXT_QUEUE
{
  /* 0x0000 */ unsigned long NumberOfObjects;
  /* 0x0004 */ long Padding_1548;
  /* 0x0008 */ struct _NDR_SCONTEXT** ArrayOfObjects;
} SCONTEXT_QUEUE, *PSCONTEXT_QUEUE; /* size: 0x0010 */

typedef struct _CERT_ACCESS_DESCRIPTION
{
  /* 0x0000 */ char* pszAccessMethod;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY AccessLocation;
} CERT_ACCESS_DESCRIPTION, *PCERT_ACCESS_DESCRIPTION; /* size: 0x0020 */

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<2>
{
} ENUM_FLAG_INTEGER_FOR_SIZE<2>, *PENUM_FLAG_INTEGER_FOR_SIZE<2>; /* size: 0x0001 */

typedef struct _PROCESS_WAKE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NotificationChannel;
  /* 0x0008 */ unsigned long WakeCounters[7];
  /* 0x0024 */ struct _JOBOBJECT_WAKE_FILTER WakeFilter;
  /* 0x002c */ long __PADDING__[1];
} PROCESS_WAKE_INFORMATION, *PPROCESS_WAKE_INFORMATION; /* size: 0x0030 */

typedef struct _VM_COUNTERS
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_1549;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
} VM_COUNTERS, *PVM_COUNTERS; /* size: 0x0058 */

typedef struct _TOKEN_OWNER
{
  /* 0x0000 */ void* Owner;
} TOKEN_OWNER, *PTOKEN_OWNER; /* size: 0x0008 */

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE
{
  /* 0x0000 */ union _LARGE_INTEGER ActivationTime;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ButtonInstanceID;
} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE; /* size: 0x0010 */

typedef struct _SYSDBG_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0004 */ long Padding_1550;
  /* 0x0008 */ unsigned __int64 Data;
} SYSDBG_MSR, *PSYSDBG_MSR; /* size: 0x0010 */

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA
{
  /* 0x0000 */ struct HKEY__* hKey;
  /* 0x0008 */ wchar_t* pwszStoreDirectory;
} CERT_REGISTRY_STORE_ROAMING_PARA, *PCERT_REGISTRY_STORE_ROAMING_PARA; /* size: 0x0010 */

struct _TPP_THREAD_DATA_CALLBACK;

typedef struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInterface;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned char Enabled;
  /* 0x0015 */ char __PADDING__[3];
} PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED, *PPLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED; /* size: 0x0018 */

typedef struct _RTL_DISK_WRITE_CONSTRAINT_INFO
{
  /* 0x0000 */ enum RTL_DISK_WRITE_CONSTRAINT_POLICY Policy;
} RTL_DISK_WRITE_CONSTRAINT_INFO, *PRTL_DISK_WRITE_CONSTRAINT_INFO; /* size: 0x0004 */

typedef struct _SYSTEM_ROOT_SILO_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfSilos;
  /* 0x0004 */ unsigned long SiloIdList[1];
} SYSTEM_ROOT_SILO_INFORMATION, *PSYSTEM_ROOT_SILO_INFORMATION; /* size: 0x0008 */

struct IGetCatalogObject
{
}; /* size: 0x0008 */

struct ISCMProcessControl
{
}; /* size: 0x0008 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ long Padding_1551;
  /* 0x0010 */ unsigned char* NetworkAddress;
  /* 0x0018 */ unsigned char* StringEndpoint;
  union
  {
    /* 0x0020 */ unsigned char* Reserved;
  } /* size: 0x0008 */ u1;
  /* 0x0028 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_A, *PRPC_BINDING_HANDLE_TEMPLATE_V1_A; /* size: 0x0038 */

typedef struct _OSVERSIONINFOEXA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA; /* size: 0x009c */

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO
{
  /* 0x0000 */ int fCA;
  /* 0x0004 */ int fPathLenConstraint;
  /* 0x0008 */ unsigned long dwPathLenConstraint;
} CERT_BASIC_CONSTRAINTS2_INFO, *PCERT_BASIC_CONSTRAINTS2_INFO; /* size: 0x000c */

struct tagOXID_INFO
{
  /* 0x0000 */ unsigned long dwTid;
  /* 0x0004 */ unsigned long dwPid;
  /* 0x0008 */ unsigned long dwAuthnHint;
  /* 0x000c */ struct tagCOMVERSION version;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long Padding_1552;
  /* 0x0028 */ struct tagDUALSTRINGARRAY* psa;
  /* 0x0030 */ struct _GUID guidProcessIdentifier;
}; /* size: 0x0040 */

typedef struct _POWER_IDLE_RESILIENCY
{
  /* 0x0000 */ unsigned long CoalescingTimeout;
  /* 0x0004 */ unsigned long IdleResiliencyPeriod;
} POWER_IDLE_RESILIENCY, *PPOWER_IDLE_RESILIENCY; /* size: 0x0008 */

typedef struct _SERVICE_TRIGGER_INFO
{
  /* 0x0000 */ unsigned long cTriggers;
  /* 0x0004 */ long Padding_1553;
  /* 0x0008 */ struct _SERVICE_TRIGGER* pTriggers;
  /* 0x0010 */ unsigned char* pReserved;
} SERVICE_TRIGGER_INFO, *PSERVICE_TRIGGER_INFO; /* size: 0x0018 */

typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1554;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0018 */ char* szCurveOid;
  /* 0x0020 */ struct _CRYPT_BIT_BLOB PublicKey;
} CRYPT_ECC_PRIVATE_KEY_INFO, *PCRYPT_ECC_PRIVATE_KEY_INFO; /* size: 0x0038 */

typedef struct _FILE_GET_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID Sid;
} FILE_GET_QUOTA_INFORMATION, *PFILE_GET_QUOTA_INFORMATION; /* size: 0x0014 */

typedef struct _ALPC_HANDLE_ATTR
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved0 : 16; /* bit position: 0 */
      /* 0x0000 */ unsigned long SameAccess : 1; /* bit position: 16 */
      /* 0x0000 */ unsigned long SameAttributes : 1; /* bit position: 17 */
      /* 0x0000 */ unsigned long Indirect : 1; /* bit position: 18 */
      /* 0x0000 */ unsigned long Inherit : 1; /* bit position: 19 */
      /* 0x0000 */ unsigned long Reserved1 : 12; /* bit position: 20 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1555;
  union
  {
    /* 0x0008 */ void* Handle;
    /* 0x0008 */ struct _ALPC_HANDLE_ATTR32* HandleAttrArray;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ unsigned long ObjectType;
    /* 0x0010 */ unsigned long HandleCount;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0014 */ unsigned long DesiredAccess;
    /* 0x0014 */ unsigned long GrantedAccess;
  }; /* size: 0x0004 */
} ALPC_HANDLE_ATTR, *PALPC_HANDLE_ATTR; /* size: 0x0018 */

typedef struct _RPC_PROTSEQ_VECTORA
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ long Padding_1556;
  /* 0x0008 */ unsigned char* Protseq[1];
} RPC_PROTSEQ_VECTORA, *PRPC_PROTSEQ_VECTORA; /* size: 0x0010 */

struct PPM_WMI_PERF_STATES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_1557;
  /* 0x0028 */ unsigned __int64 TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

typedef struct _GET_FILTER_FILE_IDENTIFIER_INPUT
{
  /* 0x0000 */ unsigned short AltitudeLength;
  /* 0x0002 */ wchar_t Altitude[1];
} GET_FILTER_FILE_IDENTIFIER_INPUT, *PGET_FILTER_FILE_IDENTIFIER_INPUT; /* size: 0x0004 */

typedef struct _TOKEN_SID_INFORMATION
{
  /* 0x0000 */ void* Sid;
} TOKEN_SID_INFORMATION, *PTOKEN_SID_INFORMATION; /* size: 0x0008 */

typedef struct _ALPC_MESSAGE_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long Index;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Handle;
  /* 0x000c */ unsigned long ObjectType;
  /* 0x0010 */ unsigned long GrantedAccess;
} ALPC_MESSAGE_HANDLE_INFORMATION, *PALPC_MESSAGE_HANDLE_INFORMATION; /* size: 0x0014 */

typedef struct _CRYPT_SMART_CARD_ROOT_INFO
{
  /* 0x0000 */ unsigned char rgbCardID[16];
  /* 0x0010 */ struct _ROOT_INFO_LUID luid;
} CRYPT_SMART_CARD_ROOT_INFO, *PCRYPT_SMART_CARD_ROOT_INFO; /* size: 0x0018 */

typedef struct _IMAGE_ENCLAVE_CONFIG64
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long MinimumRequiredConfigSize;
  /* 0x0008 */ unsigned long PolicyFlags;
  /* 0x000c */ unsigned long NumberOfImports;
  /* 0x0010 */ unsigned long ImportList;
  /* 0x0014 */ unsigned long ImportEntrySize;
  /* 0x0018 */ unsigned char FamilyID[16];
  /* 0x0028 */ unsigned char ImageID[16];
  /* 0x0038 */ unsigned long ImageVersion;
  /* 0x003c */ unsigned long SecurityVersion;
  /* 0x0040 */ unsigned __int64 EnclaveSize;
  /* 0x0048 */ unsigned long NumberOfThreads;
  /* 0x004c */ unsigned long EnclaveFlags;
} IMAGE_ENCLAVE_CONFIG64, *PIMAGE_ENCLAVE_CONFIG64; /* size: 0x0050 */

struct tagCANDIDATEFORM
{
  /* 0x0000 */ unsigned long dwIndex;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ struct tagPOINT ptCurrentPos;
  /* 0x0010 */ struct tagRECT rcArea;
}; /* size: 0x0020 */

typedef struct _FILE_NETWORK_OPEN_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ unsigned long FileAttributes;
  /* 0x0034 */ long __PADDING__[1];
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION; /* size: 0x0038 */

typedef struct _IMAGE_LOAD_CONFIG_DIRECTORY32
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned long DeCommitFreeBlockThreshold;
  /* 0x001c */ unsigned long DeCommitTotalFreeThreshold;
  /* 0x0020 */ unsigned long LockPrefixTable;
  /* 0x0024 */ unsigned long MaximumAllocationSize;
  /* 0x0028 */ unsigned long VirtualMemoryThreshold;
  /* 0x002c */ unsigned long ProcessHeapFlags;
  /* 0x0030 */ unsigned long ProcessAffinityMask;
  /* 0x0034 */ unsigned short CSDVersion;
  /* 0x0036 */ unsigned short DependentLoadFlags;
  /* 0x0038 */ unsigned long EditList;
  /* 0x003c */ unsigned long SecurityCookie;
  /* 0x0040 */ unsigned long SEHandlerTable;
  /* 0x0044 */ unsigned long SEHandlerCount;
  /* 0x0048 */ unsigned long GuardCFCheckFunctionPointer;
  /* 0x004c */ unsigned long GuardCFDispatchFunctionPointer;
  /* 0x0050 */ unsigned long GuardCFFunctionTable;
  /* 0x0054 */ unsigned long GuardCFFunctionCount;
  /* 0x0058 */ unsigned long GuardFlags;
  /* 0x005c */ struct _IMAGE_LOAD_CONFIG_CODE_INTEGRITY CodeIntegrity;
  /* 0x0068 */ unsigned long GuardAddressTakenIatEntryTable;
  /* 0x006c */ unsigned long GuardAddressTakenIatEntryCount;
  /* 0x0070 */ unsigned long GuardLongJumpTargetTable;
  /* 0x0074 */ unsigned long GuardLongJumpTargetCount;
  /* 0x0078 */ unsigned long DynamicValueRelocTable;
  /* 0x007c */ unsigned long CHPEMetadataPointer;
  /* 0x0080 */ unsigned long GuardRFFailureRoutine;
  /* 0x0084 */ unsigned long GuardRFFailureRoutineFunctionPointer;
  /* 0x0088 */ unsigned long DynamicValueRelocTableOffset;
  /* 0x008c */ unsigned short DynamicValueRelocTableSection;
  /* 0x008e */ unsigned short Reserved2;
  /* 0x0090 */ unsigned long GuardRFVerifyStackPointerFunctionPointer;
  /* 0x0094 */ unsigned long HotPatchTableOffset;
  /* 0x0098 */ unsigned long Reserved3;
  /* 0x009c */ unsigned long EnclaveConfigurationPointer;
  /* 0x00a0 */ unsigned long VolatileMetadataPointer;
  /* 0x00a4 */ unsigned long GuardEHContinuationTable;
  /* 0x00a8 */ unsigned long GuardEHContinuationCount;
  /* 0x00ac */ unsigned long GuardXFGCheckFunctionPointer;
  /* 0x00b0 */ unsigned long GuardXFGDispatchFunctionPointer;
  /* 0x00b4 */ unsigned long GuardXFGTableDispatchFunctionPointer;
  /* 0x00b8 */ unsigned long CastGuardOsDeterminedFailureMode;
  /* 0x00bc */ unsigned long GuardMemcpyFunctionPointer;
} IMAGE_LOAD_CONFIG_DIRECTORY32, *PIMAGE_LOAD_CONFIG_DIRECTORY32; /* size: 0x00c0 */

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _CRYPT_PASSWORD_CREDENTIALSA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1558;
  /* 0x0008 */ char* pszUsername;
  /* 0x0010 */ char* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSA, *PCRYPT_PASSWORD_CREDENTIALSA; /* size: 0x0018 */

typedef struct _LDR_RESLOADER_RET
{
  /* 0x0000 */ void* Module;
  /* 0x0008 */ void* DataEntry;
  /* 0x0010 */ void* TargetModule;
} LDR_RESLOADER_RET, *PLDR_RESLOADER_RET; /* size: 0x0018 */

struct tagWNDCLASSA
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ long Padding_1559;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const char* lpszMenuName;
  /* 0x0040 */ const char* lpszClassName;
}; /* size: 0x0048 */

typedef struct _RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
{
  /* 0x0000 */ union _RTL_IMAGE_MITIGATION_POLICY BlockWin32kSystemCalls;
} RTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY, *PRTL_IMAGE_MITIGATION_SYSTEM_CALL_DISABLE_POLICY; /* size: 0x0008 */

struct ISupportErrorInfo
{
}; /* size: 0x0008 */

typedef struct _CM_SONIC_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short DataConfigurationRegister;
  /* 0x0006 */ unsigned char EthernetAddress[8];
} CM_SONIC_DEVICE_DATA, *PCM_SONIC_DEVICE_DATA; /* size: 0x000e */

typedef struct _SYSTEM_SECUREBOOT_INFORMATION
{
  /* 0x0000 */ unsigned char SecureBootEnabled;
  /* 0x0001 */ unsigned char SecureBootCapable;
} SYSTEM_SECUREBOOT_INFORMATION, *PSYSTEM_SECUREBOOT_INFORMATION; /* size: 0x0002 */

struct tagEMRSELECTOBJECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihObject;
}; /* size: 0x000c */

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX
{
  /* 0x0000 */ struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
  /* 0x0010 */ unsigned __int64 FaultingThreadId;
  /* 0x0018 */ unsigned __int64 Flags;
} PROCESS_WS_WATCH_INFORMATION_EX, *PPROCESS_WS_WATCH_INFORMATION_EX; /* size: 0x0020 */

typedef struct _ImageArchitectureEntry
{
  /* 0x0000 */ unsigned long FixupInstRVA;
  /* 0x0004 */ unsigned long NewInst;
} ImageArchitectureEntry, *PImageArchitectureEntry; /* size: 0x0008 */

typedef struct _REG_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ enum _REG_ACTION Action;
  /* 0x0008 */ unsigned long KeyLength;
  /* 0x000c */ wchar_t Key[1];
  /* 0x000e */ char __PADDING__[2];
} REG_NOTIFY_INFORMATION, *PREG_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_MAILSLOT_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long ReadDataAvailable;
  /* 0x0004 */ unsigned long NumberOfMessages;
  /* 0x0008 */ unsigned long MessageLength;
} FILE_MAILSLOT_PEEK_BUFFER, *PFILE_MAILSLOT_PEEK_BUFFER; /* size: 0x000c */

typedef struct _IO_SESSION_CONNECT_INFO
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned char LocalSession;
  /* 0x0005 */ char __PADDING__[3];
} IO_SESSION_CONNECT_INFO, *PIO_SESSION_CONNECT_INFO; /* size: 0x0008 */

typedef struct _PROV_ENUMALGS_EX
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwDefaultLen;
  /* 0x0008 */ unsigned long dwMinLen;
  /* 0x000c */ unsigned long dwMaxLen;
  /* 0x0010 */ unsigned long dwProtocols;
  /* 0x0014 */ unsigned long dwNameLen;
  /* 0x0018 */ char szName[20];
  /* 0x002c */ unsigned long dwLongNameLen;
  /* 0x0030 */ char szLongName[40];
} PROV_ENUMALGS_EX, *PPROV_ENUMALGS_EX; /* size: 0x0058 */

typedef struct _PROCESS_MITIGATION_SEHOP_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableSehop : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ReservedFlags : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_SEHOP_POLICY, *PPROCESS_MITIGATION_SEHOP_POLICY; /* size: 0x0004 */

typedef struct _RTL_USER_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1560;
  /* 0x0008 */ void* Process;
  /* 0x0010 */ void* Thread;
  /* 0x0018 */ struct _CLIENT_ID ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION ImageInformation;
} RTL_USER_PROCESS_INFORMATION, *PRTL_USER_PROCESS_INFORMATION; /* size: 0x0068 */

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION
{
  /* 0x0000 */ char FileSystem[9];
} FILE_SYSTEM_RECOGNITION_INFORMATION, *PFILE_SYSTEM_RECOGNITION_INFORMATION; /* size: 0x0009 */

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER
{
  /* 0x0000 */ unsigned char CloseDisc;
} FILE_MAKE_COMPATIBLE_BUFFER, *PFILE_MAKE_COMPATIBLE_BUFFER; /* size: 0x0001 */

typedef struct _APPCATEGORYINFOLIST
{
  /* 0x0000 */ unsigned long cCategory;
  /* 0x0004 */ long Padding_1561;
  /* 0x0008 */ struct _APPCATEGORYINFO* pCategoryInfo;
} APPCATEGORYINFOLIST, *PAPPCATEGORYINFOLIST; /* size: 0x0010 */

typedef struct _FILE_IO_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* KeyContext;
  /* 0x0008 */ void* ApcContext;
  /* 0x0010 */ struct _IO_STATUS_BLOCK IoStatusBlock;
} FILE_IO_COMPLETION_INFORMATION, *PFILE_IO_COMPLETION_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_DIF_VOLATILE_INFORMATION
{
  /* 0x0000 */ unsigned long RuleClasses[2];
  /* 0x0008 */ unsigned long VerifierOption;
  /* 0x000c */ unsigned long TriageContext;
} SYSTEM_DIF_VOLATILE_INFORMATION, *PSYSTEM_DIF_VOLATILE_INFORMATION; /* size: 0x0010 */

struct tagEMRPIXELFORMAT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagPIXELFORMATDESCRIPTOR pfd;
}; /* size: 0x0030 */

typedef struct _SYSTEM_PHYSICAL_MEMORY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalPhysicalBytes;
  /* 0x0008 */ unsigned __int64 LowestPhysicalAddress;
  /* 0x0010 */ unsigned __int64 HighestPhysicalAddress;
} SYSTEM_PHYSICAL_MEMORY_INFORMATION, *PSYSTEM_PHYSICAL_MEMORY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER
{
  /* 0x0000 */ unsigned char Disable;
} FILE_SET_DEFECT_MGMT_BUFFER, *PFILE_SET_DEFECT_MGMT_BUFFER; /* size: 0x0001 */

typedef struct _FILE_KNOWN_FOLDER_INFORMATION
{
  /* 0x0000 */ enum _FILE_KNOWN_FOLDER_TYPE Type;
} FILE_KNOWN_FOLDER_INFORMATION, *PFILE_KNOWN_FOLDER_INFORMATION; /* size: 0x0004 */

struct SChannelHookCallInfo
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ struct _GUID uCausality;
  /* 0x0024 */ unsigned long dwServerPid;
  /* 0x0028 */ unsigned long iMethod;
  /* 0x002c */ long Padding_1562;
  /* 0x0030 */ void* pObject;
}; /* size: 0x0038 */

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
} SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION, *PSYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION; /* size: 0x0004 */

typedef struct _NETWORK_APP_INSTANCE_EA
{
  /* 0x0000 */ struct _GUID AppInstanceID;
  /* 0x0010 */ unsigned long CsvFlags;
} NETWORK_APP_INSTANCE_EA, *PNETWORK_APP_INSTANCE_EA; /* size: 0x0014 */

typedef union _float_val
{
  union
  {
    /* 0x0000 */ unsigned short _Sh[2];
    /* 0x0000 */ float _Val;
  }; /* size: 0x0004 */
} float_val, *Pfloat_val; /* size: 0x0004 */

typedef struct _JOB_SET_ARRAY
{
  /* 0x0000 */ void* JobHandle;
  /* 0x0008 */ unsigned long MemberLevel;
  /* 0x000c */ unsigned long Flags;
} JOB_SET_ARRAY, *PJOB_SET_ARRAY; /* size: 0x0010 */

struct tagSOAP_ACTIVATION_INFO
{
  /* 0x0000 */ int bSoapActivated;
  /* 0x0004 */ long lMode;
  /* 0x0008 */ wchar_t* bstrVRoot;
  /* 0x0010 */ wchar_t* bstrMailTo;
  /* 0x0018 */ wchar_t* bstrAssemblyName;
  /* 0x0020 */ wchar_t* bstrTypeName;
  /* 0x0028 */ wchar_t* bstrBaseUrl;
}; /* size: 0x0030 */

struct CORRELATION_VECTOR
{
  /* 0x0000 */ char Version;
  /* 0x0001 */ char Vector[129];
}; /* size: 0x0082 */

typedef struct _SYSTEM_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} SYSTEM_FLAGS_INFORMATION, *PSYSTEM_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _RTL_UNLOAD_EVENT_TRACE32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long SizeOfImage;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ wchar_t ImageName[32];
  /* 0x0054 */ unsigned long Version[2];
} RTL_UNLOAD_EVENT_TRACE32, *PRTL_UNLOAD_EVENT_TRACE32; /* size: 0x005c */

typedef struct _BOOT_ENTROPY_NT_RESULT
{
  /* 0x0000 */ unsigned long maxEntropySources;
  /* 0x0004 */ long Padding_1563;
  /* 0x0008 */ struct _BOOT_ENTROPY_SOURCE_NT_RESULT EntropySourceResult[10];
  /* 0x0418 */ unsigned char SeedBytesForCng[48];
} BOOT_ENTROPY_NT_RESULT, *PBOOT_ENTROPY_NT_RESULT; /* size: 0x0448 */

typedef struct _LCN_WEAK_REFERENCE_BUFFER
{
  /* 0x0000 */ __int64 Lcn;
  /* 0x0008 */ __int64 LengthInClusters;
  /* 0x0010 */ unsigned long ReferenceCount;
  /* 0x0014 */ unsigned short State;
  /* 0x0016 */ char __PADDING__[2];
} LCN_WEAK_REFERENCE_BUFFER, *PLCN_WEAK_REFERENCE_BUFFER; /* size: 0x0018 */

struct tagRID_DEVICE_INFO_HID
{
  /* 0x0000 */ unsigned long dwVendorId;
  /* 0x0004 */ unsigned long dwProductId;
  /* 0x0008 */ unsigned long dwVersionNumber;
  /* 0x000c */ unsigned short usUsagePage;
  /* 0x000e */ unsigned short usUsage;
}; /* size: 0x0010 */

struct tagRID_DEVICE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwType;
  union
  {
    /* 0x0008 */ struct tagRID_DEVICE_INFO_MOUSE mouse;
    /* 0x0008 */ struct tagRID_DEVICE_INFO_KEYBOARD keyboard;
    struct
    {
      /* 0x0008 */ struct tagRID_DEVICE_INFO_HID hid;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0020 */

typedef struct _WORKER_FACTORY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ union _LARGE_INTEGER RetryTimeout;
  /* 0x0010 */ union _LARGE_INTEGER IdleTimeout;
  /* 0x0018 */ unsigned char Paused;
  /* 0x0019 */ unsigned char TimerSet;
  /* 0x001a */ unsigned char QueuedToExWorker;
  /* 0x001b */ unsigned char MayCreate;
  /* 0x001c */ unsigned char CreateInProgress;
  /* 0x001d */ unsigned char InsertedIntoQueue;
  /* 0x001e */ unsigned char Shutdown;
  /* 0x001f */ char Padding_1564;
  /* 0x0020 */ unsigned long BindingCount;
  /* 0x0024 */ unsigned long ThreadMinimum;
  /* 0x0028 */ unsigned long ThreadMaximum;
  /* 0x002c */ unsigned long PendingWorkerCount;
  /* 0x0030 */ unsigned long WaitingWorkerCount;
  /* 0x0034 */ unsigned long TotalWorkerCount;
  /* 0x0038 */ unsigned long ReleaseCount;
  /* 0x003c */ long Padding_1565;
  /* 0x0040 */ __int64 InfiniteWaitGoal;
  /* 0x0048 */ void* StartRoutine /* function */;
  /* 0x0050 */ void* StartParameter;
  /* 0x0058 */ void* ProcessId;
  /* 0x0060 */ unsigned __int64 StackReserve;
  /* 0x0068 */ unsigned __int64 StackCommit;
  /* 0x0070 */ long LastThreadCreationStatus;
  /* 0x0074 */ long __PADDING__[1];
} WORKER_FACTORY_BASIC_INFORMATION, *PWORKER_FACTORY_BASIC_INFORMATION; /* size: 0x0078 */

struct HFONT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT
{
  /* 0x0000 */ unsigned long Gsiv;
  /* 0x0004 */ unsigned char ControllerInterrupt;
  /* 0x0005 */ unsigned char EdgeInterrupt;
  /* 0x0006 */ unsigned char IsPrimaryInterrupt;
  /* 0x0007 */ char Padding_1566;
  /* 0x0008 */ struct _GROUP_AFFINITY TargetAffinity;
} SYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT, *PSYSTEM_INTERRUPT_STEERING_INFORMATION_INPUT; /* size: 0x0018 */

typedef struct _ENCLAVE_INIT_INFO_VBS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long ThreadCount;
} ENCLAVE_INIT_INFO_VBS, *PENCLAVE_INIT_INFO_VBS; /* size: 0x0008 */

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned long SecurityLimitFlags;
  /* 0x0004 */ long Padding_1567;
  /* 0x0008 */ void* JobToken;
  /* 0x0010 */ struct _TOKEN_GROUPS* SidsToDisable;
  /* 0x0018 */ struct _TOKEN_PRIVILEGES* PrivilegesToDelete;
  /* 0x0020 */ struct _TOKEN_GROUPS* RestrictedSids;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION; /* size: 0x0028 */

struct BREAK_ON_STATUS_BUFFER
{
  /* 0x0000 */ long NtStatus;
  /* 0x0004 */ unsigned long Win32Error;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ char ImageFileName[16];
}; /* size: 0x0020 */

struct USN_JOURNAL_DATA_V2
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
  /* 0x0038 */ unsigned short MinSupportedMajorVersion;
  /* 0x003a */ unsigned short MaxSupportedMajorVersion;
  /* 0x003c */ unsigned long Flags;
  /* 0x0040 */ unsigned __int64 RangeTrackChunkSize;
  /* 0x0048 */ __int64 RangeTrackFileSizeThreshold;
}; /* size: 0x0050 */

struct FIND_BY_SID_DATA
{
  /* 0x0000 */ unsigned long Restart;
  /* 0x0004 */ struct _SID Sid;
}; /* size: 0x0010 */

struct JOBOBJECT_IO_RATE_CONTROL_INFORMATION_NATIVE
{
  /* 0x0000 */ __int64 MaxIops;
  /* 0x0008 */ __int64 MaxBandwidth;
  /* 0x0010 */ __int64 ReservationIops;
  /* 0x0018 */ wchar_t* VolumeName;
  /* 0x0020 */ unsigned long BaseIoSize;
  /* 0x0024 */ enum JOB_OBJECT_IO_RATE_CONTROL_FLAGS ControlFlags;
  /* 0x0028 */ unsigned short VolumeNameLength;
  /* 0x002a */ char __PADDING__[6];
}; /* size: 0x0030 */

typedef struct _MEMORY_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ unsigned long __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ unsigned long __alignment2;
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _THREAD_TEB_INFORMATION
{
  /* 0x0000 */ void* TebInformation;
  /* 0x0008 */ unsigned long TebOffset;
  /* 0x000c */ unsigned long BytesToRead;
} THREAD_TEB_INFORMATION, *PTHREAD_TEB_INFORMATION; /* size: 0x0010 */

struct tagCLEANLOCALSTORAGE
{
  /* 0x0000 */ struct IUnknown* pInterface;
  /* 0x0008 */ void* pStorage;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _X86_CALL_FRAME
{
  /* 0x0000 */ unsigned long ReturnAddress;
  /* 0x0004 */ unsigned long Param1;
  /* 0x0008 */ unsigned long Param2;
  /* 0x000c */ unsigned long CompatibilityArea;
} X86_CALL_FRAME, *PX86_CALL_FRAME; /* size: 0x0010 */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ long Padding_1568;
  /* 0x0008 */ char* pszComment;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ long __PADDING__[1];
} SERVICE_CONTROL_STATUS_REASON_PARAMSA, *PSERVICE_CONTROL_STATUS_REASON_PARAMSA; /* size: 0x0038 */

typedef struct _SERVICE_START_REASON
{
  /* 0x0000 */ unsigned long dwReason;
} SERVICE_START_REASON, *PSERVICE_START_REASON; /* size: 0x0004 */

typedef struct _UMS_SCHEDULER_STARTUP_INFO
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_1569;
  /* 0x0008 */ void* CompletionList;
  /* 0x0010 */ void* SchedulerProc /* function */;
  /* 0x0018 */ void* SchedulerParam;
} UMS_SCHEDULER_STARTUP_INFO, *PUMS_SCHEDULER_STARTUP_INFO; /* size: 0x0020 */

struct ANON_OBJECT_HEADER_V2
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
}; /* size: 0x002c */

typedef struct _VIRTUALIZATION_INSTANCE_INFO_OUTPUT
{
  /* 0x0000 */ struct _GUID VirtualizationInstanceID;
} VIRTUALIZATION_INSTANCE_INFO_OUTPUT, *PVIRTUALIZATION_INSTANCE_INFO_OUTPUT; /* size: 0x0010 */

typedef struct _MANAGE_WRITES_TO_EXECUTABLE_MEMORY
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Version : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned long ProcessEnableWriteExceptions : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned long ThreadAllowWrites : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned long Spare : 22; /* bit position: 10 */
  }; /* bitfield */
  /* 0x0004 */ long Padding_1570;
  /* 0x0008 */ void* KernelWriteToExecutableSignal;
} MANAGE_WRITES_TO_EXECUTABLE_MEMORY, *PMANAGE_WRITES_TO_EXECUTABLE_MEMORY; /* size: 0x0010 */

typedef struct _CRYPT_CREDENTIALS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1571;
  /* 0x0008 */ const char* pszCredentialsOid;
  /* 0x0010 */ void* pvCredentials;
} CRYPT_CREDENTIALS, *PCRYPT_CREDENTIALS; /* size: 0x0018 */

typedef struct _FILE_FS_SECTOR_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long LogicalBytesPerSector;
  /* 0x0004 */ unsigned long PhysicalBytesPerSectorForAtomicity;
  /* 0x0008 */ unsigned long PhysicalBytesPerSectorForPerformance;
  /* 0x000c */ unsigned long FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ByteOffsetForSectorAlignment;
  /* 0x0018 */ unsigned long ByteOffsetForPartitionAlignment;
} FILE_FS_SECTOR_SIZE_INFORMATION, *PFILE_FS_SECTOR_SIZE_INFORMATION; /* size: 0x001c */

typedef struct _ARM64EC_NT_CONTEXT
{
  /* 0x0000 */ unsigned __int64 AMD64_P1Home;
  /* 0x0008 */ unsigned __int64 AMD64_P2Home;
  /* 0x0010 */ unsigned __int64 AMD64_P3Home;
  /* 0x0018 */ unsigned __int64 AMD64_P4Home;
  /* 0x0020 */ unsigned __int64 AMD64_P5Home;
  /* 0x0028 */ unsigned __int64 AMD64_P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long AMD64_MxCsr_copy;
  /* 0x0038 */ unsigned short AMD64_SegCs;
  /* 0x003a */ unsigned short AMD64_SegDs;
  /* 0x003c */ unsigned short AMD64_SegEs;
  /* 0x003e */ unsigned short AMD64_SegFs;
  /* 0x0040 */ unsigned short AMD64_SegGs;
  /* 0x0042 */ unsigned short AMD64_SegSs;
  /* 0x0044 */ unsigned long AMD64_EFlags;
  /* 0x0048 */ unsigned __int64 AMD64_Dr0;
  /* 0x0050 */ unsigned __int64 AMD64_Dr1;
  /* 0x0058 */ unsigned __int64 AMD64_Dr2;
  /* 0x0060 */ unsigned __int64 AMD64_Dr3;
  /* 0x0068 */ unsigned __int64 AMD64_Dr6;
  /* 0x0070 */ unsigned __int64 AMD64_Dr7;
  /* 0x0078 */ unsigned __int64 X8;
  /* 0x0080 */ unsigned __int64 X0;
  /* 0x0088 */ unsigned __int64 X1;
  /* 0x0090 */ unsigned __int64 X27;
  /* 0x0098 */ unsigned __int64 Sp;
  /* 0x00a0 */ unsigned __int64 Fp;
  /* 0x00a8 */ unsigned __int64 X25;
  /* 0x00b0 */ unsigned __int64 X26;
  /* 0x00b8 */ unsigned __int64 X2;
  /* 0x00c0 */ unsigned __int64 X3;
  /* 0x00c8 */ unsigned __int64 X4;
  /* 0x00d0 */ unsigned __int64 X5;
  /* 0x00d8 */ unsigned __int64 X19;
  /* 0x00e0 */ unsigned __int64 X20;
  /* 0x00e8 */ unsigned __int64 X21;
  /* 0x00f0 */ unsigned __int64 X22;
  /* 0x00f8 */ unsigned __int64 Pc;
  /* 0x0100 */ unsigned short AMD64_ControlWord;
  /* 0x0102 */ unsigned short AMD64_StatusWord;
  /* 0x0104 */ unsigned char AMD64_TagWord;
  /* 0x0105 */ unsigned char AMD64_Reserved1;
  /* 0x0106 */ unsigned short AMD64_ErrorOpcode;
  /* 0x0108 */ unsigned long AMD64_ErrorOffset;
  /* 0x010c */ unsigned short AMD64_ErrorSelector;
  /* 0x010e */ unsigned short AMD64_Reserved2;
  /* 0x0110 */ unsigned long AMD64_DataOffset;
  /* 0x0114 */ unsigned short AMD64_DataSelector;
  /* 0x0116 */ unsigned short AMD64_Reserved3;
  /* 0x0118 */ unsigned long AMD64_MxCsr;
  /* 0x011c */ unsigned long AMD64_MxCsr_Mask;
  /* 0x0120 */ unsigned __int64 Lr;
  /* 0x0128 */ unsigned short X16_0;
  /* 0x012a */ unsigned short AMD64_St0_Reserved1;
  /* 0x012c */ unsigned long AMD64_St0_Reserved2;
  /* 0x0130 */ unsigned __int64 X6;
  /* 0x0138 */ unsigned short X16_1;
  /* 0x013a */ unsigned short AMD64_St1_Reserved1;
  /* 0x013c */ unsigned long AMD64_St1_Reserved2;
  /* 0x0140 */ unsigned __int64 X7;
  /* 0x0148 */ unsigned short X16_2;
  /* 0x014a */ unsigned short AMD64_St2_Reserved1;
  /* 0x014c */ unsigned long AMD64_St2_Reserved2;
  /* 0x0150 */ unsigned __int64 X9;
  /* 0x0158 */ unsigned short X16_3;
  /* 0x015a */ unsigned short AMD64_St3_Reserved1;
  /* 0x015c */ unsigned long AMD64_St3_Reserved2;
  /* 0x0160 */ unsigned __int64 X10;
  /* 0x0168 */ unsigned short X17_0;
  /* 0x016a */ unsigned short AMD64_St4_Reserved1;
  /* 0x016c */ unsigned long AMD64_St4_Reserved2;
  /* 0x0170 */ unsigned __int64 X11;
  /* 0x0178 */ unsigned short X17_1;
  /* 0x017a */ unsigned short AMD64_St5_Reserved1;
  /* 0x017c */ unsigned long AMD64_St5_Reserved2;
  /* 0x0180 */ unsigned __int64 X12;
  /* 0x0188 */ unsigned short X17_2;
  /* 0x018a */ unsigned short AMD64_St6_Reserved1;
  /* 0x018c */ unsigned long AMD64_St6_Reserved2;
  /* 0x0190 */ unsigned __int64 X15;
  /* 0x0198 */ unsigned short X17_3;
  /* 0x019a */ unsigned short AMD64_St7_Reserved1;
  /* 0x019c */ unsigned long AMD64_St7_Reserved2;
  /* 0x01a0 */ union _ARM64_NT_NEON128 V[16];
  /* 0x02a0 */ unsigned char AMD64_XSAVE_FORMAT_Reserved4[96];
  /* 0x0300 */ union _ARM64_NT_NEON128 AMD64_VectorRegister[26];
  /* 0x04a0 */ unsigned __int64 AMD64_VectorControl;
  /* 0x04a8 */ unsigned __int64 AMD64_DebugControl;
  /* 0x04b0 */ unsigned __int64 AMD64_LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 AMD64_LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 AMD64_LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 AMD64_LastExceptionFromRip;
} ARM64EC_NT_CONTEXT, *PARM64EC_NT_CONTEXT; /* size: 0x04d0 */

typedef struct _WORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned short asData[1];
  /* 0x0006 */ char __PADDING__[2];
} WORD_BLOB, *PWORD_BLOB; /* size: 0x0008 */

struct tagEMRSETPIXELV
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlPixel;
  /* 0x0010 */ unsigned long crColor;
}; /* size: 0x0014 */

typedef struct _ACCESS_DENIED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _CONSOLE_READCONSOLE_CONTROL
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long nInitialChars;
  /* 0x0008 */ unsigned long dwCtrlWakeupMask;
  /* 0x000c */ unsigned long dwControlKeyState;
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL; /* size: 0x0010 */

typedef struct _QUERY_STORAGE_RESERVE_OUTPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long AreaInfoCount;
  /* 0x0008 */ struct _STORAGE_RESERVE_AREA_INFO AreaInfo[1];
} QUERY_STORAGE_RESERVE_OUTPUT, *PQUERY_STORAGE_RESERVE_OUTPUT; /* size: 0x0020 */

typedef struct _ABC
{
  /* 0x0000 */ int abcA;
  /* 0x0004 */ unsigned int abcB;
  /* 0x0008 */ int abcC;
} ABC, *PABC; /* size: 0x000c */

typedef struct _DEDUP_CHUNK_INFORMATION_HASH32
{
  /* 0x0000 */ unsigned long ChunkFlags;
  /* 0x0004 */ long Padding_1572;
  /* 0x0008 */ __int64 ChunkOffsetInFile;
  /* 0x0010 */ __int64 ChunkSize;
  /* 0x0018 */ unsigned char HashVal[32];
} DEDUP_CHUNK_INFORMATION_HASH32, *PDEDUP_CHUNK_INFORMATION_HASH32; /* size: 0x0038 */

struct tagEMRSETWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
}; /* size: 0x0020 */

typedef struct _tagPROTOCOL_ARGUMENT
{
  /* 0x0000 */ const wchar_t* szMethod;
  /* 0x0008 */ const wchar_t* szTargetUrl;
} tagPROTOCOL_ARGUMENT, *PtagPROTOCOL_ARGUMENT; /* size: 0x0010 */

typedef struct __crt_locale_data_public
{
  /* 0x0000 */ const unsigned short* _locale_pctype;
  /* 0x0008 */ int _locale_mb_cur_max;
  /* 0x000c */ unsigned int _locale_lc_codepage;
} _crt_locale_data_public, *P_crt_locale_data_public; /* size: 0x0010 */

typedef struct _CERT_CHAIN
{
  /* 0x0000 */ unsigned long cCerts;
  /* 0x0004 */ long Padding_1573;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* certs;
  /* 0x0010 */ struct _CRYPT_KEY_PROV_INFO keyLocatorInfo;
} CERT_CHAIN, *PCERT_CHAIN; /* size: 0x0040 */

typedef struct _BCRYPT_DSA_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
  /* 0x0008 */ unsigned char Count[4];
  /* 0x000c */ unsigned char Seed[20];
  /* 0x0020 */ unsigned char q[20];
} BCRYPT_DSA_KEY_BLOB, *PBCRYPT_DSA_KEY_BLOB; /* size: 0x0034 */

typedef struct _DUPLICATE_EXTENTS_DATA_EX32
{
  /* 0x0000 */ unsigned int Size;
  /* 0x0004 */ unsigned int FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileOffset;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileOffset;
  /* 0x0018 */ union _LARGE_INTEGER ByteCount;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ long __PADDING__[1];
} DUPLICATE_EXTENTS_DATA_EX32, *PDUPLICATE_EXTENTS_DATA_EX32; /* size: 0x0028 */

struct tagEMRSTRETCHDIBITS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ long cxDest;
  /* 0x004c */ long cyDest;
}; /* size: 0x0050 */

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION
{
  /* 0x0000 */ unsigned long PoolTag;
  /* 0x0004 */ unsigned long Flags;
} SYSTEM_SPECIAL_POOL_INFORMATION, *PSYSTEM_SPECIAL_POOL_INFORMATION; /* size: 0x0008 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES
{
  /* 0x0000 */ struct _GUID KtmTransaction;
  /* 0x0010 */ unsigned __int64 NumberOfFiles;
  /* 0x0018 */ unsigned __int64 BufferSizeRequired;
  /* 0x0020 */ unsigned __int64 Offset;
} TXFS_LIST_TRANSACTION_LOCKED_FILES, *PTXFS_LIST_TRANSACTION_LOCKED_FILES; /* size: 0x0028 */

struct HWINSTA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _FILE_LINKS_INFORMATION
{
  /* 0x0000 */ unsigned long BytesNeeded;
  /* 0x0004 */ unsigned long EntriesReturned;
  /* 0x0008 */ struct _FILE_LINK_ENTRY_INFORMATION Entry;
} FILE_LINKS_INFORMATION, *PFILE_LINKS_INFORMATION; /* size: 0x0020 */

struct tagMINIMIZEDMETRICS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iWidth;
  /* 0x0008 */ int iHorzGap;
  /* 0x000c */ int iVertGap;
  /* 0x0010 */ int iArrange;
}; /* size: 0x0014 */

struct tagHIGHCONTRASTA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszDefaultScheme;
}; /* size: 0x0010 */

struct tagEMRELLIPSE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
}; /* size: 0x0018 */

typedef union _PROCESS_SYSTEM_RESOURCE_MANAGEMENT
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Foreground : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_SYSTEM_RESOURCE_MANAGEMENT, *PPROCESS_SYSTEM_RESOURCE_MANAGEMENT; /* size: 0x0004 */

typedef struct _KEY_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Wow64Flags;
  /* 0x0004 */ unsigned long KeyFlags;
  /* 0x0008 */ unsigned long ControlFlags;
} KEY_FLAGS_INFORMATION, *PKEY_FLAGS_INFORMATION; /* size: 0x000c */

struct HSYNTHETICPOINTERDEVICE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _KNONVOLATILE_CONTEXT_POINTERS_ARM64
{
  /* 0x0000 */ unsigned __int64* X19;
  /* 0x0008 */ unsigned __int64* X20;
  /* 0x0010 */ unsigned __int64* X21;
  /* 0x0018 */ unsigned __int64* X22;
  /* 0x0020 */ unsigned __int64* X23;
  /* 0x0028 */ unsigned __int64* X24;
  /* 0x0030 */ unsigned __int64* X25;
  /* 0x0038 */ unsigned __int64* X26;
  /* 0x0040 */ unsigned __int64* X27;
  /* 0x0048 */ unsigned __int64* X28;
  /* 0x0050 */ unsigned __int64* Fp;
  /* 0x0058 */ unsigned __int64* Lr;
  /* 0x0060 */ unsigned __int64* D8;
  /* 0x0068 */ unsigned __int64* D9;
  /* 0x0070 */ unsigned __int64* D10;
  /* 0x0078 */ unsigned __int64* D11;
  /* 0x0080 */ unsigned __int64* D12;
  /* 0x0088 */ unsigned __int64* D13;
  /* 0x0090 */ unsigned __int64* D14;
  /* 0x0098 */ unsigned __int64* D15;
} KNONVOLATILE_CONTEXT_POINTERS_ARM64, *PKNONVOLATILE_CONTEXT_POINTERS_ARM64; /* size: 0x00a0 */

typedef struct _THREAD_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} THREAD_CYCLE_TIME_INFORMATION, *PTHREAD_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
} _BCRYPT_KEY_LENGTHS_STRUCT, *P_BCRYPT_KEY_LENGTHS_STRUCT; /* size: 0x000c */

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID ResourceManagerId;
  /* 0x0010 */ unsigned long DescriptionLength;
  /* 0x0014 */ wchar_t Description[1];
  /* 0x0016 */ char __PADDING__[2];
} RESOURCEMANAGER_BASIC_INFORMATION, *PRESOURCEMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _RTL_FEATURE_CONFIGURATION_TABLE
{
  /* 0x0000 */ unsigned long FeatureCount;
  /* 0x0004 */ struct _RTL_FEATURE_CONFIGURATION Features[1];
} RTL_FEATURE_CONFIGURATION_TABLE, *PRTL_FEATURE_CONFIGURATION_TABLE; /* size: 0x0010 */

struct tagGLYPHSET
{
  /* 0x0000 */ unsigned long cbThis;
  /* 0x0004 */ unsigned long flAccel;
  /* 0x0008 */ unsigned long cGlyphsSupported;
  /* 0x000c */ unsigned long cRanges;
  /* 0x0010 */ struct tagWCRANGE ranges[1];
}; /* size: 0x0014 */

typedef struct _ENUM_FLAG_INTEGER_FOR_SIZE<8>
{
} ENUM_FLAG_INTEGER_FOR_SIZE<8>, *PENUM_FLAG_INTEGER_FOR_SIZE<8>; /* size: 0x0001 */

typedef struct _QUERY_SERVICE_CONFIGA
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ long Padding_1574;
  /* 0x0010 */ char* lpBinaryPathName;
  /* 0x0018 */ char* lpLoadOrderGroup;
  /* 0x0020 */ unsigned long dwTagId;
  /* 0x0024 */ long Padding_1575;
  /* 0x0028 */ char* lpDependencies;
  /* 0x0030 */ char* lpServiceStartName;
  /* 0x0038 */ char* lpDisplayName;
} QUERY_SERVICE_CONFIGA, *PQUERY_SERVICE_CONFIGA; /* size: 0x0040 */

struct tagEMRFORMAT
{
  /* 0x0000 */ unsigned long dSignature;
  /* 0x0004 */ unsigned long nVersion;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned long offData;
}; /* size: 0x0010 */

struct PROCESSOR_PERFSTATE_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char MaxThrottle;
  /* 0x0005 */ unsigned char MinThrottle;
  /* 0x0006 */ unsigned char BusyAdjThreshold;
  union
  {
    /* 0x0007 */ unsigned char Spare;
    union
    {
      union
      {
        /* 0x0007 */ unsigned char AsUCHAR;
        struct /* bitfield */
        {
          /* 0x0007 */ unsigned char NoDomainAccounting : 1; /* bit position: 0 */
          /* 0x0007 */ unsigned char IncreasePolicy : 2; /* bit position: 1 */
          /* 0x0007 */ unsigned char DecreasePolicy : 2; /* bit position: 3 */
          /* 0x0007 */ unsigned char Reserved : 3; /* bit position: 5 */
        }; /* bitfield */
      }; /* size: 0x0001 */
    } /* size: 0x0001 */ Flags;
  }; /* size: 0x0001 */
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ unsigned long IncreasePercent;
  /* 0x0018 */ unsigned long DecreasePercent;
}; /* size: 0x001c */

struct tagREGISTERWORDA
{
  /* 0x0000 */ char* lpReading;
  /* 0x0008 */ char* lpWord;
}; /* size: 0x0010 */

typedef struct _CM_INT13_DRIVE_PARAMETER
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ unsigned long MaxCylinders;
  /* 0x0006 */ unsigned short SectorsPerTrack;
  /* 0x0008 */ unsigned short MaxHeads;
  /* 0x000a */ unsigned short NumberDrives;
} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER; /* size: 0x000c */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1576;
  /* 0x0008 */ unsigned short* ServerPrincName;
  /* 0x0010 */ unsigned long AuthnLevel;
  /* 0x0014 */ unsigned long AuthnSvc;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
  /* 0x0020 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_W, *PRPC_BINDING_HANDLE_SECURITY_V1_W; /* size: 0x0028 */

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO
{
  /* 0x0000 */ unsigned long cCertPolicyId;
  /* 0x0004 */ long Padding_1577;
  /* 0x0008 */ struct _CERT_POLICY_ID* rgCertPolicyId;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB RestrictedKeyUsage;
} CERT_KEY_USAGE_RESTRICTION_INFO, *PCERT_KEY_USAGE_RESTRICTION_INFO; /* size: 0x0028 */

struct COPYFILE2_EXTENDED_PARAMETERS_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCopyFlags;
  /* 0x0008 */ int* pfCancel;
  /* 0x0010 */ void* pProgressRoutine /* function */;
  /* 0x0018 */ void* pvCallbackContext;
  /* 0x0020 */ unsigned long dwCopyFlagsV2;
  /* 0x0024 */ unsigned long ioDesiredSize;
  /* 0x0028 */ unsigned long ioDesiredRate;
  /* 0x002c */ long Padding_1578;
  /* 0x0030 */ void* reserved[8];
}; /* size: 0x0070 */

typedef struct _RTL_RETPOLINE_RELOCATION_INDEX
{
  /* 0x0000 */ unsigned short ImportRelocationSize;
  /* 0x0002 */ unsigned short IndirectRelocationSize;
  /* 0x0004 */ unsigned short SwitchJumpRelocationSize;
  /* 0x0006 */ unsigned short StraddleType;
  union
  {
    union
    {
      /* 0x0008 */ struct _IMAGE_IMPORT_CONTROL_TRANSFER_DYNAMIC_RELOCATION Import;
      /* 0x0008 */ struct _IMAGE_INDIR_CONTROL_TRANSFER_DYNAMIC_RELOCATION Indir;
      /* 0x0008 */ struct _IMAGE_SWITCHTABLE_BRANCH_DYNAMIC_RELOCATION SwitchJump;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ StraddleReloc;
} RTL_RETPOLINE_RELOCATION_INDEX, *PRTL_RETPOLINE_RELOCATION_INDEX; /* size: 0x000c */

struct IXMLDOMCharacterData
{
}; /* size: 0x0008 */

struct tagGCP_RESULTSA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1579;
  /* 0x0008 */ char* lpOutString;
  /* 0x0010 */ unsigned int* lpOrder;
  /* 0x0018 */ int* lpDx;
  /* 0x0020 */ int* lpCaretPos;
  /* 0x0028 */ char* lpClass;
  /* 0x0030 */ wchar_t* lpGlyphs;
  /* 0x0038 */ unsigned int nGlyphs;
  /* 0x003c */ int nMaxFit;
}; /* size: 0x0040 */

typedef struct _CERT_PHYSICAL_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1580;
  /* 0x0008 */ char* pszOpenStoreProvider;
  /* 0x0010 */ unsigned long dwOpenEncodingType;
  /* 0x0014 */ unsigned long dwOpenFlags;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB OpenParameters;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ unsigned long dwPriority;
} CERT_PHYSICAL_STORE_INFO, *PCERT_PHYSICAL_STORE_INFO; /* size: 0x0030 */

typedef struct _DUPLICATE_EXTENTS_DATA32
{
  /* 0x0000 */ unsigned int FileHandle;
  /* 0x0004 */ long Padding_1581;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileOffset;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileOffset;
  /* 0x0018 */ union _LARGE_INTEGER ByteCount;
} DUPLICATE_EXTENTS_DATA32, *PDUPLICATE_EXTENTS_DATA32; /* size: 0x0020 */

struct COPYFILE2_EXTENDED_PARAMETERS
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCopyFlags;
  /* 0x0008 */ int* pfCancel;
  /* 0x0010 */ void* pProgressRoutine /* function */;
  /* 0x0018 */ void* pvCallbackContext;
}; /* size: 0x0020 */

typedef struct _AVRF_MEMORY_RANGE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 Size;
} AVRF_MEMORY_RANGE, *PAVRF_MEMORY_RANGE; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorCount;
  /* 0x0004 */ unsigned long Offsets[1];
} SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION; /* size: 0x0008 */

struct CONFIRMSAFETY
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ struct IUnknown* pUnk;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _LDOUBLE
{
  /* 0x0000 */ unsigned char ld[10];
} LDOUBLE, *PLDOUBLE; /* size: 0x000a */

struct wil::details::variable_size<4>
{
}; /* size: 0x0001 */

struct wil::details::variable_size<8>
{
}; /* size: 0x0001 */

struct wil::variadic_logical_or<>
{
}; /* size: 0x0001 */

typedef struct _LCN_WEAK_REFERENCE_CREATE_INPUT_BUFFER
{
  /* 0x0000 */ __int64 Offset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Reserved;
} LCN_WEAK_REFERENCE_CREATE_INPUT_BUFFER, *PLCN_WEAK_REFERENCE_CREATE_INPUT_BUFFER; /* size: 0x0018 */

typedef struct _FILE_LINKS_FULL_ID_INFORMATION
{
  /* 0x0000 */ unsigned long BytesNeeded;
  /* 0x0004 */ unsigned long EntriesReturned;
  /* 0x0008 */ struct _FILE_LINK_ENTRY_FULL_ID_INFORMATION Entry;
} FILE_LINKS_FULL_ID_INFORMATION, *PFILE_LINKS_FULL_ID_INFORMATION; /* size: 0x0024 */

typedef struct _CERT_OR_CRL_BUNDLE
{
  /* 0x0000 */ unsigned long cItem;
  /* 0x0004 */ long Padding_1582;
  /* 0x0008 */ struct _CERT_OR_CRL_BLOB* rgItem;
} CERT_OR_CRL_BUNDLE, *PCERT_OR_CRL_BUNDLE; /* size: 0x0010 */

struct DISK_SPACE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ActualTotalAllocationUnits;
  /* 0x0008 */ unsigned __int64 ActualAvailableAllocationUnits;
  /* 0x0010 */ unsigned __int64 ActualPoolUnavailableAllocationUnits;
  /* 0x0018 */ unsigned __int64 CallerTotalAllocationUnits;
  /* 0x0020 */ unsigned __int64 CallerAvailableAllocationUnits;
  /* 0x0028 */ unsigned __int64 CallerPoolUnavailableAllocationUnits;
  /* 0x0030 */ unsigned __int64 UsedAllocationUnits;
  /* 0x0038 */ unsigned __int64 TotalReservedAllocationUnits;
  /* 0x0040 */ unsigned __int64 VolumeStorageReserveAllocationUnits;
  /* 0x0048 */ unsigned __int64 AvailableCommittedAllocationUnits;
  /* 0x0050 */ unsigned __int64 PoolAvailableAllocationUnits;
  /* 0x0058 */ unsigned long SectorsPerAllocationUnit;
  /* 0x005c */ unsigned long BytesPerSector;
}; /* size: 0x0060 */

typedef struct _MEMORY_REGION_INFORMATION
{
  /* 0x0000 */ void* AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  union
  {
    /* 0x000c */ unsigned long RegionType;
    struct /* bitfield */
    {
      /* 0x000c */ unsigned long Private : 1; /* bit position: 0 */
      /* 0x000c */ unsigned long MappedDataFile : 1; /* bit position: 1 */
      /* 0x000c */ unsigned long MappedImage : 1; /* bit position: 2 */
      /* 0x000c */ unsigned long MappedPageFile : 1; /* bit position: 3 */
      /* 0x000c */ unsigned long MappedPhysical : 1; /* bit position: 4 */
      /* 0x000c */ unsigned long DirectMapped : 1; /* bit position: 5 */
      /* 0x000c */ unsigned long SoftwareEnclave : 1; /* bit position: 6 */
      /* 0x000c */ unsigned long PageSize64K : 1; /* bit position: 7 */
      /* 0x000c */ unsigned long PlaceholderReservation : 1; /* bit position: 8 */
      /* 0x000c */ unsigned long MappedAwe : 1; /* bit position: 9 */
      /* 0x000c */ unsigned long MappedWriteWatch : 1; /* bit position: 10 */
      /* 0x000c */ unsigned long PageSizeLarge : 1; /* bit position: 11 */
      /* 0x000c */ unsigned long PageSizeHuge : 1; /* bit position: 12 */
      /* 0x000c */ unsigned long Reserved : 19; /* bit position: 13 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0010 */ unsigned __int64 RegionSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
  /* 0x0020 */ unsigned __int64 PartitionId;
  /* 0x0028 */ unsigned __int64 NodePreference;
} MEMORY_REGION_INFORMATION, *PMEMORY_REGION_INFORMATION; /* size: 0x0030 */

struct DPI_AWARENESS_CONTEXT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class HashVoidPtr
{
}; /* size: 0x0001 */

typedef struct __MIDL_ICallFrame_0004
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ char Padding_1583[3];
  /* 0x0004 */ unsigned long dwDestContext;
  /* 0x0008 */ void* pvDestContext;
  /* 0x0010 */ struct IUnknown* punkReserved;
  /* 0x0018 */ struct _GUID guidTransferSyntax;
} _MIDL_ICallFrame_0004, *P_MIDL_ICallFrame_0004; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;

struct NDR_PROC_HEADER_EXTS64
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
  /* 0x0008 */ unsigned short FloatArgMask;
}; /* size: 0x000a */

typedef struct _timespec64
{
  /* 0x0000 */ __int64 tv_sec;
  /* 0x0008 */ long tv_nsec;
  /* 0x000c */ long __PADDING__[1];
} timespec64, *Ptimespec64; /* size: 0x0010 */

struct std::_Atomic_integral<long,4>
{
}; /* size: 0x0004 */

typedef struct _TIMEOUT_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwConnectTimeout;
  /* 0x0008 */ unsigned long dwDataTimeout;
} TIMEOUT_INFO, *PTIMEOUT_INFO; /* size: 0x000c */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol,ISearchProtocol>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IOleInPlaceObjectWindowless>,InterfaceList<AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

class AdHocInterceptorForwarders<IOleInPlaceObjectWindowless,IOleInPlaceObjectWindowless>::OnWindowMessage::__l2::<lambda_cebf49c479c4b51a7dc8538f3542eaf8>
{
  /* 0x0000 */ unsigned int msg;
  /* 0x0004 */ long Padding_1584;
  /* 0x0008 */ unsigned __int64 wParam;
  /* 0x0010 */ __int64 lParam;
  /* 0x0018 */ __int64* plResult;
}; /* size: 0x0020 */

struct AggregatableDetails::DeriveIUnknownIfEmpty<InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersistPropertyBag>,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<AdHocInterceptorForwarders<IPersistPropertyBag,IPersistPropertyBag>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

class AdHocInterceptorForwarders<IPersist,IPersistPropertyBag>::GetClassID::__l2::<lambda_121ff239fc219aa2df927c67d0376548>
{
  /* 0x0000 */ struct _GUID* pClassID;
}; /* size: 0x0008 */

struct DeriveInterfaceDelegators<CAggregatable<AdHocInterceptor<IOleWindow>,InterfaceList<AdHocInterceptorForwarders<IOleWindow,IOleWindow>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >::CInner,InterfaceList<> >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IPersist>,InterfaceList<AdHocInterceptorForwarders<IPersist,IPersist>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> > >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<IElementBehavior>,InterfaceList<AdHocInterceptorForwarders<IElementBehavior,IElementBehavior>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

struct SimpleQIHelper<CAggregatable<AdHocInterceptor<ISearchProtocol2>,InterfaceList<AdHocInterceptorForwarders<ISearchProtocol2,ISearchProtocol2>,Microsoft::WRL::ChainInterfaces<ICallInterceptor,ICallIndirect,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil> >,InterfaceList<> >,InterfaceList<> >
{
}; /* size: 0x0001 */

class CStmBuf
{
  /* 0x0000 */ struct IStream* m_pStm;
  /* 0x0008 */ unsigned char m_aBuffer[256];
  /* 0x0108 */ unsigned char* m_pBuffer;
  /* 0x0110 */ unsigned long m_cBuffer;
}; /* size: 0x0118 */

class CDAHolder
{
  /* 0x0000 */ long Padding_1585[8];
  /* 0x0020 */ unsigned long m_dwConnection;
  /* 0x0024 */ int m_iSize;
  /* 0x0028 */ struct tagSTATDATA* m_pSD;
}; /* size: 0x0030 */

class CFrameFilter
{
  /* 0x0000 */ long Padding_1586[6];
  /* 0x0018 */ struct HWND__* m_hwndObject;
  /* 0x0020 */ struct HWND__* m_hwndFrame;
  /* 0x0028 */ struct IOleInPlaceFrame* m_lpFrame;
  /* 0x0030 */ struct IOleInPlaceActiveObject* m_lpObject;
  /* 0x0038 */ void* m_lpfnPrevWndProc /* function */;
  /* 0x0040 */ int m_fObjectMenu;
  /* 0x0044 */ int m_fCurItemPopup;
  /* 0x0048 */ int m_fInMenuMode;
  /* 0x004c */ int m_fDiscardWmCommand;
  /* 0x0050 */ int m_fGotMenuCloseEvent;
  /* 0x0054 */ int m_fRemovedWndProc;
  /* 0x0058 */ unsigned int m_cmdId;
  /* 0x005c */ long Padding_1587;
  /* 0x0060 */ unsigned __int64 m_uCurItemID;
  /* 0x0068 */ struct tagOLEMENU* m_lpOleMenu;
  /* 0x0070 */ struct HMENU__* m_hmenuCombined;
  /* 0x0078 */ struct HWND__* m_hwndFocusOnEnter;
  /* 0x0080 */ int m_cAltTab;
}; /* size: 0x0088 */

struct tagWIN16METAFILEPICT
{
  /* 0x0000 */ short mm;
  /* 0x0002 */ short xExt;
  /* 0x0004 */ short yExt;
  /* 0x0006 */ unsigned short hMF;
}; /* size: 0x0008 */

class CProperty
{
  /* 0x0000 */ unsigned long m_dwPropID;
  /* 0x0004 */ unsigned long m_dwType;
  /* 0x0008 */ void* m_pValue;
}; /* size: 0x0010 */

struct FCR
{
  /* 0x0000 */ struct FR frRequest;
  /* 0x0058 */ struct FR frActual;
  /* 0x00b0 */ unsigned long cRefs;
  /* 0x00b4 */ long Padding_1588;
  /* 0x00b8 */ struct HFONT__* hfont;
  /* 0x00c0 */ struct tagTEXTMETRICW tm;
  /* 0x00fc */ long __PADDING__[1];
}; /* size: 0x0100 */

class CPropertySet
{
  /* 0x0000 */ struct tagPROPHEADER m_PH;
  /* 0x001c */ long Padding_1589;
  /* 0x0020 */ class CArray<CPropertySection *,CPropertySection * &> m_SectionList;
}; /* size: 0x0038 */

struct tagFORMATIDOFFSET
{
  /* 0x0000 */ struct _GUID formatID;
  /* 0x0010 */ unsigned long dwOffset;
}; /* size: 0x0014 */

class GetCastMethod<unsigned long,unsigned __int64>
{
}; /* size: 0x0001 */

typedef union __m128
{
  union
  {
    /* 0x0000 */ float m128_f32[4];
    /* 0x0000 */ unsigned __int64 m128_u64[2];
    /* 0x0000 */ char m128_i8[16];
    /* 0x0000 */ short m128_i16[8];
    /* 0x0000 */ int m128_i32[4];
    /* 0x0000 */ __int64 m128_i64[2];
    /* 0x0000 */ unsigned char m128_u8[16];
    /* 0x0000 */ unsigned short m128_u16[8];
    /* 0x0000 */ unsigned int m128_u32[4];
  }; /* size: 0x0010 */
} _m128, *P_m128; /* size: 0x0010 */

struct wil::details::close_invoke_helper<1,void (__cdecl*)(_TOKEN_LINKED_TOKEN *) noexcept,&wil::details::CloseTokenLinkedToken,_TOKEN_LINKED_TOKEN *>
{
}; /* size: 0x0001 */

struct GetTypeValueImpl<long,enum LoadOrFreeWhy,unsigned long>
{
}; /* size: 0x0001 */

struct CFont::Save::__l2::FONTDATA
{
  /* 0x0000 */ unsigned char bVer;
  /* 0x0001 */ short sCharset;
  /* 0x0003 */ unsigned char bFlags;
  /* 0x0004 */ short sWeight;
  /* 0x0006 */ unsigned long ulHeight;
  /* 0x000a */ unsigned char bFaceLen;
}; /* size: 0x000b */

/*
?<lambda_invoker_cdecl>@<lambda_152aa9d2a3a0648fa2fa7fcef514b376>@@CA@PEAX@Z
?<lambda_invoker_cdecl>@<lambda_1ad7ecfab602a777ecf020873216a663>@@CA@PEAX@Z
?<lambda_invoker_cdecl>@<lambda_276c39db18535f17382b3e205d26374d>@@CA@XZ
?<lambda_invoker_cdecl>@<lambda_5035b992506f4af81a770c5842624510>@@CA@PEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?<lambda_invoker_cdecl>@<lambda_56826768d7de29d088611d7a51e75d86>@@CA@XZ
?<lambda_invoker_cdecl>@<lambda_9f3a313a80b1998716fcb00bc3974d23>@@CA@XZ
?<lambda_invoker_cdecl>@<lambda_d51448ba32f8ef42e59400edd4566183>@@CA@PEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?<lambda_invoker_cdecl>@<lambda_de72991bb9618b65cb2927d0cc7a4ae8>@@CA@XZ
?<lambda_invoker_cdecl>@<lambda_f8a79a44bba2ee3470b25df359f31864>@@CA@XZ
??$?0PEAUIInspectable@@@?$AutoValue@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@Internal@Collections@Foundation@Windows@@@XWinRT@@QEAA@AEBQEAUIInspectable@@PEAJ@Z
??$?8UVerbList@@U?$function_deleter@P6AXPEAX@Z$1?PrivMemFree@@YAX0@Z@wil@@@wistd@@YA_NAEBV?$unique_ptr@UVerbList@@U?$function_deleter@P6AXPEAX@Z$1?PrivMemFree@@YAX0@Z@wil@@@0@$$T@Z
??$?8V?$unique_storage@U?$resource_policy@PEAUHDC__@@P6AXUwindow_dc@wil@@@_E$1?close@23@SAX0@ZU?$integral_constant@_K$0A@@wistd@@U23@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@YA_NAEBV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHDC__@@P6AXUwindow_dc@wil@@@_E$1?close@23@SAX0@ZU?$integral_constant@_K$0A@@wistd@@U23@PEAU1@$0A@$$T@details@wil@@@details@wil@@@0@$$T@Z
??$?DJ@?$SafeInt@JV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@J@Z
??$?DK@?$SafeInt@KV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@K@Z
??$?HJ@?$SafeInt@JV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@J@Z
??$?HK@?$SafeInt@KV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@K@Z
??$ActivateInstance@UIClipboardBrokerProvider@DataTransfer@Internal@ApplicationModel@Windows@@@Foundation@Windows@@YAJPEAUHSTRING__@@PEAPEAUIClipboardBrokerProvider@DataTransfer@Internal@ApplicationModel@1@@Z
??$AdditionThrow@V?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@?$AdditionHelper@JJ$05@@SAXAEBJ0AEAJ@Z
??$AdditionThrow@V?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@?$AdditionHelper@KK$00@@SAXAEBK0AEAK@Z
??$As@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@?$ComPtr@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@WRL@Microsoft@@@Details@12@@Z
??$As@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@?$ComPtr@V?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@@Details@12@@Z
??$As@UIDragDropContainerProxy@@@?$ComPtr@UIDropTarget@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIDragDropContainerProxy@@@WRL@Microsoft@@@Details@12@@Z
??$As@UIUnwrappableDataObject@@@?$ComPtr@UIDataObject@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIUnwrappableDataObject@@@WRL@Microsoft@@@Details@12@@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$00@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$00@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$00@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$00@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@123@AEBU_GUID@@PEAPEAX@Z
??$AssignEndpointObject@VCInterfaceFromWindowProp@@@@YAJPEAUHWND__@@AEBU_GUID@@PEAVCInterfaceFromWindowProp@@H@Z
??$AssignEndpointObject@VCPrivDragDrop@@@@YAJPEAUHWND__@@AEBU_GUID@@PEAVCPrivDragDrop@@H@Z
??$ComTraceMessageT@PEAUHWND__@@IK@@YAXPEBD0HW4TraceLevel@@PEBGPEAUHWND__@@IK@Z
??$ComTraceMessageT@PEAU_GUID@@KK@@YAXPEBD0HW4TraceLevel@@PEBGPEAU_GUID@@KK@Z
??$ComTraceMessageT@PEAVCFilteredRunningObjectTable@@J@@YAXPEBD0HW4TraceLevel@@PEBGPEAVCFilteredRunningObjectTable@@J@Z
??$ComTraceMessageT@PEAVCRunningObjectTable@@J@@YAXPEBD0HW4TraceLevel@@PEBGPEAVCRunningObjectTable@@J@Z
??$ComTraceMessageT@PEBGPEAG@@YAXPEBD0HW4TraceLevel@@PEBG2PEAG@Z
??$ComTraceMessageT@PEBGPEAGJ@@YAXPEBD0HW4TraceLevel@@PEBG2PEAGJ@Z
??$ComTraceMessageT@PEBGW4LoadOrFreeWhy@@K@@YAXPEBD0HW4TraceLevel@@PEBG2W4LoadOrFreeWhy@@K@Z
??$ComTraceMessageT@PEBGW4LoadOrFreeWhy@@PEAUHINSTANCE__@@@@YAXPEBD0HW4TraceLevel@@PEBG2W4LoadOrFreeWhy@@PEAUHINSTANCE__@@@Z
??$Construct@UIInspectable@@@InterfaceLifetimeTraits@XWinRT@@SAJPEAPEAUIInspectable@@PEAU2@@Z
??$CopyLocal@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJV?$ComPtrRef@V?$ComPtr@UIDataObject@@@WRL@Microsoft@@@Details@WRL@Microsoft@@@Z
??$Destroy@UIInspectable@@@InterfaceLifetimeTraits@XWinRT@@SAXPEAPEAUIInspectable@@@Z
??$Initialize@UIClipboardBroker@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJPEAUIClipboardBroker@@@Z
??$Initialize@UIClipboardBrokerInternal@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJAEBV?$ComPtr@UIClipboardBrokerInternal@@@WRL@Microsoft@@@Z
??$Initialize@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJAEBV?$ComPtr@UIDataObject@@@WRL@Microsoft@@@Z
??$Initialize@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJPEAUIDataObject@@@Z
??$Initialize@UIDropTarget@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJPEAUIDropTarget@@@Z
??$InvokeIfActive@V<lambda_0a18120dc7dcec8cb07768015f9b0617>@@@ClipboardDataObjectTask@@QEAAJV<lambda_0a18120dc7dcec8cb07768015f9b0617>@@@Z
??$InvokeIfActive@V<lambda_1325d83fa6a9b5059b44fec492f19dcd>@@@ClipboardDataObjectTask@@QEAAJV<lambda_1325d83fa6a9b5059b44fec492f19dcd>@@@Z
??$InvokeIfActive@V<lambda_14b25aaf0db7771cb0bb6bcb1052a1a0>@@@ClipboardDataObjectTask@@QEAAJV<lambda_14b25aaf0db7771cb0bb6bcb1052a1a0>@@@Z
??$InvokeIfActive@V<lambda_19600923239bd138db611a3bcd35a184>@@@ClipboardDataObjectTask@@QEAAJV<lambda_19600923239bd138db611a3bcd35a184>@@@Z
??$InvokeIfActive@V<lambda_1bddd38f1c2c61820f0511b0dcb5aeed>@@@ClipboardDataObjectTask@@QEAAJV<lambda_1bddd38f1c2c61820f0511b0dcb5aeed>@@@Z
??$InvokeIfActive@V<lambda_1d7dcc53cb7b04382455cc4b0de5f8d7>@@@ClipboardDataObjectTask@@QEAAJV<lambda_1d7dcc53cb7b04382455cc4b0de5f8d7>@@@Z
??$InvokeIfActive@V<lambda_1fabf05943988ec97a03c569b9148d41>@@@ClipboardDataObjectTask@@QEAAJV<lambda_1fabf05943988ec97a03c569b9148d41>@@@Z
??$InvokeIfActive@V<lambda_1ff6a892073f82b990ab0d153c3cb3e5>@@@ClipboardDataObjectTask@@QEAAJV<lambda_1ff6a892073f82b990ab0d153c3cb3e5>@@@Z
??$InvokeIfActive@V<lambda_239dc36ff89ef9343f5be4bc17d5a8ef>@@@ClipboardDataObjectTask@@QEAAJV<lambda_239dc36ff89ef9343f5be4bc17d5a8ef>@@@Z
??$InvokeIfActive@V<lambda_25839262837d068401bf8c3397db2d8a>@@@ClipboardDataObjectTask@@QEAAJV<lambda_25839262837d068401bf8c3397db2d8a>@@@Z
??$InvokeIfActive@V<lambda_301f3587bff926b4515b80b83f6cb3c1>@@@ClipboardDataObjectTask@@QEAAJV<lambda_301f3587bff926b4515b80b83f6cb3c1>@@@Z
??$InvokeIfActive@V<lambda_32dfadbef8f2a61c0d809fa552c11f81>@@@ClipboardDataObjectTask@@QEAAJV<lambda_32dfadbef8f2a61c0d809fa552c11f81>@@@Z
??$InvokeIfActive@V<lambda_40922ab18465b876057f1185cc36db8e>@@@ClipboardDataObjectTask@@QEAAJV<lambda_40922ab18465b876057f1185cc36db8e>@@@Z
??$InvokeIfActive@V<lambda_442dbdd4e627d94aee8ed7535ac6295a>@@@ClipboardDataObjectTask@@QEAAJV<lambda_442dbdd4e627d94aee8ed7535ac6295a>@@@Z
??$InvokeIfActive@V<lambda_447c46b66cbb21333d1664f5793f81f3>@@@ClipboardDataObjectTask@@QEAAJV<lambda_447c46b66cbb21333d1664f5793f81f3>@@@Z
??$InvokeIfActive@V<lambda_56b5ba632d587fa357900841a044505e>@@@ClipboardDataObjectTask@@QEAAJV<lambda_56b5ba632d587fa357900841a044505e>@@@Z
??$InvokeIfActive@V<lambda_5c690cab17f385c97bf7142c1739781b>@@@ClipboardDataObjectTask@@QEAAJV<lambda_5c690cab17f385c97bf7142c1739781b>@@@Z
??$InvokeIfActive@V<lambda_623afaff1ea6960797c30da1c8e48c6d>@@@ClipboardDataObjectTask@@QEAAJV<lambda_623afaff1ea6960797c30da1c8e48c6d>@@@Z
??$InvokeIfActive@V<lambda_67bd47486a8986df7d6cb4f09c809e77>@@@ClipboardDataObjectTask@@QEAAJV<lambda_67bd47486a8986df7d6cb4f09c809e77>@@@Z
??$InvokeIfActive@V<lambda_6d542ea311a46020d30b3ebc4539ced7>@@@ClipboardDataObjectTask@@QEAAJV<lambda_6d542ea311a46020d30b3ebc4539ced7>@@@Z
??$InvokeIfActive@V<lambda_715367da935c5581b17c1a3be965339d>@@@ClipboardDataObjectTask@@QEAAJV<lambda_715367da935c5581b17c1a3be965339d>@@@Z
??$InvokeIfActive@V<lambda_7a59a3cec997efd4251645394ee05088>@@@ClipboardDataObjectTask@@QEAAJV<lambda_7a59a3cec997efd4251645394ee05088>@@@Z
??$InvokeIfActive@V<lambda_7d1fe11c787a4af78d8dd42692fd1f09>@@@ClipboardDataObjectTask@@QEAAJV<lambda_7d1fe11c787a4af78d8dd42692fd1f09>@@@Z
??$InvokeIfActive@V<lambda_828ba3180f084769e3a35cd5c8d78af3>@@@ClipboardDataObjectTask@@QEAAJV<lambda_828ba3180f084769e3a35cd5c8d78af3>@@@Z
??$InvokeIfActive@V<lambda_857927a93fbdbf954257c5a12af5e448>@@@ClipboardDataObjectTask@@QEAAJV<lambda_857927a93fbdbf954257c5a12af5e448>@@@Z
??$InvokeIfActive@V<lambda_85adfdbc59dc2fecc6c73766ac5726d0>@@@ClipboardDataObjectTask@@QEAAJV<lambda_85adfdbc59dc2fecc6c73766ac5726d0>@@@Z
??$InvokeIfActive@V<lambda_8f13d703fe13c76f69ce08951bcc75b5>@@@ClipboardDataObjectTask@@QEAAJV<lambda_8f13d703fe13c76f69ce08951bcc75b5>@@@Z
??$InvokeIfActive@V<lambda_901244bbe6ff11f30bcc324ded8f1e54>@@@ClipboardDataObjectTask@@QEAAJV<lambda_901244bbe6ff11f30bcc324ded8f1e54>@@@Z
??$InvokeIfActive@V<lambda_90c58536661702964630d6bd2c4c001f>@@@ClipboardDataObjectTask@@QEAAJV<lambda_90c58536661702964630d6bd2c4c001f>@@@Z
??$InvokeIfActive@V<lambda_9248f5e097f132b19a75522d4d896069>@@@ClipboardDataObjectTask@@QEAAJV<lambda_9248f5e097f132b19a75522d4d896069>@@@Z
??$InvokeIfActive@V<lambda_9ee25847ed46d519a0f8b2a7b76ad1cb>@@@ClipboardDataObjectTask@@QEAAJV<lambda_9ee25847ed46d519a0f8b2a7b76ad1cb>@@@Z
??$InvokeIfActive@V<lambda_b2e3b810243455f1068e53fb5cb0f92b>@@@ClipboardDataObjectTask@@QEAAJV<lambda_b2e3b810243455f1068e53fb5cb0f92b>@@@Z
??$InvokeIfActive@V<lambda_baecf777eea7d88e008ba381e7d7d0c9>@@@ClipboardDataObjectTask@@QEAAJV<lambda_baecf777eea7d88e008ba381e7d7d0c9>@@@Z
??$InvokeIfActive@V<lambda_c2debb2788f3ef9f8ec79bcf639a9eba>@@@ClipboardDataObjectTask@@QEAAJV<lambda_c2debb2788f3ef9f8ec79bcf639a9eba>@@@Z
??$InvokeIfActive@V<lambda_c44edb339ff6223e663ad4cffd1e49bf>@@@ClipboardDataObjectTask@@QEAAJV<lambda_c44edb339ff6223e663ad4cffd1e49bf>@@@Z
??$InvokeIfActive@V<lambda_c61124bf9311369ccd740ead4f8d81ee>@@@ClipboardDataObjectTask@@QEAAJV<lambda_c61124bf9311369ccd740ead4f8d81ee>@@@Z
??$InvokeIfActive@V<lambda_c819397f95c37f5ccdbe095601a61b25>@@@ClipboardDataObjectTask@@QEAAJV<lambda_c819397f95c37f5ccdbe095601a61b25>@@@Z
??$InvokeIfActive@V<lambda_d171dd235d7ccf127f18467165bcf888>@@@ClipboardDataObjectTask@@QEAAJV<lambda_d171dd235d7ccf127f18467165bcf888>@@@Z
??$InvokeIfActive@V<lambda_d88a98539f99aa8d705874cde434eb96>@@@ClipboardDataObjectTask@@QEAAJV<lambda_d88a98539f99aa8d705874cde434eb96>@@@Z
??$InvokeIfActive@V<lambda_e174a29c410f404b3b2cf06c7a80a00b>@@@ClipboardDataObjectTask@@QEAAJV<lambda_e174a29c410f404b3b2cf06c7a80a00b>@@@Z
??$InvokeIfActive@V<lambda_f3ee3880bbfa881d18ec7e87344dd5a6>@@@ClipboardDataObjectTask@@QEAAJV<lambda_f3ee3880bbfa881d18ec7e87344dd5a6>@@@Z
??$InvokeIfActive@V<lambda_f9b686faf07558546d2e0b9f147c5283>@@@ClipboardDataObjectTask@@QEAAJV<lambda_f9b686faf07558546d2e0b9f147c5283>@@@Z
??$InvokeIfActive@V<lambda_fcb92e6a7323f565a84aeece59385ee4>@@@ClipboardDataObjectTask@@QEAAJV<lambda_fcb92e6a7323f565a84aeece59385ee4>@@@Z
??$IterateOnChunks@V<lambda_13b16af24a6654baa37229b7cf33de1f>@@V<lambda_b157e817e32bc316ac1016975a893c27>@@@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJV<lambda_13b16af24a6654baa37229b7cf33de1f>@@V<lambda_b157e817e32bc316ac1016975a893c27>@@@Z
??$IterateOnChunks@V<lambda_e2e96e51e42edcad6b3668af4a803eaf>@@V<lambda_b9bc781cf4891e97cdc64fd226d3642a>@@@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJV<lambda_e2e96e51e42edcad6b3668af4a803eaf>@@V<lambda_b9bc781cf4891e97cdc64fd226d3642a>@@@Z
??$LogTokenInfo@AEAPEAX@ComTrace@@SAXAEAPEAX@Z
??$Make@V?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAU?$DefaultEqualityPredicate@PEAUHSTRING__@@@2345@Upermission@12345@@Details@WRL@Microsoft@@YA?AV?$ComPtr@V?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@12@AEAU?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@$$QEAUpermission@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@5678@@Z
??$Make@VCClipboardBroker@@$$V@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCClipboardBroker@@@12@XZ
??$Make@VCClipboardBrokerExternalReference@CClipboardBroker@@PEAV2@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCClipboardBrokerExternalReference@CClipboardBroker@@@12@$$QEAPEAVCClipboardBroker@@@Z
??$Make@VCClipboardBrokerMTAHelper@CClipboardBroker@@$$V@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCClipboardBrokerMTAHelper@CClipboardBroker@@@12@XZ
??$Make@VCEnumFmt10@@AEAK@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCEnumFmt10@@@12@AEAK@Z
??$Make@VCEnumFmt10@@AEAKAEAK@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCEnumFmt10@@@12@AEAK0@Z
??$Make@VCEnumFmt@@PEAUIOleDataFormatIterator@@AEAK@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCEnumFmt@@@12@$$QEAPEAUIOleDataFormatIterator@@AEAK@Z
??$Make@VCFormatOnlyDataObject@@PEAUIDataObject@@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCFormatOnlyDataObject@@@12@$$QEAPEAUIDataObject@@@Z
??$Make@VCProcessExtensionTbl@@$$V@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCProcessExtensionTbl@@@12@XZ
??$Make@VChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@PEAVChunk@23456@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@12@$$QEAPEAVChunk@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@Z
??$Make@VChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAU?$DefaultEqualityPredicate@PEAUHSTRING__@@@3456@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@12@AEAU?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@Z
??$Make@VIterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@PEAV23456@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VIterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@12@$$QEAPEAV?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@Z
??$Make@VReferencedRegistryKey@@$$V@Details@WRL@Microsoft@@YA?AV?$ComPtr@VReferencedRegistryKey@@@12@XZ
??$Make@VRegistryTypeLibRegistration@@AEAU_GUID@@AEAY0BAA@GAEAKPEAVReferencedRegistryKey@@VRegistryKey@@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VRegistryTypeLibRegistration@@@12@AEAU_GUID@@AEAY0BAA@GAEAK$$QEAPEAVReferencedRegistryKey@@$$QEAVRegistryKey@@@Z
??$Make@VSplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@PEAV23456@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VSplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@12@$$QEAPEAV?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@Z
??$Make@VView@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@PEAV23456@AEAU?$DefaultEqualityPredicate@PEAUHSTRING__@@@3456@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VView@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@12@$$QEAPEAV?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAU?$DefaultEqualityPredicate@PEAUHSTRING__@@@5678@@Z
??$MakeAndInitialize@VCDragOperation@@UIDragOperationInternal@@AEAPEAUIDataObject@@$$TAEAK$$TAEAHPEAPEAXAEAH@Details@WRL@Microsoft@@YAJPEAPEAUIDragOperationInternal@@AEAPEAUIDataObject@@$$QEA$$TAEAK2AEAH$$QEAPEAPEAX4@Z
??$MakeAndInitialize@VCEnumCategoriesOfCatalogClass@@UIEnumGUID@@AEAPEAUIComClassCategoryInfo@@AEA_N@Details@WRL@Microsoft@@YAJPEAPEAUIEnumGUID@@AEAPEAUIComClassCategoryInfo@@AEA_N@Z
??$MakeAndInitialize@VCEnumCategoriesOfCatalogClass@@UIEnumGUID@@AEAV1@@Details@WRL@Microsoft@@YAJPEAPEAUIEnumGUID@@AEAVCEnumCategoriesOfCatalogClass@@@Z
??$MakeAndInitialize@VCProcessPatternTbl@@V1@$$V@Details@WRL@Microsoft@@YAJPEAPEAVCProcessPatternTbl@@@Z
??$MakeAndInitialize@VClipboardDataObjectTask@@V1@AEAK@Details@WRL@Microsoft@@YAJPEAPEAVClipboardDataObjectTask@@AEAK@Z
??$MakeAndInitialize@VClipboardDataObjectTask@@V1@K@Details@WRL@Microsoft@@YAJPEAPEAVClipboardDataObjectTask@@$$QEAK@Z
??$MakeAndInitialize@VComClassIterator@@UIComClassIterator@@AEAV1@@Details@WRL@Microsoft@@YAJPEAPEAUIComClassIterator@@AEAVComClassIterator@@@Z
??$MakeAndInitialize@VComClassIterator@@UIComClassIterator@@AEA_N@Details@WRL@Microsoft@@YAJPEAPEAUIComClassIterator@@AEA_N@Z
??$MakeAndInitialize@VOleClassInfoDataFormatIterator@@UIOleDataFormatIterator@@AEAV1@@Details@WRL@Microsoft@@YAJPEAPEAUIOleDataFormatIterator@@AEAVOleClassInfoDataFormatIterator@@@Z
??$MakeAndInitialize@VOleClassInfoDataFormatIterator@@UIOleDataFormatIterator@@PEAUIOleClassInfo@@@Details@WRL@Microsoft@@YAJPEAPEAUIOleDataFormatIterator@@$$QEAPEAUIOleClassInfo@@@Z
??$MakeAndInitialize@VOleClassInfoVerb@@UIOleVerb@@PEAUIMrtResourceManager@@PEAUIResourceContext@@PEAUHSTRING__@@PEAU5@@Details@WRL@Microsoft@@YAJPEAPEAUIOleVerb@@$$QEAPEAUIMrtResourceManager@@$$QEAPEAUIResourceContext@@$$QEAPEAUHSTRING__@@3@Z
??$MakeAndInitialize@VOleClassInfoVerbIterator@@UIOleVerbIterator@@PEAUIMrtResourceManager@@AEAPEAUIResourceContext@@AEAPEAUIOleClassInfo@@@Details@WRL@Microsoft@@YAJPEAPEAUIOleVerbIterator@@$$QEAPEAUIMrtResourceManager@@AEAPEAUIResourceContext@@AEAPEAUIOleClassInfo@@@Z
??$MakeAndInitialize@VRegistryDataFormatIterator@@UIOleDataFormatIterator@@AEAV1@@Details@WRL@Microsoft@@YAJPEAPEAUIOleDataFormatIterator@@AEAVRegistryDataFormatIterator@@@Z
??$MakeAndInitialize@VRegistryDataFormatIterator@@UIOleDataFormatIterator@@AEBU_GUID@@@Details@WRL@Microsoft@@YAJPEAPEAUIOleDataFormatIterator@@AEBU_GUID@@@Z
??$MakeAndInitialize@VRegistryVerb@@UIOleVerb@@AEAY0BAA@GPEAUHKEY__@@@Details@WRL@Microsoft@@YAJPEAPEAUIOleVerb@@AEAY0BAA@G$$QEAPEAUHKEY__@@@Z
??$MakeAndInitialize@VRegistryVerbIterator@@UIOleVerbIterator@@AEAPEBG@Details@WRL@Microsoft@@YAJPEAPEAUIOleVerbIterator@@AEAPEBG@Z
??$MakeAndInitialize@VTypeLibRegistrationEnumerator@@UIEnumUnknown@@AEAV1@@Details@WRL@Microsoft@@YAJPEAPEAUIEnumUnknown@@AEAVTypeLibRegistrationEnumerator@@@Z
??$MakeAndInitialize@VTypeLibRegistrationEnumerator@@UIEnumUnknown@@AEA_N@Details@WRL@Microsoft@@YAJPEAPEAUIEnumUnknown@@AEA_N@Z
??$MakeAndInitialize@VTypeLibRegistrationReader@@UITypeLibRegistrationReader@@AEA_N@Details@WRL@Microsoft@@YAJPEAPEAUITypeLibRegistrationReader@@AEA_N@Z
??$ReadStringValueWorker@$0A@PEAUHSTRING__@@@RegistryKey@@AEBAJPEBGKPEAPEAUHSTRING__@@PEA_N@Z
??$Register@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@IEAAJPEAUIDataObject@@@Z
??$Release@UDISPATCH_SERVER_FRAME@@@@YAXAEAPEAUDISPATCH_SERVER_FRAME@@@Z
??$Release@UICallFrame@@@@YAXAEAPEAUICallFrame@@@Z
??$Release@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@@Z
??$Release@UICallFrameWalker@@@@YAXAEAPEAUICallFrameWalker@@@Z
??$Release@UICallInterceptor@@@@YAXAEAPEAUICallInterceptor@@@Z
??$Release@UIMarshallingManager@@@@YAXAEAPEAUIMarshallingManager@@@Z
??$Release@UIUnknown@@@@YAXAEAPEAUIUnknown@@@Z
??$Release@UMD_INTERFACE@@@@YAXAEAPEAUMD_INTERFACE@@@Z
??$ReportFailure_Base@$00$0A@@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@PEBGW4ReportFailureOptions@01@@Z
??$ReportFailure_Base@$01$0A@@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@PEBGW4ReportFailureOptions@01@@Z
??$ReportFailure_Base@$02$0A@@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@PEBGW4ReportFailureOptions@01@@Z
??$ReportFailure_GetLastError@$01@details@wil@@YAKPEAXIPEBD110@Z
??$ReportFailure_GetLastError@$02@details@wil@@YAKPEAXIPEBD110@Z
??$ReportFailure_GetLastErrorHr@$00@details@wil@@YAJPEAXIPEBD110@Z
??$ReportFailure_GetLastErrorMsg@$01@details@wil@@YAKPEAXIPEBD1101PEAD@Z
??$ReportFailure_Hr@$00@details@wil@@YAXPEAXIPEBD110J@Z
??$ReportFailure_Hr@$01@details@wil@@YAXPEAXIPEBD110J@Z
??$ReportFailure_Hr@$02@details@wil@@YAXPEAXIPEBD110J@Z
??$ReportFailure_HrMsg@$00@details@wil@@YAXPEAXIPEBD110J1PEAD@Z
??$ReportFailure_HrMsg@$01@details@wil@@YAXPEAXIPEBD110J1PEAD@Z
??$ReportFailure_Msg@$00@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@1PEAD@Z
??$ReportFailure_Msg@$01@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@1PEAD@Z
??$ReportFailure_NoReturn@$02@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@PEBGW4ReportFailureOptions@01@@Z
??$ReportFailure_NtStatus@$01@details@wil@@YAJPEAXIPEBD110J@Z
??$ReportFailure_Return@$00@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@PEBGW4ReportFailureOptions@01@@Z
??$ReportFailure_Return@$01@details@wil@@YAXPEAXIPEBD110AEBUResultStatus@01@PEBGW4ReportFailureOptions@01@@Z
??$ReportFailure_Win32@$00@details@wil@@YAJPEAXIPEBD110K@Z
??$ReportFailure_Win32@$01@details@wil@@YAJPEAXIPEBD110K@Z
??$ReportFailure_Win32Msg@$01@details@wil@@YAJPEAXIPEBD110K1PEAD@Z
??$RunSyncOnMTAThread@V<lambda_4927a812c17eeead1d983da7cbe73d5d>@@@@YAJV<lambda_4927a812c17eeead1d983da7cbe73d5d>@@@Z
??$RunSyncOnMTAThread@V<lambda_50ee3ecffe8efbd463e6350e39328809>@@@@YAJV<lambda_50ee3ecffe8efbd463e6350e39328809>@@@Z
??$RunSyncOnMTAThread@V<lambda_a4e555621f6ed4efaaeeaa7992cb2190>@@@@YAJV<lambda_a4e555621f6ed4efaaeeaa7992cb2190>@@@Z
??$RunSyncOnMTAThread@V<lambda_be18d0e1c9460e7bb92c1a447c19d4fe>@@@@YAJV<lambda_be18d0e1c9460e7bb92c1a447c19d4fe>@@@Z
??$RunSyncOnMTAThread@V<lambda_ceb8f1db0b0f2dc512542b4e425d8ca5>@@@@YAJV<lambda_ceb8f1db0b0f2dc512542b4e425d8ca5>@@@Z
??$Set@UICallFrame@@@@YAXAEAPEAUICallFrame@@PEAU0@@Z
??$Set@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@PEAU0@@Z
??$Set@UIMarshallingManager@@@@YAXAEAPEAUIMarshallingManager@@PEAU0@@Z
??$Set@UMD_INTERFACE@@@@YAXAEAPEAUMD_INTERFACE@@PEAU0@@Z
??$SetConcurrent@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@PEAU0@@Z
??$UploadSQMData@W4Ole32SQMFlags@@@@YAXW4Ole32SQMFlags@@@Z
??$Write@U?$_tlgWrapSz@G@@U1@U?$_tlgWrapperByVal@$03@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@3AEBU?$_tlgWrapperByVal@$03@@@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$00@@U1@U?$_tlgWrapperByVal@$03@@U3@U?$_tlgWrapperByVal@$07@@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$00@@3AEBU?$_tlgWrapperByVal@$03@@5AEBU?$_tlgWrapperByVal@$07@@5@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@3@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U1@U2@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@344@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U1@U2@U?$_tlgWrapperByVal@$07@@U2@U2@U3@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@34AEBU?$_tlgWrapperByVal@$07@@4455@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U1@U2@U?$_tlgWrapperByVal@$07@@U2@U3@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@34AEBU?$_tlgWrapperByVal@$07@@455@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U1@U2@U?$_tlgWrapperByVal@$07@@U3@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@34AEBU?$_tlgWrapperByVal@$07@@55@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@4@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U2@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@43@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U2@U2@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@444@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U2@U?$_tlgWrapperByVal@$07@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@4AEBU?$_tlgWrapperByVal@$07@@@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapperByRef@$0BA@@@U?$_tlgWrapperByVal@$07@@U4@U4@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapperByRef@$0BA@@@AEBU?$_tlgWrapperByVal@$07@@66@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapperByVal@$07@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapperByVal@$07@@@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapperByVal@$07@@U1@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapperByVal@$07@@34@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapperByVal@$07@@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapperByVal@$07@@4@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapperByVal@$07@@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapperByVal@$07@@5@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$00@@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$00@@5@Z
??$Write@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$07@@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$07@@4@Z
??$Write@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U?$_tlgWrapSz@G@@U2@U2@U?$_tlgWrapperByVal@$01@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EtwEventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@AEBU?$_tlgWrapSz@G@@44AEBU?$_tlgWrapperByVal@$01@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@3@Z
??$Write@U?$_tlgWrapperByVal@$07@@U1@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@3AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@45456456@Z
??$Write@U?$_tlgWrapperByVal@$07@@U1@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@U4@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@3AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@4545645663@Z
??$Write@U?$_tlgWrapperByVal@$07@@U1@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@U4@U4@U4@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@3AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@454564566663@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapBuffer@U_UNICODE_STRING@@@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapBuffer@U_UNICODE_STRING@@@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapSz@D@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapSz@D@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapSz@D@@U?$_tlgWrapperByVal@$01@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapSz@D@@AEBU?$_tlgWrapperByVal@$01@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapSz@G@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapSz@G@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapSz@G@@U?$_tlgWrapperByVal@$03@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapSz@G@@AEBU?$_tlgWrapperByVal@$03@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBX1IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteAgg@@YAJ011I2@ZPEBX@@SAJPEBU_tlgProvider_t@@PEBX1AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@3@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U2@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@4@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U2@U?$_tlgWrapSz@G@@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@4AEBU?$_tlgWrapSz@G@@3@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U2@U?$_tlgWrapSz@G@@U3@U3@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@4AEBU?$_tlgWrapSz@G@@553@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U2@U?$_tlgWrapperByVal@$00@@U?$_tlgWrapperByRef@$0BA@@@U_tlgWrapperBinary@@U1@U3@U5@U1@U3@U5@U1@U3@U5@U1@U3@U5@U1@U3@U5@U1@U3@U5@U1@U3@U5@U1@U3@U5@U2@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@4AEBU?$_tlgWrapperByVal@$00@@AEBU?$_tlgWrapperByRef@$0BA@@@AEBU_tlgWrapperBinary@@35735735735735735735735745@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EtwEventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@45456456@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@45456456@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@U2@U2@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EtwEventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@45456456445@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@D@@U2@U3@U2@U?$_tlgWrapSz@G@@U2@U3@U2@U3@U4@U2@U3@U4@U2@U2@U3@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@D@@454AEBU?$_tlgWrapSz@G@@45456456445@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@G@@U2@U?$_tlgWrapperByVal@$00@@U4@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@G@@4AEBU?$_tlgWrapperByVal@$00@@6@Z
??$Write@U?$_tlgWrapperByVal@$07@@U?$_tlgWrapperByVal@$03@@U?$_tlgWrapSz@G@@U3@U3@U3@U1@@?$_tlgWriteTemplate@$$A6AJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2IPEAU_EVENT_DATA_DESCRIPTOR@@@Z$1?_tlgWriteTransfer_EventWriteTransfer@@YAJ0122I3@ZPEBU2@PEBU2@@@SAJPEBU_tlgProvider_t@@PEBXPEBU_GUID@@2AEBU?$_tlgWrapperByVal@$07@@AEBU?$_tlgWrapperByVal@$03@@AEBU?$_tlgWrapSz@G@@5553@Z
??$WriteResultString@PEBD@details@wil@@YAPEAEPEAE0PEBDPEAPEBD@Z
??$WriteResultString@PEBG@details@wil@@YAPEAEPEAE0PEBGPEAPEBG@Z
??$_AllocStringWorker@VCTLocalAllocPolicy@@@@YAJPEAXKPEBG_K2PEAPEAG@Z
??$_IteratorGetMany@U?$IIterator_impl@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@$00@Collections@Foundation@Windows@@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@234@@Detail@Collections@Foundation@Windows@@YAJPEAU?$IIterator_impl@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@$00@123@IPEAPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@123@PEAI@Z
??$_PushBackOne2@AEBQEAVCROTItem@@@?$vector@PEAVCROTItem@@V?$allocator@PEAVCROTItem@@@utl@@@utl@@AEAA_NAEBQEAVCROTItem@@@Z
??$_PushBackOne2@AEB_K@?$vector@_KV?$allocator@_K@utl@@@utl@@AEAA_NAEB_K@Z
??$_tlgWriteActivityAutoStop@$0EAAAAAAAAAAA@$04@@YAXPEBU_tlgProvider_t@@PEBU_GUID@@@Z
??$make_unique_string_nothrow@V?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?CoTaskMemFree@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@wil@@@wil@@YA?AV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?CoTaskMemFree@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@0@PEBG_K@Z
??$make_unique_string_nothrow@V?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?FreeProcessHeap@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@wil@@@wil@@YA?AV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?FreeProcessHeap@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@0@PEBG_K@Z
??$swap@V?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@@FakeStl@XWinRT@@YAXAEAV?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@1@0@Z
??0?$AdHocInterceptor@UIElementBehavior@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UIOleInPlaceObject@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UIOleWindow@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UIPersist@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UIPersistPropertyBag@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UISearchProtocol2@@@@AEAA@PEAUIUnknown@@@Z
??0?$AdHocInterceptor@UISearchProtocol@@@@AEAA@PEAUIUnknown@@@Z
??0?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??0?$CALLFRAME_CACHE@UNdrTypeInfo@@@@QEAA@XZ
??0?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAA@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@QEAA@XZ
??0?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@QEAA@AEBU?$DefaultEqualityPredicate@PEAUHSTRING__@@@1234@Upermission@01234@@Z
??0?$ProcessLocalStorageData@VFeatureStateData@details_abi@wil@@@details_abi@wil@@QEAA@$$QEAV?$unique_any_t@V?$mutex_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@Uerr_returncode_policy@3@@wil@@@2@$$QEAVSemaphoreValue@12@@Z
??0?$ReentrancyGuard@$0A@@detail@XWinRT@@QEAA@ZZ
??0?$RuntimeClass@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@234@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBroker@@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumFORMATETC@@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleDataFormatIterator@@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleVerb@@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleVerbIterator@@@WRL@Microsoft@@QEAA@XZ
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
??0?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@QEAA@Upermission@01234@@Z
??0?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAA@PEAXIMMMI@Z
??0?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@QEAA@PEAUICallFrameEvents@@@Z
??0?$com_ptr_t@UIMrtResourceManager@@Uerr_returncode_policy@wil@@@wil@@QEAA@PEAUIMrtResourceManager@@@Z
??0CBindCtx@@AEAA@_N@Z
??0CBindStatusCallback@@QEAA@AEAJ@Z
??0CBrokeredClipDataObject@@AEAA@PEAUIDataObject@@K_NPEAPEAX@Z
??0CCacheNode@@QEAA@PEAUtagFORMATETC@@KPEAUIStorage@@@Z
??0CCacheNode@@QEAA@XZ
??0CClipClientDataWrapper@@QEAA@PEAUIDataObject@@@Z
??0CClipDataObject@@IEAA@PEAUFORMATETCDATAARRAY@@_N1@Z
??0CClipDataObject@@IEAA@XZ
??0CCompositeMonikerEnum@@AEAA@HPEAVCCompositeMoniker@@@Z
??0CDdeObject@@AEAA@PEAUIUnknown@@@Z
??0CDefClient@@AEAA@PEAUIUnknown@@@Z
??0CDefLink@@AEAA@PEAUIUnknown@@@Z
??0CDefObject@@AEAA@PEAUIUnknown@@@Z
??0CDragDropBroker@@QEAA@XZ
??0CDragOperation@@QEAA@XZ
??0CEnumCategories@@QEAA@XZ
??0CEnumCategoriesOfCatalogClass@@QEAA@XZ
??0CEnumCategoriesOfClass@@QEAA@XZ
??0CEnumClassesOfCategories@@QEAA@_N@Z
??0CEnumFmt10@@QEAA@KK@Z
??0CEnumFmt@@QEAA@PEAUIOleDataFormatIterator@@K@Z
??0CEnumFormatEtc@@AEAA@AEAV0@@Z
??0CEnumFormatEtc@@AEAA@PEAV?$CArray@VCCacheNode@@@@@Z
??0CEnumFormatEtcDataArray@@QEAA@PEAUFORMATETCDATAARRAY@@K@Z
??0CEnumSTATDATA@@QEAA@PEAVCDAHolder@@H@Z
??0CEnumStatData@@AEAA@AEAV0@@Z
??0CEnumStatData@@AEAA@PEAV?$CArray@VCCacheNode@@@@@Z
??0CFileMoniker@@AEAA@XZ
??0CFont@@QEAA@XZ
??0CFormatOnlyDataObject@@QEAA@PEAUIDataObject@@@Z
??0CGenericObject@@QEAA@XZ
??0CMapKeyToValue@@QEAA@IIHP6AIPEAXI@ZI@Z
??0CMonikerPtrBuf@@QEAA@AEAV0@@Z
??0CObjrefMoniker@@QEAA@PEAUIUnknown@@@Z
??0COleCache@@QEAA@PEAUIUnknown@@AEBU_GUID@@K@Z
??0COlePropertySheet@@QEAA@PEAUtagOCPFIPARAMS@@@Z
??0CPageHolder@@QEAA@AEBU_GUID@@KPEAVCOlePropertySheet@@@Z
??0CPicture@@QEAA@K@Z
??0CPointerMoniker@@QEAA@PEAUIUnknown@@@Z
??0CPrivDragDrop@@QEAA@PEAUHWND__@@PEAUIDropTarget@@_N2@Z
??0CProcessExtensionTbl@@QEAA@XZ
??0CPropertySet@@QEAA@U_GUID@@@Z
??0CRPCTimeout@@QEAA@K@Z
??0CSyncSync@@AEAA@PEAVCPicture@@PEAUIImageFilter@@@Z
??0CallFrame@@QEAA@XZ
??0CancellableCall@@QEAA@XZ
??0ClipboardDataObjectTask@@QEAA@XZ
??0ComClassIterator@@QEAA@XZ
??0ComLock@XWinRT@@QEAA@_N@Z
??0ComPsClassFactory@@QEAA@PEAUIUnknown@@PEAUtagCStdPSFactoryBuffer@@@Z
??0CriticalSection@Wrappers@WRL@Microsoft@@QEAA@XZ
??0DISPATCH_CLIENT_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_INTERCEPTOR@@QEAA@PEAUIUnknown@@@Z
??0DISPATCH_SERVER_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DefaultIBindStatusCallback@@QEAA@PEAUHWND__@@PEAUIBindStatusCallback@@@Z
??0FtmBase@WRL@Microsoft@@QEAA@XZ
??0Git@Details@Internal@Windows@@QEAA@XZ
??0GitPtr@Internal@Windows@@QEAA@XZ
??0GuidString@@QEAA@AEBU_GUID@@@Z
??0Interceptor@@AEAA@PEAUIUnknown@@@Z
??0InterfaceWalkerFree@@QEAA@PEAUICallFrameWalker@@@Z
??0Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@QEAA@PEAV12345@@Z
??0MD_INTERFACE_CACHE@@QEAA@XZ
??0MD_METHOD@@QEAA@XZ
??0OAUTIL@@QEAA@PEAUICallFrameWalker@@00HH@Z
??0OLEAUTOMATION_FUNCTIONS@@QEAA@XZ
??0OWNERENTRY@XSLOCK@@QEAA@XZ
??0OleClassInfoDataFormatIterator@@QEAA@XZ
??0ProcessToken@@QEAA@XZ
??0RawUsageIndex@details_abi@wil@@QEAA@GGW4CountSize@12@G0@Z
??0RegistryDataFormatIterator@@QEAA@XZ
??0RegistryTypeLibRegistration@@QEAA@U_GUID@@PEBGKPEAVReferencedRegistryKey@@$$QEAVRegistryKey@@@Z
??0ResultException@wil@@QEAA@AEBUFailureInfo@1@@Z
??0ResultException@wil@@QEAA@AEBV01@@Z
??0RoVariant@@AEAA@PEAUIInspectable@@_N1@Z
??0SDDInfo@@QEAA@PEAUHWND__@@AEAJ@Z
??0SDDInfo@@QEAA@PEAUHWND__@@PEAUIDropTarget@@AEAJ@Z
??0SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@QEAA@PEAV12345@@Z
??0SubscriptionList@details_abi@wil@@QEAA@XZ
??0SysInfo@@QEAA@XZ
??0TypeLibRegistrationEnumerator@@QEAA@XZ
??0TypeLibRegistrationReader@@QEAA@XZ
??0UsageIndexes@details_abi@wil@@QEAA@XZ
??0View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@QEAA@PEAV12345@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@2345@@Z
??0WeakReferenceImpl@Details@WRL@Microsoft@@QEAA@PEAUIUnknown@@@Z
??0XSLOCK@@QEAA@XZ
??0exception@std@@QEAA@AEBV01@@Z
??0mutex@std@@QEAA@XZ
??1?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@QEAA@XZ
??1?$ActivityData@VDragDropLogging@@U_TlgReflectorTag_Param0IsProviderType@@@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@QEAA@XZ
??1?$AdHocInterceptor@UIElementBehavior@@@@UEAA@XZ
??1?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAA@XZ
??1?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAA@XZ
??1?$AdHocInterceptor@UIOleWindow@@@@UEAA@XZ
??1?$AdHocInterceptor@UIPersist@@@@UEAA@XZ
??1?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAA@XZ
??1?$AdHocInterceptor@UISearchProtocol2@@@@UEAA@XZ
??1?$AdHocInterceptor@UISearchProtocol@@@@UEAA@XZ
??1?$CArray@PEAVCPageHolder@@AEAPEAV1@@@QEAA@XZ
??1?$CArray@PEAVCProperty@@AEAPEAV1@@@QEAA@XZ
??1?$CArray@PEAVCPropertySection@@AEAPEAV1@@@QEAA@XZ
??1?$CArray@U_GUID@@AEAU1@@@QEAA@XZ
??1?$CArray@VCCacheNode@@@@AEAA@XZ
??1?$CArray@VCFormatEtc@@@@AEAA@XZ
??1?$CArray@VCStatData@@@@AEAA@XZ
??1?$CAutoHandle@PEAX@@QEAA@XZ
??1?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAA@XZ
??1?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAA@XZ
??1?$CWrapperBase@UIEnumFORMATETC@@@@UEAA@XZ
??1?$CWrapperBase@UIEnumSTATSTG@@@@UEAA@XZ
??1?$CWrapperBase@UIStorage@@@@UEAA@XZ
??1?$CWrapperBase@UIStream@@@@UEAA@XZ
??1?$CWrapperBase@UIUnknown@@@@UEAA@XZ
??1?$ComPtr@UIComClassCategoryInfo@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@UIStream@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VCDragOperation@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VCEnumCategoriesOfCatalogClass@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VCEnumClassesOfCategories@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VCEnumFmt10@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VCEnumFmt@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VComClassIterator@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VOleClassInfoDataFormatIterator@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VOleClassInfoVerb@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VOleClassInfoVerbIterator@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VRegistryDataFormatIterator@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VRegistryVerb@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VRegistryVerbIterator@@@WRL@Microsoft@@QEAA@XZ
??1?$ComPtr@VTypeLibRegistrationEnumerator@@@WRL@Microsoft@@QEAA@XZ
??1?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$EnumMap@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAA@XZ
??1?$MakeAllocator@VCDragOperation@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VCEnumCategoriesOfCatalogClass@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VCProcessPatternTbl@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VClipboardDataObjectTask@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VComClassIterator@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VOleClassInfoDataFormatIterator@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VOleClassInfoVerb@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VOleClassInfoVerbIterator@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VRegistryDataFormatIterator@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VRegistryVerb@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VRegistryVerbIterator@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VTypeLibRegistrationEnumerator@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$MakeAllocator@VTypeLibRegistrationReader@@@Details@WRL@Microsoft@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAA@XZ
??1?$ProcessLocalStorage@UProcessLocalData@details_abi@wil@@@details_abi@wil@@QEAA@XZ
??1?$ProcessLocalStorageData@UProcessLocalData@details_abi@wil@@@details_abi@wil@@QEAA@XZ
??1?$ProcessLocalStorageData@VFeatureStateData@details_abi@wil@@@details_abi@wil@@QEAA@XZ
??1?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAA@XZ
??1?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAA@XZ
??1?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAA@XZ
??1?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAA@XZ
??1?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAA@XZ
??1?$ThreadLocalStorage@PEAVThreadFailureCallbackHolder@details@wil@@@details_abi@wil@@QEAA@XZ
??1?$ThreadLocalStorage@UThreadLocalData@details_abi@wil@@@details_abi@wil@@QEAA@XZ
??1?$_TlgActivityBase@V?$ActivityData@VDragDropLogging@@U_TlgReflectorTag_Param0IsProviderType@@@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@$0EAAAAAAAAAAA@$04@@IEAA@XZ
??1?$com_ptr_t@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIComCatalogSCM@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIInterceptorBase@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIInterfaceRelated@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIMrtResourceManager@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIOleVerb@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIOleVerbIterator@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIPackagedComClassCatalogInternal@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIPackagedComProxyStubCatalogInternal@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIRegistration@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIResourceContext@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIResourceReferenceHandler@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UITypeInfo@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UITypeLib@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UIUnknown@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$com_ptr_t@UNdrTypeInfo@@Uerr_returncode_policy@wil@@@wil@@QEAA@XZ
??1?$function@$$A6A_NPEAX_K01I@Z@wistd@@QEAA@XZ
??1?$out_param_t@V?$unique_ptr@GU?$function_deleter@P6APEAXPEAX@Z$1?LocalFree@@YAPEAX0@Z@wil@@@wistd@@@details@wil@@QEAA@XZ
??1?$unique_any_t@V?$mutex_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@Uerr_returncode_policy@3@@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$semaphore_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@Uerr_returncode_policy@3@@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$handle_null_resource_policy@P6AHPEAX@Z$1?CloseHandle@@YAH0@Z@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAG@Z$1?SysFreeString@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?CoTaskMemFree@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?FreeProcessHeap@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUEDP_CONTEXT@@P6AXPEAU1@@Z$1?EdpFreeContext@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHDC__@@P6AXUwindow_dc@wil@@@_E$1?close@23@SAX0@ZU?$integral_constant@_K$0A@@wistd@@U23@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHKEY__@@P6AJPEAU1@@Z$1?RegCloseKey@@YAJ0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHSTRING_BUFFER__@@P6AJPEAU1@@Z$1?WindowsDeleteStringBuffer@@YAJ0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHSTRING__@@P6AJPEAU1@@Z$1?WindowsDeleteString@@YAJ0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?ReleaseMutex@details@wil@@YAX0@ZU?$integral_constant@_K$01@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@@wil@@QEAA@XZ
??1?$unique_ptr@$$BY0A@U_GUID@@U?$default_delete@$$BY0A@U_GUID@@@wistd@@@wistd@@QEAA@XZ
??1?$unique_ptr@$$BY0A@UtagOLEVERB@@U?$default_delete@$$BY0A@UtagOLEVERB@@@std@@@std@@QEAA@XZ
??1?$unique_ptr@$$BY0A@V?$ComPtr@UIUnknown@@@WRL@Microsoft@@U?$default_delete@$$BY0A@V?$ComPtr@UIUnknown@@@WRL@Microsoft@@@wistd@@@wistd@@QEAA@XZ
??1?$unique_ptr@UVerbList@@U?$function_deleter@P6AXPEAX@Z$1?PrivMemFree@@YAX0@Z@wil@@@wistd@@QEAA@XZ
??1?$unique_ptr@U_KEY_VALUE_FULL_INFORMATION@@U?$function_deleter@P6AXPEAX@Z$1?CoTaskMemFree@@YAX0@Z@wil@@@wistd@@QEAA@XZ
??1?$unique_ptr@U_SYSTEM_PROCESS_INFORMATION@@U?$function_deleter@P6AXPEAX@Z$1?CoTaskMemFree@@YAX0@Z@wil@@@wistd@@QEAA@XZ
??1?$unique_ptr@V?$ProcessLocalStorageData@UProcessLocalData@details_abi@wil@@@details_abi@wil@@Uprocess_heap_deleter@3@@wistd@@QEAA@XZ
??1?$unique_ptr@V?$ProcessLocalStorageData@VFeatureStateData@details_abi@wil@@@details_abi@wil@@Uprocess_heap_deleter@3@@wistd@@QEAA@XZ
??1?$unique_storage@U?$resource_policy@PEAUHDC__@@P6AXUwindow_dc@wil@@@_E$1?close@23@SAX0@ZU?$integral_constant@_K$0A@@wistd@@U23@PEAU1@$0A@$$T@details@wil@@@details@wil@@IEAA@XZ
??1CBaseMInterfacePointerMarshalingStream@@MEAA@XZ
??1CBindStatusCallback@@QEAA@XZ
??1CBrokeredClipDataObject@@AEAA@XZ
??1CCacheNode@@QEAA@XZ
??1CClassMoniker@@AEAA@XZ
??1CClipClientDataWrapper@@QEAA@XZ
??1CClipDataObject@@MEAA@XZ
??1CClipboardBrokerExternalReference@CClipboardBroker@@EEAA@XZ
??1CComCat@@AEAA@XZ
??1CCompositeMoniker@@UEAA@XZ
??1CCompositeMonikerEnum@@AEAA@XZ
??1CDAHolder@@EEAA@XZ
??1CData@@QEAA@XZ
??1CDataAdviseCache@@QEAA@XZ
??1CDdeObject@@AEAA@XZ
??1CDefClient@@AEAA@XZ
??1CDragDataObject@@QEAA@XZ
??1CDragOperation@@UEAA@XZ
??1CEndPointAtom@@QEAA@XZ
??1CEnumCategories@@QEAA@XZ
??1CEnumCategoriesOfCatalogClass@@UEAA@XZ
??1CEnumCategoriesOfClass@@QEAA@XZ
??1CEnumClassesOfCategories@@QEAA@XZ
??1CEnumConnectionsImpl@@QEAA@XZ
??1CEnumFmt10@@UEAA@XZ
??1CEnumFormatEtc@@AEAA@XZ
??1CEnumFormatEtcDataArray@@AEAA@XZ
??1CEnumStatData@@AEAA@XZ
??1CFileMoniker@@EEAA@XZ
??1CFont@@QEAA@XZ
??1CFontEventsCP@@QEAA@XZ
??1CFrameFilter@@UEAA@XZ
??1CGdiCustodian@@EEAA@XZ
??1CGenObject@@QEAA@XZ
??1CGenericObject@@QEAA@XZ
??1CItemMoniker@@EEAA@XZ
??1CLock2@@QEAA@XZ
??1CMonikerPtrBuf@@QEAA@XZ
??1CNotifyCP@@QEAA@XZ
??1COAHolder@@EEAA@XZ
??1CObjList@CBindCtx@@QEAA@XZ
??1CObjrefMoniker@@UEAA@XZ
??1COlePropertySheet@@QEAA@XZ
??1COleStaticMutexSem@@QEAA@XZ
??1CPageHolder@@QEAA@XZ
??1CPicture@@QEAA@XZ
??1CPointerMoniker@@UEAA@XZ
??1CPres@@QEAA@XZ
??1CPrivDragDrop@@AEAA@XZ
??1CProcessExtensionTbl@@UEAA@XZ
??1CProcessPatternTbl@@UEAA@XZ
??1CPropertySection@@QEAA@XZ
??1CPropertySet@@QEAA@XZ
??1CROTItem@@QEAA@XZ
??1CRefStabilize@@QEAA@XZ
??1CRunningObjectTable@@QEAA@XZ
??1CStabilize@@QEAA@XZ
??1CStatData@@QEAA@XZ
??1CSyncSync@@UEAA@XZ
??1CUnknown@@UEAA@XZ
??1CallFrame@@QEAA@XZ
??1Chunk@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAA@XZ
??1ClipboardDataObjectTask@@UEAA@XZ
??1ClipboardWatchdog@@QEAA@XZ
??1ClpboardOwnerState@@QEAA@XZ
??1CoInitializeIfNecessaryRAII@@QEAA@XZ
??1ComClassIterator@@UEAA@XZ
??1CompObjStmData@@QEAA@XZ
??1Completer@?$static_lazy@VComTrace@@@details@wil@@QEAA@XZ
??1Completer@?$static_lazy@VDragDropLogging@@@details@wil@@QEAA@XZ
??1Completer@?$static_lazy@VDragDropTelemetry@@@details@wil@@QEAA@XZ
??1Completer@?$static_lazy@VOleClipboardTracing@@@details@wil@@QEAA@XZ
??1Completer@?$static_lazy@VOleDragDropTracing@@@details@wil@@QEAA@XZ
??1CsCatInfo@@QEAA@XZ
??1DISPATCH_CLIENT_FRAME@@EEAA@XZ
??1DISPATCH_INTERCEPTOR@@UEAA@XZ
??1DefaultIBindStatusCallback@@UEAA@XZ
??1DragDropSession@DragDropTelemetry@@QEAA@XZ
??1FeatureStateData@details_abi@wil@@QEAA@XZ
??1FeatureStateManager@details@wil@@QEAA@XZ
??1Interceptor@@EEAA@XZ
??1Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAA@XZ
??1LEGACY_FRAME@@MEAA@XZ
??1LEGACY_INTERCEPTOR@@UEAA@XZ
??1MD_INTERFACE@@AEAA@XZ
??1MD_METHOD@@QEAA@XZ
??1NdrTypeInfo@@EEAA@XZ
??1OAUTIL@@QEAA@XZ
??1OLEAUTOMATION_FUNCTIONS@@QEAA@XZ
??1OleClassInfoDataFormatIterator@@UEAA@XZ
??1OleClassInfoVerb@@UEAA@XZ
??1OleClassInfoVerbIterator@@UEAA@XZ
??1ProcessToken@@QEAA@XZ
??1RegistryKey@@QEAA@XZ
??1RegistryTypeLibRegistration@@UEAA@XZ
??1RegistryVerb@@UEAA@XZ
??1ResultException@wil@@UEAA@XZ
??1RoVariant@@QEAA@XZ
??1SDDInfo@@QEAA@XZ
??1SemaphoreValue@details_abi@wil@@QEAA@XZ
??1SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAA@XZ
??1SyncLockCriticalSection@Details@Wrappers@WRL@Microsoft@@QEAA@XZ
??1SyncLockExclusive@Details@Wrappers@WRL@Microsoft@@QEAA@XZ
??1TraceLoggingProvider@wil@@MEAA@XZ
??1TypeLibRegistrationEnumerator@@UEAA@XZ
??1UsageIndexes@details_abi@wil@@QEAA@XZ
??1View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAA@XZ
??1XSLOCK@@QEAA@XZ
??1unique_hglobal_locked@wil@@QEAA@XZ
??3@YAXPEAX@Z
??3@YAXPEAX_K@Z
??4?$ComPtr@UIDropTarget@@@WRL@Microsoft@@QEAAAEAV012@AEBV012@@Z
??4?$ComPtr@V?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@QEAAAEAV012@AEBV012@@Z
??4?$ComPtr@VChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@QEAAAEAV012@AEBV012@@Z
??4?$ComPtr@VReferencedRegistryKey@@@WRL@Microsoft@@QEAAAEAV012@$$QEAV012@@Z
??4?$ComPtr@VReferencedRegistryKey@@@WRL@Microsoft@@QEAAAEAV012@AEBV012@@Z
??4?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAAEAV01@$$QEAV01@@Z
??4?$com_ptr_t@UIMrtResourceManager@@Uerr_returncode_policy@wil@@@wil@@QEAAAEAV01@PEAUIMrtResourceManager@@@Z
??4?$com_ptr_t@UIResourceContext@@Uerr_returncode_policy@wil@@@wil@@QEAAAEAV01@PEAUIResourceContext@@@Z
??4?$com_ptr_t@UITypeInfo@@Uerr_returncode_policy@wil@@@wil@@QEAAAEAV01@PEAUITypeInfo@@@Z
??4CCacheNode@@QEAAAEBV0@AEBV0@@Z
??4CFormatEtc@@QEAAAEBV0@AEBV0@@Z
??4CStatData@@QEAAAEBV0@AEBV0@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAAEAV01@AEBV01@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@QEAAAEAV01@AEBV01@@Z
??A?$CMap@PEAGAEAPEAGKAEAK@@QEAAAEAKAEAPEAG@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAXH@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@QEAAXH@Z
??I?$com_ptr_t@UIUnknown@@Uerr_returncode_policy@wil@@@wil@@QEAAPEAPEAUIUnknown@@XZ
??R<lambda_0a18120dc7dcec8cb07768015f9b0617>@@QEBAJXZ
??R<lambda_14b25aaf0db7771cb0bb6bcb1052a1a0>@@QEBAJXZ
??R<lambda_19600923239bd138db611a3bcd35a184>@@QEBAJXZ
??R<lambda_1bddd38f1c2c61820f0511b0dcb5aeed>@@QEBAJXZ
??R<lambda_1d7dcc53cb7b04382455cc4b0de5f8d7>@@QEBAJXZ
??R<lambda_239dc36ff89ef9343f5be4bc17d5a8ef>@@QEBAJXZ
??R<lambda_25839262837d068401bf8c3397db2d8a>@@QEBAJXZ
??R<lambda_301f3587bff926b4515b80b83f6cb3c1>@@QEBAJXZ
??R<lambda_32dfadbef8f2a61c0d809fa552c11f81>@@QEBAJXZ
??R<lambda_40922ab18465b876057f1185cc36db8e>@@QEBAJXZ
??R<lambda_447c46b66cbb21333d1664f5793f81f3>@@QEBAJXZ
??R<lambda_4927a812c17eeead1d983da7cbe73d5d>@@QEBAJXZ
??R<lambda_50ee3ecffe8efbd463e6350e39328809>@@QEBAJXZ
??R<lambda_56b5ba632d587fa357900841a044505e>@@QEBAJXZ
??R<lambda_5c690cab17f385c97bf7142c1739781b>@@QEBAJXZ
??R<lambda_623afaff1ea6960797c30da1c8e48c6d>@@QEBAJXZ
??R<lambda_67bd47486a8986df7d6cb4f09c809e77>@@QEBAJXZ
??R<lambda_6d542ea311a46020d30b3ebc4539ced7>@@QEBAJXZ
??R<lambda_715367da935c5581b17c1a3be965339d>@@QEBAJXZ
??R<lambda_7d1fe11c787a4af78d8dd42692fd1f09>@@QEBAJXZ
??R<lambda_85adfdbc59dc2fecc6c73766ac5726d0>@@QEBAJXZ
??R<lambda_901244bbe6ff11f30bcc324ded8f1e54>@@QEBAJXZ
??R<lambda_90c58536661702964630d6bd2c4c001f>@@QEBAJXZ
??R<lambda_9248f5e097f132b19a75522d4d896069>@@QEBAJXZ
??R<lambda_9ee25847ed46d519a0f8b2a7b76ad1cb>@@QEBAJXZ
??R<lambda_a4e555621f6ed4efaaeeaa7992cb2190>@@QEBAJXZ
??R<lambda_b2e3b810243455f1068e53fb5cb0f92b>@@QEBAJXZ
??R<lambda_baecf777eea7d88e008ba381e7d7d0c9>@@QEBAJXZ
??R<lambda_be18d0e1c9460e7bb92c1a447c19d4fe>@@QEBAJXZ
??R<lambda_c2debb2788f3ef9f8ec79bcf639a9eba>@@QEBAJXZ
??R<lambda_c44edb339ff6223e663ad4cffd1e49bf>@@QEBAJXZ
??R<lambda_c61124bf9311369ccd740ead4f8d81ee>@@QEBAJXZ
??R<lambda_d171dd235d7ccf127f18467165bcf888>@@QEBAJXZ
??R<lambda_d88a98539f99aa8d705874cde434eb96>@@QEBAJXZ
??R<lambda_e174a29c410f404b3b2cf06c7a80a00b>@@QEBAJXZ
??R<lambda_f3ee3880bbfa881d18ec7e87344dd5a6>@@QEBAJXZ
??R<lambda_f9b686faf07558546d2e0b9f147c5283>@@QEBAJXZ
??R<lambda_fcb92e6a7323f565a84aeece59385ee4>@@QEBAJXZ
??R<lambda_ffa983ffbf68526ea3a3e363083aba95>@@QEBA@XZ
??R?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAA_N$$QEAPEAX$$QEA_K01$$QEAI@Z
??RStringEquals@XWinRT@@QEBAJPEAUHSTRING__@@0PEA_N@Z
??RStringHash@XWinRT@@QEBAJPEAUHSTRING__@@PEAI@Z
??_E?$AdHocInterceptor@UIElementBehavior@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UIOleWindow@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UIPersist@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UISearchProtocol2@@@@UEAAPEAXI@Z
??_E?$AdHocInterceptor@UISearchProtocol@@@@UEAAPEAXI@Z
??_E?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UEAAPEAXI@Z
??_E?$CALLFRAME_CACHE_ENTRY@UNdrTypeInfo@@@@UEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_E?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAPEAXI@Z
??_E?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIEnumFORMATETC@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIEnumSTATSTG@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIStorage@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIStream@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIUnknown@@@@UEAAPEAXI@Z
??_E?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEAAPEAXI@Z
??_E?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAAPEAXI@Z
??_E?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@234@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@234@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBroker@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBrokerInternal@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardTaskCompletion@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIComClassIterator@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIDataObject@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIDragDropBroker@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIDragOperationInternal@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumFORMATETC@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumGUID@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumUnknown@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleDataFormatIterator@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleVerb@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleVerbIterator@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UITypeLibRegistration@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UITypeLibRegistrationReader@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIUnknown@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIWeakReference@@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_E?$__base@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAAPEAXI@Z
??_E?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAAPEAXI@Z
??_ECAbstractStream@@MEAAPEAXI@Z
??_ECAntiMoniker@@UEAAPEAXI@Z
??_ECBaseMInterfacePointerMarshalingStream@@MEAAPEAXI@Z
??_ECBaseMoniker@@UEAAPEAXI@Z
??_ECBindHost@@UEAAPEAXI@Z
??_ECBindHost@@W7EAAPEAXI@Z
??_ECCacheStream@@UEAAPEAXI@Z
??_ECClipDataObject@@MEAAPEAXI@Z
??_ECClipboardBroker@@UEAAPEAXI@Z
??_ECClipboardBrokerExternalReference@CClipboardBroker@@EEAAPEAXI@Z
??_ECClipboardBrokerMTAHelper@CClipboardBroker@@UEAAPEAXI@Z
??_ECCompositeMoniker@@UEAAPEAXI@Z
??_ECDAHolder@@EEAAPEAXI@Z
??_ECDAHolder@@G7EAAPEAXI@Z
??_ECDefLink@@EEAAPEAXI@Z
??_ECDefObject@@EEAAPEAXI@Z
??_ECDragDropBroker@@UEAAPEAXI@Z
??_ECDragOperation@@UEAAPEAXI@Z
??_ECEnumCategoriesOfCatalogClass@@UEAAPEAXI@Z
??_ECEnumFmt10@@UEAAPEAXI@Z
??_ECEnumFmt@@UEAAPEAXI@Z
??_ECFileMoniker@@EEAAPEAXI@Z
??_ECFormatOnlyDataObject@@UEAAPEAXI@Z
??_ECFrameFilter@@UEAAPEAXI@Z
??_ECGdiCustodian@@EEAAPEAXI@Z
??_ECHlprDialog@@UEAAPEAXI@Z
??_ECItemMoniker@@EEAAPEAXI@Z
??_ECLUAMoniker@@UEAAPEAXI@Z
??_ECLimitedWritableStorage@@UEAAPEAXI@Z
??_ECLimitedWritableStream@@UEAAPEAXI@Z
??_ECOAHolder@@EEAAPEAXI@Z
??_ECOAHolder@@G7EAAPEAXI@Z
??_ECObjrefMoniker@@UEAAPEAXI@Z
??_ECOleCache@@UEAAPEAXI@Z
??_ECOleCache@@WBI@EAAPEAXI@Z
??_ECPointerMoniker@@UEAAPEAXI@Z
??_ECProcessExtensionTbl@@UEAAPEAXI@Z
??_ECProcessPatternTbl@@UEAAPEAXI@Z
??_ECReadInterfaceDataFromInternalSourceMarshalingStream@@UEAAPEAXI@Z
??_ECReadInterfaceDataWithSourceAttributesMarshalingStream@@UEAAPEAXI@Z
??_ECReadOnlyStorage@@UEAAPEAXI@Z
??_ECReadOnlyStream@@UEAAPEAXI@Z
??_ECRefExportCount@@UEAAPEAXI@Z
??_ECSafeRefCount@@UEAAPEAXI@Z
??_ECSessionMoniker@@UEAAPEAXI@Z
??_ECSyncSync@@UEAAPEAXI@Z
??_ECSyncSync@@W7EAAPEAXI@Z
??_ECUnknown@@UEAAPEAXI@Z
??_ECUnkownOnlyWrapper@@UEAAPEAXI@Z
??_ECWriteInterfaceDataMarshalingStream@@UEAAPEAXI@Z
??_EChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_EChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_EClipboardDataObjectTask@@UEAAPEAXI@Z
??_EComClassIterator@@UEAAPEAXI@Z
??_EComTrace@@UEAAPEAXI@Z
??_EDISPATCH_CLIENT_FRAME@@EEAAPEAXI@Z
??_EDISPATCH_INTERCEPTOR@@UEAAPEAXI@Z
??_EDISPATCH_SERVER_FRAME@@EEAAPEAXI@Z
??_EDefaultIBindStatusCallback@@UEAAPEAXI@Z
??_EDefaultIBindStatusCallback@@WBA@EAAPEAXI@Z
??_EDragDropLogging@@UEAAPEAXI@Z
??_EDragDropTelemetry@@UEAAPEAXI@Z
??_EGitPtr@Internal@Windows@@UEAAPEAXI@Z
??_EINTERFACE_HELPER_CLSID@@UEAAPEAXI@Z
??_EInterceptor@@EEAAPEAXI@Z
??_EIterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAAPEAXI@Z
??_ELEGACY_FRAME@@MEAAPEAXI@Z
??_ELEGACY_INTERCEPTOR@@UEAAPEAXI@Z
??_ENdrTypeInfo@@EEAAPEAXI@Z
??_EOleClassInfoDataFormatIterator@@UEAAPEAXI@Z
??_EOleClassInfoVerb@@UEAAPEAXI@Z
??_EOleClassInfoVerbIterator@@UEAAPEAXI@Z
??_EOleClipboardTracing@@UEAAPEAXI@Z
??_EOleDragDropTracing@@UEAAPEAXI@Z
??_EReferencedRegistryKey@@UEAAPEAXI@Z
??_ERegistryDataFormatIterator@@UEAAPEAXI@Z
??_ERegistryTypeLibRegistration@@UEAAPEAXI@Z
??_ERegistryVerb@@UEAAPEAXI@Z
??_ERegistryVerbIterator@@UEAAPEAXI@Z
??_EResultException@wil@@UEAAPEAXI@Z
??_ESplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_ETraceLoggingProvider@wil@@MEAAPEAXI@Z
??_ETypeLibRegistrationEnumerator@@UEAAPEAXI@Z
??_ETypeLibRegistrationReader@@UEAAPEAXI@Z
??_EView@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAAPEAXI@Z
??_EWeakReferenceImpl@Details@WRL@Microsoft@@UEAAPEAXI@Z
??_Eexception@std@@UEAAPEAXI@Z
??_Etype_info@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UIElementBehavior@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UIOleWindow@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UIPersist@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UISearchProtocol2@@@@UEAAPEAXI@Z
??_G?$AdHocInterceptor@UISearchProtocol@@@@UEAAPEAXI@Z
??_G?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAPEAXI@Z
??_G?$CALLFRAME_CACHE@UNdrTypeInfo@@@@QEAAPEAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UEAAPEAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UNdrTypeInfo@@@@UEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAPEAXI@Z
??_G?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAPEAXI@Z
??_G?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAPEAXI@Z
??_G?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAAPEAXI@Z
??_G?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAAPEAXI@Z
??_G?$CWrapperBase@UIEnumFORMATETC@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIEnumSTATSTG@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIStorage@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIStream@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIUnknown@@@@UEAAPEAXI@Z
??_G?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEAAPEAXI@Z
??_G?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAAPEAXI@Z
??_G?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@234@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@234@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBroker@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBrokerInternal@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardTaskCompletion@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIComClassIterator@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIDataObject@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIDragDropBroker@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIDragOperationInternal@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumFORMATETC@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumGUID@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIEnumUnknown@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleDataFormatIterator@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleVerb@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIOleVerbIterator@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UITypeLibRegistration@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UITypeLibRegistrationReader@@VFtmBase@23@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIUnknown@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIWeakReference@@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_G?$__base@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAAPEAXI@Z
??_G?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAAPEAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAPEAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAPEAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAPEAXI@Z
??_GCAbstractStream@@MEAAPEAXI@Z
??_GCAntiMoniker@@UEAAPEAXI@Z
??_GCBaseMInterfacePointerMarshalingStream@@MEAAPEAXI@Z
??_GCBaseMoniker@@UEAAPEAXI@Z
??_GCBindHost@@UEAAPEAXI@Z
??_GCBrokerInstanceHolder@@QEAAPEAXI@Z
??_GCCacheStream@@UEAAPEAXI@Z
??_GCClipDataObject@@MEAAPEAXI@Z
??_GCClipboardBroker@@UEAAPEAXI@Z
??_GCClipboardBrokerExternalReference@CClipboardBroker@@EEAAPEAXI@Z
??_GCClipboardBrokerMTAHelper@CClipboardBroker@@UEAAPEAXI@Z
??_GCComCat@@AEAAPEAXI@Z
??_GCCompositeMoniker@@UEAAPEAXI@Z
??_GCCompositeMonikerEnum@@AEAAPEAXI@Z
??_GCDAHolder@@EEAAPEAXI@Z
??_GCDataAdviseCache@@QEAAPEAXI@Z
??_GCDdeObject@@AEAAPEAXI@Z
??_GCDefClient@@AEAAPEAXI@Z
??_GCDefLink@@EEAAPEAXI@Z
??_GCDefObject@@EEAAPEAXI@Z
??_GCDragDropBroker@@UEAAPEAXI@Z
??_GCDragOperation@@UEAAPEAXI@Z
??_GCDropTargetAdapter@@AEAAPEAXI@Z
??_GCEnumCategories@@QEAAPEAXI@Z
??_GCEnumCategoriesOfCatalogClass@@UEAAPEAXI@Z
??_GCEnumCategoriesOfClass@@QEAAPEAXI@Z
??_GCEnumClassesOfCategories@@QEAAPEAXI@Z
??_GCEnumFmt10@@UEAAPEAXI@Z
??_GCEnumFmt@@UEAAPEAXI@Z
??_GCFileMoniker@@EEAAPEAXI@Z
??_GCFormatOnlyDataObject@@UEAAPEAXI@Z
??_GCFrameFilter@@UEAAPEAXI@Z
??_GCGdiCustodian@@EEAAPEAXI@Z
??_GCHlprDialog@@UEAAPEAXI@Z
??_GCItemMoniker@@EEAAPEAXI@Z
??_GCLUAMoniker@@UEAAPEAXI@Z
??_GCLimitedWritableStorage@@UEAAPEAXI@Z
??_GCLimitedWritableStream@@UEAAPEAXI@Z
??_GCOAHolder@@EEAAPEAXI@Z
??_GCObjList@CBindCtx@@QEAAPEAXI@Z
??_GCObjrefMoniker@@UEAAPEAXI@Z
??_GCOleCache@@UEAAPEAXI@Z
??_GCPageHolder@@QEAAPEAXI@Z
??_GCPointerMoniker@@UEAAPEAXI@Z
??_GCPres@@QEAAPEAXI@Z
??_GCProcessExtensionTbl@@UEAAPEAXI@Z
??_GCProcessPatternTbl@@UEAAPEAXI@Z
??_GCProperty@@QEAAPEAXI@Z
??_GCPropertySection@@QEAAPEAXI@Z
??_GCROTItem@@QEAAPEAXI@Z
??_GCReadInterfaceDataFromInternalSourceMarshalingStream@@UEAAPEAXI@Z
??_GCReadInterfaceDataWithSourceAttributesMarshalingStream@@UEAAPEAXI@Z
??_GCReadOnlyStorage@@UEAAPEAXI@Z
??_GCReadOnlyStream@@UEAAPEAXI@Z
??_GCRefExportCount@@UEAAPEAXI@Z
??_GCRotMonikerEnum@@QEAAPEAXI@Z
??_GCSafeRefCount@@UEAAPEAXI@Z
??_GCSessionMoniker@@UEAAPEAXI@Z
??_GCSyncSync@@UEAAPEAXI@Z
??_GCUnknown@@UEAAPEAXI@Z
??_GCUnkownOnlyWrapper@@UEAAPEAXI@Z
??_GCWriteInterfaceDataMarshalingStream@@UEAAPEAXI@Z
??_GCallFrame@@QEAAPEAXI@Z
??_GChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_GChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_GClipboardDataObjectTask@@UEAAPEAXI@Z
??_GClpboardOwnerState@@QEAAPEAXI@Z
??_GComClassIterator@@UEAAPEAXI@Z
??_GComTrace@@UEAAPEAXI@Z
??_GDISPATCH_CLIENT_FRAME@@EEAAPEAXI@Z
??_GDISPATCH_INTERCEPTOR@@UEAAPEAXI@Z
??_GDISPATCH_SERVER_FRAME@@EEAAPEAXI@Z
??_GDefaultIBindStatusCallback@@UEAAPEAXI@Z
??_GDragDropLogging@@UEAAPEAXI@Z
??_GDragDropTelemetry@@UEAAPEAXI@Z
??_GGitPtr@Internal@Windows@@UEAAPEAXI@Z
??_GINTERFACE_HELPER_CLSID@@UEAAPEAXI@Z
??_GInterceptor@@EEAAPEAXI@Z
??_GIterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAAPEAXI@Z
??_GLEGACY_FRAME@@MEAAPEAXI@Z
??_GLEGACY_INTERCEPTOR@@UEAAPEAXI@Z
??_GMD_INTERFACE@@AEAAPEAXI@Z
??_GMD_INTERFACE_CACHE@@QEAAPEAXI@Z
??_GNdrTypeInfo@@EEAAPEAXI@Z
??_GOleClassInfoDataFormatIterator@@UEAAPEAXI@Z
??_GOleClassInfoVerb@@UEAAPEAXI@Z
??_GOleClassInfoVerbIterator@@UEAAPEAXI@Z
??_GOleClipboardTracing@@UEAAPEAXI@Z
??_GOleDragDropTracing@@UEAAPEAXI@Z
??_GReferencedRegistryKey@@UEAAPEAXI@Z
??_GRegistryDataFormatIterator@@UEAAPEAXI@Z
??_GRegistryTypeLibRegistration@@UEAAPEAXI@Z
??_GRegistryVerb@@UEAAPEAXI@Z
??_GRegistryVerbIterator@@UEAAPEAXI@Z
??_GResultException@wil@@UEAAPEAXI@Z
??_GSDDInfo@@QEAAPEAXI@Z
??_GSplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAPEAXI@Z
??_GTraceLoggingProvider@wil@@MEAAPEAXI@Z
??_GTypeLibRegistrationEnumerator@@UEAAPEAXI@Z
??_GTypeLibRegistrationReader@@UEAAPEAXI@Z
??_GView@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@MEAAPEAXI@Z
??_GWeakReferenceImpl@Details@WRL@Microsoft@@UEAAPEAXI@Z
??_Gexception@std@@UEAAPEAXI@Z
??_Gtype_info@@UEAAPEAXI@Z
??_H@YAXPEAX_K1P6APEAX0@Z@Z
??_I@YAXPEAX_K1P6AX0@Z@Z
??_V@YAXPEAX@Z
??_V@YAXPEAX_K@Z
??__Finstance@?1??Get@OleClipboardAggregateTelemetry@@CAAEAPEBU_tlgProvider_t@@XZ@YAXXZ
?ANSIStmToStr@@YAJAEAVCStmBufRead@@PEAPEADPEAK@Z
?ANSIStrToStm@@YAJAEAVCStmBufWrite@@PEBD@Z
?Acquire@?$ProcessLocalStorageData@UProcessLocalData@details_abi@wil@@@details_abi@wil@@SAJPEBDPEAPEAV123@@Z
?Acquire@?$ProcessLocalStorageData@VFeatureStateData@details_abi@wil@@@details_abi@wil@@SAJPEBDPEAPEAV123@@Z
?Acquire@Git@Details@Internal@Windows@@QEAAJXZ
?Add@CDdeConnectionTable@@QEAAJKGK@Z
?AddClient@@YAHPEAPEAXPEAX1@Z
?AddConnection@CDefObject@@UEAAKKK@Z
?AddEntry@CProcessExtensionTbl@@AEAAJAEBU_GUID@@PEBGK@Z
?AddExtent@CExtentList@@QEAAJPEBU_MONIKEREXTENT@@@Z
?AddItem@?$CArray@VCCacheNode@@@@QEAAKAEBVCCacheNode@@@Z
?AddItem@?$CArray@VCFormatEtc@@@@QEAAKAEBVCFormatEtc@@@Z
?AddItem@?$CArray@VCStatData@@@@QEAAKAEBVCStatData@@@Z
?AddObj@CGdiCustodian@@QEAAJPEAX@Z
?AddPair@Chunk@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@QEAAJPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@456@@Z
?AddProperty@CPropertySection@@QEAAXPEAVCProperty@@@Z
?AddRef@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAKXZ
?AddRef@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?AddRef@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAKXZ
?AddRef@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIEnumFORMATETC@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIEnumSTATSTG@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIStorage@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIStream@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIUnknown@@@@UEAAKXZ
?AddRef@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?AddRef@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardBroker@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardBrokerInternal@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIComClassIterator@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDataObject@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragOperationInternal@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumFORMATETC@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumGUID@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleDataFormatIterator@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleVerb@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleVerbIterator@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIUnknown@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIWeakReference@@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@CAbstractStream@@MEAAKXZ
?AddRef@CAdvSinkImpl@CDefLink@@UEAAKXZ
?AddRef@CAdvSinkImpl@CDefObject@@UEAAKXZ
?AddRef@CAdviseSinkImpl@CDefClient@@UEAAKXZ
?AddRef@CAdviseSinkImpl@COleCache@@UEAAKXZ
?AddRef@CBaseMoniker@@UEAAKXZ
?AddRef@CBaseMoniker@@W7EAAKXZ
?AddRef@CBindCtx@@UEAAKXZ
?AddRef@CBindHost@@UEAAKXZ
?AddRef@CBindStatusCallback@@UEAAKXZ
?AddRef@CBindStatusCallback@@W7EAAKXZ
?AddRef@CBrokeredClipDataObject@@UEAAKXZ
?AddRef@CBrokeredClipDataObject@@W7EAAKXZ
?AddRef@CCacheDataImpl@COleCache@@UEAAKXZ
?AddRef@CCacheStream@@UEAAKXZ
?AddRef@CCacheUnkImpl@COleCache@@UEAAKXZ
?AddRef@CCacheViewImpl@COleCache@@UEAAKXZ
?AddRef@CClassMoniker@@UEAAKXZ
?AddRef@CClassMoniker@@W7EAAKXZ
?AddRef@CClassMoniker@@WBA@EAAKXZ
?AddRef@CClassObj@@UEAAKXZ
?AddRef@CClipClientDataWrapper@@UEAAKXZ
?AddRef@CClipClientDataWrapper@@W7EAAKXZ
?AddRef@CClipClientDataWrapper@@WBA@EAAKXZ
?AddRef@CClipDataObject@@UEAAKXZ
?AddRef@CClipDataObject@@W7EAAKXZ
?AddRef@CComCat@@UEAAKXZ
?AddRef@CComCat@@W7EAAKXZ
?AddRef@CCompositeMonikerEnum@@UEAAKXZ
?AddRef@CDAHolder@@UEAAKXZ
?AddRef@CDataObjectImpl@CDdeObject@@UEAAKXZ
?AddRef@CDdeServerCallMgr@@UEAAKXZ
?AddRef@CDdeServerCallMgr@@W7EAAKXZ
?AddRef@CDdeServerCallMgr@@WBA@EAAKXZ
?AddRef@CDefClassFactory@@UEAAKXZ
?AddRef@CDefLink@@UEAAKXZ
?AddRef@CDefLink@@W7EAAKXZ
?AddRef@CDefLink@@WBA@EAAKXZ
?AddRef@CDefLink@@WBI@EAAKXZ
?AddRef@CDefLink@@WCA@EAAKXZ
?AddRef@CDefObject@@UEAAKXZ
?AddRef@CDefObject@@W7EAAKXZ
?AddRef@CDefObject@@WBA@EAAKXZ
?AddRef@CDefObject@@WBI@EAAKXZ
?AddRef@CDefObject@@WCA@EAAKXZ
?AddRef@CDelayUnlockContainer@@UEAAKXZ
?AddRef@CDragDataObject@@UEAAKXZ
?AddRef@CEMfObject@@UEAAKXZ
?AddRef@CEnumCategories@@UEAAKXZ
?AddRef@CEnumCategoriesOfClass@@UEAAKXZ
?AddRef@CEnumClassesOfCategories@@UEAAKXZ
?AddRef@CEnumConnectionsImpl@@UEAAKXZ
?AddRef@CEnumFormatEtc@@UEAAKXZ
?AddRef@CEnumFormatEtcDataArray@@UEAAKXZ
?AddRef@CEnumSTATDATA@@UEAAKXZ
?AddRef@CEnumStatData@@UEAAKXZ
?AddRef@CEnumVerb@@EEAAKXZ
?AddRef@CFilteredRunningObjectTable@@EEAAKXZ
?AddRef@CFont@@UEAAKXZ
?AddRef@CFont@@W7EAAKXZ
?AddRef@CFont@@WBA@EAAKXZ
?AddRef@CFont@@WBI@EAAKXZ
?AddRef@CFont@@WCA@EAAKXZ
?AddRef@CFont@@WCI@EAAKXZ
?AddRef@CFontEventsCP@@UEAAKXZ
?AddRef@CGdiCustodian@@UEAAKXZ
?AddRef@CGenObject@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInner@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?AddRef@CInnerUnk@CComCat@@UEAAKXZ
?AddRef@CInterfaceFromWindowProp@@UEAAKXZ
?AddRef@CLUAMoniker@@UEAAKXZ
?AddRef@CLUAMoniker@@W7EAAKXZ
?AddRef@CLUAMoniker@@WCI@EAAKXZ
?AddRef@CLUAMoniker@@WDA@EAAKXZ
?AddRef@CMarshalImplPStream@@UEAAKXZ
?AddRef@CMfObject@@UEAAKXZ
?AddRef@CMonikerFactory@@UEAAKXZ
?AddRef@CMonikerFactory@@W7EAAKXZ
?AddRef@CNotifyCP@@UEAAKXZ
?AddRef@COAHolder@@UEAAKXZ
?AddRef@COleCache@@UEAAKXZ
?AddRef@COleCache@@W7EAAKXZ
?AddRef@COleCache@@WBA@EAAKXZ
?AddRef@COleClientSiteImpl@CDefClient@@UEAAKXZ
?AddRef@COleItemContainerImpl@CDdeObject@@UEAAKXZ
?AddRef@COleObjectImpl@CDdeObject@@UEAAKXZ
?AddRef@CPackagerMoniker@@UEAAKXZ
?AddRef@CPageHolder@@UEAAKXZ
?AddRef@CPersistStgImpl@CDdeObject@@UEAAKXZ
?AddRef@CPictioFileStream@@UEAAKXZ
?AddRef@CPicture@@UEAAKXZ
?AddRef@CPicture@@W7EAAKXZ
?AddRef@CPicture@@WBA@EAAKXZ
?AddRef@CPicture@@WBI@EAAKXZ
?AddRef@CPicture@@WCA@EAAKXZ
?AddRef@CPicture@@WCI@EAAKXZ
?AddRef@CPointerMoniker@@UEAAKXZ
?AddRef@CPointerMoniker@@W7EAAKXZ
?AddRef@CPointerMoniker@@WCI@EAAKXZ
?AddRef@CPrivDragDrop@@UEAAKXZ
?AddRef@CPrivUnknown@CDefLink@@UEAAKXZ
?AddRef@CPrivUnknown@CDefObject@@UEAAKXZ
?AddRef@CProxyManagerImpl@CDdeObject@@UEAAKXZ
?AddRef@CRotMonikerEnum@@UEAAKXZ
?AddRef@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?AddRef@CRunningObjectTable@@UEAAKXZ
?AddRef@CRunningObjectTable@@W7EAAKXZ
?AddRef@CSessionMoniker@@UEAAKXZ
?AddRef@CSessionMoniker@@W7EAAKXZ
?AddRef@CSessionMoniker@@WCI@EAAKXZ
?AddRef@CStdClassFactory@@UEAAKXZ
?AddRef@CStreamDummy@@UEAAKXZ
?AddRef@CSyncSync@@UEAAKXZ
?AddRef@CTrackingCompositeMoniker@@UEAAKXZ
?AddRef@CTrackingFileMoniker@@UEAAKXZ
?AddRef@CUnknownImpl@CDdeObject@@UEAAKXZ
?AddRef@CUnknownImpl@CDefClient@@UEAAKXZ
?AddRef@CUrlMonWrapper@@UEAAKXZ
?AddRef@CallFrame@@UEAAKXZ
?AddRef@CallFrame@@W7EAAKXZ
?AddRef@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?AddRef@ComPsClassFactory@@UEAAKXZ
?AddRef@ComPsClassFactory@@W7EAAKXZ
?AddRef@CsCatInfo@@UEAAKXZ
?AddRef@DDE_CHANNEL@@UEAAKXZ
?AddRef@DDE_CHANNEL@@W7EAAKXZ
?AddRef@DefaultIBindStatusCallback@@UEAAKXZ
?AddRef@DefaultIBindStatusCallback@@W7EAAKXZ
?AddRef@Interceptor@@EEAAKXZ
?AddRef@Interceptor@@G7EAAKXZ
?AddRef@Interceptor@@GBA@EAAKXZ
?AddRef@Interceptor@@GBI@EAAKXZ
?AddRef@Interceptor@@GCI@EAAKXZ
?AddRef@InterfaceWalkerFree@@UEAAKXZ
?AddRef@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@LEGACY_FRAME@@UEAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@UEAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@W7EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBA@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBI@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WCA@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WCI@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WDI@EAAKXZ
?AddRef@MarshallingChannel@@UEAAKXZ
?AddRef@MarshallingChannel@@W7EAAKXZ
?AddRef@SSimpleWalker@@UEAAKXZ
?AddRef@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?AddRef@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?AddRef@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?AddRefHfont@CFont@@UEAAJPEAUHFONT__@@@Z
?AddRefInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAX@Z
?AddReservedItem@?$CArray@VCCacheNode@@@@QEAAHAEBVCCacheNode@@K@Z
?AddSection@CPropertySet@@QEAAJPEAVCPropertySection@@@Z
?AddSection@CPropertySet@@QEAAPEAVCPropertySection@@U_GUID@@@Z
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAJPEAV?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@@Z
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UNdrTypeInfo@@@@QEAAJPEAV?$CALLFRAME_CACHE@UNdrTypeInfo@@@@@Z
?AddToCache@MD_INTERFACE@@QEAAJPEAUMD_INTERFACE_CACHE@@@Z
?Advise@CDAHolder@@UEAAJPEAUIDataObject@@PEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?Advise@CDataAdviseCache@@QEAAJPEAUIDataObject@@PEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?Advise@CDefLink@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@CDefObject@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@CFontEventsCP@@UEAAJPEAUIUnknown@@PEAK@Z
?Advise@CNotifyCP@@UEAAJPEAUIUnknown@@PEAK@Z
?Advise@COAHolder@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@COleObjectImpl@CDdeObject@@UEAAJPEAUIAdviseSink@@PEAK@Z
?AdviseData@CDefClient@@QEAAJPEAUHWND__@@GPEAXPEAH@Z
?AdviseOn@CDdeObject@@AEAAJGH@Z
?AdviseStdItems@CDefClient@@QEAAJPEAUHWND__@@GPEAXPEAH@Z
?AgeOutEntries@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?AgeOutEntries@?$CALLFRAME_CACHE@UNdrTypeInfo@@@@QEAAXXZ
?AicGetTokenForCOM@@YAJPEAUHWND__@@PEBGPEAU_GUID@@1111KKHPEAXPEAPEAX@Z
?AicpAsyncFinishCall@@YAKPEAU_RPC_ASYNC_STATE@@HKK@Z
?AicpCreateBindingHandle@@YAKPEAGHPEAPEAX@Z
?AicpStartAIS@@YAKK@Z
?AllButFirst@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?AllButLast@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?Alloc@CallFrame@@QEAAPEAX_K@Z
?Alloc@CallFrame@@QEAAPEAX_KH@Z
?AllocBuffer@CallFrame@@QEAAPEAX_K@Z
?AllocDdeChannel@CDdeObject@@QEAAHPEAPEAVDDE_CHANNEL@@H@Z
?AllocStack@CallFrame@@QEAAJ_K@Z
?Allocate@?$StringTraits@PEAUHSTRING__@@@@SAJIPEAPEAGPEAPEAUHSTRING_BUFFER__@@@Z
?AnalyzeTypeInfo@@YAJPEAUITypeInfo@@PEAPEAU1@1PEAGPEAU_GUID@@1PEA_NPEAJ@Z
?ApartmentDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?AppModelPolicy_GetPolicy_Internal@@YAJPEAXW4AppModelPolicy_Type@@PEAW4AppModelPolicy_PolicyValue@@PEAU_PS_PKG_CLAIM@@PEA_K@Z
?AreNoClients@@YAHPEAX@Z
?AspectsUpdated@COleCache@@AEAAXK@Z
?AssignDragDropEndpointProperty@@YAJPEAUHWND__@@PEAUIDropTarget@@_N@Z
?AsyncGetClassBits@CUrlMonWrapper@@UEAAJAEBU_GUID@@PEBG1KK1PEAUIBindCtx@@K0K@Z
?Attach@?$ComPtr@UIStorage@@@WRL@Microsoft@@QEAAXPEAUIStorage@@@Z
?Attach@?$ComPtr@UIStream@@@WRL@Microsoft@@QEAAXPEAUIStream@@@Z
?Attach@?$ComPtr@UIUnknown@@@WRL@Microsoft@@QEAAXPEAUIUnknown@@@Z
?Attach@?$ComPtr@V?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@QEAAXPEAV?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@Z
?Attach@?$ComPtr@VCEnumCategoriesOfCatalogClass@@@WRL@Microsoft@@QEAAXPEAVCEnumCategoriesOfCatalogClass@@@Z
?Attach@?$ComPtr@VCEnumFmt10@@@WRL@Microsoft@@QEAAXPEAVCEnumFmt10@@@Z
?Attach@?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@QEAAXPEAVClipboardDataObjectTask@@@Z
?Attach@?$ComPtr@VComClassIterator@@@WRL@Microsoft@@QEAAXPEAVComClassIterator@@@Z
?Attach@?$ComPtr@VOleClassInfoDataFormatIterator@@@WRL@Microsoft@@QEAAXPEAVOleClassInfoDataFormatIterator@@@Z
?Attach@?$ComPtr@VRegistryDataFormatIterator@@@WRL@Microsoft@@QEAAXPEAVRegistryDataFormatIterator@@@Z
?Attach@?$ComPtr@VTypeLibRegistrationEnumerator@@@WRL@Microsoft@@QEAAXPEAVTypeLibRegistrationEnumerator@@@Z
?Base64ToIStream@@YAJPEAG_KPEAPEAUIStream@@@Z
?BeginUpdates@CDefLink@@AEAAXXZ
?BindIfRunning@CDefLink@@UEAAJXZ
?BindSpeedFromBindCtx@@YAKPEAUIBindCtx@@@Z
?BindToObject@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToSource@CDefLink@@UEAAJKPEAUIBindCtx@@@Z
?BindToStorage@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BmDuplicate@@YAPEAUHBITMAP__@@PEAU1@PEAKPEAUtagBITMAP@@@Z
?BreakIntoDebugger@@YAXXZ
?BreakOnFailureIfRequested@@YAXJ@Z
?BuildPalette@CBmpLoader@@AEAAJPEAPEAUHPALETTE__@@@Z
?BuildRotData@@YAJPEAUIBindCtx@@PEAUIMoniker@@PEAEKPEAK@Z
?BuildRotDataFromDisplayName@@YAJPEAUIBindCtx@@PEAUIMoniker@@PEAEKPEAK@Z
?CAntiMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CClipClientDataWrapper_GetData@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@V?$ComPtr@UIDataObject@@@WRL@Microsoft@@V?$ComPtr@UIClipboardTaskCompletion@@@56@@Z
?CClipClientDataWrapper_GetDataHere@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@V?$ComPtr@UIDataObject@@@WRL@Microsoft@@V?$ComPtr@UIClipboardTaskCompletion@@@56@@Z
?CClipClientDataWrapper_InnerClipDataQueryInterface@OleClipboardTracing@@SAXJAEBU_GUID@@PEAPEAXV?$ComPtr@UIDataObject@@@WRL@Microsoft@@V?$ComPtr@UIClipboardTaskCompletion@@@45@@Z
?CClipDataObject_CacheDataPointerEtw@OleClipboardTracing@@SAXJPEAUIDataObject@@PEAVClipboardDataObjectTask@@@Z
?CClipDataObject_GetCanonicalFormatEtcEtw@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@0@Z
?CClipDataObject_GetDataEtw@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@W4FormatMatchFlag@@PEAUIDataObject@@PEAVClipboardDataObjectTask@@@Z
?CClipDataObject_GetDataHereImplEtw@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@_NW4FormatMatchFlag@@PEAUIDataObject@@PEAVClipboardDataObjectTask@@@Z
?CClipDataObject_MatchFormatetcEtw@OleClipboardTracing@@SAXW4FormatMatchFlag@@PEAUtagFORMATETC@@HPEAW4tagTYMED@@H@Z
?CClipDataObject_QueryGetDataEtw@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@W4FormatMatchFlag@@@Z
?CClipDataObject_SetDataEtw@OleClipboardTracing@@SAXJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@PEAVClipboardDataObjectTask@@@Z
?CComCatCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CComCatCF_CreateInstanceInternal@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX_N@Z
?CComCatCSCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CCompositeMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CDragOperation_DropTargetChanged@OleDragDropTracing@@SAXI@Z
?CDragOperation_IsDropAllowed@OleDragDropTracing@@SAX_NPEBG@Z
?CItemMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CLIPFORMAT_UserFreeExt@@YAXPEAKPEAG@Z
?CLIPFORMAT_UserMarshalExt@@YAPEAEPEAKPEAEPEAG@Z
?CLIPFORMAT_UserSizeExt@@YAKPEAKKPEAG@Z
?CLIPFORMAT_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAG@Z
?CLSIDFromAtom@@YAHGPEAU_GUID@@@Z
?CLSIDFromAtomWithTreatAs@@YAJPEAGPEAU_GUID@@PEAW4CNVTYP@@@Z
?CPackagerMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CPointerMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?Cache@COleCache@@UEAAJPEAUtagFORMATETC@@KPEAK@Z
?CacheDataPointer@CClipDataObject@@QEAA?AV?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@XZ
?CalcFileMonikerHash@@YAJPEAGKPEAK@Z
?CalculateColorTableSize@@YAHIIIIPEAK0@Z
?CalculateSpinCount@@YAKXZ
?CallIndirect@?$AdHocInterceptor@UIElementBehavior@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UIOleWindow@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UIPersist@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UISearchProtocol2@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@?$AdHocInterceptor@UISearchProtocol@@@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@Interceptor@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@LEGACY_INTERCEPTOR@@UEAAJPEAJKPEAXPEAK@Z
?CallInitCommonControls@@YAHXZ
?CallbackFuncForDraw@CEMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEBXH_N@Z
?CallbackFuncForDraw@CMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CallbackFuncForDraw@CPicture@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CallbackFuncForGetColorSet@CMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAHK@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UNdrTypeInfo@@@@QEAAHK@Z
?CanCallBack@CDdeObject@@AEAAHPEAH@Z
?CanCastTo@?$ImplementsHelper@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00UIWeakReferenceSource@@@Details@WRL@Microsoft@@IEAAJAEBU_GUID@@PEAPEAXPEA_N@Z
?CanCastTo@?$ImplementsHelper@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00UIWeakReferenceSource@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@IEAAJAEBU_GUID@@PEAPEAXPEA_N@Z
?CanRetrieveOle2FromOle1@@YAHI@Z
?Cancel@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?Cancel@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?CancelDrag@CDragOperation@@UEAAJXZ
?CanonHeader@CBmpLoader@@AEAAJXZ
?CaptureCallerToken@@YAJPEAPEAX@Z
?CbParam@CallFrame@@QEBAKKAEBUPARAM_DESCRIPTION@@@Z
?ChangeData@CEMfObject@@AEAAJPEAUHENHMETAFILE__@@H@Z
?ChangeData@CGenObject@@AEAAJPEAXH@Z
?ChangeData@CMfObject@@AEAAJPEAXH@Z
?ChangeTopic@CDdeObject@@AEAAJPEAD@Z
?ChangeVersion@TagManager@SecureVersionTag@XWinRT@@QEAAJXZ
?CharUpperStub@@YAPEAGPEAG@Z
?CheckBitmapBits@@YAHPEBUtagBITMAPINFOHEADER@@KK@Z
?CheckCallerIntegrityLevelIsAtLeast@@YAJK@Z
?CheckOffset@@YAJ_K00@Z
?CheckTymedCFCombination@@YAJPEAUtagFORMATETC@@@Z
?CheckUninitDde@@YAXH@Z
?ChkName@CFont@@QEAAJPEAG@Z
?CleanStack@CMfObject@@AEAAXXZ
?CleanStack@CPicture@@AEAAXXZ
?Cleanup@CHashTable@@UEAAXP6AXPEAUSHashChain@@@Z@Z
?CleanupAndInvalidate@CHashTable@@UEAAXP6AXPEAUSHashChain@@@Z@Z
?CleanupApartment@CRunningObjectTable@@QEAAJK@Z
?CleanupClipboardThreadpoolWorker@@YAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_WAIT@@J@Z
?CleanupExtEntry@@YAXPEAUSHashChain@@@Z
?CleanupFn@CDefLink@@EEAAXXZ
?CleanupFn@CDefObject@@EEAAXXZ
?CleanupFn@COleCache@@EEAAXXZ
?CleanupFn@CRefExportCount@@EEAAXXZ
?Clear@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJXZ
?Clear@CEnumConnectionsImpl@@QEAAXXZ
?Clear@ThreadLocalData@details_abi@wil@@QEAAXXZ
?ClientToDelegate@CDataAdviseCache@@AEAAJKPEAK@Z
?ClipboardBroker_HungBrokerThread@OleClipboardTracing@@SAXJJ@Z
?ClipboardBroker_TryFlushClipboardOnShutdown@OleClipboardTracing@@SAXPEBGK@Z
?ClipboardInitializeBroker@@YAHXZ
?ClipboardInitializeWindow@@YAHXZ
?ClipboardProcessUninitialize@@YAXXZ
?ClipboardUninitialize@@YAXXZ
?ClipfmtToStm@@YAJAEAVCStmBufWrite@@KKW4TXTTYPE@@@Z
?Clone@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJPEAPEAUIEnumCATEGORYINFO@@@Z
?Clone@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CAbstractStream@@MEAAJPEAPEAUIStream@@@Z
?Clone@CCompositeMonikerEnum@@UEAAJPEAPEAUIEnumMoniker@@@Z
?Clone@CEnumCategories@@UEAAJPEAPEAUIEnumCATEGORYINFO@@@Z
?Clone@CEnumCategoriesOfCatalogClass@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumCategoriesOfClass@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumClassesOfCategories@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumConnectionsImpl@@UEAAJPEAPEAUIEnumConnections@@@Z
?Clone@CEnumFmt10@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFmt@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtc@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtcDataArray@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumSTATDATA@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?Clone@CEnumStatData@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?Clone@CEnumVerb@@EEAAJPEAPEAUIEnumOLEVERB@@@Z
?Clone@CFont@@UEAAJPEAPEAUIFont@@@Z
?Clone@CLimitedWritableStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CPictioFileStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CReadOnlyStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CRotMonikerEnum@@UEAAJPEAPEAUIEnumMoniker@@@Z
?Clone@CStreamDummy@@UEAAJPEAPEAUIStream@@@Z
?Clone@ComClassIterator@@UEAAJPEAPEAUIComClassIterator@@@Z
?Clone@OleClassInfoDataFormatIterator@@UEAAJPEAPEAUIOleDataFormatIterator@@@Z
?Clone@RegistryDataFormatIterator@@UEAAJPEAPEAUIOleDataFormatIterator@@@Z
?Clone@TypeLibRegistrationEnumerator@@UEAAJPEAPEAUIEnumUnknown@@@Z
?Close@CDefLink@@UEAAJK@Z
?Close@CDefObject@@UEAAJK@Z
?Close@COleObjectImpl@CDdeObject@@UEAAJK@Z
?CloseAccessor@?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@UEAAJPEAUIUrlAccessor@@@Z
?CloseAccessor@?$AdHocInterceptorForwarders@UISearchProtocol@@UISearchProtocol2@@@@UEAAJPEAUIUrlAccessor@@@Z
?CloseHandle@details@wil@@YAXPEAX@Z
?CoDecMTAWorker@@YAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_WORK@@@Z
?ComTraceHr@@YAXJPEBD0HPEBGZZ
?ComTraceMessage@@YAXJPEBD0HW4TraceLevel@@PEBGZZ
?Commit@CAbstractStream@@MEAAJK@Z
?Commit@CLimitedWritableStorage@@UEAAJK@Z
?Commit@CLimitedWritableStream@@UEAAJK@Z
?Commit@CPictioFileStream@@UEAAJK@Z
?Commit@CReadOnlyStorage@@UEAAJK@Z
?Commit@CReadOnlyStream@@UEAAJK@Z
?Commit@CStreamDummy@@UEAAJK@Z
?CommonPrefixWith@CAntiMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CBaseMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CClassMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CCompositeMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CFileMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CItemMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CLUAMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CObjrefMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CPackagerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CPointerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CSessionMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?Compare@CExtHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@UsageIndexProperty@details_abi@wil@@QEBAHPEAX_K@Z
?CompareAssocKey@CMapKeyToValue@@AEBAHPEAUCAssoc@1@PEAXI@Z
?CompareNCharacters@@YAHPEAG0K@Z
?CompleteDeferredDropRegistration@@YAXPEAUHWND__@@_J@Z
?CompleteDrop@CDragOperation@@QEAAJXZ
?ComposeWith@CAntiMoniker@@EEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CBaseMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CClassMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CCompositeMoniker@@EEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CFileMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CItemMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CLUAMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CPackagerMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CPointerMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CSessionMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWithEnum@@YAJPEAUIMoniker@@PEAUIEnumMoniker@@PEAPEAU1@@Z
?ComputeConformance@CallFrame@@QEAA_KPEAEPEBE@Z
?ComputeVariance@CallFrame@@QEAAXPEAEPEBEPEAK2@Z
?Concat@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@QEAAJPEBG@Z
?Connect@CDdeServerCallMgr@@UEAAJPEAUIUnknown@@@Z
?Connect@CProxyManagerImpl@CDdeObject@@UEAAJU_GUID@@AEBU3@@Z
?Connect@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAUIUnknown@@@Z
?ContextSensitiveHelp@?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@UEAAJH@Z
?ContextSensitiveHelp@?$AdHocInterceptorForwarders@UIOleWindow@@UIOleInPlaceObject@@@@UEAAJH@Z
?ContextSensitiveHelp@?$AdHocInterceptorForwarders@UIOleWindow@@UIOleInPlaceObjectWindowless@@@@UEAAJH@Z
?Convert10TargetDevice@@YAJPEAXPEAPEAUtagDVTARGETDEVICE@@@Z
?Convert20TargetDevice@@YAJPEBUtagDVTARGETDEVICE@@PEAPEAX@Z
?ConvertMactPict@@YAPEAUHMETAFILE__@@PEAX@Z
?Copy@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@CCacheStream@@UEAAJPEAUIStream@@J@Z
?Copy@CallFrame@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@DISPATCH_CLIENT_FRAME@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@DISPATCH_SERVER_FRAME@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?CopyConformantArrayPriv@CallFrame@@QEAAXPEAEPEAPEAEPEBEH@Z
?CopyEmbeddedPointers@CallFrame@@QEAAXPEAE0PEBEH@Z
?CopyEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAE0PEBEH@Z
?CopyFormatEtcDataArray@@YAXPEAUFORMATETCDATAARRAY@@0_KH@Z
?CopyFrom@CEnumConnectionsImpl@@QEAAJPEAVCRgPv@@@Z
?CopyPathFromUnicodeExtent@@YAJPEFAU_MONIKEREXTENT@@AEAPEAGAEAG@Z
?CopyPathToUnicodeExtent@@YAJPEAGKAEAPEAU_MONIKEREXTENT@@@Z
?CopyRecord@OAUTIL@@AEAAJPEAX0PEAUITypeInfo@@H@Z
?CopyRecordAndAlloc@OAUTIL@@AEAAJPEAUIRecordInfo@@PEAXPEAPEAXH@Z
?CopyRecordField@OAUTIL@@AEAAJPEAE0PEAUtagTYPEDESC@@PEAUITypeInfo@@H@Z
?CopyString@@YAPEADPEBD@Z
?CopyString@@YAPEAGPEBG@Z
?CopyStringLower@@YAPEAGPEBG@Z
?CopyTo@CAbstractStream@@MEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CLimitedWritableStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CLimitedWritableStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CPictioFileStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CReadOnlyStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CReadOnlyStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CStreamDummy@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyWorker@CallFrame@@QEAAXPEAEPEAPEAEPEBEH@Z
?Count@CCompositeMoniker@@QEAAJPEAK@Z
?CountRefs@CDdeServerCallMgr@@UEAAKXZ
?CountRefs@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?CountSegments@@YAHPEAG@Z
?CrackCoreHeader@CBmpLoader@@AEAAJXZ
?CrackHeader@CBmpLoader@@AEAAJXZ
?CrackInfoHeader@CBmpLoader@@AEAAJXZ
?Create@CAntiMoniker@@SAPEAUIMoniker@@K@Z
?Create@CAntiMoniker@@SAPEAV1@XZ
?Create@CBindHost@@SAPEAV1@XZ
?Create@CBrokerInstanceHolder@@SAJPEAUIClipboardBroker@@PEAPEAV1@@Z
?Create@CBrokeredClipDataObject@@SAJPEAUIDataObject@@K_NPEAPEAXPEAPEAU2@@Z
?Create@CClipDataObject@@SAJPEAUFORMATETCDATAARRAY@@W4CreateClipDataObjectOptions@@PEAPEAUIDataObject@@@Z
?Create@CCompositeMoniker@@SAPEAV1@PEAUIMoniker@@0@Z
?Create@CCompositeMonikerEnum@@SAPEAUIEnumMoniker@@HPEAVCCompositeMoniker@@@Z
?Create@CDDEServer@@SAJPEAGAEBU_GUID@@PEAU_tagDdeClassInfo@@PEAPEAUHWND__@@GW4CNVTYP@@@Z
?Create@CDdeObject@@SAPEAUIUnknown@@PEAU2@AEBU_GUID@@KGPEAGPEAPEAV1@H@Z
?Create@CDefClient@@SAJPEAVCDDEServer@@PEAUIUnknown@@PEAGHHHPEAPEAUHWND__@@@Z
?Create@CDefLink@@SAPEAUIUnknown@@PEAU2@@Z
?Create@CDefObject@@SAPEAUIUnknown@@PEAU2@AEBU_GUID@@KPEAUIClassFactory@@@Z
?Create@CFileMoniker@@SAPEAV1@PEBGGG@Z
?Create@CFrameFilter@@SAJPEAUtagOLEMENU@@PEAUHMENU__@@PEAUHWND__@@2PEAUIOleInPlaceFrame@@PEAUIOleInPlaceActiveObject@@@Z
?Create@CGdiCustodian@@SAJPEAPEAV1@@Z
?Create@CItemMoniker@@SAPEAV1@PEBG0@Z
?Create@CObjrefMoniker@@SAPEAV1@PEAUIUnknown@@@Z
?Create@CPackagerMoniker@@SAJPEAGPEAUIMoniker@@HPEAPEAU2@@Z
?Create@CPicture@@SAPEAV1@H@Z
?Create@CPlex@@SAPEAU1@AEAPEAU1@II@Z
?Create@CRunningObjectTable@@SAHXZ
?Create@CSyncSync@@SAPEAV1@PEAVCPicture@@PEAUIImageFilter@@@Z
?CreateAccessor@?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@UEAAJPEBGPEAU_AUTHENTICATION_INFO@@PEAU_INCREMENTAL_ACCESS_INFO@@PEAU_ITEM_INFO@@PEAPEAUIUrlAccessor@@@Z
?CreateAccessor@?$AdHocInterceptorForwarders@UISearchProtocol@@UISearchProtocol2@@@@UEAAJPEBGPEAU_AUTHENTICATION_INFO@@PEAU_INCREMENTAL_ACCESS_INFO@@PEAU_ITEM_INFO@@PEAPEAUIUrlAccessor@@@Z
?CreateAccessorEx@?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@UEAAJPEBGPEAU_AUTHENTICATION_INFO@@PEAU_INCREMENTAL_ACCESS_INFO@@PEAU_ITEM_INFO@@PEBUtagBLOB@@PEAPEAUIUrlAccessor@@@Z
?CreateActiveObjectMoniker@@YAJAEBU_GUID@@PEAPEAUIMoniker@@@Z
?CreateAndLoadPresObj@CCacheNode@@AEAAJH@Z
?CreateAnsiFromUnicode@@YAPEADPEBG@Z
?CreateBitmapAndPalette@CBmpLoader@@AEAAJPEAVCPicture@@@Z
?CreateClassObj@@YAJP6AJPEAPEAUIUnknown@@@ZAEBU_GUID@@PEAPEAX@Z
?CreateClipDataObjectFromPersistedData@@YAJPEAPEAUIDataObject@@PEAK@Z
?CreateCommonDdeWindow@@YAJXZ
?CreateDataAdviseCache@CDataAdviseCache@@SAJPEAPEAV1@@Z
?CreateDdeSrvrWindow@@YAJAEBU_GUID@@GPEAPEAUHWND__@@HGW4CNVTYP@@@Z
?CreateDelegate@CDefObject@@AEAAJXZ
?CreateDibSection@CBmpLoader@@AEAAJPEAUHDC__@@PEAPEAUHBITMAP__@@@Z
?CreateDlg@CHlprDialog@@UEAAPEAUHWND__@@PEAUHINSTANCE__@@PEBGPEAU2@@Z
?CreateDragDataObject@@YAJPEAUtagInterfaceData@@HKPEAPEAUIDataObject@@@Z
?CreateDragDropContainerProxy@@YAJPEAPEAUIDragDropContainerProxy@@@Z
?CreateDropWrapper@@YAJPEAUIDataObject@@PEAPEAU1@@Z
?CreateEnumFormatEtc@CEnumFormatEtc@@SAPEAUIEnumFORMATETC@@PEAV?$CArray@VCCacheNode@@@@@Z
?CreateEnumStatData@CEnumStatData@@SAPEAUIEnumSTATDATA@@PEAV?$CArray@VCCacheNode@@@@@Z
?CreateFileStream@@YAJPEAGKPEAPEAUIStream@@@Z
?CreateFontW@@YAJPEAPEAUIUnknown@@@Z
?CreateFromTypeInfo@Interceptor@@CAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAX@Z
?CreateFromValueInternal@SemaphoreValue@details_abi@wil@@AEAAJPEBG_N_K@Z
?CreateInstance@?$GenericInstantiator@UDISPATCH_INTERCEPTOR@@@@SAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CClassMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CClassObj@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CDDEServer@@AEAAJAEBU_GUID@@PEAGPEADPEAUIUnknown@@PEAPEAVCDefClient@@PEAUHWND__@@@Z
?CreateInstance@CDefClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CFileMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CLUAMoniker@@UEAAJAEBU_GUID@@PEAUIUnknown@@KKKPEAUtagMULTI_QI@@@Z
?CreateInstance@CObjrefMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CStdClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@ComPsClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateMatchingFont@CFont@@QEAAJPEAPEAUHFONT__@@@Z
?CreateMoniker@CBindHost@@UEAAJPEAGPEAUIBindCtx@@PEAPEAUIMoniker@@K@Z
?CreateNdrTypeInfoFromTypeInfo@@YAJPEAUITypeInfo@@AEBU_GUID@@1GPEBUtagMethodInfo@@PEAPEAUNdrTypeInfo@@@Z
?CreateNode@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEAAJAEBQEAUHSTRING__@@IIPEAPEAVCNode@12@@Z
?CreateOLEApartmentBrokerReference@@YAJXZ
?CreateObjectDescriptor@@YAPEAXU_GUID@@KPEBUtagSIZE@@PEBU_POINTL@@KPEAG3@Z
?CreateOlePresObj@CCacheNode@@AEAAJPEAPEAUIOlePresObj@@H@Z
?CreatePages@COlePropertySheet@@IEAAXAEBV?$CArray@U_GUID@@AEAU1@@@@Z
?CreatePicture@@YAJPEAPEAUIUnknown@@@Z
?CreateProxy@ComPsClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAUIRpcProxyBuffer@@PEAPEAX@Z
?CreateRainbowPalette@@YAJPEAPEAUHPALETTE__@@@Z
?CreateReference@HStringReference@Wrappers@WRL@Microsoft@@AEAAXPEBGII@Z
?CreateServer@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@KPEAX@Z
?CreateSharedDragFormats@@YAPEAXPEAUIDataObject@@PEAPEAG@Z
?CreateStorage@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CReadOnlyStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStream@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CReadOnlyStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CStmBufWrite@@QEAAJPEAUIStorage@@PEBG@Z
?CreateStub@ComPsClassFactory@@UEAAJAEBU_GUID@@PEAUIUnknown@@PEAPEAUIRpcStubBuffer@@@Z
?CreateUnicodeFromAnsi@@YAPEAGPEBD@Z
?CreateWeakReference@Details@WRL@Microsoft@@YAPEAVWeakReferenceImpl@123@PEAUIUnknown@@@Z
?CreateWrapperClipDataObjectFromFormatsArray@@YAJPEAPEAUIDataObject@@_NPEAK@Z
?DAdvise@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CClipDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDefLink@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDefObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDragDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CFont@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CFormatOnlyDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DDELibMain@@YAHPEAXGGPEAG@Z
?DUnadvise@CBrokeredClipDataObject@@UEAAJK@Z
?DUnadvise@CCacheDataImpl@COleCache@@UEAAJK@Z
?DUnadvise@CClipClientDataWrapper@@UEAAJK@Z
?DUnadvise@CClipDataObject@@UEAAJK@Z
?DUnadvise@CDataObjectImpl@CDdeObject@@UEAAJK@Z
?DUnadvise@CDefLink@@UEAAJK@Z
?DUnadvise@CDefObject@@UEAAJK@Z
?DUnadvise@CDragDataObject@@UEAAJK@Z
?DUnadvise@CFont@@UEAAJK@Z
?DUnadvise@CFormatOnlyDataObject@@UEAAJK@Z
?DdeIsRunning@@YAJU_GUID@@PEBGPEAUIBindCtx@@PEAUIMoniker@@3@Z
?DebugBreak@details@wil@@YAXXZ
?DebugServerQueryInterface@CDdeServerCallMgr@@UEAAJPEAPEAX@Z
?DebugServerQueryInterface@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAPEAX@Z
?DebugServerRelease@CDdeServerCallMgr@@UEAAXPEAX@Z
?DebugServerRelease@CRpcStubBufferImpl@CDdeObject@@UEAAXPEAX@Z
?DeclareVisibility@CDdeObject@@AEAAJHH@Z
?DecrementExportCount@CRefExportCount@@QEAAKXZ
?DecrementStreamCount@SysInfo@@AEAAXXZ
?DeleteAdviseInfo@CDefClient@@QEAAXXZ
?DeleteAllItems@?$CArray@VCCacheNode@@@@QEAAXXZ
?DeleteChannel@CDdeObject@@AEAAXPEAVDDE_CHANNEL@@@Z
?DeleteExtent@CExtentList@@QEAAJG@Z
?DeleteFromItemsList@CDefClient@@QEAAXPEAUHWND__@@@Z
?DeleteItem@?$CArray@VCCacheNode@@@@QEAAHK@Z
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UNdrTypeInfo@@@@QEAAXXZ
?Destroy@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@IEAAXXZ
?Destroy@?$DestroyThreadPoolTimer@USystemThreadPoolMethods@details@wil@@$0A@@details@wil@@SAXPEAU_TP_TIMER@@@Z
?Destroy@SemaphoreValue@details_abi@wil@@QEAAXXZ
?DestroyDdeSrvrWindow@@YAJPEAUHWND__@@G@Z
?DestroyElement@CLimitedWritableStorage@@UEAAJPEBG@Z
?DestroyElement@CReadOnlyStorage@@UEAAJPEBG@Z
?DestroyInstance@CDefClient@@QEAAJXZ
?DestructElements@@YAXPEAPEAVCProperty@@H@Z
?DestructElements@@YAXPEAPEAVCPropertySection@@H@Z
?Detach@?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@UEAAJXZ
?DetermineLongestString@@YAHPEAGAEAPEAG0@Z
?DetermineUnicodePath@CFileMoniker@@QEAAJPEADAEAPEAGAEAG@Z
?DialogProc@DefaultIBindStatusCallback@@EEAA_JPEAUHWND__@@I_K_J@Z
?DibDraw@@YAJPEAXPEAUHDC__@@PEBU_RECTL@@@Z
?DibFillPaletteEntries@@YAXPEAEGPEAUtagLOGPALETTE@@@Z
?DibMakeLogPalette@@YAPEAXPEAEGPEAPEAUtagLOGPALETTE@@@Z
?DibToPres@@YAJPEAXPEAVCPres@@@Z
?Disarm@CBaseRPCTimeout@@QEAAXXZ
?DiscardCache@COleCache@@UEAAJK@Z
?DiscardFont@CFont@@QEAAJHJ@Z
?DiscardHPRES@CEMfObject@@UEAAXXZ
?DiscardHPRES@CGenObject@@UEAAXXZ
?DiscardHPRES@CMfObject@@UEAAXXZ
?DiscardPresentation@CCacheNode@@QEAAJPEAUIStream@@@Z
?Disconnect@CDdeServerCallMgr@@UEAAXXZ
?Disconnect@CProxyManagerImpl@CDdeObject@@UEAAXXZ
?Disconnect@CRpcStubBufferImpl@CDdeObject@@UEAAXXZ
?DisconnectObject@CClassMoniker@@UEAAJK@Z
?DisconnectObject@CMarshalImplPStream@@UEAAJK@Z
?DisconnectObject@CPicture@@UEAAJK@Z
?DisconnectObject@CPointerMoniker@@UEAAJK@Z
?DisconnectObject@FtmBase@WRL@Microsoft@@UEAAJK@Z
?DispatchCall@@YAJPEAUtagDISPATCHDATA@@@Z
?DoContextSensitiveHelp@CFrameFilter@@QEAAHXZ
?DoConversionIfSpecialClass@CDefObject@@AEAAJPEAUIStorage@@@Z
?DoDrop@CDragOperation@@UEAAJKU_POINTL@@PEAK@Z
?DoInitNew@CDefClient@@QEAAJXZ
?DoModal@COlePropertySheet@@QEAAHXZ
?DoOle20Advise@CDefClient@@QEAAJW4OLE_NOTIFICATION@@G@Z
?DoOle20UnAdviseAll@CDefClient@@QEAAJXZ
?DoVerb@CDefLink@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoVerb@CDefObject@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoVerb@COleObjectImpl@CDdeObject@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DocDispatchIncomingCall@@YAJPEAUtagDOCDISPATCHDATA@@@Z
?DocDoVerbItem@CDefClient@@QEAAJPEADGHH@Z
?DocExecute@CDefClient@@QEAAJPEAX@Z
?DocHandleIncomingCall@@YAJPEAUtagDOCDISPATCHDATA@@@Z
?DocShowItem@CDefClient@@QEAAJPEADH@Z
?DocumentLevelConnect@CDdeObject@@AEAAJPEAUIBindCtx@@@Z
?DoesClassImplementAnyOfTheseCategories@@YAJPEAUIComClassCategoryInfo@@KQEBU_GUID@@AEA_N@Z
?DragDropBroker_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?DragDrop_DropTargetSupportsEvaluatingEdpPolicy@OleDragDropTracing@@SAX_N@Z
?DragDrop_EdpState@OleDragDropTracing@@SAX_N0PEBG@Z
?DragDrop_Edp_Call_Result@OleDragDropTracing@@SAXPEBGJ@Z
?DragLeave@CDropTargetAdapter@@QEAAJXZ
?DragOver@CDragOperation@@QEAAHXZ
?DragOver@CDropTargetAdapter@@QEAAJKU_POINTL@@PEAK@Z
?DragStarted@DragDropSession@DragDropTelemetry@@QEAAXPEBG@Z
?Draw@CCacheNode@@QEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAUtagDVTARGETDEVICE@@PEAUHDC__@@2PEBU_RECTL@@3P6AH_K@Z4@Z
?Draw@CEMfObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CGenObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CMfObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Drop@CDropTargetAdapter@@QEAAJPEAUIDataObject@@KU_POINTL@@PEAK@Z
?DropCancelled@DragDropSession@DragDropTelemetry@@QEAAXXZ
?DropCompleted@DragDropSession@DragDropTelemetry@@QEAAX_NPEAUHWND__@@@Z
?DuCacheDelegate@@YAPEAXPEAPEAUIUnknown@@AEBU_GUID@@PEAPEAXPEAU1@@Z
?DuLockContainer@@YAXPEAUIOleClientSite@@HPEAH@Z
?DuSetClientSite@@YAJHPEAUIOleClientSite@@PEAPEAU1@PEAH@Z
?DupWCHARString@@YAJPEBGAEAPEAGAEAG@Z
?DuplicateAtom@@YAGG@Z
?DuplicateBitmap@@YAPEAUHBITMAP__@@PEAU1@@Z
?DuplicateMetaFile@@YAPEAXPEAX@Z
?DynLoad@@YAJPEADPEAPEAX@Z
?DynamicCastToSelf@CBrokeredClipDataObject@@SA?AV?$ComPtr@VCBrokeredClipDataObject@@@WRL@Microsoft@@PEAUIDataObject@@@Z
?EMfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEBUtagENHMETARECORD@@H_J@Z
?EatDotDots@@YAHPEAPEBGPEAG@Z
?EdpInlGetProcessTlsIndex@@YAJPEAXPEAK@Z
?EdpInlSetCurrentThreadPolicyEvaluation@@YAJH@Z
?EdpInlSetProcessTlsIndex@@YAJPEAK@Z
?Empty@CCacheStream@@UEAAJXZ
?EnableTracking@CDefLink@@AEAAJPEAUIMoniker@@K@Z
?EnableTracking@CFileMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnableTracking@CTrackingCompositeMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnableTracking@CTrackingFileMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnsureCLSIDIsRegistered@@YAXAEBU_GUID@@PEAUIStorage@@@Z
?EnsureCallerIsWindowOwner@CDragDropBroker@@AEAAJPEAUHWND__@@@Z
?EnsureCoalescedTimer_SetTimer@details@wil@@YAXAEAV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAU_TP_TIMER@@P6AXPEAU1@@Z$1?Destroy@?$DestroyThreadPoolTimer@USystemThreadPoolMethods@details@wil@@$0A@@details@wil@@SAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@2@AEA_N_J@Z
?EnsureForced@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJXZ
?EnsureInitialized@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEBAJXZ
?EnsureInitialized@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJXZ
?EnsureSize@CRgPv@@QEAAJI@Z
?EnsureStateData@FeatureStateManager@details@wil@@AEAA_NXZ
?EnsureSubscribedToProcessWideUsageFlushUnderLock@FeatureStateManager@details@wil@@AEAAXXZ
?EnsureVersionMatches@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJXZ
?EnsureVersionMatches@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJXZ
?Enum@CAntiMoniker@@EEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CBaseMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CClassMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CCompositeMoniker@@EEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CFileMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CItemMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CObjrefMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPackagerMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPointerMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?EnumAdvise@CDAHolder@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefLink@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@COAHolder@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAndAdvise@CDataAdviseCache@@QEAAJPEAUIDataObject@@H@Z
?EnumAndRemove@CHashTable@@UEAAHP6AHPEAUSHashChain@@PEAX@Z1PEAKPEAPEAX@Z
?EnumCache@COleCache@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumCategories@CComCat@@UEAAJKPEAPEAUIEnumCATEGORYINFO@@@Z
?EnumCategories@CsCatInfo@@UEAAJKPEAPEAUIEnumCATEGORYINFO@@@Z
?EnumCategoriesOfClass@CComCat@@CAJAEBU_GUID@@PEBG_NPEAUIComCatalogSCM@@PEAPEAUIEnumGUID@@2@Z
?EnumClassesOfCategories@CComCat@@UEAAJKQEBU_GUID@@K0PEAPEAUIEnumGUID@@@Z
?EnumClassesOfCategories@CsCatInfo@@UEAAJKQEBU_GUID@@K0PEAPEAUIEnumGUID@@@Z
?EnumConnectionPoints@CFont@@UEAAJPEAPEAUIEnumConnectionPoints@@@Z
?EnumConnectionPoints@CPicture@@UEAAJPEAPEAUIEnumConnectionPoints@@@Z
?EnumConnections@CFontEventsCP@@UEAAJPEAPEAUIEnumConnections@@@Z
?EnumConnections@CNotifyCP@@UEAAJPEAPEAUIEnumConnections@@@Z
?EnumDAdvise@CBrokeredClipDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CCacheDataImpl@COleCache@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CClipClientDataWrapper@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CClipDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDataObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefLink@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDragDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CFont@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CFormatOnlyDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumElements@CLimitedWritableStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CReadOnlyStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumFormatEtc@CBrokeredClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CCacheDataImpl@COleCache@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CClipClientDataWrapper@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDataObjectImpl@CDdeObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefLink@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDragDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CFont@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CFormatOnlyDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumImplCategoriesOfClass@CComCat@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumImplCategoriesOfClass@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumObjectParam@CBindCtx@@UEAAJPEAPEAUIEnumString@@@Z
?EnumObjects@COleItemContainerImpl@CDdeObject@@UEAAJKPEAPEAUIEnumUnknown@@@Z
?EnumReqCategoriesOfClass@CComCat@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumReqCategoriesOfClass@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumRunning@CFilteredRunningObjectTable@@EEAAJPEAPEAUIEnumMoniker@@@Z
?EnumRunning@CRunningObjectTable@@UEAAJPEAPEAUIEnumMoniker@@@Z
?EnumSubKey@RegistryKey@@QEBAJKPEAGPEAKPEAU_FILETIME@@@Z
?EnumTypeLibRegistrations@TypeLibRegistrationReader@@UEAAJPEAPEAUIEnumUnknown@@@Z
?EnumVerbs@CDefLink@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumVerbs@CDefObject@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumVerbs@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?Erase@CDdeConnectionTable@@QEAAJXZ
?Error_@ComTrace@@QEAAXJPEBGAEBUDiagnosticsInfo@wil@@@Z
?EstablishIID@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?Execute@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEAXHHH@Z
?ExpandUNCName@@YAJPEAGPEAPEAG0@Z
?ExtractNameAndIndex@@YAHKPEAG0IPEAI@Z
?ExtractUnicodeString@@YAJPEADGAEAPEAGAEAG@Z
?FDisableAssociatedInterceptor@@YAHUHREG@@PEBG@Z
?FIconFileFromClass@@YAHAEBU_GUID@@PEAGIPEAI_N@Z
?FInit@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@UEAAHXZ
?FInit@?$CALLFRAME_CACHE@UNdrTypeInfo@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@UEAAHXZ
?FInit@CMutexSem2@@QEAAHXZ
?FInit@XLOCK@@QEAAHXZ
?FIsLCID@@YAHPEAG@Z
?FScrPalette@SysInfo@@QEAAHXZ
?FailFast_Unexpected@in1diag3@details@wil@@YAXPEAXIPEBD@Z
?FailureLikelyToIndicateBrokerAbnormalTermination@@YA_NJ@Z
?Failure_@ComTrace@@QEAAXAEBUFailureInfo@wil@@@Z
?FileBindToObject@@YAJPEAUIMoniker@@PEAGAEBU_GUID@@PEAUIBindCtx@@PEAUtagBIND_OPTS2@@02PEAPEAX@Z
?FindClient@@YAPEAXPEAX0H@Z
?FindConnectionPoint@CFont@@UEAAJAEBU_GUID@@PEAPEAUIConnectionPoint@@@Z
?FindConnectionPoint@CPicture@@UEAAJAEBU_GUID@@PEAPEAUIConnectionPoint@@@Z
?FindDocObj@CDDEServer@@QEAAPEAVCDefClient@@PEAD@Z
?FindExisting@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAJAEBU_GUID@@PEAPEAUINTERFACE_HELPER_CLSID@@@Z
?FindExisting@?$CALLFRAME_CACHE@UNdrTypeInfo@@@@QEAAJAEBU_GUID@@PEAPEAUNdrTypeInfo@@@Z
?FindExisting@MD_INTERFACE_CACHE@@QEAAJAEBU_GUID@@PEAPEAUMD_INTERFACE@@@Z
?FindExtent@CExtentList@@QEAAJGAEAPEFAU_MONIKEREXTENT@@@Z
?FindFormatIndex@@YAHPEAPEAG@Z
?FindInsertionPointOrIncrement@RawUsageIndex@details_abi@wil@@AEAAPEAEAEAUUsageIndexProperty@23@PEAEPEAX_KI@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindInterface@?$SimpleQIHelper@V?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@U?$InterfaceList@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@@@SAPEAXPEAV?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@AEBU_GUID@@@Z
?FindItem@CDefClient@@AEAAJPEAGPEAPEAV1@@Z
?FindMatchingFont@CFont@@QEAAJPEAH@Z
?FindMaximalFileMoniker@@YAJPEAGKPEAKPEAPEAUIMoniker@@@Z
?FindObjectFormat@COleCache@@AEAAXPEAUIStorage@@@Z
?FindThreadOrFree@XSLOCK@@AEAAPEAUOWNERENTRY@1@V?$OPAQUE_HANDLE@$00@@@Z
?FindUNCEndServer@@YAXPEBGPEAG@Z
?First@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@345@@Z
?First@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA?AViterator@1@XZ
?First@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@QEAA?AViterator@1@XZ
?First@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@345@@Z
?First@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?First@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@456@@Z
?First@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@456@@Z
?FixWriteBug@@YAJPEAXPEAPEAX@Z
?Flush@CStmBufWrite@@QEAAJXZ
?FlushClipboard@CClipboardBroker@@UEAAJXZ
?FlushClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJXZ
?FlushTextViaGetData@@YAXPEAUHWND__@@PEAUFORMATETCDATAARRAY@@@Z
?FlushUsage@FeatureStateManager@details@wil@@QEAAXXZ
?FlushViaGetData@@YAXPEAUHWND__@@PEAUFORMATETCDATAARRAY@@@Z
?FlushViaUser32Render@@YAXPEAUHWND__@@PEAUFORMATETCDATAARRAY@@@Z
?For@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?ForOle32@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?ForTypeInfo@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAX@Z
?Force@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJXZ
?FormatNtStatusMsg@details@wil@@YAXJPEAGK@Z
?FormatTraceMessage@@YAXPEAG_KPEBGPEAD@Z
?ForwardToSink@?$AdHocInterceptor@UIElementBehavior@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UIOleInPlaceObject@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UIOleWindow@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UIPersist@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UIPersistPropertyBag@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UISearchProtocol2@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?ForwardToSink@?$AdHocInterceptor@UISearchProtocol@@@@MEBAJ$$QEAUICallFrame@@PEBG1@Z
?FrEq@@YAHPEAUFR@@0@Z
?Free@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@CallFrame@@QEAAXPEAX@Z
?Free@CallFrame@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_CLIENT_FRAME@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_SERVER_FRAME@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?FreeBuffer@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeDataChain@CPlex@@QEAAXXZ
?FreeEmbeddedPointers@CallFrame@@QEAAXPEAEPEBE@Z
?FreeEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAEPEBE@Z
?FreeGDIdata@@YAHPEAXG@Z
?FreeLibraryWithLogging@@YAXW4LoadOrFreeWhy@@PEAUHINSTANCE__@@PEBG@Z
?FreeNode@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEAAJPEAVCNode@12@@Z
?FreeParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@CallFrame@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_CLIENT_FRAME@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_SERVER_FRAME@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreePlexes@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEAAXXZ
?FreePokeData@@YAXPEAX@Z
?FreeProcessHeap@details@wil@@YAXPEAX@Z
?FreeRecord@OAUTIL@@AEAAJPEAXPEAUIRecordInfo@@H@Z
?FreeRecord@OAUTIL@@AEAAJPEAXPEAUITypeInfo@@H@Z
?FreeRecordField@OAUTIL@@AEAAJPEAEPEAUtagTYPEDESC@@PEAUITypeInfo@@H@Z
?FreeResources@CClipDataObject@@AEAAXW4FreeResourcesFlags@@@Z
?FreeSrvrMem@CDDEServer@@AEAAJXZ
?FreeTypeInfoCache@@YAXXZ
?FreeValue@CProperty@@AEAAXXZ
?FreeWorker@CallFrame@@QEAAXPEAEPEBEH@Z
?Freeze@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAK@Z
?GenerateDisplayName@CFileMoniker@@QEAAJKPEAG@Z
?GenericCall@LEGACY_INTERCEPTOR@@QEAAJKZZ
?GenericObjectToIStorage@@YAJAEBVCGenericObject@@PEAUIStorage@@PEBUtagDVTARGETDEVICE@@@Z
?Get@CProperty@@QEAAPEAXPEAK@Z
?Get@OleClipboardAggregateTelemetry@@CAAEAPEBU_tlgProvider_t@@XZ
?GetAbsMkFromRel@CDefLink@@AEAAJPEAPEAUIMoniker@@0@Z
?GetActiveObject@CFrameFilter@@UEAAJPEAPEAUIOleInPlaceActiveObject@@@Z
?GetAdvise@CCacheViewImpl@COleCache@@UEAAJPEAK0PEAPEAUIAdviseSink@@@Z
?GetAndTranslateOle1@CClipDataObject@@AEAAJIPEAPEAG00PEAPEAD@Z
?GetApartmentClass@@YAJAEBU_GUID@@0PEAPEAX@Z
?GetAssocAt@?$CMap@PEAGAEAPEAGKAEAK@@IEBAPEAUCAssoc@1@AEAPEAGAEAI@Z
?GetAssocAt@CMapKeyToValue@@AEBAPEAUCAssoc@1@PEAXIAEAI@Z
?GetAssocKeyPtr@CMapKeyToValue@@AEBAXPEAUCAssoc@1@PEAPEAXPEAI@Z
?GetAttributes@OleClassInfoVerb@@UEAAJPEAK@Z
?GetAttributes@RegistryVerb@@UEAAJPEAK@Z
?GetBaseInterfaceIID@@YAJPEAUITypeInfo@@PEAU_GUID@@PEAPEAU1@@Z
?GetBindInfo@CBindStatusCallback@@UEAAJPEAKPEAU_tagBINDINFO@@@Z
?GetBindInfo@DefaultIBindStatusCallback@@UEAAJPEAKPEAU_tagBINDINFO@@@Z
?GetBindOptions@CBindCtx@@UEAAJPEAUtagBIND_OPTS@@@Z
?GetBitmapData@CGenObject@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetBoundSource@CDefLink@@UEAAJPEAPEAUIUnknown@@@Z
?GetBuffer2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetCallContext@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallContext@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallFrame@CallFrame@@UEAAPEAV1@XZ
?GetCallerPackageName@@YAJPEA_NAEAY0IA@GPEAK@Z
?GetCallingProcessHandle@CallerIdentity@@YAJKW4RUNTIMEBROKER_CALLERIDENTITY_CHECK@@PEAPEAX@Z
?GetCallingProcessType@CallerIdentity@@YAJPEAW4PROCESS_UICONTEXT@@@Z
?GetCanonicalFormatEtc@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefLink@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDragDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CFont@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CFormatOnlyDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCategoryDesc@CComCat@@SAJPEAUHKEY__@@KPEAPEAGPEAK@Z
?GetCategoryDesc@CComCat@@UEAAJAEBU_GUID@@KPEAPEAG@Z
?GetCategoryDesc@CsCatInfo@@UEAAJAEBU_GUID@@KPEAPEAG@Z
?GetClassBits@CDefObject@@AEAAJPEAU_GUID@@@Z
?GetClassID@?$AdHocInterceptorForwarders@UIPersist@@U1@@@UEAAJPEAU_GUID@@@Z
?GetClassID@?$AdHocInterceptorForwarders@UIPersist@@UIPersistPropertyBag@@@@UEAAJPEAU_GUID@@@Z
?GetClassID@CAntiMoniker@@EEAAJPEAU_GUID@@@Z
?GetClassID@CClassMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CCompositeMoniker@@EEAAJPEAU_GUID@@@Z
?GetClassID@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetClassID@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFileMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFont@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFont@@W7EAAJPEAU_GUID@@@Z
?GetClassID@CItemMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CLUAMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CObjrefMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@COleCache@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPackagerMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPersistStgImpl@CDdeObject@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPicture@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPointerMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CSessionMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassInfoWithInprocOrLocalServer@@YAJAEBU_GUID@@PEAUIComCatalogSCM@@0PEAPEAX@Z
?GetClassObject@CLUAMoniker@@UEAAJAEBU_GUID@@KK0PEAPEAX@Z
?GetClassObject@CSessionMoniker@@UEAAJAEBU_GUID@@KK0PEAPEAX@Z
?GetClientSite@CDefLink@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientSite@CDefObject@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientSite@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClipDataObjectFromTLS@@YAXPEAPEAUIDataObject@@@Z
?GetClipboard@CClipboardBroker@@UEAAJPEAPEAUIDataObject@@PEAK@Z
?GetClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAPEAUIDataObject@@PEAK@Z
?GetClipboardBroker@@YAJPEAPEAUIClipboardBroker@@@Z
?GetClipboardData@CDefLink@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardData@CDefObject@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardData@COleObjectImpl@CDdeObject@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardOwnerWindowProperty@@YAJPEAUHWND__@@PEAPEBGPEAK@Z
?GetClsid@CProcessExtensionTbl@@QEAAJPEBGPEAU_GUID@@@Z
?GetClsidFromFileTypeAssocation@CProcessExtensionTbl@@AEAAJPEBGPEAU_GUID@@@Z
?GetColorBitmap@SysInfo@@QEAAJPEAPEAUHBITMAP__@@@Z
?GetColorSet@CCacheNode@@QEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAUtagDVTARGETDEVICE@@PEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CEMfObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CGenObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CMfObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetComparisonData@CAntiMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CBaseMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CClassMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CCompositeMoniker@@EEAAJPEAEKPEAK@Z
?GetComparisonData@CFileMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CItemMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CLUAMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CSessionMoniker@@UEAAJPEAEKPEAK@Z
?GetConnectionInterface@CFontEventsCP@@UEAAJPEAU_GUID@@@Z
?GetConnectionInterface@CNotifyCP@@UEAAJPEAU_GUID@@@Z
?GetConnectionPointContainer@CFontEventsCP@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
?GetConnectionPointContainer@CNotifyCP@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
?GetConnectionStatus@CProxyManagerImpl@CDdeObject@@UEAAJXZ
?GetContainer@COleClientSiteImpl@CDefClient@@UEAAJPEAPEAUIOleContainer@@@Z
?GetContextAndNotifyFailure@details@wil@@YAXPEAUFailureInfo@2@PEAD_K@Z
?GetControlKeysState@@YAGH@Z
?GetControlKeysStateOfParam@@YAG_K@Z
?GetCopiedFormatEtcDataArraySize@@YAJPEAUFORMATETCDATAARRAY@@PEA_K@Z
?GetCount@OleClassInfoVerbIterator@@UEAAJPEAK@Z
?GetCount@RegistryVerbIterator@@UEAAJPEAK@Z
?GetCsCatInfo@CComCat@@AEAAJXZ
?GetCurrentApartmentId@@YAKXZ
?GetCurrentModuleName@details@wil@@YAPEBDXZ
?GetDC@wil@@YA?AV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHDC__@@P6AXUwindow_dc@wil@@@_E$1?close@23@SAX0@ZU?$integral_constant@_K$0A@@wistd@@U23@PEAU1@$0A@$$T@details@wil@@@details@wil@@@1@PEAUHWND__@@@Z
?GetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefClient@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CFont@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CFormatOnlyDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataDelegate@CDefLink@@QEAAPEAUIDataObject@@XZ
?GetDataDelegate@CDefObject@@QEAAPEAUIDataObject@@XZ
?GetDataFromDescriptor@@YAJPEAUIDataObject@@PEAU_GUID@@IW4tagGETCLSIDFLAGS@@PEAPEAGPEAK@Z
?GetDataFromStorage@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@PEAPEAUIStorage@@@Z
?GetDataFromStream@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@PEAPEAUIStream@@@Z
?GetDataHere@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CFont@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CFormatOnlyDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHereImpl@CClipDataObject@@IEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@_N@Z
?GetDataObjectEnterpriseId@@YAJPEAUIDataObject@@PEAPEAG@Z
?GetDataObjectEnterpriseId@CDragOperation@@AEAAJPEAPEBG@Z
?GetDataObjectFormatName@@YAJGPEAGI@Z
?GetDefaultCursorObject@CDragDefaultCursors@@SAPEAV1@XZ
?GetDefaultPalette@SysInfo@@QEAAJPEAPEAUHPALETTE__@@@Z
?GetDefaultValueOfSubKey@@YAJPEAUHKEY__@@PEBGKPEAG@Z
?GetDefaultValueOfSubKey@@YAJPEAUHKEY__@@PEBGPEAPEAG@Z
?GetDestCtx@CDdeServerCallMgr@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@CDdeServerCallMgr@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@DDE_CHANNEL@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@DDE_CHANNEL@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@MarshallingChannel@@UEAAJPEAKPEAPEAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDisableAll@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisableAllForOle32@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisableDispatch@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisableDispatchForOle32@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisplayName@CAntiMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CObjrefMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@OleClassInfoVerb@@UEAAJKPEAG@Z
?GetDisplayName@RegistryTypeLibRegistration@@UEAAJPEAPEAG@Z
?GetDisplayName@RegistryVerb@@UEAAJKPEAG@Z
?GetDisplayNameLength@CFileMoniker@@QEAAJPEAK@Z
?GetDragDropExtensionPoint@@YAJPEAPEAUIDragDropExtensionForOLE@@@Z
?GetDragDropHostCLSID@@YAJPEAU_GUID@@@Z
?GetDropTarget@?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@UEAAJPEAPEAUIDropTarget@@@Z
?GetDropTarget@CDragOperation@@AEAAJPEAUHWND__@@0PEAUIDropTarget@@@Z
?GetDropTargetForHostDragOperation@@YAJPEAPEAUIDropTarget@@@Z
?GetEmbedSourceFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetEmbeddedObjectFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetEnterpriseDropTargetStatus@CPrivDragDrop@@UEAAJPEAH0@Z
?GetEnterpriseIdForEdpPolicyEvaluation@CDragOperation@@AEAAJPEAPEBG@Z
?GetExtent@CCacheNode@@QEAAJKPEAUtagSIZE@@@Z
?GetExtent@CCacheViewImpl@COleCache@@UEAAJKJPEAUtagDVTARGETDEVICE@@PEAUtagSIZE@@@Z
?GetExtent@CDefLink@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CDefObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CEMfObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CGenObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CMfObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@COleCache@@QEAAJKPEAUtagSIZE@@@Z
?GetExtent@COleObjectImpl@CDdeObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExternalReference@CClipboardBroker@@UEAAJPEAPEAUIClipboardBroker@@@Z
?GetExternalReference@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAPEAUIClipboardBroker@@@Z
?GetFailureLogString@wil@@YAJPEAG_KAEBUFailureInfo@1@@Z
?GetFileName@ImagePath@@SAXIPEAG@Z
?GetFlags@OleClassInfoVerb@@UEAAJPEAK@Z
?GetFlags@RegistryTypeLibRegistration@@UEAAJPEAK@Z
?GetFlags@RegistryVerb@@UEAAJPEAK@Z
?GetFormatEtcDataArray@CClipDataObject@@AEAAJXZ
?GetFormatEtcDataArray@CDragDataObject@@AEAAJXZ
?GetFrame@CallFrame@@QEAAPEAV1@AEAPEAV1@PEAX@Z
?GetGuid@RegistryTypeLibRegistration@@UEAAJPEAU_GUID@@@Z
?GetHdc@SysInfo@@QEAAJPEAPEAUHDC__@@@Z
?GetHelpDir@RegistryTypeLibRegistration@@UEAAJPEAPEAG@Z
?GetHelpDirW@CPageHolder@@IEAAHPEAGJ@Z
?GetHelper@CallFrame@@QEBA?AUOAUTIL@@XZ
?GetHmfp@CMfObject@@AEAAPEAXXZ
?GetID@CPropertySection@@QEAAHPEBGPEAK@Z
?GetIDsOfNames@CFont@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIDsOfNames@CPicture@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIDsOfNames@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIID@?$AdHocInterceptor@UIElementBehavior@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UIOleWindow@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UIPersist@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UISearchProtocol2@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@?$AdHocInterceptor@UISearchProtocol@@@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@Interceptor@@EEAAJPEAU_GUID@@@Z
?GetIID@Interceptor@@EEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@LEGACY_INTERCEPTOR@@UEAAJPEAU_GUID@@@Z
?GetIID@LEGACY_INTERCEPTOR@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@CallFrame@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@DISPATCH_FRAME@@UEAAJPEAU_GUID@@PEAK@Z
?GetIconHeight@SysInfo@@QEAAHXZ
?GetIconWidth@SysInfo@@QEAAHXZ
?GetId@OleClassInfoVerb@@UEAAJPEAJ@Z
?GetId@RegistryVerb@@UEAAJPEAJ@Z
?GetIids@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetIids@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAKPEAPEAU_GUID@@@Z
?GetInfo@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@LEGACY_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInnerDataObject@CClipClientDataWrapper@@UEAAJPEAPEAUIDataObject@@PEAPEAUIClipboardTaskCompletion@@@Z
?GetInnerDataObject@CClipDataObject@@UEAAJPEAPEAUIDataObject@@PEAPEAUIClipboardTaskCompletion@@@Z
?GetInterfaceFromWindowProp@@YAJPEAUHWND__@@AEBU_GUID@@HPEAPEAUIUnknown@@PEAG@Z
?GetInterfaceFromWindowProp@CInterfaceFromWindowProp@@UEAAJPEAUHWND__@@AEBU_GUID@@PEAPEAUIUnknown@@PEAG@Z
?GetInterfaceHelperClsid@@YAJAEBU_GUID@@PEAU1@PEAH@Z
?GetInternalInterceptor@LEGACY_INTERCEPTOR@@QEAAJAEBU_GUID@@PEAPEAUICallInterceptor@@@Z
?GetInternalSourceMarshalingContextAttribute@@YAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetItem@?$CArray@VCCacheNode@@@@QEAAPEAVCCacheNode@@K@Z
?GetItem@?$CArray@VCFormatEtc@@@@QEAAPEAVCFormatEtc@@K@Z
?GetItem@?$CArray@VCStatData@@@@QEAAPEAVCStatData@@K@Z
?GetLastErrorFail@details@wil@@YAKPEAXIPEBD110@Z
?GetLastErrorFailHr@details@wil@@YAJXZ
?GetLcid@RegistryTypeLibRegistration@@UEAAJPEAK@Z
?GetLinkSourceFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetLocal@?$ThreadLocalStorage@PEAVThreadFailureCallbackHolder@details@wil@@@details_abi@wil@@QEAAPEAPEAVThreadFailureCallbackHolder@details@3@_N@Z
?GetLocal@?$ThreadLocalStorage@UThreadLocalData@details_abi@wil@@@details_abi@wil@@QEAAPEAUThreadLocalData@23@_N@Z
?GetLocalRunningObjectForDde@@YAJPEAGPEAPEAUIUnknown@@@Z
?GetLocaleID@CPageHolder@@UEAAJPEAK@Z
?GetLogPixelsX@SysInfo@@QEAAHXZ
?GetLogPixelsY@SysInfo@@QEAAHXZ
?GetMany@?$IIterator_impl@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@$00@Collections@Foundation@Windows@@UEAAJIPEAPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@234@PEAI@Z
?GetMany@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJIQEAPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@456@PEAI@Z
?GetMapping@CProxyManagerImpl@CDdeObject@@UEAAPEAXXZ
?GetMarshalSizeMax@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@CClassMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CPicture@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CPointerMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@DISPATCH_CLIENT_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@DISPATCH_SERVER_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@FtmBase@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalingContextAttribute@CAbstractStream@@MEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CReadInterfaceDataFromInternalSourceMarshalingStream@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CReadInterfaceDataWithSourceAttributesMarshalingStream@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CWriteInterfaceDataMarshalingStream@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshallerFor@MarshallingChannel@@UEAAJAEBU_GUID@@PEAXPEAPEAUIMarshalSomeone@@@Z
?GetMemoryFrame@LEGACY_FRAME@@QEAAJXZ
?GetMemoryFrameFor@LEGACY_INTERCEPTOR@@QEAAJPEAPEAUICallFrame@@PEAULEGACY_FRAME@@@Z
?GetMethodInfo@?$AdHocInterceptor@UIElementBehavior@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UIOleWindow@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UIPersist@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UISearchProtocol2@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@?$AdHocInterceptor@UISearchProtocol@@@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@Interceptor@@EEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@LEGACY_INTERCEPTOR@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMiscStatus@CDefLink@@UEAAJKPEAK@Z
?GetMiscStatus@CDefObject@@UEAAJKPEAK@Z
?GetMiscStatus@COleObjectImpl@CDdeObject@@UEAAJKPEAK@Z
?GetModuleInformation@details@wil@@YA_NPEAXPEAIPEAD_K@Z
?GetMoniker@CDefLink@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@CDefObject@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@COleClientSiteImpl@CDefClient@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@COleObjectImpl@CDdeObject@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMonikerCompareBuffer@@YAJPEAUIMoniker@@PEAVCTmpMkEqBuf@@PEAU_FILETIME@@PEAPEAUtagInterfaceData@@@Z
?GetMonikerType@@YAKPEAUIMoniker@@@Z
?GetNames@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAPEAG0@Z
?GetNames@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAPEAG0@Z
?GetNames@CallFrame@@UEAAJPEAPEAG0@Z
?GetNames@LEGACY_FRAME@@UEAAJPEAPEAG0@Z
?GetNative@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetNdrVersion@Interceptor@@EEAAJPEAK@Z
?GetNdrVersion@LEGACY_INTERCEPTOR@@UEAAJPEAK@Z
?GetNext@?$CArray@VCCacheNode@@@@QEAAPEAVCCacheNode@@AEAK@Z
?GetNext@?$CArray@VCFormatEtc@@@@QEAAPEAVCFormatEtc@@AEAK@Z
?GetNext@?$CArray@VCStatData@@@@QEAAPEAVCStatData@@AEAK@Z
?GetNext@CCompositeMonikerEnum@@AEAAPEAUIMoniker@@PEAU2@@Z
?GetNextAssoc@?$CMap@PEAGAEAPEAGKAEAK@@QEBAXAEAPEAXAEAPEAGAEAK@Z
?GetNextAssoc@CMapKeyToValue@@QEBAXPEAPEAXKPEAXPEAI1@Z
?GetNode@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEBAJAEBQEAUHSTRING__@@AEAI1AEAPEAVCNode@12@PEAPEAV412@@Z
?GetOLEApartmentBrokerReference@@YAJPEAPEAUIClipboardBroker@@@Z
?GetObjectDescriptorFromOle1@CClipDataObject@@AEAAJIPEAUtagSTGMEDIUM@@@Z
?GetObjectLink@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetObjectParam@CBindCtx@@UEAAJPEAGPEAPEAUIUnknown@@@Z
?GetObjectStorage@COleItemContainerImpl@CDdeObject@@UEAAJPEAGPEAUIBindCtx@@AEBU_GUID@@PEAPEAX@Z
?GetObjectW@CFilteredRunningObjectTable@@EEAAJPEAUIMoniker@@PEAPEAUIUnknown@@@Z
?GetObjectW@COleItemContainerImpl@CDdeObject@@UEAAJPEAGKPEAUIBindCtx@@AEBU_GUID@@PEAPEAX@Z
?GetObjectW@CRunningObjectTable@@UEAAJPEAUIMoniker@@PEAPEAUIUnknown@@@Z
?GetOle2FromOle1@CClipDataObject@@AEAAJIPEAUtagSTGMEDIUM@@@Z
?GetOleClassInfoVerbIterator@@YAJPEAUIOleClassInfo@@PEAPEAUIOleVerbIterator@@PEAUIMrtResourceManager@@PEAUIResourceContext@@@Z
?GetOleDelegate@CDefLink@@QEAAPEAUIOleObject@@XZ
?GetOleDelegate@CDefObject@@QEAAPEAUIOleObject@@XZ
?GetOleItemContainerDelegate@CDefLink@@AEAAPEAUIOleItemContainer@@XZ
?GetOwnerLink@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetOwnerTableHint@XSLOCK@@AEAAKV?$OPAQUE_HANDLE@$00@@@Z
?GetPSDelegate@CDefObject@@QEAAPEAUIPersistStorage@@XZ
?GetPackagedPLMClipboardOwnerInternal@@YAJPEAUHWND__@@PEAPEBGPEAKPEA_N@Z
?GetPackagedPLMClipboardOwnerInternalEtw@OleClipboardTracing@@SAXJPEAUHWND__@@PEAPEBGPEAK@Z
?GetPageContainer@CPageHolder@@UEAAJPEAPEAUIUnknown@@@Z
?GetPageIDs@COlePropertySheet@@IEAAXAEAV?$CArray@U_GUID@@AEAU1@@@@Z
?GetParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@CallFrame@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@DISPATCH_FRAME@@UEAAJKPEAUtagVARIANT@@@Z
?GetParamInfo@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@CallFrame@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@DISPATCH_FRAME@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetPriority@CBindStatusCallback@@UEAAJPEAJ@Z
?GetPriority@DefaultIBindStatusCallback@@UEAAJPEAJ@Z
?GetPrivateClipboardWindow@@YAPEAUHWND__@@W4tagCLIPWINDOWFLAGS@@@Z
?GetProc@OLEAUTOMATION_FUNCTIONS@@AEAAJJPEBDPEAPEAX@Z
?GetProcessNameFromId@DragDropTelemetryHelper@@SA_NKPEAGK@Z
?GetProcessTypeFromWindow@CallerIdentity@@YAJPEAUHWND__@@PEAW4PROCESS_UICONTEXT@@@Z
?GetPropPtr@CEndPointAtom@@QEAAPEBGXZ
?GetProperty@CPropertySection@@QEAAPEAVCProperty@@K@Z
?GetPropsetData@CFont@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@AEBU_GUID@@@Z
?GetProtocolVersion@CDdeServerCallMgr@@UEAAJPEAK@Z
?GetProtocolVersion@CDdeServerCallMgr@@W7EAAJPEAK@Z
?GetProtocolVersion@DDE_CHANNEL@@UEAAJPEAK@Z
?GetProtocolVersion@DDE_CHANNEL@@W7EAAJPEAK@Z
?GetProtocolVersion@MarshallingChannel@@UEAAJPEAK@Z
?GetPsmKeyFromProcessHandle@CallerIdentity@@YAJPEAXPEAPEAG@Z
?GetPsmKeyFromProcessId@CallerIdentity@@YAJKPEAPEAG@Z
?GetPsmKeyFromProcessToken@CallerIdentity@@YAJPEAXPEAPEAG@Z
?GetPv@CRgPv@@QEAAPEAXI@Z
?GetRODelegate@CDefLink@@QEAAPEAUIRunnableObject@@XZ
?GetRainbowPalette@SysInfo@@QEAAJPEAPEAUHPALETTE__@@@Z
?GetRealDataObjPtr@CDragDataObject@@AEAAPEAUIDataObject@@XZ
?GetRegisteredSink@?$AdHocInterceptor@UIElementBehavior@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UIOleWindow@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UIPersist@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UISearchProtocol2@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@?$AdHocInterceptor@UISearchProtocol@@@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@Interceptor@@EEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@LEGACY_INTERCEPTOR@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRemoteFrame@LEGACY_FRAME@@QEAAJXZ
?GetRemoteFrameFor@LEGACY_INTERCEPTOR@@QEAAJPEAPEAUICallFrame@@PEAULEGACY_FRAME@@@Z
?GetResourceManager@@YAJPEAPEAUIMrtResourceManager@@@Z
?GetReturnValue@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJXZ
?GetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJXZ
?GetReturnValue@CallFrame@@UEAAJXZ
?GetReturnValue@LEGACY_FRAME@@UEAAJXZ
?GetRotItem@CRunningObjectTable@@AEAAPEAVCROTItem@@H@Z
?GetRunningClass@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetRunningClass@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetRunningObjectTable@CBindCtx@@UEAAJPEAPEAUIRunningObjectTable@@@Z
?GetRuntimeClassName@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?GetRuntimeClassName@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAPEAUHSTRING__@@@Z
?GetScrBitCount@SysInfo@@QEAAJPEAH@Z
?GetScrColorCount@SysInfo@@QEAAJPEAH@Z
?GetScrPaletteSize@SysInfo@@QEAAJPEAH@Z
?GetSection@CPropertySet@@QEAAPEAVCPropertySection@@U_GUID@@@Z
?GetServerObjectContext@CProxyManagerImpl@CDdeObject@@UEAAPEAUIObjContext@@XZ
?GetShellLink@CFileMoniker@@AEAAJXZ
?GetSink@?$AdHocInterceptor@UIElementBehavior@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UIOleInPlaceObject@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UIOleWindow@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UIPersist@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UIPersistPropertyBag@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UISearchProtocol2@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSink@?$AdHocInterceptor@UISearchProtocol@@@@AEBA?AV?$com_ptr_t@UICallFrameEvents@@Uerr_returncode_policy@wil@@@wil@@XZ
?GetSize@UsageIndexProperty@details_abi@wil@@QEBA_KXZ
?GetSizeMax@CAntiMoniker@@EEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CBaseMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CClassMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CCompositeMoniker@@EEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CFileMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CFont@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CItemMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CLUAMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CObjrefMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CPackagerMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CPicture@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CSessionMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSourceDisplayName@CDefLink@@UEAAJPEAPEAG@Z
?GetSourceMoniker@CDefLink@@UEAAJPEAPEAUIMoniker@@@Z
?GetStackLocation@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAPEAXXZ
?GetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAPEAXXZ
?GetStackLocation@CallFrame@@UEAAPEAXXZ
?GetStackLocation@LEGACY_FRAME@@UEAAPEAXXZ
?GetStackSize@?$AdHocInterceptor@UIElementBehavior@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UIOleWindow@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UIPersist@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UISearchProtocol2@@@@UEAAJKPEAK@Z
?GetStackSize@?$AdHocInterceptor@UISearchProtocol@@@@UEAAJKPEAK@Z
?GetStackSize@DISPATCH_INTERCEPTOR@@UEAAJKPEAK@Z
?GetStackSize@Interceptor@@EEAAJKPEAK@Z
?GetStackSize@LEGACY_INTERCEPTOR@@UEAAJKPEAK@Z
?GetStandardMarshallerFor@MarshallingChannel@@UEAAJAEBU_GUID@@PEAXPEAUIUnknown@@0PEAPEAX@Z
?GetStartPosition@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEBAPEAUTXPOSITION@2@XZ
?GetState@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetState@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetStdItemIndex@@YAHG@Z
?GetStm@CCacheNode@@QEAAPEAUIStream@@HK@Z
?GetStockBitmap@SysInfo@@QEAAJPEAPEAUHBITMAP__@@@Z
?GetString@Accessor@RoVariant@@QEBAJPEAPEAUHSTRING__@@@Z
?GetStringFromUIContext@DragDropTelemetryHelper@@SAPEBGW4PROCESS_UICONTEXT@@@Z
?GetThreadContext@ThreadFailureCallbackHolder@details@wil@@SA_NPEAUFailureInfo@3@PEAV123@PEAD_K@Z
?GetThreadIntegrityLevel@@YAJPEAK@Z
?GetThreadLocalDataCache@details_abi@wil@@YAPEAUThreadLocalData@12@_N@Z
?GetTimeOfLastChange@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CFilteredRunningObjectTable@@EEAAJPEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CObjrefMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CRunningObjectTable@@UEAAJPEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTokenElevationType@@YAJPEAXPEAW4_TOKEN_ELEVATION_TYPE@@@Z
?GetTokenFromHwnd@@YAJPEAUHWND__@@PEAPEAXK@Z
?GetTrustLevel@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAW4TrustLevel@@@Z
?GetTrustLevel@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJPEAW4TrustLevel@@@Z
?GetTypeInfo@CFont@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfo@CPicture@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfo@LEGACY_INTERCEPTOR@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfoCount@CFont@@UEAAJPEAI@Z
?GetTypeInfoCount@CPicture@@UEAAJPEAI@Z
?GetTypeInfoCount@LEGACY_INTERCEPTOR@@UEAAJPEAI@Z
?GetUnmarshalClass@CClassMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CPicture@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CPointerMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@FtmBase@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAXK1KPEAU4@@Z
?GetUnmarshaller@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAUIMarshalSomeone@@@Z
?GetUpdateOptions@CDefLink@@UEAAJPEAK@Z
?GetUserClassID@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetUserClassID@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetUserClassID@COleObjectImpl@CDdeObject@@UEAAJPEAU_GUID@@@Z
?GetUserType@CDefLink@@UEAAJKPEAPEAG@Z
?GetUserType@CDefObject@@UEAAJKPEAPEAG@Z
?GetUserType@COleObjectImpl@CDdeObject@@UEAAJKPEAPEAG@Z
?GetValue@RegistryKey@@QEBAJPEBG0KPEAKPEAX1@Z
?GetValueFromSemaphore@SemaphoreValue@details_abi@wil@@CAJPEAXPEAJ@Z
?GetVersion@RegistryTypeLibRegistration@@UEAAJPEAPEAG@Z
?GetView@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@345@@Z
?GetWalker@CallFrame@@QEBA?AUOAUTIL@@XZ
?GetWeakReference@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAPEAUIWeakReference@@@Z
?GetWeakReference@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJPEAPEAUIWeakReference@@@Z
?GetWeakReference@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAPEAUIWeakReference@@@Z
?GetWeakReference@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJPEAPEAUIWeakReference@@@Z
?GetWin32Path@RegistryTypeLibRegistration@@UEAAJPEAPEAG@Z
?GetWin64Path@RegistryTypeLibRegistration@@UEAAJPEAPEAG@Z
?GetWinRtExtension@CDragOperation@@AEAAJPEAPEAUIDragDropExtensionForOLE@@@Z
?GetWindow@?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@UEAAJPEAPEAUHWND__@@@Z
?GetWindow@?$AdHocInterceptorForwarders@UIOleWindow@@UIOleInPlaceObject@@@@UEAAJPEAPEAUHWND__@@@Z
?GetWindow@?$AdHocInterceptorForwarders@UIOleWindow@@UIOleInPlaceObjectWindowless@@@@UEAAJPEAPEAUHWND__@@@Z
?GetWindow@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAUHWND__@@@Z
?GuidFromString@@YAJPEBGPEAU_GUID@@@Z
?HIconAndSourceFromClass@@YAPEAUHICON__@@AEBU_GUID@@PEAGKPEAI@Z
?HPALETTE_UserFreeExt@@YAXPEAKPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserMarshalExt@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserSizeExt@@YAKPEAKKPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@@Z
?HWND_UserFree64Ext@@YAXPEAKPEAPEAUHWND__@@@Z
?HWND_UserFreeExt@@YAXPEAKPEAPEAUHWND__@@@Z
?HWND_UserMarshal64Ext@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HWND_UserMarshalExt@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HWND_UserSize64Ext@@YAKPEAKKPEAPEAUHWND__@@@Z
?HWND_UserSizeExt@@YAKPEAKKPEAPEAUHWND__@@@Z
?HWND_UserUnmarshal64Ext@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HWND_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HandleFeedBack@CDragOperation@@QEAAHJ@Z
?HandleFromHandle@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?HandleInitMsg@CDDEServer@@QEAAH_J@Z
?HandleMessages@CDragOperation@@QEAAHXZ
?HandsOffStorage@CDefLink@@UEAAJXZ
?HandsOffStorage@CDefObject@@UEAAJXZ
?HandsOffStorage@COleCache@@UEAAJXZ
?HandsOffStorage@CPersistStgImpl@CDdeObject@@UEAAJXZ
?HasHDROPClipboardFormat@@YA_NPEAUIDataObject@@@Z
?HasKey@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAE@Z
?HasKey@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAE@Z
?HasKey@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAE@Z
?HasKey@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAE@Z
?Hash@CAntiMoniker@@EEAAJPEAK@Z
?Hash@CBaseMoniker@@UEAAJPEAK@Z
?Hash@CClassMoniker@@UEAAJPEAK@Z
?Hash@CCompositeMoniker@@EEAAJPEAK@Z
?Hash@CFileMoniker@@UEAAJPEAK@Z
?Hash@CItemMoniker@@UEAAJPEAK@Z
?Hash@CLUAMoniker@@UEAAJPEAK@Z
?Hash@CPackagerMoniker@@UEAAJPEAK@Z
?Hash@CPointerMoniker@@UEAAJPEAK@Z
?Hash@CSessionMoniker@@UEAAJPEAK@Z
?Hdc@CFont@@QEAAPEAUHDC__@@XZ
?HexStringToDword@@YAHAEAPEBGAEAKHG@Z
?HimetricFromPixels@@YAJPEAUtagSIZE@@@Z
?HrCopyTo@@YAJPEAUIStream@@0J@Z
?HrFromDosError@@YAJI@Z
?HrRead@@YAJPEAUIStream@@PEAXK@Z
?HrRegSetValueW@@YAJPEAUHKEY__@@PEBG1@Z
?HrToNtStatus@details@wil@@YAJJ@Z
?IGetObject@CRunningObjectTable@@QEAAJPEAU_MnkEqBuf@@PEAPEAUIUnknown@@K_N@Z
?IGetObjectByPath@CRunningObjectTable@@QEAAJPEAGPEAPEAUIUnknown@@K@Z
?INIT_DISABLED_FEATURES@DISABLED_FEATURES@@CAHPEAT_RTL_RUN_ONCE@@PEAXPEAPEAX@Z
?IStreamToBase64@@YAJPEAUIStream@@PEAG_K@Z
?IconLabelTextOut@@YAXPEAUHDC__@@PEAUHFONT__@@HHIPEAUtagRECT@@PEBD@Z
?InHighContrastMode@@YAHXZ
?InPlaceDeactivate@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@UEAAJXZ
?InPlaceDeactivate@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@UIOleInPlaceObjectWindowless@@@@UEAAJXZ
?Init@?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@UEAAJPEAUIElementBehaviorSite@@@Z
?Init@?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@UEAAJPEAU_TIMEOUT_INFO@@PEAUIProtocolHandlerSite@@PEAU_PROXY_INFO@@@Z
?Init@?$AdHocInterceptorForwarders@UISearchProtocol@@UISearchProtocol2@@@@UEAAJPEAU_TIMEOUT_INFO@@PEAUIProtocolHandlerSite@@PEAU_PROXY_INFO@@@Z
?Init@CDragDefaultCursors@@QEAAHXZ
?Init@COleStaticMutexSem@@QEAAJXZ
?Init@CStmBufRead@@QEAAXPEAUIStream@@@Z
?Init@CStmBufWrite@@QEAAXPEAUIStream@@@Z
?Init@DefaultIBindStatusCallback@@QEAAHPEBG@Z
?Init@SysInfo@@SAJPEAU1@@Z
?InitCache@COleCache@@UEAAJPEAUIDataObject@@@Z
?InitFontObject@CFont@@SAJXZ
?InitFromData@CDefLink@@UEAAJPEAUIDataObject@@HK@Z
?InitFromData@CDefObject@@UEAAJPEAUIDataObject@@HK@Z
?InitFromData@COleObjectImpl@CDdeObject@@UEAAJPEAUIDataObject@@HK@Z
?InitFromRegDb@CEnumFmt10@@UEAAJPEAUHKEY__@@@Z
?InitFromScratch@CEnumFmt10@@UEAAJXZ
?InitHashTable@?$CMap@PEAGAEAPEAGKAEAK@@QEAAJIH@Z
?InitHashTable@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAJI_NPEA_N@Z
?InitHashTable@CMapKeyToValue@@AEAAHXZ
?InitLPACCEL@CPaccelEnum@@QEAAHPEAUHACCEL__@@H@Z
?InitMetaDataCache@@YAHXZ
?InitNew@?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@UEAAJXZ
?InitNew@CDefLink@@UEAAJPEAUIStorage@@@Z
?InitNew@CDefObject@@UEAAJPEAUIStorage@@@Z
?InitNew@CFont@@UEAAJXZ
?InitNew@COleCache@@UEAAJPEAUIStorage@@@Z
?InitNew@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?InitScrollInt@CDragOperation@@AEAAXXZ
?InitSysConv@CDdeObject@@QEAAHXZ
?InitTbl@CScmPatternTbl@@QEAAJXZ
?InitTypeInfoCache@@YAHXZ
?Initialize@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAAJPEAPEAUIEnumCATEGORYINFO@@K@Z
?Initialize@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAAJPEAPEAUIEnumGUID@@K@Z
?Initialize@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAJPEAU?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@345@@Z
?Initialize@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@AEAAJAEBQEAUHSTRING__@@AEBQEAUIInspectable@@@Z
?Initialize@CComCat@@AEAAJPEAUIUnknown@@@Z
?Initialize@CCompositeMoniker@@QEAAHPEAUIMoniker@@0@Z
?Initialize@CEnumCategories@@QEAAJKPEAUIEnumCATEGORYINFO@@@Z
?Initialize@CEnumClassesOfCategories@@QEAAJKQEBU_GUID@@K0PEAUIEnumGUID@@@Z
?Initialize@CFileMoniker@@AEAAHGPEADGPEAGGG@Z
?Initialize@CFileMoniker@@AEAAHGPEBGG@Z
?Initialize@CHashTable@@UEAAXPEAUSHashChain@@PEAVCOleStaticMutexSem@@@Z
?Initialize@CHashTable@@UEAAXPEAUSHashChain@@PEAVCRWLock@@@Z
?Initialize@CItemMoniker@@AEAAHPEBG0@Z
?Initialize@CItemMoniker@@AEAAXPEAGGPEADG0G1G@Z
?Initialize@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@QEAAJPEAU?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@456@@Z
?Initialize@ClipboardBrokerFactory@@CAJXZ
?Initialize@TraceLoggingProvider@wil@@MEAAXXZ
?InitializeAndReadIsAppContainer@@YAJPEAH@Z
?InitializeFormat@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@QEAAJPEBGZZ
?InitializeInvoke@DISPATCH_CLIENT_FRAME@@QEAAXXZ
?InitializeTracing@@YAXPEBG@Z
?InnerAddRef@Interceptor@@EEAAKXZ
?InnerAddRef@LEGACY_FRAME@@UEAAKXZ
?InnerAddRef@LEGACY_INTERCEPTOR@@UEAAKXZ
?InnerAddRef@MarshallingChannel@@UEAAKXZ
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@MEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@DISPATCH_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@Interceptor@@EEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@LEGACY_FRAME@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerRelease@Interceptor@@EEAAKXZ
?InnerRelease@LEGACY_FRAME@@UEAAKXZ
?InnerRelease@LEGACY_INTERCEPTOR@@UEAAKXZ
?InnerRelease@MarshallingChannel@@UEAAKXZ
?Insert@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAUIInspectable@@PEAE@Z
?Interceptor_AddRef@@YAKPEAUIUnknown@@@Z
?Interceptor_QueryInterface@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?Interceptor_Release@@YAKPEAUIUnknown@@@Z
?InternalAddRef@?$ComPtr@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@IEBAXXZ
?InternalAddRef@?$ComPtr@UIDataObject@@@WRL@Microsoft@@IEBAXXZ
?InternalAddRef@?$ComPtr@UIDropTarget@@@WRL@Microsoft@@IEBAXXZ
?InternalAddRef@?$ComPtr@VCProcessPatternTbl@@@WRL@Microsoft@@IEBAXXZ
?InternalDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?InternalRelease@?$ComPtr@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIApplicationAssociationRegistration@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIBindCtx@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UICallingProcessInfo@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UICancelMethodCalls@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClientSecurity@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardBroker@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardBrokerInternal@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardBrokerProvider@DataTransfer@Internal@ApplicationModel@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardPolicyStatics@DataTransfer@Internal@ApplicationModel@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardProtectionServices@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIComCatalogSCM@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIComClassInfo@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIComClassIterator@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDataObject@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDataObjectEx@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDragDropBroker@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDragDropContainerProxy@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDragDropExtensionForOLE@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDropTarget@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIEnumFORMATETC@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIEnumSTATSTG@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIGlobalInterfaceTable@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIImpersonateClipboardOwner@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIInspectable@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIMoniker@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIOSTaskCompletion@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIObjectProvider@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIOleClassInfo@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIOleDataFormatIterator@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIOleDragDropBrokerHost@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIPackagedComClassCatalogInternal@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIPackagedComClassIdIterator@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIRegistration@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIServiceHostBrokerProvider@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIStorage@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIStream@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UITypeLibCatalogInternal@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UITypeLibRegistration@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UITypeLibRegistrationIterator@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UITypeLibRegistrationReader@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIUnwrappableDataObject@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@V?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@V?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@V?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@VCProcessExtensionTbl@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@VCProcessPatternTbl@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@VChunk@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@CClipDataObject@@AEAAKXZ
?Inverse@CBaseMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CClassMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CCompositeMoniker@@EEAAJPEAPEAUIMoniker@@@Z
?Inverse@CFileMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CItemMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CLUAMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CPackagerMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CPointerMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CSessionMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?InverseFromEnum@@YAJPEAUIEnumMoniker@@PEAPEAUIMoniker@@@Z
?Invoke@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAXZZ
?Invoke@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAXZZ
?Invoke@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CFont@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?Invoke@CPicture@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?Invoke@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CallFrame@@UEAAJPEAXZZ
?Invoke@DISPATCH_CLIENT_FRAME@@UEAAJPEAXZZ
?Invoke@DISPATCH_FRAME@@QEAAJPEAX@Z
?Invoke@DISPATCH_SERVER_FRAME@@UEAAJPEAXZZ
?Invoke@LEGACY_INTERCEPTOR@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?InvokeAsClipboard@CBrokeredClipDataObject@@UEAAJPEAUIRunAsClipboard@@@Z
?IsAbsoluteNonUNCPath@@YAHPEBG@Z
?IsAntiMoniker@@YAPEAVCAntiMoniker@@PEAUIMoniker@@@Z
?IsAnyProcessUnderDebugger@ClipboardWatchdog@@CA_NXZ
?IsBSTR@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsBlank@CEMfObject@@UEAAHXZ
?IsBlank@CGenObject@@UEAAHXZ
?IsBlank@CMfObject@@UEAAHXZ
?IsBrokeredTarget@CPrivDragDrop@@UEAAJPEAH@Z
?IsCached@CCacheStream@@UEAAJXZ
?IsCatalogClassOfCategories@CComCat@@SAJPEAUIComClassCategoryInfo@@KQEBU_GUID@@K1@Z
?IsClassOfCategories@CComCat@@UEAAJAEBU_GUID@@KQEBU2@K1@Z
?IsClassOfCategories@CsCatInfo@@UEAAJAEBU_GUID@@KQEBU2@K1@Z
?IsCompositeMoniker@@YAPEAVCCompositeMoniker@@PEAUIMoniker@@@Z
?IsConnected@CDdeServerCallMgr@@UEAAJXZ
?IsConnected@CDdeServerCallMgr@@W7EAAJXZ
?IsConnected@CProxyManagerImpl@CDdeObject@@UEAAHXZ
?IsConnected@DDE_CHANNEL@@UEAAJXZ
?IsConnected@DDE_CHANNEL@@W7EAAJXZ
?IsConnected@MarshallingChannel@@UEAAJXZ
?IsContainerDragOperation@@YA_NXZ
?IsCurrentBinaryEnabledForTracing@@YAHXZ
?IsCurrentClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?IsCurrentClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?IsDirty@CBaseMoniker@@UEAAJXZ
?IsDirty@CClassMoniker@@UEAAJXZ
?IsDirty@CDefLink@@UEAAJXZ
?IsDirty@CDefObject@@UEAAJXZ
?IsDirty@CFileMoniker@@UEAAJXZ
?IsDirty@CFont@@UEAAJXZ
?IsDirty@CObjrefMoniker@@UEAAJXZ
?IsDirty@COleCache@@UEAAJXZ
?IsDirty@CPackagerMoniker@@UEAAJXZ
?IsDirty@CPersistStgImpl@CDdeObject@@UEAAJXZ
?IsDirty@CPicture@@UEAAJXZ
?IsDropAllowed@CDragOperation@@QEAA_NXZ
?IsEmptyString@@YAHPEAG@Z
?IsEnabled@ComTrace@@SA_NE_K@Z
?IsEnabled@DragDropTelemetry@@SA_NE_K@Z
?IsEnabled_@TraceLoggingProvider@wil@@IEBA_NE_K@Z
?IsEqual@CAntiMoniker@@EEAAJPEAUIMoniker@@@Z
?IsEqual@CBaseMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CClassMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CCompositeMoniker@@EEAAJPEAUIMoniker@@@Z
?IsEqual@CFileMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CFont@@UEAAJPEAUIFont@@@Z
?IsEqual@CItemMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CLUAMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CObjrefMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CPackagerMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CPointerMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CSessionMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqualPfn@OLEAUTOMATION_FUNCTIONS@@AEAAHPEAX0H@Z
?IsFile@@YAHGPEAH@Z
?IsFileMoniker@@YAPEAVCFileMoniker@@PEAUIMoniker@@@Z
?IsFormatAvailable@CDdeObject@@AEAAJPEAUtagFORMATETC@@@Z
?IsFormatAvailable@CDefClient@@AEAAHG@Z
?IsIIDSupported@CDdeServerCallMgr@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIIDSupported@CRpcStubBufferImpl@CDdeObject@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIidInList@@YAHAEBU_GUID@@PEAPEBU1@@Z
?IsInScm@CRunningObjectTable@@QEAAHPEAU_MnkEqBuf@@@Z
?IsInitialized@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEBA_NXZ
?IsItemMoniker@@YAPEAVCItemMoniker@@PEAUIMoniker@@@Z
?IsLongComponent@@YAHPEBGPEAPEAG@Z
?IsMDIAccelerator@@YAHPEAUtagMSG@@PEAG@Z
?IsMacPICTSupported@@YAHXZ
?IsMenuCollision@CFrameFilter@@QEAAH_K_J@Z
?IsMnemonic@@YAHPEAUHWND__@@D@Z
?IsNCDrop@@YAHPEAUHWND__@@UtagPOINT@@@Z
?IsObjectMenu@CFrameFilter@@QEAAXII@Z
?IsOle1Class@CFileMoniker@@AEAAHPEAU_GUID@@@Z
?IsOleCommand@@YAHGG@Z
?IsOleInitialized@@YA_NXZ
?IsOwnerLinkStdOleLink@@YAHXZ
?IsPending@CPicture@@QEAAJXZ
?IsPointerMoniker@@YAPEAVCPointerMoniker@@PEAUIMoniker@@@Z
?IsReallyRunning@CDefLink@@UEAAHXZ
?IsRegistryClassOfCategories@CComCat@@SAJAEBU_GUID@@KQEBU2@K1@Z
?IsRunning@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CDefLink@@UEAAHXZ
?IsRunning@CDefObject@@UEAAHXZ
?IsRunning@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CFilteredRunningObjectTable@@EEAAJPEAUIMoniker@@@Z
?IsRunning@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@COleItemContainerImpl@CDdeObject@@UEAAJPEAG@Z
?IsRunning@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CRunningObjectTable@@UEAAJPEAUIMoniker@@@Z
?IsRunningInThisTask@@YAJPEAGPEAH@Z
?IsSAFEARRAY@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsSameAsObjectFormatEtc@@YAJPEAUtagFORMATETC@@G@Z
?IsSeparator@@YAHG@Z
?IsSharableEmbeddedPointers@@YA?AUHAS_INTERFACES@@PEBE@Z
?IsSharableEmbeddedRepeatPointers@@YA?AUHAS_INTERFACES@@AEAPEBE@Z
?IsShareableType@@YA?AUHAS_INTERFACES@@PEBE@Z
?IsSingleServerInstance@@YAHXZ
?IsSystemMoniker@CAntiMoniker@@EEAAJPEAK@Z
?IsSystemMoniker@CBaseMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CClassMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CCompositeMoniker@@EEAAJPEAK@Z
?IsSystemMoniker@CFileMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CItemMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CLUAMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CObjrefMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CPackagerMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CPointerMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CSessionMoniker@@UEAAJPEAK@Z
?IsTaskName@@YAHPEBG@Z
?IsTokenAppContainer@@YAJPEAXPEAH@Z
?IsUIAccessToken@@YAJPEAXPEAH@Z
?IsUpToDate@CDefLink@@UEAAJXZ
?IsUpToDate@CDefObject@@UEAAJXZ
?IsUpToDate@COleObjectImpl@CDdeObject@@UEAAJXZ
?IsValid@CHashTable@@UEBAHXZ
?IsValidPtrOut@@YAHPEAX_K@Z
?IsValidReadPtrIn@@YAHPEBX_K@Z
?IsVariant@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsWindowValid@@YAHPEAUHWND__@@@Z
?ItemCallBack@CDefClient@@AEAAJHPEAG@Z
?Iterate@RawUsageIndex@details_abi@wil@@QEBA_NV?$function@$$A6A_NPEAX_K01I@Z@wistd@@@Z
?KeepData@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEAX@Z
?Last@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?LaunchApp@CDdeObject@@AEAAHXZ
?LetExclusiveRun@XSLOCK@@AEAAXXZ
?LinkCall@ClipboardDataObjectTask@@AEAA_NPEAVCancellableCall@@@Z
?Load@?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@UEAAJPEAUIPropertyBag@@PEAUIErrorLog@@@Z
?Load@CAntiMoniker@@EEAAJPEAUIStream@@@Z
?Load@CBaseMoniker@@UEAAJPEAUIStream@@@Z
?Load@CBmpLoader@@QEAAJPEAVCPicture@@PEAUIStream@@J@Z
?Load@CCacheNode@@QEAAJPEAUIStream@@HH@Z
?Load@CClassMoniker@@UEAAJPEAUIStream@@@Z
?Load@CCompositeMoniker@@EEAAJPEAUIStream@@@Z
?Load@CDefLink@@UEAAJPEAUIStorage@@@Z
?Load@CDefObject@@UEAAJPEAUIStorage@@@Z
?Load@CEMfObject@@UEAAJPEAUIStream@@H@Z
?Load@CExtentList@@QEAAJPEAUIStream@@K@Z
?Load@CFileMoniker@@UEAAJPEAUIStream@@@Z
?Load@CFont@@UEAAJPEAUIPropertyBag@@PEAUIErrorLog@@@Z
?Load@CFont@@UEAAJPEAUIStream@@@Z
?Load@CGenObject@@UEAAJPEAUIStream@@H@Z
?Load@CItemMoniker@@UEAAJPEAUIStream@@@Z
?Load@CLUAMoniker@@UEAAJPEAUIStream@@@Z
?Load@CMfObject@@UEAAJPEAUIStream@@H@Z
?Load@CObjrefMoniker@@UEAAJPEAUIStream@@@Z
?Load@COleCache@@QEAAJPEAUIStorage@@H@Z
?Load@COleCache@@UEAAJPEAUIStorage@@@Z
?Load@CPackagerMoniker@@UEAAJPEAUIStream@@@Z
?Load@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?Load@CPicture@@UEAAJPEAUIStream@@@Z
?Load@CSessionMoniker@@UEAAJPEAUIStream@@@Z
?Load@OLEAUTOMATION_FUNCTIONS@@AEAAXXZ
?LoadHPRES@CEMfObject@@AEAAPEAUHENHMETAFILE__@@XZ
?LoadHPRES@CGenObject@@AEAAPEAXXZ
?LoadHPRES@CMfObject@@AEAAPEAXXZ
?LoadLibraryWithLogging@@YAJW4LoadOrFreeWhy@@PEBGKPEAPEAUHINSTANCE__@@@Z
?LoadOleAut32@OLEAUTOMATION_FUNCTIONS@@AEAAJXZ
?LoadResultFromScm@CRotMonikerEnum@@QEAAJPEAU_MkInterfaceList@@@Z
?LoadSystemProc@@YAKPEADPEBDPEAPEAUHINSTANCE__@@PEAP6A_JXZ@Z
?LoadTOC@COleCache@@AEAAJPEAUIStream@@PEAUIStorage@@@Z
?LoadTOCEntry@CCacheNode@@QEAAJPEAUIStream@@AEAH@Z
?Localize@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@IEAAJAEBU_GUID@@PEAPEAX@Z
?Locate@COleCache@@AEAAPEAVCCacheNode@@KJPEAUtagDVTARGETDEVICE@@@Z
?Locate@COleCache@@AEAAPEAVCCacheNode@@PEAUtagFORMATETC@@PEAK@Z
?Lock@CDDEServer@@QEAAXHPEAUHWND__@@@Z
?Lock@OleClipboardLock@@QEAAJPEAUHWND__@@PEAPEAU2@@Z
?LockConnection@CProxyManagerImpl@CDdeObject@@UEAAJHH@Z
?LockContainer@COleItemContainerImpl@CDdeObject@@UEAAJH@Z
?LockExclusive@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@AEAA?AV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAU_RTL_SRWLOCK@@P6AXPEAU1@@Z$1?ReleaseSRWLockExclusive@@YAX0@ZU?$integral_constant@_K$00@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@2@XZ
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHXZ
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAHXZ
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@QEAAHXZ
?LockExclusive@XSLOCK@@QEAAXXZ
?LockRegion@CAbstractStream@@MEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CPictioFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CStreamDummy@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRunning@CDefLink@@UEAAJHH@Z
?LockRunning@CDefObject@@UEAAJHH@Z
?LockServer@CClassObj@@UEAAJH@Z
?LockServer@CDefClassFactory@@UEAAJH@Z
?LockServer@CMonikerFactory@@UEAAJH@Z
?LockServer@CStdClassFactory@@UEAAJH@Z
?LockServer@ComPsClassFactory@@UEAAJH@Z
?LockShared@XSLOCK@@QEAAHH@Z
?LogErr@@YAXPEAUIErrorLog@@PEBGJ@Z
?LogFailure@details@wil@@YAXPEAXIPEBD110W4FailureType@2@AEBUResultStatus@12@PEBG_NPEAG_KPEAD7PEAUFailureInfo@2@@Z
?LogLoadOrFree@@YAXW4LoadOrFreeWhat@@W4LoadOrFreeWhy@@PEAUHINSTANCE__@@PEBGK@Z
?LogMacPictMsg@@YAXK@Z
?LogStringPrintf@details@wil@@YAPEAGPEAGPEBG1ZZ
?LogTokenSecurityAttribute@ComTrace@@QEAAXPEAXPEAU_TOKEN_SECURITY_ATTRIBUTE_V1@@@Z
?Log_GetLastErrorMsg@in1diag3@details@wil@@YAKPEAXIPEBD1ZZ
?Log_Hr@in1diag3@details@wil@@YAJPEAXIPEBDJ@Z
?Log_HrMsg@in1diag3@details@wil@@YAJPEAXIPEBDJ1ZZ
?Log_IfFailedMsg@in1diag3@details@wil@@YAJPEAXIPEBDJ1ZZ
?Log_Win32@in1diag3@details@wil@@YAKPEAXIPEBDK@Z
?Log_Win32Msg@in1diag3@details@wil@@YAKPEAXIPEBDK1ZZ
?Lookup@?$CMap@PEAGAEAPEAGKAEAK@@QEBAHAEAPEAGAEAK@Z
?Lookup@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAPEAUIInspectable@@@Z
?Lookup@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAPEAUIInspectable@@@Z
?Lookup@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAJAEBQEAUHSTRING__@@PEAPEAVCPair@12@@Z
?Lookup@CDdeConnectionTable@@QEAAJGPEAK@Z
?Lookup@CHashTable@@IEAAPEAUSHashChain@@KPEBX@Z
?Lookup@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAPEAUIInspectable@@@Z
?Lookup@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@PEAPEAUIInspectable@@@Z
?LowerBound@RawUsageIndex@details_abi@wil@@AEAAPEAEPEAE_KPEAX1@Z
?MTACallCancellationWorker@ClipboardDataObjectTask@@CAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?MTATaskCleanupWorker@ClipboardDataObjectTask@@CAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?Make@?$AdHocInterceptor@UIElementBehavior@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UIOleInPlaceObject@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UIOleWindow@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UIPersist@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UIPersistPropertyBag@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UISearchProtocol2@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$AdHocInterceptor@UISearchProtocol@@@@SA?AV?$ComPtr@UIUnknown@@@WRL@Microsoft@@PEAUIUnknown@@@Z
?Make@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@SAJAEBQEAUHSTRING__@@AEBQEAUIInspectable@@PEAPEAV12345@@Z
?MakeAndInitialize@?$ProcessLocalStorageData@UProcessLocalData@details_abi@wil@@@details_abi@wil@@CAJPEBG$$QEAV?$unique_any_t@V?$mutex_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@Uerr_returncode_policy@3@@wil@@@3@PEAPEAV123@@Z
?MakeAndInitialize@?$ProcessLocalStorageData@VFeatureStateData@details_abi@wil@@@details_abi@wil@@CAJPEBG$$QEAV?$unique_any_t@V?$mutex_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@Uerr_returncode_policy@3@@wil@@@3@PEAPEAV123@@Z
?MakeDDEData@@YAHPEAXHPEAPEAXH@Z
?MakeDataAtom@@YAGGH@Z
?MakeGlobal@@YAPEAXPEAD@Z
?MakeItemData@@YAPEAXPEAUDDEPOKE@@PEAXG@Z
?MakeVerbList@@YAJPEAUIOleVerbIterator@@AEBU_GUID@@PEAPEAUVerbList@@@Z
?MapCFToFormatetc@@YAJPEAUHWND__@@IPEAUtagFORMATETC@@@Z
?Marshal@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@DISPATCH_CLIENT_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@DISPATCH_SERVER_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?MarshalInterface@CClassMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CMarshalImplPStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CPicture@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CPointerMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@FtmBase@WRL@Microsoft@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalParam@CallFrame@@QEAAXAEAU_MIDL_STUB_MESSAGE@@AEBUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PEAE@Z
?MatchFormatetc@CClipDataObject@@AEAA?AW4FormatMatchFlag@@PEAUtagFORMATETC@@HPEAW4tagTYMED@@H@Z
?MaybeCreateDocWindow@@YAJGGPEAUHWND__@@0@Z
?MaybeUnlaunchApp@CDdeObject@@AEAAJXZ
?MediumContainsObject@@YAHPEAUtagSTGMEDIUM@@@Z
?MemoryIncrement@CallFrame@@QEAAPEAEPEAEPEBE@Z
?MfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?MfCallbackFuncForGetColorSet@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?MfToPres@@YAJPEAXPEAVCPres@@@Z
?MicrosoftInternalNotifyFailure@details@wil@@YAXPEAUFailureInfo@2@@Z
?MnkMultiToUnicode@@YAJPEADAEAPEAGKAEAGI@Z
?MnkUnicodeToMulti@@YAJPEAGGAEAPEADAEAGAEAH@Z
?MonikerBindToObject@CBindHost@@UEAAJPEAUIMoniker@@PEAUIBindCtx@@PEAUIBindStatusCallback@@AEBU_GUID@@PEAPEAX@Z
?MonikerBindToStorage@CBindHost@@UEAAJPEAUIMoniker@@PEAUIBindCtx@@PEAUIBindStatusCallback@@AEBU_GUID@@PEAPEAX@Z
?MonikerDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?MonikerLoadTypeLib@@YAJPEBGPEAPEAUITypeLib@@@Z
?MoniterBrokeredClipboardOwner@@YAXK@Z
?MoveElementTo@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveNext@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAE@Z
?MoveNext@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAE@Z
?MoveNext@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAE@Z
?NameFromStmix@@YAPEAGK@Z
?NativeToStorage@@YAJPEAUIStorage@@PEAX@Z
?NdrClientZeroOut@@YAXPEAU_MIDL_STUB_MESSAGE@@PEBEPEAE@Z
?NewAssoc@?$CMap@PEAGAEAPEAGKAEAK@@IEAAPEAUCAssoc@1@XZ
?NewAssoc@CMapKeyToValue@@AEAAPEAUCAssoc@1@IPEAXI0@Z
?NewFcr@CFont@@QEAAJPEAH@Z
?NewFontCharSetOfFaceCallBack@@YAHPEAUtagENUMLOGFONTEXW@@PEAUtagNEWTEXTMETRICEXW@@HPEAUFONTFACEDATA@@@Z
?NewNode@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEAAJAEBQEAUHSTRING__@@IIPEAPEAVCNode@12@@Z
?Next@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJKPEAUtagCATEGORYINFO@@PEAK@Z
?Next@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CCompositeMonikerEnum@@UEAAJKPEAPEAUIMoniker@@PEAK@Z
?Next@CEnumCategories@@UEAAJKPEAUtagCATEGORYINFO@@PEAK@Z
?Next@CEnumCategoriesOfCatalogClass@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumCategoriesOfClass@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumClassesOfCategories@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumConnectionsImpl@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z
?Next@CEnumFmt10@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFmt@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFormatEtc@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFormatEtcDataArray@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumSTATDATA@@UEAAJKPEAUtagSTATDATA@@PEAK@Z
?Next@CEnumStatData@@UEAAJKPEAUtagSTATDATA@@PEAK@Z
?Next@CEnumVerb@@EEAAJKPEAUtagOLEVERB@@PEAK@Z
?Next@CRotMonikerEnum@@UEAAJKPEAPEAUIMoniker@@PEAK@Z
?Next@ComClassIterator@@UEAAJPEAU_GUID@@PEAPEAUIComClassInfo@@@Z
?Next@OleClassInfoDataFormatIterator@@UEAAJKPEAG@Z
?Next@OleClassInfoVerbIterator@@UEAAJPEAPEAUIOleVerb@@@Z
?Next@RegistryDataFormatIterator@@UEAAJKPEAG@Z
?Next@RegistryVerbIterator@@UEAAJPEAPEAUIOleVerb@@@Z
?Next@TypeLibRegistrationEnumerator@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?NextTypeLibFromRegistry@TypeLibRegistrationEnumerator@@AEAAJPEAPEAUITypeLibRegistration@@@Z
?NextTypeLibKey@TypeLibRegistrationEnumerator@@AEAAJXZ
?NextVersionKey@TypeLibRegistrationEnumerator@@AEAAJXZ
?NoItemConnections@CDefClient@@QEAAJXZ
?NoisyError_@ComTrace@@QEAAXJPEBGAEBUDiagnosticsInfo@wil@@@Z
?NoteChangeTime@CFilteredRunningObjectTable@@EEAAJKPEAU_FILETIME@@@Z
?NoteChangeTime@CRunningObjectTable@@UEAAJKPEAU_FILETIME@@@Z
?Notify@?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@UEAAJJPEAUtagVARIANT@@@Z
?Notify@CFontEventsCP@@QEAAJJ@Z
?Notify@CNotifyCP@@QEAAJJ@Z
?NotifyFailure@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@UEAA_NAEBUFailureInfo@2@@Z
?NotifyFailure@TraceLoggingProvider@wil@@EEAA_NAEBUFailureInfo@2@@Z
?NtStatusToHr@details@wil@@YAJJ@Z
?Ole10_ParseMoniker@@YAJPEAUIMoniker@@PEAPEAG1@Z
?Ole232DllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?OleAlloc@@YAPEAXK@Z
?OleCallBack@CDdeObject@@QEAAJHPEAVDDE_CHANNEL@@@Z
?OleCheckCallerForClipboardAccess@@YAJPEAH@Z
?OleCheckClipboardCallerIntegrityLevel@@YAJXZ
?OleFlushClipboardEtw@OleClipboardTracing@@SAXJ_N@Z
?OleFlushClipboardInternal@@YAJPEBG_N1@Z
?OleFree@@YAXPEAX@Z
?OleGetAutoConvertInternal@@YAJAEBU_GUID@@PEAU1@_N@Z
?OleGetClipboardData@CClipDataObject@@AEAAJIPEAPEAX@Z
?OleGetClipboardInternal@@YAJPEAPEAUIDataObject@@PEBG_NPEAK@Z
?OleInternalOriginateError@@YAXJG@Z
?OleIsClipboardFormatAvailable@CClipDataObject@@AEAAHI@Z
?OleIsCurrentClipboardEtw@OleClipboardTracing@@SAXJPEAUIDataObject@@_N@Z
?OleIsCurrentClipboardInternal@@YAJPEAUIDataObject@@PEBG_N@Z
?OleLoadWithoutBinding@@YAJPEAUIStorage@@HAEBU_GUID@@PEAUIOleClientSite@@PEAPEAX@Z
?OleRealloc@@YAPEAXPEAXK@Z
?OleRegEnumVerbsInternal@@YAJAEBU_GUID@@PEAPEAUIEnumOLEVERB@@_N@Z
?OleRegGetMiscStatusInternal@@YAJAEBU_GUID@@KPEAK_N@Z
?OleSetClipboardAggregate@OleClipboardAggregateTelemetry@@SAXJPEAUIDataObject@@@Z
?OleSetClipboardEtw@OleClipboardTracing@@SAXJPEAUIDataObject@@_N@Z
?OleSetClipboardInternal@@YAJPEAUIDataObject@@0PEAPEAXPEBGK@Z
?OleSetClipboardInternalForAppContainer@@YAJPEAUIClipboardBroker@@PEAUIDataObject@@@Z
?OleStdGetAuxUserType@@YAJAEBU_GUID@@GPEAGIPEAUHKEY__@@@Z
?OleStdGetUserTypeOfClass@@YAJAEBU_GUID@@PEAGIPEAUHKEY__@@@Z
?OnAck@CDdeObject@@QEAAHPEAVDDE_CHANNEL@@_J@Z
?OnActivate@CPageHolder@@IEAAIPEAUtagNMHDR@@@Z
?OnCall@LEGACY_INTERCEPTOR@@UEAAJPEAUICallFrame@@@Z
?OnClose@CAdvSinkImpl@CDefLink@@UEAAXXZ
?OnClose@CAdvSinkImpl@CDefObject@@UEAAXXZ
?OnClose@CAdviseSinkImpl@CDefClient@@UEAAXXZ
?OnClose@CAdviseSinkImpl@COleCache@@UEAAXXZ
?OnCodeInstallProblem@DefaultIBindStatusCallback@@UEAAJKPEBG0K@Z
?OnContinue@CSyncSync@@UEAAJPEAH@Z
?OnCrash@COleCache@@QEAAJXZ
?OnData@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAXG@Z
?OnDataAvailable@CBindStatusCallback@@UEAAJKKPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataAvailable@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAXG@Z
?OnDataAvailable@DefaultIBindStatusCallback@@UEAAJKKPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefLink@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefObject@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@CDefClient@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@COleCache@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDeactivate@CPageHolder@@IEAAIPEAUtagNMHDR@@@Z
?OnDisconnect@CRunningObjectTable@@UEAAXPEAX@Z
?OnEnterMenuMode@CFrameFilter@@QEAAXXZ
?OnErrorReported@TraceLoggingProvider@wil@@MEAAX_NAEBUFailureInfo@2@@Z
?OnExitMenuMode@CFrameFilter@@QEAAXXZ
?OnExtentChange@CAdviseSinkImpl@CDefClient@@UEAAXKPEAUtagSIZE@@@Z
?OnHelp@CPageHolder@@IEAAHPEAUtagNMHDR@@@Z
?OnInitAck@CDdeObject@@QEAAXPEAVDDE_CHANNEL@@PEAUHWND__@@@Z
?OnLowResource@CBindStatusCallback@@UEAAJK@Z
?OnLowResource@DefaultIBindStatusCallback@@UEAAJK@Z
?OnMessage@CFrameFilter@@QEAA_JI_K_J@Z
?OnNextState@CSyncSync@@UEAAJGHPEAUISyncAdvise@@@Z
?OnObjectAvailable@CBindStatusCallback@@UEAAJAEBU_GUID@@PEAUIUnknown@@@Z
?OnObjectAvailable@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAUIUnknown@@@Z
?OnProgress@CBindStatusCallback@@UEAAJKKKPEBG@Z
?OnProgress@DefaultIBindStatusCallback@@UEAAJKKKPEBG@Z
?OnRename@CAdvSinkImpl@CDefLink@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdvSinkImpl@CDefObject@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@CDefClient@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@COleCache@@UEAAXPEAUIMoniker@@@Z
?OnRun@COleCache@@UEAAJPEAUIDataObject@@@Z
?OnSave@CAdvSinkImpl@CDefLink@@UEAAXXZ
?OnSave@CAdvSinkImpl@CDefObject@@UEAAXXZ
?OnSave@CAdviseSinkImpl@CDefClient@@UEAAXXZ
?OnSave@CAdviseSinkImpl@COleCache@@UEAAXXZ
?OnShareFinished@CSyncSync@@UEAAJXZ
?OnShareWait@CSyncSync@@UEAAJK@Z
?OnShowWindow@COleClientSiteImpl@CDefClient@@UEAAJH@Z
?OnSignaled@SubscriptionList@details_abi@wil@@QEAAXAEAVsrwlock@3@@Z
?OnSize@CPageHolder@@IEAAXXZ
?OnStartBinding@CBindStatusCallback@@UEAAJKPEAUIBinding@@@Z
?OnStartBinding@DefaultIBindStatusCallback@@UEAAJKPEAUIBinding@@@Z
?OnStatusChange@CPageHolder@@UEAAJK@Z
?OnStop@COleCache@@UEAAJXZ
?OnStopBinding@CBindStatusCallback@@UEAAJJPEBG@Z
?OnStopBinding@DefaultIBindStatusCallback@@UEAAJJPEBG@Z
?OnSysCommand@CFrameFilter@@QEAA_J_K_J@Z
?OnTerminate@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAUHWND__@@@Z
?OnTimer@CDdeObject@@QEAAXPEAVDDE_CHANNEL@@@Z
?OnViewChange@CAdvSinkImpl@CDefLink@@UEAAXKJ@Z
?OnViewChange@CAdvSinkImpl@CDefObject@@UEAAXKJ@Z
?OnViewChange@CAdviseSinkImpl@CDefClient@@UEAAXKJ@Z
?OnViewChange@CAdviseSinkImpl@COleCache@@UEAAXKJ@Z
?OnWalkInterface@InterfaceWalkerFree@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?OnWalkInterface@SSimpleWalker@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?OnWindowMessage@?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@UEAAJI_K_JPEA_J@Z
?OpenClsidKey@@YAJU_GUID@@AEAVRegistryKey@@@Z
?OpenLongFileA@@YAHPEBDPEAU_OFLONGSTRUCTA@@I@Z
?OpenOrCreateStream@CStmBufWrite@@QEAAJPEAUIStorage@@PEBG@Z
?OpenSharedFileMapping@@YAPEAXPEBGKPEAPEAXK@Z
?OpenStorage@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStream@CCacheStream@@UEAAJKPEAPEAUIStream@@@Z
?OpenStream@CLimitedWritableStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CReadOnlyStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CStmBufRead@@QEAAJPEAUIStorage@@PEBG@Z
?OutCopy@CallFrame@@QEAAXPEAE0PEBE@Z
?OutInit@CallFrame@@QEAAXPEAV1@PEAPEAE1PEBE@Z
?OutZero@CallFrame@@QEAAXPEAEPEBE@Z
?PageTranslateAccelerator@CPageHolder@@QEAAJPEAUtagMSG@@H@Z
?ParseDisplayName@CAntiMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CClassMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CFileMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CObjrefMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@COleItemContainerImpl@CDdeObject@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseVerbValue@@YAJPEAUHSTRING__@@PEAPEAU1@PEAK2@Z
?Peel@@YAHPEAGGPEAPEAGK@Z
?PersistDataObjectToHGlobal@@YAPEAXPEAUIDataObject@@@Z
?PickSize@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEBAI_K@Z
?PictSetSize@CPicture@@QEAAJXZ
?PictureChanged@CPicture@@UEAAJXZ
?PictureChanged@CPicture@@W7EAAJXZ
?PixelsFromHimetric@@YAXPEAUtagSIZE@@@Z
?Placeholder@IInternalChannelBuffer@@UEAAXXZ
?Poke@CDdeObject@@AEAAJGPEAX@Z
?PokeData@CDefClient@@QEAAJPEAUHWND__@@GPEAX@Z
?PokeStdItems@CDefClient@@QEAAJPEAUHWND__@@GPEAXH@Z
?Pop@CCompositeMonikerEnum@@AEAAPEAUIMoniker@@XZ
?PopDc@CMfObject@@AEAAHXZ
?PopDc@CPicture@@AEAAHXZ
?PostAckToClient@@YAHPEAUHWND__@@0GK@Z
?PostMessageToClient@@YAHPEAUHWND__@@I_K_J@Z
?PostSysCommand@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEBDHH@Z
?PreTranslateAccelerator@COlePropertySheet@@QEAAJPEAUtagMSG@@H@Z
?PrintLoggingMessage@details@wil@@YAXPEAG_KPEBDPEAD@Z
?PrivDragDrop@@YAJPEAUHWND__@@PEAUIDropTarget@@W4tagDRAGOP@@PEAUtagInterfaceData@@PEAUIDataObject@@KU_POINTL@@PEAK0PEAPEAX@Z
?PrivDragDrop@CPrivDragDrop@@UEAAJW4CallerLocalityIndicator@@PEAUHWND__@@PEAUtagInterfaceData@@KKU_POINTL@@PEAKKPEAUIDataObject@@1@Z
?PrivMemFree8@@YAXPEAX@Z
?PrivMemFree@@YAXPEAX@Z
?ProcessHeapAlloc@details@wil@@YAPEAXK_K@Z
?ProcessShutdown@FeatureStateData@details_abi@wil@@QEAAXXZ
?ProcessShutdownInProgress@wil@@YA_NXZ
?Promote@?$StringTraits@PEAUHSTRING__@@@@SAJAEAV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAUHSTRING_BUFFER__@@P6AJPEAU1@@Z$1?WindowsDeleteStringBuffer@@YAJ0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@@wil@@PEAPEAUHSTRING__@@@Z
?Provider@ComTrace@@SAQEBU_tlgProvider_t@@XZ
?Provider@DragDropLogging@@SAQEBU_tlgProvider_t@@XZ
?ProxyInitialize@@YAJPEAU__MIDL_ICallFrame_0004@@PEAUMarshallingChannel@@PEAU_RPC_MESSAGE@@PEAU_MIDL_STUB_MESSAGE@@PEBU_MIDL_STUB_DESC@@K@Z
?ProxyPreCheck@DISPATCH_CLIENT_FRAME@@QEAAJXZ
?PumpUIMessagesWhileWaitingForThread@CDragOperation@@QEAAXPEAX@Z
?PushDc@CMfObject@@AEAAHXZ
?PushDc@CPicture@@AEAAHXZ
?PutUNICODEProgID@@YAJPEAVCompObjStmData@@PEAG@Z
?PutUNICODEUserType@@YAJPEAVCompObjStmData@@PEAG@Z
?QueryFontInfo@CFont@@QEAAJPEAUHFONT__@@PEAUtagTEXTMETRICW@@QEAG@Z
?QueryFormatSupport@CCacheNode@@AEAAHPEAUIDataObject@@@Z
?QueryGetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDefLink@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDefObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CFont@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CFormatOnlyDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetDataEx@CClipDataObject@@UEAAJPEAUtagFORMATETC@@H@Z
?QueryInterface@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardBroker@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardBrokerInternal@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIComClassIterator@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDataObject@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragOperationInternal@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumFORMATETC@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumGUID@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleDataFormatIterator@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleVerb@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleVerbIterator@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIUnknown@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIWeakReference@@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAbstractMarshalingStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAbstractStream@@MEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdvSinkImpl@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdvSinkImpl@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdviseSinkImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdviseSinkImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAntiMoniker@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAntiMoniker@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBaseMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBaseMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindCtx@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindHost@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindStatusCallback@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBrokeredClipDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBrokeredClipDataObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheDataImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheUnkImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheViewImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassObj@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipDataObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCat@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCat@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMoniker@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMoniker@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMonikerEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDAHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDataObjectImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDelayUnlockContainer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDragDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEMfObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumCategories@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumCategoriesOfClass@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumClassesOfCategories@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumConnectionsImpl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFormatEtc@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFormatEtcDataArray@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATDATA@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumStatData@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumVerb@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFilteredRunningObjectTable@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFontEventsCP@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGdiCustodian@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGenObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInner@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInnerUnk@CComCat@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInterfaceFromWindowProp@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CItemMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CItemMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLimitedStreamBase@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMfObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMonikerFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMonikerFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNotifyCP@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COAHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleClientSiteImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleItemContainerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleObjectImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPackagerMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPageHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPersistStgImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPictioFileStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivDragDrop@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CReadOnlyStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRotMonikerEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcStubBufferImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRunningObjectTable@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRunningObjectTable@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStreamDummy@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSyncSync@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CTrackingCompositeMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CTrackingFileMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnknownImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnknownImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnkownOnlyWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUrlMonWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CallFrame@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CallFrame@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CarefullyQueryNewInterfaceContext@@QEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ComPsClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ComPsClassFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DDE_CHANNEL@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DDE_CHANNEL@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DefaultIBindStatusCallback@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InterfaceWalkerFree@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_FRAME@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WDI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@MarshallingChannel@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SSimpleWalker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryRevokeClassFactory@CDDEServer@@QEAAHXZ
?QueryTextMetrics@CFont@@UEAAJPEAUtagTEXTMETRICW@@@Z
?QueueBackgroundSRUMUsageReporting@FeatureStateManager@details@wil@@QEAAXIGI@Z
?RaiseEvent@?$HashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@$0A@$0A@$0A@@Internal@Collections@Foundation@Windows@@SAJZZ
?RaiseException@Details@WRL@Microsoft@@YAXJK@Z
?ReactivateAndUndo@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@UEAAJXZ
?ReactivateAndUndo@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@UIOleInPlaceObjectWindowless@@@@UEAAJXZ
?Read@CBaseMInterfacePointerMarshalingStream@@UEAAJPEAXKPEAK@Z
?Read@CLimitedStreamBase@@UEAAJPEAXKPEAK@Z
?Read@CPictioFileStream@@UEAAJPEAXKPEAK@Z
?Read@CStmBufRead@@QEAAJPEAXK@Z
?Read@CStreamDummy@@UEAAJPEAXKPEAK@Z
?Read@SerializingLockPolicy@XWinRT@@SA?AV?$LockHolder@VComLock@XWinRT@@UAcquireRead@detail@2@@detail@2@AEAVComLock@2@PEAJ@Z
?Read@UsageIndexProperty@details_abi@wil@@QEAA_NAEAPEAEPEAE@Z
?ReadAnsiStringStream@@YAJPEAUIStream@@AEAPEADAEAG@Z
?ReadCompObjStm@@YAJPEAUIStorage@@PEAVCompObjStmData@@@Z
?ReadFromStream@CProperty@@QEAAHPEAUIStream@@@Z
?ReadFromStream@CPropertySection@@QEAAHPEAUIStream@@T_LARGE_INTEGER@@@Z
?ReadFromStream@CPropertySet@@QEAAHPEAUIStream@@@Z
?ReadNameDictFromStream@CPropertySection@@QEAAHPEAUIStream@@@Z
?ReadProp@@YAJPEAUIPropertyBag@@PEBGPEAUtagVARIANT@@PEAUIErrorLog@@@Z
?ReadStorageProperties@@YAJPEAUIStorage@@PEAU_GUID@@@Z
?Receive2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Record@UsageIndexes@details_abi@wil@@QEAAXXZ
?RecordException@details@wil@@YAHJ@Z
?RecordFailFast@details@wil@@YAHJ@Z
?RecordFeatureUsage@FeatureStateData@details_abi@wil@@QEAA_NIW4wil_details_ServiceReportingKind@@_K@Z
?RecordFeatureUsage@FeatureStateManager@details@wil@@QEAAXIW4wil_details_ServiceReportingKind@@_K@Z
?RecordLog@details@wil@@YAHJ@Z
?RecordReturn@details@wil@@YAHJ@Z
?RecordUsage@?$UsageIndex@W4wil_details_ServiceReportingKind@@I$01@details_abi@wil@@QEAA_NW4wil_details_ServiceReportingKind@@II@Z
?RecordUsage@?$UsageIndex@W4wil_details_ServiceReportingKind@@I$0A@@details_abi@wil@@QEAA_NW4wil_details_ServiceReportingKind@@II@Z
?RecordUsage@FeatureStateData@details_abi@wil@@QEAAXXZ
?RecordUsage@RawUsageIndex@details_abi@wil@@QEAA_NPEAX_K01I@Z
?RecordUsageInternal@RawUsageIndex@details_abi@wil@@AEAA_NPEAX_K01I@Z
?RecordWnfUsageIndex@details_abi@wil@@YAXPEBU__WIL__WNF_STATE_NAME@@_KAEBVRawUsageIndex@12@@Z
?RectInPixelsToHimetric@@YAXPEAUHDC__@@PEAUtagRECT@@1@Z
?RecursiveRegDeleteKey@@YAJPEAUHKEY__@@PEAD@Z
?Reduce@CBaseMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CClassMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CCompositeMoniker@@EEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CFileMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CPackagerMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?RefDec@CUnknown@@QEAAKXZ
?RegHelpResumeImpersonate@@YAXPEAX@Z
?RegHelpSuspendImpersonate@@YAJPEAPEAX@Z
?RegReadDefValue@@YAJPEAUHKEY__@@PEBGPEAPEAG@Z
?Register@AppRegistration@@QEAAJXZ
?Register@CFilteredRunningObjectTable@@EEAAJKPEAUIUnknown@@PEAUIMoniker@@PEAK@Z
?Register@CRunningObjectTable@@UEAAJKPEAUIUnknown@@PEAUIMoniker@@PEAK@Z
?Register@ClassRegistration@@QEAAJXZ
?Register@TraceLoggingProvider@wil@@IEAAXQEBU_tlgProvider_t@@P6AXPEBU_GUID@@KE_K2PEAU_EVENT_FILTER_DESCRIPTOR@@PEAX@Z@Z
?RegisterAsync@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterAsync@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterCategories@CComCat@@UEAAJKQEAUtagCATEGORYINFO@@@Z
?RegisterClassImplCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?RegisterClassReqCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?RegisterClassW@@YAJPEBGPEBUtagCLASS_DATA@@@Z
?RegisterClassXXXCategories@CComCat@@AEAAJAEBU_GUID@@KQEAU2@PEBG@Z
?RegisterClipboardFormatIfNeeded@@YAJPEAG0@Z
?RegisterContainerBound@@YAJPEAUIBindCtx@@PEAUIOleItemContainer@@@Z
?RegisterDragDropForHostDragOperation@@YAJPEAUHWND__@@@Z
?RegisterDropTarget@CDragDropBroker@@UEAAJPEAUHWND__@@PEAUIDropTarget@@H@Z
?RegisterItem@CDefClient@@AEAAJPEAGPEAPEAV1@H@Z
?RegisterOLEAtoms@@YAXXZ
?RegisterObjectBound@CBindCtx@@UEAAJPEAUIUnknown@@@Z
?RegisterObjectParam@CBindCtx@@UEAAJPEAGPEAUIUnknown@@@Z
?RegisterSink@?$AdHocInterceptor@UIElementBehavior@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UIOleInPlaceObject@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UIOleWindow@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UIPersist@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UIPersistPropertyBag@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UISearchProtocol2@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@?$AdHocInterceptor@UISearchProtocol@@@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@Interceptor@@EEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@LEGACY_INTERCEPTOR@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterUnregisterInterface@@YAJHUHREG@@AEBU_GUID@@PEBDPEBGHH@Z
?RegisterUnregisterProxy@@YAJHPEAUHINSTANCE__@@PEAPEBUtagProxyFileInfo@@PEBU_GUID@@PEAPEBU3@3@Z
?Rehash@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAJI@Z
?RelativePathTo@CAntiMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CBaseMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CClassMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CCompositeMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CFileMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CItemMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CObjrefMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CPackagerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CPointerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?Release@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAKXZ
?Release@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAKXZ
?Release@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAKH@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UNdrTypeInfo@@@@QEAAKH@Z
?Release@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@W7EAAKXZ
?Release@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAKXZ
?Release@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAKXZ
?Release@?$CWrapperBase@UIEnumFORMATETC@@@@UEAAKXZ
?Release@?$CWrapperBase@UIEnumSTATSTG@@@@UEAAKXZ
?Release@?$CWrapperBase@UIStorage@@@@UEAAKXZ
?Release@?$CWrapperBase@UIStream@@@@UEAAKXZ
?Release@?$CWrapperBase@UIUnknown@@@@UEAAKXZ
?Release@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?Release@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?Release@?$ProcessLocalStorageData@UProcessLocalData@details_abi@wil@@@details_abi@wil@@QEAAXXZ
?Release@?$ProcessLocalStorageData@VFeatureStateData@details_abi@wil@@@details_abi@wil@@QEAAXXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IIterator@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMap@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$00@WRL@Microsoft@@$00$00$0A@U?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@U?$IIterable@PEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@Collections@Foundation@Windows@@@567@@Details@WRL@Microsoft@@WBA@EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardBroker@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardBrokerInternal@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIClipboardTaskCompletion@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIComClassIterator@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDataObject@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragDropBroker@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIDragOperationInternal@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumFORMATETC@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumGUID@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIEnumUnknown@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleDataFormatIterator@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleVerb@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIOleVerbIterator@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistration@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UITypeLibRegistrationReader@@VFtmBase@23@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIUnknown@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClassImpl@U?$RuntimeClassFlags@$01@WRL@Microsoft@@$00$0A@$0A@UIWeakReference@@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@CAbstractStream@@MEAAKXZ
?Release@CAdvSinkImpl@CDefLink@@UEAAKXZ
?Release@CAdvSinkImpl@CDefObject@@UEAAKXZ
?Release@CAdviseSinkImpl@CDefClient@@UEAAKXZ
?Release@CAdviseSinkImpl@COleCache@@UEAAKXZ
?Release@CBaseMoniker@@UEAAKXZ
?Release@CBaseMoniker@@W7EAAKXZ
?Release@CBindCtx@@UEAAKXZ
?Release@CBindHost@@UEAAKXZ
?Release@CBindStatusCallback@@UEAAKXZ
?Release@CBindStatusCallback@@W7EAAKXZ
?Release@CBrokeredClipDataObject@@UEAAKXZ
?Release@CBrokeredClipDataObject@@W7EAAKXZ
?Release@CCacheDataImpl@COleCache@@UEAAKXZ
?Release@CCacheStream@@UEAAKXZ
?Release@CCacheUnkImpl@COleCache@@UEAAKXZ
?Release@CCacheViewImpl@COleCache@@UEAAKXZ
?Release@CClassMoniker@@UEAAKXZ
?Release@CClassMoniker@@W7EAAKXZ
?Release@CClassMoniker@@WBA@EAAKXZ
?Release@CClassObj@@UEAAKXZ
?Release@CClipClientDataWrapper@@UEAAKXZ
?Release@CClipClientDataWrapper@@W7EAAKXZ
?Release@CClipClientDataWrapper@@WBA@EAAKXZ
?Release@CClipDataObject@@UEAAKXZ
?Release@CClipDataObject@@W7EAAKXZ
?Release@CComCat@@UEAAKXZ
?Release@CComCat@@W7EAAKXZ
?Release@CCompositeMonikerEnum@@UEAAKXZ
?Release@CDAHolder@@UEAAKXZ
?Release@CDataObjectImpl@CDdeObject@@UEAAKXZ
?Release@CDdeServerCallMgr@@UEAAKXZ
?Release@CDdeServerCallMgr@@W7EAAKXZ
?Release@CDdeServerCallMgr@@WBA@EAAKXZ
?Release@CDefClassFactory@@UEAAKXZ
?Release@CDefLink@@UEAAKXZ
?Release@CDefLink@@W7EAAKXZ
?Release@CDefLink@@WBA@EAAKXZ
?Release@CDefLink@@WBI@EAAKXZ
?Release@CDefLink@@WCA@EAAKXZ
?Release@CDefObject@@UEAAKXZ
?Release@CDefObject@@W7EAAKXZ
?Release@CDefObject@@WBA@EAAKXZ
?Release@CDefObject@@WBI@EAAKXZ
?Release@CDefObject@@WCA@EAAKXZ
?Release@CDelayUnlockContainer@@UEAAKXZ
?Release@CDragDataObject@@UEAAKXZ
?Release@CEMfObject@@UEAAKXZ
?Release@CEnumCategories@@UEAAKXZ
?Release@CEnumCategoriesOfClass@@UEAAKXZ
?Release@CEnumClassesOfCategories@@UEAAKXZ
?Release@CEnumConnectionsImpl@@UEAAKXZ
?Release@CEnumFormatEtc@@UEAAKXZ
?Release@CEnumFormatEtcDataArray@@UEAAKXZ
?Release@CEnumSTATDATA@@UEAAKXZ
?Release@CEnumStatData@@UEAAKXZ
?Release@CEnumVerb@@EEAAKXZ
?Release@CFilteredRunningObjectTable@@EEAAKXZ
?Release@CFont@@UEAAKXZ
?Release@CFont@@W7EAAKXZ
?Release@CFont@@WBA@EAAKXZ
?Release@CFont@@WBI@EAAKXZ
?Release@CFont@@WCA@EAAKXZ
?Release@CFont@@WCI@EAAKXZ
?Release@CFontEventsCP@@UEAAKXZ
?Release@CGdiCustodian@@UEAAKXZ
?Release@CGenObject@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UIElementBehavior@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIElementBehavior@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObject@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleInPlaceObjectWindowless@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleInPlaceObjectWindowless@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UIOleWindow@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIOleWindow@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UIPersist@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersist@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UIPersistPropertyBag@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol2@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol2@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInner@?$CAggregatable@V?$AdHocInterceptor@UISearchProtocol@@@@U?$InterfaceList@V?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@U?$ChainInterfaces@UICallInterceptor@@UICallIndirect@@VNil@Details@WRL@Microsoft@@V3456@V3456@V3456@V3456@V3456@V3456@V3456@@WRL@Microsoft@@@@U?$InterfaceList@$$V@@@@UEAAKXZ
?Release@CInnerUnk@CComCat@@UEAAKXZ
?Release@CInterfaceFromWindowProp@@UEAAKXZ
?Release@CLUAMoniker@@UEAAKXZ
?Release@CLUAMoniker@@W7EAAKXZ
?Release@CLUAMoniker@@WCI@EAAKXZ
?Release@CLUAMoniker@@WDA@EAAKXZ
?Release@CMarshalImplPStream@@UEAAKXZ
?Release@CMfObject@@UEAAKXZ
?Release@CMonikerFactory@@UEAAKXZ
?Release@CMonikerFactory@@W7EAAKXZ
?Release@CNotifyCP@@UEAAKXZ
?Release@COAHolder@@UEAAKXZ
?Release@COleCache@@UEAAKXZ
?Release@COleCache@@W7EAAKXZ
?Release@COleCache@@WBA@EAAKXZ
?Release@COleClientSiteImpl@CDefClient@@UEAAKXZ
?Release@COleItemContainerImpl@CDdeObject@@UEAAKXZ
?Release@COleObjectImpl@CDdeObject@@UEAAKXZ
?Release@COleStaticMutexSem@@QEAAXXZ
?Release@CPackagerMoniker@@UEAAKXZ
?Release@CPageHolder@@UEAAKXZ
?Release@CPersistStgImpl@CDdeObject@@UEAAKXZ
?Release@CPictioFileStream@@UEAAKXZ
?Release@CPicture@@UEAAKXZ
?Release@CPicture@@W7EAAKXZ
?Release@CPicture@@WBA@EAAKXZ
?Release@CPicture@@WBI@EAAKXZ
?Release@CPicture@@WCA@EAAKXZ
?Release@CPicture@@WCI@EAAKXZ
?Release@CPointerMoniker@@UEAAKXZ
?Release@CPointerMoniker@@W7EAAKXZ
?Release@CPointerMoniker@@WCI@EAAKXZ
?Release@CPrivDragDrop@@UEAAKXZ
?Release@CPrivUnknown@CDefLink@@UEAAKXZ
?Release@CPrivUnknown@CDefObject@@UEAAKXZ
?Release@CProxyManagerImpl@CDdeObject@@UEAAKXZ
?Release@CRotMonikerEnum@@UEAAKXZ
?Release@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?Release@CRunningObjectTable@@UEAAKXZ
?Release@CRunningObjectTable@@W7EAAKXZ
?Release@CSessionMoniker@@UEAAKXZ
?Release@CSessionMoniker@@W7EAAKXZ
?Release@CSessionMoniker@@WCI@EAAKXZ
?Release@CStdClassFactory@@UEAAKXZ
?Release@CStmBufRead@@QEAAXXZ
?Release@CStmBufWrite@@QEAAXXZ
?Release@CStreamDummy@@UEAAKXZ
?Release@CSyncSync@@UEAAKXZ
?Release@CTrackingCompositeMoniker@@UEAAKXZ
?Release@CTrackingFileMoniker@@UEAAKXZ
?Release@CUnknownImpl@CDdeObject@@UEAAKXZ
?Release@CUnknownImpl@CDefClient@@UEAAKXZ
?Release@CUrlMonWrapper@@UEAAKXZ
?Release@CallFrame@@UEAAKXZ
?Release@CallFrame@@W7EAAKXZ
?Release@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?Release@ComPsClassFactory@@UEAAKXZ
?Release@ComPsClassFactory@@W7EAAKXZ
?Release@CsCatInfo@@UEAAKXZ
?Release@DDE_CHANNEL@@UEAAKXZ
?Release@DDE_CHANNEL@@W7EAAKXZ
?Release@DefaultIBindStatusCallback@@UEAAKXZ
?Release@DefaultIBindStatusCallback@@W7EAAKXZ
?Release@Interceptor@@EEAAKXZ
?Release@Interceptor@@G7EAAKXZ
?Release@Interceptor@@GBA@EAAKXZ
?Release@Interceptor@@GBI@EAAKXZ
?Release@Interceptor@@GCI@EAAKXZ
?Release@InterfaceWalkerFree@@UEAAKXZ
?Release@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@LEGACY_FRAME@@UEAAKXZ
?Release@LEGACY_INTERCEPTOR@@UEAAKXZ
?Release@LEGACY_INTERCEPTOR@@W7EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WBA@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WBI@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WCA@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WCI@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WDI@EAAKXZ
?Release@MD_INTERFACE@@QEAAKXZ
?Release@MarshallingChannel@@UEAAKXZ
?Release@MarshallingChannel@@W7EAAKXZ
?Release@OleClipboardLock@@QEAAJXZ
?Release@SSimpleWalker@@UEAAKXZ
?Release@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@Tag@SecureVersionTag@XWinRT@@QEAAJXZ
?Release@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAKXZ
?Release@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@W7EAAKXZ
?Release@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@WBA@EAAKXZ
?ReleaseAllItems@CDefClient@@QEAAXXZ
?ReleaseBoundObjects@CBindCtx@@UEAAJXZ
?ReleaseConnection@CDefObject@@UEAAKKKH@Z
?ReleaseHfont@CFont@@UEAAJPEAUHFONT__@@@Z
?ReleaseInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAX@Z
?ReleaseInterfaces@SSimpleWalker@@QEAAXXZ
?ReleaseLock@XSLOCK@@QEAAXXZ
?ReleaseMarshalData@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@CClassMoniker@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CMarshalImplPStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CPicture@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CPointerMoniker@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CallFrame@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_CLIENT_FRAME@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_SERVER_FRAME@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@FtmBase@WRL@Microsoft@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@Interceptor@@EEAAJKPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@LEGACY_INTERCEPTOR@@UEAAJKPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalingData@@YAXPEAUIStream@@@Z
?ReleaseMemoryInterceptor@LEGACY_INTERCEPTOR@@QEAAXXZ
?ReleaseMutex@details@wil@@YAXPEAX@Z
?ReleaseObjPtrs@CDefClient@@QEAAJXZ
?ReleaseOleApartmentClipboardBrokerReference@@YAJXZ
?ReleaseReference@DDE_CHANNEL@@QEAAKXZ
?ReleaseRemoteInterceptor@LEGACY_INTERCEPTOR@@QEAAXXZ
?Remove@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAUHSTRING__@@@Z
?RemoveAll@?$CMap@PEAGAEAPEAGKAEAK@@QEAAXXZ
?RemoveAll@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAJXZ
?RemoveAll@CMapKeyToValue@@QEAAXXZ
?RemoveAll@CPropertySection@@QEAAXXZ
?RemoveAtPos@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAJPEAUTXPOSITION@2@@Z
?RemoveClipboardDataObject@@YAJPEAUHWND__@@K@Z
?RemoveKey@CMapKeyToValue@@QEAAHPEAXI@Z
?RemoveWndProc@CFrameFilter@@QEAAXXZ
?RenameElement@CLimitedWritableStorage@@UEAAJPEBG0@Z
?RenameElement@CReadOnlyStorage@@UEAAJPEBG0@Z
?Render@CPicture@@UEAAJPEAUHDC__@@JJJJJJJJPEBUtagRECT@@@Z
?Render@CPicture@@W7EAAJPEAUHDC__@@JJJJJJJJPEBUtagRECT@@@Z
?RenderBitmap@CPicture@@QEAAJPEAUHDC__@@JJJJJJJJ@Z
?RenderCurrentFormat@@YAJPEAUHWND__@@IPEAUtagSTGMEDIUM@@PEAUIDataObject@@@Z
?RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@PEAX@Z
?RenderIcon@CPicture@@QEAAJPEAUHDC__@@JJJJJJJJ@Z
?RenderMetafile@CPicture@@QEAAJPEAUHDC__@@JJJJJJJJPEBUtagRECT@@@Z
?ReportTelemetryFailure@TraceLoggingProvider@wil@@IEAAXAEBUFailureInfo@2@@Z
?ReportTraceLoggingFailure@TraceLoggingProvider@wil@@IEAAXAEBUFailureInfo@2@@Z
?Request@COleStaticMutexSem@@QEAAXPEBDK0@Z
?RequestData@CDdeObject@@AEAAJG@Z
?RequestData@CDefClient@@QEAAJPEAUHWND__@@GGPEAPEAX@Z
?RequestDataStd@@YAJGPEAPEAX@Z
?RequestNewObjectLayout@COleClientSiteImpl@CDefClient@@UEAAJXZ
?Reset@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJXZ
?Reset@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJXZ
?Reset@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJXZ
?Reset@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJXZ
?Reset@CBindStatusCallback@@UEAAJXZ
?Reset@CClass@@QEAAJAEBU_GUID@@@Z
?Reset@CCompositeMonikerEnum@@UEAAJXZ
?Reset@CEnumCategories@@UEAAJXZ
?Reset@CEnumCategoriesOfCatalogClass@@UEAAJXZ
?Reset@CEnumCategoriesOfClass@@UEAAJXZ
?Reset@CEnumClassesOfCategories@@UEAAJXZ
?Reset@CEnumConnectionsImpl@@UEAAJXZ
?Reset@CEnumFmt10@@UEAAJXZ
?Reset@CEnumFmt@@UEAAJXZ
?Reset@CEnumFormatEtc@@UEAAJXZ
?Reset@CEnumFormatEtcDataArray@@UEAAJXZ
?Reset@CEnumSTATDATA@@UEAAJXZ
?Reset@CEnumStatData@@UEAAJXZ
?Reset@CEnumVerb@@EEAAJXZ
?Reset@CRotMonikerEnum@@UEAAJXZ
?Reset@ComClassIterator@@UEAAJXZ
?Reset@OleClassInfoDataFormatIterator@@UEAAJXZ
?Reset@RegistryDataFormatIterator@@UEAAJXZ
?Reset@TypeLibRegistrationEnumerator@@UEAAJXZ
?ResetTimer@ClipboardWatchdog@@QEAAXXZ
?Resolve@WeakReferenceImpl@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAUIInspectable@@@Z
?ResolveShellLink@CFileMoniker@@AEAAJH@Z
?ResolveStringOrResourceReference@@YAJPEAUIMrtResourceManager@@PEAUIResourceContext@@PEBGAEAV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?CoTaskMemFree@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@@wil@@PEAPEBG@Z
?ResolveStringOrResourceReference@@YAJPEAUIMrtResourceManager@@PEAUIResourceContext@@PEBG_KPEAG@Z
?RestoreShellLink@CFileMoniker@@AEAAJPEAH@Z
?ResultFromKnownLastError@@YAJXZ
?ResultStringSize@details@wil@@YA_KPEBD@Z
?ResultStringSize@details@wil@@YA_KPEBG@Z
?ResumeImpersonate@@YAXPEAX@Z
?Rethrow@details@wil@@YAXXZ
?RetrieveUsageUnderLock@FeatureStateData@details_abi@wil@@AEAAXAEAUUsageIndexes@23@@Z
?Return_GetLastError@in1diag3@details@wil@@YAJPEAXIPEBD@Z
?Return_Hr@in1diag3@details@wil@@YAXPEAXIPEBDJ@Z
?Return_HrMsg@in1diag3@details@wil@@YAXPEAXIPEBDJ1ZZ
?Return_Win32@in1diag3@details@wil@@YAJPEAXIPEBDK@Z
?Revert@CAbstractStream@@MEAAJXZ
?Revert@CLimitedWritableStorage@@UEAAJXZ
?Revert@CLimitedWritableStream@@UEAAJXZ
?Revert@CPictioFileStream@@UEAAJXZ
?Revert@CReadOnlyStorage@@UEAAJXZ
?Revert@CReadOnlyStream@@UEAAJXZ
?Revert@CStreamDummy@@UEAAJXZ
?Revoke@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJXZ
?Revoke@CDDEServer@@QEAAJXZ
?Revoke@CDefClient@@QEAAJH@Z
?Revoke@CFilteredRunningObjectTable@@EEAAJK@Z
?Revoke@CRunningObjectTable@@UEAAJK@Z
?RevokeDragDropForHostDragOperation@@YAJPEAUHWND__@@@Z
?RevokeHelper@CRunningObjectTable@@AEAAJKH@Z
?RevokeObjectBound@CBindCtx@@UEAAJPEAUIUnknown@@@Z
?RevokeObjectParam@CBindCtx@@UEAAJPEAG@Z
?RoundDiv@@YAJJJ@Z
?RtlDisownModuleHeapAllocation@details@wil@@YAJPEAX0@Z
?RtlDllShutdownInProgress@details@wil@@YAEXZ
?RtlNtStatusToDosErrorNoTeb@details@wil@@YAKJ@Z
?Run@CDefLink@@UEAAJPEAUIBindCtx@@@Z
?Run@CDefObject@@UEAAJPEAUIBindCtx@@@Z
?RunToTimeLimit@ClipboardDataObjectTask@@UEAAJXZ
?RunningMoniker@@YAHPEAUIBindCtx@@PEAGKPEAKPEAPEAUIMoniker@@@Z
?RuntimeBrokerDeadEtw@OleClipboardTracing@@SAXJJJJ@Z
?RuntimeClassInitialize@CDragOperation@@QEAAJPEAUIDataObject@@PEAUIDropSource@@KPEAKHPEAPEAXH@Z
?RuntimeClassInitialize@CEnumCategoriesOfCatalogClass@@QEAAJAEBV1@@Z
?RuntimeClassInitialize@CEnumCategoriesOfCatalogClass@@QEAAJPEAUIComClassCategoryInfo@@_N@Z
?RuntimeClassInitialize@CProcessPatternTbl@@QEAAJXZ
?RuntimeClassInitialize@ClipboardDataObjectTask@@QEAAJK@Z
?RuntimeClassInitialize@ComClassIterator@@QEAAJAEBV1@@Z
?RuntimeClassInitialize@ComClassIterator@@QEAAJ_N@Z
?RuntimeClassInitialize@OleClassInfoDataFormatIterator@@QEAAJAEBV1@@Z
?RuntimeClassInitialize@OleClassInfoDataFormatIterator@@QEAAJPEAUIOleClassInfo@@@Z
?RuntimeClassInitialize@OleClassInfoVerb@@QEAAJPEAUIMrtResourceManager@@PEAUIResourceContext@@PEAUHSTRING__@@2@Z
?RuntimeClassInitialize@OleClassInfoVerbIterator@@QEAAJPEAUIMrtResourceManager@@PEAUIResourceContext@@PEAUIOleClassInfo@@@Z
?RuntimeClassInitialize@RegistryDataFormatIterator@@QEAAJAEBU_GUID@@@Z
?RuntimeClassInitialize@RegistryVerb@@QEAAJPEBGPEAUHKEY__@@@Z
?RuntimeClassInitialize@RegistryVerbIterator@@QEAAJPEBG@Z
?RuntimeClassInitialize@TypeLibRegistrationEnumerator@@QEAAJAEBV1@@Z
?RuntimeClassInitialize@TypeLibRegistrationEnumerator@@QEAAJ_N@Z
?STGMEDIUM_UserFreeExt@@YAXPEAKPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserMarshalExt@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserSizeExt@@YAKPEAKKPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@@Z
?SafeArrayClear@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@H@Z
?SafeArrayCopy@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@PEAPEAU2@@Z
?SafeArrayCopyData@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@0@Z
?SafeArrayDestroy@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayLock@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayMarshal@OLEAUTOMATION_FUNCTIONS@@CAPEAEPEAKPEAEPEAPEAUtagSAFEARRAY@@@Z
?SafeArraySize@OLEAUTOMATION_FUNCTIONS@@CAKPEAKKPEAPEAUtagSAFEARRAY@@@Z
?SafeArrayUnlock@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayUnmarshal@OLEAUTOMATION_FUNCTIONS@@CAPEAEPEAKPEAEPEAPEAUtagSAFEARRAY@@@Z
?SafeIntOnOverflow@?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@SAXXZ
?SafeRelease@CRefExportCount@@QEAAKXZ
?SafeRelease@CSafeRefCount@@QEAAKXZ
?SafeReleaseAndNULL@@YAXPEAPEAUIUnknown@@@Z
?SafeUnknownDecrementReference@Details@WRL@Microsoft@@YAKAECJ@Z
?SafeUnknownIncrementReference@Details@WRL@Microsoft@@YAKAECJ@Z
?SanityCheck@@YAJPEBUtagCInterfaceStubHeader@@K@Z
?Save@?$AdHocInterceptorForwarders@UIPersistPropertyBag@@U1@@@UEAAJPEAUIPropertyBag@@HH@Z
?Save@CAntiMoniker@@EEAAJPEAUIStream@@H@Z
?Save@CBaseMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CCacheNode@@QEAAJPEAUIStorage@@HH@Z
?Save@CClassMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CCompositeMoniker@@EEAAJPEAUIStream@@H@Z
?Save@CDdeObject@@AEAAJPEAUIStorage@@@Z
?Save@CDefLink@@UEAAJPEAUIStorage@@H@Z
?Save@CDefObject@@UEAAJPEAUIStorage@@H@Z
?Save@CEMfObject@@UEAAJPEAUIStream@@@Z
?Save@CExtentList@@QEAAJPEAUIStream@@@Z
?Save@CFileMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CFont@@UEAAJPEAUIPropertyBag@@HH@Z
?Save@CFont@@UEAAJPEAUIStream@@H@Z
?Save@CGenObject@@UEAAJPEAUIStream@@@Z
?Save@CItemMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CLUAMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CMfObject@@UEAAJPEAUIStream@@@Z
?Save@CObjrefMoniker@@UEAAJPEAUIStream@@H@Z
?Save@COleCache@@UEAAJPEAUIStorage@@H@Z
?Save@CPackagerMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@H@Z
?Save@CPicture@@UEAAJPEAUIStream@@H@Z
?Save@CSessionMoniker@@UEAAJPEAUIStream@@H@Z
?SaveAsFile@CPicture@@UEAAJPEAUIStream@@HPEAJ@Z
?SaveAsFile@CPicture@@W7EAAJPEAUIStream@@HPEAJ@Z
?SaveCompleted@CDefLink@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@CDefObject@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@COleCache@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?SaveHeader@CPicture@@QEAAJPEAUIStream@@PEAJ@Z
?SaveObject@COleClientSiteImpl@CDefClient@@UEAAJXZ
?SaveOriginal@CPicture@@QEAAJPEAUIStream@@PEAJ@Z
?SavePicture@CPicture@@QEAAJPEAUIStream@@HHPEAJ@Z
?SaveTOC@COleCache@@AEAAJPEAUIStorage@@H@Z
?SaveTOCEntry@CCacheNode@@QEAAJPEAUIStream@@H@Z
?SaveUnicodeAsAnsi@@YAJPEAUIStream@@PEAGGPEADG@Z
?ScalePictExt@CMfObject@@AEAAXPEAUHDC__@@HHHH@Z
?ScalePictExt@CPicture@@AEAAXPEAUHDC__@@HHHH@Z
?ScaleRectExt@CMfObject@@AEAAXPEAUHDC__@@HHHH@Z
?ScaleRectExt@CPicture@@AEAAXPEAUHDC__@@HHHH@Z
?ScanArg@@YAPEADPEAD@Z
?ScanBoolArg@@YAPEADPEADPEAH@Z
?ScanCommand@@YAGPEADGPEAPEADPEAG@Z
?ScanItemOptions@@YAJPEAGPEAH@Z
?ScheduleClipboardWorkWithPLM@@YAJKPEAPEAUIOSTaskCompletion@@@Z
?SearchForPattern@CPatternTbl@@AEAAJPEAXPEAU_GUID@@@Z
?SearchItem@CDefClient@@AEAAPEAV1@PEAG@Z
?Seek@CBaseMInterfacePointerMarshalingStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CLimitedStreamBase@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CPictioFileStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CStreamDummy@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?SelectPicture@CPicture@@UEAAJPEAUHDC__@@PEAPEAU2@PEAI@Z
?SelectPicture@CPicture@@UEAAJPEAUHDC__@@PEAPEAU2@PEA_K@Z
?Send2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?Send@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?SendDataMsg1@CDefClient@@AEAAHPEAXG@Z
?SendDataMsg@CDefClient@@AEAAHG@Z
?SendDevInfo@CDefClient@@AEAAXPEAUHWND__@@@Z
?SendExecuteAck@CDefClient@@QEAAXJ@Z
?SendInitMsgToChildren@@YAHPEAUHWND__@@I_K_J@Z
?SendMsgAndWaitForReply@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@HG_JHHHH@Z
?SendMsgToChildren@@YAHPEAUHWND__@@I_K_J@Z
?SendOnClose@CDdeObject@@AEAAJXZ
?SendOnClose@COAHolder@@UEAAJXZ
?SendOnDataChange@CDAHolder@@UEAAJPEAUIDataObject@@KK@Z
?SendOnDataChange@CDdeObject@@QEAAJH@Z
?SendOnLinkSrcChange@COAHolder@@QEAAJPEAUIMoniker@@@Z
?SendOnRename@COAHolder@@UEAAJPEAUIMoniker@@@Z
?SendOnSave@COAHolder@@UEAAJXZ
?SendReceive2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendRenameMsgs@CDefClient@@AEAAXPEAX@Z
?SendServerTerminateMsg@CDDEServer@@AEAAXXZ
?SendTerminateMsg@CDefClient@@AEAAXXZ
?Set@CClass@@QEAAJAEBU_GUID@@PEAUIStorage@@@Z
?Set@CProperty@@QEAAHQEAX@Z
?Set@CPropertySection@@QEAAHKPEAXK@Z
?Set@ThreadLocalFailureInfo@details_abi@wil@@QEAAXAEBUFailureInfo@3@I@Z
?SetAdvise@CCacheViewImpl@COleCache@@UEAAJKKPEAUIAdviseSink@@@Z
?SetAsBaseFor@DISPATCH_INTERCEPTOR@@UEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAsBaseFor@Interceptor@@EEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAsBaseFor@LEGACY_INTERCEPTOR@@UEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAssocValue@CMapKeyToValue@@AEBAXPEAUCAssoc@1@PEAX@Z
?SetAt@?$CMap@PEAGAEAPEAGKAEAK@@QEAAJAEAPEAGAEAK@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUNdrTypeInfo@@@Z
?SetAt@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@QEAAJAEBQEAUHSTRING__@@AEBQEAUIInspectable@@PEAPEAUTXPOSITION@2@@Z
?SetAt@CMapKeyToValue@@QEAAHPEAXI0@Z
?SetBindOptions@CBindCtx@@UEAAJPEAUtagBIND_OPTS@@@Z
?SetBitmapData@CGenObject@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetBuffer@RawUsageIndex@details_abi@wil@@QEAAXPEAX_K1@Z
?SetCategories@CEnumClassesOfCategories@@AEAAJKQEBU_GUID@@K0@Z
?SetClass@CLimitedWritableStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CReadOnlyStorage@@UEAAJAEBU_GUID@@@Z
?SetClientSite@CDefClient@@QEAAJXZ
?SetClientSite@CDefLink@@UEAAJPEAUIOleClientSite@@@Z
?SetClientSite@CDefObject@@UEAAJPEAUIOleClientSite@@@Z
?SetClientSite@COleObjectImpl@CDdeObject@@UEAAJPEAUIOleClientSite@@@Z
?SetClipDataObjectInTLS@@YAXPEAUIDataObject@@K@Z
?SetClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?SetClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?SetClipboardDataObject@@YAJPEAUHWND__@@PEAUIDataObject@@1PEAPEAX@Z
?SetClipboardFormats@@YAJPEAUHWND__@@PEAUIDataObject@@@Z
?SetClipboardOwnerWindowProperty@@YAJPEAUHWND__@@PEBGK@Z
?SetColorScheme@CDefLink@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetColorScheme@CDefObject@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetColorScheme@COleObjectImpl@CDdeObject@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetContainedObject@CDefLink@@UEAAJH@Z
?SetContainedObject@CDefObject@@UEAAJH@Z
?SetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CFont@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CFormatOnlyDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetDataObject@CDragOperation@@UEAAJPEAUIDataObject@@@Z
?SetDataWDO@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HAEAHPEAUIDataObject@@@Z
?SetDataWDO@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDataWDO@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDataWDO@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDerivesFromIDispatch@MD_INTERFACE@@QEAAJH@Z
?SetDropSourceEnterpriseId@CDropTargetAdapter@@QEAAJPEBG@Z
?SetDropSourceEnterpriseId@CPrivDragDrop@@UEAAJPEBG@Z
?SetElementTimes@CLimitedWritableStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CReadOnlyStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetExtent@CDefLink@@UEAAJKPEAUtagSIZE@@@Z
?SetExtent@CDefObject@@UEAAJKPEAUtagSIZE@@@Z
?SetExtent@COleObjectImpl@CDdeObject@@UEAAJKPEAUtagSIZE@@@Z
?SetFailureInfo@StoredFailureInfo@wil@@QEAAXAEBUFailureInfo@2@@Z
?SetFormatAsHGlobal@@YAJGPEAX_K@Z
?SetHdc@CFont@@UEAAJPEAUHDC__@@@Z
?SetHostNames@CDefLink@@UEAAJPEBG0@Z
?SetHostNames@CDefObject@@UEAAJPEBG0@Z
?SetHostNames@COleObjectImpl@CDdeObject@@UEAAJPEBG0@Z
?SetIID@DISPATCH_INTERCEPTOR@@UEAAJAEBU_GUID@@@Z
?SetIID@Interceptor@@EEAAJAEBU_GUID@@@Z
?SetIID@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@@Z
?SetLastError@ThreadLocalData@details_abi@wil@@QEAAXAEBUFailureInfo@3@@Z
?SetMapping@CProxyManagerImpl@CDdeObject@@UEAAXPEAX@Z
?SetMetaData@Interceptor@@AEAAJPEAUNdrTypeInfo@@@Z
?SetMetaData@MD_INTERFACE@@QEAAJPEAUNdrTypeInfo@@PEBUtagCInterfaceStubHeader@@PEBD@Z
?SetMetaData@MD_METHOD@@QEAAXPEBUtagCInterfaceStubHeader@@KPEAUMD_INTERFACE@@PEAUNdrTypeInfo@@@Z
?SetMoniker@CDefLink@@UEAAJKPEAUIMoniker@@@Z
?SetMoniker@CDefObject@@UEAAJKPEAUIMoniker@@@Z
?SetMoniker@COleObjectImpl@CDdeObject@@UEAAJKPEAUIMoniker@@@Z
?SetName@CPropertySection@@QEAAHKPEBG@Z
?SetObjectRects@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@UEAAJPEBUtagRECT@@0@Z
?SetObjectRects@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@UIOleInPlaceObjectWindowless@@@@UEAAJPEBUtagRECT@@0@Z
?SetOleautModule@@YAXPEAUHINSTANCE__@@@Z
?SetOwnerTableHint@XSLOCK@@AEAAXV?$OPAQUE_HANDLE@$00@@PEAUOWNERENTRY@1@@Z
?SetParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@CallFrame@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@DISPATCH_FRAME@@UEAAJKPEAUtagVARIANT@@@Z
?SetParamMetaData@MD_METHOD@@QEAAXPEAUMD_PARAM@@@Z
?SetParameters@CClassMoniker@@QEAAJPEBG@Z
?SetPathShellLink@CFileMoniker@@AEAAJXZ
?SetPictExt@CMfObject@@AEAAXPEAUHDC__@@HH@Z
?SetPictExt@CPicture@@AEAAXPEAUHDC__@@HH@Z
?SetPictOrg@CMfObject@@AEAAXPEAUHDC__@@HHH@Z
?SetPictOrg@CPicture@@AEAAXPEAUHDC__@@HHH@Z
?SetPropsetData@CFont@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@AEBU_GUID@@@Z
?SetPv@CRgPv@@QEAAXIPEAX@Z
?SetRatio@CFont@@UEAAJJJ@Z
?SetRegistryValue@@YAJUHREG@@PEBGZZ
?SetResultLoggingCallback@wil@@YAXP6AXAEBUFailureInfo@1@@_E@Z
?SetReturnValue@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAXJ@Z
?SetReturnValue@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAXJ@Z
?SetReturnValue@CallFrame@@UEAAXJ@Z
?SetReturnValue@LEGACY_FRAME@@UEAAXJ@Z
?SetSize@?$CArray@PEAVCPageHolder@@AEAPEAV1@@@QEAAJHH@Z
?SetSize@?$CArray@PEAVCProperty@@AEAPEAV1@@@QEAAJHH@Z
?SetSize@?$CArray@PEAVCPropertySection@@AEAPEAV1@@@QEAAJHH@Z
?SetSize@?$CArray@U_GUID@@AEAU1@@@QEAAJHH@Z
?SetSize@CBaseMInterfacePointerMarshalingStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CLimitedWritableStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CPageHolderTemplate@@QEAAXAEAUtagSIZE@@@Z
?SetSize@CPictioFileStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CReadOnlyStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CStreamDummy@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSourceDisplayName@CDefLink@@UEAAJPEBG@Z
?SetSourceMoniker@CDefLink@@UEAAJPEAUIMoniker@@AEBU_GUID@@@Z
?SetStackLocation@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAXPEAX@Z
?SetStackLocation@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAXPEAX@Z
?SetStackLocation@CallFrame@@UEAAXPEAX@Z
?SetStackLocation@LEGACY_FRAME@@UEAAXPEAX@Z
?SetStateBits@CLimitedWritableStorage@@UEAAJKK@Z
?SetStateBits@CReadOnlyStorage@@UEAAJKK@Z
?SetStdInfo@CDefClient@@AEAAJPEAUHWND__@@PEAGPEAX@Z
?SetSz@CClass@@QEAAJPEAG@Z
?SetTargetDevice@CDdeObject@@AEAAJPEBUtagDVTARGETDEVICE@@@Z
?SetTopic@CDdeObject@@QEAAXG@Z
?SetUnhandledException@?$ActivityData@VDragDropLogging@@U_TlgReflectorTag_Param0IsProviderType@@@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@QEAAJXZ
?SetUpdateOptions@CDefLink@@UEAAJK@Z
?SetUpdateTimes@CDefLink@@AEAAJXZ
?SetupAdviseConnection@CCacheNode@@QEAAJPEAUIDataObject@@PEAUIAdviseSink@@@Z
?ShiftToEnd@?$CArray@VCCacheNode@@@@QEAAHK@Z
?ShowDialog@CHlprDialog@@UEAA_JPEAUHINSTANCE__@@PEBGPEAUHWND__@@@Z
?ShowObject@COleClientSiteImpl@CDefClient@@UEAAJXZ
?ShutDown@?$AdHocInterceptorForwarders@UISearchProtocol@@U1@@@UEAAJXZ
?ShutDown@?$AdHocInterceptorForwarders@UISearchProtocol@@UISearchProtocol2@@@@UEAAJXZ
?Shutdown@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?Shutdown@?$CALLFRAME_CACHE@UNdrTypeInfo@@@@QEAAXXZ
?Shutdown@ClipboardBrokerFactory@@SAXXZ
?Signal@CBindStatusCallback@@UEAAJXZ
?SiteTranslateAccelerator@COlePropertySheet@@QEAAJPEAUtagMSG@@H@Z
?SizeOfTYPEDESC@@YAJPEAUITypeInfo@@PEAUtagTYPEDESC@@PEAK@Z
?SizeTSub@@YAJ_K0PEA_K@Z
?Skip@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJK@Z
?Skip@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJK@Z
?Skip@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJK@Z
?Skip@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJK@Z
?Skip@CCompositeMonikerEnum@@UEAAJK@Z
?Skip@CEnumCategories@@UEAAJK@Z
?Skip@CEnumCategoriesOfCatalogClass@@UEAAJK@Z
?Skip@CEnumCategoriesOfClass@@UEAAJK@Z
?Skip@CEnumClassesOfCategories@@UEAAJK@Z
?Skip@CEnumConnectionsImpl@@UEAAJK@Z
?Skip@CEnumFmt10@@UEAAJK@Z
?Skip@CEnumFmt@@UEAAJK@Z
?Skip@CEnumFormatEtc@@UEAAJK@Z
?Skip@CEnumFormatEtcDataArray@@UEAAJK@Z
?Skip@CEnumSTATDATA@@UEAAJK@Z
?Skip@CEnumStatData@@UEAAJK@Z
?Skip@CEnumVerb@@EEAAJK@Z
?Skip@CRotMonikerEnum@@UEAAJK@Z
?Skip@TypeLibRegistrationEnumerator@@UEAAJK@Z
?SkipValues@RawUsageIndex@details_abi@wil@@AEAAPEAEAEAUUsageIndexProperty@23@PEAE@Z
?Split@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@SAJPEAU?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@345@PEAPEAU6345@1AEBU?$DefaultEqualityPredicate@PEAUHSTRING__@@@2345@@Z
?Split@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@345@0@Z
?Split@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@456@0@Z
?Split@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IMapView@PEAUHSTRING__@@PEAUIInspectable@@@456@0@Z
?SrvrExecute@CDDEServer@@QEAAJPEAUHWND__@@PEAX0@Z
?SrvrHandleIncomingCall@@YAJPEAVCDDEServer@@PEAUHWND__@@PEAX1@Z
?StRead10NativeData@@YAJPEAUIStorage@@PEAPEAX@Z
?StRead@@YAJPEAUIStream@@PEAXK@Z
?StSave10ItemName@@YAJPEAUIStorage@@PEBD@Z
?StSave10NativeData@@YAJPEAUIStorage@@PEAXH@Z
?StSetSize@@YAJPEAUIStream@@KH@Z
?StartWatching@ThreadFailureCallbackHolder@details@wil@@QEAAXXZ
?Stat@CAbstractStream@@MEAAJPEAUtagSTATSTG@@K@Z
?Stat@CLimitedStreamBase@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CLimitedWritableStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CPictioFileStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CReadOnlyStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CStreamDummy@@UEAAJPEAUtagSTATSTG@@K@Z
?StdTypesGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?StdTypesRegisterServer@@YAJXZ
?StmToClipfmt@@YAJAEAVCStmBufRead@@PEAK1W4TXTTYPE@@@Z
?Stop@CDefObject@@QEAAJXZ
?StopActivity@DragDropSession@DragDropTelemetry@@MEAAXXZ
?StopWatching@ThreadFailureCallbackHolder@details@wil@@QEAAXXZ
?StringCat@@YAJPEAPEAGPEAD@Z
?StringCat@@YAJPEAPEAGZZ
?StringCbCatA@@YAJPEAD_KPEBD@Z
?StringCbCatW@@YAJPEAG_KPEBG@Z
?StringCbCopyA@@YAJPEAD_KPEBD@Z
?StringCbCopyW@@YAJPEAG_KPEBG@Z
?StringCbLengthA@@YAJPEBD_KPEA_K@Z
?StringCbLengthW@@YAJPEBG_KPEA_K@Z
?StringCbPrintfA@@YAJPEAD_KPEBDZZ
?StringCbPrintfW@@YAJPEAG_KPEBGZZ
?StringCchCatW@@YAJPEAG_KPEBG@Z
?StringCchCopyA@@YAJPEAD_KPEBD@Z
?StringCchCopyExW@@YAJPEAG_KPEBGPEAPEAGPEA_KK@Z
?StringCchCopyNExW@@YAJPEAG_KPEBG1PEAPEAGPEA_KK@Z
?StringCchCopyNW@@YAJPEAG_KPEBG1@Z
?StringCchCopyW@@YAJPEAG_KPEBG@Z
?StringCchLengthW@@YAJPEBG_KPEA_K@Z
?StringCchPrintfA@@YAJPEAD_KPEBDZZ
?StringCchPrintfA@details@wil@@YAJPEAD_KPEBDZZ
?StringCchPrintfExA@@YAJPEAD_KPEAPEADPEA_KKPEBDZZ
?StringCchPrintfExW@@YAJPEAG_KPEAPEAGPEA_KKPEBGZZ
?StringCchPrintfW@@YAJPEAG_KPEBGZZ
?StringCchVPrintfW@@YAJPEAG_KPEBGPEAD@Z
?StringFromGuid@@YAXAEBU_GUID@@PEAG@Z
?StubPostCheck@DISPATCH_SERVER_FRAME@@QEAAJXZ
?StubPreCheck@DISPATCH_SERVER_FRAME@@QEAAJXZ
?SubscribeToEnabledStateChanges@FeatureStateManager@details@wil@@QEAAXPEAPEAUFEATURE_STATE_CHANGE_SUBSCRIPTION__@@P6AXPEAX@Z1@Z
?SubscribeToUsageFlush@FeatureStateManager@details@wil@@QEAAXPEAPEAUFEATURE_STATE_CHANGE_SUBSCRIPTION__@@P6AXPEAX@Z@Z
?SubscribeUnderLock@SubscriptionList@details_abi@wil@@QEAAXPEAPEAUFEATURE_STATE_CHANGE_SUBSCRIPTION__@@P6AXPEAX@Z1@Z
?Subtract@CDdeConnectionTable@@QEAAJKPEAGPEAK@Z
?Swap@RawUsageIndex@details_abi@wil@@QEAAXAEAV123@@Z
?SysCreateStream@SysInfo@@QEAAJKPEAKPEAPEAUIStream@@@Z
?SysDestroyStream@SysInfo@@QEAAJK@Z
?SysOpenStream@SysInfo@@QEAAJKKPEAPEAUIStream@@@Z
?SzLibIdOfIID@@YAJUHREG@@PEAU_GUID@@PEAG2PEAH@Z
?TLSGetDdeClientWindow@@YAPEAXXZ
?TLSGetDdeServer@@YAPEAUHWND__@@XZ
?TearDownAdviseConnection@CCacheNode@@QEAAJPEAUIDataObject@@@Z
?TermConv@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@H@Z
?Terminate@CDefClient@@QEAAJPEAUHWND__@@0@Z
?TerminateNonRenameClients@CDefClient@@AEAAXPEAV1@@Z
?TestRegistryValue@@YAJUHREG@@PEBG1@Z
?ThrowIfError@@YAXJ@Z
?ThrowResultExceptionInternal@details@wil@@YAXAEBUFailureInfo@2@@Z
?TimerCallback@ClipboardWatchdog@@CAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?TlgAggregateInternalProviderCallback@@YAXPEBU_GUID@@KE_K1PEAU_EVENT_FILTER_DESCRIPTOR@@PEAX@Z
?TlgAggregateInternalRegisteredProviderEtwCallback@@YAXPEBU_GUID@@KE_K1PEAU_EVENT_FILTER_DESCRIPTOR@@PEAX@Z
?ToUnicode@@YAPEAGPEBD@Z
?ToUnicode@@YAXPEBDPEAGK@Z
?ToUtf8@@YAPEADPEBGK@Z
?TranslateAcceleratorW@CPageHolder@@UEAAJPEAUtagMSG@@@Z
?TryCreateFromTypeInfo@Interceptor@@CAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAXPEAJ@Z
?TryForAppModelVirtualization@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?TryGetAdHocInterceptor@@YAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?TryGetDefaultValueOfSubKey@@YAJPEAUHKEY__@@PEBGAEA_NPEAPEAG@Z
?TryGetNdrTypeInfo@@YAJPEAUITypeInfo@@AEBU_GUID@@PEAPEAUNdrTypeInfo@@PEAPEAU1@PEAJ@Z
?TryGetPointer@SemaphoreValue@details_abi@wil@@SAJPEBGPEAPEAX@Z
?TryGetTypeInfoFromIID@@YAJAEBU_GUID@@PEAPEAUITypeInfo@@PEAJ@Z
?TryGetTypeInfoFromIIDViaRegistry@@YAJAEBU_GUID@@PEAPEAUITypeInfo@@PEAJ@Z
?TryGetValueInternal@SemaphoreValue@details_abi@wil@@CAJPEBG_NPEA_KPEA_N@Z
?TryInitUsingTypeInfo@Interceptor@@AEAAJAEBU_GUID@@PEAUITypeInfo@@PEA_NPEAJ@Z
?TryInterfaceHelper@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAXPEAH@Z
?TryInterfaceHelperForOle32@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAXPEAH@Z
?TryTypeLib@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?TypeLibRegistrationReader_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?TypeLibRegistrationReader_CreateInstanceInternal@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX_N@Z
?UIDeactivate@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@U1@@@UEAAJXZ
?UIDeactivate@?$AdHocInterceptorForwarders@UIOleInPlaceObject@@UIOleInPlaceObjectWindowless@@@@UEAAJXZ
?ULongSub@@YAJKKPEAK@Z
?UShortAdd@@YAJGGPEAG@Z
?UnAdviseData@CDefClient@@QEAAJPEAUHWND__@@G@Z
?UnAdviseOn@CDdeObject@@AEAAJGH@Z
?UnAssignEndpointProperty@@YAJPEAUHWND__@@HPEAK1@Z
?UnInit@CItemMoniker@@AEAAXXZ
?UnRegisterCategories@CComCat@@UEAAJKQEAU_GUID@@@Z
?UnRegisterClassImplCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?UnRegisterClassReqCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?UnRegisterClassXXXCategories@CComCat@@AEAAJAEBU_GUID@@KQEAU2@PEBG@Z
?Unadvise@CDAHolder@@UEAAJK@Z
?Unadvise@CDataAdviseCache@@QEAAJPEAUIDataObject@@K@Z
?Unadvise@CDefLink@@UEAAJK@Z
?Unadvise@CDefObject@@UEAAJK@Z
?Unadvise@CFontEventsCP@@UEAAJK@Z
?Unadvise@CNotifyCP@@UEAAJK@Z
?Unadvise@COAHolder@@UEAAJK@Z
?Unadvise@COleObjectImpl@CDdeObject@@UEAAJK@Z
?UnbindSource@CDefLink@@UEAAJXZ
?Uncache@COleCache@@UEAAJK@Z
?Unfreeze@CCacheNode@@QEAAJAEAH@Z
?Unfreeze@CCacheViewImpl@COleCache@@UEAAJK@Z
?Uninit@SysInfo@@SAXPEAU1@_N@Z
?UninitFontObject@CFont@@SAJXZ
?UninitializeTracing@@YAXPEBG@Z
?UnlaunchApp@CDdeObject@@AEAAJXZ
?UnlinkCall@ClipboardDataObjectTask@@AEAAXPEAVCancellableCall@@@Z
?UnlockRegion@CAbstractStream@@MEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CPictioFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CStreamDummy@@UEAAJT_ULARGE_INTEGER@@0K@Z
?Unmarshal@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@CallFrame@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@DISPATCH_CLIENT_FRAME@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@DISPATCH_INTERCEPTOR@@UEAAJKPEAXKHKPEAU__MIDL_ICallFrame_0004@@PEAKPEAPEAUICallFrame@@@Z
?Unmarshal@DISPATCH_SERVER_FRAME@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@Interceptor@@EEAAJKPEAXKHKPEAU__MIDL_ICallFrame_0004@@PEAKPEAPEAUICallFrame@@@Z
?UnmarshalFromEndpointProperty@@YAJPEAUHWND__@@HHPEAPEAUIUnknown@@PEAH@Z
?UnmarshalInterface@CClassMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CMarshalImplPStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CPicture@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CPointerMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@FtmBase@WRL@Microsoft@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalParam@CallFrame@@QEAAXAEAU_MIDL_STUB_MESSAGE@@AEBUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PEAE@Z
?Unregister@ClassRegistration@@QEAAJXZ
?UnregisterDropTarget@CDragDropBroker@@UEAAJPEAUHWND__@@@Z
?Unsubscribe@SubscriptionList@details_abi@wil@@QEAAXAEAVsrwlock@3@PEAUFEATURE_STATE_CHANGE_SUBSCRIPTION__@@@Z
?Update@CCacheNode@@QEAAJPEAUIDataObject@@KAEAH@Z
?Update@CDdeObject@@AEAAJH@Z
?Update@CDefLink@@UEAAJPEAUIBindCtx@@@Z
?Update@CDefLink@@UEAAJXZ
?Update@CDefObject@@UEAAJXZ
?Update@COleObjectImpl@CDdeObject@@UEAAJXZ
?UpdateAdviseCounts@CDdeObject@@AEAAJGHH@Z
?UpdateAutoOnSave@CDefLink@@AEAAXXZ
?UpdateCache@COleCache@@UEAAJPEAUIDataObject@@KPEAX@Z
?UpdateCacheNodeForNative@COleCache@@AEAAPEAVCCacheNode@@XZ
?UpdateClsid@@YAXPEAU_GUID@@@Z
?UpdateCount@UsageIndexProperty@details_abi@wil@@QEAAXI@Z
?UpdateEnterpriseDropTargetStatus@CDropTargetAdapter@@AEAAJXZ
?UpdateFont@CFont@@QEAAJXZ
?UpdateFr@CFont@@QEAAJPEAUHFONT__@@PEAUtagTEXTMETRICW@@QEAG@Z
?UpdateMksFromAbs@CDefLink@@AEAAJPEAUIMoniker@@0@Z
?UpdatePosition@CDragOperation@@UEAAJKU_POINTL@@PEAK@Z
?UpdateRehashThresholds@?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@AEAAXXZ
?UpdateRelMkFromAbsMk@CDefLink@@AEAAXPEAUIMoniker@@@Z
?UpdateSizes@CEMfObject@@AEAAJHPEAUHENHMETAFILE__@@K@Z
?UpdateTarget@CDragOperation@@QEAAHXZ
?UpdateUserClassID@CDefLink@@AEAAXXZ
?Ut10NativeStmToContentsStm@@YAJPEAUIStorage@@AEBU_GUID@@H@Z
?UtCompareFormatEtc@@YAHPEAUtagFORMATETC@@0@Z
?UtCompareTargetDevice@@YAHPEAUtagDVTARGETDEVICE@@0@Z
?UtContentsStmTo10NativeStm@@YAJPEAUIStorage@@AEBU_GUID@@HPEAI@Z
?UtConvertBitmapToDib@@YAPEAXPEAUHBITMAP__@@PEAUHPALETTE__@@@Z
?UtConvertDibToBitmap@@YAPEAUHBITMAP__@@PEAX@Z
?UtCopyFormatEtc@@YAHPEAUtagFORMATETC@@0@Z
?UtCopyStatData@@YAHPEAUtagSTATDATA@@0@Z
?UtCopyTargetDevice@@YAPEAUtagDVTARGETDEVICE@@PEAU1@@Z
?UtCreateStorageOnHGlobal@@YAJPEAXHPEAPEAUIStorage@@PEAPEAUILockBytes@@@Z
?UtDIBFileStmToPBrushNativeStm@@YAJPEAUIStream@@0@Z
?UtDIBStmToDIBFileStm@@YAJPEAUIStream@@K0@Z
?UtDupGlobal@@YAPEAXPEAXI@Z
?UtDupPalette@@YAPEAUHPALETTE__@@PEAU1@@Z
?UtDupPtr@@YAPEAXPEAX_K@Z
?UtFormatToTymed@@YAKG@Z
?UtGetClassID@@YAHPEAUIUnknown@@PEAU_GUID@@@Z
?UtGetDibExtents@@YAXPEAUtagBITMAPINFOHEADER@@PEAJ1@Z
?UtGetHDIBFromDIBFileStm@@YAJPEAUIStream@@PEAPEAX@Z
?UtGetHEMFFromContentsStm@@YAXPEAUIStream@@PEAPEAX@Z
?UtGetHEMFFromEMFStm@@YAJPEAUIStream@@PEAKPEAPEAUHENHMETAFILE__@@@Z
?UtGetHGLOBALFromStm@@YAJPEAUIStream@@KPEAPEAX@Z
?UtGetHMFFromMFStm@@YAJPEAUIStream@@KHPEAPEAX@Z
?UtGetHMFPICT@@YAPEAXPEAUHMETAFILE__@@HKK@Z
?UtGetHMFPICTFromMSDrawNativeStm@@YAJPEAUIStream@@KPEAPEAX@Z
?UtGetHMFPICTFromPlaceableMFStm@@YAJPEAUIStream@@PEAPEAX@Z
?UtGetHPRESFromNative@@YAPEAXPEAUIStorage@@PEAUIStream@@GH@Z
?UtGetIconData@@YAJPEAUIDataObject@@AEBU_GUID@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?UtGetPresStreamName@@YAXPEAGH@Z
?UtGetSizeAndExtentsFromPlaceableMFStm@@YAJPEAUIStream@@PEAKPEAJ2@Z
?UtGetTempFileName@@YAJPEAG0@Z
?UtGetUNICODEData@@YAJKPEADPEAGPEAPEAG@Z
?UtHDIBFileToOlePresStm@@YAJPEAXPEAUIStream@@@Z
?UtHDIBToDIBFileStm@@YAJPEAXKPEAUIStream@@@Z
?UtHEMFToEMFStm@@YAJPEAUHENHMETAFILE__@@KPEAUIStream@@W4tagEMFWRITETYPE@@@Z
?UtHGLOBALtoHGLOBAL@@YAJPEAXK0@Z
?UtHGLOBALtoStm@@YAJPEAXKPEAUIStream@@@Z
?UtHGLOBALtoStorage@@YAJPEAXPEAUIStorage@@@Z
?UtHMFToMFStm@@YAJPEAPEAXKPEAUIStream@@@Z
?UtHMFToPlaceableMFStm@@YAJPEAPEAXKJJPEAUIStream@@@Z
?UtIsFormatSupported@@YAHPEAUIDataObject@@KG@Z
?UtMFStmToPlaceableMFStm@@YAJPEAUIStream@@KJJ0@Z
?UtOlePresStmToContentsStm@@YAJPEAUIStorage@@PEAGHPEAI@Z
?UtOlePresStmToContentsStm@@YAJPEAUIStorage@@PEAGPEAUIStream@@PEAI@Z
?UtPaletteSize@@YA_KPEAUtagBITMAPINFOHEADER@@@Z
?UtPlaceableMFStmToMSDrawNativeStm@@YAJPEAUIStream@@0@Z
?UtPutUNICODEData@@YAJKPEAGPEAPEADPEAPEAGPEAK@Z
?UtQueryPictFormat@@YAHPEAUIDataObject@@PEAUtagFORMATETC@@@Z
?UtReadOlePresStmHeader@@YAJPEAUIStream@@PEAUtagFORMATETC@@PEAKPEAH@Z
?UtReleaseStatData@@YAXPEAUtagSTATDATA@@@Z
?UtRemoveExtraOlePresStreams@@YAXPEAUIStorage@@H@Z
?UtWriteOlePresStmHeader@@YAJPEAUIStream@@PEAUtagFORMATETC@@K@Z
?UtilQueryProtocol@@YAHGPEAG@Z
?ValidateAndAcquireACImpersonationSource@CClipboardBroker@@EEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z
?ValidateAndAcquireACImpersonationSource@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z
?ValidateAndAcquireACImpersonationSourceInternal@CClipboardBrokerMTAHelper@CClipboardBroker@@EEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z
?ValidateAnsiPath@CFileMoniker@@QEAAJXZ
?ValidateSrvrClass@@YAHPEAG0@Z
?VariantClear@OAUTIL@@QEAAJPEAUtagVARIANT@@H@Z
?VariantCopy@OAUTIL@@QEAAJPEAUtagVARIANT@@0H@Z
?VerifyCallerIsClipboardOwner@@YAPEAUHWND__@@PEBG@Z
?VerifyDVTARGETDEVICE16@@YAJPEFBUtagDVTARGETDEVICE@@@Z
?VerifyNoEmbeddedNulls@?$StringTraits@PEAUHSTRING__@@@@SAJIPEAUHSTRING__@@PEAH@Z
?VerifyStructFromHGlobal@@YAJGPEAX@Z
?VerifyThreadId@CThreadCheck@@QEAAHXZ
?VgaPalIx@@YAHPEAUtagRGBQUAD@@@Z
?WMfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?Wait@CBindStatusCallback@@UEAAJKK@Z
?Walk@OAUTIL@@AEAAJPEAUtagSAFEARRAY@@PEAUIRecordInfo@@KPEAXPEAPEAX@Z
?Walk@OAUTIL@@AEAAJPEAUtagSAFEARRAY@@PEAX@Z
?Walk@OAUTIL@@QEAAJKPEAUtagDISPPARAMS@@@Z
?Walk@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?Walk@OAUTIL@@QEAAJPEAUtagVARIANT@@@Z
?WalkEmbeddedPointers@CallFrame@@QEAAXPEAEPEBE@Z
?WalkEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAEPEBE@Z
?WalkFrame@?$AdHocCallFrame@UIElementBehavior@@V<lambda_b26c1a7a98add69a0d17b823be354735>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIElementBehavior@@V<lambda_c9f70ef396276824209f5bb13f61de84>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIElementBehavior@@V<lambda_d914c7f54183b33a257332a7d99c0d41>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_0d32688c0356eaf1376562cb0fa29181>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_4ca0b07237b8f95da55952ce2c79cfa1>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_5f36165614e701fb976ba4b91ba80c82>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_6c7999a0825145bb8114241691193a37>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_8cabb7dbc03479911dce050d042462ba>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_9f5ff7c0875bbd6db2722caf2496ccad>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_e225fcb61db02045a776fc8c7ed2b6cf>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObject@@V<lambda_f9b153e28317f47b008789014cb39e3f>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_cebf49c479c4b51a7dc8538f3542eaf8>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleInPlaceObjectWindowless@@V<lambda_de8aae3bf856bab3be50d4e660b6e6f6>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleWindow@@V<lambda_3486a7fc69495c9349b1266d1aff572d>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleWindow@@V<lambda_524187a61b7f412a8ba870cd827a85c9>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleWindow@@V<lambda_600bd29f17b036b93b7550065426cbdf>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleWindow@@V<lambda_7f8f27448f522cea32614cee7579f563>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleWindow@@V<lambda_92c1c2c09ef3e1efce6163781ee57e61>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIOleWindow@@V<lambda_a07c95792dcef3326839cb72fdfd78fd>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIPersist@@V<lambda_121ff239fc219aa2df927c67d0376548>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIPersist@@V<lambda_77a2b2d0129bbc926517a2760e67553c>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_202f74d2f2aaa89b3b4034f4f0d0d4a4>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_4f665fe9629adf1b6321c2bb89cc94f4>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UIPersistPropertyBag@@V<lambda_f62c6972a04c90594c2afef0651ebd10>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol2@@V<lambda_b7865aac57bfa228768998e2f76a980a>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_202ebde2c4736aa82d78f43a76d480cf>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_ab7661f9106dbe63888238c0c4789392>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b0bb8e7a2c8a87ed1d1ad81cb190fffe>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_b4919db20cec154853a959297be03d11>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c0fa3d92ef3684ffb99dddd895e07e56>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_c3d9c36ff6c5e276434071298f6b4b2c>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_df48ef4dbe2e03a3af657bac67c3638a>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@?$AdHocCallFrame@UISearchProtocol@@V<lambda_eb81b7dcb3076a64e0db4008f1f3b137>@@@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@CallFrame@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@DISPATCH_FRAME@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAXPEAUICallFrameWalker@@@Z
?WalkRecord@OAUTIL@@AEAAJPEAXPEAUIRecordInfo@@@Z
?WalkRecord@OAUTIL@@AEAAJPEAXPEAUITypeInfo@@@Z
?WalkRecordField@OAUTIL@@AEAAJPEAEPEAUtagTYPEDESC@@PEAUITypeInfo@@@Z
?WalkThroughAlias@@YAJPEAPEAUITypeInfo@@PEAPEAUtagTYPEATTR@@@Z
?WalkWorker@CallFrame@@QEAAXPEAEPEBE@Z
?Warning_@ComTrace@@QEAAXJPEBGAEBUDiagnosticsInfo@wil@@@Z
?WasAlreadyReportedToTelemetry@DragDropSession@DragDropTelemetry@@MEAA_NJ@Z
?WilApiImpl_RecordFeatureUsage@details@wil@@YAXIIIPEBD@Z
?WilApiImpl_SubscribeFeatureStateChangeNotification@details@wil@@YAXPEAPEAUFEATURE_STATE_CHANGE_SUBSCRIPTION__@@P6AXPEAX@Z1@Z
?WilApiImpl_UnsubscribeFeatureStateChangeNotification@details@wil@@YAXPEAUFEATURE_STATE_CHANGE_SUBSCRIPTION__@@@Z
?WilDynamicLoadRaiseFailFastException@details@wil@@YAXPEAU_EXCEPTION_RECORD@@PEAU_CONTEXT@@K@Z
?WilFailFast@details@wil@@YAXAEBUFailureInfo@2@@Z
?WilRaiseFailFastException@details@wil@@YAXPEAU_EXCEPTION_RECORD@@PEAU_CONTEXT@@K@Z
?Write@CBaseMInterfacePointerMarshalingStream@@UEAAJPEBXKPEAK@Z
?Write@CLimitedWritableStream@@UEAAJPEBXKPEAK@Z
?Write@CPictioFileStream@@UEAAJPEBXKPEAK@Z
?Write@CReadOnlyStream@@UEAAJPEBXKPEAK@Z
?Write@CStmBufWrite@@QEAAJPEBXK@Z
?Write@CStreamDummy@@UEAAJPEBXKPEAK@Z
?Write@SerializingLockPolicy@XWinRT@@SA?AV?$LockHolder@VComLock@XWinRT@@UAcquireWrite@detail@2@@detail@2@AEAVComLock@2@PEAJ@Z
?Write@UsageIndexProperty@details_abi@wil@@QEBA_NAEAPEAEPEAE@Z
?WriteAnsiStringStream@@YAJPEAUIStream@@PEADK@Z
?WriteDoubleString@@YAJPEAUIStream@@PEAGGPEADG@Z
?WriteNameDictToStream@CPropertySection@@QEAAHPEAUIStream@@@Z
?WriteStorageProperties@@YAJPEAUIStorage@@AEBU_GUID@@GPEAG@Z
?WriteStringStreamA@@YAJAEAVCStmBufWrite@@PEBD@Z
?WriteToStream@CProperty@@QEAAHPEAUIStream@@@Z
?WriteToStream@CPropertySection@@QEAAHPEAUIStream@@@Z
?WriteToStream@CPropertySet@@QEAAHPEAUIStream@@@Z
?_EnsureCapacity@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@AEAAJ_K@Z
?_EnsureCount@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@AEAAXXZ
?_EnumRunning@CRunningObjectTable@@QEAAJPEAPEAUIEnumMoniker@@_N@Z
?_EraseAll@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@AEAAXPEAV?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@@Z
?_FHbmpsOfHicon@@YAJPEAUHICON__@@PEAPEAUHBITMAP__@@1@Z
?_FSaveIconViaBitmaps@@YAJPEAUIStream@@JJPEAUHBITMAP__@@1PEAJ@Z
?_FailFastImmediate_Unexpected@in1diag3@details@wil@@YAXXZ
?_FailFast_GetLastError@in1diag3@details@wil@@YAXPEAXIPEBD@Z
?_FailFast_Hr@in1diag3@details@wil@@YAXPEAXIPEBDJ@Z
?_FailFast_Unexpected@in1diag3@details@wil@@YAXPEAXIPEBD@Z
?_Free@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@CAXPEAV?$XHashMap@PEAUHSTRING__@@PEAUIInspectable@@UKeyTraits@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@V?$CElementTraits@PEAUIInspectable@@@XWinRT@@@XWinRT@@@Z
?_Free@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@AEAAXXZ
?_GetMetaFileBitsSize@@YAPEAXPEAUHMETAFILE__@@PEAK@Z
?_GetObject@CRunningObjectTable@@QEAAJPEAUIMoniker@@PEAPEAUIUnknown@@_N@Z
?_GetPlmSentinel@@YAJPEBG0W4GET_PACKAGE_SENTINEL_DISPOSITION@@PEAPEAX@Z
?_GetTimeOfLastChange@CRunningObjectTable@@QEAAJPEAUIMoniker@@PEAU_FILETIME@@_N@Z
?_IsRunning@CRunningObjectTable@@QEAAJPEAUIMoniker@@_N@Z
?_LocalAlloc@@YAPEAX_K@Z
?_LocalFree@@YAXPEAX@Z
?_Log_GetLastError@in1diag3@details@wil@@YAXPEAXIPEBD@Z
?_Log_Hr@in1diag3@details@wil@@YAXPEAXIPEBDJ@Z
?_Log_NtStatus@in1diag3@details@wil@@YAXPEAXIPEBDJ@Z
?_MfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?_OlePropSheetProc@@YAHPEAUHWND__@@I_J@Z
?_PageHolderDlgProc@@YA_JPEAUHWND__@@I_K_J@Z
?_PageHolderPageProc@@YAIPEAUHWND__@@IPEAU_PROPSHEETPAGEA@@@Z
?_PictCallbackBindHost@@YAJPEAUIUnknown@@PEAPEAUIBindHost@@@Z
?_PictDibFromBitmap@@YAPEAXPEAUHBITMAP__@@PEAUHPALETTE__@@@Z
?_PictEmfToWmf@@YAPEAUHMETAFILE__@@PEAUHENHMETAFILE__@@@Z
?_PictFDibSection@@YAHPEAUHBITMAP__@@@Z
?_PictFMemDC@@YAHPEAUHDC__@@@Z
?_PictFreeLibraries@@YAJXZ
?_PictLoadDIBitmap@@YAJPEAVCPicture@@PEAUIStream@@J@Z
?_PictLoadIcon@@YAJPEAUIStream@@PEAPEAUHBITMAP__@@1PEAPEAUHICON__@@KKK@Z
?_PictLoadIconToPicInfo@@YAJPEAVCPicture@@PEAUIStream@@KKK@Z
?_PictLoadMetaFile@@YAJPEAVCPicture@@PEAUIStream@@J@Z
?_PictLoadMetaFileRaw@@YAJPEAVCPicture@@PEAUIStream@@JPEAURECTS@@@Z
?_PictLoadNewImage@@YAJPEAVCPicture@@PEAUIStream@@JHKKK@Z
?_PictLoadPicture@@YAJPEAVCPicture@@PEAUIStream@@JHKKK@Z
?_PictLoadSyncImage@@YAJAEBU_GUID@@PEAVCPicture@@PEAUIStream@@@Z
?_PictLoadURLSync@@YAJKPEAGPEAUIBindHost@@KAEBU_GUID@@PEAPEAX@Z
?_PictLoadUnknownMetaFile@@YAJPEAVCPicture@@PEAUIStream@@J@Z
?_PictPaletteSize@@YAIPEAUtagBITMAPINFOHEADER@@@Z
?_PictSaveBitmap@@YAJPEAUIStream@@PEAVCPicture@@PEAJ@Z
?_PictSaveEnhMetaFile@@YAJPEAUIStream@@PEAVCPicture@@PEAJ@Z
?_PictSaveMetaFile@@YAJPEAUIStream@@PEAVCPicture@@PEAJ@Z
?_PictStretchBlt@@YAHPEAUHDC__@@HHHH0HHHHK@Z
?_PictStuffBMIH@@YAJPEAVCPicture@@PEAUIImageFilter@@@Z
?_PictStuffFilter@@YAJPEAVCPicture@@PEAUIDataTransfer@@@Z
?_PropertySheet@@YAHPEBU_PROPSHEETHEADERA_V2@@@Z
?_RegisterClipFormat@@YAGAEBU_GUID@@@Z
?_ResToIcon@@YAPEAUHICON__@@PEAXPEAPEAUHBITMAP__@@1HHHHH@Z
?_ResetOrigDC@@YAXPEAUHDC__@@HPEAUtagRECT@@1@Z
?_RestoreBitmap@@YAXPEAUHDC__@@PEAUHBITMAP__@@@Z
?_SetCapacity@?$vector@PEAVCROTItem@@V?$allocator@PEAVCROTItem@@@utl@@@utl@@AEAA_N_K@Z
?_SetCapacity@?$vector@_KV?$allocator@_K@utl@@@utl@@AEAA_N_K@Z
?_SetDCToDrawInHimetric@@YAHPEAUHDC__@@PEAUtagRECT@@111@Z
?_SetMetaFileBitsSize@@YAPEAUHMETAFILE__@@PEAXK@Z
?_Uninit@?$vector@_KV?$allocator@_K@utl@@@utl@@AEAAXXZ
?_UtDupPalette@@YAPEAUHPALETTE__@@PEAU1@@Z
?__clone@?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEBAXPEAV?$__base@$$A6A_NPEAX_K01I@Z@23@@Z
?__empty_global_delete@@YAXPEAX_K@Z
?__global_delete@@YAXPEAX_K@Z
?__move@?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAAXPEAV?$__base@$$A6A_NPEAX_K01I@Z@23@@Z
?__scrt_initialize_type_info@@YAXXZ
?__scrt_uninitialize_type_info@@YAXXZ
?_typesDllMain@@YAHPEAUHINSTANCE__@@KPEAX@Z
?_typesDllRegisterServer@@YAJXZ
?acquire@?$mutex_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@Uerr_returncode_policy@3@@wil@@QEBA?AV?$unique_any_t@V?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?ReleaseMutex@details@wil@@YAX0@ZU?$integral_constant@_K$01@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@@2@PEAKKH@Z
?assign@shared_buffer@details@wil@@AEAAXPEAJ_K@Z
?construct@?$manually_managed_shutdown_aware_object@VFeatureStateManager@details@wil@@@wil@@QEAAXXZ
?create@shared_buffer@details@wil@@QEAA_NPEBX_K@Z
?destroy@?$__func@V<lambda_8db0ce862824541f40dfb767113f1e28>@@$$A6A_NPEAX_K01I@Z@__function@wistd@@UEAAXXZ
?destroy@?$manually_managed_shutdown_aware_object@VFeatureStateManager@details@wil@@@wil@@QEAAXXZ
?dummy@Chunk@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@EEAAXXZ
?ensure@heap_buffer@details_abi@wil@@QEAA_N_K@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?get@?$static_lazy@VComTrace@@@details@wil@@QEAAPEAVComTrace@@P6AXXZ@Z
?get@?$static_lazy@VDragDropLogging@@@details@wil@@QEAAPEAVDragDropLogging@@P6AXXZ@Z
?get@?$static_lazy@VOleClipboardTracing@@@details@wil@@QEAAPEAVOleClipboardTracing@@P6AXXZ@Z
?get@?$static_lazy@VOleDragDropTracing@@@details@wil@@QEAAPEAVOleDragDropTracing@@P6AXXZ@Z
?get_Attributes@CPicture@@UEAAJPEAK@Z
?get_Attributes@CPicture@@W7EAAJPEAK@Z
?get_Bold@CFont@@UEAAJPEAH@Z
?get_Charset@CFont@@UEAAJPEAF@Z
?get_CurDC@CPicture@@UEAAJPEAPEAUHDC__@@@Z
?get_CurDC@CPicture@@W7EAAJPEAPEAUHDC__@@@Z
?get_Current@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@456@@Z
?get_Current@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@456@@Z
?get_Current@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAU?$IKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@@456@@Z
?get_Handle@CPicture@@UEAAJPEAI@Z
?get_Handle@CPicture@@UEAAJPEA_K@Z
?get_HasCurrent@ChunkElementIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAE@Z
?get_HasCurrent@Iterator@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAE@Z
?get_HasCurrent@SplitIterator@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAE@Z
?get_Height@CPicture@@UEAAJPEAJ@Z
?get_Height@CPicture@@W7EAAJPEAJ@Z
?get_Italic@CFont@@UEAAJPEAH@Z
?get_KeepOriginalFormat@CPicture@@UEAAJPEAH@Z
?get_KeepOriginalFormat@CPicture@@W7EAAJPEAH@Z
?get_Key@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUHSTRING__@@@Z
?get_Mask@CPicture@@QEAAJPEAI@Z
?get_Name@CFont@@UEAAJPEAPEAG@Z
?get_Size@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAI@Z
?get_Size@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAI@Z
?get_Size@CBaseMInterfacePointerMarshalingStream@@MEBA_KXZ
?get_Size@CFont@@UEAAJPEATtagCY@@@Z
?get_Size@ChunkView@?$NaiveSplitView@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAI@Z
?get_Size@View@?$HashMap@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultHash@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultEqualityPredicate@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@4567@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@U?$DefaultHashMapOptions@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@@4567@@Internal@Collections@Foundation@Windows@@UEAAJPEAI@Z
?get_Strikethrough@CFont@@UEAAJPEAH@Z
?get_Type@CPicture@@UEAAJPEAF@Z
?get_Type@CPicture@@W7EAAJPEAF@Z
?get_Underline@CFont@@UEAAJPEAH@Z
?get_Value@?$SimpleKeyValuePair@PEAUHSTRING__@@PEAUIInspectable@@U?$DefaultLifetimeTraits@PEAUHSTRING__@@@Internal@Collections@Foundation@Windows@@U?$DefaultLifetimeTraits@PEAUIInspectable@@@4567@$0A@@Internal@Collections@Foundation@Windows@@UEAAJPEAPEAUIInspectable@@@Z
?get_Weight@CFont@@UEAAJPEAF@Z
?get_Width@CPicture@@UEAAJPEAJ@Z
?get_Width@CPicture@@W7EAAJPEAJ@Z
?get_hFont@CFont@@UEAAJPEAPEAUHFONT__@@@Z
?get_hPal@CPicture@@UEAAJPEAI@Z
?get_hPal@CPicture@@UEAAJPEA_K@Z
?grow@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?grow@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?grow@?$Map@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@PEAPEAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@PEAPEAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUNdrTypeInfo@@PEAPEAVAssoc@1@@Z
?next@?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAHXZ
?next@?$EnumMap@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAHXZ
?push_back@heap_buffer@details_abi@wil@@QEAA_NPEBX_K@Z
?put_Bold@CFont@@UEAAJH@Z
?put_Charset@CFont@@UEAAJF@Z
?put_Italic@CFont@@UEAAJH@Z
?put_KeepOriginalFormat@CPicture@@UEAAJH@Z
?put_KeepOriginalFormat@CPicture@@W7EAAJH@Z
?put_Name@CFont@@UEAAJPEAG@Z
?put_Size@CFont@@UEAAJTtagCY@@@Z
?put_Strikethrough@CFont@@UEAAJH@Z
?put_Underline@CFont@@UEAAJH@Z
?put_Weight@CFont@@UEAAJF@Z
?releaseAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?releaseAssoc@?$Map@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?reserve@?$vector@_KV?$allocator@_K@utl@@@utl@@QEAA_N_K@Z
?reserve@heap_buffer@details_abi@wil@@QEAA_N_K@Z
?reset@?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAXXZ
?reset@?$EnumMap@VMAP_KEY_GUID@@PEAUNdrTypeInfo@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAXXZ
?reset@?$com_ptr_t@UIOleVerbIterator@@Uerr_returncode_policy@wil@@@wil@@QEAAXXZ
?reset@?$shared_object@V?$ActivityData@VDragDropLogging@@U_TlgReflectorTag_Param0IsProviderType@@@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@@details@wil@@QEAAXXZ
?reset@?$unique_storage@U?$handle_null_resource_policy@P6AHPEAX@Z$1?CloseHandle@@YAH0@Z@details@wil@@@details@wil@@QEAAXPEAX@Z
?reset@?$unique_storage@U?$resource_policy@PEAGP6AXPEAX@Z$1?CoTaskMemFree@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAGPEAG$0A@$$T@details@wil@@@details@wil@@QEAAXPEAG@Z
?reset@?$unique_storage@U?$resource_policy@PEAU_TP_TIMER@@P6AXPEAU1@@Z$1?Destroy@?$DestroyThreadPoolTimer@USystemThreadPoolMethods@details@wil@@$0A@@details@wil@@SAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAU1@PEAU1@$0A@$$T@details@wil@@@details@wil@@QEAAXPEAU_TP_TIMER@@@Z
?reset@?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?CloseHandle@details@wil@@YAX0@ZU?$integral_constant@_K$0A@@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@QEAAXPEAX@Z
?reset@?$unique_storage@U?$resource_policy@PEAXP6AXPEAX@_E$1?ReleaseMutex@details@wil@@YAX0@ZU?$integral_constant@_K$01@wistd@@PEAXPEAX$0A@$$T@details@wil@@@details@wil@@QEAAXPEAX@Z
?reset@shared_buffer@details@wil@@QEAAXXZ
?s_Callback@CBaseRPCTimeout@@CAXPEAXE@Z
?safe_lstrlenW@@YAHPEBG@Z
?serverThreadStart@ClipboardBrokerFactory@@CAKPEAX@Z
?set_hPal@CPicture@@UEAAJI@Z
?set_hPal@CPicture@@UEAAJ_K@Z
?wAllocDdePokeBlock@@YAPEADKGPEAPEAX@Z
?wAtomFromCLSID@@YAGAEBU_GUID@@@Z
?wAtomLenA@@YAHG@Z
?wAtomName@@YAPEAGG@Z
?wAtomNameA@@YAPEADG@Z
?wBindIfRunning@@YAXPEAUIUnknown@@@Z
?wClassesMatch@@YAJAEBU_GUID@@PEAG@Z
?wClassesMatchW@@YAJAEBU_GUID@@PEAG@Z
?wClearRelativeMoniker@@YAXPEAUIUnknown@@0@Z
?wClearWaitState@@YAHPEAVDDE_CHANNEL@@@Z
?wCoGetClassExt@@YAJPEBGPEAU_GUID@@@Z
?wCoGetClassPattern@@YAJPEAXPEAU_GUID@@@Z
?wCommonPrefixWith@CFileMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?wCompatibleClasses@@YAJGG@Z
?wConvertIStorageToOLESTREAM@@YAJPEAUIStorage@@PEAU_OLESTREAM@@PEAVCGenericObject@@@Z
?wConvertOLESTREAMToIStorage@@YAJPEAU_OLESTREAM@@PEAUIStorage@@PEAVCGenericObject@@@Z
?wCreateFromDataEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateFromFileEx@@YAJPEAUIMoniker@@PEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@3PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateLinkEx@@YAJPEAUIMoniker@@AEBU_GUID@@PEAUIDataObject@@1KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@3PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateObject@@YAJU_GUID@@HAEBU1@PEAUIOleClientSite@@PEAUIStorage@@GPEAPEAX@Z
?wCreatePackageEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@HPEAPEAX@Z
?wCreateStgAroundNative@@YAJPEAXGGW4CNVTYP@@GPEAPEAUIStorage@@PEAPEAUILockBytes@@@Z
?wDoLockUnlock@@YAXPEAUIUnknown@@@Z
?wDoUpdate@@YAJPEAUIUnknown@@@Z
?wDupAtom@@YAGG@Z
?wExtendAtom@@YAGGH@Z
?wFileBind@@YAJPEAGPEAPEAUIUnknown@@@Z
?wFreeData@@YAXPEAXGH@Z
?wFreePokeData@@YAXPEAVDDE_CHANNEL@@H@Z
?wGetData@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?wGetEnumFormatEtc@@YAJPEAUIDataObject@@KPEAPEAUIEnumFORMATETC@@@Z
?wGetExeNameAtom@@YAGAEBU_GUID@@@Z
?wGetMonikerAndClassFromFile@@YAJPEBGHPEAPEAUIMoniker@@PEAHPEAU_GUID@@PEAPEAUIDataObject@@@Z
?wGetMonikerAndClassFromObject@@YAJPEAUIDataObject@@PEAPEAUIMoniker@@PEAU_GUID@@@Z
?wGetOleMenuPtr@@YAPEAUtagOLEMENU@@PEAX@Z
?wGlobalAddAtom@@YAGPEBG@Z
?wGlobalAddAtomA@@YAGPEBD@Z
?wHandleCopy@@YAJPEAX0@Z
?wHandleFromDdeData@@YAPEAXPEAX@Z
?wInitializeCacheEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAXPEAH@Z
?wInitiate@@YAHPEAVDDE_CHANNEL@@GG@Z
?wIsOldServer@@YAHG@Z
?wLoadAndInitObjectEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wNeedToPackage@@YAHAEBU_GUID@@_N@Z
?wNewHandle@@YAPEAXPEADK@Z
?wNormalize@@YAJPEAUtagFORMATETC@@0@Z
?wPostMessageToServer@@YAHPEAVDDE_CHANNEL@@G_JH@Z
?wPreparePokeBlock@@YAPEAXPEAXGGH@Z
?wProgIDFromCLSID@@YAJAEBU_GUID@@PEAPEAG@Z
?wQueryEmbedFormats@@YAGPEAUIDataObject@@PEAG@Z
?wQueryFormatSupport@@YAJPEAXKPEAUtagFORMATETC@@@Z
?wQueryLinkFormats@@YAGPEAUIDataObject@@@Z
?wQueryUseCustomLink@@YAHAEBU_GUID@@@Z
?wRegGetClassExt@@YAJPEBGPEAU_GUID@@@Z
?wSaveObjectWithoutCommit@@YAJPEAUIUnknown@@PEAUIStorage@@H@Z
?wScanItemOptions@@YAJGPEAH@Z
?wSetTymed@@YAJPEAUtagFORMATETC@@@Z
?wStringFromUUID@@YAJAEBU_GUID@@PEAG@Z
?wStuffIconOfFileEx@@YAJPEBGHKKPEAUtagFORMATETC@@PEAUIUnknown@@@Z
?wTerminateIsComing@@YAHPEAVDDE_CHANNEL@@@Z
?wTimedGetMessage@@YAJPEAUtagMSG@@PEAUHWND__@@GG@Z
?wTransferHandle@@YAJPEAPEAX0G@Z
?wUUIDFromString@@YAHPEBGPEAU_GUID@@@Z
?wValidateCreateParams@@YAJKKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@0PEAUIOleClientSite@@PEAUIStorage@@@Z
?wValidateFormatEtc@@YAJKPEAUtagFORMATETC@@0@Z
?wValidateFormatEtcEx@@YAJKPEAKPEAUtagFORMATETC@@1PEAPEAU1@PEAH@Z
?wVerifyFormatEtc@@YAJPEAUtagFORMATETC@@@Z
?wWriteFmtUserType@@YAJPEAUIStorage@@AEBU_GUID@@@Z
?what@ResultException@wil@@UEBAPEBDXZ
?what@exception@std@@UEBAPEBDXZ
?wil_RtlStagingConfig_RecordFeatureUsage@@YAJIIH@Z
?wil_details_GetKernelBaseModuleHandle@@YAPEAUHINSTANCE__@@XZ
?wil_details_GetNtDllModuleHandle@@YAPEAUHINSTANCE__@@XZ
?wil_details_NtQueryWnfStateData@@YAJPEBU__WIL__WNF_STATE_NAME@@PEBU__WIL__WNF_TYPE_ID@@PEBXPEAKPEAX3@Z
?wil_details_NtUpdateWnfStateData@@YAJPEBU__WIL__WNF_STATE_NAME@@PEBXKPEBU__WIL__WNF_TYPE_ID@@1KK@Z
?wil_details_RtlRegisterFeatureConfigurationChangeNotification@@YAJP6AXPEAX@Z0PEA_KPEAPEAX@Z
?wil_details_WriteSRUMWnfUsageBuffer@@YAJPEAV?$heap_vector@Uwil_details_FeatureUsageSRUM@@@details_abi@wil@@@Z
?zInternalRelatedId@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@QEBAPEBU_GUID@@XZ
?zInternalStop@?$ActivityBase@VDragDropLogging@@$00$0EAAAAAAAAAAA@$04$0CAAAAAA@U_TlgReflectorTag_Param0IsProviderType@@@wil@@QEAAXXZ
ApiSetQueryApiSetPresence
BSTR_UserFree
BSTR_UserFree_XFG
BSTR_UserMarshal_XFG
BSTR_UserSize_XFG
BSTR_UserUnmarshal_XFG
BindMoniker
COMInterceptor
CheckInitDde
CleanROTForApartment
ClientDocWndProc
ClipboardWndProc
CloseHandle
CoAicGetTokenForCOM
CoAllowSetForegroundWindow
CoBuildVersion
CoCheckElevationEnabled
CoDosDateTimeToFileTime
CoFileTimeToDosDateTime
CoFreeAllLibraries
CoFreeLibrary
CoGetInterceptor
CoGetInterceptorForOle32
CoGetInterceptorFromTypeInfo
CoGetObject
CoGetSystemWow64DirectoryW
CoInitialize
CoInitializeWOW
CoInstall
CoIsHashedOle1Class
CoLoadLibrary
CoQueryReleaseObject
CoRegisterMessageFilter
CoRegisterSurrogateEx
CoSetState
CoTryGetInterceptorForAppModelVirtualization
CoUnloadingWOW
ComInvokeCheckICall
ComPs_NdrDllCanUnloadNow
ComPs_NdrDllGetClassObject
ComPs_NdrDllRegisterProxy
ComPs_NdrDllUnregisterProxy
ComTraceMessageWorker
Concatenate
CreateAntiMoniker
CreateBindCtx
CreateClassMoniker
CreateDataAdviseHolder
CreateDataCache
CreateEventW
CreateFileMoniker
CreateGenericComposite
CreateILockBytesOnHGlobalStub
CreateItemMoniker
CreateObjrefMoniker
CreateOle1FileMoniker
CreateOleAdviseHolder
CreatePointerMoniker
CreateStdProgressIndicator
DdeBindToObject
DdeCommonWndProc
DeletePatternAndExtensionTables
DestroyRunningObjectTable
DialogProc
DllGetClassObject
DllMain
DllRegisterServer
DoDragDrop
DocWndProc
DragDropSetFDT
EnumerateRegistryKeys
EventWriteTransfer
ExportedIsValidPtrIn
FindClassID
FindClassMoniker
FindExt
FindFileMoniker
FindProgIdMoniker
FmtIdToPropStgNameStub
FrameWndFilterProc
GetActiveObjectExt
GetClassFile
GetClassFileEx
GetConvertStgStub
GetCurrentProcess
GetCurrentThread
GetDocumentBitStgStub
GetHGlobalFromILockBytesStub
GetLastError
GetObjectFromRotByPath
GetRegistryValue
GetRunningObjectTable
GetSafeAllocSize
GetSessionClipboardBroker
HENHMETAFILE_UserFree
HENHMETAFILE_UserFree64
HENHMETAFILE_UserMarshal
HENHMETAFILE_UserMarshal64
HENHMETAFILE_UserSize
HENHMETAFILE_UserSize64
HENHMETAFILE_UserUnmarshal
HENHMETAFILE_UserUnmarshal64
HMETAFILEPICT_UserFree
HMETAFILEPICT_UserFree64
HMETAFILEPICT_UserMarshal
HMETAFILEPICT_UserMarshal64
HMETAFILEPICT_UserSize
HMETAFILEPICT_UserSize64
HMETAFILEPICT_UserUnmarshal
HMETAFILEPICT_UserUnmarshal64
HMETAFILE_UserFree
HMETAFILE_UserFree64
HMETAFILE_UserMarshal
HMETAFILE_UserMarshal64
HMETAFILE_UserSize
HMETAFILE_UserSize64
HMETAFILE_UserUnmarshal
HMETAFILE_UserUnmarshal64
HrNt
IDispatch_Invoke_Proxy
IDispatch_RemoteInvoke_Thunk
IUnknown_AddRef_Proxy
IUnknown_QueryInterface_Proxy
IUnknown_Release_Proxy
InitCallFrame
InlineIsEqualGUID
Interceptor_CallIndirect
InternalGetLongPathNameW
InternalVerifyStackAvailable
Invoke
IsAccelerator
IsEqualGUID
IsQueryWin32SubsystemHostPresent
IsRoInitializeASTAAllowedInDesktop
IsSxsOleAut32MapReferenceClsidToConfiguredClsidPresent
IsUserHiveOK
IsValidIid
IsValidInterface
IsWppLevelEnabled
LPSAFEARRAY_UserFree
LPSAFEARRAY_UserMarshal
LPSAFEARRAY_UserSize
LPSAFEARRAY_UserUnmarshal
LocalAlloc
LocalFree
MGetDDElParamHi
MGetDDElParamLo
MIDL_user_allocate
MIDL_user_free
MKVDefaultHashKey
McGenEventWrite_EventWriteTransfer
McTemplateU0d_EventWriteTransfer
MessageFilterProc
MicrosoftTelemetryAssertTriggeredArgs
MicrosoftTelemetryAssertTriggeredNoArgs
MkParseDisplayName
MonikerCommonPrefixWith
MonikerRelativePathTo
NdrOleAllocate
NdrOleFree
OaDeleteCriticalSection
OaInitializeCriticalSectionAndSpinCount
ObjectStublessClient3
ObjectStublessClient4
ObjectStublessClient5
Ole32DllGetClassObject
OleConvertIStorageToOLESTREAM
OleConvertIStorageToOLESTREAMEx
OleConvertOLESTREAMToIStorage
OleConvertOLESTREAMToIStorageEx
OleCreate
OleCreateDefaultHandler
OleCreateDragOperationInternal
OleCreateEmbeddingHelper
OleCreateEx
OleCreateFontIndirectExt
OleCreateFromData
OleCreateFromDataEx
OleCreateFromFile
OleCreateFromFileEx
OleCreateHostedDragDropBroker
OleCreateLink
OleCreateLinkEx
OleCreateLinkFromData
OleCreateLinkFromDataEx
OleCreateLinkToFile
OleCreateLinkToFileEx
OleCreateMenuDescriptor
OleCreatePictureIndirectExt
OleCreatePropertyFrameIndirectExt
OleCreateStaticFromData
OleDestroyMenuDescriptor
OleDoAutoConvert
OleDraw
OleDuplicateData
OleFlushClipboard
OleGetAutoConvert
OleGetClipboard
OleGetClipboardBroker
OleGetClipboardWithEnterpriseInfo
OleGetIconOfClass
OleGetIconOfFile
OleGetPackageClipboardOwner
OleGetSessionClipboardBroker
OleIconToCursorExt
OleInitClipboardBroker
OleInitialize
OleInitializeEx
OleInitializeWOW
OleIsCurrentClipboard
OleIsDcMeta
OleIsRunning
OleLoad
OleLoadFromStream
OleLoadPictureExt
OleLoadPictureFileExt
OleLoadPicturePathExt
OleLockRunning
OleMetafilePictFromIconAndLabel
OleNoteObjectVisible
OleQueryCreateFromData
OleQueryLinkFromData
OleRegEnumFormatEtc
OleRegEnumVerbs
OleRegGetMiscStatus
OleRegGetUserType
OleRegisterDropTargetInternal
OleReleaseEnumVerbCache
OleRevokeDropTargetInternal
OleRun
OleRundownClipboardBroker
OleSave
OleSavePictureFileExt
OleSaveToStream
OleSetAutoConvert
OleSetClipboard
OleSetContainedObject
OleSetMenuDescriptor
OleStartDragOperationInternal
OleTranslateAccelerator
OleTranslateColorExt
OleUninitialize
OleautExtDllMain
OpenClassesRootKeyExW
OpenOrCreateStream
OpenRegistryKey
Parse10DisplayName
PrivAsyncGetClassBits
PrivRegisterBindStatusCallback
PrivRevokeBindStatusCallback
PropStgNameToFmtIdStub
PropSysAllocStringStub
PropSysFreeStringStub
PropVariantChangeTypeStub
QueryClassesRootValueW
ReadClassStgStub
ReadClassStmStub
ReadClipformatStm
ReadFmtProgIdStg
ReadFmtUserTypeStg
ReadM1ClassStm
ReadM1ClassStmBuf
ReadMonikerStm
ReadOleStg
ReadStringStream
ReadStringStreamA
RegOpenOtherKeyExW
RegisterActiveObjectExt
RegisterDragDrop
RegisterDragDropImpl
ReleaseStgMedium
RevokeActiveObjectExt
RevokeDragDrop
RevokeDragDropImpl
SNB_UserFree
SNB_UserFree64
SNB_UserMarshal
SNB_UserMarshal64
SNB_UserSize
SNB_UserSize64
SNB_UserUnmarshal
SNB_UserUnmarshal64
STGMEDIUM_UserFree
STGMEDIUM_UserFree64
STGMEDIUM_UserMarshal
STGMEDIUM_UserMarshal64
STGMEDIUM_UserSize
STGMEDIUM_UserSize64
STGMEDIUM_UserUnmarshal
STGMEDIUM_UserUnmarshal64
SafeAllocaAllocateFromHeap
SafeAllocaFreeToHeap
SafeAllocaInitialize
SetConvertStg
SetDocumentBitStg
SetWOWThunkGlobalPtr
SkipMonikerStm
Sleep
SrvrWndProc
StgConvertPropertyToVariantStub
StgConvertVariantToPropertyStub
StgCreateDocfileOnILockBytesStub
StgCreateDocfileStub
StgCreatePropSetStgStub
StgCreatePropStgStub
StgCreateStorageExStub
StgGetIFillLockBytesOnFileStub
StgGetIFillLockBytesOnILockBytesStub
StgIsStorageFileStub
StgIsStorageILockBytesStub
StgOpenAsyncDocfileOnIFillLockBytesStub
StgOpenPropStgStub
StgOpenStorageExStub
StgOpenStorageOnHandleStub
StgOpenStorageOnILockBytesStub
StgOpenStorageStub
StgPropertyLengthAsVariantStub
StgSetTimesStub
SysWndProc
TlgRegisterAggregateProviderEx
TlgUnregisterAggregateProvider
TraceLoggingRegisterEx_EtwEventRegister_EtwEventSetInformation
TraceLoggingRegisterEx_EventRegister_EventSetInformation
TxfDllMain
UtConvertDvtd16toDvtd32
UtConvertDvtd32toDvtd16
UtDoStreamOperation
UtGetDvtd16Info
UtGetDvtd32Info
VARIANT_UserFree
VARIANT_UserFree_XFG
VARIANT_UserMarshal_XFG
VARIANT_UserSize_XFG
VARIANT_UserUnmarshal_XFG
VerifyStackAvailable
WPP_SF_S
WPP_SF_ssdDsS
WaitForSingleObject
WppControlCallback
WppInitUm
WriteClassStgStub
WriteClassStmStub
WriteClipformatStm
WriteFmtUserTypeStg
WriteM1ClassStm
WriteM1ClassStmBuf
WriteMonikerStm
WriteOleStg
WriteOleStgEx
WriteStringStream
XformHeightInPixelsToHimetric
XformWidthInPixelsToHimetric
_CxxThrowException
_DllMainCRTStartup
_Init_thread_footer
_Init_thread_header
_Init_thread_notify
_Init_thread_wait
_PictLoadLibraries
_PictLoadURL
_PictSetExcepInfo
_PictUISyncInit
_RTC_Initialize
_RTC_Terminate
__C_specific_handler
__CxxFrameHandler4
__GSHandlerCheck
__GSHandlerCheckCommon
__GSHandlerCheck_EH4
__GSHandlerCheck_SEH
__Interceptor_meth10
__Interceptor_meth100
__Interceptor_meth1000
__Interceptor_meth1001
__Interceptor_meth1002
__Interceptor_meth1003
__Interceptor_meth1004
__Interceptor_meth1005
__Interceptor_meth1006
__Interceptor_meth1007
__Interceptor_meth1008
__Interceptor_meth1009
__Interceptor_meth101
__Interceptor_meth1010
__Interceptor_meth1011
__Interceptor_meth1012
__Interceptor_meth1013
__Interceptor_meth1014
__Interceptor_meth1015
__Interceptor_meth1016
__Interceptor_meth1017
__Interceptor_meth1018
__Interceptor_meth1019
__Interceptor_meth102
__Interceptor_meth1020
__Interceptor_meth1021
__Interceptor_meth1022
__Interceptor_meth1023
__Interceptor_meth103
__Interceptor_meth104
__Interceptor_meth105
__Interceptor_meth106
__Interceptor_meth107
__Interceptor_meth108
__Interceptor_meth109
__Interceptor_meth11
__Interceptor_meth110
__Interceptor_meth111
__Interceptor_meth112
__Interceptor_meth113
__Interceptor_meth114
__Interceptor_meth115
__Interceptor_meth116
__Interceptor_meth117
__Interceptor_meth118
__Interceptor_meth119
__Interceptor_meth12
__Interceptor_meth120
__Interceptor_meth121
__Interceptor_meth122
__Interceptor_meth123
__Interceptor_meth124
__Interceptor_meth125
__Interceptor_meth126
__Interceptor_meth127
__Interceptor_meth128
__Interceptor_meth129
__Interceptor_meth13
__Interceptor_meth130
__Interceptor_meth131
__Interceptor_meth132
__Interceptor_meth133
__Interceptor_meth134
__Interceptor_meth135
__Interceptor_meth136
__Interceptor_meth137
__Interceptor_meth138
__Interceptor_meth139
__Interceptor_meth14
__Interceptor_meth140
__Interceptor_meth141
__Interceptor_meth142
__Interceptor_meth143
__Interceptor_meth144
__Interceptor_meth145
__Interceptor_meth146
__Interceptor_meth147
__Interceptor_meth148
__Interceptor_meth149
__Interceptor_meth15
__Interceptor_meth150
__Interceptor_meth151
__Interceptor_meth152
__Interceptor_meth153
__Interceptor_meth154
__Interceptor_meth155
__Interceptor_meth156
__Interceptor_meth157
__Interceptor_meth158
__Interceptor_meth159
__Interceptor_meth16
__Interceptor_meth160
__Interceptor_meth161
__Interceptor_meth162
__Interceptor_meth163
__Interceptor_meth164
__Interceptor_meth165
__Interceptor_meth166
__Interceptor_meth167
__Interceptor_meth168
__Interceptor_meth169
__Interceptor_meth17
__Interceptor_meth170
__Interceptor_meth171
__Interceptor_meth172
__Interceptor_meth173
__Interceptor_meth174
__Interceptor_meth175
__Interceptor_meth176
__Interceptor_meth177
__Interceptor_meth178
__Interceptor_meth179
__Interceptor_meth18
__Interceptor_meth180
__Interceptor_meth181
__Interceptor_meth182
__Interceptor_meth183
__Interceptor_meth184
__Interceptor_meth185
__Interceptor_meth186
__Interceptor_meth187
__Interceptor_meth188
__Interceptor_meth189
__Interceptor_meth19
__Interceptor_meth190
__Interceptor_meth191
__Interceptor_meth192
__Interceptor_meth193
__Interceptor_meth194
__Interceptor_meth195
__Interceptor_meth196
__Interceptor_meth197
__Interceptor_meth198
__Interceptor_meth199
__Interceptor_meth20
__Interceptor_meth200
__Interceptor_meth201
__Interceptor_meth202
__Interceptor_meth203
__Interceptor_meth204
__Interceptor_meth205
__Interceptor_meth206
__Interceptor_meth207
__Interceptor_meth208
__Interceptor_meth209
__Interceptor_meth21
__Interceptor_meth210
__Interceptor_meth211
__Interceptor_meth212
__Interceptor_meth213
__Interceptor_meth214
__Interceptor_meth215
__Interceptor_meth216
__Interceptor_meth217
__Interceptor_meth218
__Interceptor_meth219
__Interceptor_meth22
__Interceptor_meth220
__Interceptor_meth221
__Interceptor_meth222
__Interceptor_meth223
__Interceptor_meth224
__Interceptor_meth225
__Interceptor_meth226
__Interceptor_meth227
__Interceptor_meth228
__Interceptor_meth229
__Interceptor_meth23
__Interceptor_meth230
__Interceptor_meth231
__Interceptor_meth232
__Interceptor_meth233
__Interceptor_meth234
__Interceptor_meth235
__Interceptor_meth236
__Interceptor_meth237
__Interceptor_meth238
__Interceptor_meth239
__Interceptor_meth24
__Interceptor_meth240
__Interceptor_meth241
__Interceptor_meth242
__Interceptor_meth243
__Interceptor_meth244
__Interceptor_meth245
__Interceptor_meth246
__Interceptor_meth247
__Interceptor_meth248
__Interceptor_meth249
__Interceptor_meth25
__Interceptor_meth250
__Interceptor_meth251
__Interceptor_meth252
__Interceptor_meth253
__Interceptor_meth254
__Interceptor_meth255
__Interceptor_meth256
__Interceptor_meth257
__Interceptor_meth258
__Interceptor_meth259
__Interceptor_meth26
__Interceptor_meth260
__Interceptor_meth261
__Interceptor_meth262
__Interceptor_meth263
__Interceptor_meth264
__Interceptor_meth265
__Interceptor_meth266
__Interceptor_meth267
__Interceptor_meth268
__Interceptor_meth269
__Interceptor_meth27
__Interceptor_meth270
__Interceptor_meth271
__Interceptor_meth272
__Interceptor_meth273
__Interceptor_meth274
__Interceptor_meth275
__Interceptor_meth276
__Interceptor_meth277
__Interceptor_meth278
__Interceptor_meth279
__Interceptor_meth28
__Interceptor_meth280
__Interceptor_meth281
__Interceptor_meth282
__Interceptor_meth283
__Interceptor_meth284
__Interceptor_meth285
__Interceptor_meth286
__Interceptor_meth287
__Interceptor_meth288
__Interceptor_meth289
__Interceptor_meth29
__Interceptor_meth290
__Interceptor_meth291
__Interceptor_meth292
__Interceptor_meth293
__Interceptor_meth294
__Interceptor_meth295
__Interceptor_meth296
__Interceptor_meth297
__Interceptor_meth298
__Interceptor_meth299
__Interceptor_meth3
__Interceptor_meth30
__Interceptor_meth300
__Interceptor_meth301
__Interceptor_meth302
__Interceptor_meth303
__Interceptor_meth304
__Interceptor_meth305
__Interceptor_meth306
__Interceptor_meth307
__Interceptor_meth308
__Interceptor_meth309
__Interceptor_meth31
__Interceptor_meth310
__Interceptor_meth311
__Interceptor_meth312
__Interceptor_meth313
__Interceptor_meth314
__Interceptor_meth315
__Interceptor_meth316
__Interceptor_meth317
__Interceptor_meth318
__Interceptor_meth319
__Interceptor_meth32
__Interceptor_meth320
__Interceptor_meth321
__Interceptor_meth322
__Interceptor_meth323
__Interceptor_meth324
__Interceptor_meth325
__Interceptor_meth326
__Interceptor_meth327
__Interceptor_meth328
__Interceptor_meth329
__Interceptor_meth33
__Interceptor_meth330
__Interceptor_meth331
__Interceptor_meth332
__Interceptor_meth333
__Interceptor_meth334
__Interceptor_meth335
__Interceptor_meth336
__Interceptor_meth337
__Interceptor_meth338
__Interceptor_meth339
__Interceptor_meth34
__Interceptor_meth340
__Interceptor_meth341
__Interceptor_meth342
__Interceptor_meth343
__Interceptor_meth344
__Interceptor_meth345
__Interceptor_meth346
__Interceptor_meth347
__Interceptor_meth348
__Interceptor_meth349
__Interceptor_meth35
__Interceptor_meth350
__Interceptor_meth351
__Interceptor_meth352
__Interceptor_meth353
__Interceptor_meth354
__Interceptor_meth355
__Interceptor_meth356
__Interceptor_meth357
__Interceptor_meth358
__Interceptor_meth359
__Interceptor_meth36
__Interceptor_meth360
__Interceptor_meth361
__Interceptor_meth362
__Interceptor_meth363
__Interceptor_meth364
__Interceptor_meth365
__Interceptor_meth366
__Interceptor_meth367
__Interceptor_meth368
__Interceptor_meth369
__Interceptor_meth37
__Interceptor_meth370
__Interceptor_meth371
__Interceptor_meth372
__Interceptor_meth373
__Interceptor_meth374
__Interceptor_meth375
__Interceptor_meth376
__Interceptor_meth377
__Interceptor_meth378
__Interceptor_meth379
__Interceptor_meth38
__Interceptor_meth380
__Interceptor_meth381
__Interceptor_meth382
__Interceptor_meth383
__Interceptor_meth384
__Interceptor_meth385
__Interceptor_meth386
__Interceptor_meth387
__Interceptor_meth388
__Interceptor_meth389
__Interceptor_meth39
__Interceptor_meth390
__Interceptor_meth391
__Interceptor_meth392
__Interceptor_meth393
__Interceptor_meth394
__Interceptor_meth395
__Interceptor_meth396
__Interceptor_meth397
__Interceptor_meth398
__Interceptor_meth399
__Interceptor_meth4
__Interceptor_meth40
__Interceptor_meth400
__Interceptor_meth401
__Interceptor_meth402
__Interceptor_meth403
__Interceptor_meth404
__Interceptor_meth405
__Interceptor_meth406
__Interceptor_meth407
__Interceptor_meth408
__Interceptor_meth409
__Interceptor_meth41
__Interceptor_meth410
__Interceptor_meth411
__Interceptor_meth412
__Interceptor_meth413
__Interceptor_meth414
__Interceptor_meth415
__Interceptor_meth416
__Interceptor_meth417
__Interceptor_meth418
__Interceptor_meth419
__Interceptor_meth42
__Interceptor_meth420
__Interceptor_meth421
__Interceptor_meth422
__Interceptor_meth423
__Interceptor_meth424
__Interceptor_meth425
__Interceptor_meth426
__Interceptor_meth427
__Interceptor_meth428
__Interceptor_meth429
__Interceptor_meth43
__Interceptor_meth430
__Interceptor_meth431
__Interceptor_meth432
__Interceptor_meth433
__Interceptor_meth434
__Interceptor_meth435
__Interceptor_meth436
__Interceptor_meth437
__Interceptor_meth438
__Interceptor_meth439
__Interceptor_meth44
__Interceptor_meth440
__Interceptor_meth441
__Interceptor_meth442
__Interceptor_meth443
__Interceptor_meth444
__Interceptor_meth445
__Interceptor_meth446
__Interceptor_meth447
__Interceptor_meth448
__Interceptor_meth449
__Interceptor_meth45
__Interceptor_meth450
__Interceptor_meth451
__Interceptor_meth452
__Interceptor_meth453
__Interceptor_meth454
__Interceptor_meth455
__Interceptor_meth456
__Interceptor_meth457
__Interceptor_meth458
__Interceptor_meth459
__Interceptor_meth46
__Interceptor_meth460
__Interceptor_meth461
__Interceptor_meth462
__Interceptor_meth463
__Interceptor_meth464
__Interceptor_meth465
__Interceptor_meth466
__Interceptor_meth467
__Interceptor_meth468
__Interceptor_meth469
__Interceptor_meth47
__Interceptor_meth470
__Interceptor_meth471
__Interceptor_meth472
__Interceptor_meth473
__Interceptor_meth474
__Interceptor_meth475
__Interceptor_meth476
__Interceptor_meth477
__Interceptor_meth478
__Interceptor_meth479
__Interceptor_meth48
__Interceptor_meth480
__Interceptor_meth481
__Interceptor_meth482
__Interceptor_meth483
__Interceptor_meth484
__Interceptor_meth485
__Interceptor_meth486
__Interceptor_meth487
__Interceptor_meth488
__Interceptor_meth489
__Interceptor_meth49
__Interceptor_meth490
__Interceptor_meth491
__Interceptor_meth492
__Interceptor_meth493
__Interceptor_meth494
__Interceptor_meth495
__Interceptor_meth496
__Interceptor_meth497
__Interceptor_meth498
__Interceptor_meth499
__Interceptor_meth5
__Interceptor_meth50
__Interceptor_meth500
__Interceptor_meth501
__Interceptor_meth502
__Interceptor_meth503
__Interceptor_meth504
__Interceptor_meth505
__Interceptor_meth506
__Interceptor_meth507
__Interceptor_meth508
__Interceptor_meth509
__Interceptor_meth51
__Interceptor_meth510
__Interceptor_meth511
__Interceptor_meth512
__Interceptor_meth513
__Interceptor_meth514
__Interceptor_meth515
__Interceptor_meth516
__Interceptor_meth517
__Interceptor_meth518
__Interceptor_meth519
__Interceptor_meth52
__Interceptor_meth520
__Interceptor_meth521
__Interceptor_meth522
__Interceptor_meth523
__Interceptor_meth524
__Interceptor_meth525
__Interceptor_meth526
__Interceptor_meth527
__Interceptor_meth528
__Interceptor_meth529
__Interceptor_meth53
__Interceptor_meth530
__Interceptor_meth531
__Interceptor_meth532
__Interceptor_meth533
__Interceptor_meth534
__Interceptor_meth535
__Interceptor_meth536
__Interceptor_meth537
__Interceptor_meth538
__Interceptor_meth539
__Interceptor_meth54
__Interceptor_meth540
__Interceptor_meth541
__Interceptor_meth542
__Interceptor_meth543
__Interceptor_meth544
__Interceptor_meth545
__Interceptor_meth546
__Interceptor_meth547
__Interceptor_meth548
__Interceptor_meth549
__Interceptor_meth55
__Interceptor_meth550
__Interceptor_meth551
__Interceptor_meth552
__Interceptor_meth553
__Interceptor_meth554
__Interceptor_meth555
__Interceptor_meth556
__Interceptor_meth557
__Interceptor_meth558
__Interceptor_meth559
__Interceptor_meth56
__Interceptor_meth560
__Interceptor_meth561
__Interceptor_meth562
__Interceptor_meth563
__Interceptor_meth564
__Interceptor_meth565
__Interceptor_meth566
__Interceptor_meth567
__Interceptor_meth568
__Interceptor_meth569
__Interceptor_meth57
__Interceptor_meth570
__Interceptor_meth571
__Interceptor_meth572
__Interceptor_meth573
__Interceptor_meth574
__Interceptor_meth575
__Interceptor_meth576
__Interceptor_meth577
__Interceptor_meth578
__Interceptor_meth579
__Interceptor_meth58
__Interceptor_meth580
__Interceptor_meth581
__Interceptor_meth582
__Interceptor_meth583
__Interceptor_meth584
__Interceptor_meth585
__Interceptor_meth586
__Interceptor_meth587
__Interceptor_meth588
__Interceptor_meth589
__Interceptor_meth59
__Interceptor_meth590
__Interceptor_meth591
__Interceptor_meth592
__Interceptor_meth593
__Interceptor_meth594
__Interceptor_meth595
__Interceptor_meth596
__Interceptor_meth597
__Interceptor_meth598
__Interceptor_meth599
__Interceptor_meth6
__Interceptor_meth60
__Interceptor_meth600
__Interceptor_meth601
__Interceptor_meth602
__Interceptor_meth603
__Interceptor_meth604
__Interceptor_meth605
__Interceptor_meth606
__Interceptor_meth607
__Interceptor_meth608
__Interceptor_meth609
__Interceptor_meth61
__Interceptor_meth610
__Interceptor_meth611
__Interceptor_meth612
__Interceptor_meth613
__Interceptor_meth614
__Interceptor_meth615
__Interceptor_meth616
__Interceptor_meth617
__Interceptor_meth618
__Interceptor_meth619
__Interceptor_meth62
__Interceptor_meth620
__Interceptor_meth621
__Interceptor_meth622
__Interceptor_meth623
__Interceptor_meth624
__Interceptor_meth625
__Interceptor_meth626
__Interceptor_meth627
__Interceptor_meth628
__Interceptor_meth629
__Interceptor_meth63
__Interceptor_meth630
__Interceptor_meth631
__Interceptor_meth632
__Interceptor_meth633
__Interceptor_meth634
__Interceptor_meth635
__Interceptor_meth636
__Interceptor_meth637
__Interceptor_meth638
__Interceptor_meth639
__Interceptor_meth64
__Interceptor_meth640
__Interceptor_meth641
__Interceptor_meth642
__Interceptor_meth643
__Interceptor_meth644
__Interceptor_meth645
__Interceptor_meth646
__Interceptor_meth647
__Interceptor_meth648
__Interceptor_meth649
__Interceptor_meth65
__Interceptor_meth650
__Interceptor_meth651
__Interceptor_meth652
__Interceptor_meth653
__Interceptor_meth654
__Interceptor_meth655
__Interceptor_meth656
__Interceptor_meth657
__Interceptor_meth658
__Interceptor_meth659
__Interceptor_meth66
__Interceptor_meth660
__Interceptor_meth661
__Interceptor_meth662
__Interceptor_meth663
__Interceptor_meth664
__Interceptor_meth665
__Interceptor_meth666
__Interceptor_meth667
__Interceptor_meth668
__Interceptor_meth669
__Interceptor_meth67
__Interceptor_meth670
__Interceptor_meth671
__Interceptor_meth672
__Interceptor_meth673
__Interceptor_meth674
__Interceptor_meth675
__Interceptor_meth676
__Interceptor_meth677
__Interceptor_meth678
__Interceptor_meth679
__Interceptor_meth68
__Interceptor_meth680
__Interceptor_meth681
__Interceptor_meth682
__Interceptor_meth683
__Interceptor_meth684
__Interceptor_meth685
__Interceptor_meth686
__Interceptor_meth687
__Interceptor_meth688
__Interceptor_meth689
__Interceptor_meth69
__Interceptor_meth690
__Interceptor_meth691
__Interceptor_meth692
__Interceptor_meth693
__Interceptor_meth694
__Interceptor_meth695
__Interceptor_meth696
__Interceptor_meth697
__Interceptor_meth698
__Interceptor_meth699
__Interceptor_meth7
__Interceptor_meth70
__Interceptor_meth700
__Interceptor_meth701
__Interceptor_meth702
__Interceptor_meth703
__Interceptor_meth704
__Interceptor_meth705
__Interceptor_meth706
__Interceptor_meth707
__Interceptor_meth708
__Interceptor_meth709
__Interceptor_meth71
__Interceptor_meth710
__Interceptor_meth711
__Interceptor_meth712
__Interceptor_meth713
__Interceptor_meth714
__Interceptor_meth715
__Interceptor_meth716
__Interceptor_meth717
__Interceptor_meth718
__Interceptor_meth719
__Interceptor_meth72
__Interceptor_meth720
__Interceptor_meth721
__Interceptor_meth722
__Interceptor_meth723
__Interceptor_meth724
__Interceptor_meth725
__Interceptor_meth726
__Interceptor_meth727
__Interceptor_meth728
__Interceptor_meth729
__Interceptor_meth73
__Interceptor_meth730
__Interceptor_meth731
__Interceptor_meth732
__Interceptor_meth733
__Interceptor_meth734
__Interceptor_meth735
__Interceptor_meth736
__Interceptor_meth737
__Interceptor_meth738
__Interceptor_meth739
__Interceptor_meth74
__Interceptor_meth740
__Interceptor_meth741
__Interceptor_meth742
__Interceptor_meth743
__Interceptor_meth744
__Interceptor_meth745
__Interceptor_meth746
__Interceptor_meth747
__Interceptor_meth748
__Interceptor_meth749
__Interceptor_meth75
__Interceptor_meth750
__Interceptor_meth751
__Interceptor_meth752
__Interceptor_meth753
__Interceptor_meth754
__Interceptor_meth755
__Interceptor_meth756
__Interceptor_meth757
__Interceptor_meth758
__Interceptor_meth759
__Interceptor_meth76
__Interceptor_meth760
__Interceptor_meth761
__Interceptor_meth762
__Interceptor_meth763
__Interceptor_meth764
__Interceptor_meth765
__Interceptor_meth766
__Interceptor_meth767
__Interceptor_meth768
__Interceptor_meth769
__Interceptor_meth77
__Interceptor_meth770
__Interceptor_meth771
__Interceptor_meth772
__Interceptor_meth773
__Interceptor_meth774
__Interceptor_meth775
__Interceptor_meth776
__Interceptor_meth777
__Interceptor_meth778
__Interceptor_meth779
__Interceptor_meth78
__Interceptor_meth780
__Interceptor_meth781
__Interceptor_meth782
__Interceptor_meth783
__Interceptor_meth784
__Interceptor_meth785
__Interceptor_meth786
__Interceptor_meth787
__Interceptor_meth788
__Interceptor_meth789
__Interceptor_meth79
__Interceptor_meth790
__Interceptor_meth791
__Interceptor_meth792
__Interceptor_meth793
__Interceptor_meth794
__Interceptor_meth795
__Interceptor_meth796
__Interceptor_meth797
__Interceptor_meth798
__Interceptor_meth799
__Interceptor_meth8
__Interceptor_meth80
__Interceptor_meth800
__Interceptor_meth801
__Interceptor_meth802
__Interceptor_meth803
__Interceptor_meth804
__Interceptor_meth805
__Interceptor_meth806
__Interceptor_meth807
__Interceptor_meth808
__Interceptor_meth809
__Interceptor_meth81
__Interceptor_meth810
__Interceptor_meth811
__Interceptor_meth812
__Interceptor_meth813
__Interceptor_meth814
__Interceptor_meth815
__Interceptor_meth816
__Interceptor_meth817
__Interceptor_meth818
__Interceptor_meth819
__Interceptor_meth82
__Interceptor_meth820
__Interceptor_meth821
__Interceptor_meth822
__Interceptor_meth823
__Interceptor_meth824
__Interceptor_meth825
__Interceptor_meth826
__Interceptor_meth827
__Interceptor_meth828
__Interceptor_meth829
__Interceptor_meth83
__Interceptor_meth830
__Interceptor_meth831
__Interceptor_meth832
__Interceptor_meth833
__Interceptor_meth834
__Interceptor_meth835
__Interceptor_meth836
__Interceptor_meth837
__Interceptor_meth838
__Interceptor_meth839
__Interceptor_meth84
__Interceptor_meth840
__Interceptor_meth841
__Interceptor_meth842
__Interceptor_meth843
__Interceptor_meth844
__Interceptor_meth845
__Interceptor_meth846
__Interceptor_meth847
__Interceptor_meth848
__Interceptor_meth849
__Interceptor_meth85
__Interceptor_meth850
__Interceptor_meth851
__Interceptor_meth852
__Interceptor_meth853
__Interceptor_meth854
__Interceptor_meth855
__Interceptor_meth856
__Interceptor_meth857
__Interceptor_meth858
__Interceptor_meth859
__Interceptor_meth86
__Interceptor_meth860
__Interceptor_meth861
__Interceptor_meth862
__Interceptor_meth863
__Interceptor_meth864
__Interceptor_meth865
__Interceptor_meth866
__Interceptor_meth867
__Interceptor_meth868
__Interceptor_meth869
__Interceptor_meth87
__Interceptor_meth870
__Interceptor_meth871
__Interceptor_meth872
__Interceptor_meth873
__Interceptor_meth874
__Interceptor_meth875
__Interceptor_meth876
__Interceptor_meth877
__Interceptor_meth878
__Interceptor_meth879
__Interceptor_meth88
__Interceptor_meth880
__Interceptor_meth881
__Interceptor_meth882
__Interceptor_meth883
__Interceptor_meth884
__Interceptor_meth885
__Interceptor_meth886
__Interceptor_meth887
__Interceptor_meth888
__Interceptor_meth889
__Interceptor_meth89
__Interceptor_meth890
__Interceptor_meth891
__Interceptor_meth892
__Interceptor_meth893
__Interceptor_meth894
__Interceptor_meth895
__Interceptor_meth896
__Interceptor_meth897
__Interceptor_meth898
__Interceptor_meth899
__Interceptor_meth9
__Interceptor_meth90
__Interceptor_meth900
__Interceptor_meth901
__Interceptor_meth902
__Interceptor_meth903
__Interceptor_meth904
__Interceptor_meth905
__Interceptor_meth906
__Interceptor_meth907
__Interceptor_meth908
__Interceptor_meth909
__Interceptor_meth91
__Interceptor_meth910
__Interceptor_meth911
__Interceptor_meth912
__Interceptor_meth913
__Interceptor_meth914
__Interceptor_meth915
__Interceptor_meth916
__Interceptor_meth917
__Interceptor_meth918
__Interceptor_meth919
__Interceptor_meth92
__Interceptor_meth920
__Interceptor_meth921
__Interceptor_meth922
__Interceptor_meth923
__Interceptor_meth924
__Interceptor_meth925
__Interceptor_meth926
__Interceptor_meth927
__Interceptor_meth928
__Interceptor_meth929
__Interceptor_meth93
__Interceptor_meth930
__Interceptor_meth931
__Interceptor_meth932
__Interceptor_meth933
__Interceptor_meth934
__Interceptor_meth935
__Interceptor_meth936
__Interceptor_meth937
__Interceptor_meth938
__Interceptor_meth939
__Interceptor_meth94
__Interceptor_meth940
__Interceptor_meth941
__Interceptor_meth942
__Interceptor_meth943
__Interceptor_meth944
__Interceptor_meth945
__Interceptor_meth946
__Interceptor_meth947
__Interceptor_meth948
__Interceptor_meth949
__Interceptor_meth95
__Interceptor_meth950
__Interceptor_meth951
__Interceptor_meth952
__Interceptor_meth953
__Interceptor_meth954
__Interceptor_meth955
__Interceptor_meth956
__Interceptor_meth957
__Interceptor_meth958
__Interceptor_meth959
__Interceptor_meth96
__Interceptor_meth960
__Interceptor_meth961
__Interceptor_meth962
__Interceptor_meth963
__Interceptor_meth964
__Interceptor_meth965
__Interceptor_meth966
__Interceptor_meth967
__Interceptor_meth968
__Interceptor_meth969
__Interceptor_meth97
__Interceptor_meth970
__Interceptor_meth971
__Interceptor_meth972
__Interceptor_meth973
__Interceptor_meth974
__Interceptor_meth975
__Interceptor_meth976
__Interceptor_meth977
__Interceptor_meth978
__Interceptor_meth979
__Interceptor_meth98
__Interceptor_meth980
__Interceptor_meth981
__Interceptor_meth982
__Interceptor_meth983
__Interceptor_meth984
__Interceptor_meth985
__Interceptor_meth986
__Interceptor_meth987
__Interceptor_meth988
__Interceptor_meth989
__Interceptor_meth99
__Interceptor_meth990
__Interceptor_meth991
__Interceptor_meth992
__Interceptor_meth993
__Interceptor_meth994
__Interceptor_meth995
__Interceptor_meth996
__Interceptor_meth997
__Interceptor_meth998
__Interceptor_meth999
__acrt_initialize
__acrt_thread_attach
__acrt_thread_detach
__acrt_uninitialize
__acrt_uninitialize_critical
__chkstk
__crt_debugger_hook
__delayLoadHelper2
__imp_load_CLIPFORMAT_UserFree
__imp_load_CLIPFORMAT_UserMarshal
__imp_load_CLIPFORMAT_UserSize
__imp_load_CLIPFORMAT_UserUnmarshal
__imp_load_CLSIDFromOle1Class
__imp_load_CLSIDFromProgID
__imp_load_CLSIDFromString
__imp_load_CleanupOleStateInAllTls
__imp_load_CleanupTlsOleState
__imp_load_ClearCleanupFlag
__imp_load_CloseServiceHandle
__imp_load_CoCancelCall
__imp_load_CoCreateFreeThreadedMarshaler
__imp_load_CoCreateInstance
__imp_load_CoCreateInstanceEx
__imp_load_CoDecrementMTAUsage
__imp_load_CoDisableCallCancellation
__imp_load_CoDisconnectObject
__imp_load_CoEnableCallCancellation
__imp_load_CoFileTimeNow
__imp_load_CoGetApartmentType
__imp_load_CoGetCallContext
__imp_load_CoGetCancelObject
__imp_load_CoGetClassObject
__imp_load_CoGetCurrentProcess
__imp_load_CoGetInstanceFromFile
__imp_load_CoGetMalloc
__imp_load_CoGetMarshalSizeMax
__imp_load_CoGetTreatAsClass
__imp_load_CoImpersonateClient
__imp_load_CoIncrementMTAUsage
__imp_load_CoInitializeEx
__imp_load_CoInitializeWOW
__imp_load_CoIsHandlerConnected
__imp_load_CoIsOle1Class
__imp_load_CoLockObjectExternal
__imp_load_CoMarshalInterface
__imp_load_CoRegisterMessageFilter
__imp_load_CoRegisterSurrogateEx
__imp_load_CoReleaseMarshalData
__imp_load_CoRevertToSelf
__imp_load_CoSetProxyBlanket
__imp_load_CoTaskMemAlloc
__imp_load_CoTaskMemFree
__imp_load_CoTaskMemRealloc
__imp_load_CoUninitialize
__imp_load_CoUnloadingWOW
__imp_load_CoUnmarshalInterface
__imp_load_CoWaitForMultipleHandles
__imp_load_ConvertSidToStringSidW
__imp_load_CreateErrorInfo
__imp_load_CreateILockBytesOnHGlobal
__imp_load_CreateStreamOnHGlobal
__imp_load_DeregisterEventSource
__imp_load_DfGetClass
__imp_load_EdpClearClipboardMetaData
__imp_load_EdpFreeContext
__imp_load_EdpGetAppLockerUniqueAppIdentifier
__imp_load_EdpGetClipboardAccessDeniedData
__imp_load_EdpGetContextForProcess
__imp_load_EdpGetContextForWindow
__imp_load_EdpGetDataInfoFromDataObject
__imp_load_EdpGetEnterpriseIdForClipboard
__imp_load_EdpGetIsManaged
__imp_load_EdpGetSourceAppIdForClipboard
__imp_load_EdpGetSourceIsEnlightenedForClipboard
__imp_load_EdpIsContextExemptOrEnlightenedAllowed
__imp_load_EdpIsUIPolicyEvaluationEnabledForThread
__imp_load_EdpRequestAccessForContext
__imp_load_EdpSetCredServiceInfo
__imp_load_EdpSetEnterpriseIdForClipboard
__imp_load_EdpSetSourceAppIdForClipboard
__imp_load_EdpSetSourceIsEnlightenedForClipboard
__imp_load_ExtractAssociatedIconW
__imp_load_ExtractIconW
__imp_load_FmtIdToPropStgName
__imp_load_GetConvertStg
__imp_load_GetDocumentBitStg
__imp_load_GetFuncDescs
__imp_load_GetHGlobalFromILockBytes
__imp_load_GetHGlobalFromStream
__imp_load_HPALETTE_UserFree
__imp_load_HPALETTE_UserMarshal
__imp_load_HPALETTE_UserSize
__imp_load_HPALETTE_UserUnmarshal
__imp_load_HWND_UserFree
__imp_load_HWND_UserFree64
__imp_load_HWND_UserMarshal
__imp_load_HWND_UserMarshal64
__imp_load_HWND_UserSize
__imp_load_HWND_UserSize64
__imp_load_HWND_UserUnmarshal
__imp_load_HWND_UserUnmarshal64
__imp_load_IIDFromString
__imp_load_IUnknown_AddRef_Proxy
__imp_load_IUnknown_QueryInterface_Proxy
__imp_load_IUnknown_Release_Proxy
__imp_load_I_RpcExceptionFilter
__imp_load_InstallApplication
__imp_load_InternalCAggIdRelease
__imp_load_InternalCAggIdSetHandler
__imp_load_InternalCCGetClassInformationForDde
__imp_load_InternalCCGetClassInformationFromKey
__imp_load_InternalCCSetDdeServerWindow
__imp_load_InternalCMLSendReceive2
__imp_load_InternalCStdIdentityGetIProxyManager
__imp_load_InternalCStdIdentityGetInternalUnk
__imp_load_InternalCStdIdentityUpdateFlags
__imp_load_InternalCallFrameExceptionFilter
__imp_load_InternalCanMakeOutCall2
__imp_load_InternalCoRegisterDisconnectCallback
__imp_load_InternalCoUnregisterDisconnectCallback
__imp_load_InternalCreateCAggId
__imp_load_InternalCreateIdentityHandler
__imp_load_InternalDoATClassCreate
__imp_load_InternalGetWindowPropInterface2
__imp_load_InternalIrotEnumRunning2
__imp_load_InternalIrotGetObject3
__imp_load_InternalIrotGetTimeOfLastChange2
__imp_load_InternalIrotIsRunning2
__imp_load_InternalIrotNoteChangeTime
__imp_load_InternalIrotRegister
__imp_load_InternalIrotRevoke
__imp_load_InternalIsApartmentInitialized
__imp_load_InternalIsProcessInitialized
__imp_load_InternalNotifyDDStartOrStop
__imp_load_InternalOle1ClassFromCLSID2
__imp_load_InternalOleModalLoopBlockFn
__imp_load_InternalRegOpenClassKey
__imp_load_InternalRegisterWindowPropInterface2
__imp_load_InternalRevokeWindowPropInterface
__imp_load_InternalSTAInvoke
__imp_load_InternalSetAptCallCtrlOnTlsIfRequired
__imp_load_InternalTlsAllocData
__imp_load_LPSAFEARRAY_Marshal
__imp_load_LPSAFEARRAY_Size
__imp_load_LPSAFEARRAY_Unmarshal
__imp_load_LoadRegTypeLib
__imp_load_LoadTypeLibEx
__imp_load_Ndr64AsyncClientCall
__imp_load_NdrClientInitializeNew
__imp_load_NdrConvert2
__imp_load_NdrCorrelationInitialize
__imp_load_NdrExtStubInitialize
__imp_load_NdrGetSimpleTypeBufferAlignment
__imp_load_NdrGetSimpleTypeBufferSize
__imp_load_NdrGetSimpleTypeMemorySize
__imp_load_NdrGetTypeFlags
__imp_load_NdrOleAllocate
__imp_load_NdrOleDllGetClassObject
__imp_load_NdrOleFree
__imp_load_NdrOutInit
__imp_load_NdrTypeMarshall
__imp_load_NdrTypeSize
__imp_load_NdrTypeUnmarshall
__imp_load_NdrUnmarshallBasetypeInline
__imp_load_NdrpFindInterface
__imp_load_NdrpGetProcFormatString
__imp_load_NdrpGetTypeFormatString
__imp_load_NdrpGetTypeGenCookie
__imp_load_NdrpMemoryIncrement
__imp_load_NdrpReleaseTypeFormatString
__imp_load_NdrpReleaseTypeGenCookie
__imp_load_NdrpVarVtOfTypeDesc
__imp_load_ObjectStublessClient3
__imp_load_ObjectStublessClient4
__imp_load_ObjectStublessClient5
__imp_load_OpenSCManagerW
__imp_load_OpenServiceW
__imp_load_ProgIDFromCLSID
__imp_load_PropStgNameToFmtId
__imp_load_QueryServiceStatus
__imp_load_QueryWin32SubsystemHost
__imp_load_ReadClassStg
__imp_load_ReadClassStm
__imp_load_RegCreateKeyW
__imp_load_RegOpenKeyW
__imp_load_RegQueryValueW
__imp_load_RegSetValueW
__imp_load_RegisterEventSourceW
__imp_load_ReleaseFuncDescs
__imp_load_ReportEventW
__imp_load_RoActivateInstance
__imp_load_RoGetActivationFactory
__imp_load_RoOriginateError
__imp_load_RoOriginateErrorW
__imp_load_RoTransformError
__imp_load_RpcAsyncCancelCall
__imp_load_RpcAsyncCompleteCall
__imp_load_RpcAsyncInitializeHandle
__imp_load_RpcBindingFree
__imp_load_RpcBindingFromStringBindingW
__imp_load_RpcBindingSetAuthInfoExW
__imp_load_RpcImpersonateClient
__imp_load_RpcStringBindingComposeW
__imp_load_RpcStringFreeW
__imp_load_RtlBase64EncodeLBlobToLUnicodeString
__imp_load_RtlDecodeBase64LUnicodeStringToLBlob
__imp_load_SHGetFileInfoW
__imp_load_SafeArrayAllocData
__imp_load_SafeArrayAllocDescriptor
__imp_load_SafeArrayAllocDescriptorEx
__imp_load_SafeArrayDestroy
__imp_load_SetCleanupFlag
__imp_load_SetErrorInfo
__imp_load_StartServiceW
__imp_load_StgConvertPropertyToVariant
__imp_load_StgConvertVariantToProperty
__imp_load_StgCreateDocfile
__imp_load_StgCreateDocfileOnILockBytes
__imp_load_StgCreatePropSetStg
__imp_load_StgCreatePropStg
__imp_load_StgCreateStorageEx
__imp_load_StgGetIFillLockBytesOnFile
__imp_load_StgGetIFillLockBytesOnILockBytes
__imp_load_StgIsStorageFile
__imp_load_StgIsStorageILockBytes
__imp_load_StgOpenAsyncDocfileOnIFillLockBytes
__imp_load_StgOpenPropStg
__imp_load_StgOpenStorage
__imp_load_StgOpenStorageEx
__imp_load_StgOpenStorageOnHandle
__imp_load_StgOpenStorageOnILockBytes
__imp_load_StgPropVariantChangeType
__imp_load_StgPropertyLengthAsVariant
__imp_load_StgSetTimes
__imp_load_StringFromCLSID
__imp_load_StringFromGUID2
__imp_load_SxsOleAut32MapReferenceClsidToConfiguredClsid
__imp_load_SysAllocString
__imp_load_SysAllocStringByteLen
__imp_load_SysFreeString
__imp_load_SysStringByteLen
__imp_load_UuidFromStringW
__imp_load_VariantChangeType
__imp_load_VariantClear
__imp_load_VariantCopy
__imp_load_VariantInit
__imp_load_WNetGetConnectionW
__imp_load_WNetGetUniversalNameW
__imp_load_WindowsCreateString
__imp_load_WindowsCreateStringReference
__imp_load_WindowsDeleteString
__imp_load_WindowsDeleteStringBuffer
__imp_load_WindowsDuplicateString
__imp_load_WindowsGetStringRawBuffer
__imp_load_WindowsPreallocateStringBuffer
__imp_load_WindowsPromoteStringBuffer
__imp_load_WindowsStringHasEmbeddedNull
__imp_load_WriteClassStg
__imp_load_WriteClassStm
__isa_available_init
__local_stdio_printf_options
__local_stdio_scanf_options
__raise_securityfailure
__report_gsfailure
__report_rangecheckfailure
__report_securityfailure
__scrt_acquire_startup_lock
__scrt_dllmain_after_initialize_c
__scrt_dllmain_before_initialize_c
__scrt_dllmain_crt_thread_attach
__scrt_dllmain_crt_thread_detach
__scrt_dllmain_exception_filter
__scrt_dllmain_uninitialize_c
__scrt_dllmain_uninitialize_critical
__scrt_fastfail
__scrt_get_dyn_tls_init_callback
__scrt_initialize_crt
__scrt_initialize_default_local_stdio_options
__scrt_initialize_onexit_tables
__scrt_is_nonwritable_in_current_image
__scrt_is_ucrt_dll_in_use
__scrt_release_startup_lock
__scrt_stub_for_acrt_initialize
__scrt_stub_for_acrt_thread_attach
__scrt_stub_for_acrt_thread_detach
__scrt_stub_for_acrt_uninitialize
__scrt_stub_for_acrt_uninitialize_critical
__scrt_stub_for_is_c_termination_complete
__scrt_uninitialize_crt
__security_check_cookie
__security_init_cookie
__std_exception_copy
__std_exception_destroy
__std_terminate
__std_type_info_destroy_list
__stdio_common_vsnprintf_s
__stdio_common_vsprintf
__stdio_common_vswprintf
__stdio_common_vswprintf_s
__vcrt_initialize
__vcrt_thread_attach
__vcrt_thread_detach
__vcrt_uninitialize
__vcrt_uninitialize_critical
_alloca_probe
_cexit
_configure_narrow_argv
_crt_atexit
_execute_onexit_table
_get_startup_argv_mode
_guard_check_icall_nop
_guard_dispatch_icall_nop
_guard_xfg_dispatch_icall_nop
_initialize_narrow_environment
_initialize_onexit_table
_initterm
_initterm_e
_invalid_parameter_noinfo
_is_c_termination_complete
_local_unwind
_o___std_exception_copy
_o___std_exception_destroy
_o___std_type_info_destroy_list
_o___stdio_common_vsnprintf_s
_o___stdio_common_vsprintf
_o___stdio_common_vswprintf
_o___stdio_common_vswprintf_s
_o__cexit
_o__configure_narrow_argv
_o__crt_atexit
_o__execute_onexit_table
_o__initialize_narrow_environment
_o__initialize_onexit_table
_o__invalid_parameter_noinfo
_o__purecall
_o__register_onexit_function
_o__seh_filter_dll
_o_fmod
_onexit
_purecall
_register_onexit_function
_resetstkoflw_static
_seh_filter_dll
_tlgDefineProvider_annotation__TlgTlgAggregateInternalProviderProv
_tlgDefineProvider_annotation__Tlgg_hClassActivationProviderProv
_tlgDefineProvider_annotation__Tlgg_hCombaseTraceLoggingProviderProv
_tlgEnableCallback
_tlgKeywordOn
_tlgWriteTransfer_EtwEventWriteTransfer
_tlgWriteTransfer_EventWriteTransfer
_vsnprintf
_vsnprintf_s
_vsnwprintf
atexit
fmod
memcmp
memcpy
memmove
memset
strcmp
swprintf_s
wRegQueryValue
wRegSetValue
wcscmp
*/
