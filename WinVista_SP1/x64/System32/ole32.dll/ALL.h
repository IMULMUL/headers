enum tagExtendedErrorParamTypes;
struct _CLIENT_ID;
struct _PORT_MESSAGE;
struct _LPC_UNREGISTER_PROCESS_MSG;
enum tagAPTKIND;
enum __MIDL___MIDL_itf_objidl_0000_0047_0002;
struct IServerLocationInfo;
struct _LUID;
struct _LUID_AND_ATTRIBUTES;
struct _PRIVILEGE_SET;
struct ISerializableParent;
enum _BUS_DATA_TYPE;
struct IXMLDSOControl;
struct _NDR64_ENCAPSULATED_UNION;
struct _NDR64_UNION_ARM_SELECTOR;
struct _NDR64_UNION_ARM;
struct __midl_frag671_t;
enum tagOBJFLAGS;
union _CPU_INFORMATION;
enum PULLSTATE;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
enum _EXCEPTION_DISPOSITION;
struct IReleaseMarshalBuffers;
enum _SYSTEM_POWER_STATE;
enum tagSLR_FLAGS;
struct _LIST_ENTRY;
union _LARGE_INTEGER;
enum _FUNCTION_TABLE_TYPE;
struct _DYNAMIC_FUNCTION_TABLE;
struct tagPOINT;
class CPoint;
class CDragOperation;
struct tagSAFEARRAYBOUND;
struct _CRYPT_DECODE_PARA;
enum _SECTION_INHERIT;
struct _numberfmtW;
enum tagOLEWHICHMK;
class CDragDataObject;
struct tagAXISINFOW;
enum tagAWSCTYPE;
struct IXMLDOMComment;
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005;
struct _IMAGEHLP_CBA_EVENTW;
enum PROXY_PHASE;
enum _tagSHARE_EVENT;
struct _GUID;
class MAP_KEY_GUID;
class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class CDdeConnectionTable;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
enum tagSTDMSHLFLAGS;
struct _CERT_POLICY_MAPPINGS_INFO;
struct CDdeObject::CDataObjectImpl;
enum tagDHFlags;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct tagSTDOBJREF;
struct tagDUALSTRINGARRAY;
struct tagOBJREF;
struct _RTL_CRITICAL_SECTION;
class COleStaticMutexSem;
class CDllHost;
enum tagApplicationType;
enum __MIDL_IInternetSecurityManager_0002;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SID;
struct _FILE_QUOTA_INFORMATION;
struct IGlobalInterfaceTable;
enum SYNCMGR_EVENT_LEVEL;
class CCoTaskAllocator;
struct ISupportErrorInfo;
enum _RTL_GENERIC_COMPARE_RESULTS;
struct tagBITMAPINFOHEADER;
struct tagRGBQUAD;
struct tagBITMAPINFO;
enum _RTL_PATH_TYPE;
struct CDdeObject::CRpcStubBufferImpl;
enum tagSIGDN;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _RTL_PROCESS_BACKTRACES;
class CUrlMonWrapper;
enum tagOLEVERBATTRIB;
struct _MINIDUMP_LOCATION_DESCRIPTOR;
struct _EVENT_FILTER_DESCRIPTOR;
enum PIDMSI_STATUS_VALUE;
enum __MIDL___MIDL_itf_shdeprecated_0000_0006_0001;
struct tagRPC_CALL_ATTRIBUTES_V1_W;
struct _CERT_KEY_CONTEXT;
struct tagWCRANGE;
struct _IMAGE_DATA_DIRECTORY;
enum _PNP_VETO_TYPE;
enum tagMEMCTX;
struct _stat32i64;
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
enum tagSHELLSEARCHCOMMAND;
struct tagSecurityInfoData;
class SecurityInfo;
enum tagLIBFLAGS;
enum tagSTATFLAG;
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
struct _userSTGMEDIUM::_STGMEDIUM_UNION;
enum tagCONFIRMATIONRESPONSE;
struct _NDR64_ARRAY_FLAGS;
struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT;
struct _DISCDLGSTRUCTA;
struct _CRYPTOAPI_BLOB;
struct _CRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_MASK_GEN_ALGORITHM;
class CSafeRefCount;
enum _PS_IFEO_KEY_STATE;
class CStackWalker;
struct tagLocationInfoData;
class ServerLocationInfo;
enum PO_WAKE_SOURCE_TYPE;
struct _PO_WAKE_SOURCE_HEADER;
enum CRefExportCount::tagTokens;
struct _STRING32;
struct _CURDIR32;
struct tagDVTARGETDEVICE;
enum _MULTIPLE_TRUSTEE_OPERATION;
struct tagActivationContextInfoData;
class ContextInfo;
enum _FILE_INFORMATION_CLASS;
enum _DEBUG_CONTROL_SPACE_ITEM;
struct tagSOleTlsDataPublic;
enum _COVERAGE_REQUEST_CODES;
struct _UNICODE_STRING;
struct _COVERAGE_MODULE_REQUEST;
struct _COVERAGE_MODULE_INFO;
struct _COVERAGE_MODULES;
struct tagBIND_OPTS3;
class CBindCtx;
enum _TRUSTEE_FORM;
struct ILegacyInfo;
struct _IO_COUNTERS;
struct _NDR64_BUFFER_ALIGN_FORMAT;
enum _TOKEN_INFORMATION_CLASS;
struct _MODULE_TYPE_INFO;
struct _ALPC_SERVER_INFORMATION;
enum tagRunAsType;
struct _SYMBOL_INFOW;
struct _SYMBOL_INFO_PACKAGEW;
enum tagFRSM_REPLICA_OP;
struct _PACKEDEVENTINFO;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
struct tagLOGFONTW;
struct tagENUMLOGFONTEXW;
struct tagDESIGNVECTOR;
struct tagENUMLOGFONTEXDVW;
struct tagEMR;
struct _RECTL;
struct tagEMRSETDIBITSTODEVICE;
class PTimeEntry;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
enum _PROGRESS_INVOKE_SETTING;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct _INVERTED_FUNCTION_TABLE;
struct CDdeObject::CProxyManagerImpl;
struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS;
enum tagACTIVATION_STAGE;
struct _RPC_POLICY;
struct _MINIDUMP_MEMORY_DESCRIPTOR64;
struct ITimeAndNoticeControl;
enum tagRpcCallType;
enum EServerSecurity;
enum _tagPI_FLAGS;
struct _EXCEPTION_POINTERS;
enum _FP_IEEE_COMPARE_RESULT;
enum _TAG_UNNAMED_1;
struct _RTL_VERIFIER_HEAP_TABLE;
struct tagPageEntry;
class CInternalPageAllocator;
class CPageAllocator;
class CtxEntry;
struct _CM_SCSI_DEVICE_DATA;
enum _KEY_SET_INFORMATION_CLASS;
class PDeSerStream;
struct _NDR64_PROC_FORMAT;
struct _NDR64_PARAM_FLAGS;
struct _NDR64_PARAM_FORMAT;
struct __midl_frag550_t;
enum tagCLSCTX;
struct _LOADED_IMAGE;
enum _SE_OBJECT_TYPE;
enum _MUTANT_INFORMATION_CLASS;
struct _STRING;
enum STUB_PHASE;
struct _FILETIME;
struct _CRL_ENTRY;
struct tagRemSTGMEDIUM;
enum tagSERVERCALLEX;
struct DVTDINFO;
struct IXMLDOMDocumentFragment;
struct _CRYPT_BIT_BLOB;
struct _OCSP_SIGNATURE_INFO;
struct _OCSP_BASIC_SIGNED_RESPONSE_INFO;
enum tagDVASPECT;
enum __MIDL_IUri_0001;
struct _ACE_HEADER;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct SHashChain;
class CIDObject;
enum _TAG_UNNAMED_2;
enum tagTYPEKIND;
union CMapKeyToValue::CKeyWrap;
struct CMapKeyToValue::CAssoc;
enum _ERROR_SEVERITY_VALUE;
enum LSA_FOREST_TRUST_RECORD_TYPE;
struct _GENERIC_MAPPING;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
struct Windows::Rtl::IRtlFormattableInterface::FormattingLevels;
class XLOCK;
class OPAQUE_HANDLE<1>;
struct XSLOCK::OWNERENTRY;
class EVENT;
class SEMAPHORE;
class XSLOCK;
class CALLFRAME_CACHE<TYPEINFOVTBL>;
enum tagDESCKIND;
struct _DEVICE_FLAGS;
enum _SECURITY_IMPERSONATION_LEVEL;
enum FORMAT_CHARACTER;
struct _OBJECT_TYPE_INFORMATION;
class CStreamOnMessage;
enum MCA_EXCEPTION_TYPE;
enum _FIRMWARE_TYPE;
struct _CRYPT_INTERFACE_REG;
class COIDHashTable;
struct ISurrogateService;
enum _TAG_UNNAMED_3;
struct _s__RTTIClassHierarchyDescriptor;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
class CBasedMarshalListPtr;
enum tagSERVERCALL;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
enum _AUDIT_EVENT_TYPE;
struct _KEY_NAME_INFORMATION;
struct _MIDL_STUB_DESC;
struct _MIDL_SERVER_INFO_;
struct tagCInterfaceStubHeader;
struct IRpcStubBufferVtbl;
struct tagCInterfaceStubVtbl;
struct _MIDL_STUBLESS_PROXY_INFO;
struct tagCInterfaceProxyHeader;
struct tagCInterfaceProxyVtbl;
struct TYPEINFOVTBL;
enum tagCONDITION_TYPE;
enum _PLUGPLAY_CONTROL_CLASS;
struct _CERT_QC_STATEMENT;
struct _RTL_SMART_LBLOB_WRITING_CONTEXT;
struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
struct AsyncIMultiQI;
struct tagFORMATETC;
struct FORMATETCDATA;
struct FORMATETCDATAARRAY;
class CBasedContextPtr;
class CContextList;
class CClassMonikerFactory;
enum DCOM_ENDPOINT_FLAGS;
struct _CRYPT_ATTRIBUTE;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct SUUIDHashNode;
struct SOIDRegistration;
class CUUIDHashTable;
class CROIDTable;
enum CALLFRAME_FREE;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
struct _tagSCtxListIndex;
enum _DEVICE_POWER_STATE;
enum __MIDL_IBindStatusCallback_0002;
enum _TAG_UNNAMED_4;
enum _EVENT_INFORMATION_CLASS;
enum _IO_COMPLETION_INFORMATION_CLASS;
struct _COAUTHINFO;
enum _TAG_UNNAMED_5;
struct DDEADVISE;
struct tagKEYBDINPUT;
struct CComApartment::MessageListHead;
enum tagTYPEFLAGS;
class SafeCExposedDocFile;
struct tagPropsOutInfo;
class ActivationPropertiesOut::OutSerializer;
struct _REPARSE_POINT_INFORMATION;
enum tagREGCLS;
enum tagPKA_FLAGS;
enum tagSYSKIND;
class CBasedBytePtr;
enum _EVENT_TYPE;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
struct IPersistFile;
enum tagSTRUCTURED_QUERY_SINGLE_OPTION;
struct HTASK__;
struct _ATOM_BASIC_INFORMATION;
struct __midl_frag1384_t;
enum tagUSERCLASSTYPE;
struct _MINIDUMP_FUNCTION_TABLE_STREAM;
struct _SYSTEM_LOOKASIDE_INFORMATION;
class Enum;
union _ULARGE_INTEGER;
enum __MIDL_IInternetSecurityManager_0001;
struct tagENTRY;
struct tagDICTIONARY;
enum CALLFRAME_WALK;
struct _KEY_WOW64_FLAGS_INFORMATION;
enum __MIDL_IInternetZoneManager_0001;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct _FILE_ID_FULL_DIR_INFORMATION;
class Interceptor;
struct _remoteMETAFILEPICT;
class CDfName;
class PTSetMember;
enum tagXMLEMEM_TYPE;
struct tagIncomingCallData;
class CPrivAlloc;
enum tagQUERY_PARSER_MANAGER_OPTION;
struct tagMETARECORD;
class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>;
struct _CERT_STORE_PROV_FIND_INFO;
struct AsyncIAdviseSink2;
enum _SUITE_TYPE;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
struct IEnumString;
enum tagVARKIND;
enum _CM_SHARE_DISPOSITION;
struct _RPC_TRANSFER_SYNTAX;
class XIPersistStorage;
enum tagMKREDUCE;
struct tagMONHSZSTRUCTW;
struct tagORPC_EXTENT_ARRAY;
struct __midl_frag595_t;
enum tagSF_TYPE;
struct _SID_AND_ATTRIBUTES;
struct _TOKEN_GROUPS;
enum tagBINDSPEED;
enum __MIDL_IBindStatusCallback_0003;
struct _HMAC_Info;
struct _PAGEDIR_INFORMATION;
enum _TRANSACTION_STATE;
class CMSFHeaderData;
class CMSFHeader;
enum tagDATADIR;
struct _FILE_MOVE_CLUSTER_INFORMATION;
struct _IMAGE_VXD_HEADER;
enum tagRpcCallClientLocality;
struct LIST_ENTRY32;
struct _KLDR_DATA_TABLE_ENTRY32;
enum tagSTGMOVE;
struct _FILE_DISPOSITION_INFO;
struct IRpcCall;
struct _EVENT_DESCRIPTOR;
enum tagDISCARDCACHE;
enum _TAG_UNNAMED_6;
class CAsyncStateMachine;
enum tagLocalServerType;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
struct _EXCEPTION_RECORD;
struct _EXCEPTION_DEBUG_INFO;
struct _KSYSTEM_TIME;
enum RpcProxyPerfCounters;
enum _WATCHDOG_INFORMATION_CLASS;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
struct __MIDL_ILocalObjectExporter_0003;
enum tagVARFLAGS;
enum _SYSDBG_COMMAND;
struct _PROCESS_EXCEPTION_PORT;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
class CClassCache::CDllClassEntry;
enum _tagPSUACTION;
enum _KEY_INFORMATION_CLASS;
struct tagKERNINGPAIR;
enum tagBINDSTRING;
struct tagWTSSESSION_NOTIFICATION;
struct _FILESYSTEM_STATISTICS;
enum tagURLTEMPLATE;
struct _FILE_NAME_INFORMATION;
enum tagDIMENSION;
enum tagEXTCONN;
struct tagHW_PROFILE_INFOW;
struct IXMLDOMCharacterData;
struct _RTL_BARRIER;
enum _PROCESS_TLS_INFORMATION_TYPE;
class CSafeBYTEArray;
enum COleCache::Locate::__l2::tagFormatType;
struct _RPC_VERSION;
struct _RPC_SYNTAX_IDENTIFIER;
struct _RPC_CLIENT_INTERFACE;
class CCtxChnl;
enum _TABLE_SEARCH_RESULT;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_LINKS_INFORMATION;
class CCtxComChnl;
enum __MIDL_IBindStatusCallback_0004;
struct SIterBuffer;
struct SCopyVars;
enum _TAG_UNNAMED_7;
class CBasedPubStreamPtr;
class CPubMappedStream;
struct IUnknown;
struct IStackWalker;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
enum _FP__IEEE_ROUNDING_MODE;
class SafeBytePtr;
struct IXMLDocument;
struct IWinInetHttpInfo;
struct tagMINIMIZEDMETRICS;
enum _PRIORITY_HINT;
enum tagCONTEXTEVENT;
struct _RTL_RELATIVE_NAME_U;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
enum TERMINATE_DOCUMENT;
struct tagFORMATETC32;
struct FORMATETCDATA32;
struct _NETRESOURCEA;
struct _CRYPT_DECRYPT_MESSAGE_PARA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct _IMAGE_OS2_HEADER;
enum _SEMAPHORE_INFORMATION_CLASS;
struct _ACTIVATION_CONTEXT;
struct AsyncIUnknown;
enum _THREADINFOCLASS;
enum _TAG_UNNAMED_8;
struct _PROCESS_PRIORITY_CLASS;
enum QUERY_USER_NOTIFICATION_STATE;
enum POWER_STATE_HANDLER_TYPE;
struct _CONNECTDLGSTRUCTW;
struct tagTEXTMETRICW;
enum FORMATTAG;
class CData;
class CFormat;
class CPres;
enum COleCache::GetExtent::__l2::tagCacheType;
union _MCI_STATS;
struct tagSWindowData;
struct _SYSTEM_FLAGS_INFORMATION;
struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT;
enum _MEMORY_INFORMATION_CLASS;
struct _SYSTEM_THREAD_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
struct __midl_frag1799_t;
enum _OBJECT_INFORMATION_CLASS;
enum CDragDefaultCursors::SCROLL_TYPE;
struct _EISA_IRQ_DESCRIPTOR;
enum _tagQUERYOPTION;
enum _LINK_TRACKING_INFORMATION_TYPE;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct IOleInPlaceUIWindow;
enum OLE_NOTIFICATION;
struct tagOLEPRESSTMHDR;
struct _NDR64_EXPR_VAR;
struct __midl_frag95_t;
enum _FINDEX_SEARCH_OPS;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct _PS_ATTRIBUTE;
struct _PS_ATTRIBUTE_LIST;
enum _operators;
enum _KTMOBJECT_TYPE;
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE;
struct _M128A;
struct _XMM_SAVE_AREA32;
struct _CONTEXT;
struct _LAST_EXCEPTION_LOG;
enum _TAG_UNNAMED_9;
struct _TOKEN_MANDATORY_LABEL;
struct LEGACY_FRAME;
struct _CERT_PUBLIC_KEY_INFO;
struct _CERT_REQUEST_INFO;
struct INdrVersion;
struct _LOAD_DLL_DEBUG_INFO;
struct _RTL_SRWLOCK;
class CCache;
enum __MIDL_ICodeInstall_0001;
struct _tagDATAINFO;
class CAptRpcChnl;
enum _DMA_SPEED;
struct IInterfaceRelated;
enum _INSTALLSPECTYPE;
enum tagPreferredServerBitness;
struct IOleInPlaceObject;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_OPTIONAL_HEADER;
struct _IMAGE_NT_HEADERS;
struct tagCOMPAREITEMSTRUCT;
enum _PS_STD_HANDLE_STATE;
enum tagGETCLSIDFLAGS;
struct _FIXED;
struct _MAT2;
enum _KEY_VALUE_INFORMATION_CLASS;
struct tagNEWTEXTMETRICW;
struct tagFONTSIGNATURE;
struct tagNEWTEXTMETRICEXW;
struct IXMLDOMEntityReference;
enum __MIDL_IBindStatusCallback_0005;
struct IUnkInner;
enum VSAStandardParameter;
enum __MIDL_IBindStatusCallback_0006;
struct _POINTL;
struct tagXFORM;
struct tagEMRPLGBLT;
struct ICallFactory;
class CBasedDlElementPtr;
class CClassCache::CFinishComposite;
enum _SHRINK_VOLUME_REQUEST_TYPES;
enum _SecurityOptionsDisposition;
struct _PROCESS_DEVICEMAP_INFORMATION;
class CVerifierStackData;
struct _CERT_ISSUER_SERIAL_NUMBER;
struct _CERT_ID;
struct _CMSG_KEY_TRANS_RECIPIENT_INFO;
struct SERVICE_STATUS_HANDLE__;
struct tagTYPEDESC;
enum _PROCESSOR_CACHE_TYPE;
struct _SYSTEM_INTERRUPT_INFORMATION;
enum _WOW64_FUNCTION_CODE64;
struct tagSOLE_AUTHENTICATION_SERVICE;
struct tagContextStackNode;
struct _BCRYPT_OID;
enum tagCLIPWINDOWFLAGS;
struct HICON__;
struct _NDR64_CONF_ARRAY_HEADER_FORMAT;
enum tagOLERENDER;
struct IRunningObjectTable;
struct tagCustomHeader;
enum _SYSTEM_INFORMATION_CLASS;
enum VSAParameterType;
struct _NDR64_POINTER_FORMAT;
struct __midl_frag1615_t;
struct _CERT_REVOCATION_PARA;
union _MCI_ADDR;
struct IDataObject;
enum tagSTREAM_SEEK;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct _NDR64_STRUCTURE_FLAGS;
struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT;
struct _SERVICE_STATUS_PROCESS;
struct _SERVICE_NOTIFY_1;
struct tagSTICKYKEYS;
enum SYSNLS_FUNCTION;
struct IInitializeSpy;
enum tagORT;
struct _MIDL_TYPE_PICKLING_INFO;
enum tagDCOM_CALL_STATE;
struct _HOTPATCH_HOOK_DESCRIPTOR;
struct tagCustomPrivScmInfo;
enum _TOKEN_TYPE;
struct _irot_MIDL_PROC_FORMAT_STRING;
enum __MIDL_IDLLHost_0001;
union tagCY;
struct tagDEC;
struct tagVARIANT;
struct tagPARAMDESCEX;
struct IDebugStream;
struct __midl_frag94_t;
enum tagTYSPEC;
struct _MINIDUMP_SYSTEM_INFO;
struct IOleLink;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
enum _TAG_UNNAMED_10;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
struct _SYSTEM_POOL_ENTRY;
enum _WATCHDOG_HANDLER_ACTION;
enum _SHUTDOWN_ACTION;
struct IOleItemContainer;
struct _CERT_POLICY_INFO;
struct _RTL_GENERIC_TABLE;
enum MIDL_ES_HANDLE_STYLE;
struct MarshallingChannel;
enum tagFUNCKIND;
enum tagINVOKEKIND;
enum tagCALLCONV;
struct tagIDLDESC;
struct tagPARAMDESC;
struct tagELEMDESC;
struct tagFUNCDESC;
struct _BCRYPT_DH_PARAMETER_HEADER;
struct _FP_32;
struct _FP_64;
struct _FP_80;
struct _FP_128;
class ClassRegistration;
struct ICatalogFileInfo;
enum tagCALLSTATE;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W;
enum SYSTEM_POWER_CONDITION;
struct IXMLDOMElement;
enum _FSINFOCLASS;
struct _MINIDUMP_DIRECTORY;
enum tagCALLTYPE;
struct tagSIZE;
struct _RTL_HANDLE_TABLE;
enum _JOURNAL_INFORMATION_CLASS;
enum tagCOWAIT_FLAGS;
enum IMPORT_OBJECT_NAME_TYPE;
class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64>;
struct __midl_frag1658_t;
enum _RPC_ASYNC_EVENT;
struct _PO_TRANSITION_VETO_REASON;
struct IPartitionLookup;
enum XLAT_SIDE;
enum IMAGE_AUX_SYMBOL_TYPE;
struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP;
struct IFillInfo;
enum _SYSTEM_MEMORY_LIST_COMMAND;
struct DELETE_USN_JOURNAL_DATA;
class CSCInnerUnknown;
class CSynchronizeContainer;
enum tagCPFLAGS;
enum _NT_PRODUCT_TYPE;
struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION;
enum __MIDL_IBindStatusCallback_0001;
enum _SYSTEM_VA_TYPE;
enum _tagPARSEACTION;
class CObjServer;
struct IEnumSTATPROPSTGVtbl;
enum PO_FIXED_WAKE_SOURCE_TYPE;
struct tagEMRSETVIEWPORTORGEX;
union _RTL_ELEVATION_FLAGS;
struct CStdWrapper::Reactivate::__l3::tagServerRefs;
enum SHSTOCKICONID;
enum tagExtentMode;
struct HRGN__;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct _SSerializationHeader;
enum __MIDL___MIDL_itf_activate_0000_0010_0002;
struct tagQACONTAINER;
struct _SI_COPYFILE;
enum _SC_STATUS_TYPE;
class CMutexSem2;
class CpUnkList;
struct _LUNICODE_STRING;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;
enum OLE_TRISTATE;
struct _OCSP_CERT_ID;
struct _SYSTEMTIME;
struct _TIME_DYNAMIC_ZONE_INFORMATION;
class CBlockPreHeader;
class CSurrogateActivator;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
enum _FP_IEEE_OPERATION_CODE;
struct BSMINFO;
class CBasedRevertablePtr;
class CChildInstanceList;
struct IExceptionNotification;
enum tagREGKIND;
struct _FILE_FS_LABEL_INFORMATION;
struct tagScmRequestInfoData;
class ScmRequestInfo;
enum tagCOINIT;
enum _MEMORY_WORKING_SET_EX_LOCATION;
struct tagStorageLayout;
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
enum tagCTRLINFO;
class CSafeMultiHeap;
struct _SMALL_RECT;
class CBasedPubDocFilePtr;
struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>;
struct tagPROPMARSHALHEADER;
enum _TIMER_TYPE;
enum _TRANSACTION_INFORMATION_CLASS;
struct IPicture2;
struct _userHMETAFILEPICT;
enum tagOLEDCFLAGS;
enum tagURLZONE;
struct tagBIND_OPTS2;
struct _PROCESS_BASIC_INFORMATION64;
enum _UNWIND_OP_CODES;
struct MD_INTERFACE_CACHE;
enum tagPOINTERINACTIVE;
struct _CERT_ALT_NAME_INFO;
struct _wireBRECORD;
enum ReplacesCorHdrNumericDefines;
class CStmBufWrite;
enum _TP_LOG_LEVEL;
enum tagQACONTAINERFLAGS;
struct _NDR64_ARRAY_ELEMENT_INFO;
struct __midl_frag1655_t;
enum _CALLSOURCE;
struct IClassFactory2;
enum _IRQ_DEVICE_POLICY;
enum _IRQ_PRIORITY;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
struct _COORD;
struct _CONSOLE_SELECTION_INFO;
enum _USER_MARSHAL_CB_TYPE;
struct _CERT_DSS_PARAMETERS;
enum tagPROPBAG2_TYPE;
struct _PEB;
struct _REMOTE_NAME_INFOW;
enum _FINDEX_INFO_LEVELS;
enum _HARDERROR_RESPONSE;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct IServicesSink2;
enum DECOLOR;
class CBasedSStreamPtr;
class CPubStream;
enum tagMSHLFLAGS;
class CStmBufRead;
enum RTL_BSD_ITEM_TYPE;
class CMapKeyToValue;
class CMapUintPtr;
struct ICall;
struct _PO_WAKE_SOURCE_INFO;
enum _HEAP_INFORMATION_CLASS;
struct SPendingCall;
struct tagRPCOLEMESSAGE;
class CChannelObject;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
enum _RTL_RXACT_OPERATION;
struct _RTL_RESOURCE;
struct IClassClassicInfo;
enum LATENCY_TIME;
struct _TIME_ZONE_INFORMATION;
enum tagDVASPECT2;
struct _IMAGE_THUNK_DATA64;
enum VERIFIER_MODE;
struct IInternetProtocolInfo;
struct __midl_frag182_t;
enum WHICHTIME;
enum tagOLECONTF;
struct ITypeChangeEvents;
struct tagRemHBITMAP;
enum _IDL_CS_CONVERT;
struct value_entA;
struct _NDR64_SIMPLE_MEMBER_FORMAT;
struct _NDR64_MEMPAD_FORMAT;
struct _NDR64_EMBEDDED_COMPLEX_FORMAT;
enum tagEOLE_AUTHENTICATION_CAPABILITIES;
struct _TP_DIRECT;
enum _ENLISTMENT_INFORMATION_CLASS;
struct IComCatalog2;
class CObjrefMonikerFactory;
enum UlIsEntry;
class CSharedMemoryBlock;
struct _NT_TIB;
struct _GDI_TEB_BATCH;
struct _TEB;
enum tagResourceGateId;
struct _SYSTEM_CALL_COUNT_INFORMATION;
enum VARENUM;
struct IPictureDisp;
struct tagEMRSELECTCLIPPATH;
enum tagACTIVATEFLAGS;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
enum _KPROFILE_SOURCE;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
class CDefLink::CAdvSinkImpl;
enum _CM_SERVICE_LOAD_TYPE;
struct tagSTATSTG;
class CEnumSTATPROPSETSTG;
struct IOpaqueDataInfo;
enum tagPENDINGTYPE;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
union _LDR_DLL_NOTIFICATION_DATA;
struct IAdviseSink;
struct IInternetProtocol;
enum tagSTGTY;
enum tagCOMCALLTYPE;
struct IInternetSecurityManager;
struct _JIT_DEBUG_INFO;
enum tagOLEMISC;
enum _URLZONEREG;
struct IProcessServerInfo;
struct HMONITOR__;
enum <vc_attributes>::pointer_defaultAttribute::type_e;
enum <vc_attributes>::threadingAttribute::threading_e;
class CSimpStorageOpen;
enum <vc_attributes>::event_receiverAttribute::type_e;
class TStackBuffer<unsigned short *,64>;
struct IResourceGates;
struct _MUICCENTRY;
struct _PSINJECTDATA;
enum <vc_attributes>::aggregatableAttribute::type_e;
enum <vc_attributes>::event_sourceAttribute::optimize_e;
struct _DROPFILES;
struct _WIN32_STREAM_ID;
enum <vc_attributes>::event_sourceAttribute::type_e;
enum <vc_attributes>::moduleAttribute::type_e;
class CBasedILockBytesPtrPtr;
struct tagRECT;
struct tagTITLEBARINFOEX;
struct tagOutgoingCallData;
struct _SYSTEM_FILECACHE_INFORMATION;
enum <vc_attributes>::helper_attributes::usageAttribute::usage_e;
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA;
struct _TOKEN_ORIGIN;
enum <vc_attributes>::helper_attributes::v1_alttypeAttribute::type_e;
struct _WIN_CERTIFICATE;
enum tagOLEGETMONIKER;
struct HCONV__;
struct tagMSGBOXPARAMSW;
enum __MIDL___MIDL_itf_activate_0000_0010_0003;
enum __MIDL___MIDL_itf_activate_0000_0010_0001;
struct tagTYPEATTR;
struct _RGNDATAHEADER;
struct _RGNDATA;
enum _RPC_NOTIFICATIONS;
struct _SECURITY_DESCRIPTOR_RELATIVE;
class SafeCExposedIterator;
enum tagACTIVATION_FLAGS;
class CDirVector;
enum _MANDATORY_LEVEL;
struct __midl_frag931_t;
enum tagFUNCFLAGS;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _CRT_CRITICAL_SECTION;
class ios;
enum tagEventLogModes;
struct tagCLEANLOCALSTORAGE;
struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT;
struct __midl_frag1011_t;
struct _MINIDUMP_EXCEPTION_INFORMATION;
enum tagOLECLOSE;
struct _MEMORY_FRAME_INFORMATION;
struct _FILEOFFSET_INFORMATION;
struct _UNIQUE_PROCESS_INFORMATION;
struct _MMPFN_IDENTITY;
struct _FLAGGED_WORD_BLOB;
class CBindStatusCallback;
enum ios::io_state;
class DeserializeHelper::BstrDestroyer;
enum _PROC_THREAD_ATTRIBUTE_NUM;
struct tagEMRCREATEMONOBRUSH;
enum POWER_PLATFORM_ROLE;
class CStatData;
struct CArray<CStatData>::ArrayNode;
struct tagHIGHCONTRASTW;
enum CPropertyStorage::EInitializePropertyStream;
struct _wireSAFEARR_DISPATCH;
struct _SOURCEFILEW;
enum _COMPUTER_NAME_FORMAT;
class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator;
enum tagSTGC;
enum _PROXY_CLASS;
struct _SECURITY_TOKEN_PROXY_DATA;
enum SEMRESULT;
enum _TOKEN_ELEVATION_TYPE;
struct _SHFILEOPSTRUCTW;
struct _ALPC_CONTEXT_ATTR;
struct Windows::Rtl::IRtlFormattableInterface;
enum tagOLEUPDATE;
struct _MINIDUMP_USER_STREAM;
enum _TAG_UNNAMED_11;
struct _wireVARIANT;
struct _CONSOLE_FONT_INFO;
struct _RPC_BINDING_HANDLE_SECURITY_V1_A;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
struct _CMSG_RC4_AUX_INFO;
enum _RPC_NOTIFICATION_TYPES;
struct _TOKEN_PRIMARY_GROUP;
enum tagRUNDOWN_RESULT;
class CMachineNamesHelper;
enum tagCHANGEKIND;
class CBasedDirectStreamPtr;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
enum _DEP_SYSTEM_POLICY_TYPE;
enum ESignalState;
struct _SHORT_SIZEDARR;
struct CDdeObject::CUnknownImpl;
struct CDdeObject::COleObjectImpl;
struct CDdeObject::CPersistStgImpl;
struct CDdeObject::COleItemContainerImpl;
class CDdeObject;
struct _MINIDUMP_MEMORY64_LIST;
struct AsyncIAdviseSink2Vtbl;
enum _CM_SERVICE_NODE_TYPE;
struct tagAXESLISTW;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
struct tagPAINTSTRUCT;
enum MACPICTFAILUREREASONS;
enum _GET_FILEEX_INFO_LEVELS;
class CDirEntry;
enum _TIMER_INFORMATION_CLASS;
enum CPageAllocator::eFlags;
struct _wfinddata64_t;
struct tagUSEROBJECTFLAGS;
struct tagACCESSTIMEOUT;
enum _REG_ACTION;
struct _CTL_ANY_SUBJECT_INFO;
enum _FILE_INFO_BY_HANDLE_CLASS;
struct CSimpStream;
enum EHandleState;
union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005;
struct __MIDL___MIDL_itf_wtypes_0000_0001_0001;
struct IBindProtocol;
struct _EVENT_DATA_DESCRIPTOR;
enum _PLUGPLAY_EVENT_CATEGORY;
class CSimpEnumSTATSTG;
struct tagEMREXTESCAPE;
enum _IO_PRIORITY_HINT;
enum tagSMFLAGS;
struct _CRYPT_AES_128_KEY_STATE;
struct IChannelHook;
class iostream;
enum _PNP_QUERY_RELATION;
enum tagCoModuleType;
struct tagLAYERPLANEDESCRIPTOR;
enum tagCMLFLAGS;
struct __midl_frag1377_t;
struct _FILE_MAILSLOT_PEEK_BUFFER;
struct tagEMREXCLUDECLIPRECT;
struct _SERVICE_FAILURE_ACTIONSW;
class CMemBytes;
enum _SID_NAME_USE;
enum _DMA_WIDTH;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
struct DDEDATA;
enum EChannelState;
struct _TIME_FIELDS;
class COleCache::CCacheViewImpl;
struct IMarshalEnvoy;
class CContextSwitcher;
struct _MINIDUMP_UNLOADED_MODULE_LIST;
enum tagShutdownType;
class BUCL::CMultiplier<unsigned __int64,BUCL::Rtl::CCallDisposition>;
enum __MIDL_IActivatorCustomMarshal_0001;
enum _FP__IEEE_FORMAT;
enum __MIDL_IInternetSecurityManager_0003;
class CLocalMachineNames;
struct _SYSTEM_PREFETCH_OPTIONS;
struct _CRL_DIST_POINTS_INFO;
struct tagEMREOF;
class CArray<CCacheNode>;
enum WPP_CTL_NAMES;
enum _SC_ACTION_TYPE;
struct IShellLinkW;
enum _SC_ENUM_TYPE;
class CCacheNode;
struct CArray<CCacheNode>::ArrayNode;
struct _ENLISTMENT_BASIC_INFORMATION;
enum tagIPIDFLAGS;
enum tagMKSYS;
struct __midl_frag1674_t;
enum tagMSHCTX;
struct _MINIDUMP_MEMORY_INFO;
enum _TAG_UNNAMED_12;
struct HMENU__;
struct _SC_ACTION;
class CDefObject::CPrivUnknown;
class CDefObject::CAdvSinkImpl;
class CDefObject;
enum _PRT;
struct _WIN_TRUST_SUBJECT_FILE;
enum _HARDERROR_RESPONSE_OPTION;
enum __MIDL_IMonikerProp_0001;
struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct _BCRYPT_INTERFACE_VERSION;
struct _BCRYPT_SIGNATURE_FUNCTION_TABLE;
struct _CLIENT_ID64;
struct _SECTION_IMAGE_INFORMATION64;
struct _RTL_USER_PROCESS_INFORMATION64;
enum tagOLETLSFLAGS;
enum _TAG_UNNAMED_13;
struct _userSTGMEDIUM;
struct _userFLAG_STGMEDIUM;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
enum POWER_INFORMATION_LEVEL;
struct _TP_TIMER;
class Windows::ErrorHandling::Rtl::CBaseRaiseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame,Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame> >;
enum __MIDL_IInternetZoneManager_0002;
class CDirSect;
struct _DRAGINFOW;
enum _WPP_FLAG_LEN_ENUM;
enum _PORT_INFORMATION_CLASS;
union _POWER_STATE;
struct IActivationStageInfo;
class Windows::ErrorHandling::CBaseFrame;
enum _ALPC_PORT_INFORMATION_CLASS;
struct _KDHELP64;
enum PS_CREATE_STATE;
union _SLIST_HEADER;
enum __MIDL_IUri_0002;
struct _CRYPT_RC4_KEY_STATE;
class CClassCache::CpUnkMoniker;
enum tagThreadingModel;
class CBasedPagedVectorPtr;
enum tagProcessType;
struct _NDR64_STRING_FLAGS;
struct NDR64_STRING_HEADER_FORMAT;
struct _NDR64_CONFORMANT_STRING_FORMAT;
enum tagOLELINKBIND;
class CBasedFatPtr;
struct _CM_MCA_POS_DATA;
enum _WORKERFACTORYINFOCLASS;
class BUCL::Rtl::CCallDisposition;
enum _TRANSACTION_OUTCOME;
struct _USER_MARSHAL_ROUTINE_QUADRUPLE;
struct tagCREATESTRUCTW;
struct _BCRYPT_HASH_FUNCTION_TABLE;
struct _IMAGE_RELOCATION;
enum _tagOIBDG_FLAGS;
enum COMPARTMENT_ID;
struct tagPOINTS;
struct ILayoutStorage;
enum tagRpcLocalAddressFormat;
enum POWER_ACTION;
struct SSegment;
enum _DPFLTR_TYPE;
struct _CRYPT_KEY_PROV_INFO;
struct _CERT_CHAIN;
enum tagBIND_FLAGS;
struct _STRING64;
struct IEnumGUID;
struct _CMSG_ENVELOPED_ENCODE_INFO;
enum SYSGEOCLASS;
struct tagEMRTEXT;
struct tagEMREXTTEXTOUTA;
struct IActivationPropertiesOut;
class CBasedMStreamPtr;
enum _POWER_STATE_TYPE;
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct tagACTCTX_SECTION_KEYED_DATA;
struct MarshalParams;
struct tagGIPEntry;
class CGIPTable;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
class CBasedMSFPagePtr;
class CMSFPage;
struct tagOBJREFDATA;
struct _TP_WAIT;
enum _TP_TRACE_TYPE;
struct OLEAUTOMATION_FUNCTIONS;
enum _SECTION_INFORMATION_CLASS;
struct _PMD;
struct _s__CatchableType;
struct tagSPSChain;
struct tagSPSCache;
enum RPC_ADDRESS_CHANGE_TYPE;
struct _NDR64_POINTER_REPEAT_FLAGS;
struct _NDR64_REPEAT_FORMAT;
struct __midl_frag9_t;
enum _CM_ERROR_CONTROL_TYPE;
struct _RTL_HEAP_PARAMETERS;
enum tagBINDSTATUS;
struct __midl_frag1722_t;
struct IServerSecurity;
struct _DMA_CONFIGURATION_BYTE0;
struct tagElement;
enum tagLOCKTYPE;
enum MAPPED_STREAM_OPTS;
class CPropertySetStorage;
enum tagCOMSD;
struct _CERT_CHAIN_POLICY_STATUS;
struct HAS_INTERFACES;
enum PIPE_ATTRIBUTE_TYPE;
struct _CERT_LOGOTYPE_DETAILS;
struct _DISPATCHER_CONTEXT;
struct tagCABSTR;
struct IMarshal;
struct tagCOLORADJUSTMENT;
struct tagEMRSETCOLORADJUSTMENT;
struct _acpickl_MIDL_PROC_FORMAT_STRING;
enum _APTTYPE;
struct _MINIDUMP_MEMORY_INFO_LIST;
enum _NORM_FORM;
enum _tagINTERNETFEATURELIST;
enum _THDTYPE;
enum ASSOCCLASS;
struct _LDR_IMPORT_CALLBACK_INFO;
enum _STREAM_INFO_LEVELS;
class IMessageParam;
struct _FP_IEEE_VALUE;
struct IComClassInfo;
enum _ATOM_INFORMATION_CLASS;
enum tagADVF;
class CBasedMSFPagePtrPtr;
struct IWrappedProtocol;
enum _WAIT_TYPE;
enum __MIDL___MIDL_itf_objidl_0000_0047_0001;
struct _MEMORY_WORKING_SET_BLOCK;
struct <vc_attributes>::satypeAttribute;
struct IComCatalogInternal;
class CAntiMoniker;
enum tagTYMED;
struct IInstanceInfo;
struct _SERVICE_NOTIFY_2W;
enum _RPC_HTTP_REDIRECTOR_STAGE;
struct IAggregator;
class Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
enum _PS_ATTRIBUTE_NUM;
struct tagCOMVERSION;
class OXIDEntry;
enum __MIDL___MIDL_itf_objidl_0000_0046_0001;
struct _SYSTEM_POOLTAG;
class CSafeMarshaledStg;
class CClassCache::CBaseClassEntry;
enum WELL_KNOWN_SID_TYPE;
struct tagSTYLEBUFW;
struct IDropSource;
class CSSL;
struct _CERT_TRUST_LIST_INFO;
struct IDropTarget;
struct _EXFAT_STATISTICS;
class SafeNtHandle;
struct tagMDINEXTMENU;
enum __MIDL___MIDL_itf_objidl_0000_0046_0002;
struct SYSTEM_BATTERY_STATE;
enum ACTCTX_REQUESTED_RUN_LEVEL;
struct tagUPDATELAYEREDWINDOWINFO;
struct _CRYPT_PKCS8_IMPORT_PARAMS;
struct <vc_attributes>::propputrefAttribute;
enum _ACL_INFORMATION_CLASS;
enum tagDOMNodeType;
struct _CERT_LOGOTYPE_INFO;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct tagLASTINPUTINFO;
enum _INTERFACE_TYPE;
struct __midl_frag1186_t;
class SafeIStream;
struct REF_COUNTED_STRUCT;
enum _FILE_ID_TYPE;
struct _CERT_SIGNED_CONTENT_INFO;
struct tagTOGGLEKEYS;
union tagBINDPTR;
struct HKEY__;
class CPaccelEnum;
enum _JOBOBJECTINFOCLASS;
enum _PROCESSINFOCLASS;
struct ITypeComp;
class CClassCache::IMiniMoniker;
struct _TOKEN_SOURCE;
struct _CMSG_SIGNER_ENCODE_INFO;
struct _LDOUBLE;
enum tagPENDINGMSG;
struct _XMIT_ROUTINE_QUINTUPLE;
enum SYSGEOTYPE;
struct _SHELLEXECUTEINFOA;
struct _SYSTEM_HOTPATCH_CODE_INFORMATION;
union _UNWIND_CODE;
enum IMPORT_OBJECT_TYPE;
class CBasedSeekPointerPtr;
enum _TAPE_DRIVE_PROBLEM_TYPE;
struct IAsyncManager;
struct _SCHANNEL_ALG;
enum tagAspectInfoFlag;
enum tagPROPPAGESTATUS;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
class CClass;
class CGenericObject;
struct _SERVICE_FAILURE_ACTIONS_FLAG;
class CComProcessInfo;
enum tagHITRESULT;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
class CCliRotHintTable;
enum tagREADYSTATE;
struct _CTL_USAGE;
struct _CTL_FIND_USAGE_PARA;
struct _currencyfmtW;
struct IXMLDocument2;
enum tagGUIDKIND;
struct <vc_attributes>::atl::synchronizeAttribute;
enum tagITEM_CHANGE_TYPE;
enum tagPictureAttributes;
struct tagBinaryParam;
class CArrayFValue;
class CRunningObjectTable;
struct _LDR_DATA_TABLE_ENTRY;
enum tagVIEWSTATUS;
enum tagUASFLAGS;
struct _FILE_FS_VOLUME_INFORMATION;
enum tagXFORMCOORDS;
class CDWORDHashTable;
class CMultiGUIDHashTable;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct _NDR64_EXPR_OPERATOR;
struct __midl_frag1723_t;
struct _RPC_MESSAGE;
struct _SYSTEM_VA_LIST_INFORMATION;
struct IPSFactoryBufferVtbl;
enum DIRENTRYOP;
struct IInitActivationPropertiesIn;
struct _PORT_DATA_ENTRY;
struct tagPANOSE;
struct tagEXTLOGFONTW;
struct tagEMREXTCREATEFONTINDIRECTW;
struct _CERT_TEMPLATE_EXT;
enum CDFB_CLASSTYPE;
struct _EXIT_PROCESS_DEBUG_INFO;
struct tagTPMPARAMS;
enum _FAIL_BEHAVIOR;
struct IContinue;
enum _IMAGEHLP_SYMBOL_TYPE_INFO;
enum _MINIDUMP_CALLBACK_TYPE;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
class CDfMutex;
class CPerContext;
struct tagIPIDEntry;
enum _TAG_UNNAMED_14;
struct tagRID_DEVICE_INFO_KEYBOARD;
enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;
struct IPropertyBagEx;
struct tagMSG;
enum _TAG_UNNAMED_15;
enum SYM_TYPE;
struct _CERT_BIOMETRIC_EXT_INFO;
enum _MINIDUMP_STREAM_TYPE;
class CSTInnerUnknown;
class CStdEvent;
enum _MODULE_WRITE_FLAGS;
struct __midl_frag606_t;
struct tagORPC_EXTENT;
enum ADDRESS_MODE;
struct NUMPARSE;
enum _IMAGEHLP_STATUS_REASON;
class CSafeAccess;
struct _RTL_CRITICAL_SECTION32;
enum _TAG_UNNAMED_16;
struct _CM_PNP_BIOS_DEVICE_NODE;
class CNtfsEnumSTATSTG;
enum _MINIDUMP_TYPE;
enum _THREAD_WRITE_FLAGS;
struct _CERT_STORE_PROV_INFO;
struct tagRemHPALETTE;
enum _MINIDUMP_SECONDARY_FLAGS;
class CBasedGlobalContextPtr;
enum tagPATCHOP;
enum SYNCMGR_PROGRESS_STATUS;
struct __CRT_LIST_ENTRY;
enum tagLOADSTATE;
enum _PROPOP;
struct _CRYPT_ECC_CMS_SHARED_INFO;
struct IXMLDOMNodeList;
enum _TAG_UNNAMED_17;
enum tagCALLCATEGORY;
enum SEMSTATE;
struct tagOXID_INFO;
struct _RPC_BINDING_HANDLE_SECURITY_V1_W;
struct tagRIFEntry;
enum _RTL_VERIFIER_INFORMATION_CLASS;
class CSurrogatedObjectList;
enum tagEventLogSD;
enum CreateStackTraceFlags;
struct __midl_frag1622_t;
struct CFileStream;
struct IComObjIdentity;
class CClientSecurity;
enum tagLOCALFLAG;
enum __MIDL___MIDL_itf_privact_0000_0009_0001;
struct tagEMRSETWORLDTRANSFORM;
enum ACTIVATION_PROPERTIES::eFlags;
struct IEnumSTATPROPBAG;
struct _CSTRING;
struct tagCBT_CREATEWNDW;
struct _PRE_APP_COMPAT_INFO;
enum CPropertyStorage::EIsWriteable;
struct ASSOCIATIONELEMENT_;
enum CNFFMappedStream::enumCREATE_NEW_UPDATE_STREAM;
struct tagSTGMEDIUM;
class CEnumGeneric;
enum _TAG_UNNAMED_18;
struct <vc_attributes>::immediatebindAttribute;
struct _FILE_BASIC_INFORMATION;
struct _CERT_EXTENSION;
struct IBuffer;
enum ios::seek_dir;
struct IPSFactoryBuffer;
enum ios::open_mode;
struct _BOOT_ENTRY;
struct _CMSG_KEY_TRANS_ENCRYPT_INFO;
struct _SCHANNEL_CRED;
class CChannelHandle;
enum tagOXIDFLAGS;
struct stat;
struct IComProcessInfo2;
struct WireThatPart1;
struct WireExtentArray;
struct WireExtent;
struct WireThatPart2;
union WireThat;
struct _CERT_RDN;
class IFinish;
enum tagFOCOXID;
enum tagCallType;
struct _HARDERROR_MSG;
enum tagDISCTYPE;
union _PROCESS_MEMORY_ALLOCATION_MODE;
enum tagSTDID_FLAGS;
struct _OBJECT_ATTRIBUTES;
struct <vc_attributes>::threadingAttribute;
enum CChannelObject::eState;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct IContextCallback;
enum _TAG_UNNAMED_19;
struct _KEY_TYPE_SUBTYPE;
struct _FILE_MODE_INFORMATION;
enum WPP_DEFINE_BIT_NAMES;
struct __midl_frag1019_t;
struct tagCTXVERSION;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
class CPolicySet;
enum __MIDL_ICallFrame_0003;
struct _CERT_TRUST_STATUS;
struct _CERT_SIMPLE_CHAIN;
struct _MUILANGINFO;
struct tagSOLE_AUTHENTICATION_INFO;
enum _RUNLEVEL;
class CDbgGuidStr;
struct _devicemodeA;
struct IDebug;
enum __MIDL___MIDL_itf_immact_0000_0002_0002;
struct IUri;
struct _BCRYPT_OAEP_PADDING_INFO;
struct IInterfaceInfo;
struct _IMAGE_TLS_DIRECTORY64;
enum tagORFLAG;
struct _KLDR_DATA_TABLE_ENTRY;
enum tagIDLFLAGS;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_RESOURCE_LIST;
struct _MEMORY_WORKING_SET_INFORMATION;
class CEnumClassesOfCategories;
enum _ACCESS_MODE;
enum _TRUSTEE_TYPE;
struct tagBITMAP;
struct tagDIBSECTION;
class CRtlSmartUcsEncoderTraits<_LUTF8_STRING>;
enum _tagEXPR_TOKEN;
struct IErrorInfo;
struct IComCatalogSettings;
enum _REGQUERY_FLAGS;
struct WINTRUST_FILE_INFO_;
struct <vc_attributes>::licensedAttribute;
enum _TAG_UNNAMED_20;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA;
enum _TAG_UNNAMED_21;
class CDefLink::CPrivUnknown;
class CDefLink;
struct _LONGDOUBLE;
struct PROCESSOR_IDLESTATE_INFO;
enum tagEMFWRITETYPE;
struct _LDR_ENUM_RESOURCE_ENTRY;
class ITrackingMoniker;
struct IInternetProtocolSinkStackable;
struct tagIPIDTmp;
enum __MIDL___MIDL_itf_odeth_0000_0001_0001;
enum Ole32SQMFlags;
enum SQM_TYPE;
struct FRAME_GetIDsOfNames;
struct _FLAG_STGMEDIUM;
enum ClassRegistration::SERVER_TYPE;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct <vc_attributes>::controlAttribute;
enum CALLFRAME_NULL;
enum tagDLFlags;
enum OfflineFolderStatus;
struct HMETAFILE__;
struct _VM_COUNTERS;
enum tagCONDITION_OPERATION;
enum tagSTRUCTURED_QUERY_MULTIOPTION;
struct _FOCUS_EVENT_RECORD;
struct IDisconnectSink;
enum tagSTRUCTURED_QUERY_PARSE_ERROR;
struct tagMETAFILEPICT;
struct tagOLEMENUITEM;
enum tagINTERVAL_LIMIT_KIND;
struct tagCOLORCORRECTPALETTE;
struct _CMC_TAGGED_CERT_REQUEST;
enum __MIDL___MIDL_itf_structuredquery_0000_0013_0001;
struct _NTFS_STATISTICS;
struct _SECTION_IMAGE_INFORMATION32;
enum _SPACTION;
enum _SPTEXT;
struct KEY_PID_ARRAY;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
enum tagBANDSITECID;
struct IMallocSpy;
enum tagMENUPOPUPSELECT;
struct IUserTokenWithImpersonate;
class HashVoidPtr;
enum tagFILE_USAGE_TYPE;
struct HWINSTA__;
enum tagASSOCIATIONLEVEL;
struct READ_USN_JOURNAL_DATA;
enum tagASSOCIATIONTYPE;
enum tagKF_CATEGORY;
struct tagRPC_ERROR_ENUM_HANDLE;
struct _IMAGE_LINENUMBER;
enum tagFFFP_MODE;
enum tagMARKUPSIZE;
struct tagDCOM_ENDPOINT;
struct tagMULTIKEYHELPA;
class CComSxSCatalog;
enum tagMARKUPLINKTEXT;
enum tagMARKUPMESSAGE;
class CClientCallMgr::CPrivUnknown;
enum CFileMoniker::olever;
struct NCryptKeyName;
struct IGetCatalogObject;
enum CClassCache::eFlags;
enum CClassCache::CClassEntry::eGUIDIndex;
struct SPointerHashNode;
class CStdIdentity::CInternalUnk;
enum CClassCache::CClassEntry::eFlags;
enum CClassCache::CLSvrClassEntry::eFlags;
struct _RPC_SECURITY_QOS_V4_W;
class CRpcChannelBuffer::CServerCallMgr;
enum CClassCache::CCEHashTable::eFlags;
struct _CERT_CONTEXT;
class CAptCallCtrl;
struct SMultiGUIDKey;
enum DLL_INSTANTIATION_PROPERTIES::eFlags;
enum CClassCache::CDllPathEntry::eFlags;
struct IContinueVtbl;
enum tagHOSTDLLFLAGS;
enum NCIFLAGS;
class GenericStream;
struct ServerContextWorkData;
struct IPolicyAsync;
enum FreeResourcesFlags;
struct _SHNAMEMAPPINGA;
struct _PROCESS_HANDLE_TRACING_ENABLE;
class CListHeader;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
struct tagNCCALCSIZE_PARAMS;
enum FormatMatchFlag;
union _RTL_RUN_ONCE;
struct _SHITEMID;
struct _PROCESSOR_IDLE_STATE;
class CFatVector;
class CDIFat;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
struct IMPORT_OBJECT_HEADER;
enum CDragDefaultCursors::CURSOR_ID;
enum _TAG_UNNAMED_22;
struct _TEB_ACTIVE_FRAME_CONTEXT;
struct _CERT_RDN_ATTR;
struct tagEMRSELECTOBJECT;
enum TXTTYPE;
enum DDE_DISPATCH_FUNC;
class CMIPIDHashTable;
enum CHK;
class CClassCache::CDllFnPtrMoniker;
struct _MEMORY_BASIC_INFORMATION64;
class CBasedTSetMemberPtr;
class CTSSet;
enum CNVTYP;
enum _TAG_UNNAMED_23;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;
struct IClientSecurity;
enum _TAG_UNNAMED_24;
enum tagCLIPWNDFLAGS;
struct tagACTCTX_SECTION_KEYED_DATA_2600;
enum tagROIDFLAG;
struct __midl_frag590_t;
struct _CRYPT_PROVIDER_SGNR;
class CDualStringArray;
enum _TAG_UNNAMED_25;
struct _RTL_RXACT_CONTEXT;
struct tagInstantiationInfoData;
struct <vc_attributes>::atl::db_accessorAttribute;
struct _SYSTEM_POWER_STATE_CONTEXT;
enum _SecurityOptionsBitness;
enum WMIDPREQUESTCODE;
struct _OSVERSIONINFOA;
struct AsyncIAdviseSink;
enum eVSAEventFlags;
enum tagDRAGOP;
enum SYNCMGR_CANCEL_REQUEST;
struct ICancelMethodCalls;
class CEnumHolder;
enum PUSHSTATE;
enum MIDL_ES_CODE;
struct USN_JOURNAL_DATA;
struct _wfinddatai64_t;
enum PATH_TYPE;
enum tagPGALLOCATORFLAGS;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct tagPELARRAY;
class CNoEnum;
enum _TAG_UNNAMED_26;
struct ACTIVATION_PROPERTIES;
struct _MINIDUMP_EXCEPTION_INFORMATION64;
struct <vc_attributes>::emitidlAttribute;
enum tagMSIPATCHSTATE;
enum tagSLGP_FLAGS;
class CStaticWrapper;
enum tagCOLUMN_VISIBILITY;
enum ExtentKeys;
struct IClassClassicInfo2;
enum SYNCMGR_HANDLER_TYPE;
enum SYNCMGR_PRESENTER_NEXT_STEP;
struct WINTRUST_SGNR_INFO_;
class CStringHashTable;
class CMIDTable;
enum SYNCMGR_HANDLER_POLICIES;
struct FLASHWINFO;
enum tagPROPCTL_FLAGS;
enum tagPropPageOnApply;
enum tagBPASCODE;
struct __midl_frag610_t;
class CContextPropList;
class CObjectContext;
struct _CONSOLE_FONT_INFOEX;
struct _RPC_SECURITY_QOS_V3_W;
enum __MIDL_IFlyout_0001;
struct <vc_attributes>::helper_attributes::repeatableAttribute;
struct _GRADIENT_RECT;
class CCtxPropHashTable;
enum tagSHELL_BROWSER_FRAME_SIZE_POSITION;
struct _RTL_VERIFIER_PAGEHEAP_INFORMATION;
struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION;
enum _tagSHARE_MODE;
enum tagSCRIPTFLAGS;
struct _STARTUPINFOA;
struct _STARTUPINFOEXA;
enum tagASYNCQUERY_STATUS;
struct <vc_attributes>::helper_attributes::default_valueAttribute;
class PDocFile;
enum SYNCMGR_RESOLUTION_FEEDBACK;
struct IServiceProvider;
struct _TXFS_START_RM_INFORMATION;
struct tagSAmdRegs;
enum SYNCMGR_PRESENTER_CHOICE;
struct _CRYPT_CREDENTIALS;
enum tagGET_PROPERTY_STORE_TYPE;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct tagSAFEARRAY;
struct _RTL_HANDLE_TABLE_ENTRY;
struct __midl_frag761_t;
enum tagPROPCTL_RECT_TYPE;
struct _TXFS_WRITE_BACKUP_INFORMATION;
enum SYNCMGR_UPDATE_REASON;
class CNFFTreeMutex;
enum tagRECYCLEBIN_TYPE;
struct _RTL_PROCESS_LOCK_INFORMATION;
class CSTATPROPBAGArray;
enum SYNCMGR_CONFLICT_ITEM_TYPE;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES;
class CEnumContextProps;
struct IDispatch;
struct IUriBuilder;
enum tagSEARCHTEXTTYPE;
struct _RTL_BUFFER;
struct _RTL_UNICODE_STRING_BUFFER;
enum tagSHELL_SEARCH_BAND_SEARCH_STATE;
struct _RPC_CALL_LOCAL_ADDRESS_V1;
struct ISerializable;
enum tagCCF_FLAGS;
struct BATTERY_REPORTING_SCALE;
struct tagBYVALHDR;
struct IContext;
struct <vc_attributes>::ptrAttribute;
enum tagINSTALLUILEVEL;
enum tagINSTALLMESSAGE;
struct ISynchronizeContainer;
struct <vc_attributes>::hiddenAttribute;
class OpaqueDataInfo;
enum tagMSIINSTALLCONTEXT;
struct RPC_IMPORT_CONTEXT_P;
struct _SERVICE_STATUS;
struct _ENUM_SERVICE_STATUSW;
struct tagCOMPOSITIONFORM;
enum EventPoolEntry::WaitForWriterEvent::__l2::AnyAbsorbtionState;
class CComNoClassInfo;
enum __enative_startup_state;
struct SYSTEM_POWER_CAPABILITIES;
struct _IMAGE_OPTIONAL_HEADER64;
struct SET_POWER_SETTING_VALUE;
struct _CRYPT_PROVUI_FUNCS;
struct tagEMRTRANSPARENTBLT;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
class CEnumCategoriesOfClass;
struct ICreateErrorInfo;
struct _NDR_PROC_CONTEXT;
class CComClassInfo;
struct IHttpSecurity;
struct PPM_IDLE_STATE_ACCOUNTING;
struct WireThisPart1;
struct WireThisPart2;
class CBasedDeltaListPtr;
struct _FILE_BASIC_INFO;
struct _UNIVERSAL_NAME_INFOW;
struct __midl_frag1009_t;
struct _LDR_FAILURE_DATA;
struct _MIDL_SYNTAX_INFO;
struct _PROVDATA_SIP;
struct IMonikerProp;
struct IOleWindow;
struct _FILE_FS_CONTROL_INFORMATION;
class CoAllocator;
struct <vc_attributes>::noncreatableAttribute;
struct _SERVICE_PRESHUTDOWN_INFO;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _X86_CALL_FRAME;
struct _CERT_POLICY_ID;
struct <vc_attributes>::outAttribute;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct _TXFS_GET_METADATA_INFO_OUT;
class CEndpointEntry;
struct _CPTABLEINFO;
struct _NLSTABLEINFO;
class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>;
union _RemotableHandle::__MIDL_IWinTypes_0009;
struct _RemotableHandle;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT;
struct __midl_frag674_t;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct SAccessCache;
struct tagOBJECTDESCRIPTOR;
struct tagEMRPOLYPOLYLINE16;
struct _CM_INT13_DRIVE_PARAMETER;
struct ICreateTypeInfo2;
struct tagCUSTDATA;
class CPointerMoniker;
struct IOleClientSite;
struct _REMSECURITY_ATTRIBUTES;
struct ICacheControl;
struct tagSTYLESTRUCT;
struct IAccessControl;
struct IViewObjectVtbl;
struct _JOBOBJECT_JOBSET_INFORMATION;
struct tagScmReplyInfoData;
class ScmReplyInfo;
class ActivationPropertiesOut;
struct _SYSTEM_PERFORMANCE_INFORMATION;
struct IEnumSTATPROPSETSTG;
struct _ACCESS_ALLOWED_OBJECT_ACE;
struct <vc_attributes>::customAttribute;
struct IAddrTrackingControl;
struct IXMLHttpRequest;
struct tagSTREAM_ACE;
struct <vc_attributes>::requesteditAttribute;
struct IScmRequestInfo;
struct _APP_COMPAT_SHIM_INFO;
struct tagCWPSTRUCT;
struct _IMAGE_THUNK_DATA32;
struct CExposedIterator;
struct _RTL_HEAP_ENTRY;
class Windows::ErrorHandling::Rtl::CBaseNtStatusPointerCarryingFrame<Windows::ErrorHandling::Rtl::CBoolFrame>;
struct _tagSOFTDISTINFO;
struct tagANIMATIONINFO;
struct IInternetZoneManagerEx;
struct _TRANSACTION_PROPERTIES_INFORMATION;
struct _WOW64_FLOATING_SAVE_AREA;
struct _WOW64_CONTEXT;
class CPtrBlock;
class CPtrCache;
struct AsyncIPipeByte;
struct IRunnableObject;
union _INSTALLSPEC;
struct tagRAWMOUSE;
struct tagMENUITEMINFOA;
struct _KCRM_TRANSACTION_BLOB;
struct __midl_frag205_t;
struct __midl_frag470_t;
struct CPlex;
struct _TP_CALLBACK_INSTANCE;
struct CM_Power_Data_s;
struct __midl_frag240_t;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct tagEMRMASKBLT;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct Windows::Rtl::IRtlInterface;
struct _CERT_REVOCATION_CHAIN_PARA;
struct _KUSER_SHARED_DATA;
struct DLGTEMPLATE;
struct _SYSTEM_INFO;
struct tagMONITORINFOEXW;
union _FOUR_PART_VERSION;
struct tagCBTACTIVATESTRUCT;
struct IRootStorage;
struct tagPOINTFX;
struct tagTTPOLYGONHEADER;
struct _RTL_BITMAP_EX;
struct _SHELLEXECUTEINFOW;
struct HWND__;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY;
struct _FILE_RENAME_INFORMATION;
struct _QUOTA_LIMITS;
struct _NETRESOURCEW;
struct tagCREATESTRUCTA;
struct tagRemHGLOBAL;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct IInternetSecurityManagerEx2;
struct _ACCESS_DENIED_OBJECT_ACE;
struct _WPP_TRACE_CONTROL_BLOCK;
struct IEnumVARIANT;
struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION;
struct _DWORD_BLOB;
struct _FILE_STANDARD_INFORMATION;
struct _CM_FLOPPY_DEVICE_DATA;
class XIUnknown;
struct _RTL_SPLAY_LINKS;
struct NET_ADDRESS_INFO_;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
struct _TOKEN_LINKED_TOKEN;
struct _FILE_STREAM_INFORMATION;
struct _QUERY_SERVICE_CONFIGW;
struct tagWIN16RECT;
struct tagPLACEABLEMETAHEADER;
struct _MOVE_FILE_DATA32;
struct _FILE_ALIGNMENT_INFORMATION;
struct _RTL_RXACT_LOG;
struct ICallFrameEvents;
struct IAsyncRpcChannelBuffer;
struct IOleContainer;
struct CRWLock::LockState;
struct CRWLock::EventState;
class CRWLock;
class CClassCache::CCEHashTable;
class CClassCache::CDPEHashTable;
class CClassCache;
struct IClassFactory;
class CGenObject;
struct _PROCESS_HEAP_ENTRY;
class Windows::Rtl::StringTraits<_LUTF8_STRING>;
struct STARTING_LCN_INPUT_BUFFER;
struct _MONIKEREXTENT;
struct __midl_frag1811_t;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
class CRefExportCount;
struct ISpecifyPropertyPages;
struct tagDROPSTRUCT;
struct tagMETHODDATA;
class CClassCache::CLSvrClassEntry;
struct AsyncIPipeLong;
struct IPAControl;
struct __midl_frag381_t;
struct _RDR_CALLOUT_STATE;
class PRevertable;
struct tagENUMTEXTMETRICW;
class CLUAMoniker;
struct tagPARAMDATA;
struct IPersistStorage;
struct _WINDOWS_OS_OPTIONS;
class CProcessActivator;
struct _MODLOAD_DATA;
struct _FP_IEEE_RECORD;
union WPP_PROJECT_CONTROL_BLOCK;
struct _IO_STATUS_BLOCK;
struct _FILE_IO_COMPLETION_INFORMATION;
struct tagMDICREATESTRUCTA;
class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>;
struct <vc_attributes>::atl::soap_methodAttribute;
struct ISequentialStream;
struct tagLOGPEN;
struct tagEMRCREATEPEN;
struct _Wx86TIB;
struct _CRYPT_3DES_KEY_STATE;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct ITypeFactory;
struct FIND_BY_SID_OUTPUT;
struct _OUTPUT_DEBUG_STRING_INFO;
struct _LBLOB;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >;
struct _SYSTEM_ALARM_ACE;
struct _KEY_BASIC_INFORMATION;
struct IInternetHostSecurityManager;
struct IMarshal2;
struct XMLDOMDocumentEvents;
class CFreeMarshaler;
struct tagTLIBATTR;
struct tagEMRNAMEDESCAPE;
struct _CONSOLE_HISTORY_INFO;
struct _NDR64_NO_REPEAT_FORMAT;
struct IEnumSTATPROPSETSTGVtbl;
struct _PSFEATURE_OUTPUT;
struct _FILE_OBJECTID_BUFFER;
struct IInternetProtocolEx;
struct IWaitMultiple;
struct <vc_attributes>::moduleAttribute;
struct tagEMRSETPIXELV;
struct CleanupStack::memory_to_free;
struct CleanupStack::Block;
struct CleanupStack;
struct __midl_frag6_t;
struct _SEMAPHORE_BASIC_INFORMATION;
struct _MCA_EXCEPTION;
struct _RTL_STACK_CONTEXT_ENTRY;
struct _PROCESS_ACCESS_TOKEN;
struct IFastStack<DISPATCH_CLIENT_FRAME>;
class CRefMutexSem;
struct _SECURITY_QUALITY_OF_SERVICE;
struct IActivationContextInfo;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
struct tagARRAYDESC;
class CMemStm;
struct __midl_frag1307_t;
struct tagRemHMETAFILEPICT;
struct _CERT_NAME_VALUE;
struct IUriBuilderFactory;
struct tagCIEXYZ;
struct tagICEXYZTRIPLE;
class CStabilize;
struct IBindCtx;
struct PPM_PERFSTATE_EVENT;
struct tagHELPWININFOW;
struct IComCatalog;
struct _PROCESSOR_POWER_POLICY_INFO;
struct _PROCESSOR_POWER_POLICY;
class CItemMoniker;
class CBasedTransactedStreamPtr;
struct _FILE_ALLOCATION_INFORMATION;
class CInprocSystemActivator;
struct IInternetThreadSwitch;
struct tagTEXTMETRICA;
struct _OUTLINETEXTMETRICA;
struct <vc_attributes>::atl::aggregatesAttribute;
struct _RTL_BITMAP;
struct _SYSTEM_VERIFIER_ISSUE;
struct __midl_frag1088_t;
struct _FULL_PTR_XLAT_TABLES;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
struct tagSTATDATA;
struct tagBLOB;
struct tagRemHENHMETAFILE;
struct tagNMHDR;
struct IViewObject;
struct <vc_attributes>::objectAttribute;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct _UNWIND_INFO;
struct _ACL_SIZE_INFORMATION;
struct CEffPermsCacheLUID::tagCACHE_ENTRY;
struct tagEMRFRAMERGN;
struct _FILE_REPARSE_POINT_INFORMATION;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct tagCAI;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
struct _SHQUERYRBINFO;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
struct _TAPE_SET_POSITION;
struct tagRAWHID;
struct _SERVICE_DESCRIPTIONA;
struct IBindStatusCallback;
struct _RTL_PROCESS_LOCKS;
struct _EFI_DRIVER_ENTRY;
struct _EFI_DRIVER_ENTRY_LIST;
class CHashTable;
struct IOleUndoUnit;
class CMonikerFactory;
struct _wireSAFEARR_BRECORD;
struct _TRIPLE_LIST_ENTRY;
struct _RTL_DEBUG_INFORMATION;
struct SDWORDHashNode;
struct ApartmentEntry;
struct _DCB;
struct _COMMCONFIG;
struct IStorage;
struct _TPP_THREAD_DATA_CALLBACK;
struct tagCAFLT;
struct _RTL_CONDITION_VARIABLE;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct ClassMonikerData;
class CClassMoniker;
struct <vc_attributes>::atl::db_commandAttribute;
struct _BCRYPT_RSAKEY_BLOB;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
struct _TRANSACTION_LIST_ENTRY;
struct _TRANSACTION_LIST_INFORMATION;
struct _PROCESS_CYCLE_TIME_INFORMATION;
struct _ICONINFOEXW;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
struct IContextMarshaler;
struct ISpecialSystemProperties;
struct _CRT_DOUBLE;
struct ITypeLib2;
struct _PLEX_READ_DATA_REQUEST;
class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>;
struct tagRPC_CALL_ATTRIBUTES_V1_A;
struct _CRYPT_ENCODE_PARA;
struct _CRYPT_PASSWORD_CREDENTIALSW;
struct _SECURITY_TOKEN_AUDIT_DATA;
struct _PO_TRANSITION_VETO_WINDOW;
struct _PO_TRANSITION_VETO_SERVICE;
struct _PO_TRANSITION_VETO;
class CContinue;
struct _PROCESS_FOREGROUND_BACKGROUND;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUNICODE_STRING> >;
struct _GENERATE_NAME_CONTEXT;
class InprocActpropsUnmarshaller;
struct tagEMRSELECTPALETTE;
struct ISynchronizeMutex;
struct _PROCESS_HEAP_INFORMATION;
struct _HEAP_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
struct tagMInterfacePointer;
struct tagCURSORINFO;
struct _EVENTLOGRECORD;
struct _EVENTSFORLOGFILE;
struct IPropertyStorage;
struct _CERT_POLICY_CONSTRAINTS_INFO;
struct tagWINDOWPOS;
struct _CREATE_THREAD_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO;
struct _UNLOAD_DLL_DEBUG_INFO;
struct _RIP_INFO;
struct _DEBUG_EVENT;
struct IOleCache2;
struct IProgressNotify;
struct _HEAP_REGION_INFORMATION;
struct _HEAP_RANGE_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _HEAP_INFORMATION_ITEM;
struct _REMOTE_PORT_VIEW;
struct ARRAY_INFO;
struct _tagRemBINDINFO;
struct IDropSourceNotify;
struct _FILE_TRACKING_INFORMATION;
struct _MEMORY_BASIC_INFORMATION;
class _variant_t;
struct _RTL_TIME_ZONE_INFORMATION;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
struct _SECURITY_ATTRIBUTES;
struct _tagBINDINFO;
struct tagEMROFFSETCLIPRGN;
struct _FILE_ATTRIBUTE_TAG_INFO;
struct _POINTFLOAT;
class CClipDataObject;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct tagSCROLLINFO;
struct CompObjHdr;
struct _CM_COMPONENT_INFORMATION;
struct IGlobalOptions;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
struct VOLUME_BITMAP_BUFFER;
struct IXMLDOMParseError;
struct ISynchronize;
struct IXMLDOMEntity;
class CBasedGlobalFileStreamPtr;
struct tagREGISTERWORDW;
struct _UNWIND_HISTORY_TABLE_ENTRY;
struct _UNWIND_HISTORY_TABLE;
struct POWER_ACTION_POLICY;
struct SYSTEM_POWER_LEVEL;
struct _VARIABLE_NAME_AND_VALUE;
struct IInternetSession;
struct IInternetSecurityMgrSite;
struct SExtHashNode;
struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS;
struct _RUNTIME_FUNCTION;
struct _stat;
struct _FLS_CALLBACK_INFO;
class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
struct _BOOT_ENTRY_LIST;
struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
struct _KCRM_MARSHAL_HEADER;
struct tagPOLYTEXTA;
struct <vc_attributes>::switch_isAttribute;
struct IPartitionProperty;
struct IStackWalkerSymbol;
struct tagEMRROUNDRECT;
struct _ASSEMBLY_STORAGE_MAP;
struct _FILE_ALLOCATION_INFO;
struct HCOLORSPACE__;
struct _FILE_INTERNAL_INFORMATION;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
struct FRAME_GetTypeInfo;
struct _LUTF8_STRING;
struct _CTL_VERIFY_USAGE_PARA;
struct <vc_attributes>::helper_attributes::process_earlyAttribute;
struct RPC_CLIENT_INFORMATION1;
struct _ITEMIDLIST;
struct IRpcChannelBuffer2;
struct IEnumOleUndoUnits;
struct val_context;
struct _CONSOLE_READCONSOLE_CONTROL;
struct _FILE_RENAME_INFO;
struct _ACTIVATION_CONTEXT_STACK;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct HGLRC__;
struct IOplockStorage;
struct _CONSOLE_CURSOR_INFO;
class CAsyncUnknownMgr::CPrivUnknown;
struct IBindHost;
class CCtxCall;
struct IOleUndoManager;
struct ITypeMarshal;
struct <vc_attributes>::uuidAttribute;
struct IRpcOptions;
struct tagMINMAXINFO;
struct _JOURNAL_ABSOLUTE_INFORMATION;
struct _WPP_WIN2K_CONTROL_BLOCK;
struct HCONVLIST__;
struct ICallFrameWalker;
struct IFont;
struct _ALPC_BASIC_INFORMATION;
struct <vc_attributes>::helpfileAttribute;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct _SERVICE_TABLE_ENTRYW;
struct _CONSOLE_SCREEN_BUFFER_INFOEX;
struct _LDR_SERVICE_TAG_RECORD;
struct tagACTCTXW;
struct _TEB_ACTIVE_FRAME;
class XIStorage;
struct _currencyfmtA;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
struct _NON_PAGED_DEBUG_INFO;
struct ICatInformation;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _CRYPT_SIGN_MESSAGE_PARA;
struct _ENCRYPTED_DATA_INFO;
struct _IMAGE_EXPORT_DIRECTORY;
struct _MUILANGUAGES;
struct IAbandonmentNotification;
union _userHENHMETAFILE::__MIDL_IWinTypes_0006;
struct SStringHashNode;
class MIDEntry;
struct IInternetZoneManager;
struct <vc_attributes>::importAttribute;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct _wfinddata64i32_t;
struct _OBJECT_NAME_INFORMATION;
struct IPolicyMaker;
struct _SYSDBG_VIRTUAL;
struct ICreateTypeLib2;
class DefaultIBindStatusCallback;
struct tagDEBUGHOOKINFO;
struct <vc_attributes>::hookAttribute;
struct _NDR64_STRUCTURE_HEADER_FORMAT;
struct __midl_frag8_t;
struct IRpcChannelBuffer3;
struct tagEMREXTSELECTCLIPRGN;
struct tagPOLYTEXTW;
struct HPALETTE__;
struct _IMAGE_SYMBOL;
struct tagHSZPAIR;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct DLL_INSTANTIATION_PROPERTIES;
struct LockCookie;
struct _IMAGE_BASE_RELOCATION;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct _NDR_CORRELATION_INFO;
struct RETRIEVAL_POINTERS_BUFFER;
struct tagRGBTRIPLE;
struct _s__CatchableTypeArray;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _VARIABLE_NAME;
struct IOleObject;
struct _MkInterfaceList;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _FILE_END_OF_FILE_INFO;
struct <vc_attributes>::pragmaAttribute;
struct tagCustomPrivResolverInfo;
class SafeIUnknown;
struct _SYSDBG_CONTROL_SPACE;
struct _PAGE_PRIORITY_INFORMATION;
struct _MESSAGE_RESOURCE_BLOCK;
struct tagCustomOpaqueData;
struct _TOKEN_CONTROL;
struct __MIDL_XmitDefs_0001;
struct _CrtMemState;
struct <vc_attributes>::idl_moduleAttribute;
class CFrameFilter;
struct IErrorLog;
struct _FAT_STATISTICS;
struct _FILE_PATH;
struct tagREGISTERWORDA;
class COLEDragDropHelper;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W;
struct _FILE_ID_BOTH_DIR_INFO;
struct tagSECURITYBINDING;
struct tagHW_PROFILE_INFOA;
struct tagABORTPATH;
struct tagCACLSID;
struct HINSTANCE__;
struct IExternalConnection;
struct tagOIDData;
struct _TypeDescriptor;
struct IPersistMemory;
class CALLFRAME_CACHE_ENTRY<TYPEINFOVTBL>;
struct ICallInfo;
struct IPropertyPage2;
struct tagMULTIKEYHELPW;
struct IPolicy;
class CDestObject;
struct SChannelHookCallInfo;
class CMessageCall;
struct IRecordInfo;
struct IFontDisp;
struct IEnumConnections;
struct __midl_frag691_t;
class CRpcChannelBuffer;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;
class CallFrame;
struct _THREAD_BASIC_INFORMATION;
class CStmBuf;
class CEnumVerb;
struct _PEB_LDR_DATA;
struct IDataFilter;
struct ICallUnmarshal;
class CTry;
struct IServicesSink;
class CBasedUpdatePtr;
class CUpdateList;
struct _CURDIR;
struct _RTL_DRIVE_LETTER_CURDIR;
struct _RTL_USER_PROCESS_PARAMETERS;
struct PROCESSOR_PERFSTATE_POLICY;
struct tagRID_DEVICE_INFO_MOUSE;
class CDebugEventFireCF;
struct _THREAD_TLS_INFORMATION;
struct tagCallEntry;
struct <vc_attributes>::atl::com_interface_entryAttribute;
class _bstr_t::Data_t;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
class COXIDTable;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct IXMLDOMNode;
struct tagSOUNDSENTRYW;
struct IOleInPlaceSiteEx;
struct _GLOBAL_SHARED_CRITICAL_SECTION;
struct IRemUnknown2;
struct tagOCPFIPARAMS;
struct _wireSAFEARR_BSTR;
struct _wireSAFEARR_UNKNOWN;
struct _wireSAFEARR_VARIANT;
struct _wireSAFEARR_HAVEIID;
struct _BYTE_SIZEDARR;
struct _LONG_SIZEDARR;
struct _HYPER_SIZEDARR;
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
struct _wireSAFEARRAY_UNION;
struct tagTRACKMOUSEEVENT;
struct _ACTIVATION_CONTEXT_DATA;
class COle32DebugEventFire;
struct _ABC;
struct IInterceptorBase;
struct IMarshallingManager;
struct IProvideClassInfo2;
struct <vc_attributes>::event_sourceAttribute;
struct _TOKEN_STATISTICS;
struct tagInitializeSpyNode;
struct IDummyHICONIncluder;
struct tagKnownSystemIIDs;
struct IAddrExclusionControl;
struct _KEY_VALUE_BASIC_INFORMATION;
struct IConnectionPoint;
struct tagEMRPOLYPOLYLINE;
struct _THREAD_TEB_INFORMATION;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct _userHENHMETAFILE;
union _RPC_ASYNC_NOTIFICATION_INFO;
struct _RPC_ASYNC_STATE;
struct _BYTE_BLOB;
struct _RTL_DRIVE_LETTER_CURDIR32;
struct IOleInPlaceFrame;
union _userHBITMAP::__MIDL_IWinTypes_0007;
struct _userHBITMAP;
struct INTERFACE_HELPER_CLSID;
struct _tagpropertykey;
class CStdIdentity;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002;
struct _GDI_NONREMOTE;
class CContextLife;
struct tagPALETTEENTRY;
struct tagLOGPALETTE;
struct _ENCRYPTION_BUFFER;
struct tagRAWKEYBOARD;
class CHandle;
class CCtxConnectionManager;
struct _FILE_STANDARD_INFO;
struct CStdMarshal::DisconnectCliIPIDs::__l6::_IPIDReleaseSet;
struct tagRAWINPUTHEADER;
struct tagRAWINPUT;
struct tagContextProperty;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_AND_FLAG_MAP;
struct _VIDEOPARAMETERS;
struct <vc_attributes>::progidAttribute;
struct _RTL_TRACE_BLOCK;
struct IComProcessInfo;
class CNameHashTable;
struct tagBITMAPCOREHEADER;
struct tagBITMAPCOREINFO;
struct IUserToken;
struct AsyncIRemUnknown2;
struct tagPIXELFORMATDESCRIPTOR;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>;
struct tagEMRFILLPATH;
struct IPolicySet;
struct _FLOAT128;
class CAsyncCall;
struct tagMETAHEADER;
struct tagEMRFILLRGN;
struct _SERVICE_FAILURE_ACTIONSA;
struct tagAUDIODESCRIPTION;
struct IReplaceClassInfo;
struct _SCMREGKEY;
class CROTItem;
struct _PS_MEMORY_RESERVE;
class Windows::Auto<Windows::Rtl::IRtlObject *>;
struct _SCONTEXT_QUEUE;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class CSafeMoniker;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct HKL__;
struct IMAGE_COR20_HEADER;
struct <vc_attributes>::atl::soap_namespaceAttribute;
class CMonikerPtrBuf;
struct _SERVICE_NOTIFY_2A;
struct IOleControlSite;
struct MAP_HASHER<MAP_KEY_GUID>;
struct _CRYPT_PRIVATE_KEY_INFO;
class CBasedPerContextPtr;
class CClientCall;
struct IAdviseSink2;
struct HIMCC__;
class CMREInnerUnknown;
class CManualResetEvent;
struct _PROCESS_WS_WATCH_INFORMATION;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct _MEMORY_BASIC_INFORMATION32;
struct _BOOT_OPTIONS;
struct IXMLDOMProcessingInstruction;
struct _PROC_THREAD_ATTRIBUTE_LIST;
struct ISCMProcessControl;
struct __midl_frag249_t;
struct _OFSTRUCT;
class CSrvCallState;
struct IInternalUnknown;
struct _IMAGE_IMPORT_DESCRIPTOR;
class CCliModalLoop;
struct USERPREFS;
struct IXMLDOMImplementation;
struct _FILE_EA_INFORMATION;
struct IROTData;
struct _SYSTEM_PAGEFILE_INFORMATION;
struct IFastStack<CallFrame>;
struct ISoftDistExt;
struct tagCSPLATFORM;
struct tagQUERYCONTEXT;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
struct _Wx86ThreadState;
class COleCache::CCacheDataImpl;
struct _WORD_BLOB;
struct DISPATCH_FRAME;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
struct tagXCtxMarshalData;
struct _JOURNAL_RENAME_KEY_INFORMATION;
struct tagEMRSETVIEWPORTEXTEX;
struct tagCOMBOBOXINFO;
struct _SPC_SP_AGENCY_INFO;
struct IPropertyNotifySink;
struct tagSOUNDSENTRYA;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A;
struct ITypeInfo2;
struct __midl_frag1402_t;
struct _IMAGEHLP_DUPLICATE_SYMBOL64;
struct __midl_frag1515_t;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct _MINIDUMP_HANDLE_OPERATION_LIST;
class CBasedFreeBlockPtr;
class CFreeList;
struct _RPC_SECURITY_QOS_V2_A;
struct IEnumSTATSTG;
struct __midl_frag147_t;
struct _IMAGEHLP_MODULE64;
struct _TAPE_PREPARE;
struct __midl_frag1704_t;
struct _s__RTTIBaseClassArray;
struct _s__RTTIBaseClassDescriptor2;
struct _TI_FINDCHILDREN_PARAMS;
struct _RPC_SECURITY_QOS_V4_A;
struct _BCRYPT_ECCKEY_BLOB;
struct _s__RTTICompleteObjectLocator;
struct INTERPRETER_OPT_FLAGS2;
struct NDR_PROC_HEADER_EXTS64;
struct FRAME_Invoke;
struct DISPATCH_SERVER_FRAME;
struct _SRCCODEINFO;
struct tagCTXCOMMONHDR;
struct tagBYREFHDR;
struct tagCONTEXTHEADER;
struct _CERT_CHAIN_ELEMENT;
struct tagINTERFACEDATA;
struct _PREFIX_TABLE_ENTRY;
struct _ICONINFO;
union _IMAGE_AUX_SYMBOL;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
struct _FILE_PIPE_LOCAL_INFORMATION;
class CMapDwordDword;
struct _MUILANGLIST;
struct _MUIREGISTRYINFO;
class CBaseStorageVariant;
struct _MUISTRINGPOOL;
struct _WIN32_FIND_DATAA;
struct IObjectWithSite;
struct _MUILANGCFGLIST;
struct IComDispatchInfo;
struct _SHFILEOPSTRUCTA;
struct tagGLYPHSET;
struct __midl_frag189_t;
struct _MUILANGCFGNODE;
class PSerStream;
struct __midl_frag1847_t;
class IMappedStream;
struct ITypeLib;
struct _PROV_ENUMALGS_EX;
struct IActivationPropertiesIn;
struct _NDR64_EXPR_NOOP;
struct _MUILANGLISTNODE;
struct tagCONVCONTEXT;
struct tagCONVINFO;
struct IAuthenticate;
struct _NDR64_IID_FORMAT;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct CStreamChunk;
struct IFastStack<DISPATCH_SERVER_FRAME>;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct _BY_HANDLE_FILE_INFORMATION;
struct IDirectWriterLock;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
struct IWrapperInfo;
struct _MINIDUMP_MEMORY_DESCRIPTOR;
struct _MINIDUMP_THREAD_EX;
struct _SYSTEM_BASIC_INFORMATION;
struct CMachineNamesHelper::_UNIQUEADDRS;
struct __midl_frag1440_t;
struct _CRYPT_URL_ARRAY;
struct __midl_frag1843_t;
struct _APP_VARIABLE_INFO;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _FILE_NAME_INFO;
class CComSxSClassInfo;
struct PROCESSOR_IDLE_TIMES;
struct _SERVICE_SID_INFO;
struct _KEY_FULL_INFORMATION;
struct SYNTHESIZED_MAP;
struct _PLUGPLAY_NOTIFY_HDR;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
struct tagMONCBSTRUCT;
struct _NOTIFYICONDATAW;
struct _cpinfoexW;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct tagCADBL;
class CStreamChunkList;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct ImgDelayDescrV2;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;
struct tagMONLINKSTRUCT;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
struct _OBJECT_DIRECTORY_INFORMATION;
class SafeIStorage;
struct __midl_frag1643_t;
struct _JOURNAL_CLIENT_INFORMATION;
class PMemoryAllocator;
struct _TP_TASK_CALLBACKS;
struct IInternetZoneManagerEx2;
struct _SYSDBG_BUS_DATA;
struct tagOleMenuGroupWidths;
class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>;
struct IStdMarshalInfo;
class CGlobalOptions;
class CNdrStream;
struct _RTL_VERIFIER_HELPER_TABLE;
struct tagMENUITEMINFOW;
class Windows::ErrorHandling::Rtl::CBoolFrame;
struct _TP_TASK;
struct tagALTTABINFO;
struct _CM_ROM_BLOCK;
struct DelayLoadProc;
struct DelayLoadInfo;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
class CFmCtrlUnknown;
struct _TP_POOL;
struct _SYSTEM_VDM_INSTEMUL_INFO;
struct _TRACE_GUID_REGISTRATION;
struct tagEMRMODIFYWORLDTRANSFORM;
class CClassCache::CDllPathEntry;
struct tagLOGFONTA;
struct tagEXTLOGFONTA;
struct _RTL_UNLOAD_EVENT_TRACE64;
struct tagCLIENTCREATESTRUCT;
struct tagEMRRESIZEPALETTE;
class CApartmentActivator;
struct _tagPROTOCOLDATA;
struct _SYSTEM_POWER_INFORMATION;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CBoolFrame>;
struct _FILE_FULL_DIR_INFORMATION;
struct _TRIPLE_LIST_ITERATOR;
struct _PROCESSOR_POWER_INFORMATION;
struct _TRIPLE_LIST;
struct IInternetSecurityManagerEx;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct __midl_frag158_t;
struct _ENLISTMENT_CRM_INFORMATION;
struct _lclor_MIDL_PROC_FORMAT_STRING;
struct IComSxSClassInfo;
struct _PARSE_MESSAGE_CONTEXT;
struct _IMAGEHLP_SYMBOL_SRC;
struct HBITMAP__;
struct ILocalSystemActivator;
struct threadmbcinfostruct;
class CRootPubDocFile;
struct localeinfo_struct;
struct IPointerInactive;
struct CClassCache::CFinishComposite::node;
struct tagLC_ID;
struct threadlocaleinfostruct;
struct _OBJECT_TYPE_LIST;
struct _EXCEPTION_RECORD64;
union EventPoolEntry::InitState;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct lconv;
struct _FPO_DATA;
struct __midl_frag1158_t;
struct tagOutgoingActivationData;
struct tagSOleTlsData;
struct __lc_time_data;
struct _PROCESS_TLS_INFORMATION;
struct IHttpNegotiate2;
struct tagLOGCOLORSPACEW;
struct tagEMRCREATECOLORSPACEW;
struct BSTR_INTERNAL;
struct CMalloc;
struct _IMAGE_BOUND_FORWARDER_REF;
struct ISystemDebugEventFire;
struct IDataAdviseHolder;
struct IPropertyPageSite;
struct tagMEASUREITEMSTRUCT;
struct tagBIND_OPTS;
class CGlobalContext;
struct __midl_frag1221_t;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW;
struct _CRYPT_PROVIDER_CERT;
struct IThunkManager;
struct tagEMRLINETO;
struct tagRemBRUSH;
class CBasedMSFPageTablePtr;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct tagENVOYDATA;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
struct tagRPC_CALL_ATTRIBUTES_V2_W;
struct _IMAGE_NT_HEADERS64;
struct _TOKEN_OWNER;
struct _SHSTOCKICONINFO;
struct __midl_frag706_t;
struct tagEMRPOLYLINE;
struct tagNONCLIENTMETRICSA;
struct _CERT_INFO;
struct IObjContext;
struct tagENUMLOGFONTW;
struct tagMDICREATESTRUCTW;
struct __midl_frag309_t;
struct tagCWPRETSTRUCT;
struct tagKBDLLHOOKSTRUCT;
struct IComClassInfo2;
struct _SYSTEM_OBJECT_INFORMATION;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _NETINFOSTRUCT;
struct tagDDEML_MSG_HOOK_DATA;
struct RPC_DISPATCH_TABLE;
class CDirectory;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct tagRPC_CALL_ATTRIBUTES_V2_A;
struct tagSTGOPTIONS;
struct __midl_frag82_t;
struct __midl_frag885_t;
class CUpdate;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct __midl_frag1634_t;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct SCacheEntry;
struct _FILE_ZERO_DATA_INFORMATION;
struct tagMONITORINFOEXA;
struct _OVERLAPPED_ENTRY;
struct _DISCDLGSTRUCTW;
struct _OVERLAPPED;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_POSITION_INFORMATION;
struct _FILE_ALL_INFORMATION;
class CStreamCache;
struct __midl_frag1289_t;
class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>::iterator;
struct _MINIDUMP_THREAD_EX_LIST;
struct IRemUnknown;
struct POWER_STATE_NOTIFY_HANDLER;
struct _custmact_MIDL_PROC_FORMAT_STRING;
struct _MINIDUMP_MISC_INFO_2;
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK;
struct _CRT_FLOAT;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct _NDR_USER_MARSHAL_INFO_LEVEL1;
struct IOleAdviseHolder;
struct _MINIDUMP_THREAD_CALLBACK;
struct IRpcChannelBuffer;
union _GDI_OBJECT::__MIDL_IAdviseSink_0002;
struct _GDI_OBJECT;
struct DLGITEMTEMPLATE;
struct __midl_frag1420_t;
struct _MINIDUMP_THREAD_EX_CALLBACK;
struct tagVS_FIXEDFILEINFO;
struct _MINIDUMP_MODULE_CALLBACK;
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK;
struct _MINIDUMP_IO_CALLBACK;
struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK;
struct _MINIDUMP_CALLBACK_INPUT;
struct _userBITMAP;
class CBasedVectBitsPtr;
class CPagedVector;
struct tagRECONVERTSTRING;
struct IObjectActivator;
union _userHPALETTE::__MIDL_IWinTypes_0008;
struct _userHPALETTE;
struct SPreHeader;
struct tagMENUINFO;
struct __MIDL_ICallFrame_0004;
struct tagEMRSETCOLORSPACE;
struct _RegOutput;
union _userHGLOBAL::__MIDL_IWinTypes_0003;
struct _userHGLOBAL;
class CMSFPageTable;
struct IHttpNegotiate;
struct __midl_frag27_t;
struct _MINIDUMP_HANDLE_DESCRIPTOR_2;
struct _FLAGGED_BYTE_BLOB;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _LDR_SECTION_INFO;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
struct SYMSRV_INDEX_INFOW;
struct _RPC_SECURITY_QOS_V3_A;
struct _RPC_BINDING_HANDLE_OPTIONS_V1;
struct IComThreadingInfo;
struct _MINIDUMP_THREAD;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _MINIDUMP_MODULE;
struct _MINIDUMP_MODULE_LIST;
struct tagCAUB;
struct _OLESTREAMVTBL;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
struct _BLENDFUNCTION;
struct tagPROPERTYIDOFFSET;
struct _OLESTREAM;
struct __midl_frag379_t;
struct _MINIDUMP_HANDLE_DESCRIPTOR;
struct <vc_attributes>::publicAttribute;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
struct IStackWalkerStack;
struct IEnumOLEVERB;
struct tagDRAWTEXTPARAMS;
struct IProxyManager;
struct _stat32;
struct <vc_attributes>::importlibAttribute;
class CRemoteUnknown;
struct <vc_attributes>::pointer_defaultAttribute;
struct __GENERIC_BINDING_INFO;
struct ErrorObjectData;
class CErrorObject;
struct IMarshalOptions;
struct <vc_attributes>::displaybindAttribute;
struct _IMAGE_DOS_HEADER;
struct <vc_attributes>::idAttribute;
class CPropertyBagEx;
struct IInternetBindInfo;
class CDdeServerCallMgr;
class CErrorChannelHook;
struct CDefClient::CUnknownImpl;
class CNtfsUpdateStreamForPropStg;
struct _MIDL_STUB_MESSAGE;
struct _WIN32_FIND_STREAM_DATA;
struct <vc_attributes>::async_uuidAttribute;
struct tagStdUnmarshalData;
struct NDR_ALLOC_ALL_NODES_CONTEXT;
struct _CERT_HASHED_URL;
struct <vc_attributes>::max_isAttribute;
struct NDR_POINTER_QUEUE_STATE;
struct _IMAGE_SECTION_HEADER;
struct <vc_attributes>::switch_typeAttribute;
struct <vc_attributes>::propputAttribute;
struct CDefClient::COleClientSiteImpl;
struct _CTL_FIND_SUBJECT_PARA;
struct _CERT_LOGOTYPE_REFERENCE;
struct _PROCESS_HANDLE_TRACING_ENTRY;
struct AsyncIRemUnknown;
struct _MALLOC_FREE_STRUCT;
class CRefcountedObject;
struct tagTTPOLYCURVE;
struct _COMM_FAULT_OFFSETS;
struct <vc_attributes>::oleautomationAttribute;
struct <vc_attributes>::wire_marshalAttribute;
class CRGTypeSizes;
class CNtfsSTATSTGArray;
struct <vc_attributes>::nonextensibleAttribute;
struct <vc_attributes>::odlAttribute;
struct _NDR_CS_ROUTINES;
class SafeCExposedStream;
struct __midl_frag2_t;
struct NOTIFY_USER_POWER_SETTING;
class CExposedStream;
struct _NDR_CS_SIZE_CONVERT_ROUTINES;
struct tagNFFCONTROLBITS;
struct _USER_MARSHAL_CB;
class CClassCache::CDllPathEntry::CFinishObject;
struct tagHDIBFILEHDR;
struct ICodeInstall;
struct tagREMQIRESULT;
struct _CRYPT_ATTRIBUTES;
struct _CMSG_SIGNER_INFO;
struct <vc_attributes>::atl::implements_categoryAttribute;
struct _TOKEN_ELEVATION;
struct <vc_attributes>::length_isAttribute;
struct <vc_attributes>::atl::perf_objectAttribute;
class _com_error;
class CStmHandle;
struct <vc_attributes>::atl::db_columnAttribute;
struct _CRYPT_IMAGE_REF;
class CStatArray;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
class CGlobalFileStream;
struct tagSTYLEBUFA;
struct <vc_attributes>::defaultvtableAttribute;
struct IMessageFilter;
class CPropertyStorage;
struct tagEMRPOLYDRAW16;
struct <vc_attributes>::atl::tag_nameAttribute;
struct tagBSTRBLOB;
struct tagCAC;
struct tagCAUI;
struct tagCAL;
struct tagCAUL;
struct tagCAH;
struct tagCAUH;
struct tagCABOOL;
struct tagCASCODE;
struct tagCACY;
struct tagCADATE;
struct tagCAFILETIME;
struct tagCACLIPDATA;
struct tagCABSTRBLOB;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCAPROPVARIANT;
struct tagPROPVARIANT;
struct tagCLIPDATA;
class DeserializeHelper::SafeArrayDestroyer;
class DeserializeHelper;
struct <vc_attributes>::helpstringAttribute;
class CDocfileUnmarshalFactory;
struct tagSTATPROPBAG;
struct IForegroundTransfer;
struct IEnumSTATDATA;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
class CarefulBufferReader;
class type_info;
class CCtxUUIDHashTable;
struct IOrpcDebugNotify;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct _NDR_EXPR_DESC;
struct <vc_attributes>::helper_attributes::multi_valueAttribute;
struct <vc_attributes>::varargAttribute;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
struct <vc_attributes>::helper_attributes::as_stringAttribute;
struct _NDR_ASYNC_MESSAGE;
struct _WGLSWAP;
struct InterfaceWalkerFree;
struct _CMC_TAGGED_CONTENT_INFO;
class CNtfsUpdateStreamName;
struct IBlockingLock;
struct _GLYPHMETRICSFLOAT;
struct POWERBROADCAST_SETTING;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _TOKEN_DEFAULT_DACL;
class CBasedMappedStreamPtr;
struct <vc_attributes>::refAttribute;
class CAddrExclusionList;
class CForcedDropTarget;
struct _ACL;
struct tagXAptReleaseData;
class CEnumSTATPROPBAG;
struct <vc_attributes>::helper_attributes::v1_alttypeAttribute;
class CNtfsStorageForPropSetStg;
struct <vc_attributes>::cpp_quoteAttribute;
struct tagDELETEITEMSTRUCT;
struct IXMLDOMNotation;
class CPipeProxy<double,&IID_IPipeDouble,&IID_AsyncIPipeDouble,IPipeDouble,AsyncIPipeDouble>;
struct tagACTCTXA;
class CMarshalList;
struct _RTL_PERTHREAD_CURDIR;
struct _FILE_COMPRESSION_INFORMATION;
struct _VM_COUNTERS_EX;
struct tagI_RpcProxyCallbackInterface;
struct _SERVICE_DELAYED_AUTO_START_INFO;
struct IPersistMoniker;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct tagWIN16METAFILEPICT;
struct _IO_COMPLETION_BASIC_INFORMATION;
class CFormatEtc;
struct _SECTION_IMAGE_INFORMATION;
struct _RTL_USER_PROCESS_INFORMATION;
struct <vc_attributes>::exportAttribute;
class CEMfObject;
struct _CTL_VERIFY_USAGE_STATUS;
struct _RTL_USER_PROCESS_PARAMETERS32;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
struct <vc_attributes>::helpcontextAttribute;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
struct <vc_attributes>::includelibAttribute;
union _CLIENT_CALL_RETURN;
struct _CRYPT_OID_FUNC_ENTRY;
struct <vc_attributes>::inAttribute;
struct IXMLDOMAttribute;
struct <vc_attributes>::transmit_asAttribute;
struct _SHRINK_VOLUME_INFORMATION;
struct _IMAGE_FUNCTION_ENTRY64;
struct SGetFreeStruct;
struct <vc_attributes>::defaultvalueAttribute;
struct _ENUM_SERVICE_STATUS_PROCESSA;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
struct IWindowForBindingUI;
struct <vc_attributes>::localAttribute;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct <vc_attributes>::defaultbindAttribute;
class CDDEServer;
struct _PORT_VIEW;
union _ASSEMBLY_VERSION;
class Windows::Auto<_LBLOB>;
struct tagSERIALKEYSW;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct EXECUTEACK;
struct IComCatalogLocation;
struct _OBJECT_ATTRIBUTES32;
struct _RTL_MODULE_BASIC_INFO;
struct _RTL_MODULE_EXTENDED_INFO;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct IEnumSCMProcessInfo;
struct <vc_attributes>::providerAttribute;
struct <vc_attributes>::propgetAttribute;
struct _SECURITY_DESCRIPTOR;
struct Windows::Rtl::IRtlFormattedOutputStream;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
struct <vc_attributes>::defaultAttribute;
struct tagREMINTERFACEREF;
struct POSTRELRIFREF;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct IClassClassicInfo3;
struct tagPolicyEntry;
struct _CM_EISA_SLOT_INFORMATION;
struct _RTL_BITMAP_RUN;
struct tagMSLLHOOKSTRUCT;
struct <vc_attributes>::readonlyAttribute;
class COAccessControl;
struct <vc_attributes>::vi_progidAttribute;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct _RPC_SECURITY_QOS_V2_W;
struct HSPRITE__;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct <vc_attributes>::iid_isAttribute;
struct _tagCODEBASEHOLD;
struct CArray<CFormatEtc>::ArrayNode;
struct tagEXTLOGPEN;
struct IOverrideTargetContext;
class Windows::Rtl::CriticalSectionLockGrant;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
union _userCLIPFORMAT::__MIDL_IWinTypes_0001;
struct _userCLIPFORMAT;
struct _ALPC_DATA_VIEW_ATTR;
struct IDragDropHelper;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct <vc_attributes>::atl::perfmonAttribute;
struct _OBJECT_ATTRIBUTES64;
struct IMAGE_LOAD_CONFIG_DIRECTORY64;
struct <vc_attributes>::atl::db_tableAttribute;
struct _TXFS_SAVEPOINT_INFORMATION;
struct PARAM_ATTRIBUTES;
struct PARAM_DESCRIPTION;
struct __midl_frag863_t;
struct _RASTERIZER_STATUS;
class CBasedDFBasisPtr;
struct <vc_attributes>::atl::requires_categoryAttribute;
struct __midl_frag751_t;
struct tagEMRPOLYTEXTOUTA;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct IInternet;
struct <vc_attributes>::atl::registration_scriptAttribute;
class CExposedDocFile;
struct _RC_CONFIG;
struct tagEMRSTRETCHDIBITS;
class CSurrogateProcessActivator;
struct IComServices2;
struct <vc_attributes>::atl::request_handlerAttribute;
struct tagPROPSPEC;
struct <vc_attributes>::caseAttribute;
struct HRSRC__;
struct <vc_attributes>::atl::perf_counterAttribute;
struct _TAPE_WRITE_MARKS;
class CPSHashTable;
class CPSTable;
struct IStream;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
struct <vc_attributes>::helper_attributes::v1_earlyAttribute;
struct _RTL_VERIFIER_DLL_DESCRIPTOR;
class CVerifierTlsData;
struct tagVersionedStream;
struct <vc_attributes>::last_isAttribute;
struct IViewObjectEx;
struct <vc_attributes>::helper_attributes::requires_valueAttribute;
struct _REPARSE_GUID_DATA_BUFFER;
struct <vc_attributes>::implementsAttribute;
class streambuf;
struct <vc_attributes>::appobjectAttribute;
class ostream;
struct IXMLDOMDocument;
class CPipePSFactory;
class CEventSem;
struct _REMOTE_REQUEST_SCM_INFO;
struct tagRAWINPUTDEVICELIST;
struct <vc_attributes>::first_isAttribute;
struct _tagDdeClassInfo;
struct <vc_attributes>::importidlAttribute;
struct _SECURITY_SEED_AND_LENGTH;
struct <vc_attributes>::helper_attributes::v1_nameAttribute;
class CAddrControl;
struct IActivationProperties;
struct _TRIVERTEX;
struct ICreateTypeInfo;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct _CTL_CONTEXT;
struct tagWNDCLASSW;
struct _SYSTEM_PROCESSOR_INFORMATION;
struct <vc_attributes>::library_blockAttribute;
struct _INDIRECTPROPERTY;
struct _OUTLINETEXTMETRICW;
struct IPrivActivationContextInfo;
struct _SYSTEM_BIGPOOL_ENTRY;
struct LIST_ENTRY64;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct __midl_frag617_t;
struct tagInstanceInfoData;
struct _DOCINFOA;
struct MOVE_FILE_DATA;
struct MENUITEMTEMPLATEHEADER;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _RPC_SECURITY_QOS;
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
struct _KERNEL_USER_TIMES;
struct _PATHNAME_BUFFER;
struct _DECRYPTION_STATUS_BUFFER;
struct AENTRY;
struct IUrlMon;
struct IProvideMultipleClassInfo;
struct FIND_BY_SID_DATA;
struct _APP_COMPAT_GOO;
class CDebugEventFire;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct __midl_frag1650_t;
struct _RPC_PROTSEQ_VECTORW;
struct __midl_frag1269_t;
class CServerSecurity;
struct __midl_frag539_t;
struct IInternetProtocolSink;
class _RTL_CONSTANT_STRING_remove_const_template_class<2>;
struct SPatternEntry;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
struct _RPC_BINDING_VECTOR;
struct _MEMORYSTATUSEX;
struct IXMLElement2;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct __midl_frag1639_t;
struct _TRANSACTION_BIND_INFORMATION;
struct tagSTATPROPSETSTG;
struct _FILE_SET_SPARSE_BUFFER;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
class CProcessPatternTbl;
struct HUMPD__;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct tagNEWTEXTMETRICA;
struct tagNEWTEXTMETRICEXA;
struct tagAXISINFOA;
struct tagAXESLISTA;
struct tagENUMTEXTMETRICA;
struct _PO_WAKE_SOURCE_DEVICE;
union _PROCESS_AFFINITY_UPDATE_MODE;
struct tagCHARSETINFO;
struct MAP_SHARED<MAP_KEY_GUID,TYPEINFOVTBL *>;
struct IConnectionPointContainer;
struct _ICONINFOEXA;
struct _CRYPT_KEY_SIGN_MESSAGE_PARA;
class TXLargeIntegerWrapper<_ULARGE_INTEGER,unsigned long,unsigned __int64>;
struct _FIBER;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT;
struct IProcessInitControl;
struct __midl_frag1780_t;
struct _FILE_COMPLETION_INFORMATION;
struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct tagEMRPIXELFORMAT;
struct _MEMORYSTATUS;
struct _DPA;
struct _STARTUPINFOW;
struct _STARTUPINFOEXW;
struct IOleCache;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
struct _QUAD;
struct SC_HANDLE__;
struct _SYSTEM_POWER_STATUS;
struct _KTMOBJECT_CURSOR;
struct _stati64;
struct ISurrogate;
struct __midl_frag1183_t;
struct _TOKEN_AUDIT_POLICY;
struct _MUTANT_BASIC_INFORMATION;
struct _RTL_QUERY_REGISTRY_TABLE;
struct tagIMEMENUITEMINFOW;
struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
struct _cpinfo;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct _FILE_PIPE_REMOTE_INFORMATION;
class Windows::Auto<_UNICODE_STRING>;
struct tagHELPINFO;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
class CPunkForRelease;
struct tagMOUSEINPUT;
struct tagHARDWAREINPUT;
struct tagINPUT;
struct HBRUSH__;
struct tagEMRBITBLT;
struct ANON_OBJECT_HEADER_V2;
struct _EISA_MEMORY_TYPE;
struct _RTL_TRACE_DATABASE;
struct _RTL_TRACE_ENUMERATE;
struct _TXFS_LIST_TRANSACTIONS;
struct __midl_frag273_t;
struct _KCRM_PROTOCOL_BLOB;
struct _RTLP_CURDIR_REF;
struct __MIDL___MIDL_itf_activate_0000_0010_0004;
class CAggId;
struct _SYSTEM_REF_TRACE_INFORMATION;
struct _KEY_NODE_INFORMATION;
struct IOleInPlaceActiveObject;
struct IThumbnailExtractor;
struct HMAPKEY__;
struct IOleInPlaceActiveObjectVtbl;
struct _AppBarData;
struct Windows::ErrorHandling::_RTL_CALL_SITE;
struct _RTL_ANSI_STRING_BUFFER;
class CCtxHook;
struct _IMAGE_TLS_DIRECTORY32;
struct _mega_MIDL_PROC_FORMAT_STRING;
struct IWinInetFileStream;
struct ICallFrame;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct _NETCONNECTINFOSTRUCT;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _CRYPT_PROVIDERS;
struct _WNODE_HEADER;
struct tagSTRINGBINDING;
struct _CMSG_RC2_AUX_INFO;
struct _FILE_NOTIFY_INFORMATION;
struct PPM_WMI_LEGACY_PERFSTATE;
struct _CERT_REGISTRY_STORE_ROAMING_PARA;
struct IEnumSTATPROPSTG;
struct __midl_frag983_t;
class IInternalChannelBuffer;
struct _DISPLAY_DEVICEW;
struct _BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE;
struct _acpickl_MIDL_EXPR_FORMAT_STRING;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
class CCOMSurrogate;
class CRpcHelper;
class Serializer;
struct ISystemActivator;
struct IOleInPlaceUIWindowVtbl;
struct _KEY_EVENT_RECORD;
struct _MOUSE_EVENT_RECORD;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct _MENU_EVENT_RECORD;
struct _INPUT_RECORD;
struct __midl_frag1143_t;
struct _LDR_IMPORT_RECORD;
class CFillLockBytes;
struct _RTL_PROCESS_MODULES;
struct _SYSTEM_POWER_POLICY;
struct FRAME_RemoteInvoke;
class CErrorSmAllocator;
struct _BCRYPT_OID_LIST;
struct _FILE_GET_QUOTA_INFORMATION;
struct BULK_SECURITY_TEST_DATA;
struct ISystemDebugEventShutdown;
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
struct _PREFIX_TABLE;
struct __midl_frag1539_t;
class CNtfsStorage;
struct __midl_frag446_t;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
struct __midl_frag1050_t;
struct PPM_THERMALCHANGE_EVENT;
struct __midl_frag1726_t;
struct IMultiQI;
struct _JOB_SET_ARRAY;
struct _LPC_CLIENT_DIED_MSG;
struct _DMA_CONFIGURATION_BYTE1;
struct _EISA_DMA_CONFIGURATION;
struct IFillLockBytes;
struct tagSpecialPropertiesData;
class SpecialProperties;
class CThreadCheck;
struct IBinding;
struct IViewObject2;
struct __midl_frag47_t;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
struct _COMMPROP;
struct _LDR_DATA_TABLE_ENTRY32;
struct _IMAGE_FUNCTION_ENTRY;
struct _CERT_KEYGEN_REQUEST_INFO;
struct HACCEL__;
struct IRpcStubBuffer;
struct __midl_frag368_t;
struct _MMPFN_MEMSNAP_INFORMATION;
struct _OCSP_RESPONSE_INFO;
struct HDC__;
struct _SINGLE_LIST_ENTRY;
struct _SYSTEM_ALARM_OBJECT_ACE;
struct _CRL_DIST_POINT_NAME;
struct _FILE_FS_SIZE_INFORMATION;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
struct _CMSG_KEY_AGREE_RECIPIENT_INFO;
struct __midl_frag1638_t;
class istream;
struct __midl_frag923_t;
struct _INITIAL_TEB;
struct __midl_frag859_t;
struct PROCESSOR_PERF_STATE;
struct PROCESSOR_PERF_STATES;
struct tagEMRSETMITERLIMIT;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _MESSAGE_RESOURCE_DATA;
struct _FILE_FS_DEVICE_INFORMATION;
struct _FILE_NAMES_INFORMATION;
struct tagEMRGLSBOUNDEDRECORD;
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
struct tagHANDLETABLE;
class InstantiationInfo;
class InstanceInfo;
class ActivationPropertiesIn;
struct IOleInPlaceSite;
struct tagEXCEPINFO;
struct _DRAWPATRECT;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW;
class CEnumFormatEtcDataArray;
struct _WIN32_FIND_DATAW;
struct _BCRYPT_PSS_PADDING_INFO;
struct __midl_frag1251_t;
struct _MESSAGE_RESOURCE_ENTRY;
struct __midl_frag1520_t;
struct _GRADIENT_TRIANGLE;
struct _MODEMSETTINGS;
struct _IO_ERROR_LOG_PACKET;
struct _IO_ERROR_LOG_MESSAGE;
struct IEncodingFilterFactory;
class CBasedDeltaBlockPtrPtr;
class CDeltaList;
struct tagLOGBRUSH32;
struct _PS_CREATE_INFO;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
struct _CRYPT_OID_INFO;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _IMAGE_ROM_HEADERS;
struct _wfinddata_t;
struct _CMSG_CNG_CONTENT_DECRYPT_INFO;
struct _REG_NOTIFY_INFORMATION;
struct __midl_frag1233_t;
struct _IO_STATUS_BLOCK32;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _MEMORY_REGION_INFORMATION;
struct IXMLElementCollection;
struct ISecurityOptions;
struct tagSCROLLBARINFO;
struct _CMSG_MAIL_LIST_ENCRYPT_INFO;
struct _KNONVOLATILE_CONTEXT_POINTERS;
struct IEnumContextProps;
struct _SYSTEM_NUMA_INFORMATION;
struct __MIDL_ICallFrame_0002;
struct _IMAGE_IMPORT_BY_NAME;
struct _IMAGE_DEBUG_DIRECTORY;
struct UDATE;
struct tagEMRGDICOMMENT;
class CComActivator;
struct _CRYPT_HASH_MESSAGE_PARA;
struct _RTL_HEAP_TAG_INFO;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A;
struct IXMLElement;
struct _TOKEN_USER;
struct _lclor_MIDL_TYPE_FORMAT_STRING;
struct tagVARDESC;
struct _CERT_PAIR;
struct __midl_frag1316_t;
struct tagEMRANGLEARC;
struct _stat64;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _SL_KMEM_CACHE;
struct __midl_frag1624_t;
struct _CRYPT_HASH_INFO;
struct tagEMRSETARCDIRECTION;
struct tagOpaqueData;
struct CONFIRMSAFETY;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
struct _CLILIST;
struct _FILE_PIPE_EVENT_BUFFER;
class CSmAllocator;
struct HSTR__;
struct __midl_frag128_t;
struct _CONNECTDLGSTRUCTA;
class CCallTable;
struct IParseDisplayName;
struct IXTLRuntime;
struct _ACCESS_DENIED_ACE;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
struct _FILE_FS_OBJECTID_INFORMATION;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct __MIDL_ILocalObjectExporter_0001;
struct AsyncIPipeDouble;
struct NdrStringHeader;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct IPropertySetStorage;
struct <vc_attributes>::size_isAttribute;
struct SBlanket;
struct _SECTIONBASICINFO;
class CStgHandle;
struct _TP_IO;
struct tagACCEL;
struct _CMC_STATUS_INFO;
struct <vc_attributes>::dualAttribute;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY;
struct HENHMETAFILE__;
class CDocFile;
struct ORPC_INIT_ARGS;
struct tagEMRARC;
struct _OCSP_BASIC_RESPONSE_INFO;
struct tagCOPYDATASTRUCT;
class OleThunkWOW;
struct _PUBLICKEYSTRUC;
struct tagDISPATCHDATA;
struct _BCRYPT_KEY_DATA_BLOB_HEADER;
struct _SCOPE_TABLE;
struct _CERT_CRL_CONTEXT_PAIR;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
struct <vc_attributes>::nonbrowsableAttribute;
struct _OBJECT_TYPES_INFORMATION;
struct _EISA_IRQ_CONFIGURATION;
struct ICallInterceptor;
struct IRpcProxyBufferVtbl;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _BCRYPT_PKCS1_PADDING_INFO;
struct tagHELPWININFOA;
struct <vc_attributes>::unhookAttribute;
struct _nlsversioninfo;
struct tagStdDiscData;
struct IMoniker;
struct _TAPE_SET_DRIVE_PARAMETERS;
struct _FILE_OBJECTID_INFORMATION;
struct IClassActivator;
struct _EVENT_BASIC_INFORMATION;
struct tagENUMLOGFONTEXA;
struct tagENUMLOGFONTEXDVA;
struct tagQACONTROL;
class HashWSTR;
struct <vc_attributes>::event_receiverAttribute;
struct CStdMarshal::Deactivate::__l3::tagServerRefs;
struct _SHFILEINFOW;
class CHeapHeader;
struct _SYSDBG_IO_SPACE;
class CBasedDeltaBlockPtr;
struct <vc_attributes>::retvalAttribute;
struct _OSVERSIONINFOW;
struct IWinInetInfo;
struct tagCANDIDATEFORM;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnType;
struct _CERT_SYSTEM_STORE_RELOCATE_PARA;
struct CDefClient::CAdviseSinkImpl;
struct _SYSTEM_POOL_INFORMATION;
struct _CMSG_KEY_AGREE_ENCRYPT_INFO;
struct IMAGE_LOAD_CONFIG_DIRECTORY32;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct IDocfileAsyncConnectionPoint;
struct _SYSTEM_PROCESS_INFORMATION;
struct _KEY_VALUE_ENTRY;
struct _RTL_BALANCED_LINKS;
struct _RTL_AVL_TABLE;
struct IRpcProxyBuffer;
struct _CERT_CHAIN_ENGINE_CONFIG;
struct <vc_attributes>::bindableAttribute;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct tagRID_DEVICE_INFO_HID;
struct tagRID_DEVICE_INFO;
struct ICallFrameInit;
struct _ALPC_SECURITY_ATTR;
struct _RTL_UNLOAD_EVENT_TRACE;
struct ISimpleFrameSite;
class CExtHashTable;
struct IPersistStreamInit;
struct tagTITLEBARINFO;
class CSecurityDescriptor;
struct <vc_attributes>::atl::rdxAttribute;
struct _RPC_IF_ID;
struct <vc_attributes>::atl::db_sourceAttribute;
struct _COSERVERINFO;
class CSystemException;
struct <vc_attributes>::stringAttribute;
struct CCompositeMonikerEnum::se;
struct IOleCacheControl;
struct _EISA_MEMORY_CONFIGURATION;
struct _COAUTHIDENTITY;
class CExceptionContext::StackElement;
struct tagHIGHCONTRASTA;
struct _FILE_NETWORK_OPEN_INFORMATION;
struct MARK_HANDLE_INFO32;
union _userHMETAFILE::__MIDL_IWinTypes_0004;
struct _userHMETAFILE;
struct _IMAGEHLP_SYMBOLW64;
struct tagEMRCREATEBRUSHINDIRECT;
struct _UNICODE_PREFIX_TABLE;
struct _SYMBOL_INFO;
class CAtom;
struct _RTL_DEBUG_INFORMATION32;
struct <vc_attributes>::entryAttribute;
class CMapDwordPtr;
struct tagRemFORMATETC;
class CStackWalkerStack;
struct _IMAGEHLP_SYMBOLW64_PACKAGE;
struct <vc_attributes>::helper_attributes::attributeAttribute;
struct IAdviseSinkEx;
struct IEnumConnectionPoints;
struct _ALPC_PORT_ATTRIBUTES;
struct _tagPROTOCOLFILTERDATA;
struct pvalueA;
struct tagMainHeader;
struct _OBJECT_BASIC_INFORMATION;
struct _RTL_CRITICAL_SECTION64;
struct tagENUMLOGFONTA;
struct _PROCESSOR_IDLE_STATE_EX;
struct _PROCESSOR_IDLE_STATES_EX;
struct _REPARSE_DATA_BUFFER;
struct RegistryKeyValue;
struct tagMOUSEHOOKSTRUCT;
struct IPropertyPage;
struct IRemUnknownN;
struct _PO_WAKE_SOURCE_FIXED;
struct IPropertyBag2;
struct _SYSTEM_PREFETCH_STATS;
struct _CRYPT_PROVIDER_REGDEFUSAGE;
struct <vc_attributes>::helper_attributes::usageAttribute;
struct tagMOUSEKEYS;
struct _MINIDUMP_HANDLE_OBJECT_INFORMATION;
struct <vc_attributes>::versionAttribute;
struct _FILE_FULL_EA_INFORMATION;
struct IEnumGeneric;
struct IGetContextId;
struct _FILE_QUERY_SPARING_BUFFER;
struct _WINTRUST_DATA;
struct HPEN__;
struct _CRYPT_PROVIDER_FUNCTIONS;
struct tagCURSORSHAPE;
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
struct WINTRUST_CATALOG_INFO_;
struct tagEMRSTRETCHBLT;
struct <vc_attributes>::v1_enumAttribute;
class CEnumCategories;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
struct tagWNDCLASSA;
class CPipeProxy<unsigned char,&IID_IPipeByte,&IID_AsyncIPipeByte,IPipeByte,AsyncIPipeByte>;
struct HWINEVENTHOOK__;
struct _CRYPT_AES_256_KEY_STATE;
struct <vc_attributes>::rangeAttribute;
struct _TOKEN_PRIVILEGES;
class CObjrefMoniker;
struct IOleParentUndoUnit;
struct tagRAWINPUTDEVICE;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
class CMfObject;
struct tagSERIALKEYSA;
struct IPersistStream;
struct <vc_attributes>::helpstringcontextAttribute;
struct tagSOAP_ACTIVATION_INFO;
class CNullWalker;
struct ANON_OBJECT_HEADER;
struct <vc_attributes>::optionalAttribute;
struct <vc_attributes>::sourceAttribute;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct _CMSG_CMS_SIGNER_INFO;
struct tagEVENTMSG;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
struct IPropertyBag;
struct ORPC_DBG_ALL;
struct _CERT_NAME_INFO;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _CRYPT_CSP_PROVIDER;
class BUCL::CDequeLinkage;
struct _SYSTEM_PROCESS_ID_INFORMATION;
class Windows::Rtl::CRTL_SMART_LBLOB_WRITING_CONTEXT;
struct ISynchronizeEvent;
struct <vc_attributes>::dispinterfaceAttribute;
struct _RevokeEntry;
struct _CACHE_DESCRIPTOR;
struct <vc_attributes>::uidefaultAttribute;
class CPipeProxy<long,&IID_IPipeLong,&IID_AsyncIPipeLong,IPipeLong,AsyncIPipeLong>;
struct _SHCREATEPROCESSINFOW;
struct ILocalMachineNames;
struct _PROCESS_INFORMATION;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _RTL_HEAP_INFORMATION;
struct _RTL_PROCESS_HEAPS;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct _TP_CLEANUP_GROUP;
struct _KEY_WRITE_TIME_INFORMATION;
struct tagOLE1DISPATCHDATA;
struct USN_RECORD;
struct _BCRYPT_DSA_KEY_BLOB;
struct AllocateThrow;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _TXFS_GET_TRANSACTED_VERSION;
struct _FILE_MAILSLOT_SET_INFORMATION;
struct IWinInetCacheHints;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct <vc_attributes>::usesgetlasterrorAttribute;
struct _DOCINFOW;
struct _OSVERSIONINFOEXA;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct <vc_attributes>::coclassAttribute;
struct _ImageArchitectureHeader;
struct tagDATAELEMENT;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
struct _BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE;
struct tagEMRPOLYLINE16;
struct _CM_MONITOR_DEVICE_DATA;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
class Windows::Rtl::StringTraits<_LUNICODE_STRING>;
struct <vc_attributes>::defaultcollelemAttribute;
struct _RegInputEntry;
struct _RegInput;
struct <vc_attributes>::aggregatableAttribute;
class CVirtualUnwindable;
struct <vc_attributes>::atl::support_error_infoAttribute;
struct tagEMRPOLYDRAW;
struct tagMENUBARINFO;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
struct tagWINDOWPLACEMENT;
struct _NT_TIB32;
struct _TXFS_MODIFY_RM;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
struct _ACL_REVISION_INFORMATION;
struct _DISPLAY_DEVICEA;
struct <vc_attributes>::atl::soap_handlerAttribute;
struct _DRAGINFOA;
struct tagENHMETARECORD;
struct _FILE_COMPRESSION_INFO;
struct tagCANDIDATELIST;
struct tagEMRSCALEVIEWPORTEXTEX;
struct IOleInPlaceSiteWindowless;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct tagEMRELLIPSE;
struct _ACCESS_ALLOWED_ACE;
struct _CERT_QC_STATEMENTS_EXT_INFO;
union _RATE_QUOTA_LIMIT;
struct tagEMRCREATEPALETTE;
class CWorldSecurityDescriptor;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct <vc_attributes>::atl::db_paramAttribute;
class CTrackingCompositeMoniker;
struct _SYSTEM_HANDLE_INFORMATION;
class CStackWalkerSymbol;
struct IXMLDOMNamedNodeMap;
struct tagENHMETAHEADER;
struct _TRANSACTION_NOTIFICATION;
struct IEnumMoniker;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
struct RTL_ACE_DATA;
struct _KSPIN_LOCK_QUEUE;
struct _KLOCK_QUEUE_HANDLE;
class CGlobalSecurity;
struct IRundown;
struct IProcessLock;
struct _COMMTIMEOUTS;
struct IInternetProtocolRoot;
struct _SYSDBG_MSR;
struct <vc_attributes>::helper_attributes::notify_atlprovAttribute;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
struct <vc_attributes>::includeAttribute;
struct _CRYPT_PROVIDER_REFS;
struct _FILE_GET_EA_INFORMATION;
struct IOleInPlaceObjectWindowless;
struct _PROCESSOR_IDLE_STATES;
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _SLIST_ENTRY;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
class PBasicEntry;
struct <vc_attributes>::lcidAttribute;
class CEnumStatData;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _CRYPT_PKCS12_PBE_PARAMS;
struct _xml_error;
struct tagMOUSEMOVEPOINT;
struct _SYSTEM_VERIFIER_INFORMATION;
struct <vc_attributes>::helper_attributes::help_stringAttribute;
struct _CM_SERIAL_DEVICE_DATA;
struct _LINK_TRACKING_INFORMATION;
struct tagRPC_EE_INFO_PARAM;
struct HRAWINPUT__;
struct _cpinfoexA;
struct _PS_STD_HANDLE_INFO;
struct _FILE_IO_PRIORITY_HINT_INFO;
struct _KEY_VALUE_FULL_INFORMATION;
class CTransactedTimeEntry;
struct tagEMRSETICMPROFILE;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct IShellItem2;
struct _CAT_NAMEVALUE;
struct PPM_WMI_PERF_STATE;
struct IComServices;
struct tagHARDWAREHOOKSTRUCT;
struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
class DDE_CHANNEL;
struct _wireSAFEARRAY;
struct _irot_MIDL_TYPE_FORMAT_STRING;
struct _PRIV_RESOLVER_INFO;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
struct _TP_CALLBACK_ENVIRON;
struct IXMLAttribute;
struct tagMONITORINFO;
struct __midl_frag1465_t;
struct IClassFactoryVtbl;
struct INTERPRETER_OPT_FLAGS;
struct _LDR_DATA_TABLE_ENTRY64;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _exception;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
class CRotHintTable;
struct tagPROPPAGEINFO;
struct _ImageArchitectureEntry;
struct ICreateTypeLib;
struct IFillLockBytesVtbl;
struct tagICONMETRICSW;
struct value_entW;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _KEY_VALUE_PARTIAL_INFORMATION;
struct tagMULTI_QI;
struct _CERT_CHAIN_CONTEXT;
struct IInternetPriority;
struct OAUTIL;
struct CVerifierStackData::tagNode;
struct tagWNDCLASSEXW;
struct _CrtMemBlockHeader;
struct _complex;
struct __midl_frag126_t;
class Windows::Auto<_LUTF8_STRING>;
struct _RTL_HEAP_TAG;
struct METHOD_DESCRIPTOR;
struct _CERT_OTHER_LOGOTYPE_INFO;
struct tagGCP_RESULTSA;
struct tagWNDCLASSEXA;
class Windows::ErrorHandling::Rtl::CVoidRaiseFrame;
struct _UUID_VECTOR;
struct NDR_PROC_HEADER_EXTS;
struct MD_INTERFACE;
struct tagDISPPARAMS;
struct _wfinddata32_t;
struct _devicemodeW;
struct tagWINDOWINFO;
struct _TAPE_WMI_OPERATIONS;
struct _heapinfo;
class CServerContextActivator;
struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY;
struct _SHNAMEMAPPINGW;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
struct _MINIDUMP_MISC_INFO;
class CInterfaceFromWindowProp;
struct _BCRYPT_DSA_PARAMETER_HEADER;
struct HIMC__;
struct _EXCEPTION_RECORD32;
struct __midl_frag99_t;
struct _TP_WORK;
struct _EVENTLOG_FULL_INFORMATION;
struct tagEMREXTCREATEPEN;
class CNFFMappedStream;
class CNtfsStream;
struct SEntryBuffer;
struct Windows::Rtl::IRtlFormattableObject;
struct _MODEMDEVCAPS;
class CTrackingFileMoniker;
struct tagSOLE_AUTHENTICATION_LIST;
struct _SE_IMPERSONATION_STATE;
struct _KLDR_DATA_TABLE_ENTRY64;
struct _FILE_BOTH_DIR_INFORMATION;
struct IComCatalogSCM;
struct __midl_frag1803_t;
struct __midl_frag920_t;
struct _tagADDRESS64;
struct _tagSTACKFRAME64;
struct MARK_HANDLE_INFO;
struct tagEMRINVERTRGN;
struct tagEMRALPHABLEND;
struct _FILE_LINK_INFORMATION;
class CClassCache::CCollectable;
struct IWinInetCacheHints2;
struct _ENUM_SERVICE_STATUSA;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct tagSERIALIZEDPROPERTYVALUE;
struct _scm_MIDL_PROC_FORMAT_STRING;
struct tagEMRRESTOREDC;
struct tagGUITHREADINFO;
struct tagStdMarshalData;
struct IDLLHost;
struct _ATOM_TABLE_INFORMATION;
struct BITMAPV5HEADER;
struct _PO_TRANSITION_VETOES;
struct _FLS_DATA;
struct _nlsversioninfoex;
struct IEnumUnknown;
struct IActivationPropOutClean;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct _ALPC_HANDLE_ATTR;
struct tagICONMETRICSA;
class CGIPMessageParam;
struct IXMLDOMText;
struct tagEMRSETPALETTEENTRIES;
struct __midl_frag1856_t;
struct HDESK__;
struct tagXCtxQIData;
struct MOVE_FILE_RECORD_DATA;
struct IPrivDragDrop;
union _FILE_SEGMENT_ELEMENT;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
struct _SID_AND_ATTRIBUTES_HASH;
struct tagXCtxDisconnectData;
struct MENUITEMTEMPLATE;
struct _div_t;
struct BITMAPV4HEADER;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
struct __midl_frag569_t;
struct _FILE_END_OF_FILE_INFORMATION;
struct _MIDL_FORMAT_STRING;
struct _PO_WAKE_SOURCE_HISTORY;
struct _GLYPHMETRICS;
struct __midl_frag29_t;
struct _COVERAGE_SECTION_HEADER;
struct _OSVERSIONINFOEXW;
struct _NOTIFYICONDATAA;
struct _TOKEN_MANDATORY_POLICY;
struct _TXFS_QUERY_RM_INFORMATION;
class COAHolder;
struct _CHAR_INFO;
struct _AVRF_CLIENT_ID_WOW64;
struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64;
class CHlprDialog;
struct IPrivActivationPropertiesIn;
struct _FILE_STREAM_INFO;
struct IUnknownVtbl;
struct _numberfmtA;
struct __midl_frag669_t;
struct ILockBytes;
struct IMalloc;
class CIPIDTable;
struct _wfinddata32i64_t;
struct IXMLError;
struct __midl_frag44_t;
struct tagComCallData;
struct __midl_frag1060_t;
struct _HMAPPER;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct IPipeLong;
struct tagInterfaceData;
struct tagCStdPSFactoryBuffer;
class CComApartment;
struct __midl_frag244_t;
class CMarshalImplPStream;
struct __midl_frag1701_t;
class CPIDHashTable;
class _RTL_CONSTANT_STRING_remove_const_template_class<1>;
struct pUnkListElement;
class CClientCallMgr;
struct IDestInfo;
struct _CERT_BASIC_CONSTRAINTS2_INFO;
struct __midl_frag1683_t;
struct IStorageReplica;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
class istream_withassign;
struct EFFICIENTOSVERSIONINFOEXW;
struct PPM_IDLE_ACCOUNTING;
struct __midl_frag275_t;
struct NTFS_EXTENDED_VOLUME_DATA;
struct _ADMINISTRATOR_POWER_POLICY;
struct IPipeDouble;
struct STwoBits;
struct _RTL_BACKOFF;
struct _IMAGE_RESOURCE_DATA_ENTRY;
class CBaseMoniker;
struct _KEY_CACHED_INFORMATION;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct __midl_frag176_t;
struct _CERT_LOGOTYPE_IMAGE;
struct _EISA_PORT_DESCRIPTOR;
struct _CERT_LOGOTYPE_DATA;
class Windows::LockGrant<_RTL_CRITICAL_SECTION>;
struct tagCUSTDATAITEM;
struct _COMSTAT;
struct _PARAM_STRUCT;
struct LockingStack<DISPATCH_CLIENT_FRAME>;
struct IRunnableObjectVtbl;
struct _CMSG_CMS_RECIPIENT_INFO;
struct IPicture;
struct __midl_frag302_t;
struct _CERT_ALT_NAME_ENTRY;
struct _CERT_ACCESS_DESCRIPTION;
struct MIPID;
struct _CERT_LOGOTYPE_EXT_INFO;
struct _CRYPT_TIME_STAMP_REQUEST_INFO;
struct tagMOUSEHOOKSTRUCTEX;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct __midl_frag78_t;
struct IPersistPropertyBag;
struct _FILE_PREFETCH;
struct <vc_attributes>::call_asAttribute;
struct _OCSP_BASIC_RESPONSE_ENTRY;
struct _ENUM_SERVICE_STATUS_PROCESSW;
class CSplit_QI;
class COleTls;
struct ITypeInfo;
struct tagIMEMENUITEMINFOA;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct __midl_frag650_t;
class CFat;
struct SStorageFile;
struct tagCOLORMATCHTOTARGET;
struct <vc_attributes>::idl_quoteAttribute;
struct tagORPCTHIS;
struct IEnumCATEGORYINFO;
class CComCat;
struct __midl_frag219_t;
struct _CERT_CREATE_CONTEXT_PARA;
struct _VOLUME_COMPRESSION_STATE;
struct IXMLDOMDocumentType;
struct <vc_attributes>::helpstringdllAttribute;
class CFAccessControl;
struct _CALL_FRAME;
struct _OBJECTID;
struct __midl_frag279_t;
struct RPC_STATS_VECTOR;
struct _RPC_SERVER_INTERFACE;
struct _RPC_PROTSEQ_ENDPOINT;
struct _NT_TIB64;
struct CVectBits;
class Windows::Rtl::StringTraits<_UNICODE_STRING>;
struct _ABCFLOAT;
class CRandomNumberGenerator;
struct tagLOGCOLORSPACEA;
struct tagEMRCREATECOLORSPACE;
class CPackagerMoniker;
struct __midl_frag1484_t;
struct tagSTREAM_ACL;
struct _TP_ALPC;
struct IAdviseSink2Vtbl;
class CFatSect;
struct HDROP__;
struct _ProcessActivatorToken;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct _IMAGE_DEBUG_MISC;
struct _SYSTEM_BIGPOOL_INFORMATION;
class ComPsClassFactory;
struct tagNONCLIENTMETRICSW;
class SerializableProperty;
struct __midl_frag396_t;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct <vc_attributes>::atl::soap_headerAttribute;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
struct __midl_frag592_t;
class CCompositeMonikerEnum;
struct _NDR_USER_MARSHAL_INFO;
struct _CRYPT_ENCRYPT_MESSAGE_PARA;
struct _SERVICE_TABLE_ENTRYA;
struct <vc_attributes>::no_injected_textAttribute;
struct _OCSP_SIGNED_REQUEST_INFO;
struct _OPEN_PRINTER_PROPS_INFOW;
struct PPM_THERMAL_POLICY_EVENT;
struct _RPC_PROTSEQ_VECTORA;
struct IEnumHolder;
struct tagFILTERKEYS;
struct tagEMRSETTEXTCOLOR;
class ActivationProperties;
struct __midl_frag609_t;
struct <vc_attributes>::helper_attributes::source_annotation_attributeAttribute;
struct IOleCache2Vtbl;
struct _CERT_ECC_SIGNATURE;
class CArray<CStatData>;
struct _CRYPT_SEQUENCE_OF_ANY;
struct <vc_attributes>::restrictedAttribute;
struct _ZONEATTRIBUTES;
struct _CERT_SYSTEM_STORE_INFO;
struct _RTL_VERIFIER_ALL_INFORMATION;
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT;
struct IHookOleObject;
struct tagSTATPROPSTG;
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
struct _RTL_HEAP_WALK_ENTRY;
struct _AVRF_MEMORY_RANGE;
struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;
struct IScmReplyInfo;
struct tagIMECHARPOSITION;
struct _s__ThrowInfo;
struct _CERT_NAME_CONSTRAINTS_INFO;
struct __midl_frag1097_t;
struct _srgtprot_MIDL_PROC_FORMAT_STRING;
struct __midl_frag371_t;
class CSafeSem;
struct tagMENUGETOBJECTINFO;
struct <vc_attributes>::ms_unionAttribute;
struct <vc_attributes>::uniqueAttribute;
struct __midl_frag1123_t;
struct tagRPC_EXTENDED_ERROR_INFO;
class CBool;
struct IComCatalog2Internal;
struct NdrStringPtrHeader;
struct IPrivActivationPropertiesOut;
class CRpcThreadCache;
struct __midl_frag304_t;
class MapEnumToSQMData<enum RpcssSQMFlags>;
struct _PLUGPLAY_EVENT_BLOCK;
class COleStaticLock;
struct tagSCMSA;
class CLock;
class CFILETIME;
struct __midl_frag313_t;
struct _POOLED_USAGE_AND_LIMITS;
struct __midl_frag1597_t;
class CSSMappedStream;
struct _REPARSE_INDEX_KEY;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
class CExtentList;
class CFileMoniker;
struct _CRYPTNET_URL_CACHE_RESPONSE_INFO;
struct _SYSTEM_AUDIT_ACE;
struct _MINIDUMP_CALLBACK_INFORMATION;
struct __midl_frag1806_t;
struct _IMAGEHLP_GET_TYPE_INFO_PARAMS;
struct __midl_frag1108_t;
struct __midl_frag197_t;
struct _CRYPT_PSOURCE_ALGORITHM;
struct __midl_frag787_t;
struct _CERT_BASIC_CONSTRAINTS_INFO;
struct _CERT_AUTHORITY_KEY_ID_INFO;
struct SPreDirEntry;
struct __midl_frag940_t;
struct __midl_frag1867_t;
struct SYMSRV_INDEX_INFO;
struct __midl_frag318_t;
struct _SPC_SERIALIZED_OBJECT;
struct __midl_frag943_t;
struct _CROSS_CERT_DIST_POINTS_INFO;
struct _CRYPT_PROVIDER_REF;
struct __midl_frag1553_t;
struct _CMSG_SIGNED_ENCODE_INFO;
class CClassCache::CLSvrClassEntry::CFinishObject;
struct __midl_frag1679_t;
struct _CRYPT_TRUST_REG_ENTRY;
struct _CRYPT_REGISTER_ACTIONID;
class CNtfsStreamName;
struct __midl_frag1513_t;
class CSharedMemHeader;
struct __midl_frag884_t;
struct PPM_IDLESTATE_EVENT;
class CComRegCatalog;
struct _FILE_DIRECTORY_INFORMATION;
struct CREATE_USN_JOURNAL_DATA;
struct IActivationSecurityInfo;
struct __midl_frag163_t;
struct _SPC_IMAGE;
struct _CERT_REVOCATION_INFO;
struct IRpcHelper;
struct __midl_frag801_t;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
struct __midl_frag826_t;
struct tagMSGBOXPARAMSA;
struct _CM_PCCARD_DEVICE_DATA;
struct __midl_frag1386_t;
struct tagEMRGLSRECORD;
struct _OPEN_PRINTER_PROPS_INFOA;
struct tagLOCALESIGNATURE;
struct __midl_frag1114_t;
struct __midl_frag519_t;
struct tagXAptCallback;
struct _APP_COMPAT_INFO;
struct _PROCESS_SESSION_INFORMATION;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR;
struct _SYSTEM_DEVICE_INFORMATION;
struct IRpcSyntaxNegotiate;
struct tagBITMAPFILEHEADER;
struct _ldiv_t;
struct _NDR64_EXPR_CONST64;
struct __midl_frag886_t;
struct IComProcessInfo3;
struct _SERVICE_DESCRIPTIONW;
struct _iobuf;
class CDlElement;
struct _tagHIT_LOGGING_INFO;
struct _CMC_RESPONSE_INFO;
struct IXMLDOMCDATASection;
struct tagEMREXTFLOODFILL;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _TEB_ACTIVE_FRAME_EX;
struct IMonikerVtbl;
struct tagContexts;
struct _CERT_POLICY95_QUALIFIER1;
class CMutexSem;
class CDebugChannelHook;
struct XLOCK_LEAF;
struct __midl_frag339_t;
struct _CMC_PEND_INFO;
struct _tagStartParam;
struct _QUERY_SERVICE_CONFIGA;
struct _LDT_ENTRY;
struct _ALPC_MESSAGE_ATTRIBUTES;
struct _PORT_DATA_INFORMATION;
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA;
struct IStandardActivator;
class CProcessExtensionTbl;
class CDefClient;
struct _customREMOTE_REQUEST_SCM_INFO;
struct ISynchronizeHandle;
struct PROCESSOR_IDLESTATE_POLICY;
struct _BCRYPT_PROVIDER_NAME;
struct pvalueW;
struct ISCMLocalActivator;
struct __midl_frag896_t;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct _FILE_PIPE_PEEK_BUFFER;
struct _custmact_MIDL_TYPE_FORMAT_STRING;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct _OCSP_REQUEST_ENTRY;
struct tagStdReleaseData;
struct _MUTANT_OWNER_INFORMATION;
struct PPM_WMI_PERF_STATES;
struct tagCONTROLINFO;
struct RPC_IF_ID_VECTOR;
struct ICatRegister;
struct _MINIDUMP_CALLBACK_OUTPUT;
struct _FILE_PREFETCH_EX;
struct STARTING_VCN_INPUT_BUFFER;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _FILE_PIPE_INFORMATION;
struct _MUICCHEADER;
struct provider_info;
struct _CRYPT_OBJID_TABLE;
struct SHELLHOOKINFO;
struct _CERT_USAGE_MATCH;
struct AsyncIAdviseSinkVtbl;
struct IMallocVtbl;
struct _SOURCEFILE;
class CRpcThread;
struct IPerPropertyBrowsing;
struct _CRYPT_ATTRIBUTE_TYPE_VALUE;
struct _SPC_INDIRECT_DATA_CONTENT;
struct __midl_frag10_t;
struct MFT_ENUM_DATA;
struct tagEMRGRADIENTFILL;
struct DISPATCH_CLIENT_FRAME;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
class CStaticWriteLock;
struct DISPATCH_INTERCEPTOR;
struct _IMAGEHLP_MODULEW64;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64;
class EventPoolEntry;
struct IEnumFORMATETC;
struct _SYSDBG_PHYSICAL;
struct _MINIDUMP_HANDLE_DATA_STREAM;
struct IUriContainer;
class COleCache::CCacheUnkImpl;
class COleCache::CAdviseSinkImpl;
class COleCache;
struct _CM_VIDEO_DEVICE_DATA;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _IMAGELIST;
class CThreadStack;
struct _TIMER_BASIC_INFORMATION;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct __midl_frag1518_t;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct PPM_SIMULATED_PROCESSOR_LOAD;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
class CComCatalog;
struct tm;
struct _PSFEATURE_CUSTPAPER;
struct tagEMRFORMAT;
struct HFONT__;
struct tagLOGBRUSH;
struct tagOIFI;
struct __midl_frag367_t;
struct tagORPCTHAT;
struct _UNIVERSAL_NAME_INFOA;
struct tagEMRSETMAPPERFLAGS;
class CRpcResolver;
struct tagCBT_CREATEWNDA;
struct _FILEMUIINFO;
struct _srgtprot_MIDL_TYPE_FORMAT_STRING;
class CPipeProxyImp;
class CMapStringToPtr;
struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION;
struct LockingStack<DISPATCH_SERVER_FRAME>;
struct _FILE_DISPOSITION_INFORMATION;
struct CMachineNamesHelper::_SBTOTAL;
struct _NDR64_FIX_ARRAY_HEADER_FORMAT;
struct __midl_frag194_t;
struct tagDRAWITEMSTRUCT;
class CStdWrapper;
struct tagGCP_RESULTSW;
class CRpcCall;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
struct tagACL_DESCRIPTOR;
struct _QUOTA_LIMITS_EX;
struct _CM_KEYBOARD_DEVICE_DATA;
struct ReportedExceptions;
class CRefMutexAutoLock;
struct IPipeByte;
struct __midl_frag282_t;
struct __midl_frag5_t;
struct _CM_SONIC_DEVICE_DATA;
class CEnumSTATPROPSTG;
struct NTFS_VOLUME_DATA_BUFFER;
struct POWER_STATE_HANDLER;
struct IRpcChannelBufferVtbl;
struct _LDBL12;
struct __midl_frag1512_t;
class SerializedPropertyReader;
struct _LDR_VERIFY_IMAGE_INFO;
struct _REMOTE_REPLY_SCM_INFO;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
struct tagSSID_IDENTIFIER_AUTHORITY;
struct tagINTERFACEINFO;
struct __s_GUID;
struct _DSA;
class _bstr_t;
class XIPersistFile;
struct _NAPDATA;
class CProcessSecret;
struct tagRemSNB;
class CRefStabilize;
struct __midl_frag181_t;
struct FILE_ID_DESCRIPTOR;
struct tagNC_ADDRESS;
struct _PRIV_SCM_INFO;
struct IStorageVtbl;
class CHwnd;
struct ICallIndirect;
struct __midl_frag4_t;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _SYSDBG_TRIAGE_DUMP;
class CClassCache::CDllAptEntry;
struct __midl_frag122_t;
struct _HOSTNAMES;
struct _METADC;
struct _METAINFO;
struct SIP_INDIRECT_DATA_;
struct __midl_frag288_t;
struct __midl_frag1071_t;
struct _IMAGEHLP_LINEW64;
struct tagOLEVERB;
struct _MINIDUMP_USER_STREAM_INFORMATION;
struct _REMOTE_NAME_INFOA;
struct ICacheRefresh;
struct __midl_frag38_t;
class HashInt;
class CPointerHashTable;
struct FMTCACHE;
struct _SECURITY_ADVANCED_QUALITY_OF_SERVICE;
struct __midl_frag46_t;
struct _CRYPT_PROVIDER_DEFUSAGE;
struct _TOKEN_ACCESS_INFORMATION;
struct FMT;
struct _COMPRESSED_DATA_INFO;
struct _EISA_PORT_CONFIGURATION;
struct _CM_EISA_FUNCTION_INFORMATION;
struct __midl_frag1444_t;
union CRWLock::GetPoolEntry::__l2::EventStatePoolEntry;
struct _SPC_PE_IMAGE_DATA;
struct _MINIDUMP_MEMORY_LIST;
struct __midl_frag348_t;
struct IImageList;
class CDocfileStreamName;
struct _RTL_STACK_CONTEXT;
struct _CRT_CRITICAL_SECTION_DEBUG;
struct __midl_frag1330_t;
struct _KEY_FLAGS_INFORMATION;
struct _SHFILEINFOA;
struct HHOOK__;
class AllocationWrapper;
struct IZoneIdentifier;
class ostream_withassign;
struct IPersist;
class CSeekPointer;
struct _stat64i32;
struct _ACTRL_ACCESS_ENTRY_LISTW;
struct __midl_frag210_t;
struct _SRCCODEINFOW;
struct CStdMarshal::DiscSinkNode;
struct IQuickActivate;
class CLinkable;
struct tagPROPBAG2;
struct IOleControl;
class CRpcOptions;
struct tagLICINFO;
class CStdMarshal;
class CSCMergedEnum<IEnumGUID,_GUID>;
struct SMultiGUIDHashNode;
struct _TAPE_GET_POSITION;
struct _TAPE_ERASE;
struct tagCAUUID;
struct IRCEntry;
struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT;
struct _SPC_STATEMENT_TYPE;
struct IPersistPropertyBag2;
class CRefCache;
struct tagPICTDESC;
struct __midl_frag114_t;
struct _SPC_SP_OPUS_INFO;
struct __midl_frag123_t;
struct _TAPE_CREATE_PARTITION;
struct tagCONNECTDATA;
struct tagExtentInfo;
struct tagPOINTF;
struct __midl_frag1417_t;
struct __midl_frag86_t;
struct IFontEventsDisp;
struct __midl_frag278_t;
struct tagCALPOLESTR;
struct __midl_frag1109_t;
struct _MINIDUMP_EXCEPTION;
struct MINIDUMP_EXCEPTION_STREAM;
struct tagXCtxWrapperData;
struct tagAspectInfo;
struct tagCADWORD;
struct _CMC_DATA_INFO;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct tagFONTDESC;
struct _NDR64_VAR_ARRAY_HEADER_FORMAT;
struct __midl_frag1779_t;
struct ObjectSplayNode;
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
struct _PERFINFO_GROUPMASK;
struct IProvideClassInfo;
class CDataAdviseCache;
struct __midl_frag961_t;
struct __midl_frag1349_t;
struct __midl_frag1473_t;
class CSimpStreamOpen;
class CDfNameList;
class CDestObjectWrapper;
struct _BCRYPT_DH_KEY_BLOB;
class CPropSetName;
class CMStream;
class CAsyncUnknownMgr;
struct __midl_frag543_t;
class CFileMonikerFactory;
struct __midl_frag1522_t;
struct __midl_frag1057_t;
union WireThis;
struct __midl_frag680_t;
struct SDeltaBlock;
struct _ACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION;
struct _CRYPT_PASSWORD_CREDENTIALSA;
class Windows::Auto<_LUNICODE_STRING>;
struct __midl_frag1079_t;
struct tagKNOWNFOLDER_DEFINITION;
struct CSimpStorage;
class PSStream;
struct Windows::Rtl::IRtlObject;
struct __midl_frag624_t;
struct __midl_frag89_t;
class CStackBuffer;
struct __MIDL_ICallFrame_0001;
struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE;
class CMallocBased;
class CLocalAlloc;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnTypeConst;
struct tagFORMATIDOFFSET;
struct __midl_frag1390_t;
struct tagPROPERTYSETHEADER;
struct __midl_frag870_t;
struct tagPROPERTYSECTIONHEADER;
class CException;
struct __midl_frag1793_t;
struct _BCRYPT_RNG_FUNCTION_TABLE;
class CExceptionContext;
struct CStdWrapper::Deactivate::__l3::tagServerRefs;
struct __midl_frag211_t;
class CApartmentHashTable;
class CPatternTbl;
struct __midl_frag638_t;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
class CCompositeMoniker;
struct _MINIDUMP_THREAD_INFO_LIST;
struct _CERT_REVOCATION_CRL_INFO;
struct __midl_frag1029_t;
struct _CRL_CONTEXT;
struct tagSTREAM_SID;
struct _CRL_INFO;
class CScmPatternTbl;
struct __midl_frag1041_t;
struct _CRYPT_PROVIDER_REG;
struct _CRYPT_IMAGE_REG;
struct __midl_frag66_t;
struct __midl_frag714_t;
struct _CRYPT_KEY_PROV_PARAM;
struct __midl_frag1702_t;
struct _BCRYPT_KEY_BLOB;
struct __midl_frag310_t;
struct _CTL_USAGE_MATCH;
struct _NCRYPT_KEY_STORAGE_FUNCTION_TABLE;
struct __midl_frag711_t;
struct __midl_frag1610_t;
struct __midl_frag397_t;
struct __midl_frag12_t;
struct __midl_frag178_t;
class CClassCache::CClassEntry;
struct __midl_frag1026_t;
struct _CRYPT_CONTENT_INFO;
struct __midl_frag1685_t;
struct __midl_frag390_t;
struct _CERT_EXTENSIONS;
struct __midl_frag216_t;
struct __midl_frag853_t;
struct _HTTPSPolicyCallbackData;
struct __midl_frag1560_t;
struct _OCSP_REQUEST_INFO;
struct __midl_frag641_t;
struct _NDR64_SIMPLE_REGION_FORMAT;
struct HREG;
class CComCat::CInnerUnk;
struct MD_METHOD;
struct IRunningObjectTableVtbl;
struct __midl_frag1825_t;
struct _NCryptAlgorithmName;
class CSafeStgMarshaled;
struct __midl_frag81_t;
struct _CRYPT_CONTEXT_CONFIG;
struct _CMSG_ENCRYPTED_ENCODE_INFO;
struct _BCryptBufferDesc;
class CAsyncConnection;
struct __midl_frag224_t;
struct _BCryptBuffer;
struct __midl_frag773_t;
struct LEGACY_INTERCEPTOR;
struct __midl_frag1047_t;
struct IConnectionPointContainerVtbl;
struct LocalThis;
struct DedicatedAllocator<CallFrame>;
struct IOlePresObj;
struct tagProxyFileInfo;
struct _CERT_POLICIES_INFO;
struct SSimpleWalker;
struct _CERT_PHYSICAL_STORE_INFO;
struct _CRYPT_RETRIEVE_AUX_INFO;
struct __midl_frag880_t;
struct _CTL_INFO;
struct __midl_frag1455_t;
struct _CTL_ENTRY;
class COIDTable;
struct _CERT_POLICY_QUALIFIER_USER_NOTICE;
class CAuthInfo;
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
class CRIFTable;
struct __midl_frag1619_t;
struct _CERT_LOGOTYPE_IMAGE_INFO;
struct _CERT_LOGOTYPE_AUDIO;
struct tagMethodInfo;
class CBasedDocFilePtr;
class CPubDocFile;
struct _CERT_LOGOTYPE_AUDIO_INFO;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>;
struct _CERT_OTHER_NAME;
struct __midl_frag1212_t;
struct _CMC_TAGGED_ATTRIBUTE;
struct _CMC_ADD_ATTRIBUTES_INFO;
class CSafeBindCtx;
struct _CRYPT_SMIME_CAPABILITIES;
struct CStdMarshal::Reactivate::__l3::tagServerRefs;
struct __midl_frag627_t;
struct _CRYPT_SMIME_CAPABILITY;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;
struct FORMATETCDATAARRAY32;
struct _CRYPT_PROPERTY_REF;
struct SMIPIDHashNode;
struct _DSSSEED;
struct _PUBKEYVER3;
class CRotMonikerEnum;
struct _CERT_LDAP_STORE_OPENED_PARA;
struct NCryptProviderName;
class CContext;
struct _CERT_BIOMETRIC_DATA;
struct DISABLED_FEATURES;
struct _CMS_DH_KEY_INFO;
class CDFBasis;
struct __midl_frag49_t;
struct IOrpcDebugNotifyVtbl;
struct _CMC_ADD_EXTENSIONS_INFO;
struct _CRYPT_RC2_CBC_PARAMETERS;
struct __midl_frag52_t;
struct _CERT_FORTEZZA_DATA_PROP;
class CLock2;
struct __midl_frag1087_t;
struct _PUBKEY;
struct IMarshalSomeone;
struct _CMSG_CONTENT_ENCRYPT_INFO;
struct _CMSG_RECIPIENT_ENCODE_INFO;
struct __midl_frag340_t;
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
struct __midl_frag1494_t;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
struct __NCRYPT_UI_POLICY_BLOB;
struct _CERT_PRIVATE_KEY_VALIDITY;
struct _CERT_X942_DH_PARAMETERS;
class CExpParameterValidate;
struct __midl_frag757_t;
struct _CERT_X942_DH_VALIDATION_PARAMS;
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION;
struct _OCSP_BASIC_REVOKED_INFO;
struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>;
struct _CRYPT_DES_KEY_STATE;
struct tagIFaceSvrRefs;
struct _CMSG_CTRL_DECRYPT_PARA;
struct _CERT_POLICY_QUALIFIER_INFO;
struct _NDR64_USER_MARSHAL_FORMAT;
struct __midl_frag1796_t;
struct __BCRYPT_KEY_LENGTHS_STRUCT;
struct __NCRYPT_SUPPORTED_LENGTHS;
class CBlockHeader;
struct tagDDECALLDATA;
class GenericInstantiator<DISPATCH_INTERCEPTOR>;
struct __midl_frag188_t;
struct _CERT_POLICY_MAPPING;
struct __midl_frag298_t;
struct _CRYPT_CONTEXT_FUNCTION_CONFIG;
struct _CRYPT_RSA_SSA_PSS_PARAMETERS;
struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
struct _CRL_FIND_ISSUED_FOR_PARA;
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
struct _CERT_AUTHORITY_INFO_ACCESS;
struct IEnumConnectionPointsVtbl;
struct __midl_frag1529_t;
struct _CERT_GENERAL_SUBTREE;
struct __midl_frag1664_t;
struct __midl_frag387_t;
struct _CERT_CHAIN_POLICY_PARA;
struct _CMC_TAGGED_REQUEST;
struct INTERPRETER_FLAGS;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnType;
struct _CMS_KEY_INFO;
struct _SQM_STREAM_ENTRY;
struct _CRYPTNET_URL_CACHE_FLUSH_INFO;
struct _CRYPT_RSAES_OAEP_PARAMETERS;
class CTransactedStream;
struct _prop_MIDL_EXPR_FORMAT_STRING;
struct _CERT_AUTHORITY_KEY_ID2_INFO;
struct _CRYPT_CONTEXT_FUNCTIONS;
class CDwordBag;
struct _CRYPT_VERIFY_MESSAGE_PARA;
struct SHA256_CTX;
struct _CERT_CHAIN_PARA;
struct __midl_frag1432_t;
struct __midl_frag554_t;
class CSpyTable;
class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUTF8_STRING> >;
struct DedicatedAllocator<DISPATCH_SERVER_FRAME>;
struct __midl_frag1640_t;
struct __midl_frag1612_t;
struct __midl_frag45_t;
struct __midl_frag227_t;
struct _BCRYPT_CIPHER_FUNCTION_TABLE;
struct __midl_frag206_t;
struct __midl_frag51_t;
struct _CMSG_HASHED_ENCODE_INFO;
struct _CRYPT_BLOB_ARRAY;
struct __midl_frag1695_t;
struct SFreeBlock;
struct tagCATEGORYINFO;
struct _CERT_REVOCATION_STATUS;
struct _RSAPUBKEY;
struct _EVENT_TRACE_PROPERTIES;
struct _CMSG_SP3_COMPATIBLE_AUX_INFO;
struct _CERT_DH_PARAMETERS;
struct _CRYPT_PKCS8_EXPORT_PARAMS;
struct __midl_frag1136_t;
struct __midl_frag629_t;
struct _PROV_ENUMALGS;
struct _CRL_ISSUING_DIST_POINT;
struct _CERT_KEY_USAGE_RESTRICTION_INFO;
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
struct _PRIVKEYVER3;
struct _CRL_DIST_POINT;
struct _CMSG_STREAM_INFO;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnType;
struct _CERT_KEY_ATTRIBUTES_INFO;
struct tagDDEDISPATCHDATA;
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
struct _CRL_REVOCATION_INFO;
struct _ROOT_INFO_LUID;
struct _CRYPT_SMART_CARD_ROOT_INFO;
class C2Security;
class CArray<CFormatEtc>;
struct MD_PARAM;
struct _CRYPTPROTECT_PROMPTSTRUCT;
struct __midl_frag88_t;
struct __midl_frag34_t;
struct IOlePackagerLinkNotify;
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
struct _CRYPT_X942_OTHER_INFO;
struct _CMC_TAGGED_OTHER_MSG;
struct _CPS_URLS;
class CWrappedDocFile;
struct _OLETARGETDEVICE;
class CsCatInfo;
struct INFO;
struct __NCRYPT_UI_POLICY;
struct __midl_frag365_t;
struct _CRYPT_URL_INFO;
class CDirectStream;
class Windows::Lock<_RTL_CRITICAL_SECTION>;
struct _ACTRL_PROPERTY_ENTRYW;
struct __midl_frag105_t;
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
struct tagDOCDISPATCHDATA;
struct _CMSG_MAIL_LIST_RECIPIENT_INFO;
class MapEnumToSQMData<enum Ole32SQMFlags>;
struct _CRYPT_CONTEXTS;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnTypeConst;
struct __midl_frag87_t;
class CMonikerBag;
struct SNameKey;
struct IFileLockBytes;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnType;
struct LockingStack<CallFrame>;
class CSessionMoniker;
class CUnwindable;
struct InFrame;
struct __midl_frag281_t;
struct _SYMBOL_INFO_PACKAGE;
struct _MINIDUMP_HEADER;
struct __midl_frag270_t;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64;
struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
struct __midl_frag698_t;
struct __midl_frag220_t;
struct _IMAGEHLP_SYMBOL64;
struct _CAT_MEMBERINFO;
struct __midl_frag277_t;
struct _MINIDUMP_STRING;
struct __midl_frag40_t;
struct WINTRUST_BLOB_INFO_;
struct _CRYPT_PROVIDER_DATA;
struct tagXAptAddRefData;
struct __midl_frag1488_t;
struct A_SHA_CTX;
struct __midl_frag268_t;
struct WINTRUST_CERT_INFO_;
struct __midl_frag1149_t;
struct __midl_frag1694_t;
struct __midl_frag611_t;
struct __midl_frag161_t;
struct _CRYPT_PROVIDER_PRIVDATA;
struct __midl_frag254_t;
struct __midl_frag1335_t;
struct __midl_frag261_t;
struct _CRYPT_PROVUI_DATA;
struct __midl_frag749_t;
struct SIP_DISPATCH_INFO_;
struct SIP_SUBJECTINFO_;
struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA;
struct __midl_frag1312_t;
struct SPC_SIGINFO_;
struct __midl_frag745_t;
struct _IMAGEHLP_CBA_READ_MEMORY;
struct SDfMarshalPacket;
struct CClassCache::ReleaseCatalogObjects::__l2::STmpCI;
struct _SPC_FINANCIAL_CRITERIA;
struct _IMAGEHLP_STACK_FRAME;
struct __midl_frag1801_t;
struct _IMAGEHLP_LINE64;
struct _MnkEqBuf;
struct _MINIDUMP_USER_RECORD;
struct _MINIDUMP_THREAD_LIST;
struct tagTLSMapEntry;
struct __midl_frag1873_t;
struct _NDR64_CONSTANT_IID_FORMAT;
struct SPC_LINK_;
struct __midl_frag697_t;
struct _IMAGEHLP_CBA_EVENT;
struct __midl_frag356_t;
struct _MINIDUMP_UNLOADED_MODULE;
struct __midl_frag232_t;
struct __midl_frag151_t;
struct _IMAGEHLP_SYMBOL64_PACKAGE;
struct _MINIDUMP_THREAD_INFO;
struct __midl_frag572_t;
struct _MINIDUMP_LOCATION_DESCRIPTOR64;
struct PICTINFO;
class CRtlSmartUcsEncoderTraits<_LUNICODE_STRING>;
struct API_VERSION;
class CPropertySetStream;
struct __midl_frag1451_t;
struct __midl_frag958_t;
struct tagSTREAM_HEADER;
struct tagPROPERTY_INFORMATION;
struct __midl_frag1226_t;
struct HSZ__;
struct __midl_frag376_t;
struct tagMONMSGSTRUCT;
struct __midl_frag1353_t;
struct tagMONERRSTRUCT;
struct __midl_frag503_t;
struct tagMONHSZSTRUCTA;
struct __midl_frag985_t;
struct HDDEDATA__;
struct tagMONCONVSTRUCT;
struct __midl_frag602_t;
struct __midl_frag1670_t;
class NuSafeNtHandle;
struct IInstantiationInfo;
struct _mega_MIDL_EXPR_FORMAT_STRING;
struct __midl_frag1161_t;
class HashGUID;
struct __midl_frag1686_t;
struct __midl_frag1649_t;
struct __midl_frag652_t;
struct __midl_frag582_t;
class CBindCtx::CObjList;
struct __midl_frag463_t;
class CEnumFormatEtc;
struct _RevokeClasses;
struct __midl_frag383_t;
struct __midl_frag395_t;
struct tagSRVRDISPATCHDATA;
struct __midl_frag818_t;
struct __MIDL_ILocalObjectExporter_0002;
struct _MonikerWriteStruct;
struct _callframeinternal_MIDL_TYPE_FORMAT_STRING;
struct tagRECT16;
struct _RTL_VERIFIER_THUNK_DESCRIPTOR;
struct IEnumCallback;
struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64;
struct tagXAptQIData;
class CDropTarget;
struct __midl_frag574_t;
class ComVerifierSettings;
struct __midl_frag548_t;
class CPIDTable;
class CEffPermsCacheLUID;
struct std::nothrow_t;
struct __midl_frag612_t;
struct _customREMOTE_REPLY_SCM_INFO;
struct __midl_frag132_t;
struct __midl_frag456_t;
class CAsyncConnectionContainer;
struct __midl_frag1763_t;
class CConnectionPoint;
class CSinkList;
struct __midl_frag144_t;
struct __midl_frag678_t;
struct __midl_frag1426_t;
struct __midl_frag1032_t;
struct __midl_frag265_t;
struct FRAME_GetTypeInfoCount;
struct _CLINFO;
struct __midl_frag1363_t;
struct __midl_frag306_t;
struct __midl_frag1358_t;
class IFaceEntry;
struct __midl_frag289_t;
struct tagPIDData;
struct tagSQIResult;
struct tagQICONTEXT;
struct __midl_frag487_t;
class CEventCache;
struct __MIDL_ILocalObjectExporter_0004;
struct __midl_frag1346_t;
struct __midl_frag1457_t;
class CFastBH;
struct tagPCB;
class COAccessControl::CImpAccessControl;
struct _acpickl_MIDL_TYPE_FORMAT_STRING;
struct __midl_frag242_t;
struct __midl_frag209_t;
struct SAFEARRAY_INTERNAL;
struct DDEPOKE;
class CEndpointsTable;
struct _TRUSTEE_W;
struct _ACTRL_ACCESS_ENTRYW;
struct SPermissionHeader;
struct _ACTRL_ALISTW;
class CTmpMkEqBuf;
struct MEMSTM;
struct _INSTALLDATA;
class AppRegistration;
class CDragDefaultCursors;
class BUCL::CDequeBase;
struct CClassCache::SDPEHashKey;
class CCtxTable;
struct STblHdr;
class CUserMarshalInfo;
struct tagWIN16BITMAP;
struct tagEntryHeader;
struct IDropSourceQueryEx;
class CompObjStmData;
struct SHookList;
struct _RTL_UCSCHAR_DECODER_RETURN_VALUE;
class BUCL::CByteAllocator;
class Windows::Rtl::CRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
class Windows::Rtl::CriticalSectionLock;
struct Windows::Rtl::IRtlFormattableObject::FormattingLevels;
class Windows::Rtl::CStringTraitsBase;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnTypeConst;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnTypeConst;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>;
struct SHA512_CTX;
struct tagOLEMENU;
struct __midl_frag640_t;
struct _scm_MIDL_TYPE_FORMAT_STRING;
struct _orcb_MIDL_PROC_FORMAT_STRING;
struct _orcb_MIDL_TYPE_FORMAT_STRING;
class CClientContextActivator;
struct __midl_frag436_t;
struct __midl_frag1067_t;
struct __midl_frag810_t;
struct __midl_frag679_t;
struct __midl_frag1298_t;
struct __midl_frag1677_t;
struct __midl_frag473_t;
struct __midl_frag1476_t;
struct __midl_frag1480_t;
struct __midl_frag103_t;
struct __midl_frag1434_t;
struct _NDR64_RANGE_FORMAT;
struct __midl_frag945_t;
struct __midl_frag1675_t;
struct __midl_frag13_t;
struct __midl_frag1031_t;
struct __midl_frag683_t;
struct __midl_frag1807_t;
struct __midl_frag1310_t;
struct __midl_frag716_t;
struct __midl_frag973_t;
struct __midl_frag637_t;
struct __midl_frag707_t;
struct __midl_frag1177_t;
struct __midl_frag516_t;
struct __midl_frag362_t;
struct __midl_frag1827_t;
struct __midl_frag1613_t;
struct __midl_frag59_t;
struct __midl_frag702_t;
struct __midl_frag1437_t;
struct __midl_frag42_t;
struct __midl_frag1818_t;
struct __midl_frag821_t;
struct __midl_frag1862_t;
struct __midl_frag1606_t;
struct __midl_frag873_t;
struct __midl_frag1107_t;
struct __midl_frag634_t;
struct __midl_frag1152_t;
struct __midl_frag1078_t;
struct __midl_frag1322_t;
struct __midl_frag1083_t;
struct __midl_frag319_t;
struct __midl_frag266_t;
struct __midl_frag894_t;
struct __midl_frag428_t;
struct __midl_frag1033_t;
struct __midl_frag1192_t;
struct __midl_frag1170_t;
struct __midl_frag398_t;
struct __midl_frag482_t;
struct __midl_frag643_t;
struct __midl_frag1663_t;
struct __midl_frag1853_t;
struct __midl_frag53_t;
struct __midl_frag1423_t;
struct __midl_frag737_t;
struct __midl_frag1140_t;
struct __midl_frag1831_t;
struct __midl_frag17_t;
struct __midl_frag1822_t;
struct __midl_frag1448_t;
struct __midl_frag173_t;
struct __midl_frag355_t;
struct __midl_frag1592_t;
struct __midl_frag781_t;
struct __midl_frag1688_t;
struct __midl_frag705_t;
struct __midl_frag466_t;
struct __midl_frag1563_t;
struct __midl_frag280_t;
struct __midl_frag1719_t;
struct __midl_frag360_t;
struct __midl_frag843_t;
struct __midl_frag202_t;
struct __midl_frag1343_t;
struct __midl_frag1629_t;
struct __midl_frag1713_t;
struct __midl_frag1121_t;
struct __midl_frag349_t;
struct __midl_frag1049_t;
struct __midl_frag696_t;
struct __midl_frag1524_t;
struct __midl_frag1166_t;
struct __midl_frag1070_t;
struct __midl_frag875_t;
struct __midl_frag373_t;
struct __midl_frag840_t;
struct __midl_frag1469_t;
struct __midl_frag1832_t;
struct __midl_frag911_t;
struct __midl_frag657_t;
struct __midl_frag135_t;
struct __midl_frag308_t;
struct __midl_frag331_t;
struct __midl_frag1256_t;
struct __midl_frag929_t;
struct __midl_frag187_t;
struct __midl_frag1021_t;
struct __midl_frag661_t;
struct __midl_frag191_t;
struct __midl_frag1040_t;
struct __midl_frag1733_t;
struct __midl_frag1294_t;
struct __midl_frag509_t;
struct __midl_frag668_t;
struct __midl_frag743_t;
struct __midl_frag18_t;
struct __midl_frag336_t;
struct __midl_frag402_t;
struct __midl_frag1085_t;
struct __midl_frag1653_t;
struct __midl_frag1544_t;
struct __midl_frag1697_t;
struct __midl_frag1698_t;
struct __midl_frag1747_t;
struct __midl_frag1506_t;
struct __midl_frag1278_t;
struct __midl_frag790_t;
struct __midl_frag970_t;
struct __midl_frag571_t;
struct __midl_frag1666_t;
struct __midl_frag1022_t;
struct __midl_frag715_t;
struct __midl_frag534_t;
struct __midl_frag834_t;
struct __midl_frag755_t;
struct __midl_frag1588_t;
struct __midl_frag976_t;
struct __midl_frag1117_t;
struct __midl_frag1102_t;
struct __midl_frag978_t;
struct __midl_frag1095_t;
struct __midl_frag1379_t;
struct __midl_frag735_t;
struct __midl_frag491_t;
struct __midl_frag56_t;
struct __midl_frag1214_t;
struct __midl_frag598_t;
struct __midl_frag1680_t;
struct __midl_frag238_t;
struct __midl_frag407_t;
struct __midl_frag1338_t;
struct __midl_frag529_t;
struct __midl_frag908_t;
struct __midl_frag112_t;
struct __midl_frag1709_t;
struct __midl_frag1410_t;
struct __midl_frag1209_t;
struct __midl_frag989_t;
struct __midl_frag1116_t;
struct __midl_frag763_t;
struct __midl_frag499_t;
struct __midl_frag1828_t;
struct __midl_frag725_t;
struct __midl_frag1301_t;
struct __midl_frag1248_t;
struct __midl_frag991_t;
struct __midl_frag24_t;
struct __midl_frag1013_t;
struct __midl_frag65_t;
struct __midl_frag864_t;
struct __midl_frag579_t;
struct __midl_frag1012_t;
struct __midl_frag492_t;
struct __midl_frag1296_t;
struct __midl_frag1816_t;
struct __midl_frag1069_t;
struct __midl_frag1769_t;
struct __midl_frag1051_t;
struct __midl_frag567_t;
struct __midl_frag1492_t;
struct __midl_frag1645_t;
struct __midl_frag862_t;
struct __midl_frag61_t;
struct __midl_frag1647_t;
struct __midl_frag848_t;
struct __midl_frag1231_t;
struct __midl_frag1242_t;
struct __midl_frag1705_t;
struct __midl_frag708_t;
struct __midl_frag693_t;
struct __midl_frag1228_t;
struct __midl_frag1833_t;
struct __midl_frag1372_t;
struct __midl_frag608_t;
struct __midl_frag1413_t;
struct __midl_frag346_t;
struct __midl_frag523_t;
struct __midl_frag1275_t;
struct __midl_frag829_t;
struct __midl_frag1814_t;
struct __midl_frag119_t;
struct __midl_frag168_t;
struct __midl_frag759_t;
struct __midl_frag213_t;
struct __midl_frag1672_t;
struct __midl_frag384_t;
struct __midl_frag981_t;
struct __midl_frag1599_t;
struct __midl_frag485_t;
struct __midl_frag455_t;
struct __midl_frag588_t;
struct __midl_frag1809_t;
struct __midl_frag1098_t;
struct __midl_frag605_t;
struct __midl_frag1496_t;
struct __midl_frag1641_t;
struct __midl_frag76_t;
struct __midl_frag1263_t;
struct __midl_frag329_t;
struct __midl_frag1569_t;
struct __midl_frag392_t;
struct __midl_frag1064_t;
struct __midl_frag949_t;
struct __midl_frag607_t;
struct __midl_frag883_t;
struct __midl_frag1203_t;
struct __midl_frag733_t;
struct __midl_frag1774_t;
struct __midl_frag563_t;
struct __midl_frag1656_t;
struct __midl_frag993_t;
struct __midl_frag647_t;
struct __midl_frag639_t;
struct __midl_frag320_t;
struct __midl_frag467_t;
struct _mega_MIDL_TYPE_FORMAT_STRING;
struct __midl_frag98_t;
struct __midl_frag934_t;
struct __midl_frag914_t;
struct __midl_frag581_t;
struct __midl_frag799_t;
struct __midl_frag55_t;
struct __midl_frag1482_t;
struct __midl_frag1190_t;
struct __midl_frag1718_t;
struct __midl_frag573_t;
struct __midl_frag1609_t;
struct __midl_frag1635_t;
struct __midl_frag1578_t;
struct __midl_frag765_t;
struct __midl_frag101_t;
struct __midl_frag1490_t;
struct __midl_frag315_t;
struct __midl_frag1690_t;
struct __midl_frag1038_t;
struct __midl_frag1059_t;
struct __midl_frag1089_t;
struct __midl_frag412_t;
struct __midl_frag1527_t;
struct __midl_frag1611_t;
struct __midl_frag804_t;
struct __midl_frag405_t;
struct __midl_frag686_t;
struct __midl_frag794_t;
struct __midl_frag454_t;
struct __midl_frag675_t;
struct __midl_frag913_t;
struct __midl_frag1714_t;
struct __midl_frag1646_t;
struct __midl_frag102_t;
struct __midl_frag1821_t;
struct __midl_frag1399_t;
struct __midl_frag1105_t;
struct __midl_frag199_t;
struct __midl_frag891_t;
struct __midl_frag58_t;
struct __midl_frag922_t;
struct __midl_frag71_t;
struct __midl_frag326_t;
struct __midl_frag558_t;
struct __midl_frag1742_t;
struct __midl_frag666_t;
struct __midl_frag68_t;
struct __midl_frag1045_t;
struct __midl_frag1287_t;
struct __midl_frag775_t;
struct __midl_frag1703_t;
struct __midl_frag338_t;
struct __midl_frag769_t;
struct __midl_frag427_t;
struct __midl_frag614_t;
struct __midl_frag7_t;
struct __midl_frag1836_t;
struct __midl_frag729_t;
struct __midl_frag109_t;
struct __midl_frag1754_t;
struct __midl_frag422_t;
struct __midl_frag527_t;
struct __midl_frag1325_t;
struct __midl_frag1584_t;
struct __midl_frag16_t;
struct __midl_frag1716_t;
struct __midl_frag1237_t;
struct __midl_frag1797_t;
struct __midl_frag1819_t;
struct __midl_frag901_t;
struct __midl_frag1076_t;
struct __midl_frag1669_t;
struct __midl_frag1367_t;
struct __midl_frag1778_t;
struct __midl_frag246_t;
struct __midl_frag104_t;
struct __midl_frag1781_t;
struct __midl_frag341_t;
struct __midl_frag1090_t;
struct __midl_frag1052_t;
struct __midl_frag321_t;
struct __midl_frag19_t;
struct __midl_frag1014_t;
struct IConnectionPointVtbl;
struct IBindCtxVtbl;
struct IEnumUnknownVtbl;
struct IEnumStringVtbl;
struct IAdviseSinkVtbl;
struct IEnumConnectionsVtbl;
struct ISequentialStreamVtbl;
struct IEnumOLEVERBVtbl;
struct __midl_frag1034_t;
struct __midl_frag1110_t;
struct IEnumSTATSTGVtbl;
struct ILockBytesVtbl;
struct IDataObjectVtbl;
struct IEnumSTATDATAVtbl;
struct __midl_frag865_t;
struct IEnumMonikerVtbl;
struct IStreamVtbl;
struct __midl_frag1072_t;
struct IEnumFORMATETCVtbl;
class CEndPointAtom;
struct IInterfaceFromWindowProp;
class CPrivDragDrop;
struct SDDInfo;
struct _MonikerReadStruct;
struct ENTRY;
struct VerifierThreadState;
struct _callframeinternal_MIDL_PROC_FORMAT_STRING;
struct ITypeLibVtbl;
struct ITypeCompVtbl;
struct ITypeInfoVtbl;
struct IRecordInfoVtbl;
struct IDispatchVtbl;
struct _PEB_FREE_BLOCK;
union __m128;
struct _prop_MIDL_PROC_FORMAT_STRING;
struct __midl_frag26_t;
struct HMACSHA_CTX;
struct __midl_frag363_t;
struct __midl_frag291_t;
struct __midl_frag166_t;
struct __midl_frag431_t;
struct _prop_MIDL_TYPE_FORMAT_STRING;
struct __midl_frag296_t;
struct __midl_frag226_t;
struct __midl_frag54_t;
struct __midl_frag221_t;
struct __midl_frag83_t;
struct __midl_frag257_t;
struct __midl_frag258_t;
struct __midl_frag36_t;
struct __midl_frag234_t;
struct __midl_frag100_t;
struct __midl_frag260_t;
struct __midl_frag186_t;
struct __midl_frag125_t;
struct __midl_frag263_t;
struct __midl_frag250_t;
struct __midl_frag252_t;
struct __midl_frag378_t;
struct __midl_frag301_t;
struct __midl_frag255_t;
struct __midl_frag247_t;
struct __midl_frag457_t;
struct __midl_frag253_t;
struct __midl_frag248_t;
struct __midl_frag269_t;
struct __midl_frag295_t;
struct __midl_frag225_t;
struct __midl_frag25_t;
struct __midl_frag230_t;
struct __midl_frag285_t;
struct __midl_frag415_t;
struct __midl_frag215_t;
struct __midl_frag193_t;
struct __midl_frag366_t;
struct __midl_frag480_t;
struct __midl_frag274_t;
struct __midl_frag50_t;
struct __midl_frag184_t;
struct __midl_frag450_t;
struct __midl_frag394_t;
struct __midl_frag217_t;
struct __midl_frag229_t;
struct __midl_frag236_t;
struct __midl_frag207_t;
struct __midl_frag272_t;
struct __midl_frag77_t;
struct __midl_frag385_t;
struct __midl_frag231_t;
struct __midl_frag200_t;
struct __midl_frag14_t;
struct __midl_frag400_t;
struct __midl_frag477_t;
struct __midl_frag290_t;
struct __midl_frag264_t;
struct __midl_frag48_t;
struct __midl_frag259_t;
struct __midl_frag251_t;
struct __midl_frag410_t;
struct __midl_frag449_t;
struct __midl_frag382_t;
struct __midl_frag391_t;
struct __midl_frag316_t;
struct __midl_frag303_t;
struct __midl_frag93_t;
struct __midl_frag80_t;
struct __midl_frag451_t;
struct __midl_frag441_t;
struct __midl_frag283_t;
struct __midl_frag57_t;
struct __midl_frag267_t;
struct __midl_frag79_t;
struct __midl_frag222_t;
struct __midl_frag262_t;
struct __midl_frag195_t;
struct __midl_frag388_t;
struct __midl_frag183_t;
struct __midl_frag212_t;
struct __midl_frag287_t;
struct __midl_frag438_t;
struct __midl_frag462_t;
struct __midl_frag420_t;
struct __midl_frag312_t;
struct __midl_frag418_t;
struct __midl_frag286_t;
struct __midl_frag39_t;
struct __midl_frag471_t;
struct __midl_frag311_t;
struct __midl_frag292_t;
struct __midl_frag472_t;
struct __midl_frag235_t;
struct __midl_frag32_t;
struct __midl_frag241_t;
struct __midl_frag237_t;
struct __midl_frag284_t;
struct __midl_frag239_t;
struct __midl_frag214_t;
struct __midl_frag276_t;
struct __midl_frag307_t;
struct __midl_frag92_t;
struct __midl_frag374_t;
struct __midl_frag305_t;
struct __midl_frag196_t;
struct __midl_frag293_t;
struct __midl_frag204_t;
struct __midl_frag85_t;
struct __midl_frag201_t;
struct _NDR64_NON_ENCAPSULATED_UNION;
struct __midl_frag15_t;
struct __midl_frag317_t;
struct __midl_frag460_t;
struct __midl_frag403_t;
struct __midl_frag297_t;
struct __midl_frag245_t;
struct __midl_frag294_t;
struct __midl_frag452_t;
class TStackBuffer<tagPROPVARIANT,64>;
struct tagSExtEntry;
struct tagRegIf;
struct RTL_FILTER_LUNICODE_STRING_FILTER;
struct RTL_FILTER_LUNICODE_STRING_CTX;
struct ICallFactoryVtbl;
class CEnumFmt;
class CEnumFmt10;
class CDelayUnlockContainer;
struct SNameHashNode;
struct EnumVerbCache;
struct VerbList;
struct IShellItem;
struct _RESOLVED_USERNAME_INFO;
struct _IMAGELISTDRAWPARAMS;
struct _IMAGEINFO;
struct CONFIRM_CONFLICT_ITEM;
struct _RESOLVED_USERNAME_LIST;
class TStackBuffer<unsigned long,64>;
struct SystemBlockHeader;
struct SystemPageEntry;
struct VtblSplayNode;
struct COM_CATALOG_CACHE_SECTION;
class CDAHolder;
class CEnumSTATDATA;
struct tagCFEntry;
class CStdClassFactory;
class CDefClassFactory;
class PMSIHANDLE;
class LockEntry;
struct Thread;
union CRWLock::ReleasePoolEntry::__l2::LockStatePoolEntry;
struct _PATCH_BUFFER;
struct OsFrame;
struct CsFrame;
union FT;
union __m64;
struct _GS_HANDLER_DATA;

enum tagExtendedErrorParamTypes
{
  eeptAnsiString = 1,
  eeptUnicodeString = 2,
  eeptLongVal = 3,
  eeptShortVal = 4,
  eeptPointerVal = 5,
  eeptNone = 6,
  eeptBinary = 7,
};

typedef struct _CLIENT_ID
{
  /* 0x0000 */ void* UniqueProcess;
  /* 0x0008 */ void* UniqueThread;
} CLIENT_ID, *PCLIENT_ID; /* size: 0x0010 */

typedef struct _PORT_MESSAGE
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ short DataLength;
        /* 0x0002 */ short TotalLength;
      } /* size: 0x0004 */ s1;
      /* 0x0000 */ unsigned long Length;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ short Type;
        /* 0x0006 */ short DataInfoOffset;
      } /* size: 0x0004 */ s2;
      /* 0x0004 */ unsigned long ZeroInit;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  union
  {
    /* 0x0008 */ struct _CLIENT_ID ClientId;
    /* 0x0008 */ double DoNotUseThisField;
  }; /* size: 0x0010 */
  /* 0x0018 */ unsigned long MessageId;
  /* 0x001c */ long Padding_0;
  union
  {
    /* 0x0020 */ unsigned __int64 ClientViewSize;
    struct
    {
      /* 0x0020 */ unsigned long CallbackId;
      /* 0x0024 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PORT_MESSAGE, *PPORT_MESSAGE; /* size: 0x0028 */

typedef struct _LPC_UNREGISTER_PROCESS_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ void* UniqueProcessId;
} LPC_UNREGISTER_PROCESS_MSG, *PLPC_UNREGISTER_PROCESS_MSG; /* size: 0x0030 */

enum tagAPTKIND
{
  APTKIND_NEUTRALTHREADED = 1,
  APTKIND_MULTITHREADED = 2,
  APTKIND_APARTMENTTHREADED = 4,
};

typedef enum __MIDL___MIDL_itf_objidl_0000_0047_0002
{
  COMGLB_EXCEPTION_HANDLE = 0,
  COMGLB_EXCEPTION_DONOT_HANDLE = 1,
} _MIDL___MIDL_itf_objidl_0000_0047_0002, *P_MIDL___MIDL_itf_objidl_0000_0047_0002;

struct IServerLocationInfo
{
}; /* size: 0x0008 */

typedef struct _LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} LUID, *PLUID; /* size: 0x0008 */

typedef struct _LUID_AND_ATTRIBUTES
{
  /* 0x0000 */ struct _LUID Luid;
  /* 0x0008 */ unsigned long Attributes;
} LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES; /* size: 0x000c */

typedef struct _PRIVILEGE_SET
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ unsigned long Control;
  /* 0x0008 */ struct _LUID_AND_ATTRIBUTES Privilege[1];
} PRIVILEGE_SET, *PPRIVILEGE_SET; /* size: 0x0014 */

struct ISerializableParent
{
}; /* size: 0x0008 */

typedef enum _BUS_DATA_TYPE
{
  ConfigurationSpaceUndefined = -1,
  Cmos = 0,
  EisaConfiguration = 1,
  Pos = 2,
  CbusConfiguration = 3,
  PCIConfiguration = 4,
  VMEConfiguration = 5,
  NuBusConfiguration = 6,
  PCMCIAConfiguration = 7,
  MPIConfiguration = 8,
  MPSAConfiguration = 9,
  PNPISAConfiguration = 10,
  SgiInternalConfiguration = 11,
  MaximumBusDataType = 12,
} BUS_DATA_TYPE, *PBUS_DATA_TYPE;

struct IXMLDSOControl
{
}; /* size: 0x0008 */

typedef struct _NDR64_ENCAPSULATED_UNION
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned char Flags;
  /* 0x0003 */ unsigned char SwitchType;
  /* 0x0004 */ unsigned int MemoryOffset;
  /* 0x0008 */ unsigned int MemorySize;
  /* 0x000c */ unsigned int Reserved;
} NDR64_ENCAPSULATED_UNION, *PNDR64_ENCAPSULATED_UNION; /* size: 0x0010 */

typedef struct _NDR64_UNION_ARM_SELECTOR
{
  /* 0x0000 */ unsigned char Reserved1;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short Reserved2;
  /* 0x0004 */ unsigned int Arms;
} NDR64_UNION_ARM_SELECTOR, *PNDR64_UNION_ARM_SELECTOR; /* size: 0x0008 */

typedef struct _NDR64_UNION_ARM
{
  /* 0x0000 */ __int64 CaseValue;
  /* 0x0008 */ const void* Type;
  /* 0x0010 */ unsigned int Reserved;
  /* 0x0014 */ long __PADDING__[1];
} NDR64_UNION_ARM, *PNDR64_UNION_ARM; /* size: 0x0018 */

typedef struct __midl_frag671_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag671_t, *P_midl_frag671_t; /* size: 0x0068 */

enum tagOBJFLAGS
{
  OBJFLAGS_LINK = 1,
  OBJFLAGS_DOCUMENT = 2,
  OBJFLAGS_CONVERT = 4,
  OBJFLAGS_CACHEEMPTY = 8,
};

typedef union _CPU_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned int VendorId[3];
      /* 0x000c */ unsigned int VersionInformation;
      /* 0x0010 */ unsigned int FeatureInformation;
      /* 0x0014 */ unsigned int AMDExtendedCpuFeatures;
    } /* size: 0x0018 */ X86CpuInfo;
    struct
    {
      /* 0x0000 */ unsigned __int64 ProcessorFeatures[2];
    } /* size: 0x0010 */ OtherCpuInfo;
  }; /* size: 0x0018 */
} CPU_INFORMATION, *PCPU_INFORMATION; /* size: 0x0018 */

enum PULLSTATE
{
  PULLSTATE0_ENTRY = 0,
  PULLSTATE1_FIRST_CALL = 1,
  PULLSTATE2_NS_RQlsRA = 2,
  PULLSTATE3_NS_RQgeRA = 3,
  PULLSTATE4_S_RQlsBS = 4,
  PULLSTATE5_S_RQgeBS = 5,
  PULLSTATE6_DONE = 6,
};

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64; /* size: 0x000c */

typedef enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0,
  ExceptionContinueSearch = 1,
  ExceptionNestedException = 2,
  ExceptionCollidedUnwind = 3,
} EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

struct IReleaseMarshalBuffers
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_POWER_STATE
{
  PowerSystemUnspecified = 0,
  PowerSystemWorking = 1,
  PowerSystemSleeping1 = 2,
  PowerSystemSleeping2 = 3,
  PowerSystemSleeping3 = 4,
  PowerSystemHibernate = 5,
  PowerSystemShutdown = 6,
  PowerSystemMaximum = 7,
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

enum tagSLR_FLAGS
{
  SLR_NO_UI = 1,
  SLR_ANY_MATCH = 2,
  SLR_UPDATE = 4,
  SLR_NOUPDATE = 8,
  SLR_NOSEARCH = 16,
  SLR_NOTRACK = 32,
  SLR_NOLINKINFO = 64,
  SLR_INVOKE_MSI = 128,
  SLR_NO_UI_WITH_MSG_PUMP = 257,
};

typedef struct _LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY* Flink;
  /* 0x0008 */ struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; /* size: 0x0010 */

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
} LARGE_INTEGER, *PLARGE_INTEGER; /* size: 0x0008 */

typedef enum _FUNCTION_TABLE_TYPE
{
  RF_SORTED = 0,
  RF_UNSORTED = 1,
  RF_CALLBACK = 2,
} FUNCTION_TABLE_TYPE, *PFUNCTION_TABLE_TYPE;

typedef struct _DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _RUNTIME_FUNCTION* FunctionTable;
  /* 0x0018 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0020 */ unsigned __int64 MinimumAddress;
  /* 0x0028 */ unsigned __int64 MaximumAddress;
  /* 0x0030 */ unsigned __int64 BaseAddress;
  /* 0x0038 */ void* Callback /* function */;
  /* 0x0040 */ void* Context;
  /* 0x0048 */ wchar_t* OutOfProcessCallbackDll;
  /* 0x0050 */ enum _FUNCTION_TABLE_TYPE Type;
  /* 0x0054 */ unsigned long EntryCount;
} DYNAMIC_FUNCTION_TABLE, *PDYNAMIC_FUNCTION_TABLE; /* size: 0x0058 */

struct tagPOINT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
}; /* size: 0x0008 */

class CPoint
{
  /* 0x0000 */ struct tagPOINT _pt;
}; /* size: 0x0008 */

class CDragOperation
{
  union
  {
    struct
    {
      /* 0x0000 */ struct IDataObject* _pDataObject;
      /* 0x0008 */ void* _DOBuffer;
      /* 0x0010 */ struct IDropSource* _pDropSource;
      /* 0x0018 */ struct IDropSourceQueryEx* _pDSQueryEx;
      /* 0x0020 */ struct IDropSourceNotify* _pDSNotify;
      /* 0x0028 */ struct IDropTarget* _pDropTarget;
      /* 0x0030 */ struct IDropTarget* _pRealDropTarget;
      /* 0x0038 */ void* _hFormats;
      /* 0x0040 */ class CPoint _cpt;
      /* 0x0048 */ unsigned long _dwOKEffects;
      /* 0x004c */ long Padding_1;
      /* 0x0050 */ unsigned long* _pdwEffect;
      /* 0x0058 */ int _fEscapePressed;
      /* 0x005c */ long Padding_2;
      /* 0x0060 */ struct HICON__* _curOld;
      /* 0x0068 */ struct HWND__* _hwndLast;
      /* 0x0070 */ unsigned long _grfKeyState;
      /* 0x0074 */ HRESULT _hrDragResult;
      /* 0x0078 */ int _fReleasedCapture;
      /* 0x007c */ long Padding_3;
      /* 0x0080 */ class CDragDefaultCursors* _pcddcDefault;
      /* 0x0088 */ int _fUseWin31;
      /* 0x008c */ unsigned long _dwFinalKeyState;
      /* 0x0090 */ class CPoint _cptFinalCursorPos;
    }; /* size: 0x008c */
    /* 0x0000 */ long s_wScrollInt;
  }; /* size: 0x008c */
}; /* size: 0x0098 */

struct tagSAFEARRAYBOUND
{
  /* 0x0000 */ unsigned long cElements;
  /* 0x0004 */ long lLbound;
}; /* size: 0x0008 */

typedef struct _CRYPT_DECODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_4;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
} CRYPT_DECODE_PARA, *PCRYPT_DECODE_PARA; /* size: 0x0018 */

typedef enum _SECTION_INHERIT
{
  ViewShare = 1,
  ViewUnmap = 2,
} SECTION_INHERIT, *PSECTION_INHERIT;

typedef struct _numberfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_5;
  /* 0x0010 */ wchar_t* lpDecimalSep;
  /* 0x0018 */ wchar_t* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ long __PADDING__[1];
} numberfmtW, *PnumberfmtW; /* size: 0x0028 */

enum tagOLEWHICHMK
{
  OLEWHICHMK_CONTAINER = 1,
  OLEWHICHMK_OBJREL = 2,
  OLEWHICHMK_OBJFULL = 3,
};

class CDragDataObject
{
  /* 0x0000 */ long Padding_6[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_7;
  /* 0x0010 */ void* _pvMarshaledDataObject;
  /* 0x0018 */ struct IDataObject* _pIDataObject;
  /* 0x0020 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0028 */ unsigned long _dwSmId;
}; /* size: 0x0030 */

struct tagAXISINFOW
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ wchar_t axAxisName[16];
}; /* size: 0x0028 */

enum tagAWSCTYPE
{
  AWS_SCURVE = 0,
  AWS_LINEAR = 1,
};

struct IXMLDOMComment
{
}; /* size: 0x0008 */

typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _remoteMETAFILEPICT* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILEPICT::__MIDL_IWinTypes_0005, *PuserHMETAFILEPICT::__MIDL_IWinTypes_0005; /* size: 0x0008 */

typedef struct _IMAGEHLP_CBA_EVENTW
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ const wchar_t* desc;
  /* 0x0010 */ void* object;
} IMAGEHLP_CBA_EVENTW, *PIMAGEHLP_CBA_EVENTW; /* size: 0x0018 */

enum PROXY_PHASE
{
  PROXY_CALCSIZE = 0,
  PROXY_GETBUFFER = 1,
  PROXY_MARSHAL = 2,
  PROXY_SENDRECEIVE = 3,
  PROXY_UNMARSHAL = 4,
};

typedef enum _tagSHARE_EVENT
{
  SHARE_EVT_ITEM_SHARED = 0,
  SHARE_EVT_ITEM_UNSHARED = 1,
  SHARE_EVT_ERR_ITEM_LOCATION = 2,
  SHARE_EVT_ERR_NO_WRITE_DAC = 3,
  SHARE_EVT_ERR_INHERITED_PERM = 4,
} tagSHARE_EVENT, *PtagSHARE_EVENT;

typedef struct _GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} GUID, *PGUID; /* size: 0x0010 */

class MAP_KEY_GUID
{
  /* 0x0000 */ struct _GUID guid;
}; /* size: 0x0010 */

class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_8[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_9;
  /* 0x0030 */ struct TYPEINFOVTBL* m_r;
}; /* size: 0x0038 */

class CDdeConnectionTable
{
  /* 0x0000 */ void* m_h;
  /* 0x0008 */ unsigned long m_cinfo;
}; /* size: 0x0010 */

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS
{
  TransactionManagerBasicInformation = 0,
  TransactionManagerLogInformation = 1,
  TransactionManagerLogPathInformation = 2,
  TransactionManagerRecoveryInformation = 4,
  TransactionManagerOnlineProbeInformation = 3,
  TransactionManagerOldestTransactionInformation = 5,
} TRANSACTIONMANAGER_INFORMATION_CLASS, *PTRANSACTIONMANAGER_INFORMATION_CLASS;

enum tagSTDMSHLFLAGS
{
  SMEXF_SERVER = 1,
  SMEXF_HANDLER = 2,
};

typedef struct _CERT_POLICY_MAPPINGS_INFO
{
  /* 0x0000 */ unsigned long cPolicyMapping;
  /* 0x0004 */ long Padding_10;
  /* 0x0008 */ struct _CERT_POLICY_MAPPING* rgPolicyMapping;
} CERT_POLICY_MAPPINGS_INFO, *PCERT_POLICY_MAPPINGS_INFO; /* size: 0x0010 */

struct CDdeObject::CDataObjectImpl
{
  /* 0x0000 */ long Padding_11[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

enum tagDHFlags
{
  DH_SAME_AS_LOAD = 1,
  DH_CONTAINED_OBJECT = 2,
  DH_LOCKED_CONTAINER = 4,
  DH_FORCED_RUNNING = 8,
  DH_EMBEDDING = 16,
  DH_INIT_NEW = 32,
  DH_STATIC = 64,
  DH_INPROC_HANDLER = 128,
  DH_DELAY_CREATE = 256,
  DH_COM_OUTEROBJECT = 512,
  DH_UNMARSHALED = 1024,
  DH_CLEANEDUP = 2048,
  DH_OLE1SERVER = 4096,
  DH_APICREATE = 8192,
};

typedef struct _RTL_PROCESS_MODULE_INFORMATION
{
  /* 0x0000 */ void* Section;
  /* 0x0008 */ void* MappedBase;
  /* 0x0010 */ void* ImageBase;
  /* 0x0018 */ unsigned long ImageSize;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ unsigned short LoadOrderIndex;
  /* 0x0022 */ unsigned short InitOrderIndex;
  /* 0x0024 */ unsigned short LoadCount;
  /* 0x0026 */ unsigned short OffsetToFileName;
  /* 0x0028 */ unsigned char FullPathName[256];
} RTL_PROCESS_MODULE_INFORMATION, *PRTL_PROCESS_MODULE_INFORMATION; /* size: 0x0128 */

struct tagSTDOBJREF
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long cPublicRefs;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
  /* 0x0018 */ struct _GUID ipid;
}; /* size: 0x0028 */

struct tagDUALSTRINGARRAY
{
  /* 0x0000 */ unsigned short wNumEntries;
  /* 0x0002 */ unsigned short wSecurityOffset;
  /* 0x0004 */ unsigned short aStringArray[1];
}; /* size: 0x0006 */

struct tagOBJREF
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct _GUID iid;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0046 */ char __PADDING__[2];
      } /* size: 0x0030 */ u_standard;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct _GUID clsid;
        /* 0x0050 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0056 */ char __PADDING__[2];
      } /* size: 0x0040 */ u_handler;
      struct
      {
        /* 0x0018 */ struct _GUID clsid;
        /* 0x0028 */ unsigned long cbExtension;
        /* 0x002c */ unsigned long size;
        /* 0x0030 */ unsigned char* pData;
      } /* size: 0x0020 */ u_custom;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagOBJREFDATA* pORData;
        /* 0x0048 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x004e */ char __PADDING__[2];
      } /* size: 0x0038 */ u_extended;
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ u_objref;
}; /* size: 0x0058 */

typedef struct _RTL_CRITICAL_SECTION
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ void* LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION; /* size: 0x0028 */

class COleStaticMutexSem
{
  /* 0x0000 */ class COleStaticMutexSem* pNextMutex;
  /* 0x0008 */ unsigned char _fInitialized;
  /* 0x0009 */ unsigned char _fAutoDestruct;
  /* 0x000a */ unsigned char _fUseSpincount;
  /* 0x000b */ char Padding_12;
  /* 0x000c */ unsigned long _cLocks;
  /* 0x0010 */ unsigned long _dwLine;
  /* 0x0014 */ long Padding_13;
  /* 0x0018 */ const char* _pszFile;
  /* 0x0020 */ const char* _pszLockName;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0050 */

class CDllHost
{
  /* 0x0000 */ long Padding_14[6];
  /* 0x0018 */ struct IDLLHost* _pIDllProxy;
  /* 0x0020 */ class CStdIdentity* _pStdId;
  /* 0x0028 */ unsigned long _dwType;
  /* 0x002c */ unsigned long _dwHostAptId;
  /* 0x0030 */ unsigned long _hActivator;
  /* 0x0034 */ unsigned long _dwTid;
  /* 0x0038 */ HRESULT _hrMarshal;
  /* 0x003c */ long Padding_15;
  /* 0x0040 */ void* _hEvent;
  /* 0x0048 */ void* _hEventWakeUp;
  /* 0x0050 */ HRESULT _hr;
  /* 0x0054 */ long Padding_16;
  /* 0x0058 */ struct tagOBJREF _objref;
  /* 0x00b0 */ class COleStaticMutexSem _mxs;
}; /* size: 0x0100 */

enum tagApplicationType
{
  ServerApplication = 0,
  LibraryApplication = 1,
};

typedef enum __MIDL_IInternetSecurityManager_0002
{
  PUAFOUT_DEFAULT = 0,
  PUAFOUT_ISLOCKZONEPOLICY = 1,
} _MIDL_IInternetSecurityManager_0002, *P_MIDL_IInternetSecurityManager_0002;

typedef struct _SID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY; /* size: 0x0006 */

typedef struct _SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
} SID, *PSID; /* size: 0x000c */

typedef struct _FILE_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0010 */ union _LARGE_INTEGER QuotaUsed;
  /* 0x0018 */ union _LARGE_INTEGER QuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER QuotaLimit;
  /* 0x0028 */ struct _SID Sid;
  /* 0x0034 */ long __PADDING__[1];
} FILE_QUOTA_INFORMATION, *PFILE_QUOTA_INFORMATION; /* size: 0x0038 */

struct IGlobalInterfaceTable
{
}; /* size: 0x0008 */

enum SYNCMGR_EVENT_LEVEL
{
  SYNCMGR_EL_INFORMATION = 1,
  SYNCMGR_EL_WARNING = 2,
  SYNCMGR_EL_ERROR = 3,
  SYNCMGR_EL_MAX = 3,
};

class CCoTaskAllocator
{
}; /* size: 0x0008 */

struct ISupportErrorInfo
{
}; /* size: 0x0008 */

typedef enum _RTL_GENERIC_COMPARE_RESULTS
{
  GenericLessThan = 0,
  GenericGreaterThan = 1,
  GenericEqual = 2,
} RTL_GENERIC_COMPARE_RESULTS, *PRTL_GENERIC_COMPARE_RESULTS;

struct tagBITMAPINFOHEADER
{
  /* 0x0000 */ unsigned long biSize;
  /* 0x0004 */ long biWidth;
  /* 0x0008 */ long biHeight;
  /* 0x000c */ unsigned short biPlanes;
  /* 0x000e */ unsigned short biBitCount;
  /* 0x0010 */ unsigned long biCompression;
  /* 0x0014 */ unsigned long biSizeImage;
  /* 0x0018 */ long biXPelsPerMeter;
  /* 0x001c */ long biYPelsPerMeter;
  /* 0x0020 */ unsigned long biClrUsed;
  /* 0x0024 */ unsigned long biClrImportant;
}; /* size: 0x0028 */

struct tagRGBQUAD
{
  /* 0x0000 */ unsigned char rgbBlue;
  /* 0x0001 */ unsigned char rgbGreen;
  /* 0x0002 */ unsigned char rgbRed;
  /* 0x0003 */ unsigned char rgbReserved;
}; /* size: 0x0004 */

struct tagBITMAPINFO
{
  /* 0x0000 */ struct tagBITMAPINFOHEADER bmiHeader;
  /* 0x0028 */ struct tagRGBQUAD bmiColors[1];
}; /* size: 0x002c */

typedef enum _RTL_PATH_TYPE
{
  RtlPathTypeUnknown = 0,
  RtlPathTypeUncAbsolute = 1,
  RtlPathTypeDriveAbsolute = 2,
  RtlPathTypeDriveRelative = 3,
  RtlPathTypeRooted = 4,
  RtlPathTypeRelative = 5,
  RtlPathTypeLocalDevice = 6,
  RtlPathTypeRootLocalDevice = 7,
} RTL_PATH_TYPE, *PRTL_PATH_TYPE;

struct CDdeObject::CRpcStubBufferImpl
{
  /* 0x0000 */ long Padding_17[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

enum tagSIGDN
{
  SIGDN_NORMALDISPLAY = 0,
  SIGDN_PARENTRELATIVEPARSING = -2147385343,
  SIGDN_DESKTOPABSOLUTEPARSING = -2147319808,
  SIGDN_PARENTRELATIVEEDITING = -2147282943,
  SIGDN_DESKTOPABSOLUTEEDITING = -2147172352,
  SIGDN_FILESYSPATH = -2147123200,
  SIGDN_URL = -2147057664,
  SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743,
  SIGDN_PARENTRELATIVE = -2146959359,
};

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION
{
  /* 0x0000 */ char* SymbolicBackTrace;
  /* 0x0008 */ unsigned long TraceCount;
  /* 0x000c */ unsigned short Index;
  /* 0x000e */ unsigned short Depth;
  /* 0x0010 */ void* BackTrace[32];
} RTL_PROCESS_BACKTRACE_INFORMATION, *PRTL_PROCESS_BACKTRACE_INFORMATION; /* size: 0x0110 */

typedef struct _RTL_PROCESS_BACKTRACES
{
  /* 0x0000 */ unsigned __int64 CommittedMemory;
  /* 0x0008 */ unsigned __int64 ReservedMemory;
  /* 0x0010 */ unsigned long NumberOfBackTraceLookups;
  /* 0x0014 */ unsigned long NumberOfBackTraces;
  /* 0x0018 */ struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
} RTL_PROCESS_BACKTRACES, *PRTL_PROCESS_BACKTRACES; /* size: 0x0128 */

class CUrlMonWrapper
{
  /* 0x0000 */ long Padding_18[2];
  /* 0x0008 */ long _cRef;
}; /* size: 0x0010 */

enum tagOLEVERBATTRIB
{
  OLEVERBATTRIB_NEVERDIRTIES = 1,
  OLEVERBATTRIB_ONCONTAINERMENU = 2,
};

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned int DataSize;
  /* 0x0004 */ unsigned long Rva;
} MINIDUMP_LOCATION_DESCRIPTOR, *PMINIDUMP_LOCATION_DESCRIPTOR; /* size: 0x0008 */

typedef struct _EVENT_FILTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Type;
} EVENT_FILTER_DESCRIPTOR, *PEVENT_FILTER_DESCRIPTOR; /* size: 0x0010 */

enum PIDMSI_STATUS_VALUE
{
  PIDMSI_STATUS_NORMAL = 0,
  PIDMSI_STATUS_NEW = 1,
  PIDMSI_STATUS_PRELIM = 2,
  PIDMSI_STATUS_DRAFT = 3,
  PIDMSI_STATUS_INPROGRESS = 4,
  PIDMSI_STATUS_EDIT = 5,
  PIDMSI_STATUS_REVIEW = 6,
  PIDMSI_STATUS_PROOF = 7,
  PIDMSI_STATUS_FINAL = 8,
  PIDMSI_STATUS_OTHER = 32767,
};

typedef enum __MIDL___MIDL_itf_shdeprecated_0000_0006_0001
{
  SECURELOCK_NOCHANGE = -1,
  SECURELOCK_SET_UNSECURE = 0,
  SECURELOCK_SET_MIXED = 1,
  SECURELOCK_SET_SECUREUNKNOWNBIT = 2,
  SECURELOCK_SET_SECURE40BIT = 3,
  SECURELOCK_SET_SECURE56BIT = 4,
  SECURELOCK_SET_FORTEZZA = 5,
  SECURELOCK_SET_SECURE128BIT = 6,
  SECURELOCK_FIRSTSUGGEST = 7,
  SECURELOCK_SUGGEST_UNSECURE = 7,
  SECURELOCK_SUGGEST_MIXED = 8,
  SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9,
  SECURELOCK_SUGGEST_SECURE40BIT = 10,
  SECURELOCK_SUGGEST_SECURE56BIT = 11,
  SECURELOCK_SUGGEST_FORTEZZA = 12,
  SECURELOCK_SUGGEST_SECURE128BIT = 13,
} _MIDL___MIDL_itf_shdeprecated_0000_0006_0001, *P_MIDL___MIDL_itf_shdeprecated_0000_0006_0001;

struct tagRPC_CALL_ATTRIBUTES_V1_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_19;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_20;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _CERT_KEY_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_21;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long __PADDING__[1];
} CERT_KEY_CONTEXT, *PCERT_KEY_CONTEXT; /* size: 0x0018 */

struct tagWCRANGE
{
  /* 0x0000 */ wchar_t wcLow;
  /* 0x0002 */ unsigned short cGlyphs;
}; /* size: 0x0004 */

typedef struct _IMAGE_DATA_DIRECTORY
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY; /* size: 0x0008 */

typedef enum _PNP_VETO_TYPE
{
  PNP_VetoTypeUnknown = 0,
  PNP_VetoLegacyDevice = 1,
  PNP_VetoPendingClose = 2,
  PNP_VetoWindowsApp = 3,
  PNP_VetoWindowsService = 4,
  PNP_VetoOutstandingOpen = 5,
  PNP_VetoDevice = 6,
  PNP_VetoDriver = 7,
  PNP_VetoIllegalDeviceRequest = 8,
  PNP_VetoInsufficientPower = 9,
  PNP_VetoNonDisableable = 10,
  PNP_VetoLegacyDriver = 11,
  PNP_VetoInsufficientRights = 12,
} PNP_VETO_TYPE, *PPNP_VETO_TYPE;

enum tagMEMCTX
{
  MEMCTX_TASK = 1,
  MEMCTX_SHARED = 2,
  MEMCTX_MACSYSTEM = 3,
  MEMCTX_UNKNOWN = -1,
  MEMCTX_SAME = -2,
};

typedef struct _stat32i64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_22[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_23;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ long st_atime;
  /* 0x0024 */ long st_mtime;
  /* 0x0028 */ long st_ctime;
  /* 0x002c */ long __PADDING__[1];
} stat32i64, *Pstat32i64; /* size: 0x0030 */

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long cValue;
  /* 0x000c */ long Padding_24;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY; /* size: 0x0018 */

enum tagSHELLSEARCHCOMMAND
{
  SSC_SEARCH_EXEC = 0,
  SSC_SEARCH_RETURNKEY = 1,
  SSC_AUTOCOMPLETE_DELETE = 2,
};

struct tagSecurityInfoData
{
  /* 0x0000 */ unsigned long dwAuthnFlags;
  /* 0x0004 */ long Padding_25;
  /* 0x0008 */ struct _COSERVERINFO* pServerInfo;
  /* 0x0010 */ struct _COAUTHIDENTITY* pAuthIdentityInfo;
}; /* size: 0x0018 */

class SecurityInfo
{
  /* 0x0000 */ long Padding_26[10];
  /* 0x0028 */ struct tagSecurityInfoData _securityInfoData;
  /* 0x0040 */ struct tagSecurityInfoData _securityInfoDataFixedUp;
  /* 0x0058 */ unsigned long _dwFixupServerInfoBufSize;
}; /* size: 0x0060 */

enum tagLIBFLAGS
{
  LIBFLAG_FRESTRICTED = 1,
  LIBFLAG_FCONTROL = 2,
  LIBFLAG_FHIDDEN = 4,
  LIBFLAG_FHASDISKIMAGE = 8,
};

enum tagSTATFLAG
{
  STATFLAG_DEFAULT = 0,
  STATFLAG_NONAME = 1,
  STATFLAG_NOOPEN = 2,
};

typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003
{
  union
  {
    /* 0x0000 */ struct _userHMETAFILEPICT* hMetaFilePict;
    /* 0x0000 */ struct _userHENHMETAFILE* hHEnhMetaFile;
    /* 0x0000 */ struct _GDI_OBJECT* hGdiHandle;
    /* 0x0000 */ struct _userHGLOBAL* hGlobal;
    /* 0x0000 */ wchar_t* lpszFileName;
    /* 0x0000 */ struct _BYTE_BLOB* pstm;
    /* 0x0000 */ struct _BYTE_BLOB* pstg;
  }; /* size: 0x0008 */
} userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003, *PuserSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003; /* size: 0x0008 */

typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ long Padding_27;
  /* 0x0008 */ union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
} userSTGMEDIUM::_STGMEDIUM_UNION, *PuserSTGMEDIUM::_STGMEDIUM_UNION; /* size: 0x0010 */

enum tagCONFIRMATIONRESPONSE
{
  CONFRES_CONTINUE = 0,
  CONFRES_SKIP = 1,
  CONFRES_RETRY = 2,
  CONFRES_RENAME = 3,
  CONFRES_CANCEL = 4,
  CONFRES_UNDO = 5,
  CONFRES_RENAME_LEFT = 3,
  CONFRES_RENAME_RIGHT = 6,
  CONFRES_ELEVATE = 7,
  CONFRES_CLOSE = 8,
};

typedef struct _NDR64_ARRAY_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasPointerInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HasElementInfo : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char IsMultiDimensional : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char IsArrayofStrings : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved2 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved4 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_ARRAY_FLAGS, *PNDR64_ARRAY_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char NumberDims;
  /* 0x0004 */ unsigned int NumberElements;
  /* 0x0008 */ const void* Element;
} NDR64_BOGUS_ARRAY_HEADER_FORMAT, *PNDR64_BOGUS_ARRAY_HEADER_FORMAT; /* size: 0x0010 */

typedef struct _DISCDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_28;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0018 */ char* lpRemoteName;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} DISCDLGSTRUCTA, *PDISCDLGSTRUCTA; /* size: 0x0028 */

typedef struct _CRYPTOAPI_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_29;
  /* 0x0008 */ unsigned char* pbData;
} CRYPTOAPI_BLOB, *PCRYPTOAPI_BLOB; /* size: 0x0010 */

typedef struct _CRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_ALGORITHM_IDENTIFIER, *PCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0018 */

typedef struct _CRYPT_MASK_GEN_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
} CRYPT_MASK_GEN_ALGORITHM, *PCRYPT_MASK_GEN_ALGORITHM; /* size: 0x0020 */

class CSafeRefCount
{
  /* 0x0000 */ long Padding_30[2];
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ int m_fInDelete;
  /* 0x0010 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0018 */

typedef enum _PS_IFEO_KEY_STATE
{
  PsReadIFEOAllValues = 0,
  PsSkipIFEODebugger = 1,
  PsSkipAllIFEO = 2,
  PsMaxIFEOKeyStates = 3,
} PS_IFEO_KEY_STATE, *PPS_IFEO_KEY_STATE;

class CStackWalker
{
  /* 0x0000 */ long Padding_31[2];
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ long Padding_32;
  /* 0x0010 */ void* m_hProcess;
}; /* size: 0x0018 */

struct tagLocationInfoData
{
  /* 0x0000 */ wchar_t* machineName;
  /* 0x0008 */ unsigned long processId;
  /* 0x000c */ unsigned long apartmentId;
  /* 0x0010 */ unsigned long contextId;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

class ServerLocationInfo
{
  /* 0x0000 */ long Padding_33[8];
  /* 0x0020 */ struct tagLocationInfoData _locationInfoData;
  /* 0x0038 */ class CObjectContext* _pObjectContext;
  /* 0x0040 */ struct ISpecialSystemProperties* _pISSP;
}; /* size: 0x0048 */

enum PO_WAKE_SOURCE_TYPE
{
  DeviceWakeSourceType = 0,
  FixedWakeSourceType = 1,
};

typedef struct _PO_WAKE_SOURCE_HEADER
{
  /* 0x0000 */ enum PO_WAKE_SOURCE_TYPE Type;
  /* 0x0004 */ unsigned long Size;
} PO_WAKE_SOURCE_HEADER, *PPO_WAKE_SOURCE_HEADER; /* size: 0x0008 */

enum CRefExportCount::tagTokens
{
  ALIVE = 0,
  KILL = 1,
  DEAD = 2,
};

typedef struct _STRING32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ unsigned long Buffer;
} STRING32, *PSTRING32; /* size: 0x0008 */

typedef struct _CURDIR32
{
  /* 0x0000 */ struct _STRING32 DosPath;
  /* 0x0008 */ unsigned long Handle;
} CURDIR32, *PCURDIR32; /* size: 0x000c */

struct tagDVTARGETDEVICE
{
  /* 0x0000 */ unsigned long tdSize;
  /* 0x0004 */ unsigned short tdDriverNameOffset;
  /* 0x0006 */ unsigned short tdDeviceNameOffset;
  /* 0x0008 */ unsigned short tdPortNameOffset;
  /* 0x000a */ unsigned short tdExtDevmodeOffset;
  /* 0x000c */ unsigned char tdData[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef enum _MULTIPLE_TRUSTEE_OPERATION
{
  NO_MULTIPLE_TRUSTEE = 0,
  TRUSTEE_IS_IMPERSONATE = 1,
} MULTIPLE_TRUSTEE_OPERATION, *PMULTIPLE_TRUSTEE_OPERATION;

struct tagActivationContextInfoData
{
  /* 0x0000 */ int clientOK;
  /* 0x0004 */ int bReserved1;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwReserved2;
  /* 0x0010 */ struct tagMInterfacePointer* pIFDClientCtx;
  /* 0x0018 */ struct tagMInterfacePointer* pIFDPrototypeCtx;
}; /* size: 0x0020 */

class ContextInfo
{
  /* 0x0000 */ long Padding_34[10];
  /* 0x0028 */ struct tagActivationContextInfoData _contextInfoData;
  /* 0x0048 */ struct _GUID _ctxOverride;
  /* 0x0058 */ class CObjectContext* _pClientCtx;
  /* 0x0060 */ class CObjectContext* _pPrototypeCtx;
  /* 0x0068 */ int _toReleaseIFD;
}; /* size: 0x0070 */

typedef enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 1,
  FileFullDirectoryInformation = 2,
  FileBothDirectoryInformation = 3,
  FileBasicInformation = 4,
  FileStandardInformation = 5,
  FileInternalInformation = 6,
  FileEaInformation = 7,
  FileAccessInformation = 8,
  FileNameInformation = 9,
  FileRenameInformation = 10,
  FileLinkInformation = 11,
  FileNamesInformation = 12,
  FileDispositionInformation = 13,
  FilePositionInformation = 14,
  FileFullEaInformation = 15,
  FileModeInformation = 16,
  FileAlignmentInformation = 17,
  FileAllInformation = 18,
  FileAllocationInformation = 19,
  FileEndOfFileInformation = 20,
  FileAlternateNameInformation = 21,
  FileStreamInformation = 22,
  FilePipeInformation = 23,
  FilePipeLocalInformation = 24,
  FilePipeRemoteInformation = 25,
  FileMailslotQueryInformation = 26,
  FileMailslotSetInformation = 27,
  FileCompressionInformation = 28,
  FileObjectIdInformation = 29,
  FileCompletionInformation = 30,
  FileMoveClusterInformation = 31,
  FileQuotaInformation = 32,
  FileReparsePointInformation = 33,
  FileNetworkOpenInformation = 34,
  FileAttributeTagInformation = 35,
  FileTrackingInformation = 36,
  FileIdBothDirectoryInformation = 37,
  FileIdFullDirectoryInformation = 38,
  FileValidDataLengthInformation = 39,
  FileShortNameInformation = 40,
  FileIoCompletionNotificationInformation = 41,
  FileIoStatusBlockRangeInformation = 42,
  FileIoPriorityHintInformation = 43,
  FileSfioReserveInformation = 44,
  FileSfioVolumeInformation = 45,
  FileHardLinkInformation = 46,
  FileProcessIdsUsingFileInformation = 47,
  FileNormalizedNameInformation = 48,
  FileNetworkPhysicalNameInformation = 49,
  FileIdGlobalTxDirectoryInformation = 50,
  FileMaximumInformation = 51,
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

typedef enum _DEBUG_CONTROL_SPACE_ITEM
{
  DEBUG_CONTROL_SPACE_PCR = 0,
  DEBUG_CONTROL_SPACE_PRCB = 1,
  DEBUG_CONTROL_SPACE_KSPECIAL = 2,
  DEBUG_CONTROL_SPACE_THREAD = 3,
  DEBUG_CONTROL_SPACE_MAXIMUM = 4,
} DEBUG_CONTROL_SPACE_ITEM, *PDEBUG_CONTROL_SPACE_ITEM;

struct tagSOleTlsDataPublic
{
  /* 0x0000 */ void* pvReserved0[2];
  /* 0x0010 */ unsigned long dwReserved0[3];
  /* 0x001c */ long Padding_35;
  /* 0x0020 */ void* pvReserved1[1];
  /* 0x0028 */ unsigned long dwReserved1[3];
  /* 0x0034 */ long Padding_36;
  /* 0x0038 */ void* pvReserved2[4];
  /* 0x0058 */ unsigned long dwReserved2[1];
  /* 0x005c */ long Padding_37;
  /* 0x0060 */ void* pCurrentCtx;
}; /* size: 0x0068 */

typedef enum _COVERAGE_REQUEST_CODES
{
  CoverageAllModules = 0,
  CoverageSearchByHash = 1,
  CoverageSearchByName = 2,
} COVERAGE_REQUEST_CODES, *PCOVERAGE_REQUEST_CODES;

typedef struct _UNICODE_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_38;
  /* 0x0008 */ wchar_t* Buffer;
} UNICODE_STRING, *PUNICODE_STRING; /* size: 0x0010 */

typedef struct _COVERAGE_MODULE_REQUEST
{
  /* 0x0000 */ enum _COVERAGE_REQUEST_CODES RequestType;
  /* 0x0004 */ long Padding_39;
  union
  {
    union
    {
      /* 0x0008 */ unsigned char MD5Hash[16];
      /* 0x0008 */ struct _UNICODE_STRING ModuleName;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ SearchInfo;
} COVERAGE_MODULE_REQUEST, *PCOVERAGE_MODULE_REQUEST; /* size: 0x0018 */

typedef struct _COVERAGE_MODULE_INFO
{
  /* 0x0000 */ unsigned long ModuleInfoSize;
  /* 0x0004 */ unsigned long IsBinaryLoaded;
  /* 0x0008 */ struct _UNICODE_STRING ModulePathName;
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned char CoverageSection[1];
  /* 0x001d */ char __PADDING__[3];
} COVERAGE_MODULE_INFO, *PCOVERAGE_MODULE_INFO; /* size: 0x0020 */

typedef struct _COVERAGE_MODULES
{
  /* 0x0000 */ unsigned long ListAndReset;
  /* 0x0004 */ unsigned long NumberOfModules;
  /* 0x0008 */ struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
  /* 0x0020 */ struct _COVERAGE_MODULE_INFO Modules[1];
} COVERAGE_MODULES, *PCOVERAGE_MODULES; /* size: 0x0040 */

struct tagBIND_OPTS3
{
  /* 0x0000 */ long Padding_40[10];
  /* 0x0028 */ struct HWND__* hwnd;
}; /* size: 0x0030 */

class CBindCtx
{
  /* 0x0000 */ long Padding_41[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_42;
  /* 0x0010 */ struct tagBIND_OPTS3 m_bindopts;
  /* 0x0040 */ class CBindCtx::CObjList* m_pFirstObj;
  /* 0x0048 */ class CMapStringToPtr* m_pMap;
}; /* size: 0x0050 */

typedef enum _TRUSTEE_FORM
{
  TRUSTEE_IS_SID = 0,
  TRUSTEE_IS_NAME = 1,
  TRUSTEE_BAD_FORM = 2,
  TRUSTEE_IS_OBJECTS_AND_SID = 3,
  TRUSTEE_IS_OBJECTS_AND_NAME = 4,
} TRUSTEE_FORM, *PTRUSTEE_FORM;

struct ILegacyInfo
{
}; /* size: 0x0008 */

typedef struct _IO_COUNTERS
{
  /* 0x0000 */ unsigned __int64 ReadOperationCount;
  /* 0x0008 */ unsigned __int64 WriteOperationCount;
  /* 0x0010 */ unsigned __int64 OtherOperationCount;
  /* 0x0018 */ unsigned __int64 ReadTransferCount;
  /* 0x0020 */ unsigned __int64 WriteTransferCount;
  /* 0x0028 */ unsigned __int64 OtherTransferCount;
} IO_COUNTERS, *PIO_COUNTERS; /* size: 0x0030 */

typedef struct _NDR64_BUFFER_ALIGN_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_BUFFER_ALIGN_FORMAT, *PNDR64_BUFFER_ALIGN_FORMAT; /* size: 0x0008 */

typedef enum _TOKEN_INFORMATION_CLASS
{
  TokenUser = 1,
  TokenGroups = 2,
  TokenPrivileges = 3,
  TokenOwner = 4,
  TokenPrimaryGroup = 5,
  TokenDefaultDacl = 6,
  TokenSource = 7,
  TokenType = 8,
  TokenImpersonationLevel = 9,
  TokenStatistics = 10,
  TokenRestrictedSids = 11,
  TokenSessionId = 12,
  TokenGroupsAndPrivileges = 13,
  TokenSessionReference = 14,
  TokenSandBoxInert = 15,
  TokenAuditPolicy = 16,
  TokenOrigin = 17,
  TokenElevationType = 18,
  TokenLinkedToken = 19,
  TokenElevation = 20,
  TokenHasRestrictions = 21,
  TokenAccessInformation = 22,
  TokenVirtualizationAllowed = 23,
  TokenVirtualizationEnabled = 24,
  TokenIntegrityLevel = 25,
  TokenUIAccess = 26,
  TokenMandatoryPolicy = 27,
  TokenLogonSid = 28,
  MaxTokenInfoClass = 29,
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS;

typedef struct _MODULE_TYPE_INFO
{
  /* 0x0000 */ unsigned short dataLength;
  /* 0x0002 */ unsigned short leaf;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} MODULE_TYPE_INFO, *PMODULE_TYPE_INFO; /* size: 0x0006 */

typedef struct _ALPC_SERVER_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* ThreadHandle;
    } /* size: 0x0008 */ In;
    struct
    {
      /* 0x0000 */ unsigned char ThreadBlocked;
      /* 0x0001 */ char Padding_43[7];
      /* 0x0008 */ void* ConnectedProcessId;
      /* 0x0010 */ struct _UNICODE_STRING ConnectionPortName;
    } /* size: 0x0020 */ Out;
  }; /* size: 0x0020 */
} ALPC_SERVER_INFORMATION, *PALPC_SERVER_INFORMATION; /* size: 0x0020 */

enum tagRunAsType
{
  RunAsSpecifiedUser = 0,
  RunAsInteractiveUser = 1,
  RunAsLaunchingUser = 2,
};

typedef struct _SYMBOL_INFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_44;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ wchar_t Name[1];
  /* 0x0056 */ char __PADDING__[2];
} SYMBOL_INFOW, *PSYMBOL_INFOW; /* size: 0x0058 */

typedef struct _SYMBOL_INFO_PACKAGEW
{
  /* 0x0000 */ struct _SYMBOL_INFOW si;
  /* 0x0058 */ wchar_t name[2001];
  /* 0x0ffa */ char __PADDING__[6];
} SYMBOL_INFO_PACKAGEW, *PSYMBOL_INFO_PACKAGEW; /* size: 0x1000 */

enum tagFRSM_REPLICA_OP
{
  FRSM_REPLICA_ADD = 0,
  FRSM_REPLICA_DELETE = 1,
};

typedef struct _PACKEDEVENTINFO
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long ulNumEventsForLogFile;
  /* 0x0008 */ unsigned long* ulOffsets /* zero-length array */;
} PACKEDEVENTINFO, *PPACKEDEVENTINFO; /* size: 0x0008 */

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP
{
  RelationProcessorCore = 0,
  RelationNumaNode = 1,
  RelationCache = 2,
  RelationProcessorPackage = 3,
} LOGICAL_PROCESSOR_RELATIONSHIP, *PLOGICAL_PROCESSOR_RELATIONSHIP;

struct tagLOGFONTW
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ wchar_t lfFaceName[32];
}; /* size: 0x005c */

struct tagENUMLOGFONTEXW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ wchar_t elfScript[32];
}; /* size: 0x015c */

struct tagDESIGNVECTOR
{
  /* 0x0000 */ unsigned long dvReserved;
  /* 0x0004 */ unsigned long dvNumAxes;
  /* 0x0008 */ long dvValues[16];
}; /* size: 0x0048 */

struct tagENUMLOGFONTEXDVW
{
  /* 0x0000 */ struct tagENUMLOGFONTEXW elfEnumLogfontEx;
  /* 0x015c */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x01a4 */

struct tagEMR
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
}; /* size: 0x0008 */

typedef struct _RECTL
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
} RECTL, *PRECTL; /* size: 0x0010 */

struct tagEMRSETDIBITSTODEVICE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long iStartScan;
  /* 0x0048 */ unsigned long cScans;
}; /* size: 0x004c */

class PTimeEntry
{
}; /* size: 0x000c */

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
  }; /* bitfield */
} KEY_SET_VIRTUALIZATION_INFORMATION, *PKEY_SET_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

typedef enum _PROGRESS_INVOKE_SETTING
{
  ProgressInvokeNever = 1,
  ProgressInvokeEveryObject = 2,
  ProgressInvokeOnError = 3,
  ProgressCancelOperation = 4,
  ProgressRetryOperation = 5,
  ProgressInvokePrePostError = 6,
} PROGRESS_INVOKE_SETTING, *PPROGRESS_INVOKE_SETTING;

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY
{
  /* 0x0000 */ struct _RUNTIME_FUNCTION* FunctionTable;
  /* 0x0008 */ void* ImageBase;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long SizeOfTable;
} INVERTED_FUNCTION_TABLE_ENTRY, *PINVERTED_FUNCTION_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _INVERTED_FUNCTION_TABLE
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long MaximumSize;
  /* 0x0008 */ unsigned char Overflow;
  /* 0x0009 */ char Padding_45[7];
  /* 0x0010 */ struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
} INVERTED_FUNCTION_TABLE, *PINVERTED_FUNCTION_TABLE; /* size: 0x3010 */

struct CDdeObject::CProxyManagerImpl
{
  /* 0x0000 */ long Padding_46[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_47;
  /* 0x0008 */ wchar_t** rgpszProviders;
} CRYPT_CONTEXT_FUNCTION_PROVIDERS, *PCRYPT_CONTEXT_FUNCTION_PROVIDERS; /* size: 0x0010 */

enum tagACTIVATION_STAGE
{
  CLIENT_CONTEXT_STAGE = 1,
  CLIENT_MACHINE_STAGE = 2,
  SERVER_MACHINE_STAGE = 3,
  SERVER_PROCESS_STAGE = 4,
  SERVER_CONTEXT_STAGE = 5,
};

typedef struct _RPC_POLICY
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ unsigned long EndpointFlags;
  /* 0x0008 */ unsigned long NICFlags;
} RPC_POLICY, *PRPC_POLICY; /* size: 0x000c */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ unsigned __int64 DataSize;
} MINIDUMP_MEMORY_DESCRIPTOR64, *PMINIDUMP_MEMORY_DESCRIPTOR64; /* size: 0x0010 */

struct ITimeAndNoticeControl
{
}; /* size: 0x0008 */

enum tagRpcCallType
{
  rctInvalid = 0,
  rctNormal = 1,
  rctTraining = 2,
  rctGuaranteed = 3,
};

enum EServerSecurity
{
  SS_PROCESS_LOCAL = 1,
  SS_CALL_DONE = 2,
  SS_WAS_IMPERSONATING = 4,
};

typedef enum _tagPI_FLAGS
{
  PI_PARSE_URL = 1,
  PI_FILTER_MODE = 2,
  PI_FORCE_ASYNC = 4,
  PI_USE_WORKERTHREAD = 8,
  PI_MIMEVERIFICATION = 16,
  PI_CLSIDLOOKUP = 32,
  PI_DATAPROGRESS = 64,
  PI_SYNCHRONOUS = 128,
  PI_APARTMENTTHREADED = 256,
  PI_CLASSINSTALL = 512,
  PI_PASSONBINDCTX = 8192,
  PI_NOMIMEHANDLER = 0xffff8000,
  PI_LOADAPPDIRECT = 16384,
  PD_FORCE_SWITCH = 0x10000,
  PI_PREFERDEFAULTHANDLER = 0x20000,
} tagPI_FLAGS, *PtagPI_FLAGS;

typedef struct _EXCEPTION_POINTERS
{
  /* 0x0000 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0008 */ struct _CONTEXT* ContextRecord;
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS; /* size: 0x0010 */

typedef enum _FP_IEEE_COMPARE_RESULT
{
  FpCompareEqual = 0,
  FpCompareGreater = 1,
  FpCompareLess = 2,
  FpCompareUnordered = 3,
} FP_IEEE_COMPARE_RESULT, *PFP_IEEE_COMPARE_RESULT;

typedef enum _TAG_UNNAMED_1
{
  WCODE_HRESULT_FIRST = -2147220992,
  WCODE_HRESULT_LAST = -2147155969,
} TAG_UNNAMED_1, *PTAG_UNNAMED_1;

typedef struct _RTL_VERIFIER_HEAP_TABLE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_48;
  /* 0x0008 */ void* VrfDisableFaultInjection /* function */;
  /* 0x0010 */ void* VrfEnableFaultInjection /* function */;
  /* 0x0018 */ void* VrfIsDllTargeted /* function */;
  /* 0x0020 */ void* VrfTargetDllsLoadCallBack /* function */;
  /* 0x0028 */ void* VrfHeapAllocate /* function */;
  /* 0x0030 */ void* VrfHeapReAllocate /* function */;
  /* 0x0038 */ void* VrfHeapFree /* function */;
  /* 0x0040 */ void* VrfHeapCreate /* function */;
  /* 0x0048 */ void* VrfHeapDestroy /* function */;
  /* 0x0050 */ void* VrfHeapExtend /* function */;
  /* 0x0058 */ void* VrfGetProcessHeaps /* function */;
  /* 0x0060 */ void* VrfHeapWalk /* function */;
  /* 0x0068 */ void* VrfHeapLock /* function */;
  /* 0x0070 */ void* VrfHeapUnlock /* function */;
  /* 0x0078 */ void* VrfHeapIsLocked /* function */;
  /* 0x0080 */ void* VrfHeapValidate /* function */;
  /* 0x0088 */ void* VrfHeapSetUserValue /* function */;
  /* 0x0090 */ void* VrfHeapGetUserInfo /* function */;
  /* 0x0098 */ void* VrfHeapSetUserFlags /* function */;
  /* 0x00a0 */ void* VrfHeapSerialize /* function */;
  /* 0x00a8 */ void* VrfHeapSize /* function */;
  /* 0x00b0 */ void* VrfHeapCompact /* function */;
  /* 0x00b8 */ void* VrfHeapZero /* function */;
  /* 0x00c0 */ void* VrfQueryVerifierOptions /* function */;
  /* 0x00c8 */ void* VrfSetVerifierOptions /* function */;
} RTL_VERIFIER_HEAP_TABLE, *PRTL_VERIFIER_HEAP_TABLE; /* size: 0x00d0 */

struct tagPageEntry
{
  /* 0x0000 */ struct tagPageEntry* pNext;
  /* 0x0008 */ unsigned long dwFlag;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class CInternalPageAllocator
{
  /* 0x0000 */ long _cPages;
  /* 0x0004 */ long Padding_49;
  /* 0x0008 */ struct tagPageEntry** _pPageListStart;
  /* 0x0010 */ struct tagPageEntry** _pPageListEnd;
  /* 0x0018 */ unsigned long _dwFlags;
  /* 0x001c */ long Padding_50;
  /* 0x0020 */ struct tagPageEntry _ListHead;
  /* 0x0030 */ long _cEntries;
  /* 0x0034 */ long Padding_51;
  /* 0x0038 */ unsigned __int64 _cbPerEntry;
  /* 0x0040 */ unsigned short _cEntriesPerPage;
  /* 0x0042 */ char Padding_52[6];
  /* 0x0048 */ class COleStaticMutexSem* _pLock;
  /* 0x0050 */ void* _pfnMyAlloc /* function */;
  /* 0x0058 */ void* _pfnMyFree /* function */;
}; /* size: 0x0060 */

class CPageAllocator
{
  /* 0x0000 */ class CInternalPageAllocator _pgalloc;
  /* 0x0060 */ void* _hHeap;
  /* 0x0068 */ unsigned __int64 _cbPerEntry;
  /* 0x0070 */ long _lNumEntries;
  /* 0x0074 */ long Padding_53;
  /* 0x0078 */ class COleStaticMutexSem* _pLock;
}; /* size: 0x0080 */

class CtxEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CtxEntry* _pNext;
      /* 0x0008 */ class CtxEntry* _pFree;
      /* 0x0010 */ unsigned long _cRefs;
      /* 0x0014 */ long Padding_54;
      /* 0x0018 */ class CContextLife* _pLife;
      /* 0x0020 */ class CPolicySet* _pPS;
      /* 0x0028 */ class CObjectContext* _pServerCtx;
    }; /* size: 0x002c */
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ class COleStaticMutexSem s_allocLock;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cEntries;
  }; /* size: 0x0080 */
}; /* size: 0x0030 */

typedef struct _CM_SCSI_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char HostIdentifier;
  /* 0x0005 */ char __PADDING__[1];
} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA; /* size: 0x0006 */

typedef enum _KEY_SET_INFORMATION_CLASS
{
  KeyWriteTimeInformation = 0,
  KeyWow64FlagsInformation = 1,
  KeyControlFlagsInformation = 2,
  KeySetVirtualizationInformation = 3,
  KeySetDebugInformation = 4,
  MaxKeySetInfoClass = 5,
} KEY_SET_INFORMATION_CLASS, *PKEY_SET_INFORMATION_CLASS;

class PDeSerStream;

typedef struct _NDR64_PROC_FORMAT
{
  /* 0x0000 */ unsigned int Flags;
  /* 0x0004 */ unsigned int StackSize;
  /* 0x0008 */ unsigned int ConstantClientBufferSize;
  /* 0x000c */ unsigned int ConstantServerBufferSize;
  /* 0x0010 */ unsigned short RpcFlags;
  /* 0x0012 */ unsigned short FloatDoubleMask;
  /* 0x0014 */ unsigned short NumberOfParams;
  /* 0x0016 */ unsigned short ExtensionSize;
} NDR64_PROC_FORMAT, *PNDR64_PROC_FORMAT; /* size: 0x0018 */

typedef struct _NDR64_PARAM_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short Reserved : 2; /* bit position: 13 */
    /* 0x0000 */ unsigned short UseCache : 1; /* bit position: 15 */
  }; /* bitfield */
} NDR64_PARAM_FLAGS, *PNDR64_PARAM_FLAGS; /* size: 0x0002 */

typedef struct _NDR64_PARAM_FORMAT
{
  /* 0x0000 */ const void* Type;
  /* 0x0008 */ struct _NDR64_PARAM_FLAGS Attributes;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned int StackOffset;
} NDR64_PARAM_FORMAT, *PNDR64_PARAM_FORMAT; /* size: 0x0010 */

typedef struct __midl_frag550_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag550_t, *P_midl_frag550_t; /* size: 0x0038 */

enum tagCLSCTX
{
  CLSCTX_INPROC_SERVER = 1,
  CLSCTX_INPROC_HANDLER = 2,
  CLSCTX_LOCAL_SERVER = 4,
  CLSCTX_INPROC_SERVER16 = 8,
  CLSCTX_REMOTE_SERVER = 16,
  CLSCTX_INPROC_HANDLER16 = 32,
  CLSCTX_RESERVED1 = 64,
  CLSCTX_RESERVED2 = 128,
  CLSCTX_RESERVED3 = 256,
  CLSCTX_RESERVED4 = 512,
  CLSCTX_NO_CODE_DOWNLOAD = 1024,
  CLSCTX_RESERVED5 = 2048,
  CLSCTX_NO_CUSTOM_MARSHAL = 4096,
  CLSCTX_ENABLE_CODE_DOWNLOAD = 8192,
  CLSCTX_NO_FAILURE_LOG = 16384,
  CLSCTX_DISABLE_AAA = 0xffff8000,
  CLSCTX_ENABLE_AAA = 0x10000,
  CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
  CLSCTX_ACTIVATE_32_BIT_SERVER = 0x40000,
  CLSCTX_ACTIVATE_64_BIT_SERVER = 0x80000,
  CLSCTX_ENABLE_CLOAKING = 0x100000,
  CLSCTX_PS_DLL = -2147483648,
};

typedef struct _LOADED_IMAGE
{
  /* 0x0000 */ char* ModuleName;
  /* 0x0008 */ void* hFile;
  /* 0x0010 */ unsigned char* MappedAddress;
  /* 0x0018 */ struct _IMAGE_NT_HEADERS64* FileHeader;
  /* 0x0020 */ struct _IMAGE_SECTION_HEADER* LastRvaSection;
  /* 0x0028 */ unsigned long NumberOfSections;
  /* 0x002c */ long Padding_55;
  /* 0x0030 */ struct _IMAGE_SECTION_HEADER* Sections;
  /* 0x0038 */ unsigned long Characteristics;
  /* 0x003c */ unsigned char fSystemImage;
  /* 0x003d */ unsigned char fDOSImage;
  /* 0x003e */ unsigned char fReadOnly;
  /* 0x003f */ unsigned char Version;
  /* 0x0040 */ struct _LIST_ENTRY Links;
  /* 0x0050 */ unsigned long SizeOfImage;
  /* 0x0054 */ long __PADDING__[1];
} LOADED_IMAGE, *PLOADED_IMAGE; /* size: 0x0058 */

typedef enum _SE_OBJECT_TYPE
{
  SE_UNKNOWN_OBJECT_TYPE = 0,
  SE_FILE_OBJECT = 1,
  SE_SERVICE = 2,
  SE_PRINTER = 3,
  SE_REGISTRY_KEY = 4,
  SE_LMSHARE = 5,
  SE_KERNEL_OBJECT = 6,
  SE_WINDOW_OBJECT = 7,
  SE_DS_OBJECT = 8,
  SE_DS_OBJECT_ALL = 9,
  SE_PROVIDER_DEFINED_OBJECT = 10,
  SE_WMIGUID_OBJECT = 11,
  SE_REGISTRY_WOW64_32KEY = 12,
} SE_OBJECT_TYPE, *PSE_OBJECT_TYPE;

typedef enum _MUTANT_INFORMATION_CLASS
{
  MutantBasicInformation = 0,
  MutantOwnerInformation = 1,
} MUTANT_INFORMATION_CLASS, *PMUTANT_INFORMATION_CLASS;

typedef struct _STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_56;
  /* 0x0008 */ char* Buffer;
} STRING, *PSTRING; /* size: 0x0010 */

enum STUB_PHASE
{
  STUB_UNMARSHAL = 0,
  STUB_CALL_SERVER = 1,
  STUB_MARSHAL = 2,
  STUB_CALL_SERVER_NO_HRESULT = 3,
};

typedef struct _FILETIME
{
  /* 0x0000 */ unsigned long dwLowDateTime;
  /* 0x0004 */ unsigned long dwHighDateTime;
} FILETIME, *PFILETIME; /* size: 0x0008 */

typedef struct _CRL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0010 */ struct _FILETIME RevocationDate;
  /* 0x0018 */ unsigned long cExtension;
  /* 0x001c */ long Padding_57;
  /* 0x0020 */ struct _CERT_EXTENSION* rgExtension;
} CRL_ENTRY, *PCRL_ENTRY; /* size: 0x0028 */

struct tagRemSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ unsigned long dwHandleType;
  /* 0x0008 */ unsigned long pData;
  /* 0x000c */ unsigned long pUnkForRelease;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

enum tagSERVERCALLEX
{
  SERVERCALLEX_ISHANDLED = 0,
  SERVERCALLEX_REJECTED = 1,
  SERVERCALLEX_RETRYLATER = 2,
  SERVERCALLEX_ERROR = 3,
  SERVERCALLEX_CANCELED = 5,
};

struct DVTDINFO
{
  /* 0x0000 */ unsigned int cbConvertSize;
  /* 0x0004 */ unsigned int cchDrvName;
  /* 0x0008 */ unsigned int cchDevName;
  /* 0x000c */ unsigned int cchPortName;
}; /* size: 0x0010 */

struct IXMLDOMDocumentFragment
{
}; /* size: 0x0008 */

typedef struct _CRYPT_BIT_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_58;
  /* 0x0008 */ unsigned char* pbData;
  /* 0x0010 */ unsigned long cUnusedBits;
  /* 0x0014 */ long __PADDING__[1];
} CRYPT_BIT_BLOB, *PCRYPT_BIT_BLOB; /* size: 0x0018 */

typedef struct _OCSP_SIGNATURE_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB Signature;
  /* 0x0030 */ unsigned long cCertEncoded;
  /* 0x0034 */ long Padding_59;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
} OCSP_SIGNATURE_INFO, *POCSP_SIGNATURE_INFO; /* size: 0x0040 */

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _OCSP_SIGNATURE_INFO SignatureInfo;
} OCSP_BASIC_SIGNED_RESPONSE_INFO, *POCSP_BASIC_SIGNED_RESPONSE_INFO; /* size: 0x0050 */

enum tagDVASPECT
{
  DVASPECT_CONTENT = 1,
  DVASPECT_THUMBNAIL = 2,
  DVASPECT_ICON = 4,
  DVASPECT_DOCPRINT = 8,
};

typedef enum __MIDL_IUri_0001
{
  Uri_PROPERTY_ABSOLUTE_URI = 0,
  Uri_PROPERTY_STRING_START = 0,
  Uri_PROPERTY_AUTHORITY = 1,
  Uri_PROPERTY_DISPLAY_URI = 2,
  Uri_PROPERTY_DOMAIN = 3,
  Uri_PROPERTY_EXTENSION = 4,
  Uri_PROPERTY_FRAGMENT = 5,
  Uri_PROPERTY_HOST = 6,
  Uri_PROPERTY_PASSWORD = 7,
  Uri_PROPERTY_PATH = 8,
  Uri_PROPERTY_PATH_AND_QUERY = 9,
  Uri_PROPERTY_QUERY = 10,
  Uri_PROPERTY_RAW_URI = 11,
  Uri_PROPERTY_SCHEME_NAME = 12,
  Uri_PROPERTY_USER_INFO = 13,
  Uri_PROPERTY_USER_NAME = 14,
  Uri_PROPERTY_STRING_LAST = 14,
  Uri_PROPERTY_HOST_TYPE = 15,
  Uri_PROPERTY_DWORD_START = 15,
  Uri_PROPERTY_PORT = 16,
  Uri_PROPERTY_SCHEME = 17,
  Uri_PROPERTY_ZONE = 18,
  Uri_PROPERTY_DWORD_LAST = 18,
} _MIDL_IUri_0001, *P_MIDL_IUri_0001;

typedef struct _ACE_HEADER
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char AceFlags;
  /* 0x0002 */ unsigned short AceSize;
} ACE_HEADER, *PACE_HEADER; /* size: 0x0004 */

typedef struct _ACCESS_DENIED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE; /* size: 0x000c */

struct SHashChain
{
  /* 0x0000 */ struct SHashChain* pNext;
  /* 0x0008 */ struct SHashChain* pPrev;
}; /* size: 0x0010 */

class CIDObject
{
  /* 0x0000 */ long Padding_60[2];
  /* 0x0008 */ struct SHashChain _pidChain;
  /* 0x0018 */ struct SHashChain _oidChain;
  /* 0x0028 */ unsigned long _dwState;
  /* 0x002c */ unsigned long _cRefs;
  /* 0x0030 */ struct IUnknown* _pServer;
  /* 0x0038 */ class CObjectContext* _pServerCtx;
  /* 0x0040 */ struct _GUID _oid;
  /* 0x0050 */ unsigned long _aptID;
  /* 0x0054 */ long Padding_61;
  /* 0x0058 */ class CStdWrapper* _pStdWrapper;
  /* 0x0060 */ class CStdIdentity* _pStdID;
  /* 0x0068 */ unsigned long _cCalls;
  /* 0x006c */ unsigned long _cLocks;
  /* 0x0070 */ struct SHashChain _oidUnpinReqChain;
  /* 0x0080 */ unsigned long _dwOidUnpinReqState;
  /* 0x0084 */ long Padding_62;
  /* 0x0088 */ void* _pvObjectTrackCookie;
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cIDs;
  }; /* size: 0x0080 */
}; /* size: 0x0090 */

typedef enum _TAG_UNNAMED_2
{
  DataID = 2343,
} TAG_UNNAMED_2, *PTAG_UNNAMED_2;

enum tagTYPEKIND
{
  TKIND_ENUM = 0,
  TKIND_RECORD = 1,
  TKIND_MODULE = 2,
  TKIND_INTERFACE = 3,
  TKIND_DISPATCH = 4,
  TKIND_COCLASS = 5,
  TKIND_ALIAS = 6,
  TKIND_UNION = 7,
  TKIND_MAX = 8,
};

union CMapKeyToValue::CKeyWrap
{
  union
  {
    /* 0x0000 */ unsigned char rgbKey[12];
    struct
    {
      /* 0x0000 */ void* pKey;
      /* 0x0008 */ unsigned int cbKey;
    }; /* size: 0x000c */
  }; /* size: 0x000c */
}; /* size: 0x0010 */

struct CMapKeyToValue::CAssoc
{
  /* 0x0000 */ struct CMapKeyToValue::CAssoc* pNext;
  /* 0x0008 */ unsigned int nHashValue;
  /* 0x000c */ long Padding_63;
  /* 0x0010 */ union CMapKeyToValue::CKeyWrap key;
}; /* size: 0x0020 */

typedef enum _ERROR_SEVERITY_VALUE
{
  ErrorRecoverable = 0,
  ErrorFatal = 1,
  ErrorCorrected = 2,
  ErrorOthers = 3,
} ERROR_SEVERITY_VALUE, *PERROR_SEVERITY_VALUE;

enum LSA_FOREST_TRUST_RECORD_TYPE
{
  ForestTrustTopLevelName = 0,
  ForestTrustTopLevelNameEx = 1,
  ForestTrustDomainInfo = 2,
  ForestTrustRecordTypeLast = 2,
};

typedef struct _GENERIC_MAPPING
{
  /* 0x0000 */ unsigned long GenericRead;
  /* 0x0004 */ unsigned long GenericWrite;
  /* 0x0008 */ unsigned long GenericExecute;
  /* 0x000c */ unsigned long GenericAll;
} GENERIC_MAPPING, *PGENERIC_MAPPING; /* size: 0x0010 */

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfObjects;
  /* 0x0008 */ unsigned long NumberOfHandles;
  /* 0x000c */ unsigned long TypeIndex;
  /* 0x0010 */ unsigned long InvalidAttributes;
  /* 0x0014 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0024 */ unsigned long ValidAccessMask;
  /* 0x0028 */ unsigned long PoolType;
  /* 0x002c */ unsigned char SecurityRequired;
  /* 0x002d */ unsigned char WaitableObject;
  /* 0x002e */ char Padding_64[2];
  /* 0x0030 */ struct _UNICODE_STRING TypeName;
} SYSTEM_OBJECTTYPE_INFORMATION, *PSYSTEM_OBJECTTYPE_INFORMATION; /* size: 0x0040 */

struct Windows::Rtl::IRtlFormattableInterface::FormattingLevels
{
}; /* size: 0x0001 */

class XLOCK
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION critSec;
  /* 0x0028 */ int m_fCsInitialized;
}; /* size: 0x0030 */

class OPAQUE_HANDLE<1>
{
  /* 0x0000 */ unsigned __int64 m_h;
}; /* size: 0x0008 */

struct XSLOCK::OWNERENTRY
{
  /* 0x0000 */ class OPAQUE_HANDLE<1> dwThreadId;
  union
  {
    /* 0x0008 */ long ownerCount;
    /* 0x0008 */ unsigned long tableSize;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class EVENT
{
  /* 0x0000 */ void* m_hEvent;
}; /* size: 0x0008 */

class SEMAPHORE
{
  /* 0x0000 */ void* m_hSem;
}; /* size: 0x0008 */

class XSLOCK
{
  /* 0x0000 */ class XLOCK m_lock;
  /* 0x0030 */ unsigned long m_cOwner;
  /* 0x0034 */ long Padding_65;
  /* 0x0038 */ struct XSLOCK::OWNERENTRY m_ownerThreads[2];
  /* 0x0058 */ struct XSLOCK::OWNERENTRY* m_ownerTable;
  /* 0x0060 */ class EVENT m_eventExclusiveWaiters;
  /* 0x0068 */ class SEMAPHORE m_semaphoreSharedWaiters;
  /* 0x0070 */ unsigned long m_cExclusiveWaiters;
  /* 0x0074 */ unsigned long m_cSharedWaiters;
  /* 0x0078 */ int m_isOwnedExclusive;
}; /* size: 0x0080 */

class CALLFRAME_CACHE<TYPEINFOVTBL>
{
  /* 0x0000 */ long Padding_66[46];
  /* 0x00b8 */ class XSLOCK m_xslAgeOutLock;
  /* 0x0138 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x013c */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x0140 */

enum tagDESCKIND
{
  DESCKIND_NONE = 0,
  DESCKIND_FUNCDESC = 1,
  DESCKIND_VARDESC = 2,
  DESCKIND_TYPECOMP = 3,
  DESCKIND_IMPLICITAPPOBJ = 4,
  DESCKIND_MAX = 5,
};

typedef struct _DEVICE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Failed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long ReadOnly : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long Removable : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ConsoleIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long ConsoleOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Input : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Output : 1; /* bit position: 6 */
  }; /* bitfield */
} DEVICE_FLAGS, *PDEVICE_FLAGS; /* size: 0x0004 */

typedef enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0,
  SecurityIdentification = 1,
  SecurityImpersonation = 2,
  SecurityDelegation = 3,
} SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

enum FORMAT_CHARACTER
{
  FC_ZERO = 0,
  FC_BYTE = 1,
  FC_CHAR = 2,
  FC_SMALL = 3,
  FC_USMALL = 4,
  FC_WCHAR = 5,
  FC_SHORT = 6,
  FC_USHORT = 7,
  FC_LONG = 8,
  FC_ULONG = 9,
  FC_FLOAT = 10,
  FC_HYPER = 11,
  FC_DOUBLE = 12,
  FC_ENUM16 = 13,
  FC_ENUM32 = 14,
  FC_IGNORE = 15,
  FC_ERROR_STATUS_T = 16,
  FC_RP = 17,
  FC_UP = 18,
  FC_OP = 19,
  FC_FP = 20,
  FC_STRUCT = 21,
  FC_PSTRUCT = 22,
  FC_CSTRUCT = 23,
  FC_CPSTRUCT = 24,
  FC_CVSTRUCT = 25,
  FC_BOGUS_STRUCT = 26,
  FC_CARRAY = 27,
  FC_CVARRAY = 28,
  FC_SMFARRAY = 29,
  FC_LGFARRAY = 30,
  FC_SMVARRAY = 31,
  FC_LGVARRAY = 32,
  FC_BOGUS_ARRAY = 33,
  FC_C_CSTRING = 34,
  FC_C_BSTRING = 35,
  FC_C_SSTRING = 36,
  FC_C_WSTRING = 37,
  FC_CSTRING = 38,
  FC_BSTRING = 39,
  FC_SSTRING = 40,
  FC_WSTRING = 41,
  FC_ENCAPSULATED_UNION = 42,
  FC_NON_ENCAPSULATED_UNION = 43,
  FC_BYTE_COUNT_POINTER = 44,
  FC_TRANSMIT_AS = 45,
  FC_REPRESENT_AS = 46,
  FC_IP = 47,
  FC_BIND_CONTEXT = 48,
  FC_BIND_GENERIC = 49,
  FC_BIND_PRIMITIVE = 50,
  FC_AUTO_HANDLE = 51,
  FC_CALLBACK_HANDLE = 52,
  FC_UNUSED1 = 53,
  FC_POINTER = 54,
  FC_ALIGNM2 = 55,
  FC_ALIGNM4 = 56,
  FC_ALIGNM8 = 57,
  FC_UNUSED2 = 58,
  FC_UNUSED3 = 59,
  FC_UNUSED4 = 60,
  FC_STRUCTPAD1 = 61,
  FC_STRUCTPAD2 = 62,
  FC_STRUCTPAD3 = 63,
  FC_STRUCTPAD4 = 64,
  FC_STRUCTPAD5 = 65,
  FC_STRUCTPAD6 = 66,
  FC_STRUCTPAD7 = 67,
  FC_STRING_SIZED = 68,
  FC_UNUSED5 = 69,
  FC_NO_REPEAT = 70,
  FC_FIXED_REPEAT = 71,
  FC_VARIABLE_REPEAT = 72,
  FC_FIXED_OFFSET = 73,
  FC_VARIABLE_OFFSET = 74,
  FC_PP = 75,
  FC_EMBEDDED_COMPLEX = 76,
  FC_IN_PARAM = 77,
  FC_IN_PARAM_BASETYPE = 78,
  FC_IN_PARAM_NO_FREE_INST = 79,
  FC_IN_OUT_PARAM = 80,
  FC_OUT_PARAM = 81,
  FC_RETURN_PARAM = 82,
  FC_RETURN_PARAM_BASETYPE = 83,
  FC_DEREFERENCE = 84,
  FC_DIV_2 = 85,
  FC_MULT_2 = 86,
  FC_ADD_1 = 87,
  FC_SUB_1 = 88,
  FC_CALLBACK = 89,
  FC_CONSTANT_IID = 90,
  FC_END = 91,
  FC_PAD = 92,
  FC_EXPR = 93,
  FC_PARTIAL_IGNORE_PARAM = 94,
  FC_SPLIT_DEREFERENCE = 116,
  FC_SPLIT_DIV_2 = 117,
  FC_SPLIT_MULT_2 = 118,
  FC_SPLIT_ADD_1 = 119,
  FC_SPLIT_SUB_1 = 120,
  FC_SPLIT_CALLBACK = 121,
  FC_FORCED_BOGUS_STRUCT = 177,
  FC_TRANSMIT_AS_PTR = 178,
  FC_REPRESENT_AS_PTR = 179,
  FC_USER_MARSHAL = 180,
  FC_PIPE = 181,
  FC_SUPPLEMENT = 182,
  FC_RANGE = 183,
  FC_INT3264 = 184,
  FC_UINT3264 = 185,
  FC_CSARRAY = 186,
  FC_CS_TAG = 187,
  FC_STRUCTPADN = 188,
  FC_UNUSED7 = 189,
  FC_UNUSED8 = 190,
  FC_UNUSED9 = 191,
  FC_UNUSED10 = 192,
  FC_BUFFER_ALIGN = 193,
  FC_INT128 = 194,
  FC_UINT128 = 195,
  FC_FLOAT80 = 196,
  FC_FLOAT128 = 197,
  FC_END_OF_UNIVERSE = 198,
};

typedef struct _OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long TotalNumberOfObjects;
  /* 0x0014 */ unsigned long TotalNumberOfHandles;
  /* 0x0018 */ unsigned long TotalPagedPoolUsage;
  /* 0x001c */ unsigned long TotalNonPagedPoolUsage;
  /* 0x0020 */ unsigned long TotalNamePoolUsage;
  /* 0x0024 */ unsigned long TotalHandleTableUsage;
  /* 0x0028 */ unsigned long HighWaterNumberOfObjects;
  /* 0x002c */ unsigned long HighWaterNumberOfHandles;
  /* 0x0030 */ unsigned long HighWaterPagedPoolUsage;
  /* 0x0034 */ unsigned long HighWaterNonPagedPoolUsage;
  /* 0x0038 */ unsigned long HighWaterNamePoolUsage;
  /* 0x003c */ unsigned long HighWaterHandleTableUsage;
  /* 0x0040 */ unsigned long InvalidAttributes;
  /* 0x0044 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0054 */ unsigned long ValidAccessMask;
  /* 0x0058 */ unsigned char SecurityRequired;
  /* 0x0059 */ unsigned char MaintainHandleCount;
  /* 0x005a */ char Padding_67[2];
  /* 0x005c */ unsigned long PoolType;
  /* 0x0060 */ unsigned long DefaultPagedPoolCharge;
  /* 0x0064 */ unsigned long DefaultNonPagedPoolCharge;
} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION; /* size: 0x0068 */

class CStreamOnMessage
{
  /* 0x0000 */ long Padding_68[2];
  /* 0x0008 */ unsigned char* _pStartOfStream;
  /* 0x0010 */ unsigned char** _ppBuffer;
  /* 0x0018 */ unsigned long _cbMaxStreamLength;
  /* 0x001c */ unsigned long _ref_count;
}; /* size: 0x0020 */

enum MCA_EXCEPTION_TYPE
{
  HAL_MCE_RECORD = 0,
  HAL_MCA_RECORD = 1,
};

typedef enum _FIRMWARE_TYPE
{
  FirmwareTypeUnknown = 0,
  FirmwareTypeBios = 1,
  FirmwareTypeEfi = 2,
  FirmwareTypeMax = 3,
} FIRMWARE_TYPE, *PFIRMWARE_TYPE;

typedef struct _CRYPT_INTERFACE_REG
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cFunctions;
  /* 0x000c */ long Padding_69;
  /* 0x0010 */ wchar_t** rgpszFunctions;
} CRYPT_INTERFACE_REG, *PCRYPT_INTERFACE_REG; /* size: 0x0018 */

class COIDHashTable
{
}; /* size: 0x0028 */

struct ISurrogateService
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_3
{
  DataID = 2342,
} TAG_UNNAMED_3, *PTAG_UNNAMED_3;

typedef struct _s__RTTIClassHierarchyDescriptor
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long attributes;
  /* 0x0008 */ unsigned long numBaseClasses;
  /* 0x000c */ const struct _s__RTTIBaseClassArray* pBaseClassArray;
} s__RTTIClassHierarchyDescriptor, *Ps__RTTIClassHierarchyDescriptor; /* size: 0x0014 */

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ unsigned long Flags;
} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT; /* size: 0x0014 */

class CBasedMarshalListPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

enum tagSERVERCALL
{
  SERVERCALL_ISHANDLED = 0,
  SERVERCALL_REJECTED = 1,
  SERVERCALL_RETRYLATER = 2,
};

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_FS_VOLUME_FLAGS_INFORMATION, *PFILE_FS_VOLUME_FLAGS_INFORMATION; /* size: 0x0004 */

typedef enum _AUDIT_EVENT_TYPE
{
  AuditEventObjectAccess = 0,
  AuditEventDirectoryServiceAccess = 1,
} AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;

typedef struct _KEY_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long NameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _MIDL_STUB_DESC
{
  /* 0x0000 */ void* RpcInterfaceInformation;
  /* 0x0008 */ void* pfnAllocate /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
  union
  {
    union
    {
      /* 0x0018 */ void** pAutoHandle;
      /* 0x0018 */ void** pPrimitiveHandle;
      /* 0x0018 */ struct __GENERIC_BINDING_INFO* pGenericBindingInfo;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ IMPLICIT_HANDLE_INFO;
  /* 0x0020 */ void* const* apfnNdrRundownRoutines /* function */;
  /* 0x0028 */ const struct _GENERIC_BINDING_ROUTINE_PAIR* aGenericBindingRoutinePairs;
  /* 0x0030 */ void* const* apfnExprEval /* function */;
  /* 0x0038 */ const struct _XMIT_ROUTINE_QUINTUPLE* aXmitQuintuple;
  /* 0x0040 */ const unsigned char* pFormatTypes;
  /* 0x0048 */ int fCheckBounds;
  /* 0x004c */ unsigned long Version;
  /* 0x0050 */ struct _MALLOC_FREE_STRUCT* pMallocFreeStruct;
  /* 0x0058 */ long MIDLVersion;
  /* 0x005c */ long Padding_70;
  /* 0x0060 */ const struct _COMM_FAULT_OFFSETS* CommFaultOffsets;
  /* 0x0068 */ const struct _USER_MARSHAL_ROUTINE_QUADRUPLE* aUserMarshalQuadruple;
  /* 0x0070 */ void* const* NotifyRoutineTable /* function */;
  /* 0x0078 */ unsigned __int64 mFlags;
  /* 0x0080 */ const struct _NDR_CS_ROUTINES* CsRoutineTables;
  /* 0x0088 */ void* ProxyServerInfo;
  /* 0x0090 */ const struct _NDR_EXPR_DESC* pExprInfo;
} MIDL_STUB_DESC, *PMIDL_STUB_DESC; /* size: 0x0098 */

typedef struct _MIDL_SERVER_INFO_
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0008 */ void* const* DispatchTable /* function */;
  /* 0x0010 */ const unsigned char* ProcString;
  /* 0x0018 */ const unsigned short* FmtStringOffset;
  /* 0x0020 */ void* const* ThunkTable /* function */;
  /* 0x0028 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0030 */ unsigned __int64 nCount;
  /* 0x0038 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_SERVER_INFO_, *PMIDL_SERVER_INFO_; /* size: 0x0040 */

struct tagCInterfaceStubHeader
{
  /* 0x0000 */ const struct _GUID* piid;
  /* 0x0008 */ const struct _MIDL_SERVER_INFO_* pServerInfo;
  /* 0x0010 */ unsigned long DispatchTableCount;
  /* 0x0014 */ long Padding_71;
  /* 0x0018 */ void* const* pDispatchTable /* function */;
}; /* size: 0x0020 */

struct IRpcStubBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Connect /* function */;
  /* 0x0020 */ void* Disconnect /* function */;
  /* 0x0028 */ void* Invoke /* function */;
  /* 0x0030 */ void* IsIIDSupported /* function */;
  /* 0x0038 */ void* CountRefs /* function */;
  /* 0x0040 */ void* DebugServerQueryInterface /* function */;
  /* 0x0048 */ void* DebugServerRelease /* function */;
}; /* size: 0x0050 */

struct tagCInterfaceStubVtbl
{
  /* 0x0000 */ struct tagCInterfaceStubHeader header;
  /* 0x0020 */ struct IRpcStubBufferVtbl Vtbl;
}; /* size: 0x0070 */

typedef struct _MIDL_STUBLESS_PROXY_INFO
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0008 */ const unsigned char* ProcFormatString;
  /* 0x0010 */ const unsigned short* FormatStringOffset;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0020 */ unsigned __int64 nCount;
  /* 0x0028 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_STUBLESS_PROXY_INFO, *PMIDL_STUBLESS_PROXY_INFO; /* size: 0x0030 */

struct tagCInterfaceProxyHeader
{
  /* 0x0000 */ const void* pStublessProxyInfo;
  /* 0x0008 */ const struct _GUID* piid;
}; /* size: 0x0010 */

struct tagCInterfaceProxyVtbl
{
  /* 0x0000 */ struct tagCInterfaceProxyHeader header;
  /* 0x0010 */ void** Vtbl /* zero-length array */;
}; /* size: 0x0010 */

struct TYPEINFOVTBL
{
  /* 0x0000 */ long Padding_72[12];
  /* 0x0030 */ char* m_szInterfaceName;
  /* 0x0038 */ struct METHOD_DESCRIPTOR* m_rgMethodDescs;
  /* 0x0040 */ struct _GUID m_iidBase;
  /* 0x0050 */ struct _MIDL_STUB_DESC m_stubDesc;
  /* 0x00e8 */ struct _MIDL_SERVER_INFO_ m_stubInfo;
  /* 0x0128 */ struct tagCInterfaceStubVtbl m_stubVtbl;
  /* 0x0198 */ struct _MIDL_STUBLESS_PROXY_INFO m_proxyInfo;
  /* 0x01c8 */ struct tagCInterfaceProxyVtbl m_proxyVtbl;
}; /* size: 0x01d8 */

enum tagCONDITION_TYPE
{
  CT_AND_CONDITION = 0,
  CT_OR_CONDITION = 1,
  CT_NOT_CONDITION = 2,
  CT_LEAF_CONDITION = 3,
};

typedef enum _PLUGPLAY_CONTROL_CLASS
{
  PlugPlayControlEnumerateDevice = 0,
  PlugPlayControlRegisterNewDevice = 1,
  PlugPlayControlDeregisterDevice = 2,
  PlugPlayControlInitializeDevice = 3,
  PlugPlayControlStartDevice = 4,
  PlugPlayControlUnlockDevice = 5,
  PlugPlayControlQueryAndRemoveDevice = 6,
  PlugPlayControlUserResponse = 7,
  PlugPlayControlGenerateLegacyDevice = 8,
  PlugPlayControlGetInterfaceDeviceList = 9,
  PlugPlayControlProperty = 10,
  PlugPlayControlDeviceClassAssociation = 11,
  PlugPlayControlGetRelatedDevice = 12,
  PlugPlayControlGetInterfaceDeviceAlias = 13,
  PlugPlayControlDeviceStatus = 14,
  PlugPlayControlGetDeviceDepth = 15,
  PlugPlayControlQueryDeviceRelations = 16,
  PlugPlayControlTargetDeviceRelation = 17,
  PlugPlayControlQueryConflictList = 18,
  PlugPlayControlRetrieveDock = 19,
  PlugPlayControlResetDevice = 20,
  PlugPlayControlHaltDevice = 21,
  PlugPlayControlGetBlockedDriverList = 22,
  MaxPlugPlayControl = 23,
} PLUGPLAY_CONTROL_CLASS, *PPLUGPLAY_CONTROL_CLASS;

typedef struct _CERT_QC_STATEMENT
{
  /* 0x0000 */ char* pszStatementId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB StatementInfo;
} CERT_QC_STATEMENT, *PCERT_QC_STATEMENT; /* size: 0x0018 */

typedef struct _RTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ unsigned char* CurrentEncodingPosition;
  /* 0x0008 */ unsigned char* EndEncodingPosition;
  /* 0x0010 */ unsigned __int64 BytesWrittenOrRequired;
  /* 0x0018 */ unsigned __int64 LongestLegalLength;
  /* 0x0020 */ struct _LBLOB* BufferInUse;
  /* 0x0028 */ struct _LBLOB* FixedSizeBuffer;
  /* 0x0030 */ struct _LBLOB* DynamicBuffer;
  /* 0x0038 */ struct _LBLOB** ReturnedBufferUsed;
  /* 0x0040 */ void* ResizePolicy /* function */;
  /* 0x0048 */ void* Reserved1;
  /* 0x0050 */ void* Reserved2;
} RTL_SMART_LBLOB_WRITING_CONTEXT, *PRTL_SMART_LBLOB_WRITING_CONTEXT; /* size: 0x0058 */

typedef struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT BlobWritingContext;
  /* 0x0058 */ void* EncodingFunction /* function */;
  /* 0x0060 */ void* MultiEncodingFunction /* function */;
} RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT, *PRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT; /* size: 0x0068 */

struct AsyncIMultiQI
{
}; /* size: 0x0008 */

struct tagFORMATETC
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_73[6];
  /* 0x0008 */ struct tagDVTARGETDEVICE* ptd;
  /* 0x0010 */ unsigned long dwAspect;
  /* 0x0014 */ long lindex;
  /* 0x0018 */ unsigned long tymed;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct FORMATETCDATA
{
  /* 0x0000 */ struct tagFORMATETC _FormatEtc;
  /* 0x0020 */ int fSaveOnFlush;
  /* 0x0024 */ unsigned long dwReserved1;
  /* 0x0028 */ unsigned long dwReserved2;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct FORMATETCDATAARRAY
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA _FormatEtcData[1];
}; /* size: 0x0048 */

class CBasedContextPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CContextList
{
  /* 0x0000 */ class CBasedContextPtr _pctxHead;
  /* 0x0008 */ long _cReferences;
}; /* size: 0x0010 */

class CClassMonikerFactory
{
}; /* size: 0x0010 */

enum DCOM_ENDPOINT_FLAGS
{
  fUseInternetPorts = 1,
};

typedef struct _CRYPT_ATTRIBUTE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long cValue;
  /* 0x000c */ long Padding_74;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_ATTRIBUTE, *PCRYPT_ATTRIBUTE; /* size: 0x0018 */

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned char* IoStatusBlockRange;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} FILE_IOSTATUSBLOCK_RANGE_INFORMATION, *PFILE_IOSTATUSBLOCK_RANGE_INFORMATION; /* size: 0x0010 */

struct SUUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct _GUID key;
}; /* size: 0x0020 */

struct SOIDRegistration
{
  /* 0x0000 */ struct SUUIDHashNode Node;
  /* 0x0020 */ unsigned short cRefs;
  /* 0x0022 */ unsigned short flags;
  /* 0x0024 */ long Padding_75;
  /* 0x0028 */ unsigned __int64 mid;
  /* 0x0030 */ unsigned __int64 oxid;
  /* 0x0038 */ struct SOIDRegistration* pPrevList;
  /* 0x0040 */ struct SOIDRegistration* pNextList;
  /* 0x0048 */ class CRefCache* pRefCache;
}; /* size: 0x0050 */

class CUUIDHashTable
{
}; /* size: 0x0028 */

class CROIDTable
{
  union
  {
    /* 0x0000 */ unsigned long _cOidsToAdd;
    /* 0x0000 */ unsigned long _cOidsToRemove;
    /* 0x0000 */ struct SOIDRegistration _ClientOIDRegList;
    /* 0x0000 */ int _fWorker;
    /* 0x0000 */ unsigned long _dwSleepPeriod;
    /* 0x0000 */ class CUUIDHashTable _ClientRegisteredOIDs;
  }; /* size: 0x0050 */
}; /* size: 0x0001 */

enum CALLFRAME_FREE
{
  CALLFRAME_FREE_NONE = 0,
  CALLFRAME_FREE_IN = 1,
  CALLFRAME_FREE_INOUT = 2,
  CALLFRAME_FREE_OUT = 4,
  CALLFRAME_FREE_TOP_INOUT = 8,
  CALLFRAME_FREE_TOP_OUT = 16,
  CALLFRAME_FREE_ALL = 31,
};

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const struct _GUID* ExtensionGuid;
  /* 0x0010 */ unsigned long Id;
  /* 0x0014 */ unsigned long Depth;
  /* 0x0018 */ unsigned long OutFlags;
  /* 0x001c */ long __PADDING__[1];
} FINDFIRSTACTIVATIONCONTEXTSECTION, *PFINDFIRSTACTIVATIONCONTEXTSECTION; /* size: 0x0020 */

typedef struct _tagSCtxListIndex
{
  /* 0x0000 */ int idx;
  /* 0x0004 */ int next;
  /* 0x0008 */ int prev;
} tagSCtxListIndex, *PtagSCtxListIndex; /* size: 0x000c */

typedef enum _DEVICE_POWER_STATE
{
  PowerDeviceUnspecified = 0,
  PowerDeviceD0 = 1,
  PowerDeviceD1 = 2,
  PowerDeviceD2 = 3,
  PowerDeviceD3 = 4,
  PowerDeviceMaximum = 5,
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef enum __MIDL_IBindStatusCallback_0002
{
  BINDINFOF_URLENCODESTGMEDDATA = 1,
  BINDINFOF_URLENCODEDEXTRAINFO = 2,
} _MIDL_IBindStatusCallback_0002, *P_MIDL_IBindStatusCallback_0002;

typedef enum _TAG_UNNAMED_4
{
  QIC_STATICMARSHAL = 1,
  QIC_DISCONNECTED = 2,
  QIC_ASYNC = 4,
  QIC_WEAKCLIENT = 8,
  QIC_BEGINCALLED = 16,
} TAG_UNNAMED_4, *PTAG_UNNAMED_4;

typedef enum _EVENT_INFORMATION_CLASS
{
  EventBasicInformation = 0,
} EVENT_INFORMATION_CLASS, *PEVENT_INFORMATION_CLASS;

typedef enum _IO_COMPLETION_INFORMATION_CLASS
{
  IoCompletionBasicInformation = 0,
} IO_COMPLETION_INFORMATION_CLASS, *PIO_COMPLETION_INFORMATION_CLASS;

typedef struct _COAUTHINFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pwszServerPrincName;
  /* 0x0010 */ unsigned long dwAuthnLevel;
  /* 0x0014 */ unsigned long dwImpersonationLevel;
  /* 0x0018 */ struct _COAUTHIDENTITY* pAuthIdentityData;
  /* 0x0020 */ unsigned long dwCapabilities;
  /* 0x0024 */ long __PADDING__[1];
} COAUTHINFO, *PCOAUTHINFO; /* size: 0x0028 */

typedef enum _TAG_UNNAMED_5
{
  None = 0,
  Relative = 1,
  Ids = 2,
  Absolute = 3,
} TAG_UNNAMED_5, *PTAG_UNNAMED_5;

struct DDEADVISE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short reserved : 14; /* bit position: 0 */
    /* 0x0000 */ unsigned short fDeferUpd : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
}; /* size: 0x0004 */

struct tagKEYBDINPUT
{
  /* 0x0000 */ unsigned short wVk;
  /* 0x0002 */ unsigned short wScan;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ long Padding_76;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

struct CComApartment::MessageListHead
{
  /* 0x0000 */ class IMessageParam* pFirst;
  /* 0x0008 */ class IMessageParam* pLast;
}; /* size: 0x0010 */

enum tagTYPEFLAGS
{
  TYPEFLAG_FAPPOBJECT = 1,
  TYPEFLAG_FCANCREATE = 2,
  TYPEFLAG_FLICENSED = 4,
  TYPEFLAG_FPREDECLID = 8,
  TYPEFLAG_FHIDDEN = 16,
  TYPEFLAG_FCONTROL = 32,
  TYPEFLAG_FDUAL = 64,
  TYPEFLAG_FNONEXTENSIBLE = 128,
  TYPEFLAG_FOLEAUTOMATION = 256,
  TYPEFLAG_FRESTRICTED = 512,
  TYPEFLAG_FAGGREGATABLE = 1024,
  TYPEFLAG_FREPLACEABLE = 2048,
  TYPEFLAG_FDISPATCHABLE = 4096,
  TYPEFLAG_FREVERSEBIND = 8192,
  TYPEFLAG_FPROXY = 16384,
};

class SafeCExposedDocFile
{
  /* 0x0000 */ class CExposedDocFile* _p;
}; /* size: 0x0008 */

struct tagPropsOutInfo
{
  /* 0x0000 */ unsigned long cIfs;
  /* 0x0004 */ long Padding_77;
  /* 0x0008 */ struct _GUID* piid;
  /* 0x0010 */ HRESULT* phresults;
  /* 0x0018 */ struct tagMInterfacePointer** ppIntfData;
}; /* size: 0x0020 */

class ActivationPropertiesOut::OutSerializer
{
  /* 0x0000 */ long Padding_78[6];
  /* 0x0018 */ struct tagPropsOutInfo _info;
  /* 0x0038 */ struct IUnknown* _pUnk;
  /* 0x0040 */ void** _ppvObj;
  /* 0x0048 */ unsigned long _size;
  /* 0x004c */ long Padding_79;
  /* 0x0050 */ struct tagCOMVERSION* _pClientCOMVersion;
  /* 0x0058 */ struct _GUID _pIIDs[10];
  /* 0x00f8 */ int _fBrokenRefCount;
  /* 0x00fc */ int _fToReleaseIFD;
}; /* size: 0x0100 */

typedef struct _REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ unsigned short ReparseDataLength;
  /* 0x0002 */ unsigned short UnparsedNameLength;
} REPARSE_POINT_INFORMATION, *PREPARSE_POINT_INFORMATION; /* size: 0x0004 */

enum tagREGCLS
{
  REGCLS_SINGLEUSE = 0,
  REGCLS_MULTIPLEUSE = 1,
  REGCLS_MULTI_SEPARATE = 2,
  REGCLS_SUSPENDED = 4,
  REGCLS_SURROGATE = 8,
};

enum tagPKA_FLAGS
{
  PKA_SET = 0,
  PKA_APPEND = 1,
  PKA_DELETE = 2,
};

enum tagSYSKIND
{
  SYS_WIN16 = 0,
  SYS_WIN32 = 1,
  SYS_MAC = 2,
  SYS_WIN64 = 3,
};

class CBasedBytePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef enum _EVENT_TYPE
{
  NotificationEvent = 0,
  SynchronizationEvent = 1,
} EVENT_TYPE, *PEVENT_TYPE;

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING
{
  /* 0x0000 */ const void* Data;
  /* 0x0008 */ unsigned long AssemblyRosterIndex;
  /* 0x000c */ long Padding_80;
  /* 0x0010 */ void* ResolutionContext;
  /* 0x0018 */ struct _UNICODE_STRING Root;
  /* 0x0028 */ unsigned char KnownRoot;
  /* 0x0029 */ char Padding_81[7];
  /* 0x0030 */ unsigned __int64 RootCount;
  /* 0x0038 */ unsigned char CancelResolution;
  /* 0x0039 */ char __PADDING__[7];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING; /* size: 0x0040 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned __int64 RootIndex;
  /* 0x0010 */ unsigned char CancelResolution;
  /* 0x0011 */ unsigned char NoMoreEntries;
  /* 0x0012 */ char Padding_82[6];
  /* 0x0018 */ struct _UNICODE_STRING Root;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT; /* size: 0x0028 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned long RootIndexUsed;
  /* 0x000c */ long __PADDING__[1];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL; /* size: 0x0010 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING
{
  /* 0x0000 */ void* ResolutionContext;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING; /* size: 0x0008 */

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA
{
  union
  {
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
  }; /* size: 0x0040 */
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA; /* size: 0x0040 */

struct IPersistFile
{
}; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_SINGLE_OPTION
{
  SQSO_SCHEMA = 0,
  SQSO_LOCALE_WORD_BREAKING = 1,
  SQSO_WORD_BREAKER = 2,
  SQSO_NATURAL_SYNTAX = 3,
  SQSO_AUTOMATIC_WILDCARD = 4,
  SQSO_TRACE_LEVEL = 5,
  SQSO_LANGUAGE_KEYWORDS = 6,
};

struct HTASK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ATOM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned short UsageCount;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short NameLength;
  /* 0x0006 */ wchar_t Name[1];
} ATOM_BASIC_INFORMATION, *PATOM_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct __midl_frag1384_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1384_t, *P_midl_frag1384_t; /* size: 0x0028 */

enum tagUSERCLASSTYPE
{
  USERCLASSTYPE_FULL = 1,
  USERCLASSTYPE_SHORT = 2,
  USERCLASSTYPE_APPNAME = 3,
};

typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int SizeOfNativeDescriptor;
  /* 0x000c */ unsigned int SizeOfFunctionEntry;
  /* 0x0010 */ unsigned int NumberOfDescriptors;
  /* 0x0014 */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_STREAM, *PMINIDUMP_FUNCTION_TABLE_STREAM; /* size: 0x0018 */

typedef struct _SYSTEM_LOOKASIDE_INFORMATION
{
  /* 0x0000 */ unsigned short CurrentDepth;
  /* 0x0002 */ unsigned short MaximumDepth;
  /* 0x0004 */ unsigned long TotalAllocates;
  /* 0x0008 */ unsigned long AllocateMisses;
  /* 0x000c */ unsigned long TotalFrees;
  /* 0x0010 */ unsigned long FreeMisses;
  /* 0x0014 */ unsigned long Type;
  /* 0x0018 */ unsigned long Tag;
  /* 0x001c */ unsigned long Size;
} SYSTEM_LOOKASIDE_INFORMATION, *PSYSTEM_LOOKASIDE_INFORMATION; /* size: 0x0020 */

class Enum
{
}; /* size: 0x0008 */

typedef union _ULARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ULARGE_INTEGER, *PULARGE_INTEGER; /* size: 0x0008 */

typedef enum __MIDL_IInternetSecurityManager_0001
{
  PUAF_DEFAULT = 0,
  PUAF_NOUI = 1,
  PUAF_ISFILE = 2,
  PUAF_WARN_IF_DENIED = 4,
  PUAF_FORCEUI_FOREGROUND = 8,
  PUAF_CHECK_TIFS = 16,
  PUAF_DONTCHECKBOXINDIALOG = 32,
  PUAF_TRUSTED = 64,
  PUAF_ACCEPT_WILDCARD_SCHEME = 128,
  PUAF_ENFORCERESTRICTED = 256,
  PUAF_NOSAVEDFILECHECK = 512,
  PUAF_REQUIRESAVEDFILECHECK = 1024,
  PUAF_DONT_USE_CACHE = 4096,
  PUAF_RESERVED1 = 8192,
  PUAF_RESERVED2 = 16384,
  PUAF_LMZ_UNLOCKED = 0x10000,
  PUAF_LMZ_LOCKED = 0x20000,
  PUAF_DEFAULTZONEPOL = 0x40000,
  PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 0x80000,
  PUAF_NOUIIFLOCKED = 0x100000,
  PUAF_DRAGPROTOCOLCHECK = 0x200000,
} _MIDL_IInternetSecurityManager_0001, *P_MIDL_IInternetSecurityManager_0001;

struct tagENTRY
{
  /* 0x0000 */ unsigned long propid;
  /* 0x0004 */ unsigned long cch;
  /* 0x0008 */ char sz[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

struct tagDICTIONARY
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ struct tagENTRY rgEntry[1];
}; /* size: 0x0010 */

enum CALLFRAME_WALK
{
  CALLFRAME_WALK_IN = 1,
  CALLFRAME_WALK_INOUT = 2,
  CALLFRAME_WALK_OUT = 4,
};

typedef struct _KEY_WOW64_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long UserFlags;
} KEY_WOW64_FLAGS_INFORMATION, *PKEY_WOW64_FLAGS_INFORMATION; /* size: 0x0004 */

typedef enum __MIDL_IInternetZoneManager_0001
{
  MAX_ZONE_PATH = 260,
  MAX_ZONE_DESCRIPTION = 200,
} _MIDL_IInternetZoneManager_0001, *P_MIDL_IInternetZoneManager_0001;

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NETWORK_PHYSICAL_NAME_INFORMATION, *PFILE_NETWORK_PHYSICAL_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ID_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ long Padding_83;
  /* 0x0048 */ union _LARGE_INTEGER FileId;
  /* 0x0050 */ wchar_t FileName[1];
  /* 0x0052 */ char __PADDING__[6];
} FILE_ID_FULL_DIR_INFORMATION, *PFILE_ID_FULL_DIR_INFORMATION; /* size: 0x0058 */

class Interceptor
{
  /* 0x0000 */ long Padding_84[12];
  /* 0x0030 */ struct ICallFrameEvents* m_pCallSink;
  /* 0x0038 */ void* const* m_pvtbl /* function */;
  /* 0x0040 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0048 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0050 */ const struct tagProxyFileInfo** m_pProxyFileList;
  /* 0x0058 */ const char* m_szInterfaceName;
  /* 0x0060 */ int m_fMdOwnsHeader;
  /* 0x0064 */ int m_fUsingTypelib;
  /* 0x0068 */ struct TYPEINFOVTBL* m_ptypeinfovtbl;
  /* 0x0070 */ unsigned int m_cMethodsBase;
  /* 0x0074 */ long Padding_85;
  /* 0x0078 */ struct ICallInterceptor* m_pBaseInterceptor;
  /* 0x0080 */ struct IUnknown* m_punkBaseInterceptor;
  /* 0x0088 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x0090 */ struct IUnknown* m_punkOuter;
  /* 0x0098 */ long m_refs;
}; /* size: 0x00a0 */

typedef struct _remoteMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ long Padding_86;
  /* 0x0010 */ struct _userHMETAFILE* hMF;
} remoteMETAFILEPICT, *PremoteMETAFILEPICT; /* size: 0x0018 */

class CDfName
{
  /* 0x0000 */ unsigned char _ab[64];
  /* 0x0040 */ unsigned short _cb;
}; /* size: 0x0042 */

class PTSetMember
{
  /* 0x0000 */ long Padding_87[4];
  /* 0x0010 */ unsigned long _dlTree;
  /* 0x0014 */ unsigned long _dlName;
  /* 0x0018 */ unsigned long _ulLevel;
  /* 0x001c */ class CDfName _dfnName;
  /* 0x005e */ const unsigned short _uType;
}; /* size: 0x0060 */

enum tagXMLEMEM_TYPE
{
  XMLELEMTYPE_ELEMENT = 0,
  XMLELEMTYPE_TEXT = 1,
  XMLELEMTYPE_COMMENT = 2,
  XMLELEMTYPE_DOCUMENT = 3,
  XMLELEMTYPE_DTD = 4,
  XMLELEMTYPE_PI = 5,
  XMLELEMTYPE_OTHER = 6,
};

struct tagIncomingCallData
{
  /* 0x0000 */ unsigned long dwClientPID;
}; /* size: 0x0004 */

class CPrivAlloc
{
}; /* size: 0x0001 */

enum tagQUERY_PARSER_MANAGER_OPTION
{
  QPMO_SCHEMA_BINARY_NAME = 0,
  QPMO_PRELOCALIZED_SCHEMA_BINARY_PATH = 1,
  QPMO_UNLOCALIZED_SCHEMA_BINARY_PATH = 2,
  QPMO_LOCALIZED_SCHEMA_BINARY_PATH = 3,
  QPMO_APPEND_LCID_TO_LOCALIZED_PATH = 4,
  QPMO_LOCALIZER_SUPPORT = 5,
};

struct tagMETARECORD
{
  /* 0x0000 */ unsigned long rdSize;
  /* 0x0004 */ unsigned short rdFunction;
  /* 0x0006 */ unsigned short rdParm[1];
}; /* size: 0x0008 */

class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>
{
  /* 0x0000 */ long Padding_88[2];
  /* 0x0008 */ unsigned long m_dwReleaseTime;
  /* 0x000c */ long Padding_89;
  /* 0x0010 */ class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>* m_pcache;
  /* 0x0018 */ volatile long m_refs;
  /* 0x001c */ struct _GUID m_guidkey;
}; /* size: 0x0030 */

typedef struct _CERT_STORE_PROV_FIND_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long dwFindFlags;
  /* 0x000c */ unsigned long dwFindType;
  /* 0x0010 */ const void* pvFindPara;
} CERT_STORE_PROV_FIND_INFO, *PCERT_STORE_PROV_FIND_INFO; /* size: 0x0018 */

struct AsyncIAdviseSink2
{
  /* 0x0000 */ struct AsyncIAdviseSink2Vtbl* lpVtbl;
}; /* size: 0x0008 */

typedef enum _SUITE_TYPE
{
  SmallBusiness = 0,
  Enterprise = 1,
  BackOffice = 2,
  CommunicationServer = 3,
  TerminalServer = 4,
  SmallBusinessRestricted = 5,
  EmbeddedNT = 6,
  DataCenter = 7,
  SingleUserTS = 8,
  Personal = 9,
  Blade = 10,
  EmbeddedRestricted = 11,
  SecurityAppliance = 12,
  StorageServer = 13,
  ComputeServer = 14,
  WHServer = 15,
  MaxSuiteType = 16,
} SUITE_TYPE, *PSUITE_TYPE;

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING ServiceName;
  /* 0x0010 */ wchar_t* DeviceInstance;
  /* 0x0018 */ unsigned long DeviceInstanceLength;
  /* 0x001c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA, *PPLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA; /* size: 0x0020 */

struct IEnumString
{
}; /* size: 0x0008 */

enum tagVARKIND
{
  VAR_PERINSTANCE = 0,
  VAR_STATIC = 1,
  VAR_CONST = 2,
  VAR_DISPATCH = 3,
};

typedef enum _CM_SHARE_DISPOSITION
{
  CmResourceShareUndetermined = 0,
  CmResourceShareDeviceExclusive = 1,
  CmResourceShareDriverExclusive = 2,
  CmResourceShareShared = 3,
} CM_SHARE_DISPOSITION, *PCM_SHARE_DISPOSITION;

typedef struct _RPC_TRANSFER_SYNTAX
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_TRANSFER_SYNTAX, *PRPC_TRANSFER_SYNTAX; /* size: 0x0014 */

class XIPersistStorage
{
  /* 0x0000 */ struct IPersistStorage* _p;
}; /* size: 0x0008 */

enum tagMKREDUCE
{
  MKRREDUCE_ONE = 0x30000,
  MKRREDUCE_TOUSER = 0x20000,
  MKRREDUCE_THROUGHUSER = 0x10000,
  MKRREDUCE_ALL = 0,
};

struct tagMONHSZSTRUCTW
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fsAction;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_90;
  /* 0x0010 */ struct HSZ__* hsz;
  /* 0x0018 */ void* hTask;
  /* 0x0020 */ wchar_t str[1];
  /* 0x0022 */ char __PADDING__[6];
}; /* size: 0x0028 */

struct tagORPC_EXTENT_ARRAY
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ struct tagORPC_EXTENT** extent;
}; /* size: 0x0010 */

typedef struct __midl_frag595_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag595_t, *P_midl_frag595_t; /* size: 0x0058 */

enum tagSF_TYPE
{
  SF_ERROR = 10,
  SF_I1 = 16,
  SF_I2 = 2,
  SF_I4 = 3,
  SF_I8 = 20,
  SF_BSTR = 8,
  SF_UNKNOWN = 13,
  SF_DISPATCH = 9,
  SF_VARIANT = 12,
  SF_RECORD = 36,
  SF_HAVEIID = 0xffff800d,
};

typedef struct _SID_AND_ATTRIBUTES
{
  /* 0x0000 */ void* Sid;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ long __PADDING__[1];
} SID_AND_ATTRIBUTES, *PSID_AND_ATTRIBUTES; /* size: 0x0010 */

typedef struct _TOKEN_GROUPS
{
  /* 0x0000 */ unsigned long GroupCount;
  /* 0x0004 */ long Padding_91;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES Groups[1];
} TOKEN_GROUPS, *PTOKEN_GROUPS; /* size: 0x0018 */

enum tagBINDSPEED
{
  BINDSPEED_INDEFINITE = 1,
  BINDSPEED_MODERATE = 2,
  BINDSPEED_IMMEDIATE = 3,
};

typedef enum __MIDL_IBindStatusCallback_0003
{
  BINDF_ASYNCHRONOUS = 1,
  BINDF_ASYNCSTORAGE = 2,
  BINDF_NOPROGRESSIVERENDERING = 4,
  BINDF_OFFLINEOPERATION = 8,
  BINDF_GETNEWESTVERSION = 16,
  BINDF_NOWRITECACHE = 32,
  BINDF_NEEDFILE = 64,
  BINDF_PULLDATA = 128,
  BINDF_IGNORESECURITYPROBLEM = 256,
  BINDF_RESYNCHRONIZE = 512,
  BINDF_HYPERLINK = 1024,
  BINDF_NO_UI = 2048,
  BINDF_SILENTOPERATION = 4096,
  BINDF_PRAGMA_NO_CACHE = 8192,
  BINDF_GETCLASSOBJECT = 16384,
  BINDF_RESERVED_1 = 0xffff8000,
  BINDF_FREE_THREADED = 0x10000,
  BINDF_DIRECT_READ = 0x20000,
  BINDF_FORMS_SUBMIT = 0x40000,
  BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
  BINDF_FROMURLMON = 0x100000,
  BINDF_FWD_BACK = 0x200000,
  BINDF_PREFERDEFAULTHANDLER = 0x400000,
  BINDF_ENFORCERESTRICTED = 0x800000,
} _MIDL_IBindStatusCallback_0003, *P_MIDL_IBindStatusCallback_0003;

typedef struct _HMAC_Info
{
  /* 0x0000 */ unsigned int HashAlgid;
  /* 0x0004 */ long Padding_92;
  /* 0x0008 */ unsigned char* pbInnerString;
  /* 0x0010 */ unsigned long cbInnerString;
  /* 0x0014 */ long Padding_93;
  /* 0x0018 */ unsigned char* pbOuterString;
  /* 0x0020 */ unsigned long cbOuterString;
  /* 0x0024 */ long __PADDING__[1];
} HMAC_Info, *PHMAC_Info; /* size: 0x0028 */

typedef struct _PAGEDIR_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageDirectoryBase : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} PAGEDIR_INFORMATION, *PPAGEDIR_INFORMATION; /* size: 0x0008 */

typedef enum _TRANSACTION_STATE
{
  TransactionStateNormal = 1,
  TransactionStateIndoubt = 2,
  TransactionStateCommittedNotify = 3,
} TRANSACTION_STATE, *PTRANSACTION_STATE;

class CMSFHeaderData
{
  /* 0x0000 */ long Padding_94[19];
  /* 0x004c */ unsigned long _sectFat[109];
}; /* size: 0x0200 */

class CMSFHeader
{
  /* 0x0000 */ class CMSFHeaderData _hdr;
  /* 0x0200 */ int _fDirty;
}; /* size: 0x0204 */

enum tagDATADIR
{
  DATADIR_GET = 1,
  DATADIR_SET = 2,
};

typedef struct _FILE_MOVE_CLUSTER_INFORMATION
{
  /* 0x0000 */ unsigned long ClusterCount;
  /* 0x0004 */ long Padding_95;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_MOVE_CLUSTER_INFORMATION, *PFILE_MOVE_CLUSTER_INFORMATION; /* size: 0x0018 */

typedef struct _IMAGE_VXD_HEADER
{
  /* 0x0000 */ unsigned short e32_magic;
  /* 0x0002 */ unsigned char e32_border;
  /* 0x0003 */ unsigned char e32_worder;
  /* 0x0004 */ unsigned long e32_level;
  /* 0x0008 */ unsigned short e32_cpu;
  /* 0x000a */ unsigned short e32_os;
  /* 0x000c */ unsigned long e32_ver;
  /* 0x0010 */ unsigned long e32_mflags;
  /* 0x0014 */ unsigned long e32_mpages;
  /* 0x0018 */ unsigned long e32_startobj;
  /* 0x001c */ unsigned long e32_eip;
  /* 0x0020 */ unsigned long e32_stackobj;
  /* 0x0024 */ unsigned long e32_esp;
  /* 0x0028 */ unsigned long e32_pagesize;
  /* 0x002c */ unsigned long e32_lastpagesize;
  /* 0x0030 */ unsigned long e32_fixupsize;
  /* 0x0034 */ unsigned long e32_fixupsum;
  /* 0x0038 */ unsigned long e32_ldrsize;
  /* 0x003c */ unsigned long e32_ldrsum;
  /* 0x0040 */ unsigned long e32_objtab;
  /* 0x0044 */ unsigned long e32_objcnt;
  /* 0x0048 */ unsigned long e32_objmap;
  /* 0x004c */ unsigned long e32_itermap;
  /* 0x0050 */ unsigned long e32_rsrctab;
  /* 0x0054 */ unsigned long e32_rsrccnt;
  /* 0x0058 */ unsigned long e32_restab;
  /* 0x005c */ unsigned long e32_enttab;
  /* 0x0060 */ unsigned long e32_dirtab;
  /* 0x0064 */ unsigned long e32_dircnt;
  /* 0x0068 */ unsigned long e32_fpagetab;
  /* 0x006c */ unsigned long e32_frectab;
  /* 0x0070 */ unsigned long e32_impmod;
  /* 0x0074 */ unsigned long e32_impmodcnt;
  /* 0x0078 */ unsigned long e32_impproc;
  /* 0x007c */ unsigned long e32_pagesum;
  /* 0x0080 */ unsigned long e32_datapage;
  /* 0x0084 */ unsigned long e32_preload;
  /* 0x0088 */ unsigned long e32_nrestab;
  /* 0x008c */ unsigned long e32_cbnrestab;
  /* 0x0090 */ unsigned long e32_nressum;
  /* 0x0094 */ unsigned long e32_autodata;
  /* 0x0098 */ unsigned long e32_debuginfo;
  /* 0x009c */ unsigned long e32_debuglen;
  /* 0x00a0 */ unsigned long e32_instpreload;
  /* 0x00a4 */ unsigned long e32_instdemand;
  /* 0x00a8 */ unsigned long e32_heapsize;
  /* 0x00ac */ unsigned char e32_res3[12];
  /* 0x00b8 */ unsigned long e32_winresoff;
  /* 0x00bc */ unsigned long e32_winreslen;
  /* 0x00c0 */ unsigned short e32_devid;
  /* 0x00c2 */ unsigned short e32_ddkver;
} IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER; /* size: 0x00c4 */

enum tagRpcCallClientLocality
{
  rcclInvalid = 0,
  rcclLocal = 1,
  rcclRemote = 2,
  rcclClientUnknownLocality = 3,
};

struct LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Flink;
  /* 0x0004 */ unsigned long Blink;
}; /* size: 0x0008 */

typedef struct _KLDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ unsigned long __Undefined1;
  /* 0x000c */ unsigned long __Undefined2;
  /* 0x0010 */ unsigned long __Undefined3;
  /* 0x0014 */ unsigned long NonPagedDebugInfo;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short __Undefined5;
  /* 0x003c */ unsigned long __Undefined6;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY32, *PKLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

enum tagSTGMOVE
{
  STGMOVE_MOVE = 0,
  STGMOVE_COPY = 1,
  STGMOVE_SHALLOWCOPY = 2,
};

typedef struct _FILE_DISPOSITION_INFO
{
  /* 0x0000 */ unsigned char DeleteFileW;
} FILE_DISPOSITION_INFO, *PFILE_DISPOSITION_INFO; /* size: 0x0001 */

struct IRpcCall
{
}; /* size: 0x0008 */

typedef struct _EVENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char Channel;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char Opcode;
  /* 0x0006 */ unsigned short Task;
  /* 0x0008 */ unsigned __int64 Keyword;
} EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR; /* size: 0x0010 */

enum tagDISCARDCACHE
{
  DISCARDCACHE_SAVEIFDIRTY = 0,
  DISCARDCACHE_NOSAVE = 1,
};

typedef enum _TAG_UNNAMED_6
{
  STATE_WAITINGFORBEGIN = 1,
  STATE_WAITINGFORFINISH = 2,
  STATE_BEGINABORTED = 3,
  STATE_EXECUTINGFINISH = 4,
  STATE_INITIALIZINGOBJECT = 5,
} TAG_UNNAMED_6, *PTAG_UNNAMED_6;

class CAsyncStateMachine
{
  /* 0x0000 */ long Padding_96[2];
  /* 0x0008 */ unsigned long _dwState;
  /* 0x000c */ HRESULT _hr;
  /* 0x0010 */ enum _TAG_UNNAMED_6 eflags;
}; /* size: 0x0018 */

enum tagLocalServerType
{
  LocalServerType16 = 0,
  LocalServerType32 = 1,
};

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS
{
  JournalCreateKey = 0,
  JournalDeleteKey = 1,
  JournalRenameKey = 2,
  JournalSetValue = 3,
  JournalDeleteValue = 4,
  JournalSetKeySecurity = 5,
  JournalSetKeyUserFlags = 6,
  JournalSetLastWriteTime = 7,
  JournalBeginTransaction = 8,
  JournalCommitTransaction = 9,
  JournalAbortTransaction = 10,
  MaxJournalChangeAction = 11,
} JOURNAL_CHANGE_INFORMATION_CLASS, *PJOURNAL_CHANGE_INFORMATION_CLASS;

typedef struct _EXCEPTION_RECORD
{
  /* 0x0000 */ unsigned long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0010 */ void* ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ long Padding_97;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD, *PEXCEPTION_RECORD; /* size: 0x0098 */

typedef struct _EXCEPTION_DEBUG_INFO
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ unsigned long dwFirstChance;
  /* 0x009c */ long __PADDING__[1];
} EXCEPTION_DEBUG_INFO, *PEXCEPTION_DEBUG_INFO; /* size: 0x00a0 */

typedef struct _KSYSTEM_TIME
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long High1Time;
  /* 0x0008 */ long High2Time;
} KSYSTEM_TIME, *PKSYSTEM_TIME; /* size: 0x000c */

enum RpcProxyPerfCounters
{
  RpcCurrentUniqueUser = 1,
  RpcBackEndConnectionAttempts = 2,
  RpcBackEndConnectionFailed = 3,
  RpcRequestsPerSecond = 4,
  RpcIncomingConnections = 5,
  RpcIncomingBandwidth = 6,
  RpcOutgoingBandwidth = 7,
  RpcAttemptedLbsDecisions = 8,
  RpcFailedLbsDecisions = 9,
  RpcAttemptedLbsMessages = 10,
  RpcFailedLbsMessages = 11,
  RpcLastCounter = 12,
};

typedef enum _WATCHDOG_INFORMATION_CLASS
{
  WdInfoTimeoutValue = 0,
  WdInfoResetTimer = 1,
  WdInfoStopTimer = 2,
  WdInfoStartTimer = 3,
  WdInfoTriggerAction = 4,
  WdInfoState = 5,
} WATCHDOG_INFORMATION_CLASS, *PWATCHDOG_INFORMATION_CLASS;

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ union _LARGE_INTEGER VirtualClock;
} TRANSACTIONMANAGER_BASIC_INFORMATION, *PTRANSACTIONMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct __MIDL_ILocalObjectExporter_0003
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oid;
} _MIDL_ILocalObjectExporter_0003, *P_MIDL_ILocalObjectExporter_0003; /* size: 0x0010 */

enum tagVARFLAGS
{
  VARFLAG_FREADONLY = 1,
  VARFLAG_FSOURCE = 2,
  VARFLAG_FBINDABLE = 4,
  VARFLAG_FREQUESTEDIT = 8,
  VARFLAG_FDISPLAYBIND = 16,
  VARFLAG_FDEFAULTBIND = 32,
  VARFLAG_FHIDDEN = 64,
  VARFLAG_FRESTRICTED = 128,
  VARFLAG_FDEFAULTCOLLELEM = 256,
  VARFLAG_FUIDEFAULT = 512,
  VARFLAG_FNONBROWSABLE = 1024,
  VARFLAG_FREPLACEABLE = 2048,
  VARFLAG_FIMMEDIATEBIND = 4096,
};

typedef enum _SYSDBG_COMMAND
{
  SysDbgQueryModuleInformation = 0,
  SysDbgQueryTraceInformation = 1,
  SysDbgSetTracepoint = 2,
  SysDbgSetSpecialCall = 3,
  SysDbgClearSpecialCalls = 4,
  SysDbgQuerySpecialCalls = 5,
  SysDbgBreakPoint = 6,
  SysDbgQueryVersion = 7,
  SysDbgReadVirtual = 8,
  SysDbgWriteVirtual = 9,
  SysDbgReadPhysical = 10,
  SysDbgWritePhysical = 11,
  SysDbgReadControlSpace = 12,
  SysDbgWriteControlSpace = 13,
  SysDbgReadIoSpace = 14,
  SysDbgWriteIoSpace = 15,
  SysDbgReadMsr = 16,
  SysDbgWriteMsr = 17,
  SysDbgReadBusData = 18,
  SysDbgWriteBusData = 19,
  SysDbgCheckLowMemory = 20,
  SysDbgEnableKernelDebugger = 21,
  SysDbgDisableKernelDebugger = 22,
  SysDbgGetAutoKdEnable = 23,
  SysDbgSetAutoKdEnable = 24,
  SysDbgGetPrintBufferSize = 25,
  SysDbgSetPrintBufferSize = 26,
  SysDbgGetKdUmExceptionEnable = 27,
  SysDbgSetKdUmExceptionEnable = 28,
  SysDbgGetTriageDump = 29,
  SysDbgGetKdBlockEnable = 30,
  SysDbgSetKdBlockEnable = 31,
  SysDbgRegisterForUmBreakInfo = 32,
  SysDbgGetUmBreakPid = 33,
  SysDbgClearUmBreakPid = 34,
  SysDbgGetUmAttachPid = 35,
  SysDbgClearUmAttachPid = 36,
} SYSDBG_COMMAND, *PSYSDBG_COMMAND;

typedef struct _PROCESS_EXCEPTION_PORT
{
  /* 0x0000 */ void* ExceptionPortHandle;
  /* 0x0008 */ unsigned long StateFlags;
  /* 0x000c */ long __PADDING__[1];
} PROCESS_EXCEPTION_PORT, *PPROCESS_EXCEPTION_PORT; /* size: 0x0010 */

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ValidDataLength;
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION; /* size: 0x0008 */

class CClassCache::CDllClassEntry
{
  /* 0x0000 */ long Padding_98[10];
  /* 0x0028 */ unsigned long _dwDllThreadModel;
  /* 0x002c */ long Padding_99;
  /* 0x0030 */ class CClassCache::CDllPathEntry* _pDllPathEntry;
  /* 0x0038 */ class CClassCache::CDllClassEntry* _pDllClsNext;
  /* 0x0040 */ struct _GUID _impclsid;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0080 */
}; /* size: 0x0050 */

typedef enum _tagPSUACTION
{
  PSU_DEFAULT = 1,
  PSU_SECURITY_URL_ONLY = 2,
} tagPSUACTION, *PtagPSUACTION;

typedef enum _KEY_INFORMATION_CLASS
{
  KeyBasicInformation = 0,
  KeyNodeInformation = 1,
  KeyFullInformation = 2,
  KeyNameInformation = 3,
  KeyCachedInformation = 4,
  KeyFlagsInformation = 5,
  KeyVirtualizationInformation = 6,
  MaxKeyInfoClass = 7,
} KEY_INFORMATION_CLASS, *PKEY_INFORMATION_CLASS;

struct tagKERNINGPAIR
{
  /* 0x0000 */ unsigned short wFirst;
  /* 0x0002 */ unsigned short wSecond;
  /* 0x0004 */ int iKernAmount;
}; /* size: 0x0008 */

enum tagBINDSTRING
{
  BINDSTRING_HEADERS = 1,
  BINDSTRING_ACCEPT_MIMES = 2,
  BINDSTRING_EXTRA_URL = 3,
  BINDSTRING_LANGUAGE = 4,
  BINDSTRING_USERNAME = 5,
  BINDSTRING_PASSWORD = 6,
  BINDSTRING_UA_PIXELS = 7,
  BINDSTRING_UA_COLOR = 8,
  BINDSTRING_OS = 9,
  BINDSTRING_USER_AGENT = 10,
  BINDSTRING_ACCEPT_ENCODINGS = 11,
  BINDSTRING_POST_COOKIE = 12,
  BINDSTRING_POST_DATA_MIME = 13,
  BINDSTRING_URL = 14,
  BINDSTRING_IID = 15,
  BINDSTRING_FLAG_BIND_TO_OBJECT = 16,
  BINDSTRING_PTR_BIND_CONTEXT = 17,
};

struct tagWTSSESSION_NOTIFICATION
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSessionId;
}; /* size: 0x0008 */

typedef struct _FILESYSTEM_STATISTICS
{
  /* 0x0000 */ unsigned short FileSystemType;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ unsigned long SizeOfCompleteStructure;
  /* 0x0008 */ unsigned long UserFileReads;
  /* 0x000c */ unsigned long UserFileReadBytes;
  /* 0x0010 */ unsigned long UserDiskReads;
  /* 0x0014 */ unsigned long UserFileWrites;
  /* 0x0018 */ unsigned long UserFileWriteBytes;
  /* 0x001c */ unsigned long UserDiskWrites;
  /* 0x0020 */ unsigned long MetaDataReads;
  /* 0x0024 */ unsigned long MetaDataReadBytes;
  /* 0x0028 */ unsigned long MetaDataDiskReads;
  /* 0x002c */ unsigned long MetaDataWrites;
  /* 0x0030 */ unsigned long MetaDataWriteBytes;
  /* 0x0034 */ unsigned long MetaDataDiskWrites;
} FILESYSTEM_STATISTICS, *PFILESYSTEM_STATISTICS; /* size: 0x0038 */

enum tagURLTEMPLATE
{
  URLTEMPLATE_CUSTOM = 0,
  URLTEMPLATE_PREDEFINED_MIN = 0x10000,
  URLTEMPLATE_LOW = 0x10000,
  URLTEMPLATE_MEDLOW = 0x10500,
  URLTEMPLATE_MEDIUM = 0x11000,
  URLTEMPLATE_MEDHIGH = 0x11500,
  URLTEMPLATE_HIGH = 0x12000,
  URLTEMPLATE_PREDEFINED_MAX = 0x20000,
};

typedef struct _FILE_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION; /* size: 0x0008 */

enum tagDIMENSION
{
  XDIMENSION = 88,
  YDIMENSION = 89,
};

enum tagEXTCONN
{
  EXTCONN_STRONG = 1,
  EXTCONN_WEAK = 2,
  EXTCONN_CALLABLE = 4,
};

struct tagHW_PROFILE_INFOW
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ wchar_t szHwProfileGuid[39];
  /* 0x0052 */ wchar_t szHwProfileName[80];
  /* 0x00f2 */ char __PADDING__[2];
}; /* size: 0x00f4 */

struct IXMLDOMCharacterData
{
}; /* size: 0x0008 */

typedef struct _RTL_BARRIER
{
  /* 0x0000 */ volatile long Barrier;
  /* 0x0004 */ long LeftBarrier;
  /* 0x0008 */ void* WaitEvent[2];
  /* 0x0018 */ long TotalProcessors;
  /* 0x001c */ unsigned long Spins;
} RTL_BARRIER, *PRTL_BARRIER; /* size: 0x0020 */

typedef enum _PROCESS_TLS_INFORMATION_TYPE
{
  ProcessTlsReplaceIndex = 0,
  ProcessTlsReplaceVector = 1,
  MaxProcessTlsOperation = 2,
} PROCESS_TLS_INFORMATION_TYPE, *PPROCESS_TLS_INFORMATION_TYPE;

class CSafeBYTEArray
{
  /* 0x0000 */ unsigned char* _p;
}; /* size: 0x0008 */

enum COleCache::Locate::__l2::tagFormatType
{
  FORMATTYPE_NONE = 0,
  FORMATTYPE_DIB = 1,
  FORMATTYPE_MFPICT = 2,
  FORMATTYPE_ENHMF = 3,
};

typedef struct _RPC_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} RPC_VERSION, *PRPC_VERSION; /* size: 0x0004 */

typedef struct _RPC_SYNTAX_IDENTIFIER
{
  /* 0x0000 */ struct _GUID SyntaxGUID;
  /* 0x0010 */ struct _RPC_VERSION SyntaxVersion;
} RPC_SYNTAX_IDENTIFIER, *PRPC_SYNTAX_IDENTIFIER; /* size: 0x0014 */

typedef struct _RPC_CLIENT_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ long Padding_100;
  /* 0x0030 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0038 */ unsigned int RpcProtseqEndpointCount;
  /* 0x003c */ long Padding_101;
  /* 0x0040 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0048 */ unsigned __int64 Reserved;
  /* 0x0050 */ const void* InterpreterInfo;
  /* 0x0058 */ unsigned int Flags;
  /* 0x005c */ long __PADDING__[1];
} RPC_CLIENT_INTERFACE, *PRPC_CLIENT_INTERFACE; /* size: 0x0060 */

class CCtxChnl
{
  /* 0x0000 */ long Padding_102[6];
  /* 0x0018 */ unsigned long _dwState;
  /* 0x001c */ unsigned long _cRefs;
  /* 0x0020 */ class IFaceEntry* _pIFaceEntry;
  /* 0x0028 */ class CStdWrapper* _pStdWrapper;
  /* 0x0000 */ class CPageAllocator s_allocator;
}; /* size: 0x0030 */

typedef enum _TABLE_SEARCH_RESULT
{
  TableEmptyTree = 0,
  TableFoundNode = 1,
  TableInsertAsLeft = 2,
  TableInsertAsRight = 3,
} TABLE_SEARCH_RESULT, *PTABLE_SEARCH_RESULT;

typedef struct _FILE_LINK_ENTRY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_103;
  /* 0x0008 */ __int64 ParentFileId;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_ENTRY_INFORMATION, *PFILE_LINK_ENTRY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_LINKS_INFORMATION
{
  /* 0x0000 */ unsigned long BytesNeeded;
  /* 0x0004 */ unsigned long EntriesReturned;
  /* 0x0008 */ struct _FILE_LINK_ENTRY_INFORMATION Entry;
} FILE_LINKS_INFORMATION, *PFILE_LINKS_INFORMATION; /* size: 0x0020 */

class CCtxComChnl
{
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    struct
    {
      /* 0x0000 */ class COleStaticMutexSem _mxsCtxChnlLock;
      /* 0x0050 */ long Padding_104[6];
      /* 0x0068 */ class CObjectContext* _disconnectCtx;
    }; /* size: 0x0058 */
  }; /* size: 0x0080 */
}; /* size: 0x0070 */

typedef enum __MIDL_IBindStatusCallback_0004
{
  URL_ENCODING_NONE = 0,
  URL_ENCODING_ENABLE_UTF8 = 0x10000000,
  URL_ENCODING_DISABLE_UTF8 = 0x20000000,
} _MIDL_IBindStatusCallback_0004, *P_MIDL_IBindStatusCallback_0004;

struct SIterBuffer
{
  /* 0x0000 */ class CDfName dfnName;
  /* 0x0042 */ char Padding_105[2];
  /* 0x0044 */ unsigned long type;
}; /* size: 0x0048 */

struct SCopyVars
{
  /* 0x0000 */ class PSStream* psstFrom;
  /* 0x0008 */ struct IStream* pstTo;
  /* 0x0010 */ class PDocFile* pdfFromChild;
  /* 0x0018 */ struct IStorage* pstgToChild;
  /* 0x0020 */ unsigned long grfStateBits;
  /* 0x0024 */ struct _GUID clsid;
  /* 0x0034 */ class CDfName dfnKey;
  /* 0x0076 */ char Padding_106[2];
  /* 0x0078 */ struct SIterBuffer ib;
  /* 0x00c0 */ wchar_t atcName[32];
}; /* size: 0x0100 */

typedef enum _TAG_UNNAMED_7
{
  AUMGR_ALLLOCAL = 1,
  AUMGR_IUNKNOWN = 2,
  AUMGR_IMULTIQI = 3,
} TAG_UNNAMED_7, *PTAG_UNNAMED_7;

class CBasedPubStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CPubMappedStream
{
  /* 0x0000 */ class CBasedPubStreamPtr _pst;
  /* 0x0008 */ class CBasedBytePtr _pb;
  /* 0x0010 */ class CBasedBytePtr _powner;
  /* 0x0018 */ unsigned long _cbUsed;
  /* 0x001c */ unsigned long _cbOriginalStreamSize;
  /* 0x0020 */ unsigned char _fDirty;
}; /* size: 0x0028 */

struct IUnknown
{
}; /* size: 0x0008 */

struct IStackWalker
{
}; /* size: 0x0008 */

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO
{
  /* 0x0000 */ unsigned char TransactionsActiveAtSnapshot;
} TXFS_TRANSACTION_ACTIVE_INFO, *PTXFS_TRANSACTION_ACTIVE_INFO; /* size: 0x0001 */

typedef enum _FP__IEEE_ROUNDING_MODE
{
  FpRoundNearest = 0,
  FpRoundMinusInfinity = 1,
  FpRoundPlusInfinity = 2,
  FpRoundChopped = 3,
} FP__IEEE_ROUNDING_MODE, *PFP__IEEE_ROUNDING_MODE;

class SafeBytePtr
{
  /* 0x0000 */ unsigned char* _p;
}; /* size: 0x0008 */

struct IXMLDocument
{
}; /* size: 0x0008 */

struct IWinInetHttpInfo
{
}; /* size: 0x0008 */

struct tagMINIMIZEDMETRICS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iWidth;
  /* 0x0008 */ int iHorzGap;
  /* 0x000c */ int iVertGap;
  /* 0x0010 */ int iArrange;
}; /* size: 0x0014 */

typedef enum _PRIORITY_HINT
{
  IoPriorityHintVeryLow = 0,
  IoPriorityHintLow = 1,
  IoPriorityHintNormal = 2,
  MaximumIoPriorityHintType = 3,
} PRIORITY_HINT, *PPRIORITY_HINT;

enum tagCONTEXTEVENT
{
  CONTEXTEVENT_NONE = 0,
  CONTEXTEVENT_CALL = 1,
  CONTEXTEVENT_ENTER = 2,
  CONTEXTEVENT_LEAVE = 4,
  CONTEXTEVENT_RETURN = 8,
  CONTEXTEVENT_CALLFILLBUFFER = 16,
  CONTEXTEVENT_ENTERWITHBUFFER = 32,
  CONTEXTEVENT_LEAVEFILLBUFFER = 64,
  CONTEXTEVENT_RETURNWITHBUFFER = 128,
  CONTEXTEVENT_BEGINCALL = 256,
  CONTEXTEVENT_BEGINENTER = 512,
  CONTEXTEVENT_BEGINLEAVE = 1024,
  CONTEXTEVENT_BEGINRETURN = 2048,
  CONTEXTEVENT_FINISHCALL = 4096,
  CONTEXTEVENT_FINISHENTER = 8192,
  CONTEXTEVENT_FINISHLEAVE = 16384,
  CONTEXTEVENT_FINISHRETURN = 0xffff8000,
  CONTEXTEVENT_BEGINCALLFILLBUFFER = 0x10000,
  CONTEXTEVENT_BEGINENTERWITHBUFFER = 0x20000,
  CONTEXTEVENT_FINISHLEAVEFILLBUFFER = 0x40000,
  CONTEXTEVENT_FINISHRETURNWITHBUFFER = 0x80000,
  CONTEXTEVENT_LEAVEEXCEPTION = 0x100000,
  CONTEXTEVENT_LEAVEEXCEPTIONFILLBUFFER = 0x200000,
  CONTEXTEVENT_RETURNEXCEPTION = 0x400000,
  CONTEXTEVENT_RETURNEXCEPTIONWITHBUFFER = 0x800000,
  CONTEXTEVENT_ADDREFPOLICY = 0x10000000,
  CONTEXTEVENT_RELEASEPOLICY = 0x20000000,
};

typedef struct _RTL_RELATIVE_NAME_U
{
  /* 0x0000 */ struct _UNICODE_STRING RelativeName;
  /* 0x0010 */ void* ContainingDirectory;
  /* 0x0018 */ struct _RTLP_CURDIR_REF* CurDirRef;
} RTL_RELATIVE_NAME_U, *PRTL_RELATIVE_NAME_U; /* size: 0x0020 */

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ unsigned char Register;
  /* 0x0005 */ char Padding_107[3];
  /* 0x0008 */ void* FirmwareTableHandler /* function */;
  /* 0x0010 */ void* DriverObject;
} SYSTEM_FIRMWARE_TABLE_HANDLER, *PSYSTEM_FIRMWARE_TABLE_HANDLER; /* size: 0x0018 */

enum TERMINATE_DOCUMENT
{
  Terminate_None = 0,
  Terminate_Detect = 1,
  Terminate_Received = 2,
};

struct tagFORMATETC32
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_108[2];
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

struct FORMATETCDATA32
{
  /* 0x0000 */ struct tagFORMATETC32 _FormatEtc;
  /* 0x0014 */ int fSaveOnFlush;
  /* 0x0018 */ unsigned long dwReserved1;
  /* 0x001c */ unsigned long dwReserved2;
}; /* size: 0x0020 */

typedef struct _NETRESOURCEA
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0018 */ char* lpRemoteName;
  /* 0x0020 */ char* lpComment;
  /* 0x0028 */ char* lpProvider;
} NETRESOURCEA, *PNETRESOURCEA; /* size: 0x0030 */

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long cCertStore;
  /* 0x000c */ long Padding_109;
  /* 0x0010 */ void** rghCertStore;
} CRYPT_DECRYPT_MESSAGE_PARA, *PCRYPT_DECRYPT_MESSAGE_PARA; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_110;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_111;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_112;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600; /* size: 0x0048 */

typedef struct _IMAGE_OS2_HEADER
{
  /* 0x0000 */ unsigned short ne_magic;
  /* 0x0002 */ char ne_ver;
  /* 0x0003 */ char ne_rev;
  /* 0x0004 */ unsigned short ne_enttab;
  /* 0x0006 */ unsigned short ne_cbenttab;
  /* 0x0008 */ long ne_crc;
  /* 0x000c */ unsigned short ne_flags;
  /* 0x000e */ unsigned short ne_autodata;
  /* 0x0010 */ unsigned short ne_heap;
  /* 0x0012 */ unsigned short ne_stack;
  /* 0x0014 */ long ne_csip;
  /* 0x0018 */ long ne_sssp;
  /* 0x001c */ unsigned short ne_cseg;
  /* 0x001e */ unsigned short ne_cmod;
  /* 0x0020 */ unsigned short ne_cbnrestab;
  /* 0x0022 */ unsigned short ne_segtab;
  /* 0x0024 */ unsigned short ne_rsrctab;
  /* 0x0026 */ unsigned short ne_restab;
  /* 0x0028 */ unsigned short ne_modtab;
  /* 0x002a */ unsigned short ne_imptab;
  /* 0x002c */ long ne_nrestab;
  /* 0x0030 */ unsigned short ne_cmovent;
  /* 0x0032 */ unsigned short ne_align;
  /* 0x0034 */ unsigned short ne_cres;
  /* 0x0036 */ unsigned char ne_exetyp;
  /* 0x0037 */ unsigned char ne_flagsothers;
  /* 0x0038 */ unsigned short ne_pretthunks;
  /* 0x003a */ unsigned short ne_psegrefbytes;
  /* 0x003c */ unsigned short ne_swaparea;
  /* 0x003e */ unsigned short ne_expver;
} IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER; /* size: 0x0040 */

typedef enum _SEMAPHORE_INFORMATION_CLASS
{
  SemaphoreBasicInformation = 0,
} SEMAPHORE_INFORMATION_CLASS, *PSEMAPHORE_INFORMATION_CLASS;

struct _ACTIVATION_CONTEXT;

struct AsyncIUnknown
{
}; /* size: 0x0008 */

typedef enum _THREADINFOCLASS
{
  ThreadBasicInformation = 0,
  ThreadTimes = 1,
  ThreadPriority = 2,
  ThreadBasePriority = 3,
  ThreadAffinityMask = 4,
  ThreadImpersonationToken = 5,
  ThreadDescriptorTableEntry = 6,
  ThreadEnableAlignmentFaultFixup = 7,
  ThreadEventPair_Reusable = 8,
  ThreadQuerySetWin32StartAddress = 9,
  ThreadZeroTlsCell = 10,
  ThreadPerformanceCount = 11,
  ThreadAmILastThread = 12,
  ThreadIdealProcessor = 13,
  ThreadPriorityBoost = 14,
  ThreadSetTlsArrayAddress = 15,
  ThreadIsIoPending = 16,
  ThreadHideFromDebugger = 17,
  ThreadBreakOnTermination = 18,
  ThreadSwitchLegacyState = 19,
  ThreadIsTerminated = 20,
  ThreadLastSystemCall = 21,
  ThreadIoPriority = 22,
  ThreadCycleTime = 23,
  ThreadPagePriority = 24,
  ThreadActualBasePriority = 25,
  ThreadTebInformation = 26,
  ThreadCSwitchMon = 27,
  ThreadCSwitchPmu = 28,
  MaxThreadInfoClass = 29,
} THREADINFOCLASS, *PTHREADINFOCLASS;

typedef enum _TAG_UNNAMED_8
{
  WPP_TRACE_OPTIONS = 43,
} TAG_UNNAMED_8, *PTAG_UNNAMED_8;

typedef struct _PROCESS_PRIORITY_CLASS
{
  /* 0x0000 */ unsigned char Foreground;
  /* 0x0001 */ unsigned char PriorityClass;
} PROCESS_PRIORITY_CLASS, *PPROCESS_PRIORITY_CLASS; /* size: 0x0002 */

enum QUERY_USER_NOTIFICATION_STATE
{
  QUNS_NOT_PRESENT = 1,
  QUNS_BUSY = 2,
  QUNS_RUNNING_D3D_FULL_SCREEN = 3,
  QUNS_PRESENTATION_MODE = 4,
  QUNS_ACCEPTS_NOTIFICATIONS = 5,
};

enum POWER_STATE_HANDLER_TYPE
{
  PowerStateSleeping1 = 0,
  PowerStateSleeping2 = 1,
  PowerStateSleeping3 = 2,
  PowerStateSleeping4 = 3,
  PowerStateShutdownOff = 4,
  PowerStateShutdownReset = 5,
  PowerStateSleeping4Firmware = 6,
  PowerStateMaximum = 7,
};

typedef struct _CONNECTDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_113;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct _NETRESOURCEW* lpConnRes;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTW, *PCONNECTDLGSTRUCTW; /* size: 0x0020 */

struct tagTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char __PADDING__[3];
}; /* size: 0x003c */

enum FORMATTAG
{
  ftagNone = 0,
  ftagClipFormat = 1,
  ftagString = 2,
};

class CData
{
  /* 0x0000 */ unsigned long m_cbSize;
  /* 0x0004 */ long Padding_114;
  /* 0x0008 */ void* m_pv;
  /* 0x0010 */ void* m_h;
  /* 0x0018 */ int m_fNoFree;
}; /* size: 0x0020 */

class CFormat
{
  /* 0x0000 */ enum FORMATTAG m_ftag;
  /* 0x0004 */ long Padding_115;
  /* 0x0008 */ unsigned short m_cf;
  /* 0x000a */ char Padding_116[6];
  /* 0x0010 */ class CData m_dataFormatString;
}; /* size: 0x0030 */

class CPres
{
  /* 0x0000 */ class CFormat m_format;
  /* 0x0030 */ unsigned long m_ulHeight;
  /* 0x0034 */ unsigned long m_ulWidth;
  /* 0x0038 */ class CData m_data;
}; /* size: 0x0058 */

enum COleCache::GetExtent::__l2::tagCacheType
{
  CACHETYPE_NONE = 0,
  CACHETYPE_NODATA = 1,
  CACHETYPE_ONSTOP = 2,
  CACHETYPE_ONSAVE = 3,
  CACHETYPE_NORMAL = 4,
};

typedef union _MCI_STATS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short McaErrorCode;
      /* 0x0002 */ unsigned short ModelErrorCode;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OtherInformation : 25; /* bit position: 0 */
        /* 0x0004 */ unsigned long ContextCorrupt : 1; /* bit position: 25 */
        /* 0x0004 */ unsigned long AddressValid : 1; /* bit position: 26 */
        /* 0x0004 */ unsigned long MiscValid : 1; /* bit position: 27 */
        /* 0x0004 */ unsigned long ErrorEnabled : 1; /* bit position: 28 */
        /* 0x0004 */ unsigned long UncorrectedError : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long StatusOverFlow : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Valid : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0008 */ MciStatus;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_STATS, *PMCI_STATS; /* size: 0x0008 */

struct tagSWindowData
{
  /* 0x0000 */ struct HWND__* hWnd;
  /* 0x0008 */ unsigned int wFirstMsg;
  /* 0x000c */ unsigned int wLastMsg;
}; /* size: 0x0010 */

typedef struct _SYSTEM_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} SYSTEM_FLAGS_INFORMATION, *PSYSTEM_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned int Offset;
  /* 0x0004 */ unsigned int Reserved;
} NDR64_POINTER_INSTANCE_HEADER_FORMAT, *PNDR64_POINTER_INSTANCE_HEADER_FORMAT; /* size: 0x0008 */

typedef enum _MEMORY_INFORMATION_CLASS
{
  MemoryBasicInformation = 0,
  MemoryWorkingSetInformation = 1,
  MemoryMappedFilenameInformation = 2,
  MemoryRegionInformation = 3,
  MemoryWorkingSetExInformation = 4,
} MEMORY_INFORMATION_CLASS, *PMEMORY_INFORMATION_CLASS;

typedef struct _SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER KernelTime;
  /* 0x0008 */ union _LARGE_INTEGER UserTime;
  /* 0x0010 */ union _LARGE_INTEGER CreateTime;
  /* 0x0018 */ unsigned long WaitTime;
  /* 0x001c */ long Padding_117;
  /* 0x0020 */ void* StartAddress;
  /* 0x0028 */ struct _CLIENT_ID ClientId;
  /* 0x0038 */ long Priority;
  /* 0x003c */ long BasePriority;
  /* 0x0040 */ unsigned long ContextSwitches;
  /* 0x0044 */ unsigned long ThreadState;
  /* 0x0048 */ unsigned long WaitReason;
  /* 0x004c */ long __PADDING__[1];
} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION; /* size: 0x0050 */

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
  /* 0x0050 */ void* StackBase;
  /* 0x0058 */ void* StackLimit;
  /* 0x0060 */ void* Win32StartAddress;
  /* 0x0068 */ void* TebBase;
  /* 0x0070 */ unsigned __int64 Reserved2;
  /* 0x0078 */ unsigned __int64 Reserved3;
  /* 0x0080 */ unsigned __int64 Reserved4;
} SYSTEM_EXTENDED_THREAD_INFORMATION, *PSYSTEM_EXTENDED_THREAD_INFORMATION; /* size: 0x0088 */

typedef struct __midl_frag1799_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1799_t, *P_midl_frag1799_t; /* size: 0x0038 */

typedef enum _OBJECT_INFORMATION_CLASS
{
  ObjectBasicInformation = 0,
  ObjectNameInformation = 1,
  ObjectTypeInformation = 2,
  ObjectTypesInformation = 3,
  ObjectHandleFlagInformation = 4,
  ObjectSessionInformation = 5,
  MaxObjectInfoClass = 6,
} OBJECT_INFORMATION_CLASS, *POBJECT_INFORMATION_CLASS;

enum CDragDefaultCursors::SCROLL_TYPE
{
  NO_SCROLL = 0,
  SCROLL = 1,
};

typedef struct _EISA_IRQ_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Interrupt : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char LevelTriggered : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR; /* size: 0x0001 */

typedef enum _tagQUERYOPTION
{
  QUERY_EXPIRATION_DATE = 1,
  QUERY_TIME_OF_LAST_CHANGE = 2,
  QUERY_CONTENT_ENCODING = 3,
  QUERY_CONTENT_TYPE = 4,
  QUERY_REFRESH = 5,
  QUERY_RECOMBINE = 6,
  QUERY_CAN_NAVIGATE = 7,
  QUERY_USES_NETWORK = 8,
  QUERY_IS_CACHED = 9,
  QUERY_IS_INSTALLEDENTRY = 10,
  QUERY_IS_CACHED_OR_MAPPED = 11,
  QUERY_USES_CACHE = 12,
  QUERY_IS_SECURE = 13,
  QUERY_IS_SAFE = 14,
  QUERY_USES_HISTORYFOLDER = 15,
} tagQUERYOPTION, *PtagQUERYOPTION;

typedef enum _LINK_TRACKING_INFORMATION_TYPE
{
  NtfsLinkTrackingInformation = 0,
  DfsLinkTrackingInformation = 1,
} LINK_TRACKING_INFORMATION_TYPE, *PLINK_TRACKING_INFORMATION_TYPE;

typedef struct _FILE_ID_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_118;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_119[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFORMATION, *PFILE_ID_BOTH_DIR_INFORMATION; /* size: 0x0070 */

struct IOleInPlaceUIWindow
{
  /* 0x0000 */ struct IOleInPlaceUIWindowVtbl* lpVtbl;
}; /* size: 0x0008 */

enum OLE_NOTIFICATION
{
  OLE_CHANGED = 0,
  OLE_SAVED = 1,
  OLE_CLOSED = 2,
  OLE_RENAMED = 3,
};

struct tagOLEPRESSTMHDR
{
  /* 0x0000 */ unsigned long dwAspect;
  /* 0x0004 */ unsigned long dwLindex;
  /* 0x0008 */ unsigned long dwAdvf;
}; /* size: 0x000c */

typedef struct _NDR64_EXPR_VAR
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char VarType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Offset;
} NDR64_EXPR_VAR, *PNDR64_EXPR_VAR; /* size: 0x0008 */

typedef struct __midl_frag95_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag95_t, *P_midl_frag95_t; /* size: 0x000c */

typedef enum _FINDEX_SEARCH_OPS
{
  FindExSearchNameMatch = 0,
  FindExSearchLimitToDirectories = 1,
  FindExSearchLimitToDevices = 2,
  FindExSearchMaxSearchOp = 3,
} FINDEX_SEARCH_OPS, *PFINDEX_SEARCH_OPS;

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS
{
  ResourceManagerBasicInformation = 0,
  ResourceManagerCompletionInformation = 1,
} RESOURCEMANAGER_INFORMATION_CLASS, *PRESOURCEMANAGER_INFORMATION_CLASS;

class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>
{
  /* 0x0000 */ long Padding_120[2];
  /* 0x0008 */ struct IEnumCATEGORYINFO** m_pcsEnum;
  /* 0x0010 */ unsigned long m_cTotalEnum;
  /* 0x0014 */ unsigned long m_dwRefCount;
  /* 0x0018 */ unsigned long m_CurrentEnum;
  /* 0x001c */ struct _GUID m_myiid;
}; /* size: 0x0030 */

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_121;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldFlags;
  /* 0x002c */ unsigned long NewFlags;
} JOURNAL_SET_KEY_USER_FLAGS_INFORMATION, *PJOURNAL_SET_KEY_USER_FLAGS_INFORMATION; /* size: 0x0030 */

typedef struct _PS_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 Attribute;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ unsigned __int64 Value;
    /* 0x0010 */ void* ValuePtr;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned __int64* ReturnLength;
} PS_ATTRIBUTE, *PPS_ATTRIBUTE; /* size: 0x0020 */

typedef struct _PS_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned __int64 TotalLength;
  /* 0x0008 */ struct _PS_ATTRIBUTE Attributes[1];
} PS_ATTRIBUTE_LIST, *PPS_ATTRIBUTE_LIST; /* size: 0x0028 */

typedef enum _operators
{
  OP_START = 0,
  OP_ILLEGAL = 0,
  OP_UNARY_START = 1,
  OP_UNARY_ARITHMETIC_START = 1,
  OP_UNARY_PLUS = 1,
  OP_UNARY_MINUS = 2,
  OP_UNARY_ARITHMETIC_END = 3,
  OP_UNARY_LOGICAL_START = 3,
  OP_UNARY_NOT = 3,
  OP_UNARY_COMPLEMENT = 4,
  OP_UNARY_LOGICAL_END = 5,
  OP_UNARY_INDIRECTION = 5,
  OP_UNARY_CAST = 6,
  OP_UNARY_AND = 7,
  OP_UNARY_SIZEOF = 8,
  OP_UNARY_ALIGNOF = 9,
  OP_PRE_INCR = 10,
  OP_PRE_DECR = 11,
  OP_POST_INCR = 12,
  OP_POST_DECR = 13,
  OP_UNARY_END = 14,
  OP_BINARY_START = 14,
  OP_BINARY_ARITHMETIC_START = 14,
  OP_PLUS = 14,
  OP_MINUS = 15,
  OP_STAR = 16,
  OP_SLASH = 17,
  OP_MOD = 18,
  OP_BINARY_ARITHMETIC_END = 19,
  OP_BINARY_SHIFT_START = 19,
  OP_LEFT_SHIFT = 19,
  OP_RIGHT_SHIFT = 20,
  OP_BINARY_SHIFT_END = 21,
  OP_BINARY_RELATIONAL_START = 21,
  OP_LESS = 21,
  OP_LESS_EQUAL = 22,
  OP_GREATER_EQUAL = 23,
  OP_GREATER = 24,
  OP_EQUAL = 25,
  OP_NOT_EQUAL = 26,
  OP_BINARY_RELATIONAL_END = 27,
  OP_BINARY_BITWISE_START = 27,
  OP_AND = 27,
  OP_OR = 28,
  OP_XOR = 29,
  OP_BINARY_BITWISE_END = 30,
  OP_BINARY_LOGICAL_START = 30,
  OP_LOGICAL_AND = 30,
  OP_LOGICAL_OR = 31,
  OP_BINARY_LOGICAL_END = 32,
  OP_BINARY_TERNARY_START = 32,
  OP_QM = 32,
  OP_COLON = 33,
  OP_BINARY_TERNARY_END = 34,
  OP_BINARY_END = 34,
  OP_INTERNAL_START = 34,
  OP_FUNCTION = 35,
  OP_PARAM = 36,
  OP_POINTSTO = 37,
  OP_DOT = 38,
  OP_INDEX = 39,
  OP_COMMA = 40,
  OP_STMT = 41,
  OP_ASSIGN = 42,
  OP_ASYNCSPLIT = 43,
  OP_CORR_POINTER = 44,
  OP_CORR_TOP_LEVEL = 45,
  OP_END = 46,
} operators, *Poperators;

typedef enum _KTMOBJECT_TYPE
{
  KTMOBJECT_TRANSACTION = 0,
  KTMOBJECT_TRANSACTION_MANAGER = 1,
  KTMOBJECT_RESOURCE_MANAGER = 2,
  KTMOBJECT_ENLISTMENT = 3,
  KTMOBJECT_INVALID = 4,
} KTMOBJECT_TYPE, *PKTMOBJECT_TYPE;

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE
{
  LowMemoryResourceNotification = 0,
  HighMemoryResourceNotification = 1,
} MEMORY_RESOURCE_NOTIFICATION_TYPE, *PMEMORY_RESOURCE_NOTIFICATION_TYPE;

typedef struct _M128A
{
  /* 0x0000 */ unsigned __int64 Low;
  /* 0x0008 */ __int64 High;
} M128A, *PM128A; /* size: 0x0010 */

typedef struct _XMM_SAVE_AREA32
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _M128A FloatRegisters[8];
  /* 0x00a0 */ struct _M128A XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[96];
} XMM_SAVE_AREA32, *PXMM_SAVE_AREA32; /* size: 0x0200 */

typedef struct _CONTEXT
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  union
  {
    /* 0x0100 */ struct _XMM_SAVE_AREA32 FltSave;
    struct
    {
      /* 0x0100 */ struct _M128A Header[2];
      /* 0x0120 */ struct _M128A Legacy[8];
      /* 0x01a0 */ struct _M128A Xmm0;
      /* 0x01b0 */ struct _M128A Xmm1;
      /* 0x01c0 */ struct _M128A Xmm2;
      /* 0x01d0 */ struct _M128A Xmm3;
      /* 0x01e0 */ struct _M128A Xmm4;
      /* 0x01f0 */ struct _M128A Xmm5;
      /* 0x0200 */ struct _M128A Xmm6;
      /* 0x0210 */ struct _M128A Xmm7;
      /* 0x0220 */ struct _M128A Xmm8;
      /* 0x0230 */ struct _M128A Xmm9;
      /* 0x0240 */ struct _M128A Xmm10;
      /* 0x0250 */ struct _M128A Xmm11;
      /* 0x0260 */ struct _M128A Xmm12;
      /* 0x0270 */ struct _M128A Xmm13;
      /* 0x0280 */ struct _M128A Xmm14;
      /* 0x0290 */ struct _M128A Xmm15;
    }; /* size: 0x01a0 */
  }; /* size: 0x0200 */
  /* 0x0300 */ struct _M128A VectorRegister[26];
  /* 0x04a0 */ unsigned __int64 VectorControl;
  /* 0x04a8 */ unsigned __int64 DebugControl;
  /* 0x04b0 */ unsigned __int64 LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 LastExceptionFromRip;
} CONTEXT, *PCONTEXT; /* size: 0x04d0 */

typedef struct _LAST_EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ long Padding_122[2];
  /* 0x00a0 */ struct _CONTEXT ContextRecord;
  /* 0x0570 */ unsigned long ControlPc;
  /* 0x0574 */ enum _EXCEPTION_DISPOSITION Disposition;
  /* 0x0578 */ unsigned long HandlerData[5];
  /* 0x058c */ long __PADDING__[1];
} LAST_EXCEPTION_LOG, *PLAST_EXCEPTION_LOG; /* size: 0x0590 */

typedef enum _TAG_UNNAMED_9
{
  Minimal = 0,
  Normal = 128,
  MaximallyVerbose = 255,
} TAG_UNNAMED_9, *PTAG_UNNAMED_9;

typedef struct _TOKEN_MANDATORY_LABEL
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES Label;
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL; /* size: 0x0010 */

struct LEGACY_FRAME
{
  /* 0x0000 */ long Padding_123[4];
  /* 0x0010 */ void* m_pvArgs;
  /* 0x0018 */ const unsigned long m_iMethod;
  /* 0x001c */ long Padding_124;
  /* 0x0020 */ __int64 m_hrReturnValue;
  /* 0x0028 */ struct LEGACY_INTERCEPTOR* m_pInterceptor;
  /* 0x0030 */ struct ICallFrame* m_premoteFrame;
  /* 0x0038 */ struct ICallFrame* m_pmemoryFrame;
  /* 0x0040 */ int m_fAfterCall;
  /* 0x0044 */ long Padding_125;
  /* 0x0048 */ struct IUnknown* m_punkOuter;
  /* 0x0050 */ long m_refs;
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

typedef struct _CERT_PUBLIC_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB PublicKey;
} CERT_PUBLIC_KEY_INFO, *PCERT_PUBLIC_KEY_INFO; /* size: 0x0030 */

typedef struct _CERT_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_126;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0018 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0048 */ unsigned long cAttribute;
  /* 0x004c */ long Padding_127;
  /* 0x0050 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CERT_REQUEST_INFO, *PCERT_REQUEST_INFO; /* size: 0x0058 */

struct INdrVersion
{
}; /* size: 0x0008 */

typedef struct _LOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* lpBaseOfDll;
  /* 0x0010 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0014 */ unsigned long nDebugInfoSize;
  /* 0x0018 */ void* lpImageName;
  /* 0x0020 */ unsigned short fUnicode;
  /* 0x0022 */ char __PADDING__[6];
} LOAD_DLL_DEBUG_INFO, *PLOAD_DLL_DEBUG_INFO; /* size: 0x0028 */

typedef struct _RTL_SRWLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Waiting : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Waking : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 MultipleShared : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Shared : 60; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} RTL_SRWLOCK, *PRTL_SRWLOCK; /* size: 0x0008 */

class CCache
{
  /* 0x0000 */ struct _RTL_SRWLOCK m_srwLock;
  /* 0x0008 */ struct tagElement** m_paBuckets;
  /* 0x0010 */ unsigned long m_cBuckets;
  /* 0x0014 */ unsigned long m_cElements;
  /* 0x0018 */ __int64 m_i64LocalCacheCount;
}; /* size: 0x0020 */

typedef enum __MIDL_ICodeInstall_0001
{
  CIP_DISK_FULL = 0,
  CIP_ACCESS_DENIED = 1,
  CIP_NEWER_VERSION_EXISTS = 2,
  CIP_OLDER_VERSION_EXISTS = 3,
  CIP_NAME_CONFLICT = 4,
  CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
  CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
  CIP_UNSAFE_TO_ABORT = 7,
  CIP_NEED_REBOOT = 8,
  CIP_NEED_REBOOT_UI_PERMISSION = 9,
} _MIDL_ICodeInstall_0001, *P_MIDL_ICodeInstall_0001;

typedef struct _tagDATAINFO
{
  /* 0x0000 */ unsigned long ulTotalSize;
  /* 0x0004 */ unsigned long ulavrPacketSize;
  /* 0x0008 */ unsigned long ulConnectSpeed;
  /* 0x000c */ unsigned long ulProcessorSpeed;
} tagDATAINFO, *PtagDATAINFO; /* size: 0x0010 */

class CAptRpcChnl
{
  /* 0x0000 */ long Padding_128[24];
  /* 0x0060 */ unsigned long _dwTIDCallee;
  /* 0x0064 */ unsigned long _dwAptId;
}; /* size: 0x0068 */

typedef enum _DMA_SPEED
{
  Compatible = 0,
  TypeA = 1,
  TypeB = 2,
  TypeC = 3,
  TypeF = 4,
  MaximumDmaSpeed = 5,
} DMA_SPEED, *PDMA_SPEED;

struct IInterfaceRelated
{
}; /* size: 0x0008 */

typedef enum _INSTALLSPECTYPE
{
  APPNAME = 1,
  FILEEXT = 2,
  PROGID = 3,
  COMCLASS = 4,
} INSTALLSPECTYPE, *PINSTALLSPECTYPE;

enum tagPreferredServerBitness
{
  SERVER_BITNESS_DEFAULT = 0,
  SERVER_BITNESS_FOLLOW_CLIENT = 1,
  SERVER_BITNESS_32BIT = 2,
  SERVER_BITNESS_64BIT = 3,
};

struct IOleInPlaceObject
{
}; /* size: 0x0008 */

typedef struct _IMAGE_FILE_HEADER
{
  /* 0x0000 */ unsigned short Machine;
  /* 0x0002 */ unsigned short NumberOfSections;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long PointerToSymbolTable;
  /* 0x000c */ unsigned long NumberOfSymbols;
  /* 0x0010 */ unsigned short SizeOfOptionalHeader;
  /* 0x0012 */ unsigned short Characteristics;
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER; /* size: 0x0014 */

typedef struct _IMAGE_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned long SizeOfStackReserve;
  /* 0x004c */ unsigned long SizeOfStackCommit;
  /* 0x0050 */ unsigned long SizeOfHeapReserve;
  /* 0x0054 */ unsigned long SizeOfHeapCommit;
  /* 0x0058 */ unsigned long LoaderFlags;
  /* 0x005c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0060 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER; /* size: 0x00e0 */

typedef struct _IMAGE_NT_HEADERS
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
} IMAGE_NT_HEADERS, *PIMAGE_NT_HEADERS; /* size: 0x00f8 */

struct tagCOMPAREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ struct HWND__* hwndItem;
  /* 0x0010 */ unsigned int itemID1;
  /* 0x0014 */ long Padding_129;
  /* 0x0018 */ unsigned __int64 itemData1;
  /* 0x0020 */ unsigned int itemID2;
  /* 0x0024 */ long Padding_130;
  /* 0x0028 */ unsigned __int64 itemData2;
  /* 0x0030 */ unsigned long dwLocaleId;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef enum _PS_STD_HANDLE_STATE
{
  PsNeverDuplicate = 0,
  PsRequestDuplicate = 1,
  PsAlwaysDuplicate = 2,
  PsMaxStdHandleStates = 3,
} PS_STD_HANDLE_STATE, *PPS_STD_HANDLE_STATE;

enum tagGETCLSIDFLAGS
{
  USE_NORMAL_CLSID = 1,
  USE_STANDARD_LINK = 2,
};

typedef struct _FIXED
{
  /* 0x0000 */ unsigned short fract;
  /* 0x0002 */ short value;
} FIXED, *PFIXED; /* size: 0x0004 */

typedef struct _MAT2
{
  /* 0x0000 */ struct _FIXED eM11;
  /* 0x0004 */ struct _FIXED eM12;
  /* 0x0008 */ struct _FIXED eM21;
  /* 0x000c */ struct _FIXED eM22;
} MAT2, *PMAT2; /* size: 0x0010 */

typedef enum _KEY_VALUE_INFORMATION_CLASS
{
  KeyValueBasicInformation = 0,
  KeyValueFullInformation = 1,
  KeyValuePartialInformation = 2,
  KeyValueFullInformationAlign64 = 3,
  KeyValuePartialInformationAlign64 = 4,
  MaxKeyValueInfoClass = 5,
} KEY_VALUE_INFORMATION_CLASS, *PKEY_VALUE_INFORMATION_CLASS;

struct tagNEWTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char Padding_131[3];
  /* 0x003c */ unsigned long ntmFlags;
  /* 0x0040 */ unsigned int ntmSizeEM;
  /* 0x0044 */ unsigned int ntmCellHeight;
  /* 0x0048 */ unsigned int ntmAvgWidth;
}; /* size: 0x004c */

struct tagFONTSIGNATURE
{
  /* 0x0000 */ unsigned long fsUsb[4];
  /* 0x0010 */ unsigned long fsCsb[2];
}; /* size: 0x0018 */

struct tagNEWTEXTMETRICEXW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICW ntmTm;
  /* 0x004c */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0064 */

struct IXMLDOMEntityReference
{
}; /* size: 0x0008 */

typedef enum __MIDL_IBindStatusCallback_0005
{
  BINDINFO_OPTIONS_WININETFLAG = 0x10000,
  BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
  BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
  BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
  BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
  BINDINFO_OPTIONS_SECURITYOPTOUT = 0x200000,
  BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 0x400000,
  BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 0x800000,
  BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 0x1000000,
  BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 0x2000000,
  BINDINFO_WPC_DOWNLOADBLOCKED = 0x8000000,
  BINDINFO_WPC_LOGGING_ENABLED = 0x10000000,
  BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 0x40000000,
  BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648,
} _MIDL_IBindStatusCallback_0005, *P_MIDL_IBindStatusCallback_0005;

struct IUnkInner
{
}; /* size: 0x0008 */

enum VSAStandardParameter
{
  cVSAStandardParameterSourceMachine = 0,
  cVSAStandardParameterSourceProcess = 1,
  cVSAStandardParameterSourceThread = 2,
  cVSAStandardParameterSourceComponent = 3,
  cVSAStandardParameterSourceSession = 4,
  cVSAStandardParameterTargetMachine = 5,
  cVSAStandardParameterTargetProcess = 6,
  cVSAStandardParameterTargetThread = 7,
  cVSAStandardParameterTargetComponent = 8,
  cVSAStandardParameterTargetSession = 9,
  cVSAStandardParameterSecurityIdentity = 10,
  cVSAStandardParameterCausalityID = 11,
  cVSAStandardParameterNoDefault = 16384,
  cVSAStandardParameterSourceHandle = 16384,
  cVSAStandardParameterTargetHandle = 16385,
  cVSAStandardParameterArguments = 16386,
  cVSAStandardParameterReturnValue = 16387,
  cVSAStandardParameterException = 16388,
  cVSAStandardParameterCorrelationID = 16389,
};

typedef enum __MIDL_IBindStatusCallback_0006
{
  BSCF_FIRSTDATANOTIFICATION = 1,
  BSCF_INTERMEDIATEDATANOTIFICATION = 2,
  BSCF_LASTDATANOTIFICATION = 4,
  BSCF_DATAFULLYAVAILABLE = 8,
  BSCF_AVAILABLEDATASIZEUNKNOWN = 16,
} _MIDL_IBindStatusCallback_0006, *P_MIDL_IBindStatusCallback_0006;

typedef struct _POINTL
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
} POINTL, *PPOINTL; /* size: 0x0008 */

struct tagXFORM
{
  /* 0x0000 */ float eM11;
  /* 0x0004 */ float eM12;
  /* 0x0008 */ float eM21;
  /* 0x000c */ float eM22;
  /* 0x0010 */ float eDx;
  /* 0x0014 */ float eDy;
}; /* size: 0x0018 */

struct tagEMRPLGBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _POINTL aptlDest[3];
  /* 0x0030 */ long xSrc;
  /* 0x0034 */ long ySrc;
  /* 0x0038 */ long cxSrc;
  /* 0x003c */ long cySrc;
  /* 0x0040 */ struct tagXFORM xformSrc;
  /* 0x0058 */ unsigned long crBkColorSrc;
  /* 0x005c */ unsigned long iUsageSrc;
  /* 0x0060 */ unsigned long offBmiSrc;
  /* 0x0064 */ unsigned long cbBmiSrc;
  /* 0x0068 */ unsigned long offBitsSrc;
  /* 0x006c */ unsigned long cbBitsSrc;
  /* 0x0070 */ long xMask;
  /* 0x0074 */ long yMask;
  /* 0x0078 */ unsigned long iUsageMask;
  /* 0x007c */ unsigned long offBmiMask;
  /* 0x0080 */ unsigned long cbBmiMask;
  /* 0x0084 */ unsigned long offBitsMask;
  /* 0x0088 */ unsigned long cbBitsMask;
}; /* size: 0x008c */

struct ICallFactory
{
}; /* size: 0x0008 */

class CBasedDlElementPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CClassCache::CFinishComposite
{
  /* 0x0000 */ struct CClassCache::CFinishComposite::node* _pFinishNodesFront;
  /* 0x0008 */ struct CClassCache::CFinishComposite::node* _pFinishNodesBack;
}; /* size: 0x0010 */

typedef enum _SHRINK_VOLUME_REQUEST_TYPES
{
  ShrinkPrepare = 1,
  ShrinkCommit = 2,
  ShrinkAbort = 3,
} SHRINK_VOLUME_REQUEST_TYPES, *PSHRINK_VOLUME_REQUEST_TYPES;

typedef enum _SecurityOptionsDisposition
{
  ACCESS_DENIED_FOR_ACTIVATION_VIA_RESTRICTION = 1,
  ACCESS_DENIED_FOR_LAUNCH_VIA_RESTRICTION = 2,
  ACCESS_DENIED_FOR_ACTIVATION_VIA_PERMISSION = 4,
  ACCESS_DENIED_FOR_LAUNCH_VIA_PERMISSION = 8,
  ACCESS_DENIED_FOR_CALL_VIA_RESTRICTION = 16,
  ACCESS_DENIED_FOR_CALL_VIA_PERMISSION = 32,
  ACCESS_DENIED_VIA_DEFAULTPERMISSION = 64,
} SecurityOptionsDisposition, *PSecurityOptionsDisposition;

typedef struct _PROCESS_DEVICEMAP_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION; /* size: 0x0028 */

class CVerifierStackData
{
  /* 0x0000 */ struct _LIST_ENTRY m_listHead;
  /* 0x0010 */ unsigned long m_dwCount;
}; /* size: 0x0018 */

typedef struct _CERT_ISSUER_SERIAL_NUMBER
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerialNumber;
} CERT_ISSUER_SERIAL_NUMBER, *PCERT_ISSUER_SERIAL_NUMBER; /* size: 0x0020 */

typedef struct _CERT_ID
{
  /* 0x0000 */ unsigned long dwIdChoice;
  /* 0x0004 */ long Padding_132;
  union
  {
    /* 0x0008 */ struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB KeyId;
    struct
    {
      /* 0x0008 */ struct _CRYPTOAPI_BLOB HashId;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} CERT_ID, *PCERT_ID; /* size: 0x0028 */

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_133;
  /* 0x0008 */ struct _CERT_ID RecipientId;
  /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0048 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_TRANS_RECIPIENT_INFO, *PCMSG_KEY_TRANS_RECIPIENT_INFO; /* size: 0x0058 */

struct SERVICE_STATUS_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagTYPEDESC
{
  union
  {
    /* 0x0000 */ struct tagTYPEDESC* lptdesc;
    /* 0x0000 */ struct tagARRAYDESC* lpadesc;
    /* 0x0000 */ unsigned long hreftype;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

typedef enum _PROCESSOR_CACHE_TYPE
{
  CacheUnified = 0,
  CacheInstruction = 1,
  CacheData = 2,
  CacheTrace = 3,
} PROCESSOR_CACHE_TYPE, *PPROCESSOR_CACHE_TYPE;

typedef struct _SYSTEM_INTERRUPT_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long DpcCount;
  /* 0x0008 */ unsigned long DpcRate;
  /* 0x000c */ unsigned long TimeIncrement;
  /* 0x0010 */ unsigned long DpcBypassCount;
  /* 0x0014 */ unsigned long ApcBypassCount;
} SYSTEM_INTERRUPT_INFORMATION, *PSYSTEM_INTERRUPT_INFORMATION; /* size: 0x0018 */

typedef enum _WOW64_FUNCTION_CODE64
{
  WOW64_FUNCTION_NOP = 0,
  WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
  WOW64_FUNCTION_MAXIMUM = 2,
} WOW64_FUNCTION_CODE64, *PWOW64_FUNCTION_CODE64;

struct tagSOLE_AUTHENTICATION_SERVICE
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pPrincipalName;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct tagContextStackNode
{
  /* 0x0000 */ struct tagContextStackNode* pNext;
  /* 0x0008 */ class CObjectContext* pSavedContext;
  /* 0x0010 */ class CObjectContext* pServerContext;
  /* 0x0018 */ class CCtxCall* pClientCall;
  /* 0x0020 */ class CCtxCall* pServerCall;
  /* 0x0028 */ class CPolicySet* pPS;
}; /* size: 0x0030 */

typedef struct _BCRYPT_OID
{
  /* 0x0000 */ unsigned long cbOID;
  /* 0x0004 */ long Padding_134;
  /* 0x0008 */ unsigned char* pbOID;
} BCRYPT_OID, *PBCRYPT_OID; /* size: 0x0010 */

enum tagCLIPWINDOWFLAGS
{
  CLIP_QUERY = 0,
  CLIP_CREATEIFNOTTHERE = 1,
};

struct HICON__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _NDR64_CONF_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int ElementSize;
  /* 0x0008 */ const void* ConfDescriptor;
} NDR64_CONF_ARRAY_HEADER_FORMAT, *PNDR64_CONF_ARRAY_HEADER_FORMAT; /* size: 0x0010 */

enum tagOLERENDER
{
  OLERENDER_NONE = 0,
  OLERENDER_DRAW = 1,
  OLERENDER_FORMAT = 2,
  OLERENDER_ASIS = 3,
};

struct IRunningObjectTable
{
}; /* size: 0x0008 */

struct tagCustomHeader
{
  /* 0x0000 */ unsigned long totalSize;
  /* 0x0004 */ unsigned long headerSize;
  /* 0x0008 */ unsigned long cOpaqueData;
  /* 0x000c */ unsigned long destCtx;
  /* 0x0010 */ unsigned long cIfs;
  /* 0x0014 */ struct _GUID classInfoClsid;
  /* 0x0024 */ long Padding_135;
  /* 0x0028 */ struct _GUID* pclsid;
  /* 0x0030 */ unsigned long* pSizes;
  /* 0x0038 */ struct tagCustomOpaqueData* opaqueData;
}; /* size: 0x0040 */

typedef enum _SYSTEM_INFORMATION_CLASS
{
  SystemBasicInformation = 0,
  SystemProcessorInformation = 1,
  SystemPerformanceInformation = 2,
  SystemTimeOfDayInformation = 3,
  SystemPathInformation = 4,
  SystemProcessInformation = 5,
  SystemCallCountInformation = 6,
  SystemDeviceInformation = 7,
  SystemProcessorPerformanceInformation = 8,
  SystemFlagsInformation = 9,
  SystemCallTimeInformation = 10,
  SystemModuleInformation = 11,
  SystemLocksInformation = 12,
  SystemStackTraceInformation = 13,
  SystemPagedPoolInformation = 14,
  SystemNonPagedPoolInformation = 15,
  SystemHandleInformation = 16,
  SystemObjectInformation = 17,
  SystemPageFileInformation = 18,
  SystemVdmInstemulInformation = 19,
  SystemVdmBopInformation = 20,
  SystemFileCacheInformation = 21,
  SystemPoolTagInformation = 22,
  SystemInterruptInformation = 23,
  SystemDpcBehaviorInformation = 24,
  SystemFullMemoryInformation = 25,
  SystemLoadGdiDriverInformation = 26,
  SystemUnloadGdiDriverInformation = 27,
  SystemTimeAdjustmentInformation = 28,
  SystemSummaryMemoryInformation = 29,
  SystemMirrorMemoryInformation = 30,
  SystemPerformanceTraceInformation = 31,
  SystemObsolete0 = 32,
  SystemExceptionInformation = 33,
  SystemCrashDumpStateInformation = 34,
  SystemKernelDebuggerInformation = 35,
  SystemContextSwitchInformation = 36,
  SystemRegistryQuotaInformation = 37,
  SystemExtendServiceTableInformation = 38,
  SystemPrioritySeperation = 39,
  SystemVerifierAddDriverInformation = 40,
  SystemVerifierRemoveDriverInformation = 41,
  SystemProcessorIdleInformation = 42,
  SystemLegacyDriverInformation = 43,
  SystemCurrentTimeZoneInformation = 44,
  SystemLookasideInformation = 45,
  SystemTimeSlipNotification = 46,
  SystemSessionCreate = 47,
  SystemSessionDetach = 48,
  SystemSessionInformation = 49,
  SystemRangeStartInformation = 50,
  SystemVerifierInformation = 51,
  SystemVerifierThunkExtend = 52,
  SystemSessionProcessInformation = 53,
  SystemLoadGdiDriverInSystemSpace = 54,
  SystemNumaProcessorMap = 55,
  SystemPrefetcherInformation = 56,
  SystemExtendedProcessInformation = 57,
  SystemRecommendedSharedDataAlignment = 58,
  SystemComPlusPackage = 59,
  SystemNumaAvailableMemory = 60,
  SystemProcessorPowerInformation = 61,
  SystemEmulationBasicInformation = 62,
  SystemEmulationProcessorInformation = 63,
  SystemExtendedHandleInformation = 64,
  SystemLostDelayedWriteInformation = 65,
  SystemBigPoolInformation = 66,
  SystemSessionPoolTagInformation = 67,
  SystemSessionMappedViewInformation = 68,
  SystemHotpatchInformation = 69,
  SystemObjectSecurityMode = 70,
  SystemWatchdogTimerHandler = 71,
  SystemWatchdogTimerInformation = 72,
  SystemLogicalProcessorInformation = 73,
  SystemWow64SharedInformationObsolete = 74,
  SystemRegisterFirmwareTableInformationHandler = 75,
  SystemFirmwareTableInformation = 76,
  SystemModuleInformationEx = 77,
  SystemVerifierTriageInformation = 78,
  SystemSuperfetchInformation = 79,
  SystemMemoryListInformation = 80,
  SystemFileCacheInformationEx = 81,
  SystemThreadPriorityClientIdInformation = 82,
  SystemProcessorIdleCycleTimeInformation = 83,
  SystemVerifierCancellationInformation = 84,
  SystemProcessorPowerInformationEx = 85,
  SystemRefTraceInformation = 86,
  SystemSpecialPoolInformation = 87,
  SystemProcessIdInformation = 88,
  SystemErrorPortInformation = 89,
  SystemBootEnvironmentInformation = 90,
  SystemHypervisorInformation = 91,
  SystemVerifierInformationEx = 92,
  SystemTimeZoneInformation = 93,
  SystemImageFileExecutionOptionsInformation = 94,
  SystemCoverageInformation = 95,
  SystemPrefetchPatchInformation = 96,
  SystemVerifierFaultsInformation = 97,
  SystemSystemPartitionInformation = 98,
  SystemSystemDiskInformation = 99,
  SystemProcessorPerformanceDistribution = 100,
  SystemNumaProximityNodeInformation = 101,
  SystemDynamicTimeZoneInformation = 102,
  SystemCodeIntegrityInformation = 103,
  SystemProcessorMicrocodeUpdateInformation = 104,
  SystemProcessorBrandString = 105,
  SystemVirtualAddressInformation = 106,
  MaxSystemInfoClass = 107,
} SYSTEM_INFORMATION_CLASS, *PSYSTEM_INFORMATION_CLASS;

enum VSAParameterType
{
  cVSAParameterKeyMask = -2147483648,
  cVSAParameterKeyString = -2147483648,
  cVSAParameterValueMask = 0x7ffff,
  cVSAParameterValueTypeMask = 0x70000,
  cVSAParameterValueUnicodeString = 0,
  cVSAParameterValueANSIString = 0x10000,
  cVSAParameterValueGUID = 0x20000,
  cVSAParameterValueDWORD = 0x30000,
  cVSAParameterValueBYTEArray = 0x40000,
  cVSAParameterValueLengthMask = 0xffffffff,
};

typedef struct _NDR64_POINTER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_136;
  /* 0x0008 */ const void* Pointee;
} NDR64_POINTER_FORMAT, *PNDR64_POINTER_FORMAT; /* size: 0x0010 */

typedef struct __midl_frag1615_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag1615_t, *P_midl_frag1615_t; /* size: 0x0010 */

typedef struct _CERT_REVOCATION_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_137;
  /* 0x0008 */ const struct _CERT_CONTEXT* pIssuerCert;
  /* 0x0010 */ unsigned long cCertStore;
  /* 0x0014 */ long Padding_138;
  /* 0x0018 */ void** rgCertStore;
  /* 0x0020 */ void* hCrlStore;
  /* 0x0028 */ struct _FILETIME* pftTimeToUse;
} CERT_REVOCATION_PARA, *PCERT_REVOCATION_PARA; /* size: 0x0030 */

typedef union _MCI_ADDR
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Address;
      /* 0x0004 */ unsigned long Reserved;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_ADDR, *PMCI_ADDR; /* size: 0x0008 */

struct IDataObject
{
}; /* size: 0x0008 */

enum tagSTREAM_SEEK
{
  STREAM_SEEK_SET = 0,
  STREAM_SEEK_CUR = 1,
  STREAM_SEEK_END = 2,
};

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long CodeIntegrityOptions;
} SYSTEM_CODEINTEGRITY_INFORMATION, *PSYSTEM_CODEINTEGRITY_INFORMATION; /* size: 0x0008 */

typedef struct _NDR64_STRUCTURE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasPointerInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HasMemberInfo : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasConfArray : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasOrigPointerInfo : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasOrigMemberInfo : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved2 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_STRUCTURE_FLAGS, *PNDR64_STRUCTURE_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* ArrayDescription;
} NDR64_CONF_STRUCTURE_HEADER_FORMAT, *PNDR64_CONF_STRUCTURE_HEADER_FORMAT; /* size: 0x0010 */

typedef struct _SERVICE_STATUS_PROCESS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
  /* 0x001c */ unsigned long dwProcessId;
  /* 0x0020 */ unsigned long dwServiceFlags;
} SERVICE_STATUS_PROCESS, *PSERVICE_STATUS_PROCESS; /* size: 0x0024 */

typedef struct _SERVICE_NOTIFY_1
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_139;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
} SERVICE_NOTIFY_1, *PSERVICE_NOTIFY_1; /* size: 0x0040 */

struct tagSTICKYKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

enum SYSNLS_FUNCTION
{
  COMPARE_STRING = 1,
};

struct IInitializeSpy
{
}; /* size: 0x0008 */

enum tagORT
{
  ORT_UNUSED = 0,
  ORT_OBJREF = 1,
  ORT_LAZY_OBJREF = 2,
  ORT_AGILE = 4,
  ORT_LAZY_AGILE = 8,
  ORT_STREAM = 22,
  ORT_FREETM = 50,
};

typedef struct _MIDL_TYPE_PICKLING_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 Reserved[3];
} MIDL_TYPE_PICKLING_INFO, *PMIDL_TYPE_PICKLING_INFO; /* size: 0x0020 */

enum tagDCOM_CALL_STATE
{
  DCOM_NONE = 0,
  DCOM_CALL_COMPLETE = 1,
  DCOM_CALL_CANCELED = 2,
};

typedef struct _HOTPATCH_HOOK_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 TargetAddress;
  /* 0x0008 */ unsigned __int64 MappedAddress;
  /* 0x0010 */ unsigned long CodeOffset;
  /* 0x0014 */ unsigned long CodeSize;
  /* 0x0018 */ unsigned long OrigCodeOffset;
  /* 0x001c */ unsigned long ValidationOffset;
  /* 0x0020 */ unsigned long ValidationSize;
  /* 0x0024 */ long __PADDING__[1];
} HOTPATCH_HOOK_DESCRIPTOR, *PHOTPATCH_HOOK_DESCRIPTOR; /* size: 0x0028 */

struct tagCustomPrivScmInfo
{
  /* 0x0000 */ long Apartment;
  /* 0x0004 */ long Padding_140;
  /* 0x0008 */ wchar_t* pwszWinstaDesktop;
  /* 0x0010 */ unsigned __int64 ProcessSignature;
  /* 0x0018 */ wchar_t* pEnvBlock;
  /* 0x0020 */ unsigned long EnvBlockLength;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef enum _TOKEN_TYPE
{
  TokenPrimary = 1,
  TokenImpersonation = 2,
} TOKEN_TYPE, *PTOKEN_TYPE;

typedef struct _irot_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[487];
  /* 0x01e9 */ char __PADDING__[1];
} irot_MIDL_PROC_FORMAT_STRING, *Pirot_MIDL_PROC_FORMAT_STRING; /* size: 0x01ea */

typedef enum __MIDL_IDLLHost_0001
{
  DLLHOST_IS_DPE = 1,
  DLLHOST_IS_PFN = 2,
} _MIDL_IDLLHost_0001, *P_MIDL_IDLLHost_0001;

union tagCY
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Lo;
      /* 0x0004 */ long Hi;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 int64;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct tagDEC
{
  /* 0x0000 */ unsigned short wReserved;
  union
  {
    struct
    {
      /* 0x0002 */ unsigned char scale;
      /* 0x0003 */ unsigned char sign;
    }; /* size: 0x0002 */
    /* 0x0002 */ unsigned short signscale;
  }; /* size: 0x0002 */
  /* 0x0004 */ unsigned long Hi32;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Lo32;
      /* 0x000c */ unsigned long Mid32;
    }; /* size: 0x0008 */
    /* 0x0008 */ unsigned __int64 Lo64;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct tagVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ __int64 llVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ __int64* pllVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagVARIANT* pvarVal;
        /* 0x0008 */ void* byref;
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ unsigned __int64 ullVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ unsigned __int64* pullVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        struct
        {
          /* 0x0008 */ void* pvRecord;
          /* 0x0010 */ struct IRecordInfo* pRecInfo;
        }; /* size: 0x0010 */
      }; /* size: 0x0010 */
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct tagDEC decVal;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

struct tagPARAMDESCEX
{
  /* 0x0000 */ unsigned long cBytes;
  /* 0x0004 */ long Padding_141;
  /* 0x0008 */ struct tagVARIANT varDefaultValue;
}; /* size: 0x0020 */

struct IDebugStream
{
}; /* size: 0x0008 */

typedef struct __midl_frag94_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag94_t, *P_midl_frag94_t; /* size: 0x0038 */

enum tagTYSPEC
{
  TYSPEC_CLSID = 0,
  TYSPEC_FILEEXT = 1,
  TYSPEC_MIMETYPE = 2,
  TYSPEC_FILENAME = 3,
  TYSPEC_PROGID = 4,
  TYSPEC_PACKAGENAME = 5,
  TYSPEC_OBJECTID = 6,
};

typedef struct _MINIDUMP_SYSTEM_INFO
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  union
  {
    /* 0x0006 */ unsigned short Reserved0;
    struct
    {
      /* 0x0006 */ unsigned char NumberOfProcessors;
      /* 0x0007 */ unsigned char ProductType;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x0008 */ unsigned int MajorVersion;
  /* 0x000c */ unsigned int MinorVersion;
  /* 0x0010 */ unsigned int BuildNumber;
  /* 0x0014 */ unsigned int PlatformId;
  /* 0x0018 */ unsigned long CSDVersionRva;
  union
  {
    /* 0x001c */ unsigned int Reserved1;
    struct
    {
      /* 0x001c */ unsigned short SuiteMask;
      /* 0x001e */ unsigned short Reserved2;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0020 */ union _CPU_INFORMATION Cpu;
} MINIDUMP_SYSTEM_INFO, *PMINIDUMP_SYSTEM_INFO; /* size: 0x0038 */

struct IOleLink
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
{
  SystemCrashDumpDisable = 0,
  SystemCrashDumpReconfigure = 1,
} SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS, *PSYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;

typedef enum _TAG_UNNAMED_10
{
  WPP_VER_WIN2K_CB_FORWARD_PTR = 1,
  WPP_VER_WHISTLER_CB_FORWARD_PTR = 2,
  WPP_VER_LH_CB_FORWARD_PTR = 3,
} TAG_UNNAMED_10, *PTAG_UNNAMED_10;

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BufferLength;
  /* 0x0008 */ void* Buffer;
} PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA, *PPLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA; /* size: 0x0010 */

typedef struct _SYSTEM_POOL_ENTRY
{
  /* 0x0000 */ unsigned char Allocated;
  /* 0x0001 */ unsigned char Spare0;
  /* 0x0002 */ unsigned short AllocatorBackTraceIndex;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ unsigned char Tag[4];
    /* 0x0008 */ unsigned long TagUlong;
    /* 0x0008 */ void* ProcessChargedQuota;
  }; /* size: 0x0008 */
} SYSTEM_POOL_ENTRY, *PSYSTEM_POOL_ENTRY; /* size: 0x0010 */

typedef enum _WATCHDOG_HANDLER_ACTION
{
  WdActionSetTimeoutValue = 0,
  WdActionQueryTimeoutValue = 1,
  WdActionResetTimer = 2,
  WdActionStopTimer = 3,
  WdActionStartTimer = 4,
  WdActionSetTriggerAction = 5,
  WdActionQueryTriggerAction = 6,
  WdActionQueryState = 7,
  WdActionSleep = 8,
  WdActionWake = 9,
} WATCHDOG_HANDLER_ACTION, *PWATCHDOG_HANDLER_ACTION;

typedef enum _SHUTDOWN_ACTION
{
  ShutdownNoReboot = 0,
  ShutdownReboot = 1,
  ShutdownPowerOff = 2,
} SHUTDOWN_ACTION, *PSHUTDOWN_ACTION;

struct IOleItemContainer
{
}; /* size: 0x0008 */

typedef struct _CERT_POLICY_INFO
{
  /* 0x0000 */ char* pszPolicyIdentifier;
  /* 0x0008 */ unsigned long cPolicyQualifier;
  /* 0x000c */ long Padding_142;
  /* 0x0010 */ struct _CERT_POLICY_QUALIFIER_INFO* rgPolicyQualifier;
} CERT_POLICY_INFO, *PCERT_POLICY_INFO; /* size: 0x0018 */

typedef struct _RTL_GENERIC_TABLE
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* TableRoot;
  /* 0x0008 */ struct _LIST_ENTRY InsertOrderList;
  /* 0x0018 */ struct _LIST_ENTRY* OrderedPointer;
  /* 0x0020 */ unsigned long WhichOrderedElement;
  /* 0x0024 */ unsigned long NumberGenericTableElements;
  /* 0x0028 */ void* CompareRoutine /* function */;
  /* 0x0030 */ void* AllocateRoutine /* function */;
  /* 0x0038 */ void* FreeRoutine /* function */;
  /* 0x0040 */ void* TableContext;
} RTL_GENERIC_TABLE, *PRTL_GENERIC_TABLE; /* size: 0x0048 */

enum MIDL_ES_HANDLE_STYLE
{
  MES_INCREMENTAL_HANDLE = 0,
  MES_FIXED_BUFFER_HANDLE = 1,
  MES_DYNAMIC_BUFFER_HANDLE = 2,
};

struct MarshallingChannel
{
  /* 0x0000 */ long Padding_143[6];
  /* 0x0018 */ struct IMarshallingManager* m_pMarshaller;
  /* 0x0020 */ unsigned long m_dwDestContext;
  /* 0x0024 */ long Padding_144;
  /* 0x0028 */ void* m_pvDestContext;
  /* 0x0030 */ struct IUnknown* m_punkOuter;
  /* 0x0038 */ long m_refs;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

enum tagFUNCKIND
{
  FUNC_VIRTUAL = 0,
  FUNC_PUREVIRTUAL = 1,
  FUNC_NONVIRTUAL = 2,
  FUNC_STATIC = 3,
  FUNC_DISPATCH = 4,
};

enum tagINVOKEKIND
{
  INVOKE_FUNC = 1,
  INVOKE_PROPERTYGET = 2,
  INVOKE_PROPERTYPUT = 4,
  INVOKE_PROPERTYPUTREF = 8,
};

enum tagCALLCONV
{
  CC_FASTCALL = 0,
  CC_CDECL = 1,
  CC_MSCPASCAL = 2,
  CC_PASCAL = 2,
  CC_MACPASCAL = 3,
  CC_STDCALL = 4,
  CC_FPFASTCALL = 5,
  CC_SYSCALL = 6,
  CC_MPWCDECL = 7,
  CC_MPWPASCAL = 8,
  CC_MAX = 9,
};

struct tagIDLDESC
{
  /* 0x0000 */ unsigned __int64 dwReserved;
  /* 0x0008 */ unsigned short wIDLFlags;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagPARAMDESC
{
  /* 0x0000 */ struct tagPARAMDESCEX* pparamdescex;
  /* 0x0008 */ unsigned short wParamFlags;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagELEMDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdesc;
  union
  {
    /* 0x0010 */ struct tagIDLDESC idldesc;
    /* 0x0010 */ struct tagPARAMDESC paramdesc;
  }; /* size: 0x0010 */
}; /* size: 0x0020 */

struct tagFUNCDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long Padding_145;
  /* 0x0008 */ long* lprgscode;
  /* 0x0010 */ struct tagELEMDESC* lprgelemdescParam;
  /* 0x0018 */ enum tagFUNCKIND funckind;
  /* 0x001c */ enum tagINVOKEKIND invkind;
  /* 0x0020 */ enum tagCALLCONV callconv;
  /* 0x0024 */ short cParams;
  /* 0x0026 */ short cParamsOpt;
  /* 0x0028 */ short oVft;
  /* 0x002a */ short cScodes;
  /* 0x002c */ long Padding_146;
  /* 0x0030 */ struct tagELEMDESC elemdescFunc;
  /* 0x0050 */ unsigned short wFuncFlags;
  /* 0x0052 */ char __PADDING__[6];
}; /* size: 0x0058 */

typedef struct _BCRYPT_DH_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
} BCRYPT_DH_PARAMETER_HEADER, *PBCRYPT_DH_PARAMETER_HEADER; /* size: 0x000c */

typedef struct _FP_32
{
  /* 0x0000 */ unsigned long W[1];
} FP_32, *PFP_32; /* size: 0x0004 */

typedef struct _FP_64
{
  /* 0x0000 */ unsigned long W[2];
} FP_64, *PFP_64; /* size: 0x0008 */

typedef struct _FP_80
{
  /* 0x0000 */ unsigned long W[3];
} FP_80, *PFP_80; /* size: 0x000c */

typedef struct _FP_128
{
  /* 0x0000 */ unsigned long W[4];
} FP_128, *PFP_128; /* size: 0x0010 */

class ClassRegistration
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long serverType;
  /* 0x0014 */ long Padding_147;
  /* 0x0018 */ struct HINSTANCE__* hModule;
  /* 0x0020 */ const wchar_t* className;
  /* 0x0028 */ const wchar_t* progID;
  /* 0x0030 */ const wchar_t* versionIndependentProgID;
  /* 0x0038 */ const wchar_t* threadingModel;
  /* 0x0040 */ struct _GUID appid;
  /* 0x0050 */ struct _GUID moduleid;
  /* 0x0060 */ int fCreateService;
}; /* size: 0x0068 */

struct ICatalogFileInfo
{
}; /* size: 0x0008 */

enum tagCALLSTATE
{
  CALLSTATE_NOT_IN_CALL = -1,
  CALLSTATE_DATA_NOT_AVAILABLE = 0,
};

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ long Padding_148;
  /* 0x0010 */ unsigned short* NetworkAddress;
  /* 0x0018 */ unsigned short* StringEndpoint;
  union
  {
    /* 0x0020 */ unsigned short* Reserved;
  } /* size: 0x0008 */ u1;
  /* 0x0028 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_W, *PRPC_BINDING_HANDLE_TEMPLATE_V1_W; /* size: 0x0038 */

enum SYSTEM_POWER_CONDITION
{
  PoAc = 0,
  PoDc = 1,
  PoHot = 2,
  PoConditionMaximum = 3,
};

struct IXMLDOMElement
{
}; /* size: 0x0008 */

typedef enum _FSINFOCLASS
{
  FileFsVolumeInformation = 1,
  FileFsLabelInformation = 2,
  FileFsSizeInformation = 3,
  FileFsDeviceInformation = 4,
  FileFsAttributeInformation = 5,
  FileFsControlInformation = 6,
  FileFsFullSizeInformation = 7,
  FileFsObjectIdInformation = 8,
  FileFsDriverPathInformation = 9,
  FileFsVolumeFlagsInformation = 10,
  FileFsMaximumInformation = 11,
} FSINFOCLASS, *PFSINFOCLASS;

typedef struct _MINIDUMP_DIRECTORY
{
  /* 0x0000 */ unsigned int StreamType;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Location;
} MINIDUMP_DIRECTORY, *PMINIDUMP_DIRECTORY; /* size: 0x000c */

enum tagCALLTYPE
{
  CALLTYPE_TOPLEVEL = 1,
  CALLTYPE_NESTED = 2,
  CALLTYPE_ASYNC = 3,
  CALLTYPE_TOPLEVEL_CALLPENDING = 4,
  CALLTYPE_ASYNC_CALLPENDING = 5,
};

struct tagSIZE
{
  /* 0x0000 */ long cx;
  /* 0x0004 */ long cy;
}; /* size: 0x0008 */

typedef struct _RTL_HANDLE_TABLE
{
  /* 0x0000 */ unsigned long MaximumNumberOfHandles;
  /* 0x0004 */ unsigned long SizeOfHandleTableEntry;
  /* 0x0008 */ unsigned long Reserved[2];
  /* 0x0010 */ struct _RTL_HANDLE_TABLE_ENTRY* FreeHandles;
  /* 0x0018 */ struct _RTL_HANDLE_TABLE_ENTRY* CommittedHandles;
  /* 0x0020 */ struct _RTL_HANDLE_TABLE_ENTRY* UnCommittedHandles;
  /* 0x0028 */ struct _RTL_HANDLE_TABLE_ENTRY* MaxReservedHandles;
} RTL_HANDLE_TABLE, *PRTL_HANDLE_TABLE; /* size: 0x0030 */

typedef enum _JOURNAL_INFORMATION_CLASS
{
  JournalAbsoluteInformation = 0,
  JournalClientInformation = 1,
  MaxJournalInformation = 2,
} JOURNAL_INFORMATION_CLASS, *PJOURNAL_INFORMATION_CLASS;

enum tagCOWAIT_FLAGS
{
  COWAIT_WAITALL = 1,
  COWAIT_ALERTABLE = 2,
  COWAIT_INPUTAVAILABLE = 4,
};

enum IMPORT_OBJECT_NAME_TYPE
{
  IMPORT_OBJECT_ORDINAL = 0,
  IMPORT_OBJECT_NAME = 1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 2,
  IMPORT_OBJECT_NAME_UNDECORATE = 3,
};

class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64>
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct __midl_frag1658_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1658_t, *P_midl_frag1658_t; /* size: 0x0068 */

typedef enum _RPC_ASYNC_EVENT
{
  RpcCallComplete = 0,
  RpcSendComplete = 1,
  RpcReceiveComplete = 2,
  RpcClientDisconnect = 3,
  RpcClientCancel = 4,
} RPC_ASYNC_EVENT, *PRPC_ASYNC_EVENT;

typedef struct _PO_TRANSITION_VETO_REASON
{
  /* 0x0000 */ unsigned long ResourceId;
  /* 0x0004 */ unsigned long ModuleNameOffset;
} PO_TRANSITION_VETO_REASON, *PPO_TRANSITION_VETO_REASON; /* size: 0x0008 */

struct IPartitionLookup
{
}; /* size: 0x0008 */

enum XLAT_SIDE
{
  XLAT_SERVER = 1,
  XLAT_CLIENT = 2,
};

enum IMAGE_AUX_SYMBOL_TYPE
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
};

struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP
{
  /* 0x0000 */ unsigned __int64 Count;
  /* 0x0008 */ const struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY* Entries;
}; /* size: 0x0010 */

struct IFillInfo
{
}; /* size: 0x0008 */

typedef enum _SYSTEM_MEMORY_LIST_COMMAND
{
  MemoryCaptureAccessedBits = 0,
  MemoryCaptureAndResetAccessedBits = 1,
  MemoryEmptyWorkingSets = 2,
  MemoryFlushModifiedList = 3,
  MemoryPurgeStandbyList = 4,
  MemoryPurgeLowPriorityStandbyList = 5,
  MemoryCommandMax = 6,
} SYSTEM_MEMORY_LIST_COMMAND, *PSYSTEM_MEMORY_LIST_COMMAND;

struct DELETE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ unsigned long DeleteFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class CSCInnerUnknown
{
  /* 0x0000 */ long Padding_149[2];
  /* 0x0008 */ unsigned long _iRefCount;
  /* 0x000c */ long Padding_150;
  /* 0x0010 */ class CSynchronizeContainer* _pParent;
}; /* size: 0x0018 */

class CSynchronizeContainer
{
  /* 0x0000 */ long Padding_151[2];
  /* 0x0008 */ class CSCInnerUnknown _cInner;
  /* 0x0020 */ struct IUnknown* _pControl;
  /* 0x0028 */ unsigned long _lLast;
  /* 0x002c */ long Padding_152;
  /* 0x0030 */ void* _aEvent[63];
  /* 0x0228 */ struct ISynchronize* _aSync[63];
}; /* size: 0x0420 */

enum tagCPFLAGS
{
  CPFLAG_NONE = 0,
  CPFLAG_PROPAGATE = 1,
  CPFLAG_EXPOSE = 2,
  CPFLAG_ENVOY = 4,
  CPFLAG_MONITORSTUB = 8,
  CPFLAG_MONITORPROXY = 16,
  CPFLAG_DONTCOMPARE = 32,
};

typedef enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 1,
  NtProductLanManNt = 2,
  NtProductServer = 3,
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;

typedef struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION
{
  /* 0x0000 */ void* WdHandler /* function */;
  /* 0x0008 */ void* Context;
} SYSTEM_WATCHDOG_HANDLER_INFORMATION, *PSYSTEM_WATCHDOG_HANDLER_INFORMATION; /* size: 0x0010 */

typedef enum __MIDL_IBindStatusCallback_0001
{
  BINDVERB_GET = 0,
  BINDVERB_POST = 1,
  BINDVERB_PUT = 2,
  BINDVERB_CUSTOM = 3,
} _MIDL_IBindStatusCallback_0001, *P_MIDL_IBindStatusCallback_0001;

typedef enum _SYSTEM_VA_TYPE
{
  SystemVaTypeAll = 0,
  SystemVaTypeNonPagedPool = 1,
  SystemVaTypePagedPool = 2,
  SystemVaTypeSystemCache = 3,
  SystemVaTypeSystemPtes = 4,
  SystemVaTypeSessionSpace = 5,
  SystemVaTypeMax = 6,
} SYSTEM_VA_TYPE, *PSYSTEM_VA_TYPE;

typedef enum _tagPARSEACTION
{
  PARSE_CANONICALIZE = 1,
  PARSE_FRIENDLY = 2,
  PARSE_SECURITY_URL = 3,
  PARSE_ROOTDOCUMENT = 4,
  PARSE_DOCUMENT = 5,
  PARSE_ANCHOR = 6,
  PARSE_ENCODE = 7,
  PARSE_DECODE = 8,
  PARSE_PATH_FROM_URL = 9,
  PARSE_URL_FROM_PATH = 10,
  PARSE_MIME = 11,
  PARSE_SERVER = 12,
  PARSE_SCHEMA = 13,
  PARSE_SITE = 14,
  PARSE_DOMAIN = 15,
  PARSE_LOCATION = 16,
  PARSE_SECURITY_DOMAIN = 17,
  PARSE_ESCAPE = 18,
  PARSE_UNESCAPE = 19,
} tagPARSEACTION, *PtagPARSEACTION;

class CObjServer
{
  /* 0x0000 */ long Padding_153[2];
  /* 0x0008 */ class CStdIdentity* _pStdID;
  /* 0x0010 */ struct _GUID _ipid;
  /* 0x0020 */ unsigned __int64 _oxid;
  /* 0x0028 */ long _cRefs;
}; /* size: 0x0030 */

struct IEnumSTATPROPSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

enum PO_FIXED_WAKE_SOURCE_TYPE
{
  FixedWakeSourcePowerButton = 0,
  FixedWakeSourceSleepButton = 1,
  FixedWakeSourceRtc = 2,
};

struct tagEMRSETVIEWPORTORGEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOrigin;
}; /* size: 0x0010 */

typedef union _RTL_ELEVATION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ElevationEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long InstallerDetectEnabled : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReservedBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RTL_ELEVATION_FLAGS, *PRTL_ELEVATION_FLAGS; /* size: 0x0004 */

struct CStdWrapper::Reactivate::__l3::tagServerRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0008 */ void** ppServer;
  /* 0x0010 */ struct _GUID* pIID;
}; /* size: 0x0018 */

enum SHSTOCKICONID
{
  SIID_DOCNOASSOC = 0,
  SIID_DOCASSOC = 1,
  SIID_APPLICATION = 2,
  SIID_FOLDER = 3,
  SIID_FOLDEROPEN = 4,
  SIID_DRIVE525 = 5,
  SIID_DRIVE35 = 6,
  SIID_DRIVEREMOVE = 7,
  SIID_DRIVEFIXED = 8,
  SIID_DRIVENET = 9,
  SIID_DRIVENETDISABLED = 10,
  SIID_DRIVECD = 11,
  SIID_DRIVERAM = 12,
  SIID_WORLD = 13,
  SIID_SERVER = 15,
  SIID_PRINTER = 16,
  SIID_MYNETWORK = 17,
  SIID_FIND = 22,
  SIID_HELP = 23,
  SIID_SHARE = 28,
  SIID_LINK = 29,
  SIID_SLOWFILE = 30,
  SIID_RECYCLER = 31,
  SIID_RECYCLERFULL = 32,
  SIID_MEDIACDAUDIO = 40,
  SIID_LOCK = 47,
  SIID_AUTOLIST = 49,
  SIID_PRINTERNET = 50,
  SIID_SERVERSHARE = 51,
  SIID_PRINTERFAX = 52,
  SIID_PRINTERFAXNET = 53,
  SIID_PRINTERFILE = 54,
  SIID_STACK = 55,
  SIID_MEDIASVCD = 56,
  SIID_STUFFEDFOLDER = 57,
  SIID_DRIVEUNKNOWN = 58,
  SIID_DRIVEDVD = 59,
  SIID_MEDIADVD = 60,
  SIID_MEDIADVDRAM = 61,
  SIID_MEDIADVDRW = 62,
  SIID_MEDIADVDR = 63,
  SIID_MEDIADVDROM = 64,
  SIID_MEDIACDAUDIOPLUS = 65,
  SIID_MEDIACDRW = 66,
  SIID_MEDIACDR = 67,
  SIID_MEDIACDBURN = 68,
  SIID_MEDIABLANKCD = 69,
  SIID_MEDIACDROM = 70,
  SIID_AUDIOFILES = 71,
  SIID_IMAGEFILES = 72,
  SIID_VIDEOFILES = 73,
  SIID_MIXEDFILES = 74,
  SIID_FOLDERBACK = 75,
  SIID_FOLDERFRONT = 76,
  SIID_SHIELD = 77,
  SIID_WARNING = 78,
  SIID_INFO = 79,
  SIID_ERROR = 80,
  SIID_KEY = 81,
  SIID_SOFTWARE = 82,
  SIID_RENAME = 83,
  SIID_DELETE = 84,
  SIID_MEDIAAUDIODVD = 85,
  SIID_MEDIAMOVIEDVD = 86,
  SIID_MEDIAENHANCEDCD = 87,
  SIID_MEDIAENHANCEDDVD = 88,
  SIID_MEDIAHDDVD = 89,
  SIID_MEDIABLURAY = 90,
  SIID_MEDIAVCD = 91,
  SIID_MEDIADVDPLUSR = 92,
  SIID_MEDIADVDPLUSRW = 93,
  SIID_DESKTOPPC = 94,
  SIID_MOBILEPC = 95,
  SIID_USERS = 96,
  SIID_MEDIASMARTMEDIA = 97,
  SIID_MEDIACOMPACTFLASH = 98,
  SIID_DEVICECELLPHONE = 99,
  SIID_DEVICECAMERA = 100,
  SIID_DEVICEVIDEOCAMERA = 101,
  SIID_DEVICEAUDIOPLAYER = 102,
  SIID_NETWORKCONNECT = 103,
  SIID_INTERNET = 104,
  SIID_ZIPFILE = 105,
  SIID_SETTINGS = 106,
  SIID_DRIVEHDDVD = 132,
  SIID_DRIVEBD = 133,
  SIID_MEDIAHDDVDROM = 134,
  SIID_MEDIAHDDVDR = 135,
  SIID_MEDIAHDDVDRAM = 136,
  SIID_MEDIABDROM = 137,
  SIID_MEDIABDR = 138,
  SIID_MEDIABDRE = 139,
  SIID_CLUSTEREDDRIVE = 140,
  SIID_MAX_ICONS = 141,
};

enum tagExtentMode
{
  DVEXTENT_CONTENT = 0,
  DVEXTENT_INTEGRAL = 1,
};

struct HRGN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _QUERY_SERVICE_LOCK_STATUSA
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ long Padding_154;
  /* 0x0008 */ char* lpLockOwner;
  /* 0x0010 */ unsigned long dwLockDuration;
  /* 0x0014 */ long __PADDING__[1];
} QUERY_SERVICE_LOCK_STATUSA, *PQUERY_SERVICE_LOCK_STATUSA; /* size: 0x0018 */

typedef struct _SSerializationHeader
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_155;
  /* 0x0008 */ void* pvMarshalPtr;
} SSerializationHeader, *PSSerializationHeader; /* size: 0x0010 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0002
{
  SIT_RUNAS_SPECIFIC_USER = 1,
  SIT_RUNAS_INTERACTIVE = 2,
} _MIDL___MIDL_itf_activate_0000_0010_0002, *P_MIDL___MIDL_itf_activate_0000_0010_0002;

struct tagQACONTAINER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_156;
  /* 0x0008 */ struct IOleClientSite* pClientSite;
  /* 0x0010 */ struct IAdviseSinkEx* pAdviseSink;
  /* 0x0018 */ struct IPropertyNotifySink* pPropertyNotifySink;
  /* 0x0020 */ struct IUnknown* pUnkEventSink;
  /* 0x0028 */ unsigned long dwAmbientFlags;
  /* 0x002c */ unsigned long colorFore;
  /* 0x0030 */ unsigned long colorBack;
  /* 0x0034 */ long Padding_157;
  /* 0x0038 */ struct IFont* pFont;
  /* 0x0040 */ struct IOleUndoManager* pUndoMgr;
  /* 0x0048 */ unsigned long dwAppearance;
  /* 0x004c */ long lcid;
  /* 0x0050 */ struct HPALETTE__* hpal;
  /* 0x0058 */ struct IBindHost* pBindHost;
  /* 0x0060 */ struct IOleControlSite* pOleControlSite;
  /* 0x0068 */ struct IServiceProvider* pServiceProvider;
}; /* size: 0x0070 */

typedef struct _SI_COPYFILE
{
  /* 0x0000 */ unsigned long SourceFileNameLength;
  /* 0x0004 */ unsigned long DestinationFileNameLength;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ wchar_t FileNameBuffer[1];
  /* 0x000e */ char __PADDING__[2];
} SI_COPYFILE, *PSI_COPYFILE; /* size: 0x0010 */

typedef enum _SC_STATUS_TYPE
{
  SC_STATUS_PROCESS_INFO = 0,
} SC_STATUS_TYPE, *PSC_STATUS_TYPE;

class CMutexSem2
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_cs;
  /* 0x0028 */ int m_fCsInitialized;
}; /* size: 0x0030 */

class CpUnkList
{
  /* 0x0000 */ struct pUnkListElement* _head;
  /* 0x0008 */ class CMutexSem2 _mutex;
}; /* size: 0x0038 */

typedef struct _LUNICODE_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ wchar_t* Buffer;
} LUNICODE_STRING, *PLUNICODE_STRING; /* size: 0x0018 */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >
{
  /* 0x0000 */ struct _LUNICODE_STRING m_String;
}; /* size: 0x0018 */

enum OLE_TRISTATE
{
  triUnchecked = 0,
  triChecked = 1,
  triGray = 2,
};

typedef struct _OCSP_CERT_ID
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB IssuerNameHash;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB IssuerKeyHash;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB SerialNumber;
} OCSP_CERT_ID, *POCSP_CERT_ID; /* size: 0x0048 */

typedef struct _SYSTEMTIME
{
  /* 0x0000 */ unsigned short wYear;
  /* 0x0002 */ unsigned short wMonth;
  /* 0x0004 */ unsigned short wDayOfWeek;
  /* 0x0006 */ unsigned short wDay;
  /* 0x0008 */ unsigned short wHour;
  /* 0x000a */ unsigned short wMinute;
  /* 0x000c */ unsigned short wSecond;
  /* 0x000e */ unsigned short wMilliseconds;
} SYSTEMTIME, *PSYSTEMTIME; /* size: 0x0010 */

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} TIME_DYNAMIC_ZONE_INFORMATION, *PTIME_DYNAMIC_ZONE_INFORMATION; /* size: 0x01b0 */

class CBlockPreHeader
{
  /* 0x0000 */ unsigned __int64 _ulSize;
  /* 0x0008 */ int _fFree;
}; /* size: 0x0010 */

class CSurrogateActivator
{
  /* 0x0000 */ long Padding_158[2];
  /* 0x0008 */ struct _GUID m_processGuid;
  /* 0x0018 */ int m_fServicesConfigured;
  /* 0x001c */ unsigned long m_dwObjectCountAtIdleTime;
  /* 0x0000 */ class CSurrogateActivator* s_pCSA;
}; /* size: 0x0020 */

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  /* 0x0000 */ unsigned long NumberOfAssignedProcesses;
  /* 0x0004 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST; /* size: 0x0010 */

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS
{
  ActivationContextBasicInformation = 1,
  ActivationContextDetailedInformation = 2,
  AssemblyDetailedInformationInActivationContext = 3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 4,
  RunlevelInformationInActivationContext = 5,
  MaxActivationContextInfoClass = 6,
  AssemblyDetailedInformationInActivationContxt = 3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 4,
} ACTIVATION_CONTEXT_INFO_CLASS, *PACTIVATION_CONTEXT_INFO_CLASS;

typedef enum _FP_IEEE_OPERATION_CODE
{
  FpCodeUnspecified = 0,
  FpCodeAdd = 1,
  FpCodeSubtract = 2,
  FpCodeMultiply = 3,
  FpCodeDivide = 4,
  FpCodeSquareRoot = 5,
  FpCodeRemainder = 6,
  FpCodeCompare = 7,
  FpCodeConvert = 8,
  FpCodeRound = 9,
  FpCodeTruncate = 10,
  FpCodeFloor = 11,
  FpCodeCeil = 12,
  FpCodeAcos = 13,
  FpCodeAsin = 14,
  FpCodeAtan = 15,
  FpCodeAtan2 = 16,
  FpCodeCabs = 17,
  FpCodeCos = 18,
  FpCodeCosh = 19,
  FpCodeExp = 20,
  FpCodeFabs = 21,
  FpCodeFmod = 22,
  FpCodeFrexp = 23,
  FpCodeHypot = 24,
  FpCodeLdexp = 25,
  FpCodeLog = 26,
  FpCodeLog10 = 27,
  FpCodeModf = 28,
  FpCodePow = 29,
  FpCodeSin = 30,
  FpCodeSinh = 31,
  FpCodeTan = 32,
  FpCodeTanh = 33,
  FpCodeY0 = 34,
  FpCodeY1 = 35,
  FpCodeYn = 36,
} FP_IEEE_OPERATION_CODE, *PFP_IEEE_OPERATION_CODE;

struct BSMINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_159;
  /* 0x0008 */ struct HDESK__* hdesk;
  /* 0x0010 */ struct HWND__* hwnd;
  /* 0x0018 */ struct _LUID luid;
}; /* size: 0x0020 */

class CBasedRevertablePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CChildInstanceList
{
  /* 0x0000 */ class CBasedRevertablePtr _prvHead;
}; /* size: 0x0008 */

struct IExceptionNotification
{
}; /* size: 0x0008 */

enum tagREGKIND
{
  REGKIND_DEFAULT = 0,
  REGKIND_REGISTER = 1,
  REGKIND_NONE = 2,
};

typedef struct _FILE_FS_LABEL_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeLabelLength;
  /* 0x0004 */ wchar_t VolumeLabel[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_FS_LABEL_INFORMATION, *PFILE_FS_LABEL_INFORMATION; /* size: 0x0008 */

struct tagScmRequestInfoData
{
  /* 0x0000 */ struct tagCustomPrivScmInfo* pScmInfo;
  /* 0x0008 */ struct _customREMOTE_REQUEST_SCM_INFO* remoteRequest;
}; /* size: 0x0010 */

class ScmRequestInfo
{
  /* 0x0000 */ long Padding_160[8];
  /* 0x0020 */ struct tagScmRequestInfoData _scmRequestInfoData;
}; /* size: 0x0030 */

enum tagCOINIT
{
  COINIT_APARTMENTTHREADED = 2,
  COINIT_MULTITHREADED = 0,
  COINIT_DISABLE_OLE1DDE = 4,
  COINIT_SPEED_OVER_MEMORY = 8,
};

typedef enum _MEMORY_WORKING_SET_EX_LOCATION
{
  MemoryLocationInvalid = 0,
  MemoryLocationResident = 1,
  MemoryLocationPagefile = 2,
  MemoryLocationReserved = 3,
} MEMORY_WORKING_SET_EX_LOCATION, *PMEMORY_WORKING_SET_EX_LOCATION;

struct tagStorageLayout
{
  /* 0x0000 */ unsigned long LayoutType;
  /* 0x0004 */ long Padding_161;
  /* 0x0008 */ wchar_t* pwcsElementName;
  /* 0x0010 */ union _LARGE_INTEGER cOffset;
  /* 0x0018 */ union _LARGE_INTEGER cBytes;
}; /* size: 0x0020 */

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR
{
  /* 0x0000 */ wchar_t* pwszName;
  /* 0x0008 */ wchar_t* pwszValue;
} CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR; /* size: 0x0010 */

enum tagCTRLINFO
{
  CTRLINFO_EATS_RETURN = 1,
  CTRLINFO_EATS_ESCAPE = 2,
};

class CSafeMultiHeap
{
  /* 0x0000 */ class CSmAllocator* _pSmAllocator;
  /* 0x0008 */ class CPerContext* _ppcPrev;
}; /* size: 0x0010 */

typedef struct _SMALL_RECT
{
  /* 0x0000 */ short Left;
  /* 0x0002 */ short Top;
  /* 0x0004 */ short Right;
  /* 0x0006 */ short Bottom;
} SMALL_RECT, *PSMALL_RECT; /* size: 0x0008 */

class CBasedPubDocFilePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>
{
}; /* size: 0x00b8 */

struct tagPROPMARSHALHEADER
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ struct _GUID policyId;
  /* 0x0020 */ unsigned long flags;
  /* 0x0024 */ unsigned long cb;
}; /* size: 0x0028 */

typedef enum _TIMER_TYPE
{
  NotificationTimer = 0,
  SynchronizationTimer = 1,
} TIMER_TYPE, *PTIMER_TYPE;

typedef enum _TRANSACTION_INFORMATION_CLASS
{
  TransactionBasicInformation = 0,
  TransactionPropertiesInformation = 1,
  TransactionEnlistmentInformation = 2,
  TransactionSuperiorEnlistmentInformation = 3,
  TransactionBindInformation = 4,
  TransactionDTCPrivateInformation = 5,
} TRANSACTION_INFORMATION_CLASS, *PTRANSACTION_INFORMATION_CLASS;

struct IPicture2
{
}; /* size: 0x0008 */

typedef struct _userHMETAFILEPICT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_162;
  /* 0x0008 */ union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
} userHMETAFILEPICT, *PuserHMETAFILEPICT; /* size: 0x0010 */

enum tagOLEDCFLAGS
{
  OLEDC_NODRAW = 1,
  OLEDC_PAINTBKGND = 2,
  OLEDC_OFFSCREEN = 4,
};

enum tagURLZONE
{
  URLZONE_INVALID = -1,
  URLZONE_PREDEFINED_MIN = 0,
  URLZONE_LOCAL_MACHINE = 0,
  URLZONE_INTRANET = 1,
  URLZONE_TRUSTED = 2,
  URLZONE_INTERNET = 3,
  URLZONE_UNTRUSTED = 4,
  URLZONE_PREDEFINED_MAX = 999,
  URLZONE_USER_MIN = 1000,
  URLZONE_USER_MAX = 10000,
};

struct tagBIND_OPTS2
{
  /* 0x0000 */ long Padding_163[4];
  /* 0x0010 */ unsigned long dwTrackFlags;
  /* 0x0014 */ unsigned long dwClassContext;
  /* 0x0018 */ unsigned long locale;
  /* 0x001c */ long Padding_164;
  /* 0x0020 */ struct _COSERVERINFO* pServerInfo;
}; /* size: 0x0028 */

typedef struct _PROCESS_BASIC_INFORMATION64
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ unsigned int Pad1;
  /* 0x0008 */ unsigned __int64 PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ unsigned int Pad2;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION64, *PPROCESS_BASIC_INFORMATION64; /* size: 0x0030 */

typedef enum _UNWIND_OP_CODES
{
  UWOP_PUSH_NONVOL = 0,
  UWOP_ALLOC_LARGE = 1,
  UWOP_ALLOC_SMALL = 2,
  UWOP_SET_FPREG = 3,
  UWOP_SAVE_NONVOL = 4,
  UWOP_SAVE_NONVOL_FAR = 5,
  UWOP_SPARE_CODE1 = 6,
  UWOP_SPARE_CODE2 = 7,
  UWOP_SAVE_XMM128 = 8,
  UWOP_SAVE_XMM128_FAR = 9,
  UWOP_PUSH_MACHFRAME = 10,
} UNWIND_OP_CODES, *PUNWIND_OP_CODES;

struct MD_INTERFACE_CACHE
{
}; /* size: 0x00b8 */

enum tagPOINTERINACTIVE
{
  POINTERINACTIVE_ACTIVATEONENTRY = 1,
  POINTERINACTIVE_DEACTIVATEONLEAVE = 2,
  POINTERINACTIVE_ACTIVATEONDRAG = 4,
};

typedef struct _CERT_ALT_NAME_INFO
{
  /* 0x0000 */ unsigned long cAltEntry;
  /* 0x0004 */ long Padding_165;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY* rgAltEntry;
} CERT_ALT_NAME_INFO, *PCERT_ALT_NAME_INFO; /* size: 0x0010 */

typedef struct _wireBRECORD
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ struct IRecordInfo* pRecInfo;
  /* 0x0010 */ unsigned char* pRecord;
} wireBRECORD, *PwireBRECORD; /* size: 0x0018 */

enum ReplacesCorHdrNumericDefines
{
  COMIMAGE_FLAGS_ILONLY = 1,
  COMIMAGE_FLAGS_32BITREQUIRED = 2,
  COMIMAGE_FLAGS_IL_LIBRARY = 4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COR_VERSION_MAJOR_V2 = 2,
  COR_VERSION_MAJOR = 2,
  COR_VERSION_MINOR = 0,
  COR_DELETED_NAME_LENGTH = 8,
  COR_VTABLEGAP_NAME_LENGTH = 8,
  NATIVE_TYPE_MAX_CB = 1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
  IMAGE_COR_MIH_METHODRVA = 1,
  IMAGE_COR_MIH_EHRVA = 2,
  IMAGE_COR_MIH_BASICBLOCK = 8,
  COR_VTABLE_32BIT = 1,
  COR_VTABLE_64BIT = 2,
  COR_VTABLE_FROM_UNMANAGED = 4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
  COR_VTABLE_CALL_MOST_DERIVED = 16,
  IMAGE_COR_EATJ_THUNK_SIZE = 32,
  MAX_CLASS_NAME = 1024,
  MAX_PACKAGE_NAME = 1024,
};

class CStmBufWrite
{
}; /* size: 0x0118 */

typedef enum _TP_LOG_LEVEL
{
  TP_LOG_LEVEL_ERROR = 0,
  TP_LOG_LEVEL_WARNING = 1,
  TP_LOG_LEVEL_INFO = 2,
  TP_LOG_LEVEL_TRACE_ENTER = 3,
  TP_LOG_LEVEL_TRACE_LEAVE = 4,
} TP_LOG_LEVEL, *PTP_LOG_LEVEL;

enum tagQACONTAINERFLAGS
{
  QACONTAINER_SHOWHATCHING = 1,
  QACONTAINER_SHOWGRABHANDLES = 2,
  QACONTAINER_USERMODE = 4,
  QACONTAINER_DISPLAYASDEFAULT = 8,
  QACONTAINER_UIDEAD = 16,
  QACONTAINER_AUTOCLIP = 32,
  QACONTAINER_MESSAGEREFLECT = 64,
  QACONTAINER_SUPPORTSMNEMONICS = 128,
};

typedef struct _NDR64_ARRAY_ELEMENT_INFO
{
  /* 0x0000 */ unsigned int ElementMemSize;
  /* 0x0004 */ long Padding_166;
  /* 0x0008 */ const void* Element;
} NDR64_ARRAY_ELEMENT_INFO, *PNDR64_ARRAY_ELEMENT_INFO; /* size: 0x0010 */

typedef struct __midl_frag1655_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1655_t, *P_midl_frag1655_t; /* size: 0x0020 */

typedef enum _CALLSOURCE
{
  CALLSOURCE_CROSSAPT = 0,
  CALLSOURCE_CROSSCTX = 1,
} CALLSOURCE, *PCALLSOURCE;

struct IClassFactory2
{
}; /* size: 0x0008 */

typedef enum _IRQ_DEVICE_POLICY
{
  IrqPolicyMachineDefault = 0,
  IrqPolicyAllCloseProcessors = 1,
  IrqPolicyOneCloseProcessor = 2,
  IrqPolicyAllProcessorsInMachine = 3,
  IrqPolicySpecifiedProcessors = 4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 5,
} IRQ_DEVICE_POLICY, *PIRQ_DEVICE_POLICY;

typedef enum _IRQ_PRIORITY
{
  IrqPriorityUndefined = 0,
  IrqPriorityLow = 1,
  IrqPriorityNormal = 2,
  IrqPriorityHigh = 3,
} IRQ_PRIORITY, *PIRQ_PRIORITY;

typedef struct _IO_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Option;
  /* 0x0001 */ unsigned char Type;
  /* 0x0002 */ unsigned char ShareDisposition;
  /* 0x0003 */ unsigned char Spare1;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short Spare2;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Port;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory;
      struct
      {
        /* 0x0008 */ unsigned long MinimumVector;
        /* 0x000c */ unsigned long MaximumVector;
        /* 0x0010 */ enum _IRQ_DEVICE_POLICY AffinityPolicy;
        /* 0x0014 */ enum _IRQ_PRIORITY PriorityPolicy;
        /* 0x0018 */ unsigned __int64 TargetedProcessors;
      } /* size: 0x0018 */ Interrupt;
      struct
      {
        /* 0x0008 */ unsigned long MinimumChannel;
        /* 0x000c */ unsigned long MaximumChannel;
      } /* size: 0x0008 */ Dma;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Generic;
      struct
      {
        /* 0x0008 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long MinBusNumber;
        /* 0x0010 */ unsigned long MaxBusNumber;
        /* 0x0014 */ unsigned long Reserved;
      } /* size: 0x0010 */ BusNumber;
      struct
      {
        /* 0x0008 */ unsigned long Priority;
        /* 0x000c */ unsigned long Reserved1;
        /* 0x0010 */ unsigned long Reserved2;
      } /* size: 0x000c */ ConfigData;
      struct
      {
        /* 0x0008 */ unsigned long Length40;
        /* 0x000c */ unsigned long Alignment40;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory40;
      struct
      {
        /* 0x0008 */ unsigned long Length48;
        /* 0x000c */ unsigned long Alignment48;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory48;
      struct
      {
        /* 0x0008 */ unsigned long Length64;
        /* 0x000c */ unsigned long Alignment64;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory64;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _IO_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST; /* size: 0x0028 */

typedef struct _COORD
{
  /* 0x0000 */ short X;
  /* 0x0002 */ short Y;
} COORD, *PCOORD; /* size: 0x0004 */

typedef struct _CONSOLE_SELECTION_INFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct _COORD dwSelectionAnchor;
  /* 0x0008 */ struct _SMALL_RECT srSelection;
} CONSOLE_SELECTION_INFO, *PCONSOLE_SELECTION_INFO; /* size: 0x0010 */

typedef enum _USER_MARSHAL_CB_TYPE
{
  USER_MARSHAL_CB_BUFFER_SIZE = 0,
  USER_MARSHAL_CB_MARSHALL = 1,
  USER_MARSHAL_CB_UNMARSHALL = 2,
  USER_MARSHAL_CB_FREE = 3,
} USER_MARSHAL_CB_TYPE, *PUSER_MARSHAL_CB_TYPE;

typedef struct _CERT_DSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB g;
} CERT_DSS_PARAMETERS, *PCERT_DSS_PARAMETERS; /* size: 0x0030 */

enum tagPROPBAG2_TYPE
{
  PROPBAG2_TYPE_UNDEFINED = 0,
  PROPBAG2_TYPE_DATA = 1,
  PROPBAG2_TYPE_URL = 2,
  PROPBAG2_TYPE_OBJECT = 3,
  PROPBAG2_TYPE_STREAM = 4,
  PROPBAG2_TYPE_STORAGE = 5,
  PROPBAG2_TYPE_MONIKER = 6,
};

typedef struct _PEB
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SkipPatchingUser32Forwarders : 1; /* bit position: 4 */
      /* 0x0003 */ unsigned char SpareBits : 3; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ long Padding_167;
  /* 0x0008 */ void* Mutant;
  /* 0x0010 */ void* ImageBaseAddress;
  /* 0x0018 */ struct _PEB_LDR_DATA* Ldr;
  /* 0x0020 */ struct _RTL_USER_PROCESS_PARAMETERS* ProcessParameters;
  /* 0x0028 */ void* SubSystemData;
  /* 0x0030 */ void* ProcessHeap;
  /* 0x0038 */ struct _RTL_CRITICAL_SECTION* FastPebLock;
  /* 0x0040 */ void* AtlThunkSListPtr;
  /* 0x0048 */ void* IFEOKey;
  union
  {
    /* 0x0050 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0050 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0050 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0050 */ unsigned long ProcessUsingVEH : 1; /* bit position: 2 */
      /* 0x0050 */ unsigned long ProcessUsingVCH : 1; /* bit position: 3 */
      /* 0x0050 */ unsigned long ReservedBits0 : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0054 */ long Padding_168;
  union
  {
    /* 0x0058 */ void* KernelCallbackTable;
    /* 0x0058 */ void* UserSharedInfoPtr;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long SystemReserved[1];
  /* 0x0064 */ unsigned long SpareUlong;
  /* 0x0068 */ unsigned __int64 SparePebPtr0;
  /* 0x0070 */ unsigned long TlsExpansionCounter;
  /* 0x0074 */ long Padding_169;
  /* 0x0078 */ void* TlsBitmap;
  /* 0x0080 */ unsigned long TlsBitmapBits[2];
  /* 0x0088 */ void* ReadOnlySharedMemoryBase;
  /* 0x0090 */ void* HotpatchInformation;
  /* 0x0098 */ void** ReadOnlyStaticServerData;
  /* 0x00a0 */ void* AnsiCodePageData;
  /* 0x00a8 */ void* OemCodePageData;
  /* 0x00b0 */ void* UnicodeCaseTableData;
  /* 0x00b8 */ unsigned long NumberOfProcessors;
  /* 0x00bc */ unsigned long NtGlobalFlag;
  /* 0x00c0 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x00c8 */ unsigned __int64 HeapSegmentReserve;
  /* 0x00d0 */ unsigned __int64 HeapSegmentCommit;
  /* 0x00d8 */ unsigned __int64 HeapDeCommitTotalFreeThreshold;
  /* 0x00e0 */ unsigned __int64 HeapDeCommitFreeBlockThreshold;
  /* 0x00e8 */ unsigned long NumberOfHeaps;
  /* 0x00ec */ unsigned long MaximumNumberOfHeaps;
  /* 0x00f0 */ void** ProcessHeaps;
  /* 0x00f8 */ void* GdiSharedHandleTable;
  /* 0x0100 */ void* ProcessStarterHelper;
  /* 0x0108 */ unsigned long GdiDCAttributeList;
  /* 0x010c */ long Padding_170;
  /* 0x0110 */ struct _RTL_CRITICAL_SECTION* LoaderLock;
  /* 0x0118 */ unsigned long OSMajorVersion;
  /* 0x011c */ unsigned long OSMinorVersion;
  /* 0x0120 */ unsigned short OSBuildNumber;
  /* 0x0122 */ unsigned short OSCSDVersion;
  /* 0x0124 */ unsigned long OSPlatformId;
  /* 0x0128 */ unsigned long ImageSubsystem;
  /* 0x012c */ unsigned long ImageSubsystemMajorVersion;
  /* 0x0130 */ unsigned long ImageSubsystemMinorVersion;
  /* 0x0134 */ long Padding_171;
  /* 0x0138 */ unsigned __int64 ActiveProcessAffinityMask;
  /* 0x0140 */ unsigned long GdiHandleBuffer[60];
  /* 0x0230 */ void* PostProcessInitRoutine /* function */;
  /* 0x0238 */ void* TlsExpansionBitmap;
  /* 0x0240 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x02c0 */ unsigned long SessionId;
  /* 0x02c4 */ long Padding_172;
  /* 0x02c8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x02d0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x02d8 */ void* pShimData;
  /* 0x02e0 */ void* AppCompatInfo;
  /* 0x02e8 */ struct _UNICODE_STRING CSDVersion;
  /* 0x02f8 */ const struct _ACTIVATION_CONTEXT_DATA* ActivationContextData;
  /* 0x0300 */ struct _ASSEMBLY_STORAGE_MAP* ProcessAssemblyStorageMap;
  /* 0x0308 */ const struct _ACTIVATION_CONTEXT_DATA* SystemDefaultActivationContextData;
  /* 0x0310 */ struct _ASSEMBLY_STORAGE_MAP* SystemAssemblyStorageMap;
  /* 0x0318 */ unsigned __int64 MinimumStackCommit;
  /* 0x0320 */ struct _FLS_CALLBACK_INFO* FlsCallback;
  /* 0x0328 */ struct _LIST_ENTRY FlsListHead;
  /* 0x0338 */ void* FlsBitmap;
  /* 0x0340 */ unsigned long FlsBitmapBits[4];
  /* 0x0350 */ unsigned long FlsHighIndex;
  /* 0x0354 */ long Padding_173;
  /* 0x0358 */ void* WerRegistrationData;
  /* 0x0360 */ void* WerShipAssertPtr;
} PEB, *PPEB; /* size: 0x0368 */

typedef struct _REMOTE_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
  /* 0x0008 */ wchar_t* lpConnectionName;
  /* 0x0010 */ wchar_t* lpRemainingPath;
} REMOTE_NAME_INFOW, *PREMOTE_NAME_INFOW; /* size: 0x0018 */

typedef enum _FINDEX_INFO_LEVELS
{
  FindExInfoStandard = 0,
  FindExInfoMaxInfoLevel = 1,
} FINDEX_INFO_LEVELS, *PFINDEX_INFO_LEVELS;

typedef enum _HARDERROR_RESPONSE
{
  ResponseReturnToCaller = 0,
  ResponseNotHandled = 1,
  ResponseAbort = 2,
  ResponseCancel = 3,
  ResponseIgnore = 4,
  ResponseNo = 5,
  ResponseOk = 6,
  ResponseRetry = 7,
  ResponseYes = 8,
  ResponseTryAgain = 9,
  ResponseContinue = 10,
} HARDERROR_RESPONSE, *PHARDERROR_RESPONSE;

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalUserTime;
  /* 0x0008 */ union _LARGE_INTEGER TotalKernelTime;
  /* 0x0010 */ union _LARGE_INTEGER ThisPeriodTotalUserTime;
  /* 0x0018 */ union _LARGE_INTEGER ThisPeriodTotalKernelTime;
  /* 0x0020 */ unsigned long TotalPageFaultCount;
  /* 0x0024 */ unsigned long TotalProcesses;
  /* 0x0028 */ unsigned long ActiveProcesses;
  /* 0x002c */ unsigned long TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION; /* size: 0x0030 */

typedef struct _MEMORY_WORKING_SET_EX_BLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Win32Protection : 11; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned __int64 Node : 6; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 24 */
      /* 0x0000 */ unsigned __int64 Reserved : 5; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Reserved0 : 14; /* bit position: 1 */
        /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
        /* 0x0000 */ unsigned __int64 Reserved1 : 6; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 Location : 2; /* bit position: 22 */
        /* 0x0000 */ unsigned __int64 Reserved2 : 8; /* bit position: 24 */
        /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
      }; /* bitfield */
    } /* size: 0x0008 */ Invalid;
  }; /* size: 0x0008 */
} MEMORY_WORKING_SET_EX_BLOCK, *PMEMORY_WORKING_SET_EX_BLOCK; /* size: 0x0008 */

struct IServicesSink2
{
}; /* size: 0x0008 */

enum DECOLOR
{
  DE_RED = 0,
  DE_BLACK = 1,
};

class CBasedSStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CPubStream
{
  /* 0x0000 */ long Padding_174[22];
  /* 0x0058 */ class CBasedSStreamPtr _psParent;
  /* 0x0060 */ class CBasedPubDocFilePtr _ppdfParent;
  /* 0x0068 */ int _fDirty;
  /* 0x006c */ long _cReferences;
  /* 0x0070 */ class CPubMappedStream _PubMappedStream;
}; /* size: 0x0098 */

enum tagMSHLFLAGS
{
  MSHLFLAGS_NORMAL = 0,
  MSHLFLAGS_TABLESTRONG = 1,
  MSHLFLAGS_TABLEWEAK = 2,
  MSHLFLAGS_NOPING = 4,
  MSHLFLAGS_RESERVED1 = 8,
  MSHLFLAGS_RESERVED2 = 16,
  MSHLFLAGS_RESERVED3 = 32,
  MSHLFLAGS_RESERVED4 = 64,
};

class CStmBufRead
{
}; /* size: 0x0118 */

enum RTL_BSD_ITEM_TYPE
{
  RtlBsdItemVersionNumber = 0,
  RtlBsdItemProductType = 1,
  RtlBsdItemAabEnabled = 2,
  RtlBsdItemAabTimeout = 3,
  RtlBsdItemBootGood = 4,
  RtlBsdItemBootShutdown = 5,
  RtlBsdSleepInProgress = 6,
  RtlBsdItemMax = 7,
};

class CMapKeyToValue
{
  /* 0x0000 */ unsigned int m_cbValue;
  /* 0x0004 */ unsigned int m_cbKey;
  /* 0x0008 */ unsigned int m_cbKeyInAssoc;
  /* 0x000c */ long Padding_175;
  /* 0x0010 */ struct CMapKeyToValue::CAssoc** m_pHashTable;
  /* 0x0018 */ unsigned int m_nHashTableSize;
  /* 0x001c */ long Padding_176;
  /* 0x0020 */ void* m_lpfnHashKey /* function */;
  /* 0x0028 */ int m_nCount;
  /* 0x002c */ long Padding_177;
  /* 0x0030 */ struct CMapKeyToValue::CAssoc* m_pFreeList;
  /* 0x0038 */ struct CPlex* m_pBlocks;
  /* 0x0040 */ int m_nBlockSize;
}; /* size: 0x0048 */

class CMapUintPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

struct ICall
{
}; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_INFO
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_INFO, *PPO_WAKE_SOURCE_INFO; /* size: 0x0008 */

typedef enum _HEAP_INFORMATION_CLASS
{
  HeapCompatibilityInformation = 0,
  HeapEnableTerminationOnCorruption = 1,
} HEAP_INFORMATION_CLASS, *PHEAP_INFORMATION_CLASS;

struct SPendingCall
{
  /* 0x0000 */ struct SPendingCall* pNext;
  /* 0x0008 */ struct SPendingCall* pPrev;
  /* 0x0010 */ class CChannelObject* pChnlObj;
}; /* size: 0x0018 */

struct tagRPCOLEMESSAGE
{
  /* 0x0000 */ void* reserved1;
  /* 0x0008 */ unsigned long dataRepresentation;
  /* 0x000c */ long Padding_178;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long cbBuffer;
  /* 0x001c */ unsigned long iMethod;
  /* 0x0020 */ void* reserved2[5];
  /* 0x0048 */ unsigned long rpcFlags;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

class CChannelObject
{
  /* 0x0000 */ long Padding_179[12];
  /* 0x0030 */ volatile unsigned long _dwState;
  /* 0x0034 */ unsigned long _cRefs;
  /* 0x0038 */ unsigned long _dwAptID;
  /* 0x003c */ long Padding_180;
  /* 0x0040 */ class CClientCallMgr* _pCallMgr;
  /* 0x0048 */ class CCtxComChnl* _pChnl;
  /* 0x0050 */ HRESULT _hr;
  /* 0x0054 */ long Padding_181;
  /* 0x0058 */ class CAsyncCall* _pCall;
  /* 0x0060 */ struct ISynchronize* _pSync;
  /* 0x0068 */ struct SPendingCall _pendingCall;
  /* 0x0080 */ struct tagRPCOLEMESSAGE _msg;
}; /* size: 0x00d0 */

typedef struct _CREATE_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* hProcess;
  /* 0x0010 */ void* hThread;
  /* 0x0018 */ void* lpBaseOfImage;
  /* 0x0020 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0024 */ unsigned long nDebugInfoSize;
  /* 0x0028 */ void* lpThreadLocalBase;
  /* 0x0030 */ void* lpStartAddress /* function */;
  /* 0x0038 */ void* lpImageName;
  /* 0x0040 */ unsigned short fUnicode;
  /* 0x0042 */ char __PADDING__[6];
} CREATE_PROCESS_DEBUG_INFO, *PCREATE_PROCESS_DEBUG_INFO; /* size: 0x0048 */

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER
{
  /* 0x0000 */ unsigned char Disable;
} FILE_SET_DEFECT_MGMT_BUFFER, *PFILE_SET_DEFECT_MGMT_BUFFER; /* size: 0x0001 */

typedef enum _RTL_RXACT_OPERATION
{
  RtlRXactOperationDelete = 1,
  RtlRXactOperationSetValue = 2,
  RtlRXactOperationDelAttribute = 3,
  RtlRXactOperationSetAttribute = 4,
} RTL_RXACT_OPERATION, *PRTL_RXACT_OPERATION;

typedef struct _RTL_RESOURCE
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION CriticalSection;
  /* 0x0028 */ void* SharedSemaphore;
  /* 0x0030 */ volatile unsigned long NumberOfWaitingShared;
  /* 0x0034 */ long Padding_182;
  /* 0x0038 */ void* ExclusiveSemaphore;
  /* 0x0040 */ volatile unsigned long NumberOfWaitingExclusive;
  /* 0x0044 */ volatile long NumberOfActive;
  /* 0x0048 */ void* ExclusiveOwnerThread;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ long Padding_183;
  /* 0x0058 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
} RTL_RESOURCE, *PRTL_RESOURCE; /* size: 0x0060 */

struct IClassClassicInfo
{
}; /* size: 0x0008 */

enum LATENCY_TIME
{
  LT_DONT_CARE = 0,
  LT_LOWEST_LATENCY = 1,
};

typedef struct _TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
} TIME_ZONE_INFORMATION, *PTIME_ZONE_INFORMATION; /* size: 0x00ac */

enum tagDVASPECT2
{
  DVASPECT_OPAQUE = 16,
  DVASPECT_TRANSPARENT = 32,
};

typedef struct _IMAGE_THUNK_DATA64
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 ForwarderString;
      /* 0x0000 */ unsigned __int64 Function;
      /* 0x0000 */ unsigned __int64 Ordinal;
      /* 0x0000 */ unsigned __int64 AddressOfData;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} IMAGE_THUNK_DATA64, *PIMAGE_THUNK_DATA64; /* size: 0x0008 */

enum VERIFIER_MODE
{
  VERIFIER_MODE_UNUSED = 0,
  VERIFIER_MODE_TRIAGE = 1,
  VERIFIER_MODE_FIELD = 2,
  VERIFIER_MODE_LOGO = 3,
  VERIFIER_MODE_TEST = 4,
};

struct IInternetProtocolInfo
{
}; /* size: 0x0008 */

typedef struct __midl_frag182_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag182_t, *P_midl_frag182_t; /* size: 0x0048 */

enum WHICHTIME
{
  WT_CREATION = 0,
  WT_MODIFICATION = 1,
  WT_ACCESS = 2,
};

enum tagOLECONTF
{
  OLECONTF_EMBEDDINGS = 1,
  OLECONTF_LINKS = 2,
  OLECONTF_OTHERS = 4,
  OLECONTF_ONLYUSER = 8,
  OLECONTF_ONLYIFRUNNING = 16,
};

struct ITypeChangeEvents
{
}; /* size: 0x0008 */

struct tagRemHBITMAP
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef enum _IDL_CS_CONVERT
{
  IDL_CS_NO_CONVERT = 0,
  IDL_CS_IN_PLACE_CONVERT = 1,
  IDL_CS_NEW_BUFFER_CONVERT = 2,
} IDL_CS_CONVERT, *PIDL_CS_CONVERT;

struct value_entA
{
  /* 0x0000 */ char* ve_valuename;
  /* 0x0008 */ unsigned long ve_valuelen;
  /* 0x000c */ long Padding_184;
  /* 0x0010 */ unsigned __int64 ve_valueptr;
  /* 0x0018 */ unsigned long ve_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _NDR64_SIMPLE_MEMBER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserved1;
  /* 0x0002 */ unsigned short Reserved2;
  /* 0x0004 */ unsigned int Reserved3;
} NDR64_SIMPLE_MEMBER_FORMAT, *PNDR64_SIMPLE_MEMBER_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_MEMPAD_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserve1;
  /* 0x0002 */ unsigned short MemPad;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_MEMPAD_FORMAT, *PNDR64_MEMPAD_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_EMBEDDED_COMPLEX_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserve1;
  /* 0x0002 */ unsigned short Reserve2;
  /* 0x0004 */ long Padding_185;
  /* 0x0008 */ const void* Type;
} NDR64_EMBEDDED_COMPLEX_FORMAT, *PNDR64_EMBEDDED_COMPLEX_FORMAT; /* size: 0x0010 */

enum tagEOLE_AUTHENTICATION_CAPABILITIES
{
  EOAC_NONE = 0,
  EOAC_MUTUAL_AUTH = 1,
  EOAC_STATIC_CLOAKING = 32,
  EOAC_DYNAMIC_CLOAKING = 64,
  EOAC_ANY_AUTHORITY = 128,
  EOAC_MAKE_FULLSIC = 256,
  EOAC_DEFAULT = 2048,
  EOAC_SECURE_REFS = 2,
  EOAC_ACCESS_CONTROL = 4,
  EOAC_APPID = 8,
  EOAC_DYNAMIC = 16,
  EOAC_REQUIRE_FULLSIC = 512,
  EOAC_AUTO_IMPERSONATE = 1024,
  EOAC_NO_CUSTOM_MARSHAL = 8192,
  EOAC_DISABLE_AAA = 4096,
};

typedef struct _TP_DIRECT
{
  /* 0x0000 */ void* Callback /* function */;
} TP_DIRECT, *PTP_DIRECT; /* size: 0x0008 */

typedef enum _ENLISTMENT_INFORMATION_CLASS
{
  EnlistmentBasicInformation = 0,
  EnlistmentRecoveryInformation = 1,
  EnlistmentCrmInformation = 2,
} ENLISTMENT_INFORMATION_CLASS, *PENLISTMENT_INFORMATION_CLASS;

struct IComCatalog2
{
}; /* size: 0x0008 */

class CObjrefMonikerFactory
{
}; /* size: 0x0010 */

enum UlIsEntry
{
  UIE_CURRENT = 0,
  UIE_ORIGINAL = 1,
  UIE_NOTFOUND = 2,
};

class CSharedMemoryBlock
{
  /* 0x0000 */ void* _hMem;
  /* 0x0008 */ unsigned char* _pbBase;
  /* 0x0010 */ unsigned long _culCommitSize;
  /* 0x0014 */ unsigned long _culInitCommitSize;
  /* 0x0018 */ int _fCreated;
  /* 0x001c */ int _fReadWrite;
}; /* size: 0x0020 */

typedef struct _NT_TIB
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0008 */ void* StackBase;
  /* 0x0010 */ void* StackLimit;
  /* 0x0018 */ void* SubSystemTib;
  union
  {
    /* 0x0020 */ void* FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ void* ArbitraryUserPointer;
  /* 0x0030 */ struct _NT_TIB* Self;
} NT_TIB, *PNT_TIB; /* size: 0x0038 */

typedef struct _GDI_TEB_BATCH
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ long Padding_186;
  /* 0x0008 */ unsigned __int64 HDC;
  /* 0x0010 */ unsigned long Buffer[310];
} GDI_TEB_BATCH, *PGDI_TEB_BATCH; /* size: 0x04e8 */

typedef struct _TEB
{
  /* 0x0000 */ struct _NT_TIB NtTib;
  /* 0x0038 */ void* EnvironmentPointer;
  /* 0x0040 */ struct _CLIENT_ID ClientId;
  /* 0x0050 */ void* ActiveRpcHandle;
  /* 0x0058 */ void* ThreadLocalStoragePointer;
  /* 0x0060 */ struct _PEB* ProcessEnvironmentBlock;
  /* 0x0068 */ unsigned long LastErrorValue;
  /* 0x006c */ unsigned long CountOfOwnedCriticalSections;
  /* 0x0070 */ void* CsrClientThread;
  /* 0x0078 */ void* Win32ThreadInfo;
  /* 0x0080 */ unsigned long User32Reserved[26];
  /* 0x00e8 */ unsigned long UserReserved[5];
  /* 0x00fc */ long Padding_187;
  /* 0x0100 */ void* WOW32Reserved;
  /* 0x0108 */ unsigned long CurrentLocale;
  /* 0x010c */ unsigned long FpSoftwareStatusRegister;
  /* 0x0110 */ void* SystemReserved1[54];
  /* 0x02c0 */ long ExceptionCode;
  /* 0x02c4 */ long Padding_188;
  /* 0x02c8 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x02d0 */ unsigned char SpareBytes1[24];
  /* 0x02e8 */ unsigned long TxFsContext;
  /* 0x02ec */ long Padding_189;
  /* 0x02f0 */ struct _GDI_TEB_BATCH GdiTebBatch;
  /* 0x07d8 */ struct _CLIENT_ID RealClientId;
  /* 0x07e8 */ void* GdiCachedProcessHandle;
  /* 0x07f0 */ unsigned long GdiClientPID;
  /* 0x07f4 */ unsigned long GdiClientTID;
  /* 0x07f8 */ void* GdiThreadLocalInfo;
  /* 0x0800 */ unsigned __int64 Win32ClientInfo[62];
  /* 0x09f0 */ void* glDispatchTable[233];
  /* 0x1138 */ unsigned __int64 glReserved1[29];
  /* 0x1220 */ void* glReserved2;
  /* 0x1228 */ void* glSectionInfo;
  /* 0x1230 */ void* glSection;
  /* 0x1238 */ void* glTable;
  /* 0x1240 */ void* glCurrentRC;
  /* 0x1248 */ void* glContext;
  /* 0x1250 */ unsigned long LastStatusValue;
  /* 0x1254 */ long Padding_190;
  /* 0x1258 */ struct _UNICODE_STRING StaticUnicodeString;
  /* 0x1268 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x1472 */ char Padding_191[6];
  /* 0x1478 */ void* DeallocationStack;
  /* 0x1480 */ void* TlsSlots[64];
  /* 0x1680 */ struct _LIST_ENTRY TlsLinks;
  /* 0x1690 */ void* Vdm;
  /* 0x1698 */ void* ReservedForNtRpc;
  /* 0x16a0 */ void* DbgSsReserved[2];
  /* 0x16b0 */ unsigned long HardErrorMode;
  /* 0x16b4 */ long Padding_192;
  /* 0x16b8 */ void* Instrumentation[11];
  /* 0x1710 */ struct _GUID ActivityId;
  /* 0x1720 */ void* SubProcessTag;
  /* 0x1728 */ void* EtwLocalData;
  /* 0x1730 */ void* EtwTraceData;
  /* 0x1738 */ void* WinSockData;
  /* 0x1740 */ unsigned long GdiBatchCount;
  /* 0x1744 */ unsigned char SpareBool0;
  /* 0x1745 */ unsigned char SpareBool1;
  /* 0x1746 */ unsigned char SpareBool2;
  /* 0x1747 */ unsigned char IdealProcessor;
  /* 0x1748 */ unsigned long GuaranteedStackBytes;
  /* 0x174c */ long Padding_193;
  /* 0x1750 */ void* ReservedForPerf;
  /* 0x1758 */ void* ReservedForOle;
  /* 0x1760 */ unsigned long WaitingOnLoaderLock;
  /* 0x1764 */ long Padding_194;
  /* 0x1768 */ void* SavedPriorityState;
  /* 0x1770 */ unsigned __int64 SoftPatchPtr1;
  /* 0x1778 */ void* ThreadPoolData;
  /* 0x1780 */ void** TlsExpansionSlots;
  /* 0x1788 */ void* DeallocationBStore;
  /* 0x1790 */ void* BStoreLimit;
  /* 0x1798 */ unsigned long ImpersonationLocale;
  /* 0x179c */ unsigned long IsImpersonating;
  /* 0x17a0 */ void* NlsCache;
  /* 0x17a8 */ void* pShimData;
  /* 0x17b0 */ unsigned long HeapVirtualAffinity;
  /* 0x17b4 */ long Padding_195;
  /* 0x17b8 */ void* CurrentTransactionHandle;
  /* 0x17c0 */ struct _TEB_ACTIVE_FRAME* ActiveFrame;
  /* 0x17c8 */ void* FlsData;
  /* 0x17d0 */ void* PreferredLanguages;
  /* 0x17d8 */ void* UserPrefLanguages;
  /* 0x17e0 */ void* MergedPrefLanguages;
  /* 0x17e8 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x17ec */ volatile unsigned short CrossTebFlags;
    /* 0x17ec */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x17ee */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x17ee */ unsigned short DbgSafeThunkCall : 1; /* bit position: 0 */
      /* 0x17ee */ unsigned short DbgInDebugPrint : 1; /* bit position: 1 */
      /* 0x17ee */ unsigned short DbgHasFiberData : 1; /* bit position: 2 */
      /* 0x17ee */ unsigned short DbgSkipThreadAttach : 1; /* bit position: 3 */
      /* 0x17ee */ unsigned short DbgWerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x17ee */ unsigned short DbgRanProcessInit : 1; /* bit position: 5 */
      /* 0x17ee */ unsigned short DbgClonedThread : 1; /* bit position: 6 */
      /* 0x17ee */ unsigned short DbgSuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x17ee */ unsigned short RtlDisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x17ee */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x17ee */ unsigned short SpareSameTebBits : 6; /* bit position: 10 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x17f0 */ void* TxnScopeEnterCallback;
  /* 0x17f8 */ void* TxnScopeExitCallback;
  /* 0x1800 */ void* TxnScopeContext;
  /* 0x1808 */ unsigned long LockCount;
  /* 0x180c */ unsigned long ProcessRundown;
  /* 0x1810 */ unsigned __int64 LastSwitchTime;
  /* 0x1818 */ unsigned __int64 TotalSwitchOutTime;
  /* 0x1820 */ union _LARGE_INTEGER WaitReasonBitMap;
} TEB, *PTEB; /* size: 0x1828 */

enum tagResourceGateId
{
  CreateProcessMemoryGate = 0,
  CreateObjectMemoryGate = 1,
};

typedef struct _SYSTEM_CALL_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long NumberOfTables;
} SYSTEM_CALL_COUNT_INFORMATION, *PSYSTEM_CALL_COUNT_INFORMATION; /* size: 0x0008 */

enum VARENUM
{
  VT_EMPTY = 0,
  VT_NULL = 1,
  VT_I2 = 2,
  VT_I4 = 3,
  VT_R4 = 4,
  VT_R8 = 5,
  VT_CY = 6,
  VT_DATE = 7,
  VT_BSTR = 8,
  VT_DISPATCH = 9,
  VT_ERROR = 10,
  VT_BOOL = 11,
  VT_VARIANT = 12,
  VT_UNKNOWN = 13,
  VT_DECIMAL = 14,
  VT_I1 = 16,
  VT_UI1 = 17,
  VT_UI2 = 18,
  VT_UI4 = 19,
  VT_I8 = 20,
  VT_UI8 = 21,
  VT_INT = 22,
  VT_UINT = 23,
  VT_VOID = 24,
  VT_HRESULT = 25,
  VT_PTR = 26,
  VT_SAFEARRAY = 27,
  VT_CARRAY = 28,
  VT_USERDEFINED = 29,
  VT_LPSTR = 30,
  VT_LPWSTR = 31,
  VT_RECORD = 36,
  VT_INT_PTR = 37,
  VT_UINT_PTR = 38,
  VT_FILETIME = 64,
  VT_BLOB = 65,
  VT_STREAM = 66,
  VT_STORAGE = 67,
  VT_STREAMED_OBJECT = 68,
  VT_STORED_OBJECT = 69,
  VT_BLOB_OBJECT = 70,
  VT_CF = 71,
  VT_CLSID = 72,
  VT_VERSIONED_STREAM = 73,
  VT_BSTR_BLOB = 4095,
  VT_VECTOR = 4096,
  VT_ARRAY = 8192,
  VT_BYREF = 16384,
  VT_RESERVED = 0xffff8000,
  VT_ILLEGAL = 0xffffffff,
  VT_ILLEGALMASKED = 4095,
  VT_TYPEMASK = 4095,
};

struct IPictureDisp
{
}; /* size: 0x0008 */

struct tagEMRSELECTCLIPPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iMode;
}; /* size: 0x000c */

enum tagACTIVATEFLAGS
{
  ACTIVATE_WINDOWLESS = 1,
};

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  /* 0x0000 */ unsigned char First0x24BytesOfBootSector[36];
} FSCTL_QUERY_FAT_BPB_BUFFER, *PFSCTL_QUERY_FAT_BPB_BUFFER; /* size: 0x0024 */

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long FlagsToEnable;
  /* 0x0004 */ unsigned long FlagsToDisable;
} SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION, *PSYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION; /* size: 0x0008 */

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL
{
  BackTraceDatabaseCreate = 0,
  BackTraceDatabaseDelete = 1,
  BackTraceDatabaseFlush = 2,
  BackTraceDatabaseMaxControl = 3,
} RTL_STACK_TRACE_DATABASE_CONTROL, *PRTL_STACK_TRACE_DATABASE_CONTROL;

typedef enum _KPROFILE_SOURCE
{
  ProfileTime = 0,
  ProfileAlignmentFixup = 1,
  ProfileTotalIssues = 2,
  ProfilePipelineDry = 3,
  ProfileLoadInstructions = 4,
  ProfilePipelineFrozen = 5,
  ProfileBranchInstructions = 6,
  ProfileTotalNonissues = 7,
  ProfileDcacheMisses = 8,
  ProfileIcacheMisses = 9,
  ProfileCacheMisses = 10,
  ProfileBranchMispredictions = 11,
  ProfileStoreInstructions = 12,
  ProfileFpInstructions = 13,
  ProfileIntegerInstructions = 14,
  Profile2Issue = 15,
  Profile3Issue = 16,
  Profile4Issue = 17,
  ProfileSpecialInstructions = 18,
  ProfileTotalCycles = 19,
  ProfileIcacheIssues = 20,
  ProfileDcacheAccesses = 21,
  ProfileMemoryBarrierCycles = 22,
  ProfileLoadLinkedIssues = 23,
  ProfileMaximum = 24,
} KPROFILE_SOURCE, *PKPROFILE_SOURCE;

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long ulFormatVersion;
  /* 0x0008 */ unsigned long ulAssemblyCount;
  /* 0x000c */ unsigned long ulRootManifestPathType;
  /* 0x0010 */ unsigned long ulRootManifestPathChars;
  /* 0x0014 */ unsigned long ulRootConfigurationPathType;
  /* 0x0018 */ unsigned long ulRootConfigurationPathChars;
  /* 0x001c */ unsigned long ulAppDirPathType;
  /* 0x0020 */ unsigned long ulAppDirPathChars;
  /* 0x0024 */ long Padding_196;
  /* 0x0028 */ const wchar_t* lpRootManifestPath;
  /* 0x0030 */ const wchar_t* lpRootConfigurationPath;
  /* 0x0038 */ const wchar_t* lpAppDirPath;
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION; /* size: 0x0040 */

class CDefLink::CAdvSinkImpl
{
}; /* size: 0x0008 */

typedef enum _CM_SERVICE_LOAD_TYPE
{
  BootLoad = 0,
  SystemLoad = 1,
  AutoLoad = 2,
  DemandLoad = 3,
  DisableLoad = 4,
} CM_SERVICE_LOAD_TYPE, *PCM_SERVICE_LOAD_TYPE;

struct tagSTATSTG
{
  /* 0x0000 */ wchar_t* pwcsName;
  /* 0x0008 */ unsigned long type;
  /* 0x000c */ long Padding_197;
  /* 0x0010 */ union _ULARGE_INTEGER cbSize;
  /* 0x0018 */ struct _FILETIME mtime;
  /* 0x0020 */ struct _FILETIME ctime;
  /* 0x0028 */ struct _FILETIME atime;
  /* 0x0030 */ unsigned long grfMode;
  /* 0x0034 */ unsigned long grfLocksSupported;
  /* 0x0038 */ struct _GUID clsid;
  /* 0x0048 */ unsigned long grfStateBits;
  /* 0x004c */ unsigned long reserved;
}; /* size: 0x0050 */

class CEnumSTATPROPSETSTG
{
  /* 0x0000 */ long Padding_198[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ struct IEnumSTATSTG* _penumSTATSTG;
  /* 0x0018 */ struct tagSTATSTG _statarray[1];
  /* 0x0068 */ unsigned long _cstatTotalInArray;
  /* 0x006c */ unsigned long _istatNextToRead;
}; /* size: 0x0070 */

struct IOpaqueDataInfo
{
}; /* size: 0x0008 */

enum tagPENDINGTYPE
{
  PENDINGTYPE_TOPLEVEL = 1,
  PENDINGTYPE_NESTED = 2,
};

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_199;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_LOADED_NOTIFICATION_DATA, *PLDR_DLL_LOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_200;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_UNLOADED_NOTIFICATION_DATA, *PLDR_DLL_UNLOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef union _LDR_DLL_NOTIFICATION_DATA
{
  union
  {
    /* 0x0000 */ struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    /* 0x0000 */ struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
  }; /* size: 0x0028 */
} LDR_DLL_NOTIFICATION_DATA, *PLDR_DLL_NOTIFICATION_DATA; /* size: 0x0028 */

struct IAdviseSink
{
}; /* size: 0x0008 */

struct IInternetProtocol
{
}; /* size: 0x0008 */

enum tagSTGTY
{
  STGTY_STORAGE = 1,
  STGTY_STREAM = 2,
  STGTY_LOCKBYTES = 3,
  STGTY_PROPERTY = 4,
};

enum tagCOMCALLTYPE
{
  CALLTYPE_OUTGOING_CALL = 0,
  CALLTYPE_INCOMING_CALL = 1,
  CALLTYPE_ACTIVATION = 2,
};

struct IInternetSecurityManager
{
}; /* size: 0x0008 */

typedef struct _JIT_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwProcessorArchitecture;
  /* 0x0008 */ unsigned long dwThreadID;
  /* 0x000c */ unsigned long dwReserved0;
  /* 0x0010 */ unsigned __int64 lpExceptionAddress;
  /* 0x0018 */ unsigned __int64 lpExceptionRecord;
  /* 0x0020 */ unsigned __int64 lpContextRecord;
} JIT_DEBUG_INFO, *PJIT_DEBUG_INFO; /* size: 0x0028 */

enum tagOLEMISC
{
  OLEMISC_RECOMPOSEONRESIZE = 1,
  OLEMISC_ONLYICONIC = 2,
  OLEMISC_INSERTNOTREPLACE = 4,
  OLEMISC_STATIC = 8,
  OLEMISC_CANTLINKINSIDE = 16,
  OLEMISC_CANLINKBYOLE1 = 32,
  OLEMISC_ISLINKOBJECT = 64,
  OLEMISC_INSIDEOUT = 128,
  OLEMISC_ACTIVATEWHENVISIBLE = 256,
  OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512,
  OLEMISC_INVISIBLEATRUNTIME = 1024,
  OLEMISC_ALWAYSRUN = 2048,
  OLEMISC_ACTSLIKEBUTTON = 4096,
  OLEMISC_ACTSLIKELABEL = 8192,
  OLEMISC_NOUIACTIVATE = 16384,
  OLEMISC_ALIGNABLE = 0xffff8000,
  OLEMISC_SIMPLEFRAME = 0x10000,
  OLEMISC_SETCLIENTSITEFIRST = 0x20000,
  OLEMISC_IMEMODE = 0x40000,
  OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
  OLEMISC_WANTSTOMENUMERGE = 0x100000,
  OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,
};

typedef enum _URLZONEREG
{
  URLZONEREG_DEFAULT = 0,
  URLZONEREG_HKLM = 1,
  URLZONEREG_HKCU = 2,
} URLZONEREG, *PURLZONEREG;

struct IProcessServerInfo
{
}; /* size: 0x0008 */

struct HMONITOR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

enum <vc_attributes>::pointer_defaultAttribute::type_e
{
  ptr = 0,
  ref = 1,
  unique = 2,
};

enum <vc_attributes>::threadingAttribute::threading_e
{
  apartment = 1,
  single = 2,
  free = 3,
  neutral = 4,
  both = 5,
};

class CSimpStorageOpen
{
  /* 0x0000 */ long Padding_201[162];
  /* 0x0288 */ unsigned long _grfMode;
  /* 0x028c */ unsigned long _grfStateBits;
  /* 0x0290 */ wchar_t _awcsName[260];
}; /* size: 0x0498 */

enum <vc_attributes>::event_receiverAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
};

class TStackBuffer<unsigned short *,64>;

struct IResourceGates
{
}; /* size: 0x0008 */

typedef struct _MUICCENTRY
{
  /* 0x0000 */ unsigned int lCultureNameOffset;
  /* 0x0004 */ unsigned int ulCultureID;
  /* 0x0008 */ unsigned long ulLanguageType;
  /* 0x000c */ long Padding_202;
  /* 0x0010 */ struct _MUICCENTRY* pNeutralCulture;
  /* 0x0018 */ struct _MUICCENTRY* lBaseLanguageIndices[4];
  /* 0x0038 */ int lParentLanguageIndices[4];
} MUICCENTRY, *PMUICCENTRY; /* size: 0x0048 */

typedef struct _PSINJECTDATA
{
  /* 0x0000 */ unsigned long DataBytes;
  /* 0x0004 */ unsigned short InjectionPoint;
  /* 0x0006 */ unsigned short PageNumber;
} PSINJECTDATA, *PPSINJECTDATA; /* size: 0x0008 */

enum <vc_attributes>::aggregatableAttribute::type_e
{
  never = 0,
  allowed = 1,
  always = 2,
};

enum <vc_attributes>::event_sourceAttribute::optimize_e
{
  speed = 0,
  size = 1,
};

typedef struct _DROPFILES
{
  /* 0x0000 */ unsigned long pFiles;
  /* 0x0004 */ struct _POINTL pt;
  /* 0x000c */ unsigned long fNC;
  /* 0x0010 */ unsigned long fWide;
} DROPFILES, *PDROPFILES; /* size: 0x0014 */

typedef struct _WIN32_STREAM_ID
{
  /* 0x0000 */ unsigned long dwStreamId;
  /* 0x0004 */ unsigned long dwStreamAttributes;
  /* 0x0008 */ union _LARGE_INTEGER Size;
  /* 0x0010 */ unsigned long dwStreamNameSize;
  /* 0x0014 */ wchar_t cStreamName[1];
  /* 0x0016 */ char __PADDING__[2];
} WIN32_STREAM_ID, *PWIN32_STREAM_ID; /* size: 0x0018 */

enum <vc_attributes>::event_sourceAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
};

enum <vc_attributes>::moduleAttribute::type_e
{
  dll = 1,
  exe = 2,
  service = 3,
  unspecified = 4,
  EXE = 2,
  SERVICE = 3,
};

class CBasedILockBytesPtrPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct tagRECT
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
}; /* size: 0x0010 */

struct tagTITLEBARINFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
  /* 0x002c */ struct tagRECT rgrect[6];
}; /* size: 0x008c */

struct tagOutgoingCallData
{
  /* 0x0000 */ unsigned long dwServerPID;
  /* 0x0004 */ unsigned long dwServerTID;
}; /* size: 0x0008 */

typedef struct _SYSTEM_FILECACHE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CurrentSize;
  /* 0x0008 */ unsigned __int64 PeakSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_203;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSet;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSet;
  /* 0x0028 */ unsigned __int64 CurrentSizeIncludingTransitionInPages;
  /* 0x0030 */ unsigned __int64 PeakSizeIncludingTransitionInPages;
  /* 0x0038 */ unsigned long TransitionRePurposeCount;
  /* 0x003c */ unsigned long Flags;
} SYSTEM_FILECACHE_INFORMATION, *PSYSTEM_FILECACHE_INFORMATION; /* size: 0x0040 */

enum <vc_attributes>::helper_attributes::usageAttribute::usage_e
{
  eAnyUsage = 0,
  eCoClassUsage = 1,
  eCOMInterfaceUsage = 2,
  eInterfaceUsage = 6,
  eMemberUsage = 8,
  eMethodUsage = 16,
  eInterfaceMethodUsage = 32,
  eInterfaceMemberUsage = 64,
  eCoClassMemberUsage = 128,
  eCoClassMethodUsage = 256,
  eGlobalMethodUsage = 768,
  eGlobalDataUsage = 1024,
  eClassUsage = 2048,
  eInterfaceParameterUsage = 4096,
  eMethodParameterUsage = 12288,
  eIDLModuleUsage = 16384,
  eAnonymousUsage = 0xffff8000,
  eTypedefUsage = 0x10000,
  eUnionUsage = 0x20000,
  eEnumUsage = 0x40000,
  eDefineTagUsage = 0x80000,
  eStructUsage = 0x100000,
  eLocalUsage = 0x200000,
  ePropertyUsage = 0x400000,
  eEventUsage = 0x800000,
  eTemplateUsage = 0x1000000,
  eModuleUsage = 0x1000000,
  eIllegalUsage = 0x2000000,
  eAsynchronousUsage = 0x4000000,
  eAnyIDLUsage = 0x3f7fff,
};

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_204;
  /* 0x0008 */ const char* pszUsageIdentifier;
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ unsigned long dwAcquirePrivateKeyFlags;
  /* 0x0018 */ unsigned long cIssuer;
  /* 0x001c */ long Padding_205;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB* rgIssuer;
  /* 0x0028 */ void* pfnFindCallback /* function */;
  /* 0x0030 */ void* pvFindArg;
} CERT_CHAIN_FIND_BY_ISSUER_PARA, *PCERT_CHAIN_FIND_BY_ISSUER_PARA; /* size: 0x0038 */

typedef struct _TOKEN_ORIGIN
{
  /* 0x0000 */ struct _LUID OriginatingLogonSession;
} TOKEN_ORIGIN, *PTOKEN_ORIGIN; /* size: 0x0008 */

enum <vc_attributes>::helper_attributes::v1_alttypeAttribute::type_e
{
  eBoolean = 0,
  eInteger = 1,
  eFloat = 2,
  eDouble = 3,
};

typedef struct _WIN_CERTIFICATE
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned short wRevision;
  /* 0x0006 */ unsigned short wCertificateType;
  /* 0x0008 */ unsigned char bCertificate[1];
  /* 0x0009 */ char __PADDING__[3];
} WIN_CERTIFICATE, *PWIN_CERTIFICATE; /* size: 0x000c */

enum tagOLEGETMONIKER
{
  OLEGETMONIKER_ONLYIFTHERE = 1,
  OLEGETMONIKER_FORCEASSIGN = 2,
  OLEGETMONIKER_UNASSIGN = 3,
  OLEGETMONIKER_TEMPFORUSER = 4,
};

struct HCONV__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagMSGBOXPARAMSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_206;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const wchar_t* lpszText;
  /* 0x0020 */ const wchar_t* lpszCaption;
  /* 0x0028 */ unsigned long dwStyle;
  /* 0x002c */ long Padding_207;
  /* 0x0030 */ const wchar_t* lpszIcon;
  /* 0x0038 */ unsigned __int64 dwContextHelpId;
  /* 0x0040 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0048 */ unsigned long dwLanguageId;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0003
{
  SPIF_COMPLUS = 1,
  SPIF_SUSPENDED = 2,
  SPIF_RETIRED = 4,
  SPIF_READY = 8,
  SPIF_PAUSED = 16,
} _MIDL___MIDL_itf_activate_0000_0010_0003, *P_MIDL___MIDL_itf_activate_0000_0010_0003;

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0001
{
  ST_SERVER = 1,
  ST_OLDSURROGATE = 2,
  ST_COMPLUSAPP = 3,
  ST_SERVICE = 4,
} _MIDL___MIDL_itf_activate_0000_0010_0001, *P_MIDL___MIDL_itf_activate_0000_0010_0001;

struct tagTYPEATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ unsigned long dwReserved;
  /* 0x0018 */ long memidConstructor;
  /* 0x001c */ long memidDestructor;
  /* 0x0020 */ wchar_t* lpstrSchema;
  /* 0x0028 */ unsigned long cbSizeInstance;
  /* 0x002c */ enum tagTYPEKIND typekind;
  /* 0x0030 */ unsigned short cFuncs;
  /* 0x0032 */ unsigned short cVars;
  /* 0x0034 */ unsigned short cImplTypes;
  /* 0x0036 */ unsigned short cbSizeVft;
  /* 0x0038 */ unsigned short cbAlignment;
  /* 0x003a */ unsigned short wTypeFlags;
  /* 0x003c */ unsigned short wMajorVerNum;
  /* 0x003e */ unsigned short wMinorVerNum;
  /* 0x0040 */ struct tagTYPEDESC tdescAlias;
  /* 0x0050 */ struct tagIDLDESC idldescType;
}; /* size: 0x0060 */

typedef struct _RGNDATAHEADER
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long iType;
  /* 0x0008 */ unsigned long nCount;
  /* 0x000c */ unsigned long nRgnSize;
  /* 0x0010 */ struct tagRECT rcBound;
} RGNDATAHEADER, *PRGNDATAHEADER; /* size: 0x0020 */

typedef struct _RGNDATA
{
  /* 0x0000 */ struct _RGNDATAHEADER rdh;
  /* 0x0020 */ char Buffer[1];
  /* 0x0021 */ char __PADDING__[3];
} RGNDATA, *PRGNDATA; /* size: 0x0024 */

typedef enum _RPC_NOTIFICATIONS
{
  RpcNotificationCallNone = 0,
  RpcNotificationClientDisconnect = 1,
  RpcNotificationCallCancel = 2,
} RPC_NOTIFICATIONS, *PRPC_NOTIFICATIONS;

typedef struct _SECURITY_DESCRIPTOR_RELATIVE
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ unsigned long Owner;
  /* 0x0008 */ unsigned long Group;
  /* 0x000c */ unsigned long Sacl;
  /* 0x0010 */ unsigned long Dacl;
} SECURITY_DESCRIPTOR_RELATIVE, *PSECURITY_DESCRIPTOR_RELATIVE; /* size: 0x0014 */

class SafeCExposedIterator
{
  /* 0x0000 */ struct CExposedIterator* _p;
}; /* size: 0x0008 */

enum tagACTIVATION_FLAGS
{
  ACTVFLAGS_NONE = 0,
  ACTVFLAGS_DISABLE_AAA = 2,
  ACTVFLAGS_ACTIVATE_32_BIT_SERVER = 4,
  ACTVFLAGS_ACTIVATE_64_BIT_SERVER = 8,
  ACTVFLAGS_SERVERSIDE_ACTIVATION = 16,
  ACTVFLAGS_NO_FAILURE_LOG = 32,
  ACTVFLAGS_ENABLE_CLOAKING = 64,
  ACTVFLAGS_REG_CATALOG_ONLY = 256,
  ACTVFLAGS_SXS_CATALOG_ONLY = 512,
};

class CDirVector
{
  /* 0x0000 */ long Padding_208[12];
  /* 0x0030 */ unsigned short _cbSector;
}; /* size: 0x0038 */

typedef enum _MANDATORY_LEVEL
{
  MandatoryLevelUntrusted = 0,
  MandatoryLevelLow = 1,
  MandatoryLevelMedium = 2,
  MandatoryLevelHigh = 3,
  MandatoryLevelSystem = 4,
  MandatoryLevelSecureProcess = 5,
  MandatoryLevelCount = 6,
} MANDATORY_LEVEL, *PMANDATORY_LEVEL;

typedef struct __midl_frag931_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag931_t, *P_midl_frag931_t; /* size: 0x0038 */

enum tagFUNCFLAGS
{
  FUNCFLAG_FRESTRICTED = 1,
  FUNCFLAG_FSOURCE = 2,
  FUNCFLAG_FBINDABLE = 4,
  FUNCFLAG_FREQUESTEDIT = 8,
  FUNCFLAG_FDISPLAYBIND = 16,
  FUNCFLAG_FDEFAULTBIND = 32,
  FUNCFLAG_FHIDDEN = 64,
  FUNCFLAG_FUSESGETLASTERROR = 128,
  FUNCFLAG_FDEFAULTCOLLELEM = 256,
  FUNCFLAG_FUIDEFAULT = 512,
  FUNCFLAG_FNONBROWSABLE = 1024,
  FUNCFLAG_FREPLACEABLE = 2048,
  FUNCFLAG_FIMMEDIATEBIND = 4096,
};

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA
{
  /* 0x0000 */ unsigned long BufferLength;
  /* 0x0004 */ long Padding_209;
  /* 0x0008 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_INSTALL_DATA, *PPLUGPLAY_CONTROL_INSTALL_DATA; /* size: 0x0010 */

typedef struct _CRT_CRITICAL_SECTION
{
  /* 0x0000 */ struct _CRT_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ void* LockSemaphore;
  /* 0x0020 */ unsigned long Reserved;
  /* 0x0024 */ long __PADDING__[1];
} CRT_CRITICAL_SECTION, *PCRT_CRITICAL_SECTION; /* size: 0x0028 */

class ios
{
  union
  {
    /* 0x0000 */ const long basefield;
    /* 0x0000 */ const long adjustfield;
    struct
    {
      /* 0x0000 */ const long floatfield;
      /* 0x0004 */ long Padding_210;
      /* 0x0008 */ class streambuf* bp;
      /* 0x0010 */ int state;
      /* 0x0014 */ int ispecial;
      /* 0x0018 */ int ospecial;
      /* 0x001c */ int isfx_special;
      /* 0x0020 */ int osfx_special;
      /* 0x0024 */ int x_delbuf;
      /* 0x0028 */ class ostream* x_tie;
      /* 0x0030 */ long x_flags;
      /* 0x0034 */ int x_precision;
      /* 0x0038 */ char x_fill;
      /* 0x0039 */ char Padding_211[3];
      /* 0x003c */ int x_width;
    }; /* size: 0x0039 */
    /* 0x0000 */ void* stdioflush /* function */;
    /* 0x0000 */ long x_maxbit;
    /* 0x0000 */ int x_curindex;
    /* 0x0000 */ int sunk_with_stdio;
    /* 0x0000 */ long x_statebuf[8];
    /* 0x0000 */ int fLockcInit;
    /* 0x0000 */ struct _CRT_CRITICAL_SECTION x_lockc;
  }; /* size: 0x0039 */
  /* 0x0039 */ char Padding_212[7];
  /* 0x0040 */ int LockFlg;
  /* 0x0044 */ long Padding_213;
  /* 0x0048 */ struct _CRT_CRITICAL_SECTION x_lock;
}; /* size: 0x0070 */

enum tagEventLogModes
{
  Eventlog_ModeLaunch = 0,
  EventLog_ModeActivate = 1,
  EventLog_ModeAccess = 2,
  EventLog_ModeDontCare = 3,
};

struct tagCLEANLOCALSTORAGE
{
  /* 0x0000 */ struct IUnknown* pInterface;
  /* 0x0008 */ void* pStorage;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int ElementSize;
  /* 0x0008 */ const void* ConfDescriptor;
  /* 0x0010 */ const void* VarDescriptor;
} NDR64_CONF_VAR_ARRAY_HEADER_FORMAT, *PNDR64_CONF_VAR_ARRAY_HEADER_FORMAT; /* size: 0x0018 */

typedef struct __midl_frag1011_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1011_t, *P_midl_frag1011_t; /* size: 0x0018 */

typedef struct _MINIDUMP_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ struct _EXCEPTION_POINTERS* ExceptionPointers;
  /* 0x000c */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION, *PMINIDUMP_EXCEPTION_INFORMATION; /* size: 0x0010 */

enum tagOLECLOSE
{
  OLECLOSE_SAVEIFDIRTY = 0,
  OLECLOSE_NOSAVE = 1,
  OLECLOSE_PROMPTSAVE = 2,
};

typedef struct _MEMORY_FRAME_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 UseDescription : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ListDescription : 3; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Reserved0 : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Pinned : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 DontUse : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 57 */
    /* 0x0000 */ unsigned __int64 Reserved : 4; /* bit position: 60 */
  }; /* bitfield */
} MEMORY_FRAME_INFORMATION, *PMEMORY_FRAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILEOFFSET_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Offset : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} FILEOFFSET_INFORMATION, *PFILEOFFSET_INFORMATION; /* size: 0x0008 */

typedef struct _UNIQUE_PROCESS_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 UniqueProcessKey : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} UNIQUE_PROCESS_INFORMATION, *PUNIQUE_PROCESS_INFORMATION; /* size: 0x0008 */

typedef struct _MMPFN_IDENTITY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MEMORY_FRAME_INFORMATION e1;
      /* 0x0000 */ struct _FILEOFFSET_INFORMATION e2;
      /* 0x0000 */ struct _PAGEDIR_INFORMATION e3;
      /* 0x0000 */ struct _UNIQUE_PROCESS_INFORMATION e4;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ unsigned __int64 PageFrameIndex;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0010 */ unsigned __int64 Image : 1; /* bit position: 0 */
          /* 0x0010 */ unsigned __int64 Mismatch : 1; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0008 */ e1;
      /* 0x0010 */ void* FileObject;
      /* 0x0010 */ void* UniqueFileObjectKey;
      /* 0x0010 */ void* ProtoPteAddress;
      /* 0x0010 */ void* VirtualAddress;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
} MMPFN_IDENTITY, *PMMPFN_IDENTITY; /* size: 0x0018 */

typedef struct _FLAGGED_WORD_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned short asData[1];
  /* 0x000a */ char __PADDING__[2];
} FLAGGED_WORD_BLOB, *PFLAGGED_WORD_BLOB; /* size: 0x000c */

class CBindStatusCallback
{
  /* 0x0000 */ long Padding_214[4];
  /* 0x0010 */ long _cRef;
  /* 0x0014 */ HRESULT _hr;
  /* 0x0018 */ void* _hEvent;
}; /* size: 0x0020 */

enum ios::io_state
{
  goodbit = 0,
  eofbit = 1,
  failbit = 2,
  badbit = 4,
};

class DeserializeHelper::BstrDestroyer
{
}; /* size: 0x0008 */

typedef enum _PROC_THREAD_ATTRIBUTE_NUM
{
  ProcThreadAttributeParentProcess = 0,
  ProcThreadAttributeExtendedFlags = 1,
  ProcThreadAttributeHandleList = 2,
  ProcThreadAttributeMax = 3,
} PROC_THREAD_ATTRIBUTE_NUM, *PPROC_THREAD_ATTRIBUTE_NUM;

struct tagEMRCREATEMONOBRUSH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

enum POWER_PLATFORM_ROLE
{
  PlatformRoleUnspecified = 0,
  PlatformRoleDesktop = 1,
  PlatformRoleMobile = 2,
  PlatformRoleWorkstation = 3,
  PlatformRoleEnterpriseServer = 4,
  PlatformRoleSOHOServer = 5,
  PlatformRoleAppliancePC = 6,
  PlatformRolePerformanceServer = 7,
  PlatformRoleMaximum = 8,
};

class CStatData
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ long Padding_215;
  /* 0x0008 */ struct tagFORMATETC m_foretc;
  /* 0x0028 */ unsigned long m_dwAdvf;
  /* 0x002c */ long Padding_216;
  /* 0x0030 */ struct IAdviseSink* m_pAdvSink;
  /* 0x0038 */ unsigned long m_dwConnID;
}; /* size: 0x0040 */

struct CArray<CStatData>::ArrayNode
{
  /* 0x0000 */ class CStatData item;
  /* 0x0040 */ unsigned long next;
  /* 0x0044 */ unsigned long prev;
}; /* size: 0x0048 */

struct tagHIGHCONTRASTW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszDefaultScheme;
}; /* size: 0x0010 */

enum CPropertyStorage::EInitializePropertyStream
{
  OPEN_PROPSTREAM = 0,
  CREATE_PROPSTREAM = 1,
  DELETE_PROPSTREAM = 2,
};

typedef struct _wireSAFEARR_DISPATCH
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_217;
  /* 0x0008 */ struct IDispatch** apDispatch;
} wireSAFEARR_DISPATCH, *PwireSAFEARR_DISPATCH; /* size: 0x0010 */

typedef struct _SOURCEFILEW
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ wchar_t* FileName;
} SOURCEFILEW, *PSOURCEFILEW; /* size: 0x0010 */

typedef enum _COMPUTER_NAME_FORMAT
{
  ComputerNameNetBIOS = 0,
  ComputerNameDnsHostname = 1,
  ComputerNameDnsDomain = 2,
  ComputerNameDnsFullyQualified = 3,
  ComputerNamePhysicalNetBIOS = 4,
  ComputerNamePhysicalDnsHostname = 5,
  ComputerNamePhysicalDnsDomain = 6,
  ComputerNamePhysicalDnsFullyQualified = 7,
  ComputerNameMax = 8,
} COMPUTER_NAME_FORMAT, *PCOMPUTER_NAME_FORMAT;

class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ long Padding_218[2];
  /* 0x0008 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0010 */ class CLinkable* m_pLinkable;
}; /* size: 0x0018 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x0018 */ int m_fDone;
  /* 0x001c */ long Padding_219;
  /* 0x0020 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0028 */ struct INTERFACE_HELPER_CLSID** m_pvalue;
  /* 0x0030 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x0038 */

enum tagSTGC
{
  STGC_DEFAULT = 0,
  STGC_OVERWRITE = 1,
  STGC_ONLYIFCURRENT = 2,
  STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4,
  STGC_CONSOLIDATE = 8,
};

typedef enum _PROXY_CLASS
{
  ProxyFull = 0,
  ProxyService = 1,
  ProxyTree = 2,
  ProxyDirectory = 3,
} PROXY_CLASS, *PPROXY_CLASS;

typedef struct _SECURITY_TOKEN_PROXY_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _PROXY_CLASS ProxyClass;
  /* 0x0008 */ struct _UNICODE_STRING PathInfo;
  /* 0x0018 */ unsigned long ContainerMask;
  /* 0x001c */ unsigned long ObjectMask;
} SECURITY_TOKEN_PROXY_DATA, *PSECURITY_TOKEN_PROXY_DATA; /* size: 0x0020 */

enum SEMRESULT
{
  SEMSUCCESS = 0,
  SEMTIMEOUT = 1,
  SEMNOBLOCK = 2,
  SEMERROR = 3,
};

typedef enum _TOKEN_ELEVATION_TYPE
{
  TokenElevationTypeDefault = 1,
  TokenElevationTypeFull = 2,
  TokenElevationTypeLimited = 3,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE;

typedef struct _SHFILEOPSTRUCTW
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int wFunc;
  /* 0x000c */ long Padding_220;
  /* 0x0010 */ const wchar_t* pFrom;
  /* 0x0018 */ const wchar_t* pTo;
  /* 0x0020 */ unsigned short fFlags;
  /* 0x0022 */ char Padding_221[2];
  /* 0x0024 */ int fAnyOperationsAborted;
  /* 0x0028 */ void* hNameMappings;
  /* 0x0030 */ const wchar_t* lpszProgressTitle;
} SHFILEOPSTRUCTW, *PSHFILEOPSTRUCTW; /* size: 0x0038 */

typedef struct _ALPC_CONTEXT_ATTR
{
  /* 0x0000 */ void* PortContext;
  /* 0x0008 */ void* MessageContext;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long MessageId;
  /* 0x0018 */ unsigned long CallbackId;
  /* 0x001c */ long __PADDING__[1];
} ALPC_CONTEXT_ATTR, *PALPC_CONTEXT_ATTR; /* size: 0x0020 */

struct Windows::Rtl::IRtlFormattableInterface
{
}; /* size: 0x0008 */

enum tagOLEUPDATE
{
  OLEUPDATE_ALWAYS = 1,
  OLEUPDATE_ONCALL = 3,
};

typedef struct _MINIDUMP_USER_STREAM
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* Buffer;
} MINIDUMP_USER_STREAM, *PMINIDUMP_USER_STREAM; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_11
{
  skipping = 0,
  tied = 1,
} TAG_UNNAMED_11, *PTAG_UNNAMED_11;

typedef struct _wireVARIANT
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long rpcReserved;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ unsigned short wReserved1;
  /* 0x000c */ unsigned short wReserved2;
  /* 0x000e */ unsigned short wReserved3;
  union
  {
    /* 0x0010 */ __int64 llVal;
    /* 0x0010 */ long lVal;
    /* 0x0010 */ unsigned char bVal;
    /* 0x0010 */ short iVal;
    /* 0x0010 */ float fltVal;
    /* 0x0010 */ double dblVal;
    /* 0x0010 */ short boolVal;
    /* 0x0010 */ long scode;
    /* 0x0010 */ union tagCY cyVal;
    /* 0x0010 */ double date;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB* bstrVal;
    /* 0x0010 */ struct IUnknown* punkVal;
    /* 0x0010 */ struct IDispatch* pdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY** parray;
    /* 0x0010 */ struct _wireBRECORD* brecVal;
    /* 0x0010 */ unsigned char* pbVal;
    /* 0x0010 */ short* piVal;
    /* 0x0010 */ long* plVal;
    /* 0x0010 */ __int64* pllVal;
    /* 0x0010 */ float* pfltVal;
    /* 0x0010 */ double* pdblVal;
    /* 0x0010 */ short* pboolVal;
    /* 0x0010 */ long* pscode;
    /* 0x0010 */ union tagCY* pcyVal;
    /* 0x0010 */ double* pdate;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB** pbstrVal;
    /* 0x0010 */ struct IUnknown** ppunkVal;
    /* 0x0010 */ struct IDispatch** ppdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY*** pparray;
    /* 0x0010 */ struct _wireVARIANT** pvarVal;
    /* 0x0010 */ char cVal;
    /* 0x0010 */ unsigned short uiVal;
    /* 0x0010 */ unsigned long ulVal;
    /* 0x0010 */ unsigned __int64 ullVal;
    /* 0x0010 */ int intVal;
    /* 0x0010 */ unsigned int uintVal;
    /* 0x0010 */ struct tagDEC decVal;
    /* 0x0010 */ struct tagDEC* pdecVal;
    /* 0x0010 */ char* pcVal;
    /* 0x0010 */ unsigned short* puiVal;
    /* 0x0010 */ unsigned long* pulVal;
    /* 0x0010 */ unsigned __int64* pullVal;
    /* 0x0010 */ int* pintVal;
    struct
    {
      /* 0x0010 */ unsigned int* puintVal;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} wireVARIANT, *PwireVARIANT; /* size: 0x0020 */

typedef struct _CONSOLE_FONT_INFO
{
  /* 0x0000 */ unsigned long nFont;
  /* 0x0004 */ struct _COORD dwFontSize;
} CONSOLE_FONT_INFO, *PCONSOLE_FONT_INFO; /* size: 0x0008 */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_222;
  /* 0x0008 */ unsigned char* ServerPrincName;
  /* 0x0010 */ unsigned long AuthnLevel;
  /* 0x0014 */ unsigned long AuthnSvc;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_A* AuthIdentity;
  /* 0x0020 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_A, *PRPC_BINDING_HANDLE_SECURITY_V1_A; /* size: 0x0028 */

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0,
  NEC98x86 = 1,
  EndAlternatives = 2,
} ALTERNATIVE_ARCHITECTURE_TYPE, *PALTERNATIVE_ARCHITECTURE_TYPE;

typedef struct _CMSG_RC4_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC4_AUX_INFO, *PCMSG_RC4_AUX_INFO; /* size: 0x0008 */

typedef enum _RPC_NOTIFICATION_TYPES
{
  RpcNotificationTypeNone = 0,
  RpcNotificationTypeEvent = 1,
  RpcNotificationTypeApc = 2,
  RpcNotificationTypeIoc = 3,
  RpcNotificationTypeHwnd = 4,
  RpcNotificationTypeCallback = 5,
} RPC_NOTIFICATION_TYPES, *PRPC_NOTIFICATION_TYPES;

typedef struct _TOKEN_PRIMARY_GROUP
{
  /* 0x0000 */ void* PrimaryGroup;
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP; /* size: 0x0008 */

enum tagRUNDOWN_RESULT
{
  RUNDWN_UNKNOWN = 1,
  RUNDWN_KEEP = 2,
  RUNDWN_RUNDOWN = 4,
};

class CMachineNamesHelper
{
  /* 0x0000 */ unsigned long _lRefs;
  /* 0x0004 */ unsigned long _dwNumStrings;
  /* 0x0008 */ wchar_t** _ppszStrings;
}; /* size: 0x0010 */

enum tagCHANGEKIND
{
  CHANGEKIND_ADDMEMBER = 0,
  CHANGEKIND_DELETEMEMBER = 1,
  CHANGEKIND_SETNAMES = 2,
  CHANGEKIND_SETDOCUMENTATION = 3,
  CHANGEKIND_GENERAL = 4,
  CHANGEKIND_INVALIDATE = 5,
  CHANGEKIND_CHANGEFAILED = 6,
  CHANGEKIND_MAX = 7,
};

class CBasedDirectStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _ACTIVATION_CONTEXT* ActivationContext;
    /* 0x0000 */ void* hActCtx;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ unsigned long Flags;
    /* 0x0008 */ unsigned long dwFlags;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION; /* size: 0x0010 */

typedef enum _DEP_SYSTEM_POLICY_TYPE
{
  DEPPolicyAlwaysOff = 0,
  DEPPolicyAlwaysOn = 1,
  DEPPolicyOptIn = 2,
  DEPPolicyOptOut = 3,
  DEPTotalPolicyCount = 4,
} DEP_SYSTEM_POLICY_TYPE, *PDEP_SYSTEM_POLICY_TYPE;

enum ESignalState
{
  none_ss = 0,
  pending_ss = 1,
  signaled_ss = 2,
  failed_ss = 3,
};

typedef struct _SHORT_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_223;
  /* 0x0008 */ unsigned short* pData;
} SHORT_SIZEDARR, *PSHORT_SIZEDARR; /* size: 0x0010 */

struct CDdeObject::CUnknownImpl
{
  /* 0x0000 */ long Padding_224[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::COleObjectImpl
{
  /* 0x0000 */ long Padding_225[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::CPersistStgImpl
{
  /* 0x0000 */ long Padding_226[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::COleItemContainerImpl
{
  /* 0x0000 */ long Padding_227[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

class CDdeObject
{
  /* 0x0000 */ int m_fDoingSendOnDataChange;
  /* 0x0004 */ unsigned long m_cRefCount;
  /* 0x0008 */ struct CDdeObject::CUnknownImpl m_Unknown;
  /* 0x0018 */ struct CDdeObject::COleObjectImpl m_Ole;
  /* 0x0028 */ struct CDdeObject::CDataObjectImpl m_Data;
  /* 0x0038 */ struct CDdeObject::CPersistStgImpl m_PersistStg;
  /* 0x0048 */ struct CDdeObject::CProxyManagerImpl m_ProxyMgr;
  /* 0x0058 */ struct CDdeObject::COleItemContainerImpl m_OleItemContainer;
  /* 0x0068 */ struct CDdeObject::CRpcStubBufferImpl m_RpcStubBuffer;
  /* 0x0078 */ unsigned long m_refs;
  /* 0x007c */ unsigned long m_ulObjType;
  /* 0x0080 */ struct _GUID m_clsid;
  /* 0x0090 */ unsigned short m_aClass;
  /* 0x0092 */ unsigned short m_aExeName;
  /* 0x0094 */ unsigned short m_aTopic;
  /* 0x0096 */ unsigned short m_aItem;
  /* 0x0098 */ int m_bRunning;
  /* 0x009c */ long Padding_228;
  /* 0x00a0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00a8 */ struct IOleClientSite* m_pOleClientSite;
  /* 0x00b0 */ struct IStorage* m_pstg;
  /* 0x00b8 */ int m_bInitNew;
  /* 0x00bc */ int m_bOldSvr;
  /* 0x00c0 */ void* m_hNative;
  /* 0x00c8 */ void* m_hPict;
  /* 0x00d0 */ void* m_hExtra;
  /* 0x00d8 */ unsigned short m_cfPict;
  /* 0x00da */ unsigned short m_cfExtra;
  /* 0x00dc */ int m_fDidSendOnClose;
  /* 0x00e0 */ int m_fNoStdCloseDoc;
  /* 0x00e4 */ int m_fDidStdCloseDoc;
  /* 0x00e8 */ int m_fDidStdOpenDoc;
  /* 0x00ec */ int m_fDidGetObject;
  /* 0x00f0 */ int m_fDidLaunchApp;
  /* 0x00f4 */ int m_fUpdateOnSave;
  /* 0x00f8 */ int m_fGotCloseData;
  /* 0x00fc */ unsigned long m_cLocks;
  /* 0x0100 */ int m_fVisible;
  /* 0x0104 */ int m_fWasEverVisible;
  /* 0x0108 */ int m_fCalledOnShow;
  /* 0x010c */ unsigned long m_chk;
  /* 0x0110 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x0118 */ int m_iAdvClose;
  /* 0x011c */ int m_iAdvSave;
  /* 0x0120 */ int m_iAdvChange;
  /* 0x0124 */ int m_fDidAdvNative;
  /* 0x0128 */ unsigned short m_wTerminate;
  /* 0x012a */ char Padding_229[6];
  /* 0x0130 */ struct IDataAdviseHolder* m_pDataAdvHolder;
  /* 0x0138 */ struct IOleAdviseHolder* m_pOleAdvHolder;
  /* 0x0140 */ class CDdeConnectionTable m_ConnectionTable;
  /* 0x0150 */ class DDE_CHANNEL* m_pSysChannel;
  /* 0x0158 */ class DDE_CHANNEL* m_pDocChannel;
}; /* size: 0x0160 */

typedef struct _MINIDUMP_MEMORY64_LIST
{
  /* 0x0000 */ unsigned __int64 NumberOfMemoryRanges;
  /* 0x0008 */ unsigned __int64 BaseRva;
  /* 0x0010 */ struct _MINIDUMP_MEMORY_DESCRIPTOR64* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY64_LIST, *PMINIDUMP_MEMORY64_LIST; /* size: 0x0010 */

struct AsyncIAdviseSink2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Begin_OnDataChange /* function */;
  /* 0x0020 */ void* Finish_OnDataChange /* function */;
  /* 0x0028 */ void* Begin_OnViewChange /* function */;
  /* 0x0030 */ void* Finish_OnViewChange /* function */;
  /* 0x0038 */ void* Begin_OnRename /* function */;
  /* 0x0040 */ void* Finish_OnRename /* function */;
  /* 0x0048 */ void* Begin_OnSave /* function */;
  /* 0x0050 */ void* Finish_OnSave /* function */;
  /* 0x0058 */ void* Begin_OnClose /* function */;
  /* 0x0060 */ void* Finish_OnClose /* function */;
  /* 0x0068 */ void* Begin_OnLinkSrcChange /* function */;
  /* 0x0070 */ void* Finish_OnLinkSrcChange /* function */;
}; /* size: 0x0078 */

typedef enum _CM_SERVICE_NODE_TYPE
{
  DriverType = 1,
  FileSystemType = 2,
  Win32ServiceOwnProcess = 16,
  Win32ServiceShareProcess = 32,
  AdapterType = 4,
  RecognizerType = 8,
} CM_SERVICE_NODE_TYPE, *PCM_SERVICE_NODE_TYPE;

struct tagAXESLISTW
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOW axlAxisInfo[16];
}; /* size: 0x0288 */

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS
{
  AlpcMessageSidInformation = 0,
  AlpcMessageTokenModifiedIdInformation = 1,
} ALPC_MESSAGE_INFORMATION_CLASS, *PALPC_MESSAGE_INFORMATION_CLASS;

struct tagPAINTSTRUCT
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0008 */ int fErase;
  /* 0x000c */ struct tagRECT rcPaint;
  /* 0x001c */ int fRestore;
  /* 0x0020 */ int fIncUpdate;
  /* 0x0024 */ unsigned char rgbReserved[32];
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

enum MACPICTFAILUREREASONS
{
  MACPICTUNSUPPORTED = 0,
  MACPICTCONVERSIONDLLNOTFOUND = 1,
};

typedef enum _GET_FILEEX_INFO_LEVELS
{
  GetFileExInfoStandard = 0,
  GetFileExMaxInfoLevel = 1,
} GET_FILEEX_INFO_LEVELS, *PGET_FILEEX_INFO_LEVELS;

class CDirEntry
{
}; /* size: 0x0080 */

typedef enum _TIMER_INFORMATION_CLASS
{
  TimerBasicInformation = 0,
} TIMER_INFORMATION_CLASS, *PTIMER_INFORMATION_CLASS;

enum CPageAllocator::eFlags
{
  fCOUNT_ENTRIES = 1,
};

typedef struct _wfinddata64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_230;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddata64_t, *Pwfinddata64_t; /* size: 0x0230 */

struct tagUSEROBJECTFLAGS
{
  /* 0x0000 */ int fInherit;
  /* 0x0004 */ int fReserved;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

struct tagACCESSTIMEOUT
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iTimeOutMSec;
}; /* size: 0x000c */

typedef enum _REG_ACTION
{
  KeyAdded = 0,
  KeyRemoved = 1,
  KeyModified = 2,
} REG_ACTION, *PREG_ACTION;

typedef struct _CTL_ANY_SUBJECT_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
} CTL_ANY_SUBJECT_INFO, *PCTL_ANY_SUBJECT_INFO; /* size: 0x0028 */

typedef enum _FILE_INFO_BY_HANDLE_CLASS
{
  FileBasicInfo = 0,
  FileStandardInfo = 1,
  FileNameInfo = 2,
  FileRenameInfo = 3,
  FileDispositionInfo = 4,
  FileAllocationInfo = 5,
  FileEndOfFileInfo = 6,
  FileStreamInfo = 7,
  FileCompressionInfo = 8,
  FileAttributeTagInfo = 9,
  FileIdBothDirectoryInfo = 10,
  FileIdBothDirectoryRestartInfo = 11,
  FileIoPriorityHintInfo = 12,
  MaximumFileInfoByHandleClass = 13,
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;

struct CSimpStream
{
  /* 0x0000 */ long Padding_231[4];
  /* 0x0010 */ long _cReferences;
  /* 0x0014 */ long _ulSeekStart;
  /* 0x0018 */ unsigned long _ulSeekPos;
  /* 0x001c */ long Padding_232;
  /* 0x0020 */ struct CSimpStorage* _pstgParent;
  /* 0x0028 */ void* _hFile;
}; /* size: 0x0030 */

enum EHandleState
{
  allow_hs = 1,
  deny_hs = 2,
  static_cloaking_hs = 4,
  dynamic_cloaking_hs = 8,
  any_cloaking_hs = 12,
  process_local_hs = 16,
  machine_local_hs = 32,
  app_security_hs = 64,
};

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005
{
  union
  {
    /* 0x0000 */ struct _GUID clsid;
    /* 0x0000 */ wchar_t* pFileExt;
    /* 0x0000 */ wchar_t* pMimeType;
    /* 0x0000 */ wchar_t* pProgId;
    /* 0x0000 */ wchar_t* pFileName;
    struct
    {
      /* 0x0000 */ wchar_t* pPackageName;
      /* 0x0008 */ struct _GUID PolicyId;
    } /* size: 0x0018 */ ByName;
    struct
    {
      /* 0x0000 */ struct _GUID ObjectId;
      /* 0x0010 */ struct _GUID PolicyId;
    } /* size: 0x0020 */ ByObjectId;
  }; /* size: 0x0020 */
} _MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005; /* size: 0x0020 */

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001
{
  /* 0x0000 */ unsigned long tyspec;
  /* 0x0004 */ long Padding_233;
  /* 0x0008 */ union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
} _MIDL___MIDL_itf_wtypes_0000_0001_0001, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001; /* size: 0x0028 */

struct IBindProtocol
{
}; /* size: 0x0008 */

typedef struct _EVENT_DATA_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved;
} EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR; /* size: 0x0010 */

typedef enum _PLUGPLAY_EVENT_CATEGORY
{
  HardwareProfileChangeEvent = 0,
  TargetDeviceChangeEvent = 1,
  DeviceClassChangeEvent = 2,
  CustomDeviceEvent = 3,
  DeviceInstallEvent = 4,
  DeviceArrivalEvent = 5,
  PowerEvent = 6,
  VetoEvent = 7,
  BlockedDriverEvent = 8,
  InvalidIDEvent = 9,
  PowerSettingChange = 10,
  MaxPlugEventCategory = 11,
} PLUGPLAY_EVENT_CATEGORY, *PPLUGPLAY_EVENT_CATEGORY;

class CSimpEnumSTATSTG
{
  /* 0x0000 */ long Padding_234[2];
  /* 0x0008 */ unsigned long _cReferences;
  /* 0x000c */ long Padding_235;
  /* 0x0010 */ class CDfNameList* _pdfl;
  /* 0x0018 */ class CDfNameList* _pdflCurrent;
}; /* size: 0x0020 */

struct tagEMREXTESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbEscData;
  /* 0x0010 */ unsigned char EscData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

typedef enum _IO_PRIORITY_HINT
{
  IoPriorityVeryLow = 0,
  IoPriorityLow = 1,
  IoPriorityNormal = 2,
  IoPriorityHigh = 3,
  IoPriorityCritical = 4,
  MaxIoPriorityTypes = 5,
} IO_PRIORITY_HINT, *PIO_PRIORITY_HINT;

enum tagSMFLAGS
{
  SMFLAGS_CLIENT_SIDE = 1,
  SMFLAGS_PENDINGDISCONNECT = 2,
  SMFLAGS_REGISTEREDOID = 4,
  SMFLAGS_DISCONNECTED = 8,
  SMFLAGS_FIRSTMARSHAL = 16,
  SMFLAGS_HANDLER = 32,
  SMFLAGS_WEAKCLIENT = 64,
  SMFLAGS_IGNORERUNDOWN = 128,
  SMFLAGS_CLIENTMARSHALED = 256,
  SMFLAGS_NOPING = 512,
  SMFLAGS_TRIEDTOCONNECT = 1024,
  SMFLAGS_CSTATICMARSHAL = 2048,
  SMFLAGS_USEAGGSTDMARSHAL = 4096,
  SMFLAGS_SYSTEM = 8192,
  SMFLAGS_DEACTIVATED = 16384,
  SMFLAGS_FTM = 0xffff8000,
  SMFLAGS_CLIENTPOLICYSET = 0x10000,
  SMFLAGS_APPDISCONNECT = 0x20000,
  SMFLAGS_SYSDISCONNECT = 0x40000,
  SMFLAGS_RUNDOWNDISCONNECT = 0x80000,
  SMFLAGS_CLEANEDUP = 0x100000,
  SMFLAGS_LIGHTNA = 0x200000,
  SMFLAGS_ALL = 0x7fffff,
};

typedef struct _CRYPT_AES_128_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char IV[16];
  /* 0x0020 */ unsigned char EncryptionState[16][11];
  /* 0x00d0 */ unsigned char DecryptionState[16][11];
  /* 0x0180 */ unsigned char Feedback[16];
} CRYPT_AES_128_KEY_STATE, *PCRYPT_AES_128_KEY_STATE; /* size: 0x0190 */

struct IChannelHook
{
}; /* size: 0x0008 */

class iostream
{
}; /* size: 0x0090 */

typedef enum _PNP_QUERY_RELATION
{
  PnpQueryEjectRelations = 0,
  PnpQueryRemovalRelations = 1,
  PnpQueryPowerRelations = 2,
  PnpQueryBusRelations = 3,
  MaxPnpQueryRelations = 4,
} PNP_QUERY_RELATION, *PPNP_QUERY_RELATION;

enum tagCoModuleType
{
  CO_MODULE_UNKNOWN = 0,
  CO_MODULE_32BIT = 1,
  CO_MODULE_64BIT = 2,
};

struct tagLAYERPLANEDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerPlane;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long crTransparent;
}; /* size: 0x0020 */

enum tagCMLFLAGS
{
  CMLF_QUITRECEIVED = 1,
  CMLF_CLEAREDQUEUE = 2,
  CMLF_CHECKEDTOKEN = 4,
};

typedef struct __midl_frag1377_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1377_t, *P_midl_frag1377_t; /* size: 0x0028 */

typedef struct _FILE_MAILSLOT_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long ReadDataAvailable;
  /* 0x0004 */ unsigned long NumberOfMessages;
  /* 0x0008 */ unsigned long MessageLength;
} FILE_MAILSLOT_PEEK_BUFFER, *PFILE_MAILSLOT_PEEK_BUFFER; /* size: 0x000c */

struct tagEMREXCLUDECLIPRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclClip;
}; /* size: 0x0018 */

typedef struct _SERVICE_FAILURE_ACTIONSW
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ long Padding_236;
  /* 0x0008 */ wchar_t* lpRebootMsg;
  /* 0x0010 */ wchar_t* lpCommand;
  /* 0x0018 */ unsigned long cActions;
  /* 0x001c */ long Padding_237;
  /* 0x0020 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSW, *PSERVICE_FAILURE_ACTIONSW; /* size: 0x0028 */

class CMemBytes
{
  /* 0x0000 */ long Padding_238[2];
  /* 0x0008 */ unsigned long m_dwSig;
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ void* m_hMem;
  /* 0x0018 */ struct MEMSTM* m_pData;
}; /* size: 0x0020 */

typedef enum _SID_NAME_USE
{
  SidTypeUser = 1,
  SidTypeGroup = 2,
  SidTypeDomain = 3,
  SidTypeAlias = 4,
  SidTypeWellKnownGroup = 5,
  SidTypeDeletedAccount = 6,
  SidTypeInvalid = 7,
  SidTypeUnknown = 8,
  SidTypeComputer = 9,
  SidTypeLabel = 10,
} SID_NAME_USE, *PSID_NAME_USE;

typedef enum _DMA_WIDTH
{
  Width8Bits = 0,
  Width16Bits = 1,
  Width32Bits = 2,
  MaximumDmaWidth = 3,
} DMA_WIDTH, *PDMA_WIDTH;

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE
{
  /* 0x0000 */ union _LARGE_INTEGER ActivationTime;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ButtonInstanceID;
} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE; /* size: 0x0010 */

struct DDEDATA
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short fResponse : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short reserved : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

enum EChannelState
{
  client_cs = 1,
  proxy_cs = 2,
  server_cs = 4,
  freethreaded_cs = 8,
  process_local_cs = 32,
  locked_cs = 64,
  neutral_cs = 256,
  fake_async_cs = 512,
  app_security_cs = 1024,
  thread_local_cs = 2048,
  syntax_negotiate_cs = 4096,
};

typedef struct _TIME_FIELDS
{
  /* 0x0000 */ short Year;
  /* 0x0002 */ short Month;
  /* 0x0004 */ short Day;
  /* 0x0006 */ short Hour;
  /* 0x0008 */ short Minute;
  /* 0x000a */ short Second;
  /* 0x000c */ short Milliseconds;
  /* 0x000e */ short Weekday;
} TIME_FIELDS, *PTIME_FIELDS; /* size: 0x0010 */

class COleCache::CCacheViewImpl
{
}; /* size: 0x0008 */

struct IMarshalEnvoy
{
}; /* size: 0x0008 */

class CContextSwitcher
{
  /* 0x0000 */ long Padding_239[2];
  /* 0x0008 */ class CObjectContext* _context;
  /* 0x0010 */ long _cRefs;
}; /* size: 0x0018 */

typedef struct _MINIDUMP_UNLOADED_MODULE_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
} MINIDUMP_UNLOADED_MODULE_LIST, *PMINIDUMP_UNLOADED_MODULE_LIST; /* size: 0x000c */

enum tagShutdownType
{
  IdleShutdown = 0,
  ForcedShutdown = 1,
};

class BUCL::CMultiplier<unsigned __int64,BUCL::Rtl::CCallDisposition>
{
}; /* size: 0x0001 */

typedef enum __MIDL_IActivatorCustomMarshal_0001
{
  SPD_FLAG_USE_CONSOLE_SESSION = 1,
  SPD_FLAG_USE_DEFAULT_AUTHN_LVL = 2,
  SPD_FLAG_USE_SERVER_PID = 4,
  SPD_FLAG_USE_LUA_LEVEL_ADMIN = 8,
  SPD_FLAG_COAUTH_USER_IS_NULL = 16,
  SPD_FLAG_COAUTH_DOMAIN_IS_NULL = 32,
  SPD_FLAG_COAUTH_PWD_IS_NULL = 64,
  SPD_FLAG_USE_LUA_LEVEL_HIGHEST = 128,
} _MIDL_IActivatorCustomMarshal_0001, *P_MIDL_IActivatorCustomMarshal_0001;

typedef enum _FP__IEEE_FORMAT
{
  FpFormatFp32 = 0,
  FpFormatFp64 = 1,
  FpFormatFp80 = 2,
  FpFormatFp128 = 3,
  FpFormatI16 = 4,
  FpFormatI32 = 5,
  FpFormatI64 = 6,
  FpFormatU16 = 7,
  FpFormatU32 = 8,
  FpFormatU64 = 9,
  FpFormatCompare = 10,
  FpFormatString = 11,
} FP__IEEE_FORMAT, *PFP__IEEE_FORMAT;

typedef enum __MIDL_IInternetSecurityManager_0003
{
  SZM_CREATE = 0,
  SZM_DELETE = 1,
} _MIDL_IInternetSecurityManager_0003, *P_MIDL_IInternetSecurityManager_0003;

class CLocalMachineNames
{
  /* 0x0000 */ long Padding_240[2];
  /* 0x0008 */ unsigned long _lRefs;
  /* 0x000c */ unsigned long _dwCursor;
  /* 0x0010 */ class CMachineNamesHelper* _pMNHelper;
  /* 0x0018 */ int _fNeedNewData;
}; /* size: 0x0020 */

typedef struct _SYSTEM_PREFETCH_OPTIONS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long LowerPriority : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualOffsets : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long TrickleIOs : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Spare0 : 5; /* bit position: 3 */
    /* 0x0000 */ unsigned long ScenarioType : 8; /* bit position: 8 */
  }; /* bitfield */
} SYSTEM_PREFETCH_OPTIONS, *PSYSTEM_PREFETCH_OPTIONS; /* size: 0x0004 */

typedef struct _CRL_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long cDistPoint;
  /* 0x0004 */ long Padding_241;
  /* 0x0008 */ struct _CRL_DIST_POINT* rgDistPoint;
} CRL_DIST_POINTS_INFO, *PCRL_DIST_POINTS_INFO; /* size: 0x0010 */

struct tagEMREOF
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long nPalEntries;
  /* 0x000c */ unsigned long offPalEntries;
  /* 0x0010 */ unsigned long nSizeLast;
}; /* size: 0x0014 */

class CArray<CCacheNode>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_242;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CCacheNode>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

enum WPP_CTL_NAMES
{
  WPP_CTL_OLE32 = 0,
  WPP_LAST_CTL = 1,
};

typedef enum _SC_ACTION_TYPE
{
  SC_ACTION_NONE = 0,
  SC_ACTION_RESTART = 1,
  SC_ACTION_REBOOT = 2,
  SC_ACTION_RUN_COMMAND = 3,
} SC_ACTION_TYPE, *PSC_ACTION_TYPE;

struct IShellLinkW
{
}; /* size: 0x0008 */

typedef enum _SC_ENUM_TYPE
{
  SC_ENUM_PROCESS_INFO = 0,
} SC_ENUM_TYPE, *PSC_ENUM_TYPE;

class CCacheNode
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ struct tagFORMATETC m_foretc;
  /* 0x0030 */ unsigned long m_advf;
  /* 0x0034 */ long m_lWidth;
  /* 0x0038 */ long m_lHeight;
  /* 0x003c */ unsigned long m_dwFlags;
  /* 0x0040 */ struct IStorage* m_pStg;
  /* 0x0048 */ int m_iStreamNum;
  /* 0x004c */ unsigned long m_dwPresBitsPos;
  /* 0x0050 */ unsigned long m_dwSavedPresBitsPos;
  /* 0x0054 */ int m_fConvert;
  /* 0x0058 */ struct IOlePresObj* m_pPresObj;
  /* 0x0060 */ struct IOlePresObj* m_pPresObjAfterFreeze;
  /* 0x0068 */ struct IDataObject* m_pDataObject;
  /* 0x0070 */ unsigned long m_dwAdvConnId;
}; /* size: 0x0078 */

struct CArray<CCacheNode>::ArrayNode
{
  /* 0x0000 */ class CCacheNode item;
  /* 0x0078 */ unsigned long next;
  /* 0x007c */ unsigned long prev;
}; /* size: 0x0080 */

typedef struct _ENLISTMENT_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID TransactionId;
  /* 0x0020 */ struct _GUID ResourceManagerId;
} ENLISTMENT_BASIC_INFORMATION, *PENLISTMENT_BASIC_INFORMATION; /* size: 0x0030 */

enum tagIPIDFLAGS
{
  IPIDF_CONNECTING = 1,
  IPIDF_DISCONNECTED = 2,
  IPIDF_SERVERENTRY = 4,
  IPIDF_NOPING = 8,
  IPIDF_COPY = 16,
  IPIDF_VACANT = 128,
  IPIDF_NONNDRSTUB = 256,
  IPIDF_NONNDRPROXY = 512,
  IPIDF_NOTIFYACT = 1024,
  IPIDF_TRIED_ASYNC = 2048,
  IPIDF_ASYNC_SERVER = 4096,
  IPIDF_DEACTIVATED = 8192,
  IPIDF_WEAKREFCACHE = 16384,
  IPIDF_STRONGREFCACHE = 0xffff8000,
  IPIDF_UNSECURECALLSALLOWED = 0x10000,
};

enum tagMKSYS
{
  MKSYS_NONE = 0,
  MKSYS_GENERICCOMPOSITE = 1,
  MKSYS_FILEMONIKER = 2,
  MKSYS_ANTIMONIKER = 3,
  MKSYS_ITEMMONIKER = 4,
  MKSYS_POINTERMONIKER = 5,
  MKSYS_CLASSMONIKER = 7,
  MKSYS_OBJREFMONIKER = 8,
  MKSYS_SESSIONMONIKER = 9,
  MKSYS_LUAMONIKER = 10,
};

typedef struct __midl_frag1674_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1674_t, *P_midl_frag1674_t; /* size: 0x0020 */

enum tagMSHCTX
{
  MSHCTX_LOCAL = 0,
  MSHCTX_NOSHAREDMEM = 1,
  MSHCTX_DIFFERENTMACHINE = 2,
  MSHCTX_INPROC = 3,
  MSHCTX_CROSSCTX = 4,
};

typedef struct _MINIDUMP_MEMORY_INFO
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned int AllocationProtect;
  /* 0x0014 */ unsigned int __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned int State;
  /* 0x0024 */ unsigned int Protect;
  /* 0x0028 */ unsigned int Type;
  /* 0x002c */ unsigned int __alignment2;
} MINIDUMP_MEMORY_INFO, *PMINIDUMP_MEMORY_INFO; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_12
{
  DIRECTION_READ = 1,
  DIRECTION_WRITE = 2,
} TAG_UNNAMED_12, *PTAG_UNNAMED_12;

struct HMENU__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SC_ACTION
{
  /* 0x0000 */ enum _SC_ACTION_TYPE Type;
  /* 0x0004 */ unsigned long Delay;
} SC_ACTION, *PSC_ACTION; /* size: 0x0008 */

class CDefObject::CPrivUnknown
{
}; /* size: 0x0008 */

class CDefObject::CAdvSinkImpl
{
}; /* size: 0x0008 */

class CDefObject
{
  /* 0x0000 */ long Padding_243[20];
  /* 0x0050 */ class CDefObject::CPrivUnknown m_Unknown;
  /* 0x0058 */ class CDefObject::CAdvSinkImpl m_AdviseSink;
  /* 0x0060 */ HRESULT m_ContentSRVMSHResult;
  /* 0x0064 */ unsigned long m_ContentSRVMSBits;
  /* 0x0068 */ HRESULT m_ContentREGMSHResult;
  /* 0x006c */ unsigned long m_ContentREGMSBits;
  /* 0x0070 */ struct IOleObject* m_pOleDelegate;
  /* 0x0078 */ struct IDataObject* m_pDataDelegate;
  /* 0x0080 */ struct IPersistStorage* m_pPSDelegate;
  /* 0x0088 */ unsigned long m_cConnections;
  /* 0x008c */ long Padding_244;
  /* 0x0090 */ struct IUnknown* m_pUnkOuter;
  /* 0x0098 */ struct _GUID m_clsidServer;
  /* 0x00a8 */ struct _GUID m_clsidBits;
  /* 0x00b8 */ unsigned long m_flags;
  /* 0x00bc */ unsigned long m_dwObjFlags;
  /* 0x00c0 */ struct IClassFactory* m_pCFDelegate;
  /* 0x00c8 */ struct IUnknown* m_pUnkDelegate;
  /* 0x00d0 */ struct IProxyManager* m_pProxyMgr;
  /* 0x00d8 */ class COleCache* m_pCOleCache;
  /* 0x00e0 */ class COAHolder* m_pOAHolder;
  /* 0x00e8 */ unsigned long m_dwConnOle;
  /* 0x00ec */ long Padding_245;
  /* 0x00f0 */ struct IOleClientSite* m_pAppClientSite;
  /* 0x00f8 */ struct IStorage* m_pStg;
  /* 0x0100 */ char* m_pHostNames;
  /* 0x0108 */ unsigned long m_ibCntrObj;
  /* 0x010c */ long Padding_246;
  /* 0x0110 */ class CDataAdviseCache* m_pDataAdvCache;
}; /* size: 0x0118 */

typedef enum _PRT
{
  PRT_IGNORE = 0,
  PRT_CREATE_NEW = 1,
  PRT_USE_THIS = 2,
  PRT_USE_THIS_ONLY = 3,
} PRT, *PPRT;

typedef struct _WIN_TRUST_SUBJECT_FILE
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ const wchar_t* lpPath;
} WIN_TRUST_SUBJECT_FILE, *PWIN_TRUST_SUBJECT_FILE; /* size: 0x0010 */

typedef enum _HARDERROR_RESPONSE_OPTION
{
  OptionAbortRetryIgnore = 0,
  OptionOk = 1,
  OptionOkCancel = 2,
  OptionRetryCancel = 3,
  OptionYesNo = 4,
  OptionYesNoCancel = 5,
  OptionShutdownSystem = 6,
  OptionOkNoWait = 7,
  OptionCancelTryContinue = 8,
} HARDERROR_RESPONSE_OPTION, *PHARDERROR_RESPONSE_OPTION;

typedef enum __MIDL_IMonikerProp_0001
{
  MIMETYPEPROP = 0,
  USE_SRC_URL = 1,
  CLASSIDPROP = 2,
  TRUSTEDDOWNLOADPROP = 3,
  POPUPLEVELPROP = 4,
} _MIDL_IMonikerProp_0001, *P_MIDL_IMonikerProp_0001;

typedef struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ProviderFlags;
  /* 0x0008 */ unsigned long DebugFlags;
  /* 0x000c */ unsigned long Spare;
} RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION, *PRTL_VERIFIER_RUNTIME_FLAGS_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION
{
  /* 0x0000 */ unsigned char KernelDebuggerEnabled;
  /* 0x0001 */ unsigned char KernelDebuggerNotPresent;
} SYSTEM_KERNEL_DEBUGGER_INFORMATION, *PSYSTEM_KERNEL_DEBUGGER_INFORMATION; /* size: 0x0002 */

typedef struct _BCRYPT_INTERFACE_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} BCRYPT_INTERFACE_VERSION, *PBCRYPT_INTERFACE_VERSION; /* size: 0x0004 */

typedef struct _BCRYPT_SIGNATURE_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_247;
  /* 0x0008 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0010 */ void* GetProperty /* function */;
  /* 0x0018 */ void* SetProperty /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* GenerateKeyPair /* function */;
  /* 0x0030 */ void* FinalizeKeyPair /* function */;
  /* 0x0038 */ void* SignHash /* function */;
  /* 0x0040 */ void* VerifySignature /* function */;
  /* 0x0048 */ void* ImportKeyPair /* function */;
  /* 0x0050 */ void* ExportKey /* function */;
  /* 0x0058 */ void* DestroyKey /* function */;
} BCRYPT_SIGNATURE_FUNCTION_TABLE, *PBCRYPT_SIGNATURE_FUNCTION_TABLE; /* size: 0x0060 */

typedef struct _CLIENT_ID64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} CLIENT_ID64, *PCLIENT_ID64; /* size: 0x0010 */

typedef struct _SECTION_IMAGE_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_248;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION64, *PSECTION_IMAGE_INFORMATION64; /* size: 0x0040 */

typedef struct _RTL_USER_PROCESS_INFORMATION64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_249;
  /* 0x0008 */ __int64 Process;
  /* 0x0010 */ __int64 Thread;
  /* 0x0018 */ struct _CLIENT_ID64 ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
} RTL_USER_PROCESS_INFORMATION64, *PRTL_USER_PROCESS_INFORMATION64; /* size: 0x0068 */

enum tagOLETLSFLAGS
{
  OLETLS_LOCALTID = 1,
  OLETLS_UUIDINITIALIZED = 2,
  OLETLS_INTHREADDETACH = 4,
  OLETLS_CHANNELTHREADINITIALZED = 8,
  OLETLS_WOWTHREAD = 16,
  OLETLS_THREADUNINITIALIZING = 32,
  OLETLS_DISABLE_OLE1DDE = 64,
  OLETLS_APARTMENTTHREADED = 128,
  OLETLS_MULTITHREADED = 256,
  OLETLS_IMPERSONATING = 512,
  OLETLS_DISABLE_EVENTLOGGER = 1024,
  OLETLS_INNEUTRALAPT = 2048,
  OLETLS_DISPATCHTHREAD = 4096,
  OLETLS_HOSTTHREAD = 8192,
  OLETLS_ALLOWCOINIT = 16384,
  OLETLS_PENDINGUNINIT = 0xffff8000,
  OLETLS_FIRSTMTAINIT = 0x10000,
  OLETLS_FIRSTNTAINIT = 0x20000,
  OLETLS_APTINITIALIZING = 0x40000,
};

typedef enum _TAG_UNNAMED_13
{
  NOT_MARSHALLED = 1,
  SIZED = 2,
  MARSHALLED = 3,
  UNMARSHALLED = 4,
} TAG_UNNAMED_13, *PTAG_UNNAMED_13;

typedef struct _userSTGMEDIUM
{
  /* 0x0000 */ struct IUnknown* pUnkForRelease;
} userSTGMEDIUM, *PuserSTGMEDIUM; /* size: 0x0008 */

typedef struct _userFLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct _userSTGMEDIUM Stgmed;
} userFLAG_STGMEDIUM, *PuserFLAG_STGMEDIUM; /* size: 0x0010 */

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} ALPC_PORT_MESSAGE_ZONE_INFORMATION, *PALPC_PORT_MESSAGE_ZONE_INFORMATION; /* size: 0x0010 */

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ int fCommercial;
} AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x000c */

enum POWER_INFORMATION_LEVEL
{
  SystemPowerPolicyAc = 0,
  SystemPowerPolicyDc = 1,
  VerifySystemPolicyAc = 2,
  VerifySystemPolicyDc = 3,
  SystemPowerCapabilities = 4,
  SystemBatteryState = 5,
  SystemPowerStateHandler = 6,
  ProcessorStateHandler = 7,
  SystemPowerPolicyCurrent = 8,
  AdministratorPowerPolicy = 9,
  SystemReserveHiberFile = 10,
  ProcessorInformation = 11,
  SystemPowerInformation = 12,
  ProcessorStateHandler2 = 13,
  LastWakeTime = 14,
  LastSleepTime = 15,
  SystemExecutionState = 16,
  SystemPowerStateNotifyHandler = 17,
  ProcessorPowerPolicyAc = 18,
  ProcessorPowerPolicyDc = 19,
  VerifyProcessorPowerPolicyAc = 20,
  VerifyProcessorPowerPolicyDc = 21,
  ProcessorPowerPolicyCurrent = 22,
  SystemPowerStateLogging = 23,
  SystemPowerLoggingEntry = 24,
  SetPowerSettingValue = 25,
  NotifyUserPowerSetting = 26,
  GetPowerTransitionVetoes = 27,
  SetPowerTransitionVeto = 28,
  SystemVideoState = 29,
  TraceApplicationPowerMessage = 30,
  TraceApplicationPowerMessageEnd = 31,
  ProcessorPerfStates = 32,
  ProcessorIdleStates = 33,
  ProcessorThrottleStates = 34,
  SystemWakeSource = 35,
  SystemHiberFileInformation = 36,
  TraceServicePowerMessage = 37,
  ProcessorLoad = 38,
  PowerShutdownNotification = 39,
  MonitorCapabilities = 40,
};

struct _TP_TIMER;

class Windows::ErrorHandling::Rtl::CBaseRaiseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame,Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame> >
{
}; /* size: 0x0004 */

typedef enum __MIDL_IInternetZoneManager_0002
{
  ZAFLAGS_CUSTOM_EDIT = 1,
  ZAFLAGS_ADD_SITES = 2,
  ZAFLAGS_REQUIRE_VERIFICATION = 4,
  ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8,
  ZAFLAGS_INCLUDE_INTRANET_SITES = 16,
  ZAFLAGS_NO_UI = 32,
  ZAFLAGS_SUPPORTS_VERIFICATION = 64,
  ZAFLAGS_UNC_AS_INTRANET = 128,
  ZAFLAGS_DETECT_INTRANET = 256,
  ZAFLAGS_USE_LOCKED_ZONES = 0x10000,
  ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 0x20000,
  ZAFLAGS_NO_CACHE = 0x40000,
} _MIDL_IInternetZoneManager_0002, *P_MIDL_IInternetZoneManager_0002;

class CDirSect
{
  /* 0x0000 */ class CDirEntry* _adeEntry /* zero-length array */;
}; /* size: 0x0001 */

typedef struct _DRAGINFOW
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ wchar_t* lpFileList;
  /* 0x0018 */ unsigned long grfKeyState;
  /* 0x001c */ long __PADDING__[1];
} DRAGINFOW, *PDRAGINFOW; /* size: 0x0020 */

typedef enum _WPP_FLAG_LEN_ENUM
{
  WPP_FLAG_LEN = 1,
} WPP_FLAG_LEN_ENUM, *PWPP_FLAG_LEN_ENUM;

typedef enum _PORT_INFORMATION_CLASS
{
  PortBasicInformation = 0,
  PortDumpInformation = 1,
} PORT_INFORMATION_CLASS, *PPORT_INFORMATION_CLASS;

typedef union _POWER_STATE
{
  union
  {
    /* 0x0000 */ enum _SYSTEM_POWER_STATE SystemState;
    /* 0x0000 */ enum _DEVICE_POWER_STATE DeviceState;
  }; /* size: 0x0004 */
} POWER_STATE, *PPOWER_STATE; /* size: 0x0004 */

struct IActivationStageInfo
{
}; /* size: 0x0008 */

class Windows::ErrorHandling::CBaseFrame
{
}; /* size: 0x0001 */

typedef enum _ALPC_PORT_INFORMATION_CLASS
{
  AlpcBasicInformation = 0,
  AlpcPortInformation = 1,
  AlpcAssociateCompletionPortInformation = 2,
  AlpcConnectedSIDInformation = 3,
  AlpcServerInformation = 4,
  AlpcMessageZoneInformation = 5,
  AlpcRegisterCompletionListInformation = 6,
  AlpcUnregisterCompletionListInformation = 7,
  AlpcAdjustCompletionListConcurrencyCountInformation = 8,
} ALPC_PORT_INFORMATION_CLASS, *PALPC_PORT_INFORMATION_CLASS;

typedef struct _KDHELP64
{
  /* 0x0000 */ unsigned __int64 Thread;
  /* 0x0008 */ unsigned long ThCallbackStack;
  /* 0x000c */ unsigned long ThCallbackBStore;
  /* 0x0010 */ unsigned long NextCallback;
  /* 0x0014 */ unsigned long FramePointer;
  /* 0x0018 */ unsigned __int64 KiCallUserMode;
  /* 0x0020 */ unsigned __int64 KeUserCallbackDispatcher;
  /* 0x0028 */ unsigned __int64 SystemRangeStart;
  /* 0x0030 */ unsigned __int64 KiUserExceptionDispatcher;
  /* 0x0038 */ unsigned __int64 StackBase;
  /* 0x0040 */ unsigned __int64 StackLimit;
  /* 0x0048 */ unsigned __int64 Reserved[5];
} KDHELP64, *PKDHELP64; /* size: 0x0070 */

enum PS_CREATE_STATE
{
  PsCreateInitialState = 0,
  PsCreateFailOnFileOpen = 1,
  PsCreateFailOnSectionCreate = 2,
  PsCreateFailExeFormat = 3,
  PsCreateFailMachineMismatch = 4,
  PsCreateFailExeName = 5,
  PsCreateSuccess = 6,
  PsCreateMaximumStates = 7,
};

typedef union _SLIST_HEADER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 Alignment;
      /* 0x0008 */ unsigned __int64 Region;
    }; /* size: 0x0010 */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 9; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 NextEntry : 39; /* bit position: 25 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Init : 1; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 Reserved : 59; /* bit position: 2 */
        /* 0x0008 */ unsigned __int64 Region : 3; /* bit position: 61 */
      }; /* bitfield */
    } /* size: 0x0010 */ Header8;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 48; /* bit position: 16 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Init : 1; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 Reserved : 2; /* bit position: 2 */
        /* 0x0008 */ unsigned __int64 NextEntry : 60; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0010 */ Header16;
  }; /* size: 0x0010 */
} SLIST_HEADER, *PSLIST_HEADER; /* size: 0x0010 */

typedef enum __MIDL_IUri_0002
{
  Uri_HOST_UNKNOWN = 0,
  Uri_HOST_DNS = 1,
  Uri_HOST_IPV4 = 2,
  Uri_HOST_IPV6 = 3,
  Uri_HOST_IDN = 4,
} _MIDL_IUri_0002, *P_MIDL_IUri_0002;

typedef struct _CRYPT_RC4_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char SBox[256];
  /* 0x0110 */ unsigned char i;
  /* 0x0111 */ unsigned char j;
} CRYPT_RC4_KEY_STATE, *PCRYPT_RC4_KEY_STATE; /* size: 0x0112 */

class CClassCache::CpUnkMoniker
{
  /* 0x0000 */ long Padding_250[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_251;
  /* 0x0010 */ struct IUnknown* _pUnk;
}; /* size: 0x0018 */

enum tagThreadingModel
{
  ApartmentThreaded = 0,
  FreeThreaded = 1,
  SingleThreaded = 2,
  BothThreaded = 3,
  NeutralThreaded = 4,
};

class CBasedPagedVectorPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

enum tagProcessType
{
  ProcessTypeNormal = 0,
  ProcessTypeService = 1,
  ProcessTypeComPlus = 2,
  ProcessTypeLegacySurrogate = 3,
  ProcessTypeComPlusService = 4,
};

typedef struct _NDR64_STRING_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char IsSized : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char IsRanged : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Reserved4 : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Reserved5 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved6 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved7 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved8 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_STRING_FLAGS, *PNDR64_STRING_FLAGS; /* size: 0x0001 */

struct NDR64_STRING_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ struct _NDR64_STRING_FLAGS Flags;
  /* 0x0002 */ unsigned short ElementSize;
}; /* size: 0x0004 */

typedef struct _NDR64_CONFORMANT_STRING_FORMAT
{
  /* 0x0000 */ struct NDR64_STRING_HEADER_FORMAT Header;
} NDR64_CONFORMANT_STRING_FORMAT, *PNDR64_CONFORMANT_STRING_FORMAT; /* size: 0x0004 */

enum tagOLELINKBIND
{
  OLELINKBIND_EVENIFCLASSDIFF = 1,
};

class CBasedFatPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _CM_MCA_POS_DATA
{
  /* 0x0000 */ unsigned short AdapterId;
  /* 0x0002 */ unsigned char PosData1;
  /* 0x0003 */ unsigned char PosData2;
  /* 0x0004 */ unsigned char PosData3;
  /* 0x0005 */ unsigned char PosData4;
} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA; /* size: 0x0006 */

typedef enum _WORKERFACTORYINFOCLASS
{
  WorkerFactoryTimeout = 0,
  WorkerFactoryRetryTimeout = 1,
  WorkerFactoryIdleTimeout = 2,
  WorkerFactoryBindingCount = 3,
  WorkerFactoryThreadMinimum = 4,
  WorkerFactoryThreadMaximum = 5,
  WorkerFactoryPaused = 6,
  WorkerFactoryBasicInformation = 7,
  WorkerFactoryAdjustThreadGoal = 8,
  MaxWorkerFactoryInfoClass = 9,
} WORKERFACTORYINFOCLASS, *PWORKERFACTORYINFOCLASS;

class BUCL::Rtl::CCallDisposition
{
  /* 0x0000 */ long m_NtStatus;
}; /* size: 0x0004 */

typedef enum _TRANSACTION_OUTCOME
{
  TransactionOutcomeUndetermined = 1,
  TransactionOutcomeCommitted = 2,
  TransactionOutcomeAborted = 3,
} TRANSACTION_OUTCOME, *PTRANSACTION_OUTCOME;

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE
{
  /* 0x0000 */ void* pfnBufferSize /* function */;
  /* 0x0008 */ void* pfnMarshall /* function */;
  /* 0x0010 */ void* pfnUnmarshall /* function */;
  /* 0x0018 */ void* pfnFree /* function */;
} USER_MARSHAL_ROUTINE_QUADRUPLE, *PUSER_MARSHAL_ROUTINE_QUADRUPLE; /* size: 0x0020 */

struct tagCREATESTRUCTW
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x0010 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndParent;
  /* 0x0020 */ int cy;
  /* 0x0024 */ int cx;
  /* 0x0028 */ int y;
  /* 0x002c */ int x;
  /* 0x0030 */ long style;
  /* 0x0034 */ long Padding_252;
  /* 0x0038 */ const wchar_t* lpszName;
  /* 0x0040 */ const wchar_t* lpszClass;
  /* 0x0048 */ unsigned long dwExStyle;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _BCRYPT_HASH_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_253;
  /* 0x0008 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0010 */ void* GetProperty /* function */;
  /* 0x0018 */ void* SetProperty /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* CreateHash /* function */;
  /* 0x0030 */ void* HashData /* function */;
  /* 0x0038 */ void* FinishHash /* function */;
  /* 0x0040 */ void* DuplicateHash /* function */;
  /* 0x0048 */ void* DestroyHash /* function */;
} BCRYPT_HASH_FUNCTION_TABLE, *PBCRYPT_HASH_FUNCTION_TABLE; /* size: 0x0050 */

typedef struct _IMAGE_RELOCATION
{
  union
  {
    /* 0x0000 */ unsigned long VirtualAddress;
    /* 0x0000 */ unsigned long RelocCount;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SymbolTableIndex;
  /* 0x0008 */ unsigned short Type;
} IMAGE_RELOCATION, *PIMAGE_RELOCATION; /* size: 0x000a */

typedef enum _tagOIBDG_FLAGS
{
  OIBDG_APARTMENTTHREADED = 256,
  OIBDG_DATAONLY = 4096,
} tagOIBDG_FLAGS, *PtagOIBDG_FLAGS;

enum COMPARTMENT_ID
{
  UNSPECIFIED_COMPARTMENT_ID = 0,
  DEFAULT_COMPARTMENT_ID = 1,
};

struct tagPOINTS
{
  /* 0x0000 */ short x;
  /* 0x0002 */ short y;
}; /* size: 0x0004 */

struct ILayoutStorage
{
}; /* size: 0x0008 */

enum tagRpcLocalAddressFormat
{
  rlafInvalid = 0,
  rlafIPv4 = 1,
  rlafIPv6 = 2,
};

enum POWER_ACTION
{
  PowerActionNone = 0,
  PowerActionReserved = 1,
  PowerActionSleep = 2,
  PowerActionHibernate = 3,
  PowerActionShutdown = 4,
  PowerActionShutdownReset = 5,
  PowerActionShutdownOff = 6,
  PowerActionWarmEject = 7,
};

struct SSegment
{
  /* 0x0000 */ unsigned long ulOffset;
  /* 0x0004 */ unsigned long sectStart;
  /* 0x0008 */ unsigned long cSect;
}; /* size: 0x000c */

typedef enum _DPFLTR_TYPE
{
  DPFLTR_SYSTEM_ID = 0,
  DPFLTR_SMSS_ID = 1,
  DPFLTR_SETUP_ID = 2,
  DPFLTR_NTFS_ID = 3,
  DPFLTR_FSTUB_ID = 4,
  DPFLTR_CRASHDUMP_ID = 5,
  DPFLTR_CDAUDIO_ID = 6,
  DPFLTR_CDROM_ID = 7,
  DPFLTR_CLASSPNP_ID = 8,
  DPFLTR_DISK_ID = 9,
  DPFLTR_REDBOOK_ID = 10,
  DPFLTR_STORPROP_ID = 11,
  DPFLTR_SCSIPORT_ID = 12,
  DPFLTR_SCSIMINIPORT_ID = 13,
  DPFLTR_CONFIG_ID = 14,
  DPFLTR_I8042PRT_ID = 15,
  DPFLTR_SERMOUSE_ID = 16,
  DPFLTR_LSERMOUS_ID = 17,
  DPFLTR_KBDHID_ID = 18,
  DPFLTR_MOUHID_ID = 19,
  DPFLTR_KBDCLASS_ID = 20,
  DPFLTR_MOUCLASS_ID = 21,
  DPFLTR_TWOTRACK_ID = 22,
  DPFLTR_WMILIB_ID = 23,
  DPFLTR_ACPI_ID = 24,
  DPFLTR_AMLI_ID = 25,
  DPFLTR_HALIA64_ID = 26,
  DPFLTR_VIDEO_ID = 27,
  DPFLTR_SVCHOST_ID = 28,
  DPFLTR_VIDEOPRT_ID = 29,
  DPFLTR_TCPIP_ID = 30,
  DPFLTR_DMSYNTH_ID = 31,
  DPFLTR_NTOSPNP_ID = 32,
  DPFLTR_FASTFAT_ID = 33,
  DPFLTR_SAMSS_ID = 34,
  DPFLTR_PNPMGR_ID = 35,
  DPFLTR_NETAPI_ID = 36,
  DPFLTR_SCSERVER_ID = 37,
  DPFLTR_SCCLIENT_ID = 38,
  DPFLTR_SERIAL_ID = 39,
  DPFLTR_SERENUM_ID = 40,
  DPFLTR_UHCD_ID = 41,
  DPFLTR_RPCPROXY_ID = 42,
  DPFLTR_AUTOCHK_ID = 43,
  DPFLTR_DCOMSS_ID = 44,
  DPFLTR_UNIMODEM_ID = 45,
  DPFLTR_SIS_ID = 46,
  DPFLTR_FLTMGR_ID = 47,
  DPFLTR_WMICORE_ID = 48,
  DPFLTR_BURNENG_ID = 49,
  DPFLTR_IMAPI_ID = 50,
  DPFLTR_SXS_ID = 51,
  DPFLTR_FUSION_ID = 52,
  DPFLTR_IDLETASK_ID = 53,
  DPFLTR_SOFTPCI_ID = 54,
  DPFLTR_TAPE_ID = 55,
  DPFLTR_MCHGR_ID = 56,
  DPFLTR_IDEP_ID = 57,
  DPFLTR_PCIIDE_ID = 58,
  DPFLTR_FLOPPY_ID = 59,
  DPFLTR_FDC_ID = 60,
  DPFLTR_TERMSRV_ID = 61,
  DPFLTR_W32TIME_ID = 62,
  DPFLTR_PREFETCHER_ID = 63,
  DPFLTR_RSFILTER_ID = 64,
  DPFLTR_FCPORT_ID = 65,
  DPFLTR_PCI_ID = 66,
  DPFLTR_DMIO_ID = 67,
  DPFLTR_DMCONFIG_ID = 68,
  DPFLTR_DMADMIN_ID = 69,
  DPFLTR_WSOCKTRANSPORT_ID = 70,
  DPFLTR_VSS_ID = 71,
  DPFLTR_PNPMEM_ID = 72,
  DPFLTR_PROCESSOR_ID = 73,
  DPFLTR_DMSERVER_ID = 74,
  DPFLTR_SR_ID = 75,
  DPFLTR_INFINIBAND_ID = 76,
  DPFLTR_IHVDRIVER_ID = 77,
  DPFLTR_IHVVIDEO_ID = 78,
  DPFLTR_IHVAUDIO_ID = 79,
  DPFLTR_IHVNETWORK_ID = 80,
  DPFLTR_IHVSTREAMING_ID = 81,
  DPFLTR_IHVBUS_ID = 82,
  DPFLTR_HPS_ID = 83,
  DPFLTR_RTLTHREADPOOL_ID = 84,
  DPFLTR_LDR_ID = 85,
  DPFLTR_TCPIP6_ID = 86,
  DPFLTR_ISAPNP_ID = 87,
  DPFLTR_SHPC_ID = 88,
  DPFLTR_STORPORT_ID = 89,
  DPFLTR_STORMINIPORT_ID = 90,
  DPFLTR_PRINTSPOOLER_ID = 91,
  DPFLTR_VSSDYNDISK_ID = 92,
  DPFLTR_VERIFIER_ID = 93,
  DPFLTR_VDS_ID = 94,
  DPFLTR_VDSBAS_ID = 95,
  DPFLTR_VDSDYN_ID = 96,
  DPFLTR_VDSDYNDR_ID = 97,
  DPFLTR_VDSLDR_ID = 98,
  DPFLTR_VDSUTIL_ID = 99,
  DPFLTR_DFRGIFC_ID = 100,
  DPFLTR_DEFAULT_ID = 101,
  DPFLTR_MM_ID = 102,
  DPFLTR_DFSC_ID = 103,
  DPFLTR_WOW64_ID = 104,
  DPFLTR_ALPC_ID = 105,
  DPFLTR_WDI_ID = 106,
  DPFLTR_PERFLIB_ID = 107,
  DPFLTR_KTM_ID = 108,
  DPFLTR_IOSTRESS_ID = 109,
  DPFLTR_HEAP_ID = 110,
  DPFLTR_WHEA_ID = 111,
  DPFLTR_USERGDI_ID = 112,
  DPFLTR_MMCSS_ID = 113,
  DPFLTR_TPM_ID = 114,
  DPFLTR_THREADORDER_ID = 115,
  DPFLTR_ENVIRON_ID = 116,
  DPFLTR_EMS_ID = 117,
  DPFLTR_WDT_ID = 118,
  DPFLTR_FVEVOL_ID = 119,
  DPFLTR_NDIS_ID = 120,
  DPFLTR_NVCTRACE_ID = 121,
  DPFLTR_LUAFV_ID = 122,
  DPFLTR_APPCOMPAT_ID = 123,
  DPFLTR_USBSTOR_ID = 124,
  DPFLTR_SBP2PORT_ID = 125,
  DPFLTR_COVERAGE_ID = 126,
  DPFLTR_CACHEMGR_ID = 127,
  DPFLTR_MOUNTMGR_ID = 128,
  DPFLTR_CFR_ID = 129,
  DPFLTR_TXF_ID = 130,
  DPFLTR_KSECDD_ID = 131,
  DPFLTR_FLTREGRESS_ID = 132,
  DPFLTR_MPIO_ID = 133,
  DPFLTR_MSDSM_ID = 134,
  DPFLTR_UDFS_ID = 135,
  DPFLTR_PSHED_ID = 136,
  DPFLTR_STORVSP_ID = 137,
  DPFLTR_EXFAT_ID = 138,
  DPFLTR_ENDOFTABLE_ID = 139,
} DPFLTR_TYPE, *PDPFLTR_TYPE;

typedef struct _CRYPT_KEY_PROV_INFO
{
  /* 0x0000 */ wchar_t* pwszContainerName;
  /* 0x0008 */ wchar_t* pwszProvName;
  /* 0x0010 */ unsigned long dwProvType;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ unsigned long cProvParam;
  /* 0x001c */ long Padding_254;
  /* 0x0020 */ struct _CRYPT_KEY_PROV_PARAM* rgProvParam;
  /* 0x0028 */ unsigned long dwKeySpec;
  /* 0x002c */ long __PADDING__[1];
} CRYPT_KEY_PROV_INFO, *PCRYPT_KEY_PROV_INFO; /* size: 0x0030 */

typedef struct _CERT_CHAIN
{
  /* 0x0000 */ unsigned long cCerts;
  /* 0x0004 */ long Padding_255;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* certs;
  /* 0x0010 */ struct _CRYPT_KEY_PROV_INFO keyLocatorInfo;
} CERT_CHAIN, *PCERT_CHAIN; /* size: 0x0040 */

enum tagBIND_FLAGS
{
  BIND_MAYBOTHERUSER = 1,
  BIND_JUSTTESTEXISTENCE = 2,
};

typedef struct _STRING64
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_256;
  /* 0x0008 */ unsigned __int64 Buffer;
} STRING64, *PSTRING64; /* size: 0x0010 */

struct IEnumGUID
{
}; /* size: 0x0008 */

typedef struct _CMSG_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_257;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long cRecipients;
  /* 0x0034 */ long Padding_258;
  /* 0x0038 */ struct _CERT_INFO** rgpRecipients;
} CMSG_ENVELOPED_ENCODE_INFO, *PCMSG_ENVELOPED_ENCODE_INFO; /* size: 0x0040 */

enum SYSGEOCLASS
{
  GEOCLASS_NATION = 16,
  GEOCLASS_REGION = 14,
};

struct tagEMRTEXT
{
  /* 0x0000 */ struct _POINTL ptlReference;
  /* 0x0008 */ unsigned long nChars;
  /* 0x000c */ unsigned long offString;
  /* 0x0010 */ unsigned long fOptions;
  /* 0x0014 */ struct _RECTL rcl;
  /* 0x0024 */ unsigned long offDx;
}; /* size: 0x0028 */

struct tagEMREXTTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ struct tagEMRTEXT emrtext;
}; /* size: 0x004c */

struct IActivationPropertiesOut
{
}; /* size: 0x0008 */

class CBasedMStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef enum _POWER_STATE_TYPE
{
  SystemPowerState = 0,
  DevicePowerState = 1,
} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ void* lpInformation;
  /* 0x0008 */ void* lpSectionBase;
  /* 0x0010 */ unsigned long ulSectionLength;
  /* 0x0014 */ long Padding_259;
  /* 0x0018 */ void* lpSectionGlobalDataBase;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct tagACTCTX_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x0010 */ unsigned long ulLength;
  /* 0x0014 */ long Padding_260;
  /* 0x0018 */ void* lpSectionGlobalData;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long Padding_261;
  /* 0x0028 */ void* lpSectionBase;
  /* 0x0030 */ unsigned long ulSectionTotalLength;
  /* 0x0034 */ long Padding_262;
  /* 0x0038 */ void* hActCtx;
  /* 0x0040 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0044 */ unsigned long ulFlags;
  /* 0x0048 */ struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
}; /* size: 0x0070 */

struct MarshalParams
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long mshlflags;
}; /* size: 0x0014 */

struct tagGIPEntry
{
  /* 0x0000 */ struct tagGIPEntry* pPrev;
  /* 0x0008 */ struct tagGIPEntry* pNext;
  /* 0x0010 */ unsigned long dwType;
  /* 0x0014 */ unsigned long dwSeqNo;
  /* 0x0018 */ volatile long cUsage;
  /* 0x001c */ unsigned long dwAptId;
  /* 0x0020 */ struct HWND__* hWndApt;
  /* 0x0028 */ class CObjectContext* pContext;
  /* 0x0030 */ struct IUnknown* pUnk;
  /* 0x0038 */ void* pVtable;
  /* 0x0040 */ struct IUnknown* pUnkProxy;
  /* 0x0048 */ struct MarshalParams mp;
  /* 0x005c */ long Padding_263;
  union
  {
    union
    {
      /* 0x0060 */ struct tagInterfaceData* pIFD;
      /* 0x0060 */ struct tagOBJREF* pobjref;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
}; /* size: 0x0068 */

class CGIPTable
{
  union
  {
    /* 0x0000 */ unsigned long _dwCurrSeqNo;
    /* 0x0000 */ int _fInRevokeAll;
    /* 0x0000 */ int _fInNAUninit;
    /* 0x0000 */ struct tagGIPEntry _InUseHead;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0080 */
}; /* size: 0x0008 */

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION
{
  SystemFirmwareTable_Enumerate = 0,
  SystemFirmwareTable_Get = 1,
} SYSTEM_FIRMWARE_TABLE_ACTION, *PSYSTEM_FIRMWARE_TABLE_ACTION;

class CBasedMSFPagePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CMSFPage
{
  /* 0x0000 */ class CBasedMSFPagePtr _pmpNext;
  /* 0x0008 */ class CBasedMSFPagePtr _pmpPrev;
  /* 0x0010 */ unsigned long _sid;
  /* 0x0014 */ unsigned long _ulOffset;
  /* 0x0018 */ class CBasedPagedVectorPtr _ppv;
  /* 0x0020 */ unsigned long _sect;
  /* 0x0024 */ unsigned long _dwFlags;
  /* 0x0028 */ long _cReferences;
  /* 0x002c */ long Padding_264;
  /* 0x0030 */ unsigned __int64 ulPadding;
  /* 0x0038 */ unsigned char* _ab /* zero-length array */;
}; /* size: 0x0038 */

struct tagOBJREFDATA
{
  /* 0x0000 */ unsigned long nElms;
  /* 0x0004 */ long Padding_265;
  /* 0x0008 */ struct tagDATAELEMENT** ppElmArray;
}; /* size: 0x0010 */

struct _TP_WAIT;

typedef enum _TP_TRACE_TYPE
{
  TpTraceThreadPriority = 1,
  TpTraceThreadAffinity = 2,
  MaxTpTraceType = 3,
} TP_TRACE_TYPE, *PTP_TRACE_TYPE;

struct OLEAUTOMATION_FUNCTIONS
{
  /* 0x0000 */ struct HINSTANCE__* hOleAut32;
  /* 0x0008 */ int fProcAddressesLoaded;
  /* 0x000c */ long Padding_266;
  /* 0x0010 */ struct _USER_MARSHAL_ROUTINE_QUADRUPLE UserMarshalRoutines[3];
}; /* size: 0x0070 */

typedef enum _SECTION_INFORMATION_CLASS
{
  SectionBasicInformation = 0,
  SectionImageInformation = 1,
  MaxSectionInfoClass = 2,
} SECTION_INFORMATION_CLASS, *PSECTION_INFORMATION_CLASS;

typedef struct _PMD
{
  /* 0x0000 */ int mdisp;
  /* 0x0004 */ int pdisp;
  /* 0x0008 */ int vdisp;
} PMD, *PPMD; /* size: 0x000c */

typedef struct _s__CatchableType
{
  /* 0x0000 */ unsigned int properties;
  /* 0x0004 */ struct _TypeDescriptor* pType;
  /* 0x000c */ struct _PMD thisDisplacement;
  /* 0x0018 */ int sizeOrOffset;
  /* 0x001c */ void* copyFunction /* function */;
} s__CatchableType, *Ps__CatchableType; /* size: 0x0024 */

struct tagSPSChain
{
  /* 0x0000 */ struct tagSPSChain* pNext;
  /* 0x0008 */ struct tagSPSChain* pPrev;
}; /* size: 0x0010 */

struct tagSPSCache
{
  /* 0x0000 */ struct tagSPSChain clientPSChain;
  /* 0x0010 */ struct tagSPSChain serverPSChain;
}; /* size: 0x0020 */

enum RPC_ADDRESS_CHANGE_TYPE
{
  PROTOCOL_NOT_LOADED = 1,
  PROTOCOL_LOADED = 2,
  PROTOCOL_ADDRESS_CHANGE = 3,
};

typedef struct _NDR64_POINTER_REPEAT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char SetCorrMark : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 7; /* bit position: 1 */
  }; /* bitfield */
} NDR64_POINTER_REPEAT_FLAGS, *PNDR64_POINTER_REPEAT_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_REPEAT_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ struct _NDR64_POINTER_REPEAT_FLAGS Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Increment;
  /* 0x0008 */ unsigned int OffsetToArray;
  /* 0x000c */ unsigned int NumberOfPointers;
} NDR64_REPEAT_FORMAT, *PNDR64_REPEAT_FORMAT; /* size: 0x0010 */

typedef struct __midl_frag9_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
      /* 0x0038 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag3;
      /* 0x0040 */ struct _NDR64_POINTER_FORMAT frag4;
    } /* size: 0x0030 */ frag2;
    /* 0x0050 */ unsigned char frag3;
    /* 0x0051 */ char __PADDING__[7];
  } /* size: 0x0048 */ frag2;
  /* 0x0058 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag9_t, *P_midl_frag9_t; /* size: 0x0068 */

typedef enum _CM_ERROR_CONTROL_TYPE
{
  IgnoreError = 0,
  NormalError = 1,
  SevereError = 2,
  CriticalError = 3,
} CM_ERROR_CONTROL_TYPE, *PCM_ERROR_CONTROL_TYPE;

typedef struct _RTL_HEAP_PARAMETERS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_267;
  /* 0x0008 */ unsigned __int64 SegmentReserve;
  /* 0x0010 */ unsigned __int64 SegmentCommit;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0030 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0038 */ unsigned __int64 InitialCommit;
  /* 0x0040 */ unsigned __int64 InitialReserve;
  /* 0x0048 */ void* CommitRoutine /* function */;
  /* 0x0050 */ unsigned __int64 Reserved[2];
} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS; /* size: 0x0060 */

enum tagBINDSTATUS
{
  BINDSTATUS_FINDINGRESOURCE = 1,
  BINDSTATUS_CONNECTING = 2,
  BINDSTATUS_REDIRECTING = 3,
  BINDSTATUS_BEGINDOWNLOADDATA = 4,
  BINDSTATUS_DOWNLOADINGDATA = 5,
  BINDSTATUS_ENDDOWNLOADDATA = 6,
  BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
  BINDSTATUS_INSTALLINGCOMPONENTS = 8,
  BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
  BINDSTATUS_USINGCACHEDCOPY = 10,
  BINDSTATUS_SENDINGREQUEST = 11,
  BINDSTATUS_CLASSIDAVAILABLE = 12,
  BINDSTATUS_MIMETYPEAVAILABLE = 13,
  BINDSTATUS_CACHEFILENAMEAVAILABLE = 14,
  BINDSTATUS_BEGINSYNCOPERATION = 15,
  BINDSTATUS_ENDSYNCOPERATION = 16,
  BINDSTATUS_BEGINUPLOADDATA = 17,
  BINDSTATUS_UPLOADINGDATA = 18,
  BINDSTATUS_ENDUPLOADDATA = 19,
  BINDSTATUS_PROTOCOLCLASSID = 20,
  BINDSTATUS_ENCODING = 21,
  BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22,
  BINDSTATUS_CLASSINSTALLLOCATION = 23,
  BINDSTATUS_DECODING = 24,
  BINDSTATUS_LOADINGMIMEHANDLER = 25,
  BINDSTATUS_CONTENTDISPOSITIONATTACH = 26,
  BINDSTATUS_FILTERREPORTMIMETYPE = 27,
  BINDSTATUS_CLSIDCANINSTANTIATE = 28,
  BINDSTATUS_IUNKNOWNAVAILABLE = 29,
  BINDSTATUS_DIRECTBIND = 30,
  BINDSTATUS_RAWMIMETYPE = 31,
  BINDSTATUS_PROXYDETECTING = 32,
  BINDSTATUS_ACCEPTRANGES = 33,
  BINDSTATUS_COOKIE_SENT = 34,
  BINDSTATUS_COMPACT_POLICY_RECEIVED = 35,
  BINDSTATUS_COOKIE_SUPPRESSED = 36,
  BINDSTATUS_COOKIE_STATE_UNKNOWN = 37,
  BINDSTATUS_COOKIE_STATE_ACCEPT = 38,
  BINDSTATUS_COOKIE_STATE_REJECT = 39,
  BINDSTATUS_COOKIE_STATE_PROMPT = 40,
  BINDSTATUS_COOKIE_STATE_LEASH = 41,
  BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42,
  BINDSTATUS_POLICY_HREF = 43,
  BINDSTATUS_P3P_HEADER = 44,
  BINDSTATUS_SESSION_COOKIE_RECEIVED = 45,
  BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46,
  BINDSTATUS_SESSION_COOKIES_ALLOWED = 47,
  BINDSTATUS_CACHECONTROL = 48,
  BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49,
  BINDSTATUS_MIMETEXTPLAINMISMATCH = 50,
  BINDSTATUS_PUBLISHERAVAILABLE = 51,
  BINDSTATUS_DISPLAYNAMEAVAILABLE = 52,
  BINDSTATUS_SSLUX_NAVBLOCKED = 53,
};

typedef struct __midl_frag1722_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag1722_t, *P_midl_frag1722_t; /* size: 0x0050 */

struct IServerSecurity
{
}; /* size: 0x0008 */

typedef struct _DMA_CONFIGURATION_BYTE0
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Channel : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 3; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE0, *PDMA_CONFIGURATION_BYTE0; /* size: 0x0001 */

struct tagElement
{
  /* 0x0000 */ struct tagElement* pNext;
  /* 0x0008 */ unsigned long iHashValue;
  /* 0x000c */ unsigned short fValueFlags;
  /* 0x000e */ unsigned short cbKey;
  /* 0x0010 */ struct IUnknown* pUnknown;
  /* 0x0018 */ unsigned char* abKey /* zero-length array */;
}; /* size: 0x0018 */

enum tagLOCKTYPE
{
  LOCK_WRITE = 1,
  LOCK_EXCLUSIVE = 2,
  LOCK_ONLYONCE = 4,
};

enum MAPPED_STREAM_OPTS
{
  MAPPED_STREAM_CREATE = 0,
  MAPPED_STREAM_QI = 1,
};

class CPropertySetStorage
{
  /* 0x0000 */ long Padding_268[2];
  /* 0x0008 */ struct IStorage* _pstg;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0018 */ unsigned long _ulSig;
  /* 0x001c */ int _fContainingStgIsRefed : 1; /* bit position: 0 */
  /* 0x0020 */ enum MAPPED_STREAM_OPTS _MSOpts;
  /* 0x0024 */ long _cReferences;
}; /* size: 0x0028 */

enum tagCOMSD
{
  SD_LAUNCHPERMISSIONS = 0,
  SD_ACCESSPERMISSIONS = 1,
  SD_LAUNCHRESTRICTIONS = 2,
  SD_ACCESSRESTRICTIONS = 3,
};

typedef struct _CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ long lChainIndex;
  /* 0x000c */ long lElementIndex;
  /* 0x0010 */ void* pvExtraPolicyStatus;
} CERT_CHAIN_POLICY_STATUS, *PCERT_CHAIN_POLICY_STATUS; /* size: 0x0018 */

struct HAS_INTERFACES
{
  /* 0x0000 */ long m_cInterfaces;
}; /* size: 0x0004 */

enum PIPE_ATTRIBUTE_TYPE
{
  PipeAttribute = 0,
  PipeConnectionAttribute = 1,
  PipeHandleAttribute = 2,
};

typedef struct _CERT_LOGOTYPE_DETAILS
{
  /* 0x0000 */ wchar_t* pwszMimeType;
  /* 0x0008 */ unsigned long cHashedUrl;
  /* 0x000c */ long Padding_269;
  /* 0x0010 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_DETAILS, *PCERT_LOGOTYPE_DETAILS; /* size: 0x0018 */

typedef struct _DISPATCHER_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ControlPc;
  /* 0x0008 */ unsigned __int64 ImageBase;
  /* 0x0010 */ struct _RUNTIME_FUNCTION* FunctionEntry;
  /* 0x0018 */ unsigned __int64 EstablisherFrame;
  /* 0x0020 */ unsigned __int64 TargetIp;
  /* 0x0028 */ struct _CONTEXT* ContextRecord;
  /* 0x0030 */ void* LanguageHandler /* function */;
  /* 0x0038 */ void* HandlerData;
  /* 0x0040 */ struct _UNWIND_HISTORY_TABLE* HistoryTable;
  /* 0x0048 */ unsigned long ScopeIndex;
  /* 0x004c */ unsigned long Fill0;
} DISPATCHER_CONTEXT, *PDISPATCHER_CONTEXT; /* size: 0x0050 */

struct tagCABSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_270;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

struct IMarshal
{
}; /* size: 0x0008 */

struct tagCOLORADJUSTMENT
{
  /* 0x0000 */ unsigned short caSize;
  /* 0x0002 */ unsigned short caFlags;
  /* 0x0004 */ unsigned short caIlluminantIndex;
  /* 0x0006 */ unsigned short caRedGamma;
  /* 0x0008 */ unsigned short caGreenGamma;
  /* 0x000a */ unsigned short caBlueGamma;
  /* 0x000c */ unsigned short caReferenceBlack;
  /* 0x000e */ unsigned short caReferenceWhite;
  /* 0x0010 */ short caContrast;
  /* 0x0012 */ short caBrightness;
  /* 0x0014 */ short caColorfulness;
  /* 0x0016 */ short caRedGreenTint;
}; /* size: 0x0018 */

struct tagEMRSETCOLORADJUSTMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagCOLORADJUSTMENT ColorAdjustment;
}; /* size: 0x0020 */

typedef struct _acpickl_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1];
  /* 0x0003 */ char __PADDING__[1];
} acpickl_MIDL_PROC_FORMAT_STRING, *Pacpickl_MIDL_PROC_FORMAT_STRING; /* size: 0x0004 */

typedef enum _APTTYPE
{
  APTTYPE_CURRENT = -1,
  APTTYPE_STA = 0,
  APTTYPE_MTA = 1,
  APTTYPE_NA = 2,
  APTTYPE_MAINSTA = 3,
} APTTYPE, *PAPTTYPE;

typedef struct _MINIDUMP_MEMORY_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned __int64 NumberOfEntries;
} MINIDUMP_MEMORY_INFO_LIST, *PMINIDUMP_MEMORY_INFO_LIST; /* size: 0x0010 */

typedef enum _NORM_FORM
{
  NormalizationOther = 0,
  NormalizationC = 1,
  NormalizationD = 2,
  NormalizationKC = 5,
  NormalizationKD = 6,
} NORM_FORM, *PNORM_FORM;

typedef enum _tagINTERNETFEATURELIST
{
  FEATURE_OBJECT_CACHING = 0,
  FEATURE_ZONE_ELEVATION = 1,
  FEATURE_MIME_HANDLING = 2,
  FEATURE_MIME_SNIFFING = 3,
  FEATURE_WINDOW_RESTRICTIONS = 4,
  FEATURE_WEBOC_POPUPMANAGEMENT = 5,
  FEATURE_BEHAVIORS = 6,
  FEATURE_DISABLE_MK_PROTOCOL = 7,
  FEATURE_LOCALMACHINE_LOCKDOWN = 8,
  FEATURE_SECURITYBAND = 9,
  FEATURE_RESTRICT_ACTIVEXINSTALL = 10,
  FEATURE_VALIDATE_NAVIGATE_URL = 11,
  FEATURE_RESTRICT_FILEDOWNLOAD = 12,
  FEATURE_ADDON_MANAGEMENT = 13,
  FEATURE_PROTOCOL_LOCKDOWN = 14,
  FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15,
  FEATURE_SAFE_BINDTOOBJECT = 16,
  FEATURE_UNC_SAVEDFILECHECK = 17,
  FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18,
  FEATURE_TABBED_BROWSING = 19,
  FEATURE_SSLUX = 20,
  FEATURE_DISABLE_NAVIGATION_SOUNDS = 21,
  FEATURE_DISABLE_LEGACY_COMPRESSION = 22,
  FEATURE_FORCE_ADDR_AND_STATUS = 23,
  FEATURE_XMLHTTP = 24,
  FEATURE_DISABLE_TELNET_PROTOCOL = 25,
  FEATURE_FEEDS = 26,
  FEATURE_BLOCK_INPUT_PROMPTS = 27,
  FEATURE_ENTRY_COUNT = 28,
} tagINTERNETFEATURELIST, *PtagINTERNETFEATURELIST;

typedef enum _THDTYPE
{
  THDTYPE_BLOCKMESSAGES = 0,
  THDTYPE_PROCESSMESSAGES = 1,
} THDTYPE, *PTHDTYPE;

enum ASSOCCLASS
{
  ASSOCCLASS_SHELL_KEY = 0,
  ASSOCCLASS_PROGID_KEY = 1,
  ASSOCCLASS_PROGID_STR = 2,
  ASSOCCLASS_CLSID_KEY = 3,
  ASSOCCLASS_CLSID_STR = 4,
  ASSOCCLASS_APP_KEY = 5,
  ASSOCCLASS_APP_STR = 6,
  ASSOCCLASS_SYSTEM_STR = 7,
  ASSOCCLASS_FOLDER = 8,
  ASSOCCLASS_STAR = 9,
};

typedef struct _LDR_IMPORT_CALLBACK_INFO
{
  /* 0x0000 */ void* ImportCallbackRoutine /* function */;
  /* 0x0008 */ void* ImportCallbackParameter;
} LDR_IMPORT_CALLBACK_INFO, *PLDR_IMPORT_CALLBACK_INFO; /* size: 0x0010 */

typedef enum _STREAM_INFO_LEVELS
{
  FindStreamInfoStandard = 0,
  FindStreamInfoMaxInfoLevel = 1,
} STREAM_INFO_LEVELS, *PSTREAM_INFO_LEVELS;

class IMessageParam
{
  /* 0x0000 */ long Padding_271[2];
  /* 0x0008 */ class IMessageParam* pNextMessage;
}; /* size: 0x0010 */

typedef struct _FP_IEEE_VALUE
{
  union
  {
    union
    {
      /* 0x0000 */ short I16Value;
      /* 0x0000 */ unsigned short U16Value;
      /* 0x0000 */ long I32Value;
      /* 0x0000 */ unsigned long U32Value;
      /* 0x0000 */ void* StringValue;
      /* 0x0000 */ unsigned long CompareValue;
      /* 0x0000 */ struct _FP_32 Fp32Value;
      /* 0x0000 */ union _LARGE_INTEGER I64Value;
      /* 0x0000 */ union _ULARGE_INTEGER U64Value;
      /* 0x0000 */ struct _FP_64 Fp64Value;
      /* 0x0000 */ struct _FP_80 Fp80Value;
      /* 0x0000 */ struct _FP_128 Fp128Value;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Value;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long RoundingMode : 2; /* bit position: 0 */
      /* 0x0010 */ unsigned long Inexact : 1; /* bit position: 2 */
      /* 0x0010 */ unsigned long Underflow : 1; /* bit position: 3 */
      /* 0x0010 */ unsigned long Overflow : 1; /* bit position: 4 */
      /* 0x0010 */ unsigned long ZeroDivide : 1; /* bit position: 5 */
      /* 0x0010 */ unsigned long InvalidOperation : 1; /* bit position: 6 */
      /* 0x0010 */ unsigned long OperandValid : 1; /* bit position: 7 */
      /* 0x0010 */ unsigned long Format : 4; /* bit position: 8 */
      /* 0x0010 */ unsigned long Precision : 4; /* bit position: 12 */
      /* 0x0010 */ unsigned long Operation : 12; /* bit position: 16 */
      /* 0x0010 */ unsigned long Spare : 3; /* bit position: 28 */
      /* 0x0010 */ unsigned long HardwareException : 1; /* bit position: 31 */
    }; /* bitfield */
  } /* size: 0x0004 */ Control;
  /* 0x0014 */ long __PADDING__[1];
} FP_IEEE_VALUE, *PFP_IEEE_VALUE; /* size: 0x0018 */

struct IComClassInfo
{
}; /* size: 0x0008 */

typedef enum _ATOM_INFORMATION_CLASS
{
  AtomBasicInformation = 0,
  AtomTableInformation = 1,
} ATOM_INFORMATION_CLASS, *PATOM_INFORMATION_CLASS;

enum tagADVF
{
  ADVF_NODATA = 1,
  ADVF_PRIMEFIRST = 2,
  ADVF_ONLYONCE = 4,
  ADVF_DATAONSTOP = 64,
  ADVFCACHE_NOHANDLER = 8,
  ADVFCACHE_FORCEBUILTIN = 16,
  ADVFCACHE_ONSAVE = 32,
};

class CBasedMSFPagePtrPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct IWrappedProtocol
{
}; /* size: 0x0008 */

typedef enum _WAIT_TYPE
{
  WaitAll = 0,
  WaitAny = 1,
} WAIT_TYPE, *PWAIT_TYPE;

typedef enum __MIDL___MIDL_itf_objidl_0000_0047_0001
{
  COMGLB_EXCEPTION_HANDLING = 1,
  COMGLB_APPID = 2,
} _MIDL___MIDL_itf_objidl_0000_0047_0001, *P_MIDL___MIDL_itf_objidl_0000_0047_0001;

typedef struct _MEMORY_WORKING_SET_BLOCK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 Node : 3; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 VirtualPage : 52; /* bit position: 12 */
  }; /* bitfield */
} MEMORY_WORKING_SET_BLOCK, *PMEMORY_WORKING_SET_BLOCK; /* size: 0x0008 */

struct <vc_attributes>::satypeAttribute
{
  /* 0x0000 */ const char* type;
}; /* size: 0x0008 */

struct IComCatalogInternal
{
}; /* size: 0x0008 */

class CAntiMoniker
{
  /* 0x0000 */ long Padding_272[10];
  /* 0x0028 */ unsigned long m_count;
}; /* size: 0x0030 */

enum tagTYMED
{
  TYMED_HGLOBAL = 1,
  TYMED_FILE = 2,
  TYMED_ISTREAM = 4,
  TYMED_ISTORAGE = 8,
  TYMED_GDI = 16,
  TYMED_MFPICT = 32,
  TYMED_ENHMF = 64,
  TYMED_NULL = 0,
};

struct IInstanceInfo
{
}; /* size: 0x0008 */

typedef struct _SERVICE_NOTIFY_2W
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_273;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0040 */ unsigned long dwNotificationTriggered;
  /* 0x0044 */ long Padding_274;
  /* 0x0048 */ wchar_t* pszServiceNames;
} SERVICE_NOTIFY_2W, *PSERVICE_NOTIFY_2W; /* size: 0x0050 */

typedef enum _RPC_HTTP_REDIRECTOR_STAGE
{
  RPCHTTP_RS_REDIRECT = 1,
  RPCHTTP_RS_ACCESS_1 = 2,
  RPCHTTP_RS_SESSION = 3,
  RPCHTTP_RS_ACCESS_2 = 4,
  RPCHTTP_RS_INTERFACE = 5,
} RPC_HTTP_REDIRECTOR_STAGE, *PRPC_HTTP_REDIRECTOR_STAGE;

struct IAggregator
{
}; /* size: 0x0008 */

class Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame
{
}; /* size: 0x0004 */

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumMessageSize;
  /* 0x0004 */ unsigned long MailslotQuota;
  /* 0x0008 */ unsigned long NextMessageSize;
  /* 0x000c */ unsigned long MessagesAvailable;
  /* 0x0010 */ union _LARGE_INTEGER ReadTimeout;
} FILE_MAILSLOT_QUERY_INFORMATION, *PFILE_MAILSLOT_QUERY_INFORMATION; /* size: 0x0018 */

typedef enum _PS_ATTRIBUTE_NUM
{
  PsAttributeParentProcess = 0,
  PsAttributeDebugObject = 1,
  PsAttributeToken = 2,
  PsAttributeClientId = 3,
  PsAttributeTebAddress = 4,
  PsAttributeImageName = 5,
  PsAttributeImageInfo = 6,
  PsAttributeMemoryReserve = 7,
  PsAttributePriorityClass = 8,
  PsAttributeErrorMode = 9,
  PsAttributeStdHandleInfo = 10,
  PsAttributeHandleList = 11,
  PsAttributeMax = 12,
} PS_ATTRIBUTE_NUM, *PPS_ATTRIBUTE_NUM;

struct tagCOMVERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
}; /* size: 0x0004 */

class OXIDEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class OXIDEntry* _pNext;
      /* 0x0008 */ class OXIDEntry* _pPrev;
      /* 0x0010 */ unsigned long _dwPid;
      /* 0x0014 */ unsigned long _dwTid;
      /* 0x0018 */ struct _GUID _moxid;
      /* 0x0028 */ unsigned __int64 _mid;
      /* 0x0030 */ struct _GUID _ipidRundown;
      /* 0x0040 */ unsigned long _dwFlags;
      /* 0x0044 */ long Padding_275;
      /* 0x0048 */ struct HWND__* _hServerSTA;
      /* 0x0050 */ class CComApartment* _pParentApt;
      /* 0x0058 */ class CChannelHandle* volatile _pRpc;
      /* 0x0060 */ void* _pAuthId;
      /* 0x0068 */ struct tagDUALSTRINGARRAY* _pBinding;
      /* 0x0070 */ unsigned long _dwAuthnHint;
      /* 0x0074 */ unsigned long _dwAuthnSvc;
      /* 0x0078 */ class MIDEntry* _pMIDEntry;
      /* 0x0080 */ struct IRemUnknown* _pRUSTA;
      /* 0x0088 */ long _cRefs;
      /* 0x008c */ long Padding_276;
      /* 0x0090 */ void* _hComplete;
      /* 0x0098 */ long _cCalls;
      /* 0x009c */ long _cResolverRef;
      /* 0x00a0 */ unsigned long _dwExpiredTime;
      /* 0x00a4 */ struct tagCOMVERSION _version;
      /* 0x00a8 */ unsigned long _ulMarshaledTargetInfoLength;
      /* 0x00ac */ long Padding_277;
      /* 0x00b0 */ unsigned char* _pMarshaledTargetInfo;
    }; /* size: 0x00ac */
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x00ac */
}; /* size: 0x00b8 */

typedef enum __MIDL___MIDL_itf_objidl_0000_0046_0001
{
  COMBND_RPCTIMEOUT = 1,
  COMBND_SERVER_LOCALITY = 2,
} _MIDL___MIDL_itf_objidl_0000_0046_0001, *P_MIDL___MIDL_itf_objidl_0000_0046_0001;

typedef struct _SYSTEM_POOLTAG
{
  union
  {
    /* 0x0000 */ unsigned char Tag[4];
    /* 0x0000 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long PagedAllocs;
  /* 0x0008 */ unsigned long PagedFrees;
  /* 0x000c */ long Padding_278;
  /* 0x0010 */ unsigned __int64 PagedUsed;
  /* 0x0018 */ unsigned long NonPagedAllocs;
  /* 0x001c */ unsigned long NonPagedFrees;
  /* 0x0020 */ unsigned __int64 NonPagedUsed;
} SYSTEM_POOLTAG, *PSYSTEM_POOLTAG; /* size: 0x0028 */

class CSafeMarshaledStg
{
  /* 0x0000 */ struct IStorage* _pstg;
}; /* size: 0x0008 */

class CClassCache::CBaseClassEntry
{
  /* 0x0000 */ long Padding_279[2];
  /* 0x0008 */ class CClassCache::CBaseClassEntry* _pNext;
  /* 0x0010 */ class CClassCache::CBaseClassEntry* _pPrev;
  /* 0x0018 */ class CClassCache::CClassEntry* _pClassEntry;
  /* 0x0020 */ unsigned long _dwContext;
  /* 0x0024 */ unsigned long _dwSig;
}; /* size: 0x0028 */

enum WELL_KNOWN_SID_TYPE
{
  WinNullSid = 0,
  WinWorldSid = 1,
  WinLocalSid = 2,
  WinCreatorOwnerSid = 3,
  WinCreatorGroupSid = 4,
  WinCreatorOwnerServerSid = 5,
  WinCreatorGroupServerSid = 6,
  WinNtAuthoritySid = 7,
  WinDialupSid = 8,
  WinNetworkSid = 9,
  WinBatchSid = 10,
  WinInteractiveSid = 11,
  WinServiceSid = 12,
  WinAnonymousSid = 13,
  WinProxySid = 14,
  WinEnterpriseControllersSid = 15,
  WinSelfSid = 16,
  WinAuthenticatedUserSid = 17,
  WinRestrictedCodeSid = 18,
  WinTerminalServerSid = 19,
  WinRemoteLogonIdSid = 20,
  WinLogonIdsSid = 21,
  WinLocalSystemSid = 22,
  WinLocalServiceSid = 23,
  WinNetworkServiceSid = 24,
  WinBuiltinDomainSid = 25,
  WinBuiltinAdministratorsSid = 26,
  WinBuiltinUsersSid = 27,
  WinBuiltinGuestsSid = 28,
  WinBuiltinPowerUsersSid = 29,
  WinBuiltinAccountOperatorsSid = 30,
  WinBuiltinSystemOperatorsSid = 31,
  WinBuiltinPrintOperatorsSid = 32,
  WinBuiltinBackupOperatorsSid = 33,
  WinBuiltinReplicatorSid = 34,
  WinBuiltinPreWindows2000CompatibleAccessSid = 35,
  WinBuiltinRemoteDesktopUsersSid = 36,
  WinBuiltinNetworkConfigurationOperatorsSid = 37,
  WinAccountAdministratorSid = 38,
  WinAccountGuestSid = 39,
  WinAccountKrbtgtSid = 40,
  WinAccountDomainAdminsSid = 41,
  WinAccountDomainUsersSid = 42,
  WinAccountDomainGuestsSid = 43,
  WinAccountComputersSid = 44,
  WinAccountControllersSid = 45,
  WinAccountCertAdminsSid = 46,
  WinAccountSchemaAdminsSid = 47,
  WinAccountEnterpriseAdminsSid = 48,
  WinAccountPolicyAdminsSid = 49,
  WinAccountRasAndIasServersSid = 50,
  WinNTLMAuthenticationSid = 51,
  WinDigestAuthenticationSid = 52,
  WinSChannelAuthenticationSid = 53,
  WinThisOrganizationSid = 54,
  WinOtherOrganizationSid = 55,
  WinBuiltinIncomingForestTrustBuildersSid = 56,
  WinBuiltinPerfMonitoringUsersSid = 57,
  WinBuiltinPerfLoggingUsersSid = 58,
  WinBuiltinAuthorizationAccessSid = 59,
  WinBuiltinTerminalServerLicenseServersSid = 60,
  WinBuiltinDCOMUsersSid = 61,
  WinBuiltinIUsersSid = 62,
  WinIUserSid = 63,
  WinBuiltinCryptoOperatorsSid = 64,
  WinUntrustedLabelSid = 65,
  WinLowLabelSid = 66,
  WinMediumLabelSid = 67,
  WinHighLabelSid = 68,
  WinSystemLabelSid = 69,
  WinWriteRestrictedCodeSid = 70,
  WinCreatorOwnerRightsSid = 71,
  WinCacheablePrincipalsGroupSid = 72,
  WinNonCacheablePrincipalsGroupSid = 73,
  WinEnterpriseReadonlyControllersSid = 74,
  WinAccountReadonlyControllersSid = 75,
  WinBuiltinEventLogReadersGroup = 76,
  WinNewEnterpriseReadonlyControllersSid = 77,
  WinBuiltinCertSvcDComAccessGroup = 78,
};

struct tagSTYLEBUFW
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ wchar_t szDescription[32];
}; /* size: 0x0044 */

struct IDropSource
{
}; /* size: 0x0008 */

class CSSL
{
  union
  {
    /* 0x0000 */ unsigned __int64 _hProvider;
    /* 0x0000 */ void* _hMyStore;
    /* 0x0000 */ void* _hRootStore;
    /* 0x0000 */ const struct _CERT_CONTEXT* _pCert;
    /* 0x0000 */ HRESULT _hr;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

typedef struct _CERT_TRUST_LIST_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_280;
  /* 0x0008 */ struct _CTL_ENTRY* pCtlEntry;
  /* 0x0010 */ const struct _CTL_CONTEXT* pCtlContext;
} CERT_TRUST_LIST_INFO, *PCERT_TRUST_LIST_INFO; /* size: 0x0018 */

struct IDropTarget
{
}; /* size: 0x0008 */

typedef struct _EXFAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} EXFAT_STATISTICS, *PEXFAT_STATISTICS; /* size: 0x0024 */

class SafeNtHandle
{
  /* 0x0000 */ void* _handle;
}; /* size: 0x0008 */

struct tagMDINEXTMENU
{
  /* 0x0000 */ struct HMENU__* hmenuIn;
  /* 0x0008 */ struct HMENU__* hmenuNext;
  /* 0x0010 */ struct HWND__* hwndNext;
}; /* size: 0x0018 */

typedef enum __MIDL___MIDL_itf_objidl_0000_0046_0002
{
  SERVER_LOCALITY_PROCESS_LOCAL = 0,
  SERVER_LOCALITY_MACHINE_LOCAL = 1,
  SERVER_LOCALITY_REMOTE = 2,
} _MIDL___MIDL_itf_objidl_0000_0046_0002, *P_MIDL___MIDL_itf_objidl_0000_0046_0002;

struct SYSTEM_BATTERY_STATE
{
  /* 0x0000 */ unsigned char AcOnLine;
  /* 0x0001 */ unsigned char BatteryPresent;
  /* 0x0002 */ unsigned char Charging;
  /* 0x0003 */ unsigned char Discharging;
  /* 0x0004 */ unsigned char Spare1[4];
  /* 0x0008 */ unsigned long MaxCapacity;
  /* 0x000c */ unsigned long RemainingCapacity;
  /* 0x0010 */ unsigned long Rate;
  /* 0x0014 */ unsigned long EstimatedTime;
  /* 0x0018 */ unsigned long DefaultAlert1;
  /* 0x001c */ unsigned long DefaultAlert2;
}; /* size: 0x0020 */

enum ACTCTX_REQUESTED_RUN_LEVEL
{
  ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
  ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
  ACTCTX_RUN_LEVEL_NUMBERS = 4,
};

struct tagUPDATELAYEREDWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_281;
  /* 0x0008 */ struct HDC__* hdcDst;
  /* 0x0010 */ const struct tagPOINT* pptDst;
  /* 0x0018 */ const struct tagSIZE* psize;
  /* 0x0020 */ struct HDC__* hdcSrc;
  /* 0x0028 */ const struct tagPOINT* pptSrc;
  /* 0x0030 */ unsigned long crKey;
  /* 0x0034 */ long Padding_282;
  /* 0x0038 */ const struct _BLENDFUNCTION* pblend;
  /* 0x0040 */ unsigned long dwFlags;
  /* 0x0044 */ long Padding_283;
  /* 0x0048 */ const struct tagRECT* prcDirty;
}; /* size: 0x0050 */

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0010 */ void* pResolvehCryptProvFunc /* function */;
  /* 0x0018 */ void* pVoidResolveFunc;
  /* 0x0020 */ void* pDecryptPrivateKeyFunc /* function */;
  /* 0x0028 */ void* pVoidDecryptFunc;
} CRYPT_PKCS8_IMPORT_PARAMS, *PCRYPT_PKCS8_IMPORT_PARAMS; /* size: 0x0030 */

struct <vc_attributes>::propputrefAttribute
{
}; /* size: 0x0001 */

typedef enum _ACL_INFORMATION_CLASS
{
  AclRevisionInformation = 1,
  AclSizeInformation = 2,
} ACL_INFORMATION_CLASS, *PACL_INFORMATION_CLASS;

enum tagDOMNodeType
{
  NODE_INVALID = 0,
  NODE_ELEMENT = 1,
  NODE_ATTRIBUTE = 2,
  NODE_TEXT = 3,
  NODE_CDATA_SECTION = 4,
  NODE_ENTITY_REFERENCE = 5,
  NODE_ENTITY = 6,
  NODE_PROCESSING_INSTRUCTION = 7,
  NODE_COMMENT = 8,
  NODE_DOCUMENT = 9,
  NODE_DOCUMENT_TYPE = 10,
  NODE_DOCUMENT_FRAGMENT = 11,
  NODE_NOTATION = 12,
};

typedef struct _CERT_LOGOTYPE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeInfoChoice;
  /* 0x0004 */ long Padding_284;
  union
  {
    /* 0x0008 */ struct _CERT_LOGOTYPE_DATA* pLogotypeDirectInfo;
    /* 0x0008 */ struct _CERT_LOGOTYPE_REFERENCE* pLogotypeIndirectInfo;
  }; /* size: 0x0008 */
} CERT_LOGOTYPE_INFO, *PCERT_LOGOTYPE_INFO; /* size: 0x0010 */

typedef struct _TXFS_CREATE_MINIVERSION_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long BaseVersion;
  /* 0x0008 */ unsigned short MiniVersion;
  /* 0x000a */ char __PADDING__[2];
} TXFS_CREATE_MINIVERSION_INFO, *PTXFS_CREATE_MINIVERSION_INFO; /* size: 0x000c */

struct tagLASTINPUTINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwTime;
}; /* size: 0x0008 */

typedef enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = -1,
  Internal = 0,
  Isa = 1,
  Eisa = 2,
  MicroChannel = 3,
  TurboChannel = 4,
  PCIBus = 5,
  VMEBus = 6,
  NuBus = 7,
  PCMCIABus = 8,
  CBus = 9,
  MPIBus = 10,
  MPSABus = 11,
  ProcessorInternal = 12,
  InternalPowerBus = 13,
  PNPISABus = 14,
  PNPBus = 15,
  Vmcs = 16,
  MaximumInterfaceType = 17,
} INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef struct __midl_frag1186_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1186_t, *P_midl_frag1186_t; /* size: 0x0038 */

class SafeIStream
{
  /* 0x0000 */ struct IStream* _p;
}; /* size: 0x0008 */

struct REF_COUNTED_STRUCT
{
  /* 0x0000 */ long Padding_285[2];
  /* 0x0008 */ long m_refs;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef enum _FILE_ID_TYPE
{
  FileIdType = 0,
  ObjectIdType = 1,
  MaximumFileIdType = 2,
} FILE_ID_TYPE, *PFILE_ID_TYPE;

typedef struct _CERT_SIGNED_CONTENT_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0028 */ struct _CRYPT_BIT_BLOB Signature;
} CERT_SIGNED_CONTENT_INFO, *PCERT_SIGNED_CONTENT_INFO; /* size: 0x0040 */

struct tagTOGGLEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

union tagBINDPTR
{
  union
  {
    /* 0x0000 */ struct tagFUNCDESC* lpfuncdesc;
    /* 0x0000 */ struct tagVARDESC* lpvardesc;
    /* 0x0000 */ struct ITypeComp* lptcomp;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct HKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CPaccelEnum
{
  /* 0x0000 */ struct tagACCEL* _lpaccel;
  /* 0x0008 */ struct tagACCEL* _lpaccelBase;
}; /* size: 0x0010 */

typedef enum _JOBOBJECTINFOCLASS
{
  JobObjectBasicAccountingInformation = 1,
  JobObjectBasicLimitInformation = 2,
  JobObjectBasicProcessIdList = 3,
  JobObjectBasicUIRestrictions = 4,
  JobObjectSecurityLimitInformation = 5,
  JobObjectEndOfJobTimeInformation = 6,
  JobObjectAssociateCompletionPortInformation = 7,
  JobObjectBasicAndIoAccountingInformation = 8,
  JobObjectExtendedLimitInformation = 9,
  JobObjectJobSetInformation = 10,
  MaxJobObjectInfoClass = 11,
} JOBOBJECTINFOCLASS, *PJOBOBJECTINFOCLASS;

typedef enum _PROCESSINFOCLASS
{
  ProcessBasicInformation = 0,
  ProcessQuotaLimits = 1,
  ProcessIoCounters = 2,
  ProcessVmCounters = 3,
  ProcessTimes = 4,
  ProcessBasePriority = 5,
  ProcessRaisePriority = 6,
  ProcessDebugPort = 7,
  ProcessExceptionPort = 8,
  ProcessAccessToken = 9,
  ProcessLdtInformation = 10,
  ProcessLdtSize = 11,
  ProcessDefaultHardErrorMode = 12,
  ProcessIoPortHandlers = 13,
  ProcessPooledUsageAndLimits = 14,
  ProcessWorkingSetWatch = 15,
  ProcessUserModeIOPL = 16,
  ProcessEnableAlignmentFaultFixup = 17,
  ProcessPriorityClass = 18,
  ProcessWx86Information = 19,
  ProcessHandleCount = 20,
  ProcessAffinityMask = 21,
  ProcessPriorityBoost = 22,
  ProcessDeviceMap = 23,
  ProcessSessionInformation = 24,
  ProcessForegroundInformation = 25,
  ProcessWow64Information = 26,
  ProcessImageFileName = 27,
  ProcessLUIDDeviceMapsEnabled = 28,
  ProcessBreakOnTermination = 29,
  ProcessDebugObjectHandle = 30,
  ProcessDebugFlags = 31,
  ProcessHandleTracing = 32,
  ProcessIoPriority = 33,
  ProcessExecuteFlags = 34,
  ProcessTlsInformation = 35,
  ProcessCookie = 36,
  ProcessImageInformation = 37,
  ProcessCycleTime = 38,
  ProcessPagePriority = 39,
  ProcessInstrumentationCallback = 40,
  ProcessThreadStackAllocation = 41,
  ProcessWorkingSetWatchEx = 42,
  ProcessImageFileNameWin32 = 43,
  ProcessImageFileMapping = 44,
  ProcessAffinityUpdateMode = 45,
  ProcessMemoryAllocationMode = 46,
  MaxProcessInfoClass = 47,
} PROCESSINFOCLASS, *PPROCESSINFOCLASS;

struct ITypeComp
{
}; /* size: 0x0008 */

class CClassCache::IMiniMoniker
{
}; /* size: 0x0008 */

typedef struct _TOKEN_SOURCE
{
  /* 0x0000 */ char SourceName[8];
  /* 0x0008 */ struct _LUID SourceIdentifier;
} TOKEN_SOURCE, *PTOKEN_SOURCE; /* size: 0x0010 */

typedef struct _CMSG_SIGNER_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_286;
  /* 0x0008 */ struct _CERT_INFO* pCertInfo;
  union
  {
    /* 0x0010 */ unsigned __int64 hCryptProv;
    /* 0x0010 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long dwKeySpec;
  /* 0x001c */ long Padding_287;
  /* 0x0020 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0038 */ void* pvHashAuxInfo;
  /* 0x0040 */ unsigned long cAuthAttr;
  /* 0x0044 */ long Padding_288;
  /* 0x0048 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0050 */ unsigned long cUnauthAttr;
  /* 0x0054 */ long Padding_289;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
} CMSG_SIGNER_ENCODE_INFO, *PCMSG_SIGNER_ENCODE_INFO; /* size: 0x0060 */

typedef struct _LDOUBLE
{
  /* 0x0000 */ unsigned char ld[10];
} LDOUBLE, *PLDOUBLE; /* size: 0x000a */

enum tagPENDINGMSG
{
  PENDINGMSG_CANCELCALL = 0,
  PENDINGMSG_WAITNOPROCESS = 1,
  PENDINGMSG_WAITDEFPROCESS = 2,
};

typedef struct _XMIT_ROUTINE_QUINTUPLE
{
  /* 0x0000 */ void* pfnTranslateToXmit /* function */;
  /* 0x0008 */ void* pfnTranslateFromXmit /* function */;
  /* 0x0010 */ void* pfnFreeXmit /* function */;
  /* 0x0018 */ void* pfnFreeInst /* function */;
} XMIT_ROUTINE_QUINTUPLE, *PXMIT_ROUTINE_QUINTUPLE; /* size: 0x0020 */

enum SYSGEOTYPE
{
  GEO_NATION = 1,
  GEO_LATITUDE = 2,
  GEO_LONGITUDE = 3,
  GEO_ISO2 = 4,
  GEO_ISO3 = 5,
  GEO_RFC1766 = 6,
  GEO_LCID = 7,
  GEO_FRIENDLYNAME = 8,
  GEO_OFFICIALNAME = 9,
  GEO_TIMEZONES = 10,
  GEO_OFFICIALLANGUAGES = 11,
};

typedef struct _SHELLEXECUTEINFOA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const char* lpVerb;
  /* 0x0018 */ const char* lpFile;
  /* 0x0020 */ const char* lpParameters;
  /* 0x0028 */ const char* lpDirectory;
  /* 0x0030 */ int nShow;
  /* 0x0034 */ long Padding_290;
  /* 0x0038 */ struct HINSTANCE__* hInstApp;
  /* 0x0040 */ void* lpIDList;
  /* 0x0048 */ const char* lpClass;
  /* 0x0050 */ struct HKEY__* hkeyClass;
  /* 0x0058 */ unsigned long dwHotKey;
  /* 0x005c */ long Padding_291;
  union
  {
    /* 0x0060 */ void* hIcon;
    /* 0x0060 */ void* hMonitor;
  }; /* size: 0x0008 */
  /* 0x0068 */ void* hProcess;
} SHELLEXECUTEINFOA, *PSHELLEXECUTEINFOA; /* size: 0x0070 */

typedef struct _SYSTEM_HOTPATCH_CODE_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long InfoSize;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long DescriptorsCount;
      /* 0x0004 */ long Padding_292;
      /* 0x0010 */ struct _HOTPATCH_HOOK_DESCRIPTOR CodeDescriptors[1];
    } /* size: 0x0030 */ CodeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
    } /* size: 0x0004 */ KernelInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x0014 */ unsigned char PatchingFinished;
      /* 0x0015 */ char __PADDING__[1];
    } /* size: 0x000e */ UserModeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x000c */ long Padding_293;
      /* 0x0018 */ unsigned __int64 TargetProcess;
    } /* size: 0x0018 */ InjectionInfo;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned __int64 ParentDirectory;
        /* 0x0010 */ unsigned __int64 ObjectHandle1;
        /* 0x0018 */ unsigned __int64 ObjectHandle2;
      } /* size: 0x0018 */ AtomicSwap;
      /* 0x0020 */ long __PADDING__[6];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} SYSTEM_HOTPATCH_CODE_INFORMATION, *PSYSTEM_HOTPATCH_CODE_INFORMATION; /* size: 0x0038 */

typedef union _UNWIND_CODE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char CodeOffset;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OpInfo : 4; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0002 */
    /* 0x0000 */ unsigned short FrameOffset;
  }; /* size: 0x0002 */
} UNWIND_CODE, *PUNWIND_CODE; /* size: 0x0002 */

enum IMPORT_OBJECT_TYPE
{
  IMPORT_OBJECT_CODE = 0,
  IMPORT_OBJECT_DATA = 1,
  IMPORT_OBJECT_CONST = 2,
};

class CBasedSeekPointerPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef enum _TAPE_DRIVE_PROBLEM_TYPE
{
  TapeDriveProblemNone = 0,
  TapeDriveReadWriteWarning = 1,
  TapeDriveReadWriteError = 2,
  TapeDriveReadWarning = 3,
  TapeDriveWriteWarning = 4,
  TapeDriveReadError = 5,
  TapeDriveWriteError = 6,
  TapeDriveHardwareError = 7,
  TapeDriveUnsupportedMedia = 8,
  TapeDriveScsiConnectionError = 9,
  TapeDriveTimetoClean = 10,
  TapeDriveCleanDriveNow = 11,
  TapeDriveMediaLifeExpired = 12,
  TapeDriveSnappedTape = 13,
} TAPE_DRIVE_PROBLEM_TYPE, *PTAPE_DRIVE_PROBLEM_TYPE;

struct IAsyncManager
{
}; /* size: 0x0008 */

typedef struct _SCHANNEL_ALG
{
  /* 0x0000 */ unsigned long dwUse;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned long cBits;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwReserved;
} SCHANNEL_ALG, *PSCHANNEL_ALG; /* size: 0x0014 */

enum tagAspectInfoFlag
{
  DVASPECTINFOFLAG_CANOPTIMIZE = 1,
};

enum tagPROPPAGESTATUS
{
  PROPPAGESTATUS_DIRTY = 1,
  PROPPAGESTATUS_VALIDATE = 2,
  PROPPAGESTATUS_CLEAN = 4,
};

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ unsigned short UniqueProcessId;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned char ObjectTypeIndex;
  /* 0x0005 */ unsigned char HandleAttributes;
  /* 0x0006 */ unsigned short HandleValue;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long GrantedAccess;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_HANDLE_TABLE_ENTRY_INFO, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0018 */

class CClass
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ wchar_t* m_szClsid;
}; /* size: 0x0018 */

class CGenericObject
{
  /* 0x0000 */ class CClass m_class;
  /* 0x0018 */ class CClass m_classLast;
  /* 0x0030 */ class CPres* m_ppres;
  /* 0x0038 */ class CData m_dataNative;
  /* 0x0058 */ int m_fLink;
  /* 0x005c */ int m_fStatic;
  /* 0x0060 */ int m_fNoBlankPres;
  /* 0x0064 */ long Padding_294;
  /* 0x0068 */ wchar_t* m_szTopic;
  /* 0x0070 */ wchar_t* m_szItem;
  /* 0x0078 */ unsigned long m_lnkupdopt;
}; /* size: 0x0080 */

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG
{
  /* 0x0000 */ int fFailureActionsOnNonCrashFailures;
} SERVICE_FAILURE_ACTIONS_FLAG, *PSERVICE_FAILURE_ACTIONS_FLAG; /* size: 0x0004 */

class CComProcessInfo
{
  /* 0x0000 */ long Padding_295[6];
  /* 0x0018 */ long m_cRef;
  /* 0x001c */ struct _GUID m_guidProcessId;
  /* 0x002c */ long Padding_296;
  /* 0x0030 */ wchar_t* m_pwszProcessName;
  /* 0x0038 */ enum tagProcessType m_eProcessType;
  /* 0x003c */ long Padding_297;
  /* 0x0040 */ wchar_t* m_pwszServiceName;
  /* 0x0048 */ wchar_t* m_pwszServiceParameters;
  /* 0x0050 */ int m_fActivateAtStorage;
  /* 0x0054 */ long Padding_298;
  /* 0x0058 */ wchar_t* m_pwszRunAsUser;
  /* 0x0060 */ enum tagRunAsType m_eRunAsType;
  /* 0x0064 */ long Padding_299;
  /* 0x0068 */ wchar_t* m_pwszSurrogatePath;
  /* 0x0070 */ struct _SECURITY_DESCRIPTOR* m_pLaunchPermission;
  /* 0x0078 */ unsigned long m_cbLaunchPermission;
  /* 0x007c */ unsigned long m_dwAuthenticationLevel;
  /* 0x0080 */ unsigned long m_dwROTFlags;
  /* 0x0084 */ unsigned long m_dwAppIDFlags;
  /* 0x0088 */ wchar_t* m_pwszRemoteServerName;
  /* 0x0090 */ unsigned long m_dwFlags;
  /* 0x0094 */ unsigned long m_dwSaferTrustLevel;
  /* 0x0098 */ struct _KEY_FULL_INFORMATION* m_pKeyInformation;
  /* 0x00a0 */ struct _KEY_NAME_INFORMATION* m_pKeyNameInformation;
  union
  {
    /* 0x0000 */ int m_fGotLegacyLevels;
    /* 0x0000 */ unsigned long m_dwLegacyAuthenticationLevel;
    /* 0x0000 */ unsigned long m_dwLegacyImpersonationLevel;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_300[41];
  /* 0x00a8 */ unsigned long m_dwPreferredServerBitness;
  /* 0x00ac */ long Padding_301;
  /* 0x00b0 */ wchar_t* m_pwszSurrogateCommandDebug;
  /* 0x00b8 */ wchar_t* m_pwszServerExecutable;
  /* 0x00c0 */ int m_bLoadUserSettings;
  /* 0x00c4 */ int m_fDebugSurrogate;
}; /* size: 0x00c8 */

enum tagHITRESULT
{
  HITRESULT_OUTSIDE = 0,
  HITRESULT_TRANSPARENT = 1,
  HITRESULT_CLOSE = 2,
  HITRESULT_HIT = 3,
};

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 LastRecoveredLsn;
} TRANSACTIONMANAGER_RECOVERY_INFORMATION, *PTRANSACTIONMANAGER_RECOVERY_INFORMATION; /* size: 0x0008 */

class CCliRotHintTable
{
  /* 0x0000 */ long Padding_302[2];
  /* 0x0008 */ void* _hSm;
}; /* size: 0x0010 */

enum tagREADYSTATE
{
  READYSTATE_UNINITIALIZED = 0,
  READYSTATE_LOADING = 1,
  READYSTATE_LOADED = 2,
  READYSTATE_INTERACTIVE = 3,
  READYSTATE_COMPLETE = 4,
};

typedef struct _CTL_USAGE
{
  /* 0x0000 */ unsigned long cUsageIdentifier;
  /* 0x0004 */ long Padding_303;
  /* 0x0008 */ char** rgpszUsageIdentifier;
} CTL_USAGE, *PCTL_USAGE; /* size: 0x0010 */

typedef struct _CTL_FIND_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_304;
  /* 0x0008 */ struct _CTL_USAGE SubjectUsage;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0028 */ struct _CERT_INFO* pSigner;
} CTL_FIND_USAGE_PARA, *PCTL_FIND_USAGE_PARA; /* size: 0x0030 */

typedef struct _currencyfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_305;
  /* 0x0010 */ wchar_t* lpDecimalSep;
  /* 0x0018 */ wchar_t* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ unsigned int PositiveOrder;
  /* 0x0028 */ wchar_t* lpCurrencySymbol;
} currencyfmtW, *PcurrencyfmtW; /* size: 0x0030 */

struct IXMLDocument2
{
}; /* size: 0x0008 */

enum tagGUIDKIND
{
  GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1,
};

struct <vc_attributes>::atl::synchronizeAttribute
{
}; /* size: 0x0001 */

enum tagITEM_CHANGE_TYPE
{
  ICHT_INSERT = 0,
  ICHT_DELETE = 1,
  ICHT_UPDATE = 2,
  ICHT_FILTER = 3,
};

enum tagPictureAttributes
{
  PICTURE_SCALABLE = 1,
  PICTURE_TRANSPARENT = 2,
};

struct tagBinaryParam
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ short Size;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

class CArrayFValue
{
  /* 0x0000 */ unsigned char* m_pData;
  /* 0x0008 */ unsigned int m_cbValue;
  /* 0x000c */ int m_nSize;
  /* 0x0010 */ int m_nMaxSize;
  /* 0x0014 */ int m_nGrowBy;
}; /* size: 0x0018 */

class CRunningObjectTable
{
  /* 0x0000 */ long Padding_306[4];
  /* 0x0010 */ class CArrayFValue _afvRotList;
  /* 0x0028 */ class CCliRotHintTable _crht;
  /* 0x0038 */ unsigned short _wSigRotItem;
}; /* size: 0x0040 */

typedef struct _LDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ struct _LIST_ENTRY InMemoryOrderLinks;
  /* 0x0020 */ struct _LIST_ENTRY InInitializationOrderLinks;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_307;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct _LIST_ENTRY HashLinks;
    struct
    {
      /* 0x0070 */ void* SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ void* LoadedImports;
  }; /* size: 0x0008 */
  /* 0x0088 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
  /* 0x0090 */ void* PatchInformation;
  /* 0x0098 */ struct _LIST_ENTRY ForwarderLinks;
  /* 0x00a8 */ struct _LIST_ENTRY ServiceTagLinks;
  /* 0x00b8 */ struct _LIST_ENTRY StaticLinks;
} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY; /* size: 0x00c8 */

enum tagVIEWSTATUS
{
  VIEWSTATUS_OPAQUE = 1,
  VIEWSTATUS_SOLIDBKGND = 2,
  VIEWSTATUS_DVASPECTOPAQUE = 4,
  VIEWSTATUS_DVASPECTTRANSPARENT = 8,
  VIEWSTATUS_SURFACE = 16,
  VIEWSTATUS_3DSURFACE = 32,
};

enum tagUASFLAGS
{
  UAS_NORMAL = 0,
  UAS_BLOCKED = 1,
  UAS_NOPARENTENABLE = 2,
  UAS_MASK = 3,
};

typedef struct _FILE_FS_VOLUME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeCreationTime;
  /* 0x0008 */ unsigned long VolumeSerialNumber;
  /* 0x000c */ unsigned long VolumeLabelLength;
  /* 0x0010 */ unsigned char SupportsObjects;
  /* 0x0011 */ char Padding_308;
  /* 0x0012 */ wchar_t VolumeLabel[1];
  /* 0x0014 */ long __PADDING__[1];
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION; /* size: 0x0018 */

enum tagXFORMCOORDS
{
  XFORMCOORDS_POSITION = 1,
  XFORMCOORDS_SIZE = 2,
  XFORMCOORDS_HIMETRICTOCONTAINER = 4,
  XFORMCOORDS_CONTAINERTOHIMETRIC = 8,
  XFORMCOORDS_EVENTCOMPAT = 16,
};

class CDWORDHashTable
{
}; /* size: 0x0028 */

class CMultiGUIDHashTable
{
}; /* size: 0x0028 */

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION; /* size: 0x0060 */

typedef struct _NDR64_EXPR_OPERATOR
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Operator;
  /* 0x0002 */ unsigned char CastType;
  /* 0x0003 */ unsigned char Reserved;
} NDR64_EXPR_OPERATOR, *PNDR64_EXPR_OPERATOR; /* size: 0x0004 */

typedef struct __midl_frag1723_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1723_t, *P_midl_frag1723_t; /* size: 0x0010 */

typedef struct _RPC_MESSAGE
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long DataRepresentation;
  /* 0x000c */ long Padding_309;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned int BufferLength;
  /* 0x001c */ unsigned int ProcNum;
  /* 0x0020 */ struct _RPC_SYNTAX_IDENTIFIER* TransferSyntax;
  /* 0x0028 */ void* RpcInterfaceInformation;
  /* 0x0030 */ void* ReservedForRuntime;
  /* 0x0038 */ void* ManagerEpv;
  /* 0x0040 */ void* ImportContext;
  /* 0x0048 */ unsigned long RpcFlags;
  /* 0x004c */ long __PADDING__[1];
} RPC_MESSAGE, *PRPC_MESSAGE; /* size: 0x0050 */

typedef struct _SYSTEM_VA_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 VirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualPeak;
  /* 0x0010 */ unsigned __int64 VirtualLimit;
  /* 0x0018 */ unsigned __int64 AllocationFailures;
} SYSTEM_VA_LIST_INFORMATION, *PSYSTEM_VA_LIST_INFORMATION; /* size: 0x0020 */

struct IPSFactoryBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateProxy /* function */;
  /* 0x0020 */ void* CreateStub /* function */;
}; /* size: 0x0028 */

enum DIRENTRYOP
{
  DEOP_FIND = 0,
  DEOP_REMOVE = 1,
};

struct IInitActivationPropertiesIn
{
}; /* size: 0x0008 */

typedef struct _PORT_DATA_ENTRY
{
  /* 0x0000 */ void* Base;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PORT_DATA_ENTRY, *PPORT_DATA_ENTRY; /* size: 0x0010 */

struct tagPANOSE
{
  /* 0x0000 */ unsigned char bFamilyType;
  /* 0x0001 */ unsigned char bSerifStyle;
  /* 0x0002 */ unsigned char bWeight;
  /* 0x0003 */ unsigned char bProportion;
  /* 0x0004 */ unsigned char bContrast;
  /* 0x0005 */ unsigned char bStrokeVariation;
  /* 0x0006 */ unsigned char bArmStyle;
  /* 0x0007 */ unsigned char bLetterform;
  /* 0x0008 */ unsigned char bMidline;
  /* 0x0009 */ unsigned char bXHeight;
}; /* size: 0x000a */

struct tagEXTLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ unsigned long elfVersion;
  /* 0x0120 */ unsigned long elfStyleSize;
  /* 0x0124 */ unsigned long elfMatch;
  /* 0x0128 */ unsigned long elfReserved;
  /* 0x012c */ unsigned char elfVendorId[4];
  /* 0x0130 */ unsigned long elfCulture;
  /* 0x0134 */ struct tagPANOSE elfPanose;
  /* 0x013e */ char __PADDING__[2];
}; /* size: 0x0140 */

struct tagEMREXTCREATEFONTINDIRECTW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihFont;
  /* 0x000c */ struct tagEXTLOGFONTW elfw;
}; /* size: 0x014c */

typedef struct _CERT_TEMPLATE_EXT
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long dwMajorVersion;
  /* 0x000c */ int fMinorVersion;
  /* 0x0010 */ unsigned long dwMinorVersion;
  /* 0x0014 */ long __PADDING__[1];
} CERT_TEMPLATE_EXT, *PCERT_TEMPLATE_EXT; /* size: 0x0018 */

enum CDFB_CLASSTYPE
{
  CDFB_DIRECTDOCFILE = 0,
  CDFB_DIRECTSTREAM = 1,
  CDFB_WRAPPEDDOCFILE = 2,
  CDFB_TRANSACTEDSTREAM = 3,
};

typedef struct _EXIT_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_PROCESS_DEBUG_INFO, *PEXIT_PROCESS_DEBUG_INFO; /* size: 0x0004 */

struct tagTPMPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct tagRECT rcExclude;
}; /* size: 0x0014 */

typedef enum _FAIL_BEHAVIOR
{
  NullOnFail = 0,
  ExceptOnFail = 1,
} FAIL_BEHAVIOR, *PFAIL_BEHAVIOR;

struct IContinue
{
  /* 0x0000 */ struct IContinueVtbl* lpVtbl;
}; /* size: 0x0008 */

typedef enum _IMAGEHLP_SYMBOL_TYPE_INFO
{
  TI_GET_SYMTAG = 0,
  TI_GET_SYMNAME = 1,
  TI_GET_LENGTH = 2,
  TI_GET_TYPE = 3,
  TI_GET_TYPEID = 4,
  TI_GET_BASETYPE = 5,
  TI_GET_ARRAYINDEXTYPEID = 6,
  TI_FINDCHILDREN = 7,
  TI_GET_DATAKIND = 8,
  TI_GET_ADDRESSOFFSET = 9,
  TI_GET_OFFSET = 10,
  TI_GET_VALUE = 11,
  TI_GET_COUNT = 12,
  TI_GET_CHILDRENCOUNT = 13,
  TI_GET_BITPOSITION = 14,
  TI_GET_VIRTUALBASECLASS = 15,
  TI_GET_VIRTUALTABLESHAPEID = 16,
  TI_GET_VIRTUALBASEPOINTEROFFSET = 17,
  TI_GET_CLASSPARENTID = 18,
  TI_GET_NESTED = 19,
  TI_GET_SYMINDEX = 20,
  TI_GET_LEXICALPARENT = 21,
  TI_GET_ADDRESS = 22,
  TI_GET_THISADJUST = 23,
  TI_GET_UDTKIND = 24,
  TI_IS_EQUIV_TO = 25,
  TI_GET_CALLING_CONVENTION = 26,
  TI_IS_CLOSE_EQUIV_TO = 27,
  TI_GTIEX_REQS_VALID = 28,
  TI_GET_VIRTUALBASEOFFSET = 29,
  TI_GET_VIRTUALBASEDISPINDEX = 30,
  TI_GET_IS_REFERENCE = 31,
  IMAGEHLP_SYMBOL_TYPE_INFO_MAX = 32,
} IMAGEHLP_SYMBOL_TYPE_INFO, *PIMAGEHLP_SYMBOL_TYPE_INFO;

typedef enum _MINIDUMP_CALLBACK_TYPE
{
  ModuleCallback = 0,
  ThreadCallback = 1,
  ThreadExCallback = 2,
  IncludeThreadCallback = 3,
  IncludeModuleCallback = 4,
  MemoryCallback = 5,
  CancelCallback = 6,
  WriteKernelMinidumpCallback = 7,
  KernelMinidumpStatusCallback = 8,
  RemoveMemoryCallback = 9,
  IncludeVmRegionCallback = 10,
  IoStartCallback = 11,
  IoWriteAllCallback = 12,
  IoFinishCallback = 13,
  ReadMemoryFailureCallback = 14,
  SecondaryFlagsCallback = 15,
} MINIDUMP_CALLBACK_TYPE, *PMINIDUMP_CALLBACK_TYPE;

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
} FILE_PIPE_CLIENT_PROCESS_BUFFER, *PFILE_PIPE_CLIENT_PROCESS_BUFFER; /* size: 0x0010 */

class CDfMutex
{
  /* 0x0000 */ struct _GLOBAL_SHARED_CRITICAL_SECTION* _pGlobalPortion;
  /* 0x0008 */ void* _hLockEvent;
}; /* size: 0x0010 */

class CPerContext
{
  /* 0x0000 */ long Padding_310[4];
  /* 0x0010 */ struct ILockBytes* _plkbBase;
  /* 0x0018 */ struct CFileStream* _pfstDirty;
  /* 0x0020 */ struct ILockBytes* _plkbOriginal;
  /* 0x0028 */ unsigned long _ulOpenLock;
  /* 0x002c */ long Padding_311;
  /* 0x0030 */ class CGlobalContext* _pgc;
  /* 0x0038 */ long _cReferences;
  /* 0x003c */ long Padding_312;
  /* 0x0040 */ struct IMalloc* const _pMalloc;
  /* 0x0048 */ struct IFillInfo* _pfi;
  /* 0x0050 */ void* _hNotificationEvent;
  /* 0x0058 */ class CSharedMemoryBlock* _psmb;
  /* 0x0060 */ unsigned char* _pbBase;
  /* 0x0068 */ unsigned long _ulHeapName;
  /* 0x006c */ long Padding_313;
  /* 0x0070 */ class CDfMutex _dmtx;
  /* 0x0080 */ unsigned long _cRecursion;
}; /* size: 0x0088 */

struct tagIPIDEntry
{
  /* 0x0000 */ struct tagIPIDEntry* pNextIPID;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cStrongRefs;
  /* 0x0010 */ unsigned long cWeakRefs;
  /* 0x0014 */ unsigned long cPrivateRefs;
  /* 0x0018 */ void* pv;
  /* 0x0020 */ struct IUnknown* pStub;
  /* 0x0028 */ class OXIDEntry* pOXIDEntry;
  /* 0x0030 */ struct _GUID ipid;
  /* 0x0040 */ struct _GUID iid;
  /* 0x0050 */ class CCtxComChnl* pChnl;
  /* 0x0058 */ struct IRCEntry* pIRCEntry;
  /* 0x0060 */ struct tagIPIDEntry* pOIDFLink;
  /* 0x0068 */ struct tagIPIDEntry* pOIDBLink;
}; /* size: 0x0070 */

typedef enum _TAG_UNNAMED_14
{
  sfImage = 0,
  sfDbg = 1,
  sfPdb = 2,
  sfMpd = 3,
  sfMax = 4,
} TAG_UNNAMED_14, *PTAG_UNNAMED_14;

struct tagRID_DEVICE_INFO_KEYBOARD
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSubType;
  /* 0x0008 */ unsigned long dwKeyboardMode;
  /* 0x000c */ unsigned long dwNumberOfFunctionKeys;
  /* 0x0010 */ unsigned long dwNumberOfIndicators;
  /* 0x0014 */ unsigned long dwNumberOfKeysTotal;
}; /* size: 0x0018 */

typedef enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE
{
  MiniHandleObjectInformationNone = 0,
  MiniThreadInformation1 = 1,
  MiniMutantInformation1 = 2,
  MiniMutantInformation2 = 3,
  MiniProcessInformation1 = 4,
  MiniProcessInformation2 = 5,
  MiniHandleObjectInformationTypeMax = 6,
} MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE, *PMINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;

struct IPropertyBagEx
{
}; /* size: 0x0008 */

struct tagMSG
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ long Padding_314;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
  /* 0x0020 */ unsigned long time;
  /* 0x0024 */ struct tagPOINT pt;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_15
{
  sevInfo = 0,
  sevProblem = 1,
  sevAttn = 2,
  sevFatal = 3,
  sevMax = 4,
} TAG_UNNAMED_15, *PTAG_UNNAMED_15;

enum SYM_TYPE
{
  SymNone = 0,
  SymCoff = 1,
  SymCv = 2,
  SymPdb = 3,
  SymExport = 4,
  SymDeferred = 5,
  SymSym = 6,
  SymDia = 7,
  SymVirtual = 8,
  NumSymTypes = 9,
};

typedef struct _CERT_BIOMETRIC_EXT_INFO
{
  /* 0x0000 */ unsigned long cBiometricData;
  /* 0x0004 */ long Padding_315;
  /* 0x0008 */ struct _CERT_BIOMETRIC_DATA* rgBiometricData;
} CERT_BIOMETRIC_EXT_INFO, *PCERT_BIOMETRIC_EXT_INFO; /* size: 0x0010 */

typedef enum _MINIDUMP_STREAM_TYPE
{
  UnusedStream = 0,
  ReservedStream0 = 1,
  ReservedStream1 = 2,
  ThreadListStream = 3,
  ModuleListStream = 4,
  MemoryListStream = 5,
  ExceptionStream = 6,
  SystemInfoStream = 7,
  ThreadExListStream = 8,
  Memory64ListStream = 9,
  CommentStreamA = 10,
  CommentStreamW = 11,
  HandleDataStream = 12,
  FunctionTableStream = 13,
  UnloadedModuleListStream = 14,
  MiscInfoStream = 15,
  MemoryInfoListStream = 16,
  ThreadInfoListStream = 17,
  HandleOperationListStream = 18,
  ceStreamNull = 0xffff8000,
  ceStreamSystemInfo = 0xffff8001,
  ceStreamException = 0xffff8002,
  ceStreamModuleList = 0xffff8003,
  ceStreamProcessList = 0xffff8004,
  ceStreamThreadList = 0xffff8005,
  ceStreamThreadContextList = 0xffff8006,
  ceStreamThreadCallStackList = 0xffff8007,
  ceStreamMemoryVirtualList = 0xffff8008,
  ceStreamMemoryPhysicalList = 0xffff8009,
  ceStreamBucketParameters = 0xffff800a,
  LastReservedStream = 0xffffffff,
} MINIDUMP_STREAM_TYPE, *PMINIDUMP_STREAM_TYPE;

class CSTInnerUnknown
{
  /* 0x0000 */ long Padding_316[2];
  /* 0x0008 */ unsigned long _iRefCount;
  /* 0x000c */ long Padding_317;
  /* 0x0010 */ class CStdEvent* _pParent;
}; /* size: 0x0018 */

class CStdEvent
{
  /* 0x0000 */ long Padding_318[4];
  /* 0x0010 */ class CSTInnerUnknown _cInner;
  /* 0x0028 */ struct IUnknown* _pControl;
  /* 0x0030 */ void* m_hEvent;
}; /* size: 0x0038 */

typedef enum _MODULE_WRITE_FLAGS
{
  ModuleWriteModule = 1,
  ModuleWriteDataSeg = 2,
  ModuleWriteMiscRecord = 4,
  ModuleWriteCvRecord = 8,
  ModuleReferencedByMemory = 16,
  ModuleWriteTlsData = 32,
  ModuleWriteCodeSegs = 64,
} MODULE_WRITE_FLAGS, *PMODULE_WRITE_FLAGS;

typedef struct __midl_frag606_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag606_t, *P_midl_frag606_t; /* size: 0x000c */

struct tagORPC_EXTENT
{
  /* 0x0000 */ struct _GUID id;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

enum ADDRESS_MODE
{
  AddrMode1616 = 0,
  AddrMode1632 = 1,
  AddrModeReal = 2,
  AddrModeFlat = 3,
};

struct NUMPARSE
{
  /* 0x0000 */ int cDig;
  /* 0x0004 */ unsigned long dwInFlags;
  /* 0x0008 */ unsigned long dwOutFlags;
  /* 0x000c */ int cchUsed;
  /* 0x0010 */ int nBaseShift;
  /* 0x0014 */ int nPwr10;
}; /* size: 0x0018 */

typedef enum _IMAGEHLP_STATUS_REASON
{
  BindOutOfMemory = 0,
  BindRvaToVaFailed = 1,
  BindNoRoomInImage = 2,
  BindImportModuleFailed = 3,
  BindImportProcedureFailed = 4,
  BindImportModule = 5,
  BindImportProcedure = 6,
  BindForwarder = 7,
  BindForwarderNOT = 8,
  BindImageModified = 9,
  BindExpandFileHeaders = 10,
  BindImageComplete = 11,
  BindMismatchedSymbols = 12,
  BindSymbolsNotUpdated = 13,
  BindImportProcedure32 = 14,
  BindImportProcedure64 = 15,
  BindForwarder32 = 16,
  BindForwarder64 = 17,
  BindForwarderNOT32 = 18,
  BindForwarderNOT64 = 19,
} IMAGEHLP_STATUS_REASON, *PIMAGEHLP_STATUS_REASON;

class CSafeAccess
{
  /* 0x0000 */ class CDFBasis* _pdfb;
  /* 0x0008 */ class CPerContext* _ppc;
  /* 0x0010 */ int _fAccess;
}; /* size: 0x0018 */

typedef struct _RTL_CRITICAL_SECTION32
{
  /* 0x0000 */ unsigned long DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ unsigned long OwningThread;
  /* 0x0010 */ unsigned long LockSemaphore;
  /* 0x0014 */ unsigned long SpinCount;
} RTL_CRITICAL_SECTION32, *PRTL_CRITICAL_SECTION32; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_16
{
  hdBase = 0,
  hdSym = 1,
  hdSrc = 2,
  hdMax = 3,
} TAG_UNNAMED_16, *PTAG_UNNAMED_16;

typedef struct _CM_PNP_BIOS_DEVICE_NODE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Node;
  /* 0x0003 */ unsigned long ProductId;
  /* 0x0007 */ unsigned char DeviceType[3];
  /* 0x000a */ unsigned short DeviceAttributes;
} CM_PNP_BIOS_DEVICE_NODE, *PCM_PNP_BIOS_DEVICE_NODE; /* size: 0x000c */

class CNtfsEnumSTATSTG
{
  /* 0x0000 */ long Padding_319[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ unsigned long _istatNextToRead;
  /* 0x0014 */ long Padding_320;
  /* 0x0018 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0020 */ class CNtfsSTATSTGArray* _pstatstgarray;
}; /* size: 0x0028 */

typedef enum _MINIDUMP_TYPE
{
  MiniDumpNormal = 0,
  MiniDumpWithDataSegs = 1,
  MiniDumpWithFullMemory = 2,
  MiniDumpWithHandleData = 4,
  MiniDumpFilterMemory = 8,
  MiniDumpScanMemory = 16,
  MiniDumpWithUnloadedModules = 32,
  MiniDumpWithIndirectlyReferencedMemory = 64,
  MiniDumpFilterModulePaths = 128,
  MiniDumpWithProcessThreadData = 256,
  MiniDumpWithPrivateReadWriteMemory = 512,
  MiniDumpWithoutOptionalData = 1024,
  MiniDumpWithFullMemoryInfo = 2048,
  MiniDumpWithThreadInfo = 4096,
  MiniDumpWithCodeSegs = 8192,
  MiniDumpWithoutAuxiliaryState = 16384,
  MiniDumpWithFullAuxiliaryState = 0xffff8000,
  MiniDumpValidTypeFlags = 0xffffffff,
} MINIDUMP_TYPE, *PMINIDUMP_TYPE;

typedef enum _THREAD_WRITE_FLAGS
{
  ThreadWriteThread = 1,
  ThreadWriteStack = 2,
  ThreadWriteContext = 4,
  ThreadWriteBackingStore = 8,
  ThreadWriteInstructionWindow = 16,
  ThreadWriteThreadData = 32,
  ThreadWriteThreadInfo = 64,
} THREAD_WRITE_FLAGS, *PTHREAD_WRITE_FLAGS;

typedef struct _CERT_STORE_PROV_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cStoreProvFunc;
  /* 0x0008 */ void** rgpvStoreProvFunc;
  /* 0x0010 */ void* hStoreProv;
  /* 0x0018 */ unsigned long dwStoreProvFlags;
  /* 0x001c */ long Padding_321;
  /* 0x0020 */ void* hStoreProvFuncAddr2;
} CERT_STORE_PROV_INFO, *PCERT_STORE_PROV_INFO; /* size: 0x0028 */

struct tagRemHPALETTE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef enum _MINIDUMP_SECONDARY_FLAGS
{
  MiniSecondaryWithoutPowerInfo = 1,
  MiniSecondaryValidFlags = 1,
} MINIDUMP_SECONDARY_FLAGS, *PMINIDUMP_SECONDARY_FLAGS;

class CBasedGlobalContextPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

enum tagPATCHOP
{
  PATCHOP_COMPUTESIZE = 0,
  PATCHOP_ALIGNLENGTHS = 1,
  PATCHOP_EXPAND = 2,
};

enum SYNCMGR_PROGRESS_STATUS
{
  SYNCMGR_PS_UPDATING = 1,
  SYNCMGR_PS_UPDATING_INDETERMINATE = 2,
  SYNCMGR_PS_SUCCEEDED = 3,
  SYNCMGR_PS_FAILED = 4,
  SYNCMGR_PS_CANCELED = 5,
  SYNCMGR_PS_DISCONNECTED = 6,
  SYNCMGR_PS_MAX = 6,
};

typedef struct __CRT_LIST_ENTRY
{
  /* 0x0000 */ struct __CRT_LIST_ENTRY* Flink;
  /* 0x0008 */ struct __CRT_LIST_ENTRY* Blink;
} _CRT_LIST_ENTRY, *P_CRT_LIST_ENTRY; /* size: 0x0010 */

enum tagLOADSTATE
{
  LOADSTATE_FAIL = 0,
  LOADSTATE_DONE = 1,
  LOADSTATE_BADFMTID = 2,
  LOADSTATE_USERDEFINEDNOTFOUND = 3,
  LOADSTATE_USERDEFINEDDELETE = 4,
};

typedef enum _PROPOP
{
  PROPOP_IGNORE = 1,
  PROPOP_DELETE = 2,
  PROPOP_INSERT = 3,
  PROPOP_MOVE = 4,
  PROPOP_UPDATE = 5,
} PROPOP, *PPROPOP;

typedef struct _CRYPT_ECC_CMS_SHARED_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EntityUInfo;
  /* 0x0028 */ unsigned char rgbSuppPubInfo[4];
  /* 0x002c */ long __PADDING__[1];
} CRYPT_ECC_CMS_SHARED_INFO, *PCRYPT_ECC_CMS_SHARED_INFO; /* size: 0x0030 */

struct IXMLDOMNodeList
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_17
{
  AVT_OSVERSIONINFO = 1,
  AVT_PATCHINFO = 2,
} TAG_UNNAMED_17, *PTAG_UNNAMED_17;

enum tagCALLCATEGORY
{
  CALLCAT_NOCALL = 0,
  CALLCAT_SYNCHRONOUS = 1,
  CALLCAT_ASYNC = 2,
  CALLCAT_INPUTSYNC = 3,
  CALLCAT_INTERNALSYNC = 4,
  CALLCAT_INTERNALINPUTSYNC = 5,
  CALLCAT_SCMCALL = 6,
};

enum SEMSTATE
{
  SEMSHARED = 0,
  SEMSHAREDOWNED = 1,
};

struct tagOXID_INFO
{
  /* 0x0000 */ unsigned long dwTid;
  /* 0x0004 */ unsigned long dwPid;
  /* 0x0008 */ unsigned long dwAuthnHint;
  /* 0x000c */ struct tagCOMVERSION version;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long Padding_322;
  /* 0x0028 */ struct tagDUALSTRINGARRAY* psa;
}; /* size: 0x0030 */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_323;
  /* 0x0008 */ unsigned short* ServerPrincName;
  /* 0x0010 */ unsigned long AuthnLevel;
  /* 0x0014 */ unsigned long AuthnSvc;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
  /* 0x0020 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_W, *PRPC_BINDING_HANDLE_SECURITY_V1_W; /* size: 0x0028 */

struct tagRIFEntry
{
  /* 0x0000 */ struct SUUIDHashNode HashNode;
  /* 0x0020 */ struct _GUID iidCounterpart;
  /* 0x0030 */ struct _GUID psclsid;
  /* 0x0040 */ unsigned long dwFlags;
  /* 0x0044 */ unsigned long cRefs;
  /* 0x0048 */ struct tagRIFEntry* pBase;
  /* 0x0050 */ struct _RPC_SERVER_INTERFACE* pSrvInterface;
  /* 0x0058 */ struct _RPC_CLIENT_INTERFACE* pCliInterface;
}; /* size: 0x0060 */

typedef enum _RTL_VERIFIER_INFORMATION_CLASS
{
  VerifierAllInformation = 0,
  VerifierPageHeapsInformation = 1,
  VerifierRuntimeFlagsInformation = 2,
  VerifierFaultInjectInformation = 3,
  MaxVerifierInformation = 4,
} RTL_VERIFIER_INFORMATION_CLASS, *PRTL_VERIFIER_INFORMATION_CLASS;

class CSurrogatedObjectList
{
  /* 0x0000 */ struct IOleInPlaceActiveObject* _pInplaceObject;
  /* 0x0008 */ struct HWND__* _hWnd;
  /* 0x0010 */ class CSurrogatedObjectList* _pNext;
}; /* size: 0x0018 */

enum tagEventLogSD
{
  EventLog_MACHINEACCESSRESTRICTIONS = 0,
  EventLog_MACHINELAUNCHRESTRICTIONS = 1,
  EventLog_DEFAULTLAUNCHPERMISSIONS = 2,
  EventLog_DEFAULTACCESSPERMISSIONS = 3,
  EventLog_SERVERLAUNCHPERMISSIONS = 4,
  EventLog_SERVERACCESSPERMISSIONSREG = 5,
  EventLog_SERVERACCESSPERMISSIONSPROG = 6,
  EventLog_DONTCARE = 7,
};

enum CreateStackTraceFlags
{
  CREATESTACKTRACE_ONLYADDRESSES = 1,
};

typedef struct __midl_frag1622_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1622_t, *P_midl_frag1622_t; /* size: 0x0028 */

struct CFileStream
{
  /* 0x0000 */ long Padding_324[12];
  /* 0x0030 */ class CGlobalFileStream* _pgfst;
  /* 0x0038 */ class CPerContext* _ppc;
  /* 0x0040 */ void* _hFile;
  /* 0x0048 */ void* _hPreDuped;
  /* 0x0050 */ unsigned long _sig;
  /* 0x0054 */ long _cReferences;
  /* 0x0058 */ struct IMalloc* const _pMalloc;
  /* 0x0060 */ void* _hMapObject;
  /* 0x0068 */ unsigned char* _pbBaseAddr;
  /* 0x0070 */ unsigned long _cbViewSize;
  /* 0x0074 */ long __PADDING__[1];
}; /* size: 0x0078 */

struct IComObjIdentity
{
}; /* size: 0x0008 */

class CClientSecurity
{
  /* 0x0000 */ long Padding_325[2];
  /* 0x0008 */ class CStdIdentity* _pStdId;
}; /* size: 0x0010 */

enum tagLOCALFLAG
{
  LOCALF_NONE = 0,
  LOCALF_NONNDR = 2048,
};

typedef enum __MIDL___MIDL_itf_privact_0000_0009_0001
{
  MARSHOPT_NO_OID_REGISTER = 1,
} _MIDL___MIDL_itf_privact_0000_0009_0001, *P_MIDL___MIDL_itf_privact_0000_0009_0001;

struct tagEMRSETWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
}; /* size: 0x0020 */

enum ACTIVATION_PROPERTIES::eFlags
{
  fFOR_SCM = 1,
  fSURROGATE = 4,
  fDO_NOT_LOAD = 8,
  fRELOAD_DARWIN = 16,
  fLSVR_ONLY = 32,
};

struct IEnumSTATPROPBAG
{
}; /* size: 0x0008 */

typedef struct _CSTRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_326;
  /* 0x0008 */ const char* Buffer;
} CSTRING, *PCSTRING; /* size: 0x0010 */

struct tagCBT_CREATEWNDW
{
  /* 0x0000 */ struct tagCREATESTRUCTW* lpcs;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0010 */

typedef struct _PRE_APP_COMPAT_INFO
{
  /* 0x0000 */ unsigned long dwEntryTotalSize;
  /* 0x0004 */ unsigned long dwResourceInfoSize;
} PRE_APP_COMPAT_INFO, *PPRE_APP_COMPAT_INFO; /* size: 0x0008 */

enum CPropertyStorage::EIsWriteable
{
  PROBE_IF_NECESSARY = 0,
  DO_NOT_PROBE = 1,
};

struct ASSOCIATIONELEMENT_
{
  /* 0x0000 */ enum ASSOCCLASS ac;
  /* 0x0004 */ long Padding_327;
  /* 0x0008 */ struct HKEY__* hkClass;
  /* 0x0010 */ const wchar_t* pszClass;
}; /* size: 0x0018 */

enum CNFFMappedStream::enumCREATE_NEW_UPDATE_STREAM
{
  CREATE_NEW_UPDATE_STREAM = 1,
  DONT_CREATE_NEW_UPDATE_STREAM = 2,
};

struct tagSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ long Padding_328;
  union
  {
    /* 0x0008 */ struct HBITMAP__* hBitmap;
    /* 0x0008 */ void* hMetaFilePict;
    /* 0x0008 */ struct HENHMETAFILE__* hEnhMetaFile;
    /* 0x0008 */ void* hGlobal;
    /* 0x0008 */ wchar_t* lpszFileName;
    /* 0x0008 */ struct IStream* pstm;
    /* 0x0008 */ struct IStorage* pstg;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct IUnknown* pUnkForRelease;
}; /* size: 0x0018 */

class CEnumGeneric
{
  /* 0x0000 */ long Padding_329[2];
  /* 0x0008 */ struct _GUID m_iid;
  /* 0x0018 */ unsigned long m_refs;
  /* 0x001c */ unsigned long m_dwCurrent;
  /* 0x0020 */ unsigned long m_dwDirection;
  /* 0x0024 */ long Padding_330;
  /* 0x0028 */ struct IEnumCallback* m_pEnumCallback;
  /* 0x0030 */ struct IEnumHolder* m_pParent;
  /* 0x0038 */ struct IEnumGeneric* m_pNext;
  /* 0x0040 */ struct IEnumGeneric* m_pPrev;
}; /* size: 0x0048 */

typedef enum _TAG_UNNAMED_18
{
  skipws = 1,
  left = 2,
  right = 4,
  internal = 8,
  dec = 16,
  oct = 32,
  hex = 64,
  showbase = 128,
  showpoint = 256,
  uppercase = 512,
  showpos = 1024,
  scientific = 2048,
  fixed = 4096,
  unitbuf = 8192,
  stdio = 16384,
} TAG_UNNAMED_18, *PTAG_UNNAMED_18;

struct <vc_attributes>::immediatebindAttribute
{
}; /* size: 0x0001 */

typedef struct _FILE_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION; /* size: 0x0028 */

typedef struct _CERT_EXTENSION
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ int fCritical;
  /* 0x000c */ long Padding_331;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CERT_EXTENSION, *PCERT_EXTENSION; /* size: 0x0020 */

struct IBuffer
{
}; /* size: 0x0008 */

enum ios::seek_dir
{
  beg = 0,
  cur = 1,
  end = 2,
};

struct IPSFactoryBuffer
{
}; /* size: 0x0008 */

enum ios::open_mode
{
  in = 1,
  out = 2,
  ate = 4,
  app = 8,
  trunc = 16,
  nocreate = 32,
  noreplace = 64,
  binary = 128,
};

typedef struct _BOOT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long FriendlyNameOffset;
  /* 0x0014 */ unsigned long BootFilePathOffset;
  /* 0x0018 */ unsigned long OsOptionsLength;
  /* 0x001c */ unsigned char OsOptions[1];
  /* 0x001d */ char __PADDING__[3];
} BOOT_ENTRY, *PBOOT_ENTRY; /* size: 0x0020 */

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ long __PADDING__[1];
} CMSG_KEY_TRANS_ENCRYPT_INFO, *PCMSG_KEY_TRANS_ENCRYPT_INFO; /* size: 0x0038 */

typedef struct _SCHANNEL_CRED
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long cCreds;
  /* 0x0008 */ const struct _CERT_CONTEXT** paCred;
  /* 0x0010 */ void* hRootStore;
  /* 0x0018 */ unsigned long cMappers;
  /* 0x001c */ long Padding_332;
  /* 0x0020 */ struct _HMAPPER** aphMappers;
  /* 0x0028 */ unsigned long cSupportedAlgs;
  /* 0x002c */ long Padding_333;
  /* 0x0030 */ unsigned int* palgSupportedAlgs;
  /* 0x0038 */ unsigned long grbitEnabledProtocols;
  /* 0x003c */ unsigned long dwMinimumCipherStrength;
  /* 0x0040 */ unsigned long dwMaximumCipherStrength;
  /* 0x0044 */ unsigned long dwSessionLifespan;
  /* 0x0048 */ unsigned long dwFlags;
  /* 0x004c */ unsigned long dwCredFormat;
} SCHANNEL_CRED, *PSCHANNEL_CRED; /* size: 0x0050 */

class CChannelHandle
{
  /* 0x0000 */ void* _hRpc;
  /* 0x0008 */ unsigned long _lAuthn;
  /* 0x000c */ unsigned long _lImp;
  /* 0x0010 */ void* _hToken;
  /* 0x0018 */ long _eState;
  /* 0x001c */ int _fFirstCall;
  /* 0x0020 */ unsigned long _cRef;
  /* 0x0024 */ long Padding_334;
  /* 0x0028 */ struct _SCHANNEL_CRED _sCred;
  /* 0x0078 */ const struct _CERT_CONTEXT* _pCert;
}; /* size: 0x0080 */

enum tagOXIDFLAGS
{
  OXIDF_REGISTERED = 1,
  OXIDF_MACHINE_LOCAL = 2,
  OXIDF_STOPPED = 4,
  OXIDF_PENDINGRELEASE = 8,
  OXIDF_REGISTERINGOIDS = 32,
  OXIDF_MTASERVER = 64,
  OXIDF_NTASERVER = 128,
  OXIDF_STASERVER = 256,
  OXIDF_REMOTEINITIALIZED = 512,
  OXIDF_MTASTOPPED = 68,
  OXIDF_NTASTOPPED = 132,
};

struct stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_335[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
}; /* size: 0x0030 */

struct IComProcessInfo2
{
}; /* size: 0x0008 */

struct WireThatPart1
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long unique;
}; /* size: 0x0008 */

struct WireExtentArray
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ unsigned long unique;
  /* 0x000c */ unsigned long rounded_size;
  /* 0x0010 */ unsigned long unique_flag[2];
}; /* size: 0x0018 */

struct WireExtent
{
  /* 0x0000 */ unsigned long rounded_size;
  /* 0x0004 */ struct _GUID id;
  /* 0x0014 */ unsigned long size;
}; /* size: 0x0018 */

struct WireThatPart2
{
  /* 0x0000 */ struct WireThatPart1 part1;
  /* 0x0008 */ struct WireExtentArray ea;
  /* 0x0020 */ struct WireExtent e;
}; /* size: 0x0038 */

union WireThat
{
  union
  {
    /* 0x0000 */ struct WireThatPart1 c;
    /* 0x0000 */ struct WireThatPart2 d;
  }; /* size: 0x0038 */
}; /* size: 0x0038 */

typedef struct _CERT_RDN
{
  /* 0x0000 */ unsigned long cRDNAttr;
  /* 0x0004 */ long Padding_336;
  /* 0x0008 */ struct _CERT_RDN_ATTR* rgRDNAttr;
} CERT_RDN, *PCERT_RDN; /* size: 0x0010 */

class IFinish
{
}; /* size: 0x0008 */

enum tagFOCOXID
{
  FOCOXID_REF = 1,
  FOCOXID_NOREF = 2,
};

enum tagCallType
{
  CALLTYPE_NONE = 0,
  CALLTYPE_SYNCCALL = 1,
  CALLTYPE_SYNCENTER = 2,
  CALLTYPE_SYNCLEAVE = 3,
  CALLTYPE_SYNCRETURN = 4,
  CALLTYPE_BEGINCALL = 5,
  CALLTYPE_BEGINRETURN = 6,
  CALLTYPE_BEGINENTER = 7,
  CALLTYPE_BEGINLEAVE = 8,
  CALLTYPE_FINISHENTER = 9,
  CALLTYPE_FINISHLEAVE = 10,
  CALLTYPE_FINISHCALL = 11,
  CALLTYPE_FINISHRETURN = 12,
};

typedef struct _HARDERROR_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ long Status;
  /* 0x002c */ long Padding_337;
  /* 0x0030 */ union _LARGE_INTEGER ErrorTime;
  /* 0x0038 */ unsigned long ValidResponseOptions;
  /* 0x003c */ unsigned long Response;
  /* 0x0040 */ unsigned long NumberOfParameters;
  /* 0x0044 */ unsigned long UnicodeStringParameterMask;
  /* 0x0048 */ unsigned __int64 Parameters[5];
} HARDERROR_MSG, *PHARDERROR_MSG; /* size: 0x0070 */

enum tagDISCTYPE
{
  DISCTYPE_NORMAL = 1,
  DISCTYPE_RELEASE = 2,
  DISCTYPE_APPLICATION = 4,
  DISCTYPE_UNINIT = 8,
  DISCTYPE_RUNDOWN = 16,
  DISCTYPE_SYSTEM = 32,
};

typedef union _PROCESS_MEMORY_ALLOCATION_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TopDown : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MEMORY_ALLOCATION_MODE, *PPROCESS_MEMORY_ALLOCATION_MODE; /* size: 0x0004 */

enum tagSTDID_FLAGS
{
  STDID_SERVER = 0,
  STDID_CLIENT = 1,
  STDID_FREETHREADED = 2,
  STDID_HAVEID = 4,
  STDID_IGNOREID = 8,
  STDID_AGGREGATED = 16,
  STDID_INDESTRUCTOR = 256,
  STDID_LOCKEDINMEM = 512,
  STDID_DEFHANDLER = 1024,
  STDID_AGGID = 2048,
  STDID_STCMRSHL = 4096,
  STDID_DESTROYID = 8192,
  STDID_SYSTEM = 16384,
  STDID_FTM = 0xffff8000,
  STDID_NOIEC = 0x10000,
  STDID_ALL = 0x1ff1f,
};

typedef struct _OBJECT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_338;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_339;
  /* 0x0020 */ void* SecurityDescriptor;
  /* 0x0028 */ void* SecurityQualityOfService;
} OBJECT_ATTRIBUTES, *POBJECT_ATTRIBUTES; /* size: 0x0030 */

struct <vc_attributes>::threadingAttribute
{
  /* 0x0000 */ enum <vc_attributes>::threadingAttribute::threading_e value;
}; /* size: 0x0004 */

enum CChannelObject::eState
{
  STATE_ERROR = 1,
  STATE_READYFORNEGOTIATE = 2,
  STATE_READYFORGETBUFFER = 3,
  STATE_READYFORSEND = 4,
  STATE_SENDING = 5,
  STATE_READYFORSIGNAL = 6,
  STATE_RECEIVING = 7,
  STATE_READYFORRECEIVE = 8,
  STATE_READYFORFREEBUFFER = 9,
  STATE_AMBIGUOUS = 10,
};

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ long __PADDING__[1];
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION; /* size: 0x0030 */

struct IContextCallback
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_19
{
  STATE_WAITINGFORSIGNAL = 0,
  STATE_SIGNALED = 1,
  STATE_ERROR = 2,
} TAG_UNNAMED_19, *PTAG_UNNAMED_19;

typedef struct _KEY_TYPE_SUBTYPE
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ struct _GUID Type;
  /* 0x0014 */ struct _GUID Subtype;
} KEY_TYPE_SUBTYPE, *PKEY_TYPE_SUBTYPE; /* size: 0x0024 */

typedef struct _FILE_MODE_INFORMATION
{
  /* 0x0000 */ unsigned long Mode;
} FILE_MODE_INFORMATION, *PFILE_MODE_INFORMATION; /* size: 0x0004 */

enum WPP_DEFINE_BIT_NAMES
{
  WPP_BLOCK_START_OLE32 = 0,
  WPP_BIT_ERRORS = 1,
  WPP_BIT_WARNING = 2,
  WPP_BIT_INFO = 3,
  WPP_BIT_VERBOSE = 4,
  WPP_BIT_CHATTY = 5,
  WPP_BIT_GARRULOUS = 6,
  WPP_BIT_LOQUACIOUS = 7,
  WPP_BLOCK_END_OLE32 = 8,
};

typedef struct __midl_frag1019_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1019_t, *P_midl_frag1019_t; /* size: 0x0048 */

struct tagCTXVERSION
{
  /* 0x0000 */ short ThisVersion;
  /* 0x0002 */ short MinVersion;
}; /* size: 0x0004 */

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_340;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long SecurityDescriptorLength;
  /* 0x002c */ long Padding_341;
  /* 0x0030 */ void* SecurityDescriptor;
  /* 0x0038 */ unsigned short ClassLength;
  /* 0x003a */ char Padding_342[6];
  /* 0x0040 */ void* ClassData;
  /* 0x0048 */ unsigned char SymbolicLink;
  /* 0x0049 */ char __PADDING__[7];
} JOURNAL_CREATE_DELETE_KEY_INFORMATION, *PJOURNAL_CREATE_DELETE_KEY_INFORMATION; /* size: 0x0050 */

class CPolicySet
{
  /* 0x0000 */ long Padding_343[2];
  /* 0x0008 */ struct SHashChain _chain;
  /* 0x0018 */ unsigned long _dwFlags;
  /* 0x001c */ unsigned long _cRefs;
  /* 0x0020 */ unsigned long _cPolicies;
  /* 0x0024 */ unsigned long _dwAptID;
  /* 0x0028 */ class CObjectContext* _pClientCtx;
  /* 0x0030 */ class CObjectContext* _pServerCtx;
  /* 0x0038 */ struct tagPolicyEntry* _pFirstEntry;
  /* 0x0040 */ struct tagPolicyEntry* _pLastEntry;
  /* 0x0048 */ struct tagSPSCache _PSCache;
  union
  {
    /* 0x0000 */ class CPageAllocator s_PSallocator;
    /* 0x0000 */ class CPageAllocator s_PEallocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cObjects;
  }; /* size: 0x0080 */
}; /* size: 0x0068 */

typedef enum __MIDL_ICallFrame_0003
{
  CALLFRAME_COPY_NESTED = 1,
  CALLFRAME_COPY_INDEPENDENT = 2,
} _MIDL_ICallFrame_0003, *P_MIDL_ICallFrame_0003;

typedef struct _CERT_TRUST_STATUS
{
  /* 0x0000 */ unsigned long dwErrorStatus;
  /* 0x0004 */ unsigned long dwInfoStatus;
} CERT_TRUST_STATUS, *PCERT_TRUST_STATUS; /* size: 0x0008 */

typedef struct _CERT_SIMPLE_CHAIN
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cElement;
  /* 0x0010 */ struct _CERT_CHAIN_ELEMENT** rgpElement;
  /* 0x0018 */ struct _CERT_TRUST_LIST_INFO* pTrustListInfo;
  /* 0x0020 */ int fHasRevocationFreshnessTime;
  /* 0x0024 */ unsigned long dwRevocationFreshnessTime;
} CERT_SIMPLE_CHAIN, *PCERT_SIMPLE_CHAIN; /* size: 0x0028 */

typedef struct _MUILANGINFO
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short LangId;
  /* 0x0006 */ short LangNameIndex;
  /* 0x0008 */ unsigned short FallbackTypes;
  /* 0x000a */ short NeutralLangSpec;
  /* 0x000c */ short FallbackSpecs[4];
  /* 0x0014 */ short AlternateCodePage[4];
} MUILANGINFO, *PMUILANGINFO; /* size: 0x001c */

struct tagSOLE_AUTHENTICATION_INFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ void* pAuthInfo;
}; /* size: 0x0010 */

typedef enum _RUNLEVEL
{
  RUNLEVEL_LUA = 0,
  RUNLEVEL_HIGHEST = 1,
  RUNLEVEL_ADMIN = 2,
  RUNLEVEL_MAX_NON_UIA = 3,
  RUNLEVEL_LUA_UIA = 16,
  RUNLEVEL_HIGHEST_UIA = 17,
  RUNLEVEL_ADMIN_UIA = 18,
  RUNLEVEL_MAX = 19,
} RUNLEVEL, *PRUNLEVEL;

class CDbgGuidStr
{
}; /* size: 0x0001 */

typedef struct _devicemodeA
{
  /* 0x0000 */ unsigned char dmDeviceName[32];
  /* 0x0020 */ unsigned short dmSpecVersion;
  /* 0x0022 */ unsigned short dmDriverVersion;
  /* 0x0024 */ unsigned short dmSize;
  /* 0x0026 */ unsigned short dmDriverExtra;
  /* 0x0028 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x002c */ short dmOrientation;
      /* 0x002e */ short dmPaperSize;
      /* 0x0030 */ short dmPaperLength;
      /* 0x0032 */ short dmPaperWidth;
      /* 0x0034 */ short dmScale;
      /* 0x0036 */ short dmCopies;
      /* 0x0038 */ short dmDefaultSource;
      /* 0x003a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x002c */ struct _POINTL dmPosition;
      /* 0x0034 */ unsigned long dmDisplayOrientation;
      /* 0x0038 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x003c */ short dmColor;
  /* 0x003e */ short dmDuplex;
  /* 0x0040 */ short dmYResolution;
  /* 0x0042 */ short dmTTOption;
  /* 0x0044 */ short dmCollate;
  /* 0x0046 */ unsigned char dmFormName[32];
  /* 0x0066 */ unsigned short dmLogPixels;
  /* 0x0068 */ unsigned long dmBitsPerPel;
  /* 0x006c */ unsigned long dmPelsWidth;
  /* 0x0070 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x0074 */ unsigned long dmDisplayFlags;
    /* 0x0074 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x0078 */ unsigned long dmDisplayFrequency;
  /* 0x007c */ unsigned long dmICMMethod;
  /* 0x0080 */ unsigned long dmICMIntent;
  /* 0x0084 */ unsigned long dmMediaType;
  /* 0x0088 */ unsigned long dmDitherType;
  /* 0x008c */ unsigned long dmReserved1;
  /* 0x0090 */ unsigned long dmReserved2;
  /* 0x0094 */ unsigned long dmPanningWidth;
  /* 0x0098 */ unsigned long dmPanningHeight;
} devicemodeA, *PdevicemodeA; /* size: 0x009c */

struct IDebug
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_immact_0000_0002_0002
{
  INVALID_LUA_RUNLEVEL = -1,
} _MIDL___MIDL_itf_immact_0000_0002_0002, *P_MIDL___MIDL_itf_immact_0000_0002_0002;

struct IUri
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_OAEP_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0008 */ unsigned char* pbLabel;
  /* 0x0010 */ unsigned long cbLabel;
  /* 0x0014 */ long __PADDING__[1];
} BCRYPT_OAEP_PADDING_INFO, *PBCRYPT_OAEP_PADDING_INFO; /* size: 0x0018 */

struct IInterfaceInfo
{
}; /* size: 0x0008 */

typedef struct _IMAGE_TLS_DIRECTORY64
{
  /* 0x0000 */ unsigned __int64 StartAddressOfRawData;
  /* 0x0008 */ unsigned __int64 EndAddressOfRawData;
  /* 0x0010 */ unsigned __int64 AddressOfIndex;
  /* 0x0018 */ unsigned __int64 AddressOfCallBacks;
  /* 0x0020 */ unsigned long SizeOfZeroFill;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY64, *PIMAGE_TLS_DIRECTORY64; /* size: 0x0028 */

enum tagORFLAG
{
  ORF_CONNECTED = 1,
  ORF_STRINGSREGISTERED = 2,
  ORF_INBULKUPDATECALL = 4,
};

typedef struct _KLDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ void* ExceptionTable;
  /* 0x0018 */ unsigned long ExceptionTableSize;
  /* 0x001c */ long Padding_344;
  /* 0x0020 */ void* GpValue;
  /* 0x0028 */ struct _NON_PAGED_DEBUG_INFO* NonPagedDebugInfo;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_345;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Unused5;
  /* 0x0070 */ void* SectionPointer;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long CoverageSectionSize;
  /* 0x0080 */ void* CoverageSection;
  /* 0x0088 */ void* LoadedImports;
  /* 0x0090 */ void* PatchInformation;
} KLDR_DATA_TABLE_ENTRY, *PKLDR_DATA_TABLE_ENTRY; /* size: 0x0098 */

enum tagIDLFLAGS
{
  IDLF_CREATE = 1,
  IDLF_STRONG = 2,
  IDLF_NOPING = 4,
  IDLF_NOIEC = 8,
  IDLF_FTM = 16,
};

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char ShareDisposition;
  /* 0x0002 */ unsigned short Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Generic;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Port;
      struct
      {
        /* 0x0004 */ unsigned long Level;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned __int64 Affinity;
      } /* size: 0x0010 */ Interrupt;
      struct
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Reserved;
            /* 0x0006 */ unsigned short MessageCount;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Raw;
          struct
          {
            /* 0x0004 */ unsigned long Level;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Translated;
        }; /* size: 0x0010 */
      } /* size: 0x0010 */ MessageInterrupt;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Memory;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long Port;
        /* 0x000c */ unsigned long Reserved1;
      } /* size: 0x000c */ Dma;
      struct
      {
        /* 0x0004 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0004 */ unsigned long Start;
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Reserved;
      } /* size: 0x000c */ BusNumber;
      struct
      {
        /* 0x0004 */ unsigned long DataSize;
        /* 0x0008 */ unsigned long Reserved1;
        /* 0x000c */ unsigned long Reserved2;
      } /* size: 0x000c */ DeviceSpecificData;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length40;
      } /* size: 0x000c */ Memory40;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length48;
      } /* size: 0x000c */ Memory48;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length64;
      } /* size: 0x000c */ Memory64;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _CM_PARTIAL_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST; /* size: 0x001c */

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR; /* size: 0x0024 */

typedef struct _CM_RESOURCE_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST; /* size: 0x0028 */

typedef struct _MEMORY_WORKING_SET_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfEntries;
  /* 0x0008 */ struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
} MEMORY_WORKING_SET_INFORMATION, *PMEMORY_WORKING_SET_INFORMATION; /* size: 0x0010 */

class CEnumClassesOfCategories
{
  /* 0x0000 */ long Padding_346[2];
  /* 0x0008 */ unsigned long m_dwRefCount;
  /* 0x000c */ long Padding_347;
  /* 0x0010 */ struct HKEY__* m_hClassKey;
  /* 0x0018 */ unsigned long m_dwIndex;
  /* 0x001c */ unsigned long m_cImplemented;
  /* 0x0020 */ struct _GUID* m_rgcatidImpl;
  /* 0x0028 */ unsigned long m_cRequired;
  /* 0x002c */ long Padding_348;
  /* 0x0030 */ struct _GUID* m_rgcatidReq;
  /* 0x0038 */ struct IEnumGUID* m_pcsIEnumClsid;
  /* 0x0040 */ int m_fromcs;
  /* 0x0044 */ long Padding_349;
  /* 0x0048 */ struct IUnknown* m_pCloned;
}; /* size: 0x0050 */

typedef enum _ACCESS_MODE
{
  NOT_USED_ACCESS = 0,
  GRANT_ACCESS = 1,
  SET_ACCESS = 2,
  DENY_ACCESS = 3,
  REVOKE_ACCESS = 4,
  SET_AUDIT_SUCCESS = 5,
  SET_AUDIT_FAILURE = 6,
} ACCESS_MODE, *PACCESS_MODE;

typedef enum _TRUSTEE_TYPE
{
  TRUSTEE_IS_UNKNOWN = 0,
  TRUSTEE_IS_USER = 1,
  TRUSTEE_IS_GROUP = 2,
  TRUSTEE_IS_DOMAIN = 3,
  TRUSTEE_IS_ALIAS = 4,
  TRUSTEE_IS_WELL_KNOWN_GROUP = 5,
  TRUSTEE_IS_DELETED = 6,
  TRUSTEE_IS_INVALID = 7,
  TRUSTEE_IS_COMPUTER = 8,
} TRUSTEE_TYPE, *PTRUSTEE_TYPE;

struct tagBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ long Padding_350;
  /* 0x0018 */ void* bmBits;
}; /* size: 0x0020 */

struct tagDIBSECTION
{
  /* 0x0000 */ struct tagBITMAP dsBm;
  /* 0x0020 */ struct tagBITMAPINFOHEADER dsBmih;
  /* 0x0048 */ unsigned long dsBitfields[3];
  /* 0x0054 */ long Padding_351;
  /* 0x0058 */ void* dshSection;
  /* 0x0060 */ unsigned long dsOffset;
  /* 0x0064 */ long __PADDING__[1];
}; /* size: 0x0068 */

class CRtlSmartUcsEncoderTraits<_LUTF8_STRING>
{
}; /* size: 0x0001 */

typedef enum _tagEXPR_TOKEN
{
  FC_EXPR_START = 0,
  FC_EXPR_ILLEGAL = 0,
  FC_EXPR_CONST32 = 1,
  FC_EXPR_CONST64 = 2,
  FC_EXPR_VAR = 3,
  FC_EXPR_OPER = 4,
  FC_EXPR_NOOP = 5,
  FC_EXPR_END = 6,
} tagEXPR_TOKEN, *PtagEXPR_TOKEN;

struct IErrorInfo
{
}; /* size: 0x0008 */

struct IComCatalogSettings
{
}; /* size: 0x0008 */

typedef enum _REGQUERY_FLAGS
{
  RQ_MULTISZ = 1,
  RQ_ALLOWQUOTEQUOTE = 2,
} REGQUERY_FLAGS, *PREGQUERY_FLAGS;

struct WINTRUST_FILE_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_352;
  /* 0x0008 */ const wchar_t* pcwszFilePath;
  /* 0x0010 */ void* hFile;
  /* 0x0018 */ struct _GUID* pgKnownSubject;
}; /* size: 0x0020 */

struct <vc_attributes>::licensedAttribute
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_20
{
  UserMarshal_Index_BSTR = 0,
  UserMarshal_Index_VARIANT = 1,
  UserMarshal_Index_SafeArray = 2,
} TAG_UNNAMED_20, *PTAG_UNNAMED_20;

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA
{
  /* 0x0000 */ char* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOA, *PSERVICE_REQUIRED_PRIVILEGES_INFOA; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_21
{
  CB_PRIVATE_BUFFER = 256,
} TAG_UNNAMED_21, *PTAG_UNNAMED_21;

class CDefLink::CPrivUnknown
{
}; /* size: 0x0008 */

class CDefLink
{
  /* 0x0000 */ long Padding_353[20];
  /* 0x0050 */ class CDefLink::CPrivUnknown m_Unknown;
  /* 0x0058 */ class CDefLink::CAdvSinkImpl m_AdviseSink;
  /* 0x0060 */ unsigned long m_flags;
  /* 0x0064 */ unsigned long m_dwObjFlags;
  /* 0x0068 */ struct IDataObject* m_pDataDelegate;
  /* 0x0070 */ struct IOleObject* m_pOleDelegate;
  /* 0x0078 */ struct IRunnableObject* m_pRODelegate;
  /* 0x0080 */ struct IOleItemContainer* m_pOleItemContainerDelegate;
  /* 0x0088 */ HRESULT m_ContentSRVMSHResult;
  /* 0x008c */ unsigned long m_ContentSRVMSBits;
  /* 0x0090 */ HRESULT m_ContentREGMSHResult;
  /* 0x0094 */ unsigned long m_ContentREGMSBits;
  /* 0x0098 */ unsigned long m_cRefsOnLink;
  /* 0x009c */ long Padding_354;
  /* 0x00a0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00a8 */ struct IMoniker* m_pMonikerAbs;
  /* 0x00b0 */ struct IMoniker* m_pMonikerRel;
  /* 0x00b8 */ struct IUnknown* m_pUnkDelegate;
  /* 0x00c0 */ unsigned long m_dwUpdateOpt;
  /* 0x00c4 */ struct _GUID m_clsid;
  /* 0x00d4 */ long Padding_355;
  /* 0x00d8 */ struct IStorage* m_pStg;
  /* 0x00e0 */ class COleCache* m_pCOleCache;
  /* 0x00e8 */ class COAHolder* m_pCOAHolder;
  /* 0x00f0 */ unsigned long m_dwConnOle;
  /* 0x00f4 */ long Padding_356;
  /* 0x00f8 */ class CDataAdviseCache* m_pDataAdvCache;
  /* 0x0100 */ struct IOleClientSite* m_pAppClientSite;
  /* 0x0108 */ unsigned long m_dwConnTime;
  /* 0x010c */ struct _FILETIME m_ltChangeOfUpdate;
  /* 0x0114 */ struct _FILETIME m_ltKnownUpToDate;
  /* 0x011c */ struct _FILETIME m_rtUpdate;
}; /* size: 0x0128 */

typedef struct _LONGDOUBLE
{
  /* 0x0000 */ double x;
} LONGDOUBLE, *PLONGDOUBLE; /* size: 0x0008 */

struct PROCESSOR_IDLESTATE_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned char DemotePercent;
  /* 0x0005 */ unsigned char PromotePercent;
  /* 0x0006 */ unsigned char Spare[2];
}; /* size: 0x0008 */

enum tagEMFWRITETYPE
{
  WRITE_AS_WMF = 13,
  WRITE_AS_EMF = 17,
};

typedef struct _LDR_ENUM_RESOURCE_ENTRY
{
  /* 0x0000 */ union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 NameOrId;
      /* 0x0000 */ struct _IMAGE_RESOURCE_DIRECTORY_STRING* Name;
      struct
      {
        /* 0x0000 */ unsigned short Id;
        /* 0x0002 */ unsigned short NameIsPresent;
      }; /* size: 0x0004 */
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Path[3];
  /* 0x0018 */ void* Data;
  /* 0x0020 */ unsigned long Size;
  /* 0x0024 */ unsigned long Reserved;
} LDR_ENUM_RESOURCE_ENTRY, *PLDR_ENUM_RESOURCE_ENTRY; /* size: 0x0028 */

class ITrackingMoniker
{
}; /* size: 0x0008 */

struct IInternetProtocolSinkStackable
{
}; /* size: 0x0008 */

struct tagIPIDTmp
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long cStrongRefs;
  /* 0x0008 */ unsigned long cWeakRefs;
  /* 0x000c */ unsigned long cPrivateRefs;
  /* 0x0010 */ void* pv;
  /* 0x0018 */ struct IUnknown* pStub;
  /* 0x0020 */ class OXIDEntry* pOXIDEntry;
}; /* size: 0x0028 */

typedef enum __MIDL___MIDL_itf_odeth_0000_0001_0001
{
  ORS_DONTRUNDOWN = 0,
  ORS_OK_TO_RUNDOWN = 1,
  ORS_OID_PINNED = 2,
} _MIDL___MIDL_itf_odeth_0000_0001_0001, *P_MIDL___MIDL_itf_odeth_0000_0001_0001;

enum Ole32SQMFlags
{
  SixteenbitOLEUsage = 1,
  OLEDDEUsage = 2,
};

enum SQM_TYPE
{
  SQM_TYPE_NONE = 0,
  SQM_TYPE_DWORD = 1,
  SQM_TYPE_STRING = 2,
};

struct FRAME_GetIDsOfNames
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ const struct _GUID& riid;
  /* 0x0010 */ wchar_t** rgszNames;
  /* 0x0018 */ unsigned int cNames;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned long lcid;
  /* 0x0024 */ char __pad4[4];
  /* 0x0028 */ long* rgDispId;
}; /* size: 0x0030 */

typedef struct _FLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct tagSTGMEDIUM Stgmed;
} FLAG_STGMEDIUM, *PFLAG_STGMEDIUM; /* size: 0x0020 */

enum ClassRegistration::SERVER_TYPE
{
  INPROC_SERVER = 1,
  LOCAL_SERVER = 4,
  INPROC_HANDLER = 2,
  SERVER_TYPE_NONE = 0,
};

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
} SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION, *PSYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION; /* size: 0x0004 */

struct <vc_attributes>::controlAttribute
{
}; /* size: 0x0001 */

enum CALLFRAME_NULL
{
  CALLFRAME_NULL_NONE = 0,
  CALLFRAME_NULL_INOUT = 2,
  CALLFRAME_NULL_OUT = 4,
  CALLFRAME_NULL_ALL = 6,
};

enum tagDLFlags
{
  DL_SAME_AS_LOAD = 1,
  DL_NO_SCRIBBLE_MODE = 2,
  DL_DIRTY_LINK = 4,
  DL_LOCKED_CONTAINER = 8,
  DL_LOCKED_RUNNABLEOBJECT = 16,
  DL_LOCKED_OLEITEMCONTAINER = 32,
  DL_CLEANEDUP = 64,
};

enum OfflineFolderStatus
{
  OFS_INACTIVE = -1,
  OFS_ONLINE = 0,
  OFS_OFFLINE = 1,
  OFS_SERVERBACK = 2,
  OFS_DIRTYCACHE = 3,
};

struct HMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _VM_COUNTERS
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_357;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
} VM_COUNTERS, *PVM_COUNTERS; /* size: 0x0058 */

enum tagCONDITION_OPERATION
{
  COP_IMPLICIT = 0,
  COP_EQUAL = 1,
  COP_NOTEQUAL = 2,
  COP_LESSTHAN = 3,
  COP_GREATERTHAN = 4,
  COP_LESSTHANOREQUAL = 5,
  COP_GREATERTHANOREQUAL = 6,
  COP_VALUE_STARTSWITH = 7,
  COP_VALUE_ENDSWITH = 8,
  COP_VALUE_CONTAINS = 9,
  COP_VALUE_NOTCONTAINS = 10,
  COP_DOSWILDCARDS = 11,
  COP_WORD_EQUAL = 12,
  COP_WORD_STARTSWITH = 13,
  COP_APPLICATION_SPECIFIC = 14,
};

enum tagSTRUCTURED_QUERY_MULTIOPTION
{
  SQMO_VIRTUAL_PROPERTY = 0,
  SQMO_DEFAULT_PROPERTY = 1,
  SQMO_GENERATOR_FOR_TYPE = 2,
};

typedef struct _FOCUS_EVENT_RECORD
{
  /* 0x0000 */ int bSetFocus;
} FOCUS_EVENT_RECORD, *PFOCUS_EVENT_RECORD; /* size: 0x0004 */

struct IDisconnectSink
{
}; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_PARSE_ERROR
{
  SQPE_NONE = 0,
  SQPE_EXTRA_OPENING_PARENTHESIS = 1,
  SQPE_EXTRA_CLOSING_PARENTHESIS = 2,
  SQPE_IGNORED_MODIFIER = 3,
  SQPE_IGNORED_CONNECTOR = 4,
  SQPE_IGNORED_KEYWORD = 5,
  SQPE_UNHANDLED = 6,
};

struct tagMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ long Padding_358;
  /* 0x0010 */ struct HMETAFILE__* hMF;
}; /* size: 0x0018 */

struct tagOLEMENUITEM
{
  /* 0x0000 */ unsigned int item;
  /* 0x0004 */ unsigned short fwPopup;
  /* 0x0006 */ char Padding_359[2];
  /* 0x0008 */ int fObjectMenu;
}; /* size: 0x000c */

enum tagINTERVAL_LIMIT_KIND
{
  ILK_EXPLICIT_INCLUDED = 0,
  ILK_EXPLICIT_EXCLUDED = 1,
  ILK_NEGATIVE_INFINITY = 2,
  ILK_POSITIVE_INFINITY = 3,
};

struct tagCOLORCORRECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPalette;
  /* 0x000c */ unsigned long nFirstEntry;
  /* 0x0010 */ unsigned long nPalEntries;
  /* 0x0014 */ unsigned long nReserved;
}; /* size: 0x0018 */

typedef struct _CMC_TAGGED_CERT_REQUEST
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_360;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SignedCertRequest;
} CMC_TAGGED_CERT_REQUEST, *PCMC_TAGGED_CERT_REQUEST; /* size: 0x0018 */

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0013_0001
{
  NEC_LOW = 0,
  NEC_MEDIUM = 1,
  NEC_HIGH = 2,
} _MIDL___MIDL_itf_structuredquery_0000_0013_0001, *P_MIDL___MIDL_itf_structuredquery_0000_0013_0001;

typedef struct _NTFS_STATISTICS
{
  /* 0x0000 */ unsigned long LogFileFullExceptions;
  /* 0x0004 */ unsigned long OtherExceptions;
  /* 0x0008 */ unsigned long MftReads;
  /* 0x000c */ unsigned long MftReadBytes;
  /* 0x0010 */ unsigned long MftWrites;
  /* 0x0014 */ unsigned long MftWriteBytes;
  struct
  {
    /* 0x0018 */ unsigned short Write;
    /* 0x001a */ unsigned short Create;
    /* 0x001c */ unsigned short SetInfo;
    /* 0x001e */ unsigned short Flush;
  } /* size: 0x0008 */ MftWritesUserLevel;
  /* 0x0020 */ unsigned short MftWritesFlushForLogFileFull;
  /* 0x0022 */ unsigned short MftWritesLazyWriter;
  /* 0x0024 */ unsigned short MftWritesUserRequest;
  /* 0x0026 */ char Padding_361[2];
  /* 0x0028 */ unsigned long Mft2Writes;
  /* 0x002c */ unsigned long Mft2WriteBytes;
  struct
  {
    /* 0x0030 */ unsigned short Write;
    /* 0x0032 */ unsigned short Create;
    /* 0x0034 */ unsigned short SetInfo;
    /* 0x0036 */ unsigned short Flush;
  } /* size: 0x0008 */ Mft2WritesUserLevel;
  /* 0x0038 */ unsigned short Mft2WritesFlushForLogFileFull;
  /* 0x003a */ unsigned short Mft2WritesLazyWriter;
  /* 0x003c */ unsigned short Mft2WritesUserRequest;
  /* 0x003e */ char Padding_362[2];
  /* 0x0040 */ unsigned long RootIndexReads;
  /* 0x0044 */ unsigned long RootIndexReadBytes;
  /* 0x0048 */ unsigned long RootIndexWrites;
  /* 0x004c */ unsigned long RootIndexWriteBytes;
  /* 0x0050 */ unsigned long BitmapReads;
  /* 0x0054 */ unsigned long BitmapReadBytes;
  /* 0x0058 */ unsigned long BitmapWrites;
  /* 0x005c */ unsigned long BitmapWriteBytes;
  /* 0x0060 */ unsigned short BitmapWritesFlushForLogFileFull;
  /* 0x0062 */ unsigned short BitmapWritesLazyWriter;
  /* 0x0064 */ unsigned short BitmapWritesUserRequest;
  struct
  {
    /* 0x0066 */ unsigned short Write;
    /* 0x0068 */ unsigned short Create;
    /* 0x006a */ unsigned short SetInfo;
  } /* size: 0x0006 */ BitmapWritesUserLevel;
  /* 0x006c */ unsigned long MftBitmapReads;
  /* 0x0070 */ unsigned long MftBitmapReadBytes;
  /* 0x0074 */ unsigned long MftBitmapWrites;
  /* 0x0078 */ unsigned long MftBitmapWriteBytes;
  /* 0x007c */ unsigned short MftBitmapWritesFlushForLogFileFull;
  /* 0x007e */ unsigned short MftBitmapWritesLazyWriter;
  /* 0x0080 */ unsigned short MftBitmapWritesUserRequest;
  struct
  {
    /* 0x0082 */ unsigned short Write;
    /* 0x0084 */ unsigned short Create;
    /* 0x0086 */ unsigned short SetInfo;
    /* 0x0088 */ unsigned short Flush;
  } /* size: 0x0008 */ MftBitmapWritesUserLevel;
  /* 0x008a */ char Padding_363[2];
  /* 0x008c */ unsigned long UserIndexReads;
  /* 0x0090 */ unsigned long UserIndexReadBytes;
  /* 0x0094 */ unsigned long UserIndexWrites;
  /* 0x0098 */ unsigned long UserIndexWriteBytes;
  /* 0x009c */ unsigned long LogFileReads;
  /* 0x00a0 */ unsigned long LogFileReadBytes;
  /* 0x00a4 */ unsigned long LogFileWrites;
  /* 0x00a8 */ unsigned long LogFileWriteBytes;
  struct
  {
    /* 0x00ac */ unsigned long Calls;
    /* 0x00b0 */ unsigned long Clusters;
    /* 0x00b4 */ unsigned long Hints;
    /* 0x00b8 */ unsigned long RunsReturned;
    /* 0x00bc */ unsigned long HintsHonored;
    /* 0x00c0 */ unsigned long HintsClusters;
    /* 0x00c4 */ unsigned long Cache;
    /* 0x00c8 */ unsigned long CacheClusters;
    /* 0x00cc */ unsigned long CacheMiss;
    /* 0x00d0 */ unsigned long CacheMissClusters;
  } /* size: 0x0028 */ Allocate;
} NTFS_STATISTICS, *PNTFS_STATISTICS; /* size: 0x00d4 */

typedef struct _SECTION_IMAGE_INFORMATION32
{
  /* 0x0000 */ unsigned long TransferAddress;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ unsigned long MaximumStackSize;
  /* 0x000c */ unsigned long CommittedStackSize;
  /* 0x0010 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned short SubSystemMinorVersion;
      /* 0x0016 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0014 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned long GpValue;
  /* 0x001c */ unsigned short ImageCharacteristics;
  /* 0x001e */ unsigned short DllCharacteristics;
  /* 0x0020 */ unsigned short Machine;
  /* 0x0022 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0023 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0023 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0023 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0023 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0024 */ unsigned long LoaderFlags;
  /* 0x0028 */ unsigned long ImageFileSize;
  /* 0x002c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION32, *PSECTION_IMAGE_INFORMATION32; /* size: 0x0030 */

typedef enum _SPACTION
{
  SPACTION_NONE = 0,
  SPACTION_MOVING = 1,
  SPACTION_COPYING = 2,
  SPACTION_RECYCLING = 3,
  SPACTION_APPLYINGATTRIBS = 4,
  SPACTION_DOWNLOADING = 5,
  SPACTION_SEARCHING_INTERNET = 6,
  SPACTION_CALCULATING = 7,
  SPACTION_UPLOADING = 8,
  SPACTION_SEARCHING_FILES = 9,
  SPACTION_DELETING = 10,
  SPACTION_RENAMING = 11,
  SPACTION_FORMATTING = 12,
} SPACTION, *PSPACTION;

typedef enum _SPTEXT
{
  SPTEXT_ACTIONDESCRIPTION = 1,
  SPTEXT_ACTIONDETAIL = 2,
} SPTEXT, *PSPTEXT;

struct KEY_PID_ARRAY
{
  /* 0x0000 */ void* PID;
  /* 0x0008 */ struct _UNICODE_STRING KeyName;
}; /* size: 0x0018 */

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_364;
  /* 0x0008 */ struct KEY_PID_ARRAY KeyArray[1];
} KEY_OPEN_SUBKEYS_INFORMATION, *PKEY_OPEN_SUBKEYS_INFORMATION; /* size: 0x0020 */

enum tagBANDSITECID
{
  BSID_BANDADDED = 0,
  BSID_BANDREMOVED = 1,
};

struct IMallocSpy
{
}; /* size: 0x0008 */

enum tagMENUPOPUPSELECT
{
  MPOS_EXECUTE = 0,
  MPOS_FULLCANCEL = 1,
  MPOS_CANCELLEVEL = 2,
  MPOS_SELECTLEFT = 3,
  MPOS_SELECTRIGHT = 4,
  MPOS_CHILDTRACKING = 5,
};

struct IUserTokenWithImpersonate
{
}; /* size: 0x0008 */

class HashVoidPtr
{
}; /* size: 0x0001 */

enum tagFILE_USAGE_TYPE
{
  FUT_PLAYING = 0,
  FUT_EDITING = 1,
  FUT_GENERIC = 2,
};

struct HWINSTA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

enum tagASSOCIATIONLEVEL
{
  AL_MACHINE = 0,
  AL_EFFECTIVE = 1,
  AL_USER = 2,
};

struct READ_USN_JOURNAL_DATA
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
}; /* size: 0x0028 */

enum tagASSOCIATIONTYPE
{
  AT_FILEEXTENSION = 0,
  AT_URLPROTOCOL = 1,
  AT_STARTMENUCLIENT = 2,
  AT_MIMETYPE = 3,
};

enum tagKF_CATEGORY
{
  KF_CATEGORY_VIRTUAL = 1,
  KF_CATEGORY_FIXED = 2,
  KF_CATEGORY_COMMON = 3,
  KF_CATEGORY_PERUSER = 4,
};

struct tagRPC_ERROR_ENUM_HANDLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_365;
  /* 0x0008 */ void* CurrentPos;
  /* 0x0010 */ void* Head;
}; /* size: 0x0018 */

typedef struct _IMAGE_LINENUMBER
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long SymbolTableIndex;
      /* 0x0000 */ unsigned long VirtualAddress;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Type;
  /* 0x0004 */ unsigned short Linenumber;
} IMAGE_LINENUMBER, *PIMAGE_LINENUMBER; /* size: 0x0006 */

enum tagFFFP_MODE
{
  FFFP_EXACTMATCH = 0,
  FFFP_NEARESTPARENTMATCH = 1,
};

enum tagMARKUPSIZE
{
  MARKUPSIZE_CALCWIDTH = 0,
  MARKUPSIZE_CALCHEIGHT = 1,
};

struct tagDCOM_ENDPOINT
{
  /* 0x0000 */ wchar_t* wszProtSeq;
  /* 0x0008 */ wchar_t* wszPorts;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct tagMULTIKEYHELPA
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ char mkKeylist;
  /* 0x0005 */ char szKeyphrase[1];
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

class CComSxSCatalog
{
  /* 0x0000 */ long Padding_366[2];
  /* 0x0008 */ long m_cRef;
}; /* size: 0x0010 */

enum tagMARKUPLINKTEXT
{
  MARKUPLINKTEXT_URL = 0,
  MARKUPLINKTEXT_ID = 1,
  MARKUPLINKTEXT_TEXT = 2,
};

enum tagMARKUPMESSAGE
{
  MARKUPMESSAGE_KEYEXECUTE = 0,
  MARKUPMESSAGE_CLICKEXECUTE = 1,
  MARKUPMESSAGE_WANTFOCUS = 2,
};

class CClientCallMgr::CPrivUnknown
{
}; /* size: 0x0008 */

enum CFileMoniker::olever
{
  undetermined = 0,
  ole1 = 1,
  ole2 = 2,
};

struct NCryptKeyName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszAlgid;
  /* 0x0010 */ unsigned long dwLegacyKeySpec;
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

struct IGetCatalogObject
{
}; /* size: 0x0008 */

enum CClassCache::eFlags
{
  fINITIALIZED = 1,
  fSHUTTINGDOWN = 2,
};

enum CClassCache::CClassEntry::eGUIDIndex
{
  iCLSID = 0,
  iPartition = 1,
  iTotal = 2,
};

struct SPointerHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ void* key;
}; /* size: 0x0018 */

class CStdIdentity::CInternalUnk
{
}; /* size: 0x0010 */

enum CClassCache::CClassEntry::eFlags
{
  fTREAT_AS = 1,
  fINCOMPLETE = 2,
  fDO_NOT_HASH = 4,
  fCOMPLUS = 8,
  fSIDE_BY_SIDE = 16,
};

enum CClassCache::CLSvrClassEntry::eFlags
{
  fAT_STORAGE = 1,
  fREVOKE_PENDING = 2,
  fBEEN_USED = 16,
};

typedef struct _RPC_SECURITY_QOS_V4_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_367;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long __PADDING__[1];
} RPC_SECURITY_QOS_V4_W, *PRPC_SECURITY_QOS_V4_W; /* size: 0x0030 */

class CRpcChannelBuffer::CServerCallMgr
{
  /* 0x0000 */ long Padding_368[8];
  /* 0x0020 */ unsigned long _cRefs;
  /* 0x0024 */ unsigned long _dwState;
  /* 0x0028 */ struct _GUID _iid;
  /* 0x0038 */ struct _GUID _iidAsync;
  /* 0x0048 */ struct IUnknown* _pUnkStubCallMgr;
  /* 0x0050 */ struct IUnknown* _pUnkServerCallMgr;
  /* 0x0058 */ struct ISynchronize* _pSync;
  /* 0x0060 */ struct IRpcStubBuffer* _pSB;
  /* 0x0068 */ class CMessageCall* _pCall;
  /* 0x0070 */ class CStdIdentity* _pStdID;
}; /* size: 0x0078 */

enum CClassCache::CCEHashTable::eFlags
{
  fTREAT_AS = 1,
  fINCOMPLETE = 2,
  fDO_NOT_HASH = 4,
  fCOMPLUS = 8,
  fSIDE_BY_SIDE = 16,
};

typedef struct _CERT_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ long Padding_369;
  /* 0x0008 */ unsigned char* pbCertEncoded;
  /* 0x0010 */ unsigned long cbCertEncoded;
  /* 0x0014 */ long Padding_370;
  /* 0x0018 */ struct _CERT_INFO* pCertInfo;
  /* 0x0020 */ void* hCertStore;
} CERT_CONTEXT, *PCERT_CONTEXT; /* size: 0x0028 */

class CAptCallCtrl
{
  /* 0x0000 */ struct IMessageFilter* _pMF;
  /* 0x0008 */ int _fInMsgFilter;
  /* 0x000c */ long Padding_371;
  /* 0x0010 */ class CCliModalLoop* _pTopCML;
  /* 0x0018 */ struct tagSWindowData _WD[2];
}; /* size: 0x0038 */

struct SMultiGUIDKey
{
  /* 0x0000 */ int cGUID;
  /* 0x0004 */ long Padding_372;
  /* 0x0008 */ struct _GUID* aGUID;
}; /* size: 0x0010 */

enum DLL_INSTANTIATION_PROPERTIES::eFlags
{
  fSIXTEEN_BIT = 1,
  fIS_OLE32 = 8,
  fIS_COMSVCS_CLSID = 16,
};

enum CClassCache::CDllPathEntry::eFlags
{
  fSIXTEEN_BIT = 1,
  fWX86 = 2,
  fIS_OLE32 = 4,
  fDELAYED_UNLOAD = 16,
};

struct IContinueVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* FContinue /* function */;
}; /* size: 0x0020 */

enum tagHOSTDLLFLAGS
{
  HDLLF_SINGLETHREADED = 1,
  HDLLF_APARTMENTTHREADED = 2,
  HDLLF_MULTITHREADED = 4,
  HDLLF_NEUTRALTHREADED = 8,
  HDLLF_HOSTTYPEMASK = 15,
  HDLLF_COMAPARTMENT = 16,
  HDLLF_SHUTTINGDOWN = 256,
};

enum NCIFLAGS
{
  NCI_HAVECLSID = 1,
  NCI_HAVEPROGID = 2,
};

class GenericStream
{
  /* 0x0000 */ long Padding_373[4];
  /* 0x0010 */ long _clRefs;
  /* 0x0014 */ long _lOffset;
  /* 0x0018 */ long _cbDataSize;
  /* 0x001c */ unsigned long _cbBufferSize;
  /* 0x0020 */ struct tagInterfaceData* _pifData;
  /* 0x0028 */ int _fFree;
  /* 0x002c */ unsigned long _copyAlignment;
}; /* size: 0x0030 */

struct ServerContextWorkData
{
  /* 0x0000 */ struct IActivationPropertiesIn* pInActProps;
  /* 0x0008 */ class GenericStream xrpcOutProps;
}; /* size: 0x0038 */

struct IPolicyAsync
{
}; /* size: 0x0008 */

enum FreeResourcesFlags
{
  RESET_AND_FREE = 1,
  JUST_RESET = 2,
};

typedef struct _SHNAMEMAPPINGA
{
  /* 0x0000 */ char* pszOldPath;
  /* 0x0008 */ char* pszNewPath;
  /* 0x0010 */ int cchOldPath;
  /* 0x0014 */ int cchNewPath;
} SHNAMEMAPPINGA, *PSHNAMEMAPPINGA; /* size: 0x0018 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE
{
  /* 0x0000 */ unsigned long Flags;
} PROCESS_HANDLE_TRACING_ENABLE, *PPROCESS_HANDLE_TRACING_ENABLE; /* size: 0x0004 */

class CListHeader
{
}; /* size: 0x0010 */

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

struct tagNCCALCSIZE_PARAMS
{
  /* 0x0000 */ struct tagRECT rgrc[3];
  /* 0x0030 */ struct tagWINDOWPOS* lppos;
}; /* size: 0x0038 */

enum FormatMatchFlag
{
  FORMAT_NOTFOUND = 1,
  FORMAT_BADMATCH = 2,
  FORMAT_GOODMATCH = 4,
};

typedef union _RTL_RUN_ONCE
{
  union
  {
    /* 0x0000 */ void* Ptr;
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ unsigned __int64 State : 2; /* bit position: 0 */
  }; /* size: 0x0008 */
} RTL_RUN_ONCE, *PRTL_RUN_ONCE; /* size: 0x0008 */

typedef struct _SHITEMID
{
  /* 0x0000 */ unsigned short cb;
  /* 0x0002 */ unsigned char abID[1];
} SHITEMID, *PSHITEMID; /* size: 0x0003 */

typedef struct _PROCESSOR_IDLE_STATE
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0001 */ char Padding_374[3];
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ unsigned __int64 Context;
  /* 0x0018 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE, *PPROCESSOR_IDLE_STATE; /* size: 0x0020 */

class CFatVector
{
  /* 0x0000 */ long Padding_375[12];
  /* 0x0030 */ unsigned short _csectTable;
  /* 0x0032 */ unsigned short _csectBlock;
}; /* size: 0x0038 */

class CDIFat
{
  /* 0x0000 */ class CFatVector _fv;
  /* 0x0038 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0040 */ unsigned long _cfsTable;
  /* 0x0044 */ int _fDoingFixup;
  /* 0x0048 */ unsigned long _cUnmarked;
  /* 0x004c */ unsigned long _sectUnmarked[8];
  /* 0x006c */ unsigned long _sectMarkTo[8];
  /* 0x008c */ unsigned long _sectFree[8];
}; /* size: 0x00b0 */

typedef struct _EXCEPTION_REGISTRATION_RECORD
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* Next;
  /* 0x0008 */ void* Handler /* function */;
} EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT
{
  /* 0x0000 */ unsigned long Hits;
  /* 0x0004 */ unsigned char PercentFrequency;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT, *PSYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT; /* size: 0x0008 */

struct IMPORT_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long SizeOfData;
  union
  {
    /* 0x0010 */ unsigned short Ordinal;
    /* 0x0010 */ unsigned short Hint;
  }; /* size: 0x0002 */
  struct /* bitfield */
  {
    /* 0x0012 */ unsigned short Type : 2; /* bit position: 0 */
    /* 0x0012 */ unsigned short NameType : 3; /* bit position: 2 */
    /* 0x0012 */ unsigned short Reserved : 11; /* bit position: 5 */
  }; /* bitfield */
}; /* size: 0x0014 */

enum CDragDefaultCursors::CURSOR_ID
{
  NO_DROP = 0,
  MOVE_DROP = 1,
  COPY_DROP = 2,
  LINK_DROP = 3,
};

typedef enum _TAG_UNNAMED_22
{
  RIFFLG_HASCOUNTERPART = 1,
  RIFFLG_HASCLSID = 2,
} TAG_UNNAMED_22, *PTAG_UNNAMED_22;

typedef struct _TEB_ACTIVE_FRAME_CONTEXT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_376;
  /* 0x0008 */ const char* FrameName;
} TEB_ACTIVE_FRAME_CONTEXT, *PTEB_ACTIVE_FRAME_CONTEXT; /* size: 0x0010 */

typedef struct _CERT_RDN_ATTR
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long dwValueType;
  /* 0x000c */ long Padding_377;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CERT_RDN_ATTR, *PCERT_RDN_ATTR; /* size: 0x0020 */

struct tagEMRSELECTOBJECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihObject;
}; /* size: 0x000c */

enum TXTTYPE
{
  TT_UNICODE = 0,
  TT_ANSI = 1,
};

enum DDE_DISPATCH_FUNC
{
  DDE_DISP_SENDONDATACHANGE = 1,
  DDE_DISP_OLECALLBACK = 2,
  DDE_DISP_SRVRWNDPROC = 3,
  DDE_DISP_DOCWNDPROC = 4,
};

class CMIPIDHashTable
{
}; /* size: 0x0028 */

enum CHK
{
  chkDdeSrvr = 4660,
  chkDefClient = 22136,
};

class CClassCache::CDllFnPtrMoniker
{
  /* 0x0000 */ long Padding_378[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_379;
  /* 0x0010 */ class CClassCache::CDllClassEntry* _pDCE;
}; /* size: 0x0018 */

typedef struct _MEMORY_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ unsigned long __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ unsigned long __alignment2;
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64; /* size: 0x0030 */

class CBasedTSetMemberPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CTSSet
{
  /* 0x0000 */ class CBasedTSetMemberPtr _ptsmHead;
}; /* size: 0x0008 */

enum CNVTYP
{
  cnvtypNone = 0,
  cnvtypConvertTo = 1,
  cnvtypTreatAs = 2,
};

typedef enum _TAG_UNNAMED_23
{
  TIMEOUT_INACTIVE = 0,
  TIMEOUT_PENDING = 1,
  TIMEOUT_SUSPENDED = 2,
  TIMEOUT_HAPPENING = 3,
  TIMEOUT_FORCED_SHUTDOWN = 4,
} TAG_UNNAMED_23, *PTAG_UNNAMED_23;

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >
{
  /* 0x0000 */ struct _UNICODE_STRING m_String;
}; /* size: 0x0010 */

struct IClientSecurity
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_24
{
  Minimal = 0,
  Normal = 128,
  MaximallyVerbose = 255,
} TAG_UNNAMED_24, *PTAG_UNNAMED_24;

enum tagCLIPWNDFLAGS
{
  CLIPWND_REMOVEFROMCLIPBOARD = 1,
  CLIPWND_IGNORECLIPBOARD = 2,
  CLIPWND_DONTCALLAPP = 4,
};

struct tagACTCTX_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x0010 */ unsigned long ulLength;
  /* 0x0014 */ long Padding_380;
  /* 0x0018 */ void* lpSectionGlobalData;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long Padding_381;
  /* 0x0028 */ void* lpSectionBase;
  /* 0x0030 */ unsigned long ulSectionTotalLength;
  /* 0x0034 */ long Padding_382;
  /* 0x0038 */ void* hActCtx;
  /* 0x0040 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

enum tagROIDFLAG
{
  ROIDF_REGISTER = 1,
  ROIDF_PING = 2,
  ROIDF_DEREGISTER = 4,
  ROIDF_DELETEME = 8,
};

typedef struct __midl_frag590_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag590_t, *P_midl_frag590_t; /* size: 0x0038 */

typedef struct _CRYPT_PROVIDER_SGNR
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _FILETIME sftVerifyAsOf;
  /* 0x000c */ unsigned long csCertChain;
  /* 0x0010 */ struct _CRYPT_PROVIDER_CERT* pasCertChain;
  /* 0x0018 */ unsigned long dwSignerType;
  /* 0x001c */ long Padding_383;
  /* 0x0020 */ struct _CMSG_SIGNER_INFO* psSigner;
  /* 0x0028 */ unsigned long dwError;
  /* 0x002c */ unsigned long csCounterSigners;
  /* 0x0030 */ struct _CRYPT_PROVIDER_SGNR* pasCounterSigners;
  /* 0x0038 */ const struct _CERT_CHAIN_CONTEXT* pChainContext;
} CRYPT_PROVIDER_SGNR, *PCRYPT_PROVIDER_SGNR; /* size: 0x0040 */

class CDualStringArray
{
  /* 0x0000 */ struct tagDUALSTRINGARRAY* _pdsa;
  /* 0x0008 */ long _cRef;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_25
{
  IMETHOD_FIRST = 3,
  IMETHOD_GetTypeInfoCount = 3,
  IMETHOD_GetTypeInfo = 4,
  IMETHOD_GetIDsOfNames = 5,
  IMETHOD_Invoke = 6,
  IMETHOD_DISPATCH_MAX = 7,
  IPARAM_Invoke_DispId = 0,
  IPARAM_Invoke_Iid = 1,
  IPARAM_Invoke_Lcid = 2,
  IPARAM_Invoke_WFlags = 3,
  IPARAM_Invoke_DispParams = 4,
  IPARAM_Invoke_PVarResult = 5,
  IPARAM_Invoke_PExcepInfo = 6,
  IPARAM_Invoke_PUArgErr = 7,
} TAG_UNNAMED_25, *PTAG_UNNAMED_25;

typedef struct _RTL_RXACT_CONTEXT
{
  /* 0x0000 */ void* RootRegistryKey;
  /* 0x0008 */ void* RXactKey;
  /* 0x0010 */ unsigned char HandlesValid;
  /* 0x0011 */ char Padding_384[7];
  /* 0x0018 */ struct _RTL_RXACT_LOG* RXactLog;
} RTL_RXACT_CONTEXT, *PRTL_RXACT_CONTEXT; /* size: 0x0020 */

struct tagInstantiationInfoData
{
  /* 0x0000 */ struct _GUID classId;
  /* 0x0010 */ unsigned long classCtx;
  /* 0x0014 */ unsigned long actvflags;
  /* 0x0018 */ int fIsSurrogate;
  /* 0x001c */ unsigned long cIID;
  /* 0x0020 */ unsigned long instFlag;
  /* 0x0024 */ long Padding_385;
  /* 0x0028 */ struct _GUID* pIID;
  /* 0x0030 */ unsigned long thisSize;
  /* 0x0034 */ struct tagCOMVERSION clientCOMVersion;
}; /* size: 0x0038 */

struct <vc_attributes>::atl::db_accessorAttribute
{
  /* 0x0000 */ int id;
  /* 0x0004 */ BOOL auto_;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_STATE_CONTEXT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long TargetSystemState : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned long EffectiveSystemState : 4; /* bit position: 12 */
      /* 0x0000 */ unsigned long CurrentSystemState : 4; /* bit position: 16 */
      /* 0x0000 */ unsigned long IgnoreHibernationPath : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long PseudoTransition : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long Reserved2 : 10; /* bit position: 22 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ContextAsUlong;
  }; /* size: 0x0004 */
} SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT; /* size: 0x0004 */

typedef enum _SecurityOptionsBitness
{
  CurrentBitness = 0,
  Wow6432Bitness = 1,
  Wow6464Bitness = 2,
} SecurityOptionsBitness, *PSecurityOptionsBitness;

enum WMIDPREQUESTCODE
{
  WMI_GET_ALL_DATA = 0,
  WMI_GET_SINGLE_INSTANCE = 1,
  WMI_SET_SINGLE_INSTANCE = 2,
  WMI_SET_SINGLE_ITEM = 3,
  WMI_ENABLE_EVENTS = 4,
  WMI_DISABLE_EVENTS = 5,
  WMI_ENABLE_COLLECTION = 6,
  WMI_DISABLE_COLLECTION = 7,
  WMI_REGINFO = 8,
  WMI_EXECUTE_METHOD = 9,
};

typedef struct _OSVERSIONINFOA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
} OSVERSIONINFOA, *POSVERSIONINFOA; /* size: 0x0094 */

struct AsyncIAdviseSink
{
}; /* size: 0x0008 */

enum eVSAEventFlags
{
  cVSAEventStandard = 0,
  cVSAEventDefaultSource = 1,
  cVSAEventDefaultTarget = 2,
  cVSAEventCanBreak = 4,
};

enum tagDRAGOP
{
  DRAGOP_ENTER = 1,
  DRAGOP_OVER = 2,
  DRAGOP_LEAVE = 3,
  DRAGOP_DROP = 4,
};

enum SYNCMGR_CANCEL_REQUEST
{
  SYNCMGR_CR_NONE = 0,
  SYNCMGR_CR_CANCEL_ITEM = 1,
  SYNCMGR_CR_CANCEL_ALL = 2,
  SYNCMGR_CR_MAX = 2,
};

struct ICancelMethodCalls
{
}; /* size: 0x0008 */

class CEnumHolder
{
  /* 0x0000 */ long Padding_386[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ unsigned short m_nCount;
  /* 0x000e */ char Padding_387[2];
  /* 0x0010 */ struct IEnumGeneric* m_pFirst;
  /* 0x0018 */ struct IEnumGeneric* m_pLast;
}; /* size: 0x0020 */

enum PUSHSTATE
{
  PUSHSTATE0_ENTRY = 0,
  PUSHSTATE1_FIRSTCALL = 1,
  PUSHSTATE2_FS_PSgeFS = 2,
  PUSHSTATE3_FS_PSltFS = 3,
  PUSHSTATE4_FS_PSZERO = 4,
  PUSHSTATE5_DONE_ERROR = 5,
};

enum MIDL_ES_CODE
{
  MES_ENCODE = 0,
  MES_DECODE = 1,
  MES_ENCODE_NDR64 = 2,
};

struct USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0038 */

typedef struct _wfinddatai64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_388;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddatai64_t, *Pwfinddatai64_t; /* size: 0x0230 */

enum PATH_TYPE
{
  PATH_TYPE_UNKNOWN = 0,
  PATH_TYPE_UNC_ABSOLUTE = 1,
  PATH_TYPE_LOCAL_DEVICE = 2,
  PATH_TYPE_ROOT_LOCAL_DEVICE = 3,
  PATH_TYPE_DRIVE_ABSOLUTE = 4,
  PATH_TYPE_DRIVE_RELATIVE = 5,
  PATH_TYPE_ROOTED = 6,
  PATH_TYPE_RELATIVE = 7,
};

enum tagPGALLOCATORFLAGS
{
  PGALLOC_ZEROBRANDNEWPAGES = 1,
};

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ struct _UNICODE_STRING Reference;
  /* 0x0028 */ unsigned char Register;
  /* 0x0029 */ char Padding_389[7];
  /* 0x0030 */ wchar_t* SymLink;
  /* 0x0038 */ unsigned long SymLinkLength;
  /* 0x003c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA, *PPLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA; /* size: 0x0040 */

struct tagPELARRAY
{
  /* 0x0000 */ long paXCount;
  /* 0x0004 */ long paYCount;
  /* 0x0008 */ long paXExt;
  /* 0x000c */ long paYExt;
  /* 0x0010 */ unsigned char paRGBs;
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

class CNoEnum
{
  /* 0x0000 */ long Padding_390[2];
  /* 0x0008 */ long m_cRef;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_26
{
  dliStartProcessing = 0,
  dliNotePreLoadLibrary = 1,
  dliNotePreGetProcAddress = 2,
  dliFailLoadLib = 3,
  dliFailGetProc = 4,
  dliNoteEndProcessing = 5,
} TAG_UNNAMED_26, *PTAG_UNNAMED_26;

struct ACTIVATION_PROPERTIES
{
  /* 0x0000 */ const struct _GUID& _rclsid;
  /* 0x0008 */ struct _GUID _partition;
  /* 0x0018 */ const struct _GUID& _riid;
  /* 0x0020 */ unsigned long _dwFlags;
  /* 0x0024 */ unsigned long _dwActvFlags;
  /* 0x0028 */ unsigned long _dwContext;
  /* 0x002c */ unsigned long _dwDllServerType;
  /* 0x0030 */ wchar_t* _pwszDllServer;
  /* 0x0038 */ struct IUnknown** _ppUnk;
  /* 0x0040 */ struct IComClassInfo* _pCI;
}; /* size: 0x0048 */

typedef struct _MINIDUMP_EXCEPTION_INFORMATION64
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned __int64 ExceptionRecord;
  /* 0x000c */ unsigned __int64 ContextRecord;
  /* 0x0014 */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION64, *PMINIDUMP_EXCEPTION_INFORMATION64; /* size: 0x0018 */

struct <vc_attributes>::emitidlAttribute
{
  union
  {
    /* 0x0000 */ const int restricted;
    /* 0x0000 */ const int forced;
    /* 0x0000 */ const int push;
    /* 0x0000 */ const int pop;
    /* 0x0000 */ int value;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL defaultimports;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

enum tagMSIPATCHSTATE
{
  MSIPATCHSTATE_INVALID = 0,
  MSIPATCHSTATE_APPLIED = 1,
  MSIPATCHSTATE_SUPERSEDED = 2,
  MSIPATCHSTATE_OBSOLETED = 4,
  MSIPATCHSTATE_REGISTERED = 8,
  MSIPATCHSTATE_ALL = 15,
};

enum tagSLGP_FLAGS
{
  SLGP_SHORTPATH = 1,
  SLGP_UNCPRIORITY = 2,
  SLGP_RAWPATH = 4,
  SLGP_RELATIVEPRIORITY = 8,
};

class CStaticWrapper
{
}; /* size: 0x0008 */

enum tagCOLUMN_VISIBILITY
{
  CV_INVALID = 0,
  CV_VISIBLE = 1,
  CV_PRIMARYOVERFLOW = 2,
  CV_SECONDARYOVERFLOW = 3,
  CV_HIDDEN = 4,
};

enum ExtentKeys
{
  mnk_MAC = 1,
  mnk_DFS = 2,
  mnk_UNICODE = 3,
  mnk_MacPathName = 4,
  mnk_ShellLink = 5,
  mnk_TrackingInformation = 6,
};

struct IClassClassicInfo2
{
}; /* size: 0x0008 */

enum SYNCMGR_HANDLER_TYPE
{
  SYNCMGR_HT_UNSPECIFIED = 0,
  SYNCMGR_HT_APPLICATION = 1,
  SYNCMGR_HT_DEVICE = 2,
  SYNCMGR_HT_FOLDER = 3,
  SYNCMGR_HT_SERVICE = 4,
  SYNCMGR_HT_COMPUTER = 5,
  SYNCMGR_HT_MIN = 0,
  SYNCMGR_HT_MAX = 5,
};

enum SYNCMGR_PRESENTER_NEXT_STEP
{
  SYNCMGR_PNS_CONTINUE = 0,
  SYNCMGR_PNS_DEFAULT = 1,
  SYNCMGR_PNS_CANCEL = 2,
};

struct WINTRUST_SGNR_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_391;
  /* 0x0008 */ const wchar_t* pcwszDisplayName;
  /* 0x0010 */ struct _CMSG_SIGNER_INFO* psSignerInfo;
  /* 0x0018 */ unsigned long chStores;
  /* 0x001c */ long Padding_392;
  /* 0x0020 */ void** pahStores;
}; /* size: 0x0028 */

class CStringHashTable
{
}; /* size: 0x0028 */

class CMIDTable
{
  union
  {
    /* 0x0000 */ class MIDEntry* _pLocalMIDEntry;
    /* 0x0000 */ class CStringHashTable _HashTbl;
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x0080 */
}; /* size: 0x0001 */

enum SYNCMGR_HANDLER_POLICIES
{
  SYNCMGR_HPM_NONE = 0,
  SYNCMGR_HPM_PREVENT_ACTIVATE = 1,
  SYNCMGR_HPM_PREVENT_DEACTIVATE = 2,
  SYNCMGR_HPM_PREVENT_ENABLE = 4,
  SYNCMGR_HPM_PREVENT_DISABLE = 8,
  SYNCMGR_HPM_PREVENT_START_SYNC = 16,
  SYNCMGR_HPM_PREVENT_STOP_SYNC = 32,
  SYNCMGR_HPM_DISABLE_ENABLE = 256,
  SYNCMGR_HPM_DISABLE_DISABLE = 512,
  SYNCMGR_HPM_DISABLE_START_SYNC = 1024,
  SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048,
  SYNCMGR_HPM_DISABLE_BROWSE = 4096,
  SYNCMGR_HPM_DISABLE_SCHEDULE = 8192,
  SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 0x10000,
  SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48,
  SYNCMGR_HPM_VALID_MASK = 0x12f3f,
};

struct FLASHWINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_393;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ unsigned int uCount;
  /* 0x0018 */ unsigned long dwTimeout;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

enum tagPROPCTL_FLAGS
{
  PCF_VISIBLE = 1,
  PCF_READONLY = 2,
  PCF_USEACTIVEBORDERS = 4,
  PCF_USEEDITINVITATION = 8,
  PCF_VERTPOS_TOP = 0,
  PCF_VERTPOS_CENTER = 16,
  PCF_VERTPOS_BOTTOM = 32,
  PCF_VERTPOS_MASK = 48,
  PCF_HORZPOS_LEFT = 0,
  PCF_HORZPOS_CENTER = 64,
  PCF_HORZPOS_RIGHT = 128,
  PCF_HORZPOS_MASK = 192,
  PCF_RTLREADING = 512,
  PCF_CAN_WRAP_TEXT = 1024,
  PCF_POS_MASK = 1776,
  PCF_NORMAL_TEXT = 0,
  PCF_SHADOW_TEXT = 256,
  PCF_FONT_MASK = 256,
  PCF_FLAGS_MASK = 2047,
};

enum tagPropPageOnApply
{
  PPOAACTION_CANCEL = 0,
  PPOAACTION_OK = 1,
  PPOAACTION_APPLY = 2,
};

enum tagBPASCODE
{
  BPAS_START = 0,
  BPAS_INDETERMINATE = 1,
  BPAS_STOP = 2,
};

typedef struct __midl_frag610_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag610_t, *P_midl_frag610_t; /* size: 0x0010 */

class CContextPropList
{
  union
  {
    struct
    {
      /* 0x0000 */ int _Max;
      /* 0x0004 */ int _iFirst;
      /* 0x0008 */ int _iLast;
      /* 0x000c */ int _Count;
      /* 0x0010 */ int _cCompareProps;
      /* 0x0014 */ unsigned long _Hash;
      /* 0x0018 */ int _slotIdx;
      /* 0x001c */ long Padding_394;
      /* 0x0020 */ struct tagContextProperty* _pProps;
      /* 0x0028 */ int* _pSlots;
      /* 0x0030 */ struct tagContextProperty* _pCompareBuffer;
      /* 0x0038 */ struct _tagSCtxListIndex* _pIndex;
    }; /* size: 0x003c */
    /* 0x0000 */ class CPageAllocator s_NodeAllocator;
  }; /* size: 0x0080 */
}; /* size: 0x0040 */

class CObjectContext
{
  /* 0x0000 */ long Padding_395[14];
  /* 0x0038 */ unsigned long _cRefs;
  /* 0x003c */ long _cUserRefs;
  /* 0x0040 */ long _cInternalRefs;
  /* 0x0044 */ unsigned long _dwFlags;
  /* 0x0048 */ struct SHashChain _propChain;
  /* 0x0058 */ struct SHashChain _uuidChain;
  /* 0x0068 */ struct tagInterfaceData* _pifData;
  /* 0x0070 */ unsigned long _MarshalSizeMax;
  /* 0x0074 */ long Padding_396;
  /* 0x0078 */ class CComApartment* _pApartment;
  /* 0x0080 */ unsigned long _dwHashOfId;
  /* 0x0084 */ struct _GUID _contextId;
  /* 0x0094 */ long Padding_397;
  /* 0x0098 */ unsigned __int64 _urtCtxId;
  /* 0x00a0 */ struct tagSPSCache _PSCache;
  /* 0x00c0 */ struct IMarshal* _pMarshalProp;
  /* 0x00c8 */ long _cReleaseThreads;
  /* 0x00cc */ long Padding_398;
  /* 0x00d0 */ class CContextPropList _properties;
  /* 0x0110 */ struct IUnknown* _pMtsContext;
  /* 0x0118 */ class CContextLife* volatile _pContextLife;
  /* 0x0120 */ class CCtxConnectionManager* _pConnectionMgr;
  union
  {
    /* 0x0000 */ class CPageAllocator s_CXAllocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cInstances;
  }; /* size: 0x0080 */
}; /* size: 0x0128 */

typedef struct _CONSOLE_FONT_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long nFont;
  /* 0x0008 */ struct _COORD dwFontSize;
  /* 0x000c */ unsigned int FontFamily;
  /* 0x0010 */ unsigned int FontWeight;
  /* 0x0014 */ wchar_t FaceName[32];
} CONSOLE_FONT_INFOEX, *PCONSOLE_FONT_INFOEX; /* size: 0x0054 */

typedef struct _RPC_SECURITY_QOS_V3_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_399;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
} RPC_SECURITY_QOS_V3_W, *PRPC_SECURITY_QOS_V3_W; /* size: 0x0028 */

typedef enum __MIDL_IFlyout_0001
{
  TCO_BOTTOM = 0,
  TCO_RIGHT = 1,
  TCO_LEFT = 2,
  TCO_TOP = 3,
} _MIDL_IFlyout_0001, *P_MIDL_IFlyout_0001;

struct <vc_attributes>::helper_attributes::repeatableAttribute
{
}; /* size: 0x0001 */

typedef struct _GRADIENT_RECT
{
  /* 0x0000 */ unsigned long UpperLeft;
  /* 0x0004 */ unsigned long LowerRight;
} GRADIENT_RECT, *PGRADIENT_RECT; /* size: 0x0008 */

class CCtxPropHashTable
{
}; /* size: 0x0028 */

enum tagSHELL_BROWSER_FRAME_SIZE_POSITION
{
  SBFSP_XPOS = 1,
  SBFSP_XOFF = 2,
  SBFSP_YPOS = 4,
  SBFSP_YOFF = 8,
  SBFSP_WIDTHSET = 16,
  SBFSP_WIDTHINCR = 32,
  SBFSP_HEIGHTSET = 64,
  SBFSP_HEIGHTINCR = 128,
  SBFSP_RESTRICT = -2147483648,
  SBFSP_XMASK = 3,
  SBFSP_YMASK = 12,
  SBFSP_MOVEMASK = 15,
  SBFSP_MOVERELMASK = 10,
  SBFSP_WIDTHMASK = 48,
  SBFSP_HEIGHTMASK = 192,
  SBFSP_SIZEMASK = 240,
  SBFSP_SIZERELMASK = 160,
  SBFSP_RELOPMASK = 170,
};

typedef struct _RTL_VERIFIER_PAGEHEAP_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long HeapFlags;
  /* 0x000c */ unsigned long ExtraFlags;
  /* 0x0010 */ unsigned __int64 HeapHandle;
} RTL_VERIFIER_PAGEHEAP_INFORMATION, *PRTL_VERIFIER_PAGEHEAP_INFORMATION; /* size: 0x0018 */

typedef struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long NumberPageHeaps;
  /* 0x0008 */ struct _RTL_VERIFIER_PAGEHEAP_INFORMATION PageHeapInformation[1];
} RTL_VERIFIER_PAGEHEAPS_INFORMATION, *PRTL_VERIFIER_PAGEHEAPS_INFORMATION; /* size: 0x0020 */

typedef enum _tagSHARE_MODE
{
  MODE_SMB = 0,
  MODE_INPLACE = 1,
  MODE_CLASSIC = 2,
} tagSHARE_MODE, *PtagSHARE_MODE;

enum tagSCRIPTFLAGS
{
  SCRIPTFLAGS_CACHEINFO = 1,
  SCRIPTFLAGS_SHORTCUTS = 4,
  SCRIPTFLAGS_MACHINEASSIGN = 8,
  SCRIPTFLAGS_REGDATA_CNFGINFO = 32,
  SCRIPTFLAGS_VALIDATE_TRANSFORMS_LIST = 64,
  SCRIPTFLAGS_REGDATA_CLASSINFO = 128,
  SCRIPTFLAGS_REGDATA_EXTENSIONINFO = 256,
  SCRIPTFLAGS_REGDATA_APPINFO = 384,
  SCRIPTFLAGS_REGDATA = 416,
};

typedef struct _STARTUPINFOA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_400;
  /* 0x0008 */ char* lpReserved;
  /* 0x0010 */ char* lpDesktop;
  /* 0x0018 */ char* lpTitle;
  /* 0x0020 */ unsigned long dwX;
  /* 0x0024 */ unsigned long dwY;
  /* 0x0028 */ unsigned long dwXSize;
  /* 0x002c */ unsigned long dwYSize;
  /* 0x0030 */ unsigned long dwXCountChars;
  /* 0x0034 */ unsigned long dwYCountChars;
  /* 0x0038 */ unsigned long dwFillAttribute;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned short wShowWindow;
  /* 0x0042 */ unsigned short cbReserved2;
  /* 0x0044 */ long Padding_401;
  /* 0x0048 */ unsigned char* lpReserved2;
  /* 0x0050 */ void* hStdInput;
  /* 0x0058 */ void* hStdOutput;
  /* 0x0060 */ void* hStdError;
} STARTUPINFOA, *PSTARTUPINFOA; /* size: 0x0068 */

typedef struct _STARTUPINFOEXA
{
  /* 0x0000 */ struct _STARTUPINFOA StartupInfo;
  /* 0x0068 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXA, *PSTARTUPINFOEXA; /* size: 0x0070 */

enum tagASYNCQUERY_STATUS
{
  QUERY_INPROGRESS = 0,
  QUERY_DONE = 1,
  QUERY_FAILED = 2,
  QUERY_STATUS_INVALID = 3,
};

struct <vc_attributes>::helper_attributes::default_valueAttribute
{
  /* 0x0000 */ void* value;
}; /* size: 0x0008 */

class PDocFile
{
}; /* size: 0x000c */

enum SYNCMGR_RESOLUTION_FEEDBACK
{
  SYNCMGR_RF_CONTINUE = 0,
  SYNCMGR_RF_REFRESH = 1,
  SYNCMGR_RF_CANCEL = 2,
};

struct IServiceProvider
{
}; /* size: 0x0008 */

typedef struct _TXFS_START_RM_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_402;
  /* 0x0008 */ unsigned __int64 LogContainerSize;
  /* 0x0010 */ unsigned long LogContainerCountMin;
  /* 0x0014 */ unsigned long LogContainerCountMax;
  /* 0x0018 */ unsigned long LogGrowthIncrement;
  /* 0x001c */ unsigned long LogAutoShrinkPercentage;
  /* 0x0020 */ unsigned long TmLogPathOffset;
  /* 0x0024 */ unsigned short TmLogPathLength;
  /* 0x0026 */ unsigned short LoggingMode;
  /* 0x0028 */ unsigned short LogPathLength;
  /* 0x002a */ unsigned short Reserved;
  /* 0x002c */ wchar_t LogPath[1];
  /* 0x002e */ char __PADDING__[2];
} TXFS_START_RM_INFORMATION, *PTXFS_START_RM_INFORMATION; /* size: 0x0030 */

struct tagSAmdRegs
{
  /* 0x0000 */ __int64* prt;
  /* 0x0008 */ void* pArgs;
}; /* size: 0x0010 */

enum SYNCMGR_PRESENTER_CHOICE
{
  SYNCMGR_PC_NO_CHOICE = 0,
  SYNCMGR_PC_KEEP_ONE = 1,
  SYNCMGR_PC_KEEP_MULTIPLE = 2,
  SYNCMGR_PC_KEEP_RECENT = 3,
  SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4,
  SYNCMGR_PC_SKIP = 5,
};

typedef struct _CRYPT_CREDENTIALS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_403;
  /* 0x0008 */ const char* pszCredentialsOid;
  /* 0x0010 */ void* pvCredentials;
} CRYPT_CREDENTIALS, *PCRYPT_CREDENTIALS; /* size: 0x0018 */

enum tagGET_PROPERTY_STORE_TYPE
{
  GIPST_CACHED = 0,
  GIPST_FALLBACK = 1,
};

typedef struct _TRANSACTION_ENLISTMENT_PAIR
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID ResourceManagerId;
} TRANSACTION_ENLISTMENT_PAIR, *PTRANSACTION_ENLISTMENT_PAIR; /* size: 0x0020 */

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
  /* 0x0000 */ struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
} TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION; /* size: 0x0020 */

struct tagSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ long Padding_404;
  /* 0x0010 */ void* pvData;
  /* 0x0018 */ struct tagSAFEARRAYBOUND rgsabound[1];
}; /* size: 0x0020 */

typedef struct _RTL_HANDLE_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    /* 0x0000 */ struct _RTL_HANDLE_TABLE_ENTRY* NextFree;
  }; /* size: 0x0008 */
} RTL_HANDLE_TABLE_ENTRY, *PRTL_HANDLE_TABLE_ENTRY; /* size: 0x0008 */

typedef struct __midl_frag761_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag761_t, *P_midl_frag761_t; /* size: 0x0028 */

enum tagPROPCTL_RECT_TYPE
{
  PCRT_MINIMUM = 0,
  PCRT_IDEAL = 1,
};

typedef struct _TXFS_WRITE_BACKUP_INFORMATION
{
  /* 0x0000 */ unsigned char Buffer[1];
} TXFS_WRITE_BACKUP_INFORMATION, *PTXFS_WRITE_BACKUP_INFORMATION; /* size: 0x0001 */

enum SYNCMGR_UPDATE_REASON
{
  SYNCMGR_UR_ADDED = 0,
  SYNCMGR_UR_CHANGED = 1,
  SYNCMGR_UR_REMOVED = 2,
  SYNCMGR_UR_MAX = 2,
};

class CNFFTreeMutex
{
  /* 0x0000 */ long Padding_405[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ int _fInitialized;
  /* 0x0010 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0038 */

enum tagRECYCLEBIN_TYPE
{
  RBT_VOLUME = 0,
  RBT_KNOWNFOLDER = 1,
};

typedef struct _RTL_PROCESS_LOCK_INFORMATION
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ unsigned short Type;
  /* 0x000a */ unsigned short CreatorBackTraceIndex;
  /* 0x000c */ long Padding_406;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ long LockCount;
  /* 0x001c */ unsigned long ContentionCount;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ long RecursionCount;
  /* 0x0028 */ unsigned long NumberOfWaitingShared;
  /* 0x002c */ unsigned long NumberOfWaitingExclusive;
} RTL_PROCESS_LOCK_INFORMATION, *PRTL_PROCESS_LOCK_INFORMATION; /* size: 0x0030 */

class CSTATPROPBAGArray
{
  /* 0x0000 */ long _cReferences;
  /* 0x0004 */ long Padding_407;
  /* 0x0008 */ struct IEnumSTATPROPSTG* _penum;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0018 */ wchar_t* _poszPrefix;
  /* 0x0020 */ unsigned long _dwFlags;
}; /* size: 0x0028 */

enum SYNCMGR_CONFLICT_ITEM_TYPE
{
};

struct PPM_WMI_IDLE_STATE
{
  /* 0x0000 */ unsigned long Latency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned char PromotePercent;
  /* 0x000d */ unsigned char DemotePercent;
  /* 0x000e */ unsigned char StateType;
  /* 0x000f */ unsigned char Reserved;
  /* 0x0010 */ unsigned long StateFlags;
  /* 0x0014 */ unsigned long Context;
  /* 0x0018 */ unsigned long IdleHandler;
  /* 0x001c */ unsigned long Reserved1;
}; /* size: 0x0020 */

struct PPM_WMI_IDLE_STATES
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

class CEnumContextProps
{
  /* 0x0000 */ long Padding_408[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ long Padding_409;
  /* 0x0010 */ struct tagContextProperty* _pList;
  /* 0x0018 */ unsigned long* _pcListRefs;
  /* 0x0020 */ unsigned long _cItems;
  /* 0x0024 */ unsigned long _CurrentPosition;
}; /* size: 0x0028 */

struct IDispatch
{
}; /* size: 0x0008 */

struct IUriBuilder
{
}; /* size: 0x0008 */

enum tagSEARCHTEXTTYPE
{
  STTYPE_DEFAULT = 0,
  STTYPE_INITIAL = 1,
};

typedef struct _RTL_BUFFER
{
  /* 0x0000 */ unsigned char* Buffer;
  /* 0x0008 */ unsigned char* StaticBuffer;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ unsigned __int64 StaticSize;
  /* 0x0020 */ unsigned __int64 ReservedForAllocatedSize;
  /* 0x0028 */ void* ReservedForIMalloc;
} RTL_BUFFER, *PRTL_BUFFER; /* size: 0x0030 */

typedef struct _RTL_UNICODE_STRING_BUFFER
{
  /* 0x0000 */ struct _UNICODE_STRING String;
  /* 0x0010 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0040 */ unsigned char MinimumStaticBufferForTerminalNul[2];
  /* 0x0042 */ char __PADDING__[6];
} RTL_UNICODE_STRING_BUFFER, *PRTL_UNICODE_STRING_BUFFER; /* size: 0x0048 */

enum tagSHELL_SEARCH_BAND_SEARCH_STATE
{
  SSBSS_DEFAULT = 0,
  SSBSS_NEW_PROVIDERS = 1,
  SSBSS_WEB = 2,
  SSBSS_FOLDER = 3,
};

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ long Padding_410;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long BufferSize;
  /* 0x0014 */ enum tagRpcLocalAddressFormat AddressFormat;
} RPC_CALL_LOCAL_ADDRESS_V1, *PRPC_CALL_LOCAL_ADDRESS_V1; /* size: 0x0018 */

struct ISerializable
{
}; /* size: 0x0008 */

enum tagCCF_FLAGS
{
  CCF_NONE = 0,
  CCF_AGGREGATABLE = 1,
};

struct BATTERY_REPORTING_SCALE
{
  /* 0x0000 */ unsigned long Granularity;
  /* 0x0004 */ unsigned long Capacity;
}; /* size: 0x0008 */

struct tagBYVALHDR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ int Frozen;
}; /* size: 0x0008 */

struct IContext
{
}; /* size: 0x0008 */

struct <vc_attributes>::ptrAttribute
{
}; /* size: 0x0001 */

enum tagINSTALLUILEVEL
{
  INSTALLUILEVEL_NOCHANGE = 0,
  INSTALLUILEVEL_DEFAULT = 1,
  INSTALLUILEVEL_NONE = 2,
  INSTALLUILEVEL_BASIC = 3,
  INSTALLUILEVEL_REDUCED = 4,
  INSTALLUILEVEL_FULL = 5,
  INSTALLUILEVEL_ENDDIALOG = 128,
  INSTALLUILEVEL_PROGRESSONLY = 64,
  INSTALLUILEVEL_HIDECANCEL = 32,
  INSTALLUILEVEL_SOURCERESONLY = 256,
};

enum tagINSTALLMESSAGE
{
  INSTALLMESSAGE_FATALEXIT = 0,
  INSTALLMESSAGE_ERROR = 0x1000000,
  INSTALLMESSAGE_WARNING = 0x2000000,
  INSTALLMESSAGE_USER = 0x3000000,
  INSTALLMESSAGE_INFO = 0x4000000,
  INSTALLMESSAGE_FILESINUSE = 0x5000000,
  INSTALLMESSAGE_RESOLVESOURCE = 0x6000000,
  INSTALLMESSAGE_OUTOFDISKSPACE = 0x7000000,
  INSTALLMESSAGE_ACTIONSTART = 0x8000000,
  INSTALLMESSAGE_ACTIONDATA = 0x9000000,
  INSTALLMESSAGE_PROGRESS = 0xa000000,
  INSTALLMESSAGE_COMMONDATA = 0xb000000,
  INSTALLMESSAGE_INITIALIZE = 0xc000000,
  INSTALLMESSAGE_TERMINATE = 0xd000000,
  INSTALLMESSAGE_SHOWDIALOG = 0xe000000,
  INSTALLMESSAGE_RMFILESINUSE = 0x19000000,
};

struct ISynchronizeContainer
{
}; /* size: 0x0008 */

struct <vc_attributes>::hiddenAttribute
{
}; /* size: 0x0001 */

class OpaqueDataInfo
{
  /* 0x0000 */ long Padding_411[8];
  /* 0x0020 */ unsigned long _cOpaqueData;
  /* 0x0024 */ unsigned long _dwCollSize;
  /* 0x0028 */ struct tagOpaqueData* _pOpaqueData;
  /* 0x0030 */ void* _pAct;
}; /* size: 0x0038 */

enum tagMSIINSTALLCONTEXT
{
  MSIINSTALLCONTEXT_FIRSTVISIBLE = 0,
  MSIINSTALLCONTEXT_NONE = 0,
  MSIINSTALLCONTEXT_USERMANAGED = 1,
  MSIINSTALLCONTEXT_USERUNMANAGED = 2,
  MSIINSTALLCONTEXT_MACHINE = 4,
  MSIINSTALLCONTEXT_ALL = 7,
  MSIINSTALLCONTEXT_ALLUSERMANAGED = 8,
};

struct RPC_IMPORT_CONTEXT_P
{
  /* 0x0000 */ void* LookupContext;
  /* 0x0008 */ void* ProposedHandle;
  /* 0x0010 */ struct _RPC_BINDING_VECTOR* Bindings;
}; /* size: 0x0018 */

typedef struct _SERVICE_STATUS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
} SERVICE_STATUS, *PSERVICE_STATUS; /* size: 0x001c */

typedef struct _ENUM_SERVICE_STATUSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ wchar_t* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS ServiceStatus;
  /* 0x002c */ long __PADDING__[1];
} ENUM_SERVICE_STATUSW, *PENUM_SERVICE_STATUSW; /* size: 0x0030 */

struct tagCOMPOSITIONFORM
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ struct tagPOINT ptCurrentPos;
  /* 0x000c */ struct tagRECT rcArea;
}; /* size: 0x001c */

enum EventPoolEntry::WaitForWriterEvent::__l2::AnyAbsorbtionState
{
  NONE = 0,
  ABSORBED = 1,
  RELEIVED = 2,
};

class CComNoClassInfo
{
  /* 0x0000 */ long Padding_412[6];
  /* 0x0018 */ long m_cRef;
  /* 0x001c */ struct _GUID m_clsid;
  /* 0x002c */ long Padding_413;
  /* 0x0030 */ wchar_t* m_wszProgID;
  /* 0x0038 */ unsigned long m_ValueFlags;
}; /* size: 0x0040 */

typedef enum __enative_startup_state
{
  __uninitialized = 0,
  __initializing = 1,
  __initialized = 2,
} _enative_startup_state, *P_enative_startup_state;

struct SYSTEM_POWER_CAPABILITIES
{
  /* 0x0000 */ unsigned char PowerButtonPresent;
  /* 0x0001 */ unsigned char SleepButtonPresent;
  /* 0x0002 */ unsigned char LidPresent;
  /* 0x0003 */ unsigned char SystemS1;
  /* 0x0004 */ unsigned char SystemS2;
  /* 0x0005 */ unsigned char SystemS3;
  /* 0x0006 */ unsigned char SystemS4;
  /* 0x0007 */ unsigned char SystemS5;
  /* 0x0008 */ unsigned char HiberFilePresent;
  /* 0x0009 */ unsigned char FullWake;
  /* 0x000a */ unsigned char VideoDimPresent;
  /* 0x000b */ unsigned char ApmPresent;
  /* 0x000c */ unsigned char UpsPresent;
  /* 0x000d */ unsigned char ThermalControl;
  /* 0x000e */ unsigned char ProcessorThrottle;
  /* 0x000f */ unsigned char ProcessorMinThrottle;
  /* 0x0010 */ unsigned char ProcessorMaxThrottle;
  /* 0x0011 */ unsigned char FastSystemS4;
  /* 0x0012 */ unsigned char spare2[3];
  /* 0x0015 */ unsigned char DiskSpinDown;
  /* 0x0016 */ unsigned char spare3[8];
  /* 0x001e */ unsigned char SystemBatteriesPresent;
  /* 0x001f */ unsigned char BatteriesAreShortTerm;
  /* 0x0020 */ struct BATTERY_REPORTING_SCALE BatteryScale[3];
  /* 0x0038 */ enum _SYSTEM_POWER_STATE AcOnLineWake;
  /* 0x003c */ enum _SYSTEM_POWER_STATE SoftLidWake;
  /* 0x0040 */ enum _SYSTEM_POWER_STATE RtcWake;
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinDeviceWakeState;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
}; /* size: 0x004c */

typedef struct _IMAGE_OPTIONAL_HEADER64
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned __int64 ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned __int64 SizeOfStackReserve;
  /* 0x0050 */ unsigned __int64 SizeOfStackCommit;
  /* 0x0058 */ unsigned __int64 SizeOfHeapReserve;
  /* 0x0060 */ unsigned __int64 SizeOfHeapCommit;
  /* 0x0068 */ unsigned long LoaderFlags;
  /* 0x006c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0070 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64; /* size: 0x00f0 */

struct SET_POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ enum SYSTEM_POWER_CONDITION PowerCondition;
  /* 0x0018 */ unsigned long DataLength;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

typedef struct _CRYPT_PROVUI_FUNCS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_414;
  /* 0x0008 */ struct _CRYPT_PROVUI_DATA* psUIData;
  /* 0x0010 */ void* pfnOnMoreInfoClick /* function */;
  /* 0x0018 */ void* pfnOnMoreInfoClickDefault /* function */;
  /* 0x0020 */ void* pfnOnAdvancedClick /* function */;
  /* 0x0028 */ void* pfnOnAdvancedClickDefault /* function */;
} CRYPT_PROVUI_FUNCS, *PCRYPT_PROVUI_FUNCS; /* size: 0x0030 */

struct tagEMRTRANSPARENTBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION
{
  /* 0x0000 */ enum _IO_PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFORMATION, *PFILE_IO_PRIORITY_HINT_INFORMATION; /* size: 0x0004 */

class CEnumCategoriesOfClass
{
  /* 0x0000 */ long Padding_415[2];
  /* 0x0008 */ unsigned long m_dwRefCount;
  /* 0x000c */ int m_bMapOldKeys;
  /* 0x0010 */ struct HKEY__* m_hKey;
  /* 0x0018 */ unsigned long m_dwIndex;
  /* 0x001c */ long Padding_416;
  /* 0x0020 */ struct HKEY__* m_hKeyCats;
  /* 0x0028 */ unsigned long m_dwOldKeyIndex;
  /* 0x002c */ long Padding_417;
  /* 0x0030 */ struct IUnknown* m_pCloned;
}; /* size: 0x0038 */

struct ICreateErrorInfo
{
}; /* size: 0x0008 */

struct _NDR_PROC_CONTEXT;

class CComClassInfo
{
  /* 0x0000 */ long Padding_418[10];
  /* 0x0028 */ long m_cRef;
  /* 0x002c */ long m_cLocks;
  /* 0x0030 */ struct _GUID m_clsid;
  /* 0x0040 */ struct _GUID m_guidProcessId;
  /* 0x0050 */ enum tagLocalServerType m_serverType;
  /* 0x0054 */ long Padding_419;
  /* 0x0058 */ struct IUnknown* m_pProcessInfo;
  /* 0x0060 */ wchar_t m_wszClsidString[45];
  /* 0x00ba */ char Padding_420[6];
  /* 0x00c0 */ wchar_t* m_pwszProgid;
  /* 0x00c8 */ wchar_t* m_pwszClassName;
  /* 0x00d0 */ int m_clsctx;
  /* 0x00d4 */ int m_threadingmodel;
  /* 0x00d8 */ unsigned long m_regType;
  /* 0x00dc */ long Padding_421;
  /* 0x00e0 */ wchar_t* m_pwszInprocServer32;
  /* 0x00e8 */ wchar_t* m_pwszInprocHandler32;
  /* 0x00f0 */ wchar_t* m_pwszLocalServer;
  /* 0x00f8 */ wchar_t* m_pwszInprocServer16;
  /* 0x0100 */ wchar_t* m_pwszInprocHandler16;
  /* 0x0108 */ wchar_t* m_pwszSurrogateCommand;
  /* 0x0110 */ wchar_t* m_pwszServerExecutable;
  /* 0x0118 */ unsigned long m_dwPreferredServerBitness;
  /* 0x011c */ unsigned long m_dwLocalServer32BinaryBitness;
  /* 0x0120 */ int m_bLUAEnabled;
  /* 0x0124 */ long Padding_422;
  /* 0x0128 */ wchar_t* m_pwszDisplayName;
  /* 0x0130 */ wchar_t* m_pwszBinaryName;
  /* 0x0138 */ wchar_t* m_pwszIconReference;
  /* 0x0140 */ struct _KEY_FULL_INFORMATION* m_pKeyInformation;
  /* 0x0148 */ struct _KEY_NAME_INFORMATION* m_pKeyNameInformation;
}; /* size: 0x0150 */

struct IHttpSecurity
{
}; /* size: 0x0008 */

struct PPM_IDLE_STATE_ACCOUNTING
{
  /* 0x0000 */ unsigned long IdleTransitions;
  /* 0x0004 */ unsigned long FailedTransitions;
  /* 0x0008 */ unsigned long InvalidBucketIndex;
  /* 0x000c */ long Padding_423;
  /* 0x0010 */ unsigned __int64 TotalTime;
  /* 0x0018 */ unsigned long IdleTimeBuckets[6];
}; /* size: 0x0030 */

struct WireThisPart1
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ unsigned long unique;
}; /* size: 0x0020 */

struct WireThisPart2
{
  /* 0x0000 */ struct WireThisPart1 part1;
  /* 0x0020 */ struct WireExtentArray ea;
  /* 0x0038 */ struct WireExtent e;
}; /* size: 0x0050 */

class CBasedDeltaListPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _FILE_BASIC_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFO, *PFILE_BASIC_INFO; /* size: 0x0028 */

typedef struct _UNIVERSAL_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
} UNIVERSAL_NAME_INFOW, *PUNIVERSAL_NAME_INFOW; /* size: 0x0008 */

typedef struct __midl_frag1009_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1009_t, *P_midl_frag1009_t; /* size: 0x0058 */

typedef struct _LDR_FAILURE_DATA
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ wchar_t ImageName[32];
  /* 0x0044 */ wchar_t AdditionalInfo[32];
} LDR_FAILURE_DATA, *PLDR_FAILURE_DATA; /* size: 0x0084 */

typedef struct _MIDL_SYNTAX_INFO
{
  /* 0x0000 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x0014 */ long Padding_424;
  /* 0x0018 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0020 */ const unsigned char* ProcString;
  /* 0x0028 */ const unsigned short* FmtStringOffset;
  /* 0x0030 */ const unsigned char* TypeString;
  /* 0x0038 */ const void* aUserMarshalQuadruple;
  /* 0x0040 */ unsigned __int64 pReserved1;
  /* 0x0048 */ unsigned __int64 pReserved2;
} MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO; /* size: 0x0050 */

typedef struct _PROVDATA_SIP
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ long Padding_425;
  /* 0x0018 */ struct SIP_DISPATCH_INFO_* pSip;
  /* 0x0020 */ struct SIP_DISPATCH_INFO_* pCATSip;
  /* 0x0028 */ struct SIP_SUBJECTINFO_* psSipSubjectInfo;
  /* 0x0030 */ struct SIP_SUBJECTINFO_* psSipCATSubjectInfo;
  /* 0x0038 */ struct SIP_INDIRECT_DATA_* psIndirectData;
} PROVDATA_SIP, *PPROVDATA_SIP; /* size: 0x0040 */

struct IMonikerProp
{
}; /* size: 0x0008 */

struct IOleWindow
{
}; /* size: 0x0008 */

typedef struct _FILE_FS_CONTROL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FreeSpaceStartFiltering;
  /* 0x0008 */ union _LARGE_INTEGER FreeSpaceThreshold;
  /* 0x0010 */ union _LARGE_INTEGER FreeSpaceStopFiltering;
  /* 0x0018 */ union _LARGE_INTEGER DefaultQuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER DefaultQuotaLimit;
  /* 0x0028 */ unsigned long FileSystemControlFlags;
  /* 0x002c */ long __PADDING__[1];
} FILE_FS_CONTROL_INFORMATION, *PFILE_FS_CONTROL_INFORMATION; /* size: 0x0030 */

class CoAllocator
{
}; /* size: 0x0008 */

struct <vc_attributes>::noncreatableAttribute
{
}; /* size: 0x0001 */

typedef struct _SERVICE_PRESHUTDOWN_INFO
{
  /* 0x0000 */ unsigned long dwPreshutdownTimeout;
} SERVICE_PRESHUTDOWN_INFO, *PSERVICE_PRESHUTDOWN_INFO; /* size: 0x0004 */

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA
{
  /* 0x0000 */ unsigned long BytesPerSector;
  /* 0x0004 */ unsigned long NumberOfCylinders;
  /* 0x0008 */ unsigned long SectorsPerTrack;
  /* 0x000c */ unsigned long NumberOfHeads;
} CM_DISK_GEOMETRY_DEVICE_DATA, *PCM_DISK_GEOMETRY_DEVICE_DATA; /* size: 0x0010 */

typedef struct _X86_CALL_FRAME
{
  /* 0x0000 */ unsigned long ReturnAddress;
  /* 0x0004 */ unsigned long Param1;
  /* 0x0008 */ unsigned long Param2;
  /* 0x000c */ unsigned long CompatibilityArea;
} X86_CALL_FRAME, *PX86_CALL_FRAME; /* size: 0x0010 */

typedef struct _CERT_POLICY_ID
{
  /* 0x0000 */ unsigned long cCertPolicyElementId;
  /* 0x0004 */ long Padding_426;
  /* 0x0008 */ char** rgpszCertPolicyElementId;
} CERT_POLICY_ID, *PCERT_POLICY_ID; /* size: 0x0010 */

struct <vc_attributes>::outAttribute
{
}; /* size: 0x0001 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _CM_RESOURCE_LIST* ResourceList;
  /* 0x0018 */ unsigned long ResourceListSize;
  /* 0x001c */ long Padding_427;
  /* 0x0020 */ struct _PLUGPLAY_CONTROL_CONFLICT_LIST* ConflictBuffer;
  /* 0x0028 */ unsigned long ConflictBufferSize;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ long Status;
  /* 0x0034 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_DATA, *PPLUGPLAY_CONTROL_CONFLICT_DATA; /* size: 0x0038 */

typedef struct _TXFS_GET_METADATA_INFO_OUT
{
  struct
  {
    /* 0x0000 */ __int64 LowPart;
    /* 0x0008 */ __int64 HighPart;
  } /* size: 0x0010 */ TxfFileId;
  /* 0x0010 */ struct _GUID LockingTransaction;
  /* 0x0020 */ unsigned __int64 LastLsn;
  /* 0x0028 */ unsigned long TransactionState;
  /* 0x002c */ long __PADDING__[1];
} TXFS_GET_METADATA_INFO_OUT, *PTXFS_GET_METADATA_INFO_OUT; /* size: 0x0030 */

class CEndpointEntry
{
  /* 0x0000 */ class CEndpointEntry* m_pNext;
  /* 0x0008 */ unsigned short m_wTowerId;
  /* 0x000a */ char Padding_428[6];
  /* 0x0010 */ wchar_t* m_pszEndpoint;
  /* 0x0018 */ wchar_t* m_pszProtSeq;
  /* 0x0020 */ unsigned long m_dwFlags;
  /* 0x0024 */ int m_fProcessed;
}; /* size: 0x0028 */

typedef struct _CPTABLEINFO
{
  /* 0x0000 */ unsigned short CodePage;
  /* 0x0002 */ unsigned short MaximumCharacterSize;
  /* 0x0004 */ unsigned short DefaultChar;
  /* 0x0006 */ unsigned short UniDefaultChar;
  /* 0x0008 */ unsigned short TransDefaultChar;
  /* 0x000a */ unsigned short TransUniDefaultChar;
  /* 0x000c */ unsigned short DBCSCodePage;
  /* 0x000e */ unsigned char LeadByte[12];
  /* 0x001a */ char Padding_429[6];
  /* 0x0020 */ unsigned short* MultiByteTable;
  /* 0x0028 */ void* WideCharTable;
  /* 0x0030 */ unsigned short* DBCSRanges;
  /* 0x0038 */ unsigned short* DBCSOffsets;
} CPTABLEINFO, *PCPTABLEINFO; /* size: 0x0040 */

typedef struct _NLSTABLEINFO
{
  /* 0x0000 */ struct _CPTABLEINFO OemTableInfo;
  /* 0x0040 */ struct _CPTABLEINFO AnsiTableInfo;
  /* 0x0080 */ unsigned short* UpperCaseTable;
  /* 0x0088 */ unsigned short* LowerCaseTable;
} NLSTABLEINFO, *PNLSTABLEINFO; /* size: 0x0090 */

class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>
{
  /* 0x0000 */ long Padding_430[46];
  /* 0x00b8 */ class XSLOCK m_xslAgeOutLock;
  /* 0x0138 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x013c */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x0140 */

typedef union _RemotableHandle::__MIDL_IWinTypes_0009
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ long hRemote;
  }; /* size: 0x0004 */
} RemotableHandle::__MIDL_IWinTypes_0009, *PRemotableHandle::__MIDL_IWinTypes_0009; /* size: 0x0004 */

typedef struct _RemotableHandle
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ union _RemotableHandle::__MIDL_IWinTypes_0009 u;
} RemotableHandle, *PRemotableHandle; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER PerProcessUserTimeLimit;
  /* 0x0008 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0010 */ unsigned long LimitFlags;
  /* 0x0014 */ long Padding_431;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0028 */ unsigned long ActiveProcessLimit;
  /* 0x002c */ long Padding_432;
  /* 0x0030 */ unsigned __int64 Affinity;
  /* 0x0038 */ unsigned long PriorityClass;
  /* 0x003c */ unsigned long SchedulingClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION; /* size: 0x0040 */

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  /* 0x0040 */ struct _IO_COUNTERS IoInfo;
  /* 0x0070 */ unsigned __int64 ProcessMemoryLimit;
  /* 0x0078 */ unsigned __int64 JobMemoryLimit;
  /* 0x0080 */ unsigned __int64 PeakProcessMemoryUsed;
  /* 0x0088 */ unsigned __int64 PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION; /* size: 0x0090 */

typedef struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* OriginalMemberLayout;
  /* 0x0010 */ const void* OriginalPointerLayout;
  /* 0x0018 */ const void* PointerLayout;
} NDR64_BOGUS_STRUCTURE_HEADER_FORMAT, *PNDR64_BOGUS_STRUCTURE_HEADER_FORMAT; /* size: 0x0020 */

typedef struct __midl_frag674_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_MEMPAD_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
  } /* size: 0x0030 */ frag2;
} _midl_frag674_t, *P_midl_frag674_t; /* size: 0x0050 */

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  /* 0x0000 */ unsigned long ListSize;
  /* 0x0004 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long SlotNumber;
  /* 0x0010 */ unsigned long Reserved[3];
  /* 0x001c */ unsigned long AlternativeLists;
  /* 0x0020 */ struct _IO_RESOURCE_LIST List[1];
} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST; /* size: 0x0048 */

typedef struct _SYSTEM_CALL_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long TotalCalls;
  /* 0x0008 */ union _LARGE_INTEGER TimeOfCalls[1];
} SYSTEM_CALL_TIME_INFORMATION, *PSYSTEM_CALL_TIME_INFORMATION; /* size: 0x0010 */

struct SAccessCache
{
  /* 0x0000 */ int fAccess;
  /* 0x0004 */ struct _LUID lClient;
}; /* size: 0x000c */

struct tagOBJECTDESCRIPTOR
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long dwDrawAspect;
  /* 0x0018 */ struct tagSIZE sizel;
  /* 0x0020 */ struct _POINTL pointl;
  /* 0x0028 */ unsigned long dwStatus;
  /* 0x002c */ unsigned long dwFullUserTypeName;
  /* 0x0030 */ unsigned long dwSrcOfCopy;
}; /* size: 0x0034 */

struct tagEMRPOLYPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cpts;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct tagPOINTS apts[1];
}; /* size: 0x0028 */

typedef struct _CM_INT13_DRIVE_PARAMETER
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ unsigned long MaxCylinders;
  /* 0x0006 */ unsigned short SectorsPerTrack;
  /* 0x0008 */ unsigned short MaxHeads;
  /* 0x000a */ unsigned short NumberDrives;
} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER; /* size: 0x000c */

struct ICreateTypeInfo2
{
}; /* size: 0x0008 */

struct tagCUSTDATA
{
  /* 0x0000 */ unsigned long cCustData;
  /* 0x0004 */ long Padding_433;
  /* 0x0008 */ struct tagCUSTDATAITEM* prgCustData;
}; /* size: 0x0010 */

class CPointerMoniker
{
  /* 0x0000 */ long Padding_434[12];
  /* 0x0030 */ struct IUnknown* m_pUnk;
}; /* size: 0x0038 */

struct IOleClientSite
{
}; /* size: 0x0008 */

typedef struct _REMSECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long lpSecurityDescriptor;
  /* 0x0008 */ int bInheritHandle;
} REMSECURITY_ATTRIBUTES, *PREMSECURITY_ATTRIBUTES; /* size: 0x000c */

struct ICacheControl
{
}; /* size: 0x0008 */

struct tagSTYLESTRUCT
{
  /* 0x0000 */ unsigned long styleOld;
  /* 0x0004 */ unsigned long styleNew;
}; /* size: 0x0008 */

struct IAccessControl
{
}; /* size: 0x0008 */

struct IViewObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Draw /* function */;
  /* 0x0020 */ void* GetColorSet /* function */;
  /* 0x0028 */ void* Freeze /* function */;
  /* 0x0030 */ void* Unfreeze /* function */;
  /* 0x0038 */ void* SetAdvise /* function */;
  /* 0x0040 */ void* GetAdvise /* function */;
}; /* size: 0x0048 */

typedef struct _JOBOBJECT_JOBSET_INFORMATION
{
  /* 0x0000 */ unsigned long MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION; /* size: 0x0004 */

struct tagScmReplyInfoData
{
  /* 0x0000 */ struct tagCustomPrivResolverInfo* pResolverInfo;
  /* 0x0008 */ struct _customREMOTE_REPLY_SCM_INFO* remoteReply;
}; /* size: 0x0010 */

class ScmReplyInfo
{
  /* 0x0000 */ long Padding_435[8];
  /* 0x0020 */ struct tagScmReplyInfoData _scmReplyInfoData;
}; /* size: 0x0030 */

class ActivationPropertiesOut
{
  /* 0x0000 */ long Padding_436[132];
  /* 0x0210 */ class ActivationPropertiesOut::OutSerializer* _pOutSer;
  /* 0x0218 */ class ActivationPropertiesOut::OutSerializer _outSer;
  /* 0x0318 */ class ScmReplyInfo _scmReplyInfo;
  /* 0x0348 */ struct tagCOMVERSION _clientCOMVersion;
  /* 0x034c */ int _fBrokenRefCount;
}; /* size: 0x0350 */

typedef struct _SYSTEM_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleProcessTime;
  /* 0x0008 */ union _LARGE_INTEGER IoReadTransferCount;
  /* 0x0010 */ union _LARGE_INTEGER IoWriteTransferCount;
  /* 0x0018 */ union _LARGE_INTEGER IoOtherTransferCount;
  /* 0x0020 */ unsigned long IoReadOperationCount;
  /* 0x0024 */ unsigned long IoWriteOperationCount;
  /* 0x0028 */ unsigned long IoOtherOperationCount;
  /* 0x002c */ unsigned long AvailablePages;
  /* 0x0030 */ unsigned long CommittedPages;
  /* 0x0034 */ unsigned long CommitLimit;
  /* 0x0038 */ unsigned long PeakCommitment;
  /* 0x003c */ unsigned long PageFaultCount;
  /* 0x0040 */ unsigned long CopyOnWriteCount;
  /* 0x0044 */ unsigned long TransitionCount;
  /* 0x0048 */ unsigned long CacheTransitionCount;
  /* 0x004c */ unsigned long DemandZeroCount;
  /* 0x0050 */ unsigned long PageReadCount;
  /* 0x0054 */ unsigned long PageReadIoCount;
  /* 0x0058 */ unsigned long CacheReadCount;
  /* 0x005c */ unsigned long CacheIoCount;
  /* 0x0060 */ unsigned long DirtyPagesWriteCount;
  /* 0x0064 */ unsigned long DirtyWriteIoCount;
  /* 0x0068 */ unsigned long MappedPagesWriteCount;
  /* 0x006c */ unsigned long MappedWriteIoCount;
  /* 0x0070 */ unsigned long PagedPoolPages;
  /* 0x0074 */ unsigned long NonPagedPoolPages;
  /* 0x0078 */ unsigned long PagedPoolAllocs;
  /* 0x007c */ unsigned long PagedPoolFrees;
  /* 0x0080 */ unsigned long NonPagedPoolAllocs;
  /* 0x0084 */ unsigned long NonPagedPoolFrees;
  /* 0x0088 */ unsigned long FreeSystemPtes;
  /* 0x008c */ unsigned long ResidentSystemCodePage;
  /* 0x0090 */ unsigned long TotalSystemDriverPages;
  /* 0x0094 */ unsigned long TotalSystemCodePages;
  /* 0x0098 */ unsigned long NonPagedPoolLookasideHits;
  /* 0x009c */ unsigned long PagedPoolLookasideHits;
  /* 0x00a0 */ unsigned long AvailablePagedPoolPages;
  /* 0x00a4 */ unsigned long ResidentSystemCachePage;
  /* 0x00a8 */ unsigned long ResidentPagedPoolPage;
  /* 0x00ac */ unsigned long ResidentSystemDriverPage;
  /* 0x00b0 */ unsigned long CcFastReadNoWait;
  /* 0x00b4 */ unsigned long CcFastReadWait;
  /* 0x00b8 */ unsigned long CcFastReadResourceMiss;
  /* 0x00bc */ unsigned long CcFastReadNotPossible;
  /* 0x00c0 */ unsigned long CcFastMdlReadNoWait;
  /* 0x00c4 */ unsigned long CcFastMdlReadWait;
  /* 0x00c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x00cc */ unsigned long CcFastMdlReadNotPossible;
  /* 0x00d0 */ unsigned long CcMapDataNoWait;
  /* 0x00d4 */ unsigned long CcMapDataWait;
  /* 0x00d8 */ unsigned long CcMapDataNoWaitMiss;
  /* 0x00dc */ unsigned long CcMapDataWaitMiss;
  /* 0x00e0 */ unsigned long CcPinMappedDataCount;
  /* 0x00e4 */ unsigned long CcPinReadNoWait;
  /* 0x00e8 */ unsigned long CcPinReadWait;
  /* 0x00ec */ unsigned long CcPinReadNoWaitMiss;
  /* 0x00f0 */ unsigned long CcPinReadWaitMiss;
  /* 0x00f4 */ unsigned long CcCopyReadNoWait;
  /* 0x00f8 */ unsigned long CcCopyReadWait;
  /* 0x00fc */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x0100 */ unsigned long CcCopyReadWaitMiss;
  /* 0x0104 */ unsigned long CcMdlReadNoWait;
  /* 0x0108 */ unsigned long CcMdlReadWait;
  /* 0x010c */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x0110 */ unsigned long CcMdlReadWaitMiss;
  /* 0x0114 */ unsigned long CcReadAheadIos;
  /* 0x0118 */ unsigned long CcLazyWriteIos;
  /* 0x011c */ unsigned long CcLazyWritePages;
  /* 0x0120 */ unsigned long CcDataFlushes;
  /* 0x0124 */ unsigned long CcDataPages;
  /* 0x0128 */ unsigned long ContextSwitches;
  /* 0x012c */ unsigned long FirstLevelTbFills;
  /* 0x0130 */ unsigned long SecondLevelTbFills;
  /* 0x0134 */ unsigned long SystemCalls;
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION; /* size: 0x0138 */

struct IEnumSTATPROPSETSTG
{
}; /* size: 0x0008 */

typedef struct _ACCESS_ALLOWED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE; /* size: 0x0030 */

struct <vc_attributes>::customAttribute
{
  /* 0x0000 */ char* value;
}; /* size: 0x0008 */

struct IAddrTrackingControl
{
}; /* size: 0x0008 */

struct IXMLHttpRequest
{
}; /* size: 0x0008 */

struct tagSTREAM_ACE
{
  /* 0x0000 */ unsigned long grfAccessPermissions;
  /* 0x0004 */ enum _ACCESS_MODE grfAccessMode;
  /* 0x0008 */ enum _TRUSTEE_TYPE TrusteeType;
  /* 0x000c */ enum _TRUSTEE_FORM TrusteeForm;
  /* 0x0010 */ unsigned short* pTrusteeName;
  /* 0x0018 */ struct tagSTREAM_SID* pSID;
}; /* size: 0x0020 */

struct <vc_attributes>::requesteditAttribute
{
}; /* size: 0x0001 */

struct IScmRequestInfo
{
}; /* size: 0x0008 */

typedef struct _APP_COMPAT_SHIM_INFO
{
  /* 0x0000 */ void* pHookAPIList;
  /* 0x0008 */ void* pHookPatchList;
  /* 0x0010 */ void* ppHookAPI;
  /* 0x0018 */ unsigned long dwHookAPICount;
  /* 0x001c */ long Padding_437;
  /* 0x0020 */ void* pExeFilter;
  /* 0x0028 */ void* pGlobalFilterList;
  /* 0x0030 */ void* pLBFilterList;
  /* 0x0038 */ void* pCritSec;
  /* 0x0040 */ void* pShimHeap;
} APP_COMPAT_SHIM_INFO, *PAPP_COMPAT_SHIM_INFO; /* size: 0x0048 */

struct tagCWPSTRUCT
{
  /* 0x0000 */ __int64 lParam;
  /* 0x0008 */ unsigned __int64 wParam;
  /* 0x0010 */ unsigned int message;
  /* 0x0014 */ long Padding_438;
  /* 0x0018 */ struct HWND__* hwnd;
}; /* size: 0x0020 */

typedef struct _IMAGE_THUNK_DATA32
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long ForwarderString;
      /* 0x0000 */ unsigned long Function;
      /* 0x0000 */ unsigned long Ordinal;
      /* 0x0000 */ unsigned long AddressOfData;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
} IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32; /* size: 0x0004 */

struct CExposedIterator
{
  /* 0x0000 */ long Padding_439[12];
  /* 0x0030 */ class CPubDocFile* _ppdf;
  /* 0x0038 */ class CDFBasis* _pdfb;
  /* 0x0040 */ class CPerContext* _ppc;
  /* 0x0048 */ long _cReferences;
  /* 0x004c */ unsigned long _sig;
  /* 0x0050 */ class CDfName _dfnKey;
  /* 0x0092 */ char __PADDING__[6];
}; /* size: 0x0098 */

typedef struct _RTL_HEAP_ENTRY
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned short Flags;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long Padding_440;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ unsigned __int64 Settable;
        /* 0x0018 */ unsigned long Tag;
        /* 0x001c */ long __PADDING__[1];
      } /* size: 0x0010 */ s1;
      struct
      {
        /* 0x0010 */ unsigned __int64 CommittedSize;
        /* 0x0018 */ void* FirstBlock;
      } /* size: 0x0010 */ s2;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} RTL_HEAP_ENTRY, *PRTL_HEAP_ENTRY; /* size: 0x0020 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusPointerCarryingFrame<Windows::ErrorHandling::Rtl::CBoolFrame>
{
  /* 0x0000 */ long* m_pstatus;
}; /* size: 0x0008 */

typedef struct _tagSOFTDISTINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwAdState;
  /* 0x000c */ long Padding_441;
  /* 0x0010 */ wchar_t* szTitle;
  /* 0x0018 */ wchar_t* szAbstract;
  /* 0x0020 */ wchar_t* szHREF;
  /* 0x0028 */ unsigned long dwInstalledVersionMS;
  /* 0x002c */ unsigned long dwInstalledVersionLS;
  /* 0x0030 */ unsigned long dwUpdateVersionMS;
  /* 0x0034 */ unsigned long dwUpdateVersionLS;
  /* 0x0038 */ unsigned long dwAdvertisedVersionMS;
  /* 0x003c */ unsigned long dwAdvertisedVersionLS;
  /* 0x0040 */ unsigned long dwReserved;
  /* 0x0044 */ long __PADDING__[1];
} tagSOFTDISTINFO, *PtagSOFTDISTINFO; /* size: 0x0048 */

struct tagANIMATIONINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iMinAnimate;
}; /* size: 0x0008 */

struct IInternetZoneManagerEx
{
}; /* size: 0x0008 */

typedef struct _TRANSACTION_PROPERTIES_INFORMATION
{
  /* 0x0000 */ unsigned long IsolationLevel;
  /* 0x0004 */ unsigned long IsolationFlags;
  /* 0x0008 */ union _LARGE_INTEGER Timeout;
  /* 0x0010 */ unsigned long Outcome;
  /* 0x0014 */ unsigned long DescriptionLength;
  /* 0x0018 */ wchar_t Description[1];
  /* 0x001a */ char __PADDING__[6];
} TRANSACTION_PROPERTIES_INFORMATION, *PTRANSACTION_PROPERTIES_INFORMATION; /* size: 0x0020 */

typedef struct _WOW64_FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} WOW64_FLOATING_SAVE_AREA, *PWOW64_FLOATING_SAVE_AREA; /* size: 0x0070 */

typedef struct _WOW64_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _WOW64_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  /* 0x00cc */ unsigned char ExtendedRegisters[512];
} WOW64_CONTEXT, *PWOW64_CONTEXT; /* size: 0x02cc */

class CPtrBlock
{
  /* 0x0000 */ int _cPtrs;
  /* 0x0004 */ long Padding_442;
  /* 0x0008 */ class CPtrBlock* _pbNext;
  /* 0x0010 */ void* _apv[50];
}; /* size: 0x01a0 */

class CPtrCache
{
  /* 0x0000 */ class CPtrBlock _pbFirst;
  /* 0x01a0 */ class CPtrBlock* _pbHead;
  /* 0x01a8 */ class CPtrBlock* _pbEnum;
  /* 0x01b0 */ int _iEnum;
}; /* size: 0x01b8 */

struct AsyncIPipeByte
{
}; /* size: 0x0008 */

struct IRunnableObject
{
  /* 0x0000 */ struct IRunnableObjectVtbl* lpVtbl;
}; /* size: 0x0008 */

typedef union _INSTALLSPEC
{
  union
  {
    struct
    {
      /* 0x0000 */ wchar_t* Name;
      /* 0x0008 */ struct _GUID GPOId;
    } /* size: 0x0018 */ AppName;
    /* 0x0000 */ wchar_t* FileExt;
    /* 0x0000 */ wchar_t* ProgId;
    struct
    {
      /* 0x0000 */ struct _GUID Clsid;
      /* 0x0010 */ unsigned long ClsCtx;
    } /* size: 0x0014 */ COMClass;
  }; /* size: 0x0018 */
} INSTALLSPEC, *PINSTALLSPEC; /* size: 0x0018 */

struct tagRAWMOUSE
{
  /* 0x0000 */ unsigned short usFlags;
  /* 0x0002 */ char Padding_443[2];
  union
  {
    /* 0x0004 */ unsigned long ulButtons;
    struct
    {
      /* 0x0004 */ unsigned short usButtonFlags;
      /* 0x0006 */ unsigned short usButtonData;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ulRawButtons;
  /* 0x000c */ long lLastX;
  /* 0x0010 */ long lLastY;
  /* 0x0014 */ unsigned long ulExtraInformation;
}; /* size: 0x0018 */

struct tagMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ long Padding_444;
  /* 0x0018 */ struct HMENU__* hSubMenu;
  /* 0x0020 */ struct HBITMAP__* hbmpChecked;
  /* 0x0028 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0030 */ unsigned __int64 dwItemData;
  /* 0x0038 */ char* dwTypeData;
  /* 0x0040 */ unsigned int cch;
  /* 0x0044 */ long Padding_445;
  /* 0x0048 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0050 */

typedef struct _KCRM_TRANSACTION_BLOB
{
  /* 0x0000 */ struct _GUID UOW;
  /* 0x0010 */ struct _GUID TmIdentity;
  /* 0x0020 */ unsigned long IsolationLevel;
  /* 0x0024 */ unsigned long IsolationFlags;
  /* 0x0028 */ unsigned long Timeout;
  /* 0x002c */ wchar_t Description[64];
} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB; /* size: 0x00ac */

typedef struct __midl_frag205_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag205_t, *P_midl_frag205_t; /* size: 0x0040 */

typedef struct __midl_frag470_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag470_t, *P_midl_frag470_t; /* size: 0x0018 */

struct CPlex
{
  /* 0x0000 */ struct CPlex* pNext;
  /* 0x0008 */ unsigned int nMax;
  /* 0x000c */ unsigned int nCur;
}; /* size: 0x0010 */

struct _TP_CALLBACK_INSTANCE;

struct CM_Power_Data_s
{
  /* 0x0000 */ unsigned long PD_Size;
  /* 0x0004 */ enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
  /* 0x0008 */ unsigned long PD_Capabilities;
  /* 0x000c */ unsigned long PD_D1Latency;
  /* 0x0010 */ unsigned long PD_D2Latency;
  /* 0x0014 */ unsigned long PD_D3Latency;
  /* 0x0018 */ enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  /* 0x0034 */ enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
}; /* size: 0x0038 */

typedef struct __midl_frag240_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag240_t, *P_midl_frag240_t; /* size: 0x0040 */

typedef struct _GENERIC_BINDING_ROUTINE_PAIR
{
  /* 0x0000 */ void* pfnBind /* function */;
  /* 0x0008 */ void* pfnUnbind /* function */;
} GENERIC_BINDING_ROUTINE_PAIR, *PGENERIC_BINDING_ROUTINE_PAIR; /* size: 0x0010 */

struct tagEMRMASKBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long xMask;
  /* 0x0068 */ long yMask;
  /* 0x006c */ unsigned long iUsageMask;
  /* 0x0070 */ unsigned long offBmiMask;
  /* 0x0074 */ unsigned long cbBmiMask;
  /* 0x0078 */ unsigned long offBitsMask;
  /* 0x007c */ unsigned long cbBitsMask;
}; /* size: 0x0080 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY
{
  /* 0x0000 */ unsigned long DeviceInstance;
  /* 0x0004 */ unsigned long DeviceFlags;
  /* 0x0008 */ unsigned long ResourceType;
  /* 0x000c */ long Padding_446;
  /* 0x0010 */ unsigned __int64 ResourceStart;
  /* 0x0018 */ unsigned __int64 ResourceEnd;
  /* 0x0020 */ unsigned long ResourceFlags;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_ENTRY, *PPLUGPLAY_CONTROL_CONFLICT_ENTRY; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST
{
  /* 0x0000 */ unsigned long Reserved1;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ unsigned long ConflictsCounted;
  /* 0x000c */ unsigned long ConflictsListed;
  /* 0x0010 */ unsigned long RequiredBufferSize;
  /* 0x0014 */ long Padding_447;
  /* 0x0018 */ struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
} PLUGPLAY_CONTROL_CONFLICT_LIST, *PPLUGPLAY_CONTROL_CONFLICT_LIST; /* size: 0x0040 */

struct Windows::Rtl::IRtlInterface
{
}; /* size: 0x0008 */

typedef struct _CERT_REVOCATION_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_448;
  /* 0x0008 */ void* hChainEngine;
  /* 0x0010 */ void* hAdditionalStore;
  /* 0x0018 */ unsigned long dwChainFlags;
  /* 0x001c */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0020 */ struct _FILETIME* pftCurrentTime;
  /* 0x0028 */ struct _FILETIME* pftCacheResync;
} CERT_REVOCATION_CHAIN_PARA, *PCERT_REVOCATION_CHAIN_PARA; /* size: 0x0030 */

typedef struct _KUSER_SHARED_DATA
{
  /* 0x0000 */ unsigned long TickCountLowDeprecated;
  /* 0x0004 */ unsigned long TickCountMultiplier;
  /* 0x0008 */ volatile struct _KSYSTEM_TIME InterruptTime;
  /* 0x0014 */ volatile struct _KSYSTEM_TIME SystemTime;
  /* 0x0020 */ volatile struct _KSYSTEM_TIME TimeZoneBias;
  /* 0x002c */ unsigned short ImageNumberLow;
  /* 0x002e */ unsigned short ImageNumberHigh;
  /* 0x0030 */ wchar_t NtSystemRoot[260];
  /* 0x0238 */ unsigned long MaxStackTraceDepth;
  /* 0x023c */ unsigned long CryptoExponent;
  /* 0x0240 */ unsigned long TimeZoneId;
  /* 0x0244 */ unsigned long LargePageMinimum;
  /* 0x0248 */ unsigned long Reserved2[7];
  /* 0x0264 */ enum _NT_PRODUCT_TYPE NtProductType;
  /* 0x0268 */ unsigned char ProductTypeIsValid;
  /* 0x0269 */ char Padding_449[3];
  /* 0x026c */ unsigned long NtMajorVersion;
  /* 0x0270 */ unsigned long NtMinorVersion;
  /* 0x0274 */ unsigned char ProcessorFeatures[64];
  /* 0x02b4 */ unsigned long Reserved1;
  /* 0x02b8 */ unsigned long Reserved3;
  /* 0x02bc */ volatile unsigned long TimeSlip;
  /* 0x02c0 */ enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  /* 0x02c4 */ long Padding_450;
  /* 0x02c8 */ union _LARGE_INTEGER SystemExpirationDate;
  /* 0x02d0 */ unsigned long SuiteMask;
  /* 0x02d4 */ unsigned char KdDebuggerEnabled;
  /* 0x02d5 */ unsigned char NXSupportPolicy;
  /* 0x02d6 */ char Padding_451[2];
  /* 0x02d8 */ volatile unsigned long ActiveConsoleId;
  /* 0x02dc */ volatile unsigned long DismountCount;
  /* 0x02e0 */ unsigned long ComPlusPackage;
  /* 0x02e4 */ unsigned long LastSystemRITEventTickCount;
  /* 0x02e8 */ unsigned long NumberOfPhysicalPages;
  /* 0x02ec */ unsigned char SafeBootMode;
  /* 0x02ed */ char Padding_452[3];
  union
  {
    /* 0x02f0 */ unsigned long SharedDataFlags;
    struct /* bitfield */
    {
      /* 0x02f0 */ unsigned long DbgErrorPortPresent : 1; /* bit position: 0 */
      /* 0x02f0 */ unsigned long DbgElevationEnabled : 1; /* bit position: 1 */
      /* 0x02f0 */ unsigned long DbgVirtEnabled : 1; /* bit position: 2 */
      /* 0x02f0 */ unsigned long DbgInstallerDetectEnabled : 1; /* bit position: 3 */
      /* 0x02f0 */ unsigned long DbgSystemDllRelocated : 1; /* bit position: 4 */
      /* 0x02f0 */ unsigned long DbgDynProcessorEnabled : 1; /* bit position: 5 */
      /* 0x02f0 */ unsigned long DbgSEHValidationEnabled : 1; /* bit position: 6 */
      /* 0x02f0 */ unsigned long SpareBits : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x02f4 */ long Padding_453;
  /* 0x02f8 */ unsigned __int64 TestRetInstruction;
  /* 0x0300 */ unsigned long SystemCall;
  /* 0x0304 */ unsigned long SystemCallReturn;
  /* 0x0308 */ unsigned __int64 SystemCallPad[3];
  union
  {
    /* 0x0320 */ volatile struct _KSYSTEM_TIME TickCount;
    /* 0x0320 */ volatile unsigned __int64 TickCountQuad;
  }; /* size: 0x000c */
  /* 0x032c */ long Padding_454;
  /* 0x0330 */ unsigned long Cookie;
  /* 0x0334 */ long Padding_455;
  /* 0x0338 */ __int64 ConsoleSessionForegroundProcessId;
  /* 0x0340 */ unsigned long Wow64SharedInformation[16];
  /* 0x0380 */ unsigned short UserModeGlobalLogger[8];
  /* 0x0390 */ unsigned long HeapTracingPid[2];
  /* 0x0398 */ unsigned long CritSecTracingPid[2];
  /* 0x03a0 */ unsigned long ImageFileExecutionOptions;
  /* 0x03a4 */ unsigned long LangGenerationCount;
  union
  {
    /* 0x03a8 */ unsigned __int64 AffinityPad;
    /* 0x03a8 */ unsigned __int64 ActiveProcessorAffinity;
  }; /* size: 0x0008 */
  /* 0x03b0 */ volatile unsigned __int64 InterruptTimeBias;
} KUSER_SHARED_DATA, *PKUSER_SHARED_DATA; /* size: 0x03b8 */

struct DLGTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ unsigned short cdit;
  /* 0x000a */ short x;
  /* 0x000c */ short y;
  /* 0x000e */ short cx;
  /* 0x0010 */ short cy;
}; /* size: 0x0012 */

typedef struct _SYSTEM_INFO
{
  union
  {
    /* 0x0000 */ unsigned long dwOemId;
    struct
    {
      /* 0x0000 */ unsigned short wProcessorArchitecture;
      /* 0x0002 */ unsigned short wReserved;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwPageSize;
  /* 0x0008 */ void* lpMinimumApplicationAddress;
  /* 0x0010 */ void* lpMaximumApplicationAddress;
  /* 0x0018 */ unsigned __int64 dwActiveProcessorMask;
  /* 0x0020 */ unsigned long dwNumberOfProcessors;
  /* 0x0024 */ unsigned long dwProcessorType;
  /* 0x0028 */ unsigned long dwAllocationGranularity;
  /* 0x002c */ unsigned short wProcessorLevel;
  /* 0x002e */ unsigned short wProcessorRevision;
} SYSTEM_INFO, *PSYSTEM_INFO; /* size: 0x0030 */

struct tagMONITORINFOEXW
{
  /* 0x0000 */ long Padding_456[10];
  /* 0x0028 */ wchar_t szDevice[32];
}; /* size: 0x0068 */

typedef union _FOUR_PART_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version64;
    struct
    {
      /* 0x0000 */ unsigned long BuildAndRevision;
      /* 0x0004 */ unsigned long MajorAndMinor;
    } /* size: 0x0008 */ Version32;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    } /* size: 0x0008 */ Version16;
  }; /* size: 0x0008 */
} FOUR_PART_VERSION, *PFOUR_PART_VERSION; /* size: 0x0008 */

struct tagCBTACTIVATESTRUCT
{
  /* 0x0000 */ int fMouse;
  /* 0x0004 */ long Padding_457;
  /* 0x0008 */ struct HWND__* hWndActive;
}; /* size: 0x0010 */

struct IRootStorage
{
}; /* size: 0x0008 */

struct tagPOINTFX
{
  /* 0x0000 */ struct _FIXED x;
  /* 0x0004 */ struct _FIXED y;
}; /* size: 0x0008 */

struct tagTTPOLYGONHEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ struct tagPOINTFX pfxStart;
}; /* size: 0x0010 */

typedef struct _RTL_BITMAP_EX
{
  /* 0x0000 */ unsigned __int64 SizeOfBitMap;
  /* 0x0008 */ unsigned __int64* Buffer;
} RTL_BITMAP_EX, *PRTL_BITMAP_EX; /* size: 0x0010 */

typedef struct _SHELLEXECUTEINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const wchar_t* lpVerb;
  /* 0x0018 */ const wchar_t* lpFile;
  /* 0x0020 */ const wchar_t* lpParameters;
  /* 0x0028 */ const wchar_t* lpDirectory;
  /* 0x0030 */ int nShow;
  /* 0x0034 */ long Padding_458;
  /* 0x0038 */ struct HINSTANCE__* hInstApp;
  /* 0x0040 */ void* lpIDList;
  /* 0x0048 */ const wchar_t* lpClass;
  /* 0x0050 */ struct HKEY__* hkeyClass;
  /* 0x0058 */ unsigned long dwHotKey;
  /* 0x005c */ long Padding_459;
  union
  {
    /* 0x0060 */ void* hIcon;
    /* 0x0060 */ void* hMonitor;
  }; /* size: 0x0008 */
  /* 0x0068 */ void* hProcess;
} SHELLEXECUTEINFOW, *PSHELLEXECUTEINFOW; /* size: 0x0070 */

struct HWND__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY
{
  /* 0x0000 */ unsigned long Value;
  /* 0x0004 */ long Padding_460;
  /* 0x0008 */ const char* String;
}; /* size: 0x0010 */

typedef struct _FILE_RENAME_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_461[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION; /* size: 0x0018 */

typedef struct _QUOTA_LIMITS
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS; /* size: 0x0030 */

typedef struct _NETRESOURCEW
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0018 */ wchar_t* lpRemoteName;
  /* 0x0020 */ wchar_t* lpComment;
  /* 0x0028 */ wchar_t* lpProvider;
} NETRESOURCEW, *PNETRESOURCEW; /* size: 0x0030 */

struct tagCREATESTRUCTA
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x0010 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndParent;
  /* 0x0020 */ int cy;
  /* 0x0024 */ int cx;
  /* 0x0028 */ int y;
  /* 0x002c */ int x;
  /* 0x0030 */ long style;
  /* 0x0034 */ long Padding_462;
  /* 0x0038 */ const char* lpszName;
  /* 0x0040 */ const char* lpszClass;
  /* 0x0048 */ unsigned long dwExStyle;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

struct tagRemHGLOBAL
{
  /* 0x0000 */ long fNullHGlobal;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char data[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 ZeroBits;
  /* 0x0010 */ void* StackBase;
} PROCESS_STACK_ALLOCATION_INFORMATION, *PPROCESS_STACK_ALLOCATION_INFORMATION; /* size: 0x0018 */

struct IInternetSecurityManagerEx2
{
}; /* size: 0x0008 */

typedef struct _ACCESS_DENIED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE; /* size: 0x0030 */

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
  /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK* Next;
  /* 0x0008 */ unsigned __int64 UmRegistrationHandle;
  union
  {
    /* 0x0010 */ unsigned __int64 Logger;
    /* 0x0010 */ struct _WPP_WIN2K_CONTROL_BLOCK* Win2kCb;
    /* 0x0010 */ void* Ptr;
    /* 0x0010 */ struct _WPP_TRACE_CONTROL_BLOCK* Cb;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned char FlagsLen;
  /* 0x0019 */ unsigned char Level;
  /* 0x001a */ unsigned short Options;
  /* 0x001c */ unsigned long Flags[1];
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK; /* size: 0x0020 */

struct IEnumVARIANT
{
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ThreadingModel;
  /* 0x000c */ struct _GUID ReferenceClsid;
  /* 0x001c */ struct _GUID ConfiguredClsid;
  /* 0x002c */ struct _GUID ImplementedClsid;
  /* 0x003c */ struct _GUID TypeLibraryId;
  /* 0x004c */ unsigned long ModuleLength;
  /* 0x0050 */ unsigned long ModuleOffset;
  /* 0x0054 */ unsigned long ProgIdLength;
  /* 0x0058 */ unsigned long ProgIdOffset;
  /* 0x005c */ unsigned long ShimDataLength;
  /* 0x0060 */ unsigned long ShimDataOffset;
  /* 0x0064 */ unsigned long MiscStatusDefault;
  /* 0x0068 */ unsigned long MiscStatusContent;
  /* 0x006c */ unsigned long MiscStatusThumbnail;
  /* 0x0070 */ unsigned long MiscStatusIcon;
  /* 0x0074 */ unsigned long MiscStatusDocPrint;
} ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION, *PACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION; /* size: 0x0078 */

typedef struct _DWORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long alData[1];
} DWORD_BLOB, *PDWORD_BLOB; /* size: 0x0008 */

typedef struct _FILE_STANDARD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION; /* size: 0x0018 */

typedef struct _CM_FLOPPY_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ char Size[8];
  /* 0x000c */ unsigned long MaxDensity;
  /* 0x0010 */ unsigned long MountDensity;
  /* 0x0014 */ unsigned char StepRateHeadUnloadTime;
  /* 0x0015 */ unsigned char HeadLoadTime;
  /* 0x0016 */ unsigned char MotorOffTime;
  /* 0x0017 */ unsigned char SectorLengthCode;
  /* 0x0018 */ unsigned char SectorPerTrack;
  /* 0x0019 */ unsigned char ReadWriteGapLength;
  /* 0x001a */ unsigned char DataTransferLength;
  /* 0x001b */ unsigned char FormatGapLength;
  /* 0x001c */ unsigned char FormatFillCharacter;
  /* 0x001d */ unsigned char HeadSettleTime;
  /* 0x001e */ unsigned char MotorSettleTime;
  /* 0x001f */ unsigned char MaximumTrackValue;
  /* 0x0020 */ unsigned char DataTransferRate;
  /* 0x0021 */ char __PADDING__[3];
} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA; /* size: 0x0024 */

class XIUnknown
{
  /* 0x0000 */ struct IUnknown* _p;
}; /* size: 0x0008 */

typedef struct _RTL_SPLAY_LINKS
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* Parent;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS* RightChild;
} RTL_SPLAY_LINKS, *PRTL_SPLAY_LINKS; /* size: 0x0018 */

struct NET_ADDRESS_INFO_;

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO
{
  /* 0x0000 */ unsigned long UniqueProcessId;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 Buffer;
} RTL_QUERY_DEBUG_INFORMATION_INFO, *PRTL_QUERY_DEBUG_INFORMATION_INFO; /* size: 0x0010 */

typedef struct _TOKEN_LINKED_TOKEN
{
  /* 0x0000 */ void* LinkedToken;
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN; /* size: 0x0008 */

typedef struct _FILE_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFORMATION, *PFILE_STREAM_INFORMATION; /* size: 0x0020 */

typedef struct _QUERY_SERVICE_CONFIGW
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ long Padding_463;
  /* 0x0010 */ wchar_t* lpBinaryPathName;
  /* 0x0018 */ wchar_t* lpLoadOrderGroup;
  /* 0x0020 */ unsigned long dwTagId;
  /* 0x0024 */ long Padding_464;
  /* 0x0028 */ wchar_t* lpDependencies;
  /* 0x0030 */ wchar_t* lpServiceStartName;
  /* 0x0038 */ wchar_t* lpDisplayName;
} QUERY_SERVICE_CONFIGW, *PQUERY_SERVICE_CONFIGW; /* size: 0x0040 */

struct tagWIN16RECT
{
  /* 0x0000 */ unsigned short left;
  /* 0x0002 */ unsigned short top;
  /* 0x0004 */ unsigned short right;
  /* 0x0006 */ unsigned short bottom;
}; /* size: 0x0008 */

struct tagPLACEABLEMETAHEADER
{
  /* 0x0000 */ unsigned long key;
  /* 0x0004 */ unsigned short hmf;
  /* 0x0006 */ struct tagWIN16RECT bbox;
  /* 0x000e */ unsigned short inch;
  /* 0x0010 */ unsigned long reserved;
  /* 0x0014 */ unsigned short checksum;
}; /* size: 0x0016 */

typedef struct _MOVE_FILE_DATA32
{
  /* 0x0000 */ unsigned int FileHandle;
  /* 0x0004 */ long Padding_465;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
} MOVE_FILE_DATA32, *PMOVE_FILE_DATA32; /* size: 0x0020 */

typedef struct _FILE_ALIGNMENT_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION; /* size: 0x0004 */

typedef struct _RTL_RXACT_LOG
{
  /* 0x0000 */ unsigned long OperationCount;
  /* 0x0004 */ unsigned long LogSize;
  /* 0x0008 */ unsigned long LogSizeInUse;
  /* 0x000c */ unsigned long Alignment;
} RTL_RXACT_LOG, *PRTL_RXACT_LOG; /* size: 0x0010 */

struct ICallFrameEvents
{
}; /* size: 0x0008 */

struct IAsyncRpcChannelBuffer
{
}; /* size: 0x0008 */

struct IOleContainer
{
}; /* size: 0x0008 */

struct CRWLock::LockState
{
  struct /* bitfield */
  {
    /* 0x0000 */ volatile unsigned __int64 _numReaders : 20; /* bit position: 0 */
    /* 0x0000 */ volatile unsigned __int64 _writerPresent : 1; /* bit position: 20 */
    /* 0x0000 */ volatile unsigned __int64 _writerSignaled : 1; /* bit position: 21 */
    /* 0x0000 */ volatile unsigned __int64 _readerSignaled : 1; /* bit position: 22 */
    /* 0x0000 */ volatile unsigned __int64 _resetInProgress : 1; /* bit position: 23 */
    /* 0x0000 */ volatile unsigned __int64 _waitingReaders : 20; /* bit position: 24 */
    /* 0x0000 */ volatile unsigned __int64 _waitingWriters : 20; /* bit position: 44 */
  }; /* bitfield */
}; /* size: 0x0008 */

struct CRWLock::EventState
{
  struct /* bitfield */
  {
    /* 0x0000 */ volatile unsigned long _entryIsEventMask : 1; /* bit position: 0 */
    /* 0x0000 */ volatile unsigned long _entryIsMarkedForPooling : 1; /* bit position: 1 */
    /* 0x0000 */ volatile unsigned long _entryIsBeingPooled : 1; /* bit position: 2 */
    /* 0x0000 */ volatile unsigned long _readerEventBeingSignaled : 1; /* bit position: 3 */
    /* 0x0000 */ volatile unsigned long _readerEventBeingReset : 1; /* bit position: 4 */
    /* 0x0000 */ volatile unsigned long _readerCountIsSignalCount : 1; /* bit position: 5 */
    /* 0x0000 */ volatile unsigned long _readerCount : 25; /* bit position: 6 */
    /* 0x0000 */ volatile unsigned long _writerEventSignaled : 1; /* bit position: 31 */
  }; /* bitfield */
}; /* size: 0x0004 */

class CRWLock
{
  union
  {
    /* 0x0000 */ struct CRWLock::LockState _lockState;
    struct
    {
      /* 0x0000 */ volatile unsigned __int64 _ulLockState;
      /* 0x0008 */ volatile unsigned long _dwWriterSeqNum;
      /* 0x000c */ volatile unsigned long _dwWriterID;
      /* 0x0010 */ unsigned short _wFlags;
      /* 0x0012 */ unsigned short _wWriterLevel;
      /* 0x0014 */ long Padding_466;
      union
      {
        /* 0x0018 */ struct CRWLock::EventState _eventState;
        struct
        {
          /* 0x0018 */ volatile unsigned long _dwEventState;
          /* 0x001c */ volatile unsigned long _dwHighPart;
        }; /* size: 0x0008 */
        /* 0x0018 */ class EventPoolEntry* volatile _pPoolEntry;
      }; /* size: 0x0008 */
    }; /* size: 0x001c */
    /* 0x0000 */ unsigned long s_dwDefaultTimeout;
    /* 0x0000 */ unsigned long s_dwDefaultSpinCount;
    /* 0x0000 */ unsigned long s_dwNumberOfProcessors;
  }; /* size: 0x001c */
}; /* size: 0x0020 */

class CClassCache::CCEHashTable
{
}; /* size: 0x0028 */

class CClassCache::CDPEHashTable
{
}; /* size: 0x0028 */

class CClassCache
{
  union
  {
    /* 0x0000 */ unsigned long _dwFlags;
    /* 0x0000 */ class CRWLock _mxs;
    /* 0x0000 */ class CClassCache::CCEHashTable _ClassEntries;
    /* 0x0000 */ class CClassCache::CDPEHashTable _DllPathEntries;
    /* 0x0000 */ const unsigned long _cCEBuckets;
    /* 0x0000 */ const unsigned long _cDPEBuckets;
    /* 0x0000 */ struct SHashChain _CEBuckets[23];
    /* 0x0000 */ struct SHashChain _DPEBuckets[23];
    /* 0x0000 */ class CClassCache::CLSvrClassEntry* _MTALSvrsFront;
    /* 0x0000 */ class CClassCache::CLSvrClassEntry* _NTALSvrsFront;
    /* 0x0000 */ unsigned long _cRefsServerProcess;
    /* 0x0000 */ const unsigned long _CollectAtObjectCount;
    /* 0x0000 */ const unsigned long _CollectAtInterval;
    /* 0x0000 */ unsigned long _LastCollectionTickCount;
    /* 0x0000 */ unsigned long _LastObjectCount;
    /* 0x0000 */ class CClassCache::CCollectable* _ObjectsForCollection;
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

struct IClassFactory
{
}; /* size: 0x0008 */

class CGenObject
{
  /* 0x0000 */ long Padding_467[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ unsigned long m_dwAspect;
  /* 0x0010 */ unsigned long m_dwSize;
  /* 0x0014 */ long m_lWidth;
  /* 0x0018 */ long m_lHeight;
  /* 0x001c */ long Padding_468;
  /* 0x0020 */ void* m_hPres;
  /* 0x0028 */ unsigned short m_cfFormat;
  /* 0x002a */ char Padding_469[6];
  /* 0x0030 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0038 */

typedef struct _PROCESS_HEAP_ENTRY
{
  /* 0x0000 */ void* lpData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char cbOverhead;
  /* 0x000d */ unsigned char iRegionIndex;
  /* 0x000e */ unsigned short wFlags;
  union
  {
    struct
    {
      /* 0x0010 */ void* hMem;
      /* 0x0018 */ unsigned long dwReserved[3];
      /* 0x0024 */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0010 */ unsigned long dwCommittedSize;
      /* 0x0014 */ unsigned long dwUnCommittedSize;
      /* 0x0018 */ void* lpFirstBlock;
      /* 0x0020 */ void* lpLastBlock;
    } /* size: 0x0018 */ Region;
  }; /* size: 0x0018 */
} PROCESS_HEAP_ENTRY, *PPROCESS_HEAP_ENTRY; /* size: 0x0028 */

class Windows::Rtl::StringTraits<_LUTF8_STRING>
{
}; /* size: 0x0001 */

struct STARTING_LCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
}; /* size: 0x0008 */

typedef struct _MONIKEREXTENT
{
  /* 0x0000 */ unsigned long cbExtentBytes;
  /* 0x0004 */ unsigned short usKeyValue;
  /* 0x0006 */ unsigned char achExtentBytes[1];
  /* 0x0007 */ char __PADDING__[1];
} MONIKEREXTENT, *PMONIKEREXTENT; /* size: 0x0008 */

typedef struct __midl_frag1811_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1811_t, *P_midl_frag1811_t; /* size: 0x0038 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
  /* 0x0010 */ const char* SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX, *PTEB_ACTIVE_FRAME_CONTEXT_EX; /* size: 0x0018 */

class CRefExportCount
{
  /* 0x0000 */ long Padding_470[2];
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ unsigned long m_cExportCount;
  /* 0x0010 */ unsigned long m_IsZombie;
  /* 0x0014 */ unsigned long m_Status;
  /* 0x0018 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0020 */

struct ISpecifyPropertyPages
{
}; /* size: 0x0008 */

struct tagDROPSTRUCT
{
  /* 0x0000 */ struct HWND__* hwndSource;
  /* 0x0008 */ struct HWND__* hwndSink;
  /* 0x0010 */ unsigned long wFmt;
  /* 0x0014 */ long Padding_471;
  /* 0x0018 */ unsigned __int64 dwData;
  /* 0x0020 */ struct tagPOINT ptDrop;
  /* 0x0028 */ unsigned long dwControlData;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct tagMETHODDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0008 */ struct tagPARAMDATA* ppdata;
  /* 0x0010 */ long dispid;
  /* 0x0014 */ unsigned int iMeth;
  /* 0x0018 */ enum tagCALLCONV cc;
  /* 0x001c */ unsigned int cArgs;
  /* 0x0020 */ unsigned short wFlags;
  /* 0x0022 */ unsigned short vtReturn;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

class CClassCache::CLSvrClassEntry
{
  /* 0x0000 */ long Padding_472[10];
  /* 0x0028 */ class CClassCache::CLSvrClassEntry* _pNextLSvr;
  /* 0x0030 */ class CClassCache::CLSvrClassEntry* _pPrevLSvr;
  /* 0x0038 */ struct IUnknown* _pUnk;
  /* 0x0040 */ unsigned long _dwRegFlags;
  /* 0x0044 */ unsigned long _dwFlags;
  /* 0x0048 */ unsigned long _dwScmReg;
  /* 0x004c */ unsigned long _hApt;
  /* 0x0050 */ struct HWND__* _hWndDdeServer;
  /* 0x0058 */ class CObjServer* _pObjServer;
  /* 0x0060 */ unsigned long _dwCookie;
  /* 0x0064 */ unsigned long _cUsing;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ const unsigned long DUMMY_SIG;
    /* 0x0000 */ const unsigned long NO_SCM_REG;
    /* 0x0000 */ unsigned long _dwNextCookieCount;
    /* 0x0000 */ unsigned long _cOutstandingObjects;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0080 */
}; /* size: 0x0068 */

struct AsyncIPipeLong
{
}; /* size: 0x0008 */

struct IPAControl
{
}; /* size: 0x0008 */

typedef struct __midl_frag381_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag381_t, *P_midl_frag381_t; /* size: 0x0050 */

typedef struct _RDR_CALLOUT_STATE
{
  /* 0x0000 */ long LastError;
  /* 0x0004 */ long Padding_473;
  /* 0x0008 */ void* LastEEInfo;
  /* 0x0010 */ enum _RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;
  /* 0x0014 */ long Padding_474;
  /* 0x0018 */ unsigned short* ServerName;
  /* 0x0020 */ unsigned short* ServerPort;
  /* 0x0028 */ unsigned short* RemoteUser;
  /* 0x0030 */ unsigned short* AuthType;
  /* 0x0038 */ unsigned char ResourceTypePresent;
  /* 0x0039 */ unsigned char SessionIdPresent;
  /* 0x003a */ unsigned char InterfacePresent;
  /* 0x003b */ char Padding_475;
  /* 0x003c */ struct _GUID ResourceType;
  /* 0x004c */ struct _GUID SessionId;
  /* 0x005c */ struct _RPC_SYNTAX_IDENTIFIER Interface;
  /* 0x0070 */ void* CertContext;
} RDR_CALLOUT_STATE, *PRDR_CALLOUT_STATE; /* size: 0x0078 */

class PRevertable
{
  /* 0x0000 */ unsigned long _sig;
  /* 0x0004 */ unsigned long _luid;
  /* 0x0008 */ unsigned long _df;
  /* 0x000c */ class CDfName _dfn;
  /* 0x004e */ char Padding_476[2];
  /* 0x0050 */ class CBasedRevertablePtr _prvNext;
}; /* size: 0x0058 */

struct tagENUMTEXTMETRICW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXW etmNewTextMetricEx;
  /* 0x0064 */ struct tagAXESLISTW etmAxesList;
}; /* size: 0x02ec */

class CLUAMoniker
{
  /* 0x0000 */ long Padding_477[14];
  /* 0x0038 */ unsigned long m_runLevel;
  /* 0x003c */ int m_bHaveBindOpts;
  /* 0x0040 */ struct tagBIND_OPTS3 m_bindopts3;
}; /* size: 0x0070 */

struct tagPARAMDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct IPersistStorage
{
}; /* size: 0x0008 */

typedef struct _WINDOWS_OS_OPTIONS
{
  /* 0x0000 */ unsigned char Signature[8];
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ unsigned long OsLoadPathOffset;
  /* 0x0014 */ wchar_t OsLoadOptions[1];
  /* 0x0016 */ char __PADDING__[2];
} WINDOWS_OS_OPTIONS, *PWINDOWS_OS_OPTIONS; /* size: 0x0018 */

class CProcessActivator
{
}; /* size: 0x0008 */

typedef struct _MODLOAD_DATA
{
  /* 0x0000 */ unsigned long ssize;
  /* 0x0004 */ unsigned long ssig;
  /* 0x0008 */ void* data;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned long flags;
} MODLOAD_DATA, *PMODLOAD_DATA; /* size: 0x0018 */

typedef struct _FP_IEEE_RECORD
{
  /* 0x0000 */ struct _FP_IEEE_VALUE Operand1;
  /* 0x0018 */ struct _FP_IEEE_VALUE Operand2;
  /* 0x0030 */ struct _FP_IEEE_VALUE Result;
} FP_IEEE_RECORD, *PFP_IEEE_RECORD; /* size: 0x0048 */

union WPP_PROJECT_CONTROL_BLOCK
{
  union
  {
    /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK Control;
    /* 0x0000 */ unsigned char ReserveSpace[32];
  }; /* size: 0x0020 */
}; /* size: 0x0020 */

typedef struct _IO_STATUS_BLOCK
{
  union
  {
    /* 0x0000 */ long Status;
    /* 0x0000 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 Information;
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK; /* size: 0x0010 */

typedef struct _FILE_IO_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* KeyContext;
  /* 0x0008 */ void* ApcContext;
  /* 0x0010 */ struct _IO_STATUS_BLOCK IoStatusBlock;
} FILE_IO_COMPLETION_INFORMATION, *PFILE_IO_COMPLETION_INFORMATION; /* size: 0x0020 */

struct tagMDICREATESTRUCTA
{
  /* 0x0000 */ const char* szClass;
  /* 0x0008 */ const char* szTitle;
  /* 0x0010 */ void* hOwner;
  /* 0x0018 */ int x;
  /* 0x001c */ int y;
  /* 0x0020 */ int cx;
  /* 0x0024 */ int cy;
  /* 0x0028 */ unsigned long style;
  /* 0x002c */ long Padding_478;
  /* 0x0030 */ __int64 lParam;
}; /* size: 0x0038 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>
{
  /* 0x0000 */ long m_status;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::soap_methodAttribute
{
  /* 0x0000 */ const char* name;
}; /* size: 0x0008 */

struct ISequentialStream
{
}; /* size: 0x0008 */

struct tagLOGPEN
{
  /* 0x0000 */ unsigned int lopnStyle;
  /* 0x0004 */ struct tagPOINT lopnWidth;
  /* 0x000c */ unsigned long lopnColor;
}; /* size: 0x0010 */

struct tagEMRCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ struct tagLOGPEN lopn;
}; /* size: 0x001c */

typedef struct _Wx86TIB
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long InitialPc;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* DeallocationStack;
  /* 0x0014 */ unsigned long LogFlags;
  /* 0x0018 */ unsigned long InitialSp;
  /* 0x001c */ unsigned char SimulationCount;
  /* 0x001d */ unsigned char InCpuSimulation;
  /* 0x001e */ unsigned char EmulateInitialPc;
  /* 0x001f */ unsigned char Initialized;
  /* 0x0020 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0024 */ void* CpuContext;
  /* 0x0028 */ struct _CONTEXT* InitialExceptionContext;
  /* 0x002c */ void* pCallersRIID;
  /* 0x0030 */ void* pCallersUnknown;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ void* SelfRegDllName;
  /* 0x003c */ void* SelfRegDllHandle;
} Wx86TIB, *PWx86TIB; /* size: 0x0040 */

typedef struct _CRYPT_3DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[24];
  /* 0x0018 */ unsigned char IV[8];
  /* 0x0020 */ unsigned char Feedback[8];
} CRYPT_3DES_KEY_STATE, *PCRYPT_3DES_KEY_STATE; /* size: 0x0028 */

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK
{
  /* 0x0000 */ unsigned char Signature[4];
  /* 0x0004 */ unsigned char Revision;
  /* 0x0005 */ unsigned char Length;
  /* 0x0006 */ unsigned short ControlField;
  /* 0x0008 */ unsigned char Checksum;
  /* 0x0009 */ unsigned long EventFlagAddress;
  /* 0x000d */ unsigned short RealModeEntryOffset;
  /* 0x000f */ unsigned short RealModeEntrySegment;
  /* 0x0011 */ unsigned short ProtectedModeEntryOffset;
  /* 0x0013 */ unsigned long ProtectedModeCodeBaseAddress;
  /* 0x0017 */ unsigned long OemDeviceId;
  /* 0x001b */ unsigned short RealModeDataBaseAddress;
  /* 0x001d */ unsigned long ProtectedModeDataBaseAddress;
} CM_PNP_BIOS_INSTALLATION_CHECK, *PCM_PNP_BIOS_INSTALLATION_CHECK; /* size: 0x0021 */

struct ITypeFactory
{
}; /* size: 0x0008 */

struct FIND_BY_SID_OUTPUT
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

typedef struct _OUTPUT_DEBUG_STRING_INFO
{
  /* 0x0000 */ char* lpDebugStringData;
  /* 0x0008 */ unsigned short fUnicode;
  /* 0x000a */ unsigned short nDebugStringLength;
  /* 0x000c */ long __PADDING__[1];
} OUTPUT_DEBUG_STRING_INFO, *POUTPUT_DEBUG_STRING_INFO; /* size: 0x0010 */

typedef struct _LBLOB
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LBLOB, *PLBLOB; /* size: 0x0018 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >
{
  /* 0x0000 */ struct _LBLOB m_Blob;
}; /* size: 0x0018 */

typedef struct _SYSTEM_ALARM_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_ACE, *PSYSTEM_ALARM_ACE; /* size: 0x000c */

typedef struct _KEY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long NameLength;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[6];
} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION; /* size: 0x0018 */

struct IInternetHostSecurityManager
{
}; /* size: 0x0008 */

struct IMarshal2
{
}; /* size: 0x0008 */

struct XMLDOMDocumentEvents
{
}; /* size: 0x0008 */

class CFreeMarshaler
{
  /* 0x0000 */ long Padding_479[2];
  /* 0x0008 */ struct IUnknown* _punkCtrl;
  union
  {
    /* 0x0000 */ unsigned char _SecretBlock[16];
    /* 0x0000 */ int _fSecretInit;
    /* 0x0000 */ class COleStaticMutexSem _SecretLock;
  }; /* size: 0x0050 */
}; /* size: 0x0010 */

struct tagTLIBATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ enum tagSYSKIND syskind;
  /* 0x0018 */ unsigned short wMajorVerNum;
  /* 0x001a */ unsigned short wMinorVerNum;
  /* 0x001c */ unsigned short wLibFlags;
  /* 0x001e */ char __PADDING__[2];
}; /* size: 0x0020 */

struct tagEMRNAMEDESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbDriver;
  /* 0x0010 */ int cbEscData;
  /* 0x0014 */ unsigned char EscData[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _CONSOLE_HISTORY_INFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int HistoryBufferSize;
  /* 0x0008 */ unsigned int NumberOfHistoryBuffers;
  /* 0x000c */ unsigned long dwFlags;
} CONSOLE_HISTORY_INFO, *PCONSOLE_HISTORY_INFO; /* size: 0x0010 */

typedef struct _NDR64_NO_REPEAT_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved1;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_NO_REPEAT_FORMAT, *PNDR64_NO_REPEAT_FORMAT; /* size: 0x0008 */

struct IEnumSTATPROPSETSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef struct _PSFEATURE_OUTPUT
{
  /* 0x0000 */ int bPageIndependent;
  /* 0x0004 */ int bSetPageDevice;
} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT; /* size: 0x0008 */

typedef struct _FILE_OBJECTID_BUFFER
{
  /* 0x0000 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char BirthVolumeId[16];
      /* 0x0020 */ unsigned char BirthObjectId[16];
      /* 0x0030 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0010 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_BUFFER, *PFILE_OBJECTID_BUFFER; /* size: 0x0040 */

struct IInternetProtocolEx
{
}; /* size: 0x0008 */

struct IWaitMultiple
{
}; /* size: 0x0008 */

struct <vc_attributes>::moduleAttribute
{
  /* 0x0000 */ enum <vc_attributes>::moduleAttribute::type_e type;
  /* 0x0004 */ long Padding_480;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* version;
  /* 0x0018 */ const char* uuid;
  /* 0x0020 */ int lcid;
  /* 0x0024 */ BOOL control;
  /* 0x0025 */ char Padding_481[3];
  /* 0x0028 */ const char* helpstring;
  /* 0x0030 */ int helpstringcontext;
  /* 0x0034 */ long Padding_482;
  /* 0x0038 */ const char* helpstringdll;
  /* 0x0040 */ const char* helpfile;
  /* 0x0048 */ int helpcontext;
  /* 0x004c */ BOOL hidden;
  /* 0x004d */ BOOL restricted;
  /* 0x004e */ char Padding_483[2];
  /* 0x0050 */ const char* custom;
  /* 0x0058 */ const char* resource_name;
}; /* size: 0x0060 */

struct tagEMRSETPIXELV
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlPixel;
  /* 0x0010 */ unsigned long crColor;
}; /* size: 0x0014 */

struct CleanupStack::memory_to_free
{
  /* 0x0000 */ void* pvMemory;
  /* 0x0008 */ class PMemoryAllocator* pAllocator;
}; /* size: 0x0010 */

struct CleanupStack::Block
{
  /* 0x0000 */ struct CleanupStack::memory_to_free mem[20];
  /* 0x0140 */ unsigned long count;
  /* 0x0144 */ long Padding_484;
  /* 0x0148 */ struct CleanupStack::Block* prev;
  /* 0x0150 */ struct CleanupStack::Block* next;
}; /* size: 0x0158 */

struct CleanupStack
{
  /* 0x0000 */ struct CleanupStack::Block m_first;
  /* 0x0158 */ struct CleanupStack::Block* m_last;
}; /* size: 0x0160 */

typedef struct __midl_frag6_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag6_t, *P_midl_frag6_t; /* size: 0x000c */

typedef struct _SEMAPHORE_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ long MaximumCount;
} SEMAPHORE_BASIC_INFORMATION, *PSEMAPHORE_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _MCA_EXCEPTION
{
  /* 0x0000 */ unsigned long VersionNumber;
  /* 0x0004 */ enum MCA_EXCEPTION_TYPE ExceptionType;
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long ProcessorNumber;
  /* 0x0014 */ unsigned long Reserved1;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned char BankNumber;
        /* 0x0019 */ unsigned char Reserved2[7];
        /* 0x0020 */ union _MCI_STATS Status;
        /* 0x0028 */ union _MCI_ADDR Address;
        /* 0x0030 */ unsigned __int64 Misc;
      } /* size: 0x0020 */ Mca;
      struct
      {
        /* 0x0018 */ unsigned __int64 Address;
        /* 0x0020 */ unsigned __int64 Type;
      } /* size: 0x0010 */ Mce;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
  /* 0x0038 */ unsigned long ExtCnt;
  /* 0x003c */ unsigned long Reserved3;
  /* 0x0040 */ unsigned __int64 ExtReg[24];
} MCA_EXCEPTION, *PMCA_EXCEPTION; /* size: 0x0100 */

typedef struct _RTL_STACK_CONTEXT_ENTRY
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Data;
} RTL_STACK_CONTEXT_ENTRY, *PRTL_STACK_CONTEXT_ENTRY; /* size: 0x0010 */

typedef struct _PROCESS_ACCESS_TOKEN
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ void* Thread;
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN; /* size: 0x0010 */

struct IFastStack<DISPATCH_CLIENT_FRAME>
{
}; /* size: 0x0008 */

class CRefMutexSem
{
  /* 0x0000 */ long m_lRefs;
  /* 0x0004 */ long Padding_485;
  /* 0x0008 */ class CMutexSem2 m_mxs;
}; /* size: 0x0038 */

typedef struct _SECURITY_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char __PADDING__[2];
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE; /* size: 0x000c */

struct IActivationContextInfo
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned __int64 BeginAddress;
  /* 0x0008 */ unsigned __int64 EndAddress;
  /* 0x0010 */ unsigned __int64 ExceptionHandler;
  /* 0x0018 */ unsigned __int64 HandlerData;
  /* 0x0020 */ unsigned __int64 PrologEndAddress;
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY; /* size: 0x0028 */

struct tagARRAYDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdescElem;
  /* 0x0010 */ unsigned short cDims;
  /* 0x0012 */ char Padding_486[2];
  /* 0x0014 */ struct tagSAFEARRAYBOUND rgbounds[1];
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class CMemStm
{
  /* 0x0000 */ long Padding_487[2];
  /* 0x0008 */ unsigned long m_dwSig;
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ unsigned long m_pos;
  /* 0x0014 */ long Padding_488;
  /* 0x0018 */ void* m_hMem;
  /* 0x0020 */ struct MEMSTM* m_pData;
  /* 0x0028 */ class CRefMutexSem* m_pmxs;
}; /* size: 0x0030 */

typedef struct __midl_frag1307_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1307_t, *P_midl_frag1307_t; /* size: 0x0048 */

struct tagRemHMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ unsigned long cbData;
  /* 0x0010 */ unsigned char data[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

typedef struct _CERT_NAME_VALUE
{
  /* 0x0000 */ unsigned long dwValueType;
  /* 0x0004 */ long Padding_489;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_NAME_VALUE, *PCERT_NAME_VALUE; /* size: 0x0018 */

struct IUriBuilderFactory
{
}; /* size: 0x0008 */

struct tagCIEXYZ
{
  /* 0x0000 */ long ciexyzX;
  /* 0x0004 */ long ciexyzY;
  /* 0x0008 */ long ciexyzZ;
}; /* size: 0x000c */

struct tagICEXYZTRIPLE
{
  /* 0x0000 */ struct tagCIEXYZ ciexyzRed;
  /* 0x000c */ struct tagCIEXYZ ciexyzGreen;
  /* 0x0018 */ struct tagCIEXYZ ciexyzBlue;
}; /* size: 0x0024 */

class CStabilize
{
  /* 0x0000 */ class CSafeRefCount* m_pSafeRefCount;
}; /* size: 0x0008 */

struct IBindCtx
{
}; /* size: 0x0008 */

struct PPM_PERFSTATE_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Status;
  /* 0x0008 */ unsigned long Latency;
  /* 0x000c */ unsigned long Speed;
  /* 0x0010 */ unsigned long Processor;
}; /* size: 0x0014 */

struct tagHELPWININFOW
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ wchar_t rgchMember[2];
}; /* size: 0x001c */

struct IComCatalog
{
}; /* size: 0x0008 */

typedef struct _PROCESSOR_POWER_POLICY_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned long DemoteLimit;
  /* 0x0008 */ unsigned long PromoteLimit;
  /* 0x000c */ unsigned char DemotePercent;
  /* 0x000d */ unsigned char PromotePercent;
  /* 0x000e */ unsigned char Spare[2];
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned long AllowDemotion : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned long AllowPromotion : 1; /* bit position: 1 */
    /* 0x0010 */ unsigned long Reserved : 30; /* bit position: 2 */
  }; /* bitfield */
} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO; /* size: 0x0014 */

typedef struct _PROCESSOR_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char DynamicThrottle;
  /* 0x0005 */ unsigned char Spare[3];
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DisableCStates : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ unsigned long PolicyCount;
  /* 0x0010 */ struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY; /* size: 0x004c */

class CItemMoniker
{
  /* 0x0000 */ long Padding_490[10];
  /* 0x0028 */ wchar_t* m_lpszItem;
  /* 0x0030 */ char* m_pszAnsiItem;
  /* 0x0038 */ unsigned short m_ccItem;
  /* 0x003a */ unsigned short m_cbAnsiItem;
  /* 0x003c */ long Padding_491;
  /* 0x0040 */ wchar_t* m_lpszDelimiter;
  /* 0x0048 */ char* m_pszAnsiDelimiter;
  /* 0x0050 */ unsigned short m_ccDelimiter;
  /* 0x0052 */ unsigned short m_cbAnsiDelimiter;
  /* 0x0054 */ unsigned long m_fHashValueValid : 1; /* bit position: 0 */
  /* 0x0058 */ unsigned long m_dwHashValue;
  /* 0x005c */ long Padding_492;
  /* 0x0060 */ class CMutexSem2 m_mxs;
}; /* size: 0x0090 */

class CBasedTransactedStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _FILE_ALLOCATION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFORMATION, *PFILE_ALLOCATION_INFORMATION; /* size: 0x0008 */

class CInprocSystemActivator
{
}; /* size: 0x0008 */

struct IInternetThreadSwitch
{
}; /* size: 0x0008 */

struct tagTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char __PADDING__[3];
}; /* size: 0x0038 */

typedef struct _OUTLINETEXTMETRICA
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICA otmTextMetrics;
  /* 0x003c */ unsigned char otmFiller;
  /* 0x003d */ struct tagPANOSE otmPanoseNumber;
  /* 0x0047 */ char Padding_493;
  /* 0x0048 */ unsigned int otmfsSelection;
  /* 0x004c */ unsigned int otmfsType;
  /* 0x0050 */ int otmsCharSlopeRise;
  /* 0x0054 */ int otmsCharSlopeRun;
  /* 0x0058 */ int otmItalicAngle;
  /* 0x005c */ unsigned int otmEMSquare;
  /* 0x0060 */ int otmAscent;
  /* 0x0064 */ int otmDescent;
  /* 0x0068 */ unsigned int otmLineGap;
  /* 0x006c */ unsigned int otmsCapEmHeight;
  /* 0x0070 */ unsigned int otmsXHeight;
  /* 0x0074 */ struct tagRECT otmrcFontBox;
  /* 0x0084 */ int otmMacAscent;
  /* 0x0088 */ int otmMacDescent;
  /* 0x008c */ unsigned int otmMacLineGap;
  /* 0x0090 */ unsigned int otmusMinimumPPEM;
  /* 0x0094 */ struct tagPOINT otmptSubscriptSize;
  /* 0x009c */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a4 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00ac */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b4 */ unsigned int otmsStrikeoutSize;
  /* 0x00b8 */ int otmsStrikeoutPosition;
  /* 0x00bc */ int otmsUnderscoreSize;
  /* 0x00c0 */ int otmsUnderscorePosition;
  /* 0x00c4 */ long Padding_494;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00d0 */ char* otmpFaceName;
  /* 0x00d8 */ char* otmpStyleName;
  /* 0x00e0 */ char* otmpFullName;
} OUTLINETEXTMETRICA, *POUTLINETEXTMETRICA; /* size: 0x00e8 */

struct <vc_attributes>::atl::aggregatesAttribute
{
  /* 0x0000 */ const char* clsid;
}; /* size: 0x0008 */

typedef struct _RTL_BITMAP
{
  /* 0x0000 */ unsigned long SizeOfBitMap;
  /* 0x0004 */ long Padding_495;
  /* 0x0008 */ unsigned long* Buffer;
} RTL_BITMAP, *PRTL_BITMAP; /* size: 0x0010 */

typedef struct _SYSTEM_VERIFIER_ISSUE
{
  /* 0x0000 */ unsigned __int64 IssueType;
  /* 0x0008 */ void* Address;
  /* 0x0010 */ unsigned __int64 Parameters[2];
} SYSTEM_VERIFIER_ISSUE, *PSYSTEM_VERIFIER_ISSUE; /* size: 0x0020 */

typedef struct __midl_frag1088_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1088_t, *P_midl_frag1088_t; /* size: 0x000c */

typedef struct _FULL_PTR_XLAT_TABLES
{
  /* 0x0000 */ void* RefIdToPointer;
  /* 0x0008 */ void* PointerToRefId;
  /* 0x0010 */ unsigned long NextRefId;
  /* 0x0014 */ enum XLAT_SIDE XlatSide;
} FULL_PTR_XLAT_TABLES, *PFULL_PTR_XLAT_TABLES; /* size: 0x0018 */

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_496;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _GUID TransactionID;
} JOURNAL_TRANSACTION_BOUNDARY_INFORMATION, *PJOURNAL_TRANSACTION_BOUNDARY_INFORMATION; /* size: 0x0028 */

struct tagSTATDATA
{
  /* 0x0000 */ struct tagFORMATETC formatetc;
  /* 0x0020 */ unsigned long advf;
  /* 0x0024 */ long Padding_497;
  /* 0x0028 */ struct IAdviseSink* pAdvSink;
  /* 0x0030 */ unsigned long dwConnection;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct tagBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_498;
  /* 0x0008 */ unsigned char* pBlobData;
}; /* size: 0x0010 */

struct tagRemHENHMETAFILE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagNMHDR
{
  /* 0x0000 */ struct HWND__* hwndFrom;
  /* 0x0008 */ unsigned __int64 idFrom;
  /* 0x0010 */ unsigned int code;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct IViewObject
{
}; /* size: 0x0008 */

struct <vc_attributes>::objectAttribute
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemDisk;
} SYSTEM_SYSTEM_DISK_INFORMATION, *PSYSTEM_SYSTEM_DISK_INFORMATION; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  /* 0x0000 */ unsigned long ulAssemblyIndex;
  /* 0x0004 */ unsigned long ulFileIndexInAssembly;
} ACTIVATION_CONTEXT_QUERY_INDEX, *PACTIVATION_CONTEXT_QUERY_INDEX; /* size: 0x0008 */

typedef struct _UNWIND_INFO
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Version : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Flags : 5; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0001 */ unsigned char SizeOfProlog;
  /* 0x0002 */ unsigned char CountOfCodes;
  struct /* bitfield */
  {
    /* 0x0003 */ unsigned char FrameRegister : 4; /* bit position: 0 */
    /* 0x0003 */ unsigned char FrameOffset : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ union _UNWIND_CODE UnwindCode[1];
} UNWIND_INFO, *PUNWIND_INFO; /* size: 0x0006 */

typedef struct _ACL_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long AceCount;
  /* 0x0004 */ unsigned long AclBytesInUse;
  /* 0x0008 */ unsigned long AclBytesFree;
} ACL_SIZE_INFORMATION, *PACL_SIZE_INFORMATION; /* size: 0x000c */

struct CEffPermsCacheLUID::tagCACHE_ENTRY
{
  /* 0x0000 */ struct _LUID lClient;
  /* 0x0008 */ unsigned long dwEffectivePermissions;
}; /* size: 0x000c */

struct tagEMRFRAMERGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ struct tagSIZE szlStroke;
  /* 0x0028 */ unsigned char RgnData[1];
  /* 0x0029 */ char __PADDING__[3];
}; /* size: 0x002c */

typedef struct _FILE_REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned long Tag;
  /* 0x000c */ long __PADDING__[1];
} FILE_REPARSE_POINT_INFORMATION, *PFILE_REPARSE_POINT_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION
{
  /* 0x0000 */ unsigned long VetoType;
  /* 0x0004 */ long Padding_499;
  /* 0x0008 */ struct _UNICODE_STRING VetoList;
} SYSTEM_LEGACY_DRIVER_INFORMATION, *PSYSTEM_LEGACY_DRIVER_INFORMATION; /* size: 0x0018 */

struct tagCAI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_500;
  /* 0x0008 */ short* pElems;
}; /* size: 0x0010 */

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION
{
  /* 0x0000 */ unsigned long PrefetchPatchCount;
} SYSTEM_PREFETCH_PATCH_INFORMATION, *PSYSTEM_PREFETCH_PATCH_INFORMATION; /* size: 0x0004 */

typedef struct _SHQUERYRBINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_501;
  /* 0x0008 */ __int64 i64Size;
  /* 0x0010 */ __int64 i64NumItems;
} SHQUERYRBINFO, *PSHQUERYRBINFO; /* size: 0x0018 */

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _TAPE_SET_POSITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
  /* 0x0010 */ unsigned char Immediate;
  /* 0x0011 */ char __PADDING__[7];
} TAPE_SET_POSITION, *PTAPE_SET_POSITION; /* size: 0x0018 */

struct tagRAWHID
{
  /* 0x0000 */ unsigned long dwSizeHid;
  /* 0x0004 */ unsigned long dwCount;
  /* 0x0008 */ unsigned char bRawData[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _SERVICE_DESCRIPTIONA
{
  /* 0x0000 */ char* lpDescription;
} SERVICE_DESCRIPTIONA, *PSERVICE_DESCRIPTIONA; /* size: 0x0008 */

struct IBindStatusCallback
{
}; /* size: 0x0008 */

typedef struct _RTL_PROCESS_LOCKS
{
  /* 0x0000 */ unsigned long NumberOfLocks;
  /* 0x0004 */ long Padding_502;
  /* 0x0008 */ struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
} RTL_PROCESS_LOCKS, *PRTL_PROCESS_LOCKS; /* size: 0x0038 */

typedef struct _EFI_DRIVER_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long FriendlyNameOffset;
  /* 0x0010 */ unsigned long DriverFilePathOffset;
} EFI_DRIVER_ENTRY, *PEFI_DRIVER_ENTRY; /* size: 0x0014 */

typedef struct _EFI_DRIVER_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _EFI_DRIVER_ENTRY DriverEntry;
} EFI_DRIVER_ENTRY_LIST, *PEFI_DRIVER_ENTRY_LIST; /* size: 0x0018 */

class CHashTable
{
  /* 0x0000 */ long Padding_503[2];
  /* 0x0008 */ class COleStaticMutexSem* _pExLock;
  /* 0x0010 */ class CRWLock* _pRWLock;
  /* 0x0018 */ struct SHashChain* _buckets;
  /* 0x0020 */ unsigned long _cCurEntries;
  /* 0x0024 */ unsigned long _cMaxEntries;
}; /* size: 0x0028 */

struct IOleUndoUnit
{
}; /* size: 0x0008 */

class CMonikerFactory
{
}; /* size: 0x0010 */

typedef struct _wireSAFEARR_BRECORD
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_504;
  /* 0x0008 */ struct _wireBRECORD** aRecord;
} wireSAFEARR_BRECORD, *PwireSAFEARR_BRECORD; /* size: 0x0010 */

typedef struct _TRIPLE_LIST_ENTRY
{
  /* 0x0000 */ struct _TRIPLE_LIST_ENTRY* Flink[3];
  /* 0x0018 */ struct _TRIPLE_LIST_ENTRY* Blink;
} TRIPLE_LIST_ENTRY, *PTRIPLE_LIST_ENTRY; /* size: 0x0020 */

typedef struct _RTL_DEBUG_INFORMATION
{
  /* 0x0000 */ void* SectionHandleClient;
  /* 0x0008 */ void* ViewBaseClient;
  /* 0x0010 */ void* ViewBaseTarget;
  /* 0x0018 */ unsigned __int64 ViewBaseDelta;
  /* 0x0020 */ void* EventPairClient;
  /* 0x0028 */ void* EventPairTarget;
  /* 0x0030 */ void* TargetProcessId;
  /* 0x0038 */ void* TargetThreadHandle;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ long Padding_505;
  /* 0x0048 */ unsigned __int64 OffsetFree;
  /* 0x0050 */ unsigned __int64 CommitSize;
  /* 0x0058 */ unsigned __int64 ViewSize;
  union
  {
    /* 0x0060 */ struct _RTL_PROCESS_MODULES* Modules;
    /* 0x0060 */ struct _RTL_PROCESS_MODULE_INFORMATION_EX* ModulesEx;
  }; /* size: 0x0008 */
  /* 0x0068 */ struct _RTL_PROCESS_BACKTRACES* BackTraces;
  /* 0x0070 */ struct _RTL_PROCESS_HEAPS* Heaps;
  /* 0x0078 */ struct _RTL_PROCESS_LOCKS* Locks;
  /* 0x0080 */ void* SpecificHeap;
  /* 0x0088 */ void* TargetProcessHandle;
  /* 0x0090 */ struct _RTL_PROCESS_VERIFIER_OPTIONS* VerifierOptions;
  /* 0x0098 */ void* ProcessHeap;
  /* 0x00a0 */ void* CriticalSectionHandle;
  /* 0x00a8 */ void* CriticalSectionOwnerThread;
  /* 0x00b0 */ void* Reserved[4];
} RTL_DEBUG_INFORMATION, *PRTL_DEBUG_INFORMATION; /* size: 0x00d0 */

struct SDWORDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long key;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct ApartmentEntry
{
  /* 0x0000 */ struct SDWORDHashNode node;
  /* 0x0018 */ unsigned long hActivator;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _DCB
{
  /* 0x0000 */ unsigned long DCBlength;
  /* 0x0004 */ unsigned long BaudRate;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long fBinary : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long fParity : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long fOutxCtsFlow : 1; /* bit position: 2 */
    /* 0x0008 */ unsigned long fOutxDsrFlow : 1; /* bit position: 3 */
    /* 0x0008 */ unsigned long fDtrControl : 2; /* bit position: 4 */
    /* 0x0008 */ unsigned long fDsrSensitivity : 1; /* bit position: 6 */
    /* 0x0008 */ unsigned long fTXContinueOnXoff : 1; /* bit position: 7 */
    /* 0x0008 */ unsigned long fOutX : 1; /* bit position: 8 */
    /* 0x0008 */ unsigned long fInX : 1; /* bit position: 9 */
    /* 0x0008 */ unsigned long fErrorChar : 1; /* bit position: 10 */
    /* 0x0008 */ unsigned long fNull : 1; /* bit position: 11 */
    /* 0x0008 */ unsigned long fRtsControl : 2; /* bit position: 12 */
    /* 0x0008 */ unsigned long fAbortOnError : 1; /* bit position: 14 */
    /* 0x0008 */ unsigned long fDummy2 : 17; /* bit position: 15 */
  }; /* bitfield */
  /* 0x000c */ unsigned short wReserved;
  /* 0x000e */ unsigned short XonLim;
  /* 0x0010 */ unsigned short XoffLim;
  /* 0x0012 */ unsigned char ByteSize;
  /* 0x0013 */ unsigned char Parity;
  /* 0x0014 */ unsigned char StopBits;
  /* 0x0015 */ char XonChar;
  /* 0x0016 */ char XoffChar;
  /* 0x0017 */ char ErrorChar;
  /* 0x0018 */ char EofChar;
  /* 0x0019 */ char EvtChar;
  /* 0x001a */ unsigned short wReserved1;
} DCB, *PDCB; /* size: 0x001c */

typedef struct _COMMCONFIG
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned short wVersion;
  /* 0x0006 */ unsigned short wReserved;
  /* 0x0008 */ struct _DCB dcb;
  /* 0x0024 */ unsigned long dwProviderSubType;
  /* 0x0028 */ unsigned long dwProviderOffset;
  /* 0x002c */ unsigned long dwProviderSize;
  /* 0x0030 */ wchar_t wcProviderData[1];
  /* 0x0032 */ char __PADDING__[2];
} COMMCONFIG, *PCOMMCONFIG; /* size: 0x0034 */

struct IStorage
{
}; /* size: 0x0008 */

struct _TPP_THREAD_DATA_CALLBACK;

struct tagCAFLT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_506;
  /* 0x0008 */ float* pElems;
}; /* size: 0x0010 */

typedef struct _RTL_CONDITION_VARIABLE
{
  /* 0x0000 */ void* Ptr;
} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorNumber;
  /* 0x0004 */ unsigned long StateCount;
  /* 0x0008 */ struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
} SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION; /* size: 0x0010 */

struct ClassMonikerData
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long cbExtra;
}; /* size: 0x0014 */

class CClassMoniker
{
  /* 0x0000 */ long Padding_507[6];
  /* 0x0018 */ long _cRefs;
  /* 0x001c */ struct ClassMonikerData _data;
  /* 0x0030 */ void* _pExtra;
  /* 0x0038 */ wchar_t* _pszCodeBase;
  /* 0x0040 */ unsigned long _dwFileVersionMS;
  /* 0x0044 */ unsigned long _dwFileVersionLS;
}; /* size: 0x0048 */

struct <vc_attributes>::atl::db_commandAttribute
{
  /* 0x0000 */ const char* command;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* source_name;
  /* 0x0018 */ const char* hresult;
  /* 0x0020 */ const char* bindings;
  /* 0x0028 */ const char* bulk_fetch;
}; /* size: 0x0030 */

typedef struct _BCRYPT_RSAKEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long BitLength;
  /* 0x0008 */ unsigned long cbPublicExp;
  /* 0x000c */ unsigned long cbModulus;
  /* 0x0010 */ unsigned long cbPrime1;
  /* 0x0014 */ unsigned long cbPrime2;
} BCRYPT_RSAKEY_BLOB, *PBCRYPT_RSAKEY_BLOB; /* size: 0x0018 */

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION
{
  /* 0x0000 */ struct _GUID OldestTransactionGuid;
} TRANSACTIONMANAGER_OLDEST_INFORMATION, *PTRANSACTIONMANAGER_OLDEST_INFORMATION; /* size: 0x0010 */

typedef struct _TRANSACTION_LIST_ENTRY
{
  /* 0x0000 */ struct _GUID UOW;
} TRANSACTION_LIST_ENTRY, *PTRANSACTION_LIST_ENTRY; /* size: 0x0010 */

typedef struct _TRANSACTION_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTransactions;
  /* 0x0004 */ struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
} TRANSACTION_LIST_INFORMATION, *PTRANSACTION_LIST_INFORMATION; /* size: 0x0014 */

typedef struct _PROCESS_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} PROCESS_CYCLE_TIME_INFORMATION, *PPROCESS_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _ICONINFOEXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
  /* 0x0020 */ unsigned short wResID;
  /* 0x0022 */ wchar_t szModName[260];
  /* 0x022a */ wchar_t szResName[260];
  /* 0x0432 */ char __PADDING__[6];
} ICONINFOEXW, *PICONINFOEXW; /* size: 0x0438 */

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEnlistments;
  /* 0x0004 */ struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
} TRANSACTION_ENLISTMENTS_INFORMATION, *PTRANSACTION_ENLISTMENTS_INFORMATION; /* size: 0x0024 */

struct IContextMarshaler
{
}; /* size: 0x0008 */

struct ISpecialSystemProperties
{
}; /* size: 0x0008 */

typedef struct _CRT_DOUBLE
{
  /* 0x0000 */ double x;
} CRT_DOUBLE, *PCRT_DOUBLE; /* size: 0x0008 */

struct ITypeLib2
{
}; /* size: 0x0008 */

typedef struct _PLEX_READ_DATA_REQUEST
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ unsigned long ByteLength;
  /* 0x000c */ unsigned long PlexNumber;
} PLEX_READ_DATA_REQUEST, *PPLEX_READ_DATA_REQUEST; /* size: 0x0010 */

class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>
{
  /* 0x0000 */ long Padding_508[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

struct tagRPC_CALL_ATTRIBUTES_V1_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_509;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_510;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _CRYPT_ENCODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_511;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
} CRYPT_ENCODE_PARA, *PCRYPT_ENCODE_PARA; /* size: 0x0018 */

typedef struct _CRYPT_PASSWORD_CREDENTIALSW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_512;
  /* 0x0008 */ wchar_t* pszUsername;
  /* 0x0010 */ wchar_t* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSW, *PCRYPT_PASSWORD_CREDENTIALSW; /* size: 0x0018 */

typedef struct _SECURITY_TOKEN_AUDIT_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long GrantMask;
  /* 0x0008 */ unsigned long DenyMask;
} SECURITY_TOKEN_AUDIT_DATA, *PSECURITY_TOKEN_AUDIT_DATA; /* size: 0x000c */

typedef struct _PO_TRANSITION_VETO_WINDOW
{
  /* 0x0000 */ void* Handle;
} PO_TRANSITION_VETO_WINDOW, *PPO_TRANSITION_VETO_WINDOW; /* size: 0x0008 */

typedef struct _PO_TRANSITION_VETO_SERVICE
{
  /* 0x0000 */ unsigned long ServiceNameOffset;
} PO_TRANSITION_VETO_SERVICE, *PPO_TRANSITION_VETO_SERVICE; /* size: 0x0004 */

typedef struct _PO_TRANSITION_VETO
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ struct _PO_TRANSITION_VETO_REASON Reason;
  /* 0x000c */ unsigned long ProcessId;
  union
  {
    /* 0x0010 */ struct _PO_TRANSITION_VETO_WINDOW Window;
    struct
    {
      /* 0x0010 */ struct _PO_TRANSITION_VETO_SERVICE Service;
      /* 0x0014 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PO_TRANSITION_VETO, *PPO_TRANSITION_VETO; /* size: 0x0018 */

class CContinue
{
  /* 0x0000 */ long Padding_513[2];
  /* 0x0008 */ long _cRef;
  /* 0x000c */ long Padding_514;
  /* 0x0010 */ void* _pfnContinue /* function */;
  /* 0x0018 */ __int64 _dwContinue;
}; /* size: 0x0020 */

typedef struct _PROCESS_FOREGROUND_BACKGROUND
{
  /* 0x0000 */ unsigned char Foreground;
} PROCESS_FOREGROUND_BACKGROUND, *PPROCESS_FOREGROUND_BACKGROUND; /* size: 0x0001 */

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ struct _GUID LockingTransactionId;
  /* 0x0058 */ unsigned long TxInfoFlags;
  /* 0x005c */ wchar_t FileName[1];
  /* 0x005e */ char __PADDING__[2];
} FILE_ID_GLOBAL_TX_DIR_INFORMATION, *PFILE_ID_GLOBAL_TX_DIR_INFORMATION; /* size: 0x0060 */

class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUNICODE_STRING> >
{
}; /* size: 0x0001 */

typedef struct _GENERATE_NAME_CONTEXT
{
  /* 0x0000 */ unsigned short Checksum;
  /* 0x0002 */ unsigned char ChecksumInserted;
  /* 0x0003 */ unsigned char NameLength;
  /* 0x0004 */ wchar_t NameBuffer[8];
  /* 0x0014 */ unsigned long ExtensionLength;
  /* 0x0018 */ wchar_t ExtensionBuffer[4];
  /* 0x0020 */ unsigned long LastIndexValue;
} GENERATE_NAME_CONTEXT, *PGENERATE_NAME_CONTEXT; /* size: 0x0024 */

class InprocActpropsUnmarshaller
{
  /* 0x0000 */ class InprocActpropsUnmarshaller _InprocActUnmarshaller;
}; /* size: 0x0008 */

struct tagEMRSELECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
}; /* size: 0x000c */

struct ISynchronizeMutex
{
}; /* size: 0x0008 */

typedef struct _PROCESS_HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned long NumberOfHeaps;
  /* 0x0014 */ long Padding_515;
  /* 0x0018 */ unsigned __int64 FirstHeapInformationOffset;
} PROCESS_HEAP_INFORMATION, *PPROCESS_HEAP_INFORMATION; /* size: 0x0020 */

typedef struct _HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Mode;
  /* 0x000c */ long Padding_516;
  /* 0x0010 */ unsigned __int64 ReserveSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
  /* 0x0020 */ unsigned __int64 FirstRegionInformationOffset;
  /* 0x0028 */ unsigned __int64 NextHeapInformationOffset;
} HEAP_INFORMATION, *PHEAP_INFORMATION; /* size: 0x0030 */

typedef struct _HEAP_EXTENDED_INFORMATION
{
  /* 0x0000 */ void* Process;
  /* 0x0008 */ unsigned __int64 Heap;
  /* 0x0010 */ unsigned long Level;
  /* 0x0014 */ long Padding_517;
  /* 0x0018 */ void* CallbackRoutine /* function */;
  /* 0x0020 */ void* CallbackContext;
  union
  {
    /* 0x0028 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0028 */ struct _HEAP_INFORMATION HeapInformation;
  }; /* size: 0x0030 */
} HEAP_EXTENDED_INFORMATION, *PHEAP_EXTENDED_INFORMATION; /* size: 0x0058 */

struct tagMInterfacePointer
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct tagCURSORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HICON__* hCursor;
  /* 0x0010 */ struct tagPOINT ptScreenPos;
}; /* size: 0x0018 */

typedef struct _EVENTLOGRECORD
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long RecordNumber;
  /* 0x000c */ unsigned long TimeGenerated;
  /* 0x0010 */ unsigned long TimeWritten;
  /* 0x0014 */ unsigned long EventID;
  /* 0x0018 */ unsigned short EventType;
  /* 0x001a */ unsigned short NumStrings;
  /* 0x001c */ unsigned short EventCategory;
  /* 0x001e */ unsigned short ReservedFlags;
  /* 0x0020 */ unsigned long ClosingRecordNumber;
  /* 0x0024 */ unsigned long StringOffset;
  /* 0x0028 */ unsigned long UserSidLength;
  /* 0x002c */ unsigned long UserSidOffset;
  /* 0x0030 */ unsigned long DataLength;
  /* 0x0034 */ unsigned long DataOffset;
} EVENTLOGRECORD, *PEVENTLOGRECORD; /* size: 0x0038 */

typedef struct _EVENTSFORLOGFILE
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ wchar_t szLogicalLogFile[256];
  /* 0x0204 */ unsigned long ulNumRecords;
  /* 0x0208 */ struct _EVENTLOGRECORD* pEventLogRecords /* zero-length array */;
} EVENTSFORLOGFILE, *PEVENTSFORLOGFILE; /* size: 0x0208 */

struct IPropertyStorage
{
}; /* size: 0x0008 */

typedef struct _CERT_POLICY_CONSTRAINTS_INFO
{
  /* 0x0000 */ int fRequireExplicitPolicy;
  /* 0x0004 */ unsigned long dwRequireExplicitPolicySkipCerts;
  /* 0x0008 */ int fInhibitPolicyMapping;
  /* 0x000c */ unsigned long dwInhibitPolicyMappingSkipCerts;
} CERT_POLICY_CONSTRAINTS_INFO, *PCERT_POLICY_CONSTRAINTS_INFO; /* size: 0x0010 */

struct tagWINDOWPOS
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ int cx;
  /* 0x001c */ int cy;
  /* 0x0020 */ unsigned int flags;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _CREATE_THREAD_DEBUG_INFO
{
  /* 0x0000 */ void* hThread;
  /* 0x0008 */ void* lpThreadLocalBase;
  /* 0x0010 */ void* lpStartAddress /* function */;
} CREATE_THREAD_DEBUG_INFO, *PCREATE_THREAD_DEBUG_INFO; /* size: 0x0018 */

typedef struct _EXIT_THREAD_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_THREAD_DEBUG_INFO, *PEXIT_THREAD_DEBUG_INFO; /* size: 0x0004 */

typedef struct _UNLOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* lpBaseOfDll;
} UNLOAD_DLL_DEBUG_INFO, *PUNLOAD_DLL_DEBUG_INFO; /* size: 0x0008 */

typedef struct _RIP_INFO
{
  /* 0x0000 */ unsigned long dwError;
  /* 0x0004 */ unsigned long dwType;
} RIP_INFO, *PRIP_INFO; /* size: 0x0008 */

typedef struct _DEBUG_EVENT
{
  /* 0x0000 */ unsigned long dwDebugEventCode;
  /* 0x0004 */ unsigned long dwProcessId;
  /* 0x0008 */ unsigned long dwThreadId;
  /* 0x000c */ long Padding_518;
  union
  {
    union
    {
      /* 0x0010 */ struct _EXCEPTION_DEBUG_INFO Exception;
      /* 0x0010 */ struct _CREATE_THREAD_DEBUG_INFO CreateThread;
      /* 0x0010 */ struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
      /* 0x0010 */ struct _EXIT_THREAD_DEBUG_INFO ExitThread;
      /* 0x0010 */ struct _EXIT_PROCESS_DEBUG_INFO ExitProcess;
      /* 0x0010 */ struct _LOAD_DLL_DEBUG_INFO LoadDll;
      /* 0x0010 */ struct _UNLOAD_DLL_DEBUG_INFO UnloadDll;
      /* 0x0010 */ struct _OUTPUT_DEBUG_STRING_INFO DebugString;
      /* 0x0010 */ struct _RIP_INFO RipInfo;
    }; /* size: 0x00a0 */
  } /* size: 0x00a0 */ u;
} DEBUG_EVENT, *PDEBUG_EVENT; /* size: 0x00b0 */

struct IOleCache2
{
  /* 0x0000 */ struct IOleCache2Vtbl* lpVtbl;
}; /* size: 0x0008 */

struct IProgressNotify
{
}; /* size: 0x0008 */

typedef struct _HEAP_REGION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 ReserveSize;
  /* 0x0010 */ unsigned __int64 CommitSize;
  /* 0x0018 */ unsigned __int64 FirstRangeInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRegionInformationOffset;
} HEAP_REGION_INFORMATION, *PHEAP_REGION_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ unsigned long Protection;
  /* 0x0018 */ unsigned __int64 FirstBlockInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRangeInformationOffset;
} HEAP_RANGE_INFORMATION, *PHEAP_RANGE_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_BLOCK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_519;
  /* 0x0010 */ unsigned __int64 DataSize;
  /* 0x0018 */ unsigned __int64 OverheadSize;
  /* 0x0020 */ unsigned __int64 NextBlockInformationOffset;
} HEAP_BLOCK_INFORMATION, *PHEAP_BLOCK_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long HeapIndex;
  /* 0x000c */ unsigned long LastHeapIndex;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned __int64 ReserveSize;
  /* 0x0020 */ unsigned __int64 CommitSize;
  /* 0x0028 */ unsigned long SegmentCount;
  /* 0x002c */ long Padding_520;
  /* 0x0030 */ unsigned __int64 LargeUCRMemory;
  /* 0x0038 */ unsigned long UCRLength;
  /* 0x003c */ long Padding_521;
  /* 0x0040 */ unsigned __int64 FreeSpace;
  /* 0x0048 */ unsigned long FreeListLength;
  /* 0x004c */ unsigned long Contention;
  /* 0x0050 */ unsigned long VirtualBlocks;
  /* 0x0054 */ unsigned long CommitRate;
  /* 0x0058 */ unsigned long DecommitRate;
  /* 0x005c */ long __PADDING__[1];
} HEAP_PERFORMANCE_COUNTERS_INFORMATION, *PHEAP_PERFORMANCE_COUNTERS_INFORMATION; /* size: 0x0060 */

typedef struct _HEAP_INFORMATION_ITEM
{
  /* 0x0000 */ unsigned long Level;
  /* 0x0004 */ long Padding_522;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0010 */ struct _HEAP_INFORMATION HeapInformation;
    /* 0x0010 */ struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    /* 0x0010 */ struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    /* 0x0010 */ struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    /* 0x0010 */ struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    struct
    {
      /* 0x0010 */ unsigned __int64 DynamicStart;
      /* 0x0018 */ long __PADDING__[22];
    }; /* size: 0x0060 */
  }; /* size: 0x0060 */
} HEAP_INFORMATION_ITEM, *PHEAP_INFORMATION_ITEM; /* size: 0x0070 */

typedef struct _REMOTE_PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_523;
  /* 0x0008 */ unsigned __int64 ViewSize;
  /* 0x0010 */ void* ViewBase;
} REMOTE_PORT_VIEW, *PREMOTE_PORT_VIEW; /* size: 0x0018 */

struct ARRAY_INFO
{
  /* 0x0000 */ long Dimension;
  /* 0x0004 */ long Padding_524;
  /* 0x0008 */ unsigned long* BufferConformanceMark;
  /* 0x0010 */ unsigned long* BufferVarianceMark;
  /* 0x0018 */ unsigned long* MaxCountArray;
  /* 0x0020 */ unsigned long* OffsetArray;
  /* 0x0028 */ unsigned long* ActualCountArray;
}; /* size: 0x0030 */

typedef struct _tagRemBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_525;
  /* 0x0008 */ wchar_t* szExtraInfo;
  /* 0x0010 */ unsigned long grfBindInfoF;
  /* 0x0014 */ unsigned long dwBindVerb;
  /* 0x0018 */ wchar_t* szCustomVerb;
  /* 0x0020 */ unsigned long cbstgmedData;
  /* 0x0024 */ unsigned long dwOptions;
  /* 0x0028 */ unsigned long dwOptionsFlags;
  /* 0x002c */ unsigned long dwCodePage;
  /* 0x0030 */ struct _REMSECURITY_ATTRIBUTES securityAttributes;
  /* 0x003c */ struct _GUID iid;
  /* 0x004c */ long Padding_526;
  /* 0x0050 */ struct IUnknown* pUnk;
  /* 0x0058 */ unsigned long dwReserved;
  /* 0x005c */ long __PADDING__[1];
} tagRemBINDINFO, *PtagRemBINDINFO; /* size: 0x0060 */

struct IDropSourceNotify
{
}; /* size: 0x0008 */

typedef struct _FILE_TRACKING_INFORMATION
{
  /* 0x0000 */ void* DestinationFile;
  /* 0x0008 */ unsigned long ObjectInformationLength;
  /* 0x000c */ char ObjectInformation[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_TRACKING_INFORMATION, *PFILE_TRACKING_INFORMATION; /* size: 0x0010 */

typedef struct _MEMORY_BASIC_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ void* AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ long Padding_527;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ long __PADDING__[1];
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION; /* size: 0x0030 */

typedef class _variant_t
{
} variant_t, *Pvariant_t; /* size: 0x0018 */

typedef struct _RTL_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _TIME_FIELDS StandardStart;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _TIME_FIELDS DaylightStart;
  /* 0x00a8 */ long DaylightBias;
} RTL_TIME_ZONE_INFORMATION, *PRTL_TIME_ZONE_INFORMATION; /* size: 0x00ac */

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ struct _RTL_TIME_ZONE_INFORMATION tzi;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} RTL_DYNAMIC_TIME_ZONE_INFORMATION, *PRTL_DYNAMIC_TIME_ZONE_INFORMATION; /* size: 0x01b0 */

typedef struct _SECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ long Padding_528;
  /* 0x0008 */ void* lpSecurityDescriptor;
  /* 0x0010 */ int bInheritHandle;
  /* 0x0014 */ long __PADDING__[1];
} SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES; /* size: 0x0018 */

typedef struct _tagBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_529;
  /* 0x0008 */ wchar_t* szExtraInfo;
  /* 0x0010 */ struct tagSTGMEDIUM stgmedData;
  /* 0x0028 */ unsigned long grfBindInfoF;
  /* 0x002c */ unsigned long dwBindVerb;
  /* 0x0030 */ wchar_t* szCustomVerb;
  /* 0x0038 */ unsigned long cbstgmedData;
  /* 0x003c */ unsigned long dwOptions;
  /* 0x0040 */ unsigned long dwOptionsFlags;
  /* 0x0044 */ unsigned long dwCodePage;
  /* 0x0048 */ struct _SECURITY_ATTRIBUTES securityAttributes;
  /* 0x0060 */ struct _GUID iid;
  /* 0x0070 */ struct IUnknown* pUnk;
  /* 0x0078 */ unsigned long dwReserved;
  /* 0x007c */ long __PADDING__[1];
} tagBINDINFO, *PtagBINDINFO; /* size: 0x0080 */

struct tagEMROFFSETCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOffset;
}; /* size: 0x0010 */

typedef struct _FILE_ATTRIBUTE_TAG_INFO
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFO, *PFILE_ATTRIBUTE_TAG_INFO; /* size: 0x0008 */

typedef struct _POINTFLOAT
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
} POINTFLOAT, *PPOINTFLOAT; /* size: 0x0008 */

class CClipDataObject
{
  /* 0x0000 */ long Padding_530[4];
  /* 0x0010 */ void* m_hOle1;
  /* 0x0018 */ struct IUnknown* m_pUnkOle1;
  /* 0x0020 */ unsigned long m_refs;
  /* 0x0024 */ unsigned long m_Internalrefs;
  /* 0x0028 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0030 */ struct IDataObject* m_pDataObject;
  /* 0x0038 */ int m_fTriedToGetDataObject;
}; /* size: 0x0040 */

typedef struct _THREAD_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} THREAD_CYCLE_TIME_INFORMATION, *PTHREAD_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

struct tagSCROLLINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ int nMin;
  /* 0x000c */ int nMax;
  /* 0x0010 */ unsigned int nPage;
  /* 0x0014 */ int nPos;
  /* 0x0018 */ int nTrackPos;
}; /* size: 0x001c */

struct CompObjHdr
{
  /* 0x0000 */ unsigned long m_dwFirstDword;
  /* 0x0004 */ unsigned long m_dwOSVer;
  /* 0x0008 */ unsigned long m_unused;
  /* 0x000c */ struct _GUID m_clsClass;
}; /* size: 0x001c */

typedef struct _CM_COMPONENT_INFORMATION
{
  /* 0x0000 */ struct _DEVICE_FLAGS Flags;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Key;
  /* 0x000c */ long Padding_531;
  /* 0x0010 */ unsigned __int64 AffinityMask;
} CM_COMPONENT_INFORMATION, *PCM_COMPONENT_INFORMATION; /* size: 0x0018 */

struct IGlobalOptions
{
}; /* size: 0x0008 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
  union
  {
    /* 0x0038 */ unsigned int Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned int IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned int IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned int IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned int IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned int SpareBits : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION64, *PPROCESS_EXTENDED_BASIC_INFORMATION64; /* size: 0x0040 */

struct VOLUME_BITMAP_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0008 */ union _LARGE_INTEGER BitmapSize;
  /* 0x0010 */ unsigned char Buffer[1];
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

struct IXMLDOMParseError
{
}; /* size: 0x0008 */

struct ISynchronize
{
}; /* size: 0x0008 */

struct IXMLDOMEntity
{
}; /* size: 0x0008 */

class CBasedGlobalFileStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct tagREGISTERWORDW
{
  /* 0x0000 */ wchar_t* lpReading;
  /* 0x0008 */ wchar_t* lpWord;
}; /* size: 0x0010 */

typedef struct _UNWIND_HISTORY_TABLE_ENTRY
{
  /* 0x0000 */ unsigned __int64 ImageBase;
  /* 0x0008 */ struct _RUNTIME_FUNCTION* FunctionEntry;
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY; /* size: 0x0010 */

typedef struct _UNWIND_HISTORY_TABLE
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned char LocalHint;
  /* 0x0005 */ unsigned char GlobalHint;
  /* 0x0006 */ unsigned char Search;
  /* 0x0007 */ unsigned char Once;
  /* 0x0008 */ unsigned __int64 LowAddress;
  /* 0x0010 */ unsigned __int64 HighAddress;
  /* 0x0018 */ struct _UNWIND_HISTORY_TABLE_ENTRY Entry[12];
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE; /* size: 0x00d8 */

struct POWER_ACTION_POLICY
{
  /* 0x0000 */ enum POWER_ACTION Action;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long EventCode;
}; /* size: 0x000c */

struct SYSTEM_POWER_LEVEL
{
  /* 0x0000 */ unsigned char Enable;
  /* 0x0001 */ unsigned char Spare[3];
  /* 0x0004 */ unsigned long BatteryLevel;
  /* 0x0008 */ struct POWER_ACTION_POLICY PowerPolicy;
  /* 0x0014 */ enum _SYSTEM_POWER_STATE MinSystemState;
}; /* size: 0x0018 */

typedef struct _VARIABLE_NAME_AND_VALUE
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long ValueOffset;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ struct _GUID VendorGuid;
  /* 0x0020 */ wchar_t Name[1];
  /* 0x0022 */ char __PADDING__[2];
} VARIABLE_NAME_AND_VALUE, *PVARIABLE_NAME_AND_VALUE; /* size: 0x0024 */

struct IInternetSession
{
}; /* size: 0x0008 */

struct IInternetSecurityMgrSite
{
}; /* size: 0x0008 */

struct SExtHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ const wchar_t* pwszExt;
}; /* size: 0x0018 */

typedef struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS
{
  /* 0x0000 */ unsigned long QueryFlags;
  /* 0x0004 */ long Padding_532;
  /* 0x0008 */ void* ProcessHandle;
} SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS, *PSYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS; /* size: 0x0010 */

typedef struct _RUNTIME_FUNCTION
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long UnwindData;
} RUNTIME_FUNCTION, *PRUNTIME_FUNCTION; /* size: 0x000c */

typedef struct _stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_533[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat, *Pstat; /* size: 0x0030 */

struct _FLS_CALLBACK_INFO;

class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ long Padding_534[2];
  /* 0x0008 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0010 */ class CLinkable* m_pLinkable;
}; /* size: 0x0018 */

typedef struct _BOOT_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _BOOT_ENTRY BootEntry;
} BOOT_ENTRY_LIST, *PBOOT_ENTRY_LIST; /* size: 0x0024 */

typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 MinimumAddress;
  /* 0x0008 */ unsigned __int64 MaximumAddress;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned int EntryCount;
  /* 0x001c */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_DESCRIPTOR, *PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _KCRM_MARSHAL_HEADER
{
  /* 0x0000 */ unsigned long VersionMajor;
  /* 0x0004 */ unsigned long VersionMinor;
  /* 0x0008 */ unsigned long NumProtocols;
  /* 0x000c */ unsigned long Unused;
} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER; /* size: 0x0010 */

struct tagPOLYTEXTA
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ long Padding_535;
  /* 0x0010 */ const char* lpstr;
  /* 0x0018 */ unsigned int uiFlags;
  /* 0x001c */ struct tagRECT rcl;
  /* 0x002c */ long Padding_536;
  /* 0x0030 */ int* pdx;
}; /* size: 0x0038 */

struct <vc_attributes>::switch_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
}; /* size: 0x0008 */

struct IPartitionProperty
{
}; /* size: 0x0008 */

struct IStackWalkerSymbol
{
}; /* size: 0x0008 */

struct tagEMRROUNDRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct tagSIZE szlCorner;
}; /* size: 0x0020 */

struct _ASSEMBLY_STORAGE_MAP;

typedef struct _FILE_ALLOCATION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFO, *PFILE_ALLOCATION_INFO; /* size: 0x0008 */

struct HCOLORSPACE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _FILE_INTERNAL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IndexNumber;
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION; /* size: 0x0008 */

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* Previous;
  /* 0x0008 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} RTL_ACTIVATION_CONTEXT_STACK_FRAME, *PRTL_ACTIVATION_CONTEXT_STACK_FRAME; /* size: 0x0018 */

struct FRAME_GetTypeInfo
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ unsigned int iTInfo;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ char __pad2[4];
  /* 0x0018 */ struct ITypeInfo** ppTInfo;
}; /* size: 0x0020 */

typedef struct _LUTF8_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LUTF8_STRING, *PLUTF8_STRING; /* size: 0x0018 */

typedef struct _CTL_VERIFY_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_537;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0018 */ unsigned long cCtlStore;
  /* 0x001c */ long Padding_538;
  /* 0x0020 */ void** rghCtlStore;
  /* 0x0028 */ unsigned long cSignerStore;
  /* 0x002c */ long Padding_539;
  /* 0x0030 */ void** rghSignerStore;
} CTL_VERIFY_USAGE_PARA, *PCTL_VERIFY_USAGE_PARA; /* size: 0x0038 */

struct <vc_attributes>::helper_attributes::process_earlyAttribute
{
}; /* size: 0x0001 */

struct RPC_CLIENT_INFORMATION1
{
  /* 0x0000 */ unsigned char* UserName;
  /* 0x0008 */ unsigned char* ComputerName;
  /* 0x0010 */ unsigned short Privilege;
  /* 0x0012 */ char Padding_540[2];
  /* 0x0014 */ unsigned long AuthFlags;
}; /* size: 0x0018 */

typedef struct _ITEMIDLIST
{
  /* 0x0000 */ struct _SHITEMID mkid;
} ITEMIDLIST, *PITEMIDLIST; /* size: 0x0003 */

struct IRpcChannelBuffer2
{
}; /* size: 0x0008 */

struct IEnumOleUndoUnits
{
}; /* size: 0x0008 */

struct val_context
{
  /* 0x0000 */ int valuelen;
  /* 0x0004 */ long Padding_541;
  /* 0x0008 */ void* value_context;
  /* 0x0010 */ void* val_buff_ptr;
}; /* size: 0x0018 */

typedef struct _CONSOLE_READCONSOLE_CONTROL
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long nInitialChars;
  /* 0x0008 */ unsigned long dwCtrlWakeupMask;
  /* 0x000c */ unsigned long dwControlKeyState;
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL; /* size: 0x0010 */

typedef struct _FILE_RENAME_INFO
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_542[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFO, *PFILE_RENAME_INFO; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_STACK
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* ActiveFrame;
  /* 0x0008 */ struct _LIST_ENTRY FrameListCache;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long NextCookieSequenceNumber;
  /* 0x0020 */ unsigned long StackId;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_STACK, *PACTIVATION_CONTEXT_STACK; /* size: 0x0028 */

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ unsigned char TimeoutSpecified;
  /* 0x000d */ char Padding_543;
  /* 0x000e */ wchar_t Name[1];
} FILE_PIPE_WAIT_FOR_BUFFER, *PFILE_PIPE_WAIT_FOR_BUFFER; /* size: 0x0010 */

typedef struct _TAPE_GET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long DefaultBlockSize;
  /* 0x0008 */ unsigned long MaximumBlockSize;
  /* 0x000c */ unsigned long MinimumBlockSize;
  /* 0x0010 */ unsigned long MaximumPartitionCount;
  /* 0x0014 */ unsigned long FeaturesLow;
  /* 0x0018 */ unsigned long FeaturesHigh;
  /* 0x001c */ unsigned long EOTWarningZoneSize;
} TAPE_GET_DRIVE_PARAMETERS, *PTAPE_GET_DRIVE_PARAMETERS; /* size: 0x0020 */

struct HGLRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IOplockStorage
{
}; /* size: 0x0008 */

typedef struct _CONSOLE_CURSOR_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ int bVisible;
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO; /* size: 0x0008 */

class CAsyncUnknownMgr::CPrivUnknown
{
}; /* size: 0x0008 */

struct IBindHost
{
}; /* size: 0x0008 */

class CCtxCall
{
  /* 0x0000 */ long Padding_544[2];
  /* 0x0008 */ unsigned long _dwFlags;
  /* 0x000c */ unsigned long _dwStage;
  /* 0x0010 */ unsigned long _cMarshalItfs;
  /* 0x0014 */ unsigned long _cUnmarshalItfs;
  /* 0x0018 */ unsigned long _cFree;
  /* 0x001c */ unsigned long _cError;
  /* 0x0020 */ int _fError;
  /* 0x0024 */ unsigned long _dwDestCtx;
  /* 0x0028 */ unsigned long _cItfs;
  /* 0x002c */ unsigned long _idx;
  /* 0x0030 */ void** _ppItfs;
  /* 0x0038 */ unsigned long _cPolicies;
  /* 0x003c */ unsigned long _cbExtent;
  /* 0x0040 */ void* _pvExtent;
  /* 0x0048 */ HRESULT _hr;
  /* 0x004c */ long Padding_545;
  /* 0x0050 */ class CPolicySet* _pPS;
  /* 0x0058 */ class CObjectContext* _pContext;
  /* 0x0060 */ unsigned long _dataRep;
  /* 0x0064 */ HRESULT _hrServer;
  union
  {
    /* 0x0000 */ void* s_pAllocList[20];
    /* 0x0000 */ int s_iAvailable;
    /* 0x0000 */ class COleStaticMutexSem _mxsCtxCallLock;
  }; /* size: 0x00a0 */
}; /* size: 0x0068 */

struct IOleUndoManager
{
}; /* size: 0x0008 */

struct ITypeMarshal
{
}; /* size: 0x0008 */

struct <vc_attributes>::uuidAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

struct IRpcOptions
{
}; /* size: 0x0008 */

struct tagMINMAXINFO
{
  /* 0x0000 */ struct tagPOINT ptReserved;
  /* 0x0008 */ struct tagPOINT ptMaxSize;
  /* 0x0010 */ struct tagPOINT ptMaxPosition;
  /* 0x0018 */ struct tagPOINT ptMinTrackSize;
  /* 0x0020 */ struct tagPOINT ptMaxTrackSize;
}; /* size: 0x0028 */

typedef struct _JOURNAL_ABSOLUTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER EndTimeStamp;
  /* 0x0010 */ unsigned __int64 NumberOfRecords;
  /* 0x0018 */ unsigned long FillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_ABSOLUTE_INFORMATION, *PJOURNAL_ABSOLUTE_INFORMATION; /* size: 0x0020 */

typedef struct _WPP_WIN2K_CONTROL_BLOCK
{
  /* 0x0000 */ unsigned __int64 Logger;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Level;
} WPP_WIN2K_CONTROL_BLOCK, *PWPP_WIN2K_CONTROL_BLOCK; /* size: 0x0010 */

struct HCONVLIST__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct ICallFrameWalker
{
}; /* size: 0x0008 */

struct IFont
{
}; /* size: 0x0008 */

typedef struct _ALPC_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long SequenceNo;
  /* 0x0008 */ void* PortContext;
} ALPC_BASIC_INFORMATION, *PALPC_BASIC_INFORMATION; /* size: 0x0010 */

struct <vc_attributes>::helpfileAttribute
{
  /* 0x0000 */ const char* filename;
}; /* size: 0x0008 */

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION
{
  /* 0x0000 */ unsigned char DriverInPath;
  /* 0x0001 */ char Padding_546[3];
  /* 0x0004 */ unsigned long DriverNameLength;
  /* 0x0008 */ wchar_t DriverName[1];
  /* 0x000a */ char __PADDING__[2];
} FILE_FS_DRIVER_PATH_INFORMATION, *PFILE_FS_DRIVER_PATH_INFORMATION; /* size: 0x000c */

typedef struct _SERVICE_TABLE_ENTRYW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYW, *PSERVICE_TABLE_ENTRYW; /* size: 0x0010 */

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _COORD dwSize;
  /* 0x0008 */ struct _COORD dwCursorPosition;
  /* 0x000c */ unsigned short wAttributes;
  /* 0x000e */ struct _SMALL_RECT srWindow;
  /* 0x0016 */ struct _COORD dwMaximumWindowSize;
  /* 0x001a */ unsigned short wPopupAttributes;
  /* 0x001c */ int bFullscreenSupported;
  /* 0x0020 */ unsigned long ColorTable[16];
} CONSOLE_SCREEN_BUFFER_INFOEX, *PCONSOLE_SCREEN_BUFFER_INFOEX; /* size: 0x0060 */

typedef struct _LDR_SERVICE_TAG_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ unsigned long ServiceTag;
  /* 0x0014 */ unsigned long Count;
} LDR_SERVICE_TAG_RECORD, *PLDR_SERVICE_TAG_RECORD; /* size: 0x0018 */

struct tagACTCTXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* lpSource;
  /* 0x0010 */ unsigned short wProcessorArchitecture;
  /* 0x0012 */ unsigned short wLangId;
  /* 0x0014 */ long Padding_547;
  /* 0x0018 */ const wchar_t* lpAssemblyDirectory;
  /* 0x0020 */ const wchar_t* lpResourceName;
  /* 0x0028 */ const wchar_t* lpApplicationName;
  /* 0x0030 */ struct HINSTANCE__* hModule;
}; /* size: 0x0038 */

typedef struct _TEB_ACTIVE_FRAME
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_548;
  /* 0x0008 */ struct _TEB_ACTIVE_FRAME* Previous;
  /* 0x0010 */ const struct _TEB_ACTIVE_FRAME_CONTEXT* Context;
} TEB_ACTIVE_FRAME, *PTEB_ACTIVE_FRAME; /* size: 0x0018 */

class XIStorage
{
  /* 0x0000 */ struct IStorage* _p;
}; /* size: 0x0008 */

typedef struct _currencyfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_549;
  /* 0x0010 */ char* lpDecimalSep;
  /* 0x0018 */ char* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ unsigned int PositiveOrder;
  /* 0x0028 */ char* lpCurrencySymbol;
} currencyfmtA, *PcurrencyfmtA; /* size: 0x0030 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA, *PPLUGPLAY_CONTROL_DEVICE_CONTROL_DATA; /* size: 0x0018 */

typedef struct _NON_PAGED_DEBUG_INFO
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned short Machine;
  /* 0x000a */ unsigned short Characteristics;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned __int64 ImageBase;
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO; /* size: 0x0020 */

struct ICatInformation
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION; /* size: 0x0004 */

typedef struct _CRYPT_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ const struct _CERT_CONTEXT* pSigningCert;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
  /* 0x0030 */ unsigned long cMsgCert;
  /* 0x0034 */ long Padding_550;
  /* 0x0038 */ const struct _CERT_CONTEXT** rgpMsgCert;
  /* 0x0040 */ unsigned long cMsgCrl;
  /* 0x0044 */ long Padding_551;
  /* 0x0048 */ const struct _CRL_CONTEXT** rgpMsgCrl;
  /* 0x0050 */ unsigned long cAuthAttr;
  /* 0x0054 */ long Padding_552;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0060 */ unsigned long cUnauthAttr;
  /* 0x0064 */ long Padding_553;
  /* 0x0068 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
  /* 0x0070 */ unsigned long dwFlags;
  /* 0x0074 */ unsigned long dwInnerContentType;
} CRYPT_SIGN_MESSAGE_PARA, *PCRYPT_SIGN_MESSAGE_PARA; /* size: 0x0078 */

typedef struct _ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned __int64 StartingFileOffset;
  /* 0x0008 */ unsigned long OutputBufferOffset;
  /* 0x000c */ unsigned long BytesWithinFileSize;
  /* 0x0010 */ unsigned long BytesWithinValidDataLength;
  /* 0x0014 */ unsigned short CompressionFormat;
  /* 0x0016 */ unsigned char DataUnitShift;
  /* 0x0017 */ unsigned char ChunkShift;
  /* 0x0018 */ unsigned char ClusterShift;
  /* 0x0019 */ unsigned char EncryptionFormat;
  /* 0x001a */ unsigned short NumberOfDataBlocks;
  /* 0x001c */ unsigned long DataBlockSize[1];
} ENCRYPTED_DATA_INFO, *PENCRYPTED_DATA_INFO; /* size: 0x0020 */

typedef struct _IMAGE_EXPORT_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long Base;
  /* 0x0014 */ unsigned long NumberOfFunctions;
  /* 0x0018 */ unsigned long NumberOfNames;
  /* 0x001c */ unsigned long AddressOfFunctions;
  /* 0x0020 */ unsigned long AddressOfNames;
  /* 0x0024 */ unsigned long AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY; /* size: 0x0028 */

typedef struct _MUILANGUAGES
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumLanguages;
  /* 0x0006 */ unsigned short NumLanguages;
  /* 0x0008 */ unsigned short NumInstalledLanguages;
  /* 0x000a */ char Padding_554[6];
  /* 0x0010 */ struct _MUILANGINFO* LangInfos;
} MUILANGUAGES, *PMUILANGUAGES; /* size: 0x0018 */

struct IAbandonmentNotification
{
}; /* size: 0x0008 */

typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHENHMETAFILE::__MIDL_IWinTypes_0006, *PuserHENHMETAFILE::__MIDL_IWinTypes_0006; /* size: 0x0008 */

struct SStringHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long dwHash;
  /* 0x0014 */ long Padding_555;
  /* 0x0018 */ struct tagDUALSTRINGARRAY* psaKey;
}; /* size: 0x0020 */

class MIDEntry
{
  /* 0x0000 */ struct SStringHashNode _Node;
  /* 0x0020 */ unsigned __int64 _mid;
  /* 0x0028 */ unsigned long _cRefs;
  /* 0x002c */ unsigned long _dwFlags;
}; /* size: 0x0030 */

struct IInternetZoneManager
{
}; /* size: 0x0008 */

struct <vc_attributes>::importAttribute
{
  /* 0x0000 */ const char* idl_file;
}; /* size: 0x0008 */

typedef struct _UNICODE_PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_556;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* CaseMatch;
  /* 0x0018 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0030 */ struct _UNICODE_STRING* Prefix;
} UNICODE_PREFIX_TABLE_ENTRY, *PUNICODE_PREFIX_TABLE_ENTRY; /* size: 0x0038 */

typedef struct _wfinddata64i32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_557;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata64i32_t, *Pwfinddata64i32_t; /* size: 0x0230 */

typedef struct _OBJECT_NAME_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION; /* size: 0x0010 */

struct IPolicyMaker
{
}; /* size: 0x0008 */

typedef struct _SYSDBG_VIRTUAL
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_VIRTUAL, *PSYSDBG_VIRTUAL; /* size: 0x0018 */

struct ICreateTypeLib2
{
}; /* size: 0x0008 */

class DefaultIBindStatusCallback
{
  /* 0x0000 */ long Padding_558[8];
  /* 0x0020 */ struct IBindStatusCallback* m_pibsc;
  /* 0x0028 */ long m_lRef;
  /* 0x002c */ long Padding_559;
  /* 0x0030 */ struct IBinding* m_pBinding;
  /* 0x0038 */ struct HWND__* m_hwndParent;
  /* 0x0040 */ struct HWND__* m_hDlg;
  /* 0x0048 */ unsigned long m_ulProgress;
  /* 0x004c */ unsigned long m_ulProgressMax;
  /* 0x0050 */ wchar_t m_szStatusText[260];
  /* 0x0258 */ int m_fShown;
}; /* size: 0x0260 */

struct tagDEBUGHOOKINFO
{
  /* 0x0000 */ unsigned long idThread;
  /* 0x0004 */ unsigned long idThreadInstaller;
  /* 0x0008 */ __int64 lParam;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ int code;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct <vc_attributes>::hookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0008 */ const char* source;
  /* 0x0010 */ const char* handler;
  /* 0x0018 */ const char* receiver;
}; /* size: 0x0020 */

typedef struct _NDR64_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
} NDR64_STRUCTURE_HEADER_FORMAT, *PNDR64_STRUCTURE_HEADER_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag8_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ unsigned char frag4;
    /* 0x0029 */ char __PADDING__[7];
  } /* size: 0x0028 */ frag2;
} _midl_frag8_t, *P_midl_frag8_t; /* size: 0x0030 */

struct IRpcChannelBuffer3
{
}; /* size: 0x0008 */

struct tagEMREXTSELECTCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbRgnData;
  /* 0x000c */ unsigned long iMode;
  /* 0x0010 */ unsigned char RgnData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct tagPOLYTEXTW
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ long Padding_560;
  /* 0x0010 */ const wchar_t* lpstr;
  /* 0x0018 */ unsigned int uiFlags;
  /* 0x001c */ struct tagRECT rcl;
  /* 0x002c */ long Padding_561;
  /* 0x0030 */ int* pdx;
}; /* size: 0x0038 */

struct HPALETTE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _IMAGE_SYMBOL
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ short SectionNumber;
  /* 0x000e */ unsigned short Type;
  /* 0x0010 */ unsigned char StorageClass;
  /* 0x0011 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL, *PIMAGE_SYMBOL; /* size: 0x0012 */

struct tagHSZPAIR
{
  /* 0x0000 */ struct HSZ__* hszSvc;
  /* 0x0008 */ struct HSZ__* hszTopic;
}; /* size: 0x0010 */

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_562;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldSecurityDescriptorLength;
  /* 0x002c */ long Padding_563;
  /* 0x0030 */ void* OldSecurityDescriptor;
  /* 0x0038 */ unsigned long NewSecurityDescriptorLength;
  /* 0x003c */ long Padding_564;
  /* 0x0040 */ void* NewSecurityDescriptor;
} JOURNAL_SET_KEY_SECURITY_INFORMATION, *PJOURNAL_SET_KEY_SECURITY_INFORMATION; /* size: 0x0048 */

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDeviceInstance;
  /* 0x0010 */ unsigned long Relation;
  /* 0x0014 */ long Padding_565;
  /* 0x0018 */ wchar_t* RelatedDeviceInstance;
  /* 0x0020 */ unsigned long RelatedDeviceInstanceLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_RELATED_DEVICE_DATA, *PPLUGPLAY_CONTROL_RELATED_DEVICE_DATA; /* size: 0x0028 */

struct DLL_INSTANTIATION_PROPERTIES
{
  /* 0x0000 */ wchar_t _pzDllPath[261];
  /* 0x020a */ char Padding_566[2];
  /* 0x020c */ unsigned long _dwThreadingModel;
  /* 0x0210 */ unsigned long _dwFlags;
  /* 0x0214 */ unsigned long _dwHash;
  /* 0x0218 */ unsigned long _dwContext;
  /* 0x021c */ long Padding_567;
  /* 0x0220 */ class CClassCache::CDllClassEntry* _pDCE;
}; /* size: 0x0228 */

struct LockCookie
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwWriterSeqNum;
  /* 0x0008 */ unsigned short wReaderLevel;
  /* 0x000a */ unsigned short wWriterLevel;
  /* 0x000c */ unsigned long dwThreadID;
}; /* size: 0x0010 */

typedef struct _IMAGE_BASE_RELOCATION
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long SizeOfBlock;
} IMAGE_BASE_RELOCATION, *PIMAGE_BASE_RELOCATION; /* size: 0x0008 */

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned char HypervisorConnected;
  /* 0x0001 */ unsigned char Spare0[7];
  /* 0x0008 */ unsigned __int64 EnabledAddressSpaceEnlightenments;
} SYSTEM_HYPERVISOR_QUERY_INFORMATION, *PSYSTEM_HYPERVISOR_QUERY_INFORMATION; /* size: 0x0010 */

struct _NDR_CORRELATION_INFO;

struct RETRIEVAL_POINTERS_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ long Padding_568;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER NextVcn;
    /* 0x0018 */ union _LARGE_INTEGER Lcn;
  } /* size: 0x0010 */ Extents[1];
}; /* size: 0x0020 */

struct tagRGBTRIPLE
{
  /* 0x0000 */ unsigned char rgbtBlue;
  /* 0x0001 */ unsigned char rgbtGreen;
  /* 0x0002 */ unsigned char rgbtRed;
}; /* size: 0x0003 */

typedef struct _s__CatchableTypeArray
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType** arrayOfCatchableTypes /* zero-length array */;
} s__CatchableTypeArray, *Ps__CatchableTypeArray; /* size: 0x0004 */

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long UnwindInfoAddress;
} IMAGE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_RUNTIME_FUNCTION_ENTRY; /* size: 0x000c */

typedef struct _VARIABLE_NAME
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _GUID VendorGuid;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} VARIABLE_NAME, *PVARIABLE_NAME; /* size: 0x0018 */

struct IOleObject
{
}; /* size: 0x0008 */

typedef struct _MkInterfaceList
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_569;
  /* 0x0008 */ struct tagInterfaceData* apIFDList[1];
} MkInterfaceList, *PMkInterfaceList; /* size: 0x0010 */

typedef struct _SYSTEM_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_570;
  /* 0x0008 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_POOLTAG_INFORMATION, *PSYSTEM_POOLTAG_INFORMATION; /* size: 0x0030 */

typedef struct _FILE_END_OF_FILE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFO, *PFILE_END_OF_FILE_INFO; /* size: 0x0008 */

struct <vc_attributes>::pragmaAttribute
{
  /* 0x0000 */ const char* token_sequence;
}; /* size: 0x0008 */

struct tagCustomPrivResolverInfo
{
  /* 0x0000 */ unsigned __int64 OxidServer;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pServerORBindings;
  /* 0x0010 */ struct tagOXID_INFO OxidInfo;
  /* 0x0040 */ unsigned __int64 LocalMidOfRemote;
  /* 0x0048 */ unsigned long DllServerModel;
  /* 0x004c */ long Padding_571;
  /* 0x0050 */ unsigned short* pwszDllServer;
  /* 0x0058 */ int FoundInROT;
  /* 0x005c */ long __PADDING__[1];
}; /* size: 0x0060 */

class SafeIUnknown
{
  /* 0x0000 */ struct IUnknown* _p;
}; /* size: 0x0008 */

typedef struct _SYSDBG_CONTROL_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ unsigned long Processor;
} SYSDBG_CONTROL_SPACE, *PSYSDBG_CONTROL_SPACE; /* size: 0x0018 */

typedef struct _PAGE_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long PagePriority;
} PAGE_PRIORITY_INFORMATION, *PPAGE_PRIORITY_INFORMATION; /* size: 0x0004 */

typedef struct _MESSAGE_RESOURCE_BLOCK
{
  /* 0x0000 */ unsigned long LowId;
  /* 0x0004 */ unsigned long HighId;
  /* 0x0008 */ unsigned long OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK; /* size: 0x000c */

struct tagCustomOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ long Padding_572;
  /* 0x0020 */ unsigned char* data;
}; /* size: 0x0028 */

typedef struct _TOKEN_CONTROL
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
  /* 0x0018 */ struct _TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL, *PTOKEN_CONTROL; /* size: 0x0028 */

typedef struct __MIDL_XmitDefs_0001
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwClientThread;
} _MIDL_XmitDefs_0001, *P_MIDL_XmitDefs_0001; /* size: 0x0008 */

typedef struct _CrtMemState
{
  /* 0x0000 */ struct _CrtMemBlockHeader* pBlockHeader;
  /* 0x0008 */ unsigned __int64 lCounts[5];
  /* 0x0030 */ unsigned __int64 lSizes[5];
  /* 0x0058 */ unsigned __int64 lHighWaterCount;
  /* 0x0060 */ unsigned __int64 lTotalCount;
} CrtMemState, *PCrtMemState; /* size: 0x0068 */

struct <vc_attributes>::idl_moduleAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* dllname;
  /* 0x0010 */ const char* version;
  /* 0x0018 */ const char* uuid;
  /* 0x0020 */ const char* helpstring;
  /* 0x0028 */ int helpstringcontext;
  /* 0x002c */ int helpcontext;
  /* 0x0030 */ BOOL hidden;
  /* 0x0031 */ BOOL restricted;
  /* 0x0032 */ char __PADDING__[6];
}; /* size: 0x0038 */

class CFrameFilter
{
  /* 0x0000 */ long Padding_573[6];
  /* 0x0018 */ struct HWND__* m_hwndObject;
  /* 0x0020 */ struct HWND__* m_hwndFrame;
  /* 0x0028 */ struct IOleInPlaceFrame* m_lpFrame;
  /* 0x0030 */ struct IOleInPlaceActiveObject* m_lpObject;
  /* 0x0038 */ void* m_lpfnPrevWndProc /* function */;
  /* 0x0040 */ int m_fObjectMenu;
  /* 0x0044 */ int m_fCurItemPopup;
  /* 0x0048 */ int m_fInMenuMode;
  /* 0x004c */ int m_fDiscardWmCommand;
  /* 0x0050 */ int m_fGotMenuCloseEvent;
  /* 0x0054 */ int m_fRemovedWndProc;
  /* 0x0058 */ unsigned int m_cmdId;
  /* 0x005c */ long Padding_574;
  /* 0x0060 */ unsigned __int64 m_uCurItemID;
  /* 0x0068 */ struct tagOLEMENU* m_lpOleMenu;
  /* 0x0070 */ struct HMENU__* m_hmenuCombined;
  /* 0x0078 */ struct HWND__* m_hwndFocusOnEnter;
  /* 0x0080 */ int m_cAltTab;
}; /* size: 0x0088 */

struct IErrorLog
{
}; /* size: 0x0008 */

typedef struct _FAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} FAT_STATISTICS, *PFAT_STATISTICS; /* size: 0x0024 */

typedef struct _FILE_PATH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned char FilePath[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_PATH, *PFILE_PATH; /* size: 0x0010 */

struct tagREGISTERWORDA
{
  /* 0x0000 */ char* lpReading;
  /* 0x0008 */ char* lpWord;
}; /* size: 0x0010 */

class COLEDragDropHelper
{
  /* 0x0000 */ long Padding_575[2];
  /* 0x0008 */ unsigned long _lRefs;
}; /* size: 0x0010 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_576;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_W; /* size: 0x0028 */

typedef struct _FILE_ID_BOTH_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_577;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_578[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFO, *PFILE_ID_BOTH_DIR_INFO; /* size: 0x0070 */

struct tagSECURITYBINDING
{
  /* 0x0000 */ unsigned short wAuthnSvc;
  /* 0x0002 */ unsigned short wAuthzSvc;
  /* 0x0004 */ unsigned short aPrincName;
}; /* size: 0x0006 */

struct tagHW_PROFILE_INFOA
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ char szHwProfileGuid[39];
  /* 0x002b */ char szHwProfileName[80];
  /* 0x007b */ char __PADDING__[1];
}; /* size: 0x007c */

struct tagABORTPATH
{
  /* 0x0000 */ struct tagEMR emr;
}; /* size: 0x0008 */

struct tagCACLSID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_579;
  /* 0x0008 */ struct _GUID* pElems;
}; /* size: 0x0010 */

struct HINSTANCE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IExternalConnection
{
}; /* size: 0x0008 */

struct tagOIDData
{
  /* 0x0000 */ const struct _GUID* pmoid;
  /* 0x0008 */ unsigned long aptID;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _TypeDescriptor
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char* name /* zero-length array */;
} TypeDescriptor, *PTypeDescriptor; /* size: 0x0010 */

struct IPersistMemory
{
}; /* size: 0x0008 */

class CALLFRAME_CACHE_ENTRY<TYPEINFOVTBL>
{
  /* 0x0000 */ long Padding_580[2];
  /* 0x0008 */ unsigned long m_dwReleaseTime;
  /* 0x000c */ long Padding_581;
  /* 0x0010 */ class CALLFRAME_CACHE<TYPEINFOVTBL>* m_pcache;
  /* 0x0018 */ volatile long m_refs;
  /* 0x001c */ struct _GUID m_guidkey;
}; /* size: 0x0030 */

struct ICallInfo
{
}; /* size: 0x0008 */

struct IPropertyPage2
{
}; /* size: 0x0008 */

struct tagMULTIKEYHELPW
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ wchar_t mkKeylist;
  /* 0x0006 */ wchar_t szKeyphrase[1];
}; /* size: 0x0008 */

struct IPolicy
{
}; /* size: 0x0008 */

class CDestObject
{
  /* 0x0000 */ long Padding_582[2];
  /* 0x0008 */ struct tagCOMVERSION _comversion;
  /* 0x000c */ unsigned long _dwDestCtx;
}; /* size: 0x0010 */

struct SChannelHookCallInfo
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ struct _GUID uCausality;
  /* 0x0024 */ unsigned long dwServerPid;
  /* 0x0028 */ unsigned long iMethod;
  /* 0x002c */ long Padding_583;
  /* 0x0030 */ void* pObject;
}; /* size: 0x0038 */

class CMessageCall
{
  /* 0x0000 */ long Padding_584[6];
  /* 0x0018 */ enum tagCALLCATEGORY _callcat;
  /* 0x001c */ unsigned long _iFlags;
  /* 0x0020 */ long _hResult;
  /* 0x0024 */ long Padding_585;
  /* 0x0028 */ void* _hEvent;
  /* 0x0030 */ struct HWND__* _hWndCaller;
  /* 0x0038 */ struct _GUID _ipid;
  /* 0x0048 */ void* _hSxsActCtx;
  /* 0x0050 */ unsigned long _server_fault;
  /* 0x0054 */ long Padding_586;
  /* 0x0058 */ class CDestObject _destObj;
  /* 0x0068 */ void* _pHeader;
  /* 0x0070 */ class CChannelHandle* _pHandle;
  /* 0x0078 */ void* _hRpc;
  /* 0x0080 */ struct IUnknown* _pContext;
  /* 0x0088 */ unsigned long _dwCOMHeaderSize;
  /* 0x008c */ long Padding_587;
  /* 0x0090 */ struct tagRPCOLEMESSAGE message;
  /* 0x00e0 */ struct SChannelHookCallInfo hook;
  /* 0x0118 */ unsigned long _dwErrorBufSize;
  /* 0x011c */ unsigned long m_ulCancelTimeout;
  /* 0x0120 */ unsigned long m_dwStartCount;
  /* 0x0124 */ long Padding_588;
  /* 0x0128 */ class CCtxCall* m_pClientCtxCall;
  /* 0x0130 */ class CCtxCall* m_pServerCtxCall;
}; /* size: 0x0138 */

struct IRecordInfo
{
}; /* size: 0x0008 */

struct IFontDisp
{
}; /* size: 0x0008 */

struct IEnumConnections
{
}; /* size: 0x0008 */

typedef struct __midl_frag691_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ const void* frag5;
} _midl_frag691_t, *P_midl_frag691_t; /* size: 0x0050 */

class CRpcChannelBuffer
{
  /* 0x0000 */ long Padding_589[6];
  /* 0x0018 */ unsigned long _cRefs;
  /* 0x001c */ unsigned long state;
  /* 0x0020 */ class CChannelHandle* volatile _pRpcDefault;
  /* 0x0028 */ class CChannelHandle* _pRpcCustom;
  /* 0x0030 */ class OXIDEntry* _pOXIDEntry;
  /* 0x0038 */ struct tagIPIDEntry* _pIPIDEntry;
  /* 0x0040 */ void* _pInterfaceInfo;
  /* 0x0048 */ class CStdIdentity* _pStdId;
  /* 0x0050 */ class CDestObject _destObj;
}; /* size: 0x0060 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;

class CallFrame
{
  /* 0x0000 */ long Padding_590[6];
  /* 0x0018 */ struct MD_METHOD* m_pmd;
  /* 0x0020 */ void* m_pvArgs;
  /* 0x0028 */ int m_fIsCopy;
  /* 0x002c */ int m_fIsUnmarshal;
  /* 0x0030 */ __int64 m_hrReturnValue;
  /* 0x0038 */ void* m_pvMemCur;
  /* 0x0040 */ void* m_pvArgsSrc;
  /* 0x0048 */ class Interceptor* m_pInterceptor;
  /* 0x0050 */ int m_fPropogatingOutParam;
  /* 0x0054 */ int m_fWorkingOnInParam;
  /* 0x0058 */ int m_fWorkingOnOutParam;
  /* 0x005c */ long Padding_591;
  /* 0x0060 */ class CallFrame* m_pAllocatorFrame;
  /* 0x0068 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0070 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0078 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0080 */ unsigned char* m_StackTop;
  /* 0x0088 */ unsigned char* m_Memory;
  /* 0x0090 */ unsigned __int64 m_MaxCount;
  /* 0x0098 */ unsigned __int64 m_Offset;
  /* 0x00a0 */ unsigned __int64 m_ActualCount;
  /* 0x00a8 */ struct ARRAY_INFO* m_pArrayInfo;
  /* 0x00b0 */ long m_refs;
  /* 0x00b4 */ unsigned char m_pvMem[256];
  /* 0x01b4 */ int m_fCanUseBuffer;
  /* 0x01b8 */ struct tagBLOB m_blobBuffer;
  /* 0x01c8 */ int m_fWeOwnBlobBuffer;
}; /* size: 0x01d0 */

typedef struct _THREAD_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_592;
  /* 0x0008 */ struct _TEB* TebBaseAddress;
  /* 0x0010 */ struct _CLIENT_ID ClientId;
  /* 0x0020 */ unsigned __int64 AffinityMask;
  /* 0x0028 */ long Priority;
  /* 0x002c */ long BasePriority;
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION; /* size: 0x0030 */

class CStmBuf
{
  /* 0x0000 */ struct IStream* m_pStm;
  /* 0x0008 */ unsigned char m_aBuffer[256];
  /* 0x0108 */ unsigned char* m_pBuffer;
  /* 0x0110 */ unsigned long m_cBuffer;
}; /* size: 0x0118 */

class CEnumVerb
{
  /* 0x0000 */ long Padding_593[2];
  /* 0x0008 */ unsigned long m_cRef;
  /* 0x000c */ long m_iVerb;
  /* 0x0010 */ struct VerbList* m_VerbList;
}; /* size: 0x0018 */

typedef struct _PEB_LDR_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_594[3];
  /* 0x0008 */ void* SsHandle;
  /* 0x0010 */ struct _LIST_ENTRY InLoadOrderModuleList;
  /* 0x0020 */ struct _LIST_ENTRY InMemoryOrderModuleList;
  /* 0x0030 */ struct _LIST_ENTRY InInitializationOrderModuleList;
  /* 0x0040 */ void* EntryInProgress;
  /* 0x0048 */ unsigned char ShutdownInProgress;
  /* 0x0049 */ char Padding_595[7];
  /* 0x0050 */ void* ShutdownThreadId;
} PEB_LDR_DATA, *PPEB_LDR_DATA; /* size: 0x0058 */

struct IDataFilter
{
}; /* size: 0x0008 */

struct ICallUnmarshal
{
}; /* size: 0x0008 */

class CTry
{
  /* 0x0000 */ class CTry* _pPrevTry;
  /* 0x0008 */ int _StackTop;
}; /* size: 0x0010 */

struct IServicesSink
{
}; /* size: 0x0008 */

class CBasedUpdatePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CUpdateList
{
  /* 0x0000 */ class CBasedUpdatePtr _pudHead;
  /* 0x0008 */ class CBasedUpdatePtr _pudTail;
}; /* size: 0x0010 */

typedef struct _CURDIR
{
  /* 0x0000 */ struct _UNICODE_STRING DosPath;
  /* 0x0010 */ void* Handle;
} CURDIR, *PCURDIR; /* size: 0x0018 */

typedef struct _RTL_DRIVE_LETTER_CURDIR
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING DosPath;
} RTL_DRIVE_LETTER_CURDIR, *PRTL_DRIVE_LETTER_CURDIR; /* size: 0x0018 */

typedef struct _RTL_USER_PROCESS_PARAMETERS
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ void* ConsoleHandle;
  /* 0x0018 */ unsigned long ConsoleFlags;
  /* 0x001c */ long Padding_596;
  /* 0x0020 */ void* StandardInput;
  /* 0x0028 */ void* StandardOutput;
  /* 0x0030 */ void* StandardError;
  /* 0x0038 */ struct _CURDIR CurrentDirectory;
  /* 0x0050 */ struct _UNICODE_STRING DllPath;
  /* 0x0060 */ struct _UNICODE_STRING ImagePathName;
  /* 0x0070 */ struct _UNICODE_STRING CommandLine;
  /* 0x0080 */ void* Environment;
  /* 0x0088 */ unsigned long StartingX;
  /* 0x008c */ unsigned long StartingY;
  /* 0x0090 */ unsigned long CountX;
  /* 0x0094 */ unsigned long CountY;
  /* 0x0098 */ unsigned long CountCharsX;
  /* 0x009c */ unsigned long CountCharsY;
  /* 0x00a0 */ unsigned long FillAttribute;
  /* 0x00a4 */ unsigned long WindowFlags;
  /* 0x00a8 */ unsigned long ShowWindowFlags;
  /* 0x00ac */ long Padding_597;
  /* 0x00b0 */ struct _UNICODE_STRING WindowTitle;
  /* 0x00c0 */ struct _UNICODE_STRING DesktopInfo;
  /* 0x00d0 */ struct _UNICODE_STRING ShellInfo;
  /* 0x00e0 */ struct _UNICODE_STRING RuntimeData;
  /* 0x00f0 */ struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  /* 0x03f0 */ volatile unsigned __int64 EnvironmentSize;
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS; /* size: 0x03f8 */

struct PROCESSOR_PERFSTATE_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char MaxThrottle;
  /* 0x0005 */ unsigned char MinThrottle;
  /* 0x0006 */ unsigned char BusyAdjThreshold;
  union
  {
    /* 0x0007 */ unsigned char Spare;
    union
    {
      union
      {
        /* 0x0007 */ unsigned char AsBYTE;
        struct /* bitfield */
        {
          /* 0x0007 */ unsigned char NoDomainAccounting : 1; /* bit position: 0 */
          /* 0x0007 */ unsigned char IncreasePolicy : 2; /* bit position: 1 */
          /* 0x0007 */ unsigned char DecreasePolicy : 2; /* bit position: 3 */
          /* 0x0007 */ unsigned char Reserved : 3; /* bit position: 5 */
        }; /* bitfield */
      }; /* size: 0x0001 */
    } /* size: 0x0001 */ Flags;
  }; /* size: 0x0001 */
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ unsigned long IncreasePercent;
  /* 0x0018 */ unsigned long DecreasePercent;
}; /* size: 0x001c */

struct tagRID_DEVICE_INFO_MOUSE
{
  /* 0x0000 */ unsigned long dwId;
  /* 0x0004 */ unsigned long dwNumberOfButtons;
  /* 0x0008 */ unsigned long dwSampleRate;
  /* 0x000c */ int fHasHorizontalWheel;
}; /* size: 0x0010 */

class CDebugEventFireCF
{
}; /* size: 0x0008 */

typedef struct _THREAD_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_598;
  union
  {
    /* 0x0008 */ void* NewTlsData;
    /* 0x0008 */ void* OldTlsData;
  }; /* size: 0x0008 */
  /* 0x0010 */ void* ThreadId;
} THREAD_TLS_INFORMATION, *PTHREAD_TLS_INFORMATION; /* size: 0x0018 */

struct tagCallEntry
{
  /* 0x0000 */ void* pNext;
  /* 0x0008 */ void* pvObject;
}; /* size: 0x0010 */

struct <vc_attributes>::atl::com_interface_entryAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef class _bstr_t::Data_t
{
  /* 0x0000 */ wchar_t* m_wstr;
  /* 0x0008 */ char* m_str;
  /* 0x0010 */ unsigned long m_RefCount;
} bstr_t::Data_t, *Pbstr_t::Data_t; /* size: 0x0018 */

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS
{
  /* 0x0000 */ void* PristineRoutine /* function */;
  /* 0x0008 */ void* NewRoutine /* function */;
} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS; /* size: 0x0010 */

class COXIDTable
{
  union
  {
    /* 0x0000 */ unsigned long _cExpired;
    /* 0x0000 */ class OXIDEntry _InUseHead;
    /* 0x0000 */ class OXIDEntry _ExpireHead;
    /* 0x0000 */ class OXIDEntry _CleanupHead;
  }; /* size: 0x00b8 */
}; /* size: 0x0001 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_599;
  /* 0x0008 */ struct _RTL_CRITICAL_SECTION* CriticalSection;
  /* 0x0010 */ struct _LIST_ENTRY ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x002e */ unsigned short SpareUSHORT;
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG; /* size: 0x0030 */

typedef struct _RTL_UNLOAD_EVENT_TRACE32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long SizeOfImage;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ wchar_t ImageName[32];
} RTL_UNLOAD_EVENT_TRACE32, *PRTL_UNLOAD_EVENT_TRACE32; /* size: 0x0054 */

struct IXMLDOMNode
{
}; /* size: 0x0008 */

struct tagSOUNDSENTRYW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ wchar_t* lpszWindowsEffectDLL;
  /* 0x0030 */ unsigned long iWindowsEffectOrdinal;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct IOleInPlaceSiteEx
{
}; /* size: 0x0008 */

typedef struct _GLOBAL_SHARED_CRITICAL_SECTION
{
  /* 0x0000 */ long LockCount;
  /* 0x0004 */ long RecursionCount;
  /* 0x0008 */ unsigned long OwningThread;
} GLOBAL_SHARED_CRITICAL_SECTION, *PGLOBAL_SHARED_CRITICAL_SECTION; /* size: 0x000c */

struct IRemUnknown2
{
}; /* size: 0x0008 */

struct tagOCPFIPARAMS
{
  /* 0x0000 */ unsigned long cbStructSize;
  /* 0x0004 */ long Padding_600;
  /* 0x0008 */ struct HWND__* hWndOwner;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ const wchar_t* lpszCaption;
  /* 0x0020 */ unsigned long cObjects;
  /* 0x0024 */ long Padding_601;
  /* 0x0028 */ struct IUnknown** lplpUnk;
  /* 0x0030 */ unsigned long cPages;
  /* 0x0034 */ long Padding_602;
  /* 0x0038 */ struct _GUID* lpPages;
  /* 0x0040 */ unsigned long lcid;
  /* 0x0044 */ long dispidInitialProperty;
}; /* size: 0x0048 */

typedef struct _wireSAFEARR_BSTR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_603;
  /* 0x0008 */ struct _FLAGGED_WORD_BLOB** aBstr;
} wireSAFEARR_BSTR, *PwireSAFEARR_BSTR; /* size: 0x0010 */

typedef struct _wireSAFEARR_UNKNOWN
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_604;
  /* 0x0008 */ struct IUnknown** apUnknown;
} wireSAFEARR_UNKNOWN, *PwireSAFEARR_UNKNOWN; /* size: 0x0010 */

typedef struct _wireSAFEARR_VARIANT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_605;
  /* 0x0008 */ struct _wireVARIANT** aVariant;
} wireSAFEARR_VARIANT, *PwireSAFEARR_VARIANT; /* size: 0x0010 */

typedef struct _wireSAFEARR_HAVEIID
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_606;
  /* 0x0008 */ struct IUnknown** apUnknown;
  /* 0x0010 */ struct _GUID iid;
} wireSAFEARR_HAVEIID, *PwireSAFEARR_HAVEIID; /* size: 0x0020 */

typedef struct _BYTE_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_607;
  /* 0x0008 */ unsigned char* pData;
} BYTE_SIZEDARR, *PBYTE_SIZEDARR; /* size: 0x0010 */

typedef struct _LONG_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_608;
  /* 0x0008 */ unsigned long* pData;
} LONG_SIZEDARR, *PLONG_SIZEDARR; /* size: 0x0010 */

typedef struct _HYPER_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_609;
  /* 0x0008 */ __int64* pData;
} HYPER_SIZEDARR, *PHYPER_SIZEDARR; /* size: 0x0010 */

typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001
{
  union
  {
    /* 0x0000 */ struct _wireSAFEARR_BSTR BstrStr;
    /* 0x0000 */ struct _wireSAFEARR_UNKNOWN UnknownStr;
    /* 0x0000 */ struct _wireSAFEARR_DISPATCH DispatchStr;
    /* 0x0000 */ struct _wireSAFEARR_VARIANT VariantStr;
    /* 0x0000 */ struct _wireSAFEARR_BRECORD RecordStr;
    /* 0x0000 */ struct _wireSAFEARR_HAVEIID HaveIidStr;
    /* 0x0000 */ struct _BYTE_SIZEDARR ByteStr;
    /* 0x0000 */ struct _SHORT_SIZEDARR WordStr;
    /* 0x0000 */ struct _LONG_SIZEDARR LongStr;
    /* 0x0000 */ struct _HYPER_SIZEDARR HyperStr;
  }; /* size: 0x0020 */
} wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001, *PwireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001; /* size: 0x0020 */

typedef struct _wireSAFEARRAY_UNION
{
  /* 0x0000 */ unsigned long sfType;
  /* 0x0004 */ long Padding_610;
  /* 0x0008 */ union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
} wireSAFEARRAY_UNION, *PwireSAFEARRAY_UNION; /* size: 0x0028 */

struct tagTRACKMOUSEEVENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTrack;
  /* 0x0010 */ unsigned long dwHoverTime;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_DATA
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long HeaderSize;
  /* 0x0008 */ unsigned long FormatVersion;
  /* 0x000c */ unsigned long TotalSize;
  /* 0x0010 */ unsigned long DefaultTocOffset;
  /* 0x0014 */ unsigned long ExtendedTocOffset;
  /* 0x0018 */ unsigned long AssemblyRosterOffset;
  /* 0x001c */ unsigned long Flags;
} ACTIVATION_CONTEXT_DATA, *PACTIVATION_CONTEXT_DATA; /* size: 0x0020 */

class COle32DebugEventFire
{
}; /* size: 0x0068 */

typedef struct _ABC
{
  /* 0x0000 */ int abcA;
  /* 0x0004 */ unsigned int abcB;
  /* 0x0008 */ int abcC;
} ABC, *PABC; /* size: 0x000c */

struct IInterceptorBase
{
}; /* size: 0x0008 */

struct IMarshallingManager
{
}; /* size: 0x0008 */

struct IProvideClassInfo2
{
}; /* size: 0x0008 */

struct <vc_attributes>::event_sourceAttribute
{
  /* 0x0000 */ enum <vc_attributes>::event_sourceAttribute::type_e type;
  /* 0x0004 */ enum <vc_attributes>::event_sourceAttribute::optimize_e optimize;
  /* 0x0008 */ BOOL decorate;
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _TOKEN_STATISTICS
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0018 */ enum _TOKEN_TYPE TokenType;
  /* 0x001c */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0020 */ unsigned long DynamicCharged;
  /* 0x0024 */ unsigned long DynamicAvailable;
  /* 0x0028 */ unsigned long GroupCount;
  /* 0x002c */ unsigned long PrivilegeCount;
  /* 0x0030 */ struct _LUID ModifiedId;
} TOKEN_STATISTICS, *PTOKEN_STATISTICS; /* size: 0x0038 */

struct tagInitializeSpyNode
{
  /* 0x0000 */ struct tagInitializeSpyNode* pNext;
  /* 0x0008 */ struct tagInitializeSpyNode* pPrev;
  /* 0x0010 */ unsigned long dwRefs;
  /* 0x0014 */ unsigned long dwCookie;
  /* 0x0018 */ struct IInitializeSpy* pInitSpy;
}; /* size: 0x0020 */

struct IDummyHICONIncluder
{
}; /* size: 0x0008 */

struct tagKnownSystemIIDs
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0008 */ unsigned long dwRpcIfFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct IAddrExclusionControl
{
}; /* size: 0x0008 */

typedef struct _KEY_VALUE_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ wchar_t Name[1];
  /* 0x000e */ char __PADDING__[2];
} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION; /* size: 0x0010 */

struct IConnectionPoint
{
}; /* size: 0x0008 */

struct tagEMRPOLYPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cptl;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct _POINTL aptl[1];
}; /* size: 0x002c */

typedef struct _THREAD_TEB_INFORMATION
{
  /* 0x0000 */ void* TebInformation;
  /* 0x0008 */ unsigned long TebOffset;
  /* 0x000c */ unsigned long BytesToRead;
} THREAD_TEB_INFORMATION, *PTHREAD_TEB_INFORMATION; /* size: 0x0010 */

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short NumberOfModuleForwarderRefs;
} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR; /* size: 0x0008 */

typedef struct _userHENHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_611;
  /* 0x0008 */ union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
} userHENHMETAFILE, *PuserHENHMETAFILE; /* size: 0x0010 */

typedef union _RPC_ASYNC_NOTIFICATION_INFO
{
  union
  {
    struct
    {
      /* 0x0000 */ void* NotificationRoutine /* function */;
      /* 0x0008 */ void* hThread;
    } /* size: 0x0010 */ APC;
    struct
    {
      /* 0x0000 */ void* hIOPort;
      /* 0x0008 */ unsigned long dwNumberOfBytesTransferred;
      /* 0x000c */ long Padding_612;
      /* 0x0010 */ unsigned __int64 dwCompletionKey;
      /* 0x0018 */ struct _OVERLAPPED* lpOverlapped;
    } /* size: 0x0020 */ IOC;
    struct
    {
      /* 0x0000 */ struct HWND__* hWnd;
      /* 0x0008 */ unsigned int Msg;
      /* 0x000c */ long __PADDING__[1];
    } /* size: 0x0010 */ HWND;
    /* 0x0000 */ void* hEvent;
    /* 0x0000 */ void* NotificationRoutine /* function */;
  }; /* size: 0x0020 */
} RPC_ASYNC_NOTIFICATION_INFO, *PRPC_ASYNC_NOTIFICATION_INFO; /* size: 0x0020 */

typedef struct _RPC_ASYNC_STATE
{
  /* 0x0000 */ unsigned int Size;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ long Lock;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ void* StubInfo;
  /* 0x0018 */ void* UserInfo;
  /* 0x0020 */ void* RuntimeInfo;
  /* 0x0028 */ enum _RPC_ASYNC_EVENT Event;
  /* 0x002c */ enum _RPC_NOTIFICATION_TYPES NotificationType;
  /* 0x0030 */ union _RPC_ASYNC_NOTIFICATION_INFO u;
  /* 0x0050 */ __int64 Reserved[4];
} RPC_ASYNC_STATE, *PRPC_ASYNC_STATE; /* size: 0x0070 */

typedef struct _BYTE_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
} BYTE_BLOB, *PBYTE_BLOB; /* size: 0x0008 */

typedef struct _RTL_DRIVE_LETTER_CURDIR32
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING32 DosPath;
} RTL_DRIVE_LETTER_CURDIR32, *PRTL_DRIVE_LETTER_CURDIR32; /* size: 0x0010 */

struct IOleInPlaceFrame
{
}; /* size: 0x0008 */

typedef union _userHBITMAP::__MIDL_IWinTypes_0007
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _userBITMAP* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHBITMAP::__MIDL_IWinTypes_0007, *PuserHBITMAP::__MIDL_IWinTypes_0007; /* size: 0x0008 */

typedef struct _userHBITMAP
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_613;
  /* 0x0008 */ union _userHBITMAP::__MIDL_IWinTypes_0007 u;
} userHBITMAP, *PuserHBITMAP; /* size: 0x0010 */

struct INTERFACE_HELPER_CLSID
{
  /* 0x0000 */ long Padding_614[12];
  /* 0x0030 */ struct _GUID m_clsid;
  /* 0x0040 */ int m_fDisableTypeLib;
  /* 0x0044 */ int m_fDisableAll;
  /* 0x0048 */ int m_fFoundHelper;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _tagpropertykey
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long pid;
} tagpropertykey, *Ptagpropertykey; /* size: 0x0014 */

class CStdIdentity
{
  /* 0x0000 */ long Padding_615[70];
  /* 0x0118 */ class CStdIdentity::CInternalUnk m_InternalUnk;
  /* 0x0128 */ unsigned long m_refs;
  /* 0x012c */ unsigned long m_flags;
  /* 0x0130 */ struct IUnknown* m_pUnkOuter;
  /* 0x0138 */ struct IUnknown* m_pUnkControl;
  /* 0x0140 */ void* m_pVtableAddress;
  /* 0x0148 */ struct IExternalConnection* m_pIEC;
  /* 0x0150 */ struct _GUID m_moid;
  /* 0x0160 */ unsigned long m_dwAptId;
  /* 0x0164 */ long m_cStrongRefs;
  /* 0x0168 */ long m_cWeakRefs;
  /* 0x016c */ HRESULT m_ConnStatus;
  /* 0x0170 */ void* m_pVoid;
}; /* size: 0x0178 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING SymbolicLinkName;
  /* 0x0010 */ struct _GUID* AliasClassGuid;
  /* 0x0018 */ wchar_t* AliasSymbolicLinkName;
  /* 0x0020 */ unsigned long AliasSymbolicLinkNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA, *PPLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA; /* size: 0x0028 */

typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _DWORD_BLOB* hRemote;
  }; /* size: 0x0008 */
} GDI_NONREMOTE::__MIDL_IWinTypes_0002, *PGDI_NONREMOTE::__MIDL_IWinTypes_0002; /* size: 0x0008 */

typedef struct _GDI_NONREMOTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_616;
  /* 0x0008 */ union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
} GDI_NONREMOTE, *PGDI_NONREMOTE; /* size: 0x0010 */

class CContextLife
{
  /* 0x0000 */ unsigned long _dwAlive;
  /* 0x0004 */ long _cRefs;
}; /* size: 0x0008 */

struct tagPALETTEENTRY
{
  /* 0x0000 */ unsigned char peRed;
  /* 0x0001 */ unsigned char peGreen;
  /* 0x0002 */ unsigned char peBlue;
  /* 0x0003 */ unsigned char peFlags;
}; /* size: 0x0004 */

struct tagLOGPALETTE
{
  /* 0x0000 */ unsigned short palVersion;
  /* 0x0002 */ unsigned short palNumEntries;
  /* 0x0004 */ struct tagPALETTEENTRY palPalEntry[1];
}; /* size: 0x0008 */

typedef struct _ENCRYPTION_BUFFER
{
  /* 0x0000 */ unsigned long EncryptionOperation;
  /* 0x0004 */ unsigned char Private[1];
  /* 0x0005 */ char __PADDING__[3];
} ENCRYPTION_BUFFER, *PENCRYPTION_BUFFER; /* size: 0x0008 */

struct tagRAWKEYBOARD
{
  /* 0x0000 */ unsigned short MakeCode;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ unsigned short VKey;
  /* 0x0008 */ unsigned int Message;
  /* 0x000c */ unsigned long ExtraInformation;
}; /* size: 0x0010 */

class CHandle
{
  /* 0x0000 */ class CBasedMStreamPtr _pms;
  /* 0x0008 */ unsigned long _sid;
}; /* size: 0x0010 */

class CCtxConnectionManager
{
  /* 0x0000 */ class CpUnkList* _pUnkList;
  /* 0x0008 */ class CObjServer* _pobjServer;
  /* 0x0010 */ volatile int _cObjRefs;
  /* 0x0014 */ BOOL _disconnecting;
  /* 0x0015 */ char Padding_617[3];
  /* 0x0018 */ void* _hdisconnectEvent;
  /* 0x0020 */ class CMutexSem2 _mutex;
  /* 0x0050 */ unsigned long _cRefs;
}; /* size: 0x0058 */

typedef struct _FILE_STANDARD_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFO, *PFILE_STANDARD_INFO; /* size: 0x0018 */

struct CStdMarshal::DisconnectCliIPIDs::__l6::_IPIDReleaseSet;

struct tagRAWINPUTHEADER
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSize;
  /* 0x0008 */ void* hDevice;
  /* 0x0010 */ unsigned __int64 wParam;
}; /* size: 0x0018 */

struct tagRAWINPUT
{
  /* 0x0000 */ struct tagRAWINPUTHEADER header;
  union
  {
    union
    {
      /* 0x0018 */ struct tagRAWMOUSE mouse;
      /* 0x0018 */ struct tagRAWKEYBOARD keyboard;
      /* 0x0018 */ struct tagRAWHID hid;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ data;
}; /* size: 0x0030 */

struct tagContextProperty
{
  /* 0x0000 */ struct _GUID policyId;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ long Padding_618;
  /* 0x0018 */ struct IUnknown* pUnk;
}; /* size: 0x0020 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP
{
  /* 0x0000 */ unsigned long Mask;
  /* 0x0004 */ unsigned long Shift;
  /* 0x0008 */ unsigned __int64 Count;
  /* 0x0010 */ const struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY* Entries;
}; /* size: 0x0018 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_AND_FLAG_MAP
{
  /* 0x0000 */ struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP EnumMap;
  /* 0x0018 */ struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP FlagMap;
}; /* size: 0x0028 */

typedef struct _VIDEOPARAMETERS
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long dwOffset;
  /* 0x0014 */ unsigned long dwCommand;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwMode;
  /* 0x0020 */ unsigned long dwTVStandard;
  /* 0x0024 */ unsigned long dwAvailableModes;
  /* 0x0028 */ unsigned long dwAvailableTVStandard;
  /* 0x002c */ unsigned long dwFlickerFilter;
  /* 0x0030 */ unsigned long dwOverScanX;
  /* 0x0034 */ unsigned long dwOverScanY;
  /* 0x0038 */ unsigned long dwMaxUnscaledX;
  /* 0x003c */ unsigned long dwMaxUnscaledY;
  /* 0x0040 */ unsigned long dwPositionX;
  /* 0x0044 */ unsigned long dwPositionY;
  /* 0x0048 */ unsigned long dwBrightness;
  /* 0x004c */ unsigned long dwContrast;
  /* 0x0050 */ unsigned long dwCPType;
  /* 0x0054 */ unsigned long dwCPCommand;
  /* 0x0058 */ unsigned long dwCPStandard;
  /* 0x005c */ unsigned long dwCPKey;
  /* 0x0060 */ unsigned long bCP_APSTriggerBits;
  /* 0x0064 */ unsigned char bOEMCopyProtection[256];
} VIDEOPARAMETERS, *PVIDEOPARAMETERS; /* size: 0x0164 */

struct <vc_attributes>::progidAttribute
{
  /* 0x0000 */ const char* name;
}; /* size: 0x0008 */

typedef struct _RTL_TRACE_BLOCK
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long Padding_619;
  /* 0x0010 */ unsigned __int64 UserCount;
  /* 0x0018 */ unsigned __int64 UserSize;
  /* 0x0020 */ void* UserContext;
  /* 0x0028 */ struct _RTL_TRACE_BLOCK* Next;
  /* 0x0030 */ void** Trace;
} RTL_TRACE_BLOCK, *PRTL_TRACE_BLOCK; /* size: 0x0038 */

struct IComProcessInfo
{
}; /* size: 0x0008 */

class CNameHashTable
{
}; /* size: 0x0028 */

struct tagBITMAPCOREHEADER
{
  /* 0x0000 */ unsigned long bcSize;
  /* 0x0004 */ unsigned short bcWidth;
  /* 0x0006 */ unsigned short bcHeight;
  /* 0x0008 */ unsigned short bcPlanes;
  /* 0x000a */ unsigned short bcBitCount;
}; /* size: 0x000c */

struct tagBITMAPCOREINFO
{
  /* 0x0000 */ struct tagBITMAPCOREHEADER bmciHeader;
  /* 0x000c */ struct tagRGBTRIPLE bmciColors[1];
  /* 0x000f */ char __PADDING__[1];
}; /* size: 0x0010 */

struct IUserToken
{
}; /* size: 0x0008 */

struct AsyncIRemUnknown2
{
}; /* size: 0x0008 */

struct tagPIXELFORMATDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerType;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long dwLayerMask;
  /* 0x0020 */ unsigned long dwVisibleMask;
  /* 0x0024 */ unsigned long dwDamageMask;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>
{
  /* 0x0000 */ long Padding_620[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

struct tagEMRFILLPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
}; /* size: 0x0018 */

struct IPolicySet
{
}; /* size: 0x0008 */

typedef struct _FLOAT128
{
  /* 0x0000 */ __int64 LowPart;
  /* 0x0008 */ __int64 HighPart;
} FLOAT128, *PFLOAT128; /* size: 0x0010 */

class CAsyncCall
{
  /* 0x0000 */ long Padding_621[78];
  /* 0x0138 */ unsigned long _iRefCount;
  /* 0x013c */ unsigned long _lFlags;
  /* 0x0140 */ class CChannelObject* _pChnlObj;
  /* 0x0148 */ void* _pRequestBuffer;
  /* 0x0150 */ unsigned long _lApt;
  /* 0x0154 */ long Padding_622;
  /* 0x0158 */ struct _RPC_ASYNC_STATE _AsyncState;
  /* 0x01c8 */ struct HWND__* _hwndSTA;
  /* 0x01d0 */ class CAsyncCall* _pNext;
  /* 0x01d8 */ enum ESignalState _eSignalState;
  union
  {
    /* 0x0000 */ class CAsyncCall* _aList[8];
    /* 0x0000 */ unsigned long _iNext;
  }; /* size: 0x0040 */
}; /* size: 0x01e0 */

struct tagMETAHEADER
{
  /* 0x0000 */ unsigned short mtType;
  /* 0x0002 */ unsigned short mtHeaderSize;
  /* 0x0004 */ unsigned short mtVersion;
  /* 0x0006 */ unsigned long mtSize;
  /* 0x000a */ unsigned short mtNoObjects;
  /* 0x000c */ unsigned long mtMaxRecord;
  /* 0x0010 */ unsigned short mtNoParameters;
}; /* size: 0x0012 */

struct tagEMRFILLRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ unsigned char RgnData[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

typedef struct _SERVICE_FAILURE_ACTIONSA
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ long Padding_623;
  /* 0x0008 */ char* lpRebootMsg;
  /* 0x0010 */ char* lpCommand;
  /* 0x0018 */ unsigned long cActions;
  /* 0x001c */ long Padding_624;
  /* 0x0020 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSA, *PSERVICE_FAILURE_ACTIONSA; /* size: 0x0028 */

struct tagAUDIODESCRIPTION
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int Enabled;
  /* 0x0008 */ unsigned long Locale;
}; /* size: 0x000c */

struct IReplaceClassInfo
{
}; /* size: 0x0008 */

typedef struct _SCMREGKEY
{
  /* 0x0000 */ unsigned __int64 dwEntryLoc;
  /* 0x0008 */ unsigned long dwHash;
  /* 0x000c */ unsigned long dwScmId;
} SCMREGKEY, *PSCMREGKEY; /* size: 0x0010 */

class CROTItem
{
  /* 0x0000 */ unsigned short _wItemSig;
  /* 0x0002 */ char Padding_625[2];
  /* 0x0004 */ int _fDontCallApp;
  /* 0x0008 */ struct _SCMREGKEY _scmregkey;
  /* 0x0018 */ unsigned long _hApt;
  /* 0x001c */ long Padding_626;
  /* 0x0020 */ void* _pvStubRegistration;
}; /* size: 0x0028 */

typedef struct _PS_MEMORY_RESERVE
{
  /* 0x0000 */ void* ReserveAddress;
  /* 0x0008 */ unsigned __int64 ReserveSize;
} PS_MEMORY_RESERVE, *PPS_MEMORY_RESERVE; /* size: 0x0010 */

class Windows::Auto<Windows::Rtl::IRtlObject *>
{
}; /* size: 0x0008 */

typedef struct _SCONTEXT_QUEUE
{
  /* 0x0000 */ unsigned long NumberOfObjects;
  /* 0x0004 */ long Padding_627;
  /* 0x0008 */ struct
  {
    /* 0x0008 */ void* pad[2];
    /* 0x0018 */ void* userContext;
  } /* size: 0x0018 */** ArrayOfObjects;
} SCONTEXT_QUEUE, *PSCONTEXT_QUEUE; /* size: 0x0010 */

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_628[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_629;
  /* 0x0030 */ struct MD_INTERFACE* m_r;
}; /* size: 0x0038 */

class CSafeMoniker
{
  /* 0x0000 */ struct IMoniker* _p;
}; /* size: 0x0008 */

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned char Enable;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_SET_TIME_ADJUST_INFORMATION, *PSYSTEM_SET_TIME_ADJUST_INFORMATION; /* size: 0x0008 */

struct HKL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IMAGE_COR20_HEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned short MajorRuntimeVersion;
  /* 0x0006 */ unsigned short MinorRuntimeVersion;
  /* 0x0008 */ struct _IMAGE_DATA_DIRECTORY MetaData;
  /* 0x0010 */ unsigned long Flags;
  union
  {
    /* 0x0014 */ unsigned long EntryPointToken;
    /* 0x0014 */ unsigned long EntryPointRVA;
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _IMAGE_DATA_DIRECTORY Resources;
  /* 0x0020 */ struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
  /* 0x0028 */ struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
  /* 0x0030 */ struct _IMAGE_DATA_DIRECTORY VTableFixups;
  /* 0x0038 */ struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  /* 0x0040 */ struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
}; /* size: 0x0048 */

struct <vc_attributes>::atl::soap_namespaceAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

class CMonikerPtrBuf
{
}; /* size: 0x0020 */

typedef struct _SERVICE_NOTIFY_2A
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_630;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0040 */ unsigned long dwNotificationTriggered;
  /* 0x0044 */ long Padding_631;
  /* 0x0048 */ char* pszServiceNames;
} SERVICE_NOTIFY_2A, *PSERVICE_NOTIFY_2A; /* size: 0x0050 */

struct IOleControlSite
{
}; /* size: 0x0008 */

struct MAP_HASHER<MAP_KEY_GUID>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_PRIVATE_KEY_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_632;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0030 */ struct _CRYPT_ATTRIBUTES* pAttributes;
} CRYPT_PRIVATE_KEY_INFO, *PCRYPT_PRIVATE_KEY_INFO; /* size: 0x0038 */

class CBasedPerContextPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CClientCall
{
  /* 0x0000 */ long Padding_633[78];
  /* 0x0138 */ unsigned long m_cRefs;
  /* 0x013c */ unsigned long m_dwFlags;
  /* 0x0140 */ void* m_hThread;
  /* 0x0148 */ unsigned long m_dwThreadId;
  union
  {
    /* 0x0000 */ void* _aList[8];
    /* 0x0000 */ unsigned long _iNext;
  }; /* size: 0x0040 */
}; /* size: 0x0150 */

struct IAdviseSink2
{
}; /* size: 0x0008 */

struct HIMCC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CMREInnerUnknown
{
  /* 0x0000 */ long Padding_634[2];
  /* 0x0008 */ unsigned long _iRefCount;
  /* 0x000c */ long Padding_635;
  /* 0x0010 */ class CManualResetEvent* _pParent;
}; /* size: 0x0018 */

class CManualResetEvent
{
  /* 0x0000 */ long Padding_636[4];
  /* 0x0010 */ class CMREInnerUnknown _cInner;
  /* 0x0028 */ struct IUnknown* _pControl;
  /* 0x0030 */ class CStdEvent* m_cStdEvent;
}; /* size: 0x0038 */

typedef struct _PROCESS_WS_WATCH_INFORMATION
{
  /* 0x0000 */ void* FaultingPc;
  /* 0x0008 */ void* FaultingVa;
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER
{
  /* 0x0000 */ void* EventHandle;
  /* 0x0008 */ unsigned long KeyValue;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_ASSIGN_EVENT_BUFFER, *PFILE_PIPE_ASSIGN_EVENT_BUFFER; /* size: 0x0010 */

typedef struct _MEMORY_BASIC_INFORMATION32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionSize;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Protect;
  /* 0x0018 */ unsigned long Type;
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32; /* size: 0x001c */

typedef struct _BOOT_OPTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Timeout;
  /* 0x000c */ unsigned long CurrentBootEntryId;
  /* 0x0010 */ unsigned long NextBootEntryId;
  /* 0x0014 */ wchar_t HeadlessRedirection[1];
  /* 0x0016 */ char __PADDING__[2];
} BOOT_OPTIONS, *PBOOT_OPTIONS; /* size: 0x0018 */

struct IXMLDOMProcessingInstruction
{
}; /* size: 0x0008 */

struct _PROC_THREAD_ATTRIBUTE_LIST;

struct ISCMProcessControl
{
}; /* size: 0x0008 */

typedef struct __midl_frag249_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag249_t, *P_midl_frag249_t; /* size: 0x0040 */

typedef struct _OFSTRUCT
{
  /* 0x0000 */ unsigned char cBytes;
  /* 0x0001 */ unsigned char fFixedDisk;
  /* 0x0002 */ unsigned short nErrCode;
  /* 0x0004 */ unsigned short Reserved1;
  /* 0x0006 */ unsigned short Reserved2;
  /* 0x0008 */ char szPathName[128];
} OFSTRUCT, *POFSTRUCT; /* size: 0x0088 */

class CSrvCallState
{
  /* 0x0000 */ unsigned long _dwCallCatIn;
  /* 0x0004 */ long Padding_637;
  /* 0x0008 */ class CSrvCallState* _pPrev;
}; /* size: 0x0010 */

struct IInternalUnknown
{
}; /* size: 0x0008 */

typedef struct _IMAGE_IMPORT_DESCRIPTOR
{
  union
  {
    /* 0x0000 */ unsigned long Characteristics;
    /* 0x0000 */ unsigned long OriginalFirstThunk;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long ForwarderChain;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long FirstThunk;
} IMAGE_IMPORT_DESCRIPTOR, *PIMAGE_IMPORT_DESCRIPTOR; /* size: 0x0014 */

class CCliModalLoop
{
  /* 0x0000 */ HRESULT _hr;
  /* 0x0004 */ long Padding_638;
  /* 0x0008 */ class CCliModalLoop* _pPrev;
  /* 0x0010 */ unsigned long _dwTIDCallee;
  /* 0x0014 */ unsigned long _dwMsgQInputFlag;
  /* 0x0018 */ struct _GUID _lid;
  /* 0x0028 */ unsigned long _dwFlags;
  /* 0x002c */ unsigned long _dwWaitFlags;
  /* 0x0030 */ unsigned int _wQuitCode;
  /* 0x0034 */ unsigned long _dwTimeOfCall;
  /* 0x0038 */ unsigned long _dwWakeup;
  /* 0x003c */ unsigned long _dwMillSecToWait;
  /* 0x0040 */ unsigned long _dwCancelTimeout;
  /* 0x0044 */ int _fUseOldModalLoop;
  /* 0x0048 */ class CAptCallCtrl* _pACC;
  /* 0x0050 */ void* _hToken;
  /* 0x0058 */ int _fCoWaitCalled;
}; /* size: 0x0060 */

struct USERPREFS
{
  /* 0x0000 */ char signature[6];
  /* 0x0006 */ unsigned short version;
  /* 0x0008 */ unsigned short size;
  /* 0x000a */ char Padding_639[6];
  /* 0x0010 */ char* sourceFilename;
  /* 0x0018 */ void* sourceHandle;
  /* 0x0020 */ char* destinationFilename;
  /* 0x0028 */ unsigned char penPatternAction;
  /* 0x0029 */ unsigned char nonSquarePenAction;
  /* 0x002a */ unsigned char penModeAction;
  /* 0x002b */ unsigned char textModeAction;
  /* 0x002c */ unsigned char nonRectRegionAction;
  /* 0x002d */ char Padding_640[3];
  /* 0x0030 */ int optimizePP;
  /* 0x0034 */ unsigned short reserved[6];
}; /* size: 0x0040 */

struct IXMLDOMImplementation
{
}; /* size: 0x0008 */

typedef struct _FILE_EA_INFORMATION
{
  /* 0x0000 */ unsigned long EaSize;
} FILE_EA_INFORMATION, *PFILE_EA_INFORMATION; /* size: 0x0004 */

struct IROTData
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PAGEFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long TotalSize;
  /* 0x0008 */ unsigned long TotalInUse;
  /* 0x000c */ unsigned long PeakUsage;
  /* 0x0010 */ struct _UNICODE_STRING PageFileName;
} SYSTEM_PAGEFILE_INFORMATION, *PSYSTEM_PAGEFILE_INFORMATION; /* size: 0x0020 */

struct IFastStack<CallFrame>
{
}; /* size: 0x0008 */

struct ISoftDistExt
{
}; /* size: 0x0008 */

struct tagCSPLATFORM
{
  /* 0x0000 */ unsigned long dwPlatformId;
  /* 0x0004 */ unsigned long dwVersionHi;
  /* 0x0008 */ unsigned long dwVersionLo;
  /* 0x000c */ unsigned long dwProcessorArch;
}; /* size: 0x0010 */

struct tagQUERYCONTEXT
{
  /* 0x0000 */ unsigned long dwContext;
  /* 0x0004 */ struct tagCSPLATFORM Platform;
  /* 0x0014 */ unsigned long Locale;
  /* 0x0018 */ unsigned long dwVersionHi;
  /* 0x001c */ unsigned long dwVersionLo;
}; /* size: 0x0020 */

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION
{
  /* 0x0000 */ unsigned char Inherit;
  /* 0x0001 */ unsigned char ProtectFromClose;
} OBJECT_HANDLE_FLAG_INFORMATION, *POBJECT_HANDLE_FLAG_INFORMATION; /* size: 0x0002 */

typedef struct _Wx86ThreadState
{
  /* 0x0000 */ unsigned long* CallBx86Eip;
  /* 0x0008 */ void* DeallocationCpu;
  /* 0x0010 */ unsigned char UseKnownWx86Dll;
  /* 0x0011 */ char OleStubInvoked;
  /* 0x0012 */ char __PADDING__[6];
} Wx86ThreadState, *PWx86ThreadState; /* size: 0x0018 */

class COleCache::CCacheDataImpl
{
}; /* size: 0x0008 */

typedef struct _WORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned short asData[1];
  /* 0x0006 */ char __PADDING__[2];
} WORD_BLOB, *PWORD_BLOB; /* size: 0x0008 */

struct DISPATCH_FRAME
{
}; /* size: 0x0058 */

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION
{
  /* 0x0000 */ unsigned long ActionTaken;
  /* 0x0004 */ long Padding_641;
  /* 0x0008 */ unsigned __int64 CrashData[5];
  /* 0x0030 */ unsigned long VerifierMode;
  /* 0x0034 */ unsigned long VerifierFlags;
  /* 0x0038 */ wchar_t VerifierTargets[256];
} SYSTEM_VERIFIER_TRIAGE_INFORMATION, *PSYSTEM_VERIFIER_TRIAGE_INFORMATION; /* size: 0x0238 */

struct tagXCtxMarshalData
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ struct _GUID iid;
  /* 0x0014 */ struct _GUID moxid;
  /* 0x0024 */ long Padding_642;
  /* 0x0028 */ class CStdWrapper* pWrapper;
  /* 0x0030 */ class IFaceEntry* pEntry;
  /* 0x0038 */ struct IUnknown* pServer;
  /* 0x0040 */ class CObjectContext* pServerCtx;
  /* 0x0048 */ unsigned long dwMarshalFlags;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _JOURNAL_RENAME_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_643;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING KeyKeyName;
} JOURNAL_RENAME_KEY_INFORMATION, *PJOURNAL_RENAME_KEY_INFORMATION; /* size: 0x0038 */

struct tagEMRSETVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagSIZE szlExtent;
}; /* size: 0x0010 */

struct tagCOMBOBOXINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcItem;
  /* 0x0014 */ struct tagRECT rcButton;
  /* 0x0024 */ unsigned long stateButton;
  /* 0x0028 */ struct HWND__* hwndCombo;
  /* 0x0030 */ struct HWND__* hwndItem;
  /* 0x0038 */ struct HWND__* hwndList;
}; /* size: 0x0040 */

typedef struct _SPC_SP_AGENCY_INFO
{
  /* 0x0000 */ struct SPC_LINK_* pPolicyInformation;
  /* 0x0008 */ wchar_t* pwszPolicyDisplayText;
  /* 0x0010 */ struct _SPC_IMAGE* pLogoImage;
  /* 0x0018 */ struct SPC_LINK_* pLogoLink;
} SPC_SP_AGENCY_INFO, *PSPC_SP_AGENCY_INFO; /* size: 0x0020 */

struct IPropertyNotifySink
{
}; /* size: 0x0008 */

struct tagSOUNDSENTRYA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ char* lpszWindowsEffectDLL;
  /* 0x0030 */ unsigned long iWindowsEffectOrdinal;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_644;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_A; /* size: 0x0028 */

struct ITypeInfo2
{
}; /* size: 0x0008 */

typedef struct __midl_frag1402_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1402_t, *P_midl_frag1402_t; /* size: 0x0068 */

typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long NumberOfDups;
  /* 0x0008 */ struct _IMAGEHLP_SYMBOL64* Symbol;
  /* 0x0010 */ unsigned long SelectedSymbol;
  /* 0x0014 */ long __PADDING__[1];
} IMAGEHLP_DUPLICATE_SYMBOL64, *PIMAGEHLP_DUPLICATE_SYMBOL64; /* size: 0x0018 */

typedef struct __midl_frag1515_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1515_t, *P_midl_frag1515_t; /* size: 0x0038 */

typedef struct _SEC_WINNT_AUTH_IDENTITY_A
{
  /* 0x0000 */ unsigned char* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_645;
  /* 0x0010 */ unsigned char* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_646;
  /* 0x0020 */ unsigned char* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_A, *PSEC_WINNT_AUTH_IDENTITY_A; /* size: 0x0030 */

typedef struct _MINIDUMP_HANDLE_OPERATION_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_OPERATION_LIST, *PMINIDUMP_HANDLE_OPERATION_LIST; /* size: 0x0010 */

class CBasedFreeBlockPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CFreeList
{
  /* 0x0000 */ class CBasedFreeBlockPtr _pfbHead;
}; /* size: 0x0008 */

typedef struct _RPC_SECURITY_QOS_V2_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_647;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
} RPC_SECURITY_QOS_V2_A, *PRPC_SECURITY_QOS_V2_A; /* size: 0x0020 */

struct IEnumSTATSTG
{
}; /* size: 0x0008 */

typedef struct __midl_frag147_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag147_t, *P_midl_frag147_t; /* size: 0x0038 */

typedef struct _IMAGEHLP_MODULE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_648;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ char ModuleName[32];
  /* 0x0044 */ char ImageName[256];
  /* 0x0144 */ char LoadedImageName[256];
  /* 0x0244 */ char LoadedPdbName[256];
  /* 0x0344 */ unsigned long CVSig;
  /* 0x0348 */ char CVData[780];
  /* 0x0654 */ unsigned long PdbSig;
  /* 0x0658 */ struct _GUID PdbSig70;
  /* 0x0668 */ unsigned long PdbAge;
  /* 0x066c */ int PdbUnmatched;
  /* 0x0670 */ int DbgUnmatched;
  /* 0x0674 */ int LineNumbers;
  /* 0x0678 */ int GlobalSymbols;
  /* 0x067c */ int TypeInfo;
  /* 0x0680 */ int SourceIndexed;
  /* 0x0684 */ int Publics;
} IMAGEHLP_MODULE64, *PIMAGEHLP_MODULE64; /* size: 0x0688 */

typedef struct _TAPE_PREPARE
{
  /* 0x0000 */ unsigned long Operation;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_PREPARE, *PTAPE_PREPARE; /* size: 0x0008 */

typedef struct __midl_frag1704_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1704_t, *P_midl_frag1704_t; /* size: 0x0020 */

typedef struct _s__RTTIBaseClassArray
{
  union
  {
    /* 0x0000 */ const struct _s__RTTIBaseClassDescriptor2** arrayOfBaseClassDescriptors /* zero-length array */;
    /* 0x0000 */ long __PADDING__[1];
  }; /* size: 0x0004 */
} s__RTTIBaseClassArray, *Ps__RTTIBaseClassArray; /* size: 0x0004 */

typedef struct _s__RTTIBaseClassDescriptor2
{
  /* 0x0000 */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0008 */ unsigned long numContainedBases;
  /* 0x000c */ struct _PMD where;
  /* 0x0018 */ unsigned long attributes;
  /* 0x001c */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
} s__RTTIBaseClassDescriptor2, *Ps__RTTIBaseClassDescriptor2; /* size: 0x0024 */

typedef struct _TI_FINDCHILDREN_PARAMS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Start;
  /* 0x0008 */ unsigned long ChildId[1];
} TI_FINDCHILDREN_PARAMS, *PTI_FINDCHILDREN_PARAMS; /* size: 0x000c */

typedef struct _RPC_SECURITY_QOS_V4_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_649;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long __PADDING__[1];
} RPC_SECURITY_QOS_V4_A, *PRPC_SECURITY_QOS_V4_A; /* size: 0x0030 */

typedef struct _BCRYPT_ECCKEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_ECCKEY_BLOB, *PBCRYPT_ECCKEY_BLOB; /* size: 0x0008 */

typedef struct _s__RTTICompleteObjectLocator
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long offset;
  /* 0x0008 */ unsigned long cdOffset;
  /* 0x000c */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0014 */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
} s__RTTICompleteObjectLocator, *Ps__RTTICompleteObjectLocator; /* size: 0x001c */

struct INTERPRETER_OPT_FLAGS2
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasNewCorrDesc : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientCorrCheck : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ServerCorrCheck : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasNotify : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasNotify2 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasComplexReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasConformanceRange : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasBigByValueParam : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct NDR_PROC_HEADER_EXTS64
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
  /* 0x0008 */ unsigned short FloatArgMask;
}; /* size: 0x000a */

struct FRAME_Invoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ struct _GUID* piid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned short wFlags;
  /* 0x0022 */ char __pad4[4];
  /* 0x0026 */ char Padding_650[2];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* puArgErr;
}; /* size: 0x0048 */

struct DISPATCH_SERVER_FRAME
{
  /* 0x0000 */ long Padding_651[24];
  /* 0x0060 */ struct FRAME_Invoke m_memoryFrame;
  /* 0x00a8 */ int m_fDoneStubPrecheck;
  /* 0x00ac */ int m_fDoneStubPostcheck;
}; /* size: 0x00b0 */

typedef struct _SRCCODEINFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_652;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned __int64 ModBase;
  /* 0x0018 */ char Obj[261];
  /* 0x011d */ char FileName[261];
  /* 0x0222 */ char Padding_653[2];
  /* 0x0224 */ unsigned long LineNumber;
  /* 0x0228 */ unsigned __int64 Address;
} SRCCODEINFO, *PSRCCODEINFO; /* size: 0x0230 */

struct tagCTXCOMMONHDR
{
  /* 0x0000 */ struct _GUID ContextId;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ unsigned long dwNumExtents;
  /* 0x001c */ unsigned long cbExtents;
  /* 0x0020 */ unsigned long MshlFlags;
}; /* size: 0x0024 */

struct tagBYREFHDR
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long ProcessId;
}; /* size: 0x0008 */

struct tagCONTEXTHEADER
{
  /* 0x0000 */ struct tagCTXVERSION Version;
  /* 0x0004 */ struct tagCTXCOMMONHDR CmnHdr;
  union
  {
    /* 0x0028 */ struct tagBYVALHDR ByValHdr;
    /* 0x0028 */ struct tagBYREFHDR ByRefHdr;
  }; /* size: 0x0008 */
}; /* size: 0x0030 */

typedef struct _CERT_CHAIN_ELEMENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_654;
  /* 0x0008 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0010 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x0018 */ struct _CERT_REVOCATION_INFO* pRevocationInfo;
  /* 0x0020 */ struct _CTL_USAGE* pIssuanceUsage;
  /* 0x0028 */ struct _CTL_USAGE* pApplicationUsage;
  /* 0x0030 */ const wchar_t* pwszExtendedErrorInfo;
} CERT_CHAIN_ELEMENT, *PCERT_CHAIN_ELEMENT; /* size: 0x0038 */

struct tagINTERFACEDATA
{
  /* 0x0000 */ struct tagMETHODDATA* pmethdata;
  /* 0x0008 */ unsigned int cMembers;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_655;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0028 */ struct _STRING* Prefix;
} PREFIX_TABLE_ENTRY, *PPREFIX_TABLE_ENTRY; /* size: 0x0030 */

typedef struct _ICONINFO
{
  /* 0x0000 */ int fIcon;
  /* 0x0004 */ unsigned long xHotspot;
  /* 0x0008 */ unsigned long yHotspot;
  /* 0x000c */ long Padding_656;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
} ICONINFO, *PICONINFO; /* size: 0x0020 */

typedef union _IMAGE_AUX_SYMBOL
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long TagIndex;
      union
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Linenumber;
            /* 0x0006 */ unsigned short Size;
          } /* size: 0x0004 */ LnSz;
          /* 0x0004 */ unsigned long TotalSize;
        }; /* size: 0x0004 */
      } /* size: 0x0004 */ Misc;
      union
      {
        union
        {
          struct
          {
            /* 0x0008 */ unsigned long PointerToLinenumber;
            /* 0x000c */ unsigned long PointerToNextFunction;
          } /* size: 0x0008 */ Function;
          struct
          {
            /* 0x0008 */ unsigned short Dimension[4];
          } /* size: 0x0008 */ Array;
        }; /* size: 0x0008 */
      } /* size: 0x0008 */ FcnAry;
      /* 0x0010 */ unsigned short TvIndex;
    } /* size: 0x0012 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[18];
    } /* size: 0x0012 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ char __PADDING__[1];
    } /* size: 0x0010 */ Section;
  }; /* size: 0x0012 */
} IMAGE_AUX_SYMBOL, *PIMAGE_AUX_SYMBOL; /* size: 0x0012 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
  /* 0x0000 */ long Padding_657[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

typedef struct _FILE_PIPE_LOCAL_INFORMATION
{
  /* 0x0000 */ unsigned long NamedPipeType;
  /* 0x0004 */ unsigned long NamedPipeConfiguration;
  /* 0x0008 */ unsigned long MaximumInstances;
  /* 0x000c */ unsigned long CurrentInstances;
  /* 0x0010 */ unsigned long InboundQuota;
  /* 0x0014 */ unsigned long ReadDataAvailable;
  /* 0x0018 */ unsigned long OutboundQuota;
  /* 0x001c */ unsigned long WriteQuotaAvailable;
  /* 0x0020 */ unsigned long NamedPipeState;
  /* 0x0024 */ unsigned long NamedPipeEnd;
} FILE_PIPE_LOCAL_INFORMATION, *PFILE_PIPE_LOCAL_INFORMATION; /* size: 0x0028 */

class CMapDwordDword
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

typedef struct _MUILANGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ unsigned char bUseUseMachineConfigList;
  /* 0x0009 */ char Padding_658[7];
  /* 0x0010 */ struct _MUIREGISTRYINFO* RegInfo;
  /* 0x0018 */ struct _MUILANGLISTNODE* Languages;
  /* 0x0020 */ unsigned __int64 ullMask;
  /* 0x0028 */ unsigned int uConsoleFlag;
  /* 0x002c */ long __PADDING__[1];
} MUILANGLIST, *PMUILANGLIST; /* size: 0x0030 */

typedef struct _MUIREGISTRYINFO
{
  /* 0x0000 */ unsigned int Owned;
  /* 0x0004 */ unsigned short InstallLanguageFallback[4];
  /* 0x000c */ unsigned long Generation;
  /* 0x0010 */ struct _MUILANGUAGES* Installed;
  /* 0x0018 */ struct _MUISTRINGPOOL* Strings;
  /* 0x0020 */ struct _MUILANGCFGLIST* MachineConfig;
  /* 0x0028 */ struct _MUILANGCFGLIST* UserConfig;
  /* 0x0030 */ struct _MUILANGLIST* MachinePreferred;
  /* 0x0038 */ struct _MUILANGLIST* UserPreferred;
  /* 0x0040 */ struct _MUILANGLIST* MergedUser;
  /* 0x0048 */ struct _MUILANGLIST* MergedMachine;
  /* 0x0050 */ struct _MUILANGLIST* MergedFallback;
  /* 0x0058 */ unsigned long MUI_Locked;
  /* 0x005c */ unsigned long MUI_SE;
  /* 0x0060 */ unsigned long MUI_NumberAllowed;
  /* 0x0064 */ long Padding_659;
  /* 0x0068 */ wchar_t* MUI_AllowedLanguage;
  /* 0x0070 */ wchar_t* MUI_InstalledSKU;
  /* 0x0078 */ unsigned long cbInstalledSKU;
  /* 0x007c */ unsigned long cbAllowedLanguage;
  /* 0x0080 */ wchar_t* MUI_DisallowedLanguage;
  /* 0x0088 */ unsigned long cbDisallowedLanguage;
  /* 0x008c */ long __PADDING__[1];
} MUIREGISTRYINFO, *PMUIREGISTRYINFO; /* size: 0x0090 */

class CBaseStorageVariant
{
}; /* size: 0x0018 */

typedef struct _MUISTRINGPOOL
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumStrings;
  /* 0x0006 */ unsigned short NumStrings;
  /* 0x0008 */ unsigned short MaxNumCharsInPool;
  /* 0x000a */ unsigned short NumCharsInPool;
  /* 0x000c */ long Padding_660;
  /* 0x0010 */ short* Strings;
  /* 0x0018 */ wchar_t* Pool;
} MUISTRINGPOOL, *PMUISTRINGPOOL; /* size: 0x0020 */

typedef struct _WIN32_FIND_DATAA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ char cFileName[260];
  /* 0x0130 */ char cAlternateFileName[14];
  /* 0x013e */ char __PADDING__[2];
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA; /* size: 0x0140 */

struct IObjectWithSite
{
}; /* size: 0x0008 */

typedef struct _MUILANGCFGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ struct _MUILANGCFGNODE* LanguageConfigs;
} MUILANGCFGLIST, *PMUILANGCFGLIST; /* size: 0x0010 */

struct IComDispatchInfo
{
}; /* size: 0x0008 */

typedef struct _SHFILEOPSTRUCTA
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int wFunc;
  /* 0x000c */ long Padding_661;
  /* 0x0010 */ const char* pFrom;
  /* 0x0018 */ const char* pTo;
  /* 0x0020 */ unsigned short fFlags;
  /* 0x0022 */ char Padding_662[2];
  /* 0x0024 */ int fAnyOperationsAborted;
  /* 0x0028 */ void* hNameMappings;
  /* 0x0030 */ const char* lpszProgressTitle;
} SHFILEOPSTRUCTA, *PSHFILEOPSTRUCTA; /* size: 0x0038 */

struct tagGLYPHSET
{
  /* 0x0000 */ unsigned long cbThis;
  /* 0x0004 */ unsigned long flAccel;
  /* 0x0008 */ unsigned long cGlyphsSupported;
  /* 0x000c */ unsigned long cRanges;
  /* 0x0010 */ struct tagWCRANGE ranges[1];
}; /* size: 0x0014 */

typedef struct __midl_frag189_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag189_t, *P_midl_frag189_t; /* size: 0x0008 */

typedef struct _MUILANGCFGNODE
{
  /* 0x0000 */ short LangSpec;
  /* 0x0002 */ unsigned short FallbackTypes;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ short FallbackSpecs[3];
} MUILANGCFGNODE, *PMUILANGCFGNODE; /* size: 0x000c */

class PSerStream;

typedef struct __midl_frag1847_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1847_t, *P_midl_frag1847_t; /* size: 0x0048 */

class IMappedStream
{
}; /* size: 0x0008 */

struct ITypeLib
{
}; /* size: 0x0008 */

typedef struct _PROV_ENUMALGS_EX
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwDefaultLen;
  /* 0x0008 */ unsigned long dwMinLen;
  /* 0x000c */ unsigned long dwMaxLen;
  /* 0x0010 */ unsigned long dwProtocols;
  /* 0x0014 */ unsigned long dwNameLen;
  /* 0x0018 */ char szName[20];
  /* 0x002c */ unsigned long dwLongNameLen;
  /* 0x0030 */ char szLongName[40];
} PROV_ENUMALGS_EX, *PPROV_ENUMALGS_EX; /* size: 0x0058 */

struct IActivationPropertiesIn
{
}; /* size: 0x0008 */

typedef struct _NDR64_EXPR_NOOP
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Size;
  /* 0x0002 */ unsigned short Reserved;
} NDR64_EXPR_NOOP, *PNDR64_EXPR_NOOP; /* size: 0x0004 */

typedef struct _MUILANGLISTNODE
{
  /* 0x0000 */ unsigned short LanguageType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ short LanguageSpec;
} MUILANGLISTNODE, *PMUILANGLISTNODE; /* size: 0x0006 */

struct tagCONVCONTEXT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned int wFlags;
  /* 0x0008 */ unsigned int wCountryID;
  /* 0x000c */ int iCodePage;
  /* 0x0010 */ unsigned long dwLangID;
  /* 0x0014 */ unsigned long dwSecurity;
  /* 0x0018 */ struct _SECURITY_QUALITY_OF_SERVICE qos;
}; /* size: 0x0024 */

struct tagCONVINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_663;
  /* 0x0008 */ unsigned __int64 hUser;
  /* 0x0010 */ struct HCONV__* hConvPartner;
  /* 0x0018 */ struct HSZ__* hszSvcPartner;
  /* 0x0020 */ struct HSZ__* hszServiceReq;
  /* 0x0028 */ struct HSZ__* hszTopic;
  /* 0x0030 */ struct HSZ__* hszItem;
  /* 0x0038 */ unsigned int wFmt;
  /* 0x003c */ unsigned int wType;
  /* 0x0040 */ unsigned int wStatus;
  /* 0x0044 */ unsigned int wConvst;
  /* 0x0048 */ unsigned int wLastError;
  /* 0x004c */ long Padding_664;
  /* 0x0050 */ struct HCONVLIST__* hConvList;
  /* 0x0058 */ struct tagCONVCONTEXT ConvCtxt;
  /* 0x007c */ long Padding_665;
  /* 0x0080 */ struct HWND__* hwnd;
  /* 0x0088 */ struct HWND__* hwndPartner;
}; /* size: 0x0090 */

struct IAuthenticate
{
}; /* size: 0x0008 */

typedef struct _NDR64_IID_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_666;
  /* 0x0008 */ const void* IIDDescriptor;
} NDR64_IID_FORMAT, *PNDR64_IID_FORMAT; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION* Information;
  /* 0x0008 */ void* SectionBase;
  /* 0x0010 */ unsigned long SectionLength;
  /* 0x0014 */ long Padding_667;
  /* 0x0018 */ void* SectionGlobalDataBase;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA; /* size: 0x0028 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_668;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_669;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_670;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA; /* size: 0x0070 */

struct CStreamChunk
{
  /* 0x0000 */ unsigned long oOld;
  /* 0x0004 */ long cbChange;
}; /* size: 0x0008 */

struct IFastStack<DISPATCH_SERVER_FRAME>
{
}; /* size: 0x0008 */

struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;

typedef struct _BY_HANDLE_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long dwVolumeSerialNumber;
  /* 0x0020 */ unsigned long nFileSizeHigh;
  /* 0x0024 */ unsigned long nFileSizeLow;
  /* 0x0028 */ unsigned long nNumberOfLinks;
  /* 0x002c */ unsigned long nFileIndexHigh;
  /* 0x0030 */ unsigned long nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION; /* size: 0x0034 */

struct IDirectWriterLock
{
}; /* size: 0x0008 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_671[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_672;
  /* 0x0030 */ struct INTERFACE_HELPER_CLSID* m_r;
}; /* size: 0x0038 */

struct IWrapperInfo
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_MEMORY_DESCRIPTOR, *PMINIDUMP_MEMORY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _MINIDUMP_THREAD_EX
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
  /* 0x0030 */ struct _MINIDUMP_MEMORY_DESCRIPTOR BackingStore;
} MINIDUMP_THREAD_EX, *PMINIDUMP_THREAD_EX; /* size: 0x0040 */

typedef struct _SYSTEM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long TimerResolution;
  /* 0x0008 */ unsigned long PageSize;
  /* 0x000c */ unsigned long NumberOfPhysicalPages;
  /* 0x0010 */ unsigned long LowestPhysicalPageNumber;
  /* 0x0014 */ unsigned long HighestPhysicalPageNumber;
  /* 0x0018 */ unsigned long AllocationGranularity;
  /* 0x001c */ long Padding_673;
  /* 0x0020 */ unsigned __int64 MinimumUserModeAddress;
  /* 0x0028 */ unsigned __int64 MaximumUserModeAddress;
  /* 0x0030 */ unsigned __int64 ActiveProcessorsAffinityMask;
  /* 0x0038 */ char NumberOfProcessors;
  /* 0x0039 */ char __PADDING__[7];
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION; /* size: 0x0040 */

struct CMachineNamesHelper::_UNIQUEADDRS
{
  /* 0x0000 */ unsigned long dwcTotalUniqueAddrs;
  /* 0x0004 */ unsigned long dwStringSpaceNeeded;
  /* 0x0008 */ unsigned long dwCurrentAddr;
  /* 0x000c */ long Padding_674;
  /* 0x0010 */ wchar_t* pszNextAddrToUse;
  /* 0x0018 */ wchar_t** ppszAddrs;
  /* 0x0020 */ unsigned __int64 cchLeft;
}; /* size: 0x0028 */

typedef struct __midl_frag1440_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1440_t, *P_midl_frag1440_t; /* size: 0x0068 */

typedef struct _CRYPT_URL_ARRAY
{
  /* 0x0000 */ unsigned long cUrl;
  /* 0x0004 */ long Padding_675;
  /* 0x0008 */ wchar_t** rgwszUrl;
} CRYPT_URL_ARRAY, *PCRYPT_URL_ARRAY; /* size: 0x0010 */

typedef struct __midl_frag1843_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1843_t, *P_midl_frag1843_t; /* size: 0x000c */

typedef struct _APP_VARIABLE_INFO
{
  /* 0x0000 */ unsigned long dwVariableType;
  /* 0x0004 */ unsigned long dwVariableInfoSize;
} APP_VARIABLE_INFO, *PAPP_VARIABLE_INFO; /* size: 0x0008 */

typedef struct _KEY_CONTROL_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
} KEY_CONTROL_FLAGS_INFORMATION, *PKEY_CONTROL_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_NAME_INFO
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFO, *PFILE_NAME_INFO; /* size: 0x0008 */

class CComSxSClassInfo
{
  /* 0x0000 */ long Padding_676[6];
  /* 0x0018 */ long m_cRef;
  /* 0x001c */ long m_cLocks;
  /* 0x0020 */ long m_cLocksExternal;
  /* 0x0024 */ long Padding_677;
  /* 0x0028 */ void* m_hActCtx;
  /* 0x0030 */ const struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION* m_pData;
  /* 0x0038 */ unsigned long m_ulDataLength;
  /* 0x003c */ long Padding_678;
  /* 0x0040 */ void* m_pSectionBase;
  /* 0x0048 */ unsigned long m_ulSectionLength;
  /* 0x004c */ wchar_t m_bufModulePath[260];
}; /* size: 0x0258 */

struct PROCESSOR_IDLE_TIMES
{
  /* 0x0000 */ unsigned __int64 StartTime;
  /* 0x0008 */ unsigned __int64 EndTime;
  /* 0x0010 */ unsigned long Reserved[4];
}; /* size: 0x0020 */

typedef struct _SERVICE_SID_INFO
{
  /* 0x0000 */ unsigned long dwServiceSidType;
} SERVICE_SID_INFO, *PSERVICE_SID_INFO; /* size: 0x0004 */

typedef struct _KEY_FULL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long SubKeys;
  /* 0x0018 */ unsigned long MaxNameLen;
  /* 0x001c */ unsigned long MaxClassLen;
  /* 0x0020 */ unsigned long Values;
  /* 0x0024 */ unsigned long MaxValueNameLen;
  /* 0x0028 */ unsigned long MaxValueDataLen;
  /* 0x002c */ wchar_t Class[1];
  /* 0x002e */ char __PADDING__[2];
} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION; /* size: 0x0030 */

struct SYNTHESIZED_MAP
{
  /* 0x0000 */ unsigned short cfSynthesized;
  /* 0x0002 */ unsigned short cfOrig;
}; /* size: 0x0004 */

typedef struct _PLUGPLAY_NOTIFY_HDR
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} PLUGPLAY_NOTIFY_HDR, *PPLUGPLAY_NOTIFY_HDR; /* size: 0x0014 */

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION
{
  /* 0x0000 */ struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
  /* 0x0014 */ long Padding_679;
  /* 0x0018 */ void* FileObject;
  /* 0x0020 */ long NameBufferOffset;
  /* 0x0024 */ unsigned char CustomDataBuffer[1];
  /* 0x0025 */ char __PADDING__[3];
} PLUGPLAY_CUSTOM_NOTIFICATION, *PPLUGPLAY_CUSTOM_NOTIFICATION; /* size: 0x0028 */

struct tagMONCBSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned long dwTime;
  /* 0x0008 */ void* hTask;
  /* 0x0010 */ unsigned long dwRet;
  /* 0x0014 */ unsigned int wType;
  /* 0x0018 */ unsigned int wFmt;
  /* 0x001c */ long Padding_680;
  /* 0x0020 */ struct HCONV__* hConv;
  /* 0x0028 */ struct HSZ__* hsz1;
  /* 0x0030 */ struct HSZ__* hsz2;
  /* 0x0038 */ struct HDDEDATA__* hData;
  /* 0x0040 */ unsigned __int64 dwData1;
  /* 0x0048 */ unsigned __int64 dwData2;
  /* 0x0050 */ struct tagCONVCONTEXT cc;
  /* 0x0074 */ unsigned long cbData;
  /* 0x0078 */ unsigned long Data[8];
}; /* size: 0x0098 */

typedef struct _NOTIFYICONDATAW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_681;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ unsigned int uFlags;
  /* 0x0018 */ unsigned int uCallbackMessage;
  /* 0x001c */ long Padding_682;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ wchar_t szTip[128];
  /* 0x0128 */ unsigned long dwState;
  /* 0x012c */ unsigned long dwStateMask;
  /* 0x0130 */ wchar_t szInfo[256];
  union
  {
    /* 0x0330 */ unsigned int uTimeout;
    /* 0x0330 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x0334 */ wchar_t szInfoTitle[64];
  /* 0x03b4 */ unsigned long dwInfoFlags;
  /* 0x03b8 */ struct _GUID guidItem;
  /* 0x03c8 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAW, *PNOTIFYICONDATAW; /* size: 0x03d0 */

typedef struct _cpinfoexW
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ wchar_t CodePageName[260];
} cpinfoexW, *PcpinfoexW; /* size: 0x0220 */

typedef struct _SYSTEM_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentFixupCount;
  /* 0x0004 */ unsigned long ExceptionDispatchCount;
  /* 0x0008 */ unsigned long FloatingEmulationCount;
  /* 0x000c */ unsigned long ByteWordEmulationCount;
} SYSTEM_EXCEPTION_INFORMATION, *PSYSTEM_EXCEPTION_INFORMATION; /* size: 0x0010 */

struct tagCADBL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_683;
  /* 0x0008 */ double* pElems;
}; /* size: 0x0010 */

class CStreamChunkList
{
  /* 0x0000 */ unsigned long _cMaxChunks;
  /* 0x0004 */ unsigned long _cChunks;
  /* 0x0008 */ struct CStreamChunk* _ascnk;
  /* 0x0010 */ unsigned char _fDelete;
}; /* size: 0x0018 */

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION
{
  /* 0x0000 */ unsigned long CancelProbability;
  /* 0x0004 */ unsigned long CancelThreshold;
  /* 0x0008 */ unsigned long CompletionThreshold;
  /* 0x000c */ unsigned long CancellationVerifierDisabled;
  /* 0x0010 */ unsigned long AvailableIssues;
  /* 0x0014 */ long Padding_684;
  /* 0x0018 */ struct _SYSTEM_VERIFIER_ISSUE Issues[128];
} SYSTEM_VERIFIER_CANCELLATION_INFORMATION, *PSYSTEM_VERIFIER_CANCELLATION_INFORMATION; /* size: 0x1018 */

struct ImgDelayDescrV2
{
  /* 0x0000 */ unsigned long grAttrs;
  /* 0x0004 */ unsigned long rvaDLLName;
  /* 0x0008 */ unsigned long rvaHmod;
  /* 0x000c */ unsigned long rvaIAT;
  /* 0x0010 */ unsigned long rvaINT;
  /* 0x0014 */ unsigned long rvaBoundIAT;
  /* 0x0018 */ unsigned long rvaUnloadIAT;
  /* 0x001c */ unsigned long dwTimeStamp;
}; /* size: 0x0020 */

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION
{
  /* 0x0000 */ unsigned long PoolTag;
  /* 0x0004 */ unsigned long Flags;
} SYSTEM_SPECIAL_POOL_INFORMATION, *PSYSTEM_SPECIAL_POOL_INFORMATION; /* size: 0x0008 */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ long Padding_685;
  /* 0x0008 */ char* pszComment;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ long __PADDING__[1];
} SERVICE_CONTROL_STATUS_REASON_PARAMSA, *PSERVICE_CONTROL_STATUS_REASON_PARAMSA; /* size: 0x0038 */

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >
{
  /* 0x0000 */ struct _LUTF8_STRING m_String;
}; /* size: 0x0018 */

struct tagMONLINKSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned long dwTime;
  /* 0x0008 */ void* hTask;
  /* 0x0010 */ int fEstablished;
  /* 0x0014 */ int fNoData;
  /* 0x0018 */ struct HSZ__* hszSvc;
  /* 0x0020 */ struct HSZ__* hszTopic;
  /* 0x0028 */ struct HSZ__* hszItem;
  /* 0x0030 */ unsigned int wFmt;
  /* 0x0034 */ int fServer;
  /* 0x0038 */ struct HCONV__* hConvServer;
  /* 0x0040 */ struct HCONV__* hConvClient;
}; /* size: 0x0048 */

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS
{
  /* 0x0000 */ unsigned long SizeStruct;
  /* 0x0004 */ unsigned long Option;
  /* 0x0008 */ unsigned char OptionData[1];
  /* 0x0009 */ char __PADDING__[3];
} RTL_PROCESS_VERIFIER_OPTIONS, *PRTL_PROCESS_VERIFIER_OPTIONS; /* size: 0x000c */

typedef struct _OBJECT_DIRECTORY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING TypeName;
} OBJECT_DIRECTORY_INFORMATION, *POBJECT_DIRECTORY_INFORMATION; /* size: 0x0020 */

class SafeIStorage
{
  /* 0x0000 */ struct IStorage* _p;
}; /* size: 0x0008 */

typedef struct __midl_frag1643_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1643_t, *P_midl_frag1643_t; /* size: 0x0058 */

typedef struct _JOURNAL_CLIENT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTimeStamp;
  /* 0x0010 */ unsigned __int64 RecordsToProcess;
  /* 0x0018 */ unsigned long RelativeFillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_CLIENT_INFORMATION, *PJOURNAL_CLIENT_INFORMATION; /* size: 0x0020 */

class PMemoryAllocator
{
}; /* size: 0x0008 */

typedef struct _TP_TASK_CALLBACKS
{
  /* 0x0000 */ void* ExecuteCallback /* function */;
  /* 0x0008 */ void* Unposted /* function */;
} TP_TASK_CALLBACKS, *PTP_TASK_CALLBACKS; /* size: 0x0010 */

struct IInternetZoneManagerEx2
{
}; /* size: 0x0008 */

typedef struct _SYSDBG_BUS_DATA
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ long Padding_686;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _BUS_DATA_TYPE BusDataType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long SlotNumber;
} SYSDBG_BUS_DATA, *PSYSDBG_BUS_DATA; /* size: 0x0020 */

struct tagOleMenuGroupWidths
{
  /* 0x0000 */ long width[6];
}; /* size: 0x0018 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>
{
  /* 0x0000 */ long m_status;
}; /* size: 0x0004 */

struct IStdMarshalInfo
{
}; /* size: 0x0008 */

class CGlobalOptions
{
  /* 0x0000 */ long Padding_687[4];
  /* 0x0010 */ unsigned long _lRefs;
}; /* size: 0x0018 */

class CNdrStream
{
  /* 0x0000 */ long Padding_688[2];
  /* 0x0008 */ long RefCount;
  /* 0x000c */ long Padding_689;
  /* 0x0010 */ unsigned char* pBuffer;
  /* 0x0018 */ unsigned long cbBufferLength;
  /* 0x001c */ unsigned long position;
}; /* size: 0x0020 */

typedef struct _RTL_VERIFIER_HELPER_TABLE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_690;
  /* 0x0008 */ void* VerifierEngGetStackTraceAddress /* function */;
  /* 0x0010 */ void* VerifierEngNtdllHeapFreeCallback /* function */;
  /* 0x0018 */ void* VerifierEngLogStackTrace /* function */;
  /* 0x0020 */ const struct _UNICODE_STRING* UnicodeImageName;
  /* 0x0028 */ void* VerifierEngCommitDebugInfo /* function */;
  /* 0x0030 */ void* VerifierEngSetProcessDebugInformation /* function */;
  /* 0x0038 */ void* VerifierEngQueryImageFileExecutionOptionsEx /* function */;
  /* 0x0040 */ wchar_t* TargetDlls;
  /* 0x0048 */ unsigned long* AddressDphGlobalFlags;
  /* 0x0050 */ struct _RTL_VERIFIER_HEAP_TABLE* VerifierTable;
  /* 0x0058 */ struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR* VerifierDescriptor;
  /* 0x0060 */ void* OptionsKey;
  /* 0x0068 */ void* VerifierEngGetStackTraceAddressEx /* function */;
  /* 0x0070 */ void* VerifierEngReleaseStackTrace /* function */;
} RTL_VERIFIER_HELPER_TABLE, *PRTL_VERIFIER_HELPER_TABLE; /* size: 0x0078 */

struct tagMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ long Padding_691;
  /* 0x0018 */ struct HMENU__* hSubMenu;
  /* 0x0020 */ struct HBITMAP__* hbmpChecked;
  /* 0x0028 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0030 */ unsigned __int64 dwItemData;
  /* 0x0038 */ wchar_t* dwTypeData;
  /* 0x0040 */ unsigned int cch;
  /* 0x0044 */ long Padding_692;
  /* 0x0048 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0050 */

class Windows::ErrorHandling::Rtl::CBoolFrame
{
}; /* size: 0x0008 */

typedef struct _TP_TASK
{
  /* 0x0000 */ const struct _TP_TASK_CALLBACKS* Callbacks;
} TP_TASK, *PTP_TASK; /* size: 0x0008 */

struct tagALTTABINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int cItems;
  /* 0x0008 */ int cColumns;
  /* 0x000c */ int cRows;
  /* 0x0010 */ int iColFocus;
  /* 0x0014 */ int iRowFocus;
  /* 0x0018 */ int cxItem;
  /* 0x001c */ int cyItem;
  /* 0x0020 */ struct tagPOINT ptStart;
}; /* size: 0x0028 */

typedef struct _CM_ROM_BLOCK
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Size;
} CM_ROM_BLOCK, *PCM_ROM_BLOCK; /* size: 0x0008 */

struct DelayLoadProc
{
  /* 0x0000 */ int fImportByName;
  /* 0x0004 */ long Padding_693;
  union
  {
    /* 0x0008 */ const char* szProcName;
    struct
    {
      /* 0x0008 */ unsigned long dwOrdinal;
      /* 0x000c */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct DelayLoadInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_694;
  /* 0x0008 */ const struct ImgDelayDescrV2* pidd;
  /* 0x0010 */ void** ppfn /* function */;
  /* 0x0018 */ const char* szDll;
  /* 0x0020 */ struct DelayLoadProc dlp;
  /* 0x0030 */ struct HINSTANCE__* hmodCur;
  /* 0x0038 */ void* pfnCur /* function */;
  /* 0x0040 */ unsigned long dwLastError;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long RegistryQuotaAllowed;
  /* 0x0004 */ unsigned long RegistryQuotaUsed;
  /* 0x0008 */ unsigned __int64 PagedPoolSize;
} SYSTEM_REGISTRY_QUOTA_INFORMATION, *PSYSTEM_REGISTRY_QUOTA_INFORMATION; /* size: 0x0010 */

class CFmCtrlUnknown
{
  /* 0x0000 */ long Padding_695[2];
  /* 0x0008 */ class CFreeMarshaler* _pfm;
  /* 0x0010 */ unsigned long _cRefs;
}; /* size: 0x0018 */

struct _TP_POOL;

typedef struct _SYSTEM_VDM_INSTEMUL_INFO
{
  /* 0x0000 */ unsigned long SegmentNotPresent;
  /* 0x0004 */ unsigned long VdmOpcode0F;
  /* 0x0008 */ unsigned long OpcodeESPrefix;
  /* 0x000c */ unsigned long OpcodeCSPrefix;
  /* 0x0010 */ unsigned long OpcodeSSPrefix;
  /* 0x0014 */ unsigned long OpcodeDSPrefix;
  /* 0x0018 */ unsigned long OpcodeFSPrefix;
  /* 0x001c */ unsigned long OpcodeGSPrefix;
  /* 0x0020 */ unsigned long OpcodeOPER32Prefix;
  /* 0x0024 */ unsigned long OpcodeADDR32Prefix;
  /* 0x0028 */ unsigned long OpcodeINSB;
  /* 0x002c */ unsigned long OpcodeINSW;
  /* 0x0030 */ unsigned long OpcodeOUTSB;
  /* 0x0034 */ unsigned long OpcodeOUTSW;
  /* 0x0038 */ unsigned long OpcodePUSHF;
  /* 0x003c */ unsigned long OpcodePOPF;
  /* 0x0040 */ unsigned long OpcodeINTnn;
  /* 0x0044 */ unsigned long OpcodeINTO;
  /* 0x0048 */ unsigned long OpcodeIRET;
  /* 0x004c */ unsigned long OpcodeINBimm;
  /* 0x0050 */ unsigned long OpcodeINWimm;
  /* 0x0054 */ unsigned long OpcodeOUTBimm;
  /* 0x0058 */ unsigned long OpcodeOUTWimm;
  /* 0x005c */ unsigned long OpcodeINB;
  /* 0x0060 */ unsigned long OpcodeINW;
  /* 0x0064 */ unsigned long OpcodeOUTB;
  /* 0x0068 */ unsigned long OpcodeOUTW;
  /* 0x006c */ unsigned long OpcodeLOCKPrefix;
  /* 0x0070 */ unsigned long OpcodeREPNEPrefix;
  /* 0x0074 */ unsigned long OpcodeREPPrefix;
  /* 0x0078 */ unsigned long OpcodeHLT;
  /* 0x007c */ unsigned long OpcodeCLI;
  /* 0x0080 */ unsigned long OpcodeSTI;
  /* 0x0084 */ unsigned long BopCount;
} SYSTEM_VDM_INSTEMUL_INFO, *PSYSTEM_VDM_INSTEMUL_INFO; /* size: 0x0088 */

typedef struct _TRACE_GUID_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* Guid;
  /* 0x0008 */ void* RegHandle;
} TRACE_GUID_REGISTRATION, *PTRACE_GUID_REGISTRATION; /* size: 0x0010 */

struct tagEMRMODIFYWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
  /* 0x0020 */ unsigned long iMode;
}; /* size: 0x0024 */

class CClassCache::CDllPathEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CDllPathEntry* _pNext;
      /* 0x0008 */ class CClassCache::CDllPathEntry* _pPrev;
      /* 0x0010 */ unsigned long _dwHash;
      /* 0x0014 */ long Padding_696;
      /* 0x0018 */ wchar_t* _psPath;
      /* 0x0020 */ unsigned long _dwSig;
      /* 0x0024 */ long Padding_697;
      /* 0x0028 */ void* _pfnGetClassObject /* function */;
      /* 0x0030 */ void* _pfnDllCanUnload /* function */;
      /* 0x0038 */ unsigned long _dwFlags;
      /* 0x003c */ int _fGCO_WAS_HERE;
      /* 0x0040 */ class CClassCache::CDllClassEntry* _p1stClass;
      /* 0x0048 */ unsigned long _cUsing;
      /* 0x004c */ long Padding_698;
      /* 0x0050 */ class CClassCache::CDllAptEntry* _pAptEntryFront;
      /* 0x0058 */ class CClassCache::CDllAptEntry* _pAptEntryBack;
      /* 0x0060 */ struct HINSTANCE__* _hDll32;
      /* 0x0068 */ unsigned long _dwExpireTime;
    }; /* size: 0x0060 */
    /* 0x0000 */ const unsigned long DLL_DELAY_UNLOAD_TIME;
    /* 0x0000 */ const char* DLL_GET_CLASS_OBJECT_EP /* zero-length array */;
    /* 0x0000 */ const char* DLL_CAN_UNLOAD_EP /* zero-length array */;
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0080 */
}; /* size: 0x0070 */

struct tagLOGFONTA
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ char lfFaceName[32];
}; /* size: 0x003c */

struct tagEXTLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned long elfVersion;
  /* 0x00a0 */ unsigned long elfStyleSize;
  /* 0x00a4 */ unsigned long elfMatch;
  /* 0x00a8 */ unsigned long elfReserved;
  /* 0x00ac */ unsigned char elfVendorId[4];
  /* 0x00b0 */ unsigned long elfCulture;
  /* 0x00b4 */ struct tagPANOSE elfPanose;
  /* 0x00be */ char __PADDING__[2];
}; /* size: 0x00c0 */

typedef struct _RTL_UNLOAD_EVENT_TRACE64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE64, *PRTL_UNLOAD_EVENT_TRACE64; /* size: 0x0060 */

struct tagCLIENTCREATESTRUCT
{
  /* 0x0000 */ void* hWindowMenu;
  /* 0x0008 */ unsigned int idFirstChild;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct tagEMRRESIZEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long cEntries;
}; /* size: 0x0010 */

class CApartmentActivator
{
}; /* size: 0x0008 */

typedef struct _tagPROTOCOLDATA
{
  /* 0x0000 */ unsigned long grfFlags;
  /* 0x0004 */ unsigned long dwState;
  /* 0x0008 */ void* pData;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ long __PADDING__[1];
} tagPROTOCOLDATA, *PtagPROTOCOLDATA; /* size: 0x0018 */

typedef struct _SYSTEM_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long MaxIdlenessAllowed;
  /* 0x0004 */ unsigned long Idleness;
  /* 0x0008 */ unsigned long TimeRemaining;
  /* 0x000c */ unsigned char CoolingMode;
  /* 0x000d */ char __PADDING__[3];
} SYSTEM_POWER_INFORMATION, *PSYSTEM_POWER_INFORMATION; /* size: 0x0010 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CBoolFrame>
{
}; /* size: 0x0001 */

typedef struct _FILE_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFORMATION, *PFILE_FULL_DIR_INFORMATION; /* size: 0x0048 */

typedef struct _TRIPLE_LIST_ITERATOR
{
  /* 0x0000 */ struct _TRIPLE_LIST* List;
  /* 0x0008 */ struct _TRIPLE_LIST_ENTRY* NextEntry;
  /* 0x0010 */ unsigned char ActiveList;
  /* 0x0011 */ unsigned char ProbeReads;
  /* 0x0012 */ unsigned char ReturnDataOffset;
  /* 0x0013 */ unsigned char Wow64List;
  /* 0x0014 */ long __PADDING__[1];
} TRIPLE_LIST_ITERATOR, *PTRIPLE_LIST_ITERATOR; /* size: 0x0018 */

typedef struct _PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long Number;
  /* 0x0004 */ unsigned long MaxMhz;
  /* 0x0008 */ unsigned long CurrentMhz;
  /* 0x000c */ unsigned long MhzLimit;
  /* 0x0010 */ unsigned long MaxIdleState;
  /* 0x0014 */ unsigned long CurrentIdleState;
} PROCESSOR_POWER_INFORMATION, *PPROCESSOR_POWER_INFORMATION; /* size: 0x0018 */

typedef struct _TRIPLE_LIST
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit0 : 1; /* bit position: 0 */
        /* 0x0000 */ volatile unsigned long ActiveListBit0 : 1; /* bit position: 1 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit0 : 1; /* bit position: 2 */
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit1 : 1; /* bit position: 3 */
        /* 0x0000 */ volatile unsigned long ActiveListBit1 : 1; /* bit position: 4 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit1 : 1; /* bit position: 5 */
        /* 0x0000 */ volatile unsigned long ReaderDidTheSwitch : 1; /* bit position: 6 */
        /* 0x0000 */ volatile unsigned long Reserved : 22; /* bit position: 7 */
        /* 0x0000 */ volatile unsigned long ReaderBusy : 1; /* bit position: 29 */
        /* 0x0000 */ volatile unsigned long UpdateReady : 1; /* bit position: 30 */
        /* 0x0000 */ volatile unsigned long OverflowUpdateReady : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0004 */ ControlBits;
    /* 0x0000 */ volatile long CombinedControlBits;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_699;
  /* 0x0008 */ struct _TRIPLE_LIST_ENTRY Head;
  /* 0x0028 */ struct _TRIPLE_LIST_ENTRY* Tail[3];
  /* 0x0040 */ void* RemoveCallback /* function */;
  /* 0x0048 */ void* RemoveContext;
  /* 0x0050 */ struct _TRIPLE_LIST_ENTRY* PendingHead;
  /* 0x0058 */ struct _TRIPLE_LIST_ENTRY** PendingTailPtr;
  /* 0x0060 */ unsigned long PendingListIndex;
  /* 0x0064 */ long __PADDING__[1];
} TRIPLE_LIST, *PTRIPLE_LIST; /* size: 0x0068 */

struct IInternetSecurityManagerEx
{
}; /* size: 0x0008 */

typedef struct _TAPE_GET_MEDIA_PARAMETERS
{
  /* 0x0000 */ union _LARGE_INTEGER Capacity;
  /* 0x0008 */ union _LARGE_INTEGER Remaining;
  /* 0x0010 */ unsigned long BlockSize;
  /* 0x0014 */ unsigned long PartitionCount;
  /* 0x0018 */ unsigned char WriteProtected;
  /* 0x0019 */ char __PADDING__[7];
} TAPE_GET_MEDIA_PARAMETERS, *PTAPE_GET_MEDIA_PARAMETERS; /* size: 0x0020 */

typedef struct __midl_frag158_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag158_t, *P_midl_frag158_t; /* size: 0x0048 */

typedef struct _ENLISTMENT_CRM_INFORMATION
{
  /* 0x0000 */ struct _GUID CrmTransactionManagerId;
  /* 0x0010 */ struct _GUID CrmResourceManagerId;
  /* 0x0020 */ struct _GUID CrmEnlistmentId;
} ENLISTMENT_CRM_INFORMATION, *PENLISTMENT_CRM_INFORMATION; /* size: 0x0030 */

typedef struct _lclor_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[781];
  /* 0x030f */ char __PADDING__[1];
} lclor_MIDL_PROC_FORMAT_STRING, *Plclor_MIDL_PROC_FORMAT_STRING; /* size: 0x0310 */

struct IComSxSClassInfo
{
}; /* size: 0x0008 */

typedef struct _PARSE_MESSAGE_CONTEXT
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long cwSavColumn;
  /* 0x0008 */ unsigned __int64 iwSrc;
  /* 0x0010 */ unsigned __int64 iwDst;
  /* 0x0018 */ unsigned __int64 iwDstSpace;
  /* 0x0020 */ char* lpvArgStart;
} PARSE_MESSAGE_CONTEXT, *PPARSE_MESSAGE_CONTEXT; /* size: 0x0028 */

typedef struct _IMAGEHLP_SYMBOL_SRC
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ unsigned long type;
  /* 0x0008 */ char file[260];
} IMAGEHLP_SYMBOL_SRC, *PIMAGEHLP_SYMBOL_SRC; /* size: 0x010c */

struct HBITMAP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct ILocalSystemActivator
{
}; /* size: 0x0008 */

struct threadmbcinfostruct;

class CRootPubDocFile
{
  /* 0x0000 */ long Padding_700[38];
  /* 0x0098 */ unsigned long _ulPriLock;
  /* 0x009c */ long Padding_701;
  /* 0x00a0 */ struct IMalloc* const _pMalloc;
  /* 0x00a8 */ struct _FILETIME _timeModifyAtCommit;
}; /* size: 0x00b0 */

struct localeinfo_struct
{
  /* 0x0000 */ struct threadlocaleinfostruct* locinfo;
  /* 0x0008 */ struct threadmbcinfostruct* mbcinfo;
}; /* size: 0x0010 */

struct IPointerInactive
{
}; /* size: 0x0008 */

struct CClassCache::CFinishComposite::node
{
  /* 0x0000 */ struct CClassCache::CFinishComposite::node* _pNext;
  /* 0x0008 */ struct CClassCache::CFinishComposite::node* _pPrev;
  /* 0x0010 */ class IFinish* _pIF;
}; /* size: 0x0018 */

struct tagLC_ID
{
  /* 0x0000 */ unsigned short wLanguage;
  /* 0x0002 */ unsigned short wCountry;
  /* 0x0004 */ unsigned short wCodePage;
}; /* size: 0x0006 */

struct threadlocaleinfostruct
{
  /* 0x0000 */ int refcount;
  /* 0x0004 */ unsigned int lc_codepage;
  /* 0x0008 */ unsigned int lc_collate_cp;
  /* 0x000c */ unsigned long lc_handle[6];
  /* 0x0024 */ struct tagLC_ID lc_id[6];
  /* 0x0048 */ struct
  {
    /* 0x0048 */ char* locale;
    /* 0x0050 */ wchar_t* wlocale;
    /* 0x0058 */ int* refcount;
    /* 0x0060 */ int* wrefcount;
  } /* size: 0x0020 */ lc_category[6];
  /* 0x0108 */ int lc_clike;
  /* 0x010c */ int mb_cur_max;
  /* 0x0110 */ int* lconv_intl_refcount;
  /* 0x0118 */ int* lconv_num_refcount;
  /* 0x0120 */ int* lconv_mon_refcount;
  /* 0x0128 */ struct lconv* lconv;
  /* 0x0130 */ int* ctype1_refcount;
  /* 0x0138 */ unsigned short* ctype1;
  /* 0x0140 */ const unsigned short* pctype;
  /* 0x0148 */ const unsigned char* pclmap;
  /* 0x0150 */ const unsigned char* pcumap;
  /* 0x0158 */ struct __lc_time_data* lc_time_curr;
}; /* size: 0x0160 */

typedef struct _OBJECT_TYPE_LIST
{
  /* 0x0000 */ unsigned short Level;
  /* 0x0002 */ unsigned short Sbz;
  /* 0x0004 */ long Padding_702;
  /* 0x0008 */ struct _GUID* ObjectType;
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST; /* size: 0x0010 */

typedef struct _EXCEPTION_RECORD64
{
  /* 0x0000 */ unsigned long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ unsigned long __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64; /* size: 0x0098 */

union EventPoolEntry::InitState
{
  union
  {
    /* 0x0000 */ volatile unsigned __int64 _ulInitState;
    struct /* bitfield */
    {
      /* 0x0000 */ volatile unsigned __int64 _ulNumInitedRWThreads : 24; /* bit position: 0 */
      /* 0x0000 */ volatile unsigned __int64 _ulNumInitedRWLocks : 40; /* bit position: 24 */
    }; /* bitfield */
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _FILE_ALLOCATED_RANGE_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} FILE_ALLOCATED_RANGE_BUFFER, *PFILE_ALLOCATED_RANGE_BUFFER; /* size: 0x0010 */

struct lconv;

typedef struct _FPO_DATA
{
  /* 0x0000 */ unsigned long ulOffStart;
  /* 0x0004 */ unsigned long cbProcSize;
  /* 0x0008 */ unsigned long cdwLocals;
  /* 0x000c */ unsigned short cdwParams;
  struct /* bitfield */
  {
    /* 0x000e */ unsigned short cbProlog : 8; /* bit position: 0 */
    /* 0x000e */ unsigned short cbRegs : 3; /* bit position: 8 */
    /* 0x000e */ unsigned short fHasSEH : 1; /* bit position: 11 */
    /* 0x000e */ unsigned short fUseBP : 1; /* bit position: 12 */
    /* 0x000e */ unsigned short reserved : 1; /* bit position: 13 */
    /* 0x000e */ unsigned short cbFrame : 2; /* bit position: 14 */
  }; /* bitfield */
} FPO_DATA, *PFPO_DATA; /* size: 0x0010 */

typedef struct __midl_frag1158_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1158_t, *P_midl_frag1158_t; /* size: 0x0038 */

struct tagOutgoingActivationData
{
  /* 0x0000 */ struct _GUID guidServer;
}; /* size: 0x0010 */

struct tagSOleTlsData
{
  /* 0x0000 */ void* pvThreadBase;
  /* 0x0008 */ class CSmAllocator* pSmAllocator;
  /* 0x0010 */ unsigned long dwApartmentID;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ long TlsMapIndex;
  /* 0x001c */ long Padding_703;
  /* 0x0020 */ void** ppTlsSlot;
  /* 0x0028 */ unsigned long cComInits;
  /* 0x002c */ unsigned long cOleInits;
  /* 0x0030 */ unsigned long cCalls;
  /* 0x0034 */ long Padding_704;
  /* 0x0038 */ class CMessageCall* pCallInfo;
  /* 0x0040 */ class CAsyncCall* pFreeAsyncCall;
  /* 0x0048 */ class CClientCall* pFreeClientCall;
  /* 0x0050 */ class CObjServer* pObjServer;
  /* 0x0058 */ unsigned long dwTIDCaller;
  /* 0x005c */ long Padding_705;
  /* 0x0060 */ class CObjectContext* pCurrentCtx;
  /* 0x0068 */ class CObjectContext* pEmptyCtx;
  /* 0x0070 */ class CObjectContext* pNativeCtx;
  /* 0x0078 */ unsigned __int64 ContextId;
  /* 0x0080 */ class CComApartment* pNativeApt;
  /* 0x0088 */ struct IUnknown* pCallContext;
  /* 0x0090 */ class CCtxCall* pCtxCall;
  /* 0x0098 */ class CPolicySet* pPS;
  /* 0x00a0 */ void* pvPendingCallsFront;
  /* 0x00a8 */ void* pvPendingCallsBack;
  /* 0x00b0 */ class CAptCallCtrl* pCallCtrl;
  /* 0x00b8 */ class CSrvCallState* pTopSCS;
  /* 0x00c0 */ struct IMessageFilter* pMsgFilter;
  /* 0x00c8 */ struct HWND__* hwndSTA;
  /* 0x00d0 */ long cORPCNestingLevel;
  /* 0x00d4 */ unsigned long cDebugData;
  /* 0x00d8 */ struct _GUID LogicalThreadId;
  /* 0x00e8 */ void* hThread;
  /* 0x00f0 */ void* hRevert;
  /* 0x00f8 */ struct IUnknown* pAsyncRelease;
  /* 0x0100 */ struct HWND__* hwndDdeServer;
  /* 0x0108 */ struct HWND__* hwndDdeClient;
  /* 0x0110 */ unsigned long cServeDdeObjects;
  /* 0x0114 */ long Padding_706;
  /* 0x0118 */ void* pSTALSvrsFront;
  /* 0x0120 */ struct HWND__* hwndClip;
  /* 0x0128 */ struct IDataObject* pDataObjClip;
  /* 0x0130 */ unsigned long dwClipSeqNum;
  /* 0x0134 */ unsigned long fIsClipWrapper;
  /* 0x0138 */ struct IUnknown* punkState;
  /* 0x0140 */ unsigned long cCallCancellation;
  /* 0x0144 */ unsigned long cAsyncSends;
  /* 0x0148 */ class CAsyncCall* pAsyncCallList;
  /* 0x0150 */ class CSurrogatedObjectList* pSurrogateList;
  /* 0x0158 */ void* pRWLockTlsEntry;
  /* 0x0160 */ struct tagCallEntry CallEntry;
  /* 0x0170 */ struct tagContextStackNode* pContextStack;
  /* 0x0178 */ struct tagInitializeSpyNode* pFirstSpyReg;
  /* 0x0180 */ struct tagInitializeSpyNode* pFirstFreeSpyReg;
  /* 0x0188 */ class CVerifierTlsData* pVerifierData;
  /* 0x0190 */ unsigned long dwMaxSpy;
  /* 0x0194 */ unsigned char cCustomMarshallerRecursion;
  /* 0x0195 */ char Padding_707[3];
  /* 0x0198 */ void* pDragCursors;
  /* 0x01a0 */ struct IUnknown* punkError;
  /* 0x01a8 */ unsigned long cbErrorData;
  /* 0x01ac */ struct tagOutgoingCallData outgoingCallData;
  /* 0x01b4 */ struct tagIncomingCallData incomingCallData;
  /* 0x01b8 */ struct tagOutgoingActivationData outgoingActivationData;
}; /* size: 0x01c8 */

struct __lc_time_data;

typedef struct _PROCESS_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long OperationType;
  /* 0x0008 */ unsigned long ThreadDataCount;
  union
  {
    /* 0x000c */ unsigned long TlsIndex;
    /* 0x000c */ unsigned long PreviousCount;
  }; /* size: 0x0004 */
  /* 0x0010 */ struct _THREAD_TLS_INFORMATION ThreadData[1];
} PROCESS_TLS_INFORMATION, *PPROCESS_TLS_INFORMATION; /* size: 0x0028 */

struct IHttpNegotiate2
{
}; /* size: 0x0008 */

struct tagLOGCOLORSPACEW
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ wchar_t lcsFilename[260];
}; /* size: 0x024c */

struct tagEMRCREATECOLORSPACEW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEW lcs;
  /* 0x0258 */ unsigned long dwFlags;
  /* 0x025c */ unsigned long cbData;
  /* 0x0260 */ unsigned char Data[1];
  /* 0x0261 */ char __PADDING__[3];
}; /* size: 0x0264 */

struct BSTR_INTERNAL
{
  /* 0x0000 */ unsigned long cbPayload;
  /* 0x0004 */ wchar_t* sz /* zero-length array */;
}; /* size: 0x0004 */

struct CMalloc
{
  /* 0x0000 */ struct IMallocVtbl* lpVtbl;
}; /* size: 0x0008 */

typedef struct _IMAGE_BOUND_FORWARDER_REF
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short Reserved;
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF; /* size: 0x0008 */

struct ISystemDebugEventFire
{
}; /* size: 0x0008 */

struct IDataAdviseHolder
{
}; /* size: 0x0008 */

struct IPropertyPageSite
{
}; /* size: 0x0008 */

struct tagMEASUREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemWidth;
  /* 0x0010 */ unsigned int itemHeight;
  /* 0x0014 */ long Padding_708;
  /* 0x0018 */ unsigned __int64 itemData;
}; /* size: 0x0020 */

struct tagBIND_OPTS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long grfFlags;
  /* 0x0008 */ unsigned long grfMode;
  /* 0x000c */ unsigned long dwTickCountDeadline;
}; /* size: 0x0010 */

class CGlobalContext
{
  /* 0x0000 */ long Padding_709[4];
  /* 0x0010 */ int _fTakeLock;
  /* 0x0014 */ unsigned long _dfOpenLock;
  /* 0x0018 */ struct IMalloc* const _pMalloc;
  /* 0x0020 */ union _LARGE_INTEGER _luidMutexName;
  /* 0x0028 */ struct _GLOBAL_SHARED_CRITICAL_SECTION _GlobalPortion;
}; /* size: 0x0038 */

typedef struct __midl_frag1221_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1221_t, *P_midl_frag1221_t; /* size: 0x0038 */

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW
{
  /* 0x0000 */ wchar_t* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOW, *PSERVICE_REQUIRED_PRIVILEGES_INFOW; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_CERT
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_710;
  /* 0x0008 */ const struct _CERT_CONTEXT* pCert;
  /* 0x0010 */ int fCommercial;
  /* 0x0014 */ int fTrustedRoot;
  /* 0x0018 */ int fSelfSigned;
  /* 0x001c */ int fTestCert;
  /* 0x0020 */ unsigned long dwRevokedReason;
  /* 0x0024 */ unsigned long dwConfidence;
  /* 0x0028 */ unsigned long dwError;
  /* 0x002c */ long Padding_711;
  /* 0x0030 */ struct _CTL_CONTEXT* pTrustListContext;
  /* 0x0038 */ int fTrustListSignerCert;
  /* 0x003c */ long Padding_712;
  /* 0x0040 */ const struct _CTL_CONTEXT* pCtlContext;
  /* 0x0048 */ unsigned long dwCtlError;
  /* 0x004c */ int fIsCyclic;
  /* 0x0050 */ struct _CERT_CHAIN_ELEMENT* pChainElement;
} CRYPT_PROVIDER_CERT, *PCRYPT_PROVIDER_CERT; /* size: 0x0058 */

struct IThunkManager
{
}; /* size: 0x0008 */

struct tagEMRLINETO
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptl;
}; /* size: 0x0010 */

struct tagRemBRUSH
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

class CBasedMSFPageTablePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NameOffset : 31; /* bit position: 0 */
      /* 0x0000 */ unsigned long NameIsString : 1; /* bit position: 31 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Name;
    /* 0x0000 */ unsigned short Id;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long OffsetToData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long OffsetToDirectory : 31; /* bit position: 0 */
      /* 0x0004 */ unsigned long DataIsDirectory : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY; /* size: 0x0008 */

typedef struct _REQUEST_RAW_ENCRYPTED_DATA
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} REQUEST_RAW_ENCRYPTED_DATA, *PREQUEST_RAW_ENCRYPTED_DATA; /* size: 0x0010 */

struct tagENVOYDATA
{
  /* 0x0000 */ struct _GUID contextId;
  /* 0x0010 */ unsigned long ulJunk1;
  /* 0x0014 */ unsigned long ulJunk2;
}; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
  /* 0x0008 */ unsigned long UiAccess;
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION; /* size: 0x000c */

struct tagRPC_CALL_ATTRIBUTES_V2_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_713;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_714;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ enum tagRpcCallClientLocality IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_715[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

typedef struct _IMAGE_NT_HEADERS64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64; /* size: 0x0108 */

typedef struct _TOKEN_OWNER
{
  /* 0x0000 */ void* Owner;
} TOKEN_OWNER, *PTOKEN_OWNER; /* size: 0x0008 */

typedef struct _SHSTOCKICONINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_716;
  /* 0x0008 */ struct HICON__* hIcon;
  /* 0x0010 */ int iSysImageIndex;
  /* 0x0014 */ int iIcon;
  /* 0x0018 */ wchar_t szPath[260];
} SHSTOCKICONINFO, *PSHSTOCKICONINFO; /* size: 0x0220 */

typedef struct __midl_frag706_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag706_t, *P_midl_frag706_t; /* size: 0x0020 */

struct tagEMRPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
}; /* size: 0x0024 */

struct tagNONCLIENTMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTA lfCaptionFont;
  /* 0x0054 */ int iSmCaptionWidth;
  /* 0x0058 */ int iSmCaptionHeight;
  /* 0x005c */ struct tagLOGFONTA lfSmCaptionFont;
  /* 0x0098 */ int iMenuWidth;
  /* 0x009c */ int iMenuHeight;
  /* 0x00a0 */ struct tagLOGFONTA lfMenuFont;
  /* 0x00dc */ struct tagLOGFONTA lfStatusFont;
  /* 0x0118 */ struct tagLOGFONTA lfMessageFont;
  /* 0x0154 */ int iPaddedBorderWidth;
}; /* size: 0x0158 */

typedef struct _CERT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_717;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0040 */ struct _FILETIME NotBefore;
  /* 0x0048 */ struct _FILETIME NotAfter;
  /* 0x0050 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0060 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0090 */ struct _CRYPT_BIT_BLOB IssuerUniqueId;
  /* 0x00a8 */ struct _CRYPT_BIT_BLOB SubjectUniqueId;
  /* 0x00c0 */ unsigned long cExtension;
  /* 0x00c4 */ long Padding_718;
  /* 0x00c8 */ struct _CERT_EXTENSION* rgExtension;
} CERT_INFO, *PCERT_INFO; /* size: 0x00d0 */

struct IObjContext
{
}; /* size: 0x0008 */

struct tagENUMLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
}; /* size: 0x011c */

struct tagMDICREATESTRUCTW
{
  /* 0x0000 */ const wchar_t* szClass;
  /* 0x0008 */ const wchar_t* szTitle;
  /* 0x0010 */ void* hOwner;
  /* 0x0018 */ int x;
  /* 0x001c */ int y;
  /* 0x0020 */ int cx;
  /* 0x0024 */ int cy;
  /* 0x0028 */ unsigned long style;
  /* 0x002c */ long Padding_719;
  /* 0x0030 */ __int64 lParam;
}; /* size: 0x0038 */

typedef struct __midl_frag309_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag309_t, *P_midl_frag309_t; /* size: 0x000c */

struct tagCWPRETSTRUCT
{
  /* 0x0000 */ __int64 lResult;
  /* 0x0008 */ __int64 lParam;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ unsigned int message;
  /* 0x001c */ long Padding_720;
  /* 0x0020 */ struct HWND__* hwnd;
}; /* size: 0x0028 */

struct tagKBDLLHOOKSTRUCT
{
  /* 0x0000 */ unsigned long vkCode;
  /* 0x0004 */ unsigned long scanCode;
  /* 0x0008 */ unsigned long flags;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

struct IComClassInfo2
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_721;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ void* CreatorUniqueProcess;
  /* 0x0018 */ unsigned short CreatorBackTraceIndex;
  /* 0x001a */ unsigned short Flags;
  /* 0x001c */ long PointerCount;
  /* 0x0020 */ long HandleCount;
  /* 0x0024 */ unsigned long PagedPoolCharge;
  /* 0x0028 */ unsigned long NonPagedPoolCharge;
  /* 0x002c */ long Padding_722;
  /* 0x0030 */ void* ExclusiveProcessId;
  /* 0x0038 */ void* SecurityDescriptor;
  /* 0x0040 */ struct _OBJECT_NAME_INFORMATION NameInfo;
} SYSTEM_OBJECT_INFORMATION, *PSYSTEM_OBJECT_INFORMATION; /* size: 0x0050 */

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA
{
  /* 0x0000 */ unsigned long Response;
  /* 0x0004 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0008 */ wchar_t* VetoName;
  /* 0x0010 */ unsigned long VetoNameLength;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_USER_RESPONSE_DATA, *PPLUGPLAY_CONTROL_USER_RESPONSE_DATA; /* size: 0x0018 */

typedef struct _NETINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwProviderVersion;
  /* 0x0008 */ unsigned long dwStatus;
  /* 0x000c */ unsigned long dwCharacteristics;
  /* 0x0010 */ unsigned __int64 dwHandle;
  /* 0x0018 */ unsigned short wNetType;
  /* 0x001a */ char Padding_723[2];
  /* 0x001c */ unsigned long dwPrinters;
  /* 0x0020 */ unsigned long dwDrives;
  /* 0x0024 */ long __PADDING__[1];
} NETINFOSTRUCT, *PNETINFOSTRUCT; /* size: 0x0028 */

struct tagDDEML_MSG_HOOK_DATA
{
  /* 0x0000 */ unsigned __int64 uiLo;
  /* 0x0008 */ unsigned __int64 uiHi;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned long Data[8];
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct RPC_DISPATCH_TABLE
{
  /* 0x0000 */ unsigned int DispatchTableCount;
  /* 0x0004 */ long Padding_724;
  /* 0x0008 */ void** DispatchTable /* function */;
  /* 0x0010 */ __int64 Reserved;
}; /* size: 0x0018 */

class CDirectory
{
  /* 0x0000 */ class CDirVector _dv;
  /* 0x0038 */ unsigned long _cdsTable;
  /* 0x003c */ long Padding_725;
  /* 0x0040 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0048 */ unsigned short _cdeEntries;
  /* 0x004a */ char Padding_726[2];
  /* 0x004c */ unsigned long _sidFirstFree;
}; /* size: 0x0050 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG32
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned long CriticalSection;
  /* 0x0008 */ struct LIST_ENTRY32 ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG32, *PRTL_CRITICAL_SECTION_DEBUG32; /* size: 0x0020 */

struct tagRPC_CALL_ATTRIBUTES_V2_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_727;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_728;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ unsigned long IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_729[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

struct tagSTGOPTIONS
{
  /* 0x0000 */ unsigned short usVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned long ulSectorSize;
  /* 0x0008 */ const wchar_t* pwcsTemplateFile;
}; /* size: 0x0010 */

typedef struct __midl_frag82_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag82_t, *P_midl_frag82_t; /* size: 0x0048 */

typedef struct __midl_frag885_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag885_t, *P_midl_frag885_t; /* size: 0x0010 */

class CUpdate
{
  /* 0x0000 */ class CDfName _dfnCurrent;
  /* 0x0042 */ class CDfName _dfnOriginal;
  /* 0x0084 */ unsigned long _dl;
  /* 0x0088 */ unsigned long _dwFlags;
  /* 0x008c */ long Padding_730;
  /* 0x0090 */ class CBasedTSetMemberPtr _ptsm;
  /* 0x0098 */ class CBasedUpdatePtr _pudNext;
  /* 0x00a0 */ class CBasedUpdatePtr _pudPrev;
}; /* size: 0x00a8 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
  /* 0x0010 */ unsigned short ClientComputerNameLength;
  /* 0x0012 */ wchar_t ClientComputerBuffer[16];
  /* 0x0032 */ char __PADDING__[6];
} FILE_PIPE_CLIENT_PROCESS_BUFFER_EX, *PFILE_PIPE_CLIENT_PROCESS_BUFFER_EX; /* size: 0x0038 */

typedef struct __midl_frag1634_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1634_t, *P_midl_frag1634_t; /* size: 0x0020 */

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

struct SCacheEntry
{
  /* 0x0000 */ unsigned long ulOffset;
  /* 0x0004 */ unsigned long sect;
  /* 0x0008 */ unsigned long ulRunLength;
}; /* size: 0x000c */

typedef struct _FILE_ZERO_DATA_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER BeyondFinalZero;
} FILE_ZERO_DATA_INFORMATION, *PFILE_ZERO_DATA_INFORMATION; /* size: 0x0010 */

struct tagMONITORINFOEXA
{
  /* 0x0000 */ long Padding_731[10];
  /* 0x0028 */ char szDevice[32];
}; /* size: 0x0048 */

typedef struct _OVERLAPPED_ENTRY
{
  /* 0x0000 */ unsigned __int64 lpCompletionKey;
  /* 0x0008 */ struct _OVERLAPPED* lpOverlapped;
  /* 0x0010 */ unsigned __int64 Internal;
  /* 0x0018 */ unsigned long dwNumberOfBytesTransferred;
  /* 0x001c */ long __PADDING__[1];
} OVERLAPPED_ENTRY, *POVERLAPPED_ENTRY; /* size: 0x0020 */

typedef struct _DISCDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_732;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0018 */ wchar_t* lpRemoteName;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} DISCDLGSTRUCTW, *PDISCDLGSTRUCTW; /* size: 0x0028 */

typedef struct _OVERLAPPED
{
  /* 0x0000 */ unsigned __int64 Internal;
  /* 0x0008 */ unsigned __int64 InternalHigh;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned long Offset;
      /* 0x0014 */ unsigned long OffsetHigh;
    }; /* size: 0x0008 */
    /* 0x0010 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0018 */ void* hEvent;
} OVERLAPPED, *POVERLAPPED; /* size: 0x0020 */

typedef struct _FILE_ACCESS_INFORMATION
{
  /* 0x0000 */ unsigned long AccessFlags;
} FILE_ACCESS_INFORMATION, *PFILE_ACCESS_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_POSITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CurrentByteOffset;
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ALL_INFORMATION
{
  /* 0x0000 */ struct _FILE_BASIC_INFORMATION BasicInformation;
  /* 0x0028 */ struct _FILE_STANDARD_INFORMATION StandardInformation;
  /* 0x0040 */ struct _FILE_INTERNAL_INFORMATION InternalInformation;
  /* 0x0048 */ struct _FILE_EA_INFORMATION EaInformation;
  /* 0x004c */ struct _FILE_ACCESS_INFORMATION AccessInformation;
  /* 0x0050 */ struct _FILE_POSITION_INFORMATION PositionInformation;
  /* 0x0058 */ struct _FILE_MODE_INFORMATION ModeInformation;
  /* 0x005c */ struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
  /* 0x0060 */ struct _FILE_NAME_INFORMATION NameInformation;
} FILE_ALL_INFORMATION, *PFILE_ALL_INFORMATION; /* size: 0x0068 */

class CStreamCache
{
  /* 0x0000 */ struct SCacheEntry _ase[9];
  /* 0x006c */ long Padding_733;
  /* 0x0070 */ class CBasedDirectStreamPtr _pds;
  /* 0x0078 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0080 */ unsigned long _sid;
  /* 0x0084 */ unsigned short _uHighCacheIndex;
  /* 0x0086 */ unsigned short _uNextCacheIndex;
  /* 0x0088 */ unsigned short _uCacheState;
}; /* size: 0x0090 */

typedef struct __midl_frag1289_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1289_t, *P_midl_frag1289_t; /* size: 0x0038 */

class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x0018 */ int m_fDone;
  /* 0x001c */ long Padding_734;
  /* 0x0020 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0028 */ struct TYPEINFOVTBL** m_pvalue;
  /* 0x0030 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x0038 */

typedef struct _MINIDUMP_THREAD_EX_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD_EX* Threads /* zero-length array */;
} MINIDUMP_THREAD_EX_LIST, *PMINIDUMP_THREAD_EX_LIST; /* size: 0x0004 */

struct IRemUnknown
{
}; /* size: 0x0008 */

struct POWER_STATE_NOTIFY_HANDLER
{
  /* 0x0000 */ void* Handler /* function */;
  /* 0x0008 */ void* Context;
}; /* size: 0x0010 */

typedef struct _custmact_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1];
  /* 0x0003 */ char __PADDING__[1];
} custmact_MIDL_PROC_FORMAT_STRING, *Pcustmact_MIDL_PROC_FORMAT_STRING; /* size: 0x0004 */

typedef struct _MINIDUMP_MISC_INFO_2
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
} MINIDUMP_MISC_INFO_2, *PMINIDUMP_MISC_INFO_2; /* size: 0x002c */

typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
} MINIDUMP_INCLUDE_THREAD_CALLBACK, *PMINIDUMP_INCLUDE_THREAD_CALLBACK; /* size: 0x0004 */

typedef struct _CRT_FLOAT
{
  /* 0x0000 */ float f;
} CRT_FLOAT, *PCRT_FLOAT; /* size: 0x0004 */

typedef struct _SYSTEM_AUDIT_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE; /* size: 0x0030 */

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ long Padding_735;
  /* 0x0010 */ void* pfnAllocate /* function */;
  /* 0x0018 */ void* pfnFree /* function */;
  /* 0x0020 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x0028 */ unsigned __int64 Reserved[5];
} NDR_USER_MARSHAL_INFO_LEVEL1, *PNDR_USER_MARSHAL_INFO_LEVEL1; /* size: 0x0050 */

struct IOleAdviseHolder
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x000c */ long Padding_736;
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ unsigned long SizeOfContext;
  /* 0x04e4 */ unsigned __int64 StackBase;
  /* 0x04ec */ unsigned __int64 StackEnd;
  /* 0x04f4 */ long __PADDING__[3];
} MINIDUMP_THREAD_CALLBACK, *PMINIDUMP_THREAD_CALLBACK; /* size: 0x0500 */

struct IRpcChannelBuffer
{
}; /* size: 0x0008 */

typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002
{
  union
  {
    /* 0x0000 */ struct _userHBITMAP* hBitmap;
    /* 0x0000 */ struct _userHPALETTE* hPalette;
    /* 0x0000 */ struct _userHGLOBAL* hGeneric;
  }; /* size: 0x0008 */
} GDI_OBJECT::__MIDL_IAdviseSink_0002, *PGDI_OBJECT::__MIDL_IAdviseSink_0002; /* size: 0x0008 */

typedef struct _GDI_OBJECT
{
  /* 0x0000 */ unsigned long ObjectType;
  /* 0x0004 */ long Padding_737;
  /* 0x0008 */ union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
} GDI_OBJECT, *PGDI_OBJECT; /* size: 0x0010 */

struct DLGITEMTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ short x;
  /* 0x000a */ short y;
  /* 0x000c */ short cx;
  /* 0x000e */ short cy;
  /* 0x0010 */ unsigned short id;
}; /* size: 0x0012 */

typedef struct __midl_frag1420_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1420_t, *P_midl_frag1420_t; /* size: 0x0038 */

typedef struct _MINIDUMP_THREAD_EX_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x000c */ long Padding_738;
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ unsigned long SizeOfContext;
  /* 0x04e4 */ unsigned __int64 StackBase;
  /* 0x04ec */ unsigned __int64 StackEnd;
  /* 0x04f4 */ unsigned __int64 BackingStoreBase;
  /* 0x04fc */ unsigned __int64 BackingStoreEnd;
  /* 0x0504 */ long __PADDING__[3];
} MINIDUMP_THREAD_EX_CALLBACK, *PMINIDUMP_THREAD_EX_CALLBACK; /* size: 0x0510 */

struct tagVS_FIXEDFILEINFO
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwStrucVersion;
  /* 0x0008 */ unsigned long dwFileVersionMS;
  /* 0x000c */ unsigned long dwFileVersionLS;
  /* 0x0010 */ unsigned long dwProductVersionMS;
  /* 0x0014 */ unsigned long dwProductVersionLS;
  /* 0x0018 */ unsigned long dwFileFlagsMask;
  /* 0x001c */ unsigned long dwFileFlags;
  /* 0x0020 */ unsigned long dwFileOS;
  /* 0x0024 */ unsigned long dwFileType;
  /* 0x0028 */ unsigned long dwFileSubtype;
  /* 0x002c */ unsigned long dwFileDateMS;
  /* 0x0030 */ unsigned long dwFileDateLS;
}; /* size: 0x0034 */

typedef struct _MINIDUMP_MODULE_CALLBACK
{
  /* 0x0000 */ wchar_t* FullPath;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long CheckSum;
  /* 0x0018 */ unsigned long TimeDateStamp;
  /* 0x001c */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x0050 */ void* CvRecord;
  /* 0x0058 */ unsigned long SizeOfCvRecord;
  /* 0x005c */ void* MiscRecord;
  /* 0x0064 */ unsigned long SizeOfMiscRecord;
} MINIDUMP_MODULE_CALLBACK, *PMINIDUMP_MODULE_CALLBACK; /* size: 0x0068 */

typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
} MINIDUMP_INCLUDE_MODULE_CALLBACK, *PMINIDUMP_INCLUDE_MODULE_CALLBACK; /* size: 0x0008 */

typedef struct _MINIDUMP_IO_CALLBACK
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long BufferBytes;
} MINIDUMP_IO_CALLBACK, *PMINIDUMP_IO_CALLBACK; /* size: 0x001c */

typedef struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long Bytes;
  /* 0x000c */ HRESULT FailureStatus;
} MINIDUMP_READ_MEMORY_FAILURE_CALLBACK, *PMINIDUMP_READ_MEMORY_FAILURE_CALLBACK; /* size: 0x0010 */

typedef struct _MINIDUMP_CALLBACK_INPUT
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ void* ProcessHandle;
  /* 0x000c */ unsigned long CallbackType;
  union
  {
    /* 0x0010 */ HRESULT Status;
    /* 0x0010 */ struct _MINIDUMP_THREAD_CALLBACK Thread;
    /* 0x0010 */ struct _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
    /* 0x0010 */ struct _MINIDUMP_MODULE_CALLBACK Module;
    /* 0x0010 */ struct _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
    /* 0x0010 */ struct _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
    /* 0x0010 */ struct _MINIDUMP_IO_CALLBACK Io;
    /* 0x0010 */ struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK ReadMemoryFailure;
    struct
    {
      /* 0x0010 */ unsigned long SecondaryFlags;
      /* 0x0014 */ long __PADDING__[323];
    }; /* size: 0x0510 */
  }; /* size: 0x0510 */
} MINIDUMP_CALLBACK_INPUT, *PMINIDUMP_CALLBACK_INPUT; /* size: 0x0520 */

typedef struct _userBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ unsigned long cbSize;
  /* 0x0018 */ unsigned char pBuffer[1];
  /* 0x0019 */ char __PADDING__[3];
} userBITMAP, *PuserBITMAP; /* size: 0x001c */

class CBasedVectBitsPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CPagedVector
{
  /* 0x0000 */ class CBasedMSFPageTablePtr _pmpt;
  /* 0x0008 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0010 */ class CBasedMSFPagePtrPtr _amp;
  /* 0x0018 */ class CBasedVectBitsPtr _avb;
  /* 0x0020 */ const unsigned long _sid;
  /* 0x0024 */ unsigned long _ulSize;
  /* 0x0028 */ unsigned long _ulAllocSize;
}; /* size: 0x0030 */

struct tagRECONVERTSTRING
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwStrLen;
  /* 0x000c */ unsigned long dwStrOffset;
  /* 0x0010 */ unsigned long dwCompStrLen;
  /* 0x0014 */ unsigned long dwCompStrOffset;
  /* 0x0018 */ unsigned long dwTargetStrLen;
  /* 0x001c */ unsigned long dwTargetStrOffset;
}; /* size: 0x0020 */

struct IObjectActivator
{
}; /* size: 0x0008 */

typedef union _userHPALETTE::__MIDL_IWinTypes_0008
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct tagLOGPALETTE* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHPALETTE::__MIDL_IWinTypes_0008, *PuserHPALETTE::__MIDL_IWinTypes_0008; /* size: 0x0008 */

typedef struct _userHPALETTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_739;
  /* 0x0008 */ union _userHPALETTE::__MIDL_IWinTypes_0008 u;
} userHPALETTE, *PuserHPALETTE; /* size: 0x0010 */

struct SPreHeader
{
  /* 0x0000 */ long Padding_740[6];
  /* 0x0018 */ unsigned short _uMinorVersion;
  /* 0x001a */ unsigned short _uDllVersion;
  /* 0x001c */ unsigned short _uByteOrder;
  /* 0x001e */ unsigned short _uSectorShift;
  /* 0x0020 */ unsigned short _uMiniSectorShift;
  /* 0x0022 */ unsigned short _usReserved;
  /* 0x0024 */ unsigned long _ulReserved1;
  /* 0x0028 */ unsigned long _csectDir;
  /* 0x002c */ unsigned long _csectFat;
  /* 0x0030 */ unsigned long _sectDirStart;
  /* 0x0034 */ unsigned long _signature;
  /* 0x0038 */ unsigned long _ulMiniSectorCutoff;
  /* 0x003c */ unsigned long _sectMiniFatStart;
  /* 0x0040 */ unsigned long _csectMiniFat;
  /* 0x0044 */ unsigned long _sectDifStart;
  /* 0x0048 */ unsigned long _csectDif;
}; /* size: 0x004c */

struct tagMENUINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ unsigned long dwStyle;
  /* 0x000c */ unsigned int cyMax;
  /* 0x0010 */ struct HBRUSH__* hbrBack;
  /* 0x0018 */ unsigned long dwContextHelpID;
  /* 0x001c */ long Padding_741;
  /* 0x0020 */ unsigned __int64 dwMenuData;
}; /* size: 0x0028 */

typedef struct __MIDL_ICallFrame_0004
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ char Padding_742[3];
  /* 0x0004 */ unsigned long dwDestContext;
  /* 0x0008 */ void* pvDestContext;
  /* 0x0010 */ struct IUnknown* punkReserved;
  /* 0x0018 */ struct _GUID guidTransferSyntax;
} _MIDL_ICallFrame_0004, *P_MIDL_ICallFrame_0004; /* size: 0x0028 */

struct tagEMRSETCOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
}; /* size: 0x000c */

typedef struct _RegOutput
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long RegKeys[1];
} RegOutput, *PRegOutput; /* size: 0x0008 */

typedef union _userHGLOBAL::__MIDL_IWinTypes_0003
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _FLAGGED_BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHGLOBAL::__MIDL_IWinTypes_0003, *PuserHGLOBAL::__MIDL_IWinTypes_0003; /* size: 0x0008 */

typedef struct _userHGLOBAL
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_743;
  /* 0x0008 */ union _userHGLOBAL::__MIDL_IWinTypes_0003 u;
} userHGLOBAL, *PuserHGLOBAL; /* size: 0x0010 */

class CMSFPageTable
{
  /* 0x0000 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0008 */ const unsigned long _cbSector;
  /* 0x000c */ const unsigned long _cMinPages;
  /* 0x0010 */ const unsigned long _cMaxPages;
  /* 0x0014 */ unsigned long _cActivePages;
  /* 0x0018 */ unsigned long _cPages;
  /* 0x001c */ long Padding_744;
  /* 0x0020 */ class CBasedMSFPagePtr _pmpCurrent;
  /* 0x0028 */ class CBasedMSFPagePtr _pmpStart;
  /* 0x0030 */ long _cReferences;
}; /* size: 0x0038 */

struct IHttpNegotiate
{
}; /* size: 0x0008 */

typedef struct __midl_frag27_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag27_t, *P_midl_frag27_t; /* size: 0x0028 */

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR_2
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
  /* 0x0020 */ unsigned long ObjectInfoRva;
  /* 0x0024 */ unsigned int Reserved0;
} MINIDUMP_HANDLE_DESCRIPTOR_2, *PMINIDUMP_HANDLE_DESCRIPTOR_2; /* size: 0x0028 */

typedef struct _FLAGGED_BYTE_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned char abData[1];
  /* 0x0009 */ char __PADDING__[3];
} FLAGGED_BYTE_BLOB, *PFLAGGED_BYTE_BLOB; /* size: 0x000c */

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON
{
  /* 0x0000 */ unsigned char AffectedState[8];
  /* 0x0008 */ unsigned long PowerReasonCode;
  /* 0x000c */ unsigned long PowerReasonLength;
} SYSTEM_POWER_STATE_DISABLE_REASON, *PSYSTEM_POWER_STATE_DISABLE_REASON; /* size: 0x0010 */

typedef struct _LDR_SECTION_INFO
{
  /* 0x0000 */ void* SectionHandle;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ long Padding_745;
  /* 0x0010 */ struct _OBJECT_ATTRIBUTES* ObjA;
  /* 0x0018 */ unsigned long SectionPageProtection;
  /* 0x001c */ unsigned long AllocationAttributes;
} LDR_SECTION_INFO, *PLDR_SECTION_INFO; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long DeviceDepth;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEPTH_DATA, *PPLUGPLAY_CONTROL_DEPTH_DATA; /* size: 0x0018 */

struct SYMSRV_INDEX_INFOW
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ wchar_t file[261];
  /* 0x020e */ char Padding_746[2];
  /* 0x0210 */ int stripped;
  /* 0x0214 */ unsigned long timestamp;
  /* 0x0218 */ unsigned long size;
  /* 0x021c */ wchar_t dbgfile[261];
  /* 0x0426 */ wchar_t pdbfile[261];
  /* 0x0630 */ struct _GUID guid;
  /* 0x0640 */ unsigned long sig;
  /* 0x0644 */ unsigned long age;
}; /* size: 0x0648 */

typedef struct _RPC_SECURITY_QOS_V3_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_747;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
} RPC_SECURITY_QOS_V3_A, *PRPC_SECURITY_QOS_V3_A; /* size: 0x0028 */

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ComTimeout;
  /* 0x000c */ unsigned long CallTimeout;
} RPC_BINDING_HANDLE_OPTIONS_V1, *PRPC_BINDING_HANDLE_OPTIONS_V1; /* size: 0x0010 */

struct IComThreadingInfo
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_THREAD
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
} MINIDUMP_THREAD, *PMINIDUMP_THREAD; /* size: 0x0030 */

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER DirectoryCount;
  /* 0x0008 */ union _LARGE_INTEGER FileCount;
  /* 0x0010 */ unsigned short FsFormatMajVersion;
  /* 0x0012 */ unsigned short FsFormatMinVersion;
  /* 0x0014 */ wchar_t FsFormatName[12];
  /* 0x002c */ long Padding_748;
  /* 0x0030 */ union _LARGE_INTEGER FormatTime;
  /* 0x0038 */ union _LARGE_INTEGER LastUpdateTime;
  /* 0x0040 */ wchar_t CopyrightInfo[34];
  /* 0x0084 */ wchar_t AbstractInfo[34];
  /* 0x00c8 */ wchar_t FormattingImplementationInfo[34];
  /* 0x010c */ wchar_t LastModifyingImplementationInfo[34];
} FILE_QUERY_ON_DISK_VOL_INFO_BUFFER, *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER; /* size: 0x0150 */

typedef struct _MINIDUMP_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
  /* 0x0018 */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x004c */ struct _MINIDUMP_LOCATION_DESCRIPTOR CvRecord;
  /* 0x0054 */ struct _MINIDUMP_LOCATION_DESCRIPTOR MiscRecord;
  /* 0x005c */ unsigned __int64 Reserved0;
  /* 0x0064 */ unsigned __int64 Reserved1;
} MINIDUMP_MODULE, *PMINIDUMP_MODULE; /* size: 0x006c */

typedef struct _MINIDUMP_MODULE_LIST
{
  /* 0x0000 */ unsigned int NumberOfModules;
  /* 0x0004 */ struct _MINIDUMP_MODULE* Modules /* zero-length array */;
} MINIDUMP_MODULE_LIST, *PMINIDUMP_MODULE_LIST; /* size: 0x0004 */

struct tagCAUB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_749;
  /* 0x0008 */ unsigned char* pElems;
}; /* size: 0x0010 */

typedef struct _OLESTREAMVTBL
{
  /* 0x0000 */ void* Get /* function */;
  /* 0x0008 */ void* Put /* function */;
} OLESTREAMVTBL, *POLESTREAMVTBL; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0018 */ wchar_t* VetoName;
  /* 0x0020 */ unsigned long VetoNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA, *PPLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA; /* size: 0x0028 */

typedef struct _BLENDFUNCTION
{
  /* 0x0000 */ unsigned char BlendOp;
  /* 0x0001 */ unsigned char BlendFlags;
  /* 0x0002 */ unsigned char SourceConstantAlpha;
  /* 0x0003 */ unsigned char AlphaFormat;
} BLENDFUNCTION, *PBLENDFUNCTION; /* size: 0x0004 */

struct tagPROPERTYIDOFFSET
{
  /* 0x0000 */ unsigned long propid;
  /* 0x0004 */ unsigned long dwOffset;
}; /* size: 0x0008 */

typedef struct _OLESTREAM
{
  /* 0x0000 */ struct _OLESTREAMVTBL* lpstbl;
} OLESTREAM, *POLESTREAM; /* size: 0x0008 */

typedef struct __midl_frag379_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag379_t, *P_midl_frag379_t; /* size: 0x0048 */

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
} MINIDUMP_HANDLE_DESCRIPTOR, *PMINIDUMP_HANDLE_DESCRIPTOR; /* size: 0x0020 */

struct <vc_attributes>::publicAttribute
{
}; /* size: 0x0001 */

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
  /* 0x0000 */ unsigned long LogPathLength;
  /* 0x0004 */ wchar_t LogPath[1];
  /* 0x0006 */ char __PADDING__[2];
} TRANSACTIONMANAGER_LOGPATH_INFORMATION, *PTRANSACTIONMANAGER_LOGPATH_INFORMATION; /* size: 0x0008 */

struct IStackWalkerStack
{
}; /* size: 0x0008 */

struct IEnumOLEVERB
{
}; /* size: 0x0008 */

struct tagDRAWTEXTPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iTabLength;
  /* 0x0008 */ int iLeftMargin;
  /* 0x000c */ int iRightMargin;
  /* 0x0010 */ unsigned int uiLengthDrawn;
}; /* size: 0x0014 */

struct IProxyManager
{
}; /* size: 0x0008 */

typedef struct _stat32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_750[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
} stat32, *Pstat32; /* size: 0x0024 */

struct <vc_attributes>::importlibAttribute
{
  /* 0x0000 */ const char* tlb_file;
}; /* size: 0x0008 */

class CRemoteUnknown
{
  /* 0x0000 */ long Padding_751[2];
  /* 0x0008 */ class CStdIdentity* _pStdId;
}; /* size: 0x0010 */

struct <vc_attributes>::pointer_defaultAttribute
{
  /* 0x0000 */ enum <vc_attributes>::pointer_defaultAttribute::type_e type;
}; /* size: 0x0004 */

typedef struct __GENERIC_BINDING_INFO
{
  /* 0x0000 */ void* pObj;
  /* 0x0008 */ unsigned int Size;
  /* 0x000c */ long Padding_752;
  /* 0x0010 */ void* pfnBind /* function */;
  /* 0x0018 */ void* pfnUnbind /* function */;
} _GENERIC_BINDING_INFO, *P_GENERIC_BINDING_INFO; /* size: 0x0020 */

struct ErrorObjectData
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwHelpContext;
  /* 0x0008 */ struct _GUID iid;
}; /* size: 0x0018 */

class CErrorObject
{
  /* 0x0000 */ long Padding_753[6];
  /* 0x0018 */ long _refCount;
  /* 0x001c */ struct ErrorObjectData _data;
  /* 0x0034 */ long Padding_754;
  /* 0x0038 */ wchar_t* _pszSource;
  /* 0x0040 */ wchar_t* _pszDescription;
  /* 0x0048 */ wchar_t* _pszHelpFile;
}; /* size: 0x0050 */

struct IMarshalOptions
{
}; /* size: 0x0008 */

struct <vc_attributes>::displaybindAttribute
{
}; /* size: 0x0001 */

typedef struct _IMAGE_DOS_HEADER
{
  /* 0x0000 */ unsigned short e_magic;
  /* 0x0002 */ unsigned short e_cblp;
  /* 0x0004 */ unsigned short e_cp;
  /* 0x0006 */ unsigned short e_crlc;
  /* 0x0008 */ unsigned short e_cparhdr;
  /* 0x000a */ unsigned short e_minalloc;
  /* 0x000c */ unsigned short e_maxalloc;
  /* 0x000e */ unsigned short e_ss;
  /* 0x0010 */ unsigned short e_sp;
  /* 0x0012 */ unsigned short e_csum;
  /* 0x0014 */ unsigned short e_ip;
  /* 0x0016 */ unsigned short e_cs;
  /* 0x0018 */ unsigned short e_lfarlc;
  /* 0x001a */ unsigned short e_ovno;
  /* 0x001c */ unsigned short e_res[4];
  /* 0x0024 */ unsigned short e_oemid;
  /* 0x0026 */ unsigned short e_oeminfo;
  /* 0x0028 */ unsigned short e_res2[10];
  /* 0x003c */ long e_lfanew;
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER; /* size: 0x0040 */

struct <vc_attributes>::idAttribute
{
  /* 0x0000 */ int id_num;
}; /* size: 0x0004 */

class CPropertyBagEx
{
  /* 0x0000 */ long Padding_755[4];
  /* 0x0010 */ int _fLcidInitialized : 1; /* bit position: 0 */
  /* 0x0014 */ unsigned long _lcid;
  /* 0x0018 */ struct IPropertySetStorage* _ppropsetstgContainer;
  /* 0x0020 */ struct IPropertyStorage* _ppropstg;
  /* 0x0028 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0030 */ unsigned long _grfMode;
  /* 0x0034 */ long _cRefs;
}; /* size: 0x0038 */

struct IInternetBindInfo
{
}; /* size: 0x0008 */

class CDdeServerCallMgr
{
  /* 0x0000 */ long Padding_756[6];
  /* 0x0018 */ class CDefClient* m_pDefClient;
  /* 0x0020 */ class CDDEServer* m_pDDEServer;
}; /* size: 0x0028 */

class CErrorChannelHook
{
}; /* size: 0x0008 */

struct CDefClient::CUnknownImpl
{
  /* 0x0000 */ long Padding_757[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

class CNtfsUpdateStreamForPropStg
{
}; /* size: 0x00b8 */

typedef struct _MIDL_STUB_MESSAGE
{
  /* 0x0000 */ struct _RPC_MESSAGE* RpcMsg;
  /* 0x0008 */ unsigned char* Buffer;
  /* 0x0010 */ unsigned char* BufferStart;
  /* 0x0018 */ unsigned char* BufferEnd;
  /* 0x0020 */ unsigned char* BufferMark;
  /* 0x0028 */ unsigned long BufferLength;
  /* 0x002c */ unsigned long MemorySize;
  /* 0x0030 */ unsigned char* Memory;
  /* 0x0038 */ unsigned char IsClient;
  /* 0x0039 */ unsigned char Pad;
  /* 0x003a */ unsigned short uFlags2;
  /* 0x003c */ int ReuseBuffer;
  /* 0x0040 */ struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
  /* 0x0048 */ struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
  /* 0x0050 */ int IgnoreEmbeddedPointers;
  /* 0x0054 */ long Padding_758;
  /* 0x0058 */ unsigned char* PointerBufferMark;
  /* 0x0060 */ unsigned char CorrDespIncrement;
  /* 0x0061 */ unsigned char uFlags;
  /* 0x0062 */ unsigned short UniquePtrCount;
  /* 0x0064 */ long Padding_759;
  /* 0x0068 */ unsigned __int64 MaxCount;
  /* 0x0070 */ unsigned long Offset;
  /* 0x0074 */ unsigned long ActualCount;
  /* 0x0078 */ void* pfnAllocate /* function */;
  /* 0x0080 */ void* pfnFree /* function */;
  /* 0x0088 */ unsigned char* StackTop;
  /* 0x0090 */ unsigned char* pPresentedType;
  /* 0x0098 */ unsigned char* pTransmitType;
  /* 0x00a0 */ void* SavedHandle;
  /* 0x00a8 */ const struct _MIDL_STUB_DESC* StubDesc;
  /* 0x00b0 */ struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
  /* 0x00b8 */ unsigned long FullPtrRefId;
  /* 0x00bc */ unsigned long PointerLength;
  struct /* bitfield */
  {
    /* 0x00c0 */ int fInDontFree : 1; /* bit position: 0 */
    /* 0x00c0 */ int fDontCallFreeInst : 1; /* bit position: 1 */
    /* 0x00c0 */ int fInOnlyParam : 1; /* bit position: 2 */
    /* 0x00c0 */ int fHasReturn : 1; /* bit position: 3 */
    /* 0x00c0 */ int fHasExtensions : 1; /* bit position: 4 */
    /* 0x00c0 */ int fHasNewCorrDesc : 1; /* bit position: 5 */
    /* 0x00c0 */ int fIsIn : 1; /* bit position: 6 */
    /* 0x00c0 */ int fIsOut : 1; /* bit position: 7 */
    /* 0x00c0 */ int fIsOicf : 1; /* bit position: 8 */
    /* 0x00c0 */ int fBufferValid : 1; /* bit position: 9 */
    /* 0x00c0 */ int fHasMemoryValidateCallback : 1; /* bit position: 10 */
    /* 0x00c0 */ int fInFree : 1; /* bit position: 11 */
    /* 0x00c0 */ int fNeedMCCP : 1; /* bit position: 12 */
    /* 0x00c0 */ int fUnused : 3; /* bit position: 13 */
    /* 0x00c0 */ int fUnused2 : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x00c4 */ unsigned long dwDestContext;
  /* 0x00c8 */ void* pvDestContext;
  /* 0x00d0 */ struct
  {
    /* 0x00d0 */ void* pad[2];
    /* 0x00e0 */ void* userContext;
  } /* size: 0x0018 */** SavedContextHandles;
  /* 0x00d8 */ long ParamNumber;
  /* 0x00dc */ long Padding_760;
  /* 0x00e0 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x00e8 */ struct ARRAY_INFO* pArrayInfo;
  /* 0x00f0 */ unsigned long* SizePtrCountArray;
  /* 0x00f8 */ unsigned long* SizePtrOffsetArray;
  /* 0x0100 */ unsigned long* SizePtrLengthArray;
  /* 0x0108 */ void* pArgQueue;
  /* 0x0110 */ unsigned long dwStubPhase;
  /* 0x0114 */ long Padding_761;
  /* 0x0118 */ void* LowStackMark;
  /* 0x0120 */ struct _NDR_ASYNC_MESSAGE* pAsyncMsg;
  /* 0x0128 */ struct _NDR_CORRELATION_INFO* pCorrInfo;
  /* 0x0130 */ unsigned char* pCorrMemory;
  /* 0x0138 */ void* pMemoryList;
  /* 0x0140 */ __int64 pCSInfo;
  /* 0x0148 */ unsigned char* ConformanceMark;
  /* 0x0150 */ unsigned char* VarianceMark;
  /* 0x0158 */ __int64 Unused;
  /* 0x0160 */ struct _NDR_PROC_CONTEXT* pContext;
  /* 0x0168 */ void* ContextHandleHash;
  /* 0x0170 */ void* pUserMarshalList;
  /* 0x0178 */ __int64 Reserved51_3;
  /* 0x0180 */ __int64 Reserved51_4;
  /* 0x0188 */ __int64 Reserved51_5;
} MIDL_STUB_MESSAGE, *PMIDL_STUB_MESSAGE; /* size: 0x0190 */

typedef struct _WIN32_FIND_STREAM_DATA
{
  /* 0x0000 */ union _LARGE_INTEGER StreamSize;
  /* 0x0008 */ wchar_t cStreamName[296];
} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA; /* size: 0x0258 */

struct <vc_attributes>::async_uuidAttribute
{
  /* 0x0000 */ const char* uuid;
}; /* size: 0x0008 */

struct tagStdUnmarshalData
{
  /* 0x0000 */ class CStdIdentity* pStdID;
  /* 0x0008 */ struct tagOBJREF* pobjref;
  /* 0x0010 */ class CObjectContext* pClientCtx;
  /* 0x0018 */ int fCreateWrapper;
  /* 0x001c */ long Padding_762;
  /* 0x0020 */ void** ppv;
  /* 0x0028 */ int fLightNA;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct NDR_ALLOC_ALL_NODES_CONTEXT;

typedef struct _CERT_HASHED_URL
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Hash;
  /* 0x0028 */ wchar_t* pwszUrl;
} CERT_HASHED_URL, *PCERT_HASHED_URL; /* size: 0x0030 */

struct <vc_attributes>::max_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0008 */

struct NDR_POINTER_QUEUE_STATE;

typedef struct _IMAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned char Name[8];
  union
  {
    union
    {
      /* 0x0008 */ unsigned long PhysicalAddress;
      /* 0x0008 */ unsigned long VirtualSize;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Misc;
  /* 0x000c */ unsigned long VirtualAddress;
  /* 0x0010 */ unsigned long SizeOfRawData;
  /* 0x0014 */ unsigned long PointerToRawData;
  /* 0x0018 */ unsigned long PointerToRelocations;
  /* 0x001c */ unsigned long PointerToLinenumbers;
  /* 0x0020 */ unsigned short NumberOfRelocations;
  /* 0x0022 */ unsigned short NumberOfLinenumbers;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER; /* size: 0x0028 */

struct <vc_attributes>::switch_typeAttribute
{
  /* 0x0000 */ const char* switch_type_specifier;
}; /* size: 0x0008 */

struct <vc_attributes>::propputAttribute
{
}; /* size: 0x0001 */

struct CDefClient::COleClientSiteImpl
{
  /* 0x0000 */ long Padding_763[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

typedef struct _CTL_FIND_SUBJECT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_764;
  /* 0x0008 */ struct _CTL_FIND_USAGE_PARA* pUsagePara;
  /* 0x0010 */ unsigned long dwSubjectType;
  /* 0x0014 */ long Padding_765;
  /* 0x0018 */ void* pvSubject;
} CTL_FIND_SUBJECT_PARA, *PCTL_FIND_SUBJECT_PARA; /* size: 0x0020 */

typedef struct _CERT_LOGOTYPE_REFERENCE
{
  /* 0x0000 */ unsigned long cHashedUrl;
  /* 0x0004 */ long Padding_766;
  /* 0x0008 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_REFERENCE, *PCERT_LOGOTYPE_REFERENCE; /* size: 0x0010 */

typedef struct _PROCESS_HANDLE_TRACING_ENTRY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ struct _CLIENT_ID ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_767;
  /* 0x0020 */ void* Stacks[16];
} PROCESS_HANDLE_TRACING_ENTRY, *PPROCESS_HANDLE_TRACING_ENTRY; /* size: 0x00a0 */

struct AsyncIRemUnknown
{
}; /* size: 0x0008 */

typedef struct _MALLOC_FREE_STRUCT
{
  /* 0x0000 */ void* pfnAllocate /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
} MALLOC_FREE_STRUCT, *PMALLOC_FREE_STRUCT; /* size: 0x0010 */

class CRefcountedObject
{
  /* 0x0000 */ unsigned long _cReferences;
}; /* size: 0x0004 */

struct tagTTPOLYCURVE
{
  /* 0x0000 */ unsigned short wType;
  /* 0x0002 */ unsigned short cpfx;
  /* 0x0004 */ struct tagPOINTFX apfx[1];
}; /* size: 0x000c */

typedef struct _COMM_FAULT_OFFSETS
{
  /* 0x0000 */ short CommOffset;
  /* 0x0002 */ short FaultOffset;
} COMM_FAULT_OFFSETS, *PCOMM_FAULT_OFFSETS; /* size: 0x0004 */

struct <vc_attributes>::oleautomationAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::wire_marshalAttribute
{
  /* 0x0000 */ const char* wire_type;
}; /* size: 0x0008 */

class CRGTypeSizes
{
  union
  {
    /* 0x0000 */ const unsigned char* m_ucTypeSizesA /* zero-length array */;
    /* 0x0000 */ const unsigned char* m_ucTypeSizesB /* zero-length array */;
  }; /* size: 0x0001 */
}; /* size: 0x0001 */

class CNtfsSTATSTGArray
{
  /* 0x0000 */ long _cRefs;
  /* 0x0004 */ long Padding_768;
  /* 0x0008 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0010 */ struct _FILE_STREAM_INFORMATION* _pFileStreamInformation;
  /* 0x0018 */ unsigned long _cFileStreamInformation;
}; /* size: 0x0020 */

struct <vc_attributes>::nonextensibleAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::odlAttribute
{
}; /* size: 0x0001 */

typedef struct _NDR_CS_ROUTINES
{
  /* 0x0000 */ struct _NDR_CS_SIZE_CONVERT_ROUTINES* pSizeConvertRoutines;
  /* 0x0008 */ void** pTagGettingRoutines /* function */;
} NDR_CS_ROUTINES, *PNDR_CS_ROUTINES; /* size: 0x0010 */

class SafeCExposedStream
{
  /* 0x0000 */ class CExposedStream* _p;
}; /* size: 0x0008 */

typedef struct __midl_frag2_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ struct _NDR64_NO_REPEAT_FORMAT frag4;
    /* 0x0030 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
    /* 0x0038 */ struct _NDR64_POINTER_FORMAT frag6;
    /* 0x0048 */ unsigned char frag7;
    /* 0x0049 */ char __PADDING__[7];
  } /* size: 0x0048 */ frag2;
} _midl_frag2_t, *P_midl_frag2_t; /* size: 0x0050 */

struct NOTIFY_USER_POWER_SETTING
{
  /* 0x0000 */ struct _GUID Guid;
}; /* size: 0x0010 */

class CExposedStream
{
  /* 0x0000 */ long Padding_769[22];
  /* 0x0058 */ class CPubStream* _pst;
  /* 0x0060 */ class CDFBasis* _pdfb;
  /* 0x0068 */ class CPerContext* _ppc;
  /* 0x0070 */ unsigned long _sig;
  /* 0x0074 */ long _cReferences;
  /* 0x0078 */ class CSeekPointer* _psp;
}; /* size: 0x0080 */

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES
{
  /* 0x0000 */ void* pfnNetSize /* function */;
  /* 0x0008 */ void* pfnToNetCs /* function */;
  /* 0x0010 */ void* pfnLocalSize /* function */;
  /* 0x0018 */ void* pfnFromNetCs /* function */;
} NDR_CS_SIZE_CONVERT_ROUTINES, *PNDR_CS_SIZE_CONVERT_ROUTINES; /* size: 0x0020 */

struct tagNFFCONTROLBITS
{
  /* 0x0000 */ unsigned short sig;
  /* 0x0002 */ unsigned short hsmStatus;
  /* 0x0004 */ unsigned long bits;
  /* 0x0008 */ struct _GUID clsid;
}; /* size: 0x0018 */

typedef struct _USER_MARSHAL_CB
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_770;
  /* 0x0008 */ struct _MIDL_STUB_MESSAGE* pStubMsg;
  /* 0x0010 */ const unsigned char* pReserve;
  /* 0x0018 */ unsigned long Signature;
  /* 0x001c */ enum _USER_MARSHAL_CB_TYPE CBType;
  /* 0x0020 */ const unsigned char* pFormat;
  /* 0x0028 */ const unsigned char* pTypeFormat;
} USER_MARSHAL_CB, *PUSER_MARSHAL_CB; /* size: 0x0030 */

class CClassCache::CDllPathEntry::CFinishObject
{
  /* 0x0000 */ long Padding_771[2];
  /* 0x0008 */ struct HINSTANCE__* _hDll;
  /* 0x0010 */ unsigned long _dwFlags;
}; /* size: 0x0018 */

struct tagHDIBFILEHDR
{
  /* 0x0000 */ unsigned long dwCompression;
  /* 0x0004 */ unsigned long dwWidth;
  /* 0x0008 */ unsigned long dwHeight;
  /* 0x000c */ unsigned long dwSize;
}; /* size: 0x0010 */

struct ICodeInstall
{
}; /* size: 0x0008 */

struct tagREMQIRESULT
{
  /* 0x0000 */ HRESULT hResult;
  /* 0x0004 */ long Padding_772;
  /* 0x0008 */ struct tagSTDOBJREF std;
}; /* size: 0x0030 */

typedef struct _CRYPT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long cAttr;
  /* 0x0004 */ long Padding_773;
  /* 0x0008 */ struct _CRYPT_ATTRIBUTE* rgAttr;
} CRYPT_ATTRIBUTES, *PCRYPT_ATTRIBUTES; /* size: 0x0010 */

typedef struct _CMSG_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_774;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0040 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0058 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0068 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0078 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_SIGNER_INFO, *PCMSG_SIGNER_INFO; /* size: 0x0088 */

struct <vc_attributes>::atl::implements_categoryAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _TOKEN_ELEVATION
{
  /* 0x0000 */ unsigned long TokenIsElevated;
} TOKEN_ELEVATION, *PTOKEN_ELEVATION; /* size: 0x0004 */

struct <vc_attributes>::length_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0008 */

struct <vc_attributes>::atl::perf_objectAttribute
{
  /* 0x0000 */ int name_res;
  /* 0x0004 */ int help_res;
  /* 0x0008 */ const char* namestring;
  /* 0x0010 */ const char* helpstring;
  /* 0x0018 */ int detail;
  /* 0x001c */ BOOL no_instances;
  /* 0x001d */ char Padding_775[3];
  /* 0x0020 */ const char* class_;
  /* 0x0028 */ int maxinstnamelen;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef class _com_error
{
  /* 0x0000 */ long Padding_776[2];
  /* 0x0008 */ const HRESULT m_hresult;
  /* 0x000c */ long Padding_777;
  /* 0x0010 */ struct IErrorInfo* m_perrinfo;
  /* 0x0018 */ wchar_t* m_pszMsg;
} com_error, *Pcom_error; /* size: 0x0020 */

class CStmHandle
{
}; /* size: 0x0010 */

struct <vc_attributes>::atl::db_columnAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0008 */ const char* dbtype;
  /* 0x0010 */ const char* precision;
  /* 0x0018 */ const char* scale;
  /* 0x0020 */ const char* status;
  /* 0x0028 */ const char* length;
}; /* size: 0x0030 */

typedef struct _CRYPT_IMAGE_REF
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long __PADDING__[1];
} CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF; /* size: 0x0010 */

class CStatArray
{
  /* 0x0000 */ long _cRefs;
  /* 0x0004 */ long Padding_778;
  /* 0x0008 */ struct tagSTATPROPSTG* _psps;
  /* 0x0010 */ unsigned long _cpropActual;
}; /* size: 0x0018 */

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION
{
  /* 0x0000 */ void* VirtualAddress;
  union
  {
    union
    {
      /* 0x0008 */ struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
      /* 0x0008 */ unsigned __int64 Long;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MEMORY_WORKING_SET_EX_INFORMATION, *PMEMORY_WORKING_SET_EX_INFORMATION; /* size: 0x0010 */

class CGlobalFileStream
{
  /* 0x0000 */ long Padding_779[4];
  /* 0x0010 */ unsigned long _df;
  /* 0x0014 */ unsigned long _dwStartFlags;
  /* 0x0018 */ struct IMalloc* const _pMalloc;
  /* 0x0020 */ unsigned __int64 _ulPos;
  /* 0x0028 */ unsigned long _cbSector;
  /* 0x002c */ unsigned long _cbMappedFileSize;
  /* 0x0030 */ unsigned long _cbMappedCommitSize;
  /* 0x0034 */ unsigned long _dwMapFlags;
  /* 0x0038 */ wchar_t _awcPath[261];
  /* 0x0242 */ char Padding_780[2];
  /* 0x0244 */ unsigned long _dwTerminate;
  /* 0x0248 */ unsigned __int64 _ulHighWater;
  /* 0x0250 */ unsigned __int64 _ulFailurePoint;
}; /* size: 0x0258 */

struct tagSTYLEBUFA
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ char szDescription[32];
}; /* size: 0x0024 */

struct <vc_attributes>::defaultvtableAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

struct IMessageFilter
{
}; /* size: 0x0008 */

class CPropertyStorage
{
  /* 0x0000 */ long Padding_781[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ struct IStorage* _pstgPropSet;
  /* 0x0018 */ struct IStream* _pstmPropSet;
  /* 0x0020 */ class CPropertySetStream* _np;
  /* 0x0028 */ class IMappedStream* _ms;
  /* 0x0030 */ enum MAPPED_STREAM_OPTS _fMSOpts;
  /* 0x0034 */ int _fInitCriticalSection;
  /* 0x0038 */ struct _RTL_CRITICAL_SECTION _CriticalSection;
  struct /* bitfield */
  {
    /* 0x0060 */ int _fUserDefinedProperties : 1; /* bit position: 0 */
    /* 0x0060 */ int _fExplicitelyProbedForWriteAccess : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0064 */ unsigned short _usCodePage;
  /* 0x0066 */ char Padding_782[2];
  /* 0x0068 */ unsigned long _dwOSVersion;
  /* 0x006c */ unsigned long _grfFlags;
  /* 0x0070 */ unsigned long _grfMode;
  /* 0x0074 */ long Padding_783;
  /* 0x0078 */ class CCoTaskAllocator _cCoTaskAllocator;
}; /* size: 0x0080 */

struct tagEMRPOLYDRAW16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
  /* 0x0020 */ unsigned char abTypes[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

struct <vc_attributes>::atl::tag_nameAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* parse_func;
}; /* size: 0x0010 */

struct tagBSTRBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_784;
  /* 0x0008 */ unsigned char* pData;
}; /* size: 0x0010 */

struct tagCAC
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_785;
  /* 0x0008 */ char* pElems;
}; /* size: 0x0010 */

struct tagCAUI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_786;
  /* 0x0008 */ unsigned short* pElems;
}; /* size: 0x0010 */

struct tagCAL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_787;
  /* 0x0008 */ long* pElems;
}; /* size: 0x0010 */

struct tagCAUL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_788;
  /* 0x0008 */ unsigned long* pElems;
}; /* size: 0x0010 */

struct tagCAH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_789;
  /* 0x0008 */ union _LARGE_INTEGER* pElems;
}; /* size: 0x0010 */

struct tagCAUH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_790;
  /* 0x0008 */ union _ULARGE_INTEGER* pElems;
}; /* size: 0x0010 */

struct tagCABOOL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_791;
  /* 0x0008 */ short* pElems;
}; /* size: 0x0010 */

struct tagCASCODE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_792;
  /* 0x0008 */ long* pElems;
}; /* size: 0x0010 */

struct tagCACY
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_793;
  /* 0x0008 */ union tagCY* pElems;
}; /* size: 0x0010 */

struct tagCADATE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_794;
  /* 0x0008 */ double* pElems;
}; /* size: 0x0010 */

struct tagCAFILETIME
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_795;
  /* 0x0008 */ struct _FILETIME* pElems;
}; /* size: 0x0010 */

struct tagCACLIPDATA
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_796;
  /* 0x0008 */ struct tagCLIPDATA* pElems;
}; /* size: 0x0010 */

struct tagCABSTRBLOB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_797;
  /* 0x0008 */ struct tagBSTRBLOB* pElems;
}; /* size: 0x0010 */

struct tagCALPSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_798;
  /* 0x0008 */ char** pElems;
}; /* size: 0x0010 */

struct tagCALPWSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_799;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

struct tagCAPROPVARIANT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_800;
  /* 0x0008 */ struct tagPROPVARIANT* pElems;
}; /* size: 0x0010 */

struct tagPROPVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ union _LARGE_INTEGER hVal;
        /* 0x0008 */ union _ULARGE_INTEGER uhVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ struct _FILETIME filetime;
        /* 0x0008 */ struct _GUID* puuid;
        /* 0x0008 */ struct tagCLIPDATA* pclipdata;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct tagBSTRBLOB bstrblobVal;
        /* 0x0008 */ struct tagBLOB blob;
        /* 0x0008 */ char* pszVal;
        /* 0x0008 */ wchar_t* pwszVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct IStream* pStream;
        /* 0x0008 */ struct IStorage* pStorage;
        /* 0x0008 */ struct tagVersionedStream* pVersionedStream;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ struct tagCAC cac;
        /* 0x0008 */ struct tagCAUB caub;
        /* 0x0008 */ struct tagCAI cai;
        /* 0x0008 */ struct tagCAUI caui;
        /* 0x0008 */ struct tagCAL cal;
        /* 0x0008 */ struct tagCAUL caul;
        /* 0x0008 */ struct tagCAH cah;
        /* 0x0008 */ struct tagCAUH cauh;
        /* 0x0008 */ struct tagCAFLT caflt;
        /* 0x0008 */ struct tagCADBL cadbl;
        /* 0x0008 */ struct tagCABOOL cabool;
        /* 0x0008 */ struct tagCASCODE cascode;
        /* 0x0008 */ struct tagCACY cacy;
        /* 0x0008 */ struct tagCADATE cadate;
        /* 0x0008 */ struct tagCAFILETIME cafiletime;
        /* 0x0008 */ struct tagCACLSID cauuid;
        /* 0x0008 */ struct tagCACLIPDATA caclipdata;
        /* 0x0008 */ struct tagCABSTR cabstr;
        /* 0x0008 */ struct tagCABSTRBLOB cabstrblob;
        /* 0x0008 */ struct tagCALPSTR calpstr;
        /* 0x0008 */ struct tagCALPWSTR calpwstr;
        /* 0x0008 */ struct tagCAPROPVARIANT capropvar;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagPROPVARIANT* pvarVal;
      }; /* size: 0x0010 */
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct tagDEC decVal;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

struct tagCLIPDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long ulClipFmt;
  /* 0x0008 */ unsigned char* pClipData;
}; /* size: 0x0010 */

class DeserializeHelper::SafeArrayDestroyer
{
}; /* size: 0x0008 */

class DeserializeHelper
{
  union
  {
    struct
    {
      /* 0x0000 */ class PMemoryAllocator* c_pMA;
      /* 0x0008 */ unsigned int m_Flags;
      /* 0x000c */ unsigned long c_cbAlloc;
      /* 0x0010 */ struct CleanupStack c_cleanupStack;
      /* 0x0170 */ int m_fIndirect;
      /* 0x0174 */ unsigned int m_CodePage;
      union
      {
        /* 0x0178 */ struct tagPROPVARIANT m_pvDummy;
        /* 0x0178 */ struct tagCLIPDATA m_clipdataDummy;
      }; /* size: 0x0018 */
    }; /* size: 0x0190 */
    /* 0x0000 */ class DeserializeHelper::SafeArrayDestroyer c_saDestroyer;
    /* 0x0000 */ class DeserializeHelper::BstrDestroyer c_bstrDestroyer;
  }; /* size: 0x0190 */
}; /* size: 0x0190 */

struct <vc_attributes>::helpstringAttribute
{
  /* 0x0000 */ const char* help_text_string;
}; /* size: 0x0008 */

class CDocfileUnmarshalFactory
{
  /* 0x0000 */ long Padding_801[4];
  /* 0x0010 */ unsigned long _sig;
}; /* size: 0x0018 */

struct tagSTATPROPBAG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char Padding_802[2];
  /* 0x000c */ struct _GUID guidPropertyType;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct IForegroundTransfer
{
}; /* size: 0x0008 */

struct IEnumSTATDATA
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  /* 0x0000 */ unsigned long UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS; /* size: 0x0004 */

class CarefulBufferReader
{
  /* 0x0000 */ unsigned char* pBuffer;
  /* 0x0008 */ unsigned __int64 cbBuffer;
}; /* size: 0x0010 */

class type_info;

class CCtxUUIDHashTable
{
}; /* size: 0x0028 */

struct IOrpcDebugNotify
{
  /* 0x0000 */ struct IOrpcDebugNotifyVtbl* lpVtbl;
}; /* size: 0x0008 */

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE
{
  /* 0x0000 */ void* CommitBase;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned __int64 ReserveSize;
} RTL_STACK_TRACE_DATABASE_CREATE, *PRTL_STACK_TRACE_DATABASE_CREATE; /* size: 0x0018 */

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL
{
  /* 0x0000 */ unsigned long ControlCode;
  /* 0x0004 */ unsigned long ControlSize;
  union
  {
    /* 0x0008 */ unsigned char ControlData[1];
    /* 0x0008 */ struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
  }; /* size: 0x0018 */
} RTL_PROCESS_BACKTRACES_CONTROL, *PRTL_PROCESS_BACKTRACES_CONTROL; /* size: 0x0020 */

typedef struct _NDR_EXPR_DESC
{
  /* 0x0000 */ const unsigned short* pOffset;
  /* 0x0008 */ const unsigned char* pFormatExpr;
} NDR_EXPR_DESC, *PNDR_EXPR_DESC; /* size: 0x0010 */

struct <vc_attributes>::helper_attributes::multi_valueAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::varargAttribute
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned long TimeIncrement;
  /* 0x0008 */ unsigned char Enable;
  /* 0x0009 */ char __PADDING__[3];
} SYSTEM_QUERY_TIME_ADJUST_INFORMATION, *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION; /* size: 0x000c */

struct <vc_attributes>::helper_attributes::as_stringAttribute
{
}; /* size: 0x0001 */

struct _NDR_ASYNC_MESSAGE;

typedef struct _WGLSWAP
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0008 */ unsigned int uiFlags;
  /* 0x000c */ long __PADDING__[1];
} WGLSWAP, *PWGLSWAP; /* size: 0x0010 */

struct InterfaceWalkerFree
{
  /* 0x0000 */ long Padding_803[2];
  /* 0x0008 */ struct ICallFrameWalker* m_pWalker;
}; /* size: 0x0010 */

typedef struct _CMC_TAGGED_CONTENT_INFO
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_804;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncodedContentInfo;
} CMC_TAGGED_CONTENT_INFO, *PCMC_TAGGED_CONTENT_INFO; /* size: 0x0018 */

class CNtfsUpdateStreamName
{
  /* 0x0000 */ wchar_t _wszName[37];
}; /* size: 0x004a */

struct IBlockingLock
{
}; /* size: 0x0008 */

typedef struct _GLYPHMETRICSFLOAT
{
  /* 0x0000 */ float gmfBlackBoxX;
  /* 0x0004 */ float gmfBlackBoxY;
  /* 0x0008 */ struct _POINTFLOAT gmfptGlyphOrigin;
  /* 0x0010 */ float gmfCellIncX;
  /* 0x0014 */ float gmfCellIncY;
} GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT; /* size: 0x0018 */

struct POWERBROADCAST_SETTING
{
  /* 0x0000 */ struct _GUID PowerSetting;
  /* 0x0010 */ unsigned long DataLength;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _SYSTEM_ALARM_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE; /* size: 0x000c */

typedef struct _TOKEN_DEFAULT_DACL
{
  /* 0x0000 */ struct _ACL* DefaultDacl;
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL; /* size: 0x0008 */

class CBasedMappedStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct <vc_attributes>::refAttribute
{
}; /* size: 0x0001 */

class CAddrExclusionList
{
  /* 0x0000 */ long Padding_805[2];
  /* 0x0008 */ long _lRefs;
  /* 0x000c */ unsigned long _dwCursor;
  /* 0x0010 */ unsigned long _dwNumStrings;
  /* 0x0014 */ long Padding_806;
  /* 0x0018 */ wchar_t** _ppszStrings;
}; /* size: 0x0020 */

class CForcedDropTarget
{
  /* 0x0000 */ struct HWND__* _hwndFDTCurrent;
  /* 0x0008 */ int _fDragDropActive;
}; /* size: 0x0010 */

typedef struct _ACL
{
  /* 0x0000 */ unsigned char AclRevision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short AclSize;
  /* 0x0004 */ unsigned short AceCount;
  /* 0x0006 */ unsigned short Sbz2;
} ACL, *PACL; /* size: 0x0008 */

struct tagXAptReleaseData
{
  /* 0x0000 */ unsigned short cIfs;
  /* 0x0002 */ char Padding_807[6];
  /* 0x0008 */ struct tagREMINTERFACEREF* pIfRefs;
  /* 0x0010 */ class CRemoteUnknown* pRemUnk;
}; /* size: 0x0018 */

class CEnumSTATPROPBAG
{
  /* 0x0000 */ long Padding_808[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ long Padding_809;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0018 */ class CSTATPROPBAGArray* _parray;
  /* 0x0020 */ unsigned long _iarray;
}; /* size: 0x0028 */

struct <vc_attributes>::helper_attributes::v1_alttypeAttribute
{
  /* 0x0000 */ enum <vc_attributes>::helper_attributes::v1_alttypeAttribute::type_e type;
}; /* size: 0x0004 */

class CNtfsStorageForPropSetStg
{
  /* 0x0000 */ long Padding_810[2];
  /* 0x0008 */ class CNtfsStorage* _pNtfsStorage;
}; /* size: 0x0010 */

struct <vc_attributes>::cpp_quoteAttribute
{
  /* 0x0000 */ const char* string;
}; /* size: 0x0008 */

struct tagDELETEITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ long Padding_811;
  /* 0x0010 */ struct HWND__* hwndItem;
  /* 0x0018 */ unsigned __int64 itemData;
}; /* size: 0x0020 */

struct IXMLDOMNotation
{
}; /* size: 0x0008 */

class CPipeProxy<double,&IID_IPipeDouble,&IID_AsyncIPipeDouble,IPipeDouble,AsyncIPipeDouble>
{
  /* 0x0000 */ long Padding_812[2];
  /* 0x0008 */ struct IUnknown* m_pUnkOuter;
  /* 0x0010 */ long m_cRef;
  /* 0x0014 */ long Padding_813;
  /* 0x0018 */ struct IPipeDouble* m_pRealProxy;
  /* 0x0020 */ struct IUnknown* m_pPullCallObj;
  /* 0x0028 */ struct AsyncIPipeDouble* m_pAsyncPullPipe;
  /* 0x0030 */ struct ISynchronize* m_pISyncPull;
  /* 0x0038 */ enum PULLSTATE m_PullState;
  /* 0x003c */ unsigned long m_cReadAhead;
  /* 0x0040 */ unsigned long m_cLastRead;
  /* 0x0044 */ unsigned long m_cKeepBufferSize;
  /* 0x0048 */ double* m_pKeepBuffer;
  /* 0x0050 */ unsigned long m_cKeepDataSize;
  /* 0x0054 */ long Padding_814;
  /* 0x0058 */ double* m_pKeepData;
  /* 0x0060 */ struct IUnknown* m_pPushCallObj;
  /* 0x0068 */ struct AsyncIPipeDouble* m_pAsyncPushPipe;
  /* 0x0070 */ struct ISynchronize* m_pISyncPush;
  /* 0x0078 */ enum PUSHSTATE m_PushState;
  /* 0x007c */ unsigned long m_cPushBufferSize;
  /* 0x0080 */ double* m_pPushBuffer;
  /* 0x0088 */ unsigned long m_cFreeSpace;
  /* 0x008c */ long Padding_815;
  /* 0x0090 */ double* m_pFreeSpace;
  /* 0x0098 */ void* PullStateFunc[14] /* function */;
  /* 0x0108 */ void* PushStateFunc[12] /* function */;
}; /* size: 0x0168 */

struct tagACTCTXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const char* lpSource;
  /* 0x0010 */ unsigned short wProcessorArchitecture;
  /* 0x0012 */ unsigned short wLangId;
  /* 0x0014 */ long Padding_816;
  /* 0x0018 */ const char* lpAssemblyDirectory;
  /* 0x0020 */ const char* lpResourceName;
  /* 0x0028 */ const char* lpApplicationName;
  /* 0x0030 */ struct HINSTANCE__* hModule;
}; /* size: 0x0038 */

class CMarshalList
{
  /* 0x0000 */ class CBasedMarshalListPtr _pmlNext;
  /* 0x0008 */ void* _pvBase;
  /* 0x0010 */ unsigned long _cntxid;
}; /* size: 0x0018 */

typedef struct _RTL_PERTHREAD_CURDIR
{
  /* 0x0000 */ struct _RTL_DRIVE_LETTER_CURDIR* CurrentDirectories;
  /* 0x0008 */ struct _UNICODE_STRING* ImageName;
  /* 0x0010 */ void* Environment;
} RTL_PERTHREAD_CURDIR, *PRTL_PERTHREAD_CURDIR; /* size: 0x0018 */

typedef struct _FILE_COMPRESSION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFORMATION, *PFILE_COMPRESSION_INFORMATION; /* size: 0x0010 */

typedef struct _VM_COUNTERS_EX
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_817;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0058 */ unsigned __int64 PrivateUsage;
} VM_COUNTERS_EX, *PVM_COUNTERS_EX; /* size: 0x0060 */

struct tagI_RpcProxyCallbackInterface
{
  /* 0x0000 */ void* IsValidMachineFn /* function */;
  /* 0x0008 */ void* GetClientAddressFn /* function */;
  /* 0x0010 */ void* GetConnectionTimeoutFn /* function */;
  /* 0x0018 */ void* PerformCalloutFn /* function */;
  /* 0x0020 */ void* FreeCalloutStateFn /* function */;
  /* 0x0028 */ void* GetClientSessionAndResourceUUIDFn /* function */;
  /* 0x0030 */ void* ProxyFilterIfFn /* function */;
  /* 0x0038 */ void* RpcProxyUpdatePerfCounterFn /* function */;
  /* 0x0040 */ void* RpcProxyUpdatePerfCounterBackendServerFn /* function */;
}; /* size: 0x0048 */

typedef struct _SERVICE_DELAYED_AUTO_START_INFO
{
  /* 0x0000 */ int fDelayedAutostart;
} SERVICE_DELAYED_AUTO_START_INFO, *PSERVICE_DELAYED_AUTO_START_INFO; /* size: 0x0004 */

struct IPersistMoniker
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemPartition;
} SYSTEM_SYSTEM_PARTITION_INFORMATION, *PSYSTEM_SYSTEM_PARTITION_INFORMATION; /* size: 0x0010 */

struct tagWIN16METAFILEPICT
{
  /* 0x0000 */ short mm;
  /* 0x0002 */ short xExt;
  /* 0x0004 */ short yExt;
  /* 0x0006 */ unsigned short hMF;
}; /* size: 0x0008 */

typedef struct _IO_COMPLETION_BASIC_INFORMATION
{
  /* 0x0000 */ long Depth;
} IO_COMPLETION_BASIC_INFORMATION, *PIO_COMPLETION_BASIC_INFORMATION; /* size: 0x0004 */

class CFormatEtc
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ long Padding_818;
  /* 0x0008 */ struct tagFORMATETC m_foretc;
}; /* size: 0x0028 */

typedef struct _SECTION_IMAGE_INFORMATION
{
  /* 0x0000 */ void* TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_819;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlusNativeReady : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ComPlusILOnly : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 2 */
      /* 0x0033 */ unsigned char ImageMappedFlat : 1; /* bit position: 3 */
      /* 0x0033 */ unsigned char Reserved : 4; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION; /* size: 0x0040 */

typedef struct _RTL_USER_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_820;
  /* 0x0008 */ void* Process;
  /* 0x0010 */ void* Thread;
  /* 0x0018 */ struct _CLIENT_ID ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION ImageInformation;
} RTL_USER_PROCESS_INFORMATION, *PRTL_USER_PROCESS_INFORMATION; /* size: 0x0068 */

struct <vc_attributes>::exportAttribute
{
}; /* size: 0x0001 */

class CEMfObject
{
  /* 0x0000 */ long Padding_821[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ long Padding_822;
  /* 0x0010 */ struct HENHMETAFILE__* m_hPres;
  /* 0x0018 */ int m_fMetaDC;
  /* 0x001c */ int m_nRecord;
  /* 0x0020 */ HRESULT m_error;
  /* 0x0024 */ long Padding_823;
  /* 0x0028 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0030 */ void* m_pfnContinue /* function */;
  /* 0x0038 */ unsigned __int64 m_dwContinue;
  /* 0x0040 */ unsigned long m_dwAspect;
  /* 0x0044 */ unsigned long m_dwSize;
  /* 0x0048 */ long m_lWidth;
  /* 0x004c */ long m_lHeight;
  /* 0x0050 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0058 */

typedef struct _CTL_VERIFY_USAGE_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long Padding_824;
  /* 0x0010 */ const struct _CTL_CONTEXT** ppCtl;
  /* 0x0018 */ unsigned long dwCtlEntryIndex;
  /* 0x001c */ long Padding_825;
  /* 0x0020 */ const struct _CERT_CONTEXT** ppSigner;
  /* 0x0028 */ unsigned long dwSignerIndex;
  /* 0x002c */ long __PADDING__[1];
} CTL_VERIFY_USAGE_STATUS, *PCTL_VERIFY_USAGE_STATUS; /* size: 0x0030 */

typedef struct _RTL_USER_PROCESS_PARAMETERS32
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ unsigned long ConsoleHandle;
  /* 0x0014 */ unsigned long ConsoleFlags;
  /* 0x0018 */ unsigned long StandardInput;
  /* 0x001c */ unsigned long StandardOutput;
  /* 0x0020 */ unsigned long StandardError;
  /* 0x0024 */ struct _CURDIR32 CurrentDirectory;
  /* 0x0030 */ struct _STRING32 DllPath;
  /* 0x0038 */ struct _STRING32 ImagePathName;
  /* 0x0040 */ struct _STRING32 CommandLine;
  /* 0x0048 */ unsigned long Environment;
  /* 0x004c */ unsigned long StartingX;
  /* 0x0050 */ unsigned long StartingY;
  /* 0x0054 */ unsigned long CountX;
  /* 0x0058 */ unsigned long CountY;
  /* 0x005c */ unsigned long CountCharsX;
  /* 0x0060 */ unsigned long CountCharsY;
  /* 0x0064 */ unsigned long FillAttribute;
  /* 0x0068 */ unsigned long WindowFlags;
  /* 0x006c */ unsigned long ShowWindowFlags;
  /* 0x0070 */ struct _STRING32 WindowTitle;
  /* 0x0078 */ struct _STRING32 DesktopInfo;
  /* 0x0080 */ struct _STRING32 ShellInfo;
  /* 0x0088 */ struct _STRING32 RuntimeData;
  /* 0x0090 */ struct _RTL_DRIVE_LETTER_CURDIR32 CurrentDirectores[32];
  /* 0x0290 */ volatile unsigned long EnvironmentSize;
} RTL_USER_PROCESS_PARAMETERS32, *PRTL_USER_PROCESS_PARAMETERS32; /* size: 0x0294 */

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION
{
  /* 0x0000 */ enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
  /* 0x0004 */ unsigned long DataValue;
} SYSTEM_WATCHDOG_TIMER_INFORMATION, *PSYSTEM_WATCHDOG_TIMER_INFORMATION; /* size: 0x0008 */

typedef struct _TRANSACTION_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Outcome;
} TRANSACTION_BASIC_INFORMATION, *PTRANSACTION_BASIC_INFORMATION; /* size: 0x0018 */

struct <vc_attributes>::helpcontextAttribute
{
  /* 0x0000 */ const char* helpcontext_value;
}; /* size: 0x0008 */

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION; /* size: 0x0014 */

struct <vc_attributes>::includelibAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef union _CLIENT_CALL_RETURN
{
  union
  {
    /* 0x0000 */ void* Pointer;
    /* 0x0000 */ __int64 Simple;
  }; /* size: 0x0008 */
} CLIENT_CALL_RETURN, *PCLIENT_CALL_RETURN; /* size: 0x0008 */

typedef struct _CRYPT_OID_FUNC_ENTRY
{
  /* 0x0000 */ const char* pszOID;
  /* 0x0008 */ void* pvFuncAddr;
} CRYPT_OID_FUNC_ENTRY, *PCRYPT_OID_FUNC_ENTRY; /* size: 0x0010 */

struct <vc_attributes>::inAttribute
{
}; /* size: 0x0001 */

struct IXMLDOMAttribute
{
}; /* size: 0x0008 */

struct <vc_attributes>::transmit_asAttribute
{
  /* 0x0000 */ const char* xmit_type;
}; /* size: 0x0008 */

typedef struct _SHRINK_VOLUME_INFORMATION
{
  /* 0x0000 */ enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
  /* 0x0004 */ long Padding_826;
  /* 0x0008 */ unsigned __int64 Flags;
  /* 0x0010 */ __int64 NewNumberOfSectors;
} SHRINK_VOLUME_INFORMATION, *PSHRINK_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _IMAGE_FUNCTION_ENTRY64
{
  /* 0x0000 */ unsigned __int64 StartingAddress;
  /* 0x0008 */ unsigned __int64 EndingAddress;
  union
  {
    /* 0x0010 */ unsigned __int64 EndOfPrologue;
    /* 0x0010 */ unsigned __int64 UnwindInfoAddress;
  }; /* size: 0x0008 */
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64; /* size: 0x0018 */

struct SGetFreeStruct
{
  /* 0x0000 */ struct CVectBits* pfb;
  /* 0x0008 */ unsigned long sect;
  /* 0x000c */ long Padding_827;
  /* 0x0010 */ class CFatSect* pfs;
  /* 0x0018 */ unsigned short isect;
  /* 0x001a */ char Padding_828[2];
  /* 0x001c */ unsigned long ipfs;
  /* 0x0020 */ unsigned long sectLast;
  /* 0x0024 */ unsigned long ipfsLast;
  /* 0x0028 */ unsigned short isectLast;
  /* 0x002a */ char Padding_829[6];
  /* 0x0030 */ class CFatSect* pfsNoScratch;
  /* 0x0038 */ unsigned long ipfsNoScratch;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

struct <vc_attributes>::defaultvalueAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ char* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
  /* 0x0034 */ long __PADDING__[1];
} ENUM_SERVICE_STATUS_PROCESSA, *PENUM_SERVICE_STATUS_PROCESSA; /* size: 0x0038 */

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned short CompoundAceType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long SidStart;
} COMPOUND_ACCESS_ALLOWED_ACE, *PCOMPOUND_ACCESS_ALLOWED_ACE; /* size: 0x0010 */

struct IWindowForBindingUI
{
}; /* size: 0x0008 */

struct <vc_attributes>::localAttribute
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

struct <vc_attributes>::defaultbindAttribute
{
}; /* size: 0x0001 */

class CDDEServer
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_dwClassFactoryKey;
  /* 0x0014 */ long Padding_830;
  /* 0x0018 */ struct IClassFactory* m_pClassFactory;
  /* 0x0020 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0048 */ int m_bTerminate;
  /* 0x004c */ long Padding_831;
  /* 0x0050 */ struct HWND__* m_hwnd;
  /* 0x0058 */ void* m_hcli;
  /* 0x0060 */ int m_termNo;
  /* 0x0064 */ int m_cSrvrClients;
  /* 0x0068 */ unsigned long m_fcfFlags;
  /* 0x006c */ enum CNVTYP m_cnvtyp;
  /* 0x0070 */ enum CHK m_chk;
  /* 0x0074 */ unsigned short m_aClass;
  /* 0x0076 */ unsigned short m_aOriginalClass;
  /* 0x0078 */ unsigned short m_aExe;
  /* 0x007a */ char Padding_832[2];
  /* 0x007c */ int m_fDoNotDestroyWindow;
}; /* size: 0x0080 */

typedef struct _PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_833;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ unsigned long SectionOffset;
  /* 0x0014 */ long Padding_834;
  /* 0x0018 */ unsigned __int64 ViewSize;
  /* 0x0020 */ void* ViewBase;
  /* 0x0028 */ void* ViewRemoteBase;
} PORT_VIEW, *PPORT_VIEW; /* size: 0x0030 */

typedef union _ASSEMBLY_VERSION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short Build;
      /* 0x0002 */ unsigned short Revision;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ASSEMBLY_VERSION, *PASSEMBLY_VERSION; /* size: 0x0008 */

class Windows::Auto<_LBLOB>
{
}; /* size: 0x0018 */

struct tagSERIALKEYSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszActivePort;
  /* 0x0010 */ wchar_t* lpszPort;
  /* 0x0018 */ unsigned int iBaudRate;
  /* 0x001c */ unsigned int iPortState;
  /* 0x0020 */ unsigned int iActive;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0004 */ long Padding_835;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} FILE_PROCESS_IDS_USING_FILE_INFORMATION, *PFILE_PROCESS_IDS_USING_FILE_INFORMATION; /* size: 0x0010 */

struct EXECUTEACK
{
  /* 0x0000 */ int f;
  /* 0x0004 */ long Padding_836;
  /* 0x0008 */ void* hdata;
  /* 0x0010 */ struct HWND__* hwndFrom;
  /* 0x0018 */ struct HWND__* hwndTo;
}; /* size: 0x0020 */

struct IComCatalogLocation
{
}; /* size: 0x0008 */

typedef struct _OBJECT_ATTRIBUTES32
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long RootDirectory;
  /* 0x0008 */ unsigned long ObjectName;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long SecurityDescriptor;
  /* 0x0014 */ unsigned long SecurityQualityOfService;
} OBJECT_ATTRIBUTES32, *POBJECT_ATTRIBUTES32; /* size: 0x0018 */

typedef struct _RTL_MODULE_BASIC_INFO
{
  /* 0x0000 */ void* ImageBase;
} RTL_MODULE_BASIC_INFO, *PRTL_MODULE_BASIC_INFO; /* size: 0x0008 */

typedef struct _RTL_MODULE_EXTENDED_INFO
{
  /* 0x0000 */ struct _RTL_MODULE_BASIC_INFO BasicInfo;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ unsigned short FileNameOffset;
  /* 0x000e */ unsigned char FullPathName[256];
  /* 0x010e */ char __PADDING__[2];
} RTL_MODULE_EXTENDED_INFO, *PRTL_MODULE_EXTENDED_INFO; /* size: 0x0110 */

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned char CurrentFrequency;
  /* 0x0001 */ unsigned char ThermalLimitFrequency;
  /* 0x0002 */ unsigned char ConstantThrottleFrequency;
  /* 0x0003 */ unsigned char DegradedThrottleFrequency;
  /* 0x0004 */ unsigned char LastBusyFrequency;
  /* 0x0005 */ unsigned char LastC3Frequency;
  /* 0x0006 */ unsigned char LastAdjustedBusyFrequency;
  /* 0x0007 */ unsigned char ProcessorMinThrottle;
  /* 0x0008 */ unsigned char ProcessorMaxThrottle;
  /* 0x0009 */ char Padding_837[3];
  /* 0x000c */ unsigned long NumberOfFrequencies;
  /* 0x0010 */ unsigned long PromotionCount;
  /* 0x0014 */ unsigned long DemotionCount;
  /* 0x0018 */ unsigned long ErrorCount;
  /* 0x001c */ unsigned long RetryCount;
  /* 0x0020 */ unsigned __int64 CurrentFrequencyTime;
  /* 0x0028 */ unsigned __int64 CurrentProcessorTime;
  /* 0x0030 */ unsigned __int64 CurrentProcessorIdleTime;
  /* 0x0038 */ unsigned __int64 LastProcessorTime;
  /* 0x0040 */ unsigned __int64 LastProcessorIdleTime;
} SYSTEM_PROCESSOR_POWER_INFORMATION, *PSYSTEM_PROCESSOR_POWER_INFORMATION; /* size: 0x0048 */

struct IEnumSCMProcessInfo
{
}; /* size: 0x0008 */

struct <vc_attributes>::providerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* uuid;
  /* 0x0010 */ int cookies;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct <vc_attributes>::propgetAttribute
{
}; /* size: 0x0001 */

typedef struct _SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ long Padding_838;
  /* 0x0008 */ void* Owner;
  /* 0x0010 */ void* Group;
  /* 0x0018 */ struct _ACL* Sacl;
  /* 0x0020 */ struct _ACL* Dacl;
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR; /* size: 0x0028 */

struct Windows::Rtl::IRtlFormattedOutputStream
{
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulEncodedAssemblyIdentityLength;
  /* 0x0008 */ unsigned long ulManifestPathType;
  /* 0x000c */ unsigned long ulManifestPathLength;
  /* 0x0010 */ union _LARGE_INTEGER liManifestLastWriteTime;
  /* 0x0018 */ unsigned long ulPolicyPathType;
  /* 0x001c */ unsigned long ulPolicyPathLength;
  /* 0x0020 */ union _LARGE_INTEGER liPolicyLastWriteTime;
  /* 0x0028 */ unsigned long ulMetadataSatelliteRosterIndex;
  /* 0x002c */ unsigned long ulManifestVersionMajor;
  /* 0x0030 */ unsigned long ulManifestVersionMinor;
  /* 0x0034 */ unsigned long ulPolicyVersionMajor;
  /* 0x0038 */ unsigned long ulPolicyVersionMinor;
  /* 0x003c */ unsigned long ulAssemblyDirectoryNameLength;
  /* 0x0040 */ const wchar_t* lpAssemblyEncodedAssemblyIdentity;
  /* 0x0048 */ const wchar_t* lpAssemblyManifestPath;
  /* 0x0050 */ const wchar_t* lpAssemblyPolicyPath;
  /* 0x0058 */ const wchar_t* lpAssemblyDirectoryName;
  /* 0x0060 */ unsigned long ulFileCount;
  /* 0x0064 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION; /* size: 0x0068 */

struct <vc_attributes>::defaultAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

struct tagREMINTERFACEREF
{
  /* 0x0000 */ struct _GUID ipid;
  /* 0x0010 */ unsigned long cPublicRefs;
  /* 0x0014 */ unsigned long cPrivateRefs;
}; /* size: 0x0018 */

struct POSTRELRIFREF
{
  /* 0x0000 */ long Padding_839[4];
  /* 0x0010 */ long cRefs;
  /* 0x0014 */ long Padding_840;
  /* 0x0018 */ class OXIDEntry* pOXIDEntry;
  /* 0x0020 */ struct IRemUnknown* pRemUnk;
  /* 0x0028 */ struct IUnknown* pAsyncRelease;
  /* 0x0030 */ unsigned short cRifRef;
  /* 0x0032 */ char Padding_841[2];
  /* 0x0034 */ struct tagREMINTERFACEREF arRifRef;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} ALPC_PORT_ASSOCIATE_COMPLETION_PORT, *PALPC_PORT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Sids;
  /* 0x0010 */ unsigned long RestrictedSidCount;
  /* 0x0014 */ unsigned long RestrictedSidLength;
  /* 0x0018 */ struct _SID_AND_ATTRIBUTES* RestrictedSids;
  /* 0x0020 */ unsigned long PrivilegeCount;
  /* 0x0024 */ unsigned long PrivilegeLength;
  /* 0x0028 */ struct _LUID_AND_ATTRIBUTES* Privileges;
  /* 0x0030 */ struct _LUID AuthenticationId;
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES; /* size: 0x0038 */

struct IClassClassicInfo3
{
}; /* size: 0x0008 */

struct tagPolicyEntry
{
  /* 0x0000 */ struct tagPolicyEntry* pNext;
  /* 0x0008 */ struct tagPolicyEntry* pPrev;
  /* 0x0010 */ unsigned long ctxEvent;
  /* 0x0014 */ long Padding_842;
  /* 0x0018 */ struct IPolicy* pPolicy;
  /* 0x0020 */ struct _GUID policyID;
}; /* size: 0x0030 */

typedef struct _CM_EISA_SLOT_INFORMATION
{
  /* 0x0000 */ unsigned char ReturnCode;
  /* 0x0001 */ unsigned char ReturnFlags;
  /* 0x0002 */ unsigned char MajorRevision;
  /* 0x0003 */ unsigned char MinorRevision;
  /* 0x0004 */ unsigned short Checksum;
  /* 0x0006 */ unsigned char NumberFunctions;
  /* 0x0007 */ unsigned char FunctionInformation;
  /* 0x0008 */ unsigned long CompressedId;
} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION; /* size: 0x000c */

typedef struct _RTL_BITMAP_RUN
{
  /* 0x0000 */ unsigned long StartingIndex;
  /* 0x0004 */ unsigned long NumberOfBits;
} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN; /* size: 0x0008 */

struct tagMSLLHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long flags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ long Padding_843;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

struct <vc_attributes>::readonlyAttribute
{
}; /* size: 0x0001 */

class COAccessControl
{
  /* 0x0000 */ long Padding_844[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_845;
  /* 0x0010 */ class COAccessControl::CImpAccessControl* m_ImpObj;
}; /* size: 0x0018 */

struct <vc_attributes>::vi_progidAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _SEC_WINNT_AUTH_IDENTITY_W
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_846;
  /* 0x0010 */ unsigned short* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_847;
  /* 0x0020 */ unsigned short* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_W, *PSEC_WINNT_AUTH_IDENTITY_W; /* size: 0x0030 */

typedef struct _RPC_SECURITY_QOS_V2_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_848;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
} RPC_SECURITY_QOS_V2_W, *PRPC_SECURITY_QOS_V2_W; /* size: 0x0020 */

struct HSPRITE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX
{
  /* 0x0000 */ unsigned long VerifyMode;
  /* 0x0004 */ unsigned long OptionChanges;
  /* 0x0008 */ struct _UNICODE_STRING PreviousBucketName;
  /* 0x0018 */ unsigned long Reserved[2];
} SYSTEM_VERIFIER_INFORMATION_EX, *PSYSTEM_VERIFIER_INFORMATION_EX; /* size: 0x0020 */

struct <vc_attributes>::iid_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
}; /* size: 0x0008 */

typedef struct _tagCODEBASEHOLD
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_849;
  /* 0x0008 */ wchar_t* szDistUnit;
  /* 0x0010 */ wchar_t* szCodeBase;
  /* 0x0018 */ unsigned long dwVersionMS;
  /* 0x001c */ unsigned long dwVersionLS;
  /* 0x0020 */ unsigned long dwStyle;
  /* 0x0024 */ long __PADDING__[1];
} tagCODEBASEHOLD, *PtagCODEBASEHOLD; /* size: 0x0028 */

struct CArray<CFormatEtc>::ArrayNode
{
  /* 0x0000 */ class CFormatEtc item;
  /* 0x0028 */ unsigned long next;
  /* 0x002c */ unsigned long prev;
}; /* size: 0x0030 */

struct tagEXTLOGPEN
{
  /* 0x0000 */ unsigned long elpPenStyle;
  /* 0x0004 */ unsigned long elpWidth;
  /* 0x0008 */ unsigned int elpBrushStyle;
  /* 0x000c */ unsigned long elpColor;
  /* 0x0010 */ unsigned __int64 elpHatch;
  /* 0x0018 */ unsigned long elpNumEntries;
  /* 0x001c */ unsigned long elpStyleEntry[1];
}; /* size: 0x0020 */

struct IOverrideTargetContext
{
}; /* size: 0x0008 */

class Windows::Rtl::CriticalSectionLockGrant
{
  /* 0x0000 */ class Windows::Rtl::CriticalSectionLock& m_Lock;
  /* 0x0008 */ BOOL m_fLocked;
}; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const wchar_t* AssemblyName;
  /* 0x0010 */ unsigned long AssemblyNameLength;
  /* 0x0014 */ unsigned long HashAlgorithm;
  /* 0x0018 */ unsigned long PseudoKey;
  /* 0x001c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DATA, *PACTIVATION_CONTEXT_ASSEMBLY_DATA; /* size: 0x0020 */

typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001
{
  union
  {
    /* 0x0000 */ unsigned long dwValue;
    /* 0x0000 */ wchar_t* pwszName;
  }; /* size: 0x0008 */
} userCLIPFORMAT::__MIDL_IWinTypes_0001, *PuserCLIPFORMAT::__MIDL_IWinTypes_0001; /* size: 0x0008 */

typedef struct _userCLIPFORMAT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_850;
  /* 0x0008 */ union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
} userCLIPFORMAT, *PuserCLIPFORMAT; /* size: 0x0010 */

typedef struct _ALPC_DATA_VIEW_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_851;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ void* ViewBase;
  /* 0x0018 */ unsigned __int64 ViewSize;
} ALPC_DATA_VIEW_ATTR, *PALPC_DATA_VIEW_ATTR; /* size: 0x0020 */

struct IDragDropHelper
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long ViewFailures;
  /* 0x0010 */ unsigned __int64 NumberOfBytesAvailable;
  /* 0x0018 */ unsigned __int64 NumberOfBytesAvailableContiguous;
} SYSTEM_SESSION_MAPPED_VIEW_INFORMATION, *PSYSTEM_SESSION_MAPPED_VIEW_INFORMATION; /* size: 0x0020 */

struct <vc_attributes>::atl::perfmonAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ BOOL register;
  /* 0x0009 */ char __PADDING__[7];
}; /* size: 0x0010 */

typedef struct _OBJECT_ATTRIBUTES64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_852;
  /* 0x0008 */ unsigned __int64 RootDirectory;
  /* 0x0010 */ unsigned __int64 ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_853;
  /* 0x0020 */ unsigned __int64 SecurityDescriptor;
  /* 0x0028 */ unsigned __int64 SecurityQualityOfService;
} OBJECT_ATTRIBUTES64, *POBJECT_ATTRIBUTES64; /* size: 0x0030 */

struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 LockPrefixTable;
  /* 0x0030 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0038 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0040 */ unsigned __int64 ProcessAffinityMask;
  /* 0x0048 */ unsigned long ProcessHeapFlags;
  /* 0x004c */ unsigned short CSDVersion;
  /* 0x004e */ unsigned short Reserved1;
  /* 0x0050 */ unsigned __int64 EditList;
  /* 0x0058 */ unsigned __int64 SecurityCookie;
  /* 0x0060 */ unsigned __int64 SEHandlerTable;
  /* 0x0068 */ unsigned __int64 SEHandlerCount;
}; /* size: 0x0070 */

struct <vc_attributes>::atl::db_tableAttribute
{
  /* 0x0000 */ const char* table;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* source_name;
  /* 0x0018 */ const char* hresult;
  /* 0x0020 */ const char* bulk_fetch;
}; /* size: 0x0028 */

typedef struct _TXFS_SAVEPOINT_INFORMATION
{
  /* 0x0000 */ void* KtmTransaction;
  /* 0x0008 */ unsigned long ActionCode;
  /* 0x000c */ unsigned long SavepointId;
} TXFS_SAVEPOINT_INFORMATION, *PTXFS_SAVEPOINT_INFORMATION; /* size: 0x0010 */

struct PARAM_ATTRIBUTES
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short ServerAllocSize : 3; /* bit position: 13 */
  }; /* bitfield */
}; /* size: 0x0002 */

struct PARAM_DESCRIPTION
{
  /* 0x0000 */ struct PARAM_ATTRIBUTES ParamAttr;
  /* 0x0002 */ unsigned short StackOffset;
  union
  {
    /* 0x0004 */ unsigned short TypeOffset;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Unused;
    } /* size: 0x0002 */ SimpleType;
  }; /* size: 0x0002 */
}; /* size: 0x0006 */

typedef struct __midl_frag863_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag863_t, *P_midl_frag863_t; /* size: 0x000c */

typedef struct _RASTERIZER_STATUS
{
  /* 0x0000 */ short nSize;
  /* 0x0002 */ short wFlags;
  /* 0x0004 */ short nLanguageID;
} RASTERIZER_STATUS, *PRASTERIZER_STATUS; /* size: 0x0006 */

class CBasedDFBasisPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct <vc_attributes>::atl::requires_categoryAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct __midl_frag751_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag751_t, *P_midl_frag751_t; /* size: 0x0038 */

struct tagEMRPOLYTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ long cStrings;
  /* 0x0028 */ struct tagEMRTEXT aemrtext[1];
}; /* size: 0x0050 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_854;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
  /* 0x0028 */ void* Extra1;
  /* 0x0030 */ void* Extra2;
  /* 0x0038 */ void* Extra3;
  /* 0x0040 */ void* Extra4;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED; /* size: 0x0048 */

struct IInternet
{
}; /* size: 0x0008 */

struct <vc_attributes>::atl::registration_scriptAttribute
{
  /* 0x0000 */ const char* script;
}; /* size: 0x0008 */

class CExposedDocFile
{
  /* 0x0000 */ long Padding_855[36];
  /* 0x0090 */ class CPubDocFile* _pdf;
  /* 0x0098 */ class CDFBasis* _pdfb;
  /* 0x00a0 */ class CPerContext* _ppc;
  /* 0x00a8 */ unsigned long _sig;
  /* 0x00ac */ long _cReferences;
  /* 0x00b0 */ class CPropertyBagEx _PropertyBagEx;
}; /* size: 0x00e8 */

typedef struct _RC_CONFIG
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwLength;
  /* 0x0008 */ unsigned long dwRCConfigVersion;
  /* 0x000c */ unsigned long dwFilePathType;
  /* 0x0010 */ unsigned long dwFileType;
  /* 0x0014 */ unsigned long dwSystemAttributes;
  /* 0x0018 */ unsigned long dwUltimateFallbackLocation;
  /* 0x001c */ unsigned long dwServiceCheckSum[4];
  /* 0x002c */ unsigned long dwChecksum[4];
  /* 0x003c */ unsigned long dwReserved1;
  /* 0x0040 */ unsigned long dwReserved2;
  /* 0x0044 */ unsigned long dwMUIFileNameOffset;
  /* 0x0048 */ unsigned long dwMUIFileNameLength;
  /* 0x004c */ unsigned long dwMUIFilePathOffset;
  /* 0x0050 */ unsigned long dwMUIFilePathLength;
  /* 0x0054 */ unsigned long dwMainResNameTypesOffset;
  /* 0x0058 */ unsigned long dwMainResNameTypesLength;
  /* 0x005c */ unsigned long dwMainResIDTypesOffset;
  /* 0x0060 */ unsigned long dwMainResIDTypesLength;
  /* 0x0064 */ unsigned long dwMUIResNameTypesOffset;
  /* 0x0068 */ unsigned long dwMUIResNameTypesLength;
  /* 0x006c */ unsigned long dwMUIResIDTypesOffset;
  /* 0x0070 */ unsigned long dwMUIResIDTypesLength;
  /* 0x0074 */ unsigned long dwLanguageOffset;
  /* 0x0078 */ unsigned long dwLanguageLength;
  /* 0x007c */ unsigned long dwUltimateFallbackLanguageOffset;
  /* 0x0080 */ unsigned long dwUltimateFallbackLanguageLength;
} RC_CONFIG, *PRC_CONFIG; /* size: 0x0084 */

struct tagEMRSTRETCHDIBITS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ long cxDest;
  /* 0x004c */ long cyDest;
}; /* size: 0x0050 */

class CSurrogateProcessActivator
{
  /* 0x0000 */ long Padding_856[14];
  /* 0x0038 */ long m_lRC;
  /* 0x003c */ long Padding_857;
  /* 0x0040 */ void* m_hInitThread;
  /* 0x0048 */ void* m_hStopPingingSCM;
  union
  {
    struct
    {
      /* 0x0000 */ const int PING_INTERVAL;
      /* 0x0004 */ long Padding_858[19];
      /* 0x0050 */ struct IComProcessInfo* m_pIComProcessInfo;
      /* 0x0058 */ struct IProcessServerInfo* m_pIProcessServerInfo;
      /* 0x0060 */ class CStdIdentity* m_pStdID;
      /* 0x0068 */ struct ISurrogate* m_pISurrogate;
      /* 0x0070 */ struct HINSTANCE__* m_hCOMSVCS;
      /* 0x0078 */ struct IServicesSink* m_pServices;
      /* 0x0080 */ void* m_hInitCompleted;
      /* 0x0088 */ void* m_hFusionContext;
      /* 0x0090 */ unsigned long m_ulServicesPing;
      /* 0x0094 */ unsigned long m_ulInitTimeout;
    }; /* size: 0x004c */
    struct
    {
      /* 0x0000 */ const int TIMEOUT_SERVICES;
      /* 0x0004 */ long Padding_859[37];
      /* 0x0098 */ long m_lProcessRefCount;
      /* 0x009c */ long Padding_860;
      /* 0x00a0 */ struct _RTL_CRITICAL_SECTION m_timeoutLock;
      /* 0x00c8 */ int m_bLockValid;
      /* 0x00cc */ long Padding_861;
      /* 0x00d0 */ void* m_hTimeoutEvent;
      /* 0x00d8 */ enum _TAG_UNNAMED_23 m_timeoutState;
      /* 0x00dc */ unsigned long m_cActivations;
      /* 0x00e0 */ unsigned long m_cMillisecondsTilDeath;
      /* 0x00e4 */ unsigned long m_cTimeoutPeriod;
      /* 0x00e8 */ int m_bPaused;
    }; /* size: 0x0050 */
    struct
    {
      /* 0x0000 */ const int TIMEOUT_SPINLOCK;
      /* 0x0004 */ long Padding_862[58];
      /* 0x00ec */ int m_bInitNotified;
    }; /* size: 0x0008 */
    /* 0x0000 */ const int MAX_SRV_NAME_LEN;
  }; /* size: 0x0050 */
  /* 0x0050 */ long Padding_863[40];
  /* 0x00f0 */ void* m_hNTServiceThread;
  /* 0x00f8 */ void* m_hServiceStarted;
  /* 0x0100 */ struct SERVICE_STATUS_HANDLE__* m_hNTServiceHandle;
  /* 0x0108 */ struct _SERVICE_STATUS m_NTServiceStatus;
  /* 0x0124 */ long Padding_864;
  /* 0x0128 */ struct _RTL_CRITICAL_SECTION m_serviceStatusLock;
  /* 0x0150 */ int m_fServiceStatusLockValid;
  /* 0x0154 */ wchar_t m_NTServiceName[256];
}; /* size: 0x0358 */

struct IComServices2
{
}; /* size: 0x0008 */

struct <vc_attributes>::atl::request_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* sdl;
}; /* size: 0x0010 */

struct tagPROPSPEC
{
  /* 0x0000 */ unsigned long ulKind;
  /* 0x0004 */ long Padding_865;
  union
  {
    /* 0x0008 */ unsigned long propid;
    /* 0x0008 */ wchar_t* lpwstr;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct <vc_attributes>::caseAttribute
{
  /* 0x0000 */ int value;
}; /* size: 0x0004 */

struct HRSRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct <vc_attributes>::atl::perf_counterAttribute
{
  /* 0x0000 */ const char* namestring;
  /* 0x0008 */ const char* helpstring;
  /* 0x0010 */ int name_res;
  /* 0x0014 */ int help_res;
  /* 0x0018 */ int countertype;
  /* 0x001c */ int defscale;
  /* 0x0020 */ BOOL default_counter;
  /* 0x0021 */ char Padding_866[3];
  /* 0x0024 */ int detail;
  /* 0x0028 */ int max_counter_size;
  /* 0x002c */ long Padding_867;
  /* 0x0030 */ const char* countertype_string;
}; /* size: 0x0038 */

typedef struct _TAPE_WRITE_MARKS
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned char Immediate;
  /* 0x0009 */ char __PADDING__[3];
} TAPE_WRITE_MARKS, *PTAPE_WRITE_MARKS; /* size: 0x000c */

class CPSHashTable
{
}; /* size: 0x0028 */

class CPSTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class CPSHashTable s_PSHashTbl;
    /* 0x0000 */ struct SHashChain s_PSBuckets[23];
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

struct IStream
{
}; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA
{
  /* 0x0000 */ void* UserFileHandle;
  /* 0x0008 */ long Status;
  /* 0x000c */ unsigned long DeviceInstanceLen;
  /* 0x0010 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_TARGET_RELATION_DATA, *PPLUGPLAY_CONTROL_TARGET_RELATION_DATA; /* size: 0x0018 */

struct <vc_attributes>::helper_attributes::v1_earlyAttribute
{
}; /* size: 0x0001 */

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* DllName;
  /* 0x0008 */ unsigned long DllFlags;
  /* 0x000c */ long Padding_868;
  /* 0x0010 */ void* DllAddress;
  /* 0x0018 */ struct _RTL_VERIFIER_THUNK_DESCRIPTOR* DllThunks;
} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR; /* size: 0x0020 */

class CVerifierTlsData
{
  /* 0x0000 */ class CVerifierStackData stackComInit;
  /* 0x0018 */ class CVerifierStackData stackComUninit;
  /* 0x0030 */ class CVerifierStackData stackOLEInit;
  /* 0x0048 */ class CVerifierStackData stackOLEUninit;
  /* 0x0060 */ class CVerifierStackData stackEnterSWC;
  /* 0x0078 */ class CVerifierStackData stackLeaveSWC;
}; /* size: 0x0090 */

struct tagVersionedStream
{
  /* 0x0000 */ struct _GUID guidVersion;
  /* 0x0010 */ struct IStream* pStream;
}; /* size: 0x0018 */

struct <vc_attributes>::last_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0008 */

struct IViewObjectEx
{
}; /* size: 0x0008 */

struct <vc_attributes>::helper_attributes::requires_valueAttribute
{
}; /* size: 0x0001 */

typedef struct _REPARSE_GUID_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ struct _GUID ReparseGuid;
  struct
  {
    /* 0x0018 */ unsigned char DataBuffer[1];
  } /* size: 0x0001 */ GenericReparseBuffer;
  /* 0x0019 */ char __PADDING__[3];
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER; /* size: 0x001c */

struct <vc_attributes>::implementsAttribute
{
  /* 0x0000 */ const char* interfaces;
  /* 0x0008 */ const char* dispinterfaces;
}; /* size: 0x0010 */

class streambuf
{
  /* 0x0000 */ long Padding_869[2];
  /* 0x0008 */ int _fAlloc;
  /* 0x000c */ int _fUnbuf;
  /* 0x0010 */ int x_lastc;
  /* 0x0014 */ long Padding_870;
  /* 0x0018 */ char* _base;
  /* 0x0020 */ char* _ebuf;
  /* 0x0028 */ char* _pbase;
  /* 0x0030 */ char* _pptr;
  /* 0x0038 */ char* _epptr;
  /* 0x0040 */ char* _eback;
  /* 0x0048 */ char* _gptr;
  /* 0x0050 */ char* _egptr;
  /* 0x0058 */ int LockFlg;
  /* 0x005c */ long Padding_871;
  /* 0x0060 */ struct _CRT_CRITICAL_SECTION x_lock;
}; /* size: 0x0088 */

struct <vc_attributes>::appobjectAttribute
{
}; /* size: 0x0001 */

class ostream
{
  /* 0x0000 */ long Padding_872[2];
  /* 0x0008 */ int x_floatused;
}; /* size: 0x0080 */

struct IXMLDOMDocument
{
}; /* size: 0x0008 */

class CPipePSFactory
{
  /* 0x0000 */ long Padding_873[2];
  /* 0x0008 */ long m_cRef;
}; /* size: 0x0010 */

class CEventSem
{
  /* 0x0000 */ void* _hEvent;
}; /* size: 0x0008 */

typedef struct _REMOTE_REQUEST_SCM_INFO
{
  /* 0x0000 */ unsigned long ClientImpLevel;
  /* 0x0004 */ unsigned short cRequestedProtseqs;
  /* 0x0006 */ char Padding_874[2];
  /* 0x0008 */ unsigned short* pRequestedProtseqs;
} REMOTE_REQUEST_SCM_INFO, *PREMOTE_REQUEST_SCM_INFO; /* size: 0x0010 */

struct tagRAWINPUTDEVICELIST
{
  /* 0x0000 */ void* hDevice;
  /* 0x0008 */ unsigned long dwType;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct <vc_attributes>::first_isAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _tagDdeClassInfo
{
  /* 0x0000 */ unsigned long dwContextMask;
  /* 0x0004 */ int fClaimFactory;
  /* 0x0008 */ unsigned long dwContext;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwThreadId;
  /* 0x0014 */ unsigned long dwRegistrationKey;
  /* 0x0018 */ struct IUnknown* punk;
} tagDdeClassInfo, *PtagDdeClassInfo; /* size: 0x0020 */

struct <vc_attributes>::importidlAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _SECURITY_SEED_AND_LENGTH
{
  /* 0x0000 */ unsigned char Length;
  /* 0x0001 */ unsigned char Seed;
} SECURITY_SEED_AND_LENGTH, *PSECURITY_SEED_AND_LENGTH; /* size: 0x0002 */

struct <vc_attributes>::helper_attributes::v1_nameAttribute
{
  /* 0x0000 */ const char* name;
}; /* size: 0x0008 */

class CAddrControl
{
}; /* size: 0x0010 */

struct IActivationProperties
{
}; /* size: 0x0008 */

typedef struct _TRIVERTEX
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
  /* 0x0008 */ unsigned short Red;
  /* 0x000a */ unsigned short Green;
  /* 0x000c */ unsigned short Blue;
  /* 0x000e */ unsigned short Alpha;
} TRIVERTEX, *PTRIVERTEX; /* size: 0x0010 */

struct ICreateTypeInfo
{
}; /* size: 0x0008 */

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long Reserved[10];
} PUBLIC_OBJECT_BASIC_INFORMATION, *PPUBLIC_OBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _CTL_CONTEXT
{
  /* 0x0000 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0004 */ long Padding_875;
  /* 0x0008 */ unsigned char* pbCtlEncoded;
  /* 0x0010 */ unsigned long cbCtlEncoded;
  /* 0x0014 */ long Padding_876;
  /* 0x0018 */ struct _CTL_INFO* pCtlInfo;
  /* 0x0020 */ void* hCertStore;
  /* 0x0028 */ void* hCryptMsg;
  /* 0x0030 */ unsigned char* pbCtlContent;
  /* 0x0038 */ unsigned long cbCtlContent;
  /* 0x003c */ long __PADDING__[1];
} CTL_CONTEXT, *PCTL_CONTEXT; /* size: 0x0040 */

struct tagWNDCLASSW
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ long Padding_877;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const wchar_t* lpszMenuName;
  /* 0x0040 */ const wchar_t* lpszClassName;
}; /* size: 0x0048 */

typedef struct _SYSTEM_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long ProcessorFeatureBits;
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION; /* size: 0x000c */

struct <vc_attributes>::library_blockAttribute
{
}; /* size: 0x0001 */

typedef struct _INDIRECTPROPERTY
{
  /* 0x0000 */ unsigned long Index;
  /* 0x0004 */ long Padding_878;
  /* 0x0008 */ wchar_t* poszName;
} INDIRECTPROPERTY, *PINDIRECTPROPERTY; /* size: 0x0010 */

typedef struct _OUTLINETEXTMETRICW
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICW otmTextMetrics;
  /* 0x0040 */ unsigned char otmFiller;
  /* 0x0041 */ struct tagPANOSE otmPanoseNumber;
  /* 0x004b */ char Padding_879;
  /* 0x004c */ unsigned int otmfsSelection;
  /* 0x0050 */ unsigned int otmfsType;
  /* 0x0054 */ int otmsCharSlopeRise;
  /* 0x0058 */ int otmsCharSlopeRun;
  /* 0x005c */ int otmItalicAngle;
  /* 0x0060 */ unsigned int otmEMSquare;
  /* 0x0064 */ int otmAscent;
  /* 0x0068 */ int otmDescent;
  /* 0x006c */ unsigned int otmLineGap;
  /* 0x0070 */ unsigned int otmsCapEmHeight;
  /* 0x0074 */ unsigned int otmsXHeight;
  /* 0x0078 */ struct tagRECT otmrcFontBox;
  /* 0x0088 */ int otmMacAscent;
  /* 0x008c */ int otmMacDescent;
  /* 0x0090 */ unsigned int otmMacLineGap;
  /* 0x0094 */ unsigned int otmusMinimumPPEM;
  /* 0x0098 */ struct tagPOINT otmptSubscriptSize;
  /* 0x00a0 */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a8 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00b0 */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b8 */ unsigned int otmsStrikeoutSize;
  /* 0x00bc */ int otmsStrikeoutPosition;
  /* 0x00c0 */ int otmsUnderscoreSize;
  /* 0x00c4 */ int otmsUnderscorePosition;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00d0 */ char* otmpFaceName;
  /* 0x00d8 */ char* otmpStyleName;
  /* 0x00e0 */ char* otmpFullName;
} OUTLINETEXTMETRICW, *POUTLINETEXTMETRICW; /* size: 0x00e8 */

struct IPrivActivationContextInfo
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_BIGPOOL_ENTRY
{
  union
  {
    /* 0x0000 */ void* VirtualAddress;
    /* 0x0000 */ unsigned __int64 NonPaged : 1; /* bit position: 0 */
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 SizeInBytes;
  union
  {
    /* 0x0010 */ unsigned char Tag[4];
    /* 0x0010 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_BIGPOOL_ENTRY, *PSYSTEM_BIGPOOL_ENTRY; /* size: 0x0018 */

struct LIST_ENTRY64
{
  /* 0x0000 */ unsigned __int64 Flink;
  /* 0x0008 */ unsigned __int64 Blink;
}; /* size: 0x0010 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG64
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_880;
  /* 0x0008 */ unsigned __int64 CriticalSection;
  /* 0x0010 */ struct LIST_ENTRY64 ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG64, *PRTL_CRITICAL_SECTION_DEBUG64; /* size: 0x0030 */

typedef struct __midl_frag617_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ unsigned int frag5;
  /* 0x004c */ long __PADDING__[1];
} _midl_frag617_t, *P_midl_frag617_t; /* size: 0x0050 */

struct tagInstanceInfoData
{
  /* 0x0000 */ wchar_t* fileName;
  /* 0x0008 */ unsigned long mode;
  /* 0x000c */ long Padding_881;
  /* 0x0010 */ struct tagMInterfacePointer* ifdROT;
  /* 0x0018 */ struct tagMInterfacePointer* ifdStg;
}; /* size: 0x0020 */

typedef struct _DOCINFOA
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ long Padding_882;
  /* 0x0008 */ const char* lpszDocName;
  /* 0x0010 */ const char* lpszOutput;
  /* 0x0018 */ const char* lpszDatatype;
  /* 0x0020 */ unsigned long fwType;
  /* 0x0024 */ long __PADDING__[1];
} DOCINFOA, *PDOCINFOA; /* size: 0x0028 */

struct MOVE_FILE_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct MENUITEMTEMPLATEHEADER
{
  /* 0x0000 */ unsigned short versionNumber;
  /* 0x0002 */ unsigned short offset;
}; /* size: 0x0004 */

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE; /* size: 0x000c */

typedef struct _RPC_SECURITY_QOS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
} RPC_SECURITY_QOS, *PRPC_SECURITY_QOS; /* size: 0x0010 */

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ unsigned long dwUnauthAttrIndex;
} CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x000c */

typedef struct _KERNEL_USER_TIMES
{
  /* 0x0000 */ union _LARGE_INTEGER CreateTime;
  /* 0x0008 */ union _LARGE_INTEGER ExitTime;
  /* 0x0010 */ union _LARGE_INTEGER KernelTime;
  /* 0x0018 */ union _LARGE_INTEGER UserTime;
} KERNEL_USER_TIMES, *PKERNEL_USER_TIMES; /* size: 0x0020 */

typedef struct _PATHNAME_BUFFER
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} PATHNAME_BUFFER, *PPATHNAME_BUFFER; /* size: 0x0008 */

typedef struct _DECRYPTION_STATUS_BUFFER
{
  /* 0x0000 */ unsigned char NoEncryptedStreams;
} DECRYPTION_STATUS_BUFFER, *PDECRYPTION_STATUS_BUFFER; /* size: 0x0001 */

struct AENTRY
{
  /* 0x0000 */ unsigned long dwCollision;
  /* 0x0004 */ long Padding_883;
  /* 0x0008 */ void* pAllocation;
}; /* size: 0x0010 */

struct IUrlMon
{
}; /* size: 0x0008 */

struct IProvideMultipleClassInfo
{
}; /* size: 0x0008 */

struct FIND_BY_SID_DATA
{
  /* 0x0000 */ unsigned long Restart;
  /* 0x0004 */ struct _SID Sid;
}; /* size: 0x0010 */

typedef struct _APP_COMPAT_GOO
{
  /* 0x0000 */ unsigned long dwTotalGooSize;
  /* 0x0004 */ struct _PRE_APP_COMPAT_INFO AppCompatEntry[1];
} APP_COMPAT_GOO, *PAPP_COMPAT_GOO; /* size: 0x000c */

class CDebugEventFire
{
  /* 0x0000 */ long Padding_884[2];
  /* 0x0008 */ unsigned long _cRef;
  /* 0x000c */ long Padding_885;
  /* 0x0010 */ struct _RTL_CRITICAL_SECTION _csEventFire;
  /* 0x0038 */ int _fLogDisabled;
  /* 0x003c */ struct _GUID _guidSession;
  /* 0x004c */ long Padding_886;
  /* 0x0050 */ wchar_t* _strSessionName;
  /* 0x0058 */ struct ISystemDebugEventFire* _pEventFire;
  /* 0x0060 */ struct IUnknown* _punkFTM;
}; /* size: 0x0068 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned __int64 UniqueProcessId;
  /* 0x0010 */ unsigned __int64 HandleValue;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned short CreatorBackTraceIndex;
  /* 0x001e */ unsigned short ObjectTypeIndex;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ unsigned long Reserved;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX; /* size: 0x0028 */

typedef struct _SYSTEM_HANDLE_INFORMATION_EX
{
  /* 0x0000 */ unsigned __int64 NumberOfHandles;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX; /* size: 0x0038 */

typedef struct __midl_frag1650_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1650_t, *P_midl_frag1650_t; /* size: 0x000c */

typedef struct _RPC_PROTSEQ_VECTORW
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ long Padding_887;
  /* 0x0008 */ unsigned short* Protseq[1];
} RPC_PROTSEQ_VECTORW, *PRPC_PROTSEQ_VECTORW; /* size: 0x0010 */

typedef struct __midl_frag1269_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1269_t, *P_midl_frag1269_t; /* size: 0x0048 */

class CServerSecurity
{
  union
  {
    /* 0x0000 */ class CPageAllocator _palloc;
    struct
    {
      /* 0x0000 */ class COleStaticMutexSem _mxs;
      /* 0x0018 */ unsigned long _iRefCount;
      /* 0x001c */ unsigned long _iFlags;
      /* 0x0020 */ class CChannelHandle* _pHandle;
      /* 0x0028 */ void* _hRpc;
      /* 0x0030 */ class CMessageCall* _pClientCall;
      /* 0x0038 */ void* _hSaved;
    }; /* size: 0x0078 */
  }; /* size: 0x0080 */
}; /* size: 0x0040 */

typedef struct __midl_frag539_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag539_t, *P_midl_frag539_t; /* size: 0x0038 */

struct IInternetProtocolSink
{
}; /* size: 0x0008 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<2>
{
} RTL_CONSTANT_STRING_remove_const_template_class<2>, *PRTL_CONSTANT_STRING_remove_const_template_class<2>; /* size: 0x0001 */

struct SPatternEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long ulEntryLen;
  /* 0x0014 */ long lFileOffset;
  /* 0x0018 */ unsigned long ulCb;
  /* 0x001c */ unsigned char abData[4];
}; /* size: 0x0020 */

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long Reserved[22];
} _PUBLIC_OBJECT_TYPE_INFORMATION, *P_PUBLIC_OBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef struct _RPC_BINDING_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_888;
  /* 0x0008 */ void* BindingH[1];
} RPC_BINDING_VECTOR, *PRPC_BINDING_VECTOR; /* size: 0x0010 */

typedef struct _MEMORYSTATUSEX
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 ullTotalPhys;
  /* 0x0010 */ unsigned __int64 ullAvailPhys;
  /* 0x0018 */ unsigned __int64 ullTotalPageFile;
  /* 0x0020 */ unsigned __int64 ullAvailPageFile;
  /* 0x0028 */ unsigned __int64 ullTotalVirtual;
  /* 0x0030 */ unsigned __int64 ullAvailVirtual;
  /* 0x0038 */ unsigned __int64 ullAvailExtendedVirtual;
} MEMORYSTATUSEX, *PMEMORYSTATUSEX; /* size: 0x0040 */

struct IXMLElement2
{
}; /* size: 0x0008 */

typedef struct _FILE_SFIO_RESERVE_INFORMATION
{
  /* 0x0000 */ unsigned long RequestsPerPeriod;
  /* 0x0004 */ unsigned long Period;
  /* 0x0008 */ unsigned char RetryFailures;
  /* 0x0009 */ unsigned char Discardable;
  /* 0x000a */ char Padding_889[2];
  /* 0x000c */ unsigned long RequestSize;
  /* 0x0010 */ unsigned long NumOutstandingRequests;
} FILE_SFIO_RESERVE_INFORMATION, *PFILE_SFIO_RESERVE_INFORMATION; /* size: 0x0014 */

typedef struct __midl_frag1639_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1639_t, *P_midl_frag1639_t; /* size: 0x000c */

typedef struct _TRANSACTION_BIND_INFORMATION
{
  /* 0x0000 */ void* TmHandle;
} TRANSACTION_BIND_INFORMATION, *PTRANSACTION_BIND_INFORMATION; /* size: 0x0008 */

struct tagSTATPROPSETSTG
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ struct _GUID clsid;
  /* 0x0020 */ unsigned long grfFlags;
  /* 0x0024 */ struct _FILETIME mtime;
  /* 0x002c */ struct _FILETIME ctime;
  /* 0x0034 */ struct _FILETIME atime;
  /* 0x003c */ unsigned long dwOSVersion;
}; /* size: 0x0040 */

typedef struct _FILE_SET_SPARSE_BUFFER
{
  /* 0x0000 */ unsigned char SetSparse;
} FILE_SET_SPARSE_BUFFER, *PFILE_SET_SPARSE_BUFFER; /* size: 0x0001 */

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Operation;
  /* 0x0014 */ unsigned long DeviceStatus;
  /* 0x0018 */ unsigned long DeviceProblem;
  /* 0x001c */ unsigned long Flags;
} PLUGPLAY_CONTROL_STATUS_DATA, *PPLUGPLAY_CONTROL_STATUS_DATA; /* size: 0x0020 */

struct NTFS_FILE_RECORD_OUTPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
  /* 0x0008 */ unsigned long FileRecordLength;
  /* 0x000c */ unsigned char FileRecordBuffer[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

class CProcessPatternTbl
{
  /* 0x0000 */ class CPatternTbl* m_pPatTbl;
  /* 0x0008 */ class CScmPatternTbl* m_pScmPatTbl;
}; /* size: 0x0010 */

struct HUMPD__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IdleTime;
  /* 0x0008 */ unsigned __int64 C1Time;
  /* 0x0010 */ unsigned __int64 C2Time;
  /* 0x0018 */ unsigned __int64 C3Time;
  /* 0x0020 */ unsigned long C1Transitions;
  /* 0x0024 */ unsigned long C2Transitions;
  /* 0x0028 */ unsigned long C3Transitions;
  /* 0x002c */ unsigned long Padding;
} SYSTEM_PROCESSOR_IDLE_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_INFORMATION; /* size: 0x0030 */

struct tagNEWTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char Padding_890[3];
  /* 0x0038 */ unsigned long ntmFlags;
  /* 0x003c */ unsigned int ntmSizeEM;
  /* 0x0040 */ unsigned int ntmCellHeight;
  /* 0x0044 */ unsigned int ntmAvgWidth;
}; /* size: 0x0048 */

struct tagNEWTEXTMETRICEXA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICA ntmTm;
  /* 0x0048 */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0060 */

struct tagAXISINFOA
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ unsigned char axAxisName[16];
}; /* size: 0x0018 */

struct tagAXESLISTA
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOA axlAxisInfo[16];
}; /* size: 0x0188 */

struct tagENUMTEXTMETRICA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXA etmNewTextMetricEx;
  /* 0x0060 */ struct tagAXESLISTA etmAxesList;
}; /* size: 0x01e8 */

typedef struct _PO_WAKE_SOURCE_DEVICE
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ wchar_t InstancePath[1];
  /* 0x000a */ char __PADDING__[2];
} PO_WAKE_SOURCE_DEVICE, *PPO_WAKE_SOURCE_DEVICE; /* size: 0x000c */

typedef union _PROCESS_AFFINITY_UPDATE_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableAutoUpdate : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Permanent : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_AFFINITY_UPDATE_MODE, *PPROCESS_AFFINITY_UPDATE_MODE; /* size: 0x0004 */

struct tagCHARSETINFO
{
  /* 0x0000 */ unsigned int ciCharset;
  /* 0x0004 */ unsigned int ciACP;
  /* 0x0008 */ struct tagFONTSIGNATURE fs;
}; /* size: 0x0020 */

struct MAP_SHARED<MAP_KEY_GUID,TYPEINFOVTBL *>
{
}; /* size: 0x00b8 */

struct IConnectionPointContainer
{
}; /* size: 0x0008 */

typedef struct _ICONINFOEXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
  /* 0x0020 */ unsigned short wResID;
  /* 0x0022 */ char szModName[260];
  /* 0x0126 */ char szResName[260];
  /* 0x022a */ char __PADDING__[6];
} ICONINFOEXA, *PICONINFOEXA; /* size: 0x0230 */

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_891;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0030 */ void* pvHashAuxInfo;
  /* 0x0038 */ struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
} CRYPT_KEY_SIGN_MESSAGE_PARA, *PCRYPT_KEY_SIGN_MESSAGE_PARA; /* size: 0x0050 */

class TXLargeIntegerWrapper<_ULARGE_INTEGER,unsigned long,unsigned __int64>
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _FIBER
{
  /* 0x0000 */ void* FiberData;
  /* 0x0008 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* DeallocationStack;
  /* 0x0028 */ long Padding_892[2];
  /* 0x0030 */ struct _CONTEXT FiberContext;
  /* 0x0500 */ struct _Wx86TIB* Wx86Tib;
  /* 0x0508 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x0510 */ void* FlsData;
  /* 0x0518 */ unsigned long GuaranteedStackBytes;
  /* 0x051c */ unsigned short TebFlags;
  /* 0x051e */ unsigned short ReservedPad;
} FIBER, *PFIBER; /* size: 0x0520 */

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulFilenameLength;
  /* 0x0008 */ unsigned long ulPathLength;
  /* 0x000c */ long Padding_893;
  /* 0x0010 */ const wchar_t* lpFileName;
  /* 0x0018 */ const wchar_t* lpFilePath;
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION; /* size: 0x0020 */

typedef struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT FixedArrayFormat;
  /* 0x0010 */ const void* ConfDescription;
  /* 0x0018 */ const void* VarDescription;
  /* 0x0020 */ const void* OffsetDescription;
} NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT, *PNDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT; /* size: 0x0028 */

struct IProcessInitControl
{
}; /* size: 0x0008 */

typedef struct __midl_frag1780_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1780_t, *P_midl_frag1780_t; /* size: 0x000c */

typedef struct _FILE_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* Port;
  /* 0x0008 */ void* Key;
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwObjectType;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReserved;
  /* 0x0010 */ struct _FILETIME ThisUpdateTime;
  /* 0x0018 */ struct _FILETIME NextUpdateTime;
  /* 0x0020 */ struct _FILETIME PublishTime;
} CRYPTNET_URL_CACHE_PRE_FETCH_INFO, *PCRYPTNET_URL_CACHE_PRE_FETCH_INFO; /* size: 0x0028 */

typedef struct _KEY_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualizationCandidate : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
} KEY_VIRTUALIZATION_INFORMATION, *PKEY_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

struct tagEMRPIXELFORMAT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagPIXELFORMATDESCRIPTOR pfd;
}; /* size: 0x0030 */

typedef struct _MEMORYSTATUS
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 dwTotalPhys;
  /* 0x0010 */ unsigned __int64 dwAvailPhys;
  /* 0x0018 */ unsigned __int64 dwTotalPageFile;
  /* 0x0020 */ unsigned __int64 dwAvailPageFile;
  /* 0x0028 */ unsigned __int64 dwTotalVirtual;
  /* 0x0030 */ unsigned __int64 dwAvailVirtual;
} MEMORYSTATUS, *PMEMORYSTATUS; /* size: 0x0038 */

struct _DPA;

typedef struct _STARTUPINFOW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_894;
  /* 0x0008 */ wchar_t* lpReserved;
  /* 0x0010 */ wchar_t* lpDesktop;
  /* 0x0018 */ wchar_t* lpTitle;
  /* 0x0020 */ unsigned long dwX;
  /* 0x0024 */ unsigned long dwY;
  /* 0x0028 */ unsigned long dwXSize;
  /* 0x002c */ unsigned long dwYSize;
  /* 0x0030 */ unsigned long dwXCountChars;
  /* 0x0034 */ unsigned long dwYCountChars;
  /* 0x0038 */ unsigned long dwFillAttribute;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned short wShowWindow;
  /* 0x0042 */ unsigned short cbReserved2;
  /* 0x0044 */ long Padding_895;
  /* 0x0048 */ unsigned char* lpReserved2;
  /* 0x0050 */ void* hStdInput;
  /* 0x0058 */ void* hStdOutput;
  /* 0x0060 */ void* hStdError;
} STARTUPINFOW, *PSTARTUPINFOW; /* size: 0x0068 */

typedef struct _STARTUPINFOEXW
{
  /* 0x0000 */ struct _STARTUPINFOW StartupInfo;
  /* 0x0068 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXW, *PSTARTUPINFOEXW; /* size: 0x0070 */

struct IOleCache
{
}; /* size: 0x0008 */

struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

typedef struct _QUAD
{
  union
  {
    /* 0x0000 */ __int64 UseThisFieldToCopy;
    /* 0x0000 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
} QUAD, *PQUAD; /* size: 0x0008 */

struct SC_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_POWER_STATUS
{
  /* 0x0000 */ unsigned char ACLineStatus;
  /* 0x0001 */ unsigned char BatteryFlag;
  /* 0x0002 */ unsigned char BatteryLifePercent;
  /* 0x0003 */ unsigned char Reserved1;
  /* 0x0004 */ unsigned long BatteryLifeTime;
  /* 0x0008 */ unsigned long BatteryFullLifeTime;
} SYSTEM_POWER_STATUS, *PSYSTEM_POWER_STATUS; /* size: 0x000c */

typedef struct _KTMOBJECT_CURSOR
{
  /* 0x0000 */ struct _GUID LastQuery;
  /* 0x0010 */ unsigned long ObjectIdCount;
  /* 0x0014 */ struct _GUID ObjectIds[1];
} KTMOBJECT_CURSOR, *PKTMOBJECT_CURSOR; /* size: 0x0024 */

typedef struct _stati64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_896[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_897;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stati64, *Pstati64; /* size: 0x0038 */

struct ISurrogate
{
}; /* size: 0x0008 */

typedef struct __midl_frag1183_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1183_t, *P_midl_frag1183_t; /* size: 0x0038 */

typedef struct _TOKEN_AUDIT_POLICY
{
  /* 0x0000 */ unsigned char PerUserPolicy[27];
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY; /* size: 0x001b */

typedef struct _MUTANT_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ unsigned char OwnedByCaller;
  /* 0x0005 */ unsigned char AbandonedState;
  /* 0x0006 */ char __PADDING__[2];
} MUTANT_BASIC_INFORMATION, *PMUTANT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _RTL_QUERY_REGISTRY_TABLE
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_898;
  /* 0x0010 */ wchar_t* Name;
  /* 0x0018 */ void* EntryContext;
  /* 0x0020 */ unsigned long DefaultType;
  /* 0x0024 */ long Padding_899;
  /* 0x0028 */ void* DefaultData;
  /* 0x0030 */ unsigned long DefaultLength;
  /* 0x0034 */ long __PADDING__[1];
} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE; /* size: 0x0038 */

struct tagIMEMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0018 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ wchar_t szString[80];
  /* 0x00c4 */ long Padding_900;
  /* 0x00c8 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x00d0 */

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int iDeltaCrlIndicator;
  /* 0x0008 */ struct _FILETIME* pftCacheResync;
  /* 0x0010 */ struct _FILETIME* pLastSyncTime;
  /* 0x0018 */ struct _FILETIME* pMaxAgeTime;
  /* 0x0020 */ struct _CERT_REVOCATION_CHAIN_PARA* pChainPara;
} CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO, *PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO; /* size: 0x0028 */

typedef struct _cpinfo
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ char __PADDING__[2];
} cpinfo, *Pcpinfo; /* size: 0x0014 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES
{
  /* 0x0000 */ struct _GUID KtmTransaction;
  /* 0x0010 */ unsigned __int64 NumberOfFiles;
  /* 0x0018 */ unsigned __int64 BufferSizeRequired;
  /* 0x0020 */ unsigned __int64 Offset;
} TXFS_LIST_TRANSACTION_LOCKED_FILES, *PTXFS_LIST_TRANSACTION_LOCKED_FILES; /* size: 0x0028 */

typedef struct _FILE_PIPE_REMOTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CollectDataTime;
  /* 0x0008 */ unsigned long MaximumCollectionCount;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_REMOTE_INFORMATION, *PFILE_PIPE_REMOTE_INFORMATION; /* size: 0x0010 */

class Windows::Auto<_UNICODE_STRING>
{
}; /* size: 0x0010 */

struct tagHELPINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iContextType;
  /* 0x0008 */ int iCtrlId;
  /* 0x000c */ long Padding_901;
  /* 0x0010 */ void* hItemHandle;
  /* 0x0018 */ unsigned __int64 dwContextId;
  /* 0x0020 */ struct tagPOINT MousePos;
}; /* size: 0x0028 */

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long TransactionState;
  /* 0x0014 */ unsigned long Reserved1;
  /* 0x0018 */ unsigned long Reserved2;
  /* 0x001c */ long Padding_902;
  /* 0x0020 */ __int64 Reserved3;
} TXFS_LIST_TRANSACTIONS_ENTRY, *PTXFS_LIST_TRANSACTIONS_ENTRY; /* size: 0x0028 */

class CPunkForRelease
{
  /* 0x0000 */ long Padding_903[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _fTopLayerMFP : 1; /* bit position: 0 */
  /* 0x0010 */ struct tagSTGMEDIUM _stgmed;
  /* 0x0028 */ struct IUnknown* _pUnkForRelease;
}; /* size: 0x0030 */

struct tagMOUSEINPUT
{
  /* 0x0000 */ long dx;
  /* 0x0004 */ long dy;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ long Padding_904;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

struct tagHARDWAREINPUT
{
  /* 0x0000 */ unsigned long uMsg;
  /* 0x0004 */ unsigned short wParamL;
  /* 0x0006 */ unsigned short wParamH;
}; /* size: 0x0008 */

struct tagINPUT
{
  /* 0x0000 */ unsigned long type;
  /* 0x0004 */ long Padding_905;
  union
  {
    /* 0x0008 */ struct tagMOUSEINPUT mi;
    /* 0x0008 */ struct tagKEYBDINPUT ki;
    struct
    {
      /* 0x0008 */ struct tagHARDWAREINPUT hi;
      /* 0x0010 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

struct HBRUSH__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagEMRBITBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
}; /* size: 0x0064 */

struct ANON_OBJECT_HEADER_V2
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
}; /* size: 0x002c */

typedef struct _EISA_MEMORY_TYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ReadWrite : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Cached : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved0 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Type : 2; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE; /* size: 0x0001 */

struct _RTL_TRACE_DATABASE;

typedef struct _RTL_TRACE_ENUMERATE
{
  /* 0x0000 */ struct _RTL_TRACE_DATABASE* Database;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ long Padding_906;
  /* 0x0010 */ struct _RTL_TRACE_BLOCK* Block;
} RTL_TRACE_ENUMERATE, *PRTL_TRACE_ENUMERATE; /* size: 0x0018 */

typedef struct _TXFS_LIST_TRANSACTIONS
{
  /* 0x0000 */ unsigned __int64 NumberOfTransactions;
  /* 0x0008 */ unsigned __int64 BufferSizeRequired;
} TXFS_LIST_TRANSACTIONS, *PTXFS_LIST_TRANSACTIONS; /* size: 0x0010 */

typedef struct __midl_frag273_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag273_t, *P_midl_frag273_t; /* size: 0x0048 */

typedef struct _KCRM_PROTOCOL_BLOB
{
  /* 0x0000 */ struct _GUID ProtocolId;
  /* 0x0010 */ unsigned long StaticInfoLength;
  /* 0x0014 */ unsigned long TransactionIdInfoLength;
  /* 0x0018 */ unsigned long Unused1;
  /* 0x001c */ unsigned long Unused2;
} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB; /* size: 0x0020 */

struct _RTLP_CURDIR_REF;

typedef struct __MIDL___MIDL_itf_activate_0000_0010_0004
{
  /* 0x0000 */ unsigned long ulNumClasses;
  /* 0x0004 */ long Padding_907;
  /* 0x0008 */ struct _GUID* pCLSIDs;
  /* 0x0010 */ unsigned long pidProcess;
  /* 0x0014 */ long Padding_908;
  /* 0x0018 */ void* hProcess;
  /* 0x0020 */ void* hImpersonationToken;
  /* 0x0028 */ wchar_t* pwszWinstaDesktop;
  /* 0x0030 */ unsigned long dwState;
  /* 0x0034 */ struct _GUID AppId;
  /* 0x0044 */ enum __MIDL___MIDL_itf_activate_0000_0010_0001 ServerType;
  /* 0x0048 */ enum __MIDL___MIDL_itf_activate_0000_0010_0002 ServerID;
  /* 0x004c */ struct _FILETIME ftCreated;
  /* 0x0054 */ long __PADDING__[1];
} _MIDL___MIDL_itf_activate_0000_0010_0004, *P_MIDL___MIDL_itf_activate_0000_0010_0004; /* size: 0x0058 */

class CAggId
{
  /* 0x0000 */ long Padding_909[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_910;
  /* 0x0010 */ struct IUnknown* _punkInner;
  /* 0x0018 */ struct IMarshal* _pmshInner;
  /* 0x0020 */ class CStdIdentity* _pStdId;
}; /* size: 0x0028 */

typedef struct _SYSTEM_REF_TRACE_INFORMATION
{
  /* 0x0000 */ unsigned char TraceEnable;
  /* 0x0001 */ unsigned char TracePermanent;
  /* 0x0002 */ char Padding_911[6];
  /* 0x0008 */ struct _UNICODE_STRING TraceProcessName;
  /* 0x0018 */ struct _UNICODE_STRING TracePoolTags;
} SYSTEM_REF_TRACE_INFORMATION, *PSYSTEM_REF_TRACE_INFORMATION; /* size: 0x0028 */

typedef struct _KEY_NODE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long NameLength;
  /* 0x0018 */ wchar_t Name[1];
  /* 0x001a */ char __PADDING__[6];
} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION; /* size: 0x0020 */

struct IOleInPlaceActiveObject
{
  /* 0x0000 */ struct IOleInPlaceActiveObjectVtbl* lpVtbl;
}; /* size: 0x0008 */

struct IThumbnailExtractor
{
}; /* size: 0x0008 */

struct HMAPKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IOleInPlaceActiveObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetWindow /* function */;
  /* 0x0020 */ void* ContextSensitiveHelp /* function */;
  /* 0x0028 */ void* TranslateAcceleratorW /* function */;
  /* 0x0030 */ void* OnFrameWindowActivate /* function */;
  /* 0x0038 */ void* OnDocWindowActivate /* function */;
  /* 0x0040 */ void* ResizeBorder /* function */;
  /* 0x0048 */ void* EnableModeless /* function */;
}; /* size: 0x0050 */

typedef struct _AppBarData
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_912;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uCallbackMessage;
  /* 0x0014 */ unsigned int uEdge;
  /* 0x0018 */ struct tagRECT rc;
  /* 0x0028 */ __int64 lParam;
} AppBarData, *PAppBarData; /* size: 0x0030 */

struct Windows::ErrorHandling::_RTL_CALL_SITE
{
  /* 0x0000 */ const char* File;
  /* 0x0008 */ const char* Function;
  /* 0x0010 */ int Line;
  /* 0x0014 */ long Padding_913;
  /* 0x0018 */ const char* Expression;
}; /* size: 0x0020 */

typedef struct _RTL_ANSI_STRING_BUFFER
{
  /* 0x0000 */ struct _STRING String;
  /* 0x0010 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0040 */ unsigned char MinimumStaticBufferForTerminalNul[1];
  /* 0x0041 */ char __PADDING__[7];
} RTL_ANSI_STRING_BUFFER, *PRTL_ANSI_STRING_BUFFER; /* size: 0x0048 */

class CCtxHook
{
}; /* size: 0x0008 */

typedef struct _IMAGE_TLS_DIRECTORY32
{
  /* 0x0000 */ unsigned long StartAddressOfRawData;
  /* 0x0004 */ unsigned long EndAddressOfRawData;
  /* 0x0008 */ unsigned long AddressOfIndex;
  /* 0x000c */ unsigned long AddressOfCallBacks;
  /* 0x0010 */ unsigned long SizeOfZeroFill;
  /* 0x0014 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY32, *PIMAGE_TLS_DIRECTORY32; /* size: 0x0018 */

typedef struct _mega_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[14227];
  /* 0x3795 */ char __PADDING__[1];
} mega_MIDL_PROC_FORMAT_STRING, *Pmega_MIDL_PROC_FORMAT_STRING; /* size: 0x3796 */

struct IWinInetFileStream
{
}; /* size: 0x0008 */

struct ICallFrame
{
}; /* size: 0x0008 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_914;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC; /* size: 0x0028 */

typedef struct _NETCONNECTINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwSpeed;
  /* 0x000c */ unsigned long dwDelay;
  /* 0x0010 */ unsigned long dwOptDataSize;
} NETCONNECTINFOSTRUCT, *PNETCONNECTINFOSTRUCT; /* size: 0x0014 */

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Machine;
  /* 0x0006 */ unsigned short Characteristics;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long CheckSum;
  /* 0x0010 */ unsigned long ImageBase;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned long NumberOfSections;
  /* 0x001c */ unsigned long ExportedNamesSize;
  /* 0x0020 */ unsigned long DebugDirectorySize;
  /* 0x0024 */ unsigned long SectionAlignment;
  /* 0x0028 */ unsigned long Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER; /* size: 0x0030 */

typedef struct _CRYPT_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_915;
  /* 0x0008 */ wchar_t** rgpszProviders;
} CRYPT_PROVIDERS, *PCRYPT_PROVIDERS; /* size: 0x0010 */

typedef struct _WNODE_HEADER
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ unsigned long ProviderId;
  union
  {
    /* 0x0008 */ unsigned __int64 HistoricalContext;
    struct
    {
      /* 0x0008 */ unsigned long Version;
      /* 0x000c */ unsigned long Linkage;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ unsigned long CountLost;
    /* 0x0010 */ void* KernelHandle;
    /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  }; /* size: 0x0008 */
  /* 0x0018 */ struct _GUID Guid;
  /* 0x0028 */ unsigned long ClientContext;
  /* 0x002c */ unsigned long Flags;
} WNODE_HEADER, *PWNODE_HEADER; /* size: 0x0030 */

struct tagSTRINGBINDING
{
  /* 0x0000 */ unsigned short wTowerId;
  /* 0x0002 */ unsigned short aNetworkAddr;
}; /* size: 0x0004 */

typedef struct _CMSG_RC2_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC2_AUX_INFO, *PCMSG_RC2_AUX_INFO; /* size: 0x0008 */

typedef struct _FILE_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION; /* size: 0x0010 */

struct PPM_WMI_LEGACY_PERFSTATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long PercentFrequency;
}; /* size: 0x000c */

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA
{
  /* 0x0000 */ struct HKEY__* hKey;
  /* 0x0008 */ wchar_t* pwszStoreDirectory;
} CERT_REGISTRY_STORE_ROAMING_PARA, *PCERT_REGISTRY_STORE_ROAMING_PARA; /* size: 0x0010 */

struct IEnumSTATPROPSTG
{
  /* 0x0000 */ struct IEnumSTATPROPSTGVtbl* lpVtbl;
}; /* size: 0x0008 */

typedef struct __midl_frag983_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag983_t, *P_midl_frag983_t; /* size: 0x0028 */

class IInternalChannelBuffer
{
}; /* size: 0x0010 */

typedef struct _DISPLAY_DEVICEW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ wchar_t DeviceName[32];
  /* 0x0044 */ wchar_t DeviceString[128];
  /* 0x0144 */ unsigned long StateFlags;
  /* 0x0148 */ wchar_t DeviceID[128];
  /* 0x0248 */ wchar_t DeviceKey[128];
} DISPLAY_DEVICEW, *PDISPLAY_DEVICEW; /* size: 0x0348 */

typedef struct _BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_916;
  /* 0x0008 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0010 */ void* GetProperty /* function */;
  /* 0x0018 */ void* SetProperty /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* GenerateKeyPair /* function */;
  /* 0x0030 */ void* FinalizeKeyPair /* function */;
  /* 0x0038 */ void* Encrypt /* function */;
  /* 0x0040 */ void* Decrypt /* function */;
  /* 0x0048 */ void* ImportKeyPair /* function */;
  /* 0x0050 */ void* ExportKey /* function */;
  /* 0x0058 */ void* DestroyKey /* function */;
  /* 0x0060 */ void* SignHash /* function */;
  /* 0x0068 */ void* VerifySignature /* function */;
} BCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE, *PBCRYPT_ASYMMETRIC_ENCRYPTION_FUNCTION_TABLE; /* size: 0x0070 */

typedef struct _acpickl_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[13];
  /* 0x0011 */ char __PADDING__[3];
} acpickl_MIDL_EXPR_FORMAT_STRING, *Pacpickl_MIDL_EXPR_FORMAT_STRING; /* size: 0x0014 */

struct NTFS_FILE_RECORD_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
}; /* size: 0x0008 */

class CCOMSurrogate
{
  union
  {
    /* 0x0000 */ struct ISurrogate* _pSurrogate;
    /* 0x0000 */ int _fNewStyleSurrogate;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

class CRpcHelper
{
  /* 0x0000 */ long Padding_917[2];
  /* 0x0008 */ unsigned long _cRefs;
}; /* size: 0x0010 */

class Serializer
{
  /* 0x0000 */ struct IStream* _pStream;
  /* 0x0008 */ struct IStream* _pOriginalStream;
  /* 0x0010 */ struct IBuffer* _pIBuff;
  /* 0x0018 */ unsigned char* _buffer;
  /* 0x0020 */ unsigned long _nWritten;
  /* 0x0024 */ unsigned long _bufSize;
  /* 0x0028 */ unsigned long _operationSize;
  /* 0x002c */ long Padding_918;
  /* 0x0030 */ void* _handle;
  /* 0x0038 */ long _clRefs;
  /* 0x003c */ unsigned long _direction;
  /* 0x0040 */ unsigned long _position;
  /* 0x0044 */ unsigned long _start;
  /* 0x0048 */ unsigned long _dwMaxDestCtx;
  /* 0x004c */ unsigned long _dwCurrentDestCtx;
  /* 0x0050 */ unsigned long _dwMarshalFlags;
}; /* size: 0x0058 */

struct ISystemActivator
{
}; /* size: 0x0008 */

struct IOleInPlaceUIWindowVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetWindow /* function */;
  /* 0x0020 */ void* ContextSensitiveHelp /* function */;
  /* 0x0028 */ void* GetBorder /* function */;
  /* 0x0030 */ void* RequestBorderSpace /* function */;
  /* 0x0038 */ void* SetBorderSpace /* function */;
  /* 0x0040 */ void* SetActiveObject /* function */;
}; /* size: 0x0048 */

typedef struct _KEY_EVENT_RECORD
{
  /* 0x0000 */ int bKeyDown;
  /* 0x0004 */ unsigned short wRepeatCount;
  /* 0x0006 */ unsigned short wVirtualKeyCode;
  /* 0x0008 */ unsigned short wVirtualScanCode;
  union
  {
    union
    {
      /* 0x000a */ wchar_t UnicodeChar;
      /* 0x000a */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ uChar;
  /* 0x000c */ unsigned long dwControlKeyState;
} KEY_EVENT_RECORD, *PKEY_EVENT_RECORD; /* size: 0x0010 */

typedef struct _MOUSE_EVENT_RECORD
{
  /* 0x0000 */ struct _COORD dwMousePosition;
  /* 0x0004 */ unsigned long dwButtonState;
  /* 0x0008 */ unsigned long dwControlKeyState;
  /* 0x000c */ unsigned long dwEventFlags;
} MOUSE_EVENT_RECORD, *PMOUSE_EVENT_RECORD; /* size: 0x0010 */

typedef struct _WINDOW_BUFFER_SIZE_RECORD
{
  /* 0x0000 */ struct _COORD dwSize;
} WINDOW_BUFFER_SIZE_RECORD, *PWINDOW_BUFFER_SIZE_RECORD; /* size: 0x0004 */

typedef struct _MENU_EVENT_RECORD
{
  /* 0x0000 */ unsigned int dwCommandId;
} MENU_EVENT_RECORD, *PMENU_EVENT_RECORD; /* size: 0x0004 */

typedef struct _INPUT_RECORD
{
  /* 0x0000 */ unsigned short EventType;
  /* 0x0002 */ char Padding_919[2];
  union
  {
    union
    {
      /* 0x0004 */ struct _KEY_EVENT_RECORD KeyEvent;
      /* 0x0004 */ struct _MOUSE_EVENT_RECORD MouseEvent;
      /* 0x0004 */ struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
      /* 0x0004 */ struct _MENU_EVENT_RECORD MenuEvent;
      /* 0x0004 */ struct _FOCUS_EVENT_RECORD FocusEvent;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Event;
} INPUT_RECORD, *PINPUT_RECORD; /* size: 0x0014 */

typedef struct __midl_frag1143_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ unsigned int frag5;
  /* 0x004c */ long __PADDING__[1];
} _midl_frag1143_t, *P_midl_frag1143_t; /* size: 0x0050 */

typedef struct _LDR_IMPORT_RECORD
{
  /* 0x0000 */ struct _LIST_ENTRY Links;
  /* 0x0010 */ struct _LDR_DATA_TABLE_ENTRY* Entry;
  /* 0x0018 */ unsigned long Count;
  /* 0x001c */ long __PADDING__[1];
} LDR_IMPORT_RECORD, *PLDR_IMPORT_RECORD; /* size: 0x0020 */

class CFillLockBytes
{
  /* 0x0000 */ long Padding_920[6];
  /* 0x0018 */ struct ILockBytes* _pilb;
  /* 0x0020 */ long _cRefs;
  /* 0x0024 */ unsigned long _ulHighWater;
  /* 0x0028 */ unsigned long _dwTerminate;
  /* 0x002c */ unsigned long _ulFailurePoint;
  /* 0x0030 */ class CPerContext* _ppc;
  /* 0x0038 */ int _fCSInitialized;
  /* 0x003c */ long Padding_921;
  /* 0x0040 */ struct _RTL_CRITICAL_SECTION _csThreadProtect;
}; /* size: 0x0068 */

typedef struct _RTL_PROCESS_MODULES
{
  /* 0x0000 */ unsigned long NumberOfModules;
  /* 0x0004 */ long Padding_922;
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
} RTL_PROCESS_MODULES, *PRTL_PROCESS_MODULES; /* size: 0x0130 */

typedef struct _SYSTEM_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ struct POWER_ACTION_POLICY PowerButton;
  /* 0x0010 */ struct POWER_ACTION_POLICY SleepButton;
  /* 0x001c */ struct POWER_ACTION_POLICY LidClose;
  /* 0x0028 */ enum _SYSTEM_POWER_STATE LidOpenWake;
  /* 0x002c */ unsigned long Reserved;
  /* 0x0030 */ struct POWER_ACTION_POLICY Idle;
  /* 0x003c */ unsigned long IdleTimeout;
  /* 0x0040 */ unsigned char IdleSensitivity;
  /* 0x0041 */ unsigned char DynamicThrottle;
  /* 0x0042 */ unsigned char Spare2[2];
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x004c */ enum _SYSTEM_POWER_STATE ReducedLatencySleep;
  /* 0x0050 */ unsigned long WinLogonFlags;
  /* 0x0054 */ unsigned long Spare3;
  /* 0x0058 */ unsigned long DozeS4Timeout;
  /* 0x005c */ unsigned long BroadcastCapacityResolution;
  /* 0x0060 */ struct SYSTEM_POWER_LEVEL DischargePolicy[4];
  /* 0x00c0 */ unsigned long VideoTimeout;
  /* 0x00c4 */ unsigned char VideoDimDisplay;
  /* 0x00c5 */ char Padding_923[3];
  /* 0x00c8 */ unsigned long VideoReserved[3];
  /* 0x00d4 */ unsigned long SpindownTimeout;
  /* 0x00d8 */ unsigned char OptimizeForPower;
  /* 0x00d9 */ unsigned char FanThrottleTolerance;
  /* 0x00da */ unsigned char ForcedThrottle;
  /* 0x00db */ unsigned char MinThrottle;
  /* 0x00dc */ struct POWER_ACTION_POLICY OverThrottled;
} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY; /* size: 0x00e8 */

struct FRAME_RemoteInvoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ struct _GUID* piid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ char __pad4[4];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* puArgErr;
  /* 0x0048 */ unsigned int cVarRef;
  /* 0x004c */ char __pad9[4];
  /* 0x0050 */ unsigned int* rgVarRefIdx;
  /* 0x0058 */ struct tagVARIANT* rgVarRef;
}; /* size: 0x0060 */

class CErrorSmAllocator
{
}; /* size: 0x0030 */

typedef struct _BCRYPT_OID_LIST
{
  /* 0x0000 */ unsigned long dwOIDCount;
  /* 0x0004 */ long Padding_924;
  /* 0x0008 */ struct _BCRYPT_OID* pOIDs;
} BCRYPT_OID_LIST, *PBCRYPT_OID_LIST; /* size: 0x0010 */

typedef struct _FILE_GET_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID Sid;
} FILE_GET_QUOTA_INFORMATION, *PFILE_GET_QUOTA_INFORMATION; /* size: 0x0014 */

struct BULK_SECURITY_TEST_DATA
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long SecurityIds[1];
}; /* size: 0x0008 */

struct ISystemDebugEventShutdown
{
}; /* size: 0x0008 */

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_925;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_926;
  /* 0x0018 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
  /* 0x0020 */ unsigned long dwRecipientIndex;
  /* 0x0024 */ long __PADDING__[1];
} CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA; /* size: 0x0028 */

typedef struct _PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_927;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
} PREFIX_TABLE, *PPREFIX_TABLE; /* size: 0x0010 */

typedef struct __midl_frag1539_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1539_t, *P_midl_frag1539_t; /* size: 0x0008 */

class CNtfsStorage
{
  /* 0x0000 */ long Padding_928[14];
  /* 0x0038 */ unsigned long _sig;
  /* 0x003c */ long Padding_929;
  /* 0x0040 */ class CNFFTreeMutex* _pTreeMutex;
  /* 0x0048 */ unsigned long _grfMode;
  /* 0x004c */ wchar_t _wcDriveLetter;
  /* 0x004e */ char Padding_930[2];
  /* 0x0050 */ class CNtfsStorageForPropSetStg _NtfsStorageForPropSetStg;
  /* 0x0060 */ class CNtfsStream* _pstmOpenList;
  /* 0x0068 */ void* _hFileMainStream;
  /* 0x0070 */ void* _hFileControlStream;
  /* 0x0078 */ unsigned short _hsmStatus;
  /* 0x007a */ char Padding_931[2];
  /* 0x007c */ unsigned long _dwStgStateBits;
  /* 0x0080 */ struct _GUID _clsidStgClass;
  /* 0x0090 */ class CPropertyBagEx _PropertyBagEx;
  /* 0x00c8 */ unsigned long _dwState;
  /* 0x00cc */ struct _FILETIME _filetime;
}; /* size: 0x00d8 */

typedef struct __midl_frag446_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag446_t, *P_midl_frag446_t; /* size: 0x0088 */

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT; /* size: 0x0020 */

typedef struct __midl_frag1050_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1050_t, *P_midl_frag1050_t; /* size: 0x000c */

struct PPM_THERMALCHANGE_EVENT
{
  /* 0x0000 */ unsigned long ThermalConstraint;
  /* 0x0004 */ long Padding_932;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct __midl_frag1726_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1726_t, *P_midl_frag1726_t; /* size: 0x0048 */

struct IMultiQI
{
}; /* size: 0x0008 */

typedef struct _JOB_SET_ARRAY
{
  /* 0x0000 */ void* JobHandle;
  /* 0x0008 */ unsigned long MemberLevel;
  /* 0x000c */ unsigned long Flags;
} JOB_SET_ARRAY, *PJOB_SET_ARRAY; /* size: 0x0010 */

typedef struct _LPC_CLIENT_DIED_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ union _LARGE_INTEGER CreateTime;
} LPC_CLIENT_DIED_MSG, *PLPC_CLIENT_DIED_MSG; /* size: 0x0030 */

typedef struct _DMA_CONFIGURATION_BYTE1
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Reserved0 : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned char TransferSize : 2; /* bit position: 2 */
    /* 0x0000 */ unsigned char Timing : 2; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 2; /* bit position: 6 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE1, *PDMA_CONFIGURATION_BYTE1; /* size: 0x0001 */

typedef struct _EISA_DMA_CONFIGURATION
{
  /* 0x0000 */ struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
  /* 0x0001 */ struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION; /* size: 0x0002 */

struct IFillLockBytes
{
  /* 0x0000 */ struct IFillLockBytesVtbl* lpVtbl;
}; /* size: 0x0008 */

struct tagSpecialPropertiesData
{
  /* 0x0000 */ unsigned long dwSessionId;
  /* 0x0004 */ int fRemoteThisSessionId;
  /* 0x0008 */ int fClientImpersonating;
  /* 0x000c */ int fPartitionIDPresent;
  /* 0x0010 */ unsigned long dwDefaultAuthnLvl;
  /* 0x0014 */ struct _GUID guidPartition;
  /* 0x0024 */ unsigned long dwPRTFlags;
  /* 0x0028 */ unsigned long dwOrigClsctx;
  /* 0x002c */ unsigned long dwFlags;
  /* 0x0030 */ unsigned long dwPid;
  /* 0x0034 */ long Padding_933;
  /* 0x0038 */ unsigned __int64 hwnd;
  /* 0x0040 */ unsigned long dwReserved[5];
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

class SpecialProperties
{
  /* 0x0000 */ long Padding_934[8];
  /* 0x0020 */ struct tagSpecialPropertiesData _data;
}; /* size: 0x0078 */

class CThreadCheck
{
  /* 0x0000 */ unsigned long m_tid;
}; /* size: 0x0004 */

struct IBinding
{
}; /* size: 0x0008 */

struct IViewObject2
{
}; /* size: 0x0008 */

typedef struct __midl_frag47_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_MEMPAD_FORMAT frag6;
    /* 0x0050 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag7;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
  } /* size: 0x0040 */ frag2;
} _midl_frag47_t, *P_midl_frag47_t; /* size: 0x0060 */

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION
{
  /* 0x0000 */ unsigned long Spare;
  /* 0x0004 */ unsigned long DpcQueueDepth;
  /* 0x0008 */ unsigned long MinimumDpcRate;
  /* 0x000c */ unsigned long AdjustDpcThreshold;
  /* 0x0010 */ unsigned long IdealDpcRate;
} SYSTEM_DPC_BEHAVIOR_INFORMATION, *PSYSTEM_DPC_BEHAVIOR_INFORMATION; /* size: 0x0014 */

typedef struct _COMMPROP
{
  /* 0x0000 */ unsigned short wPacketLength;
  /* 0x0002 */ unsigned short wPacketVersion;
  /* 0x0004 */ unsigned long dwServiceMask;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwMaxTxQueue;
  /* 0x0010 */ unsigned long dwMaxRxQueue;
  /* 0x0014 */ unsigned long dwMaxBaud;
  /* 0x0018 */ unsigned long dwProvSubType;
  /* 0x001c */ unsigned long dwProvCapabilities;
  /* 0x0020 */ unsigned long dwSettableParams;
  /* 0x0024 */ unsigned long dwSettableBaud;
  /* 0x0028 */ unsigned short wSettableData;
  /* 0x002a */ unsigned short wSettableStopParity;
  /* 0x002c */ unsigned long dwCurrentTxQueue;
  /* 0x0030 */ unsigned long dwCurrentRxQueue;
  /* 0x0034 */ unsigned long dwProvSpec1;
  /* 0x0038 */ unsigned long dwProvSpec2;
  /* 0x003c */ wchar_t wcProvChar[1];
  /* 0x003e */ char __PADDING__[2];
} COMMPROP, *PCOMMPROP; /* size: 0x0040 */

typedef struct _LDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ struct LIST_ENTRY32 InMemoryOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY32 InInitializationOrderLinks;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short TlsIndex;
  union
  {
    /* 0x003c */ struct LIST_ENTRY32 HashLinks;
    struct
    {
      /* 0x003c */ unsigned long SectionPointer;
      /* 0x0040 */ unsigned long CheckSum;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0044 */ unsigned long TimeDateStamp;
    /* 0x0044 */ unsigned long LoadedImports;
  }; /* size: 0x0004 */
} LDR_DATA_TABLE_ENTRY32, *PLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

typedef struct _IMAGE_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long StartingAddress;
  /* 0x0004 */ unsigned long EndingAddress;
  /* 0x0008 */ unsigned long EndOfPrologue;
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY; /* size: 0x000c */

typedef struct _CERT_KEYGEN_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_935;
  /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0038 */ wchar_t* pwszChallengeString;
} CERT_KEYGEN_REQUEST_INFO, *PCERT_KEYGEN_REQUEST_INFO; /* size: 0x0040 */

struct HACCEL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IRpcStubBuffer
{
}; /* size: 0x0008 */

typedef struct __midl_frag368_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag368_t, *P_midl_frag368_t; /* size: 0x0038 */

typedef struct _MMPFN_MEMSNAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 InitialPageFrameIndex;
  /* 0x0008 */ unsigned __int64 Count;
} MMPFN_MEMSNAP_INFORMATION, *PMMPFN_MEMSNAP_INFORMATION; /* size: 0x0010 */

typedef struct _OCSP_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ long Padding_936;
  /* 0x0008 */ char* pszObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} OCSP_RESPONSE_INFO, *POCSP_RESPONSE_INFO; /* size: 0x0020 */

struct HDC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SINGLE_LIST_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_ALARM_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE; /* size: 0x0030 */

typedef struct _CRL_DIST_POINT_NAME
{
  /* 0x0000 */ unsigned long dwDistPointNameChoice;
  /* 0x0004 */ long Padding_937;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO FullName;
} CRL_DIST_POINT_NAME, *PCRL_DIST_POINT_NAME; /* size: 0x0018 */

typedef struct _FILE_FS_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER AvailableAllocationUnits;
  /* 0x0010 */ unsigned long SectorsPerAllocationUnit;
  /* 0x0014 */ unsigned long BytesPerSector;
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION; /* size: 0x0018 */

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwOriginatorChoice;
  union
  {
    /* 0x0008 */ struct _CERT_ID OriginatorCertId;
    /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0030 */
  /* 0x0038 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0060 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0064 */ long Padding_938;
  /* 0x0068 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_INFO, *PCMSG_KEY_AGREE_RECIPIENT_INFO; /* size: 0x0070 */

typedef struct __midl_frag1638_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1638_t, *P_midl_frag1638_t; /* size: 0x0028 */

class istream
{
  /* 0x0000 */ long Padding_939[2];
  /* 0x0008 */ int _fGline;
  /* 0x000c */ int x_gcount;
}; /* size: 0x0080 */

typedef struct __midl_frag923_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag923_t, *P_midl_frag923_t; /* size: 0x000c */

typedef struct _INITIAL_TEB
{
  struct
  {
    /* 0x0000 */ void* OldStackBase;
    /* 0x0008 */ void* OldStackLimit;
  } /* size: 0x0010 */ OldInitialTeb;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* StackAllocationBase;
} INITIAL_TEB, *PINITIAL_TEB; /* size: 0x0028 */

typedef struct __midl_frag859_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag859_t, *P_midl_frag859_t; /* size: 0x0058 */

struct PROCESSOR_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned short Latency;
  /* 0x000a */ unsigned char Type;
  /* 0x000b */ unsigned char Spare;
  /* 0x000c */ long Padding_940;
  /* 0x0010 */ unsigned __int64 Control;
  /* 0x0018 */ unsigned __int64 Status;
}; /* size: 0x0020 */

struct PROCESSOR_PERF_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Type;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long MaxFrequency;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ void* PStateHandler /* function */;
  /* 0x0020 */ unsigned __int64 PStateContext;
  /* 0x0028 */ unsigned long PStateCap;
  /* 0x002c */ long Padding_941;
  /* 0x0030 */ void* TStateHandler /* function */;
  /* 0x0038 */ unsigned __int64 TStateContext;
  /* 0x0040 */ unsigned long TStateCap;
  /* 0x0044 */ long Padding_942;
  /* 0x0048 */ void* FeedbackHandler /* function */;
  /* 0x0050 */ struct PROCESSOR_PERF_STATE State[1];
}; /* size: 0x0070 */

struct tagEMRSETMITERLIMIT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ float eMiterLimit;
}; /* size: 0x000c */

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA
{
  /* 0x0000 */ unsigned long DeviceInstanceLength;
  /* 0x0004 */ long Padding_943;
  /* 0x0008 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA, *PPLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA; /* size: 0x0010 */

typedef struct _MESSAGE_RESOURCE_DATA
{
  /* 0x0000 */ unsigned long NumberOfBlocks;
  /* 0x0004 */ struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA; /* size: 0x0010 */

typedef struct _FILE_FS_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long Characteristics;
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_NAMES_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NAMES_INFORMATION, *PFILE_NAMES_INFORMATION; /* size: 0x0010 */

struct tagEMRGLSBOUNDEDRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbData;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA
{
  /* 0x0000 */ unsigned long cOID;
  /* 0x0004 */ long Padding_944;
  /* 0x0008 */ char** rgpszOID;
} CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA; /* size: 0x0010 */

struct tagHANDLETABLE
{
  /* 0x0000 */ void* objectHandle[1];
}; /* size: 0x0008 */

class InstantiationInfo
{
  /* 0x0000 */ long Padding_945[8];
  /* 0x0020 */ struct tagInstantiationInfoData _instantiationInfoData;
  /* 0x0058 */ struct _GUID _pIIDs[10];
}; /* size: 0x00f8 */

class InstanceInfo
{
  /* 0x0000 */ long Padding_946[8];
  /* 0x0020 */ struct tagInstanceInfoData _instanceInfoData;
  /* 0x0040 */ struct IStorage* _pstg;
}; /* size: 0x0048 */

class ActivationPropertiesIn
{
  /* 0x0000 */ long Padding_947[134];
  /* 0x0218 */ enum tagACTIVATION_STAGE _stage;
  /* 0x021c */ unsigned long _cCustomAct;
  /* 0x0220 */ unsigned long _customIndex;
  /* 0x0224 */ unsigned long _dwInitialContext;
  /* 0x0228 */ int _delegated;
  /* 0x022c */ long Padding_948;
  /* 0x0230 */ void* _clientToken;
  /* 0x0238 */ int _fUseSystemIdentity;
  /* 0x023c */ int _fComplusOnly;
  /* 0x0240 */ struct IComClassInfo* _pClassInfo;
  /* 0x0248 */ struct ISystemActivator** _customActList;
  /* 0x0250 */ class InstantiationInfo* _pinst;
  /* 0x0258 */ class InstanceInfo* _pPersist;
  /* 0x0260 */ class ContextInfo* _pContextInfo;
  /* 0x0268 */ class ServerLocationInfo* _pServerLocationInfo;
  /* 0x0270 */ class SecurityInfo* _pSecurityInfo;
  /* 0x0278 */ class SpecialProperties* _pSpecialProperties;
  /* 0x0280 */ class ActivationPropertiesOut _actOut;
  /* 0x05d0 */ class SecurityInfo _securityInfo;
  /* 0x0630 */ class ServerLocationInfo _serverLocationInfo;
  /* 0x0678 */ class InstantiationInfo _instantiationInfo;
  /* 0x0770 */ class ContextInfo _contextInfo;
  /* 0x07e0 */ class InstanceInfo _instanceInfo;
  /* 0x0828 */ class ScmRequestInfo _scmRequestInfo;
  /* 0x0858 */ class SpecialProperties _specialProperties;
  /* 0x08d0 */ void* _pDip;
  /* 0x08d8 */ struct IClassFactory* _pCF;
}; /* size: 0x08e0 */

struct IOleInPlaceSite
{
}; /* size: 0x0008 */

struct tagEXCEPINFO
{
  /* 0x0000 */ unsigned short wCode;
  /* 0x0002 */ unsigned short wReserved;
  /* 0x0004 */ long Padding_949;
  /* 0x0008 */ wchar_t* bstrSource;
  /* 0x0010 */ wchar_t* bstrDescription;
  /* 0x0018 */ wchar_t* bstrHelpFile;
  /* 0x0020 */ unsigned long dwHelpContext;
  /* 0x0024 */ long Padding_950;
  /* 0x0028 */ void* pvReserved;
  /* 0x0030 */ void* pfnDeferredFillIn /* function */;
  /* 0x0038 */ long scode;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

typedef struct _DRAWPATRECT
{
  /* 0x0000 */ struct tagPOINT ptPosition;
  /* 0x0008 */ struct tagPOINT ptSize;
  /* 0x0010 */ unsigned short wStyle;
  /* 0x0012 */ unsigned short wPattern;
} DRAWPATRECT, *PDRAWPATRECT; /* size: 0x0014 */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ long Padding_951;
  /* 0x0008 */ wchar_t* pszComment;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ long __PADDING__[1];
} SERVICE_CONTROL_STATUS_REASON_PARAMSW, *PSERVICE_CONTROL_STATUS_REASON_PARAMSW; /* size: 0x0038 */

class CEnumFormatEtcDataArray
{
  /* 0x0000 */ long Padding_952[3];
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ unsigned long m_cOffset;
  /* 0x0014 */ long Padding_953;
  /* 0x0018 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
}; /* size: 0x0020 */

typedef struct _WIN32_FIND_DATAW
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ wchar_t cFileName[260];
  /* 0x0234 */ wchar_t cAlternateFileName[14];
} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW; /* size: 0x0250 */

typedef struct _BCRYPT_PSS_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0008 */ unsigned long cbSalt;
  /* 0x000c */ long __PADDING__[1];
} BCRYPT_PSS_PADDING_INFO, *PBCRYPT_PSS_PADDING_INFO; /* size: 0x0010 */

typedef struct __midl_frag1251_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1251_t, *P_midl_frag1251_t; /* size: 0x0048 */

typedef struct _MESSAGE_RESOURCE_ENTRY
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned char Text[1];
  /* 0x0005 */ char __PADDING__[1];
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY; /* size: 0x0006 */

typedef struct __midl_frag1520_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1520_t, *P_midl_frag1520_t; /* size: 0x0028 */

typedef struct _GRADIENT_TRIANGLE
{
  /* 0x0000 */ unsigned long Vertex1;
  /* 0x0004 */ unsigned long Vertex2;
  /* 0x0008 */ unsigned long Vertex3;
} GRADIENT_TRIANGLE, *PGRADIENT_TRIANGLE; /* size: 0x000c */

typedef struct _MODEMSETTINGS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwCallSetupFailTimer;
  /* 0x0014 */ unsigned long dwInactivityTimeout;
  /* 0x0018 */ unsigned long dwSpeakerVolume;
  /* 0x001c */ unsigned long dwSpeakerMode;
  /* 0x0020 */ unsigned long dwPreferredModemOptions;
  /* 0x0024 */ unsigned long dwNegotiatedModemOptions;
  /* 0x0028 */ unsigned long dwNegotiatedDCERate;
  /* 0x002c */ unsigned char abVariablePortion[1];
  /* 0x002d */ char __PADDING__[3];
} MODEMSETTINGS, *PMODEMSETTINGS; /* size: 0x0030 */

typedef struct _IO_ERROR_LOG_PACKET
{
  /* 0x0000 */ unsigned char MajorFunctionCode;
  /* 0x0001 */ unsigned char RetryCount;
  /* 0x0002 */ unsigned short DumpDataSize;
  /* 0x0004 */ unsigned short NumberOfStrings;
  /* 0x0006 */ unsigned short StringOffset;
  /* 0x0008 */ unsigned short EventCategory;
  /* 0x000a */ char Padding_954[2];
  /* 0x000c */ long ErrorCode;
  /* 0x0010 */ unsigned long UniqueErrorValue;
  /* 0x0014 */ long FinalStatus;
  /* 0x0018 */ unsigned long SequenceNumber;
  /* 0x001c */ unsigned long IoControlCode;
  /* 0x0020 */ union _LARGE_INTEGER DeviceOffset;
  /* 0x0028 */ unsigned long DumpData[1];
  /* 0x002c */ long __PADDING__[1];
} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; /* size: 0x0030 */

typedef struct _IO_ERROR_LOG_MESSAGE
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned short DriverNameLength;
  /* 0x0006 */ char Padding_955[2];
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long DriverNameOffset;
  /* 0x0014 */ long Padding_956;
  /* 0x0018 */ struct _IO_ERROR_LOG_PACKET EntryData;
} IO_ERROR_LOG_MESSAGE, *PIO_ERROR_LOG_MESSAGE; /* size: 0x0048 */

struct IEncodingFilterFactory
{
}; /* size: 0x0008 */

class CBasedDeltaBlockPtrPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CDeltaList
{
  /* 0x0000 */ class CBasedDeltaBlockPtrPtr _apdb;
  /* 0x0008 */ unsigned long _ulSize;
  /* 0x000c */ long Padding_957;
  /* 0x0010 */ class CBasedMStreamPtr _pmsScratch;
  /* 0x0018 */ class CBasedMStreamPtr _pms;
  /* 0x0020 */ class CBasedTransactedStreamPtr _ptsParent;
  /* 0x0028 */ unsigned long _sectStart;
}; /* size: 0x0030 */

struct tagLOGBRUSH32
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned long lbHatch;
}; /* size: 0x000c */

typedef struct _PS_CREATE_INFO
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum PS_CREATE_STATE State;
  /* 0x000c */ long Padding_958;
  union
  {
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long InitFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char WriteOutputOnExit : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char DetectManifest : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char SpareBits1 : 6; /* bit position: 2 */
          }; /* bitfield */
          struct /* bitfield */
          {
            /* 0x0011 */ unsigned char IFEOKeyState : 2; /* bit position: 0 */
            /* 0x0011 */ unsigned char SpareBits2 : 6; /* bit position: 2 */
          }; /* bitfield */
          /* 0x0012 */ unsigned short ProhibitedImageCharacteristics : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0014 */ unsigned long AdditionalFileAccess;
    } /* size: 0x0008 */ InitState;
    struct
    {
      /* 0x0010 */ void* FileHandle;
    } /* size: 0x0008 */ FailSection;
    struct
    {
      /* 0x0010 */ void* IFEOKey;
    } /* size: 0x0008 */ ExeName;
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long OutputFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char ProtectedProcess : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char AddressSpaceOverride : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char DevOverrideEnabled : 1; /* bit position: 2 */
            /* 0x0010 */ unsigned char ManifestDetected : 1; /* bit position: 3 */
            /* 0x0010 */ unsigned char SpareBits1 : 4; /* bit position: 4 */
          }; /* bitfield */
          /* 0x0011 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x0012 */ unsigned short SpareBits3 : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0004 */ long Padding_959;
      /* 0x0018 */ void* FileHandle;
      /* 0x0020 */ void* SectionHandle;
      /* 0x0028 */ unsigned __int64 UserProcessParametersNative;
      /* 0x0030 */ unsigned long UserProcessParametersWow64;
      /* 0x0034 */ unsigned long CurrentParameterFlags;
      /* 0x0038 */ unsigned __int64 PebAddressNative;
      /* 0x0040 */ unsigned long PebAddressWow64;
      /* 0x0034 */ long Padding_960;
      /* 0x0048 */ unsigned __int64 ManifestAddress;
      /* 0x0050 */ unsigned long ManifestSize;
      /* 0x0054 */ long __PADDING__[1];
    } /* size: 0x0048 */ SuccessState;
  }; /* size: 0x0048 */
} PS_CREATE_INFO, *PPS_CREATE_INFO; /* size: 0x0058 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ wchar_t* InterfaceList;
  /* 0x0020 */ unsigned long InterfaceListSize;
  /* 0x0024 */ unsigned long Flags;
} PLUGPLAY_CONTROL_INTERFACE_LIST_DATA, *PPLUGPLAY_CONTROL_INTERFACE_LIST_DATA; /* size: 0x0028 */

typedef struct _CRYPT_OID_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_961;
  /* 0x0008 */ const char* pszOID;
  /* 0x0010 */ const wchar_t* pwszName;
  /* 0x0018 */ unsigned long dwGroupId;
  union
  {
    /* 0x001c */ unsigned long dwValue;
    /* 0x001c */ unsigned int Algid;
    /* 0x001c */ unsigned long dwLength;
  }; /* size: 0x0004 */
  /* 0x0020 */ struct _CRYPTOAPI_BLOB ExtraInfo;
} CRYPT_OID_INFO, *PCRYPT_OID_INFO; /* size: 0x0030 */

typedef struct _IMAGE_ROM_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long BaseOfBss;
  /* 0x0020 */ unsigned long GprMask;
  /* 0x0024 */ unsigned long CprMask[4];
  /* 0x0034 */ unsigned long GpValue;
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER; /* size: 0x0038 */

typedef struct _IMAGE_ROM_HEADERS
{
  /* 0x0000 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0014 */ struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS; /* size: 0x004c */

typedef struct _wfinddata_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_962;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata_t, *Pwfinddata_t; /* size: 0x0230 */

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_963;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0020 */ void* pfnAlloc /* function */;
  /* 0x0028 */ void* pfnFree /* function */;
  /* 0x0030 */ unsigned __int64 hNCryptKey;
  /* 0x0038 */ unsigned char* pbContentEncryptKey;
  /* 0x0040 */ unsigned long cbContentEncryptKey;
  /* 0x0044 */ long Padding_964;
  /* 0x0048 */ void* hCNGContentEncryptKey;
  /* 0x0050 */ unsigned char* pbCNGContentEncryptKeyObject;
} CMSG_CNG_CONTENT_DECRYPT_INFO, *PCMSG_CNG_CONTENT_DECRYPT_INFO; /* size: 0x0058 */

typedef struct _REG_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ enum _REG_ACTION Action;
  /* 0x0008 */ unsigned long KeyLength;
  /* 0x000c */ wchar_t Key[1];
  /* 0x000e */ char __PADDING__[2];
} REG_NOTIFY_INFORMATION, *PREG_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag1233_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1233_t, *P_midl_frag1233_t; /* size: 0x0038 */

typedef struct _IO_STATUS_BLOCK32
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long Information;
} IO_STATUS_BLOCK32, *PIO_STATUS_BLOCK32; /* size: 0x0008 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ char NameString[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING; /* size: 0x0004 */

typedef struct _MEMORY_REGION_INFORMATION
{
  /* 0x0000 */ void* AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionType;
  /* 0x0010 */ unsigned __int64 RegionSize;
} MEMORY_REGION_INFORMATION, *PMEMORY_REGION_INFORMATION; /* size: 0x0018 */

struct IXMLElementCollection
{
}; /* size: 0x0008 */

struct ISecurityOptions
{
}; /* size: 0x0008 */

struct tagSCROLLBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcScrollBar;
  /* 0x0014 */ int dxyLineButton;
  /* 0x0018 */ int xyThumbTop;
  /* 0x001c */ int xyThumbBottom;
  /* 0x0020 */ int reserved;
  /* 0x0024 */ unsigned long rgstate[6];
}; /* size: 0x003c */

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ long __PADDING__[1];
} CMSG_MAIL_LIST_ENCRYPT_INFO, *PCMSG_MAIL_LIST_ENCRYPT_INFO; /* size: 0x0038 */

typedef struct _KNONVOLATILE_CONTEXT_POINTERS
{
  union
  {
    /* 0x0000 */ struct _M128A* FloatingContext[16];
    struct
    {
      /* 0x0000 */ struct _M128A* Xmm0;
      /* 0x0008 */ struct _M128A* Xmm1;
      /* 0x0010 */ struct _M128A* Xmm2;
      /* 0x0018 */ struct _M128A* Xmm3;
      /* 0x0020 */ struct _M128A* Xmm4;
      /* 0x0028 */ struct _M128A* Xmm5;
      /* 0x0030 */ struct _M128A* Xmm6;
      /* 0x0038 */ struct _M128A* Xmm7;
      /* 0x0040 */ struct _M128A* Xmm8;
      /* 0x0048 */ struct _M128A* Xmm9;
      /* 0x0050 */ struct _M128A* Xmm10;
      /* 0x0058 */ struct _M128A* Xmm11;
      /* 0x0060 */ struct _M128A* Xmm12;
      /* 0x0068 */ struct _M128A* Xmm13;
      /* 0x0070 */ struct _M128A* Xmm14;
      /* 0x0078 */ struct _M128A* Xmm15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
  union
  {
    /* 0x0080 */ unsigned __int64* IntegerContext[16];
    struct
    {
      /* 0x0080 */ unsigned __int64* Rax;
      /* 0x0088 */ unsigned __int64* Rcx;
      /* 0x0090 */ unsigned __int64* Rdx;
      /* 0x0098 */ unsigned __int64* Rbx;
      /* 0x00a0 */ unsigned __int64* Rsp;
      /* 0x00a8 */ unsigned __int64* Rbp;
      /* 0x00b0 */ unsigned __int64* Rsi;
      /* 0x00b8 */ unsigned __int64* Rdi;
      /* 0x00c0 */ unsigned __int64* R8;
      /* 0x00c8 */ unsigned __int64* R9;
      /* 0x00d0 */ unsigned __int64* R10;
      /* 0x00d8 */ unsigned __int64* R11;
      /* 0x00e0 */ unsigned __int64* R12;
      /* 0x00e8 */ unsigned __int64* R13;
      /* 0x00f0 */ unsigned __int64* R14;
      /* 0x00f8 */ unsigned __int64* R15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS; /* size: 0x0100 */

struct IEnumContextProps
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_NUMA_INFORMATION
{
  /* 0x0000 */ unsigned long HighestNodeNumber;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    /* 0x0008 */ unsigned __int64 ActiveProcessorsAffinityMask[16];
    /* 0x0008 */ unsigned __int64 AvailableMemory[16];
  }; /* size: 0x0080 */
} SYSTEM_NUMA_INFORMATION, *PSYSTEM_NUMA_INFORMATION; /* size: 0x0088 */

typedef struct __MIDL_ICallFrame_0002
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ unsigned char fOut;
  /* 0x0002 */ char Padding_965[2];
  /* 0x0004 */ unsigned long stackOffset;
  /* 0x0008 */ unsigned long cbParam;
} _MIDL_ICallFrame_0002, *P_MIDL_ICallFrame_0002; /* size: 0x000c */

typedef struct _IMAGE_IMPORT_BY_NAME
{
  /* 0x0000 */ unsigned short Hint;
  /* 0x0002 */ unsigned char Name[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME; /* size: 0x0004 */

typedef struct _IMAGE_DEBUG_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long SizeOfData;
  /* 0x0014 */ unsigned long AddressOfRawData;
  /* 0x0018 */ unsigned long PointerToRawData;
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY; /* size: 0x001c */

struct UDATE
{
  /* 0x0000 */ struct _SYSTEMTIME st;
  /* 0x0010 */ unsigned short wDayOfYear;
}; /* size: 0x0012 */

struct tagEMRGDICOMMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

class CComActivator
{
  /* 0x0000 */ long Padding_966[6];
  /* 0x0018 */ long _ulRef;
  /* 0x001c */ long Padding_967;
  /* 0x0020 */ class OpaqueDataInfo* _pOpaqueData;
  /* 0x0028 */ class SpecialProperties* _pProps;
  /* 0x0030 */ int _fActPropsInitNecessary;
}; /* size: 0x0038 */

typedef struct _CRYPT_HASH_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
} CRYPT_HASH_MESSAGE_PARA, *PCRYPT_HASH_MESSAGE_PARA; /* size: 0x0030 */

typedef struct _RTL_HEAP_TAG_INFO
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
} RTL_HEAP_TAG_INFO, *PRTL_HEAP_TAG_INFO; /* size: 0x0010 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ long Padding_968;
  /* 0x0010 */ unsigned char* NetworkAddress;
  /* 0x0018 */ unsigned char* StringEndpoint;
  union
  {
    /* 0x0020 */ unsigned char* Reserved;
  } /* size: 0x0008 */ u1;
  /* 0x0028 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_A, *PRPC_BINDING_HANDLE_TEMPLATE_V1_A; /* size: 0x0038 */

struct IXMLElement
{
}; /* size: 0x0008 */

typedef struct _TOKEN_USER
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES User;
} TOKEN_USER, *PTOKEN_USER; /* size: 0x0010 */

typedef struct _lclor_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[779];
  /* 0x030d */ char __PADDING__[1];
} lclor_MIDL_TYPE_FORMAT_STRING, *Plclor_MIDL_TYPE_FORMAT_STRING; /* size: 0x030e */

struct tagVARDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long Padding_969;
  /* 0x0008 */ wchar_t* lpstrSchema;
  union
  {
    /* 0x0010 */ unsigned long oInst;
    /* 0x0010 */ struct tagVARIANT* lpvarValue;
  }; /* size: 0x0008 */
  /* 0x0018 */ struct tagELEMDESC elemdescVar;
  /* 0x0038 */ unsigned short wVarFlags;
  /* 0x003a */ char Padding_970[2];
  /* 0x003c */ enum tagVARKIND varkind;
}; /* size: 0x0040 */

typedef struct _CERT_PAIR
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Forward;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Reverse;
} CERT_PAIR, *PCERT_PAIR; /* size: 0x0020 */

typedef struct __midl_frag1316_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1316_t, *P_midl_frag1316_t; /* size: 0x0048 */

struct tagEMRANGLEARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlCenter;
  /* 0x0010 */ unsigned long nRadius;
  /* 0x0014 */ float eStartAngle;
  /* 0x0018 */ float eSweepAngle;
}; /* size: 0x001c */

typedef struct _stat64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_971[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_972;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stat64, *Pstat64; /* size: 0x0038 */

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ unsigned short DataLength;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[2];
} SL_KMEM_CACHE_VALUE_DESCRIPTOR, *PSL_KMEM_CACHE_VALUE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _SL_KMEM_CACHE
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long SizeOfData;
  /* 0x0008 */ unsigned long SignatureSize;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long Version;
  /* 0x0014 */ struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_KMEM_CACHE, *PSL_KMEM_CACHE; /* size: 0x0028 */

typedef struct __midl_frag1624_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1624_t, *P_midl_frag1624_t; /* size: 0x0038 */

typedef struct _CRYPT_HASH_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Hash;
} CRYPT_HASH_INFO, *PCRYPT_HASH_INFO; /* size: 0x0028 */

struct tagEMRSETARCDIRECTION
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iArcDirection;
}; /* size: 0x000c */

struct tagOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ long Padding_973;
  /* 0x0020 */ unsigned char* data;
}; /* size: 0x0028 */

struct CONFIRMSAFETY
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ struct IUnknown* pUnk;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  /* 0x0000 */ unsigned char bAuxType;
  /* 0x0001 */ unsigned char bReserved;
  /* 0x0002 */ unsigned long SymbolTableIndex;
  /* 0x0006 */ unsigned char rgbReserved[12];
}; /* size: 0x0012 */

typedef struct _CLILIST
{
  /* 0x0000 */ void* hcliNext;
  /* 0x0008 */ void* info[20];
} CLILIST, *PCLILIST; /* size: 0x00a8 */

typedef struct _FILE_PIPE_EVENT_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long EntryType;
  /* 0x0008 */ unsigned long ByteCount;
  /* 0x000c */ unsigned long KeyValue;
  /* 0x0010 */ unsigned long NumberRequests;
} FILE_PIPE_EVENT_BUFFER, *PFILE_PIPE_EVENT_BUFFER; /* size: 0x0014 */

class CSmAllocator
{
  /* 0x0000 */ long Padding_974[2];
  /* 0x0008 */ class CSharedMemoryBlock* _psmb;
  /* 0x0010 */ unsigned char* _pbBase;
  /* 0x0018 */ class CPerContext* _ppcOwner;
  /* 0x0020 */ unsigned long _cbSize;
  /* 0x0024 */ unsigned long _ulHeapName;
  /* 0x0028 */ unsigned long _cRefs;
}; /* size: 0x0030 */

struct HSTR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __midl_frag128_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag128_t, *P_midl_frag128_t; /* size: 0x0048 */

typedef struct _CONNECTDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_975;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct _NETRESOURCEA* lpConnRes;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTA, *PCONNECTDLGSTRUCTA; /* size: 0x0020 */

class CCallTable
{
  union
  {
    /* 0x0000 */ unsigned long m_cCalls;
    /* 0x0000 */ int m_fInitialized;
    /* 0x0000 */ class CPageAllocator m_Allocator;
  }; /* size: 0x0080 */
}; /* size: 0x0004 */

struct IParseDisplayName
{
}; /* size: 0x0008 */

struct IXTLRuntime
{
}; /* size: 0x0008 */

typedef struct _ACCESS_DENIED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_ACE, *PACCESS_DENIED_ACE; /* size: 0x000c */

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
  /* 0x0008 */ unsigned long TableID;
  /* 0x000c */ unsigned long TableBufferLength;
  /* 0x0010 */ unsigned char TableBuffer[1];
  /* 0x0011 */ char __PADDING__[3];
} SYSTEM_FIRMWARE_TABLE_INFORMATION, *PSYSTEM_FIRMWARE_TABLE_INFORMATION; /* size: 0x0014 */

typedef struct _FILE_FS_OBJECTID_INFORMATION
{
  /* 0x0000 */ unsigned char ObjectId[16];
  /* 0x0010 */ unsigned char ExtendedInfo[48];
} FILE_FS_OBJECTID_INFORMATION, *PFILE_FS_OBJECTID_INFORMATION; /* size: 0x0040 */

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER BootTime;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTime;
  /* 0x0010 */ union _LARGE_INTEGER TimeZoneBias;
  /* 0x0018 */ unsigned long TimeZoneId;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ unsigned __int64 BootTimeBias;
  /* 0x0028 */ unsigned __int64 SleepTimeBias;
} SYSTEM_TIMEOFDAY_INFORMATION, *PSYSTEM_TIMEOFDAY_INFORMATION; /* size: 0x0030 */

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_SESSION_POOLTAG_INFORMATION, *PSYSTEM_SESSION_POOLTAG_INFORMATION; /* size: 0x0038 */

typedef struct _THREAD_LAST_SYSCALL_INFORMATION
{
  /* 0x0000 */ void* FirstArgument;
  /* 0x0008 */ unsigned short SystemCallNumber;
  /* 0x000a */ char __PADDING__[6];
} THREAD_LAST_SYSCALL_INFORMATION, *PTHREAD_LAST_SYSCALL_INFORMATION; /* size: 0x0010 */

typedef struct __MIDL_ILocalObjectExporter_0001
{
  /* 0x0000 */ unsigned short* pName;
  /* 0x0008 */ unsigned short wId;
  /* 0x000a */ char __PADDING__[6];
} _MIDL_ILocalObjectExporter_0001, *P_MIDL_ILocalObjectExporter_0001; /* size: 0x0010 */

struct AsyncIPipeDouble
{
}; /* size: 0x0008 */

struct NdrStringHeader
{
  /* 0x0000 */ unsigned long dwMax;
  /* 0x0004 */ unsigned long dwOffset;
  /* 0x0008 */ unsigned long dwActual;
}; /* size: 0x000c */

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
  /* 0x0010 */ long Priority;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_THREAD_CID_PRIORITY_INFORMATION, *PSYSTEM_THREAD_CID_PRIORITY_INFORMATION; /* size: 0x0018 */

struct IPropertySetStorage
{
}; /* size: 0x0008 */

struct <vc_attributes>::size_isAttribute
{
  /* 0x0000 */ const char* expression;
}; /* size: 0x0008 */

struct SBlanket
{
  /* 0x0000 */ wchar_t* _pPrincipal;
  /* 0x0008 */ unsigned long _lAuthnLevel;
  /* 0x000c */ unsigned long _lAuthnSvc;
  /* 0x0010 */ void* _pAuthId;
  /* 0x0018 */ unsigned long _lAuthzSvc;
  /* 0x001c */ struct _RPC_SECURITY_QOS _sQos;
  /* 0x002c */ unsigned long _lCapabilities;
  /* 0x0030 */ struct _SCHANNEL_CRED _sCred;
  /* 0x0080 */ const struct _CERT_CONTEXT* _pCert;
}; /* size: 0x0088 */

typedef struct _SECTIONBASICINFO
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long AllocationAttributes;
  /* 0x000c */ long Padding_976;
  /* 0x0010 */ union _LARGE_INTEGER MaximumSize;
} SECTIONBASICINFO, *PSECTIONBASICINFO; /* size: 0x0018 */

class CStgHandle
{
}; /* size: 0x0010 */

struct _TP_IO;

struct tagACCEL
{
  /* 0x0000 */ unsigned char fVirt;
  /* 0x0001 */ char Padding_977;
  /* 0x0002 */ unsigned short key;
  /* 0x0004 */ unsigned short cmd;
}; /* size: 0x0006 */

typedef struct _CMC_STATUS_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ unsigned long cBodyList;
  /* 0x0008 */ unsigned long* rgdwBodyList;
  /* 0x0010 */ wchar_t* pwszStatusString;
  /* 0x0018 */ unsigned long dwOtherInfoChoice;
  /* 0x001c */ long Padding_978;
  union
  {
    /* 0x0020 */ unsigned long dwFailInfo;
    /* 0x0020 */ struct _CMC_PEND_INFO* pPendInfo;
  }; /* size: 0x0008 */
} CMC_STATUS_INFO, *PCMC_STATUS_INFO; /* size: 0x0028 */

struct <vc_attributes>::dualAttribute
{
}; /* size: 0x0001 */

struct PPM_PERFSTATE_DOMAIN_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Latency;
  /* 0x0008 */ unsigned long Speed;
  /* 0x000c */ long Padding_979;
  /* 0x0010 */ unsigned __int64 Processors;
}; /* size: 0x0018 */

struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_980;
  /* 0x0008 */ const char* String;
}; /* size: 0x0010 */

struct HENHMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CDocFile
{
  /* 0x0000 */ long Padding_981[4];
  /* 0x0010 */ class CUpdateList _ulChangedHolder;
  /* 0x0020 */ class CStgHandle _stgh;
  /* 0x0030 */ const class CBasedDFBasisPtr _pdfb;
}; /* size: 0x0038 */

struct ORPC_INIT_ARGS
{
  /* 0x0000 */ struct IOrpcDebugNotify* lpIntfOrpcDebug;
  /* 0x0008 */ void* pvPSN;
  /* 0x0010 */ unsigned long dwReserved1;
  /* 0x0014 */ unsigned long dwReserved2;
}; /* size: 0x0018 */

struct tagEMRARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct _POINTL ptlStart;
  /* 0x0020 */ struct _POINTL ptlEnd;
}; /* size: 0x0028 */

typedef struct _OCSP_BASIC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwResponderIdChoice;
  union
  {
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByNameResponderId;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByKeyResponderId;
  }; /* size: 0x0010 */
  /* 0x0018 */ struct _FILETIME ProducedAt;
  /* 0x0020 */ unsigned long cResponseEntry;
  /* 0x0024 */ long Padding_982;
  /* 0x0028 */ struct _OCSP_BASIC_RESPONSE_ENTRY* rgResponseEntry;
  /* 0x0030 */ unsigned long cExtension;
  /* 0x0034 */ long Padding_983;
  /* 0x0038 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_INFO, *POCSP_BASIC_RESPONSE_INFO; /* size: 0x0040 */

struct tagCOPYDATASTRUCT
{
  /* 0x0000 */ unsigned __int64 dwData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ long Padding_984;
  /* 0x0010 */ void* lpData;
}; /* size: 0x0018 */

class OleThunkWOW
{
}; /* size: 0x0008 */

typedef struct _PUBLICKEYSTRUC
{
  /* 0x0000 */ unsigned char bType;
  /* 0x0001 */ unsigned char bVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned int aiKeyAlg;
} PUBLICKEYSTRUC, *PPUBLICKEYSTRUC; /* size: 0x0008 */

struct tagDISPATCHDATA
{
  /* 0x0000 */ long scode;
  /* 0x0004 */ long Padding_985;
  /* 0x0008 */ void* pData;
}; /* size: 0x0010 */

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long cbKeyData;
} BCRYPT_KEY_DATA_BLOB_HEADER, *PBCRYPT_KEY_DATA_BLOB_HEADER; /* size: 0x000c */

typedef struct _SCOPE_TABLE
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE, *PSCOPE_TABLE; /* size: 0x0014 */

typedef struct _CERT_CRL_CONTEXT_PAIR
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0008 */ const struct _CRL_CONTEXT* pCrlContext;
} CERT_CRL_CONTEXT_PAIR, *PCERT_CRL_CONTEXT_PAIR; /* size: 0x0010 */

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long ExceptionHandler;
  /* 0x000c */ unsigned long HandlerData;
  /* 0x0010 */ unsigned long PrologEndAddress;
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY; /* size: 0x0014 */

struct <vc_attributes>::nonbrowsableAttribute
{
}; /* size: 0x0001 */

typedef struct _OBJECT_TYPES_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTypes;
} OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION; /* size: 0x0004 */

typedef struct _EISA_IRQ_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
  /* 0x0001 */ unsigned char Reserved;
} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION; /* size: 0x0002 */

struct ICallInterceptor
{
}; /* size: 0x0008 */

struct IRpcProxyBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Connect /* function */;
  /* 0x0020 */ void* Disconnect /* function */;
}; /* size: 0x0028 */

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID ResourceManagerId;
  /* 0x0010 */ unsigned long DescriptionLength;
  /* 0x0014 */ wchar_t Description[1];
  /* 0x0016 */ char __PADDING__[2];
} RESOURCEMANAGER_BASIC_INFORMATION, *PRESOURCEMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _BCRYPT_PKCS1_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
} BCRYPT_PKCS1_PADDING_INFO, *PBCRYPT_PKCS1_PADDING_INFO; /* size: 0x0008 */

struct tagHELPWININFOA
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ char rgchMember[2];
  /* 0x001a */ char __PADDING__[2];
}; /* size: 0x001c */

struct <vc_attributes>::unhookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0008 */ const char* source;
  /* 0x0010 */ const char* handler;
  /* 0x0018 */ const char* receiver;
}; /* size: 0x0020 */

typedef struct _nlsversioninfo
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
} nlsversioninfo, *Pnlsversioninfo; /* size: 0x000c */

struct tagStdDiscData
{
  /* 0x0000 */ class CStdMarshal* pStdMshl;
  /* 0x0008 */ unsigned long dwType;
  /* 0x000c */ int fRelease;
}; /* size: 0x0010 */

struct IMoniker
{
}; /* size: 0x0008 */

typedef struct _TAPE_SET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long EOTWarningZoneSize;
} TAPE_SET_DRIVE_PARAMETERS, *PTAPE_SET_DRIVE_PARAMETERS; /* size: 0x0008 */

typedef struct _FILE_OBJECTID_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0018 */ unsigned char BirthVolumeId[16];
      /* 0x0028 */ unsigned char BirthObjectId[16];
      /* 0x0038 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0018 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_INFORMATION, *PFILE_OBJECTID_INFORMATION; /* size: 0x0048 */

struct IClassActivator
{
}; /* size: 0x0008 */

typedef struct _EVENT_BASIC_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TYPE EventType;
  /* 0x0004 */ long EventState;
} EVENT_BASIC_INFORMATION, *PEVENT_BASIC_INFORMATION; /* size: 0x0008 */

struct tagENUMLOGFONTEXA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned char elfScript[32];
}; /* size: 0x00bc */

struct tagENUMLOGFONTEXDVA
{
  /* 0x0000 */ struct tagENUMLOGFONTEXA elfEnumLogfontEx;
  /* 0x00bc */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x0104 */

struct tagQACONTROL
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMiscStatus;
  /* 0x0008 */ unsigned long dwViewStatus;
  /* 0x000c */ unsigned long dwEventCookie;
  /* 0x0010 */ unsigned long dwPropNotifyCookie;
  /* 0x0014 */ unsigned long dwPointerActivationPolicy;
}; /* size: 0x0018 */

class HashWSTR
{
}; /* size: 0x0001 */

struct <vc_attributes>::event_receiverAttribute
{
  /* 0x0000 */ enum <vc_attributes>::event_receiverAttribute::type_e type;
  /* 0x0004 */ BOOL layout_dependent;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct CStdMarshal::Deactivate::__l3::tagServerRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0008 */ void* pServer;
}; /* size: 0x0010 */

typedef struct _SHFILEINFOW
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0008 */ int iIcon;
  /* 0x000c */ unsigned long dwAttributes;
  /* 0x0010 */ wchar_t szDisplayName[260];
  /* 0x0218 */ wchar_t szTypeName[80];
} SHFILEINFOW, *PSHFILEINFOW; /* size: 0x02b8 */

class CHeapHeader
{
  /* 0x0000 */ unsigned __int64 _ulFirstFree;
  /* 0x0008 */ unsigned __int64 _ulAllocedBlocks;
  /* 0x0010 */ int _fIsCompacted;
  /* 0x0014 */ unsigned long _dfLuid;
}; /* size: 0x0018 */

typedef struct _SYSDBG_IO_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long AddressSpace;
} SYSDBG_IO_SPACE, *PSYSDBG_IO_SPACE; /* size: 0x0020 */

class CBasedDeltaBlockPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct <vc_attributes>::retvalAttribute
{
}; /* size: 0x0001 */

typedef struct _OSVERSIONINFOW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
} OSVERSIONINFOW, *POSVERSIONINFOW; /* size: 0x0114 */

struct IWinInetInfo
{
}; /* size: 0x0008 */

struct tagCANDIDATEFORM
{
  /* 0x0000 */ unsigned long dwIndex;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ struct tagPOINT ptCurrentPos;
  /* 0x0010 */ struct tagRECT rcArea;
}; /* size: 0x0020 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnType;

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA
{
  union
  {
    /* 0x0000 */ struct HKEY__* hKeyBase;
    /* 0x0000 */ void* pvBase;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ void* pvSystemStore;
    /* 0x0008 */ const char* pszSystemStore;
    /* 0x0008 */ const wchar_t* pwszSystemStore;
  }; /* size: 0x0008 */
} CERT_SYSTEM_STORE_RELOCATE_PARA, *PCERT_SYSTEM_STORE_RELOCATE_PARA; /* size: 0x0010 */

struct CDefClient::CAdviseSinkImpl
{
  /* 0x0000 */ long Padding_986[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

typedef struct _SYSTEM_POOL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalSize;
  /* 0x0008 */ void* FirstEntry;
  /* 0x0010 */ unsigned short EntryOverhead;
  /* 0x0012 */ unsigned char PoolTagPresent;
  /* 0x0013 */ unsigned char Spare0;
  /* 0x0014 */ unsigned long NumberOfEntries;
  /* 0x0018 */ struct _SYSTEM_POOL_ENTRY Entries[1];
} SYSTEM_POOL_INFORMATION, *PSYSTEM_POOL_INFORMATION; /* size: 0x0028 */

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0030 */ unsigned long dwOriginatorChoice;
  /* 0x0034 */ long Padding_987;
  union
  {
    /* 0x0038 */ struct _CERT_ID OriginatorCertId;
    /* 0x0038 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0030 */
  /* 0x0068 */ unsigned long cKeyAgreeKeyEncryptInfo;
  /* 0x006c */ long Padding_988;
  /* 0x0070 */ struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO** rgpKeyAgreeKeyEncryptInfo;
  /* 0x0078 */ unsigned long dwFlags;
  /* 0x007c */ long __PADDING__[1];
} CMSG_KEY_AGREE_ENCRYPT_INFO, *PCMSG_KEY_AGREE_ENCRYPT_INFO; /* size: 0x0080 */

struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned long DeCommitFreeBlockThreshold;
  /* 0x001c */ unsigned long DeCommitTotalFreeThreshold;
  /* 0x0020 */ unsigned long LockPrefixTable;
  /* 0x0024 */ unsigned long MaximumAllocationSize;
  /* 0x0028 */ unsigned long VirtualMemoryThreshold;
  /* 0x002c */ unsigned long ProcessHeapFlags;
  /* 0x0030 */ unsigned long ProcessAffinityMask;
  /* 0x0034 */ unsigned short CSDVersion;
  /* 0x0036 */ unsigned short Reserved1;
  /* 0x0038 */ unsigned long EditList;
  /* 0x003c */ unsigned long SecurityCookie;
  /* 0x0040 */ unsigned long SEHandlerTable;
  /* 0x0044 */ unsigned long SEHandlerCount;
}; /* size: 0x0048 */

typedef struct _IMAGE_RESOURCE_DIR_STRING_U
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ wchar_t NameString[1];
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U; /* size: 0x0004 */

struct IDocfileAsyncConnectionPoint
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfThreads;
  /* 0x0008 */ union _LARGE_INTEGER WorkingSetPrivateSize;
  /* 0x0010 */ union _LARGE_INTEGER SpareLi2;
  /* 0x0018 */ union _LARGE_INTEGER SpareLi3;
  /* 0x0020 */ union _LARGE_INTEGER CreateTime;
  /* 0x0028 */ union _LARGE_INTEGER UserTime;
  /* 0x0030 */ union _LARGE_INTEGER KernelTime;
  /* 0x0038 */ struct _UNICODE_STRING ImageName;
  /* 0x0048 */ long BasePriority;
  /* 0x004c */ long Padding_989;
  /* 0x0050 */ void* UniqueProcessId;
  /* 0x0058 */ void* InheritedFromUniqueProcessId;
  /* 0x0060 */ unsigned long HandleCount;
  /* 0x0064 */ unsigned long SessionId;
  /* 0x0068 */ unsigned __int64 UniqueProcessKey;
  /* 0x0070 */ unsigned __int64 PeakVirtualSize;
  /* 0x0078 */ unsigned __int64 VirtualSize;
  /* 0x0080 */ unsigned long PageFaultCount;
  /* 0x0084 */ long Padding_990;
  /* 0x0088 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0090 */ unsigned __int64 WorkingSetSize;
  /* 0x0098 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x00a0 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x00a8 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x00b0 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x00b8 */ unsigned __int64 PagefileUsage;
  /* 0x00c0 */ unsigned __int64 PeakPagefileUsage;
  /* 0x00c8 */ unsigned __int64 PrivatePageCount;
  /* 0x00d0 */ union _LARGE_INTEGER ReadOperationCount;
  /* 0x00d8 */ union _LARGE_INTEGER WriteOperationCount;
  /* 0x00e0 */ union _LARGE_INTEGER OtherOperationCount;
  /* 0x00e8 */ union _LARGE_INTEGER ReadTransferCount;
  /* 0x00f0 */ union _LARGE_INTEGER WriteTransferCount;
  /* 0x00f8 */ union _LARGE_INTEGER OtherTransferCount;
} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION; /* size: 0x0100 */

typedef struct _KEY_VALUE_ENTRY
{
  /* 0x0000 */ struct _UNICODE_STRING* ValueName;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned long DataOffset;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ long __PADDING__[1];
} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY; /* size: 0x0018 */

typedef struct _RTL_BALANCED_LINKS
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS* Parent;
  /* 0x0008 */ struct _RTL_BALANCED_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_BALANCED_LINKS* RightChild;
  /* 0x0018 */ char Balance;
  /* 0x0019 */ unsigned char Reserved[3];
  /* 0x001c */ long __PADDING__[1];
} RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS; /* size: 0x0020 */

typedef struct _RTL_AVL_TABLE
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedRoot;
  /* 0x0020 */ void* OrderedPointer;
  /* 0x0028 */ unsigned long WhichOrderedElement;
  /* 0x002c */ unsigned long NumberGenericTableElements;
  /* 0x0030 */ unsigned long DepthOfTree;
  /* 0x0034 */ long Padding_991;
  /* 0x0038 */ struct _RTL_BALANCED_LINKS* RestartKey;
  /* 0x0040 */ unsigned long DeleteCount;
  /* 0x0044 */ long Padding_992;
  /* 0x0048 */ void* CompareRoutine /* function */;
  /* 0x0050 */ void* AllocateRoutine /* function */;
  /* 0x0058 */ void* FreeRoutine /* function */;
  /* 0x0060 */ void* TableContext;
} RTL_AVL_TABLE, *PRTL_AVL_TABLE; /* size: 0x0068 */

struct IRpcProxyBuffer
{
  /* 0x0000 */ struct IRpcProxyBufferVtbl* lpVtbl;
}; /* size: 0x0008 */

typedef struct _CERT_CHAIN_ENGINE_CONFIG
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_993;
  /* 0x0008 */ void* hRestrictedRoot;
  /* 0x0010 */ void* hRestrictedTrust;
  /* 0x0018 */ void* hRestrictedOther;
  /* 0x0020 */ unsigned long cAdditionalStore;
  /* 0x0024 */ long Padding_994;
  /* 0x0028 */ void** rghAdditionalStore;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0038 */ unsigned long MaximumCachedCertificates;
  /* 0x003c */ unsigned long CycleDetectionModulus;
} CERT_CHAIN_ENGINE_CONFIG, *PCERT_CHAIN_ENGINE_CONFIG; /* size: 0x0040 */

struct <vc_attributes>::bindableAttribute
{
}; /* size: 0x0001 */

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwFlags;
} BCRYPT_ALGORITHM_IDENTIFIER, *PBCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0010 */

struct tagRID_DEVICE_INFO_HID
{
  /* 0x0000 */ unsigned long dwVendorId;
  /* 0x0004 */ unsigned long dwProductId;
  /* 0x0008 */ unsigned long dwVersionNumber;
  /* 0x000c */ unsigned short usUsagePage;
  /* 0x000e */ unsigned short usUsage;
}; /* size: 0x0010 */

struct tagRID_DEVICE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwType;
  union
  {
    /* 0x0008 */ struct tagRID_DEVICE_INFO_MOUSE mouse;
    /* 0x0008 */ struct tagRID_DEVICE_INFO_KEYBOARD keyboard;
    struct
    {
      /* 0x0008 */ struct tagRID_DEVICE_INFO_HID hid;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0020 */

struct ICallFrameInit
{
}; /* size: 0x0008 */

typedef struct _ALPC_SECURITY_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_995;
  /* 0x0008 */ struct _SECURITY_QUALITY_OF_SERVICE* QoS;
  /* 0x0010 */ void* ContextHandle;
} ALPC_SECURITY_ATTR, *PALPC_SECURITY_ATTR; /* size: 0x0018 */

typedef struct _RTL_UNLOAD_EVENT_TRACE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE, *PRTL_UNLOAD_EVENT_TRACE; /* size: 0x0060 */

struct ISimpleFrameSite
{
}; /* size: 0x0008 */

class CExtHashTable
{
}; /* size: 0x0028 */

struct IPersistStreamInit
{
}; /* size: 0x0008 */

struct tagTITLEBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
}; /* size: 0x002c */

class CSecurityDescriptor
{
  /* 0x0000 */ struct _SECURITY_DESCRIPTOR _sd;
}; /* size: 0x0028 */

struct <vc_attributes>::atl::rdxAttribute
{
  /* 0x0000 */ const char* key;
  /* 0x0008 */ const char* valuename;
  /* 0x0010 */ const char* regtype;
}; /* size: 0x0018 */

typedef struct _RPC_IF_ID
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_IF_ID, *PRPC_IF_ID; /* size: 0x0014 */

struct <vc_attributes>::atl::db_sourceAttribute
{
  /* 0x0000 */ const char* source;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* hresult;
}; /* size: 0x0018 */

typedef struct _COSERVERINFO
{
  /* 0x0000 */ unsigned long dwReserved1;
  /* 0x0004 */ long Padding_996;
  /* 0x0008 */ unsigned short* pwszName;
  /* 0x0010 */ struct _COAUTHINFO* pAuthInfo;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ long __PADDING__[1];
} COSERVERINFO, *PCOSERVERINFO; /* size: 0x0020 */

class CSystemException
{
  /* 0x0000 */ long Padding_997[4];
  /* 0x0010 */ unsigned long _ulExcept;
}; /* size: 0x0018 */

struct <vc_attributes>::stringAttribute
{
}; /* size: 0x0001 */

struct CCompositeMonikerEnum::se
{
  /* 0x0000 */ class CCompositeMoniker* m_pCM;
  /* 0x0008 */ struct CCompositeMonikerEnum::se* m_pseNext;
  /* 0x0010 */ struct CCompositeMonikerEnum::se* m_psePrev;
}; /* size: 0x0018 */

struct IOleCacheControl
{
}; /* size: 0x0008 */

typedef struct _EISA_MEMORY_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_MEMORY_TYPE ConfigurationByte;
  /* 0x0001 */ unsigned char DataSize;
  /* 0x0002 */ unsigned short AddressLowWord;
  /* 0x0004 */ unsigned char AddressHighByte;
  /* 0x0005 */ unsigned short MemorySize;
} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION; /* size: 0x0007 */

typedef struct _COAUTHIDENTITY
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_998;
  /* 0x0010 */ unsigned short* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_999;
  /* 0x0020 */ unsigned short* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} COAUTHIDENTITY, *PCOAUTHIDENTITY; /* size: 0x0030 */

class CExceptionContext::StackElement
{
  /* 0x0000 */ void* _pthis;
  /* 0x0008 */ void* _pfn /* function */;
  /* 0x0010 */ unsigned long _cbElement;
}; /* size: 0x0018 */

struct tagHIGHCONTRASTA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszDefaultScheme;
}; /* size: 0x0010 */

typedef struct _FILE_NETWORK_OPEN_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ unsigned long FileAttributes;
  /* 0x0034 */ long __PADDING__[1];
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION; /* size: 0x0038 */

struct MARK_HANDLE_INFO32
{
  /* 0x0000 */ unsigned long UsnSourceInfo;
  /* 0x0004 */ unsigned int VolumeHandle;
  /* 0x0008 */ unsigned long HandleInfo;
}; /* size: 0x000c */

typedef union _userHMETAFILE::__MIDL_IWinTypes_0004
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILE::__MIDL_IWinTypes_0004, *PuserHMETAFILE::__MIDL_IWinTypes_0004; /* size: 0x0008 */

typedef struct _userHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1000;
  /* 0x0008 */ union _userHMETAFILE::__MIDL_IWinTypes_0004 u;
} userHMETAFILE, *PuserHMETAFILE; /* size: 0x0010 */

typedef struct _IMAGEHLP_SYMBOLW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1001;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ wchar_t Name[1];
  /* 0x001e */ char __PADDING__[2];
} IMAGEHLP_SYMBOLW64, *PIMAGEHLP_SYMBOLW64; /* size: 0x0020 */

struct tagEMRCREATEBRUSHINDIRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ struct tagLOGBRUSH32 lb;
}; /* size: 0x0018 */

typedef struct _UNICODE_PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_1002;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* LastNextEntry;
} UNICODE_PREFIX_TABLE, *PUNICODE_PREFIX_TABLE; /* size: 0x0018 */

typedef struct _SYMBOL_INFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_1003;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ char Name[1];
  /* 0x0055 */ char __PADDING__[3];
} SYMBOL_INFO, *PSYMBOL_INFO; /* size: 0x0058 */

class CAtom
{
  /* 0x0000 */ unsigned short m_atom;
}; /* size: 0x0002 */

typedef struct _RTL_DEBUG_INFORMATION32
{
  /* 0x0000 */ unsigned long SectionHandleClient;
  /* 0x0004 */ unsigned long ViewBaseClient;
  /* 0x0008 */ unsigned long ViewBaseTarget;
  /* 0x000c */ unsigned long ViewBaseDelta;
  /* 0x0010 */ unsigned long EventPairClient;
  /* 0x0014 */ unsigned long EventPairTarget;
  /* 0x0018 */ unsigned long TargetProcessId;
  /* 0x001c */ unsigned long TargetThreadHandle;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long OffsetFree;
  /* 0x0028 */ unsigned long CommitSize;
  /* 0x002c */ unsigned long ViewSize;
  union
  {
    /* 0x0030 */ unsigned long Modules;
    /* 0x0030 */ unsigned long ModulesEx;
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long BackTraces;
  /* 0x0038 */ unsigned long Heaps;
  /* 0x003c */ unsigned long Locks;
  /* 0x0040 */ unsigned long SpecificHeap;
  /* 0x0044 */ unsigned long TargetProcessHandle;
  /* 0x0048 */ unsigned long VerifierOptions;
  /* 0x004c */ unsigned long ProcessHeap;
  /* 0x0050 */ unsigned long CriticalSectionHandle;
  /* 0x0054 */ unsigned long CriticalSectionOwnerThread;
  /* 0x0058 */ unsigned long Reserved[4];
} RTL_DEBUG_INFORMATION32, *PRTL_DEBUG_INFORMATION32; /* size: 0x0068 */

struct <vc_attributes>::entryAttribute
{
  /* 0x0000 */ const char* entry_id;
}; /* size: 0x0008 */

class CMapDwordPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

struct tagRemFORMATETC
{
  /* 0x0000 */ unsigned long cfFormat;
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

class CStackWalkerStack
{
  /* 0x0000 */ long Padding_1004[2];
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ unsigned long m_dwFlags;
  /* 0x0010 */ class CStackWalkerSymbol* m_pTopSymbol;
}; /* size: 0x0018 */

typedef struct _IMAGEHLP_SYMBOLW64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOLW64 sym;
  /* 0x0020 */ wchar_t name[2001];
  /* 0x0fc2 */ char __PADDING__[6];
} IMAGEHLP_SYMBOLW64_PACKAGE, *PIMAGEHLP_SYMBOLW64_PACKAGE; /* size: 0x0fc8 */

struct <vc_attributes>::helper_attributes::attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ BOOL Inherited;
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

struct IAdviseSinkEx
{
}; /* size: 0x0008 */

struct IEnumConnectionPoints
{
}; /* size: 0x0008 */

typedef struct _ALPC_PORT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x0010 */ unsigned __int64 MaxMessageLength;
  /* 0x0018 */ unsigned __int64 MemoryBandwidth;
  /* 0x0020 */ unsigned __int64 MaxPoolUsage;
  /* 0x0028 */ unsigned __int64 MaxSectionSize;
  /* 0x0030 */ unsigned __int64 MaxViewSize;
  /* 0x0038 */ unsigned __int64 MaxTotalSectionSize;
  /* 0x0040 */ unsigned long DupObjectTypes;
  /* 0x0044 */ unsigned long Reserved;
} ALPC_PORT_ATTRIBUTES, *PALPC_PORT_ATTRIBUTES; /* size: 0x0048 */

typedef struct _tagPROTOCOLFILTERDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1005;
  /* 0x0008 */ struct IInternetProtocolSink* pProtocolSink;
  /* 0x0010 */ struct IInternetProtocol* pProtocol;
  /* 0x0018 */ struct IUnknown* pUnk;
  /* 0x0020 */ unsigned long dwFilterFlags;
  /* 0x0024 */ long __PADDING__[1];
} tagPROTOCOLFILTERDATA, *PtagPROTOCOLFILTERDATA; /* size: 0x0028 */

struct pvalueA
{
  /* 0x0000 */ char* pv_valuename;
  /* 0x0008 */ int pv_valuelen;
  /* 0x000c */ long Padding_1006;
  /* 0x0010 */ void* pv_value_context;
  /* 0x0018 */ unsigned long pv_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct tagMainHeader
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long cPolicies;
  /* 0x000c */ unsigned long cbBuffer;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ long hr;
  /* 0x0018 */ long hrServer;
  /* 0x001c */ long reserved;
}; /* size: 0x0020 */

typedef struct _OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long PagedPoolCharge;
  /* 0x0014 */ unsigned long NonPagedPoolCharge;
  /* 0x0018 */ unsigned long Reserved[3];
  /* 0x0024 */ unsigned long NameInfoSize;
  /* 0x0028 */ unsigned long TypeInfoSize;
  /* 0x002c */ unsigned long SecurityDescriptorSize;
  /* 0x0030 */ union _LARGE_INTEGER CreationTime;
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _RTL_CRITICAL_SECTION64
{
  /* 0x0000 */ unsigned __int64 DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ unsigned __int64 OwningThread;
  /* 0x0018 */ unsigned __int64 LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION64, *PRTL_CRITICAL_SECTION64; /* size: 0x0028 */

struct tagENUMLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
}; /* size: 0x009c */

typedef struct _PROCESSOR_IDLE_STATE_EX
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0001 */ char Padding_1007[3];
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ void* Context;
  /* 0x0018 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE_EX, *PPROCESSOR_IDLE_STATE_EX; /* size: 0x0020 */

typedef struct _PROCESSOR_IDLE_STATES_EX
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct _PROCESSOR_IDLE_STATE_EX State[1];
} PROCESSOR_IDLE_STATES_EX, *PPROCESSOR_IDLE_STATES_EX; /* size: 0x0038 */

typedef struct _REPARSE_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ unsigned long Flags;
      /* 0x0014 */ wchar_t PathBuffer[1];
      /* 0x0016 */ char __PADDING__[2];
    } /* size: 0x0010 */ SymbolicLinkReparseBuffer;
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ wchar_t PathBuffer[1];
    } /* size: 0x000a */ MountPointReparseBuffer;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned char DataBuffer[1];
      } /* size: 0x0001 */ GenericReparseBuffer;
      /* 0x0009 */ char __PADDING__[15];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER; /* size: 0x0018 */

struct RegistryKeyValue
{
  /* 0x0000 */ wchar_t* key;
  /* 0x0008 */ wchar_t* value;
}; /* size: 0x0010 */

struct tagMOUSEHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned int wHitTestCode;
  /* 0x0014 */ long Padding_1008;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

struct IPropertyPage
{
}; /* size: 0x0008 */

struct IRemUnknownN
{
}; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_FIXED
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
} PO_WAKE_SOURCE_FIXED, *PPO_WAKE_SOURCE_FIXED; /* size: 0x000c */

struct IPropertyBag2
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PREFETCH_STATS
{
  /* 0x0000 */ unsigned long DemandFilePageCount;
  /* 0x0004 */ unsigned long DemandFileIOCount;
  /* 0x0008 */ unsigned long TrickleFilePageCount;
  /* 0x000c */ unsigned long TrickleFileIOCount;
  /* 0x0010 */ unsigned long DemandPrivatePageCount;
  /* 0x0014 */ unsigned long DemandPrivateIOCount;
  /* 0x0018 */ unsigned long TricklePrivatePageCount;
  /* 0x001c */ unsigned long TricklePrivateIOCount;
} SYSTEM_PREFETCH_STATS, *PSYSTEM_PREFETCH_STATS; /* size: 0x0020 */

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1009;
  /* 0x0008 */ struct _GUID* pgActionID;
  /* 0x0010 */ wchar_t* pwszDllName;
  /* 0x0018 */ char* pwszLoadCallbackDataFunctionName;
  /* 0x0020 */ char* pwszFreeCallbackDataFunctionName;
} CRYPT_PROVIDER_REGDEFUSAGE, *PCRYPT_PROVIDER_REGDEFUSAGE; /* size: 0x0028 */

struct <vc_attributes>::helper_attributes::usageAttribute
{
  /* 0x0000 */ unsigned int value;
}; /* size: 0x0004 */

struct tagMOUSEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iMaxSpeed;
  /* 0x000c */ unsigned long iTimeToMaxSpeed;
  /* 0x0010 */ unsigned long iCtrlSpeed;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
}; /* size: 0x001c */

typedef struct _MINIDUMP_HANDLE_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextInfoRva;
  /* 0x0004 */ unsigned int InfoType;
  /* 0x0008 */ unsigned int SizeOfInfo;
} MINIDUMP_HANDLE_OBJECT_INFORMATION, *PMINIDUMP_HANDLE_OBJECT_INFORMATION; /* size: 0x000c */

struct <vc_attributes>::versionAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _FILE_FULL_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char EaNameLength;
  /* 0x0006 */ unsigned short EaValueLength;
  /* 0x0008 */ char EaName[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION; /* size: 0x000c */

struct IEnumGeneric
{
}; /* size: 0x0008 */

struct IGetContextId
{
}; /* size: 0x0008 */

typedef struct _FILE_QUERY_SPARING_BUFFER
{
  /* 0x0000 */ unsigned long SparingUnitBytes;
  /* 0x0004 */ unsigned char SoftwareSparing;
  /* 0x0005 */ char Padding_1010[3];
  /* 0x0008 */ unsigned long TotalSpareBlocks;
  /* 0x000c */ unsigned long FreeSpareBlocks;
} FILE_QUERY_SPARING_BUFFER, *PFILE_QUERY_SPARING_BUFFER; /* size: 0x0010 */

typedef struct _WINTRUST_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1011;
  /* 0x0008 */ void* pPolicyCallbackData;
  /* 0x0010 */ void* pSIPClientData;
  /* 0x0018 */ unsigned long dwUIChoice;
  /* 0x001c */ unsigned long fdwRevocationChecks;
  /* 0x0020 */ unsigned long dwUnionChoice;
  /* 0x0024 */ long Padding_1012;
  union
  {
    /* 0x0028 */ struct WINTRUST_FILE_INFO_* pFile;
    /* 0x0028 */ struct WINTRUST_CATALOG_INFO_* pCatalog;
    /* 0x0028 */ struct WINTRUST_BLOB_INFO_* pBlob;
    /* 0x0028 */ struct WINTRUST_SGNR_INFO_* pSgnr;
    /* 0x0028 */ struct WINTRUST_CERT_INFO_* pCert;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned long dwStateAction;
  /* 0x0034 */ long Padding_1013;
  /* 0x0038 */ void* hWVTStateData;
  /* 0x0040 */ wchar_t* pwszURLReference;
  /* 0x0048 */ unsigned long dwProvFlags;
  /* 0x004c */ unsigned long dwUIContext;
} WINTRUST_DATA, *PWINTRUST_DATA; /* size: 0x0050 */

struct HPEN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CRYPT_PROVIDER_FUNCTIONS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1014;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
  /* 0x0018 */ void* pfnAddStore2Chain /* function */;
  /* 0x0020 */ void* pfnAddSgnr2Chain /* function */;
  /* 0x0028 */ void* pfnAddCert2Chain /* function */;
  /* 0x0030 */ void* pfnAddPrivData2Chain /* function */;
  /* 0x0038 */ void* pfnInitialize /* function */;
  /* 0x0040 */ void* pfnObjectTrust /* function */;
  /* 0x0048 */ void* pfnSignatureTrust /* function */;
  /* 0x0050 */ void* pfnCertificateTrust /* function */;
  /* 0x0058 */ void* pfnFinalPolicy /* function */;
  /* 0x0060 */ void* pfnCertCheckPolicy /* function */;
  /* 0x0068 */ void* pfnTestFinalPolicy /* function */;
  /* 0x0070 */ struct _CRYPT_PROVUI_FUNCS* psUIpfns;
  /* 0x0078 */ void* pfnCleanupPolicy /* function */;
} CRYPT_PROVIDER_FUNCTIONS, *PCRYPT_PROVIDER_FUNCTIONS; /* size: 0x0080 */

struct tagCURSORSHAPE
{
  /* 0x0000 */ int xHotSpot;
  /* 0x0004 */ int yHotSpot;
  /* 0x0008 */ int cx;
  /* 0x000c */ int cy;
  /* 0x0010 */ int cbWidth;
  /* 0x0014 */ unsigned char Planes;
  /* 0x0015 */ unsigned char BitsPixel;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1015;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ unsigned __int64 hCryptProv;
  /* 0x0030 */ unsigned long dwKeyChoice;
  /* 0x0034 */ long Padding_1016;
  union
  {
    /* 0x0038 */ unsigned __int64 hKeyEncryptionKey;
    /* 0x0038 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0008 */
  /* 0x0040 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0050 */ struct _FILETIME Date;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO; /* size: 0x0060 */

struct WINTRUST_CATALOG_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwCatalogVersion;
  /* 0x0008 */ const wchar_t* pcwszCatalogFilePath;
  /* 0x0010 */ const wchar_t* pcwszMemberTag;
  /* 0x0018 */ const wchar_t* pcwszMemberFilePath;
  /* 0x0020 */ void* hMemberFile;
  /* 0x0028 */ unsigned char* pbCalculatedFileHash;
  /* 0x0030 */ unsigned long cbCalculatedFileHash;
  /* 0x0034 */ long Padding_1017;
  /* 0x0038 */ const struct _CTL_CONTEXT* pcCatalogContext;
}; /* size: 0x0040 */

struct tagEMRSTRETCHBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

struct <vc_attributes>::v1_enumAttribute
{
}; /* size: 0x0001 */

class CEnumCategories
{
  /* 0x0000 */ long Padding_1018[2];
  /* 0x0008 */ struct HKEY__* m_hKey;
  /* 0x0010 */ unsigned long m_dwIndex;
  /* 0x0014 */ unsigned long m_lcid;
  /* 0x0018 */ struct IEnumCATEGORYINFO* m_pcsIEnumCat;
  /* 0x0020 */ int m_fromcs;
  /* 0x0024 */ unsigned long m_dwRefCount;
}; /* size: 0x0028 */

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned long SecurityLimitFlags;
  /* 0x0004 */ long Padding_1019;
  /* 0x0008 */ void* JobToken;
  /* 0x0010 */ struct _TOKEN_GROUPS* SidsToDisable;
  /* 0x0018 */ struct _TOKEN_PRIVILEGES* PrivilegesToDelete;
  /* 0x0020 */ struct _TOKEN_GROUPS* RestrictedSids;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION; /* size: 0x0028 */

struct tagWNDCLASSA
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ long Padding_1020;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const char* lpszMenuName;
  /* 0x0040 */ const char* lpszClassName;
}; /* size: 0x0048 */

class CPipeProxy<unsigned char,&IID_IPipeByte,&IID_AsyncIPipeByte,IPipeByte,AsyncIPipeByte>
{
  /* 0x0000 */ long Padding_1021[2];
  /* 0x0008 */ struct IUnknown* m_pUnkOuter;
  /* 0x0010 */ long m_cRef;
  /* 0x0014 */ long Padding_1022;
  /* 0x0018 */ struct IPipeByte* m_pRealProxy;
  /* 0x0020 */ struct IUnknown* m_pPullCallObj;
  /* 0x0028 */ struct AsyncIPipeByte* m_pAsyncPullPipe;
  /* 0x0030 */ struct ISynchronize* m_pISyncPull;
  /* 0x0038 */ enum PULLSTATE m_PullState;
  /* 0x003c */ unsigned long m_cReadAhead;
  /* 0x0040 */ unsigned long m_cLastRead;
  /* 0x0044 */ unsigned long m_cKeepBufferSize;
  /* 0x0048 */ unsigned char* m_pKeepBuffer;
  /* 0x0050 */ unsigned long m_cKeepDataSize;
  /* 0x0054 */ long Padding_1023;
  /* 0x0058 */ unsigned char* m_pKeepData;
  /* 0x0060 */ struct IUnknown* m_pPushCallObj;
  /* 0x0068 */ struct AsyncIPipeByte* m_pAsyncPushPipe;
  /* 0x0070 */ struct ISynchronize* m_pISyncPush;
  /* 0x0078 */ enum PUSHSTATE m_PushState;
  /* 0x007c */ unsigned long m_cPushBufferSize;
  /* 0x0080 */ unsigned char* m_pPushBuffer;
  /* 0x0088 */ unsigned long m_cFreeSpace;
  /* 0x008c */ long Padding_1024;
  /* 0x0090 */ unsigned char* m_pFreeSpace;
  /* 0x0098 */ void* PullStateFunc[14] /* function */;
  /* 0x0108 */ void* PushStateFunc[12] /* function */;
}; /* size: 0x0168 */

struct HWINEVENTHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CRYPT_AES_256_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[32];
  /* 0x0020 */ unsigned char IV[16];
  /* 0x0030 */ unsigned char EncryptionState[16][15];
  /* 0x0120 */ unsigned char DecryptionState[16][15];
  /* 0x0210 */ unsigned char Feedback[16];
} CRYPT_AES_256_KEY_STATE, *PCRYPT_AES_256_KEY_STATE; /* size: 0x0220 */

struct <vc_attributes>::rangeAttribute
{
  /* 0x0000 */ int low_val;
  /* 0x0004 */ int high_val;
}; /* size: 0x0008 */

typedef struct _TOKEN_PRIVILEGES
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ struct _LUID_AND_ATTRIBUTES Privileges[1];
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES; /* size: 0x0010 */

class CObjrefMoniker
{
  /* 0x0000 */ long Padding_1025[14];
  /* 0x0038 */ wchar_t* m_lpszDisplayName;
}; /* size: 0x0040 */

struct IOleParentUndoUnit
{
}; /* size: 0x0008 */

struct tagRAWINPUTDEVICE
{
  /* 0x0000 */ unsigned short usUsagePage;
  /* 0x0002 */ unsigned short usUsage;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTarget;
}; /* size: 0x0010 */

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long FuncStart;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long PrologLen : 8; /* bit position: 0 */
    /* 0x0004 */ unsigned long FuncLen : 22; /* bit position: 8 */
    /* 0x0004 */ unsigned long ThirtyTwoBit : 1; /* bit position: 30 */
    /* 0x0004 */ unsigned long ExceptionFlag : 1; /* bit position: 31 */
  }; /* bitfield */
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

class CMfObject
{
  /* 0x0000 */ long Padding_1026[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ long Padding_1027;
  /* 0x0010 */ struct HMETAFILE__* m_hPres;
  /* 0x0018 */ struct _METAINFO* m_pMetaInfo;
  /* 0x0020 */ struct _METADC* m_pCurMdc;
  /* 0x0028 */ int m_fMetaDC;
  /* 0x002c */ int m_nRecord;
  /* 0x0030 */ HRESULT m_error;
  /* 0x0034 */ long Padding_1028;
  /* 0x0038 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0040 */ int m_fConvert;
  /* 0x0044 */ long Padding_1029;
  /* 0x0048 */ void* m_pfnContinue /* function */;
  /* 0x0050 */ unsigned __int64 m_dwContinue;
  /* 0x0058 */ unsigned long m_dwAspect;
  /* 0x005c */ unsigned long m_dwSize;
  /* 0x0060 */ long m_lWidth;
  /* 0x0064 */ long m_lHeight;
  /* 0x0068 */ class CCacheNode* m_pCacheNode;
  /* 0x0070 */ struct HPALETTE__* m_hPalDCOriginal;
  /* 0x0078 */ struct HPALETTE__* m_hPalLast;
}; /* size: 0x0080 */

struct tagSERIALKEYSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszActivePort;
  /* 0x0010 */ char* lpszPort;
  /* 0x0018 */ unsigned int iBaudRate;
  /* 0x001c */ unsigned int iPortState;
  /* 0x0020 */ unsigned int iActive;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct IPersistStream
{
}; /* size: 0x0008 */

struct <vc_attributes>::helpstringcontextAttribute
{
  /* 0x0000 */ int contextid;
}; /* size: 0x0004 */

struct tagSOAP_ACTIVATION_INFO
{
  /* 0x0000 */ int bSoapActivated;
  /* 0x0004 */ long lMode;
  /* 0x0008 */ wchar_t* bstrVRoot;
  /* 0x0010 */ wchar_t* bstrMailTo;
  /* 0x0018 */ wchar_t* bstrAssemblyName;
  /* 0x0020 */ wchar_t* bstrTypeName;
  /* 0x0028 */ wchar_t* bstrBaseUrl;
}; /* size: 0x0030 */

class CNullWalker
{
}; /* size: 0x0008 */

struct ANON_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
}; /* size: 0x0020 */

struct <vc_attributes>::optionalAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::sourceAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastVirtualClock;
  /* 0x0008 */ unsigned __int64 LastRedoLsn;
  /* 0x0010 */ unsigned __int64 HighestRecoveryLsn;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} TXFS_ROLLFORWARD_REDO_INFORMATION, *PTXFS_ROLLFORWARD_REDO_INFORMATION; /* size: 0x0020 */

typedef struct _CMSG_CMS_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1030;
  /* 0x0008 */ struct _CERT_ID SignerId;
  /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0060 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0070 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0080 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_CMS_SIGNER_INFO, *PCMSG_CMS_SIGNER_INFO; /* size: 0x0090 */

struct tagEVENTMSG
{
  /* 0x0000 */ unsigned int message;
  /* 0x0004 */ unsigned int paramL;
  /* 0x0008 */ unsigned int paramH;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ struct HWND__* hwnd;
}; /* size: 0x0018 */

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
{
  /* 0x0000 */ unsigned long SavepointId;
} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT; /* size: 0x0004 */

struct IPropertyBag
{
}; /* size: 0x0008 */

struct ORPC_DBG_ALL
{
  /* 0x0000 */ unsigned char* pSignature;
  /* 0x0008 */ struct tagRPCOLEMESSAGE* pMessage;
  /* 0x0010 */ const struct _GUID* refiid;
  /* 0x0018 */ struct IRpcChannelBuffer* pChannel;
  /* 0x0020 */ struct IUnknown* pUnkProxyMgr;
  /* 0x0028 */ void* pInterface;
  /* 0x0030 */ struct IUnknown* pUnkObject;
  /* 0x0038 */ HRESULT hresult;
  /* 0x003c */ long Padding_1031;
  /* 0x0040 */ void* pvBuffer;
  /* 0x0048 */ unsigned long cbBuffer;
  /* 0x004c */ long Padding_1032;
  /* 0x0050 */ unsigned long* lpcbBuffer;
  /* 0x0058 */ void* reserved;
}; /* size: 0x0060 */

typedef struct _CERT_NAME_INFO
{
  /* 0x0000 */ unsigned long cRDN;
  /* 0x0004 */ long Padding_1033;
  /* 0x0008 */ struct _CERT_RDN* rgRDN;
} CERT_NAME_INFO, *PCERT_NAME_INFO; /* size: 0x0010 */

typedef struct _FILE_FS_FULL_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER CallerAvailableAllocationUnits;
  /* 0x0010 */ union _LARGE_INTEGER ActualAvailableAllocationUnits;
  /* 0x0018 */ unsigned long SectorsPerAllocationUnit;
  /* 0x001c */ unsigned long BytesPerSector;
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION; /* size: 0x0020 */

typedef struct _CRYPT_CSP_PROVIDER
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ long Padding_1034;
  /* 0x0008 */ wchar_t* pwszProviderName;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB Signature;
} CRYPT_CSP_PROVIDER, *PCRYPT_CSP_PROVIDER; /* size: 0x0028 */

class BUCL::CDequeLinkage
{
  /* 0x0000 */ long Padding_1035[4];
  /* 0x0010 */ class BUCL::CDequeBase* m_pDeque;
}; /* size: 0x0018 */

typedef struct _SYSTEM_PROCESS_ID_INFORMATION
{
  /* 0x0000 */ void* ProcessId;
  /* 0x0008 */ struct _UNICODE_STRING ImageName;
} SYSTEM_PROCESS_ID_INFORMATION, *PSYSTEM_PROCESS_ID_INFORMATION; /* size: 0x0018 */

class Windows::Rtl::CRTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT m_WritingContext;
}; /* size: 0x0058 */

struct ISynchronizeEvent
{
}; /* size: 0x0008 */

struct <vc_attributes>::dispinterfaceAttribute
{
}; /* size: 0x0001 */

typedef struct _RevokeEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long dwReg;
} RevokeEntry, *PRevokeEntry; /* size: 0x0014 */

typedef struct _CACHE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
} CACHE_DESCRIPTOR, *PCACHE_DESCRIPTOR; /* size: 0x000c */

struct <vc_attributes>::uidefaultAttribute
{
}; /* size: 0x0001 */

class CPipeProxy<long,&IID_IPipeLong,&IID_AsyncIPipeLong,IPipeLong,AsyncIPipeLong>
{
  /* 0x0000 */ long Padding_1036[2];
  /* 0x0008 */ struct IUnknown* m_pUnkOuter;
  /* 0x0010 */ long m_cRef;
  /* 0x0014 */ long Padding_1037;
  /* 0x0018 */ struct IPipeLong* m_pRealProxy;
  /* 0x0020 */ struct IUnknown* m_pPullCallObj;
  /* 0x0028 */ struct AsyncIPipeLong* m_pAsyncPullPipe;
  /* 0x0030 */ struct ISynchronize* m_pISyncPull;
  /* 0x0038 */ enum PULLSTATE m_PullState;
  /* 0x003c */ unsigned long m_cReadAhead;
  /* 0x0040 */ unsigned long m_cLastRead;
  /* 0x0044 */ unsigned long m_cKeepBufferSize;
  /* 0x0048 */ long* m_pKeepBuffer;
  /* 0x0050 */ unsigned long m_cKeepDataSize;
  /* 0x0054 */ long Padding_1038;
  /* 0x0058 */ long* m_pKeepData;
  /* 0x0060 */ struct IUnknown* m_pPushCallObj;
  /* 0x0068 */ struct AsyncIPipeLong* m_pAsyncPushPipe;
  /* 0x0070 */ struct ISynchronize* m_pISyncPush;
  /* 0x0078 */ enum PUSHSTATE m_PushState;
  /* 0x007c */ unsigned long m_cPushBufferSize;
  /* 0x0080 */ long* m_pPushBuffer;
  /* 0x0088 */ unsigned long m_cFreeSpace;
  /* 0x008c */ long Padding_1039;
  /* 0x0090 */ long* m_pFreeSpace;
  /* 0x0098 */ void* PullStateFunc[14] /* function */;
  /* 0x0108 */ void* PushStateFunc[12] /* function */;
}; /* size: 0x0168 */

typedef struct _SHCREATEPROCESSINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const wchar_t* pszFile;
  /* 0x0018 */ const wchar_t* pszParameters;
  /* 0x0020 */ const wchar_t* pszCurrentDirectory;
  /* 0x0028 */ void* hUserToken;
  /* 0x0030 */ struct _SECURITY_ATTRIBUTES* lpProcessAttributes;
  /* 0x0038 */ struct _SECURITY_ATTRIBUTES* lpThreadAttributes;
  /* 0x0040 */ int bInheritHandles;
  /* 0x0044 */ unsigned long dwCreationFlags;
  /* 0x0048 */ struct _STARTUPINFOW* lpStartupInfo;
  /* 0x0050 */ struct _PROCESS_INFORMATION* lpProcessInformation;
} SHCREATEPROCESSINFOW, *PSHCREATEPROCESSINFOW; /* size: 0x0058 */

struct ILocalMachineNames
{
}; /* size: 0x0008 */

typedef struct _PROCESS_INFORMATION
{
  /* 0x0000 */ void* hProcess;
  /* 0x0008 */ void* hThread;
  /* 0x0010 */ unsigned long dwProcessId;
  /* 0x0014 */ unsigned long dwThreadId;
} PROCESS_INFORMATION, *PPROCESS_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER
{
  /* 0x0000 */ unsigned char CloseDisc;
} FILE_MAKE_COMPATIBLE_BUFFER, *PFILE_MAKE_COMPATIBLE_BUFFER; /* size: 0x0001 */

typedef struct _RTL_HEAP_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned short EntryOverhead;
  /* 0x000e */ unsigned short CreatorBackTraceIndex;
  /* 0x0010 */ unsigned __int64 BytesAllocated;
  /* 0x0018 */ unsigned __int64 BytesCommitted;
  /* 0x0020 */ unsigned long NumberOfTags;
  /* 0x0024 */ unsigned long NumberOfEntries;
  /* 0x0028 */ unsigned long NumberOfPseudoTags;
  /* 0x002c */ unsigned long PseudoTagGranularity;
  /* 0x0030 */ unsigned long Reserved[5];
  /* 0x0044 */ long Padding_1040;
  /* 0x0048 */ struct _RTL_HEAP_TAG* Tags;
  /* 0x0050 */ struct _RTL_HEAP_ENTRY* Entries;
} RTL_HEAP_INFORMATION, *PRTL_HEAP_INFORMATION; /* size: 0x0058 */

typedef struct _RTL_PROCESS_HEAPS
{
  /* 0x0000 */ unsigned long NumberOfHeaps;
  /* 0x0004 */ long Padding_1041;
  /* 0x0008 */ struct _RTL_HEAP_INFORMATION Heaps[1];
} RTL_PROCESS_HEAPS, *PRTL_PROCESS_HEAPS; /* size: 0x0060 */

typedef struct _QUERY_SERVICE_LOCK_STATUSW
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ long Padding_1042;
  /* 0x0008 */ wchar_t* lpLockOwner;
  /* 0x0010 */ unsigned long dwLockDuration;
  /* 0x0014 */ long __PADDING__[1];
} QUERY_SERVICE_LOCK_STATUSW, *PQUERY_SERVICE_LOCK_STATUSW; /* size: 0x0018 */

struct _TP_CLEANUP_GROUP;

typedef struct _KEY_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
} KEY_WRITE_TIME_INFORMATION, *PKEY_WRITE_TIME_INFORMATION; /* size: 0x0008 */

struct tagOLE1DISPATCHDATA
{
  /* 0x0000 */ enum DDE_DISPATCH_FUNC wDispFunc;
}; /* size: 0x0004 */

struct USN_RECORD
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned __int64 FileReferenceNumber;
  /* 0x0010 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0018 */ __int64 Usn;
  /* 0x0020 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0028 */ unsigned long Reason;
  /* 0x002c */ unsigned long SourceInfo;
  /* 0x0030 */ unsigned long SecurityId;
  /* 0x0034 */ unsigned long FileAttributes;
  /* 0x0038 */ unsigned short FileNameLength;
  /* 0x003a */ unsigned short FileNameOffset;
  /* 0x003c */ wchar_t FileName[1];
  /* 0x003e */ char __PADDING__[2];
}; /* size: 0x0040 */

typedef struct _BCRYPT_DSA_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
  /* 0x0008 */ unsigned char Count[4];
  /* 0x000c */ unsigned char Seed[20];
  /* 0x0020 */ unsigned char q[20];
} BCRYPT_DSA_KEY_BLOB, *PBCRYPT_DSA_KEY_BLOB; /* size: 0x0034 */

struct AllocateThrow
{
}; /* size: 0x0001 */

typedef struct _WIN32_FILE_ATTRIBUTE_DATA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA, *PWIN32_FILE_ATTRIBUTE_DATA; /* size: 0x0024 */

typedef struct _TXFS_GET_TRANSACTED_VERSION
{
  /* 0x0000 */ unsigned long ThisBaseVersion;
  /* 0x0004 */ unsigned long LatestVersion;
  /* 0x0008 */ unsigned short ThisMiniVersion;
  /* 0x000a */ unsigned short FirstMiniVersion;
  /* 0x000c */ unsigned short LatestMiniVersion;
  /* 0x000e */ char __PADDING__[2];
} TXFS_GET_TRANSACTED_VERSION, *PTXFS_GET_TRANSACTED_VERSION; /* size: 0x0010 */

typedef struct _FILE_MAILSLOT_SET_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER* ReadTimeout;
} FILE_MAILSLOT_SET_INFORMATION, *PFILE_MAILSLOT_SET_INFORMATION; /* size: 0x0008 */

struct IWinInetCacheHints
{
}; /* size: 0x0008 */

typedef struct _PROCESS_HANDLE_TRACING_QUERY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_1043;
  /* 0x0010 */ struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
} PROCESS_HANDLE_TRACING_QUERY, *PPROCESS_HANDLE_TRACING_QUERY; /* size: 0x00b0 */

struct <vc_attributes>::usesgetlasterrorAttribute
{
}; /* size: 0x0001 */

typedef struct _DOCINFOW
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ long Padding_1044;
  /* 0x0008 */ const wchar_t* lpszDocName;
  /* 0x0010 */ const wchar_t* lpszOutput;
  /* 0x0018 */ const wchar_t* lpszDatatype;
  /* 0x0020 */ unsigned long fwType;
  /* 0x0024 */ long __PADDING__[1];
} DOCINFOW, *PDOCINFOW; /* size: 0x0028 */

typedef struct _OSVERSIONINFOEXA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA; /* size: 0x009c */

typedef struct _IMAGE_COFF_SYMBOLS_HEADER
{
  /* 0x0000 */ unsigned long NumberOfSymbols;
  /* 0x0004 */ unsigned long LvaToFirstSymbol;
  /* 0x0008 */ unsigned long NumberOfLinenumbers;
  /* 0x000c */ unsigned long LvaToFirstLinenumber;
  /* 0x0010 */ unsigned long RvaToFirstByteOfCode;
  /* 0x0014 */ unsigned long RvaToLastByteOfCode;
  /* 0x0018 */ unsigned long RvaToFirstByteOfData;
  /* 0x001c */ unsigned long RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER; /* size: 0x0020 */

struct <vc_attributes>::coclassAttribute
{
}; /* size: 0x0001 */

typedef struct _ImageArchitectureHeader
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int AmaskValue : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned int : 7; /* bit position: 1 */
    /* 0x0000 */ unsigned int AmaskShift : 8; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long FirstEntryRVA;
} ImageArchitectureHeader, *PImageArchitectureHeader; /* size: 0x0008 */

struct tagDATAELEMENT
{
  /* 0x0000 */ struct _GUID dataID;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ unsigned long cbRounded;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
{
  /* 0x0000 */ unsigned long PropagationCookie;
  /* 0x0004 */ struct _GUID UOW;
  /* 0x0014 */ struct _GUID TmIdentity;
  /* 0x0024 */ unsigned long BufferLength;
} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT; /* size: 0x0028 */

typedef struct _BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_1045;
  /* 0x0008 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0010 */ void* GetProperty /* function */;
  /* 0x0018 */ void* SetProperty /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* SecretAgreement /* function */;
  /* 0x0030 */ void* DeriveKey /* function */;
  /* 0x0038 */ void* DestroySecret /* function */;
  /* 0x0040 */ void* GenerateKeyPair /* function */;
  /* 0x0048 */ void* FinalizeKeyPair /* function */;
  /* 0x0050 */ void* ImportKeyPair /* function */;
  /* 0x0058 */ void* ExportKey /* function */;
  /* 0x0060 */ void* DestroyKey /* function */;
} BCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE, *PBCRYPT_SECRET_AGREEMENT_FUNCTION_TABLE; /* size: 0x0068 */

struct tagEMRPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
}; /* size: 0x0020 */

typedef struct _CM_MONITOR_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short HorizontalScreenSize;
  /* 0x0006 */ unsigned short VerticalScreenSize;
  /* 0x0008 */ unsigned short HorizontalResolution;
  /* 0x000a */ unsigned short VerticalResolution;
  /* 0x000c */ unsigned short HorizontalDisplayTimeLow;
  /* 0x000e */ unsigned short HorizontalDisplayTime;
  /* 0x0010 */ unsigned short HorizontalDisplayTimeHigh;
  /* 0x0012 */ unsigned short HorizontalBackPorchLow;
  /* 0x0014 */ unsigned short HorizontalBackPorch;
  /* 0x0016 */ unsigned short HorizontalBackPorchHigh;
  /* 0x0018 */ unsigned short HorizontalFrontPorchLow;
  /* 0x001a */ unsigned short HorizontalFrontPorch;
  /* 0x001c */ unsigned short HorizontalFrontPorchHigh;
  /* 0x001e */ unsigned short HorizontalSyncLow;
  /* 0x0020 */ unsigned short HorizontalSync;
  /* 0x0022 */ unsigned short HorizontalSyncHigh;
  /* 0x0024 */ unsigned short VerticalBackPorchLow;
  /* 0x0026 */ unsigned short VerticalBackPorch;
  /* 0x0028 */ unsigned short VerticalBackPorchHigh;
  /* 0x002a */ unsigned short VerticalFrontPorchLow;
  /* 0x002c */ unsigned short VerticalFrontPorch;
  /* 0x002e */ unsigned short VerticalFrontPorchHigh;
  /* 0x0030 */ unsigned short VerticalSyncLow;
  /* 0x0032 */ unsigned short VerticalSync;
  /* 0x0034 */ unsigned short VerticalSyncHigh;
} CM_MONITOR_DEVICE_DATA, *PCM_MONITOR_DEVICE_DATA; /* size: 0x0036 */

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY NextEntry;
  /* 0x0010 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0020 */ struct _UNICODE_STRING FullDllName;
  /* 0x0030 */ unsigned long CoverageSectionSize;
  /* 0x0034 */ long Padding_1046;
  /* 0x0038 */ void* CoverageSection;
} COVERAGE_UNLOADED_MODULE_ENTRY, *PCOVERAGE_UNLOADED_MODULE_ENTRY; /* size: 0x0040 */

class Windows::Rtl::StringTraits<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

struct <vc_attributes>::defaultcollelemAttribute
{
}; /* size: 0x0001 */

typedef struct _RegInputEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned __int64 oxid;
  /* 0x0018 */ struct _GUID ipid;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ long __PADDING__[1];
} RegInputEntry, *PRegInputEntry; /* size: 0x0030 */

typedef struct _RegInput
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_1047;
  /* 0x0008 */ struct _RegInputEntry rginent[1];
} RegInput, *PRegInput; /* size: 0x0038 */

struct <vc_attributes>::aggregatableAttribute
{
  /* 0x0000 */ enum <vc_attributes>::aggregatableAttribute::type_e type;
}; /* size: 0x0004 */

class CVirtualUnwindable
{
}; /* size: 0x0008 */

struct <vc_attributes>::atl::support_error_infoAttribute
{
  /* 0x0000 */ const char* error_interface;
}; /* size: 0x0008 */

struct tagEMRPOLYDRAW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
  /* 0x0024 */ unsigned char abTypes[1];
  /* 0x0025 */ char __PADDING__[3];
}; /* size: 0x0028 */

struct tagMENUBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcBar;
  /* 0x0014 */ long Padding_1048;
  /* 0x0018 */ struct HMENU__* hMenu;
  /* 0x0020 */ struct HWND__* hwndMenu;
  struct /* bitfield */
  {
    /* 0x0028 */ int fBarFocused : 1; /* bit position: 0 */
    /* 0x0028 */ int fFocused : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION
{
  /* 0x0000 */ unsigned long Probability;
  /* 0x0004 */ unsigned long MaxProbability;
  /* 0x0008 */ struct _UNICODE_STRING PoolTags;
  /* 0x0018 */ struct _UNICODE_STRING Applications;
} SYSTEM_VERIFIER_FAULTS_INFORMATION, *PSYSTEM_VERIFIER_FAULTS_INFORMATION; /* size: 0x0028 */

struct tagWINDOWPLACEMENT
{
  /* 0x0000 */ unsigned int length;
  /* 0x0004 */ unsigned int flags;
  /* 0x0008 */ unsigned int showCmd;
  /* 0x000c */ struct tagPOINT ptMinPosition;
  /* 0x0014 */ struct tagPOINT ptMaxPosition;
  /* 0x001c */ struct tagRECT rcNormalPosition;
}; /* size: 0x002c */

typedef struct _NT_TIB32
{
  /* 0x0000 */ unsigned long ExceptionList;
  /* 0x0004 */ unsigned long StackBase;
  /* 0x0008 */ unsigned long StackLimit;
  /* 0x000c */ unsigned long SubSystemTib;
  union
  {
    /* 0x0010 */ unsigned long FiberData;
    /* 0x0010 */ unsigned long Version;
  }; /* size: 0x0004 */
  /* 0x0014 */ unsigned long ArbitraryUserPointer;
  /* 0x0018 */ unsigned long Self;
} NT_TIB32, *PNT_TIB32; /* size: 0x001c */

typedef struct _TXFS_MODIFY_RM
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long LogContainerCountMax;
  /* 0x0008 */ unsigned long LogContainerCountMin;
  /* 0x000c */ unsigned long LogContainerCount;
  /* 0x0010 */ unsigned long LogGrowthIncrement;
  /* 0x0014 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0018 */ unsigned __int64 Reserved;
  /* 0x0020 */ unsigned short LoggingMode;
  /* 0x0022 */ char __PADDING__[6];
} TXFS_MODIFY_RM, *PTXFS_MODIFY_RM; /* size: 0x0028 */

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _ACL_REVISION_INFORMATION
{
  /* 0x0000 */ unsigned long AclRevision;
} ACL_REVISION_INFORMATION, *PACL_REVISION_INFORMATION; /* size: 0x0004 */

typedef struct _DISPLAY_DEVICEA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ char DeviceName[32];
  /* 0x0024 */ char DeviceString[128];
  /* 0x00a4 */ unsigned long StateFlags;
  /* 0x00a8 */ char DeviceID[128];
  /* 0x0128 */ char DeviceKey[128];
} DISPLAY_DEVICEA, *PDISPLAY_DEVICEA; /* size: 0x01a8 */

struct <vc_attributes>::atl::soap_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* namespace;
  /* 0x0010 */ const char* protocol;
  /* 0x0018 */ const char* style;
  /* 0x0020 */ const char* use;
}; /* size: 0x0028 */

typedef struct _DRAGINFOA
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ char* lpFileList;
  /* 0x0018 */ unsigned long grfKeyState;
  /* 0x001c */ long __PADDING__[1];
} DRAGINFOA, *PDRAGINFOA; /* size: 0x0020 */

struct tagENHMETARECORD
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ unsigned long dParm[1];
}; /* size: 0x000c */

typedef struct _FILE_COMPRESSION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFO, *PFILE_COMPRESSION_INFO; /* size: 0x0010 */

struct tagCANDIDATELIST
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ unsigned long dwCount;
  /* 0x000c */ unsigned long dwSelection;
  /* 0x0010 */ unsigned long dwPageStart;
  /* 0x0014 */ unsigned long dwPageSize;
  /* 0x0018 */ unsigned long dwOffset[1];
}; /* size: 0x001c */

struct tagEMRSCALEVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long xNum;
  /* 0x000c */ long xDenom;
  /* 0x0010 */ long yNum;
  /* 0x0014 */ long yDenom;
}; /* size: 0x0018 */

struct IOleInPlaceSiteWindowless
{
}; /* size: 0x0008 */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ struct _CMSG_SIGNER_INFO* pSignerInfo;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ enum _PNP_QUERY_RELATION Operation;
  /* 0x0014 */ unsigned long BufferLength;
  /* 0x0018 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA, *PPLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA; /* size: 0x0020 */

struct tagEMRELLIPSE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
}; /* size: 0x0018 */

typedef struct _ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_ACE, *PACCESS_ALLOWED_ACE; /* size: 0x000c */

typedef struct _CERT_QC_STATEMENTS_EXT_INFO
{
  /* 0x0000 */ unsigned long cStatement;
  /* 0x0004 */ long Padding_1049;
  /* 0x0008 */ struct _CERT_QC_STATEMENT* rgStatement;
} CERT_QC_STATEMENTS_EXT_INFO, *PCERT_QC_STATEMENTS_EXT_INFO; /* size: 0x0010 */

typedef union _RATE_QUOTA_LIMIT
{
  union
  {
    /* 0x0000 */ unsigned long RateData;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RatePercent : 7; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved0 : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT; /* size: 0x0004 */

struct tagEMRCREATEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ struct tagLOGPALETTE lgpl;
}; /* size: 0x0014 */

class CWorldSecurityDescriptor
{
  /* 0x0000 */ struct _SECURITY_DESCRIPTOR _sd;
  /* 0x0028 */ unsigned __int64 _acl[8];
}; /* size: 0x0068 */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ProcessorMask;
  /* 0x0008 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x000c */ long Padding_1050;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char Flags;
    } /* size: 0x0001 */ ProcessorCore;
    struct
    {
      /* 0x0010 */ unsigned long NodeNumber;
    } /* size: 0x0004 */ NumaNode;
    /* 0x0010 */ struct _CACHE_DESCRIPTOR Cache;
    /* 0x0010 */ unsigned __int64 Reserved[2];
  }; /* size: 0x0010 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION; /* size: 0x0020 */

struct <vc_attributes>::atl::db_paramAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0008 */ const char* paramtype;
  /* 0x0010 */ const char* dbtype;
  /* 0x0018 */ const char* precision;
  /* 0x0020 */ const char* scale;
  /* 0x0028 */ const char* status;
  /* 0x0030 */ const char* length;
}; /* size: 0x0038 */

class CTrackingCompositeMoniker
{
  /* 0x0000 */ long Padding_1051[2];
  /* 0x0008 */ class CCompositeMoniker* _pCCM;
}; /* size: 0x0010 */

typedef struct _SYSTEM_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfHandles;
  /* 0x0004 */ long Padding_1052;
  /* 0x0008 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION; /* size: 0x0020 */

class CStackWalkerSymbol
{
  /* 0x0000 */ long Padding_1053[2];
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ long Padding_1054;
  /* 0x0010 */ wchar_t* m_pwszModuleName;
  /* 0x0018 */ wchar_t* m_pwszSymbolName;
  /* 0x0020 */ unsigned __int64 m_dw64Displacement;
  /* 0x0028 */ unsigned __int64 m_dw64Address;
  /* 0x0030 */ class CStackWalkerSymbol* m_pNext;
}; /* size: 0x0038 */

struct IXMLDOMNamedNodeMap
{
}; /* size: 0x0008 */

struct tagENHMETAHEADER
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _RECTL rclFrame;
  /* 0x0028 */ unsigned long dSignature;
  /* 0x002c */ unsigned long nVersion;
  /* 0x0030 */ unsigned long nBytes;
  /* 0x0034 */ unsigned long nRecords;
  /* 0x0038 */ unsigned short nHandles;
  /* 0x003a */ unsigned short sReserved;
  /* 0x003c */ unsigned long nDescription;
  /* 0x0040 */ unsigned long offDescription;
  /* 0x0044 */ unsigned long nPalEntries;
  /* 0x0048 */ struct tagSIZE szlDevice;
  /* 0x0050 */ struct tagSIZE szlMillimeters;
  /* 0x0058 */ unsigned long cbPixelFormat;
  /* 0x005c */ unsigned long offPixelFormat;
  /* 0x0060 */ unsigned long bOpenGL;
  /* 0x0064 */ struct tagSIZE szlMicrometers;
}; /* size: 0x006c */

typedef struct _TRANSACTION_NOTIFICATION
{
  /* 0x0000 */ void* TransactionKey;
  /* 0x0008 */ unsigned long TransactionNotification;
  /* 0x000c */ long Padding_1055;
  /* 0x0010 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0018 */ unsigned long ArgumentLength;
  /* 0x001c */ long __PADDING__[1];
} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION; /* size: 0x0020 */

struct IEnumMoniker
{
}; /* size: 0x0008 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX
{
  /* 0x0000 */ unsigned short NextOffset;
  /* 0x0002 */ char Padding_1056[6];
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
  /* 0x0130 */ unsigned long ImageChecksum;
  /* 0x0134 */ unsigned long TimeDateStamp;
  /* 0x0138 */ void* DefaultBase;
} RTL_PROCESS_MODULE_INFORMATION_EX, *PRTL_PROCESS_MODULE_INFORMATION_EX; /* size: 0x0140 */

struct RTL_ACE_DATA
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char InheritFlags;
  /* 0x0002 */ unsigned char AceFlags;
  /* 0x0003 */ char Padding_1057;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ void** Sid;
}; /* size: 0x0010 */

typedef struct _KSPIN_LOCK_QUEUE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE* volatile Next;
  /* 0x0008 */ unsigned __int64* volatile Lock;
} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE; /* size: 0x0010 */

typedef struct _KLOCK_QUEUE_HANDLE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE LockQueue;
  /* 0x0010 */ unsigned char OldIrql;
  /* 0x0011 */ char __PADDING__[7];
} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE; /* size: 0x0018 */

class CGlobalSecurity
{
  /* 0x0000 */ unsigned char _acl[64];
  /* 0x0040 */ struct _SECURITY_DESCRIPTOR _sd;
  /* 0x0068 */ unsigned char _sdExt[152];
  /* 0x0100 */ struct _SECURITY_ATTRIBUTES _sa;
}; /* size: 0x0118 */

struct IRundown
{
}; /* size: 0x0008 */

struct IProcessLock
{
}; /* size: 0x0008 */

typedef struct _COMMTIMEOUTS
{
  /* 0x0000 */ unsigned long ReadIntervalTimeout;
  /* 0x0004 */ unsigned long ReadTotalTimeoutMultiplier;
  /* 0x0008 */ unsigned long ReadTotalTimeoutConstant;
  /* 0x000c */ unsigned long WriteTotalTimeoutMultiplier;
  /* 0x0010 */ unsigned long WriteTotalTimeoutConstant;
} COMMTIMEOUTS, *PCOMMTIMEOUTS; /* size: 0x0014 */

struct IInternetProtocolRoot
{
}; /* size: 0x0008 */

typedef struct _SYSDBG_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0004 */ long Padding_1058;
  /* 0x0008 */ unsigned __int64 Data;
} SYSDBG_MSR, *PSYSDBG_MSR; /* size: 0x0010 */

struct <vc_attributes>::helper_attributes::notify_atlprovAttribute
{
}; /* size: 0x0001 */

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1059;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING ValueName;
  /* 0x0038 */ unsigned long OldValueType;
  /* 0x003c */ unsigned long OldDataLength;
  /* 0x0040 */ void* OldData;
  /* 0x0048 */ unsigned long NewValueType;
  /* 0x004c */ unsigned long NewDataLength;
  /* 0x0050 */ void* NewData;
} JOURNAL_SET_DELETE_VALUE_INFORMATION, *PJOURNAL_SET_DELETE_VALUE_INFORMATION; /* size: 0x0058 */

struct <vc_attributes>::includeAttribute
{
  /* 0x0000 */ const char* include_file;
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_REFS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_1060;
  /* 0x0008 */ struct _CRYPT_PROVIDER_REF** rgpProviders;
} CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS; /* size: 0x0010 */

typedef struct _FILE_GET_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char EaNameLength;
  /* 0x0005 */ char EaName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_GET_EA_INFORMATION, *PFILE_GET_EA_INFORMATION; /* size: 0x0008 */

struct IOleInPlaceObjectWindowless
{
}; /* size: 0x0008 */

typedef struct _PROCESSOR_IDLE_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct _PROCESSOR_IDLE_STATE State[1];
} PROCESSOR_IDLE_STATES, *PPROCESSOR_IDLE_STATES; /* size: 0x0038 */

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA
{
  /* 0x0000 */ struct HKEY__* hKeyBase;
  /* 0x0008 */ wchar_t* pwszRegPath;
} CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA; /* size: 0x0010 */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fCommercial;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x0008 */

typedef struct _SLIST_ENTRY
{
  /* 0x0000 */ struct _SLIST_ENTRY* Next;
  /* 0x0008 */ long __PADDING__[2];
} SLIST_ENTRY, *PSLIST_ENTRY; /* size: 0x0010 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long Padding_1061;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION_EX, *PPROCESS_DEVICEMAP_INFORMATION_EX; /* size: 0x0030 */

class PBasicEntry
{
  /* 0x0000 */ unsigned long _sig;
  /* 0x0004 */ long _cReferences;
  /* 0x0008 */ const unsigned long _dl;
}; /* size: 0x000c */

struct <vc_attributes>::lcidAttribute
{
}; /* size: 0x0001 */

class CEnumStatData
{
  /* 0x0000 */ long Padding_1062[3];
  /* 0x000c */ unsigned long m_ulFlags;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_index;
  /* 0x0018 */ class CArray<CStatData>* m_pSDArray;
}; /* size: 0x0020 */

typedef struct _SYSTEM_POWER_LOGGING_ENTRY
{
  /* 0x0000 */ unsigned long LoggingType;
  /* 0x0004 */ long Padding_1063;
  /* 0x0008 */ void* LoggingEntry;
} SYSTEM_POWER_LOGGING_ENTRY, *PSYSTEM_POWER_LOGGING_ENTRY; /* size: 0x0010 */

typedef struct _CRYPT_PKCS12_PBE_PARAMS
{
  /* 0x0000 */ int iIterations;
  /* 0x0004 */ unsigned long cbSalt;
} CRYPT_PKCS12_PBE_PARAMS, *PCRYPT_PKCS12_PBE_PARAMS; /* size: 0x0008 */

typedef struct _xml_error
{
  /* 0x0000 */ unsigned int _nLine;
  /* 0x0004 */ long Padding_1064;
  /* 0x0008 */ wchar_t* _pchBuf;
  /* 0x0010 */ unsigned int _cchBuf;
  /* 0x0014 */ unsigned int _ich;
  /* 0x0018 */ wchar_t* _pszFound;
  /* 0x0020 */ wchar_t* _pszExpected;
  /* 0x0028 */ unsigned long _reserved1;
  /* 0x002c */ unsigned long _reserved2;
} xml_error, *Pxml_error; /* size: 0x0030 */

struct tagMOUSEMOVEPOINT
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ long Padding_1065;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

typedef struct _SYSTEM_VERIFIER_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Level;
  /* 0x0008 */ struct _UNICODE_STRING DriverName;
  /* 0x0018 */ unsigned long RaiseIrqls;
  /* 0x001c */ unsigned long AcquireSpinLocks;
  /* 0x0020 */ unsigned long SynchronizeExecutions;
  /* 0x0024 */ unsigned long AllocationsAttempted;
  /* 0x0028 */ unsigned long AllocationsSucceeded;
  /* 0x002c */ unsigned long AllocationsSucceededSpecialPool;
  /* 0x0030 */ unsigned long AllocationsWithNoTag;
  /* 0x0034 */ unsigned long TrimRequests;
  /* 0x0038 */ unsigned long Trims;
  /* 0x003c */ unsigned long AllocationsFailed;
  /* 0x0040 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0044 */ unsigned long Loads;
  /* 0x0048 */ unsigned long Unloads;
  /* 0x004c */ unsigned long UnTrackedPool;
  /* 0x0050 */ unsigned long CurrentPagedPoolAllocations;
  /* 0x0054 */ unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0058 */ unsigned long PeakPagedPoolAllocations;
  /* 0x005c */ unsigned long PeakNonPagedPoolAllocations;
  /* 0x0060 */ unsigned __int64 PagedPoolUsageInBytes;
  /* 0x0068 */ unsigned __int64 NonPagedPoolUsageInBytes;
  /* 0x0070 */ unsigned __int64 PeakPagedPoolUsageInBytes;
  /* 0x0078 */ unsigned __int64 PeakNonPagedPoolUsageInBytes;
} SYSTEM_VERIFIER_INFORMATION, *PSYSTEM_VERIFIER_INFORMATION; /* size: 0x0080 */

struct <vc_attributes>::helper_attributes::help_stringAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _CM_SERIAL_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long BaudClock;
} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA; /* size: 0x0008 */

typedef struct _LINK_TRACKING_INFORMATION
{
  /* 0x0000 */ enum _LINK_TRACKING_INFORMATION_TYPE Type;
  /* 0x0004 */ unsigned char VolumeId[16];
} LINK_TRACKING_INFORMATION, *PLINK_TRACKING_INFORMATION; /* size: 0x0014 */

struct tagRPC_EE_INFO_PARAM
{
  /* 0x0000 */ enum tagExtendedErrorParamTypes ParameterType;
  /* 0x0004 */ long Padding_1066;
  union
  {
    union
    {
      /* 0x0008 */ char* AnsiString;
      /* 0x0008 */ wchar_t* UnicodeString;
      /* 0x0008 */ long LVal;
      /* 0x0008 */ short SVal;
      /* 0x0008 */ unsigned __int64 PVal;
      /* 0x0008 */ struct tagBinaryParam BVal;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
}; /* size: 0x0018 */

struct HRAWINPUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _cpinfoexA
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ char CodePageName[260];
} cpinfoexA, *PcpinfoexA; /* size: 0x011c */

typedef struct _PS_STD_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StdHandleState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long PseudoHandleMask : 3; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long StdHandleSubsystemType;
} PS_STD_HANDLE_INFO, *PPS_STD_HANDLE_INFO; /* size: 0x0008 */

typedef struct _FILE_IO_PRIORITY_HINT_INFO
{
  /* 0x0000 */ enum _PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFO, *PFILE_IO_PRIORITY_HINT_INFO; /* size: 0x0004 */

typedef struct _KEY_VALUE_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataOffset;
  /* 0x000c */ unsigned long DataLength;
  /* 0x0010 */ unsigned long NameLength;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION; /* size: 0x0018 */

class CTransactedTimeEntry
{
  /* 0x0000 */ struct _FILETIME _tt[3];
}; /* size: 0x0018 */

struct tagEMRSETICMPROFILE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cbName;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long SizeOfBuf;
  /* 0x0008 */ void* Buffer;
} SYSTEM_SESSION_PROCESS_INFORMATION, *PSYSTEM_SESSION_PROCESS_INFORMATION; /* size: 0x0010 */

struct IShellItem2
{
}; /* size: 0x0008 */

typedef struct _CAT_NAMEVALUE
{
  /* 0x0000 */ wchar_t* pwszTag;
  /* 0x0008 */ unsigned long fdwFlags;
  /* 0x000c */ long Padding_1067;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CAT_NAMEVALUE, *PCAT_NAMEVALUE; /* size: 0x0020 */

struct PPM_WMI_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ unsigned char IncreaseLevel;
  /* 0x000a */ unsigned char DecreaseLevel;
  /* 0x000b */ unsigned char Type;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ long Padding_1068;
  /* 0x0018 */ unsigned __int64 Control;
  /* 0x0020 */ unsigned __int64 Status;
  /* 0x0028 */ unsigned long HitCount;
  /* 0x002c */ unsigned long Reserved1;
  /* 0x0030 */ unsigned __int64 Reserved2;
  /* 0x0038 */ unsigned __int64 Reserved3;
}; /* size: 0x0040 */

struct IComServices
{
}; /* size: 0x0008 */

struct tagHARDWAREHOOKSTRUCT
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ long Padding_1069;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
}; /* size: 0x0020 */

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ const wchar_t* lpPath;
  /* 0x0010 */ const wchar_t* lpDisplayName;
} WIN_TRUST_SUBJECT_FILE_AND_DISPLAY, *PWIN_TRUST_SUBJECT_FILE_AND_DISPLAY; /* size: 0x0018 */

class DDE_CHANNEL
{
  /* 0x0000 */ long Padding_1070[4];
  /* 0x0010 */ unsigned long m_cRefs;
  /* 0x0014 */ long Padding_1071;
  /* 0x0018 */ struct HWND__* hwndCli;
  /* 0x0020 */ struct HWND__* hwndSvr;
  /* 0x0028 */ int bTerminating;
  /* 0x002c */ int iExtraTerms;
  /* 0x0030 */ unsigned short wTimer;
  /* 0x0032 */ char Padding_1072[2];
  /* 0x0034 */ unsigned long dwStartTickCount;
  /* 0x0038 */ unsigned short msgFirst;
  /* 0x003a */ unsigned short msgLast;
  /* 0x003c */ long Padding_1073;
  /* 0x0040 */ struct HWND__* msghwnd;
  /* 0x0048 */ int fRejected;
  /* 0x004c */ unsigned short wMsg;
  /* 0x004e */ char Padding_1074[2];
  /* 0x0050 */ __int64 lParam;
  /* 0x0058 */ int iAwaitAck;
  /* 0x005c */ HRESULT hres;
  /* 0x0060 */ void* hopt;
  /* 0x0068 */ void* hDdePoke;
  /* 0x0070 */ void* hCommands;
  /* 0x0078 */ unsigned short wChannelDeleted;
  /* 0x007a */ char Padding_1075[6];
  /* 0x0080 */ struct tagDDECALLDATA* pCD;
  /* 0x0088 */ enum tagSERVERCALLEX CallState;
  /* 0x008c */ int bFreedhopt;
}; /* size: 0x0090 */

typedef struct _wireSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ long Padding_1076;
  /* 0x0010 */ struct _wireSAFEARRAY_UNION uArrayStructs;
  /* 0x0038 */ struct tagSAFEARRAYBOUND rgsabound[1];
} wireSAFEARRAY, *PwireSAFEARRAY; /* size: 0x0040 */

typedef struct _irot_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[195];
  /* 0x00c5 */ char __PADDING__[1];
} irot_MIDL_TYPE_FORMAT_STRING, *Pirot_MIDL_TYPE_FORMAT_STRING; /* size: 0x00c6 */

typedef struct _PRIV_RESOLVER_INFO
{
  /* 0x0000 */ unsigned __int64 OxidServer;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pServerORBindings;
  /* 0x0010 */ struct tagOXID_INFO OxidInfo;
  /* 0x0040 */ unsigned __int64 LocalMidOfRemote;
  /* 0x0048 */ unsigned long DllServerModel;
  /* 0x004c */ long Padding_1077;
  /* 0x0050 */ wchar_t* pwszDllServer;
  /* 0x0058 */ int FoundInROT;
  /* 0x005c */ long __PADDING__[1];
} PRIV_RESOLVER_INFO, *PPRIV_RESOLVER_INFO; /* size: 0x0060 */

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
{
  /* 0x0000 */ unsigned long MarshalCookie;
  /* 0x0004 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT; /* size: 0x0014 */

typedef struct _TP_CALLBACK_ENVIRON
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1078;
  /* 0x0008 */ struct _TP_POOL* Pool;
  /* 0x0010 */ struct _TP_CLEANUP_GROUP* CleanupGroup;
  /* 0x0018 */ void* CleanupGroupCancelCallback /* function */;
  /* 0x0020 */ void* RaceDll;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0030 */ void* FinalizationCallback /* function */;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long Flags;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0038 */ unsigned long LongFunction : 1; /* bit position: 0 */
          /* 0x0038 */ unsigned long Private : 31; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0004 */ s;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x003c */ long __PADDING__[1];
} TP_CALLBACK_ENVIRON, *PTP_CALLBACK_ENVIRON; /* size: 0x0040 */

struct IXMLAttribute
{
}; /* size: 0x0008 */

struct tagMONITORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcMonitor;
  /* 0x0014 */ struct tagRECT rcWork;
  /* 0x0024 */ unsigned long dwFlags;
}; /* size: 0x0028 */

typedef struct __midl_frag1465_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1465_t, *P_midl_frag1465_t; /* size: 0x0038 */

struct IClassFactoryVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateInstance /* function */;
  /* 0x0020 */ void* LockServer /* function */;
}; /* size: 0x0028 */

struct INTERPRETER_OPT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ServerMustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientMustSize : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasReturn : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasPipes : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasAsyncUuid : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasExtensions : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasAsyncHandle : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

typedef struct _LDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY64 InMemoryOrderLinks;
  /* 0x0020 */ struct LIST_ENTRY64 InInitializationOrderLinks;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_1079;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct LIST_ENTRY64 HashLinks;
    struct
    {
      /* 0x0070 */ unsigned __int64 SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ unsigned __int64 LoadedImports;
  }; /* size: 0x0008 */
} LDR_DATA_TABLE_ENTRY64, *PLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _FILE_SFIO_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned long MinimumTransferSize;
} FILE_SFIO_VOLUME_INFORMATION, *PFILE_SFIO_VOLUME_INFORMATION; /* size: 0x000c */

typedef struct _exception
{
  /* 0x0000 */ int type;
  /* 0x0004 */ long Padding_1080;
  /* 0x0008 */ char* name;
  /* 0x0010 */ double arg1;
  /* 0x0018 */ double arg2;
  /* 0x0020 */ double retval;
} exception, *Pexception; /* size: 0x0028 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorCount;
  /* 0x0004 */ unsigned long Offsets[1];
} SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION; /* size: 0x0008 */

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION
{
  /* 0x0000 */ unsigned char Next;
  /* 0x0001 */ char Padding_1081[3];
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned __int64 Size;
} HEAP_BLOCK_EXTRA_INFORMATION, *PHEAP_BLOCK_EXTRA_INFORMATION; /* size: 0x0010 */

class CRotHintTable
{
  /* 0x0000 */ unsigned char* _pbHintArray;
}; /* size: 0x0008 */

struct tagPROPPAGEINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_1082;
  /* 0x0008 */ wchar_t* pszTitle;
  /* 0x0010 */ struct tagSIZE size;
  /* 0x0018 */ wchar_t* pszDocString;
  /* 0x0020 */ wchar_t* pszHelpFile;
  /* 0x0028 */ unsigned long dwHelpContext;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _ImageArchitectureEntry
{
  /* 0x0000 */ unsigned long FixupInstRVA;
  /* 0x0004 */ unsigned long NewInst;
} ImageArchitectureEntry, *PImageArchitectureEntry; /* size: 0x0008 */

struct ICreateTypeLib
{
}; /* size: 0x0008 */

struct IFillLockBytesVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* FillAppend /* function */;
  /* 0x0020 */ void* FillAt /* function */;
  /* 0x0028 */ void* SetFillSize /* function */;
  /* 0x0030 */ void* Terminate /* function */;
}; /* size: 0x0038 */

struct tagICONMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTW lfFont;
}; /* size: 0x006c */

struct value_entW
{
  /* 0x0000 */ wchar_t* ve_valuename;
  /* 0x0008 */ unsigned long ve_valuelen;
  /* 0x000c */ long Padding_1083;
  /* 0x0010 */ unsigned __int64 ve_valueptr;
  /* 0x0018 */ unsigned long ve_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_IO_COMPLETION_NOTIFICATION_INFORMATION, *PFILE_IO_COMPLETION_NOTIFICATION_INFORMATION; /* size: 0x0004 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION; /* size: 0x0010 */

struct tagMULTI_QI
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0008 */ struct IUnknown* pItf;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _CERT_CHAIN_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cChain;
  /* 0x0010 */ struct _CERT_SIMPLE_CHAIN** rgpChain;
  /* 0x0018 */ unsigned long cLowerQualityChainContext;
  /* 0x001c */ long Padding_1084;
  /* 0x0020 */ const struct _CERT_CHAIN_CONTEXT** rgpLowerQualityChainContext;
  /* 0x0028 */ int fHasRevocationFreshnessTime;
  /* 0x002c */ unsigned long dwRevocationFreshnessTime;
  /* 0x0030 */ unsigned long dwCreateFlags;
  /* 0x0034 */ struct _GUID ChainId;
  /* 0x0044 */ long __PADDING__[1];
} CERT_CHAIN_CONTEXT, *PCERT_CHAIN_CONTEXT; /* size: 0x0048 */

struct IInternetPriority
{
}; /* size: 0x0008 */

struct OAUTIL
{
  /* 0x0000 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0008 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0010 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0018 */ int m_fWorkingOnInParam;
  /* 0x001c */ int m_fWorkingOnOutParam;
  /* 0x0020 */ int m_fDoNotWalkInterfaces;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct CVerifierStackData::tagNode
{
  /* 0x0000 */ void** lpvStack;
  /* 0x0008 */ struct _LIST_ENTRY listEntry;
}; /* size: 0x0018 */

struct tagWNDCLASSEXW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const wchar_t* lpszMenuName;
  /* 0x0040 */ const wchar_t* lpszClassName;
  /* 0x0048 */ struct HICON__* hIconSm;
}; /* size: 0x0050 */

struct _CrtMemBlockHeader;

typedef struct _complex
{
  /* 0x0000 */ double x;
  /* 0x0008 */ double y;
} complex, *Pcomplex; /* size: 0x0010 */

typedef struct __midl_frag126_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag126_t, *P_midl_frag126_t; /* size: 0x000c */

class Windows::Auto<_LUTF8_STRING>
{
}; /* size: 0x0018 */

typedef struct _RTL_HEAP_TAG
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
  /* 0x0010 */ unsigned short TagIndex;
  /* 0x0012 */ unsigned short CreatorBackTraceIndex;
  /* 0x0014 */ wchar_t TagName[24];
  /* 0x0044 */ long __PADDING__[1];
} RTL_HEAP_TAG, *PRTL_HEAP_TAG; /* size: 0x0048 */

struct METHOD_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* m_szMethodName;
  /* 0x0008 */ short m_cParams;
  /* 0x000a */ char Padding_1085[6];
  /* 0x0010 */ unsigned short* m_paramVTs;
}; /* size: 0x0018 */

typedef struct _CERT_OTHER_LOGOTYPE_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO LogotypeInfo;
} CERT_OTHER_LOGOTYPE_INFO, *PCERT_OTHER_LOGOTYPE_INFO; /* size: 0x0018 */

struct tagGCP_RESULTSA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1086;
  /* 0x0008 */ char* lpOutString;
  /* 0x0010 */ unsigned int* lpOrder;
  /* 0x0018 */ int* lpDx;
  /* 0x0020 */ int* lpCaretPos;
  /* 0x0028 */ char* lpClass;
  /* 0x0030 */ wchar_t* lpGlyphs;
  /* 0x0038 */ unsigned int nGlyphs;
  /* 0x003c */ int nMaxFit;
}; /* size: 0x0040 */

struct tagWNDCLASSEXA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const char* lpszMenuName;
  /* 0x0040 */ const char* lpszClassName;
  /* 0x0048 */ struct HICON__* hIconSm;
}; /* size: 0x0050 */

class Windows::ErrorHandling::Rtl::CVoidRaiseFrame
{
}; /* size: 0x0004 */

typedef struct _UUID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1087;
  /* 0x0008 */ struct _GUID* Uuid[1];
} UUID_VECTOR, *PUUID_VECTOR; /* size: 0x0010 */

struct NDR_PROC_HEADER_EXTS
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
}; /* size: 0x0008 */

struct MD_INTERFACE
{
  /* 0x0000 */ volatile long m_refs;
  /* 0x0004 */ unsigned long m_cMethods;
  /* 0x0008 */ unsigned long m_cMethodsInBaseInterface;
  /* 0x000c */ long Padding_1088;
  /* 0x0010 */ struct MD_METHOD* m_rgMethodsAlloc;
  /* 0x0018 */ struct MD_METHOD* m_rgMethods;
  /* 0x0020 */ struct MD_PARAM* m_rgParams;
  /* 0x0028 */ int m_fFreeInfoOnRelease;
  /* 0x002c */ int m_fDerivesFromIDispatch;
  /* 0x0030 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0038 */ const char* m_szInterfaceName;
  /* 0x0040 */ struct MD_INTERFACE_CACHE* m_pcache;
}; /* size: 0x0048 */

struct tagDISPPARAMS
{
  /* 0x0000 */ struct tagVARIANT* rgvarg;
  /* 0x0008 */ long* rgdispidNamedArgs;
  /* 0x0010 */ unsigned int cArgs;
  /* 0x0014 */ unsigned int cNamedArgs;
}; /* size: 0x0018 */

typedef struct _wfinddata32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ wchar_t name[260];
} wfinddata32_t, *Pwfinddata32_t; /* size: 0x021c */

typedef struct _devicemodeW
{
  /* 0x0000 */ wchar_t dmDeviceName[32];
  /* 0x0040 */ unsigned short dmSpecVersion;
  /* 0x0042 */ unsigned short dmDriverVersion;
  /* 0x0044 */ unsigned short dmSize;
  /* 0x0046 */ unsigned short dmDriverExtra;
  /* 0x0048 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x004c */ short dmOrientation;
      /* 0x004e */ short dmPaperSize;
      /* 0x0050 */ short dmPaperLength;
      /* 0x0052 */ short dmPaperWidth;
      /* 0x0054 */ short dmScale;
      /* 0x0056 */ short dmCopies;
      /* 0x0058 */ short dmDefaultSource;
      /* 0x005a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x004c */ struct _POINTL dmPosition;
      /* 0x0054 */ unsigned long dmDisplayOrientation;
      /* 0x0058 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x005c */ short dmColor;
  /* 0x005e */ short dmDuplex;
  /* 0x0060 */ short dmYResolution;
  /* 0x0062 */ short dmTTOption;
  /* 0x0064 */ short dmCollate;
  /* 0x0066 */ wchar_t dmFormName[32];
  /* 0x00a6 */ unsigned short dmLogPixels;
  /* 0x00a8 */ unsigned long dmBitsPerPel;
  /* 0x00ac */ unsigned long dmPelsWidth;
  /* 0x00b0 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x00b4 */ unsigned long dmDisplayFlags;
    /* 0x00b4 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x00b8 */ unsigned long dmDisplayFrequency;
  /* 0x00bc */ unsigned long dmICMMethod;
  /* 0x00c0 */ unsigned long dmICMIntent;
  /* 0x00c4 */ unsigned long dmMediaType;
  /* 0x00c8 */ unsigned long dmDitherType;
  /* 0x00cc */ unsigned long dmReserved1;
  /* 0x00d0 */ unsigned long dmReserved2;
  /* 0x00d4 */ unsigned long dmPanningWidth;
  /* 0x00d8 */ unsigned long dmPanningHeight;
} devicemodeW, *PdevicemodeW; /* size: 0x00dc */

struct tagWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcWindow;
  /* 0x0014 */ struct tagRECT rcClient;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ unsigned long dwExStyle;
  /* 0x002c */ unsigned long dwWindowStatus;
  /* 0x0030 */ unsigned int cxWindowBorders;
  /* 0x0034 */ unsigned int cyWindowBorders;
  /* 0x0038 */ unsigned short atomWindowType;
  /* 0x003a */ unsigned short wCreatorVersion;
}; /* size: 0x003c */

typedef struct _TAPE_WMI_OPERATIONS
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long DataBufferSize;
  /* 0x0008 */ void* DataBuffer;
} TAPE_WMI_OPERATIONS, *PTAPE_WMI_OPERATIONS; /* size: 0x0010 */

typedef struct _heapinfo
{
  /* 0x0000 */ int* _pentry;
  /* 0x0008 */ unsigned __int64 _size;
  /* 0x0010 */ int _useflag;
  /* 0x0014 */ long __PADDING__[1];
} heapinfo, *Pheapinfo; /* size: 0x0018 */

class CServerContextActivator
{
}; /* size: 0x0008 */

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY
{
  /* 0x0000 */ struct _GUID* SubjectType;
  /* 0x0008 */ void* Subject;
} WIN_TRUST_ACTDATA_SUBJECT_ONLY, *PWIN_TRUST_ACTDATA_SUBJECT_ONLY; /* size: 0x0010 */

typedef struct _SHNAMEMAPPINGW
{
  /* 0x0000 */ wchar_t* pszOldPath;
  /* 0x0008 */ wchar_t* pszNewPath;
  /* 0x0010 */ int cchOldPath;
  /* 0x0014 */ int cchNewPath;
} SHNAMEMAPPINGW, *PSHNAMEMAPPINGW; /* size: 0x0018 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1089;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
  /* 0x0028 */ struct _SEC_WINNT_AUTH_IDENTITY_W* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_1090;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W; /* size: 0x0040 */

typedef struct _MINIDUMP_MISC_INFO
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
} MINIDUMP_MISC_INFO, *PMINIDUMP_MISC_INFO; /* size: 0x0018 */

class CInterfaceFromWindowProp
{
  /* 0x0000 */ long Padding_1091[2];
  /* 0x0008 */ unsigned long _ulRefCnt;
}; /* size: 0x0010 */

typedef struct _BCRYPT_DSA_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
  /* 0x000c */ unsigned char Count[4];
  /* 0x0010 */ unsigned char Seed[20];
  /* 0x0024 */ unsigned char q[20];
} BCRYPT_DSA_PARAMETER_HEADER, *PBCRYPT_DSA_PARAMETER_HEADER; /* size: 0x0038 */

struct HIMC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _EXCEPTION_RECORD32
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned long ExceptionRecord;
  /* 0x000c */ unsigned long ExceptionAddress;
  /* 0x0010 */ unsigned long NumberParameters;
  /* 0x0014 */ unsigned long ExceptionInformation[15];
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32; /* size: 0x0050 */

typedef struct __midl_frag99_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag99_t, *P_midl_frag99_t; /* size: 0x0010 */

struct _TP_WORK;

typedef struct _EVENTLOG_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long dwFull;
} EVENTLOG_FULL_INFORMATION, *PEVENTLOG_FULL_INFORMATION; /* size: 0x0004 */

struct tagEMREXTCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ unsigned long offBmi;
  /* 0x0010 */ unsigned long cbBmi;
  /* 0x0014 */ unsigned long offBits;
  /* 0x0018 */ unsigned long cbBits;
  /* 0x001c */ long Padding_1092;
  /* 0x0020 */ struct tagEXTLOGPEN elp;
}; /* size: 0x0040 */

class CNFFMappedStream
{
  /* 0x0000 */ long Padding_1093[2];
  /* 0x0008 */ class CNtfsStream* _pnffstm;
  struct /* bitfield */
  {
    /* 0x0010 */ int _fReserved : 1; /* bit position: 0 */
    /* 0x0010 */ int _fMappedStreamDirty : 1; /* bit position: 1 */
    /* 0x0010 */ int _fUpdateStreamHasLatest : 1; /* bit position: 2 */
    /* 0x0010 */ int _fCheckedForRollForward : 1; /* bit position: 3 */
    /* 0x0010 */ int _fStreamRenameSupported : 1; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0014 */ long Padding_1094;
  /* 0x0018 */ unsigned char* _pbMappedStream;
  /* 0x0020 */ unsigned long _cbMappedStream;
  /* 0x0024 */ unsigned long _cbMappedStreamActual;
  /* 0x0028 */ void* _pMappedStreamOwner;
  /* 0x0030 */ unsigned short _cUpdateStreamInUse;
  /* 0x0032 */ unsigned short _cLatestStreamInUse;
  /* 0x0034 */ long Padding_1095;
  /* 0x0038 */ class CNtfsUpdateStreamForPropStg* _pstmUpdate;
}; /* size: 0x0040 */

class CNtfsStream
{
  /* 0x0000 */ long Padding_1096[4];
  /* 0x0010 */ wchar_t* _pwcsName;
  /* 0x0018 */ class CNFFMappedStream _nffMappedStream;
  /* 0x0058 */ unsigned long _grfMode;
  /* 0x005c */ long Padding_1097;
  /* 0x0060 */ void* _hFile;
  /* 0x0068 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0070 */ unsigned long _sig;
  /* 0x0074 */ long _cRefs;
  /* 0x0078 */ class CNtfsStorage* _pnffstg;
  /* 0x0080 */ class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64> _liCurrentSeekPosition;
  /* 0x0088 */ class CNtfsStream* _pnffstmPrev;
  /* 0x0090 */ class CNtfsStream* _pnffstmNext;
  /* 0x0098 */ struct _OVERLAPPED _ovlp;
}; /* size: 0x00b8 */

struct SEntryBuffer
{
  /* 0x0000 */ unsigned long luid;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long sid;
}; /* size: 0x000c */

struct Windows::Rtl::IRtlFormattableObject
{
}; /* size: 0x0008 */

typedef struct _MODEMDEVCAPS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwModemProviderVersion;
  /* 0x0014 */ unsigned long dwModemManufacturerOffset;
  /* 0x0018 */ unsigned long dwModemManufacturerSize;
  /* 0x001c */ unsigned long dwModemModelOffset;
  /* 0x0020 */ unsigned long dwModemModelSize;
  /* 0x0024 */ unsigned long dwModemVersionOffset;
  /* 0x0028 */ unsigned long dwModemVersionSize;
  /* 0x002c */ unsigned long dwDialOptions;
  /* 0x0030 */ unsigned long dwCallSetupFailTimer;
  /* 0x0034 */ unsigned long dwInactivityTimeout;
  /* 0x0038 */ unsigned long dwSpeakerVolume;
  /* 0x003c */ unsigned long dwSpeakerMode;
  /* 0x0040 */ unsigned long dwModemOptions;
  /* 0x0044 */ unsigned long dwMaxDTERate;
  /* 0x0048 */ unsigned long dwMaxDCERate;
  /* 0x004c */ unsigned char abVariablePortion[1];
  /* 0x004d */ char __PADDING__[3];
} MODEMDEVCAPS, *PMODEMDEVCAPS; /* size: 0x0050 */

class CTrackingFileMoniker
{
  /* 0x0000 */ long Padding_1098[2];
  /* 0x0008 */ class CFileMoniker* _pCFM;
}; /* size: 0x0010 */

struct tagSOLE_AUTHENTICATION_LIST
{
  /* 0x0000 */ unsigned long cAuthInfo;
  /* 0x0004 */ long Padding_1099;
  /* 0x0008 */ struct tagSOLE_AUTHENTICATION_INFO* aAuthInfo;
}; /* size: 0x0010 */

typedef struct _SE_IMPERSONATION_STATE
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ unsigned char CopyOnOpen;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char Padding_1100[2];
  /* 0x000c */ enum _SECURITY_IMPERSONATION_LEVEL Level;
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE; /* size: 0x0010 */

typedef struct _KLDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ unsigned __int64 __Undefined1;
  /* 0x0018 */ unsigned __int64 __Undefined2;
  /* 0x0020 */ unsigned __int64 __Undefined3;
  /* 0x0028 */ unsigned __int64 NonPagedDebugInfo;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_1101;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Undefined5;
  /* 0x0070 */ unsigned __int64 __Undefined6;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long __padding1;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ unsigned long __padding2;
} KLDR_DATA_TABLE_ENTRY64, *PKLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _FILE_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_1102;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ wchar_t FileName[1];
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION; /* size: 0x0060 */

struct IComCatalogSCM
{
}; /* size: 0x0008 */

typedef struct __midl_frag1803_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1803_t, *P_midl_frag1803_t; /* size: 0x0058 */

typedef struct __midl_frag920_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag920_t, *P_midl_frag920_t; /* size: 0x0068 */

typedef struct _tagADDRESS64
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned short Segment;
  /* 0x000a */ char Padding_1103[2];
  /* 0x000c */ enum ADDRESS_MODE Mode;
} tagADDRESS64, *PtagADDRESS64; /* size: 0x0010 */

typedef struct _tagSTACKFRAME64
{
  /* 0x0000 */ struct _tagADDRESS64 AddrPC;
  /* 0x0010 */ struct _tagADDRESS64 AddrReturn;
  /* 0x0020 */ struct _tagADDRESS64 AddrFrame;
  /* 0x0030 */ struct _tagADDRESS64 AddrStack;
  /* 0x0040 */ struct _tagADDRESS64 AddrBStore;
  /* 0x0050 */ void* FuncTableEntry;
  /* 0x0058 */ unsigned __int64 Params[4];
  /* 0x0078 */ int Far;
  /* 0x007c */ int Virtual;
  /* 0x0080 */ unsigned __int64 Reserved[3];
  /* 0x0098 */ struct _KDHELP64 KdHelp;
} tagSTACKFRAME64, *PtagSTACKFRAME64; /* size: 0x0108 */

struct MARK_HANDLE_INFO
{
  /* 0x0000 */ unsigned long UsnSourceInfo;
  /* 0x0004 */ long Padding_1104;
  /* 0x0008 */ void* VolumeHandle;
  /* 0x0010 */ unsigned long HandleInfo;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct tagEMRINVERTRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned char RgnData[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

struct tagEMRALPHABLEND
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

typedef struct _FILE_LINK_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_1105[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_INFORMATION, *PFILE_LINK_INFORMATION; /* size: 0x0018 */

class CClassCache::CCollectable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CCollectable* NOT_COLLECTED;
      /* 0x0008 */ class CClassCache::CCollectable* _pNextCollectee;
      /* 0x0010 */ unsigned long _dwTickLastTouched;
    }; /* size: 0x0014 */
    /* 0x0000 */ unsigned long _dwCollectionGracePeriod;
    /* 0x0000 */ unsigned long _dwCollectionFrequency;
  }; /* size: 0x0014 */
}; /* size: 0x0018 */

struct IWinInetCacheHints2
{
}; /* size: 0x0008 */

typedef struct _ENUM_SERVICE_STATUSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ char* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS ServiceStatus;
  /* 0x002c */ long __PADDING__[1];
} ENUM_SERVICE_STATUSA, *PENUM_SERVICE_STATUSA; /* size: 0x0030 */

typedef struct _SYSTEM_HIBERFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfMcbPairs;
  /* 0x0004 */ long Padding_1106;
  /* 0x0008 */ union _LARGE_INTEGER Mcb[1];
} SYSTEM_HIBERFILE_INFORMATION, *PSYSTEM_HIBERFILE_INFORMATION; /* size: 0x0010 */

struct tagSERIALIZEDPROPERTYVALUE
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned char rgb[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _scm_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1015];
  /* 0x03f9 */ char __PADDING__[1];
} scm_MIDL_PROC_FORMAT_STRING, *Pscm_MIDL_PROC_FORMAT_STRING; /* size: 0x03fa */

struct tagEMRRESTOREDC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long iRelative;
}; /* size: 0x000c */

struct tagGUITHREADINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HWND__* hwndActive;
  /* 0x0010 */ struct HWND__* hwndFocus;
  /* 0x0018 */ struct HWND__* hwndCapture;
  /* 0x0020 */ struct HWND__* hwndMenuOwner;
  /* 0x0028 */ struct HWND__* hwndMoveSize;
  /* 0x0030 */ struct HWND__* hwndCaret;
  /* 0x0038 */ struct tagRECT rcCaret;
}; /* size: 0x0048 */

struct tagStdMarshalData
{
  /* 0x0000 */ class CIDObject* pID;
  /* 0x0008 */ struct IUnknown* pServer;
  /* 0x0010 */ const struct _GUID* pIID;
  /* 0x0018 */ unsigned long dwDestCtx;
  /* 0x001c */ long Padding_1107;
  /* 0x0020 */ void* pvDestCtx;
  /* 0x0028 */ unsigned long mshlflags;
  /* 0x002c */ long Padding_1108;
  /* 0x0030 */ struct tagOBJREF* pobjref;
}; /* size: 0x0038 */

struct IDLLHost
{
}; /* size: 0x0008 */

typedef struct _ATOM_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAtoms;
  /* 0x0004 */ unsigned short Atoms[1];
  /* 0x0006 */ char __PADDING__[2];
} ATOM_TABLE_INFORMATION, *PATOM_TABLE_INFORMATION; /* size: 0x0008 */

struct BITMAPV5HEADER
{
  /* 0x0000 */ unsigned long bV5Size;
  /* 0x0004 */ long bV5Width;
  /* 0x0008 */ long bV5Height;
  /* 0x000c */ unsigned short bV5Planes;
  /* 0x000e */ unsigned short bV5BitCount;
  /* 0x0010 */ unsigned long bV5Compression;
  /* 0x0014 */ unsigned long bV5SizeImage;
  /* 0x0018 */ long bV5XPelsPerMeter;
  /* 0x001c */ long bV5YPelsPerMeter;
  /* 0x0020 */ unsigned long bV5ClrUsed;
  /* 0x0024 */ unsigned long bV5ClrImportant;
  /* 0x0028 */ unsigned long bV5RedMask;
  /* 0x002c */ unsigned long bV5GreenMask;
  /* 0x0030 */ unsigned long bV5BlueMask;
  /* 0x0034 */ unsigned long bV5AlphaMask;
  /* 0x0038 */ unsigned long bV5CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV5Endpoints;
  /* 0x0060 */ unsigned long bV5GammaRed;
  /* 0x0064 */ unsigned long bV5GammaGreen;
  /* 0x0068 */ unsigned long bV5GammaBlue;
  /* 0x006c */ unsigned long bV5Intent;
  /* 0x0070 */ unsigned long bV5ProfileData;
  /* 0x0074 */ unsigned long bV5ProfileSize;
  /* 0x0078 */ unsigned long bV5Reserved;
}; /* size: 0x007c */

typedef struct _PO_TRANSITION_VETOES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1109;
  /* 0x0008 */ struct _PO_TRANSITION_VETO Vetoes[1];
} PO_TRANSITION_VETOES, *PPO_TRANSITION_VETOES; /* size: 0x0020 */

typedef struct _FLS_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* Slots[128];
} FLS_DATA, *PFLS_DATA; /* size: 0x0410 */

typedef struct _nlsversioninfoex
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
  /* 0x000c */ unsigned long dwEffectiveId;
  /* 0x0010 */ struct _GUID guidCustomVersion;
} nlsversioninfoex, *Pnlsversioninfoex; /* size: 0x0020 */

struct IEnumUnknown
{
}; /* size: 0x0008 */

struct IActivationPropOutClean
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  /* 0x0000 */ unsigned char Name[16];
  /* 0x0010 */ unsigned char Date[12];
  /* 0x001c */ unsigned char UserID[6];
  /* 0x0022 */ unsigned char GroupID[6];
  /* 0x0028 */ unsigned char Mode[8];
  /* 0x0030 */ unsigned char Size[10];
  /* 0x003a */ unsigned char EndHeader[2];
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER; /* size: 0x003c */

typedef struct _ALPC_HANDLE_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1110;
  /* 0x0008 */ void* Handle;
  /* 0x0010 */ unsigned long ObjectType;
  /* 0x0014 */ unsigned long DesiredAccess;
} ALPC_HANDLE_ATTR, *PALPC_HANDLE_ATTR; /* size: 0x0018 */

struct tagICONMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTA lfFont;
}; /* size: 0x004c */

class CGIPMessageParam
{
  /* 0x0000 */ long Padding_1111[4];
  /* 0x0010 */ long m_cRefs;
  /* 0x0014 */ unsigned long m_dwCookie;
  /* 0x0018 */ struct _GUID m_causalityId;
}; /* size: 0x0028 */

struct IXMLDOMText
{
}; /* size: 0x0008 */

struct tagEMRSETPALETTEENTRIES
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long iStart;
  /* 0x0010 */ unsigned long cEntries;
  /* 0x0014 */ struct tagPALETTEENTRY aPalEntries[1];
}; /* size: 0x0018 */

typedef struct __midl_frag1856_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1856_t, *P_midl_frag1856_t; /* size: 0x0068 */

struct HDESK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagXCtxQIData
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0008 */ class CStdWrapper* pStdWrapper;
  /* 0x0010 */ class IFaceEntry* pEntry;
}; /* size: 0x0018 */

struct MOVE_FILE_RECORD_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileRecord;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileRecord;
}; /* size: 0x0018 */

struct IPrivDragDrop
{
}; /* size: 0x0008 */

typedef union _FILE_SEGMENT_ELEMENT
{
  union
  {
    /* 0x0000 */ void* Buffer;
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT; /* size: 0x0008 */

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* IoCompletionPortHandle;
  /* 0x0008 */ unsigned __int64 CompletionKey;
} RESOURCEMANAGER_COMPLETION_INFORMATION, *PRESOURCEMANAGER_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef struct _SID_AND_ATTRIBUTES_HASH
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ long Padding_1112;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* SidAttr;
  /* 0x0010 */ unsigned __int64 Hash[32];
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH; /* size: 0x0110 */

struct tagXCtxDisconnectData
{
  /* 0x0000 */ struct IUnknown* pServer;
  /* 0x0008 */ class CIDObject* pID;
  /* 0x0010 */ unsigned long cIFaces;
  /* 0x0014 */ long Padding_1113;
  /* 0x0018 */ struct tagIFaceSvrRefs* pIFaceSvrRefs;
}; /* size: 0x0020 */

struct MENUITEMTEMPLATE
{
  /* 0x0000 */ unsigned short mtOption;
  /* 0x0002 */ unsigned short mtID;
  /* 0x0004 */ wchar_t mtString[1];
}; /* size: 0x0006 */

typedef struct _div_t
{
  /* 0x0000 */ int quot;
  /* 0x0004 */ int rem;
} div_t, *Pdiv_t; /* size: 0x0008 */

struct BITMAPV4HEADER
{
  /* 0x0000 */ unsigned long bV4Size;
  /* 0x0004 */ long bV4Width;
  /* 0x0008 */ long bV4Height;
  /* 0x000c */ unsigned short bV4Planes;
  /* 0x000e */ unsigned short bV4BitCount;
  /* 0x0010 */ unsigned long bV4V4Compression;
  /* 0x0014 */ unsigned long bV4SizeImage;
  /* 0x0018 */ long bV4XPelsPerMeter;
  /* 0x001c */ long bV4YPelsPerMeter;
  /* 0x0020 */ unsigned long bV4ClrUsed;
  /* 0x0024 */ unsigned long bV4ClrImportant;
  /* 0x0028 */ unsigned long bV4RedMask;
  /* 0x002c */ unsigned long bV4GreenMask;
  /* 0x0030 */ unsigned long bV4BlueMask;
  /* 0x0034 */ unsigned long bV4AlphaMask;
  /* 0x0038 */ unsigned long bV4CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV4Endpoints;
  /* 0x0060 */ unsigned long bV4GammaRed;
  /* 0x0064 */ unsigned long bV4GammaGreen;
  /* 0x0068 */ unsigned long bV4GammaBlue;
}; /* size: 0x006c */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1114;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
  /* 0x0028 */ struct _SEC_WINNT_AUTH_IDENTITY_A* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_1115;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A; /* size: 0x0040 */

typedef struct __midl_frag569_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag569_t, *P_midl_frag569_t; /* size: 0x0068 */

typedef struct _FILE_END_OF_FILE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; /* size: 0x0008 */

typedef struct _MIDL_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char* Format /* zero-length array */;
} MIDL_FORMAT_STRING, *PMIDL_FORMAT_STRING; /* size: 0x0002 */

typedef struct _PO_WAKE_SOURCE_HISTORY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_HISTORY, *PPO_WAKE_SOURCE_HISTORY; /* size: 0x0008 */

typedef struct _GLYPHMETRICS
{
  /* 0x0000 */ unsigned int gmBlackBoxX;
  /* 0x0004 */ unsigned int gmBlackBoxY;
  /* 0x0008 */ struct tagPOINT gmptGlyphOrigin;
  /* 0x0010 */ short gmCellIncX;
  /* 0x0012 */ short gmCellIncY;
} GLYPHMETRICS, *PGLYPHMETRICS; /* size: 0x0014 */

typedef struct __midl_frag29_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag29_t, *P_midl_frag29_t; /* size: 0x0038 */

typedef struct _COVERAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long CoverageType;
  /* 0x0008 */ unsigned char MD5Hash[16];
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned long CoverageVectorSize;
  /* 0x0020 */ unsigned long CoverageVectorOffset;
  /* 0x0024 */ unsigned long ExtraDataOffset;
} COVERAGE_SECTION_HEADER, *PCOVERAGE_SECTION_HEADER; /* size: 0x0028 */

typedef struct _OSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW; /* size: 0x011c */

typedef struct _NOTIFYICONDATAA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1116;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ unsigned int uFlags;
  /* 0x0018 */ unsigned int uCallbackMessage;
  /* 0x001c */ long Padding_1117;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ char szTip[128];
  /* 0x00a8 */ unsigned long dwState;
  /* 0x00ac */ unsigned long dwStateMask;
  /* 0x00b0 */ char szInfo[256];
  union
  {
    /* 0x01b0 */ unsigned int uTimeout;
    /* 0x01b0 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x01b4 */ char szInfoTitle[64];
  /* 0x01f4 */ unsigned long dwInfoFlags;
  /* 0x01f8 */ struct _GUID guidItem;
  /* 0x0208 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAA, *PNOTIFYICONDATAA; /* size: 0x0210 */

typedef struct _TOKEN_MANDATORY_POLICY
{
  /* 0x0000 */ unsigned long Policy;
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY; /* size: 0x0004 */

typedef struct _TXFS_QUERY_RM_INFORMATION
{
  /* 0x0000 */ unsigned long BytesRequired;
  /* 0x0004 */ long Padding_1118;
  /* 0x0008 */ unsigned __int64 TailLsn;
  /* 0x0010 */ unsigned __int64 CurrentLsn;
  /* 0x0018 */ unsigned __int64 ArchiveTailLsn;
  /* 0x0020 */ unsigned __int64 LogContainerSize;
  /* 0x0028 */ union _LARGE_INTEGER HighestVirtualClock;
  /* 0x0030 */ unsigned long LogContainerCount;
  /* 0x0034 */ unsigned long LogContainerCountMax;
  /* 0x0038 */ unsigned long LogContainerCountMin;
  /* 0x003c */ unsigned long LogGrowthIncrement;
  /* 0x0040 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ unsigned short LoggingMode;
  /* 0x004a */ unsigned short Reserved;
  /* 0x004c */ unsigned long RmState;
  /* 0x0050 */ unsigned __int64 LogCapacity;
  /* 0x0058 */ unsigned __int64 LogFree;
  /* 0x0060 */ unsigned __int64 TopsSize;
  /* 0x0068 */ unsigned __int64 TopsUsed;
  /* 0x0070 */ unsigned __int64 TransactionCount;
  /* 0x0078 */ unsigned __int64 OnePCCount;
  /* 0x0080 */ unsigned __int64 TwoPCCount;
  /* 0x0088 */ unsigned __int64 NumberLogFileFull;
  /* 0x0090 */ unsigned __int64 OldestTransactionAge;
  /* 0x0098 */ struct _GUID RMName;
  /* 0x00a8 */ unsigned long TmLogPathOffset;
  /* 0x00ac */ long __PADDING__[1];
} TXFS_QUERY_RM_INFORMATION, *PTXFS_QUERY_RM_INFORMATION; /* size: 0x00b0 */

class COAHolder
{
  /* 0x0000 */ long Padding_1119[8];
  /* 0x0020 */ struct IAdviseSink** m_ppIAS;
  /* 0x0028 */ int m_iSize;
}; /* size: 0x0030 */

typedef struct _CHAR_INFO
{
  union
  {
    union
    {
      /* 0x0000 */ wchar_t UnicodeChar;
      /* 0x0000 */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Char;
  /* 0x0002 */ unsigned short Attributes;
} CHAR_INFO, *PCHAR_INFO; /* size: 0x0004 */

typedef struct _AVRF_CLIENT_ID_WOW64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} AVRF_CLIENT_ID_WOW64, *PAVRF_CLIENT_ID_WOW64; /* size: 0x0010 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ struct _AVRF_CLIENT_ID_WOW64 ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_1120;
  /* 0x0020 */ unsigned __int64 Stacks[16];
} AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64; /* size: 0x00a0 */

class CHlprDialog
{
  /* 0x0000 */ long Padding_1121[2];
  /* 0x0008 */ struct HINSTANCE__* m_hInstance;
}; /* size: 0x0010 */

struct IPrivActivationPropertiesIn
{
}; /* size: 0x0008 */

typedef struct _FILE_STREAM_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFO, *PFILE_STREAM_INFO; /* size: 0x0020 */

struct IUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
}; /* size: 0x0018 */

typedef struct _numberfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_1122;
  /* 0x0010 */ char* lpDecimalSep;
  /* 0x0018 */ char* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ long __PADDING__[1];
} numberfmtA, *PnumberfmtA; /* size: 0x0028 */

typedef struct __midl_frag669_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ struct _NDR64_UNION_ARM frag6;
  /* 0x0078 */ struct _NDR64_UNION_ARM frag7;
  /* 0x0090 */ struct _NDR64_UNION_ARM frag8;
  /* 0x00a8 */ struct _NDR64_UNION_ARM frag9;
  /* 0x00c0 */ struct _NDR64_UNION_ARM frag10;
  /* 0x00d8 */ unsigned int frag11;
  /* 0x00dc */ long __PADDING__[1];
} _midl_frag669_t, *P_midl_frag669_t; /* size: 0x00e0 */

struct ILockBytes
{
}; /* size: 0x0008 */

struct IMalloc
{
}; /* size: 0x0008 */

class CIPIDTable
{
  union
  {
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ struct tagIPIDEntry _oidListHead;
  }; /* size: 0x0080 */
}; /* size: 0x0001 */

typedef struct _wfinddata32i64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ __int64 size;
  /* 0x0018 */ wchar_t name[260];
} wfinddata32i64_t, *Pwfinddata32i64_t; /* size: 0x0220 */

struct IXMLError
{
}; /* size: 0x0008 */

typedef struct __midl_frag44_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag44_t, *P_midl_frag44_t; /* size: 0x0038 */

struct tagComCallData
{
  /* 0x0000 */ unsigned long dwDispid;
  /* 0x0004 */ unsigned long dwReserved;
  /* 0x0008 */ void* pUserDefined;
}; /* size: 0x0010 */

typedef struct __midl_frag1060_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1060_t, *P_midl_frag1060_t; /* size: 0x000c */

struct _HMAPPER;

typedef struct _SYSTEM_MANDATORY_LABEL_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE; /* size: 0x000c */

struct IPipeLong
{
}; /* size: 0x0008 */

struct tagInterfaceData
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1024];
}; /* size: 0x0404 */

struct tagCStdPSFactoryBuffer
{
  /* 0x0000 */ const struct IPSFactoryBufferVtbl* lpVtbl;
  /* 0x0008 */ long RefCount;
  /* 0x000c */ long Padding_1123;
  /* 0x0010 */ const struct tagProxyFileInfo** pProxyFileList;
  /* 0x0018 */ long Filler1;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class CComApartment
{
  /* 0x0000 */ long Padding_1124[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwState;
  /* 0x0010 */ enum tagAPTKIND _AptKind;
  /* 0x0014 */ unsigned long _AptId;
  /* 0x0018 */ class OXIDEntry* _pOXIDEntry;
  /* 0x0020 */ class CRemoteUnknown* _pRemUnk;
  /* 0x0028 */ long _cWaiters;
  /* 0x002c */ long Padding_1125;
  /* 0x0030 */ void* _hEventOID;
  /* 0x0038 */ unsigned long _cPreRegOidsAvail;
  /* 0x003c */ long Padding_1126;
  /* 0x0040 */ unsigned __int64 _arPreRegOids[20];
  /* 0x00e0 */ unsigned long _cOidsReturn;
  /* 0x00e4 */ long Padding_1127;
  /* 0x00e8 */ unsigned __int64 _arOidsReturn[20];
  /* 0x0188 */ struct CComApartment::MessageListHead _arMessageParams[8];
  /* 0x0208 */ int _fInitializedCS;
  /* 0x020c */ long Padding_1128;
  /* 0x0210 */ struct _RTL_CRITICAL_SECTION _csMessageParams;
}; /* size: 0x0238 */

typedef struct __midl_frag244_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag244_t, *P_midl_frag244_t; /* size: 0x0010 */

class CMarshalImplPStream
{
  /* 0x0000 */ long Padding_1129[2];
  /* 0x0008 */ struct IPersistStream* m_pPS;
}; /* size: 0x0010 */

typedef struct __midl_frag1701_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag1701_t, *P_midl_frag1701_t; /* size: 0x0050 */

class CPIDHashTable
{
}; /* size: 0x0028 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<1>
{
} RTL_CONSTANT_STRING_remove_const_template_class<1>, *PRTL_CONSTANT_STRING_remove_const_template_class<1>; /* size: 0x0001 */

struct pUnkListElement
{
  /* 0x0000 */ struct IUnknown* _pUnk;
  /* 0x0008 */ struct pUnkListElement* _next;
}; /* size: 0x0010 */

class CClientCallMgr
{
  /* 0x0000 */ long Padding_1130[8];
  /* 0x0020 */ class CClientCallMgr::CPrivUnknown _privUnk;
  /* 0x0028 */ unsigned long _dwFlags;
  /* 0x002c */ unsigned long _cRefs;
  /* 0x0030 */ struct IUnknown* _pUnkOuter;
  /* 0x0038 */ class CClientCallMgr* _pNextMgr;
  /* 0x0040 */ struct _GUID _asyncIID;
  /* 0x0050 */ class CStdIdentity* _pStdId;
  /* 0x0058 */ struct IRpcProxyBuffer* _pProxyObj;
  /* 0x0060 */ class CChannelObject* _pChnlObj;
  /* 0x0068 */ struct IClientSecurity* _pICS;
  /* 0x0070 */ struct ICancelMethodCalls* _pICMC;
  /* 0x0078 */ class CStdEvent _cStdEvent;
}; /* size: 0x00b0 */

struct IDestInfo
{
}; /* size: 0x0008 */

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO
{
  /* 0x0000 */ int fCA;
  /* 0x0004 */ int fPathLenConstraint;
  /* 0x0008 */ unsigned long dwPathLenConstraint;
} CERT_BASIC_CONSTRAINTS2_INFO, *PCERT_BASIC_CONSTRAINTS2_INFO; /* size: 0x000c */

typedef struct __midl_frag1683_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1683_t, *P_midl_frag1683_t; /* size: 0x0048 */

struct IStorageReplica
{
}; /* size: 0x0008 */

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1131;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ union _LARGE_INTEGER OldLastWriteTime;
  /* 0x0030 */ union _LARGE_INTEGER NewLastWriteTime;
} JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION, *PJOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION; /* size: 0x0038 */

class istream_withassign
{
}; /* size: 0x0080 */

struct EFFICIENTOSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ unsigned short wServicePackMajor;
  /* 0x0016 */ unsigned short wServicePackMinor;
  /* 0x0018 */ unsigned short wSuiteMask;
  /* 0x001a */ unsigned char wProductType;
  /* 0x001b */ unsigned char wReserved;
  /* 0x001c */ wchar_t szCSDVersion[128];
}; /* size: 0x011c */

struct PPM_IDLE_ACCOUNTING
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ long Padding_1132;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING State[1];
}; /* size: 0x0048 */

typedef struct __midl_frag275_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag275_t, *P_midl_frag275_t; /* size: 0x000c */

struct NTFS_EXTENDED_VOLUME_DATA
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
}; /* size: 0x0008 */

typedef struct _ADMINISTRATOR_POWER_POLICY
{
  /* 0x0000 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x0008 */ unsigned long MinVideoTimeout;
  /* 0x000c */ unsigned long MaxVideoTimeout;
  /* 0x0010 */ unsigned long MinSpindownTimeout;
  /* 0x0014 */ unsigned long MaxSpindownTimeout;
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY; /* size: 0x0018 */

struct IPipeDouble
{
}; /* size: 0x0008 */

struct STwoBits
{
  /* 0x0000 */ void* _hEvent;
  /* 0x0008 */ unsigned long _dwCookie;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _RTL_BACKOFF
{
  /* 0x0000 */ unsigned long Delay;
} RTL_BACKOFF, *PRTL_BACKOFF; /* size: 0x0004 */

typedef struct _IMAGE_RESOURCE_DATA_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToData;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long CodePage;
  /* 0x000c */ unsigned long Reserved;
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY; /* size: 0x0010 */

class CBaseMoniker
{
  /* 0x0000 */ long Padding_1133[4];
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ long Padding_1134;
  /* 0x0018 */ class CMarshalImplPStream m_marshal;
}; /* size: 0x0028 */

typedef struct _KEY_CACHED_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long SubKeys;
  /* 0x0010 */ unsigned long MaxNameLen;
  /* 0x0014 */ unsigned long Values;
  /* 0x0018 */ unsigned long MaxValueNameLen;
  /* 0x001c */ unsigned long MaxValueDataLen;
  /* 0x0020 */ unsigned long NameLength;
  /* 0x0024 */ long __PADDING__[1];
} KEY_CACHED_INFORMATION, *PKEY_CACHED_INFORMATION; /* size: 0x0028 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalSlots;
} PROCESS_HANDLE_TRACING_ENABLE_EX, *PPROCESS_HANDLE_TRACING_ENABLE_EX; /* size: 0x0008 */

typedef struct __midl_frag176_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag176_t, *P_midl_frag176_t; /* size: 0x0028 */

typedef struct _CERT_LOGOTYPE_IMAGE
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x0018 */ struct _CERT_LOGOTYPE_IMAGE_INFO* pLogotypeImageInfo;
} CERT_LOGOTYPE_IMAGE, *PCERT_LOGOTYPE_IMAGE; /* size: 0x0020 */

typedef struct _EISA_PORT_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char NumberPorts : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR; /* size: 0x0001 */

typedef struct _CERT_LOGOTYPE_DATA
{
  /* 0x0000 */ unsigned long cLogotypeImage;
  /* 0x0004 */ long Padding_1135;
  /* 0x0008 */ struct _CERT_LOGOTYPE_IMAGE* rgLogotypeImage;
  /* 0x0010 */ unsigned long cLogotypeAudio;
  /* 0x0014 */ long Padding_1136;
  /* 0x0018 */ struct _CERT_LOGOTYPE_AUDIO* rgLogotypeAudio;
} CERT_LOGOTYPE_DATA, *PCERT_LOGOTYPE_DATA; /* size: 0x0020 */

class Windows::LockGrant<_RTL_CRITICAL_SECTION>
{
}; /* size: 0x0010 */

struct tagCUSTDATAITEM
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ struct tagVARIANT varValue;
}; /* size: 0x0028 */

typedef struct _COMSTAT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long fCtsHold : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long fDsrHold : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long fRlsdHold : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long fXoffHold : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long fXoffSent : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long fEof : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long fTxim : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long fReserved : 25; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long cbInQue;
  /* 0x0008 */ unsigned long cbOutQue;
} COMSTAT, *PCOMSTAT; /* size: 0x000c */

typedef struct _PARAM_STRUCT
{
  /* 0x0000 */ struct IAdviseSink* This;
  /* 0x0008 */ HRESULT _RetVal;
  /* 0x000c */ long __PADDING__[1];
} PARAM_STRUCT, *PPARAM_STRUCT; /* size: 0x0010 */

struct LockingStack<DISPATCH_CLIENT_FRAME>
{
  /* 0x0000 */ long Padding_1137[2];
  /* 0x0008 */ struct DISPATCH_CLIENT_FRAME* m_p;
  /* 0x0010 */ class XLOCK m_lock;
}; /* size: 0x0040 */

struct IRunnableObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetRunningClass /* function */;
  /* 0x0020 */ void* Run /* function */;
  /* 0x0028 */ void* IsRunning /* function */;
  /* 0x0030 */ void* LockRunning /* function */;
  /* 0x0038 */ void* SetContainedObject /* function */;
}; /* size: 0x0040 */

typedef struct _CMSG_CMS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  /* 0x0004 */ long Padding_1138;
  union
  {
    /* 0x0008 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
    /* 0x0008 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
    /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  }; /* size: 0x0008 */
} CMSG_CMS_RECIPIENT_INFO, *PCMSG_CMS_RECIPIENT_INFO; /* size: 0x0010 */

struct IPicture
{
}; /* size: 0x0008 */

typedef struct __midl_frag302_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag302_t, *P_midl_frag302_t; /* size: 0x0038 */

typedef struct _CERT_ALT_NAME_ENTRY
{
  /* 0x0000 */ unsigned long dwAltNameChoice;
  /* 0x0004 */ long Padding_1139;
  union
  {
    /* 0x0008 */ struct _CERT_OTHER_NAME* pOtherName;
    /* 0x0008 */ wchar_t* pwszRfc822Name;
    /* 0x0008 */ wchar_t* pwszDNSName;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB DirectoryName;
    /* 0x0008 */ wchar_t* pwszURL;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB IPAddress;
    struct
    {
      /* 0x0008 */ char* pszRegisteredID;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} CERT_ALT_NAME_ENTRY, *PCERT_ALT_NAME_ENTRY; /* size: 0x0018 */

typedef struct _CERT_ACCESS_DESCRIPTION
{
  /* 0x0000 */ char* pszAccessMethod;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY AccessLocation;
} CERT_ACCESS_DESCRIPTION, *PCERT_ACCESS_DESCRIPTION; /* size: 0x0020 */

struct MIPID
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ struct _GUID ipid;
  /* 0x0018 */ unsigned long dwApt;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _CERT_LOGOTYPE_EXT_INFO
{
  /* 0x0000 */ unsigned long cCommunityLogo;
  /* 0x0004 */ long Padding_1140;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO* rgCommunityLogo;
  /* 0x0010 */ struct _CERT_LOGOTYPE_INFO* pIssuerLogo;
  /* 0x0018 */ struct _CERT_LOGOTYPE_INFO* pSubjectLogo;
  /* 0x0020 */ unsigned long cOtherLogo;
  /* 0x0024 */ long Padding_1141;
  /* 0x0028 */ struct _CERT_OTHER_LOGOTYPE_INFO* rgOtherLogo;
} CERT_LOGOTYPE_EXT_INFO, *PCERT_LOGOTYPE_EXT_INFO; /* size: 0x0030 */

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO
{
  /* 0x0000 */ char* pszTimeStampAlgorithm;
  /* 0x0008 */ char* pszContentType;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Content;
  /* 0x0020 */ unsigned long cAttribute;
  /* 0x0024 */ long Padding_1142;
  /* 0x0028 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CRYPT_TIME_STAMP_REQUEST_INFO, *PCRYPT_TIME_STAMP_REQUEST_INFO; /* size: 0x0030 */

struct tagMOUSEHOOKSTRUCTEX
{
  /* 0x0000 */ long Padding_1143[8];
  /* 0x0020 */ unsigned long mouseData;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX
{
  /* 0x0000 */ struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
  /* 0x0010 */ unsigned __int64 FaultingThreadId;
  /* 0x0018 */ unsigned __int64 Flags;
} PROCESS_WS_WATCH_INFORMATION_EX, *PPROCESS_WS_WATCH_INFORMATION_EX; /* size: 0x0020 */

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION
{
  /* 0x0000 */ struct _GUID LogIdentity;
} TRANSACTIONMANAGER_LOG_INFORMATION, *PTRANSACTIONMANAGER_LOG_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag78_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag78_t, *P_midl_frag78_t; /* size: 0x000c */

struct IPersistPropertyBag
{
}; /* size: 0x0008 */

typedef struct _FILE_PREFETCH
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH, *PFILE_PREFETCH; /* size: 0x0010 */

struct <vc_attributes>::call_asAttribute
{
  /* 0x0000 */ void* local_proc;
}; /* size: 0x0008 */

typedef struct _OCSP_BASIC_RESPONSE_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0048 */ unsigned long dwCertStatus;
  /* 0x004c */ long Padding_1144;
  /* 0x0050 */ struct _OCSP_BASIC_REVOKED_INFO* pRevokedInfo;
  /* 0x0058 */ struct _FILETIME ThisUpdate;
  /* 0x0060 */ struct _FILETIME NextUpdate;
  /* 0x0068 */ unsigned long cExtension;
  /* 0x006c */ long Padding_1145;
  /* 0x0070 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_ENTRY, *POCSP_BASIC_RESPONSE_ENTRY; /* size: 0x0078 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ wchar_t* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
  /* 0x0034 */ long __PADDING__[1];
} ENUM_SERVICE_STATUS_PROCESSW, *PENUM_SERVICE_STATUS_PROCESSW; /* size: 0x0038 */

class CSplit_QI
{
  /* 0x0000 */ struct tagMInterfacePointer* SomePMItfPtrs[2];
  /* 0x0010 */ HRESULT SomeHRs[2];
  /* 0x0018 */ struct _GUID SomeIIDs[2];
  /* 0x0038 */ unsigned long _dwCount;
  /* 0x003c */ long Padding_1146;
  /* 0x0040 */ char* _pAllocBlock;
  /* 0x0048 */ struct tagMInterfacePointer** _pItfArray;
  /* 0x0050 */ HRESULT* _pHrArray;
  /* 0x0058 */ struct _GUID* _pIIDArray;
}; /* size: 0x0060 */

class COleTls
{
  /* 0x0000 */ struct tagSOleTlsData* _pData;
}; /* size: 0x0008 */

struct ITypeInfo
{
}; /* size: 0x0008 */

struct tagIMEMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0018 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ char szString[80];
  /* 0x0074 */ long Padding_1147;
  /* 0x0078 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0080 */

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DriverName;
  /* 0x0010 */ void* ImageAddress;
  /* 0x0018 */ void* SectionPointer;
  /* 0x0020 */ void* EntryPoint;
  /* 0x0028 */ struct _IMAGE_EXPORT_DIRECTORY* ExportSectionPointer;
  /* 0x0030 */ unsigned long ImageLength;
  /* 0x0034 */ long __PADDING__[1];
} SYSTEM_GDI_DRIVER_INFORMATION, *PSYSTEM_GDI_DRIVER_INFORMATION; /* size: 0x0038 */

typedef struct __midl_frag650_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag650_t, *P_midl_frag650_t; /* size: 0x0028 */

class CFat
{
  /* 0x0000 */ class CFatVector _fv;
  /* 0x0038 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0040 */ const unsigned long _sid;
  /* 0x0044 */ long Padding_1148;
  /* 0x0048 */ class CBasedFatPtr _pfatReal;
  /* 0x0050 */ class CBasedFatPtr _pfatNoScratch;
  /* 0x0058 */ unsigned long _sectNoSnapshot;
  /* 0x005c */ unsigned long _sectNoSnapshotFree;
  /* 0x0060 */ unsigned short _uFatShift;
  /* 0x0062 */ unsigned short _uFatMask;
  /* 0x0064 */ unsigned long _cfsTable;
  /* 0x0068 */ unsigned long _ulFreeSects;
  /* 0x006c */ unsigned long _cUnmarkedSects;
  /* 0x0070 */ unsigned long _sectFirstFree;
  /* 0x0074 */ unsigned long _sectLastUsed;
  /* 0x0078 */ unsigned long _sectMax;
  /* 0x007c */ unsigned long _ipfsRangeLocks;
  /* 0x0080 */ unsigned short _isectRangeLocks;
}; /* size: 0x0088 */

struct SStorageFile
{
  /* 0x0000 */ unsigned char abSig[8];
  /* 0x0008 */ struct _GUID _clid;
}; /* size: 0x0018 */

struct tagCOLORMATCHTOTARGET
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwAction;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long cbName;
  /* 0x0014 */ unsigned long cbData;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

struct <vc_attributes>::idl_quoteAttribute
{
  /* 0x0000 */ const char* text;
}; /* size: 0x0008 */

struct tagORPCTHIS
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ long Padding_1149;
  /* 0x0020 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0028 */

struct IEnumCATEGORYINFO
{
}; /* size: 0x0008 */

class CComCat
{
  /* 0x0000 */ long Padding_1150[4];
  /* 0x0010 */ class CComCat::CInnerUnk* m_punkInner;
  /* 0x0018 */ struct IUnknown* m_punkOuter;
  /* 0x0020 */ struct ICatInformation* m_pcsICatInfo;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION m_csCatInfoInit;
  /* 0x0050 */ unsigned long m_dwRefCount;
  /* 0x0054 */ int m_fCsFlag;
  /* 0x0058 */ int m_bLockValid;
}; /* size: 0x0060 */

typedef struct __midl_frag219_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag219_t, *P_midl_frag219_t; /* size: 0x0010 */

typedef struct _CERT_CREATE_CONTEXT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1151;
  /* 0x0008 */ void* pfnFree /* function */;
  /* 0x0010 */ void* pvFree;
  /* 0x0018 */ void* pfnSort /* function */;
  /* 0x0020 */ void* pvSort;
} CERT_CREATE_CONTEXT_PARA, *PCERT_CREATE_CONTEXT_PARA; /* size: 0x0028 */

typedef struct _VOLUME_COMPRESSION_STATE
{
  /* 0x0000 */ unsigned char CompressNewFiles;
} VOLUME_COMPRESSION_STATE, *PVOLUME_COMPRESSION_STATE; /* size: 0x0001 */

struct IXMLDOMDocumentType
{
}; /* size: 0x0008 */

struct <vc_attributes>::helpstringdllAttribute
{
  /* 0x0000 */ const char* dllname;
}; /* size: 0x0008 */

class CFAccessControl
{
  /* 0x0000 */ long Padding_1152[2];
  /* 0x0008 */ long m_cRefs;
}; /* size: 0x0010 */

typedef struct _CALL_FRAME
{
  /* 0x0000 */ void* ReturnAddress;
  /* 0x0008 */ void* Param1Home;
  /* 0x0010 */ void* Param2Home;
  /* 0x0018 */ void* Param3Home;
  /* 0x0020 */ void* Param4Home;
} CALL_FRAME, *PCALL_FRAME; /* size: 0x0028 */

typedef struct _OBJECTID
{
  /* 0x0000 */ struct _GUID Lineage;
  /* 0x0010 */ unsigned long Uniquifier;
} OBJECTID, *POBJECTID; /* size: 0x0014 */

typedef struct __midl_frag279_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag279_t, *P_midl_frag279_t; /* size: 0x000c */

struct RPC_STATS_VECTOR
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ unsigned long Stats[1];
}; /* size: 0x0008 */

typedef struct _RPC_SERVER_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ long Padding_1153;
  /* 0x0030 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0038 */ unsigned int RpcProtseqEndpointCount;
  /* 0x003c */ long Padding_1154;
  /* 0x0040 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0048 */ void* DefaultManagerEpv;
  /* 0x0050 */ const void* InterpreterInfo;
  /* 0x0058 */ unsigned int Flags;
  /* 0x005c */ long __PADDING__[1];
} RPC_SERVER_INTERFACE, *PRPC_SERVER_INTERFACE; /* size: 0x0060 */

typedef struct _RPC_PROTSEQ_ENDPOINT
{
  /* 0x0000 */ unsigned char* RpcProtocolSequence;
  /* 0x0008 */ unsigned char* Endpoint;
} RPC_PROTSEQ_ENDPOINT, *PRPC_PROTSEQ_ENDPOINT; /* size: 0x0010 */

typedef struct _NT_TIB64
{
  /* 0x0000 */ unsigned __int64 ExceptionList;
  /* 0x0008 */ unsigned __int64 StackBase;
  /* 0x0010 */ unsigned __int64 StackLimit;
  /* 0x0018 */ unsigned __int64 SubSystemTib;
  union
  {
    /* 0x0020 */ unsigned __int64 FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ unsigned __int64 ArbitraryUserPointer;
  /* 0x0030 */ unsigned __int64 Self;
} NT_TIB64, *PNT_TIB64; /* size: 0x0038 */

struct CVectBits
{
  /* 0x0000 */ unsigned short full : 1; /* bit position: 0 */
  /* 0x0002 */ unsigned short firstfree;
}; /* size: 0x0004 */

class Windows::Rtl::StringTraits<_UNICODE_STRING>
{
}; /* size: 0x0001 */

typedef struct _ABCFLOAT
{
  /* 0x0000 */ float abcfA;
  /* 0x0004 */ float abcfB;
  /* 0x0008 */ float abcfC;
} ABCFLOAT, *PABCFLOAT; /* size: 0x000c */

class CRandomNumberGenerator
{
  /* 0x0000 */ unsigned __int64 _hRngProv;
}; /* size: 0x0008 */

struct tagLOGCOLORSPACEA
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ char lcsFilename[260];
}; /* size: 0x0148 */

struct tagEMRCREATECOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEA lcs;
}; /* size: 0x0154 */

class CPackagerMoniker
{
  /* 0x0000 */ long Padding_1155[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_1156;
  /* 0x0010 */ wchar_t* m_szFile;
  /* 0x0018 */ struct IMoniker* m_pmk;
  /* 0x0020 */ int m_fLink;
}; /* size: 0x0028 */

typedef struct __midl_frag1484_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1484_t, *P_midl_frag1484_t; /* size: 0x0048 */

struct tagSTREAM_ACL
{
  /* 0x0000 */ unsigned long ulNumOfDenyEntries;
  /* 0x0004 */ unsigned long ulNumOfGrantEntries;
  /* 0x0008 */ struct tagSTREAM_ACE* pACL;
}; /* size: 0x0010 */

struct _TP_ALPC;

struct IAdviseSink2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* OnDataChange /* function */;
  /* 0x0020 */ void* OnViewChange /* function */;
  /* 0x0028 */ void* OnRename /* function */;
  /* 0x0030 */ void* OnSave /* function */;
  /* 0x0038 */ void* OnClose /* function */;
  /* 0x0040 */ void* OnLinkSrcChange /* function */;
}; /* size: 0x0048 */

class CFatSect
{
  /* 0x0000 */ unsigned long* _asectEntry /* zero-length array */;
}; /* size: 0x0004 */

struct HDROP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ProcessActivatorToken
{
  /* 0x0000 */ struct _GUID ProcessGUID;
  /* 0x0010 */ struct _GUID ActivatorIPID;
  /* 0x0020 */ unsigned long dwFlags;
} ProcessActivatorToken, *PProcessActivatorToken; /* size: 0x0024 */

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoVersion;
  /* 0x0008 */ unsigned char* pbNonce;
  /* 0x0010 */ unsigned long cbNonce;
  /* 0x0014 */ long Padding_1157;
  /* 0x0018 */ unsigned char* pbAuthData;
  /* 0x0020 */ unsigned long cbAuthData;
  /* 0x0024 */ long Padding_1158;
  /* 0x0028 */ unsigned char* pbTag;
  /* 0x0030 */ unsigned long cbTag;
  /* 0x0034 */ long Padding_1159;
  /* 0x0038 */ unsigned char* pbMacContext;
  /* 0x0040 */ unsigned long cbMacContext;
  /* 0x0044 */ unsigned long cbAAD;
  /* 0x0048 */ unsigned __int64 cbData;
  /* 0x0050 */ unsigned long dwFlags;
  /* 0x0054 */ long __PADDING__[1];
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO; /* size: 0x0058 */

typedef struct _IMAGE_DEBUG_MISC
{
  /* 0x0000 */ unsigned long DataType;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned char Unicode;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC; /* size: 0x0010 */

typedef struct _SYSTEM_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1160;
  /* 0x0008 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_BIGPOOL_INFORMATION, *PSYSTEM_BIGPOOL_INFORMATION; /* size: 0x0020 */

class ComPsClassFactory
{
  /* 0x0000 */ long Padding_1161[4];
  /* 0x0010 */ long m_crefs;
  /* 0x0014 */ long Padding_1162;
  /* 0x0018 */ struct IPSFactoryBuffer* m_pDelegatee;
  /* 0x0020 */ const struct tagProxyFileInfo** m_pProxyFileList;
}; /* size: 0x0028 */

struct tagNONCLIENTMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTW lfCaptionFont;
  /* 0x0074 */ int iSmCaptionWidth;
  /* 0x0078 */ int iSmCaptionHeight;
  /* 0x007c */ struct tagLOGFONTW lfSmCaptionFont;
  /* 0x00d8 */ int iMenuWidth;
  /* 0x00dc */ int iMenuHeight;
  /* 0x00e0 */ struct tagLOGFONTW lfMenuFont;
  /* 0x013c */ struct tagLOGFONTW lfStatusFont;
  /* 0x0198 */ struct tagLOGFONTW lfMessageFont;
  /* 0x01f4 */ int iPaddedBorderWidth;
}; /* size: 0x01f8 */

class SerializableProperty
{
  /* 0x0000 */ long Padding_1163[2];
  /* 0x0008 */ struct ISerializableParent* _parent;
  /* 0x0010 */ int _unSerialized;
  /* 0x0014 */ int _added;
}; /* size: 0x0018 */

typedef struct __midl_frag396_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag396_t, *P_midl_frag396_t; /* size: 0x0020 */

typedef struct _CONSOLE_SCREEN_BUFFER_INFO
{
  /* 0x0000 */ struct _COORD dwSize;
  /* 0x0004 */ struct _COORD dwCursorPosition;
  /* 0x0008 */ unsigned short wAttributes;
  /* 0x000a */ struct _SMALL_RECT srWindow;
  /* 0x0012 */ struct _COORD dwMaximumWindowSize;
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO; /* size: 0x0016 */

struct <vc_attributes>::atl::soap_headerAttribute
{
  /* 0x0000 */ const char* value;
  /* 0x0008 */ BOOL required;
  /* 0x0009 */ BOOL in;
  /* 0x000a */ BOOL out;
  /* 0x000b */ char __PADDING__[5];
}; /* size: 0x0010 */

typedef struct _PROCESS_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_1164;
  /* 0x0008 */ struct _PEB* PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ long Padding_1165;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION, *PPROCESS_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION BasicInfo;
  union
  {
    /* 0x0038 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned long IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned long IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned long SpareBits : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION, *PPROCESS_EXTENDED_BASIC_INFORMATION; /* size: 0x0040 */

typedef struct __midl_frag592_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag592_t, *P_midl_frag592_t; /* size: 0x0058 */

class CCompositeMonikerEnum
{
  /* 0x0000 */ long Padding_1166[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_1167;
  /* 0x0010 */ class CCompositeMoniker* m_pCM;
  /* 0x0018 */ int m_fForward;
  /* 0x001c */ long Padding_1168;
  /* 0x0020 */ struct CCompositeMonikerEnum::se* m_pBase;
  /* 0x0028 */ struct CCompositeMonikerEnum::se* m_pTop;
  /* 0x0030 */ struct IMoniker* m_pNext;
}; /* size: 0x0038 */

typedef struct _NDR_USER_MARSHAL_INFO
{
  /* 0x0000 */ unsigned long InformationLevel;
  /* 0x0004 */ long Padding_1169;
  /* 0x0008 */ struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
} NDR_USER_MARSHAL_INFO, *PNDR_USER_MARSHAL_INFO; /* size: 0x0058 */

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwInnerContentType;
} CRYPT_ENCRYPT_MESSAGE_PARA, *PCRYPT_ENCRYPT_MESSAGE_PARA; /* size: 0x0038 */

typedef struct _SERVICE_TABLE_ENTRYA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYA, *PSERVICE_TABLE_ENTRYA; /* size: 0x0010 */

struct <vc_attributes>::no_injected_textAttribute
{
  /* 0x0000 */ BOOL value;
}; /* size: 0x0001 */

typedef struct _OCSP_SIGNED_REQUEST_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _OCSP_SIGNATURE_INFO* pOptionalSignatureInfo;
} OCSP_SIGNED_REQUEST_INFO, *POCSP_SIGNED_REQUEST_INFO; /* size: 0x0018 */

typedef struct _OPEN_PRINTER_PROPS_INFOW
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_1170;
  /* 0x0008 */ wchar_t* pszSheetName;
  /* 0x0010 */ unsigned int uSheetIndex;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ int bModal;
  /* 0x001c */ long __PADDING__[1];
} OPEN_PRINTER_PROPS_INFOW, *POPEN_PRINTER_PROPS_INFOW; /* size: 0x0020 */

struct PPM_THERMAL_POLICY_EVENT
{
  /* 0x0000 */ unsigned char Mode;
  /* 0x0001 */ char Padding_1171[7];
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct _RPC_PROTSEQ_VECTORA
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ long Padding_1172;
  /* 0x0008 */ unsigned char* Protseq[1];
} RPC_PROTSEQ_VECTORA, *PRPC_PROTSEQ_VECTORA; /* size: 0x0010 */

struct IEnumHolder
{
}; /* size: 0x0008 */

struct tagFILTERKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iWaitMSec;
  /* 0x000c */ unsigned long iDelayMSec;
  /* 0x0010 */ unsigned long iRepeatMSec;
  /* 0x0014 */ unsigned long iBounceMSec;
}; /* size: 0x0018 */

struct tagEMRSETTEXTCOLOR
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long crColor;
}; /* size: 0x000c */

class ActivationProperties
{
  /* 0x0000 */ long Padding_1173[6];
  /* 0x0018 */ enum _TAG_UNNAMED_13 _marshalState;
  /* 0x001c */ struct _GUID _actCLSID;
  /* 0x002c */ int _unSerialized;
  /* 0x0030 */ int _unSerializedInproc;
  /* 0x0034 */ long _refCount;
  /* 0x0038 */ struct tagCustomHeader _serHeader;
  /* 0x0078 */ struct tagCustomHeader _unSerHeader;
  /* 0x00b8 */ unsigned long _marshalFlags;
  /* 0x00bc */ unsigned long _size;
  /* 0x00c0 */ int _toDelete;
  /* 0x00c4 */ int _fDestruct;
  /* 0x00c8 */ int _fInprocSerializationRequired;
  /* 0x00cc */ unsigned long _totalSize;
  /* 0x00d0 */ class SerializableProperty* serializableIfsCollection[10];
  /* 0x0120 */ unsigned long _ifsIndex;
  /* 0x0124 */ struct _GUID _clsidArray[10];
  /* 0x01c4 */ unsigned long _sizeArray[10];
  /* 0x01ec */ unsigned long _headerSize;
  /* 0x01f0 */ class Serializer* _pUnSer;
  /* 0x01f8 */ void* _blob;
}; /* size: 0x0200 */

typedef struct __midl_frag609_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag7;
    /* 0x0060 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag8;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
  } /* size: 0x0050 */ frag2;
} _midl_frag609_t, *P_midl_frag609_t; /* size: 0x0070 */

struct <vc_attributes>::helper_attributes::source_annotation_attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct IOleCache2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Cache /* function */;
  /* 0x0020 */ void* Uncache /* function */;
  /* 0x0028 */ void* EnumCache /* function */;
  /* 0x0030 */ void* InitCache /* function */;
  /* 0x0038 */ void* SetData /* function */;
  /* 0x0040 */ void* UpdateCache /* function */;
  /* 0x0048 */ void* DiscardCache /* function */;
}; /* size: 0x0050 */

typedef struct _CERT_ECC_SIGNATURE
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB r;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB s;
} CERT_ECC_SIGNATURE, *PCERT_ECC_SIGNATURE; /* size: 0x0020 */

class CArray<CStatData>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_1174;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CStatData>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

typedef struct _CRYPT_SEQUENCE_OF_ANY
{
  /* 0x0000 */ unsigned long cValue;
  /* 0x0004 */ long Padding_1175;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_SEQUENCE_OF_ANY, *PCRYPT_SEQUENCE_OF_ANY; /* size: 0x0010 */

struct <vc_attributes>::restrictedAttribute
{
  /* 0x0000 */ const char* value;
}; /* size: 0x0008 */

typedef struct _ZONEATTRIBUTES
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t szDisplayName[260];
  /* 0x020c */ wchar_t szDescription[200];
  /* 0x039c */ wchar_t szIconPath[260];
  /* 0x05a4 */ unsigned long dwTemplateMinLevel;
  /* 0x05a8 */ unsigned long dwTemplateRecommended;
  /* 0x05ac */ unsigned long dwTemplateCurrentLevel;
  /* 0x05b0 */ unsigned long dwFlags;
} ZONEATTRIBUTES, *PZONEATTRIBUTES; /* size: 0x05b4 */

typedef struct _CERT_SYSTEM_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
} CERT_SYSTEM_STORE_INFO, *PCERT_SYSTEM_STORE_INFO; /* size: 0x0004 */

typedef struct _RTL_VERIFIER_ALL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned __int64 OffsetPageHeapsInformation;
  /* 0x0010 */ unsigned __int64 OffsetRuntimeFlagsInformation;
  /* 0x0018 */ unsigned __int64 OffsetFaultInjectInformation;
} RTL_VERIFIER_ALL_INFORMATION, *PRTL_VERIFIER_ALL_INFORMATION; /* size: 0x0020 */

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1176;
  /* 0x0008 */ unsigned char* pbEncodedOcspResponse;
  /* 0x0010 */ unsigned long cbEncodedOcspResponse;
  /* 0x0014 */ long __PADDING__[1];
} CERT_SERVER_OCSP_RESPONSE_CONTEXT, *PCERT_SERVER_OCSP_RESPONSE_CONTEXT; /* size: 0x0018 */

struct IHookOleObject
{
}; /* size: 0x0008 */

struct tagSTATPROPSTG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0008 */ unsigned long propid;
  /* 0x000c */ unsigned short vt;
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EncryptedPrivateKey;
} CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO; /* size: 0x0028 */

typedef struct _RTL_HEAP_WALK_ENTRY
{
  /* 0x0000 */ void* DataAddress;
  /* 0x0008 */ unsigned __int64 DataSize;
  /* 0x0010 */ unsigned char OverheadBytes;
  /* 0x0011 */ unsigned char SegmentIndex;
  /* 0x0012 */ unsigned short Flags;
  /* 0x0014 */ long Padding_1177;
  union
  {
    struct
    {
      /* 0x0018 */ unsigned __int64 Settable;
      /* 0x0020 */ unsigned short TagIndex;
      /* 0x0022 */ unsigned short AllocatorBackTraceIndex;
      /* 0x0024 */ unsigned long Reserved[2];
      /* 0x002c */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0018 */ unsigned long CommittedSize;
      /* 0x001c */ unsigned long UnCommittedSize;
      /* 0x0020 */ void* FirstEntry;
      /* 0x0028 */ void* LastEntry;
    } /* size: 0x0018 */ Segment;
  }; /* size: 0x0018 */
} RTL_HEAP_WALK_ENTRY, *PRTL_HEAP_WALK_ENTRY; /* size: 0x0030 */

typedef struct _AVRF_MEMORY_RANGE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 Size;
} AVRF_MEMORY_RANGE, *PAVRF_MEMORY_RANGE; /* size: 0x0010 */

typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ long Padding_1178;
  /* 0x0008 */ char* Buffer;
} RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR, *PRPC_C_OPT_COOKIE_AUTH_DESCRIPTOR; /* size: 0x0010 */

struct IScmReplyInfo
{
}; /* size: 0x0008 */

struct tagIMECHARPOSITION
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCharPos;
  /* 0x0008 */ struct tagPOINT pt;
  /* 0x0010 */ unsigned int cLineHeight;
  /* 0x0014 */ struct tagRECT rcDocument;
}; /* size: 0x0024 */

typedef struct _s__ThrowInfo
{
  /* 0x0000 */ unsigned int attributes;
  /* 0x0004 */ void* pmfnUnwind /* function */;
  /* 0x000c */ void* pForwardCompat /* function */;
  /* 0x0014 */ const struct _s__CatchableTypeArray* pCatchableTypeArray;
} s__ThrowInfo, *Ps__ThrowInfo; /* size: 0x001c */

typedef struct _CERT_NAME_CONSTRAINTS_INFO
{
  /* 0x0000 */ unsigned long cPermittedSubtree;
  /* 0x0004 */ long Padding_1179;
  /* 0x0008 */ struct _CERT_GENERAL_SUBTREE* rgPermittedSubtree;
  /* 0x0010 */ unsigned long cExcludedSubtree;
  /* 0x0014 */ long Padding_1180;
  /* 0x0018 */ struct _CERT_GENERAL_SUBTREE* rgExcludedSubtree;
} CERT_NAME_CONSTRAINTS_INFO, *PCERT_NAME_CONSTRAINTS_INFO; /* size: 0x0020 */

typedef struct __midl_frag1097_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1097_t, *P_midl_frag1097_t; /* size: 0x0020 */

typedef struct _srgtprot_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[343];
  /* 0x0159 */ char __PADDING__[1];
} srgtprot_MIDL_PROC_FORMAT_STRING, *Psrgtprot_MIDL_PROC_FORMAT_STRING; /* size: 0x015a */

typedef struct __midl_frag371_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag371_t, *P_midl_frag371_t; /* size: 0x0048 */

class CSafeSem
{
  /* 0x0000 */ long _sc;
  /* 0x0004 */ long Padding_1181;
  /* 0x0008 */ class CPerContext* _ppc;
  /* 0x0010 */ class CPerContext* _ppcPrev;
  /* 0x0018 */ class CSmAllocator* _pSmAllocator;
}; /* size: 0x0020 */

struct tagMENUGETOBJECTINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned int uPos;
  /* 0x0008 */ struct HMENU__* hmenu;
  /* 0x0010 */ void* riid;
  /* 0x0018 */ void* pvObj;
}; /* size: 0x0020 */

struct <vc_attributes>::ms_unionAttribute
{
}; /* size: 0x0001 */

struct <vc_attributes>::uniqueAttribute
{
}; /* size: 0x0001 */

typedef struct __midl_frag1123_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1123_t, *P_midl_frag1123_t; /* size: 0x0088 */

struct tagRPC_EXTENDED_ERROR_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1182;
  /* 0x0008 */ wchar_t* ComputerName;
  /* 0x0010 */ unsigned long ProcessID;
  union
  {
    union
    {
      /* 0x0014 */ struct _SYSTEMTIME SystemTime;
      /* 0x0014 */ struct _FILETIME FileTime;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
  /* 0x0024 */ unsigned long GeneratingComponent;
  /* 0x0028 */ unsigned long Status;
  /* 0x002c */ unsigned short DetectionLocation;
  /* 0x002e */ unsigned short Flags;
  /* 0x0030 */ int NumberOfParameters;
  /* 0x0034 */ long Padding_1183;
  /* 0x0038 */ struct tagRPC_EE_INFO_PARAM Parameters[4];
}; /* size: 0x0098 */

class CBool
{
  /* 0x0000 */ int value;
}; /* size: 0x0004 */

struct IComCatalog2Internal
{
}; /* size: 0x0008 */

struct NdrStringPtrHeader
{
  /* 0x0000 */ unsigned long dwUnique;
  /* 0x0004 */ unsigned long dwMax;
  /* 0x0008 */ unsigned long dwOffset;
  /* 0x000c */ unsigned long dwActual;
}; /* size: 0x0010 */

struct IPrivActivationPropertiesOut
{
}; /* size: 0x0008 */

class CRpcThreadCache
{
  union
  {
    /* 0x0000 */ class CRpcThread* _pFreeList;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0050 */
}; /* size: 0x0001 */

typedef struct __midl_frag304_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag304_t, *P_midl_frag304_t; /* size: 0x000c */

class MapEnumToSQMData<enum RpcssSQMFlags>
{
}; /* size: 0x0001 */

typedef struct _PLUGPLAY_EVENT_BLOCK
{
  /* 0x0000 */ struct _GUID EventGuid;
  /* 0x0010 */ enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ long Padding_1184;
  /* 0x0018 */ unsigned long* Result;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long TotalSize;
  /* 0x0028 */ void* DeviceObject;
  union
  {
    union
    {
      struct
      {
        /* 0x0030 */ struct _GUID ClassGuid;
        /* 0x0040 */ wchar_t SymbolicLinkName[1];
        /* 0x0042 */ char __PADDING__[2];
      } /* size: 0x0014 */ DeviceClass;
      struct
      {
        /* 0x0030 */ wchar_t DeviceIds[1];
      } /* size: 0x0002 */ TargetDevice;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ InstallDevice;
      struct
      {
        /* 0x0030 */ void* NotificationStructure;
        /* 0x0038 */ wchar_t DeviceIds[1];
        /* 0x003a */ char __PADDING__[6];
      } /* size: 0x0010 */ CustomNotification;
      struct
      {
        /* 0x0030 */ void* Notification;
      } /* size: 0x0008 */ ProfileNotification;
      struct
      {
        /* 0x0030 */ unsigned long NotificationCode;
        /* 0x0034 */ unsigned long NotificationData;
      } /* size: 0x0008 */ PowerNotification;
      struct
      {
        /* 0x0030 */ enum _PNP_VETO_TYPE VetoType;
        /* 0x0034 */ wchar_t DeviceIdVetoNameBuffer[1];
        /* 0x0036 */ char __PADDING__[2];
      } /* size: 0x0008 */ VetoNotification;
      struct
      {
        /* 0x0030 */ struct _GUID BlockedDriverGuid;
      } /* size: 0x0010 */ BlockedDriverNotification;
      struct
      {
        /* 0x0030 */ wchar_t ParentId[1];
      } /* size: 0x0002 */ InvalidIDNotification;
      struct
      {
        /* 0x0030 */ struct _GUID PowerSettingGuid;
        /* 0x0040 */ unsigned char PowerSettingChanged;
        /* 0x0011 */ char Padding_1185[3];
        /* 0x0044 */ unsigned long DataLength;
        /* 0x0048 */ unsigned char Data[1];
        /* 0x0049 */ char __PADDING__[3];
      } /* size: 0x001c */ PowerSettingNotification;
    }; /* size: 0x001c */
  } /* size: 0x0020 */ u;
} PLUGPLAY_EVENT_BLOCK, *PPLUGPLAY_EVENT_BLOCK; /* size: 0x0050 */

class COleStaticLock
{
  /* 0x0000 */ class COleStaticMutexSem& _mxs;
}; /* size: 0x0008 */

struct tagSCMSA
{
  /* 0x0000 */ unsigned short wNumEntries;
  /* 0x0002 */ unsigned short wSecurityOffset;
  /* 0x0004 */ wchar_t awszStringArray[62];
}; /* size: 0x0080 */

class CLock
{
  /* 0x0000 */ class CMutexSem& _mxs;
}; /* size: 0x0008 */

class CFILETIME
{
  union
  {
    /* 0x0000 */ struct _FILETIME _filetime;
    /* 0x0000 */ __int64 _ll;
    /* 0x0000 */ union _LARGE_INTEGER _li;
    /* 0x0000 */ union _ULARGE_INTEGER _uli;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct __midl_frag313_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag313_t, *P_midl_frag313_t; /* size: 0x000c */

typedef struct _POOLED_USAGE_AND_LIMITS
{
  /* 0x0000 */ unsigned __int64 PeakPagedPoolUsage;
  /* 0x0008 */ unsigned __int64 PagedPoolUsage;
  /* 0x0010 */ unsigned __int64 PagedPoolLimit;
  /* 0x0018 */ unsigned __int64 PeakNonPagedPoolUsage;
  /* 0x0020 */ unsigned __int64 NonPagedPoolUsage;
  /* 0x0028 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0030 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0038 */ unsigned __int64 PagefileUsage;
  /* 0x0040 */ unsigned __int64 PagefileLimit;
} POOLED_USAGE_AND_LIMITS, *PPOOLED_USAGE_AND_LIMITS; /* size: 0x0048 */

typedef struct __midl_frag1597_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1597_t, *P_midl_frag1597_t; /* size: 0x0028 */

class CSSMappedStream
{
  /* 0x0000 */ long Padding_1186[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ long Padding_1187;
  /* 0x0010 */ struct IStream* _pstm;
  /* 0x0018 */ unsigned char* _pbMappedStream;
  /* 0x0020 */ unsigned long _cbMappedStream;
  /* 0x0024 */ unsigned long _cbActualStreamSize;
  /* 0x0028 */ void* _powner;
  /* 0x0030 */ int _fDirty;
}; /* size: 0x0038 */

typedef struct _REPARSE_INDEX_KEY
{
  /* 0x0000 */ unsigned long FileReparseTag;
  /* 0x0004 */ union _LARGE_INTEGER FileId;
} REPARSE_INDEX_KEY, *PREPARSE_INDEX_KEY; /* size: 0x000c */

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_
{
  /* 0x0000 */ void* TargetFileObject;
  /* 0x0008 */ unsigned long TargetLinkTrackingInformationLength;
  /* 0x000c */ unsigned char TargetLinkTrackingInformationBuffer[1];
  /* 0x000d */ char __PADDING__[3];
} REMOTE_LINK_TRACKING_INFORMATION_, *PREMOTE_LINK_TRACKING_INFORMATION_; /* size: 0x0010 */

class CExtentList
{
  /* 0x0000 */ unsigned long m_cbMonikerExtents;
  /* 0x0004 */ long Padding_1188;
  /* 0x0008 */ unsigned char* m_pchMonikerExtents;
}; /* size: 0x0010 */

class CFileMoniker
{
  /* 0x0000 */ long Padding_1189[10];
  /* 0x0028 */ struct _GUID m_clsid;
  /* 0x0038 */ class CExtentList m_ExtentList;
  /* 0x0048 */ wchar_t* m_szPath;
  /* 0x0050 */ char* m_pszAnsiPath;
  /* 0x0058 */ unsigned short m_ccPath;
  /* 0x005a */ unsigned short m_cbAnsiPath;
  /* 0x005c */ unsigned long m_dwHashValue;
  struct /* bitfield */
  {
    /* 0x0060 */ unsigned long m_fUnicodeExtent : 1; /* bit position: 0 */
    /* 0x0060 */ unsigned long m_fClassVerified : 1; /* bit position: 1 */
    /* 0x0060 */ unsigned long m_fHashValueValid : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0064 */ unsigned char m_fShellLinkInitialized;
  /* 0x0065 */ char Padding_1190[3];
  struct /* bitfield */
  {
    /* 0x0068 */ unsigned long m_fTrackingEnabled : 1; /* bit position: 0 */
    /* 0x0068 */ unsigned long m_fSaveShellLink : 1; /* bit position: 1 */
    /* 0x0068 */ unsigned long m_fDirty : 1; /* bit position: 2 */
    /* 0x0068 */ unsigned long m_fReduceEnabled : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x006c */ unsigned short m_cAnti;
  /* 0x006e */ unsigned short m_endServer;
  /* 0x0070 */ enum CFileMoniker::olever m_ole1;
  /* 0x0074 */ long Padding_1191;
  /* 0x0078 */ struct IShellLinkW* m_pShellLink;
  /* 0x0080 */ class CTrackingFileMoniker _tfm;
  /* 0x0090 */ class CMutexSem2 m_mxs;
}; /* size: 0x00c0 */

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned short wResponseType;
  /* 0x0006 */ unsigned short wResponseFlags;
  /* 0x0008 */ struct _FILETIME LastModifiedTime;
  /* 0x0010 */ unsigned long dwMaxAge;
  /* 0x0014 */ long Padding_1192;
  /* 0x0018 */ const wchar_t* pwszETag;
  /* 0x0020 */ unsigned long dwProxyId;
  /* 0x0024 */ long __PADDING__[1];
} CRYPTNET_URL_CACHE_RESPONSE_INFO, *PCRYPTNET_URL_CACHE_RESPONSE_INFO; /* size: 0x0028 */

typedef struct _SYSTEM_AUDIT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_ACE, *PSYSTEM_AUDIT_ACE; /* size: 0x000c */

typedef struct _MINIDUMP_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackRoutine /* function */;
  /* 0x0008 */ void* CallbackParam;
} MINIDUMP_CALLBACK_INFORMATION, *PMINIDUMP_CALLBACK_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag1806_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1806_t, *P_midl_frag1806_t; /* size: 0x0020 */

typedef struct _IMAGEHLP_GET_TYPE_INFO_PARAMS
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NumIds;
  /* 0x000c */ long Padding_1193;
  /* 0x0010 */ unsigned long* TypeIds;
  /* 0x0018 */ unsigned __int64 TagFilter;
  /* 0x0020 */ unsigned long NumReqs;
  /* 0x0024 */ long Padding_1194;
  /* 0x0028 */ enum _IMAGEHLP_SYMBOL_TYPE_INFO* ReqKinds;
  /* 0x0030 */ unsigned __int64* ReqOffsets;
  /* 0x0038 */ unsigned long* ReqSizes;
  /* 0x0040 */ unsigned __int64 ReqStride;
  /* 0x0048 */ unsigned __int64 BufferSize;
  /* 0x0050 */ void* Buffer;
  /* 0x0058 */ unsigned long EntriesMatched;
  /* 0x005c */ unsigned long EntriesFilled;
  /* 0x0060 */ unsigned __int64 TagsFound;
  /* 0x0068 */ unsigned __int64 AllReqsValid;
  /* 0x0070 */ unsigned long NumReqsValid;
  /* 0x0074 */ long Padding_1195;
  /* 0x0078 */ unsigned __int64* ReqsValid;
} IMAGEHLP_GET_TYPE_INFO_PARAMS, *PIMAGEHLP_GET_TYPE_INFO_PARAMS; /* size: 0x0080 */

typedef struct __midl_frag1108_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1108_t, *P_midl_frag1108_t; /* size: 0x0010 */

typedef struct __midl_frag197_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag197_t, *P_midl_frag197_t; /* size: 0x000c */

typedef struct _CRYPT_PSOURCE_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncodingParameters;
} CRYPT_PSOURCE_ALGORITHM, *PCRYPT_PSOURCE_ALGORITHM; /* size: 0x0018 */

typedef struct __midl_frag787_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag787_t, *P_midl_frag787_t; /* size: 0x0038 */

typedef struct _CERT_BASIC_CONSTRAINTS_INFO
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB SubjectType;
  /* 0x0018 */ int fPathLenConstraint;
  /* 0x001c */ unsigned long dwPathLenConstraint;
  /* 0x0020 */ unsigned long cSubtreesConstraint;
  /* 0x0024 */ long Padding_1196;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* rgSubtreesConstraint;
} CERT_BASIC_CONSTRAINTS_INFO, *PCERT_BASIC_CONSTRAINTS_INFO; /* size: 0x0030 */

typedef struct _CERT_AUTHORITY_KEY_ID_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB CertIssuer;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB CertSerialNumber;
} CERT_AUTHORITY_KEY_ID_INFO, *PCERT_AUTHORITY_KEY_ID_INFO; /* size: 0x0030 */

struct SPreDirEntry
{
  /* 0x0000 */ class CDfName _dfn;
  /* 0x0042 */ unsigned char _mse;
  /* 0x0043 */ unsigned char _bflags;
  /* 0x0044 */ unsigned long _sidLeftSib;
  /* 0x0048 */ unsigned long _sidRightSib;
  /* 0x004c */ unsigned long _sidChild;
  /* 0x0050 */ struct _GUID _clsId;
  /* 0x0060 */ unsigned long _dwUserFlags;
  /* 0x0064 */ struct _FILETIME _time[2];
  /* 0x0074 */ unsigned long _sectStart;
  /* 0x0078 */ union _ULARGE_INTEGER _ulSize;
}; /* size: 0x0080 */

typedef struct __midl_frag940_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag940_t, *P_midl_frag940_t; /* size: 0x0038 */

typedef struct __midl_frag1867_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1867_t, *P_midl_frag1867_t; /* size: 0x0048 */

struct SYMSRV_INDEX_INFO
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ char file[261];
  /* 0x0109 */ char Padding_1197[3];
  /* 0x010c */ int stripped;
  /* 0x0110 */ unsigned long timestamp;
  /* 0x0114 */ unsigned long size;
  /* 0x0118 */ char dbgfile[261];
  /* 0x021d */ char pdbfile[261];
  /* 0x0322 */ char Padding_1198[2];
  /* 0x0324 */ struct _GUID guid;
  /* 0x0334 */ unsigned long sig;
  /* 0x0338 */ unsigned long age;
}; /* size: 0x033c */

typedef struct __midl_frag318_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag318_t, *P_midl_frag318_t; /* size: 0x0048 */

typedef struct _SPC_SERIALIZED_OBJECT
{
  /* 0x0000 */ unsigned char ClassId[16];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerializedData;
} SPC_SERIALIZED_OBJECT, *PSPC_SERIALIZED_OBJECT; /* size: 0x0020 */

typedef struct __midl_frag943_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag943_t, *P_midl_frag943_t; /* size: 0x0028 */

typedef struct _CROSS_CERT_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long dwSyncDeltaTime;
  /* 0x0004 */ unsigned long cDistPoint;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO* rgDistPoint;
} CROSS_CERT_DIST_POINTS_INFO, *PCROSS_CERT_DIST_POINTS_INFO; /* size: 0x0010 */

typedef struct _CRYPT_PROVIDER_REF
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ long Padding_1199;
  /* 0x0008 */ wchar_t* pszFunction;
  /* 0x0010 */ wchar_t* pszProvider;
  /* 0x0018 */ unsigned long cProperties;
  /* 0x001c */ long Padding_1200;
  /* 0x0020 */ struct _CRYPT_PROPERTY_REF** rgpProperties;
  /* 0x0028 */ struct _CRYPT_IMAGE_REF* pUM;
  /* 0x0030 */ struct _CRYPT_IMAGE_REF* pKM;
} CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF; /* size: 0x0038 */

typedef struct __midl_frag1553_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1553_t, *P_midl_frag1553_t; /* size: 0x0068 */

typedef struct _CMSG_SIGNED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cSigners;
  /* 0x0008 */ struct _CMSG_SIGNER_ENCODE_INFO* rgSigners;
  /* 0x0010 */ unsigned long cCertEncoded;
  /* 0x0014 */ long Padding_1201;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
  /* 0x0020 */ unsigned long cCrlEncoded;
  /* 0x0024 */ long Padding_1202;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* rgCrlEncoded;
} CMSG_SIGNED_ENCODE_INFO, *PCMSG_SIGNED_ENCODE_INFO; /* size: 0x0030 */

class CClassCache::CLSvrClassEntry::CFinishObject
{
  /* 0x0000 */ long Padding_1203[2];
  /* 0x0008 */ unsigned long _dwScmReg;
  /* 0x000c */ long Padding_1204;
  /* 0x0010 */ struct HWND__* _hWndDdeServer;
  /* 0x0018 */ struct IUnknown* _pUnk;
  /* 0x0020 */ struct _GUID _clsid;
}; /* size: 0x0030 */

typedef struct __midl_frag1679_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1679_t, *P_midl_frag1679_t; /* size: 0x0020 */

typedef struct _CRYPT_TRUST_REG_ENTRY
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1205;
  /* 0x0008 */ wchar_t* pwszDLLName;
  /* 0x0010 */ wchar_t* pwszFunctionName;
} CRYPT_TRUST_REG_ENTRY, *PCRYPT_TRUST_REG_ENTRY; /* size: 0x0018 */

typedef struct _CRYPT_REGISTER_ACTIONID
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1206;
  /* 0x0008 */ struct _CRYPT_TRUST_REG_ENTRY sInitProvider;
  /* 0x0020 */ struct _CRYPT_TRUST_REG_ENTRY sObjectProvider;
  /* 0x0038 */ struct _CRYPT_TRUST_REG_ENTRY sSignatureProvider;
  /* 0x0050 */ struct _CRYPT_TRUST_REG_ENTRY sCertificateProvider;
  /* 0x0068 */ struct _CRYPT_TRUST_REG_ENTRY sCertificatePolicyProvider;
  /* 0x0080 */ struct _CRYPT_TRUST_REG_ENTRY sFinalPolicyProvider;
  /* 0x0098 */ struct _CRYPT_TRUST_REG_ENTRY sTestPolicyProvider;
  /* 0x00b0 */ struct _CRYPT_TRUST_REG_ENTRY sCleanupProvider;
} CRYPT_REGISTER_ACTIONID, *PCRYPT_REGISTER_ACTIONID; /* size: 0x00c8 */

class CNtfsStreamName
{
  /* 0x0000 */ unsigned __int64 _count;
  /* 0x0008 */ wchar_t _wsz[256];
}; /* size: 0x0208 */

typedef struct __midl_frag1513_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1513_t, *P_midl_frag1513_t; /* size: 0x0008 */

class CSharedMemHeader
{
  /* 0x0000 */ unsigned long _ulSize;
  /* 0x0004 */ unsigned long ulPad;
}; /* size: 0x0008 */

typedef struct __midl_frag884_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag884_t, *P_midl_frag884_t; /* size: 0x000c */

struct PPM_IDLESTATE_EVENT
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned long OldState;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

class CComRegCatalog
{
  /* 0x0000 */ long Padding_1207[2];
  /* 0x0008 */ unsigned long m_regType;
  /* 0x000c */ long m_cRef;
  /* 0x0010 */ struct HKEY__* m_hkeyClassesRoot;
}; /* size: 0x0018 */

typedef struct _FILE_DIRECTORY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ wchar_t FileName[1];
  /* 0x0042 */ char __PADDING__[6];
} FILE_DIRECTORY_INFORMATION, *PFILE_DIRECTORY_INFORMATION; /* size: 0x0048 */

struct CREATE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 MaximumSize;
  /* 0x0008 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0010 */

struct IActivationSecurityInfo
{
}; /* size: 0x0008 */

typedef struct __midl_frag163_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag163_t, *P_midl_frag163_t; /* size: 0x0048 */

typedef struct _SPC_IMAGE
{
  /* 0x0000 */ struct SPC_LINK_* pImageLink;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Bitmap;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Metafile;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB EnhancedMetafile;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB GifFile;
} SPC_IMAGE, *PSPC_IMAGE; /* size: 0x0048 */

typedef struct _CERT_REVOCATION_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRevocationResult;
  /* 0x0008 */ const char* pszRevocationOid;
  /* 0x0010 */ void* pvOidSpecificInfo;
  /* 0x0018 */ int fHasFreshnessTime;
  /* 0x001c */ unsigned long dwFreshnessTime;
  /* 0x0020 */ struct _CERT_REVOCATION_CRL_INFO* pCrlInfo;
} CERT_REVOCATION_INFO, *PCERT_REVOCATION_INFO; /* size: 0x0028 */

struct IRpcHelper
{
}; /* size: 0x0008 */

typedef struct __midl_frag801_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag801_t, *P_midl_frag801_t; /* size: 0x0010 */

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP
{
  /* 0x0000 */ unsigned long NodeProximityId;
  /* 0x0004 */ unsigned char NodeNumber;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_NUMA_PROXIMITY_MAP, *PSYSTEM_NUMA_PROXIMITY_MAP; /* size: 0x0008 */

typedef struct __midl_frag826_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag826_t, *P_midl_frag826_t; /* size: 0x0038 */

struct tagMSGBOXPARAMSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_1208;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const char* lpszText;
  /* 0x0020 */ const char* lpszCaption;
  /* 0x0028 */ unsigned long dwStyle;
  /* 0x002c */ long Padding_1209;
  /* 0x0030 */ const char* lpszIcon;
  /* 0x0038 */ unsigned __int64 dwContextHelpId;
  /* 0x0040 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0048 */ unsigned long dwLanguageId;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _CM_PCCARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char ErrorCode;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long BusData;
  /* 0x0008 */ unsigned long DeviceId;
  /* 0x000c */ unsigned long LegacyBaseAddress;
  /* 0x0010 */ unsigned char IRQMap[16];
} CM_PCCARD_DEVICE_DATA, *PCM_PCCARD_DEVICE_DATA; /* size: 0x0020 */

typedef struct __midl_frag1386_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1386_t, *P_midl_frag1386_t; /* size: 0x0038 */

struct tagEMRGLSRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _OPEN_PRINTER_PROPS_INFOA
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_1210;
  /* 0x0008 */ char* pszSheetName;
  /* 0x0010 */ unsigned int uSheetIndex;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ int bModal;
  /* 0x001c */ long __PADDING__[1];
} OPEN_PRINTER_PROPS_INFOA, *POPEN_PRINTER_PROPS_INFOA; /* size: 0x0020 */

struct tagLOCALESIGNATURE
{
  /* 0x0000 */ unsigned long lsUsb[4];
  /* 0x0010 */ unsigned long lsCsbDefault[2];
  /* 0x0018 */ unsigned long lsCsbSupported[2];
}; /* size: 0x0020 */

typedef struct __midl_frag1114_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1114_t, *P_midl_frag1114_t; /* size: 0x0048 */

typedef struct __midl_frag519_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag519_t, *P_midl_frag519_t; /* size: 0x0048 */

struct tagXAptCallback
{
  /* 0x0000 */ __int64 pfnCallback;
  /* 0x0008 */ __int64 pParam;
  /* 0x0010 */ __int64 pServerCtx;
  /* 0x0018 */ __int64 pUnk;
  /* 0x0020 */ struct _GUID iid;
  /* 0x0030 */ int iMethod;
  /* 0x0034 */ struct _GUID guidProcessSecret;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

typedef struct _APP_COMPAT_INFO
{
  /* 0x0000 */ unsigned long dwTotalSize;
  /* 0x0004 */ long Padding_1211;
  /* 0x0008 */ union _ULARGE_INTEGER CompatibilityFlags;
} APP_COMPAT_INFO, *PAPP_COMPAT_INFO; /* size: 0x0010 */

typedef struct _PROCESS_SESSION_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
} PROCESS_SESSION_INFORMATION, *PPROCESS_SESSION_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long FindAny;
  /* 0x0008 */ unsigned long FindLast;
  /* 0x000c */ unsigned long FindIdeal;
  /* 0x0010 */ unsigned long IdleAny;
  /* 0x0014 */ unsigned long IdleCurrent;
  /* 0x0018 */ unsigned long IdleLast;
  /* 0x001c */ unsigned long IdleIdeal;
  /* 0x0020 */ unsigned long PreemptAny;
  /* 0x0024 */ unsigned long PreemptCurrent;
  /* 0x0028 */ unsigned long PreemptLast;
  /* 0x002c */ unsigned long SwitchToIdle;
} SYSTEM_CONTEXT_SWITCH_INFORMATION, *PSYSTEM_CONTEXT_SWITCH_INFORMATION; /* size: 0x0030 */

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1212;
  /* 0x0008 */ struct _RTL_VERIFIER_DLL_DESCRIPTOR* ProviderDlls;
  /* 0x0010 */ void* ProviderDllLoadCallback /* function */;
  /* 0x0018 */ void* ProviderDllUnloadCallback /* function */;
  /* 0x0020 */ wchar_t* VerifierImage;
  /* 0x0028 */ unsigned long VerifierFlags;
  /* 0x002c */ unsigned long VerifierDebug;
  /* 0x0030 */ void* RtlpGetStackTraceAddress;
  /* 0x0038 */ void* RtlpDebugPageHeapCreate;
  /* 0x0040 */ void* RtlpDebugPageHeapDestroy;
  /* 0x0048 */ void* ProviderNtdllHeapFreeCallback /* function */;
} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR; /* size: 0x0050 */

typedef struct _SYSTEM_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfDisks;
  /* 0x0004 */ unsigned long NumberOfFloppies;
  /* 0x0008 */ unsigned long NumberOfCdRoms;
  /* 0x000c */ unsigned long NumberOfTapes;
  /* 0x0010 */ unsigned long NumberOfSerialPorts;
  /* 0x0014 */ unsigned long NumberOfParallelPorts;
} SYSTEM_DEVICE_INFORMATION, *PSYSTEM_DEVICE_INFORMATION; /* size: 0x0018 */

struct IRpcSyntaxNegotiate
{
}; /* size: 0x0008 */

struct tagBITMAPFILEHEADER
{
  /* 0x0000 */ unsigned short bfType;
  /* 0x0002 */ unsigned long bfSize;
  /* 0x0006 */ unsigned short bfReserved1;
  /* 0x0008 */ unsigned short bfReserved2;
  /* 0x000a */ unsigned long bfOffBits;
}; /* size: 0x000e */

typedef struct _ldiv_t
{
  /* 0x0000 */ long quot;
  /* 0x0004 */ long rem;
} ldiv_t, *Pldiv_t; /* size: 0x0008 */

typedef struct _NDR64_EXPR_CONST64
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Reserved;
  /* 0x0002 */ unsigned short Reserved1;
  /* 0x0004 */ long Padding_1213;
  /* 0x0008 */ __int64 ConstValue;
} NDR64_EXPR_CONST64, *PNDR64_EXPR_CONST64; /* size: 0x0010 */

typedef struct __midl_frag886_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag886_t, *P_midl_frag886_t; /* size: 0x0018 */

struct IComProcessInfo3
{
}; /* size: 0x0008 */

typedef struct _SERVICE_DESCRIPTIONW
{
  /* 0x0000 */ wchar_t* lpDescription;
} SERVICE_DESCRIPTIONW, *PSERVICE_DESCRIPTIONW; /* size: 0x0008 */

typedef struct _iobuf
{
  /* 0x0000 */ char* _ptr;
  /* 0x0008 */ int _cnt;
  /* 0x000c */ long Padding_1214;
  /* 0x0010 */ char* _base;
  /* 0x0018 */ int _flag;
  /* 0x001c */ int _file;
  /* 0x0020 */ int _charbuf;
  /* 0x0024 */ int _bufsiz;
  /* 0x0028 */ char* _tmpfname;
} iobuf, *Piobuf; /* size: 0x0030 */

class CDlElement
{
  /* 0x0000 */ class CBasedDlElementPtr _pdlePrev;
  /* 0x0008 */ class CBasedDlElementPtr _pdleNext;
}; /* size: 0x0010 */

typedef struct _tagHIT_LOGGING_INFO
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_1215;
  /* 0x0008 */ char* lpszLoggedUrlName;
  /* 0x0010 */ struct _SYSTEMTIME StartTime;
  /* 0x0020 */ struct _SYSTEMTIME EndTime;
  /* 0x0030 */ char* lpszExtendedInfo;
} tagHIT_LOGGING_INFO, *PtagHIT_LOGGING_INFO; /* size: 0x0038 */

typedef struct _CMC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ long Padding_1216;
  /* 0x0008 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0010 */ unsigned long cTaggedContentInfo;
  /* 0x0014 */ long Padding_1217;
  /* 0x0018 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0020 */ unsigned long cTaggedOtherMsg;
  /* 0x0024 */ long Padding_1218;
  /* 0x0028 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_RESPONSE_INFO, *PCMC_RESPONSE_INFO; /* size: 0x0030 */

struct IXMLDOMCDATASection
{
}; /* size: 0x0008 */

struct tagEMREXTFLOODFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlStart;
  /* 0x0010 */ unsigned long crColor;
  /* 0x0014 */ unsigned long iMode;
}; /* size: 0x0018 */

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _TEB_ACTIVE_FRAME_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME BasicFrame;
  /* 0x0018 */ void* ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX, *PTEB_ACTIVE_FRAME_EX; /* size: 0x0020 */

struct IMonikerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetClassID /* function */;
  /* 0x0020 */ void* IsDirty /* function */;
  /* 0x0028 */ void* Load /* function */;
  /* 0x0030 */ void* Save /* function */;
  /* 0x0038 */ void* GetSizeMax /* function */;
  /* 0x0040 */ void* BindToObject /* function */;
  /* 0x0048 */ void* BindToStorage /* function */;
  /* 0x0050 */ void* Reduce /* function */;
  /* 0x0058 */ void* ComposeWith /* function */;
  /* 0x0060 */ void* Enum /* function */;
  /* 0x0068 */ void* IsEqual /* function */;
  /* 0x0070 */ void* Hash /* function */;
  /* 0x0078 */ void* IsRunning /* function */;
  /* 0x0080 */ void* GetTimeOfLastChange /* function */;
  /* 0x0088 */ void* Inverse /* function */;
  /* 0x0090 */ void* CommonPrefixWith /* function */;
  /* 0x0098 */ void* RelativePathTo /* function */;
  /* 0x00a0 */ void* GetDisplayName /* function */;
  /* 0x00a8 */ void* ParseDisplayName /* function */;
  /* 0x00b0 */ void* IsSystemMoniker /* function */;
}; /* size: 0x00b8 */

struct tagContexts
{
  /* 0x0000 */ class CObjectContext* pClientCtx;
  /* 0x0008 */ class CObjectContext* pServerCtx;
}; /* size: 0x0010 */

typedef struct _CERT_POLICY95_QUALIFIER1
{
  /* 0x0000 */ wchar_t* pszPracticesReference;
  /* 0x0008 */ char* pszNoticeIdentifier;
  /* 0x0010 */ char* pszNSINoticeIdentifier;
  /* 0x0018 */ unsigned long cCPSURLs;
  /* 0x001c */ long Padding_1219;
  /* 0x0020 */ struct _CPS_URLS* rgCPSURLs;
} CERT_POLICY95_QUALIFIER1, *PCERT_POLICY95_QUALIFIER1; /* size: 0x0028 */

class CMutexSem
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0028 */

class CDebugChannelHook
{
}; /* size: 0x0008 */

struct XLOCK_LEAF
{
}; /* size: 0x0030 */

typedef struct __midl_frag339_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag339_t, *P_midl_frag339_t; /* size: 0x000c */

typedef struct _CMC_PEND_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PendToken;
  /* 0x0010 */ struct _FILETIME PendTime;
} CMC_PEND_INFO, *PCMC_PEND_INFO; /* size: 0x0018 */

typedef struct _tagStartParam
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ struct IBindCtx* pIBindCtx;
  /* 0x0018 */ struct IUnknown* pItf;
} tagStartParam, *PtagStartParam; /* size: 0x0020 */

typedef struct _QUERY_SERVICE_CONFIGA
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ long Padding_1220;
  /* 0x0010 */ char* lpBinaryPathName;
  /* 0x0018 */ char* lpLoadOrderGroup;
  /* 0x0020 */ unsigned long dwTagId;
  /* 0x0024 */ long Padding_1221;
  /* 0x0028 */ char* lpDependencies;
  /* 0x0030 */ char* lpServiceStartName;
  /* 0x0038 */ char* lpDisplayName;
} QUERY_SERVICE_CONFIGA, *PQUERY_SERVICE_CONFIGA; /* size: 0x0040 */

typedef struct _LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} LDT_ENTRY, *PLDT_ENTRY; /* size: 0x0008 */

typedef struct _ALPC_MESSAGE_ATTRIBUTES
{
  /* 0x0000 */ unsigned long AllocatedAttributes;
  /* 0x0004 */ unsigned long ValidAttributes;
} ALPC_MESSAGE_ATTRIBUTES, *PALPC_MESSAGE_ATTRIBUTES; /* size: 0x0008 */

typedef struct _PORT_DATA_INFORMATION
{
  /* 0x0000 */ unsigned long CountDataEntries;
  /* 0x0004 */ long Padding_1222;
  /* 0x0008 */ struct _PORT_DATA_ENTRY DataEntries[1];
} PORT_DATA_INFORMATION, *PPORT_DATA_INFORMATION; /* size: 0x0018 */

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
} CRYPT_KEY_VERIFY_MESSAGE_PARA, *PCRYPT_KEY_VERIFY_MESSAGE_PARA; /* size: 0x0010 */

struct IStandardActivator
{
}; /* size: 0x0008 */

class CProcessExtensionTbl
{
  /* 0x0000 */ class CExtHashTable _HashTbl;
  /* 0x0028 */ class CPageAllocator _palloc;
}; /* size: 0x00a8 */

class CDefClient
{
  /* 0x0000 */ enum CHK m_chk;
  /* 0x0004 */ long Padding_1223;
  /* 0x0008 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0030 */ enum tagSERVERCALLEX m_CallState;
  /* 0x0034 */ long Padding_1224;
  /* 0x0038 */ struct IUnknown* m_pUnkOuter;
  /* 0x0040 */ struct IOleObject* m_lpoleObj;
  /* 0x0048 */ struct IDataObject* m_lpdataObj;
  /* 0x0050 */ int m_bCreateInst;
  /* 0x0054 */ int m_bTerminate;
  /* 0x0058 */ int m_termNo;
  /* 0x005c */ unsigned short m_aItem;
  /* 0x005e */ char Padding_1225[2];
  /* 0x0060 */ void* m_hcli;
  /* 0x0068 */ class CDefClient* m_lpNextItem;
  /* 0x0070 */ int m_bContainer;
  /* 0x0074 */ int m_cRef;
  /* 0x0078 */ struct HWND__* m_hwnd;
  /* 0x0080 */ void* m_hdevInfo;
  /* 0x0088 */ void* m_hcliInfo;
  /* 0x0090 */ int m_fDidRealSetHostNames;
  /* 0x0094 */ int m_fDidSetClientSite;
  /* 0x0098 */ int m_fGotDdeAdvise;
  /* 0x009c */ int m_fCreatedNotConnected;
  /* 0x00a0 */ int m_fInOnClose;
  /* 0x00a4 */ int m_fInOleSave;
  /* 0x00a8 */ struct EXECUTEACK m_ExecuteAck;
  /* 0x00c8 */ unsigned long m_dwConnectionOleObj;
  /* 0x00cc */ unsigned long m_dwConnectionDataObj;
  /* 0x00d0 */ struct ILockBytes* m_plkbytNative;
  /* 0x00d8 */ struct IStorage* m_pstgNative;
  /* 0x00e0 */ int m_fRunningInSDI;
  /* 0x00e4 */ long Padding_1226;
  /* 0x00e8 */ class CDDEServer* m_psrvrParent;
  /* 0x00f0 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x00f8 */ int m_fGotStdCloseDoc;
  /* 0x00fc */ int m_fGotEditNoPokeNativeYet;
  /* 0x0100 */ int m_fLocked;
  /* 0x0104 */ int m_fCallData;
  /* 0x0108 */ int m_fEmbed;
  /* 0x010c */ int m_cClients;
  /* 0x0110 */ class CDefClient* m_pdoc;
  /* 0x0118 */ struct CDefClient::CUnknownImpl m_Unknown;
  /* 0x0128 */ struct CDefClient::COleClientSiteImpl m_OleClientSite;
  /* 0x0138 */ struct CDefClient::CAdviseSinkImpl m_AdviseSink;
}; /* size: 0x0148 */

typedef struct _customREMOTE_REQUEST_SCM_INFO
{
  /* 0x0000 */ unsigned long ClientImpLevel;
  /* 0x0004 */ unsigned short cRequestedProtseqs;
  /* 0x0006 */ char Padding_1227[2];
  /* 0x0008 */ unsigned short* pRequestedProtseqs;
} customREMOTE_REQUEST_SCM_INFO, *PcustomREMOTE_REQUEST_SCM_INFO; /* size: 0x0010 */

struct ISynchronizeHandle
{
}; /* size: 0x0008 */

struct PROCESSOR_IDLESTATE_POLICY
{
  /* 0x0000 */ unsigned short Revision;
  union
  {
    union
    {
      /* 0x0002 */ unsigned short AsUSHORT;
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short AllowScaling : 1; /* bit position: 0 */
        /* 0x0002 */ unsigned short Disabled : 1; /* bit position: 1 */
        /* 0x0002 */ unsigned short Reserved : 14; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Flags;
  /* 0x0004 */ unsigned long PolicyCount;
  /* 0x0008 */ struct PROCESSOR_IDLESTATE_INFO Policy[3];
}; /* size: 0x0020 */

typedef struct _BCRYPT_PROVIDER_NAME
{
  /* 0x0000 */ wchar_t* pszProviderName;
} BCRYPT_PROVIDER_NAME, *PBCRYPT_PROVIDER_NAME; /* size: 0x0008 */

struct pvalueW
{
  /* 0x0000 */ wchar_t* pv_valuename;
  /* 0x0008 */ int pv_valuelen;
  /* 0x000c */ long Padding_1228;
  /* 0x0010 */ void* pv_value_context;
  /* 0x0018 */ unsigned long pv_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct ISCMLocalActivator
{
}; /* size: 0x0008 */

typedef struct __midl_frag896_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag896_t, *P_midl_frag896_t; /* size: 0x0038 */

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Settable;
  /* 0x0008 */ unsigned short TagIndex;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long __PADDING__[1];
} HEAP_BLOCK_SETTABLE_INFORMATION, *PHEAP_BLOCK_SETTABLE_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_PIPE_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long ReadDataAvailable;
  /* 0x0008 */ unsigned long NumberOfMessages;
  /* 0x000c */ unsigned long MessageLength;
  /* 0x0010 */ char Data[1];
  /* 0x0011 */ char __PADDING__[3];
} FILE_PIPE_PEEK_BUFFER, *PFILE_PIPE_PEEK_BUFFER; /* size: 0x0014 */

typedef struct _custmact_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[999];
  /* 0x03e9 */ char __PADDING__[1];
} custmact_MIDL_TYPE_FORMAT_STRING, *Pcustmact_MIDL_TYPE_FORMAT_STRING; /* size: 0x03ea */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS
{
  /* 0x0000 */ unsigned long NullDeviceInstance;
  /* 0x0004 */ wchar_t DeviceInstanceStrings[1];
  /* 0x0006 */ char __PADDING__[2];
} PLUGPLAY_CONTROL_CONFLICT_STRINGS, *PPLUGPLAY_CONTROL_CONFLICT_STRINGS; /* size: 0x0008 */

typedef struct _OCSP_REQUEST_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0048 */ unsigned long cExtension;
  /* 0x004c */ long Padding_1229;
  /* 0x0050 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_ENTRY, *POCSP_REQUEST_ENTRY; /* size: 0x0058 */

struct tagStdReleaseData
{
  /* 0x0000 */ class CStdMarshal* pStdMshl;
  /* 0x0008 */ struct tagOBJREF* pObjRef;
}; /* size: 0x0010 */

typedef struct _MUTANT_OWNER_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
} MUTANT_OWNER_INFORMATION, *PMUTANT_OWNER_INFORMATION; /* size: 0x0010 */

struct PPM_WMI_PERF_STATES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_1230;
  /* 0x0028 */ unsigned __int64 TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

struct tagCONTROLINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_1231;
  /* 0x0008 */ struct HACCEL__* hAccel;
  /* 0x0010 */ unsigned short cAccel;
  /* 0x0012 */ char Padding_1232[2];
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

struct RPC_IF_ID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1233;
  /* 0x0008 */ struct _RPC_IF_ID* IfId[1];
}; /* size: 0x0010 */

struct ICatRegister
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_CALLBACK_OUTPUT
{
  union
  {
    /* 0x0000 */ unsigned long ModuleWriteFlags;
    /* 0x0000 */ unsigned long ThreadWriteFlags;
    /* 0x0000 */ unsigned long SecondaryFlags;
    struct
    {
      /* 0x0000 */ unsigned __int64 MemoryBase;
      /* 0x0008 */ unsigned long MemorySize;
    }; /* size: 0x000c */
    struct
    {
      /* 0x0000 */ int CheckCancel;
      /* 0x0004 */ int Cancel;
    }; /* size: 0x0008 */
    /* 0x0000 */ void* Handle;
    struct
    {
      /* 0x0000 */ struct _MINIDUMP_MEMORY_INFO VmRegion;
      /* 0x0030 */ int Continue;
    }; /* size: 0x0034 */
    struct
    {
      /* 0x0000 */ HRESULT Status;
      /* 0x0004 */ long __PADDING__[12];
    }; /* size: 0x0034 */
  }; /* size: 0x0034 */
} MINIDUMP_CALLBACK_OUTPUT, *PMINIDUMP_CALLBACK_OUTPUT; /* size: 0x0034 */

typedef struct _FILE_PREFETCH_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH_EX, *PFILE_PREFETCH_EX; /* size: 0x0018 */

struct STARTING_VCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingVcn;
}; /* size: 0x0008 */

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION
{
  /* 0x0000 */ unsigned long FileSystemAttributes;
  /* 0x0004 */ long MaximumComponentNameLength;
  /* 0x0008 */ unsigned long FileSystemNameLength;
  /* 0x000c */ wchar_t FileSystemName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_FS_ATTRIBUTE_INFORMATION, *PFILE_FS_ATTRIBUTE_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_PIPE_INFORMATION
{
  /* 0x0000 */ unsigned long ReadMode;
  /* 0x0004 */ unsigned long CompletionMode;
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION; /* size: 0x0008 */

typedef struct _MUICCHEADER
{
  /* 0x0000 */ unsigned int ulMaxStringsSize;
  /* 0x0004 */ unsigned int ulSizeStrings;
  /* 0x0008 */ unsigned int ulMaxNumInstalledCultures;
  /* 0x000c */ unsigned int ulNumInstalledCultures;
  /* 0x0010 */ unsigned int ulMaxNumUnverifiedCultures;
  /* 0x0014 */ unsigned int ulNumUnverifiedCultures;
} MUICCHEADER, *PMUICCHEADER; /* size: 0x0018 */

struct provider_info
{
  /* 0x0000 */ void* pi_R0_1val /* function */;
  /* 0x0008 */ void* pi_R0_allvals /* function */;
  /* 0x0010 */ void* pi_R3_1val /* function */;
  /* 0x0018 */ void* pi_R3_allvals /* function */;
  /* 0x0020 */ unsigned long pi_flags;
  /* 0x0024 */ long Padding_1234;
  /* 0x0028 */ void* pi_key_context;
}; /* size: 0x0030 */

typedef struct _CRYPT_OBJID_TABLE
{
  /* 0x0000 */ unsigned long dwAlgId;
  /* 0x0004 */ long Padding_1235;
  /* 0x0008 */ const char* pszObjId;
} CRYPT_OBJID_TABLE, *PCRYPT_OBJID_TABLE; /* size: 0x0010 */

struct SHELLHOOKINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct tagRECT rc;
}; /* size: 0x0018 */

typedef struct _CERT_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1236;
  /* 0x0008 */ struct _CTL_USAGE Usage;
} CERT_USAGE_MATCH, *PCERT_USAGE_MATCH; /* size: 0x0018 */

struct AsyncIAdviseSinkVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Begin_OnDataChange /* function */;
  /* 0x0020 */ void* Finish_OnDataChange /* function */;
  /* 0x0028 */ void* Begin_OnViewChange /* function */;
  /* 0x0030 */ void* Finish_OnViewChange /* function */;
  /* 0x0038 */ void* Begin_OnRename /* function */;
  /* 0x0040 */ void* Finish_OnRename /* function */;
  /* 0x0048 */ void* Begin_OnSave /* function */;
  /* 0x0050 */ void* Finish_OnSave /* function */;
  /* 0x0058 */ void* Begin_OnClose /* function */;
  /* 0x0060 */ void* Finish_OnClose /* function */;
}; /* size: 0x0068 */

struct IMallocVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Alloc /* function */;
  /* 0x0020 */ void* Realloc /* function */;
  /* 0x0028 */ void* Free /* function */;
  /* 0x0030 */ void* GetSize /* function */;
  /* 0x0038 */ void* DidAlloc /* function */;
  /* 0x0040 */ void* HeapMinimize /* function */;
}; /* size: 0x0048 */

typedef struct _SOURCEFILE
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ char* FileName;
} SOURCEFILE, *PSOURCEFILE; /* size: 0x0010 */

class CRpcThread
{
  /* 0x0000 */ void* _hWakeup;
  /* 0x0008 */ int _fDone;
  /* 0x000c */ long Padding_1237;
  /* 0x0010 */ void* _fn /* function */;
  /* 0x0018 */ void* _param;
  /* 0x0020 */ class CRpcThread* _pNext;
  /* 0x0028 */ unsigned long _dwThreadID;
  /* 0x002c */ long Padding_1238;
  /* 0x0030 */ struct HINSTANCE__* _hInstOle32;
}; /* size: 0x0038 */

struct IPerPropertyBrowsing
{
}; /* size: 0x0008 */

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CRYPT_ATTRIBUTE_TYPE_VALUE, *PCRYPT_ATTRIBUTE_TYPE_VALUE; /* size: 0x0018 */

typedef struct _SPC_INDIRECT_DATA_CONTENT
{
  /* 0x0000 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE Data;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Digest;
} SPC_INDIRECT_DATA_CONTENT, *PSPC_INDIRECT_DATA_CONTENT; /* size: 0x0040 */

typedef struct __midl_frag10_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_VAR frag4;
} _midl_frag10_t, *P_midl_frag10_t; /* size: 0x0018 */

struct MFT_ENUM_DATA
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
}; /* size: 0x0018 */

struct tagEMRGRADIENTFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nVer;
  /* 0x001c */ unsigned long nTri;
  /* 0x0020 */ unsigned long ulMode;
  /* 0x0024 */ struct _TRIVERTEX Ver[1];
}; /* size: 0x0034 */

struct DISPATCH_CLIENT_FRAME
{
  /* 0x0000 */ long Padding_1239[24];
  /* 0x0060 */ int m_fDoneProxyPrecheck;
  /* 0x0064 */ int m_fIsCopy;
  /* 0x0068 */ struct FRAME_RemoteInvoke m_remoteFrame;
  /* 0x00c8 */ struct tagDISPPARAMS m_dispParams;
  /* 0x00e0 */ struct tagVARIANT m_varResult;
  /* 0x00f8 */ struct tagEXCEPINFO m_excepInfo;
  /* 0x0138 */ unsigned int m_uArgErr;
  /* 0x013c */ unsigned int m_aVarRefIdx[16];
  /* 0x017c */ long Padding_1240;
  /* 0x0180 */ struct tagVARIANT m_aVarRef[16];
  /* 0x0300 */ struct tagVARIANT m_aVarArg[16];
  /* 0x0480 */ unsigned char* m_pBuffer;
}; /* size: 0x0488 */

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT
{
  union
  {
    /* 0x0000 */ unsigned long BufferLength;
    struct
    {
      /* 0x0000 */ unsigned char Buffer[1];
      /* 0x0001 */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} TXFS_READ_BACKUP_INFORMATION_OUT, *PTXFS_READ_BACKUP_INFORMATION_OUT; /* size: 0x0004 */

class CStaticWriteLock
{
  /* 0x0000 */ class CRWLock& _rwLock;
}; /* size: 0x0008 */

struct DISPATCH_INTERCEPTOR
{
}; /* size: 0x00d0 */

typedef struct _IMAGEHLP_MODULEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1241;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ wchar_t ModuleName[32];
  /* 0x0064 */ wchar_t ImageName[256];
  /* 0x0264 */ wchar_t LoadedImageName[256];
  /* 0x0464 */ wchar_t LoadedPdbName[256];
  /* 0x0664 */ unsigned long CVSig;
  /* 0x0668 */ wchar_t CVData[780];
  /* 0x0c80 */ unsigned long PdbSig;
  /* 0x0c84 */ struct _GUID PdbSig70;
  /* 0x0c94 */ unsigned long PdbAge;
  /* 0x0c98 */ int PdbUnmatched;
  /* 0x0c9c */ int DbgUnmatched;
  /* 0x0ca0 */ int LineNumbers;
  /* 0x0ca4 */ int GlobalSymbols;
  /* 0x0ca8 */ int TypeInfo;
  /* 0x0cac */ int SourceIndexed;
  /* 0x0cb0 */ int Publics;
  /* 0x0cb4 */ long __PADDING__[1];
} IMAGEHLP_MODULEW64, *PIMAGEHLP_MODULEW64; /* size: 0x0cb8 */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1242;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ char FileName[260];
  /* 0x011c */ unsigned char Reparse;
  /* 0x011d */ char Padding_1243[3];
  /* 0x0120 */ void* hFile;
  /* 0x0128 */ unsigned long Flags;
  /* 0x012c */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOAD64, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD64; /* size: 0x0130 */

class EventPoolEntry
{
  union
  {
    /* 0x0000 */ struct CRWLock::EventState _eventState;
    struct
    {
      /* 0x0000 */ volatile unsigned long _dwEventState;
      /* 0x0004 */ volatile int _bReaderSignaled;
      /* 0x0008 */ void* _hReaderEvent;
      /* 0x0010 */ struct _SLIST_ENTRY _listEntry;
      /* 0x0020 */ void* _hWriterEvent;
      /* 0x0028 */ volatile unsigned long _dwSpinningWriterID;
    }; /* size: 0x002c */
    /* 0x0000 */ union _SLIST_HEADER s_eventPool;
    /* 0x0000 */ union EventPoolEntry::InitState s_initState;
  }; /* size: 0x002c */
}; /* size: 0x0030 */

struct IEnumFORMATETC
{
}; /* size: 0x0008 */

typedef struct _SYSDBG_PHYSICAL
{
  /* 0x0000 */ union _LARGE_INTEGER Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_PHYSICAL, *PSYSDBG_PHYSICAL; /* size: 0x0018 */

typedef struct _MINIDUMP_HANDLE_DATA_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int NumberOfDescriptors;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_DATA_STREAM, *PMINIDUMP_HANDLE_DATA_STREAM; /* size: 0x0010 */

struct IUriContainer
{
}; /* size: 0x0008 */

class COleCache::CCacheUnkImpl
{
}; /* size: 0x0008 */

class COleCache::CAdviseSinkImpl
{
}; /* size: 0x0008 */

class COleCache
{
  /* 0x0000 */ long Padding_1244[16];
  /* 0x0040 */ class COleCache::CCacheUnkImpl m_UnkPrivate;
  /* 0x0048 */ class COleCache::CCacheDataImpl m_Data;
  /* 0x0050 */ class COleCache::CCacheViewImpl m_ViewObject;
  /* 0x0058 */ class COleCache::CAdviseSinkImpl m_AdviseSink;
  /* 0x0060 */ struct IUnknown* m_pUnkOuter;
  /* 0x0068 */ struct IStorage* m_pStg;
  /* 0x0070 */ struct _GUID m_clsid;
  /* 0x0080 */ unsigned short m_cfFormat;
  /* 0x0082 */ char Padding_1245[2];
  /* 0x0084 */ unsigned long m_ulFlags;
  /* 0x0088 */ class CArray<CCacheNode>* m_pCacheArray;
  /* 0x0090 */ struct IAdviseSink* m_pViewAdvSink;
  /* 0x0098 */ unsigned long m_advfView;
  /* 0x009c */ unsigned long m_aspectsView;
  /* 0x00a0 */ unsigned long m_dwFrozenAspects;
  /* 0x00a4 */ long Padding_1246;
  /* 0x00a8 */ struct IDataObject* m_pDataObject;
}; /* size: 0x00b0 */

typedef struct _CM_VIDEO_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long VideoClock;
} CM_VIDEO_DEVICE_DATA, *PCM_VIDEO_DEVICE_DATA; /* size: 0x0008 */

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ZeroPageCount;
  /* 0x0008 */ unsigned __int64 FreePageCount;
  /* 0x0010 */ unsigned __int64 ModifiedPageCount;
  /* 0x0018 */ unsigned __int64 ModifiedNoWritePageCount;
  /* 0x0020 */ unsigned __int64 BadPageCount;
  /* 0x0028 */ unsigned __int64 PageCountByPriority[8];
  /* 0x0068 */ unsigned __int64 RepurposedPagesByPriority[8];
} SYSTEM_MEMORY_LIST_INFORMATION, *PSYSTEM_MEMORY_LIST_INFORMATION; /* size: 0x00a8 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long UsnReason;
  /* 0x000c */ long Padding_1247;
  /* 0x0010 */ __int64 FileId;
  /* 0x0018 */ unsigned long Reserved1;
  /* 0x001c */ unsigned long Reserved2;
  /* 0x0020 */ __int64 Reserved3;
  /* 0x0028 */ wchar_t FileName[1];
  /* 0x002a */ char __PADDING__[6];
} TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY, *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY; /* size: 0x0030 */

struct _IMAGELIST;

class CThreadStack
{
  /* 0x0000 */ unsigned long m_dwCurrentPageSize;
  /* 0x0004 */ long Padding_1248;
  /* 0x0008 */ unsigned __int64 m_CurrentProcessDefaultStackCommit;
}; /* size: 0x0010 */

typedef struct _TIMER_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER RemainingTime;
  /* 0x0008 */ unsigned char TimerState;
  /* 0x0009 */ char __PADDING__[7];
} TIMER_BASIC_INFORMATION, *PTIMER_BASIC_INFORMATION; /* size: 0x0010 */

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

typedef struct __midl_frag1518_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1518_t, *P_midl_frag1518_t; /* size: 0x0028 */

typedef struct _WORKER_FACTORY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ union _LARGE_INTEGER RetryTimeout;
  /* 0x0010 */ union _LARGE_INTEGER IdleTimeout;
  /* 0x0018 */ unsigned char Paused;
  /* 0x0019 */ unsigned char TimerSet;
  /* 0x001a */ unsigned char QueuedToExWorker;
  /* 0x001b */ unsigned char MayCreate;
  /* 0x001c */ unsigned char CreateInProgress;
  /* 0x001d */ unsigned char InsertedIntoQueue;
  /* 0x001e */ unsigned char Shutdown;
  /* 0x001f */ char Padding_1249;
  /* 0x0020 */ unsigned long BindingCount;
  /* 0x0024 */ unsigned long ThreadMinimum;
  /* 0x0028 */ unsigned long ThreadMaximum;
  /* 0x002c */ unsigned long PendingWorkerCount;
  /* 0x0030 */ unsigned long WaitingWorkerCount;
  /* 0x0034 */ unsigned long TotalWorkerCount;
  /* 0x0038 */ unsigned long ReleaseCount;
  /* 0x003c */ long Padding_1250;
  /* 0x0040 */ __int64 InfiniteWaitGoal;
  /* 0x0048 */ void* StartRoutine /* function */;
  /* 0x0050 */ void* StartParameter;
  /* 0x0058 */ void* ProcessId;
  /* 0x0060 */ unsigned __int64 StackReserve;
  /* 0x0068 */ unsigned __int64 StackCommit;
  /* 0x0070 */ long LastThreadCreationStatus;
  /* 0x0074 */ long __PADDING__[1];
} WORKER_FACTORY_BASIC_INFORMATION, *PWORKER_FACTORY_BASIC_INFORMATION; /* size: 0x0078 */

struct PPM_SIMULATED_PROCESSOR_LOAD
{
  /* 0x0000 */ unsigned char Enabled;
  /* 0x0001 */ unsigned char PercentBusy[64];
}; /* size: 0x0041 */

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long PropertyType;
  /* 0x0014 */ long Padding_1251;
  /* 0x0018 */ void* Buffer;
  /* 0x0020 */ unsigned long BufferSize;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_PROPERTY_DATA, *PPLUGPLAY_CONTROL_PROPERTY_DATA; /* size: 0x0028 */

class CComCatalog
{
  /* 0x0000 */ long Padding_1252[12];
  /* 0x0030 */ long m_cRef;
  /* 0x0034 */ long Padding_1253;
  /* 0x0038 */ struct IComCatalogInternal* m_pCatalogRegNative;
  /* 0x0040 */ struct IComCatalogInternal* m_pCatalogCOMBaseInCLB;
  /* 0x0048 */ struct IComCatalogInternal* m_pCatalogRegNonNative;
  /* 0x0050 */ struct IComCatalogInternal* m_pCatalogCLB;
  /* 0x0058 */ struct IComCatalogInternal* m_pCatalogSxS;
  union
  {
    /* 0x0000 */ int ms_fComPlusEnabled;
    /* 0x0000 */ int ms_fComPlusEnabledInitialized;
    /* 0x0000 */ int ms_fComPlusCatalogsResolved;
    /* 0x0000 */ int ms_fInitialized;
  }; /* size: 0x0004 */
}; /* size: 0x0060 */

struct tm
{
  /* 0x0000 */ int tm_sec;
  /* 0x0004 */ int tm_min;
  /* 0x0008 */ int tm_hour;
  /* 0x000c */ int tm_mday;
  /* 0x0010 */ int tm_mon;
  /* 0x0014 */ int tm_year;
  /* 0x0018 */ int tm_wday;
  /* 0x001c */ int tm_yday;
  /* 0x0020 */ int tm_isdst;
}; /* size: 0x0024 */

typedef struct _PSFEATURE_CUSTPAPER
{
  /* 0x0000 */ long lOrientation;
  /* 0x0004 */ long lWidth;
  /* 0x0008 */ long lHeight;
  /* 0x000c */ long lWidthOffset;
  /* 0x0010 */ long lHeightOffset;
} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER; /* size: 0x0014 */

struct tagEMRFORMAT
{
  /* 0x0000 */ unsigned long dSignature;
  /* 0x0004 */ unsigned long nVersion;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned long offData;
}; /* size: 0x0010 */

struct HFONT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagLOGBRUSH
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned __int64 lbHatch;
}; /* size: 0x0010 */

struct tagOIFI
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fMDIApp;
  /* 0x0008 */ struct HWND__* hwndFrame;
  /* 0x0010 */ struct HACCEL__* haccel;
  /* 0x0018 */ unsigned int cAccelEntries;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct __midl_frag367_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag367_t, *P_midl_frag367_t; /* size: 0x0028 */

struct tagORPCTHAT
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ long Padding_1254;
  /* 0x0008 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0010 */

typedef struct _UNIVERSAL_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
} UNIVERSAL_NAME_INFOA, *PUNIVERSAL_NAME_INFOA; /* size: 0x0008 */

struct tagEMRSETMAPPERFLAGS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

class CRpcResolver
{
  union
  {
    struct
    {
      /* 0x0000 */ class CFastBH* _fbhILocalObjectExporter;
      /* 0x0008 */ class CFastBH* _fbhIROT;
      /* 0x0010 */ class CFastBH* _fbhISCM;
      /* 0x0018 */ class CFastBH* _fbhIMachineActivatorControl;
    }; /* size: 0x0020 */
    /* 0x0000 */ void* _ph;
    /* 0x0000 */ unsigned long _dwFlags;
    /* 0x0000 */ class CDualStringArray* _pdsaLocalResolver;
    /* 0x0000 */ unsigned __int64 _dwCurrentBindingsID;
    /* 0x0000 */ struct _GUID _GuidRPCSSProcessIdentifier;
    /* 0x0000 */ class CMachineNamesHelper* _pMNHelper;
    /* 0x0000 */ unsigned long _cReservedOidsAvail;
    /* 0x0000 */ unsigned __int64 _OidsReserved[10];
    /* 0x0000 */ struct ISCMLocalActivator* _pSCMProxy;
    /* 0x0000 */ struct ISCMLocalActivator* _pCloakedSCMProxy;
    /* 0x0000 */ wchar_t* _pwszWinstaDesktop;
    /* 0x0000 */ wchar_t* _pwszFQDN;
    /* 0x0000 */ unsigned __int64 _ProcessSignature;
    /* 0x0000 */ void* _pNoRegLaunchPermissionsSD;
    /* 0x0000 */ void* _pNoRegAccessPermissionsSD;
    /* 0x0000 */ void* _pNoRegLaunchRestrictionsSD;
    /* 0x0000 */ void* _pNoRegAccessRestrictionsSD;
    /* 0x0000 */ void* _pDefaultAccessRestrictionsSD;
    /* 0x0000 */ void* _pSelfSid;
    /* 0x0000 */ class COleStaticMutexSem _mxsResolver;
    /* 0x0000 */ void* _hResolverWaitEvent;
  }; /* size: 0x0050 */
}; /* size: 0x0020 */

struct tagCBT_CREATEWNDA
{
  /* 0x0000 */ struct tagCREATESTRUCTA* lpcs;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0010 */

typedef struct _FILEMUIINFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwFileType;
  /* 0x000c */ unsigned char pChecksum[16];
  /* 0x001c */ unsigned char pServiceChecksum[16];
  /* 0x002c */ unsigned long dwLanguageNameOffset;
  /* 0x0030 */ unsigned long dwTypeIDMainSize;
  /* 0x0034 */ unsigned long dwTypeIDMainOffset;
  /* 0x0038 */ unsigned long dwTypeNameMainOffset;
  /* 0x003c */ unsigned long dwTypeIDMUISize;
  /* 0x0040 */ unsigned long dwTypeIDMUIOffset;
  /* 0x0044 */ unsigned long dwTypeNameMUIOffset;
  /* 0x0048 */ unsigned char abBuffer[8];
} FILEMUIINFO, *PFILEMUIINFO; /* size: 0x0050 */

typedef struct _srgtprot_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[47];
  /* 0x0031 */ char __PADDING__[1];
} srgtprot_MIDL_TYPE_FORMAT_STRING, *Psrgtprot_MIDL_TYPE_FORMAT_STRING; /* size: 0x0032 */

class CPipeProxyImp
{
  /* 0x0000 */ long Padding_1255[2];
  /* 0x0008 */ long m_cRef;
  /* 0x000c */ long Padding_1256;
  /* 0x0010 */ struct IUnknown* m_pUnkOuter;
  /* 0x0018 */ struct IUnknown* m_pRealPipeProxy;
  /* 0x0020 */ struct IUnknown* m_pInternalPipeProxy;
  /* 0x0028 */ struct IRpcProxyBuffer* m_pInternalPB;
  /* 0x0030 */ struct _GUID m_IidOfPipe;
}; /* size: 0x0040 */

class CMapStringToPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

typedef struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_1257[3];
  /* 0x0008 */ unsigned long FaultProbability[16];
  /* 0x0048 */ unsigned long FaultBreak[16];
  /* 0x0088 */ unsigned long TargetMaximumIndex;
  /* 0x008c */ long Padding_1258;
  /* 0x0090 */ unsigned __int64 FaultTargetStart[128];
  /* 0x0490 */ unsigned __int64 FaultTargetEnd[128];
  /* 0x0890 */ unsigned long ExclusionMaximumIndex;
  /* 0x0894 */ long Padding_1259;
  /* 0x0898 */ unsigned __int64 FaultExclusionStart[128];
  /* 0x0c98 */ unsigned __int64 FaultExclusionEnd[128];
} RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION, *PRTL_VERIFIER_FAULT_INJECTIONS_INFORMATION; /* size: 0x1098 */

struct LockingStack<DISPATCH_SERVER_FRAME>
{
  /* 0x0000 */ long Padding_1260[2];
  /* 0x0008 */ struct DISPATCH_SERVER_FRAME* m_p;
  /* 0x0010 */ class XLOCK m_lock;
}; /* size: 0x0040 */

typedef struct _FILE_DISPOSITION_INFORMATION
{
  /* 0x0000 */ unsigned char DeleteFile;
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; /* size: 0x0001 */

struct CMachineNamesHelper::_SBTOTAL
{
  /* 0x0000 */ unsigned long dwcTotalAddrs;
  /* 0x0004 */ long Padding_1261;
  /* 0x0008 */ wchar_t** ppszAddresses;
}; /* size: 0x0010 */

typedef struct _NDR64_FIX_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int TotalSize;
} NDR64_FIX_ARRAY_HEADER_FORMAT, *PNDR64_FIX_ARRAY_HEADER_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag194_t
{
  /* 0x0000 */ struct _NDR64_FIX_ARRAY_HEADER_FORMAT frag1;
} _midl_frag194_t, *P_midl_frag194_t; /* size: 0x0008 */

struct tagDRAWITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemAction;
  /* 0x0010 */ unsigned int itemState;
  /* 0x0014 */ long Padding_1262;
  /* 0x0018 */ struct HWND__* hwndItem;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ struct tagRECT rcItem;
  /* 0x0038 */ unsigned __int64 itemData;
}; /* size: 0x0040 */

class CStdWrapper
{
  /* 0x0000 */ long Padding_1263[2];
  /* 0x0008 */ unsigned long _dwState;
  /* 0x000c */ unsigned long _cRefs;
  /* 0x0010 */ unsigned long _cCalls;
  /* 0x0014 */ unsigned long _cIFaces;
  /* 0x0018 */ class IFaceEntry* _pIFaceHead;
  /* 0x0020 */ class CtxEntry* _pCtxEntryHead;
  /* 0x0028 */ class CtxEntry* _pCtxFreeList;
  /* 0x0030 */ struct IUnknown* _pServer;
  /* 0x0038 */ class CIDObject* _pID;
  /* 0x0040 */ void* _pVtableAddress;
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ unsigned long s_cObjects;
    /* 0x0000 */ int s_fInitialized;
  }; /* size: 0x0080 */
}; /* size: 0x0048 */

struct tagGCP_RESULTSW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1264;
  /* 0x0008 */ wchar_t* lpOutString;
  /* 0x0010 */ unsigned int* lpOrder;
  /* 0x0018 */ int* lpDx;
  /* 0x0020 */ int* lpCaretPos;
  /* 0x0028 */ char* lpClass;
  /* 0x0030 */ wchar_t* lpGlyphs;
  /* 0x0038 */ unsigned int nGlyphs;
  /* 0x003c */ int nMaxFit;
}; /* size: 0x0040 */

class CRpcCall
{
  /* 0x0000 */ long Padding_1265[6];
  /* 0x0018 */ unsigned long _cRefs;
  /* 0x001c */ long Padding_1266;
  /* 0x0020 */ struct IUnknown*& _pIdentity;
  /* 0x0028 */ struct tagRPCOLEMESSAGE* _pMessage;
  /* 0x0030 */ const struct _GUID& _riid;
  /* 0x0038 */ HRESULT& _hrRet;
  /* 0x0040 */ enum _CALLSOURCE _callSource;
  /* 0x0044 */ HRESULT _ServerHR;
}; /* size: 0x0048 */

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION
{
  /* 0x0000 */ enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
} SYSTEM_CRASH_DUMP_STATE_INFORMATION, *PSYSTEM_CRASH_DUMP_STATE_INFORMATION; /* size: 0x0004 */

struct tagACL_DESCRIPTOR
{
  /* 0x0000 */ void* pACLBuffer;
  /* 0x0008 */ unsigned long ulACLBufferSize;
  /* 0x000c */ unsigned long ulSIDSize;
  /* 0x0010 */ int bDirtyACL;
  /* 0x0014 */ long Padding_1267;
  /* 0x0018 */ struct _SECURITY_DESCRIPTOR SecDesc;
}; /* size: 0x0040 */

typedef struct _QUOTA_LIMITS_EX
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
  /* 0x0030 */ unsigned __int64 WorkingSetLimit;
  /* 0x0038 */ unsigned __int64 Reserved2;
  /* 0x0040 */ unsigned __int64 Reserved3;
  /* 0x0048 */ unsigned __int64 Reserved4;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ union _RATE_QUOTA_LIMIT CpuRateLimit;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX; /* size: 0x0058 */

typedef struct _CM_KEYBOARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char Subtype;
  /* 0x0006 */ unsigned short KeyboardFlags;
} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA; /* size: 0x0008 */

struct ReportedExceptions
{
  /* 0x0000 */ unsigned long dwExceptionCode;
  /* 0x0004 */ unsigned long dwReportCount;
  /* 0x0008 */ unsigned long dwMaxCount;
}; /* size: 0x000c */

class CRefMutexAutoLock
{
  /* 0x0000 */ class CRefMutexSem* m_pmxs;
}; /* size: 0x0008 */

struct IPipeByte
{
}; /* size: 0x0008 */

typedef struct __midl_frag282_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag282_t, *P_midl_frag282_t; /* size: 0x0040 */

typedef struct __midl_frag5_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag5_t, *P_midl_frag5_t; /* size: 0x0020 */

typedef struct _CM_SONIC_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short DataConfigurationRegister;
  /* 0x0006 */ unsigned char EthernetAddress[8];
} CM_SONIC_DEVICE_DATA, *PCM_SONIC_DEVICE_DATA; /* size: 0x000e */

class CEnumSTATPROPSTG
{
  /* 0x0000 */ long Padding_1268[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ class CStatArray* _psa;
  /* 0x0018 */ unsigned long _ipropNext;
}; /* size: 0x0020 */

struct NTFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0008 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0010 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0018 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0020 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0028 */ unsigned long BytesPerSector;
  /* 0x002c */ unsigned long BytesPerCluster;
  /* 0x0030 */ unsigned long BytesPerFileRecordSegment;
  /* 0x0034 */ unsigned long ClustersPerFileRecordSegment;
  /* 0x0038 */ union _LARGE_INTEGER MftValidDataLength;
  /* 0x0040 */ union _LARGE_INTEGER MftStartLcn;
  /* 0x0048 */ union _LARGE_INTEGER Mft2StartLcn;
  /* 0x0050 */ union _LARGE_INTEGER MftZoneStart;
  /* 0x0058 */ union _LARGE_INTEGER MftZoneEnd;
}; /* size: 0x0060 */

struct POWER_STATE_HANDLER
{
  /* 0x0000 */ enum POWER_STATE_HANDLER_TYPE Type;
  /* 0x0004 */ unsigned char RtcWake;
  /* 0x0005 */ unsigned char Spare[3];
  /* 0x0008 */ void* Handler /* function */;
  /* 0x0010 */ void* Context;
}; /* size: 0x0018 */

struct IRpcChannelBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetBuffer /* function */;
  /* 0x0020 */ void* SendReceive /* function */;
  /* 0x0028 */ void* FreeBuffer /* function */;
  /* 0x0030 */ void* GetDestCtx /* function */;
  /* 0x0038 */ void* IsConnected /* function */;
}; /* size: 0x0040 */

typedef struct _LDBL12
{
  /* 0x0000 */ unsigned char ld12[12];
} LDBL12, *PLDBL12; /* size: 0x000c */

typedef struct __midl_frag1512_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1512_t, *P_midl_frag1512_t; /* size: 0x0038 */

class SerializedPropertyReader
{
  /* 0x0000 */ const unsigned char* m_pbPos;
  /* 0x0008 */ unsigned long m_cbRead;
  /* 0x000c */ unsigned long m_cbRemain;
}; /* size: 0x0010 */

typedef struct _LDR_VERIFY_IMAGE_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
  /* 0x0018 */ struct _LDR_SECTION_INFO SectionInfo;
  /* 0x0038 */ unsigned short ImageCharacteristics;
  /* 0x003a */ char __PADDING__[6];
} LDR_VERIFY_IMAGE_INFO, *PLDR_VERIFY_IMAGE_INFO; /* size: 0x0040 */

typedef struct _REMOTE_REPLY_SCM_INFO
{
  /* 0x0000 */ unsigned __int64 Oxid;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pdsaOxidBindings;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long authnHint;
  /* 0x0024 */ struct tagCOMVERSION serverVersion;
} REMOTE_REPLY_SCM_INFO, *PREMOTE_REPLY_SCM_INFO; /* size: 0x0028 */

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long ConcurrencyCount;
  /* 0x0010 */ unsigned long AttributeFlags;
  /* 0x0014 */ long __PADDING__[1];
} ALPC_PORT_COMPLETION_LIST_INFORMATION, *PALPC_PORT_COMPLETION_LIST_INFORMATION; /* size: 0x0018 */

struct tagSSID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
}; /* size: 0x0006 */

struct tagINTERFACEINFO
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0008 */ struct _GUID iid;
  /* 0x0018 */ unsigned short wMethod;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

typedef struct __s_GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} _s_GUID, *P_s_GUID; /* size: 0x0010 */

struct _DSA;

typedef class _bstr_t
{
  /* 0x0000 */ class _bstr_t::Data_t* m_Data;
} bstr_t, *Pbstr_t; /* size: 0x0008 */

class XIPersistFile
{
  /* 0x0000 */ struct IPersistFile* _p;
}; /* size: 0x0008 */

typedef struct _NAPDATA
{
  /* 0x0000 */ unsigned long NapLock;
  /* 0x0004 */ unsigned long Calls;
  /* 0x0008 */ unsigned long TimingErrors;
  /* 0x000c */ long Padding_1269;
  /* 0x0010 */ union _LARGE_INTEGER TotalTime;
  /* 0x0018 */ union _LARGE_INTEGER FirstTime;
  /* 0x0020 */ union _LARGE_INTEGER MaxTime;
  /* 0x0028 */ union _LARGE_INTEGER MinTime;
} NAPDATA, *PNAPDATA; /* size: 0x0030 */

class CProcessSecret
{
  union
  {
    /* 0x0000 */ struct _GUID s_guidOle32Secret;
    /* 0x0000 */ int s_fSecretInit;
    /* 0x0000 */ class COleStaticMutexSem s_SecretLock;
  }; /* size: 0x0050 */
}; /* size: 0x0001 */

struct tagRemSNB
{
  /* 0x0000 */ unsigned long ulCntStr;
  /* 0x0004 */ unsigned long ulCntChar;
  /* 0x0008 */ wchar_t rgString[1];
  /* 0x000a */ char __PADDING__[2];
}; /* size: 0x000c */

class CRefStabilize
{
  /* 0x0000 */ class CRefExportCount* m_pRefExportCount;
}; /* size: 0x0008 */

typedef struct __midl_frag181_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag181_t, *P_midl_frag181_t; /* size: 0x0010 */

struct FILE_ID_DESCRIPTOR
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ enum _FILE_ID_TYPE Type;
  union
  {
    /* 0x0008 */ union _LARGE_INTEGER FileId;
    /* 0x0008 */ struct _GUID ObjectId;
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

struct tagNC_ADDRESS
{
  /* 0x0000 */ struct NET_ADDRESS_INFO_* pAddrInfo;
  /* 0x0008 */ unsigned short PortNumber;
  /* 0x000a */ unsigned char PrefixLength;
  /* 0x000b */ char __PADDING__[5];
}; /* size: 0x0010 */

typedef struct _PRIV_SCM_INFO
{
  /* 0x0000 */ long lThreadID;
  /* 0x0004 */ long Padding_1270;
  /* 0x0008 */ wchar_t* pwszWinstaDesktop;
  /* 0x0010 */ unsigned __int64 ProcessSignature;
  /* 0x0018 */ wchar_t* pEnvBlock;
  /* 0x0020 */ unsigned long EnvBlockLength;
  /* 0x0024 */ long __PADDING__[1];
} PRIV_SCM_INFO, *PPRIV_SCM_INFO; /* size: 0x0028 */

struct IStorageVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateStream /* function */;
  /* 0x0020 */ void* OpenStream /* function */;
  /* 0x0028 */ void* CreateStorage /* function */;
  /* 0x0030 */ void* OpenStorage /* function */;
  /* 0x0038 */ void* CopyTo /* function */;
  /* 0x0040 */ void* MoveElementTo /* function */;
  /* 0x0048 */ void* Commit /* function */;
  /* 0x0050 */ void* Revert /* function */;
  /* 0x0058 */ void* EnumElements /* function */;
  /* 0x0060 */ void* DestroyElement /* function */;
  /* 0x0068 */ void* RenameElement /* function */;
  /* 0x0070 */ void* SetElementTimes /* function */;
  /* 0x0078 */ void* SetClass /* function */;
  /* 0x0080 */ void* SetStateBits /* function */;
  /* 0x0088 */ void* Stat /* function */;
}; /* size: 0x0090 */

class CHwnd
{
  /* 0x0000 */ struct HWND__* m_hwnd;
}; /* size: 0x0008 */

struct ICallIndirect
{
}; /* size: 0x0008 */

typedef struct __midl_frag4_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag4_t, *P_midl_frag4_t; /* size: 0x0010 */

typedef struct _IMAGE_RESOURCE_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned short NumberOfNamedEntries;
  /* 0x000e */ unsigned short NumberOfIdEntries;
} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY; /* size: 0x0010 */

typedef struct _SYSDBG_TRIAGE_DUMP
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned __int64 BugCheckParam1;
  /* 0x0010 */ unsigned __int64 BugCheckParam2;
  /* 0x0018 */ unsigned __int64 BugCheckParam3;
  /* 0x0020 */ unsigned __int64 BugCheckParam4;
  /* 0x0028 */ unsigned long ProcessHandles;
  /* 0x002c */ unsigned long ThreadHandles;
  /* 0x0030 */ void** Handles;
} SYSDBG_TRIAGE_DUMP, *PSYSDBG_TRIAGE_DUMP; /* size: 0x0038 */

class CClassCache::CDllAptEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CDllAptEntry* _pNext;
      /* 0x0008 */ class CClassCache::CDllAptEntry* _pPrev;
      /* 0x0010 */ unsigned long _dwSig;
      /* 0x0014 */ unsigned long _hApt;
      /* 0x0018 */ struct HINSTANCE__* _hDll;
    }; /* size: 0x0020 */
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0080 */
}; /* size: 0x0020 */

typedef struct __midl_frag122_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag122_t, *P_midl_frag122_t; /* size: 0x0038 */

typedef struct _HOSTNAMES
{
  /* 0x0000 */ unsigned short clientNameOffset;
  /* 0x0002 */ unsigned short documentNameOffset;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} HOSTNAMES, *PHOSTNAMES; /* size: 0x0006 */

typedef struct _METADC
{
  /* 0x0000 */ int xMwo;
  /* 0x0004 */ int yMwo;
  /* 0x0008 */ int xMwe;
  /* 0x000c */ int yMwe;
  /* 0x0010 */ int xre;
  /* 0x0014 */ int yre;
  /* 0x0018 */ struct _METADC* pNext;
} METADC, *PMETADC; /* size: 0x0020 */

typedef struct _METAINFO
{
  /* 0x0000 */ struct _METADC headDc;
  /* 0x0020 */ int xwo;
  /* 0x0024 */ int ywo;
  /* 0x0028 */ int xwe;
  /* 0x002c */ int ywe;
  /* 0x0030 */ int xro;
  /* 0x0034 */ int yro;
} METAINFO, *PMETAINFO; /* size: 0x0038 */

struct SIP_INDIRECT_DATA_;

typedef struct __midl_frag288_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag288_t, *P_midl_frag288_t; /* size: 0x000c */

typedef struct __midl_frag1071_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1071_t, *P_midl_frag1071_t; /* size: 0x0010 */

typedef struct _IMAGEHLP_LINEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1271;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned long LineNumber;
  /* 0x0014 */ long Padding_1272;
  /* 0x0018 */ wchar_t* FileName;
  /* 0x0020 */ unsigned __int64 Address;
} IMAGEHLP_LINEW64, *PIMAGEHLP_LINEW64; /* size: 0x0028 */

struct tagOLEVERB
{
  /* 0x0000 */ long lVerb;
  /* 0x0004 */ long Padding_1273;
  /* 0x0008 */ unsigned short* lpszVerbName;
  /* 0x0010 */ unsigned long fuFlags;
  /* 0x0014 */ unsigned long grfAttribs;
}; /* size: 0x0018 */

typedef struct _MINIDUMP_USER_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long UserStreamCount;
  /* 0x0004 */ struct _MINIDUMP_USER_STREAM* UserStreamArray;
} MINIDUMP_USER_STREAM_INFORMATION, *PMINIDUMP_USER_STREAM_INFORMATION; /* size: 0x000c */

typedef struct _REMOTE_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
  /* 0x0008 */ char* lpConnectionName;
  /* 0x0010 */ char* lpRemainingPath;
} REMOTE_NAME_INFOA, *PREMOTE_NAME_INFOA; /* size: 0x0018 */

struct ICacheRefresh
{
}; /* size: 0x0008 */

typedef struct __midl_frag38_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ unsigned char frag4;
    /* 0x0029 */ char __PADDING__[7];
  } /* size: 0x0028 */ frag2;
} _midl_frag38_t, *P_midl_frag38_t; /* size: 0x0030 */

class HashInt
{
}; /* size: 0x0001 */

class CPointerHashTable
{
}; /* size: 0x0028 */

struct FMTCACHE
{
  /* 0x0000 */ struct tagFORMATETC fmt;
  /* 0x0020 */ unsigned long dwAspects;
  /* 0x0024 */ int fUseMe;
}; /* size: 0x0028 */

typedef struct _SECURITY_ADVANCED_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char Padding_1274[6];
  /* 0x0010 */ struct _SECURITY_TOKEN_PROXY_DATA* ProxyData;
  /* 0x0018 */ struct _SECURITY_TOKEN_AUDIT_DATA* AuditData;
} SECURITY_ADVANCED_QUALITY_OF_SERVICE, *PSECURITY_ADVANCED_QUALITY_OF_SERVICE; /* size: 0x0020 */

typedef struct __midl_frag46_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag8;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag10;
  } /* size: 0x0050 */ frag2;
} _midl_frag46_t, *P_midl_frag46_t; /* size: 0x0070 */

typedef struct _CRYPT_PROVIDER_DEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gActionID;
  /* 0x0014 */ long Padding_1275;
  /* 0x0018 */ void* pDefPolicyCallbackData;
  /* 0x0020 */ void* pDefSIPClientData;
} CRYPT_PROVIDER_DEFUSAGE, *PCRYPT_PROVIDER_DEFUSAGE; /* size: 0x0028 */

typedef struct _TOKEN_ACCESS_INFORMATION
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES_HASH* SidHash;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES_HASH* RestrictedSidHash;
  /* 0x0010 */ struct _TOKEN_PRIVILEGES* Privileges;
  /* 0x0018 */ struct _LUID AuthenticationId;
  /* 0x0020 */ enum _TOKEN_TYPE TokenType;
  /* 0x0024 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0028 */ struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
  /* 0x002c */ unsigned long Flags;
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION; /* size: 0x0030 */

struct FMT
{
  /* 0x0000 */ unsigned short cf;
  /* 0x0002 */ char Padding_1276[2];
  /* 0x0004 */ unsigned long dw;
}; /* size: 0x0008 */

typedef struct _COMPRESSED_DATA_INFO
{
  /* 0x0000 */ unsigned short CompressionFormatAndEngine;
  /* 0x0002 */ unsigned char CompressionUnitShift;
  /* 0x0003 */ unsigned char ChunkShift;
  /* 0x0004 */ unsigned char ClusterShift;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ unsigned short NumberOfChunks;
  /* 0x0008 */ unsigned long CompressedChunkSizes[1];
} COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO; /* size: 0x000c */

typedef struct _EISA_PORT_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_PORT_DESCRIPTOR Configuration;
  /* 0x0001 */ unsigned short PortAddress;
} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION; /* size: 0x0003 */

typedef struct _CM_EISA_FUNCTION_INFORMATION
{
  /* 0x0000 */ unsigned long CompressedId;
  /* 0x0004 */ unsigned char IdSlotFlags1;
  /* 0x0005 */ unsigned char IdSlotFlags2;
  /* 0x0006 */ unsigned char MinorRevision;
  /* 0x0007 */ unsigned char MajorRevision;
  /* 0x0008 */ unsigned char Selections[26];
  /* 0x0022 */ unsigned char FunctionFlags;
  /* 0x0023 */ unsigned char TypeString[80];
  /* 0x0073 */ struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
  /* 0x00b2 */ struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
  /* 0x00c0 */ struct _EISA_DMA_CONFIGURATION EisaDma[4];
  /* 0x00c8 */ struct _EISA_PORT_CONFIGURATION EisaPort[20];
  /* 0x0104 */ unsigned char InitializationData[60];
} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION; /* size: 0x0140 */

typedef struct __midl_frag1444_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1444_t, *P_midl_frag1444_t; /* size: 0x000c */

union CRWLock::GetPoolEntry::__l2::EventStatePoolEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ volatile unsigned long dwEventState;
      /* 0x0004 */ volatile unsigned long dwHighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ class EventPoolEntry* volatile pPoolEntry;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _SPC_PE_IMAGE_DATA
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB Flags;
  /* 0x0018 */ struct SPC_LINK_* pFile;
} SPC_PE_IMAGE_DATA, *PSPC_PE_IMAGE_DATA; /* size: 0x0020 */

typedef struct _MINIDUMP_MEMORY_LIST
{
  /* 0x0000 */ unsigned int NumberOfMemoryRanges;
  /* 0x0004 */ struct _MINIDUMP_MEMORY_DESCRIPTOR* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY_LIST, *PMINIDUMP_MEMORY_LIST; /* size: 0x0004 */

typedef struct __midl_frag348_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag348_t, *P_midl_frag348_t; /* size: 0x0020 */

struct IImageList
{
}; /* size: 0x0008 */

class CDocfileStreamName
{
  /* 0x0000 */ wchar_t _wszName[37];
}; /* size: 0x004a */

typedef struct _RTL_STACK_CONTEXT
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ long Padding_1277;
  /* 0x0008 */ struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
} RTL_STACK_CONTEXT, *PRTL_STACK_CONTEXT; /* size: 0x0018 */

typedef struct _CRT_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_1278;
  /* 0x0008 */ struct _CRT_CRITICAL_SECTION* CriticalSection;
  /* 0x0010 */ struct __CRT_LIST_ENTRY ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Depth;
  /* 0x002c */ long Padding_1279;
  /* 0x0030 */ void* OwnerBackTrace[5];
} CRT_CRITICAL_SECTION_DEBUG, *PCRT_CRITICAL_SECTION_DEBUG; /* size: 0x0058 */

typedef struct __midl_frag1330_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1330_t, *P_midl_frag1330_t; /* size: 0x0048 */

typedef struct _KEY_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Wow64Flags;
  /* 0x0004 */ unsigned long KeyFlags;
  /* 0x0008 */ unsigned long ControlFlags;
} KEY_FLAGS_INFORMATION, *PKEY_FLAGS_INFORMATION; /* size: 0x000c */

typedef struct _SHFILEINFOA
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0008 */ int iIcon;
  /* 0x000c */ unsigned long dwAttributes;
  /* 0x0010 */ char szDisplayName[260];
  /* 0x0114 */ char szTypeName[80];
  /* 0x0164 */ long __PADDING__[1];
} SHFILEINFOA, *PSHFILEINFOA; /* size: 0x0168 */

struct HHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class AllocationWrapper
{
}; /* size: 0x0001 */

struct IZoneIdentifier
{
}; /* size: 0x0008 */

class ostream_withassign
{
}; /* size: 0x0080 */

struct IPersist
{
}; /* size: 0x0008 */

class CSeekPointer
{
  /* 0x0000 */ unsigned __int64 _ulPos;
  /* 0x0008 */ long _cReferences;
}; /* size: 0x0010 */

typedef struct _stat64i32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1280[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat64i32, *Pstat64i32; /* size: 0x0030 */

typedef struct _ACTRL_ACCESS_ENTRY_LISTW
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ long Padding_1281;
  /* 0x0008 */ struct _ACTRL_ACCESS_ENTRYW* pAccessList;
} ACTRL_ACCESS_ENTRY_LISTW, *PACTRL_ACCESS_ENTRY_LISTW; /* size: 0x0010 */

typedef struct __midl_frag210_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag210_t, *P_midl_frag210_t; /* size: 0x0040 */

typedef struct _SRCCODEINFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1282;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned __int64 ModBase;
  /* 0x0018 */ wchar_t Obj[261];
  /* 0x0222 */ wchar_t FileName[261];
  /* 0x042c */ unsigned long LineNumber;
  /* 0x0430 */ unsigned __int64 Address;
} SRCCODEINFOW, *PSRCCODEINFOW; /* size: 0x0438 */

struct CStdMarshal::DiscSinkNode
{
  /* 0x0000 */ struct CStdMarshal::DiscSinkNode* pNext;
  /* 0x0008 */ struct CStdMarshal::DiscSinkNode* pPrev;
  /* 0x0010 */ struct IDisconnectSink* pSink;
  /* 0x0018 */ void* pvCookie;
}; /* size: 0x0020 */

struct IQuickActivate
{
}; /* size: 0x0008 */

class CLinkable
{
  /* 0x0000 */ class CLinkable* m_pNext;
  /* 0x0008 */ class CLinkable* m_pPrev;
}; /* size: 0x0010 */

struct tagPROPBAG2
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned short vt;
  /* 0x0006 */ unsigned short cfType;
  /* 0x0008 */ unsigned long dwHint;
  /* 0x000c */ long Padding_1283;
  /* 0x0010 */ wchar_t* pstrName;
  /* 0x0018 */ struct _GUID clsid;
}; /* size: 0x0028 */

struct IOleControl
{
}; /* size: 0x0008 */

class CRpcOptions
{
  /* 0x0000 */ long Padding_1284[2];
  /* 0x0008 */ class CStdIdentity* _pStdId;
  /* 0x0010 */ struct IUnknown* _pUnkOuter;
}; /* size: 0x0018 */

struct tagLICINFO
{
  /* 0x0000 */ long cbLicInfo;
  /* 0x0004 */ int fRuntimeKeyAvail;
  /* 0x0008 */ int fLicVerified;
}; /* size: 0x000c */

class CStdMarshal
{
  /* 0x0000 */ long Padding_1285[2];
  /* 0x0008 */ unsigned long _dwFlags;
  /* 0x000c */ long _cIPIDs;
  /* 0x0010 */ struct tagIPIDEntry* _pFirstIPID;
  /* 0x0018 */ class CStdIdentity* _pStdId;
  /* 0x0020 */ class CCtxComChnl* _pChnl;
  /* 0x0028 */ struct _GUID _clsidHandler;
  /* 0x0038 */ long _cNestedCalls;
  /* 0x003c */ long _cTableRefs;
  /* 0x0040 */ unsigned long _dwMarshalTime;
  /* 0x0044 */ long Padding_1286;
  /* 0x0048 */ struct IRemUnknown* _pSecureRemUnk;
  /* 0x0050 */ struct IUnknown* _pAsyncRelease;
  /* 0x0058 */ class CtxEntry* _pCtxEntryHead;
  /* 0x0060 */ class CtxEntry* _pCtxFreeList;
  /* 0x0068 */ struct _RTL_CRITICAL_SECTION _csCtxEntry;
  /* 0x0090 */ int _fCsInitialized;
  /* 0x0094 */ long Padding_1287;
  /* 0x0098 */ class CPolicySet* _pPS;
  /* 0x00a0 */ class CIDObject* _pID;
  /* 0x00a8 */ class CRefCache* _pRefCache;
  /* 0x00b0 */ struct CStdMarshal::DiscSinkNode _discHead;
  /* 0x00d0 */ unsigned long _dwLastCallTime;
}; /* size: 0x00d8 */

class CSCMergedEnum<IEnumGUID,_GUID>
{
  /* 0x0000 */ long Padding_1288[2];
  /* 0x0008 */ struct IEnumGUID** m_pcsEnum;
  /* 0x0010 */ unsigned long m_cTotalEnum;
  /* 0x0014 */ unsigned long m_dwRefCount;
  /* 0x0018 */ unsigned long m_CurrentEnum;
  /* 0x001c */ struct _GUID m_myiid;
}; /* size: 0x0030 */

struct SMultiGUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct SMultiGUIDKey key;
}; /* size: 0x0020 */

typedef struct _TAPE_GET_POSITION
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
} TAPE_GET_POSITION, *PTAPE_GET_POSITION; /* size: 0x0010 */

typedef struct _TAPE_ERASE
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_ERASE, *PTAPE_ERASE; /* size: 0x0008 */

struct tagCAUUID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_1289;
  /* 0x0008 */ struct _GUID* pElems;
}; /* size: 0x0010 */

struct IRCEntry
{
  /* 0x0000 */ struct IRCEntry* pNext;
  /* 0x0008 */ class CRefCache* pRefCache;
  /* 0x0010 */ unsigned long cStrongUsage;
  /* 0x0014 */ unsigned long cWeakUsage;
  /* 0x0018 */ unsigned long cStrongRefs;
  /* 0x001c */ unsigned long cPrivateRefs;
  /* 0x0020 */ unsigned long cWeakRefs;
  /* 0x0024 */ struct _GUID ipid;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Dimensions;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* OriginalMemberLayout;
  /* 0x0010 */ const void* OriginalPointerLayout;
  /* 0x0018 */ const void* PointerLayout;
  /* 0x0020 */ const void* ConfArrayDescription;
} NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT, *PNDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT; /* size: 0x0028 */

typedef struct _SPC_STATEMENT_TYPE
{
  /* 0x0000 */ unsigned long cKeyPurposeId;
  /* 0x0004 */ long Padding_1290;
  /* 0x0008 */ char** rgpszKeyPurposeId;
} SPC_STATEMENT_TYPE, *PSPC_STATEMENT_TYPE; /* size: 0x0010 */

struct IPersistPropertyBag2
{
}; /* size: 0x0008 */

class CRefCache
{
  /* 0x0000 */ unsigned long _cRefs;
  /* 0x0004 */ unsigned long _cStrongItfs;
  /* 0x0008 */ unsigned long _cWeakItfs;
  /* 0x000c */ unsigned long _cTableStrong;
  /* 0x0010 */ unsigned long _cIRCs;
  /* 0x0014 */ long Padding_1291;
  /* 0x0018 */ struct IRCEntry* _pIRCList;
  /* 0x0020 */ struct SOIDRegistration _soidReg;
}; /* size: 0x0070 */

struct tagPICTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ unsigned int picType;
  union
  {
    struct
    {
      /* 0x0008 */ struct HBITMAP__* hbitmap;
      /* 0x0010 */ struct HPALETTE__* hpal;
    } /* size: 0x0010 */ bmp;
    struct
    {
      /* 0x0008 */ struct HMETAFILE__* hmeta;
      /* 0x0010 */ int xExt;
      /* 0x0014 */ int yExt;
    } /* size: 0x0010 */ wmf;
    struct
    {
      /* 0x0008 */ struct HICON__* hicon;
    } /* size: 0x0008 */ icon;
    struct
    {
      struct
      {
        /* 0x0008 */ struct HENHMETAFILE__* hemf;
      } /* size: 0x0008 */ emf;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

typedef struct __midl_frag114_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag114_t, *P_midl_frag114_t; /* size: 0x0038 */

typedef struct _SPC_SP_OPUS_INFO
{
  /* 0x0000 */ const wchar_t* pwszProgramName;
  /* 0x0008 */ struct SPC_LINK_* pMoreInfo;
  /* 0x0010 */ struct SPC_LINK_* pPublisherInfo;
} SPC_SP_OPUS_INFO, *PSPC_SP_OPUS_INFO; /* size: 0x0018 */

typedef struct __midl_frag123_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ struct _NDR64_NO_REPEAT_FORMAT frag4;
    /* 0x0030 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
    /* 0x0038 */ struct _NDR64_POINTER_FORMAT frag6;
    /* 0x0048 */ unsigned char frag7;
    /* 0x0049 */ char __PADDING__[7];
  } /* size: 0x0048 */ frag2;
} _midl_frag123_t, *P_midl_frag123_t; /* size: 0x0050 */

typedef struct _TAPE_CREATE_PARTITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
} TAPE_CREATE_PARTITION, *PTAPE_CREATE_PARTITION; /* size: 0x000c */

struct tagCONNECTDATA
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0008 */ unsigned long dwCookie;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct tagExtentInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwExtentMode;
  /* 0x0008 */ struct tagSIZE sizelProposed;
}; /* size: 0x0010 */

struct tagPOINTF
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
}; /* size: 0x0008 */

typedef struct __midl_frag1417_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1417_t, *P_midl_frag1417_t; /* size: 0x0038 */

typedef struct __midl_frag86_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag86_t, *P_midl_frag86_t; /* size: 0x0040 */

struct IFontEventsDisp
{
}; /* size: 0x0008 */

typedef struct __midl_frag278_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag278_t, *P_midl_frag278_t; /* size: 0x0020 */

struct tagCALPOLESTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_1292;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

typedef struct __midl_frag1109_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1109_t, *P_midl_frag1109_t; /* size: 0x0010 */

typedef struct _MINIDUMP_EXCEPTION
{
  /* 0x0000 */ unsigned int ExceptionCode;
  /* 0x0004 */ unsigned int ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned int NumberParameters;
  /* 0x001c */ unsigned int __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} MINIDUMP_EXCEPTION, *PMINIDUMP_EXCEPTION; /* size: 0x0098 */

struct MINIDUMP_EXCEPTION_STREAM
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int __alignment;
  /* 0x0008 */ struct _MINIDUMP_EXCEPTION ExceptionRecord;
  /* 0x00a0 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
}; /* size: 0x00a8 */

struct tagXCtxWrapperData
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0008 */ struct IUnknown* pServer;
  /* 0x0010 */ unsigned long dwState;
  /* 0x0014 */ long Padding_1293;
  /* 0x0018 */ class CObjectContext* pServerCtx;
  /* 0x0020 */ class CObjectContext* pClientCtx;
  /* 0x0028 */ void* pv;
}; /* size: 0x0030 */

struct tagAspectInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

struct tagCADWORD
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_1294;
  /* 0x0008 */ unsigned long* pElems;
}; /* size: 0x0010 */

typedef struct _CMC_DATA_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ long Padding_1295;
  /* 0x0008 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0010 */ unsigned long cTaggedRequest;
  /* 0x0014 */ long Padding_1296;
  /* 0x0018 */ struct _CMC_TAGGED_REQUEST* rgTaggedRequest;
  /* 0x0020 */ unsigned long cTaggedContentInfo;
  /* 0x0024 */ long Padding_1297;
  /* 0x0028 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0030 */ unsigned long cTaggedOtherMsg;
  /* 0x0034 */ long Padding_1298;
  /* 0x0038 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_DATA_INFO, *PCMC_DATA_INFO; /* size: 0x0040 */

typedef struct _TAPE_SET_MEDIA_PARAMETERS
{
  /* 0x0000 */ unsigned long BlockSize;
} TAPE_SET_MEDIA_PARAMETERS, *PTAPE_SET_MEDIA_PARAMETERS; /* size: 0x0004 */

struct tagFONTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ long Padding_1299;
  /* 0x0008 */ wchar_t* lpstrName;
  /* 0x0010 */ union tagCY cySize;
  /* 0x0018 */ short sWeight;
  /* 0x001a */ short sCharset;
  /* 0x001c */ int fItalic;
  /* 0x0020 */ int fUnderline;
  /* 0x0024 */ int fStrikethrough;
}; /* size: 0x0028 */

typedef struct _NDR64_VAR_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int TotalSize;
  /* 0x0008 */ unsigned int ElementSize;
  /* 0x000c */ long Padding_1300;
  /* 0x0010 */ const void* VarDescriptor;
} NDR64_VAR_ARRAY_HEADER_FORMAT, *PNDR64_VAR_ARRAY_HEADER_FORMAT; /* size: 0x0018 */

typedef struct __midl_frag1779_t
{
  /* 0x0000 */ struct _NDR64_VAR_ARRAY_HEADER_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1779_t, *P_midl_frag1779_t; /* size: 0x0028 */

struct ObjectSplayNode
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS SplayLinks;
  /* 0x0018 */ void* pvObject;
  /* 0x0020 */ void* pvVtblTracking;
}; /* size: 0x0028 */

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1301;
  /* 0x0008 */ struct _CMSG_SIGNED_ENCODE_INFO SignedInfo;
  /* 0x0038 */ struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
} CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO; /* size: 0x0078 */

typedef struct _PERFINFO_GROUPMASK
{
  /* 0x0000 */ unsigned long Masks[8];
} PERFINFO_GROUPMASK, *PPERFINFO_GROUPMASK; /* size: 0x0020 */

struct IProvideClassInfo
{
}; /* size: 0x0008 */

class CDataAdviseCache
{
  /* 0x0000 */ struct IDataAdviseHolder* m_pDAH;
  /* 0x0008 */ class CMapDwordDword m_mapClientToDelegate;
}; /* size: 0x0050 */

typedef struct __midl_frag961_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag961_t, *P_midl_frag961_t; /* size: 0x0088 */

typedef struct __midl_frag1349_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1349_t, *P_midl_frag1349_t; /* size: 0x0038 */

typedef struct __midl_frag1473_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1473_t, *P_midl_frag1473_t; /* size: 0x0038 */

class CSimpStreamOpen
{
  /* 0x0000 */ long Padding_1302[12];
  /* 0x0030 */ class CDfNameList* _pdfl;
  /* 0x0038 */ unsigned long _grfMode;
}; /* size: 0x0040 */

class CDfNameList
{
  /* 0x0000 */ class CDfName _df;
  /* 0x0042 */ char Padding_1303[2];
  /* 0x0044 */ unsigned long _sectStart;
  /* 0x0048 */ unsigned long _ulSize;
  /* 0x004c */ long Padding_1304;
  /* 0x0050 */ class CDfNameList* _pdflNext;
}; /* size: 0x0058 */

class CDestObjectWrapper
{
  /* 0x0000 */ long Padding_1305[4];
  /* 0x0010 */ long m_cRef;
  /* 0x0014 */ long Padding_1306;
  /* 0x0018 */ struct IDestInfo* m_pIDI;
}; /* size: 0x0020 */

typedef struct _BCRYPT_DH_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_DH_KEY_BLOB, *PBCRYPT_DH_KEY_BLOB; /* size: 0x0008 */

class CPropSetName
{
  /* 0x0000 */ wchar_t _oszName[32];
}; /* size: 0x0040 */

class CMStream
{
  /* 0x0000 */ class CBasedILockBytesPtrPtr _pplstParent;
  /* 0x0008 */ class CBasedMSFPageTablePtr _pmpt;
  /* 0x0010 */ class CMSFHeader _hdr;
  /* 0x0214 */ long Padding_1307;
  /* 0x0218 */ class CDirectory _dir;
  /* 0x0268 */ class CFat _fat;
  /* 0x02f0 */ class CDIFat _fatDif;
  /* 0x03a0 */ class CFat _fatMini;
  /* 0x0428 */ class CStreamCache _stmcDir;
  /* 0x04b8 */ class CStreamCache _stmcMiniFat;
  /* 0x0548 */ class CBasedDirectStreamPtr _pdsministream;
  /* 0x0550 */ class CBasedMStreamPtr _pmsShadow;
  /* 0x0558 */ class CBasedBytePtr _pCopySectBuf;
  /* 0x0560 */ const int _fIsScratch;
  /* 0x0564 */ int _fIsNoScratch;
  /* 0x0568 */ class CBasedMStreamPtr _pmsScratch;
  /* 0x0570 */ int _fIsNoSnapshot;
  /* 0x0574 */ int _fBlockWrite;
  /* 0x0578 */ int _fTruncate;
  /* 0x057c */ int _fBlockHeader;
  /* 0x0580 */ int _fNewConvert;
  /* 0x0584 */ int _fIsShadow;
  /* 0x0588 */ unsigned __int64 _ulParentSize;
  /* 0x0590 */ unsigned short _uSectorSize;
  /* 0x0592 */ unsigned short _uSectorShift;
  /* 0x0594 */ unsigned short _uSectorMask;
  /* 0x0596 */ char Padding_1308[2];
  /* 0x0598 */ struct IMalloc* const _pMalloc;
  /* 0x05a0 */ union _ULARGE_INTEGER _uliLastKnownSizeForConsolidate;
}; /* size: 0x05a8 */

class CAsyncUnknownMgr
{
  /* 0x0000 */ long Padding_1309[10];
  /* 0x0028 */ class CAsyncUnknownMgr::CPrivUnknown _privUnk;
  /* 0x0030 */ unsigned long _dwFlags;
  /* 0x0034 */ long Padding_1310;
  /* 0x0038 */ class CClientCallMgr* _pNextMgr;
  /* 0x0040 */ unsigned long _cRefs;
  /* 0x0044 */ long Padding_1311;
  /* 0x0048 */ struct IUnknown* _pUnkOuter;
  /* 0x0050 */ class CStdIdentity* _pStdId;
  /* 0x0058 */ struct IUnknown* _pARUObj;
  /* 0x0060 */ struct AsyncIRemUnknown2* _pARU;
  /* 0x0068 */ struct tagMULTI_QI _MQI;
  /* 0x0080 */ unsigned long _ulRefs;
  /* 0x0084 */ long Padding_1312;
  /* 0x0088 */ struct tagQICONTEXT* _pQIC;
  /* 0x0090 */ unsigned long _cAcquired;
  /* 0x0094 */ unsigned long _cMQIs;
  /* 0x0098 */ struct _GUID* _pIIDs;
  /* 0x00a0 */ struct tagMULTI_QI** _ppMQI;
  /* 0x00a8 */ struct tagMULTI_QI* _pMQISave;
}; /* size: 0x00b0 */

typedef struct __midl_frag543_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag543_t, *P_midl_frag543_t; /* size: 0x0038 */

class CFileMonikerFactory
{
}; /* size: 0x0010 */

typedef struct __midl_frag1522_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1522_t, *P_midl_frag1522_t; /* size: 0x0028 */

typedef struct __midl_frag1057_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1057_t, *P_midl_frag1057_t; /* size: 0x0048 */

union WireThis
{
  union
  {
    /* 0x0000 */ struct WireThisPart1 c;
    /* 0x0000 */ struct WireThisPart2 d;
  }; /* size: 0x0050 */
}; /* size: 0x0050 */

typedef struct __midl_frag680_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag680_t, *P_midl_frag680_t; /* size: 0x000c */

struct SDeltaBlock
{
  /* 0x0000 */ unsigned long _sect[16];
  /* 0x0040 */ unsigned short _fOwn[1];
  /* 0x0042 */ char __PADDING__[2];
}; /* size: 0x0044 */

typedef struct _ACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ConfiguredClsidOffset;
} ACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION, *PACTIVATION_CONTEXT_DATA_COM_PROGID_REDIRECTION; /* size: 0x000c */

typedef struct _CRYPT_PASSWORD_CREDENTIALSA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1313;
  /* 0x0008 */ char* pszUsername;
  /* 0x0010 */ char* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSA, *PCRYPT_PASSWORD_CREDENTIALSA; /* size: 0x0018 */

class Windows::Auto<_LUNICODE_STRING>
{
}; /* size: 0x0018 */

typedef struct __midl_frag1079_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1079_t, *P_midl_frag1079_t; /* size: 0x000c */

struct tagKNOWNFOLDER_DEFINITION
{
  /* 0x0000 */ enum tagKF_CATEGORY category;
  /* 0x0004 */ long Padding_1314;
  /* 0x0008 */ wchar_t* pszName;
  /* 0x0010 */ wchar_t* pszDescription;
  /* 0x0018 */ struct _GUID fidParent;
  /* 0x0028 */ wchar_t* pszRelativePath;
  /* 0x0030 */ wchar_t* pszParsingName;
  /* 0x0038 */ wchar_t* pszTooltip;
  /* 0x0040 */ wchar_t* pszLocalizedName;
  /* 0x0048 */ wchar_t* pszIcon;
  /* 0x0050 */ wchar_t* pszSecurity;
  /* 0x0058 */ unsigned long dwAttributes;
  /* 0x005c */ unsigned long kfdFlags;
  /* 0x0060 */ struct _GUID ftidType;
}; /* size: 0x0070 */

struct CSimpStorage
{
  /* 0x0000 */ long Padding_1315[14];
  /* 0x0038 */ long _cReferences;
  /* 0x003c */ long Padding_1316;
  /* 0x0040 */ void* _hFile;
  /* 0x0048 */ int _fDirty;
  /* 0x004c */ class CMSFHeader _hdr;
  /* 0x0250 */ unsigned char* _pbBuf;
  /* 0x0258 */ unsigned long _sectMax;
  /* 0x025c */ struct _GUID _clsid;
  /* 0x026c */ long Padding_1317;
  /* 0x0270 */ class CDfNameList* _pdfl;
  /* 0x0278 */ class CDfNameList* _pdflCurrent;
  /* 0x0280 */ unsigned long _cStreams;
  /* 0x0284 */ long __PADDING__[1];
}; /* size: 0x0288 */

class PSStream
{
}; /* size: 0x000c */

struct Windows::Rtl::IRtlObject
{
}; /* size: 0x0008 */

typedef struct __midl_frag624_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag624_t, *P_midl_frag624_t; /* size: 0x0038 */

typedef struct __midl_frag89_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag89_t, *P_midl_frag89_t; /* size: 0x0038 */

class CStackBuffer
{
  /* 0x0000 */ unsigned char* _pbHeapBuf;
  /* 0x0008 */ unsigned long _cElements;
  /* 0x000c */ long Padding_1318;
  /* 0x0010 */ unsigned char* _pbStackBuf;
  /* 0x0018 */ unsigned long _cbElement;
}; /* size: 0x0020 */

typedef struct __MIDL_ICallFrame_0001
{
  /* 0x0000 */ unsigned long iMethod;
  /* 0x0004 */ int fHasInValues;
  /* 0x0008 */ int fHasInOutValues;
  /* 0x000c */ int fHasOutValues;
  /* 0x0010 */ int fDerivesFromIDispatch;
  /* 0x0014 */ long cInInterfacesMax;
  /* 0x0018 */ long cInOutInterfacesMax;
  /* 0x001c */ long cOutInterfacesMax;
  /* 0x0020 */ long cTopLevelInInterfaces;
  /* 0x0024 */ struct _GUID iid;
  /* 0x0034 */ unsigned long cMethod;
  /* 0x0038 */ unsigned long cParams;
} _MIDL_ICallFrame_0001, *P_MIDL_ICallFrame_0001; /* size: 0x003c */

typedef struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned char* NewCursorValue;
  /* 0x0008 */ long FailureReason;
  /* 0x000c */ long __PADDING__[1];
} RTL_UCSCHAR_ENCODER_RETURN_VALUE, *PRTL_UCSCHAR_ENCODER_RETURN_VALUE; /* size: 0x0010 */

class CMallocBased
{
}; /* size: 0x0001 */

class CLocalAlloc
{
}; /* size: 0x0001 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnTypeConst;

struct tagFORMATIDOFFSET
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long dwOffset;
}; /* size: 0x0014 */

typedef struct __midl_frag1390_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1390_t, *P_midl_frag1390_t; /* size: 0x0078 */

struct tagPROPERTYSETHEADER
{
  /* 0x0000 */ unsigned short wByteOrder;
  /* 0x0002 */ unsigned short wFormat;
  /* 0x0004 */ unsigned long dwOSVer;
  /* 0x0008 */ struct _GUID clsid;
  /* 0x0018 */ unsigned long reserved;
}; /* size: 0x001c */

typedef struct __midl_frag870_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag870_t, *P_midl_frag870_t; /* size: 0x0038 */

struct tagPROPERTYSECTIONHEADER
{
  /* 0x0000 */ unsigned long cbSection;
  /* 0x0004 */ unsigned long cProperties;
  /* 0x0008 */ struct tagPROPERTYIDOFFSET rgprop[1];
}; /* size: 0x0010 */

class CException
{
  /* 0x0000 */ long Padding_1319[2];
  /* 0x0008 */ long _lError;
}; /* size: 0x0010 */

typedef struct __midl_frag1793_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1793_t, *P_midl_frag1793_t; /* size: 0x0058 */

typedef struct _BCRYPT_RNG_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_1320;
  /* 0x0008 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0010 */ void* GetProperty /* function */;
  /* 0x0018 */ void* SetProperty /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* GenRandom /* function */;
} BCRYPT_RNG_FUNCTION_TABLE, *PBCRYPT_RNG_FUNCTION_TABLE; /* size: 0x0030 */

class CExceptionContext
{
  /* 0x0000 */ class CTry* _pTopTry;
  /* 0x0008 */ unsigned char* _pLastNew;
  /* 0x0010 */ int _cbLastNew;
  /* 0x0014 */ int _fNewReadyForUnwind;
  /* 0x0018 */ class CException _exception;
  /* 0x0028 */ char buffer[256];
  /* 0x0128 */ class CExceptionContext::StackElement* _aStack;
  /* 0x0130 */ int _StackTop;
  /* 0x0134 */ int _StackSize;
}; /* size: 0x0138 */

struct CStdWrapper::Deactivate::__l3::tagServerRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0008 */ void* pServer;
}; /* size: 0x0010 */

typedef struct __midl_frag211_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag211_t, *P_midl_frag211_t; /* size: 0x0020 */

class CApartmentHashTable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CDWORDHashTable _hashtbl;
      /* 0x0028 */ int _fTableInitialized;
    }; /* size: 0x002c */
    /* 0x0000 */ class COleStaticMutexSem _mxsAptTblLock;
  }; /* size: 0x0050 */
}; /* size: 0x0030 */

class CPatternTbl
{
  /* 0x0000 */ struct STblHdr* _pTblHdr;
  /* 0x0008 */ unsigned char* _pStart;
}; /* size: 0x0010 */

typedef struct __midl_frag638_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag638_t, *P_midl_frag638_t; /* size: 0x000c */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO
{
  /* 0x0000 */ struct _CERT_ID RecipientId;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0038 */ struct _FILETIME Date;
  /* 0x0040 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO; /* size: 0x0048 */

class CCompositeMoniker
{
  /* 0x0000 */ long Padding_1321[10];
  /* 0x0028 */ class CTrackingCompositeMoniker _tcm;
  /* 0x0038 */ struct IMoniker* m_pmkLeft;
  /* 0x0040 */ struct IMoniker* m_pmkRight;
  /* 0x0048 */ int m_fReduced;
  /* 0x004c */ int m_fReduceForced;
}; /* size: 0x0050 */

typedef struct _MINIDUMP_THREAD_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned long NumberOfEntries;
} MINIDUMP_THREAD_INFO_LIST, *PMINIDUMP_THREAD_INFO_LIST; /* size: 0x000c */

typedef struct _CERT_REVOCATION_CRL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1322;
  /* 0x0008 */ const struct _CRL_CONTEXT* pBaseCrlContext;
  /* 0x0010 */ const struct _CRL_CONTEXT* pDeltaCrlContext;
  /* 0x0018 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0020 */ int fDeltaCrlEntry;
  /* 0x0024 */ long __PADDING__[1];
} CERT_REVOCATION_CRL_INFO, *PCERT_REVOCATION_CRL_INFO; /* size: 0x0028 */

typedef struct __midl_frag1029_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1029_t, *P_midl_frag1029_t; /* size: 0x0048 */

typedef struct _CRL_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ long Padding_1323;
  /* 0x0008 */ unsigned char* pbCrlEncoded;
  /* 0x0010 */ unsigned long cbCrlEncoded;
  /* 0x0014 */ long Padding_1324;
  /* 0x0018 */ struct _CRL_INFO* pCrlInfo;
  /* 0x0020 */ void* hCertStore;
} CRL_CONTEXT, *PCRL_CONTEXT; /* size: 0x0028 */

struct tagSTREAM_SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct tagSSID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
}; /* size: 0x000c */

typedef struct _CRL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1325;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0030 */ struct _FILETIME ThisUpdate;
  /* 0x0038 */ struct _FILETIME NextUpdate;
  /* 0x0040 */ unsigned long cCRLEntry;
  /* 0x0044 */ long Padding_1326;
  /* 0x0048 */ struct _CRL_ENTRY* rgCRLEntry;
  /* 0x0050 */ unsigned long cExtension;
  /* 0x0054 */ long Padding_1327;
  /* 0x0058 */ struct _CERT_EXTENSION* rgExtension;
} CRL_INFO, *PCRL_INFO; /* size: 0x0060 */

class CScmPatternTbl
{
  /* 0x0000 */ unsigned char* _pLocTbl;
}; /* size: 0x0008 */

typedef struct __midl_frag1041_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1041_t, *P_midl_frag1041_t; /* size: 0x000c */

typedef struct _CRYPT_PROVIDER_REG
{
  /* 0x0000 */ unsigned long cAliases;
  /* 0x0004 */ long Padding_1328;
  /* 0x0008 */ wchar_t** rgpszAliases;
  /* 0x0010 */ struct _CRYPT_IMAGE_REG* pUM;
  /* 0x0018 */ struct _CRYPT_IMAGE_REG* pKM;
} CRYPT_PROVIDER_REG, *PCRYPT_PROVIDER_REG; /* size: 0x0020 */

typedef struct _CRYPT_IMAGE_REG
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0008 */ unsigned long cInterfaces;
  /* 0x000c */ long Padding_1329;
  /* 0x0010 */ struct _CRYPT_INTERFACE_REG** rgpInterfaces;
} CRYPT_IMAGE_REG, *PCRYPT_IMAGE_REG; /* size: 0x0018 */

typedef struct __midl_frag66_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag66_t, *P_midl_frag66_t; /* size: 0x0010 */

typedef struct __midl_frag714_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag714_t, *P_midl_frag714_t; /* size: 0x0010 */

typedef struct _CRYPT_KEY_PROV_PARAM
{
  /* 0x0000 */ unsigned long dwParam;
  /* 0x0004 */ long Padding_1330;
  /* 0x0008 */ unsigned char* pbData;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned long dwFlags;
} CRYPT_KEY_PROV_PARAM, *PCRYPT_KEY_PROV_PARAM; /* size: 0x0018 */

typedef struct __midl_frag1702_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1702_t, *P_midl_frag1702_t; /* size: 0x000c */

typedef struct _BCRYPT_KEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
} BCRYPT_KEY_BLOB, *PBCRYPT_KEY_BLOB; /* size: 0x0004 */

typedef struct __midl_frag310_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag310_t, *P_midl_frag310_t; /* size: 0x0010 */

typedef struct _CTL_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1331;
  /* 0x0008 */ struct _CTL_USAGE Usage;
} CTL_USAGE_MATCH, *PCTL_USAGE_MATCH; /* size: 0x0018 */

typedef struct _NCRYPT_KEY_STORAGE_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_1332;
  /* 0x0008 */ void* OpenProvider /* function */;
  /* 0x0010 */ void* OpenKey /* function */;
  /* 0x0018 */ void* CreatePersistedKey /* function */;
  /* 0x0020 */ void* GetProviderProperty /* function */;
  /* 0x0028 */ void* GetKeyProperty /* function */;
  /* 0x0030 */ void* SetProviderProperty /* function */;
  /* 0x0038 */ void* SetKeyProperty /* function */;
  /* 0x0040 */ void* FinalizeKey /* function */;
  /* 0x0048 */ void* DeleteKey /* function */;
  /* 0x0050 */ void* FreeProvider /* function */;
  /* 0x0058 */ void* FreeKey /* function */;
  /* 0x0060 */ void* FreeBuffer /* function */;
  /* 0x0068 */ void* Encrypt /* function */;
  /* 0x0070 */ void* Decrypt /* function */;
  /* 0x0078 */ void* IsAlgSupported /* function */;
  /* 0x0080 */ void* EnumAlgorithms /* function */;
  /* 0x0088 */ void* EnumKeys /* function */;
  /* 0x0090 */ void* ImportKey /* function */;
  /* 0x0098 */ void* ExportKey /* function */;
  /* 0x00a0 */ void* SignHash /* function */;
  /* 0x00a8 */ void* VerifySignature /* function */;
  /* 0x00b0 */ void* PromptUser /* function */;
  /* 0x00b8 */ void* NotifyChangeKey /* function */;
  /* 0x00c0 */ void* SecretAgreement /* function */;
  /* 0x00c8 */ void* DeriveKey /* function */;
  /* 0x00d0 */ void* FreeSecret /* function */;
} NCRYPT_KEY_STORAGE_FUNCTION_TABLE, *PNCRYPT_KEY_STORAGE_FUNCTION_TABLE; /* size: 0x00d8 */

typedef struct __midl_frag711_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag711_t, *P_midl_frag711_t; /* size: 0x0068 */

typedef struct __midl_frag1610_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1610_t, *P_midl_frag1610_t; /* size: 0x000c */

typedef struct __midl_frag397_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag397_t, *P_midl_frag397_t; /* size: 0x000c */

typedef struct __midl_frag12_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag12_t, *P_midl_frag12_t; /* size: 0x0008 */

typedef struct __midl_frag178_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag178_t, *P_midl_frag178_t; /* size: 0x0038 */

class CClassCache::CClassEntry
{
  /* 0x0000 */ long Padding_1333[6];
  /* 0x0018 */ struct SMultiGUIDHashNode _hashNode;
  /* 0x0038 */ struct _GUID _guids[2];
  /* 0x0058 */ unsigned long _dwSig;
  /* 0x005c */ unsigned long _dwFlags;
  /* 0x0060 */ class CClassCache::CClassEntry* _pTreatAsList;
  /* 0x0068 */ class CClassCache::CBaseClassEntry* _pBCEListFront;
  /* 0x0070 */ class CClassCache::CBaseClassEntry* _pBCEListBack;
  /* 0x0078 */ unsigned long _cLocks;
  /* 0x007c */ unsigned long _dwFailedContexts;
  /* 0x0080 */ struct IComClassInfo* _pCI;
  union
  {
    /* 0x0000 */ const unsigned long TREAT_AS_SIG;
    /* 0x0000 */ const unsigned long CLASS_ENTRY_SIG;
    /* 0x0000 */ const unsigned long INCOMPLETE_ENTRY_SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0080 */
}; /* size: 0x0088 */

typedef struct __midl_frag1026_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1026_t, *P_midl_frag1026_t; /* size: 0x0038 */

typedef struct _CRYPT_CONTENT_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Content;
} CRYPT_CONTENT_INFO, *PCRYPT_CONTENT_INFO; /* size: 0x0018 */

typedef struct __midl_frag1685_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1685_t, *P_midl_frag1685_t; /* size: 0x0020 */

typedef struct __midl_frag390_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag390_t, *P_midl_frag390_t; /* size: 0x0050 */

typedef struct _CERT_EXTENSIONS
{
  /* 0x0000 */ unsigned long cExtension;
  /* 0x0004 */ long Padding_1334;
  /* 0x0008 */ struct _CERT_EXTENSION* rgExtension;
} CERT_EXTENSIONS, *PCERT_EXTENSIONS; /* size: 0x0010 */

typedef struct __midl_frag216_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag216_t, *P_midl_frag216_t; /* size: 0x0020 */

typedef struct __midl_frag853_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag853_t, *P_midl_frag853_t; /* size: 0x0048 */

typedef struct _HTTPSPolicyCallbackData
{
  union
  {
    /* 0x0000 */ unsigned long cbStruct;
    /* 0x0000 */ unsigned long cbSize;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwAuthType;
  /* 0x0008 */ unsigned long fdwChecks;
  /* 0x000c */ long Padding_1335;
  /* 0x0010 */ wchar_t* pwszServerName;
} HTTPSPolicyCallbackData, *PHTTPSPolicyCallbackData; /* size: 0x0018 */

typedef struct __midl_frag1560_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1560_t, *P_midl_frag1560_t; /* size: 0x0038 */

typedef struct _OCSP_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1336;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY* pRequestorName;
  /* 0x0010 */ unsigned long cRequestEntry;
  /* 0x0014 */ long Padding_1337;
  /* 0x0018 */ struct _OCSP_REQUEST_ENTRY* rgRequestEntry;
  /* 0x0020 */ unsigned long cExtension;
  /* 0x0024 */ long Padding_1338;
  /* 0x0028 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_INFO, *POCSP_REQUEST_INFO; /* size: 0x0030 */

typedef struct __midl_frag641_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag7;
    /* 0x0060 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag8;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0070 */ struct _NDR64_MEMPAD_FORMAT frag10;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag11;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag12;
    /* 0x0088 */ struct _NDR64_MEMPAD_FORMAT frag13;
    /* 0x0090 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag14;
    /* 0x0098 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag15;
  } /* size: 0x0080 */ frag2;
} _midl_frag641_t, *P_midl_frag641_t; /* size: 0x00a0 */

typedef struct _NDR64_SIMPLE_REGION_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short RegionSize;
  /* 0x0004 */ unsigned int Reserved;
} NDR64_SIMPLE_REGION_FORMAT, *PNDR64_SIMPLE_REGION_FORMAT; /* size: 0x0008 */

struct HREG
{
  /* 0x0000 */ void* h;
}; /* size: 0x0008 */

class CComCat::CInnerUnk
{
  /* 0x0000 */ long Padding_1339[2];
  /* 0x0008 */ class CComCat* m_pObj;
}; /* size: 0x0010 */

struct MD_METHOD
{
  /* 0x0000 */ unsigned long m_numberOfParams;
  /* 0x0004 */ long Padding_1340;
  /* 0x0008 */ struct PARAM_DESCRIPTION* m_params;
  /* 0x0010 */ struct INTERPRETER_OPT_FLAGS m_optFlags;
  /* 0x0011 */ char Padding_1341[3];
  /* 0x0014 */ unsigned long m_rpcFlags;
  /* 0x0018 */ const struct _MIDL_STUB_DESC* m_pStubDesc;
  /* 0x0020 */ unsigned long m_cbPushedByCaller;
  /* 0x0024 */ unsigned short m_cbClientBuffer;
  /* 0x0026 */ unsigned short m_cbServerBuffer;
  /* 0x0028 */ unsigned long m_cbStackInclRet;
  /* 0x002c */ struct __MIDL_ICallFrame_0001 m_info;
  /* 0x0068 */ int m_fCanShareAllParameters;
  /* 0x006c */ long Padding_1342;
  /* 0x0070 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0078 */ unsigned long m_iMethod;
  /* 0x007c */ long Padding_1343;
  /* 0x0080 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0088 */ struct MD_PARAM* m_rgParams;
  /* 0x0090 */ wchar_t* m_wszMethodName;
  /* 0x0098 */ struct NDR_PROC_HEADER_EXTS* m_pHeaderExts;
}; /* size: 0x00a0 */

struct IRunningObjectTableVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Register /* function */;
  /* 0x0020 */ void* Revoke /* function */;
  /* 0x0028 */ void* IsRunning /* function */;
  /* 0x0030 */ void* GetObjectW /* function */;
  /* 0x0038 */ void* NoteChangeTime /* function */;
  /* 0x0040 */ void* GetTimeOfLastChange /* function */;
  /* 0x0048 */ void* EnumRunning /* function */;
}; /* size: 0x0050 */

typedef struct __midl_frag1825_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1825_t, *P_midl_frag1825_t; /* size: 0x0048 */

typedef struct _NCryptAlgorithmName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwAlgOperations;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
} NCryptAlgorithmName, *PNCryptAlgorithmName; /* size: 0x0018 */

class CSafeStgMarshaled
{
  /* 0x0000 */ struct tagInterfaceData* _pIFD;
}; /* size: 0x0008 */

typedef struct __midl_frag81_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag81_t, *P_midl_frag81_t; /* size: 0x0040 */

typedef struct _CRYPT_CONTEXT_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_CONFIG, *PCRYPT_CONTEXT_CONFIG; /* size: 0x0008 */

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1344;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0020 */ void* pvEncryptionAuxInfo;
} CMSG_ENCRYPTED_ENCODE_INFO, *PCMSG_ENCRYPTED_ENCODE_INFO; /* size: 0x0028 */

typedef struct _BCryptBufferDesc
{
  /* 0x0000 */ unsigned long ulVersion;
  /* 0x0004 */ unsigned long cBuffers;
  /* 0x0008 */ struct _BCryptBuffer* pBuffers;
} BCryptBufferDesc, *PBCryptBufferDesc; /* size: 0x0010 */

class CAsyncConnection
{
  /* 0x0000 */ long Padding_1345[2];
  /* 0x0008 */ struct IConnectionPointContainer* _pCPC;
  /* 0x0010 */ struct IDocfileAsyncConnectionPoint* _pdacp;
  /* 0x0018 */ unsigned long _dwAsyncFlags;
  /* 0x001c */ long _cReferences;
}; /* size: 0x0020 */

typedef struct __midl_frag224_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag224_t, *P_midl_frag224_t; /* size: 0x0058 */

typedef struct _BCryptBuffer
{
  /* 0x0000 */ unsigned long cbBuffer;
  /* 0x0004 */ unsigned long BufferType;
  /* 0x0008 */ void* pvBuffer;
} BCryptBuffer, *PBCryptBuffer; /* size: 0x0010 */

typedef struct __midl_frag773_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag773_t, *P_midl_frag773_t; /* size: 0x0028 */

struct LEGACY_INTERCEPTOR
{
  /* 0x0000 */ long Padding_1346[16];
  /* 0x0040 */ struct ICallFrameEvents* m_psink;
  /* 0x0048 */ struct _GUID m_iid;
  /* 0x0058 */ unsigned long m_cMethods;
  /* 0x005c */ long Padding_1347;
  /* 0x0060 */ struct XLOCK_LEAF m_frameLock;
  /* 0x0090 */ struct ICallFrame** m_ppframeCustomer;
  /* 0x0098 */ struct ICallInterceptor* m_premoteInterceptor;
  /* 0x00a0 */ int m_fRegdWithRemoteInterceptor;
  /* 0x00a4 */ long Padding_1348;
  /* 0x00a8 */ struct ICallInterceptor* m_pmemoryInterceptor;
  /* 0x00b0 */ int m_fRegdWithMemoryInterceptor;
  /* 0x00b4 */ long Padding_1349;
  /* 0x00b8 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x00c0 */ struct IUnknown* m_punkOuter;
  /* 0x00c8 */ long m_refs;
  /* 0x00cc */ int m_fShuttingDown;
}; /* size: 0x00d0 */

typedef struct __midl_frag1047_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1047_t, *P_midl_frag1047_t; /* size: 0x0058 */

struct IConnectionPointContainerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* EnumConnectionPoints /* function */;
  /* 0x0020 */ void* FindConnectionPoint /* function */;
}; /* size: 0x0028 */

struct LocalThis
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long client_thread;
}; /* size: 0x0008 */

struct DedicatedAllocator<CallFrame>
{
  union
  {
    /* 0x0000 */ class CallFrame* pNext;
    /* 0x0000 */ struct IFastStack<CallFrame>* g_pStack;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct IOlePresObj
{
}; /* size: 0x0008 */

struct tagProxyFileInfo
{
  /* 0x0000 */ struct tagCInterfaceProxyVtbl* const* pProxyVtblList;
  /* 0x0008 */ struct tagCInterfaceStubVtbl* const* pStubVtblList;
  /* 0x0010 */ const char* const* pNamesArray;
  /* 0x0018 */ const struct _GUID** pDelegatedIIDs;
  /* 0x0020 */ void* const pIIDLookupRtn /* function */;
  /* 0x0028 */ unsigned short TableSize;
  /* 0x002a */ unsigned short TableVersion;
  /* 0x002c */ long Padding_1350;
  /* 0x0030 */ const struct _GUID** pAsyncIIDLookup;
  /* 0x0038 */ __int64 Filler2;
  /* 0x0040 */ __int64 Filler3;
  /* 0x0048 */ __int64 Filler4;
}; /* size: 0x0050 */

typedef struct _CERT_POLICIES_INFO
{
  /* 0x0000 */ unsigned long cPolicyInfo;
  /* 0x0004 */ long Padding_1351;
  /* 0x0008 */ struct _CERT_POLICY_INFO* rgPolicyInfo;
} CERT_POLICIES_INFO, *PCERT_POLICIES_INFO; /* size: 0x0010 */

struct SSimpleWalker
{
  /* 0x0000 */ long Padding_1352[2];
  /* 0x0008 */ unsigned long _cItfs;
  /* 0x000c */ long Padding_1353;
  /* 0x0010 */ struct IUnknown* _arpUnk[10];
  /* 0x0060 */ struct IUnknown** _ppUnk;
}; /* size: 0x0068 */

typedef struct _CERT_PHYSICAL_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1354;
  /* 0x0008 */ char* pszOpenStoreProvider;
  /* 0x0010 */ unsigned long dwOpenEncodingType;
  /* 0x0014 */ unsigned long dwOpenFlags;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB OpenParameters;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ unsigned long dwPriority;
} CERT_PHYSICAL_STORE_INFO, *PCERT_PHYSICAL_STORE_INFO; /* size: 0x0030 */

typedef struct _CRYPT_RETRIEVE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1355;
  /* 0x0008 */ struct _FILETIME* pLastSyncTime;
  /* 0x0010 */ unsigned long dwMaxUrlRetrievalByteCount;
  /* 0x0014 */ long Padding_1356;
  /* 0x0018 */ struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO* pPreFetchInfo;
  /* 0x0020 */ struct _CRYPTNET_URL_CACHE_FLUSH_INFO* pFlushInfo;
  /* 0x0028 */ struct _CRYPTNET_URL_CACHE_RESPONSE_INFO** ppResponseInfo;
  /* 0x0030 */ wchar_t* pwszCacheFileNamePrefix;
  /* 0x0038 */ struct _FILETIME* pftCacheResync;
  /* 0x0040 */ int fProxyCacheRetrieval;
  /* 0x0044 */ unsigned long dwHttpStatusCode;
} CRYPT_RETRIEVE_AUX_INFO, *PCRYPT_RETRIEVE_AUX_INFO; /* size: 0x0048 */

typedef struct __midl_frag880_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag880_t, *P_midl_frag880_t; /* size: 0x0058 */

typedef struct _CTL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1357;
  /* 0x0008 */ struct _CTL_USAGE SubjectUsage;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB SequenceNumber;
  /* 0x0038 */ struct _FILETIME ThisUpdate;
  /* 0x0040 */ struct _FILETIME NextUpdate;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0060 */ unsigned long cCTLEntry;
  /* 0x0064 */ long Padding_1358;
  /* 0x0068 */ struct _CTL_ENTRY* rgCTLEntry;
  /* 0x0070 */ unsigned long cExtension;
  /* 0x0074 */ long Padding_1359;
  /* 0x0078 */ struct _CERT_EXTENSION* rgExtension;
} CTL_INFO, *PCTL_INFO; /* size: 0x0080 */

typedef struct __midl_frag1455_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1455_t, *P_midl_frag1455_t; /* size: 0x0008 */

typedef struct _CTL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ long Padding_1360;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CTL_ENTRY, *PCTL_ENTRY; /* size: 0x0020 */

class COIDTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class COIDHashTable s_OIDHashTbl;
    /* 0x0000 */ struct SHashChain s_OIDBuckets[23];
    /* 0x0000 */ unsigned long s_UnpinReqsPending;
    /* 0x0000 */ struct SHashChain s_OIDUnpinRequests;
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE
{
  /* 0x0000 */ struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE* pNoticeReference;
  /* 0x0008 */ wchar_t* pszDisplayText;
} CERT_POLICY_QUALIFIER_USER_NOTICE, *PCERT_POLICY_QUALIFIER_USER_NOTICE; /* size: 0x0010 */

class CAuthInfo
{
  union
  {
    /* 0x0000 */ struct tagSOLE_AUTHENTICATION_LIST* _sList;
    /* 0x0000 */ int _fNeedSSL;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE
{
  /* 0x0000 */ char* pszOrganization;
  /* 0x0008 */ unsigned long cNoticeNumbers;
  /* 0x000c */ long Padding_1361;
  /* 0x0010 */ int* rgNoticeNumbers;
} CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE; /* size: 0x0018 */

class CRIFTable
{
  union
  {
    /* 0x0000 */ int _fPreFilled;
    /* 0x0000 */ class CUUIDHashTable _HashTbl;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0080 */
}; /* size: 0x0001 */

typedef struct __midl_frag1619_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1619_t, *P_midl_frag1619_t; /* size: 0x0038 */

typedef struct _CERT_LOGOTYPE_IMAGE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeImageInfoChoice;
  /* 0x0004 */ unsigned long dwFileSize;
  /* 0x0008 */ unsigned long dwXSize;
  /* 0x000c */ unsigned long dwYSize;
  /* 0x0010 */ unsigned long dwLogotypeImageResolutionChoice;
  union
  {
    /* 0x0014 */ unsigned long dwNumBits;
    /* 0x0014 */ unsigned long dwTableSize;
  }; /* size: 0x0004 */
  /* 0x0018 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_IMAGE_INFO, *PCERT_LOGOTYPE_IMAGE_INFO; /* size: 0x0020 */

typedef struct _CERT_LOGOTYPE_AUDIO
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x0018 */ struct _CERT_LOGOTYPE_AUDIO_INFO* pLogotypeAudioInfo;
} CERT_LOGOTYPE_AUDIO, *PCERT_LOGOTYPE_AUDIO; /* size: 0x0020 */

struct tagMethodInfo
{
  /* 0x0000 */ struct tagFUNCDESC* pFuncDesc;
  /* 0x0008 */ struct ITypeInfo* pTypeInfo;
}; /* size: 0x0010 */

class CBasedDocFilePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CPubDocFile
{
  /* 0x0000 */ long Padding_1362[22];
  /* 0x0058 */ class CTSSet _tss;
  /* 0x0060 */ class CBasedPubDocFilePtr _pdfParent;
  /* 0x0068 */ class CBasedDocFilePtr _pdf;
  /* 0x0070 */ class CChildInstanceList _cilChildren;
  /* 0x0078 */ unsigned short _cTransactedDepth;
  /* 0x007a */ unsigned short _wFlags;
  /* 0x007c */ long Padding_1363;
  /* 0x0080 */ class CBasedMStreamPtr _pmsBase;
  /* 0x0088 */ unsigned long _sigMSF;
  /* 0x008c */ long _cReferences;
  /* 0x0090 */ class CBasedDFBasisPtr _pdfb;
}; /* size: 0x0098 */

typedef struct _CERT_LOGOTYPE_AUDIO_INFO
{
  /* 0x0000 */ unsigned long dwFileSize;
  /* 0x0004 */ unsigned long dwPlayTime;
  /* 0x0008 */ unsigned long dwChannels;
  /* 0x000c */ unsigned long dwSampleRate;
  /* 0x0010 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_AUDIO_INFO, *PCERT_LOGOTYPE_AUDIO_INFO; /* size: 0x0018 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>
{
}; /* size: 0x0001 */

typedef struct _CERT_OTHER_NAME
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_OTHER_NAME, *PCERT_OTHER_NAME; /* size: 0x0018 */

typedef struct __midl_frag1212_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1212_t, *P_midl_frag1212_t; /* size: 0x0028 */

typedef struct _CMC_TAGGED_ATTRIBUTE
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1364;
  /* 0x0008 */ struct _CRYPT_ATTRIBUTE Attribute;
} CMC_TAGGED_ATTRIBUTE, *PCMC_TAGGED_ATTRIBUTE; /* size: 0x0020 */

typedef struct _CMC_ADD_ATTRIBUTES_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ long Padding_1365;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CMC_ADD_ATTRIBUTES_INFO, *PCMC_ADD_ATTRIBUTES_INFO; /* size: 0x0020 */

class CSafeBindCtx
{
  /* 0x0000 */ struct IBindCtx* _p;
}; /* size: 0x0008 */

typedef struct _CRYPT_SMIME_CAPABILITIES
{
  /* 0x0000 */ unsigned long cCapability;
  /* 0x0004 */ long Padding_1366;
  /* 0x0008 */ struct _CRYPT_SMIME_CAPABILITY* rgCapability;
} CRYPT_SMIME_CAPABILITIES, *PCRYPT_SMIME_CAPABILITIES; /* size: 0x0010 */

struct CStdMarshal::Reactivate::__l3::tagServerRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0008 */ void** ppServer;
  /* 0x0010 */ struct _GUID* pIID;
}; /* size: 0x0018 */

typedef struct __midl_frag627_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag627_t, *P_midl_frag627_t; /* size: 0x0028 */

typedef struct _CRYPT_SMIME_CAPABILITY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_SMIME_CAPABILITY, *PCRYPT_SMIME_CAPABILITY; /* size: 0x0018 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlObject* m_Interface;
}; /* size: 0x0008 */

struct FORMATETCDATAARRAY32
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA32 _FormatEtcData[1];
}; /* size: 0x0038 */

typedef struct _CRYPT_PROPERTY_REF
{
  /* 0x0000 */ wchar_t* pszProperty;
  /* 0x0008 */ unsigned long cbValue;
  /* 0x000c */ long Padding_1367;
  /* 0x0010 */ unsigned char* pbValue;
} CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF; /* size: 0x0018 */

struct SMIPIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct MIPID mipid;
}; /* size: 0x0030 */

typedef struct _DSSSEED
{
  /* 0x0000 */ unsigned long counter;
  /* 0x0004 */ unsigned char seed[20];
} DSSSEED, *PDSSSEED; /* size: 0x0018 */

typedef struct _PUBKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ struct _DSSSEED DSSSeed;
} PUBKEYVER3, *PPUBKEYVER3; /* size: 0x0028 */

class CRotMonikerEnum
{
  /* 0x0000 */ long Padding_1368[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwOffset;
  /* 0x0010 */ class CMonikerPtrBuf _mkptrbuf;
}; /* size: 0x0030 */

typedef struct _CERT_LDAP_STORE_OPENED_PARA
{
  /* 0x0000 */ void* pvLdapSessionHandle;
  /* 0x0008 */ const wchar_t* pwszLdapUrl;
} CERT_LDAP_STORE_OPENED_PARA, *PCERT_LDAP_STORE_OPENED_PARA; /* size: 0x0010 */

struct NCryptProviderName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszComment;
}; /* size: 0x0010 */

class CContext
{
  /* 0x0000 */ unsigned long ctxid;
  /* 0x0004 */ long Padding_1369;
  /* 0x0008 */ class CBasedContextPtr pctxNext;
}; /* size: 0x0010 */

typedef struct _CERT_BIOMETRIC_DATA
{
  /* 0x0000 */ unsigned long dwTypeOfBiometricDataChoice;
  /* 0x0004 */ long Padding_1370;
  union
  {
    /* 0x0008 */ unsigned long dwPredefined;
    /* 0x0008 */ char* pszObjId;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct _CERT_HASHED_URL HashedUrl;
} CERT_BIOMETRIC_DATA, *PCERT_BIOMETRIC_DATA; /* size: 0x0040 */

struct DISABLED_FEATURES
{
  /* 0x0000 */ int fDisableAll;
  /* 0x0004 */ int fDisableTypelibs;
  /* 0x0008 */ int fDisableDispatch;
  /* 0x000c */ int fDisableAllForOle32;
  /* 0x0010 */ int fDisableDispatchForOle32;
}; /* size: 0x0014 */

typedef struct _CMS_DH_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ char* pszContentEncObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PubInfo;
  /* 0x0020 */ void* pReserved;
} CMS_DH_KEY_INFO, *PCMS_DH_KEY_INFO; /* size: 0x0028 */

class CDFBasis
{
  union
  {
    struct
    {
      /* 0x0000 */ class CBasedMStreamPtr _pms;
      /* 0x0008 */ class CBasedMStreamPtr _pmsScratch;
      /* 0x0010 */ struct ILockBytes* _plkbBase;
      /* 0x0018 */ struct CFileStream* _pfstDirty;
      /* 0x0020 */ struct ILockBytes* _plkbOriginal;
      /* 0x0028 */ const unsigned long _dfOpen;
      /* 0x002c */ long _cReferences;
      /* 0x0030 */ class CBasedPubDocFilePtr _pdfCopyBase;
      /* 0x0038 */ class CBasedGlobalContextPtr _pgcGlobalContext;
      /* 0x0040 */ unsigned long _dwOrigLocks;
      /* 0x0044 */ long Padding_1371;
      /* 0x0048 */ class CFreeList _afrl[4];
    }; /* size: 0x0064 */
    /* 0x0000 */ unsigned __int64 _aReserveSize[4];
  }; /* size: 0x0064 */
  /* 0x0064 */ long Padding_1372;
  /* 0x0068 */ int _fDirectWriterMode;
  /* 0x006c */ int _fWriteLocked;
  /* 0x0070 */ struct IMalloc* const _pMalloc;
}; /* size: 0x0078 */

typedef struct __midl_frag49_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ struct _NDR64_NO_REPEAT_FORMAT frag4;
    /* 0x0030 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
    /* 0x0038 */ struct _NDR64_POINTER_FORMAT frag6;
    /* 0x0048 */ unsigned char frag7;
    /* 0x0049 */ char __PADDING__[7];
  } /* size: 0x0048 */ frag2;
} _midl_frag49_t, *P_midl_frag49_t; /* size: 0x0050 */

struct IOrpcDebugNotifyVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* ClientGetBufferSize /* function */;
  /* 0x0020 */ void* ClientFillBuffer /* function */;
  /* 0x0028 */ void* ClientNotify /* function */;
  /* 0x0030 */ void* ServerNotify /* function */;
  /* 0x0038 */ void* ServerGetBufferSize /* function */;
  /* 0x0040 */ void* ServerFillBuffer /* function */;
}; /* size: 0x0048 */

typedef struct _CMC_ADD_EXTENSIONS_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x0010 */ unsigned long cExtension;
  /* 0x0014 */ long Padding_1373;
  /* 0x0018 */ struct _CERT_EXTENSION* rgExtension;
} CMC_ADD_EXTENSIONS_INFO, *PCMC_ADD_EXTENSIONS_INFO; /* size: 0x0020 */

typedef struct _CRYPT_RC2_CBC_PARAMETERS
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ int fIV;
  /* 0x0008 */ unsigned char rgbIV[8];
} CRYPT_RC2_CBC_PARAMETERS, *PCRYPT_RC2_CBC_PARAMETERS; /* size: 0x0010 */

typedef struct __midl_frag52_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag52_t, *P_midl_frag52_t; /* size: 0x0020 */

typedef struct _CERT_FORTEZZA_DATA_PROP
{
  /* 0x0000 */ unsigned char SerialNumber[8];
  /* 0x0008 */ int CertIndex;
  /* 0x000c */ unsigned char CertLabel[36];
} CERT_FORTEZZA_DATA_PROP, *PCERT_FORTEZZA_DATA_PROP; /* size: 0x0030 */

class CLock2
{
  /* 0x0000 */ class CMutexSem2& m_mxs;
}; /* size: 0x0008 */

typedef struct __midl_frag1087_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1087_t, *P_midl_frag1087_t; /* size: 0x0018 */

typedef struct _PUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
} PUBKEY, *PPUBKEY; /* size: 0x0008 */

struct IMarshalSomeone
{
}; /* size: 0x0008 */

typedef struct _CMSG_CONTENT_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1374;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long cRecipients;
  /* 0x0034 */ long Padding_1375;
  /* 0x0038 */ struct _CMSG_RECIPIENT_ENCODE_INFO* rgCmsRecipients;
  /* 0x0040 */ void* pfnAlloc /* function */;
  /* 0x0048 */ void* pfnFree /* function */;
  /* 0x0050 */ unsigned long dwEncryptFlags;
  /* 0x0054 */ long Padding_1376;
  union
  {
    /* 0x0058 */ unsigned __int64 hContentEncryptKey;
    /* 0x0058 */ void* hCNGContentEncryptKey;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long dwFlags;
  /* 0x0064 */ int fCNG;
  /* 0x0068 */ unsigned char* pbCNGContentEncryptKeyObject;
  /* 0x0070 */ unsigned char* pbContentEncryptKey;
  /* 0x0078 */ unsigned long cbContentEncryptKey;
  /* 0x007c */ long __PADDING__[1];
} CMSG_CONTENT_ENCRYPT_INFO, *PCMSG_CONTENT_ENCRYPT_INFO; /* size: 0x0080 */

typedef struct _CMSG_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  /* 0x0004 */ long Padding_1377;
  union
  {
    /* 0x0008 */ struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO* pKeyTrans;
    /* 0x0008 */ struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO* pKeyAgree;
    /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO* pMailList;
  }; /* size: 0x0008 */
} CMSG_RECIPIENT_ENCODE_INFO, *PCMSG_RECIPIENT_ENCODE_INFO; /* size: 0x0010 */

typedef struct __midl_frag340_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag340_t, *P_midl_frag340_t; /* size: 0x0010 */

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1378;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ unsigned __int64 hCryptProv;
  /* 0x0030 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0048 */ struct _CERT_ID RecipientId;
} CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO; /* size: 0x0070 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1379;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
  /* 0x0040 */ void* pvKeyWrapAuxInfo;
  /* 0x0048 */ unsigned __int64 hCryptProv;
  /* 0x0050 */ unsigned long dwKeySpec;
  /* 0x0054 */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0058 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pEphemeralAlgorithm;
    /* 0x0058 */ struct _CERT_ID* pSenderId;
  }; /* size: 0x0008 */
  /* 0x0060 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0070 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0074 */ long Padding_1380;
  /* 0x0078 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO; /* size: 0x0080 */

typedef struct __midl_frag1494_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1494_t, *P_midl_frag1494_t; /* size: 0x0028 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1381;
  /* 0x0008 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0020 */ struct _CERT_ID RecipientId;
  /* 0x0048 */ struct _FILETIME Date;
  /* 0x0050 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO; /* size: 0x0058 */

typedef struct __NCRYPT_UI_POLICY_BLOB
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cbCreationTitle;
  /* 0x000c */ unsigned long cbFriendlyName;
  /* 0x0010 */ unsigned long cbDescription;
} _NCRYPT_UI_POLICY_BLOB, *P_NCRYPT_UI_POLICY_BLOB; /* size: 0x0014 */

typedef struct _CERT_PRIVATE_KEY_VALIDITY
{
  /* 0x0000 */ struct _FILETIME NotBefore;
  /* 0x0008 */ struct _FILETIME NotAfter;
} CERT_PRIVATE_KEY_VALIDITY, *PCERT_PRIVATE_KEY_VALIDITY; /* size: 0x0010 */

typedef struct _CERT_X942_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB j;
  /* 0x0040 */ struct _CERT_X942_DH_VALIDATION_PARAMS* pValidationParams;
} CERT_X942_DH_PARAMETERS, *PCERT_X942_DH_PARAMETERS; /* size: 0x0048 */

class CExpParameterValidate
{
}; /* size: 0x0001 */

typedef struct __midl_frag757_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag757_t, *P_midl_frag757_t; /* size: 0x0028 */

typedef struct _CERT_X942_DH_VALIDATION_PARAMS
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB seed;
  /* 0x0018 */ unsigned long pgenCounter;
  /* 0x001c */ long __PADDING__[1];
} CERT_X942_DH_VALIDATION_PARAMS, *PCERT_X942_DH_VALIDATION_PARAMS; /* size: 0x0020 */

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION
{
  /* 0x0000 */ void* pfnCompletion /* function */;
  /* 0x0008 */ void* pvCompletion;
} CRYPT_ASYNC_RETRIEVAL_COMPLETION, *PCRYPT_ASYNC_RETRIEVAL_COMPLETION; /* size: 0x0010 */

typedef struct _OCSP_BASIC_REVOKED_INFO
{
  /* 0x0000 */ struct _FILETIME RevocationDate;
  /* 0x0008 */ unsigned long dwCrlReasonCode;
} OCSP_BASIC_REVOKED_INFO, *POCSP_BASIC_REVOKED_INFO; /* size: 0x000c */

struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>
{
  union
  {
    /* 0x0000 */ struct DISPATCH_CLIENT_FRAME* pNext;
    /* 0x0000 */ struct IFastStack<DISPATCH_CLIENT_FRAME>* g_pStack;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _CRYPT_DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[8];
  /* 0x0008 */ unsigned char IV[8];
  /* 0x0010 */ unsigned char Feedback[8];
} CRYPT_DES_KEY_STATE, *PCRYPT_DES_KEY_STATE; /* size: 0x0018 */

struct tagIFaceSvrRefs
{
  /* 0x0000 */ struct IRpcStubBuffer* pRpcStub;
  /* 0x0008 */ struct IRpcProxyBuffer* pRpcProxy;
  /* 0x0010 */ void* pServer;
  /* 0x0018 */ class CCtxChnl* pCtxChnl;
}; /* size: 0x0020 */

typedef struct _CMSG_CTRL_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1382;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ unsigned long dwRecipientIndex;
} CMSG_CTRL_DECRYPT_PARA, *PCMSG_CTRL_DECRYPT_PARA; /* size: 0x0018 */

typedef struct _CERT_POLICY_QUALIFIER_INFO
{
  /* 0x0000 */ char* pszPolicyQualifierId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Qualifier;
} CERT_POLICY_QUALIFIER_INFO, *PCERT_POLICY_QUALIFIER_INFO; /* size: 0x0018 */

typedef struct _NDR64_USER_MARSHAL_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short RoutineIndex;
  /* 0x0004 */ unsigned short TransmittedTypeWireAlignment;
  /* 0x0006 */ unsigned short MemoryAlignment;
  /* 0x0008 */ unsigned int UserTypeMemorySize;
  /* 0x000c */ unsigned int TransmittedTypeBufferSize;
  /* 0x0010 */ const void* TransmittedType;
} NDR64_USER_MARSHAL_FORMAT, *PNDR64_USER_MARSHAL_FORMAT; /* size: 0x0018 */

typedef struct __midl_frag1796_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1796_t, *P_midl_frag1796_t; /* size: 0x0020 */

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
} _BCRYPT_KEY_LENGTHS_STRUCT, *P_BCRYPT_KEY_LENGTHS_STRUCT; /* size: 0x000c */

typedef struct __NCRYPT_SUPPORTED_LENGTHS
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
  /* 0x000c */ unsigned long dwDefaultLength;
} _NCRYPT_SUPPORTED_LENGTHS, *P_NCRYPT_SUPPORTED_LENGTHS; /* size: 0x0010 */

class CBlockHeader
{
  /* 0x0000 */ long Padding_1383[4];
  /* 0x0010 */ unsigned __int64 _ulNext;
}; /* size: 0x0018 */

struct tagDDECALLDATA
{
  /* 0x0000 */ struct HWND__* hwndSvr;
  /* 0x0008 */ unsigned short wMsg;
  /* 0x000a */ char Padding_1384[6];
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
  /* 0x0020 */ struct HWND__* hwndCli;
  /* 0x0028 */ int fFreeOnError;
  /* 0x002c */ int fDone;
  /* 0x0030 */ class DDE_CHANNEL* pChannel;
}; /* size: 0x0038 */

class GenericInstantiator<DISPATCH_INTERCEPTOR>
{
}; /* size: 0x0001 */

typedef struct __midl_frag188_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag188_t, *P_midl_frag188_t; /* size: 0x0050 */

typedef struct _CERT_POLICY_MAPPING
{
  /* 0x0000 */ char* pszIssuerDomainPolicy;
  /* 0x0008 */ char* pszSubjectDomainPolicy;
} CERT_POLICY_MAPPING, *PCERT_POLICY_MAPPING; /* size: 0x0010 */

typedef struct __midl_frag298_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag298_t, *P_midl_frag298_t; /* size: 0x000c */

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_FUNCTION_CONFIG, *PCRYPT_CONTEXT_FUNCTION_CONFIG; /* size: 0x0008 */

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x0038 */ unsigned long dwSaltLength;
  /* 0x003c */ unsigned long dwTrailerField;
} CRYPT_RSA_SSA_PSS_PARAMETERS, *PCRYPT_RSA_SSA_PSS_PARAMETERS; /* size: 0x0040 */

struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
}; /* size: 0x00b8 */

typedef struct _CRL_FIND_ISSUED_FOR_PARA
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pSubjectCert;
  /* 0x0008 */ const struct _CERT_CONTEXT* pIssuerCert;
} CRL_FIND_ISSUED_FOR_PARA, *PCRL_FIND_ISSUED_FOR_PARA; /* size: 0x0010 */

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1385;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_1386;
  /* 0x0018 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
  /* 0x0020 */ unsigned long dwRecipientIndex;
  /* 0x0024 */ unsigned long dwRecipientEncryptedKeyIndex;
  /* 0x0028 */ struct _CRYPT_BIT_BLOB OriginatorPublicKey;
} CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA; /* size: 0x0040 */

typedef struct _CERT_AUTHORITY_INFO_ACCESS
{
  /* 0x0000 */ unsigned long cAccDescr;
  /* 0x0004 */ long Padding_1387;
  /* 0x0008 */ struct _CERT_ACCESS_DESCRIPTION* rgAccDescr;
} CERT_AUTHORITY_INFO_ACCESS, *PCERT_AUTHORITY_INFO_ACCESS; /* size: 0x0010 */

struct IEnumConnectionPointsVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef struct __midl_frag1529_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0088 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0098 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a8 */ struct _NDR64_PARAM_FORMAT frag11;
} _midl_frag1529_t, *P_midl_frag1529_t; /* size: 0x00b8 */

typedef struct _CERT_GENERAL_SUBTREE
{
  /* 0x0000 */ struct _CERT_ALT_NAME_ENTRY Base;
  /* 0x0018 */ unsigned long dwMinimum;
  /* 0x001c */ int fMaximum;
  /* 0x0020 */ unsigned long dwMaximum;
  /* 0x0024 */ long __PADDING__[1];
} CERT_GENERAL_SUBTREE, *PCERT_GENERAL_SUBTREE; /* size: 0x0028 */

typedef struct __midl_frag1664_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1664_t, *P_midl_frag1664_t; /* size: 0x0010 */

typedef struct __midl_frag387_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag387_t, *P_midl_frag387_t; /* size: 0x0020 */

typedef struct _CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ void* pvExtraPolicyPara;
} CERT_CHAIN_POLICY_PARA, *PCERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

typedef struct _CMC_TAGGED_REQUEST
{
  /* 0x0000 */ unsigned long dwTaggedRequestChoice;
  /* 0x0004 */ long Padding_1388;
  /* 0x0008 */ struct _CMC_TAGGED_CERT_REQUEST* pTaggedCertRequest;
} CMC_TAGGED_REQUEST, *PCMC_TAGGED_REQUEST; /* size: 0x0010 */

struct INTERPRETER_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char FullPtrUsed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char RpcSsAllocUsed : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ObjectProc : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasRpcFlags : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char IgnoreObjectException : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasCommOrFault : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char UseNewInitRoutines : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnType;

typedef struct _CMS_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned char* pbOID;
  /* 0x0010 */ unsigned long cbOID;
  /* 0x0014 */ long __PADDING__[1];
} CMS_KEY_INFO, *PCMS_KEY_INFO; /* size: 0x0018 */

typedef struct _SQM_STREAM_ENTRY
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1389;
  union
  {
    union
    {
      /* 0x0008 */ const wchar_t* pwszVal;
      /* 0x0008 */ unsigned long dwVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ val;
} SQM_STREAM_ENTRY, *PSQM_STREAM_ENTRY; /* size: 0x0010 */

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwExemptSeconds;
  /* 0x0008 */ struct _FILETIME ExpireTime;
} CRYPTNET_URL_CACHE_FLUSH_INFO, *PCRYPTNET_URL_CACHE_FLUSH_INFO; /* size: 0x0010 */

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x0038 */ struct _CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
} CRYPT_RSAES_OAEP_PARAMETERS, *PCRYPT_RSAES_OAEP_PARAMETERS; /* size: 0x0050 */

class CTransactedStream
{
  /* 0x0000 */ long Padding_1390[28];
  /* 0x0070 */ unsigned __int64 _ulSize;
  /* 0x0078 */ class CBasedSStreamPtr _pssBase;
  /* 0x0080 */ unsigned long _sectLastUsed;
  /* 0x0084 */ long Padding_1391;
  /* 0x0088 */ class CDeltaList _dl;
  /* 0x00b8 */ unsigned long _df;
  /* 0x00bc */ int _fBeginCommit;
  /* 0x00c0 */ class CBasedDeltaListPtr _pdlOld;
  /* 0x00c8 */ unsigned __int64 _ulOldSize;
}; /* size: 0x00d0 */

typedef struct _prop_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[25];
  /* 0x001d */ char __PADDING__[3];
} prop_MIDL_EXPR_FORMAT_STRING, *Pprop_MIDL_EXPR_FORMAT_STRING; /* size: 0x0020 */

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CERT_ALT_NAME_INFO AuthorityCertIssuer;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
} CERT_AUTHORITY_KEY_ID2_INFO, *PCERT_AUTHORITY_KEY_ID2_INFO; /* size: 0x0030 */

typedef struct _CRYPT_CONTEXT_FUNCTIONS
{
  /* 0x0000 */ unsigned long cFunctions;
  /* 0x0004 */ long Padding_1392;
  /* 0x0008 */ wchar_t** rgpszFunctions;
} CRYPT_CONTEXT_FUNCTIONS, *PCRYPT_CONTEXT_FUNCTIONS; /* size: 0x0010 */

class CDwordBag
{
  /* 0x0000 */ long Padding_1393[6];
  /* 0x0018 */ unsigned long _dwSlotsUsed;
}; /* size: 0x0020 */

typedef struct _CRYPT_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ void* pfnGetSignerCertificate /* function */;
  /* 0x0018 */ void* pvGetArg;
} CRYPT_VERIFY_MESSAGE_PARA, *PCRYPT_VERIFY_MESSAGE_PARA; /* size: 0x0020 */

struct SHA256_CTX
{
  union
  {
    /* 0x0000 */ unsigned __int64 state64[4];
    /* 0x0000 */ unsigned long state[8];
  }; /* size: 0x0020 */
  /* 0x0020 */ unsigned long count[2];
  /* 0x0028 */ unsigned char buffer[64];
}; /* size: 0x0068 */

typedef struct _CERT_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1394;
  /* 0x0008 */ struct _CERT_USAGE_MATCH RequestedUsage;
} CERT_CHAIN_PARA, *PCERT_CHAIN_PARA; /* size: 0x0020 */

typedef struct __midl_frag1432_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1432_t, *P_midl_frag1432_t; /* size: 0x0028 */

typedef struct __midl_frag554_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag554_t, *P_midl_frag554_t; /* size: 0x0038 */

class CSpyTable
{
  /* 0x0000 */ unsigned long m_cAllocations;
  /* 0x0004 */ long Padding_1395;
  /* 0x0008 */ struct AENTRY* m_table;
  /* 0x0010 */ unsigned long m_cEntries;
}; /* size: 0x0018 */

class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUTF8_STRING> >
{
}; /* size: 0x0001 */

struct DedicatedAllocator<DISPATCH_SERVER_FRAME>
{
  union
  {
    /* 0x0000 */ struct DISPATCH_SERVER_FRAME* pNext;
    /* 0x0000 */ struct IFastStack<DISPATCH_SERVER_FRAME>* g_pStack;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct __midl_frag1640_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag10;
    /* 0x0070 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag11;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag12;
  } /* size: 0x0068 */ frag2;
} _midl_frag1640_t, *P_midl_frag1640_t; /* size: 0x0088 */

typedef struct __midl_frag1612_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1612_t, *P_midl_frag1612_t; /* size: 0x0018 */

typedef struct __midl_frag45_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag45_t, *P_midl_frag45_t; /* size: 0x0020 */

typedef struct __midl_frag227_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag227_t, *P_midl_frag227_t; /* size: 0x000c */

typedef struct _BCRYPT_CIPHER_FUNCTION_TABLE
{
  /* 0x0000 */ struct _BCRYPT_INTERFACE_VERSION Version;
  /* 0x0004 */ long Padding_1396;
  /* 0x0008 */ void* OpenAlgorithmProvider /* function */;
  /* 0x0010 */ void* GetProperty /* function */;
  /* 0x0018 */ void* SetProperty /* function */;
  /* 0x0020 */ void* CloseAlgorithmProvider /* function */;
  /* 0x0028 */ void* GenerateKey /* function */;
  /* 0x0030 */ void* Encrypt /* function */;
  /* 0x0038 */ void* Decrypt /* function */;
  /* 0x0040 */ void* ImportKey /* function */;
  /* 0x0048 */ void* ExportKey /* function */;
  /* 0x0050 */ void* DuplicateKey /* function */;
  /* 0x0058 */ void* DestroyKey /* function */;
} BCRYPT_CIPHER_FUNCTION_TABLE, *PBCRYPT_CIPHER_FUNCTION_TABLE; /* size: 0x0060 */

typedef struct __midl_frag206_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag206_t, *P_midl_frag206_t; /* size: 0x0020 */

typedef struct __midl_frag51_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_MEMPAD_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag5;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag6;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0068 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag8;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag10;
  } /* size: 0x0068 */ frag2;
} _midl_frag51_t, *P_midl_frag51_t; /* size: 0x0088 */

typedef struct _CMSG_HASHED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1397;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
} CMSG_HASHED_ENCODE_INFO, *PCMSG_HASHED_ENCODE_INFO; /* size: 0x0030 */

typedef struct _CRYPT_BLOB_ARRAY
{
  /* 0x0000 */ unsigned long cBlob;
  /* 0x0004 */ long Padding_1398;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgBlob;
} CRYPT_BLOB_ARRAY, *PCRYPT_BLOB_ARRAY; /* size: 0x0010 */

typedef struct __midl_frag1695_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1695_t, *P_midl_frag1695_t; /* size: 0x000c */

struct SFreeBlock
{
  /* 0x0000 */ class CBasedFreeBlockPtr pfbNext;
}; /* size: 0x0008 */

struct tagCATEGORYINFO
{
  /* 0x0000 */ struct _GUID catid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ wchar_t szDescription[128];
}; /* size: 0x0114 */

typedef struct _CERT_REVOCATION_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwIndex;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReason;
  /* 0x0010 */ int fHasFreshnessTime;
  /* 0x0014 */ unsigned long dwFreshnessTime;
} CERT_REVOCATION_STATUS, *PCERT_REVOCATION_STATUS; /* size: 0x0018 */

typedef struct _RSAPUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
  /* 0x0008 */ unsigned long pubexp;
} RSAPUBKEY, *PRSAPUBKEY; /* size: 0x000c */

typedef struct _EVENT_TRACE_PROPERTIES
{
  /* 0x0000 */ struct _WNODE_HEADER Wnode;
  /* 0x0030 */ unsigned long BufferSize;
  /* 0x0034 */ unsigned long MinimumBuffers;
  /* 0x0038 */ unsigned long MaximumBuffers;
  /* 0x003c */ unsigned long MaximumFileSize;
  /* 0x0040 */ unsigned long LogFileMode;
  /* 0x0044 */ unsigned long FlushTimer;
  /* 0x0048 */ unsigned long EnableFlags;
  /* 0x004c */ long AgeLimit;
  /* 0x0050 */ unsigned long NumberOfBuffers;
  /* 0x0054 */ unsigned long FreeBuffers;
  /* 0x0058 */ unsigned long EventsLost;
  /* 0x005c */ unsigned long BuffersWritten;
  /* 0x0060 */ unsigned long LogBuffersLost;
  /* 0x0064 */ unsigned long RealTimeBuffersLost;
  /* 0x0068 */ void* LoggerThreadId;
  /* 0x0070 */ unsigned long LogFileNameOffset;
  /* 0x0074 */ unsigned long LoggerNameOffset;
} EVENT_TRACE_PROPERTIES, *PEVENT_TRACE_PROPERTIES; /* size: 0x0078 */

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
} CMSG_SP3_COMPATIBLE_AUX_INFO, *PCMSG_SP3_COMPATIBLE_AUX_INFO; /* size: 0x0008 */

typedef struct _CERT_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
} CERT_DH_PARAMETERS, *PCERT_DH_PARAMETERS; /* size: 0x0020 */

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS
{
  /* 0x0000 */ unsigned __int64 hCryptProv;
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ long Padding_1399;
  /* 0x0010 */ char* pszPrivateKeyObjId;
  /* 0x0018 */ void* pEncryptPrivateKeyFunc /* function */;
  /* 0x0020 */ void* pVoidEncryptFunc;
} CRYPT_PKCS8_EXPORT_PARAMS, *PCRYPT_PKCS8_EXPORT_PARAMS; /* size: 0x0028 */

typedef struct __midl_frag1136_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1136_t, *P_midl_frag1136_t; /* size: 0x0038 */

typedef struct __midl_frag629_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag629_t, *P_midl_frag629_t; /* size: 0x0038 */

typedef struct _PROV_ENUMALGS
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwBitLen;
  /* 0x0008 */ unsigned long dwNameLen;
  /* 0x000c */ char szName[20];
} PROV_ENUMALGS, *PPROV_ENUMALGS; /* size: 0x0020 */

typedef struct _CRL_ISSUING_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x0018 */ int fOnlyContainsUserCerts;
  /* 0x001c */ int fOnlyContainsCACerts;
  /* 0x0020 */ struct _CRYPT_BIT_BLOB OnlySomeReasonFlags;
  /* 0x0038 */ int fIndirectCRL;
  /* 0x003c */ long __PADDING__[1];
} CRL_ISSUING_DIST_POINT, *PCRL_ISSUING_DIST_POINT; /* size: 0x0040 */

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO
{
  /* 0x0000 */ unsigned long cCertPolicyId;
  /* 0x0004 */ long Padding_1400;
  /* 0x0008 */ struct _CERT_POLICY_ID* rgCertPolicyId;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB RestrictedKeyUsage;
} CERT_KEY_USAGE_RESTRICTION_INFO, *PCERT_KEY_USAGE_RESTRICTION_INFO; /* size: 0x0028 */

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB blob;
} CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x0018 */

typedef struct _PRIVKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ unsigned long bitlenX;
  /* 0x0014 */ struct _DSSSEED DSSSeed;
} PRIVKEYVER3, *PPRIVKEYVER3; /* size: 0x002c */

typedef struct _CRL_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB ReasonFlags;
  /* 0x0030 */ struct _CERT_ALT_NAME_INFO CRLIssuer;
} CRL_DIST_POINT, *PCRL_DIST_POINT; /* size: 0x0040 */

typedef struct _CMSG_STREAM_INFO
{
  /* 0x0000 */ unsigned long cbContent;
  /* 0x0004 */ long Padding_1401;
  /* 0x0008 */ void* pfnStreamOutput /* function */;
  /* 0x0010 */ void* pvArg;
} CMSG_STREAM_INFO, *PCMSG_STREAM_INFO; /* size: 0x0018 */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnType
{
  /* 0x0000 */ class Windows::Auto<_LUNICODE_STRING>* m_pauto;
}; /* size: 0x0008 */

typedef struct _CERT_KEY_ATTRIBUTES_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB IntendedKeyUsage;
  /* 0x0028 */ struct _CERT_PRIVATE_KEY_VALIDITY* pPrivateKeyUsagePeriod;
} CERT_KEY_ATTRIBUTES_INFO, *PCERT_KEY_ATTRIBUTES_INFO; /* size: 0x0030 */

struct tagDDEDISPATCHDATA
{
  /* 0x0000 */ long Padding_1402[2];
  /* 0x0008 */ class CDdeObject* pCDdeObject;
  /* 0x0010 */ unsigned int iArg;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1403;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO; /* size: 0x0018 */

typedef struct _CRL_REVOCATION_INFO
{
  /* 0x0000 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0008 */ const struct _CRL_CONTEXT* pCrlContext;
  /* 0x0010 */ const struct _CERT_CHAIN_CONTEXT* pCrlIssuerChain;
} CRL_REVOCATION_INFO, *PCRL_REVOCATION_INFO; /* size: 0x0018 */

typedef struct _ROOT_INFO_LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} ROOT_INFO_LUID, *PROOT_INFO_LUID; /* size: 0x0008 */

typedef struct _CRYPT_SMART_CARD_ROOT_INFO
{
  /* 0x0000 */ unsigned char rgbCardID[16];
  /* 0x0010 */ struct _ROOT_INFO_LUID luid;
} CRYPT_SMART_CARD_ROOT_INFO, *PCRYPT_SMART_CARD_ROOT_INFO; /* size: 0x0018 */

class C2Security
{
  /* 0x0000 */ int m_bProtectionMode;
}; /* size: 0x0004 */

class CArray<CFormatEtc>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_1404;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CFormatEtc>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

struct MD_PARAM
{
  /* 0x0000 */ int m_fCanShare;
  /* 0x0004 */ int m_fMayHaveInterfacePointers;
}; /* size: 0x0008 */

typedef struct _CRYPTPROTECT_PROMPTSTRUCT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwPromptFlags;
  /* 0x0008 */ struct HWND__* hwndApp;
  /* 0x0010 */ const wchar_t* szPrompt;
} CRYPTPROTECT_PROMPTSTRUCT, *PCRYPTPROTECT_PROMPTSTRUCT; /* size: 0x0018 */

typedef struct __midl_frag88_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag88_t, *P_midl_frag88_t; /* size: 0x000c */

typedef struct __midl_frag34_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag34_t, *P_midl_frag34_t; /* size: 0x0008 */

struct IOlePackagerLinkNotify
{
}; /* size: 0x0008 */

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1405;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ unsigned long dwSignerIndex;
  /* 0x0014 */ unsigned long dwSignerType;
  /* 0x0018 */ void* pvSigner;
} CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA; /* size: 0x0020 */

typedef struct _CRYPT_X942_OTHER_INFO
{
  /* 0x0000 */ char* pszContentEncryptionObjId;
  /* 0x0008 */ unsigned char rgbCounter[4];
  /* 0x000c */ unsigned char rgbKeyLength[4];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PubInfo;
} CRYPT_X942_OTHER_INFO, *PCRYPT_X942_OTHER_INFO; /* size: 0x0020 */

typedef struct _CMC_TAGGED_OTHER_MSG
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1406;
  /* 0x0008 */ char* pszObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CMC_TAGGED_OTHER_MSG, *PCMC_TAGGED_OTHER_MSG; /* size: 0x0020 */

typedef struct _CPS_URLS
{
  /* 0x0000 */ wchar_t* pszURL;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pAlgorithm;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* pDigest;
} CPS_URLS, *PCPS_URLS; /* size: 0x0018 */

class CWrappedDocFile
{
  /* 0x0000 */ long Padding_1407[28];
  /* 0x0070 */ unsigned long _df;
  /* 0x0074 */ long Padding_1408;
  /* 0x0078 */ class CBasedDocFilePtr _pdfBase;
  /* 0x0080 */ class CUpdateList _ulChanged;
  /* 0x0090 */ class CUpdateList _ulChangedHolder;
  /* 0x00a0 */ class CUpdateList _ulChangedOld;
  /* 0x00b0 */ class CTSSet _tssDeletedHolder;
  /* 0x00b8 */ class CTransactedTimeEntry _tten;
  /* 0x00d0 */ class CBasedPubDocFilePtr _ppubdf;
  /* 0x00d8 */ struct _GUID _clsid;
  /* 0x00e8 */ unsigned long _grfStateBits;
  /* 0x00ec */ long Padding_1409;
  /* 0x00f0 */ const class CBasedDFBasisPtr _pdfb;
  /* 0x00f8 */ unsigned short _fDirty;
  /* 0x00fa */ unsigned char _fBeginCommit;
}; /* size: 0x0100 */

typedef struct _OLETARGETDEVICE
{
  /* 0x0000 */ unsigned short otdDeviceNameOffset;
  /* 0x0002 */ unsigned short otdDriverNameOffset;
  /* 0x0004 */ unsigned short otdPortNameOffset;
  /* 0x0006 */ unsigned short otdExtDevmodeOffset;
  /* 0x0008 */ unsigned short otdExtDevmodeSize;
  /* 0x000a */ unsigned short otdEnvironmentOffset;
  /* 0x000c */ unsigned short otdEnvironmentSize;
  /* 0x000e */ unsigned char otdData[1];
  /* 0x000f */ char __PADDING__[1];
} OLETARGETDEVICE, *POLETARGETDEVICE; /* size: 0x0010 */

class CsCatInfo
{
  /* 0x0000 */ long Padding_1410[2];
  /* 0x0008 */ unsigned long m_uRefs;
  /* 0x000c */ unsigned long m_cCalls;
  /* 0x0010 */ struct ICatInformation** m_pICatInfo;
  /* 0x0018 */ unsigned long m_cICatInfo;
  /* 0x001c */ long Padding_1411;
  /* 0x0020 */ struct HINSTANCE__* m_hInstCstore;
}; /* size: 0x0028 */

struct INFO
{
  /* 0x0000 */ int fUsed;
  /* 0x0004 */ unsigned long dwConnection;
  /* 0x0008 */ unsigned short cf;
  /* 0x000a */ char Padding_1412[2];
  /* 0x000c */ unsigned long grfAdvf;
}; /* size: 0x0010 */

typedef struct __NCRYPT_UI_POLICY
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* pszCreationTitle;
  /* 0x0010 */ const wchar_t* pszFriendlyName;
  /* 0x0018 */ const wchar_t* pszDescription;
} _NCRYPT_UI_POLICY, *P_NCRYPT_UI_POLICY; /* size: 0x0020 */

typedef struct __midl_frag365_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag365_t, *P_midl_frag365_t; /* size: 0x0028 */

typedef struct _CRYPT_URL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSyncDeltaTime;
  /* 0x0008 */ unsigned long cGroup;
  /* 0x000c */ long Padding_1413;
  /* 0x0010 */ unsigned long* rgcGroupEntry;
} CRYPT_URL_INFO, *PCRYPT_URL_INFO; /* size: 0x0018 */

class CDirectStream
{
  /* 0x0000 */ long Padding_1414[4];
  /* 0x0010 */ class CStmHandle _stmh;
  /* 0x0020 */ class CStreamCache _stmc;
  /* 0x00b0 */ unsigned __int64 _ulSize;
  /* 0x00b8 */ unsigned __int64 _ulOldSize;
  /* 0x00c0 */ class CBasedDeltaListPtr _pdlHolder;
}; /* size: 0x00c8 */

class Windows::Lock<_RTL_CRITICAL_SECTION>
{
}; /* size: 0x0030 */

typedef struct _ACTRL_PROPERTY_ENTRYW
{
  /* 0x0000 */ wchar_t* lpProperty;
  /* 0x0008 */ struct _ACTRL_ACCESS_ENTRY_LISTW* pAccessEntryList;
  /* 0x0010 */ unsigned long fListFlags;
  /* 0x0014 */ long __PADDING__[1];
} ACTRL_PROPERTY_ENTRYW, *PACTRL_PROPERTY_ENTRYW; /* size: 0x0018 */

typedef struct __midl_frag105_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag105_t, *P_midl_frag105_t; /* size: 0x000c */

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1415;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  /* 0x0018 */ unsigned long dwRecipientIndex;
  /* 0x001c */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0020 */ unsigned __int64 hKeyEncryptionKey;
    /* 0x0020 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0008 */
} CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA; /* size: 0x0028 */

struct tagDOCDISPATCHDATA
{
  /* 0x0000 */ long Padding_1416[2];
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned long msg;
  /* 0x0014 */ long Padding_1417;
  /* 0x0018 */ unsigned __int64 wParam;
  /* 0x0020 */ __int64 lParam;
  /* 0x0028 */ void* hdata;
  /* 0x0030 */ unsigned short aItem;
  /* 0x0032 */ char Padding_1418[6];
  /* 0x0038 */ class CDefClient* lpclient;
}; /* size: 0x0040 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1419;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0040 */ struct _FILETIME Date;
  /* 0x0048 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_INFO, *PCMSG_MAIL_LIST_RECIPIENT_INFO; /* size: 0x0050 */

class MapEnumToSQMData<enum Ole32SQMFlags>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_CONTEXTS
{
  /* 0x0000 */ unsigned long cContexts;
  /* 0x0004 */ long Padding_1420;
  /* 0x0008 */ wchar_t** rgpszContexts;
} CRYPT_CONTEXTS, *PCRYPT_CONTEXTS; /* size: 0x0010 */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::COperatorAmpersandReturnTypeConst;

typedef struct __midl_frag87_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag87_t, *P_midl_frag87_t; /* size: 0x0050 */

class CMonikerBag
{
}; /* size: 0x0020 */

struct SNameKey
{
  /* 0x0000 */ const struct _GUID* pIpid;
  /* 0x0008 */ struct tagSECURITYBINDING* pName;
}; /* size: 0x0010 */

struct IFileLockBytes
{
}; /* size: 0x0008 */

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnType;

struct LockingStack<CallFrame>
{
  /* 0x0000 */ long Padding_1421[2];
  /* 0x0008 */ class CallFrame* m_p;
  /* 0x0010 */ class XLOCK m_lock;
}; /* size: 0x0040 */

class CSessionMoniker
{
  /* 0x0000 */ long Padding_1422[12];
  /* 0x0030 */ unsigned long m_sessionid;
  /* 0x0034 */ int m_bUseConsoleSession;
  /* 0x0038 */ int m_bHaveBindOpts;
  /* 0x003c */ long Padding_1423;
  /* 0x0040 */ struct tagBIND_OPTS2 m_bindopts2;
}; /* size: 0x0068 */

class CUnwindable
{
}; /* size: 0x0001 */

struct InFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 SavedRbp;
  /* 0x0028 */ unsigned __int64 SavedRsi;
  /* 0x0030 */ unsigned __int64 SavedRdi;
}; /* size: 0x0038 */

typedef struct __midl_frag281_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag281_t, *P_midl_frag281_t; /* size: 0x0010 */

typedef struct _SYMBOL_INFO_PACKAGE
{
  /* 0x0000 */ struct _SYMBOL_INFO si;
  /* 0x0058 */ char name[2001];
  /* 0x0829 */ char __PADDING__[7];
} SYMBOL_INFO_PACKAGE, *PSYMBOL_INFO_PACKAGE; /* size: 0x0830 */

typedef struct _MINIDUMP_HEADER
{
  /* 0x0000 */ unsigned int Signature;
  /* 0x0004 */ unsigned int Version;
  /* 0x0008 */ unsigned int NumberOfStreams;
  /* 0x000c */ unsigned long StreamDirectoryRva;
  /* 0x0010 */ unsigned int CheckSum;
  union
  {
    /* 0x0014 */ unsigned int Reserved;
    /* 0x0014 */ unsigned int TimeDateStamp;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned __int64 Flags;
} MINIDUMP_HEADER, *PMINIDUMP_HEADER; /* size: 0x0020 */

typedef struct __midl_frag270_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag270_t, *P_midl_frag270_t; /* size: 0x000c */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1424;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ wchar_t FileName[261];
  /* 0x0222 */ unsigned char Reparse;
  /* 0x0223 */ char Padding_1425[5];
  /* 0x0228 */ void* hFile;
  /* 0x0230 */ unsigned long Flags;
  /* 0x0234 */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOADW64, *PIMAGEHLP_DEFERRED_SYMBOL_LOADW64; /* size: 0x0238 */

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0008 */ struct _GUID* SubjectType;
  /* 0x0010 */ void* Subject;
} WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT, *PWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT; /* size: 0x0018 */

typedef struct __midl_frag698_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag698_t, *P_midl_frag698_t; /* size: 0x000c */

typedef struct __midl_frag220_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag220_t, *P_midl_frag220_t; /* size: 0x0040 */

typedef struct _IMAGEHLP_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1426;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ char Name[1];
  /* 0x001d */ char __PADDING__[3];
} IMAGEHLP_SYMBOL64, *PIMAGEHLP_SYMBOL64; /* size: 0x0020 */

typedef struct _CAT_MEMBERINFO
{
  /* 0x0000 */ wchar_t* pwszSubjGuid;
  /* 0x0008 */ unsigned long dwCertVersion;
  /* 0x000c */ long __PADDING__[1];
} CAT_MEMBERINFO, *PCAT_MEMBERINFO; /* size: 0x0010 */

typedef struct __midl_frag277_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag277_t, *P_midl_frag277_t; /* size: 0x0040 */

typedef struct _MINIDUMP_STRING
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ wchar_t* Buffer /* zero-length array */;
} MINIDUMP_STRING, *PMINIDUMP_STRING; /* size: 0x0004 */

typedef struct __midl_frag40_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag40_t, *P_midl_frag40_t; /* size: 0x0020 */

struct WINTRUST_BLOB_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ long Padding_1427;
  /* 0x0018 */ const wchar_t* pcwszDisplayName;
  /* 0x0020 */ unsigned long cbMemObject;
  /* 0x0024 */ long Padding_1428;
  /* 0x0028 */ unsigned char* pbMemObject;
  /* 0x0030 */ unsigned long cbMemSignedMsg;
  /* 0x0034 */ long Padding_1429;
  /* 0x0038 */ unsigned char* pbMemSignedMsg;
}; /* size: 0x0040 */

typedef struct _CRYPT_PROVIDER_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1430;
  /* 0x0008 */ struct _WINTRUST_DATA* pWintrustData;
  /* 0x0010 */ int fOpenedFile;
  /* 0x0014 */ long Padding_1431;
  /* 0x0018 */ struct HWND__* hWndParent;
  /* 0x0020 */ struct _GUID* pgActionID;
  /* 0x0028 */ unsigned __int64 hProv;
  /* 0x0030 */ unsigned long dwError;
  /* 0x0034 */ unsigned long dwRegSecuritySettings;
  /* 0x0038 */ unsigned long dwRegPolicySettings;
  /* 0x003c */ long Padding_1432;
  /* 0x0040 */ struct _CRYPT_PROVIDER_FUNCTIONS* psPfns;
  /* 0x0048 */ unsigned long cdwTrustStepErrors;
  /* 0x004c */ long Padding_1433;
  /* 0x0050 */ unsigned long* padwTrustStepErrors;
  /* 0x0058 */ unsigned long chStores;
  /* 0x005c */ long Padding_1434;
  /* 0x0060 */ void** pahStores;
  /* 0x0068 */ unsigned long dwEncoding;
  /* 0x006c */ long Padding_1435;
  /* 0x0070 */ void* hMsg;
  /* 0x0078 */ unsigned long csSigners;
  /* 0x007c */ long Padding_1436;
  /* 0x0080 */ struct _CRYPT_PROVIDER_SGNR* pasSigners;
  /* 0x0088 */ unsigned long csProvPrivData;
  /* 0x008c */ long Padding_1437;
  /* 0x0090 */ struct _CRYPT_PROVIDER_PRIVDATA* pasProvPrivData;
  /* 0x0098 */ unsigned long dwSubjectChoice;
  /* 0x009c */ long Padding_1438;
  /* 0x00a0 */ struct _PROVDATA_SIP* pPDSip;
  /* 0x00a8 */ char* pszUsageOID;
  /* 0x00b0 */ int fRecallWithState;
  /* 0x00b4 */ struct _FILETIME sftSystemTime;
  /* 0x00bc */ long Padding_1439;
  /* 0x00c0 */ char* pszCTLSignerUsageOID;
  /* 0x00c8 */ unsigned long dwProvFlags;
  /* 0x00cc */ unsigned long dwFinalError;
  /* 0x00d0 */ struct _CERT_USAGE_MATCH* pRequestUsage;
  /* 0x00d8 */ unsigned long dwTrustPubSettings;
  /* 0x00dc */ unsigned long dwUIStateFlags;
} CRYPT_PROVIDER_DATA, *PCRYPT_PROVIDER_DATA; /* size: 0x00e0 */

struct tagXAptAddRefData
{
  /* 0x0000 */ unsigned short cIfs;
  /* 0x0002 */ char Padding_1440[6];
  /* 0x0008 */ struct tagREMINTERFACEREF* pIfRefs;
  /* 0x0010 */ HRESULT* pResults;
  /* 0x0018 */ class CRemoteUnknown* pRemUnk;
}; /* size: 0x0020 */

typedef struct __midl_frag1488_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1488_t, *P_midl_frag1488_t; /* size: 0x0028 */

struct A_SHA_CTX
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 buffer64[8];
      /* 0x0000 */ unsigned char buffer[64];
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ u;
  /* 0x0040 */ unsigned long state[5];
  /* 0x0054 */ unsigned long count[2];
  /* 0x005c */ long __PADDING__[1];
}; /* size: 0x0060 */

typedef struct __midl_frag268_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag268_t, *P_midl_frag268_t; /* size: 0x0040 */

struct WINTRUST_CERT_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1441;
  /* 0x0008 */ const wchar_t* pcwszDisplayName;
  /* 0x0010 */ struct _CERT_CONTEXT* psCertContext;
  /* 0x0018 */ unsigned long chStores;
  /* 0x001c */ long Padding_1442;
  /* 0x0020 */ void** pahStores;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ long Padding_1443;
  /* 0x0030 */ struct _FILETIME* psftVerifyAsOf;
}; /* size: 0x0038 */

typedef struct __midl_frag1149_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1149_t, *P_midl_frag1149_t; /* size: 0x0038 */

typedef struct __midl_frag1694_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1694_t, *P_midl_frag1694_t; /* size: 0x0020 */

typedef struct __midl_frag611_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag611_t, *P_midl_frag611_t; /* size: 0x0020 */

typedef struct __midl_frag161_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag161_t, *P_midl_frag161_t; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_PRIVDATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gProviderID;
  /* 0x0014 */ unsigned long cbProvData;
  /* 0x0018 */ void* pvProvData;
} CRYPT_PROVIDER_PRIVDATA, *PCRYPT_PROVIDER_PRIVDATA; /* size: 0x0020 */

typedef struct __midl_frag254_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag254_t, *P_midl_frag254_t; /* size: 0x0058 */

typedef struct __midl_frag1335_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1335_t, *P_midl_frag1335_t; /* size: 0x0038 */

typedef struct __midl_frag261_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag261_t, *P_midl_frag261_t; /* size: 0x0038 */

typedef struct _CRYPT_PROVUI_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwFinalError;
  /* 0x0008 */ wchar_t* pYesButtonText;
  /* 0x0010 */ wchar_t* pNoButtonText;
  /* 0x0018 */ wchar_t* pMoreInfoButtonText;
  /* 0x0020 */ wchar_t* pAdvancedLinkText;
  /* 0x0028 */ wchar_t* pCopyActionText;
  /* 0x0030 */ wchar_t* pCopyActionTextNoTS;
  /* 0x0038 */ wchar_t* pCopyActionTextNotSigned;
} CRYPT_PROVUI_DATA, *PCRYPT_PROVUI_DATA; /* size: 0x0040 */

typedef struct __midl_frag749_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag749_t, *P_midl_frag749_t; /* size: 0x0028 */

struct SIP_DISPATCH_INFO_;

struct SIP_SUBJECTINFO_;

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0008 */ struct _WIN_CERTIFICATE* lpCertificate;
} WIN_SPUB_TRUSTED_PUBLISHER_DATA, *PWIN_SPUB_TRUSTED_PUBLISHER_DATA; /* size: 0x0010 */

typedef struct __midl_frag1312_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1312_t, *P_midl_frag1312_t; /* size: 0x0048 */

struct SPC_SIGINFO_
{
  /* 0x0000 */ unsigned long dwSipVersion;
  /* 0x0004 */ struct _GUID gSIPGuid;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ unsigned long dwReserved3;
  /* 0x0020 */ unsigned long dwReserved4;
  /* 0x0024 */ unsigned long dwReserved5;
}; /* size: 0x0028 */

typedef struct __midl_frag745_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag745_t, *P_midl_frag745_t; /* size: 0x0048 */

typedef struct _IMAGEHLP_CBA_READ_MEMORY
{
  /* 0x0000 */ unsigned __int64 addr;
  /* 0x0008 */ void* buf;
  /* 0x0010 */ unsigned long bytes;
  /* 0x0014 */ long Padding_1444;
  /* 0x0018 */ unsigned long* bytesread;
} IMAGEHLP_CBA_READ_MEMORY, *PIMAGEHLP_CBA_READ_MEMORY; /* size: 0x0020 */

struct SDfMarshalPacket
{
  /* 0x0000 */ class CBasedPubDocFilePtr pdf;
  /* 0x0008 */ class CBasedPubStreamPtr pst;
  /* 0x0010 */ class CBasedSeekPointerPtr psp;
  /* 0x0018 */ class CBasedMarshalListPtr pml;
  /* 0x0020 */ class CBasedDFBasisPtr pdfb;
  /* 0x0028 */ class CBasedGlobalContextPtr pgc;
  /* 0x0030 */ class CBasedGlobalFileStreamPtr fsBase;
  /* 0x0038 */ class CBasedGlobalFileStreamPtr fsDirty;
  /* 0x0040 */ class CBasedGlobalFileStreamPtr fsOriginal;
  /* 0x0048 */ unsigned long ulHeapName;
  /* 0x004c */ unsigned long cntxid;
  /* 0x0050 */ class CPerContext* ppc;
  /* 0x0058 */ void* hMem;
}; /* size: 0x0060 */

struct CClassCache::ReleaseCatalogObjects::__l2::STmpCI;

typedef struct _SPC_FINANCIAL_CRITERIA
{
  /* 0x0000 */ int fFinancialInfoAvailable;
  /* 0x0004 */ int fMeetsCriteria;
} SPC_FINANCIAL_CRITERIA, *PSPC_FINANCIAL_CRITERIA; /* size: 0x0008 */

typedef struct _IMAGEHLP_STACK_FRAME
{
  /* 0x0000 */ unsigned __int64 InstructionOffset;
  /* 0x0008 */ unsigned __int64 ReturnOffset;
  /* 0x0010 */ unsigned __int64 FrameOffset;
  /* 0x0018 */ unsigned __int64 StackOffset;
  /* 0x0020 */ unsigned __int64 BackingStoreOffset;
  /* 0x0028 */ unsigned __int64 FuncTableEntry;
  /* 0x0030 */ unsigned __int64 Params[4];
  /* 0x0050 */ unsigned __int64 Reserved[5];
  /* 0x0078 */ int Virtual;
  /* 0x007c */ unsigned long Reserved2;
} IMAGEHLP_STACK_FRAME, *PIMAGEHLP_STACK_FRAME; /* size: 0x0080 */

typedef struct __midl_frag1801_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1801_t, *P_midl_frag1801_t; /* size: 0x0008 */

typedef struct _IMAGEHLP_LINE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1445;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned long LineNumber;
  /* 0x0014 */ long Padding_1446;
  /* 0x0018 */ char* FileName;
  /* 0x0020 */ unsigned __int64 Address;
} IMAGEHLP_LINE64, *PIMAGEHLP_LINE64; /* size: 0x0028 */

typedef struct _MnkEqBuf
{
  /* 0x0000 */ unsigned long cdwSize;
  /* 0x0004 */ unsigned char abEqData[1];
  /* 0x0005 */ char __PADDING__[3];
} MnkEqBuf, *PMnkEqBuf; /* size: 0x0008 */

typedef struct _MINIDUMP_USER_RECORD
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_USER_RECORD, *PMINIDUMP_USER_RECORD; /* size: 0x000c */

typedef struct _MINIDUMP_THREAD_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD* Threads /* zero-length array */;
} MINIDUMP_THREAD_LIST, *PMINIDUMP_THREAD_LIST; /* size: 0x0004 */

struct tagTLSMapEntry
{
  /* 0x0000 */ unsigned long dwThreadId;
  /* 0x0004 */ long Padding_1447;
  /* 0x0008 */ struct tagSOleTlsData* ptls;
}; /* size: 0x0010 */

typedef struct __midl_frag1873_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1873_t, *P_midl_frag1873_t; /* size: 0x0038 */

typedef struct _NDR64_CONSTANT_IID_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ struct _GUID Guid;
} NDR64_CONSTANT_IID_FORMAT, *PNDR64_CONSTANT_IID_FORMAT; /* size: 0x0014 */

struct SPC_LINK_
{
  /* 0x0000 */ unsigned long dwLinkChoice;
  /* 0x0004 */ long Padding_1448;
  union
  {
    /* 0x0008 */ wchar_t* pwszUrl;
    /* 0x0008 */ struct _SPC_SERIALIZED_OBJECT Moniker;
    struct
    {
      /* 0x0008 */ wchar_t* pwszFile;
      /* 0x0010 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

typedef struct __midl_frag697_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag697_t, *P_midl_frag697_t; /* size: 0x0020 */

typedef struct _IMAGEHLP_CBA_EVENT
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ char* desc;
  /* 0x0010 */ void* object;
} IMAGEHLP_CBA_EVENT, *PIMAGEHLP_CBA_EVENT; /* size: 0x0018 */

typedef struct __midl_frag356_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag356_t, *P_midl_frag356_t; /* size: 0x0008 */

typedef struct _MINIDUMP_UNLOADED_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
} MINIDUMP_UNLOADED_MODULE, *PMINIDUMP_UNLOADED_MODULE; /* size: 0x0018 */

typedef struct __midl_frag232_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag232_t, *P_midl_frag232_t; /* size: 0x0048 */

typedef struct __midl_frag151_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag151_t, *P_midl_frag151_t; /* size: 0x0048 */

typedef struct _IMAGEHLP_SYMBOL64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOL64 sym;
  /* 0x0020 */ char name[2001];
  /* 0x07f1 */ char __PADDING__[7];
} IMAGEHLP_SYMBOL64_PACKAGE, *PIMAGEHLP_SYMBOL64_PACKAGE; /* size: 0x07f8 */

typedef struct _MINIDUMP_THREAD_INFO
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int DumpFlags;
  /* 0x0008 */ unsigned int DumpError;
  /* 0x000c */ unsigned int ExitStatus;
  /* 0x0010 */ unsigned __int64 CreateTime;
  /* 0x0018 */ unsigned __int64 ExitTime;
  /* 0x0020 */ unsigned __int64 KernelTime;
  /* 0x0028 */ unsigned __int64 UserTime;
  /* 0x0030 */ unsigned __int64 StartAddress;
  /* 0x0038 */ unsigned __int64 Affinity;
} MINIDUMP_THREAD_INFO, *PMINIDUMP_THREAD_INFO; /* size: 0x0040 */

typedef struct __midl_frag572_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag572_t, *P_midl_frag572_t; /* size: 0x000c */

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 DataSize;
  /* 0x0008 */ unsigned __int64 Rva;
} MINIDUMP_LOCATION_DESCRIPTOR64, *PMINIDUMP_LOCATION_DESCRIPTOR64; /* size: 0x0010 */

struct PICTINFO
{
  /* 0x0000 */ void* hmf;
  /* 0x0008 */ struct tagRECT bbox;
  /* 0x0018 */ unsigned short inch;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

class CRtlSmartUcsEncoderTraits<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

struct API_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Reserved;
}; /* size: 0x0008 */

class CPropertySetStream
{
  /* 0x0000 */ struct tagPROPERTYSETHEADER* _pph;
  /* 0x0008 */ unsigned long _oSection;
  /* 0x000c */ unsigned long _cSection;
  /* 0x0010 */ unsigned short _CodePage;
  /* 0x0012 */ unsigned char _Flags;
  /* 0x0013 */ unsigned char _State;
  /* 0x0014 */ unsigned long _Locale;
  /* 0x0018 */ unsigned long _grfBehavior;
  /* 0x001c */ unsigned long _cbTail;
  /* 0x0020 */ class PMemoryAllocator* _pma;
  /* 0x0028 */ class IMappedStream* _pmstm;
}; /* size: 0x0030 */

typedef struct __midl_frag1451_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1451_t, *P_midl_frag1451_t; /* size: 0x0048 */

typedef struct __midl_frag958_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag958_t, *P_midl_frag958_t; /* size: 0x000c */

struct tagSTREAM_HEADER
{
  /* 0x0000 */ unsigned long ulStreamVersion;
  /* 0x0004 */ unsigned long ulPickledSize;
}; /* size: 0x0008 */

struct tagPROPERTY_INFORMATION
{
  /* 0x0000 */ unsigned long pid;
  /* 0x0004 */ unsigned long cbprop;
  /* 0x0008 */ enum _PROPOP operation;
}; /* size: 0x000c */

typedef struct __midl_frag1226_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1226_t, *P_midl_frag1226_t; /* size: 0x0028 */

struct HSZ__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __midl_frag376_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag376_t, *P_midl_frag376_t; /* size: 0x0058 */

struct tagMONMSGSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ long Padding_1449;
  /* 0x0008 */ struct HWND__* hwndTo;
  /* 0x0010 */ unsigned long dwTime;
  /* 0x0014 */ long Padding_1450;
  /* 0x0018 */ void* hTask;
  /* 0x0020 */ unsigned int wMsg;
  /* 0x0024 */ long Padding_1451;
  /* 0x0028 */ unsigned __int64 wParam;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ struct tagDDEML_MSG_HOOK_DATA dmhd;
}; /* size: 0x0070 */

typedef struct __midl_frag1353_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1353_t, *P_midl_frag1353_t; /* size: 0x0048 */

struct tagMONERRSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned int wLastError;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_1452;
  /* 0x0010 */ void* hTask;
}; /* size: 0x0018 */

typedef struct __midl_frag503_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag503_t, *P_midl_frag503_t; /* size: 0x0048 */

struct tagMONHSZSTRUCTA
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fsAction;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_1453;
  /* 0x0010 */ struct HSZ__* hsz;
  /* 0x0018 */ void* hTask;
  /* 0x0020 */ char str[1];
  /* 0x0021 */ char __PADDING__[7];
}; /* size: 0x0028 */

typedef struct __midl_frag985_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag985_t, *P_midl_frag985_t; /* size: 0x0048 */

struct HDDEDATA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagMONCONVSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fConnect;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_1454;
  /* 0x0010 */ void* hTask;
  /* 0x0018 */ struct HSZ__* hszSvc;
  /* 0x0020 */ struct HSZ__* hszTopic;
  /* 0x0028 */ struct HCONV__* hConvClient;
  /* 0x0030 */ struct HCONV__* hConvServer;
}; /* size: 0x0038 */

typedef struct __midl_frag602_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag602_t, *P_midl_frag602_t; /* size: 0x0058 */

typedef struct __midl_frag1670_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1670_t, *P_midl_frag1670_t; /* size: 0x0010 */

class NuSafeNtHandle
{
  /* 0x0000 */ void* _handle;
}; /* size: 0x0008 */

struct IInstantiationInfo
{
}; /* size: 0x0008 */

typedef struct _mega_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[29];
  /* 0x0021 */ char __PADDING__[3];
} mega_MIDL_EXPR_FORMAT_STRING, *Pmega_MIDL_EXPR_FORMAT_STRING; /* size: 0x0024 */

typedef struct __midl_frag1161_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1161_t, *P_midl_frag1161_t; /* size: 0x0038 */

class HashGUID
{
}; /* size: 0x0001 */

typedef struct __midl_frag1686_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1686_t, *P_midl_frag1686_t; /* size: 0x000c */

typedef struct __midl_frag1649_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1649_t, *P_midl_frag1649_t; /* size: 0x0020 */

typedef struct __midl_frag652_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag652_t, *P_midl_frag652_t; /* size: 0x0038 */

typedef struct __midl_frag582_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag582_t, *P_midl_frag582_t; /* size: 0x000c */

class CBindCtx::CObjList
{
  /* 0x0000 */ struct IUnknown* m_punk;
  /* 0x0008 */ class CBindCtx::CObjList* m_pNext;
}; /* size: 0x0010 */

typedef struct __midl_frag463_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag463_t, *P_midl_frag463_t; /* size: 0x0068 */

class CEnumFormatEtc
{
  /* 0x0000 */ long Padding_1455[3];
  /* 0x000c */ unsigned long m_ulFlags;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_index;
  /* 0x0018 */ class CArray<CFormatEtc>* m_pFEArray;
}; /* size: 0x0020 */

typedef struct _RevokeClasses
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ struct _RevokeEntry revent[1];
} RevokeClasses, *PRevokeClasses; /* size: 0x0018 */

typedef struct __midl_frag383_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag383_t, *P_midl_frag383_t; /* size: 0x0010 */

typedef struct __midl_frag395_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag395_t, *P_midl_frag395_t; /* size: 0x0028 */

struct tagSRVRDISPATCHDATA
{
  /* 0x0000 */ long Padding_1456[2];
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ void* hData;
  /* 0x0018 */ struct HWND__* wParam;
  /* 0x0020 */ class CDDEServer* lpsrvr;
}; /* size: 0x0028 */

typedef struct __midl_frag818_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag818_t, *P_midl_frag818_t; /* size: 0x0038 */

typedef struct __MIDL_ILocalObjectExporter_0002
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned long refs;
  /* 0x0014 */ long __PADDING__[1];
} _MIDL_ILocalObjectExporter_0002, *P_MIDL_ILocalObjectExporter_0002; /* size: 0x0018 */

typedef struct _MonikerWriteStruct
{
  /* 0x0000 */ unsigned short m_endServer;
  /* 0x0002 */ unsigned short m_w;
  /* 0x0004 */ struct _GUID m_clsid;
  /* 0x0014 */ unsigned long m_ole1;
} MonikerWriteStruct, *PMonikerWriteStruct; /* size: 0x0018 */

typedef struct _callframeinternal_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1257];
  /* 0x04eb */ char __PADDING__[1];
} callframeinternal_MIDL_TYPE_FORMAT_STRING, *Pcallframeinternal_MIDL_TYPE_FORMAT_STRING; /* size: 0x04ec */

struct tagRECT16
{
  /* 0x0000 */ short left;
  /* 0x0002 */ short top;
  /* 0x0004 */ short right;
  /* 0x0006 */ short bottom;
}; /* size: 0x0008 */

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  /* 0x0000 */ char* ThunkName;
  /* 0x0008 */ void* ThunkOldAddress;
  /* 0x0010 */ void* ThunkNewAddress;
} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR; /* size: 0x0018 */

struct IEnumCallback
{
}; /* size: 0x0008 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_1457;
  /* 0x0010 */ struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64 HandleTrace[1];
} AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64; /* size: 0x00b0 */

struct tagXAptQIData
{
  /* 0x0000 */ const struct _GUID* pIPID;
  /* 0x0008 */ unsigned long cRefs;
  /* 0x000c */ unsigned short cIids;
  /* 0x000e */ char Padding_1458[2];
  /* 0x0010 */ struct _GUID* iids;
  /* 0x0018 */ struct tagREMQIRESULT** ppQIResults;
  /* 0x0020 */ class CRemoteUnknown* pRemUnk;
}; /* size: 0x0028 */

class CDropTarget
{
  /* 0x0000 */ long Padding_1459[2];
  /* 0x0008 */ struct HWND__* _hwndOLE;
  /* 0x0010 */ struct HWND__* _hwnd31;
  /* 0x0018 */ unsigned long _dwEffectLast;
  /* 0x001c */ unsigned long _crefs;
  /* 0x0020 */ class CDragOperation* _pdo;
  /* 0x0028 */ void* _hDDInfo;
}; /* size: 0x0030 */

typedef struct __midl_frag574_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag574_t, *P_midl_frag574_t; /* size: 0x0018 */

class ComVerifierSettings
{
  union
  {
    /* 0x0000 */ int s_fComVerifierEnabled;
    /* 0x0000 */ int s_fEnableDllMainChecks;
    /* 0x0000 */ int s_fEnableBreakOnException;
    /* 0x0000 */ int s_fEnableVerifyLocks;
    /* 0x0000 */ int s_fEnableVerifyThreadState;
    /* 0x0000 */ int s_fEnableVerifySecurity;
    /* 0x0000 */ int s_fEnableVerifyProxies;
    /* 0x0000 */ int s_fEnableVerifyClassFactory;
    /* 0x0000 */ int s_fEnableObjectTracking;
    /* 0x0000 */ int s_fEnableVTBLTracking;
    /* 0x0000 */ int s_fUseSlowStackTraces;
    /* 0x0000 */ int s_fPgAllocUseSystemHeap;
    /* 0x0000 */ int s_fPgAllocHeapIsPrivate;
    /* 0x0000 */ struct IStackWalker* s_pStackWalker;
    /* 0x0000 */ class ComVerifierSettings s_singleton;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

typedef struct __midl_frag548_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag548_t, *P_midl_frag548_t; /* size: 0x0028 */

class CPIDTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class CPIDHashTable s_PIDHashTbl;
    /* 0x0000 */ struct SHashChain s_PIDBuckets[23];
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

class CEffPermsCacheLUID
{
  /* 0x0000 */ struct CEffPermsCacheLUID::tagCACHE_ENTRY m_cache[23];
  /* 0x0114 */ long Padding_1460;
  /* 0x0118 */ struct _RTL_CRITICAL_SECTION m_CacheLock;
  /* 0x0140 */ int m_bLockValid;
}; /* size: 0x0148 */

struct std::nothrow_t
{
}; /* size: 0x0001 */

typedef struct __midl_frag612_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x000c */ struct _NDR64_EXPR_VAR frag4;
  /* 0x0014 */ struct _NDR64_EXPR_NOOP frag5;
  /* 0x0018 */ struct _NDR64_EXPR_CONST64 frag6;
  /* 0x0028 */ struct _NDR64_EXPR_CONST64 frag7;
} _midl_frag612_t, *P_midl_frag612_t; /* size: 0x0038 */

typedef struct _customREMOTE_REPLY_SCM_INFO
{
  /* 0x0000 */ unsigned __int64 Oxid;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pdsaOxidBindings;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long authnHint;
  /* 0x0024 */ struct tagCOMVERSION serverVersion;
} customREMOTE_REPLY_SCM_INFO, *PcustomREMOTE_REPLY_SCM_INFO; /* size: 0x0028 */

typedef struct __midl_frag132_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag132_t, *P_midl_frag132_t; /* size: 0x0038 */

typedef struct __midl_frag456_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag456_t, *P_midl_frag456_t; /* size: 0x000c */

class CAsyncConnectionContainer
{
  /* 0x0000 */ long Padding_1461[2];
  /* 0x0008 */ class CAsyncConnection _cpoint;
}; /* size: 0x0028 */

typedef struct __midl_frag1763_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1763_t, *P_midl_frag1763_t; /* size: 0x0068 */

class CConnectionPoint
{
  /* 0x0000 */ long Padding_1462[2];
  /* 0x0008 */ unsigned long _dwCookie;
  /* 0x000c */ long _cReferences;
  /* 0x0010 */ class CSinkList* _pSinkHead;
  /* 0x0018 */ struct IDocfileAsyncConnectionPoint* _pParentCP;
  /* 0x0020 */ int _fCSInitialized;
  /* 0x0024 */ long Padding_1463;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION _csSinkList;
}; /* size: 0x0050 */

class CSinkList
{
  /* 0x0000 */ struct IProgressNotify* _ppn;
  /* 0x0008 */ unsigned long _dwCookie;
  /* 0x000c */ long Padding_1464;
  /* 0x0010 */ class CSinkList* _pslNext;
}; /* size: 0x0018 */

typedef struct __midl_frag144_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag144_t, *P_midl_frag144_t; /* size: 0x0038 */

typedef struct __midl_frag678_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag678_t, *P_midl_frag678_t; /* size: 0x0010 */

typedef struct __midl_frag1426_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1426_t, *P_midl_frag1426_t; /* size: 0x0048 */

typedef struct __midl_frag1032_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1032_t, *P_midl_frag1032_t; /* size: 0x0010 */

typedef struct __midl_frag265_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag265_t, *P_midl_frag265_t; /* size: 0x000c */

struct FRAME_GetTypeInfoCount
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ unsigned int* pctinfo;
}; /* size: 0x0010 */

typedef struct _CLINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ int bnative;
  /* 0x000c */ int format;
  /* 0x0010 */ int options;
  /* 0x0014 */ int bdata;
  /* 0x0018 */ void* hdevInfo;
  /* 0x0020 */ int bnewDevInfo;
  /* 0x0024 */ long __PADDING__[1];
} CLINFO, *PCLINFO; /* size: 0x0028 */

typedef struct __midl_frag1363_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1363_t, *P_midl_frag1363_t; /* size: 0x0038 */

typedef struct __midl_frag306_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag306_t, *P_midl_frag306_t; /* size: 0x0058 */

typedef struct __midl_frag1358_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1358_t, *P_midl_frag1358_t; /* size: 0x0038 */

class IFaceEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class IFaceEntry* _pNext;
      /* 0x0008 */ void* _pProxy;
      /* 0x0010 */ struct IRpcProxyBuffer* _pRpcProxy;
      /* 0x0018 */ struct IRpcStubBuffer* _pRpcStub;
      /* 0x0020 */ void* _pServer;
      /* 0x0028 */ struct _GUID _iid;
      /* 0x0038 */ class CCtxChnl* _pCtxChnl;
      /* 0x0040 */ class CtxEntry* _pHead;
      /* 0x0048 */ class CtxEntry* _pFreeList;
      /* 0x0050 */ struct ICallInterceptor* _pInterceptor;
      /* 0x0058 */ struct IUnknown* _pUnkInner;
    }; /* size: 0x0060 */
    /* 0x0000 */ class CPageAllocator s_allocator;
  }; /* size: 0x0080 */
}; /* size: 0x0060 */

typedef struct __midl_frag289_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag289_t, *P_midl_frag289_t; /* size: 0x0078 */

struct tagPIDData
{
  /* 0x0000 */ struct IUnknown* pServer;
  /* 0x0008 */ class CObjectContext* pServerCtx;
}; /* size: 0x0010 */

struct tagSQIResult
{
  /* 0x0000 */ void* pv;
  /* 0x0008 */ HRESULT hr;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct tagQICONTEXT
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_1465;
  /* 0x0008 */ struct AsyncIRemUnknown2* pARU;
  /* 0x0010 */ unsigned short cIIDs;
  /* 0x0012 */ char Padding_1466[6];
  /* 0x0018 */ struct _GUID* pIIDs;
  /* 0x0020 */ HRESULT hr;
  /* 0x0024 */ long Padding_1467;
  /* 0x0028 */ struct tagREMQIRESULT* pRemQiRes;
  /* 0x0030 */ struct tagIPIDEntry* pIPIDEntry;
  /* 0x0038 */ struct IMarshal* pIM;
  /* 0x0040 */ HRESULT* phr;
  /* 0x0048 */ struct tagMInterfacePointer** ppMIFs;
  /* 0x0050 */ unsigned char data[1];
  /* 0x0051 */ char __PADDING__[7];
}; /* size: 0x0058 */

typedef struct __midl_frag487_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag487_t, *P_midl_frag487_t; /* size: 0x0078 */

class CEventCache
{
  union
  {
    /* 0x0000 */ void* _list[20];
    /* 0x0000 */ unsigned long _ifree;
    /* 0x0000 */ class COleStaticMutexSem _mxsEventCache;
  }; /* size: 0x00a0 */
}; /* size: 0x0001 */

typedef struct __MIDL_ILocalObjectExporter_0004
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
} _MIDL_ILocalObjectExporter_0004, *P_MIDL_ILocalObjectExporter_0004; /* size: 0x0018 */

typedef struct __midl_frag1346_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1346_t, *P_midl_frag1346_t; /* size: 0x0038 */

typedef struct __midl_frag1457_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1457_t, *P_midl_frag1457_t; /* size: 0x0058 */

class CFastBH
{
  /* 0x0000 */ void* m_hRpc;
  /* 0x0008 */ void* m_ifHandle;
}; /* size: 0x0010 */

struct tagPCB
{
  /* 0x0000 */ char* pPicklingBuff;
  /* 0x0008 */ char* pTruePicklingBuff;
  /* 0x0010 */ unsigned long ulPicklingBuffSize;
  /* 0x0014 */ unsigned long ulBytesUsed;
  /* 0x0018 */ struct tagSTREAM_ACL StreamACL;
  /* 0x0028 */ void* PickleHandle;
  /* 0x0030 */ int bDirtyHandle;
  /* 0x0034 */ int bPickled;
  /* 0x0038 */ unsigned long ulMaxNumOfStreamACEs;
  /* 0x003c */ unsigned long ulNumOfStreamACEs;
}; /* size: 0x0040 */

class COAccessControl::CImpAccessControl
{
  /* 0x0000 */ long Padding_1468[4];
  /* 0x0010 */ int m_bInitialized;
  /* 0x0014 */ int m_bDirty;
  /* 0x0018 */ int m_bLockValid;
  /* 0x001c */ long Padding_1469;
  /* 0x0020 */ struct IUnknown* m_pUnkOuter;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION m_ACLLock;
  /* 0x0050 */ class CEffPermsCacheLUID m_Cache;
  /* 0x0198 */ struct tagACL_DESCRIPTOR m_ACLDesc;
  /* 0x01d8 */ struct tagPCB m_pcb;
}; /* size: 0x0218 */

typedef struct _acpickl_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[115];
  /* 0x0075 */ char __PADDING__[1];
} acpickl_MIDL_TYPE_FORMAT_STRING, *Pacpickl_MIDL_TYPE_FORMAT_STRING; /* size: 0x0076 */

typedef struct __midl_frag242_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag242_t, *P_midl_frag242_t; /* size: 0x000c */

typedef struct __midl_frag209_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag209_t, *P_midl_frag209_t; /* size: 0x0010 */

struct SAFEARRAY_INTERNAL
{
  union
  {
    /* 0x0000 */ struct _GUID iid;
    struct
    {
      /* 0x0000 */ long __dummy0[3];
      /* 0x000c */ long vt;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ unsigned long __dummy1[2];
      /* 0x0008 */ struct IRecordInfo* piri;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0010 */ struct tagSAFEARRAY array;
}; /* size: 0x0030 */

struct DDEPOKE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 13; /* bit position: 0 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short fReserved : 2; /* bit position: 14 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

class CEndpointsTable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CEndpointEntry* m_pHead;
      /* 0x0008 */ int m_nCount;
    }; /* size: 0x000c */
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x0080 */
}; /* size: 0x0010 */

typedef struct _TRUSTEE_W
{
  /* 0x0000 */ struct _TRUSTEE_W* pMultipleTrustee;
  /* 0x0008 */ enum _MULTIPLE_TRUSTEE_OPERATION MultipleTrusteeOperation;
  /* 0x000c */ enum _TRUSTEE_FORM TrusteeForm;
  /* 0x0010 */ enum _TRUSTEE_TYPE TrusteeType;
  /* 0x0014 */ long Padding_1470;
  /* 0x0018 */ wchar_t* ptstrName;
} TRUSTEE_W, *PTRUSTEE_W; /* size: 0x0020 */

typedef struct _ACTRL_ACCESS_ENTRYW
{
  /* 0x0000 */ struct _TRUSTEE_W Trustee;
  /* 0x0020 */ unsigned long fAccessFlags;
  /* 0x0024 */ unsigned long Access;
  /* 0x0028 */ unsigned long ProvSpecificAccess;
  /* 0x002c */ unsigned long Inheritance;
  /* 0x0030 */ wchar_t* lpInheritProperty;
} ACTRL_ACCESS_ENTRYW, *PACTRL_ACCESS_ENTRYW; /* size: 0x0038 */

struct SPermissionHeader
{
  /* 0x0000 */ unsigned short wVersion;
  /* 0x0002 */ unsigned short wPad;
  /* 0x0004 */ struct _GUID gClass;
}; /* size: 0x0014 */

typedef struct _ACTRL_ALISTW
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ long Padding_1471;
  /* 0x0008 */ struct _ACTRL_PROPERTY_ENTRYW* pPropertyAccessList;
} ACTRL_ALISTW, *PACTRL_ALISTW; /* size: 0x0010 */

class CTmpMkEqBuf
{
  /* 0x0000 */ struct _MnkEqBuf _mkeqbuf;
  /* 0x0008 */ unsigned char _abData[2047];
}; /* size: 0x0808 */

struct MEMSTM
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long cRef;
  /* 0x0008 */ unsigned char* m_pBuf;
  /* 0x0010 */ void* hGlobal;
  /* 0x0018 */ int fDeleteOnRelease;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _INSTALLDATA
{
  /* 0x0000 */ enum _INSTALLSPECTYPE Type;
  /* 0x0004 */ long Padding_1472;
  /* 0x0008 */ union _INSTALLSPEC Spec;
} INSTALLDATA, *PINSTALLDATA; /* size: 0x0020 */

class AppRegistration
{
  /* 0x0000 */ struct _GUID appid;
  /* 0x0010 */ const wchar_t* appName;
  /* 0x0018 */ int dllSurrogate;
  /* 0x001c */ long Padding_1473;
  /* 0x0020 */ struct HINSTANCE__* hModuleSurrogate;
}; /* size: 0x0028 */

class CDragDefaultCursors
{
  /* 0x0000 */ struct HICON__* ahcursorDefaults[4][2];
}; /* size: 0x0040 */

class BUCL::CDequeBase
{
  /* 0x0000 */ class BUCL::CDequeLinkage m_Head;
  /* 0x0018 */ unsigned __int64 m_EntryCount;
}; /* size: 0x0020 */

struct CClassCache::SDPEHashKey
{
  /* 0x0000 */ wchar_t* _pstr;
  /* 0x0008 */ unsigned long _dwDIPFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class CCtxTable
{
  union
  {
    /* 0x0000 */ class CCtxPropHashTable s_CtxPropHashTable;
    /* 0x0000 */ class CCtxUUIDHashTable s_CtxUUIDHashTable;
    /* 0x0000 */ struct SHashChain s_CtxPropBuckets[23];
    /* 0x0000 */ struct SHashChain s_CtxUUIDBuckets[23];
    /* 0x0000 */ int s_fInitialized;
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

struct STblHdr
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long cbLargest;
  /* 0x0008 */ unsigned long OffsStart;
  /* 0x000c */ unsigned long OffsEnd;
}; /* size: 0x0010 */

class CUserMarshalInfo
{
  /* 0x0000 */ long _RpcStatus;
  /* 0x0004 */ long Padding_1474;
  /* 0x0008 */ unsigned char* _pSuppliedBuffer;
  /* 0x0010 */ struct _NDR_USER_MARSHAL_INFO _MarshalInfo;
}; /* size: 0x0068 */

struct tagWIN16BITMAP
{
  /* 0x0000 */ short bmType;
  /* 0x0002 */ short bmWidth;
  /* 0x0004 */ short bmHeight;
  /* 0x0006 */ short bmWidthBytes;
  /* 0x0008 */ unsigned char bmPlanes;
  /* 0x0009 */ unsigned char bmBitsPixel;
  /* 0x000a */ void* bmBits;
}; /* size: 0x0012 */

struct tagEntryHeader
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long cbBuffer;
  /* 0x0008 */ unsigned long cbSize;
  /* 0x000c */ long reserved;
  /* 0x0010 */ struct _GUID policyID;
}; /* size: 0x0020 */

struct IDropSourceQueryEx
{
}; /* size: 0x0008 */

class CompObjStmData
{
  /* 0x0000 */ struct CompObjHdr m_hdr;
  /* 0x001c */ unsigned long m_cchUserType;
  /* 0x0020 */ unsigned long m_cchProgID;
  /* 0x0024 */ unsigned long m_dwFormatTag;
  /* 0x0028 */ unsigned long m_ulFormatID;
  /* 0x002c */ long Padding_1475;
  /* 0x0030 */ wchar_t* m_pszOUserType;
  /* 0x0038 */ wchar_t* m_pszOProgID;
  /* 0x0040 */ char* m_pszAUserType;
  /* 0x0048 */ char* m_pszAProgID;
  /* 0x0050 */ enum TXTTYPE ttClipString;
}; /* size: 0x0058 */

struct SHookList
{
  /* 0x0000 */ struct SHookList* pNext;
  /* 0x0008 */ struct IChannelHook* pHook;
  /* 0x0010 */ struct _GUID uExtension;
}; /* size: 0x0020 */

typedef struct _RTL_UCSCHAR_DECODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned long UcsCharacter;
  /* 0x0004 */ long Padding_1476;
  union
  {
    /* 0x0008 */ long FailureReason;
    /* 0x0008 */ const unsigned char* NewCursorValue;
  }; /* size: 0x0008 */
} RTL_UCSCHAR_DECODER_RETURN_VALUE, *PRTL_UCSCHAR_DECODER_RETURN_VALUE; /* size: 0x0010 */

class BUCL::CByteAllocator
{
}; /* size: 0x0001 */

class Windows::Rtl::CRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT m_WritingContext;
}; /* size: 0x0068 */

class Windows::Rtl::CriticalSectionLock
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_Lock;
  /* 0x0028 */ BOOL m_fConstructed;
}; /* size: 0x0030 */

struct Windows::Rtl::IRtlFormattableObject::FormattingLevels
{
}; /* size: 0x0001 */

class Windows::Rtl::CStringTraitsBase
{
}; /* size: 0x0001 */

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::COperatorAmpersandReturnTypeConst;

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::COperatorAmpersandReturnTypeConst;

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>
{
}; /* size: 0x0001 */

struct SHA512_CTX
{
  /* 0x0000 */ unsigned __int64 state[8];
  /* 0x0040 */ unsigned __int64 count[2];
  /* 0x0050 */ unsigned char buffer[128];
}; /* size: 0x00d0 */

struct tagOLEMENU
{
  /* 0x0000 */ unsigned short wSignature;
  /* 0x0002 */ char Padding_1477[2];
  /* 0x0004 */ unsigned long hwndFrame;
  /* 0x0008 */ unsigned long hmenuCombined;
  /* 0x000c */ struct tagOleMenuGroupWidths MenuWidths;
  /* 0x0024 */ long lMenuCnt;
  /* 0x0028 */ struct tagOLEMENUITEM menuitem[1];
}; /* size: 0x0034 */

typedef struct __midl_frag640_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag640_t, *P_midl_frag640_t; /* size: 0x0018 */

typedef struct _scm_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[413];
  /* 0x019f */ char __PADDING__[1];
} scm_MIDL_TYPE_FORMAT_STRING, *Pscm_MIDL_TYPE_FORMAT_STRING; /* size: 0x01a0 */

typedef struct _orcb_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[259];
  /* 0x0105 */ char __PADDING__[1];
} orcb_MIDL_PROC_FORMAT_STRING, *Porcb_MIDL_PROC_FORMAT_STRING; /* size: 0x0106 */

typedef struct _orcb_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[57];
  /* 0x003b */ char __PADDING__[1];
} orcb_MIDL_TYPE_FORMAT_STRING, *Porcb_MIDL_TYPE_FORMAT_STRING; /* size: 0x003c */

class CClientContextActivator
{
}; /* size: 0x0008 */

typedef struct __midl_frag436_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag436_t, *P_midl_frag436_t; /* size: 0x0078 */

typedef struct __midl_frag1067_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1067_t, *P_midl_frag1067_t; /* size: 0x0048 */

typedef struct __midl_frag810_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag810_t, *P_midl_frag810_t; /* size: 0x0068 */

typedef struct __midl_frag679_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag679_t, *P_midl_frag679_t; /* size: 0x0020 */

typedef struct __midl_frag1298_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1298_t, *P_midl_frag1298_t; /* size: 0x0038 */

typedef struct __midl_frag1677_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1677_t, *P_midl_frag1677_t; /* size: 0x0038 */

typedef struct __midl_frag473_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag473_t, *P_midl_frag473_t; /* size: 0x0068 */

typedef struct __midl_frag1476_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1476_t, *P_midl_frag1476_t; /* size: 0x0048 */

typedef struct __midl_frag1480_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1480_t, *P_midl_frag1480_t; /* size: 0x0028 */

typedef struct __midl_frag103_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag103_t, *P_midl_frag103_t; /* size: 0x0010 */

typedef struct __midl_frag1434_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1434_t, *P_midl_frag1434_t; /* size: 0x0038 */

typedef struct _NDR64_RANGE_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char RangeType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_1478;
  /* 0x0008 */ __int64 MinValue;
  /* 0x0010 */ __int64 MaxValue;
} NDR64_RANGE_FORMAT, *PNDR64_RANGE_FORMAT; /* size: 0x0018 */

typedef struct __midl_frag945_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag945_t, *P_midl_frag945_t; /* size: 0x0048 */

typedef struct __midl_frag1675_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1675_t, *P_midl_frag1675_t; /* size: 0x0010 */

typedef struct __midl_frag13_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag13_t, *P_midl_frag13_t; /* size: 0x0058 */

typedef struct __midl_frag1031_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1031_t, *P_midl_frag1031_t; /* size: 0x0018 */

typedef struct __midl_frag683_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag683_t, *P_midl_frag683_t; /* size: 0x0010 */

typedef struct __midl_frag1807_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1807_t, *P_midl_frag1807_t; /* size: 0x000c */

typedef struct __midl_frag1310_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1310_t, *P_midl_frag1310_t; /* size: 0x0008 */

typedef struct __midl_frag716_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag716_t, *P_midl_frag716_t; /* size: 0x000c */

typedef struct __midl_frag973_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag973_t, *P_midl_frag973_t; /* size: 0x0038 */

typedef struct __midl_frag637_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag637_t, *P_midl_frag637_t; /* size: 0x0028 */

typedef struct __midl_frag707_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag707_t, *P_midl_frag707_t; /* size: 0x000c */

typedef struct __midl_frag1177_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1177_t, *P_midl_frag1177_t; /* size: 0x0058 */

typedef struct __midl_frag516_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag516_t, *P_midl_frag516_t; /* size: 0x0038 */

typedef struct __midl_frag362_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag362_t, *P_midl_frag362_t; /* size: 0x0068 */

typedef struct __midl_frag1827_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1827_t, *P_midl_frag1827_t; /* size: 0x0020 */

typedef struct __midl_frag1613_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
  } /* size: 0x0030 */ frag2;
} _midl_frag1613_t, *P_midl_frag1613_t; /* size: 0x0050 */

typedef struct __midl_frag59_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag59_t, *P_midl_frag59_t; /* size: 0x0020 */

typedef struct __midl_frag702_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag702_t, *P_midl_frag702_t; /* size: 0x0068 */

typedef struct __midl_frag1437_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1437_t, *P_midl_frag1437_t; /* size: 0x0038 */

typedef struct __midl_frag42_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag42_t, *P_midl_frag42_t; /* size: 0x0028 */

typedef struct __midl_frag1818_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1818_t, *P_midl_frag1818_t; /* size: 0x0020 */

typedef struct __midl_frag821_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag821_t, *P_midl_frag821_t; /* size: 0x0038 */

typedef struct __midl_frag1862_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1862_t, *P_midl_frag1862_t; /* size: 0x0038 */

typedef struct __midl_frag1606_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1606_t, *P_midl_frag1606_t; /* size: 0x0058 */

typedef struct __midl_frag873_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag873_t, *P_midl_frag873_t; /* size: 0x0028 */

typedef struct __midl_frag1107_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1107_t, *P_midl_frag1107_t; /* size: 0x0018 */

typedef struct __midl_frag634_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag634_t, *P_midl_frag634_t; /* size: 0x0058 */

typedef struct __midl_frag1152_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1152_t, *P_midl_frag1152_t; /* size: 0x0058 */

typedef struct __midl_frag1078_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1078_t, *P_midl_frag1078_t; /* size: 0x0020 */

typedef struct __midl_frag1322_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1322_t, *P_midl_frag1322_t; /* size: 0x0038 */

typedef struct __midl_frag1083_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1083_t, *P_midl_frag1083_t; /* size: 0x0028 */

typedef struct __midl_frag319_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag319_t, *P_midl_frag319_t; /* size: 0x000c */

typedef struct __midl_frag266_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag266_t, *P_midl_frag266_t; /* size: 0x0048 */

typedef struct __midl_frag894_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag894_t, *P_midl_frag894_t; /* size: 0x0028 */

typedef struct __midl_frag428_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag428_t, *P_midl_frag428_t; /* size: 0x000c */

typedef struct __midl_frag1033_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1033_t, *P_midl_frag1033_t; /* size: 0x0010 */

typedef struct __midl_frag1192_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1192_t, *P_midl_frag1192_t; /* size: 0x0068 */

typedef struct __midl_frag1170_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1170_t, *P_midl_frag1170_t; /* size: 0x0058 */

typedef struct __midl_frag398_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag398_t, *P_midl_frag398_t; /* size: 0x0018 */

typedef struct __midl_frag482_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag482_t, *P_midl_frag482_t; /* size: 0x0038 */

typedef struct __midl_frag643_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_POINTER_FORMAT frag2;
} _midl_frag643_t, *P_midl_frag643_t; /* size: 0x0020 */

typedef struct __midl_frag1663_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1663_t, *P_midl_frag1663_t; /* size: 0x0020 */

typedef struct __midl_frag1853_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1853_t, *P_midl_frag1853_t; /* size: 0x0038 */

typedef struct __midl_frag53_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag53_t, *P_midl_frag53_t; /* size: 0x0020 */

typedef struct __midl_frag1423_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1423_t, *P_midl_frag1423_t; /* size: 0x0038 */

typedef struct __midl_frag737_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag737_t, *P_midl_frag737_t; /* size: 0x0048 */

typedef struct __midl_frag1140_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1140_t, *P_midl_frag1140_t; /* size: 0x0048 */

typedef struct __midl_frag1831_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1831_t, *P_midl_frag1831_t; /* size: 0x0038 */

typedef struct __midl_frag17_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag17_t, *P_midl_frag17_t; /* size: 0x000c */

typedef struct __midl_frag1822_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1479;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1822_t, *P_midl_frag1822_t; /* size: 0x0028 */

typedef struct __midl_frag1448_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1448_t, *P_midl_frag1448_t; /* size: 0x0038 */

typedef struct __midl_frag173_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag173_t, *P_midl_frag173_t; /* size: 0x0038 */

typedef struct __midl_frag355_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag355_t, *P_midl_frag355_t; /* size: 0x0058 */

typedef struct __midl_frag1592_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1592_t, *P_midl_frag1592_t; /* size: 0x0058 */

typedef struct __midl_frag781_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag781_t, *P_midl_frag781_t; /* size: 0x0048 */

typedef struct __midl_frag1688_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1688_t, *P_midl_frag1688_t; /* size: 0x0028 */

typedef struct __midl_frag705_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag705_t, *P_midl_frag705_t; /* size: 0x0010 */

typedef struct __midl_frag466_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag466_t, *P_midl_frag466_t; /* size: 0x0020 */

typedef struct __midl_frag1563_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1563_t, *P_midl_frag1563_t; /* size: 0x0058 */

typedef struct __midl_frag280_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag280_t, *P_midl_frag280_t; /* size: 0x0058 */

typedef struct __midl_frag1719_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1719_t, *P_midl_frag1719_t; /* size: 0x0010 */

typedef struct __midl_frag360_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag360_t, *P_midl_frag360_t; /* size: 0x0038 */

typedef struct __midl_frag843_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag843_t, *P_midl_frag843_t; /* size: 0x0038 */

typedef struct __midl_frag202_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag202_t, *P_midl_frag202_t; /* size: 0x0068 */

typedef struct __midl_frag1343_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1343_t, *P_midl_frag1343_t; /* size: 0x0038 */

typedef struct __midl_frag1629_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1629_t, *P_midl_frag1629_t; /* size: 0x0078 */

typedef struct __midl_frag1713_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1713_t, *P_midl_frag1713_t; /* size: 0x0020 */

typedef struct __midl_frag1121_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1121_t, *P_midl_frag1121_t; /* size: 0x0028 */

typedef struct __midl_frag349_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag349_t, *P_midl_frag349_t; /* size: 0x000c */

typedef struct __midl_frag1049_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1049_t, *P_midl_frag1049_t; /* size: 0x0018 */

typedef struct __midl_frag696_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag696_t, *P_midl_frag696_t; /* size: 0x0010 */

typedef struct __midl_frag1524_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1524_t, *P_midl_frag1524_t; /* size: 0x0038 */

typedef struct __midl_frag1166_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1166_t, *P_midl_frag1166_t; /* size: 0x0038 */

typedef struct __midl_frag1070_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1070_t, *P_midl_frag1070_t; /* size: 0x0010 */

typedef struct __midl_frag875_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag875_t, *P_midl_frag875_t; /* size: 0x0038 */

typedef struct __midl_frag373_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag373_t, *P_midl_frag373_t; /* size: 0x0058 */

typedef struct __midl_frag840_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag840_t, *P_midl_frag840_t; /* size: 0x0038 */

typedef struct __midl_frag1469_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1469_t, *P_midl_frag1469_t; /* size: 0x0038 */

typedef struct __midl_frag1832_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1832_t, *P_midl_frag1832_t; /* size: 0x0020 */

typedef struct __midl_frag911_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag911_t, *P_midl_frag911_t; /* size: 0x0058 */

typedef struct __midl_frag657_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag657_t, *P_midl_frag657_t; /* size: 0x0038 */

typedef struct __midl_frag135_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag135_t, *P_midl_frag135_t; /* size: 0x0068 */

typedef struct __midl_frag308_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag308_t, *P_midl_frag308_t; /* size: 0x0020 */

typedef struct __midl_frag331_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag331_t, *P_midl_frag331_t; /* size: 0x0038 */

typedef struct __midl_frag1256_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1256_t, *P_midl_frag1256_t; /* size: 0x0058 */

typedef struct __midl_frag929_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag929_t, *P_midl_frag929_t; /* size: 0x0038 */

typedef struct __midl_frag187_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag187_t, *P_midl_frag187_t; /* size: 0x0038 */

typedef struct __midl_frag1021_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1021_t, *P_midl_frag1021_t; /* size: 0x0020 */

typedef struct __midl_frag661_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag661_t, *P_midl_frag661_t; /* size: 0x0048 */

typedef struct __midl_frag191_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag191_t, *P_midl_frag191_t; /* size: 0x0068 */

typedef struct __midl_frag1040_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1040_t, *P_midl_frag1040_t; /* size: 0x0020 */

typedef struct __midl_frag1733_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1733_t, *P_midl_frag1733_t; /* size: 0x0058 */

typedef struct __midl_frag1294_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1294_t, *P_midl_frag1294_t; /* size: 0x0028 */

typedef struct __midl_frag509_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag509_t, *P_midl_frag509_t; /* size: 0x0068 */

typedef struct __midl_frag668_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag668_t, *P_midl_frag668_t; /* size: 0x0010 */

typedef struct __midl_frag743_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag743_t, *P_midl_frag743_t; /* size: 0x0028 */

typedef struct __midl_frag18_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag18_t, *P_midl_frag18_t; /* size: 0x0010 */

typedef struct __midl_frag336_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag336_t, *P_midl_frag336_t; /* size: 0x0058 */

typedef struct __midl_frag402_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag402_t, *P_midl_frag402_t; /* size: 0x0038 */

typedef struct __midl_frag1085_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1085_t, *P_midl_frag1085_t; /* size: 0x0058 */

typedef struct __midl_frag1653_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1653_t, *P_midl_frag1653_t; /* size: 0x0048 */

typedef struct __midl_frag1544_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1544_t, *P_midl_frag1544_t; /* size: 0x0088 */

typedef struct __midl_frag1697_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1697_t, *P_midl_frag1697_t; /* size: 0x0020 */

typedef struct __midl_frag1698_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1698_t, *P_midl_frag1698_t; /* size: 0x000c */

typedef struct __midl_frag1747_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1747_t, *P_midl_frag1747_t; /* size: 0x0048 */

typedef struct __midl_frag1506_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag4;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag6;
    /* 0x0060 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag7;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
  } /* size: 0x0050 */ frag2;
} _midl_frag1506_t, *P_midl_frag1506_t; /* size: 0x0070 */

typedef struct __midl_frag1278_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_MEMPAD_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
    /* 0x0068 */ struct _NDR64_MEMPAD_FORMAT frag9;
    /* 0x0070 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag10;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag11;
  } /* size: 0x0060 */ frag2;
} _midl_frag1278_t, *P_midl_frag1278_t; /* size: 0x0080 */

typedef struct __midl_frag790_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag790_t, *P_midl_frag790_t; /* size: 0x0048 */

typedef struct __midl_frag970_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag970_t, *P_midl_frag970_t; /* size: 0x000c */

typedef struct __midl_frag571_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag571_t, *P_midl_frag571_t; /* size: 0x0018 */

typedef struct __midl_frag1666_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1666_t, *P_midl_frag1666_t; /* size: 0x0038 */

typedef struct __midl_frag1022_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1022_t, *P_midl_frag1022_t; /* size: 0x000c */

typedef struct __midl_frag715_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag715_t, *P_midl_frag715_t; /* size: 0x0020 */

typedef struct __midl_frag534_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag534_t, *P_midl_frag534_t; /* size: 0x0048 */

typedef struct __midl_frag834_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag834_t, *P_midl_frag834_t; /* size: 0x0048 */

typedef struct __midl_frag755_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag755_t, *P_midl_frag755_t; /* size: 0x0028 */

typedef struct __midl_frag1588_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1588_t, *P_midl_frag1588_t; /* size: 0x0008 */

typedef struct __midl_frag976_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag976_t, *P_midl_frag976_t; /* size: 0x0028 */

typedef struct __midl_frag1117_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1117_t, *P_midl_frag1117_t; /* size: 0x000c */

typedef struct __midl_frag1102_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1102_t, *P_midl_frag1102_t; /* size: 0x0038 */

typedef struct __midl_frag978_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag978_t, *P_midl_frag978_t; /* size: 0x0038 */

typedef struct __midl_frag1095_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1095_t, *P_midl_frag1095_t; /* size: 0x0048 */

typedef struct __midl_frag1379_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1379_t, *P_midl_frag1379_t; /* size: 0x0038 */

typedef struct __midl_frag735_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag735_t, *P_midl_frag735_t; /* size: 0x0028 */

typedef struct __midl_frag491_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag491_t, *P_midl_frag491_t; /* size: 0x0020 */

typedef struct __midl_frag56_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag56_t, *P_midl_frag56_t; /* size: 0x0020 */

typedef struct __midl_frag1214_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1214_t, *P_midl_frag1214_t; /* size: 0x0058 */

typedef struct __midl_frag598_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag598_t, *P_midl_frag598_t; /* size: 0x0048 */

typedef struct __midl_frag1680_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1680_t, *P_midl_frag1680_t; /* size: 0x0010 */

typedef struct __midl_frag238_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag238_t, *P_midl_frag238_t; /* size: 0x0038 */

typedef struct __midl_frag407_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag407_t, *P_midl_frag407_t; /* size: 0x0038 */

typedef struct __midl_frag1338_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1338_t, *P_midl_frag1338_t; /* size: 0x0038 */

typedef struct __midl_frag529_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag529_t, *P_midl_frag529_t; /* size: 0x0048 */

typedef struct __midl_frag908_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag908_t, *P_midl_frag908_t; /* size: 0x000c */

typedef struct __midl_frag112_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag112_t, *P_midl_frag112_t; /* size: 0x0028 */

typedef struct __midl_frag1709_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1709_t, *P_midl_frag1709_t; /* size: 0x0058 */

typedef struct __midl_frag1410_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1410_t, *P_midl_frag1410_t; /* size: 0x000c */

typedef struct __midl_frag1209_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1209_t, *P_midl_frag1209_t; /* size: 0x0038 */

typedef struct __midl_frag989_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag989_t, *P_midl_frag989_t; /* size: 0x0028 */

typedef struct __midl_frag1116_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1116_t, *P_midl_frag1116_t; /* size: 0x0020 */

typedef struct __midl_frag763_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag763_t, *P_midl_frag763_t; /* size: 0x0028 */

typedef struct __midl_frag499_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag499_t, *P_midl_frag499_t; /* size: 0x0038 */

typedef struct __midl_frag1828_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1480;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1828_t, *P_midl_frag1828_t; /* size: 0x0030 */

typedef struct __midl_frag725_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag725_t, *P_midl_frag725_t; /* size: 0x0048 */

typedef struct __midl_frag1301_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1301_t, *P_midl_frag1301_t; /* size: 0x0048 */

typedef struct __midl_frag1248_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1248_t, *P_midl_frag1248_t; /* size: 0x0038 */

typedef struct __midl_frag991_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag991_t, *P_midl_frag991_t; /* size: 0x0028 */

typedef struct __midl_frag24_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag24_t, *P_midl_frag24_t; /* size: 0x0038 */

typedef struct __midl_frag1013_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1013_t, *P_midl_frag1013_t; /* size: 0x0010 */

typedef struct __midl_frag65_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_POINTER_FORMAT frag2;
} _midl_frag65_t, *P_midl_frag65_t; /* size: 0x0020 */

typedef struct __midl_frag864_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag864_t, *P_midl_frag864_t; /* size: 0x0010 */

typedef struct __midl_frag579_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag579_t, *P_midl_frag579_t; /* size: 0x0068 */

typedef struct __midl_frag1012_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1012_t, *P_midl_frag1012_t; /* size: 0x000c */

typedef struct __midl_frag492_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag492_t, *P_midl_frag492_t; /* size: 0x000c */

typedef struct __midl_frag1296_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1296_t, *P_midl_frag1296_t; /* size: 0x0028 */

typedef struct __midl_frag1816_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1816_t, *P_midl_frag1816_t; /* size: 0x0058 */

typedef struct __midl_frag1069_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1069_t, *P_midl_frag1069_t; /* size: 0x0018 */

typedef struct __midl_frag1769_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1769_t, *P_midl_frag1769_t; /* size: 0x000c */

typedef struct __midl_frag1051_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1051_t, *P_midl_frag1051_t; /* size: 0x0010 */

typedef struct __midl_frag567_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag567_t, *P_midl_frag567_t; /* size: 0x0028 */

typedef struct __midl_frag1492_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1492_t, *P_midl_frag1492_t; /* size: 0x0028 */

typedef struct __midl_frag1645_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1645_t, *P_midl_frag1645_t; /* size: 0x0020 */

typedef struct __midl_frag862_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag862_t, *P_midl_frag862_t; /* size: 0x0048 */

typedef struct __midl_frag61_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_POINTER_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_POINTER_FORMAT frag3;
} _midl_frag61_t, *P_midl_frag61_t; /* size: 0x0030 */

typedef struct __midl_frag1647_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1647_t, *P_midl_frag1647_t; /* size: 0x0008 */

typedef struct __midl_frag848_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag848_t, *P_midl_frag848_t; /* size: 0x0038 */

typedef struct __midl_frag1231_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1231_t, *P_midl_frag1231_t; /* size: 0x0028 */

typedef struct __midl_frag1242_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1242_t, *P_midl_frag1242_t; /* size: 0x0048 */

typedef struct __midl_frag1705_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1705_t, *P_midl_frag1705_t; /* size: 0x000c */

typedef struct __midl_frag708_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag708_t, *P_midl_frag708_t; /* size: 0x0008 */

typedef struct __midl_frag693_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag693_t, *P_midl_frag693_t; /* size: 0x0068 */

typedef struct __midl_frag1228_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1228_t, *P_midl_frag1228_t; /* size: 0x0038 */

typedef struct __midl_frag1833_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1481;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1833_t, *P_midl_frag1833_t; /* size: 0x0030 */

typedef struct __midl_frag1372_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1372_t, *P_midl_frag1372_t; /* size: 0x0048 */

typedef struct __midl_frag608_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag608_t, *P_midl_frag608_t; /* size: 0x0018 */

typedef struct __midl_frag1413_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1413_t, *P_midl_frag1413_t; /* size: 0x0038 */

typedef struct __midl_frag346_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag346_t, *P_midl_frag346_t; /* size: 0x0058 */

typedef struct __midl_frag523_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag523_t, *P_midl_frag523_t; /* size: 0x0048 */

typedef struct __midl_frag1275_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1275_t, *P_midl_frag1275_t; /* size: 0x0088 */

typedef struct __midl_frag829_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag829_t, *P_midl_frag829_t; /* size: 0x0038 */

typedef struct __midl_frag1814_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1814_t, *P_midl_frag1814_t; /* size: 0x0028 */

typedef struct __midl_frag119_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag119_t, *P_midl_frag119_t; /* size: 0x0038 */

typedef struct __midl_frag168_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag168_t, *P_midl_frag168_t; /* size: 0x0038 */

typedef struct __midl_frag759_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag759_t, *P_midl_frag759_t; /* size: 0x0028 */

typedef struct __midl_frag213_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag213_t, *P_midl_frag213_t; /* size: 0x0068 */

typedef struct __midl_frag1672_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1672_t, *P_midl_frag1672_t; /* size: 0x0048 */

typedef struct __midl_frag384_t
{
  /* 0x0000 */ struct _NDR64_FIX_ARRAY_HEADER_FORMAT frag1;
} _midl_frag384_t, *P_midl_frag384_t; /* size: 0x0008 */

typedef struct __midl_frag981_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag981_t, *P_midl_frag981_t; /* size: 0x0028 */

typedef struct __midl_frag1599_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1599_t, *P_midl_frag1599_t; /* size: 0x0068 */

typedef struct __midl_frag485_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag485_t, *P_midl_frag485_t; /* size: 0x0028 */

typedef struct __midl_frag455_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag455_t, *P_midl_frag455_t; /* size: 0x0020 */

typedef struct __midl_frag588_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag588_t, *P_midl_frag588_t; /* size: 0x0028 */

typedef struct __midl_frag1809_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1809_t, *P_midl_frag1809_t; /* size: 0x0028 */

typedef struct __midl_frag1098_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1098_t, *P_midl_frag1098_t; /* size: 0x000c */

typedef struct __midl_frag605_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag605_t, *P_midl_frag605_t; /* size: 0x0028 */

typedef struct __midl_frag1496_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1496_t, *P_midl_frag1496_t; /* size: 0x0078 */

typedef struct __midl_frag1641_t
{
  /* 0x0000 */ struct _NDR64_FIX_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1641_t, *P_midl_frag1641_t; /* size: 0x0008 */

typedef struct __midl_frag76_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag76_t, *P_midl_frag76_t; /* size: 0x0048 */

typedef struct __midl_frag1263_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1263_t, *P_midl_frag1263_t; /* size: 0x0058 */

typedef struct __midl_frag329_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag329_t, *P_midl_frag329_t; /* size: 0x0028 */

typedef struct __midl_frag1569_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1569_t, *P_midl_frag1569_t; /* size: 0x0058 */

typedef struct __midl_frag392_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag392_t, *P_midl_frag392_t; /* size: 0x0058 */

typedef struct __midl_frag1064_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1064_t, *P_midl_frag1064_t; /* size: 0x0038 */

typedef struct __midl_frag949_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag949_t, *P_midl_frag949_t; /* size: 0x0088 */

typedef struct __midl_frag607_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag607_t, *P_midl_frag607_t; /* size: 0x0010 */

typedef struct __midl_frag883_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag883_t, *P_midl_frag883_t; /* size: 0x0048 */

typedef struct __midl_frag1203_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1203_t, *P_midl_frag1203_t; /* size: 0x0048 */

typedef struct __midl_frag733_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag733_t, *P_midl_frag733_t; /* size: 0x0028 */

typedef struct __midl_frag1774_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0088 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0098 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a8 */ struct _NDR64_PARAM_FORMAT frag11;
} _midl_frag1774_t, *P_midl_frag1774_t; /* size: 0x00b8 */

typedef struct __midl_frag563_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag563_t, *P_midl_frag563_t; /* size: 0x0038 */

typedef struct __midl_frag1656_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1656_t, *P_midl_frag1656_t; /* size: 0x000c */

typedef struct __midl_frag993_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0088 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0098 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a8 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b8 */ struct _NDR64_PARAM_FORMAT frag12;
} _midl_frag993_t, *P_midl_frag993_t; /* size: 0x00c8 */

typedef struct __midl_frag647_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag647_t, *P_midl_frag647_t; /* size: 0x0038 */

typedef struct __midl_frag639_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag639_t, *P_midl_frag639_t; /* size: 0x0010 */

typedef struct __midl_frag320_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag320_t, *P_midl_frag320_t; /* size: 0x0010 */

typedef struct __midl_frag467_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag467_t, *P_midl_frag467_t; /* size: 0x000c */

typedef struct _mega_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[7041];
  /* 0x1b83 */ char __PADDING__[1];
} mega_MIDL_TYPE_FORMAT_STRING, *Pmega_MIDL_TYPE_FORMAT_STRING; /* size: 0x1b84 */

typedef struct __midl_frag98_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag98_t, *P_midl_frag98_t; /* size: 0x0058 */

typedef struct __midl_frag934_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag934_t, *P_midl_frag934_t; /* size: 0x0068 */

typedef struct __midl_frag914_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag914_t, *P_midl_frag914_t; /* size: 0x000c */

typedef struct __midl_frag581_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag581_t, *P_midl_frag581_t; /* size: 0x0020 */

typedef struct __midl_frag799_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
  } /* size: 0x0030 */ frag2;
} _midl_frag799_t, *P_midl_frag799_t; /* size: 0x0050 */

typedef struct __midl_frag55_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag55_t, *P_midl_frag55_t; /* size: 0x0020 */

typedef struct __midl_frag1482_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1482_t, *P_midl_frag1482_t; /* size: 0x0028 */

typedef struct __midl_frag1190_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1190_t, *P_midl_frag1190_t; /* size: 0x0028 */

typedef struct __midl_frag1718_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1718_t, *P_midl_frag1718_t; /* size: 0x0020 */

typedef struct __midl_frag573_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag573_t, *P_midl_frag573_t; /* size: 0x0010 */

typedef struct __midl_frag1609_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1609_t, *P_midl_frag1609_t; /* size: 0x0028 */

typedef struct __midl_frag1635_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1635_t, *P_midl_frag1635_t; /* size: 0x000c */

typedef struct __midl_frag1578_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1578_t, *P_midl_frag1578_t; /* size: 0x0068 */

typedef struct __midl_frag765_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag765_t, *P_midl_frag765_t; /* size: 0x0038 */

typedef struct __midl_frag101_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag101_t, *P_midl_frag101_t; /* size: 0x0048 */

typedef struct __midl_frag1490_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1490_t, *P_midl_frag1490_t; /* size: 0x0028 */

typedef struct __midl_frag315_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag315_t, *P_midl_frag315_t; /* size: 0x0058 */

typedef struct __midl_frag1690_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1690_t, *P_midl_frag1690_t; /* size: 0x0078 */

typedef struct __midl_frag1038_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1038_t, *P_midl_frag1038_t; /* size: 0x0048 */

typedef struct __midl_frag1059_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1059_t, *P_midl_frag1059_t; /* size: 0x0020 */

typedef struct __midl_frag1089_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1089_t, *P_midl_frag1089_t; /* size: 0x0010 */

typedef struct __midl_frag412_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag412_t, *P_midl_frag412_t; /* size: 0x0078 */

typedef struct __midl_frag1527_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1527_t, *P_midl_frag1527_t; /* size: 0x0028 */

typedef struct __midl_frag1611_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1611_t, *P_midl_frag1611_t; /* size: 0x0010 */

typedef struct __midl_frag804_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag804_t, *P_midl_frag804_t; /* size: 0x0048 */

typedef struct __midl_frag405_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag405_t, *P_midl_frag405_t; /* size: 0x0028 */

typedef struct __midl_frag686_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag686_t, *P_midl_frag686_t; /* size: 0x0068 */

typedef struct __midl_frag794_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag794_t, *P_midl_frag794_t; /* size: 0x0058 */

typedef struct __midl_frag454_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag454_t, *P_midl_frag454_t; /* size: 0x0010 */

typedef struct __midl_frag675_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag675_t, *P_midl_frag675_t; /* size: 0x0068 */

typedef struct __midl_frag913_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag913_t, *P_midl_frag913_t; /* size: 0x0020 */

typedef struct __midl_frag1714_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1714_t, *P_midl_frag1714_t; /* size: 0x0010 */

typedef struct __midl_frag1646_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1646_t, *P_midl_frag1646_t; /* size: 0x000c */

typedef struct __midl_frag102_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag102_t, *P_midl_frag102_t; /* size: 0x000c */

typedef struct __midl_frag1821_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1821_t, *P_midl_frag1821_t; /* size: 0x0020 */

typedef struct __midl_frag1399_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1399_t, *P_midl_frag1399_t; /* size: 0x000c */

typedef struct __midl_frag1105_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1105_t, *P_midl_frag1105_t; /* size: 0x0048 */

typedef struct __midl_frag199_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag199_t, *P_midl_frag199_t; /* size: 0x000c */

typedef struct __midl_frag891_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag891_t, *P_midl_frag891_t; /* size: 0x0038 */

typedef struct __midl_frag58_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag58_t, *P_midl_frag58_t; /* size: 0x0020 */

typedef struct __midl_frag922_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag922_t, *P_midl_frag922_t; /* size: 0x0020 */

typedef struct __midl_frag71_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag71_t, *P_midl_frag71_t; /* size: 0x0038 */

typedef struct __midl_frag326_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag326_t, *P_midl_frag326_t; /* size: 0x0038 */

typedef struct __midl_frag558_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag558_t, *P_midl_frag558_t; /* size: 0x0048 */

typedef struct __midl_frag1742_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1742_t, *P_midl_frag1742_t; /* size: 0x0048 */

typedef struct __midl_frag666_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag666_t, *P_midl_frag666_t; /* size: 0x0040 */

typedef struct __midl_frag68_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag68_t, *P_midl_frag68_t; /* size: 0x0038 */

typedef struct __midl_frag1045_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1045_t, *P_midl_frag1045_t; /* size: 0x0028 */

typedef struct __midl_frag1287_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1287_t, *P_midl_frag1287_t; /* size: 0x0008 */

typedef struct __midl_frag775_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag775_t, *P_midl_frag775_t; /* size: 0x0048 */

typedef struct __midl_frag1703_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1703_t, *P_midl_frag1703_t; /* size: 0x0010 */

typedef struct __midl_frag338_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag338_t, *P_midl_frag338_t; /* size: 0x0018 */

typedef struct __midl_frag769_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag769_t, *P_midl_frag769_t; /* size: 0x0038 */

typedef struct __midl_frag427_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag427_t, *P_midl_frag427_t; /* size: 0x0020 */

typedef struct __midl_frag614_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag614_t, *P_midl_frag614_t; /* size: 0x0010 */

typedef struct __midl_frag7_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag7_t, *P_midl_frag7_t; /* size: 0x000c */

typedef struct __midl_frag1836_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1836_t, *P_midl_frag1836_t; /* size: 0x0088 */

typedef struct __midl_frag729_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag729_t, *P_midl_frag729_t; /* size: 0x0038 */

typedef struct __midl_frag109_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag109_t, *P_midl_frag109_t; /* size: 0x0038 */

typedef struct __midl_frag1754_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1754_t, *P_midl_frag1754_t; /* size: 0x0058 */

typedef struct __midl_frag422_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag422_t, *P_midl_frag422_t; /* size: 0x0088 */

typedef struct __midl_frag527_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag527_t, *P_midl_frag527_t; /* size: 0x0028 */

typedef struct __midl_frag1325_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1325_t, *P_midl_frag1325_t; /* size: 0x0038 */

typedef struct __midl_frag1584_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1584_t, *P_midl_frag1584_t; /* size: 0x0068 */

typedef struct __midl_frag16_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag16_t, *P_midl_frag16_t; /* size: 0x0048 */

typedef struct __midl_frag1716_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1716_t, *P_midl_frag1716_t; /* size: 0x0048 */

typedef struct __midl_frag1237_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1237_t, *P_midl_frag1237_t; /* size: 0x0038 */

typedef struct __midl_frag1797_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1797_t, *P_midl_frag1797_t; /* size: 0x000c */

typedef struct __midl_frag1819_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1482;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1819_t, *P_midl_frag1819_t; /* size: 0x0028 */

typedef struct __midl_frag901_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag901_t, *P_midl_frag901_t; /* size: 0x0078 */

typedef struct __midl_frag1076_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1076_t, *P_midl_frag1076_t; /* size: 0x0048 */

typedef struct __midl_frag1669_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1669_t, *P_midl_frag1669_t; /* size: 0x0028 */

typedef struct __midl_frag1367_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1367_t, *P_midl_frag1367_t; /* size: 0x0038 */

typedef struct __midl_frag1778_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag1778_t, *P_midl_frag1778_t; /* size: 0x0040 */

typedef struct __midl_frag246_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag246_t, *P_midl_frag246_t; /* size: 0x0058 */

typedef struct __midl_frag104_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag104_t, *P_midl_frag104_t; /* size: 0x0018 */

typedef struct __midl_frag1781_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1781_t, *P_midl_frag1781_t; /* size: 0x0018 */

typedef struct __midl_frag341_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag341_t, *P_midl_frag341_t; /* size: 0x0018 */

typedef struct __midl_frag1090_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1090_t, *P_midl_frag1090_t; /* size: 0x0018 */

typedef struct __midl_frag1052_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1052_t, *P_midl_frag1052_t; /* size: 0x0018 */

typedef struct __midl_frag321_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag321_t, *P_midl_frag321_t; /* size: 0x0018 */

typedef struct __midl_frag19_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag19_t, *P_midl_frag19_t; /* size: 0x0018 */

typedef struct __midl_frag1014_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1014_t, *P_midl_frag1014_t; /* size: 0x0018 */

struct IConnectionPointVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetConnectionInterface /* function */;
  /* 0x0020 */ void* GetConnectionPointContainer /* function */;
  /* 0x0028 */ void* Advise /* function */;
  /* 0x0030 */ void* Unadvise /* function */;
  /* 0x0038 */ void* EnumConnections /* function */;
}; /* size: 0x0040 */

struct IBindCtxVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* RegisterObjectBound /* function */;
  /* 0x0020 */ void* RevokeObjectBound /* function */;
  /* 0x0028 */ void* ReleaseBoundObjects /* function */;
  /* 0x0030 */ void* SetBindOptions /* function */;
  /* 0x0038 */ void* GetBindOptions /* function */;
  /* 0x0040 */ void* GetRunningObjectTable /* function */;
  /* 0x0048 */ void* RegisterObjectParam /* function */;
  /* 0x0050 */ void* GetObjectParam /* function */;
  /* 0x0058 */ void* EnumObjectParam /* function */;
  /* 0x0060 */ void* RevokeObjectParam /* function */;
}; /* size: 0x0068 */

struct IEnumUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct IEnumStringVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct IAdviseSinkVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* OnDataChange /* function */;
  /* 0x0020 */ void* OnViewChange /* function */;
  /* 0x0028 */ void* OnRename /* function */;
  /* 0x0030 */ void* OnSave /* function */;
  /* 0x0038 */ void* OnClose /* function */;
}; /* size: 0x0040 */

struct IEnumConnectionsVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct ISequentialStreamVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Read /* function */;
  /* 0x0020 */ void* Write /* function */;
}; /* size: 0x0028 */

struct IEnumOLEVERBVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef struct __midl_frag1034_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1034_t, *P_midl_frag1034_t; /* size: 0x0018 */

typedef struct __midl_frag1110_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1110_t, *P_midl_frag1110_t; /* size: 0x0018 */

struct IEnumSTATSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct ILockBytesVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* ReadAt /* function */;
  /* 0x0020 */ void* WriteAt /* function */;
  /* 0x0028 */ void* Flush /* function */;
  /* 0x0030 */ void* SetSize /* function */;
  /* 0x0038 */ void* LockRegion /* function */;
  /* 0x0040 */ void* UnlockRegion /* function */;
  /* 0x0048 */ void* Stat /* function */;
}; /* size: 0x0050 */

struct IDataObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetData /* function */;
  /* 0x0020 */ void* GetDataHere /* function */;
  /* 0x0028 */ void* QueryGetData /* function */;
  /* 0x0030 */ void* GetCanonicalFormatEtc /* function */;
  /* 0x0038 */ void* SetData /* function */;
  /* 0x0040 */ void* EnumFormatEtc /* function */;
  /* 0x0048 */ void* DAdvise /* function */;
  /* 0x0050 */ void* DUnadvise /* function */;
  /* 0x0058 */ void* EnumDAdvise /* function */;
}; /* size: 0x0060 */

struct IEnumSTATDATAVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef struct __midl_frag865_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag865_t, *P_midl_frag865_t; /* size: 0x0018 */

struct IEnumMonikerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct IStreamVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Read /* function */;
  /* 0x0020 */ void* Write /* function */;
  /* 0x0028 */ void* Seek /* function */;
  /* 0x0030 */ void* SetSize /* function */;
  /* 0x0038 */ void* CopyTo /* function */;
  /* 0x0040 */ void* Commit /* function */;
  /* 0x0048 */ void* Revert /* function */;
  /* 0x0050 */ void* LockRegion /* function */;
  /* 0x0058 */ void* UnlockRegion /* function */;
  /* 0x0060 */ void* Stat /* function */;
  /* 0x0068 */ void* Clone /* function */;
}; /* size: 0x0070 */

typedef struct __midl_frag1072_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1072_t, *P_midl_frag1072_t; /* size: 0x0018 */

struct IEnumFORMATETCVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

class CEndPointAtom
{
  /* 0x0000 */ unsigned short s_AtomProp;
}; /* size: 0x0001 */

struct IInterfaceFromWindowProp
{
}; /* size: 0x0008 */

class CPrivDragDrop
{
  /* 0x0000 */ long Padding_1483[2];
  /* 0x0008 */ unsigned long _ulRefCnt;
}; /* size: 0x0010 */

struct SDDInfo
{
  /* 0x0000 */ int fLocal;
  /* 0x0004 */ long Padding_1484;
  /* 0x0008 */ struct IPrivDragDrop* pPDP;
}; /* size: 0x0010 */

typedef struct _MonikerReadStruct
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_ole1;
  /* 0x0014 */ unsigned long m_cbExtents;
} MonikerReadStruct, *PMonikerReadStruct; /* size: 0x0018 */

struct ENTRY
{
  /* 0x0000 */ const wchar_t* sz;
  /* 0x0008 */ const struct _GUID* pclsid;
}; /* size: 0x0010 */

struct VerifierThreadState
{
  /* 0x0000 */ unsigned long cComInits;
  /* 0x0004 */ unsigned long cOleInits;
  /* 0x0008 */ struct _GUID guidContext;
  /* 0x0018 */ void* pvTopSWCNode;
}; /* size: 0x0020 */

typedef struct _callframeinternal_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[759];
  /* 0x02f9 */ char __PADDING__[1];
} callframeinternal_MIDL_PROC_FORMAT_STRING, *Pcallframeinternal_MIDL_PROC_FORMAT_STRING; /* size: 0x02fa */

struct ITypeLibVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeInfoCount /* function */;
  /* 0x0020 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetTypeInfoType /* function */;
  /* 0x0030 */ void* GetTypeInfoOfGuid /* function */;
  /* 0x0038 */ void* GetLibAttr /* function */;
  /* 0x0040 */ void* GetTypeComp /* function */;
  /* 0x0048 */ void* GetDocumentation /* function */;
  /* 0x0050 */ void* IsName /* function */;
  /* 0x0058 */ void* FindName /* function */;
  /* 0x0060 */ void* ReleaseTLibAttr /* function */;
}; /* size: 0x0068 */

struct ITypeCompVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Bind /* function */;
  /* 0x0020 */ void* BindType /* function */;
}; /* size: 0x0028 */

struct ITypeInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeAttr /* function */;
  /* 0x0020 */ void* GetTypeComp /* function */;
  /* 0x0028 */ void* GetFuncDesc /* function */;
  /* 0x0030 */ void* GetVarDesc /* function */;
  /* 0x0038 */ void* GetNames /* function */;
  /* 0x0040 */ void* GetRefTypeOfImplType /* function */;
  /* 0x0048 */ void* GetImplTypeFlags /* function */;
  /* 0x0050 */ void* GetIDsOfNames /* function */;
  /* 0x0058 */ void* Invoke /* function */;
  /* 0x0060 */ void* GetDocumentation /* function */;
  /* 0x0068 */ void* GetDllEntry /* function */;
  /* 0x0070 */ void* GetRefTypeInfo /* function */;
  /* 0x0078 */ void* AddressOfMember /* function */;
  /* 0x0080 */ void* CreateInstance /* function */;
  /* 0x0088 */ void* GetMops /* function */;
  /* 0x0090 */ void* GetContainingTypeLib /* function */;
  /* 0x0098 */ void* ReleaseTypeAttr /* function */;
  /* 0x00a0 */ void* ReleaseFuncDesc /* function */;
  /* 0x00a8 */ void* ReleaseVarDesc /* function */;
}; /* size: 0x00b0 */

struct IRecordInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* RecordInit /* function */;
  /* 0x0020 */ void* RecordClear /* function */;
  /* 0x0028 */ void* RecordCopy /* function */;
  /* 0x0030 */ void* GetGuid /* function */;
  /* 0x0038 */ void* GetName /* function */;
  /* 0x0040 */ void* GetSize /* function */;
  /* 0x0048 */ void* GetTypeInfo /* function */;
  /* 0x0050 */ void* GetField /* function */;
  /* 0x0058 */ void* GetFieldNoCopy /* function */;
  /* 0x0060 */ void* PutField /* function */;
  /* 0x0068 */ void* PutFieldNoCopy /* function */;
  /* 0x0070 */ void* GetFieldNames /* function */;
  /* 0x0078 */ void* IsMatchingType /* function */;
  /* 0x0080 */ void* RecordCreate /* function */;
  /* 0x0088 */ void* RecordCreateCopy /* function */;
  /* 0x0090 */ void* RecordDestroy /* function */;
}; /* size: 0x0098 */

struct IDispatchVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeInfoCount /* function */;
  /* 0x0020 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetIDsOfNames /* function */;
  /* 0x0030 */ void* Invoke /* function */;
}; /* size: 0x0038 */

typedef struct _PEB_FREE_BLOCK
{
  /* 0x0000 */ struct _PEB_FREE_BLOCK* Next;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PEB_FREE_BLOCK, *PPEB_FREE_BLOCK; /* size: 0x0010 */

typedef union __m128
{
  union
  {
    /* 0x0000 */ float m128_f32[4];
    /* 0x0000 */ unsigned __int64 m128_u64[2];
    /* 0x0000 */ char m128_i8[16];
    /* 0x0000 */ short m128_i16[8];
    /* 0x0000 */ int m128_i32[4];
    /* 0x0000 */ __int64 m128_i64[2];
    /* 0x0000 */ unsigned char m128_u8[16];
    /* 0x0000 */ unsigned short m128_u16[8];
    /* 0x0000 */ unsigned int m128_u32[4];
  }; /* size: 0x0010 */
} _m128, *P_m128; /* size: 0x0010 */

typedef struct _prop_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1033];
  /* 0x040b */ char __PADDING__[1];
} prop_MIDL_PROC_FORMAT_STRING, *Pprop_MIDL_PROC_FORMAT_STRING; /* size: 0x040c */

typedef struct __midl_frag26_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag26_t, *P_midl_frag26_t; /* size: 0x0008 */

struct HMACSHA_CTX
{
  /* 0x0000 */ struct A_SHA_CTX context_ipad;
  /* 0x0060 */ struct A_SHA_CTX context_opad;
}; /* size: 0x00c0 */

typedef struct __midl_frag363_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag363_t, *P_midl_frag363_t; /* size: 0x0068 */

typedef struct __midl_frag291_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag291_t, *P_midl_frag291_t; /* size: 0x0050 */

typedef struct __midl_frag166_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag166_t, *P_midl_frag166_t; /* size: 0x0008 */

typedef struct __midl_frag431_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag431_t, *P_midl_frag431_t; /* size: 0x0058 */

typedef struct _prop_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[3407];
  /* 0x0d51 */ char __PADDING__[1];
} prop_MIDL_TYPE_FORMAT_STRING, *Pprop_MIDL_TYPE_FORMAT_STRING; /* size: 0x0d52 */

typedef struct __midl_frag296_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag296_t, *P_midl_frag296_t; /* size: 0x0040 */

typedef struct __midl_frag226_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag226_t, *P_midl_frag226_t; /* size: 0x0020 */

typedef struct __midl_frag54_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag54_t, *P_midl_frag54_t; /* size: 0x0020 */

typedef struct __midl_frag221_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag221_t, *P_midl_frag221_t; /* size: 0x0020 */

typedef struct __midl_frag83_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag83_t, *P_midl_frag83_t; /* size: 0x000c */

typedef struct __midl_frag257_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag257_t, *P_midl_frag257_t; /* size: 0x0010 */

typedef struct __midl_frag258_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag258_t, *P_midl_frag258_t; /* size: 0x0040 */

typedef struct __midl_frag36_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag36_t, *P_midl_frag36_t; /* size: 0x0008 */

typedef struct __midl_frag234_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag234_t, *P_midl_frag234_t; /* size: 0x0010 */

typedef struct __midl_frag100_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag100_t, *P_midl_frag100_t; /* size: 0x0040 */

typedef struct __midl_frag260_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag260_t, *P_midl_frag260_t; /* size: 0x000c */

typedef struct __midl_frag186_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag186_t, *P_midl_frag186_t; /* size: 0x0010 */

typedef struct __midl_frag125_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag125_t, *P_midl_frag125_t; /* size: 0x0020 */

typedef struct __midl_frag263_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag263_t, *P_midl_frag263_t; /* size: 0x0040 */

typedef struct __midl_frag250_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag250_t, *P_midl_frag250_t; /* size: 0x0020 */

typedef struct __midl_frag252_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag252_t, *P_midl_frag252_t; /* size: 0x0010 */

typedef struct __midl_frag378_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag378_t, *P_midl_frag378_t; /* size: 0x0020 */

typedef struct __midl_frag301_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag301_t, *P_midl_frag301_t; /* size: 0x0010 */

typedef struct __midl_frag255_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag255_t, *P_midl_frag255_t; /* size: 0x000c */

typedef struct __midl_frag247_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag247_t, *P_midl_frag247_t; /* size: 0x000c */

typedef struct __midl_frag457_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag457_t, *P_midl_frag457_t; /* size: 0x0038 */

typedef struct __midl_frag253_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag253_t, *P_midl_frag253_t; /* size: 0x0040 */

typedef struct __midl_frag248_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag248_t, *P_midl_frag248_t; /* size: 0x0010 */

typedef struct __midl_frag269_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag269_t, *P_midl_frag269_t; /* size: 0x0020 */

typedef struct __midl_frag295_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag295_t, *P_midl_frag295_t; /* size: 0x0010 */

typedef struct __midl_frag225_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag225_t, *P_midl_frag225_t; /* size: 0x0040 */

typedef struct __midl_frag25_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag25_t, *P_midl_frag25_t; /* size: 0x0008 */

typedef struct __midl_frag230_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag230_t, *P_midl_frag230_t; /* size: 0x0040 */

typedef struct __midl_frag285_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag285_t, *P_midl_frag285_t; /* size: 0x0010 */

typedef struct __midl_frag415_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag415_t, *P_midl_frag415_t; /* size: 0x0038 */

typedef struct __midl_frag215_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag215_t, *P_midl_frag215_t; /* size: 0x0040 */

typedef struct __midl_frag193_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag193_t, *P_midl_frag193_t; /* size: 0x0010 */

typedef struct __midl_frag366_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag366_t, *P_midl_frag366_t; /* size: 0x000c */

typedef struct __midl_frag480_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag480_t, *P_midl_frag480_t; /* size: 0x0028 */

typedef struct __midl_frag274_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag274_t, *P_midl_frag274_t; /* size: 0x0020 */

typedef struct __midl_frag50_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag50_t, *P_midl_frag50_t; /* size: 0x000c */

typedef struct __midl_frag184_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag184_t, *P_midl_frag184_t; /* size: 0x000c */

typedef struct __midl_frag450_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag450_t, *P_midl_frag450_t; /* size: 0x000c */

typedef struct __midl_frag394_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag394_t, *P_midl_frag394_t; /* size: 0x0048 */

typedef struct __midl_frag217_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag217_t, *P_midl_frag217_t; /* size: 0x000c */

typedef struct __midl_frag229_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag229_t, *P_midl_frag229_t; /* size: 0x0010 */

typedef struct __midl_frag236_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag236_t, *P_midl_frag236_t; /* size: 0x0020 */

typedef struct __midl_frag207_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag207_t, *P_midl_frag207_t; /* size: 0x000c */

typedef struct __midl_frag272_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag272_t, *P_midl_frag272_t; /* size: 0x0010 */

typedef struct __midl_frag77_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag77_t, *P_midl_frag77_t; /* size: 0x0020 */

typedef struct __midl_frag385_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag385_t, *P_midl_frag385_t; /* size: 0x0058 */

typedef struct __midl_frag231_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag231_t, *P_midl_frag231_t; /* size: 0x0020 */

typedef struct __midl_frag200_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag200_t, *P_midl_frag200_t; /* size: 0x0040 */

typedef struct __midl_frag14_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_REGION_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag14_t, *P_midl_frag14_t; /* size: 0x0040 */

typedef struct __midl_frag400_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag400_t, *P_midl_frag400_t; /* size: 0x0038 */

typedef struct __midl_frag477_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag477_t, *P_midl_frag477_t; /* size: 0x0038 */

typedef struct __midl_frag290_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag290_t, *P_midl_frag290_t; /* size: 0x0040 */

typedef struct __midl_frag264_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag264_t, *P_midl_frag264_t; /* size: 0x0020 */

typedef struct __midl_frag48_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag48_t, *P_midl_frag48_t; /* size: 0x0040 */

typedef struct __midl_frag259_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag259_t, *P_midl_frag259_t; /* size: 0x0020 */

typedef struct __midl_frag251_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag251_t, *P_midl_frag251_t; /* size: 0x000c */

typedef struct __midl_frag410_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag410_t, *P_midl_frag410_t; /* size: 0x0058 */

typedef struct __midl_frag449_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag449_t, *P_midl_frag449_t; /* size: 0x0048 */

typedef struct __midl_frag382_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag382_t, *P_midl_frag382_t; /* size: 0x000c */

typedef struct __midl_frag391_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag391_t, *P_midl_frag391_t; /* size: 0x000c */

typedef struct __midl_frag316_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag316_t, *P_midl_frag316_t; /* size: 0x0040 */

typedef struct __midl_frag303_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag303_t, *P_midl_frag303_t; /* size: 0x0028 */

typedef struct __midl_frag93_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag93_t, *P_midl_frag93_t; /* size: 0x0040 */

typedef struct __midl_frag80_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ struct _NDR64_UNION_ARM frag6;
  /* 0x0078 */ struct _NDR64_UNION_ARM frag7;
  /* 0x0090 */ struct _NDR64_UNION_ARM frag8;
  /* 0x00a8 */ struct _NDR64_UNION_ARM frag9;
  /* 0x00c0 */ struct _NDR64_UNION_ARM frag10;
  /* 0x00d8 */ struct _NDR64_UNION_ARM frag11;
  /* 0x00f0 */ struct _NDR64_UNION_ARM frag12;
  /* 0x0108 */ unsigned int frag13;
  /* 0x010c */ long __PADDING__[1];
} _midl_frag80_t, *P_midl_frag80_t; /* size: 0x0110 */

typedef struct __midl_frag451_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag451_t, *P_midl_frag451_t; /* size: 0x0010 */

typedef struct __midl_frag441_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag441_t, *P_midl_frag441_t; /* size: 0x0038 */

typedef struct __midl_frag283_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag283_t, *P_midl_frag283_t; /* size: 0x0020 */

typedef struct __midl_frag57_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag57_t, *P_midl_frag57_t; /* size: 0x0010 */

typedef struct __midl_frag267_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag267_t, *P_midl_frag267_t; /* size: 0x0010 */

typedef struct __midl_frag79_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag79_t, *P_midl_frag79_t; /* size: 0x0008 */

typedef struct __midl_frag222_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag222_t, *P_midl_frag222_t; /* size: 0x000c */

typedef struct __midl_frag262_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag262_t, *P_midl_frag262_t; /* size: 0x0010 */

typedef struct __midl_frag195_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag195_t, *P_midl_frag195_t; /* size: 0x0040 */

typedef struct __midl_frag388_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag388_t, *P_midl_frag388_t; /* size: 0x000c */

typedef struct __midl_frag183_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag183_t, *P_midl_frag183_t; /* size: 0x0050 */

typedef struct __midl_frag212_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag212_t, *P_midl_frag212_t; /* size: 0x000c */

typedef struct __midl_frag287_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag287_t, *P_midl_frag287_t; /* size: 0x0020 */

typedef struct __midl_frag438_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag438_t, *P_midl_frag438_t; /* size: 0x0038 */

typedef struct __midl_frag462_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag462_t, *P_midl_frag462_t; /* size: 0x0038 */

typedef struct __midl_frag420_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag420_t, *P_midl_frag420_t; /* size: 0x0008 */

typedef struct __midl_frag312_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag312_t, *P_midl_frag312_t; /* size: 0x0050 */

typedef struct __midl_frag418_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag418_t, *P_midl_frag418_t; /* size: 0x0038 */

typedef struct __midl_frag286_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag286_t, *P_midl_frag286_t; /* size: 0x0040 */

typedef struct __midl_frag39_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag39_t, *P_midl_frag39_t; /* size: 0x0020 */

typedef struct __midl_frag471_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag471_t, *P_midl_frag471_t; /* size: 0x000c */

typedef struct __midl_frag311_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag311_t, *P_midl_frag311_t; /* size: 0x0040 */

typedef struct __midl_frag292_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag292_t, *P_midl_frag292_t; /* size: 0x000c */

typedef struct __midl_frag472_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag472_t, *P_midl_frag472_t; /* size: 0x0010 */

typedef struct __midl_frag235_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag235_t, *P_midl_frag235_t; /* size: 0x0040 */

typedef struct __midl_frag32_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag32_t, *P_midl_frag32_t; /* size: 0x0008 */

typedef struct __midl_frag241_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag241_t, *P_midl_frag241_t; /* size: 0x0020 */

typedef struct __midl_frag237_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag237_t, *P_midl_frag237_t; /* size: 0x000c */

typedef struct __midl_frag284_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag284_t, *P_midl_frag284_t; /* size: 0x000c */

typedef struct __midl_frag239_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag239_t, *P_midl_frag239_t; /* size: 0x0010 */

typedef struct __midl_frag214_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag214_t, *P_midl_frag214_t; /* size: 0x0010 */

typedef struct __midl_frag276_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag276_t, *P_midl_frag276_t; /* size: 0x0010 */

typedef struct __midl_frag307_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag307_t, *P_midl_frag307_t; /* size: 0x0050 */

typedef struct __midl_frag92_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag92_t, *P_midl_frag92_t; /* size: 0x0010 */

typedef struct __midl_frag374_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag374_t, *P_midl_frag374_t; /* size: 0x000c */

typedef struct __midl_frag305_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag305_t, *P_midl_frag305_t; /* size: 0x0010 */

typedef struct __midl_frag196_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag196_t, *P_midl_frag196_t; /* size: 0x0020 */

typedef struct __midl_frag293_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag293_t, *P_midl_frag293_t; /* size: 0x0020 */

typedef struct __midl_frag204_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag204_t, *P_midl_frag204_t; /* size: 0x0010 */

typedef struct __midl_frag85_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag85_t, *P_midl_frag85_t; /* size: 0x0010 */

typedef struct __midl_frag201_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag201_t, *P_midl_frag201_t; /* size: 0x0020 */

typedef struct _NDR64_NON_ENCAPSULATED_UNION
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned char Flags;
  /* 0x0003 */ unsigned char SwitchType;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* Switch;
  /* 0x0010 */ unsigned int Reserved;
  /* 0x0014 */ long __PADDING__[1];
} NDR64_NON_ENCAPSULATED_UNION, *PNDR64_NON_ENCAPSULATED_UNION; /* size: 0x0018 */

typedef struct __midl_frag15_t
{
  /* 0x0000 */ struct _NDR64_NON_ENCAPSULATED_UNION frag1;
  /* 0x0018 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0020 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0038 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0050 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0068 */ struct _NDR64_UNION_ARM frag6;
  /* 0x0080 */ struct _NDR64_UNION_ARM frag7;
  /* 0x0098 */ struct _NDR64_UNION_ARM frag8;
  /* 0x00b0 */ struct _NDR64_UNION_ARM frag9;
  /* 0x00c8 */ struct _NDR64_UNION_ARM frag10;
  /* 0x00e0 */ struct _NDR64_UNION_ARM frag11;
  /* 0x00f8 */ struct _NDR64_UNION_ARM frag12;
  /* 0x0110 */ struct _NDR64_UNION_ARM frag13;
  /* 0x0128 */ struct _NDR64_UNION_ARM frag14;
  /* 0x0140 */ struct _NDR64_UNION_ARM frag15;
  /* 0x0158 */ struct _NDR64_UNION_ARM frag16;
  /* 0x0170 */ struct _NDR64_UNION_ARM frag17;
  /* 0x0188 */ struct _NDR64_UNION_ARM frag18;
  /* 0x01a0 */ struct _NDR64_UNION_ARM frag19;
  /* 0x01b8 */ struct _NDR64_UNION_ARM frag20;
  /* 0x01d0 */ struct _NDR64_UNION_ARM frag21;
  /* 0x01e8 */ struct _NDR64_UNION_ARM frag22;
  /* 0x0200 */ struct _NDR64_UNION_ARM frag23;
  /* 0x0218 */ struct _NDR64_UNION_ARM frag24;
  /* 0x0230 */ struct _NDR64_UNION_ARM frag25;
  /* 0x0248 */ struct _NDR64_UNION_ARM frag26;
  /* 0x0260 */ struct _NDR64_UNION_ARM frag27;
  /* 0x0278 */ struct _NDR64_UNION_ARM frag28;
  /* 0x0290 */ struct _NDR64_UNION_ARM frag29;
  /* 0x02a8 */ struct _NDR64_UNION_ARM frag30;
  /* 0x02c0 */ struct _NDR64_UNION_ARM frag31;
  /* 0x02d8 */ struct _NDR64_UNION_ARM frag32;
  /* 0x02f0 */ struct _NDR64_UNION_ARM frag33;
  /* 0x0308 */ struct _NDR64_UNION_ARM frag34;
  /* 0x0320 */ struct _NDR64_UNION_ARM frag35;
  /* 0x0338 */ struct _NDR64_UNION_ARM frag36;
  /* 0x0350 */ struct _NDR64_UNION_ARM frag37;
  /* 0x0368 */ struct _NDR64_UNION_ARM frag38;
  /* 0x0380 */ struct _NDR64_UNION_ARM frag39;
  /* 0x0398 */ struct _NDR64_UNION_ARM frag40;
  /* 0x03b0 */ struct _NDR64_UNION_ARM frag41;
  /* 0x03c8 */ struct _NDR64_UNION_ARM frag42;
  /* 0x03e0 */ struct _NDR64_UNION_ARM frag43;
  /* 0x03f8 */ struct _NDR64_UNION_ARM frag44;
  /* 0x0410 */ struct _NDR64_UNION_ARM frag45;
  /* 0x0428 */ struct _NDR64_UNION_ARM frag46;
  /* 0x0440 */ struct _NDR64_UNION_ARM frag47;
  /* 0x0458 */ struct _NDR64_UNION_ARM frag48;
  /* 0x0470 */ struct _NDR64_UNION_ARM frag49;
  /* 0x0488 */ struct _NDR64_UNION_ARM frag50;
  /* 0x04a0 */ struct _NDR64_UNION_ARM frag51;
  /* 0x04b8 */ struct _NDR64_UNION_ARM frag52;
  /* 0x04d0 */ struct _NDR64_UNION_ARM frag53;
  /* 0x04e8 */ struct _NDR64_UNION_ARM frag54;
  /* 0x0500 */ struct _NDR64_UNION_ARM frag55;
  /* 0x0518 */ struct _NDR64_UNION_ARM frag56;
  /* 0x0530 */ struct _NDR64_UNION_ARM frag57;
  /* 0x0548 */ struct _NDR64_UNION_ARM frag58;
  /* 0x0560 */ struct _NDR64_UNION_ARM frag59;
  /* 0x0578 */ struct _NDR64_UNION_ARM frag60;
  /* 0x0590 */ struct _NDR64_UNION_ARM frag61;
  /* 0x05a8 */ struct _NDR64_UNION_ARM frag62;
  /* 0x05c0 */ struct _NDR64_UNION_ARM frag63;
  /* 0x05d8 */ struct _NDR64_UNION_ARM frag64;
  /* 0x05f0 */ struct _NDR64_UNION_ARM frag65;
  /* 0x0608 */ struct _NDR64_UNION_ARM frag66;
  /* 0x0620 */ struct _NDR64_UNION_ARM frag67;
  /* 0x0638 */ struct _NDR64_UNION_ARM frag68;
  /* 0x0650 */ struct _NDR64_UNION_ARM frag69;
  /* 0x0668 */ struct _NDR64_UNION_ARM frag70;
  /* 0x0680 */ struct _NDR64_UNION_ARM frag71;
  /* 0x0698 */ struct _NDR64_UNION_ARM frag72;
  /* 0x06b0 */ struct _NDR64_UNION_ARM frag73;
  /* 0x06c8 */ struct _NDR64_UNION_ARM frag74;
  /* 0x06e0 */ struct _NDR64_UNION_ARM frag75;
  /* 0x06f8 */ struct _NDR64_UNION_ARM frag76;
  /* 0x0710 */ struct _NDR64_UNION_ARM frag77;
  /* 0x0728 */ struct _NDR64_UNION_ARM frag78;
  /* 0x0740 */ struct _NDR64_UNION_ARM frag79;
  /* 0x0758 */ struct _NDR64_UNION_ARM frag80;
  /* 0x0770 */ struct _NDR64_UNION_ARM frag81;
  /* 0x0788 */ struct _NDR64_UNION_ARM frag82;
  /* 0x07a0 */ struct _NDR64_UNION_ARM frag83;
  /* 0x07b8 */ struct _NDR64_UNION_ARM frag84;
  /* 0x07d0 */ struct _NDR64_UNION_ARM frag85;
  /* 0x07e8 */ struct _NDR64_UNION_ARM frag86;
  /* 0x0800 */ struct _NDR64_UNION_ARM frag87;
  /* 0x0818 */ struct _NDR64_UNION_ARM frag88;
  /* 0x0830 */ struct _NDR64_UNION_ARM frag89;
  /* 0x0848 */ struct _NDR64_UNION_ARM frag90;
  /* 0x0860 */ struct _NDR64_UNION_ARM frag91;
  /* 0x0878 */ struct _NDR64_UNION_ARM frag92;
  /* 0x0890 */ struct _NDR64_UNION_ARM frag93;
  /* 0x08a8 */ struct _NDR64_UNION_ARM frag94;
  /* 0x08c0 */ struct _NDR64_UNION_ARM frag95;
  /* 0x08d8 */ struct _NDR64_UNION_ARM frag96;
  /* 0x08f0 */ struct _NDR64_UNION_ARM frag97;
  /* 0x0908 */ struct _NDR64_UNION_ARM frag98;
  /* 0x0920 */ struct _NDR64_UNION_ARM frag99;
  /* 0x0938 */ unsigned int frag100;
  /* 0x093c */ long __PADDING__[1];
} _midl_frag15_t, *P_midl_frag15_t; /* size: 0x0940 */

typedef struct __midl_frag317_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag317_t, *P_midl_frag317_t; /* size: 0x0028 */

typedef struct __midl_frag460_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag460_t, *P_midl_frag460_t; /* size: 0x0028 */

typedef struct __midl_frag403_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag403_t, *P_midl_frag403_t; /* size: 0x0028 */

typedef struct __midl_frag297_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag297_t, *P_midl_frag297_t; /* size: 0x0028 */

typedef struct __midl_frag245_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag245_t, *P_midl_frag245_t; /* size: 0x0040 */

typedef struct __midl_frag294_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag294_t, *P_midl_frag294_t; /* size: 0x0020 */

typedef struct __midl_frag452_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag452_t, *P_midl_frag452_t; /* size: 0x0018 */

class TStackBuffer<tagPROPVARIANT,64>
{
  /* 0x0000 */ long Padding_1485[8];
  /* 0x0020 */ struct tagPROPVARIANT _rg[64];
}; /* size: 0x0620 */

struct tagSExtEntry
{
  /* 0x0000 */ struct SExtHashNode m_node;
  /* 0x0018 */ wchar_t* m_wszExt;
  /* 0x0020 */ struct _GUID m_clsid;
  /* 0x0030 */ wchar_t m_wszBuf[8];
}; /* size: 0x0040 */

struct tagRegIf
{
  /* 0x0000 */ void* hServerIf;
  /* 0x0008 */ unsigned long dwRegFlags;
  /* 0x000c */ long Padding_1486;
  /* 0x0010 */ void* pfnSecurityCB /* function */;
}; /* size: 0x0018 */

struct RTL_FILTER_LUNICODE_STRING_FILTER
{
  /* 0x0000 */ void* Transform /* function */;
  /* 0x0008 */ void* Match /* function */;
  /* 0x0010 */ void* MatchContext;
  /* 0x0018 */ unsigned char DropHighUnicodeValues;
  /* 0x0019 */ unsigned char MatchFirst;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

struct RTL_FILTER_LUNICODE_STRING_CTX
{
  /* 0x0000 */ unsigned char* WriteCursor;
  /* 0x0008 */ unsigned char* WriteEnd;
}; /* size: 0x0010 */

struct ICallFactoryVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateCall /* function */;
}; /* size: 0x0020 */

class CEnumFmt
{
  /* 0x0000 */ long Padding_1487[2];
  /* 0x0008 */ unsigned long m_cRef;
  /* 0x000c */ long Padding_1488;
  /* 0x0010 */ wchar_t* m_szClsid;
  /* 0x0018 */ unsigned long m_dwDirection;
  /* 0x001c */ unsigned long m_iKey;
  /* 0x0020 */ struct FMTCACHE m_cache;
}; /* size: 0x0048 */

class CEnumFmt10
{
  /* 0x0000 */ long Padding_1489[18];
  /* 0x0048 */ struct FMT* m_rgFmt;
  /* 0x0050 */ unsigned __int64 m_cFmt;
}; /* size: 0x0058 */

class CDelayUnlockContainer
{
  /* 0x0000 */ long Padding_1490[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_1491;
  /* 0x0010 */ struct IOleItemContainer* m_pOleCont;
}; /* size: 0x0018 */

struct SNameHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long dwHash;
  /* 0x0014 */ unsigned long cRef;
  /* 0x0018 */ struct _GUID ipid;
  /* 0x0028 */ struct tagSECURITYBINDING sName;
  /* 0x002e */ char __PADDING__[2];
}; /* size: 0x0030 */

struct EnumVerbCache
{
  /* 0x0000 */ class CEnumVerb* pEnum;
}; /* size: 0x0008 */

struct VerbList
{
  /* 0x0000 */ unsigned long cRef;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long cVerbs;
  /* 0x0018 */ struct tagOLEVERB oleverb[1];
}; /* size: 0x0030 */

struct IShellItem
{
}; /* size: 0x0008 */

typedef struct _RESOLVED_USERNAME_INFO
{
  /* 0x0000 */ int bResolved;
  /* 0x0004 */ long Padding_1492;
  /* 0x0008 */ wchar_t* pszResolvedName;
} RESOLVED_USERNAME_INFO, *PRESOLVED_USERNAME_INFO; /* size: 0x0010 */

typedef struct _IMAGELISTDRAWPARAMS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1493;
  /* 0x0008 */ struct _IMAGELIST* himl;
  /* 0x0010 */ int i;
  /* 0x0014 */ long Padding_1494;
  /* 0x0018 */ struct HDC__* hdcDst;
  /* 0x0020 */ int x;
  /* 0x0024 */ int y;
  /* 0x0028 */ int cx;
  /* 0x002c */ int cy;
  /* 0x0030 */ int xBitmap;
  /* 0x0034 */ int yBitmap;
  /* 0x0038 */ unsigned long rgbBk;
  /* 0x003c */ unsigned long rgbFg;
  /* 0x0040 */ unsigned int fStyle;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ unsigned long fState;
  /* 0x004c */ unsigned long Frame;
  /* 0x0050 */ unsigned long crEffect;
  /* 0x0054 */ long __PADDING__[1];
} IMAGELISTDRAWPARAMS, *PIMAGELISTDRAWPARAMS; /* size: 0x0058 */

typedef struct _IMAGEINFO
{
  /* 0x0000 */ struct HBITMAP__* hbmImage;
  /* 0x0008 */ struct HBITMAP__* hbmMask;
  /* 0x0010 */ int Unused1;
  /* 0x0014 */ int Unused2;
  /* 0x0018 */ struct tagRECT rcImage;
} IMAGEINFO, *PIMAGEINFO; /* size: 0x0028 */

struct CONFIRM_CONFLICT_ITEM
{
  /* 0x0000 */ struct IShellItem2* pShellItem;
  /* 0x0008 */ wchar_t* pszOriginalName;
  /* 0x0010 */ wchar_t* pszAlternateName;
  /* 0x0018 */ wchar_t* pszLocationShort;
  /* 0x0020 */ wchar_t* pszLocationFull;
  /* 0x0028 */ enum SYNCMGR_CONFLICT_ITEM_TYPE nType;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _RESOLVED_USERNAME_LIST
{
  /* 0x0000 */ unsigned long cItems;
  /* 0x0004 */ long Padding_1495;
  /* 0x0008 */ struct _RESOLVED_USERNAME_INFO rgUserNameInfo[1];
} RESOLVED_USERNAME_LIST, *PRESOLVED_USERNAME_LIST; /* size: 0x0018 */

class TStackBuffer<unsigned long,64>
{
  /* 0x0000 */ long Padding_1496[8];
  /* 0x0020 */ unsigned long _rg[64];
}; /* size: 0x0120 */

struct SystemBlockHeader
{
  /* 0x0000 */ long lIndex;
  /* 0x0004 */ unsigned long ulSignature;
}; /* size: 0x0008 */

struct SystemPageEntry
{
  /* 0x0000 */ long Padding_1497[4];
  /* 0x0010 */ struct SystemBlockHeader* pHeapBlock;
}; /* size: 0x0018 */

struct VtblSplayNode
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS SplayLinks;
  /* 0x0018 */ void* pvVtbl;
  /* 0x0020 */ unsigned long cRefs;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct COM_CATALOG_CACHE_SECTION
{
  /* 0x0000 */ volatile __int64 CacheTicks;
  /* 0x0008 */ volatile __int64 ComPlusCatalogVer;
}; /* size: 0x0010 */

class CDAHolder
{
  /* 0x0000 */ long Padding_1498[8];
  /* 0x0020 */ unsigned long m_dwConnection;
  /* 0x0024 */ int m_iSize;
  /* 0x0028 */ struct tagSTATDATA* m_pSD;
}; /* size: 0x0030 */

class CEnumSTATDATA
{
  /* 0x0000 */ long Padding_1499[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ int m_iDataEnum;
  /* 0x0010 */ class CDAHolder* m_pHolder;
}; /* size: 0x0018 */

struct tagCFEntry
{
  /* 0x0000 */ const struct _GUID* pclsid;
  /* 0x0008 */ void* pfnCI /* function */;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

class CStdClassFactory
{
  /* 0x0000 */ long Padding_1500[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwIndex;
}; /* size: 0x0010 */

class CDefClassFactory
{
  /* 0x0000 */ long Padding_1501[4];
  /* 0x0010 */ struct _GUID m_clsid;
}; /* size: 0x0020 */

class PMSIHANDLE
{
  /* 0x0000 */ unsigned long m_h;
}; /* size: 0x0004 */

class LockEntry
{
  /* 0x0000 */ class LockEntry* _pNext;
  /* 0x0008 */ class LockEntry* _pPrev;
  /* 0x0010 */ class CRWLock* _pRWLock;
  /* 0x0018 */ unsigned short _wReaderLevel;
}; /* size: 0x0020 */

struct Thread
{
  /* 0x0000 */ class LockEntry* pHead;
  /* 0x0008 */ class LockEntry* pLastEmbeddedEnty;
  /* 0x0010 */ class LockEntry embeddedEntry[1];
}; /* size: 0x0030 */

union CRWLock::ReleasePoolEntry::__l2::LockStatePoolEntry
{
  /* 0x0000 */ volatile unsigned __int64 ulLockState;
  union
  {
    struct
    {
      /* 0x0008 */ volatile unsigned long dwEventState;
      /* 0x000c */ volatile unsigned long dwHighPart;
    }; /* size: 0x0008 */
    /* 0x0008 */ class EventPoolEntry* volatile pPoolEntry;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

typedef struct _PATCH_BUFFER
{
  /* 0x0000 */ unsigned short PointerIndex;
  /* 0x0002 */ unsigned short Fill1;
  /* 0x0004 */ unsigned short BufferSize;
  /* 0x0006 */ unsigned short Fill2;
  /* 0x0008 */ unsigned __int64 Buffer[31];
} PATCH_BUFFER, *PPATCH_BUFFER; /* size: 0x0100 */

struct OsFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 SavedXmm0;
  /* 0x0030 */ unsigned __int64 SavedXmm1;
  /* 0x0038 */ unsigned __int64 SavedXmm2;
  /* 0x0040 */ unsigned __int64 SavedXmm3;
  /* 0x0048 */ unsigned __int64 pRegs;
  /* 0x0050 */ unsigned __int64 pArgs;
  /* 0x0058 */ unsigned long cbArgs;
  /* 0x005c */ unsigned long Fill1;
  /* 0x0060 */ unsigned long ReturnValue;
  /* 0x0064 */ unsigned long Fill2;
}; /* size: 0x0068 */

struct CsFrame
{
  /* 0x0000 */ unsigned __int64 SavedR10;
  /* 0x0008 */ unsigned __int64 SavedR11;
}; /* size: 0x0010 */

union FT
{
  union
  {
    /* 0x0000 */ unsigned __int64 ft_scalar;
    /* 0x0000 */ struct _FILETIME ft_struct;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef union __m64
{
  union
  {
    /* 0x0000 */ unsigned __int64 m64_u64;
    /* 0x0000 */ float m64_f32[2];
    /* 0x0000 */ char m64_i8[8];
    /* 0x0000 */ short m64_i16[4];
    /* 0x0000 */ int m64_i32[2];
    /* 0x0000 */ __int64 m64_i64;
    /* 0x0000 */ unsigned char m64_u8[8];
    /* 0x0000 */ unsigned short m64_u16[4];
    /* 0x0000 */ unsigned int m64_u32[2];
  }; /* size: 0x0008 */
} _m64, *P_m64; /* size: 0x0008 */

typedef struct _GS_HANDLER_DATA
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long EHandler : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned long UHandler : 1; /* bit position: 1 */
          /* 0x0000 */ unsigned long HasAlignment : 1; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
      /* 0x0000 */ long CookieOffset;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x0004 */ long AlignedBaseOffset;
  /* 0x0008 */ long Alignment;
} GS_HANDLER_DATA, *PGS_HANDLER_DATA; /* size: 0x000c */

/*
!=
??$AddRefInterface@UIDispatch@@@OAUTIL@@QEAAJAEAPEAUIDispatch@@@Z
??$AddRefInterface@UIUnknown@@@OAUTIL@@QEAAJAEAPEAUIUnknown@@@Z
??$CreateFastStack@UDISPATCH_CLIENT_FRAME@@@@YAJPEAPEAU?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@@Z
??$CreateFastStack@UDISPATCH_SERVER_FRAME@@@@YAJPEAPEAU?$IFastStack@UDISPATCH_SERVER_FRAME@@@@@Z
??$CreateFastStack@VCallFrame@@@@YAJPEAPEAU?$IFastStack@VCallFrame@@@@@Z
??$QI@UICallFrame@@@@YAJPEAUIUnknown@@AEAPEAUICallFrame@@@Z
??$QI@UICallFrameInit@@@@YAJPEAUIUnknown@@AEAPEAUICallFrameInit@@@Z
??$QI@UICallUnmarshal@@@@YAJPEAUIUnknown@@AEAPEAUICallUnmarshal@@@Z
??$QI@UIInterceptorBase@@@@YAJPEAUIUnknown@@AEAPEAUIInterceptorBase@@@Z
??$QI@UIInterfaceRelated@@@@YAJPEAUIUnknown@@AEAPEAUIInterfaceRelated@@@Z
??$RELEASE_INTERFACE@UIBlockingLock@@@@YAKAEAPEAUIBlockingLock@@@Z
??$RELEASE_INTERFACE@UIEnumSTATPROPSTG@@@@YAKAEAPEAUIEnumSTATPROPSTG@@@Z
??$RELEASE_INTERFACE@UIPersistStorage@@@@YAKAEAPEAUIPersistStorage@@@Z
??$RELEASE_INTERFACE@UIPersistStream@@@@YAKAEAPEAUIPersistStream@@@Z
??$RELEASE_INTERFACE@UIPropertyStorage@@@@YAKAEAPEAUIPropertyStorage@@@Z
??$RELEASE_INTERFACE@UIStorage@@@@YAKAEAPEAUIStorage@@@Z
??$RELEASE_INTERFACE@UIStream@@@@YAKAEAPEAUIStream@@@Z
??$RELEASE_INTERFACE@UIUnknown@@@@YAKAEAPEAUIUnknown@@@Z
??$RELEASE_INTERFACE@VCNFFTreeMutex@@@@YAKAEAPEAVCNFFTreeMutex@@@Z
??$RELEASE_INTERFACE@VCNtfsStorage@@@@YAKAEAPEAVCNtfsStorage@@@Z
??$RELEASE_INTERFACE@VCNtfsStream@@@@YAKAEAPEAVCNtfsStream@@@Z
??$RELEASE_INTERFACE@VCNtfsUpdateStreamForPropStg@@@@YAKAEAPEAVCNtfsUpdateStreamForPropStg@@@Z
??$RELEASE_INTERFACE@VCPropertySetStorage@@@@YAKAEAPEAVCPropertySetStorage@@@Z
??$RELEASE_INTERFACE@VCStatArray@@@@YAKAEAPEAVCStatArray@@@Z
??$Read@J@SerializedPropertyReader@@QEAAJPEAJ@Z
??$Read@K@SerializedPropertyReader@@QEAAJPEAK@Z
??$Read@U_GUID@@@SerializedPropertyReader@@QEAAJPEAU_GUID@@@Z
??$ReadArray@E@SerializedPropertyReader@@QEAAJPEAEK@Z
??$ReadArray@F@SerializedPropertyReader@@QEAAJPEAFK@Z
??$ReadArray@J@SerializedPropertyReader@@QEAAJPEAJK@Z
??$ReadArray@T_ULARGE_INTEGER@@@SerializedPropertyReader@@QEAAJPEAT_ULARGE_INTEGER@@K@Z
??$ReadArray@U_GUID@@@SerializedPropertyReader@@QEAAJPEAU_GUID@@K@Z
??$ReadArray@UtagDEC@@@SerializedPropertyReader@@QEAAJPEAUtagDEC@@K@Z
??$ReadArray@_J@SerializedPropertyReader@@QEAAJPEA_JK@Z
??$Release@UDISPATCH_CLIENT_FRAME@@@@YAXAEAPEAUDISPATCH_CLIENT_FRAME@@@Z
??$Release@UDISPATCH_SERVER_FRAME@@@@YAXAEAPEAUDISPATCH_SERVER_FRAME@@@Z
??$Release@UICallFrame@@@@YAXAEAPEAUICallFrame@@@Z
??$Release@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@@Z
??$Release@UICallFrameWalker@@@@YAXAEAPEAUICallFrameWalker@@@Z
??$Release@UICallInterceptor@@@@YAXAEAPEAUICallInterceptor@@@Z
??$Release@UICallUnmarshal@@@@YAXAEAPEAUICallUnmarshal@@@Z
??$Release@UIMarshallingManager@@@@YAXAEAPEAUIMarshallingManager@@@Z
??$Release@UIRecordInfo@@@@YAXAEAPEAUIRecordInfo@@@Z
??$Release@UITypeInfo@@@@YAXAEAPEAUITypeInfo@@@Z
??$Release@UITypeLib@@@@YAXAEAPEAUITypeLib@@@Z
??$Release@UIUnknown@@@@YAXAEAPEAUIUnknown@@@Z
??$Release@UMD_INTERFACE@@@@YAXAEAPEAUMD_INTERFACE@@@Z
??$Release@UTYPEINFOVTBL@@@@YAXAEAPEAUTYPEINFOVTBL@@@Z
??$ReleaseInterface@UIDispatch@@@OAUTIL@@QEAAJAEAPEAUIDispatch@@@Z
??$ReleaseInterface@UIUnknown@@@OAUTIL@@QEAAJAEAPEAUIUnknown@@@Z
??$Set@UICallFrame@@@@YAXAEAPEAUICallFrame@@PEAU0@@Z
??$Set@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@PEAU0@@Z
??$Set@UIMarshallingManager@@@@YAXAEAPEAUIMarshallingManager@@PEAU0@@Z
??$Set@UMD_INTERFACE@@@@YAXAEAPEAUMD_INTERFACE@@PEAU0@@Z
??$SetConcurrent@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@PEAU0@@Z
??$UploadSQMData@W4Ole32SQMFlags@@@@YAXW4Ole32SQMFlags@@@Z
??$WalkInterface@UIDispatch@@@OAUTIL@@QEAAJPEAPEAUIDispatch@@@Z
??$WalkInterface@UIDispatch@@@OAUTIL@@QEAAJPEAPEAUIDispatch@@PEAUICallFrameWalker@@@Z
??$WalkInterface@UITypeInfo@@@OAUTIL@@QEAAJPEAPEAUITypeInfo@@@Z
??$WalkInterface@UITypeInfo@@@OAUTIL@@QEAAJPEAPEAUITypeInfo@@PEAUICallFrameWalker@@@Z
??$WalkInterface@UIUnknown@@@OAUTIL@@QEAAJPEAPEAUIUnknown@@@Z
??$WalkInterface@UIUnknown@@@OAUTIL@@QEAAJPEAPEAUIUnknown@@PEAUICallFrameWalker@@@Z
??0?$Auto@U_LBLOB@@@Windows@@QEAA@XZ
??0?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??0?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAA@XZ
??0?$CArray@VCCacheNode@@@@AEAA@KK@Z
??0?$CArray@VCFormatEtc@@@@AEAA@KK@Z
??0?$CArray@VCStatData@@@@AEAA@KK@Z
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAA@XZ
??0?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@XZ
??0?$MAP_SHARED@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAA@XZ
??0?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@I@Z
??0?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@I@Z
??0?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@I@Z
??0?$TStackBuffer@K$0EA@@@QEAA@XZ
??0?$TStackBuffer@UtagPROPVARIANT@@$0EA@@@QEAA@XZ
??0ActivationPropertiesIn@@QEAA@XZ
??0ActivationPropertiesOut@@QEAA@H@Z
??0Assoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAA@AEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@@Z
??0Assoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAA@AEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@@Z
??0Assoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAA@AEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@@Z
??0CAggId@@QEAA@AEBU_GUID@@AEAJ@Z
??0CAntiMoniker@@AEAA@K@Z
??0CAptCallCtrl@@QEAA@XZ
??0CAptRpcChnl@@QEAA@PEAVCStdIdentity@@PEAVOXIDEntry@@K@Z
??0CAsyncCall@@QEAA@XZ
??0CAsyncConnectionContainer@@QEAA@XZ
??0CAsyncUnknownMgr@@QEAA@PEAUIUnknown@@AEBU_GUID@@1PEAVCStdIdentity@@PEAVCClientCallMgr@@AEAJPEAPEAU1@@Z
??0CBasedBytePtr@@QEAA@PEAE@Z
??0CBasedContextPtr@@QEAA@PEAVCContext@@@Z
??0CBasedDFBasisPtr@@QEAA@PEAVCDFBasis@@@Z
??0CBasedDeltaBlockPtr@@QEAA@PEAUSDeltaBlock@@@Z
??0CBasedDeltaBlockPtrPtr@@QEAA@PEAVCBasedDeltaBlockPtr@@@Z
??0CBasedDeltaListPtr@@QEAA@PEAVCDeltaList@@@Z
??0CBasedDirectStreamPtr@@QEAA@PEAVCDirectStream@@@Z
??0CBasedDlElementPtr@@QEAA@PEAVCDlElement@@@Z
??0CBasedDocFilePtr@@QEAA@PEAVPDocFile@@@Z
??0CBasedFatPtr@@QEAA@PEAVCFat@@@Z
??0CBasedFreeBlockPtr@@QEAA@PEAUSFreeBlock@@@Z
??0CBasedGlobalContextPtr@@QEAA@PEAVCGlobalContext@@@Z
??0CBasedILockBytesPtrPtr@@QEAA@PEAPEAUILockBytes@@@Z
??0CBasedMSFPagePtr@@QEAA@PEAVCMSFPage@@@Z
??0CBasedMSFPagePtrPtr@@QEAA@PEAVCBasedMSFPagePtr@@@Z
??0CBasedMSFPageTablePtr@@QEAA@PEAVCMSFPageTable@@@Z
??0CBasedMStreamPtr@@QEAA@PEAVCMStream@@@Z
??0CBasedMarshalListPtr@@QEAA@PEAVCMarshalList@@@Z
??0CBasedPagedVectorPtr@@QEAA@PEAVCPagedVector@@@Z
??0CBasedPubDocFilePtr@@QEAA@PEAVCPubDocFile@@@Z
??0CBasedPubStreamPtr@@QEAA@PEAVCPubStream@@@Z
??0CBasedRevertablePtr@@QEAA@PEAVPRevertable@@@Z
??0CBasedSStreamPtr@@QEAA@PEAVPSStream@@@Z
??0CBasedSeekPointerPtr@@QEAA@PEAVCSeekPointer@@@Z
??0CBasedTSetMemberPtr@@QEAA@PEAVPTSetMember@@@Z
??0CBasedTransactedStreamPtr@@QEAA@PEAVCTransactedStream@@@Z
??0CBasedUpdatePtr@@QEAA@PEAVCUpdate@@@Z
??0CBasedVectBitsPtr@@QEAA@PEAUCVectBits@@@Z
??0CBindStatusCallback@@QEAA@AEAJ@Z
??0CCache@@QEAA@_J@Z
??0CCacheNode@@QEAA@PEAUtagFORMATETC@@KPEAUIStorage@@@Z
??0CCacheNode@@QEAA@XZ
??0CChannelHandle@@QEAA@KKKPEAVOXIDEntry@@KPEAJ@Z
??0CChannelHandle@@QEAA@PEAV0@KPEAJ@Z
??0CChannelObject@@QEAA@PEAVCClientCallMgr@@PEAVCCtxComChnl@@@Z
??0CChildInstanceList@@QEAA@XZ
??0CCliModalLoop@@QEAA@KKKH@Z
??0CClientCall@@QEAA@XZ
??0CClientCallMgr@@QEAA@PEAUIUnknown@@AEBU_GUID@@1PEAVCStdIdentity@@PEAV0@AEAJPEAPEAU1@@Z
??0CClipDataObject@@AEAA@XZ
??0CComApartment@@QEAA@W4tagAPTKIND@@@Z
??0CComCatalog@@QEAA@XZ
??0CComNoClassInfo@@QEAA@AEBU_GUID@@PEAG@Z
??0CComNoClassInfo@@QEAA@PEAG@Z
??0CComSxSClassInfo@@QEAA@PEAXAEBU_GUID@@PEBU_ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION@@K0K@Z
??0CCompositeMoniker@@QEAA@XZ
??0CCompositeMonikerEnum@@AEAA@HPEAVCCompositeMoniker@@@Z
??0CContextList@@IEAA@XZ
??0CCtxCall@@QEAA@KKKK@Z
??0CCtxCall@@QEAA@PEAV0@@Z
??0CCtxComChnl@@QEAA@PEAVCStdIdentity@@PEAVOXIDEntry@@K@Z
??0CCtxConnectionManager@@QEAA@PEAJ@Z
??0CDAHolder@@QEAA@XZ
??0CDDEServer@@QEAA@XZ
??0CDFBasis@@QEAA@QEAUIMalloc@@KKPEAVCGlobalContext@@@Z
??0CDIFat@@QEAA@PEAV0@@Z
??0CDIFat@@QEAA@XZ
??0CDataAdviseCache@@AEAA@XZ
??0CDdeConnectionTable@@QEAA@XZ
??0CDdeObject@@AEAA@PEAUIUnknown@@@Z
??0CDefClient@@AEAA@PEAUIUnknown@@@Z
??0CDefLink@@AEAA@PEAUIUnknown@@@Z
??0CDefObject@@AEAA@PEAUIUnknown@@@Z
??0CDeltaList@@QEAA@PEAVCMStream@@0@Z
??0CDirVector@@QEAA@XZ
??0CDirectStream@@QEAA@K@Z
??0CDirectory@@QEAA@XZ
??0CDlElement@@QEAA@XZ
??0CDllClassEntry@CClassCache@@QEAA@XZ
??0CDllHost@@QEAA@XZ
??0CDllPathEntry@CClassCache@@QEAA@AEBUDLL_INSTANTIATION_PROPERTIES@@PEAUHINSTANCE__@@P6AJAEBU_GUID@@2PEAPEAX@ZP6AJXZ@Z
??0CDocFile@@QEAA@KPEAVCDFBasis@@@Z
??0CDocFile@@QEAA@PEAVCMStream@@KKPEAVCDFBasis@@@Z
??0CDocfileStreamName@@QEAA@PEBG@Z
??0CDragOperation@@QEAA@PEAUIDataObject@@PEAUIDropSource@@KPEAKAEAJ@Z
??0CDwordBag@@QEAA@AEAV0@K@Z
??0CDwordBag@@QEAA@K@Z
??0CEffPermsCacheLUID@@QEAA@XZ
??0CEndpointEntry@@QEAA@GPEAG0K@Z
??0CEnumContextProps@@QEAA@PEAUtagContextProperty@@K@Z
??0CEnumFormatEtc@@AEAA@AEAV0@@Z
??0CEnumFormatEtc@@AEAA@PEAV?$CArray@VCCacheNode@@@@@Z
??0CEnumFormatEtcDataArray@@QEAA@PEAUFORMATETCDATAARRAY@@K@Z
??0CEnumSTATDATA@@QEAA@PEAVCDAHolder@@H@Z
??0CEnumSTATPROPBAG@@QEAA@AEBV0@@Z
??0CEnumSTATPROPBAG@@QEAA@PEAUIBlockingLock@@@Z
??0CEnumSTATPROPSETSTG@@QEAA@AEAV0@PEAJ@Z
??0CEnumSTATPROPSETSTG@@QEAA@PEAUIStorage@@PEAJ@Z
??0CEnumStatData@@AEAA@AEAV0@@Z
??0CEnumStatData@@AEAA@PEAV?$CArray@VCCacheNode@@@@@Z
??0CErrorSmAllocator@@QEAA@XZ
??0CExposedDocFile@@QEAA@PEAVCPubDocFile@@PEAVCDFBasis@@PEAVCPerContext@@@Z
??0CExposedIterator@@QEAA@PEAVCPubDocFile@@PEAVCDfName@@PEAVCDFBasis@@PEAVCPerContext@@@Z
??0CExposedStream@@QEAA@XZ
??0CFat@@QEAA@K@Z
??0CFat@@QEAA@PEAV0@@Z
??0CFatVector@@QEAA@K@Z
??0CFileMoniker@@AEAA@XZ
??0CFileStream@@QEAA@QEAUIMalloc@@@Z
??0CFillLockBytes@@QEAA@PEAUILockBytes@@@Z
??0CFinishObject@CDllPathEntry@CClassCache@@QEAA@XZ
??0CFinishObject@CLSvrClassEntry@CClassCache@@QEAA@XZ
??0CFormat@@QEAA@XZ
??0CFormatEtc@@QEAA@PEAUtagFORMATETC@@@Z
??0CFrameFilter@@QEAA@PEAUHWND__@@0@Z
??0CFreeList@@QEAA@XZ
??0CGenericObject@@QEAA@XZ
??0CGlobalContext@@QEAA@PEAUIMalloc@@AEAJ@Z
??0CGlobalFileStream@@QEAA@QEAUIMalloc@@PEBGKK@Z
??0CHandle@@QEAA@XZ
??0CImpAccessControl@COAccessControl@@QEAA@PEAUIUnknown@@0PEAJ@Z
??0CItemMoniker@@AEAA@XZ
??0CLSvrClassEntry@CClassCache@@QEAA@KPEAUIUnknown@@KKK@Z
??0CLUAMoniker@@QEAA@K@Z
??0CMSFHeaderData@@QEAA@G@Z
??0CMSFPage@@QEAA@PEAV0@@Z
??0CMSFPageTable@@QEAA@QEAVCMStream@@KK@Z
??0CMStream@@QEAA@PEAUIMalloc@@PEAPEAUILockBytes@@HKG@Z
??0CMStream@@QEAA@PEBV0@@Z
??0CManualResetEvent@@QEAA@PEAUIUnknown@@PEAJ@Z
??0CMapDwordDword@@QEAA@I@Z
??0CMapKeyToValue@@QEAA@IIHP6AIPEAXI@ZI@Z
??0CMapUintPtr@@QEAA@I@Z
??0CMarshalList@@IEAA@XZ
??0CMonikerBag@@QEAA@AEAV0@@Z
??0CMonikerBag@@QEAA@XZ
??0CMonikerPtrBuf@@QEAA@AEAV0@@Z
??0CMonikerPtrBuf@@QEAA@XZ
??0CNFFMappedStream@@QEAA@PEAVCNtfsStream@@@Z
??0CNtfsEnumSTATSTG@@QEAA@AEAV0@@Z
??0CNtfsEnumSTATSTG@@QEAA@PEAUIBlockingLock@@@Z
??0CNtfsSTATSTGArray@@QEAA@PEAUIBlockingLock@@@Z
??0CNtfsStorage@@QEAA@K@Z
??0CNtfsStream@@QEAA@PEAVCNtfsStorage@@PEAUIBlockingLock@@@Z
??0CNtfsStreamName@@QEAA@PEBG@Z
??0CNtfsUpdateStreamForPropStg@@QEAA@PEAVCNtfsStorage@@PEAUIBlockingLock@@@Z
??0CNtfsUpdateStreamName@@QEAA@PEBG@Z
??0COAHolder@@QEAA@XZ
??0CObjServer@@QEAA@AEAJ@Z
??0CObjectContext@@AEAA@KAEBU_GUID@@@Z
??0CObjrefMoniker@@QEAA@PEAUIUnknown@@@Z
??0COleCache@@QEAA@PEAUIUnknown@@AEBU_GUID@@K@Z
??0CPagedVector@@QEAA@K@Z
??0CPerContext@@QEAA@PEAUIMalloc@@@Z
??0CPointerMoniker@@QEAA@PEAUIUnknown@@@Z
??0CPres@@QEAA@XZ
??0CProcessExtensionTbl@@QEAA@XZ
??0CProcessPatternTbl@@QEAA@AEAJ@Z
??0CPropertySetStream@@QEAA@GPEAVIMappedStream@@PEAVPMemoryAllocator@@@Z
??0CPropertyStorage@@QEAA@W4MAPPED_STREAM_OPTS@@@Z
??0CPubDocFile@@QEAA@PEAV0@PEAVPDocFile@@KKPEAVCDFBasis@@PEBVCDfName@@GPEAVCMStream@@@Z
??0CPubMappedStream@@QEAA@PEAVCPubStream@@@Z
??0CPubStream@@QEAA@PEAVCPubDocFile@@KPEBVCDfName@@@Z
??0CROTItem@@QEAA@XZ
??0CRefMutexSem@@IEAA@XZ
??0CRemoteUnknown@@QEAA@AEAJPEAU_GUID@@@Z
??0CRootPubDocFile@@QEAA@QEAUIMalloc@@@Z
??0CRotMonikerEnum@@QEAA@AEAV0@@Z
??0CRotMonikerEnum@@QEAA@XZ
??0CRpcChannelBuffer@@QEAA@PEAVCStdIdentity@@PEAVOXIDEntry@@K@Z
??0CRpcThread@@QEAA@P6AKPEAX@Z0@Z
??0CRunningObjectTable@@QEAA@XZ
??0CSSMappedStream@@QEAA@PEAUIStream@@@Z
??0CSTATPROPBAGArray@@QEAA@PEAUIBlockingLock@@@Z
??0CSafeBYTEArray@@QEAA@K@Z
??0CSafeBindCtx@@QEAA@PEAUIBindCtx@@H@Z
??0CSafeMarshaledStg@@QEAA@PEAUtagInterfaceData@@AEAJ@Z
??0CSafeMoniker@@QEAA@PEAUIMoniker@@H@Z
??0CSafeMultiHeap@@QEAA@PEAVCPerContext@@@Z
??0CServerCallMgr@CRpcChannelBuffer@@QEAA@PEAUtagRPCOLEMESSAGE@@PEAUIUnknown@@1AEAJ@Z
??0CSessionMoniker@@QEAA@KH@Z
??0CSimpStorage@@QEAA@XZ
??0CSimpStorageOpen@@QEAA@XZ
??0CSimpStreamOpen@@QEAA@XZ
??0CSplit_QI@@QEAA@AEAJKPEAUtagMULTI_QI@@@Z
??0CSpyTable@@QEAA@PEAH@Z
??0CStatArray@@QEAA@PEAVCPropertySetStream@@PEAJ@Z
??0CStatData@@QEAA@PEAUtagFORMATETC@@KPEAUIAdviseSink@@K@Z
??0CStdEvent@@QEAA@PEAUIUnknown@@@Z
??0CStdIdentity@@QEAA@KKPEAUIUnknown@@0PEAPEAU1@PEAH@Z
??0CStdWrapper@@QEAA@PEAUIUnknown@@KPEAVCIDObject@@@Z
??0CStgHandle@@QEAA@XZ
??0CStmBufRead@@QEAA@XZ
??0CStmBufWrite@@QEAA@XZ
??0CStmHandle@@QEAA@XZ
??0CStreamCache@@QEAA@XZ
??0CSurrogateProcessActivator@@QEAA@XZ
??0CSynchronizeContainer@@QEAA@PEAUIUnknown@@@Z
??0CTSSet@@QEAA@XZ
??0CTransactedStream@@QEAA@PEBVCDfName@@KKPEAVCMStream@@1@Z
??0CUpdate@@QEAA@PEBVCDfName@@0KKPEAVPTSetMember@@@Z
??0CUpdateList@@QEAA@XZ
??0CUserMarshalInfo@@QEAA@PEAKPEAEK@Z
??0CVerifierTlsData@@QEAA@XZ
??0CWorldSecurityDescriptor@@QEAA@XZ
??0CWrappedDocFile@@QEAA@PEBVCDfName@@KKPEAVCDFBasis@@PEAVCPubDocFile@@@Z
??0ComPsClassFactory@@QEAA@PEAUIUnknown@@PEAUtagCStdPSFactoryBuffer@@@Z
??0ComVerifierSettings@@AEAA@XZ
??0CpUnkList@@QEAA@PEAJ@Z
??0DISPATCH_CLIENT_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_INTERCEPTOR@@QEAA@PEAUIUnknown@@@Z
??0DISPATCH_SERVER_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DefaultIBindStatusCallback@@QEAA@PEAUHWND__@@PEAUIBindStatusCallback@@@Z
??0GenericStream@@QEAA@K@Z
??0GenericStream@@QEAA@PEAUtagInterfaceData@@@Z
??0GenericStream@@QEAA@XZ
??0INTERFACE_HELPER_CLSID@@QEAA@XZ
??0Interceptor@@AEAA@PEAUIUnknown@@@Z
??0InterfaceWalkerFree@@QEAA@PEAUICallFrameWalker@@@Z
??0LEGACY_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0LEGACY_INTERCEPTOR@@QEAA@PEAUIUnknown@@@Z
??0MD_INTERFACE_CACHE@@QEAA@XZ
??0MD_METHOD@@QEAA@XZ
??0MarshallingChannel@@QEAA@PEAUIUnknown@@@Z
??0OAUTIL@@QEAA@PEAUICallFrameWalker@@00HH@Z
??0OXIDEntry@@AEAA@AEB_KPEAVMIDEntry@@PEAUtagOXID_INFO@@KPEAEKAEAJ@Z
??0PRevertable@@QEAA@XZ
??0PTSetMember@@IEAA@PEBVCDfName@@G@Z
??0SCacheEntry@@QEAA@XZ
??0SDDInfo@@QEAA@PEAUHWND__@@AEAJ@Z
??0SDeltaBlock@@QEAA@XZ
??0SDfMarshalPacket@@QEAA@XZ
??0SafeCExposedDocFile@@QEAA@PEAVCExposedDocFile@@H@Z
??0SafeCExposedIterator@@QEAA@PEAUCExposedIterator@@H@Z
??0SafeCExposedStream@@QEAA@PEAVCExposedStream@@H@Z
??0SafeIUnknown@@QEAA@PEAUIUnknown@@H@Z
??0SerializedPropertyReader@@QEAA@PEBUtagSERIALIZEDPROPERTYVALUE@@KPEAJ@Z
??0ServerContextWorkData@@QEAA@XZ
??0TYPEINFOVTBL@@QEAA@XZ
??0XIPersistFile@@QEAA@PEAUIPersistFile@@H@Z
??0XIPersistStorage@@QEAA@PEAUIPersistStorage@@H@Z
??0XIUnknown@@QEAA@PEAUIUnknown@@H@Z
??0XLOCK_LEAF@@QEAA@XZ
??0XSLOCK@@QEAA@XZ
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@AEAV?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@@Z
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@AEAV?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@@Z
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@XZ
??1?$Auto@U_LBLOB@@@Windows@@QEAA@XZ
??1?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??1?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAA@XZ
??1?$CArray@VCCacheNode@@@@AEAA@XZ
??1?$CArray@VCFormatEtc@@@@AEAA@XZ
??1?$CArray@VCStatData@@@@AEAA@XZ
??1?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAA@XZ
??1?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAA@XZ
??1?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$LockingStack@UDISPATCH_CLIENT_FRAME@@@@UEAA@XZ
??1?$LockingStack@UDISPATCH_SERVER_FRAME@@@@UEAA@XZ
??1?$LockingStack@VCallFrame@@@@UEAA@XZ
??1?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??1?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAA@XZ
??1?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@XZ
??1?$MAP_SHARED@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??1?$MAP_SHARED@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAA@XZ
??1?$MAP_SHARED@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$TStackBuffer@K$0EA@@@QEAA@XZ
??1?$TStackBuffer@UtagPROPVARIANT@@$0EA@@@QEAA@XZ
??1ActivationProperties@@UEAA@XZ
??1ActivationPropertiesIn@@UEAA@XZ
??1ActivationPropertiesOut@@UEAA@XZ
??1Assoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1Assoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1Assoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1CAggId@@AEAA@XZ
??1CAntiMoniker@@UEAA@XZ
??1CAptCallCtrl@@QEAA@XZ
??1CAptRpcChnl@@MEAA@XZ
??1CArrayFValue@@QEAA@XZ
??1CAsyncConnectionContainer@@QEAA@XZ
??1CAsyncUnknownMgr@@QEAA@XZ
??1CBindCtx@@AEAA@XZ
??1CBindStatusCallback@@QEAA@XZ
??1CCache@@QEAA@XZ
??1CCacheNode@@QEAA@XZ
??1CChannelHandle@@AEAA@XZ
??1CChannelObject@@QEAA@XZ
??1CClass@@QEAA@XZ
??1CClassEntry@CClassCache@@QEAA@XZ
??1CClassMoniker@@AEAA@XZ
??1CCliModalLoop@@QEAA@XZ
??1CCliRotHintTable@@QEAA@XZ
??1CClientCallMgr@@QEAA@XZ
??1CClipDataObject@@AEAA@XZ
??1CComActivator@@UEAA@XZ
??1CComApartment@@AEAA@XZ
??1CComCat@@AEAA@XZ
??1CComClassInfo@@QEAA@XZ
??1CComNoClassInfo@@QEAA@XZ
??1CComProcessInfo@@QEAA@XZ
??1CComRegCatalog@@QEAA@XZ
??1CComSxSClassInfo@@QEAA@XZ
??1CCompositeMoniker@@UEAA@XZ
??1CCompositeMonikerEnum@@AEAA@XZ
??1CConnectionPoint@@QEAA@XZ
??1CContextPropList@@QEAA@XZ
??1CContextSwitcher@@QEAA@XZ
??1CCtxCall@@QEAA@XZ
??1CCtxConnectionManager@@QEAA@XZ
??1CDAHolder@@EEAA@XZ
??1CDFBasis@@QEAA@XZ
??1CDIFat@@QEAA@XZ
??1CData@@QEAA@XZ
??1CDataAdviseCache@@QEAA@XZ
??1CDdeObject@@AEAA@XZ
??1CDefClient@@AEAA@XZ
??1CDefLink@@EEAA@XZ
??1CDefObject@@EEAA@XZ
??1CDeltaList@@QEAA@XZ
??1CDfMutex@@QEAA@XZ
??1CDirVector@@QEAA@XZ
??1CDirectStream@@QEAA@XZ
??1CDirectory@@QEAA@XZ
??1CDocFile@@QEAA@XZ
??1CDragDataObject@@QEAA@XZ
??1CDragOperation@@QEAA@XZ
??1CDropTarget@@AEAA@XZ
??1CDualStringArray@@QEAA@XZ
??1CDwordBag@@QEAA@XZ
??1CEffPermsCacheLUID@@QEAA@XZ
??1CEndPointAtom@@QEAA@XZ
??1CEndpointEntry@@QEAA@XZ
??1CEnumCategories@@QEAA@XZ
??1CEnumCategoriesOfClass@@QEAA@XZ
??1CEnumClassesOfCategories@@QEAA@XZ
??1CEnumContextProps@@QEAA@XZ
??1CEnumFormatEtc@@AEAA@XZ
??1CEnumFormatEtcDataArray@@AEAA@XZ
??1CEnumSTATDATA@@AEAA@XZ
??1CEnumSTATPROPBAG@@QEAA@XZ
??1CEnumSTATPROPSETSTG@@QEAA@XZ
??1CEnumStatData@@AEAA@XZ
??1CErrorObject@@AEAA@XZ
??1CErrorSmAllocator@@QEAA@XZ
??1CExposedDocFile@@QEAA@XZ
??1CExposedIterator@@QEAA@XZ
??1CExposedStream@@QEAA@XZ
??1CExtentList@@QEAA@XZ
??1CFastBH@@QEAA@XZ
??1CFat@@QEAA@XZ
??1CFatVector@@QEAA@XZ
??1CFileMoniker@@EEAA@XZ
??1CFileStream@@QEAA@XZ
??1CFillLockBytes@@QEAA@XZ
??1CFinishComposite@CClassCache@@QEAA@XZ
??1CFinishObject@CLSvrClassEntry@CClassCache@@UEAA@XZ
??1CFormat@@QEAA@XZ
??1CFormatEtc@@QEAA@XZ
??1CFrameFilter@@UEAA@XZ
??1CFreeList@@QEAA@XZ
??1CGenObject@@QEAA@XZ
??1CGenericObject@@QEAA@XZ
??1CImpAccessControl@COAccessControl@@QEAA@XZ
??1CItemMoniker@@EEAA@XZ
??1CLSvrClassEntry@CClassCache@@UEAA@XZ
??1CLUAMoniker@@UEAA@XZ
??1CListHeader@@QEAA@XZ
??1CLocalMachineNames@@QEAA@XZ
??1CMSFPage@@QEAA@XZ
??1CMSFPageTable@@QEAA@XZ
??1CMStream@@QEAA@XZ
??1CMachineNamesHelper@@QEAA@XZ
??1CManualResetEvent@@QEAA@XZ
??1CMapDwordDword@@QEAA@XZ
??1CMapUintPtr@@QEAA@XZ
??1CMarshalList@@IEAA@XZ
??1CMemStm@@QEAA@XZ
??1CMessageCall@@MEAA@XZ
??1CMonikerBag@@QEAA@XZ
??1CMonikerPtrBuf@@QEAA@XZ
??1CMutexSem2@@QEAA@XZ
??1CNFFMappedStream@@QEAA@XZ
??1CNFFTreeMutex@@QEAA@XZ
??1CNtfsEnumSTATSTG@@QEAA@XZ
??1CNtfsSTATSTGArray@@QEAA@XZ
??1CNtfsStorage@@QEAA@XZ
??1CNtfsStream@@UEAA@XZ
??1CNtfsUpdateStreamForPropStg@@UEAA@XZ
??1COAHolder@@EEAA@XZ
??1COAccessControl@@QEAA@XZ
??1CObjList@CBindCtx@@QEAA@XZ
??1CObjectContext@@AEAA@XZ
??1CObjrefMoniker@@UEAA@XZ
??1COleCache@@UEAA@XZ
??1CPaccelEnum@@QEAA@XZ
??1CPagedVector@@QEAA@XZ
??1CPerContext@@QEAA@XZ
??1CPipeProxyImp@@UEAA@XZ
??1CPointerMoniker@@UEAA@XZ
??1CPolicySet@@QEAA@XZ
??1CPres@@QEAA@XZ
??1CProcessExtensionTbl@@QEAA@XZ
??1CProcessPatternTbl@@QEAA@XZ
??1CPropertySetStorage@@QEAA@XZ
??1CPropertyStorage@@QEAA@XZ
??1CPtrCache@@QEAA@XZ
??1CPubStream@@QEAA@XZ
??1CPunkForRelease@@AEAA@XZ
??1CROTItem@@QEAA@XZ
??1CRandomNumberGenerator@@QEAA@XZ
??1CRefCache@@AEAA@XZ
??1CRefMutexSem@@QEAA@XZ
??1CRemoteUnknown@@QEAA@XZ
??1CRotMonikerEnum@@QEAA@XZ
??1CRpcChannelBuffer@@UEAA@XZ
??1CRpcThread@@QEAA@XZ
??1CRunningObjectTable@@QEAA@XZ
??1CSSMappedStream@@QEAA@XZ
??1CSTATPROPBAGArray@@QEAA@XZ
??1CSafeBYTEArray@@QEAA@XZ
??1CSafeBindCtx@@QEAA@XZ
??1CSafeMarshaledStg@@QEAA@XZ
??1CSafeMoniker@@QEAA@XZ
??1CSafeMultiHeap@@QEAA@XZ
??1CScmPatternTbl@@QEAA@XZ
??1CServerCallMgr@CRpcChannelBuffer@@QEAA@XZ
??1CSessionMoniker@@UEAA@XZ
??1CSharedMemoryBlock@@QEAA@XZ
??1CSimpStorage@@QEAA@XZ
??1CSimpStorageOpen@@QEAA@XZ
??1CSimpStreamOpen@@QEAA@XZ
??1CSplit_QI@@QEAA@XZ
??1CStackBuffer@@QEAA@XZ
??1CStackWalker@@QEAA@XZ
??1CStackWalkerStack@@QEAA@XZ
??1CStackWalkerSymbol@@QEAA@XZ
??1CStatArray@@AEAA@XZ
??1CStatData@@QEAA@XZ
??1CStdEvent@@QEAA@XZ
??1CStdIdentity@@UEAA@XZ
??1CStdMarshal@@QEAA@XZ
??1CStdWrapper@@AEAA@XZ
??1CSurrogateProcessActivator@@QEAA@XZ
??1CSynchronizeContainer@@QEAA@XZ
??1CTransactedStream@@QEAA@XZ
??1CUpdate@@QEAA@XZ
??1CVerifierStackData@@QEAA@XZ
??1CVerifierTlsData@@QEAA@XZ
??1CWrappedDocFile@@QEAA@XZ
??1CallFrame@@QEAA@XZ
??1ComVerifierSettings@@AEAA@XZ
??1CompObjStmData@@QEAA@XZ
??1ContextInfo@@UEAA@XZ
??1CpUnkList@@QEAA@XZ
??1CsCatInfo@@QEAA@XZ
??1DISPATCH_CLIENT_FRAME@@EEAA@XZ
??1DISPATCH_FRAME@@UEAA@XZ
??1DISPATCH_INTERCEPTOR@@UEAA@XZ
??1DISPATCH_SERVER_FRAME@@EEAA@XZ
??1DefaultIBindStatusCallback@@UEAA@XZ
??1EVENT@@QEAA@XZ
??1GenericStream@@QEAA@XZ
??1IFaceEntry@@QEAA@XZ
??1INTERFACE_HELPER_CLSID@@UEAA@XZ
??1InstanceInfo@@UEAA@XZ
??1InstantiationInfo@@UEAA@XZ
??1Interceptor@@EEAA@XZ
??1LEGACY_FRAME@@MEAA@XZ
??1LEGACY_INTERCEPTOR@@UEAA@XZ
??1MD_INTERFACE@@AEAA@XZ
??1MD_INTERFACE_CACHE@@QEAA@XZ
??1MD_METHOD@@QEAA@XZ
??1MarshallingChannel@@QEAA@XZ
??1OAUTIL@@QEAA@XZ
??1OLEAUTOMATION_FUNCTIONS@@QEAA@XZ
??1OpaqueDataInfo@@QEAA@XZ
??1SDDInfo@@QEAA@XZ
??1SEMAPHORE@@QEAA@XZ
??1SafeCExposedDocFile@@QEAA@XZ
??1SafeCExposedIterator@@QEAA@XZ
??1SafeCExposedStream@@QEAA@XZ
??1SafeIUnknown@@QEAA@XZ
??1ScmReplyInfo@@UEAA@XZ
??1ScmRequestInfo@@UEAA@XZ
??1SecurityInfo@@UEAA@XZ
??1Serializer@@QEAA@XZ
??1ServerContextWorkData@@QEAA@XZ
??1ServerLocationInfo@@UEAA@XZ
??1TYPEINFOVTBL@@EEAA@XZ
??1XIPersistFile@@QEAA@XZ
??1XIPersistStorage@@QEAA@XZ
??1XIUnknown@@QEAA@XZ
??1XLOCK@@QEAA@XZ
??1XLOCK_LEAF@@QEAA@XZ
??1XSLOCK@@QEAA@XZ
??1iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??1iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@XZ
??2?$CArray@VCCacheNode@@@@SAPEAX_K@Z
??2?$CArray@VCFormatEtc@@@@SAPEAX_K@Z
??2?$CArray@VCStatData@@@@SAPEAX_K@Z
??2@YAPEAX_K@Z
??2AllocateThrow@@SAPEAX_K@Z
??2CClientCall@@SAPEAX_K@Z
??2CContextSwitcher@@SAPEAX_K@Z
??2CCtxCall@@SAPEAX_K@Z
??2CCtxChnl@@SAPEAX_K@Z
??2CCtxComChnl@@SAPEAX_K@Z
??2CDebugEventFire@@SAPEAX_K@Z
??2CDirectStream@@SAPEAX_KQEAVCDFBasis@@@Z
??2CDocFile@@SAPEAX_KQEAVCDFBasis@@@Z
??2CEndpointEntry@@SAPEAX_K@Z
??2CIDObject@@SAPEAX_K@Z
??2CLSvrClassEntry@CClassCache@@SAPEAX_K@Z
??2CMSFPage@@SAPEAX_KQEAUIMalloc@@0@Z
??2CMallocBased@@SAPEAX_KQEAUIMalloc@@@Z
??2CObjectContext@@SAPEAX_K@Z
??2CPrivAlloc@@SAPEAX_K@Z
??2CStdWrapper@@SAPEAX_K@Z
??2CTransactedStream@@SAPEAX_KQEAVCDFBasis@@@Z
??2CWrappedDocFile@@SAPEAX_KQEAVCDFBasis@@@Z
??2CtxEntry@@SAPEAX_K@Z
??2IFaceEntry@@SAPEAX_K@Z
??2LockEntry@@CAPEAX_K@Z
??2POSTRELRIFREF@@SAPEAX_K0@Z
??2TYPEINFOVTBL@@SAPEAX_K0@Z
??3?$CArray@VCCacheNode@@@@SAXPEAX@Z
??3?$CArray@VCFormatEtc@@@@SAXPEAX@Z
??3?$CArray@VCStatData@@@@SAXPEAX@Z
??3?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SAXPEAX@Z
??3?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SAXPEAX@Z
??3?$DedicatedAllocator@VCallFrame@@@@SAXPEAX@Z
??3@YAXPEAX@Z
??3CClientCall@@SAXPEAX@Z
??3CContextSwitcher@@SAXPEAX@Z
??3CCtxCall@@SAXPEAX@Z
??3CCtxChnl@@SAXPEAX@Z
??3CDebugEventFire@@SAXPEAX@Z
??3CDllAptEntry@CClassCache@@SAXPEAX@Z
??3CDllPathEntry@CClassCache@@SAXPEAX@Z
??3CEndpointEntry@@SAXPEAX@Z
??3CIDObject@@SAXPEAX@Z
??3CLSvrClassEntry@CClassCache@@SAXPEAX@Z
??3CMallocBased@@SAXPEAX@Z
??3CObjectContext@@SAXPEAX@Z
??3CPrivAlloc@@SAXPEAX@Z
??3CRpcThread@@SAXPEAX@Z
??3CStdWrapper@@SAXPEAX@Z
??3CtxEntry@@SAXPEAX@Z
??3EventPoolEntry@@SAXPEAX@Z
??3IFaceEntry@@SAXPEAX@Z
??3LockEntry@@CAXPEAX@Z
??3OXIDEntry@@CAXPEAX@Z
??3POSTRELRIFREF@@SAXPEAX@Z
??4?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAAEAV0@AEBV0@@Z
??4?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAAEAV0@AEBV0@@Z
??4CCacheNode@@QEAAAEBV0@AEBV0@@Z
??4CFormatEtc@@QEAAAEBV0@AEBV0@@Z
??4CStatData@@QEAAAEBV0@AEBV0@@Z
??4SpecialProperties@@QEAAAEAV0@AEAV0@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAAEAV01@AEBV01@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAAEAV01@AEBV01@@Z
??8?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBV0@@Z
??8?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBV0@@Z
??8?$OPAQUE_HANDLE@$00@@QEBAHAEBV0@@Z
??8CContextPropList@@QEAAHAEBV0@@Z
??8iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEBAHAEBV01@@Z
??8iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEBAHAEBV01@@Z
??9iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEBAHAEBV01@@Z
??9iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEBAHAEBV01@@Z
??ACRGTypeSizes@@QEAAEH@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAXH@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAXH@Z
??M?$TXLargeIntegerWrapper@T_LARGE_INTEGER@@J_J@@QEBAHV0@@Z
??_9CProcessActivator@@$BEA@AA
??_9CProcessActivator@@$BEI@AA
??_E?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UEAAPEAXI@Z
??_E?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@UEAAPEAXI@Z
??_E?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAPEAXI@Z
??_E?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAPEAXI@Z
??_E?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAPEAXI@Z
??_E?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@UEAAPEAXI@Z
??_E?$IFastStack@UDISPATCH_SERVER_FRAME@@@@UEAAPEAXI@Z
??_E?$IFastStack@VCallFrame@@@@UEAAPEAXI@Z
??_E?$LockingStack@UDISPATCH_CLIENT_FRAME@@@@UEAAPEAXI@Z
??_E?$LockingStack@UDISPATCH_SERVER_FRAME@@@@UEAAPEAXI@Z
??_E?$LockingStack@VCallFrame@@@@UEAAPEAXI@Z
??_EActivationProperties@@UEAAPEAXI@Z
??_EActivationPropertiesIn@@UEAAPEAXI@Z
??_EActivationPropertiesOut@@UEAAPEAXI@Z
??_ECAntiMoniker@@UEAAPEAXI@Z
??_ECAptRpcChnl@@MEAAPEAXI@Z
??_ECAsyncCall@@UEAAPEAXI@Z
??_ECBaseClassEntry@CClassCache@@UEAAPEAXI@Z
??_ECBaseMoniker@@UEAAPEAXI@Z
??_ECClientCall@@UEAAPEAXI@Z
??_ECComActivator@@UEAAPEAXI@Z
??_ECCompositeMoniker@@UEAAPEAXI@Z
??_ECCtxChnl@@UEAAPEAXI@Z
??_ECCtxComChnl@@EEAAPEAXI@Z
??_ECDAHolder@@EEAAPEAXI@Z
??_ECDAHolder@@G7EAAPEAXI@Z
??_ECDefLink@@EEAAPEAXI@Z
??_ECDefObject@@EEAAPEAXI@Z
??_ECDllClassEntry@CClassCache@@UEAAPEAXI@Z
??_ECFileMoniker@@EEAAPEAXI@Z
??_ECFinishObject@CDllPathEntry@CClassCache@@UEAAPEAXI@Z
??_ECFinishObject@CLSvrClassEntry@CClassCache@@UEAAPEAXI@Z
??_ECFrameFilter@@UEAAPEAXI@Z
??_ECHlprDialog@@UEAAPEAXI@Z
??_ECItemMoniker@@EEAAPEAXI@Z
??_ECLSvrClassEntry@CClassCache@@UEAAPEAXI@Z
??_ECLUAMoniker@@UEAAPEAXI@Z
??_ECMessageCall@@MEAAPEAXI@Z
??_ECNtfsStream@@UEAAPEAXI@Z
??_ECNtfsUpdateStreamForPropStg@@UEAAPEAXI@Z
??_ECOAHolder@@EEAAPEAXI@Z
??_ECOAHolder@@G7EAAPEAXI@Z
??_ECObjrefMoniker@@UEAAPEAXI@Z
??_ECOleCache@@UEAAPEAXI@Z
??_ECOleCache@@WBI@EAAPEAXI@Z
??_ECPipePSFactory@@UEAAPEAXI@Z
??_ECPipeProxyImp@@UEAAPEAXI@Z
??_ECPointerMoniker@@UEAAPEAXI@Z
??_ECRefExportCount@@UEAAPEAXI@Z
??_ECRpcChannelBuffer@@UEAAPEAXI@Z
??_ECSafeRefCount@@UEAAPEAXI@Z
??_ECSessionMoniker@@UEAAPEAXI@Z
??_ECStdIdentity@@UEAAPEAXI@Z
??_EContextInfo@@UEAAPEAXI@Z
??_EDISPATCH_CLIENT_FRAME@@EEAAPEAXI@Z
??_EDISPATCH_FRAME@@UEAAPEAXI@Z
??_EDISPATCH_INTERCEPTOR@@UEAAPEAXI@Z
??_EDISPATCH_SERVER_FRAME@@EEAAPEAXI@Z
??_EDefaultIBindStatusCallback@@UEAAPEAXI@Z
??_EDefaultIBindStatusCallback@@WBA@EAAPEAXI@Z
??_EIFinish@@UEAAPEAXI@Z
??_EINTERFACE_HELPER_CLSID@@UEAAPEAXI@Z
??_EInstanceInfo@@UEAAPEAXI@Z
??_EInstantiationInfo@@UEAAPEAXI@Z
??_EInterceptor@@EEAAPEAXI@Z
??_ELEGACY_FRAME@@MEAAPEAXI@Z
??_ELEGACY_INTERCEPTOR@@UEAAPEAXI@Z
??_EMD_METHOD@@QEAAPEAXI@Z
??_EScmReplyInfo@@UEAAPEAXI@Z
??_EScmRequestInfo@@UEAAPEAXI@Z
??_ESecurityInfo@@UEAAPEAXI@Z
??_EServerLocationInfo@@UEAAPEAXI@Z
??_ETYPEINFOVTBL@@EEAAPEAXI@Z
??_G?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAPEAXI@Z
??_G?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAPEAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UEAAPEAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@UEAAPEAXI@Z
??_G?$CArray@VCCacheNode@@@@AEAAPEAXI@Z
??_G?$CArray@VCFormatEtc@@@@AEAAPEAXI@Z
??_G?$CArray@VCStatData@@@@AEAAPEAXI@Z
??_G?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAPEAXI@Z
??_G?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAPEAXI@Z
??_G?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAPEAXI@Z
??_G?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAAPEAXI@Z
??_G?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAAPEAXI@Z
??_G?$IFastStack@UDISPATCH_CLIENT_FRAME@@@@UEAAPEAXI@Z
??_G?$IFastStack@UDISPATCH_SERVER_FRAME@@@@UEAAPEAXI@Z
??_G?$IFastStack@VCallFrame@@@@UEAAPEAXI@Z
??_G?$LockingStack@UDISPATCH_CLIENT_FRAME@@@@UEAAPEAXI@Z
??_G?$LockingStack@UDISPATCH_SERVER_FRAME@@@@UEAAPEAXI@Z
??_G?$LockingStack@VCallFrame@@@@UEAAPEAXI@Z
??_GActivationProperties@@UEAAPEAXI@Z
??_GActivationPropertiesIn@@UEAAPEAXI@Z
??_GActivationPropertiesOut@@UEAAPEAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAPEAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAPEAXI@Z
??_GAssoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAPEAXI@Z
??_GCAddrExclusionList@@QEAAPEAXI@Z
??_GCAggId@@AEAAPEAXI@Z
??_GCAntiMoniker@@UEAAPEAXI@Z
??_GCAptRpcChnl@@MEAAPEAXI@Z
??_GCAsyncCall@@UEAAPEAXI@Z
??_GCAsyncConnection@@QEAAPEAXI@Z
??_GCAsyncUnknownMgr@@QEAAPEAXI@Z
??_GCBaseClassEntry@CClassCache@@UEAAPEAXI@Z
??_GCBaseMoniker@@UEAAPEAXI@Z
??_GCBindStatusCallback@@QEAAPEAXI@Z
??_GCCacheNode@@QEAAPEAXI@Z
??_GCChannelHandle@@AEAAPEAXI@Z
??_GCChannelObject@@QEAAPEAXI@Z
??_GCClassEntry@CClassCache@@QEAAPEAXI@Z
??_GCClassMoniker@@AEAAPEAXI@Z
??_GCClientCall@@UEAAPEAXI@Z
??_GCClientCallMgr@@QEAAPEAXI@Z
??_GCClipDataObject@@AEAAPEAXI@Z
??_GCComActivator@@UEAAPEAXI@Z
??_GCComCat@@AEAAPEAXI@Z
??_GCComClassInfo@@QEAAPEAXI@Z
??_GCComNoClassInfo@@QEAAPEAXI@Z
??_GCComProcessInfo@@QEAAPEAXI@Z
??_GCComSxSClassInfo@@QEAAPEAXI@Z
??_GCCompositeMoniker@@UEAAPEAXI@Z
??_GCCompositeMonikerEnum@@AEAAPEAXI@Z
??_GCConnectionPoint@@QEAAPEAXI@Z
??_GCContextList@@IEAAPEAXI@Z
??_GCContextSwitcher@@QEAAPEAXI@Z
??_GCContinue@@AEAAPEAXI@Z
??_GCCtxCall@@QEAAPEAXI@Z
??_GCCtxChnl@@UEAAPEAXI@Z
??_GCCtxComChnl@@EEAAPEAXI@Z
??_GCCtxConnectionManager@@QEAAPEAXI@Z
??_GCDAHolder@@EEAAPEAXI@Z
??_GCDFBasis@@QEAAPEAXI@Z
??_GCDataAdviseCache@@QEAAPEAXI@Z
??_GCDdeObject@@AEAAPEAXI@Z
??_GCDefClient@@AEAAPEAXI@Z
??_GCDefLink@@EEAAPEAXI@Z
??_GCDefObject@@EEAAPEAXI@Z
??_GCDirectStream@@QEAAPEAXI@Z
??_GCDllClassEntry@CClassCache@@UEAAPEAXI@Z
??_GCDllPathEntry@CClassCache@@QEAAPEAXI@Z
??_GCDocFile@@QEAAPEAXI@Z
??_GCDragDataObject@@QEAAPEAXI@Z
??_GCDropTarget@@AEAAPEAXI@Z
??_GCDualStringArray@@QEAAPEAXI@Z
??_GCEMfObject@@QEAAPEAXI@Z
??_GCEndpointEntry@@QEAAPEAXI@Z
??_GCEnumCategories@@QEAAPEAXI@Z
??_GCEnumCategoriesOfClass@@QEAAPEAXI@Z
??_GCEnumClassesOfCategories@@QEAAPEAXI@Z
??_GCEnumContextProps@@QEAAPEAXI@Z
??_GCEnumFormatEtc@@AEAAPEAXI@Z
??_GCEnumFormatEtcDataArray@@AEAAPEAXI@Z
??_GCEnumSTATDATA@@AEAAPEAXI@Z
??_GCEnumSTATPROPBAG@@QEAAPEAXI@Z
??_GCEnumSTATPROPSETSTG@@QEAAPEAXI@Z
??_GCEnumSTATPROPSTG@@AEAAPEAXI@Z
??_GCEnumStatData@@AEAAPEAXI@Z
??_GCErrorObject@@AEAAPEAXI@Z
??_GCExposedDocFile@@QEAAPEAXI@Z
??_GCExposedIterator@@QEAAPEAXI@Z
??_GCExposedStream@@QEAAPEAXI@Z
??_GCFastBH@@QEAAPEAXI@Z
??_GCFileMoniker@@EEAAPEAXI@Z
??_GCFillLockBytes@@QEAAPEAXI@Z
??_GCFinishObject@CDllPathEntry@CClassCache@@UEAAPEAXI@Z
??_GCFinishObject@CLSvrClassEntry@CClassCache@@UEAAPEAXI@Z
??_GCFmCtrlUnknown@@AEAAPEAXI@Z
??_GCFormatEtc@@QEAAPEAXI@Z
??_GCFrameFilter@@UEAAPEAXI@Z
??_GCGenObject@@QEAAPEAXI@Z
??_GCGlobalOptions@@QEAAPEAXI@Z
??_GCHlprDialog@@UEAAPEAXI@Z
??_GCIDObject@@QEAAPEAXI@Z
??_GCImpAccessControl@COAccessControl@@QEAAPEAXI@Z
??_GCItemMoniker@@EEAAPEAXI@Z
??_GCLSvrClassEntry@CClassCache@@UEAAPEAXI@Z
??_GCLUAMoniker@@UEAAPEAXI@Z
??_GCLocalMachineNames@@QEAAPEAXI@Z
??_GCMSFPage@@QEAAPEAXI@Z
??_GCMSFPageTable@@QEAAPEAXI@Z
??_GCMStream@@QEAAPEAXI@Z
??_GCMachineNamesHelper@@QEAAPEAXI@Z
??_GCManualResetEvent@@QEAAPEAXI@Z
??_GCMapUintPtr@@QEAAPEAXI@Z
??_GCMemBytes@@AEAAPEAXI@Z
??_GCMemStm@@QEAAPEAXI@Z
??_GCMessageCall@@MEAAPEAXI@Z
??_GCMfObject@@QEAAPEAXI@Z
??_GCNFFTreeMutex@@QEAAPEAXI@Z
??_GCNtfsEnumSTATSTG@@QEAAPEAXI@Z
??_GCNtfsSTATSTGArray@@QEAAPEAXI@Z
??_GCNtfsStorage@@QEAAPEAXI@Z
??_GCNtfsStream@@UEAAPEAXI@Z
??_GCNtfsUpdateStreamForPropStg@@UEAAPEAXI@Z
??_GCOAHolder@@EEAAPEAXI@Z
??_GCOAccessControl@@QEAAPEAXI@Z
??_GCOLEDragDropHelper@@QEAAPEAXI@Z
??_GCObjList@CBindCtx@@QEAAPEAXI@Z
??_GCObjServer@@QEAAPEAXI@Z
??_GCObjectContext@@AEAAPEAXI@Z
??_GCObjrefMoniker@@UEAAPEAXI@Z
??_GCOleCache@@UEAAPEAXI@Z
??_GCPatternTbl@@QEAAPEAXI@Z
??_GCPerContext@@QEAAPEAXI@Z
??_GCPipePSFactory@@UEAAPEAXI@Z
??_GCPipeProxyImp@@UEAAPEAXI@Z
??_GCPointerMoniker@@UEAAPEAXI@Z
??_GCPres@@QEAAPEAXI@Z
??_GCProcessExtensionTbl@@QEAAPEAXI@Z
??_GCProcessPatternTbl@@QEAAPEAXI@Z
??_GCPropertyBagEx@@QEAAPEAXI@Z
??_GCPropertySetStorage@@QEAAPEAXI@Z
??_GCPropertyStorage@@QEAAPEAXI@Z
??_GCPubDocFile@@QEAAPEAXI@Z
??_GCPubStream@@QEAAPEAXI@Z
??_GCPunkForRelease@@AEAAPEAXI@Z
??_GCROTItem@@QEAAPEAXI@Z
??_GCRefCache@@AEAAPEAXI@Z
??_GCRefExportCount@@UEAAPEAXI@Z
??_GCRefMutexSem@@QEAAPEAXI@Z
??_GCRootPubDocFile@@QEAAPEAXI@Z
??_GCRotMonikerEnum@@QEAAPEAXI@Z
??_GCRpcChannelBuffer@@UEAAPEAXI@Z
??_GCRpcThread@@QEAAPEAXI@Z
??_GCRunningObjectTable@@QEAAPEAXI@Z
??_GCSSMappedStream@@QEAAPEAXI@Z
??_GCSTATPROPBAGArray@@QEAAPEAXI@Z
??_GCSafeRefCount@@UEAAPEAXI@Z
??_GCScmPatternTbl@@QEAAPEAXI@Z
??_GCSeekPointer@@QEAAPEAXI@Z
??_GCServerCallMgr@CRpcChannelBuffer@@QEAAPEAXI@Z
??_GCSessionMoniker@@UEAAPEAXI@Z
??_GCSharedMemoryBlock@@QEAAPEAXI@Z
??_GCSimpEnumSTATSTG@@QEAAPEAXI@Z
??_GCSimpStorage@@QEAAPEAXI@Z
??_GCSimpStorageOpen@@QEAAPEAXI@Z
??_GCSimpStream@@QEAAPEAXI@Z
??_GCSimpStreamOpen@@QEAAPEAXI@Z
??_GCSmAllocator@@QEAAPEAXI@Z
??_GCSpyTable@@QEAAPEAXI@Z
??_GCStackWalker@@QEAAPEAXI@Z
??_GCStackWalkerStack@@QEAAPEAXI@Z
??_GCStackWalkerSymbol@@QEAAPEAXI@Z
??_GCStatArray@@AEAAPEAXI@Z
??_GCStatData@@QEAAPEAXI@Z
??_GCStdEvent@@QEAAPEAXI@Z
??_GCStdIdentity@@UEAAPEAXI@Z
??_GCStdWrapper@@AEAAPEAXI@Z
??_GCSurrogateProcessActivator@@QEAAPEAXI@Z
??_GCSynchronizeContainer@@QEAAPEAXI@Z
??_GCTransactedStream@@QEAAPEAXI@Z
??_GCUpdate@@QEAAPEAXI@Z
??_GCVerifierTlsData@@QEAAPEAXI@Z
??_GCWrappedDocFile@@QEAAPEAXI@Z
??_GCallFrame@@QEAAPEAXI@Z
??_GContextInfo@@UEAAPEAXI@Z
??_GCpUnkList@@QEAAPEAXI@Z
??_GCsCatInfo@@QEAAPEAXI@Z
??_GDISPATCH_CLIENT_FRAME@@EEAAPEAXI@Z
??_GDISPATCH_FRAME@@UEAAPEAXI@Z
??_GDISPATCH_INTERCEPTOR@@UEAAPEAXI@Z
??_GDISPATCH_SERVER_FRAME@@EEAAPEAXI@Z
??_GDefaultIBindStatusCallback@@UEAAPEAXI@Z
??_GGenericStream@@QEAAPEAXI@Z
??_GIFaceEntry@@QEAAPEAXI@Z
??_GIFinish@@UEAAPEAXI@Z
??_GINTERFACE_HELPER_CLSID@@UEAAPEAXI@Z
??_GInstanceInfo@@UEAAPEAXI@Z
??_GInstantiationInfo@@UEAAPEAXI@Z
??_GInterceptor@@EEAAPEAXI@Z
??_GLEGACY_FRAME@@MEAAPEAXI@Z
??_GLEGACY_INTERCEPTOR@@UEAAPEAXI@Z
??_GMD_INTERFACE@@AEAAPEAXI@Z
??_GMD_INTERFACE_CACHE@@QEAAPEAXI@Z
??_GMarshallingChannel@@QEAAPEAXI@Z
??_GOpaqueDataInfo@@QEAAPEAXI@Z
??_GSDDInfo@@QEAAPEAXI@Z
??_GScmReplyInfo@@UEAAPEAXI@Z
??_GScmRequestInfo@@UEAAPEAXI@Z
??_GSecurityInfo@@UEAAPEAXI@Z
??_GSerializer@@QEAAPEAXI@Z
??_GServerContextWorkData@@QEAAPEAXI@Z
??_GServerLocationInfo@@UEAAPEAXI@Z
??_GSpecialProperties@@QEAAPEAXI@Z
??_GTYPEINFOVTBL@@EEAAPEAXI@Z
??_H@YAXPEAX_KHP6APEAX0@Z@Z
??_I@YAXPEAX_KHP6AX0@Z@Z
?ANSIStmToStr@@YAJAEAVCStmBufRead@@PEAPEADPEAK@Z
?ANSIStrToStm@@YAJAEAVCStmBufWrite@@PEBD@Z
?ATHostActivatorGetClassObject@@YAJAEBU_GUID@@PEAPEAX@Z
?Abort@CMessageCall@@UEAAXXZ
?AbortBegin@CAsyncStateMachine@@QEAAJPEAUIUnknown@@J@Z
?AckCancel@CAsyncCall@@UEAAXXZ
?AckCancel@CClientCall@@UEAAXXZ
?AcquireReaderLock@CRWLock@@QEAAKK@Z
?AcquireWriterLock@CRWLock@@QEAAKK@Z
?ActErrorPriority@@YAKJ@Z
?ActivateByContext@CProcessActivator@@EEAAJPEAVActivationPropertiesIn@@PEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@P81@EAAJK1023@Z@Z
?ActivationBegins@CSurrogateProcessActivator@@EEAAJXZ
?ActivationFails@CSurrogateProcessActivator@@EEAAJXZ
?ActivationProcessInit@@YAJXZ
?ActivationSucceeds@CSurrogateProcessActivator@@EEAAJXZ
?Add@CChildInstanceList@@QEAAXPEAVPRevertable@@@Z
?Add@CContextList@@QEAAXPEAVCContext@@@Z
?Add@CCtxPropHashTable@@QEAAXPEAVCObjectContext@@@Z
?Add@CCtxUUIDHashTable@@QEAAXPEAVCObjectContext@@@Z
?Add@CDdeConnectionTable@@QEAAJKGK@Z
?Add@CDwordBag@@QEAAH_K@Z
?Add@CHashTable@@IEAAXKPEAUSHashChain@@@Z
?Add@CMonikerPtrBuf@@QEAAJPEAUIMoniker@@@Z
?Add@COIDTable@@QEAAXPEAVCIDObject@@@Z
?Add@CPIDTable@@QEAAJPEAVCIDObject@@@Z
?Add@CPtrBlock@@QEAAXPEAX@Z
?Add@CPtrCache@@QEAAJPEAX@Z
?Add@CSpyTable@@QEAAHPEAX@Z
?Add@CUpdateList@@QEAAPEAVCUpdate@@QEAUIMalloc@@PEBVCDfName@@1KKPEAVPTSetMember@@@Z
?Add@CVerifierStackData@@QEAAJPEAPEAX@Z
?Add@CpUnkList@@QEAAJPEAUIUnknown@@@Z
?Add@HAS_INTERFACES@@QEAAXAEBU1@@Z
?AddACEToStreamACL@@YAXPEAUtagSTREAM_ACE@@PEAUtagPCB@@@Z
?AddAccessList@CImpAccessControl@COAccessControl@@AEAAJPEAUtagSTREAM_ACE@@PEAXKKK@Z
?AddClient@@YAHPEAPEAXPEAX1@Z
?AddConnection@CConnectionPoint@@UEAAJPEAUIProgressNotify@@PEAK@Z
?AddConnection@CDefObject@@UEAAKKK@Z
?AddContext@CCtxTable@@SAJPEAVCObjectContext@@@Z
?AddCtxEntry@CStdWrapper@@QEAAPEAVCtxEntry@@PEAVCPolicySet@@@Z
?AddCtxEntry@IFaceEntry@@QEAAPEAVCtxEntry@@PEAVCPolicySet@@@Z
?AddElement@CCache@@QEAAJKGPEAPEAEPEBGPEAGPEAUIUnknown@@PEAPEAU2@@Z
?AddElement@CCache@@QEAAJKPEAEGPEAGPEAUIUnknown@@PEAPEAU2@@Z
?AddEntry@CApartmentHashTable@@QEAAJKAEAK@Z
?AddEntry@CEndpointsTable@@QEAAPEAVCEndpointEntry@@GPEAG0K@Z
?AddEntry@CProcessExtensionTbl@@AEAAJAEBU_GUID@@PEBGK@Z
?AddEntry@CRIFTable@@AEAAJAEBU_GUID@@0KPEAPEAUtagRIFEntry@@@Z
?AddExtent@CExtentList@@QEAAJPEBU_MONIKEREXTENT@@@Z
?AddHydraSessionID@@YAXPEAVActivationPropertiesIn@@@Z
?AddIPIDEntry@CStdMarshal@@AEAAJPEAVOXIDEntry@@PEAU_GUID@@AEBU3@PEAVCCtxComChnl@@PEAUIUnknown@@PEAXPEAPEAUtagIPIDEntry@@@Z
?AddItem@?$CArray@VCCacheNode@@@@QEAAKAEBVCCacheNode@@@Z
?AddItem@?$CArray@VCFormatEtc@@@@QEAAKAEBVCFormatEtc@@@Z
?AddItem@?$CArray@VCStatData@@@@QEAAKAEBVCStatData@@@Z
?AddMIDEntry@CMIDTable@@AEAAJAEB_KKPEAUtagDUALSTRINGARRAY@@PEAPEAVMIDEntry@@@Z
?AddMarshal@CMarshalList@@QEAAXPEAV1@@Z
?AddMember@CTSSet@@QEAAXPEAVPTSetMember@@@Z
?AddOIDUnpinRequest@COIDTable@@QEAAXPEAVCIDObject@@@Z
?AddOXIDEntry@COXIDTable@@AEAAJAEB_KPEAUtagOXID_INFO@@PEAVMIDEntry@@KPEAEKPEAPEAVOXIDEntry@@@Z
?AddOpaqueData@CComActivator@@UEAAJPEAUtagOpaqueData@@@Z
?AddOpaqueData@OpaqueDataInfo@@UEAAJPEAUtagOpaqueData@@@Z
?AddOrigClsCtx@@YAXPEAVActivationPropertiesIn@@K@Z
?AddPartitionID@@YAXPEAVActivationPropertiesIn@@@Z
?AddPolicy@CPolicySet@@UEAAJKAEBU_GUID@@PEAUIPolicy@@@Z
?AddRef@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAKXZ
?AddRef@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAKXZ
?AddRef@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAKXZ
?AddRef@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAKXZ
?AddRef@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAKXZ
?AddRef@ActivationProperties@@UEAAKXZ
?AddRef@ActivationProperties@@W7EAAKXZ
?AddRef@ActivationProperties@@WBA@EAAKXZ
?AddRef@ActivationPropertiesIn@@UEAAKXZ
?AddRef@ActivationPropertiesIn@@W7EAAKXZ
?AddRef@ActivationPropertiesIn@@WBA@EAAKXZ
?AddRef@ActivationPropertiesIn@@WCAA@EAAKXZ
?AddRef@ActivationPropertiesIn@@WCAI@EAAKXZ
?AddRef@ActivationPropertiesIn@@WCBA@EAAKXZ
?AddRef@ActivationPropertiesOut@@UEAAKXZ
?AddRef@ActivationPropertiesOut@@W7EAAKXZ
?AddRef@ActivationPropertiesOut@@WBA@EAAKXZ
?AddRef@ActivationPropertiesOut@@WCAA@EAAKXZ
?AddRef@ActivationPropertiesOut@@WCAI@EAAKXZ
?AddRef@CAddrControl@@UEAAKXZ
?AddRef@CAddrControl@@W7EAAKXZ
?AddRef@CAddrExclusionList@@UEAAKXZ
?AddRef@CAdvSinkImpl@CDefLink@@UEAAKXZ
?AddRef@CAdvSinkImpl@CDefObject@@UEAAKXZ
?AddRef@CAdviseSinkImpl@CDefClient@@UEAAKXZ
?AddRef@CAdviseSinkImpl@COleCache@@UEAAKXZ
?AddRef@CAggId@@UEAAKXZ
?AddRef@CAsyncCall@@UEAAKXZ
?AddRef@CAsyncCall@@W7EAAKXZ
?AddRef@CAsyncConnection@@UEAAKXZ
?AddRef@CAsyncUnknownMgr@@UEAAKXZ
?AddRef@CAsyncUnknownMgr@@W7EAAKXZ
?AddRef@CBaseMoniker@@UEAAKXZ
?AddRef@CBaseMoniker@@W7EAAKXZ
?AddRef@CBindCtx@@UEAAKXZ
?AddRef@CBindStatusCallback@@UEAAKXZ
?AddRef@CBindStatusCallback@@W7EAAKXZ
?AddRef@CCacheDataImpl@COleCache@@UEAAKXZ
?AddRef@CCacheUnkImpl@COleCache@@UEAAKXZ
?AddRef@CCacheViewImpl@COleCache@@UEAAKXZ
?AddRef@CChannelObject@@UEAAKXZ
?AddRef@CChannelObject@@W7EAAKXZ
?AddRef@CChannelObject@@WBA@EAAKXZ
?AddRef@CChannelObject@@WBI@EAAKXZ
?AddRef@CChannelObject@@WCA@EAAKXZ
?AddRef@CClassMoniker@@UEAAKXZ
?AddRef@CClassMoniker@@W7EAAKXZ
?AddRef@CClassMoniker@@WBA@EAAKXZ
?AddRef@CClientCall@@UEAAKXZ
?AddRef@CClientCall@@W7EAAKXZ
?AddRef@CClientCallMgr@@UEAAKXZ
?AddRef@CClientCallMgr@@W7EAAKXZ
?AddRef@CClientCallMgr@@WBA@EAAKXZ
?AddRef@CClientCallMgr@@WBI@EAAKXZ
?AddRef@CClipDataObject@@UEAAKXZ
?AddRef@CComActivator@@UEAAKXZ
?AddRef@CComActivator@@W7EAAKXZ
?AddRef@CComActivator@@WBA@EAAKXZ
?AddRef@CComApartment@@UEAAKXZ
?AddRef@CComCat@@UEAAKXZ
?AddRef@CComCat@@W7EAAKXZ
?AddRef@CComCatalog@@UEAAKXZ
?AddRef@CComCatalog@@W7EAAKXZ
?AddRef@CComCatalog@@WBA@EAAKXZ
?AddRef@CComCatalog@@WBI@EAAKXZ
?AddRef@CComCatalog@@WCA@EAAKXZ
?AddRef@CComCatalog@@WCI@EAAKXZ
?AddRef@CComClassInfo@@UEAAKXZ
?AddRef@CComClassInfo@@W7EAAKXZ
?AddRef@CComClassInfo@@WBA@EAAKXZ
?AddRef@CComClassInfo@@WBI@EAAKXZ
?AddRef@CComClassInfo@@WCA@EAAKXZ
?AddRef@CComNoClassInfo@@UEAAKXZ
?AddRef@CComNoClassInfo@@W7EAAKXZ
?AddRef@CComNoClassInfo@@WBA@EAAKXZ
?AddRef@CComProcessInfo@@UEAAKXZ
?AddRef@CComProcessInfo@@W7EAAKXZ
?AddRef@CComProcessInfo@@WBA@EAAKXZ
?AddRef@CComRegCatalog@@UEAAKXZ
?AddRef@CComSxSCatalog@@UEAAKXZ
?AddRef@CComSxSClassInfo@@UEAAKXZ
?AddRef@CComSxSClassInfo@@W7EAAKXZ
?AddRef@CComSxSClassInfo@@WBA@EAAKXZ
?AddRef@CCompositeMonikerEnum@@UEAAKXZ
?AddRef@CConnectionPoint@@UEAAKXZ
?AddRef@CContextSwitcher@@UEAAKXZ
?AddRef@CContinue@@UEAAKXZ
?AddRef@CCtxCall@@UEAAKXZ
?AddRef@CCtxChnl@@UEAAKXZ
?AddRef@CCtxChnl@@W7EAAKXZ
?AddRef@CCtxChnl@@WBA@EAAKXZ
?AddRef@CCtxHook@@UEAAKXZ
?AddRef@CDAHolder@@UEAAKXZ
?AddRef@CDataObjectImpl@CDdeObject@@UEAAKXZ
?AddRef@CDdeServerCallMgr@@UEAAKXZ
?AddRef@CDdeServerCallMgr@@W7EAAKXZ
?AddRef@CDdeServerCallMgr@@WBA@EAAKXZ
?AddRef@CDebugChannelHook@@UEAAKXZ
?AddRef@CDebugEventFire@@UEAAKXZ
?AddRef@CDebugEventFireCF@@UEAAKXZ
?AddRef@CDefLink@@UEAAKXZ
?AddRef@CDefLink@@W7EAAKXZ
?AddRef@CDefLink@@WBA@EAAKXZ
?AddRef@CDefLink@@WBI@EAAKXZ
?AddRef@CDefLink@@WCA@EAAKXZ
?AddRef@CDefObject@@UEAAKXZ
?AddRef@CDefObject@@W7EAAKXZ
?AddRef@CDefObject@@WBA@EAAKXZ
?AddRef@CDefObject@@WBI@EAAKXZ
?AddRef@CDefObject@@WCA@EAAKXZ
?AddRef@CDelayUnlockContainer@@UEAAKXZ
?AddRef@CDestObject@@UEAAKXZ
?AddRef@CDestObjectWrapper@@UEAAKXZ
?AddRef@CDestObjectWrapper@@W7EAAKXZ
?AddRef@CDllFnPtrMoniker@CClassCache@@UEAAKXZ
?AddRef@CDllHost@@UEAAKXZ
?AddRef@CDllHost@@W7EAAKXZ
?AddRef@CDocfileUnmarshalFactory@@UEAAKXZ
?AddRef@CDocfileUnmarshalFactory@@W7EAAKXZ
?AddRef@CDragDataObject@@UEAAKXZ
?AddRef@CDropTarget@@UEAAKXZ
?AddRef@CEMfObject@@UEAAKXZ
?AddRef@CEnumCategories@@UEAAKXZ
?AddRef@CEnumCategoriesOfClass@@UEAAKXZ
?AddRef@CEnumClassesOfCategories@@UEAAKXZ
?AddRef@CEnumContextProps@@UEAAKXZ
?AddRef@CEnumFmt@@UEAAKXZ
?AddRef@CEnumFormatEtc@@UEAAKXZ
?AddRef@CEnumFormatEtcDataArray@@UEAAKXZ
?AddRef@CEnumSTATDATA@@UEAAKXZ
?AddRef@CEnumSTATPROPBAG@@UEAAKXZ
?AddRef@CEnumSTATPROPSETSTG@@UEAAKXZ
?AddRef@CEnumSTATPROPSTG@@UEAAKXZ
?AddRef@CEnumStatData@@UEAAKXZ
?AddRef@CEnumVerb@@EEAAKXZ
?AddRef@CErrorChannelHook@@UEAAKXZ
?AddRef@CErrorObject@@UEAAKXZ
?AddRef@CErrorObject@@W7EAAKXZ
?AddRef@CErrorObject@@WBA@EAAKXZ
?AddRef@CExposedDocFile@@UEAAKXZ
?AddRef@CExposedDocFile@@W7EAAKXZ
?AddRef@CExposedDocFile@@WDA@EAAKXZ
?AddRef@CExposedDocFile@@WDI@EAAKXZ
?AddRef@CExposedDocFile@@WEA@EAAKXZ
?AddRef@CExposedDocFile@@WEI@EAAKXZ
?AddRef@CExposedDocFile@@WFA@EAAKXZ
?AddRef@CExposedIterator@@UEAAKXZ
?AddRef@CExposedIterator@@W7EAAKXZ
?AddRef@CExposedStream@@UEAAKXZ
?AddRef@CExposedStream@@W7EAAKXZ
?AddRef@CExposedStream@@WBA@EAAKXZ
?AddRef@CExposedStream@@WBI@EAAKXZ
?AddRef@CFileStream@@UEAAKXZ
?AddRef@CFileStream@@W7EAAKXZ
?AddRef@CFileStream@@WBA@EAAKXZ
?AddRef@CFileStream@@WBI@EAAKXZ
?AddRef@CFillLockBytes@@UEAAKXZ
?AddRef@CFillLockBytes@@W7EAAKXZ
?AddRef@CFillLockBytes@@WBA@EAAKXZ
?AddRef@CFmCtrlUnknown@@EEAAKXZ
?AddRef@CFreeMarshaler@@UEAAKXZ
?AddRef@CGIPMessageParam@@UEAAKXZ
?AddRef@CGIPTable@@UEAAKXZ
?AddRef@CGenObject@@UEAAKXZ
?AddRef@CGlobalOptions@@UEAAKXZ
?AddRef@CGlobalOptions@@W7EAAKXZ
?AddRef@CIDObject@@UEAAKXZ
?AddRef@CImpAccessControl@COAccessControl@@UEAAKXZ
?AddRef@CImpAccessControl@COAccessControl@@W7EAAKXZ
?AddRef@CInnerUnk@CComCat@@UEAAKXZ
?AddRef@CInprocSystemActivator@@UEAAKXZ
?AddRef@CInterfaceFromWindowProp@@UEAAKXZ
?AddRef@CInternalUnk@CStdIdentity@@UEAAKXZ
?AddRef@CInternalUnk@CStdIdentity@@W7EAAKXZ
?AddRef@CLUAMoniker@@UEAAKXZ
?AddRef@CLUAMoniker@@W7EAAKXZ
?AddRef@CLUAMoniker@@WCI@EAAKXZ
?AddRef@CLUAMoniker@@WDA@EAAKXZ
?AddRef@CLocalMachineNames@@UEAAKXZ
?AddRef@CMREInnerUnknown@@UEAAKXZ
?AddRef@CManualResetEvent@@UEAAKXZ
?AddRef@CManualResetEvent@@W7EAAKXZ
?AddRef@CMarshalImplPStream@@UEAAKXZ
?AddRef@CMemBytes@@UEAAKXZ
?AddRef@CMemStm@@UEAAKXZ
?AddRef@CMfObject@@UEAAKXZ
?AddRef@CMonikerFactory@@UEAAKXZ
?AddRef@CMonikerFactory@@W7EAAKXZ
?AddRef@CNFFMappedStream@@UEAAKXZ
?AddRef@CNFFTreeMutex@@UEAAKXZ
?AddRef@CNdrStream@@UEAAKXZ
?AddRef@CNoEnum@@UEAAKXZ
?AddRef@CNtfsEnumSTATSTG@@UEAAKXZ
?AddRef@CNtfsStorage@@UEAAKXZ
?AddRef@CNtfsStorage@@W7EAAKXZ
?AddRef@CNtfsStorage@@WBA@EAAKXZ
?AddRef@CNtfsStorageForPropSetStg@@UEAAKXZ
?AddRef@CNtfsStream@@UEAAKXZ
?AddRef@CNtfsStream@@W7EAAKXZ
?AddRef@CNullWalker@@UEAAKXZ
?AddRef@COAHolder@@UEAAKXZ
?AddRef@COAccessControl@@UEAAKXZ
?AddRef@COLEDragDropHelper@@UEAAKXZ
?AddRef@CObjServer@@UEAAKXZ
?AddRef@CObjectContext@@UEAAKXZ
?AddRef@CObjectContext@@W7EAAKXZ
?AddRef@CObjectContext@@WBA@EAAKXZ
?AddRef@CObjectContext@@WBI@EAAKXZ
?AddRef@CObjectContext@@WCA@EAAKXZ
?AddRef@CObjectContext@@WCI@EAAKXZ
?AddRef@CObjectContext@@WDA@EAAKXZ
?AddRef@COleCache@@UEAAKXZ
?AddRef@COleCache@@W7EAAKXZ
?AddRef@COleCache@@WBA@EAAKXZ
?AddRef@COleClientSiteImpl@CDefClient@@UEAAKXZ
?AddRef@COleItemContainerImpl@CDdeObject@@UEAAKXZ
?AddRef@COleObjectImpl@CDdeObject@@UEAAKXZ
?AddRef@CPackagerMoniker@@UEAAKXZ
?AddRef@CPersistStgImpl@CDdeObject@@UEAAKXZ
?AddRef@CPipePSFactory@@UEAAKXZ
?AddRef@CPipeProxyImp@@UEAAKXZ
?AddRef@CPointerMoniker@@UEAAKXZ
?AddRef@CPointerMoniker@@W7EAAKXZ
?AddRef@CPointerMoniker@@WCI@EAAKXZ
?AddRef@CPolicySet@@UEAAKXZ
?AddRef@CPrivDragDrop@@UEAAKXZ
?AddRef@CPrivUnknown@CAsyncUnknownMgr@@UEAAKXZ
?AddRef@CPrivUnknown@CClientCallMgr@@UEAAKXZ
?AddRef@CPrivUnknown@CDefLink@@UEAAKXZ
?AddRef@CPrivUnknown@CDefObject@@UEAAKXZ
?AddRef@CPropertyBagEx@@UEAAKXZ
?AddRef@CPropertyBagEx@@W7EAAKXZ
?AddRef@CPropertySetStorage@@UEAAKXZ
?AddRef@CPropertyStorage@@UEAAKXZ
?AddRef@CProxyManagerImpl@CDdeObject@@UEAAKXZ
?AddRef@CPunkForRelease@@UEAAKXZ
?AddRef@CRemoteUnknown@@UEAAKXZ
?AddRef@CRotMonikerEnum@@UEAAKXZ
?AddRef@CRpcCall@@UEAAKXZ
?AddRef@CRpcCall@@W7EAAKXZ
?AddRef@CRpcCall@@WBA@EAAKXZ
?AddRef@CRpcChannelBuffer@@UEAAKXZ
?AddRef@CRpcChannelBuffer@@W7EAAKXZ
?AddRef@CRpcChannelBuffer@@WBA@EAAKXZ
?AddRef@CRpcHelper@@UEAAKXZ
?AddRef@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?AddRef@CRunningObjectTable@@UEAAKXZ
?AddRef@CRunningObjectTable@@W7EAAKXZ
?AddRef@CSCInnerUnknown@@UEAAKXZ
?AddRef@CSSMappedStream@@UEAAKXZ
?AddRef@CSTInnerUnknown@@UEAAKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@UEAAKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@W7EAAKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@WBA@EAAKXZ
?AddRef@CServerCallMgr@CRpcChannelBuffer@@WBI@EAAKXZ
?AddRef@CServerSecurity@@UEAAKXZ
?AddRef@CServerSecurity@@W7EAAKXZ
?AddRef@CServerSecurity@@WBA@EAAKXZ
?AddRef@CSessionMoniker@@UEAAKXZ
?AddRef@CSessionMoniker@@W7EAAKXZ
?AddRef@CSessionMoniker@@WCI@EAAKXZ
?AddRef@CSimpEnumSTATSTG@@UEAAKXZ
?AddRef@CSimpStorage@@UEAAKXZ
?AddRef@CSimpStorage@@W7EAAKXZ
?AddRef@CSimpStorage@@WBA@EAAKXZ
?AddRef@CSimpStream@@UEAAKXZ
?AddRef@CSimpStream@@W7EAAKXZ
?AddRef@CSmAllocator@@UEAAKXZ
?AddRef@CStackWalker@@UEAAKXZ
?AddRef@CStackWalkerStack@@UEAAKXZ
?AddRef@CStackWalkerSymbol@@UEAAKXZ
?AddRef@CStaticWrapper@@UEAAKXZ
?AddRef@CStdClassFactory@@UEAAKXZ
?AddRef@CStdEvent@@UEAAKXZ
?AddRef@CStdEvent@@W7EAAKXZ
?AddRef@CStdIdentity@@UEAAKXZ
?AddRef@CStdIdentity@@W7EAAKXZ
?AddRef@CStdIdentity@@WBAI@EAAKXZ
?AddRef@CStdIdentity@@WBBA@EAAKXZ
?AddRef@CStdIdentity@@WOA@EAAKXZ
?AddRef@CStdIdentity@@WPA@EAAKXZ
?AddRef@CStdWrapper@@UEAAKXZ
?AddRef@CStreamOnMessage@@UEAAKXZ
?AddRef@CSurrogateProcessActivator@@UEAAKXZ
?AddRef@CSurrogateProcessActivator@@WCA@EAAKXZ
?AddRef@CSurrogateProcessActivator@@WCI@EAAKXZ
?AddRef@CSurrogateProcessActivator@@WDA@EAAKXZ
?AddRef@CSynchronizeContainer@@UEAAKXZ
?AddRef@CTrackingCompositeMoniker@@UEAAKXZ
?AddRef@CTrackingFileMoniker@@UEAAKXZ
?AddRef@CUnknownImpl@CDdeObject@@UEAAKXZ
?AddRef@CUnknownImpl@CDefClient@@UEAAKXZ
?AddRef@CUrlMonWrapper@@UEAAKXZ
?AddRef@CallFrame@@UEAAKXZ
?AddRef@CallFrame@@W7EAAKXZ
?AddRef@ComPsClassFactory@@UEAAKXZ
?AddRef@ComPsClassFactory@@W7EAAKXZ
?AddRef@ContextInfo@@UEAAKXZ
?AddRef@ContextInfo@@W7EAAKXZ
?AddRef@ContextInfo@@WCA@EAAKXZ
?AddRef@CpUnkMoniker@CClassCache@@UEAAKXZ
?AddRef@CsCatInfo@@UEAAKXZ
?AddRef@DDE_CHANNEL@@UEAAKXZ
?AddRef@DDE_CHANNEL@@W7EAAKXZ
?AddRef@DefaultIBindStatusCallback@@UEAAKXZ
?AddRef@DefaultIBindStatusCallback@@W7EAAKXZ
?AddRef@GenericStream@@UEAAKXZ
?AddRef@GenericStream@@W7EAAKXZ
?AddRef@InprocActpropsUnmarshaller@@UEAAKXZ
?AddRef@InstanceInfo@@UEAAKXZ
?AddRef@InstanceInfo@@W7EAAKXZ
?AddRef@InstantiationInfo@@UEAAKXZ
?AddRef@InstantiationInfo@@W7EAAKXZ
?AddRef@Interceptor@@EEAAKXZ
?AddRef@Interceptor@@G7EAAKXZ
?AddRef@Interceptor@@GBA@EAAKXZ
?AddRef@Interceptor@@GBI@EAAKXZ
?AddRef@Interceptor@@GCI@EAAKXZ
?AddRef@InterfaceWalkerFree@@UEAAKXZ
?AddRef@LEGACY_FRAME@@UEAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@UEAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@W7EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBA@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBI@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WCA@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WCI@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WDI@EAAKXZ
?AddRef@MarshallingChannel@@UEAAKXZ
?AddRef@MarshallingChannel@@W7EAAKXZ
?AddRef@OpaqueDataInfo@@UEAAKXZ
?AddRef@OpaqueDataInfo@@W7EAAKXZ
?AddRef@OutSerializer@ActivationPropertiesOut@@UEAAKXZ
?AddRef@POSTRELRIFREF@@UEAAKXZ
?AddRef@PTSetMember@@QEAAXXZ
?AddRef@SSimpleWalker@@UEAAKXZ
?AddRef@ScmReplyInfo@@UEAAKXZ
?AddRef@ScmReplyInfo@@W7EAAKXZ
?AddRef@ScmRequestInfo@@UEAAKXZ
?AddRef@ScmRequestInfo@@W7EAAKXZ
?AddRef@SecurityInfo@@UEAAKXZ
?AddRef@SecurityInfo@@W7EAAKXZ
?AddRef@SecurityInfo@@WBA@EAAKXZ
?AddRef@ServerLocationInfo@@UEAAKXZ
?AddRef@ServerLocationInfo@@W7EAAKXZ
?AddRef@SpecialProperties@@UEAAKXZ
?AddRef@SpecialProperties@@W7EAAKXZ
?AddRefInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAX@Z
?AddRefOnProcess@CSurrogateProcessActivator@@UEAAKXZ
?AddRefServerProcess@CClassCache@@SAKXZ
?AddRequestedIIDs@ActivationPropertiesIn@@UEAAJKPEAU_GUID@@@Z
?AddRequestedIIDs@InstantiationInfo@@QEAAJKPEAU_GUID@@@Z
?AddReservedItem@?$CArray@VCCacheNode@@@@QEAAHAEBVCCacheNode@@K@Z
?AddSerializableIfs@ActivationProperties@@QEAAJPEAVSerializableProperty@@@Z
?AddSuppliedRefs@CStdMarshal@@AEAAXPEAUtagSTDOBJREF@@PEAUtagIPIDEntry@@@Z
?AddSynchronize@CSynchronizeContainer@@UEAAJPEAUISynchronize@@@Z
?AddToApartmentChain@CLSvrClassEntry@CClassCache@@QEAAJXZ
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAJPEAV?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@@Z
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAJPEAV?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@@Z
?AddToCache@MD_INTERFACE@@QEAAJPEAUMD_INTERFACE_CACHE@@@Z
?AddToFreeList@CRpcThreadCache@@QEAAXPEAVCRpcThread@@@Z
?AddToFreeList@CtxEntry@@QEAAXPEAPEAV1@K@Z
?AddXSMember@CPubDocFile@@QEAAXPEAVPTSetMember@@0K@Z
?AddpUnk@CCtxConnectionManager@@QEAAJPEAUIUnknown@@@Z
?AddrExclListInitialize2@CAddrExclusionList@@QEAAJPEAUIEnumString@@K@Z
?Address@CStackWalkerSymbol@@UEAA_KXZ
?AdjustToken@CChannelHandle@@QEAAJKPEAHPEAPEAX@Z
?AdvCancel@CAsyncCall@@UEAAJXZ
?AdvCancel@CClientCall@@UEAAJXZ
?Advance@CarefulBufferReader@@QEAAX_K@Z
?Advance@SerializedPropertyReader@@QEAAJK@Z
?AdvanceTo@CarefulBufferReader@@QEAAXPEAE@Z
?Advise@CAsyncConnection@@UEAAJPEAUIUnknown@@PEAK@Z
?Advise@CDAHolder@@UEAAJPEAUIDataObject@@PEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?Advise@CDataAdviseCache@@QEAAJPEAUIDataObject@@PEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?Advise@CDefLink@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@CDefObject@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@COAHolder@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@COleObjectImpl@CDdeObject@@UEAAJPEAUIAdviseSink@@PEAK@Z
?AdviseData@CDefClient@@QEAAJPEAUHWND__@@GPEAXPEAH@Z
?AdviseOn@CDdeObject@@AEAAJGH@Z
?AdviseStdItems@CDefClient@@QEAAJPEAUHWND__@@GPEAXPEAH@Z
?AgeOutEntries@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?AgeOutEntries@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAXXZ
?Aggregate@CObjectContext@@UEAAJPEAUIUnknown@@@Z
?Align@CarefulBufferReader@@QEAAXH@Z
?AllButFirst@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?AllButLast@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?Alloc@CErrorSmAllocator@@UEAAPEAX_K@Z
?Alloc@CSmAllocator@@UEAAPEAX_K@Z
?Alloc@CallFrame@@QEAAPEAX_K@Z
?Alloc@CallFrame@@QEAAPEAX_KH@Z
?Alloc@DeserializeHelper@@AEAAJPEAPEAXK@Z
?AllocAndCopy@@YAPEAXKPEAXPEAJ@Z
?AllocAndCopyBstr@DeserializeHelper@@AEAAJPEAPEAGPEBGK@Z
?AllocArray@DeserializeHelper@@AEAAJPEAPEAXKK@Z
?AllocBuffer@CCtxCall@@QEAAPEAXXZ
?AllocBuffer@CallFrame@@QEAAPEAX_K@Z
?AllocCallFromList@CAsyncCall@@SAPEAVCMessageCall@@XZ
?AllocCount@DeserializeHelper@@AEAAJK@Z
?AllocDdeChannel@CDdeObject@@QEAAHPEAPEAVDDE_CHANNEL@@H@Z
?AllocEntry@CGIPTable@@AEAAJPEAPEAUtagGIPEntry@@PEAK@Z
?AllocEntry@CPageAllocator@@QEAAPEAUtagPageEntry@@H@Z
?AllocSafeArray@DeserializeHelper@@AEAAJPEAPEAUtagSAFEARRAY@@GKPEBUtagSAFEARRAYBOUND@@K@Z
?AllocStack@CallFrame@@QEAAJ_KH@Z
?Allocate@BstrDestroyer@DeserializeHelper@@EEAAPEAXK@Z
?Allocate@CCoTaskAllocator@@UEAAPEAXK@Z
?Allocate@CStreamCache@@QEAAJPEAVCFat@@KPEAK@Z
?Allocate@SafeArrayDestroyer@DeserializeHelper@@EEAAPEAXK@Z
?AllocatePoolEntry@EventPoolEntry@@SAPEAV1@H@Z
?AllowForegroundTransfer@CStdIdentity@@UEAAJPEAX@Z
?AllowForegroundTransfer@CStdMarshal@@QEAAJPEAX@Z
?AllowServerORPCDebugging@@YAHPEAVCMessageCall@@@Z
?ApartmentDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?ApartmentUninitialize@@YAHH@Z
?AppInvoke@@YAJPEAVCMessageCall@@PEAVCRpcChannelBuffer@@PEAUIRpcStubBuffer@@PEAX3PEAUtagIPIDEntry@@PEAULocalThis@@@Z
?AppInvokeExceptionFilterWithMethodAddress@@YAJPEAU_EXCEPTION_POINTERS@@PEAXAEBU_GUID@@K1PEBD@Z
?Append@CUpdateList@@QEAAXPEAVCUpdate@@@Z
?AppendAddress@CStackWalkerSymbol@@SAXPEAG_K1@Z
?AppendDisplacement@CStackWalkerSymbol@@SAXPEAG_K1@Z
?ApplyChanges@CDocFile@@QEAAJAEAVCUpdateList@@@Z
?AreNoClients@@YAHPEAX@Z
?AreServicesRequired@CSurrogateProcessActivator@@UEAAJXZ
?AspectsUpdated@COleCache@@AEAAXK@Z
?AssignSerializedInterface@GenericStream@@QEAAXPEAPEAUtagInterfaceData@@@Z
?AsyncGetClassBits@CUrlMonWrapper@@UEAAJAEBU_GUID@@PEBG1KK1PEAUIBindCtx@@K0K@Z
?AsyncReceive@CRpcChannelBuffer@@QEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?AsyncSend@CRpcChannelBuffer@@QEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?AsyncStubInvoke@@YAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAVCStdIdentity@@PEAUIRpcChannelBuffer@@PEAUIRpcStubBuffer@@PEAUtagIPIDEntry@@PEAKPEAJ@Z
?Attach@CStackWalker@@UEAAJPEAX@Z
?AttemptActivation@CProcessActivator@@EEAAJPEAVActivationPropertiesIn@@PEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@P81@EAAJK1023@ZK@Z
?AttemptAgeOut@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAHK@Z
?AttemptAgeOut@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAHK@Z
?AttemptToPoolEntry@CRWLock@@AEAAHXZ
?Base64ToIStream@@YAJPEAG_KPEAPEAUIStream@@@Z
?BeginCommit@CDeltaList@@QEAAXPEAVCTransactedStream@@@Z
?BeginCommit@CTransactedStream@@QEAAJK@Z
?BeginCommit@CWrappedDocFile@@QEAAJK@Z
?BeginCommit@PTSetMember@@QEAAJK@Z
?BeginCommitFromChild@CDirectStream@@QEAAJ_KPEAVCDeltaList@@PEAVCTransactedStream@@@Z
?BeginCommitFromChild@CDocFile@@QEAAJAEAVCUpdateList@@KPEAVCWrappedDocFile@@@Z
?BeginCommitFromChild@CTransactedStream@@QEAAJ_KPEAVCDeltaList@@PEAV1@@Z
?BeginCommitFromChild@CWrappedDocFile@@QEAAJAEAVCUpdateList@@KPEAV1@@Z
?BeginCommitFromChild@PDocFile@@QEAAJAEAVCUpdateList@@KPEAVCWrappedDocFile@@@Z
?BeginCommitFromChild@PSStream@@QEAAJ_KPEAVCDeltaList@@PEAVCTransactedStream@@@Z
?BeginCopyOnWrite@CMStream@@QEAAJK@Z
?BeginSession@CDebugEventFire@@UEAAJAEBU_GUID@@PEBG@Z
?BeginSurrogateTimeout@CSurrogateProcessActivator@@EEAAJXZ
?BeginUpdates@CDefLink@@AEAAXXZ
?BeginUsingLatestStream@CNFFMappedStream@@AEAAXXZ
?BeginUsingUpdateStream@CNFFMappedStream@@AEAAXXZ
?Begin_AddRef@CAsyncUnknownMgr@@UEAAJXZ
?Begin_QueryInterface@CAsyncUnknownMgr@@UEAAJAEBU_GUID@@@Z
?Begin_QueryMultipleInterfaces@CAsyncUnknownMgr@@UEAAJKPEAUtagMULTI_QI@@@Z
?Begin_QueryRemoteInterfaces@CStdMarshal@@QEAAXGPEAU_GUID@@PEAUtagQICONTEXT@@@Z
?Begin_Release@CAsyncUnknownMgr@@UEAAJXZ
?Begin_RemQIAndUnmarshal1@CStdMarshal@@AEAAXGPEAU_GUID@@PEAUtagQICONTEXT@@@Z
?Begin_RemQIAndUnmarshal2@CStdMarshal@@AEAAXGPEAU_GUID@@PEAUtagQICONTEXT@@@Z
?Begin_RemQIAndUnmarshal@CStdMarshal@@AEAAXGPEAU_GUID@@PEAUtagQICONTEXT@@@Z
?BindIfRunning@CDefLink@@UEAAJXZ
?BindSpeedFromBindCtx@@YAKPEAUIBindCtx@@@Z
?BindToObject@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CDllFnPtrMoniker@CClassCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?BindToObject@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CpUnkMoniker@CClassCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?BindToObjectNoSwitch@CDllFnPtrMoniker@CClassCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?BindToObjectNoSwitch@CpUnkMoniker@CClassCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?BindToSCMProxy@CRpcResolver@@AEAAJH@Z
?BindToSource@CDefLink@@UEAAJKPEAUIBindCtx@@@Z
?BindToStorage@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BlockFn@CCliModalLoop@@QEAAJPEAPEAXKPEAK@Z
?BmDuplicate@@YAPEAUHBITMAP__@@PEAU1@PEAKPEAUtagBITMAP@@@Z
?BmToPres@@YAJPEAXPEAVCPres@@@Z
?BuildConsolidationControlSectList@CMStream@@QEAAJPEAPEAKPEAK@Z
?BuildIndirectIndexArray@@YAKKPEBUtagPROPVARIANT@@PEAK@Z
?BuildRotData@@YAJPEAUIBindCtx@@PEAUIMoniker@@PEAEKPEAK@Z
?BuildRotDataFromDisplayName@@YAJPEAUIBindCtx@@PEAUIMoniker@@PEAEKPEAK@Z
?BuildTree@CSimpStorage@@IEAAKPEAVCDirEntry@@KK@Z
?BulkUpdateOIDs@CRpcResolver@@QEAAJKPEAU__MIDL_ILocalObjectExporter_0004@@PEAJKPEAU__MIDL_ILocalObjectExporter_0003@@KPEA_KKPEAU__MIDL_ILocalObjectExporter_0002@@@Z
?ByValue@CallFrame@@QEBAHAEBUPARAM_ATTRIBUTES@@PEBEH@Z
?ByteSwapThat@@YAXKPEATWireThat@@@Z
?ByteSwapThis@@YAXKPEATWireThis@@@Z
?CAccessControlCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CActivationPropertiesInCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CActivationPropertiesOutCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CAddrControlCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CAntiMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CB2CCh@CPropertySetStream@@QEBAKK@Z
?CCAddRefServerProcess@@YAKXZ
?CCCleanUpDllsForProcess@@YAJXZ
?CCGetClassInformationForDde@@YAHAEBU_GUID@@PEAU_tagDdeClassInfo@@@Z
?CCGetClassInformationFromKey@@YAHPEAU_tagDdeClassInfo@@@Z
?CCGetClassObject@@YAJAEBUACTIVATION_PROPERTIES@@@Z
?CCGetOrLoadClass@@YAJAEBUACTIVATION_PROPERTIES@@@Z
?CCGetTreatAs@@YAJAEBU_GUID@@AEAU1@@Z
?CCICallback@CProcessActivator@@EEAAJKPEAUIUnknown@@PEAVActivationPropertiesIn@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CCLockServerForActivation@@YAJXZ
?CCRegisterServer@@YAJAEBU_GUID@@PEAUIUnknown@@KKPEAK@Z
?CCReleaseCatalogObjects@@YAXXZ
?CCReleaseServerProcess@@YAKXZ
?CCResumeProcessClassObjects@@YAJXZ
?CCRevoke@@YAJK@Z
?CCSetDdeServerWindow@@YAHKPEAUHWND__@@@Z
?CCSuspendProcessClassObjects@@YAJXZ
?CCh2CB@CPropertySetStream@@QEBAKK@Z
?CComActivatorCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CComCatCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CComCatCSCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CComCatalogCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CCompositeMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CContextSwitcherCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CErrorObjectCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CFToSafeArray@@YAJPEBUtagCLIPDATA@@PEAPEAUtagSAFEARRAY@@@Z
?CFreeThreadedMarshalerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CGIPTableCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CGlobalOptionsCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CInprocActpropsUnmarshallerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CItemMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CLSIDFromAtom@@YAHGPEAU_GUID@@@Z
?CLSIDFromAtomWithTreatAs@@YAJPEAGPEAU_GUID@@PEAW4CNVTYP@@@Z
?CLSIDFromStringA@@YAJPEADPEAU_GUID@@@Z
?CLocalMachineNamesCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CMalloc_AddRef@@YAKPEAUIMalloc@@@Z
?CMalloc_QueryInterface@@YAJPEAUIMalloc@@AEBU_GUID@@PEAPEAX@Z
?CMalloc_Release@@YAKPEAUIMalloc@@@Z
?CManualResetEventCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?COLEDragDropHelperCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CObjectContextCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CPackagerMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CPointerMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CRetailMalloc_Alloc@@YAPEAXPEAUIMalloc@@_K@Z
?CRetailMalloc_DidAlloc@@YAHPEAUIMalloc@@PEAX@Z
?CRetailMalloc_Free@@YAXPEAUIMalloc@@PEAX@Z
?CRetailMalloc_GetSize@@YA_KPEAUIMalloc@@PEAX@Z
?CRetailMalloc_HeapMinimize@@YAXPEAUIMalloc@@@Z
?CRetailMalloc_Realloc@@YAPEAXPEAUIMalloc@@PEAX_K@Z
?CRpcHelperCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CSpyMalloc_Alloc@@YAPEAXPEAUIMalloc@@_K@Z
?CSpyMalloc_DidAlloc@@YAHPEAUIMalloc@@PEAX@Z
?CSpyMalloc_Free@@YAXPEAUIMalloc@@PEAX@Z
?CSpyMalloc_GetSize@@YA_KPEAUIMalloc@@PEAX@Z
?CSpyMalloc_HeapMinimize@@YAXPEAUIMalloc@@@Z
?CSpyMalloc_Realloc@@YAPEAXPEAUIMalloc@@PEAX_K@Z
?CStackWalkerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CStdEventCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CSynchronizeContainerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?Cache@COleCache@@UEAAJPEAUtagFORMATETC@@KPEAK@Z
?CacheAccess@@YAXU_LUID@@H@Z
?CacheAccessCheck@@YAHU_LUID@@PEAH@Z
?CacheCreateThread@@YAJP6AKPEAX@Z0PEAK@Z
?CacheSegment@CStreamCache@@AEAAXPEAUSSegment@@@Z
?CacheUnmarkedSect@CDIFat@@QEAAXKKK@Z
?CalcFileMonikerHash@@YAJPEAGKPEAK@Z
?CalcSASize@@YAJKPEAK@Z
?CalcSafeArrayElements@@YAJKPEBUtagSAFEARRAYBOUND@@PEAK@Z
?CalculateColorTableSize@@YAHIIIIPEAK0@Z
?CalculateSpinCount@@YAKXZ
?CallAccessCheck@@YAHPEAXPEAU_SECURITY_DESCRIPTOR@@KPEAH@Z
?CallBackExceptionFilter@@YAJPEAU_EXCEPTION_POINTERS@@PEAX@Z
?CallCompleted@CAsyncCall@@QEAAXPEAH@Z
?CallCompleted@CAsyncCall@@UEAAXJ@Z
?CallCompleted@CClientCall@@UEAAXJ@Z
?CallFinished@CAsyncCall@@UEAAXXZ
?CallFinished@CClientCall@@UEAAXXZ
?CallIndirect@Interceptor@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@LEGACY_INTERCEPTOR@@UEAAJPEAJKPEAXPEAK@Z
?CallInitCommonControls@@YAHXZ
?CallInitializers@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?CallPending@CChannelObject@@AEAAXXZ
?CallSent@CAsyncCall@@QEAAJXZ
?CallTheResolver@CComApartment@@AEAAJXZ
?CallbackFuncForDraw@CEMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEBUtagENHMETARECORD@@H_J@Z
?CallbackFuncForDraw@CMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CallbackFuncForGetColorSet@CMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAHK@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAHK@Z
?CanBeCollected@CCollectable@CClassCache@@QEAAHXZ
?CanCallBack@CDdeObject@@AEAAHPEAH@Z
?CanDispatch@CAsyncCall@@UEAAJXZ
?CanDispatch@CClientCall@@UEAAJXZ
?CanMakeOutCall@@YAJKAEBU_GUID@@PEAUtagRPCOLEMESSAGE@@@Z
?CanRetrieveOle2FromOle1@@YAHI@Z
?CanRunDown@CStdMarshal@@QEAAEK@Z
?CanRundownOIDs@CComApartment@@QEAAXKQEA_KQEAW4tagRUNDOWN_RESULT@@@Z
?CanShareParameter@@YA?AUHAS_INTERFACES@@PEBU_MIDL_STUB_DESC@@AEBUPARAM_DESCRIPTION@@AEBUPARAM_ATTRIBUTES@@@Z
?CanUnload_rl@CDllPathEntry@CClassCache@@QEAAJK@Z
?CanWrapperMarshal@CStdWrapper@@QEAAHKK@Z
?Cancel@CAsyncCall@@UEAAJHK@Z
?Cancel@CAsyncCall@@UEAAJK@Z
?Cancel@CChannelObject@@UEAAJK@Z
?Cancel@CClientCall@@UEAAJHK@Z
?Cancel@CClientCall@@UEAAJK@Z
?Cancel@CClientCallMgr@@UEAAJK@Z
?Cancel@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?Cancel@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?Cancel@CServerCallMgr@CRpcChannelBuffer@@UEAAJK@Z
?Cancel@CServerSecurity@@UEAAJK@Z
?Cancel@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?CancelPendingCalls@@YAXPEAUHWND__@@@Z
?CancelTheCall@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAXPEAUIUnknown@@K@Z
?CancelTheCall@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAXPEAUIUnknown@@K@Z
?CancelTheCall@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAXPEAUIUnknown@@K@Z
?CatchOOM@@YAHK@Z
?CbParam@CallFrame@@QEBAKKAEBUPARAM_DESCRIPTION@@@Z
?ChangeData@CEMfObject@@AEAAJPEAUHENHMETAFILE__@@H@Z
?ChangeData@CGenObject@@AEAAJPEAXH@Z
?ChangeData@CMfObject@@AEAAJPEAXH@Z
?ChangeItem@CDdeObject@@AEAAXPEAD@Z
?ChangeRef@CRefCache@@QEAAXPEAUtagIPIDEntry@@HPEAPEAUtagREMINTERFACEREF@@PEAG12@Z
?ChangeTopic@CDdeObject@@AEAAJPEAD@Z
?ChangeUsageCount@CGIPTable@@AEAAJPEAUtagGIPEntry@@J@Z
?ChangeXs@CPubDocFile@@IEAAXKK@Z
?CheckAccess@@YAJPEAXPEAUtagIPIDEntry@@0HH0@Z
?CheckAccessControl@@YAJXZ
?CheckAcl@@YAJPEAXH00@Z
?CheckAndSetKeepBuffer@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJXZ
?CheckAndSetKeepBuffer@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJXZ
?CheckAndSetKeepBuffer@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJXZ
?CheckApt@CDllFnPtrMoniker@CClassCache@@UEAAJXZ
?CheckApt@CpUnkMoniker@CClassCache@@UEAAJXZ
?CheckBitmapBits@@YAHQEAUtagBITMAPINFOHEADER@@KK@Z
?CheckContextAfterCall@@YAHAEAVCOleTls@@PEAVCObjectContext@@@Z
?CheckCopyTo@CExposedDocFile@@AEAAJXZ
?CheckCrossContextAggregation@CServerContextActivator@@EEAAJPEAVActivationPropertiesIn@@PEAUIUnknown@@@Z
?CheckDownloadRegistrySettings@@YAKXZ
?CheckFlagsOnCreateOrOpen@@YAJHK@Z
?CheckForClsid@@YAJPEAUIUserToken@@PEBU_GUID@@PEAH@Z
?CheckForProgID@@YAJPEAUIUserToken@@PEBGPEAH@Z
?CheckForRefresh@CComCatalog@@CAJPEAUIUserToken@@PEAUIUnknown@@PEAVCCache@@@Z
?CheckForWaiters@CComApartment@@AEAAXXZ
?CheckForceHKLMForAppID@CComRegCatalog@@AEAAJPEAUHKEY__@@PEAH@Z
?CheckForceHKLMForCLSID@CComRegCatalog@@AEAAJPEAUHKEY__@@0PEAH@Z
?CheckIfCatChanged@@YAXPEC_JPEAH@Z
?CheckInitDde@@YAJH@Z
?CheckInprocClass@CClientContextActivator@@EEAAJPEAUIActivationPropertiesIn@@PEAUDLL_INSTANTIATION_PROPERTIES@@AEAHPEAPEAUILocalSystemActivator@@@Z
?CheckLrpc@@YAJXZ
?CheckMapView@CFileStream@@AEAAJK@Z
?CheckMemoryGate@@YAJPEAUIUnknown@@W4tagResourceGateId@@@Z
?CheckName@@YAJPEBG@Z
?CheckNotComPlus@CDllFnPtrMoniker@CClassCache@@UEAAJXZ
?CheckNotComPlus@CpUnkMoniker@CClassCache@@UEAAJXZ
?CheckOffset@@YAJ_K00@Z
?CheckRefresh@@YAJPEAUIUserToken@@HPEAU_KEY_NAME_INFORMATION@@PEAU_KEY_FULL_INFORMATION@@PEAH@Z
?CheckReverted@CNtfsStorage@@AEAAJXZ
?CheckReverted@CNtfsStream@@QEAAJXZ
?CheckReverted@CPubDocFile@@QEBAJXZ
?CheckReverted@CPubStream@@QEBAJXZ
?CheckSafeArrayDims@@YAJK@Z
?CheckSecureRemUnk@CStdMarshal@@QEAAHXZ
?CheckSegment@CStreamCache@@AEAAHKUSCacheEntry@@PEAK11@Z
?CheckSignature@@YAJPEAE@Z
?CheckSize@CarefulBufferReader@@QEAAX_K@Z
?CheckStatus@CRpcResolver@@CAJJ@Z
?CheckTymedCFCombination@@YAJPEAUtagFORMATETC@@@Z
?CheckTypeInfo@@YAJPEAUITypeInfo@@PEAPEAU1@1PEAGPEAHPEAU_GUID@@1@Z
?CheckUninitDde@@YAXH@Z
?CheckVarType@@YAJG@Z
?CheckVarTypeToDeserialize@@YAJGHHH@Z
?CheckVarTypeToSerialize@@YAJGHHH@Z
?ChkIfLocalOID@@YAHAEAUtagOBJREF@@PEAPEAVCStdIdentity@@H@Z
?CleanAllMemoryResources@@YAXPEAUtagACL_DESCRIPTOR@@PEAUtagPCB@@@Z
?CleanROTForApartment@@YAXXZ
?CleanStack@CMfObject@@AEAAXXZ
?CleanUpDllsForApartment@CClassCache@@SAJXZ
?CleanUpDllsForProcess@CClassCache@@SAJXZ
?CleanUpLocalServersForApartment@CClassCache@@SAJXZ
?CleanUpStreamACL@@YAXPEAUtagSTREAM_ACL@@@Z
?Cleanup@CApartmentHashTable@@QEAAXXZ
?Cleanup@CAsyncCall@@SAXXZ
?Cleanup@CAuthInfo@@SAXXZ
?Cleanup@CCallTable@@QEAAXXZ
?Cleanup@CClientCall@@SAXXZ
?Cleanup@CContextPropList@@SAXXZ
?Cleanup@CCtxCall@@SAXXZ
?Cleanup@CCtxComChnl@@SAXXZ
?Cleanup@CCtxTable@@SAXXZ
?Cleanup@CDebugEventFire@@QEAAXXZ
?Cleanup@CEndpointsTable@@QEAAXXZ
?Cleanup@CEventCache@@QEAAXXZ
?Cleanup@CGIPTable@@QEAAXXZ
?Cleanup@CHashTable@@UEAAXP6AXPEAUSHashChain@@@Z@Z
?Cleanup@CIDObject@@SAXXZ
?Cleanup@CIPIDTable@@QEAAXXZ
?Cleanup@CInternalPageAllocator@@QEAAXXZ
?Cleanup@CMIDTable@@QEAAXXZ
?Cleanup@CNameHashTable@@QEAAXXZ
?Cleanup@COIDTable@@SAXXZ
?Cleanup@COXIDTable@@QEAAXXZ
?Cleanup@CObjectContext@@SAXXZ
?Cleanup@CPIDTable@@SAXXZ
?Cleanup@CPSTable@@SAXXZ
?Cleanup@CPageAllocator@@QEAAXXZ
?Cleanup@CPolicySet@@SAXXZ
?Cleanup@CPubMappedStream@@QEAAXXZ
?Cleanup@CRIFTable@@QEAAXXZ
?Cleanup@CROIDTable@@QEAAXXZ
?Cleanup@CRWLock@@QEAAXXZ
?Cleanup@CRpcResolver@@QEAAXXZ
?Cleanup@CSSL@@SAXXZ
?Cleanup@CServerSecurity@@SAXXZ
?Cleanup@CStdWrapper@@SAXXZ
?Cleanup@CtxEntry@@SAXXZ
?Cleanup@EventPoolEntry@@QEAAXXZ
?CleanupAccessList@CImpAccessControl@COAccessControl@@AEAAXHPEAUtagSTREAM_ACE@@PEAXKK@Z
?CleanupApartment@CRunningObjectTable@@QEAAJK@Z
?CleanupChannelHooks@@YAXXZ
?CleanupCtxTableEntry@@YAXPEAUSHashChain@@@Z
?CleanupExtEntry@@YAXPEAUSHashChain@@@Z
?CleanupFn@CDefLink@@EEAAXXZ
?CleanupFn@CDefObject@@EEAAXXZ
?CleanupFn@COleCache@@EEAAXXZ
?CleanupFn@CRefExportCount@@EEAAXXZ
?CleanupIdentity@@YAXPEAUSHashChain@@@Z
?CleanupLeakedDomainStack@@YAJAEAVCOleTls@@PEAVCObjectContext@@@Z
?CleanupLocalState@InstanceInfo@@QEAAXXZ
?CleanupMIDEntry@@YAXPEAUSHashChain@@@Z
?CleanupPolicySets@@YAXPEAUSHashChain@@@Z
?CleanupProperties@CEnumContextProps@@QEAAXXZ
?CleanupProxy@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAXPEAPEAEPEAPEAUIUnknown@@PEAPEAUAsyncIPipeByte@@PEAPEAUISynchronize@@@Z
?CleanupProxy@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAXPEAPEAJPEAPEAUIUnknown@@PEAPEAUAsyncIPipeLong@@PEAPEAUISynchronize@@@Z
?CleanupProxy@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAXPEAPEANPEAPEAUIUnknown@@PEAPEAUAsyncIPipeDouble@@PEAPEAUISynchronize@@@Z
?CleanupRIFEntry@@YAXPEAUSHashChain@@@Z
?CleanupRegOIDs@@YAXPEAUSHashChain@@@Z
?CleanupRemoting@CComApartment@@QEAAJXZ
?CleanupRemoting@OXIDEntry@@QEAAJXZ
?CleanupServices@CSurrogateProcessActivator@@UEAAJXZ
?CleanupStatArray@CEnumSTATPROPSETSTG@@AEAAXXZ
?CleanupStrong@CRefCache@@AEAAXPEAPEAUtagREMINTERFACEREF@@PEAG@Z
?CleanupTables@CObjectContext@@QEAAXXZ
?CleanupThreadCallObjects@@YAXPEAUtagSOleTlsData@@@Z
?CleanupTlsMap@@YAXH@Z
?CleanupTlsState@@YAXPEAUtagSOleTlsData@@H@Z
?CleanupWeak@CRefCache@@AEAAXPEAPEAUtagREMINTERFACEREF@@PEAG@Z
?Clear@ActivationPropertiesOut@@UEAAJXZ
?ClearContextFlags@CObjectContext@@UEAAJK@Z
?ClearEntry@CCallTable@@AEAAPEAUICancelMethodCalls@@PEAU2@@Z
?ClearFreeList@CRpcThreadCache@@QEAAXXZ
?ClearOutSerializer@OutSerializer@ActivationPropertiesOut@@QEAAJXZ
?ClientBulkUpdateOIDWithPingServer@CROIDTable@@CAJKK@Z
?ClientCleanupFinish@CDllHost@@AEAAXPEAX@Z
?ClientCleanupStart@CDllHost@@AEAAPEAXXZ
?ClientDeRegisterOIDFromPingServer@CROIDTable@@QEAAJPEAVCRefCache@@H@Z
?ClientFillBuffer@CCtxHook@@UEAAXAEBU_GUID@@0PEAKPEAX@Z
?ClientFillBuffer@CDebugChannelHook@@UEAAXAEBU_GUID@@0PEAKPEAX@Z
?ClientFillBuffer@CErrorChannelHook@@UEAAXAEBU_GUID@@0PEAKPEAX@Z
?ClientFindIRCEntry@CRefCache@@AEAAPEAUIRCEntry@@AEBU_GUID@@@Z
?ClientGetBuffer@CRpcChannelBuffer@@IEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?ClientGetSize@CCtxHook@@UEAAXAEBU_GUID@@0PEAK@Z
?ClientGetSize@CDebugChannelHook@@UEAAXAEBU_GUID@@0PEAK@Z
?ClientGetSize@CErrorChannelHook@@UEAAXAEBU_GUID@@0PEAK@Z
?ClientNotify@@YAJPEATWireThat@@KPEAPEAXKJPEAVCMessageCall@@@Z
?ClientNotify@CCtxHook@@UEAAXAEBU_GUID@@0KPEAXKJ@Z
?ClientNotify@CDebugChannelHook@@UEAAXAEBU_GUID@@0KPEAXKJ@Z
?ClientNotify@CErrorChannelHook@@UEAAXAEBU_GUID@@0KPEAXKJ@Z
?ClientRegisterOIDWithPingServer@CROIDTable@@QEAAJAEBU_GUID@@AEB_K1PEAPEAVCRefCache@@@Z
?ClientResolveOXID@COXIDTable@@QEAAJAEB_KPEAUtagDUALSTRINGARRAY@@PEAPEAVOXIDEntry@@@Z
?ClientResolveOXID@CRpcResolver@@QEAAJAEB_KPEAUtagOXID_INFO@@PEA_KPEAUtagDUALSTRINGARRAY@@PEAKPEAPEAEPEAG@Z
?ClientToDelegate@CDataAdviseCache@@AEAAJKPEAK@Z
?ClipSetCaptureForDrag@@YAJPEAVCDragOperation@@@Z
?ClipboardInitialize@@YAHXZ
?ClipboardProcessUninitialize@@YAXXZ
?ClipboardUninitialize@@YAXXZ
?ClipfmtToStm@@YAJAEAVCStmBufWrite@@KKW4TXTTYPE@@@Z
?Clone@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJPEAPEAUIEnumCATEGORYINFO@@@Z
?Clone@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CAddrExclusionList@@UEAAJPEAPEAUIEnumString@@@Z
?Clone@CCompositeMonikerEnum@@UEAAJPEAPEAUIEnumMoniker@@@Z
?Clone@CEnumCategories@@UEAAJPEAPEAUIEnumCATEGORYINFO@@@Z
?Clone@CEnumCategoriesOfClass@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumClassesOfCategories@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumContextProps@@UEAAJPEAPEAUIEnumContextProps@@@Z
?Clone@CEnumFmt10@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFmt@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtc@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtcDataArray@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumSTATDATA@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?Clone@CEnumSTATPROPBAG@@UEAAJPEAPEAUIEnumSTATPROPBAG@@@Z
?Clone@CEnumSTATPROPSETSTG@@UEAAJPEAPEAUIEnumSTATPROPSETSTG@@@Z
?Clone@CEnumSTATPROPSTG@@UEAAJPEAPEAUIEnumSTATPROPSTG@@@Z
?Clone@CEnumStatData@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?Clone@CEnumVerb@@EEAAJPEAPEAUIEnumOLEVERB@@@Z
?Clone@CExpParameterValidate@@SAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CExpParameterValidate@@SAJPEAPEAUIStream@@@Z
?Clone@CExposedIterator@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CExposedStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CLocalMachineNames@@UEAAJPEAPEAUIEnumString@@@Z
?Clone@CMemStm@@UEAAJPEAPEAUIStream@@@Z
?Clone@CNdrStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CNoEnum@@UEAAJPEAPEAUIEnumUnknown@@@Z
?Clone@CNtfsEnumSTATSTG@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CNtfsStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CRotMonikerEnum@@UEAAJPEAPEAUIEnumMoniker@@@Z
?Clone@CSimpEnumSTATSTG@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CSimpStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CStreamOnMessage@@UEAAJPEAPEAUIStream@@@Z
?Clone@GenericStream@@QEAAPEAV1@XZ
?Clone@GenericStream@@UEAAJPEAPEAUIStream@@@Z
?Close@?$AutoBlob@V?$Auto@U_LBLOB@@@Windows@@@Rtl@Windows@@QEAAXXZ
?Close@CDefLink@@UEAAJK@Z
?Close@CDefObject@@UEAAJK@Z
?Close@CExposedStream@@UEAAXPEAJ@Z
?Close@CNFFMappedStream@@UEAAXPEAJ@Z
?Close@COleObjectImpl@CDdeObject@@UEAAJK@Z
?Close@CPerContext@@QEAAXXZ
?Close@CPropertySetStream@@QEAAXPEAJ@Z
?Close@CPubMappedStream@@QEAAXPEAJ@Z
?Close@CSSMappedStream@@UEAAXPEAJ@Z
?CloseCatalog@CSurrogateProcessActivator@@UEAAJXZ
?CloseSharedFileMapping@@YAXPEAX0@Z
?CoRegisterDisconnectCallback@@YAJPEAUIUnknown@@KPEAUIDisconnectSink@@PEAXPEAPEAX@Z
?CoStackWalk64@@YAHKPEAX0PEAU_tagSTACKFRAME64@@0P6AH0_K0KPEAK@ZP6APEAX02@ZP6A_K02@ZP6A_K00PEAU_tagADDRESS64@@@Z@Z
?CoSymCleanup@@YAXPEAX@Z
?CoSymGetModuleInfoW64@@YAHPEAX_KPEAU_IMAGEHLP_MODULEW64@@@Z
?CoSymGetSymFromAddr64@@YAHPEAX_KPEA_KPEAU_IMAGEHLP_SYMBOL64@@@Z
?CoSymInitialize@@YAHPEAXPEADH@Z
?CoSymLoadModule64@@YA_KPEAX0PEAD1_KK@Z
?CoSymLock@@YAXXZ
?CoSymSetOptions@@YAKK@Z
?CoSymUnlock@@YAXXZ
?CoVrfBreakOnCallBackException@@YAHPEAU_EXCEPTION_POINTERS@@PEAX@Z
?CoVrfBreakOnException@@YAHPEAU_EXCEPTION_POINTERS@@PEAXPEBU_GUID@@K@Z
?CoVrfBreakOnExceptionWithMethodAddress@@YAHPEAU_EXCEPTION_POINTERS@@PEAXPEBU_GUID@@KPEBD@Z
?CoVrfCaptureStackTrace@@YAXHHPEAPEAX@Z
?CoVrfCheckSecuritySettings@@YAXXZ
?CoVrfCheckThreadState@@YAJPEAX@Z
?CoVrfDllMainCheck@@YAXXZ
?CoVrfFreeMemObjectChecks@@YAXPEAX_K0@Z
?CoVrfFreeMemVtblChecks@@YAXPEAX_K0@Z
?CoVrfFreeMemoryChecks@@YAJPEAX_K0@Z
?CoVrfGetThreadState@@YAJPEAPEAX@Z
?CoVrfNotifyCFSuccessWithNULL@@YAXPEAUIClassFactory@@AEBU_GUID@@1J@Z
?CoVrfNotifyCoInit@@YAXXZ
?CoVrfNotifyCoUninit@@YAXXZ
?CoVrfNotifyEnterServiceDomain@@YAXXZ
?CoVrfNotifyExtraLeaveServiceDomain@@YAXXZ
?CoVrfNotifyExtraOleUninit@@YAXXZ
?CoVrfNotifyExtraUninit@@YAXXZ
?CoVrfNotifyGCOSuccessWithNULL@@YAXPEBGAEBU_GUID@@1J@Z
?CoVrfNotifyLeakedInits@@YAXXZ
?CoVrfNotifyLeakedOleInits@@YAXXZ
?CoVrfNotifyLeakedServiceDomain@@YAXXZ
?CoVrfNotifyLeaveServiceDomain@@YAXXZ
?CoVrfNotifyOleInit@@YAXXZ
?CoVrfNotifyOleUninit@@YAXXZ
?CoVrfNotifySmuggledProxy@@YAXAEBU_GUID@@KK@Z
?CoVrfNotifySmuggledWrapper@@YAXAEBU_GUID@@KPEAVCStdWrapper@@@Z
?CoVrfReleaseThreadState@@YAXPEAX@Z
?CoVrfStopTrackingObject@@YAXPEAX@Z
?CoVrfStopTrackingVtbl@@YAXPEAXPEAPEAUVtblSplayNode@@@Z
?CoVrfTrackObject@@YAPEAXPEAX@Z
?CoVrfTrackVtbl@@YAPEAXPEAXPEAUVtblSplayNode@@@Z
?Collect@CClassCache@@SAJK@Z
?ComDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?ComInvoke@@YAJPEAVCMessageCall@@@Z
?ComInvokeWithLockAndIPID@@YAJPEAVCMessageCall@@PEAUtagIPIDEntry@@@Z
?ComPlusEnabled@CComCatalog@@CAHXZ
?ComSignal@@YAKPEAX@Z
?ComSignalNA@@YAKPEAX@Z
?Commit@CExpParameterValidate@@SAJK@Z
?Commit@CExposedDocFile@@UEAAJK@Z
?Commit@CExposedStream@@UEAAJK@Z
?Commit@CMemStm@@UEAAJK@Z
?Commit@CNdrStream@@UEAAJK@Z
?Commit@CNtfsStorage@@UEAAJK@Z
?Commit@CNtfsStorageForPropSetStg@@UEAAJK@Z
?Commit@CNtfsStream@@UEAAJK@Z
?Commit@CPropertyBagEx@@QEAAJK@Z
?Commit@CPropertyStorage@@UEAAJK@Z
?Commit@CPubDocFile@@QEAAJK@Z
?Commit@CPubStream@@QEAAJK@Z
?Commit@CSharedMemoryBlock@@QEAAJK@Z
?Commit@CSimpStorage@@UEAAJK@Z
?Commit@CSimpStream@@UEAAJK@Z
?Commit@CStreamOnMessage@@UEAAJK@Z
?Commit@GenericStream@@UEAAJK@Z
?Commit@Serializer@@QEAAJXZ
?CommitTimestamps@CRootPubDocFile@@QEAAXK@Z
?CommonPrefixWith@CAntiMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CBaseMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CClassMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CCompositeMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CFileMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CItemMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CLUAMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CObjrefMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CPackagerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CPointerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CSessionMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonRelease@CObjectContext@@QEAAKXZ
?Compare@CCtxPropHashTable@@UEAAHPEBXPEAUSHashChain@@H@Z
?Compare@CCtxPropHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CCtxUUIDHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CDPEHashTable@CClassCache@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CDWORDHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CExtHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CMultiGUIDHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CNameHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@COIDHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CPIDHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CPSHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CStringHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CUUIDHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?CompareAssocKey@CMapKeyToValue@@AEBAHPEAUCAssoc@1@PEAXI@Z
?CompareNCharacters@@YAHPEAG0K@Z
?Complete@CClassEntry@CClassCache@@QEAAJPEAH@Z
?CompleteDrop@CDragOperation@@QEAAJXZ
?CompleteObjRef@@YAJAEAUtagOBJREF@@AEAUtagOXID_INFO@@AEBU_GUID@@PEAH@Z
?CompleteTreatAs@CClassEntry@CClassCache@@QEAAXPEAV12@@Z
?ComposeWith@CAntiMoniker@@EEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CBaseMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CClassMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CCompositeMoniker@@EEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CFileMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CItemMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CLUAMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CPackagerMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CPointerMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CSessionMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWithEnum@@YAJPEAUIMoniker@@PEAUIEnumMoniker@@PEAPEAU1@@Z
?ComputeConformance@CallFrame@@QEAA_KPEAEPEBEH@Z
?ComputeEffectiveAccess@@YAJPEAUtagACL_DESCRIPTOR@@PEAUtagSTREAM_ACL@@PEAXPEAK@Z
?ComputeVariance@CallFrame@@QEAAXPEAEPEBEPEAK2H@Z
?Connect@CDdeServerCallMgr@@UEAAJPEAUIUnknown@@@Z
?Connect@CPipeProxyImp@@UEAAJPEAUIRpcChannelBuffer@@@Z
?Connect@CProxyManagerImpl@CDdeObject@@UEAAJU_GUID@@AEBU3@@Z
?Connect@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAUIUnknown@@@Z
?Connect@CServerCallMgr@CRpcChannelBuffer@@UEAAJPEAUIUnknown@@@Z
?ConnectCliIPIDEntry@CStdMarshal@@AEAAJPEAUtagSTDOBJREF@@PEAVOXIDEntry@@PEAUtagIPIDEntry@@@Z
?ConnectSrvIPIDEntry@CStdMarshal@@AEAAJPEAUtagIPIDEntry@@PEAUIUnknown@@@Z
?Consolidate@CMStream@@QEAAJXZ
?Consolidate@CPubDocFile@@IEAAJK@Z
?ConsolidateStream@CMStream@@QEAAJPEAVCDirEntry@@KK@Z
?ContextCallHelper@CApartmentActivator@@EEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@P6AJPEAX@ZPEAVCObjectContext@@@Z
?ContextCallback@CContextSwitcher@@UEAAJP6AJPEAUtagComCallData@@@Z0AEBU_GUID@@HPEAUIUnknown@@@Z
?ContextCallback@CObjectContext@@UEAAJP6AJPEAUtagComCallData@@@Z0AEBU_GUID@@HPEAUIUnknown@@@Z
?ContextCleanup@CGIPTable@@QEAAXXZ
?ContextInvoke@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcStubBuffer@@PEAUtagIPIDEntry@@PEAK@Z
?ContextInvoke@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcStubBuffer@@PEAUtagIPIDEntry@@PEAK@Z
?ContextInvoke@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcStubBuffer@@PEAUtagIPIDEntry@@PEAK@Z
?ContextOrApartmentCleanup@CGIPTable@@AEAAXH@Z
?ContextSelector@CApartmentActivator@@EEAAJPEAUIActivationPropertiesIn@@AEAHAEAPEAVCObjectContext@@@Z
?Contig@CFat@@QEAAJPEAUSSegment@@HKKPEAK@Z
?Contig@CStreamCache@@QEAAJKHPEAUSSegment@@KPEAK@Z
?ControlTracingForProcess@CRpcResolver@@QEAAJKH@Z
?Convert10TargetDevice@@YAJPEAXPEAPEAUtagDVTARGETDEVICE@@@Z
?Convert20TargetDevice@@YAJPEBUtagDVTARGETDEVICE@@PEAPEAX@Z
?ConvertILB@CMStream@@AEAAJK@Z
?ConvertInternalStream@CExposedDocFile@@AEAAJPEAV1@@Z
?ConvertMactPict@@YAPEAUHMETAFILE__@@PEAX@Z
?ConvertStringToLCID@CComCat@@CAJPEAKPEAG@Z
?ConvertToFullHWND@@YAPEAUHWND__@@PEAU1@@Z
?ConvertToUnicode@@YAJPEBDPEAPEAG@Z
?ConvertVariantToPropInfo@@YAXPEAVCPropertySetStream@@KKQEBUtagPROPSPEC@@QEAKQEBUtagPROPVARIANT@@PEAUtagPROPERTY_INFORMATION@@PEAKPEAJ@Z
?Copy@CAuthInfo@@SAJPEAUtagSOLE_AUTHENTICATION_LIST@@PEAPEAU2@K@Z
?Copy@CCtxComChnl@@QEAAPEAV1@PEAVOXIDEntry@@AEBU_GUID@@1@Z
?Copy@CallFrame@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@DISPATCH_CLIENT_FRAME@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@DISPATCH_SERVER_FRAME@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@OAUTIL@@QEAAPEAGPEAG@Z
?CopyConformantArrayPriv@CallFrame@@QEAAXPEAEPEAPEAEPEBEH@Z
?CopyDocFileToIStorage@CExposedDocFile@@AEAAJPEAVPDocFile@@PEAUIStorage@@PEAPEAGK@Z
?CopyDualStringArray@@YAJPEAUtagDUALSTRINGARRAY@@PEAPEAU1@@Z
?CopyEmbeddedPointers@CallFrame@@QEAAXPEAE0PEBEH@Z
?CopyEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAE0PEBEH@Z
?CopyFormatEtcDataArray@@YAXPEAUFORMATETCDATAARRAY@@0_KH@Z
?CopyLStreamToLStream@CPubDocFile@@IEAAJPEAUILockBytes@@0@Z
?CopyMsgForRetry@@YAJPEAUtagRPCOLEMESSAGE@@PEAVIInternalChannelBuffer@@J@Z
?CopyMsgForRetry@CAptRpcChnl@@AEAAJPEAUtagRPCOLEMESSAGE@@@Z
?CopyOpaqueData@OpaqueDataInfo@@QEAAJPEAUtagOpaqueData@@0KH@Z
?CopyPage@CMSFPageTable@@QEAAJPEAVCPagedVector@@PEAVCMSFPage@@PEAVCBasedMSFPagePtr@@@Z
?CopyPathFromUnicodeExtent@@YAJPEFAU_MONIKEREXTENT@@AEAPEAGAEAG@Z
?CopyPathToUnicodeExtent@@YAJPEAGKAEAPEAU_MONIKEREXTENT@@@Z
?CopyProxy@CChannelObject@@UEAAJPEAUIUnknown@@PEAPEAU2@@Z
?CopyProxy@CClientCallMgr@@UEAAJPEAUIUnknown@@PEAPEAU2@@Z
?CopyProxy@CClientSecurity@@UEAAJPEAUIUnknown@@PEAPEAU2@@Z
?CopyRecord@OAUTIL@@AEAAJPEAX0PEAUITypeInfo@@H@Z
?CopyRecordAndAlloc@OAUTIL@@AEAAJPEAUIRecordInfo@@PEAXPEAPEAXH@Z
?CopyRecordField@OAUTIL@@AEAAJPEAE0PEAUtagTYPEDESC@@PEAUITypeInfo@@H@Z
?CopySStreamToIStream@CExposedDocFile@@AEAAJPEAVPSStream@@PEAUIStream@@@Z
?CopySStreamToSStream@@YAJPEAVPSStream@@0@Z
?CopySTATPROPSTG@@YAJKPEAUtagSTATPROPSTG@@PEBU1@@Z
?CopySecDesc@@YAJPEAU_SECURITY_DESCRIPTOR@@PEAPEAU1@@Z
?CopySect@CMStream@@AEAAJKKFFPEBEPEAK@Z
?CopyString@@YAPEADPEBD@Z
?CopyString@@YAPEAGPEBG@Z
?CopyStringArray@@YAJPEAUtagDUALSTRINGARRAY@@0PEAPEAU1@@Z
?CopyTimesFrom@PTimeEntry@@QEAAJPEAV1@@Z
?CopyTo@CDocFile@@QEAAJPEAV1@KPEAPEAG@Z
?CopyTo@CExpParameterValidate@@SAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CExpParameterValidate@@SAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CExposedDocFile@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CExposedStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CMemStm@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CNdrStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CNtfsStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CNtfsStorageForPropSetStg@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CNtfsStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CSimpStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CSimpStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CStreamOnMessage@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@GenericStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@Serializer@@QEAAJPEAV1@KK@Z
?CopyToMQI@@YAXKPEAUtagSQIResult@@PEAPEAUtagMULTI_QI@@PEAK@Z
?CopyToWorker@CExposedStream@@AEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2PEAVCSafeSem@@@Z
?CopyWorker@CallFrame@@QEAAXPEAEPEAPEAEPEBEH@Z
?Count@CCompositeMoniker@@QEAAJPEAK@Z
?Count@CEnumContextProps@@UEAAJPEAK@Z
?CountContexts@CContextList@@QEAAKXZ
?CountContexts@CDFBasis@@QEAAKXZ
?CountFree@CFat@@AEAAJPEAK@Z
?CountRefs@CDdeServerCallMgr@@UEAAKXZ
?CountRefs@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?CountRefs@CServerCallMgr@CRpcChannelBuffer@@UEAAKXZ
?CountSectType@CFat@@QEAAJPEAKKKK@Z
?CountSegments@@YAHPEAG@Z
?Create@CAntiMoniker@@SAPEAUIMoniker@@K@Z
?Create@CAntiMoniker@@SAPEAV1@XZ
?Create@CClassEntry@CClassCache@@SAJAEBU_GUID@@KPEAUIComClassInfo@@AEAPEAV12@@Z
?Create@CClipDataObject@@SAJPEAPEAUIDataObject@@PEAUFORMATETCDATAARRAY@@@Z
?Create@CCompositeMoniker@@SAPEAV1@PEAUIMoniker@@0@Z
?Create@CCompositeMonikerEnum@@SAPEAUIEnumMoniker@@HPEAVCCompositeMoniker@@@Z
?Create@CDDEServer@@SAJPEAGAEBU_GUID@@PEAU_tagDdeClassInfo@@PEAPEAUHWND__@@GW4CNVTYP@@@Z
?Create@CDdeObject@@SAPEAUIUnknown@@PEAU2@AEBU_GUID@@KGPEAGPEAPEAV1@H@Z
?Create@CDefClient@@SAJPEAVCDDEServer@@PEAUIUnknown@@PEAGHHHPEAPEAUHWND__@@@Z
?Create@CDefLink@@SAPEAUIUnknown@@PEAU2@@Z
?Create@CDefObject@@SAPEAUIUnknown@@PEAU2@AEBU_GUID@@KPEAUIClassFactory@@@Z
?Create@CFileMoniker@@SAPEAV1@PEBGGG@Z
?Create@CFrameFilter@@SAJPEAUtagOLEMENU@@PEAUHMENU__@@PEAUHWND__@@2PEAUIOleInPlaceFrame@@PEAUIOleInPlaceActiveObject@@@Z
?Create@CItemMoniker@@SAPEAV1@PEBG0@Z
?Create@CMachineNamesHelper@@SAJPEAVCDualStringArray@@PEAPEAV1@@Z
?Create@CMemBytes@@SAPEAV1@PEAX@Z
?Create@CMemStm@@SAPEAV1@PEAXPEAVCRefMutexSem@@@Z
?Create@CObjrefMoniker@@SAPEAV1@PEAUIUnknown@@@Z
?Create@CPackagerMoniker@@SAJPEAGPEAUIMoniker@@HPEAPEAU2@@Z
?Create@CPlex@@SAPEAU1@AEAPEAU1@II@Z
?Create@CPointerMoniker@@SAPEAV1@PEAUIUnknown@@@Z
?Create@CPropertySetStorage@@UEAAJAEBU_GUID@@PEBU2@KKPEAPEAUIPropertyStorage@@@Z
?Create@CPropertyStorage@@QEAAJPEAUIStorage@@AEBU_GUID@@PEBU3@KK@Z
?Create@CPropertyStorage@@QEAAJPEAUIStream@@AEBU_GUID@@PEBU3@KK@Z
?Create@CRunningObjectTable@@SAHXZ
?CreateAndLoadPresObj@CCacheNode@@AEAAJH@Z
?CreateAnsiFromUnicode@@YAPEADPEBG@Z
?CreateArray@?$CArray@VCCacheNode@@@@SAPEAV1@KK@Z
?CreateArray@?$CArray@VCFormatEtc@@@@SAPEAV1@KK@Z
?CreateArray@?$CArray@VCStatData@@@@SAPEAV1@KK@Z
?CreateCall@CStdIdentity@@UEAAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAU3@@Z
?CreateChannel@CStdMarshal@@AEAAJPEAVOXIDEntry@@KAEBU_GUID@@1PEAPEAVCCtxComChnl@@@Z
?CreateClientHandler@@YAJAEBU_GUID@@0KPEAPEAVCStdIdentity@@@Z
?CreateClipDataObjectFromPersistedData@@YAJPEAPEAUIDataObject@@@Z
?CreateCommonDdeWindow@@YAJXZ
?CreateDataAdviseCache@CDataAdviseCache@@SAJPEAPEAV1@@Z
?CreateDdeClientHwnd@@YAPEAUHWND__@@XZ
?CreateDdeProxy@@YAPEAUIUnknown@@PEAU1@AEBU_GUID@@@Z
?CreateDdeSrvrWindow@@YAJAEBU_GUID@@GPEAPEAUHWND__@@HGW4CNVTYP@@@Z
?CreateDelegate@CDefObject@@AEAAJXZ
?CreateDlg@CHlprDialog@@UEAAPEAUHWND__@@PEAUHINSTANCE__@@PEBGPEAU2@@Z
?CreateDllClassEntry_rl@CClassEntry@CClassCache@@QEAAJKAEBUACTIVATION_PROPERTIES@@AEAPEAVCDllClassEntry@2@@Z
?CreateDocFile@CDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPDocFile@@@Z
?CreateDocFile@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAV1@@Z
?CreateDocFile@CWrappedDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPDocFile@@@Z
?CreateDocFile@PDocFile@@QEAAJPEBVCDfName@@KKPEAPEAV1@@Z
?CreateDragDataObject@@YAJPEAXKPEAPEAUIDataObject@@@Z
?CreateEntry@CDirectory@@QEAAJKPEBVCDfName@@KPEAK@Z
?CreateEntry@CExposedDocFile@@AEAAJPEBVCDfName@@KKPEAPEAX@Z
?CreateEntry@CStgHandle@@QEAAJPEBVCDfName@@KPEAVCHandle@@@Z
?CreateEnumFormatEtc@CEnumFormatEtc@@SAPEAUIEnumFORMATETC@@PEAV?$CArray@VCCacheNode@@@@@Z
?CreateEnumStatData@CEnumStatData@@SAPEAUIEnumSTATDATA@@PEAV?$CArray@VCCacheNode@@@@@Z
?CreateEnvoyObjectContext@CObjectContext@@SAJPEAUtagDATAELEMENT@@AEAPEAV1@@Z
?CreateFileMonikerComparisonBuffer@@YAJPEAGPEAEKPEAK@Z
?CreateFromBindingHandle@CFastBH@@AEAAJPEAXPEAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PEAU_GUID@@@Z
?CreateFromBindingString@CFastBH@@AEAAJPEBGPEAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PEAU_GUID@@@Z
?CreateFromTypeInfo@Interceptor@@CAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAX@Z
?CreateFromUpdate@PDocFile@@SAJPEAVCUpdate@@PEAV1@K@Z
?CreateHandle@@YAJPEAVOXIDEntry@@KPEAPEAVCChannelHandle@@@Z
?CreateHandler@CAggId@@AEAAJAEBU_GUID@@@Z
?CreateIFaceEntry@CStdWrapper@@QEAAJAEBU_GUID@@PEAXPEAPEAVIFaceEntry@@@Z
?CreateIdentity@CObjectContext@@QEAAXPEAUIComObjIdentity@@@Z
?CreateIncomplete@CClassEntry@CClassCache@@SAJAEBU_GUID@@KPEAUIComClassInfo@@AEAPEAV12@K@Z
?CreateInprocInstanceHelper@@YAJPEAUIClassFactory@@KPEAUIUnknown@@KPEAUtagMULTI_QI@@@Z
?CreateInstance@?$GenericInstantiator@UDISPATCH_INTERCEPTOR@@@@SAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CApartmentActivator@@UEAAJPEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@CClassMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CClientContextActivator@@UEAAJPEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@CDDEServer@@AEAAJAEBU_GUID@@PEAGPEADPEAUIUnknown@@PEAPEAVCDefClient@@PEAUHWND__@@@Z
?CreateInstance@CDebugEventFireCF@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CDefClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CDocfileUnmarshalFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CFileMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CLUAMoniker@@UEAAJAEBU_GUID@@PEAUIUnknown@@KKKPEAUtagMULTI_QI@@@Z
?CreateInstance@CObjServer@@UEAAJPEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@CObjrefMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CProcessActivator@@UEAAJPEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@CRefMutexSem@@SAPEAV1@XZ
?CreateInstance@CRpcResolver@@QEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@CRpcResolver@@QEAAJPEAU_COSERVERINFO@@PEAU_GUID@@KK1PEAKPEAPEAGPEAPEAUtagMInterfacePointer@@PEAJ@Z
?CreateInstance@CServerContextActivator@@UEAAJPEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@CStdClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CSurrogateProcessActivator@@UEAAJPEAUIUnknown@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?CreateInstance@ComPsClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateLSvrClassEntry_rl@CClassEntry@CClassCache@@QEAAJPEAUIUnknown@@KKPEAK@Z
?CreateLightPS@CStdWrapper@@AEAAPEAVIFaceEntry@@AEBU_GUID@@PEAXAEAJ@Z
?CreateMappedStream@CPropertyStorage@@EEAAJXZ
?CreateObjectContext@CObjectContext@@SAPEAV1@K@Z
?CreateObjectDescriptor@@YAPEAXU_GUID@@KPEBUtagSIZE@@PEBU_POINTL@@KPEAG3@Z
?CreateOlePresObj@CCacheNode@@AEAAJPEAPEAUIOlePresObj@@H@Z
?CreateOrOpenDocfileOnHandle@@YAHHKPEAPEAXAEBU_GUID@@0@Z
?CreateOrOpenStorage@CNtfsStorageForPropSetStg@@AEAAJPEBGPEAUIStorage@@KPEAPEAGHPEAPEAU2@@Z
?CreateOrOpenStorageOnHandle@@YAHHKKPEAXAEBU_GUID@@PEAPEAX@Z
?CreateOrOpenStorageOnILockBytes@CNtfsStorageForPropSetStg@@SAJPEAUILockBytes@@PEAUIStorage@@KPEAPEAGHPEAPEAU3@@Z
?CreatePoolEntry@EventPoolEntry@@SAPEAV1@H@Z
?CreatePrototypeContext@CObjectContext@@SAJPEAV1@PEAPEAV1@@Z
?CreateProxy@CPipePSFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAUIRpcProxyBuffer@@PEAPEAX@Z
?CreateProxy@CStdMarshal@@AEAAJAEBU_GUID@@PEAPEAUIRpcProxyBuffer@@PEAPEAXPEAH@Z
?CreateProxy@ComPsClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAUIRpcProxyBuffer@@PEAPEAX@Z
?CreateServer@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@KPEAX@Z
?CreateServer@CStdIdentity@@UEAAJAEBU_GUID@@KPEAX@Z
?CreateSharedDragFormats@@YAPEAXPEAUIDataObject@@@Z
?CreateSharedFileMapping@@YAPEAXPEAGKKPEAX1KPEAPEAXPEAH@Z
?CreateStackTrace@CStackWalker@@UEAAPEAUIStackWalkerStack@@PEAX0K@Z
?CreateState@CIDObject@@QEAAJPEAVCObjectContext@@@Z
?CreateStorage@CExpParameterValidate@@SAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CExposedDocFile@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CNtfsStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CNtfsStorageForPropSetStg@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CSimpStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStream@CDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPSStream@@@Z
?CreateStream@CExpParameterValidate@@SAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CExposedDocFile@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CNtfsStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CNtfsStorageForPropSetStg@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAVCPubStream@@@Z
?CreateStream@CSimpStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CSimpStorageOpen@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CStmBufWrite@@QEAAJPEAUIStorage@@PEBG@Z
?CreateStream@CWrappedDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPSStream@@@Z
?CreateStream@PDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPSStream@@@Z
?CreateStub@CPipePSFactory@@UEAAJAEBU_GUID@@PEAUIUnknown@@PEAPEAUIRpcStubBuffer@@@Z
?CreateStub@CStdMarshal@@AEAAJAEBU_GUID@@PEAPEAUIRpcStubBuffer@@PEAPEAXPEAHPEAUIUnknown@@@Z
?CreateStub@ComPsClassFactory@@UEAAJAEBU_GUID@@PEAUIUnknown@@PEAPEAUIRpcStubBuffer@@@Z
?CreateUnicodeFromAnsi@@YAPEAGPEBD@Z
?CreateUpdateStreamIfNecessary@CNFFMappedStream@@AEAAJXZ
?CreateUserDefinedStream@CPropertySetStorage@@IEAAJPEAUIStorage@@AEAVCPropSetName@@KPEAHPEAPEAUIStream@@@Z
?CreateVtblFromTypeInfo@@YAJPEAUITypeInfo@@0AEBU_GUID@@1HGPEAUtagMethodInfo@@PEAPEAUTYPEINFOVTBL@@@Z
?CreateWrapper@@YAJPEAX@Z
?CreateWrapperClipDataObjectFromFormatsArray@@YAJPEAPEAUIDataObject@@@Z
?Create_rl@CDllPathEntry@CClassCache@@SAJAEAUDLL_INSTANTIATION_PROPERTIES@@AEBUACTIVATION_PROPERTIES@@AEAPEAV12@@Z
?CreatedOk@CDwordBag@@QEAAHXZ
?CrossAptAddRefFn@@YAJPEAX@Z
?CrossAptQIFn@@YAJPEAX@Z
?CrossAptRefToNA@@YAHAEAUtagOBJREF@@@Z
?CrossAptReleaseFn@@YAJPEAX@Z
?CrossCtxDisconnectFn@@YAJPEAX@Z
?CrossCtxMarshalFn@@YAJPEAX@Z
?CrossCtxQI@CStdWrapper@@AEAAJPEAVCPolicySet@@AEBU_GUID@@PEAPEAVIFaceEntry@@@Z
?CrossCtxQIFn@@YAJPEAX@Z
?CurlyStringToGUID@@YA_NPEBGPEAU_GUID@@@Z
?CycleToClassEntry@CClassEntry@CClassCache@@QEAAPEAV12@XZ
?DAdvise@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CClipDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDefLink@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDefObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDragDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DDELibMain@@YAHPEAXGGPEAG@Z
?DFlagsToMode@@YAKK@Z
?DLLHostThreadEntry@@YAKPEAX@Z
?DSACompare@@YAHPEAUtagDUALSTRINGARRAY@@0@Z
?DUnadvise@CCacheDataImpl@COleCache@@UEAAJK@Z
?DUnadvise@CClipDataObject@@UEAAJK@Z
?DUnadvise@CDataObjectImpl@CDdeObject@@UEAAJK@Z
?DUnadvise@CDefLink@@UEAAJK@Z
?DUnadvise@CDefObject@@UEAAJK@Z
?DUnadvise@CDragDataObject@@UEAAJK@Z
?DdeBindToObject@@YAJPEBGAEBU_GUID@@H1PEAPEAX@Z
?DdeIsRunning@@YAJU_GUID@@PEBGPEAUIBindCtx@@PEAUIMoniker@@3@Z
?DeInit@CComCatalog@@QEAAJXZ
?DeInitializeReadCache@CComCatalog@@CAJXZ
?Deactivate@CIDObject@@QEAAJXZ
?Deactivate@CStdMarshal@@QEAAXXZ
?Deactivate@CStdWrapper@@QEAAXXZ
?DeallocatePoolEntry@EventPoolEntry@@SAXPEAV1@@Z
?DebugServerQueryInterface@CDdeServerCallMgr@@UEAAJPEAPEAX@Z
?DebugServerQueryInterface@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAPEAX@Z
?DebugServerQueryInterface@CServerCallMgr@CRpcChannelBuffer@@UEAAJPEAPEAX@Z
?DebugServerRelease@CDdeServerCallMgr@@UEAAXPEAX@Z
?DebugServerRelease@CRpcStubBufferImpl@CDdeObject@@UEAAXPEAX@Z
?DebugServerRelease@CServerCallMgr@CRpcChannelBuffer@@UEAAXPEAX@Z
?DebuggerFriendlyExceptionFilter@@YAHK@Z
?DecRef@CNameHashTable@@QEAAKKAEBU_GUID@@PEAUtagSECURITYBINDING@@@Z
?DecRefCnt@CRefCache@@QEAAKXZ
?DecRefCnt@MIDEntry@@QEAAKXZ
?DecRefCnt@OXIDEntry@@QEAAKXZ
?DecRefCount@CMachineNamesHelper@@QEAAXXZ
?DecSrvIPIDCnt@CStdMarshal@@QEAAXPEAUtagIPIDEntry@@KKPEAUtagSECURITYBINDING@@K@Z
?DecStrongAndNotifyAct@CStdMarshal@@AEAAXPEAUtagIPIDEntry@@K@Z
?DecStrongCnt@CStdIdentity@@QEAAXH@Z
?DecTableCnt@CStdMarshal@@QEAAXXZ
?DecTableStrongCnt@CRefCache@@QEAAKHPEAPEAUtagREMINTERFACEREF@@PEAG@Z
?DecWeakCnt@CStdIdentity@@QEAAXH@Z
?DecideDestruction@CObjectContext@@AEAAKXZ
?DecideDestruction@CStdWrapper@@AEAAKPEAVCPolicySet@@@Z
?DecideToUseMergedHive@CEnumClassesOfCategories@@AEAAJPEAUHKEY__@@KPEAH@Z
?DeclareVisibility@CDdeObject@@AEAAJHH@Z
?DecrementCount@CCtxConnectionManager@@QEAAXXZ
?DecrementExportCount@CRefExportCount@@QEAAKXZ
?DecrementNestCount@CRefExportCount@@QEAAXXZ
?DecrementNestCount@CSafeRefCount@@QEAAXXZ
?DecrementObjectReferences@CCtxConnectionManager@@SAXXZ
?DefaultAuthnServices@@YAJXZ
?DefaultAuthnSvc@@YAKPEAVOXIDEntry@@@Z
?DefaultBlanket@@YAJKPEAVOXIDEntry@@PEAUSBlanket@@@Z
?DefaultCert@CSSL@@SAJPEAPEBU_CERT_CONTEXT@@@Z
?DefaultStringBindings@@YAJXZ
?DelegateCIAndGetCF@ActivationPropertiesIn@@UEAAJPEAUIUnknown@@PEAPEAUIActivationPropertiesOut@@PEAPEAUIClassFactory@@@Z
?DelegateCreateInstance@ActivationPropertiesIn@@UEAAJPEAUIUnknown@@PEAPEAUIActivationPropertiesOut@@@Z
?DelegateGetClassObject@ActivationPropertiesIn@@UEAAJPEAPEAUIActivationPropertiesOut@@@Z
?Delete@CFileStream@@QEAAXXZ
?Delete@CNtfsStream@@IEAAJXZ
?Delete@CPropertySetStorage@@UEAAJAEBU_GUID@@@Z
?Delete@CStreamChunkList@@QEAAXXZ
?Delete@CUpdateList@@QEAAXPEAVCUpdate@@@Z
?DeleteACEFromStreamACL@@YAHPEAU_TRUSTEE_W@@KPEAUtagACL_DESCRIPTOR@@PEAUtagPCB@@@Z
?DeleteAdviseInfo@CDefClient@@QEAAXXZ
?DeleteAllItems@?$CArray@VCCacheNode@@@@QEAAXXZ
?DeleteAllItems@CDefClient@@AEAAXXZ
?DeleteByName@CChildInstanceList@@QEAAXPEBVCDfName@@@Z
?DeleteChannel@CDdeObject@@AEAAXPEAVDDE_CHANNEL@@@Z
?DeleteContents@CDocFile@@QEAAJXZ
?DeleteContents@PDocFile@@QEAAJXZ
?DeleteCtxEntries@CtxEntry@@SAXAEAPEAV1@K@Z
?DeleteExtent@CExtentList@@QEAAJG@Z
?DeleteFromItemsList@CDefClient@@QEAAXPEAUHWND__@@@Z
?DeleteItem@?$CArray@VCCacheNode@@@@QEAAHK@Z
?DeleteMappedStream@CPropertyStorage@@EEAAXXZ
?DeleteMultiple@CPropertyBagEx@@UEAAJKQEBQEBGK@Z
?DeleteMultiple@CPropertyStorage@@UEAAJKQEBUtagPROPSPEC@@@Z
?DeleteOpaqueData@CComActivator@@UEAAJAEBU_GUID@@@Z
?DeleteOpaqueData@OpaqueDataInfo@@UEAAJAEBU_GUID@@@Z
?DeletePoolEntry@EventPoolEntry@@SAXPEAV1@@Z
?DeletePropertyNames@CPropertyStorage@@UEAAJKQEBK@Z
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAXXZ
?DeleteStack@?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SAXXZ
?DeleteStack@?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SAXXZ
?DeleteStack@?$DedicatedAllocator@VCallFrame@@@@SAXXZ
?DeleteStream@CNtfsStream@@CAJPEAPEAX@Z
?DeleteTheFile@CFileStream@@AEAAHPEBG@Z
?DeliverEvents@CPolicySet@@QEAAJPEAVCRpcCall@@W4tagCallType@@PEAVCCtxCall@@@Z
?Destroy@COleStaticMutexSem@@QEAAXXZ
?Destroy@tagMethodInfo@@QEAAXXZ
?DestroyAllChildren@CDirectory@@QEAAJKK@Z
?DestroyChild@CDirectory@@QEAAJKPEBVCDfName@@K@Z
?DestroyChild@CPubDocFile@@QEAAXK@Z
?DestroyCommonDdeWindow@@YAJXZ
?DestroyDdeSrvrWindow@@YAJPEAUHWND__@@G@Z
?DestroyElement@CExpParameterValidate@@SAJPEBG@Z
?DestroyElement@CExposedDocFile@@UEAAJPEBG@Z
?DestroyElement@CNtfsStorage@@UEAAJPEBG@Z
?DestroyElement@CNtfsStorageForPropSetStg@@UEAAJPEBG@Z
?DestroyElement@CSimpStorage@@UEAAJPEBG@Z
?DestroyEntry@CHandle@@QEAAJPEBVCDfName@@@Z
?DestroyEntry@CMStream@@QEAAJKPEBVCDfName@@@Z
?DestroyEntry@CPubDocFile@@QEAAJPEBVCDfName@@H@Z
?DestroyEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@H@Z
?DestroyEntry@PDocFile@@QEAAJPEBVCDfName@@H@Z
?DestroyIdentity@CObjectContext@@QEAAXPEAUIComObjIdentity@@@Z
?DestroyInstance@CDefClient@@QEAAJXZ
?DestroyPSCache@CPolicySet@@SAXPEAVCObjectContext@@@Z
?DestroyRunningObjectTable@@YAXXZ
?DestroyStreamElement@CNtfsStorage@@QEAAJPEBG@Z
?DetermineDosPathNameType@@YA?AW4PATH_TYPE@@PEBG@Z
?DetermineLongestString@@YAHPEAGAEAPEAG0@Z
?DeterminePolicySet@@YAJPEAVCObjectContext@@0KPEAPEAVCPolicySet@@@Z
?DetermineUnicodePath@CFileMoniker@@QEAAJPEADAEAPEAGAEAG@Z
?DfCreateSharedAllocator@@YAJPEAPEAUIMalloc@@H@Z
?DfCreateSimpDocfile@@YAJPEBGKPEAXPEAPEAUIStorage@@@Z
?DfFromLB@@YAJPEAVCPerContext@@PEAUILockBytes@@KKPEAPEAGPEAPEAVCExposedDocFile@@PEAU_GUID@@@Z
?DfFromName@@YAJPEBGKKPEAPEAGPEAPEAVCExposedDocFile@@PEAKPEAXPEAU_GUID@@@Z
?DfGetTOD@@YAJPEAU_FILETIME@@@Z
?DfIsRemoteFile@@YAHPEAX@Z
?DfOpenSimpDocfile@@YAJPEBGKPEAXPEAPEAUIStorage@@@Z
?DfpNtStatusToHResult@@YAJJ@Z
?DialogProc@DefaultIBindStatusCallback@@EEAA_JPEAUHWND__@@I_K_J@Z
?DibDraw@@YAJPEAXPEAUHDC__@@PEBU_RECTL@@@Z
?DibFillPaletteEntries@@YAXPEAEGPEAUtagLOGPALETTE@@@Z
?DibMakeLogPalette@@YAPEAXPEAEGPEAPEAUtagLOGPALETTE@@@Z
?DibToPres@@YAJPEAXPEAVCPres@@@Z
?DidAlloc@CErrorSmAllocator@@UEAAHPEAX@Z
?DidAlloc@CSmAllocator@@UEAAHPEAX@Z
?DirtyAll@CFat@@QEAAJXZ
?DisOwn@SDeltaBlock@@QEAAXG@Z
?DisableCOMDynamicAddrTracking@CAddrControl@@UEAAJXZ
?DisableComInits@CServerSecurity@@UEAAJPEAX@Z
?DiscardCache@COleCache@@UEAAJK@Z
?DiscardHPRES@CEMfObject@@UEAAXXZ
?DiscardHPRES@CGenObject@@UEAAXXZ
?DiscardHPRES@CMfObject@@UEAAXXZ
?DiscardPresentation@CCacheNode@@QEAAJPEAUIStream@@@Z
?Disconnect@CDdeServerCallMgr@@UEAAXXZ
?Disconnect@CPipeProxyImp@@UEAAXXZ
?Disconnect@CProxyManagerImpl@CDdeObject@@UEAAXXZ
?Disconnect@CRpcResolver@@AEAAXXZ
?Disconnect@CRpcStubBufferImpl@CDdeObject@@UEAAXXZ
?Disconnect@CServerCallMgr@CRpcChannelBuffer@@UEAAXXZ
?Disconnect@CStdIdentity@@UEAAXXZ
?Disconnect@CStdMarshal@@QEAAXK@Z
?Disconnect@CStdWrapper@@QEAAJPEAVCPolicySet@@@Z
?DisconnectAllObjects@CCtxConnectionManager@@QEAAJXZ
?DisconnectAndFreeSrvIPID@CStdMarshal@@AEAAXPEAUtagIPIDEntry@@@Z
?DisconnectAndRelease@CStdMarshal@@QEAAXK@Z
?DisconnectCliIPIDs@CStdMarshal@@AEAAXXZ
?DisconnectObject@ActivationProperties@@UEAAJK@Z
?DisconnectObject@CClassMoniker@@UEAAJK@Z
?DisconnectObject@CDocfileUnmarshalFactory@@UEAAJK@Z
?DisconnectObject@CErrorObject@@UEAAJK@Z
?DisconnectObject@CExposedDocFile@@UEAAJK@Z
?DisconnectObject@CExposedStream@@UEAAJK@Z
?DisconnectObject@CFreeMarshaler@@UEAAJK@Z
?DisconnectObject@CMarshalImplPStream@@UEAAJK@Z
?DisconnectObject@CObjectContext@@UEAAJK@Z
?DisconnectObject@CPointerMoniker@@UEAAJK@Z
?DisconnectObject@CSimpStorage@@UEAAJK@Z
?DisconnectObject@CSimpStream@@UEAAJK@Z
?DisconnectObject@CStaticWrapper@@UEAAJK@Z
?DisconnectObject@CStdMarshal@@UEAAJK@Z
?DisconnectObject@CStdWrapper@@UEAAJK@Z
?DisconnectObject@InprocActpropsUnmarshaller@@UEAAJK@Z
?DisconnectSrvIPIDs@CStdMarshal@@AEAAXK@Z
?DisconnectSwitch@@YAJPEAX@Z
?DispatchCall@@YAJPEAUtagDISPATCHDATA@@@Z
?DispatchCall@@YAJPEAVCMessageCall@@@Z
?Displacement@CStackWalkerSymbol@@UEAA_KXZ
?DllGetClassObject@CDllHost@@UEAAJ_KU_GUID@@AEBU2@2PEAPEAUIUnknown@@K@Z
?DllGetClassObject@CDllPathEntry@CClassCache@@QEAAJAEBU_GUID@@0PEAPEAUIUnknown@@H@Z
?DllGetCommitSig@@YAJPEAUILockBytes@@PEAK@Z
?DllGetScratchMultiStream@@YAJPEAPEAVCMStream@@HPEAPEAUILockBytes@@PEAV1@@Z
?DllHostProcessInitialize@@YAJXZ
?DllHostProcessUninitialize@@YAXXZ
?DllHostThreadUninitialize@@YAXXZ
?DllIsMultiStream@@YAJPEAUILockBytes@@@Z
?DllMultiStreamFromStream@@YAJPEAUIMalloc@@PEAPEAVCMStream@@PEAPEAUILockBytes@@KK@Z
?DllReleaseMultiStream@@YAXPEAVCMStream@@@Z
?DllSetCommitSig@@YAJPEAUILockBytes@@K@Z
?DoATClassCreate@@YAJP6AJAEBU_GUID@@0PEAPEAX@Z00PEAPEAUIUnknown@@@Z
?DoATClassCreate@@YAJPEAVCDllPathEntry@CClassCache@@AEBU_GUID@@1PEAPEAUIUnknown@@@Z
?DoAlloc@?$DedicatedAllocator@UDISPATCH_CLIENT_FRAME@@@@SAPEAX_K@Z
?DoAlloc@?$DedicatedAllocator@UDISPATCH_SERVER_FRAME@@@@SAPEAX_K@Z
?DoAlloc@?$DedicatedAllocator@VCallFrame@@@@SAPEAX_K@Z
?DoCallback@CObjectContext@@UEAAJP6AJPEAX@Z0AEBU_GUID@@I@Z
?DoCallback@CRemoteUnknown@@UEAAJPEAUtagXAptCallback@@@Z
?DoCoAuthIdentityFixup@SecurityInfo@@AEAAJXZ
?DoCoAuthIdentityFixupIfNecessary@SecurityInfo@@AEAAJXZ
?DoContextSensitiveHelp@CFrameFilter@@QEAAHXZ
?DoConversionIfSpecialClass@CDefObject@@AEAAJPEAUIStorage@@@Z
?DoCreateInstance@CComActivator@@SAJAEBU_GUID@@PEAUIUnknown@@KPEAU_COSERVERINFO@@KPEAUtagMULTI_QI@@PEAVActivationPropertiesIn@@@Z
?DoGetClassObject@CComActivator@@SAJAEBU_GUID@@KPEAU_COSERVERINFO@@0PEAPEAXPEAVActivationPropertiesIn@@@Z
?DoGetInstanceFromFile@CComActivator@@SAJPEAU_COSERVERINFO@@PEAU_GUID@@PEAUIUnknown@@KKPEAGKPEAUtagMULTI_QI@@PEAVActivationPropertiesIn@@@Z
?DoGetInstanceFromStorage@CComActivator@@SAJPEAU_COSERVERINFO@@PEAU_GUID@@PEAUIUnknown@@KPEAUIStorage@@KPEAUtagMULTI_QI@@PEAVActivationPropertiesIn@@@Z
?DoInitNew@CDefClient@@QEAAJXZ
?DoMTApartmentCreate@@YAJAEAK@Z
?DoMTClassCreate@@YAJPEAVCDllPathEntry@CClassCache@@AEBU_GUID@@1PEAPEAUIUnknown@@@Z
?DoNTApartmentCreate@@YAJAEAK@Z
?DoNTClassCreate@@YAJPEAVCDllPathEntry@CClassCache@@AEBU_GUID@@1PEAPEAUIUnknown@@@Z
?DoNormalListen@@YAJG@Z
?DoOle20Advise@CDefClient@@QEAAJW4OLE_NOTIFICATION@@G@Z
?DoOle20UnAdviseAll@CDefClient@@QEAAJXZ
?DoPostUnserializeCoAuthFixup@SecurityInfo@@AEAAJXZ
?DoSTApartmentCreate@@YAJAEAK@Z
?DoSTClassCreate@@YAJPEAVCDllPathEntry@CClassCache@@AEBU_GUID@@1PEAPEAUIUnknown@@@Z
?DoSTMTApartmentCreate@@YAJAEAK@Z
?DoSTMTClassCreate@@YAJPEAVCDllPathEntry@CClassCache@@AEBU_GUID@@1PEAPEAUIUnknown@@@Z
?DoServerContextCCI@@YAJPEAX@Z
?DoServerContextGCO@@YAJPEAX@Z
?DoThreadSpecificCleanup@@YAXXZ
?DoVerb@CDefLink@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoVerb@CDefObject@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoVerb@COleObjectImpl@CDdeObject@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoWeShareMemory@CallFrame@@QEAAHXZ
?DocDispatchIncomingCall@@YAJPEAUtagDOCDISPATCHDATA@@@Z
?DocDoVerbItem@CDefClient@@QEAAJPEADGHH@Z
?DocExecute@CDefClient@@QEAAJPEAX@Z
?DocHandleIncomingCall@@YAJPEAUtagDOCDISPATCHDATA@@@Z
?DocShowItem@CDefClient@@QEAAJPEADH@Z
?DocumentLevelConnect@CDdeObject@@AEAAJPEAUIBindCtx@@@Z
?Done@CleanupStack@@QEAAXJ@Z
?DowngradeFromWriterLock@CRWLock@@QEAAKPEAULockCookie@@@Z
?DownloadClass@@YAJPEAGK@Z
?DownloadClass@@YAJU_GUID@@K@Z
?DragDropProcessUninitialize@@YAXXZ
?DragEnter@CDropTarget@@UEAAJPEAUIDataObject@@KU_POINTL@@PEAK@Z
?DragLeave@CDropTarget@@UEAAJXZ
?DragOver@CDragOperation@@QEAAHXZ
?DragOver@CDropTarget@@UEAAJKU_POINTL@@PEAK@Z
?Draw@CCacheNode@@QEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAUtagDVTARGETDEVICE@@PEAUHDC__@@2PEBU_RECTL@@3P6AH_K@Z4@Z
?Draw@CEMfObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CGenObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CMfObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Drop@CDropTarget@@UEAAJPEAUIDataObject@@KU_POINTL@@PEAK@Z
?DsaValid@@YAHPEAUtagDUALSTRINGARRAY@@@Z
?DuCacheDelegate@@YAPEAXPEAPEAUIUnknown@@AEBU_GUID@@PEAPEAXPEAU1@@Z
?DuLockContainer@@YAXPEAUIOleClientSite@@HPEAH@Z
?DuSetClientSite@@YAJHPEAUIOleClientSite@@PEAPEAU1@PEAH@Z
?DummyCleanup@@YAXPEAUSHashChain@@@Z
?DumpList@CDeltaList@@AEAAJXZ
?DupFileHandleToOthers@CFileStream@@AEAAJXZ
?DupWCHARString@@YAJPEBGAEAPEAGAEAG@Z
?DuplicateAtom@@YAGG@Z
?DuplicateBitmap@@YAPEAUHBITMAP__@@PEAU1@@Z
?DuplicateMetaFile@@YAPEAXPEAX@Z
?DuplicatePropertyName@CPropertySetStream@@QEBAPEAGPEBGPEAJ@Z
?DwULIToAStr@@YAK_KPEADH@Z
?DwULIToWStr@@YAK_KPEAGH@Z
?DwordAlignPointer@SerializedPropertyReader@@QEAAJXZ
?EMfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEBUtagENHMETARECORD@@H_J@Z
?EatDotDots@@YAHPEAPEBGPEAG@Z
?Empty@CDIFat@@QEAAXXZ
?Empty@CDeltaList@@QEAAXXZ
?Empty@CDirectory@@QEAAXXZ
?Empty@CFat@@QEAAXXZ
?Empty@CMStream@@QEAAXXZ
?Empty@CPagedVector@@QEAAXXZ
?Empty@CStreamCache@@QEAAXXZ
?Empty@CUpdateList@@QEAAXXZ
?EmptyCache@CChildInstanceList@@QEAAXXZ
?EmptyCache@CPubDocFile@@QEAAXXZ
?EmptyCache@CPubStream@@QEAAXXZ
?EmptyCache@CTransactedStream@@QEAAXXZ
?EmptyCache@CUpdateList@@QEAAXXZ
?EmptyCache@CWrappedDocFile@@QEAAXXZ
?EmptyCache@PDocFile@@QEAAXXZ
?EmptyCache@PRevertable@@QEAAXXZ
?EmptyCache@PSStream@@QEAAXXZ
?EmptyCache@PTSetMember@@QEAAXXZ
?EmptyRegion@CStreamCache@@QEAAJKK@Z
?EnableCOMDynamicAddrTracking@CAddrControl@@UEAAJXZ
?EnableComInits@CServerSecurity@@UEAAJPEAPEAX@Z
?EnableDisableDynamicIPTracking@CRpcResolver@@QEAAJH@Z
?EnableTracking@CDefLink@@AEAAJPEAUIMoniker@@K@Z
?EnableTracking@CFileMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnableTracking@CTrackingCompositeMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnableTracking@CTrackingFileMoniker@@UEAAJPEAUIMoniker@@K@Z
?Encode@?$CRtlSmartUcsEncoderTraitsBase@V?$CRtlSmartUcsEncoderTraits@U_LUNICODE_STRING@@@@@@SAJKPEAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?Encode@?$CRtlSmartUcsEncoderTraitsBase@V?$CRtlSmartUcsEncoderTraits@U_LUNICODE_STRING@@@@@@SAJQEBK_KPEAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?End@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA?AViterator@1@XZ
?End@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA?AViterator@1@XZ
?EndCommit@CDeltaList@@QEAAXPEAV1@K@Z
?EndCommit@CTransactedStream@@QEAAXK@Z
?EndCommit@CWrappedDocFile@@QEAAXK@Z
?EndCommit@PTSetMember@@QEAAXK@Z
?EndCommitFromChild@CDirectStream@@QEAAXKPEAVCTransactedStream@@@Z
?EndCommitFromChild@CDocFile@@QEAAXKPEAVCWrappedDocFile@@@Z
?EndCommitFromChild@CTransactedStream@@QEAAXKPEAV1@@Z
?EndCommitFromChild@CWrappedDocFile@@QEAAXKPEAV1@@Z
?EndCommitFromChild@PDocFile@@QEAAXKPEAVCWrappedDocFile@@@Z
?EndCommitFromChild@PSStream@@QEAAXKPEAVCTransactedStream@@@Z
?EndCopyOnWrite@CMStream@@QEAAJKK@Z
?EndSession@CDebugEventFire@@UEAAJXZ
?EndUpdates@CDefLink@@AEAAXXZ
?EndUsingLatestStream@CNFFMappedStream@@AEAAXXZ
?EndUsingUpdateStream@CNFFMappedStream@@AEAAXXZ
?EnlargeStreamACL@@YAJPEAUtagPCB@@K@Z
?EnsureCLSIDIsRegistered@@YAXAEBU_GUID@@PEAUIStorage@@@Z
?EnsureCatalogProviders@CComCatalog@@AEAAXXZ
?EnsureLegacySupport@@YAHPEAUIUnknown@@AEAKAEAPEAX@Z
?EnsureWorkerThread@CROIDTable@@AEAAJXZ
?EnterAfterCallback@@YAJPEAUtagRPCOLEMESSAGE@@PEAVCPolicySet@@PEAJJAEAVCRpcCall@@PEAVCObjectContext@@4PEAVCCtxCall@@HH@Z
?EnterBegin@CAsyncStateMachine@@QEAAJPEAUIUnknown@@@Z
?EnterFinish@CAsyncStateMachine@@QEAAJPEAUIUnknown@@@Z
?EnterForCallback@@YAJPEAUtagRPCOLEMESSAGE@@PEAVCPolicySet@@P6AJPEAX@Z2AEBU_GUID@@KPEAUIUnknown@@PEAJPEAPEAVCObjectContext@@@Z
?EnterNTA@@YAPEAVCObjectContext@@PEAV1@@Z
?EnterNTAIfNecessary@CDllHost@@AEAAHAEAVCOleTls@@PEAPEAVCObjectContext@@@Z
?EnterServiceDomain@@YAJPEAUIObjContext@@@Z
?Enum@CAntiMoniker@@EEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CBaseMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CClassMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CCompositeMoniker@@EEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CFileMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CItemMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CObjrefMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPackagerMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPointerMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPropertyBagEx@@UEAAJPEBGKPEAPEAUIEnumSTATPROPBAG@@@Z
?Enum@CPropertySetStorage@@UEAAJPEAPEAUIEnumSTATPROPSETSTG@@@Z
?Enum@CPropertyStorage@@UEAAJPEAPEAUIEnumSTATPROPSTG@@@Z
?EnumAdvise@CDAHolder@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefLink@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@COAHolder@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAndAdvise@CDataAdviseCache@@QEAAJPEAUIDataObject@@H@Z
?EnumAndRemove@CHashTable@@UEAAHP6AHPEAUSHashChain@@PEAX@Z1PEAKPEAPEAX@Z
?EnumApplications@CComProcessInfo@@UEAAJPEAPEAUIEnumUnknown@@@Z
?EnumCache@COleCache@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumCategories@CComCat@@UEAAJKPEAPEAUIEnumCATEGORYINFO@@@Z
?EnumCategories@CsCatInfo@@UEAAJKPEAPEAUIEnumCATEGORYINFO@@@Z
?EnumCategoriesOfClass@CComCat@@CAJAEBU_GUID@@PEBGHPEAPEAUIEnumGUID@@@Z
?EnumClassesOfCategories@CComCat@@UEAAJKQEBU_GUID@@K0PEAPEAUIEnumGUID@@@Z
?EnumClassesOfCategories@CsCatInfo@@UEAAJKQEBU_GUID@@K0PEAPEAUIEnumGUID@@@Z
?EnumConnectionPoints@CAsyncConnectionContainer@@UEAAJPEAPEAUIEnumConnectionPoints@@@Z
?EnumConnections@CAsyncConnection@@UEAAJPEAPEAUIEnumConnections@@@Z
?EnumContextProps@CObjectContext@@UEAAJPEAPEAUIEnumContextProps@@@Z
?EnumDAdvise@CCacheDataImpl@COleCache@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CClipDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDataObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefLink@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDragDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumElements@CExpParameterValidate@@SAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CExposedDocFile@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CNtfsStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CNtfsStorageForPropSetStg@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CSimpStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CSimpStorageOpen@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumFormatEtc@CCacheDataImpl@COleCache@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDataObjectImpl@CDdeObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefLink@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDragDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumImplCategoriesOfClass@CComCat@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumImplCategoriesOfClass@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumNtStreams@@YAJPEAXPEAPEAU_FILE_STREAM_INFORMATION@@PEAKH@Z
?EnumObjectParam@CBindCtx@@UEAAJPEAPEAUIEnumString@@@Z
?EnumObjects@COleItemContainerImpl@CDdeObject@@UEAAJKPEAPEAUIEnumUnknown@@@Z
?EnumReqCategoriesOfClass@CComCat@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumReqCategoriesOfClass@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumRetQueues@CComProcessInfo@@UEAAJPEAPEAUIEnumUnknown@@@Z
?EnumRunning@CRunningObjectTable@@UEAAJPEAPEAUIEnumMoniker@@@Z
?EnumVerbs@CDefLink@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumVerbs@CDefObject@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumVerbs@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumeratePropids@CPropertySetStream@@QEAAEPEAK00PEAJ@Z
?Erase@CDdeConnectionTable@@QEAAJXZ
?ErrorHandler@CCtxCall@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?EstablishIID@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?ExcludeEntries@PDocFile@@SAJPEAV1@PEAPEAG@Z
?Execute@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEAXHHH@Z
?Expand@CSpyTable@@AEAAHXZ
?ExpandUNCName@@YAJPEAGPEAPEAG0@Z
?ExpireEntry@OXIDEntry@@AEAAXXZ
?Extend@CFat@@AEAAJKK@Z
?ExtendMapView@CFileStream@@AEAAJK@Z
?ExtractNameAndIndex@@YAHKPEAG0IPEAI@Z
?ExtractUnicodeString@@YAJPEADGAEAPEAGAEAG@Z
?FContinue@CContinue@@UEAAJXZ
?FDisableAssociatedInterceptor@@YAHUHREG@@PEBG@Z
?FIX_WIN32@@YAJJ@Z
?FIconFileFromClass@@YAHAEBU_GUID@@PEAGIPEAI@Z
?FIndirect@CallFrame@@QEBAHEPEBEH@Z
?FInit@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@UEAAHXZ
?FInit@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@UEAAHXZ
?FInit@CMutexSem2@@QEAAHXZ
?FInit@XLOCK@@QEAAHXZ
?FIsAVariantType@@YAHG@Z
?FIsLCID@@YAHPEAG@Z
?FastGetOrCreateLockEntry@LockEntry@@SAPEAV1@QEAVCRWLock@@@Z
?FetchFullKeyInformation@@YAJPEAUHKEY__@@PEAPEAU_KEY_FULL_INFORMATION@@PEAPEAU_KEY_NAME_INFORMATION@@@Z
?FileBindToObject@@YAJPEAUIMoniker@@PEAGAEBU_GUID@@PEAUIBindCtx@@PEAUtagBIND_OPTS2@@02PEAPEAX@Z
?FilePointerEqual@CFileStream@@AEAAH_K@Z
?FilePointerEqual@CGlobalFileStream@@QEAAH_K@Z
?FillAppend@CFileStream@@UEAAJPEBXKPEAK@Z
?FillAppend@CFillLockBytes@@UEAAJPEBXKPEAK@Z
?FillAt@CFileStream@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?FillAt@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?FillBuffer@@YAPEAXPEAUWireExtentArray@@KKHPEAVCMessageCall@@@Z
?FillBuffer@CPolicySet@@QEAAJPEAVCRpcCall@@W4tagCallType@@PEAVCCtxCall@@@Z
?FillLocalOXIDInfo@@YAJAEAUtagOBJREF@@AEAUtagOXID_INFO@@@Z
?FillObjRef@CStdMarshal@@AEAAXAEAUtagOBJREF@@KKAEAUtagCOMVERSION@@PEAUtagIPIDEntry@@@Z
?FillSTD@CStdMarshal@@QEAAXPEAUtagSTDOBJREF@@KKPEAUtagIPIDEntry@@@Z
?FinalConstruct@CComClassInfo@@QEAAJPEAUIUserToken@@PEAUHKEY__@@PEBU_GUID@@PEAG1K1KH@Z
?FinalConstruct@CComProcessInfo@@QEAAJAEBU_GUID@@PEAGPEAUHKEY__@@K2H@Z
?FinalizerBypassEnabled@@YAHXZ
?Find@CAuthInfo@@SAPEAXPEAUtagSECURITYBINDING@@@Z
?Find@CGlobalFileStream@@QEAAPEAUCFileStream@@K@Z
?Find@CSpyTable@@QEAAHPEAXPEAK@Z
?FindAggStdMarshal@@YAJPEAUIStream@@PEAPEAUIMarshal@@@Z
?FindAlreadyOpenStream@CNtfsStorage@@AEAAHPEBGPEAPEAVCNtfsStream@@@Z
?FindBase@CUpdateList@@SAPEAVCUpdate@@PEAV2@PEAPEBVCDfName@@@Z
?FindBlock@CSmAllocator@@AEAAPEAVCBlockHeader@@_KPEAPEAV2@@Z
?FindByName@CChildInstanceList@@QEAAPEAVPRevertable@@PEBVCDfName@@@Z
?FindClient@@YAPEAXPEAX0H@Z
?FindConnectionPoint@CAsyncConnectionContainer@@UEAAJAEBU_GUID@@PEAPEAUIConnectionPoint@@@Z
?FindDocObj@CDDEServer@@QEAAPEAVCDefClient@@PEAD@Z
?FindEntry@CDirectory@@AEAAJKPEBVCDfName@@W4DIRENTRYOP@@PEAUSEntryBuffer@@@Z
?FindEntry@CEndpointsTable@@QEAAPEAVCEndpointEntry@@G@Z
?FindExisting@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAJAEBU_GUID@@PEAPEAUINTERFACE_HELPER_CLSID@@@Z
?FindExisting@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAJAEBU_GUID@@PEAPEAUTYPEINFOVTBL@@@Z
?FindExisting@MD_INTERFACE_CACHE@@QEAAJAEBU_GUID@@PEAPEAUMD_INTERFACE@@@Z
?FindExt@@YAPEBGPEBG@Z
?FindExtent@CExtentList@@QEAAJGAEAPEFAU_MONIKEREXTENT@@@Z
?FindExtentId@@YAKPEAUSHookList@@U_GUID@@@Z
?FindGreaterEntry@CDirectory@@QEAAJKPEBVCDfName@@PEAK@Z
?FindGreaterEntry@CDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?FindGreaterEntry@CPubDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@H@Z
?FindGreaterEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?FindGreaterEntry@PDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?FindIPIDEntryByIID@CStdMarshal@@QEAAJAEBU_GUID@@PEAPEAUtagIPIDEntry@@@Z
?FindIPIDEntryByIPID@CStdMarshal@@IEAAJAEBU_GUID@@PEAPEAUtagIPIDEntry@@@Z
?FindIPIDEntryByInterface@CStdMarshal@@QEAAJPEAXPEAPEAUtagIPIDEntry@@@Z
?FindItem@CDefClient@@AEAAJPEAGPEAPEAV1@@Z
?FindLast@CFat@@QEAAJPEAK@Z
?FindMarshal@CMarshalList@@QEBAPEAV1@KPEAX@Z
?FindMaxSect@CFat@@QEAAJPEAK@Z
?FindMaximalFileMoniker@@YAJPEAGKPEAKPEAPEAUIMoniker@@@Z
?FindMessage@CCliModalLoop@@AEAAHK@Z
?FindName@CTSSet@@QEAAPEAVPTSetMember@@PEBVCDfName@@K@Z
?FindObjectFormat@COleCache@@AEAAXPEAUIStorage@@@Z
?FindOffset@CDeltaList@@AEAAJPEAKKPEAT_ULARGE_INTEGER@@H@Z
?FindOrCreateIDObject@CPIDTable@@QEAAJPEAUIUnknown@@PEAVCObjectContext@@HKPEAPEAVCIDObject@@@Z
?FindOrCreateMIDEntry@CMIDTable@@QEAAJAEB_KPEAUtagDUALSTRINGARRAY@@PEAPEAVMIDEntry@@@Z
?FindOrCreateOXIDEntry@COXIDTable@@QEAAJAEB_KAEAUtagOXID_INFO@@W4tagFOCOXID@@PEAUtagDUALSTRINGARRAY@@0PEAVMIDEntry@@KPEAEKPEAPEAVOXIDEntry@@@Z
?FindOrCreateWrapper@@YAJPEAUIUnknown@@PEAVCObjectContext@@HKPEAPEAVCStdWrapper@@@Z
?FindPage@CMSFPageTable@@QEAAJPEAVCPagedVector@@KKPEAPEAVCMSFPage@@@Z
?FindPattern@CPatternTbl@@QEAAJPEAXPEAU_GUID@@@Z
?FindPrevCallOnLID@CCliModalLoop@@QEAAPEAV1@AEBU_GUID@@@Z
?FindStdMarshal@@YAJAEAUtagOBJREF@@HPEAPEAVCStdMarshal@@H@Z
?FindStreamInFSI@@YAPEBU_FILE_STREAM_INFORMATION@@PEBU1@PEBG@Z
?FindSwapPage@CMSFPageTable@@AEAAPEAVCMSFPage@@XZ
?FindThread@XSLOCK@@AEAAPEAUOWNERENTRY@1@V?$OPAQUE_HANDLE@$00@@@Z
?FindThreadOrFree@XSLOCK@@AEAAPEAUOWNERENTRY@1@V?$OPAQUE_HANDLE@$00@@@Z
?FindUNCEndServer@@YAXPEBGPEAG@Z
?Finish@CFinishComposite@CClassCache@@QEAAJXZ
?Finish@CFinishObject@CDllPathEntry@CClassCache@@UEAAJXZ
?Finish@CFinishObject@CLSvrClassEntry@CClassCache@@UEAAJXZ
?FinishShutdown@@YAXXZ
?Finish_AddRef@CAsyncUnknownMgr@@UEAAKXZ
?Finish_QueryInterface@CAsyncUnknownMgr@@UEAAJPEAPEAX@Z
?Finish_QueryMultipleInterfaces@CAsyncUnknownMgr@@UEAAJPEAUtagMULTI_QI@@@Z
?Finish_QueryRemoteInterfaces@CStdMarshal@@QEAAJPEAUtagSQIResult@@PEAUtagQICONTEXT@@@Z
?Finish_Release@CAsyncUnknownMgr@@UEAAKXZ
?Finish_RemQIAndUnmarshal1@CStdMarshal@@AEAAJPEAUtagSQIResult@@PEAUtagQICONTEXT@@@Z
?Finish_RemQIAndUnmarshal2@CStdMarshal@@AEAAJPEAUtagSQIResult@@PEAUtagQICONTEXT@@@Z
?Finish_RemQIAndUnmarshal@CStdMarshal@@AEAAJPEAUtagSQIResult@@PEAUtagQICONTEXT@@@Z
?FireEvent@CDebugEventFire@@UEAAJAEBU_GUID@@HPEA_K1PEAKKJW4eVSAEventFlags@@@Z
?First@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAA?AViterator@1@XZ
?First@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA?AViterator@1@XZ
?First@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?FixUpPipeRegistry@@YAJXZ
?FixWriteBug@@YAJPEAXPEAPEAX@Z
?Fixup@CDIFat@@QEAAJPEAVCMStream@@@Z
?FixupAccessControl@@YAJPEAPEAU_SECURITY_DESCRIPTOR@@K@Z
?FixupSecurityDescriptor@@YAJPEAU_SECURITY_DESCRIPTOR_RELATIVE@@K@Z
?FlagClear@CComActivator@@UEAAJK@Z
?FlagClear@SpecialProperties@@UEAAJK@Z
?FlagQuery@CComActivator@@UEAAJK@Z
?FlagQuery@SpecialProperties@@UEAAJK@Z
?FlagSet@CComActivator@@UEAAJK@Z
?FlagSet@SpecialProperties@@UEAAJK@Z
?FlsThreadCleanupCallback@@YAXPEAX@Z
?Flush@CCache@@QEAAJG@Z
?Flush@CExposedStream@@UEAAXPEAJ@Z
?Flush@CFileStream@@UEAAJXZ
?Flush@CFillLockBytes@@UEAAJXZ
?Flush@CMSFPageTable@@QEAAJXZ
?Flush@CMStream@@QEAAJH@Z
?Flush@CMemBytes@@UEAAJXZ
?Flush@CNFFMappedStream@@UEAAXPEAJ@Z
?Flush@CNtfsStream@@UEAAJXZ
?Flush@CPropertySetStream@@QEAAXPEAJ@Z
?Flush@CPubMappedStream@@QEAAXPEAJ@Z
?Flush@CSSMappedStream@@UEAAXPEAJ@Z
?Flush@CStmBufWrite@@QEAAJXZ
?FlushBufferedData@CChildInstanceList@@QEAAJH@Z
?FlushBufferedData@CPubDocFile@@QEAAJH@Z
?FlushBufferedData@PRevertable@@QEAAJH@Z
?FlushCache@CComCatalog@@UEAAJXZ
?FlushCache@CComCatalog@@W7EAAJXZ
?FlushCache@CComCatalog@@WBA@EAAJXZ
?FlushCache@CComRegCatalog@@UEAAJXZ
?FlushCache@CComSxSCatalog@@UEAAJXZ
?FlushCache@CEffPermsCacheLUID@@QEAAXXZ
?FlushCache@CFileStream@@UEAAJXZ
?FlushHeader@CMStream@@QEAAJG@Z
?FlushIdleEntries@CComCatalog@@UEAAJXZ
?FlushOutFlags@CComCatalog@@CAKK@Z
?FlushPage@CMSFPageTable@@QEAAJPEAVCMSFPage@@@Z
?FlushProviderCaches@CComCatalog@@QEAAXXZ
?FlushSCMBindings@CRpcResolver@@QEAAJPEAG@Z
?For@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?ForOle32@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?ForTypeInfo@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAX@Z
?ForcedShutdown@CSurrogateProcessActivator@@UEAAJXZ
?Free@BstrDestroyer@DeserializeHelper@@EEAAXPEAX@Z
?Free@CCoTaskAllocator@@UEAAXPEAX@Z
?Free@CErrorSmAllocator@@UEAAXPEAX@Z
?Free@CEventCache@@QEAAXPEAX@Z
?Free@CSmAllocator@@UEAAXPEAX@Z
?Free@CallFrame@@QEAAXPEAX@Z
?Free@CallFrame@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_CLIENT_FRAME@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_SERVER_FRAME@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@SafeArrayDestroyer@DeserializeHelper@@EEAAXPEAX@Z
?Free@memory_to_free@CleanupStack@@QEAAXXZ
?FreeAssoc@CMapKeyToValue@@AEAAXPEAUCAssoc@1@@Z
?FreeAssocKey@CMapKeyToValue@@AEBAXPEAUCAssoc@1@@Z
?FreeBuffer@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CCtxCall@@QEAAXXZ
?FreeBuffer@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CCtxComChnl@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CRpcChannelBuffer@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeCleanupEntries@COXIDTable@@AEAAXXZ
?FreeCurrentBuffers@CAddrExclusionList@@AEAAXXZ
?FreeDataChain@CPlex@@QEAAXXZ
?FreeDragDropInfo@@YAXPEAX@Z
?FreeEmbeddedPointers@CallFrame@@QEAAXPEAEPEBE@Z
?FreeEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAEPEBE@Z
?FreeEntry@CGIPTable@@AEAAXPEAUtagGIPEntry@@@Z
?FreeExpiredEntries@COXIDTable@@QEAAXK@Z
?FreeGDIdata@@YAHPEAXG@Z
?FreeMetaDataCache@@YAXXZ
?FreeOXIDAndOIDs@OXIDEntry@@QEAAJKPEA_K@Z
?FreeObjRef@@YAXAEAUtagOBJREF@@@Z
?FreePages@CMSFPageTable@@QEAAXPEAVCPagedVector@@@Z
?FreeParam@CallFrame@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_CLIENT_FRAME@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_SERVER_FRAME@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreePicklingBuff@@YAXPEAUtagPCB@@@Z
?FreePokeData@@YAXPEAX@Z
?FreePreRegMOID@@YAJAEBU_GUID@@@Z
?FreePreRegMOID@CComApartment@@QEAAJAEBU_GUID@@@Z
?FreeRecord@OAUTIL@@AEAAJPEAXPEAUIRecordInfo@@H@Z
?FreeRecord@OAUTIL@@AEAAJPEAXPEAUITypeInfo@@H@Z
?FreeRecordField@OAUTIL@@AEAAJPEAEPEAUtagTYPEDESC@@PEAUITypeInfo@@H@Z
?FreeResources@CClipDataObject@@AEAAXW4FreeResourcesFlags@@@Z
?FreeSrvrMem@CDDEServer@@AEAAJXZ
?FreeStream@CDeltaList@@AEAAXKK@Z
?FreeSurrogate@CCOMSurrogate@@SAJXZ
?FreeSurrogate@CSurrogateProcessActivator@@UEAAJXZ
?FreeSurrogateIfNecessary@@YAXXZ
?FreeTable@CPagedVector@@QEAAXK@Z
?FreeTypeInfoCache@@YAXXZ
?FreeUnused@CClassCache@@SAJK@Z
?FreeWorker@CallFrame@@QEAAXPEAEPEBEH@Z
?Freeze@CCacheNode@@QEAAJXZ
?Freeze@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAK@Z
?Freeze@CObjectContext@@UEAAJXZ
?Full@CPtrBlock@@QEAAHXZ
?GCOCallback@CProcessActivator@@EEAAJKPEAUIUnknown@@PEAVActivationPropertiesIn@@PEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GIPTableContextUninitialize@@YAXXZ
?GUIDToString@@YAXPEBU_GUID@@PEAG@Z
?GenerateDisplayName@CFileMoniker@@QEAAJKPEAG@Z
?GenerateRandomNumber@CRandomNumberGenerator@@QEAAJPEAEK@Z
?GenericCall@LEGACY_INTERCEPTOR@@QEAAJKQEAXZZ
?GenericObjectToIStorage@@YAJAEBVCGenericObject@@PEAUIStorage@@PEBUtagDVTARGETDEVICE@@@Z
?Get@CEventCache@@QEAAJPEAPEAX@Z
?GetAbsMkFromRel@CDefLink@@AEAAJPEAPEAUIMoniker@@0@Z
?GetAccess@@YAJPEAUILockBytes@@KPEAK@Z
?GetAccessPermission@CComProcessInfo@@UEAAJPEAPEAXPEAK@Z
?GetAccessWithMask@@YAJPEAUILockBytes@@KKPEAK@Z
?GetActivateAtStorage@CComProcessInfo@@UEAAJPEAH@Z
?GetActivationFlags@ActivationPropertiesIn@@UEAAJPEAK@Z
?GetActivationID@ActivationPropertiesIn@@UEAAJPEAU_GUID@@@Z
?GetActivationID@ActivationPropertiesOut@@UEAAJPEAU_GUID@@@Z
?GetActivatorFromDllHost@CClassCache@@SAJHKPEAK@Z
?GetActiveObject@CFrameFilter@@UEAAJPEAPEAUIOleInPlaceActiveObject@@@Z
?GetActvFlags@CComActivator@@SAKK@Z
?GetAddress@CSmAllocator@@AEBAPEAVCBlockHeader@@_K@Z
?GetAdvise@CCacheViewImpl@COleCache@@UEAAJPEAK0PEAPEAUIAdviseSink@@@Z
?GetAllAccessRights@CImpAccessControl@COAccessControl@@UEAAJPEAGPEAPEAU_ACTRL_ALISTW@@PEAPEAU_TRUSTEE_W@@2@Z
?GetAllOpaqueData@CComActivator@@UEAAJPEAPEAUtagOpaqueData@@@Z
?GetAllOpaqueData@OpaqueDataInfo@@UEAAJPEAPEAUtagOpaqueData@@@Z
?GetAllTimes@CDirectory@@QEAAJKPEAU_FILETIME@@00@Z
?GetAllTimes@CMStream@@QEAAJKPEAU_FILETIME@@00@Z
?GetAllTimes@CStgHandle@@QEAAJPEAU_FILETIME@@00@Z
?GetAllTimes@PTimeEntry@@QEAAJPEAU_FILETIME@@00@Z
?GetAndTranslateOle1@CClipDataObject@@AEAAJIPEAPEAG00PEAPEAD@Z
?GetApartment@ServerLocationInfo@@UEAAJPEAK@Z
?GetApartmentActivator@CProcessActivator@@EEAAJPEAVActivationPropertiesIn@@PEAPEAUISystemActivator@@@Z
?GetApartmentByID@@YAJKPEAPEAVCComApartment@@@Z
?GetApartmentChain@CClassCache@@SAPEAVCLSvrClassEntry@1@H@Z
?GetApartmentClass@@YAJAEBU_GUID@@0PEAPEAX@Z
?GetApartmentToken@CDllHost@@UEAAJAEAK@Z
?GetAppIDFlags@CComProcessInfo@@UEAAJPEAK@Z
?GetApplication@CComClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetApplication@CComNoClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetApplication@CComSxSClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetApplicationInfo@CComCatalog@@UEAAJAEBU_GUID@@0PEAPEAX@Z
?GetApplicationInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetApplicationInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetApplicationInfo@CComRegCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetApplicationInfo@CComSxSCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetApplicationInfoForExe@CComCatalog@@UEAAJPEAGAEBU_GUID@@PEAPEAX@Z
?GetApplicationInfoForExe@CComCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAX@Z
?GetApplicationInfoForExe@CComCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetApplicationInfoForExe@CComRegCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetApplicationInfoForExe@CComSxSCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetAptCallCtrl@@YAPEAVCAptCallCtrl@@XZ
?GetAssocAt@CMapKeyToValue@@AEBAPEAUCAssoc@1@PEAXIAEAI@Z
?GetAssocKeyPtr@CMapKeyToValue@@AEBAXPEAUCAssoc@1@PEAPEAXPEAI@Z
?GetAsyncCallObject@@YAJPEAUIUnknown@@0AEBU_GUID@@1PEAPEAU1@PEAPEAX@Z
?GetAsyncIIDFromSyncIID@@YAJAEBU_GUID@@PEAU1@@Z
?GetAsyncRemUnknown@CStdMarshal@@QEAAJPEAUIUnknown@@PEAPEAUAsyncIRemUnknown2@@PEAPEAU2@@Z
?GetAuthIdentity@SecurityInfo@@UEAAJPEAPEAU_COAUTHIDENTITY@@@Z
?GetAuthenticationCapabilities@CComProcessInfo@@UEAAJPEAK@Z
?GetAuthenticationLevel@CComProcessInfo@@UEAAJPEAK@Z
?GetAuthnFlags@SecurityInfo@@UEAAJPEAK@Z
?GetAuthnLevel@SecurityInfo@@UEAAJPEAK@Z
?GetAuthnSvc@SecurityInfo@@UEAAJPEAK@Z
?GetAuthnSvcIndexForBinding@@YAKKPEAUtagDUALSTRINGARRAY@@@Z
?GetAuthzSvc@SecurityInfo@@UEAAJPEAK@Z
?GetAvailableSize@Serializer@@QEAAJPEA_J@Z
?GetBaseInterfaceIID@@YAJPEAUITypeInfo@@PEAU_GUID@@PEAPEAU1@@Z
?GetBinaryName@CComClassInfo@@UEAAJPEAPEAG@Z
?GetBindInfo@CBindStatusCallback@@UEAAJPEAKPEAU_tagBINDINFO@@@Z
?GetBindInfo@DefaultIBindStatusCallback@@UEAAJPEAKPEAU_tagBINDINFO@@@Z
?GetBindOptions@CBindCtx@@UEAAJPEAUtagBIND_OPTS@@@Z
?GetBitmapData@CGenObject@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetBits@CPagedVector@@QEAAPEAUCVectBits@@K@Z
?GetBoundSource@CDefLink@@UEAAJPEAPEAUIUnknown@@@Z
?GetBuffer2@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAVCCtxCall@@HHPEAK@Z
?GetBuffer2@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@@YAJKKPEAPEAEPEAK@Z
?GetBuffer@CAptRpcChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CAptRpcChnl@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CCtxComChnl@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CRpcChannelBuffer@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@GenericStream@@UEAAJPEAKPEAPEAE@Z
?GetBuffer@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBufferSize@CUserMarshalInfo@@QEAA_KXZ
?GetCLSID@ContextInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@InstanceInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@InstantiationInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@OpaqueDataInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@OutSerializer@ActivationPropertiesOut@@UEAAJPEAU_GUID@@@Z
?GetCLSID@ScmReplyInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@ScmRequestInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@SecurityInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@ServerLocationInfo@@UEAAJPEAU_GUID@@@Z
?GetCLSID@SpecialProperties@@UEAAJPEAU_GUID@@@Z
?GetCOMVersion@ActivationPropertiesIn@@UEAAJPEAUtagCOMVERSION@@@Z
?GetCOSERVERINFO@SecurityInfo@@UEAAJPEAPEAU_COSERVERINFO@@@Z
?GetCallContext@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallContext@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallContext@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallFrame@CallFrame@@UEAAPEAV1@XZ
?GetCallInfo@CRpcCall@@UEAAJPEAPEBXPEAU_GUID@@PEAKPEAJ@Z
?GetCallObject@@YAJHPEAPEAVCMessageCall@@@Z
?GetCallSource@CRpcCall@@UEAAJPEAW4_CALLSOURCE@@@Z
?GetCallTypeForInCall@CAptCallCtrl@@QEAAKPEAPEAVCCliModalLoop@@AEBU_GUID@@K@Z
?GetCancelInterface@CChannelObject@@QEAAPEAUICancelMethodCalls@@XZ
?GetCanonicalFormatEtc@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefLink@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDragDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCapabilities@SecurityInfo@@UEAAJPEAK@Z
?GetCatalogObject@ActivationProperties@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetCategoryDesc@CComCat@@SAJPEAUHKEY__@@KPEAPEAGPEAK@Z
?GetCategoryDesc@CComCat@@UEAAJAEBU_GUID@@KPEAPEAG@Z
?GetCategoryDesc@CsCatInfo@@UEAAJAEBU_GUID@@KPEAPEAG@Z
?GetChannelCallMgr@@YAJPEAUtagRPCOLEMESSAGE@@PEAUIUnknown@@1PEAPEAVCServerCallMgr@CRpcChannelBuffer@@@Z
?GetChild@CDirectory@@QEAAJKPEAK@Z
?GetClass@ActivationPropertiesIn@@UEAAJAEBU_GUID@@PEAPEAVSerializableProperty@@HPEAH@Z
?GetClass@ActivationPropertiesOut@@UEAAJAEBU_GUID@@PEAPEAVSerializableProperty@@HPEAH@Z
?GetClass@CStgHandle@@QEAAJPEAU_GUID@@@Z
?GetClass@PDocFile@@QEAAJPEAU_GUID@@@Z
?GetClassBits@CDefObject@@AEAAJPEAU_GUID@@@Z
?GetClassContext@CComClassInfo@@UEAAJW4tagCLSCTX@@PEAW42@@Z
?GetClassContext@CComNoClassInfo@@UEAAJW4tagCLSCTX@@PEAW42@@Z
?GetClassContext@CComSxSClassInfo@@UEAAJW4tagCLSCTX@@PEAW42@@Z
?GetClassID@CAntiMoniker@@EEAAJPEAU_GUID@@@Z
?GetClassID@CClassMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CCompositeMoniker@@EEAAJPEAU_GUID@@@Z
?GetClassID@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetClassID@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFileMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CImpAccessControl@COAccessControl@@UEAAJPEAU_GUID@@@Z
?GetClassID@CItemMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CLUAMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CObjrefMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@COleCache@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPackagerMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPersistStgImpl@CDdeObject@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPointerMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CSessionMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassId@CDirectory@@QEAAJKPEAU_GUID@@@Z
?GetClassInfoByApplication@CComCatalog@@UEAAJAEBU_GUID@@000PEAPEAX@Z
?GetClassInfoByApplication@CComCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@111PEAPEAXPEAX@Z
?GetClassInfoByPartition@CComCatalog@@UEAAJAEBU_GUID@@00PEAPEAX@Z
?GetClassInfoByPartition@CComCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@11PEAPEAXPEAX@Z
?GetClassInfoFlags@@YAXPEAVActivationPropertiesIn@@PEAH11@Z
?GetClassInfoFromClsid@@YAJAEBU_GUID@@PEAPEAUIComClassInfo@@K@Z
?GetClassInfoFromProgId@CComCatalog@@UEAAJPEAGAEBU_GUID@@PEAPEAX@Z
?GetClassInfoFromProgId@CComCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAX@Z
?GetClassInfoFromProgId@CComCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetClassInfoFromProgId@CComRegCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetClassInfoFromProgId@CComSxSCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetClassInfoInternal@CComCatalog@@AEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetClassInfoW@ActivationPropertiesIn@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetClassInfoW@CComCatalog@@UEAAJAEBU_GUID@@0PEAPEAX@Z
?GetClassInfoW@CComCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetClassInfoW@CComCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetClassInfoW@CComRegCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetClassInfoW@CComSxSCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetClassInformationForDde@CClassCache@@SAHAEBU_GUID@@PEAU_tagDdeClassInfo@@@Z
?GetClassInformationFromKey@CClassCache@@SAHPEAU_tagDdeClassInfo@@@Z
?GetClassInterface@CDllClassEntry@CClassCache@@UEAAJPEAPEAVIMiniMoniker@2@@Z
?GetClassInterface@CLSvrClassEntry@CClassCache@@UEAAJPEAPEAVIMiniMoniker@2@@Z
?GetClassNameW@CComClassInfo@@UEAAJPEAPEAG@Z
?GetClassNameW@CComNoClassInfo@@UEAAJPEAPEAG@Z
?GetClassNameW@CComSxSClassInfo@@UEAAJPEAPEAG@Z
?GetClassObject@CApartmentActivator@@UEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObject@CClassCache@@SAJAEBUACTIVATION_PROPERTIES@@@Z
?GetClassObject@CClientContextActivator@@UEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObject@CDllClassEntry@CClassCache@@UEAAJAEBU_GUID@@0PEAPEAUIUnknown@@K@Z
?GetClassObject@CDllHost@@QEAAJ_KAEBU_GUID@@1PEAPEAUIUnknown@@K@Z
?GetClassObject@CLSvrClassEntry@CClassCache@@UEAAJAEBU_GUID@@0PEAPEAUIUnknown@@K@Z
?GetClassObject@CLUAMoniker@@UEAAJAEBU_GUID@@KK0PEAPEAX@Z
?GetClassObject@CObjServer@@UEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObject@CProcessActivator@@UEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObject@CRpcResolver@@QEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObject@CServerContextActivator@@UEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObject@CSessionMoniker@@UEAAJAEBU_GUID@@KK0PEAPEAX@Z
?GetClassObject@CSurrogateProcessActivator@@UEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@@Z
?GetClassObjectActivator@CClassCache@@SAJKAEBUACTIVATION_PROPERTIES@@PEAPEAVIMiniMoniker@1@@Z
?GetClientContext@ContextInfo@@UEAAJPEAPEAUIContext@@@Z
?GetClientImpersonating@CComActivator@@UEAAJPEAH@Z
?GetClientImpersonating@SpecialProperties@@UEAAJPEAH@Z
?GetClientNetworkAddress@@YAPEAGPEAX@Z
?GetClientPolicySet@CStdMarshal@@QEAAPEAVCPolicySet@@XZ
?GetClientSite@CDefLink@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientSite@CDefObject@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientSite@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientToken@ActivationPropertiesIn@@UEAAJPEAPEAX@Z
?GetClipDataObjectFromTLS@@YAXPEAPEAUIDataObject@@@Z
?GetClipboardData@CDefLink@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardData@CDefObject@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardData@COleObjectImpl@CDdeObject@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClsctx@ActivationPropertiesIn@@UEAAJPEAK@Z
?GetClsid@ActivationPropertiesIn@@UEAAJPEAU_GUID@@@Z
?GetClsid@CProcessExtensionTbl@@QEAAJPEBGPEAU_GUID@@@Z
?GetColorSet@CCacheNode@@QEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAUtagDVTARGETDEVICE@@PEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CEMfObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CGenObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CMfObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetComActivatorForStage@@YAPEAUISystemActivator@@W4tagACTIVATION_STAGE@@@Z
?GetComVersion@CDestObject@@UEAAJAEAUtagCOMVERSION@@@Z
?GetComVersion@CDestObjectWrapper@@UEAAJAEAUtagCOMVERSION@@@Z
?GetCommandPathAndDebug@CComProcessInfo@@UEAAJPEAHPEAPEAG@Z
?GetCommitInfo@CTransactedStream@@QEAAXPEA_K0@Z
?GetCommitInfo@CWrappedDocFile@@QEAAXPEA_K0@Z
?GetCommitInfo@PTSetMember@@QEAAXPEA_K0@Z
?GetCommitSize@CPubDocFile@@IEAAJPEA_K@Z
?GetComparisonData@CAntiMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CBaseMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CClassMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CCompositeMoniker@@EEAAJPEAEKPEAK@Z
?GetComparisonData@CFileMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CItemMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CLUAMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CSessionMoniker@@UEAAJPEAEKPEAK@Z
?GetConfiguredClsid@CComClassInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetConfiguredClsid@CComNoClassInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetConfiguredClsid@CComSxSClassInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetConnectedIPID@CStdMarshal@@QEAAPEAUtagIPIDEntry@@XZ
?GetConnection@CRpcResolver@@QEAAJXZ
?GetConnectionInterface@CAsyncConnection@@UEAAJPEAU_GUID@@@Z
?GetConnectionPointContainer@CAsyncConnection@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
?GetConnectionStatus@CProxyManagerImpl@CDdeObject@@UEAAJXZ
?GetConnectionStatus@CStdIdentity@@UEAAJXZ
?GetContainer@COleClientSiteImpl@CDefClient@@UEAAJPEAPEAUIOleContainer@@@Z
?GetContext@ServerLocationInfo@@UEAAJPEAPEAUIObjContext@@@Z
?GetContextFlags@CObjectContext@@UEAAJPEAK@Z
?GetContextId@CObjectContext@@UEAAJPEAU_GUID@@@Z
?GetContextInfo@ActivationPropertiesIn@@QEAAJPEAPEAVContextInfo@@@Z
?GetContextMarshaler@CObjectContext@@UEAAJPEAPEAUIContextMarshaler@@@Z
?GetControlFat@CDeltaList@@QEAAPEAVCFat@@XZ
?GetControlILB@CDeltaList@@QEAAPEAUILockBytes@@XZ
?GetControlKeysState@@YAGH@Z
?GetControlKeysStateOfParam@@YAG_K@Z
?GetControlSectorSize@CDeltaList@@QEAAGXZ
?GetCopiedFormatEtcDataArraySize@@YAJPEAUFORMATETCDATAARRAY@@PEA_K@Z
?GetCopy@GenericStream@@UEAAJPEAE@Z
?GetCopy@Serializer@@QEAAJPEAPEAV1@@Z
?GetCopyOfHPRES@CGenObject@@AEAAPEAXXZ
?GetCopyOfHPRES@CMfObject@@AEAAPEAXXZ
?GetCrmLogFileName@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetCsCatInfo@CComCat@@AEAAJXZ
?GetCurrentAddrExclusionList@CAddrControl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetCurrentAddrExclusionList@CRpcResolver@@QEAAJPEAKPEAPEAPEAG@Z
?GetCurrentApartmentId@@YAKXZ
?GetCurrentApartmentKind@@YA?AW4tagAPTKIND@@AEAVCOleTls@@@Z
?GetCurrentApartmentKind@@YA?AW4tagAPTKIND@@XZ
?GetCurrentApartmentToken@@YAJAEAKH@Z
?GetCurrentApartmentType@CObjectContext@@UEAAJPEAW4_APTTYPE@@@Z
?GetCurrentComApartment@@YAJPEAPEAVCComApartment@@@Z
?GetCurrentContext@@YAPEAVCObjectContext@@XZ
?GetCurrentLogicalThreadId@CObjectContext@@UEAAJPEAU_GUID@@@Z
?GetCurrentMachineNames@CRpcResolver@@QEAAJPEAPEAVCMachineNamesHelper@@@Z
?GetCurrentProcessDefaultStackCommit@CThreadStack@@AEAAHXZ
?GetCurrentThreadType@CObjectContext@@UEAAJPEAW4_THDTYPE@@@Z
?GetCurrentToken@@YAJPEAPEAX@Z
?GetCustomActivatorClsids@CComClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAPEAU_GUID@@@Z
?GetCustomActivatorClsids@CComNoClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAPEAU_GUID@@@Z
?GetCustomActivatorClsids@CComSxSClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAPEAU_GUID@@@Z
?GetCustomActivatorCount@CComClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAK@Z
?GetCustomActivatorCount@CComNoClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAK@Z
?GetCustomActivatorCount@CComSxSClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAK@Z
?GetCustomActivators@CComClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAPEAPEAUISystemActivator@@@Z
?GetCustomActivators@CComNoClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAPEAPEAUISystemActivator@@@Z
?GetCustomActivators@CComSxSClassInfo@@UEAAJW4tagACTIVATION_STAGE@@PEAPEAPEAUISystemActivator@@@Z
?GetCustomUnmarshaler@@YAJAEBU_GUID@@PEAUIStream@@PEAPEAUIMarshal@@@Z
?GetDCE@CDllFnPtrMoniker@CClassCache@@UEAAJPEAPEAVCDllClassEntry@2@@Z
?GetDCE@CpUnkMoniker@CClassCache@@UEAAJPEAPEAVCDllClassEntry@2@@Z
?GetDCOMProtocolVersion@CRpcHelper@@UEAAJPEAK@Z
?GetDDEInfo@CLSvrClassEntry@CClassCache@@QEAAJPEAU_tagDdeClassInfo@@PEAPEAVIMiniMoniker@2@@Z
?GetDarwinIdentifier@CComClassInfo@@AEAAJHPEAUHKEY__@@PEBGPEAPEAG@Z
?GetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefClient@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataDelegate@CDefLink@@QEAAPEAUIDataObject@@XZ
?GetDataDelegate@CDefObject@@QEAAPEAUIDataObject@@XZ
?GetDataFat@CDeltaList@@QEAAPEAVCFat@@XZ
?GetDataFromDescriptor@@YAJPEAUIDataObject@@PEAU_GUID@@IW4tagGETCLSIDFLAGS@@PEAPEAGPEAK@Z
?GetDataFromStorage@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@PEAPEAUIStorage@@@Z
?GetDataFromStream@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@PEAPEAUIStream@@@Z
?GetDataHere@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataILB@CDeltaList@@QEAAPEAUILockBytes@@XZ
?GetDataSectorShift@CDeltaList@@QEAAGXZ
?GetDataSectorSize@CDeltaList@@QEAAGXZ
?GetDefaultAccessPermissionsSD@CRpcResolver@@QEAAPEAU_SECURITY_DESCRIPTOR@@XZ
?GetDefaultAccessRestrictionsSD@CRpcResolver@@QEAAPEAU_SECURITY_DESCRIPTOR@@XZ
?GetDefaultAuthenticationLevel@CComActivator@@UEAAJPEAK@Z
?GetDefaultAuthenticationLevel@SpecialProperties@@UEAAJPEAK@Z
?GetDefaultCursorObject@CDragDefaultCursors@@SAPEAV1@XZ
?GetDefaultIcon@@YAJAEBU_GUID@@PEBGPEAPEAX@Z
?GetDelegatedMethodCount@@YAIPEBUtagCInterfaceStubHeader@@@Z
?GetDeltaList@CTransactedStream@@QEAAPEAVCDeltaList@@XZ
?GetDeltaList@PSStream@@QEAAPEAVCDeltaList@@XZ
?GetDescription@CErrorObject@@UEAAJPEAPEAG@Z
?GetDestCtx@@YAKPEAPEAX@Z
?GetDestCtx@ActivationPropertiesIn@@UEAAJPEAK@Z
?GetDestCtx@CChannelObject@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@CCtxChnl@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@CDdeServerCallMgr@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@CDdeServerCallMgr@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@CDestObject@@UEAAJAEAK@Z
?GetDestCtx@CDestObjectWrapper@@UEAAJAEAK@Z
?GetDestCtx@CRpcChannelBuffer@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@CRpcChannelBuffer@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@DDE_CHANNEL@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@DDE_CHANNEL@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@MarshallingChannel@@UEAAJPEAKPEAPEAX@Z
?GetDestCtxEx@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@CRpcChannelBuffer@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxPtr@@YAPEAXPEAUtagCOMVERSION@@@Z
?GetDir@CStreamCache@@AEAAPEAVCDirectory@@XZ
?GetDirEntry@CDirectory@@QEAAJKKPEAPEAVCDirEntry@@@Z
?GetDisplayName@CAntiMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CComClassInfo@@UEAAJPEAPEAG@Z
?GetDisplayName@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CObjrefMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayNameLength@CFileMoniker@@QEAAJPEAK@Z
?GetDocFile@CDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPDocFile@@@Z
?GetDocFile@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAV1@@Z
?GetDocFile@CWrappedDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPDocFile@@@Z
?GetDocFile@PDocFile@@QEAAJPEBVCDfName@@KPEAPEAV1@@Z
?GetDriveLetter@@YAGPEBG@Z
?GetDropTarget@CDragOperation@@AEAAJPEAUHWND__@@0@Z
?GetESect@CFat@@QEAAJKKPEAK@Z
?GetESect@CMStream@@QEAAJKKPEAK@Z
?GetESect@CStreamCache@@QEAAJKPEAK@Z
?GetEffAccRights@CImpAccessControl@COAccessControl@@AEAAJPEAU_TRUSTEE_W@@PEAK@Z
?GetElapsedTime@CCliModalLoop@@QEAAKXZ
?GetElement@CCache@@QEAAJKGPEAPEAEPEBGPEAGPEAPEAUIUnknown@@@Z
?GetElement@CCache@@QEAAJKPEAEGPEAGPEAPEAUIUnknown@@@Z
?GetEmbedSourceFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetEmbeddedObjectFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetEmptyContext@@YAPEAVCObjectContext@@XZ
?GetEndpoints@CComProcessInfo@@UEAAJPEAKPEAPEAUtagDCOM_ENDPOINT@@@Z
?GetEntry@CCallTable@@QEAAPEAUICancelMethodCalls@@K@Z
?GetEntry@CStgHandle@@QEAAJPEBVCDfName@@KPEAVCHandle@@@Z
?GetEntryIndex@CInternalPageAllocator@@QEAAJPEAUtagPageEntry@@@Z
?GetEntryIndex@CPageAllocator@@QEAAJPEAUtagPageEntry@@@Z
?GetEntryPtr@CGIPTable@@AEAAJKPEAPEAUtagGIPEntry@@@Z
?GetEntryPtr@CInternalPageAllocator@@QEAAPEAUtagPageEntry@@J@Z
?GetEntryPtr@CPageAllocator@@QEAAPEAUtagPageEntry@@J@Z
?GetEnvBlock@@YAHPEAU_PRIV_SCM_INFO@@@Z
?GetEnvoyData@CObjectContext@@QEAAJPEAPEAUtagDATAELEMENT@@@Z
?GetEnvoySizeMax@CObjectContext@@UEAAJKPEAK@Z
?GetEnvoyUnmarshalClass@CObjectContext@@UEAAJKPEAU_GUID@@@Z
?GetEventLogger@CDebugEventFire@@QEAAJPEAPEAUISystemDebugEventFire@@@Z
?GetExtent@CCacheNode@@QEAAJKPEAUtagSIZE@@@Z
?GetExtent@CCacheViewImpl@COleCache@@UEAAJKJPEAUtagDVTARGETDEVICE@@PEAUtagSIZE@@@Z
?GetExtent@CDefLink@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CDefObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CEMfObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CGenObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CMfObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@COleCache@@QEAAJKPEAUtagSIZE@@@Z
?GetExtent@COleObjectImpl@CDdeObject@@UEAAJKPEAUtagSIZE@@@Z
?GetFQDN@CRpcResolver@@QEAAJPEAPEAG@Z
?GetFailureInfo@CFileStream@@UEAAJPEAK0@Z
?GetFailureInfo@CFillLockBytes@@UEAAJPEAK0@Z
?GetFat@CStreamCache@@AEAAPEAVCFat@@XZ
?GetFatSect@CDIFat@@QEAAJKPEAK@Z
?GetFile@InstanceInfo@@UEAAJPEAPEAGPEAK@Z
?GetFilePath@CNtfsStorage@@AEAAJPEAPEAG@Z
?GetFilePointer@CFileStream@@AEAA_KXZ
?GetFileTypeFromRegString@CComClassInfo@@AEAAJPEBGPEAW4tagCoModuleType@@@Z
?GetFirstAuthnSvcIndex@@YAKPEAUtagDUALSTRINGARRAY@@@Z
?GetFlags@CDirectory@@QEAAJKPEAK@Z
?GetFormatEtcDataArray@CClipDataObject@@AEAAJXZ
?GetFormatEtcDataArray@CDragDataObject@@AEAAJXZ
?GetFrame@CallFrame@@QEAAPEAV1@AEAPEAV1@PEAX@Z
?GetFree@CDirectory@@AEAAJPEAK@Z
?GetFree@CFat@@QEAAJKPEAKH@Z
?GetFreeChunk@CStreamChunkList@@QEAAPEAUCStreamChunk@@PEAJ@Z
?GetFreeContig@CFat@@QEAAJKPEAUSSegment@@KPEAK@Z
?GetFreeEntry@CtxEntry@@SAPEAV1@PEAPEAV1@K@Z
?GetFreePage@CMSFPageTable@@QEAAJPEAPEAVCMSFPage@@@Z
?GetFuncDescs@@YAJPEAUITypeInfo@@PEAUtagMethodInfo@@@Z
?GetGUID@CErrorObject@@UEAAJPEAU_GUID@@@Z
?GetHandle@CClientCallMgr@@UEAAJPEAPEAX@Z
?GetHandle@CManualResetEvent@@UEAAJPEAPEAX@Z
?GetHandle@CRpcChannelBuffer@@QEAAJPEAPEAVCChannelHandle@@H@Z
?GetHandle@CStdEvent@@UEAAJPEAPEAX@Z
?GetHead@CGlobalFileStream@@QEBAPEAUCFileStream@@XZ
?GetHeapHandle@CSmAllocator@@QEAAQEAXXZ
?GetHelpContext@CErrorObject@@UEAAJPEAK@Z
?GetHelpFile@CErrorObject@@UEAAJPEAPEAG@Z
?GetHelper@CallFrame@@QEBA?AUOAUTIL@@XZ
?GetHmfp@CMfObject@@AEAAPEAXXZ
?GetHostProxy@CDllHost@@AEAAPEAUIDLLHost@@XZ
?GetIDestInfo@CDestObjectWrapper@@UEAAXPEAPEAX@Z
?GetIDsOfNames@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIFDFromInterface@@YAJPEAUIUnknown@@AEBU_GUID@@KKPEAPEAUtagMInterfacePointer@@@Z
?GetIFaceEntry@CStdWrapper@@QEAAPEAVIFaceEntry@@AEBU_GUID@@@Z
?GetIID@Interceptor@@EEAAJPEAU_GUID@@@Z
?GetIID@Interceptor@@EEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@LEGACY_INTERCEPTOR@@UEAAJPEAU_GUID@@@Z
?GetIID@LEGACY_INTERCEPTOR@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIIDAndMethod@CallFrame@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@DISPATCH_FRAME@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDFromOBJREF@CRpcHelper@@UEAAJPEAXPEAPEAU_GUID@@@Z
?GetIIDFromObjRef@@YAJAEAUtagOBJREF@@PEAPEAU_GUID@@@Z
?GetILB@CMStream@@QEBAPEAUILockBytes@@XZ
?GetIPIDEntry@@YAPEAUtagIPIDEntry@@AEBU_GUID@@@Z
?GetIconReference@CComClassInfo@@UEAAJPEAPEAG@Z
?GetIdentity@CIDObject@@UEAAJPEAPEAUIUnknown@@@Z
?GetIfdROT@InstanceInfo@@UEAAJPEAPEAUtagMInterfacePointer@@@Z
?GetImpLevel@CRpcChannelBuffer@@QEAAKXZ
?GetImpLevel@SecurityInfo@@UEAAJPEAK@Z
?GetImpersonationLevel@CComProcessInfo@@UEAAJPEAK@Z
?GetImplInterface@CStdWrapper@@QEAAPEAXAEBU_GUID@@@Z
?GetImplementedClsid@CComClassInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetImplementedClsid@CComNoClassInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetImplementedClsid@CComSxSClassInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetIndex@ActivationPropertiesIn@@UEAAJPEAH@Z
?GetIndicator@CCliRotHintTable@@QEAAHK@Z
?GetInfo@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@LEGACY_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInstanceHelper@@YAJPEAU_COSERVERINFO@@PEAU_GUID@@PEAUIUnknown@@KKPEAGPEAUIStorage@@KPEAUtagMULTI_QI@@PEAVActivationPropertiesIn@@@Z
?GetInstanceHelperMulti@@YAJPEAUIClassFactory@@KPEAU_GUID@@PEAPEAUtagMInterfacePointer@@PEAJPEAPEAUIUnknown@@PEAVCDestObject@@@Z
?GetInstantiationInfo@ActivationPropertiesIn@@QEAAJPEAPEAVInstantiationInfo@@@Z
?GetInterfaceFromGlobal@CGIPTable@@UEAAJKAEBU_GUID@@PEAPEAX@Z
?GetInterfaceFromStdGlobal@@YAJKAEBU_GUID@@PEAPEAX@Z
?GetInterfaceFromWindowProp@CInterfaceFromWindowProp@@UEAAJPEAUHWND__@@AEBU_GUID@@PEAPEAUIUnknown@@PEAG@Z
?GetInterfaceHelperClsid@@YAJAEBU_GUID@@PEAU1@PEAH@Z
?GetInterfaceInfo@CComCatalog@@UEAAJAEBU_GUID@@0PEAPEAX@Z
?GetInterfaceInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetInterfaceInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetInterfaceInfo@CComRegCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetInterfaceInfo@CComSxSCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetInternalClientContext@ContextInfo@@QEAAJPEAPEAVCObjectContext@@@Z
?GetInternalContext@ServerLocationInfo@@QEAAJPEAPEAVCObjectContext@@@Z
?GetInternalInterceptor@LEGACY_INTERCEPTOR@@QEAAJAEBU_GUID@@PEAPEAUICallInterceptor@@@Z
?GetInternalPrototypeContext@ContextInfo@@QEAAJPEAPEAVCObjectContext@@@Z
?GetItem@?$CArray@VCCacheNode@@@@QEAAPEAVCCacheNode@@K@Z
?GetItem@?$CArray@VCFormatEtc@@@@QEAAPEAVCFormatEtc@@K@Z
?GetItem@?$CArray@VCStatData@@@@QEAAPEAVCStatData@@K@Z
?GetItem@CMonikerPtrBuf@@QEAAPEAUIMoniker@@K@Z
?GetKeyForReading@CComCat@@CAJAEBU_GUID@@PEAPEAUHKEY__@@@Z
?GetLCID@CPropertyBagEx@@AEAAJXZ
?GetLUAEnabledSetting@CComClassInfo@@UEAAJPEAH@Z
?GetLUARunLevel@CComActivator@@UEAAJPEAKPEA_K@Z
?GetLUARunLevel@SpecialProperties@@UEAAJPEAKPEA_K@Z
?GetLaunchPermission@CComProcessInfo@@UEAAJPEAPEAXPEAK@Z
?GetLegacyBlanket@@YAJPEAPEAU_SECURITY_DESCRIPTOR@@PEAK1@Z
?GetLength@CFat@@QEAAJKPEAK@Z
?GetLength@GenericStream@@UEAAJPEAK@Z
?GetLife@CObjectContext@@QEAAPEAVCContextLife@@XZ
?GetLinkSourceFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetLocalBlob@ActivationProperties@@UEAAJPEAPEAX@Z
?GetLocalMIDEntry@CMIDTable@@QEAAJPEAPEAVMIDEntry@@@Z
?GetLocalOXIDEntry@@YAJPEAPEAVOXIDEntry@@@Z
?GetLocalResolverBindings@CRpcResolver@@QEAAJPEAPEAVCDualStringArray@@@Z
?GetLocalRunningObjectForDde@@YAJPEAGPEAPEAUIUnknown@@@Z
?GetLocalServer32BinaryBitness@CComClassInfo@@UEAAJPEAK@Z
?GetLocalServerType@CComClassInfo@@UEAAJPEAW4tagLocalServerType@@@Z
?GetLocalServerType@CComNoClassInfo@@UEAAJPEAW4tagLocalServerType@@@Z
?GetLocalServerType@CComSxSClassInfo@@UEAAJPEAW4tagLocalServerType@@@Z
?GetLockEntry@LockEntry@@SAPEAV1@QEAVCRWLock@@@Z
?GetLocksSupported@CFileStream@@UEAAJPEAK@Z
?GetMIDEntry@OXIDEntry@@QEAAPEAVMIDEntry@@XZ
?GetMStream@CDeltaList@@QEAAPEAVCMStream@@XZ
?GetManifestLocation@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetMap@CDeltaList@@QEAAJKKPEAK@Z
?GetMapping@CProxyManagerImpl@CDdeObject@@UEAAPEAXXZ
?GetMapping@CStdIdentity@@UEAAPEAXXZ
?GetMarshalFlags@ActivationProperties@@UEAAJPEAK@Z
?GetMarshalSizeMax@ActivationProperties@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CClassMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CDestObjectWrapper@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CDocfileUnmarshalFactory@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CErrorObject@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CExposedDocFile@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CExposedStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CFreeMarshaler@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CObjectContext@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CPointerMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CSimpStorage@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CSimpStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CStaticWrapper@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CStdMarshal@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CStdWrapper@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@DISPATCH_CLIENT_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@DISPATCH_SERVER_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@InprocActpropsUnmarshaller@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalledInterfaceBuffer@@YAJAEBU_GUID@@PEAUIUnknown@@PEAPEAX@Z
?GetMarshalledResults@ActivationPropertiesOut@@UEAAJPEAKPEAPEAU_GUID@@PEAPEAJPEAPEAPEAUtagMInterfacePointer@@@Z
?GetMarshallerFor@MarshallingChannel@@UEAAJAEBU_GUID@@PEAXPEAPEAUIMarshalSomeone@@@Z
?GetMaxSect@CFat@@QEAAJPEAK@Z
?GetMemoryFrame@LEGACY_FRAME@@QEAAJXZ
?GetMemoryFrameFor@LEGACY_INTERCEPTOR@@QEAAJPEAPEAUICallFrame@@PEAULEGACY_FRAME@@@Z
?GetMethodInfo@Interceptor@@EEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@LEGACY_INTERCEPTOR@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMiniFat@CStreamCache@@AEAAPEAVCFat@@XZ
?GetMiniStream@CMStream@@QEBAPEAVCDirectStream@@XZ
?GetMiscStatus@CDefLink@@UEAAJKPEAK@Z
?GetMiscStatus@CDefObject@@UEAAJKPEAK@Z
?GetMiscStatus@COleObjectImpl@CDdeObject@@UEAAJKPEAK@Z
?GetModulePath@CComClassInfo@@UEAAJW4tagCLSCTX@@PEAPEAG@Z
?GetModulePath@CComNoClassInfo@@UEAAJW4tagCLSCTX@@PEAPEAG@Z
?GetModulePath@CComSxSClassInfo@@UEAAJW4tagCLSCTX@@PEAPEAG@Z
?GetMoniker@CDefLink@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@CDefObject@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@COleClientSiteImpl@CDefClient@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@COleObjectImpl@CDdeObject@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMonikerCompareBuffer@@YAJPEAUIMoniker@@PEAVCTmpMkEqBuf@@PEAU_FILETIME@@PEAPEAUtagInterfaceData@@@Z
?GetMonikerType@@YAKPEAUIMoniker@@@Z
?GetMsgFilter@CAptCallCtrl@@QEAAPEAUIMessageFilter@@XZ
?GetMsgQInputFlag@@YAKPEAUtagRPCOLEMESSAGE@@@Z
?GetMutexName@CGlobalContext@@QEAAJPEAG@Z
?GetNFFTempName@@YAJPEBGPEAG@Z
?GetName@CFileStream@@QEAAJPEAPEAG@Z
?GetNameFromSID@@YAJPEAPEAGPEAXPEAW4_TRUSTEE_TYPE@@@Z
?GetNames@CallFrame@@UEAAJPEAPEAG0@Z
?GetNames@LEGACY_FRAME@@UEAAJPEAPEAG0@Z
?GetNative@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetNativeRegistryCatalog@CComCatalog@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetNdrVersion@Interceptor@@EEAAJPEAK@Z
?GetNdrVersion@LEGACY_INTERCEPTOR@@UEAAJPEAK@Z
?GetNeededRefs@CStdMarshal@@AEAAJPEAUtagSTDOBJREF@@PEAVOXIDEntry@@PEAUtagIPIDEntry@@@Z
?GetNewDataIfNeeded@CLocalMachineNames@@AEAAJXZ
?GetNewDeltaArray@CDeltaList@@AEAAPEAVCBasedDeltaBlockPtr@@K@Z
?GetNewPage@CMSFPageTable@@AEAAPEAVCMSFPage@@XZ
?GetNewPageArray@CPagedVector@@AEAAPEAVCBasedMSFPagePtr@@K@Z
?GetNewThreadStackCommitSize@CThreadStack@@QEAA_KK@Z
?GetNewVectBits@CPagedVector@@AEAAPEAUCVectBits@@K@Z
?GetNext@?$CArray@VCCacheNode@@@@QEAAPEAVCCacheNode@@AEAK@Z
?GetNext@?$CArray@VCFormatEtc@@@@QEAAPEAVCFormatEtc@@AEAK@Z
?GetNext@?$CArray@VCStatData@@@@QEAAPEAVCStatData@@AEAK@Z
?GetNext@CCompositeMonikerEnum@@AEAAPEAUIMoniker@@PEAU2@@Z
?GetNext@CFat@@QEAAJKPEAK@Z
?GetNext@CFileStream@@QEBAPEAU1@XZ
?GetNextAssoc@CMapKeyToValue@@QEBAXPEAPEAXKPEAXPEAI1@Z
?GetNextEntry@CEndpointsTable@@QEAAPEAVCEndpointEntry@@AEA_K@Z
?GetNextEntry@CInternalPageAllocator@@QEAAJJ@Z
?GetNextProperty@CObjectContext@@QEAAPEAUtagContextProperty@@PEAPEAX@Z
?GetNonNativeRegistryCatalog@CComCatalog@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetNtHandleSectorSize@@YAJPEAXPEAK@Z
?GetNtfsUnmangledNameInfo@@YAXQEAU_FILE_STREAM_INFORMATION@@PEAPEBGPEAK@Z
?GetOLEResourceDll@@YAPEAUHINSTANCE__@@XZ
?GetOXIDFromObjRef@@YAPEAVOXIDEntry@@AEAUtagOBJREF@@@Z
?GetObjServer@@YAPEAVCObjServer@@XZ
?GetObjectDescriptorFromOle1@CClipDataObject@@AEAAJIPEAUtagSTGMEDIUM@@@Z
?GetObjectFromRotByPath@@YAJPEAGPEAPEAUIUnknown@@@Z
?GetObjectHelperMulti@@YAJPEAUIClassFactory@@KPEAUIUnknown@@PEAGPEAUIStorage@@KPEAU_GUID@@PEAPEAUtagMInterfacePointer@@PEAJPEAUtagMULTI_QI@@PEAVCDestObject@@@Z
?GetObjectInterface@ActivationPropertiesOut@@UEAAJAEBU_GUID@@KPEAPEAX@Z
?GetObjectInterfaces@ActivationPropertiesOut@@UEAAJKKPEAUtagMULTI_QI@@@Z
?GetObjectLink@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetObjectParam@CBindCtx@@UEAAJPEAGPEAPEAUIUnknown@@@Z
?GetObjectStorage@COleItemContainerImpl@CDdeObject@@UEAAJPEAGPEAUIBindCtx@@AEBU_GUID@@PEAPEAX@Z
?GetObjectW@COleItemContainerImpl@CDdeObject@@UEAAJPEAGKPEAUIBindCtx@@AEBU_GUID@@PEAPEAX@Z
?GetObjectW@CRunningObjectTable@@UEAAJPEAUIMoniker@@PEAPEAUIUnknown@@@Z
?GetOle2FromOle1@CClipDataObject@@AEAAJIPEAUtagSTGMEDIUM@@@Z
?GetOleDelegate@CDefLink@@QEAAPEAUIOleObject@@XZ
?GetOleDelegate@CDefObject@@QEAAPEAUIOleObject@@XZ
?GetOleItemContainerDelegate@CDefLink@@AEAAPEAUIOleItemContainer@@XZ
?GetOpaqueData@CComActivator@@UEAAJAEBU_GUID@@PEAPEAUtagOpaqueData@@@Z
?GetOpaqueData@OpaqueDataInfo@@UEAAJAEBU_GUID@@PEAPEAUtagOpaqueData@@@Z
?GetOpaqueDataCount@CComActivator@@UEAAJPEAK@Z
?GetOpaqueDataCount@OpaqueDataInfo@@UEAAJPEAK@Z
?GetOpen@@YAJPEAUILockBytes@@KHPEAK@Z
?GetOpenWithMask@@YAJPEAUILockBytes@@KHKPEAK@Z
?GetOrCreate@CFastBH@@QEAAJPEAXPEAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PEAU_GUID@@PEAPEAX@Z
?GetOrCreate@CFastBH@@QEAAJPEBGPEAU_RPC_BINDING_HANDLE_SECURITY_V1_W@@PEAU_GUID@@PEAPEAX@Z
?GetOrCreateBuffer@GenericStream@@UEAAJKPEAKPEAPEAE@Z
?GetOrCreateIFaceEntry@CStdWrapper@@QEAAJAEBU_GUID@@PEAUIUnknown@@PEAVCObjectContext@@PEAVCPolicySet@@PEAPEAX@Z
?GetOrCreateObjServer@@YAJPEAPEAVCObjServer@@@Z
?GetOrCreateSTAWindow@@YAPEAUHWND__@@XZ
?GetOrCreateStdID@CIDObject@@QEAAJHKPEAPEAVCStdIdentity@@@Z
?GetOrCreateWrapper@CIDObject@@QEAAJHKPEAPEAVCStdWrapper@@@Z
?GetOrLoadClass@CClassCache@@SAJAEBUACTIVATION_PROPERTIES@@@Z
?GetOrLoadClassByContext_rl@CClassCache@@SAJKAEBUACTIVATION_PROPERTIES@@PEAUIComClassInfo@@PEAVCClassEntry@1@KAEAPEAVIMiniMoniker@1@@Z
?GetOrigClsctx@CComActivator@@UEAAJPEAK@Z
?GetOrigClsctx@SpecialProperties@@UEAAJPEAK@Z
?GetOwnerLink@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetOwnerTableHint@XSLOCK@@AEAAKV?$OPAQUE_HANDLE@$00@@@Z
?GetOxidsToRemove@COXIDTable@@QEAAXPEAU__MIDL_ILocalObjectExporter_0002@@PEAK@Z
?GetPSClsid@CRIFTable@@QEAAJAEBU_GUID@@PEAU2@PEAPEAUtagRIFEntry@@@Z
?GetPSClsidHelper@CRIFTable@@AEAAJAEBU_GUID@@PEAU2@PEAPEAUtagRIFEntry@@@Z
?GetPSDelegate@CDefObject@@QEAAPEAUIPersistStorage@@XZ
?GetPSFactory@CStdMarshal@@AEAAJAEBU_GUID@@PEAUIUnknown@@PEAPEAUtagRIFEntry@@PEAPEAUIPSFactoryBuffer@@PEAH@Z
?GetPSFactory@CStdWrapper@@AEAAJAEBU_GUID@@PEAPEAUIPSFactoryBuffer@@@Z
?GetPage@CMSFPageTable@@QEAAJPEAVCPagedVector@@KKKPEAPEAVCMSFPage@@@Z
?GetPageSize@CThreadStack@@AEAAHXZ
?GetParam@CallFrame@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@DISPATCH_FRAME@@UEAAJKPEAUtagVARIANT@@@Z
?GetParamInfo@CallFrame@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@DISPATCH_FRAME@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParent@CConnectionPoint@@UEAAJPEAPEAUIDocfileAsyncConnectionPoint@@@Z
?GetPartitionIDForClassInfo@@YAPEBU_GUID@@PEAUIComClassInfo@@@Z
?GetPartitionId@CComActivator@@UEAAJPEAU_GUID@@@Z
?GetPartitionId@SpecialProperties@@UEAAJPEAU_GUID@@@Z
?GetPathFromDarwinDescriptor@CComClassInfo@@AEAAJHPEAGPEAPEAG@Z
?GetPendingCallList@@YAPEAUSPendingCall@@XZ
?GetPendingDisconnectType@CStdMarshal@@AEAAKXZ
?GetPersistInfo@ActivationPropertiesIn@@QEAAJPEAPEAVInstanceInfo@@@Z
?GetPersistentInstance@CObjServer@@UEAAJPEAU_GUID@@KPEAGPEAUtagMInterfacePointer@@K02PEAPEAU3@PEAJPEAVCDestObject@@@Z
?GetPersistentInstance@CRpcResolver@@QEAAJPEAUIActivationPropertiesIn@@PEAPEAUIActivationPropertiesOut@@PEAH@Z
?GetPoolEntry@CRWLock@@AEAAREAVEventPoolEntry@@XZ
?GetPreRegMOID@@YAJPEAU_GUID@@@Z
?GetPreRegMOID@CComApartment@@QEAAJPEAU_GUID@@@Z
?GetPreferredServerBitness@CComClassInfo@@UEAAJPEAK@Z
?GetPreferredServerBitness@CComProcessInfo@@UEAAJPEAK@Z
?GetPriority@CBindStatusCallback@@UEAAJPEAJ@Z
?GetPriority@DefaultIBindStatusCallback@@UEAAJPEAJ@Z
?GetPrivateClipboardWindow@@YAPEAUHWND__@@W4tagCLIPWINDOWFLAGS@@@Z
?GetProc@OLEAUTOMATION_FUNCTIONS@@AEAAJJPEBDPEAPEAX@Z
?GetProcess@CComClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetProcess@CComNoClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetProcess@CComSxSClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetProcess@ServerLocationInfo@@UEAAJPEAK0@Z
?GetProcessId@CComProcessInfo@@UEAAJPEAPEAU_GUID@@@Z
?GetProcessInfo@CComCatalog@@UEAAJAEBU_GUID@@0PEAPEAX@Z
?GetProcessInfo@CComCatalog@@UEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetProcessInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetProcessInfo@CComRegCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetProcessInfo@CComSxSCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetProcessInfoInternal@CComCatalog@@AEAAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetProcessInfoInternal@CComCatalog@@SAJKPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetProcessName@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetProcessRequestType@CComActivator@@UEAAJPEAK@Z
?GetProcessRequestType@SpecialProperties@@UEAAJPEAK@Z
?GetProcessSecret@CProcessSecret@@QEAAJPEAU_GUID@@@Z
?GetProcessType@CComProcessInfo@@UEAAJPEAW4tagProcessType@@@Z
?GetProgId@CComClassInfo@@UEAAJPEAPEAG@Z
?GetProgId@CComNoClassInfo@@UEAAJPEAPEAG@Z
?GetProgId@CComSxSClassInfo@@UEAAJPEAPEAG@Z
?GetPropPtr@CEndPointAtom@@QEAAPEBGXZ
?GetPropertiesSizeMax@CObjectContext@@QEAAJAEBU_GUID@@PEAXK1KKHAEAK@Z
?GetProperty@CObjectContext@@UEAAJAEBU_GUID@@PEAKPEAPEAUIUnknown@@@Z
?GetPropertyInfo@ActivationProperties@@QEAAJAEBU_GUID@@PEAPEAX@Z
?GetProtocolVersion@CChannelObject@@UEAAJPEAK@Z
?GetProtocolVersion@CCtxChnl@@UEAAJPEAK@Z
?GetProtocolVersion@CDdeServerCallMgr@@UEAAJPEAK@Z
?GetProtocolVersion@CDdeServerCallMgr@@W7EAAJPEAK@Z
?GetProtocolVersion@CRpcChannelBuffer@@UEAAJPEAK@Z
?GetProtocolVersion@CRpcChannelBuffer@@W7EAAJPEAK@Z
?GetProtocolVersion@DDE_CHANNEL@@UEAAJPEAK@Z
?GetProtocolVersion@DDE_CHANNEL@@W7EAAJPEAK@Z
?GetProtocolVersion@MarshallingChannel@@UEAAJPEAK@Z
?GetPrototypeContext@ContextInfo@@UEAAJPEAPEAUIContext@@@Z
?GetProxyStubClsid@@YAJPEBU_GUID@@PEAPEBUtagProxyFileInfo@@PEAU1@@Z
?GetRODelegate@CDefLink@@QEAAPEAUIRunnableObject@@XZ
?GetROTFlags@CComProcessInfo@@UEAAJPEAK@Z
?GetRPCIfFlagForSystemIID@@YAKPEBU_GUID@@@Z
?GetRealDataObjPtr@CClipDataObject@@AEAAPEAUIDataObject@@XZ
?GetRealDataObjPtr@CDragDataObject@@AEAAPEAUIDataObject@@XZ
?GetRefCount@PTSetMember@@QEAAJXZ
?GetRegCatalogObject@@YAJAEBU_GUID@@PEAPEAXK@Z
?GetRegisteredSink@Interceptor@@EEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@LEGACY_INTERCEPTOR@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegistryAuthnLevel@@YAXPEAUHKEY__@@PEAK@Z
?GetRegistrySecDesc@@YAJPEAUHKEY__@@PEAGPEAPEAU_SECURITY_DESCRIPTOR@@PEAKPEAH@Z
?GetRegistrySecurityDescriptor@@YAJPEAUHKEY__@@PEBGPEAPEAU_SECURITY_DESCRIPTOR@@PEAK@Z
?GetRegistryStringValue@@YAJPEAUHKEY__@@PEBG1KPEAPEAG@Z
?GetRemUnk@CComApartment@@QEAAJPEAPEAUIRemUnknownN@@@Z
?GetRemUnk@CStdMarshal@@QEAAJPEAPEAUIRemUnknown@@PEAVOXIDEntry@@@Z
?GetRemUnk@OXIDEntry@@QEAAJPEAPEAUIRemUnknown@@@Z
?GetRemoteFrame@LEGACY_FRAME@@QEAAJXZ
?GetRemoteFrameFor@LEGACY_INTERCEPTOR@@QEAAJPEAPEAUICallFrame@@PEAULEGACY_FRAME@@@Z
?GetRemoteReplyInfo@ScmReplyInfo@@UEAAJPEAPEAU_REMOTE_REPLY_SCM_INFO@@@Z
?GetRemoteRequestInfo@ScmRequestInfo@@UEAAJPEAPEAU_REMOTE_REQUEST_SCM_INFO@@@Z
?GetRemoteServerName@CComClassInfo@@UEAAJPEAPEAG@Z
?GetRemoteServerName@CComNoClassInfo@@UEAAJPEAPEAG@Z
?GetRemoteServerName@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetRemoteServerName@CComSxSClassInfo@@UEAAJPEAPEAG@Z
?GetRemoteServerName@ServerLocationInfo@@UEAAJPEAPEAG@Z
?GetRequestedIIDs@ActivationPropertiesIn@@UEAAJPEAKPEAPEAU_GUID@@@Z
?GetRequestedInterface@CGIPTable@@AEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?GetReserved@CFreeList@@QEAAPEAXXZ
?GetReservedDocfile@CDocFile@@QEAAPEAV1@K@Z
?GetReservedStream@CWrappedDocFile@@QEAAPEAVCTransactedStream@@PEBVCDfName@@KK@Z
?GetResolverInfo@ScmReplyInfo@@UEAAJPEAPEAU_PRIV_RESOLVER_INFO@@@Z
?GetRetQueueInfo@CComCatalog@@UEAAJPEAGAEBU_GUID@@PEAPEAX@Z
?GetRetQueueInfo@CComCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAX@Z
?GetRetQueueInfo@CComCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetRetQueueInfo@CComRegCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetRetQueueInfo@CComSxSCatalog@@UEAAJPEAUIUserToken@@PEAGAEBU_GUID@@PEAPEAXPEAX@Z
?GetReturnActivationProperties@ActivationPropertiesIn@@UEAAJPEAPEAVActivationPropertiesOut@@@Z
?GetReturnActivationProperties@ActivationPropertiesIn@@UEAAJPEAUIUnknown@@PEAPEAUIActivationPropertiesOut@@@Z
?GetReturnValue@CallFrame@@UEAAJXZ
?GetReturnValue@LEGACY_FRAME@@UEAAJXZ
?GetRotItem@CRunningObjectTable@@AEAAPEAVCROTItem@@H@Z
?GetRpcOleMessage@CRpcCall@@UEAAJPEAPEAUtagRPCOLEMESSAGE@@@Z
?GetRunAsType@CComProcessInfo@@UEAAJPEAW4tagRunAsType@@@Z
?GetRunAsUser@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetRunningClass@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetRunningClass@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetRunningObjectTable@CBindCtx@@UEAAJPEAPEAUIRunningObjectTable@@@Z
?GetSIDFromName@@YAJPEAPEAXPEAGPEAW4_TRUSTEE_TYPE@@@Z
?GetSaferTrustLevel@CComProcessInfo@@UEAAJPEAK@Z
?GetScmInfo@ScmRequestInfo@@UEAAJPEAPEAU_PRIV_SCM_INFO@@@Z
?GetSecBinding@CRemoteUnknown@@AEAAJPEAPEAUtagSECURITYBINDING@@@Z
?GetSect@CDIFat@@QEAAJKPEAK@Z
?GetSect@CFat@@QEAAJKKPEAK@Z
?GetSect@CMStream@@QEAAJKKPEAK@Z
?GetSect@CStreamCache@@QEAAJKPEAK@Z
?GetSectorSize@CFileStream@@UEAAKXZ
?GetSecureRemUnk@CStdMarshal@@QEAAJPEAPEAUIRemUnknown@@PEAVOXIDEntry@@@Z
?GetSecurityInfo@ActivationPropertiesIn@@QEAAJPEAPEAVSecurityInfo@@@Z
?GetSecurityInterface@CChannelObject@@QEAAPEAUIClientSecurity@@XZ
?GetSelfSID@CRpcResolver@@QEAAJPEAPEAX@Z
?GetServer@CStdIdentity@@QEAAPEAUIUnknown@@XZ
?GetServerCtx@CStdMarshal@@QEAAPEAVCObjectContext@@XZ
?GetServerExecutable@CComClassInfo@@UEAAJPEAPEAG@Z
?GetServerGroupInfo@CComCatalog@@UEAAJAEBU_GUID@@0PEAPEAX@Z
?GetServerGroupInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetServerGroupInfo@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetServerGroupInfo@CComRegCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetServerGroupInfo@CComSxSCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetServerHR@CRpcCall@@UEAAJPEAJ@Z
?GetServerLocationInfo@ActivationPropertiesIn@@QEAAJPEAPEAVServerLocationInfo@@@Z
?GetServerObjectContext@CProxyManagerImpl@CDdeObject@@UEAAPEAUIObjContext@@XZ
?GetServerObjectContext@CStdIdentity@@UEAAPEAUIObjContext@@XZ
?GetServerOidsToUnpin@COIDTable@@QEAAXPEA_KPEAK@Z
?GetServerPid@SpecialProperties@@UEAAJPEAK@Z
?GetServerPrincipalName@SecurityInfo@@UEAAJPEAPEAG@Z
?GetServiceName@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetServiceParameters@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetSessionId2@CComActivator@@UEAAJPEAKPEAH1@Z
?GetSessionId2@SpecialProperties@@UEAAJPEAKPEAH1@Z
?GetSessionId@CComActivator@@UEAAJPEAKPEAH@Z
?GetSessionId@SpecialProperties@@UEAAJPEAKPEAH@Z
?GetSharedRefs@CRefCache@@QEAAJPEAUtagIPIDEntry@@K@Z
?GetShellLink@CFileMoniker@@AEAAJXZ
?GetShutdownIdleTime@CComProcessInfo@@UEAAJPEAK@Z
?GetSingleThreadHost@CDllHost@@AEAAJXZ
?GetSingleThreadedHost@@YAJ_J@Z
?GetSize@ActivationProperties@@QEAAJAEAVSerializer@@PEAK@Z
?GetSize@CDirEntry@@QEBA_KH@Z
?GetSize@CDirectory@@QEAAJKPEA_K@Z
?GetSize@CErrorSmAllocator@@UEAA_KPEAX@Z
?GetSize@CExposedStream@@UEAAKPEAJ@Z
?GetSize@CFileStream@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSize@CMStream@@QEAAJKPEA_K@Z
?GetSize@CNFFMappedStream@@UEAAKPEAJ@Z
?GetSize@CPolicySet@@QEAAJPEAVCRpcCall@@W4tagCallType@@PEAVCCtxCall@@@Z
?GetSize@CPubMappedStream@@QEAAKPEAJ@Z
?GetSize@CPubStream@@QEAAJPEA_K@Z
?GetSize@CSSMappedStream@@UEAAKPEAJ@Z
?GetSize@CSmAllocator@@UEAA_KPEAX@Z
?GetSize@CStmHandle@@QEAAJPEA_K@Z
?GetSize@CStreamCache@@AEAA_KXZ
?GetSize@ContextInfo@@UEAAJPEAXPEAK@Z
?GetSize@InstanceInfo@@UEAAJPEAXPEAK@Z
?GetSize@InstantiationInfo@@UEAAJPEAXPEAK@Z
?GetSize@OpaqueDataInfo@@UEAAJPEAXPEAK@Z
?GetSize@OutSerializer@ActivationPropertiesOut@@UEAAJPEAXPEAK@Z
?GetSize@PSStream@@QEAAXPEA_K@Z
?GetSize@ScmReplyInfo@@UEAAJPEAXPEAK@Z
?GetSize@ScmRequestInfo@@UEAAJPEAXPEAK@Z
?GetSize@SecurityInfo@@UEAAJPEAXPEAK@Z
?GetSize@ServerLocationInfo@@UEAAJPEAXPEAK@Z
?GetSize@SpecialProperties@@UEAAJPEAXPEAK@Z
?GetSizeMax@CAntiMoniker@@EEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CBaseMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CClassMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CCompositeMoniker@@EEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CFileMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CImpAccessControl@COAccessControl@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CItemMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CLUAMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CObjrefMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CPackagerMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CSessionMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizingHandle@Serializer@@QEAAJPEAX@Z
?GetSlowTimeFactor@@YAKXZ
?GetSource@CErrorObject@@UEAAJPEAPEAG@Z
?GetSourceDisplayName@CDefLink@@UEAAJPEAPEAG@Z
?GetSourceMoniker@CDefLink@@UEAAJPEAPEAUIMoniker@@@Z
?GetSpecialProperties@ActivationPropertiesIn@@QEAAJPEAPEAVSpecialProperties@@@Z
?GetStack@CStackWalkerStack@@UEAAH_KPEAGJ@Z
?GetStackLocation@CallFrame@@UEAAPEAXXZ
?GetStackLocation@LEGACY_FRAME@@UEAAPEAXXZ
?GetStackSize@DISPATCH_INTERCEPTOR@@UEAAJKPEAK@Z
?GetStackSize@Interceptor@@EEAAJKPEAK@Z
?GetStackSize@LEGACY_INTERCEPTOR@@UEAAJKPEAK@Z
?GetStage@ActivationPropertiesIn@@UEAAJPEAW4tagACTIVATION_STAGE@@@Z
?GetStandardMarshallerFor@MarshallingChannel@@UEAAJAEBU_GUID@@PEAXPEAUIUnknown@@0PEAPEAX@Z
?GetStart@CDirectory@@QEAAJKPEAK@Z
?GetStart@CMStream@@QEBAKK@Z
?GetStart@CStreamCache@@AEAAJPEAK@Z
?GetState@CAsyncCall@@UEAAJPEAK@Z
?GetState@CClientCall@@UEAAJPEAK@Z
?GetState@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetState@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetState@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetStateBits@CStgHandle@@QEAAJPEAK@Z
?GetStateBits@PDocFile@@QEAAJPEAK@Z
?GetStaticContextUnmarshal@@YAJPEAPEAUIMarshal@@@Z
?GetStaticInfo@CStdWrapper@@EEAAJPEAUICallInterceptor@@@Z
?GetStaticUnMarshaler@@YAJPEAPEAUIMarshal@@@Z
?GetStaticWrapper@@YAJPEAPEAUIMarshal@@@Z
?GetStdId@@YAJPEAUIUnknown@@PEAPEAU1@@Z
?GetStdIdFromIPID@@YAPEAVCStdIdentity@@AEBU_GUID@@@Z
?GetStdItemIndex@@YAHG@Z
?GetStdMarshalSize@@YAJAEBU_GUID@@0KPEAXKPEAK@Z
?GetStm@CCacheNode@@QEAAPEAUIStream@@HK@Z
?GetStorage@InstanceInfo@@UEAAJPEAPEAUIStorage@@@Z
?GetStorageIFD@InstanceInfo@@UEAAJPEAPEAUtagMInterfacePointer@@@Z
?GetStream@CDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPSStream@@@Z
?GetStream@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAVCPubStream@@@Z
?GetStream@CWrappedDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPSStream@@@Z
?GetStream@PDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPSStream@@@Z
?GetStreamHandle@CNtfsStorage@@QEAAJPEAPEAXPEBGKH@Z
?GetStreamPos@CObjectContext@@QEAAJAEAPEAUIStream@@AEBQEAT_ULARGE_INTEGER@@@Z
?GetStringBindings@@YAJPEAPEAUtagDUALSTRINGARRAY@@@Z
?GetSurrogateCommandLine@CComClassInfo@@UEAAJPEAPEAG@Z
?GetSurrogateCommandLine@CComNoClassInfo@@UEAAJPEAPEAG@Z
?GetSurrogateCommandLine@CComSxSClassInfo@@UEAAJPEAPEAG@Z
?GetSurrogatePath@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetSurrogateServerExecutable@CComProcessInfo@@UEAAJPEAPEAG@Z
?GetSxSCatalogObject@@YAJAEBU_GUID@@PEAPEAX@Z
?GetSyncIIDFromAsyncIID@@YAJAEBU_GUID@@PEAU1@@Z
?GetSystemSecurityDescriptors@CRpcResolver@@QEAAJW4tagCOMSD@@PEAPEAX@Z
?GetTable@CDirVector@@QEAAJKKPEAPEAVCDirSect@@@Z
?GetTable@CFatVector@@QEAAJKKPEAPEAVCFatSect@@@Z
?GetTable@CPagedVector@@QEAAJKKPEAPEAX@Z
?GetTableWithSect@CPagedVector@@QEAAJKKKPEAPEAX@Z
?GetTerminationStatus@CFileStream@@UEAAJPEAK@Z
?GetTerminationStatus@CFillLockBytes@@UEAAJPEAK@Z
?GetTextualSid@@YAHPEAXPEAGPEAK@Z
?GetThreadAllocatorState@CPerContext@@QEAAJXZ
?GetThreadID@CRpcResolver@@QEAAXPEAK@Z
?GetThreadWinstaDesktop@CRpcResolver@@QEAAKXZ
?GetThreadingModel@CComClassInfo@@UEAAJPEAW4tagThreadingModel@@@Z
?GetThreadingModel@CComNoClassInfo@@UEAAJPEAW4tagThreadingModel@@@Z
?GetThreadingModel@CComSxSClassInfo@@UEAAJPEAW4tagThreadingModel@@@Z
?GetTime@CDirectory@@QEAAJKW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTime@CMStream@@QEAAJKW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTime@CStgHandle@@QEAAJW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTime@PTimeEntry@@QEAAJW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CObjrefMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CRunningObjectTable@@UEAAJPEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeout@CMessageCall@@QEAAKXZ
?GetTlsSmAllocator@@YAAEAVCSmAllocator@@XZ
?GetToSTA@@YAJPEAVOXIDEntry@@PEAVCMessageCall@@@Z
?GetTokenElevationType@@YAJPEAXPEAW4_TOKEN_ELEVATION_TYPE@@@Z
?GetTokenForRpcClient@@YAPEAXPEAXH@Z
?GetTransactedDepth@CPubStream@@QEBAGXZ
?GetTypeInfo@CComClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetTypeInfo@CComNoClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetTypeInfo@CComSxSClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?GetTypeInfo@LEGACY_INTERCEPTOR@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfoCount@LEGACY_INTERCEPTOR@@UEAAJPEAI@Z
?GetTypeInfoFromIID@@YAJAEBU_GUID@@PEAPEAUITypeInfo@@@Z
?GetTypeLibrary@CComCatalog@@UEAAJAEBU_GUID@@0PEAPEAX@Z
?GetTypeLibrary@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAX@Z
?GetTypeLibrary@CComCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetTypeLibrary@CComRegCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetTypeLibrary@CComSxSCatalog@@UEAAJPEAUIUserToken@@AEBU_GUID@@1PEAPEAXPEAX@Z
?GetUNICODEProgID@@YAJPEAVCompObjStmData@@PEAPEAG@Z
?GetUNICODEUserType@@YAJPEAVCompObjStmData@@PEAPEAG@Z
?GetUnmarshalClass@ActivationProperties@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CClassMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CDocfileUnmarshalFactory@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CErrorObject@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CExposedDocFile@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CExposedStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CFreeMarshaler@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CObjectContext@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CPointerMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CSimpStorage@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CSimpStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CStaticWrapper@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CStdMarshal@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CStdWrapper@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@InprocActpropsUnmarshaller@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshaller@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAUIMarshalSomeone@@@Z
?GetUnquotedPath@@YAJPEAUIClassClassicInfo@@W4tagCLSCTX@@PEAPEAGPEAG_K@Z
?GetUnserialized@ActivationProperties@@UEAAJAEBU_GUID@@PEAPEAXPEAK2@Z
?GetUpdateOptions@CDefLink@@UEAAJPEAK@Z
?GetUserClassID@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetUserClassID@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetUserClassID@COleObjectImpl@CDdeObject@@UEAAJPEAU_GUID@@@Z
?GetUserFlags@CDirectory@@QEAAJKPEAK@Z
?GetUserSettings@CComClassInfo@@UEAAJPEAH@Z
?GetUserSettings@CComProcessInfo@@UEAAJPEAH@Z
?GetUserSid@@YAPEAXPEAX@Z
?GetUserType@CDefLink@@UEAAJKPEAPEAG@Z
?GetUserType@CDefObject@@UEAAJKPEAPEAG@Z
?GetUserType@COleObjectImpl@CDdeObject@@UEAAJKPEAPEAG@Z
?GetValue@CPropertySetStream@@QEAAPEBUtagSERIALIZEDPROPERTYVALUE@@KPEAKPEAJ@Z
?GetVariantAllocSize@DeserializeHelper@@CAKG@Z
?GetVersionNumber@CComClassInfo@@UEAAJPEAK0@Z
?GetVersionNumber@CComNoClassInfo@@UEAAJPEAK0@Z
?GetVersionNumber@CComSxSClassInfo@@UEAAJPEAK0@Z
?GetVtbl@@YAJPEAUITypeInfo@@AEBU_GUID@@PEAPEAUTYPEINFOVTBL@@PEAPEAU1@@Z
?GetWalker@CallFrame@@QEBA?AUOAUTIL@@XZ
?GetWindow@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAUHWND__@@@Z
?GetWindowPropInterface@CRpcResolver@@QEAAJPEAUHWND__@@_KHPEAUtagSTDOBJREF@@PEAUtagOXID_INFO@@@Z
?GetWrapperForContext@CStdIdentity@@UEAAJPEAVCObjectContext@@AEBU_GUID@@PEAPEAX@Z
?GipBypassEnabled@@YAHXZ
?GiveUpRefs@CRefCache@@QEAAXPEAUtagIPIDEntry@@@Z
?GrantAccessRights@CImpAccessControl@COAccessControl@@UEAAJPEAU_ACTRL_ALISTW@@@Z
?GrfModeIsReadable@@YAHK@Z
?GrfModeIsWriteable@@YAHK@Z
?Grow@CContextPropList@@AEAAHXZ
?Grow@CInternalPageAllocator@@AEAAPEAUtagPageEntry@@XZ
?GuidFromString@@YAJPEBGPEAU_GUID@@@Z
?HBITMAP_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAUHBITMAP__@@_K@Z
?HBITMAP_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAUHBITMAP__@@_K@Z
?HENHMETAFILE_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAUHENHMETAFILE__@@_K@Z
?HENHMETAFILE_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAUHENHMETAFILE__@@_K@Z
?HIconAndSourceFromClass@@YAPEAUHICON__@@AEBU_GUID@@PEAGKPEAI@Z
?HMETAFILEPICT_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAX_K@Z
?HMETAFILEPICT_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAX_K@Z
?HPALETTE_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@_K@Z
?HPALETTE_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@_K@Z
?HRGN_UserFree@@YAXPEAKPEAPEAUHRGN__@@@Z
?HRGN_UserMarshal@@YAPEAEPEAKPEAEPEAPEAUHRGN__@@@Z
?HRGN_UserSize@@YAKPEAKKPEAPEAUHRGN__@@@Z
?HRGN_UserUnmarshal@@YAPEAEPEAKPEAEPEAPEAUHRGN__@@@Z
?HandleFeedBack@CDragOperation@@QEAAHJ@Z
?HandleFromHandle@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?HandleIncomingCall@@YAJAEBU_GUID@@GKPEAX@Z
?HandleInitMsg@CDDEServer@@QEAAH_J@Z
?HandleMessages@CDragOperation@@QEAAHXZ
?HandlePendingDisconnect@CStdMarshal@@QEAAJJ@Z
?HandlePendingMessage@CCliModalLoop@@AEAAXXZ
?HandlePostReleaseRifRef@@YAJ_J@Z
?HandleRejectedCall@CCliModalLoop@@AEAAJPEAVIInternalChannelBuffer@@@Z
?HandleWakeForMsg@CCliModalLoop@@AEAAXXZ
?HandsOffStorage@CDefLink@@UEAAJXZ
?HandsOffStorage@CDefObject@@UEAAJXZ
?HandsOffStorage@COleCache@@UEAAJXZ
?HandsOffStorage@CPersistStgImpl@CDdeObject@@UEAAJXZ
?HasAnyInterfaces@HAS_INTERFACES@@QEBAHXZ
?HasBCEs@CClassEntry@CClassCache@@QEAAHXZ
?HasCodePage@DeserializeHelper@@QEAAHXZ
?HasNoScratch@CMStream@@QEBAHXZ
?HasValidLINDEX@@YAHPEBUtagFORMATETC@@@Z
?HasWOWMsgArrived@CAsyncCall@@UEAAHXZ
?HasWOWMsgArrived@CClientCall@@UEAAHXZ
?Hash@CAntiMoniker@@EEAAJPEAK@Z
?Hash@CBaseMoniker@@UEAAJPEAK@Z
?Hash@CCEHashTable@CClassCache@@QEAAKAEBU_GUID@@0@Z
?Hash@CClassMoniker@@UEAAJPEAK@Z
?Hash@CCompositeMoniker@@EEAAJPEAK@Z
?Hash@CDPEHashTable@CClassCache@@QEAAKPEBG@Z
?Hash@CEffPermsCacheLUID@@AEAAKU_LUID@@@Z
?Hash@CExtHashTable@@QEAAKPEBG@Z
?Hash@CFileMoniker@@UEAAJPEAK@Z
?Hash@CItemMoniker@@UEAAJPEAK@Z
?Hash@CLUAMoniker@@UEAAJPEAK@Z
?Hash@CMultiGUIDHashTable@@QEAAKAEBUSMultiGUIDKey@@@Z
?Hash@CNameHashTable@@QEAAKAEBU_GUID@@PEAUtagSECURITYBINDING@@@Z
?Hash@CPackagerMoniker@@UEAAJPEAK@Z
?Hash@CPointerMoniker@@UEAAJPEAK@Z
?Hash@CSessionMoniker@@UEAAJPEAK@Z
?Hash@CStringHashTable@@QEAAKPEAUtagDUALSTRINGARRAY@@@Z
?Hash@CUUIDHashTable@@QEAAKAEBU_GUID@@@Z
?HashChainToPolicySet@CPolicySet@@SAPEAV1@PEAUSHashChain@@@Z
?HashGuid@@YAKAEBU_GUID@@@Z
?HashNode@CCtxPropHashTable@@UEAAKPEAUSHashChain@@@Z
?HashNode@CCtxUUIDHashTable@@UEAAKPEAUSHashChain@@@Z
?HashNode@CDPEHashTable@CClassCache@@UEAAKPEAUSHashChain@@@Z
?HashNode@COIDHashTable@@UEAAKPEAUSHashChain@@@Z
?HashNode@CPIDHashTable@@UEAAKPEAUSHashChain@@@Z
?HashNode@CPSHashTable@@UEAAKPEAUSHashChain@@@Z
?HashPropChainToContext@CObjectContext@@SAPEAV1@PEAUSHashChain@@@Z
?HashUUIDChainToContext@CObjectContext@@SAPEAV1@PEAUSHashChain@@@Z
?HaveWriteAccess@CExposedDocFile@@UEAAJXZ
?HeapMinimize@CErrorSmAllocator@@UEAAXXZ
?HeapMinimize@CSmAllocator@@UEAAXXZ
?HeldExclusive@CRWLock@@QEAAHXZ
?HelperGetImplementedClsid@@YAJPEAUIComClassInfo@@PEAU_GUID@@1@Z
?HexStringToDword@@YAHAEAPEBGAEAKHG@Z
?HkFindAndLoadDll@@YAXXZ
?HkLoadInProcServer@@YAPEAUHINSTANCE__@@AEBU_GUID@@@Z
?HrAStrToBStr@@YAJPEBDPEAPEAG@Z
?HrAStrToWStr@@YAJPEBDPEAPEAG@Z
?HrBStrToWStr@@YAJQEAGPEAPEAG@Z
?HrCLSIDToStr@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTBOOL@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTBSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTCF@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTCLSID@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTCY@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTDATE@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTDECIMAL@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTDISPATCH@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTEMPTY@@YAJPEAUtagPROPVARIANT@@G@Z
?HrConvFromVTFILETIME@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTI8@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTLPSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTLPWSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTUI8@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTVERSIONEDSTREAM@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvertByRef@@YAJPEAUtagPROPVARIANT@@PEBU1@@Z
?HrConvertPVTypes@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrGetLIFromDouble@@YAJNPEA_J@Z
?HrGetULIFromDouble@@YAJNPEA_K@Z
?HrGetValFromBLOB@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrGetValFromBSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrGetValFromDOUBLE@@YAJPEAUtagPROPVARIANT@@PEBU1@KGGN@Z
?HrGetValFromDWORD@@YAJPEAUtagPROPVARIANT@@PEBU1@KGGKH@Z
?HrGetValFromUNK@@YAJPEAUtagPROPVARIANT@@PEAUIUnknown@@G@Z
?HrPropVarVECTORToSAFEARRAY@@YAJPEAUtagPROPVARIANT@@PEBU1@KG@Z
?HrStrToCLSID@@YAJPEAUtagPROPVARIANT@@PEBU1@@Z
?HrStrToULI@@YAJPEBUtagPROPVARIANT@@KGHPEA_K@Z
?HrULIToStr@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrWStrToAStr@@YAJPEBGPEAPEAD@Z
?HrWStrToBStr@@YAJPEBGPEAPEAG@Z
?IBegin_QueryMultipleInterfaces@CAsyncUnknownMgr@@EEAAJKPEAUtagMULTI_QI@@@Z
?ICoCreateInstanceEx@@YAJAEBU_GUID@@PEAUIUnknown@@KPEAU_COSERVERINFO@@KKPEAUtagMULTI_QI@@PEAVActivationPropertiesIn@@@Z
?ICoGetClassObject@@YAJAEBU_GUID@@KPEAU_COSERVERINFO@@0KPEAPEAXPEAVActivationPropertiesIn@@@Z
?IFinish_QueryMultipleInterfaces@CAsyncUnknownMgr@@EEAAJPEAUtagMULTI_QI@@@Z
?IGetObject@CRunningObjectTable@@QEAAJPEAU_MnkEqBuf@@PEAPEAUIUnknown@@K@Z
?IGetObjectByPath@CRunningObjectTable@@QEAAJPEAGPEAPEAUIUnknown@@K@Z
?ILBFlush@@YAJPEAUILockBytes@@H@Z
?ILBGetSize@@YAJPEAUILockBytes@@PEAT_ULARGE_INTEGER@@@Z
?INIT_DISABLED_FEATURES@DISABLED_FEATURES@@QEAAXXZ
?IStreamToBase64@@YAJPEAUIStream@@PEAG_K@Z
?IUpdateResolverBindings@@YAJ_KPEAUtagDUALSTRINGARRAY@@PEAPEAU1@2@Z
?IconLabelTextOut@@YAXPEAUHDC__@@PEAUHFONT__@@HHIPEAUtagRECT@@PEBDI@Z
?ImpersonateClient@CServerCallMgr@CRpcChannelBuffer@@UEAAJXZ
?ImpersonateClient@CServerSecurity@@UEAAJXZ
?ImplicitPropVariantToVariantChangeType@@YAJPEAUtagPROPVARIANT@@PEBU1@K@Z
?InPropTable@CObjectContext@@QEAAXH@Z
?IncOIDRefCnt@CROIDTable@@QEAAXPEAUSOIDRegistration@@@Z
?IncRef@CNameHashTable@@QEAAJKAEBU_GUID@@PEAUtagSECURITYBINDING@@@Z
?IncSrvIPIDCnt@CStdMarshal@@QEAAJPEAUtagIPIDEntry@@KKPEAUtagSECURITYBINDING@@K@Z
?IncStrongAndNotifyAct@CStdMarshal@@AEAAXPEAUtagIPIDEntry@@K@Z
?IncStrongCnt@CStdIdentity@@QEAAXXZ
?IncTableStrongCnt@CRefCache@@QEAAKXZ
?IncWeakCnt@CStdIdentity@@QEAAXXZ
?IncludesKey@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEBAHAEBVMAP_KEY_GUID@@@Z
?IncludesKey@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEBAHAEBVMAP_KEY_GUID@@@Z
?IncludesKey@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEBAHAEBVMAP_KEY_GUID@@@Z
?IncrementCallCount@CIDObject@@QEAAJXZ
?IncrementCount@CCtxConnectionManager@@QEAAXXZ
?IncrementLuid@CSmAllocator@@QEAAKXZ
?IncrementNestCount@CRefExportCount@@QEAAXXZ
?IncrementNestCount@CSafeRefCount@@QEAAXXZ
?IncrementObjectReferences@CCtxConnectionManager@@SAXXZ
?Init@CAsyncConnection@@QEAAJPEAUIConnectionPointContainer@@PEAV1@@Z
?Init@CClassCache@@SAHXZ
?Init@CConnectionPoint@@QEAAJXZ
?Init@CDIFat@@QEAAJPEAVCMStream@@K@Z
?Init@CDeltaList@@QEAAJ_KPEAVCTransactedStream@@@Z
?Init@CDfMutex@@QEAAJPEAVCGlobalContext@@H@Z
?Init@CDirEntry@@QEAAXK@Z
?Init@CDirSect@@QEAAJG@Z
?Init@CDirectStream@@QEAAJPEAVCStgHandle@@PEBVCDfName@@H@Z
?Init@CDirectory@@QEAAJPEAVCMStream@@K@Z
?Init@CDragDefaultCursors@@QEAAHXZ
?Init@CEnumSTATPROPBAG@@QEAAJPEAUIPropertyStorage@@PEBGK@Z
?Init@CExposedStream@@QEAAJPEAVCPubStream@@PEAVCDFBasis@@PEAVCPerContext@@PEAVCSeekPointer@@@Z
?Init@CFat@@QEAAJPEAVCMStream@@KH@Z
?Init@CFillLockBytes@@QEAAJXZ
?Init@CGlobalSecurity@@QEAAJH@Z
?Init@CHandle@@QEAAXPEAVCMStream@@K@Z
?Init@CMSFPageTable@@QEAAJXZ
?Init@CMStream@@QEAAJXZ
?Init@CNFFMappedStream@@QEAAJPEAX@Z
?Init@CNFFTreeMutex@@QEAAJXZ
?Init@CNtfsEnumSTATSTG@@UEAAJPEAX@Z
?Init@CNtfsSTATSTGArray@@QEAAJPEAX@Z
?Init@CNtfsStream@@UEAAJPEAXKPEBGPEAV1@@Z
?Init@COAccessControl@@QEAAJPEAUIUnknown@@@Z
?Init@COleStaticMutexSem@@QEAAJXZ
?Init@CPagedVector@@QEAAJPEAVCMStream@@K@Z
?Init@CPropertySetStorage@@QEAAXPEAUIStorage@@PEAUIBlockingLock@@H@Z
?Init@CPubStream@@QEAAXPEAVPSStream@@K@Z
?Init@CRpcThread@@QEAAJXZ
?Init@CSTATPROPBAGArray@@QEAAJPEAUIPropertyStorage@@PEBGK@Z
?Init@CSharedMemoryBlock@@QEAAJPEAGKKPEAX1H@Z
?Init@CSimpStorage@@QEAAJPEBGPEAX@Z
?Init@CSimpStorageOpen@@QEAAJPEBGKPEAX@Z
?Init@CSimpStream@@QEAAJPEAUCSimpStorage@@PEAXK@Z
?Init@CSimpStreamOpen@@QEAAJPEAVCSimpStorageOpen@@PEAXKKPEAVCDfNameList@@@Z
?Init@CSmAllocator@@QEAAJPEAXKKH@Z
?Init@CStackBuffer@@QEAAJK@Z
?Init@CStackWalkerSymbol@@QEAAJPEBG0_K1@Z
?Init@CStdMarshal@@QEAAHPEAUIUnknown@@PEAVCStdIdentity@@AEBU_GUID@@K@Z
?Init@CStmBufRead@@QEAAXPEAUIStream@@@Z
?Init@CStmBufWrite@@QEAAXPEAUIStream@@@Z
?Init@CStreamCache@@QEAAXPEAVCMStream@@KPEAVCDirectStream@@@Z
?Init@CTransactedStream@@QEAAJPEAVPSStream@@@Z
?Init@CWrappedDocFile@@QEAAJPEAVPDocFile@@@Z
?Init@CallFrame@@QEAAXPEAXPEAUMD_METHOD@@PEAVInterceptor@@@Z
?Init@DLL_INSTANTIATION_PROPERTIES@@QEAAJPEBGKKAEBU_GUID@@H@Z
?Init@DefaultIBindStatusCallback@@QEAAHPEBG@Z
?Init@DeserializeHelper@@QEAAJPEAVPMemoryAllocator@@II@Z
?Init@LEGACY_INTERCEPTOR@@QEAAJXZ
?InitAsync@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAPEAUIUnknown@@PEAPEAUAsyncIPipeByte@@PEAPEAUISynchronize@@@Z
?InitAsync@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAPEAUIUnknown@@PEAPEAUAsyncIPipeLong@@PEAPEAUISynchronize@@@Z
?InitAsync@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEAPEAUIUnknown@@PEAPEAUAsyncIPipeDouble@@PEAPEAUISynchronize@@@Z
?InitCNtfsStream@CNtfsStorage@@QEAAJPEAVCNtfsStream@@PEAXKPEBG@Z
?InitCSIfNecessary@CComApartment@@AEAAJXZ
?InitCache@COleCache@@UEAAJPEAUIDataObject@@@Z
?InitCallObject@CAsyncCall@@UEAAJW4tagCALLCATEGORY@@PEAUtagRPCOLEMESSAGE@@KAEBU_GUID@@KUtagCOMVERSION@@PEAVCChannelHandle@@@Z
?InitCallObject@CClientCall@@UEAAJW4tagCALLCATEGORY@@PEAUtagRPCOLEMESSAGE@@KAEBU_GUID@@KUtagCOMVERSION@@PEAVCChannelHandle@@@Z
?InitCallObject@CMessageCall@@UEAAJW4tagCALLCATEGORY@@PEAUtagRPCOLEMESSAGE@@KAEBU_GUID@@KUtagCOMVERSION@@PEAVCChannelHandle@@@Z
?InitCallObject@CRpcChannelBuffer@@IEAAJPEAUtagRPCOLEMESSAGE@@PEAW4tagCALLCATEGORY@@KPEAPEAVCChannelHandle@@@Z
?InitChannelIfNecessary@@YAJXZ
?InitClientHwnd@CAsyncCall@@QEAAXXZ
?InitClone@CAsyncConnection@@QEAAJPEAUIConnectionPointContainer@@PEAV1@@Z
?InitClone@CAsyncConnectionContainer@@QEAAJPEAVCAsyncConnection@@@Z
?InitCommon@CMStream@@AEAAJXZ
?InitConnection@CAsyncConnectionContainer@@QEAAJPEAVCAsyncConnection@@@Z
?InitConvert@CDIFat@@QEAAJPEAVCMStream@@K@Z
?InitConvert@CFat@@QEAAJPEAVCMStream@@K@Z
?InitConvert@CMStream@@QEAAJH@Z
?InitCopy@CDIFat@@QEAAXPEAV1@@Z
?InitCopy@CDirectory@@QEAAXPEAV1@@Z
?InitCopy@CFat@@QEAAXPEAV1@@Z
?InitCopy@CMStream@@QEAAXPEAV1@@Z
?InitCopy@CPagedVector@@QEAAXPEAV1@@Z
?InitFile@CFileStream@@QEAAJPEBGPEAX@Z
?InitFromData@CDefLink@@UEAAJPEAUIDataObject@@HK@Z
?InitFromData@CDefObject@@UEAAJPEAUIDataObject@@HK@Z
?InitFromData@COleObjectImpl@CDdeObject@@UEAAJPEAUIDataObject@@HK@Z
?InitFromEntry@CDocFile@@QEAAJPEAVCStgHandle@@PEBVCDfName@@H@Z
?InitFromGlobal@CFileStream@@QEAAXPEAVCGlobalFileStream@@@Z
?InitFromGlobal@CPerContext@@QEAAJPEAVCGlobalContext@@@Z
?InitFromGlobalFileStream@CGlobalFileStream@@QEAAXPEAV1@@Z
?InitFromHandle@CFileStream@@QEAAJPEAX@Z
?InitFromMainStreamHandle@CNtfsStorage@@QEAAJPEAPEAXPEBGHKK@Z
?InitFromName@CNtfsStorage@@QEAAJPEBGPEAXHK@Z
?InitFromRegDb@CEnumFmt10@@UEAAJPEAUHKEY__@@@Z
?InitFromScratch@CEnumFmt10@@UEAAJXZ
?InitGlobal@CFileStream@@QEAAJKK@Z
?InitGlobals@@YAJXZ
?InitHashTable@CMapKeyToValue@@AEAAHXZ
?InitHookOle@@YAXXZ
?InitHooksIfNecessary@@YAXXZ
?InitInd@CRootPubDocFile@@AEAAJPEAUILockBytes@@PEAPEAGKKH@Z
?InitLPACCEL@CPaccelEnum@@QEAAHPEAUHACCEL__@@H@Z
?InitLegacy@@YAHXZ
?InitMainThreadWnd@@YAJXZ
?InitMarshalling@@YAXXZ
?InitMetaDataCache@@YAHXZ
?InitNew@CDIFat@@QEAAJPEAVCMStream@@@Z
?InitNew@CDefLink@@UEAAJPEAUIStorage@@@Z
?InitNew@CDefObject@@UEAAJPEAUIStorage@@@Z
?InitNew@CDirectory@@QEAAJPEAVCMStream@@@Z
?InitNew@CFat@@QEAAJPEAVCMStream@@@Z
?InitNew@CMStream@@QEAAJHT_ULARGE_INTEGER@@@Z
?InitNew@COleCache@@UEAAJPEAUIStorage@@@Z
?InitNew@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?InitNewContext@CPerContext@@QEAAJXZ
?InitNotInd@CRootPubDocFile@@AEAAJPEAUILockBytes@@PEAPEAGKK@Z
?InitNotificationEvent@CPerContext@@QEAAJPEAUILockBytes@@@Z
?InitObject@CAsyncStateMachine@@AEAAJPEAUIUnknown@@@Z
?InitRegs@CallFrame@@QEAAXPEAXPEA_J@Z
?InitRemoting@CComApartment@@QEAAJXZ
?InitRemoting@OXIDEntry@@QEAAJPEAVCComApartment@@@Z
?InitResize@CDeltaList@@QEAAJ_K@Z
?InitRoot@CRootPubDocFile@@QEAAJPEAUILockBytes@@KKPEAPEAGPEAPEAVCDFBasis@@PEAKPEAVCGlobalContext@@@Z
?InitScratch@CFat@@QEAAJPEAV1@H@Z
?InitScratch@CFileStream@@QEAAJXZ
?InitScratch@CMStream@@QEAAJPEAV1@H@Z
?InitScrollInt@CDragOperation@@AEAAXXZ
?InitSecDescInACLDesc@@YAJPEAUtagACL_DESCRIPTOR@@@Z
?InitSecret@CFreeMarshaler@@AEAAJXZ
?InitSnapShot@CFileStream@@QEAAJXZ
?InitStream@Serializer@@QEAAJPEAUIStream@@AEAKKAEAPEAX@Z
?InitStreamBlock@CDeltaList@@AEAAJK@Z
?InitSysConv@CDdeObject@@QEAAHXZ
?InitSystem@CDirectStream@@QEAAXPEAVCMStream@@K_K@Z
?InitTbl@CScmPatternTbl@@QEAAJXZ
?InitThreadCtx@@YAJAEAPEAVCObjectContext@@AEAPEAVCComApartment@@AEAVCOleTls@@HW4tagAPTKIND@@@Z
?InitTypeInfoCache@@YAHXZ
?InitUnMarshal@CSharedMemoryBlock@@QEAAJPEAXKK@Z
?InitUnmarshal@CFileStream@@QEAAJXZ
?InitUsingTypeInfo@Interceptor@@AEAAJAEBU_GUID@@PEAUITypeInfo@@@Z
?InitWorker@CFileStream@@AEAAJPEBGKPEAX@Z
?Init_DupFileHandle@CFileStream@@AEAAJK@Z
?Init_GetNtOpenFlags@CFileStream@@AEAAJPEAK000@Z
?Init_GetTempName@CFileStream@@AEAAJPEAG0@Z
?Init_MemoryMap@CFileStream@@AEAAJK@Z
?Init_OpenOrCreate@CFileStream@@AEAAJPEAG0KPEAX@Z
?Initialize@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAAJPEAPEAUIEnumCATEGORYINFO@@K@Z
?Initialize@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAAJPEAPEAUIEnumGUID@@K@Z
?Initialize@CApartmentHashTable@@QEAAXXZ
?Initialize@CCallTable@@QEAAXXZ
?Initialize@CComCat@@AEAAJPEAUIUnknown@@@Z
?Initialize@CComClassInfo@@AEAAJPEAUHKEY__@@PEAUIUserToken@@H0KH@Z
?Initialize@CCompositeMoniker@@QEAAHPEAUIMoniker@@0@Z
?Initialize@CContextPropList@@SAXXZ
?Initialize@CCtxChnl@@SAXXZ
?Initialize@CCtxComChnl@@SAX_K@Z
?Initialize@CCtxTable@@SAXXZ
?Initialize@CDebugEventFire@@QEAAJXZ
?Initialize@CDllHost@@AEAAJK@Z
?Initialize@CEndpointsTable@@QEAAXXZ
?Initialize@CEnumCategories@@QEAAJKPEAUIEnumCATEGORYINFO@@@Z
?Initialize@CEnumClassesOfCategories@@QEAAJKQEBU_GUID@@K0PEAUIEnumGUID@@@Z
?Initialize@CFileMoniker@@AEAAHGPEADGPEAGGG@Z
?Initialize@CFileMoniker@@AEAAHGPEBGG@Z
?Initialize@CGIPTable@@QEAAXXZ
?Initialize@CHashTable@@UEAAXPEAUSHashChain@@PEAVCOleStaticMutexSem@@@Z
?Initialize@CHashTable@@UEAAXPEAUSHashChain@@PEAVCRWLock@@@Z
?Initialize@CIDObject@@SAXXZ
?Initialize@CIPIDTable@@QEAAXXZ
?Initialize@CItemMoniker@@AEAAHPEBG0@Z
?Initialize@CItemMoniker@@AEAAXPEAGGPEADG0G1G@Z
?Initialize@CMIDTable@@QEAAXXZ
?Initialize@COIDTable@@SAXXZ
?Initialize@COXIDTable@@QEAAXXZ
?Initialize@CObjectContext@@SAXXZ
?Initialize@CPIDTable@@SAXXZ
?Initialize@CPSTable@@SAXXZ
?Initialize@CPageAllocator@@QEAAX_KGPEAVCOleStaticMutexSem@@KP6APEAX0@ZP6AXPEAX@Z@Z
?Initialize@CPolicySet@@SAXXZ
?Initialize@CRIFTable@@QEAAXXZ
?Initialize@CROIDTable@@QEAAXXZ
?Initialize@CRTL_SMART_LBLOB_WRITING_CONTEXT@Rtl@Windows@@QEAAJ_KPEAU_LBLOB@@1PEAPEAU4@@Z
?Initialize@CRandomNumberGenerator@@AEAAJXZ
?Initialize@CServerSecurity@@SAXXZ
?Initialize@CStdWrapper@@SAXXZ
?Initialize@CSurrogateProcessActivator@@QEAAJXZ
?Initialize@CtxEntry@@SAXXZ
?Initialize@EVENT@@QEAAXHH@Z
?Initialize@SEMAPHORE@@QEAAXJJ@Z
?InitializeAccessControl@@YAJXZ
?InitializeActivation@CComActivator@@AEAAJPEAVActivationPropertiesIn@@@Z
?InitializeCatalogIfNeccessary@CComCatalog@@QEAAJXZ
?InitializeCatalogIfNecessary@@YAJXZ
?InitializeEvent@CCtxConnectionManager@@QEAA_NXZ
?InitializeForInprocActivations@CComClassInfo@@AEAAJHPEAUHKEY__@@@Z
?InitializeForOutOfProcActivations@CComClassInfo@@AEAAJHPEAUIUserToken@@PEAUHKEY__@@K@Z
?InitializeHeap@CPageAllocator@@AEAAHXZ
?InitializeISurrogate@CCOMSurrogate@@SAJPEAUISurrogate@@@Z
?InitializeInvoke@DISPATCH_CLIENT_FRAME@@QEAAXXZ
?InitializeLUAAndDisplaySettings@CComClassInfo@@AEAAJPEAUHKEY__@@@Z
?InitializeLocalServer@CComClassInfo@@AEAAJHPEAUHKEY__@@@Z
?InitializeLrpcSecurity@@YAXXZ
?InitializeNTA@@YAJXZ
?InitializeOnCreateOrOpen@CPropertyStorage@@AEAAJKKAEBU_GUID@@H@Z
?InitializeProcessInfo@CComClassInfo@@AEAAJPEAUIUserToken@@@Z
?InitializePropertyStream@CPropertyStorage@@AEAAJPEBU_GUID@@0W4EInitializePropertyStream@1@@Z
?InitializeReadCache@CComCatalog@@CAJXZ
?InitializeSecurity@@YAJXZ
?InitializeServices@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?InitializeSurrogateInfo@CComClassInfo@@AEAAJPEAUHKEY__@@W4tagProcessType@@K@Z
?InitializeSystemSecurityDescriptors@CRpcResolver@@AEAAJPEAKKPEAE@Z
?InitializeThreadingModel@CComClassInfo@@AEAAJPEAUHKEY__@@@Z
?InitializeTracing@@YAXPEBG@Z
?InlineIsEqualGUID@@YAHAEBU_GUID@@0@Z
?InnerAddRef@Interceptor@@EEAAKXZ
?InnerAddRef@LEGACY_FRAME@@UEAAKXZ
?InnerAddRef@LEGACY_INTERCEPTOR@@UEAAKXZ
?InnerAddRef@MarshallingChannel@@UEAAKXZ
?InnerQueryInterface@DISPATCH_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@Interceptor@@EEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@LEGACY_FRAME@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerRelease@Interceptor@@EEAAKXZ
?InnerRelease@LEGACY_FRAME@@UEAAKXZ
?InnerRelease@LEGACY_INTERCEPTOR@@UEAAKXZ
?InnerRelease@MarshallingChannel@@UEAAKXZ
?InquireStringBindings@@YAJGPEAH@Z
?Insert@CDfNameList@@QEAAXPEAPEAV1@PEAV1@1@Z
?InsertAt@CArrayFValue@@QEAAHHPEAXH@Z
?InsertEntry@CDirectory@@AEAAJKKPEBVCDfName@@@Z
?InsertSelfIntoList@CNtfsStream@@IEAAXPEAV1@@Z
?InsertXSMember@CPubDocFile@@QEAAXPEAVPTSetMember@@@Z
?InstallMsgFilter@CAptCallCtrl@@QEAAPEAUIMessageFilter@@PEAU2@@Z
?InstantiatedProxy@CStdMarshal@@QEAAHAEBU_GUID@@PEAPEAXPEAJ@Z
?IntToUInt@@YAJHPEAI@Z
?Interceptor_AddRef@@YAKPEAUIUnknown@@@Z
?Interceptor_QueryInterface@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?Interceptor_Release@@YAKPEAUIUnknown@@@Z
?InterfaceMapHelper@CRIFTable@@AEAAJAEBU_GUID@@PEAU2@H@Z
?InterlockedDecRefCnt@@YAHPEAK0@Z
?InterlockedRestoreRefCnt@@YAHPEAK0@Z
?InternalAddRef@CStdWrapper@@QEAAKXZ
?InternalContextCallback@CObjectContext@@UEAAJP6AJPEAX@Z0AEBU_GUID@@HPEAUIUnknown@@@Z
?InternalDisconnectContext@@YAJKPEAVCObjectContext@@@Z
?InternalQI@CStdWrapper@@AEAAJAEBU_GUID@@PEAPEAXHHPEAVCtxEntry@@@Z
?InternalRelease@CClipDataObject@@AEAAKXZ
?InternalRelease@CObjectContext@@QEAAKXZ
?InternalRelease@CStdWrapper@@QEAAKPEAVCPolicySet@@@Z
?Inverse@CBaseMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CClassMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CCompositeMoniker@@EEAAJPEAPEAUIMoniker@@@Z
?Inverse@CFileMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CItemMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CLUAMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CPackagerMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CPointerMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CSessionMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?InverseFromEnum@@YAJPEAUIEnumMoniker@@PEAPEAUIMoniker@@@Z
?Invoke@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CServerCallMgr@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CallFrame@@UEAAJPEAXZZ
?Invoke@DISPATCH_CLIENT_FRAME@@UEAAJPEAXZZ
?Invoke@DISPATCH_FRAME@@QEAAJPEAX@Z
?Invoke@DISPATCH_SERVER_FRAME@@UEAAJPEAXZZ
?Invoke@LEGACY_INTERCEPTOR@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?IrotEnumRunning@CRpcResolver@@QEAAJPEAPEAU_MkInterfaceList@@@Z
?IrotGetObject@CRpcResolver@@QEAAJKPEAU_MnkEqBuf@@PEAU_SCMREGKEY@@PEAPEAUtagInterfaceData@@@Z
?IrotGetTimeOfLastChange@CRpcResolver@@QEAAJPEAU_MnkEqBuf@@PEAU_FILETIME@@@Z
?IrotIsRunning@CRpcResolver@@QEAAJPEAU_MnkEqBuf@@@Z
?IrotNoteChangeTime@CRpcResolver@@QEAAJPEAU_SCMREGKEY@@PEAU_FILETIME@@@Z
?IrotRegister@CRpcResolver@@QEAAJPEAU_MnkEqBuf@@PEAUtagInterfaceData@@1PEAU_FILETIME@@KKPEAU_SCMREGKEY@@@Z
?IrotRevoke@CRpcResolver@@QEAAJPEAU_SCMREGKEY@@PEAPEAUtagInterfaceData@@1@Z
?IsAbsoluteNonUNCPath@@YAHPEBG@Z
?IsAbsolutePath@@YAHPEBG@Z
?IsAccessAllowed@CImpAccessControl@COAccessControl@@UEAAJPEAU_TRUSTEE_W@@PEAGKPEAH@Z
?IsActive@CDebugEventFire@@UEAAJXZ
?IsAdviseStdItems@@YAHG@Z
?IsAllowableProtseq@@YAHGGQEAG@Z
?IsAllowedDCOMProtocol@@YAHPEAX@Z
?IsAnonymousAccessAllowed@@YAXPEAU_SECURITY_DESCRIPTOR@@PEAH@Z
?IsAntiMoniker@@YAPEAVCAntiMoniker@@PEAUIMoniker@@@Z
?IsApartmentInitialized@@YAHXZ
?IsAtOrAbove@CPubDocFile@@QEAAHPEAV1@@Z
?IsBSTR@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsBlank@CCacheNode@@QEAAHXZ
?IsBlank@CEMfObject@@UEAAHXZ
?IsBlank@CGenObject@@UEAAHXZ
?IsBlank@CMfObject@@UEAAHXZ
?IsBrokenRefCount@@YAHPEAU_GUID@@@Z
?IsCallCanceled@CAsyncCall@@UEAAHXZ
?IsCallCanceled@CClientCall@@UEAAHXZ
?IsCallCompleted@CAsyncCall@@UEAAHXZ
?IsCallCompleted@CClientCall@@UEAAHXZ
?IsCallDispatched@CAsyncCall@@UEAAHXZ
?IsCallDispatched@CClientCall@@UEAAHXZ
?IsCallableFromCurrentApartment@CStdIdentity@@QEAAHH@Z
?IsCancelIssued@CAsyncCall@@UEAAHXZ
?IsCancelIssued@CClientCall@@UEAAHXZ
?IsClassOfCategories@CComCat@@UEAAJAEBU_GUID@@KQEBU2@K1@Z
?IsClassOfCategories@CsCatInfo@@UEAAJAEBU_GUID@@KQEBU2@K1@Z
?IsClassOfCategoriesEx@CComCat@@SAJPEAUHKEY__@@PEAGKQEBU_GUID@@K2@Z
?IsClientContextOK@ContextInfo@@UEAAJPEAH@Z
?IsClientSide@CMessageCall@@QEAAHXZ
?IsClientWaiting@CAsyncCall@@UEAAHXZ
?IsClientWaiting@CClientCall@@UEAAHXZ
?IsComPlusConfiguredClass@CComClassInfo@@UEAAJPEAH@Z
?IsComPlusConfiguredClass@CComNoClassInfo@@UEAAJPEAH@Z
?IsComPlusConfiguredClass@CComSxSClassInfo@@UEAAJPEAH@Z
?IsComplete@CClassEntry@CClassCache@@QEAAHXZ
?IsComplusProcess@CSurrogateActivator@@QEAAHPEAPEAU_GUID@@@Z
?IsCompositeMoniker@@YAPEAVCCompositeMoniker@@PEAUIMoniker@@@Z
?IsComsvcsCLSID@@YAHAEBU_GUID@@@Z
?IsConnected@CChannelObject@@UEAAJXZ
?IsConnected@CCtxChnl@@UEAAJXZ
?IsConnected@CDdeServerCallMgr@@UEAAJXZ
?IsConnected@CDdeServerCallMgr@@W7EAAJXZ
?IsConnected@CProxyManagerImpl@CDdeObject@@UEAAHXZ
?IsConnected@CRpcChannelBuffer@@UEAAJXZ
?IsConnected@CRpcChannelBuffer@@W7EAAJXZ
?IsConnected@CStdIdentity@@UEAAHXZ
?IsConnected@DDE_CHANNEL@@UEAAJXZ
?IsConnected@DDE_CHANNEL@@W7EAAJXZ
?IsConnected@MarshallingChannel@@UEAAJXZ
?IsContentStream@@YAHPEBG@Z
?IsContextDisconnecting@CCtxConnectionManager@@SAHXZ
?IsControlStreamExtant@CNtfsStorage@@CAHPEAU_FILE_STREAM_INFORMATION@@@Z
?IsCreate@CUpdate@@QEBAHXZ
?IsCurrentBinaryEnabledForTracing@@YAHXZ
?IsDataStream@@YAHQEAU_FILE_STREAM_INFORMATION@@@Z
?IsDeactivated@CIDObject@@UEAAHXZ
?IsDelete@CUpdate@@QEBAHXZ
?IsDenied@CChildInstanceList@@QEAAJPEBVCDfName@@KK@Z
?IsDirty@CBaseMoniker@@UEAAJXZ
?IsDirty@CClassMoniker@@UEAAJXZ
?IsDirty@CDefLink@@UEAAJXZ
?IsDirty@CDefObject@@UEAAJXZ
?IsDirty@CFileMoniker@@UEAAJXZ
?IsDirty@CImpAccessControl@COAccessControl@@UEAAJXZ
?IsDirty@CMSFPage@@QEBAHXZ
?IsDirty@CObjrefMoniker@@UEAAJXZ
?IsDirty@COleCache@@UEAAJXZ
?IsDirty@CPackagerMoniker@@UEAAJXZ
?IsDirty@CPersistStgImpl@CDdeObject@@UEAAJXZ
?IsDocfileStream@@YAHPEBG@Z
?IsDragDropActive@COLEDragDropHelper@@UEAAJPEAH@Z
?IsElevatedToken@@YAJPEAXPEAH@Z
?IsEmpty@CDeltaList@@QEAAHXZ
?IsEmpty@CListHeader@@QEAAHXZ
?IsEmpty@COleCache@@QEAAHXZ
?IsEmpty@CPatternTbl@@QEAAHXZ
?IsEmptyContext@@YAHPEAVCObjectContext@@@Z
?IsEmptyString@@YAHPEAG@Z
?IsEncryptedFile@CFileStream@@UEAAHXZ
?IsEntry@CPubDocFile@@QEAAJPEBVCDfName@@PEAUSEntryBuffer@@@Z
?IsEntry@CStgHandle@@QEAAJPEBVCDfName@@PEAUSEntryBuffer@@@Z
?IsEntry@CUpdateList@@QEAA?AW4UlIsEntry@@PEBVCDfName@@PEAPEAVCUpdate@@@Z
?IsEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@PEAUSEntryBuffer@@@Z
?IsEntry@PDocFile@@QEAAJPEBVCDfName@@PEAUSEntryBuffer@@@Z
?IsEqual@CAntiMoniker@@EEAAJPEAUIMoniker@@@Z
?IsEqual@CBaseMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CClassMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CCompositeMoniker@@EEAAJPEAUIMoniker@@@Z
?IsEqual@CDfName@@QEBAHPEBV1@@Z
?IsEqual@CFileMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CItemMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CLUAMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CObjrefMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CPackagerMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CPointerMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CSessionMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqualFMTIDByteSwap@@YAHAEBU_GUID@@0@Z
?IsEqualGUID@@YAHAEBU_GUID@@0@Z
?IsEqualLUID@@YAHU_LUID@@0@Z
?IsEqualPfn@OLEAUTOMATION_FUNCTIONS@@AEAAHPEAX0@Z
?IsExclusiveWaiting@XSLOCK@@AEAAHXZ
?IsFile@@YAHGPEAH@Z
?IsFileMapped@CFileStream@@AEAAHXZ
?IsFileMoniker@@YAPEAVCFileMoniker@@PEAUIMoniker@@@Z
?IsFlushable@CMSFPage@@QEBAHXZ
?IsFormatAvailable@CDdeObject@@AEAAJPEAUtagFORMATETC@@@Z
?IsFormatAvailable@CDefClient@@AEAAHG@Z
?IsFree@CDirEntry@@QEBAHXZ
?IsFree@CFat@@AEAAJK@Z
?IsFromMachineHive@@YAJPEAUHKEY__@@PEAH@Z
?IsHandleValid@CDfMutex@@QEAAHPEAG@Z
?IsHandleValid@CFileStream@@QEAAHXZ
?IsHandleValid@CPerContext@@QEAAHXZ
?IsHiddenStream@@YAHPEBU_FILE_STREAM_INFORMATION@@@Z
?IsHmenuEqual@@YAHPEAUHMENU__@@0@Z
?IsIIDSupported@CDdeServerCallMgr@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIIDSupported@CRpcStubBufferImpl@CDdeObject@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIIDSupported@CServerCallMgr@CRpcChannelBuffer@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIOPending@CRpcThread@@QEAAHXZ
?IsIidInList@@YAHAEBU_GUID@@PEAPEBU1@@Z
?IsImpersonating@CServerCallMgr@CRpcChannelBuffer@@UEAAHXZ
?IsImpersonating@CServerSecurity@@UEAAHXZ
?IsImplementedInterface@CAggId@@AEAAJAEBU_GUID@@PEAPEAX@Z
?IsInLocalProcess@OXIDEntry@@QEAAHXZ
?IsInMemory@CDeltaList@@QEAAHXZ
?IsInScm@CRunningObjectTable@@QEAAHPEAU_MnkEqBuf@@@Z
?IsInStream@CDeltaList@@QEAAHXZ
?IsInUse@CMSFPage@@QEBAHXZ
?IsInitialized@CAsyncConnection@@QEBAHXZ
?IsInitialized@EVENT@@QEAAHXZ
?IsInitialized@SEMAPHORE@@QEAAHXZ
?IsInproc@SerializableProperty@@QEAAHPEAVSerializer@@@Z
?IsInternalCLSID@@YAHAEBU_GUID@@K0AEAJPEAPEAX@Z
?IsItemMoniker@@YAPEAVCItemMoniker@@PEAUIMoniker@@@Z
?IsLargeSector@CDirectory@@QEBAHXZ
?IsLinked@CLinkable@@QEAAHXZ
?IsLocalCaller@@YAJPEAXPEAH@Z
?IsLocalizationPropid@@YAEK@Z
?IsLongComponent@@YAHPEBGPEAPEAG@Z
?IsMDIAccelerator@@YAHPEAUtagMSG@@PEAG@Z
?IsMTAThread@@YAHXZ
?IsMacPICTSupported@@YAHXZ
?IsMapped@CNFFMappedStream@@QEAAHXZ
?IsMarshalerCLSID@@YAHAEBU_GUID@@@Z
?IsMenuCollision@CFrameFilter@@QEAAH_K_J@Z
?IsMethodInvocationAllowed@CGlobalOptions@@UEAAJPEAXHKPEAH1PEAK@Z
?IsModified@CExposedStream@@UEBAEXZ
?IsModified@CNFFMappedStream@@UEBAEXZ
?IsModified@CPropertySetStream@@QEBAEXZ
?IsModified@CSSMappedStream@@UEBAEXZ
?IsNAWrapper@CStdWrapper@@QEAAHXZ
?IsNCDrop@@YAHPEAUHWND__@@UtagPOINT@@@Z
?IsNULL@COleTls@@QEAAHXZ
?IsNffAppropriate@CNtfsStorage@@KAJPEAXPEBG@Z
?IsNffAppropriate@CNtfsStorage@@SAJPEBG@Z
?IsNoScratch@CDeltaList@@QEAAHXZ
?IsNonSimple@CPropertyStorage@@AEAAHXZ
?IsNormalCache@CCacheNode@@QEAAHXZ
?IsNtStreamExtant@@YAHPEBU_FILE_STREAM_INFORMATION@@PEBG@Z
?IsOKToDeleteClientObject@@YAHPEAVCStdIdentity@@PEAK@Z
?IsObjectCreationAllowed@CGlobalOptions@@UEAAJPEAXPEAU_GUID@@KHKPEAH2PEAK@Z
?IsObjectCreationAllowed@CRpcResolver@@QEAAJPEAU_GUID@@KHPEAH1PEAK@Z
?IsObjectMenu@CFrameFilter@@QEAAXII@Z
?IsObjrefMoniker@@YAPEAVCObjrefMoniker@@PEAUIMoniker@@@Z
?IsOfflineFile@CNtfsStorage@@CAJPEAX@Z
?IsOidInPreRegList@CComApartment@@AEAAHAEB_K@Z
?IsOidInReturnList@CComApartment@@AEAAHAEB_K@Z
?IsOle1Class@CFileMoniker@@AEAAHPEAU_GUID@@@Z
?IsOleCommand@@YAHGG@Z
?IsOleInitialized@@YAHXZ
?IsOriginalPropVariantType@@YAHG@Z
?IsOwned@CDeltaList@@QEAAJKKPEAH@Z
?IsOwned@SDeltaBlock@@QEAA?BHG@Z
?IsOwnerLinkStdOleLink@@YAHXZ
?IsPathSeparator@@YAHG@Z
?IsPinged@CStdMarshal@@QEAAHXZ
?IsPointerMoniker@@YAPEAVCPointerMoniker@@PEAUIMoniker@@@Z
?IsReadOnlyPropertySet@@YAEEE@Z
?IsReadOnlyPropid@@YAEK@Z
?IsReadable@CPropertyStorage@@AEAAHXZ
?IsReallyRunning@CDefLink@@UEAAHXZ
?IsReduced@@YAHPEAUIMoniker@@@Z
?IsRename@CUpdate@@QEBAHXZ
?IsReverted@CPropertyStorage@@AEAAHXZ
?IsRoot@CHandle@@QEBAHXZ
?IsRoot@CPubDocFile@@QEBAHXZ
?IsRunning@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CDefLink@@UEAAHXZ
?IsRunning@CDefObject@@UEAAHXZ
?IsRunning@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@COleItemContainerImpl@CDdeObject@@UEAAJPEAG@Z
?IsRunning@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CRunningObjectTable@@UEAAJPEAUIMoniker@@@Z
?IsRunningInRPCSS@@YAHXZ
?IsRunningInThisTask@@YAJPEAGPEAH@Z
?IsSAFEARRAY@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsSTAThread@@YAHXZ
?IsSafeToDispatch@@YAH_K@Z
?IsSameAsObjectFormatEtc@@YAJPEAUtagFORMATETC@@G@Z
?IsSectType@CFat@@AEAAJKK@Z
?IsSectorInList@CMStream@@QEAAHKPEAKK@Z
?IsSeparator@@YAHG@Z
?IsServer@CIDObject@@UEAAHXZ
?IsSharableEmbeddedPointers@@YA?AUHAS_INTERFACES@@PEBE@Z
?IsSharableEmbeddedRepeatPointers@@YA?AUHAS_INTERFACES@@AEAPEBE@Z
?IsShareableType@@YA?AUHAS_INTERFACES@@PEBE@Z
?IsSharedWaiting@XSLOCK@@AEAAHXZ
?IsSimple@CPropertyStorage@@AEAAHXZ
?IsSingleServerInstance@@YAHXZ
?IsSingleWriter@CPubDocFile@@IEAAJXZ
?IsSorted@CMSFPageTable@@AEAAHPEAVCMSFPage@@@Z
?IsSpecifiedStream@@YAHPEBU_FILE_STREAM_INFORMATION@@PEBG@Z
?IsSupportedVarType@@YAHG@Z
?IsSynced@CSharedMemoryBlock@@QEAAHXZ
?IsSystemMoniker@CAntiMoniker@@EEAAJPEAK@Z
?IsSystemMoniker@CBaseMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CClassMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CCompositeMoniker@@EEAAJPEAK@Z
?IsSystemMoniker@CFileMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CItemMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CLUAMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CObjrefMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CPackagerMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CPointerMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CSessionMoniker@@UEAAJPEAK@Z
?IsTableObjRef@@YAHPEAUtagSTDOBJREF@@@Z
?IsTableStrongObjRef@@YAHPEAUtagSTDOBJREF@@@Z
?IsTableWeakObjRef@@YAHPEAUtagSTDOBJREF@@@Z
?IsTaskName@@YAHPEBG@Z
?IsThreadInNTA@@YAHXZ
?IsTimerAtZero@CCliModalLoop@@QEAAHXZ
?IsUIAccessToken@@YAJPEAXPEAH@Z
?IsUnbounded@@YAHJ@Z
?IsUpToDate@CDefLink@@UEAAJXZ
?IsUpToDate@CDefObject@@UEAAJXZ
?IsUpToDate@COleObjectImpl@CDdeObject@@UEAAJXZ
?IsUserHiveOK@@YAJPEAXPEAH@Z
?IsValid@CEndpointEntry@@QEAAHXZ
?IsValid@CHandle@@QEBAHXZ
?IsValidAccessMask@@YAHK@Z
?IsValidCOMSecurityDescriptor@@YAHPEAU_SECURITY_DESCRIPTOR_RELATIVE@@PEAH@Z
?IsValidIID@ActivationProperties@@IEAAJAEBU_GUID@@@Z
?IsValidInApartment@CDllPathEntry@CClassCache@@QEAAHK@Z
?IsValidIndex@CInternalPageAllocator@@QEAAHJ@Z
?IsValidLINDEX@@YAHKJ@Z
?IsValidObjRefHeader@@YAJAEAUtagOBJREF@@@Z
?IsValidPtrIn@@YAHPEBX_K@Z
?IsValidPtrOut@@YAHPEAX_K@Z
?IsValidReadPtrIn@@YAHPEBX_K@Z
?IsValidStgInterface@@YAHPEAX@Z
?IsVariant@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsVariantType@@YAHG@Z
?IsWOWProcess@@YAHXZ
?IsWOWThread@@YAHXZ
?IsWOWThreadCallable@@YAHXZ
?IsWin31DropTarget@@YAHPEAUHWND__@@@Z
?IsWindowValid@@YAHPEAUHWND__@@@Z
?IsWriteable@CExposedStream@@UEBAEXZ
?IsWriteable@CNFFMappedStream@@UEBAEXZ
?IsWriteable@CPropertyStorage@@AEAAHW4EIsWriteable@1@@Z
?IsWriteable@CSSMappedStream@@UEBAEXZ
?Item@CMachineNamesHelper@@QEAAPEBGK@Z
?ItemCallBack@CDefClient@@AEAAJHPEAG@Z
?KeepData@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEAX@Z
?KillStream@CMStream@@QEAAJK_K@Z
?Last@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?LaunchApp@CDdeObject@@AEAAHXZ
?LazyMarshalGIPEntry@CGIPTable@@AEAAJK@Z
?LazyMarshalGIPEntryCallback@@YAJPEAX@Z
?LeaveNTA@@YAPEAVCObjectContext@@PEAV1@@Z
?LeaveNTAIfNecessary@CDllHost@@AEAAXAEAVCOleTls@@HPEAVCObjectContext@@@Z
?LeaveServiceDomain@@YAJPEAPEAUIObjContext@@@Z
?LetExclusiveRun@XSLOCK@@AEAAXXZ
?LetSharedRun@XSLOCK@@AEAAXXZ
?ListRefsOk@CEnumContextProps@@QEAAHXZ
?Load@CAntiMoniker@@EEAAJPEAUIStream@@@Z
?Load@CBaseMoniker@@UEAAJPEAUIStream@@@Z
?Load@CCacheNode@@QEAAJPEAUIStream@@HH@Z
?Load@CClassMoniker@@UEAAJPEAUIStream@@@Z
?Load@CCompositeMoniker@@EEAAJPEAUIStream@@@Z
?Load@CDefLink@@UEAAJPEAUIStorage@@@Z
?Load@CDefObject@@UEAAJPEAUIStorage@@@Z
?Load@CEMfObject@@UEAAJPEAUIStream@@H@Z
?Load@CExtentList@@QEAAJPEAUIStream@@K@Z
?Load@CFileMoniker@@UEAAJPEAUIStream@@@Z
?Load@CGenObject@@UEAAJPEAUIStream@@H@Z
?Load@CImpAccessControl@COAccessControl@@UEAAJPEAUIStream@@@Z
?Load@CItemMoniker@@UEAAJPEAUIStream@@@Z
?Load@CLUAMoniker@@UEAAJPEAUIStream@@@Z
?Load@CMfObject@@UEAAJPEAUIStream@@H@Z
?Load@CObjrefMoniker@@UEAAJPEAUIStream@@@Z
?Load@COleCache@@QEAAJPEAUIStorage@@H@Z
?Load@COleCache@@UEAAJPEAUIStorage@@@Z
?Load@CPackagerMoniker@@UEAAJPEAUIStream@@@Z
?Load@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?Load@CSessionMoniker@@UEAAJPEAUIStream@@@Z
?Load@OLEAUTOMATION_FUNCTIONS@@AEAAXXZ
?LoadDll@CDllPathEntry@CClassCache@@SAJAEAUDLL_INSTANTIATION_PROPERTIES@@AEAP6AJAEBU_GUID@@1PEAPEAX@ZAEAP6AJXZAEAPEAUHINSTANCE__@@@Z
?LoadDllServer@CCOMSurrogate@@SAJAEBU_GUID@@@Z
?LoadDllServer@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?LoadHPRES@CEMfObject@@AEAAPEAUHENHMETAFILE__@@XZ
?LoadHPRES@CGenObject@@AEAAPEAXXZ
?LoadHPRES@CMfObject@@AEAAPEAXXZ
?LoadModule@CStackWalker@@CA_KPEAX_K@Z
?LoadNativeData@CCacheNode@@QEAAJXZ
?LoadObject@CPropertyBagEx@@AEBAJPEAUtagPROPVARIANT@@0@Z
?LoadOleAut32@OLEAUTOMATION_FUNCTIONS@@AEAAJXZ
?LoadPersistedDataObjectFromHGlobal@@YAJPEAXPEAPEAUIDataObject@@@Z
?LoadPersistentObject@@YAJPEAUIUnknown@@PEAUIInstanceInfo@@@Z
?LoadPropVariantFromVectorElem@@YAJPEAUtagPROPVARIANT@@PEBU1@H@Z
?LoadResourceStrings@@YAXXZ
?LoadResultFromScm@CRotMonikerEnum@@QEAAJPEAU_MkInterfaceList@@@Z
?LoadSystemProc@@YAHPEADPEBDPEAPEAUHINSTANCE__@@PEAP6A_JXZ@Z
?LoadTOC@COleCache@@AEAAJPEAUIStream@@PEAUIStorage@@@Z
?LoadTOCEntry@CCacheNode@@QEAAJPEAUIStream@@AEAH@Z
?LocalAuthnService@@YAKG@Z
?LocalCall@@YAHXZ
?LocalMemAlloc@@YAPEAX_K@Z
?LocalMemFree@@YAXPEAX@Z
?Locate@COleCache@@AEAAPEAVCCacheNode@@KJPEAUtagDVTARGETDEVICE@@@Z
?Locate@COleCache@@AEAAPEAVCCacheNode@@PEAUtagFORMATETC@@PEAK@Z
?Lock@CComClassInfo@@UEAAJXZ
?Lock@CComNoClassInfo@@UEAAJXZ
?Lock@CComSxSClassInfo@@UEAAJXZ
?Lock@CDDEServer@@QEAAXHPEAUHWND__@@@Z
?Lock@CExposedDocFile@@UEAAJK@Z
?Lock@CExposedStream@@UEAAJE@Z
?Lock@CNFFMappedStream@@UEAAJE@Z
?Lock@CNFFTreeMutex@@UEAAJK@Z
?Lock@CNtfsStorage@@UEAAJK@Z
?Lock@CNtfsStream@@AEAAJK@Z
?Lock@CPropertySetStorage@@IEAAXXZ
?Lock@CPropertySetStream@@QEAAJE@Z
?Lock@CPropertyStorage@@AEAAJXZ
?Lock@CSSMappedStream@@UEAAJE@Z
?Lock@CStdWrapper@@QEAAJPEAVCPolicySet@@@Z
?LockCleanup@EventPoolEntry@@SAXPEAV1@@Z
?LockClient@CStdMarshal@@QEAAKXZ
?LockConnection@CProxyManagerImpl@CDdeObject@@UEAAJHH@Z
?LockConnection@CStdIdentity@@UEAAJHH@Z
?LockContainer@COleItemContainerImpl@CDdeObject@@UEAAJH@Z
?LockEnter@XSLOCK@@AEAAXXZ
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAHH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAHH@Z
?LockExclusive@XLOCK@@QEAAHH@Z
?LockExclusive@XSLOCK@@QEAAHH@Z
?LockInit@EventPoolEntry@@SAHXZ
?LockObjectExternal@CStdIdentity@@QEAAJHH@Z
?LockRegion@CExpParameterValidate@@SAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CExposedStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CMemBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CMemStm@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNdrStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNtfsStream@@W7EAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CSimpStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CStreamOnMessage@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@GenericStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRunning@CDefLink@@UEAAJHH@Z
?LockRunning@CDefObject@@UEAAJHH@Z
?LockServer@CDebugEventFireCF@@UEAAJH@Z
?LockServer@CDocfileUnmarshalFactory@@UEAAJH@Z
?LockServer@CMonikerFactory@@UEAAJH@Z
?LockServer@CStdClassFactory@@UEAAJH@Z
?LockServer@ComPsClassFactory@@UEAAJH@Z
?LockServerForActivation@CClassCache@@SAJXZ
?LockShared@?$MAP_SHARED@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHH@Z
?LockShared@?$MAP_SHARED@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAHH@Z
?LockShared@?$MAP_SHARED@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAHH@Z
?LockShared@XSLOCK@@QEAAHH@Z
?LogAccessFailed@@YAXPEAXPEAU_GUID@@1K0HW4tagEventLogModes@@W4tagEventLogSD@@@Z
?LogEventClassRegistration@@YAXJPEAU_RegInput@@PEAU_RegOutput@@@Z
?LogEventClassRevokation@@YAXAEBU_GUID@@K@Z
?LogEventCleanup@@YAXXZ
?LogEventClientCall@@YAXPEA_K@Z
?LogEventClientReturn@@YAXPEA_K@Z
?LogEventDisconnect@@YAXPEBU_GUID@@PEAVMIDEntry@@H@Z
?LogEventGetClassObject@@YAJAEBU_GUID@@PEAPEAX@Z
?LogEventInitialize@@YAXXZ
?LogEventIsActive@@YAHXZ
?LogEventMarshal@@YAXAEAUtagOBJREF@@@Z
?LogEventStubEnter@@YAXPEA_K@Z
?LogEventStubException@@YAXPEA_K@Z
?LogEventStubLeave@@YAXPEA_K@Z
?LogEventUnmarshal@@YAXAEAUtagOBJREF@@@Z
?LogInvalidSecurityDescriptor@@YAXPEAU_GUID@@KW4tagEventLogSD@@@Z
?LogMacPictMsg@@YAXK@Z
?LookForConfiguredClsid@@YAJAEBU_GUID@@AEAU1@K@Z
?LookUpEntry@CEffPermsCacheLUID@@QEAAHU_LUID@@PEAK@Z
?Lookup@CApartmentHashTable@@QEAAPEAUApartmentEntry@@K@Z
?Lookup@CCtxPropHashTable@@QEAAPEAVCObjectContext@@PEAV2@H@Z
?Lookup@CCtxUUIDHashTable@@QEAAPEAVCObjectContext@@AEBU_GUID@@@Z
?Lookup@CDIFat@@QEAAJKPEAK@Z
?Lookup@CDdeConnectionTable@@QEAAJGPEAK@Z
?Lookup@CHashTable@@IEAAPEAUSHashChain@@KPEBX@Z
?Lookup@CMapDwordDword@@QEBAHKAEAK@Z
?Lookup@CMapKeyToValue@@QEBAHPEAXI0@Z
?Lookup@CMapStringToPtr@@QEBAHPEAGAEAPEAX@Z
?Lookup@CMapUintPtr@@QEBAHIAEAPEAX@Z
?Lookup@CPIDTable@@QEAAPEAVCIDObject@@PEAUIUnknown@@PEAVCObjectContext@@H@Z
?Lookup@CPSTable@@QEAAJPEAVCObjectContext@@0PEAPEAVCPolicySet@@@Z
?LookupCE@CCEHashTable@CClassCache@@QEAAPEAVCClassEntry@2@KAEBUSMultiGUIDKey@@@Z
?LookupCE@CCEHashTable@CClassCache@@QEAAPEAVCClassEntry@2@KAEBU_GUID@@0@Z
?LookupCtxEntry@CStdWrapper@@QEAAPEAVCtxEntry@@PEAVCObjectContext@@@Z
?LookupCtxEntry@IFaceEntry@@QEAAPEAVCtxEntry@@PEAVCObjectContext@@@Z
?LookupEntry@CtxEntry@@SAPEAV1@PEAV1@PEAVCObjectContext@@PEAPEAV1@K@Z
?LookupExistingContext@CCtxTable@@SAPEAVCObjectContext@@AEBU_GUID@@@Z
?LookupExistingContext@CCtxTable@@SAPEAVCObjectContext@@PEAV2@H@Z
?LookupFromIPIDTables@CIPIDTable@@QEAAJAEBU_GUID@@PEAPEAUtagIPIDEntry@@PEAPEAVOXIDEntry@@@Z
?LookupHKey@CMapKeyToValue@@QEBAHPEAUHMAPKEY__@@PEAX@Z
?LookupIPID@CIPIDTable@@QEAAPEAUtagIPIDEntry@@AEBU_GUID@@@Z
?LookupMID@CMIDTable@@QEAAPEAVMIDEntry@@PEAUtagDUALSTRINGARRAY@@PEAK@Z
?LookupOXID@COXIDTable@@AEAAPEAVOXIDEntry@@AEB_K0@Z
?LookupPrincName@@YAJGPEAPEAG@Z
?LookupRefCache@CROIDTable@@QEAAPEAVCRefCache@@AEBU_GUID@@@Z
?LookupSOID@CROIDTable@@QEAAPEAUSOIDRegistration@@AEBU_GUID@@PEAK@Z
?MAX@@YAKKK@Z
?MIN@@YAKKK@Z
?MTAWorkerLoop@CDllHost@@AEAAXPEAX@Z
?MTHostActivatorGetClassObject@@YAJAEBU_GUID@@PEAPEAX@Z
?MWrite@CMStream@@QEAAJKH_KPEBXKPEAVCStreamCache@@PEAK@Z
?M_HPRES@CEMfObject@@AEAAPEAUHENHMETAFILE__@@XZ
?MachineLocal@CDestObject@@QEAAHXZ
?MakeCliIPIDEntry@CStdMarshal@@AEAAJAEBU_GUID@@PEAUtagSTDOBJREF@@PEAVOXIDEntry@@PEAPEAUtagIPIDEntry@@@Z
?MakeCloakedSCMProxy@@YAJPEAXPEAPEAX@Z
?MakeCollectable@CClassEntry@CClassCache@@QEAAXXZ
?MakeCollectable@CCollectable@CClassCache@@QEAAXXZ
?MakeCopyFlags@CExposedDocFile@@CAKKPEBU_GUID@@@Z
?MakeDDEData@@YAHPEAXHPEAPEAXH@Z
?MakeDataAtom@@YAGGH@Z
?MakeFakeObjRef@@YAJAEAUtagOBJREF@@PEAVOXIDEntry@@AEBU_GUID@@2@Z
?MakeFileMapAddressValid@CFileStream@@AEAAJK@Z
?MakeFileMapAddressValidWorker@CFileStream@@AEAAJKK@Z
?MakeFileStub@CFileStream@@AEAAJXZ
?MakeGlobal@@YAPEAXPEAD@Z
?MakeItemData@@YAPEAXPEAUDDEPOKE@@PEAXG@Z
?MakeOwn@SDeltaBlock@@QEAAXG@Z
?MakeProxyHelper@@YAJPEAUtagDUALSTRINGARRAY@@AEBU_GUID@@KKPEAPEAX@Z
?MakeRemUnk@OXIDEntry@@AEAAJXZ
?MakeSCMEntry@COXIDTable@@QEAAJAEB_KPEAUtagOXID_INFO@@PEAPEAVOXIDEntry@@@Z
?MakeSCMProxy@@YAJPEAUtagDUALSTRINGARRAY@@AEBU_GUID@@PEAPEAX@Z
?MakeServerEntry@COXIDTable@@QEAAJPEAPEAVOXIDEntry@@@Z
?MakeValidInApartment_rl16@CDllPathEntry@CClassCache@@QEAAJAEBU_GUID@@PEAUHINSTANCE__@@P6AJ00PEAPEAX@ZP6AJXZ@Z
?MallocInitialize@@YAJXZ
?Map@CExposedStream@@UEAAXEPEAPEAX@Z
?Map@CNFFMappedStream@@UEAAXEPEAPEAX@Z
?Map@CPubMappedStream@@QEAAXEPEAPEAX@Z
?Map@CSSMappedStream@@UEAAXEPEAPEAX@Z
?MapCFToFormatetc@@YAJPEAUHWND__@@IPEAUtagFORMATETC@@@Z
?MapNameToPropId@@YAKPEAVCPropertySetStream@@GQEBUtagPROPSPEC@@KKKPEAJ@Z
?MapStreamACLToAccessList@@YAJPEAUtagPCB@@PEAPEAU_ACTRL_ALISTW@@@Z
?MapView@CFileStream@@AEAAJ_KKK@Z
?MarkError@CServerCallMgr@CRpcChannelBuffer@@QEAAKJ@Z
?MarkSect@CFat@@AEAAJPEAUSGetFreeStruct@@@Z
?Marshal@CDllHost@@AEAAJXZ
?Marshal@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@DISPATCH_CLIENT_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@DISPATCH_SERVER_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?MarshalClientIPID@CStdMarshal@@AEAAJAEBU_GUID@@KKPEAPEAUtagIPIDEntry@@@Z
?MarshalEnvoy@CObjectContext@@UEAAJPEAUIStream@@K@Z
?MarshalEnvoyProperties@CObjectContext@@QEAAJAEAKAEAPEAUtagContextProperty@@PEAUIStream@@K@Z
?MarshalHelperMulti@@YAJPEAUIUnknown@@KPEAU_GUID@@PEAPEAUtagMInterfacePointer@@PEAJPEAVCDestObject@@@Z
?MarshalIPID@CStdMarshal@@QEAAJAEBU_GUID@@KKPEAPEAUtagIPIDEntry@@PEAUIUnknown@@@Z
?MarshalInterface@ActivationProperties@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CClassMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CDestObjectWrapper@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CDocfileUnmarshalFactory@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CErrorObject@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CExposedDocFile@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CExposedStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CFreeMarshaler@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CMarshalImplPStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CObjectContext@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CPointerMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CSimpStorage@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CSimpStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CStaticWrapper@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CStdMarshal@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CStdWrapper@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@InprocActpropsUnmarshaller@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInternalObjRef@@YAJAEAUtagOBJREF@@AEBU_GUID@@PEAXKPEAPEAX@Z
?MarshalItfPtrs@CCtxCall@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?MarshalObjRef@@YAJAEAUtagOBJREF@@AEBU_GUID@@PEAXKK2@Z
?MarshalObjRef@CStdMarshal@@QEAAJAEAUtagOBJREF@@AEBU_GUID@@KKPEAXPEAUIUnknown@@@Z
?MarshalParam@CallFrame@@QEAAXAEAU_MIDL_STUB_MESSAGE@@KAEBUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PEAE@Z
?MarshalProperties@CObjectContext@@QEAAJAEAKAEAPEAUtagContextProperty@@PEAUIStream@@AEBU_GUID@@PEAXK4K@Z
?MarshalPropertyHeader@CObjectContext@@QEAAJAEAPEAUIStream@@AEBU_GUID@@PEAUtagContextProperty@@AEAT_ULARGE_INTEGER@@3@Z
?MarshalServer@CStdWrapper@@QEAAJPEAVCPolicySet@@PEAUIStream@@AEBU_GUID@@KPEAXK@Z
?MarshalServerIPID@CStdMarshal@@AEAAJAEBU_GUID@@KKPEAPEAUtagIPIDEntry@@PEAUIUnknown@@@Z
?MarshalSizeHelper@@YAJKPEAXKPEAVCObjectContext@@HPEAK@Z
?MarshaledByReference@@YAHAEBUtagCONTEXTHEADER@@@Z
?MarshaledByThisProcess@@YAHAEBUtagCONTEXTHEADER@@@Z
?MarshaledByValue@@YAHAEBUtagCONTEXTHEADER@@@Z
?MarshaledFrozen@@YAHAEBUtagCONTEXTHEADER@@@Z
?MarshaledTableStrong@@YAHAEBUtagCONTEXTHEADER@@@Z
?MarshaledTableWeak@@YAHAEBUtagCONTEXTHEADER@@@Z
?MatchFormatetc@CClipDataObject@@AEAA?AW4FormatMatchFlag@@PEAUtagFORMATETC@@HPEAW4tagTYMED@@@Z
?MaybeCreateDocWindow@@YAJGGPEAUHWND__@@0@Z
?MaybeUnlaunchApp@CDdeObject@@AEAAJXZ
?MemoryIncrement@CallFrame@@QEAAPEAEPEAEPEBEH@Z
?MfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?MfCallbackFuncForGetColorSet@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?MfGetSize@@YAKPEAPEAX@Z
?MfToPres@@YAJPEAXPEAVCPres@@@Z
?MnkMultiToUnicode@@YAJPEADAEAPEAGKAEAGI@Z
?MnkUnicodeToMulti@@YAJPEAGGAEAPEADAEAGAEAH@Z
?ModalLoop@@YAJPEAVCMessageCall@@@Z
?ModeToDFlags@@YAKK@Z
?ModeToNtFlags@CNtfsStorage@@CAJKKHPEAK0000@Z
?ModuleName@CStackWalkerSymbol@@UEAAPEBGXZ
?MonikerDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?MoveElementTo@CExpParameterValidate@@SAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CExposedDocFile@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CNtfsStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CNtfsStorageForPropSetStg@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CSimpStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementWorker@CExposedDocFile@@AEAAJPEBGPEAUIStorage@@0K@Z
?MoveSect@CMStream@@QEAAJKKK@Z
?Multiply@?$CMultiplier@_KVCCallDisposition@Rtl@BUCL@@@BUCL@@SA?AVCCallDisposition@Rtl@2@_K0AEA_K@Z
?MustRunInClientContext@CComClassInfo@@UEAAJPEAH@Z
?MustRunInClientContext@CComNoClassInfo@@UEAAJPEAH@Z
?MustRunInClientContext@CComSxSClassInfo@@UEAAJPEAH@Z
?MyPeekMessage@CCliModalLoop@@QEAAHPEAUtagMSG@@PEAUHWND__@@IIG@Z
?NAUninitialize@@YAXXZ
?NFFOpen@@YAJPEBGKKHPEAXAEBU_GUID@@PEAPEAX@Z
?NFFOpenOnHandle@@YAJHKKPEAPEAXAEBU_GUID@@0@Z
?NTHostActivatorGetClassObject@@YAJAEBU_GUID@@PEAPEAX@Z
?NTMaskToStandardMask@@YAXPEAK0@Z
?NTServiceCtrlHandler@CSurrogateProcessActivator@@SAXK@Z
?NTServiceMain@CSurrogateProcessActivator@@SAXKPEAPEAG@Z
?NameCompare@CDirectory@@SAHPEBVCDfName@@0@Z
?NameInSNB@@YAJPEBVCDfName@@PEAPEAG@Z
?NativeToStorage@@YAJPEAUIStorage@@PEAX@Z
?NbNaRgtRA1@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEKPEAK@Z
?NbNaRgtRA1@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJKPEAK@Z
?NbNaRgtRA1@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANKPEAK@Z
?NbNf1@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEK@Z
?NbNf1@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJK@Z
?NbNf1@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANK@Z
?NbaRgtRA3@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEKPEAK@Z
?NbaRgtRA3@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJKPEAK@Z
?NbaRgtRA3@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANKPEAK@Z
?NbaRltRA2@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEKPEAK@Z
?NbaRltRA2@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJKPEAK@Z
?NbaRltRA2@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANKPEAK@Z
?NdrClientZeroOut@@YAXPEAU_MIDL_STUB_MESSAGE@@PEBEPEAE@Z
?NdrGetBaseInterfaceFromStub@@YAJPEAUIRpcStubBuffer@@PEAPEAU1@PEAU_GUID@@@Z
?NdrStringRead@@YAJPEAUIStream@@PEAPEAG@Z
?NdrStringSize@@YA_KPEBG@Z
?NdrStringWrite@@YAJPEAUIStream@@PEBG@Z
?NdrpFindInterface@@YAHPEAPEBUtagProxyFileInfo@@AEBU_GUID@@0PEAJ@Z
?NegotiateDllInstantiationProperties2@CDllPathEntry@CClassCache@@SAJKAEBU_GUID@@AEAUDLL_INSTANTIATION_PROPERTIES@@PEAUIComClassInfo@@PEAVActivationPropertiesIn@@H@Z
?NegotiateSyntax@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?NegotiateSyntax@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?NegotiateSyntax@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?NewAssoc@CMapKeyToValue@@AEAAPEAUCAssoc@1@IPEAXI0@Z
?NewCNtfsStream@CNtfsStorage@@QEAAJPEBGKHPEAPEAVCNtfsStream@@@Z
?Next@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJKPEAUtagCATEGORYINFO@@PEAK@Z
?Next@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CAddrExclusionList@@UEAAJKPEAPEAGPEAK@Z
?Next@CCompositeMonikerEnum@@UEAAJKPEAPEAUIMoniker@@PEAK@Z
?Next@CEnumCategories@@UEAAJKPEAUtagCATEGORYINFO@@PEAK@Z
?Next@CEnumCategoriesOfClass@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumClassesOfCategories@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumContextProps@@UEAAJKPEAUtagContextProperty@@PEAK@Z
?Next@CEnumFmt10@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFmt@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFormatEtc@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFormatEtcDataArray@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumSTATDATA@@UEAAJKPEAUtagSTATDATA@@PEAK@Z
?Next@CEnumSTATPROPBAG@@UEAAJKPEAUtagSTATPROPBAG@@PEAK@Z
?Next@CEnumSTATPROPSETSTG@@UEAAJKPEAUtagSTATPROPSETSTG@@PEAK@Z
?Next@CEnumSTATPROPSTG@@UEAAJKPEAUtagSTATPROPSTG@@PEAK@Z
?Next@CEnumStatData@@UEAAJKPEAUtagSTATDATA@@PEAK@Z
?Next@CEnumVerb@@EEAAJKPEAUtagOLEVERB@@PEAK@Z
?Next@CExpParameterValidate@@SAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CExposedIterator@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CLocalMachineNames@@UEAAJKPEAPEAGPEAK@Z
?Next@CNoEnum@@UEAAJKPEAPEAUIUnknown@@PEAK@Z
?Next@CNtfsEnumSTATSTG@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CPtrCache@@QEAAHPEAPEAX@Z
?Next@CRotMonikerEnum@@UEAAJKPEAPEAUIMoniker@@PEAK@Z
?Next@CSimpEnumSTATSTG@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CStackWalkerSymbol@@UEAAPEAUIStackWalkerSymbol@@XZ
?NextAt@CNtfsSTATSTGArray@@QEAAJKPEAUtagSTATSTG@@PEAK@Z
?NextAt@CSTATPROPBAGArray@@QEAAJKPEAUtagSTATPROPBAG@@PEAK@Z
?NextAt@CStatArray@@QEAAJKPEAUtagSTATPROPSTG@@PEAK@Z
?NextFSI@@YAPEAU_FILE_STREAM_INFORMATION@@PEBU1@@Z
?NoItemConnections@CDefClient@@QEAAJXZ
?NoLongerNeeded@CClassEntry@CClassCache@@UEAAHXZ
?NoLongerNeeded@CDllPathEntry@CClassCache@@QEAAHXZ
?NoteChangeTime@CRunningObjectTable@@UEAAJKPEAU_FILETIME@@@Z
?Notify@CAsyncConnection@@QEAAJJPEAUILockBytes@@PEAVCPerContext@@PEAVCSafeSem@@@Z
?Notify@CPolicySet@@QEAAJPEAVCRpcCall@@W4tagCallType@@PEAVCCtxCall@@@Z
?NotifyActivation@@YAHHPEAUIUnknown@@@Z
?NotifyContextAbandonment@CObjectContext@@QEAAXXZ
?NotifyDDStartOrStop@CRpcResolver@@QEAAJH@Z
?NotifyDisconnect@CStdMarshal@@AEAAXXZ
?NotifyInitializeSpies@@YAJHHKJ@Z
?NotifyOIDIsPinned@CIDObject@@QEAAXXZ
?NotifyOIDIsUnpinned@CIDObject@@QEAAXXZ
?NotifyServerException@CObjectContext@@QEAAXPEAU_EXCEPTION_POINTERS@@@Z
?NotifySinks@CConnectionPoint@@UEAAJKKHJ@Z
?NotifyStarted@CRpcResolver@@QEAAJPEAU_RegInput@@PEAPEAU_RegOutput@@@Z
?NotifyStopped@CRpcResolver@@QEAAXAEBU_GUID@@K@Z
?NotifySurrogateInitializing@CRpcResolver@@QEAAJXZ
?NotifySurrogatePaused@CRpcResolver@@QEAAJXZ
?NotifySurrogateReady@CRpcResolver@@QEAAJXZ
?NotifySurrogateResumed@CRpcResolver@@QEAAJXZ
?NotifySurrogateStarted@CRpcResolver@@QEAAJPEAU_ProcessActivatorToken@@@Z
?NotifySurrogateStopped@CRpcResolver@@QEAAJXZ
?NotifySurrogateUserInitializing@CRpcResolver@@QEAAJXZ
?NotifyUnpinOutcome@COIDTable@@QEAAXH@Z
?NotifyWorkWaiting@CROIDTable@@QEAAXXZ
?NtStatusToScode@@YAJJ@Z
?NullOXIDReferencesInIPIDEntries@CStdMarshal@@QEAAXXZ
?Nullify@CRpcCall@@UEAAJJ@Z
?OIDChainToIDObject@CIDObject@@SAPEAV1@PEAUSHashChain@@@Z
?OIDUnpinReqChainToIDObject@CIDObject@@SAPEAV1@PEAUSHashChain@@@Z
?ORPCInterfaceSecCallback@@YAJPEAX0@Z
?ObjectServerLoadDll@CObjServer@@UEAAJPEAU_GUID@@PEAK@Z
?ObjectServerLoadDll@CSurrogateProcessActivator@@UEAAJPEAU_GUID@@PEAK@Z
?ObtainPolicySet@@YAJPEAVCObjectContext@@0KPEAHPEAPEAVCPolicySet@@@Z
?ObtainStdIDFromOID@@YAJAEBU_GUID@@KHPEAPEAVCStdIdentity@@@Z
?ObtainStdIDFromUnk@@YAJPEAUIUnknown@@KPEAVCObjectContext@@KPEAPEAVCStdIdentity@@@Z
?ObtainWrapper@@YAPEAVCStdWrapper@@PEAUIUnknown@@HK@Z
?Ole10_CLSIDFromString@@YAJPEBGPEAU_GUID@@H@Z
?Ole10_ParseMoniker@@YAJPEAUIMoniker@@PEAPEAG1@Z
?Ole10_StringFromCLSID@@YAJAEBU_GUID@@PEAGH@Z
?Ole232DllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?OleCallBack@CDdeObject@@QEAAJHPEAVDDE_CHANNEL@@@Z
?OleDdeDeleteMetaFile@@YAXPEAX@Z
?OleGetClipboardData@CClipDataObject@@AEAAJIPEAPEAX@Z
?OleIsClipboardFormatAvailable@CClipDataObject@@AEAAHI@Z
?OleLoadWithoutBinding@@YAJPEAUIStorage@@HAEBU_GUID@@PEAUIOleClientSite@@PEAPEAX@Z
?OleMainThreadWndProc@@YA_JPEAUHWND__@@I_K_J@Z
?OleModalLoopBlockFn@@YAJPEAX00@Z
?OleOpenClipboard@@YAJPEAUHWND__@@PEAPEAU1@@Z
?OnAck@CDdeObject@@QEAAHPEAVDDE_CHANNEL@@_J@Z
?OnCall@CCtxChnl@@UEAAJPEAUICallFrame@@@Z
?OnCall@LEGACY_INTERCEPTOR@@UEAAJPEAUICallFrame@@@Z
?OnClose@CAdvSinkImpl@CDefLink@@UEAAXXZ
?OnClose@CAdvSinkImpl@CDefObject@@UEAAXXZ
?OnClose@CAdviseSinkImpl@CDefClient@@UEAAXXZ
?OnClose@CAdviseSinkImpl@COleCache@@UEAAXXZ
?OnCodeInstallProblem@DefaultIBindStatusCallback@@UEAAJKPEBG0K@Z
?OnCrash@COleCache@@QEAAJXZ
?OnData@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAXG@Z
?OnDataAvailable@CBindStatusCallback@@UEAAJKKPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataAvailable@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAXG@Z
?OnDataAvailable@DefaultIBindStatusCallback@@UEAAJKKPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefLink@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefObject@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@CDefClient@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@COleCache@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDisconnect@CRunningObjectTable@@UEAAXPEAX@Z
?OnEnterAltTabMode@CFrameFilter@@QEAAXXZ
?OnEnterMenuMode@CFrameFilter@@QEAAXXZ
?OnExitAltTabMode@CFrameFilter@@QEAAXXZ
?OnExitMenuMode@CFrameFilter@@QEAAXXZ
?OnExtentChange@CAdviseSinkImpl@CDefClient@@UEAAXKPEAUtagSIZE@@@Z
?OnInitAck@CDdeObject@@QEAAXPEAVDDE_CHANNEL@@PEAUHWND__@@@Z
?OnLowResource@CBindStatusCallback@@UEAAJK@Z
?OnLowResource@DefaultIBindStatusCallback@@UEAAJK@Z
?OnMainThread@@YAHXZ
?OnMessage@CFrameFilter@@QEAA_JI_K_J@Z
?OnObjectAvailable@CBindStatusCallback@@UEAAJAEBU_GUID@@PEAUIUnknown@@@Z
?OnObjectAvailable@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAUIUnknown@@@Z
?OnProgress@CBindStatusCallback@@UEAAJKKKPEBG@Z
?OnProgress@DefaultIBindStatusCallback@@UEAAJKKKPEBG@Z
?OnRename@CAdvSinkImpl@CDefLink@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdvSinkImpl@CDefObject@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@CDefClient@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@COleCache@@UEAAXPEAUIMoniker@@@Z
?OnReturning@?$CBaseRaiseFrame@VCVoidRaiseFrame@Rtl@ErrorHandling@Windows@@V?$CBaseNtStatusCarryingFrame@VCVoidRaiseFrame@Rtl@ErrorHandling@Windows@@@234@@Rtl@ErrorHandling@Windows@@QEBAXXZ
?OnRun@COleCache@@UEAAJPEAUIDataObject@@@Z
?OnSave@CAdvSinkImpl@CDefLink@@UEAAXXZ
?OnSave@CAdvSinkImpl@CDefObject@@UEAAXXZ
?OnSave@CAdviseSinkImpl@CDefClient@@UEAAXXZ
?OnSave@CAdviseSinkImpl@COleCache@@UEAAXXZ
?OnShowWindow@COleClientSiteImpl@CDefClient@@UEAAJH@Z
?OnStartBinding@CBindStatusCallback@@UEAAJKPEAUIBinding@@@Z
?OnStartBinding@DefaultIBindStatusCallback@@UEAAJKPEAUIBinding@@@Z
?OnStop@COleCache@@UEAAJXZ
?OnStopBinding@CBindStatusCallback@@UEAAJJPEBG@Z
?OnStopBinding@DefaultIBindStatusCallback@@UEAAJJPEBG@Z
?OnSysCommand@CFrameFilter@@QEAA_J_K_J@Z
?OnTerminate@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAUHWND__@@@Z
?OnTimer@CDdeObject@@QEAAXPEAVDDE_CHANNEL@@@Z
?OnViewChange@CAdvSinkImpl@CDefLink@@UEAAXKJ@Z
?OnViewChange@CAdvSinkImpl@CDefObject@@UEAAXKJ@Z
?OnViewChange@CAdviseSinkImpl@CDefClient@@UEAAXKJ@Z
?OnViewChange@CAdviseSinkImpl@COleCache@@UEAAXKJ@Z
?OnWalkInterface@CCtxCall@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?OnWalkInterface@CNullWalker@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?OnWalkInterface@InterfaceWalkerFree@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?OnWalkInterface@SSimpleWalker@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?Open@CExposedStream@@UEAAXPEAVCPropertySetStream@@PEAJ@Z
?Open@CNFFMappedStream@@UEAAXPEAVCPropertySetStream@@PEAJ@Z
?Open@CPropertyBagEx@@UEAAJPEAUIUnknown@@PEBGU_GUID@@KAEBU3@PEAPEAU2@@Z
?Open@CPropertySetStorage@@UEAAJAEBU_GUID@@KPEAPEAUIPropertyStorage@@@Z
?Open@CPropertySetStream@@QEAAXPEBU_GUID@@0KPEAKGKPEAJ@Z
?Open@CPropertyStorage@@QEAAJPEAUIStorage@@AEBU_GUID@@KK@Z
?Open@CPropertyStorage@@QEAAJPEAUIStream@@AEBU_GUID@@KKH@Z
?Open@CPubMappedStream@@QEAAXPEAVCPropertySetStream@@PEAJ@Z
?Open@CSSMappedStream@@UEAAXPEAVCPropertySetStream@@PEAJ@Z
?OpenCatalog@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?OpenClassesRootSpecial@CEnumClassesOfCategories@@AEAAJKPEAPEAUHKEY__@@@Z
?OpenControlStream@CNtfsStorage@@IEAAJH@Z
?OpenEntry@CExposedDocFile@@AEAAJPEBVCDfName@@KKPEAPEAX@Z
?OpenHKey@CEnumFmt@@UEAAJPEAPEAUHKEY__@@@Z
?OpenKeyFromUserHive@CEnumClassesOfCategories@@AEAAJPEAXPEBGKPEAPEAUHKEY__@@@Z
?OpenNtFileHandle@CNtfsStorage@@CAJAEBU_UNICODE_STRING@@PEAX1KKHPEAPEAX@Z
?OpenNtStream@CNtfsStorage@@AEAAJAEBVCNtfsStreamName@@KKHPEAPEAX@Z
?OpenOrCreateStream@CStmBufWrite@@QEAAJPEAUIStorage@@PEBG@Z
?OpenPropStg@CPropertyBagEx@@AEAAJK@Z
?OpenSharedFileMapping@@YAPEAXPEAGKPEAPEAXK@Z
?OpenStorage@CExpParameterValidate@@SAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CExposedDocFile@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CNtfsStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CNtfsStorageForPropSetStg@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CSimpStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStream@CExpParameterValidate@@SAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CExposedDocFile@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CNtfsStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CNtfsStorageForPropSetStg@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CSimpStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CSimpStorageOpen@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CStmBufRead@@QEAAJPEAUIStorage@@PEBG@Z
?OpenThreadTokenAtLevel@@YAJKPEAPEAX@Z
?OpenUpdateStream@CNFFMappedStream@@AEAAJH@Z
?OurRtlAllocateStringRoutine@?A0xbda54057@@YAPEAX_K@Z
?OurRtlFreeStringRoutine@?A0xbda54057@@YAXPEAX@Z
?OurRtlReallocateStringRoutine@?A0xbda54057@@YAPEAX_KPEAX@Z
?OutCopy@CallFrame@@QEAAXPEAE0PEBE@Z
?OutInit@CallFrame@@QEAAXPEAV1@PEAPEAE1PEBE@Z
?OutZero@CallFrame@@QEAAXPEAEPEBEH@Z
?OverrideTargetContext@ContextInfo@@UEAAJAEBU_GUID@@@Z
?PBToSafeArray@@YAJKPEBEPEAPEAUtagSAFEARRAY@@@Z
?PCAFireClassNotRegEvent@@YAXU_GUID@@@Z
?PCAIsCLSIDDeprecated@@YAHPEAU_GUID@@@Z
?PIDChainToIDObject@CIDObject@@SAPEAV1@PEAUSHashChain@@@Z
?PadStream@CObjectContext@@QEAAHAEAPEAUIStream@@@Z
?ParseClassID@@YAJPEBGPEAKPEAU_GUID@@@Z
?ParseDisplayName@CAntiMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CClassMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CFileMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CObjrefMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@COleItemContainerImpl@CDdeObject@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseStringArrayForUniques@CMachineNamesHelper@@CAXKPEAPEAGP6AXPEAGPEAX@Z2@Z
?ParseStringBindingsFromDSA@CMachineNamesHelper@@CAXPEAUtagDUALSTRINGARRAY@@P6AXPEAXPEAUtagSTRINGBINDING@@K@Z1@Z
?PartialWrite@CTransactedStream@@AEAAJKKPEBEGG@Z
?PeekMessageExceptionFilter@@YAJPEAU_EXCEPTION_POINTERS@@@Z
?PeekOneMessage@@YAHPEAUtagMSG@@PEAUHWND__@@I@Z
?PeekRPCAndDDEMessage@CCliModalLoop@@AEAAHXZ
?PeekTillDone@@YAXPEAUHWND__@@@Z
?Peel@@YAHPEAGGPEAPEAGK@Z
?PendingApplication@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?PendingInit@CSurrogateProcessActivator@@UEAAXXZ
?PerformCallback@@YAJPEAVCObjectContext@@P6AJPEAX@Z1AEBU_GUID@@KPEAUIUnknown@@@Z
?PerformReaderSignaling@EventPoolEntry@@QEAAKXZ
?PersistDataObjectToHGlobal@@YAPEAXPEAUIDataObject@@@Z
?PingSCM@CSurrogateProcessActivator@@CAKPEAX@Z
?Poke@CDdeObject@@AEAAJGPEAX@Z
?PokeData@CDefClient@@QEAAJPEAUHWND__@@GPEAX@Z
?PokeStdItems@CDefClient@@QEAAJPEAUHWND__@@GPEAXH@Z
?Pop@?$LockingStack@UDISPATCH_CLIENT_FRAME@@@@UEAAPEAUDISPATCH_CLIENT_FRAME@@XZ
?Pop@?$LockingStack@UDISPATCH_SERVER_FRAME@@@@UEAAPEAUDISPATCH_SERVER_FRAME@@XZ
?Pop@?$LockingStack@VCallFrame@@@@UEAAPEAVCallFrame@@XZ
?Pop@CCompositeMonikerEnum@@AEAAPEAUIMoniker@@XZ
?PopDc@CMfObject@@AEAAHXZ
?PopServiceDomainContext@@YAJPEAUtagContextStackNode@@@Z
?PostAckToClient@@YAHPEAUHWND__@@0GK@Z
?PostCallToSTA@OXIDEntry@@QEAAJPEAVCMessageCall@@@Z
?PostMessageToClient@@YAHPEAUHWND__@@I_K_J@Z
?PostMessageToClientWithReply@@YAHPEAUHWND__@@I_K_JI@Z
?PostReleaseRifRef@@YAJPEAUIRemUnknown@@PEAVOXIDEntry@@GPEAUtagREMINTERFACEREF@@PEAUIUnknown@@@Z
?PostSysCommand@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEBDHH@Z
?PrClosePropertySet@@YAJPEAVCPropertySetStream@@@Z
?PrCreatePropertySet@@YAJPEAVIMappedStream@@GPEBU_GUID@@1PEAVPMemoryAllocator@@KPEAKPEAG3PEAPEAVCPropertySetStream@@@Z
?PrEnumerateProperties@@YAJPEAVCPropertySetStream@@KPEAK1QEAUtagPROPSPEC@@QEAUtagSTATPROPSTG@@@Z
?PrFlushPropertySet@@YAJPEAVCPropertySetStream@@@Z
?PrPropertySetNameToGuid@@YAJKQEBGPEAU_GUID@@@Z
?PrQueryProperties@@YAJPEAVCPropertySetStream@@KPEBUtagPROPSPEC@@PEAK2PEAUtagPROPVARIANT@@2@Z
?PrQueryPropertyNames@@YAJPEAVCPropertySetStream@@KPEBKQEAPEAG@Z
?PrQueryPropertySet@@YAJPEAVCPropertySetStream@@PEAUtagSTATPROPSETSTG@@@Z
?PrSetProperties@@YAJPEAVCPropertySetStream@@KKQEBUtagPROPSPEC@@PEAGQEAKPEAPEAU_INDIRECTPROPERTY@@QEBUtagPROPVARIANT@@@Z
?PrSetPropertyNames@@YAJPEAVCPropertySetStream@@KPEBKQEBQEBG@Z
?PrSetPropertySetClassId@@YAJPEAVCPropertySetStream@@PEBU_GUID@@@Z
?PreFillKnownIIDs@CRIFTable@@AEAAPEAUtagRIFEntry@@AEBU_GUID@@@Z
?PrepareCtxEntries@CtxEntry@@SAXPEAV1@K@Z
?PrepareForDestruction@CPolicySet@@QEAAXXZ
?PrepareForDestruction@CStdWrapper@@QEAAXPEAVCPolicySet@@@Z
?PrepareForDestruction@IFaceEntry@@QEAAXXZ
?PrepareForOverwrite@CPubDocFile@@IEAAJXZ
?PrepareForRetry@CCtxHook@@QEAAXPEAVCCtxCall@@@Z
?PrepareWrapperForDestruction@@YAJPEAX@Z
?PreventDisconnect@CStdMarshal@@QEAAJXZ
?PreventPendingDisconnect@CStdMarshal@@QEAAJXZ
?PrimeEventPool@EventPoolEntry@@SAHXZ
?PrincipalName@CSSL@@SAJPEBU_CERT_CONTEXT@@PEAPEAG@Z
?PrintFriendlyDebugMessage@@YAXPEAU_EXCEPTION_POINTERS@@PEAXHPEBD@Z
?PriorDisconnectCompleted@CCtxConnectionManager@@QEAA_NXZ
?PrivDragDrop@@YAJPEAUHWND__@@W4tagDRAGOP@@PEAXPEAUIDataObject@@KU_POINTL@@PEAK0PEAPEAX@Z
?PrivDragDrop@CPrivDragDrop@@UEAAJPEAUHWND__@@PEAUtagInterfaceData@@KKU_POINTL@@PEAKKPEAUIDataObject@@0@Z
?PrivGetObjectContext@@YAJAEBU_GUID@@PEAPEAX@Z
?PrivGetReturnActivationProperties@ActivationPropertiesIn@@UEAAJPEAPEAUIPrivActivationPropertiesOut@@@Z
?PrivHeapAlloc@@YAPEAXPEAXK_K@Z
?PrivHeapFree@@YAHPEAXK0@Z
?PrivMemAlloc8@@YAPEAX_K@Z
?PrivSetServerHRESULTInTLS@@YAJPEAXJ@Z
?PrivateCleanup@CStdWrapper@@CAXXZ
?PrivateCopyProxy@CStdMarshal@@QEAAJPEAUIUnknown@@PEAPEAU2@@Z
?PrivateMemAlloc@@YAPEAX_K@Z
?PrivateMemFree@@YAXPEAX@Z
?ProbeStreamToDetermineIfWriteable@CPropertyStorage@@AEAAHXZ
?ProcessCleanup@CRWLock@@SAXXZ
?ProcessCleanup@EventPoolEntry@@SAXXZ
?ProcessCustomEPIfNecessary@@YAJGPEAH@Z
?ProcessInit@CRWLock@@SAHXZ
?ProcessInitialize@@YAJXZ
?ProcessUninitTlsCleanup@@YAXXZ
?ProcessUninitialize@@YAXXZ
?PropDupCLSID@@YAPEAU_GUID@@QEAU1@@Z
?PropDupClipData@@YAPEAUtagCLIPDATA@@PEBU1@@Z
?PropDupStr@@YAPEADPEBD@Z
?PropDupWStr@@YAPEAGPEBG@Z
?PropOkToMarshal@CObjectContext@@QEAAHAEAPEAUtagContextProperty@@K@Z
?PropVariantChangeType@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?PropertyLengthNoEH@@YAKPEBUtagSERIALIZEDPROPERTYVALUE@@KPEAJ@Z
?PropertyRequiresConversion@CPropertyBagEx@@AEAAHG@Z
?PropertyToVariant_BufferToStream@@YAJPEBEIPEAPEAUIStream@@@Z
?PropertyToVariant_FixIndirect@@YAJPEBEKPEAUtagPROPVARIANT@@PEAVPMemoryAllocator@@@Z
?PropertyToVariant_Wrapper@@YAKPEBUtagSERIALIZEDPROPERTYVALUE@@KIPEAVPMemoryAllocator@@IPEAUtagPROPVARIANT@@PEAKPEAHPEAJ@Z
?PrototypeExists@ContextInfo@@UEAAJPEAH@Z
?ProxyInitialize@@YAJPEAU__MIDL_ICallFrame_0004@@PEAUMarshallingChannel@@PEAU_RPC_MESSAGE@@PEAU_MIDL_STUB_MESSAGE@@PEBU_MIDL_STUB_DESC@@K@Z
?ProxyPreCheck@DISPATCH_CLIENT_FRAME@@QEAAJXZ
?ProxyToBindingHandle@CRpcOptions@@AEAAJPEAXPEAPEAVCChannelHandle@@HH@Z
?PrpConvertToMultiByte@@YAXPEBGKGPEAPEADPEAKPEAJ@Z
?PrpConvertToUnicode@@YAXPEBDKGPEAPEAGPEAKPEAJ@Z
?Pull@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAJPEAEKPEAK@Z
?Pull@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAJPEAJKPEAK@Z
?Pull@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAJPEANKPEAK@Z
?PullDone6@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEKPEAK@Z
?PullDone6@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJKPEAK@Z
?PullDone6@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANKPEAK@Z
?PullStateTransition@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJK@Z
?PullStateTransition@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJK@Z
?PullStateTransition@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJK@Z
?Push@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAJPEAEK@Z
?Push@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAJPEAJK@Z
?Push@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAJPEANK@Z
?Push@?$LockingStack@UDISPATCH_CLIENT_FRAME@@@@UEAAXPEAUDISPATCH_CLIENT_FRAME@@@Z
?Push@?$LockingStack@UDISPATCH_SERVER_FRAME@@@@UEAAXPEAUDISPATCH_SERVER_FRAME@@@Z
?Push@?$LockingStack@VCallFrame@@@@UEAAXPEAVCallFrame@@@Z
?Push@CCompositeMonikerEnum@@AEAAHPEAVCCompositeMoniker@@@Z
?Push@CleanupStack@@QEAAJPEAXPEAVPMemoryAllocator@@@Z
?PushDc@CMfObject@@AEAAHXZ
?PushDone5@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEK@Z
?PushDone5@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJK@Z
?PushDone5@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANK@Z
?PushSList@@YAXPEAUtagPageEntry@@0PEAVCOleStaticMutexSem@@@Z
?PushServiceDomainContext@@YAJAEBUtagContextStackNode@@@Z
?PushStateTransition@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJK@Z
?PushStateTransition@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJK@Z
?PushStateTransition@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJK@Z
?PutExtent@CExtentList@@QEAAJPEBU_MONIKEREXTENT@@@Z
?PutPropVariantDataIntoSafeArray@@YAJPEAUtagSAFEARRAY@@PEBUtagPROPVARIANT@@H@Z
?PutStreamACLIntoSecDesc@@YAJPEAUtagSTREAM_ACL@@PEAUtagACL_DESCRIPTOR@@@Z
?PutUNICODEProgID@@YAJPEAVCompObjStmData@@PEAG@Z
?PutUNICODEUserType@@YAJPEAVCompObjStmData@@PEAG@Z
?QIHelper@CObjectContext@@QEAAJAEBU_GUID@@PEAPEAXH@Z
?QSortCompare@CMachineNamesHelper@@CAHPEBX0@Z
?Query@CGlobalOptions@@UEAAJKPEA_K@Z
?Query@CRpcOptions@@UEAAJPEAUIUnknown@@KPEA_K@Z
?QueryBlanket@CChannelObject@@UEAAJPEAUIUnknown@@PEAK1PEAPEAG11PEAPEAX1@Z
?QueryBlanket@CClientCallMgr@@UEAAJPEAUIUnknown@@PEAK1PEAPEAG11PEAPEAX1@Z
?QueryBlanket@CClientSecurity@@UEAAJPEAUIUnknown@@PEAK1PEAPEAG11PEAPEAX1@Z
?QueryBlanket@CServerCallMgr@CRpcChannelBuffer@@UEAAJPEAK0PEAPEAG00PEAPEAX0@Z
?QueryBlanket@CServerSecurity@@UEAAJPEAK0PEAPEAG00PEAPEAX0@Z
?QueryBlanketFromChannel@@YAJPEAVCRpcChannelBuffer@@PEAK1PEAPEAG11PEAPEAX1@Z
?QueryDragDropActive@CRpcResolver@@QEAAJPEAH@Z
?QueryForIStream@@YAJPEAUIUnknown@@PEAPEAUIStream@@@Z
?QueryFormatSupport@CCacheNode@@AEAAHPEAUIDataObject@@@Z
?QueryGetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDefLink@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDefObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryInterface@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationProperties@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationProperties@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationProperties@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesIn@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesIn@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesIn@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesIn@@WCAA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesIn@@WCAI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesIn@@WCBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesOut@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesOut@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesOut@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesOut@@WCAA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ActivationPropertiesOut@@WCAI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAddrControl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAddrControl@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAddrExclusionList@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdvSinkImpl@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdvSinkImpl@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdviseSinkImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdviseSinkImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAggId@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAntiMoniker@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAntiMoniker@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAsyncCall@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAsyncCall@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAsyncConnection@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAsyncUnknownMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAsyncUnknownMgr@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBaseMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBaseMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindCtx@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindStatusCallback@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheDataImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheUnkImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheViewImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CChannelObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CChannelObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CChannelObject@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CChannelObject@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CChannelObject@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClientCall@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClientCall@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClientCallMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClientCallMgr@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClientCallMgr@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClientCallMgr@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComActivator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComActivator@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComActivator@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComApartment@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCat@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCat@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCatalog@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCatalog@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCatalog@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCatalog@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCatalog@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCatalog@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComClassInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComClassInfo@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComClassInfo@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComClassInfo@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComNoClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComNoClassInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComNoClassInfo@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComProcessInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComProcessInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComProcessInfo@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComRegCatalog@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComSxSCatalog@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComSxSClassInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComSxSClassInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComSxSClassInfo@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMoniker@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMoniker@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMonikerEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CConnectionPoint@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CContextSwitcher@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CContinue@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCtxCall@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCtxChnl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCtxChnl@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCtxChnl@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCtxHook@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDAHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDataObjectImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDebugChannelHook@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDebugEventFire@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDebugEventFireCF@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDelayUnlockContainer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDestObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDestObjectWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDestObjectWrapper@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDllFnPtrMoniker@CClassCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDllHost@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDllHost@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDocfileUnmarshalFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDocfileUnmarshalFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDragDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDropTarget@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEMfObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumCategories@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumCategoriesOfClass@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumClassesOfCategories@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumContextProps@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFmt@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFormatEtc@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFormatEtcDataArray@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATDATA@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATPROPBAG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATPROPSETSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATPROPSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumStatData@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumVerb@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CErrorChannelHook@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CErrorObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CErrorObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CErrorObject@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExpParameterValidate@@SAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WDI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WEA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WEI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WFA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedIterator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedIterator@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFillLockBytes@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFillLockBytes@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFillLockBytes@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFmCtrlUnknown@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFreeMarshaler@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGIPMessageParam@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGIPTable@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGenObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGlobalOptions@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGlobalOptions@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CIDObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CImpAccessControl@COAccessControl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CImpAccessControl@COAccessControl@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInnerUnk@CComCat@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInprocSystemActivator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInterfaceFromWindowProp@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInternalUnk@CStdIdentity@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInternalUnk@CStdIdentity@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CItemMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CItemMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLocalMachineNames@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMREInnerUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CManualResetEvent@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CManualResetEvent@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMemBytes@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMemStm@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMfObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMonikerFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMonikerFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNFFMappedStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNFFTreeMutex@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNdrStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNoEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsEnumSTATSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorage@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorage@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorageForPropSetStg@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNullWalker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COAHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COAccessControl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COLEDragDropHelper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjServer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjectContext@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleClientSiteImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleItemContainerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleObjectImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPackagerMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPersistStgImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPipePSFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPipeProxyImp@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPolicySet@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivDragDrop@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CAsyncUnknownMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CClientCallMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertyBagEx@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertyBagEx@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertySetStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertyStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPunkForRelease@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRemoteUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRotMonikerEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcCall@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcCall@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcCall@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcChannelBuffer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcChannelBuffer@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcChannelBuffer@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcHelper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcStubBufferImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRunningObjectTable@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRunningObjectTable@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSCInnerUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSSMappedStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSTInnerUnknown@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerCallMgr@CRpcChannelBuffer@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerSecurity@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerSecurity@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CServerSecurity@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpEnumSTATSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStorage@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStorage@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSmAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStackWalker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStackWalkerStack@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStackWalkerSymbol@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStaticWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdEvent@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdEvent@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdIdentity@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdIdentity@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdIdentity@@WBAI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdIdentity@@WBBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdIdentity@@WOA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdIdentity@@WPA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStreamOnMessage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSurrogateProcessActivator@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSurrogateProcessActivator@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSurrogateProcessActivator@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSynchronizeContainer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CTrackingCompositeMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CTrackingFileMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnknownImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnknownImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUrlMonWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CallFrame@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CallFrame@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ComPsClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ComPsClassFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ContextInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ContextInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ContextInfo@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CpUnkMoniker@CClassCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DDE_CHANNEL@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DDE_CHANNEL@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DefaultIBindStatusCallback@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@GenericStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@GenericStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InprocActpropsUnmarshaller@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InstanceInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InstanceInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InstantiationInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InstantiationInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InterfaceWalkerFree@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_FRAME@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WDI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@MarshallingChannel@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@OpaqueDataInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@OpaqueDataInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@OutSerializer@ActivationPropertiesOut@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@POSTRELRIFREF@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SSimpleWalker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ScmReplyInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ScmReplyInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ScmRequestInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ScmRequestInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SecurityInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SecurityInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SecurityInfo@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ServerLocationInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ServerLocationInfo@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SpecialProperties@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SpecialProperties@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterfaceImpl@CAsyncUnknownMgr@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterfaceImpl@CClientCallMgr@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInternalInterface@CInternalUnk@CStdIdentity@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryMultipleInterfaces@CAggId@@UEAAJKPEAUtagMULTI_QI@@@Z
?QueryMultipleInterfaces@CInternalUnk@CStdIdentity@@UEAAJKPEAUtagMULTI_QI@@@Z
?QueryMultipleInterfacesLocal@CInternalUnk@CStdIdentity@@QEAAGKPEAUtagMULTI_QI@@PEAPEAU3@PEAU_GUID@@PEAK@Z
?QueryPIDForActivation@CRpcResolver@@QEAAJU_GUID@@KPEAK@Z
?QueryPropertyNames@CPropertySetStream@@QEAAEKPEBKQEAPEAGPEAJ@Z
?QueryPropertySet@CPropertySetStream@@QEBAXPEAUtagSTATPROPSETSTG@@PEAJ@Z
?QueryPropid@CPropertySetStream@@QEAAKPEBGPEAJ@Z
?QueryRemapped@CFat@@QEAAJK@Z
?QueryRemoteInterfaces@CStdMarshal@@QEAAJGPEAU_GUID@@PEAUtagSQIResult@@@Z
?QueryRevokeClassFactory@CDDEServer@@QEAAHXZ
?QueueMessage@CComApartment@@QEAAJIPEAVIMessageParam@@@Z
?RPCSStoOLE32SecurityCallback@@YAJPEAX0@Z
?RWLockFailfast@CRWLock@@SAXXZ
?RWResetReaderSignal@CRWLock@@AEAAXXZ
?RWSetReaderSignal@CRWLock@@AEAAXXZ
?RWSetWriterSignal@CRWLock@@AEAAXXZ
?RWWaitForReaderSignal@CRWLock@@AEAAKKAEAH@Z
?RWWaitForWriterSignal@CRWLock@@AEAAKKAEAH@Z
?ReOpen@CExposedStream@@UEAAXPEAPEAXPEAJ@Z
?ReOpen@CNFFMappedStream@@UEAAXPEAPEAXPEAJ@Z
?ReOpen@CPropertySetStream@@QEAAKPEAJ@Z
?ReOpen@CPubMappedStream@@QEAAXPEAPEAXPEAJ@Z
?ReOpen@CSSMappedStream@@UEAAXPEAPEAXPEAJ@Z
?Reactivate@CIDObject@@QEAAJPEAUIUnknown@@@Z
?Reactivate@CStdMarshal@@QEAAXPEAUIUnknown@@@Z
?Reactivate@CStdWrapper@@QEAAXPEAUIUnknown@@@Z
?Read@CExpParameterValidate@@SAJPEAXKPEAK@Z
?Read@CExposedStream@@UEAAJPEAXKPEAK@Z
?Read@CMemStm@@UEAAJPEAXKPEAK@Z
?Read@CNFFMappedStream@@QEAAXPEAXKPEAK@Z
?Read@CNdrStream@@UEAAJPEAXKPEAK@Z
?Read@CNtfsStream@@UEAAJPEAXKPEAK@Z
?Read@CPropertyBagEx@@UEAAJPEBGPEAUtagVARIANT@@PEAUIErrorLog@@@Z
?Read@CSimpStream@@UEAAJPEAXKPEAK@Z
?Read@CSimpStreamOpen@@UEAAJPEAXKPEAK@Z
?Read@CStmBufRead@@QEAAJPEAXK@Z
?Read@CStreamOnMessage@@UEAAJPEAXKPEAK@Z
?Read@GenericStream@@UEAAJPEAXKPEAK@Z
?ReadACLFromStream@@YAJPEAUIStream@@PEAUtagPCB@@PEAUtagACL_DESCRIPTOR@@@Z
?ReadAnsiStringStream@@YAJPEAUIStream@@AEAPEADAEAG@Z
?ReadArrayWorkerNoSwap@SerializedPropertyReader@@AEAAJPEAXKK@Z
?ReadAt@CDirectStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt@CExpParameterValidate@@SAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CFileStream@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CMemBytes@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CPubStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt@CTransactedStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt@PSStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt_FromFile@CFileStream@@AEAAJ_KPEAXKPEAK@Z
?ReadAt_FromMap@CFileStream@@AEAAJKPEAXKPEAK@Z
?ReadCompObjStm@@YAJPEAUIStorage@@PEAVCompObjStmData@@@Z
?ReadFileStreamInfo@CNtfsSTATSTGArray@@AEAAJPEAX@Z
?ReadHYPER@CarefulBufferReader@@QEAA_JXZ
?ReadHYPERNA@CarefulBufferReader@@QEAA_JXZ
?ReadKey@ComVerifierSettings@@CAHPEBGH@Z
?ReadLONGNA@CarefulBufferReader@@QEAAJXZ
?ReadLong@CStmBufRead@@QEAAJPEAJ@Z
?ReadMap@CDeltaList@@AEAAJPEAKK0@Z
?ReadMultiple@CPropertyBagEx@@UEAAJKQEBQEBGQEAUtagPROPVARIANT@@PEAUIErrorLog@@@Z
?ReadMultiple@CPropertyStorage@@UEAAJKQEBUtagPROPSPEC@@QEAUtagPROPVARIANT@@@Z
?ReadObjRef@@YAJPEAUIStream@@AEAUtagOBJREF@@@Z
?ReadObjRefExtension@@YAJPEAUIStream@@AEAUtagOBJREF@@@Z
?ReadOleKey@ComVerifierSettings@@CAHPEBGH@Z
?ReadPropertyNames@CPropertyStorage@@UEAAJKQEBKQEAPEAG@Z
?ReadRegistryStringValue@@YAJPEAUHKEY__@@PEBG1PEAGK@Z
?ReadSafeArray@SerializedPropertyReader@@QEAAJPEAKPEAPEBUtagSAFEARRAYBOUND@@@Z
?ReadStreamHdrAndProcessExtents@CObjectContext@@QEAAJPEAUIStream@@AEAUtagCONTEXTHEADER@@@Z
?ReadULONGNA@CarefulBufferReader@@QEAAKXZ
?ReadUSHORTNA@CarefulBufferReader@@QEAAGXZ
?ReadVarType@SerializedPropertyReader@@QEAAJPEAG@Z
?ReadWorkerNoSwap@SerializedPropertyReader@@AEAAJPEAXK@Z
?Realloc@CErrorSmAllocator@@UEAAPEAXPEAX_K@Z
?Realloc@CSmAllocator@@UEAAPEAXPEAX_K@Z
?Receive2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive2@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CAptRpcChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CAptRpcChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?ReconnectProxies@CStdMarshal@@QEAAXXZ
?RecursiveRegDeleteKey@@YAJPEAUHKEY__@@PEAD@Z
?RecycleLockEntry@LockEntry@@QEAAXXZ
?Reduce@CBaseMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CClassMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CCompositeMoniker@@EEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CFileMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CPackagerMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?RefreshComPlusEnabled@CComCatalog@@UEAAJXZ
?RefreshNames@CLocalMachineNames@@UEAAJXZ
?RefreshNeeded@CComClassInfo@@EEAAJPEAUIUserToken@@PEAH@Z
?RefreshNeeded@CComNoClassInfo@@UEAAJPEAUIUserToken@@PEAH@Z
?RefreshNeeded@CComProcessInfo@@UEAAJPEAUIUserToken@@PEAH@Z
?RegHelpResumeImpersonate@@YAXPEAX@Z
?RegHelpSuspendImpersonate@@YAJPEAPEAX@Z
?RegReadDefValue@@YAJPEAUHKEY__@@PEAGPEAPEAG@Z
?Register@AppRegistration@@QEAAJXZ
?Register@CRunningObjectTable@@UEAAJKPEAUIUnknown@@PEAUIMoniker@@PEAK@Z
?Register@ClassRegistration@@QEAAJXZ
?RegisterApartmentActivator@@YAJAEAK@Z
?RegisterAsync@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterAsync@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterAsync@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterAuthnServices@@YAJKPEAUtagSOLE_AUTHENTICATION_SERVICE@@@Z
?RegisterCategories@CComCat@@UEAAJKQEAUtagCATEGORYINFO@@@Z
?RegisterClassImplCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?RegisterClassReqCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?RegisterClassXXXCategories@CComCat@@AEAAJAEBU_GUID@@KQEAU2@PEBG@Z
?RegisterClientInterface@CRIFTable@@AEAAJPEAUtagRIFEntry@@AEBU_GUID@@@Z
?RegisterContainerBound@@YAJPEAUIBindCtx@@PEAUIOleItemContainer@@@Z
?RegisterDcomInterfaces@@YAJXZ
?RegisterForDisconnect@CStdMarshal@@QEAAJPEAUIDisconnectSink@@PEAXPEAPEAX@Z
?RegisterInterface@CRIFTable@@QEAAJAEBU_GUID@@HPEAUIRpcStubBuffer@@PEAUtagRIFEntry@@@Z
?RegisterInterfaceInGlobal@CGIPTable@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAK@Z
?RegisterInterfaceInGlobalHlp@CGIPTable@@QEAAJPEAUIUnknown@@AEBU_GUID@@KPEAK@Z
?RegisterInterfaceMapping@CRIFTable@@AEAAJAEBU_GUID@@0KPEAUtagRIFEntry@@@Z
?RegisterItem@CDefClient@@AEAAJPEAGPEAPEAV1@H@Z
?RegisterLrpc@@YAJXZ
?RegisterOXIDAndOIDs@OXIDEntry@@QEAAJPEAKPEA_K@Z
?RegisterObjectBound@CBindCtx@@UEAAJPEAUIUnknown@@@Z
?RegisterObjectParam@CBindCtx@@UEAAJPEAGPEAUIUnknown@@@Z
?RegisterOleWndClass@@YAJXZ
?RegisterPSClsid@CRIFTable@@QEAAJAEBU_GUID@@0@Z
?RegisterServer@CClassCache@@SAJAEBU_GUID@@PEAUIUnknown@@KKPEAK@Z
?RegisterServerInterface@CRIFTable@@AEAAJPEAUtagRIFEntry@@AEBU_GUID@@PEAUIRpcStubBuffer@@@Z
?RegisterSink@Interceptor@@EEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@LEGACY_INTERCEPTOR@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterThreadCleanupCallback@@YAJXZ
?RegisterUnregisterInterface@@YAJHUHREG@@AEBU_GUID@@PEBDPEBGJHH@Z
?RegisterUnregisterProxy@@YAJHPEAUHINSTANCE__@@PEAPEBUtagProxyFileInfo@@PEBU_GUID@@PEAPEBU3@3@Z
?RegisterWindowPropInterface@CRpcResolver@@QEAAJPEAUHWND__@@PEAUtagSTDOBJREF@@PEAUtagOXID_INFO@@HPEA_K@Z
?RelativePathTo@CAntiMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CBaseMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CClassMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CCompositeMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CFileMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CItemMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CObjrefMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CPackagerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CPointerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAKH@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAKH@Z
?Release@?$CArray@VCCacheNode@@@@QEAAKXZ
?Release@?$CArray@VCFormatEtc@@@@QEAAKXZ
?Release@?$CArray@VCStatData@@@@QEAAKXZ
?Release@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@UEAAKXZ
?Release@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@UEAAKXZ
?Release@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@UEAAKXZ
?Release@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAKXZ
?Release@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAKXZ
?Release@ActivationProperties@@UEAAKXZ
?Release@ActivationProperties@@W7EAAKXZ
?Release@ActivationProperties@@WBA@EAAKXZ
?Release@ActivationPropertiesIn@@UEAAKXZ
?Release@ActivationPropertiesIn@@W7EAAKXZ
?Release@ActivationPropertiesIn@@WBA@EAAKXZ
?Release@ActivationPropertiesIn@@WCAA@EAAKXZ
?Release@ActivationPropertiesIn@@WCAI@EAAKXZ
?Release@ActivationPropertiesIn@@WCBA@EAAKXZ
?Release@ActivationPropertiesOut@@UEAAKXZ
?Release@ActivationPropertiesOut@@W7EAAKXZ
?Release@ActivationPropertiesOut@@WBA@EAAKXZ
?Release@ActivationPropertiesOut@@WCAA@EAAKXZ
?Release@ActivationPropertiesOut@@WCAI@EAAKXZ
?Release@CAddrControl@@UEAAKXZ
?Release@CAddrControl@@W7EAAKXZ
?Release@CAddrExclusionList@@UEAAKXZ
?Release@CAdvSinkImpl@CDefLink@@UEAAKXZ
?Release@CAdvSinkImpl@CDefObject@@UEAAKXZ
?Release@CAdviseSinkImpl@CDefClient@@UEAAKXZ
?Release@CAdviseSinkImpl@COleCache@@UEAAKXZ
?Release@CAggId@@UEAAKXZ
?Release@CAsyncCall@@UEAAKXZ
?Release@CAsyncCall@@W7EAAKXZ
?Release@CAsyncConnection@@UEAAKXZ
?Release@CAsyncUnknownMgr@@UEAAKXZ
?Release@CAsyncUnknownMgr@@W7EAAKXZ
?Release@CBaseMoniker@@UEAAKXZ
?Release@CBaseMoniker@@W7EAAKXZ
?Release@CBindCtx@@UEAAKXZ
?Release@CBindStatusCallback@@UEAAKXZ
?Release@CBindStatusCallback@@W7EAAKXZ
?Release@CCacheDataImpl@COleCache@@UEAAKXZ
?Release@CCacheUnkImpl@COleCache@@UEAAKXZ
?Release@CCacheViewImpl@COleCache@@UEAAKXZ
?Release@CChannelHandle@@QEAAXXZ
?Release@CChannelObject@@UEAAKXZ
?Release@CChannelObject@@W7EAAKXZ
?Release@CChannelObject@@WBA@EAAKXZ
?Release@CChannelObject@@WBI@EAAKXZ
?Release@CChannelObject@@WCA@EAAKXZ
?Release@CClassEntry@CClassCache@@UEAAXXZ
?Release@CClassMoniker@@UEAAKXZ
?Release@CClassMoniker@@W7EAAKXZ
?Release@CClassMoniker@@WBA@EAAKXZ
?Release@CClientCall@@UEAAKXZ
?Release@CClientCall@@W7EAAKXZ
?Release@CClientCallMgr@@UEAAKXZ
?Release@CClientCallMgr@@W7EAAKXZ
?Release@CClientCallMgr@@WBA@EAAKXZ
?Release@CClientCallMgr@@WBI@EAAKXZ
?Release@CClipDataObject@@UEAAKXZ
?Release@CComActivator@@UEAAKXZ
?Release@CComActivator@@W7EAAKXZ
?Release@CComActivator@@WBA@EAAKXZ
?Release@CComApartment@@UEAAKXZ
?Release@CComCat@@UEAAKXZ
?Release@CComCat@@W7EAAKXZ
?Release@CComCatalog@@UEAAKXZ
?Release@CComCatalog@@W7EAAKXZ
?Release@CComCatalog@@WBA@EAAKXZ
?Release@CComCatalog@@WBI@EAAKXZ
?Release@CComCatalog@@WCA@EAAKXZ
?Release@CComCatalog@@WCI@EAAKXZ
?Release@CComClassInfo@@UEAAKXZ
?Release@CComClassInfo@@W7EAAKXZ
?Release@CComClassInfo@@WBA@EAAKXZ
?Release@CComClassInfo@@WBI@EAAKXZ
?Release@CComClassInfo@@WCA@EAAKXZ
?Release@CComNoClassInfo@@UEAAKXZ
?Release@CComNoClassInfo@@W7EAAKXZ
?Release@CComNoClassInfo@@WBA@EAAKXZ
?Release@CComProcessInfo@@UEAAKXZ
?Release@CComProcessInfo@@W7EAAKXZ
?Release@CComProcessInfo@@WBA@EAAKXZ
?Release@CComRegCatalog@@UEAAKXZ
?Release@CComSxSCatalog@@UEAAKXZ
?Release@CComSxSClassInfo@@UEAAKXZ
?Release@CComSxSClassInfo@@W7EAAKXZ
?Release@CComSxSClassInfo@@WBA@EAAKXZ
?Release@CCompositeMonikerEnum@@UEAAKXZ
?Release@CConnectionPoint@@UEAAKXZ
?Release@CContextLife@@QEAAXXZ
?Release@CContextList@@QEAAXXZ
?Release@CContextSwitcher@@UEAAKXZ
?Release@CContinue@@UEAAKXZ
?Release@CCtxCall@@UEAAKXZ
?Release@CCtxChnl@@UEAAKXZ
?Release@CCtxChnl@@W7EAAKXZ
?Release@CCtxChnl@@WBA@EAAKXZ
?Release@CCtxConnectionManager@@QEAAKXZ
?Release@CCtxHook@@UEAAKXZ
?Release@CDAHolder@@UEAAKXZ
?Release@CDataObjectImpl@CDdeObject@@UEAAKXZ
?Release@CDdeServerCallMgr@@UEAAKXZ
?Release@CDdeServerCallMgr@@W7EAAKXZ
?Release@CDdeServerCallMgr@@WBA@EAAKXZ
?Release@CDebugChannelHook@@UEAAKXZ
?Release@CDebugEventFire@@UEAAKXZ
?Release@CDebugEventFireCF@@UEAAKXZ
?Release@CDefLink@@UEAAKXZ
?Release@CDefLink@@W7EAAKXZ
?Release@CDefLink@@WBA@EAAKXZ
?Release@CDefLink@@WBI@EAAKXZ
?Release@CDefLink@@WCA@EAAKXZ
?Release@CDefObject@@UEAAKXZ
?Release@CDefObject@@W7EAAKXZ
?Release@CDefObject@@WBA@EAAKXZ
?Release@CDefObject@@WBI@EAAKXZ
?Release@CDefObject@@WCA@EAAKXZ
?Release@CDelayUnlockContainer@@UEAAKXZ
?Release@CDestObject@@UEAAKXZ
?Release@CDestObjectWrapper@@UEAAKXZ
?Release@CDestObjectWrapper@@W7EAAKXZ
?Release@CDfMutex@@QEAAXXZ
?Release@CDllAptEntry@CClassCache@@QEAAJPEAVCFinishObject@CDllPathEntry@2@AEAH@Z
?Release@CDllFnPtrMoniker@CClassCache@@UEAAKXZ
?Release@CDllHost@@UEAAKXZ
?Release@CDllHost@@W7EAAKXZ
?Release@CDllPathEntry@CClassCache@@QEAAJPEAVCFinishObject@12@@Z
?Release@CDocfileUnmarshalFactory@@UEAAKXZ
?Release@CDocfileUnmarshalFactory@@W7EAAKXZ
?Release@CDragDataObject@@UEAAKXZ
?Release@CDropTarget@@UEAAKXZ
?Release@CDualStringArray@@QEAAKXZ
?Release@CEMfObject@@UEAAKXZ
?Release@CEnumCategories@@UEAAKXZ
?Release@CEnumCategoriesOfClass@@UEAAKXZ
?Release@CEnumClassesOfCategories@@UEAAKXZ
?Release@CEnumContextProps@@UEAAKXZ
?Release@CEnumFmt10@@UEAAKXZ
?Release@CEnumFmt@@UEAAKXZ
?Release@CEnumFormatEtc@@UEAAKXZ
?Release@CEnumFormatEtcDataArray@@UEAAKXZ
?Release@CEnumSTATDATA@@UEAAKXZ
?Release@CEnumSTATPROPBAG@@UEAAKXZ
?Release@CEnumSTATPROPSETSTG@@UEAAKXZ
?Release@CEnumSTATPROPSTG@@UEAAKXZ
?Release@CEnumStatData@@UEAAKXZ
?Release@CEnumVerb@@EEAAKXZ
?Release@CErrorChannelHook@@UEAAKXZ
?Release@CErrorObject@@UEAAKXZ
?Release@CErrorObject@@W7EAAKXZ
?Release@CErrorObject@@WBA@EAAKXZ
?Release@CExposedDocFile@@UEAAKXZ
?Release@CExposedDocFile@@W7EAAKXZ
?Release@CExposedDocFile@@WDA@EAAKXZ
?Release@CExposedDocFile@@WDI@EAAKXZ
?Release@CExposedDocFile@@WEA@EAAKXZ
?Release@CExposedDocFile@@WEI@EAAKXZ
?Release@CExposedDocFile@@WFA@EAAKXZ
?Release@CExposedIterator@@UEAAKXZ
?Release@CExposedIterator@@W7EAAKXZ
?Release@CExposedStream@@UEAAKXZ
?Release@CExposedStream@@W7EAAKXZ
?Release@CExposedStream@@WBA@EAAKXZ
?Release@CExposedStream@@WBI@EAAKXZ
?Release@CFileStream@@UEAAKXZ
?Release@CFileStream@@W7EAAKXZ
?Release@CFileStream@@WBA@EAAKXZ
?Release@CFileStream@@WBI@EAAKXZ
?Release@CFillLockBytes@@UEAAKXZ
?Release@CFillLockBytes@@W7EAAKXZ
?Release@CFillLockBytes@@WBA@EAAKXZ
?Release@CFmCtrlUnknown@@EEAAKXZ
?Release@CFreeMarshaler@@UEAAKXZ
?Release@CGIPMessageParam@@UEAAKXZ
?Release@CGIPTable@@UEAAKXZ
?Release@CGenObject@@UEAAKXZ
?Release@CGlobalOptions@@UEAAKXZ
?Release@CGlobalOptions@@W7EAAKXZ
?Release@CIDObject@@UEAAKXZ
?Release@CImpAccessControl@COAccessControl@@UEAAKXZ
?Release@CImpAccessControl@COAccessControl@@W7EAAKXZ
?Release@CInnerUnk@CComCat@@UEAAKXZ
?Release@CInprocSystemActivator@@UEAAKXZ
?Release@CInterfaceFromWindowProp@@UEAAKXZ
?Release@CInternalUnk@CStdIdentity@@UEAAKXZ
?Release@CInternalUnk@CStdIdentity@@W7EAAKXZ
?Release@CLSvrClassEntry@CClassCache@@QEAAJPEAVCFinishObject@12@@Z
?Release@CLUAMoniker@@UEAAKXZ
?Release@CLUAMoniker@@W7EAAKXZ
?Release@CLUAMoniker@@WCI@EAAKXZ
?Release@CLUAMoniker@@WDA@EAAKXZ
?Release@CLocalMachineNames@@UEAAKXZ
?Release@CMREInnerUnknown@@UEAAKXZ
?Release@CMSFPageTable@@QEAAXXZ
?Release@CManualResetEvent@@UEAAKXZ
?Release@CManualResetEvent@@W7EAAKXZ
?Release@CMarshalImplPStream@@UEAAKXZ
?Release@CMemBytes@@UEAAKXZ
?Release@CMemStm@@UEAAKXZ
?Release@CMfObject@@UEAAKXZ
?Release@CMonikerFactory@@UEAAKXZ
?Release@CMonikerFactory@@W7EAAKXZ
?Release@CMutexSem2@@QEAAXXZ
?Release@CNFFMappedStream@@UEAAKXZ
?Release@CNFFTreeMutex@@UEAAKXZ
?Release@CNdrStream@@UEAAKXZ
?Release@CNoEnum@@UEAAKXZ
?Release@CNtfsEnumSTATSTG@@UEAAKXZ
?Release@CNtfsSTATSTGArray@@QEAAXXZ
?Release@CNtfsStorage@@UEAAKXZ
?Release@CNtfsStorage@@W7EAAKXZ
?Release@CNtfsStorage@@WBA@EAAKXZ
?Release@CNtfsStorageForPropSetStg@@UEAAKXZ
?Release@CNtfsStream@@UEAAKXZ
?Release@CNtfsStream@@W7EAAKXZ
?Release@CNullWalker@@UEAAKXZ
?Release@COAHolder@@UEAAKXZ
?Release@COAccessControl@@UEAAKXZ
?Release@COLEDragDropHelper@@UEAAKXZ
?Release@CObjServer@@UEAAKXZ
?Release@CObjectContext@@UEAAKXZ
?Release@CObjectContext@@W7EAAKXZ
?Release@CObjectContext@@WBA@EAAKXZ
?Release@CObjectContext@@WBI@EAAKXZ
?Release@CObjectContext@@WCA@EAAKXZ
?Release@CObjectContext@@WCI@EAAKXZ
?Release@CObjectContext@@WDA@EAAKXZ
?Release@COleCache@@UEAAKXZ
?Release@COleCache@@W7EAAKXZ
?Release@COleCache@@WBA@EAAKXZ
?Release@COleClientSiteImpl@CDefClient@@UEAAKXZ
?Release@COleItemContainerImpl@CDdeObject@@UEAAKXZ
?Release@COleObjectImpl@CDdeObject@@UEAAKXZ
?Release@COleStaticMutexSem@@QEAAXXZ
?Release@CPackagerMoniker@@UEAAKXZ
?Release@CPerContext@@QEAAJXZ
?Release@CPersistStgImpl@CDdeObject@@UEAAKXZ
?Release@CPipePSFactory@@UEAAKXZ
?Release@CPipeProxyImp@@UEAAKXZ
?Release@CPointerMoniker@@UEAAKXZ
?Release@CPointerMoniker@@W7EAAKXZ
?Release@CPointerMoniker@@WCI@EAAKXZ
?Release@CPolicySet@@UEAAKXZ
?Release@CPrivDragDrop@@UEAAKXZ
?Release@CPrivUnknown@CAsyncUnknownMgr@@UEAAKXZ
?Release@CPrivUnknown@CClientCallMgr@@UEAAKXZ
?Release@CPrivUnknown@CDefLink@@UEAAKXZ
?Release@CPrivUnknown@CDefObject@@UEAAKXZ
?Release@CPropertyBagEx@@UEAAKXZ
?Release@CPropertyBagEx@@W7EAAKXZ
?Release@CPropertySetStorage@@UEAAKXZ
?Release@CPropertyStorage@@UEAAKXZ
?Release@CProxyManagerImpl@CDdeObject@@UEAAKXZ
?Release@CPunkForRelease@@UEAAKXZ
?Release@CRefMutexSem@@QEAAKXZ
?Release@CRemoteUnknown@@UEAAKXZ
?Release@CRotMonikerEnum@@UEAAKXZ
?Release@CRpcCall@@UEAAKXZ
?Release@CRpcCall@@W7EAAKXZ
?Release@CRpcCall@@WBA@EAAKXZ
?Release@CRpcChannelBuffer@@UEAAKXZ
?Release@CRpcChannelBuffer@@W7EAAKXZ
?Release@CRpcChannelBuffer@@WBA@EAAKXZ
?Release@CRpcHelper@@UEAAKXZ
?Release@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?Release@CRunningObjectTable@@UEAAKXZ
?Release@CRunningObjectTable@@W7EAAKXZ
?Release@CSCInnerUnknown@@UEAAKXZ
?Release@CSSMappedStream@@UEAAKXZ
?Release@CSTATPROPBAGArray@@QEAAKXZ
?Release@CSTInnerUnknown@@UEAAKXZ
?Release@CSafeSem@@QEAAXXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@UEAAKXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@W7EAAKXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@WBA@EAAKXZ
?Release@CServerCallMgr@CRpcChannelBuffer@@WBI@EAAKXZ
?Release@CServerSecurity@@UEAAKXZ
?Release@CServerSecurity@@W7EAAKXZ
?Release@CServerSecurity@@WBA@EAAKXZ
?Release@CSessionMoniker@@UEAAKXZ
?Release@CSessionMoniker@@W7EAAKXZ
?Release@CSessionMoniker@@WCI@EAAKXZ
?Release@CSimpEnumSTATSTG@@UEAAKXZ
?Release@CSimpStorage@@UEAAKXZ
?Release@CSimpStorage@@W7EAAKXZ
?Release@CSimpStorage@@WBA@EAAKXZ
?Release@CSimpStorageOpen@@UEAAKXZ
?Release@CSimpStorageOpen@@W7EAAKXZ
?Release@CSimpStorageOpen@@WBA@EAAKXZ
?Release@CSimpStream@@UEAAKXZ
?Release@CSimpStream@@W7EAAKXZ
?Release@CSimpStreamOpen@@UEAAKXZ
?Release@CSimpStreamOpen@@W7EAAKXZ
?Release@CSmAllocator@@UEAAKXZ
?Release@CStackWalker@@UEAAKXZ
?Release@CStackWalkerStack@@UEAAKXZ
?Release@CStackWalkerSymbol@@UEAAKXZ
?Release@CStatArray@@QEAAKXZ
?Release@CStaticWrapper@@UEAAKXZ
?Release@CStdClassFactory@@UEAAKXZ
?Release@CStdEvent@@UEAAKXZ
?Release@CStdEvent@@W7EAAKXZ
?Release@CStdIdentity@@UEAAKXZ
?Release@CStdIdentity@@W7EAAKXZ
?Release@CStdIdentity@@WBAI@EAAKXZ
?Release@CStdIdentity@@WBBA@EAAKXZ
?Release@CStdIdentity@@WOA@EAAKXZ
?Release@CStdIdentity@@WPA@EAAKXZ
?Release@CStdWrapper@@UEAAKXZ
?Release@CStmBufRead@@QEAAXXZ
?Release@CStmBufWrite@@QEAAXXZ
?Release@CStreamOnMessage@@UEAAKXZ
?Release@CSurrogateProcessActivator@@UEAAKXZ
?Release@CSurrogateProcessActivator@@WCA@EAAKXZ
?Release@CSurrogateProcessActivator@@WCI@EAAKXZ
?Release@CSurrogateProcessActivator@@WDA@EAAKXZ
?Release@CSynchronizeContainer@@UEAAKXZ
?Release@CTrackingCompositeMoniker@@UEAAKXZ
?Release@CTrackingFileMoniker@@UEAAKXZ
?Release@CUnknownImpl@CDdeObject@@UEAAKXZ
?Release@CUnknownImpl@CDefClient@@UEAAKXZ
?Release@CUrlMonWrapper@@UEAAKXZ
?Release@CWrappedDocFile@@QEAAXXZ
?Release@CallFrame@@UEAAKXZ
?Release@CallFrame@@W7EAAKXZ
?Release@ComPsClassFactory@@UEAAKXZ
?Release@ComPsClassFactory@@W7EAAKXZ
?Release@ContextInfo@@UEAAKXZ
?Release@ContextInfo@@W7EAAKXZ
?Release@ContextInfo@@WCA@EAAKXZ
?Release@CpUnkMoniker@CClassCache@@UEAAKXZ
?Release@CsCatInfo@@UEAAKXZ
?Release@DDE_CHANNEL@@UEAAKXZ
?Release@DDE_CHANNEL@@W7EAAKXZ
?Release@DefaultIBindStatusCallback@@UEAAKXZ
?Release@DefaultIBindStatusCallback@@W7EAAKXZ
?Release@GenericStream@@UEAAKXZ
?Release@GenericStream@@W7EAAKXZ
?Release@InprocActpropsUnmarshaller@@UEAAKXZ
?Release@InstanceInfo@@UEAAKXZ
?Release@InstanceInfo@@W7EAAKXZ
?Release@InstantiationInfo@@UEAAKXZ
?Release@InstantiationInfo@@W7EAAKXZ
?Release@Interceptor@@EEAAKXZ
?Release@Interceptor@@G7EAAKXZ
?Release@Interceptor@@GBA@EAAKXZ
?Release@Interceptor@@GBI@EAAKXZ
?Release@Interceptor@@GCI@EAAKXZ
?Release@InterfaceWalkerFree@@UEAAKXZ
?Release@LEGACY_FRAME@@UEAAKXZ
?Release@LEGACY_INTERCEPTOR@@UEAAKXZ
?Release@LEGACY_INTERCEPTOR@@W7EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WBA@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WBI@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WCA@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WCI@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WDI@EAAKXZ
?Release@MD_INTERFACE@@QEAAKXZ
?Release@MarshallingChannel@@UEAAKXZ
?Release@MarshallingChannel@@W7EAAKXZ
?Release@OpaqueDataInfo@@UEAAKXZ
?Release@OpaqueDataInfo@@W7EAAKXZ
?Release@OutSerializer@ActivationPropertiesOut@@UEAAKXZ
?Release@PBasicEntry@@QEAAXXZ
?Release@POSTRELRIFREF@@UEAAKXZ
?Release@PTSetMember@@QEAAXXZ
?Release@SEMAPHORE@@QEAAXK@Z
?Release@SSimpleWalker@@UEAAKXZ
?Release@ScmReplyInfo@@UEAAKXZ
?Release@ScmReplyInfo@@W7EAAKXZ
?Release@ScmRequestInfo@@UEAAKXZ
?Release@ScmRequestInfo@@W7EAAKXZ
?Release@SecurityInfo@@UEAAKXZ
?Release@SecurityInfo@@W7EAAKXZ
?Release@SecurityInfo@@WBA@EAAKXZ
?Release@Serializer@@QEAAKXZ
?Release@ServerLocationInfo@@UEAAKXZ
?Release@ServerLocationInfo@@W7EAAKXZ
?Release@SpecialProperties@@UEAAKXZ
?Release@SpecialProperties@@W7EAAKXZ
?ReleaseAccess@@YAXPEAUILockBytes@@KK@Z
?ReleaseAccessWithMask@@YAXPEAUILockBytes@@KKK@Z
?ReleaseAllIPIDEntries@CStdMarshal@@AEAAXXZ
?ReleaseAllItems@CDefClient@@QEAAXXZ
?ReleaseBlock@CDeltaList@@AEAAXK@Z
?ReleaseBoundObjects@CBindCtx@@UEAAJXZ
?ReleaseCallback@@YAJPEAX@Z
?ReleaseCapture@CDragOperation@@QEAAXXZ
?ReleaseCatalogObjects@CClassCache@@SAXXZ
?ReleaseClientTableStrong@CStdMarshal@@AEAAJPEAVOXIDEntry@@@Z
?ReleaseConnection@CDefObject@@UEAAKKKH@Z
?ReleaseCtrlUnk@CStdIdentity@@QEAAXXZ
?ReleaseCtxEntry@CStdWrapper@@QEAAPEAVCPolicySet@@PEAVCtxEntry@@@Z
?ReleaseCurrentStream@CSimpStorage@@QEAAXXZ
?ReleaseData@CComActivator@@AEAAXXZ
?ReleaseDataDelegate@CDefLink@@QEAAXXZ
?ReleaseEntry@CApartmentHashTable@@QEAAJPEAUApartmentEntry@@@Z
?ReleaseEntry@CInternalPageAllocator@@QEAAXPEAUtagPageEntry@@@Z
?ReleaseEntry@CPageAllocator@@QEAAXPEAUtagPageEntry@@@Z
?ReleaseEntryList@CInternalPageAllocator@@QEAAXPEAUtagPageEntry@@0@Z
?ReleaseEntryList@CPageAllocator@@QEAAXPEAUtagPageEntry@@0@Z
?ReleaseEntryPtr@CGIPTable@@AEAAXPEAUtagGIPEntry@@@Z
?ReleaseFuncDescs@@YAJGPEAUtagMethodInfo@@@Z
?ReleaseGetFreeStruct@CFat@@AEAAXPEAUSGetFreeStruct@@@Z
?ReleaseIDObject@CStdMarshal@@QEAAXPEAVCIDObject@@@Z
?ReleaseIFD@@YAJPEAUtagMInterfacePointer@@@Z
?ReleaseIPIDEntry@CRefCache@@QEAAXPEAUtagIPIDEntry@@PEAPEAUtagREMINTERFACEREF@@PEAG@Z
?ReleaseInterface@CRIFTable@@QEAAXAEBU_GUID@@@Z
?ReleaseInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAX@Z
?ReleaseInterfaceData@@YAXPEAUtagInterfaceData@@K@Z
?ReleaseInterfaces@SSimpleWalker@@QEAAXXZ
?ReleaseInvalidSects@CDeltaList@@QEAAJK@Z
?ReleaseLock@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?ReleaseLock@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAXXZ
?ReleaseLock@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAXXZ
?ReleaseLock@CRWLock@@QEAAKPEAULockCookie@@@Z
?ReleaseLock@XLOCK@@QEAAXXZ
?ReleaseLock@XSLOCK@@QEAAXXZ
?ReleaseLocks@CRootPubDocFile@@QEAAXPEAUILockBytes@@@Z
?ReleaseMIDEntry@CMIDTable@@QEAAXPEAVMIDEntry@@@Z
?ReleaseMarshalBuffer@@YAJPEAUtagRPCOLEMESSAGE@@PEAUIUnknown@@H@Z
?ReleaseMarshalData@ActivationProperties@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CClassMoniker@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CDocfileUnmarshalFactory@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CErrorObject@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CExposedDocFile@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CExposedStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CFreeMarshaler@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CMarshalImplPStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CObjectContext@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CPointerMoniker@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CSimpStorage@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CSimpStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CStaticWrapper@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CStdMarshal@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CStdWrapper@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CallFrame@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_CLIENT_FRAME@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_SERVER_FRAME@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@InprocActpropsUnmarshaller@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@Interceptor@@EEAAJKPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@LEGACY_INTERCEPTOR@@UEAAJKPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalObjRef@@YAJAEAUtagOBJREF@@@Z
?ReleaseMarshalObjRef@CStdMarshal@@QEAAJAEAUtagOBJREF@@@Z
?ReleaseMarshalledInterfaceBuffer@@YAJPEAX@Z
?ReleaseMemoryInterceptor@LEGACY_INTERCEPTOR@@QEAAXXZ
?ReleaseMemoryLock@CClassEntry@CClassCache@@QEAAKPEAH@Z
?ReleaseOXIDEntry@COXIDTable@@QEAAXPEAVOXIDEntry@@@Z
?ReleaseObjPtrs@CDefClient@@QEAAJXZ
?ReleaseObjRefSwitch@@YAJPEAX@Z
?ReleaseOleDelegate@CDefLink@@QEAAXXZ
?ReleaseOleItemContainerDelegate@CDefLink@@AEAAXXZ
?ReleaseOpen@@YAXPEAUILockBytes@@KK@Z
?ReleaseOpenWithMask@@YAXPEAUILockBytes@@KKK@Z
?ReleasePage@CMSFPageTable@@QEAAXPEAVCPagedVector@@KK@Z
?ReleasePoolEntry@CRWLock@@AEAAHXZ
?ReleaseRODelegate@CDefLink@@QEAAXXZ
?ReleaseReaderLock@CRWLock@@QEAAKXZ
?ReleaseRefOnProcess@CSurrogateProcessActivator@@UEAAKXZ
?ReleaseReference@DDE_CHANNEL@@QEAAKXZ
?ReleaseRemUnkCopy@CStdMarshal@@QEAAXPEAUIRemUnknown@@@Z
?ReleaseRemoteInterceptor@LEGACY_INTERCEPTOR@@QEAAXXZ
?ReleaseSCMProxy@CRpcResolver@@QEAAXXZ
?ReleaseServerProcess@CClassCache@@SAKXZ
?ReleaseStdID@CObjServer@@QEAAXXZ
?ReleaseTable@CPagedVector@@QEAAXK@Z
?ReleaseWriteAccess@CDFBasis@@QEAAJXZ
?ReleaseWriteAccess@CExposedDocFile@@UEAAJXZ
?ReleaseWriterLock@CRWLock@@QEAAKXZ
?RelockServer@CStdMarshal@@QEAAXXZ
?RemAddRef@CRemoteUnknown@@UEAAJGQEAUtagREMINTERFACEREF@@PEAJ@Z
?RemAddRefWorker@CRemoteUnknown@@QEAAJGQEAUtagREMINTERFACEREF@@PEAJH@Z
?RemChangeRef@CRemoteUnknown@@UEAAJKGQEAUtagREMINTERFACEREF@@@Z
?RemIsConnected@CStdMarshal@@QEAAHXZ
?RemQIAndUnmarshal@CStdMarshal@@AEAAJGPEAU_GUID@@PEAUtagSQIResult@@@Z
?RemQueryInterface2@CRemoteUnknown@@UEAAJAEBU_GUID@@GPEAU2@PEAJPEAPEAUtagMInterfacePointer@@@Z
?RemQueryInterface@CRemoteUnknown@@UEAAJAEBU_GUID@@KGPEAU2@PEAPEAUtagREMQIRESULT@@@Z
?RemRelease@CRemoteUnknown@@UEAAJGQEAUtagREMINTERFACEREF@@@Z
?RemReleaseWorker@CRemoteUnknown@@QEAAJGQEAUtagREMINTERFACEREF@@H@Z
?RemUnkAccessCheck@@YAJPEAH@Z
?Remap@CDIFat@@QEAAJKPEAK@Z
?Remap@CFat@@QEAAJKKKPEAK000@Z
?RemapSelf@CDIFat@@QEAAJXZ
?RemoteAddRef@CStdMarshal@@AEAAJPEAUtagIPIDEntry@@PEAVOXIDEntry@@KKH@Z
?RemoteChangeRef@CStdMarshal@@QEAAJHH@Z
?RemoteChangeRifRef@CStdMarshal@@AEAAJPEAVOXIDEntry@@KGPEAUtagREMINTERFACEREF@@@Z
?RemoteReleaseObjRef@@YAJAEAUtagOBJREF@@@Z
?RemoteReleaseRifRef@@YAJPEAVCStdMarshal@@PEAVOXIDEntry@@GPEAUtagREMINTERFACEREF@@@Z
?RemoteReleaseRifRefHelper@@YAJPEAUIRemUnknown@@PEAVOXIDEntry@@GPEAUtagREMINTERFACEREF@@PEAUIUnknown@@@Z
?RemoteReleaseStdObjRef@@YAJPEAUtagSTDOBJREF@@PEAVOXIDEntry@@@Z
?Remove@CContextList@@QEAAXPEAVCContext@@@Z
?Remove@CContextPropList@@QEAAXAEBU_GUID@@@Z
?Remove@CCtxPropHashTable@@QEAAXPEAVCObjectContext@@@Z
?Remove@CMSFPage@@QEAAXXZ
?Remove@COIDTable@@QEAAXPEAVCIDObject@@@Z
?Remove@CPSTable@@QEAAXPEAVCPolicySet@@@Z
?Remove@CSpyTable@@QEAAHPEAX@Z
?Remove@CUpdateList@@QEAAXPEAVCUpdate@@@Z
?Remove@CpUnkList@@QEAAXPEAUIUnknown@@@Z
?RemoveAll@CMapKeyToValue@@QEAAXXZ
?RemoveAll@CpUnkList@@QEAAXXZ
?RemoveBaseClassEntry@CClassEntry@CClassCache@@QEAAXPEAVCBaseClassEntry@2@@Z
?RemoveClipboardDataObject@@YAJPEAUHWND__@@K@Z
?RemoveCollectee@CCollectable@CClassCache@@QEAAXPEAV12@@Z
?RemoveConnection@CConnectionPoint@@UEAAJK@Z
?RemoveCtxEntry@IFaceEntry@@QEAAXPEAVCObjectContext@@@Z
?RemoveDllClassEntry@CDllPathEntry@CClassCache@@QEAAJPEAVCDllClassEntry@2@@Z
?RemoveFromCacheLists@CPolicySet@@QEAAXXZ
?RemoveFromFreeList@CRpcThreadCache@@QEAAXPEAVCRpcThread@@@Z
?RemoveHead@CpUnkList@@QEAAPEAUIUnknown@@XZ
?RemoveISurrogate@CSurrogateProcessActivator@@UEAAJXZ
?RemoveItemFromItemList@CDefClient@@QEAAXXZ
?RemoveKey@CMapDwordDword@@QEAAHK@Z
?RemoveKey@CMapKeyToValue@@QEAAHPEAXI@Z
?RemoveKey@CMapStringToPtr@@QEAAHPEAG@Z
?RemoveKey@CMapUintPtr@@QEAAHI@Z
?RemoveMarshal@CMarshalList@@QEAAXPEAV1@@Z
?RemoveMember@CTSSet@@QEAAXPEAVPTSetMember@@@Z
?RemoveMessage@CComApartment@@QEAAJIPEAVIMessageParam@@@Z
?RemoveOID@@YAHPEAUSHashChain@@PEAX@Z
?RemoveOIDUnpinRequest@COIDTable@@QEAAXPEAVCIDObject@@@Z
?RemovePID@@YAHPEAUSHashChain@@PEAX@Z
?RemoveProperty@CObjectContext@@UEAAJAEBU_GUID@@@Z
?RemoveRequestedIIDs@ActivationPropertiesOut@@UEAAJKPEAU_GUID@@@Z
?RemoveRv@CChildInstanceList@@QEAAXPEAVPRevertable@@@Z
?RemoveSelfFromList@CNtfsStream@@IEAAXXZ
?RemoveStdID@CIDObject@@QEAAHXZ
?RemoveUnnecessaryXSMembers@CPubDocFile@@QEAAXXZ
?RemoveWndProc@CFrameFilter@@QEAAXXZ
?RemoveWrapper@CIDObject@@QEAAHXZ
?RemoveXSMember@CPubDocFile@@QEAAXPEAVPTSetMember@@@Z
?Rename@CNtfsStream@@AEAAJPEBGH@Z
?RenameElement@CExpParameterValidate@@SAJPEBG0@Z
?RenameElement@CExposedDocFile@@UEAAJPEBG0@Z
?RenameElement@CNtfsStorage@@UEAAJPEBG0@Z
?RenameElement@CNtfsStorageForPropSetStg@@UEAAJPEBG0@Z
?RenameElement@CSimpStorage@@UEAAJPEBG0@Z
?RenameEntry@CDirectory@@QEAAJKPEBVCDfName@@0@Z
?RenameEntry@CPubDocFile@@QEAAJPEBVCDfName@@0@Z
?RenameEntry@CStgHandle@@QEAAJPEBVCDfName@@0@Z
?RenameEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@0@Z
?RenameEntry@PDocFile@@QEAAJPEBVCDfName@@0@Z
?RenameMember@CTSSet@@QEAAXPEBVCDfName@@K0@Z
?RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@@Z
?ReplaceHandle@CRpcChannelBuffer@@QEAAXPEAVCChannelHandle@@@Z
?ReplaceLocalEntry@CMIDTable@@QEAAJPEAUtagDUALSTRINGARRAY@@@Z
?ReplaceOriginalWithUpdate@CNFFMappedStream@@AEAAJW4enumCREATE_NEW_UPDATE_STREAM@1@@Z
?ReportErrorOrigination@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXPEBU_RTL_CALL_SITE@34@@Z
?ReportErrorOrigination@Rtl@ErrorHandling@Windows@@YAXPEBU_RTL_CALL_SITE@23@J@Z
?Request@CMutexSem2@@QEAAXXZ
?Request@COleStaticMutexSem@@QEAAXPEBDK0@Z
?RequestData@CDdeObject@@AEAAJG@Z
?RequestData@CDefClient@@QEAAJPEAUHWND__@@GGPEAPEAX@Z
?RequestDataStd@@YAJGPEAPEAX@Z
?RequestNewObjectLayout@COleClientSiteImpl@CDefClient@@UEAAJXZ
?Reserve@CDFBasis@@QEAAJIW4CDFB_CLASSTYPE@@@Z
?Reserve@CDirectStream@@SAJIQEAVCDFBasis@@@Z
?Reserve@CDocFile@@SAJIQEAVCDFBasis@@@Z
?Reserve@CFreeList@@QEAAJPEAUIMalloc@@I_K@Z
?Reserve@CTransactedStream@@SAJIQEAVCDFBasis@@@Z
?Reserve@CWrappedDocFile@@SAJIQEAVCDFBasis@@@Z
?ReserveSects@CFat@@QEAAJK@Z
?Reset@?$CArray@VCCacheNode@@@@QEAAXAEAKH@Z
?Reset@?$CArray@VCFormatEtc@@@@QEAAXAEAKH@Z
?Reset@?$CArray@VCStatData@@@@QEAAXAEAKH@Z
?Reset@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJXZ
?Reset@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJXZ
?Reset@CAddrExclusionList@@UEAAJXZ
?Reset@CBindStatusCallback@@UEAAJXZ
?Reset@CClass@@QEAAJAEBU_GUID@@@Z
?Reset@CClientCallMgr@@UEAAJXZ
?Reset@CComActivator@@UEAAJXZ
?Reset@CCompositeMonikerEnum@@UEAAJXZ
?Reset@CEnumCategories@@UEAAJXZ
?Reset@CEnumCategoriesOfClass@@UEAAJXZ
?Reset@CEnumClassesOfCategories@@UEAAJXZ
?Reset@CEnumContextProps@@UEAAJXZ
?Reset@CEnumFmt@@UEAAJXZ
?Reset@CEnumFormatEtc@@UEAAJXZ
?Reset@CEnumFormatEtcDataArray@@UEAAJXZ
?Reset@CEnumSTATDATA@@UEAAJXZ
?Reset@CEnumSTATPROPBAG@@UEAAJXZ
?Reset@CEnumSTATPROPSETSTG@@UEAAJXZ
?Reset@CEnumSTATPROPSTG@@UEAAJXZ
?Reset@CEnumStatData@@UEAAJXZ
?Reset@CEnumVerb@@EEAAJXZ
?Reset@CExposedIterator@@UEAAJXZ
?Reset@CLocalMachineNames@@UEAAJXZ
?Reset@CManualResetEvent@@UEAAJXZ
?Reset@CNoEnum@@UEAAJXZ
?Reset@CNtfsEnumSTATSTG@@UEAAJXZ
?Reset@CObjectContext@@QEAAJPEAPEAX@Z
?Reset@CRotMonikerEnum@@UEAAJXZ
?Reset@CServerCallMgr@CRpcChannelBuffer@@UEAAJXZ
?Reset@CSimpEnumSTATSTG@@UEAAJXZ
?Reset@CStdEvent@@UEAAJXZ
?Reset@ScmReplyInfo@@UEAAJXZ
?Reset@ScmRequestInfo@@UEAAJXZ
?Reset@SecurityInfo@@UEAAJXZ
?ResetBits@CPagedVector@@QEAAXXZ
?ResetCopyOnWrite@CFat@@QEAAXXZ
?ResetInitializerTimeout@CSurrogateProcessActivator@@UEAAJK@Z
?ResetObject@@YAJPEAUIUnknown@@@Z
?ResetReaderEvent@EventPoolEntry@@QEAAKXZ
?ResetStateForCall@CAsyncUnknownMgr@@UEAAJXZ
?ResetTLS@CRpcThreadCache@@CAXXZ
?Resize@CDIFat@@AEAAJK@Z
?Resize@CDirectory@@AEAAJK@Z
?Resize@CFat@@QEAAJK@Z
?Resize@CPagedVector@@QEAAJK@Z
?ResizeNoSnapshot@CFat@@QEAAJXZ
?ResizePicklingBuff@@YAJPEAUtagPCB@@K@Z
?ResolveAddress@CStackWalker@@UEAAPEAUIStackWalkerSymbol@@_K@Z
?ResolveAddressInternal@CStackWalker@@AEAAPEAVCStackWalkerSymbol@@_KK@Z
?ResolveShellLink@CFileMoniker@@AEAAJH@Z
?RestartServer@CComApartment@@QEAAJXZ
?RestoreLock@CRWLock@@QEAAKPEAULockCookie@@PEAH@Z
?RestoreSecurity@CServerSecurity@@QEAAXH@Z
?RestoreShellLink@CFileMoniker@@AEAAJPEAH@Z
?RestoreToken@CChannelHandle@@QEAAXHPEAX@Z
?ResumeAll@CSurrogateProcessActivator@@UEAAJXZ
?ResumeApplication@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?ResumeImpersonate@@YAXPEAX@Z
?ResumeProcessClassObjects@CClassCache@@SAJXZ
?RetireServer@CRpcResolver@@QEAAJPEAU_GUID@@@Z
?RetryRPC@CRpcResolver@@CAHJ@Z
?ReturnCallToList@CAsyncCall@@QEAAHPEAV1@@Z
?ReturnClass@ActivationProperties@@QEAAJAEBU_GUID@@PEAVSerializableProperty@@@Z
?ReturnDocFile@CDocFile@@QEAAXPEAV1@@Z
?ReturnDocFile@CWrappedDocFile@@QEAAXPEAV1@@Z
?ReturnStream@CDocFile@@QEAAXPEAVCDirectStream@@@Z
?ReturnStream@CWrappedDocFile@@QEAAXPEAVCTransactedStream@@@Z
?ReturnToReserve@CDirectStream@@QEAAXQEAVCDFBasis@@@Z
?ReturnToReserve@CDocFile@@QEAAXQEAVCDFBasis@@@Z
?ReturnToReserve@CFreeList@@QEAAXPEAX@Z
?ReturnToReserve@CTransactedStream@@QEAAXQEAVCDFBasis@@@Z
?ReturnToReserve@CWrappedDocFile@@QEAAXQEAVCDFBasis@@@Z
?Revert@CExposedDocFile@@UEAAJXZ
?Revert@CExposedStream@@UEAAJXZ
?Revert@CMemStm@@UEAAJXZ
?Revert@CNdrStream@@UEAAJXZ
?Revert@CNtfsStorage@@UEAAJXZ
?Revert@CNtfsStorageForPropSetStg@@UEAAJXZ
?Revert@CNtfsStream@@UEAAJXZ
?Revert@CPropertyStorage@@UEAAJXZ
?Revert@CPubDocFile@@QEAAJXZ
?Revert@CSimpStorage@@UEAAJXZ
?Revert@CSimpStream@@UEAAJXZ
?Revert@CStreamOnMessage@@UEAAJXZ
?Revert@CTransactedStream@@QEAAXXZ
?Revert@CWrappedDocFile@@QEAAXXZ
?Revert@GenericStream@@UEAAJXZ
?Revert@PTSetMember@@QEAAXXZ
?RevertFromAbove@CPubDocFile@@QEAAXXZ
?RevertFromAbove@CPubStream@@QEAAXXZ
?RevertFromAbove@PRevertable@@QEAAXXZ
?RevertToSelf@CServerCallMgr@CRpcChannelBuffer@@UEAAJXZ
?RevertToSelf@CServerSecurity@@UEAAJXZ
?RevertUpdate@CWrappedDocFile@@AEAAXPEAVCUpdate@@@Z
?Revoke@CClassCache@@SAJK@Z
?Revoke@CDDEServer@@QEAAJXZ
?Revoke@CDefClient@@QEAAJH@Z
?Revoke@CRunningObjectTable@@UEAAJK@Z
?RevokeAccessRights@CImpAccessControl@COAccessControl@@UEAAJPEAGKQEAU_TRUSTEE_W@@@Z
?RevokeAllEntries@CGIPTable@@QEAAXXZ
?RevokeApartmentActivator@@YAJXZ
?RevokeFromMTA@@YAKPEAX@Z
?RevokeHelper@CRunningObjectTable@@AEAAJKH@Z
?RevokeInterfaceFromGlobal@CGIPTable@@UEAAJK@Z
?RevokeObjectBound@CBindCtx@@UEAAJPEAUIUnknown@@@Z
?RevokeObjectParam@CBindCtx@@UEAAJPEAG@Z
?RevokeStubRegistration@CROTItem@@QEAAXXZ
?RollForwardIfNecessary@CNFFMappedStream@@AEAAJXZ
?RotateEntry@CDirectory@@AEAAJPEBVCDfName@@KKPEAK@Z
?RoundToNextMultiple@@YAKKK@Z
?RpcWorkerThreadEntry@CRpcThreadCache@@CAKPEAX@Z
?RslvCancel@CMessageCall@@QEAAJAEAKJHPEAVCCliModalLoop@@@Z
?RtlpDecodeBase64Chunklets@@YAJKP6A?AU_RTL_UCSCHAR_DECODER_RETURN_VALUE@@PEBE0@Z00AEAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?RtlpDecodeCharsUntilNotMatchPredicate@@YAJPEBE0P6A?AU_RTL_UCSCHAR_DECODER_RETURN_VALUE@@00@ZP6AEKPEAX@Z2PEAPEBEPEAK@Z
?RtlpGenericBase64Encode@@YAJPEBU_LBLOB@@PEAU_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT@@@Z
?RtlpMatchBase64Whitespace@@YAEKPEAX@Z
?RtlpSmartLBlobWritingContextResizePolicy@@YAJ_K00PEA_K@Z
?Run@CDefLink@@UEAAJPEAUIBindCtx@@@Z
?Run@CDefObject@@UEAAJPEAUIBindCtx@@@Z
?RundownOid@CRemoteUnknown@@UEAAJKQEA_KQEAE@Z
?RunningMoniker@@YAHPEAUIBindCtx@@PEAGKPEAKPEAPEAUIMoniker@@@Z
?SBCallback2@CMachineNamesHelper@@CAXPEAXPEAUtagSTRINGBINDING@@K@Z
?SBCallback@CMachineNamesHelper@@CAXPEAXPEAUtagSTRINGBINDING@@K@Z
?SIZE@tagQICONTEXT@@SAKPEAVCStdMarshal@@G@Z
?STAHostTimerProc@@YAXPEAUHWND__@@I_KK@Z
?STAInvoke@@YAJPEAUtagRPCOLEMESSAGE@@KPEAUIRpcStubBuffer@@PEAVIInternalChannelBuffer@@PEAXPEAUtagIPIDEntry@@PEAK@Z
?STAWorkerLoop@CDllHost@@AEAAXXZ
?STGMEDIUM_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@_K@Z
?STGMEDIUM_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@_K@Z
?SafeArrayClear@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@H@Z
?SafeArrayCopy@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@PEAPEAU2@@Z
?SafeArrayCopyData@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@0@Z
?SafeArrayDestroy@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayLock@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayMarshal@OLEAUTOMATION_FUNCTIONS@@CAPEAEPEAKPEAEPEAPEAUtagSAFEARRAY@@@Z
?SafeArraySize@@YAKGKPEAUtagSAFEARRAYBOUND@@@Z
?SafeArraySize@@YAKPEAUtagSAFEARRAY@@@Z
?SafeArraySize@OLEAUTOMATION_FUNCTIONS@@CAKPEAKKPEAPEAUtagSAFEARRAY@@@Z
?SafeArrayUnlock@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayUnmarshal@OLEAUTOMATION_FUNCTIONS@@CAPEAEPEAKPEAEPEAPEAUtagSAFEARRAY@@@Z
?SafeCast@CRpcChannelBuffer@@SAPEAV1@PEAUIRpcChannelBuffer@@@Z
?SafeCastFromDWORD@CLSvrClassEntry@CClassCache@@SAJKAEAPEAV12@@Z
?SafeCastFromHashNode@CClassEntry@CClassCache@@SAPEAV12@PEAUSMultiGUIDHashNode@@@Z
?SafeRelease@CRefExportCount@@QEAAKXZ
?SafeRelease@CSafeRefCount@@QEAAKXZ
?SafeReleaseAndNULL@@YAXPEAPEAUIUnknown@@@Z
?SanityCheck@@YAJPEBUtagCInterfaceStubHeader@@K@Z
?Save@CAntiMoniker@@EEAAJPEAUIStream@@H@Z
?Save@CBaseMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CCacheNode@@QEAAJPEAUIStorage@@HH@Z
?Save@CClassMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CCompositeMoniker@@EEAAJPEAUIStream@@H@Z
?Save@CDdeObject@@AEAAJPEAUIStorage@@@Z
?Save@CDefLink@@UEAAJPEAUIStorage@@H@Z
?Save@CDefObject@@UEAAJPEAUIStorage@@H@Z
?Save@CEMfObject@@UEAAJPEAUIStream@@@Z
?Save@CExtentList@@QEAAJPEAUIStream@@@Z
?Save@CFileMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CGenObject@@UEAAJPEAUIStream@@@Z
?Save@CImpAccessControl@COAccessControl@@UEAAJPEAUIStream@@H@Z
?Save@CItemMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CLUAMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CMfObject@@UEAAJPEAUIStream@@@Z
?Save@CObjrefMoniker@@UEAAJPEAUIStream@@H@Z
?Save@COleCache@@UEAAJPEAUIStorage@@H@Z
?Save@CPackagerMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@H@Z
?Save@CSessionMoniker@@UEAAJPEAUIStream@@H@Z
?SaveCompleted@CCacheNode@@QEAAXPEAUIStorage@@@Z
?SaveCompleted@CDefLink@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@CDefObject@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@COleCache@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?SaveObject@COleClientSiteImpl@CDefClient@@UEAAJXZ
?SaveTOC@COleCache@@AEAAJPEAUIStorage@@H@Z
?SaveTOCEntry@CCacheNode@@QEAAJPEAUIStream@@H@Z
?SaveUnicodeAsAnsi@@YAJPEAUIStream@@PEAGGPEADG@Z
?ScalePictExt@CMfObject@@AEAAXPEAUHDC__@@HHHH@Z
?ScaleRectExt@CMfObject@@AEAAXPEAUHDC__@@HHHH@Z
?ScanArg@@YAPEADPEAD@Z
?ScanBoolArg@@YAPEADPEADPEAH@Z
?ScanCommand@@YAGPEADGPEAPEADPEAG@Z
?ScanItemOptions@@YAJPEAGPEAH@Z
?ScanNumArg@@YAPEADPEADPEAH@Z
?ScmGetThreadId@@YAXPEAK@Z
?ScmRotHash@@YAKPEAEKK@Z
?SearchBaseClassEntry@CClassEntry@CClassCache@@QEAAJKAEAPEAVCBaseClassEntry@2@KPEAH@Z
?SearchBaseClassEntryHelp@CClassEntry@CClassCache@@QEAAJKAEAPEAVCBaseClassEntry@2@K@Z
?SearchDPEHash@CClassCache@@SAJPEAGAEAPEAVCDllPathEntry@1@KK@Z
?SearchForDCE@CClassEntry@CClassCache@@QEAAPEAVCDllClassEntry@2@PEAGK@Z
?SearchForLoadedClass@CClassCache@@SAJAEBUACTIVATION_PROPERTIES@@PEAPEAVCDllClassEntry@1@@Z
?SearchForPattern@CPatternTbl@@AEAAJPEAXPEAU_GUID@@@Z
?SearchItem@CDefClient@@AEAAPEAV1@PEAG@Z
?SearchList@COXIDTable@@AEAAPEAVOXIDEntry@@AEBU_GUID@@PEAV2@@Z
?SectToPair@CDIFat@@AEBAXKPEAKPEAG@Z
?SecureStringFree@SecurityInfo@@CAXPEAGK@Z
?Seek@CExpParameterValidate@@SAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CExposedStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CMemStm@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CNdrStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CNtfsStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CSimpStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CSimpStreamOpen@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CStreamOnMessage@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@GenericStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?SeekTo@CFileStream@@AEAA_K_K@Z
?SelectFat@CStreamCache@@AEAAPEAVCFat@@XZ
?Send2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send2@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CAptRpcChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CAptRpcChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@@Z
?Send@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?Send@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?Send@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?Send@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?Send@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?SendCallToSTA@OXIDEntry@@QEAAJPEAVCMessageCall@@@Z
?SendDataMsg1@CDefClient@@AEAAHPEAXG@Z
?SendDataMsg@CDefClient@@AEAAHG@Z
?SendDevInfo@CDefClient@@AEAAXPEAUHWND__@@@Z
?SendExecuteAck@CDefClient@@QEAAXJ@Z
?SendInitMsgToChildren@@YAHPEAUHWND__@@I_K_J@Z
?SendMsgAndWaitForReply@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@HG_JHHHH@Z
?SendMsgToChildren@@YAHPEAUHWND__@@I_K_J@Z
?SendOnClose@CDdeObject@@AEAAJXZ
?SendOnClose@COAHolder@@UEAAJXZ
?SendOnDataChange@CDAHolder@@UEAAJPEAUIDataObject@@KK@Z
?SendOnDataChange@CDdeObject@@QEAAJH@Z
?SendOnLinkSrcChange@COAHolder@@QEAAJPEAUIMoniker@@@Z
?SendOnRename@COAHolder@@UEAAJPEAUIMoniker@@@Z
?SendOnSave@COAHolder@@UEAAJXZ
?SendReceive2@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAJKPEAVCCtxCall@@2PEAUICallFrame@@3PEAU__MIDL_ICallFrame_0001@@@Z
?SendReceive2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive2@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CAptRpcChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CAptRpcChnl@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CChannelObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CCliModalLoop@@QEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAVIInternalChannelBuffer@@@Z
?SendReceive@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CCtxComChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CCtxComChnl@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CRpcChannelBuffer@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CRpcChannelBuffer@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendRenameMsgs@CDefClient@@AEAAXPEAX@Z
?SendServerTerminateMsg@CDDEServer@@AEAAXXZ
?SendTerminateMsg@CDefClient@@AEAAXXZ
?SendsProcessEvents@CComProcessInfo@@UEAAJPEAH@Z
?SerializableQueryInterface@ContextInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@InstanceInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@InstantiationInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@OpaqueDataInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@OutSerializer@ActivationPropertiesOut@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@ScmReplyInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@ScmRequestInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@SecurityInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@ServerLocationInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?SerializableQueryInterface@SpecialProperties@@UEAAJAEBU_GUID@@PEAPEAX@Z
?Serialize@ActivationProperties@@QEAAJAEAVSerializer@@@Z
?Serialize@ContextInfo@@UEAAJPEAX@Z
?Serialize@InstanceInfo@@UEAAJPEAX@Z
?Serialize@InstantiationInfo@@UEAAJPEAX@Z
?Serialize@OpaqueDataInfo@@UEAAJPEAX@Z
?Serialize@OutSerializer@ActivationPropertiesOut@@UEAAJPEAX@Z
?Serialize@ScmReplyInfo@@UEAAJPEAX@Z
?Serialize@ScmRequestInfo@@UEAAJPEAX@Z
?Serialize@SecurityInfo@@UEAAJPEAX@Z
?Serialize@ServerLocationInfo@@UEAAJPEAX@Z
?Serialize@SpecialProperties@@UEAAJPEAX@Z
?SerializeSafeArrayBounds@@YAJPEBUtagSAFEARRAY@@PEAEPEAK@Z
?SerializeToVector@CContextPropList@@QEAAXAEAPEAUtagContextProperty@@@Z
?ServerAllocOIDs@CRpcResolver@@QEAAJAEA_KPEAKPEA_KK2@Z
?ServerCleanup@CDllHost@@AEAAXK@Z
?ServerExceptionFilter@@YAJPEAU_EXCEPTION_POINTERS@@@Z
?ServerFillBuffer@CCtxHook@@UEAAXAEBU_GUID@@0PEAKPEAXJ@Z
?ServerFillBuffer@CDebugChannelHook@@UEAAXAEBU_GUID@@0PEAKPEAXJ@Z
?ServerFillBuffer@CErrorChannelHook@@UEAAXAEBU_GUID@@0PEAKPEAXJ@Z
?ServerFreeOXIDAndOIDs@CRpcResolver@@QEAAJAEA_KKPEA_K@Z
?ServerGetBuffer@CRpcChannelBuffer@@AEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?ServerGetReservedID@CRpcResolver@@QEAAJPEA_K@Z
?ServerGetReservedMOID@CRpcResolver@@QEAAJPEAU_GUID@@@Z
?ServerGetSize@CCtxHook@@UEAAXAEBU_GUID@@0JPEAK@Z
?ServerGetSize@CDebugChannelHook@@UEAAXAEBU_GUID@@0JPEAK@Z
?ServerGetSize@CErrorChannelHook@@UEAAXAEBU_GUID@@0JPEAK@Z
?ServerNotify@@YAJPEATWireThis@@KPEAPEAXKPEAVCMessageCall@@@Z
?ServerNotify@CCtxHook@@UEAAXAEBU_GUID@@0KPEAXK@Z
?ServerNotify@CDebugChannelHook@@UEAAXAEBU_GUID@@0KPEAXK@Z
?ServerNotify@CErrorChannelHook@@UEAAXAEBU_GUID@@0KPEAXK@Z
?ServerObjectCallable@CStdMarshal@@QEAAPEAVCObjectContext@@XZ
?ServerRegisterOXID@CRpcResolver@@QEAAJAEAUtagOXID_INFO@@PEA_KPEAKQEA_K@Z
?ServerReply@CAsyncCall@@QEAAXXZ
?ServerSide@CStdMarshal@@QEAAHXZ
?ServicesReady@CSurrogateProcessActivator@@UEAAXXZ
?Set@CClass@@QEAAJAEBU_GUID@@PEAUIStorage@@@Z
?Set@CDfName@@QEAAXGPEBE@Z
?Set@CDfName@@QEAAXPEBG@Z
?Set@CDfName@@QEAAXPEBV1@@Z
?Set@CGlobalOptions@@UEAAJK_K@Z
?Set@CRpcOptions@@UEAAJPEAUIUnknown@@K_K@Z
?Set@CSafeMoniker@@QEAAXPEAUIMoniker@@H@Z
?SetAccessRights@CImpAccessControl@COAccessControl@@UEAAJPEAU_ACTRL_ALISTW@@@Z
?SetActivationFlags@ActivationPropertiesIn@@UEAAJK@Z
?SetAddrExclusionList@CRpcResolver@@QEAAJKPEAPEAG@Z
?SetAdvise@CCacheViewImpl@COleCache@@UEAAJKKPEAUIAdviseSink@@@Z
?SetAllFileLockBytesTimes@CMStream@@QEAAJU_FILETIME@@00@Z
?SetAllStreamsTimes@CNtfsStorage@@IEAAJPEBU_FILETIME@@00@Z
?SetAllTimes@CDirectory@@QEAAJKU_FILETIME@@00@Z
?SetAllTimes@CFileStream@@QEAAJU_FILETIME@@00@Z
?SetAllTimes@CMStream@@QEAAJKU_FILETIME@@00@Z
?SetAllTimes@CStgHandle@@QEAAJU_FILETIME@@00@Z
?SetAllTimes@PTimeEntry@@QEAAJU_FILETIME@@00@Z
?SetAllocatorState@CPerContext@@QEAAJPEAPEAV1@PEAVCSmAllocator@@@Z
?SetApartment@ServerLocationInfo@@UEAAJK@Z
?SetAppID@CRpcResolver@@QEAAJU_GUID@@@Z
?SetAsBaseFor@DISPATCH_INTERCEPTOR@@UEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAsBaseFor@Interceptor@@EEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAsBaseFor@LEGACY_INTERCEPTOR@@UEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAssocValue@CMapKeyToValue@@AEBAXPEAUCAssoc@1@PEAX@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@@Z
?SetAt@CMapDwordDword@@QEAAHKK@Z
?SetAt@CMapKeyToValue@@QEAAHPEAXI0@Z
?SetAt@CMapUintPtr@@QEAAHIPEAX@Z
?SetAtGrow@CArrayFValue@@QEAAHHPEAX@Z
?SetAuthIdentity@SecurityInfo@@UEAAJPEAU_COAUTHIDENTITY@@@Z
?SetAuthnFlags@SecurityInfo@@UEAAJK@Z
?SetAuthnLevel@SecurityInfo@@UEAAJK@Z
?SetAuthnSvc@SecurityInfo@@UEAAJK@Z
?SetAuthzSvc@SecurityInfo@@UEAAJK@Z
?SetBase@CTransactedStream@@QEAAJPEAVPSStream@@@Z
?SetBase@CWrappedDocFile@@QEAAJPEAVPDocFile@@@Z
?SetBaseMultiStream@CDFBasis@@QEAAXPEAVCMStream@@@Z
?SetBindOptions@CBindCtx@@UEAAJPEAUtagBIND_OPTS@@@Z
?SetBitmapData@CGenObject@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetBlanket@CChannelObject@@UEAAJPEAUIUnknown@@KKPEAGKKPEAXK@Z
?SetBlanket@CClientCallMgr@@UEAAJPEAUIUnknown@@KKPEAGKKPEAXK@Z
?SetBlanket@CClientSecurity@@UEAAJPEAUIUnknown@@KKPEAGKKPEAXK@Z
?SetBlanketOnChannel@@YAJPEAVCRpcChannelBuffer@@KKPEAGKKPEAXK@Z
?SetBuffer@GenericStream@@UEAAJKPEAE@Z
?SetCOAUTHINFO@SecurityInfo@@UEAAJPEAU_COAUTHINFO@@@Z
?SetCOSERVERINFO@SecurityInfo@@UEAAJPEAU_COSERVERINFO@@@Z
?SetCachedFilePointer@CFileStream@@AEAAX_K@Z
?SetCallerhWnd@CMessageCall@@QEAAJXZ
?SetCanonicalSuccess@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXXZ
?SetCanonicalSuccess@?$CBaseFrame@VCVoidRaiseFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXXZ
?SetCapabilities@SecurityInfo@@UEAAJK@Z
?SetChain@CMSFPage@@QEAAXQEAV1@0@Z
?SetChainLength@CFat@@QEAAJKK@Z
?SetClass@CExpParameterValidate@@SAJAEBU_GUID@@@Z
?SetClass@CExposedDocFile@@UEAAJAEBU_GUID@@@Z
?SetClass@CNtfsStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CNtfsStorageForPropSetStg@@UEAAJAEBU_GUID@@@Z
?SetClass@CPropertyStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CPubDocFile@@QEAAJAEBU_GUID@@@Z
?SetClass@CSimpStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CSimpStorageOpen@@UEAAJAEBU_GUID@@@Z
?SetClass@CStgHandle@@QEAAJAEBU_GUID@@@Z
?SetClass@PDocFile@@QEAAJAEBU_GUID@@@Z
?SetClassId@CDirectory@@QEAAJKU_GUID@@@Z
?SetClassId@CPropertySetStream@@QEAAXPEBU_GUID@@PEAJ@Z
?SetClassInfo@ActivationPropertiesIn@@UEAAJPEAUIUnknown@@@Z
?SetClientContext@ContextInfo@@UEAAJPEAUIContext@@@Z
?SetClientContextNotOK@ContextInfo@@UEAAJXZ
?SetClientImpersonating@CComActivator@@UEAAJH@Z
?SetClientImpersonating@SpecialProperties@@UEAAJH@Z
?SetClientPolicySet@CStdMarshal@@QEAAJPEAVCPolicySet@@@Z
?SetClientSite@CDefClient@@QEAAJXZ
?SetClientSite@CDefLink@@UEAAJPEAUIOleClientSite@@@Z
?SetClientSite@CDefObject@@UEAAJPEAUIOleClientSite@@@Z
?SetClientSite@COleObjectImpl@CDdeObject@@UEAAJPEAUIOleClientSite@@@Z
?SetClipDataObjectInTLS@@YAXPEAUIDataObject@@KH@Z
?SetClipboardDataObject@@YAJPEAUHWND__@@PEAUIDataObject@@@Z
?SetClipboardFormats@@YAJPEAUHWND__@@PEAUIDataObject@@@Z
?SetClsctx@ActivationPropertiesIn@@UEAAJK@Z
?SetColorBlack@CDirectory@@AEAAJK@Z
?SetColorScheme@CDefLink@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetColorScheme@CDefObject@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetColorScheme@COleObjectImpl@CDdeObject@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetComVersion@CDestObject@@UEAAJAEAUtagCOMVERSION@@@Z
?SetComVersion@CDestObjectWrapper@@UEAAJAEAUtagCOMVERSION@@@Z
?SetConnectionStatus@CStdIdentity@@QEAAXJ@Z
?SetConstructFromFile@ActivationPropertiesIn@@UEAAJPEAGK@Z
?SetConstructFromStorage@ActivationPropertiesIn@@UEAAJPEAUIStorage@@@Z
?SetContainedObject@CDefLink@@UEAAJH@Z
?SetContainedObject@CDefObject@@UEAAJH@Z
?SetContext@CFillLockBytes@@QEAAXPEAVCPerContext@@@Z
?SetContext@ServerLocationInfo@@UEAAJPEAUIObjContext@@@Z
?SetContextFlags@CObjectContext@@UEAAJK@Z
?SetContextFlagsForAsyncCall@@YAXPEAKPEAUtagSTGMEDIUM@@@Z
?SetContextId@CObjectContext@@QEAAXAEBU_GUID@@@Z
?SetContextInfo@ActivationPropertiesIn@@UEAAJPEAUIContext@@0@Z
?SetContextMarshaler@CObjectContext@@UEAAJPEAUIContextMarshaler@@@Z
?SetCopyAlignment@GenericStream@@UEAAJK@Z
?SetCopyBase@CDFBasis@@QEAAXPEAVCPubDocFile@@@Z
?SetCopyOnWrite@CFat@@QEAAXPEAV1@K@Z
?SetCurrentFDT@CForcedDropTarget@@QEAAXPEAUHWND__@@@Z
?SetCurrentLogicalThreadId@CObjectContext@@UEAAJAEBU_GUID@@@Z
?SetCurrentName@CUpdate@@QEAAXPEBVCDfName@@@Z
?SetCursor@CDragDefaultCursors@@QEAAXK@Z
?SetDF@CPubDocFile@@QEAAXPEAVPDocFile@@@Z
?SetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetDataWDO@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HAEAHPEAUIDataObject@@@Z
?SetDataWDO@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDataWDO@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDataWDO@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDdeServerWindow@CClassCache@@SAHKPEAUHWND__@@@Z
?SetDefaultAuthenticationLevel@CComActivator@@UEAAJK@Z
?SetDefaultAuthenticationLevel@SpecialProperties@@UEAAJK@Z
?SetDerivesFromIDispatch@MD_INTERFACE@@QEAAJH@Z
?SetDescription@CErrorObject@@UEAAJPEAG@Z
?SetDestCtx@ActivationProperties@@UEAAJK@Z
?SetDestCtx@CDestObject@@UEAAJK@Z
?SetDestCtx@CDestObjectWrapper@@UEAAJK@Z
?SetDirLength@CMSFHeader@@QEAAJK@Z
?SetDirty@CPagedVector@@QEAAJK@Z
?SetDirty@CPubDocFile@@QEAAXXZ
?SetDirty@CPubStream@@QEAAXXZ
?SetElementTimes@CExpParameterValidate@@SAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CExposedDocFile@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CNtfsStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CNtfsStorageForPropSetStg@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CPubDocFile@@QEAAJPEBVCDfName@@PEBU_FILETIME@@11@Z
?SetElementTimes@CSimpStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetEntry@CCallTable@@AEAAJPEAUICancelMethodCalls@@@Z
?SetEnvoyData@CObjectContext@@QEAAJPEAUtagDATAELEMENT@@@Z
?SetEventHandle@CStdEvent@@UEAAJPEAPEAX@Z
?SetEventIfNeccessary@CCtxConnectionManager@@QEAAXXZ
?SetExtent@CDefLink@@UEAAJKPEAUtagSIZE@@@Z
?SetExtent@CDefObject@@UEAAJKPEAUtagSIZE@@@Z
?SetExtent@COleObjectImpl@CDdeObject@@UEAAJKPEAUtagSIZE@@@Z
?SetFatSect@CDIFat@@QEAAJKK@Z
?SetFile@InstanceInfo@@UEAAJPEAGK@Z
?SetFileHandleTime@CNtfsStream@@CAJPEAXPEBU_FILETIME@@11@Z
?SetFileLockBytesTime@CMStream@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetFileSize@CNtfsStream@@AEAAJAEBV?$TXLargeIntegerWrapper@T_ULARGE_INTEGER@@K_K@@@Z
?SetFillSize@CFileStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetFillSize@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@@Z
?SetForcedDropTarget@COLEDragDropHelper@@UEAAJPEAUHWND__@@H@Z
?SetGUID@CErrorObject@@UEAAJAEBU_GUID@@@Z
?SetHandler@CAggId@@UEAAJPEAUIUnknown@@@Z
?SetHelpContext@CErrorObject@@UEAAJK@Z
?SetHelpFile@CErrorObject@@UEAAJPEAG@Z
?SetHostNames@CDefLink@@UEAAJPEBG0@Z
?SetHostNames@CDefObject@@UEAAJPEBG0@Z
?SetHostNames@COleObjectImpl@CDdeObject@@UEAAJPEBG0@Z
?SetIDObject@CStdMarshal@@QEAAXPEAVCIDObject@@@Z
?SetIID@DISPATCH_INTERCEPTOR@@UEAAJAEBU_GUID@@@Z
?SetIID@Interceptor@@EEAAJAEBU_GUID@@@Z
?SetIID@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@@Z
?SetILBInfo@CPerContext@@QEAAXPEAUILockBytes@@PEAUCFileStream@@0K@Z
?SetIdleTimeoutToZero@CSurrogateProcessActivator@@UEAAJXZ
?SetIfdROT@InstanceInfo@@UEAAJPEAUtagMInterfacePointer@@@Z
?SetImpLevel@SecurityInfo@@UEAAJK@Z
?SetImpersonatingFlag@CRpcResolver@@AEAAJPEAUIActivationPropertiesIn@@@Z
?SetInitialState@CTransactedStream@@AEAAJPEAVPSStream@@@Z
?SetInitialState@CWrappedDocFile@@AEAAJPEAVPDocFile@@@Z
?SetInvalidParameter@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXXZ
?SetInvalidParameter_NullPointer@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXXZ
?SetLUARunLevel@CComActivator@@UEAAJK_K@Z
?SetLUARunLevel@SpecialProperties@@UEAAJK_K@Z
?SetLocalBlob@ActivationProperties@@UEAAJPEAX@Z
?SetLocalResolverBindings@CRpcResolver@@QEAAJ_KPEAVCDualStringArray@@@Z
?SetMapping@CProxyManagerImpl@CDdeObject@@UEAAXPEAX@Z
?SetMapping@CStdIdentity@@UEAAXPEAX@Z
?SetMarshalFlags@ActivationProperties@@UEAAJK@Z
?SetMarshalledResults@ActivationPropertiesOut@@UEAAJKPEAU_GUID@@PEAJPEAPEAUtagMInterfacePointer@@@Z
?SetMetaData@Interceptor@@AEAAJPEAUTYPEINFOVTBL@@@Z
?SetMetaData@MD_INTERFACE@@QEAAJPEAUTYPEINFOVTBL@@PEBUtagCInterfaceStubHeader@@PEBD@Z
?SetMetaData@MD_METHOD@@QEAAXPEBUtagCInterfaceStubHeader@@KPEAUMD_INTERFACE@@PEAUTYPEINFOVTBL@@@Z
?SetMiniSize@CMStream@@QEAAJXZ
?SetModified@CExposedStream@@UEAAXPEAJ@Z
?SetModified@CNFFMappedStream@@UEAAXPEAJ@Z
?SetModified@CSSMappedStream@@UEAAXPEAJ@Z
?SetMoniker@CDefLink@@UEAAJKPEAUIMoniker@@@Z
?SetMoniker@CDefObject@@UEAAJKPEAUIMoniker@@@Z
?SetMoniker@COleObjectImpl@CDdeObject@@UEAAJKPEAUIMoniker@@@Z
?SetName@CDirEntry@@QEAAXPEBVCDfName@@@Z
?SetName@CGlobalFileStream@@QEAAXPEBG@Z
?SetNext@CDlElement@@QEAAXPEAV1@@Z
?SetNext@CFat@@QEAAJKK@Z
?SetNext@CMSFPage@@QEAAXQEAV1@@Z
?SetNext@CUpdate@@QEAAXPEAV1@@Z
?SetNextMarshal@CMarshalList@@QEAAXPEAV1@@Z
?SetNoScratch@CFat@@QEAAXPEAV1@@Z
?SetNoSnapshot@CFat@@QEAAXK@Z
?SetOID@CStdIdentity@@QEAAJAEBU_GUID@@@Z
?SetObjServer@@YAXPEAVCObjServer@@@Z
?SetObjServer@CCtxConnectionManager@@QEAAXPEAVCObjServer@@@Z
?SetObjectCountAtIdleTime@CSurrogateProcessActivator@@UEAAJK@Z
?SetObjectInterfaces@ActivationPropertiesOut@@UEAAJKPEAU_GUID@@PEAUIUnknown@@@Z
?SetOleThunkWowPtr@@YAXPEAVOleThunkWOW@@@Z
?SetOrRevokeForcedDropTarget@CRpcResolver@@QEAAJHPEAUHWND__@@@Z
?SetOrigClsctx@CComActivator@@UEAAJK@Z
?SetOrigClsctx@SpecialProperties@@UEAAJK@Z
?SetOriginalName@CUpdate@@QEAAXPEBVCDfName@@@Z
?SetOwner@CImpAccessControl@COAccessControl@@UEAAJPEAU_TRUSTEE_W@@0@Z
?SetOwnerTableHint@XSLOCK@@AEAAXV?$OPAQUE_HANDLE@$00@@PEAUOWNERENTRY@1@@Z
?SetParam@CallFrame@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@DISPATCH_FRAME@@UEAAJKPEAUtagVARIANT@@@Z
?SetParamMetaData@MD_METHOD@@QEAAXPEAUMD_PARAM@@@Z
?SetParameters@CClassMoniker@@QEAAJPEBG@Z
?SetParent@CConnectionPoint@@QEAAXPEAUIDocfileAsyncConnectionPoint@@@Z
?SetParent@CDIFat@@QEAAXPEAVCMStream@@@Z
?SetParent@CDirectory@@QEAAXPEAVCMStream@@@Z
?SetParent@CFat@@QEAAXPEAVCMStream@@@Z
?SetParent@CPagedVector@@QEAAXPEAVCMStream@@@Z
?SetParent@OpaqueDataInfo@@UEAAJPEAUISerializableParent@@@Z
?SetParent@SerializableProperty@@UEAAJPEAUISerializableParent@@@Z
?SetPartitionId@CComActivator@@UEAAJAEBU_GUID@@@Z
?SetPartitionId@SpecialProperties@@UEAAJAEBU_GUID@@@Z
?SetPathShellLink@CFileMoniker@@AEAAJXZ
?SetPictExt@CMfObject@@AEAAXPEAUHDC__@@HH@Z
?SetPictOrg@CMfObject@@AEAAXPEAUHDC__@@HHH@Z
?SetPosition@GenericStream@@UEAAJKK@Z
?SetPosition@Serializer@@QEAAJK@Z
?SetPresBitsPos@CCacheNode@@AEAAXPEAUIStream@@AEAK@Z
?SetPrev@CDlElement@@QEAAXPEAV1@@Z
?SetPrev@CMSFPage@@QEAAXQEAV1@@Z
?SetPrev@CUpdate@@QEAAXPEAV1@@Z
?SetProcess@ServerLocationInfo@@UEAAJKK@Z
?SetProcessRequestType@CComActivator@@UEAAJK@Z
?SetProcessRequestType@SpecialProperties@@UEAAJK@Z
?SetProperty@CObjectContext@@UEAAJAEBU_GUID@@KPEAUIUnknown@@@Z
?SetPropertyNames@CPropertySetStream@@QEAAXKPEBKQEBQEBGPEAJ@Z
?SetPrototypeContext@ContextInfo@@UEAAJPEAUIContext@@@Z
?SetPushBuffer@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJK@Z
?SetPushBuffer@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJK@Z
?SetPushBuffer@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJK@Z
?SetReadAhead@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAXK@Z
?SetReadAhead@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAXK@Z
?SetReadAhead@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAXK@Z
?SetReaderEvent@EventPoolEntry@@QEAAKXZ
?SetRegistryValue@@YAJUHREG@@PEBGZZ
?SetRemoteReplyInfo@ScmReplyInfo@@UEAAJPEAU_REMOTE_REPLY_SCM_INFO@@@Z
?SetRemoteRequestInfo@ScmRequestInfo@@UEAAJPEAU_REMOTE_REQUEST_SCM_INFO@@@Z
?SetRemoteServerName@ServerLocationInfo@@UEAAJPEAG@Z
?SetResolverInfo@ScmReplyInfo@@UEAAJPEAU_PRIV_RESOLVER_INFO@@@Z
?SetReturnValue@CallFrame@@UEAAXJ@Z
?SetReturnValue@LEGACY_FRAME@@UEAAXJ@Z
?SetScmInfo@ScmRequestInfo@@UEAAJPEAU_PRIV_SCM_INFO@@@Z
?SetScratch@CDFBasis@@QEAAXPEAVCMStream@@@Z
?SetScratchMS@CMStream@@QEAAXPEAV1@@Z
?SetSect@CMSFPageTable@@QEAAXPEAVCMSFPage@@K@Z
?SetSect@CPagedVector@@QEAAXKK@Z
?SetServerPid@SpecialProperties@@UEAAJK@Z
?SetServerPrincipalName@SecurityInfo@@UEAAJPEAG@Z
?SetSessionId@CComActivator@@UEAAJKHH@Z
?SetSessionId@SpecialProperties@@UEAAJKHH@Z
?SetSize@CArrayFValue@@QEAAHHH@Z
?SetSize@CDirectStream@@QEAAJ_K@Z
?SetSize@CDirectory@@QEAAJK_K@Z
?SetSize@CExposedStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CExposedStream@@UEAAXKEPEAPEAXPEAJ@Z
?SetSize@CFileStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CMStream@@QEAAJXZ
?SetSize@CMemBytes@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CMemStm@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CNFFMappedStream@@UEAAXKEPEAPEAXPEAJ@Z
?SetSize@CNdrStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CNtfsStream@@W7EAAJT_ULARGE_INTEGER@@@Z
?SetSize@CPubMappedStream@@QEAAXKEPEAPEAXPEAJ@Z
?SetSize@CPubStream@@QEAAJ_K@Z
?SetSize@CSSMappedStream@@UEAAXKEPEAPEAXPEAJ@Z
?SetSize@CSimpStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CSimpStreamOpen@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CStreamOnMessage@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CTransactedStream@@QEAAJ_K@Z
?SetSize@GenericStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@PSStream@@QEAAJ_K@Z
?SetSizeWorker@CFileStream@@AEAAJ_K@Z
?SetSource@CErrorObject@@UEAAJPEAG@Z
?SetSourceDisplayName@CDefLink@@UEAAJPEBG@Z
?SetSourceMoniker@CDefLink@@UEAAJPEAUIMoniker@@AEBU_GUID@@@Z
?SetStackLocation@CallFrame@@UEAAXPEAX@Z
?SetStackLocation@LEGACY_FRAME@@UEAAXPEAX@Z
?SetStageAndIndex@ActivationPropertiesIn@@UEAAJW4tagACTIVATION_STAGE@@H@Z
?SetStart@CDirectory@@QEAAJKK@Z
?SetState@CSmAllocator@@QEAAXPEAVCSharedMemoryBlock@@PEAEKPEAPEAVCPerContext@@PEAV3@@Z
?SetStateBits@CExposedDocFile@@UEAAJKK@Z
?SetStateBits@CNtfsStorage@@UEAAJKK@Z
?SetStateBits@CNtfsStorageForPropSetStg@@UEAAJKK@Z
?SetStateBits@CPubDocFile@@QEAAJKK@Z
?SetStateBits@CSimpStorage@@UEAAJKK@Z
?SetStateBits@CStgHandle@@QEAAJKK@Z
?SetStateBits@PDocFile@@QEAAJKK@Z
?SetStdInfo@CDefClient@@AEAAJPEAUHWND__@@PEAGPEAX@Z
?SetStg@CCacheNode@@QEAAJPEAUIStorage@@@Z
?SetStorage@InstanceInfo@@UEAAJPEAUIStorage@@@Z
?SetStorageIFD@InstanceInfo@@UEAAJPEAUtagMInterfacePointer@@@Z
?SetStream@Serializer@@QEAAJPEAUIStream@@KK@Z
?SetSxsActCtx@CMessageCall@@QEAAXPEAX@Z
?SetSz@CClass@@QEAAJPEAG@Z
?SetTargetDevice@CDdeObject@@AEAAJPEBUtagDVTARGETDEVICE@@@Z
?SetThreadAllocatorState@CPerContext@@QEAAPEAVCSmAllocator@@PEAPEAV1@@Z
?SetThreadLocal@CMessageCall@@QEAAXH@Z
?SetTime@CDirectory@@QEAAJKW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CFileStream@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CMStream@@QEAAJKW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CStgHandle@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@PTimeEntry@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetTimes@CPropertyStorage@@UEAAJPEBU_FILETIME@@00@Z
?SetTopic@CDdeObject@@QEAAXG@Z
?SetUpMarshallingDistance@ActivationProperties@@QEAAKK@Z
?SetUpdateOptions@CDefLink@@UEAAJK@Z
?SetUpdateTimes@CDefLink@@AEAAJXZ
?SetUserFlags@CDirectory@@QEAAJKKK@Z
?SetValue@CPropertySetStream@@QEAAXKPEAPEAU_INDIRECTPROPERTY@@QEBUtagPROPVARIANT@@PEAUtagPROPERTY_INFORMATION@@PEAGPEAJ@Z
?SetVector@CMSFPage@@QEAAXPEAVCPagedVector@@@Z
?SetWalkInterfaces@OAUTIL@@QEAAXH@Z
?SetWriterEvent@EventPoolEntry@@QEAAXXZ
?SetXSM@CUpdate@@QEAAXPEAVPTSetMember@@@Z
?SetZombie@CIDObject@@AEAAXK@Z
?SetupAdviseConnection@CCacheNode@@QEAAJPEAUIDataObject@@PEAUIAdviseSink@@@Z
?SetupForUnserializing@ActivationProperties@@QEAAJPEAVSerializer@@@Z
?SetupFusionContext@CSurrogateProcessActivator@@UEAAJXZ
?SetupSecurity@CServerSecurity@@QEAAJXZ
?SetupSecurity@CSurrogateProcessActivator@@UEAAJXZ
?SetupSurrogateTimeout@CSurrogateProcessActivator@@UEAAJXZ
?ShiftToEnd@?$CArray@VCCacheNode@@@@QEAAHK@Z
?ShowDialog@CHlprDialog@@UEAA_JPEAUHINSTANCE__@@PEBGPEAUHWND__@@@Z
?ShowObject@COleClientSiteImpl@CDefClient@@UEAAJXZ
?ShutDown@CNFFMappedStream@@QEAAJXZ
?ShutDown@CNtfsStream@@MEAAJXZ
?ShutDown@CNtfsUpdateStreamForPropStg@@MEAAJXZ
?ShutDown@CPropertyBagEx@@QEAAJXZ
?ShutDownStorage@CNtfsStorage@@AEAAJXZ
?Shutdown@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?Shutdown@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAXXZ
?SidToPair@CDirectory@@AEBAJKPEAKPEAG@Z
?Signal@CBindStatusCallback@@UEAAJXZ
?Signal@CChannelObject@@QEAAXXZ
?Signal@CClientCallMgr@@UEAAJXZ
?Signal@CManualResetEvent@@UEAAJXZ
?Signal@CServerCallMgr@CRpcChannelBuffer@@UEAAJXZ
?Signal@CStdEvent@@UEAAJXZ
?SignalObject@@YAJPEAUIUnknown@@@Z
?SignalTheClient@@YAXPEAVCAsyncCall@@@Z
?SilentlyReportExceptions@@YAXPEAU_EXCEPTION_POINTERS@@@Z
?Size@CStackWalkerStack@@UEAA_KJ@Z
?SizeOfTYPEDESC@@YAJPEAUITypeInfo@@PEAUtagTYPEDESC@@PEAK@Z
?SizeTAdd@@YAJ_K0PEA_K@Z
?SizeTSub@@YAJ_K0PEA_K@Z
?Skip@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJK@Z
?Skip@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJK@Z
?Skip@CAddrExclusionList@@UEAAJK@Z
?Skip@CCompositeMonikerEnum@@UEAAJK@Z
?Skip@CEnumCategories@@UEAAJK@Z
?Skip@CEnumCategoriesOfClass@@UEAAJK@Z
?Skip@CEnumClassesOfCategories@@UEAAJK@Z
?Skip@CEnumContextProps@@UEAAJK@Z
?Skip@CEnumFmt10@@UEAAJK@Z
?Skip@CEnumFmt@@UEAAJK@Z
?Skip@CEnumFormatEtc@@UEAAJK@Z
?Skip@CEnumFormatEtcDataArray@@UEAAJK@Z
?Skip@CEnumSTATDATA@@UEAAJK@Z
?Skip@CEnumSTATPROPBAG@@UEAAJK@Z
?Skip@CEnumSTATPROPSETSTG@@UEAAJK@Z
?Skip@CEnumSTATPROPSTG@@UEAAJK@Z
?Skip@CEnumStatData@@UEAAJK@Z
?Skip@CEnumVerb@@EEAAJK@Z
?Skip@CExposedIterator@@UEAAJK@Z
?Skip@CLocalMachineNames@@UEAAJK@Z
?Skip@CNoEnum@@UEAAJK@Z
?Skip@CNtfsEnumSTATSTG@@UEAAJK@Z
?Skip@CRotMonikerEnum@@UEAAJK@Z
?Skip@CSimpEnumSTATSTG@@UEAAJK@Z
?SkipStdMarshal@@YAJPEAUIStream@@PEAU_GUID@@PEAK@Z
?SlowGetOrCreateLockEntry@LockEntry@@CAPEAV1@PEAUThread@@QEAVCRWLock@@@Z
?SortByStartAddress@CStreamChunkList@@QEAAXXZ
?SpecialCleanup@COIDTable@@SAXPEAVCIDObject@@@Z
?SplitEntry@CDirectory@@AEAAJPEBVCDfName@@KKKKKPEAK@Z
?SrvrDispatchIncomingCall@@YAJPEAUtagSRVRDISPATCHDATA@@@Z
?SrvrExecute@CDDEServer@@QEAAJPEAUHWND__@@PEAX0@Z
?SrvrHandleIncomingCall@@YAJPEAVCDDEServer@@PEAUHWND__@@PEAX1@Z
?StRead10NativeData@@YAJPEAUIStorage@@PEAPEAX@Z
?StRead@@YAJPEAUIStream@@PEAXK@Z
?StSave10ItemName@@YAJPEAUIStorage@@PEBD@Z
?StSave10NativeData@@YAJPEAUIStorage@@PEAXH@Z
?StSetSize@@YAJPEAUIStream@@KH@Z
?StandardCreateInstance@CComActivator@@UEAAJAEBU_GUID@@PEAUIUnknown@@KPEAU_COSERVERINFO@@KPEAUtagMULTI_QI@@@Z
?StandardGetClassObject@CComActivator@@UEAAJAEBU_GUID@@KPEAU_COSERVERINFO@@0PEAPEAX@Z
?StandardGetInstanceFromFile@CComActivator@@UEAAJPEAU_COSERVERINFO@@PEAU_GUID@@PEAUIUnknown@@KKPEAGKPEAUtagMULTI_QI@@@Z
?StandardGetInstanceFromIStorage@CComActivator@@UEAAJPEAU_COSERVERINFO@@PEAU_GUID@@PEAUIUnknown@@KPEAUIStorage@@KPEAUtagMULTI_QI@@@Z
?StandardMaskToNTMask@@YAXPEAK0@Z
?StartDisconnectIfNecessary@CObjectContext@@QEAAHXZ
?StartMarshal@@YAJPEAUIStream@@AEBU_GUID@@1K@Z
?StartNTService@CSurrogateProcessActivator@@CAKPEAX@Z
?StartNTServiceIfNecessary@CSurrogateProcessActivator@@UEAAJXZ
?StartSendingSCMPings@CSurrogateProcessActivator@@EEAAJXZ
?StartServer@CComApartment@@QEAAJXZ
?StartServer@OXIDEntry@@QEAAJXZ
?StartServerExternal@CComApartment@@QEAAJXZ
?StartTimer@CCliModalLoop@@QEAAJK@Z
?Stat@CExpParameterValidate@@SAJPEAUtagSTATSTG@@K@Z
?Stat@CExposedDocFile@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CExposedStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CFileStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CFillLockBytes@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CMemBytes@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CMemStm@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNdrStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStorageForPropSetStg@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStream@@W7EAAJPEAUtagSTATSTG@@K@Z
?Stat@CPropertyStorage@@UEAAJPEAUtagSTATPROPSETSTG@@@Z
?Stat@CPubDocFile@@QEAAJPEAUtagSTATSTG@@K@Z
?Stat@CPubStream@@QEAAJPEAUtagSTATSTG@@K@Z
?Stat@CRootPubDocFile@@QEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStorageOpen@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStreamOpen@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CStreamOnMessage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@GenericStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@PTSetMember@@QEAAJPEAUtagSTATSTG@@K@Z
?StatEntry@CDirectory@@QEAAJKPEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StatEntry@CDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StatEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StatEntry@PDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StaticReleaseMarshalData@CExposedDocFile@@SAJPEAUIStream@@K@Z
?StaticReleaseMarshalData@CExposedStream@@SAJPEAUIStream@@K@Z
?StdIDRelease@CIDObject@@QEAAXXZ
?StdMarshalObject@@YAJPEAUIStream@@AEBU_GUID@@PEAUIUnknown@@PEAVCObjectContext@@KPEAXK@Z
?StgConvertPropertyToVariantInternal@@YAEPEBUtagSERIALIZEDPROPERTYVALUE@@KGPEAUtagPROPVARIANT@@PEAVPMemoryAllocator@@PEAJ@Z
?StgConvertVariantToPropertyInternal@@YAPEAUtagSERIALIZEDPROPERTYVALUE@@PEBUtagPROPVARIANT@@GPEAU1@PEAKK2PEAGPEAJ@Z
?StgConvertVariantToPropertyNoEH@@YAPEAUtagSERIALIZEDPROPERTYVALUE@@PEBUtagPROPVARIANT@@GPEAU1@PEAKK2PEAGPEAJ@Z
?StgPropertyLengthAsVariantNoEH@@YAKPEBUtagSERIALIZEDPROPERTYVALUE@@KGPEAJ@Z
?StmToClipfmt@@YAJAEAVCStmBufRead@@PEAK1W4TXTTYPE@@@Z
?Stop@CDefObject@@QEAAJXZ
?StopSendingSCMPings@CSurrogateProcessActivator@@EEAAJXZ
?StopServer@CComApartment@@QEAAJXZ
?StopServer@OXIDEntry@@QEAAJXZ
?Storage32DllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?StoreISurrogate@CSurrogateProcessActivator@@UEAAJPEAUISurrogate@@@Z
?StreamExists@CNtfsStorage@@IEAAJPEBG@Z
?StringCat@@YAJPEAPEAGPEAD@Z
?StringCat@@YAJPEAPEAGZZ
?StringCbCatA@@YAJPEAD_KPEBD@Z
?StringCbCatW@@YAJPEAG_KPEBG@Z
?StringCbCopyA@@YAJPEAD_KPEBD@Z
?StringCbCopyNW@@YAJPEAG_KPEBG1@Z
?StringCbCopyW@@YAJPEAG_KPEBG@Z
?StringCbLengthA@@YAJPEBD_KPEA_K@Z
?StringCbLengthW@@YAJPEBG_KPEA_K@Z
?StringCbPrintfA@@YAJPEAD_KPEBDZZ
?StringCbPrintfW@@YAJPEAG_KPEBGZZ
?StringCchCatW@@YAJPEAG_KPEBG@Z
?StringCchCopyA@@YAJPEAD_KPEBD@Z
?StringCchCopyExA@@YAJPEAD_KPEBDPEAPEADPEA_KK@Z
?StringCchCopyExW@@YAJPEAG_KPEBGPEAPEAGPEA_KK@Z
?StringCchCopyNExW@@YAJPEAG_KPEBG1PEAPEAGPEA_KK@Z
?StringCchCopyNW@@YAJPEAG_KPEBG1@Z
?StringCchCopyW@@YAJPEAG_KPEBG@Z
?StringCchLengthA@@YAJPEBD_KPEA_K@Z
?StringCchLengthW@@YAJPEBG_KPEA_K@Z
?StringCchPrintfA@@YAJPEAD_KPEBDZZ
?StringCchPrintfExA@@YAJPEAD_KPEAPEADPEA_KKPEBDZZ
?StringCchPrintfW@@YAJPEAG_KPEBGZZ
?StringConvert@CComCat@@AEAAJPEAGKPEBG1@Z
?StringFromGuid@@YAXAEBU_GUID@@PEAG@Z
?StringToGUID@@YA_NPEBGPEAU_GUID@@@Z
?StubInvoke@@YAJPEAUtagRPCOLEMESSAGE@@PEAVCStdIdentity@@PEAUIRpcStubBuffer@@PEAUIRpcChannelBuffer@@PEAUtagIPIDEntry@@PEAK@Z
?StubPostCheck@DISPATCH_SERVER_FRAME@@QEAAJXZ
?StubPreCheck@DISPATCH_SERVER_FRAME@@QEAAJXZ
?Subtract@CDdeConnectionTable@@QEAAJKPEAGPEAK@Z
?Success@?$CBaseFrame@VCVoidRaiseFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEBA_NXZ
?SuspendAll@CSurrogateProcessActivator@@UEAAJXZ
?SuspendApplication@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?SuspendImpersonate@@YAJPEAPEAX@Z
?SuspendProcessClassObjects@CClassCache@@SAJXZ
?SuspendProcessClassObjectsHelp@CClassCache@@SAJXZ
?SwitchAfterCallback@@YAJPEAVCPolicySet@@AEAVCRpcCall@@PEAVCCtxCall@@2@Z
?SwitchAptAndDispatchCall@CRpcChannelBuffer@@QEAAJPEAPEAVCMessageCall@@@Z
?SwitchForCallback@@YAJPEAVCPolicySet@@P6AJPEAX@Z1AEBU_GUID@@KPEAUIUnknown@@@Z
?SwitchSTA@@YAJPEAVOXIDEntry@@PEAPEAVCMessageCall@@@Z
?SwitchToFile@CExposedDocFile@@UEAAJPEAG@Z
?SwitchToFile@CFileStream@@UEAAJPEBG_KKPEAX@Z
?SwitchToFile@CRootPubDocFile@@QEAAJPEBGPEAUILockBytes@@PEAK@Z
?SymAPIExceptionFilter@@YAJPEAU_EXCEPTION_POINTERS@@@Z
?SymbolName@CStackWalkerSymbol@@UEAAPEBGXZ
?Sync@CSharedMemoryBlock@@QEAAJXZ
?Sync@CSmAllocator@@QEAAJXZ
?SyncInvoke2@CCtxChnl@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAVCCtxCall@@2PEAUICallFrame@@3PEAU__MIDL_ICallFrame_0001@@PEAJ@Z
?SyncReadAtFile@CNtfsStream@@AEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?SyncStubInvoke@@YAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAVCIDObject@@PEAXPEAUIRpcChannelBuffer@@PEAUIRpcStubBuffer@@PEAK@Z
?SyncWriteAtFile@CNtfsStream@@AEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?SysCopyBSTRSrc@CallFrame@@QEAAPEAGPEAG@Z
?SysFreeStringDst@CallFrame@@QEAAXPEAG@Z
?SzLibIdOfIID@@YAJUHREG@@PEAU_GUID@@PEAG2PEAH@Z
?TLSAddToMap@@YAHPEAUtagSOleTlsData@@@Z
?TLSAllocData@COleTls@@AEAAJXZ
?TLSGetDdeClientWindow@@YAPEAXXZ
?TLSGetDdeServer@@YAPEAUHWND__@@XZ
?TLSGetLogicalThread@@YAPEAU_GUID@@XZ
?TLSGethwndSTA@@YAPEAUHWND__@@XZ
?TLSGrowMap@@YAHXZ
?TLSIsThreadDetaching@@YAEXZ
?TLSIsWOWThread@@YAEXZ
?TLSLookupThreadId@@YAPEAUtagSOleTlsData@@K@Z
?TLSRemoveFromMap@@YAXPEAUtagSOleTlsData@@@Z
?Take@CDfMutex@@QEAAJK@Z
?Take@CSafeSem@@QEAAJXZ
?TakeOverScmRegKey@CROTItem@@QEAAHPEAU_SCMREGKEY@@@Z
?TakeSem@CPerContext@@QEAAJK@Z
?TearDownAdviseConnection@CCacheNode@@QEAAJPEAUIDataObject@@@Z
?TellNtSCMWeAreReady@CSurrogateProcessActivator@@UEAAJXZ
?TellRpcSCMWeAreReady@CSurrogateProcessActivator@@UEAAJXZ
?TellSCMWeAreDone@CSurrogateProcessActivator@@UEAAJXZ
?TellSCMWeAreInitializing@CSurrogateProcessActivator@@UEAAJXZ
?TellSCMWeAreStarted@CSurrogateProcessActivator@@UEAAJAEBU_GUID@@@Z
?TermConv@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@H@Z
?Terminate@CDefClient@@QEAAJPEAUHWND__@@0@Z
?Terminate@CFileStream@@UEAAJH@Z
?Terminate@CFillLockBytes@@UEAAJH@Z
?TerminateNonRenameClients@CDefClient@@AEAAXPEAV1@@Z
?TestCancel@CAsyncCall@@UEAAJXZ
?TestCancel@CChannelObject@@UEAAJXZ
?TestCancel@CClientCall@@UEAAJXZ
?TestCancel@CClientCallMgr@@UEAAJXZ
?TestCancel@CServerCallMgr@CRpcChannelBuffer@@UEAAJXZ
?TestCancel@CServerSecurity@@UEAAJXZ
?TestRegistryValue@@YAJUHREG@@PEBG1@Z
?ThreadCleanup@COIDTable@@SAXXZ
?ThreadCleanup@CPIDTable@@SAXXZ
?ThreadCleanup@CPSTable@@SAXH@Z
?ThreadCleanup@EventPoolEntry@@SAXXZ
?ThreadCleanup@LockEntry@@SAHPEAX@Z
?ThreadDispatch@@YAKPEAX@Z
?ThreadInit@EventPoolEntry@@SAHXZ
?ThreadInit@LockEntry@@SAPEAXK@Z
?ThreadInvoke@@YAXPEAU_RPC_MESSAGE@@@Z
?ThreadSendReceive@@YAJPEAVCMessageCall@@@Z
?ThreadSignal@@YAXPEAU_RPC_ASYNC_STATE@@PEAXW4_RPC_ASYNC_EVENT@@@Z
?ThreadWndProc@@YA_JPEAUHWND__@@I_K_J@Z
?Throw@@YAXK@Z
?ThrowIfError@@YAXJ@Z
?ThrowIfNull@AllocateThrow@@CAXPEAX@Z
?ThrowNYI@@YAXXZ
?ThrowOutOfMemory@@YAXXZ
?TicksToWait@CCliModalLoop@@AEAAKXZ
?ToUnicode@@YAPEAGPEBD@Z
?ToUnicode@@YAXPEBDPEAGK@Z
?ToUtf8@@YAPEADPEBG@Z
?ToUtf8@@YAPEADPEBGK@Z
?TopSymbol@CStackWalkerStack@@UEAAPEAUIStackWalkerSymbol@@XZ
?TranslateAcceleratorW@CSurrogatedObjectList@@SAHPEAUtagMSG@@@Z
?TransmitCall@@YAJPEAVOXIDEntry@@PEAVCMessageCall@@@Z
?TryInterfaceHelper@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAXPEAH@Z
?TryInterfaceHelperForOle32@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAXPEAH@Z
?TryReadLocks@CDFBasis@@AEAAJPEAVCGlobalContext@@K@Z
?TryToLoadCLB@CComCatalog@@AEAAJXZ
?TryTypeLib@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?TurnOffAllMappings@CFileStream@@QEAAXXZ
?TurnOffMapping@CFileStream@@AEAAJH@Z
?UIntAdd@@YAJIIPEAI@Z
?UIntToUShort@@YAJIPEAG@Z
?ULongAdd@@YAJKKPEAK@Z
?ULongLongAdd@@YAJ_K0PEA_K@Z
?ULongLongMult@@YAJ_K0PEA_K@Z
?ULongLongToUInt@@YAJ_KPEAI@Z
?ULongLongToULong@@YAJ_KPEAK@Z
?ULongSub@@YAJKKPEAK@Z
?ULongToUShort@@YAJKPEAG@Z
?UShortAdd@@YAJGGPEAG@Z
?UShortSub@@YAJGGPEAG@Z
?UnAdviseData@CDefClient@@QEAAJPEAUHWND__@@G@Z
?UnAdviseOn@CDdeObject@@AEAAJGH@Z
?UnInit@CItemMoniker@@AEAAXXZ
?UnRegisterCategories@CComCat@@UEAAJKQEAU_GUID@@@Z
?UnRegisterClassImplCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?UnRegisterClassReqCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?UnRegisterClassXXXCategories@CComCat@@AEAAJAEBU_GUID@@KQEAU2@PEBG@Z
?UnRegisterInterface@CRIFTable@@QEAAXPEAUtagRIFEntry@@H@Z
?UnRegisterOleWndClass@@YAXXZ
?UnSerialize@ContextInfo@@UEAAJPEAX@Z
?UnSerialize@InstanceInfo@@UEAAJPEAX@Z
?UnSerialize@InstantiationInfo@@UEAAJPEAX@Z
?UnSerialize@OpaqueDataInfo@@UEAAJPEAX@Z
?UnSerialize@OutSerializer@ActivationPropertiesOut@@UEAAJPEAX@Z
?UnSerialize@ScmReplyInfo@@UEAAJPEAX@Z
?UnSerialize@ScmRequestInfo@@UEAAJPEAX@Z
?UnSerialize@SecurityInfo@@UEAAJPEAX@Z
?UnSerialize@ServerLocationInfo@@UEAAJPEAX@Z
?UnSerialize@SpecialProperties@@UEAAJPEAX@Z
?UnSerializeCallBack@ActivationProperties@@QEAAJAEBU_GUID@@PEAPEAVSerializableProperty@@@Z
?UnSerializeCallBack@ContextInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@InstanceInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@OpaqueDataInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@ScmReplyInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@ScmRequestInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@SecurityInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@ServerLocationInfo@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?UnSerializeCallBack@SpecialProperties@@UEAAJAEBU_GUID@@PEAPEAUISerializable@@@Z
?Unadvise@CAsyncConnection@@UEAAJK@Z
?Unadvise@CDAHolder@@UEAAJK@Z
?Unadvise@CDataAdviseCache@@QEAAJPEAUIDataObject@@K@Z
?Unadvise@CDefLink@@UEAAJK@Z
?Unadvise@CDefObject@@UEAAJK@Z
?Unadvise@COAHolder@@UEAAJK@Z
?Unadvise@COleObjectImpl@CDdeObject@@UEAAJK@Z
?UnbindSource@CDefLink@@UEAAJXZ
?Uncache@COleCache@@UEAAJK@Z
?Unfreeze@CCacheNode@@QEAAJAEAH@Z
?Unfreeze@CCacheViewImpl@COleCache@@UEAAJK@Z
?Uninit@CSmAllocator@@QEAAJXZ
?UninitCallObject@CAsyncCall@@UEAAXXZ
?UninitCallObject@CClientCall@@UEAAXXZ
?UninitCallObject@CMessageCall@@MEAAXXZ
?UninitHookOle@@YAXXZ
?UninitMainThreadWnd@@YAXXZ
?UninitializeAccessControl@@YAXXZ
?UninitializeCatalog@@YAJXZ
?UninitializeEvent@CCtxConnectionManager@@QEAAXXZ
?UninitializeSecurity@@YAXXZ
?UninitializeTracing@@YAXPEBG@Z
?UniqueStringCB2@CMachineNamesHelper@@CAXPEAGPEAX@Z
?UniqueStringCB@CMachineNamesHelper@@CAXPEAGPEAX@Z
?UnlaunchApp@CDdeObject@@AEAAJXZ
?Unlink@CUpdateList@@QEAAXXZ
?UnlinkSpyNode@@YAXPEAUtagInitializeSpyNode@@@Z
?Unlock@@YAJPEAVCPropertySetStream@@J@Z
?Unlock@CComClassInfo@@UEAAJXZ
?Unlock@CComNoClassInfo@@UEAAJXZ
?Unlock@CComSxSClassInfo@@UEAAJXZ
?Unlock@CExposedDocFile@@UEAAJXZ
?Unlock@CExposedStream@@UEAAJXZ
?Unlock@CNFFMappedStream@@UEAAJXZ
?Unlock@CNFFTreeMutex@@UEAAJXZ
?Unlock@CNtfsStorage@@UEAAJXZ
?Unlock@CNtfsStream@@AEAAJXZ
?Unlock@CPropertySetStorage@@IEAAXXZ
?Unlock@CPropertySetStream@@QEAAJXZ
?Unlock@CPropertyStorage@@AEAAJXZ
?Unlock@CSSMappedStream@@UEAAJXZ
?Unlock@CStdWrapper@@QEAAXPEAVCPolicySet@@@Z
?UnlockAndRelease@CStdIdentity@@QEAAKXZ
?UnlockClient@CStdMarshal@@QEAAKXZ
?UnlockRegion@CExpParameterValidate@@SAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CExposedStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CMemBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CMemStm@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNdrStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNtfsStream@@W7EAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CSimpStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CStreamOnMessage@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@GenericStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockServer@CStdMarshal@@QEAAXXZ
?UnlockServerForActivation@CClassCache@@SAXXZ
?Unmap@CExposedStream@@UEAAXEPEAPEAX@Z
?Unmap@CNFFMappedStream@@UEAAXEPEAPEAX@Z
?Unmap@CSSMappedStream@@UEAAXEPEAPEAX@Z
?Unmarshal@CDllHost@@AEAAJXZ
?Unmarshal@CExposedDocFile@@SAJPEAUIStream@@PEAPEAXK@Z
?Unmarshal@CExposedStream@@SAJPEAUIStream@@PEAPEAXK@Z
?Unmarshal@CFileStream@@SAJPEAVCGlobalFileStream@@PEAPEAXK@Z
?Unmarshal@CallFrame@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@DISPATCH_CLIENT_FRAME@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@DISPATCH_INTERCEPTOR@@UEAAJKPEAXKHKPEAU__MIDL_ICallFrame_0004@@PEAKPEAPEAUICallFrame@@@Z
?Unmarshal@DISPATCH_SERVER_FRAME@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@Interceptor@@EEAAJKPEAXKHKPEAU__MIDL_ICallFrame_0004@@PEAKPEAPEAUICallFrame@@@Z
?UnmarshalAtIndex@OutSerializer@ActivationPropertiesOut@@QEAAXK@Z
?UnmarshalContext@@YAJPEAUSDfMarshalPacket@@PEAPEAVCPerContext@@KHH@Z
?UnmarshalDragDataObject@@YAPEAUIDataObject@@PEAX@Z
?UnmarshalEnvoy@CObjectContext@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalFromEndpointProperty@@YAJPEAUHWND__@@HPEAPEAUIUnknown@@PEAH@Z
?UnmarshalIPID@CStdMarshal@@QEAAJAEBU_GUID@@PEAUtagSTDOBJREF@@PEAVOXIDEntry@@PEAPEAX@Z
?UnmarshalInterface@ActivationProperties@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@ActivationPropertiesIn@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CClassMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CDocfileUnmarshalFactory@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CErrorObject@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CExposedDocFile@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CExposedStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CFreeMarshaler@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CMarshalImplPStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CObjectContext@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CPointerMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CSimpStorage@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CSimpStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CStaticWrapper@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CStdMarshal@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CStdWrapper@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@InprocActpropsUnmarshaller@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInternalObjRef@@YAJAEAUtagOBJREF@@PEAPEAX@Z
?UnmarshalItfPtrs@CCtxCall@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?UnmarshalObjRef@@YAJAEAUtagOBJREF@@PEAPEAXH@Z
?UnmarshalObjRef@CStdMarshal@@QEAAJAEAUtagOBJREF@@PEAPEAX@Z
?UnmarshalParam@CallFrame@@QEAAXAEAU_MIDL_STUB_MESSAGE@@AEBUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PEAE@Z
?UnmarshalRemUnk@OXIDEntry@@AEAAJAEBU_GUID@@PEAPEAX@Z
?UnmarshalSharedMemory@@YAJPEAUSDfMarshalPacket@@KPEAVCPerContext@@@Z
?UnmarshalSwitch@@YAJPEAX@Z
?Unregister@ClassRegistration@@QEAAJXZ
?UnregisterDcomInterfaces@@YAJXZ
?UnregisterForDisconnect@CStdMarshal@@SAJPEAX@Z
?UnregisterUnused@CRIFTable@@QEAAXXZ
?UnregisterUnusedHelper@CRIFTable@@CAHPEAUSHashChain@@PEAX@Z
?UnregisterUnusedInterfaces@@YAXXZ
?Unreserve@CDirectStream@@SAXIQEAVCDFBasis@@@Z
?Unreserve@CDocFile@@SAXIQEAVCDFBasis@@@Z
?Unreserve@CFreeList@@QEAAXI@Z
?Unreserve@CTransactedStream@@SAXIQEAVCDFBasis@@@Z
?Unreserve@CWrappedDocFile@@SAXIQEAVCDFBasis@@@Z
?UnsetServerPid@SpecialProperties@@UEAAJXZ
?Update@CCacheNode@@QEAAJPEAUIDataObject@@KAEAH@Z
?Update@CDdeObject@@AEAAJH@Z
?Update@CDefLink@@UEAAJPEAUIBindCtx@@@Z
?Update@CDefLink@@UEAAJXZ
?Update@CDefObject@@UEAAJXZ
?Update@COleObjectImpl@CDdeObject@@UEAAJXZ
?Update@HAS_INTERFACES@@QEBAXAEAJ@Z
?UpdateActivationSettings@CRpcResolver@@QEAAXXZ
?UpdateAddrExclusionList@CAddrControl@@UEAAJPEAUIUnknown@@@Z
?UpdateAdviseCounts@CDdeObject@@AEAAJGHH@Z
?UpdateAutoOnSave@CDefLink@@AEAAXXZ
?UpdateCOMPlusEnabled@@YAXXZ
?UpdateCache@COleCache@@UEAAJPEAUIDataObject@@KPEAX@Z
?UpdateCacheNodeForNative@COleCache@@AEAAPEAVCCacheNode@@XZ
?UpdateCachedLocalMIDEntries@COXIDTable@@QEAAJXZ
?UpdateClsid@@YAXPEAU_GUID@@@Z
?UpdateMksFromAbs@CDefLink@@AEAAJPEAUIMoniker@@0@Z
?UpdateReaderEventState@EventPoolEntry@@SAKPECKKAEAH@Z
?UpdateRelMkFromAbsMk@CDefLink@@AEAAXPEAUIMoniker@@@Z
?UpdateResultsArray@@YAJJKPEAUtagMULTI_QI@@@Z
?UpdateTarget@CDragOperation@@QEAAHXZ
?UpdateUserClassID@CDefLink@@AEAAXXZ
?UpdateWriterEventState@EventPoolEntry@@SAHPECKH@Z
?UpgradeToWriterLock@CRWLock@@QEAAKPEAULockCookie@@PEAHK@Z
?UseWin31DragDrop@@YAHPEAUIDataObject@@@Z
?Ut10NativeStmToContentsStm@@YAJPEAUIStorage@@AEBU_GUID@@H@Z
?UtCompareFormatEtc@@YAHPEAUtagFORMATETC@@0@Z
?UtCompareTargetDevice@@YAHPEAUtagDVTARGETDEVICE@@0@Z
?UtContentsStmTo10NativeStm@@YAJPEAUIStorage@@AEBU_GUID@@HPEAI@Z
?UtConvertBitmapToDib@@YAPEAXPEAUHBITMAP__@@PEAUHPALETTE__@@@Z
?UtConvertDibToBitmap@@YAPEAUHBITMAP__@@PEAX@Z
?UtCopyFormatEtc@@YAHPEAUtagFORMATETC@@0@Z
?UtCopyStatData@@YAHPEAUtagSTATDATA@@0@Z
?UtCopyTargetDevice@@YAPEAUtagDVTARGETDEVICE@@PEAU1@@Z
?UtCreateStorageOnHGlobal@@YAJPEAXHPEAPEAUIStorage@@PEAPEAUILockBytes@@@Z
?UtDIBFileStmToPBrushNativeStm@@YAJPEAUIStream@@0@Z
?UtDIBStmToDIBFileStm@@YAJPEAUIStream@@K0@Z
?UtDupGlobal@@YAPEAXPEAXI@Z
?UtDupPalette@@YAPEAUHPALETTE__@@PEAU1@@Z
?UtDupPtr@@YAPEAXPEAXK@Z
?UtDupString@@YAPEAGPEBG@Z
?UtDupStringA@@YAPEADPEBD@Z
?UtFormatToTymed@@YAKG@Z
?UtGetClassID@@YAHPEAUIUnknown@@PEAU_GUID@@@Z
?UtGetDibExtents@@YAXPEAUtagBITMAPINFOHEADER@@PEAJ1@Z
?UtGetHDIBFromDIBFileStm@@YAJPEAUIStream@@PEAPEAX@Z
?UtGetHEMFFromContentsStm@@YAXPEAUIStream@@PEAPEAX@Z
?UtGetHEMFFromEMFStm@@YAJPEAUIStream@@PEAKPEAPEAUHENHMETAFILE__@@@Z
?UtGetHGLOBALFromStm@@YAJPEAUIStream@@KPEAPEAX@Z
?UtGetHMFFromMFStm@@YAJPEAUIStream@@KHPEAPEAX@Z
?UtGetHMFPICT@@YAPEAXPEAUHMETAFILE__@@HKK@Z
?UtGetHMFPICTFromMSDrawNativeStm@@YAJPEAUIStream@@KPEAPEAX@Z
?UtGetHMFPICTFromPlaceableMFStm@@YAJPEAUIStream@@PEAPEAX@Z
?UtGetHPRESFromNative@@YAPEAXPEAUIStorage@@PEAUIStream@@GH@Z
?UtGetIconData@@YAJPEAUIDataObject@@AEBU_GUID@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?UtGetPresStreamName@@YAXPEAGH@Z
?UtGetSizeAndExtentsFromPlaceableMFStm@@YAJPEAUIStream@@PEAKPEAJ2@Z
?UtGetTempFileName@@YAJPEAG0@Z
?UtGetUNICODEData@@YAJKPEADPEAGPEAPEAG@Z
?UtHDIBFileToOlePresStm@@YAJPEAXPEAUIStream@@@Z
?UtHDIBToDIBFileStm@@YAJPEAXKPEAUIStream@@@Z
?UtHEMFToEMFStm@@YAJPEAUHENHMETAFILE__@@KPEAUIStream@@W4tagEMFWRITETYPE@@@Z
?UtHGLOBALtoHGLOBAL@@YAJPEAXK0@Z
?UtHGLOBALtoStm@@YAJPEAXKPEAUIStream@@@Z
?UtHGLOBALtoStorage@@YAJPEAXPEAUIStorage@@@Z
?UtHMFToMFStm@@YAJPEAPEAXKPEAUIStream@@@Z
?UtHMFToPlaceableMFStm@@YAJPEAPEAXKJJPEAUIStream@@@Z
?UtIsFormatSupported@@YAHPEAUIDataObject@@KG@Z
?UtMFStmToPlaceableMFStm@@YAJPEAUIStream@@KJJ0@Z
?UtOlePresStmToContentsStm@@YAJPEAUIStorage@@PEAGHPEAI@Z
?UtOlePresStmToContentsStm@@YAJPEAUIStorage@@PEAGPEAUIStream@@PEAI@Z
?UtPaletteSize@@YA_KPEAUtagBITMAPINFOHEADER@@@Z
?UtPlaceableMFStmToMSDrawNativeStm@@YAJPEAUIStream@@0@Z
?UtPutUNICODEData@@YAJKPEAGPEAPEADPEAPEAGPEAK@Z
?UtQueryPictFormat@@YAHPEAUIDataObject@@PEAUtagFORMATETC@@@Z
?UtReadOlePresStmHeader@@YAJPEAUIStream@@PEAUtagFORMATETC@@PEAKPEAH@Z
?UtReleaseStatData@@YAXPEAUtagSTATDATA@@@Z
?UtRemoveExtraOlePresStreams@@YAXPEAUIStorage@@H@Z
?UtWriteOlePresStmHeader@@YAJPEAUIStream@@PEAUtagFORMATETC@@K@Z
?UtilQueryProtocol@@YAHGPEAG@Z
?ValidSig@CROTItem@@QEAAHGH@Z
?Validate@CDocfileUnmarshalFactory@@QEBAJXZ
?Validate@CEnumSTATPROPSETSTG@@AEAAJXZ
?Validate@CEnumSTATPROPSTG@@AEAAJXZ
?Validate@CExposedDocFile@@QEBAJXZ
?Validate@CExposedIterator@@QEBAJXZ
?Validate@CExposedStream@@QEBAJXZ
?Validate@CMSFHeader@@QEBAJXZ
?Validate@CPropertySetStorage@@IEAAJXZ
?Validate@CPropertyStorage@@AEAAJXZ
?Validate@CPubDocFile@@SAJPEAV1@@Z
?ValidateAccessCheckClient@@YAJPEAU_TRUSTEE_W@@@Z
?ValidateAndFixStreamACL@@YAJPEAUtagSTREAM_ACL@@PEAK1@Z
?ValidateAndRemapParams@@YAJAEBU_GUID@@AEAKPEAU_COSERVERINFO@@KPEAUtagMULTI_QI@@@Z
?ValidateAndTransformAccReqList@@YAJPEAU_ACTRL_ALISTW@@PEAPEAUtagSTREAM_ACE@@PEAPEAXPEAK33@Z
?ValidateAnsiPath@CFileMoniker@@QEAAJXZ
?ValidateContext@CStdWrapper@@QEAAJPEAVCObjectContext@@PEAVIFaceEntry@@PEAPEAVCtxEntry@@@Z
?ValidateContext@IFaceEntry@@QEAAPEAVCtxEntry@@PEAVCObjectContext@@PEAVCPolicySet@@@Z
?ValidateDIFat@CSimpStorageOpen@@QEAAJPEAKKK@Z
?ValidateDirectory@CSimpStorageOpen@@QEAAJPEAEK@Z
?ValidateFat@CSimpStorageOpen@@QEAAJPEAKK@Z
?ValidateGetBufferSize@CUserMarshalInfo@@QEAA_KXZ
?ValidateGrfAttrs@@YAJKK@Z
?ValidateGrfMode@@YAJKH@Z
?ValidateHeader@CSimpStorageOpen@@QEAAJAEAVCMSFHeader@@@Z
?ValidateInRGLPOLESTR@@YAJKQEBQEBG@Z
?ValidateInRGPROPVARIANT@@YAJKQEBUtagPROPVARIANT@@@Z
?ValidateMarshalFlags@@YAJKPEAXK@Z
?ValidateNameW@@YAJPEBGI@Z
?ValidateObjRef@@YAJPEAUtagInterfaceData@@K@Z
?ValidateObjRefExtension@@YAJPEAUtagInterfaceData@@KKAEAUtagOBJREF@@@Z
?ValidateOutRGLPOLESTR@@YAJKQEAPEAG@Z
?ValidateOutRGPROPVARIANT@@YAJKQEAUtagPROPVARIANT@@@Z
?ValidateRGPROPID@CPropertyStorage@@AEAAJKQEBK@Z
?ValidateRGPROPSPEC@CPropertyStorage@@AEAAJKQEBUtagPROPSPEC@@@Z
?ValidateRef@CPropertyStorage@@AEAAJXZ
?ValidateSNB@@YAJPEAPEAG@Z
?ValidateSecurityDescriptor@@YAJPEAX@Z
?ValidateSrvrClass@@YAHPEAG0@Z
?ValidateStgOptions@@YAJPEAUtagSTGOPTIONS@@KH@Z
?ValidateTrustee@@YAJPEAU_TRUSTEE_W@@@Z
?ValidateTrusteeString@@YAJPEAG@Z
?ValidateVTs@CPropertyStorage@@AEAAJKQEBUtagPROPVARIANT@@@Z
?ValidateWriteAccess@CExposedDocFile@@AEAAJXZ
?ValidateWriteAccess@CExposedStream@@AEAAJXZ
?VariantClear@OAUTIL@@QEAAJPEAUtagVARIANT@@H@Z
?VariantCopy@OAUTIL@@QEAAJPEAUtagVARIANT@@0H@Z
?VariantToProperty_Worker@@YAPEAUtagSERIALIZEDPROPERTYVALUE@@PEBUtagPROPVARIANT@@GPEAU1@PEAKKEE2PEAGPEAJ@Z
?VerifyAuthIdentity@@YAJPEAU_COAUTHIDENTITY@@@Z
?VerifyCallerIsClipboardOwner@@YAPEAUHWND__@@XZ
?VerifyCommitFlags@@YAJK@Z
?VerifyDVTARGETDEVICE16@@YAJPEFBUtagDVTARGETDEVICE@@@Z
?VerifyExtent@@YAPEAXPEAUSHookList@@PEAUWireExtentArray@@KPEAPEAUWireExtent@@K@Z
?VerifyIid@@YAJAEBU_GUID@@0@Z
?VerifyInterface@CClientCallMgr@@QEAAJPEAUIUnknown@@@Z
?VerifyLockType@@YAJK@Z
?VerifyMatchingSecret@CProcessSecret@@QEAAJU_GUID@@@Z
?VerifyMoveFlags@@YAJK@Z
?VerifyPerms@@YAJKH@Z
?VerifyStatFlag@@YAJK@Z
?VerifyStructFromHGlobal@@YAJGPEAX@Z
?VerifyThreadId@CThreadCheck@@QEAAHXZ
?WOWMsgArrived@CAsyncCall@@UEAAJXZ
?WOWMsgArrived@CClientCall@@UEAAJXZ
?Wait@CBindStatusCallback@@UEAAJKK@Z
?Wait@CClientCallMgr@@UEAAJKK@Z
?Wait@CManualResetEvent@@UEAAJKK@Z
?Wait@CServerCallMgr@CRpcChannelBuffer@@UEAAJKK@Z
?Wait@CStdEvent@@UEAAJKK@Z
?Wait@EVENT@@QEAAJK@Z
?WaitForAccess@@YAJPEAUILockBytes@@KPEAK@Z
?WaitForAccess@CComApartment@@AEAAJXZ
?WaitForApartmentShutdown@OXIDEntry@@QEAAXXZ
?WaitForInitCompleted@CSurrogateProcessActivator@@UEAAJKK@Z
?WaitForNTServiceIfNecessary@CSurrogateProcessActivator@@UEAAJXZ
?WaitForPendingAsyncSends@@YAXXZ
?WaitForReaderEvent@EventPoolEntry@@QEAAKKAEAHPEAVCRWLock@@@Z
?WaitForSurrogateTimeout@CSurrogateProcessActivator@@UEAAJXZ
?WaitForWriteAccess@CDFBasis@@QEAAJKPEAVCGlobalContext@@@Z
?WaitForWriteAccess@CExposedDocFile@@UEAAJK@Z
?WaitForWriterEvent@EventPoolEntry@@QEAAKKAEAHPEAVCRWLock@@@Z
?WaitMultiple@CSynchronizeContainer@@UEAAJKKPEAPEAUISynchronize@@@Z
?WaitObject@@YAJPEAUIUnknown@@KK@Z
?WakeUpWowClient@@YAXPEAVCMessageCall@@@Z
?Walk@OAUTIL@@AEAAJPEAUtagSAFEARRAY@@PEAUIRecordInfo@@KPEAXPEAPEAX@Z
?Walk@OAUTIL@@AEAAJPEAUtagSAFEARRAY@@PEAX@Z
?Walk@OAUTIL@@QEAAJKPEAUtagDISPPARAMS@@@Z
?Walk@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?Walk@OAUTIL@@QEAAJPEAUtagVARIANT@@@Z
?WalkConformantArrayPriv@CallFrame@@QEAAXPEAEPEBE@Z
?WalkEmbeddedPointers@CallFrame@@QEAAXPEAEPEBE@Z
?WalkEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAEPEBE@Z
?WalkFrame@CallFrame@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@DISPATCH_FRAME@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAXPEAUICallFrameWalker@@@Z
?WalkInterfaces@OAUTIL@@QEAAHXZ
?WalkRecord@OAUTIL@@AEAAJPEAXPEAUIRecordInfo@@@Z
?WalkRecord@OAUTIL@@AEAAJPEAXPEAUITypeInfo@@@Z
?WalkRecordField@OAUTIL@@AEAAJPEAEPEAUtagTYPEDESC@@PEAUITypeInfo@@@Z
?WalkThroughAlias@@YAJPEAPEAUITypeInfo@@PEAPEAUtagTYPEATTR@@@Z
?WalkWorker@CallFrame@@QEAAXPEAEPEBE@Z
?WdtpGlobalUnmarshal64@@YAPEAEPEAKPEAEPEAPEAXH_K@Z
?WdtpGlobalUnmarshal@@YAPEAEPEAKPEAEPEAPEAXH_K@Z
?WdtpInterfacePointer_UserUnmarshalWorker@@YAPEAEPEAU_USER_MARSHAL_CB@@PEAEPEAPEAUIUnknown@@AEBU_GUID@@_KH@Z
?WdtpRemotableHandle_UserMarshal@@YAPEAEPEAKPEAEPEA_J@Z
?WdtpRemotableHandle_UserSize@@YAKPEAKKPEA_J@Z
?WdtpRemotableHandle_UserUnmarshal@@YAPEAEPEAKPEAEPEA_J@Z
?WeOwn@CallFrame@@QEAAHPEAX@Z
?Win32ErrorToScode@@YAJK@Z
?WinSqmSetDWORD@@YAXPEAU_GUID@@KK@Z
?Worker@DeserializeHelper@@QEAAJPEBUtagSERIALIZEDPROPERTYVALUE@@KHHHPEAUtagPROPVARIANT@@PEAK@Z
?WorkerLoop@CRpcThread@@QEAAXXZ
?WorkerThread@CDllHost@@AEAAJXZ
?WorkerThreadLoop@CROIDTable@@CAKPEAX@Z
?WrapInterfaceForContext@CStdWrapper@@QEAAJPEAVCObjectContext@@PEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?WrapperMarshalObject@@YAJPEAUIStream@@AEBU_GUID@@PEAUIUnknown@@KPEAXK@Z
?WrapperRelease@CIDObject@@QEAAXXZ
?Write@CExpParameterValidate@@SAJPEBXKPEAK@Z
?Write@CExposedStream@@UEAAJPEBXKPEAK@Z
?Write@CMemStm@@UEAAJPEBXKPEAK@Z
?Write@CNFFMappedStream@@QEAAXPEBXKPEAK@Z
?Write@CNdrStream@@UEAAJPEBXKPEAK@Z
?Write@CNtfsStream@@UEAAJPEBXKPEAK@Z
?Write@CPropertyBagEx@@UEAAJPEBGPEAUtagVARIANT@@@Z
?Write@CPubMappedStream@@QEAAJXZ
?Write@CSSMappedStream@@IEAAJXZ
?Write@CSimpStream@@UEAAJPEBXKPEAK@Z
?Write@CSimpStreamOpen@@UEAAJPEBXKPEAK@Z
?Write@CStmBufWrite@@QEAAJPEBXK@Z
?Write@CStreamOnMessage@@UEAAJPEBXKPEAK@Z
?Write@GenericStream@@UEAAJPEBXKPEAK@Z
?Write@Serializer@@QEAAJPEAEK@Z
?WriteAnsiStringStream@@YAJPEAUIStream@@PEADK@Z
?WriteAt@CDirectStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAt@CExpParameterValidate@@SAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CFileStream@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CMemBytes@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CPubStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAt@CTransactedStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAt@PSStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAtWorker@CFileStream@@AEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteCompObjStm@@YAJPEAUIStorage@@PEAVCompObjStmData@@@Z
?WriteControlStream@CNtfsStorage@@IEAAJXZ
?WriteCustomObjrefHeaderToStream@@YAJAEBU_GUID@@0KPEAUIStream@@@Z
?WriteDoubleString@@YAJPEAUIStream@@PEAGGPEADG@Z
?WriteEntry@CEffPermsCacheLUID@@QEAAHU_LUID@@K@Z
?WriteLong@CStmBufWrite@@QEAAJJ@Z
?WriteMap@CDeltaList@@AEAAJPEAKKK@Z
?WriteMappedStream@CNFFMappedStream@@AEAAJXZ
?WriteMultiple@CPropertyBagEx@@UEAAJKQEBQEBGQEBUtagPROPVARIANT@@@Z
?WriteMultiple@CPropertyStorage@@UEAAJKQEBUtagPROPSPEC@@QEBUtagPROPVARIANT@@K@Z
?WriteObjRef@@YAJPEAUIStream@@AEAUtagOBJREF@@K@Z
?WriteObjects@CPropertyBagEx@@AEAAJKQEBUtagPROPSPEC@@QEBUtagPROPVARIANT@@@Z
?WriteOneObject@CPropertyBagEx@@AEAAJPEBUtagPROPSPEC@@PEBUtagPROPVARIANT@@@Z
?WritePropertyNames@CPropertyStorage@@UEAAJKQEBKQEBQEAG@Z
?WriteStringStreamA@@YAJAEAVCStmBufWrite@@PEBD@Z
?_CompactChunk@CPropertySetStream@@AEAAXPEBUCStreamChunk@@JK@Z
?_CompactStream@CPropertySetStream@@AEAAXPEBVCStreamChunkList@@@Z
?_ComparePropertyNames@CPropertySetStream@@AEBAEPEBX0HKPEAJ@Z
?_ComputeMinimumSize@CPropertySetStream@@AEAAKKPEAJ@Z
?_CountFreePropertyOffsets@CPropertySetStream@@AEAAKPEAJ@Z
?_Create@CPropertySetStream@@AEAAXPEBU_GUID@@0KGW4tagLOADSTATE@@KPEAJ@Z
?_CreateLogger@CDebugEventFire@@UEAAXXZ
?_CreateLogger@COle32DebugEventFire@@UEAAXXZ
?_CreateUserDefinedSection@CPropertySetStream@@AEAAEW4tagLOADSTATE@@KPEAJ@Z
?_DeleteMovePropertyOffsets@CPropertySetStream@@AEAAXPEBUtagPROPERTY_INFORMATION@@KPEAJ@Z
?_DestroyLogger@CDebugEventFire@@UEAAXXZ
?_DestroyLogger@COle32DebugEventFire@@UEAAXXZ
?_DictionaryEntryLength@CPropertySetStream@@AEBAKPEFBUtagENTRY@@@Z
?_DictionaryLength@CPropertySetStream@@AEBAKPEBUtagDICTIONARY@@KPEAJ@Z
?_Find@CContextList@@QEAAPEAVCContext@@K@Z
?_FixDocPartsElements@CPropertySetStream@@AEAAEW4tagPATCHOP@@KPEAXPEFBXPEAK@Z
?_FixDocPartsVector@CPropertySetStream@@AEAAEW4tagPATCHOP@@PEAUtagSERIALIZEDPROPERTYVALUE@@PEAK@Z
?_FixHeadingPairElements@CPropertySetStream@@AEAAEW4tagPATCHOP@@KPEAUtagSERIALIZEDPROPERTYVALUE@@PEFBU3@PEAK@Z
?_FixHeadingPairVector@CPropertySetStream@@AEAAEW4tagPATCHOP@@PEAUtagSERIALIZEDPROPERTYVALUE@@PEAK@Z
?_FixPackedPropertySet@CPropertySetStream@@AEAAXPEAJ@Z
?_FixSummaryInformation@CPropertySetStream@@AEAAXPEAKPEAJ@Z
?_FixUnalignedUDPropSet@CPropertySetStream@@AEAAXPEAKPEAJ@Z
?_GetAndValidateSectionHeader@CPropertySetStream@@AEAAJPEAPEAUtagPROPERTYSECTIONHEADER@@@Z
?_GetNewOffset@CPropertySetStream@@AEBAKPEBVCStreamChunkList@@K@Z
?_GetSectionHeader@CPropertySetStream@@AEAAPEAUtagPROPERTYSECTIONHEADER@@KPEAJ@Z
?_InitSection@CPropertySetStream@@AEAAXPEAUtagFORMATIDOFFSET@@KH@Z
?_InsertMovePropertyOffsets@CPropertySetStream@@AEAAXPEBUtagPROPERTY_INFORMATION@@KKKPEAJ@Z
?_IsCaseSensitive@CPropertySetStream@@AEBAEXZ
?_IsLocalizationSettable@CPropertySetStream@@AEAAEPEAJ@Z
?_LoadHeader@CPropertySetStream@@AEAA?AW4tagLOADSTATE@@PEBU_GUID@@EPEAJ@Z
?_LoadProperty@CPropertySetStream@@AEAAPEAUtagSERIALIZEDPROPERTYVALUE@@KPEAKPEAJ@Z
?_LoadPropertyOffsetPointers@CPropertySetStream@@AEAAPEAUtagPROPERTYSECTIONHEADER@@PEAPEAUtagPROPERTYIDOFFSET@@0PEAJ@Z
?_LocalAlloc@@YAPEAX_K@Z
?_LocalFree@@YAXPEAX@Z
?_MultiByteToWideChar@CPropertySetStream@@AEAAXPEBDKGPEAPEAGPEAKPEAJ@Z
?_NextDictionaryEntry@CPropertySetStream@@AEBAPEFAUtagENTRY@@PEFBU2@@Z
?_PatchSectionOffsets@CPropertySetStream@@AEAAXJ@Z
?_PropertyNameLength@CPropertySetStream@@AEBAGPEBXPEAK@Z
?_SearchForCodePage@CPropertySetStream@@AEAAXPEAJ@Z
?_SetModified@CPropertySetStream@@AEAAXPEAJ@Z
?_UpdatePropertyOffsets@CPropertySetStream@@AEAAXPEBVCStreamChunkList@@PEAJ@Z
?_ValidatePropertyOffsets@CPropertySetStream@@AEAAJPEAUtagPROPERTYSECTIONHEADER@@PEAUtagPROPERTYIDOFFSET@@1@Z
?_WideCharToMultiByte@CPropertySetStream@@AEAAXPEBGKGPEAPEADPEAKPEAJ@Z
?_WinSqmDWORDEvent@@YAXPEBU_EVENT_DESCRIPTOR@@PEAU_GUID@@KK@Z
?_WriteMultiple@CPropertyStorage@@AEAAJKQEBUtagPROPSPEC@@QEBUtagPROPVARIANT@@K@Z
?_WritePropertyNames@CPropertyStorage@@AEAAJKQEBKQEBQEAG@Z
?add@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@@Z
?add@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@@Z
?add@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@@Z
?bPSz4@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEK@Z
?bPSz4@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJK@Z
?bPSz4@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANK@Z
?baRgtB5@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEKPEAK@Z
?baRgtB5@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJKPEAK@Z
?baRgtB5@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANKPEAK@Z
?baRltB4@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEKPEAK@Z
?baRltB4@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJKPEAK@Z
?baRltB4@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANKPEAK@Z
?bfPgtF2@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEK@Z
?bfPgtF2@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJK@Z
?bfPgtF2@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANK@Z
?bfPltF3@?$CPipeProxy@E$1?IID_IPipeByte@@3U_GUID@@B$1?IID_AsyncIPipeByte@@3U2@BUIPipeByte@@UAsyncIPipeByte@@@@AEAAJPEAEK@Z
?bfPltF3@?$CPipeProxy@J$1?IID_IPipeLong@@3U_GUID@@B$1?IID_AsyncIPipeLong@@3U2@BUIPipeLong@@UAsyncIPipeLong@@@@AEAAJPEAJK@Z
?bfPltF3@?$CPipeProxy@N$1?IID_IPipeDouble@@3U_GUID@@B$1?IID_AsyncIPipeDouble@@3U2@BUIPipeDouble@@UAsyncIPipeDouble@@@@AEAAJPEANK@Z
?contains@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAV2@@Z
?contains@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAV2@@Z
?contains@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAV2@@Z
?dfwcsnicmp@@YAHPEBG0_K@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?fnChunkCompare@@YAHPEBX0@Z
?fnOffsetCompare@@YAHPEBX0@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?freeCOAUTHIDENTITY@SecurityInfo@@SAXPEAU_COAUTHIDENTITY@@@Z
?freeCOAUTHINFO@SecurityInfo@@SAXPEAU_COAUTHINFO@@@Z
?freeCOSERVERINFO@SecurityInfo@@SAXPEAU_COSERVERINFO@@@Z
?freeRemoteReplyInfo@ScmReplyInfo@@QEAAXXZ
?freeRemoteRequest@ScmRequestInfo@@QEAAXPEAU_REMOTE_REQUEST_SCM_INFO@@@Z
?freeResolverInfo@ScmReplyInfo@@QEAAXXZ
?freeScmInfo@ScmRequestInfo@@QEAAXPEAU_PRIV_SCM_INFO@@@Z
?grow@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?grow@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?grow@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?iFindDIBits@@YAHPEAUtagBITMAPINFOHEADER@@@Z
?isPresent@Assoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHXZ
?isPresent@Assoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHXZ
?isPresent@Assoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHXZ
?map@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAUINTERFACE_HELPER_CLSID@@@Z
?map@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAPEAUINTERFACE_HELPER_CLSID@@@Z
?map@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAUMD_INTERFACE@@@Z
?map@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAPEAUMD_INTERFACE@@@Z
?map@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAUTYPEINFOVTBL@@@Z
?map@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEBAHAEBVMAP_KEY_GUID@@PEAPEAUTYPEINFOVTBL@@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@PEAPEAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@PEAPEAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@PEAPEAVAssoc@1@@Z
?next@?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAHXZ
?next@?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAHXZ
?releaseAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?releaseAssoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?remove@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@@Z
?remove@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@@Z
?remove@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@@Z
?reset@?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAXXZ
?reset@?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAXXZ
?utGetAppIdForModule@@YAJPEAGK@Z
?utGetModuleName@@YAJPEAGK@Z
?utGetProtseqFromTowerId@@YAPEBGG@Z
?utGetTowerId@@YAGPEBG@Z
?vDecRef@CPubDocFile@@QEAAJXZ
?vRelease@CDFBasis@@QEAAJXZ
?vRelease@CPubDocFile@@QEAAJXZ
?vRelease@CPubStream@@QEAAJXZ
?vRelease@CSeekPointer@@QEAAXXZ
?vdtor@CPubDocFile@@QEAAXXZ
?vdtor@CRootPubDocFile@@QEAAXXZ
?wAllocDdePokeBlock@@YAPEADKGPEAPEAX@Z
?wAtomFromCLSID@@YAGAEBU_GUID@@@Z
?wAtomLenA@@YAHG@Z
?wAtomName@@YAPEAGG@Z
?wAtomNameA@@YAPEADG@Z
?wBindIfRunning@@YAXPEAUIUnknown@@@Z
?wCLSIDFromOle1Class@@YAJPEAGPEAU_GUID@@H@Z
?wCLSIDFromOle1Class@@YAJPEBGPEAU_GUID@@H@Z
?wCLSIDFromString@@YAJPEAGPEAU_GUID@@@Z
?wClassesMatch@@YAJAEBU_GUID@@PEAG@Z
?wClassesMatchW@@YAJAEBU_GUID@@PEAG@Z
?wClearRelativeMoniker@@YAXPEAUIUnknown@@0@Z
?wClearWaitState@@YAHPEAVDDE_CHANNEL@@@Z
?wCoCreateGuid@@YAJPEAU_GUID@@@Z
?wCoGetCallerTID@@YAJPEAK@Z
?wCoGetClassExt@@YAJPEBGPEAU_GUID@@@Z
?wCoGetClassPattern@@YAJPEAXPEAU_GUID@@@Z
?wCoGetCurrentLogicalThreadId@@YAJPEAU_GUID@@@Z
?wCoGetInterfaceAndReleaseStream@@YAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?wCoGetTreatAsClass@@YAJAEBU_GUID@@PEAU1@@Z
?wCoInitializeEx@@YAJAEAVCOleTls@@K@Z
?wCoIsOle1Class@@YAHAEBU_GUID@@@Z
?wCoMarshalHresult@@YAJPEAUIStream@@J@Z
?wCoMarshalInterThreadInterfaceInStream@@YAJAEBU_GUID@@PEAUIUnknown@@PEAPEAUIStream@@@Z
?wCoRegisterComBinding@@YAJPEAG0K@Z
?wCoTreatAsClass@@YAJAEBU_GUID@@0@Z
?wCoUninitialize@@YAXAEAVCOleTls@@H@Z
?wCoUnmarshalHresult@@YAJPEAUIStream@@PEAJ@Z
?wCommonPrefixWith@CFileMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?wCompareDllName@@YAHPEBG0K@Z
?wCompatibleClasses@@YAJGG@Z
?wConvertIStorageToOLESTREAM@@YAJPEAUIStorage@@PEAU_OLESTREAM@@PEAVCGenericObject@@@Z
?wConvertOLESTREAMToIStorage@@YAJPEAU_OLESTREAM@@PEAUIStorage@@PEAVCGenericObject@@@Z
?wCreateFromDataEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateFromFileEx@@YAJPEAUIMoniker@@PEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@3PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateLinkEx@@YAJPEAUIMoniker@@AEBU_GUID@@PEAUIDataObject@@1KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@3PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateObject@@YAJU_GUID@@HAEBU1@PEAUIOleClientSite@@PEAUIStorage@@GPEAPEAX@Z
?wCreatePackageEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@HPEAPEAX@Z
?wCreateStgAroundNative@@YAJPEAXGGW4CNVTYP@@GPEAPEAUIStorage@@PEAPEAUILockBytes@@@Z
?wDoLockUnlock@@YAXPEAUIUnknown@@@Z
?wDoUpdate@@YAJPEAUIUnknown@@@Z
?wDupAtom@@YAGG@Z
?wDupData@@YAJPEAPEAXPEAXG@Z
?wExtendAtom@@YAGGH@Z
?wFileBind@@YAJPEAGPEAPEAUIUnknown@@@Z
?wFreeData@@YAXPEAXGH@Z
?wFreePokeData@@YAXPEAVDDE_CHANNEL@@H@Z
?wGUIDFromString@@YAHPEBGPEAU_GUID@@@Z
?wGetData@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?wGetEndpointsForApp@@YAJPEAU_GUID@@@Z
?wGetEnumFormatEtc@@YAJPEAUIDataObject@@KPEAPEAUIEnumFORMATETC@@@Z
?wGetExeNameAtom@@YAGAEBU_GUID@@@Z
?wGetFrameFilterPtr@@YAPEAVCFrameFilter@@PEAUHWND__@@@Z
?wGetMonikerAndClassFromFile@@YAJPEBGHPEAPEAUIMoniker@@PEAHPEAU_GUID@@PEAPEAUIDataObject@@@Z
?wGetMonikerAndClassFromObject@@YAJPEAUIDataObject@@PEAPEAUIMoniker@@PEAU_GUID@@@Z
?wGetOleMenuPtr@@YAPEAUtagOLEMENU@@PEAX@Z
?wGlobalAddAtom@@YAGPEBG@Z
?wGlobalAddAtomA@@YAGPEBD@Z
?wHandleCopy@@YAJPEAX0@Z
?wHandleFromDdeData@@YAPEAXPEAX@Z
?wInitializeCacheEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAXPEAH@Z
?wInitiate@@YAHPEAVDDE_CHANNEL@@GG@Z
?wIsOldServer@@YAHG@Z
?wLoadAndInitObjectEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wNeedToPackage@@YAHAEBU_GUID@@@Z
?wNewHandle@@YAPEAXPEADK@Z
?wNormalize@@YAJPEAUtagFORMATETC@@0@Z
?wOle1ClassFromCLSID2@@YAHAEBU_GUID@@PEAGH@Z
?wPostMessageToServer@@YAHPEAVDDE_CHANNEL@@G_JH@Z
?wPreparePokeBlock@@YAPEAXPEAXGGH@Z
?wProgIDFromCLSID@@YAJAEBU_GUID@@PEAPEAG@Z
?wQueryEmbedFormats@@YAGPEAUIDataObject@@PEAG@Z
?wQueryFormatSupport@@YAJPEAXKPEAUtagFORMATETC@@@Z
?wQueryLinkFormats@@YAGPEAUIDataObject@@@Z
?wQueryUseCustomLink@@YAHAEBU_GUID@@@Z
?wRegGetClassExt@@YAJPEBGPEAU_GUID@@@Z
?wRegOpenClassKey@@YAJAEBU_GUID@@KPEAPEAUHKEY__@@@Z
?wRegOpenFileExtensionKey@@YAJPEBGPEAPEAUHKEY__@@@Z
?wRegOpenInterfaceKey@@YAJAEBU_GUID@@PEAPEAUHKEY__@@@Z
?wRegOpenProgIDKey@@YAJPEBGPEAPEAUHKEY__@@@Z
?wRegQueryAsyncIIDFromSyncIID@@YAJAEBU_GUID@@PEAU1@@Z
?wRegQueryClassValue@@YAJAEBU_GUID@@PEBGPEAGH@Z
?wRegQueryPSClsid@@YAJAEBU_GUID@@PEAU1@@Z
?wRegQuerySyncIIDFromAsyncIID@@YAJAEBU_GUID@@PEAU1@@Z
?wReturnCreationError@@YAJJ@Z
?wSaveObjectWithoutCommit@@YAJPEAUIUnknown@@PEAUIStorage@@H@Z
?wScanItemOptions@@YAJGPEAH@Z
?wSetTymed@@YAJPEAUtagFORMATETC@@@Z
?wStringFromGUID2@@YAHAEBU_GUID@@PEAGH@Z
?wStringFromIID@@YAJAEBU_GUID@@PEAPEAG@Z
?wStringFromUUID@@YAJAEBU_GUID@@PEAG@Z
?wStuffIconOfFileEx@@YAJPEBGHKKPEAUtagFORMATETC@@PEAUIUnknown@@@Z
?wTerminateIsComing@@YAHPEAVDDE_CHANNEL@@@Z
?wTimedGetMessage@@YAJPEAUtagMSG@@PEAUHWND__@@GG@Z
?wTransferHandle@@YAJPEAPEAX0G@Z
?wUUIDFromString@@YAHPEBGPEAU_GUID@@@Z
?wValidateAdvfEx@@YAJKPEAK@Z
?wValidateCreateParams@@YAJKKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@0PEAUIOleClientSite@@PEAUIStorage@@@Z
?wValidateFormatEtc@@YAJKPEAUtagFORMATETC@@0@Z
?wValidateFormatEtcEx@@YAJKPEAKPEAUtagFORMATETC@@1PEAPEAU1@PEAH@Z
?wVerifyFormatEtc@@YAJPEAUtagFORMATETC@@@Z
?wWriteFmtUserType@@YAJPEAUIStorage@@AEBU_GUID@@@Z
?wkProgIDFromCLSID@@YAJAEBU_GUID@@PEAPEAG@Z
ASYNC_STGMEDIUM_UserFree
ASYNC_STGMEDIUM_UserFree64
ASYNC_STGMEDIUM_UserMarshal
ASYNC_STGMEDIUM_UserMarshal64
ASYNC_STGMEDIUM_UserSize
ASYNC_STGMEDIUM_UserSize64
ASYNC_STGMEDIUM_UserUnmarshal
ASYNC_STGMEDIUM_UserUnmarshal64
AllocateReservedIds
AssignEndpointProperty
AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy
AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Proxy
AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Thunk
AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy
AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Proxy
AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Thunk
AsyncIAdviseSink_Begin_OnClose_Proxy
AsyncIAdviseSink_Begin_OnDataChange_Proxy
AsyncIAdviseSink_Begin_OnRename_Proxy
AsyncIAdviseSink_Begin_OnSave_Proxy
AsyncIAdviseSink_Begin_OnViewChange_Proxy
AsyncIAdviseSink_Begin_RemoteOnClose_Proxy
AsyncIAdviseSink_Begin_RemoteOnClose_Thunk
AsyncIAdviseSink_Begin_RemoteOnDataChange_Proxy
AsyncIAdviseSink_Begin_RemoteOnDataChange_Thunk
AsyncIAdviseSink_Begin_RemoteOnRename_Proxy
AsyncIAdviseSink_Begin_RemoteOnRename_Thunk
AsyncIAdviseSink_Begin_RemoteOnSave_Proxy
AsyncIAdviseSink_Begin_RemoteOnSave_Thunk
AsyncIAdviseSink_Begin_RemoteOnViewChange_Proxy
AsyncIAdviseSink_Begin_RemoteOnViewChange_Thunk
AsyncIAdviseSink_Finish_OnClose_Proxy
AsyncIAdviseSink_Finish_OnDataChange_Proxy
AsyncIAdviseSink_Finish_OnRename_Proxy
AsyncIAdviseSink_Finish_OnSave_Proxy
AsyncIAdviseSink_Finish_OnViewChange_Proxy
AsyncIAdviseSink_Finish_RemoteOnClose_Proxy
AsyncIAdviseSink_Finish_RemoteOnClose_Thunk
AsyncIAdviseSink_Finish_RemoteOnDataChange_Proxy
AsyncIAdviseSink_Finish_RemoteOnDataChange_Thunk
AsyncIAdviseSink_Finish_RemoteOnRename_Proxy
AsyncIAdviseSink_Finish_RemoteOnRename_Thunk
AsyncIAdviseSink_Finish_RemoteOnSave_Proxy
AsyncIAdviseSink_Finish_RemoteOnSave_Thunk
AsyncIAdviseSink_Finish_RemoteOnViewChange_Proxy
AsyncIAdviseSink_Finish_RemoteOnViewChange_Thunk
BSTR_UserFree
BSTR_UserFree64
BSTR_UserMarshal
BSTR_UserMarshal64
BSTR_UserSize
BSTR_UserSize64
BSTR_UserUnmarshal
BSTR_UserUnmarshal64
BindMoniker
BulkUpdateOIDs
CLIPFORMAT_UserFree
CLIPFORMAT_UserFree64
CLIPFORMAT_UserMarshal
CLIPFORMAT_UserMarshal64
CLIPFORMAT_UserSize
CLIPFORMAT_UserSize64
CLIPFORMAT_UserUnmarshal
CLIPFORMAT_UserUnmarshal64
CLSIDFromOle1Class
CLSIDFromProgID
CLSIDFromProgIDEx
CLSIDFromString
COMInterceptor
CStdStubBuffer_AddRef
CStdStubBuffer_Connect
CStdStubBuffer_CountRefs
CStdStubBuffer_DebugServerQueryInterface
CStdStubBuffer_DebugServerRelease
CStdStubBuffer_Disconnect
CStdStubBuffer_Invoke
CStdStubBuffer_IsIIDSupported
CStdStubBuffer_QueryInterface
CStdStubBuffer_Release
CUSTMACT_MIDL_user_allocate
CUSTMACT_MIDL_user_free
CallFrameInternal_CStdStubBuffer_Release
ChannelProcessInitialize
ChannelProcessUninitialize
ChannelThreadUninitialize
ClientDocWndProc
ClientResolveOXID
ClipboardWndProc
CoAddRefServerProcess
CoAllowSetForegroundWindow
CoBuildVersion
CoCancelCall
CoCopyProxy
CoCreateErrorInfo
CoCreateFreeThreadedMarshaler
CoCreateGuid
CoCreateInstance
CoCreateInstanceEx
CoCreateObjectInContext
CoDeactivateObject
CoDisableCallCancellation
CoDisconnectContext
CoDisconnectObject
CoDosDateTimeToFileTime
CoEnableCallCancellation
CoFileTimeNow
CoFileTimeToDosDateTime
CoFreeAllLibraries
CoFreeLibrary
CoFreeUnusedLibraries
CoFreeUnusedLibrariesEx
CoGetActivationState
CoGetApartmentID
CoGetCallContext
CoGetCallState
CoGetCallerTID
CoGetCancelObject
CoGetClassObject
CoGetClassVersion
CoGetContextToken
CoGetCurrentLogicalThreadId
CoGetCurrentProcess
CoGetDefaultContext
CoGetErrorInfo
CoGetInstanceFromFile
CoGetInstanceFromIStorage
CoGetInterceptor
CoGetInterceptorForOle32
CoGetInterceptorFromTypeInfo
CoGetInterfaceAndReleaseStream
CoGetMalloc
CoGetMarshalSizeMax
CoGetModuleType
CoGetObject
CoGetObjectContext
CoGetPSClsid
CoGetProcessIdentifier
CoGetStandardMarshal
CoGetStdMarshalEx
CoGetSystemSecurityPermissions
CoGetTreatAsClass
CoImpersonateClient
CoInitialize
CoInitializeEx
CoInitializeSecurity
CoInitializeWOW
CoInstall
CoInvalidateRemoteMachineBindings
CoIsHandlerConnected
CoIsHashedOle1Class
CoIsOle1Class
CoLoadLibrary
CoLockObjectExternal
CoMarshalHresult
CoMarshalInterThreadInterfaceInStream
CoMarshalInterface
CoOpenClassKey
CoPopServiceDomain
CoPushServiceDomain
CoQueryAuthenticationServices
CoQueryClientBlanket
CoQueryProxyBlanket
CoQueryReleaseObject
CoReactivateObject
CoRegisterChannelHook
CoRegisterClassObject
CoRegisterInitializeSpy
CoRegisterMallocSpy
CoRegisterMessageFilter
CoRegisterPSClsid
CoRegisterSurrogate
CoRegisterSurrogateEx
CoRegisterSurrogatedObject
CoReleaseMarshalData
CoReleaseServerProcess
CoResumeClassObjects
CoRetireServer
CoRevertToSelf
CoRevokeClassObject
CoRevokeInitializeSpy
CoRevokeMallocSpy
CoSetCancelObject
CoSetErrorInfo
CoSetProxyBlanket
CoSetState
CoStdMarshalObject
CoSuspendClassObjects
CoSwitchCallContext
CoTaskMemAlloc
CoTaskMemFree
CoTaskMemRealloc
CoTestCancel
CoTreatAsClass
CoUninitialize
CoUnloadingWOW
CoUnmarshalHresult
CoUnmarshalInterface
CoWaitForMultipleHandles
ComPs_NdrDllCanUnloadNow
ComPs_NdrDllGetClassObject
ComPs_NdrDllRegisterProxy
ComPs_NdrDllUnregisterProxy
ComcatDllRegisterServer
CommandLineFromMsiDescriptor
Concatenate
Connect
ControlTracingForProcess
ConvertSidToStringSidW
CreateAntiMoniker
CreateBindCtx
CreateCallback
CreateClassMoniker
CreateDataAdviseHolder
CreateDataCache
CreateFileMoniker
CreateGenericComposite
CreateILockBytesOnHGlobal
CreateIdentityHandler
CreateItemMoniker
CreateMemStm
CreateObjrefMoniker
CreateOle1FileMoniker
CreateOleAdviseHolder
CreatePackagerMoniker
CreatePointerMoniker
CreateRegistryKey
CreateStdProgressIndicator
CreateStreamOnHGlobal
DbgPrint
DcomChannelSetHResult
DdeCommonWndProc
DebugORPCClientFillBuffer
DebugORPCClientGetBufferSize
DebugORPCClientNotify
DebugORPCRestoreAuto
DebugORPCServerFillBuffer
DebugORPCServerGetBufferSize
DebugORPCServerNotify
DebugORPCSetAuto
DelayLoadFailureHook
DeleteRegistryKey
DeleteRegistryValue
DfCreateDocfile
DfGetClass
DfOpenDocfile
DfOpenStorageEx
DfUnMarshalInterface
DialogProc
DllDebugObjectRPCHook
DllGetClassObject
DllMain
DllRegisterServer
DoDragDrop
DocWndProc
DragDropSetFDT
EnableDisableDynamicIPTracking
EnableHookObject
EnumerateRegistryKeys
ExportedIsValidPtrIn
FLAG_STGMEDIUM_UserFree
FLAG_STGMEDIUM_UserFree64
FLAG_STGMEDIUM_UserMarshal
FLAG_STGMEDIUM_UserMarshal64
FLAG_STGMEDIUM_UserSize
FLAG_STGMEDIUM_UserSize64
FLAG_STGMEDIUM_UserUnmarshal
FLAG_STGMEDIUM_UserUnmarshal64
FindClassID
FindClassMoniker
FindFileMoniker
FindLUAMoniker
FindProgIdMoniker
FindSessionMoniker
FlushSCMBindings
FmtIdToPropStgName
FrameWndFilterProc
FreeDDElParam
FreePropVariantArray
FreePropVariantArrayWorker
GUIDFromString
GetActivationPropertiesIn
GetCatalogHelper
GetCatalogObject
GetCatalogObject2
GetClassFile
GetClassFileEx
GetConvertStg
GetCurrentAddrExclusionList
GetDocumentBitStg
GetHGlobalFromILockBytes
GetHGlobalFromStream
GetHookInterface
GetInProcFreeMarshaler
GetInterfaceFromWindowProp
GetRegistryValue
GetRunningObjectTable
GetSafeAllocSize
GetThreadID
GetWindowPropInterface
HACCEL_UserFree
HACCEL_UserFree64
HACCEL_UserMarshal
HACCEL_UserMarshal64
HACCEL_UserSize
HACCEL_UserSize64
HACCEL_UserUnmarshal
HACCEL_UserUnmarshal64
HBITMAP_UserFree
HBITMAP_UserFree64
HBITMAP_UserMarshal
HBITMAP_UserMarshal64
HBITMAP_UserSize
HBITMAP_UserSize64
HBITMAP_UserUnmarshal
HBITMAP_UserUnmarshal64
HBRUSH_UserFree
HBRUSH_UserFree64
HBRUSH_UserMarshal
HBRUSH_UserMarshal64
HBRUSH_UserSize
HBRUSH_UserSize64
HBRUSH_UserUnmarshal
HBRUSH_UserUnmarshal64
HDC_UserFree
HDC_UserFree64
HDC_UserMarshal
HDC_UserMarshal64
HDC_UserSize
HDC_UserSize64
HDC_UserUnmarshal
HDC_UserUnmarshal64
HENHMETAFILE_UserFree
HENHMETAFILE_UserFree64
HENHMETAFILE_UserMarshal
HENHMETAFILE_UserMarshal64
HENHMETAFILE_UserSize
HENHMETAFILE_UserSize64
HENHMETAFILE_UserUnmarshal
HENHMETAFILE_UserUnmarshal64
HGLOBAL_UserFree
HGLOBAL_UserFree64
HGLOBAL_UserMarshal
HGLOBAL_UserMarshal64
HGLOBAL_UserSize
HGLOBAL_UserSize64
HGLOBAL_UserUnmarshal
HGLOBAL_UserUnmarshal64
HICON_UserFree
HICON_UserFree64
HICON_UserMarshal
HICON_UserMarshal64
HICON_UserSize
HICON_UserSize64
HICON_UserUnmarshal
HICON_UserUnmarshal64
HMENU_UserFree
HMENU_UserFree64
HMENU_UserMarshal
HMENU_UserMarshal64
HMENU_UserSize
HMENU_UserSize64
HMENU_UserUnmarshal
HMENU_UserUnmarshal64
HMETAFILEPICT_UserFree
HMETAFILEPICT_UserFree64
HMETAFILEPICT_UserMarshal
HMETAFILEPICT_UserMarshal64
HMETAFILEPICT_UserSize
HMETAFILEPICT_UserSize64
HMETAFILEPICT_UserUnmarshal
HMETAFILEPICT_UserUnmarshal64
HMETAFILE_UserFree
HMETAFILE_UserFree64
HMETAFILE_UserMarshal
HMETAFILE_UserMarshal64
HMETAFILE_UserSize
HMETAFILE_UserSize64
HMETAFILE_UserUnmarshal
HMETAFILE_UserUnmarshal64
HPALETTE_UserFree
HPALETTE_UserFree64
HPALETTE_UserMarshal
HPALETTE_UserMarshal64
HPALETTE_UserSize
HPALETTE_UserSize64
HPALETTE_UserUnmarshal
HPALETTE_UserUnmarshal64
HWND_UserFree
HWND_UserFree64
HWND_UserMarshal
HWND_UserMarshal64
HWND_UserSize
HWND_UserSize64
HWND_UserUnmarshal
HWND_UserUnmarshal64
HkOleRegisterObject
HrNt
IAdviseSink2_OnLinkSrcChange_Proxy
IAdviseSink2_RemoteOnLinkSrcChange_Proxy
IAdviseSink2_RemoteOnLinkSrcChange_Thunk
IAdviseSink_OnClose_Proxy
IAdviseSink_OnDataChange_Proxy
IAdviseSink_OnRename_Proxy
IAdviseSink_OnSave_Proxy
IAdviseSink_OnViewChange_Proxy
IAdviseSink_RemoteOnClose_Proxy
IAdviseSink_RemoteOnClose_Thunk
IAdviseSink_RemoteOnDataChange_Proxy
IAdviseSink_RemoteOnDataChange_Thunk
IAdviseSink_RemoteOnRename_Proxy
IAdviseSink_RemoteOnRename_Thunk
IAdviseSink_RemoteOnSave_Proxy
IAdviseSink_RemoteOnSave_Thunk
IAdviseSink_RemoteOnViewChange_Proxy
IAdviseSink_RemoteOnViewChange_Thunk
IBindCtx_GetBindOptions_Proxy
IBindCtx_GetBindOptions_Stub
IBindCtx_RemoteGetBindOptions_Proxy
IBindCtx_RemoteGetBindOptions_Thunk
IBindCtx_RemoteSetBindOptions_Proxy
IBindCtx_RemoteSetBindOptions_Thunk
IBindCtx_SetBindOptions_Proxy
IClassFactory_CreateInstance_Proxy
IClassFactory_CreateInstance_Stub
IClassFactory_LockServer_Proxy
IClassFactory_RemoteCreateInstance_Thunk
IClassFactory_RemoteLockServer_Thunk
IDataObject_GetDataHere_Proxy
IDataObject_GetData_Proxy
IDataObject_RemoteGetDataHere_Proxy
IDataObject_RemoteGetDataHere_Thunk
IDataObject_RemoteGetData_Proxy
IDataObject_RemoteGetData_Thunk
IDataObject_RemoteSetData_Proxy
IDataObject_RemoteSetData_Thunk
IDataObject_SetData_Proxy
IDataObject_SetData_Stub
IDispatch_Invoke_Proxy
IDispatch_RemoteInvoke_Thunk
IEnumConnectionPoints_Next_Proxy
IEnumConnectionPoints_Next_Stub
IEnumConnectionPoints_RemoteNext_Proxy
IEnumConnectionPoints_RemoteNext_Thunk
IEnumConnections_Next_Proxy
IEnumConnections_Next_Stub
IEnumConnections_RemoteNext_Proxy
IEnumConnections_RemoteNext_Thunk
IEnumFORMATETC_Next_Proxy
IEnumFORMATETC_Next_Stub
IEnumFORMATETC_RemoteNext_Proxy
IEnumFORMATETC_RemoteNext_Thunk
IEnumMoniker_Next_Proxy
IEnumMoniker_Next_Stub
IEnumMoniker_RemoteNext_Proxy
IEnumMoniker_RemoteNext_Thunk
IEnumOLEVERB_Next_Proxy
IEnumOLEVERB_Next_Stub
IEnumOLEVERB_RemoteNext_Proxy
IEnumOLEVERB_RemoteNext_Thunk
IEnumSTATDATA_Next_Proxy
IEnumSTATDATA_Next_Stub
IEnumSTATDATA_RemoteNext_Proxy
IEnumSTATDATA_RemoteNext_Thunk
IEnumSTATPROPSETSTG_Next_Proxy
IEnumSTATPROPSETSTG_RemoteNext_Proxy
IEnumSTATPROPSETSTG_RemoteNext_Thunk
IEnumSTATPROPSTG_Next_Proxy
IEnumSTATPROPSTG_RemoteNext_Proxy
IEnumSTATPROPSTG_RemoteNext_Thunk
IEnumSTATSTG_Next_Proxy
IEnumSTATSTG_Next_Stub
IEnumSTATSTG_RemoteNext_Proxy
IEnumSTATSTG_RemoteNext_Thunk
IEnumString_Next_Proxy
IEnumString_Next_Stub
IEnumString_RemoteNext_Proxy
IEnumString_RemoteNext_Thunk
IEnumUnknown_Next_Proxy
IEnumUnknown_Next_Stub
IEnumUnknown_RemoteNext_Proxy
IEnumUnknown_RemoteNext_Thunk
IFillLockBytes_FillAppend_Proxy
IFillLockBytes_FillAt_Proxy
IFillLockBytes_RemoteFillAppend_Proxy
IFillLockBytes_RemoteFillAppend_Thunk
IFillLockBytes_RemoteFillAt_Proxy
IFillLockBytes_RemoteFillAt_Thunk
IIDFromString
ILockBytes_ReadAt_Proxy
ILockBytes_RemoteReadAt_Proxy
ILockBytes_RemoteReadAt_Thunk
ILockBytes_RemoteWriteAt_Proxy
ILockBytes_RemoteWriteAt_Thunk
ILockBytes_WriteAt_Proxy
IMoniker_BindToObject_Proxy
IMoniker_BindToObject_Stub
IMoniker_BindToStorage_Proxy
IMoniker_BindToStorage_Stub
IMoniker_RemoteBindToObject_Proxy
IMoniker_RemoteBindToObject_Thunk
IMoniker_RemoteBindToStorage_Proxy
IMoniker_RemoteBindToStorage_Thunk
IOleCache2_RemoteUpdateCache_Proxy
IOleCache2_RemoteUpdateCache_Thunk
IOleCache2_UpdateCache_Proxy
IOleInPlaceActiveObject_RemoteResizeBorder_Proxy
IOleInPlaceActiveObject_RemoteResizeBorder_Thunk
IOleInPlaceActiveObject_RemoteTranslateAccelerator_Thunk
IOleInPlaceActiveObject_ResizeBorder_Proxy
IOleInPlaceActiveObject_TranslateAccelerator_Proxy
IRunnableObject_IsRunning_Proxy
IRunnableObject_IsRunning_Stub
IRunnableObject_RemoteIsRunning_Proxy
IRunnableObject_RemoteIsRunning_Thunk
ISequentialStream_Read_Proxy
ISequentialStream_RemoteRead_Proxy
ISequentialStream_RemoteRead_Thunk
ISequentialStream_RemoteWrite_Proxy
ISequentialStream_RemoteWrite_Thunk
ISequentialStream_Write_Proxy
IStorage_CopyTo_Proxy
IStorage_EnumElements_Proxy
IStorage_EnumElements_Stub
IStorage_OpenStream_Proxy
IStorage_OpenStream_Stub
IStorage_RemoteCopyTo_Proxy
IStorage_RemoteCopyTo_Thunk
IStorage_RemoteEnumElements_Proxy
IStorage_RemoteEnumElements_Thunk
IStorage_RemoteOpenStream_Proxy
IStorage_RemoteOpenStream_Thunk
IStream_CopyTo_Proxy
IStream_CopyTo_Stub
IStream_RemoteCopyTo_Proxy
IStream_RemoteCopyTo_Thunk
IStream_RemoteSeek_Proxy
IStream_RemoteSeek_Thunk
IStream_Seek_Proxy
IUnknown_AddRef_Proxy
IUnknown_QueryInterface_Proxy
IUnknown_Release_Proxy
IViewObject_Draw_Proxy
IViewObject_Draw_Stub
IViewObject_Freeze_Proxy
IViewObject_GetAdvise_Proxy
IViewObject_GetColorSet_Proxy
IViewObject_RemoteContinue
IViewObject_RemoteDraw_Proxy
IViewObject_RemoteDraw_Thunk
IViewObject_RemoteFreeze_Proxy
IViewObject_RemoteFreeze_Thunk
IViewObject_RemoteGetAdvise_Proxy
IViewObject_RemoteGetAdvise_Thunk
IViewObject_RemoteGetColorSet_Proxy
IViewObject_RemoteGetColorSet_Thunk
I_RpcAsyncAbortCall
I_RpcAsyncSetHandle
I_RpcExceptionFilter
InlineIsEqualGUID
InstallApplication
InstanceInfoData_AlignSize
InstanceInfoData_Decode
InstanceInfoData_Encode
InternalGetLongPathNameW
InternalVerifyStackAvailable
Invoke
IrotEnumRunning
IrotGetObject
IrotGetTimeOfLastChange
IrotIsRunning
IrotNoteChangeTime
IrotRegister
IrotRevoke
IsAccelerator
IsClient
IsEqualGUID
IsInOut
IsInterfaceImplementedByProxy
IsObjectCreationAllowed
IsStdIdentity
IsValidIid
IsValidInterface
LPSAFEARRAY_Marshal
LPSAFEARRAY_Size
LPSAFEARRAY_Unmarshal
LPSAFEARRAY_UserFree
LPSAFEARRAY_UserFree64
LPSAFEARRAY_UserMarshal
LPSAFEARRAY_UserMarshal64
LPSAFEARRAY_UserSize
LPSAFEARRAY_UserSize64
LPSAFEARRAY_UserUnmarshal
LPSAFEARRAY_UserUnmarshal64
LoadTypeLibEx
LocationInfoData_Decode
MGetDDElParamHi
MGetDDElParamLo
MIDL_user_allocate
MIDL_user_free
MKVDefaultHashKey
MakeVerbList
MesBufferHandleReset
MesDecodeBufferHandleCreate
MesEncodeFixedBufferHandleCreate
MesHandleFree
MessageFilterProc
MkParseDisplayName
MonikerCommonPrefixWith
MonikerRelativePathTo
MsiSetInternalUI
Ndr64DcomAsyncClientCall
NdrAsyncServerCall
NdrCStdStubBuffer_Release
NdrClientCall2
NdrClientCall3
NdrCreateServerInterfaceFromStub
NdrGetSimpleTypeBufferAlignment
NdrGetSimpleTypeBufferSize
NdrGetSimpleTypeMemorySize
NdrGetTypeFlags
NdrGetUserMarshalInfo
NdrMesTypeAlignSize2
NdrMesTypeDecode2
NdrMesTypeDecode3
NdrMesTypeEncode2
NdrMesTypeEncode3
NdrOleAllocate
NdrOleFree
NdrOutInit
NdrServerCall2
NdrTypeMarshall
NdrTypeSize
NdrTypeUnmarshall
NdrUnmarshallBasetypeInline
NdrpGetProcFormatString
NdrpGetTypeFormatString
NdrpGetTypeGenCookie
NdrpMemoryIncrement
NdrpReleaseTypeFormatString
NdrpReleaseTypeGenCookie
NdrpVarVtOfTypeDesc
NotifyDDStartOrStop
NukeHandleAndReleasePunk
OACleanup
ObjactThreadUninitialize
ObjrefDllRegisterServer
Ole1ClassFromCLSID2
OleConvertIStorageToOLESTREAM
OleConvertIStorageToOLESTREAMEx
OleConvertOLESTREAMToIStorage
OleConvertOLESTREAMToIStorageEx
OleCreate
OleCreateDefaultHandler
OleCreateEmbeddingHelper
OleCreateEx
OleCreateFromData
OleCreateFromDataEx
OleCreateFromFile
OleCreateFromFileEx
OleCreateLink
OleCreateLinkEx
OleCreateLinkFromData
OleCreateLinkFromDataEx
OleCreateLinkToFile
OleCreateLinkToFileEx
OleCreateMenuDescriptor
OleCreateStaticFromData
OleDestroyMenuDescriptor
OleDoAutoConvert
OleDraw
OleDuplicateData
OleFlushClipboard
OleGetAutoConvert
OleGetClipboard
OleGetIconOfClass
OleGetIconOfFile
OleInitialize
OleInitializeEx
OleInitializeWOW
OleIsCurrentClipboard
OleIsDcMeta
OleIsRunning
OleLoad
OleLoadFromStream
OleLockRunning
OleMetafilePictFromIconAndLabel
OleNoteObjectVisible
OleQueryCreateFromData
OleQueryLinkFromData
OleRegEnumFormatEtc
OleRegEnumVerbs
OleRegGetMiscStatus
OleRegGetUserType
OleReleaseEnumVerbCache
OleRun
OleSave
OleSaveToStream
OleSetAutoConvert
OleSetClipboard
OleSetContainedObject
OleSetMenuDescriptor
OleStdGetAuxUserType
OleStdGetUserTypeOfClass
OleTranslateAccelerator
OleUninitialize
OpenClassesRootKeyA
OpenClassesRootKeyExA
OpenClassesRootKeyExW
OpenClassesRootKeyW
OpenOrCreateStream
OpenRegistryKey
OrpcBreakpointFilter
PackDDElParam
Parse10DisplayName
PrGuidToPropertySetName
PrivAsyncGetClassBits
PrivRegisterBindStatusCallback
PrivRevokeBindStatusCallback
ProcessActivatorInitializing
ProcessActivatorPaused
ProcessActivatorReady
ProcessActivatorResumed
ProcessActivatorStarted
ProcessActivatorStopped
ProcessActivatorUserInitializing
ProgIDFromCLSID
PropStgNameToFmtId
PropSysAllocString
PropSysFreeString
PropVariantClear
PropVariantClearWorker
PropVariantCopy
ProxyDllGetClassObject
PrxDllGetClassObject
PrxDllRegisterServer
QueryClassesRootValueA
QueryClassesRootValueW
QueryDragDropActive
QueryPIDForActivation
ReadClassStg
ReadClassStm
ReadClipformatStm
ReadFmtProgIdStg
ReadFmtUserTypeStg
ReadM1ClassStm
ReadM1ClassStmBuf
ReadMonikerStm
ReadOleStg
ReadStringStream
ReadStringStreamA
RegisterDragDrop
RegisterInterfaceName
RegisterWindowPropInterface
ReleaseMemStm
ReleaseStgMedium
ResolverNotifyDDStartOrStop
RetireServer
RevokeDragDrop
RtlApplicationVerifierStop
RtlBase64EncodeLBlobToLUnicodeString
RtlDecodeBase64LUnicodeStringToLBlob
RtlDecodeUtf16LE
RtlEncodeUtf16LE
RtlFinalizeSmartLBlobWritingContext
RtlFreeLBlob
RtlInitializeSmartLBlobWritingContext
RtlInitializeSmartLUnicodeStringWritingContext
RtlIsLBlobValid
RtlIsLUnicodeStringValid
RtlLengthOfUcsCharacterEncodedAsUtf16
RtlLookupFunctionEntry
RtlReallocateLBlob
RtlReportErrorOrigination
RtlSmartMultiUcsEncoder_Utf16LE
RtlSmartUcsEncoder_Utf16LE
RtlVirtualUnwind
RtlWriteDataIntoSmartLBlobWritingContext
RtlWriteDecodedUcsDataIntoSmartLBlobUcsWritingContext
RtlWriteUcsDataIntoSmartLBlobUcsWritingContext
SNB_UserFree
SNB_UserFree64
SNB_UserMarshal
SNB_UserMarshal64
SNB_UserSize
SNB_UserSize64
SNB_UserUnmarshal
SNB_UserUnmarshal64
STGMEDIUM_UserFree
STGMEDIUM_UserFree64
STGMEDIUM_UserMarshal
STGMEDIUM_UserMarshal64
STGMEDIUM_UserSize
STGMEDIUM_UserSize64
STGMEDIUM_UserUnmarshal
STGMEDIUM_UserUnmarshal64
STREAM_ACL_Decode
STREAM_ACL_Encode
STREAM_HEADER_Decode
STREAM_HEADER_Encode
SafeAllocaAllocateFromHeap
SafeAllocaFreeToHeap
SafeAllocaInitialize
SafeArrayAllocData
SafeArrayAllocDescriptor
SafeArrayAllocDescriptorEx
SafeArrayDestroy
ScmReplyInfoData_AlignSize
ScmReplyInfoData_Encode
ScmRequestInfoData_Decode
SecurityInfoData_AlignSize
SecurityInfoData_Decode
SecurityInfoData_Encode
ServerRegisterClsid
ServerRevokeClsid
SetAddrExclusionList
SetAppID
SetClassesRootValueW
SetConvertStg
SetDocumentBitStg
SetOrRevokeForcedDropTarget
ShutdownCallFrame
SpecialPropertiesData_Decode
SrvrWndProc
StartListen
StgConvertPropertyToVariant
StgConvertPropertyToVariantNoEH
StgConvertVariantToProperty
StgCreateDocfile
StgCreateDocfileOnILockBytes
StgCreatePropSetStg
StgCreatePropStg
StgCreateStorageEx
StgGetIFillLockBytesOnFile
StgGetIFillLockBytesOnILockBytes
StgIsStorageFile
StgIsStorageFileHandle
StgIsStorageILockBytes
StgOpenAsyncDocfileOnIFillLockBytes
StgOpenPropStg
StgOpenStorage
StgOpenStorageEx
StgOpenStorageOnHandle
StgOpenStorageOnILockBytes
StgPropertyLengthAsVariant
StgSetTimes
StopThread
StringFromCLSID
StringFromGUID2
StringFromIID
SysAllocStringByteLen
SysFreeString
SysStringByteLen
SysWndProc
TraceMessage
TxfDllMain
TxfDllRegisterServer
ULongAdd
UnAssignEndpointProperty
UnpackDDElParam
UpdateActivationSettings
UpdateDCOMSettings
UpdateProcessTracing
UtConvertDvtd16toDvtd32
UtConvertDvtd32toDvtd16
UtDoStreamOperation
UtGetDvtd16Info
UtGetDvtd32Info
VARIANT_UserFree
VARIANT_UserMarshal
VARIANT_UserSize
VARIANT_UserUnmarshal
VariantClear
VariantCopy
VariantInit
VerifyStackAvailable
WNetGetConnectionW
WNetGetUniversalNameW
WPP_SF_
WPP_SF_D
WPP_SF_DD
WPP_SF_Dd_guid_d
WPP_SF_ID
WPP_SF_I_guid__guid_d
WPP_SF_Idd
WPP_SF_SD
WPP_SF_SS
WPP_SF_SSD
WPP_SF_SSS
WPP_SF_SSSS
WPP_SF_SSSd
WPP_SF_SSd
WPP_SF_SSdD
WPP_SF_S_guid_
WPP_SF_S_guid__guid_
WPP_SF_S_guid__guid_d
WPP_SF_S_guid_d
WPP_SF_Sd
WPP_SF_SdD
WPP_SF_SdSD
WPP_SF_Sdd
WPP_SF_SddD
WPP_SF_SddddD
WPP_SF__guid_D
WPP_SF__guid_DDlD
WPP_SF__guid_SD
WPP_SF__guid_SSd
WPP_SF__guid_Sd
WPP_SF__guid__guid__guid_d_guid_
WPP_SF__guid__guid__guid_d_guid_d
WPP_SF__guid__guid_d
WPP_SF__guid__guid_d_guid_
WPP_SF__guid__guid_d_guid_d
WPP_SF__guid__guid_dd
WPP_SF__guid__guid_dl_sid_SSd
WPP_SF__guid_d
WPP_SF__guid_dD
WPP_SF__guid_dS
WPP_SF__guid_dSd
WPP_SF__guid_d_guid_
WPP_SF__guid_d_guid_d
WPP_SF__guid_dd
WPP_SF__guid_ddSS
WPP_SF__guid_ddSSd
WPP_SF__guid_ddd
WPP_SF__guid_lD
WPP_SF__guid_l_sid_
WPP_SF__guid_l_sid_D
WPP_SF__guid_l_sid_d
WPP_SF__sid_D
WPP_SF_d
WPP_SF_dD
WPP_SF_dDdD
WPP_SF_d_guid_d
WPP_SF_dd
WPP_SF_ddD
WPP_SF_dd_guid_d
WPP_SF_ddd
WPP_SF_ddd_guid_d
WPP_SF_dddd
WPP_SF_dlD
WPP_SF_l
WPP_SF_qD
WPP_SF_qDD
WPP_SF_qDd
WPP_SF_qSD
WPP_SF_qdP
WdtpInterfacePointer_UserFree
WdtpInterfacePointer_UserFree64
WdtpInterfacePointer_UserMarshal
WdtpInterfacePointer_UserMarshal64
WdtpInterfacePointer_UserSize
WdtpInterfacePointer_UserSize64
WdtpInterfacePointer_UserUnmarshal
WdtpInterfacePointer_UserUnmarshal64
WinSqmEventEnabled
WinSqmEventWrite
WppCleanupUm
WppControlCallback
WppInitUm
WriteClassStg
WriteClassStm
WriteClipformatStm
WriteFmtUserTypeStg
WriteM1ClassStm
WriteM1ClassStmBuf
WriteMonikerStm
WriteOleStg
WriteOleStgEx
WriteStringStream
XformHeightInPixelsToHimetric
XformWidthInPixelsToHimetric
_CRT_INIT
_ControlTracing
_DllMainCRTStartup
_FindPESection
_GetCustomProtseqInfo
_IsNonwritableInCurrentImage
_NotifyFDT
_UpdateResolverBindings
_UseProtseq
_ValidateImageBase
_XcptFilter
__C_specific_handler
__GSHandlerCheck
__GSHandlerCheckCommon
__GSHandlerCheck_SEH
__Interceptor_meth10
__Interceptor_meth100
__Interceptor_meth1000
__Interceptor_meth1001
__Interceptor_meth1002
__Interceptor_meth1003
__Interceptor_meth1004
__Interceptor_meth1005
__Interceptor_meth1006
__Interceptor_meth1007
__Interceptor_meth1008
__Interceptor_meth1009
__Interceptor_meth101
__Interceptor_meth1010
__Interceptor_meth1011
__Interceptor_meth1012
__Interceptor_meth1013
__Interceptor_meth1014
__Interceptor_meth1015
__Interceptor_meth1016
__Interceptor_meth1017
__Interceptor_meth1018
__Interceptor_meth1019
__Interceptor_meth102
__Interceptor_meth1020
__Interceptor_meth1021
__Interceptor_meth1022
__Interceptor_meth1023
__Interceptor_meth103
__Interceptor_meth104
__Interceptor_meth105
__Interceptor_meth106
__Interceptor_meth107
__Interceptor_meth108
__Interceptor_meth109
__Interceptor_meth11
__Interceptor_meth110
__Interceptor_meth111
__Interceptor_meth112
__Interceptor_meth113
__Interceptor_meth114
__Interceptor_meth115
__Interceptor_meth116
__Interceptor_meth117
__Interceptor_meth118
__Interceptor_meth119
__Interceptor_meth12
__Interceptor_meth120
__Interceptor_meth121
__Interceptor_meth122
__Interceptor_meth123
__Interceptor_meth124
__Interceptor_meth125
__Interceptor_meth126
__Interceptor_meth127
__Interceptor_meth128
__Interceptor_meth129
__Interceptor_meth13
__Interceptor_meth130
__Interceptor_meth131
__Interceptor_meth132
__Interceptor_meth133
__Interceptor_meth134
__Interceptor_meth135
__Interceptor_meth136
__Interceptor_meth137
__Interceptor_meth138
__Interceptor_meth139
__Interceptor_meth14
__Interceptor_meth140
__Interceptor_meth141
__Interceptor_meth142
__Interceptor_meth143
__Interceptor_meth144
__Interceptor_meth145
__Interceptor_meth146
__Interceptor_meth147
__Interceptor_meth148
__Interceptor_meth149
__Interceptor_meth15
__Interceptor_meth150
__Interceptor_meth151
__Interceptor_meth152
__Interceptor_meth153
__Interceptor_meth154
__Interceptor_meth155
__Interceptor_meth156
__Interceptor_meth157
__Interceptor_meth158
__Interceptor_meth159
__Interceptor_meth16
__Interceptor_meth160
__Interceptor_meth161
__Interceptor_meth162
__Interceptor_meth163
__Interceptor_meth164
__Interceptor_meth165
__Interceptor_meth166
__Interceptor_meth167
__Interceptor_meth168
__Interceptor_meth169
__Interceptor_meth17
__Interceptor_meth170
__Interceptor_meth171
__Interceptor_meth172
__Interceptor_meth173
__Interceptor_meth174
__Interceptor_meth175
__Interceptor_meth176
__Interceptor_meth177
__Interceptor_meth178
__Interceptor_meth179
__Interceptor_meth18
__Interceptor_meth180
__Interceptor_meth181
__Interceptor_meth182
__Interceptor_meth183
__Interceptor_meth184
__Interceptor_meth185
__Interceptor_meth186
__Interceptor_meth187
__Interceptor_meth188
__Interceptor_meth189
__Interceptor_meth19
__Interceptor_meth190
__Interceptor_meth191
__Interceptor_meth192
__Interceptor_meth193
__Interceptor_meth194
__Interceptor_meth195
__Interceptor_meth196
__Interceptor_meth197
__Interceptor_meth198
__Interceptor_meth199
__Interceptor_meth20
__Interceptor_meth200
__Interceptor_meth201
__Interceptor_meth202
__Interceptor_meth203
__Interceptor_meth204
__Interceptor_meth205
__Interceptor_meth206
__Interceptor_meth207
__Interceptor_meth208
__Interceptor_meth209
__Interceptor_meth21
__Interceptor_meth210
__Interceptor_meth211
__Interceptor_meth212
__Interceptor_meth213
__Interceptor_meth214
__Interceptor_meth215
__Interceptor_meth216
__Interceptor_meth217
__Interceptor_meth218
__Interceptor_meth219
__Interceptor_meth22
__Interceptor_meth220
__Interceptor_meth221
__Interceptor_meth222
__Interceptor_meth223
__Interceptor_meth224
__Interceptor_meth225
__Interceptor_meth226
__Interceptor_meth227
__Interceptor_meth228
__Interceptor_meth229
__Interceptor_meth23
__Interceptor_meth230
__Interceptor_meth231
__Interceptor_meth232
__Interceptor_meth233
__Interceptor_meth234
__Interceptor_meth235
__Interceptor_meth236
__Interceptor_meth237
__Interceptor_meth238
__Interceptor_meth239
__Interceptor_meth24
__Interceptor_meth240
__Interceptor_meth241
__Interceptor_meth242
__Interceptor_meth243
__Interceptor_meth244
__Interceptor_meth245
__Interceptor_meth246
__Interceptor_meth247
__Interceptor_meth248
__Interceptor_meth249
__Interceptor_meth25
__Interceptor_meth250
__Interceptor_meth251
__Interceptor_meth252
__Interceptor_meth253
__Interceptor_meth254
__Interceptor_meth255
__Interceptor_meth256
__Interceptor_meth257
__Interceptor_meth258
__Interceptor_meth259
__Interceptor_meth26
__Interceptor_meth260
__Interceptor_meth261
__Interceptor_meth262
__Interceptor_meth263
__Interceptor_meth264
__Interceptor_meth265
__Interceptor_meth266
__Interceptor_meth267
__Interceptor_meth268
__Interceptor_meth269
__Interceptor_meth27
__Interceptor_meth270
__Interceptor_meth271
__Interceptor_meth272
__Interceptor_meth273
__Interceptor_meth274
__Interceptor_meth275
__Interceptor_meth276
__Interceptor_meth277
__Interceptor_meth278
__Interceptor_meth279
__Interceptor_meth28
__Interceptor_meth280
__Interceptor_meth281
__Interceptor_meth282
__Interceptor_meth283
__Interceptor_meth284
__Interceptor_meth285
__Interceptor_meth286
__Interceptor_meth287
__Interceptor_meth288
__Interceptor_meth289
__Interceptor_meth29
__Interceptor_meth290
__Interceptor_meth291
__Interceptor_meth292
__Interceptor_meth293
__Interceptor_meth294
__Interceptor_meth295
__Interceptor_meth296
__Interceptor_meth297
__Interceptor_meth298
__Interceptor_meth299
__Interceptor_meth3
__Interceptor_meth30
__Interceptor_meth300
__Interceptor_meth301
__Interceptor_meth302
__Interceptor_meth303
__Interceptor_meth304
__Interceptor_meth305
__Interceptor_meth306
__Interceptor_meth307
__Interceptor_meth308
__Interceptor_meth309
__Interceptor_meth31
__Interceptor_meth310
__Interceptor_meth311
__Interceptor_meth312
__Interceptor_meth313
__Interceptor_meth314
__Interceptor_meth315
__Interceptor_meth316
__Interceptor_meth317
__Interceptor_meth318
__Interceptor_meth319
__Interceptor_meth32
__Interceptor_meth320
__Interceptor_meth321
__Interceptor_meth322
__Interceptor_meth323
__Interceptor_meth324
__Interceptor_meth325
__Interceptor_meth326
__Interceptor_meth327
__Interceptor_meth328
__Interceptor_meth329
__Interceptor_meth33
__Interceptor_meth330
__Interceptor_meth331
__Interceptor_meth332
__Interceptor_meth333
__Interceptor_meth334
__Interceptor_meth335
__Interceptor_meth336
__Interceptor_meth337
__Interceptor_meth338
__Interceptor_meth339
__Interceptor_meth34
__Interceptor_meth340
__Interceptor_meth341
__Interceptor_meth342
__Interceptor_meth343
__Interceptor_meth344
__Interceptor_meth345
__Interceptor_meth346
__Interceptor_meth347
__Interceptor_meth348
__Interceptor_meth349
__Interceptor_meth35
__Interceptor_meth350
__Interceptor_meth351
__Interceptor_meth352
__Interceptor_meth353
__Interceptor_meth354
__Interceptor_meth355
__Interceptor_meth356
__Interceptor_meth357
__Interceptor_meth358
__Interceptor_meth359
__Interceptor_meth36
__Interceptor_meth360
__Interceptor_meth361
__Interceptor_meth362
__Interceptor_meth363
__Interceptor_meth364
__Interceptor_meth365
__Interceptor_meth366
__Interceptor_meth367
__Interceptor_meth368
__Interceptor_meth369
__Interceptor_meth37
__Interceptor_meth370
__Interceptor_meth371
__Interceptor_meth372
__Interceptor_meth373
__Interceptor_meth374
__Interceptor_meth375
__Interceptor_meth376
__Interceptor_meth377
__Interceptor_meth378
__Interceptor_meth379
__Interceptor_meth38
__Interceptor_meth380
__Interceptor_meth381
__Interceptor_meth382
__Interceptor_meth383
__Interceptor_meth384
__Interceptor_meth385
__Interceptor_meth386
__Interceptor_meth387
__Interceptor_meth388
__Interceptor_meth389
__Interceptor_meth39
__Interceptor_meth390
__Interceptor_meth391
__Interceptor_meth392
__Interceptor_meth393
__Interceptor_meth394
__Interceptor_meth395
__Interceptor_meth396
__Interceptor_meth397
__Interceptor_meth398
__Interceptor_meth399
__Interceptor_meth4
__Interceptor_meth40
__Interceptor_meth400
__Interceptor_meth401
__Interceptor_meth402
__Interceptor_meth403
__Interceptor_meth404
__Interceptor_meth405
__Interceptor_meth406
__Interceptor_meth407
__Interceptor_meth408
__Interceptor_meth409
__Interceptor_meth41
__Interceptor_meth410
__Interceptor_meth411
__Interceptor_meth412
__Interceptor_meth413
__Interceptor_meth414
__Interceptor_meth415
__Interceptor_meth416
__Interceptor_meth417
__Interceptor_meth418
__Interceptor_meth419
__Interceptor_meth42
__Interceptor_meth420
__Interceptor_meth421
__Interceptor_meth422
__Interceptor_meth423
__Interceptor_meth424
__Interceptor_meth425
__Interceptor_meth426
__Interceptor_meth427
__Interceptor_meth428
__Interceptor_meth429
__Interceptor_meth43
__Interceptor_meth430
__Interceptor_meth431
__Interceptor_meth432
__Interceptor_meth433
__Interceptor_meth434
__Interceptor_meth435
__Interceptor_meth436
__Interceptor_meth437
__Interceptor_meth438
__Interceptor_meth439
__Interceptor_meth44
__Interceptor_meth440
__Interceptor_meth441
__Interceptor_meth442
__Interceptor_meth443
__Interceptor_meth444
__Interceptor_meth445
__Interceptor_meth446
__Interceptor_meth447
__Interceptor_meth448
__Interceptor_meth449
__Interceptor_meth45
__Interceptor_meth450
__Interceptor_meth451
__Interceptor_meth452
__Interceptor_meth453
__Interceptor_meth454
__Interceptor_meth455
__Interceptor_meth456
__Interceptor_meth457
__Interceptor_meth458
__Interceptor_meth459
__Interceptor_meth46
__Interceptor_meth460
__Interceptor_meth461
__Interceptor_meth462
__Interceptor_meth463
__Interceptor_meth464
__Interceptor_meth465
__Interceptor_meth466
__Interceptor_meth467
__Interceptor_meth468
__Interceptor_meth469
__Interceptor_meth47
__Interceptor_meth470
__Interceptor_meth471
__Interceptor_meth472
__Interceptor_meth473
__Interceptor_meth474
__Interceptor_meth475
__Interceptor_meth476
__Interceptor_meth477
__Interceptor_meth478
__Interceptor_meth479
__Interceptor_meth48
__Interceptor_meth480
__Interceptor_meth481
__Interceptor_meth482
__Interceptor_meth483
__Interceptor_meth484
__Interceptor_meth485
__Interceptor_meth486
__Interceptor_meth487
__Interceptor_meth488
__Interceptor_meth489
__Interceptor_meth49
__Interceptor_meth490
__Interceptor_meth491
__Interceptor_meth492
__Interceptor_meth493
__Interceptor_meth494
__Interceptor_meth495
__Interceptor_meth496
__Interceptor_meth497
__Interceptor_meth498
__Interceptor_meth499
__Interceptor_meth5
__Interceptor_meth50
__Interceptor_meth500
__Interceptor_meth501
__Interceptor_meth502
__Interceptor_meth503
__Interceptor_meth504
__Interceptor_meth505
__Interceptor_meth506
__Interceptor_meth507
__Interceptor_meth508
__Interceptor_meth509
__Interceptor_meth51
__Interceptor_meth510
__Interceptor_meth511
__Interceptor_meth512
__Interceptor_meth513
__Interceptor_meth514
__Interceptor_meth515
__Interceptor_meth516
__Interceptor_meth517
__Interceptor_meth518
__Interceptor_meth519
__Interceptor_meth52
__Interceptor_meth520
__Interceptor_meth521
__Interceptor_meth522
__Interceptor_meth523
__Interceptor_meth524
__Interceptor_meth525
__Interceptor_meth526
__Interceptor_meth527
__Interceptor_meth528
__Interceptor_meth529
__Interceptor_meth53
__Interceptor_meth530
__Interceptor_meth531
__Interceptor_meth532
__Interceptor_meth533
__Interceptor_meth534
__Interceptor_meth535
__Interceptor_meth536
__Interceptor_meth537
__Interceptor_meth538
__Interceptor_meth539
__Interceptor_meth54
__Interceptor_meth540
__Interceptor_meth541
__Interceptor_meth542
__Interceptor_meth543
__Interceptor_meth544
__Interceptor_meth545
__Interceptor_meth546
__Interceptor_meth547
__Interceptor_meth548
__Interceptor_meth549
__Interceptor_meth55
__Interceptor_meth550
__Interceptor_meth551
__Interceptor_meth552
__Interceptor_meth553
__Interceptor_meth554
__Interceptor_meth555
__Interceptor_meth556
__Interceptor_meth557
__Interceptor_meth558
__Interceptor_meth559
__Interceptor_meth56
__Interceptor_meth560
__Interceptor_meth561
__Interceptor_meth562
__Interceptor_meth563
__Interceptor_meth564
__Interceptor_meth565
__Interceptor_meth566
__Interceptor_meth567
__Interceptor_meth568
__Interceptor_meth569
__Interceptor_meth57
__Interceptor_meth570
__Interceptor_meth571
__Interceptor_meth572
__Interceptor_meth573
__Interceptor_meth574
__Interceptor_meth575
__Interceptor_meth576
__Interceptor_meth577
__Interceptor_meth578
__Interceptor_meth579
__Interceptor_meth58
__Interceptor_meth580
__Interceptor_meth581
__Interceptor_meth582
__Interceptor_meth583
__Interceptor_meth584
__Interceptor_meth585
__Interceptor_meth586
__Interceptor_meth587
__Interceptor_meth588
__Interceptor_meth589
__Interceptor_meth59
__Interceptor_meth590
__Interceptor_meth591
__Interceptor_meth592
__Interceptor_meth593
__Interceptor_meth594
__Interceptor_meth595
__Interceptor_meth596
__Interceptor_meth597
__Interceptor_meth598
__Interceptor_meth599
__Interceptor_meth6
__Interceptor_meth60
__Interceptor_meth600
__Interceptor_meth601
__Interceptor_meth602
__Interceptor_meth603
__Interceptor_meth604
__Interceptor_meth605
__Interceptor_meth606
__Interceptor_meth607
__Interceptor_meth608
__Interceptor_meth609
__Interceptor_meth61
__Interceptor_meth610
__Interceptor_meth611
__Interceptor_meth612
__Interceptor_meth613
__Interceptor_meth614
__Interceptor_meth615
__Interceptor_meth616
__Interceptor_meth617
__Interceptor_meth618
__Interceptor_meth619
__Interceptor_meth62
__Interceptor_meth620
__Interceptor_meth621
__Interceptor_meth622
__Interceptor_meth623
__Interceptor_meth624
__Interceptor_meth625
__Interceptor_meth626
__Interceptor_meth627
__Interceptor_meth628
__Interceptor_meth629
__Interceptor_meth63
__Interceptor_meth630
__Interceptor_meth631
__Interceptor_meth632
__Interceptor_meth633
__Interceptor_meth634
__Interceptor_meth635
__Interceptor_meth636
__Interceptor_meth637
__Interceptor_meth638
__Interceptor_meth639
__Interceptor_meth64
__Interceptor_meth640
__Interceptor_meth641
__Interceptor_meth642
__Interceptor_meth643
__Interceptor_meth644
__Interceptor_meth645
__Interceptor_meth646
__Interceptor_meth647
__Interceptor_meth648
__Interceptor_meth649
__Interceptor_meth65
__Interceptor_meth650
__Interceptor_meth651
__Interceptor_meth652
__Interceptor_meth653
__Interceptor_meth654
__Interceptor_meth655
__Interceptor_meth656
__Interceptor_meth657
__Interceptor_meth658
__Interceptor_meth659
__Interceptor_meth66
__Interceptor_meth660
__Interceptor_meth661
__Interceptor_meth662
__Interceptor_meth663
__Interceptor_meth664
__Interceptor_meth665
__Interceptor_meth666
__Interceptor_meth667
__Interceptor_meth668
__Interceptor_meth669
__Interceptor_meth67
__Interceptor_meth670
__Interceptor_meth671
__Interceptor_meth672
__Interceptor_meth673
__Interceptor_meth674
__Interceptor_meth675
__Interceptor_meth676
__Interceptor_meth677
__Interceptor_meth678
__Interceptor_meth679
__Interceptor_meth68
__Interceptor_meth680
__Interceptor_meth681
__Interceptor_meth682
__Interceptor_meth683
__Interceptor_meth684
__Interceptor_meth685
__Interceptor_meth686
__Interceptor_meth687
__Interceptor_meth688
__Interceptor_meth689
__Interceptor_meth69
__Interceptor_meth690
__Interceptor_meth691
__Interceptor_meth692
__Interceptor_meth693
__Interceptor_meth694
__Interceptor_meth695
__Interceptor_meth696
__Interceptor_meth697
__Interceptor_meth698
__Interceptor_meth699
__Interceptor_meth7
__Interceptor_meth70
__Interceptor_meth700
__Interceptor_meth701
__Interceptor_meth702
__Interceptor_meth703
__Interceptor_meth704
__Interceptor_meth705
__Interceptor_meth706
__Interceptor_meth707
__Interceptor_meth708
__Interceptor_meth709
__Interceptor_meth71
__Interceptor_meth710
__Interceptor_meth711
__Interceptor_meth712
__Interceptor_meth713
__Interceptor_meth714
__Interceptor_meth715
__Interceptor_meth716
__Interceptor_meth717
__Interceptor_meth718
__Interceptor_meth719
__Interceptor_meth72
__Interceptor_meth720
__Interceptor_meth721
__Interceptor_meth722
__Interceptor_meth723
__Interceptor_meth724
__Interceptor_meth725
__Interceptor_meth726
__Interceptor_meth727
__Interceptor_meth728
__Interceptor_meth729
__Interceptor_meth73
__Interceptor_meth730
__Interceptor_meth731
__Interceptor_meth732
__Interceptor_meth733
__Interceptor_meth734
__Interceptor_meth735
__Interceptor_meth736
__Interceptor_meth737
__Interceptor_meth738
__Interceptor_meth739
__Interceptor_meth74
__Interceptor_meth740
__Interceptor_meth741
__Interceptor_meth742
__Interceptor_meth743
__Interceptor_meth744
__Interceptor_meth745
__Interceptor_meth746
__Interceptor_meth747
__Interceptor_meth748
__Interceptor_meth749
__Interceptor_meth75
__Interceptor_meth750
__Interceptor_meth751
__Interceptor_meth752
__Interceptor_meth753
__Interceptor_meth754
__Interceptor_meth755
__Interceptor_meth756
__Interceptor_meth757
__Interceptor_meth758
__Interceptor_meth759
__Interceptor_meth76
__Interceptor_meth760
__Interceptor_meth761
__Interceptor_meth762
__Interceptor_meth763
__Interceptor_meth764
__Interceptor_meth765
__Interceptor_meth766
__Interceptor_meth767
__Interceptor_meth768
__Interceptor_meth769
__Interceptor_meth77
__Interceptor_meth770
__Interceptor_meth771
__Interceptor_meth772
__Interceptor_meth773
__Interceptor_meth774
__Interceptor_meth775
__Interceptor_meth776
__Interceptor_meth777
__Interceptor_meth778
__Interceptor_meth779
__Interceptor_meth78
__Interceptor_meth780
__Interceptor_meth781
__Interceptor_meth782
__Interceptor_meth783
__Interceptor_meth784
__Interceptor_meth785
__Interceptor_meth786
__Interceptor_meth787
__Interceptor_meth788
__Interceptor_meth789
__Interceptor_meth79
__Interceptor_meth790
__Interceptor_meth791
__Interceptor_meth792
__Interceptor_meth793
__Interceptor_meth794
__Interceptor_meth795
__Interceptor_meth796
__Interceptor_meth797
__Interceptor_meth798
__Interceptor_meth799
__Interceptor_meth8
__Interceptor_meth80
__Interceptor_meth800
__Interceptor_meth801
__Interceptor_meth802
__Interceptor_meth803
__Interceptor_meth804
__Interceptor_meth805
__Interceptor_meth806
__Interceptor_meth807
__Interceptor_meth808
__Interceptor_meth809
__Interceptor_meth81
__Interceptor_meth810
__Interceptor_meth811
__Interceptor_meth812
__Interceptor_meth813
__Interceptor_meth814
__Interceptor_meth815
__Interceptor_meth816
__Interceptor_meth817
__Interceptor_meth818
__Interceptor_meth819
__Interceptor_meth82
__Interceptor_meth820
__Interceptor_meth821
__Interceptor_meth822
__Interceptor_meth823
__Interceptor_meth824
__Interceptor_meth825
__Interceptor_meth826
__Interceptor_meth827
__Interceptor_meth828
__Interceptor_meth829
__Interceptor_meth83
__Interceptor_meth830
__Interceptor_meth831
__Interceptor_meth832
__Interceptor_meth833
__Interceptor_meth834
__Interceptor_meth835
__Interceptor_meth836
__Interceptor_meth837
__Interceptor_meth838
__Interceptor_meth839
__Interceptor_meth84
__Interceptor_meth840
__Interceptor_meth841
__Interceptor_meth842
__Interceptor_meth843
__Interceptor_meth844
__Interceptor_meth845
__Interceptor_meth846
__Interceptor_meth847
__Interceptor_meth848
__Interceptor_meth849
__Interceptor_meth85
__Interceptor_meth850
__Interceptor_meth851
__Interceptor_meth852
__Interceptor_meth853
__Interceptor_meth854
__Interceptor_meth855
__Interceptor_meth856
__Interceptor_meth857
__Interceptor_meth858
__Interceptor_meth859
__Interceptor_meth86
__Interceptor_meth860
__Interceptor_meth861
__Interceptor_meth862
__Interceptor_meth863
__Interceptor_meth864
__Interceptor_meth865
__Interceptor_meth866
__Interceptor_meth867
__Interceptor_meth868
__Interceptor_meth869
__Interceptor_meth87
__Interceptor_meth870
__Interceptor_meth871
__Interceptor_meth872
__Interceptor_meth873
__Interceptor_meth874
__Interceptor_meth875
__Interceptor_meth876
__Interceptor_meth877
__Interceptor_meth878
__Interceptor_meth879
__Interceptor_meth88
__Interceptor_meth880
__Interceptor_meth881
__Interceptor_meth882
__Interceptor_meth883
__Interceptor_meth884
__Interceptor_meth885
__Interceptor_meth886
__Interceptor_meth887
__Interceptor_meth888
__Interceptor_meth889
__Interceptor_meth89
__Interceptor_meth890
__Interceptor_meth891
__Interceptor_meth892
__Interceptor_meth893
__Interceptor_meth894
__Interceptor_meth895
__Interceptor_meth896
__Interceptor_meth897
__Interceptor_meth898
__Interceptor_meth899
__Interceptor_meth9
__Interceptor_meth90
__Interceptor_meth900
__Interceptor_meth901
__Interceptor_meth902
__Interceptor_meth903
__Interceptor_meth904
__Interceptor_meth905
__Interceptor_meth906
__Interceptor_meth907
__Interceptor_meth908
__Interceptor_meth909
__Interceptor_meth91
__Interceptor_meth910
__Interceptor_meth911
__Interceptor_meth912
__Interceptor_meth913
__Interceptor_meth914
__Interceptor_meth915
__Interceptor_meth916
__Interceptor_meth917
__Interceptor_meth918
__Interceptor_meth919
__Interceptor_meth92
__Interceptor_meth920
__Interceptor_meth921
__Interceptor_meth922
__Interceptor_meth923
__Interceptor_meth924
__Interceptor_meth925
__Interceptor_meth926
__Interceptor_meth927
__Interceptor_meth928
__Interceptor_meth929
__Interceptor_meth93
__Interceptor_meth930
__Interceptor_meth931
__Interceptor_meth932
__Interceptor_meth933
__Interceptor_meth934
__Interceptor_meth935
__Interceptor_meth936
__Interceptor_meth937
__Interceptor_meth938
__Interceptor_meth939
__Interceptor_meth94
__Interceptor_meth940
__Interceptor_meth941
__Interceptor_meth942
__Interceptor_meth943
__Interceptor_meth944
__Interceptor_meth945
__Interceptor_meth946
__Interceptor_meth947
__Interceptor_meth948
__Interceptor_meth949
__Interceptor_meth95
__Interceptor_meth950
__Interceptor_meth951
__Interceptor_meth952
__Interceptor_meth953
__Interceptor_meth954
__Interceptor_meth955
__Interceptor_meth956
__Interceptor_meth957
__Interceptor_meth958
__Interceptor_meth959
__Interceptor_meth96
__Interceptor_meth960
__Interceptor_meth961
__Interceptor_meth962
__Interceptor_meth963
__Interceptor_meth964
__Interceptor_meth965
__Interceptor_meth966
__Interceptor_meth967
__Interceptor_meth968
__Interceptor_meth969
__Interceptor_meth97
__Interceptor_meth970
__Interceptor_meth971
__Interceptor_meth972
__Interceptor_meth973
__Interceptor_meth974
__Interceptor_meth975
__Interceptor_meth976
__Interceptor_meth977
__Interceptor_meth978
__Interceptor_meth979
__Interceptor_meth98
__Interceptor_meth980
__Interceptor_meth981
__Interceptor_meth982
__Interceptor_meth983
__Interceptor_meth984
__Interceptor_meth985
__Interceptor_meth986
__Interceptor_meth987
__Interceptor_meth988
__Interceptor_meth989
__Interceptor_meth99
__Interceptor_meth990
__Interceptor_meth991
__Interceptor_meth992
__Interceptor_meth993
__Interceptor_meth994
__Interceptor_meth995
__Interceptor_meth996
__Interceptor_meth997
__Interceptor_meth998
__Interceptor_meth999
__chkstk
__delayLoadHelper2
__dllonexit
__report_gsfailure
__security_check_cookie
__security_init_cookie
_amsg_exit
_callframeinternal_IID_Lookup
_initterm
_local_unwind
_lock
_mega_IID_Lookup
_onexit
_prop_IID_Lookup
_purecall
_resetstkoflw
_resetstkoflw_downlevel
_unlock
atexit
memcmp
memcpy
memmove
memset
wRegQueryValue
wRegSetValue
*/
