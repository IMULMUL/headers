typedef enum _NT_IORING_OP_FLAGS
{
  NT_IORING_OP_FLAG_NONE = 0,
  NT_IORING_OP_FLAG_REGISTERED_FILE_0 = 1,
  NT_IORING_OP_FLAG_REGISTERED_FILE = 1,
  NT_IORING_OP_FLAG_REGISTERED_BUFFER_0 = 2,
  NT_IORING_OP_FLAG_REGISTERED_BUFFER = 2,
} NT_IORING_OP_FLAGS, *PNT_IORING_OP_FLAGS;

typedef enum _NT_IORING_REG_FILES_REQ_FLAGS
{
  NT_IORING_REG_FILES_REQ_FLAG_NONE = 0,
} NT_IORING_REG_FILES_REQ_FLAGS, *PNT_IORING_REG_FILES_REQ_FLAGS;

typedef enum _NT_IORING_REG_FILES_ADV_FLAGS
{
  NT_IORING_REG_FILES_ADV_FLAG_NONE = 0,
} NT_IORING_REG_FILES_ADV_FLAGS, *PNT_IORING_REG_FILES_ADV_FLAGS;

typedef struct _NT_IORING_REG_FILES_FLAGS
{
  /* 0x0000 */ enum _NT_IORING_REG_FILES_REQ_FLAGS Required;
  /* 0x0004 */ enum _NT_IORING_REG_FILES_ADV_FLAGS Advisory;
} NT_IORING_REG_FILES_FLAGS, *PNT_IORING_REG_FILES_FLAGS; /* size: 0x0008 */

typedef struct _NT_IORING_OP_REGISTER_FILES
{
  /* 0x0000 */ enum _NT_IORING_OP_FLAGS CommonOpFlags;
  /* 0x0004 */ struct _NT_IORING_REG_FILES_FLAGS Flags;
  /* 0x000c */ unsigned int Count;
  /* 0x0010 */ void** Handles;
} NT_IORING_OP_REGISTER_FILES, *PNT_IORING_OP_REGISTER_FILES; /* size: 0x0018 */

