enum _SYSTEM_INFORMATION_CLASS;
struct tagRECT;
class CAbstractStream;
enum DCOM_ENDPOINT_FLAGS;
struct tagVS_FIXEDFILEINFO;
struct _MINIDUMP_MODULE_CALLBACK;
enum tagTYPEFLAGS;
struct HUMPD__;
struct _SID_AND_ATTRIBUTES_HASH;
struct tagNMHDR;
struct _OFNOTIFYEXW;
enum _PROC_THREAD_ATTRIBUTE_NUM;
struct IOleInPlaceSiteEx;
struct IXMLElement2;
enum _SYSDBG_COMMAND;
struct _MINIDUMP_TOKEN_INFO_HEADER;
enum _BIN_TYPES;
struct _CERT_POLICY_MAPPINGS_INFO;
enum POWER_INFORMATION_LEVEL;
struct tagContexts;
enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION;
struct ILayoutStorage;
struct _GUID;
struct _RPC_VERSION;
struct _RPC_SYNTAX_IDENTIFIER;
struct _MIDL_SYNTAX_INFO;
enum DISK_CACHE_RETENTION_PRIORITY;
struct _SYSTEM_PREFETCH_OPTIONS;
struct IActivationPropertiesIn;
struct _CRYPTOAPI_BLOB;
struct _CRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_BIT_BLOB;
struct _CERT_PUBLIC_KEY_INFO;
class Microsoft::WRL::ComPtr<ApartmentShutdownNode>;
class Microsoft::WRL::ComPtr<IApartmentShutdown>;
struct ApartmentShutdownNode;
enum WELL_KNOWN_SID_TYPE;
struct _PS_SYSTEM_DLL_INIT_BLOCK;
enum VARENUM;
class CInprocSystemActivator;
enum _TAG_UNNAMED_1;
enum _PROCESSOR_CACHE_TYPE;
struct _CACHE_DESCRIPTOR;
struct _HTTPSPolicyCallbackData;
enum POWER_ACTION;
struct IEncodingFilterFactory;
enum _RUNLEVEL;
struct Microsoft::WRL::CloakedIid<IMarshal>;
struct IRootStorage;
struct HMIDISTRM__;
enum _PROCESS_MITIGATION_POLICY;
enum SHSTOCKICONID;
struct _MESSAGE_RESOURCE_BLOCK;
struct _GET_CHANGER_PARAMETERS;
enum _PRINTER_OPTION_FLAGS;
enum HASHALGORITHM_ENUM;
enum DSAFIPSVERSION_ENUM;
struct _BCRYPT_DSA_KEY_BLOB_V2;
struct IDebug;
struct _RTL_BITMAP;
enum _tagQUERYOPTION;
struct _ALPC_CONTEXT_ATTR;
struct PACKAGE_VERSION;
struct PACKAGE_ID;
enum _COPYFILE2_MESSAGE_TYPE;
struct _BCRYPT_DSA_PARAMETER_HEADER_V2;
struct _RPC_MESSAGE;
union _LARGE_INTEGER;
struct _FILE_ID_FULL_DIR_INFORMATION;
enum ACTIVATION_PROPERTIES::eFlags;
struct tagNEWTEXTMETRICA;
struct tagFONTSIGNATURE;
struct tagNEWTEXTMETRICEXA;
class CMSFHeaderData;
class CMSFHeader;
struct CSimpStorage;
struct _EVENTLOGRECORD;
enum SYSGEOTYPE;
struct _RTL_QUERY_DEBUG_INFORMATION_INFO;
enum _DPFLTR_TYPE;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >;
struct _FILETIME;
struct _DRIVER_INFO_8W;
enum APPLICATION_VIEW_STATE;
enum DISPLAYCONFIG_DEVICE_INFO_TYPE;
struct _LUID;
struct DISPLAYCONFIG_DEVICE_INFO_HEADER;
struct DISPLAYCONFIG_ADAPTER_NAME;
struct _TP_JOB;
enum _PS_ATTRIBUTE_NUM;
struct IWrappedProtocol;
struct _SCARD_IO_REQUEST;
struct SCARD_T0_COMMAND;
struct SCARD_T0_REQUEST;
enum _PROCESSINFOCLASS;
struct tagMDINEXTMENU;
enum _WPP_FLAG_LEN_ENUM_MAX;
struct _FILE_ATTRIBUTE_CACHE_VALUE;
struct _FILE_ATTRIBUTE_CACHE_PAIR;
struct _FILE_ATTRIBUTE_CACHE_VALUES;
struct _CRYPT_PASSWORD_CREDENTIALSW;
struct IAsyncRpcChannelBuffer;
enum _tagPARSEACTION;
enum _SUITE_TYPE;
struct _FILE_STORAGE_INFO;
struct _CERT_SYSTEM_STORE_RELOCATE_PARA;
enum _WPP_FLAG_LEN_ENUM;
struct _POWER_IDLE_RESILIENCY;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> const >;
enum DISPLAYCONFIG_SCALING;
struct _API_SET_VALUE_ENTRY;
struct ITypeLib2;
enum CFileMoniker::olever;
struct IRpcChannelBufferVtbl;
struct _ACE_HEADER;
struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE;
struct IMarshalingStream;
struct _TP_CLEANUP_GROUP;
enum _PLUGPLAY_CONTROL_CLASS;
struct SHashChain;
struct SDWORDHashNode;
struct ApartmentEntry;
class CRefcountedObject;
enum ReplacesCorHdrNumericDefines;
struct _BCryptBufferDesc;
struct IStream;
enum RO_INIT_TYPE;
struct _CM_KEYBOARD_DEVICE_DATA;
enum _SYSTEM_VA_TYPE;
struct _RTL_UNLOAD_EVENT_TRACE64;
enum _INTERFACE_TYPE;
class Microsoft::WRL::Details::MakeAllocator<ClipboardDataObjectTask,0>;
struct _WNF_TYPE_ID;
struct tagCOMVERSION;
struct tagInstantiationInfoData;
enum __vc_attributes::event_sourceAttribute::optimize_e;
struct tagHSZPAIR;
struct _PROCESS_HEAP_ENTRY;
struct tagPROPSPEC;
struct tagRemSTGMEDIUM;
struct _NDR64_STRUCTURE_FLAGS;
struct _NDR64_STRUCTURE_HEADER_FORMAT;
struct __midl_frag9_t;
enum _KPROFILE_SOURCE;
struct _TP_ALPC;
enum _INSTALLSPECTYPE;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64;
enum SLR_FLAGS;
union _ULARGE_INTEGER;
union tagCY;
struct tagBSTRBLOB;
struct tagBLOB;
struct tagCAC;
struct tagCAUB;
struct tagCAI;
struct tagCAUI;
struct tagCAL;
struct tagCAUL;
struct tagCAH;
struct tagCAUH;
struct tagCAFLT;
struct tagCADBL;
struct tagCABOOL;
struct tagCASCODE;
struct tagCACY;
struct tagCADATE;
struct tagCAFILETIME;
struct tagCACLSID;
struct tagCACLIPDATA;
struct tagCABSTR;
struct tagCABSTRBLOB;
struct tagCALPSTR;
struct tagCALPWSTR;
struct tagCAPROPVARIANT;
struct tagDEC;
struct tagPROPVARIANT;
enum __MIDL_IInternetSecurityManager_0001;
enum PROXY_PHASE;
union _RPC_ASYNC_NOTIFICATION_INFO;
struct _CTL_USAGE;
struct _TXFS_LIST_TRANSACTIONS;
enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e;
struct tagCRGB;
struct _CRYPT_PROVIDER_REG;
class CChannelObject;
struct _FILE_BASIC_INFORMATION;
struct _FILE_STANDARD_INFORMATION;
struct _FILE_INTERNAL_INFORMATION;
struct _FILE_EA_INFORMATION;
struct _FILE_ACCESS_INFORMATION;
struct _FILE_POSITION_INFORMATION;
struct _FILE_MODE_INFORMATION;
struct _FILE_ALIGNMENT_INFORMATION;
struct _FILE_NAME_INFORMATION;
struct _FILE_ALL_INFORMATION;
enum _IDL_CS_CONVERT;
struct IProcessInitControl;
struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA;
enum _BUS_DATA_TYPE;
enum _TAG_UNNAMED_2;
struct tagCLIPDATA;
enum tagSTGC;
struct _PROC_THREAD_ATTRIBUTE;
enum _RTL_PATH_TYPE;
enum _MINIDUMP_CALLBACK_TYPE;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;
struct _CERT_ISSUER_SERIAL_NUMBER;
struct _CERT_ID;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO;
struct tagSIZE;
struct _RECTL;
struct _FORM_INFO_2W;
enum _WORKER_FACTORY_CALLBACK_CLASS;
struct _IMAGEHLP_SYMBOL64;
struct _IMAGEHLP_SYMBOL64_PACKAGE;
class CBasedSStreamPtr;
class CBasedPubDocFilePtr;
class CBasedPubStreamPtr;
class CBasedBytePtr;
class CPubMappedStream;
class CPubStream;
enum SYSTEM_POWER_CONDITION;
struct IFontEventsDisp;
class Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *>;
enum __vc_attributes::moduleAttribute::type_e;
enum tagTYPEKIND;
struct _UNICODE_STRING;
struct _SYSTEM_PAGEFILE_INFORMATION;
enum _MUTANT_INFORMATION_CLASS;
struct _tagDATAINFO;
struct IDispatch;
struct SChannelHookCallInfo;
enum tagQACONTAINERFLAGS;
struct ITypeInfo;
struct tagWIN16RECT;
enum tagBINDSTATUS;
enum __MIDL_IUri_0001;
class CFileMonikerFactory;
struct Windows::Rtl::IRtlFormattableInterface;
enum tagOLEDCFLAGS;
enum _JOURNAL_CHANGE_INFORMATION_CLASS;
struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT;
enum _LDR_DLL_LOAD_REASON;
struct IExceptionNotification;
enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;
struct IStorage;
struct _IO_STATUS_BLOCK;
enum _TP_TRACE_TYPE;
struct tagKEYBDINPUT;
enum tagOLERENDER;
struct tagVersionedStream;
struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR;
enum tagPROPBAG2_TYPE;
struct _REMOTE_PORT_VIEW;
struct _KSYSTEM_TIME;
enum tagMKREDUCE;
struct tagSTRINGBINDING;
class CBasedSeekPointerPtr;
enum READER_SEL_REQUEST_MATCH_TYPE;
struct READER_SEL_REQUEST;
enum POWER_STATE_HANDLER_TYPE;
struct CONFIRMSAFETY;
struct _FILE_REPARSE_POINT_INFORMATION;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;
struct _CMSG_STREAM_INFO;
enum tagUASFLAGS;
struct tagSAFEARRAYBOUND;
struct _RTL_QUERY_REGISTRY_TABLE;
class CCoTaskAllocator;
struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE;
enum _tagINTERNETFEATURELIST;
struct IAbandonmentNotification;
enum _DMA_WIDTH;
struct _PRINTER_NOTIFY_OPTIONS_TYPE;
enum _MINIDUMP_SECONDARY_FLAGS;
struct IWinRTRuntimeClassInfo;
enum __MIDL_IBindStatusCallback_0006;
struct _IMAGE_SYMBOL_EX;
class XIPersistFile;
struct tagMOUSEINPUT;
struct tagHARDWAREINPUT;
struct tagINPUT;
struct _XSTATE_FEATURE;
struct _XSTATE_CONFIGURATION;
struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES;
enum DISPLAYCONFIG_PIXELFORMAT;
struct _RPC_SEC_CONTEXT_KEY_INFO;
struct _KAFFINITY_ENUMERATION_CONTEXT;
class Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;
enum tagACTIVATEFLAGS;
struct _EXCEPTION_REGISTRATION_RECORD;
struct _FILE_NETWORK_OPEN_INFORMATION;
enum RTL_BSD_ITEM_TYPE;
enum _SAFER_POLICY_INFO_CLASS;
enum _TAG_UNNAMED_3;
struct _SD_ENUM_SDS_ENTRY;
struct _SD_ENUM_SDS_OUTPUT;
struct tagBIND_OPTS2;
enum _ELEMENT_TYPE;
struct _CHANGER_ELEMENT;
struct _CHANGER_EXCHANGE_MEDIUM;
enum TrustLevel;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W;
enum tagBINDSTRING;
enum _TAG_UNNAMED_4;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >::is_pointer<Windows::Rtl::IRtlWOFOUCSStream *>;
enum ORIENTATION_PREFERENCE;
class CDelayUnlockContainer;
struct _OFLONGSTRUCTW;
struct XSAVE_CPU_INFO;
struct _XSAVE_SUPPORTED_CPU;
struct _XSAVE_VENDOR;
struct _XSAVE_VENDORS;
enum _FP_IEEE_OPERATION_CODE;
enum _TAPE_DRIVE_PROBLEM_TYPE;
struct tagLOGBRUSH;
struct _COAUTHINFO;
struct _PRINTER_CONNECTION_INFO_1A;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Skip::__l3::<lambda_3F3786490CA4221E>;
enum tagLIBFLAGS;
struct _PATHNAME_BUFFER;
enum tagCOMCALLTYPE;
struct tagENHMETAHEADER;
struct ISpecialSystemProperties;
enum tagVIEWSTATUS;
class CBasedFreeBlockPtr;
class CFreeList;
struct _NDR64_PROC_FORMAT;
struct _NDR64_PARAM_FLAGS;
struct _NDR64_PARAM_FORMAT;
struct __midl_frag359_t;
struct _FIXED;
enum _RTL_RXACT_OPERATION;
struct _MINIDUMP_MEMORY_INFO;
struct _MINIDUMP_CALLBACK_OUTPUT;
union _RTL_RUN_ONCE;
enum tagAPTKIND;
struct _RTL_SRWLOCK;
class Microsoft::WRL::ComPtr<IWeakReference>;
struct _RTL_CRITICAL_SECTION;
class COleStaticMutexSem;
class CComApartment;
enum _IRQ_PRIORITY;
enum tagREADYSTATE;
enum PO_FIXED_WAKE_SOURCE_TYPE;
struct _CRYPT_AES_128_KEY_STATE;
struct tagSTGMEDIUM;
struct _SECURITY_ATTRIBUTES;
struct _tagBINDINFO;
struct _MINIDUMP_LOCATION_DESCRIPTOR;
enum _THREADINFOCLASS;
struct ISynchronizeMutex;
enum tagPictureAttributes;
struct _SINGLE_LIST_ENTRY32;
struct tagCIEXYZ;
struct tagICEXYZTRIPLE;
struct tagLOGCOLORSPACEA;
enum _SE_AUDIT_OPERATION;
struct _RTL_TRACE_DATABASE;
struct tagLASTINPUTINFO;
enum _SAFER_OBJECT_INFO_CLASS;
enum _TOKEN_INFORMATION_CLASS;
struct IPartitionProperty;
struct tagMCI_OPEN_PARMSW;
enum tagMKSYS;
struct _LIST_ENTRY;
struct _LOADED_IMAGE;
struct tagACTCTXA;
enum _BOOT_ENTROPY_SOURCE_ID;
struct _MINIDUMP_LOCATION_DESCRIPTOR64;
struct _NT_TIB64;
enum _FILE_INFO_BY_HANDLE_CLASS;
enum _WNF_USER_DELIVERY_STATE;
enum _TIMER_INFORMATION_CLASS;
struct DISPLAYCONFIG_RATIONAL;
struct DISPLAYCONFIG_2DREGION;
enum DISPLAYCONFIG_SCANLINE_ORDERING;
struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO;
struct DISPLAYCONFIG_TARGET_MODE;
enum tagPOINTER_DEVICE_CURSOR_TYPE;
class CDestObject;
class CRpcChannelBuffer;
struct _DOCINFOA;
enum tagPOINTER_BUTTON_CHANGE_TYPE;
struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION;
enum tagCOINIT;
struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE;
enum _PNP_VETO_TYPE;
struct SERVICE_STATUS_HANDLE__;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;
enum _OBJECT_INFORMATION_CLASS;
enum _IO_SESSION_STATE;
struct LIST_ENTRY32;
struct _STRING32;
struct _LDR_DATA_TABLE_ENTRY32;
struct LIST_ENTRY64;
struct _RTL_CRITICAL_SECTION_DEBUG64;
struct _DEVICEDUMP_STRUCTURE_VERSION;
struct _DEVICEDUMP_SECTION_HEADER;
struct _DEVICEDUMP_SUBSECTION_POINTER;
struct _DEVICEDUMP_STORAGEDEVICE_DATA;
enum tagURLTEMPLATE;
struct tagEMR;
struct _TRIVERTEX;
struct tagEMRGRADIENTFILL;
struct tagPOINT;
enum _RTL_VERIFIER_REDIRECT_TYPE;
struct _CERT_X942_DH_PARAMETERS;
struct IComCatalog;
enum tagMSHLFLAGS;
enum _PNP_QUERY_RELATION;
struct _CMC_PEND_INFO;
struct _SID_IDENTIFIER_AUTHORITY;
struct _SID;
struct _BCRYPT_INTERFACE_VERSION;
enum _JOBOBJECTINFOCLASS;
struct tagTPMPARAMS;
enum _COMPUTER_NAME_FORMAT;
enum _IO_SESSION_EVENT;
struct tagRemHPALETTE;
struct waveformat_tag;
enum _FILE_INFORMATION_CLASS;
struct _QUERY_SERVICE_LOCK_STATUSA;
struct tagLC_ID;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >::is_pointer<Windows::Rtl::IRtlROFOStream *>;
enum _ALPC_PORT_INFORMATION_CLASS;
enum tagVARFLAGS;
struct IRpcChannelBufferMarshalingContext;
struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA;
struct _BIN_RANGE;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX;
enum __MIDL_IBindStatusCallback_0002;
struct _TP_POOL;
struct _CRL_FIND_ISSUED_FOR_PARA;
class CCompositeMonikerEnum;
enum _TAG_UNNAMED_5;
struct POWER_STATE_NOTIFY_HANDLER;
struct IOleCache2;
struct _PRINTER_OPTIONSW;
enum _SC_STATUS_TYPE;
struct _KEY_EVENT_RECORD;
struct _COORD;
struct _MOUSE_EVENT_RECORD;
struct _WINDOW_BUFFER_SIZE_RECORD;
struct _MENU_EVENT_RECORD;
struct _FOCUS_EVENT_RECORD;
struct _INPUT_RECORD;
struct _CRYPT_OID_INFO;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;
enum _FP__IEEE_FORMAT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> >;
enum _TAG_UNNAMED_6;
struct IDocfileAsyncConnectionPoint;
struct _SYSTEM_POWER_STATE_CONTEXT;
enum _LEARNING_MODE_LOG_LEVEL;
struct IProvideClassInfo;
struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT;
struct _RTL_VERIFIER_HELPER_TABLE;
enum _CM_SERVICE_NODE_TYPE;
enum _APTTYPE;
struct IUrlMon;
struct IMonikerProp;
enum _TAG_UNNAMED_7;
class Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits>;
struct ICacheRefresh;
struct HDC__;
enum _CM_SERVICE_LOAD_TYPE;
struct _PROCESS_BASIC_INFORMATION;
struct _PROCESS_EXTENDED_BASIC_INFORMATION;
enum _THREAD_INFORMATION_CLASS;
enum _TAG_UNNAMED_8;
struct tagProxyFileInfo;
enum _SID_NAME_USE;
enum tagFUNCFLAGS;
struct _BLENDFUNCTION;
enum _TAG_UNNAMED_9;
class CDirVector;
class CBasedMStreamPtr;
class CDirectory;
struct tagLOGFONTA;
struct tagICONMETRICSA;
struct _POINTL;
struct DISPLAYCONFIG_SOURCE_MODE;
struct _FILE_FS_VOLUME_FLAGS_INFORMATION;
struct _LDRP_CSLIST;
struct _SINGLE_LIST_ENTRY;
enum _LDR_DDAG_STATE;
struct _LDR_DDAG_NODE;
enum tagOLEMISC;
struct _TAPE_GET_POSITION;
struct _DECRYPTION_STATUS_BUFFER;
struct _NDR64_POINTER_FORMAT;
enum _THREAD_UMS_INFORMATION_COMMAND;
struct _TAPE_SET_DRIVE_PARAMETERS;
enum _TAG_UNNAMED_10;
struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION;
enum tagCALLCATEGORY;
enum tagGLOBALOPT_EH_VALUES;
struct _ACL_SIZE_INFORMATION;
struct _MEMORY_WORKING_SET_BLOCK;
enum tagRpcLocalAddressFormat;
struct _RPC_CALL_LOCAL_ADDRESS_V1;
class CBrokeredClipDataObject::GetData::__l18::<lambda_DB08121F9B2E4167>;
enum _TAG_UNNAMED_11;
struct _RPC_POLICY;
struct CCompositeMonikerEnum::se;
struct _NDR64_NO_REPEAT_FORMAT;
struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT;
struct _LUID_AND_ATTRIBUTES;
struct _PRIVILEGE_SET;
struct SStringHashNode;
enum tagXMLEMEM_TYPE;
struct IAgileObject;
enum _MEMORY_INFORMATION_CLASS;
enum CO_MARSHALING_CONTEXT_ATTRIBUTES;
struct MarshalingContextAttributeValue;
struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO;
enum _tagPI_FLAGS;
struct INoMarshal;
enum _SECTION_INFORMATION_CLASS;
struct _IMAGE_TLS_DIRECTORY32;
struct _CERT_SELECT_CRITERIA;
enum _STORAGE_PORT_CODE_SET;
struct _IMAGE_RUNTIME_FUNCTION_ENTRY;
struct _LDBL12;
struct _IDEREGS;
struct _SENDCMDINPARAMS;
struct _MODEMSETTINGS;
struct _PRINTPROCESSOR_CAPS_2;
enum IMPORT_OBJECT_NAME_TYPE;
struct _ALPC_PORT_CALLBACK_INFORMATION;
class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>;
enum XLAT_SIDE;
struct tagSTATPROPSETSTG;
struct _PRINTPROCESSOR_INFO_1A;
enum _TAG_UNNAMED_12;
struct _PUBLICKEYSTRUC;
enum _DEVICE_POWER_STATE;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY;
struct _BCRYPT_OID_LIST;
struct _RTL_DEBUG_INFORMATION;
struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO;
enum _TRANSACTIONMANAGER_INFORMATION_CLASS;
struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT;
struct tagEMRPOLYLINE;
struct tagMONITORINFOEXW;
enum _STORAGE_IDENTIFIER_TYPE;
struct _PROCESSOR_POWER_POLICY_INFO;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE;
enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;
struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION;
enum _TAG_UNNAMED_13;
struct _SCHANNEL_ALG;
class Windows::AutoOperatorAmpersandConstHelper<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;
enum _NT_PRODUCT_TYPE;
struct tagMCI_OVLY_WINDOW_PARMSA;
enum EPrintXPSJobProgress;
struct AsyncIPipeByte;
enum _COPYFILE2_COPY_PHASE;
struct IPropertyPage2;
struct IEnumSTATDATA;
enum __MIDL_IBindStatusCallback_0003;
struct _TOKEN_DEVICE_CLAIMS;
enum _MEDIA_TYPE;
struct _CERT_POLICY_ID;
struct IPropertyBag;
struct _TEB_ACTIVE_FRAME;
struct _TEB_ACTIVE_FRAME_EX;
struct _CERT_CONTEXT;
enum _RTL_GENERIC_COMPARE_RESULTS;
struct tagMOUSEMOVEPOINT;
enum tagCOWAIT_FLAGS;
struct _CMSG_RECIPIENT_ENCODE_INFO;
struct _KEY_TRUST_INFORMATION;
struct ICreateTypeInfo2;
enum _STORAGE_MEDIA_TYPE;
struct _FILE_PIPE_WAIT_FOR_BUFFER;
struct _RTL_PROCESS_BACKTRACE_INFORMATION;
struct _RTL_PROCESS_BACKTRACES;
struct tagMCI_WAVE_OPEN_PARMSA;
enum _AUDIT_EVENT_TYPE;
struct _SHQUERYRBINFO;
struct IDropSource;
struct Windows::ErrorHandling::StatusTypeHRESULT;
enum tagDOMNodeType;
enum EPrintXPSJobOperation;
struct tagKBDLLHOOKSTRUCT;
enum _FUNCTION_TABLE_TYPE;
struct _DYNAMIC_FUNCTION_TABLE;
struct _ACTIVATION_CONTEXT_BASIC_INFORMATION;
enum _TRANSACTION_INFORMATION_CLASS;
struct _QUERY_FILE_LAYOUT_OUTPUT;
struct _TRANSACTION_BIND_INFORMATION;
enum _PLUGPLAY_EVENT_CATEGORY;
struct tagEMREXTESCAPE;
struct IThunkManager;
enum _PARTITION_STYLE;
struct IClipboardBrokerInternal;
struct _API_SET_NAMESPACE_ENTRY;
struct _PRINTER_DEFAULTSA;
enum tagCALLCONV;
struct _KEY_VALUE_FULL_INFORMATION;
struct _LUTF8_STRING;
class Windows::AutoPODBase<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;
enum tagSTATFLAG;
struct ClassMonikerData;
enum _STORAGE_BUS_TYPE;
struct tagMONERRSTRUCT;
struct _CERT_PRIVATE_KEY_VALIDITY;
struct __midl_frag79_t;
enum tagRpcCallType;
struct IProvideMultipleClassInfo;
struct _cpinfo;
struct tagSPSChain;
struct tagSPSCache;
struct tagPageEntry;
class CInternalPageAllocator;
class CPageAllocator;
class CPolicySet;
enum _IRQ_DEVICE_POLICY;
struct tagFONTDESC;
struct IComCatalogSettings;
enum tagACTIVATION_FLAGS;
enum MAPPED_STREAM_OPTS;
class CPropertySetStorage;
struct _FILE_SFIO_RESERVE_INFORMATION;
struct HCOLORSPACE__;
enum _STORAGE_POWERUP_REASON_TYPE;
struct IOSTaskCompletion;
struct _DRIVE_LAYOUT_INFORMATION_MBR;
struct _OCSP_BASIC_REVOKED_INFO;
struct _DEVICE_DATA_SET_SCRUB_OUTPUT;
struct tagBITMAP;
struct tagBITMAPINFOHEADER;
struct tagDIBSECTION;
enum tagOLETLSFLAGS;
class Microsoft::WRL::ComPtr<IGlobalInterfaceTable>;
class Windows::Internal::Details::Git;
struct NDR_ALLOC_ALL_NODES_CONTEXT;
enum _ACTIVATION_CONTEXT_INFO_CLASS;
class CBrokeredClipDataObject::SetData::__l24::<lambda_DCEEBA36D17BE0C6>;
struct _CMSG_CTRL_DECRYPT_PARA;
enum __MIDL_IBindStatusCallback_0005;
struct _IMAGEHLP_SYMBOL_SRC;
enum tagOBJFLAGS;
struct tagRemFORMATETC;
enum ADDTOINDEX_DISPOSITION;
struct _PLUGPLAY_CONTROL_STATUS_DATA;
enum _SYSTEM_MEMORY_LIST_COMMAND;
enum _PRIORITY_HINT;
struct _FILE_IO_PRIORITY_HINT_INFO;
struct tagPDW;
enum _FSINFOCLASS;
class InstantiationInfo;
enum _TIMER_TYPE;
struct tagPROPERTYIDOFFSET;
struct tagPROPERTYSECTIONHEADER;
struct tagDUALSTRINGARRAY;
struct tagCInterfaceProxyHeader;
struct tagCInterfaceProxyVtbl;
enum _WATCHDOG_HANDLER_ACTION;
struct ASTAIncomingCallData;
struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION;
enum _WORKERFACTORYINFOCLASS;
enum _FILE_ID_TYPE;
struct _RTL_DEBUG_INFORMATION32;
struct IObjectActivator;
enum DBREASONENUM;
class PushLogicalThreadId;
enum PO_WAKE_SOURCE_TYPE;
struct _CMSG_MAIL_LIST_ENCRYPT_INFO;
struct _IMAGE_THUNK_DATA32;
enum BlockingReason;
class IMessageParamList;
class ASTAIncomingCallList;
struct ASTAState;
enum _RPC_NOTIFICATIONS;
struct _IMAGE_OS2_HEADER;
struct tagLOGCOLORSPACEW;
struct tagEMRCREATECOLORSPACEW;
enum _USER_ACTIVITY_PRESENCE;
enum tagVARKIND;
enum _DEP_SYSTEM_POLICY_TYPE;
struct _CRYPT_PROVUI_FUNCS;
struct _JOBOBJECT_WAKE_FILTER;
enum _EXCEPTION_DISPOSITION;
struct _TP_TASK;
struct _TP_DIRECT;
struct ICreateErrorInfo;
struct _REPAIR_COPIES_OUTPUT;
enum DBCOMPAREENUM;
enum tagCPFLAGS;
struct _NTFS_STATISTICS;
struct tagTEXTMETRICA;
struct tagMCI_INFO_PARMSA;
enum tagEOLE_AUTHENTICATION_CAPABILITIES;
struct ILockBytes;
enum _FILTER_BOOT_OPTION_OPERATION;
struct tagEMRSETMITERLIMIT;
struct A_SHA_CTX;
struct HMACSHA_CTX;
enum _KEY_SET_INFORMATION_CLASS;
struct _KNONVOLATILE_CONTEXT_POINTERS;
enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY;
struct _APPCATEGORYINFO;
enum tagCALLTYPE;
struct MFT_ENUM_DATA_V0;
enum IMMERSIVELAUNCHEREVENT;
struct _IMAGEHLP_CBA_EVENTW;
struct _KEY_TYPE_SUBTYPE;
struct IPersist;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION;
enum VERIFIER_MODE;
enum _SHRINK_VOLUME_REQUEST_TYPES;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOW;
struct HHOOK__;
struct tagNONCLIENTMETRICSA;
enum SE_PROCESS_CATEGORY;
struct _PROPSHEETPAGEA;
enum __MIDL_IBindStatusCallbackEx_0001;
struct _CRYPT_URL_INFO;
enum _RTL_UMS_SCHEDULER_REASON;
struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION;
struct _AVRF_CLIENT_ID_WOW64;
struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64;
struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64;
struct IAuthenticate;
enum _tagPSUACTION;
struct READ_USN_JOURNAL_DATA_V0;
enum RUNTIMEBROKER_CALLERIDENTITY_CHECK;
struct IContextCallback;
struct IUnknown;
enum _KTMOBJECT_TYPE;
enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES;
struct IStdMarshalInfo;
struct _ABC;
enum tagREGKIND;
enum _SE_LEARNING_MODE_DATA_TYPE;
struct IXMLDOMProcessingInstruction;
struct tagAXISINFOA;
struct _PRINTER_INFO_4W;
struct _ACTIVATION_CONTEXT_DATA;
enum tagPOINTER_DEVICE_TYPE;
class CLimitedWritableStorage::OpenStorage::__l3::<lambda_7AF3526445BD1900>;
enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;
struct MARK_HANDLE_INFO;
enum DBINDEX_COL_ORDERENUM;
struct _REMOTE_REQUEST_SCM_INFO;
enum _TABLE_SEARCH_RESULT;
struct tagCANDIDATEFORM;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER;
enum _SYSTEM_POWER_STATE;
enum CWMO_FLAGS;
struct __midl_frag11_t;
struct IXMLAttribute;
enum _WNF_STATE_NAME_INFORMATION;
struct HGESTUREINFO__;
struct _PROC_THREAD_ATTRIBUTE_LIST;
struct _PLUGPLAY_EVENT_BLOCK;
enum _SHUTDOWN_ACTION;
struct IPolicySet;
struct _DRIVER_INFO_8A;
enum tagResourceGateId;
struct BATTERY_REPORTING_SCALE;
struct _tagAUTHENTICATEINFO;
struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE;
enum POWER_MONITOR_REQUEST_REASON;
struct IPicture;
enum tagOLECLOSE;
struct tagBIND_OPTS3;
class CBindCtx;
enum _FP__IEEE_ROUNDING_MODE;
class CRandomNumberGenerator;
enum tagExtendedErrorParamTypes;
enum __MIDL_IInternetZoneManager_0002;
struct tagOpaqueData;
enum _EXCEPTION_LOG_TYPE;
struct tagMOUSEHOOKSTRUCT;
enum INDEXER_CACHE_STATE;
struct _SYSTEM_FLAGS_INFORMATION;
enum _FINDEX_SEARCH_OPS;
struct _STARTUPINFOW;
struct tagEMRANGLEARC;
struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA;
enum _RTL_VERIFIER_INFORMATION_CLASS;
struct _KEY_FULL_INFORMATION;
struct tagEMRROUNDRECT;
enum ACTCTX_REQUESTED_RUN_LEVEL;
enum _MM_ETW_WORKING_SET_TYPE;
struct _SECTION_IMAGE_INFORMATION32;
struct tagCStdPSFactoryBuffer;
enum _PORT_INFORMATION_CLASS;
struct tagLICINFO;
enum _HEAP_INFORMATION_CLASS;
enum _HARDWARE_COUNTER_TYPE;
struct _COUNTER_READING;
enum tagINPUT_MESSAGE_DEVICE_TYPE;
struct IPersistPropertyBag;
struct _wireSAFEARR_BSTR;
struct _BINARY_CONTAINER;
enum tagSYSKIND;
struct _KEY_VIRTUALIZATION_INFORMATION;
struct __midl_frag20_t;
enum _HARDERROR_RESPONSE_OPTION;
struct _OBJECTID;
enum DISPLAYCONFIG_TOPOLOGY_ID;
struct _SYSTEM_GDI_DRIVER_INFORMATION;
struct _CHANGER_SET_POSITION;
struct IROTData;
enum _RPC_NOTIFICATION_TYPES;
struct _NDR64_EXPR_VAR;
struct __midl_frag7_t;
struct _TRANSACTION_LIST_ENTRY;
class ITrackingMoniker;
enum CasingBehavior;
enum _PROCESS_INFORMATION_CLASS;
struct _PROCESS_CYCLE_TIME_INFORMATION;
enum _SAFER_IDENTIFICATION_TYPES;
struct _FILE_PIPE_PEEK_BUFFER;
struct _CERT_REVOCATION_CHAIN_PARA;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
enum _MEMORY_WORKING_SET_EX_LOCATION;
enum tagApplicationType;
enum __MIDL_IUri_0002;
struct IGetBindHandle;
enum tagDESCKIND;
struct IXMLDOMNodeList;
struct _RTL_VERIFIER_PAGEHEAP_INFORMATION;
struct READER_SEL_RESPONSE;
enum tagPENDINGTYPE;
struct _FILE_PREFETCH_EX;
struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION;
struct tagMIDIOUTCAPSA;
enum _MANDATORY_LEVEL;
struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE;
enum _SYSTEM_PIXEL_FORMAT;
struct tagDISPPARAMS;
struct _SYSTEM_ALARM_ACE;
enum _PO_SLEEP_DISABLE_REASON;
enum tagGLOBALOPT_PROPERTIES;
struct _STORAGE_ADAPTER_DESCRIPTOR;
enum __MIDL_IInternetSecurityManager_0002;
enum _CALLSOURCE;
struct _IMAGE_LINENUMBER;
struct tagPOINTS;
struct SActivatableClassIdHashNode;
enum __MIDL_IBindStatusCallback_0004;
enum STUB_PHASE;
struct _HYPER_SIZEDARR;
enum tagThreadingModel;
struct tagRPCOLEMESSAGE;
enum tagCLSCTX;
enum _KEY_INFORMATION_CLASS;
class CClassCache::CBaseClassEntry;
struct IMPORT_OBJECT_HEADER;
struct fd_set;
struct _wireSAFEARR_UNKNOWN;
struct HMIDIIN__;
enum _REG_ACTION;
enum _BOOT_ENTROPY_SOURCE_RESULT_CODE;
struct _MUICCHEADER;
struct tagPIXELFORMATDESCRIPTOR;
struct tagEMRPIXELFORMAT;
struct tagMIXERLINEA;
enum IMPORT_OBJECT_TYPE;
struct _POWER_MONITOR_INVOCATION;
struct _userSTGMEDIUM;
struct _userFLAG_STGMEDIUM;
struct tagWAVEOUTCAPSW;
enum tagFUNCKIND;
struct _MINIDUMP_INCLUDE_THREAD_CALLBACK;
enum tagACTIVATION_STAGE;
struct _MINIDUMP_MISC_INFO_2;
struct IOleInPlaceActiveObject;
enum _TRANSACTION_OUTCOME;
enum __vc_attributes::pointer_defaultAttribute::type_e;
struct __vc_attributes::pointer_defaultAttribute;
enum tagADVF;
struct _CMSG_KEY_TRANS_RECIPIENT_INFO;
enum tagSTGTY;
struct _KCRM_PROTOCOL_BLOB;
struct IAggregator;
enum _CM_SHARE_DISPOSITION;
struct _FILE_FS_ATTRIBUTE_INFORMATION;
struct _SEMAPHORE_BASIC_INFORMATION;
struct _CHANGER_ELEMENT_STATUS;
struct _RTL_BITMAP_EX;
enum tagShutdownType;
class CMapKeyToValue;
class CMapDwordDword;
class CDataAdviseCache;
enum tagRpcCallClientLocality;
struct _RTL_UCSCHAR_DECODER_RETURN_VALUE;
struct tagPOINTFX;
enum tagDATADIR;
struct _IMAGEHLP_LINEW64;
enum tagPOINTER_INPUT_TYPE;
struct HWINEVENTHOOK__;
struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION;
enum MessageParamKind;
struct tagSTDOBJREF;
struct tagOBJREF;
class CDllHost;
enum tagLocalServerType;
struct CleanupStack::memory_to_free;
struct CleanupStack::Block;
struct CleanupStack;
enum _COVERAGE_REQUEST_CODES;
struct _CERT_POLICY_QUALIFIER_INFO;
enum _IO_PRIORITY_HINT;
enum _ATOM_INFORMATION_CLASS;
struct ISynchronizeEvent;
enum tagRunAsType;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
enum _APTTYPEQUALIFIER;
struct IXMLDocument2;
struct _GROUP_AFFINITY;
enum _THDTYPE;
enum _FINDEX_INFO_LEVELS;
struct tagMENUINFO;
class Microsoft::WRL::ComPtr<IInspectable>;
enum tagTYMED;
struct _MINIDUMP_UNLOADED_MODULE_LIST;
enum _WAIT_TYPE;
struct _SYSTEM_SPCALL2_INFORMATION;
struct _SYSTEM_PROCESSOR_POWER_INFORMATION;
struct _CERT_POLICY_MAPPING;
enum _DEBUG_CONTROL_SPACE_ITEM;
struct _IMAGE_BOUND_IMPORT_DESCRIPTOR;
struct tagMCI_ANIM_UPDATE_PARMS;
enum _SECURITY_IMPERSONATION_LEVEL;
enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE;
struct _COMPATIBILITY_CONTEXT_ELEMENT;
struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION;
class BUCL::Rtl::CCallDisposition;
enum tagSERVERCALL;
struct _CREATE_DISK_MBR;
enum _CM_ERROR_CONTROL_TYPE;
struct _NCryptAlgorithmName;
struct SYNTHESIZED_MAP;
enum _TOKEN_ELEVATION_TYPE;
enum _TP_DEBUG_CLASS;
struct IRpcProxyBuffer;
struct _CERT_LDAP_STORE_OPENED_PARA;
struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT;
struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT;
enum _HARDERROR_RESPONSE;
struct _COMMPROP;
enum __MIDL___MIDL_itf_activate_0000_0010_0001;
struct __vc_attributes::size_isAttribute;
enum _SYSTEM_FIRMWARE_TABLE_ACTION;
struct tagFORMATETC;
class CStatData;
struct CArray<CStatData>::ArrayNode;
struct tagJOYCAPSW;
enum tagUSERCLASSTYPE;
struct _ALPC_SERVER_INFORMATION;
enum tagSF_TYPE;
enum __MIDL___MIDL_itf_privact_0000_0009_0001;
struct IRpcSyntaxNegotiate;
struct _FILE_MAILSLOT_SET_INFORMATION;
class CClassCache::CCEHashTable;
struct _ACL;
struct _PROPSHEETPAGEW_V1;
enum tagPreferredServerBitness;
struct _FILE_QUOTA_INFORMATION;
struct IAuthenticateEx;
enum tagAR_STATE;
enum _SC_ENUM_TYPE;
struct _FILE_FS_CONTROL_INFORMATION;
struct _DEVICE_DSM_NOTIFICATION_PARAMETERS;
enum _RESOURCEMANAGER_INFORMATION_CLASS;
struct DISPLAYCONFIG_PATH_SOURCE_INFO;
enum DISPLAYCONFIG_ROTATION;
struct DISPLAYCONFIG_PATH_TARGET_INFO;
struct DISPLAYCONFIG_PATH_INFO;
struct _TXFS_START_RM_INFORMATION;
enum _DMA_SPEED;
struct _s__RTTIClassHierarchyDescriptor;
struct _PROPSHEETPAGEA_V1;
enum _TRANSACTION_STATE;
struct NUMPARSE;
struct _CM_MCA_POS_DATA;
class BUCL::CConvertToSignedType<int>;
struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY;
enum _QUERY_FILE_LAYOUT_FILTER_TYPE;
class CBasedMSFPagePtr;
struct _JOB_INFO_3;
enum _TIMER_SET_INFORMATION_CLASS;
struct _CMC_TAGGED_CERT_REQUEST;
enum __MIDL_IAuthenticateEx_0001;
struct __midl_frag1515_t;
struct _s__RTTIBaseClassArray;
struct OPENCARDNAME_EXW;
enum tagSTGMOVE;
struct _DMA_CONFIGURATION_BYTE0;
struct _DMA_CONFIGURATION_BYTE1;
struct _EISA_DMA_CONFIGURATION;
enum _IRQ_GROUP_POLICY;
struct _SERVICE_TIMECHANGE_INFO;
struct IXMLDOMNamedNodeMap;
struct tagMCI_OPEN_PARMSA;
enum _ALPC_MESSAGE_INFORMATION_CLASS;
struct _RTL_DYNAMIC_HASH_TABLE;
class BUCL::CDequeLinkage;
struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT;
class CSyncSync;
struct _PRINTER_INFO_1W;
enum _FP_IEEE_COMPARE_RESULT;
struct IPerPropertyBrowsing;
enum _tagOIBDG_FLAGS;
struct _CERT_ALT_NAME_INFO;
struct _CRL_DIST_POINT_NAME;
struct _CRL_DIST_POINT;
enum tagSTREAM_SEEK;
struct IStorageReplica;
enum tagCoModuleType;
struct IMarshalOptions;
struct _CERT_POLICY_CONSTRAINTS_INFO;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned short>;
enum LATENCY_TIME;
struct _NETRESOURCEW;
struct _s__RTTICompleteObjectLocator2;
struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION;
struct _STREAM_LAYOUT_ENTRY;
enum tagURLZONE;
class CBasedUpdatePtr;
class CUpdateList;
enum RpcProxyPerfCounters;
struct _SMALL_RECT;
struct _CONSOLE_SELECTION_INFO;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned long>;
struct __vc_attributes::nonbrowsableAttribute;
enum tagDIMENSION;
enum ASSOCCLASS;
enum tagFEEDBACK_TYPE;
struct _MODLOAD_DATA;
class BUCL::CIsSignedType<unsigned char>;
enum EffectiveUnmarshalingPolicy;
enum _TAG_UNNAMED_14;
struct _RTL_PERTHREAD_CURDIR;
enum _PO_CS_DEVICE_NOTIFICATION_TYPE;
struct IPersistStreamInit;
enum PS_CREATE_STATE;
struct _BCRYPT_PSS_PADDING_INFO;
struct _customREMOTE_REQUEST_SCM_INFO;
enum _PS_STD_HANDLE_STATE;
enum POWER_USER_PRESENCE_TYPE;
struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE;
class COleTls;
struct IAsyncManager;
enum _RPC_ASYNC_EVENT;
enum __vc_attributes::threadingAttribute::threading_e;
class CLimitedStreamBase::UnlockRegion::__l3::<lambda_2B3A7864EDA80C84>;
struct _SERVICE_DELAYED_AUTO_START_INFO;
struct _RTL_BALANCED_LINKS;
struct _RTL_AVL_TABLE;
class XIPersistStorage;
struct _CRYPT_ECC_PRIVATE_KEY_INFO;
enum _RTL_STACK_TRACE_DATABASE_CONTROL;
struct _CRYPT_RETRIEVE_AUX_INFO;
class Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits>;
enum tagTYSPEC;
struct _SYSTEM_INFO;
enum __MIDL_ICodeInstall_0001;
enum _PROCESS_WORKING_SET_OPERATION;
struct _OBJECT_NAME_INFORMATION;
struct _SYSTEM_OBJECT_INFORMATION;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>;
enum _RTL_UMS_THREAD_INFO_CLASS;
enum tagGLOBALOPT_RO_FLAGS;
struct _EXCEPTION_RECORD;
struct _EXCEPTION_DEBUG_INFO;
struct _CREATE_THREAD_DEBUG_INFO;
struct _CREATE_PROCESS_DEBUG_INFO;
struct _EXIT_THREAD_DEBUG_INFO;
struct _EXIT_PROCESS_DEBUG_INFO;
struct _LOAD_DLL_DEBUG_INFO;
struct _UNLOAD_DLL_DEBUG_INFO;
struct _OUTPUT_DEBUG_STRING_INFO;
struct _RIP_INFO;
struct _DEBUG_EVENT;
enum BinaryState;
enum _POWER_PLATFORM_ROLE;
struct ITypeComp;
enum _ACCESS_REASON_TYPE;
enum __MIDL_IGetBindHandle_0001;
enum FORMATTAG;
class CData;
class CFormat;
struct _DRIVER_INFO_4A;
enum tagLOCKTYPE;
struct _RTL_VERIFIER_DLL_DESCRIPTOR;
enum _JOURNAL_INFORMATION_CLASS;
struct _CERT_TEMPLATE_EXT;
class XIStorage;
enum _LOGICAL_PROCESSOR_RELATIONSHIP;
struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION;
class CLimitedWritableStorage::MoveElementTo::__l9::<lambda_3EA709FC53E93FC8>;
struct _PRINTER_INFO_6;
enum ProcessToken::DesignModeState;
struct tagSWindowData;
enum PIDMSI_STATUS_VALUE;
enum __MIDL_IMonikerProp_0001;
struct _TRIPLE_LIST_ENTRY;
struct _TRIPLE_LIST;
struct IComProcessInfo3;
struct _numberfmtA;
enum tagGLOBALOPT_RPCTP_VALUES;
struct tagMCI_GENERIC_PARMS;
enum tagINVOKEKIND;
struct IComClassInfo2;
enum _WNF_STATE_NAME_LIFETIME;
struct _CM_VIDEO_DEVICE_DATA;
enum _CSV_CONTROL_OP;
enum ZBID;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ApartmentShutdownNode> >;
struct _SHFILEINFOA;
enum _USER_MARSHAL_CB_TYPE;
struct _KLDR_DATA_TABLE_ENTRY;
struct IInternetProtocolSinkStackable;
enum tagEventLogSD;
struct _NOTIFYICONDATAW;
enum tagBINDSPEED;
struct _CMSG_ENCRYPTED_ENCODE_INFO;
enum APPSTATE;
struct tagContextProperty;
struct _QUERY_PERFORMANCE_COUNTER_FLAGS;
struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION;
enum _PRT;
enum _TAG_UNNAMED_15;
struct tagTITLEBARINFO;
enum _PS_WAKE_REASON;
struct tagSecurityInfoData;
class SecurityInfo;
struct tagENTRY;
enum tagCALLSTATE;
struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA;
enum __MIDL___MIDL_itf_activate_0000_0010_0002;
struct _DATATYPES_INFO_1A;
enum SYSGEOCLASS;
struct _SYSTEM_LOOKASIDE_INFORMATION;
enum COMPARTMENT_ID;
struct _POWER_SESSION_CONNECT;
struct _SYSTEM_MANDATORY_LABEL_ACE;
struct _ENCRYPTION_CERTIFICATE;
struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA;
enum DBREASONENUM15;
struct _COSERVERINFO;
struct _ADDJOB_INFO_1W;
struct IPersistPropertyBag2;
enum _UNWIND_OP_CODES;
struct _IMAGE_ROM_OPTIONAL_HEADER;
struct _CERT_NAME_VALUE;
struct tagXAptCallback;
enum tagLOCALFLAG;
enum _NORM_FORM;
enum tagCOMSD;
struct tagSpecialPropertiesData;
class SpecialProperties;
struct tagSTICKYKEYS;
enum CastMethod;
struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT;
struct _SECURITY_QUALITY_OF_SERVICE;
struct tagCONVCONTEXT;
struct tagCONVINFO;
struct _RTL_BUFFER;
struct _RTL_UNICODE_STRING_BUFFER;
class CLimitedWritableStorage::RenameElement::__l3::<lambda_D6BEF55CA310B083>;
struct IRunningObjectTable;
enum _ALTERNATIVE_ARCHITECTURE_TYPE;
struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER;
struct _CM_PNP_BIOS_INSTALLATION_CHECK;
struct IServerLocationInfo;
enum _MEMORY_RESERVE_TYPE;
enum _EVENT_INFORMATION_CLASS;
struct _CLIENT_ID;
struct _SECTION_IMAGE_INFORMATION;
struct _RTL_USER_PROCESS_INFORMATION;
struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT;
enum COleCache::Locate::__l2::tagFormatType;
struct _EXFAT_STATISTICS;
class MultiplicationHelper<unsigned __int64,unsigned __int64,5>;
enum OLETLS_CROSS_THREAD_FLAGS;
struct SPreHeader;
enum RPC_ADDRESS_CHANGE_TYPE;
struct _CRYPTNET_URL_CACHE_RESPONSE_INFO;
enum FreeResourcesFlags;
enum _REQUESTER_TYPE;
struct IComClassInfo;
enum _TP_LOG_LEVEL;
enum Microsoft::WRL::ModuleType;
class CExtentList;
class CTrackingFileMoniker;
class CMutexSem2;
class CFileMoniker;
struct IStackWalkerStack;
enum tagCONTEXTEVENT;
struct _IMAGE_FUNCTION_ENTRY64;
struct _SHRINK_VOLUME_INFORMATION;
struct _PORT_INFO_2A;
enum __MIDL_IBindStatusCallback_0001;
struct _CMSG_CMS_RECIPIENT_INFO;
enum _TAG_UNNAMED_16;
enum _FIRMWARE_TYPE;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION;
struct IPictureDisp;
struct HACCEL__;
struct ITypeMarshal;
struct _PROVIDOR_INFO_2A;
struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA;
struct tagACTCTX_SECTION_KEYED_DATA;
struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION;
struct tagWINDOWPLACEMENT;
enum tagDLFlags;
enum CreateStackTraceFlags;
struct IOlePresObj;
enum _EVENT_TYPE;
struct tagGESTURENOTIFYSTRUCT;
enum _ERROR_SEVERITY_VALUE;
struct IOleInPlaceObjectWindowless;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;
enum __MIDL___MIDL_itf_activate_0000_0010_0003;
struct VOLUME_BITMAP_BUFFER;
enum DELAYED_RETRIEVAL_TYPE;
struct _IMAGE_FILE_HEADER;
struct _IMAGE_ROM_HEADERS;
struct _IMAGE_IMPORT_DESCRIPTOR;
class CAptRpcChnl;
enum tagDVASPECT;
struct SSegment;
enum tagSTDMSHLFLAGS;
struct SERVICE_TRIGGER_CUSTOM_STATE_ID;
enum tagDRAGOP;
struct IWinRTCatalogInternal;
struct _TIME_FIELDS;
struct _RTL_TIME_ZONE_INFORMATION;
enum tagOLEWHICHMK;
struct _COMPOUND_ACCESS_ALLOWED_ACE;
enum tagRPCOPT_PROPERTIES;
struct IActivatableClassInformation;
struct _CERT_KEY_CONTEXT;
enum DROP_FEEDBACK_ACTION;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>;
enum _LINK_TRACKING_INFORMATION_TYPE;
class CBasedPagedVectorPtr;
class CMSFPage;
enum _GET_FILEEX_INFO_LEVELS;
enum IHM_DISPLAY_MODE;
struct _IO_RESOURCE_DESCRIPTOR;
struct _IO_RESOURCE_LIST;
enum _STREAM_INFO_LEVELS;
enum _PSM_ACTIVATE_BACKGROUND_TYPE;
enum ENUM_FILE_INFORMATION_CLASS;
struct IPrintDialogCallback;
enum _ENLISTMENT_INFORMATION_CLASS;
struct IEnumSCMProcessInfo;
struct _PROCESS_WORKING_SET_CONTROL;
struct tagPDEXA;
enum tagOLEGETMONIKER;
struct FIND_BY_SID_OUTPUT;
enum OPERATION_TYPE;
struct _SID_AND_ATTRIBUTES;
struct _TOKEN_USER;
struct tagSERIALKEYSW;
struct _CrtMemState;
struct _FILE_FS_SIZE_INFORMATION;
enum _PROCESS_TLS_INFORMATION_TYPE;
struct _CRL_CONTEXT;
struct tagEMRPOLYPOLYLINE;
class CSimpStreamOpen;
struct _CRYPT_CONTEXT_CONFIG;
enum EC_HOST_UI_MODE;
enum POWER_STATE_DISABLED_TYPE;
struct PPM_WMI_LEGACY_PERFSTATE;
enum BaseCallKind;
struct _RPC_ASYNC_STATE;
enum ESignalState;
class CAsyncCall;
struct _TOKEN_LINKED_TOKEN;
struct tagMCI_OVLY_WINDOW_PARMSW;
enum IAM_APPLICATION_REALM;
struct _PORT_MESSAGE;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP;
struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_AND_FLAG_MAP;
enum tagOLECONTF;
struct DELETE_USN_JOURNAL_DATA;
struct IDataFilter;
enum PICKER_TYPE;
enum _MEMORY_RESOURCE_NOTIFICATION_TYPE;
struct __midl_frag50_t;
class CSafeRefCount;
struct _RTL_SMART_LBLOB_WRITING_CONTEXT;
class Windows::Rtl::CRTL_SMART_LBLOB_WRITING_CONTEXT;
class CFunctionDiscoveryNotificationWrapper;
class Windows::Rtl::AutoHandle;
struct _FILEMUIINFO;
enum REMOVEITEMTYPE;
struct _RTL_RB_TREE;
struct __midl_frag1183_t;
struct tagPropsOutInfo;
class ActivationPropertiesOut::OutSerializer;
enum tagEXTCONN;
enum tagREGCLS;
struct tagDROPSTRUCT;
struct _CONNECTDLGSTRUCTA;
struct _PRINTER_DEFAULTSW;
enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_OPTION;
struct IAddrTrackingControl;
struct _s__CatchableTypeArray;
enum SYSNLS_FUNCTION;
struct _CRYPT_ATTRIBUTES;
struct _CMSG_SIGNER_INFO;
union _SLIST_HEADER;
enum IMAGE_AUX_SYMBOL_TYPE;
enum _WNF_DATA_SCOPE;
struct HSZ__;
enum tagRPCOPT_SERVER_LOCALITY_VALUES;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;
enum _SEMAPHORE_INFORMATION_CLASS;
struct _CMC_ADD_EXTENSIONS_INFO;
struct tagScmReplyInfoData;
class ScmReplyInfo;
class ActivationPropertiesOut;
enum _POWER_STATE_TYPE;
class SafeIStorage;
union _INSTALLSPEC;
struct RETRIEVAL_POINTERS_BUFFER;
enum _ACL_INFORMATION_CLASS;
enum _TP_CALLBACK_PRIORITY;
struct PPM_PERFSTATE_EVENT;
struct _SYSTEM_CONSOLE_INFORMATION;
enum QUERY_USER_NOTIFICATION_STATE;
enum _MONITOR_DISPLAY_STATE;
struct __midl_frag68_t;
struct IRpcOptions;
enum _RPC_HTTP_REDIRECTOR_STAGE;
struct _LBLOB;
enum tagBIND_FLAGS;
struct PROCESSOR_IDLESTATE_INFO;
struct _wireSAFEARR_HAVEIID;
struct _SESSION_HEADER;
enum _VIRTUAL_MEMORY_INFORMATION_CLASS;
struct _WOW64_LDT_ENTRY;
enum _WATCHDOG_INFORMATION_CLASS;
enum _KEY_VALUE_INFORMATION_CLASS;
struct PPM_IDLE_STATE_BUCKET_EX;
struct PPM_IDLE_STATE_ACCOUNTING_EX;
struct _NDR_EXPR_DESC;
struct tagCHOOSEFONTW;
enum DISPLAYCONFIG_MODE_INFO_TYPE;
struct PROCESSOR_PERFSTATE_POLICY;
enum tagOLEUPDATE;
struct tagMSLLHOOKSTRUCT;
enum _SIGDN;
struct _CERT_STRONG_SIGN_PARA;
struct _PHYSICAL_CHANNEL_RUN;
enum OLETLS_REFUSE_RUNDOWN_REASON;
enum _SC_ACTION_TYPE;
struct _RTL_AVL_ENTRY;
enum tagOLEVERBATTRIB;
struct _LDOUBLE;
enum _TOKEN_TYPE;
struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION;
struct _BY_HANDLE_FILE_INFORMATION;
class Windows::Auto<Windows::Rtl::IRtlWOFOStream *>;
enum tagOLELINKBIND;
struct tagSERIALKEYSA;
enum _POWER_REQUEST_TYPE;
enum __MIDL_IInternetSecurityManager_0003;
struct _NDR64_EXPR_OPERATOR;
struct tagACCEL;
class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;
struct _CONSOLE_HISTORY_INFO;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>;
enum VIRTUALUIGROUPITEMVALUE;
enum _URLZONEREG;
struct tagNFFCONTROLBITS;
struct _SL_APPX_CACHE_VALUE_DESCRIPTOR;
enum tagCHANGEKIND;
struct _SERVICE_START_REASON;
struct _OBJECT_ATTRIBUTES64;
struct _PROCESSOR_IDLE_STATE;
enum tagDCOM_CALL_STATE;
union _userCLIPFORMAT::__MIDL_IWinTypes_0001;
struct _userCLIPFORMAT;
struct _PRINTER_ENUM_VALUESA;
struct _TOKEN_SECURITY_ATTRIBUTE_V1;
enum __MIDL_IInternetZoneManager_0001;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST;
struct SMultiGUIDKey;
struct SMultiGUIDHashNode;
class CClassCache::CClassEntry;
enum tagEventLogModes;
struct _COVERAGE_MODULE_INFO;
enum NAMESPACE_FOLDER_PREFERENCES_FLAGS;
struct _CTL_VERIFY_USAGE_PARA;
struct _SHFILEINFOW;
struct Windows::Rtl::IRtlFormattedOutputStream;
enum tagPENDINGMSG;
class CStatArray;
struct _PLUGPLAY_NOTIFY_HDR;
struct _PLUGPLAY_CUSTOM_NOTIFICATION;
enum _COPYFILE2_MESSAGE_ACTION;
union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005;
class Microsoft::WRL::Details::WeakReference;
enum SYNCMGR_CANCEL_REQUEST;
enum _SECTION_INHERIT;
struct tagHELPWININFOA;
enum tagMEMCTX;
enum STORAGEITEM_CREATION_TYPE;
class CExtHashTable;
struct ICallInfo;
struct tagCFEntry;
struct IInternet;
enum _WOW64_FUNCTION_CODE64;
enum tagINPUT_MESSAGE_ORIGIN_ID;
struct RPC_INTERFACE_TEMPLATEA;
struct _cpinfoexW;
enum tagLC_NEXT_INDEX_STATE;
struct __vc_attributes::uidefaultAttribute;
enum tagCOINITBASE;
struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA;
enum tagDISCARDCACHE;
struct _LDR_IMPORT_CALLBACK_INFO;
struct _LDR_SECTION_INFO;
struct _LDR_VERIFY_IMAGE_INFO;
enum _TAG_UNNAMED_17;
enum _IO_COMPLETION_INFORMATION_CLASS;
struct __BCRYPT_KEY_LENGTHS_STRUCT;
enum MCA_EXCEPTION_TYPE;
struct ISynchronizeContainer;
enum PROPCTL_RECT_TYPE;
struct threadlocaleinfostruct;
enum tagProcessType;
struct __midl_frag386_t;
struct _SYSTEM_BOOT_GRAPHICS_INFORMATION;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;
struct FORMATETCDATA;
struct FORMATETCDATAARRAY;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>;
struct IOleObject;
struct IComServices2;
class CLimitedWritableStorage::DestroyElement::__l3::<lambda_AA79AD408A52AB5A>;
enum DDE_DISPATCH_FUNC;
struct IInternetHostSecurityManager;
struct tagMCI_ANIM_RECT_PARMS;
struct IViewObject;
enum __vc_attributes::event_receiverAttribute::type_e;
union _userHBITMAP::__MIDL_IWinTypes_0007;
struct _userHBITMAP;
enum __vc_attributes::aggregatableAttribute::type_e;
enum tagIPIDFLAGS;
struct _IO_COMPLETION_BASIC_INFORMATION;
struct CClassCache::SDPEHashKey;
enum __vc_attributes::event_sourceAttribute::type_e;
class CFatVector;
struct _IO_COUNTERS;
struct _MCGEN_TRACE_CONTEXT;
enum __vc_attributes::helper_attributes::usageAttribute::usage_e;
struct _wireSAFEARR_DISPATCH;
struct _wireSAFEARR_VARIANT;
struct _wireSAFEARR_BRECORD;
struct _BYTE_SIZEDARR;
struct _SHORT_SIZEDARR;
struct _LONG_SIZEDARR;
union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001;
struct _wireSAFEARRAY_UNION;
struct AsyncIRemUnknown2;
enum tagHOSTDLLFLAGS;
struct _EISA_PORT_DESCRIPTOR;
struct _EISA_PORT_CONFIGURATION;
enum tagMSHCTX;
struct tagOBJREFDATA;
struct _PROCESSOR_RELATIONSHIP;
struct _NUMA_NODE_RELATIONSHIP;
struct _CACHE_RELATIONSHIP;
struct _PROCESSOR_GROUP_INFO;
struct _GROUP_RELATIONSHIP;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX;
struct tagPALETTEENTRY;
struct tagLOGPALETTE;
enum _IMAGEHLP_SYMBOL_TYPE_INFO;
struct tagEMRINVERTRGN;
enum _TAG_UNNAMED_18;
enum _MINIDUMP_STREAM_TYPE;
struct tagPOINTER_DEVICE_INFO;
class BUCL::CConvertToSignedType<short>;
enum tagHITRESULT;
struct IXMLDOMDocument;
enum CClassCache::CClassEntry::eGUIDIndex;
struct tagMSG;
struct _CERT_STORE_PROV_INFO;
struct _DISK_INT13_INFO;
struct _OPEN_PRINTER_PROPS_INFOW;
enum tagDVASPECT2;
struct _DSSSEED;
struct _PUBKEYVER3;
struct Windows::Rtl::IRtlObject;
enum _MINIDUMP_TYPE;
struct IBinding;
enum tagCallType;
enum EPrintPropertyType;
struct PrintPropertyValue;
enum tagXFORMCOORDS;
enum tagPROPPAGESTATUS;
struct _PSFEATURE_CUSTPAPER;
struct IXMLDOMAttribute;
enum SourceOfClientHResult;
enum SYM_TYPE;
class CPunkForRelease;
struct _PS_ATTRIBUTE;
class Windows::AutoPointerBase<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;
enum _MODULE_WRITE_FLAGS;
struct _PLUGPLAY_CONTROL_DEPTH_DATA;
struct _KEY_VALUE_PARTIAL_INFORMATION;
enum PATH_TYPE;
struct DISPLAYCONFIG_TARGET_PREFERRED_MODE;
struct tagENHMETARECORD;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;
enum ADDRESS_MODE;
enum _IMAGEHLP_STATUS_REASON;
enum _THREAD_WRITE_FLAGS;
struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM;
enum tagCTRLINFO;
enum tagAspectInfoFlag;
struct tagPROPERTYSETHEADER;
enum tagExtentMode;
struct IWindowForBindingUI;
class ClientCallRetryContext;
enum tagGUIDKIND;
class Microsoft::WRL::Details::RuntimeClassBaseT<2>;
enum CClassCache::CCEHashTable::eFlags;
enum tagPOINTERINACTIVE;
struct IComCatalogLocation;
enum OLE_TRISTATE;
enum CRefExportCount::tagTokens;
enum VARIANT_SERIALIZE_FLAGS;
struct _CRYPT_MASK_GEN_ALGORITHM;
struct mmtime_tag;
enum tagLOADSTATE;
struct tagORPCTHAT;
struct _SYSTEM_BIGPOOL_ENTRY;
struct _SYSTEM_BIGPOOL_INFORMATION;
class Windows::AutoPointerBase<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;
enum _PROPOP;
struct _XSAVE_AREA_HEADER;
enum tagPATCHOP;
struct _CERT_HASHED_URL;
struct _CERT_BIOMETRIC_DATA;
struct _GET_LENGTH_INFORMATION;
struct IDropSourceNotify;
enum DIRENTRYOP;
enum DECOLOR;
enum CDFB_CLASSTYPE;
struct IMAGE_LOAD_CONFIG_DIRECTORY64;
enum WHICHTIME;
struct _OBJECT_ATTRIBUTES32;
struct tagMIDIOUTCAPSW;
struct _SYSTEM_PREFETCH_STATS;
enum CPropertyStorage::EIsWriteable;
struct _PS_STD_HANDLE_INFO;
struct _CERT_BIOMETRIC_EXT_INFO;
struct _LUNICODE_STRING;
class Windows::AutoPODBase<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;
struct IAddrExclusionControl;
enum CPropertyStorage::EInitializePropertyStream;
enum BUCL::HashTable::InsertOrUpdateIfPresentDisposition;
struct DLGTEMPLATE;
class Windows::Rtl::CriticalSectionLock;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;
enum BUCL::DequeIteratorMovementDirection;
enum _TAG_UNNAMED_19;
struct _TOKEN_GROUPS_AND_PRIVILEGES;
struct _IMAGE_DATA_DIRECTORY;
struct _IMAGE_BOUND_FORWARDER_REF;
class Windows::Auto<_UNICODE_STRING>;
enum _TAG_UNNAMED_20;
struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY;
enum _TAG_UNNAMED_21;
enum _TAG_UNNAMED_22;
enum _TAG_UNNAMED_23;
struct IContextMarshaler;
enum _TAG_UNNAMED_24;
struct IPropertyStorage;
struct _TRANSACTION_ENLISTMENT_PAIR;
struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION;
struct _QUAD;
enum _TAG_UNNAMED_25;
struct _WNF_USER_SUBSCRIPTION;
struct tagDEVNAMES;
struct IMarshalEnvoy;
enum _TAG_UNNAMED_26;
struct tMIXERCONTROLDETAILS_UNSIGNED;
struct IGlobalOptions;
struct IInstanceInfo;
enum _TAG_UNNAMED_27;
enum APPCRUSHER_SOURCE;
struct _KERNEL_USER_TIMES;
struct IEnumSTATSTGVtbl;
enum _TAG_UNNAMED_28;
class CBasedFatPtr;
class CFat;
enum _TAG_UNNAMED_29;
enum SEARCH_SUBMIT_TYPE;
struct tagPOLYTEXTW;
enum _TAG_UNNAMED_30;
enum _TAG_UNNAMED_31;
struct _SEC_WINNT_AUTH_IDENTITY_W;
struct AsyncIMultiQI;
enum SYNCMGR_HANDLER_POLICIES;
struct _TXFS_GET_METADATA_INFO_OUT;
enum _TAG_UNNAMED_32;
class Windows::Rtl::AutoKeyHandle;
enum _TAG_UNNAMED_33;
struct IInternetProtocolSink;
struct tagTYPEDESC;
struct tagIDLDESC;
struct tagPARAMDESC;
struct tagELEMDESC;
struct tagVARDESC;
enum MODE_CHANGE_REASON;
struct IUriBuilder;
enum _TAG_UNNAMED_34;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;
enum _TAG_UNNAMED_35;
enum SPLASHSCREEN_IMAGE_TYPE;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef const >;
struct IStackWalkerSymbol;
enum _DETECTION_TYPE;
struct _KEY_BASIC_INFORMATION;
struct tagMCI_SAVE_PARMSA;
enum _STORAGE_IDENTIFIER_CODE_SET;
struct _CRYPT_TIMESTAMP_RESPONSE;
struct _RETRIEVAL_POINTER_BASE;
class Windows::ErrorHandling::Rtl::CVoidRaiseFrame;
enum SELECTIONSTATEVALUE;
enum _STORAGE_ID_NAA_FORMAT;
struct SIP_SUBJECTINFO_;
struct _FILE_OBJECTID_BUFFER;
struct _MMCKINFO;
enum _WRITE_CACHE_TYPE;
struct _FILE_PATH;
class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>;
struct tagMENUITEMINFOA;
enum SEARCHPANE_HOTKEY;
class CNtfsStorageForPropSetStg;
struct Windows::Rtl::IRtlWOFOStream;
enum BIDI_TYPE;
class CSmAllocator;
enum _DEVICEDUMP_COLLECTION_TYPE;
enum ITEMDEVIRTUALIZERVALUE;
struct __PUBLIC_OBJECT_TYPE_INFORMATION;
struct _CRYPT_RC2_CBC_PARAMETERS;
struct _WIN_CERTIFICATE;
struct tagWNDCLASSW;
enum _WRITE_CACHE_ENABLE;
enum MARKUPLINKTEXT;
struct _TXFS_SAVEPOINT_INFORMATION;
enum _CHANGER_DEVICE_PROBLEM_TYPE;
class CSharedMemHeader;
enum PRINT_EXECUTION_CONTEXT;
struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION;
struct _CERT_STRONG_SIGN_SERIALIZED_INFO;
enum SHARE_ACTIVATION_MODE;
struct IProxyManager;
enum _WRITE_THROUGH;
enum _STORAGE_PROPERTY_ID;
struct SPointerHashNode;
enum _STORAGE_QUERY_TYPE;
struct tagMONHSZSTRUCTA;
enum _SPTEXT;
enum _STORAGE_ASSOCIATION_TYPE;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;
enum _WRITE_CACHE_CHANGE;
struct IOplockStorage;
class CBasedMarshalListPtr;
class CMarshalList;
enum APPDOCLISTTYPE;
struct _CMSG_KEY_AGREE_ENCRYPT_INFO;
enum UlIsEntry;
struct _SL_APPX_CACHE;
enum SE_WS_APPX_SIGNATURE_ORIGIN;
class Windows::Rtl::CriticalSectionLockGrant;
enum WPP_DEFINE_BIT_NAMES;
struct IEnumContextProps;
enum LIBRARYSAVEFLAGS;
class CCtxComChnl;
struct _DOC_INFO_3W;
enum tagCCF_FLAGS;
struct HLSURF__;
struct tagEMRTEXT;
enum WPP_CTL_NAMES;
struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1;
enum ASSOCIATIONLEVEL;
struct _IMAGE_BASE_RELOCATION;
enum _TAG_UNNAMED_36;
struct IRpcProxyBufferVtbl;
struct tagPROPPAGEINFO;
enum WMIDPREQUESTCODE;
struct _FILE_PIPE_INFORMATION;
enum _TAG_UNNAMED_37;
struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO;
struct _IMAGE_SYMBOL;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>::COperatorAmpersandReturnType;
enum SLGP_FLAGS;
class CBasedGlobalContextPtr;
enum ExtentKeys;
enum tagCONDITION_TYPE;
struct tagEMRSTRETCHDIBITS;
struct IInternetProtocolEx;
enum EDGE_GESTURE_KIND;
struct _CERT_REVOCATION_INFO;
enum DEFAULTSAVEFOLDERTYPE;
struct _CERT_FORTEZZA_DATA_PROP;
union __m128;
enum KNOWNDESTCATEGORY;
enum CPVIEW;
struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE;
struct _CERT_REVOCATION_CRL_INFO;
struct IRpcChannelBuffer;
struct __midl_frag97_t;
enum MARKUPMESSAGE;
struct _PROCESSOR_POWER_INFORMATION;
enum MARKUPSIZE;
struct __MIDL_ILocalObjectExporter_0005;
struct _CERT_ALT_NAME_ENTRY;
struct _CERT_ACCESS_DESCRIPTION;
class CSimpEnumSTATSTG;
enum FFFP_MODE;
struct _CRL_INFO;
class CFILETIME;
enum ASSOCIATIONTYPE;
struct ICreateTypeLib2;
struct _SRCCODEINFOW;
class Windows::Rtl::AutoFileHandle;
struct IPartitionLookup;
enum FILE_USAGE_TYPE;
struct _FP_32;
struct _SYSTEM_SESSION_PROCESS_INFORMATION;
struct _PARTITION_INFORMATION_GPT;
enum tagMENUPOPUPSELECT;
struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA;
struct tagABORTPATH;
struct _CMSG_ENVELOPED_ENCODE_INFO;
struct _DOC_INFO_2W;
enum tagBANDSITECID;
struct tagEMRSETCOLORSPACE;
struct _ALPC_SECURITY_ATTR;
struct _BYTE_BLOB;
struct _FILE_BOTH_DIR_INFORMATION;
enum _SPACTION;
struct midiproptempo_tag;
enum PKA_FLAGS;
struct POWER_ACTION_POLICY;
struct SYSTEM_POWER_LEVEL;
struct _ACTIVATION_CONTEXT_QUERY_INDEX;
struct tagCOMPAREITEMSTRUCT;
struct _PRINTER_INFO_5A;
enum tagCONDITION_OPERATION;
struct IEnumSTATPROPSTG;
struct _CRYPT_ECC_CMS_SHARED_INFO;
struct _SYSTEMTIME;
struct _TIME_ZONE_INFORMATION;
struct _MINIDUMP_MISC_INFO_3;
struct _CRL_ENTRY;
struct ICatalogFileInfo;
enum OfflineFolderStatus;
struct _STORAGE_DEVICE_ID_DESCRIPTOR;
enum LIBRARYFOLDERFILTER;
struct _UMS_SYSTEM_THREAD_INFORMATION;
struct _CRYPT_IMAGE_REG;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IMarshal> >;
struct _NDR_CORRELATION_INFO;
struct _MINIDUMP_EXCEPTION_INFORMATION;
enum LIBRARYOPTIONFLAGS;
struct _KAFFINITY_EX;
struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION;
class AllocationWrapper;
struct _ALPC_DATA_VIEW_ATTR;
struct _CPTABLEINFO;
struct _NLSTABLEINFO;
enum tagORFLAG;
struct _STORAGE_READ_CAPACITY;
enum tagOXIDFLAGS;
class CStmHandle;
struct SCacheEntry;
class CBasedDirectStreamPtr;
class CStreamCache;
class CBasedDeltaListPtr;
class CDirectStream;
struct _IMAGE_COFF_SYMBOLS_HEADER;
struct tagPLACEABLEMETAHEADER;
enum tagFOCOXID;
struct tagRGBQUAD;
struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT;
struct __midl_frag15_t;
struct _SYSTEM_TIMEOFDAY_INFORMATION;
enum __MIDL_IActivatorCustomMarshal_0001;
struct _MINIDUMP_CALLBACK_INFORMATION;
struct _RESUME_PERFORMANCE;
enum __MIDL___MIDL_itf_immact_0000_0002_0002;
struct _DIAGNOSTIC_BUFFER;
struct _WAKE_TIMER_INFO;
class CEnumSTATPROPSTG;
enum CClassCache::CDllPathEntry::eFlags;
enum CClassCache::CClassEntry::eFlags;
struct _SYSTEM_PAGEFILE_INFORMATION_EX;
enum DLL_INSTANTIATION_PROPERTIES::eFlags;
struct _ACCESS_ALLOWED_OBJECT_ACE;
struct _CHANGER_PRODUCT_DATA;
struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER;
struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal>,Microsoft::WRL::CloakedIid<IAgileObject>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
enum CClassCache::CServiceRefEntry::eFlags;
enum tagSTDID_FLAGS;
struct _BCRYPT_KEY_BLOB;
struct tagPARAMDATA;
struct tagEMRCREATEDIBPATTERNBRUSHPT;
enum tagSMFLAGS;
struct _FSCTL_OFFLOAD_READ_INPUT;
union _CLIENT_CALL_RETURN;
struct _ENCRYPTION_CERTIFICATE_LIST;
struct _SYSTEM_THREAD_INFORMATION;
enum tagDISCTYPE;
class CMachineNamesHelper;
struct _tagpropertykey;
class DeserializeHelper::BstrDestroyer;
struct _PS_ATTRIBUTE_LIST;
struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED;
struct SysInfo;
enum CallObjectOccurrenceOrStateVariable;
struct IDummyHICONIncluder;
struct tagEMRPOLYDRAW;
class Windows::Auto<Windows::Rtl::IRtlRORAStream *>;
struct tagMETHODDATA;
struct tagBITMAPFILEHEADER;
enum EChannelState;
struct _CRYPT_KEY_PROV_INFO;
struct _CERT_CHAIN;
struct _STORAGE_IDENTIFIER;
enum Microsoft::WRL::RuntimeClassType;
struct IActivationSecurityInfo;
struct _BOOT_ENTRY;
struct tagMCI_RECORD_PARMS;
struct _FILE_IO_COMPLETION_INFORMATION;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES;
struct _LDR_DLL_LOADED_NOTIFICATION_DATA;
struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA;
union _LDR_DLL_NOTIFICATION_DATA;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >::is_pointer<Windows::Rtl::IRtlRORAStream *>;
class CProcessSecret;
struct _RTL_HEAP_ENTRY;
struct _CONTEXT_CHUNK;
enum CRIFTable::RegistrationState;
struct _IMAGE_SECTION_HEADER;
class CComActivator;
struct _wireSAFEARRAY;
struct _STORAGE_GET_BC_PROPERTIES_OUTPUT;
struct _FILE_REGION_INPUT;
struct tMIXERCONTROLDETAILS_BOOLEAN;
struct _MEMORY_BASIC_INFORMATION64;
class CMSFPageTable;
struct _CREATE_DISK_GPT;
enum tagRUNDOWN_RESULT;
struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION;
struct _CRYPT_ATTRIBUTE_TYPE_VALUE;
struct stat;
struct _GENERIC_BINDING_ROUTINE_PAIR;
struct PRINT_EXECUTION_DATA;
struct tagLOGFONTW;
struct tagENUMLOGFONTW;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits;
struct tagCOLORCORRECTPALETTE;
struct _CERT_LOGOTYPE_REFERENCE;
enum CClassCache::eFlags;
struct timeval;
class MultiplicationHelper<__int64,unsigned __int64,15>;
enum CClassCache::CLSvrClassEntry::eFlags;
struct __vc_attributes::implementsAttribute;
struct BREAK_ON_STATUS_BUFFER;
struct IShellLibrary;
enum CClassCache::CWinRTLocalSvrClassEntry::eFlags;
struct _MEMORY_BASIC_INFORMATION;
struct _Wx86TIB;
struct _DISPLAY_DEVICEA;
struct ICall;
struct _PARAM_STRUCT;
enum _TAG_UNNAMED_38;
struct _RTL_STACK_CONTEXT_ENTRY;
struct _RTL_STACK_CONTEXT;
enum LoadOrFreeWhy;
struct tagPOINTER_INFO;
struct _RTL_MODULE_BASIC_INFO;
struct _WOW64_DESCRIPTOR_TABLE_ENTRY;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;
union _MCI_ADDR;
enum _TAG_UNNAMED_39;
struct _CTL_FIND_SUBJECT_PARA;
struct _DISPLAY_DEVICEW;
enum _TAG_UNNAMED_40;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> const >;
enum EHandleState;
struct IThumbnailExtractor;
enum ComCallMarshalingLocality;
struct _SYSTEM_PROCESSOR_INFORMATION;
struct tWAVEFORMATEX;
enum ComCallMarshalingDirection;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IWeakReference,Microsoft::WRL::Details::Nil>,0,0>;
enum tagPGALLOCATORFLAGS;
struct IProcessLock;
struct _JOBOBJECT_JOBSET_INFORMATION;
struct _COVERAGE_MODULE_REQUEST;
struct _COVERAGE_MODULES;
enum _operators;
enum AsyncStatus;
struct _OPEN_PRINTER_PROPS_INFOA;
enum _tagEXPR_TOKEN;
struct __vc_attributes::atl::request_handlerAttribute;
enum CallerLocalityIndicator;
struct IDisconnectSink;
struct _FILE_FS_LABEL_INFORMATION;
struct _VIDEOPARAMETERS;
enum CALLFRAME_NULL;
struct tagTTPOLYGONHEADER;
enum CALLFRAME_FREE;
struct _RTL_UNLOAD_EVENT_TRACE;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >::is_pointer<Windows::Rtl::IRtlWOFOStream *>;
enum _TAG_UNNAMED_41;
struct _OSVERSIONINFOEXW;
struct tagWAVEINCAPS2W;
enum _TAG_UNNAMED_42;
enum FORMAT_CHARACTER;
struct _DISCDLGSTRUCTW;
struct _DRAGINFOW;
struct _DEVICE_SEEK_PENALTY_DESCRIPTOR;
enum _TAG_UNNAMED_43;
struct IInternetSecurityMgrSite;
struct _RTL_HANDLE_TABLE;
enum __MIDL_ICallFrame_0003;
struct _CMC_TAGGED_REQUEST;
struct _RTL_TRACE_BLOCK;
struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT;
enum ClassRegistration::SERVER_TYPE;
enum CALLFRAME_WALK;
struct _BOOT_ENTROPY_SOURCE_NT_RESULT;
struct _SD_QUERY_STATS_INPUT;
struct tagMCI_SAVE_PARMSW;
enum tagSERVERCALLEX;
struct ICodeInstall;
enum DISPLAYSETTINGEVENTTYPE;
struct _RPC_BINDING_HANDLE_SECURITY_V1_W;
enum CHARM_WINDOW_VISIBILITY_BEHAVIOR;
enum TRAYORIENTATION;
enum SYNCMGR_HANDLER_TYPE;
enum SHELL_BROWSER_FRAME_SIZE_POSITION;
struct tagTEXTMETRICW;
struct _PROPSHEETHEADERA_V2;
struct __midl_frag697_t;
struct ISynchronize;
struct tagCustomHeader;
class ActivationProperties;
struct _PROCESSOR_POWER_POLICY;
struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA;
struct _MEMORY_FRAME_INFORMATION;
struct _FILEOFFSET_INFORMATION;
struct _PAGEDIR_INFORMATION;
struct _UNIQUE_PROCESS_INFORMATION;
struct _MMPFN_IDENTITY;
struct _MM_ETW_PAGE_INFO;
union _MM_ETW_PAGE_EXTRA_INFO;
struct _MM_ETW_PAGE_INFO_EX;
struct _MM_ETW_WORKING_SET_PFN_RUNDOWN;
enum FLYOUTMENU_SETTING;
struct _KEY_HANDLE_TAGS_INFORMATION;
enum IMM_APP_CHANGED;
class CSCMergedEnum<IEnumGUID,_GUID>;
class CItemMoniker;
struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT;
struct _NDR64_SIMPLE_REGION_FORMAT;
struct _NDR64_EMBEDDED_COMPLEX_FORMAT;
struct _NDR64_SIMPLE_MEMBER_FORMAT;
struct __midl_frag103_t;
struct _IMAGEHLP_SYMBOLW64;
struct _IMAGEHLP_SYMBOLW64_PACKAGE;
struct tagEMRSETDIBITSTODEVICE;
enum OPERATION_MODE;
enum SYNCMGR_PRESENTER_NEXT_STEP;
struct ISoftDistExt;
struct _FILE_NAMES_INFORMATION;
struct _CRYPTNET_URL_CACHE_FLUSH_INFO;
enum EDGEUI_COMPONENT;
struct _CERT_LOGOTYPE_DATA;
union _CPU_INFORMATION;
struct _MINIDUMP_SYSTEM_INFO;
enum TASK_FLOW_ID;
struct _CMSG_KEY_TRANS_ENCRYPT_INFO;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;
struct _CRYPT_CREDENTIALS;
enum GUTTER_LOCATION;
struct IReplaceClassInfo;
struct _SAFER_IDENTIFICATION_HEADER;
struct _SAFER_PATHNAME_IDENTIFICATION;
enum _tagSHARE_EVENT;
struct _MEMORY_WORKING_SET_INFORMATION;
class Microsoft::WRL::Wrappers::Semaphore;
enum IMMERSIVE_APPLICATION_GET_WINDOWS_FILTER;
struct tagWTSSESSION_NOTIFICATION;
class MIDEntry;
enum LINESCROLLERVALUE;
struct _RTL_BITMAP_RUN;
struct _SYSDBG_MSR;
class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<14>,0,0,0>;
enum SELECTIONMANAGERVALUE;
enum _SHARE_ITEM_TYPE;
struct _NDR64_ARRAY_FLAGS;
struct _NDR64_CONF_ARRAY_HEADER_FORMAT;
struct _NDR64_POINTER_REPEAT_FLAGS;
struct _NDR64_REPEAT_FORMAT;
struct _NDR64_ARRAY_ELEMENT_INFO;
struct __midl_frag85_t;
struct _FULL_PTR_XLAT_TABLES;
enum SHARING_MENU_PRESENTATION_STATE;
struct _TIMER_SET_COALESCABLE_TIMER_INFO;
struct _RPC_SECURITY_QOS_V2_W;
enum IMM_APP_ARRANGEMENT;
struct IWeakReference;
struct _MEMORY_BASIC_INFORMATION32;
enum tagTASKTYPE;
struct _SERVICE_FAILURE_ACTIONSW;
enum PLM_PACKAGE_STATE;
struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA;
struct Windows::Rtl::IRtlFormattableObject;
struct IGetProcessInfoInternal;
struct _PLUGPLAY_CONTROL_INSTALL_DATA;
struct _PRINTER_INFO_2A;
enum IMM_SYSTEM_MODE;
enum SYNC_STREAM_COMPLETION_MODE;
struct _FILE_SET_DEFECT_MGMT_BUFFER;
struct _SYSTEM_CALL_TIME_INFORMATION;
struct tagRGBTRIPLE;
struct IMAGE_AUX_SYMBOL_TOKEN_DEF;
union _IMAGE_AUX_SYMBOL_EX;
struct NCRYPT_ALLOC_PARA;
enum CONFLICT_FILTER;
struct IScmReplyInfo;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>;
struct _JOBOBJECT_WAKE_INFORMATION;
struct _DISK_HISTOGRAM;
struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT;
struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE;
enum IMM_APP_LOCATION;
enum tagPROPCTL_FLAGS;
struct _CONTEXT_EX;
struct IOleContainer;
struct IFileLockBytes;
struct _STORAGE_PREDICT_FAILURE;
enum IMMERSIVE_HOT_KEY_ID;
struct tagTOUCH_HIT_TESTING_INPUT;
struct KEY_PID_ARRAY;
enum tagUAEVENT;
struct _PROCESSOR_IDLE_STATES;
enum tagINTERVAL_LIMIT_KIND;
struct CO_MTA_USAGE_COOKIE__;
struct _SYSTEM_POOLTAG;
struct _SYSTEM_POOLTAG_INFORMATION;
struct _GRADIENT_TRIANGLE;
struct in_addr;
struct ip_mreq;
enum IMMAPP_SETTHUMBNAIL_PREVIEW_STATE;
struct _PS_CPU_QUOTA_QUERY_ENTRY;
struct _CERT_TRUST_STATUS;
struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA;
enum SYNCMGR_EVENT_LEVEL;
struct IOleInPlaceObject;
enum tagSTRUCTURED_QUERY_PARSE_ERROR;
struct _FILE_IS_REMOTE_DEVICE_INFORMATION;
struct SUUIDHashNode;
struct SOIDRegistration;
class CRefCache;
class IMessageParam;
struct tagAXESLISTA;
struct tagENUMTEXTMETRICA;
struct OPENCARDNAMEW;
enum tagLC_ITEM_SET_ORDER;
struct IChannelHook;
struct __midl_frag66_t;
enum AWSTYPE;
struct IPipeLong;
struct _XMIT_ROUTINE_QUINTUPLE;
enum tagBPASCODE;
struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION;
struct _FILE_ID_128;
struct _FILE_ID_EXTD_DIR_INFO;
struct _CERT_CHAIN_ELEMENT;
enum TRYHARDERSCOPES;
struct HRAWINPUT__;
struct IWaitMultiple;
enum EDGEUI_CORNER;
enum _TAG_UNNAMED_44;
struct _RTL_VERIFIER_ALL_INFORMATION;
class CRtlSmartUcsEncoderTraits<_LUNICODE_STRING>;
enum DESTLISTTYPE;
struct _PROPSHEETHEADERW_V2;
struct _DSA;
enum IMMERSIVELAUNCHERCONTROL;
struct _MINIDUMP_EXCEPTION_INFORMATION64;
struct _SYSTEM_PROCESSOR_IDLE_INFORMATION;
struct tagBIND_OPTS;
enum tagLC_ITEM_SET_TYPE;
class CBaseCall;
enum SEARCHPANE_COUNT_TASK_TYPE;
enum GRID_PRESENTATION_MODE;
struct IInstantiationInfo;
struct tagPROPERTY_INFORMATION;
enum COMMAND_SET;
enum _WOW64_SHARED_INFORMATION;
struct IRpcStubBufferVtbl;
enum TOUCHVIEW_SELECTION_MODE;
struct _FILE_LEVEL_TRIM_RANGE;
struct _FILE_LEVEL_TRIM;
struct _SYSTEM_VA_LIST_INFORMATION;
enum tagVIEWSETTINGACTION;
enum IMMERSIVELAUNCHEREVENTNOTIFICATION;
enum tagQUERY_PARSER_MANAGER_OPTION;
struct _IO_RESOURCE_REQUIREMENTS_LIST;
enum IMMERSIVELAUNCHERSCENARIONOTIFICATION;
struct tagDCOM_ENDPOINT;
struct _BCRYPT_OAEP_PADDING_INFO;
struct tagOFNW;
enum CASE_REQUIREMENT;
struct __vc_attributes::propgetAttribute;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL;
struct _JOB_INFO_2W;
enum GUTTER_SLIDE_LOCATION;
struct __vc_attributes::coclassAttribute;
struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION;
struct tagSECURITYBINDING;
struct SNameHashNode;
enum ALREADYSTARTEDACTION;
struct ITimeAndNoticeControl;
struct _FILE_STANDARD_INFO;
struct _RTL_UMS_SCHEDULER_STARTUP_INFO;
enum USER_TILE_TYPE;
struct _MUILANGINFO;
struct _TAPE_GET_MEDIA_PARAMETERS;
struct tagCSPLATFORM;
struct tagQUERYCONTEXT;
enum IMMERSIVELAUNCHERDISMISSMETHOD;
enum tagSTRUCTURED_QUERY_MULTIOPTION;
struct HMETAFILE__;
struct tagTRACKMOUSEEVENT;
struct _TAPE_GET_STATISTICS;
enum TEMPORARY_APP_VISUAL_TYPE;
struct __vc_attributes::max_isAttribute;
enum IMMERSIVELAUNCHERSHOWMETHOD;
struct tagCURSORSHAPE;
enum VIRTUALIZEDSELECTIONARRAYVALUE;
struct _CERT_STORE_PROV_FIND_INFO;
enum DBSORTENUM;
enum RESOLUTION_TYPE;
struct __vc_attributes::objectAttribute;
enum APPCRUSHER_INPUT;
struct __vc_attributes::propputAttribute;
struct tagEMRSETICMPROFILE;
struct CPageHolderTemplate;
struct _PROPSHEETPAGEW;
class CPageHolder;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>::COperatorAmpersandReturnType;
enum DBASYNCHPHASEENUM;
class CStdClassFactory;
enum ITEMSVIEWSPYVALUE;
enum FLYOUT_PLACEMENT;
struct tagCTXVERSION;
struct IComCatalogInternal;
struct _TAPE_PREPARE;
class CProcessExtensionTbl;
enum SHARE_MODE;
enum tagSTRUCTURED_QUERY_SINGLE_OPTION;
struct __vc_attributes::usesgetlasterrorAttribute;
union _IMAGE_AUX_SYMBOL;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>::COperatorAmpersandReturnType;
enum tagDBBOOKMARK;
struct tagRPC_CALL_ATTRIBUTES_V2_W;
struct IBindCtx;
enum __MIDL___MIDL_itf_shpriv_0000_0798_0001;
struct _RPC_TRANSFER_SYNTAX;
struct __midl_frag276_t;
enum __enative_startup_state;
struct _CAT_MEMBERINFO;
enum SECURELOCKCODE;
struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION;
enum tagSTRUCTURED_QUERY_SYNTAX;
struct _FLAG_STGMEDIUM;
enum APPWINDOW_TRANSITION_TYPE;
struct _CMS_DH_KEY_INFO;
enum CONFIRMATIONRESPONSE;
class CUUIDHashTable;
struct tagMULTIKEYHELPA;
struct _NON_PAGED_DEBUG_INFO;
struct _wfinddata64_t;
enum DBEVENTPHASEENUM;
struct tagPDEXW;
enum DROP_FEEDBACK_TYPE;
struct __vc_attributes::idl_quoteAttribute;
enum IMMERSIVE_APPLICATION_QUERY_SERVICE_OPTION;
enum LoadOrFreeWhat;
struct _OCSP_CERT_ID;
struct _OCSP_REQUEST_ENTRY;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::CloakedIid<IMarshal>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::CloakedIid<IAgileObject>,Microsoft::WRL::Details::Nil> >,1,0>;
enum VIEW_SETTING_ID;
enum tagSM_KEYBOARDNAVIGATE;
struct _CERT_EXTENSIONS;
struct _KTMOBJECT_CURSOR;
struct MIPID;
enum RAW_INPUT_MOUSE_BUTTON;
struct tagORPC_EXTENT;
enum tagCS_COLUMN_WIDTH_TYPE;
struct __vc_attributes::uuidAttribute;
struct IInternetThreadSwitch;
struct __midl_frag307_t;
struct _CERT_OTHER_NAME;
struct _HARDWARE_COUNTER_DATA;
enum tagLC_POINT_TYPE;
enum FILETYPEATTRIBUTEFLAGS;
enum HOSTED_APP_CHANGED;
struct __vc_attributes::readonlyAttribute;
struct _FILE_COMPLETION_INFORMATION;
struct _wireVARIANT;
enum ELEMENTSPYVALUE;
enum IMMERSIVE_BACKSTACK_MODE;
struct IXMLDOMNotation;
struct _JOB_SET_ARRAY;
enum tagITEM_CHANGE_TYPE;
struct _CERT_POLICIES_INFO;
struct IContinue;
struct _PRINTPROCESSOR_INFO_1W;
enum IMM_APP_ARRANGEMENT_TYPE;
struct __vc_attributes::atl::requires_categoryAttribute;
struct _FILE_PREFETCH;
enum LAST_COPYITEM_ERROR_TYPE;
struct __vc_attributes::atl::db_sourceAttribute;
struct _CMC_ADD_ATTRIBUTES_INFO;
struct _CRYPT_TIMESTAMP_CONTEXT;
enum SYNCMGR_PROGRESS_STATUS;
struct tagENUMUILANG;
enum _TASKDIALOG_FLAGS;
enum STREAM_REFERENCE_TYPE;
struct SCARD_READERSTATEA;
enum GETPROPERTYSTOREFLAGS;
struct __vc_attributes::atl::implements_categoryAttribute;
enum SEARCH_TYPEAHEAD_ITEM_TYPE;
struct _ImageArchitectureEntry;
struct _CHANGER_ELEMENT_LIST;
struct _CHANGER_INITIALIZE_ELEMENT_STATUS;
enum tagCS_COLUMN_SET;
enum SWITCH_LOCATION;
struct __vc_attributes::atl::com_interface_entryAttribute;
struct _EISA_MEMORY_TYPE;
enum tagSET_COLUMNS_NOTIFY_OPTIONS;
struct __vc_attributes::atl::perf_objectAttribute;
enum MESSAGE_HANDLER_MESSAGE_TYPE;
enum SYNCMGR_RESOLUTION_FEEDBACK;
class ComVerifierSettings;
struct HMAPKEY__;
enum GET_PROPERTY_STORE_TYPE;
enum ELEVATION_STATE;
struct __vc_attributes::atl::soap_handlerAttribute;
struct tagACCESSTIMEOUT;
struct tagRAWINPUTHEADER;
struct IInternetProtocolInfo;
struct ISequentialStream;
enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001;
struct _CRYPT_X942_OTHER_INFO;
struct _PORT_INFO_1A;
enum SYNCMGR_PRESENTER_CHOICE;
enum GETSORTCOLUMN;
struct PPM_THERMAL_POLICY_EVENT;
struct _CERT_CHAIN_POLICY_PARA;
enum _BACKGROUND_TASK_CAPABILITY;
enum tagLC_SELECTION_MODE;
struct _SERVICE_STATUS;
struct _ENUM_SERVICE_STATUSW;
enum SHELLSEARCHCOMMAND;
struct tagPOINTER_TOUCH_INFO;
struct _CERT_CREATE_CONTEXT_PARA;
struct _ENUM_SERVICE_STATUSA;
enum OPERATION_INTERRUPT_RESPONSE_SINGLE;
struct __vc_attributes::atl::db_accessorAttribute;
struct tagLOGPEN;
struct tagEMRCREATEPEN;
class Windows::Rtl::AutoTxnHandle;
struct _PROCESS_HANDLE_TRACING_ENTRY;
enum tagENUMVIEWPROPFLAG;
struct tagMIXERCAPSA;
struct CaseMapping;
struct Microsoft::WRL::RuntimeClassFlags<4>;
enum _IMMERSIVE_WER_CONSENT;
enum tagDESTCATTYPE;
enum EDGEGESTURE_INVOCATION_KIND;
struct _FILE_LINK_INFORMATION;
enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_DELIVERY_TYPE;
class CClassCache::CLSvrClassEntry;
struct IClassActivator;
struct _PROCESS_DISK_COUNTERS;
struct _SYSTEM_PROCESS_INFORMATION_EXTENSION;
struct __midl_frag1814_t;
struct _TEB_ACTIVE_FRAME_CONTEXT;
enum SYNCMGR_UPDATE_REASON;
struct _FILE_RENAME_INFO;
enum tagDISPLAY_SUPPORTED_ORIENTATIONS;
struct lconv;
struct _IMAGE_OPTIONAL_HEADER;
class CarefulBufferReader;
enum IMMERSIVE_MONITOR_MOVE_DIRECTION;
struct _DISK_GEOMETRY;
struct _DISK_GEOMETRY_EX;
struct _BIN_COUNT;
enum _PERSIST_SPROPSTORE_FLAGS_PRIV;
struct __vc_attributes::helper_attributes::requires_valueAttribute;
struct _PRINTER_INFO_5W;
enum tagRECYCLEBIN_TYPE;
struct __vc_attributes::includeAttribute;
struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS;
struct _ATOM_BASIC_INFORMATION;
class CFillLockBytes;
enum SWITCH_DIRECTION;
struct HINSTANCE__;
struct tagHW_PROFILE_INFOW;
enum SEARCHTEXTTYPE;
enum SHARING_MENU_SHARE_STATE;
struct __vc_attributes::ptrAttribute;
struct _PLUGPLAY_CONTROL_CONFLICT_LIST;
struct _PORT_DATA_ENTRY;
struct _SE_AUDIT_INFO;
enum SYNCMGR_CONFLICT_ITEM_TYPE;
struct _SYSDBG_IO_SPACE;
struct tagPAINTSTRUCT;
class CBaseStorageVariant;
enum SHELL_SEARCH_BAND_SEARCH_STATE;
struct __vc_attributes::helper_attributes::process_earlyAttribute;
class Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;
enum GUTTER_SLIDE_DIRECTION;
struct __vc_attributes::helper_attributes::as_stringAttribute;
struct _OSVERSIONINFOW;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600;
struct tagRAWKEYBOARD;
enum tagPropPageOnApply;
class Windows::Internal::String;
enum tagQueryUpdateAction;
struct _CERT_X942_DH_VALIDATION_PARAMS;
enum tagUISCB_FLAGS;
struct __vc_attributes::helper_attributes::notify_atlprovAttribute;
struct _SYSTEM_POOL_ENTRY;
struct _MODULE_TYPE_INFO;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;
struct HWND__;
struct _tagCODEBASEHOLD;
enum SWITCH_WINDOW_TYPE;
struct _CRYPT_3DES_KEY_STATE;
struct tagSOLE_AUTHENTICATION_SERVICE;
enum TERMINATE_DOCUMENT;
enum _SQM_TYPE;
struct _DRIVER_INFO_6W;
struct _DWORD_BLOB;
enum Ole32SQMFlags;
class CMarshalImplPStream;
struct ICallingProcessInfo;
struct tagWAVEOUTCAPSA;
struct _CRYPT_PROVIDERS;
struct tagCBTACTIVATESTRUCT;
struct _MONITOR_INFO_2W;
enum OLE_NOTIFICATION;
struct __vc_attributes::helper_attributes::repeatableAttribute;
enum CNVTYP;
struct _SYSTEM_WATCHDOG_TIMER_INFORMATION;
struct _PERF_DATA_BLOCK;
struct _QUERY_SERVICE_CONFIGW;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<14>,Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::Nil>,0,0>;
enum CHK;
struct _SYSDBG_TRIAGE_DUMP;
struct _SYSTEM_PROCESS_INFORMATION;
struct IClassFactory;
enum ProcessToken::UserHiveOkState;
class CObjServer;
enum FormatMatchFlag;
enum CDragDefaultCursors::CURSOR_ID;
class LargeIntRegMultiply<unsigned __int64,__int64>;
struct _CRYPT_ENCODE_PARA;
struct tagRPC_ERROR_ENUM_HANDLE;
enum CDragDefaultCursors::SCROLL_TYPE;
struct tagACTCTXW;
struct tagMONCBSTRUCT;
enum TXTTYPE;
struct _UNWIND_HISTORY_TABLE_ENTRY;
struct tagRemHGLOBAL;
struct _SYSTEM_ALARM_OBJECT_ACE;
enum ios::io_state;
struct __vc_attributes::first_isAttribute;
enum _TAG_UNNAMED_45;
enum ProcessToken::AppContainerState;
struct IXMLDOMComment;
enum ios::open_mode;
union _GDI_NONREMOTE::__MIDL_IWinTypes_0002;
enum AdditionState;
struct IInternetPriority;
class CBasedILockBytesPtrPtr;
enum ios::seek_dir;
struct __vc_attributes::uniqueAttribute;
enum COleCache::GetExtent::__l2::tagCacheType;
struct __vc_attributes::sourceAttribute;
struct IStandardActivator;
enum _TAG_UNNAMED_46;
struct _RTL_DYNAMIC_HASH_TABLE_ENTRY;
struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR;
struct tagBITMAPCOREHEADER;
enum CNFFMappedStream::enumCREATE_NEW_UPDATE_STREAM;
enum tagCLIPWINDOWFLAGS;
struct tagTLIBATTR;
enum tagCLIPWNDFLAGS;
struct __vc_attributes::customAttribute;
struct _SERVICE_STATUS_PROCESS;
struct _ENUM_SERVICE_STATUS_PROCESSA;
enum _TAG_UNNAMED_47;
struct _PROCESS_DEVICEMAP_INFORMATION;
enum tagGETCLSIDFLAGS;
enum AbsMethod;
struct _IO_ERROR_LOG_PACKET;
class IMappedStream;
enum SHELL_LINK_DATA_FLAGS;
struct _BCRYPT_ALGORITHM_IDENTIFIER;
struct _CRYPT_PSOURCE_ALGORITHM;
struct _CRYPT_RSAES_OAEP_PARAMETERS;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>;
enum KNOWN_FOLDER_FLAG;
struct __vc_attributes::includelibAttribute;
class Windows::AutoPointerBase<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;
enum AsycImageDataMembers;
struct _TRANSACTION_NOTIFICATION;
struct tagEMRFILLRGN;
struct _PROCESS_HANDLE_TRACING_ENABLE;
enum RO_ERROR_REPORTING_FLAGS;
enum _TAG_UNNAMED_48;
struct IRemUnknown2;
struct IViewObjectEx;
enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags;
struct KnownClsidAndScope;
union _MCI_STATS;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CBoolFrame>;
enum PLM_TASKCOMPLETION_CATEGORY_FLAGS;
struct IPersistStorage;
struct Windows::Rtl::IRtlUtf16LEStringBuilder;
enum ComparisonMethod;
enum WINDOWCOMPOSITIONATTRIB;
struct _stat32i64;
struct tagGCP_RESULTSA;
struct ENTRY;
enum IMMERSIVELAUNCHERSCENARIO;
class CVerifierTlsData;
enum tagDHFlags;
struct _TRANSACTION_PROPERTIES_INFORMATION;
enum MACPICTFAILUREREASONS;
enum ELEVATION_REASON;
enum tagEMFWRITETYPE;
class CTrackingCompositeMoniker;
class CCompositeMoniker;
struct HKL__;
class CStreamChunkList;
struct IComProcessInfo2;
struct IActivationProperties;
enum SubtractionState;
struct _NDR64_BIND_CONTEXT;
struct _NDR64_BIND_AND_NOTIFY_EXTENSION;
struct __midl_frag96_t;
enum _TAG_UNNAMED_49;
enum ProcessToken::SysAppIdState;
struct _PEBS_DS_SAVE_AREA;
enum _TAG_UNNAMED_50;
enum _TAG_UNNAMED_51;
class Windows::Rtl::AutoToken;
enum MultiplicationState;
struct pvalueA;
struct Windows::Rtl::IRtlWOUCSStream;
enum DivisionState;
struct IBlockingLock;
class XLOCK;
class OPAQUE_HANDLE<1>;
struct XSLOCK::OWNERENTRY;
class EVENT;
class SEMAPHORE;
class XSLOCK;
class CListHeader;
class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>;
enum SafeIntError;
struct _PROCESS_WINDOW_INFORMATION;
enum _MSI_ACTION;
struct _TOKEN_PRIMARY_GROUP;
enum COLUMN_VISIBILITY;
struct _PO_WAKE_SOURCE_INFO;
enum DBPROPENUM20;
enum ISOFLAG;
enum IMMERSIVELAUNCHERMODE;
class Windows::Auto<_LUNICODE_STRING>;
enum DBPOSITIONFLAGSENUM;
enum DBKINDENUM;
struct tagENUMLOGFONTA;
struct _GP_LOG_PAGE_DESCRIPTOR;
struct _DEVICEDUMP_PUBLIC_SUBSECTION;
enum KF_CATEGORY;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>;
enum GET_PACKAGE_SENTINEL_DISPOSITION;
struct _SECURITY_DESCRIPTOR;
struct __midl_frag405_t;
struct tagXFORM;
struct tagEMRTRANSPARENTBLT;
struct _RTL_BACKOFF;
struct _FILE_QUERY_SPARING_BUFFER;
union CMapKeyToValue::CKeyWrap;
struct _FP_64;
struct _STORAGE_ALLOCATE_BC_STREAM_INPUT;
struct _MINIDUMP_HANDLE_OBJECT_INFORMATION;
struct tagMOUSEKEYS;
struct _SERVICE_PRESHUTDOWN_INFO;
struct _MINIDUMP_MISC_INFO_4;
struct _OSVERSIONINFOEX2A;
struct _WRITE_USN_REASON_INPUT;
struct _CM_DISK_GEOMETRY_DEVICE_DATA;
struct _PLUGPLAY_CONTROL_CONFLICT_DATA;
struct _FILE_OBJECTID_INFORMATION;
struct tagTouchPredictionParameters;
class CPIDHashTable;
struct tagCOPYDATASTRUCT;
struct _TOKEN_SOURCE;
struct _TOKEN_CONTROL;
struct tagPANOSE;
struct _OUTLINETEXTMETRICA;
struct _NDR_CS_ROUTINES;
struct tagEXTLOGPEN32;
struct tagEMREXTCREATEPEN;
struct tagMCI_SEQ_SET_PARMS;
struct _CM_PARTIAL_RESOURCE_DESCRIPTOR;
struct _CM_PARTIAL_RESOURCE_LIST;
struct _CM_FULL_RESOURCE_DESCRIPTOR;
struct _CM_RESOURCE_LIST;
struct _CRYPT_INTERFACE_REG;
class Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *>;
struct _TOKEN_GROUPS;
struct tagMIDIINCAPS2A;
struct _tagDdeClassInfo;
struct tagINPUT_MESSAGE_SOURCE;
class Windows::Rtl::CStringTraitsBase;
struct _CERT_PHYSICAL_STORE_INFO;
union _UNWIND_CODE;
struct _PRINTER_NOTIFY_INFO_DATA;
struct _PRINTER_NOTIFY_INFO;
struct _DRIVER_INFO_3W;
class CPIDTable;
struct _PACKAGE_INFO_REFERENCE;
struct _FILE_FULL_EA_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION_GPT;
union _FOUR_PART_VERSION;
struct _RTL_STACK_TRACE_DATABASE_CREATE;
struct _CRYPT_URL_ARRAY;
struct ANON_OBJECT_HEADER;
struct _PROCESS_WS_WATCH_INFORMATION;
struct _PROCESS_WS_WATCH_INFORMATION_EX;
class CDbgGuidStr;
struct tagEXTLOGFONTW;
struct tagEMREXTCREATEFONTINDIRECTW;
struct _CERT_PAIR;
struct _CM_MONITOR_DEVICE_DATA;
struct _PROCESS_INFORMATION;
struct USN_RECORD_V2;
struct _STORAGE_MINIPORT_DESCRIPTOR;
struct AsyncIUnknown;
struct _CROSS_CERT_DIST_POINTS_INFO;
struct tagPSDA;
struct ISupportErrorInfo;
struct _SYSTEM_DEVICE_DATA_INFORMATION;
struct _CTL_ENTRY;
class XIUnknown;
struct _CERT_SIMPLE_CHAIN;
struct _EFS_KEY_INFO;
struct IComObjIdentity;
struct _SYSTEM_LEGACY_DRIVER_INFORMATION;
struct _SERVICE_DESCRIPTIONW;
union _userHMETAFILE::__MIDL_IWinTypes_0004;
struct _userHMETAFILE;
struct IDebugStream;
struct _APPCATEGORYINFOLIST;
struct _PORT_VIEW;
struct _PROVIDOR_INFO_1A;
struct _CERT_LOGOTYPE_INFO;
struct _CERT_OTHER_LOGOTYPE_INFO;
struct _M128A;
struct _XSAVE_FORMAT;
struct _CONTEXT;
struct _GLOBAL_SHARED_CRITICAL_SECTION;
struct IMallocSpy;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W;
struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
class Windows::Rtl::CRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT;
struct _CMSG_SIGNED_ENCODE_INFO;
struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO;
struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT;
struct _ENCRYPTED_FILE_METADATA_SIGNATURE;
struct _CRYPT_DECODE_PARA;
struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY;
class Windows::Auto<Windows::Rtl::IRtlFormattableInterface *>;
struct IInternetSecurityManagerEx2;
struct _remoteMETAFILEPICT;
struct _FILE_COMPRESSION_INFORMATION;
struct tagEMRSCALEVIEWPORTEXTEX;
struct _RTL_CRITICAL_SECTION64;
class Windows::AutoPODBase<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;
struct _SYSTEM_SESSION_BIGPOOL_INFORMATION;
struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO;
struct IEnumOLEVERB;
struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION;
struct _FORMAT_EX_PARAMETERS;
struct _PROCESS_PRIORITY_CLASS;
class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>;
struct _DOC_INFO_1A;
struct IInternetZoneManager;
struct tagMCI_SET_PARMS;
struct tagRemHMETAFILEPICT;
struct IUriBuilderFactory;
struct tagRAWINPUTDEVICE;
struct _DOC_INFO_1W;
struct _FILE_ALIGNMENT_INFO;
struct _SE_ACCESS_REPLY;
struct _MINIDUMP_THREAD_INFO_LIST;
struct tagEMRSTRETCHBLT;
struct _nlsversioninfoex;
struct HSTRING_HEADER;
class Microsoft::WRL::Wrappers::HStringReference;
struct tagDEBUGHOOKINFO;
struct _TXFS_TRANSACTION_ACTIVE_INFO;
struct _ACCESS_REASONS;
struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA;
struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY;
struct IPrivActivationContextInfo;
struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION;
struct _CREATE_DISK;
struct __vc_attributes::emitidlAttribute;
struct _ACCESS_ALLOWED_ACE;
struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY;
struct _STORAGE_EVENT_NOTIFICATION;
struct tagTOGGLEKEYS;
struct _CRYPT_TIMESTAMP_REQUEST;
struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION;
struct _WIN32_FIND_STREAM_DATA;
struct _TOKEN_PRIVILEGES;
struct HRGN__;
struct _FILE_FS_FULL_SIZE_INFORMATION;
struct _currencyfmtW;
struct _CERT_INFO;
struct _CERT_EXTENSION;
struct tagEVENTMSG;
struct _FILE_MAKE_COMPATIBLE_BUFFER;
struct _MEMORY_WORKING_SET_EX_BLOCK;
struct tagMCI_LOAD_PARMSW;
struct _SHCREATEPROCESSINFOW;
class BUCL::CByteAllocator;
struct _RTL_BARRIER;
class BUCL::CDequeBase;
struct _CERT_ECC_SIGNATURE;
struct tagEMRPLGBLT;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >;
struct linger;
struct _CRYPT_ATTRIBUTE;
struct _FILE_FS_DEVICE_INFORMATION;
struct tagIMECHARPOSITION;
struct _STORAGE_OFFLOAD_TOKEN;
struct _UNWIND_INFO;
struct _MINIDUMP_UNLOADED_MODULE;
struct _PROCESS_STACK_ALLOCATION_INFORMATION;
struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX;
struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct IAdviseSinkEx;
struct IComCatalog2Internal;
struct IServerSecurity;
struct _SYSTEM_PREFETCH_PATCH_INFORMATION;
struct _FILE_GET_QUOTA_INFORMATION;
struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA;
struct __midl_frag92_t;
struct _WNF_STATE_NAME;
struct _CRYPT_TRUST_REG_ENTRY;
struct _CRYPT_REGISTER_ACTIONID;
struct IPropertyBag2;
struct _FP_80;
struct _FP_128;
struct SYSTEM_BATTERY_STATE;
struct tagSOAP_ACTIVATION_INFO;
struct tagRAWHID;
struct _FILE_FS_VOLUME_INFORMATION;
struct _CAT_NAMEVALUE;
struct IWinRTApplicationCatalogInternal;
struct IPropertyPage;
struct _EFI_DRIVER_ENTRY;
struct _EFI_DRIVER_ENTRY_LIST;
struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO;
struct _DCB;
struct _COMMCONFIG;
struct tagBinaryParam;
struct tagRPC_EE_INFO_PARAM;
struct BSMINFO;
struct _DISK_PARTITION_INFO;
struct IOleUndoManager;
struct _SERVICE_FAILURE_ACTIONS_FLAG;
class CAtom;
struct _wfinddata32_t;
struct tagMCI_VD_ESCAPE_PARMSW;
struct _SYSTEM_VERIFIER_ISSUE;
struct _SI_COPYFILE;
struct tagRPC_CALL_ATTRIBUTES_V1_A;
struct _CERT_QC_STATEMENT;
struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION;
struct _div_t;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> const >;
struct _CRYPT_KEY_PROV_PARAM;
struct _ACTIVATION_CONTEXT_STACK;
struct SCARD_T1_REQUEST;
struct _PROCESS_FOREGROUND_BACKGROUND;
struct _RPC_SECURITY_QOS_V5_W;
struct _VIRTUAL_STORAGE_TYPE;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY;
struct _BIDI_DATA;
struct _BIDI_RESPONSE_DATA;
struct IOleParentUndoUnit;
struct _GENERATE_NAME_CONTEXT;
struct _MINIDUMP_THREAD_INFO;
struct _REPARSE_INDEX_KEY;
struct _FILE_END_OF_FILE_INFORMATION;
struct _PROCESS_HEAP_INFORMATION;
struct _HEAP_INFORMATION;
struct _HEAP_EXTENDED_INFORMATION;
struct _FLAGGED_WORD_BLOB;
struct __midl_frag1553_t;
struct IFont;
struct tagAspectInfo;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A;
struct _WIN32_FILE_ATTRIBUTE_DATA;
struct _HEAP_REGION_INFORMATION;
struct _HEAP_RANGE_INFORMATION;
struct _HEAP_BLOCK_INFORMATION;
struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION;
struct _HEAP_INFORMATION_ITEM;
class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;
struct tagLOGBRUSH32;
struct tagEMRCREATEBRUSHINDIRECT;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnknown> >;
struct IOleInPlaceSiteWindowless;
struct _ROOT_INFO_LUID;
struct IHttpSecurity;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> >;
struct tagMCI_ANIM_STEP_PARMS;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
struct tagEMROFFSETCLIPRGN;
struct tagSCROLLINFO;
struct _SYSTEM_CALL_COUNT_INFORMATION;
struct tagAUXCAPSW;
struct __midl_frag973_t;
struct __midl_frag138_t;
struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION;
struct tagREGISTERWORDW;
struct _OBJECT_BASIC_INFORMATION;
struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION;
struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO;
struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT;
struct _MEMORYSTATUS;
struct _PLEX_READ_DATA_REQUEST;
struct IRuntimeBroker;
struct SAFER_LEVEL_HANDLE__;
struct _GLYPHMETRICS;
struct _UNWIND_HISTORY_TABLE;
struct _BOOT_ENTRY_LIST;
struct _MINIDUMP_THREAD_CALLBACK;
struct ISurrogate;
struct _KCRM_MARSHAL_HEADER;
struct _CMSG_KEY_AGREE_RECIPIENT_INFO;
struct tagPOLYTEXTA;
struct IPicture2;
struct _REQUEST_RAW_ENCRYPTED_DATA;
struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION;
struct tagMSGBOXPARAMSW;
struct tagMENUBARINFO;
struct _CERT_RDN_ATTR;
struct _SCOPE_TABLE_ARM;
struct IProcessServerInfo;
struct IPropertyPageSite;
struct _FILE_TRACKING_INFORMATION;
struct _LPC_UNREGISTER_PROCESS_MSG;
struct _RTL_SPLAY_LINKS;
struct _PREFIX_TABLE_ENTRY;
struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits;
class Microsoft::WRL::Details::RemoveIUnknownBase<IApartmentShutdown>;
struct tagMIXERCONTROLA;
struct _JOURNAL_SET_DELETE_VALUE_INFORMATION;
class Microsoft::WRL::Details::RemoveIUnknownBase<ApartmentShutdownNode>;
struct _TAPE_SET_POSITION;
struct IViewObject2;
class Microsoft::WRL::Wrappers::CriticalSection;
struct IFillLockBytes;
struct tagMETARECORD;
struct _MESSAGE_RESOURCE_ENTRY;
struct IRpcCall;
struct _SECURITY_DESCRIPTOR_RELATIVE;
struct _DRAGINFOA;
struct tagMINMAXINFO;
struct _FILE_STREAM_INFO;
struct _PROPSHEETPAGEA_V3;
struct IUri;
struct MarshalParams;
struct tagGIPEntry;
class CGIPTable;
struct _SERVICE_TABLE_ENTRYW;
struct _PROCESS_EXCEPTION_PORT;
struct IEnumString;
struct tagPICTDESC;
struct _SE_LEARNING_MODE_USER_OBJECT_DATA;
struct _FILE_MAILSLOT_QUERY_INFORMATION;
struct _ENCRYPTED_DATA_INFO;
struct _KEY_CONTROL_FLAGS_INFORMATION;
struct _CSV_CONTROL_PARAM;
struct _MUILANGUAGES;
struct __midl_frag28_t;
struct _TAPE_GET_DRIVE_PARAMETERS;
struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64;
struct IDropTarget;
class CStabilize;
struct _CERT_CHAIN_POLICY_STATUS;
struct _EVENT_BASIC_INFORMATION;
struct __midl_frag19_t;
struct _TAPE_WRITE_MARKS;
struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS;
struct IWinInetHttpInfo;
struct IComDispatchInfo;
struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA;
struct tagWNDCLASSA;
class CServerSecurity;
struct _CREATEFILE2_EXTENDED_PARAMETERS;
struct _PERF_OBJECT_TYPE;
struct _CM_SERIAL_DEVICE_DATA;
struct tagCTXCOMMONHDR;
struct tagBYVALHDR;
struct tagBYREFHDR;
struct tagCONTEXTHEADER;
struct IPropertyNotifySink;
class Microsoft::WRL::Wrappers::RoInitializeWrapper;
struct tagSTYLEBUFW;
struct _STORAGE_HOTPLUG_INFO;
struct IBindStatusCallback;
struct _CRYPT_KEY_SIGN_MESSAGE_PARA;
struct tagEMREOF;
struct _ACCESS_DENIED_CALLBACK_ACE;
struct _Wx86ThreadState;
struct _BIDI_RESPONSE_CONTAINER;
struct tagEMREXTTEXTOUTA;
struct _DISK_GROW_PARTITION;
struct _LOCALMANAGEDAPPLICATION;
struct _s__ThrowInfo;
class CCtxCall;
struct _FILE_LAYOUT_ENTRY;
struct tagEXCEPINFO;
struct _RTL_CRITICAL_SECTION_DEBUG32;
struct IXMLDOMParseError;
class Windows::Auto<void *>;
struct _MODLOAD_CVMISC;
struct _CERT_CHAIN_FIND_BY_ISSUER_PARA;
struct IXMLDOMText;
struct _CERT_GENERAL_SUBTREE;
struct _CRYPT_PRIVATE_KEY_INFO;
struct _PROCESS_HANDLE_TRACING_ENABLE_EX;
struct SIP_DISPATCH_INFO_;
struct _CMSG_CNG_CONTENT_DECRYPT_INFO;
struct _CMSG_HASHED_ENCODE_INFO;
struct AsyncIPipeDouble;
struct _TXFS_CREATE_MINIVERSION_INFO;
struct _VARIABLE_NAME;
struct _RSAPUBKEY;
union _RemotableHandle::__MIDL_IWinTypes_0009;
struct _RemotableHandle;
struct _SYSDBG_CONTROL_SPACE;
struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA;
struct _HMAC_Info;
struct _DISK_EXTENT;
struct _VOLUME_DISK_EXTENTS;
struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION;
class CNullWalker;
struct _LPC_CLIENT_DIED_MSG;
class COIDHashTable;
struct ANON_OBJECT_HEADER_V2;
struct _CLAIM_SECURITY_ATTRIBUTE_V1;
struct IRunnableObject;
struct tagMINIMIZEDMETRICS;
union _FILE_SEGMENT_ELEMENT;
struct tagEMRPOLYPOLYLINE16;
struct SIP_INDIRECT_DATA_;
struct _COMSTAT;
struct ISurrogateService;
struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE;
struct READ_USN_JOURNAL_DATA_V1;
struct _FAT_STATISTICS;
struct IMoniker;
struct tagREGISTERWORDA;
struct _JOURNAL_SET_KEY_SECURITY_INFORMATION;
struct IFontDisp;
struct tagEMRMASKBLT;
struct _CRYPT_OID_FUNC_ENTRY;
struct _AppBarData;
struct _SYSDBG_VIRTUAL;
struct __vc_attributes::outAttribute;
struct _FILE_RENAME_INFORMATION;
struct tagCREATESTRUCTW;
struct _MINIDUMP_MEMORY_DESCRIPTOR;
struct _MINIDUMP_THREAD_EX;
struct tagRID_DEVICE_INFO_MOUSE;
struct tagRID_DEVICE_INFO_KEYBOARD;
struct tagRID_DEVICE_INFO_HID;
struct tagRID_DEVICE_INFO;
struct IOleUndoUnit;
struct _FILE_LAYOUT_INFO_ENTRY;
struct _IMAGE_NT_HEADERS;
struct HMENU__;
struct _ALPC_TOKEN_ATTR;
struct _PMD;
struct _s__CatchableType;
struct _ENUM_SERVICE_STATUS_PROCESSW;
struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1;
struct __midl_frag537_t;
struct _TypeDescriptor;
struct _SERVICE_SID_INFO;
struct IClassClassicInfo;
struct __vc_attributes::displaybindAttribute;
struct _DRIVER_INFO_5A;
struct IAdviseSink2;
class CRpcOptions;
class IFinish;
struct IClassFactory2;
struct ITypeInfo2;
struct _SYSTEM_POOL_INFORMATION;
struct _STRING64;
struct tagIMEMENUITEMINFOA;
struct _MINIDUMP_TOKEN_INFO_LIST;
struct _PROPSHEETPAGEA_V2;
struct __midl_frag1289_t;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY;
struct tagEMRRESIZEPALETTE;
struct tagCHANGEFILTERSTRUCT;
struct protoent;
struct __midl_frag1353_t;
struct _CSV_NAMESPACE_INFO;
struct _RPC_SECURITY_QOS_V4_A;
struct _CMS_KEY_INFO;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >::is_pointer<Windows::Rtl::IRtlWORAStream *>;
struct _CTL_CONTEXT;
struct AsyncIAdviseSink;
struct _SYSTEM_DEVICE_INFORMATION;
struct _CTL_INFO;
struct _WIN_TRUST_SUBJECT_FILE;
class Microsoft::WRL::Details::RuntimeClassBase;
struct _IMAGEHLP_GET_TYPE_INFO_PARAMS;
struct _CTL_VERIFY_USAGE_STATUS;
struct IDataTransfer;
struct _CERT_CHAIN_CONTEXT;
struct _MINIDUMP_HANDLE_DESCRIPTOR_2;
struct _tagPROTOCOLFILTERDATA;
struct ISpecifyPropertyPages;
struct _SECURITY_SEED_AND_LENGTH;
struct IRundown;
struct _SCARD_ATRMASK;
struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION;
struct _IMAGEHLP_LINE64;
struct _CERT_TRUST_LIST_INFO;
struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO;
struct _METADC;
struct tagMULTIKEYHELPW;
struct tagRemHENHMETAFILE;
struct _TIME_DYNAMIC_ZONE_INFORMATION;
struct _CERT_REVOCATION_STATUS;
struct IGlobalInterfaceTable;
struct tagEMRFRAMERGN;
struct tagEMRCREATEMONOBRUSH;
struct tagINTERFACEDATA;
class Windows::LockGrant<_RTL_CRITICAL_SECTION>;
struct _MINIDUMP_MODULE;
struct _wireBRECORD;
class Windows::ErrorHandling::Rtl::CBaseNtStatusPointerCarryingFrame<Windows::ErrorHandling::Rtl::CBoolFrame>;
struct tagCHARSETINFO;
struct IRecordInfo;
struct IGetContextId;
struct _NDR64_CONSTANT_IID_FORMAT;
struct _TRANSACTION_ENLISTMENTS_INFORMATION;
struct _SPC_SERIALIZED_OBJECT;
struct _ais_MIDL_PROC_FORMAT_STRING;
struct tagCAUUID;
struct _CERT_POLICY_QUALIFIER_USER_NOTICE;
struct _KEY_VALUE_BASIC_INFORMATION;
struct _PO_WAKE_SOURCE_HEADER;
struct _PO_WAKE_SOURCE_DEVICE;
struct IXMLDOMCDATASection;
struct _RPC_BINDING_HANDLE_SECURITY_V1_A;
struct tagCInterfaceStubHeader;
struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE;
struct _tagADDRESS64;
struct _KDHELP64;
struct _tagSTACKFRAME_EX;
struct _TP_CALLBACK_ENVIRON_V3;
class CEnumContextProps;
struct _ENCRYPTION_CERTIFICATE_HASH;
struct IOleClientSite;
struct _SYSTEM_SCOPED_POLICY_ID_ACE;
struct _OPERATION_END_PARAMETERS;
struct _CERT_LOGOTYPE_DETAILS;
struct _CERT_LOGOTYPE_IMAGE;
struct _KEY_SET_VIRTUALIZATION_INFORMATION;
struct IErrorInfo;
struct _CSV_IS_OWNED_BY_CSVFS;
struct _NDR64_STRING_FLAGS;
struct NDR64_STRING_HEADER_FORMAT;
struct _NDR64_CONFORMANT_STRING_FORMAT;
struct _CERT_LOGOTYPE_IMAGE_INFO;
struct _SPC_STATEMENT_TYPE;
struct _CERT_LOGOTYPE_AUDIO;
class CPoint;
class CDragOperation;
class CStringHashTable;
struct _CERT_LOGOTYPE_AUDIO_INFO;
struct IUserTokenUserSoftwareClasses;
struct _CRYPT_CONTEXT_FUNCTIONS;
struct _PERF_BIN;
struct tagHW_PROFILE_INFOA;
struct _ABCFLOAT;
struct Windows::Rtl::IRtlInterface;
struct _THREAD_BASIC_INFORMATION;
struct _NT_TIB;
struct _GDI_TEB_BATCH;
struct _PROCESSOR_NUMBER;
struct _TEB;
struct _FILE_REFERENCE_RANGE;
struct tagMENUITEMINFOW;
struct WireThatPart1;
struct _PEB;
class CWorldSecurityDescriptor;
struct tagCustomPrivScmInfo;
class CBasedVectBitsPtr;
struct _INVERTED_FUNCTION_TABLE_ENTRY;
struct ICreateTypeLib;
struct _PEB_LDR_DATA;
struct _CURDIR;
struct _STRING;
struct _RTL_DRIVE_LETTER_CURDIR;
struct _RTL_USER_PROCESS_PARAMETERS;
class CMallocBased;
class SafeIUnknown;
struct RECTS;
struct WMFHEADER;
class CBaseMoniker;
class CBasedDlElementPtr;
class CDlElement;
struct _CLUSTER_RANGE;
struct _QUERY_FILE_LAYOUT_INPUT;
class CHashTable;
struct _RTL_CRITICAL_SECTION_DEBUG;
struct _HOTPATCH_HOOK_DESCRIPTOR;
struct _CRYPT_DECRYPT_MESSAGE_PARA;
struct DRVCONFIGINFOEX;
struct _PROCESS_HANDLE_TABLE_ENTRY_INFO;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >::is_pointer<Windows::Rtl::IRtlBlobProvider *>;
struct tagSOLE_AUTHENTICATION_INFO;
struct _KEY_NAME_INFORMATION;
struct _UUID_VECTOR;
struct _ASSEMBLY_STORAGE_MAP;
struct NTFS_FILE_RECORD_OUTPUT_BUFFER;
class MAP_KEY_GUID;
class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
struct IMAGE_LOAD_CONFIG_DIRECTORY32;
struct _FLS_CALLBACK_INFO;
struct _PROV_ENUMALGS;
class Windows::Auto<_LUTF8_STRING>;
class CBlockPreHeader;
class CBasedMSFPagePtrPtr;
struct IForegroundTransfer;
struct _SHNAMEMAPPINGW;
struct IComProcessInfo;
class CReadWithSourceAttributesMarshalingStreamOnBuffer;
struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME;
struct CVectBits;
class ComPsClassFactory;
struct tagActivationContextInfoData;
class ContextInfo;
struct _heapinfo;
struct IInternetProtocol;
struct _ACTIVATION_CONTEXT;
class CBaseMarshalingStreamOnBuffer;
class CBasedPerContextPtr;
struct tagOFN_NT4A;
struct _DISPATCHER_CONTEXT;
class CDfName;
class CBasedRevertablePtr;
class PRevertable;
class CTransactedTimeEntry;
union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003;
struct _OCSP_BASIC_RESPONSE_INFO;
struct _MONIKEREXTENT;
struct tagMULTI_QI;
struct tagServerInformation;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;
struct __midl_frag311_t;
struct _JIT_DEBUG_INFO;
struct _EXCEPTION_RECORD32;
struct _DRIVER_INFO_2W;
struct _UNIVERSAL_NAME_INFOA;
struct _RTL_UMS_COMPLETION_LIST;
struct _CRYPT_TIME_STAMP_REQUEST_INFO;
class CRotHintTable;
struct _CRYPT_VERIFY_MESSAGE_PARA;
struct PPM_WMI_PERF_STATE;
struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR;
struct HCONV__;
struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION;
struct HGLRC__;
class CSimpStorageOpen;
struct IXMLHttpRequest;
struct _CSV_QUERY_FILE_REVISION;
class CClassCache::CDllFnPtrMoniker;
struct _wfinddata64i32_t;
struct CMapKeyToValue::CAssoc;
struct ICancelMethodCalls;
struct CSimpStream;
struct IGetCatalogObject;
struct tagUSEROBJECTFLAGS;
struct _CMSG_SIGNER_ENCODE_INFO;
struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION;
class CSSMappedStream;
struct HENHMETAFILE__;
struct _SCRUB_DATA_INPUT;
struct _PROCESS_ACCESS_TOKEN;
struct tagCBT_CREATEWNDW;
struct _CMSG_RC4_AUX_INFO;
class CDWORDHashTable;
struct _MkInterfaceListEntry;
struct _MkInterfaceList;
struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION;
struct tagOXID_INFO;
struct _FILE_FS_DRIVER_PATH_INFORMATION;
struct ITypeLib;
union _userHENHMETAFILE::__MIDL_IWinTypes_0006;
struct _userHENHMETAFILE;
struct _RTL_RELATIVE_NAME_U;
struct _CRT_FLOAT;
struct _TXFS_ROLLFORWARD_REDO_INFORMATION;
struct IXMLDOMDocumentFragment;
struct _TXFS_WRITE_BACKUP_INFORMATION;
struct _MODEMDEVCAPS;
class CClassCache::CDllPathEntry;
struct _HEAP_BLOCK_EXTRA_INFORMATION;
struct _SYSTEM_EXTENDED_THREAD_INFORMATION;
struct tagMCI_OVLY_OPEN_PARMSW;
struct _CRYPT_TIMESTAMP_INFO;
struct _CRYPT_OBJID_TABLE;
struct _RegInputEntry;
struct RPC_ENDPOINT_TEMPLATEW;
union _PROCESS_MEMORY_ALLOCATION_MODE;
struct _DEVICE_MEDIA_INFO;
struct _CRYPT_TIMESTAMP_ACCURACY;
struct DLGITEMTEMPLATE;
struct _USER_MARSHAL_ROUTINE_QUADRUPLE;
class CPropertyStorage;
struct tagPOINTER_DEVICE_CURSOR_INFO;
struct _SCRUB_DATA_OUTPUT;
struct _CRL_DIST_POINTS_INFO;
struct IComCatalogSCM;
class CClassCache::CDllPathEntry::CFinishObject;
struct _IMAGE_VXD_HEADER;
struct _iobuf;
struct _OBJECT_ATTRIBUTES;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IUnknown,0,0>;
struct CMPGUID;
struct IRpcStubBuffer;
struct _EVENT_DESCRIPTOR;
class CoAllocator;
struct _CERT_AUTHORITY_KEY_ID_INFO;
struct _CTL_ANY_SUBJECT_INFO;
struct _CERT_SIGNED_CONTENT_INFO;
class CRpcResolver;
struct _CMC_TAGGED_ATTRIBUTE;
class CArrayFValue;
class LargeIntRegMultiply<unsigned __int64,int>;
struct _KEY_VALUE_ENTRY;
struct CMachineNamesHelper::_UNIQUEADDRS;
struct _GENERIC_MAPPING;
struct _SYSTEM_OBJECTTYPE_INFORMATION;
class CGlobalSecurity;
struct _CRYPT_PKCS8_EXPORT_PARAMS;
struct _POWER_SESSION_RIT_STATE;
struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA;
struct tagSERIALIZEDPROPERTYVALUE;
struct _DOCINFOW;
struct Windows::Rtl::IRtlUtf8StringBuilder;
struct _CRYPT_CONTEXTS;
struct tagVARIANT;
struct IClientSecurity;
class CClassCache::CLSvrClassEntry::CFinishObject;
struct _FILE_MAILSLOT_PEEK_BUFFER;
class HashGUID;
struct ICallFactory;
struct _CHANGER_READ_ELEMENT_STATUS;
struct _FINDFIRSTACTIVATIONCONTEXTSECTION;
struct ISynchronizeHandle;
struct _PACKEDEVENTINFO;
struct tagMIDIOUTCAPS2A;
struct _PLUGPLAY_CONTROL_PROPERTY_DATA;
struct _numberfmtW;
struct _MEMORY_SCRUB_INFORMATION;
struct tagRAWMOUSE;
struct tagRAWINPUT;
struct HDROP__;
struct _CM_ROM_BLOCK;
class BUCL::CIsSignedType<__int64>;
struct _SET_PURGE_FAILURE_MODE_INPUT;
struct IMultiQI;
struct CM_Power_Data_s;
struct _FILE_ATTRIBUTE_TAG_INFORMATION;
class CSafeMultiHeap;
class CHwnd;
struct tagANIMATIONINFO;
struct tagSTATSTG;
struct SExtHashNode;
struct tagSExtEntry;
struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION;
struct _CTL_FIND_USAGE_PARA;
struct _OSVERSIONINFOA;
struct _CSV_QUERY_REDIRECT_STATE;
struct WireExtentArray;
struct WireExtent;
struct WireThatPart2;
union WireThat;
struct _FILE_ID_INFORMATION;
struct tagWNDCLASSEXW;
struct _RTL_RXACT_CONTEXT;
struct _SYSTEM_BASIC_INFORMATION;
struct _COAUTHIDENTITY;
class CMonikerPtrBuf;
class CRotMonikerEnum;
struct IProgressNotify;
struct ITypeChangeEvents;
struct HMONITOR__;
struct _SD_CHANGE_MACHINE_SID_INPUT;
struct _SD_ENUM_SDS_INPUT;
struct _SD_GLOBAL_CHANGE_INPUT;
struct _KEY_WOW64_FLAGS_INFORMATION;
struct tagBITMAPCOREINFO;
class CBasedDFBasisPtr;
struct tagENUMLOGFONTEXW;
struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE;
struct _SYSTEM_ENTROPY_TIMING_INFORMATION;
struct tagWNDCLASSEXA;
struct tagEMRFILLPATH;
struct IPersistFile;
struct _FLOAT128;
struct tagCOLORADJUSTMENT;
struct tagMETAHEADER;
struct _FILE_VOLUME_NAME_INFORMATION;
struct _CRYPT_SMIME_CAPABILITIES;
struct tagEMRSETVIEWPORTORGEX;
struct _CRYPT_SMIME_CAPABILITY;
struct KNOWNFOLDER_DEFINITION;
class PMemoryAllocator;
struct _IMAGE_THUNK_DATA64;
struct _PS_MEMORY_RESERVE;
struct _SYSTEM_SET_TIME_ADJUST_INFORMATION;
struct _FILE_BASIC_INFO;
struct _SERVICE_NOTIFY_2A;
struct _FSCTL_QUERY_FAT_BPB_BUFFER;
struct _TEB_ACTIVE_FRAME_CONTEXT_EX;
class CContinue;
struct HIMCC__;
class CErrorSmAllocator;
union _userHMETAFILEPICT::__MIDL_IWinTypes_0005;
struct _FILE_PIPE_ASSIGN_EVENT_BUFFER;
struct tagDICTIONARY;
struct _SYSTEM_SYSTEM_DISK_INFORMATION;
struct _TAPE_STATISTICS;
struct _MUICCENTRY;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> const >;
struct _RDR_CALLOUT_STATE;
struct tagRemHBITMAP;
struct IWinInetHttpTimeouts;
struct PPM_WMI_PERF_STATES;
struct _TP_WORK;
struct _OFSTRUCT;
struct tagEMRELLIPSE;
struct _SLIST_ENTRY;
struct _DEVICE_FLAGS;
struct _stat64;
struct _MAT2;
class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
struct _PARTITION_INFORMATION;
struct _DRIVE_LAYOUT_INFORMATION;
struct __midl_frag1021_t;
struct _MCA_EXCEPTION;
struct __midl_frag1733_t;
struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA;
struct _PROCESS_HANDLE_INFORMATION;
struct _LOAD_ASDATA_TABLE;
struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION;
struct _SYSTEM_POWER_STATUS;
struct tagEMRNAMEDESCAPE;
struct __vc_attributes::call_asAttribute;
class InprocActpropsUnmarshaller;
struct _TOKEN_MANDATORY_LABEL;
class CBasedMSFPageTablePtr;
class CDIFat;
class CMStream;
struct _CERT_AUTHORITY_INFO_ACCESS;
struct _TXFS_LIST_TRANSACTION_LOCKED_FILES;
struct _SE_PACKAGE_CAPABILITY_INFO;
class CNFFMappedStream;
struct tagREMQIRESULT;
struct _UNIVERSAL_NAME_INFOW;
struct _WORD_BLOB;
struct _PS_CPU_QUOTA_QUERY_INFORMATION;
struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER;
class CGlobalFileStream;
struct __vc_attributes::requesteditAttribute;
struct _IMAGE_RELOCATION;
class CClassCache::CCollectable;
struct _DRIVER_VERIFIER_THUNK_PAIRS;
struct tagDDEML_MSG_HOOK_DATA;
struct tagMONMSGSTRUCT;
struct __MIDL_ILocalObjectExporter_0004;
struct tagCHOOSECOLORA;
struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION;
class CBlockHeader;
struct __NCRYPT_SUPPORTED_LENGTHS;
class OXIDEntry;
struct _JOURNAL_RENAME_KEY_INFORMATION;
struct IBindHost;
struct _OSVERSIONINFOEX2W;
struct tagEMRSETVIEWPORTEXTEX;
struct _KLDR_DATA_TABLE_ENTRY64;
struct _KLDR_DATA_TABLE_ENTRY32;
struct tagCOMBOBOXINFO;
class CSurrogateActivator;
struct _RPC_SECURITY_QOS_V2_A;
class CDirEntry;
struct _SYSTEM_VERIFIER_INFORMATION;
struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION;
struct tagJOYCAPS2W;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A;
struct _SEC_WINNT_AUTH_IDENTITY_A;
struct _CERT_KEY_USAGE_RESTRICTION_INFO;
class CBasedGlobalFileStreamPtr;
struct IXMLDOMCharacterData;
struct tagSOLE_AUTHENTICATION_LIST;
struct __vc_attributes::oleautomationAttribute;
class CHlprDialog;
class CBasedTSetMemberPtr;
struct SFreeBlock;
struct _CONNECTDLGSTRUCTW;
struct _FILE_PIPE_LOCAL_INFORMATION;
struct IStorageTest;
struct _PRIVKEYVER3;
struct __vc_attributes::atl::soap_namespaceAttribute;
struct _MUILANGLIST;
class CBasedDocFilePtr;
struct _MUIREGISTRYINFO;
struct _MUISTRINGPOOL;
struct _BCryptBuffer;
struct tagEMRSELECTOBJECT;
struct ISCMLocalActivator;
struct IWinInetCacheHints2;
struct _MUILANGCFGLIST;
struct tagPOINTER_DEVICE_PROPERTY;
struct _MUILANGCFGNODE;
class DefaultIBindStatusCallback;
class CTSSet;
class CChildInstanceList;
class CPubDocFile;
struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO;
struct _MUILANGLISTNODE;
struct _NETCONNECTINFOSTRUCT;
struct IPersistStream;
struct _FILE_STANDARD_LINK_INFORMATION;
struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;
struct _CERT_SELECT_CHAIN_PARA;
struct _RPC_BINDING_VECTOR;
struct IXMLDOMElement;
struct POWERBROADCAST_SETTING;
struct IOleInPlaceFrame;
struct _CERT_USAGE_MATCH;
struct _CERT_CHAIN_PARA;
struct tagMENUGETOBJECTINFO;
class CIDObject;
struct IWrapperInfo;
struct IMAGE_COR20_HEADER;
struct tagEXTLOGPEN;
struct tagOIDData;
struct RPC_IF_ID_VECTOR;
class Microsoft::WRL::ComPtr<IMarshal>;
struct _SERVICE_FAILURE_ACTIONSA;
struct MOVE_FILE_DATA;
struct PROCESSOR_IDLE_TIMES;
struct _tagStartParam;
struct Windows::Rtl::IRtlBlobProvider;
struct _SL_HWID_DEVICE_INFO;
struct _UNICODE_PREFIX_TABLE_ENTRY;
struct tagHIGHCONTRASTA;
struct _DRIVER_INFO_5W;
struct _SERVICE_NOTIFY_2W;
struct _FILE_ALLOCATED_RANGE_BUFFER;
struct _RASTERIZER_STATUS;
struct tagSTYLESTRUCT;
struct _FILE_LAYOUT_NAME_ENTRY;
struct _SYSTEM_SPECIAL_POOL_INFORMATION;
struct tagGESTUREINFO;
class Microsoft::WRL::ComPtr<CClipboardBroker>;
struct _RTL_PROCESS_VERIFIER_OPTIONS;
struct _FILE_DIRECTORY_INFORMATION;
struct _tagSOFTDISTINFO;
struct tagStorageLayout;
class CActivatableClassIdHashTable;
struct _BCRYPT_DSA_PARAMETER_HEADER;
struct IInternalUnknown;
struct _RTL_UMS_CONTEXT;
struct _wfinddata32i64_t;
struct _CRYPT_BLOB_ARRAY;
struct _POOLED_USAGE_AND_LIMITS;
struct _RTL_AVL_TREE;
struct ILocalSystemActivator;
struct _OBJECT_DIRECTORY_INFORMATION;
struct _ACL_REVISION_INFORMATION;
class Microsoft::WRL::Details::RemoveIUnknownBase<CClipboardBroker>;
struct _JOURNAL_CLIENT_INFORMATION;
struct IXMLDOMImplementation;
struct _BCRYPT_ECCKEY_BLOB;
struct _TP_TASK_CALLBACKS;
struct _CRYPT_SMART_CARD_ROOT_INFO;
class Windows::Internal::StringReference;
struct IActivationContextInfo;
struct _FIND_NAME_HEADER;
struct IPipeByte;
class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IWeakReference,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>;
struct _TP_CALLBACK_INSTANCE;
struct _SAFER_CODE_PROPERTIES_V1;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnTypeConst;
class CAggId;
struct IDropSourceQueryEx;
struct _TOKEN_USER_CLAIMS;
struct tagTITLEBARINFOEX;
struct _RTL_TRACE_ENUMERATE;
struct HMIDIOUT__;
struct tagMSGBOXPARAMSA;
struct _SYSTEM_AUDIT_ACE;
struct NCryptProviderName;
struct tagEMRMODIFYWORLDTRANSFORM;
struct _REMOTE_LINK_TRACKING_INFORMATION_;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;
struct __MIDL_XmitDefs_0001;
struct __vc_attributes::atl::registration_scriptAttribute;
struct tagEXTLOGFONTA;
struct _RPC_PROTSEQ_VECTORA;
struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION;
struct IComCatalog2;
struct _CORE_PRINTER_DRIVERW;
struct _SHSTOCKICONINFO;
struct _tagPROTOCOLDATA;
struct SYSTEM_POWER_CAPABILITIES;
struct _COVERAGE_SECTION_HEADER;
struct _FILE_FULL_DIR_INFORMATION;
struct _EXCEPTION_LOG;
struct _STACK_TRACE_DATABASE;
struct POWER_STATE_HANDLER;
struct _TRIPLE_LIST_ITERATOR;
class CGIPMessageParam;
struct tagARRAYDESC;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<14>,IUnknown,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct tagAXISINFOW;
struct tagAXESLISTW;
struct _CM_COMPONENT_INFORMATION;
struct _TOKEN_APPCONTAINER_INFORMATION;
struct _ICONINFOEXW;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;
struct HBITMAP__;
struct IInternetBindInfoEx;
struct _PO_WAKE_SOURCE_TIMER;
struct _PROCESS_BASIC_INFORMATION64;
struct _OBJECT_TYPE_LIST;
struct _ATOM_TABLE_INFORMATION;
struct _DISCDLGSTRUCTA;
struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits;
struct _THREAD_TLS_INFORMATION;
struct _PROCESS_TLS_INFORMATION;
struct IWinRTServerInfo;
struct _OCSP_SIGNED_REQUEST_INFO;
struct tagEMRSETTEXTCOLOR;
struct _STORAGE_PRIORITY_HINT_SUPPORT;
struct _FILE_REMOTE_PROTOCOL_INFORMATION;
struct tagMONITORINFO;
struct _TOKEN_STATISTICS;
struct IDataAdviseHolder;
struct IZoneIdentifier;
class Microsoft::WRL::Wrappers::SRWLock;
struct IXMLDOMNode;
struct _RPC_SECURITY_QOS_V3_W;
struct _VM_COUNTERS_EX;
struct _CERT_BASIC_CONSTRAINTS2_INFO;
struct IHttpNegotiate3;
struct _SYSTEM_ACPI_AUDIT_INFORMATION;
struct _CRYPTPROTECT_PROMPTSTRUCT;
struct tagEMRLINETO;
struct _stat64i32;
struct tagMDICREATESTRUCTW;
struct _XSTATE_CONTEXT;
struct PPM_IDLE_STATE_ACCOUNTING;
struct PPM_IDLE_ACCOUNTING;
class CCtxPropHashTable;
struct tagRemBRUSH;
struct _LDR_DATA_TABLE_ENTRY64;
struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM;
struct tagNEWTEXTMETRICW;
struct tagNEWTEXTMETRICEXW;
struct _CERT_LOGOTYPE_EXT_INFO;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT;
struct _INSTALLDATA;
class Windows::AutoOperatorAmpersandConstHelper<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;
class CStackBuffer;
struct _NOTIFYICONIDENTIFIER;
struct _FP_IEEE_VALUE;
struct _CRL_REVOCATION_INFO;
struct midievent_tag;
struct _IMAGE_RESOURCE_DIRECTORY_ENTRY;
struct _SYSTEM_REGISTRY_QUOTA_INFORMATION;
struct _REMOTE_REPLY_SCM_INFO;
struct IEnumFORMATETC;
struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION;
struct IMarshal;
struct tagRPC_CALL_ATTRIBUTES_V3_W;
struct _STREAM_EXTENT_ENTRY;
struct _KCRM_TRANSACTION_BLOB;
class Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits>;
struct _CM_EISA_SLOT_INFORMATION;
class Microsoft::WRL::Details::RemoveIUnknownBase<IGlobalInterfaceTable>;
struct tagIMEMENUITEMINFOW;
struct _IMAGE_OPTIONAL_HEADER64;
struct _IMAGE_NT_HEADERS64;
struct _FILE_ID_BOTH_DIR_INFO;
class Windows::Auto<Windows::Rtl::IRtlBlobProvider *>;
struct __vc_attributes::idl_moduleAttribute;
struct _CLIENT_ID64;
struct _POWER_SESSION_WINLOGON;
struct tagMCI_OVLY_OPEN_PARMSA;
struct _ImageArchitectureHeader;
struct _IO_SESSION_CONNECT_INFO;
struct __vc_attributes::switch_typeAttribute;
struct _CONSOLE_READCONSOLE_CONTROL;
struct IObjContext;
struct _IMAGE_RESOURCE_DIRECTORY_STRING;
struct _ALPC_PORT_COMPLETION_LIST_INFORMATION;
struct _TRANSACTION_BASIC_INFORMATION;
class CPSHashTable;
struct tagCWPRETSTRUCT;
struct _wfinddata_t;
struct _CRYPT_PKCS8_IMPORT_PARAMS;
struct tagRPC_EXTENDED_ERROR_INFO;
struct tagSQIResult;
struct _REQUEST_OPLOCK_INPUT_BUFFER;
struct _CSV_MGMT_LOCK;
struct MENUITEMTEMPLATE;
struct _FILE_TYPE_NOTIFICATION_INPUT;
struct _THREAD_TEB_INFORMATION;
struct __midl_frag43_t;
struct _CRYPT_PROVIDER_REF;
struct _STARTUPINFOEXW;
struct __midl_frag2_t;
struct _TRANSACTIONMANAGER_LOG_INFORMATION;
struct _CRYPT_PROPERTY_REF;
struct __vc_attributes::propputrefAttribute;
struct _CRYPT_IMAGE_REF;
struct _VM_COUNTERS;
struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA;
struct _NETINFOSTRUCT;
struct IActivationPropOutClean;
struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION;
struct __vc_attributes::pragmaAttribute;
struct RPC_DISPATCH_TABLE;
struct __vc_attributes::length_isAttribute;
struct _AVRF_MEMORY_RANGE;
struct _CRYPT_RC4_KEY_STATE;
struct _CHANGER_ELEMENT_STATUS_EX;
struct MOVE_FILE_RECORD_DATA;
struct __vc_attributes::retvalAttribute;
struct _LDR_RESLOADER_RET;
struct __vc_attributes::hookAttribute;
class Microsoft::WRL::Details::RemoveIUnknownBase<IMarshal>;
struct _NETRESOURCEA;
struct IXMLDOMEntity;
struct CStdMarshal::DiscSinkNode;
class CStdMarshal;
struct _SAFER_URLZONE_IDENTIFICATION;
struct _SAFER_HASH_IDENTIFICATION;
struct _SAFER_HASH_IDENTIFICATION2;
struct __vc_attributes::rangeAttribute;
struct _FILE_ZERO_DATA_INFORMATION;
struct tagNC_ADDRESS;
struct _OVERLAPPED_ENTRY;
struct _SAFER_CODE_PROPERTIES_V2;
struct _OVERLAPPED;
class BUCL::CConvertToSignedType<unsigned char>;
struct __midl_frag1088_t;
struct tagEMRSELECTPALETTE;
struct _FILE_LEVEL_TRIM_OUTPUT;
struct __midl_frag1269_t;
struct IXMLError;
struct IInternetSecurityManager;
struct __vc_attributes::no_injected_textAttribute;
struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION;
struct tagCREATESTRUCTA;
struct _CERT_POLICY_INFO;
class _RTL_CONSTANT_STRING_remove_const_template_class<1>;
struct __vc_attributes::defaultvalueAttribute;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> >;
struct FILE_ID_DESCRIPTOR;
class RunSyncOnMTAThread::__l6::<lambda_D1F1DD1B73A84ADB>;
struct tagCHOOSEFONTA;
struct _NDR64_RANGE_FORMAT;
struct __midl_frag1664_t;
struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__;
struct _REASON_CONTEXT;
struct _OFNOTIFYEXA;
struct __midl_frag310_t;
struct __vc_attributes::varargAttribute;
struct _NDR_USER_MARSHAL_INFO_LEVEL1;
struct __vc_attributes::threadingAttribute;
struct ILegacyInfo;
struct _DISK_CACHE_INFORMATION;
struct __vc_attributes::stringAttribute;
union _GDI_OBJECT::__MIDL_IAdviseSink_0002;
struct _GDI_OBJECT;
struct _OCSP_BASIC_RESPONSE_ENTRY;
struct IMessageDispatcher;
struct NTFS_FILE_RECORD_INPUT_BUFFER;
struct _MOVE_FILE_DATA32;
struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct tagSOUNDSENTRYA;
struct _userBITMAP;
union _userHPALETTE::__MIDL_IWinTypes_0008;
struct _userHPALETTE;
struct _PREFIX_TABLE;
struct _IMAGE_RESOURCE_DIRECTORY;
struct _IMAGE_EXPORT_DIRECTORY;
struct AsyncIPipeLong;
struct _BCRYPT_DH_PARAMETER_HEADER;
struct IUnknownVtbl;
class Windows::Auto<_LBLOB>;
struct _NOTIFYICONDATAA;
struct _ICONINFO;
class IMessageParamList::Iterator;
struct IWinInetFileStream;
union _userHGLOBAL::__MIDL_IWinTypes_0003;
struct _userHGLOBAL;
struct tagEMREXCLUDECLIPRECT;
struct __vc_attributes::restrictedAttribute;
struct _FLAGGED_BYTE_BLOB;
struct IPersistMoniker;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApartmentShutdown> const >;
struct _CERT_REGISTRY_STORE_ROAMING_PARA;
struct _OFNOTIFYW;
struct HKEY__;
struct __vc_attributes::appobjectAttribute;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >::is_pointer<Windows::Rtl::IRtlUtf8StringBuilder *>;
struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION;
struct __vc_attributes::helpcontextAttribute;
struct _ENCRYPTION_BUFFER;
struct _SYSTEM_POWER_STATE_DISABLE_REASON;
struct _RPC_SECURITY_QOS_V3_A;
struct _FILE_ALLOCATION_INFO;
struct _RPC_BINDING_HANDLE_OPTIONS_V1;
struct tagWCRANGE;
struct tagGLYPHSET;
struct _WIN32_FIND_DATAW;
struct _PRINTER_INFO_2W;
struct IComThreadingInfo;
struct __vc_attributes::versionAttribute;
struct IInternetSession;
class CClientSecurity;
struct PPM_WMI_IDLE_STATE;
struct PPM_WMI_IDLE_STATES_EX;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Next::__l3::<lambda_BCC3B76B24A9C0C1>;
struct _OLESTREAMVTBL;
struct tagCWPSTRUCT;
struct tagWINDOWPOS;
struct _MIDL_SERVER_INFO_;
struct IInternetZoneManagerEx;
struct _OLESTREAM;
struct tagOLEVERB;
struct _RTL_LFG_RNG_STATE;
struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits;
class Windows::Auto<Windows::Rtl::IRtlWOUCSStream *>;
struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION;
struct tagPOINTER_PEN_INFO;
struct _WOW64_FLOATING_SAVE_AREA;
struct _WOW64_CONTEXT;
struct IOleAdviseHolder;
struct _OPERATION_START_PARAMETERS;
struct tagRPC_CALL_ATTRIBUTES_V2_A;
struct _KEY_WRITE_TIME_INFORMATION;
struct tagDRAWTEXTPARAMS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> const >;
struct tagComCallData;
struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1;
struct _XSAVE_FEATURE;
struct _XSAVE_POLICY;
struct _UMS_SCHEDULER_STARTUP_INFO;
class DISABLED_FEATURES;
struct tagCustomPrivResolverInfo;
struct tagSTYLEBUFA;
class BUCL::CIsSignedType<unsigned long>;
struct _MANAGEDAPPLICATION;
struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY;
class CSrvCallState;
struct value_entW;
struct XSAVE_CPU_ERRATA;
class CSurrogatedObjectList;
struct _CMC_STATUS_INFO;
struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER;
struct val_context;
class CCliRotHintTable;
class CRunningObjectTable;
struct ACTIVATION_PROPERTIES;
struct tagContextStackNode;
struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY;
struct _WIN32_MEMORY_RANGE_ENTRY;
struct _RTL_STACK_TRACE_ENTRY;
struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY;
class CMonikerBag;
class ASTAWaitContext;
struct _SYSTEM_MEMORY_LIST_INFORMATION;
struct _SHITEMID;
struct _ITEMIDLIST;
struct IInitializeSpy;
class CLimitedWritableStorage::CopyTo::__l9::<lambda_4EBAA7B7F83E2AA1>;
class Serializer;
struct HBRUSH__;
struct _BOOT_ENTROPY_NT_RESULT;
struct ISerializableParent;
struct _MINIDUMP_HEADER;
struct tagWINDOWINFO;
struct _TOKEN_ELEVATION;
class Windows::AutoPointerBase<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;
struct _REPARSE_GUID_DATA_BUFFER;
struct _LDR_SERVICE_TAG_RECORD;
struct _PERF_INSTANCE_DEFINITION;
struct _TXFS_QUERY_RM_INFORMATION;
struct _wfinddatai64_t;
struct _INITIAL_TEB;
struct IReleaseMarshalBuffers;
struct _RTL_PROCESS_MODULE_INFORMATION;
struct _RTL_PROCESS_MODULES;
struct ICreateTypeInfo;
class istream_withassign;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;
struct _DRIVER_INFO_1A;
struct _RTL_PROCESS_MODULE_INFORMATION_EX;
struct WINTRUST_SGNR_INFO_;
struct IPersistMemory;
struct _JOBOBJECT_BASIC_LIMIT_INFORMATION;
struct _CRL_ISSUING_DIST_POINT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> const >;
struct _RTL_HEAP_INFORMATION;
struct _RTL_PROCESS_HEAPS;
struct IQuickActivate;
class ostream_withassign;
struct IShellLinkW;
struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR;
struct _IO_ERROR_LOG_MESSAGE;
struct _userSTGMEDIUM::_STGMEDIUM_UNION;
class Microsoft::WRL::ComPtr<IUnknown>;
struct _RTL_HEAP_TAG;
struct _MINIDUMP_MEMORY_DESCRIPTOR64;
struct _PS_CREATE_INFO;
class CAntiMoniker;
struct _RTL_PROCESS_LOCK_INFORMATION;
struct _RTL_PROCESS_LOCKS;
struct _SOURCEFILEW;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A;
struct tagInstanceInfoData;
class InstanceInfo;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> const >;
class Microsoft::WRL::ComPtr<IClipboardBrokerInternal>;
struct _DRIVER_INFO_6A;
struct _LDR_FAILURE_DATA;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION;
struct _X86_CALL_FRAME;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS;
struct _SYSTEM_VHD_BOOT_INFORMATION;
struct _ALPC_PORT_ATTRIBUTES;
struct HSTRING_BUFFER__;
struct HIMC__;
struct _RTL_VERIFIER_HEAP_TABLE;
struct _FILE_VALID_DATA_LENGTH_INFORMATION;
struct _EVENTSFORLOGFILE;
class CPointerHashTable;
struct tagMDICREATESTRUCTA;
class CClassCache::CServiceRefEntry;
struct _CRYPT_PROVIDER_DATA;
struct _FILE_ATTRIBUTE_TAG_INFO;
struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A;
struct _SHFILEOPSTRUCTA;
struct _REMSECURITY_ATTRIBUTES;
struct IXMLDOMDocumentType;
struct WINTRUST_SIGNATURE_SETTINGS_;
struct _stat;
struct _PROCESS_MITIGATION_DEP_POLICY;
struct _FILE_MOVE_CLUSTER_INFORMATION;
class CCOMSurrogate;
struct IWinRTInprocActivator;
struct _QUERY_SERVICE_CONFIGA;
struct _CONSOLE_CURSOR_INFO;
struct _CERT_OR_CRL_BUNDLE;
struct _SUPPORTED_OS_INFO;
struct IEnumSTATSTG;
struct _RTL_BALANCED_NODE;
struct tagLAYERPLANEDESCRIPTOR;
class BUCL::CConvertToUnsignedType<unsigned char>;
struct tagEMRSETPIXELV;
struct _ALPC_MESSAGE_ATTRIBUTES;
struct tagCLIENTCREATESTRUCT;
class Windows::Rtl::AutoHandleDefaultTraits<void *>;
struct _RTL_HEAP_PARAMETERS;
struct IClassClassicInfo3;
struct _RTLP_CURDIR_REF;
struct _CRYPT_HASH_INFO;
struct _FP_IEEE_RECORD;
struct tagEMRPOLYTEXTOUTA;
struct _RegInput;
struct _THREAD_LAST_SYSCALL_INFORMATION;
struct _FILE_DISPOSITION_INFO;
struct _CERT_POLICY95_QUALIFIER1;
struct IDestInfo;
struct _CRYPT_PROVIDER_PRIVDATA;
struct _LINK_TRACKING_INFORMATION;
struct _RTL_HEAP_WALK_ENTRY;
struct tagMCI_BREAK_PARMS;
struct tagOBJECTDESCRIPTOR;
class CMonikerFactory;
struct DLL_INSTANTIATION_PROPERTIES;
struct tagEMRCREATECOLORSPACE;
class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;
struct IOleCacheControl;
struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION;
struct _ACTION_HEADER;
struct CRWLock::LockState;
struct CRWLock::EventState;
class CRWLock;
struct _PROV_ENUMALGS_EX;
struct _JOURNAL_ABSOLUTE_INFORMATION;
class BUCL::CIsSignedType<int>;
struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA;
struct _SYSTEM_INTERRUPT_INFORMATION;
class BUCL::CIsSignedType<unsigned short>;
struct _INVERTED_FUNCTION_TABLE;
class CCliModalLoop;
struct _TP_TIMER;
struct _IMAGE_SEPARATE_DEBUG_HEADER;
struct _CHANGER_MOVE_MEDIUM;
struct _CRYPT_PROVIDER_REFS;
struct _RTL_HANDLE_TABLE_ENTRY;
struct IInspectable;
struct BITMAPV4HEADER;
struct tagCustomOpaqueData;
struct HPALETTE__;
struct _LAST_EXCEPTION_LOG;
struct _PARSE_MESSAGE_CONTEXT;
class CLUAMoniker;
struct _THREAD_PROFILING_INFORMATION;
struct _SERVICE_NOTIFY_1;
struct _SSerializationHeader;
struct Windows::DisableAuto;
class CRpcChannelBuffer::CServerCallMgr;
struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION;
struct _CERT_NAME_INFO;
struct tagEMRSELECTCLIPPATH;
struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR;
struct tagUPDATELAYEREDWINDOWINFO;
struct DVTDINFO;
struct tagEMRSETCOLORADJUSTMENT;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >::is_pointer<Windows::Rtl::IRtlUtf16LEStringBuilder *>;
struct _RTL_VERIFIER_THUNK_DESCRIPTOR;
struct _RGNDATAHEADER;
struct _devicemodeW;
struct SystemPageEntry;
struct _POWER_SESSION_TIMEOUTS;
struct _RGNDATA;
struct IApartmentShutdown;
struct tagEMRPOLYDRAW16;
struct _SCHANNEL_CRED;
class CDfMutex;
struct _MEMORY_PRIORITY_INFORMATION;
struct _FPO_DATA;
class CStmBufWrite;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef>;
struct IPolicyAsync;
struct tagTOUCHINPUT;
struct IOpaqueDataInfo;
class Windows::ErrorHandling::Rtl::CBoolFrame;
struct _SCONTEXT_QUEUE;
struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT;
struct _MINIDUMP_STRING;
struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT;
struct _LDR_DATA_TABLE_ENTRY;
struct _LDR_ENUM_RESOURCE_ENTRY;
struct _RESOLVED_USERNAME_INFO;
struct _RESOLVED_USERNAME_LIST;
struct tagRAWINPUTDEVICELIST;
struct _CPS_URLS;
struct _SERVICE_TABLE_ENTRYA;
struct _CMSG_RC2_AUX_INFO;
struct _PSHNOTIFY;
struct _MnkEqBuf;
struct _MIDL_STUB_MESSAGE;
struct tagLocationInfoData;
class ServerLocationInfo;
struct tagScmRequestInfoData;
class ScmRequestInfo;
class ActivationPropertiesIn;
struct IRemUnknown;
struct _FILE_SET_SPARSE_BUFFER;
struct _WIN32_STREAM_ID;
struct NDR_POINTER_QUEUE_STATE;
class CWinRTApartmentActivator;
struct _MIDL_STUB_DESC;
struct _tagRemBINDINFO;
struct _QUERY_SERVICE_LOCK_STATUSW;
struct _stati64;
struct IActivationPropertiesOut;
struct __GENERIC_BINDING_INFO;
class CRemoteUnknown;
struct __vc_attributes::event_receiverAttribute;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA;
struct _CERT_OR_CRL_BLOB;
struct _USER_MARSHAL_CB;
struct _MALLOC_FREE_STRUCT;
struct _TOKEN_ORIGIN;
struct __vc_attributes::iid_isAttribute;
struct _FIBER;
struct _COMM_FAULT_OFFSETS;
class CTmpMkEqBuf;
class CStdIdentity::CInternalUnk;
class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;
struct _POWER_PLATFORM_INFORMATION;
struct _OCSP_SIGNATURE_INFO;
struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE;
struct _CRYPT_PKCS12_PBE_PARAMS;
struct COPYFILE2_MESSAGE;
struct _NDR_CS_SIZE_CONVERT_ROUTINES;
struct joyinfoex_tag;
struct _IMAGE_DOS_HEADER;
struct _FSCTL_OFFLOAD_WRITE_OUTPUT;
struct _JOB_INFO_4A;
struct IInternetZoneManagerEx2;
struct _PSM_APPSTATE_REGISTRATION;
class CPres;
class CClassMoniker;
struct _CRYPT_CSP_PROVIDER;
class CClassMonikerFactory;
struct _ACCESS_DENIED_OBJECT_ACE;
struct tagPolicyEntry;
struct tagEMRALPHABLEND;
class CProcessPatternTbl;
struct __vc_attributes::atl::rdxAttribute;
struct _FORM_INFO_2A;
struct _RC_CONFIG;
struct _SYSTEM_HIBERFILE_INFORMATION;
struct DISPLAYCONFIG_SOURCE_DEVICE_NAME;
struct __vc_attributes::atl::perf_counterAttribute;
class CFastBH;
class CContextLife;
struct __midl_frag293_t;
struct tagDELETEITEMSTRUCT;
class CStdWrapper;
struct IProvideClassInfo2;
struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT;
struct IOleInPlaceSite;
struct IFastRundown;
struct _PARTITION_INFORMATION_MBR;
struct _PARTITION_INFORMATION_EX;
struct _DRIVE_LAYOUT_INFORMATION_EX;
struct ARRAY_INFO;
struct _NDR_ASYNC_MESSAGE;
struct tagMCI_GETDEVCAPS_PARMS;
struct _TP_WAIT;
struct IOverrideTargetContext;
struct _iinspectable_MIDL_TYPE_FORMAT_STRING;
struct IEnumOleUndoUnits;
struct _NDR_PROC_CONTEXT;
struct _IMAGE_RESOURCE_DIR_STRING_U;
struct _POINTFLOAT;
struct _GLYPHMETRICSFLOAT;
class CBindStatusCallback;
struct _CSV_QUERY_MDS_PATH;
struct IDLLHost;
class CBasedContextPtr;
class CContext;
struct _SYSTEM_ALARM_CALLBACK_ACE;
struct _CM_SCSI_DEVICE_DATA;
struct _TOKEN_DEFAULT_DACL;
struct IPointerInactive;
struct _PRINTPROCESSOR_CAPS_1;
struct _IO_STATUS_BLOCK32;
struct _SYSTEM_ERROR_PORT_TIMEOUTS;
struct _s__RTTIBaseClassDescriptor2;
struct tagMCI_VD_ESCAPE_PARMSA;
struct _EFS_ENCRYPTION_STATUS_INFO;
struct _TXFS_MODIFY_RM;
struct __midl_frag166_t;
struct _FILE_FS_DATA_COPY_INFORMATION;
struct _STORAGE_PROPERTY_QUERY;
struct _CM_PNP_BIOS_DEVICE_NODE;
class CBrokeredClipDataObject::{dtor}::__l9::<lambda_32D80D6E4B00AA95>;
struct _SYSTEM_SYSTEM_PARTITION_INFORMATION;
struct tagAUXCAPS2A;
struct _TRANSACTIONMANAGER_OLDEST_INFORMATION;
struct _QUOTA_LIMITS;
struct _IMAGE_IMPORT_BY_NAME;
struct _DEVICE_DATA_SET_REPAIR_PARAMETERS;
struct _SYSTEM_VERIFIER_INFORMATION_EX;
struct _FILE_FULL_DIR_INFO;
struct __vc_attributes::publicAttribute;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED;
struct _BIDI_REQUEST_DATA;
struct __vc_attributes::idAttribute;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IUnknown,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct _WNF_DELIVERY_DESCRIPTOR;
struct tagMCI_OVLY_LOAD_PARMSW;
struct _PO_WAKE_SOURCE_HISTORY;
struct _SYSDBG_BUS_DATA;
struct _LANA_ENUM;
struct _CERT_NAME_CONSTRAINTS_INFO;
struct tagBITMAPINFO;
struct tagSAFEARRAY;
struct _tagSTACKFRAME64;
struct ISerializable;
struct _NDR64_MEMPAD_FORMAT;
struct __midl_frag258_t;
struct _CRYPT_PASSWORD_CREDENTIALSA;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef const >;
struct _MINIDUMP_MODULE_LIST;
class SerializableProperty;
struct CREATE_USN_JOURNAL_DATA;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>;
struct _PROVIDOR_INFO_1W;
struct _RTL_PROCESS_BACKTRACES_CONTROL;
struct _SE_ACCESS_REQUEST;
struct _EFS_HASH_BLOB;
struct _MINIDUMP_DIRECTORY;
class Microsoft::WRL::Wrappers::Event;
struct ISimpleFrameSite;
struct USN_JOURNAL_DATA_V0;
struct _PUBLIC_OBJECT_BASIC_INFORMATION;
struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute;
struct _FSCTL_OFFLOAD_READ_OUTPUT;
struct _SCMREGKEY;
class CROTItem;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS;
class PBasicEntry;
struct _OUTLINETEXTMETRICW;
class CStgHandle;
class CObjrefMoniker;
struct _SYSTEM_AUDIT_CALLBACK_ACE;
struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION;
struct HTOUCHINPUT__;
struct __vc_attributes::helper_attributes::help_stringAttribute;
struct __vc_attributes::helper_attributes::multi_valueAttribute;
class CContextList;
struct _RPC_SECURITY_QOS;
struct _SYSTEM_HOTPATCH_CODE_INFORMATION;
struct _CMC_TAGGED_CONTENT_INFO;
struct tagFUNCDESC;
struct __vc_attributes::noncreatableAttribute;
struct _SYSTEM_HANDLE_INFORMATION_EX;
struct _RPC_PROTSEQ_VECTORW;
struct __midl_frag75_t;
struct __vc_attributes::ms_unionAttribute;
struct IPSFactoryBuffer;
struct __midl_frag70_t;
struct _SOURCEFILE;
struct _userHMETAFILEPICT;
struct _PUBKEY;
class PTSetMember;
struct _CMSG_CONTENT_ENCRYPT_INFO;
struct _RTL_CONDITION_VARIABLE;
class CMapStringToPtr;
struct _WPP_TRACE_CONTROL_BLOCK;
struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO;
struct _WPP_WIN2K_CONTROL_BLOCK;
struct _FILE_PIPE_REMOTE_INFORMATION;
class SafeIStream;
struct _MIDL_STUBLESS_PROXY_INFO;
struct tagGESTURECONFIG;
struct SCARD_READERSTATEW;
struct _ASSEMBLY_FILE_DETAILED_INFORMATION;
class COleConditionVariable;
struct _CERT_DH_PARAMETERS;
struct IInternetSecurityManagerEx;
struct SC_HANDLE__;
struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE;
class CNameHashTable;
struct IRpcHelper;
struct __midl_frag317_t;
struct tagDRVCONFIGINFO;
struct __vc_attributes::helper_attributes::v1_nameAttribute;
struct IOleInPlaceUIWindow;
struct _BCRYPT_OID;
struct tagJOYCAPSA;
struct _CRYPT_ENCRYPT_MESSAGE_PARA;
class CLimitedWritableStorage::OpenStream::__l3::<lambda_DBBA6E15974D88A0>;
struct _CERT_REVOCATION_PARA;
struct _CRYPT_DES_KEY_STATE;
struct __midl_frag21_t;
struct _IMAGEHLP_DUPLICATE_SYMBOL64;
struct _DRAWPATRECT;
struct tagSCROLLBARINFO;
struct _DRIVER_INFO_2A;
struct tagALTTABINFO;
struct _IMAGE_DEBUG_DIRECTORY;
struct _TPP_THREAD_DATA_CALLBACK;
struct PACKAGE_INFO;
struct __midl_frag1059_t;
struct tagMOUSEHOOKSTRUCTEX;
struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR;
struct _SL_KMEM_CACHE;
struct _TOKEN_OWNER;
struct CPlex;
struct tagEMRSETARCDIRECTION;
class PTimeEntry;
struct _DEVICE_LB_PROVISIONING_DESCRIPTOR;
struct _API_SET_VALUE_ARRAY;
struct _FILE_PIPE_EVENT_BUFFER;
struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION;
struct _MINIDUMP_HANDLE_DATA_STREAM;
struct IParseDisplayName;
struct IActivationStageInfo;
class CMultiGUIDHashTable;
struct _ACCESS_DENIED_ACE;
struct __midl_frag891_t;
struct _POWER_USER_PRESENCE;
struct _OCSP_BASIC_SIGNED_RESPONSE_INFO;
struct _CERT_REQUEST_INFO;
struct _PRIV_RESOLVER_INFO;
struct _SYSTEM_NUMA_PROXIMITY_MAP;
class CFatSect;
struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA;
struct IDataObject;
class CPagedVector;
struct _RTL_HEAP_TAG_INFO;
struct _REPARSE_POINT_INFORMATION;
struct _SECTIONBASICINFO;
class CBindCtx::CObjList;
struct _THREAD_PERFORMANCE_DATA;
struct _PAGE_PRIORITY_INFORMATION;
struct tagCInterfaceStubVtbl;
struct _FILESYSTEM_STATISTICS;
struct _TP_IO;
struct tagEMRARC;
struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA;
struct _iinspectable_MIDL_PROC_FORMAT_STRING;
struct _CERT_KEYGEN_REQUEST_INFO;
class OleThunkWOW;
struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>::COperatorAmpersandReturnType;
struct __midl_frag1656_t;
struct _CRYPT_CONTENT_INFO;
struct IRpcChannelBuffer2;
class CROIDTable;
struct _EISA_IRQ_DESCRIPTOR;
struct _EISA_IRQ_CONFIGURATION;
struct _EISA_MEMORY_CONFIGURATION;
union _RTL_ELEVATION_FLAGS;
struct _RESOURCEMANAGER_BASIC_INFORMATION;
struct _REQUEST_OPLOCK_OUTPUT_BUFFER;
struct tagENUMLOGFONTEXA;
struct tagDESIGNVECTOR;
struct tagENUMLOGFONTEXDVA;
struct _RegOutput;
struct tagGCP_RESULTSW;
struct IRCEntry;
struct _MIDL_FORMAT_STRING;
struct __midl_frag1444_t;
struct HICON__;
struct tagHARDWAREHOOKSTRUCT;
struct Windows::Rtl::IRtlWORAStream;
struct _NT_TIB32;
struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA;
struct _SYSTEM_SECUREBOOT_INFORMATION;
struct _HEAP_SUMMARY;
struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION;
class CClassCache::CDPEHashTable;
struct IComServices;
class BUCL::CIsSignedType<unsigned __int64>;
struct __midl_frag796_t;
class LargeIntRegMultiply<int,unsigned __int64>;
struct _REPAIR_COPIES_INPUT;
struct _RPC_IF_ID;
struct _SHFILEOPSTRUCTW;
struct _PO_WAKE_SOURCE_FIXED;
struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION;
struct BULK_SECURITY_TEST_DATA;
struct __midl_frag187_t;
struct _ADMINISTRATOR_POWER_POLICY;
struct _SYSTEM_WORKINGSET_ENTRY;
struct _SYSTEM_PROCESS_ID_INFORMATION;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING;
struct _TRANSACTIONMANAGER_BASIC_INFORMATION;
class BUCL::CConvertToSignedType<long>;
struct tagCOLORMATCHTOTARGET;
union _RATE_QUOTA_LIMIT;
struct _QUOTA_LIMITS_EX;
class CHandle;
struct _OSVERSIONINFOEXA;
struct CMachineNamesHelper::_SBTOTAL;
struct __midl_frag93_t;
class CAptCallCtrl;
struct tagDATAELEMENT;
struct tagEMRPOLYLINE16;
struct _CSTRING;
struct _NDR_USER_MARSHAL_INFO;
class CUserMarshalInfo;
struct Windows::Rtl::IRtlRORAStream;
struct _OCSP_RESPONSE_INFO;
class BUCL::CConvertToUnsignedType<short>;
struct _SYSTEM_MEMORY_CHANNEL_INFORMATION;
class Windows::Lock<_RTL_CRITICAL_SECTION>;
struct __midl_frag744_t;
class Microsoft::WRL::ComPtr<IMessageParam>;
struct _SYSTEM_REF_TRACE_INFORMATION;
struct IXMLDOMEntityReference;
struct IPSFactoryBufferVtbl;
struct _STARTUPINFOA;
struct threadmbcinfostruct;
struct _CRYPT_CONTEXT_FUNCTION_CONFIG;
struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE;
struct _SYMBOL_INFO;
struct _tagPROTOCOL_ARGUMENT;
struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY;
struct _PROCESS_MITIGATION_ASLR_POLICY;
struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY;
struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY;
struct _PROCESS_MITIGATION_POLICY_INFORMATION;
class Windows::Auto<Windows::Rtl::IRtlInterface *>;
struct __midl_frag1686_t;
struct NTFS_EXTENDED_VOLUME_DATA;
struct SET_POWER_SETTING_VALUE;
struct _FILE_COMPRESSION_INFO;
struct MARK_HANDLE_INFO32;
struct _CRYPT_RSA_SSA_PSS_PARAMETERS;
struct IXMLElementCollection;
struct _SYSTEM_PROCESSOR_POLICY_INFORMATION;
struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION;
struct IPrivActivationPropertiesOut;
struct __midl_frag457_t;
struct IRemUnknownN;
struct _devicemodeA;
struct _SERVICE_TRIGGER;
struct tagInitializeSpyNode;
struct __vc_attributes::helper_attributes::v1_earlyAttribute;
struct __vc_attributes::v1_enumAttribute;
struct tagMIXERCAPS2A;
struct _KSPIN_LOCK_QUEUE;
struct _KLOCK_QUEUE_HANDLE;
struct _JOB_INFO_2A;
struct _NDR64_EXPR_NOOP;
struct _NDR64_EXPR_CONST64;
struct __midl_frag528_t;
struct _SYSTEM_DPC_BEHAVIOR_INFORMATION;
class CSessionMoniker;
union _DL_EUI48;
struct tagOutgoingActivationData;
struct HWINSTA__;
struct _SE_SECURITY_DESCRIPTOR;
struct _LDRP_DLL_SNAP_CONTEXT;
struct _WIN32_FIND_DATAA;
struct _SYSTEM_PLATFORM_BINARY_INFORMATION;
class CWriteMarshalingStreamOnBuffer;
struct IOleControl;
struct _FILE_GET_EA_INFORMATION;
struct __vc_attributes::switch_isAttribute;
struct _CERT_QC_STATEMENTS_EXT_INFO;
struct _PROCESS_KEEPALIVE_COUNT_INFORMATION;
struct tagMCI_ANIM_OPEN_PARMSW;
struct _SYSTEM_POWER_LOGGING_ENTRY;
struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION;
struct _MEMORY_RANGE_ENTRY;
struct _MUTANT_BASIC_INFORMATION;
struct IProxyServerIdentity;
struct _MINIDUMP_MEMORY64_LIST;
struct tagHIGHCONTRASTW;
struct __midl_frag71_t;
struct SHA512_CTX;
struct __midl_frag252_t;
struct _CRYPT_AES_256_KEY_STATE;
struct _cpinfoexA;
struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX;
struct USN_JOURNAL_DATA_V1;
struct tagOleMenuGroupWidths;
struct IServiceProvider;
struct _PROPSHEETPAGEW_V2;
struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA;
struct _ENLISTMENT_CRM_INFORMATION;
struct __MIDL___MIDL_itf_wtypes_0000_0001_0001;
struct __midl_frag1384_t;
struct IXMLDSOControl;
struct __lc_time_data;
struct value_entA;
struct IResourceGates;
struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT;
class Windows::ErrorHandling::Rtl::CBaseRaiseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame,Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame> >;
struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA;
struct _SYSTEM_FILECACHE_INFORMATION;
class BUCL::CMultiplier<unsigned __int64,BUCL::Rtl::CCallDisposition>;
struct _nlsversioninfo;
class CRtlSmartUcsEncoderTraits<_LUTF8_STRING>;
struct _RPC_SECURITY_QOS_V5_A;
class CContextPropList;
class CObjectContext;
struct tagMETAFILEPICT;
struct XMLDOMDocumentEvents;
struct _CRYPT_HASH_MESSAGE_PARA;
struct _SHELLEXECUTEINFOA;
struct SHA256_CTX;
struct _IMAGE_TLS_DIRECTORY64;
struct __midl_frag44_t;
struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION;
struct _CERT_BASIC_CONSTRAINTS_INFO;
struct tagHELPWININFOW;
struct _CLASS_MEDIA_CHANGE_CONTEXT;
struct __midl_frag684_t;
struct tagEMRBITBLT;
class Microsoft::WRL::Details::Nil;
struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION;
struct _SYSTEM_SESSION_POOLTAG_INFORMATION;
struct _PSP;
struct _OCSP_REQUEST_INFO;
class Microsoft::WRL::Details::DontUseNewUseMake;
struct tagAUDIODESCRIPTION;
struct _IMAGE_FUNCTION_ENTRY;
class CClassCache::CpUnkMoniker;
struct tagMCI_SYSINFO_PARMSW;
struct __midl_frag82_t;
struct tagRPC_CALL_ATTRIBUTES_V3_A;
struct _SHNAMEMAPPINGA;
struct IInitActivationPropertiesIn;
struct _MONITOR_INFO_1W;
struct _EXCEPTION_RECORD64;
struct _FILE_NOTIFY_INFORMATION;
class CClassCache::IMiniMoniker;
struct tagInterfaceData;
struct tagMIXERCONTROLW;
struct _CRYPT_TIMESTAMP_PARA;
struct _RTL_CRITICAL_SECTION32;
struct _CERT_AUTHORITY_KEY_ID2_INFO;
struct _STORAGE_DESCRIPTOR_HEADER;
struct _SYSTEM_HANDLE_INFORMATION;
struct _FSCTL_OFFLOAD_WRITE_INPUT;
struct SIterBuffer;
struct _NAME_BUFFER;
struct _FILE_REGION_INFO;
struct _FILE_REGION_OUTPUT;
struct __midl_frag16_t;
struct ClassicSTAState;
class CStdIdentity;
struct tagEMRSETWORLDTRANSFORM;
struct _APPLICATIONLAUNCH_SETTING_VALUE;
class CUrlMonWrapper;
struct _PERFORMANCE_DATA;
struct IClassClassicInfo2;
struct _PRINTER_INFO_9W;
struct _BOOT_AREA_INFO;
struct __midl_frag55_t;
struct _HARDERROR_MSG;
struct tagICONMETRICSW;
struct _CONSOLE_SCREEN_BUFFER_INFOEX;
class CObjrefMonikerFactory;
struct __midl_frag369_t;
struct IInterfaceInfo;
struct SPreDirEntry;
struct _FILE_IO_PRIORITY_HINT_INFORMATION;
struct _SECTION_IMAGE_INFORMATION64;
struct _STARTUPINFOEXA;
struct IOleLink;
struct __midl_frag59_t;
struct _CONSOLE_FONT_INFOEX;
struct _NDR64_ENCAPSULATED_UNION;
struct _NDR64_UNION_ARM_SELECTOR;
struct _NDR64_UNION_ARM;
struct __midl_frag80_t;
struct FRAME_RemoteInvoke;
struct DISPATCH_CLIENT_FRAME;
struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION;
struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION;
struct tagMCI_SYSINFO_PARMSA;
struct __midl_frag195_t;
struct ASSOCIATIONELEMENT;
struct tagEMRRESTOREDC;
struct tagGUITHREADINFO;
struct Windows::AutoPODBase<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::is_pointer<_UNICODE_STRING>;
struct IOleItemContainer;
struct __midl_frag368_t;
struct _UMS_CREATE_THREAD_ATTRIBUTES;
struct _JOB_INFO_1A;
struct IHttpNegotiate2;
struct _FILE_ALLOCATION_INFORMATION;
struct HTASK__;
struct tagCURSORINFO;
struct _RTL_RESOURCE;
struct tagENUMLOGFONTEXDVW;
struct REFS_VOLUME_DATA_BUFFER;
struct _EXCEPTION_POINTERS;
union _PROCESS_AFFINITY_UPDATE_MODE;
struct _SD_CHANGE_MACHINE_SID_OUTPUT;
class CHeapHeader;
struct Windows::ErrorHandling::_RTL_CALL_SITE;
struct __midl_frag288_t;
struct _SYMBOL_INFO_PACKAGE;
union _SE_SID;
struct _OBJECT_TYPE_INFORMATION;
struct _REASSIGN_BLOCKS_EX;
struct IDirectWriterLock;
struct _CM_INT13_DRIVE_PARAMETER;
class OpaqueDataInfo;
struct __midl_frag1256_t;
struct _SHELLEXECUTEINFOW;
struct tagORPC_EXTENT_ARRAY;
struct IEnumConnectionsVtbl;
struct IInternetBindInfo;
struct tagCLEANLOCALSTORAGE;
struct tagHELPINFO;
struct _MINIDUMP_THREAD;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;
struct IBindProtocol;
struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW;
struct _JOBOBJECT_FREEZE_INFORMATION;
struct _IMAGE_ARCHIVE_MEMBER_HEADER;
struct __midl_frag31_t;
struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO;
struct _CERT_DSS_PARAMETERS;
struct _TXFS_GET_TRANSACTED_VERSION;
struct __midl_frag1170_t;
struct _REG_NOTIFY_INFORMATION;
struct _SC_ACTION;
struct __midl_frag747_t;
struct _CRYPT_PROVIDER_DEFUSAGE;
struct _SERVICE_PREFERRED_NODE_INFO;
struct __midl_frag25_t;
struct _PROCESSOR_PROFILE_CONTROL_AREA;
struct tagENUMTEXTMETRICW;
struct _REMOTE_NAME_INFOA;
struct _PRINTER_CONNECTION_INFO_1W;
struct __midl_frag1496_t;
union _POWER_STATE;
struct tagRPC_CALL_ATTRIBUTES_V1_W;
struct IEnumMoniker;
struct __midl_frag1307_t;
struct tagMONITORINFOEXA;
struct _GRADIENT_RECT;
struct IOleWindow;
struct _complex;
struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER;
struct _IMAGE_RESOURCE_DATA_ENTRY;
struct _DEDUP_CHUNK_INFORMATION_HASH32;
struct _KEY_CACHED_INFORMATION;
struct _TOKEN_MANDATORY_POLICY;
struct _TOKEN_ACCESS_INFORMATION;
struct _PRINTER_INFO_1A;
struct _CMSG_SP3_COMPATIBLE_AUX_INFO;
struct ISCMProcessControl;
struct tagCUSTDATA;
struct DDEACK;
struct __midl_frag804_t;
struct _COMPRESSED_DATA_INFO;
struct tagCUSTDATAITEM;
struct _SERVICE_REQUIRED_PRIVILEGES_INFOA;
struct _TI_FINDCHILDREN_PARAMS;
struct _SYSTEM_PERFORMANCE_INFORMATION;
struct _RTL_MODULE_EXTENDED_INFO;
struct _SYSTEM_NUMA_INFORMATION;
struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING;
union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA;
struct IObjectWithSite;
class BUCL::CIsSignedType<long>;
struct _BCRYPT_RSAKEY_BLOB;
struct _SYSTEM_EXCEPTION_INFORMATION;
struct _PSFEATURE_OUTPUT;
struct _CM_FLOPPY_DEVICE_DATA;
struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W;
struct _PROPSHEETHEADERA_V1;
struct _RTL_RXACT_LOG;
struct IPolicyMaker;
struct tagKERNINGPAIR;
struct _LEARNING_MODE_OBJECT_INFORMATION;
struct IBindStatusCallbackEx;
struct __midl_frag1599_t;
struct tagORPCTHIS;
struct __MIDL_ILocalObjectExporter_0003;
struct tagREMINTERFACEREF;
struct _CALL_FRAME;
struct _SYSTEM_CODEINTEGRITY_INFORMATION;
struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION;
struct tagIPIDEntry;
class CIPIDTable;
struct _RPC_SERVER_INTERFACE;
struct Windows::Rtl::IRtlWOFOUCSStream;
struct _RPC_PROTSEQ_ENDPOINT;
struct HSPRITE__;
struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE;
class CClientCall;
struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR;
struct tagMCI_ANIM_WINDOW_PARMSW;
struct tagEMRGLSRECORD;
struct _WINDOWS_OS_OPTIONS;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >;
struct IOleInPlaceUIWindowVtbl;
struct tagEMRCREATEPALETTE;
struct _FILE_ID_BOTH_DIR_INFORMATION;
struct _FILE_LINK_ENTRY_INFORMATION;
struct _FILE_LINKS_INFORMATION;
struct _FORM_INFO_1A;
struct _SYSTEM_POWER_INFORMATION;
struct IActivationFactory;
struct HDDEDATA__;
struct tagACTCTX_SECTION_KEYED_DATA_2600;
struct IPrivActivationPropertiesIn;
class CMIPIDHashTable;
class CSafeSem;
struct __vc_attributes::moduleAttribute;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >::is_pointer<Windows::Rtl::IRtlObject *>;
struct __midl_frag1670_t;
struct IErrorLog;
struct tagCallEntry;
struct _IMAGE_DEBUG_MISC;
struct HPEN__;
struct _CERT_RDN;
struct tagNONCLIENTMETRICSW;
struct _CONSOLE_SCREEN_BUFFER_INFO;
struct tagCONTROLINFO;
struct IShellItem;
struct _SERVICE_DESCRIPTIONA;
struct _BCRYPT_DSA_KEY_BLOB;
struct __vc_attributes::hiddenAttribute;
struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT;
struct _SCOPE_TABLE_AMD64;
struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR;
struct __midl_frag480_t;
struct _MODLOAD_PDBGUID_PDBAGE;
struct _API_SET_NAMESPACE_ARRAY;
struct _REMOTE_NAME_INFOW;
struct IEnumSTATPROPSETSTG;
struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApartmentShutdown> >;
struct _OMAP;
struct _MINIDUMP_USER_STREAM_INFORMATION;
struct IScmRequestInfo;
struct tagFILTERKEYS;
struct _MINIDUMP_HANDLE_DESCRIPTOR;
struct tagSTATPROPSTG;
struct _CERT_KEY_ATTRIBUTES_INFO;
struct SPC_LINK_;
struct _DRIVERSTATUS;
struct __vc_attributes::licensedAttribute;
struct _REPARSE_DATA_BUFFER;
struct IUserToken;
struct _XSAVE_AREA;
struct _THREAD_CYCLE_TIME_INFORMATION;
struct _VARIABLE_NAME_AND_VALUE;
struct IOleControlSite;
class Windows::AutoOperatorAmpersandHelper<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;
struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR;
class Microsoft::WRL::Details::ModuleBase;
struct _MINIDUMP_EXCEPTION;
class Microsoft::WRL::ComPtr<IImpersonateClipboardOwner>;
struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX;
struct _FILE_NAME_INFO;
struct _CERT_SYSTEM_STORE_INFO;
struct IEnumVARIANT;
struct tagMCI_WAVE_OPEN_PARMSW;
struct _SYSTEM_AUDIT_OBJECT_ACE;
struct _IMAGEHLP_CBA_EVENT;
struct Microsoft::WRL::Details::CreatorMap;
struct _MINIDUMP_HANDLE_OPERATION_LIST;
struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA;
struct __midl_frag826_t;
struct _BOOT_OPTIONS;
struct tagSOUNDSENTRYW;
struct __vc_attributes::immediatebindAttribute;
class CStmBuf;
struct WSAData;
struct __vc_attributes::inAttribute;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::CloakedIid<IAgileObject>,Microsoft::WRL::Details::Nil>,1,0>;
struct __vc_attributes::exportAttribute;
struct __vc_attributes::controlAttribute;
class Microsoft::WRL::Details::FtmBaseMarker;
struct tagQACONTAINER;
struct __vc_attributes::helpstringcontextAttribute;
struct __vc_attributes::defaultbindAttribute;
struct __NCRYPT_UI_POLICY;
struct __vc_attributes::localAttribute;
struct __vc_attributes::importlibAttribute;
struct __midl_frag742_t;
struct IMarshal2;
struct __vc_attributes::dispinterfaceAttribute;
struct __vc_attributes::dualAttribute;
struct __midl_frag201_t;
struct _STORAGE_WRITE_CACHE_PROPERTY;
class CProperty;
struct __vc_attributes::defaultAttribute;
struct __vc_attributes::providerAttribute;
struct tagPRINTPAGERANGE;
struct __vc_attributes::importAttribute;
class CEnumSTATPROPBAG;
struct __vc_attributes::satypeAttribute;
struct __vc_attributes::async_uuidAttribute;
struct SStorageFile;
struct __vc_attributes::unhookAttribute;
struct __vc_attributes::nonextensibleAttribute;
struct _PRINTER_OPTIONSA;
struct __vc_attributes::aggregatableAttribute;
struct tagPROPHEADER;
class CArray<CPropertySection *,CPropertySection * &>;
class CPropertySet;
struct __vc_attributes::progidAttribute;
struct __vc_attributes::wire_marshalAttribute;
struct __vc_attributes::vi_progidAttribute;
struct __vc_attributes::odlAttribute;
struct __vc_attributes::bindableAttribute;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRuntimeBroker> >;
struct __vc_attributes::helpstringdllAttribute;
struct __vc_attributes::defaultcollelemAttribute;
struct __vc_attributes::atl::db_commandAttribute;
struct __vc_attributes::atl::db_columnAttribute;
struct __vc_attributes::atl::db_tableAttribute;
struct midistrmbuffver_tag;
struct __vc_attributes::atl::aggregatesAttribute;
struct __vc_attributes::atl::soap_headerAttribute;
struct __vc_attributes::atl::perfmonAttribute;
struct _EVENT_DATA_DESCRIPTOR;
class C2Security;
struct __vc_attributes::atl::support_error_infoAttribute;
struct __vc_attributes::atl::tag_nameAttribute;
struct PrintNamedProperty;
struct __vc_attributes::atl::db_paramAttribute;
struct __vc_attributes::atl::soap_methodAttribute;
struct __midl_frag1754_t;
struct __vc_attributes::atl::synchronizeAttribute;
struct _DEVICE_DATA_SET_RANGE;
struct __vc_attributes::caseAttribute;
struct __midl_frag1584_t;
struct __vc_attributes::helpstringAttribute;
struct __vc_attributes::entryAttribute;
struct tagOFN_NT4W;
struct __midl_frag1703_t;
struct __vc_attributes::defaultvtableAttribute;
struct WireThisPart1;
class Windows::AutoPointerBase<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;
struct __vc_attributes::event_sourceAttribute;
struct IBuffer;
struct __vc_attributes::last_isAttribute;
struct __vc_attributes::helper_attributes::usageAttribute;
struct tagMCI_STATUS_PARMS;
struct __vc_attributes::helper_attributes::attributeAttribute;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;
struct __vc_attributes::helper_attributes::v1_alttypeAttribute;
class CGlobalContext;
class AdditionHelper<long,long,6>;
struct __vc_attributes::helper_attributes::default_valueAttribute;
struct _PRINTER_INFO_8A;
struct __vc_attributes::importidlAttribute;
struct __vc_attributes::cpp_quoteAttribute;
struct __vc_attributes::refAttribute;
struct SystemBlockHeader;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> >;
class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>;
struct __vc_attributes::lcidAttribute;
struct __vc_attributes::helpfileAttribute;
struct __vc_attributes::transmit_asAttribute;
struct __vc_attributes::library_blockAttribute;
struct __vc_attributes::optionalAttribute;
class CArray<CFormatEtc>;
struct timecaps_tag;
struct _FILE_FS_SECTOR_SIZE_INFORMATION;
struct tagEMRGDICOMMENT;
class Windows::Auto<Windows::Rtl::IRtlObject *>;
struct _ALPC_BASIC_INFORMATION;
class Microsoft::WRL::Details::RemoveIUnknownBase<IImpersonateClipboardOwner>;
struct _SENDCMDOUTPARAMS;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBrokerInternal,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct tagRECONVERTSTRING;
class CDfNameList;
struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA;
class CPatternTbl;
struct __MIDL___MIDL_itf_activate_0000_0010_0004;
class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64>;
struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS;
struct _SET_PARTITION_INFORMATION;
struct _RTL_UNLOAD_EVENT_TRACE32;
struct __midl_frag406_t;
struct _SYSTEM_POWER_POLICY;
class CClassCache::CDllClassEntry;
struct _TRANSACTION_LIST_INFORMATION;
struct _NCRYPT_CIPHER_PADDING_INFO;
class CPropertyBagEx;
class CNtfsStorage;
struct _IMAGE_DELAYLOAD_DESCRIPTOR;
class DeserializeHelper::SafeArrayDestroyer;
struct tagMIXERLINECONTROLSW;
struct __midl_frag199_t;
struct _EX_WNF_SUBSCRIPTION;
struct tagMCI_WAVE_SET_PARMS;
struct _SYSTEM_BOOT_LOGO_INFORMATION;
class Microsoft::WRL::Details::RemoveIUnknownBase<IClipboardBroker>;
struct _DRIVER_INFO_4W;
struct __midl_frag1399_t;
struct tagMEASUREITEMSTRUCT;
struct IInterfaceFromWindowProp;
struct IEnumFORMATETCVtbl;
struct __midl_frag617_t;
struct _CM_PCCARD_DEVICE_DATA;
struct _COUNTED_REASON_CONTEXT;
class CClassCache::CWinRTDllClassEntry;
class RunSyncOnMTAThread::__l6::<lambda_112812E40241EED9>;
struct tagOFNA;
struct tagPDA;
struct _CONSOLE_FONT_INFO;
class Microsoft::WRL::Details::RemoveIUnknownBase<ClipboardDataObjectTask>;
struct tagSTGOPTIONS;
struct _SD_QUERY_STATS_OUTPUT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshalingStream> const >;
class CEnumFormatEtcDataArray;
struct tagLOCALESIGNATURE;
struct __midl_frag254_t;
struct _BIN_RESULTS;
struct _JOBOBJECT_BASIC_PROCESS_ID_LIST;
struct IMalloc;
struct tagMIDIOUTCAPS2W;
class CLimitedWritableStream::Revert::__l3::<lambda_90BBF1240E966676>;
struct HMIXEROBJ__;
struct __midl_frag395_t;
class CLimitedWritableStream::CopyTo::__l9::<lambda_AC2301D1AB195848>;
class type_info;
struct hostent;
class TStackBuffer<unsigned long,64>;
class CFormatEtc;
struct _PROPSHEETHEADERW_V1;
struct IFillInfo;
struct __midl_frag35_t;
struct _FILE_SYSTEM_RECOGNITION_INFORMATION;
struct _UNICODE_PREFIX_TABLE;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IClipboardBrokerInternal,Microsoft::WRL::Details::Nil>,0,0>;
struct _PROPSHEETPAGEW_V3;
struct _PROCESS_SESSION_INFORMATION;
struct _SYSTEM_CONTEXT_SWITCH_INFORMATION;
class BUCL::CConvertToUnsignedType<unsigned long>;
struct _FLS_DATA;
struct _MINIDUMP_THREAD_EX_CALLBACK;
struct _MINIDUMP_INCLUDE_MODULE_CALLBACK;
struct _MINIDUMP_IO_CALLBACK;
struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK;
struct _MINIDUMP_CALLBACK_INPUT;
class HashInt;
struct _DISK_EX_INT13_INFO;
class Windows::Auto<Windows::Rtl::IRtlWORAStream *>;
struct __midl_frag216_t;
struct _WGLSWAP;
struct __midl_frag88_t;
struct IEnumUnknown;
class CReadOnlyStorage::CopyTo::__l12::<lambda_48830B8A68BE8DE9>;
struct tagMCI_ANIM_OPEN_PARMSA;
struct _MINIDUMP_MEMORY_LIST;
struct _CMC_DATA_INFO;
struct _CMC_TAGGED_OTHER_MSG;
struct _FILE_ID_EXTD_DIR_INFORMATION;
class ostream;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;
struct _MEMORY_COMBINE_INFORMATION;
struct _PSINJECTDATA;
struct _tagHIT_LOGGING_INFO;
struct tagEMREXTFLOODFILL;
struct __midl_frag467_t;
struct _ACCESS_ALLOWED_CALLBACK_ACE;
struct _EVENTLOG_FULL_INFORMATION;
class CEnumSTATPROPSETSTG;
struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION;
struct __midl_frag113_t;
struct AsyncIAdviseSink2;
struct __midl_frag209_t;
struct _DRIVER_INFO_3A;
struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION;
struct _CRYPT_PROVUI_DATA;
struct _REASSIGN_BLOCKS;
struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION;
struct IImageList;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>;
struct __midl_frag704_t;
struct _RTL_USER_PROCESS_INFORMATION64;
struct _PROCESS_HANDLE_TRACING_QUERY;
struct _SPC_SP_AGENCY_INFO;
struct _exception;
struct _CRYPT_SEQUENCE_OF_ANY;
struct __midl_frag86_t;
struct IInterfaceRelated;
struct HWAVEIN__;
struct __midl_frag275_t;
struct _KEY_OPEN_SUBKEYS_INFORMATION;
struct _SYMBOL_INFOW;
struct _SYMBOL_INFO_PACKAGEW;
class BUCL::CConvertToSignedType<unsigned int>;
struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO;
struct IWinInetInfo;
class BUCL::CConvertToUnsignedType<unsigned short>;
struct _EXTENDED_ENCRYPTED_DATA_INFO;
struct _CLINFO;
class BUCL::CConvertToUnsignedType<signed char>;
struct tagTTPOLYCURVE;
struct IMarshallingManager;
struct SPC_SIGINFO_;
struct _MEMORY_WORKING_SET_EX_INFORMATION;
struct tagPSDW;
struct _TP_POOL_STACK_INFORMATION;
struct _RPC_SECURITY_QOS_V4_W;
struct _RESOURCEMANAGER_COMPLETION_INFORMATION;
struct __midl_frag1518_t;
struct _JOB_INFO_1W;
struct _SYSTEM_VERIFIER_FAULTS_INFORMATION;
class BUCL::CConvertToUnsignedType<unsigned int>;
class BUCL::CIsSignedType<short>;
struct _NCRYPT_KEY_BLOB_HEADER;
struct IUnwrappableDataObject;
struct _IMAGEHLP_STACK_FRAME;
struct MEMSTM;
class BUCL::CConvertToUnsignedType<long>;
struct SYMSRV_INDEX_INFO;
struct _CHANGER_SET_ACCESS;
struct _JOBOBJECT_BASIC_UI_RESTRICTIONS;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;
struct __MIDL_ICallFrame_0001;
struct tagMIXERCAPSW;
struct __midl_frag54_t;
struct _FILE_NUMA_NODE_INFORMATION;
struct Windows::Rtl::IRtlROFOStream;
struct _SECURITY_CAPABILITIES;
struct Windows::Rtl::IRtlFormattableInterface::FormattingLevels;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;
struct _COMMTIMEOUTS;
struct TYPEINFOVTBL;
struct _CMSG_CMS_SIGNER_INFO;
struct IIdentifyHive;
class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>::iterator;
struct PARAM_ATTRIBUTES;
struct PARAM_DESCRIPTION;
struct HWAVE__;
struct ISyncAdvise;
struct _CrtMemBlockHeader;
class Windows::Rtl::StringTraits<_LUTF8_STRING>;
struct tagMCI_VD_STEP_PARMS;
struct tagPELARRAY;
struct _PROCESS_DEVICEMAP_INFORMATION_EX;
struct tagDVTARGETDEVICE;
struct Windows::AutoPointerBase<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >::is_pointer<Windows::Rtl::IRtlWOUCSStream *>;
struct __midl_frag378_t;
struct tagI_RpcProxyCallbackInterface;
class CArray<CCacheNode>;
struct tagMCI_SEEK_PARMS;
struct IFunctionInstance;
class CLimitedWritableStorage::Commit::__l3::<lambda_CC1FC64EEBB82396>;
struct Windows::Rtl::IRtlFormattableObject::FormattingLevels;
struct __midl_frag282_t;
class CClipboardBroker::ValidateAndAcquireACImpersonationSource::__l14::<lambda_CDF35D9A0ACF867E>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> const >;
class CApartmentHashTable;
struct __midl_frag450_t;
class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>::COperatorAmpersandReturnType;
class Common::AutoPtr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,&ARI::AutoPtrAriHeapDeallocate<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION> >;
struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION;
struct _IMAGEHLP_MODULEW64;
struct IUserTokenWithImpersonate;
struct _PORT_DATA_INFORMATION;
struct __midl_frag48_t;
struct _ALPC_HANDLE_ATTR;
struct __midl_frag382_t;
struct _SERVICE_TRIGGER_INFO;
struct tagCALPOLESTR;
struct _DOC_INFO_2A;
struct _COVERAGE_UNLOADED_MODULE_ENTRY;
class CClipDataObject;
class Windows::Rtl::StringTraits<_LUNICODE_STRING>;
struct tagPARAMDESCEX;
struct _RTLP_PROCESS_REFLECTION_CONTEXT;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> const >;
struct Windows::AutoPODBase<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::is_pointer<_LUTF8_STRING>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStorage> >;
struct __midl_frag409_t;
struct _BCRYPT_DH_KEY_BLOB;
struct pvalueW;
struct _PRIV_SCM_INFO;
struct _FILE_SFIO_VOLUME_INFORMATION;
struct _HEAP_BLOCK_SETTABLE_INFORMATION;
struct __midl_frag699_t;
class CLimitedStreamBase::LockRegion::__l3::<lambda_1118F1833D0D7A0F>;
struct _TXFS_LIST_TRANSACTIONS_ENTRY;
struct _PORT_INFO_2W;
struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS;
struct _CMC_RESPONSE_INFO;
struct _MUTANT_OWNER_INFORMATION;
struct _FORMAT_PARAMETERS;
struct OPENCARD_SEARCH_CRITERIAA;
struct __midl_frag732_t;
struct __midl_frag1451_t;
struct _RPC_CLIENT_INTERFACE;
struct __midl_frag1330_t;
struct _CTL_USAGE_MATCH;
struct COPYFILE2_EXTENDED_PARAMETERS;
struct PrintPropertiesCollection;
class LargeIntRegMultiply<unsigned int,__int64>;
struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA;
struct _SYSTEM_VDM_INSTEMUL_INFO;
struct provider_info;
struct __midl_frag183_t;
class AdditionHelper<__int64,unsigned __int64,13>;
struct __midl_frag322_t;
struct HMIXER__;
struct __midl_frag142_t;
struct __midl_frag1520_t;
struct _CRYPT_SIGN_MESSAGE_PARA;
struct _MMIOINFO;
struct __midl_frag931_t;
class CArray<CStatData>;
struct pcmwaveformat_tag;
struct LockCookie;
class RenderFormat::__l40::<lambda_E19A7055556DA8EC>;
struct __midl_frag1043_t;
struct servent;
class CClipboardBroker;
class Windows::AutoPointerBase<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;
struct _MEMORYSTATUSEX;
struct _STORAGE_OFFLOAD_READ_OUTPUT;
struct _RTL_GENERIC_TABLE;
struct STORAGE_BREAK_RESERVATION_REQUEST;
struct __midl_frag1857_t;
class CClipboardBroker::CClipboardBrokerMTAHelper;
class CSharedMemoryBlock;
struct __midl_frag1322_t;
struct _ICONINFOEXA;
class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> >;
struct IBindCallbackRedirect;
struct tagMCI_ANIM_PLAY_PARMS;
struct _PERF_COUNTER_DEFINITION;
struct tagEMRGLSBOUNDEDRECORD;
struct _HMAPPER;
struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT;
struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT;
struct __midl_frag767_t;
struct tMIXERCONTROLDETAILS;
struct _NDR64_BUFFER_ALIGN_FORMAT;
struct tagHANDLETABLE;
class Windows::Internal::GitPtr;
struct _WINTRUST_DATA;
struct __midl_frag233_t;
struct _PREVENT_MEDIA_REMOVAL;
struct WINTRUST_CERT_INFO_;
struct tagJOYCAPS2A;
struct _PROVIDOR_INFO_2W;
struct __midl_frag295_t;
struct IStackWalker;
struct DISPLAYCONFIG_MODE_INFO;
struct IXMLDocument;
class Microsoft::WRL::ComPtr<IUnwrappableDataObject>;
struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT;
struct _MEMORY_REGION_INFORMATION;
class CBool;
struct DDELN;
class Microsoft::WRL::Details::RemoveIUnknownBase<IRuntimeBroker>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> >;
struct _SET_PARTITION_INFORMATION_EX;
class Microsoft::WRL::ComPtr<IOSTaskCompletion>;
struct OPENCARDNAMEA;
struct _KEY_NODE_INFORMATION;
struct tagMCI_WAVE_DELETE_PARMS;
union WPP_PROJECT_CONTROL_BLOCK;
struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA;
struct __midl_frag1014_t;
struct tagOLEMENUITEM;
struct tagOLEMENU;
struct _CONTRACT_DESCRIPTION;
struct __midl_frag1177_t;
class CStaticWriteLock;
struct DDEUP;
struct __midl_frag225_t;
struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION;
struct tagMCI_OVLY_SAVE_PARMSW;
struct _FILE_FS_OBJECTID_INFORMATION;
struct SCopyVars;
struct __midl_frag1310_t;
struct HWAVEOUT__;
struct _SYSTEM_FIRMWARE_TABLE_HANDLER;
struct __midl_frag316_t;
class CContainer_PolicySysFree;
struct _SYSTEM_FIRMWARE_TABLE_INFORMATION;
class CSeekPointer;
struct tagNCCALCSIZE_PARAMS;
struct IRunnableObjectVtbl;
struct IExternalConnection;
class CDocFile;
struct IEnumRGBQuad;
struct sockaddr;
struct __midl_frag1722_t;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ApartmentShutdownNode> const >;
struct _TXFS_READ_BACKUP_INFORMATION_OUT;
class CStmBufRead;
struct __midl_frag1799_t;
struct _TP_DEBUG_FREE_INFO;
struct _SYSDBG_PHYSICAL;
struct __midl_frag205_t;
struct _CORE_PRINTER_DRIVERA;
struct __midl_frag1161_t;
struct _ENLISTMENT_BASIC_INFORMATION;
struct tagSTATDATA;
class CAutoHandle_Policy<HPEN__ *>;
struct _mega_MIDL_PROC_FORMAT_STRING;
struct _TIMER_BASIC_INFORMATION;
struct HRSRC__;
struct _IMAGELIST;
struct __midl_frag1803_t;
struct _CERT_CRL_CONTEXT_PAIR;
class CLimitedWritableStorage::SetStateBits::__l3::<lambda_C6BB18B0BF4BE775>;
struct _REASON_BUFFER;
struct _WORKER_FACTORY_BASIC_INFORMATION;
struct __midl_frag99_t;
struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64;
struct _FILE_STREAM_INFORMATION;
struct __midl_frag446_t;
struct __midl_frag1015_t;
struct tagMInterfacePointer;
class BUCL::CConvertToSignedType<__int64>;
struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION;
struct tm;
struct __midl_frag24_t;
struct _HARDWARE_COUNTER;
class CBmpLoader;
struct tagEMRFORMAT;
struct _SD_GLOBAL_CHANGE_OUTPUT;
struct _FILE_ID_INFO;
struct HFONT__;
class Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *>;
struct _BCRYPT_KEY_DATA_BLOB_HEADER;
struct HMMIO__;
struct _xml_error;
class Microsoft::WRL::Details::RuntimeClassBaseT<14>;
struct MAP_SHARED<MAP_KEY_GUID,TYPEINFOVTBL *>;
struct _CERTIFICATE_BLOB;
struct __midl_frag959_t;
struct _PROCESS_EXTENDED_BASIC_INFORMATION64;
struct __midl_frag1492_t;
struct tagOIFI;
struct __midl_frag1816_t;
struct HDESK__;
struct tagMIXERCONTROLDETAILS_LISTTEXTW;
struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION;
struct _THREAD_UMS_INFORMATION;
struct IWinInetCacheHints;
struct __midl_frag739_t;
class CallFrame;
struct _PORT_INFO_3A;
struct __midl_frag39_t;
struct __midl_frag1694_t;
struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA;
struct _NCB;
struct __midl_frag1484_t;
struct _CMSG_MAIL_LIST_RECIPIENT_INFO;
struct ICallFrameWalker;
struct HSTR__;
struct IPrintDialogServices;
struct tagEMRSETMAPPERFLAGS;
struct tagCBT_CREATEWNDA;
struct tagDDEDISPATCHDATA;
struct __midl_frag1203_t;
struct tagPIDData;
struct _DEVICEDUMP_PRIVATE_SUBSECTION;
class CDdeServerCallMgr;
struct EXECUTEACK;
struct CDefClient::CUnknownImpl;
struct CDefClient::COleClientSiteImpl;
struct CDefClient::CAdviseSinkImpl;
class CDefClient;
struct ANON_OBJECT_HEADER_BIGOBJ;
struct _DISK_CONTROLLER_NUMBER;
struct _FILE_DISPOSITION_INFORMATION;
struct PPM_WMI_IDLE_STATES;
struct _PRINTER_INFO_9A;
struct _SE_IMPERSONATION_STATE;
struct _PRINTER_INFO_7A;
struct _currencyfmtA;
struct AsyncIRemUnknown;
struct InterfaceWalkerFree;
struct __midl_frag934_t;
struct tagDRAWITEMSTRUCT;
struct __s_GUID;
struct __midl_frag468_t;
class CScmPatternTbl;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned char>;
struct IXMLElement;
struct _CERT_CHAIN_ENGINE_CONFIG;
struct _GETVERSIONINPARAMS;
struct tagEMREXTSELECTCLIPRGN;
struct tagRemSNB;
struct _STORAGE_DEVICE_DESCRIPTOR;
struct __midl_frag1609_t;
struct IRpcChannelBuffer3;
struct DISPATCH_FRAME;
struct sockproto;
struct __midl_frag1000_t;
class CReadMInterfacePointerWithSourceAttributesMarshalingStream;
struct __midl_frag1139_t;
struct _FILE_END_OF_FILE_INFO;
class Windows::Rtl::StringTraits<_UNICODE_STRING>;
class CBaseInterfaceDataMarshalingStream;
struct tagEMRSETPALETTEENTRIES;
struct _PRINTER_INFO_4A;
class CLimitedWritableStorage::SetElementTimes::__l3::<lambda_8A48F4084DADEF3>;
struct _EX_ATTRIBUTE_INFORMATION_REGISTRATION;
struct _PRINTER_NOTIFY_OPTIONS;
struct _VERIFY_INFORMATION;
struct HMIDI__;
struct IXTLRuntime;
class DDE_CHANNEL;
struct __midl_frag1610_t;
struct _CM_SONIC_DEVICE_DATA;
struct IContext;
struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION;
struct localeinfo_struct;
struct CDdeObject::CProxyManagerImpl;
struct STARTING_LCN_INPUT_BUFFER;
struct __midl_frag738_t;
struct STARTING_VCN_INPUT_BUFFER;
struct Windows::AutoPODBase<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::is_pointer<_LUNICODE_STRING>;
struct FIND_BY_SID_DATA;
struct NCryptKeyName;
struct _CHANGER_SEND_VOLUME_TAG_INFORMATION;
struct MFT_ENUM_DATA_V1;
struct HAS_INTERFACES;
struct netent;
struct __midl_frag449_t;
struct READ_FILE_USN_DATA;
class CReadOnlyStorage;
struct USN_RECORD_V3;
class Microsoft::WRL::Details::RemoveIUnknownBase<IUnknown>;
struct __midl_frag242_t;
struct _callframeinternal_MIDL_PROC_FORMAT_STRING;
struct _EFS_COMPATIBILITY_INFO;
struct __midl_frag1372_t;
struct PPM_WMI_PERF_STATES_EX;
struct tagWAVEOUTCAPS2A;
struct _ais_MIDL_TYPE_FORMAT_STRING;
struct __midl_frag34_t;
struct tagWAVEINCAPSW;
struct PPM_IDLE_ACCOUNTING_EX;
class CLimitedWritableStorage::CreateStorage::__l3::<lambda_E9CECF399B911A5C>;
struct PPM_PERFSTATE_DOMAIN_EVENT;
struct PPM_IDLESTATE_EVENT;
struct _ADDJOB_INFO_1A;
struct PPM_THERMALCHANGE_EVENT;
struct PROCESSOR_IDLESTATE_POLICY;
struct tagAUXCAPSA;
struct NOTIFY_USER_POWER_SETTING;
struct RTL_ACE_DATA;
class COXIDTable;
struct _CRT_DOUBLE;
struct _LONGDOUBLE;
struct __midl_frag1805_t;
struct SHELLHOOKINFO;
struct FLASHWINFO;
struct __midl_frag770_t;
struct MENUITEMTEMPLATEHEADER;
struct RPC_STATS_VECTOR;
class CLimitedWritableStream::Write::__l3::<lambda_FC1ED2C6D0404BF6>;
struct tagMCI_INFO_PARMSW;
struct __midl_frag1666_t;
struct RPC_CLIENT_INFORMATION1;
struct RPC_ENDPOINT_TEMPLATEA;
class Microsoft::WRL::FtmBase;
struct tagCHOOSECOLORW;
struct __midl_frag57_t;
struct RPC_INTERFACE_TEMPLATEW;
struct _MONITOR_INFO_2A;
struct UDATE;
class _RTL_CONSTANT_STRING_remove_const_template_class<2>;
struct _DATATYPES_INFO_1W;
struct __midl_frag1440_t;
struct IUriContainer;
struct ICacheControl;
struct _ZONEATTRIBUTES;
struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION;
struct _EFS_DECRYPTION_STATUS_INFO;
struct _CHAR_INFO;
struct IOleCache;
struct _BCRYPT_PKCS1_PADDING_INFO;
struct _PS_CPU_QUOTA_SET_INFORMATION;
struct NTFS_VOLUME_DATA_BUFFER;
struct _SYSTEM_MEMORY_INFORMATION;
struct Microsoft::WRL::Details::FactoryCache;
struct _MESSAGE_RESOURCE_DATA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> const >;
struct _CRYPT_KEY_VERIFY_MESSAGE_PARA;
struct OPENCARDNAME_EXA;
struct _TOKEN_AUDIT_POLICY;
struct NET_ADDRESS_INFO_;
struct __midl_frag1410_t;
struct _BCRYPT_PROVIDER_NAME;
struct _stat32;
struct IMonikerVtbl;
struct _OBJECT_TYPES_INFORMATION;
struct _FILE_REMOTE_PROTOCOL_INFO;
class CDefObject::CAdvSinkImpl;
struct _STORAGE_IDLE_POWERUP_REASON;
struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC;
struct tagMCI_OVLY_RECT_PARMS;
class CDefClassFactory;
struct tagCONNECTDATA;
struct ITypeFactory;
class Microsoft::WRL::Wrappers::Mutex;
class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>;
struct _GDI_NONREMOTE;
struct tagWAVEINCAPS2A;
struct _APPINFO_STARTUPINFO;
struct _PRINTER_INFO_3;
struct IHttpNegotiate;
union __m64;
struct __midl_frag56_t;
class CLimitedWritableStream::Commit::__l3::<lambda_EA8073E2406EBE81>;
struct __midl_frag104_t;
struct __midl_frag809_t;
class CRpcCall;
struct tagINTERFACEINFO;
struct _CM_EISA_FUNCTION_INFORMATION;
class CReadOnlyStream::Clone::__l3::<lambda_F4743C547ADAAD6D>;
struct STblHdr;
struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>;
struct _STORAGE_IDLE_POWER;
struct IEnumCallback;
struct IDispatchVtbl;
struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS;
struct tagCANDIDATELIST;
class OLE_TYPEMGR;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IAgileObject,1,0>;
struct __midl_frag964_t;
struct wavehdr_tag;
struct _BEM_REFERENCE;
struct __midl_frag1819_t;
struct XLOCK_LEAF;
struct IInternetProtocolRoot;
struct tagMIDIINCAPSW;
struct IRunningObjectTableVtbl;
struct DISPLAYCONFIG_TARGET_DEVICE_NAME;
struct _KEY_FLAGS_INFORMATION;
struct __midl_frag453_t;
struct _NDR64_IID_FORMAT;
struct IPolicy;
struct CDdeObject::CUnknownImpl;
struct CDdeObject::COleObjectImpl;
struct CDdeObject::CDataObjectImpl;
struct CDdeObject::CPersistStgImpl;
struct CDdeObject::COleItemContainerImpl;
struct CDdeObject::CRpcStubBufferImpl;
class CDdeConnectionTable;
class CDdeObject;
struct RPC_IMPORT_CONTEXT_P;
struct _OBJECT_HANDLE_FLAG_INFORMATION;
struct tagCOMPOSITIONFORM;
class Microsoft::WRL::ComPtr<IDataObject>;
class CBrokeredClipDataObject;
struct __midl_frag23_t;
struct __midl_frag657_t;
class CMessageCall;
struct IPropertySetStorage;
struct BITMAPV5HEADER;
class RunSyncOnMTAThread::__l6::<lambda_202A87E349F7136C>;
struct __midl_frag381_t;
struct _TRACE_GUID_REGISTRATION;
struct IPipeDouble;
struct _SET_DISK_ATTRIBUTES;
struct tagOutgoingCallData;
struct tagIncomingCallData;
struct tagSOleTlsData;
class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>;
class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator;
struct __midl_frag286_t;
class CPerContext;
struct CFileStream;
union tagBINDPTR;
class MultiplicationHelper<unsigned long,unsigned long,3>;
struct _DPA;
struct __midl_frag241_t;
struct __midl_frag302_t;
struct _MonikerReadStruct;
class CChannelHandle;
struct __midl_frag1298_t;
struct _prop_MIDL_EXPR_FORMAT_STRING;
struct _mpProp;
struct __midl_frag40_t;
struct __midl_frag13_t;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>;
struct _GET_DISK_ATTRIBUTES;
struct __midl_frag403_t;
class Microsoft::WRL::Details::RemoveIUnknownBase<IEnumFORMATETC>;
class CGdiCustodian;
struct _PERSISTENT_RESERVE_COMMAND;
class CNtfsEnumSTATSTG;
class CDualStringArray;
struct _tagSCtxListIndex;
struct _KUSER_SHARED_DATA;
struct CClassCache::CFinishComposite::node;
class CCtxConnectionManager;
struct _OLETARGETDEVICE;
class CPrivAlloc;
class SafeIntInternal::SafeIntExceptionHandler<SafeIntException>;
struct ISystemActivator;
struct __midl_frag283_t;
struct IMessageFilter;
class CTContainer_PolicyCoTaskMem;
class CDwordBag;
class CPointerMoniker;
class CAutoHandle_Policy<HMENU__ *>;
struct tagFINDREPLACEA;
struct __midl_frag206_t;
struct _TRANSMIT_FILE_BUFFERS;
class Microsoft::WRL::ComPtr<IStream>;
struct IEnumGUID;
struct CRIFTable::tagRIFEntry;
struct __midl_frag46_t;
class Microsoft::WRL::Details::RemoveIUnknownBase<IWeakReference>;
struct tagPROPBAG2;
struct tagWAVEOUTCAPS2W;
class CArray<CPageHolder *,CPageHolder * &>;
struct _DEVICE_TRIM_DESCRIPTOR;
struct __midl_frag101_t;
struct _CRYPT_PROVIDER_REGDEFUSAGE;
class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>;
struct __midl_frag315_t;
struct tagQACONTROL;
struct WINTRUST_BLOB_INFO_;
struct __midl_frag1690_t;
struct tagMIXERCONTROLDETAILS_LISTTEXTA;
struct WINTRUST_FILE_INFO_;
struct WINTRUST_CATALOG_INFO_;
struct __midl_frag415_t;
struct _SESSION_BUFFER;
struct _CRYPT_PROVIDER_FUNCTIONS;
struct __midl_frag394_t;
struct __midl_frag210_t;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >;
struct __midl_frag200_t;
struct _CRYPT_PROVIDER_SGNR;
struct _CRYPT_PROVIDER_CERT;
struct _ProcessActivatorToken;
struct __midl_frag231_t;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0>;
struct _OFNOTIFYA;
class LargeIntRegMultiply<unsigned __int64,unsigned __int64>;
struct __midl_frag1226_t;
struct __midl_frag390_t;
class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUNICODE_STRING> >;
struct _NDR64_FIX_ARRAY_HEADER_FORMAT;
struct __midl_frag1641_t;
struct _PROVDATA_SIP;
struct tagMIDIINCAPS2W;
struct __midl_frag129_t;
struct _CRYPT_PROVIDER_SIGSTATE;
class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper>;
struct Microsoft::WRL::Details::ImplementsBase;
struct __midl_frag863_t;
struct _IMAGEHLP_CBA_READ_MEMORY;
class Windows::Auto<Windows::Rtl::IRtlROFOStream *>;
class CExposedDocFile;
struct _CAT_MEMBERINFO2;
struct _MINIDUMP_FUNCTION_TABLE_STREAM;
struct _SPC_FINANCIAL_CRITERIA;
struct _MINIDUMP_USER_STREAM;
struct __midl_frag881_t;
struct _DEVICEDUMP_RESTRICTED_SUBSECTION;
struct _MINIDUMP_THREAD_EX_LIST;
struct __midl_frag1877_t;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef>;
class BUCL::CConvertToSignedType<unsigned __int64>;
class CAbstractMarshalingStream;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;
struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits;
struct __midl_frag873_t;
struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY;
struct _MINIDUMP_USER_RECORD;
struct _MINIDUMP_THREAD_LIST;
class CClass;
struct _MINIDUMP_MISC_INFO;
struct _SPC_INDIRECT_DATA_CONTENT;
struct _MINIDUMP_MEMORY_INFO_LIST;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Reset::__l3::<lambda_BA168E9DE3CFD21B>;
class Windows::AutoOperatorAmpersandConstHelper<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;
class Microsoft::WRL::Wrappers::HString;
struct __midl_frag728_t;
class CBasedDeltaBlockPtrPtr;
class CBasedTransactedStreamPtr;
class CDeltaList;
class CTransactedStream;
struct _SPC_SP_OPUS_INFO;
struct _SPC_PE_IMAGE_DATA;
struct RTL_FILTER_LUNICODE_STRING_CTX;
struct __midl_frag1704_t;
struct _SPC_IMAGE;
struct tagExtentInfo;
class ARI::ProcessToken::AutoSysAppId;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD;
struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP;
struct tagPOINTF;
class CNumInfo;
class CEnumHolder;
struct __midl_frag1513_t;
struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY;
struct _PORT_INFO_3W;
struct Microsoft::WRL::RuntimeClassFlags<2>;
struct _IMAGEHLP_MODULE64;
struct __midl_frag163_t;
struct tagCADWORD;
struct _mega_MIDL_EXPR_FORMAT_STRING;
struct __midl_frag1457_t;
class BUCL::CConvertToSignedType<unsigned short>;
struct SYMSRV_INDEX_INFOW;
struct API_VERSION;
class CEnumFormatEtc;
struct tagMIXERLINEW;
struct __midl_frag487_t;
struct _SRCCODEINFO;
struct MINIDUMP_EXCEPTION_STREAM;
struct Microsoft::WRL::RuntimeClassFlags<14>;
struct _LDT_ENTRY;
class CALLFRAME_CACHE<TYPEINFOVTBL>;
class CLimitedWritableStream::Clone::__l3::<lambda_B9A5E8BAA9924D4D>;
struct _TAPE_WMI_OPERATIONS;
struct _TAPE_ERASE;
struct __midl_frag128_t;
struct tagOCPFIPARAMS;
struct __midl_frag36_t;
struct __midl_frag186_t;
struct _TAPE_CREATE_PARTITION;
struct _TAPE_SET_MEDIA_PARAMETERS;
struct _iinspectablederived_MIDL_PROC_FORMAT_STRING;
class CRefExportCount;
struct _customREMOTE_REPLY_SCM_INFO;
class CThreadCheck;
class CRefStabilize;
struct __midl_frag702_t;
class PDeSerStream;
class PSerStream;
struct CompObjHdr;
struct __midl_frag532_t;
struct __midl_frag1079_t;
struct tagFORMATIDOFFSET;
class CSafeAccess;
struct HSTRING__;
class CDFBasis;
struct __midl_frag1488_t;
struct tagMCI_PLAY_PARMS;
class CWrapperBase<IEnumFORMATETC>::{dtor}::__l3::<lambda_5B474553FA606D78>;
class CPropertySetStream;
struct __midl_frag867_t;
struct CStreamChunk;
struct __midl_frag1231_t;
struct _MonikerWriteStruct;
class Microsoft::WRL::Details::RemoveIUnknownBase<IEnumSTATSTG>;
struct HCONVLIST__;
struct _INDIRECTPROPERTY;
class CArray<CProperty *,CProperty * &>;
struct FR;
struct _NDR64_VAR_ARRAY_HEADER_FORMAT;
struct tagMONHSZSTRUCTW;
class BUCL::CConvertToSignedType<signed char>;
class ScheduleClipboardWorkWithPLM::__l15::<lambda_12D3045CEFEFBAF>;
struct midihdr_tag;
class EventPoolEntry;
class CDirSect;
struct tagSAmdRegs;
struct __midl_frag1482_t;
class CLimitedWritableStream::SetSize::__l3::<lambda_29B2CCEB6A2CEC56>;
class GenericStream;
struct SEntryBuffer;
class Microsoft::WRL::ComPtr<IMarshalingStream>;
struct __midl_frag718_t;
struct tagMONCONVSTRUCT;
class PDocFile;
class CCliModalLoop::SuspendPointerMessageReorderingForCallout;
struct tagMONLINKSTRUCT;
class TStackBuffer<tagPROPVARIANT,64>;
class Windows::AutoPointerBase<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;
class CComCat::CInnerUnk;
struct Microsoft::WRL::Details::BoolStruct;
class CLocalAlloc;
class Microsoft::WRL::ComPtr<ClipboardDataObjectTask>;
class CWrapperBase<IStream>;
struct INTERPRETER_OPT_FLAGS2;
struct NDR_PROC_HEADER_EXTS;
struct __midl_frag1469_t;
class Windows::Auto<_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT>;
struct IRunAsClipboard;
struct __midl_frag336_t;
struct __midl_frag161_t;
class TStackBuffer<unsigned short *,64>;
struct __midl_frag1697_t;
struct __midl_frag1872_t;
struct __midl_frag1349_t;
class DeserializeHelper;
struct __midl_frag735_t;
class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnType;
class SerializedPropertyReader;
struct __midl_frag1455_t;
struct _EVENT_FILTER_DESCRIPTOR;
struct _OFLONGSTRUCTA;
struct tagSRVRDISPATCHDATA;
struct FONTFACEDATA;
class BUCL::CConvertToUnsignedType<int>;
struct BUCL::ComparisonResultKind<BUCL::Rtl::CCallDisposition>;
class BUCL::CIsSignedType<signed char>;
class BUCL::CConvertToSignedType<unsigned long>;
class BUCL::CConvertToUnsignedType<unsigned __int64>;
class BUCL::CConvertToUnsignedType<__int64>;
class BUCL::MultiplyHelpers::CPromotedSize<unsigned int>;
class CSafeMoniker;
class BUCL::CIsSignedType<unsigned int>;
struct __midl_frag522_t;
struct _CRT_CRITICAL_SECTION;
struct __midl_frag192_t;
struct _iinspectablederived_MIDL_TYPE_FORMAT_STRING;
struct CONFIRM_CONFLICT_ITEM;
class CSafeBYTEArray;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;
class Windows::AutoPointerBase<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;
struct ICatInformation;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> >;
class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;
class CLimitedStreamBase::Seek::__l3::<lambda_56DB86726463D2C6>;
struct __midl_frag281_t;
class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;
struct Windows::ErrorHandling::StatusTypeNTSTATUS;
class Microsoft::WRL::ComPtr<IClipboardBroker>;
class CClipboardBroker::CClipboardBrokerExternalReference;
class Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame;
class Windows::ErrorHandling::CBaseFrame;
class CClassCache::CWinRTLocalSvrClassEntry;
class Windows::AutoOperatorAmpersandHelper<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;
struct __midl_frag38_t;
class CClassCache::CDllAptEntry;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRuntimeBroker> const >;
struct _PORT_INFO_1W;
struct WireThisPart2;
union WireThis;
class RunSyncOnMTAThread::__l6::<lambda_A5D95E4C135FCBCE>;
struct tagAUXCAPS2W;
struct _JOB_INFO_4W;
struct _PRINTER_INFO_8W;
class CTHeapAllocPolicy;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> const >;
struct __midl_frag219_t;
struct sockaddr_in;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >;
struct __midl_frag217_t;
struct _DISK_RECORD;
struct IClipboardBroker;
struct _HISTOGRAM_BUCKET;
struct APP_DATA::FreeListElem;
struct APP_DATA::FreeList;
struct _STORAGE_BUS_RESET_REQUEST;
struct _MONITOR_INFO_1A;
struct _DOC_INFO_3A;
struct ICallIndirect;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> const >;
struct tMIXERCONTROLDETAILS_SIGNED;
struct _EFS_PIN_BLOB;
struct _PRINTER_ENUM_VALUESW;
struct tagMCI_ANIM_WINDOW_PARMSA;
struct INdrVersion;
struct tagMCI_LOAD_PARMSA;
struct _BIDI_REQUEST_CONTAINER;
struct _PRINTER_INFO_7W;
struct tagMCI_OVLY_LOAD_PARMSA;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> >;
struct _STORAGE_DEVICE_NUMBER;
struct _EFS_RPC_BLOB;
struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits;
struct _ENCRYPTION_CERTIFICATE_HASH_LIST;
struct _READ_ELEMENT_ADDRESS_INFO;
struct _GET_MEDIA_TYPES;
struct DISPATCH_INTERCEPTOR;
struct tagMIXERCAPS2W;
struct _FIND_NAME_BUFFER;
class CAutoHandle_Policy<void *>;
struct _DISK_DETECTION_INFO;
struct _DEVICE_POWER_DESCRIPTOR;
struct tagMIDIINCAPSA;
struct tagMCI_VD_PLAY_PARMS;
struct _DRIVER_INFO_1W;
struct tagMIXERLINECONTROLSA;
struct tagWAVEINCAPSA;
struct _FORM_INFO_1W;
struct joyinfo_tag;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> >;
struct midiproptimediv_tag;
struct tagFINDREPLACEW;
struct _STORAGE_OFFLOAD_WRITE_OUTPUT;
class COleStaticLock;
struct _ADAPTER_STATUS;
struct _PERF_COUNTER_BLOCK;
struct VerbList;
struct OPENCARD_SEARCH_CRITERIAW;
class SafeCastHelper<unsigned long,unsigned long,0>;
struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR;
struct HDRVR__;
struct _DISK_LOGGING;
struct tagMCI_OVLY_SAVE_PARMSA;
struct __midl_frag1560_t;
struct _DISK_PERFORMANCE;
class CRIFTable;
struct IAdviseSink;
class CReadOnlyStorage::EnumElements::__l3::<lambda_EDF4E34D1FFC32DE>;
class CEnumCategoriesOfClass;
class CLock2;
struct SMIPIDHashNode;
class CEnumGeneric;
struct tagTYPEATTR;
struct tagSECTIONHEADER;
class CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>;
class CPropertySection;
class CDDEServer;
struct CFont::Save::__l2::FONTDATA;
struct _ldiv_t;
class CRgPv;
class CEnumConnectionsImpl;
struct SPatternEntry;
class CDAHolder;
class SafeIntException;
class CReadInterfaceDataFromInternalSourceMarshalingStream;
class CSplit_QI;
class Microsoft::WRL::WeakRef;
struct CONFLICT_ITEM_METADATA;
class Microsoft::WRL::Details::RemoveIUnknownBase<IInspectable>;
struct std::nothrow_t;
struct ClpboardOwnerState;
struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits;
struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ICallingProcessInfo> >;
struct RTL_FILTER_LUNICODE_STRING_FILTER;
class CCallTable;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDataObject> >;
class COIDTable;
struct CMemString_PolicyLocalMem;
struct tagQICONTEXT;
class CtxEntry;
class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::InitializeFormat::__l3::<lambda_8D5FB22F65A17B6>;
struct tagFORMATETC32;
struct FORMATETCDATA32;
class CClassCache;
class Microsoft::WRL::ComPtr<IEnumFORMATETC>;
struct ICallFrameEvents;
class CWrapperBase<IEnumFORMATETC>;
struct LEGACY_INTERCEPTOR;
class CClassCache::CFinishComposite;
struct OLEAUTOMATION_FUNCTIONS;
class MapEnumToSQMData<enum Ole32SQMFlags>;
class IInternalChannelBuffer;
class CAutoHandle_Policy<HFONT__ *>;
struct __midl_frag1316_t;
struct SNameKey;
class CLimitedStreamBase;
class CMarshalingStreamOnUserMarshalCallback;
class CEnumVerb;
class CDefLink::CPrivUnknown;
class CWrapperBase<IUnknown>::{dtor}::__l3::<lambda_E5C33FFF9ACC27CD>;
struct __midl_frag111_t;
struct __midl_frag117_t;
struct __midl_frag62_t;
struct _NDR64_USER_MARSHAL_FORMAT;
class CWrapperBase<IStorage>::{dtor}::__l3::<lambda_F81FF86945D4F89B>;
struct __midl_frag8_t;
struct __midl_frag17_t;
struct __midl_frag597_t;
struct IEnumGeneric;
struct __midl_frag1426_t;
struct __midl_frag180_t;
struct __midl_frag1221_t;
struct __midl_frag1795_t;
struct __midl_frag1866_t;
struct __midl_frag720_t;
struct __midl_frag1539_t;
struct __midl_frag431_t;
struct __midl_frag1650_t;
struct __midl_frag1615_t;
struct __midl_frag1726_t;
struct __midl_frag29_t;
struct __midl_frag1417_t;
struct __midl_frag1837_t;
struct __midl_frag893_t;
struct __midl_frag701_t;
struct __midl_frag917_t;
struct __midl_frag1386_t;
struct __midl_frag1639_t;
struct __midl_frag801_t;
struct tagFontPropSetTable;
struct __midl_frag1780_t;
struct __midl_frag816_t;
struct __midl_frag887_t;
struct __midl_frag1335_t;
struct __midl_frag1529_t;
struct __midl_frag1638_t;
struct METADC;
struct METAINFO;
struct __midl_frag1883_t;
struct __midl_frag1312_t;
struct __midl_frag1846_t;
struct __midl_frag221_t;
struct __midl_frag257_t;
struct __midl_frag827_t;
struct __midl_frag1251_t;
struct __midl_frag273_t;
struct __midl_frag1420_t;
struct __midl_frag1108_t;
struct __midl_frag585_t;
class CPtrBlock;
struct __midl_frag535_t;
struct __midl_frag1233_t;
struct __midl_frag1003_t;
struct __midl_frag1186_t;
class CStreamDummy;
struct __midl_frag895_t;
struct NEWHEADER;
struct __midl_frag552_t;
struct __midl_frag865_t;
struct __midl_frag1643_t;
struct __midl_frag649_t;
struct __midl_frag1829_t;
struct __midl_frag920_t;
struct __midl_frag905_t;
struct __midl_frag1674_t;
struct __midl_frag837_t;
struct __midl_frag1073_t;
class MultiplicationHelper<long,long,1>;
struct __midl_frag787_t;
struct __midl_frag27_t;
struct __midl_frag983_t;
struct __midl_frag1649_t;
struct __midl_frag45_t;
struct __midl_frag736_t;
struct __midl_frag940_t;
struct __midl_frag1624_t;
struct __midl_frag1655_t;
struct __midl_frag653_t;
class COlePropertySheet;
struct __midl_frag260_t;
class CPictioFileStream;
struct __midl_frag1110_t;
struct __midl_frag633_t;
struct __midl_frag1658_t;
struct __midl_frag841_t;
struct __midl_frag1432_t;
struct __midl_frag263_t;
struct __midl_frag125_t;
struct __midl_frag1146_t;
struct __midl_frag810_t;
struct __midl_frag615_t;
class CNotifyCP;
struct __midl_frag250_t;
struct __midl_frag330_t;
struct __midl_frag1158_t;
struct __midl_frag255_t;
struct __midl_frag1143_t;
struct __midl_frag306_t;
struct __midl_frag445_t;
struct __midl_frag352_t;
struct __midl_frag194_t;
struct __midl_frag232_t;
class CBasedDeltaBlockPtr;
struct __midl_frag669_t;
struct __midl_frag1402_t;
struct __midl_frag147_t;
struct __midl_frag1050_t;
struct __midl_frag1512_t;
struct __midl_frag1677_t;
struct __midl_frag473_t;
struct __midl_frag1622_t;
struct __midl_frag525_t;
struct __midl_frag1476_t;
struct __midl_frag1640_t;
struct __midl_frag526_t;
struct __midl_frag269_t;
struct __midl_frag417_t;
struct __midl_frag1434_t;
struct __midl_frag1358_t;
struct __midl_frag157_t;
struct __midl_frag808_t;
class CNtfsUpdateStreamName;
struct __midl_frag557_t;
struct __midl_frag1826_t;
struct __midl_frag1377_t;
struct __midl_frag1612_t;
class CNtfsSTATSTGArray;
struct __midl_frag37_t;
struct __midl_frag859_t;
struct __midl_frag376_t;
struct __midl_frag1465_t;
class CExpParameterValidate;
struct __midl_frag309_t;
struct __midl_frag1675_t;
struct __midl_frag230_t;
struct __midl_frag1031_t;
class LargeIntRegMultiply<__int64,__int64>;
struct __midl_frag1841_t;
struct __midl_frag279_t;
class LargeIntRegMultiply<unsigned __int64,unsigned int>;
struct __midl_frag741_t;
struct __midl_frag516_t;
struct __midl_frag1613_t;
struct __midl_frag366_t;
struct __midl_frag1126_t;
struct __midl_frag274_t;
struct __midl_frag175_t;
struct __midl_frag327_t;
struct __midl_frag1437_t;
struct __midl_frag835_t;
struct __midl_frag821_t;
struct __midl_frag1606_t;
struct __midl_frag167_t;
struct __midl_frag688_t;
struct __midl_frag1041_t;
struct __midl_frag889_t;
struct __midl_frag334_t;
struct __midl_frag603_t;
struct __midl_frag844_t;
struct __midl_frag1152_t;
struct __midl_frag148_t;
struct __midl_frag992_t;
struct __midl_frag266_t;
struct tagCATEGORYINFO;
struct __midl_frag1100_t;
struct __midl_frag1103_t;
struct __midl_frag586_t;
struct __midl_frag1192_t;
struct __midl_frag74_t;
struct __midl_frag398_t;
struct __midl_frag903_t;
struct __midl_frag1663_t;
struct IEnumCATEGORYINFO;
struct __midl_frag680_t;
struct __midl_frag439_t;
struct __midl_frag771_t;
struct __midl_frag1853_t;
struct __midl_frag1723_t;
struct __midl_frag1835_t;
class CEnumCategories;
struct __midl_frag885_t;
struct __midl_frag1634_t;
class std::bad_exception;
struct __midl_frag1423_t;
struct __midl_frag737_t;
struct __midl_frag948_t;
struct __midl_frag290_t;
struct __midl_frag1831_t;
struct __midl_frag264_t;
struct __midl_frag711_t;
struct __midl_frag1448_t;
struct __midl_frag173_t;
struct __midl_frag259_t;
class exception;
struct __midl_frag1592_t;
struct __midl_frag355_t;
struct __midl_frag1075_t;
struct __midl_frag1688_t;
struct __midl_frag805_t;
struct __midl_frag1563_t;
struct __midl_frag1719_t;
struct __midl_frag1343_t;
struct __midl_frag838_t;
struct __midl_frag1629_t;
struct __midl_frag1713_t;
struct __midl_frag621_t;
struct __midl_frag1685_t;
struct __midl_frag1838_t;
struct __midl_frag1026_t;
struct __midl_frag1524_t;
struct __midl_frag1166_t;
struct __midl_frag1070_t;
struct __midl_frag137_t;
struct __midl_frag875_t;
struct __midl_frag828_t;
struct __midl_frag1024_t;
struct __midl_frag1832_t;
struct __midl_frag911_t;
struct __midl_frag899_t;
struct __midl_frag135_t;
struct __midl_frag1824_t;
struct __midl_frag764_t;
struct __midl_frag929_t;
struct __midl_frag1679_t;
struct __midl_frag791_t;
struct __midl_frag1294_t;
struct __midl_frag509_t;
struct __midl_frag1053_t;
class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUTF8_STRING> >;
struct __midl_frag576_t;
struct __midl_frag1812_t;
struct __midl_frag18_t;
struct __midl_frag832_t;
struct __midl_frag1653_t;
struct __midl_frag1544_t;
struct __midl_frag754_t;
struct __midl_frag203_t;
struct __midl_frag154_t;
struct __midl_frag1698_t;
struct __midl_frag145_t;
struct __midl_frag1747_t;
struct __midl_frag1278_t;
struct __midl_frag1506_t;
struct __midl_frag461_t;
struct __midl_frag970_t;
struct __midl_frag1473_t;
struct __midl_frag223_t;
struct __midl_frag4_t;
struct __midl_frag823_t;
struct __midl_frag1346_t;
struct __midl_frag165_t;
struct __midl_frag496_t;
struct __midl_frag515_t;
struct __midl_frag1588_t;
struct __midl_frag978_t;
struct __midl_frag267_t;
struct __midl_frag777_t;
struct __midl_frag659_t;
struct __midl_frag261_t;
struct __midl_frag1379_t;
struct __midl_frag566_t;
struct __midl_frag584_t;
struct __midl_frag1214_t;
struct __midl_frag1680_t;
struct __midl_frag1522_t;
struct __midl_frag1702_t;
struct __midl_frag1338_t;
struct __midl_frag1811_t;
struct __midl_frag1843_t;
struct _PATCH_BUFFER;
struct __midl_frag542_t;
struct __midl_frag646_t;
struct __midl_frag924_t;
struct __midl_frag112_t;
struct __midl_frag782_t;
struct __midl_frag1709_t;
struct __midl_frag673_t;
struct DICTENTRYHEADER;
struct __midl_frag1209_t;
struct __midl_frag989_t;
struct __midl_frag1828_t;
struct __midl_frag78_t;
struct __midl_frag725_t;
struct __midl_frag1798_t;
struct __midl_frag1301_t;
struct __midl_frag1248_t;
struct __midl_frag1013_t;
struct __midl_frag1801_t;
struct __midl_frag65_t;
struct __midl_frag420_t;
struct __midl_frag211_t;
struct __midl_frag1091_t;
struct __midl_frag768_t;
struct __midl_frag1296_t;
struct __midl_frag1769_t;
struct SGetFreeStruct;
struct __midl_frag149_t;
struct __midl_frag846_t;
struct __midl_frag1645_t;
struct __midl_frag1782_t;
struct __midl_frag121_t;
struct __midl_frag994_t;
struct __midl_frag1842_t;
struct __midl_frag1647_t;
struct __midl_frag1242_t;
struct __midl_frag513_t;
struct __midl_frag1705_t;
struct __midl_frag836_t;
struct __midl_frag693_t;
struct __midl_frag1390_t;
struct __midl_frag1228_t;
struct __midl_frag1413_t;
struct __midl_frag10_t;
struct __midl_frag1275_t;
struct __midl_frag176_t;
struct __midl_frag855_t;
struct __midl_frag759_t;
struct __midl_frag213_t;
struct __midl_frag1672_t;
struct __midl_frag384_t;
struct __midl_frag1619_t;
struct __midl_frag1695_t;
struct __midl_frag1212_t;
struct __midl_frag1263_t;
struct __midl_frag1569_t;
struct __midl_frag1064_t;
struct __midl_frag612_t;
struct __midl_frag67_t;
struct __midl_frag1781_t;
struct __midl_frag1774_t;
struct __midl_frag629_t;
struct __midl_frag993_t;
struct __midl_frag1597_t;
struct __midl_frag123_t;
struct __midl_frag639_t;
struct __midl_frag320_t;
struct __midl_frag1683_t;
struct _mega_MIDL_TYPE_FORMAT_STRING;
class Windows::Internal::CoTaskMemPolicy<unsigned short>;
struct __midl_frag224_t;
struct __midl_frag799_t;
struct __midl_frag773_t;
struct __midl_frag951_t;
struct __midl_frag740_t;
struct __midl_frag1363_t;
struct __midl_frag1044_t;
struct __midl_frag237_t;
struct __midl_frag1190_t;
struct __midl_frag107_t;
struct __midl_frag1718_t;
struct __midl_frag115_t;
struct __midl_frag284_t;
struct __midl_frag722_t;
struct __midl_frag214_t;
struct __midl_frag879_t;
struct __midl_frag1635_t;
struct __midl_frag1578_t;
class CEndPointAtom;
struct __midl_frag239_t;
struct __midl_frag956_t;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumSTATSTG> >;
struct __midl_frag1763_t;
struct __midl_frag1490_t;
struct __midl_frag664_t;
struct __midl_frag1480_t;
struct __midl_frag593_t;
struct __midl_frag1038_t;
struct __midl_frag218_t;
struct __midl_frag709_t;
struct __midl_frag780_t;
class CTSmartObj<void *,CAutoHandle_Policy<void *> >;
struct __midl_frag1527_t;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> >;
struct __midl_frag1611_t;
struct __midl_frag1808_t;
struct __midl_frag1494_t;
struct __midl_frag340_t;
struct __midl_frag798_t;
struct __midl_frag156_t;
struct __midl_frag1005_t;
struct __midl_frag1714_t;
struct __midl_frag622_t;
struct __midl_frag1052_t;
struct __midl_frag1646_t;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>;
struct __midl_frag185_t;
struct __midl_frag1821_t;
struct __midl_frag1061_t;
struct __midl_frag1106_t;
struct __midl_frag204_t;
struct __midl_frag58_t;
struct __midl_frag678_t;
struct __midl_frag1010_t;
struct __midl_frag343_t;
struct __midl_frag127_t;
struct __midl_frag1863_t;
class CLimitedWritableStorage::Revert::__l3::<lambda_202158885EF0BB85>;
struct __midl_frag558_t;
struct __midl_frag1742_t;
struct __midl_frag757_t;
struct __midl_frag1701_t;
struct __midl_frag1287_t;
struct __midl_frag91_t;
struct __midl_frag769_t;
struct __midl_frag813_t;
struct __midl_frag371_t;
struct __midl_frag527_t;
struct __midl_frag1325_t;
struct __midl_frag297_t;
struct __midl_frag1716_t;
struct __midl_frag1237_t;
struct __midl_frag703_t;
struct __midl_frag712_t;
struct __midl_frag596_t;
class CBrokeredClipDataObject::GetCanonicalFormatEtc::__l9::<lambda_435835F2906B906C>;
struct __midl_frag1367_t;
struct __midl_frag1669_t;
struct __midl_frag845_t;
struct __midl_frag246_t;
class CLimitedWritableStorage::EnumElements::__l3::<lambda_75806E06F2DD87D9>;
class CReadOnlyStream::CopyTo::__l9::<lambda_7DA0A3C7D7999BB8>;
class CLimitedStreamBase::Stat::__l3::<lambda_859B9105128902AF>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> >;
struct IConnectionPointContainerVtbl;
class Microsoft::WRL::ComPtr<IEnumSTATSTG>;
struct IConnectionPointContainer;
class RunSyncOnMTAThread::__l6::<lambda_229B830753C4A8F8>;
struct IEnumConnectionPoints;
class CClipboardBroker::SetClipboard::__l43::<lambda_E6908BB0B11F0B55>;
struct IEnumConnectionPointsVtbl;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOSTaskCompletion> >;
struct IConnectionPoint;
struct IConnectionPointVtbl;
class ClipboardDataObjectTask;
struct IEnumConnections;
class CAutoHandle_Policy<HWND__ *>;
class CAutoHandle_Policy<HDESK__ *>;
class CWrapperBase<IUnknown>;
struct __midl_frag312_t;
struct __midl_frag130_t;
struct __midl_frag168_t;
struct __midl_frag1783_t;
struct IStorageVtbl;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStream> >;
struct FMTCACHE;
class CEnumFmt;
struct EnumVerbCache;
class CDefLink::CAdvSinkImpl;
class CDefLink;
struct tagHDIBFILEHDR;
class CAsyncConnection;
struct IEnumUnknownVtbl;
class CExposedStream;
class CLimitedStreamBase::Read::__l3::<lambda_89A7BD4872294177>;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Clone::__l3::<lambda_9BDFBD0AF00B6A49>;
class CLimitedWritableStorage::Stat::__l3::<lambda_A45E3065BC097B94>;
struct IAdviseSink2Vtbl;
struct IFillLockBytesVtbl;
class CPropSetName;
class CWrapperBase<IStream>::{dtor}::__l3::<lambda_F4605E2997508A8D>;
struct IContinueVtbl;
struct IViewObjectVtbl;
class CDropTarget;
struct DDEPOKE;
struct tagRECT16;
class CMapUintPtr;
struct IBindCtxVtbl;
class CBaseMInterfacePointerMarshalingStream;
class InitializeAndReadIsAppContainer::__l3::<lambda_1CB8F1C635DE6DBC>;
struct IEnumOLEVERBVtbl;
struct __CRT_LIST_ENTRY;
struct _CRT_CRITICAL_SECTION_DEBUG;
class istream;
struct AsyncIAdviseSinkVtbl;
class COleCache::CCacheUnkImpl;
class COleCache::CCacheDataImpl;
class COleCache::CCacheViewImpl;
class COleCache::CAdviseSinkImpl;
class COleCache;
struct IOleCache2Vtbl;
struct IEnumStringVtbl;
struct ISequentialStreamVtbl;
class CWriteInterfaceDataMarshalingStream;
struct ILockBytesVtbl;
struct IPropertyStore;
class RemoveClipboardDataObject::__l15::<lambda_E474B8135FEA7565>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> const >;
class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBroker,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>;
struct IEnumSTATDATAVtbl;
class Microsoft::WRL::Details::RemoveIUnknownBase<CClipboardBroker::CClipboardBrokerExternalReference>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> >;
struct IClassFactoryVtbl;
class Microsoft::WRL::ComPtr<IRuntimeBroker>;
struct IDataObjectVtbl;
class RenderFormat::__l29::<lambda_4E12DA02AC3212FD>;
struct __midl_frag1016_t;
struct CArray<CFormatEtc>::ArrayNode;
struct __midl_frag995_t;
struct __midl_frag226_t;
struct __midl_frag188_t;
struct __midl_frag150_t;
struct IAdviseSinkVtbl;
struct IImpersonateClipboardOwner;
struct AsyncIAdviseSink2Vtbl;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> const >;
struct IStreamVtbl;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> const >;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil> >,0,0>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil>,1,1>;
class Interceptor;
struct IInterceptorBase;
struct IEnumMonikerVtbl;
struct SSimpleWalker;
struct BSTR_INTERNAL;
class HashWSTR;
class Enum;
struct FRAME_GetTypeInfoCount;
class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;
struct IOleInPlaceActiveObjectVtbl;
struct FRAME_Invoke;
class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>;
struct tagMethodInfo;
struct _prop_MIDL_PROC_FORMAT_STRING;
struct __midl_frag26_t;
struct __midl_frag298_t;
struct MD_PARAM;
struct __midl_frag363_t;
struct __midl_frag265_t;
struct __midl_frag291_t;
struct _prop_MIDL_TYPE_FORMAT_STRING;
struct __midl_frag296_t;
struct __midl_frag182_t;
struct __midl_frag367_t;
struct __midl_frag83_t;
struct __midl_frag289_t;
struct __midl_frag227_t;
struct __midl_frag387_t;
struct __midl_frag240_t;
struct __midl_frag470_t;
struct __midl_frag234_t;
struct __midl_frag379_t;
struct __midl_frag100_t;
struct __midl_frag318_t;
struct __midl_frag94_t;
struct __midl_frag244_t;
struct __midl_frag301_t;
struct __midl_frag12_t;
struct __midl_frag247_t;
struct __midl_frag197_t;
struct __midl_frag253_t;
struct __midl_frag248_t;
struct __midl_frag189_t;
struct ITypeCompVtbl;
struct __midl_frag285_t;
struct __midl_frag215_t;
struct __midl_frag193_t;
struct __midl_frag184_t;
struct __midl_frag81_t;
struct __midl_frag319_t;
struct __midl_frag236_t;
struct __midl_frag229_t;
struct __midl_frag207_t;
struct __midl_frag482_t;
struct __midl_frag272_t;
struct __midl_frag77_t;
struct __midl_frag385_t;
struct __midl_frag181_t;
struct __midl_frag53_t;
struct __midl_frag304_t;
struct __midl_frag14_t;
struct __midl_frag400_t;
struct __midl_frag477_t;
struct __midl_frag126_t;
struct __midl_frag251_t;
struct __midl_frag410_t;
struct __midl_frag202_t;
struct __midl_frag105_t;
struct __midl_frag397_t;
struct __midl_frag373_t;
struct __midl_frag391_t;
struct __midl_frag308_t;
struct __midl_frag87_t;
struct __midl_frag303_t;
struct __midl_frag313_t;
struct __midl_frag451_t;
struct __midl_frag441_t;
struct __midl_frag222_t;
struct __midl_frag262_t;
struct __midl_frag388_t;
struct __midl_frag212_t;
struct __midl_frag438_t;
struct __midl_frag287_t;
struct __midl_frag462_t;
struct __midl_frag396_t;
struct __midl_frag249_t;
struct __midl_frag95_t;
struct __midl_frag418_t;
struct __midl_frag471_t;
struct __midl_frag292_t;
struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT;
struct __midl_frag76_t;
struct __midl_frag472_t;
struct __midl_frag5_t;
struct __midl_frag235_t;
struct __midl_frag6_t;
struct __midl_frag32_t;
struct __midl_frag270_t;
struct __midl_frag49_t;
struct __midl_frag52_t;
struct __midl_frag277_t;
struct __midl_frag220_t;
struct __midl_frag374_t;
struct __midl_frag305_t;
struct __midl_frag102_t;
struct __midl_frag196_t;
struct __midl_frag278_t;
struct _NDR64_NON_ENCAPSULATED_UNION;
struct __midl_frag460_t;
struct __midl_frag268_t;
struct __midl_frag422_t;
struct __midl_frag245_t;
struct __midl_frag365_t;
struct __midl_frag294_t;
struct IEnumSTATPROPSETSTGVtbl;
struct IEnumSTATPROPSTGVtbl;
struct ICallFactoryVtbl;
struct REF_COUNTED_STRUCT;
class CLinkable;
class HashVoidPtr;
struct AllocateThrow;
struct SAFEARRAY_INTERNAL;
struct HREG;
struct __MIDL_ICallFrame_0002;
struct __MIDL_ICallFrame_0004;
struct OAUTIL;
struct METHOD_DESCRIPTOR;
class CALLFRAME_CACHE_ENTRY<TYPEINFOVTBL>;
struct INTERFACE_HELPER_CLSID;
class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>;
struct INTERPRETER_OPT_FLAGS;
struct MD_METHOD;
struct MD_INTERFACE;
struct MD_INTERFACE_CACHE;
struct INTERPRETER_FLAGS;
struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>;
struct MAP_HASHER<MAP_KEY_GUID>;
struct ICallInterceptor;
struct ICallFrame;
struct ICallFrameInit;
struct DedicatedAllocator<CallFrame>;
struct ICallUnmarshal;
struct IUnkInner;
struct MarshallingChannel;
struct IMarshalSomeone;
struct NDR_PROC_HEADER_EXTS64;
struct LEGACY_FRAME;
struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>;
struct DISPATCH_SERVER_FRAME;
struct DedicatedAllocator<DISPATCH_SERVER_FRAME>;
struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>;
class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc;
class GenericInstantiator<DISPATCH_INTERCEPTOR>;
class ClassRegistration;
class AppRegistration;
struct FRAME_GetTypeInfo;
struct FRAME_GetIDsOfNames;
struct _callframeinternal_MIDL_TYPE_FORMAT_STRING;
struct ITypeLibVtbl;
struct ITypeInfoVtbl;
struct IRecordInfoVtbl;
class CSafeBindCtx;
class CReadInterfaceDataWithSourceAttributesMarshalingStream;
struct tagDDECALLDATA;
struct IShellItem2;
struct _TREEITEM;
struct tagTVITEMEXW;
class CPackagerMoniker;
struct _IMAGELISTDRAWPARAMS;
struct _IMAGEINFO;
struct IOlePackagerLinkNotify;
struct IFunctionDiscoveryNotification;
struct tagDISPATCHDATA;
struct tagOLE1DISPATCHDATA;
struct DDEADVISE;
struct DDEDATA;
struct _SQM_STREAM_ENTRY_EX;
struct _SQM_STREAM_ENTRY;
class MapEnumToSQMData<enum RpcssSQMFlags>;
struct INFO;
struct tagDOCDISPATCHDATA;
struct _CLILIST;
class CMapDwordPtr;
struct _HOSTNAMES;
class CEnumSTATDATA;
class COAHolder;
class CMemBytes;
class CDragDefaultCursors;
class CForcedDropTarget;
class CompObjStmData;
class CCacheNode;
class ios;
class streambuf;
class iostream;
struct CArray<CCacheNode>::ArrayNode;
class CEnumStatData;
class CMfObject;
struct _METAINFO;
class CEMfObject;
class CGenObject;
struct Microsoft::WRL::RuntimeClassFlags<3>;
class CancellableCall;
class Microsoft::WRL::Details::RemoveIUnknownBase<IDataObject>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >;
class CClipClientDataWrapper;
class Windows::Internal::GitPtrImpl<Windows::Internal::GitPtr>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> const >;
class Microsoft::WRL::Details::RemoveIUnknownBase<IUnwrappableDataObject>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBroker> >;
struct FORMATETCDATAARRAY32;
class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil> >,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Microsoft::WRL::FtmBase,1,1>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0>;
class RunSyncOnMTAThread::__l6::<lambda_2417A7241A3718ED>;
class Microsoft::WRL::ComPtr<CBrokeredClipDataObject>;
class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IClipboardBroker,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>;
struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IClipboardBroker,Microsoft::WRL::Details::Nil>,0,0>;
class Microsoft::WRL::ComPtr<ICallingProcessInfo>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> const >;
class Microsoft::WRL::Details::RemoveIUnknownBase<ICallingProcessInfo>;
class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> >;
class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IClipboardBrokerInternal,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> const >;
class Microsoft::WRL::Details::RemoveIUnknownBase<IClipboardBrokerInternal>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >;
class Microsoft::WRL::Details::RemoveIUnknownBase<CClipboardBroker::CClipboardBrokerMTAHelper>;
class CBrokerInstanceHolder;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IRuntimeBroker> >;
class ClipboardBrokerFactory;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> >;
class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerExternalReference,0>;
class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerMTAHelper,0>;
class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBroker,0,0>;
struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBrokerInternal,0,0>;
class RunSyncOnMTAThread::__l6::<lambda_2E683E8F639D62FE>;
class CClipboardBroker::SetClipboard::__l27::<lambda_AB1878220BE05968>;
class Microsoft::WRL::Details::RemoveIUnknownBase<IOSTaskCompletion>;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> >;
class CGenericObject;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> const >;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >;
class Microsoft::WRL::Details::RemoveIUnknownBase<CBrokeredClipDataObject>;
class CClipDataObject::GetRealDataObjPtr::__l45::<lambda_7601126E30B421F7>;
class CAutoHandle_HGLOBALPolicy;
class CTContainer_PolicyLocalMem;
class CTContainer_PolicyHeapMem;
class CAutoHandle_Policy<HKEY__ *>;
class CAutoHandle_Policy<HACCEL__ *>;
class CAutoHandle_Policy<HICON__ *>;
class CAutoHandle_Policy<HWINSTA__ *>;
class CAutoHandle_Policy<HBITMAP__ *>;
class CAutoHandle_Policy<HBRUSH__ *>;
class CAutoHandle_Policy<HPALETTE__ *>;
class CAutoHandle_Policy<HRGN__ *>;
class CAutoHandle_Policy<HDC__ *>;
class CAutoHandle_Policy<_IMAGELIST *>;
class CUnkownOnlyWrapper;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> const >;
class Microsoft::WRL::Details::RemoveIUnknownBase<IStream>;
class CReadOnlyStream;
class CLimitedWritableStream;
class Microsoft::WRL::ComPtr<IStorage>;
class CWrapperBase<IStorage>;
class Microsoft::WRL::Details::RemoveIUnknownBase<IStorage>;
class CWrapperBase<IEnumSTATSTG>;
class CLimitedWritableStorage;
class CAutoHandle<void *>;
class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumFORMATETC> >;
class CReadOnlyStorage::OpenStorage::__l3::<lambda_191F798414ADB84B>;
class CReadOnlyStorage::Stat::__l3::<lambda_2864C89247375571>;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Reset::__l3::<lambda_385285479B38A6BA>;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Skip::__l3::<lambda_3FE4B16529315704>;
class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Clone::__l3::<lambda_535061216AA0B9B3>;
class CLimitedWritableStorage::CreateStream::__l3::<lambda_80612E54ECEB959E>;
class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Next::__l3::<lambda_8A2C96338B5302B9>;
class CBrokeredClipDataObject::GetDataHere::__l25::<lambda_B48BF3BF89CC31FF>;
class CReadOnlyStorage::OpenStream::__l3::<lambda_B6E0DDFFD7B936DC>;
class CBrokeredClipDataObject::QueryGetData::__l9::<lambda_C1C14A71CE15713B>;
class CBrokeredClipDataObject::EnumFormatEtc::__l9::<lambda_CC6CC56F32D72DC0>;
class CWrapperBase<IEnumSTATSTG>::{dtor}::__l3::<lambda_FF87648DB59E4816>;
struct IEnumHolder;
struct _DROPFILES;
class CDragDataObject;
class CPaccelEnum;
class CFrameFilter;
class CDefObject::CPrivUnknown;
class CDefObject;
union _ASSEMBLY_VERSION;
class CEnumFmt10;
struct FMT;
struct USERPREFS;
struct PICTINFO;
struct tagWIN16BITMAP;
struct tagWIN16METAFILEPICT;
struct tagOLEPRESSTMHDR;
class PSStream;
struct tagSTATPROPBAG;
struct IPropertyBagEx;
struct IEnumSTATPROPBAG;
class CSTATPROPBAGArray;
class CSinkList;
class CConnectionPoint;
class CAsyncConnectionContainer;
class SafeCExposedDocFile;
class CBasedMappedStreamPtr;
class SafeCExposedStream;
class CUpdate;
struct SDeltaBlock;
class CWrappedDocFile;
class CNtfsStream;
class CNtfsUpdateStreamForPropStg;
class CNFFTreeMutex;
class TXLargeIntegerWrapper<_ULARGE_INTEGER,unsigned long,unsigned __int64>;
class CNtfsStreamName;
class CDocfileStreamName;
class CRootPubDocFile;
class SafeCExposedIterator;
struct CExposedIterator;
struct SDfMarshalPacket;
class CDocfileUnmarshalFactory;
class CPtrCache;
class ProcessToken;
class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshalingStream> >;
class Microsoft::WRL::Details::RemoveIUnknownBase<IMarshalingStream>;
class CComCat;
struct ICatRegister;
class CsCatInfo;
class CEnumClassesOfCategories;
struct tagCLASS_DATA;
struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc;
class CFontEventsCP;
class CFont;
struct FCR;
struct CFont::Load::__l2::FONTDATA;
class CCacheStream;
struct ICacheStream;
class CPicture;
struct ISimpleBinding;
class SafeIntInternal::SafeIntWin32Exception;
class SafeIntInternal::SafeIntExceptionHandler<SafeIntInternal::SafeIntWin32Exception>;
class LargeIntRegMultiply<unsigned int,unsigned __int64>;
class LargeIntRegMultiply<__int64,unsigned int>;
class LargeIntRegMultiply<__int64,int>;
class LargeIntRegMultiply<int,__int64>;
class LargeIntRegMultiply<__int64,unsigned __int64>;
class MultiplicationHelper<unsigned __int64,__int64,7>;
class MultiplicationHelper<__int64,__int64,11>;
class SubtractionHelper<__int64,unsigned __int64,11>;
class SubtractionHelper<__int64,unsigned __int64,21>;
class SafeInt<unsigned short,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >;
class SafeInt<long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >;
struct DESCRIPTOR;
class SafeInt<unsigned long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >;
class SafeCastHelper<unsigned short,unsigned short,0>;
class SafeCastHelper<long,long,0>;
class MultiplicationHelper<unsigned short,unsigned short,2>;
class SafeCastHelper<unsigned long,long,1>;
class AdditionHelper<unsigned long,unsigned long,1>;
class MultiplicationHelper<unsigned long,unsigned int,3>;
class AdditionHelper<unsigned long,unsigned int,1>;
class SafeCastHelper<long,int,0>;
class BinaryAndHelper<long,int,0>;
class CArray<_GUID,_GUID &>;
struct DLGTEMPLATEEX;
struct DICTENTRY;
class MultiplicationHelper<unsigned long,unsigned __int64,8>;
class SafeCastHelper<unsigned long,int,1>;
class SafeCastHelper<unsigned long,unsigned __int64,2>;
class SafeCastHelper<unsigned long,unsigned int,0>;
struct IImageFilter;
class CClassObj;
class CUnknown;
struct ITaskAdvise;
class CBindHost;
struct _CONTEXT32_UPDATE;
struct _APPINFO_PROCESS_INFORMATION;
struct __midl_frag51_t;
struct __midl_frag89_t;
struct __midl_frag64_t;
class Windows::AutoOperatorAmpersandHelper<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;
class CTLocalAllocPolicy;
class CTCoAllocPolicy;
class CTGlobalAllocPolicy;
struct CMemString_PolicyCoTaskMem;
class ARI::AutoPtrAriHeap<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION>;
struct CMemString_PolicyAutoMem;
class CMemString<CMemString_PolicyCoTaskMem>;
class Windows::Internal::ResourceString;
class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >;
class CDateInfo;
struct APP_DATA;
class CInterfaceFromWindowProp;
class CPrivDragDrop;
struct IPrivDragDrop;
struct SDDInfo;
struct OsFrame;
struct InFrame;
struct _DELAYLOAD_PROC_DESCRIPTOR;
struct _DELAYLOAD_INFO;
class std::bad_alloc;
struct $_s__CatchableTypeArray$_extraBytes_16;
struct $_TypeDescriptor$_extraBytes_24;
struct CsFrame;
union FT;
struct _GS_HANDLER_DATA;

typedef enum _SYSTEM_INFORMATION_CLASS
{
  SystemBasicInformation = 0,
  SystemProcessorInformation = 1,
  SystemPerformanceInformation = 2,
  SystemTimeOfDayInformation = 3,
  SystemPathInformation = 4,
  SystemProcessInformation = 5,
  SystemCallCountInformation = 6,
  SystemDeviceInformation = 7,
  SystemProcessorPerformanceInformation = 8,
  SystemFlagsInformation = 9,
  SystemCallTimeInformation = 10,
  SystemModuleInformation = 11,
  SystemLocksInformation = 12,
  SystemStackTraceInformation = 13,
  SystemPagedPoolInformation = 14,
  SystemNonPagedPoolInformation = 15,
  SystemHandleInformation = 16,
  SystemObjectInformation = 17,
  SystemPageFileInformation = 18,
  SystemVdmInstemulInformation = 19,
  SystemVdmBopInformation = 20,
  SystemFileCacheInformation = 21,
  SystemPoolTagInformation = 22,
  SystemInterruptInformation = 23,
  SystemDpcBehaviorInformation = 24,
  SystemFullMemoryInformation = 25,
  SystemLoadGdiDriverInformation = 26,
  SystemUnloadGdiDriverInformation = 27,
  SystemTimeAdjustmentInformation = 28,
  SystemSummaryMemoryInformation = 29,
  SystemMirrorMemoryInformation = 30,
  SystemPerformanceTraceInformation = 31,
  SystemObsolete0 = 32,
  SystemExceptionInformation = 33,
  SystemCrashDumpStateInformation = 34,
  SystemKernelDebuggerInformation = 35,
  SystemContextSwitchInformation = 36,
  SystemRegistryQuotaInformation = 37,
  SystemExtendServiceTableInformation = 38,
  SystemPrioritySeperation = 39,
  SystemVerifierAddDriverInformation = 40,
  SystemVerifierRemoveDriverInformation = 41,
  SystemProcessorIdleInformation = 42,
  SystemLegacyDriverInformation = 43,
  SystemCurrentTimeZoneInformation = 44,
  SystemLookasideInformation = 45,
  SystemTimeSlipNotification = 46,
  SystemSessionCreate = 47,
  SystemSessionDetach = 48,
  SystemSessionInformation = 49,
  SystemRangeStartInformation = 50,
  SystemVerifierInformation = 51,
  SystemVerifierThunkExtend = 52,
  SystemSessionProcessInformation = 53,
  SystemLoadGdiDriverInSystemSpace = 54,
  SystemNumaProcessorMap = 55,
  SystemPrefetcherInformation = 56,
  SystemExtendedProcessInformation = 57,
  SystemRecommendedSharedDataAlignment = 58,
  SystemComPlusPackage = 59,
  SystemNumaAvailableMemory = 60,
  SystemProcessorPowerInformation = 61,
  SystemEmulationBasicInformation = 62,
  SystemEmulationProcessorInformation = 63,
  SystemExtendedHandleInformation = 64,
  SystemLostDelayedWriteInformation = 65,
  SystemBigPoolInformation = 66,
  SystemSessionPoolTagInformation = 67,
  SystemSessionMappedViewInformation = 68,
  SystemHotpatchInformation = 69,
  SystemObjectSecurityMode = 70,
  SystemWatchdogTimerHandler = 71,
  SystemWatchdogTimerInformation = 72,
  SystemLogicalProcessorInformation = 73,
  SystemWow64SharedInformationObsolete = 74,
  SystemRegisterFirmwareTableInformationHandler = 75,
  SystemFirmwareTableInformation = 76,
  SystemModuleInformationEx = 77,
  SystemVerifierTriageInformation = 78,
  SystemSuperfetchInformation = 79,
  SystemMemoryListInformation = 80,
  SystemFileCacheInformationEx = 81,
  SystemThreadPriorityClientIdInformation = 82,
  SystemProcessorIdleCycleTimeInformation = 83,
  SystemVerifierCancellationInformation = 84,
  SystemProcessorPowerInformationEx = 85,
  SystemRefTraceInformation = 86,
  SystemSpecialPoolInformation = 87,
  SystemProcessIdInformation = 88,
  SystemErrorPortInformation = 89,
  SystemBootEnvironmentInformation = 90,
  SystemHypervisorInformation = 91,
  SystemVerifierInformationEx = 92,
  SystemTimeZoneInformation = 93,
  SystemImageFileExecutionOptionsInformation = 94,
  SystemCoverageInformation = 95,
  SystemPrefetchPatchInformation = 96,
  SystemVerifierFaultsInformation = 97,
  SystemSystemPartitionInformation = 98,
  SystemSystemDiskInformation = 99,
  SystemProcessorPerformanceDistribution = 100,
  SystemNumaProximityNodeInformation = 101,
  SystemDynamicTimeZoneInformation = 102,
  SystemCodeIntegrityInformation = 103,
  SystemProcessorMicrocodeUpdateInformation = 104,
  SystemProcessorBrandString = 105,
  SystemVirtualAddressInformation = 106,
  SystemLogicalProcessorAndGroupInformation = 107,
  SystemProcessorCycleTimeInformation = 108,
  SystemStoreInformation = 109,
  SystemRegistryAppendString = 110,
  SystemAitSamplingValue = 111,
  SystemVhdBootInformation = 112,
  SystemCpuQuotaInformation = 113,
  SystemNativeBasicInformation = 114,
  SystemErrorPortTimeouts = 115,
  SystemLowPriorityIoInformation = 116,
  SystemBootEntropyInformation = 117,
  SystemVerifierCountersInformation = 118,
  SystemPagedPoolInformationEx = 119,
  SystemSystemPtesInformationEx = 120,
  SystemNodeDistanceInformation = 121,
  SystemAcpiAuditInformation = 122,
  SystemBasicPerformanceInformation = 123,
  SystemQueryPerformanceCounterInformation = 124,
  SystemSessionBigPoolInformation = 125,
  SystemBootGraphicsInformation = 126,
  SystemScrubPhysicalMemoryInformation = 127,
  SystemBadPageInformation = 128,
  SystemProcessorProfileControlArea = 129,
  SystemCombinePhysicalMemoryInformation = 130,
  SystemEntropyInterruptTimingInformation = 131,
  SystemConsoleInformation = 132,
  SystemPlatformBinaryInformation = 133,
  SystemThrottleNotificationInformation = 134,
  SystemHypervisorProcessorCountInformation = 135,
  SystemDeviceDataInformation = 136,
  SystemDeviceDataEnumerationInformation = 137,
  SystemMemoryTopologyInformation = 138,
  SystemMemoryChannelInformation = 139,
  SystemBootLogoInformation = 140,
  SystemProcessorPerformanceInformationEx = 141,
  SystemSpare0 = 142,
  SystemSecureBootPolicyInformation = 143,
  SystemPageFileInformationEx = 144,
  SystemSecureBootInformation = 145,
  SystemEntropyInterruptTimingRawInformation = 146,
  SystemPortableWorkspaceEfiLauncherInformation = 147,
  SystemFullProcessInformation = 148,
  MaxSystemInfoClass = 149,
} SYSTEM_INFORMATION_CLASS, *PSYSTEM_INFORMATION_CLASS;

struct tagRECT
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
}; /* size: 0x0010 */

class CAbstractStream
{
  /* 0x0000 */ long Padding_0[2];
  /* 0x0008 */ volatile unsigned long _cRefs;
}; /* size: 0x0010 */

enum DCOM_ENDPOINT_FLAGS
{
  fUseInternetPorts = 1,
};

struct tagVS_FIXEDFILEINFO
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwStrucVersion;
  /* 0x0008 */ unsigned long dwFileVersionMS;
  /* 0x000c */ unsigned long dwFileVersionLS;
  /* 0x0010 */ unsigned long dwProductVersionMS;
  /* 0x0014 */ unsigned long dwProductVersionLS;
  /* 0x0018 */ unsigned long dwFileFlagsMask;
  /* 0x001c */ unsigned long dwFileFlags;
  /* 0x0020 */ unsigned long dwFileOS;
  /* 0x0024 */ unsigned long dwFileType;
  /* 0x0028 */ unsigned long dwFileSubtype;
  /* 0x002c */ unsigned long dwFileDateMS;
  /* 0x0030 */ unsigned long dwFileDateLS;
}; /* size: 0x0034 */

typedef struct _MINIDUMP_MODULE_CALLBACK
{
  /* 0x0000 */ wchar_t* FullPath;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long CheckSum;
  /* 0x0018 */ unsigned long TimeDateStamp;
  /* 0x001c */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x0050 */ void* CvRecord;
  /* 0x0058 */ unsigned long SizeOfCvRecord;
  /* 0x005c */ void* MiscRecord;
  /* 0x0064 */ unsigned long SizeOfMiscRecord;
} MINIDUMP_MODULE_CALLBACK, *PMINIDUMP_MODULE_CALLBACK; /* size: 0x0068 */

enum tagTYPEFLAGS
{
  TYPEFLAG_FAPPOBJECT = 1,
  TYPEFLAG_FCANCREATE = 2,
  TYPEFLAG_FLICENSED = 4,
  TYPEFLAG_FPREDECLID = 8,
  TYPEFLAG_FHIDDEN = 16,
  TYPEFLAG_FCONTROL = 32,
  TYPEFLAG_FDUAL = 64,
  TYPEFLAG_FNONEXTENSIBLE = 128,
  TYPEFLAG_FOLEAUTOMATION = 256,
  TYPEFLAG_FRESTRICTED = 512,
  TYPEFLAG_FAGGREGATABLE = 1024,
  TYPEFLAG_FREPLACEABLE = 2048,
  TYPEFLAG_FDISPATCHABLE = 4096,
  TYPEFLAG_FREVERSEBIND = 8192,
  TYPEFLAG_FPROXY = 16384,
};

struct HUMPD__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SID_AND_ATTRIBUTES_HASH
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ long Padding_1;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* SidAttr;
  /* 0x0010 */ unsigned __int64 Hash[32];
} SID_AND_ATTRIBUTES_HASH, *PSID_AND_ATTRIBUTES_HASH; /* size: 0x0110 */

struct tagNMHDR
{
  /* 0x0000 */ struct HWND__* hwndFrom;
  /* 0x0008 */ unsigned __int64 idFrom;
  /* 0x0010 */ unsigned int code;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _OFNOTIFYEXW
{
  /* 0x0000 */ struct tagNMHDR hdr;
  /* 0x0018 */ struct tagOFNW* lpOFN;
  /* 0x0020 */ void* psf;
  /* 0x0028 */ void* pidl;
} OFNOTIFYEXW, *POFNOTIFYEXW; /* size: 0x0030 */

typedef enum _PROC_THREAD_ATTRIBUTE_NUM
{
  ProcThreadAttributeParentProcess = 0,
  ProcThreadAttributeHandleList = 2,
  ProcThreadAttributeGroupAffinity = 3,
  ProcThreadAttributePreferredNode = 4,
  ProcThreadAttributeIdealProcessor = 5,
  ProcThreadAttributeUmsThread = 6,
  ProcThreadAttributeMitigationPolicy = 7,
  ProcThreadAttributeSecurityCapabilities = 9,
} PROC_THREAD_ATTRIBUTE_NUM, *PPROC_THREAD_ATTRIBUTE_NUM;

struct IOleInPlaceSiteEx
{
}; /* size: 0x0008 */

struct IXMLElement2
{
}; /* size: 0x0008 */

typedef enum _SYSDBG_COMMAND
{
  SysDbgQueryModuleInformation = 0,
  SysDbgQueryTraceInformation = 1,
  SysDbgSetTracepoint = 2,
  SysDbgSetSpecialCall = 3,
  SysDbgClearSpecialCalls = 4,
  SysDbgQuerySpecialCalls = 5,
  SysDbgBreakPoint = 6,
  SysDbgQueryVersion = 7,
  SysDbgReadVirtual = 8,
  SysDbgWriteVirtual = 9,
  SysDbgReadPhysical = 10,
  SysDbgWritePhysical = 11,
  SysDbgReadControlSpace = 12,
  SysDbgWriteControlSpace = 13,
  SysDbgReadIoSpace = 14,
  SysDbgWriteIoSpace = 15,
  SysDbgReadMsr = 16,
  SysDbgWriteMsr = 17,
  SysDbgReadBusData = 18,
  SysDbgWriteBusData = 19,
  SysDbgCheckLowMemory = 20,
  SysDbgEnableKernelDebugger = 21,
  SysDbgDisableKernelDebugger = 22,
  SysDbgGetAutoKdEnable = 23,
  SysDbgSetAutoKdEnable = 24,
  SysDbgGetPrintBufferSize = 25,
  SysDbgSetPrintBufferSize = 26,
  SysDbgGetKdUmExceptionEnable = 27,
  SysDbgSetKdUmExceptionEnable = 28,
  SysDbgGetTriageDump = 29,
  SysDbgGetKdBlockEnable = 30,
  SysDbgSetKdBlockEnable = 31,
  SysDbgRegisterForUmBreakInfo = 32,
  SysDbgGetUmBreakPid = 33,
  SysDbgClearUmBreakPid = 34,
  SysDbgGetUmAttachPid = 35,
  SysDbgClearUmAttachPid = 36,
} SYSDBG_COMMAND, *PSYSDBG_COMMAND;

typedef struct _MINIDUMP_TOKEN_INFO_HEADER
{
  /* 0x0000 */ unsigned long TokenSize;
  /* 0x0004 */ unsigned long TokenId;
  /* 0x0008 */ unsigned __int64 TokenHandle;
} MINIDUMP_TOKEN_INFO_HEADER, *PMINIDUMP_TOKEN_INFO_HEADER; /* size: 0x0010 */

typedef enum _BIN_TYPES
{
  RequestSize = 0,
  RequestLocation = 1,
} BIN_TYPES, *PBIN_TYPES;

typedef struct _CERT_POLICY_MAPPINGS_INFO
{
  /* 0x0000 */ unsigned long cPolicyMapping;
  /* 0x0004 */ long Padding_2;
  /* 0x0008 */ struct _CERT_POLICY_MAPPING* rgPolicyMapping;
} CERT_POLICY_MAPPINGS_INFO, *PCERT_POLICY_MAPPINGS_INFO; /* size: 0x0010 */

enum POWER_INFORMATION_LEVEL
{
  SystemPowerPolicyAc = 0,
  SystemPowerPolicyDc = 1,
  VerifySystemPolicyAc = 2,
  VerifySystemPolicyDc = 3,
  SystemPowerCapabilities = 4,
  SystemBatteryState = 5,
  SystemPowerStateHandler = 6,
  ProcessorStateHandler = 7,
  SystemPowerPolicyCurrent = 8,
  AdministratorPowerPolicy = 9,
  SystemReserveHiberFile = 10,
  ProcessorInformation = 11,
  SystemPowerInformation = 12,
  ProcessorStateHandler2 = 13,
  LastWakeTime = 14,
  LastSleepTime = 15,
  SystemExecutionState = 16,
  SystemPowerStateNotifyHandler = 17,
  ProcessorPowerPolicyAc = 18,
  ProcessorPowerPolicyDc = 19,
  VerifyProcessorPowerPolicyAc = 20,
  VerifyProcessorPowerPolicyDc = 21,
  ProcessorPowerPolicyCurrent = 22,
  SystemPowerStateLogging = 23,
  SystemPowerLoggingEntry = 24,
  SetPowerSettingValue = 25,
  NotifyUserPowerSetting = 26,
  PowerInformationLevelUnused0 = 27,
  SystemMonitorHiberBootPowerOff = 28,
  SystemVideoState = 29,
  TraceApplicationPowerMessage = 30,
  TraceApplicationPowerMessageEnd = 31,
  ProcessorPerfStates = 32,
  ProcessorIdleStates = 33,
  ProcessorCap = 34,
  SystemWakeSource = 35,
  SystemHiberFileInformation = 36,
  TraceServicePowerMessage = 37,
  ProcessorLoad = 38,
  PowerShutdownNotification = 39,
  MonitorCapabilities = 40,
  SessionPowerInit = 41,
  SessionDisplayState = 42,
  PowerRequestCreate = 43,
  PowerRequestAction = 44,
  GetPowerRequestList = 45,
  ProcessorInformationEx = 46,
  NotifyUserModeLegacyPowerEvent = 47,
  GroupPark = 48,
  ProcessorIdleDomains = 49,
  WakeTimerList = 50,
  SystemHiberFileSize = 51,
  ProcessorIdleStatesHv = 52,
  ProcessorPerfStatesHv = 53,
  ProcessorPerfCapHv = 54,
  ProcessorSetIdle = 55,
  LogicalProcessorIdling = 56,
  UserPresence = 57,
  PowerSettingNotificationName = 58,
  GetPowerSettingValue = 59,
  IdleResiliency = 60,
  SessionRITState = 61,
  SessionConnectNotification = 62,
  SessionPowerCleanup = 63,
  SessionLockState = 64,
  SystemHiberbootState = 65,
  PlatformInformation = 66,
  PdcInvocation = 67,
  MonitorInvocation = 68,
  FirmwareTableInformationRegistered = 69,
  SetShutdownSelectedTime = 70,
  SuspendResumeInvocation = 71,
  PlmPowerRequestCreate = 72,
  ScreenOff = 73,
  CsDeviceNotification = 74,
  PlatformRole = 75,
  LastResumePerformance = 76,
  DisplayBurst = 77,
  ExitLatencySamplingPercentage = 78,
  ApplyLowPowerScenarioSettings = 79,
  PowerInformationLevelMaximum = 80,
};

struct tagContexts
{
  /* 0x0000 */ class CObjectContext* pClientCtx;
  /* 0x0008 */ class CObjectContext* pServerCtx;
}; /* size: 0x0010 */

typedef enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION
{
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_NONE = 0,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE_ALL = 1,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_ADD = 2,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_DELETE = 3,
  TOKEN_SECURITY_ATTRIBUTE_OPERATION_REPLACE = 4,
} TOKEN_SECURITY_ATTRIBUTE_OPERATION, *PTOKEN_SECURITY_ATTRIBUTE_OPERATION;

struct ILayoutStorage
{
}; /* size: 0x0008 */

typedef struct _GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} GUID, *PGUID; /* size: 0x0010 */

typedef struct _RPC_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} RPC_VERSION, *PRPC_VERSION; /* size: 0x0004 */

typedef struct _RPC_SYNTAX_IDENTIFIER
{
  /* 0x0000 */ struct _GUID SyntaxGUID;
  /* 0x0010 */ struct _RPC_VERSION SyntaxVersion;
} RPC_SYNTAX_IDENTIFIER, *PRPC_SYNTAX_IDENTIFIER; /* size: 0x0014 */

typedef struct _MIDL_SYNTAX_INFO
{
  /* 0x0000 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x0014 */ long Padding_3;
  /* 0x0018 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0020 */ const unsigned char* ProcString;
  /* 0x0028 */ const unsigned short* FmtStringOffset;
  /* 0x0030 */ const unsigned char* TypeString;
  /* 0x0038 */ const void* aUserMarshalQuadruple;
  /* 0x0040 */ unsigned __int64 pReserved1;
  /* 0x0048 */ unsigned __int64 pReserved2;
} MIDL_SYNTAX_INFO, *PMIDL_SYNTAX_INFO; /* size: 0x0050 */

enum DISK_CACHE_RETENTION_PRIORITY
{
  EqualPriority = 0,
  KeepPrefetchedData = 1,
  KeepReadData = 2,
};

typedef struct _SYSTEM_PREFETCH_OPTIONS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long LowerPriority : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualOffsets : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long TrickleIOs : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long SkipInStorePages : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long PrefetchFilesByVa : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Spare : 3; /* bit position: 5 */
    /* 0x0000 */ unsigned long ScenarioType : 8; /* bit position: 8 */
  }; /* bitfield */
} SYSTEM_PREFETCH_OPTIONS, *PSYSTEM_PREFETCH_OPTIONS; /* size: 0x0004 */

struct IActivationPropertiesIn
{
}; /* size: 0x0008 */

typedef struct _CRYPTOAPI_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_4;
  /* 0x0008 */ unsigned char* pbData;
} CRYPTOAPI_BLOB, *PCRYPTOAPI_BLOB; /* size: 0x0010 */

typedef struct _CRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_ALGORITHM_IDENTIFIER, *PCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0018 */

typedef struct _CRYPT_BIT_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_5;
  /* 0x0008 */ unsigned char* pbData;
  /* 0x0010 */ unsigned long cUnusedBits;
  /* 0x0014 */ long __PADDING__[1];
} CRYPT_BIT_BLOB, *PCRYPT_BIT_BLOB; /* size: 0x0018 */

typedef struct _CERT_PUBLIC_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB PublicKey;
} CERT_PUBLIC_KEY_INFO, *PCERT_PUBLIC_KEY_INFO; /* size: 0x0030 */

class Microsoft::WRL::ComPtr<ApartmentShutdownNode>
{
  /* 0x0000 */ struct ApartmentShutdownNode* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IApartmentShutdown>
{
  /* 0x0000 */ struct IApartmentShutdown* ptr_;
}; /* size: 0x0008 */

struct ApartmentShutdownNode
{
  /* 0x0000 */ long Padding_6[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ApartmentShutdownNode> spNext;
  /* 0x0018 */ class Microsoft::WRL::ComPtr<ApartmentShutdownNode> spPrev;
  /* 0x0020 */ struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__* cookie;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IApartmentShutdown> spShutdown;
  /* 0x0030 */ unsigned char bCallbackInvoked;
  /* 0x0031 */ char __PADDING__[7];
}; /* size: 0x0038 */

enum WELL_KNOWN_SID_TYPE
{
  WinNullSid = 0,
  WinWorldSid = 1,
  WinLocalSid = 2,
  WinCreatorOwnerSid = 3,
  WinCreatorGroupSid = 4,
  WinCreatorOwnerServerSid = 5,
  WinCreatorGroupServerSid = 6,
  WinNtAuthoritySid = 7,
  WinDialupSid = 8,
  WinNetworkSid = 9,
  WinBatchSid = 10,
  WinInteractiveSid = 11,
  WinServiceSid = 12,
  WinAnonymousSid = 13,
  WinProxySid = 14,
  WinEnterpriseControllersSid = 15,
  WinSelfSid = 16,
  WinAuthenticatedUserSid = 17,
  WinRestrictedCodeSid = 18,
  WinTerminalServerSid = 19,
  WinRemoteLogonIdSid = 20,
  WinLogonIdsSid = 21,
  WinLocalSystemSid = 22,
  WinLocalServiceSid = 23,
  WinNetworkServiceSid = 24,
  WinBuiltinDomainSid = 25,
  WinBuiltinAdministratorsSid = 26,
  WinBuiltinUsersSid = 27,
  WinBuiltinGuestsSid = 28,
  WinBuiltinPowerUsersSid = 29,
  WinBuiltinAccountOperatorsSid = 30,
  WinBuiltinSystemOperatorsSid = 31,
  WinBuiltinPrintOperatorsSid = 32,
  WinBuiltinBackupOperatorsSid = 33,
  WinBuiltinReplicatorSid = 34,
  WinBuiltinPreWindows2000CompatibleAccessSid = 35,
  WinBuiltinRemoteDesktopUsersSid = 36,
  WinBuiltinNetworkConfigurationOperatorsSid = 37,
  WinAccountAdministratorSid = 38,
  WinAccountGuestSid = 39,
  WinAccountKrbtgtSid = 40,
  WinAccountDomainAdminsSid = 41,
  WinAccountDomainUsersSid = 42,
  WinAccountDomainGuestsSid = 43,
  WinAccountComputersSid = 44,
  WinAccountControllersSid = 45,
  WinAccountCertAdminsSid = 46,
  WinAccountSchemaAdminsSid = 47,
  WinAccountEnterpriseAdminsSid = 48,
  WinAccountPolicyAdminsSid = 49,
  WinAccountRasAndIasServersSid = 50,
  WinNTLMAuthenticationSid = 51,
  WinDigestAuthenticationSid = 52,
  WinSChannelAuthenticationSid = 53,
  WinThisOrganizationSid = 54,
  WinOtherOrganizationSid = 55,
  WinBuiltinIncomingForestTrustBuildersSid = 56,
  WinBuiltinPerfMonitoringUsersSid = 57,
  WinBuiltinPerfLoggingUsersSid = 58,
  WinBuiltinAuthorizationAccessSid = 59,
  WinBuiltinTerminalServerLicenseServersSid = 60,
  WinBuiltinDCOMUsersSid = 61,
  WinBuiltinIUsersSid = 62,
  WinIUserSid = 63,
  WinBuiltinCryptoOperatorsSid = 64,
  WinUntrustedLabelSid = 65,
  WinLowLabelSid = 66,
  WinMediumLabelSid = 67,
  WinHighLabelSid = 68,
  WinSystemLabelSid = 69,
  WinWriteRestrictedCodeSid = 70,
  WinCreatorOwnerRightsSid = 71,
  WinCacheablePrincipalsGroupSid = 72,
  WinNonCacheablePrincipalsGroupSid = 73,
  WinEnterpriseReadonlyControllersSid = 74,
  WinAccountReadonlyControllersSid = 75,
  WinBuiltinEventLogReadersGroup = 76,
  WinNewEnterpriseReadonlyControllersSid = 77,
  WinBuiltinCertSvcDComAccessGroup = 78,
  WinMediumPlusLabelSid = 79,
  WinLocalLogonSid = 80,
  WinConsoleLogonSid = 81,
  WinThisOrganizationCertificateSid = 82,
  WinApplicationPackageAuthoritySid = 83,
  WinBuiltinAnyPackageSid = 84,
  WinCapabilityInternetClientSid = 85,
  WinCapabilityInternetClientServerSid = 86,
  WinCapabilityPrivateNetworkClientServerSid = 87,
  WinCapabilityPicturesLibrarySid = 88,
  WinCapabilityVideosLibrarySid = 89,
  WinCapabilityMusicLibrarySid = 90,
  WinCapabilityDocumentsLibrarySid = 91,
  WinCapabilitySharedUserCertificatesSid = 92,
  WinCapabilityEnterpriseAuthenticationSid = 93,
  WinCapabilityRemovableStorageSid = 94,
  WinBuiltinRDSRemoteAccessServersSid = 95,
  WinBuiltinRDSEndpointServersSid = 96,
  WinBuiltinRDSManagementServersSid = 97,
  WinUserModeDriversSid = 98,
  WinBuiltinHyperVAdminsSid = 99,
  WinAccountCloneableControllersSid = 100,
  WinBuiltinAccessControlAssistanceOperatorsSid = 101,
  WinBuiltinRemoteManagementUsersSid = 102,
  WinAuthenticationAuthorityAssertedSid = 103,
  WinAuthenticationServiceAssertedSid = 104,
};

typedef struct _PS_SYSTEM_DLL_INIT_BLOCK
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long SystemDllWowRelocation;
  /* 0x0008 */ unsigned __int64 SystemDllNativeRelocation;
  /* 0x0010 */ unsigned long Wow64SharedInformation[16];
  /* 0x0050 */ unsigned long RngData;
  /* 0x0054 */ long Padding_7;
  /* 0x0058 */ unsigned __int64 MitigationOptions;
} PS_SYSTEM_DLL_INIT_BLOCK, *PPS_SYSTEM_DLL_INIT_BLOCK; /* size: 0x0060 */

enum VARENUM
{
  VT_EMPTY = 0,
  VT_NULL = 1,
  VT_I2 = 2,
  VT_I4 = 3,
  VT_R4 = 4,
  VT_R8 = 5,
  VT_CY = 6,
  VT_DATE = 7,
  VT_BSTR = 8,
  VT_DISPATCH = 9,
  VT_ERROR = 10,
  VT_BOOL = 11,
  VT_VARIANT = 12,
  VT_UNKNOWN = 13,
  VT_DECIMAL = 14,
  VT_I1 = 16,
  VT_UI1 = 17,
  VT_UI2 = 18,
  VT_UI4 = 19,
  VT_I8 = 20,
  VT_UI8 = 21,
  VT_INT = 22,
  VT_UINT = 23,
  VT_VOID = 24,
  VT_HRESULT = 25,
  VT_PTR = 26,
  VT_SAFEARRAY = 27,
  VT_CARRAY = 28,
  VT_USERDEFINED = 29,
  VT_LPSTR = 30,
  VT_LPWSTR = 31,
  VT_RECORD = 36,
  VT_INT_PTR = 37,
  VT_UINT_PTR = 38,
  VT_FILETIME = 64,
  VT_BLOB = 65,
  VT_STREAM = 66,
  VT_STORAGE = 67,
  VT_STREAMED_OBJECT = 68,
  VT_STORED_OBJECT = 69,
  VT_BLOB_OBJECT = 70,
  VT_CF = 71,
  VT_CLSID = 72,
  VT_VERSIONED_STREAM = 73,
  VT_BSTR_BLOB = 4095,
  VT_VECTOR = 4096,
  VT_ARRAY = 8192,
  VT_BYREF = 16384,
  VT_RESERVED = 0xffff8000,
  VT_ILLEGAL = 0xffffffff,
  VT_ILLEGALMASKED = 4095,
  VT_TYPEMASK = 4095,
};

class CInprocSystemActivator
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_1
{
  WPP_VER_WIN2K_CB_FORWARD_PTR = 1,
  WPP_VER_WHISTLER_CB_FORWARD_PTR = 2,
  WPP_VER_LH_CB_FORWARD_PTR = 3,
} TAG_UNNAMED_1, *PTAG_UNNAMED_1;

typedef enum _PROCESSOR_CACHE_TYPE
{
  CacheUnified = 0,
  CacheInstruction = 1,
  CacheData = 2,
  CacheTrace = 3,
} PROCESSOR_CACHE_TYPE, *PPROCESSOR_CACHE_TYPE;

typedef struct _CACHE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
} CACHE_DESCRIPTOR, *PCACHE_DESCRIPTOR; /* size: 0x000c */

typedef struct _HTTPSPolicyCallbackData
{
  union
  {
    /* 0x0000 */ unsigned long cbStruct;
    /* 0x0000 */ unsigned long cbSize;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwAuthType;
  /* 0x0008 */ unsigned long fdwChecks;
  /* 0x000c */ long Padding_8;
  /* 0x0010 */ wchar_t* pwszServerName;
} HTTPSPolicyCallbackData, *PHTTPSPolicyCallbackData; /* size: 0x0018 */

enum POWER_ACTION
{
  PowerActionNone = 0,
  PowerActionReserved = 1,
  PowerActionSleep = 2,
  PowerActionHibernate = 3,
  PowerActionShutdown = 4,
  PowerActionShutdownReset = 5,
  PowerActionShutdownOff = 6,
  PowerActionWarmEject = 7,
};

struct IEncodingFilterFactory
{
}; /* size: 0x0008 */

typedef enum _RUNLEVEL
{
  RUNLEVEL_LUA = 0,
  RUNLEVEL_HIGHEST = 1,
  RUNLEVEL_ADMIN = 2,
  RUNLEVEL_MAX_NON_UIA = 3,
  RUNLEVEL_LUA_UIA = 16,
  RUNLEVEL_HIGHEST_UIA = 17,
  RUNLEVEL_ADMIN_UIA = 18,
  RUNLEVEL_MAX = 19,
} RUNLEVEL, *PRUNLEVEL;

struct Microsoft::WRL::CloakedIid<IMarshal>
{
}; /* size: 0x0008 */

struct IRootStorage
{
}; /* size: 0x0008 */

struct HMIDISTRM__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _PROCESS_MITIGATION_POLICY
{
  ProcessDEPPolicy = 0,
  ProcessASLRPolicy = 1,
  ProcessReserved1MitigationPolicy = 2,
  ProcessStrictHandleCheckPolicy = 3,
  ProcessSystemCallDisablePolicy = 4,
  ProcessMitigationOptionsMask = 5,
  ProcessExtensionPointDisablePolicy = 6,
  MaxProcessMitigationPolicy = 7,
} PROCESS_MITIGATION_POLICY, *PPROCESS_MITIGATION_POLICY;

enum SHSTOCKICONID
{
  SIID_DOCNOASSOC = 0,
  SIID_DOCASSOC = 1,
  SIID_APPLICATION = 2,
  SIID_FOLDER = 3,
  SIID_FOLDEROPEN = 4,
  SIID_DRIVE525 = 5,
  SIID_DRIVE35 = 6,
  SIID_DRIVEREMOVE = 7,
  SIID_DRIVEFIXED = 8,
  SIID_DRIVENET = 9,
  SIID_DRIVENETDISABLED = 10,
  SIID_DRIVECD = 11,
  SIID_DRIVERAM = 12,
  SIID_WORLD = 13,
  SIID_SERVER = 15,
  SIID_PRINTER = 16,
  SIID_MYNETWORK = 17,
  SIID_FIND = 22,
  SIID_HELP = 23,
  SIID_SHARE = 28,
  SIID_LINK = 29,
  SIID_SLOWFILE = 30,
  SIID_RECYCLER = 31,
  SIID_RECYCLERFULL = 32,
  SIID_MEDIACDAUDIO = 40,
  SIID_LOCK = 47,
  SIID_AUTOLIST = 49,
  SIID_PRINTERNET = 50,
  SIID_SERVERSHARE = 51,
  SIID_PRINTERFAX = 52,
  SIID_PRINTERFAXNET = 53,
  SIID_PRINTERFILE = 54,
  SIID_STACK = 55,
  SIID_MEDIASVCD = 56,
  SIID_STUFFEDFOLDER = 57,
  SIID_DRIVEUNKNOWN = 58,
  SIID_DRIVEDVD = 59,
  SIID_MEDIADVD = 60,
  SIID_MEDIADVDRAM = 61,
  SIID_MEDIADVDRW = 62,
  SIID_MEDIADVDR = 63,
  SIID_MEDIADVDROM = 64,
  SIID_MEDIACDAUDIOPLUS = 65,
  SIID_MEDIACDRW = 66,
  SIID_MEDIACDR = 67,
  SIID_MEDIACDBURN = 68,
  SIID_MEDIABLANKCD = 69,
  SIID_MEDIACDROM = 70,
  SIID_AUDIOFILES = 71,
  SIID_IMAGEFILES = 72,
  SIID_VIDEOFILES = 73,
  SIID_MIXEDFILES = 74,
  SIID_FOLDERBACK = 75,
  SIID_FOLDERFRONT = 76,
  SIID_SHIELD = 77,
  SIID_WARNING = 78,
  SIID_INFO = 79,
  SIID_ERROR = 80,
  SIID_KEY = 81,
  SIID_SOFTWARE = 82,
  SIID_RENAME = 83,
  SIID_DELETE = 84,
  SIID_MEDIAAUDIODVD = 85,
  SIID_MEDIAMOVIEDVD = 86,
  SIID_MEDIAENHANCEDCD = 87,
  SIID_MEDIAENHANCEDDVD = 88,
  SIID_MEDIAHDDVD = 89,
  SIID_MEDIABLURAY = 90,
  SIID_MEDIAVCD = 91,
  SIID_MEDIADVDPLUSR = 92,
  SIID_MEDIADVDPLUSRW = 93,
  SIID_DESKTOPPC = 94,
  SIID_MOBILEPC = 95,
  SIID_USERS = 96,
  SIID_MEDIASMARTMEDIA = 97,
  SIID_MEDIACOMPACTFLASH = 98,
  SIID_DEVICECELLPHONE = 99,
  SIID_DEVICECAMERA = 100,
  SIID_DEVICEVIDEOCAMERA = 101,
  SIID_DEVICEAUDIOPLAYER = 102,
  SIID_NETWORKCONNECT = 103,
  SIID_INTERNET = 104,
  SIID_ZIPFILE = 105,
  SIID_SETTINGS = 106,
  SIID_DRIVEHDDVD = 132,
  SIID_DRIVEBD = 133,
  SIID_MEDIAHDDVDROM = 134,
  SIID_MEDIAHDDVDR = 135,
  SIID_MEDIAHDDVDRAM = 136,
  SIID_MEDIABDROM = 137,
  SIID_MEDIABDR = 138,
  SIID_MEDIABDRE = 139,
  SIID_CLUSTEREDDRIVE = 140,
  SIID_MAX_ICONS = 175,
};

typedef struct _MESSAGE_RESOURCE_BLOCK
{
  /* 0x0000 */ unsigned long LowId;
  /* 0x0004 */ unsigned long HighId;
  /* 0x0008 */ unsigned long OffsetToEntries;
} MESSAGE_RESOURCE_BLOCK, *PMESSAGE_RESOURCE_BLOCK; /* size: 0x000c */

typedef struct _GET_CHANGER_PARAMETERS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned short NumberTransportElements;
  /* 0x0006 */ unsigned short NumberStorageElements;
  /* 0x0008 */ unsigned short NumberCleanerSlots;
  /* 0x000a */ unsigned short NumberIEElements;
  /* 0x000c */ unsigned short NumberDataTransferElements;
  /* 0x000e */ unsigned short NumberOfDoors;
  /* 0x0010 */ unsigned short FirstSlotNumber;
  /* 0x0012 */ unsigned short FirstDriveNumber;
  /* 0x0014 */ unsigned short FirstTransportNumber;
  /* 0x0016 */ unsigned short FirstIEPortNumber;
  /* 0x0018 */ unsigned short FirstCleanerSlotAddress;
  /* 0x001a */ unsigned short MagazineSize;
  /* 0x001c */ unsigned long DriveCleanTimeout;
  /* 0x0020 */ unsigned long Features0;
  /* 0x0024 */ unsigned long Features1;
  /* 0x0028 */ unsigned char MoveFromTransport;
  /* 0x0029 */ unsigned char MoveFromSlot;
  /* 0x002a */ unsigned char MoveFromIePort;
  /* 0x002b */ unsigned char MoveFromDrive;
  /* 0x002c */ unsigned char ExchangeFromTransport;
  /* 0x002d */ unsigned char ExchangeFromSlot;
  /* 0x002e */ unsigned char ExchangeFromIePort;
  /* 0x002f */ unsigned char ExchangeFromDrive;
  /* 0x0030 */ unsigned char LockUnlockCapabilities;
  /* 0x0031 */ unsigned char PositionCapabilities;
  /* 0x0032 */ unsigned char Reserved1[2];
  /* 0x0034 */ unsigned long Reserved2[2];
} GET_CHANGER_PARAMETERS, *PGET_CHANGER_PARAMETERS; /* size: 0x003c */

typedef enum _PRINTER_OPTION_FLAGS
{
  PRINTER_OPTION_NO_CACHE = 1,
  PRINTER_OPTION_CACHE = 2,
  PRINTER_OPTION_CLIENT_CHANGE = 4,
  PRINTER_OPTION_NO_CLIENT_DATA = 8,
} PRINTER_OPTION_FLAGS, *PPRINTER_OPTION_FLAGS;

enum HASHALGORITHM_ENUM
{
  DSA_HASH_ALGORITHM_SHA1 = 0,
  DSA_HASH_ALGORITHM_SHA256 = 1,
  DSA_HASH_ALGORITHM_SHA512 = 2,
};

enum DSAFIPSVERSION_ENUM
{
  DSA_FIPS186_2 = 0,
  DSA_FIPS186_3 = 1,
};

typedef struct _BCRYPT_DSA_KEY_BLOB_V2
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
  /* 0x0008 */ enum HASHALGORITHM_ENUM hashAlgorithm;
  /* 0x000c */ enum DSAFIPSVERSION_ENUM standardVersion;
  /* 0x0010 */ unsigned long cbSeedLength;
  /* 0x0014 */ unsigned long cbGroupSize;
  /* 0x0018 */ unsigned char Count[4];
} BCRYPT_DSA_KEY_BLOB_V2, *PBCRYPT_DSA_KEY_BLOB_V2; /* size: 0x001c */

struct IDebug
{
}; /* size: 0x0008 */

typedef struct _RTL_BITMAP
{
  /* 0x0000 */ unsigned long SizeOfBitMap;
  /* 0x0004 */ long Padding_9;
  /* 0x0008 */ unsigned long* Buffer;
} RTL_BITMAP, *PRTL_BITMAP; /* size: 0x0010 */

typedef enum _tagQUERYOPTION
{
  QUERY_EXPIRATION_DATE = 1,
  QUERY_TIME_OF_LAST_CHANGE = 2,
  QUERY_CONTENT_ENCODING = 3,
  QUERY_CONTENT_TYPE = 4,
  QUERY_REFRESH = 5,
  QUERY_RECOMBINE = 6,
  QUERY_CAN_NAVIGATE = 7,
  QUERY_USES_NETWORK = 8,
  QUERY_IS_CACHED = 9,
  QUERY_IS_INSTALLEDENTRY = 10,
  QUERY_IS_CACHED_OR_MAPPED = 11,
  QUERY_USES_CACHE = 12,
  QUERY_IS_SECURE = 13,
  QUERY_IS_SAFE = 14,
  QUERY_USES_HISTORYFOLDER = 15,
  QUERY_IS_CACHED_AND_USABLE_OFFLINE = 16,
} tagQUERYOPTION, *PtagQUERYOPTION;

typedef struct _ALPC_CONTEXT_ATTR
{
  /* 0x0000 */ void* PortContext;
  /* 0x0008 */ void* MessageContext;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long MessageId;
  /* 0x0018 */ unsigned long CallbackId;
  /* 0x001c */ long __PADDING__[1];
} ALPC_CONTEXT_ATTR, *PALPC_CONTEXT_ATTR; /* size: 0x0020 */

struct PACKAGE_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct PACKAGE_ID
{
  /* 0x0000 */ unsigned int reserved;
  /* 0x0004 */ unsigned int processorArchitecture;
  /* 0x0008 */ struct PACKAGE_VERSION version;
  /* 0x0010 */ wchar_t* name;
  /* 0x0018 */ wchar_t* publisher;
  /* 0x0020 */ wchar_t* resourceId;
  /* 0x0028 */ wchar_t* publisherId;
}; /* size: 0x0030 */

typedef enum _COPYFILE2_MESSAGE_TYPE
{
  COPYFILE2_CALLBACK_NONE = 0,
  COPYFILE2_CALLBACK_CHUNK_STARTED = 1,
  COPYFILE2_CALLBACK_CHUNK_FINISHED = 2,
  COPYFILE2_CALLBACK_STREAM_STARTED = 3,
  COPYFILE2_CALLBACK_STREAM_FINISHED = 4,
  COPYFILE2_CALLBACK_POLL_CONTINUE = 5,
  COPYFILE2_CALLBACK_ERROR = 6,
  COPYFILE2_CALLBACK_MAX = 7,
} COPYFILE2_MESSAGE_TYPE, *PCOPYFILE2_MESSAGE_TYPE;

typedef struct _BCRYPT_DSA_PARAMETER_HEADER_V2
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
  /* 0x000c */ enum HASHALGORITHM_ENUM hashAlgorithm;
  /* 0x0010 */ enum DSAFIPSVERSION_ENUM standardVersion;
  /* 0x0014 */ unsigned long cbSeedLength;
  /* 0x0018 */ unsigned long cbGroupSize;
  /* 0x001c */ unsigned char Count[4];
} BCRYPT_DSA_PARAMETER_HEADER_V2, *PBCRYPT_DSA_PARAMETER_HEADER_V2; /* size: 0x0020 */

typedef struct _RPC_MESSAGE
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long DataRepresentation;
  /* 0x000c */ long Padding_10;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned int BufferLength;
  /* 0x001c */ unsigned int ProcNum;
  /* 0x0020 */ struct _RPC_SYNTAX_IDENTIFIER* TransferSyntax;
  /* 0x0028 */ void* RpcInterfaceInformation;
  /* 0x0030 */ void* ReservedForRuntime;
  /* 0x0038 */ void* ManagerEpv;
  /* 0x0040 */ void* ImportContext;
  /* 0x0048 */ unsigned long RpcFlags;
  /* 0x004c */ long __PADDING__[1];
} RPC_MESSAGE, *PRPC_MESSAGE; /* size: 0x0050 */

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
} LARGE_INTEGER, *PLARGE_INTEGER; /* size: 0x0008 */

typedef struct _FILE_ID_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ long Padding_11;
  /* 0x0048 */ union _LARGE_INTEGER FileId;
  /* 0x0050 */ wchar_t FileName[1];
  /* 0x0052 */ char __PADDING__[6];
} FILE_ID_FULL_DIR_INFORMATION, *PFILE_ID_FULL_DIR_INFORMATION; /* size: 0x0058 */

enum ACTIVATION_PROPERTIES::eFlags
{
  fFOR_SCM = 1,
  fSURROGATE = 4,
  fDO_NOT_LOAD = 8,
  fRELOAD_DARWIN = 16,
  fLSVR_ONLY = 32,
};

struct tagNEWTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char Padding_12[3];
  /* 0x0038 */ unsigned long ntmFlags;
  /* 0x003c */ unsigned int ntmSizeEM;
  /* 0x0040 */ unsigned int ntmCellHeight;
  /* 0x0044 */ unsigned int ntmAvgWidth;
}; /* size: 0x0048 */

struct tagFONTSIGNATURE
{
  /* 0x0000 */ unsigned long fsUsb[4];
  /* 0x0010 */ unsigned long fsCsb[2];
}; /* size: 0x0018 */

struct tagNEWTEXTMETRICEXA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICA ntmTm;
  /* 0x0048 */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0060 */

class CMSFHeaderData
{
  /* 0x0000 */ long Padding_13[19];
  /* 0x004c */ unsigned long _sectFat[109];
}; /* size: 0x0200 */

class CMSFHeader
{
  /* 0x0000 */ class CMSFHeaderData _hdr;
  /* 0x0200 */ int _fDirty;
}; /* size: 0x0204 */

struct CSimpStorage
{
  /* 0x0000 */ long Padding_14[14];
  /* 0x0038 */ long _cReferences;
  /* 0x003c */ long Padding_15;
  /* 0x0040 */ void* _hFile;
  /* 0x0048 */ int _fDirty;
  /* 0x004c */ class CMSFHeader _hdr;
  /* 0x0250 */ unsigned char* _pbBuf;
  /* 0x0258 */ unsigned long _sectMax;
  /* 0x025c */ struct _GUID _clsid;
  /* 0x026c */ long Padding_16;
  /* 0x0270 */ class CDfNameList* _pdfl;
  /* 0x0278 */ class CDfNameList* _pdflCurrent;
  /* 0x0280 */ unsigned long _cStreams;
  /* 0x0284 */ long __PADDING__[1];
}; /* size: 0x0288 */

typedef struct _EVENTLOGRECORD
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long RecordNumber;
  /* 0x000c */ unsigned long TimeGenerated;
  /* 0x0010 */ unsigned long TimeWritten;
  /* 0x0014 */ unsigned long EventID;
  /* 0x0018 */ unsigned short EventType;
  /* 0x001a */ unsigned short NumStrings;
  /* 0x001c */ unsigned short EventCategory;
  /* 0x001e */ unsigned short ReservedFlags;
  /* 0x0020 */ unsigned long ClosingRecordNumber;
  /* 0x0024 */ unsigned long StringOffset;
  /* 0x0028 */ unsigned long UserSidLength;
  /* 0x002c */ unsigned long UserSidOffset;
  /* 0x0030 */ unsigned long DataLength;
  /* 0x0034 */ unsigned long DataOffset;
} EVENTLOGRECORD, *PEVENTLOGRECORD; /* size: 0x0038 */

enum SYSGEOTYPE
{
  GEO_NATION = 1,
  GEO_LATITUDE = 2,
  GEO_LONGITUDE = 3,
  GEO_ISO2 = 4,
  GEO_ISO3 = 5,
  GEO_RFC1766 = 6,
  GEO_LCID = 7,
  GEO_FRIENDLYNAME = 8,
  GEO_OFFICIALNAME = 9,
  GEO_TIMEZONES = 10,
  GEO_OFFICIALLANGUAGES = 11,
  GEO_ISO_UN_NUMBER = 12,
  GEO_PARENT = 13,
};

typedef struct _RTL_QUERY_DEBUG_INFORMATION_INFO
{
  /* 0x0000 */ unsigned long UniqueProcessId;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 Buffer;
} RTL_QUERY_DEBUG_INFORMATION_INFO, *PRTL_QUERY_DEBUG_INFORMATION_INFO; /* size: 0x0010 */

typedef enum _DPFLTR_TYPE
{
  DPFLTR_SYSTEM_ID = 0,
  DPFLTR_SMSS_ID = 1,
  DPFLTR_SETUP_ID = 2,
  DPFLTR_NTFS_ID = 3,
  DPFLTR_FSTUB_ID = 4,
  DPFLTR_CRASHDUMP_ID = 5,
  DPFLTR_CDAUDIO_ID = 6,
  DPFLTR_CDROM_ID = 7,
  DPFLTR_CLASSPNP_ID = 8,
  DPFLTR_DISK_ID = 9,
  DPFLTR_REDBOOK_ID = 10,
  DPFLTR_STORPROP_ID = 11,
  DPFLTR_SCSIPORT_ID = 12,
  DPFLTR_SCSIMINIPORT_ID = 13,
  DPFLTR_CONFIG_ID = 14,
  DPFLTR_I8042PRT_ID = 15,
  DPFLTR_SERMOUSE_ID = 16,
  DPFLTR_LSERMOUS_ID = 17,
  DPFLTR_KBDHID_ID = 18,
  DPFLTR_MOUHID_ID = 19,
  DPFLTR_KBDCLASS_ID = 20,
  DPFLTR_MOUCLASS_ID = 21,
  DPFLTR_TWOTRACK_ID = 22,
  DPFLTR_WMILIB_ID = 23,
  DPFLTR_ACPI_ID = 24,
  DPFLTR_AMLI_ID = 25,
  DPFLTR_HALIA64_ID = 26,
  DPFLTR_VIDEO_ID = 27,
  DPFLTR_SVCHOST_ID = 28,
  DPFLTR_VIDEOPRT_ID = 29,
  DPFLTR_TCPIP_ID = 30,
  DPFLTR_DMSYNTH_ID = 31,
  DPFLTR_NTOSPNP_ID = 32,
  DPFLTR_FASTFAT_ID = 33,
  DPFLTR_SAMSS_ID = 34,
  DPFLTR_PNPMGR_ID = 35,
  DPFLTR_NETAPI_ID = 36,
  DPFLTR_SCSERVER_ID = 37,
  DPFLTR_SCCLIENT_ID = 38,
  DPFLTR_SERIAL_ID = 39,
  DPFLTR_SERENUM_ID = 40,
  DPFLTR_UHCD_ID = 41,
  DPFLTR_RPCPROXY_ID = 42,
  DPFLTR_AUTOCHK_ID = 43,
  DPFLTR_DCOMSS_ID = 44,
  DPFLTR_UNIMODEM_ID = 45,
  DPFLTR_SIS_ID = 46,
  DPFLTR_FLTMGR_ID = 47,
  DPFLTR_WMICORE_ID = 48,
  DPFLTR_BURNENG_ID = 49,
  DPFLTR_IMAPI_ID = 50,
  DPFLTR_SXS_ID = 51,
  DPFLTR_FUSION_ID = 52,
  DPFLTR_IDLETASK_ID = 53,
  DPFLTR_SOFTPCI_ID = 54,
  DPFLTR_TAPE_ID = 55,
  DPFLTR_MCHGR_ID = 56,
  DPFLTR_IDEP_ID = 57,
  DPFLTR_PCIIDE_ID = 58,
  DPFLTR_FLOPPY_ID = 59,
  DPFLTR_FDC_ID = 60,
  DPFLTR_TERMSRV_ID = 61,
  DPFLTR_W32TIME_ID = 62,
  DPFLTR_PREFETCHER_ID = 63,
  DPFLTR_RSFILTER_ID = 64,
  DPFLTR_FCPORT_ID = 65,
  DPFLTR_PCI_ID = 66,
  DPFLTR_DMIO_ID = 67,
  DPFLTR_DMCONFIG_ID = 68,
  DPFLTR_DMADMIN_ID = 69,
  DPFLTR_WSOCKTRANSPORT_ID = 70,
  DPFLTR_VSS_ID = 71,
  DPFLTR_PNPMEM_ID = 72,
  DPFLTR_PROCESSOR_ID = 73,
  DPFLTR_DMSERVER_ID = 74,
  DPFLTR_SR_ID = 75,
  DPFLTR_INFINIBAND_ID = 76,
  DPFLTR_IHVDRIVER_ID = 77,
  DPFLTR_IHVVIDEO_ID = 78,
  DPFLTR_IHVAUDIO_ID = 79,
  DPFLTR_IHVNETWORK_ID = 80,
  DPFLTR_IHVSTREAMING_ID = 81,
  DPFLTR_IHVBUS_ID = 82,
  DPFLTR_HPS_ID = 83,
  DPFLTR_RTLTHREADPOOL_ID = 84,
  DPFLTR_LDR_ID = 85,
  DPFLTR_TCPIP6_ID = 86,
  DPFLTR_ISAPNP_ID = 87,
  DPFLTR_SHPC_ID = 88,
  DPFLTR_STORPORT_ID = 89,
  DPFLTR_STORMINIPORT_ID = 90,
  DPFLTR_PRINTSPOOLER_ID = 91,
  DPFLTR_VSSDYNDISK_ID = 92,
  DPFLTR_VERIFIER_ID = 93,
  DPFLTR_VDS_ID = 94,
  DPFLTR_VDSBAS_ID = 95,
  DPFLTR_VDSDYN_ID = 96,
  DPFLTR_VDSDYNDR_ID = 97,
  DPFLTR_VDSLDR_ID = 98,
  DPFLTR_VDSUTIL_ID = 99,
  DPFLTR_DFRGIFC_ID = 100,
  DPFLTR_DEFAULT_ID = 101,
  DPFLTR_MM_ID = 102,
  DPFLTR_DFSC_ID = 103,
  DPFLTR_WOW64_ID = 104,
  DPFLTR_ALPC_ID = 105,
  DPFLTR_WDI_ID = 106,
  DPFLTR_PERFLIB_ID = 107,
  DPFLTR_KTM_ID = 108,
  DPFLTR_IOSTRESS_ID = 109,
  DPFLTR_HEAP_ID = 110,
  DPFLTR_WHEA_ID = 111,
  DPFLTR_USERGDI_ID = 112,
  DPFLTR_MMCSS_ID = 113,
  DPFLTR_TPM_ID = 114,
  DPFLTR_THREADORDER_ID = 115,
  DPFLTR_ENVIRON_ID = 116,
  DPFLTR_EMS_ID = 117,
  DPFLTR_WDT_ID = 118,
  DPFLTR_FVEVOL_ID = 119,
  DPFLTR_NDIS_ID = 120,
  DPFLTR_NVCTRACE_ID = 121,
  DPFLTR_LUAFV_ID = 122,
  DPFLTR_APPCOMPAT_ID = 123,
  DPFLTR_USBSTOR_ID = 124,
  DPFLTR_SBP2PORT_ID = 125,
  DPFLTR_COVERAGE_ID = 126,
  DPFLTR_CACHEMGR_ID = 127,
  DPFLTR_MOUNTMGR_ID = 128,
  DPFLTR_CFR_ID = 129,
  DPFLTR_TXF_ID = 130,
  DPFLTR_KSECDD_ID = 131,
  DPFLTR_FLTREGRESS_ID = 132,
  DPFLTR_MPIO_ID = 133,
  DPFLTR_MSDSM_ID = 134,
  DPFLTR_UDFS_ID = 135,
  DPFLTR_PSHED_ID = 136,
  DPFLTR_STORVSP_ID = 137,
  DPFLTR_LSASS_ID = 138,
  DPFLTR_SSPICLI_ID = 139,
  DPFLTR_CNG_ID = 140,
  DPFLTR_EXFAT_ID = 141,
  DPFLTR_FILETRACE_ID = 142,
  DPFLTR_XSAVE_ID = 143,
  DPFLTR_SE_ID = 144,
  DPFLTR_DRIVEEXTENDER_ID = 145,
  DPFLTR_POWER_ID = 146,
  DPFLTR_CRASHDUMPXHCI_ID = 147,
  DPFLTR_GPIO_ID = 148,
  DPFLTR_REFS_ID = 149,
  DPFLTR_ENDOFTABLE_ID = 150,
} DPFLTR_TYPE, *PDPFLTR_TYPE;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask>* ptr_;
}; /* size: 0x0008 */

typedef struct _FILETIME
{
  /* 0x0000 */ unsigned long dwLowDateTime;
  /* 0x0004 */ unsigned long dwHighDateTime;
} FILETIME, *PFILETIME; /* size: 0x0008 */

typedef struct _DRIVER_INFO_8W
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_17;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ wchar_t* pEnvironment;
  /* 0x0018 */ wchar_t* pDriverPath;
  /* 0x0020 */ wchar_t* pDataFile;
  /* 0x0028 */ wchar_t* pConfigFile;
  /* 0x0030 */ wchar_t* pHelpFile;
  /* 0x0038 */ wchar_t* pDependentFiles;
  /* 0x0040 */ wchar_t* pMonitorName;
  /* 0x0048 */ wchar_t* pDefaultDataType;
  /* 0x0050 */ wchar_t* pszzPreviousNames;
  /* 0x0058 */ struct _FILETIME ftDriverDate;
  /* 0x0060 */ unsigned __int64 dwlDriverVersion;
  /* 0x0068 */ wchar_t* pszMfgName;
  /* 0x0070 */ wchar_t* pszOEMUrl;
  /* 0x0078 */ wchar_t* pszHardwareID;
  /* 0x0080 */ wchar_t* pszProvider;
  /* 0x0088 */ wchar_t* pszPrintProcessor;
  /* 0x0090 */ wchar_t* pszVendorSetup;
  /* 0x0098 */ wchar_t* pszzColorProfiles;
  /* 0x00a0 */ wchar_t* pszInfPath;
  /* 0x00a8 */ unsigned long dwPrinterDriverAttributes;
  /* 0x00ac */ long Padding_18;
  /* 0x00b0 */ wchar_t* pszzCoreDriverDependencies;
  /* 0x00b8 */ struct _FILETIME ftMinInboxDriverVerDate;
  /* 0x00c0 */ unsigned __int64 dwlMinInboxDriverVerVersion;
} DRIVER_INFO_8W, *PDRIVER_INFO_8W; /* size: 0x00c8 */

enum APPLICATION_VIEW_STATE
{
  AVS_FULLSCREEN_LANDSCAPE = 0,
  AVS_FILLED = 1,
  AVS_SNAPPED = 2,
  AVS_FULLSCREEN_PORTRAIT = 3,
};

enum DISPLAYCONFIG_DEVICE_INFO_TYPE
{
  DISPLAYCONFIG_DEVICE_INFO_GET_SOURCE_NAME = 1,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_NAME = 2,
  DISPLAYCONFIG_DEVICE_INFO_GET_TARGET_PREFERRED_MODE = 3,
  DISPLAYCONFIG_DEVICE_INFO_GET_ADAPTER_NAME = 4,
  DISPLAYCONFIG_DEVICE_INFO_SET_TARGET_PERSISTENCE = 5,
  DISPLAYCONFIG_DEVICE_INFO_FORCE_UINT32 = -1,
};

typedef struct _LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} LUID, *PLUID; /* size: 0x0008 */

struct DISPLAYCONFIG_DEVICE_INFO_HEADER
{
  /* 0x0000 */ enum DISPLAYCONFIG_DEVICE_INFO_TYPE type;
  /* 0x0004 */ unsigned int size;
  /* 0x0008 */ struct _LUID adapterId;
  /* 0x0010 */ unsigned int id;
}; /* size: 0x0014 */

struct DISPLAYCONFIG_ADAPTER_NAME
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ wchar_t adapterDevicePath[128];
}; /* size: 0x0114 */

struct _TP_JOB;

typedef enum _PS_ATTRIBUTE_NUM
{
  PsAttributeParentProcess = 0,
  PsAttributeDebugObject = 1,
  PsAttributeToken = 2,
  PsAttributeClientId = 3,
  PsAttributeTebAddress = 4,
  PsAttributeImageName = 5,
  PsAttributeImageInfo = 6,
  PsAttributeMemoryReserve = 7,
  PsAttributePriorityClass = 8,
  PsAttributeErrorMode = 9,
  PsAttributeStdHandleInfo = 10,
  PsAttributeHandleList = 11,
  PsAttributeGroupAffinity = 12,
  PsAttributePreferredNode = 13,
  PsAttributeIdealProcessor = 14,
  PsAttributeUmsThread = 15,
  PsAttributeMitigationOptions = 16,
  PsAttributeMax = 17,
} PS_ATTRIBUTE_NUM, *PPS_ATTRIBUTE_NUM;

struct IWrappedProtocol
{
}; /* size: 0x0008 */

typedef struct _SCARD_IO_REQUEST
{
  /* 0x0000 */ unsigned long dwProtocol;
  /* 0x0004 */ unsigned long cbPciLength;
} SCARD_IO_REQUEST, *PSCARD_IO_REQUEST; /* size: 0x0008 */

struct SCARD_T0_COMMAND
{
  /* 0x0000 */ unsigned char bCla;
  /* 0x0001 */ unsigned char bIns;
  /* 0x0002 */ unsigned char bP1;
  /* 0x0003 */ unsigned char bP2;
  /* 0x0004 */ unsigned char bP3;
}; /* size: 0x0005 */

struct SCARD_T0_REQUEST
{
  /* 0x0000 */ struct _SCARD_IO_REQUEST ioRequest;
  /* 0x0008 */ unsigned char bSw1;
  /* 0x0009 */ unsigned char bSw2;
  union
  {
    /* 0x000a */ struct SCARD_T0_COMMAND CmdBytes;
    /* 0x000a */ unsigned char rgbHeader[5];
  }; /* size: 0x0005 */
  /* 0x000f */ char __PADDING__[1];
}; /* size: 0x0010 */

typedef enum _PROCESSINFOCLASS
{
  ProcessBasicInformation = 0,
  ProcessQuotaLimits = 1,
  ProcessIoCounters = 2,
  ProcessVmCounters = 3,
  ProcessTimes = 4,
  ProcessBasePriority = 5,
  ProcessRaisePriority = 6,
  ProcessDebugPort = 7,
  ProcessExceptionPort = 8,
  ProcessAccessToken = 9,
  ProcessLdtInformation = 10,
  ProcessLdtSize = 11,
  ProcessDefaultHardErrorMode = 12,
  ProcessIoPortHandlers = 13,
  ProcessPooledUsageAndLimits = 14,
  ProcessWorkingSetWatch = 15,
  ProcessUserModeIOPL = 16,
  ProcessEnableAlignmentFaultFixup = 17,
  ProcessPriorityClass = 18,
  ProcessWx86Information = 19,
  ProcessHandleCount = 20,
  ProcessAffinityMask = 21,
  ProcessPriorityBoost = 22,
  ProcessDeviceMap = 23,
  ProcessSessionInformation = 24,
  ProcessForegroundInformation = 25,
  ProcessWow64Information = 26,
  ProcessImageFileName = 27,
  ProcessLUIDDeviceMapsEnabled = 28,
  ProcessBreakOnTermination = 29,
  ProcessDebugObjectHandle = 30,
  ProcessDebugFlags = 31,
  ProcessHandleTracing = 32,
  ProcessIoPriority = 33,
  ProcessExecuteFlags = 34,
  ProcessTlsInformation = 35,
  ProcessCookie = 36,
  ProcessImageInformation = 37,
  ProcessCycleTime = 38,
  ProcessPagePriority = 39,
  ProcessInstrumentationCallback = 40,
  ProcessThreadStackAllocation = 41,
  ProcessWorkingSetWatchEx = 42,
  ProcessImageFileNameWin32 = 43,
  ProcessImageFileMapping = 44,
  ProcessAffinityUpdateMode = 45,
  ProcessMemoryAllocationMode = 46,
  ProcessGroupInformation = 47,
  ProcessTokenVirtualizationEnabled = 48,
  ProcessConsoleHostProcess = 49,
  ProcessWindowInformation = 50,
  ProcessHandleInformation = 51,
  ProcessMitigationPolicy = 52,
  ProcessDynamicFunctionTableInformation = 53,
  ProcessHandleCheckingMode = 54,
  ProcessKeepAliveCount = 55,
  ProcessRevokeFileHandles = 56,
  ProcessWorkingSetControl = 57,
  MaxProcessInfoClass = 58,
} PROCESSINFOCLASS, *PPROCESSINFOCLASS;

struct tagMDINEXTMENU
{
  /* 0x0000 */ struct HMENU__* hmenuIn;
  /* 0x0008 */ struct HMENU__* hmenuNext;
  /* 0x0010 */ struct HWND__* hwndNext;
}; /* size: 0x0018 */

typedef enum _WPP_FLAG_LEN_ENUM_MAX
{
  WPP_MAX_FLAG_LEN_CHECK = 1,
} WPP_FLAG_LEN_ENUM_MAX, *PWPP_FLAG_LEN_ENUM_MAX;

typedef struct _FILE_ATTRIBUTE_CACHE_VALUE
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned short Size;
  /* 0x0006 */ unsigned short RequiredSize;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_ATTRIBUTE_CACHE_VALUE, *PFILE_ATTRIBUTE_CACHE_VALUE; /* size: 0x000c */

typedef struct _FILE_ATTRIBUTE_CACHE_PAIR
{
  /* 0x0000 */ wchar_t Name[100];
  /* 0x00c8 */ struct _FILE_ATTRIBUTE_CACHE_VALUE Value;
} FILE_ATTRIBUTE_CACHE_PAIR, *PFILE_ATTRIBUTE_CACHE_PAIR; /* size: 0x00d4 */

typedef struct _FILE_ATTRIBUTE_CACHE_VALUES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfValues;
  /* 0x0008 */ struct _FILE_ATTRIBUTE_CACHE_PAIR Attributes[1];
} FILE_ATTRIBUTE_CACHE_VALUES, *PFILE_ATTRIBUTE_CACHE_VALUES; /* size: 0x00dc */

typedef struct _CRYPT_PASSWORD_CREDENTIALSW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_19;
  /* 0x0008 */ wchar_t* pszUsername;
  /* 0x0010 */ wchar_t* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSW, *PCRYPT_PASSWORD_CREDENTIALSW; /* size: 0x0018 */

struct IAsyncRpcChannelBuffer
{
}; /* size: 0x0008 */

typedef enum _tagPARSEACTION
{
  PARSE_CANONICALIZE = 1,
  PARSE_FRIENDLY = 2,
  PARSE_SECURITY_URL = 3,
  PARSE_ROOTDOCUMENT = 4,
  PARSE_DOCUMENT = 5,
  PARSE_ANCHOR = 6,
  PARSE_ENCODE_IS_UNESCAPE = 7,
  PARSE_DECODE_IS_ESCAPE = 8,
  PARSE_PATH_FROM_URL = 9,
  PARSE_URL_FROM_PATH = 10,
  PARSE_MIME = 11,
  PARSE_SERVER = 12,
  PARSE_SCHEMA = 13,
  PARSE_SITE = 14,
  PARSE_DOMAIN = 15,
  PARSE_LOCATION = 16,
  PARSE_SECURITY_DOMAIN = 17,
  PARSE_ESCAPE = 18,
  PARSE_UNESCAPE = 19,
} tagPARSEACTION, *PtagPARSEACTION;

typedef enum _SUITE_TYPE
{
  SmallBusiness = 0,
  Enterprise = 1,
  BackOffice = 2,
  CommunicationServer = 3,
  TerminalServer = 4,
  SmallBusinessRestricted = 5,
  EmbeddedNT = 6,
  DataCenter = 7,
  SingleUserTS = 8,
  Personal = 9,
  Blade = 10,
  EmbeddedRestricted = 11,
  SecurityAppliance = 12,
  StorageServer = 13,
  ComputeServer = 14,
  WHServer = 15,
  PhoneNT = 16,
  MaxSuiteType = 17,
} SUITE_TYPE, *PSUITE_TYPE;

typedef struct _FILE_STORAGE_INFO
{
  /* 0x0000 */ unsigned long LogicalBytesPerSector;
  /* 0x0004 */ unsigned long PhysicalBytesPerSectorForAtomicity;
  /* 0x0008 */ unsigned long PhysicalBytesPerSectorForPerformance;
  /* 0x000c */ unsigned long FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ByteOffsetForSectorAlignment;
  /* 0x0018 */ unsigned long ByteOffsetForPartitionAlignment;
} FILE_STORAGE_INFO, *PFILE_STORAGE_INFO; /* size: 0x001c */

typedef struct _CERT_SYSTEM_STORE_RELOCATE_PARA
{
  union
  {
    /* 0x0000 */ struct HKEY__* hKeyBase;
    /* 0x0000 */ void* pvBase;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ void* pvSystemStore;
    /* 0x0008 */ const char* pszSystemStore;
    /* 0x0008 */ const wchar_t* pwszSystemStore;
  }; /* size: 0x0008 */
} CERT_SYSTEM_STORE_RELOCATE_PARA, *PCERT_SYSTEM_STORE_RELOCATE_PARA; /* size: 0x0010 */

typedef enum _WPP_FLAG_LEN_ENUM
{
  WPP_FLAG_LEN = 1,
} WPP_FLAG_LEN_ENUM, *PWPP_FLAG_LEN_ENUM;

typedef struct _POWER_IDLE_RESILIENCY
{
  /* 0x0000 */ unsigned long CoalescingTimeout;
  /* 0x0004 */ unsigned long IdleResiliencyPeriod;
} POWER_IDLE_RESILIENCY, *PPOWER_IDLE_RESILIENCY; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> const >;

enum DISPLAYCONFIG_SCALING
{
  DISPLAYCONFIG_SCALING_IDENTITY = 1,
  DISPLAYCONFIG_SCALING_CENTERED = 2,
  DISPLAYCONFIG_SCALING_STRETCHED = 3,
  DISPLAYCONFIG_SCALING_ASPECTRATIOCENTEREDMAX = 4,
  DISPLAYCONFIG_SCALING_CUSTOM = 5,
  DISPLAYCONFIG_SCALING_PREFERRED = 128,
  DISPLAYCONFIG_SCALING_FORCE_UINT32 = -1,
};

typedef struct _API_SET_VALUE_ENTRY
{
  /* 0x0000 */ unsigned long NameOffset;
  /* 0x0004 */ unsigned long NameLength;
  /* 0x0008 */ unsigned long ValueOffset;
  /* 0x000c */ unsigned long ValueLength;
} API_SET_VALUE_ENTRY, *PAPI_SET_VALUE_ENTRY; /* size: 0x0010 */

struct ITypeLib2
{
}; /* size: 0x0008 */

enum CFileMoniker::olever
{
  undetermined = 0,
  ole1 = 1,
  ole2 = 2,
};

struct IRpcChannelBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetBuffer /* function */;
  /* 0x0020 */ void* SendReceive /* function */;
  /* 0x0028 */ void* FreeBuffer /* function */;
  /* 0x0030 */ void* GetDestCtx /* function */;
  /* 0x0038 */ void* IsConnected /* function */;
}; /* size: 0x0040 */

typedef struct _ACE_HEADER
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char AceFlags;
  /* 0x0002 */ unsigned short AceSize;
} ACE_HEADER, *PACE_HEADER; /* size: 0x0004 */

typedef struct _ACCESS_ALLOWED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_OBJECT_ACE, *PACCESS_ALLOWED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

struct IMarshalingStream
{
}; /* size: 0x0008 */

struct _TP_CLEANUP_GROUP;

typedef enum _PLUGPLAY_CONTROL_CLASS
{
  PlugPlayControlEnumerateDevice = 0,
  PlugPlayControlRegisterNewDevice = 1,
  PlugPlayControlDeregisterDevice = 2,
  PlugPlayControlInitializeDevice = 3,
  PlugPlayControlStartDevice = 4,
  PlugPlayControlUnlockDevice = 5,
  PlugPlayControlQueryAndRemoveDevice = 6,
  PlugPlayControlUserResponse = 7,
  PlugPlayControlGenerateLegacyDevice = 8,
  PlugPlayControlGetInterfaceDeviceList = 9,
  PlugPlayControlProperty = 10,
  PlugPlayControlDeviceClassAssociation = 11,
  PlugPlayControlGetRelatedDevice = 12,
  PlugPlayControlGetInterfaceDeviceAlias = 13,
  PlugPlayControlDeviceStatus = 14,
  PlugPlayControlGetDeviceDepth = 15,
  PlugPlayControlQueryDeviceRelations = 16,
  PlugPlayControlTargetDeviceRelation = 17,
  PlugPlayControlQueryConflictList = 18,
  PlugPlayControlRetrieveDock = 19,
  PlugPlayControlResetDevice = 20,
  PlugPlayControlHaltDevice = 21,
  PlugPlayControlGetBlockedDriverList = 22,
  PlugPlayControlGetDeviceInterfaceEnabled = 23,
  MaxPlugPlayControl = 24,
} PLUGPLAY_CONTROL_CLASS, *PPLUGPLAY_CONTROL_CLASS;

struct SHashChain
{
  /* 0x0000 */ struct SHashChain* pNext;
  /* 0x0008 */ struct SHashChain* pPrev;
}; /* size: 0x0010 */

struct SDWORDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long key;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct ApartmentEntry
{
  /* 0x0000 */ struct SDWORDHashNode node;
  /* 0x0018 */ unsigned long hCOMActivator;
  /* 0x001c */ unsigned long hWinRTActivator;
}; /* size: 0x0020 */

class CRefcountedObject
{
  /* 0x0000 */ unsigned long _cReferences;
}; /* size: 0x0004 */

enum ReplacesCorHdrNumericDefines
{
  COMIMAGE_FLAGS_ILONLY = 1,
  COMIMAGE_FLAGS_32BITREQUIRED = 2,
  COMIMAGE_FLAGS_IL_LIBRARY = 4,
  COMIMAGE_FLAGS_STRONGNAMESIGNED = 8,
  COMIMAGE_FLAGS_NATIVE_ENTRYPOINT = 16,
  COMIMAGE_FLAGS_TRACKDEBUGDATA = 0x10000,
  COR_VERSION_MAJOR_V2 = 2,
  COR_VERSION_MAJOR = 2,
  COR_VERSION_MINOR = 5,
  COR_DELETED_NAME_LENGTH = 8,
  COR_VTABLEGAP_NAME_LENGTH = 8,
  NATIVE_TYPE_MAX_CB = 1,
  COR_ILMETHOD_SECT_SMALL_MAX_DATASIZE = 255,
  IMAGE_COR_MIH_METHODRVA = 1,
  IMAGE_COR_MIH_EHRVA = 2,
  IMAGE_COR_MIH_BASICBLOCK = 8,
  COR_VTABLE_32BIT = 1,
  COR_VTABLE_64BIT = 2,
  COR_VTABLE_FROM_UNMANAGED = 4,
  COR_VTABLE_FROM_UNMANAGED_RETAIN_APPDOMAIN = 8,
  COR_VTABLE_CALL_MOST_DERIVED = 16,
  IMAGE_COR_EATJ_THUNK_SIZE = 32,
  MAX_CLASS_NAME = 1024,
  MAX_PACKAGE_NAME = 1024,
};

typedef struct _BCryptBufferDesc
{
  /* 0x0000 */ unsigned long ulVersion;
  /* 0x0004 */ unsigned long cBuffers;
  /* 0x0008 */ struct _BCryptBuffer* pBuffers;
} BCryptBufferDesc, *PBCryptBufferDesc; /* size: 0x0010 */

struct IStream
{
}; /* size: 0x0008 */

enum RO_INIT_TYPE
{
  RO_INIT_SINGLETHREADED = 0,
  RO_INIT_MULTITHREADED = 1,
};

typedef struct _CM_KEYBOARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char Subtype;
  /* 0x0006 */ unsigned short KeyboardFlags;
} CM_KEYBOARD_DEVICE_DATA, *PCM_KEYBOARD_DEVICE_DATA; /* size: 0x0008 */

typedef enum _SYSTEM_VA_TYPE
{
  SystemVaTypeAll = 0,
  SystemVaTypeNonPagedPool = 1,
  SystemVaTypePagedPool = 2,
  SystemVaTypeSystemCache = 3,
  SystemVaTypeSystemPtes = 4,
  SystemVaTypeSessionSpace = 5,
  SystemVaTypeMax = 6,
} SYSTEM_VA_TYPE, *PSYSTEM_VA_TYPE;

typedef struct _RTL_UNLOAD_EVENT_TRACE64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ unsigned long Version[2];
  /* 0x0064 */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE64, *PRTL_UNLOAD_EVENT_TRACE64; /* size: 0x0068 */

typedef enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = -1,
  Internal = 0,
  Isa = 1,
  Eisa = 2,
  MicroChannel = 3,
  TurboChannel = 4,
  PCIBus = 5,
  VMEBus = 6,
  NuBus = 7,
  PCMCIABus = 8,
  CBus = 9,
  MPIBus = 10,
  MPSABus = 11,
  ProcessorInternal = 12,
  InternalPowerBus = 13,
  PNPISABus = 14,
  PNPBus = 15,
  Vmcs = 16,
  ACPIBus = 17,
  MaximumInterfaceType = 18,
} INTERFACE_TYPE, *PINTERFACE_TYPE;

class Microsoft::WRL::Details::MakeAllocator<ClipboardDataObjectTask,0>
{
  /* 0x0000 */ void* buffer_;
}; /* size: 0x0008 */

typedef struct _WNF_TYPE_ID
{
  /* 0x0000 */ struct _GUID TypeId;
} WNF_TYPE_ID, *PWNF_TYPE_ID; /* size: 0x0010 */

struct tagCOMVERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
}; /* size: 0x0004 */

struct tagInstantiationInfoData
{
  /* 0x0000 */ struct _GUID classId;
  /* 0x0010 */ unsigned long classCtx;
  /* 0x0014 */ unsigned long actvflags;
  /* 0x0018 */ int fIsSurrogate;
  /* 0x001c */ unsigned long cIID;
  /* 0x0020 */ unsigned long instFlag;
  /* 0x0024 */ long Padding_20;
  /* 0x0028 */ struct _GUID* pIID;
  /* 0x0030 */ unsigned long thisSize;
  /* 0x0034 */ struct tagCOMVERSION clientCOMVersion;
}; /* size: 0x0038 */

typedef enum __vc_attributes::event_sourceAttribute::optimize_e
{
  speed = 0,
  size = 1,
} _vc_attributes::event_sourceAttribute::optimize_e, *P_vc_attributes::event_sourceAttribute::optimize_e;

struct tagHSZPAIR
{
  /* 0x0000 */ struct HSZ__* hszSvc;
  /* 0x0008 */ struct HSZ__* hszTopic;
}; /* size: 0x0010 */

typedef struct _PROCESS_HEAP_ENTRY
{
  /* 0x0000 */ void* lpData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char cbOverhead;
  /* 0x000d */ unsigned char iRegionIndex;
  /* 0x000e */ unsigned short wFlags;
  union
  {
    struct
    {
      /* 0x0010 */ void* hMem;
      /* 0x0018 */ unsigned long dwReserved[3];
      /* 0x0024 */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0010 */ unsigned long dwCommittedSize;
      /* 0x0014 */ unsigned long dwUnCommittedSize;
      /* 0x0018 */ void* lpFirstBlock;
      /* 0x0020 */ void* lpLastBlock;
    } /* size: 0x0018 */ Region;
  }; /* size: 0x0018 */
} PROCESS_HEAP_ENTRY, *PPROCESS_HEAP_ENTRY; /* size: 0x0028 */

struct tagPROPSPEC
{
  /* 0x0000 */ unsigned long ulKind;
  /* 0x0004 */ long Padding_21;
  union
  {
    /* 0x0008 */ unsigned long propid;
    /* 0x0008 */ wchar_t* lpwstr;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct tagRemSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ unsigned long dwHandleType;
  /* 0x0008 */ unsigned long pData;
  /* 0x000c */ unsigned long pUnkForRelease;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct _NDR64_STRUCTURE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasPointerInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HasMemberInfo : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasConfArray : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasOrigPointerInfo : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasOrigMemberInfo : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved2 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_STRUCTURE_FLAGS, *PNDR64_STRUCTURE_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
} NDR64_STRUCTURE_HEADER_FORMAT, *PNDR64_STRUCTURE_HEADER_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag9_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag9_t, *P_midl_frag9_t; /* size: 0x0008 */

typedef enum _KPROFILE_SOURCE
{
  ProfileTime = 0,
  ProfileAlignmentFixup = 1,
  ProfileTotalIssues = 2,
  ProfilePipelineDry = 3,
  ProfileLoadInstructions = 4,
  ProfilePipelineFrozen = 5,
  ProfileBranchInstructions = 6,
  ProfileTotalNonissues = 7,
  ProfileDcacheMisses = 8,
  ProfileIcacheMisses = 9,
  ProfileCacheMisses = 10,
  ProfileBranchMispredictions = 11,
  ProfileStoreInstructions = 12,
  ProfileFpInstructions = 13,
  ProfileIntegerInstructions = 14,
  Profile2Issue = 15,
  Profile3Issue = 16,
  Profile4Issue = 17,
  ProfileSpecialInstructions = 18,
  ProfileTotalCycles = 19,
  ProfileIcacheIssues = 20,
  ProfileDcacheAccesses = 21,
  ProfileMemoryBarrierCycles = 22,
  ProfileLoadLinkedIssues = 23,
  ProfileMaximum = 24,
} KPROFILE_SOURCE, *PKPROFILE_SOURCE;

struct _TP_ALPC;

typedef enum _INSTALLSPECTYPE
{
  APPNAME = 1,
  FILEEXT = 2,
  PROGID = 3,
  COMCLASS = 4,
} INSTALLSPECTYPE, *PINSTALLSPECTYPE;

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOAD64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_22;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ char FileName[260];
  /* 0x011c */ unsigned char Reparse;
  /* 0x011d */ char Padding_23[3];
  /* 0x0120 */ void* hFile;
  /* 0x0128 */ unsigned long Flags;
  /* 0x012c */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOAD64, *PIMAGEHLP_DEFERRED_SYMBOL_LOAD64; /* size: 0x0130 */

enum SLR_FLAGS
{
  SLR_NO_UI = 1,
  SLR_ANY_MATCH = 2,
  SLR_UPDATE = 4,
  SLR_NOUPDATE = 8,
  SLR_NOSEARCH = 16,
  SLR_NOTRACK = 32,
  SLR_NOLINKINFO = 64,
  SLR_INVOKE_MSI = 128,
  SLR_NO_UI_WITH_MSG_PUMP = 257,
  SLR_OFFER_DELETE_WITHOUT_FILE = 512,
  SLR_KNOWNFOLDER = 1024,
  SLR_MACHINE_IN_LOCAL_TARGET = 2048,
  SLR_UPDATE_MACHINE_AND_SID = 4096,
};

typedef union _ULARGE_INTEGER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    } /* size: 0x0008 */ u;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ULARGE_INTEGER, *PULARGE_INTEGER; /* size: 0x0008 */

union tagCY
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Lo;
      /* 0x0004 */ long Hi;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 int64;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

struct tagBSTRBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_24;
  /* 0x0008 */ unsigned char* pData;
}; /* size: 0x0010 */

struct tagBLOB
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_25;
  /* 0x0008 */ unsigned char* pBlobData;
}; /* size: 0x0010 */

struct tagCAC
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_26;
  /* 0x0008 */ char* pElems;
}; /* size: 0x0010 */

struct tagCAUB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_27;
  /* 0x0008 */ unsigned char* pElems;
}; /* size: 0x0010 */

struct tagCAI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_28;
  /* 0x0008 */ short* pElems;
}; /* size: 0x0010 */

struct tagCAUI
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_29;
  /* 0x0008 */ unsigned short* pElems;
}; /* size: 0x0010 */

struct tagCAL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_30;
  /* 0x0008 */ long* pElems;
}; /* size: 0x0010 */

struct tagCAUL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_31;
  /* 0x0008 */ unsigned long* pElems;
}; /* size: 0x0010 */

struct tagCAH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_32;
  /* 0x0008 */ union _LARGE_INTEGER* pElems;
}; /* size: 0x0010 */

struct tagCAUH
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_33;
  /* 0x0008 */ union _ULARGE_INTEGER* pElems;
}; /* size: 0x0010 */

struct tagCAFLT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_34;
  /* 0x0008 */ float* pElems;
}; /* size: 0x0010 */

struct tagCADBL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_35;
  /* 0x0008 */ double* pElems;
}; /* size: 0x0010 */

struct tagCABOOL
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_36;
  /* 0x0008 */ short* pElems;
}; /* size: 0x0010 */

struct tagCASCODE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_37;
  /* 0x0008 */ long* pElems;
}; /* size: 0x0010 */

struct tagCACY
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_38;
  /* 0x0008 */ union tagCY* pElems;
}; /* size: 0x0010 */

struct tagCADATE
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_39;
  /* 0x0008 */ double* pElems;
}; /* size: 0x0010 */

struct tagCAFILETIME
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_40;
  /* 0x0008 */ struct _FILETIME* pElems;
}; /* size: 0x0010 */

struct tagCACLSID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_41;
  /* 0x0008 */ struct _GUID* pElems;
}; /* size: 0x0010 */

struct tagCACLIPDATA
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_42;
  /* 0x0008 */ struct tagCLIPDATA* pElems;
}; /* size: 0x0010 */

struct tagCABSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_43;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

struct tagCABSTRBLOB
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_44;
  /* 0x0008 */ struct tagBSTRBLOB* pElems;
}; /* size: 0x0010 */

struct tagCALPSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_45;
  /* 0x0008 */ char** pElems;
}; /* size: 0x0010 */

struct tagCALPWSTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_46;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

struct tagCAPROPVARIANT
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_47;
  /* 0x0008 */ struct tagPROPVARIANT* pElems;
}; /* size: 0x0010 */

struct tagDEC
{
  /* 0x0000 */ unsigned short wReserved;
  union
  {
    struct
    {
      /* 0x0002 */ unsigned char scale;
      /* 0x0003 */ unsigned char sign;
    }; /* size: 0x0002 */
    /* 0x0002 */ unsigned short signscale;
  }; /* size: 0x0002 */
  /* 0x0004 */ unsigned long Hi32;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Lo32;
      /* 0x000c */ unsigned long Mid32;
    }; /* size: 0x0008 */
    /* 0x0008 */ unsigned __int64 Lo64;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

struct tagPROPVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ union _LARGE_INTEGER hVal;
        /* 0x0008 */ union _ULARGE_INTEGER uhVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ struct _FILETIME filetime;
        /* 0x0008 */ struct _GUID* puuid;
        /* 0x0008 */ struct tagCLIPDATA* pclipdata;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct tagBSTRBLOB bstrblobVal;
        /* 0x0008 */ struct tagBLOB blob;
        /* 0x0008 */ char* pszVal;
        /* 0x0008 */ wchar_t* pwszVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct IStream* pStream;
        /* 0x0008 */ struct IStorage* pStorage;
        /* 0x0008 */ struct tagVersionedStream* pVersionedStream;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ struct tagCAC cac;
        /* 0x0008 */ struct tagCAUB caub;
        /* 0x0008 */ struct tagCAI cai;
        /* 0x0008 */ struct tagCAUI caui;
        /* 0x0008 */ struct tagCAL cal;
        /* 0x0008 */ struct tagCAUL caul;
        /* 0x0008 */ struct tagCAH cah;
        /* 0x0008 */ struct tagCAUH cauh;
        /* 0x0008 */ struct tagCAFLT caflt;
        /* 0x0008 */ struct tagCADBL cadbl;
        /* 0x0008 */ struct tagCABOOL cabool;
        /* 0x0008 */ struct tagCASCODE cascode;
        /* 0x0008 */ struct tagCACY cacy;
        /* 0x0008 */ struct tagCADATE cadate;
        /* 0x0008 */ struct tagCAFILETIME cafiletime;
        /* 0x0008 */ struct tagCACLSID cauuid;
        /* 0x0008 */ struct tagCACLIPDATA caclipdata;
        /* 0x0008 */ struct tagCABSTR cabstr;
        /* 0x0008 */ struct tagCABSTRBLOB cabstrblob;
        /* 0x0008 */ struct tagCALPSTR calpstr;
        /* 0x0008 */ struct tagCALPWSTR calpwstr;
        /* 0x0008 */ struct tagCAPROPVARIANT capropvar;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagPROPVARIANT* pvarVal;
      }; /* size: 0x0010 */
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct tagDEC decVal;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

typedef enum __MIDL_IInternetSecurityManager_0001
{
  PUAF_DEFAULT = 0,
  PUAF_NOUI = 1,
  PUAF_ISFILE = 2,
  PUAF_WARN_IF_DENIED = 4,
  PUAF_FORCEUI_FOREGROUND = 8,
  PUAF_CHECK_TIFS = 16,
  PUAF_DONTCHECKBOXINDIALOG = 32,
  PUAF_TRUSTED = 64,
  PUAF_ACCEPT_WILDCARD_SCHEME = 128,
  PUAF_ENFORCERESTRICTED = 256,
  PUAF_NOSAVEDFILECHECK = 512,
  PUAF_REQUIRESAVEDFILECHECK = 1024,
  PUAF_DONT_USE_CACHE = 4096,
  PUAF_RESERVED1 = 8192,
  PUAF_RESERVED2 = 16384,
  PUAF_LMZ_UNLOCKED = 0x10000,
  PUAF_LMZ_LOCKED = 0x20000,
  PUAF_DEFAULTZONEPOL = 0x40000,
  PUAF_NPL_USE_LOCKED_IF_RESTRICTED = 0x80000,
  PUAF_NOUIIFLOCKED = 0x100000,
  PUAF_DRAGPROTOCOLCHECK = 0x200000,
} _MIDL_IInternetSecurityManager_0001, *P_MIDL_IInternetSecurityManager_0001;

enum PROXY_PHASE
{
  PROXY_CALCSIZE = 0,
  PROXY_GETBUFFER = 1,
  PROXY_MARSHAL = 2,
  PROXY_SENDRECEIVE = 3,
  PROXY_UNMARSHAL = 4,
};

typedef union _RPC_ASYNC_NOTIFICATION_INFO
{
  union
  {
    struct
    {
      /* 0x0000 */ void* NotificationRoutine /* function */;
      /* 0x0008 */ void* hThread;
    } /* size: 0x0010 */ APC;
    struct
    {
      /* 0x0000 */ void* hIOPort;
      /* 0x0008 */ unsigned long dwNumberOfBytesTransferred;
      /* 0x000c */ long Padding_48;
      /* 0x0010 */ unsigned __int64 dwCompletionKey;
      /* 0x0018 */ struct _OVERLAPPED* lpOverlapped;
    } /* size: 0x0020 */ IOC;
    struct
    {
      /* 0x0000 */ struct HWND__* hWnd;
      /* 0x0008 */ unsigned int Msg;
      /* 0x000c */ long __PADDING__[1];
    } /* size: 0x0010 */ HWND;
    /* 0x0000 */ void* hEvent;
    /* 0x0000 */ void* NotificationRoutine /* function */;
  }; /* size: 0x0020 */
} RPC_ASYNC_NOTIFICATION_INFO, *PRPC_ASYNC_NOTIFICATION_INFO; /* size: 0x0020 */

typedef struct _CTL_USAGE
{
  /* 0x0000 */ unsigned long cUsageIdentifier;
  /* 0x0004 */ long Padding_49;
  /* 0x0008 */ char** rgpszUsageIdentifier;
} CTL_USAGE, *PCTL_USAGE; /* size: 0x0010 */

typedef struct _TXFS_LIST_TRANSACTIONS
{
  /* 0x0000 */ unsigned __int64 NumberOfTransactions;
  /* 0x0008 */ unsigned __int64 BufferSizeRequired;
} TXFS_LIST_TRANSACTIONS, *PTXFS_LIST_TRANSACTIONS; /* size: 0x0010 */

typedef enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e
{
  eBoolean = 0,
  eInteger = 1,
  eFloat = 2,
  eDouble = 3,
} _vc_attributes::helper_attributes::v1_alttypeAttribute::type_e, *P_vc_attributes::helper_attributes::v1_alttypeAttribute::type_e;

struct tagCRGB
{
  /* 0x0000 */ unsigned char bRed;
  /* 0x0001 */ unsigned char bGreen;
  /* 0x0002 */ unsigned char bBlue;
  /* 0x0003 */ unsigned char bExtra;
}; /* size: 0x0004 */

typedef struct _CRYPT_PROVIDER_REG
{
  /* 0x0000 */ unsigned long cAliases;
  /* 0x0004 */ long Padding_50;
  /* 0x0008 */ wchar_t** rgpszAliases;
  /* 0x0010 */ struct _CRYPT_IMAGE_REG* pUM;
  /* 0x0018 */ struct _CRYPT_IMAGE_REG* pKM;
} CRYPT_PROVIDER_REG, *PCRYPT_PROVIDER_REG; /* size: 0x0020 */

class CChannelObject;

typedef struct _FILE_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFORMATION, *PFILE_BASIC_INFORMATION; /* size: 0x0028 */

typedef struct _FILE_STANDARD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFORMATION, *PFILE_STANDARD_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_INTERNAL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IndexNumber;
} FILE_INTERNAL_INFORMATION, *PFILE_INTERNAL_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_EA_INFORMATION
{
  /* 0x0000 */ unsigned long EaSize;
} FILE_EA_INFORMATION, *PFILE_EA_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_ACCESS_INFORMATION
{
  /* 0x0000 */ unsigned long AccessFlags;
} FILE_ACCESS_INFORMATION, *PFILE_ACCESS_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_POSITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CurrentByteOffset;
} FILE_POSITION_INFORMATION, *PFILE_POSITION_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_MODE_INFORMATION
{
  /* 0x0000 */ unsigned long Mode;
} FILE_MODE_INFORMATION, *PFILE_MODE_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_ALIGNMENT_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFORMATION, *PFILE_ALIGNMENT_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFORMATION, *PFILE_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_ALL_INFORMATION
{
  /* 0x0000 */ struct _FILE_BASIC_INFORMATION BasicInformation;
  /* 0x0028 */ struct _FILE_STANDARD_INFORMATION StandardInformation;
  /* 0x0040 */ struct _FILE_INTERNAL_INFORMATION InternalInformation;
  /* 0x0048 */ struct _FILE_EA_INFORMATION EaInformation;
  /* 0x004c */ struct _FILE_ACCESS_INFORMATION AccessInformation;
  /* 0x0050 */ struct _FILE_POSITION_INFORMATION PositionInformation;
  /* 0x0058 */ struct _FILE_MODE_INFORMATION ModeInformation;
  /* 0x005c */ struct _FILE_ALIGNMENT_INFORMATION AlignmentInformation;
  /* 0x0060 */ struct _FILE_NAME_INFORMATION NameInformation;
} FILE_ALL_INFORMATION, *PFILE_ALL_INFORMATION; /* size: 0x0068 */

typedef enum _IDL_CS_CONVERT
{
  IDL_CS_NO_CONVERT = 0,
  IDL_CS_IN_PLACE_CONVERT = 1,
  IDL_CS_NEW_BUFFER_CONVERT = 2,
} IDL_CS_CONVERT, *PIDL_CS_CONVERT;

struct IProcessInitControl
{
}; /* size: 0x0008 */

typedef struct _CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB blob;
} CMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_ADD_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x0018 */

typedef enum _BUS_DATA_TYPE
{
  ConfigurationSpaceUndefined = -1,
  Cmos = 0,
  EisaConfiguration = 1,
  Pos = 2,
  CbusConfiguration = 3,
  PCIConfiguration = 4,
  VMEConfiguration = 5,
  NuBusConfiguration = 6,
  PCMCIAConfiguration = 7,
  MPIConfiguration = 8,
  MPSAConfiguration = 9,
  PNPISAConfiguration = 10,
  SgiInternalConfiguration = 11,
  MaximumBusDataType = 12,
} BUS_DATA_TYPE, *PBUS_DATA_TYPE;

typedef enum _TAG_UNNAMED_2
{
  sfImage = 0,
  sfDbg = 1,
  sfPdb = 2,
  sfMpd = 3,
  sfMax = 4,
} TAG_UNNAMED_2, *PTAG_UNNAMED_2;

struct tagCLIPDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long ulClipFmt;
  /* 0x0008 */ unsigned char* pClipData;
}; /* size: 0x0010 */

enum tagSTGC
{
  STGC_DEFAULT = 0,
  STGC_OVERWRITE = 1,
  STGC_ONLYIFCURRENT = 2,
  STGC_DANGEROUSLYCOMMITMERELYTODISKCACHE = 4,
  STGC_CONSOLIDATE = 8,
};

typedef struct _PROC_THREAD_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 Attribute;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned __int64 Value;
} PROC_THREAD_ATTRIBUTE, *PPROC_THREAD_ATTRIBUTE; /* size: 0x0018 */

typedef enum _RTL_PATH_TYPE
{
  RtlPathTypeUnknown = 0,
  RtlPathTypeUncAbsolute = 1,
  RtlPathTypeDriveAbsolute = 2,
  RtlPathTypeDriveRelative = 3,
  RtlPathTypeRooted = 4,
  RtlPathTypeRelative = 5,
  RtlPathTypeLocalDevice = 6,
  RtlPathTypeRootLocalDevice = 7,
} RTL_PATH_TYPE, *PRTL_PATH_TYPE;

typedef enum _MINIDUMP_CALLBACK_TYPE
{
  ModuleCallback = 0,
  ThreadCallback = 1,
  ThreadExCallback = 2,
  IncludeThreadCallback = 3,
  IncludeModuleCallback = 4,
  MemoryCallback = 5,
  CancelCallback = 6,
  WriteKernelMinidumpCallback = 7,
  KernelMinidumpStatusCallback = 8,
  RemoveMemoryCallback = 9,
  IncludeVmRegionCallback = 10,
  IoStartCallback = 11,
  IoWriteAllCallback = 12,
  IoFinishCallback = 13,
  ReadMemoryFailureCallback = 14,
  SecondaryFlagsCallback = 15,
} MINIDUMP_CALLBACK_TYPE, *PMINIDUMP_CALLBACK_TYPE;

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >
{
}; /* size: 0x0008 */

typedef struct _CERT_ISSUER_SERIAL_NUMBER
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerialNumber;
} CERT_ISSUER_SERIAL_NUMBER, *PCERT_ISSUER_SERIAL_NUMBER; /* size: 0x0020 */

typedef struct _CERT_ID
{
  /* 0x0000 */ unsigned long dwIdChoice;
  /* 0x0004 */ long Padding_51;
  union
  {
    /* 0x0008 */ struct _CERT_ISSUER_SERIAL_NUMBER IssuerSerialNumber;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB KeyId;
    struct
    {
      /* 0x0008 */ struct _CRYPTOAPI_BLOB HashId;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} CERT_ID, *PCERT_ID; /* size: 0x0028 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO
{
  /* 0x0000 */ struct _CERT_ID RecipientId;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0038 */ struct _FILETIME Date;
  /* 0x0040 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_INFO; /* size: 0x0048 */

struct tagSIZE
{
  /* 0x0000 */ long cx;
  /* 0x0004 */ long cy;
}; /* size: 0x0008 */

typedef struct _RECTL
{
  /* 0x0000 */ long left;
  /* 0x0004 */ long top;
  /* 0x0008 */ long right;
  /* 0x000c */ long bottom;
} RECTL, *PRECTL; /* size: 0x0010 */

typedef struct _FORM_INFO_2W
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_52;
  /* 0x0008 */ const wchar_t* pName;
  /* 0x0010 */ struct tagSIZE Size;
  /* 0x0018 */ struct _RECTL ImageableArea;
  /* 0x0028 */ const char* pKeyword;
  /* 0x0030 */ unsigned long StringType;
  /* 0x0034 */ long Padding_53;
  /* 0x0038 */ const wchar_t* pMuiDll;
  /* 0x0040 */ unsigned long dwResourceId;
  /* 0x0044 */ long Padding_54;
  /* 0x0048 */ const wchar_t* pDisplayName;
  /* 0x0050 */ unsigned short wLangId;
  /* 0x0052 */ char __PADDING__[6];
} FORM_INFO_2W, *PFORM_INFO_2W; /* size: 0x0058 */

typedef enum _WORKER_FACTORY_CALLBACK_CLASS
{
  WorkerFactoryCallbackNormal = 0,
  WorkerFactoryCallbackLongRunning = 1,
  WorkerFactoryCallbackIndependent = 2,
  WorkerFactoryCallbackDetectedUnrecoverableError = 3,
} WORKER_FACTORY_CALLBACK_CLASS, *PWORKER_FACTORY_CALLBACK_CLASS;

typedef struct _IMAGEHLP_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_55;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ char Name[1];
  /* 0x001d */ char __PADDING__[3];
} IMAGEHLP_SYMBOL64, *PIMAGEHLP_SYMBOL64; /* size: 0x0020 */

typedef struct _IMAGEHLP_SYMBOL64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOL64 sym;
  /* 0x0020 */ char name[2001];
  /* 0x07f1 */ char __PADDING__[7];
} IMAGEHLP_SYMBOL64_PACKAGE, *PIMAGEHLP_SYMBOL64_PACKAGE; /* size: 0x07f8 */

class CBasedSStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CBasedPubDocFilePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CBasedPubStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CBasedBytePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CPubMappedStream
{
  /* 0x0000 */ class CBasedPubStreamPtr _pst;
  /* 0x0008 */ class CBasedBytePtr _pb;
  /* 0x0010 */ class CBasedBytePtr _powner;
  /* 0x0018 */ unsigned long _cbUsed;
  /* 0x001c */ unsigned long _cbOriginalStreamSize;
  /* 0x0020 */ unsigned char _fDirty;
}; /* size: 0x0028 */

class CPubStream
{
  /* 0x0000 */ long Padding_56[22];
  /* 0x0058 */ class CBasedSStreamPtr _psParent;
  /* 0x0060 */ class CBasedPubDocFilePtr _ppdfParent;
  /* 0x0068 */ int _fDirty;
  /* 0x006c */ long _cReferences;
  /* 0x0070 */ class CPubMappedStream _PubMappedStream;
}; /* size: 0x0098 */

enum SYSTEM_POWER_CONDITION
{
  PoAc = 0,
  PoDc = 1,
  PoHot = 2,
  PoConditionMaximum = 3,
};

struct IFontEventsDisp
{
}; /* size: 0x0008 */

class Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *>
{
}; /* size: 0x0008 */

typedef enum __vc_attributes::moduleAttribute::type_e
{
  dll = 1,
  exe = 2,
  service = 3,
  unspecified = 4,
  EXE = 2,
  SERVICE = 3,
} _vc_attributes::moduleAttribute::type_e, *P_vc_attributes::moduleAttribute::type_e;

enum tagTYPEKIND
{
  TKIND_ENUM = 0,
  TKIND_RECORD = 1,
  TKIND_MODULE = 2,
  TKIND_INTERFACE = 3,
  TKIND_DISPATCH = 4,
  TKIND_COCLASS = 5,
  TKIND_ALIAS = 6,
  TKIND_UNION = 7,
  TKIND_MAX = 8,
};

typedef struct _UNICODE_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_57;
  /* 0x0008 */ unsigned short* Buffer;
} UNICODE_STRING, *PUNICODE_STRING; /* size: 0x0010 */

typedef struct _SYSTEM_PAGEFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long TotalSize;
  /* 0x0008 */ unsigned long TotalInUse;
  /* 0x000c */ unsigned long PeakUsage;
  /* 0x0010 */ struct _UNICODE_STRING PageFileName;
} SYSTEM_PAGEFILE_INFORMATION, *PSYSTEM_PAGEFILE_INFORMATION; /* size: 0x0020 */

typedef enum _MUTANT_INFORMATION_CLASS
{
  MutantBasicInformation = 0,
  MutantOwnerInformation = 1,
} MUTANT_INFORMATION_CLASS, *PMUTANT_INFORMATION_CLASS;

typedef struct _tagDATAINFO
{
  /* 0x0000 */ unsigned long ulTotalSize;
  /* 0x0004 */ unsigned long ulavrPacketSize;
  /* 0x0008 */ unsigned long ulConnectSpeed;
  /* 0x000c */ unsigned long ulProcessorSpeed;
} tagDATAINFO, *PtagDATAINFO; /* size: 0x0010 */

struct IDispatch
{
}; /* size: 0x0008 */

struct SChannelHookCallInfo
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ struct _GUID uCausality;
  /* 0x0024 */ unsigned long dwServerPid;
  /* 0x0028 */ unsigned long iMethod;
  /* 0x002c */ long Padding_58;
  /* 0x0030 */ void* pObject;
}; /* size: 0x0038 */

enum tagQACONTAINERFLAGS
{
  QACONTAINER_SHOWHATCHING = 1,
  QACONTAINER_SHOWGRABHANDLES = 2,
  QACONTAINER_USERMODE = 4,
  QACONTAINER_DISPLAYASDEFAULT = 8,
  QACONTAINER_UIDEAD = 16,
  QACONTAINER_AUTOCLIP = 32,
  QACONTAINER_MESSAGEREFLECT = 64,
  QACONTAINER_SUPPORTSMNEMONICS = 128,
};

struct ITypeInfo
{
}; /* size: 0x0008 */

struct tagWIN16RECT
{
  /* 0x0000 */ unsigned short left;
  /* 0x0002 */ unsigned short top;
  /* 0x0004 */ unsigned short right;
  /* 0x0006 */ unsigned short bottom;
}; /* size: 0x0008 */

enum tagBINDSTATUS
{
  BINDSTATUS_FINDINGRESOURCE = 1,
  BINDSTATUS_CONNECTING = 2,
  BINDSTATUS_REDIRECTING = 3,
  BINDSTATUS_BEGINDOWNLOADDATA = 4,
  BINDSTATUS_DOWNLOADINGDATA = 5,
  BINDSTATUS_ENDDOWNLOADDATA = 6,
  BINDSTATUS_BEGINDOWNLOADCOMPONENTS = 7,
  BINDSTATUS_INSTALLINGCOMPONENTS = 8,
  BINDSTATUS_ENDDOWNLOADCOMPONENTS = 9,
  BINDSTATUS_USINGCACHEDCOPY = 10,
  BINDSTATUS_SENDINGREQUEST = 11,
  BINDSTATUS_CLASSIDAVAILABLE = 12,
  BINDSTATUS_MIMETYPEAVAILABLE = 13,
  BINDSTATUS_CACHEFILENAMEAVAILABLE = 14,
  BINDSTATUS_BEGINSYNCOPERATION = 15,
  BINDSTATUS_ENDSYNCOPERATION = 16,
  BINDSTATUS_BEGINUPLOADDATA = 17,
  BINDSTATUS_UPLOADINGDATA = 18,
  BINDSTATUS_ENDUPLOADDATA = 19,
  BINDSTATUS_PROTOCOLCLASSID = 20,
  BINDSTATUS_ENCODING = 21,
  BINDSTATUS_VERIFIEDMIMETYPEAVAILABLE = 22,
  BINDSTATUS_CLASSINSTALLLOCATION = 23,
  BINDSTATUS_DECODING = 24,
  BINDSTATUS_LOADINGMIMEHANDLER = 25,
  BINDSTATUS_CONTENTDISPOSITIONATTACH = 26,
  BINDSTATUS_FILTERREPORTMIMETYPE = 27,
  BINDSTATUS_CLSIDCANINSTANTIATE = 28,
  BINDSTATUS_IUNKNOWNAVAILABLE = 29,
  BINDSTATUS_DIRECTBIND = 30,
  BINDSTATUS_RAWMIMETYPE = 31,
  BINDSTATUS_PROXYDETECTING = 32,
  BINDSTATUS_ACCEPTRANGES = 33,
  BINDSTATUS_COOKIE_SENT = 34,
  BINDSTATUS_COMPACT_POLICY_RECEIVED = 35,
  BINDSTATUS_COOKIE_SUPPRESSED = 36,
  BINDSTATUS_COOKIE_STATE_UNKNOWN = 37,
  BINDSTATUS_COOKIE_STATE_ACCEPT = 38,
  BINDSTATUS_COOKIE_STATE_REJECT = 39,
  BINDSTATUS_COOKIE_STATE_PROMPT = 40,
  BINDSTATUS_COOKIE_STATE_LEASH = 41,
  BINDSTATUS_COOKIE_STATE_DOWNGRADE = 42,
  BINDSTATUS_POLICY_HREF = 43,
  BINDSTATUS_P3P_HEADER = 44,
  BINDSTATUS_SESSION_COOKIE_RECEIVED = 45,
  BINDSTATUS_PERSISTENT_COOKIE_RECEIVED = 46,
  BINDSTATUS_SESSION_COOKIES_ALLOWED = 47,
  BINDSTATUS_CACHECONTROL = 48,
  BINDSTATUS_CONTENTDISPOSITIONFILENAME = 49,
  BINDSTATUS_MIMETEXTPLAINMISMATCH = 50,
  BINDSTATUS_PUBLISHERAVAILABLE = 51,
  BINDSTATUS_DISPLAYNAMEAVAILABLE = 52,
  BINDSTATUS_SSLUX_NAVBLOCKED = 53,
  BINDSTATUS_SERVER_MIMETYPEAVAILABLE = 54,
  BINDSTATUS_SNIFFED_CLASSIDAVAILABLE = 55,
  BINDSTATUS_64BIT_PROGRESS = 56,
  BINDSTATUS_LAST = 56,
  BINDSTATUS_RESERVED_0 = 57,
  BINDSTATUS_RESERVED_1 = 58,
  BINDSTATUS_RESERVED_2 = 59,
  BINDSTATUS_RESERVED_3 = 60,
  BINDSTATUS_RESERVED_4 = 61,
  BINDSTATUS_RESERVED_5 = 62,
  BINDSTATUS_RESERVED_6 = 63,
  BINDSTATUS_RESERVED_7 = 64,
  BINDSTATUS_RESERVED_8 = 65,
  BINDSTATUS_RESERVED_9 = 66,
  BINDSTATUS_LAST_PRIVATE = 66,
};

typedef enum __MIDL_IUri_0001
{
  Uri_PROPERTY_ABSOLUTE_URI = 0,
  Uri_PROPERTY_STRING_START = 0,
  Uri_PROPERTY_AUTHORITY = 1,
  Uri_PROPERTY_DISPLAY_URI = 2,
  Uri_PROPERTY_DOMAIN = 3,
  Uri_PROPERTY_EXTENSION = 4,
  Uri_PROPERTY_FRAGMENT = 5,
  Uri_PROPERTY_HOST = 6,
  Uri_PROPERTY_PASSWORD = 7,
  Uri_PROPERTY_PATH = 8,
  Uri_PROPERTY_PATH_AND_QUERY = 9,
  Uri_PROPERTY_QUERY = 10,
  Uri_PROPERTY_RAW_URI = 11,
  Uri_PROPERTY_SCHEME_NAME = 12,
  Uri_PROPERTY_USER_INFO = 13,
  Uri_PROPERTY_USER_NAME = 14,
  Uri_PROPERTY_STRING_LAST = 14,
  Uri_PROPERTY_HOST_TYPE = 15,
  Uri_PROPERTY_DWORD_START = 15,
  Uri_PROPERTY_PORT = 16,
  Uri_PROPERTY_SCHEME = 17,
  Uri_PROPERTY_ZONE = 18,
  Uri_PROPERTY_DWORD_LAST = 18,
} _MIDL_IUri_0001, *P_MIDL_IUri_0001;

class CFileMonikerFactory
{
}; /* size: 0x0010 */

struct Windows::Rtl::IRtlFormattableInterface
{
}; /* size: 0x0008 */

enum tagOLEDCFLAGS
{
  OLEDC_NODRAW = 1,
  OLEDC_PAINTBKGND = 2,
  OLEDC_OFFSCREEN = 4,
};

typedef enum _JOURNAL_CHANGE_INFORMATION_CLASS
{
  JournalCreateKey = 0,
  JournalDeleteKey = 1,
  JournalRenameKey = 2,
  JournalSetValue = 3,
  JournalDeleteValue = 4,
  JournalSetKeySecurity = 5,
  JournalSetKeyUserFlags = 6,
  JournalSetLastWriteTime = 7,
  JournalBeginTransaction = 8,
  JournalCommitTransaction = 9,
  JournalAbortTransaction = 10,
  MaxJournalChangeAction = 11,
} JOURNAL_CHANGE_INFORMATION_CLASS, *PJOURNAL_CHANGE_INFORMATION_CLASS;

typedef struct _TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT
{
  /* 0x0000 */ unsigned long MarshalCookie;
  /* 0x0004 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT, *PTRANSACTION_NOTIFICATION_MARSHAL_ARGUMENT; /* size: 0x0014 */

typedef enum _LDR_DLL_LOAD_REASON
{
  LoadReasonStaticDependency = 0,
  LoadReasonStaticForwarderDependency = 1,
  LoadReasonDynamicForwarderDependency = 2,
  LoadReasonDelayloadDependency = 3,
  LoadReasonDynamicLoad = 4,
  LoadReasonAsImageLoad = 5,
  LoadReasonAsDataLoad = 6,
  LoadReasonUnknown = -1,
} LDR_DLL_LOAD_REASON, *PLDR_DLL_LOAD_REASON;

struct IExceptionNotification
{
}; /* size: 0x0008 */

typedef enum _MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE
{
  MiniHandleObjectInformationNone = 0,
  MiniThreadInformation1 = 1,
  MiniMutantInformation1 = 2,
  MiniMutantInformation2 = 3,
  MiniProcessInformation1 = 4,
  MiniProcessInformation2 = 5,
  MiniHandleObjectInformationTypeMax = 6,
} MINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE, *PMINIDUMP_HANDLE_OBJECT_INFORMATION_TYPE;

struct IStorage
{
}; /* size: 0x0008 */

typedef struct _IO_STATUS_BLOCK
{
  union
  {
    /* 0x0000 */ long Status;
    /* 0x0000 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 Information;
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK; /* size: 0x0010 */

typedef enum _TP_TRACE_TYPE
{
  TpTraceThreadPriority = 1,
  TpTraceThreadAffinity = 2,
  MaxTpTraceType = 3,
} TP_TRACE_TYPE, *PTP_TRACE_TYPE;

struct tagKEYBDINPUT
{
  /* 0x0000 */ unsigned short wVk;
  /* 0x0002 */ unsigned short wScan;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ long Padding_59;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

enum tagOLERENDER
{
  OLERENDER_NONE = 0,
  OLERENDER_DRAW = 1,
  OLERENDER_FORMAT = 2,
  OLERENDER_ASIS = 3,
};

struct tagVersionedStream
{
  /* 0x0000 */ struct _GUID guidVersion;
  /* 0x0010 */ struct IStream* pStream;
}; /* size: 0x0018 */

typedef struct _DEVICE_COPY_OFFLOAD_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long MaximumTokenLifetime;
  /* 0x000c */ unsigned long DefaultTokenLifetime;
  /* 0x0010 */ unsigned __int64 MaximumTransferSize;
  /* 0x0018 */ unsigned __int64 OptimalTransferCount;
  /* 0x0020 */ unsigned long MaximumDataDescriptors;
  /* 0x0024 */ unsigned long MaximumTransferLengthPerDescriptor;
  /* 0x0028 */ unsigned long OptimalTransferLengthPerDescriptor;
  /* 0x002c */ unsigned short OptimalTransferLengthGranularity;
  /* 0x002e */ unsigned char Reserved[2];
} DEVICE_COPY_OFFLOAD_DESCRIPTOR, *PDEVICE_COPY_OFFLOAD_DESCRIPTOR; /* size: 0x0030 */

enum tagPROPBAG2_TYPE
{
  PROPBAG2_TYPE_UNDEFINED = 0,
  PROPBAG2_TYPE_DATA = 1,
  PROPBAG2_TYPE_URL = 2,
  PROPBAG2_TYPE_OBJECT = 3,
  PROPBAG2_TYPE_STREAM = 4,
  PROPBAG2_TYPE_STORAGE = 5,
  PROPBAG2_TYPE_MONIKER = 6,
};

typedef struct _REMOTE_PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_60;
  /* 0x0008 */ unsigned __int64 ViewSize;
  /* 0x0010 */ void* ViewBase;
} REMOTE_PORT_VIEW, *PREMOTE_PORT_VIEW; /* size: 0x0018 */

typedef struct _KSYSTEM_TIME
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long High1Time;
  /* 0x0008 */ long High2Time;
} KSYSTEM_TIME, *PKSYSTEM_TIME; /* size: 0x000c */

enum tagMKREDUCE
{
  MKRREDUCE_ONE = 0x30000,
  MKRREDUCE_TOUSER = 0x20000,
  MKRREDUCE_THROUGHUSER = 0x10000,
  MKRREDUCE_ALL = 0,
};

struct tagSTRINGBINDING
{
  /* 0x0000 */ unsigned short wTowerId;
  /* 0x0002 */ unsigned short aNetworkAddr;
}; /* size: 0x0004 */

class CBasedSeekPointerPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

enum READER_SEL_REQUEST_MATCH_TYPE
{
  RSR_MATCH_TYPE_READER_AND_CONTAINER = 1,
  RSR_MATCH_TYPE_SERIAL_NUMBER = 2,
  RSR_MATCH_TYPE_ALL_CARDS = 3,
};

struct READER_SEL_REQUEST
{
  /* 0x0000 */ unsigned long dwShareMode;
  /* 0x0004 */ unsigned long dwPreferredProtocols;
  /* 0x0008 */ enum READER_SEL_REQUEST_MATCH_TYPE MatchType;
  union
  {
    struct
    {
      /* 0x000c */ unsigned long cbReaderNameOffset;
      /* 0x0010 */ unsigned long cchReaderNameLength;
      /* 0x0014 */ unsigned long cbContainerNameOffset;
      /* 0x0018 */ unsigned long cchContainerNameLength;
      /* 0x001c */ unsigned long dwDesiredCardModuleVersion;
      /* 0x0020 */ unsigned long dwCspFlags;
    } /* size: 0x0018 */ ReaderAndContainerParameter;
    struct
    {
      struct
      {
        /* 0x000c */ unsigned long cbSerialNumberOffset;
        /* 0x0010 */ unsigned long cbSerialNumberLength;
        /* 0x0014 */ unsigned long dwDesiredCardModuleVersion;
      } /* size: 0x000c */ SerialNumberParameter;
      /* 0x0018 */ long __PADDING__[3];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0024 */

enum POWER_STATE_HANDLER_TYPE
{
  PowerStateSleeping1 = 0,
  PowerStateSleeping2 = 1,
  PowerStateSleeping3 = 2,
  PowerStateSleeping4 = 3,
  PowerStateShutdownOff = 4,
  PowerStateShutdownReset = 5,
  PowerStateSleeping4Firmware = 6,
  PowerStateMaximum = 7,
};

struct CONFIRMSAFETY
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ struct IUnknown* pUnk;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _FILE_REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned long Tag;
  /* 0x000c */ long __PADDING__[1];
} FILE_REPARSE_POINT_INFORMATION, *PFILE_REPARSE_POINT_INFORMATION; /* size: 0x0010 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >
{
}; /* size: 0x0008 */

typedef struct _CMSG_STREAM_INFO
{
  /* 0x0000 */ unsigned long cbContent;
  /* 0x0004 */ long Padding_61;
  /* 0x0008 */ void* pfnStreamOutput /* function */;
  /* 0x0010 */ void* pvArg;
} CMSG_STREAM_INFO, *PCMSG_STREAM_INFO; /* size: 0x0018 */

enum tagUASFLAGS
{
  UAS_NORMAL = 0,
  UAS_BLOCKED = 1,
  UAS_NOPARENTENABLE = 2,
  UAS_MASK = 3,
};

struct tagSAFEARRAYBOUND
{
  /* 0x0000 */ unsigned long cElements;
  /* 0x0004 */ long lLbound;
}; /* size: 0x0008 */

typedef struct _RTL_QUERY_REGISTRY_TABLE
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_62;
  /* 0x0010 */ wchar_t* Name;
  /* 0x0018 */ void* EntryContext;
  /* 0x0020 */ unsigned long DefaultType;
  /* 0x0024 */ long Padding_63;
  /* 0x0028 */ void* DefaultData;
  /* 0x0030 */ unsigned long DefaultLength;
  /* 0x0034 */ long __PADDING__[1];
} RTL_QUERY_REGISTRY_TABLE, *PRTL_QUERY_REGISTRY_TABLE; /* size: 0x0038 */

class CCoTaskAllocator
{
}; /* size: 0x0008 */

struct DISPLAYCONFIG_SET_TARGET_PERSISTENCE
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned int bootPersistenceOn : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned int reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0014 */ unsigned int value;
  }; /* size: 0x0004 */
}; /* size: 0x0018 */

typedef enum _tagINTERNETFEATURELIST
{
  FEATURE_OBJECT_CACHING = 0,
  FEATURE_ZONE_ELEVATION = 1,
  FEATURE_MIME_HANDLING = 2,
  FEATURE_MIME_SNIFFING = 3,
  FEATURE_WINDOW_RESTRICTIONS = 4,
  FEATURE_WEBOC_POPUPMANAGEMENT = 5,
  FEATURE_BEHAVIORS = 6,
  FEATURE_DISABLE_MK_PROTOCOL = 7,
  FEATURE_LOCALMACHINE_LOCKDOWN = 8,
  FEATURE_SECURITYBAND = 9,
  FEATURE_RESTRICT_ACTIVEXINSTALL = 10,
  FEATURE_VALIDATE_NAVIGATE_URL = 11,
  FEATURE_RESTRICT_FILEDOWNLOAD = 12,
  FEATURE_ADDON_MANAGEMENT = 13,
  FEATURE_PROTOCOL_LOCKDOWN = 14,
  FEATURE_HTTP_USERNAME_PASSWORD_DISABLE = 15,
  FEATURE_SAFE_BINDTOOBJECT = 16,
  FEATURE_UNC_SAVEDFILECHECK = 17,
  FEATURE_GET_URL_DOM_FILEPATH_UNENCODED = 18,
  FEATURE_TABBED_BROWSING = 19,
  FEATURE_SSLUX = 20,
  FEATURE_DISABLE_NAVIGATION_SOUNDS = 21,
  FEATURE_DISABLE_LEGACY_COMPRESSION = 22,
  FEATURE_FORCE_ADDR_AND_STATUS = 23,
  FEATURE_XMLHTTP = 24,
  FEATURE_DISABLE_TELNET_PROTOCOL = 25,
  FEATURE_FEEDS = 26,
  FEATURE_BLOCK_INPUT_PROMPTS = 27,
  FEATURE_ENTRY_COUNT = 28,
} tagINTERNETFEATURELIST, *PtagINTERNETFEATURELIST;

struct IAbandonmentNotification
{
}; /* size: 0x0008 */

typedef enum _DMA_WIDTH
{
  Width8Bits = 0,
  Width16Bits = 1,
  Width32Bits = 2,
  Width64Bits = 3,
  WidthNoWrap = 4,
  MaximumDmaWidth = 5,
} DMA_WIDTH, *PDMA_WIDTH;

typedef struct _PRINTER_NOTIFY_OPTIONS_TYPE
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Reserved0;
  /* 0x0004 */ unsigned long Reserved1;
  /* 0x0008 */ unsigned long Reserved2;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ unsigned short* pFields;
} PRINTER_NOTIFY_OPTIONS_TYPE, *PPRINTER_NOTIFY_OPTIONS_TYPE; /* size: 0x0018 */

typedef enum _MINIDUMP_SECONDARY_FLAGS
{
  MiniSecondaryWithoutPowerInfo = 1,
  MiniSecondaryValidFlags = 1,
} MINIDUMP_SECONDARY_FLAGS, *PMINIDUMP_SECONDARY_FLAGS;

struct IWinRTRuntimeClassInfo
{
}; /* size: 0x0008 */

typedef enum __MIDL_IBindStatusCallback_0006
{
  BSCF_FIRSTDATANOTIFICATION = 1,
  BSCF_INTERMEDIATEDATANOTIFICATION = 2,
  BSCF_LASTDATANOTIFICATION = 4,
  BSCF_DATAFULLYAVAILABLE = 8,
  BSCF_AVAILABLEDATASIZEUNKNOWN = 16,
  BSCF_SKIPDRAINDATAFORFILEURLS = 32,
  BSCF_64BITLENGTHDOWNLOAD = 64,
} _MIDL_IBindStatusCallback_0006, *P_MIDL_IBindStatusCallback_0006;

typedef struct _IMAGE_SYMBOL_EX
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ long SectionNumber;
  /* 0x0010 */ unsigned short Type;
  /* 0x0012 */ unsigned char StorageClass;
  /* 0x0013 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL_EX, *PIMAGE_SYMBOL_EX; /* size: 0x0014 */

class XIPersistFile
{
  /* 0x0000 */ struct IPersistFile* _p;
}; /* size: 0x0008 */

struct tagMOUSEINPUT
{
  /* 0x0000 */ long dx;
  /* 0x0004 */ long dy;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ long Padding_64;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

struct tagHARDWAREINPUT
{
  /* 0x0000 */ unsigned long uMsg;
  /* 0x0004 */ unsigned short wParamL;
  /* 0x0006 */ unsigned short wParamH;
}; /* size: 0x0008 */

struct tagINPUT
{
  /* 0x0000 */ unsigned long type;
  /* 0x0004 */ long Padding_65;
  union
  {
    /* 0x0008 */ struct tagMOUSEINPUT mi;
    /* 0x0008 */ struct tagKEYBDINPUT ki;
    struct
    {
      /* 0x0008 */ struct tagHARDWAREINPUT hi;
      /* 0x0010 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

typedef struct _XSTATE_FEATURE
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long Size;
} XSTATE_FEATURE, *PXSTATE_FEATURE; /* size: 0x0008 */

typedef struct _XSTATE_CONFIGURATION
{
  /* 0x0000 */ unsigned __int64 EnabledFeatures;
  /* 0x0008 */ unsigned __int64 EnabledVolatileFeatures;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long OptimizedSave : 1; /* bit position: 0 */
  /* 0x0018 */ struct _XSTATE_FEATURE Features[64];
} XSTATE_CONFIGURATION, *PXSTATE_CONFIGURATION; /* size: 0x0218 */

typedef struct _STORAGE_LB_PROVISIONING_MAP_RESOURCES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned char AvailableMappingResourcesValid : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned char UsedMappingResourcesValid : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned char Reserved0 : 6; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0009 */ unsigned char Reserved1[3];
  struct /* bitfield */
  {
    /* 0x000c */ unsigned char AvailableMappingResourcesScope : 2; /* bit position: 0 */
    /* 0x000c */ unsigned char UsedMappingResourcesScope : 2; /* bit position: 2 */
    /* 0x000c */ unsigned char Reserved2 : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x000d */ unsigned char Reserved3[3];
  /* 0x0010 */ unsigned __int64 AvailableMappingResources;
  /* 0x0018 */ unsigned __int64 UsedMappingResources;
} STORAGE_LB_PROVISIONING_MAP_RESOURCES, *PSTORAGE_LB_PROVISIONING_MAP_RESOURCES; /* size: 0x0020 */

enum DISPLAYCONFIG_PIXELFORMAT
{
  DISPLAYCONFIG_PIXELFORMAT_8BPP = 1,
  DISPLAYCONFIG_PIXELFORMAT_16BPP = 2,
  DISPLAYCONFIG_PIXELFORMAT_24BPP = 3,
  DISPLAYCONFIG_PIXELFORMAT_32BPP = 4,
  DISPLAYCONFIG_PIXELFORMAT_NONGDI = 5,
  DISPLAYCONFIG_PIXELFORMAT_FORCE_UINT32 = -1,
};

typedef struct _RPC_SEC_CONTEXT_KEY_INFO
{
  /* 0x0000 */ unsigned long EncryptAlgorithm;
  /* 0x0004 */ unsigned long KeySize;
  /* 0x0008 */ unsigned long SignatureAlgorithm;
} RPC_SEC_CONTEXT_KEY_INFO, *PRPC_SEC_CONTEXT_KEY_INFO; /* size: 0x000c */

typedef struct _KAFFINITY_ENUMERATION_CONTEXT
{
  /* 0x0000 */ struct _KAFFINITY_EX* Affinity;
  /* 0x0008 */ unsigned __int64 CurrentMask;
  /* 0x0010 */ unsigned short CurrentIndex;
  /* 0x0012 */ char __PADDING__[6];
} KAFFINITY_ENUMERATION_CONTEXT, *PKAFFINITY_ENUMERATION_CONTEXT; /* size: 0x0018 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWOFOUCSStream* m_Data;
}; /* size: 0x0008 */

enum tagACTIVATEFLAGS
{
  ACTIVATE_WINDOWLESS = 1,
};

typedef struct _EXCEPTION_REGISTRATION_RECORD
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* Next;
  /* 0x0008 */ void* Handler /* function */;
} EXCEPTION_REGISTRATION_RECORD, *PEXCEPTION_REGISTRATION_RECORD; /* size: 0x0010 */

typedef struct _FILE_NETWORK_OPEN_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ unsigned long FileAttributes;
  /* 0x0034 */ long __PADDING__[1];
} FILE_NETWORK_OPEN_INFORMATION, *PFILE_NETWORK_OPEN_INFORMATION; /* size: 0x0038 */

enum RTL_BSD_ITEM_TYPE
{
  RtlBsdItemVersionNumber = 0,
  RtlBsdItemProductType = 1,
  RtlBsdItemAabEnabled = 2,
  RtlBsdItemAabTimeout = 3,
  RtlBsdItemBootGood = 4,
  RtlBsdItemBootShutdown = 5,
  RtlBsdSleepInProgress = 6,
  RtlBsdPowerTransition = 7,
  RtlBsdItemBootAttemptCount = 8,
  RtlBsdItemBootCheckpoint = 9,
  RtlBsdItemMax = 10,
};

typedef enum _SAFER_POLICY_INFO_CLASS
{
  SaferPolicyLevelList = 1,
  SaferPolicyEnableTransparentEnforcement = 2,
  SaferPolicyDefaultLevel = 3,
  SaferPolicyEvaluateUserScope = 4,
  SaferPolicyScopeFlags = 5,
  SaferPolicyDefaultLevelFlags = 6,
  SaferPolicyAuthenticodeEnabled = 7,
} SAFER_POLICY_INFO_CLASS, *PSAFER_POLICY_INFO_CLASS;

typedef enum _TAG_UNNAMED_3
{
  sevInfo = 0,
  sevProblem = 1,
  sevAttn = 2,
  sevFatal = 3,
  sevMax = 4,
} TAG_UNNAMED_3, *PTAG_UNNAMED_3;

typedef struct _SD_ENUM_SDS_ENTRY
{
  /* 0x0000 */ unsigned long Hash;
  /* 0x0004 */ unsigned long SecurityId;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ unsigned char Descriptor[1];
  /* 0x0015 */ char __PADDING__[3];
} SD_ENUM_SDS_ENTRY, *PSD_ENUM_SDS_ENTRY; /* size: 0x0018 */

typedef struct _SD_ENUM_SDS_OUTPUT
{
  /* 0x0000 */ unsigned __int64 NextOffset;
  /* 0x0008 */ unsigned __int64 NumSDEntriesReturned;
  /* 0x0010 */ unsigned __int64 NumSDBytesReturned;
  /* 0x0018 */ struct _SD_ENUM_SDS_ENTRY SDEntry[1];
} SD_ENUM_SDS_OUTPUT, *PSD_ENUM_SDS_OUTPUT; /* size: 0x0030 */

struct tagBIND_OPTS2
{
  /* 0x0000 */ long Padding_66[4];
  /* 0x0010 */ unsigned long dwTrackFlags;
  /* 0x0014 */ unsigned long dwClassContext;
  /* 0x0018 */ unsigned long locale;
  /* 0x001c */ long Padding_67;
  /* 0x0020 */ struct _COSERVERINFO* pServerInfo;
}; /* size: 0x0028 */

typedef enum _ELEMENT_TYPE
{
  AllElements = 0,
  ChangerTransport = 1,
  ChangerSlot = 2,
  ChangerIEPort = 3,
  ChangerDrive = 4,
  ChangerDoor = 5,
  ChangerKeypad = 6,
  ChangerMaxElement = 7,
} ELEMENT_TYPE, *PELEMENT_TYPE;

typedef struct _CHANGER_ELEMENT
{
  /* 0x0000 */ enum _ELEMENT_TYPE ElementType;
  /* 0x0004 */ unsigned long ElementAddress;
} CHANGER_ELEMENT, *PCHANGER_ELEMENT; /* size: 0x0008 */

typedef struct _CHANGER_EXCHANGE_MEDIUM
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Transport;
  /* 0x0008 */ struct _CHANGER_ELEMENT Source;
  /* 0x0010 */ struct _CHANGER_ELEMENT Destination1;
  /* 0x0018 */ struct _CHANGER_ELEMENT Destination2;
  /* 0x0020 */ unsigned char Flip1;
  /* 0x0021 */ unsigned char Flip2;
  /* 0x0022 */ char __PADDING__[2];
} CHANGER_EXCHANGE_MEDIUM, *PCHANGER_EXCHANGE_MEDIUM; /* size: 0x0024 */

enum TrustLevel
{
  BaseTrust = 0,
  PartialTrust = 1,
  FullTrust = 2,
};

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_68;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
  /* 0x0028 */ struct _SEC_WINNT_AUTH_IDENTITY_W* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_69;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_W; /* size: 0x0040 */

enum tagBINDSTRING
{
  BINDSTRING_HEADERS = 1,
  BINDSTRING_ACCEPT_MIMES = 2,
  BINDSTRING_EXTRA_URL = 3,
  BINDSTRING_LANGUAGE = 4,
  BINDSTRING_USERNAME = 5,
  BINDSTRING_PASSWORD = 6,
  BINDSTRING_UA_PIXELS = 7,
  BINDSTRING_UA_COLOR = 8,
  BINDSTRING_OS = 9,
  BINDSTRING_USER_AGENT = 10,
  BINDSTRING_ACCEPT_ENCODINGS = 11,
  BINDSTRING_POST_COOKIE = 12,
  BINDSTRING_POST_DATA_MIME = 13,
  BINDSTRING_URL = 14,
  BINDSTRING_IID = 15,
  BINDSTRING_FLAG_BIND_TO_OBJECT = 16,
  BINDSTRING_PTR_BIND_CONTEXT = 17,
  BINDSTRING_XDR_ORIGIN = 18,
  BINDSTRING_DOWNLOADPATH = 19,
  BINDSTRING_ROOTDOC_URL = 20,
  BINDSTRING_INITIAL_FILENAME = 21,
  BINDSTRING_PROXY_USERNAME = 22,
  BINDSTRING_PROXY_PASSWORD = 23,
};

typedef enum _TAG_UNNAMED_4
{
  hdBase = 0,
  hdSym = 1,
  hdSrc = 2,
  hdMax = 3,
} TAG_UNNAMED_4, *PTAG_UNNAMED_4;

struct Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >::is_pointer<Windows::Rtl::IRtlWOFOUCSStream *>
{
}; /* size: 0x0001 */

enum ORIENTATION_PREFERENCE
{
  ORIENTATION_PREFERENCE_NONE = 0,
  ORIENTATION_PREFERENCE_LANDSCAPE = 1,
  ORIENTATION_PREFERENCE_PORTRAIT = 2,
  ORIENTATION_PREFERENCE_LANDSCAPE_FLIPPED = 4,
  ORIENTATION_PREFERENCE_PORTRAIT_FLIPPED = 8,
};

class CDelayUnlockContainer
{
  /* 0x0000 */ long Padding_70[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_71;
  /* 0x0010 */ struct IOleItemContainer* m_pOleCont;
}; /* size: 0x0018 */

typedef struct _OFLONGSTRUCTW
{
  /* 0x0000 */ unsigned int nErrCode;
  /* 0x0004 */ wchar_t szPathName[260];
} OFLONGSTRUCTW, *POFLONGSTRUCTW; /* size: 0x020c */

struct XSAVE_CPU_INFO
{
  /* 0x0000 */ unsigned char Processor;
  /* 0x0001 */ char Padding_72;
  /* 0x0002 */ unsigned short Family;
  /* 0x0004 */ unsigned short Model;
  /* 0x0006 */ unsigned short Stepping;
  /* 0x0008 */ unsigned short ExtendedModel;
  /* 0x000a */ char Padding_73[2];
  /* 0x000c */ unsigned long ExtendedFamily;
  /* 0x0010 */ unsigned __int64 MicrocodeVersion;
  /* 0x0018 */ unsigned long Reserved;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _XSAVE_SUPPORTED_CPU
{
  /* 0x0000 */ struct XSAVE_CPU_INFO CpuInfo;
  union
  {
    /* 0x0020 */ struct XSAVE_CPU_ERRATA* CpuErrata;
    /* 0x0020 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} XSAVE_SUPPORTED_CPU, *PXSAVE_SUPPORTED_CPU; /* size: 0x0028 */

typedef struct _XSAVE_VENDOR
{
  /* 0x0000 */ unsigned long VendorId[3];
  /* 0x000c */ long Padding_74;
  /* 0x0010 */ struct _XSAVE_SUPPORTED_CPU SupportedCpu;
} XSAVE_VENDOR, *PXSAVE_VENDOR; /* size: 0x0038 */

typedef struct _XSAVE_VENDORS
{
  /* 0x0000 */ unsigned long NumberOfVendors;
  /* 0x0004 */ long Padding_75;
  /* 0x0008 */ struct _XSAVE_VENDOR Vendor[1];
} XSAVE_VENDORS, *PXSAVE_VENDORS; /* size: 0x0040 */

typedef enum _FP_IEEE_OPERATION_CODE
{
  FpCodeUnspecified = 0,
  FpCodeAdd = 1,
  FpCodeSubtract = 2,
  FpCodeMultiply = 3,
  FpCodeDivide = 4,
  FpCodeSquareRoot = 5,
  FpCodeRemainder = 6,
  FpCodeCompare = 7,
  FpCodeConvert = 8,
  FpCodeRound = 9,
  FpCodeTruncate = 10,
  FpCodeFloor = 11,
  FpCodeCeil = 12,
  FpCodeAcos = 13,
  FpCodeAsin = 14,
  FpCodeAtan = 15,
  FpCodeAtan2 = 16,
  FpCodeCabs = 17,
  FpCodeCos = 18,
  FpCodeCosh = 19,
  FpCodeExp = 20,
  FpCodeFabs = 21,
  FpCodeFmod = 22,
  FpCodeFrexp = 23,
  FpCodeHypot = 24,
  FpCodeLdexp = 25,
  FpCodeLog = 26,
  FpCodeLog10 = 27,
  FpCodeModf = 28,
  FpCodePow = 29,
  FpCodeSin = 30,
  FpCodeSinh = 31,
  FpCodeTan = 32,
  FpCodeTanh = 33,
  FpCodeY0 = 34,
  FpCodeY1 = 35,
  FpCodeYn = 36,
} FP_IEEE_OPERATION_CODE, *PFP_IEEE_OPERATION_CODE;

typedef enum _TAPE_DRIVE_PROBLEM_TYPE
{
  TapeDriveProblemNone = 0,
  TapeDriveReadWriteWarning = 1,
  TapeDriveReadWriteError = 2,
  TapeDriveReadWarning = 3,
  TapeDriveWriteWarning = 4,
  TapeDriveReadError = 5,
  TapeDriveWriteError = 6,
  TapeDriveHardwareError = 7,
  TapeDriveUnsupportedMedia = 8,
  TapeDriveScsiConnectionError = 9,
  TapeDriveTimetoClean = 10,
  TapeDriveCleanDriveNow = 11,
  TapeDriveMediaLifeExpired = 12,
  TapeDriveSnappedTape = 13,
} TAPE_DRIVE_PROBLEM_TYPE, *PTAPE_DRIVE_PROBLEM_TYPE;

struct tagLOGBRUSH
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned __int64 lbHatch;
}; /* size: 0x0010 */

typedef struct _COAUTHINFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pwszServerPrincName;
  /* 0x0010 */ unsigned long dwAuthnLevel;
  /* 0x0014 */ unsigned long dwImpersonationLevel;
  /* 0x0018 */ struct _COAUTHIDENTITY* pAuthIdentityData;
  /* 0x0020 */ unsigned long dwCapabilities;
  /* 0x0024 */ long __PADDING__[1];
} COAUTHINFO, *PCOAUTHINFO; /* size: 0x0028 */

typedef struct _PRINTER_CONNECTION_INFO_1A
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_76;
  /* 0x0008 */ char* pszDriverName;
} PRINTER_CONNECTION_INFO_1A, *PPRINTER_CONNECTION_INFO_1A; /* size: 0x0010 */

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Skip::__l3::<lambda_3F3786490CA4221E>;

enum tagLIBFLAGS
{
  LIBFLAG_FRESTRICTED = 1,
  LIBFLAG_FCONTROL = 2,
  LIBFLAG_FHIDDEN = 4,
  LIBFLAG_FHASDISKIMAGE = 8,
};

typedef struct _PATHNAME_BUFFER
{
  /* 0x0000 */ unsigned long PathNameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} PATHNAME_BUFFER, *PPATHNAME_BUFFER; /* size: 0x0008 */

enum tagCOMCALLTYPE
{
  CALLTYPE_OUTGOING_CALL = 0,
  CALLTYPE_INCOMING_CALL = 1,
  CALLTYPE_ACTIVATION = 2,
};

struct tagENHMETAHEADER
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _RECTL rclFrame;
  /* 0x0028 */ unsigned long dSignature;
  /* 0x002c */ unsigned long nVersion;
  /* 0x0030 */ unsigned long nBytes;
  /* 0x0034 */ unsigned long nRecords;
  /* 0x0038 */ unsigned short nHandles;
  /* 0x003a */ unsigned short sReserved;
  /* 0x003c */ unsigned long nDescription;
  /* 0x0040 */ unsigned long offDescription;
  /* 0x0044 */ unsigned long nPalEntries;
  /* 0x0048 */ struct tagSIZE szlDevice;
  /* 0x0050 */ struct tagSIZE szlMillimeters;
  /* 0x0058 */ unsigned long cbPixelFormat;
  /* 0x005c */ unsigned long offPixelFormat;
  /* 0x0060 */ unsigned long bOpenGL;
  /* 0x0064 */ struct tagSIZE szlMicrometers;
}; /* size: 0x006c */

struct ISpecialSystemProperties
{
}; /* size: 0x0008 */

enum tagVIEWSTATUS
{
  VIEWSTATUS_OPAQUE = 1,
  VIEWSTATUS_SOLIDBKGND = 2,
  VIEWSTATUS_DVASPECTOPAQUE = 4,
  VIEWSTATUS_DVASPECTTRANSPARENT = 8,
  VIEWSTATUS_SURFACE = 16,
  VIEWSTATUS_3DSURFACE = 32,
};

class CBasedFreeBlockPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CFreeList
{
  /* 0x0000 */ class CBasedFreeBlockPtr _pfbHead;
}; /* size: 0x0008 */

typedef struct _NDR64_PROC_FORMAT
{
  /* 0x0000 */ unsigned int Flags;
  /* 0x0004 */ unsigned int StackSize;
  /* 0x0008 */ unsigned int ConstantClientBufferSize;
  /* 0x000c */ unsigned int ConstantServerBufferSize;
  /* 0x0010 */ unsigned short RpcFlags;
  /* 0x0012 */ unsigned short FloatDoubleMask;
  /* 0x0014 */ unsigned short NumberOfParams;
  /* 0x0016 */ unsigned short ExtensionSize;
} NDR64_PROC_FORMAT, *PNDR64_PROC_FORMAT; /* size: 0x0018 */

typedef struct _NDR64_PARAM_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short Reserved : 2; /* bit position: 13 */
    /* 0x0000 */ unsigned short UseCache : 1; /* bit position: 15 */
  }; /* bitfield */
} NDR64_PARAM_FLAGS, *PNDR64_PARAM_FLAGS; /* size: 0x0002 */

typedef struct _NDR64_PARAM_FORMAT
{
  /* 0x0000 */ const void* Type;
  /* 0x0008 */ struct _NDR64_PARAM_FLAGS Attributes;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned int StackOffset;
} NDR64_PARAM_FORMAT, *PNDR64_PARAM_FORMAT; /* size: 0x0010 */

typedef struct __midl_frag359_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag359_t, *P_midl_frag359_t; /* size: 0x0048 */

typedef struct _FIXED
{
  /* 0x0000 */ unsigned short fract;
  /* 0x0002 */ short value;
} FIXED, *PFIXED; /* size: 0x0004 */

typedef enum _RTL_RXACT_OPERATION
{
  RtlRXactOperationDelete = 1,
  RtlRXactOperationSetValue = 2,
  RtlRXactOperationDelAttribute = 3,
  RtlRXactOperationSetAttribute = 4,
} RTL_RXACT_OPERATION, *PRTL_RXACT_OPERATION;

typedef struct _MINIDUMP_MEMORY_INFO
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned int AllocationProtect;
  /* 0x0014 */ unsigned int __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned int State;
  /* 0x0024 */ unsigned int Protect;
  /* 0x0028 */ unsigned int Type;
  /* 0x002c */ unsigned int __alignment2;
} MINIDUMP_MEMORY_INFO, *PMINIDUMP_MEMORY_INFO; /* size: 0x0030 */

typedef struct _MINIDUMP_CALLBACK_OUTPUT
{
  union
  {
    /* 0x0000 */ unsigned long ModuleWriteFlags;
    /* 0x0000 */ unsigned long ThreadWriteFlags;
    /* 0x0000 */ unsigned long SecondaryFlags;
    struct
    {
      /* 0x0000 */ unsigned __int64 MemoryBase;
      /* 0x0008 */ unsigned long MemorySize;
    }; /* size: 0x000c */
    struct
    {
      /* 0x0000 */ int CheckCancel;
      /* 0x0004 */ int Cancel;
    }; /* size: 0x0008 */
    /* 0x0000 */ void* Handle;
    struct
    {
      /* 0x0000 */ struct _MINIDUMP_MEMORY_INFO VmRegion;
      /* 0x0030 */ int Continue;
    }; /* size: 0x0034 */
    struct
    {
      /* 0x0000 */ HRESULT Status;
      /* 0x0004 */ long __PADDING__[12];
    }; /* size: 0x0034 */
  }; /* size: 0x0034 */
} MINIDUMP_CALLBACK_OUTPUT, *PMINIDUMP_CALLBACK_OUTPUT; /* size: 0x0034 */

typedef union _RTL_RUN_ONCE
{
  union
  {
    /* 0x0000 */ void* Ptr;
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ unsigned __int64 State : 2; /* bit position: 0 */
  }; /* size: 0x0008 */
} RTL_RUN_ONCE, *PRTL_RUN_ONCE; /* size: 0x0008 */

enum tagAPTKIND
{
  APTKIND_NEUTRALTHREADED = 1,
  APTKIND_MULTITHREADED = 2,
  APTKIND_APARTMENTTHREADED = 4,
  APTKIND_APPLICATION_STA = 8,
};

typedef struct _RTL_SRWLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Waiting : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Waking : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned __int64 MultipleShared : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned __int64 Shared : 60; /* bit position: 4 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} RTL_SRWLOCK, *PRTL_SRWLOCK; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IWeakReference>
{
  /* 0x0000 */ struct IWeakReference* ptr_;
}; /* size: 0x0008 */

typedef struct _RTL_CRITICAL_SECTION
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ void* LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION, *PRTL_CRITICAL_SECTION; /* size: 0x0028 */

class COleStaticMutexSem
{
  /* 0x0000 */ unsigned char _fInitialized;
  /* 0x0001 */ unsigned char _fUseSpincount;
  /* 0x0002 */ char Padding_77[2];
  /* 0x0004 */ unsigned long _cLocks;
  /* 0x0008 */ unsigned long _dwLine;
  /* 0x000c */ long Padding_78;
  /* 0x0010 */ const char* _pszFile;
  /* 0x0018 */ const char* _pszLockName;
  /* 0x0020 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0048 */

class CComApartment
{
  /* 0x0000 */ long Padding_79[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwState;
  /* 0x0010 */ enum tagAPTKIND _AptKind;
  /* 0x0014 */ const unsigned long _AptId;
  /* 0x0018 */ class OXIDEntry* _pOXIDEntry;
  /* 0x0020 */ class CRemoteUnknown* _pRemUnk;
  /* 0x0028 */ long _cWaiters;
  /* 0x002c */ long Padding_80;
  /* 0x0030 */ void* _hEventOID;
  /* 0x0038 */ unsigned long _cPreRegOidsAvail;
  /* 0x003c */ long Padding_81;
  /* 0x0040 */ unsigned __int64 _arPreRegOids[20];
  /* 0x00e0 */ unsigned long _cOidsReturn;
  /* 0x00e4 */ long Padding_82;
  /* 0x00e8 */ unsigned __int64 _arOidsReturn[20];
  /* 0x0188 */ struct IRuntimeBroker* _pRuntimeBroker;
  /* 0x0190 */ struct _RTL_SRWLOCK _lockRuntimeBroker;
  union
  {
    /* 0x0198 */ struct ClassicSTAState* _pClassicSTAState;
    struct
    {
      /* 0x0198 */ struct ASTAState* _pASTAState;
      /* 0x01a0 */ void* _hEventASTAWake;
      /* 0x01a8 */ void* _hTimerFreeUnusedDlls;
      /* 0x01b0 */ long _cPendingGitRegistrations;
      /* 0x01b4 */ long Padding_83;
      /* 0x01b8 */ void* _hEventPendingGitRegistrations;
      /* 0x01c0 */ class Microsoft::WRL::ComPtr<IWeakReference> _spMessageDispatcher;
      /* 0x01c8 */ struct tagSOleTlsData* _pTlsSTA;
      /* 0x01d0 */ class Microsoft::WRL::ComPtr<ApartmentShutdownNode> _spFirstShutdownCallback;
      /* 0x01d8 */ class Microsoft::WRL::ComPtr<ApartmentShutdownNode> _spSentinelForNotify;
      /* 0x01e0 */ unsigned __int64 _ui64ApartmentIdentifier;
    }; /* size: 0x004c */
  }; /* size: 0x004c */
  union
  {
    /* 0x0000 */ volatile unsigned long s_ulApartmentIdentifierCounter;
    /* 0x0000 */ class COleStaticMutexSem s_ShutdownRegLock;
  }; /* size: 0x0048 */
}; /* size: 0x01e8 */

typedef enum _IRQ_PRIORITY
{
  IrqPriorityUndefined = 0,
  IrqPriorityLow = 1,
  IrqPriorityNormal = 2,
  IrqPriorityHigh = 3,
} IRQ_PRIORITY, *PIRQ_PRIORITY;

enum tagREADYSTATE
{
  READYSTATE_UNINITIALIZED = 0,
  READYSTATE_LOADING = 1,
  READYSTATE_LOADED = 2,
  READYSTATE_INTERACTIVE = 3,
  READYSTATE_COMPLETE = 4,
};

enum PO_FIXED_WAKE_SOURCE_TYPE
{
  FixedWakeSourcePowerButton = 0,
  FixedWakeSourceSleepButton = 1,
  FixedWakeSourceRtc = 2,
  FixedWakeSourceDozeToHibernate = 3,
};

typedef struct _CRYPT_AES_128_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char IV[16];
  /* 0x0020 */ unsigned char EncryptionState[16][11];
  /* 0x00d0 */ unsigned char DecryptionState[16][11];
  /* 0x0180 */ unsigned char Feedback[16];
} CRYPT_AES_128_KEY_STATE, *PCRYPT_AES_128_KEY_STATE; /* size: 0x0190 */

struct tagSTGMEDIUM
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ long Padding_84;
  union
  {
    /* 0x0008 */ struct HBITMAP__* hBitmap;
    /* 0x0008 */ void* hMetaFilePict;
    /* 0x0008 */ struct HENHMETAFILE__* hEnhMetaFile;
    /* 0x0008 */ void* hGlobal;
    /* 0x0008 */ wchar_t* lpszFileName;
    /* 0x0008 */ struct IStream* pstm;
    /* 0x0008 */ struct IStorage* pstg;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct IUnknown* pUnkForRelease;
}; /* size: 0x0018 */

typedef struct _SECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ long Padding_85;
  /* 0x0008 */ void* lpSecurityDescriptor;
  /* 0x0010 */ int bInheritHandle;
  /* 0x0014 */ long __PADDING__[1];
} SECURITY_ATTRIBUTES, *PSECURITY_ATTRIBUTES; /* size: 0x0018 */

typedef struct _tagBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_86;
  /* 0x0008 */ wchar_t* szExtraInfo;
  /* 0x0010 */ struct tagSTGMEDIUM stgmedData;
  /* 0x0028 */ unsigned long grfBindInfoF;
  /* 0x002c */ unsigned long dwBindVerb;
  /* 0x0030 */ wchar_t* szCustomVerb;
  /* 0x0038 */ unsigned long cbstgmedData;
  /* 0x003c */ unsigned long dwOptions;
  /* 0x0040 */ unsigned long dwOptionsFlags;
  /* 0x0044 */ unsigned long dwCodePage;
  /* 0x0048 */ struct _SECURITY_ATTRIBUTES securityAttributes;
  /* 0x0060 */ struct _GUID iid;
  /* 0x0070 */ struct IUnknown* pUnk;
  /* 0x0078 */ unsigned long dwReserved;
  /* 0x007c */ long __PADDING__[1];
} tagBINDINFO, *PtagBINDINFO; /* size: 0x0080 */

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned int DataSize;
  /* 0x0004 */ unsigned long Rva;
} MINIDUMP_LOCATION_DESCRIPTOR, *PMINIDUMP_LOCATION_DESCRIPTOR; /* size: 0x0008 */

typedef enum _THREADINFOCLASS
{
  ThreadBasicInformation = 0,
  ThreadTimes = 1,
  ThreadPriority = 2,
  ThreadBasePriority = 3,
  ThreadAffinityMask = 4,
  ThreadImpersonationToken = 5,
  ThreadDescriptorTableEntry = 6,
  ThreadEnableAlignmentFaultFixup = 7,
  ThreadEventPair_Reusable = 8,
  ThreadQuerySetWin32StartAddress = 9,
  ThreadZeroTlsCell = 10,
  ThreadPerformanceCount = 11,
  ThreadAmILastThread = 12,
  ThreadIdealProcessor = 13,
  ThreadPriorityBoost = 14,
  ThreadSetTlsArrayAddress = 15,
  ThreadIsIoPending = 16,
  ThreadHideFromDebugger = 17,
  ThreadBreakOnTermination = 18,
  ThreadSwitchLegacyState = 19,
  ThreadIsTerminated = 20,
  ThreadLastSystemCall = 21,
  ThreadIoPriority = 22,
  ThreadCycleTime = 23,
  ThreadPagePriority = 24,
  ThreadActualBasePriority = 25,
  ThreadTebInformation = 26,
  ThreadCSwitchMon = 27,
  ThreadCSwitchPmu = 28,
  ThreadWow64Context = 29,
  ThreadGroupInformation = 30,
  ThreadUmsInformation = 31,
  ThreadCounterProfiling = 32,
  ThreadIdealProcessorEx = 33,
  ThreadCpuAccountingInformation = 34,
  MaxThreadInfoClass = 35,
} THREADINFOCLASS, *PTHREADINFOCLASS;

struct ISynchronizeMutex
{
}; /* size: 0x0008 */

enum tagPictureAttributes
{
  PICTURE_SCALABLE = 1,
  PICTURE_TRANSPARENT = 2,
};

typedef struct _SINGLE_LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Next;
} SINGLE_LIST_ENTRY32, *PSINGLE_LIST_ENTRY32; /* size: 0x0004 */

struct tagCIEXYZ
{
  /* 0x0000 */ long ciexyzX;
  /* 0x0004 */ long ciexyzY;
  /* 0x0008 */ long ciexyzZ;
}; /* size: 0x000c */

struct tagICEXYZTRIPLE
{
  /* 0x0000 */ struct tagCIEXYZ ciexyzRed;
  /* 0x000c */ struct tagCIEXYZ ciexyzGreen;
  /* 0x0018 */ struct tagCIEXYZ ciexyzBlue;
}; /* size: 0x0024 */

struct tagLOGCOLORSPACEA
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ char lcsFilename[260];
}; /* size: 0x0148 */

typedef enum _SE_AUDIT_OPERATION
{
  AuditPrivilegeObject = 0,
  AuditPrivilegeService = 1,
  AuditAccessCheck = 2,
  AuditOpenObject = 3,
  AuditOpenObjectWithTransaction = 4,
  AuditCloseObject = 5,
  AuditDeleteObject = 6,
  AuditOpenObjectForDelete = 7,
  AuditOpenObjectForDeleteWithTransaction = 8,
  AuditCloseNonObject = 9,
  AuditOpenNonObject = 10,
  AuditObjectReference = 11,
  AuditHandleCreation = 12,
} SE_AUDIT_OPERATION, *PSE_AUDIT_OPERATION;

struct _RTL_TRACE_DATABASE;

struct tagLASTINPUTINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwTime;
}; /* size: 0x0008 */

typedef enum _SAFER_OBJECT_INFO_CLASS
{
  SaferObjectLevelId = 1,
  SaferObjectScopeId = 2,
  SaferObjectFriendlyName = 3,
  SaferObjectDescription = 4,
  SaferObjectBuiltin = 5,
  SaferObjectDisallowed = 6,
  SaferObjectDisableMaxPrivilege = 7,
  SaferObjectInvertDeletedPrivileges = 8,
  SaferObjectDeletedPrivileges = 9,
  SaferObjectDefaultOwner = 10,
  SaferObjectSidsToDisable = 11,
  SaferObjectRestrictedSidsInverted = 12,
  SaferObjectRestrictedSidsAdded = 13,
  SaferObjectAllIdentificationGuids = 14,
  SaferObjectSingleIdentification = 15,
  SaferObjectExtendedError = 16,
} SAFER_OBJECT_INFO_CLASS, *PSAFER_OBJECT_INFO_CLASS;

typedef enum _TOKEN_INFORMATION_CLASS
{
  TokenUser = 1,
  TokenGroups = 2,
  TokenPrivileges = 3,
  TokenOwner = 4,
  TokenPrimaryGroup = 5,
  TokenDefaultDacl = 6,
  TokenSource = 7,
  TokenType = 8,
  TokenImpersonationLevel = 9,
  TokenStatistics = 10,
  TokenRestrictedSids = 11,
  TokenSessionId = 12,
  TokenGroupsAndPrivileges = 13,
  TokenSessionReference = 14,
  TokenSandBoxInert = 15,
  TokenAuditPolicy = 16,
  TokenOrigin = 17,
  TokenElevationType = 18,
  TokenLinkedToken = 19,
  TokenElevation = 20,
  TokenHasRestrictions = 21,
  TokenAccessInformation = 22,
  TokenVirtualizationAllowed = 23,
  TokenVirtualizationEnabled = 24,
  TokenIntegrityLevel = 25,
  TokenUIAccess = 26,
  TokenMandatoryPolicy = 27,
  TokenLogonSid = 28,
  TokenIsAppContainer = 29,
  TokenCapabilities = 30,
  TokenAppContainerSid = 31,
  TokenAppContainerNumber = 32,
  TokenUserClaimAttributes = 33,
  TokenDeviceClaimAttributes = 34,
  TokenRestrictedUserClaimAttributes = 35,
  TokenRestrictedDeviceClaimAttributes = 36,
  TokenDeviceGroups = 37,
  TokenRestrictedDeviceGroups = 38,
  TokenSecurityAttributes = 39,
  TokenIsRestricted = 40,
  MaxTokenInfoClass = 41,
} TOKEN_INFORMATION_CLASS, *PTOKEN_INFORMATION_CLASS;

struct IPartitionProperty
{
}; /* size: 0x0008 */

struct tagMCI_OPEN_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const wchar_t* lpstrDeviceType;
  /* 0x0014 */ const wchar_t* lpstrElementName;
  /* 0x001c */ const wchar_t* lpstrAlias;
}; /* size: 0x0024 */

enum tagMKSYS
{
  MKSYS_NONE = 0,
  MKSYS_GENERICCOMPOSITE = 1,
  MKSYS_FILEMONIKER = 2,
  MKSYS_ANTIMONIKER = 3,
  MKSYS_ITEMMONIKER = 4,
  MKSYS_POINTERMONIKER = 5,
  MKSYS_CLASSMONIKER = 7,
  MKSYS_OBJREFMONIKER = 8,
  MKSYS_SESSIONMONIKER = 9,
  MKSYS_LUAMONIKER = 10,
};

typedef struct _LIST_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY* Flink;
  /* 0x0008 */ struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; /* size: 0x0010 */

typedef struct _LOADED_IMAGE
{
  /* 0x0000 */ char* ModuleName;
  /* 0x0008 */ void* hFile;
  /* 0x0010 */ unsigned char* MappedAddress;
  /* 0x0018 */ struct _IMAGE_NT_HEADERS64* FileHeader;
  /* 0x0020 */ struct _IMAGE_SECTION_HEADER* LastRvaSection;
  /* 0x0028 */ unsigned long NumberOfSections;
  /* 0x002c */ long Padding_87;
  /* 0x0030 */ struct _IMAGE_SECTION_HEADER* Sections;
  /* 0x0038 */ unsigned long Characteristics;
  /* 0x003c */ unsigned char fSystemImage;
  /* 0x003d */ unsigned char fDOSImage;
  /* 0x003e */ unsigned char fReadOnly;
  /* 0x003f */ unsigned char Version;
  /* 0x0040 */ struct _LIST_ENTRY Links;
  /* 0x0050 */ unsigned long SizeOfImage;
  /* 0x0054 */ long __PADDING__[1];
} LOADED_IMAGE, *PLOADED_IMAGE; /* size: 0x0058 */

struct tagACTCTXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const char* lpSource;
  /* 0x0010 */ unsigned short wProcessorArchitecture;
  /* 0x0012 */ unsigned short wLangId;
  /* 0x0014 */ long Padding_88;
  /* 0x0018 */ const char* lpAssemblyDirectory;
  /* 0x0020 */ const char* lpResourceName;
  /* 0x0028 */ const char* lpApplicationName;
  /* 0x0030 */ struct HINSTANCE__* hModule;
}; /* size: 0x0038 */

typedef enum _BOOT_ENTROPY_SOURCE_ID
{
  BootEntropySourceNone = 0,
  BootEntropySourceSeedfile = 1,
  BootEntropySourceExternal = 2,
  BootEntropySourceTpm = 3,
  BootEntropySourceRdrand = 4,
  BootEntropySourceTime = 5,
  BootEntropySourceAcpiOem0 = 6,
  BootEntropySourceUefi = 7,
  BootMaxEntropySources = 7,
} BOOT_ENTROPY_SOURCE_ID, *PBOOT_ENTROPY_SOURCE_ID;

typedef struct _MINIDUMP_LOCATION_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 DataSize;
  /* 0x0008 */ unsigned __int64 Rva;
} MINIDUMP_LOCATION_DESCRIPTOR64, *PMINIDUMP_LOCATION_DESCRIPTOR64; /* size: 0x0010 */

typedef struct _NT_TIB64
{
  /* 0x0000 */ unsigned __int64 ExceptionList;
  /* 0x0008 */ unsigned __int64 StackBase;
  /* 0x0010 */ unsigned __int64 StackLimit;
  /* 0x0018 */ unsigned __int64 SubSystemTib;
  union
  {
    /* 0x0020 */ unsigned __int64 FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ unsigned __int64 ArbitraryUserPointer;
  /* 0x0030 */ unsigned __int64 Self;
} NT_TIB64, *PNT_TIB64; /* size: 0x0038 */

typedef enum _FILE_INFO_BY_HANDLE_CLASS
{
  FileBasicInfo = 0,
  FileStandardInfo = 1,
  FileNameInfo = 2,
  FileRenameInfo = 3,
  FileDispositionInfo = 4,
  FileAllocationInfo = 5,
  FileEndOfFileInfo = 6,
  FileStreamInfo = 7,
  FileCompressionInfo = 8,
  FileAttributeTagInfo = 9,
  FileIdBothDirectoryInfo = 10,
  FileIdBothDirectoryRestartInfo = 11,
  FileIoPriorityHintInfo = 12,
  FileRemoteProtocolInfo = 13,
  FileFullDirectoryInfo = 14,
  FileFullDirectoryRestartInfo = 15,
  FileStorageInfo = 16,
  FileAlignmentInfo = 17,
  FileIdInfo = 18,
  FileIdExtdDirectoryInfo = 19,
  FileIdExtdDirectoryRestartInfo = 20,
  MaximumFileInfoByHandleClass = 21,
} FILE_INFO_BY_HANDLE_CLASS, *PFILE_INFO_BY_HANDLE_CLASS;

typedef enum _WNF_USER_DELIVERY_STATE
{
  WNF_USER_DELIVERY_STATE_READY = 0,
  WNF_USER_DELIVERY_STATE_CANCELLED = 1,
  WNF_USER_DELIVERY_STATE_IN_PROGRESS = 2,
  WNF_USER_DELIVERY_STATE_SUCCEEDED = 3,
  WNF_USER_DELIVERY_STATE_FAILED = 4,
  WNF_USER_DELIVERY_STATE_REQUIRES_RETRY = 5,
  WNF_USER_DELIVERY_STATE_COMPLETE = 6,
} WNF_USER_DELIVERY_STATE, *PWNF_USER_DELIVERY_STATE;

typedef enum _TIMER_INFORMATION_CLASS
{
  TimerBasicInformation = 0,
} TIMER_INFORMATION_CLASS, *PTIMER_INFORMATION_CLASS;

struct DISPLAYCONFIG_RATIONAL
{
  /* 0x0000 */ unsigned int Numerator;
  /* 0x0004 */ unsigned int Denominator;
}; /* size: 0x0008 */

struct DISPLAYCONFIG_2DREGION
{
  /* 0x0000 */ unsigned int cx;
  /* 0x0004 */ unsigned int cy;
}; /* size: 0x0008 */

enum DISPLAYCONFIG_SCANLINE_ORDERING
{
  DISPLAYCONFIG_SCANLINE_ORDERING_UNSPECIFIED = 0,
  DISPLAYCONFIG_SCANLINE_ORDERING_PROGRESSIVE = 1,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED = 2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_UPPERFIELDFIRST = 2,
  DISPLAYCONFIG_SCANLINE_ORDERING_INTERLACED_LOWERFIELDFIRST = 3,
  DISPLAYCONFIG_SCANLINE_ORDERING_FORCE_UINT32 = -1,
};

struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO
{
  /* 0x0000 */ unsigned __int64 pixelRate;
  /* 0x0008 */ struct DISPLAYCONFIG_RATIONAL hSyncFreq;
  /* 0x0010 */ struct DISPLAYCONFIG_RATIONAL vSyncFreq;
  /* 0x0018 */ struct DISPLAYCONFIG_2DREGION activeSize;
  /* 0x0020 */ struct DISPLAYCONFIG_2DREGION totalSize;
  /* 0x0028 */ unsigned int videoStandard;
  /* 0x002c */ enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
}; /* size: 0x0030 */

struct DISPLAYCONFIG_TARGET_MODE
{
  /* 0x0000 */ struct DISPLAYCONFIG_VIDEO_SIGNAL_INFO targetVideoSignalInfo;
}; /* size: 0x0030 */

enum tagPOINTER_DEVICE_CURSOR_TYPE
{
  POINTER_DEVICE_CURSOR_TYPE_UNKNOWN = 0,
  POINTER_DEVICE_CURSOR_TYPE_TIP = 1,
  POINTER_DEVICE_CURSOR_TYPE_ERASER = 2,
  POINTER_DEVICE_CURSOR_TYPE_MAX = -1,
};

class CDestObject
{
  /* 0x0000 */ long Padding_89[2];
  /* 0x0008 */ struct tagCOMVERSION _comversion;
  /* 0x000c */ unsigned long _dwDestCtx;
}; /* size: 0x0010 */

class CRpcChannelBuffer
{
  /* 0x0000 */ long Padding_90[8];
  /* 0x0020 */ struct _GUID _guidSignature;
  /* 0x0030 */ unsigned long _cRefs;
  /* 0x0034 */ unsigned long state;
  /* 0x0038 */ class CChannelHandle* volatile _pRpcDefault;
  /* 0x0040 */ class CChannelHandle* _pRpcCustom;
  /* 0x0048 */ class OXIDEntry* _pOXIDEntry;
  /* 0x0050 */ struct tagIPIDEntry* _pIPIDEntry;
  /* 0x0058 */ void* _pInterfaceInfo;
  /* 0x0060 */ class CStdIdentity* _pStdId;
  /* 0x0068 */ class CDestObject _destObj;
}; /* size: 0x0078 */

typedef struct _DOCINFOA
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ long Padding_91;
  /* 0x0008 */ const char* lpszDocName;
  /* 0x0010 */ const char* lpszOutput;
  /* 0x0018 */ const char* lpszDatatype;
  /* 0x0020 */ unsigned long fwType;
  /* 0x0024 */ long __PADDING__[1];
} DOCINFOA, *PDOCINFOA; /* size: 0x0028 */

enum tagPOINTER_BUTTON_CHANGE_TYPE
{
  POINTER_CHANGE_NONE = 0,
  POINTER_CHANGE_FIRSTBUTTON_DOWN = 1,
  POINTER_CHANGE_FIRSTBUTTON_UP = 2,
  POINTER_CHANGE_SECONDBUTTON_DOWN = 3,
  POINTER_CHANGE_SECONDBUTTON_UP = 4,
  POINTER_CHANGE_THIRDBUTTON_DOWN = 5,
  POINTER_CHANGE_THIRDBUTTON_UP = 6,
  POINTER_CHANGE_FOURTHBUTTON_DOWN = 7,
  POINTER_CHANGE_FOURTHBUTTON_UP = 8,
  POINTER_CHANGE_FIFTHBUTTON_DOWN = 9,
  POINTER_CHANGE_FIFTHBUTTON_UP = 10,
};

typedef struct _SYSTEM_QUERY_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned long TimeIncrement;
  /* 0x0008 */ unsigned char Enable;
  /* 0x0009 */ char __PADDING__[3];
} SYSTEM_QUERY_TIME_ADJUST_INFORMATION, *PSYSTEM_QUERY_TIME_ADJUST_INFORMATION; /* size: 0x000c */

enum tagCOINIT
{
  COINIT_APARTMENTTHREADED = 2,
  COINIT_MULTITHREADED = 0,
  COINIT_DISABLE_OLE1DDE = 4,
  COINIT_SPEED_OVER_MEMORY = 8,
};

typedef struct _DEVICE_DATA_SET_LB_PROVISIONING_STATE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned __int64 SlabSizeInBytes;
  /* 0x0010 */ unsigned long SlabOffsetDeltaInBytes;
  /* 0x0014 */ unsigned long SlabAllocationBitMapBitCount;
  /* 0x0018 */ unsigned long SlabAllocationBitMapLength;
  /* 0x001c */ unsigned long SlabAllocationBitMap[1];
} DEVICE_DATA_SET_LB_PROVISIONING_STATE, *PDEVICE_DATA_SET_LB_PROVISIONING_STATE; /* size: 0x0020 */

typedef enum _PNP_VETO_TYPE
{
  PNP_VetoTypeUnknown = 0,
  PNP_VetoLegacyDevice = 1,
  PNP_VetoPendingClose = 2,
  PNP_VetoWindowsApp = 3,
  PNP_VetoWindowsService = 4,
  PNP_VetoOutstandingOpen = 5,
  PNP_VetoDevice = 6,
  PNP_VetoDriver = 7,
  PNP_VetoIllegalDeviceRequest = 8,
  PNP_VetoInsufficientPower = 9,
  PNP_VetoNonDisableable = 10,
  PNP_VetoLegacyDriver = 11,
  PNP_VetoInsufficientRights = 12,
} PNP_VETO_TYPE, *PPNP_VETO_TYPE;

struct SERVICE_STATUS_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;

typedef enum _OBJECT_INFORMATION_CLASS
{
  ObjectBasicInformation = 0,
  ObjectNameInformation = 1,
  ObjectTypeInformation = 2,
  ObjectTypesInformation = 3,
  ObjectHandleFlagInformation = 4,
  ObjectSessionInformation = 5,
  MaxObjectInfoClass = 6,
} OBJECT_INFORMATION_CLASS, *POBJECT_INFORMATION_CLASS;

typedef enum _IO_SESSION_STATE
{
  IoSessionStateCreated = 1,
  IoSessionStateInitialized = 2,
  IoSessionStateConnected = 3,
  IoSessionStateDisconnected = 4,
  IoSessionStateDisconnectedLoggedOn = 5,
  IoSessionStateLoggedOn = 6,
  IoSessionStateLoggedOff = 7,
  IoSessionStateTerminated = 8,
  IoSessionStateMax = 9,
} IO_SESSION_STATE, *PIO_SESSION_STATE;

struct LIST_ENTRY32
{
  /* 0x0000 */ unsigned long Flink;
  /* 0x0004 */ unsigned long Blink;
}; /* size: 0x0008 */

typedef struct _STRING32
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ unsigned long Buffer;
} STRING32, *PSTRING32; /* size: 0x0008 */

typedef struct _LDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ struct LIST_ENTRY32 InMemoryOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY32 InInitializationOrderLinks;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short TlsIndex;
  union
  {
    /* 0x003c */ struct LIST_ENTRY32 HashLinks;
    struct
    {
      /* 0x003c */ unsigned long SectionPointer;
      /* 0x0040 */ unsigned long CheckSum;
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
  union
  {
    /* 0x0044 */ unsigned long TimeDateStamp;
    /* 0x0044 */ unsigned long LoadedImports;
  }; /* size: 0x0004 */
} LDR_DATA_TABLE_ENTRY32, *PLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

struct LIST_ENTRY64
{
  /* 0x0000 */ unsigned __int64 Flink;
  /* 0x0008 */ unsigned __int64 Blink;
}; /* size: 0x0010 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG64
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_92;
  /* 0x0008 */ unsigned __int64 CriticalSection;
  /* 0x0010 */ struct LIST_ENTRY64 ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG64, *PRTL_CRITICAL_SECTION_DEBUG64; /* size: 0x0030 */

typedef struct _DEVICEDUMP_STRUCTURE_VERSION
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwSize;
} DEVICEDUMP_STRUCTURE_VERSION, *PDEVICEDUMP_STRUCTURE_VERSION; /* size: 0x000c */

typedef struct _DEVICEDUMP_SECTION_HEADER
{
  /* 0x0000 */ struct _GUID guidDeviceDataId;
  /* 0x0010 */ unsigned char sOrganizationID[16];
  /* 0x0020 */ unsigned long dwFirmwareRevision;
  /* 0x0024 */ unsigned char sModelNumber[32];
  /* 0x0044 */ unsigned char szDeviceManufacturingID[32];
  /* 0x0064 */ unsigned long dwFlags;
  /* 0x0068 */ unsigned long bRestrictedPrivateDataVersion;
  /* 0x006c */ unsigned long dwFirmwareIssueId;
  /* 0x0070 */ unsigned char szIssueDescriptionString[132];
} DEVICEDUMP_SECTION_HEADER, *PDEVICEDUMP_SECTION_HEADER; /* size: 0x00f4 */

typedef struct _DEVICEDUMP_SUBSECTION_POINTER
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwOffset;
} DEVICEDUMP_SUBSECTION_POINTER, *PDEVICEDUMP_SUBSECTION_POINTER; /* size: 0x000c */

typedef struct _DEVICEDUMP_STORAGEDEVICE_DATA
{
  /* 0x0000 */ struct _DEVICEDUMP_STRUCTURE_VERSION Descriptor;
  /* 0x000c */ struct _DEVICEDUMP_SECTION_HEADER SectionHeader;
  /* 0x0100 */ unsigned long dwBufferSize;
  /* 0x0104 */ unsigned long dwReasonForCollection;
  /* 0x0108 */ struct _DEVICEDUMP_SUBSECTION_POINTER PublicData;
  /* 0x0114 */ struct _DEVICEDUMP_SUBSECTION_POINTER RestrictedData;
  /* 0x0120 */ struct _DEVICEDUMP_SUBSECTION_POINTER PrivateData;
} DEVICEDUMP_STORAGEDEVICE_DATA, *PDEVICEDUMP_STORAGEDEVICE_DATA; /* size: 0x012c */

enum tagURLTEMPLATE
{
  URLTEMPLATE_CUSTOM = 0,
  URLTEMPLATE_PREDEFINED_MIN = 0x10000,
  URLTEMPLATE_LOW = 0x10000,
  URLTEMPLATE_MEDLOW = 0x10500,
  URLTEMPLATE_MEDIUM = 0x11000,
  URLTEMPLATE_MEDHIGH = 0x11500,
  URLTEMPLATE_HIGH = 0x12000,
  URLTEMPLATE_PREDEFINED_MAX = 0x20000,
};

struct tagEMR
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
}; /* size: 0x0008 */

typedef struct _TRIVERTEX
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
  /* 0x0008 */ unsigned short Red;
  /* 0x000a */ unsigned short Green;
  /* 0x000c */ unsigned short Blue;
  /* 0x000e */ unsigned short Alpha;
} TRIVERTEX, *PTRIVERTEX; /* size: 0x0010 */

struct tagEMRGRADIENTFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nVer;
  /* 0x001c */ unsigned long nTri;
  /* 0x0020 */ unsigned long ulMode;
  /* 0x0024 */ struct _TRIVERTEX Ver[1];
}; /* size: 0x0034 */

struct tagPOINT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
}; /* size: 0x0008 */

typedef enum _RTL_VERIFIER_REDIRECT_TYPE
{
  VerifierGPALookup = 0,
  VerifierDelayloadLookup = 1,
  VerifierLegacyLookup = 2,
  VerifierMaxLookupType = 3,
} RTL_VERIFIER_REDIRECT_TYPE, *PRTL_VERIFIER_REDIRECT_TYPE;

typedef struct _CERT_X942_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB j;
  /* 0x0040 */ struct _CERT_X942_DH_VALIDATION_PARAMS* pValidationParams;
} CERT_X942_DH_PARAMETERS, *PCERT_X942_DH_PARAMETERS; /* size: 0x0048 */

struct IComCatalog
{
}; /* size: 0x0008 */

enum tagMSHLFLAGS
{
  MSHLFLAGS_NORMAL = 0,
  MSHLFLAGS_TABLESTRONG = 1,
  MSHLFLAGS_TABLEWEAK = 2,
  MSHLFLAGS_NOPING = 4,
  MSHLFLAGS_RESERVED1 = 8,
  MSHLFLAGS_RESERVED2 = 16,
  MSHLFLAGS_RESERVED3 = 32,
  MSHLFLAGS_RESERVED4 = 64,
};

typedef enum _PNP_QUERY_RELATION
{
  PnpQueryEjectRelations = 0,
  PnpQueryRemovalRelations = 1,
  PnpQueryPowerRelations = 2,
  PnpQueryBusRelations = 3,
  PnpQueryTransportRelations = 4,
  MaxPnpQueryRelations = 5,
} PNP_QUERY_RELATION, *PPNP_QUERY_RELATION;

typedef struct _CMC_PEND_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PendToken;
  /* 0x0010 */ struct _FILETIME PendTime;
} CMC_PEND_INFO, *PCMC_PEND_INFO; /* size: 0x0018 */

typedef struct _SID_IDENTIFIER_AUTHORITY
{
  /* 0x0000 */ unsigned char Value[6];
} SID_IDENTIFIER_AUTHORITY, *PSID_IDENTIFIER_AUTHORITY; /* size: 0x0006 */

typedef struct _SID
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char SubAuthorityCount;
  /* 0x0002 */ struct _SID_IDENTIFIER_AUTHORITY IdentifierAuthority;
  /* 0x0008 */ unsigned long SubAuthority[1];
} SID, *PSID; /* size: 0x000c */

typedef struct _BCRYPT_INTERFACE_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
} BCRYPT_INTERFACE_VERSION, *PBCRYPT_INTERFACE_VERSION; /* size: 0x0004 */

typedef enum _JOBOBJECTINFOCLASS
{
  JobObjectBasicAccountingInformation = 1,
  JobObjectBasicLimitInformation = 2,
  JobObjectBasicProcessIdList = 3,
  JobObjectBasicUIRestrictions = 4,
  JobObjectSecurityLimitInformation = 5,
  JobObjectEndOfJobTimeInformation = 6,
  JobObjectAssociateCompletionPortInformation = 7,
  JobObjectBasicAndIoAccountingInformation = 8,
  JobObjectExtendedLimitInformation = 9,
  JobObjectJobSetInformation = 10,
  JobObjectGroupInformation = 11,
  JobObjectNotificationLimitInformation = 12,
  JobObjectLimitViolationInformation = 13,
  JobObjectGroupInformationEx = 14,
  JobObjectCpuRateControlInformation = 15,
  JobObjectCompletionFilter = 16,
  JobObjectCompletionCounter = 17,
  JobObjectFreezeInformation = 18,
  JobObjectExtendedAccountingInformation = 19,
  JobObjectWakeInformation = 20,
  JobObjectBackgroundInformation = 21,
  JobObjectSchedulingRankBiasInformation = 22,
  JobObjectTimerVirtualizationInformation = 23,
  JobObjectCycleTimeNotification = 24,
  JobObjectClearEvent = 25,
  JobObjectReserved1Information = 18,
  JobObjectReserved2Information = 19,
  JobObjectReserved3Information = 20,
  JobObjectReserved4Information = 21,
  JobObjectReserved5Information = 22,
  JobObjectReserved6Information = 23,
  JobObjectReserved7Information = 24,
  JobObjectReserved8Information = 25,
  MaxJobObjectInfoClass = 26,
} JOBOBJECTINFOCLASS, *PJOBOBJECTINFOCLASS;

struct tagTPMPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ struct tagRECT rcExclude;
}; /* size: 0x0014 */

typedef enum _COMPUTER_NAME_FORMAT
{
  ComputerNameNetBIOS = 0,
  ComputerNameDnsHostname = 1,
  ComputerNameDnsDomain = 2,
  ComputerNameDnsFullyQualified = 3,
  ComputerNamePhysicalNetBIOS = 4,
  ComputerNamePhysicalDnsHostname = 5,
  ComputerNamePhysicalDnsDomain = 6,
  ComputerNamePhysicalDnsFullyQualified = 7,
  ComputerNameMax = 8,
} COMPUTER_NAME_FORMAT, *PCOMPUTER_NAME_FORMAT;

typedef enum _IO_SESSION_EVENT
{
  IoSessionEventIgnore = 0,
  IoSessionEventCreated = 1,
  IoSessionEventTerminated = 2,
  IoSessionEventConnected = 3,
  IoSessionEventDisconnected = 4,
  IoSessionEventLogon = 5,
  IoSessionEventLogoff = 6,
  IoSessionEventMax = 7,
} IO_SESSION_EVENT, *PIO_SESSION_EVENT;

struct tagRemHPALETTE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct waveformat_tag
{
  /* 0x0000 */ unsigned short wFormatTag;
  /* 0x0002 */ unsigned short nChannels;
  /* 0x0004 */ unsigned long nSamplesPerSec;
  /* 0x0008 */ unsigned long nAvgBytesPerSec;
  /* 0x000c */ unsigned short nBlockAlign;
}; /* size: 0x000e */

typedef enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 1,
  FileFullDirectoryInformation = 2,
  FileBothDirectoryInformation = 3,
  FileBasicInformation = 4,
  FileStandardInformation = 5,
  FileInternalInformation = 6,
  FileEaInformation = 7,
  FileAccessInformation = 8,
  FileNameInformation = 9,
  FileRenameInformation = 10,
  FileLinkInformation = 11,
  FileNamesInformation = 12,
  FileDispositionInformation = 13,
  FilePositionInformation = 14,
  FileFullEaInformation = 15,
  FileModeInformation = 16,
  FileAlignmentInformation = 17,
  FileAllInformation = 18,
  FileAllocationInformation = 19,
  FileEndOfFileInformation = 20,
  FileAlternateNameInformation = 21,
  FileStreamInformation = 22,
  FilePipeInformation = 23,
  FilePipeLocalInformation = 24,
  FilePipeRemoteInformation = 25,
  FileMailslotQueryInformation = 26,
  FileMailslotSetInformation = 27,
  FileCompressionInformation = 28,
  FileObjectIdInformation = 29,
  FileCompletionInformation = 30,
  FileMoveClusterInformation = 31,
  FileQuotaInformation = 32,
  FileReparsePointInformation = 33,
  FileNetworkOpenInformation = 34,
  FileAttributeTagInformation = 35,
  FileTrackingInformation = 36,
  FileIdBothDirectoryInformation = 37,
  FileIdFullDirectoryInformation = 38,
  FileValidDataLengthInformation = 39,
  FileShortNameInformation = 40,
  FileIoCompletionNotificationInformation = 41,
  FileIoStatusBlockRangeInformation = 42,
  FileIoPriorityHintInformation = 43,
  FileSfioReserveInformation = 44,
  FileSfioVolumeInformation = 45,
  FileHardLinkInformation = 46,
  FileProcessIdsUsingFileInformation = 47,
  FileNormalizedNameInformation = 48,
  FileNetworkPhysicalNameInformation = 49,
  FileIdGlobalTxDirectoryInformation = 50,
  FileIsRemoteDeviceInformation = 51,
  FileAttributeCacheInformation = 52,
  FileNumaNodeInformation = 53,
  FileStandardLinkInformation = 54,
  FileRemoteProtocolInformation = 55,
  FileRenameInformationBypassAccessCheck = 56,
  FileLinkInformationBypassAccessCheck = 57,
  FileVolumeNameInformation = 58,
  FileIdInformation = 59,
  FileIdExtdDirectoryInformation = 60,
  FileMaximumInformation = 61,
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

typedef struct _QUERY_SERVICE_LOCK_STATUSA
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ long Padding_93;
  /* 0x0008 */ char* lpLockOwner;
  /* 0x0010 */ unsigned long dwLockDuration;
  /* 0x0014 */ long __PADDING__[1];
} QUERY_SERVICE_LOCK_STATUSA, *PQUERY_SERVICE_LOCK_STATUSA; /* size: 0x0018 */

struct tagLC_ID
{
  /* 0x0000 */ unsigned short wLanguage;
  /* 0x0002 */ unsigned short wCountry;
  /* 0x0004 */ unsigned short wCodePage;
}; /* size: 0x0006 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >::is_pointer<Windows::Rtl::IRtlROFOStream *>
{
}; /* size: 0x0001 */

typedef enum _ALPC_PORT_INFORMATION_CLASS
{
  AlpcBasicInformation = 0,
  AlpcPortInformation = 1,
  AlpcAssociateCompletionPortInformation = 2,
  AlpcConnectedSIDInformation = 3,
  AlpcServerInformation = 4,
  AlpcMessageZoneInformation = 5,
  AlpcRegisterCompletionListInformation = 6,
  AlpcUnregisterCompletionListInformation = 7,
  AlpcAdjustCompletionListConcurrencyCountInformation = 8,
  AlpcRegisterCallbackInformation = 9,
  AlpcCompletionListRundownInformation = 10,
} ALPC_PORT_INFORMATION_CLASS, *PALPC_PORT_INFORMATION_CLASS;

enum tagVARFLAGS
{
  VARFLAG_FREADONLY = 1,
  VARFLAG_FSOURCE = 2,
  VARFLAG_FBINDABLE = 4,
  VARFLAG_FREQUESTEDIT = 8,
  VARFLAG_FDISPLAYBIND = 16,
  VARFLAG_FDEFAULTBIND = 32,
  VARFLAG_FHIDDEN = 64,
  VARFLAG_FRESTRICTED = 128,
  VARFLAG_FDEFAULTCOLLELEM = 256,
  VARFLAG_FUIDEFAULT = 512,
  VARFLAG_FNONBROWSABLE = 1024,
  VARFLAG_FREPLACEABLE = 2048,
  VARFLAG_FIMMEDIATEBIND = 4096,
};

struct IRpcChannelBufferMarshalingContext
{
}; /* size: 0x0008 */

typedef struct _CMSG_CTRL_KEY_AGREE_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_94;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_95;
  /* 0x0018 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
  /* 0x0020 */ unsigned long dwRecipientIndex;
  /* 0x0024 */ unsigned long dwRecipientEncryptedKeyIndex;
  /* 0x0028 */ struct _CRYPT_BIT_BLOB OriginatorPublicKey;
} CMSG_CTRL_KEY_AGREE_DECRYPT_PARA, *PCMSG_CTRL_KEY_AGREE_DECRYPT_PARA; /* size: 0x0040 */

typedef struct _BIN_RANGE
{
  /* 0x0000 */ union _LARGE_INTEGER StartValue;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} BIN_RANGE, *PBIN_RANGE; /* size: 0x0010 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX
{
  /* 0x0000 */ void* Object;
  /* 0x0008 */ unsigned __int64 UniqueProcessId;
  /* 0x0010 */ unsigned __int64 HandleValue;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned short CreatorBackTraceIndex;
  /* 0x001e */ unsigned short ObjectTypeIndex;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ unsigned long Reserved;
} SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO_EX; /* size: 0x0028 */

typedef enum __MIDL_IBindStatusCallback_0002
{
  BINDINFOF_URLENCODESTGMEDDATA = 1,
  BINDINFOF_URLENCODEDEXTRAINFO = 2,
} _MIDL_IBindStatusCallback_0002, *P_MIDL_IBindStatusCallback_0002;

struct _TP_POOL;

typedef struct _CRL_FIND_ISSUED_FOR_PARA
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pSubjectCert;
  /* 0x0008 */ const struct _CERT_CONTEXT* pIssuerCert;
} CRL_FIND_ISSUED_FOR_PARA, *PCRL_FIND_ISSUED_FOR_PARA; /* size: 0x0010 */

class CCompositeMonikerEnum
{
  /* 0x0000 */ long Padding_96[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_97;
  /* 0x0010 */ class CCompositeMoniker* m_pCM;
  /* 0x0018 */ int m_fForward;
  /* 0x001c */ long Padding_98;
  /* 0x0020 */ struct CCompositeMonikerEnum::se* m_pBase;
  /* 0x0028 */ struct CCompositeMonikerEnum::se* m_pTop;
  /* 0x0030 */ struct IMoniker* m_pNext;
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_5
{
  value = 1,
} TAG_UNNAMED_5, *PTAG_UNNAMED_5;

struct POWER_STATE_NOTIFY_HANDLER
{
  /* 0x0000 */ void* Handler /* function */;
  /* 0x0008 */ void* Context;
}; /* size: 0x0010 */

struct IOleCache2
{
}; /* size: 0x0008 */

typedef struct _PRINTER_OPTIONSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
} PRINTER_OPTIONSW, *PPRINTER_OPTIONSW; /* size: 0x0008 */

typedef enum _SC_STATUS_TYPE
{
  SC_STATUS_PROCESS_INFO = 0,
} SC_STATUS_TYPE, *PSC_STATUS_TYPE;

typedef struct _KEY_EVENT_RECORD
{
  /* 0x0000 */ int bKeyDown;
  /* 0x0004 */ unsigned short wRepeatCount;
  /* 0x0006 */ unsigned short wVirtualKeyCode;
  /* 0x0008 */ unsigned short wVirtualScanCode;
  union
  {
    union
    {
      /* 0x000a */ wchar_t UnicodeChar;
      /* 0x000a */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ uChar;
  /* 0x000c */ unsigned long dwControlKeyState;
} KEY_EVENT_RECORD, *PKEY_EVENT_RECORD; /* size: 0x0010 */

typedef struct _COORD
{
  /* 0x0000 */ short X;
  /* 0x0002 */ short Y;
} COORD, *PCOORD; /* size: 0x0004 */

typedef struct _MOUSE_EVENT_RECORD
{
  /* 0x0000 */ struct _COORD dwMousePosition;
  /* 0x0004 */ unsigned long dwButtonState;
  /* 0x0008 */ unsigned long dwControlKeyState;
  /* 0x000c */ unsigned long dwEventFlags;
} MOUSE_EVENT_RECORD, *PMOUSE_EVENT_RECORD; /* size: 0x0010 */

typedef struct _WINDOW_BUFFER_SIZE_RECORD
{
  /* 0x0000 */ struct _COORD dwSize;
} WINDOW_BUFFER_SIZE_RECORD, *PWINDOW_BUFFER_SIZE_RECORD; /* size: 0x0004 */

typedef struct _MENU_EVENT_RECORD
{
  /* 0x0000 */ unsigned int dwCommandId;
} MENU_EVENT_RECORD, *PMENU_EVENT_RECORD; /* size: 0x0004 */

typedef struct _FOCUS_EVENT_RECORD
{
  /* 0x0000 */ int bSetFocus;
} FOCUS_EVENT_RECORD, *PFOCUS_EVENT_RECORD; /* size: 0x0004 */

typedef struct _INPUT_RECORD
{
  /* 0x0000 */ unsigned short EventType;
  /* 0x0002 */ char Padding_99[2];
  union
  {
    union
    {
      /* 0x0004 */ struct _KEY_EVENT_RECORD KeyEvent;
      /* 0x0004 */ struct _MOUSE_EVENT_RECORD MouseEvent;
      /* 0x0004 */ struct _WINDOW_BUFFER_SIZE_RECORD WindowBufferSizeEvent;
      /* 0x0004 */ struct _MENU_EVENT_RECORD MenuEvent;
      /* 0x0004 */ struct _FOCUS_EVENT_RECORD FocusEvent;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Event;
} INPUT_RECORD, *PINPUT_RECORD; /* size: 0x0014 */

typedef struct _CRYPT_OID_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_100;
  /* 0x0008 */ const char* pszOID;
  /* 0x0010 */ const wchar_t* pwszName;
  /* 0x0018 */ unsigned long dwGroupId;
  union
  {
    /* 0x001c */ unsigned long dwValue;
    /* 0x001c */ unsigned int Algid;
    /* 0x001c */ unsigned long dwLength;
  }; /* size: 0x0004 */
  /* 0x0020 */ struct _CRYPTOAPI_BLOB ExtraInfo;
} CRYPT_OID_INFO, *PCRYPT_OID_INFO; /* size: 0x0030 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;

typedef enum _FP__IEEE_FORMAT
{
  FpFormatFp32 = 0,
  FpFormatFp64 = 1,
  FpFormatFp80 = 2,
  FpFormatFp128 = 3,
  FpFormatI16 = 4,
  FpFormatI32 = 5,
  FpFormatI64 = 6,
  FpFormatU16 = 7,
  FpFormatU32 = 8,
  FpFormatU64 = 9,
  FpFormatCompare = 10,
  FpFormatString = 11,
} FP__IEEE_FORMAT, *PFP__IEEE_FORMAT;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_6
{
  Value = 0,
} TAG_UNNAMED_6, *PTAG_UNNAMED_6;

struct IDocfileAsyncConnectionPoint
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_STATE_CONTEXT
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Reserved1 : 8; /* bit position: 0 */
      /* 0x0000 */ unsigned long TargetSystemState : 4; /* bit position: 8 */
      /* 0x0000 */ unsigned long EffectiveSystemState : 4; /* bit position: 12 */
      /* 0x0000 */ unsigned long CurrentSystemState : 4; /* bit position: 16 */
      /* 0x0000 */ unsigned long IgnoreHibernationPath : 1; /* bit position: 20 */
      /* 0x0000 */ unsigned long PseudoTransition : 1; /* bit position: 21 */
      /* 0x0000 */ unsigned long Reserved2 : 10; /* bit position: 22 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ContextAsUlong;
  }; /* size: 0x0004 */
} SYSTEM_POWER_STATE_CONTEXT, *PSYSTEM_POWER_STATE_CONTEXT; /* size: 0x0004 */

typedef enum _LEARNING_MODE_LOG_LEVEL
{
  LearningModeLogLevelPassive = 0,
  LearningModeLogLevelNormalApc = 1,
  LearningModeLogLevelSpecialApc = 2,
  LearningModeLogLevelMax = 3,
} LEARNING_MODE_LOG_LEVEL, *PLEARNING_MODE_LOG_LEVEL;

struct IProvideClassInfo
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT
{
  /* 0x0000 */ unsigned long Hits;
  /* 0x0004 */ unsigned char PercentFrequency;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT, *PSYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT; /* size: 0x0008 */

typedef struct _RTL_VERIFIER_HELPER_TABLE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_101;
  /* 0x0008 */ void* VerifierEngGetStackTraceAddress /* function */;
  /* 0x0010 */ void* VerifierEngNtdllHeapFreeCallback /* function */;
  /* 0x0018 */ void* VerifierEngLogStackTrace /* function */;
  /* 0x0020 */ const struct _UNICODE_STRING* UnicodeImageName;
  /* 0x0028 */ void* VerifierEngCommitDebugInfo /* function */;
  /* 0x0030 */ void* VerifierEngSetProcessDebugInformation /* function */;
  /* 0x0038 */ void* VerifierEngQueryImageFileExecutionOptionsEx /* function */;
  /* 0x0040 */ unsigned long* AddressDphGlobalFlags;
  /* 0x0048 */ struct _RTL_VERIFIER_HEAP_TABLE* VerifierTable;
  /* 0x0050 */ struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR* VerifierDescriptor;
  /* 0x0058 */ void* OptionsKey;
  /* 0x0060 */ void* VerifierEngGetStackTraceAddressEx /* function */;
  /* 0x0068 */ void* VerifierEngReleaseStackTrace /* function */;
  /* 0x0070 */ void* VerifierEngStdInitializeStackTrace /* function */;
  /* 0x0078 */ void* VerifierEngStdDeleteStackTrace /* function */;
  /* 0x0080 */ void* VerifierEngStdLogStackTrace /* function */;
  /* 0x0088 */ void* VerifierEngStdReleaseStackTrace /* function */;
} RTL_VERIFIER_HELPER_TABLE, *PRTL_VERIFIER_HELPER_TABLE; /* size: 0x0090 */

typedef enum _CM_SERVICE_NODE_TYPE
{
  DriverType = 1,
  FileSystemType = 2,
  Win32ServiceOwnProcess = 16,
  Win32ServiceShareProcess = 32,
  AdapterType = 4,
  RecognizerType = 8,
} CM_SERVICE_NODE_TYPE, *PCM_SERVICE_NODE_TYPE;

typedef enum _APTTYPE
{
  APTTYPE_CURRENT = -1,
  APTTYPE_STA = 0,
  APTTYPE_MTA = 1,
  APTTYPE_NA = 2,
  APTTYPE_MAINSTA = 3,
} APTTYPE, *PAPTTYPE;

struct IUrlMon
{
}; /* size: 0x0008 */

struct IMonikerProp
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_7
{
  Minimal = 0,
  Normal = 128,
  MaximallyVerbose = 255,
} TAG_UNNAMED_7, *PTAG_UNNAMED_7;

class Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits>
{
  /* 0x0000 */ struct _RTL_SRWLOCK* sync_;
}; /* size: 0x0008 */

struct ICacheRefresh
{
}; /* size: 0x0008 */

struct HDC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _CM_SERVICE_LOAD_TYPE
{
  BootLoad = 0,
  SystemLoad = 1,
  AutoLoad = 2,
  DemandLoad = 3,
  DisableLoad = 4,
} CM_SERVICE_LOAD_TYPE, *PCM_SERVICE_LOAD_TYPE;

typedef struct _PROCESS_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_102;
  /* 0x0008 */ struct _PEB* PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ long Padding_103;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION, *PPROCESS_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION BasicInfo;
  union
  {
    /* 0x0038 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned long IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned long IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned long IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned long IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned long IsFrozen : 1; /* bit position: 4 */
      /* 0x0038 */ unsigned long IsBackground : 1; /* bit position: 5 */
      /* 0x0038 */ unsigned long IsStronglyNamed : 1; /* bit position: 6 */
      /* 0x0038 */ unsigned long SpareBits : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION, *PPROCESS_EXTENDED_BASIC_INFORMATION; /* size: 0x0040 */

typedef enum _THREAD_INFORMATION_CLASS
{
  ThreadMemoryPriority = 0,
  ThreadAbsoluteCpuPriority = 1,
  ThreadInformationClassMax = 2,
} THREAD_INFORMATION_CLASS, *PTHREAD_INFORMATION_CLASS;

typedef enum _TAG_UNNAMED_8
{
  value = 1,
} TAG_UNNAMED_8, *PTAG_UNNAMED_8;

struct tagProxyFileInfo
{
  /* 0x0000 */ struct tagCInterfaceProxyVtbl* const* pProxyVtblList;
  /* 0x0008 */ struct tagCInterfaceStubVtbl* const* pStubVtblList;
  /* 0x0010 */ const char* const* pNamesArray;
  /* 0x0018 */ const struct _GUID** pDelegatedIIDs;
  /* 0x0020 */ void* const pIIDLookupRtn /* function */;
  /* 0x0028 */ unsigned short TableSize;
  /* 0x002a */ unsigned short TableVersion;
  /* 0x002c */ long Padding_104;
  /* 0x0030 */ const struct _GUID** pAsyncIIDLookup;
  /* 0x0038 */ __int64 Filler2;
  /* 0x0040 */ __int64 Filler3;
  /* 0x0048 */ __int64 Filler4;
}; /* size: 0x0050 */

typedef enum _SID_NAME_USE
{
  SidTypeUser = 1,
  SidTypeGroup = 2,
  SidTypeDomain = 3,
  SidTypeAlias = 4,
  SidTypeWellKnownGroup = 5,
  SidTypeDeletedAccount = 6,
  SidTypeInvalid = 7,
  SidTypeUnknown = 8,
  SidTypeComputer = 9,
  SidTypeLabel = 10,
} SID_NAME_USE, *PSID_NAME_USE;

enum tagFUNCFLAGS
{
  FUNCFLAG_FRESTRICTED = 1,
  FUNCFLAG_FSOURCE = 2,
  FUNCFLAG_FBINDABLE = 4,
  FUNCFLAG_FREQUESTEDIT = 8,
  FUNCFLAG_FDISPLAYBIND = 16,
  FUNCFLAG_FDEFAULTBIND = 32,
  FUNCFLAG_FHIDDEN = 64,
  FUNCFLAG_FUSESGETLASTERROR = 128,
  FUNCFLAG_FDEFAULTCOLLELEM = 256,
  FUNCFLAG_FUIDEFAULT = 512,
  FUNCFLAG_FNONBROWSABLE = 1024,
  FUNCFLAG_FREPLACEABLE = 2048,
  FUNCFLAG_FIMMEDIATEBIND = 4096,
};

typedef struct _BLENDFUNCTION
{
  /* 0x0000 */ unsigned char BlendOp;
  /* 0x0001 */ unsigned char BlendFlags;
  /* 0x0002 */ unsigned char SourceConstantAlpha;
  /* 0x0003 */ unsigned char AlphaFormat;
} BLENDFUNCTION, *PBLENDFUNCTION; /* size: 0x0004 */

typedef enum _TAG_UNNAMED_9
{
  value = 1,
} TAG_UNNAMED_9, *PTAG_UNNAMED_9;

class CDirVector
{
  /* 0x0000 */ long Padding_105[12];
  /* 0x0030 */ unsigned short _cbSector;
}; /* size: 0x0038 */

class CBasedMStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CDirectory
{
  /* 0x0000 */ class CDirVector _dv;
  /* 0x0038 */ unsigned long _cdsTable;
  /* 0x003c */ long Padding_106;
  /* 0x0040 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0048 */ unsigned short _cdeEntries;
  /* 0x004a */ char Padding_107[2];
  /* 0x004c */ unsigned long _sidFirstFree;
}; /* size: 0x0050 */

struct tagLOGFONTA
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ char lfFaceName[32];
}; /* size: 0x003c */

struct tagICONMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTA lfFont;
}; /* size: 0x004c */

typedef struct _POINTL
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
} POINTL, *PPOINTL; /* size: 0x0008 */

struct DISPLAYCONFIG_SOURCE_MODE
{
  /* 0x0000 */ unsigned int width;
  /* 0x0004 */ unsigned int height;
  /* 0x0008 */ enum DISPLAYCONFIG_PIXELFORMAT pixelFormat;
  /* 0x000c */ struct _POINTL position;
}; /* size: 0x0014 */

typedef struct _FILE_FS_VOLUME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_FS_VOLUME_FLAGS_INFORMATION, *PFILE_FS_VOLUME_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _LDRP_CSLIST
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Tail;
} LDRP_CSLIST, *PLDRP_CSLIST; /* size: 0x0008 */

typedef struct _SINGLE_LIST_ENTRY
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; /* size: 0x0008 */

typedef enum _LDR_DDAG_STATE
{
  LdrModulesMerged = -5,
  LdrModulesInitError = -4,
  LdrModulesSnapError = -3,
  LdrModulesUnloaded = -2,
  LdrModulesUnloading = -1,
  LdrModulesPlaceHolder = 0,
  LdrModulesMapping = 1,
  LdrModulesMapped = 2,
  LdrModulesWaitingForDependencies = 3,
  LdrModulesSnapping = 4,
  LdrModulesSnapped = 5,
  LdrModulesCondensed = 6,
  LdrModulesReadyToInit = 7,
  LdrModulesInitializing = 8,
  LdrModulesReadyToRun = 9,
} LDR_DDAG_STATE, *PLDR_DDAG_STATE;

typedef struct _LDR_DDAG_NODE
{
  /* 0x0000 */ struct _LIST_ENTRY Modules;
  /* 0x0010 */ struct _LDR_SERVICE_TAG_RECORD* ServiceTagList;
  /* 0x0018 */ unsigned long LoadCount;
  /* 0x001c */ unsigned long ReferenceCount;
  /* 0x0020 */ unsigned long DependencyCount;
  /* 0x0024 */ long Padding_108;
  union
  {
    /* 0x0028 */ struct _LDRP_CSLIST Dependencies;
    /* 0x0028 */ struct _SINGLE_LIST_ENTRY RemovalLink;
  }; /* size: 0x0008 */
  /* 0x0030 */ struct _LDRP_CSLIST IncomingDependencies;
  /* 0x0038 */ enum _LDR_DDAG_STATE State;
  /* 0x003c */ long Padding_109;
  /* 0x0040 */ struct _SINGLE_LIST_ENTRY CondenseLink;
  /* 0x0048 */ unsigned long PreorderNumber;
  /* 0x004c */ unsigned long LowestLink;
} LDR_DDAG_NODE, *PLDR_DDAG_NODE; /* size: 0x0050 */

enum tagOLEMISC
{
  OLEMISC_RECOMPOSEONRESIZE = 1,
  OLEMISC_ONLYICONIC = 2,
  OLEMISC_INSERTNOTREPLACE = 4,
  OLEMISC_STATIC = 8,
  OLEMISC_CANTLINKINSIDE = 16,
  OLEMISC_CANLINKBYOLE1 = 32,
  OLEMISC_ISLINKOBJECT = 64,
  OLEMISC_INSIDEOUT = 128,
  OLEMISC_ACTIVATEWHENVISIBLE = 256,
  OLEMISC_RENDERINGISDEVICEINDEPENDENT = 512,
  OLEMISC_INVISIBLEATRUNTIME = 1024,
  OLEMISC_ALWAYSRUN = 2048,
  OLEMISC_ACTSLIKEBUTTON = 4096,
  OLEMISC_ACTSLIKELABEL = 8192,
  OLEMISC_NOUIACTIVATE = 16384,
  OLEMISC_ALIGNABLE = 0xffff8000,
  OLEMISC_SIMPLEFRAME = 0x10000,
  OLEMISC_SETCLIENTSITEFIRST = 0x20000,
  OLEMISC_IMEMODE = 0x40000,
  OLEMISC_IGNOREACTIVATEWHENVISIBLE = 0x80000,
  OLEMISC_WANTSTOMENUMERGE = 0x100000,
  OLEMISC_SUPPORTSMULTILEVELUNDO = 0x200000,
};

typedef struct _TAPE_GET_POSITION
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
} TAPE_GET_POSITION, *PTAPE_GET_POSITION; /* size: 0x0010 */

typedef struct _DECRYPTION_STATUS_BUFFER
{
  /* 0x0000 */ unsigned char NoEncryptedStreams;
} DECRYPTION_STATUS_BUFFER, *PDECRYPTION_STATUS_BUFFER; /* size: 0x0001 */

typedef struct _NDR64_POINTER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_110;
  /* 0x0008 */ const void* Pointee;
} NDR64_POINTER_FORMAT, *PNDR64_POINTER_FORMAT; /* size: 0x0010 */

typedef enum _THREAD_UMS_INFORMATION_COMMAND
{
  UmsInformationCommandInvalid = 0,
  UmsInformationCommandAttach = 1,
  UmsInformationCommandDetach = 2,
  UmsInformationCommandQuery = 3,
} THREAD_UMS_INFORMATION_COMMAND, *PTHREAD_UMS_INFORMATION_COMMAND;

typedef struct _TAPE_SET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long EOTWarningZoneSize;
} TAPE_SET_DRIVE_PARAMETERS, *PTAPE_SET_DRIVE_PARAMETERS; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_10
{
  value = 1,
} TAG_UNNAMED_10, *PTAG_UNNAMED_10;

typedef struct _JOBOBJECT_SECURITY_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned long SecurityLimitFlags;
  /* 0x0004 */ long Padding_111;
  /* 0x0008 */ void* JobToken;
  /* 0x0010 */ struct _TOKEN_GROUPS* SidsToDisable;
  /* 0x0018 */ struct _TOKEN_PRIVILEGES* PrivilegesToDelete;
  /* 0x0020 */ struct _TOKEN_GROUPS* RestrictedSids;
} JOBOBJECT_SECURITY_LIMIT_INFORMATION, *PJOBOBJECT_SECURITY_LIMIT_INFORMATION; /* size: 0x0028 */

enum tagCALLCATEGORY
{
  CALLCAT_NOCALL = 0,
  CALLCAT_SYNCHRONOUS = 1,
  CALLCAT_ASYNC = 2,
  CALLCAT_INPUTSYNC = 3,
  CALLCAT_INTERNALSYNC = 4,
  CALLCAT_INTERNALINPUTSYNC = 5,
  CALLCAT_SCMCALL = 6,
};

enum tagGLOBALOPT_EH_VALUES
{
  COMGLB_EXCEPTION_HANDLE = 0,
  COMGLB_EXCEPTION_DONOT_HANDLE_FATAL = 1,
  COMGLB_EXCEPTION_DONOT_HANDLE = 1,
  COMGLB_EXCEPTION_DONOT_HANDLE_ANY = 2,
};

typedef struct _ACL_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long AceCount;
  /* 0x0004 */ unsigned long AclBytesInUse;
  /* 0x0008 */ unsigned long AclBytesFree;
} ACL_SIZE_INFORMATION, *PACL_SIZE_INFORMATION; /* size: 0x000c */

typedef struct _MEMORY_WORKING_SET_BLOCK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 Protection : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 5 */
    /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 Node : 3; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 VirtualPage : 52; /* bit position: 12 */
  }; /* bitfield */
} MEMORY_WORKING_SET_BLOCK, *PMEMORY_WORKING_SET_BLOCK; /* size: 0x0008 */

enum tagRpcLocalAddressFormat
{
  rlafInvalid = 0,
  rlafIPv4 = 1,
  rlafIPv6 = 2,
};

typedef struct _RPC_CALL_LOCAL_ADDRESS_V1
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ long Padding_112;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long BufferSize;
  /* 0x0014 */ enum tagRpcLocalAddressFormat AddressFormat;
} RPC_CALL_LOCAL_ADDRESS_V1, *PRPC_CALL_LOCAL_ADDRESS_V1; /* size: 0x0018 */

class CBrokeredClipDataObject::GetData::__l18::<lambda_DB08121F9B2E4167>
{
  /* 0x0000 */ class CBrokeredClipDataObject* const __this;
  /* 0x0008 */ struct tagFORMATETC*& pformatetcIn;
  /* 0x0010 */ struct tagSTGMEDIUM*& pmedium;
}; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_11
{
  value = 1,
} TAG_UNNAMED_11, *PTAG_UNNAMED_11;

typedef struct _RPC_POLICY
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ unsigned long EndpointFlags;
  /* 0x0008 */ unsigned long NICFlags;
} RPC_POLICY, *PRPC_POLICY; /* size: 0x000c */

struct CCompositeMonikerEnum::se
{
  /* 0x0000 */ class CCompositeMoniker* m_pCM;
  /* 0x0008 */ struct CCompositeMonikerEnum::se* m_pseNext;
  /* 0x0010 */ struct CCompositeMonikerEnum::se* m_psePrev;
}; /* size: 0x0018 */

typedef struct _NDR64_NO_REPEAT_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved1;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_NO_REPEAT_FORMAT, *PNDR64_NO_REPEAT_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned int Offset;
  /* 0x0004 */ unsigned int Reserved;
} NDR64_POINTER_INSTANCE_HEADER_FORMAT, *PNDR64_POINTER_INSTANCE_HEADER_FORMAT; /* size: 0x0008 */

typedef struct _LUID_AND_ATTRIBUTES
{
  /* 0x0000 */ struct _LUID Luid;
  /* 0x0008 */ unsigned long Attributes;
} LUID_AND_ATTRIBUTES, *PLUID_AND_ATTRIBUTES; /* size: 0x000c */

typedef struct _PRIVILEGE_SET
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ unsigned long Control;
  /* 0x0008 */ struct _LUID_AND_ATTRIBUTES Privilege[1];
} PRIVILEGE_SET, *PPRIVILEGE_SET; /* size: 0x0014 */

struct SStringHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long dwHash;
  /* 0x0014 */ long Padding_113;
  /* 0x0018 */ struct tagDUALSTRINGARRAY* psaKey;
}; /* size: 0x0020 */

enum tagXMLEMEM_TYPE
{
  XMLELEMTYPE_ELEMENT = 0,
  XMLELEMTYPE_TEXT = 1,
  XMLELEMTYPE_COMMENT = 2,
  XMLELEMTYPE_DOCUMENT = 3,
  XMLELEMTYPE_DTD = 4,
  XMLELEMTYPE_PI = 5,
  XMLELEMTYPE_OTHER = 6,
};

struct IAgileObject
{
}; /* size: 0x0008 */

typedef enum _MEMORY_INFORMATION_CLASS
{
  MemoryBasicInformation = 0,
  MemoryWorkingSetInformation = 1,
  MemoryMappedFilenameInformation = 2,
  MemoryRegionInformation = 3,
  MemoryWorkingSetExInformation = 4,
} MEMORY_INFORMATION_CLASS, *PMEMORY_INFORMATION_CLASS;

enum CO_MARSHALING_CONTEXT_ATTRIBUTES
{
  CO_MARSHALING_SOURCE_IS_APP_CONTAINER = 0,
};

struct MarshalingContextAttributeValue
{
  /* 0x0000 */ enum CO_MARSHALING_CONTEXT_ATTRIBUTES attribute;
  /* 0x0004 */ long Padding_114;
  /* 0x0008 */ unsigned __int64 value;
}; /* size: 0x0010 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_115;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyWrapAlgorithm;
  /* 0x0040 */ void* pvKeyWrapAuxInfo;
  /* 0x0048 */ unsigned __int64 hCryptProv;
  /* 0x0050 */ unsigned long dwKeySpec;
  /* 0x0054 */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0058 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pEphemeralAlgorithm;
    /* 0x0058 */ struct _CERT_ID* pSenderId;
  }; /* size: 0x0008 */
  /* 0x0060 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0070 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0074 */ long Padding_116;
  /* 0x0078 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO; /* size: 0x0080 */

typedef enum _tagPI_FLAGS
{
  PI_PARSE_URL = 1,
  PI_FILTER_MODE = 2,
  PI_FORCE_ASYNC = 4,
  PI_USE_WORKERTHREAD = 8,
  PI_MIMEVERIFICATION = 16,
  PI_CLSIDLOOKUP = 32,
  PI_DATAPROGRESS = 64,
  PI_SYNCHRONOUS = 128,
  PI_APARTMENTTHREADED = 256,
  PI_CLASSINSTALL = 512,
  PI_PASSONBINDCTX = 8192,
  PI_NOMIMEHANDLER = 0xffff8000,
  PI_LOADAPPDIRECT = 16384,
  PD_FORCE_SWITCH = 0x10000,
  PI_PREFERDEFAULTHANDLER = 0x20000,
} tagPI_FLAGS, *PtagPI_FLAGS;

struct INoMarshal
{
}; /* size: 0x0008 */

typedef enum _SECTION_INFORMATION_CLASS
{
  SectionBasicInformation = 0,
  SectionImageInformation = 1,
  SectionRelocationInformation = 2,
  MaxSectionInfoClass = 3,
} SECTION_INFORMATION_CLASS, *PSECTION_INFORMATION_CLASS;

typedef struct _IMAGE_TLS_DIRECTORY32
{
  /* 0x0000 */ unsigned long StartAddressOfRawData;
  /* 0x0004 */ unsigned long EndAddressOfRawData;
  /* 0x0008 */ unsigned long AddressOfIndex;
  /* 0x000c */ unsigned long AddressOfCallBacks;
  /* 0x0010 */ unsigned long SizeOfZeroFill;
  /* 0x0014 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY32, *PIMAGE_TLS_DIRECTORY32; /* size: 0x0018 */

typedef struct _CERT_SELECT_CRITERIA
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long cPara;
  /* 0x0008 */ void** ppPara;
} CERT_SELECT_CRITERIA, *PCERT_SELECT_CRITERIA; /* size: 0x0010 */

typedef enum _STORAGE_PORT_CODE_SET
{
  StoragePortCodeSetReserved = 0,
  StoragePortCodeSetStorport = 1,
  StoragePortCodeSetSCSIport = 2,
  StoragePortCodeSetSpaceport = 3,
  StoragePortCodeSetATAport = 4,
  StoragePortCodeSetUSBport = 5,
  StoragePortCodeSetSBP2port = 6,
  StoragePortCodeSetSDport = 7,
} STORAGE_PORT_CODE_SET, *PSTORAGE_PORT_CODE_SET;

typedef struct _IMAGE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  union
  {
    /* 0x0008 */ unsigned long UnwindInfoAddress;
    /* 0x0008 */ unsigned long UnwindData;
  }; /* size: 0x0004 */
} IMAGE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_RUNTIME_FUNCTION_ENTRY; /* size: 0x000c */

typedef struct _LDBL12
{
  /* 0x0000 */ unsigned char ld12[12];
} LDBL12, *PLDBL12; /* size: 0x000c */

typedef struct _IDEREGS
{
  /* 0x0000 */ unsigned char bFeaturesReg;
  /* 0x0001 */ unsigned char bSectorCountReg;
  /* 0x0002 */ unsigned char bSectorNumberReg;
  /* 0x0003 */ unsigned char bCylLowReg;
  /* 0x0004 */ unsigned char bCylHighReg;
  /* 0x0005 */ unsigned char bDriveHeadReg;
  /* 0x0006 */ unsigned char bCommandReg;
  /* 0x0007 */ unsigned char bReserved;
} IDEREGS, *PIDEREGS; /* size: 0x0008 */

typedef struct _SENDCMDINPARAMS
{
  /* 0x0000 */ unsigned long cBufferSize;
  /* 0x0004 */ struct _IDEREGS irDriveRegs;
  /* 0x000c */ unsigned char bDriveNumber;
  /* 0x000d */ unsigned char bReserved[3];
  /* 0x0010 */ unsigned long dwReserved[4];
  /* 0x0020 */ unsigned char bBuffer[1];
} SENDCMDINPARAMS, *PSENDCMDINPARAMS; /* size: 0x0021 */

typedef struct _MODEMSETTINGS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwCallSetupFailTimer;
  /* 0x0014 */ unsigned long dwInactivityTimeout;
  /* 0x0018 */ unsigned long dwSpeakerVolume;
  /* 0x001c */ unsigned long dwSpeakerMode;
  /* 0x0020 */ unsigned long dwPreferredModemOptions;
  /* 0x0024 */ unsigned long dwNegotiatedModemOptions;
  /* 0x0028 */ unsigned long dwNegotiatedDCERate;
  /* 0x002c */ unsigned char abVariablePortion[1];
  /* 0x002d */ char __PADDING__[3];
} MODEMSETTINGS, *PMODEMSETTINGS; /* size: 0x0030 */

typedef struct _PRINTPROCESSOR_CAPS_2
{
  /* 0x0000 */ unsigned long dwLevel;
  /* 0x0004 */ unsigned long dwNupOptions;
  /* 0x0008 */ unsigned long dwPageOrderFlags;
  /* 0x000c */ unsigned long dwNumberOfCopies;
  /* 0x0010 */ unsigned long dwDuplexHandlingCaps;
  /* 0x0014 */ unsigned long dwNupDirectionCaps;
  /* 0x0018 */ unsigned long dwNupBorderCaps;
  /* 0x001c */ unsigned long dwBookletHandlingCaps;
  /* 0x0020 */ unsigned long dwScalingCaps;
} PRINTPROCESSOR_CAPS_2, *PPRINTPROCESSOR_CAPS_2; /* size: 0x0024 */

enum IMPORT_OBJECT_NAME_TYPE
{
  IMPORT_OBJECT_ORDINAL = 0,
  IMPORT_OBJECT_NAME = 1,
  IMPORT_OBJECT_NAME_NO_PREFIX = 2,
  IMPORT_OBJECT_NAME_UNDECORATE = 3,
};

typedef struct _ALPC_PORT_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackObject;
  /* 0x0008 */ void* Context;
} ALPC_PORT_CALLBACK_INFORMATION, *PALPC_PORT_CALLBACK_INFORMATION; /* size: 0x0010 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>
{
  /* 0x0000 */ long m_status;
}; /* size: 0x0004 */

enum XLAT_SIDE
{
  XLAT_SERVER = 1,
  XLAT_CLIENT = 2,
};

struct tagSTATPROPSETSTG
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ struct _GUID clsid;
  /* 0x0020 */ unsigned long grfFlags;
  /* 0x0024 */ struct _FILETIME mtime;
  /* 0x002c */ struct _FILETIME ctime;
  /* 0x0034 */ struct _FILETIME atime;
  /* 0x003c */ unsigned long dwOSVersion;
}; /* size: 0x0040 */

typedef struct _PRINTPROCESSOR_INFO_1A
{
  /* 0x0000 */ char* pName;
} PRINTPROCESSOR_INFO_1A, *PPRINTPROCESSOR_INFO_1A; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_12
{
  value = 0,
} TAG_UNNAMED_12, *PTAG_UNNAMED_12;

typedef struct _PUBLICKEYSTRUC
{
  /* 0x0000 */ unsigned char bType;
  /* 0x0001 */ unsigned char bVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned int aiKeyAlg;
} PUBLICKEYSTRUC, *PPUBLICKEYSTRUC; /* size: 0x0008 */

typedef enum _DEVICE_POWER_STATE
{
  PowerDeviceUnspecified = 0,
  PowerDeviceD0 = 1,
  PowerDeviceD1 = 2,
  PowerDeviceD2 = 3,
  PowerDeviceD3 = 4,
  PowerDeviceMaximum = 5,
} DEVICE_POWER_STATE, *PDEVICE_POWER_STATE;

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long NameFlags;
  /* 0x000c */ long Padding_117;
  /* 0x0010 */ __int64 FileId;
  /* 0x0018 */ unsigned long Reserved1;
  /* 0x001c */ unsigned long Reserved2;
  /* 0x0020 */ __int64 Reserved3;
  /* 0x0028 */ wchar_t FileName[1];
  /* 0x002a */ char __PADDING__[6];
} TXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY, *PTXFS_LIST_TRANSACTION_LOCKED_FILES_ENTRY; /* size: 0x0030 */

typedef struct _BCRYPT_OID_LIST
{
  /* 0x0000 */ unsigned long dwOIDCount;
  /* 0x0004 */ long Padding_118;
  /* 0x0008 */ struct _BCRYPT_OID* pOIDs;
} BCRYPT_OID_LIST, *PBCRYPT_OID_LIST; /* size: 0x0010 */

typedef struct _RTL_DEBUG_INFORMATION
{
  /* 0x0000 */ void* SectionHandleClient;
  /* 0x0008 */ void* ViewBaseClient;
  /* 0x0010 */ void* ViewBaseTarget;
  /* 0x0018 */ unsigned __int64 ViewBaseDelta;
  /* 0x0020 */ void* EventPairClient;
  /* 0x0028 */ void* EventPairTarget;
  /* 0x0030 */ void* TargetProcessId;
  /* 0x0038 */ void* TargetThreadHandle;
  /* 0x0040 */ unsigned long Flags;
  /* 0x0044 */ long Padding_119;
  /* 0x0048 */ unsigned __int64 OffsetFree;
  /* 0x0050 */ unsigned __int64 CommitSize;
  /* 0x0058 */ unsigned __int64 ViewSize;
  union
  {
    /* 0x0060 */ struct _RTL_PROCESS_MODULES* Modules;
    /* 0x0060 */ struct _RTL_PROCESS_MODULE_INFORMATION_EX* ModulesEx;
  }; /* size: 0x0008 */
  /* 0x0068 */ struct _RTL_PROCESS_BACKTRACES* BackTraces;
  /* 0x0070 */ struct _RTL_PROCESS_HEAPS* Heaps;
  /* 0x0078 */ struct _RTL_PROCESS_LOCKS* Locks;
  /* 0x0080 */ void* SpecificHeap;
  /* 0x0088 */ void* TargetProcessHandle;
  /* 0x0090 */ struct _RTL_PROCESS_VERIFIER_OPTIONS* VerifierOptions;
  /* 0x0098 */ void* ProcessHeap;
  /* 0x00a0 */ void* CriticalSectionHandle;
  /* 0x00a8 */ void* CriticalSectionOwnerThread;
  /* 0x00b0 */ void* Reserved[4];
} RTL_DEBUG_INFORMATION, *PRTL_DEBUG_INFORMATION; /* size: 0x00d0 */

typedef struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_120;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ unsigned __int64 hCryptProv;
  /* 0x0030 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0048 */ struct _CERT_ID RecipientId;
} CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO, *PCMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO; /* size: 0x0070 */

typedef enum _TRANSACTIONMANAGER_INFORMATION_CLASS
{
  TransactionManagerBasicInformation = 0,
  TransactionManagerLogInformation = 1,
  TransactionManagerLogPathInformation = 2,
  TransactionManagerRecoveryInformation = 4,
  TransactionManagerOnlineProbeInformation = 3,
  TransactionManagerOldestTransactionInformation = 5,
} TRANSACTIONMANAGER_INFORMATION_CLASS, *PTRANSACTIONMANAGER_INFORMATION_CLASS;

typedef struct _JOBOBJECT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} JOBOBJECT_ASSOCIATE_COMPLETION_PORT, *PJOBOBJECT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

struct tagEMRPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
}; /* size: 0x0024 */

struct tagMONITORINFOEXW
{
  /* 0x0000 */ long Padding_121[10];
  /* 0x0028 */ wchar_t szDevice[32];
}; /* size: 0x0068 */

typedef enum _STORAGE_IDENTIFIER_TYPE
{
  StorageIdTypeVendorSpecific = 0,
  StorageIdTypeVendorId = 1,
  StorageIdTypeEUI64 = 2,
  StorageIdTypeFCPHName = 3,
  StorageIdTypePortRelative = 4,
  StorageIdTypeTargetPortGroup = 5,
  StorageIdTypeLogicalUnitGroup = 6,
  StorageIdTypeMD5LogicalUnitIdentifier = 7,
  StorageIdTypeScsiNameString = 8,
} STORAGE_IDENTIFIER_TYPE, *PSTORAGE_IDENTIFIER_TYPE;

typedef struct _PROCESSOR_POWER_POLICY_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned long DemoteLimit;
  /* 0x0008 */ unsigned long PromoteLimit;
  /* 0x000c */ unsigned char DemotePercent;
  /* 0x000d */ unsigned char PromotePercent;
  /* 0x000e */ unsigned char Spare[2];
  struct /* bitfield */
  {
    /* 0x0010 */ unsigned long AllowDemotion : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned long AllowPromotion : 1; /* bit position: 1 */
    /* 0x0010 */ unsigned long Reserved : 30; /* bit position: 2 */
  }; /* bitfield */
} PROCESSOR_POWER_POLICY_INFO, *PPROCESSOR_POWER_POLICY_INFO; /* size: 0x0014 */

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE
{
  ToleranceLow = 1,
  ToleranceMedium = 2,
  ToleranceHigh = 3,
} JOBOBJECT_RATE_CONTROL_TOLERANCE, *PJOBOBJECT_RATE_CONTROL_TOLERANCE;

typedef enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL
{
  ToleranceIntervalShort = 1,
  ToleranceIntervalMedium = 2,
  ToleranceIntervalLong = 3,
} JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL, *PJOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL;

typedef struct _JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0008 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0010 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0018 */ unsigned __int64 JobMemoryLimit;
  /* 0x0020 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  /* 0x0024 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceInterval;
  /* 0x0028 */ unsigned long LimitFlags;
  /* 0x002c */ long __PADDING__[1];
} JOBOBJECT_NOTIFICATION_LIMIT_INFORMATION, *PJOBOBJECT_NOTIFICATION_LIMIT_INFORMATION; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_13
{
  LdrpNoDevice = 0,
  LdrpWebDAV = 1,
  LdrpRemote = 2,
  LdrpAnyDevice = -1,
  LdrpAnyDevice2bit = 3,
} TAG_UNNAMED_13, *PTAG_UNNAMED_13;

typedef struct _SCHANNEL_ALG
{
  /* 0x0000 */ unsigned long dwUse;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned long cBits;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwReserved;
} SCHANNEL_ALG, *PSCHANNEL_ALG; /* size: 0x0014 */

class Windows::AutoOperatorAmpersandConstHelper<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;

typedef enum _NT_PRODUCT_TYPE
{
  NtProductWinNt = 1,
  NtProductLanManNt = 2,
  NtProductServer = 3,
} NT_PRODUCT_TYPE, *PNT_PRODUCT_TYPE;

struct tagMCI_OVLY_WINDOW_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int nCmdShow;
  /* 0x0014 */ const char* lpstrText;
}; /* size: 0x001c */

enum EPrintXPSJobProgress
{
  kAddingDocumentSequence = 0,
  kDocumentSequenceAdded = 1,
  kAddingFixedDocument = 2,
  kFixedDocumentAdded = 3,
  kAddingFixedPage = 4,
  kFixedPageAdded = 5,
  kResourceAdded = 6,
  kFontAdded = 7,
  kImageAdded = 8,
  kXpsDocumentCommitted = 9,
};

struct AsyncIPipeByte
{
}; /* size: 0x0008 */

typedef enum _COPYFILE2_COPY_PHASE
{
  COPYFILE2_PHASE_NONE = 0,
  COPYFILE2_PHASE_PREPARE_SOURCE = 1,
  COPYFILE2_PHASE_PREPARE_DEST = 2,
  COPYFILE2_PHASE_READ_SOURCE = 3,
  COPYFILE2_PHASE_WRITE_DESTINATION = 4,
  COPYFILE2_PHASE_SERVER_COPY = 5,
  COPYFILE2_PHASE_NAMEGRAFT_COPY = 6,
  COPYFILE2_PHASE_MAX = 7,
} COPYFILE2_COPY_PHASE, *PCOPYFILE2_COPY_PHASE;

struct IPropertyPage2
{
}; /* size: 0x0008 */

struct IEnumSTATDATA
{
}; /* size: 0x0008 */

typedef enum __MIDL_IBindStatusCallback_0003
{
  BINDF_ASYNCHRONOUS = 1,
  BINDF_ASYNCSTORAGE = 2,
  BINDF_NOPROGRESSIVERENDERING = 4,
  BINDF_OFFLINEOPERATION = 8,
  BINDF_GETNEWESTVERSION = 16,
  BINDF_NOWRITECACHE = 32,
  BINDF_NEEDFILE = 64,
  BINDF_PULLDATA = 128,
  BINDF_IGNORESECURITYPROBLEM = 256,
  BINDF_RESYNCHRONIZE = 512,
  BINDF_HYPERLINK = 1024,
  BINDF_NO_UI = 2048,
  BINDF_SILENTOPERATION = 4096,
  BINDF_PRAGMA_NO_CACHE = 8192,
  BINDF_GETCLASSOBJECT = 16384,
  BINDF_RESERVED_1 = 0xffff8000,
  BINDF_FREE_THREADED = 0x10000,
  BINDF_DIRECT_READ = 0x20000,
  BINDF_FORMS_SUBMIT = 0x40000,
  BINDF_GETFROMCACHE_IF_NET_FAIL = 0x80000,
  BINDF_FROMURLMON = 0x100000,
  BINDF_FWD_BACK = 0x200000,
  BINDF_PREFERDEFAULTHANDLER = 0x400000,
  BINDF_ENFORCERESTRICTED = 0x800000,
  BINDF_RESERVED_2 = -2147483648,
  BINDF_RESERVED_3 = 0x1000000,
  BINDF_RESERVED_4 = 0x2000000,
  BINDF_RESERVED_5 = 0x4000000,
  BINDF_RESERVED_6 = 0x8000000,
  BINDF_RESERVED_7 = 0x40000000,
  BINDF_RESERVED_8 = 0x20000000,
} _MIDL_IBindStatusCallback_0003, *P_MIDL_IBindStatusCallback_0003;

typedef struct _TOKEN_DEVICE_CLAIMS
{
  /* 0x0000 */ void* DeviceClaims;
} TOKEN_DEVICE_CLAIMS, *PTOKEN_DEVICE_CLAIMS; /* size: 0x0008 */

typedef enum _MEDIA_TYPE
{
  Unknown = 0,
  F5_1Pt2_512 = 1,
  F3_1Pt44_512 = 2,
  F3_2Pt88_512 = 3,
  F3_20Pt8_512 = 4,
  F3_720_512 = 5,
  F5_360_512 = 6,
  F5_320_512 = 7,
  F5_320_1024 = 8,
  F5_180_512 = 9,
  F5_160_512 = 10,
  RemovableMedia = 11,
  FixedMedia = 12,
  F3_120M_512 = 13,
  F3_640_512 = 14,
  F5_640_512 = 15,
  F5_720_512 = 16,
  F3_1Pt2_512 = 17,
  F3_1Pt23_1024 = 18,
  F5_1Pt23_1024 = 19,
  F3_128Mb_512 = 20,
  F3_230Mb_512 = 21,
  F8_256_128 = 22,
  F3_200Mb_512 = 23,
  F3_240M_512 = 24,
  F3_32M_512 = 25,
} MEDIA_TYPE, *PMEDIA_TYPE;

typedef struct _CERT_POLICY_ID
{
  /* 0x0000 */ unsigned long cCertPolicyElementId;
  /* 0x0004 */ long Padding_122;
  /* 0x0008 */ char** rgpszCertPolicyElementId;
} CERT_POLICY_ID, *PCERT_POLICY_ID; /* size: 0x0010 */

struct IPropertyBag
{
}; /* size: 0x0008 */

typedef struct _TEB_ACTIVE_FRAME
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_123;
  /* 0x0008 */ struct _TEB_ACTIVE_FRAME* Previous;
  /* 0x0010 */ const struct _TEB_ACTIVE_FRAME_CONTEXT* Context;
} TEB_ACTIVE_FRAME, *PTEB_ACTIVE_FRAME; /* size: 0x0018 */

typedef struct _TEB_ACTIVE_FRAME_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME BasicFrame;
  /* 0x0018 */ void* ExtensionIdentifier;
} TEB_ACTIVE_FRAME_EX, *PTEB_ACTIVE_FRAME_EX; /* size: 0x0020 */

typedef struct _CERT_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ long Padding_124;
  /* 0x0008 */ unsigned char* pbCertEncoded;
  /* 0x0010 */ unsigned long cbCertEncoded;
  /* 0x0014 */ long Padding_125;
  /* 0x0018 */ struct _CERT_INFO* pCertInfo;
  /* 0x0020 */ void* hCertStore;
} CERT_CONTEXT, *PCERT_CONTEXT; /* size: 0x0028 */

typedef enum _RTL_GENERIC_COMPARE_RESULTS
{
  GenericLessThan = 0,
  GenericGreaterThan = 1,
  GenericEqual = 2,
} RTL_GENERIC_COMPARE_RESULTS, *PRTL_GENERIC_COMPARE_RESULTS;

struct tagMOUSEMOVEPOINT
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned long time;
  /* 0x000c */ long Padding_126;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

enum tagCOWAIT_FLAGS
{
  COWAIT_DEFAULT = 0,
  COWAIT_WAITALL = 1,
  COWAIT_ALERTABLE = 2,
  COWAIT_INPUTAVAILABLE = 4,
  COWAIT_DISPATCH_CALLS = 8,
  COWAIT_DISPATCH_WINDOW_MESSAGES = 16,
};

typedef struct _CMSG_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  /* 0x0004 */ long Padding_127;
  union
  {
    /* 0x0008 */ struct _CMSG_KEY_TRANS_RECIPIENT_ENCODE_INFO* pKeyTrans;
    /* 0x0008 */ struct _CMSG_KEY_AGREE_RECIPIENT_ENCODE_INFO* pKeyAgree;
    /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO* pMailList;
  }; /* size: 0x0008 */
} CMSG_RECIPIENT_ENCODE_INFO, *PCMSG_RECIPIENT_ENCODE_INFO; /* size: 0x0010 */

typedef struct _KEY_TRUST_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long TrustedKey : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
} KEY_TRUST_INFORMATION, *PKEY_TRUST_INFORMATION; /* size: 0x0004 */

struct ICreateTypeInfo2
{
}; /* size: 0x0008 */

typedef enum _STORAGE_MEDIA_TYPE
{
  DDS_4mm = 32,
  MiniQic = 33,
  Travan = 34,
  QIC = 35,
  MP_8mm = 36,
  AME_8mm = 37,
  AIT1_8mm = 38,
  DLT = 39,
  NCTP = 40,
  IBM_3480 = 41,
  IBM_3490E = 42,
  IBM_Magstar_3590 = 43,
  IBM_Magstar_MP = 44,
  STK_DATA_D3 = 45,
  SONY_DTF = 46,
  DV_6mm = 47,
  DMI = 48,
  SONY_D2 = 49,
  CLEANER_CARTRIDGE = 50,
  CD_ROM = 51,
  CD_R = 52,
  CD_RW = 53,
  DVD_ROM = 54,
  DVD_R = 55,
  DVD_RW = 56,
  MO_3_RW = 57,
  MO_5_WO = 58,
  MO_5_RW = 59,
  MO_5_LIMDOW = 60,
  PC_5_WO = 61,
  PC_5_RW = 62,
  PD_5_RW = 63,
  ABL_5_WO = 64,
  PINNACLE_APEX_5_RW = 65,
  SONY_12_WO = 66,
  PHILIPS_12_WO = 67,
  HITACHI_12_WO = 68,
  CYGNET_12_WO = 69,
  KODAK_14_WO = 70,
  MO_NFR_525 = 71,
  NIKON_12_RW = 72,
  IOMEGA_ZIP = 73,
  IOMEGA_JAZ = 74,
  SYQUEST_EZ135 = 75,
  SYQUEST_EZFLYER = 76,
  SYQUEST_SYJET = 77,
  AVATAR_F2 = 78,
  MP2_8mm = 79,
  DST_S = 80,
  DST_M = 81,
  DST_L = 82,
  VXATape_1 = 83,
  VXATape_2 = 84,
  STK_9840 = 85,
  LTO_Ultrium = 86,
  LTO_Accelis = 87,
  DVD_RAM = 88,
  AIT_8mm = 89,
  ADR_1 = 90,
  ADR_2 = 91,
  STK_9940 = 92,
  SAIT = 93,
  VXATape = 94,
} STORAGE_MEDIA_TYPE, *PSTORAGE_MEDIA_TYPE;

typedef struct _FILE_PIPE_WAIT_FOR_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ unsigned char TimeoutSpecified;
  /* 0x000d */ char Padding_128;
  /* 0x000e */ wchar_t Name[1];
} FILE_PIPE_WAIT_FOR_BUFFER, *PFILE_PIPE_WAIT_FOR_BUFFER; /* size: 0x0010 */

typedef struct _RTL_PROCESS_BACKTRACE_INFORMATION
{
  /* 0x0000 */ char* SymbolicBackTrace;
  /* 0x0008 */ unsigned long TraceCount;
  /* 0x000c */ unsigned short Index;
  /* 0x000e */ unsigned short Depth;
  /* 0x0010 */ void* BackTrace[32];
} RTL_PROCESS_BACKTRACE_INFORMATION, *PRTL_PROCESS_BACKTRACE_INFORMATION; /* size: 0x0110 */

typedef struct _RTL_PROCESS_BACKTRACES
{
  /* 0x0000 */ unsigned __int64 CommittedMemory;
  /* 0x0008 */ unsigned __int64 ReservedMemory;
  /* 0x0010 */ unsigned long NumberOfBackTraceLookups;
  /* 0x0014 */ unsigned long NumberOfBackTraces;
  /* 0x0018 */ struct _RTL_PROCESS_BACKTRACE_INFORMATION BackTraces[1];
} RTL_PROCESS_BACKTRACES, *PRTL_PROCESS_BACKTRACES; /* size: 0x0128 */

struct tagMCI_WAVE_OPEN_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const char* lpstrDeviceType;
  /* 0x0014 */ const char* lpstrElementName;
  /* 0x001c */ const char* lpstrAlias;
  /* 0x0024 */ unsigned long dwBufferSeconds;
}; /* size: 0x0028 */

typedef enum _AUDIT_EVENT_TYPE
{
  AuditEventObjectAccess = 0,
  AuditEventDirectoryServiceAccess = 1,
} AUDIT_EVENT_TYPE, *PAUDIT_EVENT_TYPE;

typedef struct _SHQUERYRBINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_129;
  /* 0x0008 */ __int64 i64Size;
  /* 0x0010 */ __int64 i64NumItems;
} SHQUERYRBINFO, *PSHQUERYRBINFO; /* size: 0x0018 */

struct IDropSource
{
}; /* size: 0x0008 */

struct Windows::ErrorHandling::StatusTypeHRESULT
{
}; /* size: 0x0001 */

enum tagDOMNodeType
{
  NODE_INVALID = 0,
  NODE_ELEMENT = 1,
  NODE_ATTRIBUTE = 2,
  NODE_TEXT = 3,
  NODE_CDATA_SECTION = 4,
  NODE_ENTITY_REFERENCE = 5,
  NODE_ENTITY = 6,
  NODE_PROCESSING_INSTRUCTION = 7,
  NODE_COMMENT = 8,
  NODE_DOCUMENT = 9,
  NODE_DOCUMENT_TYPE = 10,
  NODE_DOCUMENT_FRAGMENT = 11,
  NODE_NOTATION = 12,
};

enum EPrintXPSJobOperation
{
  kJobProduction = 1,
  kJobConsumption = 2,
};

struct tagKBDLLHOOKSTRUCT
{
  /* 0x0000 */ unsigned long vkCode;
  /* 0x0004 */ unsigned long scanCode;
  /* 0x0008 */ unsigned long flags;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0018 */

typedef enum _FUNCTION_TABLE_TYPE
{
  RF_SORTED = 0,
  RF_UNSORTED = 1,
  RF_CALLBACK = 2,
  RF_KERNEL_DYNAMIC = 3,
} FUNCTION_TABLE_TYPE, *PFUNCTION_TABLE_TYPE;

typedef struct _DYNAMIC_FUNCTION_TABLE
{
  /* 0x0000 */ struct _LIST_ENTRY ListEntry;
  /* 0x0010 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable;
  /* 0x0018 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0020 */ unsigned __int64 MinimumAddress;
  /* 0x0028 */ unsigned __int64 MaximumAddress;
  /* 0x0030 */ unsigned __int64 BaseAddress;
  /* 0x0038 */ void* Callback /* function */;
  /* 0x0040 */ void* Context;
  /* 0x0048 */ wchar_t* OutOfProcessCallbackDll;
  /* 0x0050 */ enum _FUNCTION_TABLE_TYPE Type;
  /* 0x0054 */ unsigned long EntryCount;
} DYNAMIC_FUNCTION_TABLE, *PDYNAMIC_FUNCTION_TABLE; /* size: 0x0058 */

typedef struct _ACTIVATION_CONTEXT_BASIC_INFORMATION
{
  union
  {
    /* 0x0000 */ struct _ACTIVATION_CONTEXT* ActivationContext;
    /* 0x0000 */ void* hActCtx;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0008 */ unsigned long Flags;
    /* 0x0008 */ unsigned long dwFlags;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_BASIC_INFORMATION, *PACTIVATION_CONTEXT_BASIC_INFORMATION; /* size: 0x0010 */

typedef enum _TRANSACTION_INFORMATION_CLASS
{
  TransactionBasicInformation = 0,
  TransactionPropertiesInformation = 1,
  TransactionEnlistmentInformation = 2,
  TransactionSuperiorEnlistmentInformation = 3,
  TransactionBindInformation = 4,
  TransactionDTCPrivateInformation = 5,
} TRANSACTION_INFORMATION_CLASS, *PTRANSACTION_INFORMATION_CLASS;

typedef struct _QUERY_FILE_LAYOUT_OUTPUT
{
  /* 0x0000 */ unsigned long FileEntryCount;
  /* 0x0004 */ unsigned long FirstFileOffset;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
} QUERY_FILE_LAYOUT_OUTPUT, *PQUERY_FILE_LAYOUT_OUTPUT; /* size: 0x0010 */

typedef struct _TRANSACTION_BIND_INFORMATION
{
  /* 0x0000 */ void* TmHandle;
} TRANSACTION_BIND_INFORMATION, *PTRANSACTION_BIND_INFORMATION; /* size: 0x0008 */

typedef enum _PLUGPLAY_EVENT_CATEGORY
{
  HardwareProfileChangeEvent = 0,
  TargetDeviceChangeEvent = 1,
  DeviceClassChangeEvent = 2,
  CustomDeviceEvent = 3,
  DeviceInstallEvent = 4,
  DeviceArrivalEvent = 5,
  VetoEvent = 6,
  BlockedDriverEvent = 7,
  InvalidIDEvent = 8,
  DevicePropertyChangeEvent = 9,
  DeviceInstanceRemovalEvent = 10,
  DeviceInstanceStartedEvent = 11,
  MaxPlugEventCategory = 12,
} PLUGPLAY_EVENT_CATEGORY, *PPLUGPLAY_EVENT_CATEGORY;

struct tagEMREXTESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbEscData;
  /* 0x0010 */ unsigned char EscData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct IThunkManager
{
}; /* size: 0x0008 */

typedef enum _PARTITION_STYLE
{
  PARTITION_STYLE_MBR = 0,
  PARTITION_STYLE_GPT = 1,
  PARTITION_STYLE_RAW = 2,
} PARTITION_STYLE, *PPARTITION_STYLE;

struct IClipboardBrokerInternal
{
}; /* size: 0x0008 */

typedef struct _API_SET_NAMESPACE_ENTRY
{
  /* 0x0000 */ unsigned long NameOffset;
  /* 0x0004 */ unsigned long NameLength;
  /* 0x0008 */ unsigned long DataOffset;
} API_SET_NAMESPACE_ENTRY, *PAPI_SET_NAMESPACE_ENTRY; /* size: 0x000c */

typedef struct _PRINTER_DEFAULTSA
{
  /* 0x0000 */ char* pDatatype;
  /* 0x0008 */ struct _devicemodeA* pDevMode;
  /* 0x0010 */ unsigned long DesiredAccess;
  /* 0x0014 */ long __PADDING__[1];
} PRINTER_DEFAULTSA, *PPRINTER_DEFAULTSA; /* size: 0x0018 */

enum tagCALLCONV
{
  CC_FASTCALL = 0,
  CC_CDECL = 1,
  CC_MSCPASCAL = 2,
  CC_PASCAL = 2,
  CC_MACPASCAL = 3,
  CC_STDCALL = 4,
  CC_FPFASTCALL = 5,
  CC_SYSCALL = 6,
  CC_MPWCDECL = 7,
  CC_MPWPASCAL = 8,
  CC_MAX = 9,
};

typedef struct _KEY_VALUE_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataOffset;
  /* 0x000c */ unsigned long DataLength;
  /* 0x0010 */ unsigned long NameLength;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} KEY_VALUE_FULL_INFORMATION, *PKEY_VALUE_FULL_INFORMATION; /* size: 0x0018 */

typedef struct _LUTF8_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LUTF8_STRING, *PLUTF8_STRING; /* size: 0x0018 */

class Windows::AutoPODBase<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >
{
  /* 0x0000 */ struct _LUTF8_STRING m_Data;
}; /* size: 0x0018 */

enum tagSTATFLAG
{
  STATFLAG_DEFAULT = 0,
  STATFLAG_NONAME = 1,
  STATFLAG_NOOPEN = 2,
};

struct ClassMonikerData
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long cbExtra;
}; /* size: 0x0014 */

typedef enum _STORAGE_BUS_TYPE
{
  BusTypeUnknown = 0,
  BusTypeScsi = 1,
  BusTypeAtapi = 2,
  BusTypeAta = 3,
  BusType1394 = 4,
  BusTypeSsa = 5,
  BusTypeFibre = 6,
  BusTypeUsb = 7,
  BusTypeRAID = 8,
  BusTypeiScsi = 9,
  BusTypeSas = 10,
  BusTypeSata = 11,
  BusTypeSd = 12,
  BusTypeMmc = 13,
  BusTypeVirtual = 14,
  BusTypeFileBackedVirtual = 15,
  BusTypeSpaces = 16,
  BusTypeMax = 17,
  BusTypeMaxReserved = 127,
} STORAGE_BUS_TYPE, *PSTORAGE_BUS_TYPE;

struct tagMONERRSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned int wLastError;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_130;
  /* 0x0010 */ void* hTask;
}; /* size: 0x0018 */

typedef struct _CERT_PRIVATE_KEY_VALIDITY
{
  /* 0x0000 */ struct _FILETIME NotBefore;
  /* 0x0008 */ struct _FILETIME NotAfter;
} CERT_PRIVATE_KEY_VALIDITY, *PCERT_PRIVATE_KEY_VALIDITY; /* size: 0x0010 */

typedef struct __midl_frag79_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag79_t, *P_midl_frag79_t; /* size: 0x0048 */

enum tagRpcCallType
{
  rctInvalid = 0,
  rctNormal = 1,
  rctTraining = 2,
  rctGuaranteed = 3,
};

struct IProvideMultipleClassInfo
{
}; /* size: 0x0008 */

typedef struct _cpinfo
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ char __PADDING__[2];
} cpinfo, *Pcpinfo; /* size: 0x0014 */

struct tagSPSChain
{
  /* 0x0000 */ struct tagSPSChain* pNext;
  /* 0x0008 */ struct tagSPSChain* pPrev;
}; /* size: 0x0010 */

struct tagSPSCache
{
  /* 0x0000 */ struct tagSPSChain clientPSChain;
  /* 0x0010 */ struct tagSPSChain serverPSChain;
}; /* size: 0x0020 */

struct tagPageEntry
{
  /* 0x0000 */ struct tagPageEntry* pNext;
  /* 0x0008 */ unsigned long dwFlag;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class CInternalPageAllocator
{
  /* 0x0000 */ long _cPages;
  /* 0x0004 */ long Padding_131;
  /* 0x0008 */ struct tagPageEntry** _pPageListStart;
  /* 0x0010 */ struct tagPageEntry** _pPageListEnd;
  /* 0x0018 */ unsigned long _dwFlags;
  /* 0x001c */ long Padding_132;
  /* 0x0020 */ struct tagPageEntry _ListHead;
  /* 0x0030 */ long _cEntries;
  /* 0x0034 */ long Padding_133;
  /* 0x0038 */ unsigned __int64 _cbPerEntry;
  /* 0x0040 */ unsigned short _cEntriesPerPage;
  /* 0x0042 */ char Padding_134[6];
  /* 0x0048 */ class COleStaticMutexSem* _pLock;
}; /* size: 0x0050 */

class CPageAllocator
{
  /* 0x0000 */ class CInternalPageAllocator _pgalloc;
  /* 0x0050 */ void* _hHeap;
  /* 0x0058 */ unsigned __int64 _cbPerEntry;
  /* 0x0060 */ long _lNumEntries;
}; /* size: 0x0068 */

class CPolicySet
{
  /* 0x0000 */ long Padding_135[2];
  /* 0x0008 */ struct SHashChain _chain;
  /* 0x0018 */ unsigned long _dwFlags;
  /* 0x001c */ unsigned long _cRefs;
  /* 0x0020 */ unsigned long _cPolicies;
  /* 0x0024 */ unsigned long _dwAptID;
  /* 0x0028 */ class CObjectContext* _pClientCtx;
  /* 0x0030 */ class CObjectContext* _pServerCtx;
  /* 0x0038 */ struct tagPolicyEntry* _pFirstEntry;
  /* 0x0040 */ struct tagPolicyEntry* _pLastEntry;
  /* 0x0048 */ struct tagSPSCache _PSCache;
  union
  {
    /* 0x0000 */ class CPageAllocator s_PSallocator;
    /* 0x0000 */ class CPageAllocator s_PEallocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cObjects;
  }; /* size: 0x0068 */
}; /* size: 0x0068 */

typedef enum _IRQ_DEVICE_POLICY
{
  IrqPolicyMachineDefault = 0,
  IrqPolicyAllCloseProcessors = 1,
  IrqPolicyOneCloseProcessor = 2,
  IrqPolicyAllProcessorsInMachine = 3,
  IrqPolicySpecifiedProcessors = 4,
  IrqPolicySpreadMessagesAcrossAllProcessors = 5,
} IRQ_DEVICE_POLICY, *PIRQ_DEVICE_POLICY;

struct tagFONTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ long Padding_136;
  /* 0x0008 */ wchar_t* lpstrName;
  /* 0x0010 */ union tagCY cySize;
  /* 0x0018 */ short sWeight;
  /* 0x001a */ short sCharset;
  /* 0x001c */ int fItalic;
  /* 0x0020 */ int fUnderline;
  /* 0x0024 */ int fStrikethrough;
}; /* size: 0x0028 */

struct IComCatalogSettings
{
}; /* size: 0x0008 */

enum tagACTIVATION_FLAGS
{
  ACTVFLAGS_NONE = 0,
  ACTVFLAGS_DISABLE_AAA = 2,
  ACTVFLAGS_ACTIVATE_32_BIT_SERVER = 4,
  ACTVFLAGS_ACTIVATE_64_BIT_SERVER = 8,
  ACTVFLAGS_SERVERSIDE_ACTIVATION = 16,
  ACTVFLAGS_NO_FAILURE_LOG = 32,
  ACTVFLAGS_ENABLE_CLOAKING = 64,
  ACTVFLAGS_REG_CATALOG_ONLY = 256,
  ACTVFLAGS_SXS_CATALOG_ONLY = 512,
  ACTVFLAGS_WINRT_LOCAL_SERVER = 1024,
  ACTVFLAGS_WINRT_PER_USER_OK = 2048,
  ACTVFLAGS_ACTIVATE_PSCLSID_FROM_PACKAGE = 4096,
  ACTVFLAGS_APPCONTAINER = 8192,
  ACTVFLAGS_IS_SXS_CLASS = 16384,
  ACTVFLAGS_BACKGROUND_MIXED_ACTIVATION = 0xffff8000,
  ACTVFLAGS_BACKGROUND_PURE_ACTIVATION = 0x10000,
  ACTVFLAGS_BACKGROUND_SYSTEM_ACTIVATION = 0x20000,
  ACTVFLAGS_DESIGNMODE_ACTIVATION = 0x40000,
  ACTVFLAGS_ACTIVATE_AS_IU = 0x80000,
};

enum MAPPED_STREAM_OPTS
{
  MAPPED_STREAM_CREATE = 0,
  MAPPED_STREAM_QI = 1,
};

class CPropertySetStorage
{
  /* 0x0000 */ long Padding_137[2];
  /* 0x0008 */ struct IStorage* _pstg;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0018 */ unsigned long _ulSig;
  /* 0x001c */ int _fContainingStgIsRefed : 1; /* bit position: 0 */
  /* 0x0020 */ enum MAPPED_STREAM_OPTS _MSOpts;
  /* 0x0024 */ long _cReferences;
}; /* size: 0x0028 */

typedef struct _FILE_SFIO_RESERVE_INFORMATION
{
  /* 0x0000 */ unsigned long RequestsPerPeriod;
  /* 0x0004 */ unsigned long Period;
  /* 0x0008 */ unsigned char RetryFailures;
  /* 0x0009 */ unsigned char Discardable;
  /* 0x000a */ char Padding_138[2];
  /* 0x000c */ unsigned long RequestSize;
  /* 0x0010 */ unsigned long NumOutstandingRequests;
} FILE_SFIO_RESERVE_INFORMATION, *PFILE_SFIO_RESERVE_INFORMATION; /* size: 0x0014 */

struct HCOLORSPACE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _STORAGE_POWERUP_REASON_TYPE
{
  StoragePowerupUnknown = 0,
  StoragePowerupIO = 1,
  StoragePowerupDeviceAttention = 2,
} STORAGE_POWERUP_REASON_TYPE, *PSTORAGE_POWERUP_REASON_TYPE;

struct IOSTaskCompletion
{
}; /* size: 0x0008 */

typedef struct _DRIVE_LAYOUT_INFORMATION_MBR
{
  /* 0x0000 */ unsigned long Signature;
} DRIVE_LAYOUT_INFORMATION_MBR, *PDRIVE_LAYOUT_INFORMATION_MBR; /* size: 0x0004 */

typedef struct _OCSP_BASIC_REVOKED_INFO
{
  /* 0x0000 */ struct _FILETIME RevocationDate;
  /* 0x0008 */ unsigned long dwCrlReasonCode;
} OCSP_BASIC_REVOKED_INFO, *POCSP_BASIC_REVOKED_INFO; /* size: 0x000c */

typedef struct _DEVICE_DATA_SET_SCRUB_OUTPUT
{
  /* 0x0000 */ unsigned __int64 BytesProcessed;
  /* 0x0008 */ unsigned __int64 BytesRepaired;
  /* 0x0010 */ unsigned __int64 BytesFailed;
} DEVICE_DATA_SET_SCRUB_OUTPUT, *PDEVICE_DATA_SET_SCRUB_OUTPUT; /* size: 0x0018 */

struct tagBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ long Padding_139;
  /* 0x0018 */ void* bmBits;
}; /* size: 0x0020 */

struct tagBITMAPINFOHEADER
{
  /* 0x0000 */ unsigned long biSize;
  /* 0x0004 */ long biWidth;
  /* 0x0008 */ long biHeight;
  /* 0x000c */ unsigned short biPlanes;
  /* 0x000e */ unsigned short biBitCount;
  /* 0x0010 */ unsigned long biCompression;
  /* 0x0014 */ unsigned long biSizeImage;
  /* 0x0018 */ long biXPelsPerMeter;
  /* 0x001c */ long biYPelsPerMeter;
  /* 0x0020 */ unsigned long biClrUsed;
  /* 0x0024 */ unsigned long biClrImportant;
}; /* size: 0x0028 */

struct tagDIBSECTION
{
  /* 0x0000 */ struct tagBITMAP dsBm;
  /* 0x0020 */ struct tagBITMAPINFOHEADER dsBmih;
  /* 0x0048 */ unsigned long dsBitfields[3];
  /* 0x0054 */ long Padding_140;
  /* 0x0058 */ void* dshSection;
  /* 0x0060 */ unsigned long dsOffset;
  /* 0x0064 */ long __PADDING__[1];
}; /* size: 0x0068 */

enum tagOLETLSFLAGS
{
  OLETLS_LOCALTID = 1,
  OLETLS_UUIDINITIALIZED = 2,
  OLETLS_INTHREADDETACH = 4,
  OLETLS_CHANNELTHREADINITIALZED = 8,
  OLETLS_WOWTHREAD = 16,
  OLETLS_THREADUNINITIALIZING = 32,
  OLETLS_DISABLE_OLE1DDE = 64,
  OLETLS_APARTMENTTHREADED = 128,
  OLETLS_MULTITHREADED = 256,
  OLETLS_IMPERSONATING = 512,
  OLETLS_DISABLE_EVENTLOGGER = 1024,
  OLETLS_INNEUTRALAPT = 2048,
  OLETLS_DISPATCHTHREAD = 4096,
  OLETLS_HOSTTHREAD = 8192,
  OLETLS_ALLOWCOINIT = 16384,
  OLETLS_PENDINGUNINIT = 0xffff8000,
  OLETLS_FIRSTMTAINIT = 0x10000,
  OLETLS_FIRSTNTAINIT = 0x20000,
  OLETLS_APTINITIALIZING = 0x40000,
  OLETLS_UIMSGSINMODALLOOP = 0x80000,
  OLETLS_MARSHALING_ERROR_OBJECT = 0x100000,
  OLETLS_WINRT_INITIALIZE = 0x200000,
  OLETLS_APPLICATION_STA = 0x400000,
  OLETLS_IN_SHUTDOWN_CALLBACKS = 0x800000,
  OLETLS_POINTER_INPUT_BLOCKED = 0x1000000,
};

class Microsoft::WRL::ComPtr<IGlobalInterfaceTable>
{
  /* 0x0000 */ struct IGlobalInterfaceTable* ptr_;
}; /* size: 0x0008 */

class Windows::Internal::Details::Git
{
  /* 0x0000 */ unsigned long _cAcquired;
  /* 0x0004 */ long Padding_141;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IGlobalInterfaceTable> _spGit;
}; /* size: 0x0010 */

struct NDR_ALLOC_ALL_NODES_CONTEXT;

typedef enum _ACTIVATION_CONTEXT_INFO_CLASS
{
  ActivationContextBasicInformation = 1,
  ActivationContextDetailedInformation = 2,
  AssemblyDetailedInformationInActivationContext = 3,
  FileInformationInAssemblyOfAssemblyInActivationContext = 4,
  RunlevelInformationInActivationContext = 5,
  CompatibilityInformationInActivationContext = 6,
  ActivationContextManifestResourceName = 7,
  MaxActivationContextInfoClass = 8,
  AssemblyDetailedInformationInActivationContxt = 3,
  FileInformationInAssemblyOfAssemblyInActivationContxt = 4,
} ACTIVATION_CONTEXT_INFO_CLASS, *PACTIVATION_CONTEXT_INFO_CLASS;

class CBrokeredClipDataObject::SetData::__l24::<lambda_DCEEBA36D17BE0C6>;

typedef struct _CMSG_CTRL_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_142;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ unsigned long dwRecipientIndex;
} CMSG_CTRL_DECRYPT_PARA, *PCMSG_CTRL_DECRYPT_PARA; /* size: 0x0018 */

typedef enum __MIDL_IBindStatusCallback_0005
{
  BINDINFO_OPTIONS_WININETFLAG = 0x10000,
  BINDINFO_OPTIONS_ENABLE_UTF8 = 0x20000,
  BINDINFO_OPTIONS_DISABLE_UTF8 = 0x40000,
  BINDINFO_OPTIONS_USE_IE_ENCODING = 0x80000,
  BINDINFO_OPTIONS_BINDTOOBJECT = 0x100000,
  BINDINFO_OPTIONS_SECURITYOPTOUT = 0x200000,
  BINDINFO_OPTIONS_IGNOREMIMETEXTPLAIN = 0x400000,
  BINDINFO_OPTIONS_USEBINDSTRINGCREDS = 0x800000,
  BINDINFO_OPTIONS_IGNOREHTTPHTTPSREDIRECTS = 0x1000000,
  BINDINFO_OPTIONS_IGNORE_SSLERRORS_ONCE = 0x2000000,
  BINDINFO_WPC_DOWNLOADBLOCKED = 0x8000000,
  BINDINFO_WPC_LOGGING_ENABLED = 0x10000000,
  BINDINFO_OPTIONS_ALLOWCONNECTDATA = 0x20000000,
  BINDINFO_OPTIONS_DISABLEAUTOREDIRECTS = 0x40000000,
  BINDINFO_OPTIONS_SHDOCVW_NAVIGATE = -2147483648,
} _MIDL_IBindStatusCallback_0005, *P_MIDL_IBindStatusCallback_0005;

typedef struct _IMAGEHLP_SYMBOL_SRC
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ unsigned long type;
  /* 0x0008 */ char file[260];
} IMAGEHLP_SYMBOL_SRC, *PIMAGEHLP_SYMBOL_SRC; /* size: 0x010c */

enum tagOBJFLAGS
{
  OBJFLAGS_LINK = 1,
  OBJFLAGS_DOCUMENT = 2,
  OBJFLAGS_CONVERT = 4,
  OBJFLAGS_CACHEEMPTY = 8,
};

struct tagRemFORMATETC
{
  /* 0x0000 */ unsigned long cfFormat;
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

enum ADDTOINDEX_DISPOSITION
{
  ATID_IMPLICIT = 0,
  ATID_EXPLICIT = 1,
};

typedef struct _PLUGPLAY_CONTROL_STATUS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Operation;
  /* 0x0014 */ unsigned long DeviceStatus;
  /* 0x0018 */ unsigned long DeviceProblem;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ long ProblemStatus;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_STATUS_DATA, *PPLUGPLAY_CONTROL_STATUS_DATA; /* size: 0x0028 */

typedef enum _SYSTEM_MEMORY_LIST_COMMAND
{
  MemoryCaptureAccessedBits = 0,
  MemoryCaptureAndResetAccessedBits = 1,
  MemoryEmptyWorkingSets = 2,
  MemoryFlushModifiedList = 3,
  MemoryPurgeStandbyList = 4,
  MemoryPurgeLowPriorityStandbyList = 5,
  MemoryCommandMax = 6,
} SYSTEM_MEMORY_LIST_COMMAND, *PSYSTEM_MEMORY_LIST_COMMAND;

typedef enum _PRIORITY_HINT
{
  IoPriorityHintVeryLow = 0,
  IoPriorityHintLow = 1,
  IoPriorityHintNormal = 2,
  MaximumIoPriorityHintType = 3,
} PRIORITY_HINT, *PPRIORITY_HINT;

typedef struct _FILE_IO_PRIORITY_HINT_INFO
{
  /* 0x0000 */ enum _PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFO, *PFILE_IO_PRIORITY_HINT_INFO; /* size: 0x0004 */

struct tagPDW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_143;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ void* hDevMode;
  /* 0x0018 */ void* hDevNames;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short nFromPage;
  /* 0x002e */ unsigned short nToPage;
  /* 0x0030 */ unsigned short nMinPage;
  /* 0x0032 */ unsigned short nMaxPage;
  /* 0x0034 */ unsigned short nCopies;
  /* 0x0036 */ char Padding_144[2];
  /* 0x0038 */ struct HINSTANCE__* hInstance;
  /* 0x0040 */ __int64 lCustData;
  /* 0x0048 */ void* lpfnPrintHook /* function */;
  /* 0x0050 */ void* lpfnSetupHook /* function */;
  /* 0x0058 */ const wchar_t* lpPrintTemplateName;
  /* 0x0060 */ const wchar_t* lpSetupTemplateName;
  /* 0x0068 */ void* hPrintTemplate;
  /* 0x0070 */ void* hSetupTemplate;
}; /* size: 0x0078 */

typedef enum _FSINFOCLASS
{
  FileFsVolumeInformation = 1,
  FileFsLabelInformation = 2,
  FileFsSizeInformation = 3,
  FileFsDeviceInformation = 4,
  FileFsAttributeInformation = 5,
  FileFsControlInformation = 6,
  FileFsFullSizeInformation = 7,
  FileFsObjectIdInformation = 8,
  FileFsDriverPathInformation = 9,
  FileFsVolumeFlagsInformation = 10,
  FileFsSectorSizeInformation = 11,
  FileFsDataCopyInformation = 12,
  FileFsMaximumInformation = 13,
} FSINFOCLASS, *PFSINFOCLASS;

class InstantiationInfo
{
  /* 0x0000 */ long Padding_145[8];
  /* 0x0020 */ struct tagInstantiationInfoData _instantiationInfoData;
  /* 0x0058 */ struct _GUID _pIIDs[10];
}; /* size: 0x00f8 */

typedef enum _TIMER_TYPE
{
  NotificationTimer = 0,
  SynchronizationTimer = 1,
} TIMER_TYPE, *PTIMER_TYPE;

struct tagPROPERTYIDOFFSET
{
  /* 0x0000 */ unsigned long propertyID;
  /* 0x0004 */ unsigned long dwOffset;
}; /* size: 0x0008 */

struct tagPROPERTYSECTIONHEADER
{
  /* 0x0000 */ unsigned long cbSection;
  /* 0x0004 */ unsigned long cProperties;
  /* 0x0008 */ struct tagPROPERTYIDOFFSET rgprop[1];
}; /* size: 0x0010 */

struct tagDUALSTRINGARRAY
{
  /* 0x0000 */ unsigned short wNumEntries;
  /* 0x0002 */ unsigned short wSecurityOffset;
  /* 0x0004 */ unsigned short aStringArray[1];
}; /* size: 0x0006 */

struct tagCInterfaceProxyHeader
{
  /* 0x0000 */ const struct _GUID* piid;
}; /* size: 0x0008 */

struct tagCInterfaceProxyVtbl
{
  /* 0x0000 */ struct tagCInterfaceProxyHeader header;
  /* 0x0008 */ long Padding_146[2];
  /* 0x0010 */ void** Vtbl /* zero-length array */;
}; /* size: 0x0010 */

typedef enum _WATCHDOG_HANDLER_ACTION
{
  WdActionSetTimeoutValue = 0,
  WdActionQueryTimeoutValue = 1,
  WdActionResetTimer = 2,
  WdActionStopTimer = 3,
  WdActionStartTimer = 4,
  WdActionSetTriggerAction = 5,
  WdActionQueryTriggerAction = 6,
  WdActionQueryState = 7,
  WdActionSleep = 8,
  WdActionWake = 9,
  WdActionMarkHiberPhase = 10,
} WATCHDOG_HANDLER_ACTION, *PWATCHDOG_HANDLER_ACTION;

struct ASTAIncomingCallData
{
  /* 0x0000 */ unsigned __int64 uCallNumber;
  struct /* bitfield */
  {
    /* 0x0008 */ BOOL bQueuedInCurrentKernelWait : 1; /* bit position: 0 */
    /* 0x0008 */ BOOL bMarkedForTimeoutHandling : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0009 */ char Padding_147[7];
  union
  {
    /* 0x0010 */ unsigned __int64 uQueuedTickCount;
    struct
    {
      /* 0x0010 */ unsigned long dwAccumulatedWaitTime;
      /* 0x0014 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
}; /* size: 0x0018 */

typedef struct _SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfLogicalProcessors;
  /* 0x0004 */ unsigned long NumberOfCores;
} SYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION, *PSYSTEM_HYPERVISOR_PROCESSOR_COUNT_INFORMATION; /* size: 0x0008 */

typedef enum _WORKERFACTORYINFOCLASS
{
  WorkerFactoryTimeout = 0,
  WorkerFactoryRetryTimeout = 1,
  WorkerFactoryIdleTimeout = 2,
  WorkerFactoryBindingCount = 3,
  WorkerFactoryThreadMinimum = 4,
  WorkerFactoryThreadMaximum = 5,
  WorkerFactoryPaused = 6,
  WorkerFactoryBasicInformation = 7,
  WorkerFactoryAdjustThreadGoal = 8,
  WorkerFactoryCallbackType = 9,
  WorkerFactoryStackInformation = 10,
  WorkerFactoryThreadBasePriority = 11,
  MaxWorkerFactoryInfoClass = 12,
} WORKERFACTORYINFOCLASS, *PWORKERFACTORYINFOCLASS;

typedef enum _FILE_ID_TYPE
{
  FileIdType = 0,
  ObjectIdType = 1,
  ExtendedFileIdType = 2,
  MaximumFileIdType = 3,
} FILE_ID_TYPE, *PFILE_ID_TYPE;

typedef struct _RTL_DEBUG_INFORMATION32
{
  /* 0x0000 */ unsigned long SectionHandleClient;
  /* 0x0004 */ unsigned long ViewBaseClient;
  /* 0x0008 */ unsigned long ViewBaseTarget;
  /* 0x000c */ unsigned long ViewBaseDelta;
  /* 0x0010 */ unsigned long EventPairClient;
  /* 0x0014 */ unsigned long EventPairTarget;
  /* 0x0018 */ unsigned long TargetProcessId;
  /* 0x001c */ unsigned long TargetThreadHandle;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long OffsetFree;
  /* 0x0028 */ unsigned long CommitSize;
  /* 0x002c */ unsigned long ViewSize;
  union
  {
    /* 0x0030 */ unsigned long Modules;
    /* 0x0030 */ unsigned long ModulesEx;
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long BackTraces;
  /* 0x0038 */ unsigned long Heaps;
  /* 0x003c */ unsigned long Locks;
  /* 0x0040 */ unsigned long SpecificHeap;
  /* 0x0044 */ unsigned long TargetProcessHandle;
  /* 0x0048 */ unsigned long VerifierOptions;
  /* 0x004c */ unsigned long ProcessHeap;
  /* 0x0050 */ unsigned long CriticalSectionHandle;
  /* 0x0054 */ unsigned long CriticalSectionOwnerThread;
  /* 0x0058 */ unsigned long Reserved[4];
} RTL_DEBUG_INFORMATION32, *PRTL_DEBUG_INFORMATION32; /* size: 0x0068 */

struct IObjectActivator
{
}; /* size: 0x0008 */

enum DBREASONENUM
{
  DBREASON_ROWSET_FETCHPOSITIONCHANGE = 0,
  DBREASON_ROWSET_RELEASE = 1,
  DBREASON_COLUMN_SET = 2,
  DBREASON_COLUMN_RECALCULATED = 3,
  DBREASON_ROW_ACTIVATE = 4,
  DBREASON_ROW_RELEASE = 5,
  DBREASON_ROW_DELETE = 6,
  DBREASON_ROW_FIRSTCHANGE = 7,
  DBREASON_ROW_INSERT = 8,
  DBREASON_ROW_RESYNCH = 9,
  DBREASON_ROW_UNDOCHANGE = 10,
  DBREASON_ROW_UNDOINSERT = 11,
  DBREASON_ROW_UNDODELETE = 12,
  DBREASON_ROW_UPDATE = 13,
  DBREASON_ROWSET_CHANGED = 14,
};

class PushLogicalThreadId;

enum PO_WAKE_SOURCE_TYPE
{
  DeviceWakeSourceType = 0,
  FixedWakeSourceType = 1,
  TimerWakeSourceType = 2,
};

typedef struct _CMSG_MAIL_LIST_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ long __PADDING__[1];
} CMSG_MAIL_LIST_ENCRYPT_INFO, *PCMSG_MAIL_LIST_ENCRYPT_INFO; /* size: 0x0038 */

typedef struct _IMAGE_THUNK_DATA32
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long ForwarderString;
      /* 0x0000 */ unsigned long Function;
      /* 0x0000 */ unsigned long Ordinal;
      /* 0x0000 */ unsigned long AddressOfData;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
} IMAGE_THUNK_DATA32, *PIMAGE_THUNK_DATA32; /* size: 0x0004 */

enum BlockingReason
{
  NotBlocking = 0,
  OutgoingCall = 1,
  CoWait = 2,
  ProcessEvents = 3,
};

class IMessageParamList
{
  /* 0x0000 */ class IMessageParam* _pFirst;
  /* 0x0008 */ class IMessageParam* _pLast;
}; /* size: 0x0010 */

class ASTAIncomingCallList
{
}; /* size: 0x0010 */

struct ASTAState
{
  /* 0x0000 */ struct _RTL_SRWLOCK lock;
  struct /* bitfield */
  {
    /* 0x0008 */ BOOL bInWaitContext : 1; /* bit position: 0 */
    /* 0x0008 */ BOOL bInKernelWait : 1; /* bit position: 1 */
    /* 0x0008 */ BOOL bHandlingPriorityEvents : 1; /* bit position: 2 */
    /* 0x0008 */ BOOL bWaitContextDispatchesAllCalls : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0009 */ char Padding_148[3];
  /* 0x000c */ enum BlockingReason blockingReason;
  /* 0x0010 */ struct _GUID outgoingCallLogicalThreadId;
  /* 0x0020 */ unsigned __int64 uCallTakeANumber;
  /* 0x0028 */ class IMessageParamList priorityEvents;
  /* 0x0038 */ class IMessageParamList deferredOutgoingRemReleaseCalls;
  /* 0x0048 */ class ASTAIncomingCallList dispatchableCalls;
  /* 0x0058 */ class ASTAIncomingCallList queuedCalls;
  /* 0x0068 */ unsigned __int64 uQueuedCallsSequence;
  /* 0x0070 */ unsigned long dwCachedNextQueuedCallTimeout;
  /* 0x0074 */ long Padding_149;
  /* 0x0078 */ unsigned __int64 uCachedNextQueuedCallTimeoutSequence;
  /* 0x0080 */ unsigned long dwCurrentKernelWaitTimeout;
  /* 0x0084 */ long Padding_150;
  /* 0x0088 */ unsigned __int64 uCurrentKernelWaitInitialTickCount;
}; /* size: 0x0090 */

typedef enum _RPC_NOTIFICATIONS
{
  RpcNotificationCallNone = 0,
  RpcNotificationClientDisconnect = 1,
  RpcNotificationCallCancel = 2,
} RPC_NOTIFICATIONS, *PRPC_NOTIFICATIONS;

typedef struct _IMAGE_OS2_HEADER
{
  /* 0x0000 */ unsigned short ne_magic;
  /* 0x0002 */ char ne_ver;
  /* 0x0003 */ char ne_rev;
  /* 0x0004 */ unsigned short ne_enttab;
  /* 0x0006 */ unsigned short ne_cbenttab;
  /* 0x0008 */ long ne_crc;
  /* 0x000c */ unsigned short ne_flags;
  /* 0x000e */ unsigned short ne_autodata;
  /* 0x0010 */ unsigned short ne_heap;
  /* 0x0012 */ unsigned short ne_stack;
  /* 0x0014 */ long ne_csip;
  /* 0x0018 */ long ne_sssp;
  /* 0x001c */ unsigned short ne_cseg;
  /* 0x001e */ unsigned short ne_cmod;
  /* 0x0020 */ unsigned short ne_cbnrestab;
  /* 0x0022 */ unsigned short ne_segtab;
  /* 0x0024 */ unsigned short ne_rsrctab;
  /* 0x0026 */ unsigned short ne_restab;
  /* 0x0028 */ unsigned short ne_modtab;
  /* 0x002a */ unsigned short ne_imptab;
  /* 0x002c */ long ne_nrestab;
  /* 0x0030 */ unsigned short ne_cmovent;
  /* 0x0032 */ unsigned short ne_align;
  /* 0x0034 */ unsigned short ne_cres;
  /* 0x0036 */ unsigned char ne_exetyp;
  /* 0x0037 */ unsigned char ne_flagsothers;
  /* 0x0038 */ unsigned short ne_pretthunks;
  /* 0x003a */ unsigned short ne_psegrefbytes;
  /* 0x003c */ unsigned short ne_swaparea;
  /* 0x003e */ unsigned short ne_expver;
} IMAGE_OS2_HEADER, *PIMAGE_OS2_HEADER; /* size: 0x0040 */

struct tagLOGCOLORSPACEW
{
  /* 0x0000 */ unsigned long lcsSignature;
  /* 0x0004 */ unsigned long lcsVersion;
  /* 0x0008 */ unsigned long lcsSize;
  /* 0x000c */ long lcsCSType;
  /* 0x0010 */ long lcsIntent;
  /* 0x0014 */ struct tagICEXYZTRIPLE lcsEndpoints;
  /* 0x0038 */ unsigned long lcsGammaRed;
  /* 0x003c */ unsigned long lcsGammaGreen;
  /* 0x0040 */ unsigned long lcsGammaBlue;
  /* 0x0044 */ wchar_t lcsFilename[260];
}; /* size: 0x024c */

struct tagEMRCREATECOLORSPACEW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEW lcs;
  /* 0x0258 */ unsigned long dwFlags;
  /* 0x025c */ unsigned long cbData;
  /* 0x0260 */ unsigned char Data[1];
  /* 0x0261 */ char __PADDING__[3];
}; /* size: 0x0264 */

typedef enum _USER_ACTIVITY_PRESENCE
{
  PowerUserPresent = 0,
  PowerUserNotPresent = 1,
  PowerUserInactive = 2,
  PowerUserMaximum = 3,
  PowerUserInvalid = 3,
} USER_ACTIVITY_PRESENCE, *PUSER_ACTIVITY_PRESENCE;

enum tagVARKIND
{
  VAR_PERINSTANCE = 0,
  VAR_STATIC = 1,
  VAR_CONST = 2,
  VAR_DISPATCH = 3,
};

typedef enum _DEP_SYSTEM_POLICY_TYPE
{
  DEPPolicyAlwaysOff = 0,
  DEPPolicyAlwaysOn = 1,
  DEPPolicyOptIn = 2,
  DEPPolicyOptOut = 3,
  DEPTotalPolicyCount = 4,
} DEP_SYSTEM_POLICY_TYPE, *PDEP_SYSTEM_POLICY_TYPE;

typedef struct _CRYPT_PROVUI_FUNCS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_151;
  /* 0x0008 */ struct _CRYPT_PROVUI_DATA* psUIData;
  /* 0x0010 */ void* pfnOnMoreInfoClick /* function */;
  /* 0x0018 */ void* pfnOnMoreInfoClickDefault /* function */;
  /* 0x0020 */ void* pfnOnAdvancedClick /* function */;
  /* 0x0028 */ void* pfnOnAdvancedClickDefault /* function */;
} CRYPT_PROVUI_FUNCS, *PCRYPT_PROVUI_FUNCS; /* size: 0x0030 */

typedef struct _JOBOBJECT_WAKE_FILTER
{
  /* 0x0000 */ unsigned long HighEdgeFilter;
  /* 0x0004 */ unsigned long LowEdgeFilter;
} JOBOBJECT_WAKE_FILTER, *PJOBOBJECT_WAKE_FILTER; /* size: 0x0008 */

typedef enum _EXCEPTION_DISPOSITION
{
  ExceptionContinueExecution = 0,
  ExceptionContinueSearch = 1,
  ExceptionNestedException = 2,
  ExceptionCollidedUnwind = 3,
} EXCEPTION_DISPOSITION, *PEXCEPTION_DISPOSITION;

typedef struct _TP_TASK
{
  /* 0x0000 */ const struct _TP_TASK_CALLBACKS* Callbacks;
  /* 0x0008 */ unsigned long NumaNode;
  /* 0x000c */ unsigned char IdealProcessor;
  /* 0x000d */ char Padding_152[3];
  /* 0x0010 */ struct _LIST_ENTRY ListEntry;
} TP_TASK, *PTP_TASK; /* size: 0x0020 */

typedef struct _TP_DIRECT
{
  /* 0x0000 */ struct _TP_TASK Task;
  /* 0x0020 */ unsigned __int64 Lock;
  /* 0x0028 */ struct _LIST_ENTRY IoCompletionInformationList;
  /* 0x0038 */ void* Callback /* function */;
  /* 0x0040 */ unsigned long NumaNode;
  /* 0x0044 */ unsigned char IdealProcessor;
  /* 0x0045 */ char __PADDING__[3];
} TP_DIRECT, *PTP_DIRECT; /* size: 0x0048 */

struct ICreateErrorInfo
{
}; /* size: 0x0008 */

typedef struct _REPAIR_COPIES_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Status;
  /* 0x0008 */ union _LARGE_INTEGER ResumeFileOffset;
} REPAIR_COPIES_OUTPUT, *PREPAIR_COPIES_OUTPUT; /* size: 0x0010 */

enum DBCOMPAREENUM
{
  DBCOMPARE_LT = 0,
  DBCOMPARE_EQ = 1,
  DBCOMPARE_GT = 2,
  DBCOMPARE_NE = 3,
  DBCOMPARE_NOTCOMPARABLE = 4,
};

enum tagCPFLAGS
{
  CPFLAG_NONE = 0,
  CPFLAG_PROPAGATE = 1,
  CPFLAG_EXPOSE = 2,
  CPFLAG_ENVOY = 4,
  CPFLAG_MONITORSTUB = 8,
  CPFLAG_MONITORPROXY = 16,
  CPFLAG_DONTCOMPARE = 32,
};

typedef struct _NTFS_STATISTICS
{
  /* 0x0000 */ unsigned long LogFileFullExceptions;
  /* 0x0004 */ unsigned long OtherExceptions;
  /* 0x0008 */ unsigned long MftReads;
  /* 0x000c */ unsigned long MftReadBytes;
  /* 0x0010 */ unsigned long MftWrites;
  /* 0x0014 */ unsigned long MftWriteBytes;
  struct
  {
    /* 0x0018 */ unsigned short Write;
    /* 0x001a */ unsigned short Create;
    /* 0x001c */ unsigned short SetInfo;
    /* 0x001e */ unsigned short Flush;
  } /* size: 0x0008 */ MftWritesUserLevel;
  /* 0x0020 */ unsigned short MftWritesFlushForLogFileFull;
  /* 0x0022 */ unsigned short MftWritesLazyWriter;
  /* 0x0024 */ unsigned short MftWritesUserRequest;
  /* 0x0026 */ char Padding_153[2];
  /* 0x0028 */ unsigned long Mft2Writes;
  /* 0x002c */ unsigned long Mft2WriteBytes;
  struct
  {
    /* 0x0030 */ unsigned short Write;
    /* 0x0032 */ unsigned short Create;
    /* 0x0034 */ unsigned short SetInfo;
    /* 0x0036 */ unsigned short Flush;
  } /* size: 0x0008 */ Mft2WritesUserLevel;
  /* 0x0038 */ unsigned short Mft2WritesFlushForLogFileFull;
  /* 0x003a */ unsigned short Mft2WritesLazyWriter;
  /* 0x003c */ unsigned short Mft2WritesUserRequest;
  /* 0x003e */ char Padding_154[2];
  /* 0x0040 */ unsigned long RootIndexReads;
  /* 0x0044 */ unsigned long RootIndexReadBytes;
  /* 0x0048 */ unsigned long RootIndexWrites;
  /* 0x004c */ unsigned long RootIndexWriteBytes;
  /* 0x0050 */ unsigned long BitmapReads;
  /* 0x0054 */ unsigned long BitmapReadBytes;
  /* 0x0058 */ unsigned long BitmapWrites;
  /* 0x005c */ unsigned long BitmapWriteBytes;
  /* 0x0060 */ unsigned short BitmapWritesFlushForLogFileFull;
  /* 0x0062 */ unsigned short BitmapWritesLazyWriter;
  /* 0x0064 */ unsigned short BitmapWritesUserRequest;
  struct
  {
    /* 0x0066 */ unsigned short Write;
    /* 0x0068 */ unsigned short Create;
    /* 0x006a */ unsigned short SetInfo;
  } /* size: 0x0006 */ BitmapWritesUserLevel;
  /* 0x006c */ unsigned long MftBitmapReads;
  /* 0x0070 */ unsigned long MftBitmapReadBytes;
  /* 0x0074 */ unsigned long MftBitmapWrites;
  /* 0x0078 */ unsigned long MftBitmapWriteBytes;
  /* 0x007c */ unsigned short MftBitmapWritesFlushForLogFileFull;
  /* 0x007e */ unsigned short MftBitmapWritesLazyWriter;
  /* 0x0080 */ unsigned short MftBitmapWritesUserRequest;
  struct
  {
    /* 0x0082 */ unsigned short Write;
    /* 0x0084 */ unsigned short Create;
    /* 0x0086 */ unsigned short SetInfo;
    /* 0x0088 */ unsigned short Flush;
  } /* size: 0x0008 */ MftBitmapWritesUserLevel;
  /* 0x008a */ char Padding_155[2];
  /* 0x008c */ unsigned long UserIndexReads;
  /* 0x0090 */ unsigned long UserIndexReadBytes;
  /* 0x0094 */ unsigned long UserIndexWrites;
  /* 0x0098 */ unsigned long UserIndexWriteBytes;
  /* 0x009c */ unsigned long LogFileReads;
  /* 0x00a0 */ unsigned long LogFileReadBytes;
  /* 0x00a4 */ unsigned long LogFileWrites;
  /* 0x00a8 */ unsigned long LogFileWriteBytes;
  struct
  {
    /* 0x00ac */ unsigned long Calls;
    /* 0x00b0 */ unsigned long Clusters;
    /* 0x00b4 */ unsigned long Hints;
    /* 0x00b8 */ unsigned long RunsReturned;
    /* 0x00bc */ unsigned long HintsHonored;
    /* 0x00c0 */ unsigned long HintsClusters;
    /* 0x00c4 */ unsigned long Cache;
    /* 0x00c8 */ unsigned long CacheClusters;
    /* 0x00cc */ unsigned long CacheMiss;
    /* 0x00d0 */ unsigned long CacheMissClusters;
  } /* size: 0x0028 */ Allocate;
} NTFS_STATISTICS, *PNTFS_STATISTICS; /* size: 0x00d4 */

struct tagTEXTMETRICA
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ unsigned char tmFirstChar;
  /* 0x002d */ unsigned char tmLastChar;
  /* 0x002e */ unsigned char tmDefaultChar;
  /* 0x002f */ unsigned char tmBreakChar;
  /* 0x0030 */ unsigned char tmItalic;
  /* 0x0031 */ unsigned char tmUnderlined;
  /* 0x0032 */ unsigned char tmStruckOut;
  /* 0x0033 */ unsigned char tmPitchAndFamily;
  /* 0x0034 */ unsigned char tmCharSet;
  /* 0x0035 */ char __PADDING__[3];
}; /* size: 0x0038 */

struct tagMCI_INFO_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ char* lpstrReturn;
  /* 0x0010 */ unsigned long dwRetSize;
}; /* size: 0x0014 */

enum tagEOLE_AUTHENTICATION_CAPABILITIES
{
  EOAC_NONE = 0,
  EOAC_MUTUAL_AUTH = 1,
  EOAC_STATIC_CLOAKING = 32,
  EOAC_DYNAMIC_CLOAKING = 64,
  EOAC_ANY_AUTHORITY = 128,
  EOAC_MAKE_FULLSIC = 256,
  EOAC_DEFAULT = 2048,
  EOAC_SECURE_REFS = 2,
  EOAC_ACCESS_CONTROL = 4,
  EOAC_APPID = 8,
  EOAC_DYNAMIC = 16,
  EOAC_REQUIRE_FULLSIC = 512,
  EOAC_AUTO_IMPERSONATE = 1024,
  EOAC_NO_CUSTOM_MARSHAL = 8192,
  EOAC_DISABLE_AAA = 4096,
};

struct ILockBytes
{
}; /* size: 0x0008 */

typedef enum _FILTER_BOOT_OPTION_OPERATION
{
  FilterBootOptionOperationOpenSystemStore = 0,
  FilterBootOptionOperationSetElement = 1,
  FilterBootOptionOperationDeleteElement = 2,
  FilterBootOptionOperationMax = 3,
} FILTER_BOOT_OPTION_OPERATION, *PFILTER_BOOT_OPTION_OPERATION;

struct tagEMRSETMITERLIMIT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ float eMiterLimit;
}; /* size: 0x000c */

struct A_SHA_CTX
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 buffer64[8];
      /* 0x0000 */ unsigned char buffer[64];
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ u;
  /* 0x0040 */ unsigned long state[5];
  /* 0x0054 */ unsigned long count[2];
  /* 0x005c */ long __PADDING__[1];
}; /* size: 0x0060 */

struct HMACSHA_CTX
{
  /* 0x0000 */ struct A_SHA_CTX context_ipad;
  /* 0x0060 */ struct A_SHA_CTX context_opad;
}; /* size: 0x00c0 */

typedef enum _KEY_SET_INFORMATION_CLASS
{
  KeyWriteTimeInformation = 0,
  KeyWow64FlagsInformation = 1,
  KeyControlFlagsInformation = 2,
  KeySetVirtualizationInformation = 3,
  KeySetDebugInformation = 4,
  KeySetHandleTagsInformation = 5,
  MaxKeySetInfoClass = 6,
} KEY_SET_INFORMATION_CLASS, *PKEY_SET_INFORMATION_CLASS;

typedef struct _KNONVOLATILE_CONTEXT_POINTERS
{
  union
  {
    /* 0x0000 */ struct _M128A* FloatingContext[16];
    struct
    {
      /* 0x0000 */ struct _M128A* Xmm0;
      /* 0x0008 */ struct _M128A* Xmm1;
      /* 0x0010 */ struct _M128A* Xmm2;
      /* 0x0018 */ struct _M128A* Xmm3;
      /* 0x0020 */ struct _M128A* Xmm4;
      /* 0x0028 */ struct _M128A* Xmm5;
      /* 0x0030 */ struct _M128A* Xmm6;
      /* 0x0038 */ struct _M128A* Xmm7;
      /* 0x0040 */ struct _M128A* Xmm8;
      /* 0x0048 */ struct _M128A* Xmm9;
      /* 0x0050 */ struct _M128A* Xmm10;
      /* 0x0058 */ struct _M128A* Xmm11;
      /* 0x0060 */ struct _M128A* Xmm12;
      /* 0x0068 */ struct _M128A* Xmm13;
      /* 0x0070 */ struct _M128A* Xmm14;
      /* 0x0078 */ struct _M128A* Xmm15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
  union
  {
    /* 0x0080 */ unsigned __int64* IntegerContext[16];
    struct
    {
      /* 0x0080 */ unsigned __int64* Rax;
      /* 0x0088 */ unsigned __int64* Rcx;
      /* 0x0090 */ unsigned __int64* Rdx;
      /* 0x0098 */ unsigned __int64* Rbx;
      /* 0x00a0 */ unsigned __int64* Rsp;
      /* 0x00a8 */ unsigned __int64* Rbp;
      /* 0x00b0 */ unsigned __int64* Rsi;
      /* 0x00b8 */ unsigned __int64* Rdi;
      /* 0x00c0 */ unsigned __int64* R8;
      /* 0x00c8 */ unsigned __int64* R9;
      /* 0x00d0 */ unsigned __int64* R10;
      /* 0x00d8 */ unsigned __int64* R11;
      /* 0x00e0 */ unsigned __int64* R12;
      /* 0x00e8 */ unsigned __int64* R13;
      /* 0x00f0 */ unsigned __int64* R14;
      /* 0x00f8 */ unsigned __int64* R15;
    }; /* size: 0x0080 */
  }; /* size: 0x0080 */
} KNONVOLATILE_CONTEXT_POINTERS, *PKNONVOLATILE_CONTEXT_POINTERS; /* size: 0x0100 */

enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY
{
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_OTHER = -1,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HD15 = 0,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SVIDEO = 1,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPOSITE_VIDEO = 2,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_COMPONENT_VIDEO = 3,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DVI = 4,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_HDMI = 5,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_LVDS = 6,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_D_JPN = 8,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDI = 9,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EXTERNAL = 10,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_DISPLAYPORT_EMBEDDED = 11,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EXTERNAL = 12,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_UDI_EMBEDDED = 13,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_SDTVDONGLE = 14,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_INTERNAL = -2147483648,
  DISPLAYCONFIG_OUTPUT_TECHNOLOGY_FORCE_UINT32 = -1,
};

typedef struct _APPCATEGORYINFO
{
  /* 0x0000 */ unsigned long Locale;
  /* 0x0004 */ long Padding_156;
  /* 0x0008 */ wchar_t* pszDescription;
  /* 0x0010 */ struct _GUID AppCategoryId;
} APPCATEGORYINFO, *PAPPCATEGORYINFO; /* size: 0x0020 */

enum tagCALLTYPE
{
  CALLTYPE_TOPLEVEL = 1,
  CALLTYPE_NESTED = 2,
  CALLTYPE_ASYNC = 3,
  CALLTYPE_TOPLEVEL_CALLPENDING = 4,
  CALLTYPE_ASYNC_CALLPENDING = 5,
};

struct MFT_ENUM_DATA_V0
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
}; /* size: 0x0018 */

enum IMMERSIVELAUNCHEREVENT
{
  ILE_APPS_SEARCH_PANE_SHOW = 0,
  ILE_APPS_SEARCH_PANE_HIDE = 1,
  ILE_MAX = 2,
};

typedef struct _IMAGEHLP_CBA_EVENTW
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ const wchar_t* desc;
  /* 0x0010 */ void* object;
} IMAGEHLP_CBA_EVENTW, *PIMAGEHLP_CBA_EVENTW; /* size: 0x0018 */

typedef struct _KEY_TYPE_SUBTYPE
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ struct _GUID Type;
  /* 0x0014 */ struct _GUID Subtype;
} KEY_TYPE_SUBTYPE, *PKEY_TYPE_SUBTYPE; /* size: 0x0024 */

struct IPersist
{
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulEncodedAssemblyIdentityLength;
  /* 0x0008 */ unsigned long ulManifestPathType;
  /* 0x000c */ unsigned long ulManifestPathLength;
  /* 0x0010 */ union _LARGE_INTEGER liManifestLastWriteTime;
  /* 0x0018 */ unsigned long ulPolicyPathType;
  /* 0x001c */ unsigned long ulPolicyPathLength;
  /* 0x0020 */ union _LARGE_INTEGER liPolicyLastWriteTime;
  /* 0x0028 */ unsigned long ulMetadataSatelliteRosterIndex;
  /* 0x002c */ unsigned long ulManifestVersionMajor;
  /* 0x0030 */ unsigned long ulManifestVersionMinor;
  /* 0x0034 */ unsigned long ulPolicyVersionMajor;
  /* 0x0038 */ unsigned long ulPolicyVersionMinor;
  /* 0x003c */ unsigned long ulAssemblyDirectoryNameLength;
  /* 0x0040 */ const wchar_t* lpAssemblyEncodedAssemblyIdentity;
  /* 0x0048 */ const wchar_t* lpAssemblyManifestPath;
  /* 0x0050 */ const wchar_t* lpAssemblyPolicyPath;
  /* 0x0058 */ const wchar_t* lpAssemblyDirectoryName;
  /* 0x0060 */ unsigned long ulFileCount;
  /* 0x0064 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_ASSEMBLY_DETAILED_INFORMATION; /* size: 0x0068 */

enum VERIFIER_MODE
{
  VERIFIER_MODE_UNUSED = 0,
  VERIFIER_MODE_TRIAGE = 1,
  VERIFIER_MODE_FIELD = 2,
  VERIFIER_MODE_LOGO = 3,
  VERIFIER_MODE_TEST = 4,
};

typedef enum _SHRINK_VOLUME_REQUEST_TYPES
{
  ShrinkPrepare = 1,
  ShrinkCommit = 2,
  ShrinkAbort = 3,
} SHRINK_VOLUME_REQUEST_TYPES, *PSHRINK_VOLUME_REQUEST_TYPES;

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOW
{
  /* 0x0000 */ wchar_t* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOW, *PSERVICE_REQUIRED_PRIVILEGES_INFOW; /* size: 0x0008 */

struct HHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagNONCLIENTMETRICSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTA lfCaptionFont;
  /* 0x0054 */ int iSmCaptionWidth;
  /* 0x0058 */ int iSmCaptionHeight;
  /* 0x005c */ struct tagLOGFONTA lfSmCaptionFont;
  /* 0x0098 */ int iMenuWidth;
  /* 0x009c */ int iMenuHeight;
  /* 0x00a0 */ struct tagLOGFONTA lfMenuFont;
  /* 0x00dc */ struct tagLOGFONTA lfStatusFont;
  /* 0x0118 */ struct tagLOGFONTA lfMessageFont;
  /* 0x0154 */ int iPaddedBorderWidth;
}; /* size: 0x0158 */

enum SE_PROCESS_CATEGORY
{
  SE_PROCESS_CATEGORY_OTHER = 0,
  SE_PROCESS_CATEGORY_PROTECTED_LIGHT = 1,
  SE_PROCESS_CATEGORY_PROTECTED = 2,
};

typedef struct _PROPSHEETPAGEA
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const char* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const char* pszHeaderTitle;
  /* 0x0050 */ const char* pszHeaderSubTitle;
  /* 0x0058 */ void* hActCtx;
  union
  {
    /* 0x0060 */ struct HBITMAP__* hbmHeader;
    /* 0x0060 */ const char* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETPAGEA, *PPROPSHEETPAGEA; /* size: 0x0068 */

typedef enum __MIDL_IBindStatusCallbackEx_0001
{
  BINDF2_DISABLEBASICOVERHTTP = 1,
  BINDF2_DISABLEAUTOCOOKIEHANDLING = 2,
  BINDF2_READ_DATA_GREATER_THAN_4GB = 4,
  BINDF2_DISABLE_HTTP_REDIRECT_XSECURITYID = 8,
  BINDF2_SETDOWNLOADMODE = 32,
  BINDF2_DISABLE_HTTP_REDIRECT_CACHING = 64,
  BINDF2_KEEP_CALLBACK_MODULE_LOADED = 128,
  BINDF2_ALLOW_PROXY_CRED_PROMPT = 256,
  BINDF2_RESERVED_F = 0x20000,
  BINDF2_RESERVED_E = 0x40000,
  BINDF2_RESERVED_D = 0x80000,
  BINDF2_RESERVED_C = 0x100000,
  BINDF2_RESERVED_B = 0x200000,
  BINDF2_RESERVED_A = 0x400000,
  BINDF2_RESERVED_9 = 0x800000,
  BINDF2_RESERVED_8 = 0x1000000,
  BINDF2_RESERVED_7 = 0x2000000,
  BINDF2_RESERVED_6 = 0x4000000,
  BINDF2_RESERVED_5 = 0x8000000,
  BINDF2_RESERVED_4 = 0x10000000,
  BINDF2_RESERVED_3 = 0x20000000,
  BINDF2_RESERVED_2 = 0x40000000,
  BINDF2_RESERVED_1 = -2147483648,
} _MIDL_IBindStatusCallbackEx_0001, *P_MIDL_IBindStatusCallbackEx_0001;

typedef struct _CRYPT_URL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSyncDeltaTime;
  /* 0x0008 */ unsigned long cGroup;
  /* 0x000c */ long Padding_157;
  /* 0x0010 */ unsigned long* rgcGroupEntry;
} CRYPT_URL_INFO, *PCRYPT_URL_INFO; /* size: 0x0018 */

typedef enum _RTL_UMS_SCHEDULER_REASON
{
  UmsSchedulerStartup = 0,
  UmsSchedulerThreadBlocked = 1,
  UmsSchedulerThreadYield = 2,
} RTL_UMS_SCHEDULER_REASON, *PRTL_UMS_SCHEDULER_REASON;

typedef struct _SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION
{
  /* 0x0000 */ unsigned long Operation;
} SYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION, *PSYSTEM_PROCESSOR_MICROCODE_UPDATE_INFORMATION; /* size: 0x0004 */

typedef struct _AVRF_CLIENT_ID_WOW64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} AVRF_CLIENT_ID_WOW64, *PAVRF_CLIENT_ID_WOW64; /* size: 0x0010 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ struct _AVRF_CLIENT_ID_WOW64 ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_158;
  /* 0x0020 */ unsigned __int64 Stacks[16];
} AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64; /* size: 0x00a0 */

typedef struct _AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_159;
  /* 0x0010 */ struct _AVRF_PROCESS_HANDLE_TRACING_ENTRY_WOW64 HandleTrace[1];
} AVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64, *PAVRF_PROCESS_HANDLE_TRACING_QUERY_WOW64; /* size: 0x00b0 */

struct IAuthenticate
{
}; /* size: 0x0008 */

typedef enum _tagPSUACTION
{
  PSU_DEFAULT = 1,
  PSU_SECURITY_URL_ONLY = 2,
} tagPSUACTION, *PtagPSUACTION;

struct READ_USN_JOURNAL_DATA_V0
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
}; /* size: 0x0028 */

enum RUNTIMEBROKER_CALLERIDENTITY_CHECK
{
  RCC_ASSERT_IF_RUNTIMEBROKER = 0,
  RCC_FAIL_IF_RUNTIMEBROKER = 1,
  RCC_ALLOW_IF_RUNTIMEBROKER = 2,
};

struct IContextCallback
{
}; /* size: 0x0008 */

struct IUnknown
{
}; /* size: 0x0008 */

typedef enum _KTMOBJECT_TYPE
{
  KTMOBJECT_TRANSACTION = 0,
  KTMOBJECT_TRANSACTION_MANAGER = 1,
  KTMOBJECT_RESOURCE_MANAGER = 2,
  KTMOBJECT_ENLISTMENT = 3,
  KTMOBJECT_INVALID = 4,
} KTMOBJECT_TYPE, *PKTMOBJECT_TYPE;

enum tagGLOBALOPT_UNMARSHALING_POLICY_VALUES
{
  COMGLB_UNMARSHALING_POLICY_NORMAL = 0,
  COMGLB_UNMARSHALING_POLICY_STRONG = 1,
  COMGLB_UNMARSHALING_POLICY_HYBRID = 2,
};

struct IStdMarshalInfo
{
}; /* size: 0x0008 */

typedef struct _ABC
{
  /* 0x0000 */ int abcA;
  /* 0x0004 */ unsigned int abcB;
  /* 0x0008 */ int abcC;
} ABC, *PABC; /* size: 0x000c */

enum tagREGKIND
{
  REGKIND_DEFAULT = 0,
  REGKIND_REGISTER = 1,
  REGKIND_NONE = 2,
};

typedef enum _SE_LEARNING_MODE_DATA_TYPE
{
  SeLearningModeInvalidType = 0,
  SeLearningModeSettings = 1,
  SeLearningModeMax = 2,
} SE_LEARNING_MODE_DATA_TYPE, *PSE_LEARNING_MODE_DATA_TYPE;

struct IXMLDOMProcessingInstruction
{
}; /* size: 0x0008 */

struct tagAXISINFOA
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ unsigned char axAxisName[16];
}; /* size: 0x0018 */

typedef struct _PRINTER_INFO_4W
{
  /* 0x0000 */ wchar_t* pPrinterName;
  /* 0x0008 */ wchar_t* pServerName;
  /* 0x0010 */ unsigned long Attributes;
  /* 0x0014 */ long __PADDING__[1];
} PRINTER_INFO_4W, *PPRINTER_INFO_4W; /* size: 0x0018 */

struct _ACTIVATION_CONTEXT_DATA;

enum tagPOINTER_DEVICE_TYPE
{
  POINTER_DEVICE_TYPE_INTEGRATED_PEN = 1,
  POINTER_DEVICE_TYPE_EXTERNAL_PEN = 2,
  POINTER_DEVICE_TYPE_TOUCH = 3,
  POINTER_DEVICE_TYPE_MAX = -1,
};

class CLimitedWritableStorage::OpenStorage::__l3::<lambda_7AF3526445BD1900>;

typedef enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS
{
  SystemCrashDumpDisable = 0,
  SystemCrashDumpReconfigure = 1,
  SystemCrashDumpInitializationComplete = 2,
} SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS, *PSYSTEM_CRASH_DUMP_CONFIGURATION_CLASS;

struct MARK_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long UsnSourceInfo;
    /* 0x0000 */ unsigned long CopyNumber;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_160;
  /* 0x0008 */ void* VolumeHandle;
  /* 0x0010 */ unsigned long HandleInfo;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

enum DBINDEX_COL_ORDERENUM
{
  DBINDEX_COL_ORDER_ASC = 0,
  DBINDEX_COL_ORDER_DESC = 1,
};

typedef struct _REMOTE_REQUEST_SCM_INFO
{
  /* 0x0000 */ unsigned long ClientImpLevel;
  /* 0x0004 */ unsigned short cRequestedProtseqs;
  /* 0x0006 */ char Padding_161[2];
  /* 0x0008 */ unsigned short* pRequestedProtseqs;
} REMOTE_REQUEST_SCM_INFO, *PREMOTE_REQUEST_SCM_INFO; /* size: 0x0010 */

typedef enum _TABLE_SEARCH_RESULT
{
  TableEmptyTree = 0,
  TableFoundNode = 1,
  TableInsertAsLeft = 2,
  TableInsertAsRight = 3,
} TABLE_SEARCH_RESULT, *PTABLE_SEARCH_RESULT;

struct tagCANDIDATEFORM
{
  /* 0x0000 */ unsigned long dwIndex;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ struct tagPOINT ptCurrentPos;
  /* 0x0010 */ struct tagRECT rcArea;
}; /* size: 0x0020 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
} FILE_PIPE_CLIENT_PROCESS_BUFFER, *PFILE_PIPE_CLIENT_PROCESS_BUFFER; /* size: 0x0010 */

typedef enum _SYSTEM_POWER_STATE
{
  PowerSystemUnspecified = 0,
  PowerSystemWorking = 1,
  PowerSystemSleeping1 = 2,
  PowerSystemSleeping2 = 3,
  PowerSystemSleeping3 = 4,
  PowerSystemHibernate = 5,
  PowerSystemShutdown = 6,
  PowerSystemMaximum = 7,
} SYSTEM_POWER_STATE, *PSYSTEM_POWER_STATE;

enum CWMO_FLAGS
{
  CWMO_DEFAULT = 0,
  CWMO_DISPATCH_CALLS = 1,
  CWMO_DISPATCH_WINDOW_MESSAGES = 2,
};

typedef struct __midl_frag11_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag11_t, *P_midl_frag11_t; /* size: 0x0038 */

struct IXMLAttribute
{
}; /* size: 0x0008 */

typedef enum _WNF_STATE_NAME_INFORMATION
{
  WnfInfoStateNameExist = 0,
  WnfInfoSubscribersPresent = 1,
  WnfInfoIsQuiescent = 2,
} WNF_STATE_NAME_INFORMATION, *PWNF_STATE_NAME_INFORMATION;

struct HGESTUREINFO__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _PROC_THREAD_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned long PresentFlags;
  /* 0x0004 */ unsigned long AttributeCount;
  /* 0x0008 */ unsigned long LastAttribute;
  /* 0x000c */ unsigned long SpareUlong0;
  /* 0x0010 */ struct _PROC_THREAD_ATTRIBUTE* ExtendedFlagsAttribute;
  /* 0x0018 */ struct _PROC_THREAD_ATTRIBUTE Attributes[1];
} PROC_THREAD_ATTRIBUTE_LIST, *PPROC_THREAD_ATTRIBUTE_LIST; /* size: 0x0030 */

typedef struct _PLUGPLAY_EVENT_BLOCK
{
  /* 0x0000 */ struct _GUID EventGuid;
  /* 0x0010 */ enum _PLUGPLAY_EVENT_CATEGORY EventCategory;
  /* 0x0014 */ long Padding_162;
  /* 0x0018 */ unsigned long* Result;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long TotalSize;
  /* 0x0028 */ void* DeviceObject;
  union
  {
    union
    {
      struct
      {
        /* 0x0030 */ struct _GUID ClassGuid;
        /* 0x0040 */ wchar_t SymbolicLinkName[1];
        /* 0x0042 */ char __PADDING__[2];
      } /* size: 0x0014 */ DeviceClass;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ TargetDevice;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ InstallDevice;
      struct
      {
        /* 0x0030 */ void* NotificationStructure;
        /* 0x0038 */ wchar_t DeviceId[1];
        /* 0x003a */ char __PADDING__[6];
      } /* size: 0x0010 */ CustomNotification;
      struct
      {
        /* 0x0030 */ void* Notification;
      } /* size: 0x0008 */ ProfileNotification;
      struct
      {
        /* 0x0030 */ unsigned long NotificationCode;
        /* 0x0034 */ unsigned long NotificationData;
      } /* size: 0x0008 */ PowerNotification;
      struct
      {
        /* 0x0030 */ enum _PNP_VETO_TYPE VetoType;
        /* 0x0034 */ wchar_t DeviceIdVetoNameBuffer[1];
        /* 0x0036 */ char __PADDING__[2];
      } /* size: 0x0008 */ VetoNotification;
      struct
      {
        /* 0x0030 */ struct _GUID BlockedDriverGuid;
      } /* size: 0x0010 */ BlockedDriverNotification;
      struct
      {
        /* 0x0030 */ wchar_t ParentId[1];
      } /* size: 0x0002 */ InvalidIDNotification;
      struct
      {
        /* 0x0030 */ struct _GUID PowerSettingGuid;
        /* 0x0040 */ unsigned long Flags;
        /* 0x0044 */ unsigned long SessionId;
        /* 0x0048 */ unsigned long DataLength;
        /* 0x004c */ unsigned char Data[1];
        /* 0x004d */ char __PADDING__[3];
      } /* size: 0x0020 */ PowerSettingNotification;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ PropertyChangeNotification;
      struct
      {
        /* 0x0030 */ wchar_t DeviceId[1];
      } /* size: 0x0002 */ DeviceInstanceNotification;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
} PLUGPLAY_EVENT_BLOCK, *PPLUGPLAY_EVENT_BLOCK; /* size: 0x0050 */

typedef enum _SHUTDOWN_ACTION
{
  ShutdownNoReboot = 0,
  ShutdownReboot = 1,
  ShutdownPowerOff = 2,
} SHUTDOWN_ACTION, *PSHUTDOWN_ACTION;

struct IPolicySet
{
}; /* size: 0x0008 */

typedef struct _DRIVER_INFO_8A
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_163;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ char* pEnvironment;
  /* 0x0018 */ char* pDriverPath;
  /* 0x0020 */ char* pDataFile;
  /* 0x0028 */ char* pConfigFile;
  /* 0x0030 */ char* pHelpFile;
  /* 0x0038 */ char* pDependentFiles;
  /* 0x0040 */ char* pMonitorName;
  /* 0x0048 */ char* pDefaultDataType;
  /* 0x0050 */ char* pszzPreviousNames;
  /* 0x0058 */ struct _FILETIME ftDriverDate;
  /* 0x0060 */ unsigned __int64 dwlDriverVersion;
  /* 0x0068 */ char* pszMfgName;
  /* 0x0070 */ char* pszOEMUrl;
  /* 0x0078 */ char* pszHardwareID;
  /* 0x0080 */ char* pszProvider;
  /* 0x0088 */ char* pszPrintProcessor;
  /* 0x0090 */ char* pszVendorSetup;
  /* 0x0098 */ char* pszzColorProfiles;
  /* 0x00a0 */ char* pszInfPath;
  /* 0x00a8 */ unsigned long dwPrinterDriverAttributes;
  /* 0x00ac */ long Padding_164;
  /* 0x00b0 */ char* pszzCoreDriverDependencies;
  /* 0x00b8 */ struct _FILETIME ftMinInboxDriverVerDate;
  /* 0x00c0 */ unsigned __int64 dwlMinInboxDriverVerVersion;
} DRIVER_INFO_8A, *PDRIVER_INFO_8A; /* size: 0x00c8 */

enum tagResourceGateId
{
  CreateProcessMemoryGate = 0,
  CreateObjectMemoryGate = 1,
};

struct BATTERY_REPORTING_SCALE
{
  /* 0x0000 */ unsigned long Granularity;
  /* 0x0004 */ unsigned long Capacity;
}; /* size: 0x0008 */

typedef struct _tagAUTHENTICATEINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} tagAUTHENTICATEINFO, *PtagAUTHENTICATEINFO; /* size: 0x0008 */

typedef struct _SYSTEM_ALARM_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_OBJECT_ACE, *PSYSTEM_ALARM_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

enum POWER_MONITOR_REQUEST_REASON
{
  MonitorRequestReasonUnknown = 0,
  MonitorRequestReasonPowerButton = 1,
  MonitorRequestReasonRemoteConnection = 2,
  MonitorRequestReasonScMonitorpower = 3,
  MonitorRequestReasonUserInput = 4,
  MonitorRequestReasonAcDcDisplayBurst = 5,
  MonitorRequestReasonUserDisplayBurst = 6,
  MonitorRequestReasonPoSetSystemState = 7,
  MonitorRequestReasonSetThreadExecutionState = 8,
  MonitorRequestReasonFullWake = 9,
  MonitorRequestReasonSessionUnlock = 10,
  MonitorRequestReasonScreenOffRequest = 11,
  MonitorRequestReasonIdleTimeout = 12,
  MonitorRequestReasonPolicyChange = 13,
  MonitorRequestReasonMax = 14,
};

struct IPicture
{
}; /* size: 0x0008 */

enum tagOLECLOSE
{
  OLECLOSE_SAVEIFDIRTY = 0,
  OLECLOSE_NOSAVE = 1,
  OLECLOSE_PROMPTSAVE = 2,
};

struct tagBIND_OPTS3
{
  /* 0x0000 */ long Padding_165[10];
  /* 0x0028 */ struct HWND__* hwnd;
}; /* size: 0x0030 */

class CBindCtx
{
  /* 0x0000 */ long Padding_166[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_167;
  /* 0x0010 */ struct tagBIND_OPTS3 m_bindopts;
  /* 0x0040 */ class CBindCtx::CObjList* m_pFirstObj;
  /* 0x0048 */ class CMapStringToPtr* m_pMap;
}; /* size: 0x0050 */

typedef enum _FP__IEEE_ROUNDING_MODE
{
  FpRoundNearest = 0,
  FpRoundMinusInfinity = 1,
  FpRoundPlusInfinity = 2,
  FpRoundChopped = 3,
} FP__IEEE_ROUNDING_MODE, *PFP__IEEE_ROUNDING_MODE;

class CRandomNumberGenerator
{
  /* 0x0000 */ unsigned __int64 _hRngProv;
}; /* size: 0x0008 */

enum tagExtendedErrorParamTypes
{
  eeptAnsiString = 1,
  eeptUnicodeString = 2,
  eeptLongVal = 3,
  eeptShortVal = 4,
  eeptPointerVal = 5,
  eeptNone = 6,
  eeptBinary = 7,
};

typedef enum __MIDL_IInternetZoneManager_0002
{
  ZAFLAGS_CUSTOM_EDIT = 1,
  ZAFLAGS_ADD_SITES = 2,
  ZAFLAGS_REQUIRE_VERIFICATION = 4,
  ZAFLAGS_INCLUDE_PROXY_OVERRIDE = 8,
  ZAFLAGS_INCLUDE_INTRANET_SITES = 16,
  ZAFLAGS_NO_UI = 32,
  ZAFLAGS_SUPPORTS_VERIFICATION = 64,
  ZAFLAGS_UNC_AS_INTRANET = 128,
  ZAFLAGS_DETECT_INTRANET = 256,
  ZAFLAGS_USE_LOCKED_ZONES = 0x10000,
  ZAFLAGS_VERIFY_TEMPLATE_SETTINGS = 0x20000,
  ZAFLAGS_NO_CACHE = 0x40000,
} _MIDL_IInternetZoneManager_0002, *P_MIDL_IInternetZoneManager_0002;

struct tagOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ long Padding_168;
  /* 0x0020 */ unsigned char* data;
}; /* size: 0x0028 */

typedef enum _EXCEPTION_LOG_TYPE
{
  LogExceptionEmpty = 0,
  LogExceptionDispatch = 1,
  LogExceptionHandler = 2,
} EXCEPTION_LOG_TYPE, *PEXCEPTION_LOG_TYPE;

struct tagMOUSEHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned int wHitTestCode;
  /* 0x0014 */ long Padding_169;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

enum INDEXER_CACHE_STATE
{
  ICS_HIT = 0,
  ICS_MISS = 1,
};

typedef struct _SYSTEM_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} SYSTEM_FLAGS_INFORMATION, *PSYSTEM_FLAGS_INFORMATION; /* size: 0x0004 */

typedef enum _FINDEX_SEARCH_OPS
{
  FindExSearchNameMatch = 0,
  FindExSearchLimitToDirectories = 1,
  FindExSearchLimitToDevices = 2,
  FindExSearchMaxSearchOp = 3,
} FINDEX_SEARCH_OPS, *PFINDEX_SEARCH_OPS;

typedef struct _STARTUPINFOW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_170;
  /* 0x0008 */ wchar_t* lpReserved;
  /* 0x0010 */ wchar_t* lpDesktop;
  /* 0x0018 */ wchar_t* lpTitle;
  /* 0x0020 */ unsigned long dwX;
  /* 0x0024 */ unsigned long dwY;
  /* 0x0028 */ unsigned long dwXSize;
  /* 0x002c */ unsigned long dwYSize;
  /* 0x0030 */ unsigned long dwXCountChars;
  /* 0x0034 */ unsigned long dwYCountChars;
  /* 0x0038 */ unsigned long dwFillAttribute;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned short wShowWindow;
  /* 0x0042 */ unsigned short cbReserved2;
  /* 0x0044 */ long Padding_171;
  /* 0x0048 */ unsigned char* lpReserved2;
  /* 0x0050 */ void* hStdInput;
  /* 0x0058 */ void* hStdOutput;
  /* 0x0060 */ void* hStdError;
} STARTUPINFOW, *PSTARTUPINFOW; /* size: 0x0068 */

struct tagEMRANGLEARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlCenter;
  /* 0x0010 */ unsigned long nRadius;
  /* 0x0014 */ float eStartAngle;
  /* 0x0018 */ float eSweepAngle;
}; /* size: 0x001c */

typedef struct _STORAGE_MEDIA_SERIAL_NUMBER_DATA
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short SerialNumberLength;
  /* 0x0004 */ unsigned char* SerialNumber /* zero-length array */;
} STORAGE_MEDIA_SERIAL_NUMBER_DATA, *PSTORAGE_MEDIA_SERIAL_NUMBER_DATA; /* size: 0x0004 */

typedef enum _RTL_VERIFIER_INFORMATION_CLASS
{
  VerifierAllInformation = 0,
  VerifierPageHeapsInformation = 1,
  VerifierRuntimeFlagsInformation = 2,
  VerifierFaultInjectInformation = 3,
  MaxVerifierInformation = 4,
} RTL_VERIFIER_INFORMATION_CLASS, *PRTL_VERIFIER_INFORMATION_CLASS;

typedef struct _KEY_FULL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long SubKeys;
  /* 0x0018 */ unsigned long MaxNameLen;
  /* 0x001c */ unsigned long MaxClassLen;
  /* 0x0020 */ unsigned long Values;
  /* 0x0024 */ unsigned long MaxValueNameLen;
  /* 0x0028 */ unsigned long MaxValueDataLen;
  /* 0x002c */ wchar_t Class[1];
  /* 0x002e */ char __PADDING__[2];
} KEY_FULL_INFORMATION, *PKEY_FULL_INFORMATION; /* size: 0x0030 */

struct tagEMRROUNDRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct tagSIZE szlCorner;
}; /* size: 0x0020 */

enum ACTCTX_REQUESTED_RUN_LEVEL
{
  ACTCTX_RUN_LEVEL_UNSPECIFIED = 0,
  ACTCTX_RUN_LEVEL_AS_INVOKER = 1,
  ACTCTX_RUN_LEVEL_HIGHEST_AVAILABLE = 2,
  ACTCTX_RUN_LEVEL_REQUIRE_ADMIN = 3,
  ACTCTX_RUN_LEVEL_NUMBERS = 4,
};

typedef enum _MM_ETW_WORKING_SET_TYPE
{
  MmEtwWorkingSetTypeUser = 0,
  MmEtwWorkingSetTypeSession = 1,
  MmEtwWorkingSetTypeSystem = 2,
  MmEtwWorkingSetTypeMaximum = 3,
} MM_ETW_WORKING_SET_TYPE, *PMM_ETW_WORKING_SET_TYPE;

typedef struct _SECTION_IMAGE_INFORMATION32
{
  /* 0x0000 */ unsigned long TransferAddress;
  /* 0x0004 */ unsigned long ZeroBits;
  /* 0x0008 */ unsigned long MaximumStackSize;
  /* 0x000c */ unsigned long CommittedStackSize;
  /* 0x0010 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0014 */ unsigned short SubSystemMinorVersion;
      /* 0x0016 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0014 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned long GpValue;
  /* 0x001c */ unsigned short ImageCharacteristics;
  /* 0x001e */ unsigned short DllCharacteristics;
  /* 0x0020 */ unsigned short Machine;
  /* 0x0022 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0023 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0023 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0023 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0023 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0024 */ unsigned long LoaderFlags;
  /* 0x0028 */ unsigned long ImageFileSize;
  /* 0x002c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION32, *PSECTION_IMAGE_INFORMATION32; /* size: 0x0030 */

struct tagCStdPSFactoryBuffer
{
  /* 0x0000 */ const struct IPSFactoryBufferVtbl* lpVtbl;
  /* 0x0008 */ long RefCount;
  /* 0x000c */ long Padding_172;
  /* 0x0010 */ const struct tagProxyFileInfo** pProxyFileList;
  /* 0x0018 */ long Filler1;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef enum _PORT_INFORMATION_CLASS
{
  PortBasicInformation = 0,
  PortDumpInformation = 1,
} PORT_INFORMATION_CLASS, *PPORT_INFORMATION_CLASS;

struct tagLICINFO
{
  /* 0x0000 */ long cbLicInfo;
  /* 0x0004 */ int fRuntimeKeyAvail;
  /* 0x0008 */ int fLicVerified;
}; /* size: 0x000c */

typedef enum _HEAP_INFORMATION_CLASS
{
  HeapCompatibilityInformation = 0,
  HeapEnableTerminationOnCorruption = 1,
  HeapExtendedInformation = 2,
  HeapDetailedFailureInformation = -2147483647,
  HeapSetDebuggingInformation = -2147483646,
} HEAP_INFORMATION_CLASS, *PHEAP_INFORMATION_CLASS;

typedef enum _HARDWARE_COUNTER_TYPE
{
  PMCCounter = 0,
  MaxHardwareCounterType = 1,
} HARDWARE_COUNTER_TYPE, *PHARDWARE_COUNTER_TYPE;

typedef struct _COUNTER_READING
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Index;
  /* 0x0008 */ unsigned __int64 Start;
  /* 0x0010 */ unsigned __int64 Total;
} COUNTER_READING, *PCOUNTER_READING; /* size: 0x0018 */

enum tagINPUT_MESSAGE_DEVICE_TYPE
{
  IMDT_UNAVAILABLE = 0,
  IMDT_KEYBOARD = 1,
  IMDT_MOUSE = 2,
  IMDT_TOUCH = 4,
  IMDT_PEN = 8,
};

struct IPersistPropertyBag
{
}; /* size: 0x0008 */

typedef struct _wireSAFEARR_BSTR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_173;
  /* 0x0008 */ struct _FLAGGED_WORD_BLOB** aBstr;
} wireSAFEARR_BSTR, *PwireSAFEARR_BSTR; /* size: 0x0010 */

typedef struct _BINARY_CONTAINER
{
  /* 0x0000 */ unsigned long cbBuf;
  /* 0x0004 */ long Padding_174;
  /* 0x0008 */ unsigned char* pData;
} BINARY_CONTAINER, *PBINARY_CONTAINER; /* size: 0x0010 */

enum tagSYSKIND
{
  SYS_WIN16 = 0,
  SYS_WIN32 = 1,
  SYS_MAC = 2,
  SYS_WIN64 = 3,
};

typedef struct _KEY_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualizationCandidate : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Reserved : 27; /* bit position: 5 */
  }; /* bitfield */
} KEY_VIRTUALIZATION_INFORMATION, *PKEY_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

typedef struct __midl_frag20_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag20_t, *P_midl_frag20_t; /* size: 0x0038 */

typedef enum _HARDERROR_RESPONSE_OPTION
{
  OptionAbortRetryIgnore = 0,
  OptionOk = 1,
  OptionOkCancel = 2,
  OptionRetryCancel = 3,
  OptionYesNo = 4,
  OptionYesNoCancel = 5,
  OptionShutdownSystem = 6,
  OptionOkNoWait = 7,
  OptionCancelTryContinue = 8,
} HARDERROR_RESPONSE_OPTION, *PHARDERROR_RESPONSE_OPTION;

typedef struct _OBJECTID
{
  /* 0x0000 */ struct _GUID Lineage;
  /* 0x0010 */ unsigned long Uniquifier;
} OBJECTID, *POBJECTID; /* size: 0x0014 */

enum DISPLAYCONFIG_TOPOLOGY_ID
{
  DISPLAYCONFIG_TOPOLOGY_INTERNAL = 1,
  DISPLAYCONFIG_TOPOLOGY_CLONE = 2,
  DISPLAYCONFIG_TOPOLOGY_EXTEND = 4,
  DISPLAYCONFIG_TOPOLOGY_EXTERNAL = 8,
  DISPLAYCONFIG_TOPOLOGY_FORCE_UINT32 = -1,
};

typedef struct _SYSTEM_GDI_DRIVER_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DriverName;
  /* 0x0010 */ void* ImageAddress;
  /* 0x0018 */ void* SectionPointer;
  /* 0x0020 */ void* EntryPoint;
  /* 0x0028 */ struct _IMAGE_EXPORT_DIRECTORY* ExportSectionPointer;
  /* 0x0030 */ unsigned long ImageLength;
  /* 0x0034 */ long __PADDING__[1];
} SYSTEM_GDI_DRIVER_INFORMATION, *PSYSTEM_GDI_DRIVER_INFORMATION; /* size: 0x0038 */

typedef struct _CHANGER_SET_POSITION
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Transport;
  /* 0x0008 */ struct _CHANGER_ELEMENT Destination;
  /* 0x0010 */ unsigned char Flip;
  /* 0x0011 */ char __PADDING__[3];
} CHANGER_SET_POSITION, *PCHANGER_SET_POSITION; /* size: 0x0014 */

struct IROTData
{
}; /* size: 0x0008 */

typedef enum _RPC_NOTIFICATION_TYPES
{
  RpcNotificationTypeNone = 0,
  RpcNotificationTypeEvent = 1,
  RpcNotificationTypeApc = 2,
  RpcNotificationTypeIoc = 3,
  RpcNotificationTypeHwnd = 4,
  RpcNotificationTypeCallback = 5,
} RPC_NOTIFICATION_TYPES, *PRPC_NOTIFICATION_TYPES;

typedef struct _NDR64_EXPR_VAR
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char VarType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Offset;
} NDR64_EXPR_VAR, *PNDR64_EXPR_VAR; /* size: 0x0008 */

typedef struct __midl_frag7_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag7_t, *P_midl_frag7_t; /* size: 0x000c */

typedef struct _TRANSACTION_LIST_ENTRY
{
  /* 0x0000 */ struct _GUID UOW;
} TRANSACTION_LIST_ENTRY, *PTRANSACTION_LIST_ENTRY; /* size: 0x0010 */

class ITrackingMoniker
{
}; /* size: 0x0008 */

enum CasingBehavior
{
  CasingWin16 = 0,
  CasingNt4 = 1,
  CasingConformant = 2,
};

typedef enum _PROCESS_INFORMATION_CLASS
{
  ProcessMemoryPriority = 0,
  ProcessInformationClassMax = 1,
} PROCESS_INFORMATION_CLASS, *PPROCESS_INFORMATION_CLASS;

typedef struct _PROCESS_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} PROCESS_CYCLE_TIME_INFORMATION, *PPROCESS_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef enum _SAFER_IDENTIFICATION_TYPES
{
  SaferIdentityDefault = 0,
  SaferIdentityTypeImageName = 1,
  SaferIdentityTypeImageHash = 2,
  SaferIdentityTypeUrlZone = 3,
  SaferIdentityTypeCertificate = 4,
} SAFER_IDENTIFICATION_TYPES, *PSAFER_IDENTIFICATION_TYPES;

typedef struct _FILE_PIPE_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long ReadDataAvailable;
  /* 0x0008 */ unsigned long NumberOfMessages;
  /* 0x000c */ unsigned long MessageLength;
  /* 0x0010 */ char Data[1];
  /* 0x0011 */ char __PADDING__[3];
} FILE_PIPE_PEEK_BUFFER, *PFILE_PIPE_PEEK_BUFFER; /* size: 0x0014 */

typedef struct _CERT_REVOCATION_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_175;
  /* 0x0008 */ void* hChainEngine;
  /* 0x0010 */ void* hAdditionalStore;
  /* 0x0018 */ unsigned long dwChainFlags;
  /* 0x001c */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0020 */ struct _FILETIME* pftCurrentTime;
  /* 0x0028 */ struct _FILETIME* pftCacheResync;
  /* 0x0030 */ unsigned long cbMaxUrlRetrievalByteCount;
  /* 0x0034 */ long __PADDING__[1];
} CERT_REVOCATION_CHAIN_PARA, *PCERT_REVOCATION_CHAIN_PARA; /* size: 0x0038 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION* Information;
  /* 0x0008 */ void* SectionBase;
  /* 0x0010 */ unsigned long SectionLength;
  /* 0x0014 */ long Padding_176;
  /* 0x0018 */ void* SectionGlobalDataBase;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA; /* size: 0x0028 */

typedef enum _MEMORY_WORKING_SET_EX_LOCATION
{
  MemoryLocationInvalid = 0,
  MemoryLocationResident = 1,
  MemoryLocationPagefile = 2,
  MemoryLocationReserved = 3,
} MEMORY_WORKING_SET_EX_LOCATION, *PMEMORY_WORKING_SET_EX_LOCATION;

enum tagApplicationType
{
  ServerApplication = 0,
  LibraryApplication = 1,
};

typedef enum __MIDL_IUri_0002
{
  Uri_HOST_UNKNOWN = 0,
  Uri_HOST_DNS = 1,
  Uri_HOST_IPV4 = 2,
  Uri_HOST_IPV6 = 3,
  Uri_HOST_IDN = 4,
} _MIDL_IUri_0002, *P_MIDL_IUri_0002;

struct IGetBindHandle
{
}; /* size: 0x0008 */

enum tagDESCKIND
{
  DESCKIND_NONE = 0,
  DESCKIND_FUNCDESC = 1,
  DESCKIND_VARDESC = 2,
  DESCKIND_TYPECOMP = 3,
  DESCKIND_IMPLICITAPPOBJ = 4,
  DESCKIND_MAX = 5,
};

struct IXMLDOMNodeList
{
}; /* size: 0x0008 */

typedef struct _RTL_VERIFIER_PAGEHEAP_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long HeapFlags;
  /* 0x000c */ unsigned long ExtraFlags;
  /* 0x0010 */ unsigned __int64 HeapHandle;
} RTL_VERIFIER_PAGEHEAP_INFORMATION, *PRTL_VERIFIER_PAGEHEAP_INFORMATION; /* size: 0x0018 */

struct READER_SEL_RESPONSE
{
  /* 0x0000 */ unsigned long cbReaderNameOffset;
  /* 0x0004 */ unsigned long cchReaderNameLength;
  /* 0x0008 */ unsigned long cbCardNameOffset;
  /* 0x000c */ unsigned long cchCardNameLength;
}; /* size: 0x0010 */

enum tagPENDINGTYPE
{
  PENDINGTYPE_TOPLEVEL = 1,
  PENDINGTYPE_NESTED = 2,
};

typedef struct _FILE_PREFETCH_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ void* Context;
  /* 0x0010 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH_EX, *PFILE_PREFETCH_EX; /* size: 0x0018 */

typedef struct _RTL_VERIFIER_PAGEHEAPS_INFORMATION
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long NumberPageHeaps;
  /* 0x0008 */ struct _RTL_VERIFIER_PAGEHEAP_INFORMATION PageHeapInformation[1];
} RTL_VERIFIER_PAGEHEAPS_INFORMATION, *PRTL_VERIFIER_PAGEHEAPS_INFORMATION; /* size: 0x0020 */

struct tagMIDIOUTCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned short wTechnology;
  /* 0x002a */ unsigned short wVoices;
  /* 0x002c */ unsigned short wNotes;
  /* 0x002e */ unsigned short wChannelMask;
  /* 0x0030 */ unsigned long dwSupport;
}; /* size: 0x0034 */

typedef enum _MANDATORY_LEVEL
{
  MandatoryLevelUntrusted = 0,
  MandatoryLevelLow = 1,
  MandatoryLevelMedium = 2,
  MandatoryLevelHigh = 3,
  MandatoryLevelSystem = 4,
  MandatoryLevelSecureProcess = 5,
  MandatoryLevelCount = 6,
} MANDATORY_LEVEL, *PMANDATORY_LEVEL;

typedef struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE
{
  /* 0x0000 */ unsigned __int64 Version;
  /* 0x0008 */ struct _UNICODE_STRING Name;
} TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE, *PTOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE; /* size: 0x0018 */

typedef enum _SYSTEM_PIXEL_FORMAT
{
  SystemPixelFormatUnknown = 0,
  SystemPixelFormatR8G8B8 = 1,
  SystemPixelFormatR8G8B8X8 = 2,
  SystemPixelFormatB8G8R8 = 3,
  SystemPixelFormatB8G8R8X8 = 4,
} SYSTEM_PIXEL_FORMAT, *PSYSTEM_PIXEL_FORMAT;

struct tagDISPPARAMS
{
  /* 0x0000 */ struct tagVARIANT* rgvarg;
  /* 0x0008 */ long* rgdispidNamedArgs;
  /* 0x0010 */ unsigned int cArgs;
  /* 0x0014 */ unsigned int cNamedArgs;
}; /* size: 0x0018 */

typedef struct _SYSTEM_ALARM_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_ACE, *PSYSTEM_ALARM_ACE; /* size: 0x000c */

typedef enum _PO_SLEEP_DISABLE_REASON
{
  PoSleepDisableReasonVideo = 0,
  PoSleepDisableReasonHypervisor = 1,
  PoSleepDisableReasonVhdBoot = 2,
  PoSleepDisableReasonPortableWorkspace = 3,
  PoSleepDisableReasonMax = 4,
} PO_SLEEP_DISABLE_REASON, *PPO_SLEEP_DISABLE_REASON;

enum tagGLOBALOPT_PROPERTIES
{
  COMGLB_EXCEPTION_HANDLING = 1,
  COMGLB_APPID = 2,
  COMGLB_RPC_THREADPOOL_SETTING = 3,
  COMGLB_RO_SETTINGS = 4,
  COMGLB_UNMARSHALING_POLICY = 5,
};

typedef struct _STORAGE_ADAPTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long MaximumTransferLength;
  /* 0x000c */ unsigned long MaximumPhysicalPages;
  /* 0x0010 */ unsigned long AlignmentMask;
  /* 0x0014 */ unsigned char AdapterUsesPio;
  /* 0x0015 */ unsigned char AdapterScansDown;
  /* 0x0016 */ unsigned char CommandQueueing;
  /* 0x0017 */ unsigned char AcceleratedTransfer;
  /* 0x0018 */ unsigned char BusType;
  /* 0x0019 */ char Padding_177;
  /* 0x001a */ unsigned short BusMajorVersion;
  /* 0x001c */ unsigned short BusMinorVersion;
  /* 0x001e */ unsigned char SrbType;
  /* 0x001f */ unsigned char AddressType;
} STORAGE_ADAPTER_DESCRIPTOR, *PSTORAGE_ADAPTER_DESCRIPTOR; /* size: 0x0020 */

typedef enum __MIDL_IInternetSecurityManager_0002
{
  PUAFOUT_DEFAULT = 0,
  PUAFOUT_ISLOCKZONEPOLICY = 1,
} _MIDL_IInternetSecurityManager_0002, *P_MIDL_IInternetSecurityManager_0002;

typedef enum _CALLSOURCE
{
  CALLSOURCE_CROSSAPT = 0,
  CALLSOURCE_CROSSCTX = 1,
} CALLSOURCE, *PCALLSOURCE;

typedef struct _IMAGE_LINENUMBER
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long SymbolTableIndex;
      /* 0x0000 */ unsigned long VirtualAddress;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Type;
  /* 0x0004 */ unsigned short Linenumber;
} IMAGE_LINENUMBER, *PIMAGE_LINENUMBER; /* size: 0x0006 */

struct tagPOINTS
{
  /* 0x0000 */ short x;
  /* 0x0002 */ short y;
}; /* size: 0x0004 */

struct SActivatableClassIdHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ const wchar_t* activatableClassId;
}; /* size: 0x0018 */

typedef enum __MIDL_IBindStatusCallback_0004
{
  URL_ENCODING_NONE = 0,
  URL_ENCODING_ENABLE_UTF8 = 0x10000000,
  URL_ENCODING_DISABLE_UTF8 = 0x20000000,
} _MIDL_IBindStatusCallback_0004, *P_MIDL_IBindStatusCallback_0004;

enum STUB_PHASE
{
  STUB_UNMARSHAL = 0,
  STUB_CALL_SERVER = 1,
  STUB_MARSHAL = 2,
  STUB_CALL_SERVER_NO_HRESULT = 3,
};

typedef struct _HYPER_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_178;
  /* 0x0008 */ __int64* pData;
} HYPER_SIZEDARR, *PHYPER_SIZEDARR; /* size: 0x0010 */

enum tagThreadingModel
{
  ApartmentThreaded = 0,
  FreeThreaded = 1,
  SingleThreaded = 2,
  BothThreaded = 3,
  NeutralThreaded = 4,
};

struct tagRPCOLEMESSAGE
{
  /* 0x0000 */ void* reserved1;
  /* 0x0008 */ unsigned long dataRepresentation;
  /* 0x000c */ long Padding_179;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long cbBuffer;
  /* 0x001c */ unsigned long iMethod;
  /* 0x0020 */ void* reserved2[5];
  /* 0x0048 */ unsigned long rpcFlags;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

enum tagCLSCTX
{
  CLSCTX_INPROC_SERVER = 1,
  CLSCTX_INPROC_HANDLER = 2,
  CLSCTX_LOCAL_SERVER = 4,
  CLSCTX_INPROC_SERVER16 = 8,
  CLSCTX_REMOTE_SERVER = 16,
  CLSCTX_INPROC_HANDLER16 = 32,
  CLSCTX_RESERVED1 = 64,
  CLSCTX_RESERVED2 = 128,
  CLSCTX_RESERVED3 = 256,
  CLSCTX_RESERVED4 = 512,
  CLSCTX_NO_CODE_DOWNLOAD = 1024,
  CLSCTX_RESERVED5 = 2048,
  CLSCTX_NO_CUSTOM_MARSHAL = 4096,
  CLSCTX_ENABLE_CODE_DOWNLOAD = 8192,
  CLSCTX_NO_FAILURE_LOG = 16384,
  CLSCTX_DISABLE_AAA = 0xffff8000,
  CLSCTX_ENABLE_AAA = 0x10000,
  CLSCTX_FROM_DEFAULT_CONTEXT = 0x20000,
  CLSCTX_ACTIVATE_32_BIT_SERVER = 0x40000,
  CLSCTX_ACTIVATE_64_BIT_SERVER = 0x80000,
  CLSCTX_ENABLE_CLOAKING = 0x100000,
  CLSCTX_APPCONTAINER = 0x400000,
  CLSCTX_ACTIVATE_AAA_AS_IU = 0x800000,
  CLSCTX_PS_DLL = -2147483648,
};

typedef enum _KEY_INFORMATION_CLASS
{
  KeyBasicInformation = 0,
  KeyNodeInformation = 1,
  KeyFullInformation = 2,
  KeyNameInformation = 3,
  KeyCachedInformation = 4,
  KeyFlagsInformation = 5,
  KeyVirtualizationInformation = 6,
  KeyHandleTagsInformation = 7,
  KeyTrustInformation = 8,
  MaxKeyInfoClass = 9,
} KEY_INFORMATION_CLASS, *PKEY_INFORMATION_CLASS;

class CClassCache::CBaseClassEntry
{
  /* 0x0000 */ long Padding_180[2];
  /* 0x0008 */ class CClassCache::CBaseClassEntry* _pNext;
  /* 0x0010 */ class CClassCache::CBaseClassEntry* _pPrev;
  /* 0x0018 */ class CClassCache::CClassEntry* _pClassEntry;
  /* 0x0020 */ unsigned long _dwContext;
  /* 0x0024 */ unsigned long _dwSig;
}; /* size: 0x0028 */

struct IMPORT_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long SizeOfData;
  union
  {
    /* 0x0010 */ unsigned short Ordinal;
    /* 0x0010 */ unsigned short Hint;
  }; /* size: 0x0002 */
  struct /* bitfield */
  {
    /* 0x0012 */ unsigned short Type : 2; /* bit position: 0 */
    /* 0x0012 */ unsigned short NameType : 3; /* bit position: 2 */
    /* 0x0012 */ unsigned short Reserved : 11; /* bit position: 5 */
  }; /* bitfield */
}; /* size: 0x0014 */

struct fd_set
{
  /* 0x0000 */ unsigned int fd_count;
  /* 0x0004 */ long Padding_181;
  /* 0x0008 */ unsigned __int64 fd_array[64];
}; /* size: 0x0208 */

typedef struct _wireSAFEARR_UNKNOWN
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_182;
  /* 0x0008 */ struct IUnknown** apUnknown;
} wireSAFEARR_UNKNOWN, *PwireSAFEARR_UNKNOWN; /* size: 0x0010 */

struct HMIDIIN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef enum _REG_ACTION
{
  KeyAdded = 0,
  KeyRemoved = 1,
  KeyModified = 2,
} REG_ACTION, *PREG_ACTION;

typedef enum _BOOT_ENTROPY_SOURCE_RESULT_CODE
{
  BootEntropySourceStructureUninitialized = 0,
  BootEntropySourceDisabledByPolicy = 1,
  BootEntropySourceNotPresent = 2,
  BootEntropySourceError = 3,
  BootEntropySourceSuccess = 4,
} BOOT_ENTROPY_SOURCE_RESULT_CODE, *PBOOT_ENTROPY_SOURCE_RESULT_CODE;

typedef struct _MUICCHEADER
{
  /* 0x0000 */ unsigned int ulMaxStringsSize;
  /* 0x0004 */ unsigned int ulSizeStrings;
  /* 0x0008 */ unsigned int ulMaxNumInstalledCultures;
  /* 0x000c */ unsigned int ulNumInstalledCultures;
  /* 0x0010 */ unsigned int ulMaxNumUnverifiedCultures;
  /* 0x0014 */ unsigned int ulNumUnverifiedCultures;
} MUICCHEADER, *PMUICCHEADER; /* size: 0x0018 */

struct tagPIXELFORMATDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerType;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long dwLayerMask;
  /* 0x0020 */ unsigned long dwVisibleMask;
  /* 0x0024 */ unsigned long dwDamageMask;
}; /* size: 0x0028 */

struct tagEMRPIXELFORMAT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagPIXELFORMATDESCRIPTOR pfd;
}; /* size: 0x0030 */

struct tagMIXERLINEA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwDestination;
  /* 0x0008 */ unsigned long dwSource;
  /* 0x000c */ unsigned long dwLineID;
  /* 0x0010 */ unsigned long fdwLine;
  /* 0x0014 */ unsigned __int64 dwUser;
  /* 0x001c */ unsigned long dwComponentType;
  /* 0x0020 */ unsigned long cChannels;
  /* 0x0024 */ unsigned long cConnections;
  /* 0x0028 */ unsigned long cControls;
  /* 0x002c */ char szShortName[16];
  /* 0x003c */ char szName[64];
  struct
  {
    /* 0x007c */ unsigned long dwType;
    /* 0x0080 */ unsigned long dwDeviceID;
    /* 0x0084 */ unsigned short wMid;
    /* 0x0086 */ unsigned short wPid;
    /* 0x0088 */ unsigned int vDriverVersion;
    /* 0x008c */ char szPname[32];
  } /* size: 0x0030 */ Target;
}; /* size: 0x00ac */

enum IMPORT_OBJECT_TYPE
{
  IMPORT_OBJECT_CODE = 0,
  IMPORT_OBJECT_DATA = 1,
  IMPORT_OBJECT_CONST = 2,
};

typedef struct _POWER_MONITOR_INVOCATION
{
  /* 0x0000 */ unsigned char On;
  /* 0x0001 */ unsigned char Console;
  /* 0x0002 */ char Padding_183[2];
  /* 0x0004 */ enum POWER_MONITOR_REQUEST_REASON RequestReason;
} POWER_MONITOR_INVOCATION, *PPOWER_MONITOR_INVOCATION; /* size: 0x0008 */

typedef struct _userSTGMEDIUM
{
  /* 0x0000 */ struct IUnknown* pUnkForRelease;
} userSTGMEDIUM, *PuserSTGMEDIUM; /* size: 0x0008 */

typedef struct _userFLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct _userSTGMEDIUM Stgmed;
} userFLAG_STGMEDIUM, *PuserFLAG_STGMEDIUM; /* size: 0x0010 */

struct tagWAVEOUTCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long dwFormats;
  /* 0x004c */ unsigned short wChannels;
  /* 0x004e */ unsigned short wReserved1;
  /* 0x0050 */ unsigned long dwSupport;
}; /* size: 0x0054 */

enum tagFUNCKIND
{
  FUNC_VIRTUAL = 0,
  FUNC_PUREVIRTUAL = 1,
  FUNC_NONVIRTUAL = 2,
  FUNC_STATIC = 3,
  FUNC_DISPATCH = 4,
};

typedef struct _MINIDUMP_INCLUDE_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
} MINIDUMP_INCLUDE_THREAD_CALLBACK, *PMINIDUMP_INCLUDE_THREAD_CALLBACK; /* size: 0x0004 */

enum tagACTIVATION_STAGE
{
  CLIENT_CONTEXT_STAGE = 1,
  CLIENT_MACHINE_STAGE = 2,
  SERVER_MACHINE_STAGE = 3,
  SERVER_PROCESS_STAGE = 4,
  SERVER_CONTEXT_STAGE = 5,
};

typedef struct _MINIDUMP_MISC_INFO_2
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
} MINIDUMP_MISC_INFO_2, *PMINIDUMP_MISC_INFO_2; /* size: 0x002c */

struct IOleInPlaceActiveObject
{
}; /* size: 0x0008 */

typedef enum _TRANSACTION_OUTCOME
{
  TransactionOutcomeUndetermined = 1,
  TransactionOutcomeCommitted = 2,
  TransactionOutcomeAborted = 3,
} TRANSACTION_OUTCOME, *PTRANSACTION_OUTCOME;

typedef enum __vc_attributes::pointer_defaultAttribute::type_e
{
  ptr = 0,
  ref = 1,
  unique = 2,
} _vc_attributes::pointer_defaultAttribute::type_e, *P_vc_attributes::pointer_defaultAttribute::type_e;

typedef struct __vc_attributes::pointer_defaultAttribute
{
  /* 0x0000 */ enum __vc_attributes::pointer_defaultAttribute::type_e type;
} _vc_attributes::pointer_defaultAttribute, *P_vc_attributes::pointer_defaultAttribute; /* size: 0x0004 */

enum tagADVF
{
  ADVF_NODATA = 1,
  ADVF_PRIMEFIRST = 2,
  ADVF_ONLYONCE = 4,
  ADVF_DATAONSTOP = 64,
  ADVFCACHE_NOHANDLER = 8,
  ADVFCACHE_FORCEBUILTIN = 16,
  ADVFCACHE_ONSAVE = 32,
};

typedef struct _CMSG_KEY_TRANS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_184;
  /* 0x0008 */ struct _CERT_ID RecipientId;
  /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0048 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_TRANS_RECIPIENT_INFO, *PCMSG_KEY_TRANS_RECIPIENT_INFO; /* size: 0x0058 */

enum tagSTGTY
{
  STGTY_STORAGE = 1,
  STGTY_STREAM = 2,
  STGTY_LOCKBYTES = 3,
  STGTY_PROPERTY = 4,
};

typedef struct _KCRM_PROTOCOL_BLOB
{
  /* 0x0000 */ struct _GUID ProtocolId;
  /* 0x0010 */ unsigned long StaticInfoLength;
  /* 0x0014 */ unsigned long TransactionIdInfoLength;
  /* 0x0018 */ unsigned long Unused1;
  /* 0x001c */ unsigned long Unused2;
} KCRM_PROTOCOL_BLOB, *PKCRM_PROTOCOL_BLOB; /* size: 0x0020 */

struct IAggregator
{
}; /* size: 0x0008 */

typedef enum _CM_SHARE_DISPOSITION
{
  CmResourceShareUndetermined = 0,
  CmResourceShareDeviceExclusive = 1,
  CmResourceShareDriverExclusive = 2,
  CmResourceShareShared = 3,
} CM_SHARE_DISPOSITION, *PCM_SHARE_DISPOSITION;

typedef struct _FILE_FS_ATTRIBUTE_INFORMATION
{
  /* 0x0000 */ unsigned long FileSystemAttributes;
  /* 0x0004 */ long MaximumComponentNameLength;
  /* 0x0008 */ unsigned long FileSystemNameLength;
  /* 0x000c */ wchar_t FileSystemName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_FS_ATTRIBUTE_INFORMATION, *PFILE_FS_ATTRIBUTE_INFORMATION; /* size: 0x0010 */

typedef struct _SEMAPHORE_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ long MaximumCount;
} SEMAPHORE_BASIC_INFORMATION, *PSEMAPHORE_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct _CHANGER_ELEMENT_STATUS
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Element;
  /* 0x0008 */ struct _CHANGER_ELEMENT SrcElementAddress;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ExceptionCode;
  /* 0x0018 */ unsigned char TargetId;
  /* 0x0019 */ unsigned char Lun;
  /* 0x001a */ unsigned short Reserved;
  /* 0x001c */ unsigned char PrimaryVolumeID[36];
  /* 0x0040 */ unsigned char AlternateVolumeID[36];
} CHANGER_ELEMENT_STATUS, *PCHANGER_ELEMENT_STATUS; /* size: 0x0064 */

typedef struct _RTL_BITMAP_EX
{
  /* 0x0000 */ unsigned __int64 SizeOfBitMap;
  /* 0x0008 */ unsigned __int64* Buffer;
} RTL_BITMAP_EX, *PRTL_BITMAP_EX; /* size: 0x0010 */

enum tagShutdownType
{
  IdleShutdown = 0,
  ForcedShutdown = 1,
};

class CMapKeyToValue
{
  /* 0x0000 */ unsigned int m_cbValue;
  /* 0x0004 */ unsigned int m_cbKey;
  /* 0x0008 */ unsigned int m_cbKeyInAssoc;
  /* 0x000c */ long Padding_185;
  /* 0x0010 */ struct CMapKeyToValue::CAssoc** m_pHashTable;
  /* 0x0018 */ unsigned int m_nHashTableSize;
  /* 0x001c */ long Padding_186;
  /* 0x0020 */ void* m_lpfnHashKey /* function */;
  /* 0x0028 */ int m_nCount;
  /* 0x002c */ long Padding_187;
  /* 0x0030 */ struct CMapKeyToValue::CAssoc* m_pFreeList;
  /* 0x0038 */ struct CPlex* m_pBlocks;
  /* 0x0040 */ int m_nBlockSize;
}; /* size: 0x0048 */

class CMapDwordDword
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

class CDataAdviseCache
{
  /* 0x0000 */ struct IDataAdviseHolder* m_pDAH;
  /* 0x0008 */ class CMapDwordDword m_mapClientToDelegate;
}; /* size: 0x0050 */

enum tagRpcCallClientLocality
{
  rcclInvalid = 0,
  rcclLocal = 1,
  rcclRemote = 2,
  rcclClientUnknownLocality = 3,
};

typedef struct _RTL_UCSCHAR_DECODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned long UcsCharacter;
  /* 0x0004 */ long Padding_188;
  union
  {
    /* 0x0008 */ long FailureReason;
    /* 0x0008 */ const unsigned char* NewCursorValue;
  }; /* size: 0x0008 */
} RTL_UCSCHAR_DECODER_RETURN_VALUE, *PRTL_UCSCHAR_DECODER_RETURN_VALUE; /* size: 0x0010 */

struct tagPOINTFX
{
  /* 0x0000 */ struct _FIXED x;
  /* 0x0004 */ struct _FIXED y;
}; /* size: 0x0008 */

enum tagDATADIR
{
  DATADIR_GET = 1,
  DATADIR_SET = 2,
};

typedef struct _IMAGEHLP_LINEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_189;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned long LineNumber;
  /* 0x0014 */ long Padding_190;
  /* 0x0018 */ wchar_t* FileName;
  /* 0x0020 */ unsigned __int64 Address;
} IMAGEHLP_LINEW64, *PIMAGEHLP_LINEW64; /* size: 0x0028 */

enum tagPOINTER_INPUT_TYPE
{
  PT_POINTER = 1,
  PT_TOUCH = 2,
  PT_PEN = 3,
  PT_MOUSE = 4,
};

struct HWINEVENTHOOK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _FILE_FS_PERSISTENT_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeFlags;
  /* 0x0004 */ unsigned long FlagMask;
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Reserved;
} FILE_FS_PERSISTENT_VOLUME_INFORMATION, *PFILE_FS_PERSISTENT_VOLUME_INFORMATION; /* size: 0x0010 */

enum MessageParamKind
{
  CMessageCall = 0,
  CChannelObject = 1,
  CDllHost = 2,
  CGIPMessageParam = 3,
  POSTRELRIFREF = 4,
};

struct tagSTDOBJREF
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long cPublicRefs;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
  /* 0x0018 */ struct _GUID ipid;
}; /* size: 0x0028 */

struct tagOBJREF
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct _GUID iid;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0046 */ char __PADDING__[2];
      } /* size: 0x0030 */ u_standard;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct _GUID clsid;
        /* 0x0050 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x0056 */ char __PADDING__[2];
      } /* size: 0x0040 */ u_handler;
      struct
      {
        /* 0x0018 */ struct _GUID clsid;
        /* 0x0028 */ unsigned long cbExtension;
        /* 0x002c */ unsigned long size;
        /* 0x0030 */ unsigned char* pData;
      } /* size: 0x0020 */ u_custom;
      struct
      {
        /* 0x0018 */ struct tagSTDOBJREF std;
        /* 0x0040 */ struct tagOBJREFDATA* pORData;
        /* 0x0048 */ struct tagDUALSTRINGARRAY saResAddr;
        /* 0x004e */ char __PADDING__[2];
      } /* size: 0x0038 */ u_extended;
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ u_objref;
}; /* size: 0x0058 */

class CDllHost
{
  /* 0x0000 */ enum MessageParamKind Kind;
  /* 0x0004 */ long Padding_191[5];
  /* 0x0018 */ struct IDLLHost* _pIDllProxy;
  /* 0x0020 */ class CStdIdentity* _pStdId;
  /* 0x0028 */ unsigned long _dwType;
  /* 0x002c */ unsigned long _dwHostAptId;
  /* 0x0030 */ volatile unsigned long _hCOMActivator;
  /* 0x0034 */ volatile unsigned long _hWinRTActivator;
  /* 0x0038 */ unsigned long _dwTid;
  /* 0x003c */ HRESULT _hrMarshal;
  /* 0x0040 */ void* _hEvent;
  /* 0x0048 */ void* _hEventWakeUp;
  /* 0x0050 */ HRESULT _hr;
  /* 0x0054 */ long Padding_192;
  /* 0x0058 */ struct tagOBJREF _objref;
  /* 0x00b0 */ class COleStaticMutexSem _mxs;
}; /* size: 0x00f8 */

enum tagLocalServerType
{
  LocalServerType16 = 0,
  LocalServerType32 = 1,
};

struct CleanupStack::memory_to_free
{
  /* 0x0000 */ void* pvMemory;
  /* 0x0008 */ class PMemoryAllocator* pAllocator;
}; /* size: 0x0010 */

struct CleanupStack::Block
{
  /* 0x0000 */ struct CleanupStack::memory_to_free mem[20];
  /* 0x0140 */ unsigned long count;
  /* 0x0144 */ long Padding_193;
  /* 0x0148 */ struct CleanupStack::Block* prev;
  /* 0x0150 */ struct CleanupStack::Block* next;
}; /* size: 0x0158 */

struct CleanupStack
{
  /* 0x0000 */ struct CleanupStack::Block m_first;
  /* 0x0158 */ struct CleanupStack::Block* m_last;
}; /* size: 0x0160 */

typedef enum _COVERAGE_REQUEST_CODES
{
  CoverageAllModules = 0,
  CoverageSearchByHash = 1,
  CoverageSearchByName = 2,
} COVERAGE_REQUEST_CODES, *PCOVERAGE_REQUEST_CODES;

typedef struct _CERT_POLICY_QUALIFIER_INFO
{
  /* 0x0000 */ char* pszPolicyQualifierId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Qualifier;
} CERT_POLICY_QUALIFIER_INFO, *PCERT_POLICY_QUALIFIER_INFO; /* size: 0x0018 */

typedef enum _IO_PRIORITY_HINT
{
  IoPriorityVeryLow = 0,
  IoPriorityLow = 1,
  IoPriorityNormal = 2,
  IoPriorityHigh = 3,
  IoPriorityCritical = 4,
  MaxIoPriorityTypes = 5,
} IO_PRIORITY_HINT, *PIO_PRIORITY_HINT;

typedef enum _ATOM_INFORMATION_CLASS
{
  AtomBasicInformation = 0,
  AtomTableInformation = 1,
} ATOM_INFORMATION_CLASS, *PATOM_INFORMATION_CLASS;

struct ISynchronizeEvent
{
}; /* size: 0x0008 */

enum tagRunAsType
{
  RunAsSpecifiedUser = 0,
  RunAsInteractiveUser = 1,
  RunAsLaunchingUser = 2,
};

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IWeakReference,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0010 */

typedef enum _APTTYPEQUALIFIER
{
  APTTYPEQUALIFIER_NONE = 0,
  APTTYPEQUALIFIER_IMPLICIT_MTA = 1,
  APTTYPEQUALIFIER_NA_ON_MTA = 2,
  APTTYPEQUALIFIER_NA_ON_STA = 3,
  APTTYPEQUALIFIER_NA_ON_IMPLICIT_MTA = 4,
  APTTYPEQUALIFIER_NA_ON_MAINSTA = 5,
  APTTYPEQUALIFIER_APPLICATION_STA = 6,
} APTTYPEQUALIFIER, *PAPTTYPEQUALIFIER;

struct IXMLDocument2
{
}; /* size: 0x0008 */

typedef struct _GROUP_AFFINITY
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned short Group;
  /* 0x000a */ unsigned short Reserved[3];
} GROUP_AFFINITY, *PGROUP_AFFINITY; /* size: 0x0010 */

typedef enum _THDTYPE
{
  THDTYPE_BLOCKMESSAGES = 0,
  THDTYPE_PROCESSMESSAGES = 1,
} THDTYPE, *PTHDTYPE;

typedef enum _FINDEX_INFO_LEVELS
{
  FindExInfoStandard = 0,
  FindExInfoBasic = 1,
  FindExInfoMaxInfoLevel = 2,
} FINDEX_INFO_LEVELS, *PFINDEX_INFO_LEVELS;

struct tagMENUINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ unsigned long dwStyle;
  /* 0x000c */ unsigned int cyMax;
  /* 0x0010 */ struct HBRUSH__* hbrBack;
  /* 0x0018 */ unsigned long dwContextHelpID;
  /* 0x001c */ long Padding_194;
  /* 0x0020 */ unsigned __int64 dwMenuData;
}; /* size: 0x0028 */

class Microsoft::WRL::ComPtr<IInspectable>
{
  /* 0x0000 */ struct IInspectable* ptr_;
}; /* size: 0x0008 */

enum tagTYMED
{
  TYMED_HGLOBAL = 1,
  TYMED_FILE = 2,
  TYMED_ISTREAM = 4,
  TYMED_ISTORAGE = 8,
  TYMED_GDI = 16,
  TYMED_MFPICT = 32,
  TYMED_ENHMF = 64,
  TYMED_NULL = 0,
};

typedef struct _MINIDUMP_UNLOADED_MODULE_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
} MINIDUMP_UNLOADED_MODULE_LIST, *PMINIDUMP_UNLOADED_MODULE_LIST; /* size: 0x000c */

typedef enum _WAIT_TYPE
{
  WaitAll = 0,
  WaitAny = 1,
  WaitNotification = 2,
} WAIT_TYPE, *PWAIT_TYPE;

typedef struct _SYSTEM_SPCALL2_INFORMATION
{
  /* 0x0000 */ void* InputData;
  /* 0x0008 */ void* OutputData;
  /* 0x0010 */ unsigned long InputDataSize;
  /* 0x0014 */ unsigned long OutputDataSize;
  /* 0x0018 */ unsigned long Version;
  /* 0x001c */ long __PADDING__[1];
} SYSTEM_SPCALL2_INFORMATION, *PSYSTEM_SPCALL2_INFORMATION; /* size: 0x0020 */

typedef struct _SYSTEM_PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned char CurrentFrequency;
  /* 0x0001 */ unsigned char ThermalLimitFrequency;
  /* 0x0002 */ unsigned char ConstantThrottleFrequency;
  /* 0x0003 */ unsigned char DegradedThrottleFrequency;
  /* 0x0004 */ unsigned char LastBusyFrequency;
  /* 0x0005 */ unsigned char LastC3Frequency;
  /* 0x0006 */ unsigned char LastAdjustedBusyFrequency;
  /* 0x0007 */ unsigned char ProcessorMinThrottle;
  /* 0x0008 */ unsigned char ProcessorMaxThrottle;
  /* 0x0009 */ char Padding_195[3];
  /* 0x000c */ unsigned long NumberOfFrequencies;
  /* 0x0010 */ unsigned long PromotionCount;
  /* 0x0014 */ unsigned long DemotionCount;
  /* 0x0018 */ unsigned long ErrorCount;
  /* 0x001c */ unsigned long RetryCount;
  /* 0x0020 */ unsigned __int64 CurrentFrequencyTime;
  /* 0x0028 */ unsigned __int64 CurrentProcessorTime;
  /* 0x0030 */ unsigned __int64 CurrentProcessorIdleTime;
  /* 0x0038 */ unsigned __int64 LastProcessorTime;
  /* 0x0040 */ unsigned __int64 LastProcessorIdleTime;
} SYSTEM_PROCESSOR_POWER_INFORMATION, *PSYSTEM_PROCESSOR_POWER_INFORMATION; /* size: 0x0048 */

typedef struct _CERT_POLICY_MAPPING
{
  /* 0x0000 */ char* pszIssuerDomainPolicy;
  /* 0x0008 */ char* pszSubjectDomainPolicy;
} CERT_POLICY_MAPPING, *PCERT_POLICY_MAPPING; /* size: 0x0010 */

typedef enum _DEBUG_CONTROL_SPACE_ITEM
{
  DEBUG_CONTROL_SPACE_PCR = 0,
  DEBUG_CONTROL_SPACE_PRCB = 1,
  DEBUG_CONTROL_SPACE_KSPECIAL = 2,
  DEBUG_CONTROL_SPACE_THREAD = 3,
  DEBUG_CONTROL_SPACE_MAXIMUM = 4,
} DEBUG_CONTROL_SPACE_ITEM, *PDEBUG_CONTROL_SPACE_ITEM;

typedef struct _IMAGE_BOUND_IMPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short NumberOfModuleForwarderRefs;
} IMAGE_BOUND_IMPORT_DESCRIPTOR, *PIMAGE_BOUND_IMPORT_DESCRIPTOR; /* size: 0x0008 */

struct tagMCI_ANIM_UPDATE_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct tagRECT rc;
  /* 0x0018 */ struct HDC__* hDC;
}; /* size: 0x0020 */

typedef enum _SECURITY_IMPERSONATION_LEVEL
{
  SecurityAnonymous = 0,
  SecurityIdentification = 1,
  SecurityImpersonation = 2,
  SecurityDelegation = 3,
} SECURITY_IMPERSONATION_LEVEL, *PSECURITY_IMPERSONATION_LEVEL;

enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE
{
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_UNKNOWN = 0,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_OS = 1,
  ACTCTX_COMPATIBILITY_ELEMENT_TYPE_MITIGATION = 2,
};

typedef struct _COMPATIBILITY_CONTEXT_ELEMENT
{
  /* 0x0000 */ struct _GUID Id;
  /* 0x0010 */ enum ACTCTX_COMPATIBILITY_ELEMENT_TYPE Type;
} COMPATIBILITY_CONTEXT_ELEMENT, *PCOMPATIBILITY_CONTEXT_ELEMENT; /* size: 0x0014 */

typedef struct _ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION
{
  /* 0x0000 */ unsigned long ElementCount;
  /* 0x0004 */ struct _COMPATIBILITY_CONTEXT_ELEMENT* Elements /* zero-length array */;
} ACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION, *PACTIVATION_CONTEXT_COMPATIBILITY_INFORMATION; /* size: 0x0004 */

class BUCL::Rtl::CCallDisposition
{
  /* 0x0000 */ long m_NtStatus;
}; /* size: 0x0004 */

enum tagSERVERCALL
{
  SERVERCALL_ISHANDLED = 0,
  SERVERCALL_REJECTED = 1,
  SERVERCALL_RETRYLATER = 2,
};

typedef struct _CREATE_DISK_MBR
{
  /* 0x0000 */ unsigned long Signature;
} CREATE_DISK_MBR, *PCREATE_DISK_MBR; /* size: 0x0004 */

typedef enum _CM_ERROR_CONTROL_TYPE
{
  IgnoreError = 0,
  NormalError = 1,
  SevereError = 2,
  CriticalError = 3,
} CM_ERROR_CONTROL_TYPE, *PCM_ERROR_CONTROL_TYPE;

typedef struct _NCryptAlgorithmName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwAlgOperations;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
} NCryptAlgorithmName, *PNCryptAlgorithmName; /* size: 0x0018 */

struct SYNTHESIZED_MAP
{
  /* 0x0000 */ unsigned short cfSynthesized;
  /* 0x0002 */ unsigned short cfOrig;
}; /* size: 0x0004 */

typedef enum _TOKEN_ELEVATION_TYPE
{
  TokenElevationTypeDefault = 1,
  TokenElevationTypeFull = 2,
  TokenElevationTypeLimited = 3,
} TOKEN_ELEVATION_TYPE, *PTOKEN_ELEVATION_TYPE;

typedef enum _TP_DEBUG_CLASS
{
  TP_DEBUG_CLASS_POOL = 0,
} TP_DEBUG_CLASS, *PTP_DEBUG_CLASS;

struct IRpcProxyBuffer
{
}; /* size: 0x0008 */

typedef struct _CERT_LDAP_STORE_OPENED_PARA
{
  /* 0x0000 */ void* pvLdapSessionHandle;
  /* 0x0008 */ const wchar_t* pwszLdapUrl;
} CERT_LDAP_STORE_OPENED_PARA, *PCERT_LDAP_STORE_OPENED_PARA; /* size: 0x0010 */

typedef struct _STORAGE_ALLOCATE_BC_STREAM_OUTPUT
{
  /* 0x0000 */ unsigned __int64 RequestSize;
  /* 0x0008 */ unsigned long NumOutStandingRequests;
  /* 0x000c */ long __PADDING__[1];
} STORAGE_ALLOCATE_BC_STREAM_OUTPUT, *PSTORAGE_ALLOCATE_BC_STREAM_OUTPUT; /* size: 0x0010 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumberOfClusters;
  /* 0x0008 */ union _LARGE_INTEGER Cluster[1];
} LOOKUP_STREAM_FROM_CLUSTER_INPUT, *PLOOKUP_STREAM_FROM_CLUSTER_INPUT; /* size: 0x0010 */

typedef enum _HARDERROR_RESPONSE
{
  ResponseReturnToCaller = 0,
  ResponseNotHandled = 1,
  ResponseAbort = 2,
  ResponseCancel = 3,
  ResponseIgnore = 4,
  ResponseNo = 5,
  ResponseOk = 6,
  ResponseRetry = 7,
  ResponseYes = 8,
  ResponseTryAgain = 9,
  ResponseContinue = 10,
} HARDERROR_RESPONSE, *PHARDERROR_RESPONSE;

typedef struct _COMMPROP
{
  /* 0x0000 */ unsigned short wPacketLength;
  /* 0x0002 */ unsigned short wPacketVersion;
  /* 0x0004 */ unsigned long dwServiceMask;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwMaxTxQueue;
  /* 0x0010 */ unsigned long dwMaxRxQueue;
  /* 0x0014 */ unsigned long dwMaxBaud;
  /* 0x0018 */ unsigned long dwProvSubType;
  /* 0x001c */ unsigned long dwProvCapabilities;
  /* 0x0020 */ unsigned long dwSettableParams;
  /* 0x0024 */ unsigned long dwSettableBaud;
  /* 0x0028 */ unsigned short wSettableData;
  /* 0x002a */ unsigned short wSettableStopParity;
  /* 0x002c */ unsigned long dwCurrentTxQueue;
  /* 0x0030 */ unsigned long dwCurrentRxQueue;
  /* 0x0034 */ unsigned long dwProvSpec1;
  /* 0x0038 */ unsigned long dwProvSpec2;
  /* 0x003c */ wchar_t wcProvChar[1];
  /* 0x003e */ char __PADDING__[2];
} COMMPROP, *PCOMMPROP; /* size: 0x0040 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0001
{
  ST_SERVER = 1,
  ST_OLDSURROGATE = 2,
  ST_COMPLUSAPP = 3,
  ST_SERVICE = 4,
} _MIDL___MIDL_itf_activate_0000_0010_0001, *P_MIDL___MIDL_itf_activate_0000_0010_0001;

typedef struct __vc_attributes::size_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::size_isAttribute, *P_vc_attributes::size_isAttribute; /* size: 0x0008 */

typedef enum _SYSTEM_FIRMWARE_TABLE_ACTION
{
  SystemFirmwareTable_Enumerate = 0,
  SystemFirmwareTable_Get = 1,
} SYSTEM_FIRMWARE_TABLE_ACTION, *PSYSTEM_FIRMWARE_TABLE_ACTION;

struct tagFORMATETC
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_196[6];
  /* 0x0008 */ struct tagDVTARGETDEVICE* ptd;
  /* 0x0010 */ unsigned long dwAspect;
  /* 0x0014 */ long lindex;
  /* 0x0018 */ unsigned long tymed;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class CStatData
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ long Padding_197;
  /* 0x0008 */ struct tagFORMATETC m_foretc;
  /* 0x0028 */ unsigned long m_dwAdvf;
  /* 0x002c */ long Padding_198;
  /* 0x0030 */ struct IAdviseSink* m_pAdvSink;
  /* 0x0038 */ unsigned long m_dwConnID;
}; /* size: 0x0040 */

struct CArray<CStatData>::ArrayNode
{
  /* 0x0000 */ class CStatData item;
  /* 0x0040 */ unsigned long next;
  /* 0x0044 */ unsigned long prev;
}; /* size: 0x0048 */

struct tagJOYCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ wchar_t szPname[32];
  /* 0x0044 */ unsigned int wXmin;
  /* 0x0048 */ unsigned int wXmax;
  /* 0x004c */ unsigned int wYmin;
  /* 0x0050 */ unsigned int wYmax;
  /* 0x0054 */ unsigned int wZmin;
  /* 0x0058 */ unsigned int wZmax;
  /* 0x005c */ unsigned int wNumButtons;
  /* 0x0060 */ unsigned int wPeriodMin;
  /* 0x0064 */ unsigned int wPeriodMax;
  /* 0x0068 */ unsigned int wRmin;
  /* 0x006c */ unsigned int wRmax;
  /* 0x0070 */ unsigned int wUmin;
  /* 0x0074 */ unsigned int wUmax;
  /* 0x0078 */ unsigned int wVmin;
  /* 0x007c */ unsigned int wVmax;
  /* 0x0080 */ unsigned int wCaps;
  /* 0x0084 */ unsigned int wMaxAxes;
  /* 0x0088 */ unsigned int wNumAxes;
  /* 0x008c */ unsigned int wMaxButtons;
  /* 0x0090 */ wchar_t szRegKey[32];
  /* 0x00d0 */ wchar_t szOEMVxD[260];
}; /* size: 0x02d8 */

enum tagUSERCLASSTYPE
{
  USERCLASSTYPE_FULL = 1,
  USERCLASSTYPE_SHORT = 2,
  USERCLASSTYPE_APPNAME = 3,
};

typedef struct _ALPC_SERVER_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* ThreadHandle;
    } /* size: 0x0008 */ In;
    struct
    {
      /* 0x0000 */ unsigned char ThreadBlocked;
      /* 0x0001 */ char Padding_199[7];
      /* 0x0008 */ void* ConnectedProcessId;
      /* 0x0010 */ struct _UNICODE_STRING ConnectionPortName;
    } /* size: 0x0020 */ Out;
  }; /* size: 0x0020 */
} ALPC_SERVER_INFORMATION, *PALPC_SERVER_INFORMATION; /* size: 0x0020 */

enum tagSF_TYPE
{
  SF_ERROR = 10,
  SF_I1 = 16,
  SF_I2 = 2,
  SF_I4 = 3,
  SF_I8 = 20,
  SF_BSTR = 8,
  SF_UNKNOWN = 13,
  SF_DISPATCH = 9,
  SF_VARIANT = 12,
  SF_RECORD = 36,
  SF_HAVEIID = 0xffff800d,
};

typedef enum __MIDL___MIDL_itf_privact_0000_0009_0001
{
  MARSHOPT_NO_OID_REGISTER = 1,
} _MIDL___MIDL_itf_privact_0000_0009_0001, *P_MIDL___MIDL_itf_privact_0000_0009_0001;

struct IRpcSyntaxNegotiate
{
}; /* size: 0x0008 */

typedef struct _FILE_MAILSLOT_SET_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER* ReadTimeout;
} FILE_MAILSLOT_SET_INFORMATION, *PFILE_MAILSLOT_SET_INFORMATION; /* size: 0x0008 */

class CClassCache::CCEHashTable
{
}; /* size: 0x0028 */

typedef struct _ACL
{
  /* 0x0000 */ unsigned char AclRevision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short AclSize;
  /* 0x0004 */ unsigned short AceCount;
  /* 0x0006 */ unsigned short Sbz2;
} ACL, *PACL; /* size: 0x0008 */

typedef struct _PROPSHEETPAGEW_V1
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const wchar_t* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
} PROPSHEETPAGEW_V1, *PPROPSHEETPAGEW_V1; /* size: 0x0048 */

enum tagPreferredServerBitness
{
  SERVER_BITNESS_DEFAULT = 0,
  SERVER_BITNESS_FOLLOW_CLIENT = 1,
  SERVER_BITNESS_32BIT = 2,
  SERVER_BITNESS_64BIT = 3,
};

typedef struct _FILE_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0010 */ union _LARGE_INTEGER QuotaUsed;
  /* 0x0018 */ union _LARGE_INTEGER QuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER QuotaLimit;
  /* 0x0028 */ struct _SID Sid;
  /* 0x0034 */ long __PADDING__[1];
} FILE_QUOTA_INFORMATION, *PFILE_QUOTA_INFORMATION; /* size: 0x0038 */

struct IAuthenticateEx
{
}; /* size: 0x0008 */

enum tagAR_STATE
{
  AR_ENABLED = 0,
  AR_DISABLED = 1,
  AR_SUPPRESSED = 2,
  AR_REMOTESESSION = 4,
  AR_MULTIMON = 8,
  AR_NOSENSOR = 16,
  AR_NOT_SUPPORTED = 32,
  AR_DOCKED = 64,
  AR_LAPTOP = 128,
};

typedef enum _SC_ENUM_TYPE
{
  SC_ENUM_PROCESS_INFO = 0,
} SC_ENUM_TYPE, *PSC_ENUM_TYPE;

typedef struct _FILE_FS_CONTROL_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FreeSpaceStartFiltering;
  /* 0x0008 */ union _LARGE_INTEGER FreeSpaceThreshold;
  /* 0x0010 */ union _LARGE_INTEGER FreeSpaceStopFiltering;
  /* 0x0018 */ union _LARGE_INTEGER DefaultQuotaThreshold;
  /* 0x0020 */ union _LARGE_INTEGER DefaultQuotaLimit;
  /* 0x0028 */ unsigned long FileSystemControlFlags;
  /* 0x002c */ long __PADDING__[1];
} FILE_FS_CONTROL_INFORMATION, *PFILE_FS_CONTROL_INFORMATION; /* size: 0x0030 */

typedef struct _DEVICE_DSM_NOTIFICATION_PARAMETERS
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NumFileTypeIDs;
  /* 0x000c */ struct _GUID FileTypeID[1];
} DEVICE_DSM_NOTIFICATION_PARAMETERS, *PDEVICE_DSM_NOTIFICATION_PARAMETERS; /* size: 0x001c */

typedef enum _RESOURCEMANAGER_INFORMATION_CLASS
{
  ResourceManagerBasicInformation = 0,
  ResourceManagerCompletionInformation = 1,
} RESOURCEMANAGER_INFORMATION_CLASS, *PRESOURCEMANAGER_INFORMATION_CLASS;

struct DISPLAYCONFIG_PATH_SOURCE_INFO
{
  /* 0x0000 */ struct _LUID adapterId;
  /* 0x0008 */ unsigned int id;
  /* 0x000c */ unsigned int modeInfoIdx;
  /* 0x0010 */ unsigned int statusFlags;
}; /* size: 0x0014 */

enum DISPLAYCONFIG_ROTATION
{
  DISPLAYCONFIG_ROTATION_IDENTITY = 1,
  DISPLAYCONFIG_ROTATION_ROTATE90 = 2,
  DISPLAYCONFIG_ROTATION_ROTATE180 = 3,
  DISPLAYCONFIG_ROTATION_ROTATE270 = 4,
  DISPLAYCONFIG_ROTATION_FORCE_UINT32 = -1,
};

struct DISPLAYCONFIG_PATH_TARGET_INFO
{
  /* 0x0000 */ struct _LUID adapterId;
  /* 0x0008 */ unsigned int id;
  /* 0x000c */ unsigned int modeInfoIdx;
  /* 0x0010 */ enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
  /* 0x0014 */ enum DISPLAYCONFIG_ROTATION rotation;
  /* 0x0018 */ enum DISPLAYCONFIG_SCALING scaling;
  /* 0x001c */ struct DISPLAYCONFIG_RATIONAL refreshRate;
  /* 0x0024 */ enum DISPLAYCONFIG_SCANLINE_ORDERING scanLineOrdering;
  /* 0x0028 */ int targetAvailable;
  /* 0x002c */ unsigned int statusFlags;
}; /* size: 0x0030 */

struct DISPLAYCONFIG_PATH_INFO
{
  /* 0x0000 */ struct DISPLAYCONFIG_PATH_SOURCE_INFO sourceInfo;
  /* 0x0014 */ struct DISPLAYCONFIG_PATH_TARGET_INFO targetInfo;
  /* 0x0044 */ unsigned int flags;
}; /* size: 0x0048 */

typedef struct _TXFS_START_RM_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_200;
  /* 0x0008 */ unsigned __int64 LogContainerSize;
  /* 0x0010 */ unsigned long LogContainerCountMin;
  /* 0x0014 */ unsigned long LogContainerCountMax;
  /* 0x0018 */ unsigned long LogGrowthIncrement;
  /* 0x001c */ unsigned long LogAutoShrinkPercentage;
  /* 0x0020 */ unsigned long TmLogPathOffset;
  /* 0x0024 */ unsigned short TmLogPathLength;
  /* 0x0026 */ unsigned short LoggingMode;
  /* 0x0028 */ unsigned short LogPathLength;
  /* 0x002a */ unsigned short Reserved;
  /* 0x002c */ wchar_t LogPath[1];
  /* 0x002e */ char __PADDING__[2];
} TXFS_START_RM_INFORMATION, *PTXFS_START_RM_INFORMATION; /* size: 0x0030 */

typedef enum _DMA_SPEED
{
  Compatible = 0,
  TypeA = 1,
  TypeB = 2,
  TypeC = 3,
  TypeF = 4,
  MaximumDmaSpeed = 5,
} DMA_SPEED, *PDMA_SPEED;

typedef struct _s__RTTIClassHierarchyDescriptor
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long attributes;
  /* 0x0008 */ unsigned long numBaseClasses;
  /* 0x000c */ const struct _s__RTTIBaseClassArray* pBaseClassArray;
} s__RTTIClassHierarchyDescriptor, *Ps__RTTIClassHierarchyDescriptor; /* size: 0x0014 */

typedef struct _PROPSHEETPAGEA_V1
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const char* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
} PROPSHEETPAGEA_V1, *PPROPSHEETPAGEA_V1; /* size: 0x0048 */

typedef enum _TRANSACTION_STATE
{
  TransactionStateNormal = 1,
  TransactionStateIndoubt = 2,
  TransactionStateCommittedNotify = 3,
} TRANSACTION_STATE, *PTRANSACTION_STATE;

struct NUMPARSE
{
  /* 0x0000 */ int cDig;
  /* 0x0004 */ unsigned long dwInFlags;
  /* 0x0008 */ unsigned long dwOutFlags;
  /* 0x000c */ int cchUsed;
  /* 0x0010 */ int nBaseShift;
  /* 0x0014 */ int nPwr10;
}; /* size: 0x0018 */

typedef struct _CM_MCA_POS_DATA
{
  /* 0x0000 */ unsigned short AdapterId;
  /* 0x0002 */ unsigned char PosData1;
  /* 0x0003 */ unsigned char PosData2;
  /* 0x0004 */ unsigned char PosData3;
  /* 0x0005 */ unsigned char PosData4;
} CM_MCA_POS_DATA, *PCM_MCA_POS_DATA; /* size: 0x0006 */

class BUCL::CConvertToSignedType<int>
{
}; /* size: 0x0001 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY
{
  /* 0x0000 */ unsigned long DeviceInstance;
  /* 0x0004 */ unsigned long DeviceFlags;
  /* 0x0008 */ unsigned long ResourceType;
  /* 0x000c */ long Padding_201;
  /* 0x0010 */ unsigned __int64 ResourceStart;
  /* 0x0018 */ unsigned __int64 ResourceEnd;
  /* 0x0020 */ unsigned long ResourceFlags;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_ENTRY, *PPLUGPLAY_CONTROL_CONFLICT_ENTRY; /* size: 0x0028 */

typedef enum _QUERY_FILE_LAYOUT_FILTER_TYPE
{
  QUERY_FILE_LAYOUT_FILTER_TYPE_NONE = 0,
  QUERY_FILE_LAYOUT_FILTER_TYPE_CLUSTERS = 1,
  QUERY_FILE_LAYOUT_FILTER_TYPE_FILEID = 2,
  QUERY_FILE_LAYOUT_NUM_FILTER_TYPES = 3,
} QUERY_FILE_LAYOUT_FILTER_TYPE, *PQUERY_FILE_LAYOUT_FILTER_TYPE;

class CBasedMSFPagePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _JOB_INFO_3
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ unsigned long NextJobId;
  /* 0x0008 */ unsigned long Reserved;
} JOB_INFO_3, *PJOB_INFO_3; /* size: 0x000c */

typedef enum _TIMER_SET_INFORMATION_CLASS
{
  TimerSetCoalescableTimer = 0,
  MaxTimerInfoClass = 1,
} TIMER_SET_INFORMATION_CLASS, *PTIMER_SET_INFORMATION_CLASS;

typedef struct _CMC_TAGGED_CERT_REQUEST
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_202;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SignedCertRequest;
} CMC_TAGGED_CERT_REQUEST, *PCMC_TAGGED_CERT_REQUEST; /* size: 0x0018 */

typedef enum __MIDL_IAuthenticateEx_0001
{
  AUTHENTICATEF_PROXY = 1,
  AUTHENTICATEF_BASIC = 2,
  AUTHENTICATEF_HTTP = 4,
} _MIDL_IAuthenticateEx_0001, *P_MIDL_IAuthenticateEx_0001;

typedef struct __midl_frag1515_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1515_t, *P_midl_frag1515_t; /* size: 0x0038 */

typedef struct _s__RTTIBaseClassArray
{
  union
  {
    /* 0x0000 */ const struct _s__RTTIBaseClassDescriptor2** arrayOfBaseClassDescriptors /* zero-length array */;
    /* 0x0000 */ long __PADDING__[1];
  }; /* size: 0x0004 */
} s__RTTIBaseClassArray, *Ps__RTTIBaseClassArray; /* size: 0x0004 */

struct OPENCARDNAME_EXW
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_203;
  /* 0x0008 */ unsigned __int64 hSCardContext;
  /* 0x0010 */ struct HWND__* hwndOwner;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long Padding_204;
  /* 0x0020 */ const wchar_t* lpstrTitle;
  /* 0x0028 */ const wchar_t* lpstrSearchDesc;
  /* 0x0030 */ struct HICON__* hIcon;
  /* 0x0038 */ struct OPENCARD_SEARCH_CRITERIAW* pOpenCardSearchCriteria;
  /* 0x0040 */ void* lpfnConnect /* function */;
  /* 0x0048 */ void* pvUserData;
  /* 0x0050 */ unsigned long dwShareMode;
  /* 0x0054 */ unsigned long dwPreferredProtocols;
  /* 0x0058 */ wchar_t* lpstrRdr;
  /* 0x0060 */ unsigned long nMaxRdr;
  /* 0x0064 */ long Padding_205;
  /* 0x0068 */ wchar_t* lpstrCard;
  /* 0x0070 */ unsigned long nMaxCard;
  /* 0x0074 */ unsigned long dwActiveProtocol;
  /* 0x0078 */ unsigned __int64 hCardHandle;
}; /* size: 0x0080 */

enum tagSTGMOVE
{
  STGMOVE_MOVE = 0,
  STGMOVE_COPY = 1,
  STGMOVE_SHALLOWCOPY = 2,
};

typedef struct _DMA_CONFIGURATION_BYTE0
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Channel : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 3; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE0, *PDMA_CONFIGURATION_BYTE0; /* size: 0x0001 */

typedef struct _DMA_CONFIGURATION_BYTE1
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Reserved0 : 2; /* bit position: 0 */
    /* 0x0000 */ unsigned char TransferSize : 2; /* bit position: 2 */
    /* 0x0000 */ unsigned char Timing : 2; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved1 : 2; /* bit position: 6 */
  }; /* bitfield */
} DMA_CONFIGURATION_BYTE1, *PDMA_CONFIGURATION_BYTE1; /* size: 0x0001 */

typedef struct _EISA_DMA_CONFIGURATION
{
  /* 0x0000 */ struct _DMA_CONFIGURATION_BYTE0 ConfigurationByte0;
  /* 0x0001 */ struct _DMA_CONFIGURATION_BYTE1 ConfigurationByte1;
} EISA_DMA_CONFIGURATION, *PEISA_DMA_CONFIGURATION; /* size: 0x0002 */

typedef enum _IRQ_GROUP_POLICY
{
  GroupAffinityAllGroupZero = 0,
  GroupAffinityDontCare = 1,
} IRQ_GROUP_POLICY, *PIRQ_GROUP_POLICY;

typedef struct _SERVICE_TIMECHANGE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER liNewTime;
  /* 0x0008 */ union _LARGE_INTEGER liOldTime;
} SERVICE_TIMECHANGE_INFO, *PSERVICE_TIMECHANGE_INFO; /* size: 0x0010 */

struct IXMLDOMNamedNodeMap
{
}; /* size: 0x0008 */

struct tagMCI_OPEN_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const char* lpstrDeviceType;
  /* 0x0014 */ const char* lpstrElementName;
  /* 0x001c */ const char* lpstrAlias;
}; /* size: 0x0024 */

typedef enum _ALPC_MESSAGE_INFORMATION_CLASS
{
  AlpcMessageSidInformation = 0,
  AlpcMessageTokenModifiedIdInformation = 1,
} ALPC_MESSAGE_INFORMATION_CLASS, *PALPC_MESSAGE_INFORMATION_CLASS;

typedef struct _RTL_DYNAMIC_HASH_TABLE
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Shift;
  /* 0x0008 */ unsigned long TableSize;
  /* 0x000c */ unsigned long Pivot;
  /* 0x0010 */ unsigned long DivisorMask;
  /* 0x0014 */ unsigned long NumEntries;
  /* 0x0018 */ unsigned long NonEmptyBuckets;
  /* 0x001c */ unsigned long NumEnumerators;
  /* 0x0020 */ void* Directory;
} RTL_DYNAMIC_HASH_TABLE, *PRTL_DYNAMIC_HASH_TABLE; /* size: 0x0028 */

class BUCL::CDequeLinkage
{
  /* 0x0000 */ long Padding_206[4];
  /* 0x0010 */ class BUCL::CDequeBase* m_pDeque;
}; /* size: 0x0018 */

typedef struct _RTL_DYNAMIC_HASH_TABLE_CONTEXT
{
  /* 0x0000 */ struct _LIST_ENTRY* ChainHead;
  /* 0x0008 */ struct _LIST_ENTRY* PrevLinkage;
  /* 0x0010 */ unsigned __int64 Signature;
} RTL_DYNAMIC_HASH_TABLE_CONTEXT, *PRTL_DYNAMIC_HASH_TABLE_CONTEXT; /* size: 0x0018 */

class CSyncSync
{
  /* 0x0000 */ long Padding_207[6];
  /* 0x0018 */ class CPicture* m_ppictGuest2;
  /* 0x0020 */ struct IImageFilter* m_ifltGuest;
}; /* size: 0x0028 */

typedef struct _PRINTER_INFO_1W
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_208;
  /* 0x0008 */ wchar_t* pDescription;
  /* 0x0010 */ wchar_t* pName;
  /* 0x0018 */ wchar_t* pComment;
} PRINTER_INFO_1W, *PPRINTER_INFO_1W; /* size: 0x0020 */

typedef enum _FP_IEEE_COMPARE_RESULT
{
  FpCompareEqual = 0,
  FpCompareGreater = 1,
  FpCompareLess = 2,
  FpCompareUnordered = 3,
} FP_IEEE_COMPARE_RESULT, *PFP_IEEE_COMPARE_RESULT;

struct IPerPropertyBrowsing
{
}; /* size: 0x0008 */

typedef enum _tagOIBDG_FLAGS
{
  OIBDG_APARTMENTTHREADED = 256,
  OIBDG_DATAONLY = 4096,
} tagOIBDG_FLAGS, *PtagOIBDG_FLAGS;

typedef struct _CERT_ALT_NAME_INFO
{
  /* 0x0000 */ unsigned long cAltEntry;
  /* 0x0004 */ long Padding_209;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY* rgAltEntry;
} CERT_ALT_NAME_INFO, *PCERT_ALT_NAME_INFO; /* size: 0x0010 */

typedef struct _CRL_DIST_POINT_NAME
{
  /* 0x0000 */ unsigned long dwDistPointNameChoice;
  /* 0x0004 */ long Padding_210;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO FullName;
} CRL_DIST_POINT_NAME, *PCRL_DIST_POINT_NAME; /* size: 0x0018 */

typedef struct _CRL_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB ReasonFlags;
  /* 0x0030 */ struct _CERT_ALT_NAME_INFO CRLIssuer;
} CRL_DIST_POINT, *PCRL_DIST_POINT; /* size: 0x0040 */

enum tagSTREAM_SEEK
{
  STREAM_SEEK_SET = 0,
  STREAM_SEEK_CUR = 1,
  STREAM_SEEK_END = 2,
};

struct IStorageReplica
{
}; /* size: 0x0008 */

enum tagCoModuleType
{
  CO_MODULE_UNKNOWN = 0,
  CO_MODULE_32BIT = 1,
  CO_MODULE_64BIT = 2,
};

struct IMarshalOptions
{
}; /* size: 0x0008 */

typedef struct _CERT_POLICY_CONSTRAINTS_INFO
{
  /* 0x0000 */ int fRequireExplicitPolicy;
  /* 0x0004 */ unsigned long dwRequireExplicitPolicySkipCerts;
  /* 0x0008 */ int fInhibitPolicyMapping;
  /* 0x000c */ unsigned long dwInhibitPolicyMappingSkipCerts;
} CERT_POLICY_CONSTRAINTS_INFO, *PCERT_POLICY_CONSTRAINTS_INFO; /* size: 0x0010 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned short>
{
}; /* size: 0x0001 */

enum LATENCY_TIME
{
  LT_DONT_CARE = 0,
  LT_LOWEST_LATENCY = 1,
};

typedef struct _NETRESOURCEW
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0018 */ wchar_t* lpRemoteName;
  /* 0x0020 */ wchar_t* lpComment;
  /* 0x0028 */ wchar_t* lpProvider;
} NETRESOURCEW, *PNETRESOURCEW; /* size: 0x0030 */

typedef struct _s__RTTICompleteObjectLocator2
{
  /* 0x0000 */ unsigned long signature;
  /* 0x0004 */ unsigned long offset;
  /* 0x0008 */ unsigned long cdOffset;
  /* 0x000c */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0014 */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
  /* 0x001c */ const struct _s__RTTICompleteObjectLocator2* pSelf;
} s__RTTICompleteObjectLocator2, *Ps__RTTICompleteObjectLocator2; /* size: 0x0024 */

typedef struct _CRYPT_ASYNC_RETRIEVAL_COMPLETION
{
  /* 0x0000 */ void* pfnCompletion /* function */;
  /* 0x0008 */ void* pvCompletion;
} CRYPT_ASYNC_RETRIEVAL_COMPLETION, *PCRYPT_ASYNC_RETRIEVAL_COMPLETION; /* size: 0x0010 */

typedef struct _STREAM_LAYOUT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long NextStreamOffset;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ExtentInformationOffset;
  /* 0x0010 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0018 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0020 */ unsigned __int64 Reserved;
  /* 0x0028 */ unsigned long AttributeFlags;
  /* 0x002c */ unsigned long StreamIdentifierLength;
  /* 0x0030 */ wchar_t StreamIdentifier[1];
  /* 0x0032 */ char __PADDING__[6];
} STREAM_LAYOUT_ENTRY, *PSTREAM_LAYOUT_ENTRY; /* size: 0x0038 */

enum tagURLZONE
{
  URLZONE_INVALID = -1,
  URLZONE_PREDEFINED_MIN = 0,
  URLZONE_LOCAL_MACHINE = 0,
  URLZONE_INTRANET = 1,
  URLZONE_TRUSTED = 2,
  URLZONE_INTERNET = 3,
  URLZONE_UNTRUSTED = 4,
  URLZONE_PREDEFINED_MAX = 999,
  URLZONE_USER_MIN = 1000,
  URLZONE_USER_MAX = 10000,
};

class CBasedUpdatePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CUpdateList
{
  /* 0x0000 */ class CBasedUpdatePtr _pudHead;
  /* 0x0008 */ class CBasedUpdatePtr _pudTail;
}; /* size: 0x0010 */

enum RpcProxyPerfCounters
{
  RpcCurrentUniqueUser = 1,
  RpcBackEndConnectionAttempts = 2,
  RpcBackEndConnectionFailed = 3,
  RpcRequestsPerSecond = 4,
  RpcIncomingConnections = 5,
  RpcIncomingBandwidth = 6,
  RpcOutgoingBandwidth = 7,
  RpcAttemptedLbsDecisions = 8,
  RpcFailedLbsDecisions = 9,
  RpcAttemptedLbsMessages = 10,
  RpcFailedLbsMessages = 11,
  RpcLastCounter = 12,
};

typedef struct _SMALL_RECT
{
  /* 0x0000 */ short Left;
  /* 0x0002 */ short Top;
  /* 0x0004 */ short Right;
  /* 0x0006 */ short Bottom;
} SMALL_RECT, *PSMALL_RECT; /* size: 0x0008 */

typedef struct _CONSOLE_SELECTION_INFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct _COORD dwSelectionAnchor;
  /* 0x0008 */ struct _SMALL_RECT srSelection;
} CONSOLE_SELECTION_INFO, *PCONSOLE_SELECTION_INFO; /* size: 0x0010 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned long>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::nonbrowsableAttribute
{
} _vc_attributes::nonbrowsableAttribute, *P_vc_attributes::nonbrowsableAttribute; /* size: 0x0001 */

enum tagDIMENSION
{
  XDIMENSION = 88,
  YDIMENSION = 89,
};

enum ASSOCCLASS
{
  ASSOCCLASS_SHELL_KEY = 0,
  ASSOCCLASS_PROGID_KEY = 1,
  ASSOCCLASS_PROGID_STR = 2,
  ASSOCCLASS_CLSID_KEY = 3,
  ASSOCCLASS_CLSID_STR = 4,
  ASSOCCLASS_APP_KEY = 5,
  ASSOCCLASS_APP_STR = 6,
  ASSOCCLASS_SYSTEM_STR = 7,
  ASSOCCLASS_FOLDER = 8,
  ASSOCCLASS_STAR = 9,
  ASSOCCLASS_FIXED_PROGID_STR = 10,
  ASSOCCLASS_PROTOCOL_STR = 11,
};

enum tagFEEDBACK_TYPE
{
  FEEDBACK_TOUCH_CONTACTVISUALIZATION = 1,
  FEEDBACK_PEN_BARRELVISUALIZATION = 2,
  FEEDBACK_PEN_TAP = 3,
  FEEDBACK_PEN_DOUBLETAP = 4,
  FEEDBACK_PEN_PRESSANDHOLD = 5,
  FEEDBACK_PEN_RIGHTTAP = 6,
  FEEDBACK_TOUCH_TAP = 7,
  FEEDBACK_TOUCH_DOUBLETAP = 8,
  FEEDBACK_TOUCH_PRESSANDHOLD = 9,
  FEEDBACK_TOUCH_RIGHTTAP = 10,
  FEEDBACK_GESTURE_PRESSANDTAP = 11,
  FEEDBACK_MAX = -1,
};

typedef struct _MODLOAD_DATA
{
  /* 0x0000 */ unsigned long ssize;
  /* 0x0004 */ unsigned long ssig;
  /* 0x0008 */ void* data;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned long flags;
} MODLOAD_DATA, *PMODLOAD_DATA; /* size: 0x0018 */

class BUCL::CIsSignedType<unsigned char>
{
}; /* size: 0x0001 */

enum EffectiveUnmarshalingPolicy
{
  None = 0,
  Classic = 1,
  Strong = 2,
};

typedef enum _TAG_UNNAMED_14
{
  isBothSigned = 1,
  isBothUnsigned = 0,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_14, *PTAG_UNNAMED_14;

typedef struct _RTL_PERTHREAD_CURDIR
{
  /* 0x0000 */ struct _RTL_DRIVE_LETTER_CURDIR* CurrentDirectories;
  /* 0x0008 */ struct _UNICODE_STRING* ImageName;
  /* 0x0010 */ void* Environment;
} RTL_PERTHREAD_CURDIR, *PRTL_PERTHREAD_CURDIR; /* size: 0x0018 */

typedef enum _PO_CS_DEVICE_NOTIFICATION_TYPE
{
  PoCsDeviceNotificationStorage = 0,
  PoCsDeviceNotificationWiFi = 1,
  PoCsDeviceNotificationMbn = 2,
  PoCsDeviceNotificationAudio = 3,
  PoCsDeviceNotificationMaximum = 4,
} PO_CS_DEVICE_NOTIFICATION_TYPE, *PPO_CS_DEVICE_NOTIFICATION_TYPE;

struct IPersistStreamInit
{
}; /* size: 0x0008 */

enum PS_CREATE_STATE
{
  PsCreateInitialState = 0,
  PsCreateFailOnFileOpen = 1,
  PsCreateFailOnSectionCreate = 2,
  PsCreateFailExeFormat = 3,
  PsCreateFailMachineMismatch = 4,
  PsCreateFailExeName = 5,
  PsCreateSuccess = 6,
  PsCreateMaximumStates = 7,
};

typedef struct _BCRYPT_PSS_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0008 */ unsigned long cbSalt;
  /* 0x000c */ long __PADDING__[1];
} BCRYPT_PSS_PADDING_INFO, *PBCRYPT_PSS_PADDING_INFO; /* size: 0x0010 */

typedef struct _customREMOTE_REQUEST_SCM_INFO
{
  /* 0x0000 */ unsigned long ClientImpLevel;
  /* 0x0004 */ unsigned short cRequestedProtseqs;
  /* 0x0006 */ char Padding_211[2];
  /* 0x0008 */ unsigned short* pRequestedProtseqs;
} customREMOTE_REQUEST_SCM_INFO, *PcustomREMOTE_REQUEST_SCM_INFO; /* size: 0x0010 */

typedef enum _PS_STD_HANDLE_STATE
{
  PsNeverDuplicate = 0,
  PsRequestDuplicate = 1,
  PsAlwaysDuplicate = 2,
  PsMaxStdHandleStates = 3,
} PS_STD_HANDLE_STATE, *PPS_STD_HANDLE_STATE;

enum POWER_USER_PRESENCE_TYPE
{
  UserNotPresent = 0,
  UserPresent = 1,
  UserUnknown = 255,
};

typedef struct _SYSTEM_AUDIT_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_OBJECT_ACE, *PSYSTEM_AUDIT_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

class COleTls
{
  /* 0x0000 */ struct tagSOleTlsData* _pData;
}; /* size: 0x0008 */

struct IAsyncManager
{
}; /* size: 0x0008 */

typedef enum _RPC_ASYNC_EVENT
{
  RpcCallComplete = 0,
  RpcSendComplete = 1,
  RpcReceiveComplete = 2,
  RpcClientDisconnect = 3,
  RpcClientCancel = 4,
} RPC_ASYNC_EVENT, *PRPC_ASYNC_EVENT;

typedef enum __vc_attributes::threadingAttribute::threading_e
{
  apartment = 1,
  single = 2,
  free = 3,
  neutral = 4,
  both = 5,
} _vc_attributes::threadingAttribute::threading_e, *P_vc_attributes::threadingAttribute::threading_e;

class CLimitedStreamBase::UnlockRegion::__l3::<lambda_2B3A7864EDA80C84>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ union _ULARGE_INTEGER& libOffset;
  /* 0x0010 */ union _ULARGE_INTEGER& cb;
  /* 0x0018 */ unsigned long& dwLockType;
}; /* size: 0x0020 */

typedef struct _SERVICE_DELAYED_AUTO_START_INFO
{
  /* 0x0000 */ int fDelayedAutostart;
} SERVICE_DELAYED_AUTO_START_INFO, *PSERVICE_DELAYED_AUTO_START_INFO; /* size: 0x0004 */

typedef struct _RTL_BALANCED_LINKS
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS* Parent;
  /* 0x0008 */ struct _RTL_BALANCED_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_BALANCED_LINKS* RightChild;
  /* 0x0018 */ char Balance;
  /* 0x0019 */ unsigned char Reserved[3];
  /* 0x001c */ long __PADDING__[1];
} RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS; /* size: 0x0020 */

typedef struct _RTL_AVL_TABLE
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedRoot;
  /* 0x0020 */ void* OrderedPointer;
  /* 0x0028 */ unsigned long WhichOrderedElement;
  /* 0x002c */ unsigned long NumberGenericTableElements;
  /* 0x0030 */ unsigned long DepthOfTree;
  /* 0x0034 */ long Padding_212;
  /* 0x0038 */ struct _RTL_BALANCED_LINKS* RestartKey;
  /* 0x0040 */ unsigned long DeleteCount;
  /* 0x0044 */ long Padding_213;
  /* 0x0048 */ void* CompareRoutine /* function */;
  /* 0x0050 */ void* AllocateRoutine /* function */;
  /* 0x0058 */ void* FreeRoutine /* function */;
  /* 0x0060 */ void* TableContext;
} RTL_AVL_TABLE, *PRTL_AVL_TABLE; /* size: 0x0068 */

class XIPersistStorage
{
  /* 0x0000 */ struct IPersistStorage* _p;
}; /* size: 0x0008 */

typedef struct _CRYPT_ECC_PRIVATE_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_214;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0018 */ char* szCurveOid;
  /* 0x0020 */ struct _CRYPT_BIT_BLOB PublicKey;
} CRYPT_ECC_PRIVATE_KEY_INFO, *PCRYPT_ECC_PRIVATE_KEY_INFO; /* size: 0x0038 */

typedef enum _RTL_STACK_TRACE_DATABASE_CONTROL
{
  BackTraceDatabaseCreate = 0,
  BackTraceDatabaseDelete = 1,
  BackTraceDatabaseFlush = 2,
  BackTraceDatabaseMaxControl = 3,
} RTL_STACK_TRACE_DATABASE_CONTROL, *PRTL_STACK_TRACE_DATABASE_CONTROL;

typedef struct _CRYPT_RETRIEVE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_215;
  /* 0x0008 */ struct _FILETIME* pLastSyncTime;
  /* 0x0010 */ unsigned long dwMaxUrlRetrievalByteCount;
  /* 0x0014 */ long Padding_216;
  /* 0x0018 */ struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO* pPreFetchInfo;
  /* 0x0020 */ struct _CRYPTNET_URL_CACHE_FLUSH_INFO* pFlushInfo;
  /* 0x0028 */ struct _CRYPTNET_URL_CACHE_RESPONSE_INFO** ppResponseInfo;
  /* 0x0030 */ wchar_t* pwszCacheFileNamePrefix;
  /* 0x0038 */ struct _FILETIME* pftCacheResync;
  /* 0x0040 */ int fProxyCacheRetrieval;
  /* 0x0044 */ unsigned long dwHttpStatusCode;
} CRYPT_RETRIEVE_AUX_INFO, *PCRYPT_RETRIEVE_AUX_INFO; /* size: 0x0048 */

class Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits>
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION* sync_;
}; /* size: 0x0008 */

enum tagTYSPEC
{
  TYSPEC_CLSID = 0,
  TYSPEC_FILEEXT = 1,
  TYSPEC_MIMETYPE = 2,
  TYSPEC_FILENAME = 3,
  TYSPEC_PROGID = 4,
  TYSPEC_PACKAGENAME = 5,
  TYSPEC_OBJECTID = 6,
};

typedef struct _SYSTEM_INFO
{
  union
  {
    /* 0x0000 */ unsigned long dwOemId;
    struct
    {
      /* 0x0000 */ unsigned short wProcessorArchitecture;
      /* 0x0002 */ unsigned short wReserved;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long dwPageSize;
  /* 0x0008 */ void* lpMinimumApplicationAddress;
  /* 0x0010 */ void* lpMaximumApplicationAddress;
  /* 0x0018 */ unsigned __int64 dwActiveProcessorMask;
  /* 0x0020 */ unsigned long dwNumberOfProcessors;
  /* 0x0024 */ unsigned long dwProcessorType;
  /* 0x0028 */ unsigned long dwAllocationGranularity;
  /* 0x002c */ unsigned short wProcessorLevel;
  /* 0x002e */ unsigned short wProcessorRevision;
} SYSTEM_INFO, *PSYSTEM_INFO; /* size: 0x0030 */

typedef enum __MIDL_ICodeInstall_0001
{
  CIP_DISK_FULL = 0,
  CIP_ACCESS_DENIED = 1,
  CIP_NEWER_VERSION_EXISTS = 2,
  CIP_OLDER_VERSION_EXISTS = 3,
  CIP_NAME_CONFLICT = 4,
  CIP_TRUST_VERIFICATION_COMPONENT_MISSING = 5,
  CIP_EXE_SELF_REGISTERATION_TIMEOUT = 6,
  CIP_UNSAFE_TO_ABORT = 7,
  CIP_NEED_REBOOT = 8,
  CIP_NEED_REBOOT_UI_PERMISSION = 9,
} _MIDL_ICodeInstall_0001, *P_MIDL_ICodeInstall_0001;

typedef enum _PROCESS_WORKING_SET_OPERATION
{
  ProcessWorkingSetSwap = 0,
  ProcessWorkingSetEmpty = 1,
  ProcessWorkingSetOperationMax = 2,
} PROCESS_WORKING_SET_OPERATION, *PPROCESS_WORKING_SET_OPERATION;

typedef struct _OBJECT_NAME_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
} OBJECT_NAME_INFORMATION, *POBJECT_NAME_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_217;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ void* CreatorUniqueProcess;
  /* 0x0018 */ unsigned short CreatorBackTraceIndex;
  /* 0x001a */ unsigned short Flags;
  /* 0x001c */ long PointerCount;
  /* 0x0020 */ long HandleCount;
  /* 0x0024 */ unsigned long PagedPoolCharge;
  /* 0x0028 */ unsigned long NonPagedPoolCharge;
  /* 0x002c */ long Padding_218;
  /* 0x0030 */ void* ExclusiveProcessId;
  /* 0x0038 */ void* SecurityDescriptor;
  /* 0x0040 */ struct _OBJECT_NAME_INFORMATION NameInfo;
} SYSTEM_OBJECT_INFORMATION, *PSYSTEM_OBJECT_INFORMATION; /* size: 0x0050 */

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
  /* 0x0000 */ long Padding_219[2];
  /* 0x0008 */ void* handle_;
}; /* size: 0x0010 */

typedef enum _RTL_UMS_THREAD_INFO_CLASS
{
  UmsThreadInvalidInfoClass = 0,
  UmsThreadUserContext = 1,
  UmsThreadPriority = 2,
  UmsThreadAffinity = 3,
  UmsThreadTeb = 4,
  UmsThreadIsSuspended = 5,
  UmsThreadIsTerminated = 6,
  UmsThreadMaxInfoClass = 7,
} RTL_UMS_THREAD_INFO_CLASS, *PRTL_UMS_THREAD_INFO_CLASS;

enum tagGLOBALOPT_RO_FLAGS
{
  COMGLB_STA_MODALLOOP_REMOVE_TOUCH_MESSAGES = 1,
  COMGLB_STA_MODALLOOP_SHARED_QUEUE_REMOVE_INPUT_MESSAGES = 2,
  COMGLB_STA_MODALLOOP_SHARED_QUEUE_DONOT_REMOVE_INPUT_MESSAGES = 4,
  COMGLB_FAST_RUNDOWN = 8,
  COMGLB_RESERVED1 = 16,
  COMGLB_RESERVED2 = 32,
  COMGLB_RESERVED3 = 64,
  COMGLB_STA_MODALLOOP_SHARED_QUEUE_REORDER_POINTER_MESSAGES = 128,
};

typedef struct _EXCEPTION_RECORD
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0010 */ void* ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ long Padding_220;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD, *PEXCEPTION_RECORD; /* size: 0x0098 */

typedef struct _EXCEPTION_DEBUG_INFO
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ unsigned long dwFirstChance;
  /* 0x009c */ long __PADDING__[1];
} EXCEPTION_DEBUG_INFO, *PEXCEPTION_DEBUG_INFO; /* size: 0x00a0 */

typedef struct _CREATE_THREAD_DEBUG_INFO
{
  /* 0x0000 */ void* hThread;
  /* 0x0008 */ void* lpThreadLocalBase;
  /* 0x0010 */ void* lpStartAddress /* function */;
} CREATE_THREAD_DEBUG_INFO, *PCREATE_THREAD_DEBUG_INFO; /* size: 0x0018 */

typedef struct _CREATE_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* hProcess;
  /* 0x0010 */ void* hThread;
  /* 0x0018 */ void* lpBaseOfImage;
  /* 0x0020 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0024 */ unsigned long nDebugInfoSize;
  /* 0x0028 */ void* lpThreadLocalBase;
  /* 0x0030 */ void* lpStartAddress /* function */;
  /* 0x0038 */ void* lpImageName;
  /* 0x0040 */ unsigned short fUnicode;
  /* 0x0042 */ char __PADDING__[6];
} CREATE_PROCESS_DEBUG_INFO, *PCREATE_PROCESS_DEBUG_INFO; /* size: 0x0048 */

typedef struct _EXIT_THREAD_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_THREAD_DEBUG_INFO, *PEXIT_THREAD_DEBUG_INFO; /* size: 0x0004 */

typedef struct _EXIT_PROCESS_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwExitCode;
} EXIT_PROCESS_DEBUG_INFO, *PEXIT_PROCESS_DEBUG_INFO; /* size: 0x0004 */

typedef struct _LOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ void* lpBaseOfDll;
  /* 0x0010 */ unsigned long dwDebugInfoFileOffset;
  /* 0x0014 */ unsigned long nDebugInfoSize;
  /* 0x0018 */ void* lpImageName;
  /* 0x0020 */ unsigned short fUnicode;
  /* 0x0022 */ char __PADDING__[6];
} LOAD_DLL_DEBUG_INFO, *PLOAD_DLL_DEBUG_INFO; /* size: 0x0028 */

typedef struct _UNLOAD_DLL_DEBUG_INFO
{
  /* 0x0000 */ void* lpBaseOfDll;
} UNLOAD_DLL_DEBUG_INFO, *PUNLOAD_DLL_DEBUG_INFO; /* size: 0x0008 */

typedef struct _OUTPUT_DEBUG_STRING_INFO
{
  /* 0x0000 */ char* lpDebugStringData;
  /* 0x0008 */ unsigned short fUnicode;
  /* 0x000a */ unsigned short nDebugStringLength;
  /* 0x000c */ long __PADDING__[1];
} OUTPUT_DEBUG_STRING_INFO, *POUTPUT_DEBUG_STRING_INFO; /* size: 0x0010 */

typedef struct _RIP_INFO
{
  /* 0x0000 */ unsigned long dwError;
  /* 0x0004 */ unsigned long dwType;
} RIP_INFO, *PRIP_INFO; /* size: 0x0008 */

typedef struct _DEBUG_EVENT
{
  /* 0x0000 */ unsigned long dwDebugEventCode;
  /* 0x0004 */ unsigned long dwProcessId;
  /* 0x0008 */ unsigned long dwThreadId;
  /* 0x000c */ long Padding_221;
  union
  {
    union
    {
      /* 0x0010 */ struct _EXCEPTION_DEBUG_INFO Exception;
      /* 0x0010 */ struct _CREATE_THREAD_DEBUG_INFO CreateThread;
      /* 0x0010 */ struct _CREATE_PROCESS_DEBUG_INFO CreateProcessInfo;
      /* 0x0010 */ struct _EXIT_THREAD_DEBUG_INFO ExitThread;
      /* 0x0010 */ struct _EXIT_PROCESS_DEBUG_INFO ExitProcess;
      /* 0x0010 */ struct _LOAD_DLL_DEBUG_INFO LoadDll;
      /* 0x0010 */ struct _UNLOAD_DLL_DEBUG_INFO UnloadDll;
      /* 0x0010 */ struct _OUTPUT_DEBUG_STRING_INFO DebugString;
      /* 0x0010 */ struct _RIP_INFO RipInfo;
    }; /* size: 0x00a0 */
  } /* size: 0x00a0 */ u;
} DEBUG_EVENT, *PDEBUG_EVENT; /* size: 0x00b0 */

enum BinaryState
{
  BinaryState_OK = 0,
  BinaryState_Int8 = 1,
  BinaryState_Int16 = 2,
  BinaryState_Int32 = 3,
};

typedef enum _POWER_PLATFORM_ROLE
{
  PlatformRoleUnspecified = 0,
  PlatformRoleDesktop = 1,
  PlatformRoleMobile = 2,
  PlatformRoleWorkstation = 3,
  PlatformRoleEnterpriseServer = 4,
  PlatformRoleSOHOServer = 5,
  PlatformRoleAppliancePC = 6,
  PlatformRolePerformanceServer = 7,
  PlatformRoleSlate = 8,
  PlatformRoleMaximum = 9,
} POWER_PLATFORM_ROLE, *PPOWER_PLATFORM_ROLE;

struct ITypeComp
{
}; /* size: 0x0008 */

typedef enum _ACCESS_REASON_TYPE
{
  AccessReasonNone = 0,
  AccessReasonAllowedAce = 0x10000,
  AccessReasonDeniedAce = 0x20000,
  AccessReasonAllowedParentAce = 0x30000,
  AccessReasonDeniedParentAce = 0x40000,
  AccessReasonNotGrantedByCape = 0x50000,
  AccessReasonNotGrantedByParentCape = 0x60000,
  AccessReasonNotGrantedToAppContainer = 0x70000,
  AccessReasonMissingPrivilege = 0x100000,
  AccessReasonFromPrivilege = 0x200000,
  AccessReasonIntegrityLevel = 0x300000,
  AccessReasonOwnership = 0x400000,
  AccessReasonNullDacl = 0x500000,
  AccessReasonEmptyDacl = 0x600000,
  AccessReasonNoSD = 0x700000,
  AccessReasonNoGrant = 0x800000,
} ACCESS_REASON_TYPE, *PACCESS_REASON_TYPE;

typedef enum __MIDL_IGetBindHandle_0001
{
  BINDHANDLETYPES_APPCACHE = 0,
  BINDHANDLETYPES_DEPENDENCY = 1,
  BINDHANDLETYPES_COUNT = 2,
} _MIDL_IGetBindHandle_0001, *P_MIDL_IGetBindHandle_0001;

enum FORMATTAG
{
  ftagNone = 0,
  ftagClipFormat = 1,
  ftagString = 2,
};

class CData
{
  /* 0x0000 */ unsigned long m_cbSize;
  /* 0x0004 */ long Padding_222;
  /* 0x0008 */ void* m_pv;
  /* 0x0010 */ void* m_h;
  /* 0x0018 */ int m_fNoFree;
}; /* size: 0x0020 */

class CFormat
{
  /* 0x0000 */ enum FORMATTAG m_ftag;
  /* 0x0004 */ long Padding_223;
  /* 0x0008 */ unsigned short m_cf;
  /* 0x000a */ char Padding_224[6];
  /* 0x0010 */ class CData m_dataFormatString;
}; /* size: 0x0030 */

typedef struct _DRIVER_INFO_4A
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_225;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ char* pEnvironment;
  /* 0x0018 */ char* pDriverPath;
  /* 0x0020 */ char* pDataFile;
  /* 0x0028 */ char* pConfigFile;
  /* 0x0030 */ char* pHelpFile;
  /* 0x0038 */ char* pDependentFiles;
  /* 0x0040 */ char* pMonitorName;
  /* 0x0048 */ char* pDefaultDataType;
  /* 0x0050 */ char* pszzPreviousNames;
} DRIVER_INFO_4A, *PDRIVER_INFO_4A; /* size: 0x0058 */

enum tagLOCKTYPE
{
  LOCK_WRITE = 1,
  LOCK_EXCLUSIVE = 2,
  LOCK_ONLYONCE = 4,
};

typedef struct _RTL_VERIFIER_DLL_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* DllName;
  /* 0x0008 */ unsigned long DllFlags;
  /* 0x000c */ long Padding_226;
  /* 0x0010 */ void* DllAddress;
  /* 0x0018 */ struct _RTL_VERIFIER_THUNK_DESCRIPTOR* DllThunks;
} RTL_VERIFIER_DLL_DESCRIPTOR, *PRTL_VERIFIER_DLL_DESCRIPTOR; /* size: 0x0020 */

typedef enum _JOURNAL_INFORMATION_CLASS
{
  JournalAbsoluteInformation = 0,
  JournalClientInformation = 1,
  MaxJournalInformation = 2,
} JOURNAL_INFORMATION_CLASS, *PJOURNAL_INFORMATION_CLASS;

typedef struct _CERT_TEMPLATE_EXT
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long dwMajorVersion;
  /* 0x000c */ int fMinorVersion;
  /* 0x0010 */ unsigned long dwMinorVersion;
  /* 0x0014 */ long __PADDING__[1];
} CERT_TEMPLATE_EXT, *PCERT_TEMPLATE_EXT; /* size: 0x0018 */

class XIStorage
{
  /* 0x0000 */ struct IStorage* _p;
}; /* size: 0x0008 */

typedef enum _LOGICAL_PROCESSOR_RELATIONSHIP
{
  RelationProcessorCore = 0,
  RelationNumaNode = 1,
  RelationCache = 2,
  RelationProcessorPackage = 3,
  RelationGroup = 4,
  RelationAll = 0xffffffff,
} LOGICAL_PROCESSOR_RELATIONSHIP, *PLOGICAL_PROCESSOR_RELATIONSHIP;

typedef struct _JOURNAL_TRANSACTION_BOUNDARY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_227;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _GUID TransactionID;
} JOURNAL_TRANSACTION_BOUNDARY_INFORMATION, *PJOURNAL_TRANSACTION_BOUNDARY_INFORMATION; /* size: 0x0028 */

class CLimitedWritableStorage::MoveElementTo::__l9::<lambda_3EA709FC53E93FC8>;

typedef struct _PRINTER_INFO_6
{
  /* 0x0000 */ unsigned long dwStatus;
} PRINTER_INFO_6, *PPRINTER_INFO_6; /* size: 0x0004 */

enum ProcessToken::DesignModeState
{
  DesignModeNotDetermined = 0,
  InDesignMode = 1,
  NotInDesignMode = 2,
};

struct tagSWindowData
{
  /* 0x0000 */ struct HWND__* hWnd;
  /* 0x0008 */ unsigned int wFirstMsg;
  /* 0x000c */ unsigned int wLastMsg;
}; /* size: 0x0010 */

enum PIDMSI_STATUS_VALUE
{
  PIDMSI_STATUS_NORMAL = 0,
  PIDMSI_STATUS_NEW = 1,
  PIDMSI_STATUS_PRELIM = 2,
  PIDMSI_STATUS_DRAFT = 3,
  PIDMSI_STATUS_INPROGRESS = 4,
  PIDMSI_STATUS_EDIT = 5,
  PIDMSI_STATUS_REVIEW = 6,
  PIDMSI_STATUS_PROOF = 7,
  PIDMSI_STATUS_FINAL = 8,
  PIDMSI_STATUS_OTHER = 32767,
};

typedef enum __MIDL_IMonikerProp_0001
{
  MIMETYPEPROP = 0,
  USE_SRC_URL = 1,
  CLASSIDPROP = 2,
  TRUSTEDDOWNLOADPROP = 3,
  POPUPLEVELPROP = 4,
} _MIDL_IMonikerProp_0001, *P_MIDL_IMonikerProp_0001;

typedef struct _TRIPLE_LIST_ENTRY
{
  /* 0x0000 */ struct _TRIPLE_LIST_ENTRY* Flink[3];
  /* 0x0018 */ struct _TRIPLE_LIST_ENTRY* Blink;
} TRIPLE_LIST_ENTRY, *PTRIPLE_LIST_ENTRY; /* size: 0x0020 */

typedef struct _TRIPLE_LIST
{
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit0 : 1; /* bit position: 0 */
        /* 0x0000 */ volatile unsigned long ActiveListBit0 : 1; /* bit position: 1 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit0 : 1; /* bit position: 2 */
        /* 0x0000 */ volatile unsigned long SwitchSelectorBit1 : 1; /* bit position: 3 */
        /* 0x0000 */ volatile unsigned long ActiveListBit1 : 1; /* bit position: 4 */
        /* 0x0000 */ volatile unsigned long OverflowActiveListBit1 : 1; /* bit position: 5 */
        /* 0x0000 */ volatile unsigned long ReaderDidTheSwitch : 1; /* bit position: 6 */
        /* 0x0000 */ volatile unsigned long Reserved : 22; /* bit position: 7 */
        /* 0x0000 */ volatile unsigned long ReaderBusy : 1; /* bit position: 29 */
        /* 0x0000 */ volatile unsigned long UpdateReady : 1; /* bit position: 30 */
        /* 0x0000 */ volatile unsigned long OverflowUpdateReady : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0004 */ ControlBits;
    /* 0x0000 */ volatile long CombinedControlBits;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_228;
  /* 0x0008 */ struct _TRIPLE_LIST_ENTRY Head;
  /* 0x0028 */ struct _TRIPLE_LIST_ENTRY* Tail[3];
  /* 0x0040 */ void* RemoveCallback /* function */;
  /* 0x0048 */ void* RemoveContext;
  /* 0x0050 */ struct _TRIPLE_LIST_ENTRY* PendingHead;
  /* 0x0058 */ struct _TRIPLE_LIST_ENTRY** PendingTailPtr;
  /* 0x0060 */ unsigned long PendingListIndex;
  /* 0x0064 */ long __PADDING__[1];
} TRIPLE_LIST, *PTRIPLE_LIST; /* size: 0x0068 */

struct IComProcessInfo3
{
}; /* size: 0x0008 */

typedef struct _numberfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_229;
  /* 0x0010 */ char* lpDecimalSep;
  /* 0x0018 */ char* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ long __PADDING__[1];
} numberfmtA, *PnumberfmtA; /* size: 0x0028 */

enum tagGLOBALOPT_RPCTP_VALUES
{
  COMGLB_RPC_THREADPOOL_SETTING_DEFAULT_POOL = 0,
  COMGLB_RPC_THREADPOOL_SETTING_PRIVATE_POOL = 1,
};

struct tagMCI_GENERIC_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
}; /* size: 0x0008 */

enum tagINVOKEKIND
{
  INVOKE_FUNC = 1,
  INVOKE_PROPERTYGET = 2,
  INVOKE_PROPERTYPUT = 4,
  INVOKE_PROPERTYPUTREF = 8,
};

struct IComClassInfo2
{
}; /* size: 0x0008 */

typedef enum _WNF_STATE_NAME_LIFETIME
{
  WnfWellKnownStateName = 0,
  WnfPermanentStateName = 1,
  WnfPersistentStateName = 2,
  WnfTemporaryStateName = 3,
} WNF_STATE_NAME_LIFETIME, *PWNF_STATE_NAME_LIFETIME;

typedef struct _CM_VIDEO_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long VideoClock;
} CM_VIDEO_DEVICE_DATA, *PCM_VIDEO_DEVICE_DATA; /* size: 0x0008 */

typedef enum _CSV_CONTROL_OP
{
  CsvControlStartRedirectFile = 2,
  CsvControlStopRedirectFile = 3,
  CsvControlQueryRedirectState = 4,
  CsvControlQueryFileRevision = 6,
  CsvControlQueryMdsPath = 8,
} CSV_CONTROL_OP, *PCSV_CONTROL_OP;

enum ZBID
{
  ZBID_DEFAULT = 0,
  ZBID_DESKTOP = 1,
  ZBID_UIACCESS = 2,
  ZBID_IMMERSIVE_IHM = 3,
  ZBID_IMMERSIVE_NOTIFICATION = 4,
  ZBID_IMMERSIVE_APPCHROME = 5,
  ZBID_IMMERSIVE_MOGO = 6,
  ZBID_IMMERSIVE_EDGY = 7,
  ZBID_IMMERSIVE_INACTIVEMOBODY = 8,
  ZBID_IMMERSIVE_INACTIVEDOCK = 9,
  ZBID_IMMERSIVE_ACTIVEMOBODY = 10,
  ZBID_IMMERSIVE_ACTIVEDOCK = 11,
  ZBID_IMMERSIVE_BACKGROUND = 12,
  ZBID_IMMERSIVE_SEARCH = 13,
  ZBID_GENUINE_WINDOWS = 14,
  ZBID_IMMERSIVE_RESTRICTED = 15,
  ZBID_SYSTEM_TOOLS = 16,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ApartmentShutdownNode> >;

typedef struct _SHFILEINFOA
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0008 */ int iIcon;
  /* 0x000c */ unsigned long dwAttributes;
  /* 0x0010 */ char szDisplayName[260];
  /* 0x0114 */ char szTypeName[80];
  /* 0x0164 */ long __PADDING__[1];
} SHFILEINFOA, *PSHFILEINFOA; /* size: 0x0168 */

typedef enum _USER_MARSHAL_CB_TYPE
{
  USER_MARSHAL_CB_BUFFER_SIZE = 0,
  USER_MARSHAL_CB_MARSHALL = 1,
  USER_MARSHAL_CB_UNMARSHALL = 2,
  USER_MARSHAL_CB_FREE = 3,
} USER_MARSHAL_CB_TYPE, *PUSER_MARSHAL_CB_TYPE;

typedef struct _KLDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ void* ExceptionTable;
  /* 0x0018 */ unsigned long ExceptionTableSize;
  /* 0x001c */ long Padding_230;
  /* 0x0020 */ void* GpValue;
  /* 0x0028 */ struct _NON_PAGED_DEBUG_INFO* NonPagedDebugInfo;
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_231;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Unused5;
  /* 0x0070 */ void* SectionPointer;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long CoverageSectionSize;
  /* 0x0080 */ void* CoverageSection;
  /* 0x0088 */ void* LoadedImports;
  /* 0x0090 */ void* PatchInformation;
  /* 0x0098 */ unsigned long SizeOfImageNotRounded;
  /* 0x009c */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY, *PKLDR_DATA_TABLE_ENTRY; /* size: 0x00a0 */

struct IInternetProtocolSinkStackable
{
}; /* size: 0x0008 */

enum tagEventLogSD
{
  EventLog_MACHINEACCESSRESTRICTIONS = 0,
  EventLog_MACHINELAUNCHRESTRICTIONS = 1,
  EventLog_DEFAULTLAUNCHPERMISSIONS = 2,
  EventLog_DEFAULTACCESSPERMISSIONS = 3,
  EventLog_SERVERLAUNCHPERMISSIONS = 4,
  EventLog_SERVERACCESSPERMISSIONSREG = 5,
  EventLog_SERVERACCESSPERMISSIONSPROG = 6,
  EventLog_DONTCARE = 7,
};

typedef struct _NOTIFYICONDATAW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_232;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ unsigned int uFlags;
  /* 0x0018 */ unsigned int uCallbackMessage;
  /* 0x001c */ long Padding_233;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ wchar_t szTip[128];
  /* 0x0128 */ unsigned long dwState;
  /* 0x012c */ unsigned long dwStateMask;
  /* 0x0130 */ wchar_t szInfo[256];
  union
  {
    /* 0x0330 */ unsigned int uTimeout;
    /* 0x0330 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x0334 */ wchar_t szInfoTitle[64];
  /* 0x03b4 */ unsigned long dwInfoFlags;
  /* 0x03b8 */ struct _GUID guidItem;
  /* 0x03c8 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAW, *PNOTIFYICONDATAW; /* size: 0x03d0 */

enum tagBINDSPEED
{
  BINDSPEED_INDEFINITE = 1,
  BINDSPEED_MODERATE = 2,
  BINDSPEED_IMMEDIATE = 3,
};

typedef struct _CMSG_ENCRYPTED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_234;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0020 */ void* pvEncryptionAuxInfo;
} CMSG_ENCRYPTED_ENCODE_INFO, *PCMSG_ENCRYPTED_ENCODE_INFO; /* size: 0x0028 */

enum APPSTATE
{
  ABSENT = 0,
  ASSIGNED = 1,
  PUBLISHED = 2,
};

struct tagContextProperty
{
  /* 0x0000 */ struct _GUID policyId;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ long Padding_235;
  /* 0x0018 */ struct IUnknown* pUnk;
}; /* size: 0x0020 */

typedef struct _QUERY_PERFORMANCE_COUNTER_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long KernelTransition : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long ul;
  }; /* size: 0x0004 */
} QUERY_PERFORMANCE_COUNTER_FLAGS, *PQUERY_PERFORMANCE_COUNTER_FLAGS; /* size: 0x0004 */

typedef struct _SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _QUERY_PERFORMANCE_COUNTER_FLAGS Flags;
  /* 0x0008 */ struct _QUERY_PERFORMANCE_COUNTER_FLAGS ValidFlags;
} SYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION, *PSYSTEM_QUERY_PERFORMANCE_COUNTER_INFORMATION; /* size: 0x000c */

typedef enum _PRT
{
  PRT_IGNORE = 0,
  PRT_CREATE_NEW = 1,
  PRT_USE_THIS = 2,
  PRT_USE_THIS_ONLY = 3,
} PRT, *PPRT;

typedef enum _TAG_UNNAMED_15
{
  isFloat = 0,
  isInt = 1,
} TAG_UNNAMED_15, *PTAG_UNNAMED_15;

struct tagTITLEBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
}; /* size: 0x002c */

typedef enum _PS_WAKE_REASON
{
  PsWakeReasonUser = 0,
  PsWakeReasonExecutionRequired = 1,
  PsWakeReasonKernel = 2,
  PsWakeReasonInstrumentation = 3,
  PsMaxWakeReasons = 4,
} PS_WAKE_REASON, *PPS_WAKE_REASON;

struct tagSecurityInfoData
{
  /* 0x0000 */ unsigned long dwAuthnFlags;
  /* 0x0004 */ long Padding_236;
  /* 0x0008 */ struct _COSERVERINFO* pServerInfo;
  /* 0x0010 */ struct _COAUTHIDENTITY* pAuthIdentityInfo;
}; /* size: 0x0018 */

class SecurityInfo
{
  /* 0x0000 */ long Padding_237[10];
  /* 0x0028 */ struct tagSecurityInfoData _securityInfoData;
  /* 0x0040 */ struct tagSecurityInfoData _securityInfoDataFixedUp;
  /* 0x0058 */ unsigned long _dwFixupServerInfoBufSize;
}; /* size: 0x0060 */

struct tagENTRY
{
  /* 0x0000 */ unsigned long propid;
  /* 0x0004 */ unsigned long cch;
  /* 0x0008 */ char sz[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

enum tagCALLSTATE
{
  CALLSTATE_NOT_IN_CALL = -1,
  CALLSTATE_DATA_NOT_AVAILABLE = 0,
};

typedef struct _PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEVICE_CONTROL_DATA, *PPLUGPLAY_CONTROL_DEVICE_CONTROL_DATA; /* size: 0x0018 */

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0002
{
  SIT_RUNAS_SPECIFIC_USER = 1,
  SIT_RUNAS_INTERACTIVE = 2,
} _MIDL___MIDL_itf_activate_0000_0010_0002, *P_MIDL___MIDL_itf_activate_0000_0010_0002;

typedef struct _DATATYPES_INFO_1A
{
  /* 0x0000 */ char* pName;
} DATATYPES_INFO_1A, *PDATATYPES_INFO_1A; /* size: 0x0008 */

enum SYSGEOCLASS
{
  GEOCLASS_NATION = 16,
  GEOCLASS_REGION = 14,
  GEOCLASS_ALL = 0,
};

typedef struct _SYSTEM_LOOKASIDE_INFORMATION
{
  /* 0x0000 */ unsigned short CurrentDepth;
  /* 0x0002 */ unsigned short MaximumDepth;
  /* 0x0004 */ unsigned long TotalAllocates;
  /* 0x0008 */ unsigned long AllocateMisses;
  /* 0x000c */ unsigned long TotalFrees;
  /* 0x0010 */ unsigned long FreeMisses;
  /* 0x0014 */ unsigned long Type;
  /* 0x0018 */ unsigned long Tag;
  /* 0x001c */ unsigned long Size;
} SYSTEM_LOOKASIDE_INFORMATION, *PSYSTEM_LOOKASIDE_INFORMATION; /* size: 0x0020 */

enum COMPARTMENT_ID
{
  UNSPECIFIED_COMPARTMENT_ID = 0,
  DEFAULT_COMPARTMENT_ID = 1,
};

typedef struct _POWER_SESSION_CONNECT
{
  /* 0x0000 */ unsigned char Connected;
  /* 0x0001 */ unsigned char Console;
} POWER_SESSION_CONNECT, *PPOWER_SESSION_CONNECT; /* size: 0x0002 */

typedef struct _SYSTEM_MANDATORY_LABEL_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_MANDATORY_LABEL_ACE, *PSYSTEM_MANDATORY_LABEL_ACE; /* size: 0x000c */

typedef struct _ENCRYPTION_CERTIFICATE
{
  /* 0x0000 */ unsigned long cbTotalLength;
  /* 0x0004 */ long Padding_238;
  /* 0x0008 */ struct _SID* pUserSid;
  /* 0x0010 */ struct _CERTIFICATE_BLOB* pCertBlob;
} ENCRYPTION_CERTIFICATE, *PENCRYPTION_CERTIFICATE; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_ASSEMBLY_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const wchar_t* AssemblyName;
  /* 0x0010 */ unsigned long AssemblyNameLength;
  /* 0x0014 */ unsigned long HashAlgorithm;
  /* 0x0018 */ unsigned long PseudoKey;
  /* 0x001c */ long __PADDING__[1];
} ACTIVATION_CONTEXT_ASSEMBLY_DATA, *PACTIVATION_CONTEXT_ASSEMBLY_DATA; /* size: 0x0020 */

enum DBREASONENUM15
{
  DBREASON_ROWPOSITION_CHANGED = 15,
  DBREASON_ROWPOSITION_CHAPTERCHANGED = 16,
  DBREASON_ROWPOSITION_CLEARED = 17,
  DBREASON_ROW_ASYNCHINSERT = 18,
};

typedef struct _COSERVERINFO
{
  /* 0x0000 */ unsigned long dwReserved1;
  /* 0x0004 */ long Padding_239;
  /* 0x0008 */ wchar_t* pwszName;
  /* 0x0010 */ struct _COAUTHINFO* pAuthInfo;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ long __PADDING__[1];
} COSERVERINFO, *PCOSERVERINFO; /* size: 0x0020 */

typedef struct _ADDJOB_INFO_1W
{
  /* 0x0000 */ wchar_t* Path;
  /* 0x0008 */ unsigned long JobId;
  /* 0x000c */ long __PADDING__[1];
} ADDJOB_INFO_1W, *PADDJOB_INFO_1W; /* size: 0x0010 */

struct IPersistPropertyBag2
{
}; /* size: 0x0008 */

typedef enum _UNWIND_OP_CODES
{
  UWOP_PUSH_NONVOL = 0,
  UWOP_ALLOC_LARGE = 1,
  UWOP_ALLOC_SMALL = 2,
  UWOP_SET_FPREG = 3,
  UWOP_SAVE_NONVOL = 4,
  UWOP_SAVE_NONVOL_FAR = 5,
  UWOP_EPILOG = 6,
  UWOP_SPARE_CODE = 7,
  UWOP_SAVE_XMM128 = 8,
  UWOP_SAVE_XMM128_FAR = 9,
  UWOP_PUSH_MACHFRAME = 10,
} UNWIND_OP_CODES, *PUNWIND_OP_CODES;

typedef struct _IMAGE_ROM_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long BaseOfBss;
  /* 0x0020 */ unsigned long GprMask;
  /* 0x0024 */ unsigned long CprMask[4];
  /* 0x0034 */ unsigned long GpValue;
} IMAGE_ROM_OPTIONAL_HEADER, *PIMAGE_ROM_OPTIONAL_HEADER; /* size: 0x0038 */

typedef struct _CERT_NAME_VALUE
{
  /* 0x0000 */ unsigned long dwValueType;
  /* 0x0004 */ long Padding_240;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_NAME_VALUE, *PCERT_NAME_VALUE; /* size: 0x0018 */

struct tagXAptCallback
{
  /* 0x0000 */ __int64 pfnCallback;
  /* 0x0008 */ __int64 pParam;
  /* 0x0010 */ __int64 pServerCtx;
  /* 0x0018 */ __int64 pUnk;
  /* 0x0020 */ struct _GUID iid;
  /* 0x0030 */ int iMethod;
  /* 0x0034 */ struct _GUID guidProcessSecret;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

enum tagLOCALFLAG
{
  LOCALF_NONE = 0,
  LOCALF_NONNDR = 2048,
  LOCALF_TOUCHEDASTA = 4096,
};

typedef enum _NORM_FORM
{
  NormalizationOther = 0,
  NormalizationC = 1,
  NormalizationD = 2,
  NormalizationKC = 5,
  NormalizationKD = 6,
} NORM_FORM, *PNORM_FORM;

enum tagCOMSD
{
  SD_LAUNCHPERMISSIONS = 0,
  SD_ACCESSPERMISSIONS = 1,
  SD_LAUNCHRESTRICTIONS = 2,
  SD_ACCESSRESTRICTIONS = 3,
};

struct tagSpecialPropertiesData
{
  /* 0x0000 */ unsigned long dwSessionId;
  /* 0x0004 */ int fRemoteThisSessionId;
  /* 0x0008 */ int fClientImpersonating;
  /* 0x000c */ int fPartitionIDPresent;
  /* 0x0010 */ unsigned long dwDefaultAuthnLvl;
  /* 0x0014 */ struct _GUID guidPartition;
  /* 0x0024 */ unsigned long dwPRTFlags;
  /* 0x0028 */ unsigned long dwOrigClsctx;
  /* 0x002c */ unsigned long dwFlags;
  /* 0x0030 */ unsigned long dwPid;
  /* 0x0034 */ long Padding_241;
  /* 0x0038 */ unsigned __int64 hwnd;
  /* 0x0040 */ unsigned long ulServiceId;
  /* 0x0044 */ unsigned long dwReserved[4];
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

class SpecialProperties
{
  /* 0x0000 */ long Padding_242[8];
  /* 0x0020 */ struct tagSpecialPropertiesData _data;
}; /* size: 0x0078 */

struct tagSTICKYKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

enum CastMethod
{
  CastOK = 0,
  CastCheckLTZero = 1,
  CastCheckGTMax = 2,
  CastCheckMinMaxUnsigned = 3,
  CastCheckMinMaxSigned = 4,
  CastToFloat = 5,
  CastFromFloat = 6,
  CastToBool = 7,
  CastFromBool = 8,
};

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_OUTPUT
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ unsigned long NumberOfMatches;
  /* 0x0008 */ unsigned long BufferSizeRequired;
} LOOKUP_STREAM_FROM_CLUSTER_OUTPUT, *PLOOKUP_STREAM_FROM_CLUSTER_OUTPUT; /* size: 0x000c */

typedef struct _SECURITY_QUALITY_OF_SERVICE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0008 */ unsigned char ContextTrackingMode;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char __PADDING__[2];
} SECURITY_QUALITY_OF_SERVICE, *PSECURITY_QUALITY_OF_SERVICE; /* size: 0x000c */

struct tagCONVCONTEXT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned int wFlags;
  /* 0x0008 */ unsigned int wCountryID;
  /* 0x000c */ int iCodePage;
  /* 0x0010 */ unsigned long dwLangID;
  /* 0x0014 */ unsigned long dwSecurity;
  /* 0x0018 */ struct _SECURITY_QUALITY_OF_SERVICE qos;
}; /* size: 0x0024 */

struct tagCONVINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_243;
  /* 0x0008 */ unsigned __int64 hUser;
  /* 0x0010 */ struct HCONV__* hConvPartner;
  /* 0x0018 */ struct HSZ__* hszSvcPartner;
  /* 0x0020 */ struct HSZ__* hszServiceReq;
  /* 0x0028 */ struct HSZ__* hszTopic;
  /* 0x0030 */ struct HSZ__* hszItem;
  /* 0x0038 */ unsigned int wFmt;
  /* 0x003c */ unsigned int wType;
  /* 0x0040 */ unsigned int wStatus;
  /* 0x0044 */ unsigned int wConvst;
  /* 0x0048 */ unsigned int wLastError;
  /* 0x004c */ long Padding_244;
  /* 0x0050 */ struct HCONVLIST__* hConvList;
  /* 0x0058 */ struct tagCONVCONTEXT ConvCtxt;
  /* 0x007c */ long Padding_245;
  /* 0x0080 */ struct HWND__* hwnd;
  /* 0x0088 */ struct HWND__* hwndPartner;
}; /* size: 0x0090 */

typedef struct _RTL_BUFFER
{
  /* 0x0000 */ unsigned char* Buffer;
  /* 0x0008 */ unsigned char* StaticBuffer;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ unsigned __int64 StaticSize;
} RTL_BUFFER, *PRTL_BUFFER; /* size: 0x0020 */

typedef struct _RTL_UNICODE_STRING_BUFFER
{
  /* 0x0000 */ struct _UNICODE_STRING String;
  /* 0x0010 */ struct _RTL_BUFFER ByteBuffer;
  /* 0x0030 */ unsigned char MinimumStaticBufferForTerminalNul[2];
  /* 0x0032 */ char __PADDING__[6];
} RTL_UNICODE_STRING_BUFFER, *PRTL_UNICODE_STRING_BUFFER; /* size: 0x0038 */

class CLimitedWritableStorage::RenameElement::__l3::<lambda_D6BEF55CA310B083>;

struct IRunningObjectTable
{
}; /* size: 0x0008 */

typedef enum _ALTERNATIVE_ARCHITECTURE_TYPE
{
  StandardDesign = 0,
  NEC98x86 = 1,
  EndAlternatives = 2,
} ALTERNATIVE_ARCHITECTURE_TYPE, *PALTERNATIVE_ARCHITECTURE_TYPE;

typedef struct _DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long QueryFlags;
  /* 0x0008 */ unsigned long HashAlgorithm;
  /* 0x000c */ long Padding_246;
  /* 0x0010 */ union _LARGE_INTEGER RangeOffsetInFile;
  /* 0x0018 */ union _LARGE_INTEGER RangeLength;
} DEDUP_QUERY_FILE_HASHES_INPUT_BUFFER, *PDEDUP_QUERY_FILE_HASHES_INPUT_BUFFER; /* size: 0x0020 */

typedef struct _CM_PNP_BIOS_INSTALLATION_CHECK
{
  /* 0x0000 */ unsigned char Signature[4];
  /* 0x0004 */ unsigned char Revision;
  /* 0x0005 */ unsigned char Length;
  /* 0x0006 */ unsigned short ControlField;
  /* 0x0008 */ unsigned char Checksum;
  /* 0x0009 */ unsigned long EventFlagAddress;
  /* 0x000d */ unsigned short RealModeEntryOffset;
  /* 0x000f */ unsigned short RealModeEntrySegment;
  /* 0x0011 */ unsigned short ProtectedModeEntryOffset;
  /* 0x0013 */ unsigned long ProtectedModeCodeBaseAddress;
  /* 0x0017 */ unsigned long OemDeviceId;
  /* 0x001b */ unsigned short RealModeDataBaseAddress;
  /* 0x001d */ unsigned long ProtectedModeDataBaseAddress;
} CM_PNP_BIOS_INSTALLATION_CHECK, *PCM_PNP_BIOS_INSTALLATION_CHECK; /* size: 0x0021 */

struct IServerLocationInfo
{
}; /* size: 0x0008 */

typedef enum _MEMORY_RESERVE_TYPE
{
  MemoryReserveUserApc = 0,
  MemoryReserveIoCompletion = 1,
  MemoryReserveTypeMax = 2,
} MEMORY_RESERVE_TYPE, *PMEMORY_RESERVE_TYPE;

typedef enum _EVENT_INFORMATION_CLASS
{
  EventBasicInformation = 0,
} EVENT_INFORMATION_CLASS, *PEVENT_INFORMATION_CLASS;

typedef struct _CLIENT_ID
{
  /* 0x0000 */ void* UniqueProcess;
  /* 0x0008 */ void* UniqueThread;
} CLIENT_ID, *PCLIENT_ID; /* size: 0x0010 */

typedef struct _SECTION_IMAGE_INFORMATION
{
  /* 0x0000 */ void* TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_247;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlusNativeReady : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ComPlusILOnly : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 2 */
      /* 0x0033 */ unsigned char ImageMappedFlat : 1; /* bit position: 3 */
      /* 0x0033 */ unsigned char BaseBelow4gb : 1; /* bit position: 4 */
      /* 0x0033 */ unsigned char Reserved : 3; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION, *PSECTION_IMAGE_INFORMATION; /* size: 0x0040 */

typedef struct _RTL_USER_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_248;
  /* 0x0008 */ void* Process;
  /* 0x0010 */ void* Thread;
  /* 0x0018 */ struct _CLIENT_ID ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION ImageInformation;
} RTL_USER_PROCESS_INFORMATION, *PRTL_USER_PROCESS_INFORMATION; /* size: 0x0068 */

typedef struct _TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT
{
  /* 0x0000 */ unsigned long PropagationCookie;
  /* 0x0004 */ struct _GUID UOW;
  /* 0x0014 */ struct _GUID TmIdentity;
  /* 0x0024 */ unsigned long BufferLength;
} TRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT, *PTRANSACTION_NOTIFICATION_PROPAGATE_ARGUMENT; /* size: 0x0028 */

enum COleCache::Locate::__l2::tagFormatType
{
  FORMATTYPE_NONE = 0,
  FORMATTYPE_ANY = 1,
  FORMATTYPE_ENHMF = 2,
  FORMATTYPE_DIB = 3,
  FORMATTYPE_MFPICT = 4,
  FORMATTYPE_USER = 5,
};

typedef struct _EXFAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} EXFAT_STATISTICS, *PEXFAT_STATISTICS; /* size: 0x0024 */

class MultiplicationHelper<unsigned __int64,unsigned __int64,5>
{
}; /* size: 0x0001 */

enum OLETLS_CROSS_THREAD_FLAGS
{
  OLETLS_CROSS_THREAD_PRIORITY_EVENT_PENDING = 1,
  OLETLS_CROSS_THREAD_DISPATCHABLE_CALL_PENDING = 2,
};

struct SPreHeader
{
  /* 0x0000 */ long Padding_249[6];
  /* 0x0018 */ unsigned short _uMinorVersion;
  /* 0x001a */ unsigned short _uDllVersion;
  /* 0x001c */ unsigned short _uByteOrder;
  /* 0x001e */ unsigned short _uSectorShift;
  /* 0x0020 */ unsigned short _uMiniSectorShift;
  /* 0x0022 */ unsigned short _usReserved;
  /* 0x0024 */ unsigned long _ulReserved1;
  /* 0x0028 */ unsigned long _csectDir;
  /* 0x002c */ unsigned long _csectFat;
  /* 0x0030 */ unsigned long _sectDirStart;
  /* 0x0034 */ unsigned long _signature;
  /* 0x0038 */ unsigned long _ulMiniSectorCutoff;
  /* 0x003c */ unsigned long _sectMiniFatStart;
  /* 0x0040 */ unsigned long _csectMiniFat;
  /* 0x0044 */ unsigned long _sectDifStart;
  /* 0x0048 */ unsigned long _csectDif;
}; /* size: 0x004c */

enum RPC_ADDRESS_CHANGE_TYPE
{
  PROTOCOL_NOT_LOADED = 1,
  PROTOCOL_LOADED = 2,
  PROTOCOL_ADDRESS_CHANGE = 3,
};

typedef struct _CRYPTNET_URL_CACHE_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned short wResponseType;
  /* 0x0006 */ unsigned short wResponseFlags;
  /* 0x0008 */ struct _FILETIME LastModifiedTime;
  /* 0x0010 */ unsigned long dwMaxAge;
  /* 0x0014 */ long Padding_250;
  /* 0x0018 */ const wchar_t* pwszETag;
  /* 0x0020 */ unsigned long dwProxyId;
  /* 0x0024 */ long __PADDING__[1];
} CRYPTNET_URL_CACHE_RESPONSE_INFO, *PCRYPTNET_URL_CACHE_RESPONSE_INFO; /* size: 0x0028 */

enum FreeResourcesFlags
{
  RESET_AND_FREE = 1,
  JUST_RESET = 2,
};

typedef enum _REQUESTER_TYPE
{
  KernelRequester = 0,
  UserProcessRequester = 1,
  UserSharedServiceRequester = 2,
} REQUESTER_TYPE, *PREQUESTER_TYPE;

struct IComClassInfo
{
}; /* size: 0x0008 */

typedef enum _TP_LOG_LEVEL
{
  TP_LOG_LEVEL_ERROR = 0,
  TP_LOG_LEVEL_WARNING = 1,
  TP_LOG_LEVEL_INFO = 2,
  TP_LOG_LEVEL_TRACE_ENTER = 3,
  TP_LOG_LEVEL_TRACE_LEAVE = 4,
} TP_LOG_LEVEL, *PTP_LOG_LEVEL;

enum Microsoft::WRL::ModuleType
{
  InProc = 1,
  OutOfProc = 2,
  DisableCaching = 4,
  InProcDisableCaching = 5,
  OutOfProcDisableCaching = 6,
};

class CExtentList
{
  /* 0x0000 */ unsigned long m_cbMonikerExtents;
  /* 0x0004 */ long Padding_251;
  /* 0x0008 */ unsigned char* m_pchMonikerExtents;
}; /* size: 0x0010 */

class CTrackingFileMoniker
{
  /* 0x0000 */ long Padding_252[2];
  /* 0x0008 */ class CFileMoniker* _pCFM;
}; /* size: 0x0010 */

class CMutexSem2
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_cs;
  /* 0x0028 */ int m_fCsInitialized;
}; /* size: 0x0030 */

class CFileMoniker
{
  /* 0x0000 */ long Padding_253[10];
  /* 0x0028 */ struct _GUID m_clsid;
  /* 0x0038 */ class CExtentList m_ExtentList;
  /* 0x0048 */ wchar_t* m_szPath;
  /* 0x0050 */ char* m_pszAnsiPath;
  /* 0x0058 */ unsigned short m_ccPath;
  /* 0x005a */ unsigned short m_cbAnsiPath;
  /* 0x005c */ unsigned long m_dwHashValue;
  struct /* bitfield */
  {
    /* 0x0060 */ unsigned long m_fUnicodeExtent : 1; /* bit position: 0 */
    /* 0x0060 */ unsigned long m_fClassVerified : 1; /* bit position: 1 */
    /* 0x0060 */ unsigned long m_fHashValueValid : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0064 */ unsigned char m_fShellLinkInitialized;
  /* 0x0065 */ char Padding_254[3];
  struct /* bitfield */
  {
    /* 0x0068 */ unsigned long m_fTrackingEnabled : 1; /* bit position: 0 */
    /* 0x0068 */ unsigned long m_fSaveShellLink : 1; /* bit position: 1 */
    /* 0x0068 */ unsigned long m_fDirty : 1; /* bit position: 2 */
    /* 0x0068 */ unsigned long m_fReduceEnabled : 1; /* bit position: 3 */
  }; /* bitfield */
  /* 0x006c */ unsigned short m_cAnti;
  /* 0x006e */ unsigned short m_endServer;
  /* 0x0070 */ enum CFileMoniker::olever m_ole1;
  /* 0x0074 */ long Padding_255;
  /* 0x0078 */ struct IShellLinkW* m_pShellLink;
  /* 0x0080 */ class CTrackingFileMoniker _tfm;
  /* 0x0090 */ class CMutexSem2 m_mxs;
}; /* size: 0x00c0 */

struct IStackWalkerStack
{
}; /* size: 0x0008 */

enum tagCONTEXTEVENT
{
  CONTEXTEVENT_NONE = 0,
  CONTEXTEVENT_CALL = 1,
  CONTEXTEVENT_ENTER = 2,
  CONTEXTEVENT_LEAVE = 4,
  CONTEXTEVENT_RETURN = 8,
  CONTEXTEVENT_CALLFILLBUFFER = 16,
  CONTEXTEVENT_ENTERWITHBUFFER = 32,
  CONTEXTEVENT_LEAVEFILLBUFFER = 64,
  CONTEXTEVENT_RETURNWITHBUFFER = 128,
  CONTEXTEVENT_BEGINCALL = 256,
  CONTEXTEVENT_BEGINENTER = 512,
  CONTEXTEVENT_BEGINLEAVE = 1024,
  CONTEXTEVENT_BEGINRETURN = 2048,
  CONTEXTEVENT_FINISHCALL = 4096,
  CONTEXTEVENT_FINISHENTER = 8192,
  CONTEXTEVENT_FINISHLEAVE = 16384,
  CONTEXTEVENT_FINISHRETURN = 0xffff8000,
  CONTEXTEVENT_BEGINCALLFILLBUFFER = 0x10000,
  CONTEXTEVENT_BEGINENTERWITHBUFFER = 0x20000,
  CONTEXTEVENT_FINISHLEAVEFILLBUFFER = 0x40000,
  CONTEXTEVENT_FINISHRETURNWITHBUFFER = 0x80000,
  CONTEXTEVENT_LEAVEEXCEPTION = 0x100000,
  CONTEXTEVENT_LEAVEEXCEPTIONFILLBUFFER = 0x200000,
  CONTEXTEVENT_RETURNEXCEPTION = 0x400000,
  CONTEXTEVENT_RETURNEXCEPTIONWITHBUFFER = 0x800000,
  CONTEXTEVENT_ADDREFPOLICY = 0x10000000,
  CONTEXTEVENT_RELEASEPOLICY = 0x20000000,
};

typedef struct _IMAGE_FUNCTION_ENTRY64
{
  /* 0x0000 */ unsigned __int64 StartingAddress;
  /* 0x0008 */ unsigned __int64 EndingAddress;
  union
  {
    /* 0x0010 */ unsigned __int64 EndOfPrologue;
    /* 0x0010 */ unsigned __int64 UnwindInfoAddress;
  }; /* size: 0x0008 */
} IMAGE_FUNCTION_ENTRY64, *PIMAGE_FUNCTION_ENTRY64; /* size: 0x0018 */

typedef struct _SHRINK_VOLUME_INFORMATION
{
  /* 0x0000 */ enum _SHRINK_VOLUME_REQUEST_TYPES ShrinkRequestType;
  /* 0x0004 */ long Padding_256;
  /* 0x0008 */ unsigned __int64 Flags;
  /* 0x0010 */ __int64 NewNumberOfSectors;
} SHRINK_VOLUME_INFORMATION, *PSHRINK_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _PORT_INFO_2A
{
  /* 0x0000 */ char* pPortName;
  /* 0x0008 */ char* pMonitorName;
  /* 0x0010 */ char* pDescription;
  /* 0x0018 */ unsigned long fPortType;
  /* 0x001c */ unsigned long Reserved;
} PORT_INFO_2A, *PPORT_INFO_2A; /* size: 0x0020 */

typedef enum __MIDL_IBindStatusCallback_0001
{
  BINDVERB_GET = 0,
  BINDVERB_POST = 1,
  BINDVERB_PUT = 2,
  BINDVERB_CUSTOM = 3,
  BINDVERB_RESERVED1 = 4,
} _MIDL_IBindStatusCallback_0001, *P_MIDL_IBindStatusCallback_0001;

typedef struct _CMSG_CMS_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwRecipientChoice;
  /* 0x0004 */ long Padding_257;
  union
  {
    /* 0x0008 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
    /* 0x0008 */ struct _CMSG_KEY_AGREE_RECIPIENT_INFO* pKeyAgree;
    /* 0x0008 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  }; /* size: 0x0008 */
} CMSG_CMS_RECIPIENT_INFO, *PCMSG_CMS_RECIPIENT_INFO; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_16
{
  skipping = 0,
  tied = 1,
} TAG_UNNAMED_16, *PTAG_UNNAMED_16;

typedef enum _FIRMWARE_TYPE
{
  FirmwareTypeUnknown = 0,
  FirmwareTypeBios = 1,
  FirmwareTypeUefi = 2,
  FirmwareTypeMax = 3,
} FIRMWARE_TYPE, *PFIRMWARE_TYPE;

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
  /* 0x0014 */ long Padding_258;
  /* 0x0018 */ unsigned __int64 BootFlags;
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION; /* size: 0x0020 */

struct IPictureDisp
{
}; /* size: 0x0008 */

struct HACCEL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct ITypeMarshal
{
}; /* size: 0x0008 */

typedef struct _PROVIDOR_INFO_2A
{
  /* 0x0000 */ char* pOrder;
} PROVIDOR_INFO_2A, *PPROVIDOR_INFO_2A; /* size: 0x0008 */

struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA
{
  /* 0x0000 */ void* lpInformation;
  /* 0x0008 */ void* lpSectionBase;
  /* 0x0010 */ unsigned long ulSectionLength;
  /* 0x0014 */ long Padding_259;
  /* 0x0018 */ void* lpSectionGlobalDataBase;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct tagACTCTX_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x0010 */ unsigned long ulLength;
  /* 0x0014 */ long Padding_260;
  /* 0x0018 */ void* lpSectionGlobalData;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long Padding_261;
  /* 0x0028 */ void* lpSectionBase;
  /* 0x0030 */ unsigned long ulSectionTotalLength;
  /* 0x0034 */ long Padding_262;
  /* 0x0038 */ void* hActCtx;
  /* 0x0040 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0044 */ unsigned long ulFlags;
  /* 0x0048 */ struct tagACTCTX_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
}; /* size: 0x0070 */

typedef struct _SYSTEM_HYPERVISOR_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned char HypervisorConnected;
  /* 0x0001 */ unsigned char Spare0[7];
  /* 0x0008 */ unsigned __int64 EnabledAddressSpaceEnlightenments;
} SYSTEM_HYPERVISOR_QUERY_INFORMATION, *PSYSTEM_HYPERVISOR_QUERY_INFORMATION; /* size: 0x0010 */

struct tagWINDOWPLACEMENT
{
  /* 0x0000 */ unsigned int length;
  /* 0x0004 */ unsigned int flags;
  /* 0x0008 */ unsigned int showCmd;
  /* 0x000c */ struct tagPOINT ptMinPosition;
  /* 0x0014 */ struct tagPOINT ptMaxPosition;
  /* 0x001c */ struct tagRECT rcNormalPosition;
}; /* size: 0x002c */

enum tagDLFlags
{
  DL_SAME_AS_LOAD = 1,
  DL_NO_SCRIBBLE_MODE = 2,
  DL_DIRTY_LINK = 4,
  DL_LOCKED_CONTAINER = 8,
  DL_LOCKED_RUNNABLEOBJECT = 16,
  DL_LOCKED_OLEITEMCONTAINER = 32,
  DL_CLEANEDUP = 64,
};

enum CreateStackTraceFlags
{
  CREATESTACKTRACE_ONLYADDRESSES = 1,
};

struct IOlePresObj
{
}; /* size: 0x0008 */

typedef enum _EVENT_TYPE
{
  NotificationEvent = 0,
  SynchronizationEvent = 1,
} EVENT_TYPE, *PEVENT_TYPE;

struct tagGESTURENOTIFYSTRUCT
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTarget;
  /* 0x0010 */ struct tagPOINTS ptsLocation;
  /* 0x0014 */ unsigned long dwInstanceID;
}; /* size: 0x0018 */

typedef enum _ERROR_SEVERITY_VALUE
{
  ErrorRecoverable = 0,
  ErrorFatal = 1,
  ErrorCorrected = 2,
  ErrorOthers = 3,
} ERROR_SEVERITY_VALUE, *PERROR_SEVERITY_VALUE;

struct IOleInPlaceObjectWindowless
{
}; /* size: 0x0008 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;

typedef enum __MIDL___MIDL_itf_activate_0000_0010_0003
{
  SPIF_COMPLUS = 1,
  SPIF_SUSPENDED = 2,
  SPIF_RETIRED = 4,
  SPIF_READY = 8,
  SPIF_PAUSED = 16,
} _MIDL___MIDL_itf_activate_0000_0010_0003, *P_MIDL___MIDL_itf_activate_0000_0010_0003;

struct VOLUME_BITMAP_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0008 */ union _LARGE_INTEGER BitmapSize;
  /* 0x0010 */ unsigned char Buffer[1];
  /* 0x0011 */ char __PADDING__[7];
}; /* size: 0x0018 */

enum DELAYED_RETRIEVAL_TYPE
{
  DRT_FILEITEM = 0,
  DRT_PREFETCHEDTHUMBNAIL = 1,
  DRT_PREFETCHEDPROPERTIES = 2,
  DRT_PROPERTIES = 3,
  DRT_MUSICPROPERTIES = 4,
  DRT_IMAGEPROPERTIES = 5,
  DRT_VIDEOPROPERTIES = 6,
  DRT_DOCUMENTPROPERTIES = 7,
  DRT_BASICPROPERTIES = 8,
  DRT_REMOTEFILEITEM = 9,
};

typedef struct _IMAGE_FILE_HEADER
{
  /* 0x0000 */ unsigned short Machine;
  /* 0x0002 */ unsigned short NumberOfSections;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long PointerToSymbolTable;
  /* 0x000c */ unsigned long NumberOfSymbols;
  /* 0x0010 */ unsigned short SizeOfOptionalHeader;
  /* 0x0012 */ unsigned short Characteristics;
} IMAGE_FILE_HEADER, *PIMAGE_FILE_HEADER; /* size: 0x0014 */

typedef struct _IMAGE_ROM_HEADERS
{
  /* 0x0000 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0014 */ struct _IMAGE_ROM_OPTIONAL_HEADER OptionalHeader;
} IMAGE_ROM_HEADERS, *PIMAGE_ROM_HEADERS; /* size: 0x004c */

typedef struct _IMAGE_IMPORT_DESCRIPTOR
{
  union
  {
    /* 0x0000 */ unsigned long Characteristics;
    /* 0x0000 */ unsigned long OriginalFirstThunk;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned long ForwarderChain;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long FirstThunk;
} IMAGE_IMPORT_DESCRIPTOR, *PIMAGE_IMPORT_DESCRIPTOR; /* size: 0x0014 */

class CAptRpcChnl
{
  /* 0x0000 */ long Padding_263[30];
  /* 0x0078 */ unsigned long _dwTIDCallee;
  /* 0x007c */ unsigned long _dwAptId;
}; /* size: 0x0080 */

enum tagDVASPECT
{
  DVASPECT_CONTENT = 1,
  DVASPECT_THUMBNAIL = 2,
  DVASPECT_ICON = 4,
  DVASPECT_DOCPRINT = 8,
};

struct SSegment
{
  /* 0x0000 */ unsigned long ulOffset;
  /* 0x0004 */ unsigned long sectStart;
  /* 0x0008 */ unsigned long cSect;
}; /* size: 0x000c */

enum tagSTDMSHLFLAGS
{
  SMEXF_SERVER = 1,
  SMEXF_HANDLER = 2,
};

struct SERVICE_TRIGGER_CUSTOM_STATE_ID
{
  /* 0x0000 */ unsigned long Data[2];
}; /* size: 0x0008 */

enum tagDRAGOP
{
  DRAGOP_ENTER = 1,
  DRAGOP_OVER = 2,
  DRAGOP_LEAVE = 3,
  DRAGOP_DROP = 4,
};

struct IWinRTCatalogInternal
{
}; /* size: 0x0008 */

typedef struct _TIME_FIELDS
{
  /* 0x0000 */ short Year;
  /* 0x0002 */ short Month;
  /* 0x0004 */ short Day;
  /* 0x0006 */ short Hour;
  /* 0x0008 */ short Minute;
  /* 0x000a */ short Second;
  /* 0x000c */ short Milliseconds;
  /* 0x000e */ short Weekday;
} TIME_FIELDS, *PTIME_FIELDS; /* size: 0x0010 */

typedef struct _RTL_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _TIME_FIELDS StandardStart;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _TIME_FIELDS DaylightStart;
  /* 0x00a8 */ long DaylightBias;
} RTL_TIME_ZONE_INFORMATION, *PRTL_TIME_ZONE_INFORMATION; /* size: 0x00ac */

enum tagOLEWHICHMK
{
  OLEWHICHMK_CONTAINER = 1,
  OLEWHICHMK_OBJREL = 2,
  OLEWHICHMK_OBJFULL = 3,
};

typedef struct _COMPOUND_ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned short CompoundAceType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long SidStart;
} COMPOUND_ACCESS_ALLOWED_ACE, *PCOMPOUND_ACCESS_ALLOWED_ACE; /* size: 0x0010 */

enum tagRPCOPT_PROPERTIES
{
  COMBND_RPCTIMEOUT = 1,
  COMBND_SERVER_LOCALITY = 2,
  COMBND_RESERVED1 = 4,
};

struct IActivatableClassInformation
{
}; /* size: 0x0008 */

typedef struct _CERT_KEY_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_264;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long __PADDING__[1];
} CERT_KEY_CONTEXT, *PCERT_KEY_CONTEXT; /* size: 0x0018 */

enum DROP_FEEDBACK_ACTION
{
  DFA_REGISTER = 0,
  DFA_UPDATE = 1,
};

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0008 */

typedef enum _LINK_TRACKING_INFORMATION_TYPE
{
  NtfsLinkTrackingInformation = 0,
  DfsLinkTrackingInformation = 1,
} LINK_TRACKING_INFORMATION_TYPE, *PLINK_TRACKING_INFORMATION_TYPE;

class CBasedPagedVectorPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CMSFPage
{
  /* 0x0000 */ class CBasedMSFPagePtr _pmpNext;
  /* 0x0008 */ class CBasedMSFPagePtr _pmpPrev;
  /* 0x0010 */ unsigned long _sid;
  /* 0x0014 */ unsigned long _ulOffset;
  /* 0x0018 */ class CBasedPagedVectorPtr _ppv;
  /* 0x0020 */ unsigned long _sect;
  /* 0x0024 */ unsigned long _dwFlags;
  /* 0x0028 */ long _cReferences;
  /* 0x002c */ long Padding_265;
  /* 0x0030 */ unsigned __int64 ulPadding;
  /* 0x0038 */ unsigned char* _ab /* zero-length array */;
}; /* size: 0x0038 */

typedef enum _GET_FILEEX_INFO_LEVELS
{
  GetFileExInfoStandard = 0,
  GetFileExMaxInfoLevel = 1,
} GET_FILEEX_INFO_LEVELS, *PGET_FILEEX_INFO_LEVELS;

enum IHM_DISPLAY_MODE
{
  IDM_IMMERSIVE = 0,
  IDM_FLOATING = 1,
};

typedef struct _IO_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Option;
  /* 0x0001 */ unsigned char Type;
  /* 0x0002 */ unsigned char ShareDisposition;
  /* 0x0003 */ unsigned char Spare1;
  /* 0x0004 */ unsigned short Flags;
  /* 0x0006 */ unsigned short Spare2;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Port;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory;
      struct
      {
        /* 0x0008 */ unsigned long MinimumVector;
        /* 0x000c */ unsigned long MaximumVector;
        /* 0x0010 */ enum _IRQ_DEVICE_POLICY AffinityPolicy;
        /* 0x0014 */ enum _IRQ_PRIORITY PriorityPolicy;
        /* 0x0018 */ unsigned __int64 TargetedProcessors;
      } /* size: 0x0018 */ Interrupt;
      struct
      {
        /* 0x0008 */ unsigned long MinimumChannel;
        /* 0x000c */ unsigned long MaximumChannel;
      } /* size: 0x0008 */ Dma;
      struct
      {
        /* 0x0008 */ unsigned long RequestLine;
        /* 0x000c */ unsigned long Reserved;
        /* 0x0010 */ unsigned long Channel;
        /* 0x0014 */ unsigned long TransferWidth;
      } /* size: 0x0010 */ DmaV3;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Alignment;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Generic;
      struct
      {
        /* 0x0008 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long MinBusNumber;
        /* 0x0010 */ unsigned long MaxBusNumber;
        /* 0x0014 */ unsigned long Reserved;
      } /* size: 0x0010 */ BusNumber;
      struct
      {
        /* 0x0008 */ unsigned long Priority;
        /* 0x000c */ unsigned long Reserved1;
        /* 0x0010 */ unsigned long Reserved2;
      } /* size: 0x000c */ ConfigData;
      struct
      {
        /* 0x0008 */ unsigned long Length40;
        /* 0x000c */ unsigned long Alignment40;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory40;
      struct
      {
        /* 0x0008 */ unsigned long Length48;
        /* 0x000c */ unsigned long Alignment48;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory48;
      struct
      {
        /* 0x0008 */ unsigned long Length64;
        /* 0x000c */ unsigned long Alignment64;
        /* 0x0010 */ union _LARGE_INTEGER MinimumAddress;
        /* 0x0018 */ union _LARGE_INTEGER MaximumAddress;
      } /* size: 0x0018 */ Memory64;
      struct
      {
        /* 0x0008 */ unsigned char Class;
        /* 0x0009 */ unsigned char Type;
        /* 0x000a */ unsigned char Reserved1;
        /* 0x000b */ unsigned char Reserved2;
        /* 0x000c */ unsigned long IdLowPart;
        /* 0x0010 */ unsigned long IdHighPart;
      } /* size: 0x000c */ Connection;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ u;
} IO_RESOURCE_DESCRIPTOR, *PIO_RESOURCE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _IO_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _IO_RESOURCE_DESCRIPTOR Descriptors[1];
} IO_RESOURCE_LIST, *PIO_RESOURCE_LIST; /* size: 0x0028 */

typedef enum _STREAM_INFO_LEVELS
{
  FindStreamInfoStandard = 0,
  FindStreamInfoMaxInfoLevel = 1,
} STREAM_INFO_LEVELS, *PSTREAM_INFO_LEVELS;

typedef enum _PSM_ACTIVATE_BACKGROUND_TYPE
{
  PsmActNotBackground = 0,
  PsmActMixedHost = 1,
  PsmActPureHost = 2,
  PsmActSystemHost = 3,
  PsmActInvalidType = 4,
} PSM_ACTIVATE_BACKGROUND_TYPE, *PPSM_ACTIVATE_BACKGROUND_TYPE;

enum ENUM_FILE_INFORMATION_CLASS
{
  ENUM_FILE_ID_BOTH_DIR_INFO = 0,
  ENUM_FILE_BOTH_DIR_INFO = 1,
  ENUM_FILE_FULL_DIR_INFO = 2,
};

struct IPrintDialogCallback
{
}; /* size: 0x0008 */

typedef enum _ENLISTMENT_INFORMATION_CLASS
{
  EnlistmentBasicInformation = 0,
  EnlistmentRecoveryInformation = 1,
  EnlistmentCrmInformation = 2,
} ENLISTMENT_INFORMATION_CLASS, *PENLISTMENT_INFORMATION_CLASS;

struct IEnumSCMProcessInfo
{
}; /* size: 0x0008 */

typedef struct _PROCESS_WORKING_SET_CONTROL
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ enum _PROCESS_WORKING_SET_OPERATION Operation;
  /* 0x0008 */ unsigned long Flags;
} PROCESS_WORKING_SET_CONTROL, *PPROCESS_WORKING_SET_CONTROL; /* size: 0x000c */

struct tagPDEXA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_266;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ void* hDevMode;
  /* 0x0018 */ void* hDevNames;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned long Flags2;
  /* 0x0030 */ unsigned long ExclusionFlags;
  /* 0x0034 */ unsigned long nPageRanges;
  /* 0x0038 */ unsigned long nMaxPageRanges;
  /* 0x003c */ long Padding_267;
  /* 0x0040 */ struct tagPRINTPAGERANGE* lpPageRanges;
  /* 0x0048 */ unsigned long nMinPage;
  /* 0x004c */ unsigned long nMaxPage;
  /* 0x0050 */ unsigned long nCopies;
  /* 0x0054 */ long Padding_268;
  /* 0x0058 */ struct HINSTANCE__* hInstance;
  /* 0x0060 */ const char* lpPrintTemplateName;
  /* 0x0068 */ struct IUnknown* lpCallback;
  /* 0x0070 */ unsigned long nPropertyPages;
  /* 0x0074 */ long Padding_269;
  /* 0x0078 */ struct _PSP** lphPropertyPages;
  /* 0x0080 */ unsigned long nStartPage;
  /* 0x0084 */ unsigned long dwResultAction;
}; /* size: 0x0088 */

enum tagOLEGETMONIKER
{
  OLEGETMONIKER_ONLYIFTHERE = 1,
  OLEGETMONIKER_FORCEASSIGN = 2,
  OLEGETMONIKER_UNASSIGN = 3,
  OLEGETMONIKER_TEMPFORUSER = 4,
};

struct FIND_BY_SID_OUTPUT
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

enum OPERATION_TYPE
{
  OT_NONE = 0,
  OT_COPY = 1,
  OT_MOVE = 2,
  OT_RECYCLE = 3,
  OT_DELETE = 4,
  OT_RENAME = 5,
  OT_APPLYPROPS = 6,
  OT_DOWNLOAD = 7,
  OT_MOVE_AS_COPY_DELETE = 8,
};

typedef struct _SID_AND_ATTRIBUTES
{
  /* 0x0000 */ void* Sid;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ long __PADDING__[1];
} SID_AND_ATTRIBUTES, *PSID_AND_ATTRIBUTES; /* size: 0x0010 */

typedef struct _TOKEN_USER
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES User;
} TOKEN_USER, *PTOKEN_USER; /* size: 0x0010 */

struct tagSERIALKEYSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszActivePort;
  /* 0x0010 */ wchar_t* lpszPort;
  /* 0x0018 */ unsigned int iBaudRate;
  /* 0x001c */ unsigned int iPortState;
  /* 0x0020 */ unsigned int iActive;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _CrtMemState
{
  /* 0x0000 */ struct _CrtMemBlockHeader* pBlockHeader;
  /* 0x0008 */ unsigned __int64 lCounts[5];
  /* 0x0030 */ unsigned __int64 lSizes[5];
  /* 0x0058 */ unsigned __int64 lHighWaterCount;
  /* 0x0060 */ unsigned __int64 lTotalCount;
} CrtMemState, *PCrtMemState; /* size: 0x0068 */

typedef struct _FILE_FS_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER AvailableAllocationUnits;
  /* 0x0010 */ unsigned long SectorsPerAllocationUnit;
  /* 0x0014 */ unsigned long BytesPerSector;
} FILE_FS_SIZE_INFORMATION, *PFILE_FS_SIZE_INFORMATION; /* size: 0x0018 */

typedef enum _PROCESS_TLS_INFORMATION_TYPE
{
  ProcessTlsReplaceIndex = 0,
  ProcessTlsReplaceVector = 1,
  MaxProcessTlsOperation = 2,
} PROCESS_TLS_INFORMATION_TYPE, *PPROCESS_TLS_INFORMATION_TYPE;

typedef struct _CRL_CONTEXT
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ long Padding_270;
  /* 0x0008 */ unsigned char* pbCrlEncoded;
  /* 0x0010 */ unsigned long cbCrlEncoded;
  /* 0x0014 */ long Padding_271;
  /* 0x0018 */ struct _CRL_INFO* pCrlInfo;
  /* 0x0020 */ void* hCertStore;
} CRL_CONTEXT, *PCRL_CONTEXT; /* size: 0x0028 */

struct tagEMRPOLYPOLYLINE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cptl;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct _POINTL aptl[1];
}; /* size: 0x002c */

class CSimpStreamOpen
{
  /* 0x0000 */ long Padding_272[12];
  /* 0x0030 */ class CDfNameList* _pdfl;
  /* 0x0038 */ unsigned long _grfMode;
}; /* size: 0x0040 */

typedef struct _CRYPT_CONTEXT_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_CONFIG, *PCRYPT_CONTEXT_CONFIG; /* size: 0x0008 */

enum EC_HOST_UI_MODE
{
  ECHUIM_DESKTOP = 0,
  ECHUIM_IMMERSIVE = 1,
  ECHUIM_SYSTEM_LAUNCHER = 2,
};

enum POWER_STATE_DISABLED_TYPE
{
  PoDisabledStateSleeping1 = 0,
  PoDisabledStateSleeping2 = 1,
  PoDisabledStateSleeping3 = 2,
  PoDisabledStateSleeping4 = 3,
  PoDisabledStateSleeping0Idle = 4,
  PoDisabledStateReserved5 = 5,
  PoDisabledStateSleeping4Firmware = 6,
  PoDisabledStateMaximum = 7,
};

struct PPM_WMI_LEGACY_PERFSTATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long PercentFrequency;
}; /* size: 0x000c */

enum BaseCallKind
{
  CAsyncCall = 0,
  CClientCall = 1,
  CCtxCall = 2,
};

typedef struct _RPC_ASYNC_STATE
{
  /* 0x0000 */ unsigned int Size;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ long Lock;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ void* StubInfo;
  /* 0x0018 */ void* UserInfo;
  /* 0x0020 */ void* RuntimeInfo;
  /* 0x0028 */ enum _RPC_ASYNC_EVENT Event;
  /* 0x002c */ enum _RPC_NOTIFICATION_TYPES NotificationType;
  /* 0x0030 */ union _RPC_ASYNC_NOTIFICATION_INFO u;
  /* 0x0050 */ __int64 Reserved[4];
} RPC_ASYNC_STATE, *PRPC_ASYNC_STATE; /* size: 0x0070 */

enum ESignalState
{
  none_ss = 0,
  pending_ss = 1,
  signaled_ss = 2,
  failed_ss = 3,
};

class CAsyncCall
{
  union
  {
    struct
    {
      /* 0x0000 */ enum BaseCallKind CallKind;
      /* 0x0004 */ long Padding_273[87];
      /* 0x0160 */ unsigned long _iRefCount;
      /* 0x0164 */ long Padding_274;
      /* 0x0168 */ class CChannelObject* _pChnlObj;
      /* 0x0170 */ void* _pRequestBuffer;
      /* 0x0178 */ unsigned long _lApt;
      /* 0x017c */ enum tagAPTKIND _clientAptKind;
      /* 0x0180 */ struct _RPC_ASYNC_STATE _AsyncState;
      /* 0x01f0 */ struct HWND__* _hwndSTA;
      /* 0x01f8 */ class CAsyncCall* _pNext;
      /* 0x0200 */ unsigned long _lFlags;
      /* 0x0204 */ enum ESignalState _eSignalState;
    }; /* size: 0x00a8 */
    /* 0x0000 */ class CAsyncCall* _aList[8];
    /* 0x0000 */ unsigned long _iNext;
  }; /* size: 0x00a8 */
}; /* size: 0x0208 */

typedef struct _TOKEN_LINKED_TOKEN
{
  /* 0x0000 */ void* LinkedToken;
} TOKEN_LINKED_TOKEN, *PTOKEN_LINKED_TOKEN; /* size: 0x0008 */

struct tagMCI_OVLY_WINDOW_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int nCmdShow;
  /* 0x0014 */ const wchar_t* lpstrText;
}; /* size: 0x001c */

enum IAM_APPLICATION_REALM
{
  IAR_IMMERSIVE = 0,
  IAR_DESKTOP = 1,
  IAR_CURRENT = 2,
};

typedef struct _PORT_MESSAGE
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ short DataLength;
        /* 0x0002 */ short TotalLength;
      } /* size: 0x0004 */ s1;
      /* 0x0000 */ unsigned long Length;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u1;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ short Type;
        /* 0x0006 */ short DataInfoOffset;
      } /* size: 0x0004 */ s2;
      /* 0x0004 */ unsigned long ZeroInit;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u2;
  union
  {
    /* 0x0008 */ struct _CLIENT_ID ClientId;
    /* 0x0008 */ double DoNotUseThisField;
  }; /* size: 0x0010 */
  /* 0x0018 */ unsigned long MessageId;
  /* 0x001c */ long Padding_275;
  union
  {
    /* 0x0020 */ unsigned __int64 ClientViewSize;
    struct
    {
      /* 0x0020 */ unsigned long CallbackId;
      /* 0x0024 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} PORT_MESSAGE, *PPORT_MESSAGE; /* size: 0x0028 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP
{
  /* 0x0000 */ unsigned long Mask;
  /* 0x0004 */ unsigned long Shift;
  /* 0x0008 */ unsigned __int64 Count;
  /* 0x0010 */ const struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY* Entries;
}; /* size: 0x0018 */

struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP
{
  /* 0x0000 */ unsigned __int64 Count;
  /* 0x0008 */ const struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY* Entries;
}; /* size: 0x0010 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_AND_FLAG_MAP
{
  /* 0x0000 */ struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP EnumMap;
  /* 0x0018 */ struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP FlagMap;
}; /* size: 0x0028 */

enum tagOLECONTF
{
  OLECONTF_EMBEDDINGS = 1,
  OLECONTF_LINKS = 2,
  OLECONTF_OTHERS = 4,
  OLECONTF_ONLYUSER = 8,
  OLECONTF_ONLYIFRUNNING = 16,
};

struct DELETE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ unsigned long DeleteFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct IDataFilter
{
}; /* size: 0x0008 */

enum PICKER_TYPE
{
  PICKER_TYPE_OPEN = 0,
  PICKER_TYPE_SAVE = 1,
  PICKER_TYPE_CONTACTS = 2,
  PICKER_TYPE_FILE_UPDATE = 3,
};

typedef enum _MEMORY_RESOURCE_NOTIFICATION_TYPE
{
  LowMemoryResourceNotification = 0,
  HighMemoryResourceNotification = 1,
} MEMORY_RESOURCE_NOTIFICATION_TYPE, *PMEMORY_RESOURCE_NOTIFICATION_TYPE;

typedef struct __midl_frag50_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag50_t, *P_midl_frag50_t; /* size: 0x0058 */

class CSafeRefCount
{
  /* 0x0000 */ long Padding_276[2];
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ int m_fInDelete;
  /* 0x0010 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0018 */

typedef struct _RTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ unsigned char* CurrentEncodingPosition;
  /* 0x0008 */ unsigned char* EndEncodingPosition;
  /* 0x0010 */ unsigned __int64 BytesWrittenOrRequired;
  /* 0x0018 */ unsigned __int64 LongestLegalLength;
  /* 0x0020 */ struct _LBLOB* BufferInUse;
  /* 0x0028 */ struct _LBLOB* FixedSizeBuffer;
  /* 0x0030 */ struct _LBLOB* DynamicBuffer;
  /* 0x0038 */ struct _LBLOB** ReturnedBufferUsed;
  /* 0x0040 */ void* ResizePolicy /* function */;
  /* 0x0048 */ void* Reserved1;
  /* 0x0050 */ void* Reserved2;
} RTL_SMART_LBLOB_WRITING_CONTEXT, *PRTL_SMART_LBLOB_WRITING_CONTEXT; /* size: 0x0058 */

class Windows::Rtl::CRTL_SMART_LBLOB_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT m_WritingContext;
}; /* size: 0x0058 */

class CFunctionDiscoveryNotificationWrapper
{
}; /* size: 0x0008 */

class Windows::Rtl::AutoHandle
{
}; /* size: 0x0008 */

typedef struct _FILEMUIINFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwFileType;
  /* 0x000c */ unsigned char pChecksum[16];
  /* 0x001c */ unsigned char pServiceChecksum[16];
  /* 0x002c */ unsigned long dwLanguageNameOffset;
  /* 0x0030 */ unsigned long dwTypeIDMainSize;
  /* 0x0034 */ unsigned long dwTypeIDMainOffset;
  /* 0x0038 */ unsigned long dwTypeNameMainOffset;
  /* 0x003c */ unsigned long dwTypeIDMUISize;
  /* 0x0040 */ unsigned long dwTypeIDMUIOffset;
  /* 0x0044 */ unsigned long dwTypeNameMUIOffset;
  /* 0x0048 */ unsigned char abBuffer[8];
} FILEMUIINFO, *PFILEMUIINFO; /* size: 0x0050 */

enum REMOVEITEMTYPE
{
  RIT_DEFAULT = 0,
  RIT_DELETE = 1,
};

typedef struct _RTL_RB_TREE
{
  /* 0x0000 */ struct _RTL_BALANCED_NODE* Root;
  /* 0x0008 */ struct _RTL_BALANCED_NODE* Min;
} RTL_RB_TREE, *PRTL_RB_TREE; /* size: 0x0010 */

typedef struct __midl_frag1183_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1183_t, *P_midl_frag1183_t; /* size: 0x0038 */

struct tagPropsOutInfo
{
  /* 0x0000 */ unsigned long cIfs;
  /* 0x0004 */ long Padding_277;
  /* 0x0008 */ struct _GUID* piid;
  /* 0x0010 */ HRESULT* phresults;
  /* 0x0018 */ struct tagMInterfacePointer** ppIntfData;
}; /* size: 0x0020 */

class ActivationPropertiesOut::OutSerializer
{
  /* 0x0000 */ long Padding_278[6];
  /* 0x0018 */ struct tagPropsOutInfo _info;
  /* 0x0038 */ void** _ppvObj;
  /* 0x0040 */ unsigned long _size;
  /* 0x0044 */ long Padding_279;
  /* 0x0048 */ struct tagCOMVERSION* _pClientCOMVersion;
  /* 0x0050 */ struct _GUID _pIIDs[10];
  /* 0x00f0 */ struct IUnknown* _pObject;
  /* 0x00f8 */ int _fBrokenRefCount;
  /* 0x00fc */ int _fLockedClassFactory;
}; /* size: 0x0100 */

enum tagEXTCONN
{
  EXTCONN_STRONG = 1,
  EXTCONN_WEAK = 2,
  EXTCONN_CALLABLE = 4,
};

enum tagREGCLS
{
  REGCLS_SINGLEUSE = 0,
  REGCLS_MULTIPLEUSE = 1,
  REGCLS_MULTI_SEPARATE = 2,
  REGCLS_SUSPENDED = 4,
  REGCLS_SURROGATE = 8,
};

struct tagDROPSTRUCT
{
  /* 0x0000 */ struct HWND__* hwndSource;
  /* 0x0008 */ struct HWND__* hwndSink;
  /* 0x0010 */ unsigned long wFmt;
  /* 0x0014 */ long Padding_280;
  /* 0x0018 */ unsigned __int64 dwData;
  /* 0x0020 */ struct tagPOINT ptDrop;
  /* 0x0028 */ unsigned long dwControlData;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _CONNECTDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_281;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct _NETRESOURCEA* lpConnRes;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTA, *PCONNECTDLGSTRUCTA; /* size: 0x0020 */

typedef struct _PRINTER_DEFAULTSW
{
  /* 0x0000 */ wchar_t* pDatatype;
  /* 0x0008 */ struct _devicemodeW* pDevMode;
  /* 0x0010 */ unsigned long DesiredAccess;
  /* 0x0014 */ long __PADDING__[1];
} PRINTER_DEFAULTSW, *PPRINTER_DEFAULTSW; /* size: 0x0018 */

enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_OPTION
{
  NIAWO_ALL = 0,
  NIAWO_SKIP_SYSTEM_WINDOWS = 1,
  NIAWO_CURRENT_WINDOW_ONLY = 2,
  NIAWO_CURRENT_WINDOW_ONLY_IFF_APP = 3,
};

struct IAddrTrackingControl
{
}; /* size: 0x0008 */

typedef struct _s__CatchableTypeArray
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType** arrayOfCatchableTypes /* zero-length array */;
} s__CatchableTypeArray, *Ps__CatchableTypeArray; /* size: 0x0004 */

enum SYSNLS_FUNCTION
{
  COMPARE_STRING = 1,
};

typedef struct _CRYPT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long cAttr;
  /* 0x0004 */ long Padding_282;
  /* 0x0008 */ struct _CRYPT_ATTRIBUTE* rgAttr;
} CRYPT_ATTRIBUTES, *PCRYPT_ATTRIBUTES; /* size: 0x0010 */

typedef struct _CMSG_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_283;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0028 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0040 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0058 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0068 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0078 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_SIGNER_INFO, *PCMSG_SIGNER_INFO; /* size: 0x0088 */

typedef union _SLIST_HEADER
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 Alignment;
      /* 0x0008 */ unsigned __int64 Region;
    }; /* size: 0x0010 */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 9; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 NextEntry : 39; /* bit position: 25 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Init : 1; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 Reserved : 59; /* bit position: 2 */
        /* 0x0008 */ unsigned __int64 Region : 3; /* bit position: 61 */
      }; /* bitfield */
    } /* size: 0x0010 */ Header8;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Depth : 16; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Sequence : 48; /* bit position: 16 */
      }; /* bitfield */
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned __int64 HeaderType : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned __int64 Reserved : 3; /* bit position: 1 */
        /* 0x0008 */ unsigned __int64 NextEntry : 60; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0010 */ HeaderX64;
  }; /* size: 0x0010 */
} SLIST_HEADER, *PSLIST_HEADER; /* size: 0x0010 */

enum IMAGE_AUX_SYMBOL_TYPE
{
  IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF = 1,
};

typedef enum _WNF_DATA_SCOPE
{
  WnfDataScopeSystem = 0,
  WnfDataScopeSession = 1,
  WnfDataScopeUser = 2,
  WnfDataScopeProcess = 3,
} WNF_DATA_SCOPE, *PWNF_DATA_SCOPE;

struct HSZ__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

enum tagRPCOPT_SERVER_LOCALITY_VALUES
{
  SERVER_LOCALITY_PROCESS_LOCAL = 0,
  SERVER_LOCALITY_MACHINE_LOCAL = 1,
  SERVER_LOCALITY_REMOTE = 2,
};

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >
{
}; /* size: 0x0008 */

typedef enum _SEMAPHORE_INFORMATION_CLASS
{
  SemaphoreBasicInformation = 0,
} SEMAPHORE_INFORMATION_CLASS, *PSEMAPHORE_INFORMATION_CLASS;

typedef struct _CMC_ADD_EXTENSIONS_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x0010 */ unsigned long cExtension;
  /* 0x0014 */ long Padding_284;
  /* 0x0018 */ struct _CERT_EXTENSION* rgExtension;
} CMC_ADD_EXTENSIONS_INFO, *PCMC_ADD_EXTENSIONS_INFO; /* size: 0x0020 */

struct tagScmReplyInfoData
{
  /* 0x0000 */ struct tagCustomPrivResolverInfo* pResolverInfo;
  /* 0x0008 */ struct _customREMOTE_REPLY_SCM_INFO* remoteReply;
}; /* size: 0x0010 */

class ScmReplyInfo
{
  /* 0x0000 */ long Padding_285[8];
  /* 0x0020 */ struct tagScmReplyInfoData _scmReplyInfoData;
}; /* size: 0x0030 */

class ActivationPropertiesOut
{
  /* 0x0000 */ long Padding_286[132];
  /* 0x0210 */ class ActivationPropertiesOut::OutSerializer* _pOutSer;
  /* 0x0218 */ class ActivationPropertiesOut::OutSerializer _outSer;
  /* 0x0318 */ class ScmReplyInfo _scmReplyInfo;
  /* 0x0348 */ struct tagCOMVERSION _clientCOMVersion;
  /* 0x034c */ int _fBrokenRefCount;
}; /* size: 0x0350 */

typedef enum _POWER_STATE_TYPE
{
  SystemPowerState = 0,
  DevicePowerState = 1,
} POWER_STATE_TYPE, *PPOWER_STATE_TYPE;

class SafeIStorage
{
  /* 0x0000 */ struct IStorage* _p;
}; /* size: 0x0008 */

typedef union _INSTALLSPEC
{
  union
  {
    struct
    {
      /* 0x0000 */ wchar_t* Name;
      /* 0x0008 */ struct _GUID GPOId;
    } /* size: 0x0018 */ AppName;
    /* 0x0000 */ wchar_t* FileExt;
    /* 0x0000 */ wchar_t* ProgId;
    struct
    {
      /* 0x0000 */ struct _GUID Clsid;
      /* 0x0010 */ unsigned long ClsCtx;
    } /* size: 0x0014 */ COMClass;
  }; /* size: 0x0018 */
} INSTALLSPEC, *PINSTALLSPEC; /* size: 0x0018 */

struct RETRIEVAL_POINTERS_BUFFER
{
  /* 0x0000 */ unsigned long ExtentCount;
  /* 0x0004 */ long Padding_287;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ struct
  {
    /* 0x0010 */ union _LARGE_INTEGER NextVcn;
    /* 0x0018 */ union _LARGE_INTEGER Lcn;
  } /* size: 0x0010 */ Extents[1];
}; /* size: 0x0020 */

typedef enum _ACL_INFORMATION_CLASS
{
  AclRevisionInformation = 1,
  AclSizeInformation = 2,
} ACL_INFORMATION_CLASS, *PACL_INFORMATION_CLASS;

typedef enum _TP_CALLBACK_PRIORITY
{
  TP_CALLBACK_PRIORITY_HIGH = 0,
  TP_CALLBACK_PRIORITY_NORMAL = 1,
  TP_CALLBACK_PRIORITY_LOW = 2,
  TP_CALLBACK_PRIORITY_INVALID = 3,
  TP_CALLBACK_PRIORITY_COUNT = 3,
} TP_CALLBACK_PRIORITY, *PTP_CALLBACK_PRIORITY;

struct PPM_PERFSTATE_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Status;
  /* 0x0008 */ unsigned long Latency;
  /* 0x000c */ unsigned long Speed;
  /* 0x0010 */ unsigned long Processor;
}; /* size: 0x0014 */

typedef struct _SYSTEM_CONSOLE_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long DriverLoaded : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long Spare : 31; /* bit position: 1 */
  }; /* bitfield */
} SYSTEM_CONSOLE_INFORMATION, *PSYSTEM_CONSOLE_INFORMATION; /* size: 0x0004 */

enum QUERY_USER_NOTIFICATION_STATE
{
  QUNS_NOT_PRESENT = 1,
  QUNS_BUSY = 2,
  QUNS_RUNNING_D3D_FULL_SCREEN = 3,
  QUNS_PRESENTATION_MODE = 4,
  QUNS_ACCEPTS_NOTIFICATIONS = 5,
  QUNS_QUIET_TIME = 6,
  QUNS_APP = 7,
};

typedef enum _MONITOR_DISPLAY_STATE
{
  PowerMonitorOff = 0,
  PowerMonitorOn = 1,
  PowerMonitorDim = 2,
} MONITOR_DISPLAY_STATE, *PMONITOR_DISPLAY_STATE;

typedef struct __midl_frag68_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag68_t, *P_midl_frag68_t; /* size: 0x0028 */

struct IRpcOptions
{
}; /* size: 0x0008 */

typedef enum _RPC_HTTP_REDIRECTOR_STAGE
{
  RPCHTTP_RS_REDIRECT = 1,
  RPCHTTP_RS_ACCESS_1 = 2,
  RPCHTTP_RS_SESSION = 3,
  RPCHTTP_RS_ACCESS_2 = 4,
  RPCHTTP_RS_INTERFACE = 5,
} RPC_HTTP_REDIRECTOR_STAGE, *PRPC_HTTP_REDIRECTOR_STAGE;

typedef struct _LBLOB
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ unsigned char* Buffer;
} LBLOB, *PLBLOB; /* size: 0x0018 */

enum tagBIND_FLAGS
{
  BIND_MAYBOTHERUSER = 1,
  BIND_JUSTTESTEXISTENCE = 2,
};

struct PROCESSOR_IDLESTATE_INFO
{
  /* 0x0000 */ unsigned long TimeCheck;
  /* 0x0004 */ unsigned char DemotePercent;
  /* 0x0005 */ unsigned char PromotePercent;
  /* 0x0006 */ unsigned char Spare[2];
}; /* size: 0x0008 */

typedef struct _wireSAFEARR_HAVEIID
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_288;
  /* 0x0008 */ struct IUnknown** apUnknown;
  /* 0x0010 */ struct _GUID iid;
} wireSAFEARR_HAVEIID, *PwireSAFEARR_HAVEIID; /* size: 0x0020 */

typedef struct _SESSION_HEADER
{
  /* 0x0000 */ unsigned char sess_name;
  /* 0x0001 */ unsigned char num_sess;
  /* 0x0002 */ unsigned char rcv_dg_outstanding;
  /* 0x0003 */ unsigned char rcv_any_outstanding;
} SESSION_HEADER, *PSESSION_HEADER; /* size: 0x0004 */

typedef enum _VIRTUAL_MEMORY_INFORMATION_CLASS
{
  VmPrefetchInformation = 0,
  VmPagePriorityInformation = 1,
} VIRTUAL_MEMORY_INFORMATION_CLASS, *PVIRTUAL_MEMORY_INFORMATION_CLASS;

typedef struct _WOW64_LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} WOW64_LDT_ENTRY, *PWOW64_LDT_ENTRY; /* size: 0x0008 */

typedef enum _WATCHDOG_INFORMATION_CLASS
{
  WdInfoTimeoutValue = 0,
  WdInfoResetTimer = 1,
  WdInfoStopTimer = 2,
  WdInfoStartTimer = 3,
  WdInfoTriggerAction = 4,
  WdInfoState = 5,
} WATCHDOG_INFORMATION_CLASS, *PWATCHDOG_INFORMATION_CLASS;

typedef enum _KEY_VALUE_INFORMATION_CLASS
{
  KeyValueBasicInformation = 0,
  KeyValueFullInformation = 1,
  KeyValuePartialInformation = 2,
  KeyValueFullInformationAlign64 = 3,
  KeyValuePartialInformationAlign64 = 4,
  MaxKeyValueInfoClass = 5,
} KEY_VALUE_INFORMATION_CLASS, *PKEY_VALUE_INFORMATION_CLASS;

struct PPM_IDLE_STATE_BUCKET_EX
{
  /* 0x0000 */ unsigned __int64 TotalTimeUs;
  /* 0x0008 */ unsigned long MinTimeUs;
  /* 0x000c */ unsigned long MaxTimeUs;
  /* 0x0010 */ unsigned long Count;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct PPM_IDLE_STATE_ACCOUNTING_EX
{
  /* 0x0000 */ unsigned __int64 TotalTime;
  /* 0x0008 */ unsigned long IdleTransitions;
  /* 0x000c */ unsigned long FailedTransitions;
  /* 0x0010 */ unsigned long InvalidBucketIndex;
  /* 0x0014 */ unsigned long MinTimeUs;
  /* 0x0018 */ unsigned long MaxTimeUs;
  /* 0x001c */ unsigned long CancelledTransitions;
  /* 0x0020 */ struct PPM_IDLE_STATE_BUCKET_EX IdleTimeBuckets[16];
}; /* size: 0x01a0 */

typedef struct _NDR_EXPR_DESC
{
  /* 0x0000 */ const unsigned short* pOffset;
  /* 0x0008 */ const unsigned char* pFormatExpr;
} NDR_EXPR_DESC, *PNDR_EXPR_DESC; /* size: 0x0010 */

struct tagCHOOSEFONTW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_289;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HDC__* hDC;
  /* 0x0018 */ struct tagLOGFONTW* lpLogFont;
  /* 0x0020 */ int iPointSize;
  /* 0x0024 */ unsigned long Flags;
  /* 0x0028 */ unsigned long rgbColors;
  /* 0x002c */ long Padding_290;
  /* 0x0030 */ __int64 lCustData;
  /* 0x0038 */ void* lpfnHook /* function */;
  /* 0x0040 */ const wchar_t* lpTemplateName;
  /* 0x0048 */ struct HINSTANCE__* hInstance;
  /* 0x0050 */ wchar_t* lpszStyle;
  /* 0x0058 */ unsigned short nFontType;
  /* 0x005a */ unsigned short ___MISSING_ALIGNMENT__;
  /* 0x005c */ int nSizeMin;
  /* 0x0060 */ int nSizeMax;
  /* 0x0064 */ long __PADDING__[1];
}; /* size: 0x0068 */

enum DISPLAYCONFIG_MODE_INFO_TYPE
{
  DISPLAYCONFIG_MODE_INFO_TYPE_SOURCE = 1,
  DISPLAYCONFIG_MODE_INFO_TYPE_TARGET = 2,
  DISPLAYCONFIG_MODE_INFO_TYPE_FORCE_UINT32 = -1,
};

struct PROCESSOR_PERFSTATE_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char MaxThrottle;
  /* 0x0005 */ unsigned char MinThrottle;
  /* 0x0006 */ unsigned char BusyAdjThreshold;
  union
  {
    /* 0x0007 */ unsigned char Spare;
    union
    {
      union
      {
        /* 0x0007 */ unsigned char AsUCHAR;
        struct /* bitfield */
        {
          /* 0x0007 */ unsigned char NoDomainAccounting : 1; /* bit position: 0 */
          /* 0x0007 */ unsigned char IncreasePolicy : 2; /* bit position: 1 */
          /* 0x0007 */ unsigned char DecreasePolicy : 2; /* bit position: 3 */
          /* 0x0007 */ unsigned char Reserved : 3; /* bit position: 5 */
        }; /* bitfield */
      }; /* size: 0x0001 */
    } /* size: 0x0001 */ Flags;
  }; /* size: 0x0001 */
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ unsigned long IncreasePercent;
  /* 0x0018 */ unsigned long DecreasePercent;
}; /* size: 0x001c */

enum tagOLEUPDATE
{
  OLEUPDATE_ALWAYS = 1,
  OLEUPDATE_ONCALL = 3,
};

struct tagMSLLHOOKSTRUCT
{
  /* 0x0000 */ struct tagPOINT pt;
  /* 0x0008 */ unsigned long mouseData;
  /* 0x000c */ unsigned long flags;
  /* 0x0010 */ unsigned long time;
  /* 0x0014 */ long Padding_291;
  /* 0x0018 */ unsigned __int64 dwExtraInfo;
}; /* size: 0x0020 */

typedef enum _SIGDN
{
  SIGDN_NORMALDISPLAY = 0,
  SIGDN_PARENTRELATIVEPARSING = -2147385343,
  SIGDN_DESKTOPABSOLUTEPARSING = -2147319808,
  SIGDN_PARENTRELATIVEEDITING = -2147282943,
  SIGDN_DESKTOPABSOLUTEEDITING = -2147172352,
  SIGDN_FILESYSPATH = -2147123200,
  SIGDN_URL = -2147057664,
  SIGDN_PARENTRELATIVEFORADDRESSBAR = -2146975743,
  SIGDN_PARENTRELATIVE = -2146959359,
  SIGDN_PARENTRELATIVEFORUI = -2146877439,
} SIGDN, *PSIGDN;

typedef struct _CERT_STRONG_SIGN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoChoice;
  union
  {
    /* 0x0008 */ void* pvInfo;
    /* 0x0008 */ struct _CERT_STRONG_SIGN_SERIALIZED_INFO* pSerializedInfo;
    /* 0x0008 */ char* pszOID;
  }; /* size: 0x0008 */
} CERT_STRONG_SIGN_PARA, *PCERT_STRONG_SIGN_PARA; /* size: 0x0010 */

typedef struct _PHYSICAL_CHANNEL_RUN
{
  /* 0x0000 */ unsigned long NodeNumber;
  /* 0x0004 */ unsigned long ChannelNumber;
  /* 0x0008 */ unsigned __int64 BasePage;
  /* 0x0010 */ unsigned __int64 PageCount;
  /* 0x0018 */ unsigned __int64 Flags;
} PHYSICAL_CHANNEL_RUN, *PPHYSICAL_CHANNEL_RUN; /* size: 0x0020 */

enum OLETLS_REFUSE_RUNDOWN_REASON
{
  DontRefuse = 0,
  RefuseDueToInMarshalingDuringSameProcessCall = 1,
  RefuseDueToOutMarshalingDuringSameProcessCall = 2,
  RefuseDueToInMarshalingDuringCrossProcessCall = 3,
  RefuseDueToOutMarshalingDuringCrossProcessCall = 4,
  RefuseDueToSameProcessDirectMarshaling = 5,
};

typedef enum _SC_ACTION_TYPE
{
  SC_ACTION_NONE = 0,
  SC_ACTION_RESTART = 1,
  SC_ACTION_REBOOT = 2,
  SC_ACTION_RUN_COMMAND = 3,
} SC_ACTION_TYPE, *PSC_ACTION_TYPE;

typedef struct _RTL_AVL_ENTRY
{
  /* 0x0000 */ struct _RTL_BALANCED_LINKS BalancedLinks;
  /* 0x0020 */ __int64 UserData;
} RTL_AVL_ENTRY, *PRTL_AVL_ENTRY; /* size: 0x0028 */

enum tagOLEVERBATTRIB
{
  OLEVERBATTRIB_NEVERDIRTIES = 1,
  OLEVERBATTRIB_ONCONTAINERMENU = 2,
};

typedef struct _LDOUBLE
{
  /* 0x0000 */ unsigned char ld[10];
} LDOUBLE, *PLDOUBLE; /* size: 0x000a */

typedef enum _TOKEN_TYPE
{
  TokenPrimary = 1,
  TokenImpersonation = 2,
} TOKEN_TYPE, *PTOKEN_TYPE;

typedef struct _SYSTEM_BASIC_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AvailablePages;
  /* 0x0008 */ unsigned __int64 CommittedPages;
  /* 0x0010 */ unsigned __int64 CommitLimit;
  /* 0x0018 */ unsigned __int64 PeakCommitment;
} SYSTEM_BASIC_PERFORMANCE_INFORMATION, *PSYSTEM_BASIC_PERFORMANCE_INFORMATION; /* size: 0x0020 */

typedef struct _BY_HANDLE_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long dwVolumeSerialNumber;
  /* 0x0020 */ unsigned long nFileSizeHigh;
  /* 0x0024 */ unsigned long nFileSizeLow;
  /* 0x0028 */ unsigned long nNumberOfLinks;
  /* 0x002c */ unsigned long nFileIndexHigh;
  /* 0x0030 */ unsigned long nFileIndexLow;
} BY_HANDLE_FILE_INFORMATION, *PBY_HANDLE_FILE_INFORMATION; /* size: 0x0034 */

class Windows::Auto<Windows::Rtl::IRtlWOFOStream *>
{
}; /* size: 0x0008 */

enum tagOLELINKBIND
{
  OLELINKBIND_EVENIFCLASSDIFF = 1,
};

struct tagSERIALKEYSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszActivePort;
  /* 0x0010 */ char* lpszPort;
  /* 0x0018 */ unsigned int iBaudRate;
  /* 0x001c */ unsigned int iPortState;
  /* 0x0020 */ unsigned int iActive;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef enum _POWER_REQUEST_TYPE
{
  PowerRequestDisplayRequired = 0,
  PowerRequestSystemRequired = 1,
  PowerRequestAwayModeRequired = 2,
  PowerRequestExecutionRequired = 3,
} POWER_REQUEST_TYPE, *PPOWER_REQUEST_TYPE;

typedef enum __MIDL_IInternetSecurityManager_0003
{
  SZM_CREATE = 0,
  SZM_DELETE = 1,
} _MIDL_IInternetSecurityManager_0003, *P_MIDL_IInternetSecurityManager_0003;

typedef struct _NDR64_EXPR_OPERATOR
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Operator;
  /* 0x0002 */ unsigned char CastType;
  /* 0x0003 */ unsigned char Reserved;
} NDR64_EXPR_OPERATOR, *PNDR64_EXPR_OPERATOR; /* size: 0x0004 */

struct tagACCEL
{
  /* 0x0000 */ unsigned char fVirt;
  /* 0x0001 */ char Padding_292;
  /* 0x0002 */ unsigned short key;
  /* 0x0004 */ unsigned short cmd;
}; /* size: 0x0006 */

class Windows::Rtl::AutoString<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >
{
}; /* size: 0x0018 */

typedef struct _CONSOLE_HISTORY_INFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int HistoryBufferSize;
  /* 0x0008 */ unsigned int NumberOfHistoryBuffers;
  /* 0x000c */ unsigned long dwFlags;
} CONSOLE_HISTORY_INFO, *PCONSOLE_HISTORY_INFO; /* size: 0x0010 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0008 */

enum VIRTUALUIGROUPITEMVALUE
{
  VUGIV_VERSION = 0,
  VUGIV_ITEM = 1,
  VUGIV_ITEMCOLLECTION = 2,
};

typedef enum _URLZONEREG
{
  URLZONEREG_DEFAULT = 0,
  URLZONEREG_HKLM = 1,
  URLZONEREG_HKCU = 2,
} URLZONEREG, *PURLZONEREG;

struct tagNFFCONTROLBITS
{
  /* 0x0000 */ unsigned short sig;
  /* 0x0002 */ unsigned short hsmStatus;
  /* 0x0004 */ unsigned long bits;
  /* 0x0008 */ struct _GUID clsid;
}; /* size: 0x0018 */

typedef struct _SL_APPX_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char HashedName[32];
  /* 0x0020 */ unsigned __int64 Expiration;
  /* 0x0028 */ unsigned long DataSize;
  /* 0x002c */ unsigned char Data[1];
  /* 0x002d */ char __PADDING__[3];
} SL_APPX_CACHE_VALUE_DESCRIPTOR, *PSL_APPX_CACHE_VALUE_DESCRIPTOR; /* size: 0x0030 */

enum tagCHANGEKIND
{
  CHANGEKIND_ADDMEMBER = 0,
  CHANGEKIND_DELETEMEMBER = 1,
  CHANGEKIND_SETNAMES = 2,
  CHANGEKIND_SETDOCUMENTATION = 3,
  CHANGEKIND_GENERAL = 4,
  CHANGEKIND_INVALIDATE = 5,
  CHANGEKIND_CHANGEFAILED = 6,
  CHANGEKIND_MAX = 7,
};

typedef struct _SERVICE_START_REASON
{
  /* 0x0000 */ unsigned long dwReason;
} SERVICE_START_REASON, *PSERVICE_START_REASON; /* size: 0x0004 */

typedef struct _OBJECT_ATTRIBUTES64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_293;
  /* 0x0008 */ unsigned __int64 RootDirectory;
  /* 0x0010 */ unsigned __int64 ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_294;
  /* 0x0020 */ unsigned __int64 SecurityDescriptor;
  /* 0x0028 */ unsigned __int64 SecurityQualityOfService;
} OBJECT_ATTRIBUTES64, *POBJECT_ATTRIBUTES64; /* size: 0x0030 */

typedef struct _PROCESSOR_IDLE_STATE
{
  /* 0x0000 */ unsigned char StateType;
  /* 0x0001 */ char Padding_295[3];
  /* 0x0004 */ unsigned long StateFlags;
  /* 0x0008 */ unsigned long HardwareLatency;
  /* 0x000c */ unsigned long Power;
  /* 0x0010 */ unsigned __int64 Context;
  /* 0x0018 */ void* Handler /* function */;
} PROCESSOR_IDLE_STATE, *PPROCESSOR_IDLE_STATE; /* size: 0x0020 */

enum tagDCOM_CALL_STATE
{
  DCOM_NONE = 0,
  DCOM_CALL_COMPLETE = 1,
  DCOM_CALL_CANCELED = 2,
};

typedef union _userCLIPFORMAT::__MIDL_IWinTypes_0001
{
  union
  {
    /* 0x0000 */ unsigned long dwValue;
    /* 0x0000 */ wchar_t* pwszName;
  }; /* size: 0x0008 */
} userCLIPFORMAT::__MIDL_IWinTypes_0001, *PuserCLIPFORMAT::__MIDL_IWinTypes_0001; /* size: 0x0008 */

typedef struct _userCLIPFORMAT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_296;
  /* 0x0008 */ union _userCLIPFORMAT::__MIDL_IWinTypes_0001 u;
} userCLIPFORMAT, *PuserCLIPFORMAT; /* size: 0x0010 */

typedef struct _PRINTER_ENUM_VALUESA
{
  /* 0x0000 */ char* pValueName;
  /* 0x0008 */ unsigned long cbValueName;
  /* 0x000c */ unsigned long dwType;
  /* 0x0010 */ unsigned char* pData;
  /* 0x0018 */ unsigned long cbData;
  /* 0x001c */ long __PADDING__[1];
} PRINTER_ENUM_VALUESA, *PPRINTER_ENUM_VALUESA; /* size: 0x0020 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_V1
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ unsigned short ValueType;
  /* 0x0012 */ unsigned short Reserved;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long ValueCount;
  /* 0x001c */ long Padding_297;
  union
  {
    union
    {
      /* 0x0020 */ __int64* pInt64;
      /* 0x0020 */ unsigned __int64* pUint64;
      /* 0x0020 */ struct _UNICODE_STRING* pString;
      /* 0x0020 */ struct _TOKEN_SECURITY_ATTRIBUTE_FQBN_VALUE* pFqbn;
      /* 0x0020 */ struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE* pOctetString;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Values;
} TOKEN_SECURITY_ATTRIBUTE_V1, *PTOKEN_SECURITY_ATTRIBUTE_V1; /* size: 0x0028 */

typedef enum __MIDL_IInternetZoneManager_0001
{
  MAX_ZONE_PATH = 260,
  MAX_ZONE_DESCRIPTION = 200,
} _MIDL_IInternetZoneManager_0001, *P_MIDL_IInternetZoneManager_0001;

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST
{
  /* 0x0000 */ unsigned long RequestLevel;
  /* 0x0004 */ unsigned long RequestFlags;
} STORAGE_QUERY_DEPENDENT_VOLUME_REQUEST, *PSTORAGE_QUERY_DEPENDENT_VOLUME_REQUEST; /* size: 0x0008 */

struct SMultiGUIDKey
{
  /* 0x0000 */ int cGUID;
  /* 0x0004 */ long Padding_298;
  /* 0x0008 */ struct _GUID* aGUID;
}; /* size: 0x0010 */

struct SMultiGUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct SMultiGUIDKey key;
}; /* size: 0x0020 */

class CClassCache::CClassEntry
{
  /* 0x0000 */ long Padding_299[6];
  /* 0x0018 */ struct SMultiGUIDHashNode _hashNode;
  /* 0x0038 */ struct _GUID _guids[2];
  /* 0x0058 */ unsigned long _dwSig;
  /* 0x005c */ unsigned long _dwFlags;
  /* 0x0060 */ class CClassCache::CClassEntry* _pTreatAsList;
  /* 0x0068 */ class CClassCache::CBaseClassEntry* _pBCEListFront;
  /* 0x0070 */ class CClassCache::CBaseClassEntry* _pBCEListBack;
  /* 0x0078 */ unsigned long _cLocks;
  /* 0x007c */ unsigned long _dwFailedContexts;
  /* 0x0080 */ struct IComClassInfo* _pCI;
  union
  {
    /* 0x0000 */ const unsigned long TREAT_AS_SIG;
    /* 0x0000 */ const unsigned long CLASS_ENTRY_SIG;
    /* 0x0000 */ const unsigned long INCOMPLETE_ENTRY_SIG;
    /* 0x0000 */ unsigned long _dwSxSMaxHashCount;
    /* 0x0000 */ unsigned long _dwSxSHashCount;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0068 */
}; /* size: 0x0088 */

enum tagEventLogModes
{
  Eventlog_ModeLaunch = 0,
  EventLog_ModeActivate = 1,
  EventLog_ModeAccess = 2,
  EventLog_ModeDontCare = 3,
};

typedef struct _COVERAGE_MODULE_INFO
{
  /* 0x0000 */ unsigned long ModuleInfoSize;
  /* 0x0004 */ unsigned long IsBinaryLoaded;
  /* 0x0008 */ struct _UNICODE_STRING ModulePathName;
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned char CoverageSection[1];
  /* 0x001d */ char __PADDING__[3];
} COVERAGE_MODULE_INFO, *PCOVERAGE_MODULE_INFO; /* size: 0x0020 */

enum NAMESPACE_FOLDER_PREFERENCES_FLAGS
{
  FVPF_DEFAULT = 0,
  FVPF_ALLOWITEMSVIEW = 1,
};

typedef struct _CTL_VERIFY_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_300;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0018 */ unsigned long cCtlStore;
  /* 0x001c */ long Padding_301;
  /* 0x0020 */ void** rghCtlStore;
  /* 0x0028 */ unsigned long cSignerStore;
  /* 0x002c */ long Padding_302;
  /* 0x0030 */ void** rghSignerStore;
} CTL_VERIFY_USAGE_PARA, *PCTL_VERIFY_USAGE_PARA; /* size: 0x0038 */

typedef struct _SHFILEINFOW
{
  /* 0x0000 */ struct HICON__* hIcon;
  /* 0x0008 */ int iIcon;
  /* 0x000c */ unsigned long dwAttributes;
  /* 0x0010 */ wchar_t szDisplayName[260];
  /* 0x0218 */ wchar_t szTypeName[80];
} SHFILEINFOW, *PSHFILEINFOW; /* size: 0x02b8 */

struct Windows::Rtl::IRtlFormattedOutputStream
{
}; /* size: 0x0008 */

enum tagPENDINGMSG
{
  PENDINGMSG_CANCELCALL = 0,
  PENDINGMSG_WAITNOPROCESS = 1,
  PENDINGMSG_WAITDEFPROCESS = 2,
};

class CStatArray
{
  /* 0x0000 */ long _cRefs;
  /* 0x0004 */ long Padding_303;
  /* 0x0008 */ struct tagSTATPROPSTG* _psps;
  /* 0x0010 */ unsigned long _cpropActual;
}; /* size: 0x0018 */

typedef struct _PLUGPLAY_NOTIFY_HDR
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ struct _GUID Event;
} PLUGPLAY_NOTIFY_HDR, *PPLUGPLAY_NOTIFY_HDR; /* size: 0x0014 */

typedef struct _PLUGPLAY_CUSTOM_NOTIFICATION
{
  /* 0x0000 */ struct _PLUGPLAY_NOTIFY_HDR HeaderInfo;
  /* 0x0014 */ long Padding_304;
  /* 0x0018 */ void* FileObject;
  /* 0x0020 */ long NameBufferOffset;
  /* 0x0024 */ unsigned char CustomDataBuffer[1];
  /* 0x0025 */ char __PADDING__[3];
} PLUGPLAY_CUSTOM_NOTIFICATION, *PPLUGPLAY_CUSTOM_NOTIFICATION; /* size: 0x0028 */

typedef enum _COPYFILE2_MESSAGE_ACTION
{
  COPYFILE2_PROGRESS_CONTINUE = 0,
  COPYFILE2_PROGRESS_CANCEL = 1,
  COPYFILE2_PROGRESS_STOP = 2,
  COPYFILE2_PROGRESS_QUIET = 3,
  COPYFILE2_PROGRESS_PAUSE = 4,
} COPYFILE2_MESSAGE_ACTION, *PCOPYFILE2_MESSAGE_ACTION;

typedef union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005
{
  union
  {
    /* 0x0000 */ struct _GUID clsid;
    /* 0x0000 */ wchar_t* pFileExt;
    /* 0x0000 */ wchar_t* pMimeType;
    /* 0x0000 */ wchar_t* pProgId;
    /* 0x0000 */ wchar_t* pFileName;
    struct
    {
      /* 0x0000 */ wchar_t* pPackageName;
      /* 0x0008 */ struct _GUID PolicyId;
    } /* size: 0x0018 */ ByName;
    struct
    {
      /* 0x0000 */ struct _GUID ObjectId;
      /* 0x0010 */ struct _GUID PolicyId;
    } /* size: 0x0020 */ ByObjectId;
  }; /* size: 0x0020 */
} _MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005; /* size: 0x0020 */

class Microsoft::WRL::Details::WeakReference
{
  /* 0x0000 */ long Padding_305[4];
  /* 0x0010 */ volatile long strongRefCount_;
  /* 0x0014 */ long Padding_306;
  /* 0x0018 */ struct IUnknown* unknown_;
}; /* size: 0x0020 */

enum SYNCMGR_CANCEL_REQUEST
{
  SYNCMGR_CR_NONE = 0,
  SYNCMGR_CR_CANCEL_ITEM = 1,
  SYNCMGR_CR_CANCEL_ALL = 2,
  SYNCMGR_CR_MAX = 2,
};

typedef enum _SECTION_INHERIT
{
  ViewShare = 1,
  ViewUnmap = 2,
} SECTION_INHERIT, *PSECTION_INHERIT;

struct tagHELPWININFOA
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ char rgchMember[2];
  /* 0x001a */ char __PADDING__[2];
}; /* size: 0x001c */

enum tagMEMCTX
{
  MEMCTX_TASK = 1,
  MEMCTX_SHARED = 2,
  MEMCTX_MACSYSTEM = 3,
  MEMCTX_UNKNOWN = -1,
  MEMCTX_SAME = -2,
};

enum STORAGEITEM_CREATION_TYPE
{
  SICT_ITEM = 0,
  SICT_INFORMATION = 1,
};

class CExtHashTable
{
}; /* size: 0x0028 */

struct ICallInfo
{
}; /* size: 0x0008 */

struct tagCFEntry
{
  /* 0x0000 */ const struct _GUID* pclsid;
  /* 0x0008 */ void* pfnCI /* function */;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct IInternet
{
}; /* size: 0x0008 */

typedef enum _WOW64_FUNCTION_CODE64
{
  WOW64_FUNCTION_NOP = 0,
  WOW64_FUNCTION_QUERY_PROCESS_DEBUG_INFO = 1,
  WOW64_FUNCTION_MAXIMUM = 2,
} WOW64_FUNCTION_CODE64, *PWOW64_FUNCTION_CODE64;

enum tagINPUT_MESSAGE_ORIGIN_ID
{
  IMO_UNAVAILABLE = 0,
  IMO_HARDWARE = 1,
  IMO_INJECTED = 2,
  IMO_SYSTEM = 4,
};

struct RPC_INTERFACE_TEMPLATEA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_307;
  /* 0x0008 */ void* IfSpec;
  /* 0x0010 */ struct _GUID* MgrTypeUuid;
  /* 0x0018 */ void* MgrEpv;
  /* 0x0020 */ unsigned int Flags;
  /* 0x0024 */ unsigned int MaxCalls;
  /* 0x0028 */ unsigned int MaxRpcSize;
  /* 0x002c */ long Padding_308;
  /* 0x0030 */ void* IfCallback /* function */;
  /* 0x0038 */ struct _UUID_VECTOR* UuidVector;
  /* 0x0040 */ unsigned char* Annotation;
  /* 0x0048 */ void* SecurityDescriptor;
}; /* size: 0x0050 */

typedef struct _cpinfoexW
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ wchar_t CodePageName[260];
} cpinfoexW, *PcpinfoexW; /* size: 0x0220 */

enum tagLC_NEXT_INDEX_STATE
{
  LCNIS_DEFAULT = 0,
  LCNIS_SELECTED = 1,
  LCNIS_FOCUSED = 2,
  LCNIS_SELECTIONMARKED = 3,
};

typedef struct __vc_attributes::uidefaultAttribute
{
} _vc_attributes::uidefaultAttribute, *P_vc_attributes::uidefaultAttribute; /* size: 0x0001 */

enum tagCOINITBASE
{
  COINITBASE_MULTITHREADED = 0,
};

typedef struct _CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSignerIndex;
  /* 0x0008 */ unsigned long dwUnauthAttrIndex;
} CMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA, *PCMSG_CTRL_DEL_SIGNER_UNAUTH_ATTR_PARA; /* size: 0x000c */

enum tagDISCARDCACHE
{
  DISCARDCACHE_SAVEIFDIRTY = 0,
  DISCARDCACHE_NOSAVE = 1,
};

typedef struct _LDR_IMPORT_CALLBACK_INFO
{
  /* 0x0000 */ void* ImportCallbackRoutine /* function */;
  /* 0x0008 */ void* ImportCallbackParameter;
} LDR_IMPORT_CALLBACK_INFO, *PLDR_IMPORT_CALLBACK_INFO; /* size: 0x0010 */

typedef struct _LDR_SECTION_INFO
{
  /* 0x0000 */ void* SectionHandle;
  /* 0x0008 */ unsigned long DesiredAccess;
  /* 0x000c */ long Padding_309;
  /* 0x0010 */ struct _OBJECT_ATTRIBUTES* ObjA;
  /* 0x0018 */ unsigned long SectionPageProtection;
  /* 0x001c */ unsigned long AllocationAttributes;
} LDR_SECTION_INFO, *PLDR_SECTION_INFO; /* size: 0x0020 */

typedef struct _LDR_VERIFY_IMAGE_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ struct _LDR_IMPORT_CALLBACK_INFO CallbackInfo;
  /* 0x0018 */ struct _LDR_SECTION_INFO SectionInfo;
  /* 0x0038 */ unsigned short ImageCharacteristics;
  /* 0x003a */ char __PADDING__[6];
} LDR_VERIFY_IMAGE_INFO, *PLDR_VERIFY_IMAGE_INFO; /* size: 0x0040 */

typedef enum _TAG_UNNAMED_17
{
  DataID = 2342,
} TAG_UNNAMED_17, *PTAG_UNNAMED_17;

typedef enum _IO_COMPLETION_INFORMATION_CLASS
{
  IoCompletionBasicInformation = 0,
} IO_COMPLETION_INFORMATION_CLASS, *PIO_COMPLETION_INFORMATION_CLASS;

typedef struct __BCRYPT_KEY_LENGTHS_STRUCT
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
} _BCRYPT_KEY_LENGTHS_STRUCT, *P_BCRYPT_KEY_LENGTHS_STRUCT; /* size: 0x000c */

enum MCA_EXCEPTION_TYPE
{
  HAL_MCE_RECORD = 0,
  HAL_MCA_RECORD = 1,
};

struct ISynchronizeContainer
{
}; /* size: 0x0008 */

enum PROPCTL_RECT_TYPE
{
  PCRT_MINIMUM = 0,
  PCRT_IDEAL = 1,
};

struct threadlocaleinfostruct
{
  /* 0x0000 */ int refcount;
  /* 0x0004 */ unsigned int lc_codepage;
  /* 0x0008 */ unsigned int lc_collate_cp;
  /* 0x000c */ unsigned long lc_handle[6];
  /* 0x0024 */ struct tagLC_ID lc_id[6];
  /* 0x0048 */ struct
  {
    /* 0x0048 */ char* locale;
    /* 0x0050 */ wchar_t* wlocale;
    /* 0x0058 */ int* refcount;
    /* 0x0060 */ int* wrefcount;
  } /* size: 0x0020 */ lc_category[6];
  /* 0x0108 */ int lc_clike;
  /* 0x010c */ int mb_cur_max;
  /* 0x0110 */ int* lconv_intl_refcount;
  /* 0x0118 */ int* lconv_num_refcount;
  /* 0x0120 */ int* lconv_mon_refcount;
  /* 0x0128 */ struct lconv* lconv;
  /* 0x0130 */ int* ctype1_refcount;
  /* 0x0138 */ unsigned short* ctype1;
  /* 0x0140 */ const unsigned short* pctype;
  /* 0x0148 */ const unsigned char* pclmap;
  /* 0x0150 */ const unsigned char* pcumap;
  /* 0x0158 */ struct __lc_time_data* lc_time_curr;
}; /* size: 0x0160 */

enum tagProcessType
{
  ProcessTypeNormal = 0,
  ProcessTypeService = 1,
  ProcessTypeComPlus = 2,
  ProcessTypeLegacySurrogate = 3,
  ProcessTypeComPlusService = 4,
};

typedef struct __midl_frag386_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag386_t, *P_midl_frag386_t; /* size: 0x0038 */

typedef struct _SYSTEM_BOOT_GRAPHICS_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FrameBuffer;
  /* 0x0008 */ unsigned long Width;
  /* 0x000c */ unsigned long Height;
  /* 0x0010 */ unsigned long PixelStride;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ enum _SYSTEM_PIXEL_FORMAT Format;
  /* 0x001c */ long __PADDING__[1];
} SYSTEM_BOOT_GRAPHICS_INFORMATION, *PSYSTEM_BOOT_GRAPHICS_INFORMATION; /* size: 0x0020 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >
{
}; /* size: 0x0008 */

struct FORMATETCDATA
{
  /* 0x0000 */ struct tagFORMATETC _FormatEtc;
  /* 0x0020 */ int fSaveOnFlush;
  /* 0x0024 */ unsigned long dwReserved1;
  /* 0x0028 */ unsigned long dwReserved2;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

struct FORMATETCDATAARRAY
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA _FormatEtcData[1];
}; /* size: 0x0048 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0008 */

struct IOleObject
{
}; /* size: 0x0008 */

struct IComServices2
{
}; /* size: 0x0008 */

class CLimitedWritableStorage::DestroyElement::__l3::<lambda_AA79AD408A52AB5A>;

enum DDE_DISPATCH_FUNC
{
  DDE_DISP_SENDONDATACHANGE = 1,
  DDE_DISP_OLECALLBACK = 2,
  DDE_DISP_SRVRWNDPROC = 3,
  DDE_DISP_DOCWNDPROC = 4,
};

struct IInternetHostSecurityManager
{
}; /* size: 0x0008 */

struct tagMCI_ANIM_RECT_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct tagRECT rc;
}; /* size: 0x0018 */

struct IViewObject
{
}; /* size: 0x0008 */

typedef enum __vc_attributes::event_receiverAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
} _vc_attributes::event_receiverAttribute::type_e, *P_vc_attributes::event_receiverAttribute::type_e;

typedef union _userHBITMAP::__MIDL_IWinTypes_0007
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _userBITMAP* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHBITMAP::__MIDL_IWinTypes_0007, *PuserHBITMAP::__MIDL_IWinTypes_0007; /* size: 0x0008 */

typedef struct _userHBITMAP
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_310;
  /* 0x0008 */ union _userHBITMAP::__MIDL_IWinTypes_0007 u;
} userHBITMAP, *PuserHBITMAP; /* size: 0x0010 */

typedef enum __vc_attributes::aggregatableAttribute::type_e
{
  never = 0,
  allowed = 1,
  always = 2,
} _vc_attributes::aggregatableAttribute::type_e, *P_vc_attributes::aggregatableAttribute::type_e;

enum tagIPIDFLAGS
{
  IPIDF_CONNECTING = 1,
  IPIDF_DISCONNECTED = 2,
  IPIDF_SERVERENTRY = 4,
  IPIDF_NOPING = 8,
  IPIDF_COPY = 16,
  IPIDF_VACANT = 128,
  IPIDF_NONNDRSTUB = 256,
  IPIDF_NONNDRPROXY = 512,
  IPIDF_NOTIFYACT = 1024,
  IPIDF_TRIED_ASYNC = 2048,
  IPIDF_ASYNC_SERVER = 4096,
  IPIDF_DEACTIVATED = 8192,
  IPIDF_WEAKREFCACHE = 16384,
  IPIDF_STRONGREFCACHE = 0xffff8000,
  IPIDF_UNSECURECALLSALLOWED = 0x10000,
};

typedef struct _IO_COMPLETION_BASIC_INFORMATION
{
  /* 0x0000 */ long Depth;
} IO_COMPLETION_BASIC_INFORMATION, *PIO_COMPLETION_BASIC_INFORMATION; /* size: 0x0004 */

struct CClassCache::SDPEHashKey
{
  /* 0x0000 */ wchar_t* _pstr;
  /* 0x0008 */ unsigned long _dwDIPFlags;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef enum __vc_attributes::event_sourceAttribute::type_e
{
  native = 0,
  com = 1,
  managed = 2,
} _vc_attributes::event_sourceAttribute::type_e, *P_vc_attributes::event_sourceAttribute::type_e;

class CFatVector
{
  /* 0x0000 */ long Padding_311[12];
  /* 0x0030 */ unsigned short _csectTable;
  /* 0x0032 */ unsigned short _csectBlock;
}; /* size: 0x0038 */

typedef struct _IO_COUNTERS
{
  /* 0x0000 */ unsigned __int64 ReadOperationCount;
  /* 0x0008 */ unsigned __int64 WriteOperationCount;
  /* 0x0010 */ unsigned __int64 OtherOperationCount;
  /* 0x0018 */ unsigned __int64 ReadTransferCount;
  /* 0x0020 */ unsigned __int64 WriteTransferCount;
  /* 0x0028 */ unsigned __int64 OtherTransferCount;
} IO_COUNTERS, *PIO_COUNTERS; /* size: 0x0030 */

typedef struct _MCGEN_TRACE_CONTEXT
{
  /* 0x0000 */ unsigned __int64 RegistrationHandle;
  /* 0x0008 */ unsigned __int64 Logger;
  /* 0x0010 */ unsigned __int64 MatchAnyKeyword;
  /* 0x0018 */ unsigned __int64 MatchAllKeyword;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long IsEnabled;
  /* 0x0028 */ unsigned char Level;
  /* 0x0029 */ unsigned char Reserve;
  /* 0x002a */ unsigned short EnableBitsCount;
  /* 0x002c */ long Padding_312;
  /* 0x0030 */ unsigned long* EnableBitMask;
  /* 0x0038 */ const unsigned __int64* EnableKeyWords;
  /* 0x0040 */ const unsigned char* EnableLevel;
} MCGEN_TRACE_CONTEXT, *PMCGEN_TRACE_CONTEXT; /* size: 0x0048 */

typedef enum __vc_attributes::helper_attributes::usageAttribute::usage_e
{
  eAnyUsage = 0,
  eCoClassUsage = 1,
  eCOMInterfaceUsage = 2,
  eInterfaceUsage = 6,
  eMemberUsage = 8,
  eMethodUsage = 16,
  eInterfaceMethodUsage = 32,
  eInterfaceMemberUsage = 64,
  eCoClassMemberUsage = 128,
  eCoClassMethodUsage = 256,
  eGlobalMethodUsage = 768,
  eGlobalDataUsage = 1024,
  eClassUsage = 2048,
  eInterfaceParameterUsage = 4096,
  eMethodParameterUsage = 12288,
  eIDLModuleUsage = 16384,
  eAnonymousUsage = 0xffff8000,
  eTypedefUsage = 0x10000,
  eUnionUsage = 0x20000,
  eEnumUsage = 0x40000,
  eDefineTagUsage = 0x80000,
  eStructUsage = 0x100000,
  eLocalUsage = 0x200000,
  ePropertyUsage = 0x400000,
  eEventUsage = 0x800000,
  eTemplateUsage = 0x1000000,
  eModuleUsage = 0x1000000,
  eIllegalUsage = 0x2000000,
  eAsynchronousUsage = 0x4000000,
  eAnyIDLUsage = 0x3f7fff,
} _vc_attributes::helper_attributes::usageAttribute::usage_e, *P_vc_attributes::helper_attributes::usageAttribute::usage_e;

typedef struct _wireSAFEARR_DISPATCH
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_313;
  /* 0x0008 */ struct IDispatch** apDispatch;
} wireSAFEARR_DISPATCH, *PwireSAFEARR_DISPATCH; /* size: 0x0010 */

typedef struct _wireSAFEARR_VARIANT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_314;
  /* 0x0008 */ struct _wireVARIANT** aVariant;
} wireSAFEARR_VARIANT, *PwireSAFEARR_VARIANT; /* size: 0x0010 */

typedef struct _wireSAFEARR_BRECORD
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_315;
  /* 0x0008 */ struct _wireBRECORD** aRecord;
} wireSAFEARR_BRECORD, *PwireSAFEARR_BRECORD; /* size: 0x0010 */

typedef struct _BYTE_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_316;
  /* 0x0008 */ unsigned char* pData;
} BYTE_SIZEDARR, *PBYTE_SIZEDARR; /* size: 0x0010 */

typedef struct _SHORT_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_317;
  /* 0x0008 */ unsigned short* pData;
} SHORT_SIZEDARR, *PSHORT_SIZEDARR; /* size: 0x0010 */

typedef struct _LONG_SIZEDARR
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ long Padding_318;
  /* 0x0008 */ unsigned long* pData;
} LONG_SIZEDARR, *PLONG_SIZEDARR; /* size: 0x0010 */

typedef union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001
{
  union
  {
    /* 0x0000 */ struct _wireSAFEARR_BSTR BstrStr;
    /* 0x0000 */ struct _wireSAFEARR_UNKNOWN UnknownStr;
    /* 0x0000 */ struct _wireSAFEARR_DISPATCH DispatchStr;
    /* 0x0000 */ struct _wireSAFEARR_VARIANT VariantStr;
    /* 0x0000 */ struct _wireSAFEARR_BRECORD RecordStr;
    /* 0x0000 */ struct _wireSAFEARR_HAVEIID HaveIidStr;
    /* 0x0000 */ struct _BYTE_SIZEDARR ByteStr;
    /* 0x0000 */ struct _SHORT_SIZEDARR WordStr;
    /* 0x0000 */ struct _LONG_SIZEDARR LongStr;
    /* 0x0000 */ struct _HYPER_SIZEDARR HyperStr;
  }; /* size: 0x0020 */
} wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001, *PwireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001; /* size: 0x0020 */

typedef struct _wireSAFEARRAY_UNION
{
  /* 0x0000 */ unsigned long sfType;
  /* 0x0004 */ long Padding_319;
  /* 0x0008 */ union _wireSAFEARRAY_UNION::__MIDL_IOleAutomationTypes_0001 u;
} wireSAFEARRAY_UNION, *PwireSAFEARRAY_UNION; /* size: 0x0028 */

struct AsyncIRemUnknown2
{
}; /* size: 0x0008 */

enum tagHOSTDLLFLAGS
{
  HDLLF_SINGLETHREADED = 1,
  HDLLF_APARTMENTTHREADED = 2,
  HDLLF_MULTITHREADED = 4,
  HDLLF_NEUTRALTHREADED = 8,
  HDLLF_HOSTTYPEMASK = 31,
  HDLLF_COMAPARTMENT = 32,
  HDLLF_SHUTTINGDOWN = 256,
};

typedef struct _EISA_PORT_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char NumberPorts : 5; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_PORT_DESCRIPTOR, *PEISA_PORT_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_PORT_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_PORT_DESCRIPTOR Configuration;
  /* 0x0001 */ unsigned short PortAddress;
} EISA_PORT_CONFIGURATION, *PEISA_PORT_CONFIGURATION; /* size: 0x0003 */

enum tagMSHCTX
{
  MSHCTX_LOCAL = 0,
  MSHCTX_NOSHAREDMEM = 1,
  MSHCTX_DIFFERENTMACHINE = 2,
  MSHCTX_INPROC = 3,
  MSHCTX_CROSSCTX = 4,
};

struct tagOBJREFDATA
{
  /* 0x0000 */ unsigned long nElms;
  /* 0x0004 */ long Padding_320;
  /* 0x0008 */ struct tagDATAELEMENT** ppElmArray;
}; /* size: 0x0010 */

typedef struct _PROCESSOR_RELATIONSHIP
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char Reserved[21];
  /* 0x0016 */ unsigned short GroupCount;
  /* 0x0018 */ struct _GROUP_AFFINITY GroupMask[1];
} PROCESSOR_RELATIONSHIP, *PPROCESSOR_RELATIONSHIP; /* size: 0x0028 */

typedef struct _NUMA_NODE_RELATIONSHIP
{
  /* 0x0000 */ unsigned long NodeNumber;
  /* 0x0004 */ unsigned char Reserved[20];
  /* 0x0018 */ struct _GROUP_AFFINITY GroupMask;
} NUMA_NODE_RELATIONSHIP, *PNUMA_NODE_RELATIONSHIP; /* size: 0x0028 */

typedef struct _CACHE_RELATIONSHIP
{
  /* 0x0000 */ unsigned char Level;
  /* 0x0001 */ unsigned char Associativity;
  /* 0x0002 */ unsigned short LineSize;
  /* 0x0004 */ unsigned long CacheSize;
  /* 0x0008 */ enum _PROCESSOR_CACHE_TYPE Type;
  /* 0x000c */ unsigned char Reserved[20];
  /* 0x0020 */ struct _GROUP_AFFINITY GroupMask;
} CACHE_RELATIONSHIP, *PCACHE_RELATIONSHIP; /* size: 0x0030 */

typedef struct _PROCESSOR_GROUP_INFO
{
  /* 0x0000 */ unsigned char MaximumProcessorCount;
  /* 0x0001 */ unsigned char ActiveProcessorCount;
  /* 0x0002 */ unsigned char Reserved[38];
  /* 0x0028 */ unsigned __int64 ActiveProcessorMask;
} PROCESSOR_GROUP_INFO, *PPROCESSOR_GROUP_INFO; /* size: 0x0030 */

typedef struct _GROUP_RELATIONSHIP
{
  /* 0x0000 */ unsigned short MaximumGroupCount;
  /* 0x0002 */ unsigned short ActiveGroupCount;
  /* 0x0004 */ unsigned char Reserved[20];
  /* 0x0018 */ struct _PROCESSOR_GROUP_INFO GroupInfo[1];
} GROUP_RELATIONSHIP, *PGROUP_RELATIONSHIP; /* size: 0x0048 */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX
{
  /* 0x0000 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ struct _PROCESSOR_RELATIONSHIP Processor;
    /* 0x0008 */ struct _NUMA_NODE_RELATIONSHIP NumaNode;
    /* 0x0008 */ struct _CACHE_RELATIONSHIP Cache;
    /* 0x0008 */ struct _GROUP_RELATIONSHIP Group;
  }; /* size: 0x0048 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION_EX; /* size: 0x0050 */

struct tagPALETTEENTRY
{
  /* 0x0000 */ unsigned char peRed;
  /* 0x0001 */ unsigned char peGreen;
  /* 0x0002 */ unsigned char peBlue;
  /* 0x0003 */ unsigned char peFlags;
}; /* size: 0x0004 */

struct tagLOGPALETTE
{
  /* 0x0000 */ unsigned short palVersion;
  /* 0x0002 */ unsigned short palNumEntries;
  /* 0x0004 */ struct tagPALETTEENTRY palPalEntry[1];
}; /* size: 0x0008 */

typedef enum _IMAGEHLP_SYMBOL_TYPE_INFO
{
  TI_GET_SYMTAG = 0,
  TI_GET_SYMNAME = 1,
  TI_GET_LENGTH = 2,
  TI_GET_TYPE = 3,
  TI_GET_TYPEID = 4,
  TI_GET_BASETYPE = 5,
  TI_GET_ARRAYINDEXTYPEID = 6,
  TI_FINDCHILDREN = 7,
  TI_GET_DATAKIND = 8,
  TI_GET_ADDRESSOFFSET = 9,
  TI_GET_OFFSET = 10,
  TI_GET_VALUE = 11,
  TI_GET_COUNT = 12,
  TI_GET_CHILDRENCOUNT = 13,
  TI_GET_BITPOSITION = 14,
  TI_GET_VIRTUALBASECLASS = 15,
  TI_GET_VIRTUALTABLESHAPEID = 16,
  TI_GET_VIRTUALBASEPOINTEROFFSET = 17,
  TI_GET_CLASSPARENTID = 18,
  TI_GET_NESTED = 19,
  TI_GET_SYMINDEX = 20,
  TI_GET_LEXICALPARENT = 21,
  TI_GET_ADDRESS = 22,
  TI_GET_THISADJUST = 23,
  TI_GET_UDTKIND = 24,
  TI_IS_EQUIV_TO = 25,
  TI_GET_CALLING_CONVENTION = 26,
  TI_IS_CLOSE_EQUIV_TO = 27,
  TI_GTIEX_REQS_VALID = 28,
  TI_GET_VIRTUALBASEOFFSET = 29,
  TI_GET_VIRTUALBASEDISPINDEX = 30,
  TI_GET_IS_REFERENCE = 31,
  TI_GET_INDIRECTVIRTUALBASECLASS = 32,
  TI_GET_VIRTUALBASETABLETYPE = 33,
  IMAGEHLP_SYMBOL_TYPE_INFO_MAX = 34,
} IMAGEHLP_SYMBOL_TYPE_INFO, *PIMAGEHLP_SYMBOL_TYPE_INFO;

struct tagEMRINVERTRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned char RgnData[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

typedef enum _TAG_UNNAMED_18
{
  RIFFLG_HASCOUNTERPART = 1,
  RIFFLG_HASCLSID = 2,
  RIFFLG_PACKAGE_SCOPED_CLSID = 4,
  RIFFLG_REGISTERED_SERVER_INTERFACE_AT_LEAST_ONCE = 8,
  RIFFLG_SERVER_INTERFACE_IS_IINSPECTABLE_OR_DERIVED = 16,
} TAG_UNNAMED_18, *PTAG_UNNAMED_18;

typedef enum _MINIDUMP_STREAM_TYPE
{
  UnusedStream = 0,
  ReservedStream0 = 1,
  ReservedStream1 = 2,
  ThreadListStream = 3,
  ModuleListStream = 4,
  MemoryListStream = 5,
  ExceptionStream = 6,
  SystemInfoStream = 7,
  ThreadExListStream = 8,
  Memory64ListStream = 9,
  CommentStreamA = 10,
  CommentStreamW = 11,
  HandleDataStream = 12,
  FunctionTableStream = 13,
  UnloadedModuleListStream = 14,
  MiscInfoStream = 15,
  MemoryInfoListStream = 16,
  ThreadInfoListStream = 17,
  HandleOperationListStream = 18,
  TokenStream = 19,
  ceStreamNull = 0xffff8000,
  ceStreamSystemInfo = 0xffff8001,
  ceStreamException = 0xffff8002,
  ceStreamModuleList = 0xffff8003,
  ceStreamProcessList = 0xffff8004,
  ceStreamThreadList = 0xffff8005,
  ceStreamThreadContextList = 0xffff8006,
  ceStreamThreadCallStackList = 0xffff8007,
  ceStreamMemoryVirtualList = 0xffff8008,
  ceStreamMemoryPhysicalList = 0xffff8009,
  ceStreamBucketParameters = 0xffff800a,
  ceStreamProcessModuleMap = 0xffff800b,
  ceStreamDiagnosisList = 0xffff800c,
  LastReservedStream = 0xffffffff,
} MINIDUMP_STREAM_TYPE, *PMINIDUMP_STREAM_TYPE;

struct tagPOINTER_DEVICE_INFO
{
  /* 0x0000 */ unsigned long displayOrientation;
  /* 0x0004 */ long Padding_321;
  /* 0x0008 */ void* device;
  /* 0x0010 */ enum tagPOINTER_DEVICE_TYPE pointerDeviceType;
  /* 0x0014 */ long Padding_322;
  /* 0x0018 */ struct HMONITOR__* monitor;
  /* 0x0020 */ unsigned long startingCursorId;
  /* 0x0024 */ unsigned short maxActiveContacts;
  /* 0x0026 */ wchar_t productString[520];
  /* 0x0436 */ char __PADDING__[2];
}; /* size: 0x0438 */

class BUCL::CConvertToSignedType<short>
{
}; /* size: 0x0001 */

enum tagHITRESULT
{
  HITRESULT_OUTSIDE = 0,
  HITRESULT_TRANSPARENT = 1,
  HITRESULT_CLOSE = 2,
  HITRESULT_HIT = 3,
};

struct IXMLDOMDocument
{
}; /* size: 0x0008 */

enum CClassCache::CClassEntry::eGUIDIndex
{
  iCLSID = 0,
  iPartition = 1,
  iTotal = 2,
};

struct tagMSG
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ long Padding_323;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
  /* 0x0020 */ unsigned long time;
  /* 0x0024 */ struct tagPOINT pt;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _CERT_STORE_PROV_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cStoreProvFunc;
  /* 0x0008 */ void** rgpvStoreProvFunc;
  /* 0x0010 */ void* hStoreProv;
  /* 0x0018 */ unsigned long dwStoreProvFlags;
  /* 0x001c */ long Padding_324;
  /* 0x0020 */ void* hStoreProvFuncAddr2;
} CERT_STORE_PROV_INFO, *PCERT_STORE_PROV_INFO; /* size: 0x0028 */

typedef struct _DISK_INT13_INFO
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ char Padding_325[2];
  /* 0x0004 */ unsigned long MaxCylinders;
  /* 0x0008 */ unsigned short SectorsPerTrack;
  /* 0x000a */ unsigned short MaxHeads;
  /* 0x000c */ unsigned short NumberDrives;
  /* 0x000e */ char __PADDING__[2];
} DISK_INT13_INFO, *PDISK_INT13_INFO; /* size: 0x0010 */

typedef struct _OPEN_PRINTER_PROPS_INFOW
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_326;
  /* 0x0008 */ wchar_t* pszSheetName;
  /* 0x0010 */ unsigned int uSheetIndex;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ int bModal;
  /* 0x001c */ long __PADDING__[1];
} OPEN_PRINTER_PROPS_INFOW, *POPEN_PRINTER_PROPS_INFOW; /* size: 0x0020 */

enum tagDVASPECT2
{
  DVASPECT_OPAQUE = 16,
  DVASPECT_TRANSPARENT = 32,
};

typedef struct _DSSSEED
{
  /* 0x0000 */ unsigned long counter;
  /* 0x0004 */ unsigned char seed[20];
} DSSSEED, *PDSSSEED; /* size: 0x0018 */

typedef struct _PUBKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ struct _DSSSEED DSSSeed;
} PUBKEYVER3, *PPUBKEYVER3; /* size: 0x0028 */

struct Windows::Rtl::IRtlObject
{
}; /* size: 0x0008 */

typedef enum _MINIDUMP_TYPE
{
  MiniDumpNormal = 0,
  MiniDumpWithDataSegs = 1,
  MiniDumpWithFullMemory = 2,
  MiniDumpWithHandleData = 4,
  MiniDumpFilterMemory = 8,
  MiniDumpScanMemory = 16,
  MiniDumpWithUnloadedModules = 32,
  MiniDumpWithIndirectlyReferencedMemory = 64,
  MiniDumpFilterModulePaths = 128,
  MiniDumpWithProcessThreadData = 256,
  MiniDumpWithPrivateReadWriteMemory = 512,
  MiniDumpWithoutOptionalData = 1024,
  MiniDumpWithFullMemoryInfo = 2048,
  MiniDumpWithThreadInfo = 4096,
  MiniDumpWithCodeSegs = 8192,
  MiniDumpWithoutAuxiliaryState = 16384,
  MiniDumpWithFullAuxiliaryState = 0xffff8000,
  MiniDumpWithPrivateWriteCopyMemory = 0x10000,
  MiniDumpIgnoreInaccessibleMemory = 0x20000,
  MiniDumpWithTokenInformation = 0x40000,
  MiniDumpWithModuleHeaders = 0x80000,
  MiniDumpFilterTriage = 0x100000,
  MiniDumpValidTypeFlags = 0x1fffff,
} MINIDUMP_TYPE, *PMINIDUMP_TYPE;

struct IBinding
{
}; /* size: 0x0008 */

enum tagCallType
{
  CALLTYPE_NONE = 0,
  CALLTYPE_SYNCCALL = 1,
  CALLTYPE_SYNCENTER = 2,
  CALLTYPE_SYNCLEAVE = 3,
  CALLTYPE_SYNCRETURN = 4,
  CALLTYPE_BEGINCALL = 5,
  CALLTYPE_BEGINRETURN = 6,
  CALLTYPE_BEGINENTER = 7,
  CALLTYPE_BEGINLEAVE = 8,
  CALLTYPE_FINISHENTER = 9,
  CALLTYPE_FINISHLEAVE = 10,
  CALLTYPE_FINISHCALL = 11,
  CALLTYPE_FINISHRETURN = 12,
};

enum EPrintPropertyType
{
  kPropertyTypeString = 1,
  kPropertyTypeInt32 = 2,
  kPropertyTypeInt64 = 3,
  kPropertyTypeByte = 4,
  kPropertyTypeTime = 5,
  kPropertyTypeDevMode = 6,
  kPropertyTypeSD = 7,
  kPropertyTypeNotificationReply = 8,
  kPropertyTypeNotificationOptions = 9,
  kPropertyTypeBuffer = 10,
};

struct PrintPropertyValue
{
  /* 0x0000 */ enum EPrintPropertyType ePropertyType;
  /* 0x0004 */ long Padding_327;
  union
  {
    union
    {
      /* 0x0008 */ unsigned char propertyByte;
      /* 0x0008 */ wchar_t* propertyString;
      /* 0x0008 */ long propertyInt32;
      /* 0x0008 */ __int64 propertyInt64;
      struct
      {
        /* 0x0008 */ unsigned long cbBuf;
        /* 0x0004 */ long Padding_328;
        /* 0x0010 */ void* pBuf;
      } /* size: 0x0010 */ propertyBlob;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ value;
}; /* size: 0x0018 */

enum tagXFORMCOORDS
{
  XFORMCOORDS_POSITION = 1,
  XFORMCOORDS_SIZE = 2,
  XFORMCOORDS_HIMETRICTOCONTAINER = 4,
  XFORMCOORDS_CONTAINERTOHIMETRIC = 8,
  XFORMCOORDS_EVENTCOMPAT = 16,
};

enum tagPROPPAGESTATUS
{
  PROPPAGESTATUS_DIRTY = 1,
  PROPPAGESTATUS_VALIDATE = 2,
  PROPPAGESTATUS_CLEAN = 4,
};

typedef struct _PSFEATURE_CUSTPAPER
{
  /* 0x0000 */ long lOrientation;
  /* 0x0004 */ long lWidth;
  /* 0x0008 */ long lHeight;
  /* 0x000c */ long lWidthOffset;
  /* 0x0010 */ long lHeightOffset;
} PSFEATURE_CUSTPAPER, *PPSFEATURE_CUSTPAPER; /* size: 0x0014 */

struct IXMLDOMAttribute
{
}; /* size: 0x0008 */

enum SourceOfClientHResult
{
  Unknown = 0,
  Server = 1,
  ClientSideChannelNegotiateSyntax = 2,
  ClientSideChannelGetBuffer = 3,
  ClientSideChannelSendReceive = 4,
  ClientSideChannelSend = 5,
  ClientSideChannelReceive = 6,
  ClientSideTransportNegotiateSyntax = 7,
  ClientSideTransportGetBuffer = 8,
  ClientSideTransportSendReceive = 9,
  ClientSideTransportSend = 10,
  ClientSideTransportReceive = 11,
  ClientSideSizing = 12,
  ClientSideMarshaling = 13,
  ClientSideUnmarshaling = 14,
  ClientCancel = 15,
  ServerFault = 16,
  ServerSideAccessCheck = 17,
  ServerSideChannelGeneric = 18,
  ServerSideChannelCallControl = 19,
};

enum SYM_TYPE
{
  SymNone = 0,
  SymCoff = 1,
  SymCv = 2,
  SymPdb = 3,
  SymExport = 4,
  SymDeferred = 5,
  SymSym = 6,
  SymDia = 7,
  SymVirtual = 8,
  NumSymTypes = 9,
};

class CPunkForRelease
{
  /* 0x0000 */ long Padding_329[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _fTopLayerMFP : 1; /* bit position: 0 */
  /* 0x0010 */ struct tagSTGMEDIUM _stgmed;
  /* 0x0028 */ struct IUnknown* _pUnkForRelease;
}; /* size: 0x0030 */

typedef struct _PS_ATTRIBUTE
{
  /* 0x0000 */ unsigned __int64 Attribute;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ unsigned __int64 Value;
    /* 0x0010 */ void* ValuePtr;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned __int64* ReturnLength;
} PS_ATTRIBUTE, *PPS_ATTRIBUTE; /* size: 0x0020 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlObject* m_Data;
}; /* size: 0x0008 */

typedef enum _MODULE_WRITE_FLAGS
{
  ModuleWriteModule = 1,
  ModuleWriteDataSeg = 2,
  ModuleWriteMiscRecord = 4,
  ModuleWriteCvRecord = 8,
  ModuleReferencedByMemory = 16,
  ModuleWriteTlsData = 32,
  ModuleWriteCodeSegs = 64,
} MODULE_WRITE_FLAGS, *PMODULE_WRITE_FLAGS;

typedef struct _PLUGPLAY_CONTROL_DEPTH_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long DeviceDepth;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_DEPTH_DATA, *PPLUGPLAY_CONTROL_DEPTH_DATA; /* size: 0x0018 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION, *PKEY_VALUE_PARTIAL_INFORMATION; /* size: 0x0010 */

enum PATH_TYPE
{
  PATH_TYPE_UNKNOWN = 0,
  PATH_TYPE_UNC_ABSOLUTE = 1,
  PATH_TYPE_LOCAL_DEVICE = 2,
  PATH_TYPE_ROOT_LOCAL_DEVICE = 3,
  PATH_TYPE_DRIVE_ABSOLUTE = 4,
  PATH_TYPE_DRIVE_RELATIVE = 5,
  PATH_TYPE_ROOTED = 6,
  PATH_TYPE_RELATIVE = 7,
};

struct DISPLAYCONFIG_TARGET_PREFERRED_MODE
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ unsigned int width;
  /* 0x0018 */ unsigned int height;
  /* 0x001c */ long Padding_330;
  /* 0x0020 */ struct DISPLAYCONFIG_TARGET_MODE targetMode;
}; /* size: 0x0050 */

struct tagENHMETARECORD
{
  /* 0x0000 */ unsigned long iType;
  /* 0x0004 */ unsigned long nSize;
  /* 0x0008 */ unsigned long dParm[1];
}; /* size: 0x000c */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >;

enum ADDRESS_MODE
{
  AddrMode1616 = 0,
  AddrMode1632 = 1,
  AddrModeReal = 2,
  AddrModeFlat = 3,
};

typedef enum _IMAGEHLP_STATUS_REASON
{
  BindOutOfMemory = 0,
  BindRvaToVaFailed = 1,
  BindNoRoomInImage = 2,
  BindImportModuleFailed = 3,
  BindImportProcedureFailed = 4,
  BindImportModule = 5,
  BindImportProcedure = 6,
  BindForwarder = 7,
  BindForwarderNOT = 8,
  BindImageModified = 9,
  BindExpandFileHeaders = 10,
  BindImageComplete = 11,
  BindMismatchedSymbols = 12,
  BindSymbolsNotUpdated = 13,
  BindImportProcedure32 = 14,
  BindImportProcedure64 = 15,
  BindForwarder32 = 16,
  BindForwarder64 = 17,
  BindForwarderNOT32 = 18,
  BindForwarderNOT64 = 19,
} IMAGEHLP_STATUS_REASON, *PIMAGEHLP_STATUS_REASON;

typedef enum _THREAD_WRITE_FLAGS
{
  ThreadWriteThread = 1,
  ThreadWriteStack = 2,
  ThreadWriteContext = 4,
  ThreadWriteBackingStore = 8,
  ThreadWriteInstructionWindow = 16,
  ThreadWriteThreadData = 32,
  ThreadWriteThreadInfo = 64,
} THREAD_WRITE_FLAGS, *PTHREAD_WRITE_FLAGS;

typedef struct _SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM
{
  union
  {
    union
    {
      /* 0x0000 */ struct SERVICE_TRIGGER_CUSTOM_STATE_ID CustomStateId;
      struct
      {
        /* 0x0000 */ unsigned long DataOffset;
        /* 0x0004 */ unsigned char Data[1];
        /* 0x0005 */ char __PADDING__[3];
      } /* size: 0x0008 */ s;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
} SERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM, *PSERVICE_CUSTOM_SYSTEM_STATE_CHANGE_DATA_ITEM; /* size: 0x0008 */

enum tagCTRLINFO
{
  CTRLINFO_EATS_RETURN = 1,
  CTRLINFO_EATS_ESCAPE = 2,
};

enum tagAspectInfoFlag
{
  DVASPECTINFOFLAG_CANOPTIMIZE = 1,
};

struct tagPROPERTYSETHEADER
{
  /* 0x0000 */ unsigned short wByteOrder;
  /* 0x0002 */ unsigned short wFormat;
  /* 0x0004 */ unsigned long dwOSVer;
  /* 0x0008 */ struct _GUID clsid;
  /* 0x0018 */ unsigned long reserved;
}; /* size: 0x001c */

enum tagExtentMode
{
  DVEXTENT_CONTENT = 0,
  DVEXTENT_INTEGRAL = 1,
};

struct IWindowForBindingUI
{
}; /* size: 0x0008 */

class ClientCallRetryContext
{
  /* 0x0000 */ long Padding_331[2];
  /* 0x0008 */ HRESULT _hr;
  /* 0x000c */ long Padding_332;
  /* 0x0010 */ unsigned __int64 _dwWakeup;
  /* 0x0018 */ unsigned long _dwMillSecToWait;
  /* 0x001c */ unsigned int _cAutoRetries;
  /* 0x0020 */ unsigned int _cLastAutoRetryWaitIn100ns;
  /* 0x0024 */ unsigned int _cMaxAutoRetryWaitIn100ns;
  /* 0x0028 */ unsigned int _cTotalAutoRetryWaitIn100ns;
}; /* size: 0x0030 */

enum tagGUIDKIND
{
  GUIDKIND_DEFAULT_SOURCE_DISP_IID = 1,
};

class Microsoft::WRL::Details::RuntimeClassBaseT<2>
{
}; /* size: 0x0001 */

enum CClassCache::CCEHashTable::eFlags
{
  fTREAT_AS = 1,
  fINCOMPLETE = 2,
  fDO_NOT_HASH = 4,
  fCOMPLUS = 8,
  fSIDE_BY_SIDE = 16,
  fSIDE_BY_SIDE_WITH_NO_HASHING = 32,
};

enum tagPOINTERINACTIVE
{
  POINTERINACTIVE_ACTIVATEONENTRY = 1,
  POINTERINACTIVE_DEACTIVATEONLEAVE = 2,
  POINTERINACTIVE_ACTIVATEONDRAG = 4,
};

struct IComCatalogLocation
{
}; /* size: 0x0008 */

enum OLE_TRISTATE
{
  triUnchecked = 0,
  triChecked = 1,
  triGray = 2,
};

enum CRefExportCount::tagTokens
{
  ALIVE = 0,
  KILL = 1,
  DEAD = 2,
};

enum VARIANT_SERIALIZE_FLAGS
{
  VSF_DEFAULT = 0,
  VSF_ALLOW_LARGE_STREAMS = 1,
};

typedef struct _CRYPT_MASK_GEN_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
} CRYPT_MASK_GEN_ALGORITHM, *PCRYPT_MASK_GEN_ALGORITHM; /* size: 0x0020 */

struct mmtime_tag
{
  /* 0x0000 */ unsigned int wType;
  union
  {
    union
    {
      /* 0x0004 */ unsigned long ms;
      /* 0x0004 */ unsigned long sample;
      /* 0x0004 */ unsigned long cb;
      /* 0x0004 */ unsigned long ticks;
      struct
      {
        /* 0x0004 */ unsigned char hour;
        /* 0x0005 */ unsigned char min;
        /* 0x0006 */ unsigned char sec;
        /* 0x0007 */ unsigned char frame;
        /* 0x0008 */ unsigned char fps;
        /* 0x0009 */ unsigned char dummy;
        /* 0x000a */ unsigned char pad[2];
      } /* size: 0x0008 */ smpte;
      struct
      {
        /* 0x0004 */ unsigned long songptrpos;
      } /* size: 0x0004 */ midi;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
}; /* size: 0x000c */

enum tagLOADSTATE
{
  LOADSTATE_FAIL = 0,
  LOADSTATE_DONE = 1,
  LOADSTATE_BADFMTID = 2,
  LOADSTATE_USERDEFINEDNOTFOUND = 3,
  LOADSTATE_USERDEFINEDDELETE = 4,
};

struct tagORPCTHAT
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ long Padding_333;
  /* 0x0008 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0010 */

typedef struct _SYSTEM_BIGPOOL_ENTRY
{
  union
  {
    /* 0x0000 */ void* VirtualAddress;
    /* 0x0000 */ unsigned __int64 NonPaged : 1; /* bit position: 0 */
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 SizeInBytes;
  union
  {
    /* 0x0010 */ unsigned char Tag[4];
    /* 0x0010 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_BIGPOOL_ENTRY, *PSYSTEM_BIGPOOL_ENTRY; /* size: 0x0018 */

typedef struct _SYSTEM_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_334;
  /* 0x0008 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_BIGPOOL_INFORMATION, *PSYSTEM_BIGPOOL_INFORMATION; /* size: 0x0020 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlUtf16LEStringBuilder* m_Data;
}; /* size: 0x0008 */

typedef enum _PROPOP
{
  PROPOP_IGNORE = 1,
  PROPOP_DELETE = 2,
  PROPOP_INSERT = 3,
  PROPOP_MOVE = 4,
  PROPOP_UPDATE = 5,
} PROPOP, *PPROPOP;

typedef struct _XSAVE_AREA_HEADER
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned __int64 Reserved[7];
} XSAVE_AREA_HEADER, *PXSAVE_AREA_HEADER; /* size: 0x0040 */

enum tagPATCHOP
{
  PATCHOP_COMPUTESIZE = 0,
  PATCHOP_ALIGNLENGTHS = 1,
  PATCHOP_EXPAND = 2,
};

typedef struct _CERT_HASHED_URL
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Hash;
  /* 0x0028 */ wchar_t* pwszUrl;
} CERT_HASHED_URL, *PCERT_HASHED_URL; /* size: 0x0030 */

typedef struct _CERT_BIOMETRIC_DATA
{
  /* 0x0000 */ unsigned long dwTypeOfBiometricDataChoice;
  /* 0x0004 */ long Padding_335;
  union
  {
    /* 0x0008 */ unsigned long dwPredefined;
    /* 0x0008 */ char* pszObjId;
  }; /* size: 0x0008 */
  /* 0x0010 */ struct _CERT_HASHED_URL HashedUrl;
} CERT_BIOMETRIC_DATA, *PCERT_BIOMETRIC_DATA; /* size: 0x0040 */

typedef struct _GET_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Length;
} GET_LENGTH_INFORMATION, *PGET_LENGTH_INFORMATION; /* size: 0x0008 */

struct IDropSourceNotify
{
}; /* size: 0x0008 */

enum DIRENTRYOP
{
  DEOP_FIND = 0,
  DEOP_REMOVE = 1,
};

enum DECOLOR
{
  DE_RED = 0,
  DE_BLACK = 1,
};

enum CDFB_CLASSTYPE
{
  CDFB_DIRECTDOCFILE = 0,
  CDFB_DIRECTSTREAM = 1,
  CDFB_WRAPPEDDOCFILE = 2,
  CDFB_TRANSACTEDSTREAM = 3,
};

struct IMAGE_LOAD_CONFIG_DIRECTORY64
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 LockPrefixTable;
  /* 0x0030 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0038 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0040 */ unsigned __int64 ProcessAffinityMask;
  /* 0x0048 */ unsigned long ProcessHeapFlags;
  /* 0x004c */ unsigned short CSDVersion;
  /* 0x004e */ unsigned short Reserved1;
  /* 0x0050 */ unsigned __int64 EditList;
  /* 0x0058 */ unsigned __int64 SecurityCookie;
  /* 0x0060 */ unsigned __int64 SEHandlerTable;
  /* 0x0068 */ unsigned __int64 SEHandlerCount;
}; /* size: 0x0070 */

enum WHICHTIME
{
  WT_CREATION = 0,
  WT_MODIFICATION = 1,
  WT_ACCESS = 2,
};

typedef struct _OBJECT_ATTRIBUTES32
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long RootDirectory;
  /* 0x0008 */ unsigned long ObjectName;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long SecurityDescriptor;
  /* 0x0014 */ unsigned long SecurityQualityOfService;
} OBJECT_ATTRIBUTES32, *POBJECT_ATTRIBUTES32; /* size: 0x0018 */

struct tagMIDIOUTCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned short wTechnology;
  /* 0x004a */ unsigned short wVoices;
  /* 0x004c */ unsigned short wNotes;
  /* 0x004e */ unsigned short wChannelMask;
  /* 0x0050 */ unsigned long dwSupport;
}; /* size: 0x0054 */

typedef struct _SYSTEM_PREFETCH_STATS
{
  /* 0x0000 */ unsigned long DemandFilePageCount;
  /* 0x0004 */ unsigned long DemandFileIOCount;
  /* 0x0008 */ unsigned long TrickleFilePageCount;
  /* 0x000c */ unsigned long TrickleFileIOCount;
  /* 0x0010 */ unsigned long DemandPrivatePageCount;
  /* 0x0014 */ unsigned long DemandPrivateIOCount;
  /* 0x0018 */ unsigned long TricklePrivatePageCount;
  /* 0x001c */ unsigned long TricklePrivateIOCount;
} SYSTEM_PREFETCH_STATS, *PSYSTEM_PREFETCH_STATS; /* size: 0x0020 */

enum CPropertyStorage::EIsWriteable
{
  PROBE_IF_NECESSARY = 0,
  DO_NOT_PROBE = 1,
};

typedef struct _PS_STD_HANDLE_INFO
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long StdHandleState : 2; /* bit position: 0 */
      /* 0x0000 */ unsigned long PseudoHandleMask : 3; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long StdHandleSubsystemType;
} PS_STD_HANDLE_INFO, *PPS_STD_HANDLE_INFO; /* size: 0x0008 */

typedef struct _CERT_BIOMETRIC_EXT_INFO
{
  /* 0x0000 */ unsigned long cBiometricData;
  /* 0x0004 */ long Padding_336;
  /* 0x0008 */ struct _CERT_BIOMETRIC_DATA* rgBiometricData;
} CERT_BIOMETRIC_EXT_INFO, *PCERT_BIOMETRIC_EXT_INFO; /* size: 0x0010 */

typedef struct _LUNICODE_STRING
{
  /* 0x0000 */ unsigned __int64 Length;
  /* 0x0008 */ unsigned __int64 MaximumLength;
  /* 0x0010 */ wchar_t* Buffer;
} LUNICODE_STRING, *PLUNICODE_STRING; /* size: 0x0018 */

class Windows::AutoPODBase<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >
{
  /* 0x0000 */ struct _LUNICODE_STRING m_Data;
}; /* size: 0x0018 */

struct IAddrExclusionControl
{
}; /* size: 0x0008 */

enum CPropertyStorage::EInitializePropertyStream
{
  OPEN_PROPSTREAM = 0,
  CREATE_PROPSTREAM = 1,
  DELETE_PROPSTREAM = 2,
};

enum BUCL::HashTable::InsertOrUpdateIfPresentDisposition
{
  eUpdateValue = 0,
  eLeaveValueAlone = 1,
};

struct DLGTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ unsigned short cdit;
  /* 0x000a */ short x;
  /* 0x000c */ short y;
  /* 0x000e */ short cx;
  /* 0x0010 */ short cy;
}; /* size: 0x0012 */

class Windows::Rtl::CriticalSectionLock
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION m_Lock;
  /* 0x0028 */ BOOL m_fConstructed;
}; /* size: 0x0030 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;

enum BUCL::DequeIteratorMovementDirection
{
  eDequeIteratorMoveForward = 0,
  eDequeIteratorMoveBackward = 1,
};

typedef enum _TAG_UNNAMED_19
{
  Value = 1,
} TAG_UNNAMED_19, *PTAG_UNNAMED_19;

typedef struct _TOKEN_GROUPS_AND_PRIVILEGES
{
  /* 0x0000 */ unsigned long SidCount;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Sids;
  /* 0x0010 */ unsigned long RestrictedSidCount;
  /* 0x0014 */ unsigned long RestrictedSidLength;
  /* 0x0018 */ struct _SID_AND_ATTRIBUTES* RestrictedSids;
  /* 0x0020 */ unsigned long PrivilegeCount;
  /* 0x0024 */ unsigned long PrivilegeLength;
  /* 0x0028 */ struct _LUID_AND_ATTRIBUTES* Privileges;
  /* 0x0030 */ struct _LUID AuthenticationId;
} TOKEN_GROUPS_AND_PRIVILEGES, *PTOKEN_GROUPS_AND_PRIVILEGES; /* size: 0x0038 */

typedef struct _IMAGE_DATA_DIRECTORY
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long Size;
} IMAGE_DATA_DIRECTORY, *PIMAGE_DATA_DIRECTORY; /* size: 0x0008 */

typedef struct _IMAGE_BOUND_FORWARDER_REF
{
  /* 0x0000 */ unsigned long TimeDateStamp;
  /* 0x0004 */ unsigned short OffsetModuleName;
  /* 0x0006 */ unsigned short Reserved;
} IMAGE_BOUND_FORWARDER_REF, *PIMAGE_BOUND_FORWARDER_REF; /* size: 0x0008 */

class Windows::Auto<_UNICODE_STRING>
{
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_20
{
  Value = 1,
} TAG_UNNAMED_20, *PTAG_UNNAMED_20;

struct Windows::Rtl::_FORMATTED_STREAM_FLAG_MAP_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_337;
  /* 0x0008 */ const char* String;
}; /* size: 0x0010 */

typedef enum _TAG_UNNAMED_21
{
  Value = 0,
} TAG_UNNAMED_21, *PTAG_UNNAMED_21;

typedef enum _TAG_UNNAMED_22
{
  Value = 0,
} TAG_UNNAMED_22, *PTAG_UNNAMED_22;

typedef enum _TAG_UNNAMED_23
{
  Value = 1,
} TAG_UNNAMED_23, *PTAG_UNNAMED_23;

struct IContextMarshaler
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_24
{
  Value = 0,
} TAG_UNNAMED_24, *PTAG_UNNAMED_24;

struct IPropertyStorage
{
}; /* size: 0x0008 */

typedef struct _TRANSACTION_ENLISTMENT_PAIR
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID ResourceManagerId;
} TRANSACTION_ENLISTMENT_PAIR, *PTRANSACTION_ENLISTMENT_PAIR; /* size: 0x0020 */

typedef struct _TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION
{
  /* 0x0000 */ struct _TRANSACTION_ENLISTMENT_PAIR SuperiorEnlistmentPair;
} TRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION, *PTRANSACTION_SUPERIOR_ENLISTMENT_INFORMATION; /* size: 0x0020 */

typedef struct _QUAD
{
  union
  {
    /* 0x0000 */ __int64 UseThisFieldToCopy;
    /* 0x0000 */ double DoNotUseThisField;
  }; /* size: 0x0008 */
} QUAD, *PQUAD; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_25
{
  Value = 1,
} TAG_UNNAMED_25, *PTAG_UNNAMED_25;

struct _WNF_USER_SUBSCRIPTION;

struct tagDEVNAMES
{
  /* 0x0000 */ unsigned short wDriverOffset;
  /* 0x0002 */ unsigned short wDeviceOffset;
  /* 0x0004 */ unsigned short wOutputOffset;
  /* 0x0006 */ unsigned short wDefault;
}; /* size: 0x0008 */

struct IMarshalEnvoy
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_26
{
  Value = 0,
} TAG_UNNAMED_26, *PTAG_UNNAMED_26;

struct tMIXERCONTROLDETAILS_UNSIGNED
{
  /* 0x0000 */ unsigned long dwValue;
}; /* size: 0x0004 */

struct IGlobalOptions
{
}; /* size: 0x0008 */

struct IInstanceInfo
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_27
{
  Value = 1,
} TAG_UNNAMED_27, *PTAG_UNNAMED_27;

enum APPCRUSHER_SOURCE
{
  ACS_BACKSTACK = 0,
  ACS_VISIBLE = 1,
  ACS_LIST = 2,
  ACS_INVALID = 3,
};

typedef struct _KERNEL_USER_TIMES
{
  /* 0x0000 */ union _LARGE_INTEGER CreateTime;
  /* 0x0008 */ union _LARGE_INTEGER ExitTime;
  /* 0x0010 */ union _LARGE_INTEGER KernelTime;
  /* 0x0018 */ union _LARGE_INTEGER UserTime;
} KERNEL_USER_TIMES, *PKERNEL_USER_TIMES; /* size: 0x0020 */

struct IEnumSTATSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_28
{
  value = 1,
} TAG_UNNAMED_28, *PTAG_UNNAMED_28;

class CBasedFatPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CFat
{
  /* 0x0000 */ class CFatVector _fv;
  /* 0x0038 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0040 */ const unsigned long _sid;
  /* 0x0044 */ long Padding_338;
  /* 0x0048 */ class CBasedFatPtr _pfatReal;
  /* 0x0050 */ class CBasedFatPtr _pfatNoScratch;
  /* 0x0058 */ unsigned long _sectNoSnapshot;
  /* 0x005c */ unsigned long _sectNoSnapshotFree;
  /* 0x0060 */ unsigned short _uFatShift;
  /* 0x0062 */ unsigned short _uFatMask;
  /* 0x0064 */ unsigned long _cfsTable;
  /* 0x0068 */ unsigned long _ulFreeSects;
  /* 0x006c */ unsigned long _cUnmarkedSects;
  /* 0x0070 */ unsigned long _sectFirstFree;
  /* 0x0074 */ unsigned long _sectLastUsed;
  /* 0x0078 */ unsigned long _sectMax;
  /* 0x007c */ unsigned long _ipfsRangeLocks;
  /* 0x0080 */ unsigned short _isectRangeLocks;
}; /* size: 0x0088 */

typedef enum _TAG_UNNAMED_29
{
  value = 1,
} TAG_UNNAMED_29, *PTAG_UNNAMED_29;

enum SEARCH_SUBMIT_TYPE
{
  SST_SEARCH_BUTTON = 0,
  SST_ENTER_KEY = 1,
  SST_TYPEAHEAD = 2,
};

struct tagPOLYTEXTW
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ long Padding_339;
  /* 0x0010 */ const wchar_t* lpstr;
  /* 0x0018 */ unsigned int uiFlags;
  /* 0x001c */ struct tagRECT rcl;
  /* 0x002c */ long Padding_340;
  /* 0x0030 */ int* pdx;
}; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_30
{
  Minimal = 0,
  Normal = 128,
  MaximallyVerbose = 255,
} TAG_UNNAMED_30, *PTAG_UNNAMED_30;

typedef enum _TAG_UNNAMED_31
{
  value = 1,
} TAG_UNNAMED_31, *PTAG_UNNAMED_31;

typedef struct _SEC_WINNT_AUTH_IDENTITY_W
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_341;
  /* 0x0010 */ unsigned short* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_342;
  /* 0x0020 */ unsigned short* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_W, *PSEC_WINNT_AUTH_IDENTITY_W; /* size: 0x0030 */

struct AsyncIMultiQI
{
}; /* size: 0x0008 */

enum SYNCMGR_HANDLER_POLICIES
{
  SYNCMGR_HPM_NONE = 0,
  SYNCMGR_HPM_PREVENT_ACTIVATE = 1,
  SYNCMGR_HPM_PREVENT_DEACTIVATE = 2,
  SYNCMGR_HPM_PREVENT_ENABLE = 4,
  SYNCMGR_HPM_PREVENT_DISABLE = 8,
  SYNCMGR_HPM_PREVENT_START_SYNC = 16,
  SYNCMGR_HPM_PREVENT_STOP_SYNC = 32,
  SYNCMGR_HPM_DISABLE_ENABLE = 256,
  SYNCMGR_HPM_DISABLE_DISABLE = 512,
  SYNCMGR_HPM_DISABLE_START_SYNC = 1024,
  SYNCMGR_HPM_DISABLE_STOP_SYNC = 2048,
  SYNCMGR_HPM_DISABLE_BROWSE = 4096,
  SYNCMGR_HPM_DISABLE_SCHEDULE = 8192,
  SYNCMGR_HPM_HIDDEN_BY_DEFAULT = 0x10000,
  SYNCMGR_HPM_BACKGROUND_SYNC_ONLY = 48,
  SYNCMGR_HPM_VALID_MASK = 0x12f3f,
};

typedef struct _TXFS_GET_METADATA_INFO_OUT
{
  struct
  {
    /* 0x0000 */ __int64 LowPart;
    /* 0x0008 */ __int64 HighPart;
  } /* size: 0x0010 */ TxfFileId;
  /* 0x0010 */ struct _GUID LockingTransaction;
  /* 0x0020 */ unsigned __int64 LastLsn;
  /* 0x0028 */ unsigned long TransactionState;
  /* 0x002c */ long __PADDING__[1];
} TXFS_GET_METADATA_INFO_OUT, *PTXFS_GET_METADATA_INFO_OUT; /* size: 0x0030 */

typedef enum _TAG_UNNAMED_32
{
  value = 0,
} TAG_UNNAMED_32, *PTAG_UNNAMED_32;

class Windows::Rtl::AutoKeyHandle
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_33
{
  value = 1,
} TAG_UNNAMED_33, *PTAG_UNNAMED_33;

struct IInternetProtocolSink
{
}; /* size: 0x0008 */

struct tagTYPEDESC
{
  union
  {
    /* 0x0000 */ struct tagTYPEDESC* lptdesc;
    /* 0x0000 */ struct tagARRAYDESC* lpadesc;
    /* 0x0000 */ unsigned long hreftype;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagIDLDESC
{
  /* 0x0000 */ unsigned __int64 dwReserved;
  /* 0x0008 */ unsigned short wIDLFlags;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagPARAMDESC
{
  /* 0x0000 */ struct tagPARAMDESCEX* pparamdescex;
  /* 0x0008 */ unsigned short wParamFlags;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagELEMDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdesc;
  union
  {
    /* 0x0010 */ struct tagIDLDESC idldesc;
    /* 0x0010 */ struct tagPARAMDESC paramdesc;
  }; /* size: 0x0010 */
}; /* size: 0x0020 */

struct tagVARDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long Padding_343;
  /* 0x0008 */ wchar_t* lpstrSchema;
  union
  {
    /* 0x0010 */ unsigned long oInst;
    /* 0x0010 */ struct tagVARIANT* lpvarValue;
  }; /* size: 0x0008 */
  /* 0x0018 */ struct tagELEMDESC elemdescVar;
  /* 0x0038 */ unsigned short wVarFlags;
  /* 0x003a */ char Padding_344[2];
  /* 0x003c */ enum tagVARKIND varkind;
}; /* size: 0x0040 */

enum MODE_CHANGE_REASON
{
  MCR_NONE = 0,
  MCR_ACTIVATION = 1,
  MCR_MONITORCHANGE = 2,
  MCR_OWNEDWINDOWCREATED = 3,
  MCR_EXTERNAL = 4,
  MCR_PRESENTEDWINDOWCHANGED = 5,
};

struct IUriBuilder
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_34
{
  value = 1,
} TAG_UNNAMED_34, *PTAG_UNNAMED_34;

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_W* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_345;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_W; /* size: 0x0028 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_35
{
  value = 0,
} TAG_UNNAMED_35, *PTAG_UNNAMED_35;

enum SPLASHSCREEN_IMAGE_TYPE
{
  SSIT_SMALL = 0,
  SSIT_LARGE = 1,
  SSIT_AUTO = 2,
  SSIT_COUNT = 3,
  SSIT_INVALID = 4,
};

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef const >
{
}; /* size: 0x0008 */

struct IStackWalkerSymbol
{
}; /* size: 0x0008 */

typedef enum _DETECTION_TYPE
{
  DetectNone = 0,
  DetectInt13 = 1,
  DetectExInt13 = 2,
} DETECTION_TYPE, *PDETECTION_TYPE;

typedef struct _KEY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long NameLength;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[6];
} KEY_BASIC_INFORMATION, *PKEY_BASIC_INFORMATION; /* size: 0x0018 */

struct tagMCI_SAVE_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const char* lpfilename;
}; /* size: 0x0010 */

typedef enum _STORAGE_IDENTIFIER_CODE_SET
{
  StorageIdCodeSetReserved = 0,
  StorageIdCodeSetBinary = 1,
  StorageIdCodeSetAscii = 2,
  StorageIdCodeSetUtf8 = 3,
} STORAGE_IDENTIFIER_CODE_SET, *PSTORAGE_IDENTIFIER_CODE_SET;

typedef struct _CRYPT_TIMESTAMP_RESPONSE
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ unsigned long cFreeText;
  /* 0x0008 */ wchar_t** rgFreeText;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB FailureInfo;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB ContentInfo;
} CRYPT_TIMESTAMP_RESPONSE, *PCRYPT_TIMESTAMP_RESPONSE; /* size: 0x0038 */

typedef struct _RETRIEVAL_POINTER_BASE
{
  /* 0x0000 */ union _LARGE_INTEGER FileAreaOffset;
} RETRIEVAL_POINTER_BASE, *PRETRIEVAL_POINTER_BASE; /* size: 0x0008 */

class Windows::ErrorHandling::Rtl::CVoidRaiseFrame
{
}; /* size: 0x0004 */

enum SELECTIONSTATEVALUE
{
  SSV_ITEM = 0,
  SSV_ISSELECTED = 1,
  SSV_ITEMCOLLECTION = 2,
  SSV_SELECTEDTYPE = 3,
};

typedef enum _STORAGE_ID_NAA_FORMAT
{
  StorageIdNAAFormatIEEEExtended = 2,
  StorageIdNAAFormatIEEERegistered = 3,
  StorageIdNAAFormatIEEEERegisteredExtended = 5,
} STORAGE_ID_NAA_FORMAT, *PSTORAGE_ID_NAA_FORMAT;

struct SIP_SUBJECTINFO_;

typedef struct _FILE_OBJECTID_BUFFER
{
  /* 0x0000 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char BirthVolumeId[16];
      /* 0x0020 */ unsigned char BirthObjectId[16];
      /* 0x0030 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0010 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_BUFFER, *PFILE_OBJECTID_BUFFER; /* size: 0x0040 */

typedef struct _MMCKINFO
{
  /* 0x0000 */ unsigned long ckid;
  /* 0x0004 */ unsigned long cksize;
  /* 0x0008 */ unsigned long fccType;
  /* 0x000c */ unsigned long dwDataOffset;
  /* 0x0010 */ unsigned long dwFlags;
} MMCKINFO, *PMMCKINFO; /* size: 0x0014 */

typedef enum _WRITE_CACHE_TYPE
{
  WriteCacheTypeUnknown = 0,
  WriteCacheTypeNone = 1,
  WriteCacheTypeWriteBack = 2,
  WriteCacheTypeWriteThrough = 3,
} WRITE_CACHE_TYPE, *PWRITE_CACHE_TYPE;

typedef struct _FILE_PATH
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Type;
  /* 0x000c */ unsigned char FilePath[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_PATH, *PFILE_PATH; /* size: 0x0010 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>
{
  /* 0x0000 */ long m_status;
}; /* size: 0x0004 */

struct tagMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ long Padding_346;
  /* 0x0018 */ struct HMENU__* hSubMenu;
  /* 0x0020 */ struct HBITMAP__* hbmpChecked;
  /* 0x0028 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0030 */ unsigned __int64 dwItemData;
  /* 0x0038 */ char* dwTypeData;
  /* 0x0040 */ unsigned int cch;
  /* 0x0044 */ long Padding_347;
  /* 0x0048 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0050 */

enum SEARCHPANE_HOTKEY
{
  SPHK_SHOWSEARCHPANE = 0,
  SPHK_SEARCHSETTINGS = 1,
  SPHK_SEARCHFILES = 2,
  SPHK_APPS = 3,
};

class CNtfsStorageForPropSetStg
{
  /* 0x0000 */ long Padding_348[2];
  /* 0x0008 */ class CNtfsStorage* _pNtfsStorage;
}; /* size: 0x0010 */

struct Windows::Rtl::IRtlWOFOStream
{
}; /* size: 0x0008 */

enum BIDI_TYPE
{
  BIDI_NULL = 0,
  BIDI_INT = 1,
  BIDI_FLOAT = 2,
  BIDI_BOOL = 3,
  BIDI_STRING = 4,
  BIDI_TEXT = 5,
  BIDI_ENUM = 6,
  BIDI_BLOB = 7,
};

class CSmAllocator
{
  /* 0x0000 */ long Padding_349[2];
  /* 0x0008 */ class CSharedMemoryBlock* _psmb;
  /* 0x0010 */ unsigned char* _pbBase;
  /* 0x0018 */ class CPerContext* _ppcOwner;
  /* 0x0020 */ unsigned long _cbSize;
  /* 0x0024 */ unsigned long _ulHeapName;
  /* 0x0028 */ unsigned long _cRefs;
}; /* size: 0x0030 */

typedef enum _DEVICEDUMP_COLLECTION_TYPE
{
  TCCollectionBugCheck = 1,
  TCCollectionApplicationRequested = 2,
  TCCollectionDeviceRequested = 3,
} DEVICEDUMP_COLLECTION_TYPE, *PDEVICEDUMP_COLLECTION_TYPE;

enum ITEMDEVIRTUALIZERVALUE
{
  IDV_STARTINGITEM = 0,
  IDV_DEVIRTUALIZATIONTYPE = 1,
  IDV_ISDEVIRTUALIZED = 2,
  IDV_HRDEVIRTUALIZE = 3,
  IDV_ELAPSEDFULLDEVIRTUALIZATIONTIME = 4,
};

typedef struct __PUBLIC_OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long Reserved[22];
} _PUBLIC_OBJECT_TYPE_INFORMATION, *P_PUBLIC_OBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef struct _CRYPT_RC2_CBC_PARAMETERS
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ int fIV;
  /* 0x0008 */ unsigned char rgbIV[8];
} CRYPT_RC2_CBC_PARAMETERS, *PCRYPT_RC2_CBC_PARAMETERS; /* size: 0x0010 */

typedef struct _WIN_CERTIFICATE
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned short wRevision;
  /* 0x0006 */ unsigned short wCertificateType;
  /* 0x0008 */ unsigned char bCertificate[1];
  /* 0x0009 */ char __PADDING__[3];
} WIN_CERTIFICATE, *PWIN_CERTIFICATE; /* size: 0x000c */

struct tagWNDCLASSW
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ long Padding_350;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const wchar_t* lpszMenuName;
  /* 0x0040 */ const wchar_t* lpszClassName;
}; /* size: 0x0048 */

typedef enum _WRITE_CACHE_ENABLE
{
  WriteCacheEnableUnknown = 0,
  WriteCacheDisabled = 1,
  WriteCacheEnabled = 2,
} WRITE_CACHE_ENABLE, *PWRITE_CACHE_ENABLE;

enum MARKUPLINKTEXT
{
  MARKUPLINKTEXT_URL = 0,
  MARKUPLINKTEXT_ID = 1,
  MARKUPLINKTEXT_TEXT = 2,
};

typedef struct _TXFS_SAVEPOINT_INFORMATION
{
  /* 0x0000 */ void* KtmTransaction;
  /* 0x0008 */ unsigned long ActionCode;
  /* 0x000c */ unsigned long SavepointId;
} TXFS_SAVEPOINT_INFORMATION, *PTXFS_SAVEPOINT_INFORMATION; /* size: 0x0010 */

typedef enum _CHANGER_DEVICE_PROBLEM_TYPE
{
  DeviceProblemNone = 0,
  DeviceProblemHardware = 1,
  DeviceProblemCHMError = 2,
  DeviceProblemDoorOpen = 3,
  DeviceProblemCalibrationError = 4,
  DeviceProblemTargetFailure = 5,
  DeviceProblemCHMMoveError = 6,
  DeviceProblemCHMZeroError = 7,
  DeviceProblemCartridgeInsertError = 8,
  DeviceProblemPositionError = 9,
  DeviceProblemSensorError = 10,
  DeviceProblemCartridgeEjectError = 11,
  DeviceProblemGripperError = 12,
  DeviceProblemDriveError = 13,
} CHANGER_DEVICE_PROBLEM_TYPE, *PCHANGER_DEVICE_PROBLEM_TYPE;

class CSharedMemHeader
{
  /* 0x0000 */ unsigned long _ulSize;
  /* 0x0004 */ unsigned long ulPad;
}; /* size: 0x0008 */

enum PRINT_EXECUTION_CONTEXT
{
  PRINT_EXECUTION_CONTEXT_APPLICATION = 0,
  PRINT_EXECUTION_CONTEXT_SPOOLER_SERVICE = 1,
  PRINT_EXECUTION_CONTEXT_SPOOLER_ISOLATION_HOST = 2,
  PRINT_EXECUTION_CONTEXT_FILTER_PIPELINE = 3,
  PRINT_EXECUTION_CONTEXT_WOW64 = 4,
};

typedef struct _SYSTEM_SESSION_MAPPED_VIEW_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long ViewFailures;
  /* 0x0010 */ unsigned __int64 NumberOfBytesAvailable;
  /* 0x0018 */ unsigned __int64 NumberOfBytesAvailableContiguous;
} SYSTEM_SESSION_MAPPED_VIEW_INFORMATION, *PSYSTEM_SESSION_MAPPED_VIEW_INFORMATION; /* size: 0x0020 */

typedef struct _CERT_STRONG_SIGN_SERIALIZED_INFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_351;
  /* 0x0008 */ wchar_t* pwszCNGSignHashAlgids;
  /* 0x0010 */ wchar_t* pwszCNGPubKeyMinBitLengths;
} CERT_STRONG_SIGN_SERIALIZED_INFO, *PCERT_STRONG_SIGN_SERIALIZED_INFO; /* size: 0x0018 */

enum SHARE_ACTIVATION_MODE
{
  ACTIVATION_MODE_PRIVATE = 0,
  ACTIVATION_MODE_HOMEGROUP_RO = 1,
  ACTIVATION_MODE_HOMEGROUP_RW = 2,
  ACTIVATION_MODE_HOMEGROUP_NONE = 3,
  ACTIVATION_MODE_USER_RO = 4,
  ACTIVATION_MODE_LIBRARY_ADD = 5,
  ACTIVATION_MODE_LIBRARY_REMOVAL = 6,
  ACTIVATION_MODE_OTHER = 7,
};

struct IProxyManager
{
}; /* size: 0x0008 */

typedef enum _WRITE_THROUGH
{
  WriteThroughUnknown = 0,
  WriteThroughNotSupported = 1,
  WriteThroughSupported = 2,
} WRITE_THROUGH, *PWRITE_THROUGH;

typedef enum _STORAGE_PROPERTY_ID
{
  StorageDeviceProperty = 0,
  StorageAdapterProperty = 1,
  StorageDeviceIdProperty = 2,
  StorageDeviceUniqueIdProperty = 3,
  StorageDeviceWriteCacheProperty = 4,
  StorageMiniportProperty = 5,
  StorageAccessAlignmentProperty = 6,
  StorageDeviceSeekPenaltyProperty = 7,
  StorageDeviceTrimProperty = 8,
  StorageDeviceWriteAggregationProperty = 9,
  StorageDeviceDeviceTelemetryProperty = 10,
  StorageDeviceLBProvisioningProperty = 11,
  StorageDevicePowerProperty = 12,
  StorageDeviceCopyOffloadProperty = 13,
  StorageDeviceResiliencyProperty = 14,
} STORAGE_PROPERTY_ID, *PSTORAGE_PROPERTY_ID;

struct SPointerHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ void* key;
}; /* size: 0x0018 */

typedef enum _STORAGE_QUERY_TYPE
{
  PropertyStandardQuery = 0,
  PropertyExistsQuery = 1,
  PropertyMaskQuery = 2,
  PropertyQueryMaxDefined = 3,
} STORAGE_QUERY_TYPE, *PSTORAGE_QUERY_TYPE;

struct tagMONHSZSTRUCTA
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fsAction;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_352;
  /* 0x0010 */ struct HSZ__* hsz;
  /* 0x0018 */ void* hTask;
  /* 0x0020 */ char str[1];
  /* 0x0021 */ char __PADDING__[7];
}; /* size: 0x0028 */

typedef enum _SPTEXT
{
  SPTEXT_ACTIONDESCRIPTION = 1,
  SPTEXT_ACTIONDETAIL = 2,
} SPTEXT, *PSPTEXT;

typedef enum _STORAGE_ASSOCIATION_TYPE
{
  StorageIdAssocDevice = 0,
  StorageIdAssocPort = 1,
  StorageIdAssocTarget = 2,
} STORAGE_ASSOCIATION_TYPE, *PSTORAGE_ASSOCIATION_TYPE;

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >
{
}; /* size: 0x0008 */

typedef enum _WRITE_CACHE_CHANGE
{
  WriteCacheChangeUnknown = 0,
  WriteCacheNotChangeable = 1,
  WriteCacheChangeable = 2,
} WRITE_CACHE_CHANGE, *PWRITE_CACHE_CHANGE;

struct IOplockStorage
{
}; /* size: 0x0008 */

class CBasedMarshalListPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CMarshalList
{
  /* 0x0000 */ class CBasedMarshalListPtr _pmlNext;
  /* 0x0008 */ void* _pvBase;
  /* 0x0010 */ unsigned long _cntxid;
}; /* size: 0x0018 */

enum APPDOCLISTTYPE
{
  ADLT_RECENT = 0,
  ADLT_FREQUENT = 1,
};

typedef struct _CMSG_KEY_AGREE_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0030 */ unsigned long dwOriginatorChoice;
  /* 0x0034 */ long Padding_353;
  union
  {
    /* 0x0038 */ struct _CERT_ID OriginatorCertId;
    /* 0x0038 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0030 */
  /* 0x0068 */ unsigned long cKeyAgreeKeyEncryptInfo;
  /* 0x006c */ long Padding_354;
  /* 0x0070 */ struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO** rgpKeyAgreeKeyEncryptInfo;
  /* 0x0078 */ unsigned long dwFlags;
  /* 0x007c */ long __PADDING__[1];
} CMSG_KEY_AGREE_ENCRYPT_INFO, *PCMSG_KEY_AGREE_ENCRYPT_INFO; /* size: 0x0080 */

enum UlIsEntry
{
  UIE_CURRENT = 0,
  UIE_ORIGINAL = 1,
  UIE_NOTFOUND = 2,
};

typedef struct _SL_APPX_CACHE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long DataSize;
  /* 0x000c */ long Padding_355;
  /* 0x0010 */ unsigned __int64 DataCheckSum;
  /* 0x0018 */ struct _SL_APPX_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_APPX_CACHE, *PSL_APPX_CACHE; /* size: 0x0048 */

enum SE_WS_APPX_SIGNATURE_ORIGIN
{
  SE_WS_APPX_SIGNATURE_ORIGIN_NOT_VALIDATED = 0,
  SE_WS_APPX_SIGNATURE_ORIGIN_UNKNOWN = 1,
  SE_WS_APPX_SIGNATURE_ORIGIN_APPSTORE = 2,
  SE_WS_APPX_SIGNATURE_ORIGIN_WINDOWS = 3,
};

class Windows::Rtl::CriticalSectionLockGrant
{
  /* 0x0000 */ class Windows::Rtl::CriticalSectionLock& m_Lock;
  /* 0x0008 */ BOOL m_fLocked;
}; /* size: 0x0010 */

enum WPP_DEFINE_BIT_NAMES
{
  WPP_BLOCK_START_OLE32 = 0,
  WPP_BIT_ERRORS = 1,
  WPP_BIT_WARNING = 2,
  WPP_BIT_INFO = 3,
  WPP_BIT_VERBOSE = 4,
  WPP_BIT_CHATTY = 5,
  WPP_BIT_GARRULOUS = 6,
  WPP_BIT_LOQUACIOUS = 7,
  WPP_BLOCK_END_OLE32 = 8,
};

struct IEnumContextProps
{
}; /* size: 0x0008 */

enum LIBRARYSAVEFLAGS
{
};

class CCtxComChnl;

typedef struct _DOC_INFO_3W
{
  /* 0x0000 */ wchar_t* pDocName;
  /* 0x0008 */ wchar_t* pOutputFile;
  /* 0x0010 */ wchar_t* pDatatype;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long __PADDING__[1];
} DOC_INFO_3W, *PDOC_INFO_3W; /* size: 0x0020 */

enum tagCCF_FLAGS
{
  CCF_NONE = 0,
  CCF_AGGREGATABLE = 1,
};

struct HLSURF__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagEMRTEXT
{
  /* 0x0000 */ struct _POINTL ptlReference;
  /* 0x0008 */ unsigned long nChars;
  /* 0x000c */ unsigned long offString;
  /* 0x0010 */ unsigned long fOptions;
  /* 0x0014 */ struct _RECTL rcl;
  /* 0x0024 */ unsigned long offDx;
}; /* size: 0x0028 */

enum WPP_CTL_NAMES
{
  WPP_CTL_OLE32 = 0,
  WPP_LAST_CTL = 1,
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1
{
  /* 0x0000 */ unsigned long Name;
  /* 0x0004 */ unsigned short ValueType;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ValueCount;
  union
  {
    union
    {
      /* 0x0010 */ unsigned long pInt64[1];
      /* 0x0010 */ unsigned long pUint64[1];
      /* 0x0010 */ unsigned long ppString[1];
      /* 0x0010 */ unsigned long pFqbn[1];
      /* 0x0010 */ unsigned long pOctetString[1];
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Values;
} CLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1, *PCLAIM_SECURITY_ATTRIBUTE_RELATIVE_V1; /* size: 0x0014 */

enum ASSOCIATIONLEVEL
{
  AL_MACHINE = 0,
  AL_EFFECTIVE = 1,
  AL_USER = 2,
};

typedef struct _IMAGE_BASE_RELOCATION
{
  /* 0x0000 */ unsigned long VirtualAddress;
  /* 0x0004 */ unsigned long SizeOfBlock;
} IMAGE_BASE_RELOCATION, *PIMAGE_BASE_RELOCATION; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_36
{
  WPP_TRACE_OPTIONS = 43,
} TAG_UNNAMED_36, *PTAG_UNNAMED_36;

struct IRpcProxyBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Connect /* function */;
  /* 0x0020 */ void* Disconnect /* function */;
}; /* size: 0x0028 */

struct tagPROPPAGEINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_356;
  /* 0x0008 */ wchar_t* pszTitle;
  /* 0x0010 */ struct tagSIZE size;
  /* 0x0018 */ wchar_t* pszDocString;
  /* 0x0020 */ wchar_t* pszHelpFile;
  /* 0x0028 */ unsigned long dwHelpContext;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

enum WMIDPREQUESTCODE
{
  WMI_GET_ALL_DATA = 0,
  WMI_GET_SINGLE_INSTANCE = 1,
  WMI_SET_SINGLE_INSTANCE = 2,
  WMI_SET_SINGLE_ITEM = 3,
  WMI_ENABLE_EVENTS = 4,
  WMI_DISABLE_EVENTS = 5,
  WMI_ENABLE_COLLECTION = 6,
  WMI_DISABLE_COLLECTION = 7,
  WMI_REGINFO = 8,
  WMI_EXECUTE_METHOD = 9,
  WMI_CAPTURE_STATE = 10,
};

typedef struct _FILE_PIPE_INFORMATION
{
  /* 0x0000 */ unsigned long ReadMode;
  /* 0x0004 */ unsigned long CompletionMode;
} FILE_PIPE_INFORMATION, *PFILE_PIPE_INFORMATION; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_37
{
  DIRECTION_READ = 1,
  DIRECTION_WRITE = 2,
} TAG_UNNAMED_37, *PTAG_UNNAMED_37;

typedef struct _CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int iDeltaCrlIndicator;
  /* 0x0008 */ struct _FILETIME* pftCacheResync;
  /* 0x0010 */ struct _FILETIME* pLastSyncTime;
  /* 0x0018 */ struct _FILETIME* pMaxAgeTime;
  /* 0x0020 */ struct _CERT_REVOCATION_CHAIN_PARA* pChainPara;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* pDeltaCrlIndicator;
} CRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO, *PCRYPT_GET_TIME_VALID_OBJECT_EXTRA_INFO; /* size: 0x0030 */

typedef struct _IMAGE_SYMBOL
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned char ShortName[8];
      struct
      {
        /* 0x0000 */ unsigned long Short;
        /* 0x0004 */ unsigned long Long;
      } /* size: 0x0008 */ Name;
      /* 0x0000 */ unsigned long LongName[2];
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ N;
  /* 0x0008 */ unsigned long Value;
  /* 0x000c */ short SectionNumber;
  /* 0x000e */ unsigned short Type;
  /* 0x0010 */ unsigned char StorageClass;
  /* 0x0011 */ unsigned char NumberOfAuxSymbols;
} IMAGE_SYMBOL, *PIMAGE_SYMBOL; /* size: 0x0012 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoTxnHandle>::COperatorAmpersandReturnType;

enum SLGP_FLAGS
{
  SLGP_SHORTPATH = 1,
  SLGP_UNCPRIORITY = 2,
  SLGP_RAWPATH = 4,
  SLGP_RELATIVEPRIORITY = 8,
};

class CBasedGlobalContextPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

enum ExtentKeys
{
  mnk_MAC = 1,
  mnk_DFS = 2,
  mnk_UNICODE = 3,
  mnk_MacPathName = 4,
  mnk_ShellLink = 5,
  mnk_TrackingInformation = 6,
};

enum tagCONDITION_TYPE
{
  CT_AND_CONDITION = 0,
  CT_OR_CONDITION = 1,
  CT_NOT_CONDITION = 2,
  CT_LEAF_CONDITION = 3,
};

struct tagEMRSTRETCHDIBITS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ long cxDest;
  /* 0x004c */ long cyDest;
}; /* size: 0x0050 */

struct IInternetProtocolEx
{
}; /* size: 0x0008 */

enum EDGE_GESTURE_KIND
{
  EGK_TOUCH = 0,
  EGK_KEYBOARD = 1,
  EGK_MOUSE = 2,
};

typedef struct _CERT_REVOCATION_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRevocationResult;
  /* 0x0008 */ const char* pszRevocationOid;
  /* 0x0010 */ void* pvOidSpecificInfo;
  /* 0x0018 */ int fHasFreshnessTime;
  /* 0x001c */ unsigned long dwFreshnessTime;
  /* 0x0020 */ struct _CERT_REVOCATION_CRL_INFO* pCrlInfo;
} CERT_REVOCATION_INFO, *PCERT_REVOCATION_INFO; /* size: 0x0028 */

enum DEFAULTSAVEFOLDERTYPE
{
  DSFT_DETECT = 1,
  DSFT_PRIVATE = 2,
  DSFT_PUBLIC = 3,
};

typedef struct _CERT_FORTEZZA_DATA_PROP
{
  /* 0x0000 */ unsigned char SerialNumber[8];
  /* 0x0008 */ int CertIndex;
  /* 0x000c */ unsigned char CertLabel[36];
} CERT_FORTEZZA_DATA_PROP, *PCERT_FORTEZZA_DATA_PROP; /* size: 0x0030 */

typedef union __m128
{
  union
  {
    /* 0x0000 */ float m128_f32[4];
    /* 0x0000 */ unsigned __int64 m128_u64[2];
    /* 0x0000 */ char m128_i8[16];
    /* 0x0000 */ short m128_i16[8];
    /* 0x0000 */ int m128_i32[4];
    /* 0x0000 */ __int64 m128_i64[2];
    /* 0x0000 */ unsigned char m128_u8[16];
    /* 0x0000 */ unsigned short m128_u16[8];
    /* 0x0000 */ unsigned int m128_u32[4];
  }; /* size: 0x0010 */
} _m128, *P_m128; /* size: 0x0010 */

enum KNOWNDESTCATEGORY
{
  KDC_FREQUENT = 1,
  KDC_RECENT = 2,
};

enum CPVIEW
{
  CPVIEW_CLASSIC = 0,
  CPVIEW_ALLITEMS = 0,
  CPVIEW_CATEGORY = 1,
  CPVIEW_HOME = 1,
};

typedef struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE
{
  /* 0x0000 */ unsigned __int64 Version;
  /* 0x0008 */ wchar_t* Name;
} CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE, *PCLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE; /* size: 0x0010 */

typedef struct _CERT_REVOCATION_CRL_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_357;
  /* 0x0008 */ const struct _CRL_CONTEXT* pBaseCrlContext;
  /* 0x0010 */ const struct _CRL_CONTEXT* pDeltaCrlContext;
  /* 0x0018 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0020 */ int fDeltaCrlEntry;
  /* 0x0024 */ long __PADDING__[1];
} CERT_REVOCATION_CRL_INFO, *PCERT_REVOCATION_CRL_INFO; /* size: 0x0028 */

struct IRpcChannelBuffer
{
}; /* size: 0x0008 */

typedef struct __midl_frag97_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag97_t, *P_midl_frag97_t; /* size: 0x0048 */

enum MARKUPMESSAGE
{
  MARKUPMESSAGE_KEYEXECUTE = 0,
  MARKUPMESSAGE_CLICKEXECUTE = 1,
  MARKUPMESSAGE_WANTFOCUS = 2,
};

typedef struct _PROCESSOR_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long Number;
  /* 0x0004 */ unsigned long MaxMhz;
  /* 0x0008 */ unsigned long CurrentMhz;
  /* 0x000c */ unsigned long MhzLimit;
  /* 0x0010 */ unsigned long MaxIdleState;
  /* 0x0014 */ unsigned long CurrentIdleState;
} PROCESSOR_POWER_INFORMATION, *PPROCESSOR_POWER_INFORMATION; /* size: 0x0018 */

enum MARKUPSIZE
{
  MARKUPSIZE_CALCWIDTH = 0,
  MARKUPSIZE_CALCHEIGHT = 1,
};

typedef struct __MIDL_ILocalObjectExporter_0005
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned __int64 oid;
} _MIDL_ILocalObjectExporter_0005, *P_MIDL_ILocalObjectExporter_0005; /* size: 0x0018 */

typedef struct _CERT_ALT_NAME_ENTRY
{
  /* 0x0000 */ unsigned long dwAltNameChoice;
  /* 0x0004 */ long Padding_358;
  union
  {
    /* 0x0008 */ struct _CERT_OTHER_NAME* pOtherName;
    /* 0x0008 */ wchar_t* pwszRfc822Name;
    /* 0x0008 */ wchar_t* pwszDNSName;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB DirectoryName;
    /* 0x0008 */ wchar_t* pwszURL;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB IPAddress;
    struct
    {
      /* 0x0008 */ char* pszRegisteredID;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} CERT_ALT_NAME_ENTRY, *PCERT_ALT_NAME_ENTRY; /* size: 0x0018 */

typedef struct _CERT_ACCESS_DESCRIPTION
{
  /* 0x0000 */ char* pszAccessMethod;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY AccessLocation;
} CERT_ACCESS_DESCRIPTION, *PCERT_ACCESS_DESCRIPTION; /* size: 0x0020 */

class CSimpEnumSTATSTG
{
  /* 0x0000 */ long Padding_359[2];
  /* 0x0008 */ unsigned long _cReferences;
  /* 0x000c */ long Padding_360;
  /* 0x0010 */ class CDfNameList* _pdfl;
  /* 0x0018 */ class CDfNameList* _pdflCurrent;
}; /* size: 0x0020 */

enum FFFP_MODE
{
  FFFP_EXACTMATCH = 0,
  FFFP_NEARESTPARENTMATCH = 1,
};

typedef struct _CRL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_361;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0030 */ struct _FILETIME ThisUpdate;
  /* 0x0038 */ struct _FILETIME NextUpdate;
  /* 0x0040 */ unsigned long cCRLEntry;
  /* 0x0044 */ long Padding_362;
  /* 0x0048 */ struct _CRL_ENTRY* rgCRLEntry;
  /* 0x0050 */ unsigned long cExtension;
  /* 0x0054 */ long Padding_363;
  /* 0x0058 */ struct _CERT_EXTENSION* rgExtension;
} CRL_INFO, *PCRL_INFO; /* size: 0x0060 */

class CFILETIME
{
  union
  {
    /* 0x0000 */ struct _FILETIME _filetime;
    /* 0x0000 */ __int64 _ll;
    /* 0x0000 */ union _LARGE_INTEGER _li;
    /* 0x0000 */ union _ULARGE_INTEGER _uli;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

enum ASSOCIATIONTYPE
{
  AT_FILEEXTENSION = 0,
  AT_URLPROTOCOL = 1,
  AT_STARTMENUCLIENT = 2,
  AT_MIMETYPE = 3,
};

struct ICreateTypeLib2
{
}; /* size: 0x0008 */

typedef struct _SRCCODEINFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_364;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned __int64 ModBase;
  /* 0x0018 */ wchar_t Obj[261];
  /* 0x0222 */ wchar_t FileName[261];
  /* 0x042c */ unsigned long LineNumber;
  /* 0x0430 */ unsigned __int64 Address;
} SRCCODEINFOW, *PSRCCODEINFOW; /* size: 0x0438 */

class Windows::Rtl::AutoFileHandle
{
}; /* size: 0x0008 */

struct IPartitionLookup
{
}; /* size: 0x0008 */

enum FILE_USAGE_TYPE
{
  FUT_PLAYING = 0,
  FUT_EDITING = 1,
  FUT_GENERIC = 2,
};

typedef struct _FP_32
{
  /* 0x0000 */ unsigned long W[1];
} FP_32, *PFP_32; /* size: 0x0004 */

typedef struct _SYSTEM_SESSION_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long SizeOfBuf;
  /* 0x0008 */ void* Buffer;
} SYSTEM_SESSION_PROCESS_INFORMATION, *PSYSTEM_SESSION_PROCESS_INFORMATION; /* size: 0x0010 */

typedef struct _PARTITION_INFORMATION_GPT
{
  /* 0x0000 */ struct _GUID PartitionType;
  /* 0x0010 */ struct _GUID PartitionId;
  /* 0x0020 */ unsigned __int64 Attributes;
  /* 0x0028 */ wchar_t Name[36];
} PARTITION_INFORMATION_GPT, *PPARTITION_INFORMATION_GPT; /* size: 0x0070 */

enum tagMENUPOPUPSELECT
{
  MPOS_EXECUTE = 0,
  MPOS_FULLCANCEL = 1,
  MPOS_CANCELLEVEL = 2,
  MPOS_SELECTLEFT = 3,
  MPOS_SELECTRIGHT = 4,
  MPOS_CHILDTRACKING = 5,
};

typedef struct _CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_365;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ unsigned long dwSignerIndex;
  /* 0x0014 */ unsigned long dwSignerType;
  /* 0x0018 */ void* pvSigner;
} CMSG_CTRL_VERIFY_SIGNATURE_EX_PARA, *PCMSG_CTRL_VERIFY_SIGNATURE_EX_PARA; /* size: 0x0020 */

struct tagABORTPATH
{
  /* 0x0000 */ struct tagEMR emr;
}; /* size: 0x0008 */

typedef struct _CMSG_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_366;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long cRecipients;
  /* 0x0034 */ long Padding_367;
  /* 0x0038 */ struct _CERT_INFO** rgpRecipients;
} CMSG_ENVELOPED_ENCODE_INFO, *PCMSG_ENVELOPED_ENCODE_INFO; /* size: 0x0040 */

typedef struct _DOC_INFO_2W
{
  /* 0x0000 */ wchar_t* pDocName;
  /* 0x0008 */ wchar_t* pOutputFile;
  /* 0x0010 */ wchar_t* pDatatype;
  /* 0x0018 */ unsigned long dwMode;
  /* 0x001c */ unsigned long JobId;
} DOC_INFO_2W, *PDOC_INFO_2W; /* size: 0x0020 */

enum tagBANDSITECID
{
  BSID_BANDADDED = 0,
  BSID_BANDREMOVED = 1,
};

struct tagEMRSETCOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
}; /* size: 0x000c */

typedef struct _ALPC_SECURITY_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_368;
  /* 0x0008 */ struct _SECURITY_QUALITY_OF_SERVICE* QoS;
  /* 0x0010 */ void* ContextHandle;
} ALPC_SECURITY_ATTR, *PALPC_SECURITY_ATTR; /* size: 0x0018 */

typedef struct _BYTE_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
} BYTE_BLOB, *PBYTE_BLOB; /* size: 0x0008 */

typedef struct _FILE_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_369;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ wchar_t FileName[1];
} FILE_BOTH_DIR_INFORMATION, *PFILE_BOTH_DIR_INFORMATION; /* size: 0x0060 */

typedef enum _SPACTION
{
  SPACTION_NONE = 0,
  SPACTION_MOVING = 1,
  SPACTION_COPYING = 2,
  SPACTION_RECYCLING = 3,
  SPACTION_APPLYINGATTRIBS = 4,
  SPACTION_DOWNLOADING = 5,
  SPACTION_SEARCHING_INTERNET = 6,
  SPACTION_CALCULATING = 7,
  SPACTION_UPLOADING = 8,
  SPACTION_SEARCHING_FILES = 9,
  SPACTION_DELETING = 10,
  SPACTION_RENAMING = 11,
  SPACTION_FORMATTING = 12,
  SPACTION_COPY_MOVING = 13,
} SPACTION, *PSPACTION;

struct midiproptempo_tag
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwTempo;
}; /* size: 0x0008 */

enum PKA_FLAGS
{
  PKA_SET = 0,
  PKA_APPEND = 1,
  PKA_DELETE = 2,
};

struct POWER_ACTION_POLICY
{
  /* 0x0000 */ enum POWER_ACTION Action;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long EventCode;
}; /* size: 0x000c */

struct SYSTEM_POWER_LEVEL
{
  /* 0x0000 */ unsigned char Enable;
  /* 0x0001 */ unsigned char Spare[3];
  /* 0x0004 */ unsigned long BatteryLevel;
  /* 0x0008 */ struct POWER_ACTION_POLICY PowerPolicy;
  /* 0x0014 */ enum _SYSTEM_POWER_STATE MinSystemState;
}; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_QUERY_INDEX
{
  /* 0x0000 */ unsigned long ulAssemblyIndex;
  /* 0x0004 */ unsigned long ulFileIndexInAssembly;
} ACTIVATION_CONTEXT_QUERY_INDEX, *PACTIVATION_CONTEXT_QUERY_INDEX; /* size: 0x0008 */

struct tagCOMPAREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ struct HWND__* hwndItem;
  /* 0x0010 */ unsigned int itemID1;
  /* 0x0014 */ long Padding_370;
  /* 0x0018 */ unsigned __int64 itemData1;
  /* 0x0020 */ unsigned int itemID2;
  /* 0x0024 */ long Padding_371;
  /* 0x0028 */ unsigned __int64 itemData2;
  /* 0x0030 */ unsigned long dwLocaleId;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _PRINTER_INFO_5A
{
  /* 0x0000 */ char* pPrinterName;
  /* 0x0008 */ char* pPortName;
  /* 0x0010 */ unsigned long Attributes;
  /* 0x0014 */ unsigned long DeviceNotSelectedTimeout;
  /* 0x0018 */ unsigned long TransmissionRetryTimeout;
  /* 0x001c */ long __PADDING__[1];
} PRINTER_INFO_5A, *PPRINTER_INFO_5A; /* size: 0x0020 */

enum tagCONDITION_OPERATION
{
  COP_IMPLICIT = 0,
  COP_EQUAL = 1,
  COP_NOTEQUAL = 2,
  COP_LESSTHAN = 3,
  COP_GREATERTHAN = 4,
  COP_LESSTHANOREQUAL = 5,
  COP_GREATERTHANOREQUAL = 6,
  COP_VALUE_STARTSWITH = 7,
  COP_VALUE_ENDSWITH = 8,
  COP_VALUE_CONTAINS = 9,
  COP_VALUE_NOTCONTAINS = 10,
  COP_DOSWILDCARDS = 11,
  COP_WORD_EQUAL = 12,
  COP_WORD_STARTSWITH = 13,
  COP_APPLICATION_SPECIFIC = 14,
};

struct IEnumSTATPROPSTG
{
}; /* size: 0x0008 */

typedef struct _CRYPT_ECC_CMS_SHARED_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EntityUInfo;
  /* 0x0028 */ unsigned char rgbSuppPubInfo[4];
  /* 0x002c */ long __PADDING__[1];
} CRYPT_ECC_CMS_SHARED_INFO, *PCRYPT_ECC_CMS_SHARED_INFO; /* size: 0x0030 */

typedef struct _SYSTEMTIME
{
  /* 0x0000 */ unsigned short wYear;
  /* 0x0002 */ unsigned short wMonth;
  /* 0x0004 */ unsigned short wDayOfWeek;
  /* 0x0006 */ unsigned short wDay;
  /* 0x0008 */ unsigned short wHour;
  /* 0x000a */ unsigned short wMinute;
  /* 0x000c */ unsigned short wSecond;
  /* 0x000e */ unsigned short wMilliseconds;
} SYSTEMTIME, *PSYSTEMTIME; /* size: 0x0010 */

typedef struct _TIME_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
} TIME_ZONE_INFORMATION, *PTIME_ZONE_INFORMATION; /* size: 0x00ac */

typedef struct _MINIDUMP_MISC_INFO_3
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
  /* 0x002c */ unsigned int ProcessIntegrityLevel;
  /* 0x0030 */ unsigned int ProcessExecuteFlags;
  /* 0x0034 */ unsigned int ProtectedProcess;
  /* 0x0038 */ unsigned int TimeZoneId;
  /* 0x003c */ struct _TIME_ZONE_INFORMATION TimeZone;
} MINIDUMP_MISC_INFO_3, *PMINIDUMP_MISC_INFO_3; /* size: 0x00e8 */

typedef struct _CRL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0010 */ struct _FILETIME RevocationDate;
  /* 0x0018 */ unsigned long cExtension;
  /* 0x001c */ long Padding_372;
  /* 0x0020 */ struct _CERT_EXTENSION* rgExtension;
} CRL_ENTRY, *PCRL_ENTRY; /* size: 0x0028 */

struct ICatalogFileInfo
{
}; /* size: 0x0008 */

enum OfflineFolderStatus
{
  OFS_INACTIVE = -1,
  OFS_ONLINE = 0,
  OFS_OFFLINE = 1,
  OFS_SERVERBACK = 2,
  OFS_DIRTYCACHE = 3,
};

typedef struct _STORAGE_DEVICE_ID_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long NumberOfIdentifiers;
  /* 0x000c */ unsigned char Identifiers[1];
  /* 0x000d */ char __PADDING__[3];
} STORAGE_DEVICE_ID_DESCRIPTOR, *PSTORAGE_DEVICE_ID_DESCRIPTOR; /* size: 0x0010 */

enum LIBRARYFOLDERFILTER
{
};

typedef struct _UMS_SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ unsigned long UmsVersion;
  union
  {
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long IsUmsSchedulerThread : 1; /* bit position: 0 */
      /* 0x0004 */ unsigned long IsUmsWorkerThread : 1; /* bit position: 1 */
    }; /* bitfield */
    /* 0x0004 */ unsigned long ThreadUmsFlags;
  }; /* size: 0x0004 */
} UMS_SYSTEM_THREAD_INFORMATION, *PUMS_SYSTEM_THREAD_INFORMATION; /* size: 0x0008 */

typedef struct _CRYPT_IMAGE_REG
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0008 */ unsigned long cInterfaces;
  /* 0x000c */ long Padding_373;
  /* 0x0010 */ struct _CRYPT_INTERFACE_REG** rgpInterfaces;
} CRYPT_IMAGE_REG, *PCRYPT_IMAGE_REG; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IMarshal> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IMarshal>* ptr_;
}; /* size: 0x0008 */

struct _NDR_CORRELATION_INFO;

typedef struct _MINIDUMP_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ struct _EXCEPTION_POINTERS* ExceptionPointers;
  /* 0x000c */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION, *PMINIDUMP_EXCEPTION_INFORMATION; /* size: 0x0010 */

enum LIBRARYOPTIONFLAGS
{
};

typedef struct _KAFFINITY_EX
{
  /* 0x0000 */ unsigned short Count;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Bitmap[20];
} KAFFINITY_EX, *PKAFFINITY_EX; /* size: 0x00a8 */

typedef struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalUserTime;
  /* 0x0008 */ union _LARGE_INTEGER TotalKernelTime;
  /* 0x0010 */ union _LARGE_INTEGER ThisPeriodTotalUserTime;
  /* 0x0018 */ union _LARGE_INTEGER ThisPeriodTotalKernelTime;
  /* 0x0020 */ unsigned long TotalPageFaultCount;
  /* 0x0024 */ unsigned long TotalProcesses;
  /* 0x0028 */ unsigned long ActiveProcesses;
  /* 0x002c */ unsigned long TotalTerminatedProcesses;
} JOBOBJECT_BASIC_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_ACCOUNTING_INFORMATION; /* size: 0x0030 */

class AllocationWrapper
{
}; /* size: 0x0001 */

typedef struct _ALPC_DATA_VIEW_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_374;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ void* ViewBase;
  /* 0x0018 */ unsigned __int64 ViewSize;
} ALPC_DATA_VIEW_ATTR, *PALPC_DATA_VIEW_ATTR; /* size: 0x0020 */

typedef struct _CPTABLEINFO
{
  /* 0x0000 */ unsigned short CodePage;
  /* 0x0002 */ unsigned short MaximumCharacterSize;
  /* 0x0004 */ unsigned short DefaultChar;
  /* 0x0006 */ unsigned short UniDefaultChar;
  /* 0x0008 */ unsigned short TransDefaultChar;
  /* 0x000a */ unsigned short TransUniDefaultChar;
  /* 0x000c */ unsigned short DBCSCodePage;
  /* 0x000e */ unsigned char LeadByte[12];
  /* 0x001a */ char Padding_375[6];
  /* 0x0020 */ unsigned short* MultiByteTable;
  /* 0x0028 */ void* WideCharTable;
  /* 0x0030 */ unsigned short* DBCSRanges;
  /* 0x0038 */ unsigned short* DBCSOffsets;
} CPTABLEINFO, *PCPTABLEINFO; /* size: 0x0040 */

typedef struct _NLSTABLEINFO
{
  /* 0x0000 */ struct _CPTABLEINFO OemTableInfo;
  /* 0x0040 */ struct _CPTABLEINFO AnsiTableInfo;
  /* 0x0080 */ unsigned short* UpperCaseTable;
  /* 0x0088 */ unsigned short* LowerCaseTable;
} NLSTABLEINFO, *PNLSTABLEINFO; /* size: 0x0090 */

enum tagORFLAG
{
  ORF_CONNECTED = 1,
  ORF_STRINGSREGISTERED = 2,
  ORF_INBULKUPDATECALL = 4,
};

typedef struct _STORAGE_READ_CAPACITY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long BlockLength;
  /* 0x000c */ long Padding_376;
  /* 0x0010 */ union _LARGE_INTEGER NumberOfBlocks;
  /* 0x0018 */ union _LARGE_INTEGER DiskLength;
} STORAGE_READ_CAPACITY, *PSTORAGE_READ_CAPACITY; /* size: 0x0020 */

enum tagOXIDFLAGS
{
  OXIDF_REGISTERED = 1,
  OXIDF_MACHINE_LOCAL = 2,
  OXIDF_STOPPED = 4,
  OXIDF_PENDINGRELEASE = 8,
  OXIDF_REGISTERINGOIDS = 32,
  OXIDF_MTASERVER = 64,
  OXIDF_NTASERVER = 128,
  OXIDF_STASERVER = 256,
  OXIDF_REMOTEINITIALIZED = 512,
  OXIDF_APPLICATION_STA = 2048,
  OXIDF_MTASTOPPED = 68,
  OXIDF_NTASTOPPED = 132,
  OXIDF_APARTMENT_TYPE_FLAGS = 2496,
  OXIDF_ALL = 3055,
};

class CStmHandle
{
}; /* size: 0x0010 */

struct SCacheEntry
{
  /* 0x0000 */ unsigned long ulOffset;
  /* 0x0004 */ unsigned long sect;
  /* 0x0008 */ unsigned long ulRunLength;
}; /* size: 0x000c */

class CBasedDirectStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CStreamCache
{
  /* 0x0000 */ struct SCacheEntry _ase[9];
  /* 0x006c */ long Padding_377;
  /* 0x0070 */ class CBasedDirectStreamPtr _pds;
  /* 0x0078 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0080 */ unsigned long _sid;
  /* 0x0084 */ unsigned short _uHighCacheIndex;
  /* 0x0086 */ unsigned short _uNextCacheIndex;
  /* 0x0088 */ unsigned short _uCacheState;
}; /* size: 0x0090 */

class CBasedDeltaListPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CDirectStream
{
  /* 0x0000 */ long Padding_378[4];
  /* 0x0010 */ class CStmHandle _stmh;
  /* 0x0020 */ class CStreamCache _stmc;
  /* 0x00b0 */ unsigned __int64 _ulSize;
  /* 0x00b8 */ unsigned __int64 _ulOldSize;
  /* 0x00c0 */ class CBasedDeltaListPtr _pdlHolder;
}; /* size: 0x00c8 */

typedef struct _IMAGE_COFF_SYMBOLS_HEADER
{
  /* 0x0000 */ unsigned long NumberOfSymbols;
  /* 0x0004 */ unsigned long LvaToFirstSymbol;
  /* 0x0008 */ unsigned long NumberOfLinenumbers;
  /* 0x000c */ unsigned long LvaToFirstLinenumber;
  /* 0x0010 */ unsigned long RvaToFirstByteOfCode;
  /* 0x0014 */ unsigned long RvaToLastByteOfCode;
  /* 0x0018 */ unsigned long RvaToFirstByteOfData;
  /* 0x001c */ unsigned long RvaToLastByteOfData;
} IMAGE_COFF_SYMBOLS_HEADER, *PIMAGE_COFF_SYMBOLS_HEADER; /* size: 0x0020 */

struct tagPLACEABLEMETAHEADER
{
  /* 0x0000 */ unsigned long key;
  /* 0x0004 */ unsigned short hmf;
  /* 0x0006 */ struct tagWIN16RECT bbox;
  /* 0x000e */ unsigned short inch;
  /* 0x0010 */ unsigned long reserved;
  /* 0x0014 */ unsigned short checksum;
}; /* size: 0x0016 */

enum tagFOCOXID
{
  FOCOXID_REF = 1,
  FOCOXID_NOREF = 2,
};

struct tagRGBQUAD
{
  /* 0x0000 */ unsigned char rgbBlue;
  /* 0x0001 */ unsigned char rgbGreen;
  /* 0x0002 */ unsigned char rgbRed;
  /* 0x0003 */ unsigned char rgbReserved;
}; /* size: 0x0004 */

typedef struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* ArrayDescription;
} NDR64_CONF_STRUCTURE_HEADER_FORMAT, *PNDR64_CONF_STRUCTURE_HEADER_FORMAT; /* size: 0x0010 */

typedef struct __midl_frag15_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag15_t, *P_midl_frag15_t; /* size: 0x0010 */

typedef struct _SYSTEM_TIMEOFDAY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER BootTime;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTime;
  /* 0x0010 */ union _LARGE_INTEGER TimeZoneBias;
  /* 0x0018 */ unsigned long TimeZoneId;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ unsigned __int64 BootTimeBias;
  /* 0x0028 */ unsigned __int64 SleepTimeBias;
} SYSTEM_TIMEOFDAY_INFORMATION, *PSYSTEM_TIMEOFDAY_INFORMATION; /* size: 0x0030 */

typedef enum __MIDL_IActivatorCustomMarshal_0001
{
  SPD_FLAG_USE_CONSOLE_SESSION = 1,
  SPD_FLAG_USE_DEFAULT_AUTHN_LVL = 2,
  SPD_FLAG_USE_SERVER_PID = 4,
  SPD_FLAG_USE_LUA_LEVEL_ADMIN = 8,
  SPD_FLAG_COAUTH_USER_IS_NULL = 16,
  SPD_FLAG_COAUTH_DOMAIN_IS_NULL = 32,
  SPD_FLAG_COAUTH_PWD_IS_NULL = 64,
  SPD_FLAG_USE_LUA_LEVEL_HIGHEST = 128,
} _MIDL_IActivatorCustomMarshal_0001, *P_MIDL_IActivatorCustomMarshal_0001;

typedef struct _MINIDUMP_CALLBACK_INFORMATION
{
  /* 0x0000 */ void* CallbackRoutine /* function */;
  /* 0x0008 */ void* CallbackParam;
} MINIDUMP_CALLBACK_INFORMATION, *PMINIDUMP_CALLBACK_INFORMATION; /* size: 0x0010 */

typedef struct _RESUME_PERFORMANCE
{
  /* 0x0000 */ unsigned long PostTimeMs;
  /* 0x0004 */ long Padding_379;
  /* 0x0008 */ unsigned __int64 TotalResumeTimeMs;
  /* 0x0010 */ unsigned __int64 ResumeCompleteTimestamp;
} RESUME_PERFORMANCE, *PRESUME_PERFORMANCE; /* size: 0x0018 */

typedef enum __MIDL___MIDL_itf_immact_0000_0002_0002
{
  INVALID_LUA_RUNLEVEL = -1,
} _MIDL___MIDL_itf_immact_0000_0002_0002, *P_MIDL___MIDL_itf_immact_0000_0002_0002;

typedef struct _DIAGNOSTIC_BUFFER
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum _REQUESTER_TYPE CallerType;
  /* 0x000c */ long Padding_380;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned __int64 ProcessImageNameOffset;
      /* 0x0018 */ unsigned long ProcessId;
      /* 0x001c */ unsigned long ServiceTag;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0010 */ unsigned __int64 DeviceDescriptionOffset;
      /* 0x0018 */ unsigned __int64 DevicePathOffset;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0020 */ unsigned __int64 ReasonOffset;
} DIAGNOSTIC_BUFFER, *PDIAGNOSTIC_BUFFER; /* size: 0x0028 */

typedef struct _WAKE_TIMER_INFO
{
  /* 0x0000 */ unsigned __int64 OffsetToNext;
  /* 0x0008 */ union _ULARGE_INTEGER DueTime;
  /* 0x0010 */ unsigned long Period;
  /* 0x0014 */ long Padding_381;
  /* 0x0018 */ struct _DIAGNOSTIC_BUFFER ReasonContext;
} WAKE_TIMER_INFO, *PWAKE_TIMER_INFO; /* size: 0x0040 */

class CEnumSTATPROPSTG
{
  /* 0x0000 */ long Padding_382[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ class CStatArray* _psa;
  /* 0x0018 */ unsigned long _ipropNext;
}; /* size: 0x0020 */

enum CClassCache::CDllPathEntry::eFlags
{
  fSIXTEEN_BIT = 1,
  fWX86 = 2,
  fIS_OLE32 = 4,
  fDELAYED_UNLOAD = 16,
};

enum CClassCache::CClassEntry::eFlags
{
  fTREAT_AS = 1,
  fINCOMPLETE = 2,
  fDO_NOT_HASH = 4,
  fCOMPLUS = 8,
  fSIDE_BY_SIDE = 16,
  fSIDE_BY_SIDE_WITH_NO_HASHING = 32,
};

typedef struct _SYSTEM_PAGEFILE_INFORMATION_EX
{
  /* 0x0000 */ struct _SYSTEM_PAGEFILE_INFORMATION Info;
  /* 0x0020 */ unsigned long MinimumSize;
  /* 0x0024 */ unsigned long MaximumSize;
} SYSTEM_PAGEFILE_INFORMATION_EX, *PSYSTEM_PAGEFILE_INFORMATION_EX; /* size: 0x0028 */

enum DLL_INSTANTIATION_PROPERTIES::eFlags
{
  fSIXTEEN_BIT = 1,
  fIS_OLE32 = 8,
  fIS_COMSVCS_CLSID = 16,
};

typedef struct _ACCESS_ALLOWED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_ALLOWED_OBJECT_ACE, *PACCESS_ALLOWED_OBJECT_ACE; /* size: 0x0030 */

typedef struct _CHANGER_PRODUCT_DATA
{
  /* 0x0000 */ unsigned char VendorId[8];
  /* 0x0008 */ unsigned char ProductId[16];
  /* 0x0018 */ unsigned char Revision[4];
  /* 0x001c */ unsigned char SerialNumber[32];
  /* 0x003c */ unsigned char DeviceType;
} CHANGER_PRODUCT_DATA, *PCHANGER_PRODUCT_DATA; /* size: 0x003d */

typedef struct _FILE_INITIATE_REPAIR_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned __int64 Hint1;
  /* 0x0008 */ unsigned __int64 Hint2;
  /* 0x0010 */ unsigned __int64 Clsn;
  /* 0x0018 */ long Status;
  /* 0x001c */ long __PADDING__[1];
} FILE_INITIATE_REPAIR_OUTPUT_BUFFER, *PFILE_INITIATE_REPAIR_OUTPUT_BUFFER; /* size: 0x0020 */

struct Microsoft::WRL::Implements<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::CloakedIid<IMarshal>,Microsoft::WRL::CloakedIid<IAgileObject>,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0010 */

enum CClassCache::CServiceRefEntry::eFlags
{
  fINITIALIZED = 1,
  fSHUTTINGDOWN = 2,
};

enum tagSTDID_FLAGS
{
  STDID_SERVER = 0,
  STDID_CLIENT = 1,
  STDID_FREETHREADED = 2,
  STDID_HAVEID = 4,
  STDID_IGNOREID = 8,
  STDID_AGGREGATED = 16,
  STDID_INDESTRUCTOR = 256,
  STDID_LOCKEDINMEM = 512,
  STDID_DEFHANDLER = 1024,
  STDID_AGGID = 2048,
  STDID_STCMRSHL = 4096,
  STDID_REMOVEDFROMIDOBJ = 8192,
  STDID_SYSTEM = 16384,
  STDID_FTM = 0xffff8000,
  STDID_NOIEC = 0x10000,
  STDID_FASTRUNDOWN = 0x20000,
  STDID_AGILE_OOP_PROXY = 0x40000,
  STDID_SUPPRESS_WAKE_SET = 0x80000,
  STDID_IMPLEMENTS_IAGILEOBJECT = 0x100000,
  STDID_ALL = 0x1fff1f,
};

typedef struct _BCRYPT_KEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
} BCRYPT_KEY_BLOB, *PBCRYPT_KEY_BLOB; /* size: 0x0004 */

struct tagPARAMDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagEMRCREATEDIBPATTERNBRUSHPT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

enum tagSMFLAGS
{
  SMFLAGS_CLIENT_SIDE = 1,
  SMFLAGS_PENDINGDISCONNECT = 2,
  SMFLAGS_REGISTEREDOID = 4,
  SMFLAGS_DISCONNECTED = 8,
  SMFLAGS_FIRSTMARSHAL = 16,
  SMFLAGS_HANDLER = 32,
  SMFLAGS_WEAKCLIENT = 64,
  SMFLAGS_IGNORERUNDOWN = 128,
  SMFLAGS_CLIENTMARSHALED = 256,
  SMFLAGS_NOPING = 512,
  SMFLAGS_TRIEDTOCONNECT = 1024,
  SMFLAGS_CSTATICMARSHAL = 2048,
  SMFLAGS_USEAGGSTDMARSHAL = 4096,
  SMFLAGS_SYSTEM = 8192,
  SMFLAGS_DEACTIVATED = 16384,
  SMFLAGS_FTM = 0xffff8000,
  SMFLAGS_CLIENTPOLICYSET = 0x10000,
  SMFLAGS_APPDISCONNECT = 0x20000,
  SMFLAGS_SYSDISCONNECT = 0x40000,
  SMFLAGS_RUNDOWNDISCONNECT = 0x80000,
  SMFLAGS_CLEANEDUP = 0x100000,
  SMFLAGS_LIGHTNA = 0x200000,
  SMFLAGS_FASTRUNDOWN = 0x400000,
  SMFLAGS_IMPLEMENTS_IAGILEOBJECT = 0x800000,
  SMFLAGS_ALL = 0xffffff,
};

typedef struct _FSCTL_OFFLOAD_READ_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long TokenTimeToLive;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ unsigned __int64 FileOffset;
  /* 0x0018 */ unsigned __int64 CopyLength;
} FSCTL_OFFLOAD_READ_INPUT, *PFSCTL_OFFLOAD_READ_INPUT; /* size: 0x0020 */

typedef union _CLIENT_CALL_RETURN
{
  union
  {
    /* 0x0000 */ void* Pointer;
    /* 0x0000 */ __int64 Simple;
  }; /* size: 0x0008 */
} CLIENT_CALL_RETURN, *PCLIENT_CALL_RETURN; /* size: 0x0008 */

typedef struct _ENCRYPTION_CERTIFICATE_LIST
{
  /* 0x0000 */ unsigned long nUsers;
  /* 0x0004 */ long Padding_383;
  /* 0x0008 */ struct _ENCRYPTION_CERTIFICATE** pUsers;
} ENCRYPTION_CERTIFICATE_LIST, *PENCRYPTION_CERTIFICATE_LIST; /* size: 0x0010 */

typedef struct _SYSTEM_THREAD_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER KernelTime;
  /* 0x0008 */ union _LARGE_INTEGER UserTime;
  /* 0x0010 */ union _LARGE_INTEGER CreateTime;
  /* 0x0018 */ unsigned long WaitTime;
  /* 0x001c */ long Padding_384;
  /* 0x0020 */ void* StartAddress;
  /* 0x0028 */ struct _CLIENT_ID ClientId;
  /* 0x0038 */ long Priority;
  /* 0x003c */ long BasePriority;
  /* 0x0040 */ unsigned long ContextSwitches;
  /* 0x0044 */ unsigned long ThreadState;
  /* 0x0048 */ unsigned long WaitReason;
  /* 0x004c */ long __PADDING__[1];
} SYSTEM_THREAD_INFORMATION, *PSYSTEM_THREAD_INFORMATION; /* size: 0x0050 */

enum tagDISCTYPE
{
  DISCTYPE_NORMAL = 1,
  DISCTYPE_RELEASE = 2,
  DISCTYPE_APPLICATION = 4,
  DISCTYPE_UNINIT = 8,
  DISCTYPE_RUNDOWN = 16,
  DISCTYPE_SYSTEM = 32,
};

class CMachineNamesHelper
{
  /* 0x0000 */ unsigned long _lRefs;
  /* 0x0004 */ unsigned long _dwNumStrings;
  /* 0x0008 */ wchar_t** _ppszStrings;
}; /* size: 0x0010 */

typedef struct _tagpropertykey
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long pid;
} tagpropertykey, *Ptagpropertykey; /* size: 0x0014 */

class DeserializeHelper::BstrDestroyer
{
}; /* size: 0x0008 */

typedef struct _PS_ATTRIBUTE_LIST
{
  /* 0x0000 */ unsigned __int64 TotalLength;
  /* 0x0008 */ struct _PS_ATTRIBUTE Attributes[1];
} PS_ATTRIBUTE_LIST, *PPS_ATTRIBUTE_LIST; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInterface;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned char Enabled;
  /* 0x0015 */ char __PADDING__[3];
} PLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED, *PPLUGPLAY_CONTROL_DEVICE_INTERFACE_ENABLED; /* size: 0x0018 */

struct SysInfo
{
  /* 0x0000 */ struct HDC__* m_hdc;
  /* 0x0008 */ struct HBITMAP__* m_hbmpStock;
  /* 0x0010 */ struct HBITMAP__* m_hbmpColor;
  /* 0x0018 */ struct HPALETTE__* m_hpalDefault;
  /* 0x0020 */ struct HPALETTE__* m_hpalRainbow;
  /* 0x0028 */ int m_cxIcon;
  /* 0x002c */ int m_cyIcon;
  /* 0x0030 */ int m_nScrLogPixelsX;
  /* 0x0034 */ int m_nScrLogPixelsY;
  /* 0x0038 */ int m_nScrBitCount;
  /* 0x003c */ int m_nScrColorCount;
  /* 0x0040 */ int m_nIconColorCount;
  /* 0x0044 */ int m_nScrPaletteSize;
  /* 0x0048 */ struct IStorage* m_pstg;
  /* 0x0050 */ unsigned long m_stmixNext;
  /* 0x0054 */ long Padding_385;
  /* 0x0058 */ struct _RTL_CRITICAL_SECTION m_critDCBusy;
  /* 0x0080 */ struct _RTL_CRITICAL_SECTION m_critMemberBusy;
}; /* size: 0x00a8 */

enum CallObjectOccurrenceOrStateVariable
{
  CalledI_RpcFreeBuffer = 0,
  CalledI_RpcNegotiateTransferSyntax = 1,
  CalledI_RpcGetBufferWithObject = 2,
  CalledI_RpcGetBuffer = 3,
  CalledI_RpcAsyncSetHandle = 4,
  CalledI_RpcSend = 5,
  CalledI_RpcReceive = 6,
  CalledI_RpcAsyncAbortCall = 7,
  CalledI_RpcSendReceive = 8,
  ReturningFromThreadSendReceive = 9,
  ASTAPostToPriority = 10,
  ASTAPostToDispatchable = 11,
  ASTAPostToQueued = 12,
  ASTAPreThreadDispatchNormal = 13,
  ASTAPreThreadDispatchForTimeout = 14,
  ASTAQueuedRemoveForTimeout = 15,
  ASTAQueuedToDispatchable = 16,
  ASTADispatchableToQueued = 17,
  OccurrenceLast = 18,
  CMessageCall_iFlags = 19,
  CAsyncCall_lFlags = 20,
  CAsyncCall_eSignalState = 21,
  CClientCall_m_dwFlags = 22,
};

struct IDummyHICONIncluder
{
}; /* size: 0x0008 */

struct tagEMRPOLYDRAW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cptl;
  /* 0x001c */ struct _POINTL aptl[1];
  /* 0x0024 */ unsigned char abTypes[1];
  /* 0x0025 */ char __PADDING__[3];
}; /* size: 0x0028 */

class Windows::Auto<Windows::Rtl::IRtlRORAStream *>
{
}; /* size: 0x0008 */

struct tagMETHODDATA
{
  /* 0x0000 */ wchar_t* szName;
  /* 0x0008 */ struct tagPARAMDATA* ppdata;
  /* 0x0010 */ long dispid;
  /* 0x0014 */ unsigned int iMeth;
  /* 0x0018 */ enum tagCALLCONV cc;
  /* 0x001c */ unsigned int cArgs;
  /* 0x0020 */ unsigned short wFlags;
  /* 0x0022 */ unsigned short vtReturn;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct tagBITMAPFILEHEADER
{
  /* 0x0000 */ unsigned short bfType;
  /* 0x0002 */ unsigned long bfSize;
  /* 0x0006 */ unsigned short bfReserved1;
  /* 0x0008 */ unsigned short bfReserved2;
  /* 0x000a */ unsigned long bfOffBits;
}; /* size: 0x000e */

enum EChannelState
{
  client_cs = 1,
  proxy_cs = 2,
  server_cs = 4,
  freethreaded_cs = 8,
  process_local_cs = 32,
  locked_cs = 64,
  neutral_cs = 256,
  fake_async_cs = 512,
  app_security_cs = 1024,
  cross_apartment_no_wait_cs = 2048,
  syntax_negotiate_cs = 4096,
  VALID_ECHANNELSTATE_FLAGS = 8047,
};

typedef struct _CRYPT_KEY_PROV_INFO
{
  /* 0x0000 */ wchar_t* pwszContainerName;
  /* 0x0008 */ wchar_t* pwszProvName;
  /* 0x0010 */ unsigned long dwProvType;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ unsigned long cProvParam;
  /* 0x001c */ long Padding_386;
  /* 0x0020 */ struct _CRYPT_KEY_PROV_PARAM* rgProvParam;
  /* 0x0028 */ unsigned long dwKeySpec;
  /* 0x002c */ long __PADDING__[1];
} CRYPT_KEY_PROV_INFO, *PCRYPT_KEY_PROV_INFO; /* size: 0x0030 */

typedef struct _CERT_CHAIN
{
  /* 0x0000 */ unsigned long cCerts;
  /* 0x0004 */ long Padding_387;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* certs;
  /* 0x0010 */ struct _CRYPT_KEY_PROV_INFO keyLocatorInfo;
} CERT_CHAIN, *PCERT_CHAIN; /* size: 0x0040 */

typedef struct _STORAGE_IDENTIFIER
{
  /* 0x0000 */ enum _STORAGE_IDENTIFIER_CODE_SET CodeSet;
  /* 0x0004 */ enum _STORAGE_IDENTIFIER_TYPE Type;
  /* 0x0008 */ unsigned short IdentifierSize;
  /* 0x000a */ unsigned short NextOffset;
  /* 0x000c */ enum _STORAGE_ASSOCIATION_TYPE Association;
  /* 0x0010 */ unsigned char Identifier[1];
  /* 0x0011 */ char __PADDING__[3];
} STORAGE_IDENTIFIER, *PSTORAGE_IDENTIFIER; /* size: 0x0014 */

enum Microsoft::WRL::RuntimeClassType
{
  WinRt = 1,
  ClassicCom = 2,
  WinRtClassicComMix = 3,
  InhibitWeakReference = 4,
  Delegate = 2,
  InhibitFtmBase = 8,
};

struct IActivationSecurityInfo
{
}; /* size: 0x0008 */

typedef struct _BOOT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ unsigned long FriendlyNameOffset;
  /* 0x0014 */ unsigned long BootFilePathOffset;
  /* 0x0018 */ unsigned long OsOptionsLength;
  /* 0x001c */ unsigned char OsOptions[1];
  /* 0x001d */ char __PADDING__[3];
} BOOT_ENTRY, *PBOOT_ENTRY; /* size: 0x0020 */

struct tagMCI_RECORD_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrom;
  /* 0x000c */ unsigned long dwTo;
}; /* size: 0x0010 */

typedef struct _FILE_IO_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* KeyContext;
  /* 0x0008 */ void* ApcContext;
  /* 0x0010 */ struct _IO_STATUS_BLOCK IoStatusBlock;
} FILE_IO_COMPLETION_INFORMATION, *PFILE_IO_COMPLETION_INFORMATION; /* size: 0x0020 */

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ParameterBlockOffset;
  /* 0x0010 */ unsigned long ParameterBlockLength;
  /* 0x0014 */ unsigned long DataSetRangesOffset;
  /* 0x0018 */ unsigned long DataSetRangesLength;
} DEVICE_MANAGE_DATA_SET_ATTRIBUTES, *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES; /* size: 0x001c */

typedef struct _LDR_DLL_LOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_388;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_LOADED_NOTIFICATION_DATA, *PLDR_DLL_LOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_389;
  /* 0x0008 */ const struct _UNICODE_STRING* FullDllName;
  /* 0x0010 */ const struct _UNICODE_STRING* BaseDllName;
  /* 0x0018 */ void* DllBase;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ long __PADDING__[1];
} LDR_DLL_UNLOADED_NOTIFICATION_DATA, *PLDR_DLL_UNLOADED_NOTIFICATION_DATA; /* size: 0x0028 */

typedef union _LDR_DLL_NOTIFICATION_DATA
{
  union
  {
    /* 0x0000 */ struct _LDR_DLL_LOADED_NOTIFICATION_DATA Loaded;
    /* 0x0000 */ struct _LDR_DLL_UNLOADED_NOTIFICATION_DATA Unloaded;
  }; /* size: 0x0028 */
} LDR_DLL_NOTIFICATION_DATA, *PLDR_DLL_NOTIFICATION_DATA; /* size: 0x0028 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >::is_pointer<Windows::Rtl::IRtlRORAStream *>
{
}; /* size: 0x0001 */

class CProcessSecret
{
  union
  {
    /* 0x0000 */ struct _GUID s_guidOle32Secret;
    /* 0x0000 */ int s_fSecretInit;
    /* 0x0000 */ class COleStaticMutexSem s_SecretLock;
  }; /* size: 0x0048 */
}; /* size: 0x0001 */

typedef struct _RTL_HEAP_ENTRY
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned short Flags;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long Padding_390;
  union
  {
    union
    {
      struct
      {
        /* 0x0010 */ unsigned __int64 Settable;
        /* 0x0018 */ unsigned long Tag;
        /* 0x001c */ long __PADDING__[1];
      } /* size: 0x0010 */ s1;
      struct
      {
        /* 0x0010 */ unsigned __int64 CommittedSize;
        /* 0x0018 */ void* FirstBlock;
      } /* size: 0x0010 */ s2;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} RTL_HEAP_ENTRY, *PRTL_HEAP_ENTRY; /* size: 0x0020 */

typedef struct _CONTEXT_CHUNK
{
  /* 0x0000 */ long Offset;
  /* 0x0004 */ unsigned long Length;
} CONTEXT_CHUNK, *PCONTEXT_CHUNK; /* size: 0x0008 */

enum CRIFTable::RegistrationState
{
  NOT_REGISTERED = 0,
  PENDING_REGISTRATION = 1,
  FULLY_REGISTERED = 2,
};

typedef struct _IMAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned char Name[8];
  union
  {
    union
    {
      /* 0x0008 */ unsigned long PhysicalAddress;
      /* 0x0008 */ unsigned long VirtualSize;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Misc;
  /* 0x000c */ unsigned long VirtualAddress;
  /* 0x0010 */ unsigned long SizeOfRawData;
  /* 0x0014 */ unsigned long PointerToRawData;
  /* 0x0018 */ unsigned long PointerToRelocations;
  /* 0x001c */ unsigned long PointerToLinenumbers;
  /* 0x0020 */ unsigned short NumberOfRelocations;
  /* 0x0022 */ unsigned short NumberOfLinenumbers;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_SECTION_HEADER, *PIMAGE_SECTION_HEADER; /* size: 0x0028 */

class CComActivator
{
  /* 0x0000 */ long Padding_391[6];
  /* 0x0018 */ long _ulRef;
  /* 0x001c */ long Padding_392;
  /* 0x0020 */ class OpaqueDataInfo* _pOpaqueData;
  /* 0x0028 */ class SpecialProperties* _pProps;
  /* 0x0030 */ int _fActPropsInitNecessary;
}; /* size: 0x0038 */

typedef struct _wireSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ long Padding_393;
  /* 0x0010 */ struct _wireSAFEARRAY_UNION uArrayStructs;
  /* 0x0038 */ struct tagSAFEARRAYBOUND rgsabound[1];
} wireSAFEARRAY, *PwireSAFEARRAY; /* size: 0x0040 */

typedef struct _STORAGE_GET_BC_PROPERTIES_OUTPUT
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned __int64 MaximumRequestSize;
  /* 0x0010 */ unsigned long EstimatedTimePerRequest;
  /* 0x0014 */ unsigned long NumOutStandingRequests;
  /* 0x0018 */ unsigned __int64 RequestSize;
} STORAGE_GET_BC_PROPERTIES_OUTPUT, *PSTORAGE_GET_BC_PROPERTIES_OUTPUT; /* size: 0x0020 */

typedef struct _FILE_REGION_INPUT
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long DesiredUsage;
  /* 0x0014 */ long __PADDING__[1];
} FILE_REGION_INPUT, *PFILE_REGION_INPUT; /* size: 0x0018 */

struct tMIXERCONTROLDETAILS_BOOLEAN
{
  /* 0x0000 */ long fValue;
}; /* size: 0x0004 */

typedef struct _MEMORY_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 BaseAddress;
  /* 0x0008 */ unsigned __int64 AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ unsigned long __alignment1;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ unsigned long __alignment2;
} MEMORY_BASIC_INFORMATION64, *PMEMORY_BASIC_INFORMATION64; /* size: 0x0030 */

class CMSFPageTable
{
  /* 0x0000 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0008 */ const unsigned long _cbSector;
  /* 0x000c */ const unsigned long _cMinPages;
  /* 0x0010 */ const unsigned long _cMaxPages;
  /* 0x0014 */ unsigned long _cActivePages;
  /* 0x0018 */ unsigned long _cPages;
  /* 0x001c */ long Padding_394;
  /* 0x0020 */ class CBasedMSFPagePtr _pmpCurrent;
  /* 0x0028 */ class CBasedMSFPagePtr _pmpStart;
  /* 0x0030 */ long _cReferences;
}; /* size: 0x0038 */

typedef struct _CREATE_DISK_GPT
{
  /* 0x0000 */ struct _GUID DiskId;
  /* 0x0010 */ unsigned long MaxPartitionCount;
} CREATE_DISK_GPT, *PCREATE_DISK_GPT; /* size: 0x0014 */

enum tagRUNDOWN_RESULT
{
  RUNDWN_UNKNOWN = 1,
  RUNDWN_KEEP = 2,
  RUNDWN_RUNDOWN = 4,
};

typedef struct _JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_395;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ union _LARGE_INTEGER OldLastWriteTime;
  /* 0x0030 */ union _LARGE_INTEGER NewLastWriteTime;
} JOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION, *PJOURNAL_SET_KEY_LAST_WRITE_TIME_INFORMATION; /* size: 0x0038 */

typedef struct _CRYPT_ATTRIBUTE_TYPE_VALUE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CRYPT_ATTRIBUTE_TYPE_VALUE, *PCRYPT_ATTRIBUTE_TYPE_VALUE; /* size: 0x0018 */

struct stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_396[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
}; /* size: 0x0030 */

typedef struct _GENERIC_BINDING_ROUTINE_PAIR
{
  /* 0x0000 */ void* pfnBind /* function */;
  /* 0x0008 */ void* pfnUnbind /* function */;
} GENERIC_BINDING_ROUTINE_PAIR, *PGENERIC_BINDING_ROUTINE_PAIR; /* size: 0x0010 */

struct PRINT_EXECUTION_DATA
{
  /* 0x0000 */ enum PRINT_EXECUTION_CONTEXT context;
  /* 0x0004 */ unsigned long clientAppPID;
}; /* size: 0x0008 */

struct tagLOGFONTW
{
  /* 0x0000 */ long lfHeight;
  /* 0x0004 */ long lfWidth;
  /* 0x0008 */ long lfEscapement;
  /* 0x000c */ long lfOrientation;
  /* 0x0010 */ long lfWeight;
  /* 0x0014 */ unsigned char lfItalic;
  /* 0x0015 */ unsigned char lfUnderline;
  /* 0x0016 */ unsigned char lfStrikeOut;
  /* 0x0017 */ unsigned char lfCharSet;
  /* 0x0018 */ unsigned char lfOutPrecision;
  /* 0x0019 */ unsigned char lfClipPrecision;
  /* 0x001a */ unsigned char lfQuality;
  /* 0x001b */ unsigned char lfPitchAndFamily;
  /* 0x001c */ wchar_t lfFaceName[32];
}; /* size: 0x005c */

struct tagENUMLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
}; /* size: 0x011c */

struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits
{
}; /* size: 0x0001 */

struct tagCOLORCORRECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPalette;
  /* 0x000c */ unsigned long nFirstEntry;
  /* 0x0010 */ unsigned long nPalEntries;
  /* 0x0014 */ unsigned long nReserved;
}; /* size: 0x0018 */

typedef struct _CERT_LOGOTYPE_REFERENCE
{
  /* 0x0000 */ unsigned long cHashedUrl;
  /* 0x0004 */ long Padding_397;
  /* 0x0008 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_REFERENCE, *PCERT_LOGOTYPE_REFERENCE; /* size: 0x0010 */

enum CClassCache::eFlags
{
  fINITIALIZED = 1,
  fSHUTTINGDOWN = 2,
};

struct timeval
{
  /* 0x0000 */ long tv_sec;
  /* 0x0004 */ long tv_usec;
}; /* size: 0x0008 */

class MultiplicationHelper<__int64,unsigned __int64,15>
{
}; /* size: 0x0001 */

enum CClassCache::CLSvrClassEntry::eFlags
{
  fAT_STORAGE = 1,
  fREVOKE_PENDING = 2,
  fBEEN_USED = 16,
};

typedef struct __vc_attributes::implementsAttribute
{
  /* 0x0000 */ const char* interfaces;
  /* 0x0008 */ const char* dispinterfaces;
} _vc_attributes::implementsAttribute, *P_vc_attributes::implementsAttribute; /* size: 0x0010 */

struct BREAK_ON_STATUS_BUFFER
{
  /* 0x0000 */ long NtStatus;
  /* 0x0004 */ unsigned long Win32Error;
  /* 0x0008 */ unsigned long ThreadId;
  /* 0x000c */ unsigned long ProcessId;
  /* 0x0010 */ char ImageFileName[16];
}; /* size: 0x0020 */

struct IShellLibrary
{
}; /* size: 0x0008 */

enum CClassCache::CWinRTLocalSvrClassEntry::eFlags
{
  fREVOKE_PENDING = 2,
};

typedef struct _MEMORY_BASIC_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ void* AllocationBase;
  /* 0x0010 */ unsigned long AllocationProtect;
  /* 0x0014 */ long Padding_398;
  /* 0x0018 */ unsigned __int64 RegionSize;
  /* 0x0020 */ unsigned long State;
  /* 0x0024 */ unsigned long Protect;
  /* 0x0028 */ unsigned long Type;
  /* 0x002c */ long __PADDING__[1];
} MEMORY_BASIC_INFORMATION, *PMEMORY_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _Wx86TIB
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long InitialPc;
  /* 0x0008 */ void* StackBase;
  /* 0x000c */ void* StackLimit;
  /* 0x0010 */ void* DeallocationStack;
  /* 0x0014 */ unsigned long LogFlags;
  /* 0x0018 */ unsigned long InitialSp;
  /* 0x001c */ unsigned char SimulationCount;
  /* 0x001d */ unsigned char InCpuSimulation;
  /* 0x001e */ unsigned char EmulateInitialPc;
  /* 0x001f */ unsigned char Initialized;
  /* 0x0020 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0024 */ void* CpuContext;
  /* 0x0028 */ struct _CONTEXT* InitialExceptionContext;
  /* 0x002c */ void* pCallersRIID;
  /* 0x0030 */ void* pCallersUnknown;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ void* SelfRegDllName;
  /* 0x003c */ void* SelfRegDllHandle;
} Wx86TIB, *PWx86TIB; /* size: 0x0040 */

typedef struct _DISPLAY_DEVICEA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ char DeviceName[32];
  /* 0x0024 */ char DeviceString[128];
  /* 0x00a4 */ unsigned long StateFlags;
  /* 0x00a8 */ char DeviceID[128];
  /* 0x0128 */ char DeviceKey[128];
} DISPLAY_DEVICEA, *PDISPLAY_DEVICEA; /* size: 0x01a8 */

struct ICall
{
}; /* size: 0x0008 */

typedef struct _PARAM_STRUCT
{
  /* 0x0000 */ struct AsyncIAdviseSink2* This;
  /* 0x0008 */ struct IMoniker* pmk;
  /* 0x0010 */ HRESULT _RetVal;
  /* 0x0014 */ long __PADDING__[1];
} PARAM_STRUCT, *PPARAM_STRUCT; /* size: 0x0018 */

typedef enum _TAG_UNNAMED_38
{
  NOT_MARSHALLED = 1,
  SIZED = 2,
  MARSHALLED = 3,
  UNMARSHALLED = 4,
} TAG_UNNAMED_38, *PTAG_UNNAMED_38;

typedef struct _RTL_STACK_CONTEXT_ENTRY
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Data;
} RTL_STACK_CONTEXT_ENTRY, *PRTL_STACK_CONTEXT_ENTRY; /* size: 0x0010 */

typedef struct _RTL_STACK_CONTEXT
{
  /* 0x0000 */ unsigned long NumberOfEntries;
  /* 0x0004 */ long Padding_399;
  /* 0x0008 */ struct _RTL_STACK_CONTEXT_ENTRY Entry[1];
} RTL_STACK_CONTEXT, *PRTL_STACK_CONTEXT; /* size: 0x0018 */

enum LoadOrFreeWhy
{
  LoadingInprocServer = 0,
  CoLoadLibraryCalled = 1,
  CoFreeLibraryCalled = 2,
  FailedToCreateAPathEntry = 3,
  AnotherThreadBeatUsHere = 4,
  NoValidEntryPoint = 5,
  NoLongerInUse = 6,
};

struct tagPOINTER_INFO
{
  /* 0x0000 */ unsigned long pointerType;
  /* 0x0004 */ unsigned int pointerId;
  /* 0x0008 */ unsigned int frameId;
  /* 0x000c */ unsigned int pointerFlags;
  /* 0x0010 */ void* sourceDevice;
  /* 0x0018 */ struct HWND__* hwndTarget;
  /* 0x0020 */ struct tagPOINT ptPixelLocation;
  /* 0x0028 */ struct tagPOINT ptHimetricLocation;
  /* 0x0030 */ struct tagPOINT ptPixelLocationRaw;
  /* 0x0038 */ struct tagPOINT ptHimetricLocationRaw;
  /* 0x0040 */ unsigned long dwTime;
  /* 0x0044 */ unsigned int historyCount;
  /* 0x0048 */ int InputData;
  /* 0x004c */ unsigned long dwKeyStates;
  /* 0x0050 */ unsigned __int64 PerformanceCount;
  /* 0x0058 */ enum tagPOINTER_BUTTON_CHANGE_TYPE ButtonChangeType;
  /* 0x005c */ long __PADDING__[1];
}; /* size: 0x0060 */

typedef struct _RTL_MODULE_BASIC_INFO
{
  /* 0x0000 */ void* ImageBase;
} RTL_MODULE_BASIC_INFO, *PRTL_MODULE_BASIC_INFO; /* size: 0x0008 */

typedef struct _WOW64_DESCRIPTOR_TABLE_ENTRY
{
  /* 0x0000 */ unsigned long Selector;
  /* 0x0004 */ struct _WOW64_LDT_ENTRY Descriptor;
} WOW64_DESCRIPTOR_TABLE_ENTRY, *PWOW64_DESCRIPTOR_TABLE_ENTRY; /* size: 0x000c */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >
{
}; /* size: 0x0008 */

typedef union _MCI_ADDR
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long Address;
      /* 0x0004 */ unsigned long Reserved;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_ADDR, *PMCI_ADDR; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_39
{
  DataID = 2343,
} TAG_UNNAMED_39, *PTAG_UNNAMED_39;

typedef struct _CTL_FIND_SUBJECT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_400;
  /* 0x0008 */ struct _CTL_FIND_USAGE_PARA* pUsagePara;
  /* 0x0010 */ unsigned long dwSubjectType;
  /* 0x0014 */ long Padding_401;
  /* 0x0018 */ void* pvSubject;
} CTL_FIND_SUBJECT_PARA, *PCTL_FIND_SUBJECT_PARA; /* size: 0x0020 */

typedef struct _DISPLAY_DEVICEW
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ wchar_t DeviceName[32];
  /* 0x0044 */ wchar_t DeviceString[128];
  /* 0x0144 */ unsigned long StateFlags;
  /* 0x0148 */ wchar_t DeviceID[128];
  /* 0x0248 */ wchar_t DeviceKey[128];
} DISPLAY_DEVICEW, *PDISPLAY_DEVICEW; /* size: 0x0348 */

typedef enum _TAG_UNNAMED_40
{
  STATE_WAITINGFORSIGNAL = 0,
  STATE_SIGNALED = 1,
  STATE_ERROR = 2,
} TAG_UNNAMED_40, *PTAG_UNNAMED_40;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> const >;

enum EHandleState
{
  allow_hs = 1,
  deny_hs = 2,
  static_cloaking_hs = 4,
  dynamic_cloaking_hs = 8,
  any_cloaking_hs = 12,
  process_local_hs = 16,
  machine_local_hs = 32,
  app_security_hs = 64,
};

struct IThumbnailExtractor
{
}; /* size: 0x0008 */

enum ComCallMarshalingLocality
{
  SameProcess = 0,
  CrossProcess = 1,
};

typedef struct _SYSTEM_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  /* 0x0006 */ unsigned short MaximumProcessors;
  /* 0x0008 */ unsigned long ProcessorFeatureBits;
} SYSTEM_PROCESSOR_INFORMATION, *PSYSTEM_PROCESSOR_INFORMATION; /* size: 0x000c */

struct tWAVEFORMATEX
{
  /* 0x0000 */ unsigned short wFormatTag;
  /* 0x0002 */ unsigned short nChannels;
  /* 0x0004 */ unsigned long nSamplesPerSec;
  /* 0x0008 */ unsigned long nAvgBytesPerSec;
  /* 0x000c */ unsigned short nBlockAlign;
  /* 0x000e */ unsigned short wBitsPerSample;
  /* 0x0010 */ unsigned short cbSize;
}; /* size: 0x0012 */

enum ComCallMarshalingDirection
{
  ComCallMarshalingIn = 0,
  ComCallMarshalingOut = 1,
  NotAComCall = 2,
};

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IWeakReference,Microsoft::WRL::Details::Nil>,0,0>
{
}; /* size: 0x0008 */

enum tagPGALLOCATORFLAGS
{
  PGALLOC_ZEROBRANDNEWPAGES = 1,
};

struct IProcessLock
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_JOBSET_INFORMATION
{
  /* 0x0000 */ unsigned long MemberLevel;
} JOBOBJECT_JOBSET_INFORMATION, *PJOBOBJECT_JOBSET_INFORMATION; /* size: 0x0004 */

typedef struct _COVERAGE_MODULE_REQUEST
{
  /* 0x0000 */ enum _COVERAGE_REQUEST_CODES RequestType;
  /* 0x0004 */ long Padding_402;
  union
  {
    union
    {
      /* 0x0008 */ unsigned char MD5Hash[16];
      /* 0x0008 */ struct _UNICODE_STRING ModuleName;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ SearchInfo;
} COVERAGE_MODULE_REQUEST, *PCOVERAGE_MODULE_REQUEST; /* size: 0x0018 */

typedef struct _COVERAGE_MODULES
{
  /* 0x0000 */ unsigned long ListAndReset;
  /* 0x0004 */ unsigned long NumberOfModules;
  /* 0x0008 */ struct _COVERAGE_MODULE_REQUEST ModuleRequestInfo;
  /* 0x0020 */ struct _COVERAGE_MODULE_INFO Modules[1];
} COVERAGE_MODULES, *PCOVERAGE_MODULES; /* size: 0x0040 */

typedef enum _operators
{
  OP_START = 0,
  OP_ILLEGAL = 0,
  OP_UNARY_START = 1,
  OP_UNARY_ARITHMETIC_START = 1,
  OP_UNARY_PLUS = 1,
  OP_UNARY_MINUS = 2,
  OP_UNARY_ARITHMETIC_END = 3,
  OP_UNARY_LOGICAL_START = 3,
  OP_UNARY_NOT = 3,
  OP_UNARY_COMPLEMENT = 4,
  OP_UNARY_LOGICAL_END = 5,
  OP_UNARY_INDIRECTION = 5,
  OP_UNARY_CAST = 6,
  OP_UNARY_AND = 7,
  OP_UNARY_SIZEOF = 8,
  OP_UNARY_ALIGNOF = 9,
  OP_PRE_INCR = 10,
  OP_PRE_DECR = 11,
  OP_POST_INCR = 12,
  OP_POST_DECR = 13,
  OP_UNARY_END = 14,
  OP_BINARY_START = 14,
  OP_BINARY_ARITHMETIC_START = 14,
  OP_PLUS = 14,
  OP_MINUS = 15,
  OP_STAR = 16,
  OP_SLASH = 17,
  OP_MOD = 18,
  OP_BINARY_ARITHMETIC_END = 19,
  OP_BINARY_SHIFT_START = 19,
  OP_LEFT_SHIFT = 19,
  OP_RIGHT_SHIFT = 20,
  OP_BINARY_SHIFT_END = 21,
  OP_BINARY_RELATIONAL_START = 21,
  OP_LESS = 21,
  OP_LESS_EQUAL = 22,
  OP_GREATER_EQUAL = 23,
  OP_GREATER = 24,
  OP_EQUAL = 25,
  OP_NOT_EQUAL = 26,
  OP_BINARY_RELATIONAL_END = 27,
  OP_BINARY_BITWISE_START = 27,
  OP_AND = 27,
  OP_OR = 28,
  OP_XOR = 29,
  OP_BINARY_BITWISE_END = 30,
  OP_BINARY_LOGICAL_START = 30,
  OP_LOGICAL_AND = 30,
  OP_LOGICAL_OR = 31,
  OP_BINARY_LOGICAL_END = 32,
  OP_BINARY_TERNARY_START = 32,
  OP_QM = 32,
  OP_COLON = 33,
  OP_BINARY_TERNARY_END = 34,
  OP_BINARY_END = 34,
  OP_INTERNAL_START = 34,
  OP_FUNCTION = 35,
  OP_PARAM = 36,
  OP_POINTSTO = 37,
  OP_DOT = 38,
  OP_INDEX = 39,
  OP_COMMA = 40,
  OP_STMT = 41,
  OP_ASSIGN = 42,
  OP_ASYNCSPLIT = 43,
  OP_CORR_POINTER = 44,
  OP_CORR_TOP_LEVEL = 45,
  OP_END = 46,
} operators, *Poperators;

enum AsyncStatus
{
  Started = 0,
  Completed = 1,
  Canceled = 2,
  Error = 3,
};

typedef struct _OPEN_PRINTER_PROPS_INFOA
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_403;
  /* 0x0008 */ char* pszSheetName;
  /* 0x0010 */ unsigned int uSheetIndex;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ int bModal;
  /* 0x001c */ long __PADDING__[1];
} OPEN_PRINTER_PROPS_INFOA, *POPEN_PRINTER_PROPS_INFOA; /* size: 0x0020 */

typedef enum _tagEXPR_TOKEN
{
  FC_EXPR_START = 0,
  FC_EXPR_ILLEGAL = 0,
  FC_EXPR_CONST32 = 1,
  FC_EXPR_CONST64 = 2,
  FC_EXPR_VAR = 3,
  FC_EXPR_OPER = 4,
  FC_EXPR_NOOP = 5,
  FC_EXPR_END = 6,
} tagEXPR_TOKEN, *PtagEXPR_TOKEN;

typedef struct __vc_attributes::atl::request_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* sdl;
} _vc_attributes::atl::request_handlerAttribute, *P_vc_attributes::atl::request_handlerAttribute; /* size: 0x0010 */

enum CallerLocalityIndicator
{
  CallerIsDirect = 0,
  CallerIsInproc = 1,
  CallerIsOutofproc = 2,
};

struct IDisconnectSink
{
}; /* size: 0x0008 */

typedef struct _FILE_FS_LABEL_INFORMATION
{
  /* 0x0000 */ unsigned long VolumeLabelLength;
  /* 0x0004 */ wchar_t VolumeLabel[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_FS_LABEL_INFORMATION, *PFILE_FS_LABEL_INFORMATION; /* size: 0x0008 */

typedef struct _VIDEOPARAMETERS
{
  /* 0x0000 */ struct _GUID Guid;
  /* 0x0010 */ unsigned long dwOffset;
  /* 0x0014 */ unsigned long dwCommand;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwMode;
  /* 0x0020 */ unsigned long dwTVStandard;
  /* 0x0024 */ unsigned long dwAvailableModes;
  /* 0x0028 */ unsigned long dwAvailableTVStandard;
  /* 0x002c */ unsigned long dwFlickerFilter;
  /* 0x0030 */ unsigned long dwOverScanX;
  /* 0x0034 */ unsigned long dwOverScanY;
  /* 0x0038 */ unsigned long dwMaxUnscaledX;
  /* 0x003c */ unsigned long dwMaxUnscaledY;
  /* 0x0040 */ unsigned long dwPositionX;
  /* 0x0044 */ unsigned long dwPositionY;
  /* 0x0048 */ unsigned long dwBrightness;
  /* 0x004c */ unsigned long dwContrast;
  /* 0x0050 */ unsigned long dwCPType;
  /* 0x0054 */ unsigned long dwCPCommand;
  /* 0x0058 */ unsigned long dwCPStandard;
  /* 0x005c */ unsigned long dwCPKey;
  /* 0x0060 */ unsigned long bCP_APSTriggerBits;
  /* 0x0064 */ unsigned char bOEMCopyProtection[256];
} VIDEOPARAMETERS, *PVIDEOPARAMETERS; /* size: 0x0164 */

enum CALLFRAME_NULL
{
  CALLFRAME_NULL_NONE = 0,
  CALLFRAME_NULL_INOUT = 2,
  CALLFRAME_NULL_OUT = 4,
  CALLFRAME_NULL_ALL = 6,
};

struct tagTTPOLYGONHEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ struct tagPOINTFX pfxStart;
}; /* size: 0x0010 */

enum CALLFRAME_FREE
{
  CALLFRAME_FREE_NONE = 0,
  CALLFRAME_FREE_IN = 1,
  CALLFRAME_FREE_INOUT = 2,
  CALLFRAME_FREE_OUT = 4,
  CALLFRAME_FREE_TOP_INOUT = 8,
  CALLFRAME_FREE_TOP_OUT = 16,
  CALLFRAME_FREE_ALL = 31,
};

typedef struct _RTL_UNLOAD_EVENT_TRACE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 SizeOfImage;
  /* 0x0010 */ unsigned long Sequence;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ wchar_t ImageName[32];
  /* 0x005c */ unsigned long Version[2];
  /* 0x0064 */ long __PADDING__[1];
} RTL_UNLOAD_EVENT_TRACE, *PRTL_UNLOAD_EVENT_TRACE; /* size: 0x0068 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >::is_pointer<Windows::Rtl::IRtlWOFOStream *>
{
}; /* size: 0x0001 */

typedef enum _TAG_UNNAMED_41
{
  IMETHOD_FIRST = 3,
  IMETHOD_GetTypeInfoCount = 3,
  IMETHOD_GetTypeInfo = 4,
  IMETHOD_GetIDsOfNames = 5,
  IMETHOD_Invoke = 6,
  IMETHOD_DISPATCH_MAX = 7,
  IPARAM_Invoke_DispId = 0,
  IPARAM_Invoke_Iid = 1,
  IPARAM_Invoke_Lcid = 2,
  IPARAM_Invoke_WFlags = 3,
  IPARAM_Invoke_DispParams = 4,
  IPARAM_Invoke_PVarResult = 5,
  IPARAM_Invoke_PExcepInfo = 6,
  IPARAM_Invoke_PUArgErr = 7,
} TAG_UNNAMED_41, *PTAG_UNNAMED_41;

typedef struct _OSVERSIONINFOEXW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
} OSVERSIONINFOEXW, *POSVERSIONINFOEXW; /* size: 0x011c */

struct tagWAVEINCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long dwFormats;
  /* 0x004c */ unsigned short wChannels;
  /* 0x004e */ unsigned short wReserved1;
  /* 0x0050 */ struct _GUID ManufacturerGuid;
  /* 0x0060 */ struct _GUID ProductGuid;
  /* 0x0070 */ struct _GUID NameGuid;
}; /* size: 0x0080 */

typedef enum _TAG_UNNAMED_42
{
  CB_PRIVATE_BUFFER = 256,
} TAG_UNNAMED_42, *PTAG_UNNAMED_42;

enum FORMAT_CHARACTER
{
  FC_ZERO = 0,
  FC_BYTE = 1,
  FC_CHAR = 2,
  FC_SMALL = 3,
  FC_USMALL = 4,
  FC_WCHAR = 5,
  FC_SHORT = 6,
  FC_USHORT = 7,
  FC_LONG = 8,
  FC_ULONG = 9,
  FC_FLOAT = 10,
  FC_HYPER = 11,
  FC_DOUBLE = 12,
  FC_ENUM16 = 13,
  FC_ENUM32 = 14,
  FC_IGNORE = 15,
  FC_ERROR_STATUS_T = 16,
  FC_RP = 17,
  FC_UP = 18,
  FC_OP = 19,
  FC_FP = 20,
  FC_STRUCT = 21,
  FC_PSTRUCT = 22,
  FC_CSTRUCT = 23,
  FC_CPSTRUCT = 24,
  FC_CVSTRUCT = 25,
  FC_BOGUS_STRUCT = 26,
  FC_CARRAY = 27,
  FC_CVARRAY = 28,
  FC_SMFARRAY = 29,
  FC_LGFARRAY = 30,
  FC_SMVARRAY = 31,
  FC_LGVARRAY = 32,
  FC_BOGUS_ARRAY = 33,
  FC_C_CSTRING = 34,
  FC_C_BSTRING = 35,
  FC_C_SSTRING = 36,
  FC_C_WSTRING = 37,
  FC_CSTRING = 38,
  FC_BSTRING = 39,
  FC_SSTRING = 40,
  FC_WSTRING = 41,
  FC_ENCAPSULATED_UNION = 42,
  FC_NON_ENCAPSULATED_UNION = 43,
  FC_BYTE_COUNT_POINTER = 44,
  FC_TRANSMIT_AS = 45,
  FC_REPRESENT_AS = 46,
  FC_IP = 47,
  FC_BIND_CONTEXT = 48,
  FC_BIND_GENERIC = 49,
  FC_BIND_PRIMITIVE = 50,
  FC_AUTO_HANDLE = 51,
  FC_CALLBACK_HANDLE = 52,
  FC_UNUSED1 = 53,
  FC_POINTER = 54,
  FC_ALIGNM2 = 55,
  FC_ALIGNM4 = 56,
  FC_ALIGNM8 = 57,
  FC_UNUSED2 = 58,
  FC_UNUSED3 = 59,
  FC_UNUSED4 = 60,
  FC_STRUCTPAD1 = 61,
  FC_STRUCTPAD2 = 62,
  FC_STRUCTPAD3 = 63,
  FC_STRUCTPAD4 = 64,
  FC_STRUCTPAD5 = 65,
  FC_STRUCTPAD6 = 66,
  FC_STRUCTPAD7 = 67,
  FC_STRING_SIZED = 68,
  FC_UNUSED5 = 69,
  FC_NO_REPEAT = 70,
  FC_FIXED_REPEAT = 71,
  FC_VARIABLE_REPEAT = 72,
  FC_FIXED_OFFSET = 73,
  FC_VARIABLE_OFFSET = 74,
  FC_PP = 75,
  FC_EMBEDDED_COMPLEX = 76,
  FC_IN_PARAM = 77,
  FC_IN_PARAM_BASETYPE = 78,
  FC_IN_PARAM_NO_FREE_INST = 79,
  FC_IN_OUT_PARAM = 80,
  FC_OUT_PARAM = 81,
  FC_RETURN_PARAM = 82,
  FC_RETURN_PARAM_BASETYPE = 83,
  FC_DEREFERENCE = 84,
  FC_DIV_2 = 85,
  FC_MULT_2 = 86,
  FC_ADD_1 = 87,
  FC_SUB_1 = 88,
  FC_CALLBACK = 89,
  FC_CONSTANT_IID = 90,
  FC_END = 91,
  FC_PAD = 92,
  FC_EXPR = 93,
  FC_PARTIAL_IGNORE_PARAM = 94,
  FC_SPLIT_DEREFERENCE = 116,
  FC_SPLIT_DIV_2 = 117,
  FC_SPLIT_MULT_2 = 118,
  FC_SPLIT_ADD_1 = 119,
  FC_SPLIT_SUB_1 = 120,
  FC_SPLIT_CALLBACK = 121,
  FC_FORCED_BOGUS_STRUCT = 177,
  FC_TRANSMIT_AS_PTR = 178,
  FC_REPRESENT_AS_PTR = 179,
  FC_USER_MARSHAL = 180,
  FC_PIPE = 181,
  FC_SUPPLEMENT = 182,
  FC_RANGE = 183,
  FC_INT3264 = 184,
  FC_UINT3264 = 185,
  FC_CSARRAY = 186,
  FC_CS_TAG = 187,
  FC_STRUCTPADN = 188,
  FC_UNUSED7 = 189,
  FC_UNUSED8 = 190,
  FC_UNUSED9 = 191,
  FC_UNUSED10 = 192,
  FC_BUFFER_ALIGN = 193,
  FC_INT128 = 194,
  FC_UINT128 = 195,
  FC_FLOAT80 = 196,
  FC_FLOAT128 = 197,
  FC_END_OF_UNIVERSE = 198,
};

typedef struct _DISCDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_404;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ wchar_t* lpLocalName;
  /* 0x0018 */ wchar_t* lpRemoteName;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} DISCDLGSTRUCTW, *PDISCDLGSTRUCTW; /* size: 0x0028 */

typedef struct _DRAGINFOW
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ wchar_t* lpFileList;
  /* 0x0018 */ unsigned long grfKeyState;
  /* 0x001c */ long __PADDING__[1];
} DRAGINFOW, *PDRAGINFOW; /* size: 0x0020 */

typedef struct _DEVICE_SEEK_PENALTY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char IncursSeekPenalty;
  /* 0x0009 */ char __PADDING__[3];
} DEVICE_SEEK_PENALTY_DESCRIPTOR, *PDEVICE_SEEK_PENALTY_DESCRIPTOR; /* size: 0x000c */

typedef enum _TAG_UNNAMED_43
{
  UserMarshal_Index_BSTR = 0,
  UserMarshal_Index_VARIANT = 1,
  UserMarshal_Index_SafeArray = 2,
} TAG_UNNAMED_43, *PTAG_UNNAMED_43;

struct IInternetSecurityMgrSite
{
}; /* size: 0x0008 */

typedef struct _RTL_HANDLE_TABLE
{
  /* 0x0000 */ unsigned long MaximumNumberOfHandles;
  /* 0x0004 */ unsigned long SizeOfHandleTableEntry;
  /* 0x0008 */ unsigned long UseHeap;
  /* 0x000c */ unsigned long TableSize;
  /* 0x0010 */ struct _RTL_HANDLE_TABLE_ENTRY* FreeHandles;
  /* 0x0018 */ struct _RTL_HANDLE_TABLE_ENTRY* CommittedHandles;
  /* 0x0020 */ struct _RTL_HANDLE_TABLE_ENTRY* UnCommittedHandles;
  /* 0x0028 */ struct _RTL_HANDLE_TABLE_ENTRY* MaxReservedHandles;
} RTL_HANDLE_TABLE, *PRTL_HANDLE_TABLE; /* size: 0x0030 */

typedef enum __MIDL_ICallFrame_0003
{
  CALLFRAME_COPY_NESTED = 1,
  CALLFRAME_COPY_INDEPENDENT = 2,
} _MIDL_ICallFrame_0003, *P_MIDL_ICallFrame_0003;

typedef struct _CMC_TAGGED_REQUEST
{
  /* 0x0000 */ unsigned long dwTaggedRequestChoice;
  /* 0x0004 */ long Padding_405;
  /* 0x0008 */ struct _CMC_TAGGED_CERT_REQUEST* pTaggedCertRequest;
} CMC_TAGGED_REQUEST, *PCMC_TAGGED_REQUEST; /* size: 0x0010 */

typedef struct _RTL_TRACE_BLOCK
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long Padding_406;
  /* 0x0010 */ unsigned __int64 UserCount;
  /* 0x0018 */ unsigned __int64 UserSize;
  /* 0x0020 */ void* UserContext;
  /* 0x0028 */ struct _RTL_TRACE_BLOCK* Next;
  /* 0x0030 */ void** Trace;
} RTL_TRACE_BLOCK, *PRTL_TRACE_BLOCK; /* size: 0x0038 */

typedef struct _TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID UOW;
} TRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT, *PTRANSACTION_NOTIFICATION_RECOVERY_ARGUMENT; /* size: 0x0020 */

enum ClassRegistration::SERVER_TYPE
{
  INPROC_SERVER = 1,
  LOCAL_SERVER = 4,
  INPROC_HANDLER = 2,
  SERVER_TYPE_NONE = 0,
};

enum CALLFRAME_WALK
{
  CALLFRAME_WALK_IN = 1,
  CALLFRAME_WALK_INOUT = 2,
  CALLFRAME_WALK_OUT = 4,
};

typedef struct _BOOT_ENTROPY_SOURCE_NT_RESULT
{
  /* 0x0000 */ enum _BOOT_ENTROPY_SOURCE_ID SourceId;
  /* 0x0004 */ long Padding_407;
  /* 0x0008 */ unsigned __int64 Policy;
  /* 0x0010 */ enum _BOOT_ENTROPY_SOURCE_RESULT_CODE ResultCode;
  /* 0x0014 */ long ResultStatus;
  /* 0x0018 */ unsigned __int64 Time;
  /* 0x0020 */ unsigned long EntropyLength;
  /* 0x0024 */ unsigned char EntropyData[64];
  /* 0x0064 */ long __PADDING__[1];
} BOOT_ENTROPY_SOURCE_NT_RESULT, *PBOOT_ENTROPY_SOURCE_NT_RESULT; /* size: 0x0068 */

typedef struct _SD_QUERY_STATS_INPUT
{
  /* 0x0000 */ unsigned long Reserved;
} SD_QUERY_STATS_INPUT, *PSD_QUERY_STATS_INPUT; /* size: 0x0004 */

struct tagMCI_SAVE_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const wchar_t* lpfilename;
}; /* size: 0x0010 */

enum tagSERVERCALLEX
{
  SERVERCALLEX_ISHANDLED = 0,
  SERVERCALLEX_REJECTED = 1,
  SERVERCALLEX_RETRYLATER = 2,
  SERVERCALLEX_ERROR = 3,
  SERVERCALLEX_CANCELED = 5,
};

struct ICodeInstall
{
}; /* size: 0x0008 */

enum DISPLAYSETTINGEVENTTYPE
{
  DSET_DISPLAYDATA_LOADED = 1,
  DSET_PATH_CHANGED = 2,
  DSET_VIEW_ORDER_CHANGED = 4,
  DSET_VIEW_POSITION_CHANGED = 256,
  DSET_VIEW_RESOLUTION_CHANGED = 512,
  DSET_VIEW_COLOR_CHANGED = 1024,
  DSET_VIEW_FREQ_CHANGED = 2048,
  DSET_VIEW_ROTATION_CHANGED = 4096,
  DSET_VIEW_PRIMARY_CHANGED = 8192,
  DSET_VIEW_AUTOROTATION_CHANGED = 16384,
  DSET_VIEW_STEREO_CHANGED = 0xffff8000,
  DSET_VIEW_PROPERTY_CHANGED = 0xffffff00,
};

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_408;
  /* 0x0008 */ unsigned short* ServerPrincName;
  /* 0x0010 */ unsigned long AuthnLevel;
  /* 0x0014 */ unsigned long AuthnSvc;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_W* AuthIdentity;
  /* 0x0020 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_W, *PRPC_BINDING_HANDLE_SECURITY_V1_W; /* size: 0x0028 */

enum CHARM_WINDOW_VISIBILITY_BEHAVIOR
{
  CWVB_DEFAULT = 0,
  CWVB_RETAIN_VISIBILITY = 1,
  CWVB_RETAIN_VISIBILITY_ONCE = 2,
  CWVB_RETAIN_FOREGROUND = 3,
};

enum TRAYORIENTATION
{
  TO_BOTTOM = 0,
  TO_RIGHT = 1,
  TO_LEFT = 2,
  TO_TOP = 3,
};

enum SYNCMGR_HANDLER_TYPE
{
  SYNCMGR_HT_UNSPECIFIED = 0,
  SYNCMGR_HT_APPLICATION = 1,
  SYNCMGR_HT_DEVICE = 2,
  SYNCMGR_HT_FOLDER = 3,
  SYNCMGR_HT_SERVICE = 4,
  SYNCMGR_HT_COMPUTER = 5,
  SYNCMGR_HT_MIN = 0,
  SYNCMGR_HT_MAX = 5,
};

enum SHELL_BROWSER_FRAME_SIZE_POSITION
{
  SBFSP_XPOS = 1,
  SBFSP_XOFF = 2,
  SBFSP_YPOS = 4,
  SBFSP_YOFF = 8,
  SBFSP_WIDTHSET = 16,
  SBFSP_WIDTHINCR = 32,
  SBFSP_HEIGHTSET = 64,
  SBFSP_HEIGHTINCR = 128,
  SBFSP_RESTRICT = -2147483648,
  SBFSP_XMASK = 3,
  SBFSP_YMASK = 12,
  SBFSP_MOVEMASK = 15,
  SBFSP_MOVERELMASK = 10,
  SBFSP_WIDTHMASK = 48,
  SBFSP_HEIGHTMASK = 192,
  SBFSP_SIZEMASK = 240,
  SBFSP_SIZERELMASK = 160,
  SBFSP_RELOPMASK = 170,
};

struct tagTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char __PADDING__[3];
}; /* size: 0x003c */

typedef struct _PROPSHEETHEADERA_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndParent;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszCaption;
  /* 0x0028 */ unsigned int nPages;
  /* 0x002c */ long Padding_409;
  union
  {
    /* 0x0030 */ unsigned int nStartPage;
    /* 0x0030 */ const char* pStartPage;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ const struct _PROPSHEETPAGEA* ppsp;
    /* 0x0038 */ struct _PSP** phpage;
  }; /* size: 0x0008 */
  /* 0x0040 */ void* pfnCallback /* function */;
  union
  {
    /* 0x0048 */ struct HBITMAP__* hbmWatermark;
    /* 0x0048 */ const char* pszbmWatermark;
  }; /* size: 0x0008 */
  /* 0x0050 */ struct HPALETTE__* hplWatermark;
  union
  {
    /* 0x0058 */ struct HBITMAP__* hbmHeader;
    /* 0x0058 */ const char* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETHEADERA_V2, *PPROPSHEETHEADERA_V2; /* size: 0x0060 */

typedef struct __midl_frag697_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag697_t, *P_midl_frag697_t; /* size: 0x0028 */

struct ISynchronize
{
}; /* size: 0x0008 */

struct tagCustomHeader
{
  /* 0x0000 */ unsigned long totalSize;
  /* 0x0004 */ unsigned long headerSize;
  /* 0x0008 */ unsigned long cOpaqueData;
  /* 0x000c */ unsigned long destCtx;
  /* 0x0010 */ unsigned long cIfs;
  /* 0x0014 */ struct _GUID classInfoClsid;
  /* 0x0024 */ long Padding_410;
  /* 0x0028 */ struct _GUID* pclsid;
  /* 0x0030 */ unsigned long* pSizes;
  /* 0x0038 */ struct tagCustomOpaqueData* opaqueData;
}; /* size: 0x0040 */

class ActivationProperties
{
  /* 0x0000 */ long Padding_411[6];
  /* 0x0018 */ enum _TAG_UNNAMED_38 _marshalState;
  /* 0x001c */ struct _GUID _actCLSID;
  /* 0x002c */ int _unSerialized;
  /* 0x0030 */ int _unSerializedInproc;
  /* 0x0034 */ long _refCount;
  /* 0x0038 */ struct tagCustomHeader _serHeader;
  /* 0x0078 */ struct tagCustomHeader _unSerHeader;
  /* 0x00b8 */ unsigned long _marshalFlags;
  /* 0x00bc */ unsigned long _size;
  /* 0x00c0 */ int _toDelete;
  /* 0x00c4 */ int _fDestruct;
  /* 0x00c8 */ int _fInprocSerializationRequired;
  /* 0x00cc */ unsigned long _totalSize;
  /* 0x00d0 */ class SerializableProperty* serializableIfsCollection[10];
  /* 0x0120 */ unsigned long _ifsIndex;
  /* 0x0124 */ struct _GUID _clsidArray[10];
  /* 0x01c4 */ unsigned long _sizeArray[10];
  /* 0x01ec */ unsigned long _headerSize;
  /* 0x01f0 */ class Serializer* _pUnSer;
  /* 0x01f8 */ void* _blob;
}; /* size: 0x0200 */

typedef struct _PROCESSOR_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ unsigned char DynamicThrottle;
  /* 0x0005 */ unsigned char Spare[3];
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long DisableCStates : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long Reserved : 31; /* bit position: 1 */
  }; /* bitfield */
  /* 0x000c */ unsigned long PolicyCount;
  /* 0x0010 */ struct _PROCESSOR_POWER_POLICY_INFO Policy[3];
} PROCESSOR_POWER_POLICY, *PPROCESSOR_POWER_POLICY; /* size: 0x004c */

typedef struct _CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA
{
  /* 0x0000 */ unsigned long cOID;
  /* 0x0004 */ long Padding_412;
  /* 0x0008 */ char** rgpszOID;
} CRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA, *PCRYPT_DEFAULT_CONTEXT_MULTI_OID_PARA; /* size: 0x0010 */

typedef struct _MEMORY_FRAME_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 UseDescription : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 ListDescription : 3; /* bit position: 4 */
    /* 0x0000 */ unsigned __int64 Reserved0 : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned __int64 Pinned : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned __int64 DontUse : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 57 */
    /* 0x0000 */ unsigned __int64 Reserved : 4; /* bit position: 60 */
  }; /* bitfield */
} MEMORY_FRAME_INFORMATION, *PMEMORY_FRAME_INFORMATION; /* size: 0x0008 */

typedef struct _FILEOFFSET_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 Offset : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} FILEOFFSET_INFORMATION, *PFILEOFFSET_INFORMATION; /* size: 0x0008 */

typedef struct _PAGEDIR_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 PageDirectoryBase : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} PAGEDIR_INFORMATION, *PPAGEDIR_INFORMATION; /* size: 0x0008 */

typedef struct _UNIQUE_PROCESS_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned __int64 DontUse : 9; /* bit position: 0 */
    /* 0x0000 */ unsigned __int64 UniqueProcessKey : 48; /* bit position: 9 */
    /* 0x0000 */ unsigned __int64 Reserved : 7; /* bit position: 57 */
  }; /* bitfield */
} UNIQUE_PROCESS_INFORMATION, *PUNIQUE_PROCESS_INFORMATION; /* size: 0x0008 */

typedef struct _MMPFN_IDENTITY
{
  union
  {
    union
    {
      /* 0x0000 */ struct _MEMORY_FRAME_INFORMATION e1;
      /* 0x0000 */ struct _FILEOFFSET_INFORMATION e2;
      /* 0x0000 */ struct _PAGEDIR_INFORMATION e3;
      /* 0x0000 */ struct _UNIQUE_PROCESS_INFORMATION e4;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
  /* 0x0008 */ unsigned __int64 PageFrameIndex;
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0010 */ unsigned __int64 Image : 1; /* bit position: 0 */
          /* 0x0010 */ unsigned __int64 Mismatch : 1; /* bit position: 1 */
        }; /* bitfield */
      } /* size: 0x0008 */ e1;
      struct
      {
        /* 0x0010 */ unsigned __int64 CombinedPage : 1; /* bit position: 0 */
      } /* size: 0x0008 */ e2;
      /* 0x0010 */ void* FileObject;
      /* 0x0010 */ void* UniqueFileObjectKey;
      /* 0x0010 */ void* ProtoPteAddress;
      /* 0x0010 */ void* VirtualAddress;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u2;
} MMPFN_IDENTITY, *PMMPFN_IDENTITY; /* size: 0x0018 */

typedef struct _MM_ETW_PAGE_INFO
{
  /* 0x0000 */ struct _MMPFN_IDENTITY PfnIdentity;
} MM_ETW_PAGE_INFO, *PMM_ETW_PAGE_INFO; /* size: 0x0018 */

typedef union _MM_ETW_PAGE_EXTRA_INFO
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned __int64 SharedInitial : 1; /* bit position: 0 */
    } /* size: 0x0008 */ e1;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 WorkingSetType : 2; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 NotAddedtoWS : 1; /* bit position: 2 */
        /* 0x0000 */ unsigned __int64 COWFault : 1; /* bit position: 3 */
      }; /* bitfield */
    } /* size: 0x0008 */ e2;
    /* 0x0000 */ unsigned __int64 ProtoPte;
    /* 0x0000 */ void* VirtualAddress;
  }; /* size: 0x0008 */
} MM_ETW_PAGE_EXTRA_INFO, *PMM_ETW_PAGE_EXTRA_INFO; /* size: 0x0008 */

typedef struct _MM_ETW_PAGE_INFO_EX
{
  /* 0x0000 */ struct _MM_ETW_PAGE_INFO PageInfo;
  /* 0x0018 */ union _MM_ETW_PAGE_EXTRA_INFO Info;
} MM_ETW_PAGE_INFO_EX, *PMM_ETW_PAGE_INFO_EX; /* size: 0x0020 */

typedef struct _MM_ETW_WORKING_SET_PFN_RUNDOWN
{
  /* 0x0000 */ unsigned __int64 ProcessId;
  /* 0x0008 */ unsigned __int64 EntryCount;
  /* 0x0010 */ struct _MM_ETW_PAGE_INFO_EX WorkingSetInfo[1];
} MM_ETW_WORKING_SET_PFN_RUNDOWN, *PMM_ETW_WORKING_SET_PFN_RUNDOWN; /* size: 0x0030 */

enum FLYOUTMENU_SETTING
{
  FMS_ShowSleepOption = 0,
  FMS_ShowHibernateOption = 1,
  FMS_ShowLockOption = 2,
};

typedef struct _KEY_HANDLE_TAGS_INFORMATION
{
  /* 0x0000 */ unsigned long HandleTags;
} KEY_HANDLE_TAGS_INFORMATION, *PKEY_HANDLE_TAGS_INFORMATION; /* size: 0x0004 */

enum IMM_APP_CHANGED
{
  IAC_UNKNOWN = 0,
  IAC_STARTED = 1,
  IAC_FOREGROUND = 2,
  IAC_BACKGROUND = 3,
  IAC_SHOWN = 4,
  IAC_HIDDEN = 5,
  IAC_CLOSED = 6,
  IAC_WINDOWPRESENTATIONDECLINED = 7,
  IAC_PRESENTEDWINDOWCHANGED = 8,
  IAC_MOBODYENTERED = 9,
  IAC_MOBODYEXIT = 10,
  IAC_HASPACKAGEID = 11,
  IAC_FORGOTTEN = 12,
  IAC_INTERACTIVE = 13,
  IAC_NON_INTERACTIVE = 14,
};

class CSCMergedEnum<IEnumGUID,_GUID>
{
  /* 0x0000 */ long Padding_413[2];
  /* 0x0008 */ struct IEnumGUID** m_pcsEnum;
  /* 0x0010 */ unsigned long m_cTotalEnum;
  /* 0x0014 */ unsigned long m_dwRefCount;
  /* 0x0018 */ unsigned long m_CurrentEnum;
  /* 0x001c */ struct _GUID m_myiid;
}; /* size: 0x0030 */

class CItemMoniker
{
  /* 0x0000 */ long Padding_414[10];
  /* 0x0028 */ wchar_t* m_lpszItem;
  /* 0x0030 */ char* m_pszAnsiItem;
  /* 0x0038 */ unsigned short m_ccItem;
  /* 0x003a */ unsigned short m_cbAnsiItem;
  /* 0x003c */ long Padding_415;
  /* 0x0040 */ wchar_t* m_lpszDelimiter;
  /* 0x0048 */ char* m_pszAnsiDelimiter;
  /* 0x0050 */ unsigned short m_ccDelimiter;
  /* 0x0052 */ unsigned short m_cbAnsiDelimiter;
  /* 0x0054 */ unsigned long m_fHashValueValid : 1; /* bit position: 0 */
  /* 0x0058 */ unsigned long m_dwHashValue;
  /* 0x005c */ long Padding_416;
  /* 0x0060 */ class CMutexSem2 m_mxs;
}; /* size: 0x0090 */

typedef struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserve;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* OriginalMemberLayout;
  /* 0x0010 */ const void* OriginalPointerLayout;
  /* 0x0018 */ const void* PointerLayout;
} NDR64_BOGUS_STRUCTURE_HEADER_FORMAT, *PNDR64_BOGUS_STRUCTURE_HEADER_FORMAT; /* size: 0x0020 */

typedef struct _NDR64_SIMPLE_REGION_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short RegionSize;
  /* 0x0004 */ unsigned int Reserved;
} NDR64_SIMPLE_REGION_FORMAT, *PNDR64_SIMPLE_REGION_FORMAT; /* size: 0x0008 */

typedef struct _NDR64_EMBEDDED_COMPLEX_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserve1;
  /* 0x0002 */ unsigned short Reserve2;
  /* 0x0004 */ long Padding_417;
  /* 0x0008 */ const void* Type;
} NDR64_EMBEDDED_COMPLEX_FORMAT, *PNDR64_EMBEDDED_COMPLEX_FORMAT; /* size: 0x0010 */

typedef struct _NDR64_SIMPLE_MEMBER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserved1;
  /* 0x0002 */ unsigned short Reserved2;
  /* 0x0004 */ unsigned int Reserved3;
} NDR64_SIMPLE_MEMBER_FORMAT, *PNDR64_SIMPLE_MEMBER_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag103_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_REGION_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag103_t, *P_midl_frag103_t; /* size: 0x0040 */

typedef struct _IMAGEHLP_SYMBOLW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_418;
  /* 0x0008 */ unsigned __int64 Address;
  /* 0x0010 */ unsigned long Size;
  /* 0x0014 */ unsigned long Flags;
  /* 0x0018 */ unsigned long MaxNameLength;
  /* 0x001c */ wchar_t Name[1];
  /* 0x001e */ char __PADDING__[2];
} IMAGEHLP_SYMBOLW64, *PIMAGEHLP_SYMBOLW64; /* size: 0x0020 */

typedef struct _IMAGEHLP_SYMBOLW64_PACKAGE
{
  /* 0x0000 */ struct _IMAGEHLP_SYMBOLW64 sym;
  /* 0x0020 */ wchar_t name[2001];
  /* 0x0fc2 */ char __PADDING__[6];
} IMAGEHLP_SYMBOLW64_PACKAGE, *PIMAGEHLP_SYMBOLW64_PACKAGE; /* size: 0x0fc8 */

struct tagEMRSETDIBITSTODEVICE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long xSrc;
  /* 0x0024 */ long ySrc;
  /* 0x0028 */ long cxSrc;
  /* 0x002c */ long cySrc;
  /* 0x0030 */ unsigned long offBmiSrc;
  /* 0x0034 */ unsigned long cbBmiSrc;
  /* 0x0038 */ unsigned long offBitsSrc;
  /* 0x003c */ unsigned long cbBitsSrc;
  /* 0x0040 */ unsigned long iUsageSrc;
  /* 0x0044 */ unsigned long iStartScan;
  /* 0x0048 */ unsigned long cScans;
}; /* size: 0x004c */

enum OPERATION_MODE
{
  OM_PREPARING = 1,
  OM_RUNNING = 2,
  OM_INDETERMINATE = 3,
  OM_INTERRUPTED = 4,
};

enum SYNCMGR_PRESENTER_NEXT_STEP
{
  SYNCMGR_PNS_CONTINUE = 0,
  SYNCMGR_PNS_DEFAULT = 1,
  SYNCMGR_PNS_CANCEL = 2,
};

struct ISoftDistExt
{
}; /* size: 0x0008 */

typedef struct _FILE_NAMES_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NAMES_INFORMATION, *PFILE_NAMES_INFORMATION; /* size: 0x0010 */

typedef struct _CRYPTNET_URL_CACHE_FLUSH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwExemptSeconds;
  /* 0x0008 */ struct _FILETIME ExpireTime;
} CRYPTNET_URL_CACHE_FLUSH_INFO, *PCRYPTNET_URL_CACHE_FLUSH_INFO; /* size: 0x0010 */

enum EDGEUI_COMPONENT
{
  EUICMP_UNKNOWN = -1,
  EUICMP_SWITCHER = 0,
  EUICMP_CHARMSBAR = 1,
  EUICMP_APPBAR = 2,
  EUICMP_TOTALCOUNT = 3,
};

typedef struct _CERT_LOGOTYPE_DATA
{
  /* 0x0000 */ unsigned long cLogotypeImage;
  /* 0x0004 */ long Padding_419;
  /* 0x0008 */ struct _CERT_LOGOTYPE_IMAGE* rgLogotypeImage;
  /* 0x0010 */ unsigned long cLogotypeAudio;
  /* 0x0014 */ long Padding_420;
  /* 0x0018 */ struct _CERT_LOGOTYPE_AUDIO* rgLogotypeAudio;
} CERT_LOGOTYPE_DATA, *PCERT_LOGOTYPE_DATA; /* size: 0x0020 */

typedef union _CPU_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned int VendorId[3];
      /* 0x000c */ unsigned int VersionInformation;
      /* 0x0010 */ unsigned int FeatureInformation;
      /* 0x0014 */ unsigned int AMDExtendedCpuFeatures;
    } /* size: 0x0018 */ X86CpuInfo;
    struct
    {
      /* 0x0000 */ unsigned __int64 ProcessorFeatures[2];
    } /* size: 0x0010 */ OtherCpuInfo;
  }; /* size: 0x0018 */
} CPU_INFORMATION, *PCPU_INFORMATION; /* size: 0x0018 */

typedef struct _MINIDUMP_SYSTEM_INFO
{
  /* 0x0000 */ unsigned short ProcessorArchitecture;
  /* 0x0002 */ unsigned short ProcessorLevel;
  /* 0x0004 */ unsigned short ProcessorRevision;
  union
  {
    /* 0x0006 */ unsigned short Reserved0;
    struct
    {
      /* 0x0006 */ unsigned char NumberOfProcessors;
      /* 0x0007 */ unsigned char ProductType;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x0008 */ unsigned int MajorVersion;
  /* 0x000c */ unsigned int MinorVersion;
  /* 0x0010 */ unsigned int BuildNumber;
  /* 0x0014 */ unsigned int PlatformId;
  /* 0x0018 */ unsigned long CSDVersionRva;
  union
  {
    /* 0x001c */ unsigned int Reserved1;
    struct
    {
      /* 0x001c */ unsigned short SuiteMask;
      /* 0x001e */ unsigned short Reserved2;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0020 */ union _CPU_INFORMATION Cpu;
} MINIDUMP_SYSTEM_INFO, *PMINIDUMP_SYSTEM_INFO; /* size: 0x0038 */

enum TASK_FLOW_ID
{
  TFID_ADD_USER = 0,
  TFID_CONNECT_LOCAL_USER = 1,
  TFID_CONNECT_DOMAIN_USER = 2,
  TFID_DISCONNECT_USER = 3,
  TFID_DISCONNECT_DOMAIN_USER = 4,
  TFID_CHANGE_LOCAL_PASSWORD = 5,
  TFID_CHANGE_ONLINE_PASSWORD = 6,
  TFID_COMPLETEACCOUNT = 7,
  TFID_TASKFLOW_MAX = 8,
};

typedef struct _CMSG_KEY_TRANS_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRecipientIndex;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ long __PADDING__[1];
} CMSG_KEY_TRANS_ENCRYPT_INFO, *PCMSG_KEY_TRANS_ENCRYPT_INFO; /* size: 0x0038 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;

typedef struct _CRYPT_CREDENTIALS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_421;
  /* 0x0008 */ const char* pszCredentialsOid;
  /* 0x0010 */ void* pvCredentials;
} CRYPT_CREDENTIALS, *PCRYPT_CREDENTIALS; /* size: 0x0018 */

enum GUTTER_LOCATION
{
  GL_LEFT = 0,
  GL_RIGHT = 1,
};

struct IReplaceClassInfo
{
}; /* size: 0x0008 */

typedef struct _SAFER_IDENTIFICATION_HEADER
{
  /* 0x0000 */ enum _SAFER_IDENTIFICATION_TYPES dwIdentificationType;
  /* 0x0004 */ unsigned long cbStructSize;
  /* 0x0008 */ struct _GUID IdentificationGuid;
  /* 0x0018 */ struct _FILETIME lastModified;
} SAFER_IDENTIFICATION_HEADER, *PSAFER_IDENTIFICATION_HEADER; /* size: 0x0020 */

typedef struct _SAFER_PATHNAME_IDENTIFICATION
{
  /* 0x0000 */ struct _SAFER_IDENTIFICATION_HEADER header;
  /* 0x0020 */ wchar_t Description[256];
  /* 0x0220 */ wchar_t* ImageName;
  /* 0x0228 */ unsigned long dwSaferFlags;
  /* 0x022c */ long __PADDING__[1];
} SAFER_PATHNAME_IDENTIFICATION, *PSAFER_PATHNAME_IDENTIFICATION; /* size: 0x0230 */

typedef enum _tagSHARE_EVENT
{
  SHARE_EVT_ITEM_SHARED = 0,
  SHARE_EVT_ITEM_UNSHARED = 1,
  SHARE_EVT_ERR_ITEM_LOCATION = 2,
  SHARE_EVT_ERR_NO_WRITE_DAC = 3,
  SHARE_EVT_ERR_INHERITED_PERM = 4,
  SHARE_EVT_ERR_CORRUPTED_LIBRARY = 5,
  SHARE_EVT_ERR_EXCLUSION_FAILED = 6,
  SHARE_EVT_ERR_ROOTDRIVE = 7,
  SHARE_EVT_ERR_SYSTEM_LOCATION = 8,
  SHARE_EVT_ERR_FOLDER_UNAVAILABLE_SCOPE = 9,
  SHARE_EVT_WARN_PUBLISH_FAILED = 10,
  SHARE_EVT_WARN_UNPUBLISH_FAILED = 11,
  SHARE_EVT_WARN_UPDATE_FAILED = 12,
  SHARE_EVT_WARN_NOT_SUPPORTED_SCOPE = 13,
  SHARE_EVT_WARN_FILESYSTEM_ACLS_NOT_SUPPORTED = 14,
  SHARE_EVT_WARN_ITEM_FILTERED = 15,
} tagSHARE_EVENT, *PtagSHARE_EVENT;

typedef struct _MEMORY_WORKING_SET_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfEntries;
  /* 0x0008 */ struct _MEMORY_WORKING_SET_BLOCK WorkingSetInfo[1];
} MEMORY_WORKING_SET_INFORMATION, *PMEMORY_WORKING_SET_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Wrappers::Semaphore
{
}; /* size: 0x0010 */

enum IMMERSIVE_APPLICATION_GET_WINDOWS_FILTER
{
  IAGWF_ANY = 0,
  IAGWF_STRONGLY_NAMED = 1,
};

struct tagWTSSESSION_NOTIFICATION
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwSessionId;
}; /* size: 0x0008 */

class MIDEntry
{
  /* 0x0000 */ struct SStringHashNode _Node;
  /* 0x0020 */ unsigned __int64 _mid;
  /* 0x0028 */ unsigned long _cRefs;
  /* 0x002c */ unsigned long _dwFlags;
}; /* size: 0x0030 */

enum LINESCROLLERVALUE
{
  LSV_VIRT_ANCHOR_X = 0,
  LSV_VIRT_ANCHOR_Y = 1,
  LSV_VIRT_TARGET_X = 2,
  LSV_VIRT_TARGET_Y = 3,
};

typedef struct _RTL_BITMAP_RUN
{
  /* 0x0000 */ unsigned long StartingIndex;
  /* 0x0004 */ unsigned long NumberOfBits;
} RTL_BITMAP_RUN, *PRTL_BITMAP_RUN; /* size: 0x0008 */

typedef struct _SYSDBG_MSR
{
  /* 0x0000 */ unsigned long Msr;
  /* 0x0004 */ long Padding_422;
  /* 0x0008 */ unsigned __int64 Data;
} SYSDBG_MSR, *PSYSDBG_MSR; /* size: 0x0010 */

class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<14>,0,0,0>
{
  /* 0x0000 */ long Padding_423[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

enum SELECTIONMANAGERVALUE
{
  SMV_ITEMSELECTIONSTATES_REALIZED = 0,
  SMV_ITEMSELECTIONSTATES_UNREALIZED = 1,
  SMV_COLLECTIONSELECTIONSTATES_REALIZED = 2,
  SMV_COLLECTIONSELECTIONSTATES_UNREALIZED = 3,
  SMV_SELECTION = 4,
};

typedef enum _SHARE_ITEM_TYPE
{
  SIT_FILE = 0,
  SIT_FOLDER = 1,
  SIT_DRIVE = 2,
  SIT_LIBRARY = 3,
  SIT_UNSUPPORTED = 4,
} SHARE_ITEM_TYPE, *PSHARE_ITEM_TYPE;

typedef struct _NDR64_ARRAY_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasPointerInfo : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char HasElementInfo : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char IsMultiDimensional : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char IsArrayofStrings : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved2 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved4 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_ARRAY_FLAGS, *PNDR64_ARRAY_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_CONF_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int ElementSize;
  /* 0x0008 */ const void* ConfDescriptor;
} NDR64_CONF_ARRAY_HEADER_FORMAT, *PNDR64_CONF_ARRAY_HEADER_FORMAT; /* size: 0x0010 */

typedef struct _NDR64_POINTER_REPEAT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char SetCorrMark : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 7; /* bit position: 1 */
  }; /* bitfield */
} NDR64_POINTER_REPEAT_FLAGS, *PNDR64_POINTER_REPEAT_FLAGS; /* size: 0x0001 */

typedef struct _NDR64_REPEAT_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ struct _NDR64_POINTER_REPEAT_FLAGS Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Increment;
  /* 0x0008 */ unsigned int OffsetToArray;
  /* 0x000c */ unsigned int NumberOfPointers;
} NDR64_REPEAT_FORMAT, *PNDR64_REPEAT_FORMAT; /* size: 0x0010 */

typedef struct _NDR64_ARRAY_ELEMENT_INFO
{
  /* 0x0000 */ unsigned int ElementMemSize;
  /* 0x0004 */ long Padding_424;
  /* 0x0008 */ const void* Element;
} NDR64_ARRAY_ELEMENT_INFO, *PNDR64_ARRAY_ELEMENT_INFO; /* size: 0x0010 */

typedef struct __midl_frag85_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag85_t, *P_midl_frag85_t; /* size: 0x0050 */

typedef struct _FULL_PTR_XLAT_TABLES
{
  /* 0x0000 */ void* RefIdToPointer;
  /* 0x0008 */ void* PointerToRefId;
  /* 0x0010 */ unsigned long NextRefId;
  /* 0x0014 */ enum XLAT_SIDE XlatSide;
} FULL_PTR_XLAT_TABLES, *PFULL_PTR_XLAT_TABLES; /* size: 0x0018 */

enum SHARING_MENU_PRESENTATION_STATE
{
  PRESENTATION_STATE_UNKNOWN = 0,
  PRESENTATION_STATE_WORKGROUP = 1,
  PRESENTATION_STATE_HOMEGROUP = 2,
  PRESENTATION_STATE_DOMAIN = 3,
};

typedef struct _TIMER_SET_COALESCABLE_TIMER_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER DueTime;
  /* 0x0008 */ void* TimerApcRoutine /* function */;
  /* 0x0010 */ void* TimerContext;
  /* 0x0018 */ struct _COUNTED_REASON_CONTEXT* WakeContext;
  /* 0x0020 */ unsigned long Period;
  /* 0x0024 */ unsigned long TolerableDelay;
  /* 0x0028 */ unsigned char* PreviousState;
} TIMER_SET_COALESCABLE_TIMER_INFO, *PTIMER_SET_COALESCABLE_TIMER_INFO; /* size: 0x0030 */

typedef struct _RPC_SECURITY_QOS_V2_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_425;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
} RPC_SECURITY_QOS_V2_W, *PRPC_SECURITY_QOS_V2_W; /* size: 0x0020 */

enum IMM_APP_ARRANGEMENT
{
  IAA_FULLSCREEN = 0,
  IAA_SNAPPED_LEFT = 1,
  IAA_SNAPPED_RIGHT = 2,
  IAA_PORTRAIT = 3,
};

struct IWeakReference
{
}; /* size: 0x0008 */

typedef struct _MEMORY_BASIC_INFORMATION32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionSize;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Protect;
  /* 0x0018 */ unsigned long Type;
} MEMORY_BASIC_INFORMATION32, *PMEMORY_BASIC_INFORMATION32; /* size: 0x001c */

enum tagTASKTYPE
{
  NOTASKS = 0,
  SPECIALPICTURETASKS = 1,
  SPECIALMUSICTASKS = 2,
  SPECIALDOCUMENTTASKS = 3,
  SPECIALVIDEOTASKS = 4,
  SPECIALGENERICTASKS = 5,
  VIEWCONTROLTASKS = 6,
  COMMONFILEDIALOGTASKS = 7,
};

typedef struct _SERVICE_FAILURE_ACTIONSW
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ long Padding_426;
  /* 0x0008 */ wchar_t* lpRebootMsg;
  /* 0x0010 */ wchar_t* lpCommand;
  /* 0x0018 */ unsigned long cActions;
  /* 0x001c */ long Padding_427;
  /* 0x0020 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSW, *PSERVICE_FAILURE_ACTIONSW; /* size: 0x0028 */

enum PLM_PACKAGE_STATE
{
  PPS_UNKNOWN = 0,
  PPS_ACTIVE = 1,
  PPS_SUSPENDING = 2,
  PPS_SUSPENDED = 3,
  PPS_TERMINATED_BY_SYSTEM = 4,
  PPS_TERMINATED_BY_USER = 5,
};

typedef struct _PLUGPLAY_CONTROL_INTERFACE_LIST_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ wchar_t* InterfaceList;
  /* 0x0020 */ unsigned long InterfaceListSize;
  /* 0x0024 */ unsigned long Flags;
} PLUGPLAY_CONTROL_INTERFACE_LIST_DATA, *PPLUGPLAY_CONTROL_INTERFACE_LIST_DATA; /* size: 0x0028 */

struct Windows::Rtl::IRtlFormattableObject
{
}; /* size: 0x0008 */

struct IGetProcessInfoInternal
{
}; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_INSTALL_DATA
{
  /* 0x0000 */ unsigned long BufferLength;
  /* 0x0004 */ long Padding_428;
  /* 0x0008 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_INSTALL_DATA, *PPLUGPLAY_CONTROL_INSTALL_DATA; /* size: 0x0010 */

typedef struct _PRINTER_INFO_2A
{
  /* 0x0000 */ char* pServerName;
  /* 0x0008 */ char* pPrinterName;
  /* 0x0010 */ char* pShareName;
  /* 0x0018 */ char* pPortName;
  /* 0x0020 */ char* pDriverName;
  /* 0x0028 */ char* pComment;
  /* 0x0030 */ char* pLocation;
  /* 0x0038 */ struct _devicemodeA* pDevMode;
  /* 0x0040 */ char* pSepFile;
  /* 0x0048 */ char* pPrintProcessor;
  /* 0x0050 */ char* pDatatype;
  /* 0x0058 */ char* pParameters;
  /* 0x0060 */ void* pSecurityDescriptor;
  /* 0x0068 */ unsigned long Attributes;
  /* 0x006c */ unsigned long Priority;
  /* 0x0070 */ unsigned long DefaultPriority;
  /* 0x0074 */ unsigned long StartTime;
  /* 0x0078 */ unsigned long UntilTime;
  /* 0x007c */ unsigned long Status;
  /* 0x0080 */ unsigned long cJobs;
  /* 0x0084 */ unsigned long AveragePPM;
} PRINTER_INFO_2A, *PPRINTER_INFO_2A; /* size: 0x0088 */

enum IMM_SYSTEM_MODE
{
  ISM_NONE = -1,
  ISM_DESKTOP = 0,
  ISM_IMMERSIVE = 1,
};

enum SYNC_STREAM_COMPLETION_MODE
{
  SSCM_DEFAULT = 0,
  SSCM_TRUNCATE = 1,
};

typedef struct _FILE_SET_DEFECT_MGMT_BUFFER
{
  /* 0x0000 */ unsigned char Disable;
} FILE_SET_DEFECT_MGMT_BUFFER, *PFILE_SET_DEFECT_MGMT_BUFFER; /* size: 0x0001 */

typedef struct _SYSTEM_CALL_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long TotalCalls;
  /* 0x0008 */ union _LARGE_INTEGER TimeOfCalls[1];
} SYSTEM_CALL_TIME_INFORMATION, *PSYSTEM_CALL_TIME_INFORMATION; /* size: 0x0010 */

struct tagRGBTRIPLE
{
  /* 0x0000 */ unsigned char rgbtBlue;
  /* 0x0001 */ unsigned char rgbtGreen;
  /* 0x0002 */ unsigned char rgbtRed;
}; /* size: 0x0003 */

struct IMAGE_AUX_SYMBOL_TOKEN_DEF
{
  /* 0x0000 */ unsigned char bAuxType;
  /* 0x0001 */ unsigned char bReserved;
  /* 0x0002 */ unsigned long SymbolTableIndex;
  /* 0x0006 */ unsigned char rgbReserved[12];
}; /* size: 0x0012 */

typedef union _IMAGE_AUX_SYMBOL_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long WeakDefaultSymIndex;
      /* 0x0004 */ unsigned long WeakSearchType;
      /* 0x0008 */ unsigned char rgbReserved[12];
    } /* size: 0x0014 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[20];
    } /* size: 0x0014 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ unsigned char bReserved;
      /* 0x0010 */ short HighNumber;
      /* 0x0012 */ unsigned char rgbReserved[2];
    } /* size: 0x0014 */ Section;
    struct
    {
      /* 0x0000 */ struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
      /* 0x0012 */ unsigned char rgbReserved[2];
    }; /* size: 0x0014 */
    struct
    {
      /* 0x0000 */ unsigned long crc;
      /* 0x0004 */ unsigned char rgbReserved[16];
    } /* size: 0x0014 */ CRC;
  }; /* size: 0x0014 */
} IMAGE_AUX_SYMBOL_EX, *PIMAGE_AUX_SYMBOL_EX; /* size: 0x0014 */

struct NCRYPT_ALLOC_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_429;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
}; /* size: 0x0018 */

enum CONFLICT_FILTER
{
  CF_NO_FILTER = 0,
  CF_DIFFERENT_TIME_SIZE = 1,
};

struct IScmReplyInfo
{
}; /* size: 0x0008 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_WAKE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NotificationChannel;
  /* 0x0008 */ unsigned __int64 WakeCounters[4];
} JOBOBJECT_WAKE_INFORMATION, *PJOBOBJECT_WAKE_INFORMATION; /* size: 0x0028 */

typedef struct _DISK_HISTOGRAM
{
  /* 0x0000 */ union _LARGE_INTEGER DiskSize;
  /* 0x0008 */ union _LARGE_INTEGER Start;
  /* 0x0010 */ union _LARGE_INTEGER End;
  /* 0x0018 */ union _LARGE_INTEGER Average;
  /* 0x0020 */ union _LARGE_INTEGER AverageRead;
  /* 0x0028 */ union _LARGE_INTEGER AverageWrite;
  /* 0x0030 */ unsigned long Granularity;
  /* 0x0034 */ unsigned long Size;
  /* 0x0038 */ unsigned long ReadCount;
  /* 0x003c */ unsigned long WriteCount;
  /* 0x0040 */ struct _HISTOGRAM_BUCKET* Histogram;
} DISK_HISTOGRAM, *PDISK_HISTOGRAM; /* size: 0x0048 */

typedef struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT
{
  /* 0x0000 */ unsigned long UnusedLong;
  /* 0x0004 */ long Padding_430;
  /* 0x0008 */ void* UnusedPointer[25];
} RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT, *PRTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT; /* size: 0x00d0 */

typedef struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_431;
  /* 0x0008 */ void* VerifierEngLogStackTrace /* function */;
  /* 0x0010 */ void* VerifierEngReleaseStackTrace /* function */;
  /* 0x0018 */ void* VerifierEngGetStackTraceAddressEx /* function */;
  /* 0x0020 */ struct _RTL_VERIFIER_PROVIDER_HELPER_TABLE::_RTL_VERIFIER_PROVIDER_HELPER_TABLE_UNUSED_STRUCT UnusedStruct;
  /* 0x00f0 */ void* VerifierEngSetHeapPathCaller /* function */;
} RTL_VERIFIER_PROVIDER_HELPER_TABLE, *PRTL_VERIFIER_PROVIDER_HELPER_TABLE; /* size: 0x00f8 */

enum IMM_APP_LOCATION
{
  IAL_FULLSCREEN = 0,
  IAL_FILLED_LEFT = 1,
  IAL_FILLED_RIGHT = 2,
  IAL_SNAPPED_LEFT = 3,
  IAL_SNAPPED_RIGHT = 4,
  IAL_PORTRAIT = 5,
};

enum tagPROPCTL_FLAGS
{
  PCF_NONE = 0,
  PCF_VISIBLE = 1,
  PCF_READONLY = 2,
  PCF_USEACTIVEBORDERS = 4,
  PCF_USEEDITINVITATION = 8,
  PCF_VERTPOS_TOP = 0,
  PCF_VERTPOS_CENTER = 16,
  PCF_VERTPOS_BOTTOM = 32,
  PCF_VERTPOS_MASK = 48,
  PCF_HORZPOS_LEFT = 0,
  PCF_HORZPOS_CENTER = 64,
  PCF_HORZPOS_RIGHT = 128,
  PCF_HORZPOS_MASK = 192,
  PCF_RTLREADING = 512,
  PCF_CAN_WRAP_TEXT = 1024,
  PCF_POS_MASK = 1776,
  PCF_NORMAL_TEXT = 0,
  PCF_SHADOW_TEXT = 256,
  PCF_FONT_MASK = 256,
  PCF_FLAGS_MASK = 2047,
};

typedef struct _CONTEXT_EX
{
  /* 0x0000 */ struct _CONTEXT_CHUNK All;
  /* 0x0008 */ struct _CONTEXT_CHUNK Legacy;
  /* 0x0010 */ struct _CONTEXT_CHUNK XState;
} CONTEXT_EX, *PCONTEXT_EX; /* size: 0x0018 */

struct IOleContainer
{
}; /* size: 0x0008 */

struct IFileLockBytes
{
}; /* size: 0x0008 */

typedef struct _STORAGE_PREDICT_FAILURE
{
  /* 0x0000 */ unsigned long PredictFailure;
  /* 0x0004 */ unsigned char VendorSpecific[512];
} STORAGE_PREDICT_FAILURE, *PSTORAGE_PREDICT_FAILURE; /* size: 0x0204 */

enum IMMERSIVE_HOT_KEY_ID
{
  IHKID_DESKTOP = 0,
  IHKID_MINIMIZEALL = 1,
  IHKID_SHAKE = 2,
  IHKID_PRIORPEARL = 3,
  IHKID_NEXTPEARL = 4,
  IHKID_SETTINGSCHARM = 5,
  IHKID_SETTINGSCHARM_ALTERNATE = 6,
  IHKID_CHARMBAR = 7,
  IHKID_APPBAR = 8,
  IHKID_SLIDEGUTTERRIGHT = 9,
  IHKID_SLIDEGUTTERLEFT = 10,
  IHKID_SWITCHLIST = 11,
  IHKID_SWITCHLIST_STICKY = 12,
  IHKID_SWITCHLIST_REVERSE = 13,
  IHKID_SWITCHLIST_STICKY_REVERSE = 14,
  IHKID_SHARECHARM = 15,
  IHKID_DEVICESCHARM = 16,
  IHKID_MOVEFOREGROUND = 17,
  IHKID_SCREENSHOT_KEYBOARD = 18,
  IHKID_SCREENSHOT_FKEY = 19,
  IHKID_LAUNCHERTIPMENU = 20,
  IHKID_BACKSTACK_SWITCH = 21,
  IHKID_CHARMBAR_ALTERNATE = 22,
  IHKID_APPBAR_ALTERNATE = 23,
  IHKID_SHARECHARM_ALTERNATE = 24,
  IHKID_DEVICESCHARM_ALTERNATE = 25,
  IHKID_SLIDEGUTTERRIGHT_ALTERNATE = 26,
  IHKID_SLIDEGUTTERLEFT_ALTERNATE = 27,
  IHKID_MAX = 28,
};

struct tagTOUCH_HIT_TESTING_INPUT
{
  /* 0x0000 */ unsigned int pointerId;
  /* 0x0004 */ struct tagPOINT point;
  /* 0x000c */ struct tagRECT boundingBox;
  /* 0x001c */ struct tagRECT nonOccludedBoundingBox;
  /* 0x002c */ unsigned int orientation;
}; /* size: 0x0030 */

struct KEY_PID_ARRAY
{
  /* 0x0000 */ void* PID;
  /* 0x0008 */ struct _UNICODE_STRING KeyName;
}; /* size: 0x0018 */

enum tagUAEVENT
{
  UAE_LAUNCH = 0,
  UAE_SWITCH = 1,
  UAE_TIME = 2,
  UAE_SESSION = 3,
  UAE_EXCLUDEAPP = 4,
};

typedef struct _PROCESSOR_IDLE_STATES
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Revision;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct _PROCESSOR_IDLE_STATE State[1];
} PROCESSOR_IDLE_STATES, *PPROCESSOR_IDLE_STATES; /* size: 0x0038 */

enum tagINTERVAL_LIMIT_KIND
{
  ILK_EXPLICIT_INCLUDED = 0,
  ILK_EXPLICIT_EXCLUDED = 1,
  ILK_NEGATIVE_INFINITY = 2,
  ILK_POSITIVE_INFINITY = 3,
};

struct CO_MTA_USAGE_COOKIE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_POOLTAG
{
  union
  {
    /* 0x0000 */ unsigned char Tag[4];
    /* 0x0000 */ unsigned long TagUlong;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long PagedAllocs;
  /* 0x0008 */ unsigned long PagedFrees;
  /* 0x000c */ long Padding_432;
  /* 0x0010 */ unsigned __int64 PagedUsed;
  /* 0x0018 */ unsigned long NonPagedAllocs;
  /* 0x001c */ unsigned long NonPagedFrees;
  /* 0x0020 */ unsigned __int64 NonPagedUsed;
} SYSTEM_POOLTAG, *PSYSTEM_POOLTAG; /* size: 0x0028 */

typedef struct _SYSTEM_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_433;
  /* 0x0008 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_POOLTAG_INFORMATION, *PSYSTEM_POOLTAG_INFORMATION; /* size: 0x0030 */

typedef struct _GRADIENT_TRIANGLE
{
  /* 0x0000 */ unsigned long Vertex1;
  /* 0x0004 */ unsigned long Vertex2;
  /* 0x0008 */ unsigned long Vertex3;
} GRADIENT_TRIANGLE, *PGRADIENT_TRIANGLE; /* size: 0x000c */

struct in_addr
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ unsigned char s_b1;
        /* 0x0001 */ unsigned char s_b2;
        /* 0x0002 */ unsigned char s_b3;
        /* 0x0003 */ unsigned char s_b4;
      } /* size: 0x0004 */ S_un_b;
      struct
      {
        /* 0x0000 */ unsigned short s_w1;
        /* 0x0002 */ unsigned short s_w2;
      } /* size: 0x0004 */ S_un_w;
      /* 0x0000 */ unsigned long S_addr;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ S_un;
}; /* size: 0x0004 */

struct ip_mreq
{
  /* 0x0000 */ struct in_addr imr_multiaddr;
  /* 0x0004 */ struct in_addr imr_interface;
}; /* size: 0x0008 */

enum IMMAPP_SETTHUMBNAIL_PREVIEW_STATE
{
  IMMSPS_VISIBLE = 0,
  IMMSPS_HIDDEN = 1,
};

typedef struct _PS_CPU_QUOTA_QUERY_ENTRY
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned long Weight;
} PS_CPU_QUOTA_QUERY_ENTRY, *PPS_CPU_QUOTA_QUERY_ENTRY; /* size: 0x0008 */

typedef struct _CERT_TRUST_STATUS
{
  /* 0x0000 */ unsigned long dwErrorStatus;
  /* 0x0004 */ unsigned long dwInfoStatus;
} CERT_TRUST_STATUS, *PCERT_TRUST_STATUS; /* size: 0x0008 */

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRootProgramQualifierFlags;
} EV_EXTRA_CERT_CHAIN_POLICY_PARA, *PEV_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0008 */

enum SYNCMGR_EVENT_LEVEL
{
  SYNCMGR_EL_INFORMATION = 1,
  SYNCMGR_EL_WARNING = 2,
  SYNCMGR_EL_ERROR = 3,
  SYNCMGR_EL_MAX = 3,
};

struct IOleInPlaceObject
{
}; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_PARSE_ERROR
{
  SQPE_NONE = 0,
  SQPE_EXTRA_OPENING_PARENTHESIS = 1,
  SQPE_EXTRA_CLOSING_PARENTHESIS = 2,
  SQPE_IGNORED_MODIFIER = 3,
  SQPE_IGNORED_CONNECTOR = 4,
  SQPE_IGNORED_KEYWORD = 5,
  SQPE_UNHANDLED = 6,
};

typedef struct _FILE_IS_REMOTE_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned char IsRemote;
} FILE_IS_REMOTE_DEVICE_INFORMATION, *PFILE_IS_REMOTE_DEVICE_INFORMATION; /* size: 0x0001 */

struct SUUIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct _GUID key;
}; /* size: 0x0020 */

struct SOIDRegistration
{
  /* 0x0000 */ struct SUUIDHashNode Node;
  /* 0x0020 */ unsigned short cRefs;
  /* 0x0022 */ unsigned short flags;
  /* 0x0024 */ long Padding_434;
  /* 0x0028 */ unsigned __int64 mid;
  /* 0x0030 */ unsigned __int64 oxid;
  /* 0x0038 */ struct SOIDRegistration* pPrevList;
  /* 0x0040 */ struct SOIDRegistration* pNextList;
  /* 0x0048 */ class CRefCache* pRefCache;
}; /* size: 0x0050 */

class CRefCache
{
  /* 0x0000 */ unsigned long _cRefs;
  /* 0x0004 */ unsigned long _cStrongItfs;
  /* 0x0008 */ unsigned long _cWeakItfs;
  /* 0x000c */ unsigned long _cTableStrong;
  /* 0x0010 */ unsigned long _cIRCs;
  /* 0x0014 */ long Padding_435;
  /* 0x0018 */ struct IRCEntry* _pIRCList;
  /* 0x0020 */ struct SOIDRegistration _soidReg;
}; /* size: 0x0070 */

class IMessageParam
{
  /* 0x0000 */ long Padding_436[2];
  /* 0x0008 */ class IMessageParam* _pNextMessage;
}; /* size: 0x0010 */

struct tagAXESLISTA
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOA axlAxisInfo[16];
}; /* size: 0x0188 */

struct tagENUMTEXTMETRICA
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXA etmNewTextMetricEx;
  /* 0x0060 */ struct tagAXESLISTA etmAxesList;
}; /* size: 0x01e8 */

struct OPENCARDNAMEW
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_437;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ unsigned __int64 hSCardContext;
  /* 0x0018 */ wchar_t* lpstrGroupNames;
  /* 0x0020 */ unsigned long nMaxGroupNames;
  /* 0x0024 */ long Padding_438;
  /* 0x0028 */ wchar_t* lpstrCardNames;
  /* 0x0030 */ unsigned long nMaxCardNames;
  /* 0x0034 */ long Padding_439;
  /* 0x0038 */ const struct _GUID* rgguidInterfaces;
  /* 0x0040 */ unsigned long cguidInterfaces;
  /* 0x0044 */ long Padding_440;
  /* 0x0048 */ wchar_t* lpstrRdr;
  /* 0x0050 */ unsigned long nMaxRdr;
  /* 0x0054 */ long Padding_441;
  /* 0x0058 */ wchar_t* lpstrCard;
  /* 0x0060 */ unsigned long nMaxCard;
  /* 0x0064 */ long Padding_442;
  /* 0x0068 */ const wchar_t* lpstrTitle;
  /* 0x0070 */ unsigned long dwFlags;
  /* 0x0074 */ long Padding_443;
  /* 0x0078 */ void* pvUserData;
  /* 0x0080 */ unsigned long dwShareMode;
  /* 0x0084 */ unsigned long dwPreferredProtocols;
  /* 0x0088 */ unsigned long dwActiveProtocol;
  /* 0x008c */ long Padding_444;
  /* 0x0090 */ void* lpfnConnect /* function */;
  /* 0x0098 */ void* lpfnCheck /* function */;
  /* 0x00a0 */ void* lpfnDisconnect /* function */;
  /* 0x00a8 */ unsigned __int64 hCardHandle;
}; /* size: 0x00b0 */

enum tagLC_ITEM_SET_ORDER
{
  LCISO_DEFAULT = 0,
  LCISO_FOCUSEDFIRST = 1,
  LCISO_VISIBLEORDER = 2,
};

struct IChannelHook
{
}; /* size: 0x0008 */

typedef struct __midl_frag66_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag66_t, *P_midl_frag66_t; /* size: 0x0028 */

enum AWSTYPE
{
  AWS_SCURVE = 0,
  AWS_LINEAR = 1,
};

struct IPipeLong
{
}; /* size: 0x0008 */

typedef struct _XMIT_ROUTINE_QUINTUPLE
{
  /* 0x0000 */ void* pfnTranslateToXmit /* function */;
  /* 0x0008 */ void* pfnTranslateFromXmit /* function */;
  /* 0x0010 */ void* pfnFreeXmit /* function */;
  /* 0x0018 */ void* pfnFreeInst /* function */;
} XMIT_ROUTINE_QUINTUPLE, *PXMIT_ROUTINE_QUINTUPLE; /* size: 0x0020 */

enum tagBPASCODE
{
  BPAS_START = 0,
  BPAS_INDETERMINATE = 1,
  BPAS_STOP = 2,
};

typedef struct _CLAIM_SECURITY_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long AttributeCount;
  union
  {
    /* 0x0008 */ struct _CLAIM_SECURITY_ATTRIBUTE_V1* pAttributeV1;
  } /* size: 0x0008 */ Attribute;
} CLAIM_SECURITY_ATTRIBUTES_INFORMATION, *PCLAIM_SECURITY_ATTRIBUTES_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_ID_128
{
  /* 0x0000 */ unsigned char Identifier[16];
} FILE_ID_128, *PFILE_ID_128; /* size: 0x0010 */

typedef struct _FILE_ID_EXTD_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ unsigned long ReparsePointTag;
  /* 0x0048 */ struct _FILE_ID_128 FileId;
  /* 0x0058 */ wchar_t FileName[1];
  /* 0x005a */ char __PADDING__[6];
} FILE_ID_EXTD_DIR_INFO, *PFILE_ID_EXTD_DIR_INFO; /* size: 0x0060 */

typedef struct _CERT_CHAIN_ELEMENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_445;
  /* 0x0008 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0010 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x0018 */ struct _CERT_REVOCATION_INFO* pRevocationInfo;
  /* 0x0020 */ struct _CTL_USAGE* pIssuanceUsage;
  /* 0x0028 */ struct _CTL_USAGE* pApplicationUsage;
  /* 0x0030 */ const wchar_t* pwszExtendedErrorInfo;
} CERT_CHAIN_ELEMENT, *PCERT_CHAIN_ELEMENT; /* size: 0x0038 */

enum TRYHARDERSCOPES
{
  THS_SPECIFIC_LIBRARY = 0,
  THS_ALL_LIBRARIES = 1,
  THS_ALL_USER_LIBRARIES = 2,
  THS_COMPUTER = 3,
  THS_CUSTOM_CANCEL = 4,
  THS_CUSTOM_NAVIGATE = 5,
  THS_INTERNET = 6,
  THS_GP_LIBRARY = 7,
  THS_GP_URL = 8,
  THS_SUBFOLDER = 9,
  THS_FILE_CONTENTS = 10,
  THS_UNUSED = 11,
  THS_OTHER = 12,
  THS_HISTORYVAULT = 13,
};

struct HRAWINPUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IWaitMultiple
{
}; /* size: 0x0008 */

enum EDGEUI_CORNER
{
  EUICNR_UNKNOWN = -1,
  EUICNR_TOPLEFT = 0,
  EUICNR_TOPRIGHT = 1,
  EUICNR_BOTTOMLEFT = 2,
  EUICNR_BOTTOMRIGHT = 3,
};

typedef enum _TAG_UNNAMED_44
{
  Value = 1,
} TAG_UNNAMED_44, *PTAG_UNNAMED_44;

typedef struct _RTL_VERIFIER_ALL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned __int64 OffsetPageHeapsInformation;
  /* 0x0010 */ unsigned __int64 OffsetRuntimeFlagsInformation;
  /* 0x0018 */ unsigned __int64 OffsetFaultInjectInformation;
} RTL_VERIFIER_ALL_INFORMATION, *PRTL_VERIFIER_ALL_INFORMATION; /* size: 0x0020 */

class CRtlSmartUcsEncoderTraits<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

enum DESTLISTTYPE
{
  DLT_PINNED = 0,
  DLT_RECENT = 1,
  DLT_FREQUENT = 2,
};

typedef struct _PROPSHEETHEADERW_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndParent;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszCaption;
  /* 0x0028 */ unsigned int nPages;
  /* 0x002c */ long Padding_446;
  union
  {
    /* 0x0030 */ unsigned int nStartPage;
    /* 0x0030 */ const wchar_t* pStartPage;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ const struct _PROPSHEETPAGEW* ppsp;
    /* 0x0038 */ struct _PSP** phpage;
  }; /* size: 0x0008 */
  /* 0x0040 */ void* pfnCallback /* function */;
  union
  {
    /* 0x0048 */ struct HBITMAP__* hbmWatermark;
    /* 0x0048 */ const wchar_t* pszbmWatermark;
  }; /* size: 0x0008 */
  /* 0x0050 */ struct HPALETTE__* hplWatermark;
  union
  {
    /* 0x0058 */ struct HBITMAP__* hbmHeader;
    /* 0x0058 */ const wchar_t* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETHEADERW_V2, *PPROPSHEETHEADERW_V2; /* size: 0x0060 */

struct _DSA;

enum IMMERSIVELAUNCHERCONTROL
{
  ILC_SUBTITLE = 0,
  ILC_USERTILE = 1,
  ILC_GRID = 2,
  ILC_MAX = 3,
};

typedef struct _MINIDUMP_EXCEPTION_INFORMATION64
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ unsigned __int64 ExceptionRecord;
  /* 0x000c */ unsigned __int64 ContextRecord;
  /* 0x0014 */ int ClientPointers;
} MINIDUMP_EXCEPTION_INFORMATION64, *PMINIDUMP_EXCEPTION_INFORMATION64; /* size: 0x0018 */

typedef struct _SYSTEM_PROCESSOR_IDLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 IdleTime;
  /* 0x0008 */ unsigned __int64 C1Time;
  /* 0x0010 */ unsigned __int64 C2Time;
  /* 0x0018 */ unsigned __int64 C3Time;
  /* 0x0020 */ unsigned long C1Transitions;
  /* 0x0024 */ unsigned long C2Transitions;
  /* 0x0028 */ unsigned long C3Transitions;
  /* 0x002c */ unsigned long Padding;
} SYSTEM_PROCESSOR_IDLE_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_INFORMATION; /* size: 0x0030 */

struct tagBIND_OPTS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long grfFlags;
  /* 0x0008 */ unsigned long grfMode;
  /* 0x000c */ unsigned long dwTickCountDeadline;
}; /* size: 0x0010 */

enum tagLC_ITEM_SET_TYPE
{
  LCIC_ALLITEMS = 0,
  LCIC_SELECTED = 1,
  LCIC_CHECKED = 2,
};

class CBaseCall
{
  /* 0x0000 */ unsigned int s_uCurrentCallTraceId;
}; /* size: 0x0008 */

enum SEARCHPANE_COUNT_TASK_TYPE
{
  SPCTT_APPS = 0,
  SPCTT_SETTINGS = 1,
  SPCTT_FILES = 2,
};

enum GRID_PRESENTATION_MODE
{
  GPM_INVALID = 0,
  GPM_START = 1,
  GPM_ALLAPPS = 2,
  GPM_SEARCH = 3,
};

struct IInstantiationInfo
{
}; /* size: 0x0008 */

struct tagPROPERTY_INFORMATION
{
  /* 0x0000 */ unsigned long pid;
  /* 0x0004 */ unsigned long cbprop;
  /* 0x0008 */ enum _PROPOP operation;
}; /* size: 0x000c */

enum COMMAND_SET
{
  CS_FIRST = 0,
  CS_SORTORDER = 0,
  CS_NAVPANE = 1,
  CS_PREVIEWPANE = 2,
  CS_SHOWHIDE = 3,
  CS_CLIPBOARD = 4,
  CS_VOLUMEADDREMOVE = 5,
  CS_LIBRARYADD = 6,
  CS_LEGACYBARSCHANGED = 7,
  CS_WORKOFFLINE = 8,
  CS_LAST = 9,
};

typedef enum _WOW64_SHARED_INFORMATION
{
  SharedNtdll32LdrInitializeThunk = 0,
  SharedNtdll32KiUserExceptionDispatcher = 1,
  SharedNtdll32KiUserApcDispatcher = 2,
  SharedNtdll32KiUserCallbackDispatcher = 3,
  SharedNtdll32LdrHotPatchRoutine = 4,
  SharedNtdll32ExpInterlockedPopEntrySListFault = 5,
  SharedNtdll32ExpInterlockedPopEntrySListResume = 6,
  SharedNtdll32ExpInterlockedPopEntrySListEnd = 7,
  SharedNtdll32RtlUserThreadStart = 8,
  SharedNtdll32pQueryProcessDebugInformationRemote = 9,
  SharedNtdll32EtwpNotificationThread = 10,
  SharedNtdll32BaseAddress = 11,
  SharedNtdll32RtlpWnfNotificationThread = 12,
  SharedNtdll32LdrSystemDllInitBlock = 13,
  Wow64SharedPageEntriesCount = 14,
} WOW64_SHARED_INFORMATION, *PWOW64_SHARED_INFORMATION;

struct IRpcStubBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Connect /* function */;
  /* 0x0020 */ void* Disconnect /* function */;
  /* 0x0028 */ void* Invoke /* function */;
  /* 0x0030 */ void* IsIIDSupported /* function */;
  /* 0x0038 */ void* CountRefs /* function */;
  /* 0x0040 */ void* DebugServerQueryInterface /* function */;
  /* 0x0048 */ void* DebugServerRelease /* function */;
}; /* size: 0x0050 */

enum TOUCHVIEW_SELECTION_MODE
{
  TSM_SINGLE = 0,
  TSM_MULTIPLE = 1,
};

typedef struct _FILE_LEVEL_TRIM_RANGE
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned __int64 Length;
} FILE_LEVEL_TRIM_RANGE, *PFILE_LEVEL_TRIM_RANGE; /* size: 0x0010 */

typedef struct _FILE_LEVEL_TRIM
{
  /* 0x0000 */ unsigned long Key;
  /* 0x0004 */ unsigned long NumRanges;
  /* 0x0008 */ struct _FILE_LEVEL_TRIM_RANGE Ranges[1];
} FILE_LEVEL_TRIM, *PFILE_LEVEL_TRIM; /* size: 0x0018 */

typedef struct _SYSTEM_VA_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 VirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualPeak;
  /* 0x0010 */ unsigned __int64 VirtualLimit;
  /* 0x0018 */ unsigned __int64 AllocationFailures;
} SYSTEM_VA_LIST_INFORMATION, *PSYSTEM_VA_LIST_INFORMATION; /* size: 0x0020 */

enum tagVIEWSETTINGACTION
{
  VSA_Extend = 0,
  VSA_Clone = 1,
  VSA_Disconnect = 2,
  VSA_Force = 3,
  VSA_Noopt = 4,
  VSA_Unforce = 5,
};

enum IMMERSIVELAUNCHEREVENTNOTIFICATION
{
  ILEN_FIRING = 0,
  ILEN_FIRED = 1,
  ILEN_MAX = 2,
};

enum tagQUERY_PARSER_MANAGER_OPTION
{
  QPMO_SCHEMA_BINARY_NAME = 0,
  QPMO_PRELOCALIZED_SCHEMA_BINARY_PATH = 1,
  QPMO_UNLOCALIZED_SCHEMA_BINARY_PATH = 2,
  QPMO_LOCALIZED_SCHEMA_BINARY_PATH = 3,
  QPMO_APPEND_LCID_TO_LOCALIZED_PATH = 4,
  QPMO_LOCALIZER_SUPPORT = 5,
};

typedef struct _IO_RESOURCE_REQUIREMENTS_LIST
{
  /* 0x0000 */ unsigned long ListSize;
  /* 0x0004 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0008 */ unsigned long BusNumber;
  /* 0x000c */ unsigned long SlotNumber;
  /* 0x0010 */ unsigned long Reserved[3];
  /* 0x001c */ unsigned long AlternativeLists;
  /* 0x0020 */ struct _IO_RESOURCE_LIST List[1];
} IO_RESOURCE_REQUIREMENTS_LIST, *PIO_RESOURCE_REQUIREMENTS_LIST; /* size: 0x0048 */

enum IMMERSIVELAUNCHERSCENARIONOTIFICATION
{
  ILSN_STARTING = 0,
  ILSN_STARTED = 1,
  ILSN_CANSTOP = 2,
  ILSN_STOPPING = 3,
  ILSN_STOPPED = 4,
  ILSN_MAX = 5,
};

struct tagDCOM_ENDPOINT
{
  /* 0x0000 */ wchar_t* wszProtSeq;
  /* 0x0008 */ wchar_t* wszPorts;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _BCRYPT_OAEP_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
  /* 0x0008 */ unsigned char* pbLabel;
  /* 0x0010 */ unsigned long cbLabel;
  /* 0x0014 */ long __PADDING__[1];
} BCRYPT_OAEP_PADDING_INFO, *PBCRYPT_OAEP_PADDING_INFO; /* size: 0x0018 */

struct tagOFNW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_447;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const wchar_t* lpstrFilter;
  /* 0x0020 */ wchar_t* lpstrCustomFilter;
  /* 0x0028 */ unsigned long nMaxCustFilter;
  /* 0x002c */ unsigned long nFilterIndex;
  /* 0x0030 */ wchar_t* lpstrFile;
  /* 0x0038 */ unsigned long nMaxFile;
  /* 0x003c */ long Padding_448;
  /* 0x0040 */ wchar_t* lpstrFileTitle;
  /* 0x0048 */ unsigned long nMaxFileTitle;
  /* 0x004c */ long Padding_449;
  /* 0x0050 */ const wchar_t* lpstrInitialDir;
  /* 0x0058 */ const wchar_t* lpstrTitle;
  /* 0x0060 */ unsigned long Flags;
  /* 0x0064 */ unsigned short nFileOffset;
  /* 0x0066 */ unsigned short nFileExtension;
  /* 0x0068 */ const wchar_t* lpstrDefExt;
  /* 0x0070 */ __int64 lCustData;
  /* 0x0078 */ void* lpfnHook /* function */;
  /* 0x0080 */ const wchar_t* lpTemplateName;
  /* 0x0088 */ void* pvReserved;
  /* 0x0090 */ unsigned long dwReserved;
  /* 0x0094 */ unsigned long FlagsEx;
}; /* size: 0x0098 */

enum CASE_REQUIREMENT
{
  CASE_REQUIREMENT_ANY = 0,
  CASE_REQUIREMENT_UPPER_IF_AQS = 1,
};

typedef struct __vc_attributes::propgetAttribute
{
} _vc_attributes::propgetAttribute, *P_vc_attributes::propgetAttribute; /* size: 0x0001 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned long RootIndexUsed;
  /* 0x000c */ long __PADDING__[1];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL; /* size: 0x0010 */

typedef struct _JOB_INFO_2W
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ long Padding_450;
  /* 0x0008 */ wchar_t* pPrinterName;
  /* 0x0010 */ wchar_t* pMachineName;
  /* 0x0018 */ wchar_t* pUserName;
  /* 0x0020 */ wchar_t* pDocument;
  /* 0x0028 */ wchar_t* pNotifyName;
  /* 0x0030 */ wchar_t* pDatatype;
  /* 0x0038 */ wchar_t* pPrintProcessor;
  /* 0x0040 */ wchar_t* pParameters;
  /* 0x0048 */ wchar_t* pDriverName;
  /* 0x0050 */ struct _devicemodeW* pDevMode;
  /* 0x0058 */ wchar_t* pStatus;
  /* 0x0060 */ void* pSecurityDescriptor;
  /* 0x0068 */ unsigned long Status;
  /* 0x006c */ unsigned long Priority;
  /* 0x0070 */ unsigned long Position;
  /* 0x0074 */ unsigned long StartTime;
  /* 0x0078 */ unsigned long UntilTime;
  /* 0x007c */ unsigned long TotalPages;
  /* 0x0080 */ unsigned long Size;
  /* 0x0084 */ struct _SYSTEMTIME Submitted;
  /* 0x0094 */ unsigned long Time;
  /* 0x0098 */ unsigned long PagesPrinted;
  /* 0x009c */ long __PADDING__[1];
} JOB_INFO_2W, *PJOB_INFO_2W; /* size: 0x00a0 */

enum GUTTER_SLIDE_LOCATION
{
  GSL_OFFSCREEN_LEFT = 0,
  GSL_LEFT = 1,
  GSL_RIGHT = 2,
  GSL_OFFSCREEN_RIGHT = 3,
};

typedef struct __vc_attributes::coclassAttribute
{
} _vc_attributes::coclassAttribute, *P_vc_attributes::coclassAttribute; /* size: 0x0001 */

typedef struct _SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_IDLE_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

struct tagSECURITYBINDING
{
  /* 0x0000 */ unsigned short wAuthnSvc;
  /* 0x0002 */ unsigned short wAuthzSvc;
  /* 0x0004 */ unsigned short aPrincName;
}; /* size: 0x0006 */

struct SNameHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ unsigned long dwHash;
  /* 0x0014 */ unsigned long cRef;
  /* 0x0018 */ struct _GUID ipid;
  /* 0x0028 */ struct tagSECURITYBINDING sName;
  /* 0x002e */ char __PADDING__[2];
}; /* size: 0x0030 */

enum ALREADYSTARTEDACTION
{
  ASA_BUG = 0,
  ASA_CONTINUE = 1,
  ASA_RESTART = 2,
};

struct ITimeAndNoticeControl
{
}; /* size: 0x0008 */

typedef struct _FILE_STANDARD_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0008 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0010 */ unsigned long NumberOfLinks;
  /* 0x0014 */ unsigned char DeletePending;
  /* 0x0015 */ unsigned char Directory;
  /* 0x0016 */ char __PADDING__[2];
} FILE_STANDARD_INFO, *PFILE_STANDARD_INFO; /* size: 0x0018 */

typedef struct _RTL_UMS_SCHEDULER_STARTUP_INFO
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_451;
  /* 0x0008 */ struct _RTL_UMS_COMPLETION_LIST* CompletionList;
  /* 0x0010 */ void* SchedulerProc /* function */;
  /* 0x0018 */ void* SchedulerParam;
} RTL_UMS_SCHEDULER_STARTUP_INFO, *PRTL_UMS_SCHEDULER_STARTUP_INFO; /* size: 0x0020 */

enum USER_TILE_TYPE
{
  UTT_IMAGE_96 = 0,
  UTT_IMAGE_448 = 1,
  UTT_VIDEO_448 = 2,
  UTT_DEFAULT = 3,
  UTT_IMAGE_40 = 4,
  UTT_IMAGE_200 = 5,
  UTT_VIDEO_200 = 6,
  UTT_IMAGE_240 = 7,
  UTT_VIDEO_240 = 8,
};

typedef struct _MUILANGINFO
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned short LangId;
  /* 0x0006 */ short LangNameIndex;
  /* 0x0008 */ unsigned short FallbackTypes;
  /* 0x000a */ short NeutralLangSpec;
  /* 0x000c */ short FallbackSpecs[4];
  /* 0x0014 */ short AlternateCodePage[4];
} MUILANGINFO, *PMUILANGINFO; /* size: 0x001c */

typedef struct _TAPE_GET_MEDIA_PARAMETERS
{
  /* 0x0000 */ union _LARGE_INTEGER Capacity;
  /* 0x0008 */ union _LARGE_INTEGER Remaining;
  /* 0x0010 */ unsigned long BlockSize;
  /* 0x0014 */ unsigned long PartitionCount;
  /* 0x0018 */ unsigned char WriteProtected;
  /* 0x0019 */ char __PADDING__[7];
} TAPE_GET_MEDIA_PARAMETERS, *PTAPE_GET_MEDIA_PARAMETERS; /* size: 0x0020 */

struct tagCSPLATFORM
{
  /* 0x0000 */ unsigned long dwPlatformId;
  /* 0x0004 */ unsigned long dwVersionHi;
  /* 0x0008 */ unsigned long dwVersionLo;
  /* 0x000c */ unsigned long dwProcessorArch;
}; /* size: 0x0010 */

struct tagQUERYCONTEXT
{
  /* 0x0000 */ unsigned long dwContext;
  /* 0x0004 */ struct tagCSPLATFORM Platform;
  /* 0x0014 */ unsigned long Locale;
  /* 0x0018 */ unsigned long dwVersionHi;
  /* 0x001c */ unsigned long dwVersionLo;
}; /* size: 0x0020 */

enum IMMERSIVELAUNCHERDISMISSMETHOD
{
  ILDM_INVALID = 0,
  ILDM_HSHELLTASKMAN = 1,
  ILDM_STARTCHARM = 2,
  ILDM_BACKGESTURE = 3,
  ILDM_ESCAPEKEY = 4,
  ILDM_SHOWDESKTOP = 5,
};

enum tagSTRUCTURED_QUERY_MULTIOPTION
{
  SQMO_VIRTUAL_PROPERTY = 0,
  SQMO_DEFAULT_PROPERTY = 1,
  SQMO_GENERATOR_FOR_TYPE = 2,
  SQMO_MAP_PROPERTY = 3,
};

struct HMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagTRACKMOUSEEVENT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTrack;
  /* 0x0010 */ unsigned long dwHoverTime;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct _TAPE_GET_STATISTICS
{
  /* 0x0000 */ unsigned long Operation;
} TAPE_GET_STATISTICS, *PTAPE_GET_STATISTICS; /* size: 0x0004 */

enum TEMPORARY_APP_VISUAL_TYPE
{
  TAVT_INVALID = 0,
  TAVT_DROPFEEDBACK = 1,
  TAVT_DRAGVISUAL = 2,
  TAVT_CLOSE = 3,
  TAVT_GUTTER = 4,
  TAVT_UNDERPAN = 5,
  TAVT_BACKGROUND = 6,
};

typedef struct __vc_attributes::max_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::max_isAttribute, *P_vc_attributes::max_isAttribute; /* size: 0x0008 */

enum IMMERSIVELAUNCHERSHOWMETHOD
{
  ILSM_INVALID = 0,
  ILSM_HSHELLTASKMAN = 1,
  ILSM_STARTCHARM = 2,
  ILSM_SEARCHPANE = 3,
  ILSM_IMMERSIVEBACKGROUND = 4,
  ILSM_MOUSECORNER = 5,
  ILSM_APPCLOSED = 6,
  ILSM_APPCRASHED = 7,
  ILSM_COMMANDBAR = 8,
};

struct tagCURSORSHAPE
{
  /* 0x0000 */ int xHotSpot;
  /* 0x0004 */ int yHotSpot;
  /* 0x0008 */ int cx;
  /* 0x000c */ int cy;
  /* 0x0010 */ int cbWidth;
  /* 0x0014 */ unsigned char Planes;
  /* 0x0015 */ unsigned char BitsPixel;
  /* 0x0016 */ char __PADDING__[2];
}; /* size: 0x0018 */

enum VIRTUALIZEDSELECTIONARRAYVALUE
{
  VSAV_ZEROTHITEMDEVIRTUALIZER = 0,
  VSAV_PARTIALDEVIRTUALIZER = 1,
  VSAV_FULLDEVIRTUALIZER = 2,
  VSAV_STARTINGITEM = 3,
  VSAV_INDEXSTARTINGITEM = 4,
};

typedef struct _CERT_STORE_PROV_FIND_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long dwFindFlags;
  /* 0x000c */ unsigned long dwFindType;
  /* 0x0010 */ const void* pvFindPara;
} CERT_STORE_PROV_FIND_INFO, *PCERT_STORE_PROV_FIND_INFO; /* size: 0x0018 */

enum DBSORTENUM
{
  DBSORT_ASCENDING = 0,
  DBSORT_DESCENDING = 1,
};

enum RESOLUTION_TYPE
{
  RT_REPLACE = 1,
  RT_SKIP = 2,
  RT_DECIDEFOREACH = 3,
};

typedef struct __vc_attributes::objectAttribute
{
} _vc_attributes::objectAttribute, *P_vc_attributes::objectAttribute; /* size: 0x0001 */

enum APPCRUSHER_INPUT
{
  ACI_TOUCH = 0,
  ACI_MOUSE = 1,
  ACI_KEYBOARD = 2,
  ACI_INVALID = 3,
};

typedef struct __vc_attributes::propputAttribute
{
} _vc_attributes::propputAttribute, *P_vc_attributes::propputAttribute; /* size: 0x0001 */

struct tagEMRSETICMPROFILE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cbName;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct CPageHolderTemplate
{
  /* 0x0000 */ char Padding_452[18];
  /* 0x0012 */ wchar_t MenuName;
  /* 0x0014 */ wchar_t ClassName;
  /* 0x0016 */ wchar_t szCaption;
  /* 0x0018 */ unsigned short wPointSize;
  /* 0x001a */ wchar_t szFontName;
}; /* size: 0x001c */

typedef struct _PROPSHEETPAGEW
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const wchar_t* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const wchar_t* pszHeaderTitle;
  /* 0x0050 */ const wchar_t* pszHeaderSubTitle;
  /* 0x0058 */ void* hActCtx;
  union
  {
    /* 0x0060 */ struct HBITMAP__* hbmHeader;
    /* 0x0060 */ const wchar_t* pszbmHeader;
  }; /* size: 0x0008 */
} PROPSHEETPAGEW, *PPROPSHEETPAGEW; /* size: 0x0068 */

class CPageHolder
{
  /* 0x0000 */ long Padding_453[2];
  /* 0x0008 */ struct _GUID m_clsid;
  /* 0x0018 */ struct HWND__* m_hWnd;
  /* 0x0020 */ unsigned int m_bActive : 1; /* bit position: 0 */
  /* 0x0024 */ unsigned int m_fSiteTranslateAcceleratorCalled;
  union
  {
    /* 0x0028 */ char* m_pszHelpFileA;
    /* 0x0028 */ wchar_t* m_pszHelpFileW;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned long m_dwHelpContext;
  /* 0x0034 */ unsigned long m_lcid;
  /* 0x0038 */ struct CPageHolderTemplate m_dlgTemplate;
  /* 0x0054 */ long Padding_454;
  /* 0x0058 */ struct IPropertyPage* m_pOlePropPage;
  union
  {
    /* 0x0060 */ struct _PROPSHEETPAGEA m_propSheetPageA;
    /* 0x0060 */ struct _PROPSHEETPAGEW m_propSheetPageW;
  }; /* size: 0x0068 */
  /* 0x00c8 */ long m_dispidStart;
  /* 0x00cc */ long Padding_455;
  /* 0x00d0 */ class COlePropertySheet* m_pOlePropSheet;
  /* 0x00d8 */ int m_fUnicodePage;
}; /* size: 0x00e0 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoToken>::COperatorAmpersandReturnType;

enum DBASYNCHPHASEENUM
{
  DBASYNCHPHASE_INITIALIZATION = 0,
  DBASYNCHPHASE_POPULATION = 1,
  DBASYNCHPHASE_COMPLETE = 2,
  DBASYNCHPHASE_CANCELED = 3,
};

class CStdClassFactory
{
  /* 0x0000 */ long Padding_456[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwIndex;
}; /* size: 0x0010 */

enum ITEMSVIEWSPYVALUE
{
  IVV_FOCUSEDITEM = 0,
  IVV_FIRSTPAGERESULTS_STATE = 1,
  IVV_SELECTIONMANAGER = 2,
  IVV_EVENTQUEUE_SIZE = 3,
  IVV_VIRTUALUIGROUPITEM_COLLECTION = 4,
  IVV_PROCESSID = 5,
  IVV_THREADID = 6,
  IVV_LINESCROLLER = 7,
};

enum FLYOUT_PLACEMENT
{
  FP_ABOVE = 0,
  FP_BELOW = 1,
  FP_LEFT = 2,
  FP_RIGHT = 3,
};

struct tagCTXVERSION
{
  /* 0x0000 */ short ThisVersion;
  /* 0x0002 */ short MinVersion;
}; /* size: 0x0004 */

struct IComCatalogInternal
{
}; /* size: 0x0008 */

typedef struct _TAPE_PREPARE
{
  /* 0x0000 */ unsigned long Operation;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_PREPARE, *PTAPE_PREPARE; /* size: 0x0008 */

class CProcessExtensionTbl
{
  /* 0x0000 */ class CExtHashTable _HashTbl;
  /* 0x0028 */ class CPageAllocator _palloc;
}; /* size: 0x0090 */

enum SHARE_MODE
{
  MODE_SMB = 0,
  MODE_INPLACE = 1,
  MODE_LIBRARY = 2,
  MODE_CLASSIC = 3,
};

enum tagSTRUCTURED_QUERY_SINGLE_OPTION
{
  SQSO_SCHEMA = 0,
  SQSO_LOCALE_WORD_BREAKING = 1,
  SQSO_WORD_BREAKER = 2,
  SQSO_NATURAL_SYNTAX = 3,
  SQSO_AUTOMATIC_WILDCARD = 4,
  SQSO_TRACE_LEVEL = 5,
  SQSO_LANGUAGE_KEYWORDS = 6,
  SQSO_SYNTAX = 7,
  SQSO_TIME_ZONE = 8,
  SQSO_IMPLICIT_CONNECTOR = 9,
  SQSO_CONNECTOR_CASE = 10,
};

typedef struct __vc_attributes::usesgetlasterrorAttribute
{
} _vc_attributes::usesgetlasterrorAttribute, *P_vc_attributes::usesgetlasterrorAttribute; /* size: 0x0001 */

typedef union _IMAGE_AUX_SYMBOL
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long TagIndex;
      union
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Linenumber;
            /* 0x0006 */ unsigned short Size;
          } /* size: 0x0004 */ LnSz;
          /* 0x0004 */ unsigned long TotalSize;
        }; /* size: 0x0004 */
      } /* size: 0x0004 */ Misc;
      union
      {
        union
        {
          struct
          {
            /* 0x0008 */ unsigned long PointerToLinenumber;
            /* 0x000c */ unsigned long PointerToNextFunction;
          } /* size: 0x0008 */ Function;
          struct
          {
            /* 0x0008 */ unsigned short Dimension[4];
          } /* size: 0x0008 */ Array;
        }; /* size: 0x0008 */
      } /* size: 0x0008 */ FcnAry;
      /* 0x0010 */ unsigned short TvIndex;
    } /* size: 0x0012 */ Sym;
    struct
    {
      /* 0x0000 */ unsigned char Name[18];
    } /* size: 0x0012 */ File;
    struct
    {
      /* 0x0000 */ unsigned long Length;
      /* 0x0004 */ unsigned short NumberOfRelocations;
      /* 0x0006 */ unsigned short NumberOfLinenumbers;
      /* 0x0008 */ unsigned long CheckSum;
      /* 0x000c */ short Number;
      /* 0x000e */ unsigned char Selection;
      /* 0x000f */ unsigned char bReserved;
      /* 0x0010 */ short HighNumber;
    } /* size: 0x0012 */ Section;
    /* 0x0000 */ struct IMAGE_AUX_SYMBOL_TOKEN_DEF TokenDef;
    struct
    {
      /* 0x0000 */ unsigned long crc;
      /* 0x0004 */ unsigned char rgbReserved[14];
    } /* size: 0x0012 */ CRC;
  }; /* size: 0x0012 */
} IMAGE_AUX_SYMBOL, *PIMAGE_AUX_SYMBOL; /* size: 0x0012 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>::COperatorAmpersandReturnType;

enum tagDBBOOKMARK
{
  DBBMK_INVALID = 0,
  DBBMK_FIRST = 1,
  DBBMK_LAST = 2,
};

struct tagRPC_CALL_ATTRIBUTES_V2_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_457;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_458;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ enum tagRpcCallClientLocality IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_459[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

struct IBindCtx
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_shpriv_0000_0798_0001
{
  PIL_MANAGED_BY_APPLICATION = 0,
  PIL_MOST_RECENTLY_USED = 1,
  PIL_SYSTEM = 2,
} _MIDL___MIDL_itf_shpriv_0000_0798_0001, *P_MIDL___MIDL_itf_shpriv_0000_0798_0001;

typedef struct _RPC_TRANSFER_SYNTAX
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_TRANSFER_SYNTAX, *PRPC_TRANSFER_SYNTAX; /* size: 0x0014 */

typedef struct __midl_frag276_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag276_t, *P_midl_frag276_t; /* size: 0x0010 */

typedef enum __enative_startup_state
{
  __uninitialized = 0,
  __initializing = 1,
  __initialized = 2,
} _enative_startup_state, *P_enative_startup_state;

typedef struct _CAT_MEMBERINFO
{
  /* 0x0000 */ wchar_t* pwszSubjGuid;
  /* 0x0008 */ unsigned long dwCertVersion;
  /* 0x000c */ long __PADDING__[1];
} CAT_MEMBERINFO, *PCAT_MEMBERINFO; /* size: 0x0010 */

enum SECURELOCKCODE
{
  SECURELOCK_NOCHANGE = -1,
  SECURELOCK_SET_UNSECURE = 0,
  SECURELOCK_SET_MIXED = 1,
  SECURELOCK_SET_SECUREUNKNOWNBIT = 2,
  SECURELOCK_SET_SECURE40BIT = 3,
  SECURELOCK_SET_SECURE56BIT = 4,
  SECURELOCK_SET_FORTEZZA = 5,
  SECURELOCK_SET_SECURE128BIT = 6,
  SECURELOCK_FIRSTSUGGEST = 7,
  SECURELOCK_SUGGEST_UNSECURE = 7,
  SECURELOCK_SUGGEST_MIXED = 8,
  SECURELOCK_SUGGEST_SECUREUNKNOWNBIT = 9,
  SECURELOCK_SUGGEST_SECURE40BIT = 10,
  SECURELOCK_SUGGEST_SECURE56BIT = 11,
  SECURELOCK_SUGGEST_FORTEZZA = 12,
  SECURELOCK_SUGGEST_SECURE128BIT = 13,
};

typedef struct _TRANSACTIONMANAGER_RECOVERY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 LastRecoveredLsn;
} TRANSACTIONMANAGER_RECOVERY_INFORMATION, *PTRANSACTIONMANAGER_RECOVERY_INFORMATION; /* size: 0x0008 */

enum tagSTRUCTURED_QUERY_SYNTAX
{
  SQS_NO_SYNTAX = 0,
  SQS_ADVANCED_QUERY_SYNTAX = 1,
  SQS_NATURAL_QUERY_SYNTAX = 2,
};

typedef struct _FLAG_STGMEDIUM
{
  /* 0x0000 */ long ContextFlags;
  /* 0x0004 */ long fPassOwnership;
  /* 0x0008 */ struct tagSTGMEDIUM Stgmed;
} FLAG_STGMEDIUM, *PFLAG_STGMEDIUM; /* size: 0x0020 */

enum APPWINDOW_TRANSITION_TYPE
{
  AWTT_NONE = 1,
  AWTT_CROSSFADE = 2,
  AWTT_NO_SPRITE = 4,
};

typedef struct _CMS_DH_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ char* pszContentEncObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PubInfo;
  /* 0x0020 */ void* pReserved;
} CMS_DH_KEY_INFO, *PCMS_DH_KEY_INFO; /* size: 0x0028 */

enum CONFIRMATIONRESPONSE
{
  CONFRES_CONTINUE = 0,
  CONFRES_SKIP = 1,
  CONFRES_RETRY = 2,
  CONFRES_RENAME = 3,
  CONFRES_CANCEL = 4,
  CONFRES_UNDO = 5,
  CONFRES_RENAME_LEFT = 3,
  CONFRES_RENAME_RIGHT = 6,
  CONFRES_ELEVATE = 7,
  CONFRES_CLOSE = 8,
};

class CUUIDHashTable
{
}; /* size: 0x0028 */

struct tagMULTIKEYHELPA
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ char mkKeylist;
  /* 0x0005 */ char szKeyphrase[1];
  /* 0x0006 */ char __PADDING__[2];
}; /* size: 0x0008 */

typedef struct _NON_PAGED_DEBUG_INFO
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned short Machine;
  /* 0x000a */ unsigned short Characteristics;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned __int64 ImageBase;
} NON_PAGED_DEBUG_INFO, *PNON_PAGED_DEBUG_INFO; /* size: 0x0020 */

typedef struct _wfinddata64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_460;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddata64_t, *Pwfinddata64_t; /* size: 0x0230 */

enum DBEVENTPHASEENUM
{
  DBEVENTPHASE_OKTODO = 0,
  DBEVENTPHASE_ABOUTTODO = 1,
  DBEVENTPHASE_SYNCHAFTER = 2,
  DBEVENTPHASE_FAILEDTODO = 3,
  DBEVENTPHASE_DIDEVENT = 4,
};

struct tagPDEXW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_461;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ void* hDevMode;
  /* 0x0018 */ void* hDevNames;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned long Flags2;
  /* 0x0030 */ unsigned long ExclusionFlags;
  /* 0x0034 */ unsigned long nPageRanges;
  /* 0x0038 */ unsigned long nMaxPageRanges;
  /* 0x003c */ long Padding_462;
  /* 0x0040 */ struct tagPRINTPAGERANGE* lpPageRanges;
  /* 0x0048 */ unsigned long nMinPage;
  /* 0x004c */ unsigned long nMaxPage;
  /* 0x0050 */ unsigned long nCopies;
  /* 0x0054 */ long Padding_463;
  /* 0x0058 */ struct HINSTANCE__* hInstance;
  /* 0x0060 */ const wchar_t* lpPrintTemplateName;
  /* 0x0068 */ struct IUnknown* lpCallback;
  /* 0x0070 */ unsigned long nPropertyPages;
  /* 0x0074 */ long Padding_464;
  /* 0x0078 */ struct _PSP** lphPropertyPages;
  /* 0x0080 */ unsigned long nStartPage;
  /* 0x0084 */ unsigned long dwResultAction;
}; /* size: 0x0088 */

enum DROP_FEEDBACK_TYPE
{
  DFT_DROP_AREA = 0,
  DFT_GUTTER_DRAG = 1,
  DFT_GUTTER = 2,
};

typedef struct __vc_attributes::idl_quoteAttribute
{
  /* 0x0000 */ const char* text;
} _vc_attributes::idl_quoteAttribute, *P_vc_attributes::idl_quoteAttribute; /* size: 0x0008 */

enum IMMERSIVE_APPLICATION_QUERY_SERVICE_OPTION
{
  IAQSO_DEFAULT = 0,
  IAQSO_FIRST_PACKAGED = 1,
  IAQSO_ANY_PACKAGED = 2,
};

enum LoadOrFreeWhat
{
  LoadLibrarySucceeded = 0,
  LoadLibraryFailed = 1,
  CallingFreeLibrary = 2,
};

typedef struct _OCSP_CERT_ID
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB IssuerNameHash;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB IssuerKeyHash;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB SerialNumber;
} OCSP_CERT_ID, *POCSP_CERT_ID; /* size: 0x0048 */

typedef struct _OCSP_REQUEST_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0048 */ unsigned long cExtension;
  /* 0x004c */ long Padding_465;
  /* 0x0050 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_ENTRY, *POCSP_REQUEST_ENTRY; /* size: 0x0058 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::CloakedIid<IMarshal>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::CloakedIid<IAgileObject>,Microsoft::WRL::Details::Nil> >,1,0>
{
}; /* size: 0x0010 */

enum VIEW_SETTING_ID
{
  VSIDF_VIEWMODE = 1,
  VSIDF_IMAGESIZE = 2,
  VSIDF_SORTCOLUMNS = 4,
  VSIDF_GROUPBY = 8,
  VSIDF_FOLDERFLAGS = 16,
  VSIDF_SUBSETCOUNT = 32,
  VSIDF_FOLDERTYPE = 64,
  VSIDF_VISIBLECOLUMNSWIDTH = 128,
  VSIDF_VISIBLECOLUMNSSET = 256,
  VSIDF_VISIBLECOLUMNSORDER = 512,
  VSIDF_VISIBLECOLUMNSALL = 896,
};

enum tagSM_KEYBOARDNAVIGATE
{
  SM_ENTERINGSEACHVIEW = 0,
  SM_INSIDESEARCHVIEW = 1,
};

typedef struct _CERT_EXTENSIONS
{
  /* 0x0000 */ unsigned long cExtension;
  /* 0x0004 */ long Padding_466;
  /* 0x0008 */ struct _CERT_EXTENSION* rgExtension;
} CERT_EXTENSIONS, *PCERT_EXTENSIONS; /* size: 0x0010 */

typedef struct _KTMOBJECT_CURSOR
{
  /* 0x0000 */ struct _GUID LastQuery;
  /* 0x0010 */ unsigned long ObjectIdCount;
  /* 0x0014 */ struct _GUID ObjectIds[1];
} KTMOBJECT_CURSOR, *PKTMOBJECT_CURSOR; /* size: 0x0024 */

struct MIPID
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ struct _GUID ipid;
  /* 0x0018 */ unsigned long dwApt;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

enum RAW_INPUT_MOUSE_BUTTON
{
  RIMB_LEFT = 0,
  RIMB_RIGHT = 1,
  RIMB_MIDDLE = 2,
  RIMB_BUTTON4 = 3,
  RIMB_BUTTON5 = 4,
};

struct tagORPC_EXTENT
{
  /* 0x0000 */ struct _GUID id;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ unsigned char data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

enum tagCS_COLUMN_WIDTH_TYPE
{
  COLWT_CURRENT = 0,
  COLWT_DEFAULT = 1,
  COLWT_MINIMUM = 2,
  COLWT_IDEAL = 3,
};

typedef struct __vc_attributes::uuidAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::uuidAttribute, *P_vc_attributes::uuidAttribute; /* size: 0x0008 */

struct IInternetThreadSwitch
{
}; /* size: 0x0008 */

typedef struct __midl_frag307_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag307_t, *P_midl_frag307_t; /* size: 0x0050 */

typedef struct _CERT_OTHER_NAME
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Value;
} CERT_OTHER_NAME, *PCERT_OTHER_NAME; /* size: 0x0018 */

typedef struct _HARDWARE_COUNTER_DATA
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Value;
} HARDWARE_COUNTER_DATA, *PHARDWARE_COUNTER_DATA; /* size: 0x0010 */

enum tagLC_POINT_TYPE
{
  LCPT_SCREEN = 0,
  LCPT_CLIENT = 1,
  LCPT_SCROLL = 2,
};

enum FILETYPEATTRIBUTEFLAGS
{
  FTA_None = 0,
  FTA_Exclude = 1,
  FTA_Show = 2,
  FTA_HasExtension = 4,
  FTA_NoEdit = 8,
  FTA_NoRemove = 16,
  FTA_NoNewVerb = 32,
  FTA_NoEditVerb = 64,
  FTA_NoRemoveVerb = 128,
  FTA_NoEditDesc = 256,
  FTA_NoEditIcon = 512,
  FTA_NoEditDflt = 1024,
  FTA_NoEditVerbCmd = 2048,
  FTA_NoEditVerbExe = 4096,
  FTA_NoDDE = 8192,
  FTA_NoEditMIME = 0xffff8000,
  FTA_OpenIsSafe = 0x10000,
  FTA_AlwaysUnsafe = 0x20000,
  FTA_NoRecentDocs = 0x100000,
  FTA_SafeForElevation = 0x200000,
  FTA_AlwaysUseDirectInvoke = 0x400000,
};

enum HOSTED_APP_CHANGED
{
  HAC_STARTED = 0,
  HAC_CLOSED = 1,
  HAC_INTERACTIVE = 2,
  HAC_NON_INTERACTIVE = 3,
};

typedef struct __vc_attributes::readonlyAttribute
{
} _vc_attributes::readonlyAttribute, *P_vc_attributes::readonlyAttribute; /* size: 0x0001 */

typedef struct _FILE_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* Port;
  /* 0x0008 */ void* Key;
} FILE_COMPLETION_INFORMATION, *PFILE_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef struct _wireVARIANT
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long rpcReserved;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ unsigned short wReserved1;
  /* 0x000c */ unsigned short wReserved2;
  /* 0x000e */ unsigned short wReserved3;
  union
  {
    /* 0x0010 */ __int64 llVal;
    /* 0x0010 */ long lVal;
    /* 0x0010 */ unsigned char bVal;
    /* 0x0010 */ short iVal;
    /* 0x0010 */ float fltVal;
    /* 0x0010 */ double dblVal;
    /* 0x0010 */ short boolVal;
    /* 0x0010 */ long scode;
    /* 0x0010 */ union tagCY cyVal;
    /* 0x0010 */ double date;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB* bstrVal;
    /* 0x0010 */ struct IUnknown* punkVal;
    /* 0x0010 */ struct IDispatch* pdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY** parray;
    /* 0x0010 */ struct _wireBRECORD* brecVal;
    /* 0x0010 */ unsigned char* pbVal;
    /* 0x0010 */ short* piVal;
    /* 0x0010 */ long* plVal;
    /* 0x0010 */ __int64* pllVal;
    /* 0x0010 */ float* pfltVal;
    /* 0x0010 */ double* pdblVal;
    /* 0x0010 */ short* pboolVal;
    /* 0x0010 */ long* pscode;
    /* 0x0010 */ union tagCY* pcyVal;
    /* 0x0010 */ double* pdate;
    /* 0x0010 */ struct _FLAGGED_WORD_BLOB** pbstrVal;
    /* 0x0010 */ struct IUnknown** ppunkVal;
    /* 0x0010 */ struct IDispatch** ppdispVal;
    /* 0x0010 */ struct _wireSAFEARRAY*** pparray;
    /* 0x0010 */ struct _wireVARIANT** pvarVal;
    /* 0x0010 */ char cVal;
    /* 0x0010 */ unsigned short uiVal;
    /* 0x0010 */ unsigned long ulVal;
    /* 0x0010 */ unsigned __int64 ullVal;
    /* 0x0010 */ int intVal;
    /* 0x0010 */ unsigned int uintVal;
    /* 0x0010 */ struct tagDEC decVal;
    /* 0x0010 */ struct tagDEC* pdecVal;
    /* 0x0010 */ char* pcVal;
    /* 0x0010 */ unsigned short* puiVal;
    /* 0x0010 */ unsigned long* pulVal;
    /* 0x0010 */ unsigned __int64* pullVal;
    /* 0x0010 */ int* pintVal;
    struct
    {
      /* 0x0010 */ unsigned int* puintVal;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} wireVARIANT, *PwireVARIANT; /* size: 0x0020 */

enum ELEMENTSPYVALUE
{
  ESV_DISPLAYNAME = 0,
  ESV_POINTERVALUE = 1,
  ESV_UICOLLECTION_UIVERSION = 2,
  ESV_UICOLLECTION_DISPLAYNAME = 3,
  ESV_UICOLLECTION_COLLECTION = 4,
};

enum IMMERSIVE_BACKSTACK_MODE
{
  IBSM_CONTINUOUS = 0,
  IBSM_LIST = 1,
};

struct IXMLDOMNotation
{
}; /* size: 0x0008 */

typedef struct _JOB_SET_ARRAY
{
  /* 0x0000 */ void* JobHandle;
  /* 0x0008 */ unsigned long MemberLevel;
  /* 0x000c */ unsigned long Flags;
} JOB_SET_ARRAY, *PJOB_SET_ARRAY; /* size: 0x0010 */

enum tagITEM_CHANGE_TYPE
{
  ICHT_INSERT = 0,
  ICHT_DELETE = 1,
  ICHT_UPDATE = 2,
  ICHT_FILTER = 3,
};

typedef struct _CERT_POLICIES_INFO
{
  /* 0x0000 */ unsigned long cPolicyInfo;
  /* 0x0004 */ long Padding_467;
  /* 0x0008 */ struct _CERT_POLICY_INFO* rgPolicyInfo;
} CERT_POLICIES_INFO, *PCERT_POLICIES_INFO; /* size: 0x0010 */

struct IContinue
{
}; /* size: 0x0008 */

typedef struct _PRINTPROCESSOR_INFO_1W
{
  /* 0x0000 */ wchar_t* pName;
} PRINTPROCESSOR_INFO_1W, *PPRINTPROCESSOR_INFO_1W; /* size: 0x0008 */

enum IMM_APP_ARRANGEMENT_TYPE
{
  IAAT_NONE = 0,
  IAAT_SLIDE_LEFT = 1,
  IAAT_SLIDE_RIGHT = 2,
  IAAT_EVICT_REPLACE = 3,
  IAAT_EVICT_CLOSE = 4,
  IAAT_EVICT_LEFT = 5,
  IAAT_EVICT_RIGHT = 6,
  IAAT_EVICT_GENERIC = 7,
};

typedef struct __vc_attributes::atl::requires_categoryAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::requires_categoryAttribute, *P_vc_attributes::atl::requires_categoryAttribute; /* size: 0x0008 */

typedef struct _FILE_PREFETCH
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned __int64 Prefetch[1];
} FILE_PREFETCH, *PFILE_PREFETCH; /* size: 0x0010 */

enum LAST_COPYITEM_ERROR_TYPE
{
  LAST_COPYITEM_ERROR_SRC = 0,
  LAST_COPYITEM_ERROR_DST = 1,
  LAST_COPYITEM_ERROR_NOINFO = 2,
};

typedef struct __vc_attributes::atl::db_sourceAttribute
{
  /* 0x0000 */ const char* source;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* hresult;
} _vc_attributes::atl::db_sourceAttribute, *P_vc_attributes::atl::db_sourceAttribute; /* size: 0x0018 */

typedef struct _CMC_ADD_ATTRIBUTES_INFO
{
  /* 0x0000 */ unsigned long dwCmcDataReference;
  /* 0x0004 */ unsigned long cCertReference;
  /* 0x0008 */ unsigned long* rgdwCertReference;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ long Padding_468;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CMC_ADD_ATTRIBUTES_INFO, *PCMC_ADD_ATTRIBUTES_INFO; /* size: 0x0020 */

typedef struct _CRYPT_TIMESTAMP_CONTEXT
{
  /* 0x0000 */ unsigned long cbEncoded;
  /* 0x0004 */ long Padding_469;
  /* 0x0008 */ unsigned char* pbEncoded;
  /* 0x0010 */ struct _CRYPT_TIMESTAMP_INFO* pTimeStamp;
} CRYPT_TIMESTAMP_CONTEXT, *PCRYPT_TIMESTAMP_CONTEXT; /* size: 0x0018 */

enum SYNCMGR_PROGRESS_STATUS
{
  SYNCMGR_PS_UPDATING = 1,
  SYNCMGR_PS_UPDATING_INDETERMINATE = 2,
  SYNCMGR_PS_SUCCEEDED = 3,
  SYNCMGR_PS_FAILED = 4,
  SYNCMGR_PS_CANCELED = 5,
  SYNCMGR_PS_DISCONNECTED = 6,
  SYNCMGR_PS_MAX = 6,
};

struct tagENUMUILANG
{
  /* 0x0000 */ unsigned long NumOfEnumUILang;
  /* 0x0004 */ unsigned long SizeOfEnumUIBuffer;
  /* 0x0008 */ unsigned short* pEnumUIBuffer;
}; /* size: 0x0010 */

typedef enum _TASKDIALOG_FLAGS
{
  TDF_ENABLE_HYPERLINKS = 1,
  TDF_USE_HICON_MAIN = 2,
  TDF_USE_HICON_FOOTER = 4,
  TDF_ALLOW_DIALOG_CANCELLATION = 8,
  TDF_USE_COMMAND_LINKS = 16,
  TDF_USE_COMMAND_LINKS_NO_ICON = 32,
  TDF_EXPAND_FOOTER_AREA = 64,
  TDF_EXPANDED_BY_DEFAULT = 128,
  TDF_VERIFICATION_FLAG_CHECKED = 256,
  TDF_SHOW_PROGRESS_BAR = 512,
  TDF_SHOW_MARQUEE_PROGRESS_BAR = 1024,
  TDF_CALLBACK_TIMER = 2048,
  TDF_POSITION_RELATIVE_TO_WINDOW = 4096,
  TDF_RTL_LAYOUT = 8192,
  TDF_NO_DEFAULT_RADIO_BUTTON = 16384,
  TDF_CAN_BE_MINIMIZED = 0xffff8000,
  TDF_NO_SET_FOREGROUND = 0x10000,
  TDF_SIZE_TO_CONTENT = 0x1000000,
} TASKDIALOG_FLAGS, *PTASKDIALOG_FLAGS;

enum STREAM_REFERENCE_TYPE
{
  STREAMREFERENCE_NONE = 0,
  STREAMREFERENCE_FILE = 1,
  STREAMREFERENCE_URI = 2,
  STREAMREFERENCE_STREAM = 3,
};

struct SCARD_READERSTATEA
{
  /* 0x0000 */ const char* szReader;
  /* 0x0008 */ void* pvUserData;
  /* 0x0010 */ unsigned long dwCurrentState;
  /* 0x0014 */ unsigned long dwEventState;
  /* 0x0018 */ unsigned long cbAtr;
  /* 0x001c */ unsigned char rgbAtr[36];
}; /* size: 0x0040 */

enum GETPROPERTYSTOREFLAGS
{
};

typedef struct __vc_attributes::atl::implements_categoryAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::implements_categoryAttribute, *P_vc_attributes::atl::implements_categoryAttribute; /* size: 0x0008 */

enum SEARCH_TYPEAHEAD_ITEM_TYPE
{
  STA_TYPE_SEARCHSUGGESTION = 0,
  STA_TYPE_SEPARATOR = 1,
  STA_TYPE_RESULTSUGGESTION = 2,
};

typedef struct _ImageArchitectureEntry
{
  /* 0x0000 */ unsigned long FixupInstRVA;
  /* 0x0004 */ unsigned long NewInst;
} ImageArchitectureEntry, *PImageArchitectureEntry; /* size: 0x0008 */

typedef struct _CHANGER_ELEMENT_LIST
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Element;
  /* 0x0008 */ unsigned long NumberOfElements;
} CHANGER_ELEMENT_LIST, *PCHANGER_ELEMENT_LIST; /* size: 0x000c */

typedef struct _CHANGER_INITIALIZE_ELEMENT_STATUS
{
  /* 0x0000 */ struct _CHANGER_ELEMENT_LIST ElementList;
  /* 0x000c */ unsigned char BarCodeScan;
  /* 0x000d */ char __PADDING__[3];
} CHANGER_INITIALIZE_ELEMENT_STATUS, *PCHANGER_INITIALIZE_ELEMENT_STATUS; /* size: 0x0010 */

enum tagCS_COLUMN_SET
{
  COLSET_ALL = 0,
  COLSET_VISIBLE = 1,
  COLSET_COLUMNID = 2,
};

enum SWITCH_LOCATION
{
  SL_CURRENT = 0,
  SL_BODY_DEFAULT = 1,
  SL_BODY_LEFT = 2,
  SL_BODY_RIGHT = 3,
  SL_SNAPPED_DEFAULT = 4,
  SL_SNAPPED_LEFT = 5,
  SL_SNAPPED_RIGHT = 6,
};

typedef struct __vc_attributes::atl::com_interface_entryAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::com_interface_entryAttribute, *P_vc_attributes::atl::com_interface_entryAttribute; /* size: 0x0008 */

typedef struct _EISA_MEMORY_TYPE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ReadWrite : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char Cached : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved0 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Type : 2; /* bit position: 3 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved1 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_MEMORY_TYPE, *PEISA_MEMORY_TYPE; /* size: 0x0001 */

enum tagSET_COLUMNS_NOTIFY_OPTIONS
{
  SCNO_DEFAULT = 0,
  SCNO_REORDERONLY = 1,
};

typedef struct __vc_attributes::atl::perf_objectAttribute
{
  /* 0x0000 */ int name_res;
  /* 0x0004 */ int help_res;
  /* 0x0008 */ const char* namestring;
  /* 0x0010 */ const char* helpstring;
  /* 0x0018 */ int detail;
  /* 0x001c */ BOOL no_instances;
  /* 0x001d */ char Padding_470[3];
  /* 0x0020 */ const char* class_;
  /* 0x0028 */ int maxinstnamelen;
  /* 0x002c */ long __PADDING__[1];
} _vc_attributes::atl::perf_objectAttribute, *P_vc_attributes::atl::perf_objectAttribute; /* size: 0x0030 */

enum MESSAGE_HANDLER_MESSAGE_TYPE
{
  MHMT_KEY_TRACE = 0,
  MHMT_FORWARD_MESSAGE = 1,
};

enum SYNCMGR_RESOLUTION_FEEDBACK
{
  SYNCMGR_RF_CONTINUE = 0,
  SYNCMGR_RF_REFRESH = 1,
  SYNCMGR_RF_CANCEL = 2,
};

class ComVerifierSettings
{
  union
  {
    /* 0x0000 */ int s_fCallBacksInitialized;
    /* 0x0000 */ int s_fComVerifierEnabled;
    /* 0x0000 */ int s_fEnableDllMainChecks;
    /* 0x0000 */ int s_fEnableBreakOnException;
    /* 0x0000 */ int s_fEnableVerifyLocks;
    /* 0x0000 */ int s_fEnableVerifyThreadState;
    /* 0x0000 */ int s_fVerifyOleInitCalled;
    /* 0x0000 */ int s_fEnableVerifySecurity;
    /* 0x0000 */ int s_fEnableVerifyProxies;
    /* 0x0000 */ int s_fEnableVerifyClassFactory;
    /* 0x0000 */ int s_fEnableObjectTracking;
    /* 0x0000 */ int s_fEnableVTBLTracking;
    /* 0x0000 */ int s_fEnableSecBlanketChecks;
    /* 0x0000 */ int s_fEnableAggressiveDllUnload;
    /* 0x0000 */ int s_fUseSlowStackTraces;
    /* 0x0000 */ int s_fPgAllocUseSystemHeap;
    /* 0x0000 */ int s_fPgAllocHeapIsPrivate;
    /* 0x0000 */ int s_fCheckUnrecommendedUsageFromAPC;
    /* 0x0000 */ int s_fCheckMarshalingToUntrustedProcess;
    /* 0x0000 */ int s_fCheckClassicMarshalingToUntrustedProcess;
    /* 0x0000 */ int s_fVerifyFatalExceptionHandlingDisabled;
    /* 0x0000 */ unsigned long s_ulMaxStackTracesPerThread;
    /* 0x0000 */ unsigned long s_ulMaxStackTracesPerProcess;
    /* 0x0000 */ class ComVerifierSettings s_singleton;
    /* 0x0000 */ unsigned long s_dwAggressiveDllUnloadPeriod;
    /* 0x0000 */ unsigned long s_dwAggressiveMTATesting;
  }; /* size: 0x0004 */
}; /* size: 0x0001 */

struct HMAPKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

enum GET_PROPERTY_STORE_TYPE
{
  GIPST_CACHED = 0,
  GIPST_FALLBACK = 1,
};

enum ELEVATION_STATE
{
  ELEVATION_NOT_CHECKED = 0,
  ELEVATION_CHECKED_SHIELD = 1,
  ELEVATION_CHECKED_NOSHIELD = 2,
};

typedef struct __vc_attributes::atl::soap_handlerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* namespace;
  /* 0x0010 */ const char* protocol;
  /* 0x0018 */ const char* style;
  /* 0x0020 */ const char* use;
} _vc_attributes::atl::soap_handlerAttribute, *P_vc_attributes::atl::soap_handlerAttribute; /* size: 0x0028 */

struct tagACCESSTIMEOUT
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iTimeOutMSec;
}; /* size: 0x000c */

struct tagRAWINPUTHEADER
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSize;
  /* 0x0008 */ void* hDevice;
  /* 0x0010 */ unsigned __int64 wParam;
}; /* size: 0x0018 */

struct IInternetProtocolInfo
{
}; /* size: 0x0008 */

struct ISequentialStream
{
}; /* size: 0x0008 */

typedef enum __MIDL___MIDL_itf_structuredquery_0000_0012_0001
{
  NEC_LOW = 0,
  NEC_MEDIUM = 1,
  NEC_HIGH = 2,
} _MIDL___MIDL_itf_structuredquery_0000_0012_0001, *P_MIDL___MIDL_itf_structuredquery_0000_0012_0001;

typedef struct _CRYPT_X942_OTHER_INFO
{
  /* 0x0000 */ char* pszContentEncryptionObjId;
  /* 0x0008 */ unsigned char rgbCounter[4];
  /* 0x000c */ unsigned char rgbKeyLength[4];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB PubInfo;
} CRYPT_X942_OTHER_INFO, *PCRYPT_X942_OTHER_INFO; /* size: 0x0020 */

typedef struct _PORT_INFO_1A
{
  /* 0x0000 */ char* pName;
} PORT_INFO_1A, *PPORT_INFO_1A; /* size: 0x0008 */

enum SYNCMGR_PRESENTER_CHOICE
{
  SYNCMGR_PC_NO_CHOICE = 0,
  SYNCMGR_PC_KEEP_ONE = 1,
  SYNCMGR_PC_KEEP_MULTIPLE = 2,
  SYNCMGR_PC_KEEP_RECENT = 3,
  SYNCMGR_PC_REMOVE_FROM_SYNC_SET = 4,
  SYNCMGR_PC_SKIP = 5,
};

enum GETSORTCOLUMN
{
  GSC_ARRANGEBY = 0,
  GSC_SORTBY = 1,
};

struct PPM_THERMAL_POLICY_EVENT
{
  /* 0x0000 */ unsigned char Mode;
  /* 0x0001 */ char Padding_471[7];
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct _CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ void* pvExtraPolicyPara;
} CERT_CHAIN_POLICY_PARA, *PCERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

typedef enum _BACKGROUND_TASK_CAPABILITY
{
  BTC_AUDIO = 1,
  BTC_REALTIME_COMMUNICATION = 2,
  BTC_SYSTEM_EVENT = 4,
  BTC_TIMER = 8,
  BTC_PUSH_NOTIFICATION = 16,
  BTC_IMPLICIT = 4096,
  BTC_ANY_CAPABILITY = 0xffffffff,
} BACKGROUND_TASK_CAPABILITY, *PBACKGROUND_TASK_CAPABILITY;

enum tagLC_SELECTION_MODE
{
  LCSM_DESELECT_ALL = 0,
  LCSM_SELECT_ALL = 1,
  LCSM_INVERTSELECTION = 2,
};

typedef struct _SERVICE_STATUS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
} SERVICE_STATUS, *PSERVICE_STATUS; /* size: 0x001c */

typedef struct _ENUM_SERVICE_STATUSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ wchar_t* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS ServiceStatus;
  /* 0x002c */ long __PADDING__[1];
} ENUM_SERVICE_STATUSW, *PENUM_SERVICE_STATUSW; /* size: 0x0030 */

enum SHELLSEARCHCOMMAND
{
  SSC_SEARCH_EXEC = 0,
  SSC_SEARCH_RETURNKEY = 1,
  SSC_AUTOCOMPLETE_DELETE = 2,
};

struct tagPOINTER_TOUCH_INFO
{
  /* 0x0000 */ struct tagPOINTER_INFO pointerInfo;
  /* 0x0060 */ unsigned int touchFlags;
  /* 0x0064 */ unsigned int touchMask;
  /* 0x0068 */ struct tagRECT rcContact;
  /* 0x0078 */ struct tagRECT rcContactRaw;
  /* 0x0088 */ unsigned int orientation;
  /* 0x008c */ unsigned int pressure;
}; /* size: 0x0090 */

typedef struct _CERT_CREATE_CONTEXT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_472;
  /* 0x0008 */ void* pfnFree /* function */;
  /* 0x0010 */ void* pvFree;
  /* 0x0018 */ void* pfnSort /* function */;
  /* 0x0020 */ void* pvSort;
} CERT_CREATE_CONTEXT_PARA, *PCERT_CREATE_CONTEXT_PARA; /* size: 0x0028 */

typedef struct _ENUM_SERVICE_STATUSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ char* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS ServiceStatus;
  /* 0x002c */ long __PADDING__[1];
} ENUM_SERVICE_STATUSA, *PENUM_SERVICE_STATUSA; /* size: 0x0030 */

enum OPERATION_INTERRUPT_RESPONSE_SINGLE
{
  OIRS_ELEVATE = 1,
  OIRS_DELETE = 2,
  OIRS_SKIP = 3,
  OIRS_CANCEL = 4,
  OIRS_RETRY = 5,
  OIRS_YES = 6,
  OIRS_OK = 7,
  OIRS_NO = 8,
  OIRS_KEEPSOURCE = 9,
  OIRS_KEEPDEST = 10,
  OIRS_KEEPBOTH = 11,
};

typedef struct __vc_attributes::atl::db_accessorAttribute
{
  /* 0x0000 */ int id;
  /* 0x0004 */ BOOL auto_;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::atl::db_accessorAttribute, *P_vc_attributes::atl::db_accessorAttribute; /* size: 0x0008 */

struct tagLOGPEN
{
  /* 0x0000 */ unsigned int lopnStyle;
  /* 0x0004 */ struct tagPOINT lopnWidth;
  /* 0x000c */ unsigned long lopnColor;
}; /* size: 0x0010 */

struct tagEMRCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ struct tagLOGPEN lopn;
}; /* size: 0x001c */

class Windows::Rtl::AutoTxnHandle
{
}; /* size: 0x0008 */

typedef struct _PROCESS_HANDLE_TRACING_ENTRY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ struct _CLIENT_ID ClientId;
  /* 0x0018 */ unsigned long Type;
  /* 0x001c */ long Padding_473;
  /* 0x0020 */ void* Stacks[16];
} PROCESS_HANDLE_TRACING_ENTRY, *PPROCESS_HANDLE_TRACING_ENTRY; /* size: 0x00a0 */

enum tagENUMVIEWPROPFLAG
{
  EVPF_NO_UNMATCH_ASPECRATIO = 1,
  EVPF_DISTINCT_RESOLUTION = 2,
};

struct tagMIXERCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long fdwSupport;
  /* 0x002c */ unsigned long cDestinations;
}; /* size: 0x0030 */

struct CaseMapping
{
  /* 0x0000 */ unsigned short lower;
  /* 0x0002 */ unsigned short upper;
}; /* size: 0x0004 */

struct Microsoft::WRL::RuntimeClassFlags<4>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef enum _IMMERSIVE_WER_CONSENT
{
  IWC_DECLINED = 0,
  IWC_GRANTED = 1,
  IWC_NOT_TAKEN = 2,
} IMMERSIVE_WER_CONSENT, *PIMMERSIVE_WER_CONSENT;

enum tagDESTCATTYPE
{
  DCT_CUSTOM = 0,
  DCT_KNOWN = 1,
  DCT_TASKS = 2,
};

enum EDGEGESTURE_INVOCATION_KIND
{
  EGIK_TOUCH = 0,
  EGIK_KEYBOARD = 1,
  EGIK_MOUSE = 2,
};

typedef struct _FILE_LINK_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_474[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_INFORMATION, *PFILE_LINK_INFORMATION; /* size: 0x0018 */

enum NOTIFY_IMMERSIVE_APPLICATION_WINDOWS_DELIVERY_TYPE
{
  NIAWDT_POST = 0,
  NIAWDT_SENDNOTIFY = 1,
};

class CClassCache::CLSvrClassEntry
{
  /* 0x0000 */ long Padding_475[10];
  /* 0x0028 */ class CClassCache::CLSvrClassEntry* _pNextLSvr;
  /* 0x0030 */ class CClassCache::CLSvrClassEntry* _pPrevLSvr;
  /* 0x0038 */ struct IUnknown* _pUnk;
  /* 0x0040 */ unsigned long _dwRegFlags;
  /* 0x0044 */ unsigned long _dwFlags;
  /* 0x0048 */ unsigned long _dwScmReg;
  /* 0x004c */ unsigned long _hApt;
  /* 0x0050 */ struct HWND__* _hWndDdeServer;
  /* 0x0058 */ class CObjServer* _pObjServer;
  /* 0x0060 */ unsigned long _dwCookie;
  /* 0x0064 */ unsigned long _cUsing;
  /* 0x0068 */ unsigned long _ulServiceId;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ const unsigned long DUMMY_SIG;
    /* 0x0000 */ const unsigned long NO_SCM_REG;
    /* 0x0000 */ unsigned long _dwNextCookieCount;
    /* 0x0000 */ unsigned long _cOutstandingObjects;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0068 */
}; /* size: 0x0070 */

struct IClassActivator
{
}; /* size: 0x0008 */

typedef struct _PROCESS_DISK_COUNTERS
{
  /* 0x0000 */ unsigned __int64 BytesRead;
  /* 0x0008 */ unsigned __int64 BytesWritten;
  /* 0x0010 */ unsigned __int64 ReadOperationCount;
  /* 0x0018 */ unsigned __int64 WriteOperationCount;
  /* 0x0020 */ unsigned __int64 FlushOperationCount;
} PROCESS_DISK_COUNTERS, *PPROCESS_DISK_COUNTERS; /* size: 0x0028 */

typedef struct _SYSTEM_PROCESS_INFORMATION_EXTENSION
{
  /* 0x0000 */ struct _PROCESS_DISK_COUNTERS DiskCounters;
  /* 0x0028 */ unsigned __int64 ContextSwitches;
  union
  {
    /* 0x0030 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0030 */ unsigned long HasStrongId : 1; /* bit position: 0 */
      /* 0x0030 */ unsigned long Spare : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0034 */ unsigned long UserSidOffset;
} SYSTEM_PROCESS_INFORMATION_EXTENSION, *PSYSTEM_PROCESS_INFORMATION_EXTENSION; /* size: 0x0038 */

typedef struct __midl_frag1814_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1814_t, *P_midl_frag1814_t; /* size: 0x0028 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_476;
  /* 0x0008 */ const char* FrameName;
} TEB_ACTIVE_FRAME_CONTEXT, *PTEB_ACTIVE_FRAME_CONTEXT; /* size: 0x0010 */

enum SYNCMGR_UPDATE_REASON
{
  SYNCMGR_UR_ADDED = 0,
  SYNCMGR_UR_CHANGED = 1,
  SYNCMGR_UR_REMOVED = 2,
  SYNCMGR_UR_MAX = 2,
};

typedef struct _FILE_RENAME_INFO
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_477[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFO, *PFILE_RENAME_INFO; /* size: 0x0018 */

enum tagDISPLAY_SUPPORTED_ORIENTATIONS
{
  DSO_NONE = 0,
  DSO_0 = 1,
  DSO_90 = 2,
  DSO_180 = 4,
  DSO_270 = 8,
};

struct lconv;

typedef struct _IMAGE_OPTIONAL_HEADER
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned long BaseOfData;
  /* 0x001c */ unsigned long ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned long SizeOfStackReserve;
  /* 0x004c */ unsigned long SizeOfStackCommit;
  /* 0x0050 */ unsigned long SizeOfHeapReserve;
  /* 0x0054 */ unsigned long SizeOfHeapCommit;
  /* 0x0058 */ unsigned long LoaderFlags;
  /* 0x005c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0060 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER, *PIMAGE_OPTIONAL_HEADER; /* size: 0x00e0 */

class CarefulBufferReader
{
  /* 0x0000 */ unsigned char* pBuffer;
  /* 0x0008 */ unsigned __int64 cbBuffer;
}; /* size: 0x0010 */

enum IMMERSIVE_MONITOR_MOVE_DIRECTION
{
  IMMD_PREVIOUS = 0,
  IMMD_NEXT = 1,
};

typedef struct _DISK_GEOMETRY
{
  /* 0x0000 */ union _LARGE_INTEGER Cylinders;
  /* 0x0008 */ enum _MEDIA_TYPE MediaType;
  /* 0x000c */ unsigned long TracksPerCylinder;
  /* 0x0010 */ unsigned long SectorsPerTrack;
  /* 0x0014 */ unsigned long BytesPerSector;
} DISK_GEOMETRY, *PDISK_GEOMETRY; /* size: 0x0018 */

typedef struct _DISK_GEOMETRY_EX
{
  /* 0x0000 */ struct _DISK_GEOMETRY Geometry;
  /* 0x0018 */ union _LARGE_INTEGER DiskSize;
  /* 0x0020 */ unsigned char Data[1];
  /* 0x0021 */ char __PADDING__[7];
} DISK_GEOMETRY_EX, *PDISK_GEOMETRY_EX; /* size: 0x0028 */

typedef struct _BIN_COUNT
{
  /* 0x0000 */ struct _BIN_RANGE BinRange;
  /* 0x0010 */ unsigned long BinCount;
  /* 0x0014 */ long __PADDING__[1];
} BIN_COUNT, *PBIN_COUNT; /* size: 0x0018 */

typedef enum _PERSIST_SPROPSTORE_FLAGS_PRIV
{
  FPSPSP_DEFAULT = 0,
  FPSPSP_ASSUME_NO_DUPLICATES = 1,
} PERSIST_SPROPSTORE_FLAGS_PRIV, *PPERSIST_SPROPSTORE_FLAGS_PRIV;

typedef struct __vc_attributes::helper_attributes::requires_valueAttribute
{
} _vc_attributes::helper_attributes::requires_valueAttribute, *P_vc_attributes::helper_attributes::requires_valueAttribute; /* size: 0x0001 */

typedef struct _PRINTER_INFO_5W
{
  /* 0x0000 */ wchar_t* pPrinterName;
  /* 0x0008 */ wchar_t* pPortName;
  /* 0x0010 */ unsigned long Attributes;
  /* 0x0014 */ unsigned long DeviceNotSelectedTimeout;
  /* 0x0018 */ unsigned long TransmissionRetryTimeout;
  /* 0x001c */ long __PADDING__[1];
} PRINTER_INFO_5W, *PPRINTER_INFO_5W; /* size: 0x0020 */

enum tagRECYCLEBIN_TYPE
{
  RBT_VOLUME = 0,
  RBT_KNOWNFOLDER = 1,
};

typedef struct __vc_attributes::includeAttribute
{
  /* 0x0000 */ const char* include_file;
} _vc_attributes::includeAttribute, *P_vc_attributes::includeAttribute; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_FUNCTION_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_478;
  /* 0x0008 */ wchar_t** rgpszProviders;
} CRYPT_CONTEXT_FUNCTION_PROVIDERS, *PCRYPT_CONTEXT_FUNCTION_PROVIDERS; /* size: 0x0010 */

typedef struct _ATOM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned short UsageCount;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short NameLength;
  /* 0x0006 */ wchar_t Name[1];
} ATOM_BASIC_INFORMATION, *PATOM_BASIC_INFORMATION; /* size: 0x0008 */

class CFillLockBytes
{
  /* 0x0000 */ long Padding_479[6];
  /* 0x0018 */ struct ILockBytes* _pilb;
  /* 0x0020 */ long _cRefs;
  /* 0x0024 */ unsigned long _ulHighWater;
  /* 0x0028 */ unsigned long _dwTerminate;
  /* 0x002c */ unsigned long _ulFailurePoint;
  /* 0x0030 */ class CPerContext* _ppc;
  /* 0x0038 */ int _fCSInitialized;
  /* 0x003c */ long Padding_480;
  /* 0x0040 */ struct _RTL_CRITICAL_SECTION _csThreadProtect;
}; /* size: 0x0068 */

enum SWITCH_DIRECTION
{
  SWITCH_OLDER = 0,
  SWITCH_NEWER = 1,
};

struct HINSTANCE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagHW_PROFILE_INFOW
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ wchar_t szHwProfileGuid[39];
  /* 0x0052 */ wchar_t szHwProfileName[80];
  /* 0x00f2 */ char __PADDING__[2];
}; /* size: 0x00f4 */

enum SEARCHTEXTTYPE
{
  STTYPE_DEFAULT = 0,
  STTYPE_INITIAL = 1,
};

enum SHARING_MENU_SHARE_STATE
{
  SHARE_STATE_UNKNOWN = 0,
  SHARE_STATE_NOT_SHAREABLE = 1,
  SHARE_STATE_SHAREABLE = 2,
};

typedef struct __vc_attributes::ptrAttribute
{
} _vc_attributes::ptrAttribute, *P_vc_attributes::ptrAttribute; /* size: 0x0001 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_LIST
{
  /* 0x0000 */ unsigned long Reserved1;
  /* 0x0004 */ unsigned long Reserved2;
  /* 0x0008 */ unsigned long ConflictsCounted;
  /* 0x000c */ unsigned long ConflictsListed;
  /* 0x0010 */ unsigned long RequiredBufferSize;
  /* 0x0014 */ long Padding_481;
  /* 0x0018 */ struct _PLUGPLAY_CONTROL_CONFLICT_ENTRY ConflictEntry[1];
} PLUGPLAY_CONTROL_CONFLICT_LIST, *PPLUGPLAY_CONTROL_CONFLICT_LIST; /* size: 0x0040 */

typedef struct _PORT_DATA_ENTRY
{
  /* 0x0000 */ void* Base;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} PORT_DATA_ENTRY, *PPORT_DATA_ENTRY; /* size: 0x0010 */

typedef struct _SE_AUDIT_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ enum _AUDIT_EVENT_TYPE AuditType;
  /* 0x0008 */ enum _SE_AUDIT_OPERATION AuditOperation;
  /* 0x000c */ unsigned long AuditFlags;
  /* 0x0010 */ struct _UNICODE_STRING SubsystemName;
  /* 0x0020 */ struct _UNICODE_STRING ObjectTypeName;
  /* 0x0030 */ struct _UNICODE_STRING ObjectName;
  /* 0x0040 */ void* HandleId;
  /* 0x0048 */ struct _GUID* TransactionId;
  /* 0x0050 */ struct _LUID* OperationId;
  /* 0x0058 */ unsigned char ObjectCreation;
  /* 0x0059 */ unsigned char GenerateOnClose;
  /* 0x005a */ char __PADDING__[6];
} SE_AUDIT_INFO, *PSE_AUDIT_INFO; /* size: 0x0060 */

enum SYNCMGR_CONFLICT_ITEM_TYPE
{
};

typedef struct _SYSDBG_IO_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long AddressSpace;
} SYSDBG_IO_SPACE, *PSYSDBG_IO_SPACE; /* size: 0x0020 */

struct tagPAINTSTRUCT
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0008 */ int fErase;
  /* 0x000c */ struct tagRECT rcPaint;
  /* 0x001c */ int fRestore;
  /* 0x0020 */ int fIncUpdate;
  /* 0x0024 */ unsigned char rgbReserved[32];
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

class CBaseStorageVariant
{
}; /* size: 0x0018 */

enum SHELL_SEARCH_BAND_SEARCH_STATE
{
  SSBSS_DEFAULT = 0,
  SSBSS_NEW_PROVIDERS = 1,
  SSBSS_WEB = 2,
  SSBSS_FOLDER = 3,
};

typedef struct __vc_attributes::helper_attributes::process_earlyAttribute
{
} _vc_attributes::helper_attributes::process_earlyAttribute, *P_vc_attributes::helper_attributes::process_earlyAttribute; /* size: 0x0001 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWOFOStream* m_Data;
}; /* size: 0x0008 */

enum GUTTER_SLIDE_DIRECTION
{
  GSD_RIGHT = 0,
  GSD_LEFT = 1,
};

typedef struct __vc_attributes::helper_attributes::as_stringAttribute
{
} _vc_attributes::helper_attributes::as_stringAttribute, *P_vc_attributes::helper_attributes::as_stringAttribute; /* size: 0x0001 */

typedef struct _OSVERSIONINFOW
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
} OSVERSIONINFOW, *POSVERSIONINFOW; /* size: 0x0114 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_482;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_483;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_484;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA_2600; /* size: 0x0048 */

struct tagRAWKEYBOARD
{
  /* 0x0000 */ unsigned short MakeCode;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ unsigned short VKey;
  /* 0x0008 */ unsigned int Message;
  /* 0x000c */ unsigned long ExtraInformation;
}; /* size: 0x0010 */

enum tagPropPageOnApply
{
  PPOAACTION_CANCEL = 0,
  PPOAACTION_OK = 1,
  PPOAACTION_APPLY = 2,
};

class Windows::Internal::String
{
  /* 0x0000 */ struct HSTRING__* _hstring;
}; /* size: 0x0008 */

enum tagQueryUpdateAction
{
  QUA_ADD = 0,
  QUA_REMOVE = 1,
  QUA_CHANGE = 2,
};

typedef struct _CERT_X942_DH_VALIDATION_PARAMS
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB seed;
  /* 0x0018 */ unsigned long pgenCounter;
  /* 0x001c */ long __PADDING__[1];
} CERT_X942_DH_VALIDATION_PARAMS, *PCERT_X942_DH_VALIDATION_PARAMS; /* size: 0x0020 */

enum tagUISCB_FLAGS
{
  UISCBF_HASITEMSREADY = 1,
  UISCBF_ITEMSREADY = 2,
};

typedef struct __vc_attributes::helper_attributes::notify_atlprovAttribute
{
} _vc_attributes::helper_attributes::notify_atlprovAttribute, *P_vc_attributes::helper_attributes::notify_atlprovAttribute; /* size: 0x0001 */

typedef struct _SYSTEM_POOL_ENTRY
{
  /* 0x0000 */ unsigned char Allocated;
  /* 0x0001 */ unsigned char Spare0;
  /* 0x0002 */ unsigned short AllocatorBackTraceIndex;
  /* 0x0004 */ unsigned long Size;
  union
  {
    /* 0x0008 */ unsigned char Tag[4];
    /* 0x0008 */ unsigned long TagUlong;
    /* 0x0008 */ void* ProcessChargedQuota;
  }; /* size: 0x0008 */
} SYSTEM_POOL_ENTRY, *PSYSTEM_POOL_ENTRY; /* size: 0x0010 */

typedef struct _MODULE_TYPE_INFO
{
  /* 0x0000 */ unsigned short dataLength;
  /* 0x0002 */ unsigned short leaf;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} MODULE_TYPE_INFO, *PMODULE_TYPE_INFO; /* size: 0x0006 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >
{
}; /* size: 0x0008 */

struct HWND__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _tagCODEBASEHOLD
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_485;
  /* 0x0008 */ wchar_t* szDistUnit;
  /* 0x0010 */ wchar_t* szCodeBase;
  /* 0x0018 */ unsigned long dwVersionMS;
  /* 0x001c */ unsigned long dwVersionLS;
  /* 0x0020 */ unsigned long dwStyle;
  /* 0x0024 */ long __PADDING__[1];
} tagCODEBASEHOLD, *PtagCODEBASEHOLD; /* size: 0x0028 */

enum SWITCH_WINDOW_TYPE
{
  SWT_PROXY_WINDOW = 0,
  SWT_SPLASH_SCREEN = 1,
};

typedef struct _CRYPT_3DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[24];
  /* 0x0018 */ unsigned char IV[8];
  /* 0x0020 */ unsigned char Feedback[8];
} CRYPT_3DES_KEY_STATE, *PCRYPT_3DES_KEY_STATE; /* size: 0x0028 */

struct tagSOLE_AUTHENTICATION_SERVICE
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ wchar_t* pPrincipalName;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

enum TERMINATE_DOCUMENT
{
  Terminate_None = 0,
  Terminate_Detect = 1,
  Terminate_Received = 2,
};

typedef enum _SQM_TYPE
{
  SQM_TYPE_NONE = 0,
  SQM_TYPE_DWORD = 1,
  SQM_TYPE_STRING = 2,
  SQM_TYPE_DWORD64 = 3,
} SQM_TYPE, *PSQM_TYPE;

typedef struct _DRIVER_INFO_6W
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_486;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ wchar_t* pEnvironment;
  /* 0x0018 */ wchar_t* pDriverPath;
  /* 0x0020 */ wchar_t* pDataFile;
  /* 0x0028 */ wchar_t* pConfigFile;
  /* 0x0030 */ wchar_t* pHelpFile;
  /* 0x0038 */ wchar_t* pDependentFiles;
  /* 0x0040 */ wchar_t* pMonitorName;
  /* 0x0048 */ wchar_t* pDefaultDataType;
  /* 0x0050 */ wchar_t* pszzPreviousNames;
  /* 0x0058 */ struct _FILETIME ftDriverDate;
  /* 0x0060 */ unsigned __int64 dwlDriverVersion;
  /* 0x0068 */ wchar_t* pszMfgName;
  /* 0x0070 */ wchar_t* pszOEMUrl;
  /* 0x0078 */ wchar_t* pszHardwareID;
  /* 0x0080 */ wchar_t* pszProvider;
} DRIVER_INFO_6W, *PDRIVER_INFO_6W; /* size: 0x0088 */

typedef struct _DWORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned long alData[1];
} DWORD_BLOB, *PDWORD_BLOB; /* size: 0x0008 */

enum Ole32SQMFlags
{
  SixteenbitOLEUsage = 1,
  OLEDDEUsage = 2,
};

class CMarshalImplPStream
{
  /* 0x0000 */ long Padding_487[2];
  /* 0x0008 */ struct IPersistStream* m_pPS;
}; /* size: 0x0010 */

struct ICallingProcessInfo
{
}; /* size: 0x0008 */

struct tagWAVEOUTCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long dwFormats;
  /* 0x002c */ unsigned short wChannels;
  /* 0x002e */ unsigned short wReserved1;
  /* 0x0030 */ unsigned long dwSupport;
}; /* size: 0x0034 */

typedef struct _CRYPT_PROVIDERS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_488;
  /* 0x0008 */ wchar_t** rgpszProviders;
} CRYPT_PROVIDERS, *PCRYPT_PROVIDERS; /* size: 0x0010 */

struct tagCBTACTIVATESTRUCT
{
  /* 0x0000 */ int fMouse;
  /* 0x0004 */ long Padding_489;
  /* 0x0008 */ struct HWND__* hWndActive;
}; /* size: 0x0010 */

typedef struct _MONITOR_INFO_2W
{
  /* 0x0000 */ wchar_t* pName;
  /* 0x0008 */ wchar_t* pEnvironment;
  /* 0x0010 */ wchar_t* pDLLName;
} MONITOR_INFO_2W, *PMONITOR_INFO_2W; /* size: 0x0018 */

enum OLE_NOTIFICATION
{
  OLE_CHANGED = 0,
  OLE_SAVED = 1,
  OLE_CLOSED = 2,
  OLE_RENAMED = 3,
};

typedef struct __vc_attributes::helper_attributes::repeatableAttribute
{
} _vc_attributes::helper_attributes::repeatableAttribute, *P_vc_attributes::helper_attributes::repeatableAttribute; /* size: 0x0001 */

enum CNVTYP
{
  cnvtypNone = 0,
  cnvtypConvertTo = 1,
  cnvtypTreatAs = 2,
};

typedef struct _SYSTEM_WATCHDOG_TIMER_INFORMATION
{
  /* 0x0000 */ enum _WATCHDOG_INFORMATION_CLASS WdInfoClass;
  /* 0x0004 */ unsigned long DataValue;
} SYSTEM_WATCHDOG_TIMER_INFORMATION, *PSYSTEM_WATCHDOG_TIMER_INFORMATION; /* size: 0x0008 */

typedef struct _PERF_DATA_BLOCK
{
  /* 0x0000 */ wchar_t Signature[4];
  /* 0x0008 */ unsigned long LittleEndian;
  /* 0x000c */ unsigned long Version;
  /* 0x0010 */ unsigned long Revision;
  /* 0x0014 */ unsigned long TotalByteLength;
  /* 0x0018 */ unsigned long HeaderLength;
  /* 0x001c */ unsigned long NumObjectTypes;
  /* 0x0020 */ long DefaultObject;
  /* 0x0024 */ struct _SYSTEMTIME SystemTime;
  /* 0x0034 */ long Padding_490;
  /* 0x0038 */ union _LARGE_INTEGER PerfTime;
  /* 0x0040 */ union _LARGE_INTEGER PerfFreq;
  /* 0x0048 */ union _LARGE_INTEGER PerfTime100nSec;
  /* 0x0050 */ unsigned long SystemNameLength;
  /* 0x0054 */ unsigned long SystemNameOffset;
} PERF_DATA_BLOCK, *PPERF_DATA_BLOCK; /* size: 0x0058 */

typedef struct _QUERY_SERVICE_CONFIGW
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ long Padding_491;
  /* 0x0010 */ wchar_t* lpBinaryPathName;
  /* 0x0018 */ wchar_t* lpLoadOrderGroup;
  /* 0x0020 */ unsigned long dwTagId;
  /* 0x0024 */ long Padding_492;
  /* 0x0028 */ wchar_t* lpDependencies;
  /* 0x0030 */ wchar_t* lpServiceStartName;
  /* 0x0038 */ wchar_t* lpDisplayName;
} QUERY_SERVICE_CONFIGW, *PQUERY_SERVICE_CONFIGW; /* size: 0x0040 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<14>,Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::Nil>,0,0>
{
}; /* size: 0x0008 */

enum CHK
{
  chkDdeSrvr = 4660,
  chkDefClient = 22136,
};

typedef struct _SYSDBG_TRIAGE_DUMP
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BugCheckCode;
  /* 0x0008 */ unsigned __int64 BugCheckParam1;
  /* 0x0010 */ unsigned __int64 BugCheckParam2;
  /* 0x0018 */ unsigned __int64 BugCheckParam3;
  /* 0x0020 */ unsigned __int64 BugCheckParam4;
  /* 0x0028 */ unsigned long ProcessHandles;
  /* 0x002c */ unsigned long ThreadHandles;
  /* 0x0030 */ void** Handles;
} SYSDBG_TRIAGE_DUMP, *PSYSDBG_TRIAGE_DUMP; /* size: 0x0038 */

typedef struct _SYSTEM_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfThreads;
  /* 0x0008 */ union _LARGE_INTEGER WorkingSetPrivateSize;
  /* 0x0010 */ unsigned long HardFaultCount;
  /* 0x0014 */ unsigned long NumberOfThreadsHighWatermark;
  /* 0x0018 */ unsigned __int64 CycleTime;
  /* 0x0020 */ union _LARGE_INTEGER CreateTime;
  /* 0x0028 */ union _LARGE_INTEGER UserTime;
  /* 0x0030 */ union _LARGE_INTEGER KernelTime;
  /* 0x0038 */ struct _UNICODE_STRING ImageName;
  /* 0x0048 */ long BasePriority;
  /* 0x004c */ long Padding_493;
  /* 0x0050 */ void* UniqueProcessId;
  /* 0x0058 */ void* InheritedFromUniqueProcessId;
  /* 0x0060 */ unsigned long HandleCount;
  /* 0x0064 */ unsigned long SessionId;
  /* 0x0068 */ unsigned __int64 UniqueProcessKey;
  /* 0x0070 */ unsigned __int64 PeakVirtualSize;
  /* 0x0078 */ unsigned __int64 VirtualSize;
  /* 0x0080 */ unsigned long PageFaultCount;
  /* 0x0084 */ long Padding_494;
  /* 0x0088 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0090 */ unsigned __int64 WorkingSetSize;
  /* 0x0098 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x00a0 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x00a8 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x00b0 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x00b8 */ unsigned __int64 PagefileUsage;
  /* 0x00c0 */ unsigned __int64 PeakPagefileUsage;
  /* 0x00c8 */ unsigned __int64 PrivatePageCount;
  /* 0x00d0 */ union _LARGE_INTEGER ReadOperationCount;
  /* 0x00d8 */ union _LARGE_INTEGER WriteOperationCount;
  /* 0x00e0 */ union _LARGE_INTEGER OtherOperationCount;
  /* 0x00e8 */ union _LARGE_INTEGER ReadTransferCount;
  /* 0x00f0 */ union _LARGE_INTEGER WriteTransferCount;
  /* 0x00f8 */ union _LARGE_INTEGER OtherTransferCount;
} SYSTEM_PROCESS_INFORMATION, *PSYSTEM_PROCESS_INFORMATION; /* size: 0x0100 */

struct IClassFactory
{
}; /* size: 0x0008 */

enum ProcessToken::UserHiveOkState
{
  UserHiveOkStateNotDetermined = 0,
  UserHiveIsOk = 1,
  UserHiveIsNotOk = 2,
};

class CObjServer
{
  /* 0x0000 */ long Padding_495[2];
  /* 0x0008 */ class CStdIdentity* _pStdID;
  /* 0x0010 */ struct _GUID _ipid;
  /* 0x0020 */ unsigned __int64 _oxid;
  /* 0x0028 */ long _cRefs;
}; /* size: 0x0030 */

enum FormatMatchFlag
{
  FORMAT_NOTFOUND = 1,
  FORMAT_BADMATCH = 2,
  FORMAT_GOODMATCH = 4,
};

enum CDragDefaultCursors::CURSOR_ID
{
  NO_DROP = 0,
  MOVE_DROP = 1,
  COPY_DROP = 2,
  LINK_DROP = 3,
};

class LargeIntRegMultiply<unsigned __int64,__int64>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_ENCODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_496;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
} CRYPT_ENCODE_PARA, *PCRYPT_ENCODE_PARA; /* size: 0x0018 */

struct tagRPC_ERROR_ENUM_HANDLE
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ long Padding_497;
  /* 0x0008 */ void* CurrentPos;
  /* 0x0010 */ void* Head;
}; /* size: 0x0018 */

enum CDragDefaultCursors::SCROLL_TYPE
{
  NO_SCROLL = 0,
  SCROLL = 1,
};

struct tagACTCTXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* lpSource;
  /* 0x0010 */ unsigned short wProcessorArchitecture;
  /* 0x0012 */ unsigned short wLangId;
  /* 0x0014 */ long Padding_498;
  /* 0x0018 */ const wchar_t* lpAssemblyDirectory;
  /* 0x0020 */ const wchar_t* lpResourceName;
  /* 0x0028 */ const wchar_t* lpApplicationName;
  /* 0x0030 */ struct HINSTANCE__* hModule;
}; /* size: 0x0038 */

struct tagMONCBSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned long dwTime;
  /* 0x0008 */ void* hTask;
  /* 0x0010 */ unsigned long dwRet;
  /* 0x0014 */ unsigned int wType;
  /* 0x0018 */ unsigned int wFmt;
  /* 0x001c */ long Padding_499;
  /* 0x0020 */ struct HCONV__* hConv;
  /* 0x0028 */ struct HSZ__* hsz1;
  /* 0x0030 */ struct HSZ__* hsz2;
  /* 0x0038 */ struct HDDEDATA__* hData;
  /* 0x0040 */ unsigned __int64 dwData1;
  /* 0x0048 */ unsigned __int64 dwData2;
  /* 0x0050 */ struct tagCONVCONTEXT cc;
  /* 0x0074 */ unsigned long cbData;
  /* 0x0078 */ unsigned long Data[8];
}; /* size: 0x0098 */

enum TXTTYPE
{
  TT_UNICODE = 0,
  TT_ANSI = 1,
};

typedef struct _UNWIND_HISTORY_TABLE_ENTRY
{
  /* 0x0000 */ unsigned __int64 ImageBase;
  /* 0x0008 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry;
} UNWIND_HISTORY_TABLE_ENTRY, *PUNWIND_HISTORY_TABLE_ENTRY; /* size: 0x0010 */

struct tagRemHGLOBAL
{
  /* 0x0000 */ long fNullHGlobal;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char data[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _SYSTEM_ALARM_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_ALARM_OBJECT_ACE, *PSYSTEM_ALARM_OBJECT_ACE; /* size: 0x0030 */

enum ios::io_state
{
  goodbit = 0,
  eofbit = 1,
  failbit = 2,
  badbit = 4,
};

typedef struct __vc_attributes::first_isAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::first_isAttribute, *P_vc_attributes::first_isAttribute; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_45
{
  skipws = 1,
  left = 2,
  right = 4,
  internal = 8,
  dec = 16,
  oct = 32,
  hex = 64,
  showbase = 128,
  showpoint = 256,
  uppercase = 512,
  showpos = 1024,
  scientific = 2048,
  fixed = 4096,
  unitbuf = 8192,
  stdio = 16384,
} TAG_UNNAMED_45, *PTAG_UNNAMED_45;

enum ProcessToken::AppContainerState
{
  NotDetermined = 0,
  AppContainer = 1,
  NotAppContainer = 2,
};

struct IXMLDOMComment
{
}; /* size: 0x0008 */

enum ios::open_mode
{
  in = 1,
  out = 2,
  ate = 4,
  app = 8,
  trunc = 16,
  nocreate = 32,
  noreplace = 64,
  binary = 128,
};

typedef union _GDI_NONREMOTE::__MIDL_IWinTypes_0002
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _DWORD_BLOB* hRemote;
  }; /* size: 0x0008 */
} GDI_NONREMOTE::__MIDL_IWinTypes_0002, *PGDI_NONREMOTE::__MIDL_IWinTypes_0002; /* size: 0x0008 */

enum AdditionState
{
  AdditionState_CastIntCheckMax = 0,
  AdditionState_CastUintCheckOverflow = 1,
  AdditionState_CastUintCheckOverflowMax = 2,
  AdditionState_CastUint64CheckOverflow = 3,
  AdditionState_CastUint64CheckOverflowMax = 4,
  AdditionState_CastIntCheckMinMax = 5,
  AdditionState_CastInt64CheckMinMax = 6,
  AdditionState_CastInt64CheckMax = 7,
  AdditionState_CastUint64CheckMinMax = 8,
  AdditionState_CastUint64CheckMinMax2 = 9,
  AdditionState_CastInt64CheckOverflow = 10,
  AdditionState_CastInt64CheckOverflowMinMax = 11,
  AdditionState_CastInt64CheckOverflowMax = 12,
  AdditionState_ManualCheckInt64Uint64 = 13,
  AdditionState_ManualCheck = 14,
  AdditionState_Error = 15,
};

struct IInternetPriority
{
}; /* size: 0x0008 */

class CBasedILockBytesPtrPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

enum ios::seek_dir
{
  beg = 0,
  cur = 1,
  end = 2,
};

typedef struct __vc_attributes::uniqueAttribute
{
} _vc_attributes::uniqueAttribute, *P_vc_attributes::uniqueAttribute; /* size: 0x0001 */

enum COleCache::GetExtent::__l2::tagCacheType
{
  CACHETYPE_NONE = 0,
  CACHETYPE_NODATA = 1,
  CACHETYPE_ONSTOP = 2,
  CACHETYPE_ONSAVE = 3,
  CACHETYPE_NORMAL = 4,
};

typedef struct __vc_attributes::sourceAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::sourceAttribute, *P_vc_attributes::sourceAttribute; /* size: 0x0008 */

struct IStandardActivator
{
}; /* size: 0x0008 */

typedef enum _TAG_UNNAMED_46
{
  isSigned = 1,
  is64Bit = 0,
  is32Bit = 1,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 1,
  isUint32 = 0,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 32,
  isBool = 0,
} TAG_UNNAMED_46, *PTAG_UNNAMED_46;

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY Linkage;
  /* 0x0010 */ unsigned __int64 Signature;
} RTL_DYNAMIC_HASH_TABLE_ENTRY, *PRTL_DYNAMIC_HASH_TABLE_ENTRY; /* size: 0x0018 */

typedef struct _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
{
  /* 0x0000 */ struct _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry;
  /* 0x0018 */ struct _LIST_ENTRY* ChainHead;
  /* 0x0020 */ unsigned long BucketIndex;
  /* 0x0024 */ long __PADDING__[1];
} RTL_DYNAMIC_HASH_TABLE_ENUMERATOR, *PRTL_DYNAMIC_HASH_TABLE_ENUMERATOR; /* size: 0x0028 */

struct tagBITMAPCOREHEADER
{
  /* 0x0000 */ unsigned long bcSize;
  /* 0x0004 */ unsigned short bcWidth;
  /* 0x0006 */ unsigned short bcHeight;
  /* 0x0008 */ unsigned short bcPlanes;
  /* 0x000a */ unsigned short bcBitCount;
}; /* size: 0x000c */

enum CNFFMappedStream::enumCREATE_NEW_UPDATE_STREAM
{
  CREATE_NEW_UPDATE_STREAM = 1,
  DONT_CREATE_NEW_UPDATE_STREAM = 2,
};

enum tagCLIPWINDOWFLAGS
{
  CLIP_QUERY = 0,
  CLIP_CREATEIFNOTTHERE = 1,
};

struct tagTLIBATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ enum tagSYSKIND syskind;
  /* 0x0018 */ unsigned short wMajorVerNum;
  /* 0x001a */ unsigned short wMinorVerNum;
  /* 0x001c */ unsigned short wLibFlags;
  /* 0x001e */ char __PADDING__[2];
}; /* size: 0x0020 */

enum tagCLIPWNDFLAGS
{
  CLIPWND_REMOVEFROMCLIPBOARD = 1,
  CLIPWND_IGNORECLIPBOARD = 2,
  CLIPWND_DONTCALLAPP = 4,
};

typedef struct __vc_attributes::customAttribute
{
  /* 0x0000 */ char* value;
} _vc_attributes::customAttribute, *P_vc_attributes::customAttribute; /* size: 0x0008 */

typedef struct _SERVICE_STATUS_PROCESS
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwCurrentState;
  /* 0x0008 */ unsigned long dwControlsAccepted;
  /* 0x000c */ unsigned long dwWin32ExitCode;
  /* 0x0010 */ unsigned long dwServiceSpecificExitCode;
  /* 0x0014 */ unsigned long dwCheckPoint;
  /* 0x0018 */ unsigned long dwWaitHint;
  /* 0x001c */ unsigned long dwProcessId;
  /* 0x0020 */ unsigned long dwServiceFlags;
} SERVICE_STATUS_PROCESS, *PSERVICE_STATUS_PROCESS; /* size: 0x0024 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ char* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
  /* 0x0034 */ long __PADDING__[1];
} ENUM_SERVICE_STATUS_PROCESSA, *PENUM_SERVICE_STATUS_PROCESSA; /* size: 0x0038 */

typedef enum _TAG_UNNAMED_47
{
  isBothSigned = 0,
  isBothUnsigned = 1,
  isLikeSigned = 1,
  isCastOK = 1,
  isBothLT32Bit = 0,
  isBothLT64Bit = 1,
} TAG_UNNAMED_47, *PTAG_UNNAMED_47;

typedef struct _PROCESS_DEVICEMAP_INFORMATION
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION, *PPROCESS_DEVICEMAP_INFORMATION; /* size: 0x0028 */

enum tagGETCLSIDFLAGS
{
  USE_NORMAL_CLSID = 1,
  USE_STANDARD_LINK = 2,
};

enum AbsMethod
{
  AbsMethodInt = 0,
  AbsMethodInt64 = 1,
  AbsMethodNoop = 2,
};

typedef struct _IO_ERROR_LOG_PACKET
{
  /* 0x0000 */ unsigned char MajorFunctionCode;
  /* 0x0001 */ unsigned char RetryCount;
  /* 0x0002 */ unsigned short DumpDataSize;
  /* 0x0004 */ unsigned short NumberOfStrings;
  /* 0x0006 */ unsigned short StringOffset;
  /* 0x0008 */ unsigned short EventCategory;
  /* 0x000a */ char Padding_500[2];
  /* 0x000c */ long ErrorCode;
  /* 0x0010 */ unsigned long UniqueErrorValue;
  /* 0x0014 */ long FinalStatus;
  /* 0x0018 */ unsigned long SequenceNumber;
  /* 0x001c */ unsigned long IoControlCode;
  /* 0x0020 */ union _LARGE_INTEGER DeviceOffset;
  /* 0x0028 */ unsigned long DumpData[1];
  /* 0x002c */ long __PADDING__[1];
} IO_ERROR_LOG_PACKET, *PIO_ERROR_LOG_PACKET; /* size: 0x0030 */

class IMappedStream
{
}; /* size: 0x0008 */

enum SHELL_LINK_DATA_FLAGS
{
  SLDF_DEFAULT = 0,
  SLDF_HAS_ID_LIST = 1,
  SLDF_HAS_LINK_INFO = 2,
  SLDF_HAS_NAME = 4,
  SLDF_HAS_RELPATH = 8,
  SLDF_HAS_WORKINGDIR = 16,
  SLDF_HAS_ARGS = 32,
  SLDF_HAS_ICONLOCATION = 64,
  SLDF_UNICODE = 128,
  SLDF_FORCE_NO_LINKINFO = 256,
  SLDF_HAS_EXP_SZ = 512,
  SLDF_RUN_IN_SEPARATE = 1024,
  SLDF_HAS_DARWINID = 4096,
  SLDF_RUNAS_USER = 8192,
  SLDF_HAS_EXP_ICON_SZ = 16384,
  SLDF_NO_PIDL_ALIAS = 0xffff8000,
  SLDF_FORCE_UNCNAME = 0x10000,
  SLDF_RUN_WITH_SHIMLAYER = 0x20000,
  SLDF_FORCE_NO_LINKTRACK = 0x40000,
  SLDF_ENABLE_TARGET_METADATA = 0x80000,
  SLDF_DISABLE_LINK_PATH_TRACKING = 0x100000,
  SLDF_DISABLE_KNOWNFOLDER_RELATIVE_TRACKING = 0x200000,
  SLDF_NO_KF_ALIAS = 0x400000,
  SLDF_ALLOW_LINK_TO_LINK = 0x800000,
  SLDF_UNALIAS_ON_SAVE = 0x1000000,
  SLDF_PREFER_ENVIRONMENT_PATH = 0x2000000,
  SLDF_KEEP_LOCAL_IDLIST_FOR_UNC_TARGET = 0x4000000,
  SLDF_PERSIST_VOLUME_ID_RELATIVE = 0x8000000,
  SLDF_VALID = 0xffff7ff,
  SLDF_RESERVED = -2147483648,
};

typedef struct _BCRYPT_ALGORITHM_IDENTIFIER
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ unsigned long dwClass;
  /* 0x000c */ unsigned long dwFlags;
} BCRYPT_ALGORITHM_IDENTIFIER, *PBCRYPT_ALGORITHM_IDENTIFIER; /* size: 0x0010 */

typedef struct _CRYPT_PSOURCE_ALGORITHM
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncodingParameters;
} CRYPT_PSOURCE_ALGORITHM, *PCRYPT_PSOURCE_ALGORITHM; /* size: 0x0018 */

typedef struct _CRYPT_RSAES_OAEP_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x0038 */ struct _CRYPT_PSOURCE_ALGORITHM PSourceAlgorithm;
} CRYPT_RSAES_OAEP_PARAMETERS, *PCRYPT_RSAES_OAEP_PARAMETERS; /* size: 0x0050 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame>
{
}; /* size: 0x0001 */

enum KNOWN_FOLDER_FLAG
{
  KF_FLAG_DEFAULT = 0,
  KF_FLAG_NO_APPCONTAINER_REDIRECTION = 0x10000,
  KF_FLAG_CREATE = 0xffff8000,
  KF_FLAG_DONT_VERIFY = 16384,
  KF_FLAG_DONT_UNEXPAND = 8192,
  KF_FLAG_NO_ALIAS = 4096,
  KF_FLAG_INIT = 2048,
  KF_FLAG_DEFAULT_PATH = 1024,
  KF_FLAG_NOT_PARENT_RELATIVE = 512,
  KF_FLAG_SIMPLE_IDLIST = 256,
  KF_FLAG_ALIAS_ONLY = -2147483648,
};

typedef struct __vc_attributes::includelibAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::includelibAttribute, *P_vc_attributes::includelibAttribute; /* size: 0x0008 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlRORAStream* m_Data;
}; /* size: 0x0008 */

enum AsycImageDataMembers
{
  AFM_IMAGE_HDC = 0,
  AFM_IMAGE_HBITMAP = 1,
  AFM_IMAGE_HPALETTE = 2,
  AFM_MASK_HDC = 3,
  AFM_MASK_HBITMAP = 4,
  AFM_MAX = 5,
};

typedef struct _TRANSACTION_NOTIFICATION
{
  /* 0x0000 */ void* TransactionKey;
  /* 0x0008 */ unsigned long TransactionNotification;
  /* 0x000c */ long Padding_501;
  /* 0x0010 */ union _LARGE_INTEGER TmVirtualClock;
  /* 0x0018 */ unsigned long ArgumentLength;
  /* 0x001c */ long __PADDING__[1];
} TRANSACTION_NOTIFICATION, *PTRANSACTION_NOTIFICATION; /* size: 0x0020 */

struct tagEMRFILLRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ unsigned char RgnData[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE
{
  /* 0x0000 */ unsigned long Flags;
} PROCESS_HANDLE_TRACING_ENABLE, *PPROCESS_HANDLE_TRACING_ENABLE; /* size: 0x0004 */

enum RO_ERROR_REPORTING_FLAGS
{
  RO_ERROR_REPORTING_NONE = 0,
  RO_ERROR_REPORTING_SUPPRESSEXCEPTIONS = 1,
  RO_ERROR_REPORTING_FORCEEXCEPTIONS = 2,
  RO_ERROR_REPORTING_USESETERRORINFO = 4,
  RO_ERROR_REPORTING_SUPPRESSSETERRORINFO = 8,
};

typedef enum _TAG_UNNAMED_48
{
  IntZone_UintLT32_UintLT32 = 0,
  IntZone_Uint32_UintLT64 = 1,
  IntZone_UintLT32_Uint32 = 0,
  IntZone_Uint64_Uint = 0,
  IntZone_UintLT64_Uint64 = 0,
  IntZone_UintLT32_IntLT32 = 0,
  IntZone_Uint32_IntLT64 = 0,
  IntZone_UintLT32_Int32 = 0,
  IntZone_Uint64_Int = 0,
  IntZone_UintLT64_Int64 = 0,
  IntZone_Uint64_Int64 = 0,
  IntZone_IntLT32_IntLT32 = 0,
  IntZone_Int32_IntLT64 = 0,
  IntZone_IntLT32_Int32 = 0,
  IntZone_Int64_Int64 = 0,
  IntZone_Int64_Int = 0,
  IntZone_IntLT64_Int64 = 0,
  IntZone_IntLT32_UintLT32 = 0,
  IntZone_Int32_UintLT32 = 0,
  IntZone_IntLT64_Uint32 = 0,
  IntZone_Int64_UintLT64 = 0,
  IntZone_Int_Uint64 = 0,
  IntZone_Int64_Uint64 = 0,
} TAG_UNNAMED_48, *PTAG_UNNAMED_48;

struct IRemUnknown2
{
}; /* size: 0x0008 */

struct IViewObjectEx
{
}; /* size: 0x0008 */

enum ABI::Windows::Foundation::Diagnostics::RoErrorReportingFlags
{
  None = 0,
  SuppressExceptions = 1,
  ForceExceptions = 2,
  UseSetErrorInfo = 4,
  SuppressSetErrorInfo = 8,
};

struct KnownClsidAndScope
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long registrationScope;
}; /* size: 0x0014 */

typedef union _MCI_STATS
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short McaErrorCode;
      /* 0x0002 */ unsigned short ModelErrorCode;
      struct /* bitfield */
      {
        /* 0x0004 */ unsigned long OtherInformation : 25; /* bit position: 0 */
        /* 0x0004 */ unsigned long ContextCorrupt : 1; /* bit position: 25 */
        /* 0x0004 */ unsigned long AddressValid : 1; /* bit position: 26 */
        /* 0x0004 */ unsigned long MiscValid : 1; /* bit position: 27 */
        /* 0x0004 */ unsigned long ErrorEnabled : 1; /* bit position: 28 */
        /* 0x0004 */ unsigned long UncorrectedError : 1; /* bit position: 29 */
        /* 0x0004 */ unsigned long StatusOverFlow : 1; /* bit position: 30 */
        /* 0x0004 */ unsigned long Valid : 1; /* bit position: 31 */
      }; /* bitfield */
    } /* size: 0x0008 */ MciStatus;
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} MCI_STATS, *PMCI_STATS; /* size: 0x0008 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CBoolFrame>
{
}; /* size: 0x0001 */

enum PLM_TASKCOMPLETION_CATEGORY_FLAGS
{
  PT_TC_NONE = 0,
  PT_TC_PBM = 1,
  PT_TC_FILEOPENPICKER = 2,
  PT_TC_SHARING = 4,
  PT_TC_PRINTING = 8,
  PT_TC_DEVICE_SYNC = 16,
  PT_TC_CAMERA_DCA = 32,
  PT_TC_PRINTER_DCA = 64,
  PT_TC_PLAYTO = 128,
  PT_TC_FILESAVEPICKER = 256,
  PT_TC_CONTACTPICKER = 512,
  PT_TC_CACHEDFILEUPDATER_LOCAL = 1024,
  PT_TC_CACHEDFILEUPDATER_REMOTE = 2048,
  PT_TC_WER_CONSENT = 4096,
  PT_TC_ERROR_REPORT = 8192,
  PT_TC_DATA_PACKAGE = 16384,
  PT_TC_BROKERED_CLIPBOARD = 0xffff8000,
  PT_TC_CRASHDUMP = 0x10000,
  PT_TC_STREAMEDFILE = 0x20000,
  PT_TC_CS_NETWORK = 0x40000,
  PT_TC_PBM_COMMUNICATION = 0x80000,
  PT_TC_KERNEL_MODE = 0x20000000,
  PT_TC_REALTIMECOMM = 0x40000000,
  PT_TC_CALLERVALID = 0xfffff,
  PT_TC_ALLVALID = 0x600fffff,
};

struct IPersistStorage
{
}; /* size: 0x0008 */

struct Windows::Rtl::IRtlUtf16LEStringBuilder
{
}; /* size: 0x0008 */

enum ComparisonMethod
{
  ComparisonMethod_Ok = 0,
  ComparisonMethod_CastInt = 1,
  ComparisonMethod_CastInt64 = 2,
  ComparisonMethod_UnsignedT = 3,
  ComparisonMethod_UnsignedU = 4,
};

enum WINDOWCOMPOSITIONATTRIB
{
  WCA_UNDEFINED = 0,
  WCA_NCRENDERING_ENABLED = 1,
  WCA_NCRENDERING_POLICY = 2,
  WCA_TRANSITIONS_FORCEDISABLED = 3,
  WCA_ALLOW_NCPAINT = 4,
  WCA_CAPTION_BUTTON_BOUNDS = 5,
  WCA_NONCLIENT_RTL_LAYOUT = 6,
  WCA_FORCE_ICONIC_REPRESENTATION = 7,
  WCA_EXTENDED_FRAME_BOUNDS = 8,
  WCA_HAS_ICONIC_BITMAP = 9,
  WCA_THEME_ATTRIBUTES = 10,
  WCA_NCRENDERING_EXILED = 11,
  WCA_NCADORNMENTINFO = 12,
  WCA_EXCLUDED_FROM_LIVEPREVIEW = 13,
  WCA_VIDEO_OVERLAY_ACTIVE = 14,
  WCA_FORCE_ACTIVEWINDOW_APPEARANCE = 15,
  WCA_DISALLOW_PEEK = 16,
  WCA_CLOAK = 17,
  WCA_CLOAKED = 18,
  WCA_ACCENT_POLICY = 19,
  WCA_ACCENT_TRANSFORM = 20,
  WCA_FREEZE_REPRESENTATION = 21,
  WCA_LAST = 22,
};

typedef struct _stat32i64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_502[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_503;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ long st_atime;
  /* 0x0024 */ long st_mtime;
  /* 0x0028 */ long st_ctime;
  /* 0x002c */ long __PADDING__[1];
} stat32i64, *Pstat32i64; /* size: 0x0030 */

struct tagGCP_RESULTSA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_504;
  /* 0x0008 */ char* lpOutString;
  /* 0x0010 */ unsigned int* lpOrder;
  /* 0x0018 */ int* lpDx;
  /* 0x0020 */ int* lpCaretPos;
  /* 0x0028 */ char* lpClass;
  /* 0x0030 */ wchar_t* lpGlyphs;
  /* 0x0038 */ unsigned int nGlyphs;
  /* 0x003c */ int nMaxFit;
}; /* size: 0x0040 */

struct ENTRY
{
  /* 0x0000 */ const wchar_t* sz;
  /* 0x0008 */ const struct _GUID* pclsid;
}; /* size: 0x0010 */

enum IMMERSIVELAUNCHERSCENARIO
{
  ILS_NONE = -1,
  ILS_LOGIN = 0,
  ILS_SHOW = 1,
  ILS_SHOW_DWM_TRANSITION = 2,
  ILS_ORIENTATIONCHANGE = 3,
  ILS_DISMISS = 4,
  ILS_HIDE = 5,
  ILS_HIDE_DWM_TRANSITION = 6,
  ILS_HIDE_BY_APP_LAUNCH = 7,
  ILS_HIDE_BY_DESKTOP_TILE_LAUNCH = 8,
  ILS_RESET = 9,
  ILS_APPS_FIRST = 10,
  ILS_APPS_SHOW = 10,
  ILS_APPS_HIDE = 11,
  ILS_APPS_VIEW_CHANGE = 12,
  ILS_APPS_USER_SEES_START_VIEW_ENTER = 13,
  ILS_APPS_USER_SEES_START_VIEW_EXIT = 14,
  ILS_APPS_MAX = 15,
  ILS_MAX = 15,
};

class CVerifierTlsData;

enum tagDHFlags
{
  DH_SAME_AS_LOAD = 1,
  DH_CONTAINED_OBJECT = 2,
  DH_LOCKED_CONTAINER = 4,
  DH_FORCED_RUNNING = 8,
  DH_EMBEDDING = 16,
  DH_INIT_NEW = 32,
  DH_STATIC = 64,
  DH_INPROC_HANDLER = 128,
  DH_DELAY_CREATE = 256,
  DH_COM_OUTEROBJECT = 512,
  DH_UNMARSHALED = 1024,
  DH_CLEANEDUP = 2048,
  DH_OLE1SERVER = 4096,
  DH_APICREATE = 8192,
};

typedef struct _TRANSACTION_PROPERTIES_INFORMATION
{
  /* 0x0000 */ unsigned long IsolationLevel;
  /* 0x0004 */ unsigned long IsolationFlags;
  /* 0x0008 */ union _LARGE_INTEGER Timeout;
  /* 0x0010 */ unsigned long Outcome;
  /* 0x0014 */ unsigned long DescriptionLength;
  /* 0x0018 */ wchar_t Description[1];
  /* 0x001a */ char __PADDING__[6];
} TRANSACTION_PROPERTIES_INFORMATION, *PTRANSACTION_PROPERTIES_INFORMATION; /* size: 0x0020 */

enum MACPICTFAILUREREASONS
{
  MACPICTUNSUPPORTED = 0,
  MACPICTCONVERSIONDLLNOTFOUND = 1,
};

enum ELEVATION_REASON
{
  ELEVATION_REASON_APPCOMPAT_EXPLICIT = 0,
  ELEVATION_REASON_APPCOMPAT_HEURISTIC = 1,
  ELEVATION_REASON_FUSION = 2,
  ELEVATION_REASON_INSTALLER = 3,
  ELEVATION_REASON_CLSID = 4,
  ELEVATION_REASON_MSI = 5,
  ELEVATION_REASON_REQUEST = 6,
  ELEVATION_REASON_AXIS = 7,
  ELEVATION_REASON_NUM_REASONS = 8,
};

enum tagEMFWRITETYPE
{
  WRITE_AS_WMF = 13,
  WRITE_AS_EMF = 17,
};

class CTrackingCompositeMoniker
{
  /* 0x0000 */ long Padding_505[2];
  /* 0x0008 */ class CCompositeMoniker* _pCCM;
}; /* size: 0x0010 */

class CCompositeMoniker
{
  /* 0x0000 */ long Padding_506[10];
  /* 0x0028 */ class CTrackingCompositeMoniker _tcm;
  /* 0x0038 */ struct IMoniker* m_pmkLeft;
  /* 0x0040 */ struct IMoniker* m_pmkRight;
  /* 0x0048 */ int m_fReduced;
  /* 0x004c */ int m_fReduceForced;
}; /* size: 0x0050 */

struct HKL__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CStreamChunkList
{
  /* 0x0000 */ unsigned long _cMaxChunks;
  /* 0x0004 */ unsigned long _cChunks;
  /* 0x0008 */ struct CStreamChunk* _ascnk;
  /* 0x0010 */ unsigned char _fDelete;
}; /* size: 0x0018 */

struct IComProcessInfo2
{
}; /* size: 0x0008 */

struct IActivationProperties
{
}; /* size: 0x0008 */

enum SubtractionState
{
  SubtractionState_BothUnsigned = 0,
  SubtractionState_CastIntCheckMinMax = 1,
  SubtractionState_CastIntCheckMin = 2,
  SubtractionState_CastInt64CheckMinMax = 3,
  SubtractionState_CastInt64CheckMin = 4,
  SubtractionState_Uint64Int = 5,
  SubtractionState_UintInt64 = 6,
  SubtractionState_Int64Int = 7,
  SubtractionState_IntInt64 = 8,
  SubtractionState_Int64Uint = 9,
  SubtractionState_IntUint64 = 10,
  SubtractionState_Int64Uint64 = 11,
  SubtractionState_BothUnsigned2 = 12,
  SubtractionState_CastIntCheckMinMax2 = 13,
  SubtractionState_CastInt64CheckMinMax2 = 14,
  SubtractionState_Uint64Int2 = 15,
  SubtractionState_UintInt642 = 16,
  SubtractionState_Int64Int2 = 17,
  SubtractionState_IntInt642 = 18,
  SubtractionState_Int64Uint2 = 19,
  SubtractionState_IntUint642 = 20,
  SubtractionState_Int64Uint642 = 21,
  SubtractionState_Error = 22,
};

typedef struct _NDR64_BIND_CONTEXT
{
  /* 0x0000 */ unsigned char HandleType;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short StackOffset;
  /* 0x0004 */ unsigned char RoutineIndex;
  /* 0x0005 */ unsigned char Ordinal;
} NDR64_BIND_CONTEXT, *PNDR64_BIND_CONTEXT; /* size: 0x0006 */

typedef struct _NDR64_BIND_AND_NOTIFY_EXTENSION
{
  /* 0x0000 */ struct _NDR64_BIND_CONTEXT Binding;
  /* 0x0006 */ unsigned short NotifyIndex;
} NDR64_BIND_AND_NOTIFY_EXTENSION, *PNDR64_BIND_AND_NOTIFY_EXTENSION; /* size: 0x0008 */

typedef struct __midl_frag96_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
} _midl_frag96_t, *P_midl_frag96_t; /* size: 0x00b0 */

typedef enum _TAG_UNNAMED_49
{
  None = 0,
  Relative = 1,
  Ids = 2,
  Absolute = 3,
} TAG_UNNAMED_49, *PTAG_UNNAMED_49;

enum ProcessToken::SysAppIdState
{
  SysAppIdNotDetermined = 0,
  SysAppIdPresent = 1,
  SysAppIdAbsent = 2,
};

typedef struct _PEBS_DS_SAVE_AREA
{
  /* 0x0000 */ unsigned __int64 BtsBufferBase;
  /* 0x0008 */ unsigned __int64 BtsIndex;
  /* 0x0010 */ unsigned __int64 BtsAbsoluteMaximum;
  /* 0x0018 */ unsigned __int64 BtsInterruptThreshold;
  /* 0x0020 */ unsigned __int64 PebsBufferBase;
  /* 0x0028 */ unsigned __int64 PebsIndex;
  /* 0x0030 */ unsigned __int64 PebsAbsoluteMaximum;
  /* 0x0038 */ unsigned __int64 PebsInterruptThreshold;
  /* 0x0040 */ unsigned __int64 PebsCounterReset0;
  /* 0x0048 */ unsigned __int64 PebsCounterReset1;
  /* 0x0050 */ unsigned __int64 PebsCounterReset2;
  /* 0x0058 */ unsigned __int64 PebsCounterReset3;
} PEBS_DS_SAVE_AREA, *PPEBS_DS_SAVE_AREA; /* size: 0x0060 */

typedef enum _TAG_UNNAMED_50
{
  method = 0,
} TAG_UNNAMED_50, *PTAG_UNNAMED_50;

typedef enum _TAG_UNNAMED_51
{
  isSigned = 0,
  is64Bit = 0,
  is32Bit = 1,
  is16Bit = 0,
  is8Bit = 0,
  isLT32Bit = 0,
  isLT64Bit = 1,
  isInt8 = 0,
  isUint8 = 0,
  isInt16 = 0,
  isUint16 = 0,
  isInt32 = 0,
  isUint32 = 1,
  isInt64 = 0,
  isUint64 = 0,
  bitCount = 32,
  isBool = 0,
} TAG_UNNAMED_51, *PTAG_UNNAMED_51;

class Windows::Rtl::AutoToken
{
}; /* size: 0x0008 */

enum MultiplicationState
{
  MultiplicationState_CastInt = 0,
  MultiplicationState_CastInt64 = 1,
  MultiplicationState_CastUint = 2,
  MultiplicationState_CastUint64 = 3,
  MultiplicationState_Uint64Uint = 4,
  MultiplicationState_Uint64Uint64 = 5,
  MultiplicationState_Uint64Int = 6,
  MultiplicationState_Uint64Int64 = 7,
  MultiplicationState_UintUint64 = 8,
  MultiplicationState_UintInt64 = 9,
  MultiplicationState_Int64Uint = 10,
  MultiplicationState_Int64Int64 = 11,
  MultiplicationState_Int64Int = 12,
  MultiplicationState_IntUint64 = 13,
  MultiplicationState_IntInt64 = 14,
  MultiplicationState_Int64Uint64 = 15,
  MultiplicationState_Error = 16,
};

struct pvalueA
{
  /* 0x0000 */ char* pv_valuename;
  /* 0x0008 */ int pv_valuelen;
  /* 0x000c */ long Padding_507;
  /* 0x0010 */ void* pv_value_context;
  /* 0x0018 */ unsigned long pv_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct Windows::Rtl::IRtlWOUCSStream
{
}; /* size: 0x0008 */

enum DivisionState
{
  DivisionState_OK = 0,
  DivisionState_UnsignedSigned = 1,
  DivisionState_SignedUnsigned32 = 2,
  DivisionState_SignedUnsigned64 = 3,
  DivisionState_SignedUnsigned = 4,
  DivisionState_SignedSigned = 5,
};

struct IBlockingLock
{
}; /* size: 0x0008 */

class XLOCK
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION critSec;
  /* 0x0028 */ int m_fCsInitialized;
}; /* size: 0x0030 */

class OPAQUE_HANDLE<1>
{
  /* 0x0000 */ unsigned __int64 m_h;
}; /* size: 0x0008 */

struct XSLOCK::OWNERENTRY
{
  /* 0x0000 */ class OPAQUE_HANDLE<1> dwThreadId;
  union
  {
    /* 0x0008 */ long ownerCount;
    /* 0x0008 */ unsigned long tableSize;
  }; /* size: 0x0004 */
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class EVENT
{
  /* 0x0000 */ void* m_hEvent;
}; /* size: 0x0008 */

class SEMAPHORE
{
  /* 0x0000 */ void* m_hSem;
}; /* size: 0x0008 */

class XSLOCK
{
  /* 0x0000 */ class XLOCK m_lock;
  /* 0x0030 */ unsigned long m_cOwner;
  /* 0x0034 */ long Padding_508;
  /* 0x0038 */ struct XSLOCK::OWNERENTRY m_ownerThreads[2];
  /* 0x0058 */ struct XSLOCK::OWNERENTRY* m_ownerTable;
  /* 0x0060 */ class EVENT m_eventExclusiveWaiters;
  /* 0x0068 */ class SEMAPHORE m_semaphoreSharedWaiters;
  /* 0x0070 */ unsigned long m_cExclusiveWaiters;
  /* 0x0074 */ unsigned long m_cSharedWaiters;
  /* 0x0078 */ int m_isOwnedExclusive;
}; /* size: 0x0080 */

class CListHeader
{
}; /* size: 0x0010 */

class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>
{
  /* 0x0000 */ long Padding_509[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

enum SafeIntError
{
  SafeIntNoError = 0,
  SafeIntArithmeticOverflow = 1,
  SafeIntDivideByZero = 2,
};

typedef struct _PROCESS_WINDOW_INFORMATION
{
  /* 0x0000 */ unsigned long WindowFlags;
  /* 0x0004 */ unsigned short WindowTitleLength;
  /* 0x0006 */ wchar_t WindowTitle[1];
} PROCESS_WINDOW_INFORMATION, *PPROCESS_WINDOW_INFORMATION; /* size: 0x0008 */

typedef enum _MSI_ACTION
{
  MSI_ACTION_INSTALL = 0,
  MSI_ACTION_UNINSTALL = 1,
  MSI_ACTION_UPDATE = 2,
  MSI_ACTION_MAX = 3,
} MSI_ACTION, *PMSI_ACTION;

typedef struct _TOKEN_PRIMARY_GROUP
{
  /* 0x0000 */ void* PrimaryGroup;
} TOKEN_PRIMARY_GROUP, *PTOKEN_PRIMARY_GROUP; /* size: 0x0008 */

enum COLUMN_VISIBILITY
{
  CV_INVALID = 0,
  CV_VISIBLE = 1,
  CV_PRIMARYOVERFLOW = 2,
  CV_SECONDARYOVERFLOW = 3,
  CV_HIDDEN = 4,
};

typedef struct _PO_WAKE_SOURCE_INFO
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_INFO, *PPO_WAKE_SOURCE_INFO; /* size: 0x0008 */

enum DBPROPENUM20
{
  DBPROP_IMultipleResults = 217,
  DBPROP_DATASOURCE_TYPE = 251,
  MDPROP_AXES = 252,
  MDPROP_FLATTENING_SUPPORT = 253,
  MDPROP_MDX_JOINCUBES = 254,
  MDPROP_NAMED_LEVELS = 255,
  MDPROP_RANGEROWSET = 256,
  MDPROP_MDX_SLICER = 218,
  MDPROP_MDX_CUBEQUALIFICATION = 219,
  MDPROP_MDX_OUTERREFERENCE = 220,
  MDPROP_MDX_QUERYBYPROPERTY = 221,
  MDPROP_MDX_CASESUPPORT = 222,
  MDPROP_MDX_STRING_COMPOP = 224,
  MDPROP_MDX_DESCFLAGS = 225,
  MDPROP_MDX_SET_FUNCTIONS = 226,
  MDPROP_MDX_MEMBER_FUNCTIONS = 227,
  MDPROP_MDX_NUMERIC_FUNCTIONS = 228,
  MDPROP_MDX_FORMULAS = 229,
  MDPROP_AGGREGATECELL_UPDATE = 230,
  MDPROP_MDX_AGGREGATECELL_UPDATE = 230,
  MDPROP_MDX_OBJQUALIFICATION = 261,
  MDPROP_MDX_NONMEASURE_EXPRESSIONS = 262,
  DBPROP_ACCESSORDER = 231,
  DBPROP_BOOKMARKINFO = 232,
  DBPROP_INIT_CATALOG = 233,
  DBPROP_ROW_BULKOPS = 234,
  DBPROP_PROVIDERFRIENDLYNAME = 235,
  DBPROP_LOCKMODE = 236,
  DBPROP_MULTIPLECONNECTIONS = 237,
  DBPROP_UNIQUEROWS = 238,
  DBPROP_SERVERDATAONINSERT = 239,
  DBPROP_STORAGEFLAGS = 240,
  DBPROP_CONNECTIONSTATUS = 244,
  DBPROP_ALTERCOLUMN = 245,
  DBPROP_COLUMNLCID = 246,
  DBPROP_RESETDATASOURCE = 247,
  DBPROP_INIT_OLEDBSERVICES = 248,
  DBPROP_IRowsetRefresh = 249,
  DBPROP_SERVERNAME = 250,
  DBPROP_IParentRowset = 257,
  DBPROP_HIDDENCOLUMNS = 258,
  DBPROP_PROVIDERMEMORY = 259,
  DBPROP_CLIENTCURSOR = 260,
};

enum ISOFLAG
{
  ISOFLAG_RETAIN_COMMIT_DC = 1,
  ISOFLAG_RETAIN_COMMIT = 2,
  ISOFLAG_RETAIN_COMMIT_NO = 3,
  ISOFLAG_RETAIN_ABORT_DC = 4,
  ISOFLAG_RETAIN_ABORT = 8,
  ISOFLAG_RETAIN_ABORT_NO = 12,
  ISOFLAG_RETAIN_DONTCARE = 5,
  ISOFLAG_RETAIN_BOTH = 10,
  ISOFLAG_RETAIN_NONE = 15,
  ISOFLAG_OPTIMISTIC = 16,
  ISOFLAG_READONLY = 32,
};

enum IMMERSIVELAUNCHERMODE
{
  ILM_APPS = 0,
  ILM_FILES = 1,
  ILM_SETTINGS = 2,
  ILM_MAX = 3,
};

class Windows::Auto<_LUNICODE_STRING>
{
}; /* size: 0x0018 */

enum DBPOSITIONFLAGSENUM
{
  DBPOSITION_OK = 0,
  DBPOSITION_NOROW = 1,
  DBPOSITION_BOF = 2,
  DBPOSITION_EOF = 3,
};

enum DBKINDENUM
{
  DBKIND_GUID_NAME = 0,
  DBKIND_GUID_PROPID = 1,
  DBKIND_NAME = 2,
  DBKIND_PGUID_NAME = 3,
  DBKIND_PGUID_PROPID = 4,
  DBKIND_PROPID = 5,
  DBKIND_GUID = 6,
};

struct tagENUMLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
}; /* size: 0x009c */

typedef struct _GP_LOG_PAGE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short LogAddress;
  /* 0x0002 */ unsigned short LogSectors;
} GP_LOG_PAGE_DESCRIPTOR, *PGP_LOG_PAGE_DESCRIPTOR; /* size: 0x0004 */

typedef struct _DEVICEDUMP_PUBLIC_SUBSECTION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct _GP_LOG_PAGE_DESCRIPTOR GPLogTable[16];
  /* 0x0044 */ char szDescription[16];
  /* 0x0054 */ unsigned char bData[1];
} DEVICEDUMP_PUBLIC_SUBSECTION, *PDEVICEDUMP_PUBLIC_SUBSECTION; /* size: 0x0055 */

enum KF_CATEGORY
{
  KF_CATEGORY_VIRTUAL = 1,
  KF_CATEGORY_FIXED = 2,
  KF_CATEGORY_COMMON = 3,
  KF_CATEGORY_PERUSER = 4,
};

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>
{
  /* 0x0000 */ long Padding_510[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

enum GET_PACKAGE_SENTINEL_DISPOSITION
{
  GPSD_CREATE = 0,
  GPSD_CHECKEXISTENCE = 1,
};

typedef struct _SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ long Padding_511;
  /* 0x0008 */ void* Owner;
  /* 0x0010 */ void* Group;
  /* 0x0018 */ struct _ACL* Sacl;
  /* 0x0020 */ struct _ACL* Dacl;
} SECURITY_DESCRIPTOR, *PSECURITY_DESCRIPTOR; /* size: 0x0028 */

typedef struct __midl_frag405_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag405_t, *P_midl_frag405_t; /* size: 0x0038 */

struct tagXFORM
{
  /* 0x0000 */ float eM11;
  /* 0x0004 */ float eM12;
  /* 0x0008 */ float eM21;
  /* 0x000c */ float eM22;
  /* 0x0010 */ float eDx;
  /* 0x0014 */ float eDy;
}; /* size: 0x0018 */

struct tagEMRTRANSPARENTBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

typedef struct _RTL_BACKOFF
{
  /* 0x0000 */ unsigned long Delay;
} RTL_BACKOFF, *PRTL_BACKOFF; /* size: 0x0004 */

typedef struct _FILE_QUERY_SPARING_BUFFER
{
  /* 0x0000 */ unsigned long SparingUnitBytes;
  /* 0x0004 */ unsigned char SoftwareSparing;
  /* 0x0005 */ char Padding_512[3];
  /* 0x0008 */ unsigned long TotalSpareBlocks;
  /* 0x000c */ unsigned long FreeSpareBlocks;
} FILE_QUERY_SPARING_BUFFER, *PFILE_QUERY_SPARING_BUFFER; /* size: 0x0010 */

union CMapKeyToValue::CKeyWrap
{
  union
  {
    /* 0x0000 */ unsigned char rgbKey[12];
    struct
    {
      /* 0x0000 */ void* pKey;
      /* 0x0008 */ unsigned int cbKey;
    }; /* size: 0x000c */
  }; /* size: 0x000c */
}; /* size: 0x0010 */

typedef struct _FP_64
{
  /* 0x0000 */ unsigned long W[2];
} FP_64, *PFP_64; /* size: 0x0008 */

typedef struct _STORAGE_ALLOCATE_BC_STREAM_INPUT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long RequestsPerPeriod;
  /* 0x0008 */ unsigned long Period;
  /* 0x000c */ unsigned char RetryFailures;
  /* 0x000d */ unsigned char Discardable;
  /* 0x000e */ unsigned char Reserved1[2];
  /* 0x0010 */ unsigned long AccessType;
  /* 0x0014 */ unsigned long AccessMode;
} STORAGE_ALLOCATE_BC_STREAM_INPUT, *PSTORAGE_ALLOCATE_BC_STREAM_INPUT; /* size: 0x0018 */

typedef struct _MINIDUMP_HANDLE_OBJECT_INFORMATION
{
  /* 0x0000 */ unsigned long NextInfoRva;
  /* 0x0004 */ unsigned int InfoType;
  /* 0x0008 */ unsigned int SizeOfInfo;
} MINIDUMP_HANDLE_OBJECT_INFORMATION, *PMINIDUMP_HANDLE_OBJECT_INFORMATION; /* size: 0x000c */

struct tagMOUSEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iMaxSpeed;
  /* 0x000c */ unsigned long iTimeToMaxSpeed;
  /* 0x0010 */ unsigned long iCtrlSpeed;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
}; /* size: 0x001c */

typedef struct _SERVICE_PRESHUTDOWN_INFO
{
  /* 0x0000 */ unsigned long dwPreshutdownTimeout;
} SERVICE_PRESHUTDOWN_INFO, *PSERVICE_PRESHUTDOWN_INFO; /* size: 0x0004 */

typedef struct _MINIDUMP_MISC_INFO_4
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
  /* 0x0018 */ unsigned int ProcessorMaxMhz;
  /* 0x001c */ unsigned int ProcessorCurrentMhz;
  /* 0x0020 */ unsigned int ProcessorMhzLimit;
  /* 0x0024 */ unsigned int ProcessorMaxIdleState;
  /* 0x0028 */ unsigned int ProcessorCurrentIdleState;
  /* 0x002c */ unsigned int ProcessIntegrityLevel;
  /* 0x0030 */ unsigned int ProcessExecuteFlags;
  /* 0x0034 */ unsigned int ProtectedProcess;
  /* 0x0038 */ unsigned int TimeZoneId;
  /* 0x003c */ struct _TIME_ZONE_INFORMATION TimeZone;
  /* 0x00e8 */ wchar_t BuildString[260];
  /* 0x02f0 */ wchar_t DbgBldStr[40];
} MINIDUMP_MISC_INFO_4, *PMINIDUMP_MISC_INFO_4; /* size: 0x0340 */

typedef struct _OSVERSIONINFOEX2A
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
  /* 0x009c */ unsigned long wSuiteMaskEx;
  /* 0x00a0 */ unsigned long wReserved2;
} OSVERSIONINFOEX2A, *POSVERSIONINFOEX2A; /* size: 0x00a4 */

typedef struct _WRITE_USN_REASON_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long UsnReasonToWrite;
} WRITE_USN_REASON_INPUT, *PWRITE_USN_REASON_INPUT; /* size: 0x0008 */

typedef struct _CM_DISK_GEOMETRY_DEVICE_DATA
{
  /* 0x0000 */ unsigned long BytesPerSector;
  /* 0x0004 */ unsigned long NumberOfCylinders;
  /* 0x0008 */ unsigned long SectorsPerTrack;
  /* 0x000c */ unsigned long NumberOfHeads;
} CM_DISK_GEOMETRY_DEVICE_DATA, *PCM_DISK_GEOMETRY_DEVICE_DATA; /* size: 0x0010 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _CM_RESOURCE_LIST* ResourceList;
  /* 0x0018 */ unsigned long ResourceListSize;
  /* 0x001c */ long Padding_513;
  /* 0x0020 */ struct _PLUGPLAY_CONTROL_CONFLICT_LIST* ConflictBuffer;
  /* 0x0028 */ unsigned long ConflictBufferSize;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ long Status;
  /* 0x0034 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CONFLICT_DATA, *PPLUGPLAY_CONTROL_CONFLICT_DATA; /* size: 0x0038 */

typedef struct _FILE_OBJECTID_INFORMATION
{
  /* 0x0000 */ __int64 FileReference;
  /* 0x0008 */ unsigned char ObjectId[16];
  union
  {
    struct
    {
      /* 0x0018 */ unsigned char BirthVolumeId[16];
      /* 0x0028 */ unsigned char BirthObjectId[16];
      /* 0x0038 */ unsigned char DomainId[16];
    }; /* size: 0x0030 */
    /* 0x0018 */ unsigned char ExtendedInfo[48];
  }; /* size: 0x0030 */
} FILE_OBJECTID_INFORMATION, *PFILE_OBJECTID_INFORMATION; /* size: 0x0048 */

struct tagTouchPredictionParameters
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int dwLatency;
  /* 0x0008 */ unsigned int dwSampleTime;
  /* 0x000c */ unsigned int bUseHWTimeStamp;
}; /* size: 0x0010 */

class CPIDHashTable
{
}; /* size: 0x0028 */

struct tagCOPYDATASTRUCT
{
  /* 0x0000 */ unsigned __int64 dwData;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ long Padding_514;
  /* 0x0010 */ void* lpData;
}; /* size: 0x0018 */

typedef struct _TOKEN_SOURCE
{
  /* 0x0000 */ char SourceName[8];
  /* 0x0008 */ struct _LUID SourceIdentifier;
} TOKEN_SOURCE, *PTOKEN_SOURCE; /* size: 0x0010 */

typedef struct _TOKEN_CONTROL
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
  /* 0x0018 */ struct _TOKEN_SOURCE TokenSource;
} TOKEN_CONTROL, *PTOKEN_CONTROL; /* size: 0x0028 */

struct tagPANOSE
{
  /* 0x0000 */ unsigned char bFamilyType;
  /* 0x0001 */ unsigned char bSerifStyle;
  /* 0x0002 */ unsigned char bWeight;
  /* 0x0003 */ unsigned char bProportion;
  /* 0x0004 */ unsigned char bContrast;
  /* 0x0005 */ unsigned char bStrokeVariation;
  /* 0x0006 */ unsigned char bArmStyle;
  /* 0x0007 */ unsigned char bLetterform;
  /* 0x0008 */ unsigned char bMidline;
  /* 0x0009 */ unsigned char bXHeight;
}; /* size: 0x000a */

typedef struct _OUTLINETEXTMETRICA
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICA otmTextMetrics;
  /* 0x003c */ unsigned char otmFiller;
  /* 0x003d */ struct tagPANOSE otmPanoseNumber;
  /* 0x0047 */ char Padding_515;
  /* 0x0048 */ unsigned int otmfsSelection;
  /* 0x004c */ unsigned int otmfsType;
  /* 0x0050 */ int otmsCharSlopeRise;
  /* 0x0054 */ int otmsCharSlopeRun;
  /* 0x0058 */ int otmItalicAngle;
  /* 0x005c */ unsigned int otmEMSquare;
  /* 0x0060 */ int otmAscent;
  /* 0x0064 */ int otmDescent;
  /* 0x0068 */ unsigned int otmLineGap;
  /* 0x006c */ unsigned int otmsCapEmHeight;
  /* 0x0070 */ unsigned int otmsXHeight;
  /* 0x0074 */ struct tagRECT otmrcFontBox;
  /* 0x0084 */ int otmMacAscent;
  /* 0x0088 */ int otmMacDescent;
  /* 0x008c */ unsigned int otmMacLineGap;
  /* 0x0090 */ unsigned int otmusMinimumPPEM;
  /* 0x0094 */ struct tagPOINT otmptSubscriptSize;
  /* 0x009c */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a4 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00ac */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b4 */ unsigned int otmsStrikeoutSize;
  /* 0x00b8 */ int otmsStrikeoutPosition;
  /* 0x00bc */ int otmsUnderscoreSize;
  /* 0x00c0 */ int otmsUnderscorePosition;
  /* 0x00c4 */ long Padding_516;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00d0 */ char* otmpFaceName;
  /* 0x00d8 */ char* otmpStyleName;
  /* 0x00e0 */ char* otmpFullName;
} OUTLINETEXTMETRICA, *POUTLINETEXTMETRICA; /* size: 0x00e8 */

typedef struct _NDR_CS_ROUTINES
{
  /* 0x0000 */ struct _NDR_CS_SIZE_CONVERT_ROUTINES* pSizeConvertRoutines;
  /* 0x0008 */ void** pTagGettingRoutines /* function */;
} NDR_CS_ROUTINES, *PNDR_CS_ROUTINES; /* size: 0x0010 */

struct tagEXTLOGPEN32
{
  /* 0x0000 */ unsigned long elpPenStyle;
  /* 0x0004 */ unsigned long elpWidth;
  /* 0x0008 */ unsigned int elpBrushStyle;
  /* 0x000c */ unsigned long elpColor;
  /* 0x0010 */ unsigned long elpHatch;
  /* 0x0014 */ unsigned long elpNumEntries;
  /* 0x0018 */ unsigned long elpStyleEntry[1];
}; /* size: 0x001c */

struct tagEMREXTCREATEPEN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPen;
  /* 0x000c */ unsigned long offBmi;
  /* 0x0010 */ unsigned long cbBmi;
  /* 0x0014 */ unsigned long offBits;
  /* 0x0018 */ unsigned long cbBits;
  /* 0x001c */ struct tagEXTLOGPEN32 elp;
}; /* size: 0x0038 */

struct tagMCI_SEQ_SET_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwTimeFormat;
  /* 0x000c */ unsigned long dwAudio;
  /* 0x0010 */ unsigned long dwTempo;
  /* 0x0014 */ unsigned long dwPort;
  /* 0x0018 */ unsigned long dwSlave;
  /* 0x001c */ unsigned long dwMaster;
  /* 0x0020 */ unsigned long dwOffset;
}; /* size: 0x0024 */

typedef struct _CM_PARTIAL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ unsigned char Type;
  /* 0x0001 */ unsigned char ShareDisposition;
  /* 0x0002 */ unsigned short Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Generic;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Port;
      struct
      {
        /* 0x0004 */ unsigned long Level;
        /* 0x0008 */ unsigned long Vector;
        /* 0x000c */ unsigned __int64 Affinity;
      } /* size: 0x0010 */ Interrupt;
      struct
      {
        union
        {
          struct
          {
            /* 0x0004 */ unsigned short Reserved;
            /* 0x0006 */ unsigned short MessageCount;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Raw;
          struct
          {
            /* 0x0004 */ unsigned long Level;
            /* 0x0008 */ unsigned long Vector;
            /* 0x000c */ unsigned __int64 Affinity;
          } /* size: 0x0010 */ Translated;
        }; /* size: 0x0010 */
      } /* size: 0x0010 */ MessageInterrupt;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length;
      } /* size: 0x000c */ Memory;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long Port;
        /* 0x000c */ unsigned long Reserved1;
      } /* size: 0x000c */ Dma;
      struct
      {
        /* 0x0004 */ unsigned long Channel;
        /* 0x0008 */ unsigned long RequestLine;
        /* 0x000c */ unsigned char TransferWidth;
        /* 0x000d */ unsigned char Reserved1;
        /* 0x000e */ unsigned char Reserved2;
        /* 0x000f */ unsigned char Reserved3;
      } /* size: 0x000c */ DmaV3;
      struct
      {
        /* 0x0004 */ unsigned long Data[3];
      } /* size: 0x000c */ DevicePrivate;
      struct
      {
        /* 0x0004 */ unsigned long Start;
        /* 0x0008 */ unsigned long Length;
        /* 0x000c */ unsigned long Reserved;
      } /* size: 0x000c */ BusNumber;
      struct
      {
        /* 0x0004 */ unsigned long DataSize;
        /* 0x0008 */ unsigned long Reserved1;
        /* 0x000c */ unsigned long Reserved2;
      } /* size: 0x000c */ DeviceSpecificData;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length40;
      } /* size: 0x000c */ Memory40;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length48;
      } /* size: 0x000c */ Memory48;
      struct
      {
        /* 0x0004 */ union _LARGE_INTEGER Start;
        /* 0x000c */ unsigned long Length64;
      } /* size: 0x000c */ Memory64;
      struct
      {
        /* 0x0004 */ unsigned char Class;
        /* 0x0005 */ unsigned char Type;
        /* 0x0006 */ unsigned char Reserved1;
        /* 0x0007 */ unsigned char Reserved2;
        /* 0x0008 */ unsigned long IdLowPart;
        /* 0x000c */ unsigned long IdHighPart;
      } /* size: 0x000c */ Connection;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} CM_PARTIAL_RESOURCE_DESCRIPTOR, *PCM_PARTIAL_RESOURCE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _CM_PARTIAL_RESOURCE_LIST
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_DESCRIPTOR PartialDescriptors[1];
} CM_PARTIAL_RESOURCE_LIST, *PCM_PARTIAL_RESOURCE_LIST; /* size: 0x001c */

typedef struct _CM_FULL_RESOURCE_DESCRIPTOR
{
  /* 0x0000 */ enum _INTERFACE_TYPE InterfaceType;
  /* 0x0004 */ unsigned long BusNumber;
  /* 0x0008 */ struct _CM_PARTIAL_RESOURCE_LIST PartialResourceList;
} CM_FULL_RESOURCE_DESCRIPTOR, *PCM_FULL_RESOURCE_DESCRIPTOR; /* size: 0x0024 */

typedef struct _CM_RESOURCE_LIST
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _CM_FULL_RESOURCE_DESCRIPTOR List[1];
} CM_RESOURCE_LIST, *PCM_RESOURCE_LIST; /* size: 0x0028 */

typedef struct _CRYPT_INTERFACE_REG
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long cFunctions;
  /* 0x000c */ long Padding_517;
  /* 0x0010 */ wchar_t** rgpszFunctions;
} CRYPT_INTERFACE_REG, *PCRYPT_INTERFACE_REG; /* size: 0x0018 */

class Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *>
{
}; /* size: 0x0008 */

typedef struct _TOKEN_GROUPS
{
  /* 0x0000 */ unsigned long GroupCount;
  /* 0x0004 */ long Padding_518;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES Groups[1];
} TOKEN_GROUPS, *PTOKEN_GROUPS; /* size: 0x0018 */

struct tagMIDIINCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long dwSupport;
  /* 0x002c */ struct _GUID ManufacturerGuid;
  /* 0x003c */ struct _GUID ProductGuid;
  /* 0x004c */ struct _GUID NameGuid;
}; /* size: 0x005c */

typedef struct _tagDdeClassInfo
{
  /* 0x0000 */ unsigned long dwContextMask;
  /* 0x0004 */ int fClaimFactory;
  /* 0x0008 */ unsigned long dwContext;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long dwThreadId;
  /* 0x0014 */ unsigned long dwRegistrationKey;
  /* 0x0018 */ struct IUnknown* punk;
} tagDdeClassInfo, *PtagDdeClassInfo; /* size: 0x0020 */

struct tagINPUT_MESSAGE_SOURCE
{
  /* 0x0000 */ enum tagINPUT_MESSAGE_DEVICE_TYPE deviceType;
  /* 0x0004 */ enum tagINPUT_MESSAGE_ORIGIN_ID originId;
}; /* size: 0x0008 */

class Windows::Rtl::CStringTraitsBase
{
}; /* size: 0x0001 */

typedef struct _CERT_PHYSICAL_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_519;
  /* 0x0008 */ char* pszOpenStoreProvider;
  /* 0x0010 */ unsigned long dwOpenEncodingType;
  /* 0x0014 */ unsigned long dwOpenFlags;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB OpenParameters;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ unsigned long dwPriority;
} CERT_PHYSICAL_STORE_INFO, *PCERT_PHYSICAL_STORE_INFO; /* size: 0x0030 */

typedef union _UNWIND_CODE
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned char CodeOffset;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OpInfo : 4; /* bit position: 4 */
      }; /* bitfield */
    }; /* size: 0x0002 */
    struct
    {
      /* 0x0000 */ unsigned char OffsetLow;
      struct /* bitfield */
      {
        /* 0x0001 */ unsigned char UnwindOp : 4; /* bit position: 0 */
        /* 0x0001 */ unsigned char OffsetHigh : 4; /* bit position: 4 */
      }; /* bitfield */
    } /* size: 0x0002 */ EpilogueCode;
    /* 0x0000 */ unsigned short FrameOffset;
  }; /* size: 0x0002 */
} UNWIND_CODE, *PUNWIND_CODE; /* size: 0x0002 */

typedef struct _PRINTER_NOTIFY_INFO_DATA
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Field;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ long Padding_520;
  union
  {
    union
    {
      /* 0x0010 */ unsigned long adwData[2];
      struct
      {
        /* 0x0010 */ unsigned long cbBuf;
        /* 0x0004 */ long Padding_521;
        /* 0x0018 */ void* pBuf;
      } /* size: 0x0010 */ Data;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ NotifyData;
} PRINTER_NOTIFY_INFO_DATA, *PPRINTER_NOTIFY_INFO_DATA; /* size: 0x0020 */

typedef struct _PRINTER_NOTIFY_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long Padding_522;
  /* 0x0010 */ struct _PRINTER_NOTIFY_INFO_DATA aData[1];
} PRINTER_NOTIFY_INFO, *PPRINTER_NOTIFY_INFO; /* size: 0x0030 */

typedef struct _DRIVER_INFO_3W
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_523;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ wchar_t* pEnvironment;
  /* 0x0018 */ wchar_t* pDriverPath;
  /* 0x0020 */ wchar_t* pDataFile;
  /* 0x0028 */ wchar_t* pConfigFile;
  /* 0x0030 */ wchar_t* pHelpFile;
  /* 0x0038 */ wchar_t* pDependentFiles;
  /* 0x0040 */ wchar_t* pMonitorName;
  /* 0x0048 */ wchar_t* pDefaultDataType;
} DRIVER_INFO_3W, *PDRIVER_INFO_3W; /* size: 0x0050 */

class CPIDTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class CPIDHashTable s_PIDHashTbl;
    /* 0x0000 */ struct SHashChain s_PIDBuckets[23];
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

typedef struct _PACKAGE_INFO_REFERENCE
{
  /* 0x0000 */ void* reserved;
} PACKAGE_INFO_REFERENCE, *PPACKAGE_INFO_REFERENCE; /* size: 0x0008 */

typedef struct _FILE_FULL_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char Flags;
  /* 0x0005 */ unsigned char EaNameLength;
  /* 0x0006 */ unsigned short EaValueLength;
  /* 0x0008 */ char EaName[1];
  /* 0x0009 */ char __PADDING__[3];
} FILE_FULL_EA_INFORMATION, *PFILE_FULL_EA_INFORMATION; /* size: 0x000c */

typedef struct _DRIVE_LAYOUT_INFORMATION_GPT
{
  /* 0x0000 */ struct _GUID DiskId;
  /* 0x0010 */ union _LARGE_INTEGER StartingUsableOffset;
  /* 0x0018 */ union _LARGE_INTEGER UsableLength;
  /* 0x0020 */ unsigned long MaxPartitionCount;
  /* 0x0024 */ long __PADDING__[1];
} DRIVE_LAYOUT_INFORMATION_GPT, *PDRIVE_LAYOUT_INFORMATION_GPT; /* size: 0x0028 */

typedef union _FOUR_PART_VERSION
{
  union
  {
    /* 0x0000 */ unsigned __int64 Version64;
    struct
    {
      /* 0x0000 */ unsigned long BuildAndRevision;
      /* 0x0004 */ unsigned long MajorAndMinor;
    } /* size: 0x0008 */ Version32;
    struct
    {
      /* 0x0000 */ unsigned short Revision;
      /* 0x0002 */ unsigned short Build;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    } /* size: 0x0008 */ Version16;
  }; /* size: 0x0008 */
} FOUR_PART_VERSION, *PFOUR_PART_VERSION; /* size: 0x0008 */

typedef struct _RTL_STACK_TRACE_DATABASE_CREATE
{
  /* 0x0000 */ void* CommitBase;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned __int64 ReserveSize;
} RTL_STACK_TRACE_DATABASE_CREATE, *PRTL_STACK_TRACE_DATABASE_CREATE; /* size: 0x0018 */

typedef struct _CRYPT_URL_ARRAY
{
  /* 0x0000 */ unsigned long cUrl;
  /* 0x0004 */ long Padding_524;
  /* 0x0008 */ wchar_t** rgwszUrl;
} CRYPT_URL_ARRAY, *PCRYPT_URL_ARRAY; /* size: 0x0010 */

struct ANON_OBJECT_HEADER
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
}; /* size: 0x0020 */

typedef struct _PROCESS_WS_WATCH_INFORMATION
{
  /* 0x0000 */ void* FaultingPc;
  /* 0x0008 */ void* FaultingVa;
} PROCESS_WS_WATCH_INFORMATION, *PPROCESS_WS_WATCH_INFORMATION; /* size: 0x0010 */

typedef struct _PROCESS_WS_WATCH_INFORMATION_EX
{
  /* 0x0000 */ struct _PROCESS_WS_WATCH_INFORMATION BasicInfo;
  /* 0x0010 */ unsigned __int64 FaultingThreadId;
  /* 0x0018 */ unsigned __int64 Flags;
} PROCESS_WS_WATCH_INFORMATION_EX, *PPROCESS_WS_WATCH_INFORMATION_EX; /* size: 0x0020 */

class CDbgGuidStr
{
}; /* size: 0x0001 */

struct tagEXTLOGFONTW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ unsigned long elfVersion;
  /* 0x0120 */ unsigned long elfStyleSize;
  /* 0x0124 */ unsigned long elfMatch;
  /* 0x0128 */ unsigned long elfReserved;
  /* 0x012c */ unsigned char elfVendorId[4];
  /* 0x0130 */ unsigned long elfCulture;
  /* 0x0134 */ struct tagPANOSE elfPanose;
  /* 0x013e */ char __PADDING__[2];
}; /* size: 0x0140 */

struct tagEMREXTCREATEFONTINDIRECTW
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihFont;
  /* 0x000c */ struct tagEXTLOGFONTW elfw;
}; /* size: 0x014c */

typedef struct _CERT_PAIR
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB Forward;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Reverse;
} CERT_PAIR, *PCERT_PAIR; /* size: 0x0020 */

typedef struct _CM_MONITOR_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short HorizontalScreenSize;
  /* 0x0006 */ unsigned short VerticalScreenSize;
  /* 0x0008 */ unsigned short HorizontalResolution;
  /* 0x000a */ unsigned short VerticalResolution;
  /* 0x000c */ unsigned short HorizontalDisplayTimeLow;
  /* 0x000e */ unsigned short HorizontalDisplayTime;
  /* 0x0010 */ unsigned short HorizontalDisplayTimeHigh;
  /* 0x0012 */ unsigned short HorizontalBackPorchLow;
  /* 0x0014 */ unsigned short HorizontalBackPorch;
  /* 0x0016 */ unsigned short HorizontalBackPorchHigh;
  /* 0x0018 */ unsigned short HorizontalFrontPorchLow;
  /* 0x001a */ unsigned short HorizontalFrontPorch;
  /* 0x001c */ unsigned short HorizontalFrontPorchHigh;
  /* 0x001e */ unsigned short HorizontalSyncLow;
  /* 0x0020 */ unsigned short HorizontalSync;
  /* 0x0022 */ unsigned short HorizontalSyncHigh;
  /* 0x0024 */ unsigned short VerticalBackPorchLow;
  /* 0x0026 */ unsigned short VerticalBackPorch;
  /* 0x0028 */ unsigned short VerticalBackPorchHigh;
  /* 0x002a */ unsigned short VerticalFrontPorchLow;
  /* 0x002c */ unsigned short VerticalFrontPorch;
  /* 0x002e */ unsigned short VerticalFrontPorchHigh;
  /* 0x0030 */ unsigned short VerticalSyncLow;
  /* 0x0032 */ unsigned short VerticalSync;
  /* 0x0034 */ unsigned short VerticalSyncHigh;
} CM_MONITOR_DEVICE_DATA, *PCM_MONITOR_DEVICE_DATA; /* size: 0x0036 */

typedef struct _PROCESS_INFORMATION
{
  /* 0x0000 */ void* hProcess;
  /* 0x0008 */ void* hThread;
  /* 0x0010 */ unsigned long dwProcessId;
  /* 0x0014 */ unsigned long dwThreadId;
} PROCESS_INFORMATION, *PPROCESS_INFORMATION; /* size: 0x0018 */

struct USN_RECORD_V2
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned __int64 FileReferenceNumber;
  /* 0x0010 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0018 */ __int64 Usn;
  /* 0x0020 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0028 */ unsigned long Reason;
  /* 0x002c */ unsigned long SourceInfo;
  /* 0x0030 */ unsigned long SecurityId;
  /* 0x0034 */ unsigned long FileAttributes;
  /* 0x0038 */ unsigned short FileNameLength;
  /* 0x003a */ unsigned short FileNameOffset;
  /* 0x003c */ wchar_t FileName[1];
  /* 0x003e */ char __PADDING__[2];
}; /* size: 0x0040 */

typedef struct _STORAGE_MINIPORT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _STORAGE_PORT_CODE_SET Portdriver;
  /* 0x000c */ unsigned char LUNResetSupported;
  /* 0x000d */ unsigned char TargetResetSupported;
  /* 0x000e */ unsigned short IoTimeoutValue;
} STORAGE_MINIPORT_DESCRIPTOR, *PSTORAGE_MINIPORT_DESCRIPTOR; /* size: 0x0010 */

struct AsyncIUnknown
{
}; /* size: 0x0008 */

typedef struct _CROSS_CERT_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long dwSyncDeltaTime;
  /* 0x0004 */ unsigned long cDistPoint;
  /* 0x0008 */ struct _CERT_ALT_NAME_INFO* rgDistPoint;
} CROSS_CERT_DIST_POINTS_INFO, *PCROSS_CERT_DIST_POINTS_INFO; /* size: 0x0010 */

struct tagPSDA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_525;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ void* hDevMode;
  /* 0x0018 */ void* hDevNames;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ struct tagPOINT ptPaperSize;
  /* 0x002c */ struct tagRECT rtMinMargin;
  /* 0x003c */ struct tagRECT rtMargin;
  /* 0x004c */ long Padding_526;
  /* 0x0050 */ struct HINSTANCE__* hInstance;
  /* 0x0058 */ __int64 lCustData;
  /* 0x0060 */ void* lpfnPageSetupHook /* function */;
  /* 0x0068 */ void* lpfnPagePaintHook /* function */;
  /* 0x0070 */ const char* lpPageSetupTemplateName;
  /* 0x0078 */ void* hPageSetupTemplate;
}; /* size: 0x0080 */

struct ISupportErrorInfo
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_DEVICE_DATA_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceId;
  /* 0x0010 */ struct _UNICODE_STRING DataName;
  /* 0x0020 */ unsigned long DataType;
  /* 0x0024 */ unsigned long DataBufferLength;
  /* 0x0028 */ void* DataBuffer;
} SYSTEM_DEVICE_DATA_INFORMATION, *PSYSTEM_DEVICE_DATA_INFORMATION; /* size: 0x0030 */

typedef struct _CTL_ENTRY
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
  /* 0x0010 */ unsigned long cAttribute;
  /* 0x0014 */ long Padding_527;
  /* 0x0018 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CTL_ENTRY, *PCTL_ENTRY; /* size: 0x0020 */

class XIUnknown
{
  /* 0x0000 */ struct IUnknown* _p;
}; /* size: 0x0008 */

typedef struct _CERT_SIMPLE_CHAIN
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cElement;
  /* 0x0010 */ struct _CERT_CHAIN_ELEMENT** rgpElement;
  /* 0x0018 */ struct _CERT_TRUST_LIST_INFO* pTrustListInfo;
  /* 0x0020 */ int fHasRevocationFreshnessTime;
  /* 0x0024 */ unsigned long dwRevocationFreshnessTime;
} CERT_SIMPLE_CHAIN, *PCERT_SIMPLE_CHAIN; /* size: 0x0028 */

typedef struct _EFS_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long Entropy;
  /* 0x0008 */ unsigned int Algorithm;
  /* 0x000c */ unsigned long KeyLength;
} EFS_KEY_INFO, *PEFS_KEY_INFO; /* size: 0x0010 */

struct IComObjIdentity
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_LEGACY_DRIVER_INFORMATION
{
  /* 0x0000 */ unsigned long VetoType;
  /* 0x0004 */ long Padding_528;
  /* 0x0008 */ struct _UNICODE_STRING VetoList;
} SYSTEM_LEGACY_DRIVER_INFORMATION, *PSYSTEM_LEGACY_DRIVER_INFORMATION; /* size: 0x0018 */

typedef struct _SERVICE_DESCRIPTIONW
{
  /* 0x0000 */ wchar_t* lpDescription;
} SERVICE_DESCRIPTIONW, *PSERVICE_DESCRIPTIONW; /* size: 0x0008 */

typedef union _userHMETAFILE::__MIDL_IWinTypes_0004
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILE::__MIDL_IWinTypes_0004, *PuserHMETAFILE::__MIDL_IWinTypes_0004; /* size: 0x0008 */

typedef struct _userHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_529;
  /* 0x0008 */ union _userHMETAFILE::__MIDL_IWinTypes_0004 u;
} userHMETAFILE, *PuserHMETAFILE; /* size: 0x0010 */

struct IDebugStream
{
}; /* size: 0x0008 */

typedef struct _APPCATEGORYINFOLIST
{
  /* 0x0000 */ unsigned long cCategory;
  /* 0x0004 */ long Padding_530;
  /* 0x0008 */ struct _APPCATEGORYINFO* pCategoryInfo;
} APPCATEGORYINFOLIST, *PAPPCATEGORYINFOLIST; /* size: 0x0010 */

typedef struct _PORT_VIEW
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_531;
  /* 0x0008 */ void* SectionHandle;
  /* 0x0010 */ unsigned long SectionOffset;
  /* 0x0014 */ long Padding_532;
  /* 0x0018 */ unsigned __int64 ViewSize;
  /* 0x0020 */ void* ViewBase;
  /* 0x0028 */ void* ViewRemoteBase;
} PORT_VIEW, *PPORT_VIEW; /* size: 0x0030 */

typedef struct _PROVIDOR_INFO_1A
{
  /* 0x0000 */ char* pName;
  /* 0x0008 */ char* pEnvironment;
  /* 0x0010 */ char* pDLLName;
} PROVIDOR_INFO_1A, *PPROVIDOR_INFO_1A; /* size: 0x0018 */

typedef struct _CERT_LOGOTYPE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeInfoChoice;
  /* 0x0004 */ long Padding_533;
  union
  {
    /* 0x0008 */ struct _CERT_LOGOTYPE_DATA* pLogotypeDirectInfo;
    /* 0x0008 */ struct _CERT_LOGOTYPE_REFERENCE* pLogotypeIndirectInfo;
  }; /* size: 0x0008 */
} CERT_LOGOTYPE_INFO, *PCERT_LOGOTYPE_INFO; /* size: 0x0010 */

typedef struct _CERT_OTHER_LOGOTYPE_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO LogotypeInfo;
} CERT_OTHER_LOGOTYPE_INFO, *PCERT_OTHER_LOGOTYPE_INFO; /* size: 0x0018 */

typedef struct _M128A
{
  /* 0x0000 */ unsigned __int64 Low;
  /* 0x0008 */ __int64 High;
} M128A, *PM128A; /* size: 0x0010 */

typedef struct _XSAVE_FORMAT
{
  /* 0x0000 */ unsigned short ControlWord;
  /* 0x0002 */ unsigned short StatusWord;
  /* 0x0004 */ unsigned char TagWord;
  /* 0x0005 */ unsigned char Reserved1;
  /* 0x0006 */ unsigned short ErrorOpcode;
  /* 0x0008 */ unsigned long ErrorOffset;
  /* 0x000c */ unsigned short ErrorSelector;
  /* 0x000e */ unsigned short Reserved2;
  /* 0x0010 */ unsigned long DataOffset;
  /* 0x0014 */ unsigned short DataSelector;
  /* 0x0016 */ unsigned short Reserved3;
  /* 0x0018 */ unsigned long MxCsr;
  /* 0x001c */ unsigned long MxCsr_Mask;
  /* 0x0020 */ struct _M128A FloatRegisters[8];
  /* 0x00a0 */ struct _M128A XmmRegisters[16];
  /* 0x01a0 */ unsigned char Reserved4[96];
} XSAVE_FORMAT, *PXSAVE_FORMAT; /* size: 0x0200 */

typedef struct _CONTEXT
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 P6Home;
  /* 0x0030 */ unsigned long ContextFlags;
  /* 0x0034 */ unsigned long MxCsr;
  /* 0x0038 */ unsigned short SegCs;
  /* 0x003a */ unsigned short SegDs;
  /* 0x003c */ unsigned short SegEs;
  /* 0x003e */ unsigned short SegFs;
  /* 0x0040 */ unsigned short SegGs;
  /* 0x0042 */ unsigned short SegSs;
  /* 0x0044 */ unsigned long EFlags;
  /* 0x0048 */ unsigned __int64 Dr0;
  /* 0x0050 */ unsigned __int64 Dr1;
  /* 0x0058 */ unsigned __int64 Dr2;
  /* 0x0060 */ unsigned __int64 Dr3;
  /* 0x0068 */ unsigned __int64 Dr6;
  /* 0x0070 */ unsigned __int64 Dr7;
  /* 0x0078 */ unsigned __int64 Rax;
  /* 0x0080 */ unsigned __int64 Rcx;
  /* 0x0088 */ unsigned __int64 Rdx;
  /* 0x0090 */ unsigned __int64 Rbx;
  /* 0x0098 */ unsigned __int64 Rsp;
  /* 0x00a0 */ unsigned __int64 Rbp;
  /* 0x00a8 */ unsigned __int64 Rsi;
  /* 0x00b0 */ unsigned __int64 Rdi;
  /* 0x00b8 */ unsigned __int64 R8;
  /* 0x00c0 */ unsigned __int64 R9;
  /* 0x00c8 */ unsigned __int64 R10;
  /* 0x00d0 */ unsigned __int64 R11;
  /* 0x00d8 */ unsigned __int64 R12;
  /* 0x00e0 */ unsigned __int64 R13;
  /* 0x00e8 */ unsigned __int64 R14;
  /* 0x00f0 */ unsigned __int64 R15;
  /* 0x00f8 */ unsigned __int64 Rip;
  union
  {
    /* 0x0100 */ struct _XSAVE_FORMAT FltSave;
    struct
    {
      /* 0x0100 */ struct _M128A Header[2];
      /* 0x0120 */ struct _M128A Legacy[8];
      /* 0x01a0 */ struct _M128A Xmm0;
      /* 0x01b0 */ struct _M128A Xmm1;
      /* 0x01c0 */ struct _M128A Xmm2;
      /* 0x01d0 */ struct _M128A Xmm3;
      /* 0x01e0 */ struct _M128A Xmm4;
      /* 0x01f0 */ struct _M128A Xmm5;
      /* 0x0200 */ struct _M128A Xmm6;
      /* 0x0210 */ struct _M128A Xmm7;
      /* 0x0220 */ struct _M128A Xmm8;
      /* 0x0230 */ struct _M128A Xmm9;
      /* 0x0240 */ struct _M128A Xmm10;
      /* 0x0250 */ struct _M128A Xmm11;
      /* 0x0260 */ struct _M128A Xmm12;
      /* 0x0270 */ struct _M128A Xmm13;
      /* 0x0280 */ struct _M128A Xmm14;
      /* 0x0290 */ struct _M128A Xmm15;
    }; /* size: 0x01a0 */
  }; /* size: 0x0200 */
  /* 0x0300 */ struct _M128A VectorRegister[26];
  /* 0x04a0 */ unsigned __int64 VectorControl;
  /* 0x04a8 */ unsigned __int64 DebugControl;
  /* 0x04b0 */ unsigned __int64 LastBranchToRip;
  /* 0x04b8 */ unsigned __int64 LastBranchFromRip;
  /* 0x04c0 */ unsigned __int64 LastExceptionToRip;
  /* 0x04c8 */ unsigned __int64 LastExceptionFromRip;
} CONTEXT, *PCONTEXT; /* size: 0x04d0 */

typedef struct _GLOBAL_SHARED_CRITICAL_SECTION
{
  /* 0x0000 */ long LockCount;
  /* 0x0004 */ long RecursionCount;
  /* 0x0008 */ unsigned long OwningThread;
} GLOBAL_SHARED_CRITICAL_SECTION, *PGLOBAL_SHARED_CRITICAL_SECTION; /* size: 0x000c */

struct IMallocSpy
{
}; /* size: 0x0008 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ long Padding_534;
  /* 0x0010 */ unsigned short* NetworkAddress;
  /* 0x0018 */ unsigned short* StringEndpoint;
  union
  {
    /* 0x0020 */ unsigned short* Reserved;
  } /* size: 0x0008 */ u1;
  /* 0x0028 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_W, *PRPC_BINDING_HANDLE_TEMPLATE_V1_W; /* size: 0x0038 */

typedef struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_WRITING_CONTEXT BlobWritingContext;
  /* 0x0058 */ void* EncodingFunction /* function */;
  /* 0x0060 */ void* MultiEncodingFunction /* function */;
} RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT, *PRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT; /* size: 0x0068 */

class Windows::Rtl::CRTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT
{
  /* 0x0000 */ struct _RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT m_WritingContext;
}; /* size: 0x0068 */

typedef struct _CMSG_SIGNED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long cSigners;
  /* 0x0008 */ struct _CMSG_SIGNER_ENCODE_INFO* rgSigners;
  /* 0x0010 */ unsigned long cCertEncoded;
  /* 0x0014 */ long Padding_535;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
  /* 0x0020 */ unsigned long cCrlEncoded;
  /* 0x0024 */ long Padding_536;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* rgCrlEncoded;
} CMSG_SIGNED_ENCODE_INFO, *PCMSG_SIGNED_ENCODE_INFO; /* size: 0x0030 */

typedef struct _CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_537;
  /* 0x0008 */ struct _CMSG_SIGNED_ENCODE_INFO SignedInfo;
  /* 0x0038 */ struct _CMSG_ENVELOPED_ENCODE_INFO EnvelopedInfo;
} CMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO, *PCMSG_SIGNED_AND_ENVELOPED_ENCODE_INFO; /* size: 0x0078 */

typedef struct _TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ unsigned long Flags;
} TRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT, *PTRANSACTION_NOTIFICATION_TM_ONLINE_ARGUMENT; /* size: 0x0014 */

typedef struct _ENCRYPTED_FILE_METADATA_SIGNATURE
{
  /* 0x0000 */ unsigned long dwEfsAccessType;
  /* 0x0004 */ long Padding_538;
  /* 0x0008 */ struct _ENCRYPTION_CERTIFICATE_HASH_LIST* pCertificatesAdded;
  /* 0x0010 */ struct _ENCRYPTION_CERTIFICATE* pEncryptionCertificate;
  /* 0x0018 */ struct _EFS_RPC_BLOB* pEfsStreamSignature;
} ENCRYPTED_FILE_METADATA_SIGNATURE, *PENCRYPTED_FILE_METADATA_SIGNATURE; /* size: 0x0020 */

typedef struct _CRYPT_DECODE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_539;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
} CRYPT_DECODE_PARA, *PCRYPT_DECODE_PARA; /* size: 0x0018 */

typedef struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RaiseExceptionOnInvalidHandleReference : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long HandleExceptionsPermanentlyEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY, *PPROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlFormattableInterface *>
{
}; /* size: 0x0008 */

struct IInternetSecurityManagerEx2
{
}; /* size: 0x0008 */

typedef struct _remoteMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ long Padding_540;
  /* 0x0010 */ struct _userHMETAFILE* hMF;
} remoteMETAFILEPICT, *PremoteMETAFILEPICT; /* size: 0x0018 */

typedef struct _FILE_COMPRESSION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFORMATION, *PFILE_COMPRESSION_INFORMATION; /* size: 0x0010 */

struct tagEMRSCALEVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long xNum;
  /* 0x000c */ long xDenom;
  /* 0x0010 */ long yNum;
  /* 0x0014 */ long yDenom;
}; /* size: 0x0018 */

typedef struct _RTL_CRITICAL_SECTION64
{
  /* 0x0000 */ unsigned __int64 DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ unsigned __int64 OwningThread;
  /* 0x0018 */ unsigned __int64 LockSemaphore;
  /* 0x0020 */ unsigned __int64 SpinCount;
} RTL_CRITICAL_SECTION64, *PRTL_CRITICAL_SECTION64; /* size: 0x0028 */

class Windows::AutoPODBase<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >
{
  /* 0x0000 */ struct _UNICODE_STRING m_Data;
}; /* size: 0x0010 */

typedef struct _SYSTEM_SESSION_BIGPOOL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ struct _SYSTEM_BIGPOOL_ENTRY AllocatedInfo[1];
} SYSTEM_SESSION_BIGPOOL_INFORMATION, *PSYSTEM_SESSION_BIGPOOL_INFORMATION; /* size: 0x0028 */

typedef struct _CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB CertSignHashCNGAlgPropData;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB CertIssuerPubKeyBitLengthPropData;
} CRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO, *PCRYPT_VERIFY_CERT_SIGN_STRONG_PROPERTIES_INFO; /* size: 0x0020 */

struct IEnumOLEVERB
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_END_OF_JOB_TIME_INFORMATION
{
  /* 0x0000 */ unsigned long EndOfJobTimeAction;
} JOBOBJECT_END_OF_JOB_TIME_INFORMATION, *PJOBOBJECT_END_OF_JOB_TIME_INFORMATION; /* size: 0x0004 */

typedef struct _FORMAT_EX_PARAMETERS
{
  /* 0x0000 */ enum _MEDIA_TYPE MediaType;
  /* 0x0004 */ unsigned long StartCylinderNumber;
  /* 0x0008 */ unsigned long EndCylinderNumber;
  /* 0x000c */ unsigned long StartHeadNumber;
  /* 0x0010 */ unsigned long EndHeadNumber;
  /* 0x0014 */ unsigned short FormatGapLength;
  /* 0x0016 */ unsigned short SectorsPerTrack;
  /* 0x0018 */ unsigned short SectorNumber[1];
  /* 0x001a */ char __PADDING__[2];
} FORMAT_EX_PARAMETERS, *PFORMAT_EX_PARAMETERS; /* size: 0x001c */

typedef struct _PROCESS_PRIORITY_CLASS
{
  /* 0x0000 */ unsigned char Foreground;
  /* 0x0001 */ unsigned char PriorityClass;
} PROCESS_PRIORITY_CLASS, *PPROCESS_PRIORITY_CLASS; /* size: 0x0002 */

class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits>
{
  /* 0x0000 */ unsigned long status_;
  /* 0x0004 */ long Padding_541;
  /* 0x0008 */ void* sync_;
}; /* size: 0x0010 */

typedef struct _DOC_INFO_1A
{
  /* 0x0000 */ char* pDocName;
  /* 0x0008 */ char* pOutputFile;
  /* 0x0010 */ char* pDatatype;
} DOC_INFO_1A, *PDOC_INFO_1A; /* size: 0x0018 */

struct IInternetZoneManager
{
}; /* size: 0x0008 */

struct tagMCI_SET_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwTimeFormat;
  /* 0x000c */ unsigned long dwAudio;
}; /* size: 0x0010 */

struct tagRemHMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ unsigned long cbData;
  /* 0x0010 */ unsigned char data[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct IUriBuilderFactory
{
}; /* size: 0x0008 */

struct tagRAWINPUTDEVICE
{
  /* 0x0000 */ unsigned short usUsagePage;
  /* 0x0002 */ unsigned short usUsage;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndTarget;
}; /* size: 0x0010 */

typedef struct _DOC_INFO_1W
{
  /* 0x0000 */ wchar_t* pDocName;
  /* 0x0008 */ wchar_t* pOutputFile;
  /* 0x0010 */ wchar_t* pDatatype;
} DOC_INFO_1W, *PDOC_INFO_1W; /* size: 0x0018 */

typedef struct _FILE_ALIGNMENT_INFO
{
  /* 0x0000 */ unsigned long AlignmentRequirement;
} FILE_ALIGNMENT_INFO, *PFILE_ALIGNMENT_INFO; /* size: 0x0004 */

typedef struct _SE_ACCESS_REPLY
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ResultListCount;
  /* 0x0008 */ unsigned long* GrantedAccess;
  /* 0x0010 */ long* AccessStatus;
  /* 0x0018 */ struct _ACCESS_REASONS* AccessReason;
  /* 0x0020 */ struct _PRIVILEGE_SET** Privileges;
} SE_ACCESS_REPLY, *PSE_ACCESS_REPLY; /* size: 0x0028 */

typedef struct _MINIDUMP_THREAD_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned long NumberOfEntries;
} MINIDUMP_THREAD_INFO_LIST, *PMINIDUMP_THREAD_INFO_LIST; /* size: 0x000c */

struct tagEMRSTRETCHBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

typedef struct _nlsversioninfoex
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
  /* 0x000c */ unsigned long dwEffectiveId;
  /* 0x0010 */ struct _GUID guidCustomVersion;
} nlsversioninfoex, *Pnlsversioninfoex; /* size: 0x0020 */

struct HSTRING_HEADER
{
  union
  {
    union
    {
      /* 0x0000 */ void* Reserved1;
      /* 0x0000 */ char Reserved2[24];
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Reserved;
}; /* size: 0x0018 */

class Microsoft::WRL::Wrappers::HStringReference
{
  /* 0x0000 */ struct HSTRING_HEADER header_;
  /* 0x0018 */ struct HSTRING__* hstr_;
}; /* size: 0x0020 */

struct tagDEBUGHOOKINFO
{
  /* 0x0000 */ unsigned long idThread;
  /* 0x0004 */ unsigned long idThreadInstaller;
  /* 0x0008 */ __int64 lParam;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ int code;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _TXFS_TRANSACTION_ACTIVE_INFO
{
  /* 0x0000 */ unsigned char TransactionsActiveAtSnapshot;
} TXFS_TRANSACTION_ACTIVE_INFO, *PTXFS_TRANSACTION_ACTIVE_INFO; /* size: 0x0001 */

typedef struct _ACCESS_REASONS
{
  /* 0x0000 */ unsigned long Data[32];
} ACCESS_REASONS, *PACCESS_REASONS; /* size: 0x0080 */

typedef struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long DataFormatVersion;
  /* 0x0008 */ void* Data;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ long Padding_542;
  /* 0x0018 */ void* SectionGlobalData;
  /* 0x0020 */ unsigned long SectionGlobalDataLength;
  /* 0x0024 */ long Padding_543;
  /* 0x0028 */ void* SectionBase;
  /* 0x0030 */ unsigned long SectionTotalLength;
  /* 0x0034 */ long Padding_544;
  /* 0x0038 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0040 */ unsigned long AssemblyRosterIndex;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ struct _ACTIVATION_CONTEXT_SECTION_KEYED_DATA_ASSEMBLY_METADATA AssemblyMetadata;
} ACTIVATION_CONTEXT_SECTION_KEYED_DATA, *PACTIVATION_CONTEXT_SECTION_KEYED_DATA; /* size: 0x0070 */

struct Windows::Rtl::_FORMATTED_STREAM_ENUM_MAP_ENTRY
{
  /* 0x0000 */ unsigned long Value;
  /* 0x0004 */ long Padding_545;
  /* 0x0008 */ const char* String;
}; /* size: 0x0010 */

struct IPrivActivationContextInfo
{
}; /* size: 0x0008 */

typedef struct _JOURNAL_CREATE_DELETE_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_546;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long SecurityDescriptorLength;
  /* 0x002c */ long Padding_547;
  /* 0x0030 */ void* SecurityDescriptor;
  /* 0x0038 */ unsigned short ClassLength;
  /* 0x003a */ char Padding_548[6];
  /* 0x0040 */ void* ClassData;
  /* 0x0048 */ unsigned char SymbolicLink;
  /* 0x0049 */ char __PADDING__[7];
} JOURNAL_CREATE_DELETE_KEY_INFORMATION, *PJOURNAL_CREATE_DELETE_KEY_INFORMATION; /* size: 0x0050 */

typedef struct _CREATE_DISK
{
  /* 0x0000 */ enum _PARTITION_STYLE PartitionStyle;
  union
  {
    /* 0x0004 */ struct _CREATE_DISK_MBR Mbr;
    /* 0x0004 */ struct _CREATE_DISK_GPT Gpt;
  }; /* size: 0x0014 */
} CREATE_DISK, *PCREATE_DISK; /* size: 0x0018 */

typedef struct __vc_attributes::emitidlAttribute
{
  union
  {
    /* 0x0000 */ const int restricted;
    /* 0x0000 */ const int forced;
    /* 0x0000 */ const int push;
    /* 0x0000 */ const int pop;
    /* 0x0000 */ int value;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL defaultimports;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::emitidlAttribute, *P_vc_attributes::emitidlAttribute; /* size: 0x0008 */

typedef struct _ACCESS_ALLOWED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_ACE, *PACCESS_ALLOWED_ACE; /* size: 0x000c */

typedef struct _IMAGE_CE_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long FuncStart;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long PrologLen : 8; /* bit position: 0 */
    /* 0x0004 */ unsigned long FuncLen : 22; /* bit position: 8 */
    /* 0x0004 */ unsigned long ThirtyTwoBit : 1; /* bit position: 30 */
    /* 0x0004 */ unsigned long ExceptionFlag : 1; /* bit position: 31 */
  }; /* bitfield */
} IMAGE_CE_RUNTIME_FUNCTION_ENTRY, *PIMAGE_CE_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

typedef struct _STORAGE_EVENT_NOTIFICATION
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned __int64 Events;
} STORAGE_EVENT_NOTIFICATION, *PSTORAGE_EVENT_NOTIFICATION; /* size: 0x0010 */

struct tagTOGGLEKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

typedef struct _CRYPT_TIMESTAMP_REQUEST
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_549;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB HashedMessage;
  /* 0x0030 */ char* pszTSAPolicyId;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB Nonce;
  /* 0x0048 */ int fCertReq;
  /* 0x004c */ unsigned long cExtension;
  /* 0x0050 */ struct _CERT_EXTENSION* rgExtension;
} CRYPT_TIMESTAMP_REQUEST, *PCRYPT_TIMESTAMP_REQUEST; /* size: 0x0058 */

typedef struct _PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION
{
  /* 0x0000 */ struct _DYNAMIC_FUNCTION_TABLE* DynamicFunctionTable;
  /* 0x0008 */ unsigned char Remove;
  /* 0x0009 */ char __PADDING__[7];
} PROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION, *PPROCESS_DYNAMIC_FUNCTION_TABLE_INFORMATION; /* size: 0x0010 */

typedef struct _WIN32_FIND_STREAM_DATA
{
  /* 0x0000 */ union _LARGE_INTEGER StreamSize;
  /* 0x0008 */ wchar_t cStreamName[296];
} WIN32_FIND_STREAM_DATA, *PWIN32_FIND_STREAM_DATA; /* size: 0x0258 */

typedef struct _TOKEN_PRIVILEGES
{
  /* 0x0000 */ unsigned long PrivilegeCount;
  /* 0x0004 */ struct _LUID_AND_ATTRIBUTES Privileges[1];
} TOKEN_PRIVILEGES, *PTOKEN_PRIVILEGES; /* size: 0x0010 */

struct HRGN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _FILE_FS_FULL_SIZE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER TotalAllocationUnits;
  /* 0x0008 */ union _LARGE_INTEGER CallerAvailableAllocationUnits;
  /* 0x0010 */ union _LARGE_INTEGER ActualAvailableAllocationUnits;
  /* 0x0018 */ unsigned long SectorsPerAllocationUnit;
  /* 0x001c */ unsigned long BytesPerSector;
} FILE_FS_FULL_SIZE_INFORMATION, *PFILE_FS_FULL_SIZE_INFORMATION; /* size: 0x0020 */

typedef struct _currencyfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_550;
  /* 0x0010 */ wchar_t* lpDecimalSep;
  /* 0x0018 */ wchar_t* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ unsigned int PositiveOrder;
  /* 0x0028 */ wchar_t* lpCurrencySymbol;
} currencyfmtW, *PcurrencyfmtW; /* size: 0x0030 */

typedef struct _CERT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_551;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Issuer;
  /* 0x0040 */ struct _FILETIME NotBefore;
  /* 0x0048 */ struct _FILETIME NotAfter;
  /* 0x0050 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0060 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0090 */ struct _CRYPT_BIT_BLOB IssuerUniqueId;
  /* 0x00a8 */ struct _CRYPT_BIT_BLOB SubjectUniqueId;
  /* 0x00c0 */ unsigned long cExtension;
  /* 0x00c4 */ long Padding_552;
  /* 0x00c8 */ struct _CERT_EXTENSION* rgExtension;
} CERT_INFO, *PCERT_INFO; /* size: 0x00d0 */

typedef struct _CERT_EXTENSION
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ int fCritical;
  /* 0x000c */ long Padding_553;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CERT_EXTENSION, *PCERT_EXTENSION; /* size: 0x0020 */

struct tagEVENTMSG
{
  /* 0x0000 */ unsigned int message;
  /* 0x0004 */ unsigned int paramL;
  /* 0x0008 */ unsigned int paramH;
  /* 0x000c */ unsigned long time;
  /* 0x0010 */ struct HWND__* hwnd;
}; /* size: 0x0018 */

typedef struct _FILE_MAKE_COMPATIBLE_BUFFER
{
  /* 0x0000 */ unsigned char CloseDisc;
} FILE_MAKE_COMPATIBLE_BUFFER, *PFILE_MAKE_COMPATIBLE_BUFFER; /* size: 0x0001 */

typedef struct _MEMORY_WORKING_SET_EX_BLOCK
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 ShareCount : 3; /* bit position: 1 */
      /* 0x0000 */ unsigned __int64 Win32Protection : 11; /* bit position: 4 */
      /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
      /* 0x0000 */ unsigned __int64 Node : 6; /* bit position: 16 */
      /* 0x0000 */ unsigned __int64 Locked : 1; /* bit position: 22 */
      /* 0x0000 */ unsigned __int64 LargePage : 1; /* bit position: 23 */
      /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 24 */
      /* 0x0000 */ unsigned __int64 Reserved : 4; /* bit position: 27 */
      /* 0x0000 */ unsigned __int64 Bad : 1; /* bit position: 31 */
      /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
    }; /* bitfield */
    struct
    {
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned __int64 Valid : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned __int64 Reserved0 : 14; /* bit position: 1 */
        /* 0x0000 */ unsigned __int64 Shared : 1; /* bit position: 15 */
        /* 0x0000 */ unsigned __int64 Reserved1 : 5; /* bit position: 16 */
        /* 0x0000 */ unsigned __int64 PageTable : 1; /* bit position: 21 */
        /* 0x0000 */ unsigned __int64 Location : 2; /* bit position: 22 */
        /* 0x0000 */ unsigned __int64 Priority : 3; /* bit position: 24 */
        /* 0x0000 */ unsigned __int64 Reserved2 : 4; /* bit position: 27 */
        /* 0x0000 */ unsigned __int64 Bad : 1; /* bit position: 31 */
        /* 0x0000 */ unsigned __int64 ReservedUlong : 32; /* bit position: 32 */
      }; /* bitfield */
    } /* size: 0x0008 */ Invalid;
  }; /* size: 0x0008 */
} MEMORY_WORKING_SET_EX_BLOCK, *PMEMORY_WORKING_SET_EX_BLOCK; /* size: 0x0008 */

struct tagMCI_LOAD_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const wchar_t* lpfilename;
}; /* size: 0x0010 */

typedef struct _SHCREATEPROCESSINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const wchar_t* pszFile;
  /* 0x0018 */ const wchar_t* pszParameters;
  /* 0x0020 */ const wchar_t* pszCurrentDirectory;
  /* 0x0028 */ void* hUserToken;
  /* 0x0030 */ struct _SECURITY_ATTRIBUTES* lpProcessAttributes;
  /* 0x0038 */ struct _SECURITY_ATTRIBUTES* lpThreadAttributes;
  /* 0x0040 */ int bInheritHandles;
  /* 0x0044 */ unsigned long dwCreationFlags;
  /* 0x0048 */ struct _STARTUPINFOW* lpStartupInfo;
  /* 0x0050 */ struct _PROCESS_INFORMATION* lpProcessInformation;
} SHCREATEPROCESSINFOW, *PSHCREATEPROCESSINFOW; /* size: 0x0058 */

class BUCL::CByteAllocator
{
}; /* size: 0x0001 */

typedef struct _RTL_BARRIER
{
  union
  {
    struct
    {
      /* 0x0000 */ volatile long Barrier;
      /* 0x0004 */ long LeftBarrier;
      /* 0x0008 */ void* WaitEvent[2];
      /* 0x0018 */ long TotalProcessors;
      /* 0x001c */ unsigned long Spins;
    }; /* size: 0x0020 */
    struct
    {
      /* 0x0000 */ unsigned long Reserved1;
      /* 0x0004 */ unsigned long Reserved2;
      /* 0x0008 */ unsigned __int64 Reserved3[2];
      /* 0x0018 */ unsigned long Reserved4;
      /* 0x001c */ unsigned long Reserved5;
    } /* size: 0x0020 */ DUMMYRESERVEDSTRUCTNAME;
  }; /* size: 0x0020 */
} RTL_BARRIER, *PRTL_BARRIER; /* size: 0x0020 */

class BUCL::CDequeBase
{
  /* 0x0000 */ class BUCL::CDequeLinkage m_Head;
  /* 0x0018 */ unsigned __int64 m_EntryCount;
}; /* size: 0x0020 */

typedef struct _CERT_ECC_SIGNATURE
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB r;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB s;
} CERT_ECC_SIGNATURE, *PCERT_ECC_SIGNATURE; /* size: 0x0020 */

struct tagEMRPLGBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ struct _POINTL aptlDest[3];
  /* 0x0030 */ long xSrc;
  /* 0x0034 */ long ySrc;
  /* 0x0038 */ long cxSrc;
  /* 0x003c */ long cySrc;
  /* 0x0040 */ struct tagXFORM xformSrc;
  /* 0x0058 */ unsigned long crBkColorSrc;
  /* 0x005c */ unsigned long iUsageSrc;
  /* 0x0060 */ unsigned long offBmiSrc;
  /* 0x0064 */ unsigned long cbBmiSrc;
  /* 0x0068 */ unsigned long offBitsSrc;
  /* 0x006c */ unsigned long cbBitsSrc;
  /* 0x0070 */ long xMask;
  /* 0x0074 */ long yMask;
  /* 0x0078 */ unsigned long iUsageMask;
  /* 0x007c */ unsigned long offBmiMask;
  /* 0x0080 */ unsigned long cbBmiMask;
  /* 0x0084 */ unsigned long offBitsMask;
  /* 0x0088 */ unsigned long cbBitsMask;
}; /* size: 0x008c */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IImpersonateClipboardOwner>* ptr_;
}; /* size: 0x0008 */

struct linger
{
  /* 0x0000 */ unsigned short l_onoff;
  /* 0x0002 */ unsigned short l_linger;
}; /* size: 0x0004 */

typedef struct _CRYPT_ATTRIBUTE
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long cValue;
  /* 0x000c */ long Padding_554;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_ATTRIBUTE, *PCRYPT_ATTRIBUTE; /* size: 0x0018 */

typedef struct _FILE_FS_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long Characteristics;
} FILE_FS_DEVICE_INFORMATION, *PFILE_FS_DEVICE_INFORMATION; /* size: 0x0008 */

struct tagIMECHARPOSITION
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCharPos;
  /* 0x0008 */ struct tagPOINT pt;
  /* 0x0010 */ unsigned int cLineHeight;
  /* 0x0014 */ struct tagRECT rcDocument;
}; /* size: 0x0024 */

typedef struct _STORAGE_OFFLOAD_TOKEN
{
  /* 0x0000 */ unsigned char TokenType[4];
  /* 0x0004 */ unsigned char Reserved[2];
  /* 0x0006 */ unsigned char TokenIdLength[2];
  union
  {
    struct
    {
      /* 0x0008 */ unsigned char Reserved2[504];
    } /* size: 0x01f8 */ StorageOffloadZeroDataToken;
    /* 0x0008 */ unsigned char Token[504];
  }; /* size: 0x01f8 */
} STORAGE_OFFLOAD_TOKEN, *PSTORAGE_OFFLOAD_TOKEN; /* size: 0x0200 */

typedef struct _UNWIND_INFO
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Version : 3; /* bit position: 0 */
    /* 0x0000 */ unsigned char Flags : 5; /* bit position: 3 */
  }; /* bitfield */
  /* 0x0001 */ unsigned char SizeOfProlog;
  /* 0x0002 */ unsigned char CountOfCodes;
  struct /* bitfield */
  {
    /* 0x0003 */ unsigned char FrameRegister : 4; /* bit position: 0 */
    /* 0x0003 */ unsigned char FrameOffset : 4; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0004 */ union _UNWIND_CODE UnwindCode[1];
} UNWIND_INFO, *PUNWIND_INFO; /* size: 0x0006 */

typedef struct _MINIDUMP_UNLOADED_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
} MINIDUMP_UNLOADED_MODULE, *PMINIDUMP_UNLOADED_MODULE; /* size: 0x0018 */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 ZeroBits;
  /* 0x0010 */ void* StackBase;
} PROCESS_STACK_ALLOCATION_INFORMATION, *PPROCESS_STACK_ALLOCATION_INFORMATION; /* size: 0x0018 */

typedef struct _PROCESS_STACK_ALLOCATION_INFORMATION_EX
{
  /* 0x0000 */ unsigned long PreferredNode;
  /* 0x0004 */ unsigned long Reserved0;
  /* 0x0008 */ unsigned long Reserved1;
  /* 0x000c */ unsigned long Reserved2;
  /* 0x0010 */ struct _PROCESS_STACK_ALLOCATION_INFORMATION AllocInfo;
} PROCESS_STACK_ALLOCATION_INFORMATION_EX, *PPROCESS_STACK_ALLOCATION_INFORMATION_EX; /* size: 0x0028 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
{
  /* 0x0000 */ void* pValue;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ long __PADDING__[1];
} TOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE, *PTOKEN_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE; /* size: 0x0010 */

struct IAdviseSinkEx
{
}; /* size: 0x0008 */

struct IComCatalog2Internal
{
}; /* size: 0x0008 */

struct IServerSecurity
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PREFETCH_PATCH_INFORMATION
{
  /* 0x0000 */ unsigned long PrefetchPatchCount;
} SYSTEM_PREFETCH_PATCH_INFORMATION, *PSYSTEM_PREFETCH_PATCH_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_GET_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long SidLength;
  /* 0x0008 */ struct _SID Sid;
} FILE_GET_QUOTA_INFORMATION, *PFILE_GET_QUOTA_INFORMATION; /* size: 0x0014 */

typedef struct _PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BufferLength;
  /* 0x0008 */ void* Buffer;
} PLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA, *PPLUGPLAY_CONTROL_BLOCKED_DRIVER_DATA; /* size: 0x0010 */

typedef struct __midl_frag92_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag92_t, *P_midl_frag92_t; /* size: 0x0038 */

typedef struct _WNF_STATE_NAME
{
  /* 0x0000 */ unsigned long Data[2];
} WNF_STATE_NAME, *PWNF_STATE_NAME; /* size: 0x0008 */

typedef struct _CRYPT_TRUST_REG_ENTRY
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_555;
  /* 0x0008 */ wchar_t* pwszDLLName;
  /* 0x0010 */ wchar_t* pwszFunctionName;
} CRYPT_TRUST_REG_ENTRY, *PCRYPT_TRUST_REG_ENTRY; /* size: 0x0018 */

typedef struct _CRYPT_REGISTER_ACTIONID
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_556;
  /* 0x0008 */ struct _CRYPT_TRUST_REG_ENTRY sInitProvider;
  /* 0x0020 */ struct _CRYPT_TRUST_REG_ENTRY sObjectProvider;
  /* 0x0038 */ struct _CRYPT_TRUST_REG_ENTRY sSignatureProvider;
  /* 0x0050 */ struct _CRYPT_TRUST_REG_ENTRY sCertificateProvider;
  /* 0x0068 */ struct _CRYPT_TRUST_REG_ENTRY sCertificatePolicyProvider;
  /* 0x0080 */ struct _CRYPT_TRUST_REG_ENTRY sFinalPolicyProvider;
  /* 0x0098 */ struct _CRYPT_TRUST_REG_ENTRY sTestPolicyProvider;
  /* 0x00b0 */ struct _CRYPT_TRUST_REG_ENTRY sCleanupProvider;
} CRYPT_REGISTER_ACTIONID, *PCRYPT_REGISTER_ACTIONID; /* size: 0x00c8 */

struct IPropertyBag2
{
}; /* size: 0x0008 */

typedef struct _FP_80
{
  /* 0x0000 */ unsigned long W[3];
} FP_80, *PFP_80; /* size: 0x000c */

typedef struct _FP_128
{
  /* 0x0000 */ unsigned long W[4];
} FP_128, *PFP_128; /* size: 0x0010 */

struct SYSTEM_BATTERY_STATE
{
  /* 0x0000 */ unsigned char AcOnLine;
  /* 0x0001 */ unsigned char BatteryPresent;
  /* 0x0002 */ unsigned char Charging;
  /* 0x0003 */ unsigned char Discharging;
  /* 0x0004 */ unsigned char Spare1[3];
  /* 0x0007 */ unsigned char Tag;
  /* 0x0008 */ unsigned long MaxCapacity;
  /* 0x000c */ unsigned long RemainingCapacity;
  /* 0x0010 */ unsigned long Rate;
  /* 0x0014 */ unsigned long EstimatedTime;
  /* 0x0018 */ unsigned long DefaultAlert1;
  /* 0x001c */ unsigned long DefaultAlert2;
}; /* size: 0x0020 */

struct tagSOAP_ACTIVATION_INFO
{
  /* 0x0000 */ int bSoapActivated;
  /* 0x0004 */ long lMode;
  /* 0x0008 */ wchar_t* bstrVRoot;
  /* 0x0010 */ wchar_t* bstrMailTo;
  /* 0x0018 */ wchar_t* bstrAssemblyName;
  /* 0x0020 */ wchar_t* bstrTypeName;
  /* 0x0028 */ wchar_t* bstrBaseUrl;
}; /* size: 0x0030 */

struct tagRAWHID
{
  /* 0x0000 */ unsigned long dwSizeHid;
  /* 0x0004 */ unsigned long dwCount;
  /* 0x0008 */ unsigned char bRawData[1];
  /* 0x0009 */ char __PADDING__[3];
}; /* size: 0x000c */

typedef struct _FILE_FS_VOLUME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeCreationTime;
  /* 0x0008 */ unsigned long VolumeSerialNumber;
  /* 0x000c */ unsigned long VolumeLabelLength;
  /* 0x0010 */ unsigned char SupportsObjects;
  /* 0x0011 */ char Padding_557;
  /* 0x0012 */ wchar_t VolumeLabel[1];
  /* 0x0014 */ long __PADDING__[1];
} FILE_FS_VOLUME_INFORMATION, *PFILE_FS_VOLUME_INFORMATION; /* size: 0x0018 */

typedef struct _CAT_NAMEVALUE
{
  /* 0x0000 */ wchar_t* pwszTag;
  /* 0x0008 */ unsigned long fdwFlags;
  /* 0x000c */ long Padding_558;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CAT_NAMEVALUE, *PCAT_NAMEVALUE; /* size: 0x0020 */

struct IWinRTApplicationCatalogInternal
{
}; /* size: 0x0008 */

struct IPropertyPage
{
}; /* size: 0x0008 */

typedef struct _EFI_DRIVER_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Id;
  /* 0x000c */ unsigned long FriendlyNameOffset;
  /* 0x0010 */ unsigned long DriverFilePathOffset;
} EFI_DRIVER_ENTRY, *PEFI_DRIVER_ENTRY; /* size: 0x0014 */

typedef struct _EFI_DRIVER_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _EFI_DRIVER_ENTRY DriverEntry;
} EFI_DRIVER_ENTRY_LIST, *PEFI_DRIVER_ENTRY_LIST; /* size: 0x0018 */

typedef struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ unsigned short UniqueProcessId;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned char ObjectTypeIndex;
  /* 0x0005 */ unsigned char HandleAttributes;
  /* 0x0006 */ unsigned short HandleValue;
  /* 0x0008 */ void* Object;
  /* 0x0010 */ unsigned long GrantedAccess;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_HANDLE_TABLE_ENTRY_INFO, *PSYSTEM_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0018 */

typedef struct _DCB
{
  /* 0x0000 */ unsigned long DCBlength;
  /* 0x0004 */ unsigned long BaudRate;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long fBinary : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long fParity : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long fOutxCtsFlow : 1; /* bit position: 2 */
    /* 0x0008 */ unsigned long fOutxDsrFlow : 1; /* bit position: 3 */
    /* 0x0008 */ unsigned long fDtrControl : 2; /* bit position: 4 */
    /* 0x0008 */ unsigned long fDsrSensitivity : 1; /* bit position: 6 */
    /* 0x0008 */ unsigned long fTXContinueOnXoff : 1; /* bit position: 7 */
    /* 0x0008 */ unsigned long fOutX : 1; /* bit position: 8 */
    /* 0x0008 */ unsigned long fInX : 1; /* bit position: 9 */
    /* 0x0008 */ unsigned long fErrorChar : 1; /* bit position: 10 */
    /* 0x0008 */ unsigned long fNull : 1; /* bit position: 11 */
    /* 0x0008 */ unsigned long fRtsControl : 2; /* bit position: 12 */
    /* 0x0008 */ unsigned long fAbortOnError : 1; /* bit position: 14 */
    /* 0x0008 */ unsigned long fDummy2 : 17; /* bit position: 15 */
  }; /* bitfield */
  /* 0x000c */ unsigned short wReserved;
  /* 0x000e */ unsigned short XonLim;
  /* 0x0010 */ unsigned short XoffLim;
  /* 0x0012 */ unsigned char ByteSize;
  /* 0x0013 */ unsigned char Parity;
  /* 0x0014 */ unsigned char StopBits;
  /* 0x0015 */ char XonChar;
  /* 0x0016 */ char XoffChar;
  /* 0x0017 */ char ErrorChar;
  /* 0x0018 */ char EofChar;
  /* 0x0019 */ char EvtChar;
  /* 0x001a */ unsigned short wReserved1;
} DCB, *PDCB; /* size: 0x001c */

typedef struct _COMMCONFIG
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned short wVersion;
  /* 0x0006 */ unsigned short wReserved;
  /* 0x0008 */ struct _DCB dcb;
  /* 0x0024 */ unsigned long dwProviderSubType;
  /* 0x0028 */ unsigned long dwProviderOffset;
  /* 0x002c */ unsigned long dwProviderSize;
  /* 0x0030 */ wchar_t wcProviderData[1];
  /* 0x0032 */ char __PADDING__[2];
} COMMCONFIG, *PCOMMCONFIG; /* size: 0x0034 */

struct tagBinaryParam
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ short Size;
  /* 0x000a */ char __PADDING__[6];
}; /* size: 0x0010 */

struct tagRPC_EE_INFO_PARAM
{
  /* 0x0000 */ enum tagExtendedErrorParamTypes ParameterType;
  /* 0x0004 */ long Padding_559;
  union
  {
    union
    {
      /* 0x0008 */ char* AnsiString;
      /* 0x0008 */ wchar_t* UnicodeString;
      /* 0x0008 */ long LVal;
      /* 0x0008 */ short SVal;
      /* 0x0008 */ unsigned __int64 PVal;
      /* 0x0008 */ struct tagBinaryParam BVal;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
}; /* size: 0x0018 */

struct BSMINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_560;
  /* 0x0008 */ struct HDESK__* hdesk;
  /* 0x0010 */ struct HWND__* hwnd;
  /* 0x0018 */ struct _LUID luid;
}; /* size: 0x0020 */

typedef struct _DISK_PARTITION_INFO
{
  /* 0x0000 */ unsigned long SizeOfPartitionInfo;
  /* 0x0004 */ enum _PARTITION_STYLE PartitionStyle;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long Signature;
      /* 0x000c */ unsigned long CheckSum;
    } /* size: 0x0008 */ Mbr;
    struct
    {
      /* 0x0008 */ struct _GUID DiskId;
    } /* size: 0x0010 */ Gpt;
  }; /* size: 0x0010 */
} DISK_PARTITION_INFO, *PDISK_PARTITION_INFO; /* size: 0x0018 */

struct IOleUndoManager
{
}; /* size: 0x0008 */

typedef struct _SERVICE_FAILURE_ACTIONS_FLAG
{
  /* 0x0000 */ int fFailureActionsOnNonCrashFailures;
} SERVICE_FAILURE_ACTIONS_FLAG, *PSERVICE_FAILURE_ACTIONS_FLAG; /* size: 0x0004 */

class CAtom
{
  /* 0x0000 */ unsigned short m_atom;
}; /* size: 0x0002 */

typedef struct _wfinddata32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ unsigned long size;
  /* 0x0014 */ wchar_t name[260];
} wfinddata32_t, *Pwfinddata32_t; /* size: 0x021c */

struct tagMCI_VD_ESCAPE_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const wchar_t* lpstrCommand;
}; /* size: 0x0010 */

typedef struct _SYSTEM_VERIFIER_ISSUE
{
  /* 0x0000 */ unsigned __int64 IssueType;
  /* 0x0008 */ void* Address;
  /* 0x0010 */ unsigned __int64 Parameters[2];
} SYSTEM_VERIFIER_ISSUE, *PSYSTEM_VERIFIER_ISSUE; /* size: 0x0020 */

typedef struct _SI_COPYFILE
{
  /* 0x0000 */ unsigned long SourceFileNameLength;
  /* 0x0004 */ unsigned long DestinationFileNameLength;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ wchar_t FileNameBuffer[1];
  /* 0x000e */ char __PADDING__[2];
} SI_COPYFILE, *PSI_COPYFILE; /* size: 0x0010 */

struct tagRPC_CALL_ATTRIBUTES_V1_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_561;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_562;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _CERT_QC_STATEMENT
{
  /* 0x0000 */ char* pszStatementId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB StatementInfo;
} CERT_QC_STATEMENT, *PCERT_QC_STATEMENT; /* size: 0x0018 */

typedef struct _SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CycleTime;
} SYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION, *PSYSTEM_PROCESSOR_CYCLE_TIME_INFORMATION; /* size: 0x0008 */

typedef struct _div_t
{
  /* 0x0000 */ int quot;
  /* 0x0004 */ int rem;
} div_t, *Pdiv_t; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> const >;

typedef struct _CRYPT_KEY_PROV_PARAM
{
  /* 0x0000 */ unsigned long dwParam;
  /* 0x0004 */ long Padding_563;
  /* 0x0008 */ unsigned char* pbData;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned long dwFlags;
} CRYPT_KEY_PROV_PARAM, *PCRYPT_KEY_PROV_PARAM; /* size: 0x0018 */

typedef struct _ACTIVATION_CONTEXT_STACK
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* ActiveFrame;
  /* 0x0008 */ struct _LIST_ENTRY FrameListCache;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ unsigned long NextCookieSequenceNumber;
  /* 0x0020 */ unsigned long StackId;
  /* 0x0024 */ long __PADDING__[1];
} ACTIVATION_CONTEXT_STACK, *PACTIVATION_CONTEXT_STACK; /* size: 0x0028 */

struct SCARD_T1_REQUEST
{
  /* 0x0000 */ struct _SCARD_IO_REQUEST ioRequest;
}; /* size: 0x0008 */

typedef struct _PROCESS_FOREGROUND_BACKGROUND
{
  /* 0x0000 */ unsigned char Foreground;
} PROCESS_FOREGROUND_BACKGROUND, *PPROCESS_FOREGROUND_BACKGROUND; /* size: 0x0001 */

typedef struct _RPC_SECURITY_QOS_V5_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_564;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long Padding_565;
  /* 0x0030 */ void* ServerSecurityDescriptor;
} RPC_SECURITY_QOS_V5_W, *PRPC_SECURITY_QOS_V5_W; /* size: 0x0038 */

typedef struct _VIRTUAL_STORAGE_TYPE
{
  /* 0x0000 */ unsigned long DeviceId;
  /* 0x0004 */ struct _GUID VendorId;
} VIRTUAL_STORAGE_TYPE, *PVIRTUAL_STORAGE_TYPE; /* size: 0x0014 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY
{
  /* 0x0000 */ unsigned long EntryLength;
  /* 0x0004 */ unsigned long DependencyTypeFlags;
  /* 0x0008 */ unsigned long ProviderSpecificFlags;
  /* 0x000c */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
} STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY, *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY; /* size: 0x0020 */

typedef struct _BIDI_DATA
{
  /* 0x0000 */ unsigned long dwBidiType;
  /* 0x0004 */ long Padding_566;
  union
  {
    union
    {
      /* 0x0008 */ int bData;
      /* 0x0008 */ long iData;
      /* 0x0008 */ wchar_t* sData;
      /* 0x0008 */ float fData;
      /* 0x0008 */ struct _BINARY_CONTAINER biData;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
} BIDI_DATA, *PBIDI_DATA; /* size: 0x0018 */

typedef struct _BIDI_RESPONSE_DATA
{
  /* 0x0000 */ unsigned long dwResult;
  /* 0x0004 */ unsigned long dwReqNumber;
  /* 0x0008 */ wchar_t* pSchema;
  /* 0x0010 */ struct _BIDI_DATA data;
} BIDI_RESPONSE_DATA, *PBIDI_RESPONSE_DATA; /* size: 0x0028 */

struct IOleParentUndoUnit
{
}; /* size: 0x0008 */

typedef struct _GENERATE_NAME_CONTEXT
{
  /* 0x0000 */ unsigned short Checksum;
  /* 0x0002 */ unsigned char ChecksumInserted;
  /* 0x0003 */ unsigned char NameLength;
  /* 0x0004 */ wchar_t NameBuffer[8];
  /* 0x0014 */ unsigned long ExtensionLength;
  /* 0x0018 */ wchar_t ExtensionBuffer[4];
  /* 0x0020 */ unsigned long LastIndexValue;
} GENERATE_NAME_CONTEXT, *PGENERATE_NAME_CONTEXT; /* size: 0x0024 */

typedef struct _MINIDUMP_THREAD_INFO
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int DumpFlags;
  /* 0x0008 */ unsigned int DumpError;
  /* 0x000c */ unsigned int ExitStatus;
  /* 0x0010 */ unsigned __int64 CreateTime;
  /* 0x0018 */ unsigned __int64 ExitTime;
  /* 0x0020 */ unsigned __int64 KernelTime;
  /* 0x0028 */ unsigned __int64 UserTime;
  /* 0x0030 */ unsigned __int64 StartAddress;
  /* 0x0038 */ unsigned __int64 Affinity;
} MINIDUMP_THREAD_INFO, *PMINIDUMP_THREAD_INFO; /* size: 0x0040 */

typedef struct _REPARSE_INDEX_KEY
{
  /* 0x0000 */ unsigned long FileReparseTag;
  /* 0x0004 */ union _LARGE_INTEGER FileId;
} REPARSE_INDEX_KEY, *PREPARSE_INDEX_KEY; /* size: 0x000c */

typedef struct _FILE_END_OF_FILE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFORMATION, *PFILE_END_OF_FILE_INFORMATION; /* size: 0x0008 */

typedef struct _PROCESS_HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ReserveSize;
  /* 0x0008 */ unsigned __int64 CommitSize;
  /* 0x0010 */ unsigned long NumberOfHeaps;
  /* 0x0014 */ long Padding_567;
  /* 0x0018 */ unsigned __int64 FirstHeapInformationOffset;
} PROCESS_HEAP_INFORMATION, *PPROCESS_HEAP_INFORMATION; /* size: 0x0020 */

typedef struct _HEAP_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Mode;
  /* 0x000c */ long Padding_568;
  /* 0x0010 */ unsigned __int64 ReserveSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
  /* 0x0020 */ unsigned __int64 FirstRegionInformationOffset;
  /* 0x0028 */ unsigned __int64 NextHeapInformationOffset;
} HEAP_INFORMATION, *PHEAP_INFORMATION; /* size: 0x0030 */

typedef struct _HEAP_EXTENDED_INFORMATION
{
  /* 0x0000 */ void* Process;
  /* 0x0008 */ unsigned __int64 Heap;
  /* 0x0010 */ unsigned long Level;
  /* 0x0014 */ long Padding_569;
  /* 0x0018 */ void* CallbackRoutine /* function */;
  /* 0x0020 */ void* CallbackContext;
  union
  {
    /* 0x0028 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0028 */ struct _HEAP_INFORMATION HeapInformation;
  }; /* size: 0x0030 */
} HEAP_EXTENDED_INFORMATION, *PHEAP_EXTENDED_INFORMATION; /* size: 0x0058 */

typedef struct _FLAGGED_WORD_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned short asData[1];
  /* 0x000a */ char __PADDING__[2];
} FLAGGED_WORD_BLOB, *PFLAGGED_WORD_BLOB; /* size: 0x000c */

typedef struct __midl_frag1553_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1553_t, *P_midl_frag1553_t; /* size: 0x0068 */

struct IFont
{
}; /* size: 0x0008 */

struct tagAspectInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwFlags;
}; /* size: 0x0008 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_570;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
  /* 0x0028 */ struct _SEC_WINNT_AUTH_IDENTITY_A* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_571;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V2_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V2_A; /* size: 0x0040 */

typedef struct _WIN32_FILE_ATTRIBUTE_DATA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
} WIN32_FILE_ATTRIBUTE_DATA, *PWIN32_FILE_ATTRIBUTE_DATA; /* size: 0x0024 */

typedef struct _HEAP_REGION_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 ReserveSize;
  /* 0x0010 */ unsigned __int64 CommitSize;
  /* 0x0018 */ unsigned __int64 FirstRangeInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRegionInformationOffset;
} HEAP_REGION_INFORMATION, *PHEAP_REGION_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned __int64 Size;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ unsigned long Protection;
  /* 0x0018 */ unsigned __int64 FirstBlockInformationOffset;
  /* 0x0020 */ unsigned __int64 NextRangeInformationOffset;
} HEAP_RANGE_INFORMATION, *PHEAP_RANGE_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_BLOCK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ long Padding_572;
  /* 0x0010 */ unsigned __int64 DataSize;
  /* 0x0018 */ unsigned __int64 OverheadSize;
  /* 0x0020 */ unsigned __int64 NextBlockInformationOffset;
} HEAP_BLOCK_INFORMATION, *PHEAP_BLOCK_INFORMATION; /* size: 0x0028 */

typedef struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long HeapIndex;
  /* 0x000c */ unsigned long LastHeapIndex;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned __int64 ReserveSize;
  /* 0x0020 */ unsigned __int64 CommitSize;
  /* 0x0028 */ unsigned long SegmentCount;
  /* 0x002c */ long Padding_573;
  /* 0x0030 */ unsigned __int64 LargeUCRMemory;
  /* 0x0038 */ unsigned long UCRLength;
  /* 0x003c */ long Padding_574;
  /* 0x0040 */ unsigned __int64 AllocatedSpace;
  /* 0x0048 */ unsigned __int64 FreeSpace;
  /* 0x0050 */ unsigned long FreeListLength;
  /* 0x0054 */ unsigned long Contention;
  /* 0x0058 */ unsigned long VirtualBlocks;
  /* 0x005c */ unsigned long CommitRate;
  /* 0x0060 */ unsigned long DecommitRate;
  /* 0x0064 */ long __PADDING__[1];
} HEAP_PERFORMANCE_COUNTERS_INFORMATION, *PHEAP_PERFORMANCE_COUNTERS_INFORMATION; /* size: 0x0068 */

typedef struct _HEAP_INFORMATION_ITEM
{
  /* 0x0000 */ unsigned long Level;
  /* 0x0004 */ long Padding_575;
  /* 0x0008 */ unsigned __int64 Size;
  union
  {
    /* 0x0010 */ struct _PROCESS_HEAP_INFORMATION ProcessHeapInformation;
    /* 0x0010 */ struct _HEAP_INFORMATION HeapInformation;
    /* 0x0010 */ struct _HEAP_REGION_INFORMATION HeapRegionInformation;
    /* 0x0010 */ struct _HEAP_RANGE_INFORMATION HeapRangeInformation;
    /* 0x0010 */ struct _HEAP_BLOCK_INFORMATION HeapBlockInformation;
    /* 0x0010 */ struct _HEAP_PERFORMANCE_COUNTERS_INFORMATION HeapPerfInformation;
    struct
    {
      /* 0x0010 */ unsigned __int64 DynamicStart;
      /* 0x0018 */ long __PADDING__[24];
    }; /* size: 0x0068 */
  }; /* size: 0x0068 */
} HEAP_INFORMATION_ITEM, *PHEAP_INFORMATION_ITEM; /* size: 0x0078 */

class Windows::Rtl::AutoString<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >
{
}; /* size: 0x0018 */

struct tagLOGBRUSH32
{
  /* 0x0000 */ unsigned int lbStyle;
  /* 0x0004 */ unsigned long lbColor;
  /* 0x0008 */ unsigned long lbHatch;
}; /* size: 0x000c */

struct tagEMRCREATEBRUSHINDIRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ struct tagLOGBRUSH32 lb;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnknown> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IUnknown>* ptr_;
}; /* size: 0x0008 */

struct IOleInPlaceSiteWindowless
{
}; /* size: 0x0008 */

typedef struct _ROOT_INFO_LUID
{
  /* 0x0000 */ unsigned long LowPart;
  /* 0x0004 */ long HighPart;
} ROOT_INFO_LUID, *PROOT_INFO_LUID; /* size: 0x0008 */

struct IHttpSecurity
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshal> >
{
}; /* size: 0x0008 */

struct tagMCI_ANIM_STEP_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrames;
}; /* size: 0x000c */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc** m_rgpAssoc;
  /* 0x0008 */ unsigned int m_cAssoc;
  /* 0x000c */ unsigned int m_cPresent;
  /* 0x0010 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocFree;
  /* 0x0018 */ class CListHeader m_listInUse;
}; /* size: 0x0028 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
  /* 0x0000 */ long Padding_576[2];
  /* 0x0008 */ class XSLOCK m_lock;
  /* 0x0088 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_map;
  /* 0x00b0 */ int m_fCsInitialized;
}; /* size: 0x00b8 */

struct tagEMROFFSETCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOffset;
}; /* size: 0x0010 */

struct tagSCROLLINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ int nMin;
  /* 0x000c */ int nMax;
  /* 0x0010 */ unsigned int nPage;
  /* 0x0014 */ int nPos;
  /* 0x0018 */ int nTrackPos;
}; /* size: 0x001c */

typedef struct _SYSTEM_CALL_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long NumberOfTables;
} SYSTEM_CALL_COUNT_INFORMATION, *PSYSTEM_CALL_COUNT_INFORMATION; /* size: 0x0008 */

struct tagAUXCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned short wTechnology;
  /* 0x004a */ unsigned short wReserved1;
  /* 0x004c */ unsigned long dwSupport;
}; /* size: 0x0050 */

typedef struct __midl_frag973_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag973_t, *P_midl_frag973_t; /* size: 0x0038 */

typedef struct __midl_frag138_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag138_t, *P_midl_frag138_t; /* size: 0x000c */

typedef struct _JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
} JOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION, *PJOBOBJECT_BASIC_AND_IO_ACCOUNTING_INFORMATION; /* size: 0x0060 */

struct tagREGISTERWORDW
{
  /* 0x0000 */ wchar_t* lpReading;
  /* 0x0008 */ wchar_t* lpWord;
}; /* size: 0x0010 */

typedef struct _OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long PagedPoolCharge;
  /* 0x0014 */ unsigned long NonPagedPoolCharge;
  /* 0x0018 */ unsigned long Reserved[3];
  /* 0x0024 */ unsigned long NameInfoSize;
  /* 0x0028 */ unsigned long TypeInfoSize;
  /* 0x002c */ unsigned long SecurityDescriptorSize;
  /* 0x0030 */ union _LARGE_INTEGER CreationTime;
} OBJECT_BASIC_INFORMATION, *POBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct _VOLUME_GET_GPT_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned __int64 GptAttributes;
} VOLUME_GET_GPT_ATTRIBUTES_INFORMATION, *PVOLUME_GET_GPT_ATTRIBUTES_INFORMATION; /* size: 0x0008 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_577;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0020 */ void* pvKeyEncryptionAuxInfo;
  /* 0x0028 */ unsigned __int64 hCryptProv;
  /* 0x0030 */ unsigned long dwKeyChoice;
  /* 0x0034 */ long Padding_578;
  union
  {
    /* 0x0038 */ unsigned __int64 hKeyEncryptionKey;
    /* 0x0038 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0008 */
  /* 0x0040 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0050 */ struct _FILETIME Date;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO, *PCMSG_MAIL_LIST_RECIPIENT_ENCODE_INFO; /* size: 0x0060 */

typedef struct _CERT_SERVER_OCSP_RESPONSE_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_579;
  /* 0x0008 */ unsigned char* pbEncodedOcspResponse;
  /* 0x0010 */ unsigned long cbEncodedOcspResponse;
  /* 0x0014 */ long __PADDING__[1];
} CERT_SERVER_OCSP_RESPONSE_CONTEXT, *PCERT_SERVER_OCSP_RESPONSE_CONTEXT; /* size: 0x0018 */

typedef struct _MEMORYSTATUS
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 dwTotalPhys;
  /* 0x0010 */ unsigned __int64 dwAvailPhys;
  /* 0x0018 */ unsigned __int64 dwTotalPageFile;
  /* 0x0020 */ unsigned __int64 dwAvailPageFile;
  /* 0x0028 */ unsigned __int64 dwTotalVirtual;
  /* 0x0030 */ unsigned __int64 dwAvailVirtual;
} MEMORYSTATUS, *PMEMORYSTATUS; /* size: 0x0038 */

typedef struct _PLEX_READ_DATA_REQUEST
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ unsigned long ByteLength;
  /* 0x000c */ unsigned long PlexNumber;
} PLEX_READ_DATA_REQUEST, *PPLEX_READ_DATA_REQUEST; /* size: 0x0010 */

struct IRuntimeBroker
{
}; /* size: 0x0008 */

struct SAFER_LEVEL_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _GLYPHMETRICS
{
  /* 0x0000 */ unsigned int gmBlackBoxX;
  /* 0x0004 */ unsigned int gmBlackBoxY;
  /* 0x0008 */ struct tagPOINT gmptGlyphOrigin;
  /* 0x0010 */ short gmCellIncX;
  /* 0x0012 */ short gmCellIncY;
} GLYPHMETRICS, *PGLYPHMETRICS; /* size: 0x0014 */

typedef struct _UNWIND_HISTORY_TABLE
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned char LocalHint;
  /* 0x0005 */ unsigned char GlobalHint;
  /* 0x0006 */ unsigned char Search;
  /* 0x0007 */ unsigned char Once;
  /* 0x0008 */ unsigned __int64 LowAddress;
  /* 0x0010 */ unsigned __int64 HighAddress;
  /* 0x0018 */ struct _UNWIND_HISTORY_TABLE_ENTRY Entry[12];
} UNWIND_HISTORY_TABLE, *PUNWIND_HISTORY_TABLE; /* size: 0x00d8 */

typedef struct _BOOT_ENTRY_LIST
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _BOOT_ENTRY BootEntry;
} BOOT_ENTRY_LIST, *PBOOT_ENTRY_LIST; /* size: 0x0024 */

typedef struct _MINIDUMP_THREAD_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x000c */ long Padding_580;
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ unsigned long SizeOfContext;
  /* 0x04e4 */ unsigned __int64 StackBase;
  /* 0x04ec */ unsigned __int64 StackEnd;
  /* 0x04f4 */ long __PADDING__[3];
} MINIDUMP_THREAD_CALLBACK, *PMINIDUMP_THREAD_CALLBACK; /* size: 0x0500 */

struct ISurrogate
{
}; /* size: 0x0008 */

typedef struct _KCRM_MARSHAL_HEADER
{
  /* 0x0000 */ unsigned long VersionMajor;
  /* 0x0004 */ unsigned long VersionMinor;
  /* 0x0008 */ unsigned long NumProtocols;
  /* 0x000c */ unsigned long Unused;
} KCRM_MARSHAL_HEADER, *PKCRM_MARSHAL_HEADER; /* size: 0x0010 */

typedef struct _CMSG_KEY_AGREE_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwOriginatorChoice;
  union
  {
    /* 0x0008 */ struct _CERT_ID OriginatorCertId;
    /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO OriginatorPublicKeyInfo;
  }; /* size: 0x0030 */
  /* 0x0038 */ struct _CRYPTOAPI_BLOB UserKeyingMaterial;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0060 */ unsigned long cRecipientEncryptedKeys;
  /* 0x0064 */ long Padding_581;
  /* 0x0068 */ struct _CMSG_RECIPIENT_ENCRYPTED_KEY_INFO** rgpRecipientEncryptedKeys;
} CMSG_KEY_AGREE_RECIPIENT_INFO, *PCMSG_KEY_AGREE_RECIPIENT_INFO; /* size: 0x0070 */

struct tagPOLYTEXTA
{
  /* 0x0000 */ int x;
  /* 0x0004 */ int y;
  /* 0x0008 */ unsigned int n;
  /* 0x000c */ long Padding_582;
  /* 0x0010 */ const char* lpstr;
  /* 0x0018 */ unsigned int uiFlags;
  /* 0x001c */ struct tagRECT rcl;
  /* 0x002c */ long Padding_583;
  /* 0x0030 */ int* pdx;
}; /* size: 0x0038 */

struct IPicture2
{
}; /* size: 0x0008 */

typedef struct _REQUEST_RAW_ENCRYPTED_DATA
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} REQUEST_RAW_ENCRYPTED_DATA, *PREQUEST_RAW_ENCRYPTED_DATA; /* size: 0x0010 */

typedef struct _ACTIVATION_CONTEXT_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long ulFormatVersion;
  /* 0x0008 */ unsigned long ulAssemblyCount;
  /* 0x000c */ unsigned long ulRootManifestPathType;
  /* 0x0010 */ unsigned long ulRootManifestPathChars;
  /* 0x0014 */ unsigned long ulRootConfigurationPathType;
  /* 0x0018 */ unsigned long ulRootConfigurationPathChars;
  /* 0x001c */ unsigned long ulAppDirPathType;
  /* 0x0020 */ unsigned long ulAppDirPathChars;
  /* 0x0024 */ long Padding_584;
  /* 0x0028 */ const wchar_t* lpRootManifestPath;
  /* 0x0030 */ const wchar_t* lpRootConfigurationPath;
  /* 0x0038 */ const wchar_t* lpAppDirPath;
} ACTIVATION_CONTEXT_DETAILED_INFORMATION, *PACTIVATION_CONTEXT_DETAILED_INFORMATION; /* size: 0x0040 */

struct tagMSGBOXPARAMSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_585;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const wchar_t* lpszText;
  /* 0x0020 */ const wchar_t* lpszCaption;
  /* 0x0028 */ unsigned long dwStyle;
  /* 0x002c */ long Padding_586;
  /* 0x0030 */ const wchar_t* lpszIcon;
  /* 0x0038 */ unsigned __int64 dwContextHelpId;
  /* 0x0040 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0048 */ unsigned long dwLanguageId;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

struct tagMENUBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcBar;
  /* 0x0014 */ long Padding_587;
  /* 0x0018 */ struct HMENU__* hMenu;
  /* 0x0020 */ struct HWND__* hwndMenu;
  struct /* bitfield */
  {
    /* 0x0028 */ int fBarFocused : 1; /* bit position: 0 */
    /* 0x0028 */ int fFocused : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _CERT_RDN_ATTR
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long dwValueType;
  /* 0x000c */ long Padding_588;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CERT_RDN_ATTR, *PCERT_RDN_ATTR; /* size: 0x0020 */

typedef struct _SCOPE_TABLE_ARM
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE_ARM, *PSCOPE_TABLE_ARM; /* size: 0x0014 */

struct IProcessServerInfo
{
}; /* size: 0x0008 */

struct IPropertyPageSite
{
}; /* size: 0x0008 */

typedef struct _FILE_TRACKING_INFORMATION
{
  /* 0x0000 */ void* DestinationFile;
  /* 0x0008 */ unsigned long ObjectInformationLength;
  /* 0x000c */ char ObjectInformation[1];
  /* 0x000d */ char __PADDING__[3];
} FILE_TRACKING_INFORMATION, *PFILE_TRACKING_INFORMATION; /* size: 0x0010 */

typedef struct _LPC_UNREGISTER_PROCESS_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ void* UniqueProcessId;
} LPC_UNREGISTER_PROCESS_MSG, *PLPC_UNREGISTER_PROCESS_MSG; /* size: 0x0030 */

typedef struct _RTL_SPLAY_LINKS
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* Parent;
  /* 0x0008 */ struct _RTL_SPLAY_LINKS* LeftChild;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS* RightChild;
} RTL_SPLAY_LINKS, *PRTL_SPLAY_LINKS; /* size: 0x0018 */

typedef struct _PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_589;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0028 */ struct _STRING* Prefix;
} PREFIX_TABLE_ENTRY, *PPREFIX_TABLE_ENTRY; /* size: 0x0030 */

struct Microsoft::WRL::Wrappers::HandleTraits::MutexTraits
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IApartmentShutdown>;

struct tagMIXERCONTROLA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwControlID;
  /* 0x0008 */ unsigned long dwControlType;
  /* 0x000c */ unsigned long fdwControl;
  /* 0x0010 */ unsigned long cMultipleItems;
  /* 0x0014 */ char szShortName[16];
  /* 0x0024 */ char szName[64];
  union
  {
    union
    {
      struct
      {
        /* 0x0064 */ long lMinimum;
        /* 0x0068 */ long lMaximum;
      }; /* size: 0x0008 */
      struct
      {
        /* 0x0064 */ unsigned long dwMinimum;
        /* 0x0068 */ unsigned long dwMaximum;
      }; /* size: 0x0008 */
      /* 0x0064 */ unsigned long dwReserved[6];
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Bounds;
  union
  {
    union
    {
      /* 0x007c */ unsigned long cSteps;
      /* 0x007c */ unsigned long cbCustomData;
      /* 0x007c */ unsigned long dwReserved[6];
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Metrics;
}; /* size: 0x0094 */

typedef struct _JOURNAL_SET_DELETE_VALUE_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_590;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING ValueName;
  /* 0x0038 */ unsigned long OldValueType;
  /* 0x003c */ unsigned long OldDataLength;
  /* 0x0040 */ void* OldData;
  /* 0x0048 */ unsigned long NewValueType;
  /* 0x004c */ unsigned long NewDataLength;
  /* 0x0050 */ void* NewData;
} JOURNAL_SET_DELETE_VALUE_INFORMATION, *PJOURNAL_SET_DELETE_VALUE_INFORMATION; /* size: 0x0058 */

class Microsoft::WRL::Details::RemoveIUnknownBase<ApartmentShutdownNode>;

typedef struct _TAPE_SET_POSITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Partition;
  /* 0x0008 */ union _LARGE_INTEGER Offset;
  /* 0x0010 */ unsigned char Immediate;
  /* 0x0011 */ char __PADDING__[7];
} TAPE_SET_POSITION, *PTAPE_SET_POSITION; /* size: 0x0018 */

struct IViewObject2
{
}; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::CriticalSection
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION cs_;
}; /* size: 0x0028 */

struct IFillLockBytes
{
}; /* size: 0x0008 */

struct tagMETARECORD
{
  /* 0x0000 */ unsigned long rdSize;
  /* 0x0004 */ unsigned short rdFunction;
  /* 0x0006 */ unsigned short rdParm[1];
}; /* size: 0x0008 */

typedef struct _MESSAGE_RESOURCE_ENTRY
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned char Text[1];
  /* 0x0005 */ char __PADDING__[1];
} MESSAGE_RESOURCE_ENTRY, *PMESSAGE_RESOURCE_ENTRY; /* size: 0x0006 */

struct IRpcCall
{
}; /* size: 0x0008 */

typedef struct _SECURITY_DESCRIPTOR_RELATIVE
{
  /* 0x0000 */ unsigned char Revision;
  /* 0x0001 */ unsigned char Sbz1;
  /* 0x0002 */ unsigned short Control;
  /* 0x0004 */ unsigned long Owner;
  /* 0x0008 */ unsigned long Group;
  /* 0x000c */ unsigned long Sacl;
  /* 0x0010 */ unsigned long Dacl;
} SECURITY_DESCRIPTOR_RELATIVE, *PSECURITY_DESCRIPTOR_RELATIVE; /* size: 0x0014 */

typedef struct _DRAGINFOA
{
  /* 0x0000 */ unsigned int uSize;
  /* 0x0004 */ struct tagPOINT pt;
  /* 0x000c */ int fNC;
  /* 0x0010 */ char* lpFileList;
  /* 0x0018 */ unsigned long grfKeyState;
  /* 0x001c */ long __PADDING__[1];
} DRAGINFOA, *PDRAGINFOA; /* size: 0x0020 */

struct tagMINMAXINFO
{
  /* 0x0000 */ struct tagPOINT ptReserved;
  /* 0x0008 */ struct tagPOINT ptMaxSize;
  /* 0x0010 */ struct tagPOINT ptMaxPosition;
  /* 0x0018 */ struct tagPOINT ptMinTrackSize;
  /* 0x0020 */ struct tagPOINT ptMaxTrackSize;
}; /* size: 0x0028 */

typedef struct _FILE_STREAM_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFO, *PFILE_STREAM_INFO; /* size: 0x0020 */

typedef struct _PROPSHEETPAGEA_V3
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const char* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const char* pszHeaderTitle;
  /* 0x0050 */ const char* pszHeaderSubTitle;
  /* 0x0058 */ void* hActCtx;
} PROPSHEETPAGEA_V3, *PPROPSHEETPAGEA_V3; /* size: 0x0060 */

struct IUri
{
}; /* size: 0x0008 */

struct MarshalParams
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ unsigned long mshlflags;
}; /* size: 0x0014 */

struct tagGIPEntry
{
  /* 0x0000 */ struct tagGIPEntry* pPrev;
  /* 0x0008 */ struct tagGIPEntry* pNext;
  /* 0x0010 */ unsigned long dwType;
  /* 0x0014 */ unsigned long dwSeqNo;
  /* 0x0018 */ volatile long cUsage;
  /* 0x001c */ unsigned long dwAptId;
  /* 0x0020 */ class CObjectContext* pContext;
  /* 0x0028 */ struct IUnknown* pUnk;
  /* 0x0030 */ void* pVtable;
  /* 0x0038 */ struct IUnknown* pUnkProxy;
  /* 0x0040 */ struct MarshalParams mp;
  /* 0x0054 */ long Padding_591;
  union
  {
    union
    {
      /* 0x0058 */ struct tagInterfaceData* pIFD;
      /* 0x0058 */ struct tagOBJREF* pobjref;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u;
}; /* size: 0x0060 */

class CGIPTable
{
  union
  {
    /* 0x0000 */ unsigned long _dwCurrSeqNo;
    /* 0x0000 */ int _fInRevokeAll;
    /* 0x0000 */ int _fInNAUninit;
    /* 0x0000 */ struct tagGIPEntry _InUseHead;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0068 */
}; /* size: 0x0008 */

typedef struct _SERVICE_TABLE_ENTRYW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYW, *PSERVICE_TABLE_ENTRYW; /* size: 0x0010 */

typedef struct _PROCESS_EXCEPTION_PORT
{
  /* 0x0000 */ void* ExceptionPortHandle;
  /* 0x0008 */ unsigned long StateFlags;
  /* 0x000c */ long __PADDING__[1];
} PROCESS_EXCEPTION_PORT, *PPROCESS_EXCEPTION_PORT; /* size: 0x0010 */

struct IEnumString
{
}; /* size: 0x0008 */

struct tagPICTDESC
{
  /* 0x0000 */ unsigned int cbSizeofstruct;
  /* 0x0004 */ unsigned int picType;
  union
  {
    struct
    {
      /* 0x0008 */ struct HBITMAP__* hbitmap;
      /* 0x0010 */ struct HPALETTE__* hpal;
    } /* size: 0x0010 */ bmp;
    struct
    {
      /* 0x0008 */ struct HMETAFILE__* hmeta;
      /* 0x0010 */ int xExt;
      /* 0x0014 */ int yExt;
    } /* size: 0x0010 */ wmf;
    struct
    {
      /* 0x0008 */ struct HICON__* hicon;
    } /* size: 0x0008 */ icon;
    struct
    {
      struct
      {
        /* 0x0008 */ struct HENHMETAFILE__* hemf;
      } /* size: 0x0008 */ emf;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

typedef struct _SE_LEARNING_MODE_USER_OBJECT_DATA
{
  /* 0x0000 */ unsigned long Cookie;
  /* 0x0004 */ long Padding_592;
  /* 0x0008 */ struct _UNICODE_STRING* ObjectType;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectName;
} SE_LEARNING_MODE_USER_OBJECT_DATA, *PSE_LEARNING_MODE_USER_OBJECT_DATA; /* size: 0x0018 */

typedef struct _FILE_MAILSLOT_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumMessageSize;
  /* 0x0004 */ unsigned long MailslotQuota;
  /* 0x0008 */ unsigned long NextMessageSize;
  /* 0x000c */ unsigned long MessagesAvailable;
  /* 0x0010 */ union _LARGE_INTEGER ReadTimeout;
} FILE_MAILSLOT_QUERY_INFORMATION, *PFILE_MAILSLOT_QUERY_INFORMATION; /* size: 0x0018 */

typedef struct _ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned __int64 StartingFileOffset;
  /* 0x0008 */ unsigned long OutputBufferOffset;
  /* 0x000c */ unsigned long BytesWithinFileSize;
  /* 0x0010 */ unsigned long BytesWithinValidDataLength;
  /* 0x0014 */ unsigned short CompressionFormat;
  /* 0x0016 */ unsigned char DataUnitShift;
  /* 0x0017 */ unsigned char ChunkShift;
  /* 0x0018 */ unsigned char ClusterShift;
  /* 0x0019 */ unsigned char EncryptionFormat;
  /* 0x001a */ unsigned short NumberOfDataBlocks;
  /* 0x001c */ unsigned long DataBlockSize[1];
} ENCRYPTED_DATA_INFO, *PENCRYPTED_DATA_INFO; /* size: 0x0020 */

typedef struct _KEY_CONTROL_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
} KEY_CONTROL_FLAGS_INFORMATION, *PKEY_CONTROL_FLAGS_INFORMATION; /* size: 0x0004 */

typedef struct _CSV_CONTROL_PARAM
{
  /* 0x0000 */ enum _CSV_CONTROL_OP Operation;
  /* 0x0004 */ long Padding_593;
  /* 0x0008 */ __int64 Unused;
} CSV_CONTROL_PARAM, *PCSV_CONTROL_PARAM; /* size: 0x0010 */

typedef struct _MUILANGUAGES
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumLanguages;
  /* 0x0006 */ unsigned short NumLanguages;
  /* 0x0008 */ unsigned short NumInstalledLanguages;
  /* 0x000a */ char Padding_594[6];
  /* 0x0010 */ struct _MUILANGINFO* LangInfos;
} MUILANGUAGES, *PMUILANGUAGES; /* size: 0x0018 */

typedef struct __midl_frag28_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag28_t, *P_midl_frag28_t; /* size: 0x000c */

typedef struct _TAPE_GET_DRIVE_PARAMETERS
{
  /* 0x0000 */ unsigned char ECC;
  /* 0x0001 */ unsigned char Compression;
  /* 0x0002 */ unsigned char DataPadding;
  /* 0x0003 */ unsigned char ReportSetmarks;
  /* 0x0004 */ unsigned long DefaultBlockSize;
  /* 0x0008 */ unsigned long MaximumBlockSize;
  /* 0x000c */ unsigned long MinimumBlockSize;
  /* 0x0010 */ unsigned long MaximumPartitionCount;
  /* 0x0014 */ unsigned long FeaturesLow;
  /* 0x0018 */ unsigned long FeaturesHigh;
  /* 0x001c */ unsigned long EOTWarningZoneSize;
} TAPE_GET_DRIVE_PARAMETERS, *PTAPE_GET_DRIVE_PARAMETERS; /* size: 0x0020 */

typedef struct _KEY_VALUE_PARTIAL_INFORMATION_ALIGN64
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long DataLength;
  /* 0x0008 */ unsigned char Data[1];
  /* 0x0009 */ char __PADDING__[3];
} KEY_VALUE_PARTIAL_INFORMATION_ALIGN64, *PKEY_VALUE_PARTIAL_INFORMATION_ALIGN64; /* size: 0x000c */

struct IDropTarget
{
}; /* size: 0x0008 */

class CStabilize
{
  /* 0x0000 */ class CSafeRefCount* m_pSafeRefCount;
}; /* size: 0x0008 */

typedef struct _CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ long lChainIndex;
  /* 0x000c */ long lElementIndex;
  /* 0x0010 */ void* pvExtraPolicyStatus;
} CERT_CHAIN_POLICY_STATUS, *PCERT_CHAIN_POLICY_STATUS; /* size: 0x0018 */

typedef struct _EVENT_BASIC_INFORMATION
{
  /* 0x0000 */ enum _EVENT_TYPE EventType;
  /* 0x0004 */ long EventState;
} EVENT_BASIC_INFORMATION, *PEVENT_BASIC_INFORMATION; /* size: 0x0008 */

typedef struct __midl_frag19_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag19_t, *P_midl_frag19_t; /* size: 0x0028 */

typedef struct _TAPE_WRITE_MARKS
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned char Immediate;
  /* 0x0009 */ char __PADDING__[3];
} TAPE_WRITE_MARKS, *PTAPE_WRITE_MARKS; /* size: 0x000c */

typedef struct _SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS
{
  /* 0x0000 */ void* KeyHandle;
  /* 0x0008 */ struct _UNICODE_STRING* ValueNamePointer;
  /* 0x0010 */ unsigned long* RequiredLengthPointer;
  /* 0x0018 */ unsigned char* Buffer;
  /* 0x0020 */ unsigned long BufferLength;
  /* 0x0024 */ unsigned long Type;
  /* 0x0028 */ unsigned char* AppendBuffer;
  /* 0x0030 */ unsigned long AppendBufferLength;
  /* 0x0034 */ unsigned char CreateIfDoesntExist;
  /* 0x0035 */ unsigned char TruncateExistingValue;
  /* 0x0036 */ char __PADDING__[2];
} SYSTEM_REGISTRY_APPEND_STRING_PARAMETERS, *PSYSTEM_REGISTRY_APPEND_STRING_PARAMETERS; /* size: 0x0038 */

struct IWinInetHttpInfo
{
}; /* size: 0x0008 */

struct IComDispatchInfo
{
}; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_RELATED_DEVICE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDeviceInstance;
  /* 0x0010 */ unsigned long Relation;
  /* 0x0014 */ long Padding_595;
  /* 0x0018 */ wchar_t* RelatedDeviceInstance;
  /* 0x0020 */ unsigned long RelatedDeviceInstanceLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_RELATED_DEVICE_DATA, *PPLUGPLAY_CONTROL_RELATED_DEVICE_DATA; /* size: 0x0028 */

struct tagWNDCLASSA
{
  /* 0x0000 */ unsigned int style;
  /* 0x0004 */ long Padding_596;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const char* lpszMenuName;
  /* 0x0040 */ const char* lpszClassName;
}; /* size: 0x0048 */

class CServerSecurity
{
  union
  {
    /* 0x0000 */ class CPageAllocator _palloc;
    struct
    {
      /* 0x0000 */ class COleStaticMutexSem _mxs;
      /* 0x0020 */ unsigned long _iRefCount;
      /* 0x0024 */ unsigned long _iFlags;
      /* 0x0028 */ class CChannelHandle* _pHandle;
      /* 0x0030 */ void* _hRpc;
      /* 0x0038 */ class CMessageCall* _pClientCall;
      /* 0x0040 */ void* _hSaved;
    }; /* size: 0x0070 */
  }; /* size: 0x0070 */
}; /* size: 0x0048 */

typedef struct _CREATEFILE2_EXTENDED_PARAMETERS
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFileAttributes;
  /* 0x0008 */ unsigned long dwFileFlags;
  /* 0x000c */ unsigned long dwSecurityQosFlags;
  /* 0x0010 */ struct _SECURITY_ATTRIBUTES* lpSecurityAttributes;
  /* 0x0018 */ void* hTemplateFile;
} CREATEFILE2_EXTENDED_PARAMETERS, *PCREATEFILE2_EXTENDED_PARAMETERS; /* size: 0x0020 */

typedef struct _PERF_OBJECT_TYPE
{
  /* 0x0000 */ unsigned long TotalByteLength;
  /* 0x0004 */ unsigned long DefinitionLength;
  /* 0x0008 */ unsigned long HeaderLength;
  /* 0x000c */ unsigned long ObjectNameTitleIndex;
  /* 0x0010 */ unsigned long ObjectNameTitle;
  /* 0x0014 */ unsigned long ObjectHelpTitleIndex;
  /* 0x0018 */ unsigned long ObjectHelpTitle;
  /* 0x001c */ unsigned long DetailLevel;
  /* 0x0020 */ unsigned long NumCounters;
  /* 0x0024 */ long DefaultCounter;
  /* 0x0028 */ long NumInstances;
  /* 0x002c */ unsigned long CodePage;
  /* 0x0030 */ union _LARGE_INTEGER PerfTime;
  /* 0x0038 */ union _LARGE_INTEGER PerfFreq;
} PERF_OBJECT_TYPE, *PPERF_OBJECT_TYPE; /* size: 0x0040 */

typedef struct _CM_SERIAL_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned long BaudClock;
} CM_SERIAL_DEVICE_DATA, *PCM_SERIAL_DEVICE_DATA; /* size: 0x0008 */

struct tagCTXCOMMONHDR
{
  /* 0x0000 */ struct _GUID ContextId;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ unsigned long dwNumExtents;
  /* 0x001c */ unsigned long cbExtents;
  /* 0x0020 */ unsigned long MshlFlags;
}; /* size: 0x0024 */

struct tagBYVALHDR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ int Frozen;
}; /* size: 0x0008 */

struct tagBYREFHDR
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long ProcessId;
}; /* size: 0x0008 */

struct tagCONTEXTHEADER
{
  /* 0x0000 */ struct tagCTXVERSION Version;
  /* 0x0004 */ struct tagCTXCOMMONHDR CmnHdr;
  union
  {
    /* 0x0028 */ struct tagBYVALHDR ByValHdr;
    /* 0x0028 */ struct tagBYREFHDR ByRefHdr;
  }; /* size: 0x0008 */
}; /* size: 0x0030 */

struct IPropertyNotifySink
{
}; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::RoInitializeWrapper
{
  /* 0x0000 */ HRESULT _hr;
}; /* size: 0x0004 */

struct tagSTYLEBUFW
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ wchar_t szDescription[32];
}; /* size: 0x0044 */

typedef struct _STORAGE_HOTPLUG_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned char MediaRemovable;
  /* 0x0005 */ unsigned char MediaHotplug;
  /* 0x0006 */ unsigned char DeviceHotplug;
  /* 0x0007 */ unsigned char WriteCacheEnableOverride;
} STORAGE_HOTPLUG_INFO, *PSTORAGE_HOTPLUG_INFO; /* size: 0x0008 */

struct IBindStatusCallback
{
}; /* size: 0x0008 */

typedef struct _CRYPT_KEY_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_597;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0030 */ void* pvHashAuxInfo;
  /* 0x0038 */ struct _CRYPT_ALGORITHM_IDENTIFIER PubKeyAlgorithm;
} CRYPT_KEY_SIGN_MESSAGE_PARA, *PCRYPT_KEY_SIGN_MESSAGE_PARA; /* size: 0x0050 */

struct tagEMREOF
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long nPalEntries;
  /* 0x000c */ unsigned long offPalEntries;
  /* 0x0010 */ unsigned long nSizeLast;
}; /* size: 0x0014 */

typedef struct _ACCESS_DENIED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_ACE, *PACCESS_DENIED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _Wx86ThreadState
{
  /* 0x0000 */ unsigned long* CallBx86Eip;
  /* 0x0008 */ void* DeallocationCpu;
  /* 0x0010 */ unsigned char UseKnownWx86Dll;
  /* 0x0011 */ char OleStubInvoked;
  /* 0x0012 */ char __PADDING__[6];
} Wx86ThreadState, *PWx86ThreadState; /* size: 0x0018 */

typedef struct _BIDI_RESPONSE_CONTAINER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long Padding_598;
  /* 0x0010 */ struct _BIDI_RESPONSE_DATA aData[1];
} BIDI_RESPONSE_CONTAINER, *PBIDI_RESPONSE_CONTAINER; /* size: 0x0038 */

struct tagEMREXTTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ struct tagEMRTEXT emrtext;
}; /* size: 0x004c */

typedef struct _DISK_GROW_PARTITION
{
  /* 0x0000 */ unsigned long PartitionNumber;
  /* 0x0004 */ long Padding_599;
  /* 0x0008 */ union _LARGE_INTEGER BytesToGrow;
} DISK_GROW_PARTITION, *PDISK_GROW_PARTITION; /* size: 0x0010 */

typedef struct _LOCALMANAGEDAPPLICATION
{
  /* 0x0000 */ wchar_t* pszDeploymentName;
  /* 0x0008 */ wchar_t* pszPolicyName;
  /* 0x0010 */ wchar_t* pszProductId;
  /* 0x0018 */ unsigned long dwState;
  /* 0x001c */ long __PADDING__[1];
} LOCALMANAGEDAPPLICATION, *PLOCALMANAGEDAPPLICATION; /* size: 0x0020 */

typedef struct _s__ThrowInfo
{
  /* 0x0000 */ unsigned int attributes;
  /* 0x0004 */ void* pmfnUnwind /* function */;
  /* 0x000c */ void* pForwardCompat /* function */;
  /* 0x0014 */ const struct _s__CatchableTypeArray* pCatchableTypeArray;
} s__ThrowInfo, *Ps__ThrowInfo; /* size: 0x001c */

class CCtxCall
{
  union
  {
    struct
    {
      /* 0x0000 */ enum BaseCallKind CallKind;
      /* 0x0004 */ long Padding_600[3];
      /* 0x0010 */ unsigned long _dwFlags;
      /* 0x0014 */ unsigned long _dwStage;
      /* 0x0018 */ unsigned long _cMarshalItfs;
      /* 0x001c */ unsigned long _cUnmarshalItfs;
      /* 0x0020 */ unsigned long _cFree;
      /* 0x0024 */ unsigned long _cError;
      /* 0x0028 */ int _fError;
      /* 0x002c */ unsigned long _dwDestCtx;
      /* 0x0030 */ unsigned long _cItfs;
      /* 0x0034 */ unsigned long _idx;
      /* 0x0038 */ void** _ppItfs;
      /* 0x0040 */ unsigned long _cPolicies;
      /* 0x0044 */ unsigned long _cbExtent;
      /* 0x0048 */ void* _pvExtent;
      /* 0x0050 */ HRESULT _hr;
      /* 0x0054 */ long Padding_601;
      /* 0x0058 */ class CPolicySet* _pPS;
      /* 0x0060 */ class CObjectContext* _pContext;
      /* 0x0068 */ unsigned long _dataRep;
      /* 0x006c */ HRESULT _hrServer;
      /* 0x0070 */ unsigned int _uCallTraceId;
    }; /* size: 0x0064 */
    /* 0x0000 */ void* s_pAllocList[20];
    /* 0x0000 */ int s_iAvailable;
    struct
    {
      /* 0x0000 */ class COleStaticMutexSem _mxsCtxCallLock;
      /* 0x0048 */ long Padding_602[12];
      /* 0x0078 */ struct IErrorInfo* _pErrorInfo;
    }; /* size: 0x0050 */
  }; /* size: 0x00a0 */
}; /* size: 0x0080 */

typedef struct _FILE_LAYOUT_ENTRY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long NextFileOffset;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long FileAttributes;
  /* 0x0010 */ unsigned __int64 FileReferenceNumber;
  /* 0x0018 */ unsigned long FirstNameOffset;
  /* 0x001c */ unsigned long FirstStreamOffset;
  /* 0x0020 */ unsigned long ExtraInfoOffset;
  /* 0x0024 */ unsigned long Reserved;
} FILE_LAYOUT_ENTRY, *PFILE_LAYOUT_ENTRY; /* size: 0x0028 */

struct tagEXCEPINFO
{
  /* 0x0000 */ unsigned short wCode;
  /* 0x0002 */ unsigned short wReserved;
  /* 0x0004 */ long Padding_603;
  /* 0x0008 */ wchar_t* bstrSource;
  /* 0x0010 */ wchar_t* bstrDescription;
  /* 0x0018 */ wchar_t* bstrHelpFile;
  /* 0x0020 */ unsigned long dwHelpContext;
  /* 0x0024 */ long Padding_604;
  /* 0x0028 */ void* pvReserved;
  /* 0x0030 */ void* pfnDeferredFillIn /* function */;
  /* 0x0038 */ long scode;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG32
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ unsigned long CriticalSection;
  /* 0x0008 */ struct LIST_ENTRY32 ProcessLocksList;
  /* 0x0010 */ unsigned long EntryCount;
  /* 0x0014 */ unsigned long ContentionCount;
  /* 0x0018 */ unsigned long Spare[2];
} RTL_CRITICAL_SECTION_DEBUG32, *PRTL_CRITICAL_SECTION_DEBUG32; /* size: 0x0020 */

struct IXMLDOMParseError
{
}; /* size: 0x0008 */

class Windows::Auto<void *>
{
}; /* size: 0x0008 */

typedef struct _MODLOAD_CVMISC
{
  /* 0x0000 */ unsigned long oCV;
  /* 0x0004 */ long Padding_605;
  /* 0x0008 */ unsigned __int64 cCV;
  /* 0x0010 */ unsigned long oMisc;
  /* 0x0014 */ long Padding_606;
  /* 0x0018 */ unsigned __int64 cMisc;
  /* 0x0020 */ unsigned long dtImage;
  /* 0x0024 */ unsigned long cImage;
} MODLOAD_CVMISC, *PMODLOAD_CVMISC; /* size: 0x0028 */

typedef struct _CERT_CHAIN_FIND_BY_ISSUER_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_607;
  /* 0x0008 */ const char* pszUsageIdentifier;
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ unsigned long dwAcquirePrivateKeyFlags;
  /* 0x0018 */ unsigned long cIssuer;
  /* 0x001c */ long Padding_608;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB* rgIssuer;
  /* 0x0028 */ void* pfnFindCallback /* function */;
  /* 0x0030 */ void* pvFindArg;
} CERT_CHAIN_FIND_BY_ISSUER_PARA, *PCERT_CHAIN_FIND_BY_ISSUER_PARA; /* size: 0x0038 */

struct IXMLDOMText
{
}; /* size: 0x0008 */

typedef struct _CERT_GENERAL_SUBTREE
{
  /* 0x0000 */ struct _CERT_ALT_NAME_ENTRY Base;
  /* 0x0018 */ unsigned long dwMinimum;
  /* 0x001c */ int fMaximum;
  /* 0x0020 */ unsigned long dwMaximum;
  /* 0x0024 */ long __PADDING__[1];
} CERT_GENERAL_SUBTREE, *PCERT_GENERAL_SUBTREE; /* size: 0x0028 */

typedef struct _CRYPT_PRIVATE_KEY_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_609;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER Algorithm;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0030 */ struct _CRYPT_ATTRIBUTES* pAttributes;
} CRYPT_PRIVATE_KEY_INFO, *PCRYPT_PRIVATE_KEY_INFO; /* size: 0x0038 */

typedef struct _PROCESS_HANDLE_TRACING_ENABLE_EX
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalSlots;
} PROCESS_HANDLE_TRACING_ENABLE_EX, *PPROCESS_HANDLE_TRACING_ENABLE_EX; /* size: 0x0008 */

struct SIP_DISPATCH_INFO_;

typedef struct _CMSG_CNG_CONTENT_DECRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_610;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0020 */ void* pfnAlloc /* function */;
  /* 0x0028 */ void* pfnFree /* function */;
  /* 0x0030 */ unsigned __int64 hNCryptKey;
  /* 0x0038 */ unsigned char* pbContentEncryptKey;
  /* 0x0040 */ unsigned long cbContentEncryptKey;
  /* 0x0044 */ long Padding_611;
  /* 0x0048 */ void* hCNGContentEncryptKey;
  /* 0x0050 */ unsigned char* pbCNGContentEncryptKeyObject;
} CMSG_CNG_CONTENT_DECRYPT_INFO, *PCMSG_CNG_CONTENT_DECRYPT_INFO; /* size: 0x0058 */

typedef struct _CMSG_HASHED_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_612;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
} CMSG_HASHED_ENCODE_INFO, *PCMSG_HASHED_ENCODE_INFO; /* size: 0x0030 */

struct AsyncIPipeDouble
{
}; /* size: 0x0008 */

typedef struct _TXFS_CREATE_MINIVERSION_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long BaseVersion;
  /* 0x0008 */ unsigned short MiniVersion;
  /* 0x000a */ char __PADDING__[2];
} TXFS_CREATE_MINIVERSION_INFO, *PTXFS_CREATE_MINIVERSION_INFO; /* size: 0x000c */

typedef struct _VARIABLE_NAME
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ struct _GUID VendorGuid;
  /* 0x0014 */ wchar_t Name[1];
  /* 0x0016 */ char __PADDING__[2];
} VARIABLE_NAME, *PVARIABLE_NAME; /* size: 0x0018 */

typedef struct _RSAPUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
  /* 0x0008 */ unsigned long pubexp;
} RSAPUBKEY, *PRSAPUBKEY; /* size: 0x000c */

typedef union _RemotableHandle::__MIDL_IWinTypes_0009
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ long hRemote;
  }; /* size: 0x0004 */
} RemotableHandle::__MIDL_IWinTypes_0009, *PRemotableHandle::__MIDL_IWinTypes_0009; /* size: 0x0004 */

typedef struct _RemotableHandle
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ union _RemotableHandle::__MIDL_IWinTypes_0009 u;
} RemotableHandle, *PRemotableHandle; /* size: 0x0008 */

typedef struct _SYSDBG_CONTROL_SPACE
{
  /* 0x0000 */ unsigned __int64 Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ unsigned long Processor;
} SYSDBG_CONTROL_SPACE, *PSYSDBG_CONTROL_SPACE; /* size: 0x0018 */

typedef struct _WIN_SPUB_TRUSTED_PUBLISHER_DATA
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0008 */ struct _WIN_CERTIFICATE* lpCertificate;
} WIN_SPUB_TRUSTED_PUBLISHER_DATA, *PWIN_SPUB_TRUSTED_PUBLISHER_DATA; /* size: 0x0010 */

typedef struct _HMAC_Info
{
  /* 0x0000 */ unsigned int HashAlgid;
  /* 0x0004 */ long Padding_613;
  /* 0x0008 */ unsigned char* pbInnerString;
  /* 0x0010 */ unsigned long cbInnerString;
  /* 0x0014 */ long Padding_614;
  /* 0x0018 */ unsigned char* pbOuterString;
  /* 0x0020 */ unsigned long cbOuterString;
  /* 0x0024 */ long __PADDING__[1];
} HMAC_Info, *PHMAC_Info; /* size: 0x0028 */

typedef struct _DISK_EXTENT
{
  /* 0x0000 */ unsigned long DiskNumber;
  /* 0x0004 */ long Padding_615;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ union _LARGE_INTEGER ExtentLength;
} DISK_EXTENT, *PDISK_EXTENT; /* size: 0x0018 */

typedef struct _VOLUME_DISK_EXTENTS
{
  /* 0x0000 */ unsigned long NumberOfDiskExtents;
  /* 0x0004 */ long Padding_616;
  /* 0x0008 */ struct _DISK_EXTENT Extents[1];
} VOLUME_DISK_EXTENTS, *PVOLUME_DISK_EXTENTS; /* size: 0x0020 */

typedef struct _TRANSACTIONMANAGER_LOGPATH_INFORMATION
{
  /* 0x0000 */ unsigned long LogPathLength;
  /* 0x0004 */ wchar_t LogPath[1];
  /* 0x0006 */ char __PADDING__[2];
} TRANSACTIONMANAGER_LOGPATH_INFORMATION, *PTRANSACTIONMANAGER_LOGPATH_INFORMATION; /* size: 0x0008 */

class CNullWalker
{
}; /* size: 0x0008 */

typedef struct _LPC_CLIENT_DIED_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE PortMsg;
  /* 0x0028 */ union _LARGE_INTEGER CreateTime;
} LPC_CLIENT_DIED_MSG, *PLPC_CLIENT_DIED_MSG; /* size: 0x0030 */

class COIDHashTable
{
}; /* size: 0x0028 */

struct ANON_OBJECT_HEADER_V2
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
}; /* size: 0x002c */

typedef struct _CLAIM_SECURITY_ATTRIBUTE_V1
{
  /* 0x0000 */ wchar_t* Name;
  /* 0x0008 */ unsigned short ValueType;
  /* 0x000a */ unsigned short Reserved;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long ValueCount;
  /* 0x0014 */ long Padding_617;
  union
  {
    union
    {
      /* 0x0018 */ __int64* pInt64;
      /* 0x0018 */ unsigned __int64* pUint64;
      /* 0x0018 */ wchar_t** ppString;
      /* 0x0018 */ struct _CLAIM_SECURITY_ATTRIBUTE_FQBN_VALUE* pFqbn;
      /* 0x0018 */ struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE* pOctetString;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Values;
} CLAIM_SECURITY_ATTRIBUTE_V1, *PCLAIM_SECURITY_ATTRIBUTE_V1; /* size: 0x0020 */

struct IRunnableObject
{
}; /* size: 0x0008 */

struct tagMINIMIZEDMETRICS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iWidth;
  /* 0x0008 */ int iHorzGap;
  /* 0x000c */ int iVertGap;
  /* 0x0010 */ int iArrange;
}; /* size: 0x0014 */

typedef union _FILE_SEGMENT_ELEMENT
{
  union
  {
    /* 0x0000 */ void* Buffer;
    /* 0x0000 */ unsigned __int64 Alignment;
  }; /* size: 0x0008 */
} FILE_SEGMENT_ELEMENT, *PFILE_SEGMENT_ELEMENT; /* size: 0x0008 */

struct tagEMRPOLYPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long nPolys;
  /* 0x001c */ unsigned long cpts;
  /* 0x0020 */ unsigned long aPolyCounts[1];
  /* 0x0024 */ struct tagPOINTS apts[1];
}; /* size: 0x0028 */

struct SIP_INDIRECT_DATA_;

typedef struct _COMSTAT
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long fCtsHold : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long fDsrHold : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long fRlsdHold : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long fXoffHold : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long fXoffSent : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long fEof : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long fTxim : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned long fReserved : 25; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long cbInQue;
  /* 0x0008 */ unsigned long cbOutQue;
} COMSTAT, *PCOMSTAT; /* size: 0x000c */

struct ISurrogateService
{
}; /* size: 0x0008 */

typedef struct _CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE
{
  /* 0x0000 */ void* pValue;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ long __PADDING__[1];
} CLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE, *PCLAIM_SECURITY_ATTRIBUTE_OCTET_STRING_VALUE; /* size: 0x0010 */

struct READ_USN_JOURNAL_DATA_V1
{
  /* 0x0000 */ __int64 StartUsn;
  /* 0x0008 */ unsigned long ReasonMask;
  /* 0x000c */ unsigned long ReturnOnlyOnClose;
  /* 0x0010 */ unsigned __int64 Timeout;
  /* 0x0018 */ unsigned __int64 BytesToWaitFor;
  /* 0x0020 */ unsigned __int64 UsnJournalID;
  /* 0x0028 */ unsigned short MinMajorVersion;
  /* 0x002a */ unsigned short MaxMajorVersion;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

typedef struct _FAT_STATISTICS
{
  /* 0x0000 */ unsigned long CreateHits;
  /* 0x0004 */ unsigned long SuccessfulCreates;
  /* 0x0008 */ unsigned long FailedCreates;
  /* 0x000c */ unsigned long NonCachedReads;
  /* 0x0010 */ unsigned long NonCachedReadBytes;
  /* 0x0014 */ unsigned long NonCachedWrites;
  /* 0x0018 */ unsigned long NonCachedWriteBytes;
  /* 0x001c */ unsigned long NonCachedDiskReads;
  /* 0x0020 */ unsigned long NonCachedDiskWrites;
} FAT_STATISTICS, *PFAT_STATISTICS; /* size: 0x0024 */

struct IMoniker
{
}; /* size: 0x0008 */

struct tagREGISTERWORDA
{
  /* 0x0000 */ char* lpReading;
  /* 0x0008 */ char* lpWord;
}; /* size: 0x0010 */

typedef struct _JOURNAL_SET_KEY_SECURITY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_618;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldSecurityDescriptorLength;
  /* 0x002c */ long Padding_619;
  /* 0x0030 */ void* OldSecurityDescriptor;
  /* 0x0038 */ unsigned long NewSecurityDescriptorLength;
  /* 0x003c */ long Padding_620;
  /* 0x0040 */ void* NewSecurityDescriptor;
} JOURNAL_SET_KEY_SECURITY_INFORMATION, *PJOURNAL_SET_KEY_SECURITY_INFORMATION; /* size: 0x0048 */

struct IFontDisp
{
}; /* size: 0x0008 */

struct tagEMRMASKBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long xMask;
  /* 0x0068 */ long yMask;
  /* 0x006c */ unsigned long iUsageMask;
  /* 0x0070 */ unsigned long offBmiMask;
  /* 0x0074 */ unsigned long cbBmiMask;
  /* 0x0078 */ unsigned long offBitsMask;
  /* 0x007c */ unsigned long cbBitsMask;
}; /* size: 0x0080 */

typedef struct _CRYPT_OID_FUNC_ENTRY
{
  /* 0x0000 */ const char* pszOID;
  /* 0x0008 */ void* pvFuncAddr;
} CRYPT_OID_FUNC_ENTRY, *PCRYPT_OID_FUNC_ENTRY; /* size: 0x0010 */

typedef struct _AppBarData
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_621;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uCallbackMessage;
  /* 0x0014 */ unsigned int uEdge;
  /* 0x0018 */ struct tagRECT rc;
  /* 0x0028 */ __int64 lParam;
} AppBarData, *PAppBarData; /* size: 0x0030 */

typedef struct _SYSDBG_VIRTUAL
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_VIRTUAL, *PSYSDBG_VIRTUAL; /* size: 0x0018 */

typedef struct __vc_attributes::outAttribute
{
} _vc_attributes::outAttribute, *P_vc_attributes::outAttribute; /* size: 0x0001 */

typedef struct _FILE_RENAME_INFORMATION
{
  /* 0x0000 */ unsigned char ReplaceIfExists;
  /* 0x0001 */ char Padding_622[7];
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_RENAME_INFORMATION, *PFILE_RENAME_INFORMATION; /* size: 0x0018 */

struct tagCREATESTRUCTW
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x0010 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndParent;
  /* 0x0020 */ int cy;
  /* 0x0024 */ int cx;
  /* 0x0028 */ int y;
  /* 0x002c */ int x;
  /* 0x0030 */ long style;
  /* 0x0034 */ long Padding_623;
  /* 0x0038 */ const wchar_t* lpszName;
  /* 0x0040 */ const wchar_t* lpszClass;
  /* 0x0048 */ unsigned long dwExStyle;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_MEMORY_DESCRIPTOR, *PMINIDUMP_MEMORY_DESCRIPTOR; /* size: 0x0010 */

typedef struct _MINIDUMP_THREAD_EX
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
  /* 0x0030 */ struct _MINIDUMP_MEMORY_DESCRIPTOR BackingStore;
} MINIDUMP_THREAD_EX, *PMINIDUMP_THREAD_EX; /* size: 0x0040 */

struct tagRID_DEVICE_INFO_MOUSE
{
  /* 0x0000 */ unsigned long dwId;
  /* 0x0004 */ unsigned long dwNumberOfButtons;
  /* 0x0008 */ unsigned long dwSampleRate;
  /* 0x000c */ int fHasHorizontalWheel;
}; /* size: 0x0010 */

struct tagRID_DEVICE_INFO_KEYBOARD
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned long dwSubType;
  /* 0x0008 */ unsigned long dwKeyboardMode;
  /* 0x000c */ unsigned long dwNumberOfFunctionKeys;
  /* 0x0010 */ unsigned long dwNumberOfIndicators;
  /* 0x0014 */ unsigned long dwNumberOfKeysTotal;
}; /* size: 0x0018 */

struct tagRID_DEVICE_INFO_HID
{
  /* 0x0000 */ unsigned long dwVendorId;
  /* 0x0004 */ unsigned long dwProductId;
  /* 0x0008 */ unsigned long dwVersionNumber;
  /* 0x000c */ unsigned short usUsagePage;
  /* 0x000e */ unsigned short usUsage;
}; /* size: 0x0010 */

struct tagRID_DEVICE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwType;
  union
  {
    /* 0x0008 */ struct tagRID_DEVICE_INFO_MOUSE mouse;
    /* 0x0008 */ struct tagRID_DEVICE_INFO_KEYBOARD keyboard;
    struct
    {
      /* 0x0008 */ struct tagRID_DEVICE_INFO_HID hid;
      /* 0x0018 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0020 */

struct IOleUndoUnit
{
}; /* size: 0x0008 */

typedef struct _FILE_LAYOUT_INFO_ENTRY
{
  struct
  {
    /* 0x0000 */ union _LARGE_INTEGER CreationTime;
    /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
    /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
    /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
    /* 0x0020 */ unsigned long FileAttributes;
    /* 0x0024 */ long __PADDING__[1];
  } /* size: 0x0028 */ BasicInformation;
  /* 0x0028 */ unsigned long OwnerId;
  /* 0x002c */ unsigned long SecurityId;
  /* 0x0030 */ __int64 Usn;
} FILE_LAYOUT_INFO_ENTRY, *PFILE_LAYOUT_INFO_ENTRY; /* size: 0x0038 */

typedef struct _IMAGE_NT_HEADERS
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER OptionalHeader;
} IMAGE_NT_HEADERS, *PIMAGE_NT_HEADERS; /* size: 0x00f8 */

struct HMENU__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _ALPC_TOKEN_ATTR
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ struct _LUID ModifiedId;
} ALPC_TOKEN_ATTR, *PALPC_TOKEN_ATTR; /* size: 0x0018 */

typedef struct _PMD
{
  /* 0x0000 */ int mdisp;
  /* 0x0004 */ int pdisp;
  /* 0x0008 */ int vdisp;
} PMD, *PPMD; /* size: 0x000c */

typedef struct _s__CatchableType
{
  /* 0x0000 */ unsigned int properties;
  /* 0x0004 */ struct _TypeDescriptor* pType;
  /* 0x000c */ struct _PMD thisDisplacement;
  /* 0x0018 */ int sizeOrOffset;
  /* 0x001c */ void* copyFunction /* function */;
} s__CatchableType, *Ps__CatchableType; /* size: 0x0024 */

typedef struct _ENUM_SERVICE_STATUS_PROCESSW
{
  /* 0x0000 */ wchar_t* lpServiceName;
  /* 0x0008 */ wchar_t* lpDisplayName;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatusProcess;
  /* 0x0034 */ long __PADDING__[1];
} ENUM_SERVICE_STATUS_PROCESSW, *PENUM_SERVICE_STATUS_PROCESSW; /* size: 0x0038 */

typedef struct _SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1
{
  /* 0x0000 */ struct _GUID BootIdentifier;
  /* 0x0010 */ enum _FIRMWARE_TYPE FirmwareType;
} SYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1, *PSYSTEM_BOOT_ENVIRONMENT_INFORMATION_V1; /* size: 0x0014 */

typedef struct __midl_frag537_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag537_t, *P_midl_frag537_t; /* size: 0x0038 */

typedef struct _TypeDescriptor
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char* name /* zero-length array */;
} TypeDescriptor, *PTypeDescriptor; /* size: 0x0010 */

typedef struct _SERVICE_SID_INFO
{
  /* 0x0000 */ unsigned long dwServiceSidType;
} SERVICE_SID_INFO, *PSERVICE_SID_INFO; /* size: 0x0004 */

struct IClassClassicInfo
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::displaybindAttribute
{
} _vc_attributes::displaybindAttribute, *P_vc_attributes::displaybindAttribute; /* size: 0x0001 */

typedef struct _DRIVER_INFO_5A
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_624;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ char* pEnvironment;
  /* 0x0018 */ char* pDriverPath;
  /* 0x0020 */ char* pDataFile;
  /* 0x0028 */ char* pConfigFile;
  /* 0x0030 */ unsigned long dwDriverAttributes;
  /* 0x0034 */ unsigned long dwConfigVersion;
  /* 0x0038 */ unsigned long dwDriverVersion;
  /* 0x003c */ long __PADDING__[1];
} DRIVER_INFO_5A, *PDRIVER_INFO_5A; /* size: 0x0040 */

struct IAdviseSink2
{
}; /* size: 0x0008 */

class CRpcOptions
{
  /* 0x0000 */ long Padding_625[2];
  /* 0x0008 */ class CStdIdentity* _pStdId;
  /* 0x0010 */ struct IUnknown* _pUnkOuter;
}; /* size: 0x0018 */

class IFinish
{
}; /* size: 0x0008 */

struct IClassFactory2
{
}; /* size: 0x0008 */

struct ITypeInfo2
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_POOL_INFORMATION
{
  /* 0x0000 */ unsigned __int64 TotalSize;
  /* 0x0008 */ void* FirstEntry;
  /* 0x0010 */ unsigned short EntryOverhead;
  /* 0x0012 */ unsigned char PoolTagPresent;
  /* 0x0013 */ unsigned char Spare0;
  /* 0x0014 */ unsigned long NumberOfEntries;
  /* 0x0018 */ struct _SYSTEM_POOL_ENTRY Entries[1];
} SYSTEM_POOL_INFORMATION, *PSYSTEM_POOL_INFORMATION; /* size: 0x0028 */

typedef struct _STRING64
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_626;
  /* 0x0008 */ unsigned __int64 Buffer;
} STRING64, *PSTRING64; /* size: 0x0010 */

struct tagIMEMENUITEMINFOA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0018 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ char szString[80];
  /* 0x0074 */ long Padding_627;
  /* 0x0078 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0080 */

typedef struct _MINIDUMP_TOKEN_INFO_LIST
{
  /* 0x0000 */ unsigned long TokenListSize;
  /* 0x0004 */ unsigned long TokenListEntries;
  /* 0x0008 */ unsigned long ListHeaderSize;
  /* 0x000c */ unsigned long ElementHeaderSize;
} MINIDUMP_TOKEN_INFO_LIST, *PMINIDUMP_TOKEN_INFO_LIST; /* size: 0x0010 */

typedef struct _PROPSHEETPAGEA_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const char* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const char* pszHeaderTitle;
  /* 0x0050 */ const char* pszHeaderSubTitle;
} PROPSHEETPAGEA_V2, *PPROPSHEETPAGEA_V2; /* size: 0x0058 */

typedef struct __midl_frag1289_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1289_t, *P_midl_frag1289_t; /* size: 0x0038 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY
{
  /* 0x0000 */ unsigned long EntryLength;
  /* 0x0004 */ unsigned long DependencyTypeFlags;
  /* 0x0008 */ unsigned long ProviderSpecificFlags;
  /* 0x000c */ struct _VIRTUAL_STORAGE_TYPE VirtualStorageType;
  /* 0x0020 */ unsigned long AncestorLevel;
  /* 0x0024 */ unsigned long HostVolumeNameOffset;
  /* 0x0028 */ unsigned long HostVolumeNameSize;
  /* 0x002c */ unsigned long DependentVolumeNameOffset;
  /* 0x0030 */ unsigned long DependentVolumeNameSize;
  /* 0x0034 */ unsigned long RelativePathOffset;
  /* 0x0038 */ unsigned long RelativePathSize;
  /* 0x003c */ unsigned long DependentDeviceNameOffset;
  /* 0x0040 */ unsigned long DependentDeviceNameSize;
} STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY, *PSTORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY; /* size: 0x0044 */

struct tagEMRRESIZEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long cEntries;
}; /* size: 0x0010 */

struct tagCHANGEFILTERSTRUCT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ExtStatus;
}; /* size: 0x0008 */

struct protoent
{
  /* 0x0000 */ char* p_name;
  /* 0x0008 */ char** p_aliases;
  /* 0x0010 */ short p_proto;
  /* 0x0012 */ char __PADDING__[6];
}; /* size: 0x0018 */

typedef struct __midl_frag1353_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1353_t, *P_midl_frag1353_t; /* size: 0x0048 */

typedef struct _CSV_NAMESPACE_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long DeviceNumber;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ unsigned long SectorSize;
  /* 0x0014 */ long __PADDING__[1];
} CSV_NAMESPACE_INFO, *PCSV_NAMESPACE_INFO; /* size: 0x0018 */

typedef struct _RPC_SECURITY_QOS_V4_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_628;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long __PADDING__[1];
} RPC_SECURITY_QOS_V4_A, *PRPC_SECURITY_QOS_V4_A; /* size: 0x0030 */

typedef struct _CMS_KEY_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned int Algid;
  /* 0x0008 */ unsigned char* pbOID;
  /* 0x0010 */ unsigned long cbOID;
  /* 0x0014 */ long __PADDING__[1];
} CMS_KEY_INFO, *PCMS_KEY_INFO; /* size: 0x0018 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >::is_pointer<Windows::Rtl::IRtlWORAStream *>
{
}; /* size: 0x0001 */

typedef struct _CTL_CONTEXT
{
  /* 0x0000 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0004 */ long Padding_629;
  /* 0x0008 */ unsigned char* pbCtlEncoded;
  /* 0x0010 */ unsigned long cbCtlEncoded;
  /* 0x0014 */ long Padding_630;
  /* 0x0018 */ struct _CTL_INFO* pCtlInfo;
  /* 0x0020 */ void* hCertStore;
  /* 0x0028 */ void* hCryptMsg;
  /* 0x0030 */ unsigned char* pbCtlContent;
  /* 0x0038 */ unsigned long cbCtlContent;
  /* 0x003c */ long __PADDING__[1];
} CTL_CONTEXT, *PCTL_CONTEXT; /* size: 0x0040 */

struct AsyncIAdviseSink
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_DEVICE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfDisks;
  /* 0x0004 */ unsigned long NumberOfFloppies;
  /* 0x0008 */ unsigned long NumberOfCdRoms;
  /* 0x000c */ unsigned long NumberOfTapes;
  /* 0x0010 */ unsigned long NumberOfSerialPorts;
  /* 0x0014 */ unsigned long NumberOfParallelPorts;
} SYSTEM_DEVICE_INFORMATION, *PSYSTEM_DEVICE_INFORMATION; /* size: 0x0018 */

typedef struct _CTL_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_631;
  /* 0x0008 */ struct _CTL_USAGE SubjectUsage;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB SequenceNumber;
  /* 0x0038 */ struct _FILETIME ThisUpdate;
  /* 0x0040 */ struct _FILETIME NextUpdate;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0060 */ unsigned long cCTLEntry;
  /* 0x0064 */ long Padding_632;
  /* 0x0068 */ struct _CTL_ENTRY* rgCTLEntry;
  /* 0x0070 */ unsigned long cExtension;
  /* 0x0074 */ long Padding_633;
  /* 0x0078 */ struct _CERT_EXTENSION* rgExtension;
} CTL_INFO, *PCTL_INFO; /* size: 0x0080 */

typedef struct _WIN_TRUST_SUBJECT_FILE
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ const wchar_t* lpPath;
} WIN_TRUST_SUBJECT_FILE, *PWIN_TRUST_SUBJECT_FILE; /* size: 0x0010 */

class Microsoft::WRL::Details::RuntimeClassBase
{
}; /* size: 0x0001 */

typedef struct _IMAGEHLP_GET_TYPE_INFO_PARAMS
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long NumIds;
  /* 0x000c */ long Padding_634;
  /* 0x0010 */ unsigned long* TypeIds;
  /* 0x0018 */ unsigned __int64 TagFilter;
  /* 0x0020 */ unsigned long NumReqs;
  /* 0x0024 */ long Padding_635;
  /* 0x0028 */ enum _IMAGEHLP_SYMBOL_TYPE_INFO* ReqKinds;
  /* 0x0030 */ unsigned __int64* ReqOffsets;
  /* 0x0038 */ unsigned long* ReqSizes;
  /* 0x0040 */ unsigned __int64 ReqStride;
  /* 0x0048 */ unsigned __int64 BufferSize;
  /* 0x0050 */ void* Buffer;
  /* 0x0058 */ unsigned long EntriesMatched;
  /* 0x005c */ unsigned long EntriesFilled;
  /* 0x0060 */ unsigned __int64 TagsFound;
  /* 0x0068 */ unsigned __int64 AllReqsValid;
  /* 0x0070 */ unsigned long NumReqsValid;
  /* 0x0074 */ long Padding_636;
  /* 0x0078 */ unsigned __int64* ReqsValid;
} IMAGEHLP_GET_TYPE_INFO_PARAMS, *PIMAGEHLP_GET_TYPE_INFO_PARAMS; /* size: 0x0080 */

typedef struct _CTL_VERIFY_USAGE_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwError;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long Padding_637;
  /* 0x0010 */ const struct _CTL_CONTEXT** ppCtl;
  /* 0x0018 */ unsigned long dwCtlEntryIndex;
  /* 0x001c */ long Padding_638;
  /* 0x0020 */ const struct _CERT_CONTEXT** ppSigner;
  /* 0x0028 */ unsigned long dwSignerIndex;
  /* 0x002c */ long __PADDING__[1];
} CTL_VERIFY_USAGE_STATUS, *PCTL_VERIFY_USAGE_STATUS; /* size: 0x0030 */

struct IDataTransfer
{
}; /* size: 0x0008 */

typedef struct _CERT_CHAIN_CONTEXT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _CERT_TRUST_STATUS TrustStatus;
  /* 0x000c */ unsigned long cChain;
  /* 0x0010 */ struct _CERT_SIMPLE_CHAIN** rgpChain;
  /* 0x0018 */ unsigned long cLowerQualityChainContext;
  /* 0x001c */ long Padding_639;
  /* 0x0020 */ const struct _CERT_CHAIN_CONTEXT** rgpLowerQualityChainContext;
  /* 0x0028 */ int fHasRevocationFreshnessTime;
  /* 0x002c */ unsigned long dwRevocationFreshnessTime;
  /* 0x0030 */ unsigned long dwCreateFlags;
  /* 0x0034 */ struct _GUID ChainId;
  /* 0x0044 */ long __PADDING__[1];
} CERT_CHAIN_CONTEXT, *PCERT_CHAIN_CONTEXT; /* size: 0x0048 */

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR_2
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
  /* 0x0020 */ unsigned long ObjectInfoRva;
  /* 0x0024 */ unsigned int Reserved0;
} MINIDUMP_HANDLE_DESCRIPTOR_2, *PMINIDUMP_HANDLE_DESCRIPTOR_2; /* size: 0x0028 */

typedef struct _tagPROTOCOLFILTERDATA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_640;
  /* 0x0008 */ struct IInternetProtocolSink* pProtocolSink;
  /* 0x0010 */ struct IInternetProtocol* pProtocol;
  /* 0x0018 */ struct IUnknown* pUnk;
  /* 0x0020 */ unsigned long dwFilterFlags;
  /* 0x0024 */ long __PADDING__[1];
} tagPROTOCOLFILTERDATA, *PtagPROTOCOLFILTERDATA; /* size: 0x0028 */

struct ISpecifyPropertyPages
{
}; /* size: 0x0008 */

typedef struct _SECURITY_SEED_AND_LENGTH
{
  /* 0x0000 */ unsigned char Length;
  /* 0x0001 */ unsigned char Seed;
} SECURITY_SEED_AND_LENGTH, *PSECURITY_SEED_AND_LENGTH; /* size: 0x0002 */

struct IRundown
{
}; /* size: 0x0008 */

typedef struct _SCARD_ATRMASK
{
  /* 0x0000 */ unsigned long cbAtr;
  /* 0x0004 */ unsigned char rgbAtr[36];
  /* 0x0028 */ unsigned char rgbMask[36];
} SCARD_ATRMASK, *PSCARD_ATRMASK; /* size: 0x004c */

typedef struct _RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_641[3];
  /* 0x0008 */ unsigned long FaultProbability[16];
  /* 0x0048 */ unsigned long FaultBreak[16];
  /* 0x0088 */ unsigned long TargetMaximumIndex;
  /* 0x008c */ long Padding_642;
  /* 0x0090 */ unsigned __int64 FaultTargetStart[128];
  /* 0x0490 */ unsigned __int64 FaultTargetEnd[128];
  /* 0x0890 */ unsigned long ExclusionMaximumIndex;
  /* 0x0894 */ long Padding_643;
  /* 0x0898 */ unsigned __int64 FaultExclusionStart[128];
  /* 0x0c98 */ unsigned __int64 FaultExclusionEnd[128];
} RTL_VERIFIER_FAULT_INJECTIONS_INFORMATION, *PRTL_VERIFIER_FAULT_INJECTIONS_INFORMATION; /* size: 0x1098 */

typedef struct _IMAGEHLP_LINE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_644;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned long LineNumber;
  /* 0x0014 */ long Padding_645;
  /* 0x0018 */ char* FileName;
  /* 0x0020 */ unsigned __int64 Address;
} IMAGEHLP_LINE64, *PIMAGEHLP_LINE64; /* size: 0x0028 */

typedef struct _CERT_TRUST_LIST_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_646;
  /* 0x0008 */ struct _CTL_ENTRY* pCtlEntry;
  /* 0x0010 */ const struct _CTL_CONTEXT* pCtlContext;
} CERT_TRUST_LIST_INFO, *PCERT_TRUST_LIST_INFO; /* size: 0x0018 */

typedef struct _CRYPTNET_URL_CACHE_PRE_FETCH_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwObjectType;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReserved;
  /* 0x0010 */ struct _FILETIME ThisUpdateTime;
  /* 0x0018 */ struct _FILETIME NextUpdateTime;
  /* 0x0020 */ struct _FILETIME PublishTime;
} CRYPTNET_URL_CACHE_PRE_FETCH_INFO, *PCRYPTNET_URL_CACHE_PRE_FETCH_INFO; /* size: 0x0028 */

typedef struct _METADC
{
  /* 0x0000 */ int xMwo;
  /* 0x0004 */ int yMwo;
  /* 0x0008 */ int xMwe;
  /* 0x000c */ int yMwe;
  /* 0x0010 */ int xre;
  /* 0x0014 */ int yre;
  /* 0x0018 */ struct _METADC* pNext;
} METADC, *PMETADC; /* size: 0x0020 */

struct tagMULTIKEYHELPW
{
  /* 0x0000 */ unsigned long mkSize;
  /* 0x0004 */ wchar_t mkKeylist;
  /* 0x0006 */ wchar_t szKeyphrase[1];
}; /* size: 0x0008 */

struct tagRemHENHMETAFILE
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _TIME_DYNAMIC_ZONE_INFORMATION
{
  /* 0x0000 */ long Bias;
  /* 0x0004 */ wchar_t StandardName[32];
  /* 0x0044 */ struct _SYSTEMTIME StandardDate;
  /* 0x0054 */ long StandardBias;
  /* 0x0058 */ wchar_t DaylightName[32];
  /* 0x0098 */ struct _SYSTEMTIME DaylightDate;
  /* 0x00a8 */ long DaylightBias;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} TIME_DYNAMIC_ZONE_INFORMATION, *PTIME_DYNAMIC_ZONE_INFORMATION; /* size: 0x01b0 */

typedef struct _CERT_REVOCATION_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwIndex;
  /* 0x0008 */ unsigned long dwError;
  /* 0x000c */ unsigned long dwReason;
  /* 0x0010 */ int fHasFreshnessTime;
  /* 0x0014 */ unsigned long dwFreshnessTime;
} CERT_REVOCATION_STATUS, *PCERT_REVOCATION_STATUS; /* size: 0x0018 */

struct IGlobalInterfaceTable
{
}; /* size: 0x0008 */

struct tagEMRFRAMERGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbRgnData;
  /* 0x001c */ unsigned long ihBrush;
  /* 0x0020 */ struct tagSIZE szlStroke;
  /* 0x0028 */ unsigned char RgnData[1];
  /* 0x0029 */ char __PADDING__[3];
}; /* size: 0x002c */

struct tagEMRCREATEMONOBRUSH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihBrush;
  /* 0x000c */ unsigned long iUsage;
  /* 0x0010 */ unsigned long offBmi;
  /* 0x0014 */ unsigned long cbBmi;
  /* 0x0018 */ unsigned long offBits;
  /* 0x001c */ unsigned long cbBits;
}; /* size: 0x0020 */

struct tagINTERFACEDATA
{
  /* 0x0000 */ struct tagMETHODDATA* pmethdata;
  /* 0x0008 */ unsigned int cMembers;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class Windows::LockGrant<_RTL_CRITICAL_SECTION>
{
}; /* size: 0x0010 */

typedef struct _MINIDUMP_MODULE
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
  /* 0x0008 */ unsigned int SizeOfImage;
  /* 0x000c */ unsigned int CheckSum;
  /* 0x0010 */ unsigned int TimeDateStamp;
  /* 0x0014 */ unsigned long ModuleNameRva;
  /* 0x0018 */ struct tagVS_FIXEDFILEINFO VersionInfo;
  /* 0x004c */ struct _MINIDUMP_LOCATION_DESCRIPTOR CvRecord;
  /* 0x0054 */ struct _MINIDUMP_LOCATION_DESCRIPTOR MiscRecord;
  /* 0x005c */ unsigned __int64 Reserved0;
  /* 0x0064 */ unsigned __int64 Reserved1;
} MINIDUMP_MODULE, *PMINIDUMP_MODULE; /* size: 0x006c */

typedef struct _wireBRECORD
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ struct IRecordInfo* pRecInfo;
  /* 0x0010 */ unsigned char* pRecord;
} wireBRECORD, *PwireBRECORD; /* size: 0x0018 */

class Windows::ErrorHandling::Rtl::CBaseNtStatusPointerCarryingFrame<Windows::ErrorHandling::Rtl::CBoolFrame>
{
  /* 0x0000 */ long* m_pstatus;
}; /* size: 0x0008 */

struct tagCHARSETINFO
{
  /* 0x0000 */ unsigned int ciCharset;
  /* 0x0004 */ unsigned int ciACP;
  /* 0x0008 */ struct tagFONTSIGNATURE fs;
}; /* size: 0x0020 */

struct IRecordInfo
{
}; /* size: 0x0008 */

struct IGetContextId
{
}; /* size: 0x0008 */

typedef struct _NDR64_CONSTANT_IID_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ struct _GUID Guid;
} NDR64_CONSTANT_IID_FORMAT, *PNDR64_CONSTANT_IID_FORMAT; /* size: 0x0014 */

typedef struct _TRANSACTION_ENLISTMENTS_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfEnlistments;
  /* 0x0004 */ struct _TRANSACTION_ENLISTMENT_PAIR EnlistmentPair[1];
} TRANSACTION_ENLISTMENTS_INFORMATION, *PTRANSACTION_ENLISTMENTS_INFORMATION; /* size: 0x0024 */

typedef struct _SPC_SERIALIZED_OBJECT
{
  /* 0x0000 */ unsigned char ClassId[16];
  /* 0x0010 */ struct _CRYPTOAPI_BLOB SerializedData;
} SPC_SERIALIZED_OBJECT, *PSPC_SERIALIZED_OBJECT; /* size: 0x0020 */

typedef struct _ais_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[649];
  /* 0x028b */ char __PADDING__[1];
} ais_MIDL_PROC_FORMAT_STRING, *Pais_MIDL_PROC_FORMAT_STRING; /* size: 0x028c */

struct tagCAUUID
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_647;
  /* 0x0008 */ struct _GUID* pElems;
}; /* size: 0x0010 */

typedef struct _CERT_POLICY_QUALIFIER_USER_NOTICE
{
  /* 0x0000 */ struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE* pNoticeReference;
  /* 0x0008 */ wchar_t* pszDisplayText;
} CERT_POLICY_QUALIFIER_USER_NOTICE, *PCERT_POLICY_QUALIFIER_USER_NOTICE; /* size: 0x0010 */

typedef struct _KEY_VALUE_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long TitleIndex;
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned long NameLength;
  /* 0x000c */ wchar_t Name[1];
  /* 0x000e */ char __PADDING__[2];
} KEY_VALUE_BASIC_INFORMATION, *PKEY_VALUE_BASIC_INFORMATION; /* size: 0x0010 */

typedef struct _PO_WAKE_SOURCE_HEADER
{
  /* 0x0000 */ enum PO_WAKE_SOURCE_TYPE Type;
  /* 0x0004 */ unsigned long Size;
} PO_WAKE_SOURCE_HEADER, *PPO_WAKE_SOURCE_HEADER; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_DEVICE
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ wchar_t InstancePath[1];
  /* 0x000a */ char __PADDING__[2];
} PO_WAKE_SOURCE_DEVICE, *PPO_WAKE_SOURCE_DEVICE; /* size: 0x000c */

struct IXMLDOMCDATASection
{
}; /* size: 0x0008 */

typedef struct _RPC_BINDING_HANDLE_SECURITY_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_648;
  /* 0x0008 */ unsigned char* ServerPrincName;
  /* 0x0010 */ unsigned long AuthnLevel;
  /* 0x0014 */ unsigned long AuthnSvc;
  /* 0x0018 */ struct _SEC_WINNT_AUTH_IDENTITY_A* AuthIdentity;
  /* 0x0020 */ struct _RPC_SECURITY_QOS* SecurityQos;
} RPC_BINDING_HANDLE_SECURITY_V1_A, *PRPC_BINDING_HANDLE_SECURITY_V1_A; /* size: 0x0028 */

struct tagCInterfaceStubHeader
{
  /* 0x0000 */ const struct _GUID* piid;
  /* 0x0008 */ const struct _MIDL_SERVER_INFO_* pServerInfo;
  /* 0x0010 */ unsigned long DispatchTableCount;
  /* 0x0014 */ long Padding_649;
  /* 0x0018 */ void* const* pDispatchTable /* function */;
}; /* size: 0x0020 */

typedef struct _CERT_POLICY_QUALIFIER_NOTICE_REFERENCE
{
  /* 0x0000 */ char* pszOrganization;
  /* 0x0008 */ unsigned long cNoticeNumbers;
  /* 0x000c */ long Padding_650;
  /* 0x0010 */ int* rgNoticeNumbers;
} CERT_POLICY_QUALIFIER_NOTICE_REFERENCE, *PCERT_POLICY_QUALIFIER_NOTICE_REFERENCE; /* size: 0x0018 */

typedef struct _tagADDRESS64
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned short Segment;
  /* 0x000a */ char Padding_651[2];
  /* 0x000c */ enum ADDRESS_MODE Mode;
} tagADDRESS64, *PtagADDRESS64; /* size: 0x0010 */

typedef struct _KDHELP64
{
  /* 0x0000 */ unsigned __int64 Thread;
  /* 0x0008 */ unsigned long ThCallbackStack;
  /* 0x000c */ unsigned long ThCallbackBStore;
  /* 0x0010 */ unsigned long NextCallback;
  /* 0x0014 */ unsigned long FramePointer;
  /* 0x0018 */ unsigned __int64 KiCallUserMode;
  /* 0x0020 */ unsigned __int64 KeUserCallbackDispatcher;
  /* 0x0028 */ unsigned __int64 SystemRangeStart;
  /* 0x0030 */ unsigned __int64 KiUserExceptionDispatcher;
  /* 0x0038 */ unsigned __int64 StackBase;
  /* 0x0040 */ unsigned __int64 StackLimit;
  /* 0x0048 */ unsigned __int64 Reserved[5];
} KDHELP64, *PKDHELP64; /* size: 0x0070 */

typedef struct _tagSTACKFRAME_EX
{
  /* 0x0000 */ struct _tagADDRESS64 AddrPC;
  /* 0x0010 */ struct _tagADDRESS64 AddrReturn;
  /* 0x0020 */ struct _tagADDRESS64 AddrFrame;
  /* 0x0030 */ struct _tagADDRESS64 AddrStack;
  /* 0x0040 */ struct _tagADDRESS64 AddrBStore;
  /* 0x0050 */ void* FuncTableEntry;
  /* 0x0058 */ unsigned __int64 Params[4];
  /* 0x0078 */ int Far;
  /* 0x007c */ int Virtual;
  /* 0x0080 */ unsigned __int64 Reserved[3];
  /* 0x0098 */ struct _KDHELP64 KdHelp;
  /* 0x0108 */ unsigned long StackFrameSize;
  /* 0x010c */ unsigned long InlineFrameContext;
} tagSTACKFRAME_EX, *PtagSTACKFRAME_EX; /* size: 0x0110 */

typedef struct _TP_CALLBACK_ENVIRON_V3
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_652;
  /* 0x0008 */ struct _TP_POOL* Pool;
  /* 0x0010 */ struct _TP_CLEANUP_GROUP* CleanupGroup;
  /* 0x0018 */ void* CleanupGroupCancelCallback /* function */;
  /* 0x0020 */ void* RaceDll;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0030 */ void* FinalizationCallback /* function */;
  union
  {
    union
    {
      /* 0x0038 */ unsigned long Flags;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0038 */ unsigned long LongFunction : 1; /* bit position: 0 */
          /* 0x0038 */ unsigned long Persistent : 1; /* bit position: 1 */
          /* 0x0038 */ unsigned long Private : 30; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ s;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x003c */ enum _TP_CALLBACK_PRIORITY CallbackPriority;
  /* 0x0040 */ unsigned long Size;
  /* 0x0044 */ long __PADDING__[1];
} TP_CALLBACK_ENVIRON_V3, *PTP_CALLBACK_ENVIRON_V3; /* size: 0x0048 */

class CEnumContextProps
{
  /* 0x0000 */ long Padding_653[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ long Padding_654;
  /* 0x0010 */ struct tagContextProperty* _pList;
  /* 0x0018 */ unsigned long* _pcListRefs;
  /* 0x0020 */ unsigned long _cItems;
  /* 0x0024 */ unsigned long _CurrentPosition;
}; /* size: 0x0028 */

typedef struct _ENCRYPTION_CERTIFICATE_HASH
{
  /* 0x0000 */ unsigned long cbTotalLength;
  /* 0x0004 */ long Padding_655;
  /* 0x0008 */ struct _SID* pUserSid;
  /* 0x0010 */ struct _EFS_HASH_BLOB* pHash;
  /* 0x0018 */ wchar_t* lpDisplayInformation;
} ENCRYPTION_CERTIFICATE_HASH, *PENCRYPTION_CERTIFICATE_HASH; /* size: 0x0020 */

struct IOleClientSite
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_SCOPED_POLICY_ID_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_SCOPED_POLICY_ID_ACE, *PSYSTEM_SCOPED_POLICY_ID_ACE; /* size: 0x000c */

typedef struct _OPERATION_END_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long OperationId;
  /* 0x0008 */ unsigned long Flags;
} OPERATION_END_PARAMETERS, *POPERATION_END_PARAMETERS; /* size: 0x000c */

typedef struct _CERT_LOGOTYPE_DETAILS
{
  /* 0x0000 */ wchar_t* pwszMimeType;
  /* 0x0008 */ unsigned long cHashedUrl;
  /* 0x000c */ long Padding_656;
  /* 0x0010 */ struct _CERT_HASHED_URL* rgHashedUrl;
} CERT_LOGOTYPE_DETAILS, *PCERT_LOGOTYPE_DETAILS; /* size: 0x0018 */

typedef struct _CERT_LOGOTYPE_IMAGE
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x0018 */ struct _CERT_LOGOTYPE_IMAGE_INFO* pLogotypeImageInfo;
} CERT_LOGOTYPE_IMAGE, *PCERT_LOGOTYPE_IMAGE; /* size: 0x0020 */

typedef struct _KEY_SET_VIRTUALIZATION_INFORMATION
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long VirtualTarget : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long VirtualStore : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long VirtualSource : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
  }; /* bitfield */
} KEY_SET_VIRTUALIZATION_INFORMATION, *PKEY_SET_VIRTUALIZATION_INFORMATION; /* size: 0x0004 */

struct IErrorInfo
{
}; /* size: 0x0008 */

typedef struct _CSV_IS_OWNED_BY_CSVFS
{
  /* 0x0000 */ unsigned char OwnedByCSVFS;
} CSV_IS_OWNED_BY_CSVFS, *PCSV_IS_OWNED_BY_CSVFS; /* size: 0x0001 */

typedef struct _NDR64_STRING_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char IsSized : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char IsRanged : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char Reserved3 : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char Reserved4 : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Reserved5 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char Reserved6 : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Reserved7 : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Reserved8 : 1; /* bit position: 7 */
  }; /* bitfield */
} NDR64_STRING_FLAGS, *PNDR64_STRING_FLAGS; /* size: 0x0001 */

struct NDR64_STRING_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ struct _NDR64_STRING_FLAGS Flags;
  /* 0x0002 */ unsigned short ElementSize;
}; /* size: 0x0004 */

typedef struct _NDR64_CONFORMANT_STRING_FORMAT
{
  /* 0x0000 */ struct NDR64_STRING_HEADER_FORMAT Header;
} NDR64_CONFORMANT_STRING_FORMAT, *PNDR64_CONFORMANT_STRING_FORMAT; /* size: 0x0004 */

typedef struct _CERT_LOGOTYPE_IMAGE_INFO
{
  /* 0x0000 */ unsigned long dwLogotypeImageInfoChoice;
  /* 0x0004 */ unsigned long dwFileSize;
  /* 0x0008 */ unsigned long dwXSize;
  /* 0x000c */ unsigned long dwYSize;
  /* 0x0010 */ unsigned long dwLogotypeImageResolutionChoice;
  union
  {
    /* 0x0014 */ unsigned long dwNumBits;
    /* 0x0014 */ unsigned long dwTableSize;
  }; /* size: 0x0004 */
  /* 0x0018 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_IMAGE_INFO, *PCERT_LOGOTYPE_IMAGE_INFO; /* size: 0x0020 */

typedef struct _SPC_STATEMENT_TYPE
{
  /* 0x0000 */ unsigned long cKeyPurposeId;
  /* 0x0004 */ long Padding_657;
  /* 0x0008 */ char** rgpszKeyPurposeId;
} SPC_STATEMENT_TYPE, *PSPC_STATEMENT_TYPE; /* size: 0x0010 */

typedef struct _CERT_LOGOTYPE_AUDIO
{
  /* 0x0000 */ struct _CERT_LOGOTYPE_DETAILS LogotypeDetails;
  /* 0x0018 */ struct _CERT_LOGOTYPE_AUDIO_INFO* pLogotypeAudioInfo;
} CERT_LOGOTYPE_AUDIO, *PCERT_LOGOTYPE_AUDIO; /* size: 0x0020 */

class CPoint
{
  /* 0x0000 */ struct tagPOINT _pt;
}; /* size: 0x0008 */

class CDragOperation
{
  union
  {
    struct
    {
      /* 0x0000 */ struct IDataObject* _pDataObject;
      /* 0x0008 */ struct tagInterfaceData* _DOBuffer;
      /* 0x0010 */ struct IDropSource* _pDropSource;
      /* 0x0018 */ struct IDropSourceQueryEx* _pDSQueryEx;
      /* 0x0020 */ struct IDropSourceNotify* _pDSNotify;
      /* 0x0028 */ struct IDropTarget* _pDropTarget;
      /* 0x0030 */ struct IDropTarget* _pRealDropTarget;
      /* 0x0038 */ void* _hFormats;
      /* 0x0040 */ class CPoint _cpt;
      /* 0x0048 */ unsigned long _dwOKEffects;
      /* 0x004c */ long Padding_658;
      /* 0x0050 */ unsigned long* _pdwEffect;
      /* 0x0058 */ int _fEscapePressed;
      /* 0x005c */ long Padding_659;
      /* 0x0060 */ struct HICON__* _curOld;
      /* 0x0068 */ struct HWND__* _hwndLast;
      /* 0x0070 */ unsigned long _grfKeyState;
      /* 0x0074 */ HRESULT _hrDragResult;
      /* 0x0078 */ int _fReleasedCapture;
      /* 0x007c */ long Padding_660;
      /* 0x0080 */ class CDragDefaultCursors* _pcddcDefault;
      /* 0x0088 */ int _fUseWin31;
      /* 0x008c */ unsigned long _dwFinalKeyState;
      /* 0x0090 */ class CPoint _cptFinalCursorPos;
    }; /* size: 0x008c */
    /* 0x0000 */ long s_wScrollInt;
  }; /* size: 0x008c */
}; /* size: 0x0098 */

class CStringHashTable
{
}; /* size: 0x0028 */

typedef struct _CERT_LOGOTYPE_AUDIO_INFO
{
  /* 0x0000 */ unsigned long dwFileSize;
  /* 0x0004 */ unsigned long dwPlayTime;
  /* 0x0008 */ unsigned long dwChannels;
  /* 0x000c */ unsigned long dwSampleRate;
  /* 0x0010 */ wchar_t* pwszLanguage;
} CERT_LOGOTYPE_AUDIO_INFO, *PCERT_LOGOTYPE_AUDIO_INFO; /* size: 0x0018 */

struct IUserTokenUserSoftwareClasses
{
}; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXT_FUNCTIONS
{
  /* 0x0000 */ unsigned long cFunctions;
  /* 0x0004 */ long Padding_661;
  /* 0x0008 */ wchar_t** rgpszFunctions;
} CRYPT_CONTEXT_FUNCTIONS, *PCRYPT_CONTEXT_FUNCTIONS; /* size: 0x0010 */

typedef struct _PERF_BIN
{
  /* 0x0000 */ unsigned long NumberOfBins;
  /* 0x0004 */ unsigned long TypeOfBin;
  /* 0x0008 */ struct _BIN_RANGE BinsRanges[1];
} PERF_BIN, *PPERF_BIN; /* size: 0x0018 */

struct tagHW_PROFILE_INFOA
{
  /* 0x0000 */ unsigned long dwDockInfo;
  /* 0x0004 */ char szHwProfileGuid[39];
  /* 0x002b */ char szHwProfileName[80];
  /* 0x007b */ char __PADDING__[1];
}; /* size: 0x007c */

typedef struct _ABCFLOAT
{
  /* 0x0000 */ float abcfA;
  /* 0x0004 */ float abcfB;
  /* 0x0008 */ float abcfC;
} ABCFLOAT, *PABCFLOAT; /* size: 0x000c */

struct Windows::Rtl::IRtlInterface
{
}; /* size: 0x0008 */

typedef struct _THREAD_BASIC_INFORMATION
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ long Padding_662;
  /* 0x0008 */ struct _TEB* TebBaseAddress;
  /* 0x0010 */ struct _CLIENT_ID ClientId;
  /* 0x0020 */ unsigned __int64 AffinityMask;
  /* 0x0028 */ long Priority;
  /* 0x002c */ long BasePriority;
} THREAD_BASIC_INFORMATION, *PTHREAD_BASIC_INFORMATION; /* size: 0x0030 */

typedef struct _NT_TIB
{
  /* 0x0000 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0008 */ void* StackBase;
  /* 0x0010 */ void* StackLimit;
  /* 0x0018 */ void* SubSystemTib;
  union
  {
    /* 0x0020 */ void* FiberData;
    /* 0x0020 */ unsigned long Version;
  }; /* size: 0x0008 */
  /* 0x0028 */ void* ArbitraryUserPointer;
  /* 0x0030 */ struct _NT_TIB* Self;
} NT_TIB, *PNT_TIB; /* size: 0x0038 */

typedef struct _GDI_TEB_BATCH
{
  /* 0x0000 */ unsigned long Offset;
  /* 0x0004 */ long Padding_663;
  /* 0x0008 */ unsigned __int64 HDC;
  /* 0x0010 */ unsigned long Buffer[310];
} GDI_TEB_BATCH, *PGDI_TEB_BATCH; /* size: 0x04e8 */

typedef struct _PROCESSOR_NUMBER
{
  /* 0x0000 */ unsigned short Group;
  /* 0x0002 */ unsigned char Number;
  /* 0x0003 */ unsigned char Reserved;
} PROCESSOR_NUMBER, *PPROCESSOR_NUMBER; /* size: 0x0004 */

typedef struct _TEB
{
  /* 0x0000 */ struct _NT_TIB NtTib;
  /* 0x0038 */ void* EnvironmentPointer;
  /* 0x0040 */ struct _CLIENT_ID ClientId;
  /* 0x0050 */ void* ActiveRpcHandle;
  /* 0x0058 */ void* ThreadLocalStoragePointer;
  /* 0x0060 */ struct _PEB* ProcessEnvironmentBlock;
  /* 0x0068 */ unsigned long LastErrorValue;
  /* 0x006c */ unsigned long CountOfOwnedCriticalSections;
  /* 0x0070 */ void* CsrClientThread;
  /* 0x0078 */ void* Win32ThreadInfo;
  /* 0x0080 */ unsigned long User32Reserved[26];
  /* 0x00e8 */ unsigned long UserReserved[5];
  /* 0x00fc */ long Padding_664;
  /* 0x0100 */ void* WOW32Reserved;
  /* 0x0108 */ unsigned long CurrentLocale;
  /* 0x010c */ unsigned long FpSoftwareStatusRegister;
  /* 0x0110 */ void* SystemReserved1[54];
  /* 0x02c0 */ long ExceptionCode;
  /* 0x02c4 */ long Padding_665;
  /* 0x02c8 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x02d0 */ unsigned char SpareBytes[24];
  /* 0x02e8 */ unsigned long TxFsContext;
  /* 0x02ec */ long Padding_666;
  /* 0x02f0 */ struct _GDI_TEB_BATCH GdiTebBatch;
  /* 0x07d8 */ struct _CLIENT_ID RealClientId;
  /* 0x07e8 */ void* GdiCachedProcessHandle;
  /* 0x07f0 */ unsigned long GdiClientPID;
  /* 0x07f4 */ unsigned long GdiClientTID;
  /* 0x07f8 */ void* GdiThreadLocalInfo;
  /* 0x0800 */ unsigned __int64 Win32ClientInfo[62];
  /* 0x09f0 */ void* glDispatchTable[233];
  /* 0x1138 */ unsigned __int64 glReserved1[29];
  /* 0x1220 */ void* glReserved2;
  /* 0x1228 */ void* glSectionInfo;
  /* 0x1230 */ void* glSection;
  /* 0x1238 */ void* glTable;
  /* 0x1240 */ void* glCurrentRC;
  /* 0x1248 */ void* glContext;
  /* 0x1250 */ unsigned long LastStatusValue;
  /* 0x1254 */ long Padding_667;
  /* 0x1258 */ struct _UNICODE_STRING StaticUnicodeString;
  /* 0x1268 */ wchar_t StaticUnicodeBuffer[261];
  /* 0x1472 */ char Padding_668[6];
  /* 0x1478 */ void* DeallocationStack;
  /* 0x1480 */ void* TlsSlots[64];
  /* 0x1680 */ struct _LIST_ENTRY TlsLinks;
  /* 0x1690 */ void* Vdm;
  /* 0x1698 */ void* ReservedForNtRpc;
  /* 0x16a0 */ void* DbgSsReserved[2];
  /* 0x16b0 */ unsigned long HardErrorMode;
  /* 0x16b4 */ long Padding_669;
  /* 0x16b8 */ void* Instrumentation[11];
  /* 0x1710 */ struct _GUID ActivityId;
  /* 0x1720 */ void* SubProcessTag;
  /* 0x1728 */ void* PerflibData;
  /* 0x1730 */ void* EtwTraceData;
  /* 0x1738 */ void* WinSockData;
  /* 0x1740 */ unsigned long GdiBatchCount;
  union
  {
    /* 0x1744 */ struct _PROCESSOR_NUMBER CurrentIdealProcessor;
    /* 0x1744 */ unsigned long IdealProcessorValue;
    struct
    {
      /* 0x1744 */ unsigned char ReservedPad0;
      /* 0x1745 */ unsigned char ReservedPad1;
      /* 0x1746 */ unsigned char ReservedPad2;
      /* 0x1747 */ unsigned char IdealProcessor;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x1748 */ unsigned long GuaranteedStackBytes;
  /* 0x174c */ long Padding_670;
  /* 0x1750 */ void* ReservedForPerf;
  /* 0x1758 */ void* ReservedForOle;
  /* 0x1760 */ unsigned long WaitingOnLoaderLock;
  /* 0x1764 */ long Padding_671;
  /* 0x1768 */ void* SavedPriorityState;
  /* 0x1770 */ unsigned __int64 ReservedForCodeCoverage;
  /* 0x1778 */ void* ThreadPoolData;
  /* 0x1780 */ void** TlsExpansionSlots;
  /* 0x1788 */ void* DeallocationBStore;
  /* 0x1790 */ void* BStoreLimit;
  /* 0x1798 */ unsigned long MuiGeneration;
  /* 0x179c */ unsigned long IsImpersonating;
  /* 0x17a0 */ void* NlsCache;
  /* 0x17a8 */ void* pShimData;
  /* 0x17b0 */ unsigned short HeapVirtualAffinity;
  /* 0x17b2 */ unsigned short LowFragHeapDataSlot;
  /* 0x17b4 */ long Padding_672;
  /* 0x17b8 */ void* CurrentTransactionHandle;
  /* 0x17c0 */ struct _TEB_ACTIVE_FRAME* ActiveFrame;
  /* 0x17c8 */ void* FlsData;
  /* 0x17d0 */ void* PreferredLanguages;
  /* 0x17d8 */ void* UserPrefLanguages;
  /* 0x17e0 */ void* MergedPrefLanguages;
  /* 0x17e8 */ unsigned long MuiImpersonation;
  union
  {
    /* 0x17ec */ volatile unsigned short CrossTebFlags;
    /* 0x17ec */ unsigned short SpareCrossTebBits : 16; /* bit position: 0 */
  }; /* size: 0x0002 */
  union
  {
    /* 0x17ee */ unsigned short SameTebFlags;
    struct /* bitfield */
    {
      /* 0x17ee */ unsigned short SafeThunkCall : 1; /* bit position: 0 */
      /* 0x17ee */ unsigned short InDebugPrint : 1; /* bit position: 1 */
      /* 0x17ee */ unsigned short HasFiberData : 1; /* bit position: 2 */
      /* 0x17ee */ unsigned short SkipThreadAttach : 1; /* bit position: 3 */
      /* 0x17ee */ unsigned short WerInShipAssertCode : 1; /* bit position: 4 */
      /* 0x17ee */ unsigned short RanProcessInit : 1; /* bit position: 5 */
      /* 0x17ee */ unsigned short ClonedThread : 1; /* bit position: 6 */
      /* 0x17ee */ unsigned short SuppressDebugMsg : 1; /* bit position: 7 */
      /* 0x17ee */ unsigned short DisableUserStackWalk : 1; /* bit position: 8 */
      /* 0x17ee */ unsigned short RtlExceptionAttached : 1; /* bit position: 9 */
      /* 0x17ee */ unsigned short InitialThread : 1; /* bit position: 10 */
      /* 0x17ee */ unsigned short SessionAware : 1; /* bit position: 11 */
      /* 0x17ee */ unsigned short SpareSameTebBits : 4; /* bit position: 12 */
    }; /* bitfield */
  }; /* size: 0x0002 */
  /* 0x17f0 */ void* TxnScopeEnterCallback;
  /* 0x17f8 */ void* TxnScopeExitCallback;
  /* 0x1800 */ void* TxnScopeContext;
  /* 0x1808 */ unsigned long LockCount;
  /* 0x180c */ unsigned long SpareUlong0;
  /* 0x1810 */ void* ResourceRetValue;
  /* 0x1818 */ void* ReservedForWdf;
} TEB, *PTEB; /* size: 0x1820 */

typedef struct _FILE_REFERENCE_RANGE
{
  /* 0x0000 */ unsigned __int64 StartingFileReferenceNumber;
  /* 0x0008 */ unsigned __int64 EndingFileReferenceNumber;
} FILE_REFERENCE_RANGE, *PFILE_REFERENCE_RANGE; /* size: 0x0010 */

struct tagMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fMask;
  /* 0x0008 */ unsigned int fType;
  /* 0x000c */ unsigned int fState;
  /* 0x0010 */ unsigned int wID;
  /* 0x0014 */ long Padding_673;
  /* 0x0018 */ struct HMENU__* hSubMenu;
  /* 0x0020 */ struct HBITMAP__* hbmpChecked;
  /* 0x0028 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0030 */ unsigned __int64 dwItemData;
  /* 0x0038 */ wchar_t* dwTypeData;
  /* 0x0040 */ unsigned int cch;
  /* 0x0044 */ long Padding_674;
  /* 0x0048 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x0050 */

struct WireThatPart1
{
  /* 0x0000 */ unsigned long flags;
  /* 0x0004 */ unsigned long unique;
}; /* size: 0x0008 */

typedef struct _PEB
{
  /* 0x0000 */ unsigned char InheritedAddressSpace;
  /* 0x0001 */ unsigned char ReadImageFileExecOptions;
  /* 0x0002 */ unsigned char BeingDebugged;
  union
  {
    /* 0x0003 */ unsigned char BitField;
    struct /* bitfield */
    {
      /* 0x0003 */ unsigned char ImageUsesLargePages : 1; /* bit position: 0 */
      /* 0x0003 */ unsigned char IsProtectedProcess : 1; /* bit position: 1 */
      /* 0x0003 */ unsigned char IsLegacyProcess : 1; /* bit position: 2 */
      /* 0x0003 */ unsigned char IsImageDynamicallyRelocated : 1; /* bit position: 3 */
      /* 0x0003 */ unsigned char SkipPatchingUser32Forwarders : 1; /* bit position: 4 */
      /* 0x0003 */ unsigned char IsPackagedProcess : 1; /* bit position: 5 */
      /* 0x0003 */ unsigned char IsAppContainer : 1; /* bit position: 6 */
      /* 0x0003 */ unsigned char SpareBits : 1; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0004 */ long Padding_675;
  /* 0x0008 */ void* Mutant;
  /* 0x0010 */ void* ImageBaseAddress;
  /* 0x0018 */ struct _PEB_LDR_DATA* Ldr;
  /* 0x0020 */ struct _RTL_USER_PROCESS_PARAMETERS* ProcessParameters;
  /* 0x0028 */ void* SubSystemData;
  /* 0x0030 */ void* ProcessHeap;
  /* 0x0038 */ struct _RTL_CRITICAL_SECTION* FastPebLock;
  /* 0x0040 */ void* AtlThunkSListPtr;
  /* 0x0048 */ void* IFEOKey;
  union
  {
    /* 0x0050 */ unsigned long CrossProcessFlags;
    struct /* bitfield */
    {
      /* 0x0050 */ unsigned long ProcessInJob : 1; /* bit position: 0 */
      /* 0x0050 */ unsigned long ProcessInitializing : 1; /* bit position: 1 */
      /* 0x0050 */ unsigned long ProcessUsingVEH : 1; /* bit position: 2 */
      /* 0x0050 */ unsigned long ProcessUsingVCH : 1; /* bit position: 3 */
      /* 0x0050 */ unsigned long ProcessUsingFTH : 1; /* bit position: 4 */
      /* 0x0050 */ unsigned long ReservedBits0 : 27; /* bit position: 5 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0054 */ long Padding_676;
  union
  {
    /* 0x0058 */ void* KernelCallbackTable;
    /* 0x0058 */ void* UserSharedInfoPtr;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long SystemReserved[1];
  /* 0x0064 */ unsigned long AtlThunkSListPtr32;
  /* 0x0068 */ void* ApiSetMap;
  /* 0x0070 */ unsigned long TlsExpansionCounter;
  /* 0x0074 */ long Padding_677;
  /* 0x0078 */ void* TlsBitmap;
  /* 0x0080 */ unsigned long TlsBitmapBits[2];
  /* 0x0088 */ void* ReadOnlySharedMemoryBase;
  /* 0x0090 */ void* HotpatchInformation;
  /* 0x0098 */ void** ReadOnlyStaticServerData;
  /* 0x00a0 */ void* AnsiCodePageData;
  /* 0x00a8 */ void* OemCodePageData;
  /* 0x00b0 */ void* UnicodeCaseTableData;
  /* 0x00b8 */ unsigned long NumberOfProcessors;
  /* 0x00bc */ unsigned long NtGlobalFlag;
  /* 0x00c0 */ union _LARGE_INTEGER CriticalSectionTimeout;
  /* 0x00c8 */ unsigned __int64 HeapSegmentReserve;
  /* 0x00d0 */ unsigned __int64 HeapSegmentCommit;
  /* 0x00d8 */ unsigned __int64 HeapDeCommitTotalFreeThreshold;
  /* 0x00e0 */ unsigned __int64 HeapDeCommitFreeBlockThreshold;
  /* 0x00e8 */ unsigned long NumberOfHeaps;
  /* 0x00ec */ unsigned long MaximumNumberOfHeaps;
  /* 0x00f0 */ void** ProcessHeaps;
  /* 0x00f8 */ void* GdiSharedHandleTable;
  /* 0x0100 */ void* ProcessStarterHelper;
  /* 0x0108 */ unsigned long GdiDCAttributeList;
  /* 0x010c */ long Padding_678;
  /* 0x0110 */ struct _RTL_CRITICAL_SECTION* LoaderLock;
  /* 0x0118 */ unsigned long OSMajorVersion;
  /* 0x011c */ unsigned long OSMinorVersion;
  /* 0x0120 */ unsigned short OSBuildNumber;
  /* 0x0122 */ unsigned short OSCSDVersion;
  /* 0x0124 */ unsigned long OSPlatformId;
  /* 0x0128 */ unsigned long ImageSubsystem;
  /* 0x012c */ unsigned long ImageSubsystemMajorVersion;
  /* 0x0130 */ unsigned long ImageSubsystemMinorVersion;
  /* 0x0134 */ long Padding_679;
  /* 0x0138 */ unsigned __int64 ActiveProcessAffinityMask;
  /* 0x0140 */ unsigned long GdiHandleBuffer[60];
  /* 0x0230 */ void* PostProcessInitRoutine /* function */;
  /* 0x0238 */ void* TlsExpansionBitmap;
  /* 0x0240 */ unsigned long TlsExpansionBitmapBits[32];
  /* 0x02c0 */ unsigned long SessionId;
  /* 0x02c4 */ long Padding_680;
  /* 0x02c8 */ union _ULARGE_INTEGER AppCompatFlags;
  /* 0x02d0 */ union _ULARGE_INTEGER AppCompatFlagsUser;
  /* 0x02d8 */ void* pShimData;
  /* 0x02e0 */ void* AppCompatInfo;
  /* 0x02e8 */ struct _UNICODE_STRING CSDVersion;
  /* 0x02f8 */ const struct _ACTIVATION_CONTEXT_DATA* ActivationContextData;
  /* 0x0300 */ struct _ASSEMBLY_STORAGE_MAP* ProcessAssemblyStorageMap;
  /* 0x0308 */ const struct _ACTIVATION_CONTEXT_DATA* SystemDefaultActivationContextData;
  /* 0x0310 */ struct _ASSEMBLY_STORAGE_MAP* SystemAssemblyStorageMap;
  /* 0x0318 */ unsigned __int64 MinimumStackCommit;
  /* 0x0320 */ struct _FLS_CALLBACK_INFO* FlsCallback;
  /* 0x0328 */ struct _LIST_ENTRY FlsListHead;
  /* 0x0338 */ void* FlsBitmap;
  /* 0x0340 */ unsigned long FlsBitmapBits[4];
  /* 0x0350 */ unsigned long FlsHighIndex;
  /* 0x0354 */ long Padding_681;
  /* 0x0358 */ void* WerRegistrationData;
  /* 0x0360 */ void* WerShipAssertPtr;
  /* 0x0368 */ void* pUnused;
  /* 0x0370 */ void* pImageHeaderHash;
  union
  {
    /* 0x0378 */ unsigned long TracingFlags;
    struct /* bitfield */
    {
      /* 0x0378 */ unsigned long HeapTracingEnabled : 1; /* bit position: 0 */
      /* 0x0378 */ unsigned long CritSecTracingEnabled : 1; /* bit position: 1 */
      /* 0x0378 */ unsigned long LibLoaderTracingEnabled : 1; /* bit position: 2 */
      /* 0x0378 */ unsigned long SpareTracingBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x037c */ long Padding_682;
  /* 0x0380 */ unsigned __int64 CsrServerReadOnlySharedMemoryBase;
} PEB, *PPEB; /* size: 0x0388 */

class CWorldSecurityDescriptor
{
  /* 0x0000 */ struct _SECURITY_DESCRIPTOR _sd;
  /* 0x0028 */ unsigned __int64 _acl[13];
}; /* size: 0x0090 */

struct tagCustomPrivScmInfo
{
  /* 0x0000 */ long Apartment;
  /* 0x0004 */ long Padding_683;
  /* 0x0008 */ wchar_t* pwszWinstaDesktop;
  /* 0x0010 */ unsigned __int64 ProcessSignature;
  /* 0x0018 */ wchar_t* pEnvBlock;
  /* 0x0020 */ unsigned long EnvBlockLength;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

class CBasedVectBitsPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _INVERTED_FUNCTION_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionTable;
    /* 0x0000 */ struct _DYNAMIC_FUNCTION_TABLE* DynamicTable;
  }; /* size: 0x0008 */
  /* 0x0008 */ void* ImageBase;
  /* 0x0010 */ unsigned long SizeOfImage;
  /* 0x0014 */ unsigned long SizeOfTable;
} INVERTED_FUNCTION_TABLE_ENTRY, *PINVERTED_FUNCTION_TABLE_ENTRY; /* size: 0x0018 */

struct ICreateTypeLib
{
}; /* size: 0x0008 */

typedef struct _PEB_LDR_DATA
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char Initialized;
  /* 0x0005 */ char Padding_684[3];
  /* 0x0008 */ void* SsHandle;
  /* 0x0010 */ struct _LIST_ENTRY InLoadOrderModuleList;
  /* 0x0020 */ struct _LIST_ENTRY InMemoryOrderModuleList;
  /* 0x0030 */ struct _LIST_ENTRY InInitializationOrderModuleList;
  /* 0x0040 */ void* EntryInProgress;
  /* 0x0048 */ unsigned char ShutdownInProgress;
  /* 0x0049 */ char Padding_685[7];
  /* 0x0050 */ void* ShutdownThreadId;
} PEB_LDR_DATA, *PPEB_LDR_DATA; /* size: 0x0058 */

typedef struct _CURDIR
{
  /* 0x0000 */ struct _UNICODE_STRING DosPath;
  /* 0x0010 */ void* Handle;
} CURDIR, *PCURDIR; /* size: 0x0018 */

typedef struct _STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_686;
  /* 0x0008 */ char* Buffer;
} STRING, *PSTRING; /* size: 0x0010 */

typedef struct _RTL_DRIVE_LETTER_CURDIR
{
  /* 0x0000 */ unsigned short Flags;
  /* 0x0002 */ unsigned short Length;
  /* 0x0004 */ unsigned long TimeStamp;
  /* 0x0008 */ struct _STRING DosPath;
} RTL_DRIVE_LETTER_CURDIR, *PRTL_DRIVE_LETTER_CURDIR; /* size: 0x0018 */

typedef struct _RTL_USER_PROCESS_PARAMETERS
{
  /* 0x0000 */ unsigned long MaximumLength;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long DebugFlags;
  /* 0x0010 */ void* ConsoleHandle;
  /* 0x0018 */ unsigned long ConsoleFlags;
  /* 0x001c */ long Padding_687;
  /* 0x0020 */ void* StandardInput;
  /* 0x0028 */ void* StandardOutput;
  /* 0x0030 */ void* StandardError;
  /* 0x0038 */ struct _CURDIR CurrentDirectory;
  /* 0x0050 */ struct _UNICODE_STRING DllPath;
  /* 0x0060 */ struct _UNICODE_STRING ImagePathName;
  /* 0x0070 */ struct _UNICODE_STRING CommandLine;
  /* 0x0080 */ void* Environment;
  /* 0x0088 */ unsigned long StartingX;
  /* 0x008c */ unsigned long StartingY;
  /* 0x0090 */ unsigned long CountX;
  /* 0x0094 */ unsigned long CountY;
  /* 0x0098 */ unsigned long CountCharsX;
  /* 0x009c */ unsigned long CountCharsY;
  /* 0x00a0 */ unsigned long FillAttribute;
  /* 0x00a4 */ unsigned long WindowFlags;
  /* 0x00a8 */ unsigned long ShowWindowFlags;
  /* 0x00ac */ long Padding_688;
  /* 0x00b0 */ struct _UNICODE_STRING WindowTitle;
  /* 0x00c0 */ struct _UNICODE_STRING DesktopInfo;
  /* 0x00d0 */ struct _UNICODE_STRING ShellInfo;
  /* 0x00e0 */ struct _UNICODE_STRING RuntimeData;
  /* 0x00f0 */ struct _RTL_DRIVE_LETTER_CURDIR CurrentDirectores[32];
  /* 0x03f0 */ unsigned __int64 EnvironmentSize;
  /* 0x03f8 */ unsigned __int64 EnvironmentVersion;
  /* 0x0400 */ void* PackageDependencyData;
  /* 0x0408 */ unsigned long ProcessGroupId;
  /* 0x040c */ long __PADDING__[1];
} RTL_USER_PROCESS_PARAMETERS, *PRTL_USER_PROCESS_PARAMETERS; /* size: 0x0410 */

class CMallocBased
{
}; /* size: 0x0001 */

class SafeIUnknown
{
  /* 0x0000 */ struct IUnknown* _p;
}; /* size: 0x0008 */

struct RECTS
{
  /* 0x0000 */ short left;
  /* 0x0002 */ short top;
  /* 0x0004 */ short right;
  /* 0x0006 */ short bottom;
}; /* size: 0x0008 */

struct WMFHEADER
{
  /* 0x0000 */ unsigned short hmf;
  /* 0x0002 */ struct RECTS rcBox;
  /* 0x000a */ unsigned short inch;
  /* 0x000c */ unsigned long ulReserved;
  /* 0x0010 */ unsigned short checksum;
}; /* size: 0x0012 */

class CBaseMoniker
{
  /* 0x0000 */ long Padding_689[4];
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ long Padding_690;
  /* 0x0018 */ class CMarshalImplPStream m_marshal;
}; /* size: 0x0028 */

class CBasedDlElementPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CDlElement
{
  /* 0x0000 */ class CBasedDlElementPtr _pdlePrev;
  /* 0x0008 */ class CBasedDlElementPtr _pdleNext;
}; /* size: 0x0010 */

typedef struct _CLUSTER_RANGE
{
  /* 0x0000 */ union _LARGE_INTEGER StartingCluster;
  /* 0x0008 */ union _LARGE_INTEGER ClusterCount;
} CLUSTER_RANGE, *PCLUSTER_RANGE; /* size: 0x0010 */

typedef struct _QUERY_FILE_LAYOUT_INPUT
{
  /* 0x0000 */ unsigned long NumberOfPairs;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ enum _QUERY_FILE_LAYOUT_FILTER_TYPE FilterType;
  /* 0x000c */ unsigned long Reserved;
  union
  {
    union
    {
      /* 0x0010 */ struct _CLUSTER_RANGE ClusterRanges[1];
      /* 0x0010 */ struct _FILE_REFERENCE_RANGE FileReferenceRanges[1];
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Filter;
} QUERY_FILE_LAYOUT_INPUT, *PQUERY_FILE_LAYOUT_INPUT; /* size: 0x0020 */

class CHashTable
{
  /* 0x0000 */ long Padding_691[2];
  /* 0x0008 */ class COleStaticMutexSem* _pExLock;
  /* 0x0010 */ class CRWLock* _pRWLock;
  /* 0x0018 */ struct SHashChain* _buckets;
  /* 0x0020 */ unsigned long _cCurEntries;
  /* 0x0024 */ unsigned long _cMaxEntries;
}; /* size: 0x0028 */

typedef struct _RTL_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_692;
  /* 0x0008 */ struct _RTL_CRITICAL_SECTION* CriticalSection;
  /* 0x0010 */ struct _LIST_ENTRY ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short CreatorBackTraceIndexHigh;
  /* 0x002e */ unsigned short SpareUSHORT;
} RTL_CRITICAL_SECTION_DEBUG, *PRTL_CRITICAL_SECTION_DEBUG; /* size: 0x0030 */

typedef struct _HOTPATCH_HOOK_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 TargetAddress;
  /* 0x0008 */ unsigned __int64 MappedAddress;
  /* 0x0010 */ unsigned long CodeOffset;
  /* 0x0014 */ unsigned long CodeSize;
  /* 0x0018 */ unsigned long OrigCodeOffset;
  /* 0x001c */ unsigned long ValidationOffset;
  /* 0x0020 */ unsigned long ValidationSize;
  /* 0x0024 */ long __PADDING__[1];
} HOTPATCH_HOOK_DESCRIPTOR, *PHOTPATCH_HOOK_DESCRIPTOR; /* size: 0x0028 */

typedef struct _CRYPT_DECRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned long cCertStore;
  /* 0x000c */ long Padding_693;
  /* 0x0010 */ void** rghCertStore;
} CRYPT_DECRYPT_MESSAGE_PARA, *PCRYPT_DECRYPT_MESSAGE_PARA; /* size: 0x0018 */

struct DRVCONFIGINFOEX
{
  /* 0x0000 */ unsigned long dwDCISize;
  /* 0x0004 */ const wchar_t* lpszDCISectionName;
  /* 0x000c */ const wchar_t* lpszDCIAliasName;
  /* 0x0014 */ unsigned long dnDevNode;
}; /* size: 0x0018 */

typedef struct _PROCESS_HANDLE_TABLE_ENTRY_INFO
{
  /* 0x0000 */ void* HandleValue;
  /* 0x0008 */ unsigned __int64 HandleCount;
  /* 0x0010 */ unsigned __int64 PointerCount;
  /* 0x0018 */ unsigned long GrantedAccess;
  /* 0x001c */ unsigned long ObjectTypeIndex;
  /* 0x0020 */ unsigned long HandleAttributes;
  /* 0x0024 */ unsigned long Reserved;
} PROCESS_HANDLE_TABLE_ENTRY_INFO, *PPROCESS_HANDLE_TABLE_ENTRY_INFO; /* size: 0x0028 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >::is_pointer<Windows::Rtl::IRtlBlobProvider *>
{
}; /* size: 0x0001 */

struct tagSOLE_AUTHENTICATION_INFO
{
  /* 0x0000 */ unsigned long dwAuthnSvc;
  /* 0x0004 */ unsigned long dwAuthzSvc;
  /* 0x0008 */ void* pAuthInfo;
}; /* size: 0x0010 */

typedef struct _KEY_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long NameLength;
  /* 0x0004 */ wchar_t Name[1];
  /* 0x0006 */ char __PADDING__[2];
} KEY_NAME_INFORMATION, *PKEY_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _UUID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_694;
  /* 0x0008 */ struct _GUID* Uuid[1];
} UUID_VECTOR, *PUUID_VECTOR; /* size: 0x0010 */

struct _ASSEMBLY_STORAGE_MAP;

struct NTFS_FILE_RECORD_OUTPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
  /* 0x0008 */ unsigned long FileRecordLength;
  /* 0x000c */ unsigned char FileRecordBuffer[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

class MAP_KEY_GUID
{
  /* 0x0000 */ struct _GUID guid;
}; /* size: 0x0010 */

class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_695[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_696;
  /* 0x0030 */ struct TYPEINFOVTBL* m_r;
}; /* size: 0x0038 */

struct IMAGE_LOAD_CONFIG_DIRECTORY32
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long GlobalFlagsClear;
  /* 0x0010 */ unsigned long GlobalFlagsSet;
  /* 0x0014 */ unsigned long CriticalSectionDefaultTimeout;
  /* 0x0018 */ unsigned long DeCommitFreeBlockThreshold;
  /* 0x001c */ unsigned long DeCommitTotalFreeThreshold;
  /* 0x0020 */ unsigned long LockPrefixTable;
  /* 0x0024 */ unsigned long MaximumAllocationSize;
  /* 0x0028 */ unsigned long VirtualMemoryThreshold;
  /* 0x002c */ unsigned long ProcessHeapFlags;
  /* 0x0030 */ unsigned long ProcessAffinityMask;
  /* 0x0034 */ unsigned short CSDVersion;
  /* 0x0036 */ unsigned short Reserved1;
  /* 0x0038 */ unsigned long EditList;
  /* 0x003c */ unsigned long SecurityCookie;
  /* 0x0040 */ unsigned long SEHandlerTable;
  /* 0x0044 */ unsigned long SEHandlerCount;
}; /* size: 0x0048 */

struct _FLS_CALLBACK_INFO;

typedef struct _PROV_ENUMALGS
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwBitLen;
  /* 0x0008 */ unsigned long dwNameLen;
  /* 0x000c */ char szName[20];
} PROV_ENUMALGS, *PPROV_ENUMALGS; /* size: 0x0020 */

class Windows::Auto<_LUTF8_STRING>
{
}; /* size: 0x0018 */

class CBlockPreHeader
{
  /* 0x0000 */ unsigned __int64 _ulSize;
  /* 0x0008 */ int _fFree;
}; /* size: 0x0010 */

class CBasedMSFPagePtrPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct IForegroundTransfer
{
}; /* size: 0x0008 */

typedef struct _SHNAMEMAPPINGW
{
  /* 0x0000 */ wchar_t* pszOldPath;
  /* 0x0008 */ wchar_t* pszNewPath;
  /* 0x0010 */ int cchOldPath;
  /* 0x0014 */ int cchNewPath;
} SHNAMEMAPPINGW, *PSHNAMEMAPPINGW; /* size: 0x0018 */

struct IComProcessInfo
{
}; /* size: 0x0008 */

class CReadWithSourceAttributesMarshalingStreamOnBuffer
{
  /* 0x0000 */ long Padding_697[12];
  /* 0x0030 */ unsigned __int64 _cAttributesProvided;
  /* 0x0038 */ const struct MarshalingContextAttributeValue* _pAttributesProvided;
}; /* size: 0x0040 */

typedef struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME
{
  /* 0x0000 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME* Previous;
  /* 0x0008 */ struct _ACTIVATION_CONTEXT* ActivationContext;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ long __PADDING__[1];
} RTL_ACTIVATION_CONTEXT_STACK_FRAME, *PRTL_ACTIVATION_CONTEXT_STACK_FRAME; /* size: 0x0018 */

struct CVectBits
{
  /* 0x0000 */ unsigned short full : 1; /* bit position: 0 */
  /* 0x0002 */ unsigned short firstfree;
}; /* size: 0x0004 */

class ComPsClassFactory
{
  /* 0x0000 */ long Padding_698[4];
  /* 0x0010 */ long m_crefs;
  /* 0x0014 */ long Padding_699;
  /* 0x0018 */ struct IPSFactoryBuffer* m_pDelegatee;
  /* 0x0020 */ const struct tagProxyFileInfo** m_pProxyFileList;
}; /* size: 0x0028 */

struct tagActivationContextInfoData
{
  /* 0x0000 */ int clientOK;
  /* 0x0004 */ int bReserved1;
  /* 0x0008 */ unsigned long dwReserved1;
  /* 0x000c */ unsigned long dwReserved2;
  /* 0x0010 */ struct tagMInterfacePointer* pIFDClientCtx;
  /* 0x0018 */ struct tagMInterfacePointer* pIFDPrototypeCtx;
}; /* size: 0x0020 */

class ContextInfo
{
  /* 0x0000 */ long Padding_700[10];
  /* 0x0028 */ struct tagActivationContextInfoData _contextInfoData;
  /* 0x0048 */ struct _GUID _ctxOverride;
  /* 0x0058 */ class CObjectContext* _pClientCtx;
  /* 0x0060 */ class CObjectContext* _pPrototypeCtx;
  /* 0x0068 */ int _toReleaseIFD;
}; /* size: 0x0070 */

typedef struct _heapinfo
{
  /* 0x0000 */ int* _pentry;
  /* 0x0008 */ unsigned __int64 _size;
  /* 0x0010 */ int _useflag;
  /* 0x0014 */ long __PADDING__[1];
} heapinfo, *Pheapinfo; /* size: 0x0018 */

struct IInternetProtocol
{
}; /* size: 0x0008 */

struct _ACTIVATION_CONTEXT;

class CBaseMarshalingStreamOnBuffer
{
  /* 0x0000 */ long Padding_701[4];
  /* 0x0010 */ unsigned char* const _pBuffer;
  /* 0x0018 */ const unsigned __int64 _cbBufferMax;
  /* 0x0020 */ unsigned __int64 _cbBuffer;
  /* 0x0028 */ unsigned char* _pPosition;
}; /* size: 0x0030 */

class CBasedPerContextPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct tagOFN_NT4A
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_702;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const char* lpstrFilter;
  /* 0x0020 */ char* lpstrCustomFilter;
  /* 0x0028 */ unsigned long nMaxCustFilter;
  /* 0x002c */ unsigned long nFilterIndex;
  /* 0x0030 */ char* lpstrFile;
  /* 0x0038 */ unsigned long nMaxFile;
  /* 0x003c */ long Padding_703;
  /* 0x0040 */ char* lpstrFileTitle;
  /* 0x0048 */ unsigned long nMaxFileTitle;
  /* 0x004c */ long Padding_704;
  /* 0x0050 */ const char* lpstrInitialDir;
  /* 0x0058 */ const char* lpstrTitle;
  /* 0x0060 */ unsigned long Flags;
  /* 0x0064 */ unsigned short nFileOffset;
  /* 0x0066 */ unsigned short nFileExtension;
  /* 0x0068 */ const char* lpstrDefExt;
  /* 0x0070 */ __int64 lCustData;
  /* 0x0078 */ void* lpfnHook /* function */;
  /* 0x0080 */ const char* lpTemplateName;
}; /* size: 0x0088 */

typedef struct _DISPATCHER_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ControlPc;
  /* 0x0008 */ unsigned __int64 ImageBase;
  /* 0x0010 */ struct _IMAGE_RUNTIME_FUNCTION_ENTRY* FunctionEntry;
  /* 0x0018 */ unsigned __int64 EstablisherFrame;
  /* 0x0020 */ unsigned __int64 TargetIp;
  /* 0x0028 */ struct _CONTEXT* ContextRecord;
  /* 0x0030 */ void* LanguageHandler /* function */;
  /* 0x0038 */ void* HandlerData;
  /* 0x0040 */ struct _UNWIND_HISTORY_TABLE* HistoryTable;
  /* 0x0048 */ unsigned long ScopeIndex;
  /* 0x004c */ unsigned long Fill0;
} DISPATCHER_CONTEXT, *PDISPATCHER_CONTEXT; /* size: 0x0050 */

class CDfName
{
  /* 0x0000 */ unsigned char _ab[64];
  /* 0x0040 */ unsigned short _cb;
}; /* size: 0x0042 */

class CBasedRevertablePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class PRevertable
{
  /* 0x0000 */ unsigned long _sig;
  /* 0x0004 */ unsigned long _luid;
  /* 0x0008 */ unsigned long _df;
  /* 0x000c */ class CDfName _dfn;
  /* 0x004e */ char Padding_705[2];
  /* 0x0050 */ class CBasedRevertablePtr _prvNext;
}; /* size: 0x0058 */

class CTransactedTimeEntry
{
  /* 0x0000 */ struct _FILETIME _tt[3];
}; /* size: 0x0018 */

typedef union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003
{
  union
  {
    /* 0x0000 */ struct _userHMETAFILEPICT* hMetaFilePict;
    /* 0x0000 */ struct _userHENHMETAFILE* hHEnhMetaFile;
    /* 0x0000 */ struct _GDI_OBJECT* hGdiHandle;
    /* 0x0000 */ struct _userHGLOBAL* hGlobal;
    /* 0x0000 */ wchar_t* lpszFileName;
    /* 0x0000 */ struct _BYTE_BLOB* pstm;
    /* 0x0000 */ struct _BYTE_BLOB* pstg;
  }; /* size: 0x0008 */
} userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003, *PuserSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003; /* size: 0x0008 */

typedef struct _OCSP_BASIC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwResponderIdChoice;
  union
  {
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByNameResponderId;
    /* 0x0008 */ struct _CRYPTOAPI_BLOB ByKeyResponderId;
  }; /* size: 0x0010 */
  /* 0x0018 */ struct _FILETIME ProducedAt;
  /* 0x0020 */ unsigned long cResponseEntry;
  /* 0x0024 */ long Padding_706;
  /* 0x0028 */ struct _OCSP_BASIC_RESPONSE_ENTRY* rgResponseEntry;
  /* 0x0030 */ unsigned long cExtension;
  /* 0x0034 */ long Padding_707;
  /* 0x0038 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_INFO, *POCSP_BASIC_RESPONSE_INFO; /* size: 0x0040 */

typedef struct _MONIKEREXTENT
{
  /* 0x0000 */ unsigned long cbExtentBytes;
  /* 0x0004 */ unsigned short usKeyValue;
  /* 0x0006 */ unsigned char achExtentBytes[1];
  /* 0x0007 */ char __PADDING__[1];
} MONIKEREXTENT, *PMONIKEREXTENT; /* size: 0x0008 */

struct tagMULTI_QI
{
  /* 0x0000 */ const struct _GUID* pIID;
  /* 0x0008 */ struct IUnknown* pItf;
  /* 0x0010 */ HRESULT hr;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct tagServerInformation
{
  /* 0x0000 */ unsigned long dwServerPid;
  /* 0x0004 */ unsigned long dwServerTid;
  /* 0x0008 */ unsigned __int64 ui64ServerAddress;
}; /* size: 0x0010 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >
{
}; /* size: 0x0008 */

typedef struct __midl_frag311_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag311_t, *P_midl_frag311_t; /* size: 0x0010 */

typedef struct _JIT_DEBUG_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwProcessorArchitecture;
  /* 0x0008 */ unsigned long dwThreadID;
  /* 0x000c */ unsigned long dwReserved0;
  /* 0x0010 */ unsigned __int64 lpExceptionAddress;
  /* 0x0018 */ unsigned __int64 lpExceptionRecord;
  /* 0x0020 */ unsigned __int64 lpContextRecord;
} JIT_DEBUG_INFO, *PJIT_DEBUG_INFO; /* size: 0x0028 */

typedef struct _EXCEPTION_RECORD32
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned long ExceptionRecord;
  /* 0x000c */ unsigned long ExceptionAddress;
  /* 0x0010 */ unsigned long NumberParameters;
  /* 0x0014 */ unsigned long ExceptionInformation[15];
} EXCEPTION_RECORD32, *PEXCEPTION_RECORD32; /* size: 0x0050 */

typedef struct _DRIVER_INFO_2W
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_708;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ wchar_t* pEnvironment;
  /* 0x0018 */ wchar_t* pDriverPath;
  /* 0x0020 */ wchar_t* pDataFile;
  /* 0x0028 */ wchar_t* pConfigFile;
} DRIVER_INFO_2W, *PDRIVER_INFO_2W; /* size: 0x0030 */

typedef struct _UNIVERSAL_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
} UNIVERSAL_NAME_INFOA, *PUNIVERSAL_NAME_INFOA; /* size: 0x0008 */

typedef struct _RTL_UMS_COMPLETION_LIST
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY* ThreadListHead;
  /* 0x0008 */ void* CompletionEvent;
  /* 0x0010 */ unsigned long CompletionFlags;
  /* 0x0014 */ long Padding_709;
  /* 0x0018 */ struct _SINGLE_LIST_ENTRY InternalListHead;
} RTL_UMS_COMPLETION_LIST, *PRTL_UMS_COMPLETION_LIST; /* size: 0x0020 */

typedef struct _CRYPT_TIME_STAMP_REQUEST_INFO
{
  /* 0x0000 */ char* pszTimeStampAlgorithm;
  /* 0x0008 */ char* pszContentType;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Content;
  /* 0x0020 */ unsigned long cAttribute;
  /* 0x0024 */ long Padding_710;
  /* 0x0028 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CRYPT_TIME_STAMP_REQUEST_INFO, *PCRYPT_TIME_STAMP_REQUEST_INFO; /* size: 0x0030 */

class CRotHintTable
{
  /* 0x0000 */ unsigned char* _pbHintArray;
}; /* size: 0x0008 */

typedef struct _CRYPT_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgAndCertEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ void* pfnGetSignerCertificate /* function */;
  /* 0x0018 */ void* pvGetArg;
} CRYPT_VERIFY_MESSAGE_PARA, *PCRYPT_VERIFY_MESSAGE_PARA; /* size: 0x0020 */

struct PPM_WMI_PERF_STATE
{
  /* 0x0000 */ unsigned long Frequency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned char PercentFrequency;
  /* 0x0009 */ unsigned char IncreaseLevel;
  /* 0x000a */ unsigned char DecreaseLevel;
  /* 0x000b */ unsigned char Type;
  /* 0x000c */ unsigned long IncreaseTime;
  /* 0x0010 */ unsigned long DecreaseTime;
  /* 0x0014 */ long Padding_711;
  /* 0x0018 */ unsigned __int64 Control;
  /* 0x0020 */ unsigned __int64 Status;
  /* 0x0028 */ unsigned long HitCount;
  /* 0x002c */ unsigned long Reserved1;
  /* 0x0030 */ unsigned __int64 Reserved2;
  /* 0x0038 */ unsigned __int64 Reserved3;
}; /* size: 0x0040 */

typedef struct _CRYPT_ENROLLMENT_NAME_VALUE_PAIR
{
  /* 0x0000 */ wchar_t* pwszName;
  /* 0x0008 */ wchar_t* pwszValue;
} CRYPT_ENROLLMENT_NAME_VALUE_PAIR, *PCRYPT_ENROLLMENT_NAME_VALUE_PAIR; /* size: 0x0010 */

struct HCONV__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _FILE_ID_GLOBAL_TX_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ union _LARGE_INTEGER FileId;
  /* 0x0048 */ struct _GUID LockingTransactionId;
  /* 0x0058 */ unsigned long TxInfoFlags;
  /* 0x005c */ wchar_t FileName[1];
  /* 0x005e */ char __PADDING__[2];
} FILE_ID_GLOBAL_TX_DIR_INFORMATION, *PFILE_ID_GLOBAL_TX_DIR_INFORMATION; /* size: 0x0060 */

struct HGLRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CSimpStorageOpen
{
  /* 0x0000 */ long Padding_712[162];
  /* 0x0288 */ unsigned long _grfMode;
  /* 0x028c */ unsigned long _grfStateBits;
  /* 0x0290 */ wchar_t _awcsName[260];
}; /* size: 0x0498 */

struct IXMLHttpRequest
{
}; /* size: 0x0008 */

typedef struct _CSV_QUERY_FILE_REVISION
{
  /* 0x0000 */ __int64 FileId;
  /* 0x0008 */ __int64 FileRevision[3];
} CSV_QUERY_FILE_REVISION, *PCSV_QUERY_FILE_REVISION; /* size: 0x0020 */

class CClassCache::CDllFnPtrMoniker
{
  /* 0x0000 */ long Padding_713[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_714;
  /* 0x0010 */ class CClassCache::CDllClassEntry* _pDCE;
}; /* size: 0x0018 */

typedef struct _wfinddata64i32_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_715;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata64i32_t, *Pwfinddata64i32_t; /* size: 0x0230 */

struct CMapKeyToValue::CAssoc
{
  /* 0x0000 */ struct CMapKeyToValue::CAssoc* pNext;
  /* 0x0008 */ unsigned int nHashValue;
  /* 0x000c */ long Padding_716;
  /* 0x0010 */ union CMapKeyToValue::CKeyWrap key;
}; /* size: 0x0020 */

struct ICancelMethodCalls
{
}; /* size: 0x0008 */

struct CSimpStream
{
  /* 0x0000 */ long Padding_717[4];
  /* 0x0010 */ long _cReferences;
  /* 0x0014 */ long _ulSeekStart;
  /* 0x0018 */ unsigned long _ulSeekPos;
  /* 0x001c */ long Padding_718;
  /* 0x0020 */ struct CSimpStorage* _pstgParent;
  /* 0x0028 */ void* _hFile;
}; /* size: 0x0030 */

struct IGetCatalogObject
{
}; /* size: 0x0008 */

struct tagUSEROBJECTFLAGS
{
  /* 0x0000 */ int fInherit;
  /* 0x0004 */ int fReserved;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

typedef struct _CMSG_SIGNER_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_719;
  /* 0x0008 */ struct _CERT_INFO* pCertInfo;
  union
  {
    /* 0x0010 */ unsigned __int64 hCryptProv;
    /* 0x0010 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned long dwKeySpec;
  /* 0x001c */ long Padding_720;
  /* 0x0020 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0038 */ void* pvHashAuxInfo;
  /* 0x0040 */ unsigned long cAuthAttr;
  /* 0x0044 */ long Padding_721;
  /* 0x0048 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0050 */ unsigned long cUnauthAttr;
  /* 0x0054 */ long Padding_722;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
} CMSG_SIGNER_ENCODE_INFO, *PCMSG_SIGNER_ENCODE_INFO; /* size: 0x0060 */

typedef struct _ALPC_PORT_MESSAGE_ZONE_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ long __PADDING__[1];
} ALPC_PORT_MESSAGE_ZONE_INFORMATION, *PALPC_PORT_MESSAGE_ZONE_INFORMATION; /* size: 0x0010 */

class CSSMappedStream
{
  /* 0x0000 */ long Padding_723[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ long Padding_724;
  /* 0x0010 */ struct IStream* _pstm;
  /* 0x0018 */ unsigned char* _pbMappedStream;
  /* 0x0020 */ unsigned long _cbMappedStream;
  /* 0x0024 */ unsigned long _cbActualStreamSize;
  /* 0x0028 */ void* _powner;
  /* 0x0030 */ int _fDirty;
}; /* size: 0x0038 */

struct HENHMETAFILE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SCRUB_DATA_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long MaximumIos;
  /* 0x000c */ unsigned long Reserved[17];
  /* 0x0050 */ unsigned char ResumeContext[816];
} SCRUB_DATA_INPUT, *PSCRUB_DATA_INPUT; /* size: 0x0380 */

typedef struct _PROCESS_ACCESS_TOKEN
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ void* Thread;
} PROCESS_ACCESS_TOKEN, *PPROCESS_ACCESS_TOKEN; /* size: 0x0010 */

struct tagCBT_CREATEWNDW
{
  /* 0x0000 */ struct tagCREATESTRUCTW* lpcs;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0010 */

typedef struct _CMSG_RC4_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC4_AUX_INFO, *PCMSG_RC4_AUX_INFO; /* size: 0x0008 */

class CDWORDHashTable
{
}; /* size: 0x0028 */

typedef struct _MkInterfaceListEntry
{
  /* 0x0000 */ struct tagInterfaceData* pIFD;
  /* 0x0008 */ int fRegisteredByAppContainer;
  /* 0x000c */ long __PADDING__[1];
} MkInterfaceListEntry, *PMkInterfaceListEntry; /* size: 0x0010 */

typedef struct _MkInterfaceList
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_725;
  /* 0x0008 */ struct _MkInterfaceListEntry apIFDList[1];
} MkInterfaceList, *PMkInterfaceList; /* size: 0x0018 */

typedef struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION
{
  /* 0x0000 */ void* ReflectionProcessHandle;
  /* 0x0008 */ void* ReflectionThreadHandle;
  /* 0x0010 */ struct _CLIENT_ID ReflectionClientId;
} RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION, *PRTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION; /* size: 0x0020 */

struct tagOXID_INFO
{
  /* 0x0000 */ unsigned long dwTid;
  /* 0x0004 */ unsigned long dwPid;
  /* 0x0008 */ unsigned long dwAuthnHint;
  /* 0x000c */ struct tagCOMVERSION version;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long Padding_726;
  /* 0x0028 */ struct tagDUALSTRINGARRAY* psa;
}; /* size: 0x0030 */

typedef struct _FILE_FS_DRIVER_PATH_INFORMATION
{
  /* 0x0000 */ unsigned char DriverInPath;
  /* 0x0001 */ char Padding_727[3];
  /* 0x0004 */ unsigned long DriverNameLength;
  /* 0x0008 */ wchar_t DriverName[1];
  /* 0x000a */ char __PADDING__[2];
} FILE_FS_DRIVER_PATH_INFORMATION, *PFILE_FS_DRIVER_PATH_INFORMATION; /* size: 0x000c */

struct ITypeLib
{
}; /* size: 0x0008 */

typedef union _userHENHMETAFILE::__MIDL_IWinTypes_0006
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHENHMETAFILE::__MIDL_IWinTypes_0006, *PuserHENHMETAFILE::__MIDL_IWinTypes_0006; /* size: 0x0008 */

typedef struct _userHENHMETAFILE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_728;
  /* 0x0008 */ union _userHENHMETAFILE::__MIDL_IWinTypes_0006 u;
} userHENHMETAFILE, *PuserHENHMETAFILE; /* size: 0x0010 */

typedef struct _RTL_RELATIVE_NAME_U
{
  /* 0x0000 */ struct _UNICODE_STRING RelativeName;
  /* 0x0010 */ void* ContainingDirectory;
  /* 0x0018 */ struct _RTLP_CURDIR_REF* CurDirRef;
} RTL_RELATIVE_NAME_U, *PRTL_RELATIVE_NAME_U; /* size: 0x0020 */

typedef struct _CRT_FLOAT
{
  /* 0x0000 */ float f;
} CRT_FLOAT, *PCRT_FLOAT; /* size: 0x0004 */

typedef struct _TXFS_ROLLFORWARD_REDO_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastVirtualClock;
  /* 0x0008 */ unsigned __int64 LastRedoLsn;
  /* 0x0010 */ unsigned __int64 HighestRecoveryLsn;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long __PADDING__[1];
} TXFS_ROLLFORWARD_REDO_INFORMATION, *PTXFS_ROLLFORWARD_REDO_INFORMATION; /* size: 0x0020 */

struct IXMLDOMDocumentFragment
{
}; /* size: 0x0008 */

typedef struct _TXFS_WRITE_BACKUP_INFORMATION
{
  /* 0x0000 */ unsigned char Buffer[1];
} TXFS_WRITE_BACKUP_INFORMATION, *PTXFS_WRITE_BACKUP_INFORMATION; /* size: 0x0001 */

typedef struct _MODEMDEVCAPS
{
  /* 0x0000 */ unsigned long dwActualSize;
  /* 0x0004 */ unsigned long dwRequiredSize;
  /* 0x0008 */ unsigned long dwDevSpecificOffset;
  /* 0x000c */ unsigned long dwDevSpecificSize;
  /* 0x0010 */ unsigned long dwModemProviderVersion;
  /* 0x0014 */ unsigned long dwModemManufacturerOffset;
  /* 0x0018 */ unsigned long dwModemManufacturerSize;
  /* 0x001c */ unsigned long dwModemModelOffset;
  /* 0x0020 */ unsigned long dwModemModelSize;
  /* 0x0024 */ unsigned long dwModemVersionOffset;
  /* 0x0028 */ unsigned long dwModemVersionSize;
  /* 0x002c */ unsigned long dwDialOptions;
  /* 0x0030 */ unsigned long dwCallSetupFailTimer;
  /* 0x0034 */ unsigned long dwInactivityTimeout;
  /* 0x0038 */ unsigned long dwSpeakerVolume;
  /* 0x003c */ unsigned long dwSpeakerMode;
  /* 0x0040 */ unsigned long dwModemOptions;
  /* 0x0044 */ unsigned long dwMaxDTERate;
  /* 0x0048 */ unsigned long dwMaxDCERate;
  /* 0x004c */ unsigned char abVariablePortion[1];
  /* 0x004d */ char __PADDING__[3];
} MODEMDEVCAPS, *PMODEMDEVCAPS; /* size: 0x0050 */

class CClassCache::CDllPathEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CDllPathEntry* _pNext;
      /* 0x0008 */ class CClassCache::CDllPathEntry* _pPrev;
      /* 0x0010 */ unsigned long _dwHash;
      /* 0x0014 */ long Padding_729;
      /* 0x0018 */ wchar_t* _psPath;
      /* 0x0020 */ unsigned long _dwSig;
      /* 0x0024 */ long Padding_730;
      /* 0x0028 */ void* _pfnDllCanUnload /* function */;
      /* 0x0030 */ unsigned long _dwFlags;
      /* 0x0034 */ int _fGCO_WAS_HERE;
      /* 0x0038 */ class CClassCache::CDllClassEntry* _p1stClass;
      /* 0x0040 */ class CClassCache::CWinRTDllClassEntry* _p1stWinRTClass;
      /* 0x0048 */ volatile unsigned long _cUsing;
      /* 0x004c */ long Padding_731;
      /* 0x0050 */ class CClassCache::CDllAptEntry* _pAptEntryFront;
      /* 0x0058 */ class CClassCache::CDllAptEntry* _pAptEntryBack;
      /* 0x0060 */ struct HINSTANCE__* _hDll32;
      /* 0x0068 */ unsigned long _dwExpireTime;
    }; /* size: 0x0060 */
    /* 0x0000 */ const unsigned long DLL_DELAY_UNLOAD_TIME;
    /* 0x0000 */ const char* DLL_GET_CLASS_OBJECT_EP /* zero-length array */;
    /* 0x0000 */ const char* DLL_GET_ACTIVATION_FACTORY_EP /* zero-length array */;
    /* 0x0000 */ const char* DLL_CAN_UNLOAD_EP /* zero-length array */;
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0068 */
  /* 0x0068 */ long Padding_732[2];
  /* 0x0070 */ void* _pfnGetClassObject /* function */;
  /* 0x0078 */ void* _pfnGetActivationFactory /* function */;
}; /* size: 0x0080 */

typedef struct _HEAP_BLOCK_EXTRA_INFORMATION
{
  /* 0x0000 */ unsigned char Next;
  /* 0x0001 */ char Padding_733[3];
  /* 0x0004 */ unsigned long Type;
  /* 0x0008 */ unsigned __int64 Size;
} HEAP_BLOCK_EXTRA_INFORMATION, *PHEAP_BLOCK_EXTRA_INFORMATION; /* size: 0x0010 */

typedef struct _SYSTEM_EXTENDED_THREAD_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_THREAD_INFORMATION ThreadInfo;
  /* 0x0050 */ void* StackBase;
  /* 0x0058 */ void* StackLimit;
  /* 0x0060 */ void* Win32StartAddress;
  /* 0x0068 */ void* TebBase;
  /* 0x0070 */ unsigned __int64 Reserved2;
  /* 0x0078 */ unsigned __int64 Reserved3;
  /* 0x0080 */ unsigned __int64 Reserved4;
} SYSTEM_EXTENDED_THREAD_INFORMATION, *PSYSTEM_EXTENDED_THREAD_INFORMATION; /* size: 0x0088 */

struct tagMCI_OVLY_OPEN_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const wchar_t* lpstrDeviceType;
  /* 0x0014 */ const wchar_t* lpstrElementName;
  /* 0x001c */ const wchar_t* lpstrAlias;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ struct HWND__* hWndParent;
}; /* size: 0x0030 */

typedef struct _CRYPT_TIMESTAMP_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_734;
  /* 0x0008 */ char* pszTSAPolicyId;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB HashedMessage;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB SerialNumber;
  /* 0x0048 */ struct _FILETIME ftTime;
  /* 0x0050 */ struct _CRYPT_TIMESTAMP_ACCURACY* pvAccuracy;
  /* 0x0058 */ int fOrdering;
  /* 0x005c */ long Padding_735;
  /* 0x0060 */ struct _CRYPTOAPI_BLOB Nonce;
  /* 0x0070 */ struct _CRYPTOAPI_BLOB Tsa;
  /* 0x0080 */ unsigned long cExtension;
  /* 0x0084 */ long Padding_736;
  /* 0x0088 */ struct _CERT_EXTENSION* rgExtension;
} CRYPT_TIMESTAMP_INFO, *PCRYPT_TIMESTAMP_INFO; /* size: 0x0090 */

typedef struct _CRYPT_OBJID_TABLE
{
  /* 0x0000 */ unsigned long dwAlgId;
  /* 0x0004 */ long Padding_737;
  /* 0x0008 */ const char* pszObjId;
} CRYPT_OBJID_TABLE, *PCRYPT_OBJID_TABLE; /* size: 0x0010 */

typedef struct _RegInputEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned __int64 oxid;
  /* 0x0018 */ struct _GUID ipid;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ unsigned long ulServiceId;
} RegInputEntry, *PRegInputEntry; /* size: 0x0030 */

struct RPC_ENDPOINT_TEMPLATEW
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_738;
  /* 0x0008 */ unsigned short* ProtSeq;
  /* 0x0010 */ unsigned short* Endpoint;
  /* 0x0018 */ void* SecurityDescriptor;
  /* 0x0020 */ unsigned long Backlog;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef union _PROCESS_MEMORY_ALLOCATION_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long TopDown : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MEMORY_ALLOCATION_MODE, *PPROCESS_MEMORY_ALLOCATION_MODE; /* size: 0x0004 */

typedef struct _DEVICE_MEDIA_INFO
{
  union
  {
    union
    {
      struct
      {
        /* 0x0000 */ union _LARGE_INTEGER Cylinders;
        /* 0x0008 */ enum _STORAGE_MEDIA_TYPE MediaType;
        /* 0x000c */ unsigned long TracksPerCylinder;
        /* 0x0010 */ unsigned long SectorsPerTrack;
        /* 0x0014 */ unsigned long BytesPerSector;
        /* 0x0018 */ unsigned long NumberMediaSides;
        /* 0x001c */ unsigned long MediaCharacteristics;
      } /* size: 0x0020 */ DiskInfo;
      struct
      {
        /* 0x0000 */ union _LARGE_INTEGER Cylinders;
        /* 0x0008 */ enum _STORAGE_MEDIA_TYPE MediaType;
        /* 0x000c */ unsigned long TracksPerCylinder;
        /* 0x0010 */ unsigned long SectorsPerTrack;
        /* 0x0014 */ unsigned long BytesPerSector;
        /* 0x0018 */ unsigned long NumberMediaSides;
        /* 0x001c */ unsigned long MediaCharacteristics;
      } /* size: 0x0020 */ RemovableDiskInfo;
      struct
      {
        /* 0x0000 */ enum _STORAGE_MEDIA_TYPE MediaType;
        /* 0x0004 */ unsigned long MediaCharacteristics;
        /* 0x0008 */ unsigned long CurrentBlockSize;
        /* 0x000c */ enum _STORAGE_BUS_TYPE BusType;
        union
        {
          struct
          {
            /* 0x0010 */ unsigned char MediumType;
            /* 0x0011 */ unsigned char DensityCode;
          } /* size: 0x0002 */ ScsiInformation;
        } /* size: 0x0002 */ BusSpecificData;
        /* 0x0012 */ char __PADDING__[2];
      } /* size: 0x0014 */ TapeInfo;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ DeviceSpecific;
} DEVICE_MEDIA_INFO, *PDEVICE_MEDIA_INFO; /* size: 0x0020 */

typedef struct _CRYPT_TIMESTAMP_ACCURACY
{
  /* 0x0000 */ unsigned long dwSeconds;
  /* 0x0004 */ unsigned long dwMillis;
  /* 0x0008 */ unsigned long dwMicros;
} CRYPT_TIMESTAMP_ACCURACY, *PCRYPT_TIMESTAMP_ACCURACY; /* size: 0x000c */

struct DLGITEMTEMPLATE
{
  /* 0x0000 */ unsigned long style;
  /* 0x0004 */ unsigned long dwExtendedStyle;
  /* 0x0008 */ short x;
  /* 0x000a */ short y;
  /* 0x000c */ short cx;
  /* 0x000e */ short cy;
  /* 0x0010 */ unsigned short id;
}; /* size: 0x0012 */

typedef struct _USER_MARSHAL_ROUTINE_QUADRUPLE
{
  /* 0x0000 */ void* pfnBufferSize /* function */;
  /* 0x0008 */ void* pfnMarshall /* function */;
  /* 0x0010 */ void* pfnUnmarshall /* function */;
  /* 0x0018 */ void* pfnFree /* function */;
} USER_MARSHAL_ROUTINE_QUADRUPLE, *PUSER_MARSHAL_ROUTINE_QUADRUPLE; /* size: 0x0020 */

class CPropertyStorage
{
  /* 0x0000 */ long Padding_739[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ struct IStorage* _pstgPropSet;
  /* 0x0018 */ struct IStream* _pstmPropSet;
  /* 0x0020 */ class CPropertySetStream* _np;
  /* 0x0028 */ class IMappedStream* _ms;
  /* 0x0030 */ enum MAPPED_STREAM_OPTS _fMSOpts;
  /* 0x0034 */ int _fInitCriticalSection;
  /* 0x0038 */ struct _RTL_CRITICAL_SECTION _CriticalSection;
  struct /* bitfield */
  {
    /* 0x0060 */ int _fUserDefinedProperties : 1; /* bit position: 0 */
    /* 0x0060 */ int _fExplicitelyProbedForWriteAccess : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0064 */ unsigned short _usCodePage;
  /* 0x0066 */ char Padding_740[2];
  /* 0x0068 */ unsigned long _dwOSVersion;
  /* 0x006c */ unsigned long _grfFlags;
  /* 0x0070 */ unsigned long _grfMode;
  /* 0x0074 */ long Padding_741;
  /* 0x0078 */ class CCoTaskAllocator _cCoTaskAllocator;
}; /* size: 0x0080 */

struct tagPOINTER_DEVICE_CURSOR_INFO
{
  /* 0x0000 */ unsigned int cursorId;
  /* 0x0004 */ enum tagPOINTER_DEVICE_CURSOR_TYPE cursor;
}; /* size: 0x0008 */

typedef struct _SCRUB_DATA_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Status;
  /* 0x000c */ long Padding_742;
  /* 0x0010 */ unsigned __int64 ErrorFileOffset;
  /* 0x0018 */ unsigned __int64 ErrorLength;
  /* 0x0020 */ unsigned __int64 NumberOfBytesRepaired;
  /* 0x0028 */ unsigned __int64 NumberOfBytesFailed;
  /* 0x0030 */ unsigned __int64 InternalFileReference;
  /* 0x0038 */ unsigned long Reserved[6];
  /* 0x0050 */ unsigned char ResumeContext[816];
} SCRUB_DATA_OUTPUT, *PSCRUB_DATA_OUTPUT; /* size: 0x0380 */

typedef struct _CRL_DIST_POINTS_INFO
{
  /* 0x0000 */ unsigned long cDistPoint;
  /* 0x0004 */ long Padding_743;
  /* 0x0008 */ struct _CRL_DIST_POINT* rgDistPoint;
} CRL_DIST_POINTS_INFO, *PCRL_DIST_POINTS_INFO; /* size: 0x0010 */

struct IComCatalogSCM
{
}; /* size: 0x0008 */

class CClassCache::CDllPathEntry::CFinishObject
{
  /* 0x0000 */ long Padding_744[2];
  /* 0x0008 */ struct HINSTANCE__* _hDll;
  /* 0x0010 */ unsigned long _dwFlags;
}; /* size: 0x0018 */

typedef struct _IMAGE_VXD_HEADER
{
  /* 0x0000 */ unsigned short e32_magic;
  /* 0x0002 */ unsigned char e32_border;
  /* 0x0003 */ unsigned char e32_worder;
  /* 0x0004 */ unsigned long e32_level;
  /* 0x0008 */ unsigned short e32_cpu;
  /* 0x000a */ unsigned short e32_os;
  /* 0x000c */ unsigned long e32_ver;
  /* 0x0010 */ unsigned long e32_mflags;
  /* 0x0014 */ unsigned long e32_mpages;
  /* 0x0018 */ unsigned long e32_startobj;
  /* 0x001c */ unsigned long e32_eip;
  /* 0x0020 */ unsigned long e32_stackobj;
  /* 0x0024 */ unsigned long e32_esp;
  /* 0x0028 */ unsigned long e32_pagesize;
  /* 0x002c */ unsigned long e32_lastpagesize;
  /* 0x0030 */ unsigned long e32_fixupsize;
  /* 0x0034 */ unsigned long e32_fixupsum;
  /* 0x0038 */ unsigned long e32_ldrsize;
  /* 0x003c */ unsigned long e32_ldrsum;
  /* 0x0040 */ unsigned long e32_objtab;
  /* 0x0044 */ unsigned long e32_objcnt;
  /* 0x0048 */ unsigned long e32_objmap;
  /* 0x004c */ unsigned long e32_itermap;
  /* 0x0050 */ unsigned long e32_rsrctab;
  /* 0x0054 */ unsigned long e32_rsrccnt;
  /* 0x0058 */ unsigned long e32_restab;
  /* 0x005c */ unsigned long e32_enttab;
  /* 0x0060 */ unsigned long e32_dirtab;
  /* 0x0064 */ unsigned long e32_dircnt;
  /* 0x0068 */ unsigned long e32_fpagetab;
  /* 0x006c */ unsigned long e32_frectab;
  /* 0x0070 */ unsigned long e32_impmod;
  /* 0x0074 */ unsigned long e32_impmodcnt;
  /* 0x0078 */ unsigned long e32_impproc;
  /* 0x007c */ unsigned long e32_pagesum;
  /* 0x0080 */ unsigned long e32_datapage;
  /* 0x0084 */ unsigned long e32_preload;
  /* 0x0088 */ unsigned long e32_nrestab;
  /* 0x008c */ unsigned long e32_cbnrestab;
  /* 0x0090 */ unsigned long e32_nressum;
  /* 0x0094 */ unsigned long e32_autodata;
  /* 0x0098 */ unsigned long e32_debuginfo;
  /* 0x009c */ unsigned long e32_debuglen;
  /* 0x00a0 */ unsigned long e32_instpreload;
  /* 0x00a4 */ unsigned long e32_instdemand;
  /* 0x00a8 */ unsigned long e32_heapsize;
  /* 0x00ac */ unsigned char e32_res3[12];
  /* 0x00b8 */ unsigned long e32_winresoff;
  /* 0x00bc */ unsigned long e32_winreslen;
  /* 0x00c0 */ unsigned short e32_devid;
  /* 0x00c2 */ unsigned short e32_ddkver;
} IMAGE_VXD_HEADER, *PIMAGE_VXD_HEADER; /* size: 0x00c4 */

typedef struct _iobuf
{
  /* 0x0000 */ char* _ptr;
  /* 0x0008 */ int _cnt;
  /* 0x000c */ long Padding_745;
  /* 0x0010 */ char* _base;
  /* 0x0018 */ int _flag;
  /* 0x001c */ int _file;
  /* 0x0020 */ int _charbuf;
  /* 0x0024 */ int _bufsiz;
  /* 0x0028 */ char* _tmpfname;
} iobuf, *Piobuf; /* size: 0x0030 */

typedef struct _OBJECT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_746;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectName;
  /* 0x0018 */ unsigned long Attributes;
  /* 0x001c */ long Padding_747;
  /* 0x0020 */ void* SecurityDescriptor;
  /* 0x0028 */ void* SecurityQualityOfService;
} OBJECT_ATTRIBUTES, *POBJECT_ATTRIBUTES; /* size: 0x0030 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IUnknown,0,0>
{
}; /* size: 0x0001 */

struct CMPGUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned long Data2;
  /* 0x0008 */ unsigned long Data3;
  /* 0x000c */ unsigned long Data4;
}; /* size: 0x0010 */

struct IRpcStubBuffer
{
}; /* size: 0x0008 */

typedef struct _EVENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Id;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char Channel;
  /* 0x0004 */ unsigned char Level;
  /* 0x0005 */ unsigned char Opcode;
  /* 0x0006 */ unsigned short Task;
  /* 0x0008 */ unsigned __int64 Keyword;
} EVENT_DESCRIPTOR, *PEVENT_DESCRIPTOR; /* size: 0x0010 */

class CoAllocator
{
}; /* size: 0x0008 */

typedef struct _CERT_AUTHORITY_KEY_ID_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB CertIssuer;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB CertSerialNumber;
} CERT_AUTHORITY_KEY_ID_INFO, *PCERT_AUTHORITY_KEY_ID_INFO; /* size: 0x0030 */

typedef struct _CTL_ANY_SUBJECT_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SubjectAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB SubjectIdentifier;
} CTL_ANY_SUBJECT_INFO, *PCTL_ANY_SUBJECT_INFO; /* size: 0x0028 */

typedef struct _CERT_SIGNED_CONTENT_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0028 */ struct _CRYPT_BIT_BLOB Signature;
} CERT_SIGNED_CONTENT_INFO, *PCERT_SIGNED_CONTENT_INFO; /* size: 0x0040 */

class CRpcResolver
{
  union
  {
    struct
    {
      /* 0x0000 */ class CFastBH* _fbhILocalObjectExporter;
      /* 0x0008 */ class CFastBH* _fbhIROT;
      /* 0x0010 */ class CFastBH* _fbhISCM;
      /* 0x0018 */ class CFastBH* _fbhIMachineActivatorControl;
      /* 0x0020 */ struct _PSM_APPSTATE_REGISTRATION* _psmRegistration;
      /* 0x0028 */ int _fLocalRemReleaseFailed;
    }; /* size: 0x002c */
    /* 0x0000 */ void* _ph;
    /* 0x0000 */ unsigned long _dwFlags;
    /* 0x0000 */ class CDualStringArray* _pdsaLocalResolver;
    /* 0x0000 */ unsigned __int64 _dwCurrentBindingsID;
    /* 0x0000 */ struct _GUID _GuidRPCSSProcessIdentifier;
    /* 0x0000 */ class CMachineNamesHelper* _pMNHelper;
    /* 0x0000 */ unsigned long _cReservedOidsAvail;
    /* 0x0000 */ unsigned __int64 _OidsReserved[10];
    /* 0x0000 */ struct ISCMLocalActivator* _pSCMProxy;
    /* 0x0000 */ struct ISCMLocalActivator* _pCloakedSCMProxy;
    /* 0x0000 */ wchar_t* _pwszWinstaDesktop;
    /* 0x0000 */ wchar_t* _pwszFQDN;
    /* 0x0000 */ unsigned __int64 _ProcessSignature;
    /* 0x0000 */ void* _pNoRegLaunchPermissionsSD;
    /* 0x0000 */ void* _pNoRegAccessPermissionsSD;
    /* 0x0000 */ void* _pNoRegLaunchRestrictionsSD;
    /* 0x0000 */ void* _pNoRegAccessRestrictionsSD;
    /* 0x0000 */ void* _pDefaultAccessRestrictionsSD;
    /* 0x0000 */ void* _pSelfSid;
    /* 0x0000 */ class COleStaticMutexSem _mxsResolver;
    /* 0x0000 */ void* _hResolverWaitEvent;
    /* 0x0000 */ int _developerLicenseInstalled;
  }; /* size: 0x0050 */
}; /* size: 0x0030 */

typedef struct _CMC_TAGGED_ATTRIBUTE
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_748;
  /* 0x0008 */ struct _CRYPT_ATTRIBUTE Attribute;
} CMC_TAGGED_ATTRIBUTE, *PCMC_TAGGED_ATTRIBUTE; /* size: 0x0020 */

class CArrayFValue
{
  /* 0x0000 */ unsigned char* m_pData;
  /* 0x0008 */ unsigned int m_cbValue;
  /* 0x000c */ int m_nSize;
  /* 0x0010 */ int m_nMaxSize;
  /* 0x0014 */ int m_nGrowBy;
}; /* size: 0x0018 */

class LargeIntRegMultiply<unsigned __int64,int>
{
}; /* size: 0x0001 */

typedef struct _KEY_VALUE_ENTRY
{
  /* 0x0000 */ struct _UNICODE_STRING* ValueName;
  /* 0x0008 */ unsigned long DataLength;
  /* 0x000c */ unsigned long DataOffset;
  /* 0x0010 */ unsigned long Type;
  /* 0x0014 */ long __PADDING__[1];
} KEY_VALUE_ENTRY, *PKEY_VALUE_ENTRY; /* size: 0x0018 */

struct CMachineNamesHelper::_UNIQUEADDRS
{
  /* 0x0000 */ unsigned long dwcTotalUniqueAddrs;
  /* 0x0004 */ unsigned long dwStringSpaceNeeded;
  /* 0x0008 */ unsigned long dwCurrentAddr;
  /* 0x000c */ long Padding_749;
  /* 0x0010 */ wchar_t* pszNextAddrToUse;
  /* 0x0018 */ wchar_t** ppszAddrs;
  /* 0x0020 */ unsigned __int64 cchLeft;
}; /* size: 0x0028 */

typedef struct _GENERIC_MAPPING
{
  /* 0x0000 */ unsigned long GenericRead;
  /* 0x0004 */ unsigned long GenericWrite;
  /* 0x0008 */ unsigned long GenericExecute;
  /* 0x000c */ unsigned long GenericAll;
} GENERIC_MAPPING, *PGENERIC_MAPPING; /* size: 0x0010 */

typedef struct _SYSTEM_OBJECTTYPE_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long NumberOfObjects;
  /* 0x0008 */ unsigned long NumberOfHandles;
  /* 0x000c */ unsigned long TypeIndex;
  /* 0x0010 */ unsigned long InvalidAttributes;
  /* 0x0014 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0024 */ unsigned long ValidAccessMask;
  /* 0x0028 */ unsigned long PoolType;
  /* 0x002c */ unsigned char SecurityRequired;
  /* 0x002d */ unsigned char WaitableObject;
  /* 0x002e */ char Padding_750[2];
  /* 0x0030 */ struct _UNICODE_STRING TypeName;
} SYSTEM_OBJECTTYPE_INFORMATION, *PSYSTEM_OBJECTTYPE_INFORMATION; /* size: 0x0040 */

class CGlobalSecurity
{
  /* 0x0000 */ unsigned char _acl[80];
  /* 0x0050 */ struct _SECURITY_DESCRIPTOR _sd;
  /* 0x0078 */ unsigned char _sdExt[200];
  /* 0x0140 */ struct _SECURITY_ATTRIBUTES _sa;
}; /* size: 0x0158 */

typedef struct _CRYPT_PKCS8_EXPORT_PARAMS
{
  /* 0x0000 */ unsigned __int64 hCryptProv;
  /* 0x0008 */ unsigned long dwKeySpec;
  /* 0x000c */ long Padding_751;
  /* 0x0010 */ char* pszPrivateKeyObjId;
  /* 0x0018 */ void* pEncryptPrivateKeyFunc /* function */;
  /* 0x0020 */ void* pVoidEncryptFunc;
} CRYPT_PKCS8_EXPORT_PARAMS, *PCRYPT_PKCS8_EXPORT_PARAMS; /* size: 0x0028 */

typedef struct _POWER_SESSION_RIT_STATE
{
  /* 0x0000 */ unsigned char Active;
  /* 0x0001 */ char Padding_752[3];
  /* 0x0004 */ unsigned long LastInputTime;
} POWER_SESSION_RIT_STATE, *PPOWER_SESSION_RIT_STATE; /* size: 0x0008 */

typedef struct _PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING SymbolicLinkName;
  /* 0x0010 */ struct _GUID* AliasClassGuid;
  /* 0x0018 */ wchar_t* AliasSymbolicLinkName;
  /* 0x0020 */ unsigned long AliasSymbolicLinkNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA, *PPLUGPLAY_CONTROL_INTERFACE_ALIAS_DATA; /* size: 0x0028 */

struct tagSERIALIZEDPROPERTYVALUE
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned char rgb[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _DOCINFOW
{
  /* 0x0000 */ int cbSize;
  /* 0x0004 */ long Padding_753;
  /* 0x0008 */ const wchar_t* lpszDocName;
  /* 0x0010 */ const wchar_t* lpszOutput;
  /* 0x0018 */ const wchar_t* lpszDatatype;
  /* 0x0020 */ unsigned long fwType;
  /* 0x0024 */ long __PADDING__[1];
} DOCINFOW, *PDOCINFOW; /* size: 0x0028 */

struct Windows::Rtl::IRtlUtf8StringBuilder
{
}; /* size: 0x0008 */

typedef struct _CRYPT_CONTEXTS
{
  /* 0x0000 */ unsigned long cContexts;
  /* 0x0004 */ long Padding_754;
  /* 0x0008 */ wchar_t** rgpszContexts;
} CRYPT_CONTEXTS, *PCRYPT_CONTEXTS; /* size: 0x0010 */

struct tagVARIANT
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short vt;
      /* 0x0002 */ unsigned short wReserved1;
      /* 0x0004 */ unsigned short wReserved2;
      /* 0x0006 */ unsigned short wReserved3;
      union
      {
        /* 0x0008 */ __int64 llVal;
        /* 0x0008 */ long lVal;
        /* 0x0008 */ unsigned char bVal;
        /* 0x0008 */ short iVal;
        /* 0x0008 */ float fltVal;
        /* 0x0008 */ double dblVal;
        /* 0x0008 */ short boolVal;
        /* 0x0008 */ long scode;
        /* 0x0008 */ union tagCY cyVal;
        /* 0x0008 */ double date;
        /* 0x0008 */ wchar_t* bstrVal;
        /* 0x0008 */ struct IUnknown* punkVal;
        /* 0x0008 */ struct IDispatch* pdispVal;
        /* 0x0008 */ struct tagSAFEARRAY* parray;
        /* 0x0008 */ unsigned char* pbVal;
        /* 0x0008 */ short* piVal;
        /* 0x0008 */ long* plVal;
        /* 0x0008 */ __int64* pllVal;
        /* 0x0008 */ float* pfltVal;
        /* 0x0008 */ double* pdblVal;
        /* 0x0008 */ short* pboolVal;
        /* 0x0008 */ long* pscode;
        /* 0x0008 */ union tagCY* pcyVal;
        /* 0x0008 */ double* pdate;
        /* 0x0008 */ wchar_t** pbstrVal;
        /* 0x0008 */ struct IUnknown** ppunkVal;
        /* 0x0008 */ struct IDispatch** ppdispVal;
        /* 0x0008 */ struct tagSAFEARRAY** pparray;
        /* 0x0008 */ struct tagVARIANT* pvarVal;
        /* 0x0008 */ void* byref;
        /* 0x0008 */ char cVal;
        /* 0x0008 */ unsigned short uiVal;
        /* 0x0008 */ unsigned long ulVal;
        /* 0x0008 */ unsigned __int64 ullVal;
        /* 0x0008 */ int intVal;
        /* 0x0008 */ unsigned int uintVal;
        /* 0x0008 */ struct tagDEC* pdecVal;
        /* 0x0008 */ char* pcVal;
        /* 0x0008 */ unsigned short* puiVal;
        /* 0x0008 */ unsigned long* pulVal;
        /* 0x0008 */ unsigned __int64* pullVal;
        /* 0x0008 */ int* pintVal;
        /* 0x0008 */ unsigned int* puintVal;
        struct
        {
          /* 0x0008 */ void* pvRecord;
          /* 0x0010 */ struct IRecordInfo* pRecInfo;
        }; /* size: 0x0010 */
      }; /* size: 0x0010 */
    }; /* size: 0x0018 */
    struct
    {
      /* 0x0000 */ struct tagDEC decVal;
      /* 0x0010 */ long __PADDING__[2];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

struct IClientSecurity
{
}; /* size: 0x0008 */

class CClassCache::CLSvrClassEntry::CFinishObject
{
  /* 0x0000 */ long Padding_755[2];
  /* 0x0008 */ unsigned long _dwScmReg;
  /* 0x000c */ unsigned long _dwThreadId;
  /* 0x0010 */ struct HWND__* _hWndDdeServer;
  /* 0x0018 */ struct IUnknown* _pUnk;
  /* 0x0020 */ struct _GUID _clsid;
}; /* size: 0x0030 */

typedef struct _FILE_MAILSLOT_PEEK_BUFFER
{
  /* 0x0000 */ unsigned long ReadDataAvailable;
  /* 0x0004 */ unsigned long NumberOfMessages;
  /* 0x0008 */ unsigned long MessageLength;
} FILE_MAILSLOT_PEEK_BUFFER, *PFILE_MAILSLOT_PEEK_BUFFER; /* size: 0x000c */

class HashGUID
{
}; /* size: 0x0001 */

struct ICallFactory
{
}; /* size: 0x0008 */

typedef struct _CHANGER_READ_ELEMENT_STATUS
{
  /* 0x0000 */ struct _CHANGER_ELEMENT_LIST ElementList;
  /* 0x000c */ unsigned char VolumeTagInfo;
  /* 0x000d */ char __PADDING__[3];
} CHANGER_READ_ELEMENT_STATUS, *PCHANGER_READ_ELEMENT_STATUS; /* size: 0x0010 */

typedef struct _FINDFIRSTACTIVATIONCONTEXTSECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ const struct _GUID* ExtensionGuid;
  /* 0x0010 */ unsigned long Id;
  /* 0x0014 */ unsigned long Depth;
  /* 0x0018 */ unsigned long OutFlags;
  /* 0x001c */ long __PADDING__[1];
} FINDFIRSTACTIVATIONCONTEXTSECTION, *PFINDFIRSTACTIVATIONCONTEXTSECTION; /* size: 0x0020 */

struct ISynchronizeHandle
{
}; /* size: 0x0008 */

typedef struct _PACKEDEVENTINFO
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long ulNumEventsForLogFile;
  /* 0x0008 */ unsigned long* ulOffsets /* zero-length array */;
} PACKEDEVENTINFO, *PPACKEDEVENTINFO; /* size: 0x0008 */

struct tagMIDIOUTCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned short wTechnology;
  /* 0x002a */ unsigned short wVoices;
  /* 0x002c */ unsigned short wNotes;
  /* 0x002e */ unsigned short wChannelMask;
  /* 0x0030 */ unsigned long dwSupport;
  /* 0x0034 */ struct _GUID ManufacturerGuid;
  /* 0x0044 */ struct _GUID ProductGuid;
  /* 0x0054 */ struct _GUID NameGuid;
}; /* size: 0x0064 */

typedef struct _PLUGPLAY_CONTROL_PROPERTY_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long PropertyType;
  /* 0x0014 */ long Padding_756;
  /* 0x0018 */ void* Buffer;
  /* 0x0020 */ unsigned long BufferSize;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_PROPERTY_DATA, *PPLUGPLAY_CONTROL_PROPERTY_DATA; /* size: 0x0028 */

typedef struct _numberfmtW
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_757;
  /* 0x0010 */ wchar_t* lpDecimalSep;
  /* 0x0018 */ wchar_t* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ long __PADDING__[1];
} numberfmtW, *PnumberfmtW; /* size: 0x0028 */

typedef struct _MEMORY_SCRUB_INFORMATION
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 PagesScrubbed;
} MEMORY_SCRUB_INFORMATION, *PMEMORY_SCRUB_INFORMATION; /* size: 0x0010 */

struct tagRAWMOUSE
{
  /* 0x0000 */ unsigned short usFlags;
  /* 0x0002 */ char Padding_758[2];
  union
  {
    /* 0x0004 */ unsigned long ulButtons;
    struct
    {
      /* 0x0004 */ unsigned short usButtonFlags;
      /* 0x0006 */ unsigned short usButtonData;
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
  /* 0x0008 */ unsigned long ulRawButtons;
  /* 0x000c */ long lLastX;
  /* 0x0010 */ long lLastY;
  /* 0x0014 */ unsigned long ulExtraInformation;
}; /* size: 0x0018 */

struct tagRAWINPUT
{
  /* 0x0000 */ struct tagRAWINPUTHEADER header;
  union
  {
    union
    {
      /* 0x0018 */ struct tagRAWMOUSE mouse;
      /* 0x0018 */ struct tagRAWKEYBOARD keyboard;
      /* 0x0018 */ struct tagRAWHID hid;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ data;
}; /* size: 0x0030 */

struct HDROP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CM_ROM_BLOCK
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ unsigned long Size;
} CM_ROM_BLOCK, *PCM_ROM_BLOCK; /* size: 0x0008 */

class BUCL::CIsSignedType<__int64>
{
}; /* size: 0x0001 */

typedef struct _SET_PURGE_FAILURE_MODE_INPUT
{
  /* 0x0000 */ unsigned long Flags;
} SET_PURGE_FAILURE_MODE_INPUT, *PSET_PURGE_FAILURE_MODE_INPUT; /* size: 0x0004 */

struct IMultiQI
{
}; /* size: 0x0008 */

struct CM_Power_Data_s
{
  /* 0x0000 */ unsigned long PD_Size;
  /* 0x0004 */ enum _DEVICE_POWER_STATE PD_MostRecentPowerState;
  /* 0x0008 */ unsigned long PD_Capabilities;
  /* 0x000c */ unsigned long PD_D1Latency;
  /* 0x0010 */ unsigned long PD_D2Latency;
  /* 0x0014 */ unsigned long PD_D3Latency;
  /* 0x0018 */ enum _DEVICE_POWER_STATE PD_PowerStateMapping[7];
  /* 0x0034 */ enum _SYSTEM_POWER_STATE PD_DeepestSystemWake;
}; /* size: 0x0038 */

typedef struct _FILE_ATTRIBUTE_TAG_INFORMATION
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFORMATION, *PFILE_ATTRIBUTE_TAG_INFORMATION; /* size: 0x0008 */

class CSafeMultiHeap
{
  /* 0x0000 */ class CSmAllocator* _pSmAllocator;
  /* 0x0008 */ class CPerContext* _ppcPrev;
}; /* size: 0x0010 */

class CHwnd
{
  /* 0x0000 */ struct HWND__* m_hwnd;
}; /* size: 0x0008 */

struct tagANIMATIONINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iMinAnimate;
}; /* size: 0x0008 */

struct tagSTATSTG
{
  /* 0x0000 */ wchar_t* pwcsName;
  /* 0x0008 */ unsigned long type;
  /* 0x000c */ long Padding_759;
  /* 0x0010 */ union _ULARGE_INTEGER cbSize;
  /* 0x0018 */ struct _FILETIME mtime;
  /* 0x0020 */ struct _FILETIME ctime;
  /* 0x0028 */ struct _FILETIME atime;
  /* 0x0030 */ unsigned long grfMode;
  /* 0x0034 */ unsigned long grfLocksSupported;
  /* 0x0038 */ struct _GUID clsid;
  /* 0x0048 */ unsigned long grfStateBits;
  /* 0x004c */ unsigned long reserved;
}; /* size: 0x0050 */

struct SExtHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ const wchar_t* pwszExt;
}; /* size: 0x0018 */

struct tagSExtEntry
{
  /* 0x0000 */ struct SExtHashNode m_node;
  /* 0x0018 */ wchar_t* m_wszExt;
  /* 0x0020 */ struct _GUID m_clsid;
  /* 0x0030 */ wchar_t m_wszBuf[8];
}; /* size: 0x0040 */

typedef struct _SYSTEM_WATCHDOG_HANDLER_INFORMATION
{
  /* 0x0000 */ void* WdHandler /* function */;
  /* 0x0008 */ void* Context;
} SYSTEM_WATCHDOG_HANDLER_INFORMATION, *PSYSTEM_WATCHDOG_HANDLER_INFORMATION; /* size: 0x0010 */

typedef struct _CTL_FIND_USAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_760;
  /* 0x0008 */ struct _CTL_USAGE SubjectUsage;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB ListIdentifier;
  /* 0x0028 */ struct _CERT_INFO* pSigner;
} CTL_FIND_USAGE_PARA, *PCTL_FIND_USAGE_PARA; /* size: 0x0030 */

typedef struct _OSVERSIONINFOA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
} OSVERSIONINFOA, *POSVERSIONINFOA; /* size: 0x0094 */

typedef struct _CSV_QUERY_REDIRECT_STATE
{
  /* 0x0000 */ unsigned long MdsNodeId;
  /* 0x0004 */ unsigned long DsNodeId;
  /* 0x0008 */ unsigned char FileRedirected;
  /* 0x0009 */ char __PADDING__[3];
} CSV_QUERY_REDIRECT_STATE, *PCSV_QUERY_REDIRECT_STATE; /* size: 0x000c */

struct WireExtentArray
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ unsigned long unique;
  /* 0x000c */ unsigned long rounded_size;
  /* 0x0010 */ unsigned long unique_flag[2];
}; /* size: 0x0018 */

struct WireExtent
{
  /* 0x0000 */ unsigned long rounded_size;
  /* 0x0004 */ struct _GUID id;
  /* 0x0014 */ unsigned long size;
}; /* size: 0x0018 */

struct WireThatPart2
{
  /* 0x0000 */ struct WireThatPart1 part1;
  /* 0x0008 */ struct WireExtentArray ea;
  /* 0x0020 */ struct WireExtent e;
}; /* size: 0x0038 */

union WireThat
{
  union
  {
    /* 0x0000 */ struct WireThatPart1 c;
    /* 0x0000 */ struct WireThatPart2 d;
  }; /* size: 0x0038 */
}; /* size: 0x0038 */

typedef struct _FILE_ID_INFORMATION
{
  /* 0x0000 */ unsigned __int64 VolumeSerialNumber;
  /* 0x0008 */ struct _FILE_ID_128 FileId;
} FILE_ID_INFORMATION, *PFILE_ID_INFORMATION; /* size: 0x0018 */

struct tagWNDCLASSEXW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const wchar_t* lpszMenuName;
  /* 0x0040 */ const wchar_t* lpszClassName;
  /* 0x0048 */ struct HICON__* hIconSm;
}; /* size: 0x0050 */

typedef struct _RTL_RXACT_CONTEXT
{
  /* 0x0000 */ void* RootRegistryKey;
  /* 0x0008 */ void* RXactKey;
  /* 0x0010 */ unsigned char HandlesValid;
  /* 0x0011 */ char Padding_761[7];
  /* 0x0018 */ struct _RTL_RXACT_LOG* RXactLog;
} RTL_RXACT_CONTEXT, *PRTL_RXACT_CONTEXT; /* size: 0x0020 */

typedef struct _SYSTEM_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Reserved;
  /* 0x0004 */ unsigned long TimerResolution;
  /* 0x0008 */ unsigned long PageSize;
  /* 0x000c */ unsigned long NumberOfPhysicalPages;
  /* 0x0010 */ unsigned long LowestPhysicalPageNumber;
  /* 0x0014 */ unsigned long HighestPhysicalPageNumber;
  /* 0x0018 */ unsigned long AllocationGranularity;
  /* 0x001c */ long Padding_762;
  /* 0x0020 */ unsigned __int64 MinimumUserModeAddress;
  /* 0x0028 */ unsigned __int64 MaximumUserModeAddress;
  /* 0x0030 */ unsigned __int64 ActiveProcessorsAffinityMask;
  /* 0x0038 */ char NumberOfProcessors;
  /* 0x0039 */ char __PADDING__[7];
} SYSTEM_BASIC_INFORMATION, *PSYSTEM_BASIC_INFORMATION; /* size: 0x0040 */

typedef struct _COAUTHIDENTITY
{
  /* 0x0000 */ unsigned short* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_763;
  /* 0x0010 */ unsigned short* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_764;
  /* 0x0020 */ unsigned short* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} COAUTHIDENTITY, *PCOAUTHIDENTITY; /* size: 0x0030 */

class CMonikerPtrBuf
{
}; /* size: 0x0020 */

class CRotMonikerEnum
{
  /* 0x0000 */ long Padding_765[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _dwOffset;
  /* 0x0010 */ class CMonikerPtrBuf _mkptrbuf;
}; /* size: 0x0030 */

struct IProgressNotify
{
}; /* size: 0x0008 */

struct ITypeChangeEvents
{
}; /* size: 0x0008 */

struct HMONITOR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SD_CHANGE_MACHINE_SID_INPUT
{
  /* 0x0000 */ unsigned short CurrentMachineSIDOffset;
  /* 0x0002 */ unsigned short CurrentMachineSIDLength;
  /* 0x0004 */ unsigned short NewMachineSIDOffset;
  /* 0x0006 */ unsigned short NewMachineSIDLength;
} SD_CHANGE_MACHINE_SID_INPUT, *PSD_CHANGE_MACHINE_SID_INPUT; /* size: 0x0008 */

typedef struct _SD_ENUM_SDS_INPUT
{
  /* 0x0000 */ unsigned __int64 StartingOffset;
  /* 0x0008 */ unsigned __int64 MaxSDEntriesToReturn;
} SD_ENUM_SDS_INPUT, *PSD_ENUM_SDS_INPUT; /* size: 0x0010 */

typedef struct _SD_GLOBAL_CHANGE_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ChangeType;
  union
  {
    /* 0x0008 */ struct _SD_CHANGE_MACHINE_SID_INPUT SdChange;
    /* 0x0008 */ struct _SD_QUERY_STATS_INPUT SdQueryStats;
    /* 0x0008 */ struct _SD_ENUM_SDS_INPUT SdEnumSds;
  }; /* size: 0x0010 */
} SD_GLOBAL_CHANGE_INPUT, *PSD_GLOBAL_CHANGE_INPUT; /* size: 0x0018 */

typedef struct _KEY_WOW64_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long UserFlags;
} KEY_WOW64_FLAGS_INFORMATION, *PKEY_WOW64_FLAGS_INFORMATION; /* size: 0x0004 */

struct tagBITMAPCOREINFO
{
  /* 0x0000 */ struct tagBITMAPCOREHEADER bmciHeader;
  /* 0x000c */ struct tagRGBTRIPLE bmciColors[1];
  /* 0x000f */ char __PADDING__[1];
}; /* size: 0x0010 */

class CBasedDFBasisPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct tagENUMLOGFONTEXW
{
  /* 0x0000 */ struct tagLOGFONTW elfLogFont;
  /* 0x005c */ wchar_t elfFullName[64];
  /* 0x00dc */ wchar_t elfStyle[32];
  /* 0x011c */ wchar_t elfScript[32];
}; /* size: 0x015c */

typedef struct _SYSTEM_RESOURCE_ATTRIBUTE_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_RESOURCE_ATTRIBUTE_ACE, *PSYSTEM_RESOURCE_ATTRIBUTE_ACE; /* size: 0x000c */

typedef struct _SYSTEM_ENTROPY_TIMING_INFORMATION
{
  /* 0x0000 */ void* EntropyRoutine /* function */;
  /* 0x0008 */ void* InitializationRoutine /* function */;
  /* 0x0010 */ void* InitializationContext;
} SYSTEM_ENTROPY_TIMING_INFORMATION, *PSYSTEM_ENTROPY_TIMING_INFORMATION; /* size: 0x0018 */

struct tagWNDCLASSEXA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int style;
  /* 0x0008 */ void* lpfnWndProc /* function */;
  /* 0x0010 */ int cbClsExtra;
  /* 0x0014 */ int cbWndExtra;
  /* 0x0018 */ struct HINSTANCE__* hInstance;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ struct HICON__* hCursor;
  /* 0x0030 */ struct HBRUSH__* hbrBackground;
  /* 0x0038 */ const char* lpszMenuName;
  /* 0x0040 */ const char* lpszClassName;
  /* 0x0048 */ struct HICON__* hIconSm;
}; /* size: 0x0050 */

struct tagEMRFILLPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
}; /* size: 0x0018 */

struct IPersistFile
{
}; /* size: 0x0008 */

typedef struct _FLOAT128
{
  /* 0x0000 */ __int64 LowPart;
  /* 0x0008 */ __int64 HighPart;
} FLOAT128, *PFLOAT128; /* size: 0x0010 */

struct tagCOLORADJUSTMENT
{
  /* 0x0000 */ unsigned short caSize;
  /* 0x0002 */ unsigned short caFlags;
  /* 0x0004 */ unsigned short caIlluminantIndex;
  /* 0x0006 */ unsigned short caRedGamma;
  /* 0x0008 */ unsigned short caGreenGamma;
  /* 0x000a */ unsigned short caBlueGamma;
  /* 0x000c */ unsigned short caReferenceBlack;
  /* 0x000e */ unsigned short caReferenceWhite;
  /* 0x0010 */ short caContrast;
  /* 0x0012 */ short caBrightness;
  /* 0x0014 */ short caColorfulness;
  /* 0x0016 */ short caRedGreenTint;
}; /* size: 0x0018 */

struct tagMETAHEADER
{
  /* 0x0000 */ unsigned short mtType;
  /* 0x0002 */ unsigned short mtHeaderSize;
  /* 0x0004 */ unsigned short mtVersion;
  /* 0x0006 */ unsigned long mtSize;
  /* 0x000a */ unsigned short mtNoObjects;
  /* 0x000c */ unsigned long mtMaxRecord;
  /* 0x0010 */ unsigned short mtNoParameters;
}; /* size: 0x0012 */

typedef struct _FILE_VOLUME_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long DeviceNameLength;
  /* 0x0004 */ wchar_t DeviceName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_VOLUME_NAME_INFORMATION, *PFILE_VOLUME_NAME_INFORMATION; /* size: 0x0008 */

typedef struct _CRYPT_SMIME_CAPABILITIES
{
  /* 0x0000 */ unsigned long cCapability;
  /* 0x0004 */ long Padding_766;
  /* 0x0008 */ struct _CRYPT_SMIME_CAPABILITY* rgCapability;
} CRYPT_SMIME_CAPABILITIES, *PCRYPT_SMIME_CAPABILITIES; /* size: 0x0010 */

struct tagEMRSETVIEWPORTORGEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlOrigin;
}; /* size: 0x0010 */

typedef struct _CRYPT_SMIME_CAPABILITY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Parameters;
} CRYPT_SMIME_CAPABILITY, *PCRYPT_SMIME_CAPABILITY; /* size: 0x0018 */

struct KNOWNFOLDER_DEFINITION
{
  /* 0x0000 */ enum KF_CATEGORY category;
  /* 0x0004 */ long Padding_767;
  /* 0x0008 */ wchar_t* pszName;
  /* 0x0010 */ wchar_t* pszDescription;
  /* 0x0018 */ struct _GUID fidParent;
  /* 0x0028 */ wchar_t* pszRelativePath;
  /* 0x0030 */ wchar_t* pszParsingName;
  /* 0x0038 */ wchar_t* pszTooltip;
  /* 0x0040 */ wchar_t* pszLocalizedName;
  /* 0x0048 */ wchar_t* pszIcon;
  /* 0x0050 */ wchar_t* pszSecurity;
  /* 0x0058 */ unsigned long dwAttributes;
  /* 0x005c */ unsigned long kfdFlags;
  /* 0x0060 */ struct _GUID ftidType;
}; /* size: 0x0070 */

class PMemoryAllocator
{
}; /* size: 0x0008 */

typedef struct _IMAGE_THUNK_DATA64
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 ForwarderString;
      /* 0x0000 */ unsigned __int64 Function;
      /* 0x0000 */ unsigned __int64 Ordinal;
      /* 0x0000 */ unsigned __int64 AddressOfData;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} IMAGE_THUNK_DATA64, *PIMAGE_THUNK_DATA64; /* size: 0x0008 */

typedef struct _PS_MEMORY_RESERVE
{
  /* 0x0000 */ void* ReserveAddress;
  /* 0x0008 */ unsigned __int64 ReserveSize;
} PS_MEMORY_RESERVE, *PPS_MEMORY_RESERVE; /* size: 0x0010 */

typedef struct _SYSTEM_SET_TIME_ADJUST_INFORMATION
{
  /* 0x0000 */ unsigned long TimeAdjustment;
  /* 0x0004 */ unsigned char Enable;
  /* 0x0005 */ char __PADDING__[3];
} SYSTEM_SET_TIME_ADJUST_INFORMATION, *PSYSTEM_SET_TIME_ADJUST_INFORMATION; /* size: 0x0008 */

typedef struct _FILE_BASIC_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CreationTime;
  /* 0x0008 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0010 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0018 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0020 */ unsigned long FileAttributes;
  /* 0x0024 */ long __PADDING__[1];
} FILE_BASIC_INFO, *PFILE_BASIC_INFO; /* size: 0x0028 */

typedef struct _SERVICE_NOTIFY_2A
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_768;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0040 */ unsigned long dwNotificationTriggered;
  /* 0x0044 */ long Padding_769;
  /* 0x0048 */ char* pszServiceNames;
} SERVICE_NOTIFY_2A, *PSERVICE_NOTIFY_2A; /* size: 0x0050 */

typedef struct _FSCTL_QUERY_FAT_BPB_BUFFER
{
  /* 0x0000 */ unsigned char First0x24BytesOfBootSector[36];
} FSCTL_QUERY_FAT_BPB_BUFFER, *PFSCTL_QUERY_FAT_BPB_BUFFER; /* size: 0x0024 */

typedef struct _TEB_ACTIVE_FRAME_CONTEXT_EX
{
  /* 0x0000 */ struct _TEB_ACTIVE_FRAME_CONTEXT BasicContext;
  /* 0x0010 */ const char* SourceLocation;
} TEB_ACTIVE_FRAME_CONTEXT_EX, *PTEB_ACTIVE_FRAME_CONTEXT_EX; /* size: 0x0018 */

class CContinue
{
  /* 0x0000 */ long Padding_770[2];
  /* 0x0008 */ long _cRef;
  /* 0x000c */ long Padding_771;
  /* 0x0010 */ void* _pfnContinue /* function */;
  /* 0x0018 */ __int64 _dwContinue;
}; /* size: 0x0020 */

struct HIMCC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CErrorSmAllocator
{
}; /* size: 0x0030 */

typedef union _userHMETAFILEPICT::__MIDL_IWinTypes_0005
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _remoteMETAFILEPICT* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHMETAFILEPICT::__MIDL_IWinTypes_0005, *PuserHMETAFILEPICT::__MIDL_IWinTypes_0005; /* size: 0x0008 */

typedef struct _FILE_PIPE_ASSIGN_EVENT_BUFFER
{
  /* 0x0000 */ void* EventHandle;
  /* 0x0008 */ unsigned long KeyValue;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_ASSIGN_EVENT_BUFFER, *PFILE_PIPE_ASSIGN_EVENT_BUFFER; /* size: 0x0010 */

struct tagDICTIONARY
{
  /* 0x0000 */ unsigned long cEntries;
  /* 0x0004 */ struct tagENTRY rgEntry[1];
}; /* size: 0x0010 */

typedef struct _SYSTEM_SYSTEM_DISK_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemDisk;
} SYSTEM_SYSTEM_DISK_INFORMATION, *PSYSTEM_SYSTEM_DISK_INFORMATION; /* size: 0x0010 */

typedef struct _TAPE_STATISTICS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER RecoveredWrites;
  /* 0x0010 */ union _LARGE_INTEGER UnrecoveredWrites;
  /* 0x0018 */ union _LARGE_INTEGER RecoveredReads;
  /* 0x0020 */ union _LARGE_INTEGER UnrecoveredReads;
  /* 0x0028 */ unsigned char CompressionRatioReads;
  /* 0x0029 */ unsigned char CompressionRatioWrites;
  /* 0x002a */ char __PADDING__[6];
} TAPE_STATISTICS, *PTAPE_STATISTICS; /* size: 0x0030 */

typedef struct _MUICCENTRY
{
  /* 0x0000 */ unsigned int lCultureNameOffset;
  /* 0x0004 */ unsigned int ulCultureID;
  /* 0x0008 */ unsigned long ulLanguageType;
  /* 0x000c */ long Padding_772;
  /* 0x0010 */ struct _MUICCENTRY* pNeutralCulture;
  /* 0x0018 */ struct _MUICCENTRY* lBaseLanguageIndices[4];
  /* 0x0038 */ int lParentLanguageIndices[4];
} MUICCENTRY, *PMUICCENTRY; /* size: 0x0048 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> const >;

typedef struct _RDR_CALLOUT_STATE
{
  /* 0x0000 */ long LastError;
  /* 0x0004 */ long Padding_773;
  /* 0x0008 */ void* LastEEInfo;
  /* 0x0010 */ enum _RPC_HTTP_REDIRECTOR_STAGE LastCalledStage;
  /* 0x0014 */ long Padding_774;
  /* 0x0018 */ unsigned short* ServerName;
  /* 0x0020 */ unsigned short* ServerPort;
  /* 0x0028 */ unsigned short* RemoteUser;
  /* 0x0030 */ unsigned short* AuthType;
  /* 0x0038 */ unsigned char ResourceTypePresent;
  /* 0x0039 */ unsigned char SessionIdPresent;
  /* 0x003a */ unsigned char InterfacePresent;
  /* 0x003b */ char Padding_775;
  /* 0x003c */ struct _GUID ResourceType;
  /* 0x004c */ struct _GUID SessionId;
  /* 0x005c */ struct _RPC_SYNTAX_IDENTIFIER Interface;
  /* 0x0070 */ void* CertContext;
} RDR_CALLOUT_STATE, *PRDR_CALLOUT_STATE; /* size: 0x0078 */

struct tagRemHBITMAP
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

struct IWinInetHttpTimeouts
{
}; /* size: 0x0008 */

struct PPM_WMI_PERF_STATES
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_776;
  /* 0x0028 */ unsigned __int64 TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

struct _TP_WORK;

typedef struct _OFSTRUCT
{
  /* 0x0000 */ unsigned char cBytes;
  /* 0x0001 */ unsigned char fFixedDisk;
  /* 0x0002 */ unsigned short nErrCode;
  /* 0x0004 */ unsigned short Reserved1;
  /* 0x0006 */ unsigned short Reserved2;
  /* 0x0008 */ char szPathName[128];
} OFSTRUCT, *POFSTRUCT; /* size: 0x0088 */

struct tagEMRELLIPSE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
}; /* size: 0x0018 */

typedef struct _SLIST_ENTRY
{
  /* 0x0000 */ struct _SLIST_ENTRY* Next;
  /* 0x0008 */ long __PADDING__[2];
} SLIST_ENTRY, *PSLIST_ENTRY; /* size: 0x0010 */

typedef struct _DEVICE_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned long Failed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned long ReadOnly : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned long Removable : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned long ConsoleIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned long ConsoleOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned long Input : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned long Output : 1; /* bit position: 6 */
  }; /* bitfield */
} DEVICE_FLAGS, *PDEVICE_FLAGS; /* size: 0x0004 */

typedef struct _stat64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_777[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_778;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stat64, *Pstat64; /* size: 0x0038 */

typedef struct _MAT2
{
  /* 0x0000 */ struct _FIXED eM11;
  /* 0x0004 */ struct _FIXED eM12;
  /* 0x0008 */ struct _FIXED eM21;
  /* 0x000c */ struct _FIXED eM22;
} MAT2, *PMAT2; /* size: 0x0010 */

class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_779[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,MD_INTERFACE *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_780;
  /* 0x0030 */ struct MD_INTERFACE* m_r;
}; /* size: 0x0038 */

typedef struct _PARTITION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0008 */ union _LARGE_INTEGER PartitionLength;
  /* 0x0010 */ unsigned long HiddenSectors;
  /* 0x0014 */ unsigned long PartitionNumber;
  /* 0x0018 */ unsigned char PartitionType;
  /* 0x0019 */ unsigned char BootIndicator;
  /* 0x001a */ unsigned char RecognizedPartition;
  /* 0x001b */ unsigned char RewritePartition;
  /* 0x001c */ long __PADDING__[1];
} PARTITION_INFORMATION, *PPARTITION_INFORMATION; /* size: 0x0020 */

typedef struct _DRIVE_LAYOUT_INFORMATION
{
  /* 0x0000 */ unsigned long PartitionCount;
  /* 0x0004 */ unsigned long Signature;
  /* 0x0008 */ struct _PARTITION_INFORMATION PartitionEntry[1];
} DRIVE_LAYOUT_INFORMATION, *PDRIVE_LAYOUT_INFORMATION; /* size: 0x0028 */

typedef struct __midl_frag1021_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1021_t, *P_midl_frag1021_t; /* size: 0x0038 */

typedef struct _MCA_EXCEPTION
{
  /* 0x0000 */ unsigned long VersionNumber;
  /* 0x0004 */ enum MCA_EXCEPTION_TYPE ExceptionType;
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long ProcessorNumber;
  /* 0x0014 */ unsigned long Reserved1;
  union
  {
    union
    {
      struct
      {
        /* 0x0018 */ unsigned char BankNumber;
        /* 0x0019 */ unsigned char Reserved2[7];
        /* 0x0020 */ union _MCI_STATS Status;
        /* 0x0028 */ union _MCI_ADDR Address;
        /* 0x0030 */ unsigned __int64 Misc;
      } /* size: 0x0020 */ Mca;
      struct
      {
        /* 0x0018 */ unsigned __int64 Address;
        /* 0x0020 */ unsigned __int64 Type;
      } /* size: 0x0010 */ Mce;
    }; /* size: 0x0020 */
  } /* size: 0x0020 */ u;
  /* 0x0038 */ unsigned long ExtCnt;
  /* 0x003c */ unsigned long Reserved3;
  /* 0x0040 */ unsigned __int64 ExtReg[24];
} MCA_EXCEPTION, *PMCA_EXCEPTION; /* size: 0x0100 */

typedef struct __midl_frag1733_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1733_t, *P_midl_frag1733_t; /* size: 0x0058 */

typedef struct _PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA
{
  /* 0x0000 */ unsigned long DeviceInstanceLength;
  /* 0x0004 */ long Padding_781;
  /* 0x0008 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA, *PPLUGPLAY_CONTROL_RETRIEVE_DOCK_DATA; /* size: 0x0010 */

typedef struct _PROCESS_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long HandleCount;
  /* 0x0004 */ unsigned long HandleCountHighWatermark;
} PROCESS_HANDLE_INFORMATION, *PPROCESS_HANDLE_INFORMATION; /* size: 0x0008 */

typedef struct _LOAD_ASDATA_TABLE
{
  /* 0x0000 */ void* Module;
  /* 0x0008 */ wchar_t* FilePath;
  /* 0x0010 */ unsigned __int64 Size;
  /* 0x0018 */ void* Handle;
  /* 0x0020 */ long RefCount;
  /* 0x0024 */ long Padding_782;
  /* 0x0028 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
} LOAD_ASDATA_TABLE, *PLOAD_ASDATA_TABLE; /* size: 0x0030 */

typedef struct _JOBOBJECT_CPU_RATE_CONTROL_INFORMATION
{
  /* 0x0000 */ unsigned long ControlFlags;
  union
  {
    /* 0x0004 */ unsigned long CpuRate;
    /* 0x0004 */ unsigned long Weight;
  }; /* size: 0x0004 */
} JOBOBJECT_CPU_RATE_CONTROL_INFORMATION, *PJOBOBJECT_CPU_RATE_CONTROL_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_STATUS
{
  /* 0x0000 */ unsigned char ACLineStatus;
  /* 0x0001 */ unsigned char BatteryFlag;
  /* 0x0002 */ unsigned char BatteryLifePercent;
  /* 0x0003 */ unsigned char Reserved1;
  /* 0x0004 */ unsigned long BatteryLifeTime;
  /* 0x0008 */ unsigned long BatteryFullLifeTime;
} SYSTEM_POWER_STATUS, *PSYSTEM_POWER_STATUS; /* size: 0x000c */

struct tagEMRNAMEDESCAPE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ int iEscape;
  /* 0x000c */ int cbDriver;
  /* 0x0010 */ int cbEscData;
  /* 0x0014 */ unsigned char EscData[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

typedef struct __vc_attributes::call_asAttribute
{
  /* 0x0000 */ void* local_proc;
} _vc_attributes::call_asAttribute, *P_vc_attributes::call_asAttribute; /* size: 0x0008 */

class InprocActpropsUnmarshaller
{
  /* 0x0000 */ class InprocActpropsUnmarshaller _InprocActUnmarshaller;
}; /* size: 0x0008 */

typedef struct _TOKEN_MANDATORY_LABEL
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES Label;
} TOKEN_MANDATORY_LABEL, *PTOKEN_MANDATORY_LABEL; /* size: 0x0010 */

class CBasedMSFPageTablePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CDIFat
{
  /* 0x0000 */ class CFatVector _fv;
  /* 0x0038 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0040 */ unsigned long _cfsTable;
  /* 0x0044 */ int _fDoingFixup;
  /* 0x0048 */ unsigned long _cUnmarked;
  /* 0x004c */ unsigned long _sectUnmarked[8];
  /* 0x006c */ unsigned long _sectMarkTo[8];
  /* 0x008c */ unsigned long _sectFree[8];
}; /* size: 0x00b0 */

class CMStream
{
  /* 0x0000 */ class CBasedILockBytesPtrPtr _pplstParent;
  /* 0x0008 */ class CBasedMSFPageTablePtr _pmpt;
  /* 0x0010 */ class CMSFHeader _hdr;
  /* 0x0214 */ long Padding_783;
  /* 0x0218 */ class CDirectory _dir;
  /* 0x0268 */ class CFat _fat;
  /* 0x02f0 */ class CDIFat _fatDif;
  /* 0x03a0 */ class CFat _fatMini;
  /* 0x0428 */ class CStreamCache _stmcDir;
  /* 0x04b8 */ class CStreamCache _stmcMiniFat;
  /* 0x0548 */ class CBasedDirectStreamPtr _pdsministream;
  /* 0x0550 */ class CBasedMStreamPtr _pmsShadow;
  /* 0x0558 */ class CBasedBytePtr _pCopySectBuf;
  /* 0x0560 */ const int _fIsScratch;
  /* 0x0564 */ int _fIsNoScratch;
  /* 0x0568 */ class CBasedMStreamPtr _pmsScratch;
  /* 0x0570 */ int _fIsNoSnapshot;
  /* 0x0574 */ int _fBlockWrite;
  /* 0x0578 */ int _fTruncate;
  /* 0x057c */ int _fBlockHeader;
  /* 0x0580 */ int _fNewConvert;
  /* 0x0584 */ int _fIsShadow;
  /* 0x0588 */ unsigned __int64 _ulParentSize;
  /* 0x0590 */ unsigned short _uSectorSize;
  /* 0x0592 */ unsigned short _uSectorShift;
  /* 0x0594 */ unsigned short _uSectorMask;
  /* 0x0596 */ char Padding_784[2];
  /* 0x0598 */ struct IMalloc* const _pMalloc;
  /* 0x05a0 */ union _ULARGE_INTEGER _uliLastKnownSizeForConsolidate;
}; /* size: 0x05a8 */

typedef struct _CERT_AUTHORITY_INFO_ACCESS
{
  /* 0x0000 */ unsigned long cAccDescr;
  /* 0x0004 */ long Padding_785;
  /* 0x0008 */ struct _CERT_ACCESS_DESCRIPTION* rgAccDescr;
} CERT_AUTHORITY_INFO_ACCESS, *PCERT_AUTHORITY_INFO_ACCESS; /* size: 0x0010 */

typedef struct _TXFS_LIST_TRANSACTION_LOCKED_FILES
{
  /* 0x0000 */ struct _GUID KtmTransaction;
  /* 0x0010 */ unsigned __int64 NumberOfFiles;
  /* 0x0018 */ unsigned __int64 BufferSizeRequired;
  /* 0x0020 */ unsigned __int64 Offset;
} TXFS_LIST_TRANSACTION_LOCKED_FILES, *PTXFS_LIST_TRANSACTION_LOCKED_FILES; /* size: 0x0028 */

typedef struct _SE_PACKAGE_CAPABILITY_INFO
{
  /* 0x0000 */ unsigned long Remaining;
  /* 0x0004 */ unsigned long PackageGrantedAccess;
  /* 0x0008 */ unsigned long CapabilityGrantedAccess;
  /* 0x000c */ unsigned long UserGroupsRemaining;
  /* 0x0010 */ unsigned char PackagesPresent;
  /* 0x0011 */ unsigned char PackageMatch;
  /* 0x0012 */ unsigned char CapabilityMatch;
  /* 0x0013 */ unsigned char LogPermissiveFailure;
} SE_PACKAGE_CAPABILITY_INFO, *PSE_PACKAGE_CAPABILITY_INFO; /* size: 0x0014 */

class CNFFMappedStream
{
  /* 0x0000 */ long Padding_786[2];
  /* 0x0008 */ class CNtfsStream* _pnffstm;
  struct /* bitfield */
  {
    /* 0x0010 */ int _fReserved : 1; /* bit position: 0 */
    /* 0x0010 */ int _fMappedStreamDirty : 1; /* bit position: 1 */
    /* 0x0010 */ int _fUpdateStreamHasLatest : 1; /* bit position: 2 */
    /* 0x0010 */ int _fCheckedForRollForward : 1; /* bit position: 3 */
    /* 0x0010 */ int _fStreamRenameSupported : 1; /* bit position: 4 */
  }; /* bitfield */
  /* 0x0014 */ long Padding_787;
  /* 0x0018 */ unsigned char* _pbMappedStream;
  /* 0x0020 */ unsigned long _cbMappedStream;
  /* 0x0024 */ unsigned long _cbMappedStreamActual;
  /* 0x0028 */ void* _pMappedStreamOwner;
  /* 0x0030 */ unsigned short _cUpdateStreamInUse;
  /* 0x0032 */ unsigned short _cLatestStreamInUse;
  /* 0x0034 */ long Padding_788;
  /* 0x0038 */ class CNtfsUpdateStreamForPropStg* _pstmUpdate;
}; /* size: 0x0040 */

struct tagREMQIRESULT
{
  /* 0x0000 */ HRESULT hResult;
  /* 0x0004 */ long Padding_789;
  /* 0x0008 */ struct tagSTDOBJREF std;
}; /* size: 0x0030 */

typedef struct _UNIVERSAL_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
} UNIVERSAL_NAME_INFOW, *PUNIVERSAL_NAME_INFOW; /* size: 0x0008 */

typedef struct _WORD_BLOB
{
  /* 0x0000 */ unsigned long clSize;
  /* 0x0004 */ unsigned short asData[1];
  /* 0x0006 */ char __PADDING__[2];
} WORD_BLOB, *PWORD_BLOB; /* size: 0x0008 */

typedef struct _PS_CPU_QUOTA_QUERY_INFORMATION
{
  /* 0x0000 */ unsigned long SessionCount;
  /* 0x0004 */ struct _PS_CPU_QUOTA_QUERY_ENTRY SessionInformation[1];
} PS_CPU_QUOTA_QUERY_INFORMATION, *PPS_CPU_QUOTA_QUERY_INFORMATION; /* size: 0x000c */

typedef struct _FSCTL_SET_INTEGRITY_INFORMATION_BUFFER
{
  /* 0x0000 */ unsigned short ChecksumAlgorithm;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Flags;
} FSCTL_SET_INTEGRITY_INFORMATION_BUFFER, *PFSCTL_SET_INTEGRITY_INFORMATION_BUFFER; /* size: 0x0008 */

class CGlobalFileStream
{
  /* 0x0000 */ long Padding_790[4];
  /* 0x0010 */ unsigned long _df;
  /* 0x0014 */ unsigned long _dwStartFlags;
  /* 0x0018 */ struct IMalloc* const _pMalloc;
  /* 0x0020 */ unsigned __int64 _ulPos;
  /* 0x0028 */ unsigned long _cbSector;
  /* 0x002c */ unsigned long _cbMappedFileSize;
  /* 0x0030 */ unsigned long _cbMappedCommitSize;
  /* 0x0034 */ unsigned long _dwMapFlags;
  /* 0x0038 */ wchar_t _awcPath[261];
  /* 0x0242 */ char Padding_791[2];
  /* 0x0244 */ unsigned long _dwTerminate;
  /* 0x0248 */ unsigned __int64 _ulHighWater;
  /* 0x0250 */ unsigned __int64 _ulFailurePoint;
}; /* size: 0x0258 */

typedef struct __vc_attributes::requesteditAttribute
{
} _vc_attributes::requesteditAttribute, *P_vc_attributes::requesteditAttribute; /* size: 0x0001 */

typedef struct _IMAGE_RELOCATION
{
  union
  {
    /* 0x0000 */ unsigned long VirtualAddress;
    /* 0x0000 */ unsigned long RelocCount;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned long SymbolTableIndex;
  /* 0x0008 */ unsigned short Type;
} IMAGE_RELOCATION, *PIMAGE_RELOCATION; /* size: 0x000a */

class CClassCache::CCollectable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CCollectable* NOT_COLLECTED;
      /* 0x0008 */ class CClassCache::CCollectable* _pNextCollectee;
      /* 0x0010 */ unsigned __int64 _qwTickLastTouched;
    }; /* size: 0x0018 */
    /* 0x0000 */ unsigned long _dwCollectionGracePeriod;
    /* 0x0000 */ unsigned long _dwCollectionFrequency;
  }; /* size: 0x0018 */
}; /* size: 0x0018 */

typedef struct _DRIVER_VERIFIER_THUNK_PAIRS
{
  /* 0x0000 */ void* PristineRoutine /* function */;
  /* 0x0008 */ void* NewRoutine /* function */;
} DRIVER_VERIFIER_THUNK_PAIRS, *PDRIVER_VERIFIER_THUNK_PAIRS; /* size: 0x0010 */

struct tagDDEML_MSG_HOOK_DATA
{
  /* 0x0000 */ unsigned __int64 uiLo;
  /* 0x0008 */ unsigned __int64 uiHi;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ unsigned long Data[8];
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct tagMONMSGSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ long Padding_792;
  /* 0x0008 */ struct HWND__* hwndTo;
  /* 0x0010 */ unsigned long dwTime;
  /* 0x0014 */ long Padding_793;
  /* 0x0018 */ void* hTask;
  /* 0x0020 */ unsigned int wMsg;
  /* 0x0024 */ long Padding_794;
  /* 0x0028 */ unsigned __int64 wParam;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ struct tagDDEML_MSG_HOOK_DATA dmhd;
}; /* size: 0x0070 */

typedef struct __MIDL_ILocalObjectExporter_0004
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oid;
} _MIDL_ILocalObjectExporter_0004, *P_MIDL_ILocalObjectExporter_0004; /* size: 0x0010 */

struct tagCHOOSECOLORA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_795;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HWND__* hInstance;
  /* 0x0018 */ unsigned long rgbResult;
  /* 0x001c */ long Padding_796;
  /* 0x0020 */ unsigned long* lpCustColors;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_797;
  /* 0x0030 */ __int64 lCustData;
  /* 0x0038 */ void* lpfnHook /* function */;
  /* 0x0040 */ const char* lpTemplateName;
}; /* size: 0x0048 */

typedef struct _SYSTEM_VERIFIER_TRIAGE_INFORMATION
{
  /* 0x0000 */ unsigned long ActionTaken;
  /* 0x0004 */ long Padding_798;
  /* 0x0008 */ unsigned __int64 CrashData[5];
  /* 0x0030 */ unsigned long VerifierMode;
  /* 0x0034 */ unsigned long VerifierFlags;
  /* 0x0038 */ wchar_t VerifierTargets[256];
} SYSTEM_VERIFIER_TRIAGE_INFORMATION, *PSYSTEM_VERIFIER_TRIAGE_INFORMATION; /* size: 0x0238 */

class CBlockHeader
{
  /* 0x0000 */ long Padding_799[4];
  /* 0x0010 */ unsigned __int64 _ulNext;
}; /* size: 0x0018 */

typedef struct __NCRYPT_SUPPORTED_LENGTHS
{
  /* 0x0000 */ unsigned long dwMinLength;
  /* 0x0004 */ unsigned long dwMaxLength;
  /* 0x0008 */ unsigned long dwIncrement;
  /* 0x000c */ unsigned long dwDefaultLength;
} _NCRYPT_SUPPORTED_LENGTHS, *P_NCRYPT_SUPPORTED_LENGTHS; /* size: 0x0010 */

class OXIDEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class OXIDEntry* _pNext;
      /* 0x0008 */ class OXIDEntry* _pPrev;
      /* 0x0010 */ unsigned long _dwPid;
      /* 0x0014 */ unsigned long _dwTid;
      /* 0x0018 */ struct _GUID _moxid;
      /* 0x0028 */ unsigned __int64 _mid;
      /* 0x0030 */ struct _GUID _ipidRundown;
      /* 0x0040 */ unsigned long _dwFlags;
      /* 0x0044 */ long Padding_800;
      /* 0x0048 */ struct HWND__* _hServerSTA;
      /* 0x0050 */ class CComApartment* _pParentApt;
      /* 0x0058 */ class CChannelHandle* volatile _pRpc;
      /* 0x0060 */ void* _pAuthId;
      /* 0x0068 */ struct tagDUALSTRINGARRAY* _pBinding;
      /* 0x0070 */ unsigned long _dwAuthnHint;
      /* 0x0074 */ unsigned long _dwAuthnSvc;
      /* 0x0078 */ class MIDEntry* _pMIDEntry;
      /* 0x0080 */ struct IRemUnknown* _pRUSTA;
      /* 0x0088 */ long _cRefs;
      /* 0x008c */ long Padding_801;
      /* 0x0090 */ void* _hComplete;
      /* 0x0098 */ long _cCalls;
      /* 0x009c */ long _cResolverRef;
      /* 0x00a0 */ unsigned long _dwExpiredTime;
      /* 0x00a4 */ struct tagCOMVERSION _version;
      /* 0x00a8 */ void* _pAppContainerServerSecurityDescriptor;
      /* 0x00b0 */ unsigned long _ulMarshaledTargetInfoLength;
      /* 0x00b4 */ long Padding_802;
      /* 0x00b8 */ unsigned char* _pMarshaledTargetInfo;
    }; /* size: 0x00b4 */
    /* 0x0000 */ class CPageAllocator _palloc;
  }; /* size: 0x00b4 */
}; /* size: 0x00c0 */

typedef struct _JOURNAL_RENAME_KEY_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_803;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ struct _UNICODE_STRING KeyKeyName;
} JOURNAL_RENAME_KEY_INFORMATION, *PJOURNAL_RENAME_KEY_INFORMATION; /* size: 0x0038 */

struct IBindHost
{
}; /* size: 0x0008 */

typedef struct _OSVERSIONINFOEX2W
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ wchar_t szCSDVersion[128];
  /* 0x0114 */ unsigned short wServicePackMajor;
  /* 0x0116 */ unsigned short wServicePackMinor;
  /* 0x0118 */ unsigned short wSuiteMask;
  /* 0x011a */ unsigned char wProductType;
  /* 0x011b */ unsigned char wReserved;
  /* 0x011c */ unsigned long wSuiteMaskEx;
  /* 0x0120 */ unsigned long wReserved2;
} OSVERSIONINFOEX2W, *POSVERSIONINFOEX2W; /* size: 0x0124 */

struct tagEMRSETVIEWPORTEXTEX
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagSIZE szlExtent;
}; /* size: 0x0010 */

typedef struct _KLDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ unsigned __int64 __Undefined1;
  /* 0x0018 */ unsigned __int64 __Undefined2;
  /* 0x0020 */ unsigned __int64 __Undefined3;
  /* 0x0028 */ unsigned __int64 NonPagedDebugInfo;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_804;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short __Undefined5;
  /* 0x0070 */ unsigned __int64 __Undefined6;
  /* 0x0078 */ unsigned long CheckSum;
  /* 0x007c */ unsigned long __padding1;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ unsigned long __padding2;
} KLDR_DATA_TABLE_ENTRY64, *PKLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _KLDR_DATA_TABLE_ENTRY32
{
  /* 0x0000 */ struct LIST_ENTRY32 InLoadOrderLinks;
  /* 0x0008 */ unsigned long __Undefined1;
  /* 0x000c */ unsigned long __Undefined2;
  /* 0x0010 */ unsigned long __Undefined3;
  /* 0x0014 */ unsigned long NonPagedDebugInfo;
  /* 0x0018 */ unsigned long DllBase;
  /* 0x001c */ unsigned long EntryPoint;
  /* 0x0020 */ unsigned long SizeOfImage;
  /* 0x0024 */ struct _STRING32 FullDllName;
  /* 0x002c */ struct _STRING32 BaseDllName;
  /* 0x0034 */ unsigned long Flags;
  /* 0x0038 */ unsigned short LoadCount;
  /* 0x003a */ unsigned short __Undefined5;
  /* 0x003c */ unsigned long __Undefined6;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned long TimeDateStamp;
} KLDR_DATA_TABLE_ENTRY32, *PKLDR_DATA_TABLE_ENTRY32; /* size: 0x0048 */

struct tagCOMBOBOXINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcItem;
  /* 0x0014 */ struct tagRECT rcButton;
  /* 0x0024 */ unsigned long stateButton;
  /* 0x0028 */ struct HWND__* hwndCombo;
  /* 0x0030 */ struct HWND__* hwndItem;
  /* 0x0038 */ struct HWND__* hwndList;
}; /* size: 0x0040 */

class CSurrogateActivator
{
  /* 0x0000 */ long Padding_805[2];
  /* 0x0008 */ struct _GUID m_processGuid;
  /* 0x0018 */ int m_fServicesConfigured;
  /* 0x001c */ unsigned long m_dwObjectCountAtIdleTime;
  /* 0x0000 */ class CSurrogateActivator* s_pCSA;
}; /* size: 0x0020 */

typedef struct _RPC_SECURITY_QOS_V2_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_806;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
} RPC_SECURITY_QOS_V2_A, *PRPC_SECURITY_QOS_V2_A; /* size: 0x0020 */

class CDirEntry
{
}; /* size: 0x0080 */

typedef struct _SYSTEM_VERIFIER_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Level;
  /* 0x0008 */ struct _UNICODE_STRING DriverName;
  /* 0x0018 */ unsigned long RaiseIrqls;
  /* 0x001c */ unsigned long AcquireSpinLocks;
  /* 0x0020 */ unsigned long SynchronizeExecutions;
  /* 0x0024 */ unsigned long AllocationsAttempted;
  /* 0x0028 */ unsigned long AllocationsSucceeded;
  /* 0x002c */ unsigned long AllocationsSucceededSpecialPool;
  /* 0x0030 */ unsigned long AllocationsWithNoTag;
  /* 0x0034 */ unsigned long TrimRequests;
  /* 0x0038 */ unsigned long Trims;
  /* 0x003c */ unsigned long AllocationsFailed;
  /* 0x0040 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0044 */ unsigned long Loads;
  /* 0x0048 */ unsigned long Unloads;
  /* 0x004c */ unsigned long UnTrackedPool;
  /* 0x0050 */ unsigned long CurrentPagedPoolAllocations;
  /* 0x0054 */ unsigned long CurrentNonPagedPoolAllocations;
  /* 0x0058 */ unsigned long PeakPagedPoolAllocations;
  /* 0x005c */ unsigned long PeakNonPagedPoolAllocations;
  /* 0x0060 */ unsigned __int64 PagedPoolUsageInBytes;
  /* 0x0068 */ unsigned __int64 NonPagedPoolUsageInBytes;
  /* 0x0070 */ unsigned __int64 PeakPagedPoolUsageInBytes;
  /* 0x0078 */ unsigned __int64 PeakNonPagedPoolUsageInBytes;
} SYSTEM_VERIFIER_INFORMATION, *PSYSTEM_VERIFIER_INFORMATION; /* size: 0x0080 */

typedef struct _SYSTEM_VERIFIER_COUNTERS_INFORMATION
{
  /* 0x0000 */ struct _SYSTEM_VERIFIER_INFORMATION Legacy;
  /* 0x0080 */ unsigned long RaiseIrqls;
  /* 0x0084 */ unsigned long AcquireSpinLocks;
  /* 0x0088 */ unsigned long SynchronizeExecutions;
  /* 0x008c */ unsigned long AllocationsWithNoTag;
  /* 0x0090 */ unsigned long AllocationsFailed;
  /* 0x0094 */ unsigned long AllocationsFailedDeliberately;
  /* 0x0098 */ unsigned __int64 LockedBytes;
  /* 0x00a0 */ unsigned __int64 PeakLockedBytes;
  /* 0x00a8 */ unsigned __int64 MappedLockedBytes;
  /* 0x00b0 */ unsigned __int64 PeakMappedLockedBytes;
  /* 0x00b8 */ unsigned __int64 MappedIoSpaceBytes;
  /* 0x00c0 */ unsigned __int64 PeakMappedIoSpaceBytes;
  /* 0x00c8 */ unsigned __int64 PagesForMdlBytes;
  /* 0x00d0 */ unsigned __int64 PeakPagesForMdlBytes;
  /* 0x00d8 */ unsigned __int64 ContiguousMemoryBytes;
  /* 0x00e0 */ unsigned __int64 PeakContiguousMemoryBytes;
} SYSTEM_VERIFIER_COUNTERS_INFORMATION, *PSYSTEM_VERIFIER_COUNTERS_INFORMATION; /* size: 0x00e8 */

struct tagJOYCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ wchar_t szPname[32];
  /* 0x0044 */ unsigned int wXmin;
  /* 0x0048 */ unsigned int wXmax;
  /* 0x004c */ unsigned int wYmin;
  /* 0x0050 */ unsigned int wYmax;
  /* 0x0054 */ unsigned int wZmin;
  /* 0x0058 */ unsigned int wZmax;
  /* 0x005c */ unsigned int wNumButtons;
  /* 0x0060 */ unsigned int wPeriodMin;
  /* 0x0064 */ unsigned int wPeriodMax;
  /* 0x0068 */ unsigned int wRmin;
  /* 0x006c */ unsigned int wRmax;
  /* 0x0070 */ unsigned int wUmin;
  /* 0x0074 */ unsigned int wUmax;
  /* 0x0078 */ unsigned int wVmin;
  /* 0x007c */ unsigned int wVmax;
  /* 0x0080 */ unsigned int wCaps;
  /* 0x0084 */ unsigned int wMaxAxes;
  /* 0x0088 */ unsigned int wNumAxes;
  /* 0x008c */ unsigned int wMaxButtons;
  /* 0x0090 */ wchar_t szRegKey[32];
  /* 0x00d0 */ wchar_t szOEMVxD[260];
  /* 0x02d8 */ struct _GUID ManufacturerGuid;
  /* 0x02e8 */ struct _GUID ProductGuid;
  /* 0x02f8 */ struct _GUID NameGuid;
}; /* size: 0x0308 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A
{
  /* 0x0000 */ struct _SEC_WINNT_AUTH_IDENTITY_A* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_807;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
} RPC_HTTP_TRANSPORT_CREDENTIALS_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_A; /* size: 0x0028 */

typedef struct _SEC_WINNT_AUTH_IDENTITY_A
{
  /* 0x0000 */ unsigned char* User;
  /* 0x0008 */ unsigned long UserLength;
  /* 0x000c */ long Padding_808;
  /* 0x0010 */ unsigned char* Domain;
  /* 0x0018 */ unsigned long DomainLength;
  /* 0x001c */ long Padding_809;
  /* 0x0020 */ unsigned char* Password;
  /* 0x0028 */ unsigned long PasswordLength;
  /* 0x002c */ unsigned long Flags;
} SEC_WINNT_AUTH_IDENTITY_A, *PSEC_WINNT_AUTH_IDENTITY_A; /* size: 0x0030 */

typedef struct _CERT_KEY_USAGE_RESTRICTION_INFO
{
  /* 0x0000 */ unsigned long cCertPolicyId;
  /* 0x0004 */ long Padding_810;
  /* 0x0008 */ struct _CERT_POLICY_ID* rgCertPolicyId;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB RestrictedKeyUsage;
} CERT_KEY_USAGE_RESTRICTION_INFO, *PCERT_KEY_USAGE_RESTRICTION_INFO; /* size: 0x0028 */

class CBasedGlobalFileStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct IXMLDOMCharacterData
{
}; /* size: 0x0008 */

struct tagSOLE_AUTHENTICATION_LIST
{
  /* 0x0000 */ unsigned long cAuthInfo;
  /* 0x0004 */ long Padding_811;
  /* 0x0008 */ struct tagSOLE_AUTHENTICATION_INFO* aAuthInfo;
}; /* size: 0x0010 */

typedef struct __vc_attributes::oleautomationAttribute
{
} _vc_attributes::oleautomationAttribute, *P_vc_attributes::oleautomationAttribute; /* size: 0x0001 */

class CHlprDialog
{
  /* 0x0000 */ long Padding_812[2];
  /* 0x0008 */ struct HINSTANCE__* m_hInstance;
}; /* size: 0x0010 */

class CBasedTSetMemberPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

struct SFreeBlock
{
  /* 0x0000 */ class CBasedFreeBlockPtr pfbNext;
}; /* size: 0x0008 */

typedef struct _CONNECTDLGSTRUCTW
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_813;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct _NETRESOURCEW* lpConnRes;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwDevNum;
} CONNECTDLGSTRUCTW, *PCONNECTDLGSTRUCTW; /* size: 0x0020 */

typedef struct _FILE_PIPE_LOCAL_INFORMATION
{
  /* 0x0000 */ unsigned long NamedPipeType;
  /* 0x0004 */ unsigned long NamedPipeConfiguration;
  /* 0x0008 */ unsigned long MaximumInstances;
  /* 0x000c */ unsigned long CurrentInstances;
  /* 0x0010 */ unsigned long InboundQuota;
  /* 0x0014 */ unsigned long ReadDataAvailable;
  /* 0x0018 */ unsigned long OutboundQuota;
  /* 0x001c */ unsigned long WriteQuotaAvailable;
  /* 0x0020 */ unsigned long NamedPipeState;
  /* 0x0024 */ unsigned long NamedPipeEnd;
} FILE_PIPE_LOCAL_INFORMATION, *PFILE_PIPE_LOCAL_INFORMATION; /* size: 0x0028 */

struct IStorageTest
{
}; /* size: 0x0008 */

typedef struct _PRIVKEYVER3
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlenP;
  /* 0x0008 */ unsigned long bitlenQ;
  /* 0x000c */ unsigned long bitlenJ;
  /* 0x0010 */ unsigned long bitlenX;
  /* 0x0014 */ struct _DSSSEED DSSSeed;
} PRIVKEYVER3, *PPRIVKEYVER3; /* size: 0x002c */

typedef struct __vc_attributes::atl::soap_namespaceAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::atl::soap_namespaceAttribute, *P_vc_attributes::atl::soap_namespaceAttribute; /* size: 0x0008 */

typedef struct _MUILANGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ unsigned char bUseUseMachineConfigList;
  /* 0x0009 */ char Padding_814[7];
  /* 0x0010 */ struct _MUIREGISTRYINFO* RegInfo;
  /* 0x0018 */ struct _MUILANGLISTNODE* Languages;
  /* 0x0020 */ unsigned __int64 ullMask;
  /* 0x0028 */ unsigned int uConsoleFlag;
  /* 0x002c */ wchar_t Checksum[10];
} MUILANGLIST, *PMUILANGLIST; /* size: 0x0040 */

class CBasedDocFilePtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct _MUIREGISTRYINFO
{
  /* 0x0000 */ unsigned int Owned;
  /* 0x0004 */ unsigned short InstallLanguageFallback[4];
  /* 0x000c */ unsigned long Generation;
  /* 0x0010 */ unsigned long ProcessGeneration;
  /* 0x0014 */ long Padding_815;
  /* 0x0018 */ struct _MUILANGUAGES* Installed;
  /* 0x0020 */ struct _MUISTRINGPOOL* Strings;
  /* 0x0028 */ struct _MUILANGCFGLIST* MachineConfig;
  /* 0x0030 */ struct _MUILANGCFGLIST* UserConfig;
  /* 0x0038 */ struct _MUILANGLIST* MachinePreferred;
  /* 0x0040 */ struct _MUILANGLIST* UserPreferred;
  /* 0x0048 */ struct _MUILANGLIST* ProcessPreferred;
  /* 0x0050 */ struct _MUILANGLIST* MergedUser;
  /* 0x0058 */ struct _MUILANGLIST* MergedMachine;
  /* 0x0060 */ struct _MUILANGLIST* MergedFallback;
  /* 0x0068 */ struct _MUIREGISTRYINFO* PrevRegInfo;
  /* 0x0070 */ unsigned long MUI_Locked;
  /* 0x0074 */ unsigned long MUI_SE;
  /* 0x0078 */ unsigned long MUI_NumberAllowed;
  /* 0x007c */ long Padding_816;
  /* 0x0080 */ wchar_t* MUI_AllowedLanguage;
  /* 0x0088 */ wchar_t* MUI_InstalledSKU;
  /* 0x0090 */ unsigned long cbInstalledSKU;
  /* 0x0094 */ unsigned long cbAllowedLanguage;
  /* 0x0098 */ wchar_t* MUI_DisallowedLanguage;
  /* 0x00a0 */ unsigned long cbDisallowedLanguage;
  /* 0x00a4 */ long __PADDING__[1];
} MUIREGISTRYINFO, *PMUIREGISTRYINFO; /* size: 0x00a8 */

typedef struct _MUISTRINGPOOL
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short MaxNumStrings;
  /* 0x0006 */ unsigned short NumStrings;
  /* 0x0008 */ unsigned short MaxNumCharsInPool;
  /* 0x000a */ unsigned short NumCharsInPool;
  /* 0x000c */ long Padding_817;
  /* 0x0010 */ short* Strings;
  /* 0x0018 */ wchar_t* Pool;
} MUISTRINGPOOL, *PMUISTRINGPOOL; /* size: 0x0020 */

typedef struct _BCryptBuffer
{
  /* 0x0000 */ unsigned long cbBuffer;
  /* 0x0004 */ unsigned long BufferType;
  /* 0x0008 */ void* pvBuffer;
} BCryptBuffer, *PBCryptBuffer; /* size: 0x0010 */

struct tagEMRSELECTOBJECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihObject;
}; /* size: 0x000c */

struct ISCMLocalActivator
{
}; /* size: 0x0008 */

struct IWinInetCacheHints2
{
}; /* size: 0x0008 */

typedef struct _MUILANGCFGLIST
{
  /* 0x0000 */ unsigned int TotalSize;
  /* 0x0004 */ unsigned short NumLanguages;
  /* 0x0006 */ unsigned short MaxNumLanguages;
  /* 0x0008 */ struct _MUILANGCFGNODE* LanguageConfigs;
} MUILANGCFGLIST, *PMUILANGCFGLIST; /* size: 0x0010 */

struct tagPOINTER_DEVICE_PROPERTY
{
  /* 0x0000 */ int logicalMin;
  /* 0x0004 */ int logicalMax;
  /* 0x0008 */ int physicalMin;
  /* 0x000c */ int physicalMax;
  /* 0x0010 */ unsigned int unit;
  /* 0x0014 */ unsigned int unitExponent;
  /* 0x0018 */ unsigned short usagePageId;
  /* 0x001a */ unsigned short usageId;
}; /* size: 0x001c */

typedef struct _MUILANGCFGNODE
{
  /* 0x0000 */ short LangSpec;
  /* 0x0002 */ unsigned short FallbackTypes;
  /* 0x0004 */ unsigned short Reserved;
  /* 0x0006 */ short FallbackSpecs[3];
} MUILANGCFGNODE, *PMUILANGCFGNODE; /* size: 0x000c */

class DefaultIBindStatusCallback
{
  /* 0x0000 */ long Padding_818[8];
  /* 0x0020 */ struct IBindStatusCallback* m_pibsc;
  /* 0x0028 */ long m_lRef;
  /* 0x002c */ long Padding_819;
  /* 0x0030 */ struct IBinding* m_pBinding;
  /* 0x0038 */ struct HWND__* m_hwndParent;
  /* 0x0040 */ struct HWND__* m_hDlg;
  /* 0x0048 */ unsigned long m_ulProgress;
  /* 0x004c */ unsigned long m_ulProgressMax;
  /* 0x0050 */ wchar_t m_szStatusText[260];
  /* 0x0258 */ int m_fShown;
}; /* size: 0x0260 */

class CTSSet
{
  /* 0x0000 */ class CBasedTSetMemberPtr _ptsmHead;
}; /* size: 0x0008 */

class CChildInstanceList
{
  /* 0x0000 */ class CBasedRevertablePtr _prvHead;
}; /* size: 0x0008 */

class CPubDocFile
{
  /* 0x0000 */ long Padding_820[22];
  /* 0x0058 */ class CTSSet _tss;
  /* 0x0060 */ class CBasedPubDocFilePtr _pdfParent;
  /* 0x0068 */ class CBasedDocFilePtr _pdf;
  /* 0x0070 */ class CChildInstanceList _cilChildren;
  /* 0x0078 */ unsigned short _cTransactedDepth;
  /* 0x007a */ unsigned short _wFlags;
  /* 0x007c */ long Padding_821;
  /* 0x0080 */ class CBasedMStreamPtr _pmsBase;
  /* 0x0088 */ unsigned long _sigMSF;
  /* 0x008c */ long _cReferences;
  /* 0x0090 */ class CBasedDFBasisPtr _pdfb;
}; /* size: 0x0098 */

typedef struct _CMSG_KEY_AGREE_KEY_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_822;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncryptedKey;
} CMSG_KEY_AGREE_KEY_ENCRYPT_INFO, *PCMSG_KEY_AGREE_KEY_ENCRYPT_INFO; /* size: 0x0018 */

typedef struct _MUILANGLISTNODE
{
  /* 0x0000 */ unsigned short LanguageType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ short LanguageSpec;
} MUILANGLISTNODE, *PMUILANGLISTNODE; /* size: 0x0006 */

typedef struct _NETCONNECTINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwSpeed;
  /* 0x000c */ unsigned long dwDelay;
  /* 0x0010 */ unsigned long dwOptDataSize;
} NETCONNECTINFOSTRUCT, *PNETCONNECTINFOSTRUCT; /* size: 0x0014 */

struct IPersistStream
{
}; /* size: 0x0008 */

typedef struct _FILE_STANDARD_LINK_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAccessibleLinks;
  /* 0x0004 */ unsigned long TotalNumberOfLinks;
  /* 0x0008 */ unsigned char DeletePending;
  /* 0x0009 */ unsigned char Directory;
  /* 0x000a */ char __PADDING__[2];
} FILE_STANDARD_LINK_INFORMATION, *PFILE_STANDARD_LINK_INFORMATION; /* size: 0x000c */

struct _ACTIVATION_CONTEXT_DATA_ASSEMBLY_INFORMATION;

typedef struct _CERT_SELECT_CHAIN_PARA
{
  /* 0x0000 */ void* hChainEngine;
  /* 0x0008 */ struct _FILETIME* pTime;
  /* 0x0010 */ void* hAdditionalStore;
  /* 0x0018 */ struct _CERT_CHAIN_PARA* pChainPara;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} CERT_SELECT_CHAIN_PARA, *PCERT_SELECT_CHAIN_PARA; /* size: 0x0028 */

typedef struct _RPC_BINDING_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_823;
  /* 0x0008 */ void* BindingH[1];
} RPC_BINDING_VECTOR, *PRPC_BINDING_VECTOR; /* size: 0x0010 */

struct IXMLDOMElement
{
}; /* size: 0x0008 */

struct POWERBROADCAST_SETTING
{
  /* 0x0000 */ struct _GUID PowerSetting;
  /* 0x0010 */ unsigned long DataLength;
  /* 0x0014 */ unsigned char Data[1];
  /* 0x0015 */ char __PADDING__[3];
}; /* size: 0x0018 */

struct IOleInPlaceFrame
{
}; /* size: 0x0008 */

typedef struct _CERT_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_824;
  /* 0x0008 */ struct _CTL_USAGE Usage;
} CERT_USAGE_MATCH, *PCERT_USAGE_MATCH; /* size: 0x0018 */

typedef struct _CERT_CHAIN_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_825;
  /* 0x0008 */ struct _CERT_USAGE_MATCH RequestedUsage;
} CERT_CHAIN_PARA, *PCERT_CHAIN_PARA; /* size: 0x0020 */

struct tagMENUGETOBJECTINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned int uPos;
  /* 0x0008 */ struct HMENU__* hmenu;
  /* 0x0010 */ void* riid;
  /* 0x0018 */ void* pvObj;
}; /* size: 0x0020 */

class CIDObject
{
  /* 0x0000 */ long Padding_826[2];
  /* 0x0008 */ struct SHashChain _pidChain;
  /* 0x0018 */ struct SHashChain _oidChain;
  /* 0x0028 */ unsigned long _dwState;
  /* 0x002c */ unsigned long _cRefs;
  /* 0x0030 */ struct IUnknown* _pServer;
  /* 0x0038 */ class CObjectContext* _pServerCtx;
  /* 0x0040 */ struct _GUID _oid;
  /* 0x0050 */ unsigned long _aptID;
  /* 0x0054 */ long Padding_827;
  /* 0x0058 */ class CStdWrapper* _pStdWrapper;
  /* 0x0060 */ class CStdIdentity* _pStdID;
  /* 0x0068 */ unsigned long _cCalls;
  /* 0x006c */ unsigned long _cLocks;
  /* 0x0070 */ struct SHashChain _oidUnpinReqChain;
  /* 0x0080 */ unsigned long _dwOidUnpinReqState;
  /* 0x0084 */ long Padding_828;
  /* 0x0088 */ void* _pvObjectTrackCookie;
  union
  {
    /* 0x0000 */ class CPageAllocator s_allocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cIDs;
  }; /* size: 0x0068 */
}; /* size: 0x0090 */

struct IWrapperInfo
{
}; /* size: 0x0008 */

struct IMAGE_COR20_HEADER
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned short MajorRuntimeVersion;
  /* 0x0006 */ unsigned short MinorRuntimeVersion;
  /* 0x0008 */ struct _IMAGE_DATA_DIRECTORY MetaData;
  /* 0x0010 */ unsigned long Flags;
  union
  {
    /* 0x0014 */ unsigned long EntryPointToken;
    /* 0x0014 */ unsigned long EntryPointRVA;
  }; /* size: 0x0004 */
  /* 0x0018 */ struct _IMAGE_DATA_DIRECTORY Resources;
  /* 0x0020 */ struct _IMAGE_DATA_DIRECTORY StrongNameSignature;
  /* 0x0028 */ struct _IMAGE_DATA_DIRECTORY CodeManagerTable;
  /* 0x0030 */ struct _IMAGE_DATA_DIRECTORY VTableFixups;
  /* 0x0038 */ struct _IMAGE_DATA_DIRECTORY ExportAddressTableJumps;
  /* 0x0040 */ struct _IMAGE_DATA_DIRECTORY ManagedNativeHeader;
}; /* size: 0x0048 */

struct tagEXTLOGPEN
{
  /* 0x0000 */ unsigned long elpPenStyle;
  /* 0x0004 */ unsigned long elpWidth;
  /* 0x0008 */ unsigned int elpBrushStyle;
  /* 0x000c */ unsigned long elpColor;
  /* 0x0010 */ unsigned __int64 elpHatch;
  /* 0x0018 */ unsigned long elpNumEntries;
  /* 0x001c */ unsigned long elpStyleEntry[1];
}; /* size: 0x0020 */

struct tagOIDData
{
  /* 0x0000 */ const struct _GUID* pmoid;
  /* 0x0008 */ unsigned long aptID;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct RPC_IF_ID_VECTOR
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_829;
  /* 0x0008 */ struct _RPC_IF_ID* IfId[1];
}; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<IMarshal>
{
  /* 0x0000 */ struct IMarshal* ptr_;
}; /* size: 0x0008 */

typedef struct _SERVICE_FAILURE_ACTIONSA
{
  /* 0x0000 */ unsigned long dwResetPeriod;
  /* 0x0004 */ long Padding_830;
  /* 0x0008 */ char* lpRebootMsg;
  /* 0x0010 */ char* lpCommand;
  /* 0x0018 */ unsigned long cActions;
  /* 0x001c */ long Padding_831;
  /* 0x0020 */ struct _SC_ACTION* lpsaActions;
} SERVICE_FAILURE_ACTIONSA, *PSERVICE_FAILURE_ACTIONSA; /* size: 0x0028 */

struct MOVE_FILE_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct PROCESSOR_IDLE_TIMES
{
  /* 0x0000 */ unsigned __int64 StartTime;
  /* 0x0008 */ unsigned __int64 EndTime;
  /* 0x0010 */ unsigned long Reserved[4];
}; /* size: 0x0020 */

typedef struct _tagStartParam
{
  /* 0x0000 */ struct _GUID iid;
  /* 0x0010 */ struct IBindCtx* pIBindCtx;
  /* 0x0018 */ struct IUnknown* pItf;
} tagStartParam, *PtagStartParam; /* size: 0x0020 */

struct Windows::Rtl::IRtlBlobProvider
{
}; /* size: 0x0008 */

typedef struct _SL_HWID_DEVICE_INFO
{
  /* 0x0000 */ unsigned long SizeBytes;
  /* 0x0004 */ unsigned char Type;
  /* 0x0005 */ unsigned char DeviceRemovalPolicy;
  /* 0x0006 */ unsigned char AuthenticationStatus;
  /* 0x0007 */ unsigned char Disposition;
  /* 0x0008 */ unsigned long DeviceNodeLevel;
  /* 0x000c */ struct _GUID Guid;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
} SL_HWID_DEVICE_INFO, *PSL_HWID_DEVICE_INFO; /* size: 0x0020 */

typedef struct _UNICODE_PREFIX_TABLE_ENTRY
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_832;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* CaseMatch;
  /* 0x0018 */ struct _RTL_SPLAY_LINKS Links;
  /* 0x0030 */ struct _UNICODE_STRING* Prefix;
} UNICODE_PREFIX_TABLE_ENTRY, *PUNICODE_PREFIX_TABLE_ENTRY; /* size: 0x0038 */

struct tagHIGHCONTRASTA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ char* lpszDefaultScheme;
}; /* size: 0x0010 */

typedef struct _DRIVER_INFO_5W
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_833;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ wchar_t* pEnvironment;
  /* 0x0018 */ wchar_t* pDriverPath;
  /* 0x0020 */ wchar_t* pDataFile;
  /* 0x0028 */ wchar_t* pConfigFile;
  /* 0x0030 */ unsigned long dwDriverAttributes;
  /* 0x0034 */ unsigned long dwConfigVersion;
  /* 0x0038 */ unsigned long dwDriverVersion;
  /* 0x003c */ long __PADDING__[1];
} DRIVER_INFO_5W, *PDRIVER_INFO_5W; /* size: 0x0040 */

typedef struct _SERVICE_NOTIFY_2W
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_834;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0040 */ unsigned long dwNotificationTriggered;
  /* 0x0044 */ long Padding_835;
  /* 0x0048 */ wchar_t* pszServiceNames;
} SERVICE_NOTIFY_2W, *PSERVICE_NOTIFY_2W; /* size: 0x0050 */

typedef struct _FILE_ALLOCATED_RANGE_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER Length;
} FILE_ALLOCATED_RANGE_BUFFER, *PFILE_ALLOCATED_RANGE_BUFFER; /* size: 0x0010 */

typedef struct _RASTERIZER_STATUS
{
  /* 0x0000 */ short nSize;
  /* 0x0002 */ short wFlags;
  /* 0x0004 */ short nLanguageID;
} RASTERIZER_STATUS, *PRASTERIZER_STATUS; /* size: 0x0006 */

struct tagSTYLESTRUCT
{
  /* 0x0000 */ unsigned long styleOld;
  /* 0x0004 */ unsigned long styleNew;
}; /* size: 0x0008 */

typedef struct _FILE_LAYOUT_NAME_ENTRY
{
  /* 0x0000 */ unsigned long NextNameOffset;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 ParentFileReferenceNumber;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ unsigned long Reserved;
  /* 0x0018 */ wchar_t FileName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_LAYOUT_NAME_ENTRY, *PFILE_LAYOUT_NAME_ENTRY; /* size: 0x0020 */

typedef struct _SYSTEM_SPECIAL_POOL_INFORMATION
{
  /* 0x0000 */ unsigned long PoolTag;
  /* 0x0004 */ unsigned long Flags;
} SYSTEM_SPECIAL_POOL_INFORMATION, *PSYSTEM_SPECIAL_POOL_INFORMATION; /* size: 0x0008 */

struct tagGESTUREINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwID;
  /* 0x000c */ long Padding_836;
  /* 0x0010 */ struct HWND__* hwndTarget;
  /* 0x0018 */ struct tagPOINTS ptsLocation;
  /* 0x001c */ unsigned long dwInstanceID;
  /* 0x0020 */ unsigned long dwSequenceID;
  /* 0x0024 */ long Padding_837;
  /* 0x0028 */ unsigned __int64 ullArguments;
  /* 0x0030 */ unsigned int cbExtraArgs;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

class Microsoft::WRL::ComPtr<CClipboardBroker>
{
  /* 0x0000 */ class CClipboardBroker* ptr_;
}; /* size: 0x0008 */

typedef struct _RTL_PROCESS_VERIFIER_OPTIONS
{
  /* 0x0000 */ unsigned long SizeStruct;
  /* 0x0004 */ unsigned long Option;
  /* 0x0008 */ unsigned char OptionData[1];
  /* 0x0009 */ char __PADDING__[3];
} RTL_PROCESS_VERIFIER_OPTIONS, *PRTL_PROCESS_VERIFIER_OPTIONS; /* size: 0x000c */

typedef struct _FILE_DIRECTORY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ wchar_t FileName[1];
  /* 0x0042 */ char __PADDING__[6];
} FILE_DIRECTORY_INFORMATION, *PFILE_DIRECTORY_INFORMATION; /* size: 0x0048 */

typedef struct _tagSOFTDISTINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwAdState;
  /* 0x000c */ long Padding_838;
  /* 0x0010 */ wchar_t* szTitle;
  /* 0x0018 */ wchar_t* szAbstract;
  /* 0x0020 */ wchar_t* szHREF;
  /* 0x0028 */ unsigned long dwInstalledVersionMS;
  /* 0x002c */ unsigned long dwInstalledVersionLS;
  /* 0x0030 */ unsigned long dwUpdateVersionMS;
  /* 0x0034 */ unsigned long dwUpdateVersionLS;
  /* 0x0038 */ unsigned long dwAdvertisedVersionMS;
  /* 0x003c */ unsigned long dwAdvertisedVersionLS;
  /* 0x0040 */ unsigned long dwReserved;
  /* 0x0044 */ long __PADDING__[1];
} tagSOFTDISTINFO, *PtagSOFTDISTINFO; /* size: 0x0048 */

struct tagStorageLayout
{
  /* 0x0000 */ unsigned long LayoutType;
  /* 0x0004 */ long Padding_839;
  /* 0x0008 */ wchar_t* pwcsElementName;
  /* 0x0010 */ union _LARGE_INTEGER cOffset;
  /* 0x0018 */ union _LARGE_INTEGER cBytes;
}; /* size: 0x0020 */

class CActivatableClassIdHashTable
{
}; /* size: 0x0028 */

typedef struct _BCRYPT_DSA_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
  /* 0x000c */ unsigned char Count[4];
  /* 0x0010 */ unsigned char Seed[20];
  /* 0x0024 */ unsigned char q[20];
} BCRYPT_DSA_PARAMETER_HEADER, *PBCRYPT_DSA_PARAMETER_HEADER; /* size: 0x0038 */

struct IInternalUnknown
{
}; /* size: 0x0008 */

typedef struct _RTL_UMS_CONTEXT
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY Link;
  /* 0x0008 */ long Padding_840[2];
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ void* Teb;
  /* 0x04e8 */ void* UserContext;
  union
  {
    struct /* bitfield */
    {
      /* 0x04f0 */ volatile unsigned long ScheduledThread : 1; /* bit position: 0 */
      /* 0x04f0 */ volatile unsigned long Suspended : 1; /* bit position: 1 */
      /* 0x04f0 */ volatile unsigned long VolatileContext : 1; /* bit position: 2 */
      /* 0x04f0 */ volatile unsigned long Terminated : 1; /* bit position: 3 */
      /* 0x04f0 */ volatile unsigned long DebugActive : 1; /* bit position: 4 */
      /* 0x04f0 */ volatile unsigned long RunningOnSelfThread : 1; /* bit position: 5 */
      /* 0x04f0 */ volatile unsigned long DenyRunningOnSelfThread : 1; /* bit position: 6 */
    }; /* bitfield */
    /* 0x04f0 */ volatile long Flags;
  }; /* size: 0x0004 */
  /* 0x04f4 */ long Padding_841;
  union
  {
    struct /* bitfield */
    {
      /* 0x04f8 */ volatile unsigned __int64 KernelUpdateLock : 2; /* bit position: 0 */
      /* 0x04f8 */ volatile unsigned __int64 PrimaryClientID : 62; /* bit position: 2 */
    }; /* bitfield */
    /* 0x04f8 */ volatile unsigned __int64 ContextLock;
  }; /* size: 0x0008 */
  /* 0x0500 */ struct _RTL_UMS_CONTEXT* PrimaryUmsContext;
  /* 0x0508 */ unsigned long SwitchCount;
  /* 0x050c */ unsigned long KernelYieldCount;
  /* 0x0510 */ unsigned long MixedYieldCount;
  /* 0x0514 */ unsigned long YieldCount;
  /* 0x0518 */ long __PADDING__[2];
} RTL_UMS_CONTEXT, *PRTL_UMS_CONTEXT; /* size: 0x0520 */

typedef struct _wfinddata32i64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long time_create;
  /* 0x0008 */ long time_access;
  /* 0x000c */ long time_write;
  /* 0x0010 */ __int64 size;
  /* 0x0018 */ wchar_t name[260];
} wfinddata32i64_t, *Pwfinddata32i64_t; /* size: 0x0220 */

typedef struct _CRYPT_BLOB_ARRAY
{
  /* 0x0000 */ unsigned long cBlob;
  /* 0x0004 */ long Padding_842;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgBlob;
} CRYPT_BLOB_ARRAY, *PCRYPT_BLOB_ARRAY; /* size: 0x0010 */

typedef struct _POOLED_USAGE_AND_LIMITS
{
  /* 0x0000 */ unsigned __int64 PeakPagedPoolUsage;
  /* 0x0008 */ unsigned __int64 PagedPoolUsage;
  /* 0x0010 */ unsigned __int64 PagedPoolLimit;
  /* 0x0018 */ unsigned __int64 PeakNonPagedPoolUsage;
  /* 0x0020 */ unsigned __int64 NonPagedPoolUsage;
  /* 0x0028 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0030 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0038 */ unsigned __int64 PagefileUsage;
  /* 0x0040 */ unsigned __int64 PagefileLimit;
} POOLED_USAGE_AND_LIMITS, *PPOOLED_USAGE_AND_LIMITS; /* size: 0x0048 */

typedef struct _RTL_AVL_TREE
{
  /* 0x0000 */ struct _RTL_BALANCED_NODE* Root;
} RTL_AVL_TREE, *PRTL_AVL_TREE; /* size: 0x0008 */

struct ILocalSystemActivator
{
}; /* size: 0x0008 */

typedef struct _OBJECT_DIRECTORY_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING Name;
  /* 0x0010 */ struct _UNICODE_STRING TypeName;
} OBJECT_DIRECTORY_INFORMATION, *POBJECT_DIRECTORY_INFORMATION; /* size: 0x0020 */

typedef struct _ACL_REVISION_INFORMATION
{
  /* 0x0000 */ unsigned long AclRevision;
} ACL_REVISION_INFORMATION, *PACL_REVISION_INFORMATION; /* size: 0x0004 */

class Microsoft::WRL::Details::RemoveIUnknownBase<CClipboardBroker>;

typedef struct _JOURNAL_CLIENT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER CurrentTimeStamp;
  /* 0x0010 */ unsigned __int64 RecordsToProcess;
  /* 0x0018 */ unsigned long RelativeFillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_CLIENT_INFORMATION, *PJOURNAL_CLIENT_INFORMATION; /* size: 0x0020 */

struct IXMLDOMImplementation
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_ECCKEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_ECCKEY_BLOB, *PBCRYPT_ECCKEY_BLOB; /* size: 0x0008 */

typedef struct _TP_TASK_CALLBACKS
{
  /* 0x0000 */ void* ExecuteCallback /* function */;
  /* 0x0008 */ void* Unposted /* function */;
} TP_TASK_CALLBACKS, *PTP_TASK_CALLBACKS; /* size: 0x0010 */

typedef struct _CRYPT_SMART_CARD_ROOT_INFO
{
  /* 0x0000 */ unsigned char rgbCardID[16];
  /* 0x0010 */ struct _ROOT_INFO_LUID luid;
} CRYPT_SMART_CARD_ROOT_INFO, *PCRYPT_SMART_CARD_ROOT_INFO; /* size: 0x0018 */

class Windows::Internal::StringReference
{
  /* 0x0000 */ struct HSTRING__* _hstring;
  /* 0x0008 */ struct HSTRING_HEADER _header;
}; /* size: 0x0020 */

struct IActivationContextInfo
{
}; /* size: 0x0008 */

typedef struct _FIND_NAME_HEADER
{
  /* 0x0000 */ unsigned short node_count;
  /* 0x0002 */ unsigned char reserved;
  /* 0x0003 */ unsigned char unique_group;
} FIND_NAME_HEADER, *PFIND_NAME_HEADER; /* size: 0x0004 */

struct IPipeByte
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IWeakReference,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>
{
  /* 0x0000 */ long Padding_843[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

struct _TP_CALLBACK_INSTANCE;

typedef struct _SAFER_CODE_PROPERTIES_V1
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwCheckFlags;
  /* 0x0008 */ const wchar_t* ImagePath;
  /* 0x0010 */ void* hImageFileHandle;
  /* 0x0018 */ unsigned long UrlZoneId;
  /* 0x001c */ unsigned char ImageHash[64];
  /* 0x005c */ unsigned long dwImageHashSize;
  /* 0x0060 */ union _LARGE_INTEGER ImageSize;
  /* 0x0068 */ unsigned int HashAlgorithm;
  /* 0x006c */ long Padding_844;
  /* 0x0070 */ unsigned char* pByteBlock;
  /* 0x0078 */ struct HWND__* hWndParent;
  /* 0x0080 */ unsigned long dwWVTUIChoice;
  /* 0x0084 */ long __PADDING__[1];
} SAFER_CODE_PROPERTIES_V1, *PSAFER_CODE_PROPERTIES_V1; /* size: 0x0088 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnTypeConst;

class CAggId
{
  /* 0x0000 */ long Padding_845[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_846;
  /* 0x0010 */ struct IUnknown* _punkInner;
  /* 0x0018 */ struct IMarshal* _pmshInner;
  /* 0x0020 */ class CStdIdentity* _pStdId;
  /* 0x0028 */ enum EffectiveUnmarshalingPolicy _policy;
}; /* size: 0x0030 */

struct IDropSourceQueryEx
{
}; /* size: 0x0008 */

typedef struct _TOKEN_USER_CLAIMS
{
  /* 0x0000 */ void* UserClaims;
} TOKEN_USER_CLAIMS, *PTOKEN_USER_CLAIMS; /* size: 0x0008 */

struct tagTITLEBARINFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcTitleBar;
  /* 0x0014 */ unsigned long rgstate[6];
  /* 0x002c */ struct tagRECT rgrect[6];
}; /* size: 0x008c */

typedef struct _RTL_TRACE_ENUMERATE
{
  /* 0x0000 */ struct _RTL_TRACE_DATABASE* Database;
  /* 0x0008 */ unsigned long Index;
  /* 0x000c */ long Padding_847;
  /* 0x0010 */ struct _RTL_TRACE_BLOCK* Block;
} RTL_TRACE_ENUMERATE, *PRTL_TRACE_ENUMERATE; /* size: 0x0018 */

struct HMIDIOUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagMSGBOXPARAMSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_848;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const char* lpszText;
  /* 0x0020 */ const char* lpszCaption;
  /* 0x0028 */ unsigned long dwStyle;
  /* 0x002c */ long Padding_849;
  /* 0x0030 */ const char* lpszIcon;
  /* 0x0038 */ unsigned __int64 dwContextHelpId;
  /* 0x0040 */ void* lpfnMsgBoxCallback /* function */;
  /* 0x0048 */ unsigned long dwLanguageId;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _SYSTEM_AUDIT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_ACE, *PSYSTEM_AUDIT_ACE; /* size: 0x000c */

struct NCryptProviderName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszComment;
}; /* size: 0x0010 */

struct tagEMRMODIFYWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
  /* 0x0020 */ unsigned long iMode;
}; /* size: 0x0024 */

typedef struct _REMOTE_LINK_TRACKING_INFORMATION_
{
  /* 0x0000 */ void* TargetFileObject;
  /* 0x0008 */ unsigned long TargetLinkTrackingInformationLength;
  /* 0x000c */ unsigned char TargetLinkTrackingInformationBuffer[1];
  /* 0x000d */ char __PADDING__[3];
} REMOTE_LINK_TRACKING_INFORMATION_, *PREMOTE_LINK_TRACKING_INFORMATION_; /* size: 0x0010 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >;

typedef struct __MIDL_XmitDefs_0001
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwClientThread;
} _MIDL_XmitDefs_0001, *P_MIDL_XmitDefs_0001; /* size: 0x0008 */

typedef struct __vc_attributes::atl::registration_scriptAttribute
{
  /* 0x0000 */ const char* script;
} _vc_attributes::atl::registration_scriptAttribute, *P_vc_attributes::atl::registration_scriptAttribute; /* size: 0x0008 */

struct tagEXTLOGFONTA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned long elfVersion;
  /* 0x00a0 */ unsigned long elfStyleSize;
  /* 0x00a4 */ unsigned long elfMatch;
  /* 0x00a8 */ unsigned long elfReserved;
  /* 0x00ac */ unsigned char elfVendorId[4];
  /* 0x00b0 */ unsigned long elfCulture;
  /* 0x00b4 */ struct tagPANOSE elfPanose;
  /* 0x00be */ char __PADDING__[2];
}; /* size: 0x00c0 */

typedef struct _RPC_PROTSEQ_VECTORA
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ long Padding_850;
  /* 0x0008 */ unsigned char* Protseq[1];
} RPC_PROTSEQ_VECTORA, *PRPC_PROTSEQ_VECTORA; /* size: 0x0010 */

typedef struct _FILE_NETWORK_PHYSICAL_NAME_INFORMATION
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NETWORK_PHYSICAL_NAME_INFORMATION, *PFILE_NETWORK_PHYSICAL_NAME_INFORMATION; /* size: 0x0008 */

struct IComCatalog2
{
}; /* size: 0x0008 */

typedef struct _CORE_PRINTER_DRIVERW
{
  /* 0x0000 */ struct _GUID CoreDriverGUID;
  /* 0x0010 */ struct _FILETIME ftDriverDate;
  /* 0x0018 */ unsigned __int64 dwlDriverVersion;
  /* 0x0020 */ wchar_t szPackageID[260];
} CORE_PRINTER_DRIVERW, *PCORE_PRINTER_DRIVERW; /* size: 0x0228 */

typedef struct _SHSTOCKICONINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_851;
  /* 0x0008 */ struct HICON__* hIcon;
  /* 0x0010 */ int iSysImageIndex;
  /* 0x0014 */ int iIcon;
  /* 0x0018 */ wchar_t szPath[260];
} SHSTOCKICONINFO, *PSHSTOCKICONINFO; /* size: 0x0220 */

typedef struct _tagPROTOCOLDATA
{
  /* 0x0000 */ unsigned long grfFlags;
  /* 0x0004 */ unsigned long dwState;
  /* 0x0008 */ void* pData;
  /* 0x0010 */ unsigned long cbData;
  /* 0x0014 */ long __PADDING__[1];
} tagPROTOCOLDATA, *PtagPROTOCOLDATA; /* size: 0x0018 */

struct SYSTEM_POWER_CAPABILITIES
{
  /* 0x0000 */ unsigned char PowerButtonPresent;
  /* 0x0001 */ unsigned char SleepButtonPresent;
  /* 0x0002 */ unsigned char LidPresent;
  /* 0x0003 */ unsigned char SystemS1;
  /* 0x0004 */ unsigned char SystemS2;
  /* 0x0005 */ unsigned char SystemS3;
  /* 0x0006 */ unsigned char SystemS4;
  /* 0x0007 */ unsigned char SystemS5;
  /* 0x0008 */ unsigned char HiberFilePresent;
  /* 0x0009 */ unsigned char FullWake;
  /* 0x000a */ unsigned char VideoDimPresent;
  /* 0x000b */ unsigned char ApmPresent;
  /* 0x000c */ unsigned char UpsPresent;
  /* 0x000d */ unsigned char ThermalControl;
  /* 0x000e */ unsigned char ProcessorThrottle;
  /* 0x000f */ unsigned char ProcessorMinThrottle;
  /* 0x0010 */ unsigned char ProcessorMaxThrottle;
  /* 0x0011 */ unsigned char FastSystemS4;
  /* 0x0012 */ unsigned char Hiberboot;
  /* 0x0013 */ unsigned char WakeAlarmPresent;
  /* 0x0014 */ unsigned char AoAc;
  /* 0x0015 */ unsigned char DiskSpinDown;
  /* 0x0016 */ unsigned char spare3[8];
  /* 0x001e */ unsigned char SystemBatteriesPresent;
  /* 0x001f */ unsigned char BatteriesAreShortTerm;
  /* 0x0020 */ struct BATTERY_REPORTING_SCALE BatteryScale[3];
  /* 0x0038 */ enum _SYSTEM_POWER_STATE AcOnLineWake;
  /* 0x003c */ enum _SYSTEM_POWER_STATE SoftLidWake;
  /* 0x0040 */ enum _SYSTEM_POWER_STATE RtcWake;
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinDeviceWakeState;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE DefaultLowLatencyWake;
}; /* size: 0x004c */

typedef struct _COVERAGE_SECTION_HEADER
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ unsigned long CoverageType;
  /* 0x0008 */ unsigned char MD5Hash[16];
  /* 0x0018 */ unsigned long CoverageSectionSize;
  /* 0x001c */ unsigned long CoverageVectorSize;
  /* 0x0020 */ unsigned long CoverageVectorOffset;
  /* 0x0024 */ unsigned long ExtraDataOffset;
} COVERAGE_SECTION_HEADER, *PCOVERAGE_SECTION_HEADER; /* size: 0x0028 */

typedef struct _FILE_FULL_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFORMATION, *PFILE_FULL_DIR_INFORMATION; /* size: 0x0048 */

typedef struct _EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ long Padding_852[2];
  /* 0x00a0 */ struct _CONTEXT ContextRecord;
  /* 0x0570 */ enum _EXCEPTION_LOG_TYPE Type;
  /* 0x0574 */ long Disposition;
  /* 0x0578 */ unsigned __int64 Thread;
  /* 0x0580 */ unsigned __int64 ControlPc;
  /* 0x0588 */ void* Handler;
} EXCEPTION_LOG, *PEXCEPTION_LOG; /* size: 0x0590 */

struct _STACK_TRACE_DATABASE;

struct POWER_STATE_HANDLER
{
  /* 0x0000 */ enum POWER_STATE_HANDLER_TYPE Type;
  /* 0x0004 */ unsigned char RtcWake;
  /* 0x0005 */ unsigned char Spare[3];
  /* 0x0008 */ void* Handler /* function */;
  /* 0x0010 */ void* Context;
}; /* size: 0x0018 */

typedef struct _TRIPLE_LIST_ITERATOR
{
  /* 0x0000 */ struct _TRIPLE_LIST* List;
  /* 0x0008 */ struct _TRIPLE_LIST_ENTRY* NextEntry;
  /* 0x0010 */ unsigned char ActiveList;
  /* 0x0011 */ unsigned char ProbeReads;
  /* 0x0012 */ unsigned char ReturnDataOffset;
  /* 0x0013 */ unsigned char Wow64List;
  /* 0x0014 */ long __PADDING__[1];
} TRIPLE_LIST_ITERATOR, *PTRIPLE_LIST_ITERATOR; /* size: 0x0018 */

class CGIPMessageParam
{
  /* 0x0000 */ enum MessageParamKind Kind;
  /* 0x0004 */ long Padding_853[3];
  /* 0x0010 */ long m_cRefs;
  /* 0x0014 */ unsigned long m_dwCookie;
  /* 0x0018 */ struct _GUID m_causalityId;
}; /* size: 0x0028 */

struct tagARRAYDESC
{
  /* 0x0000 */ struct tagTYPEDESC tdescElem;
  /* 0x0010 */ unsigned short cDims;
  /* 0x0012 */ char Padding_854[2];
  /* 0x0014 */ struct tagSAFEARRAYBOUND rgbounds[1];
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<14>,IUnknown,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0010 */

struct tagAXISINFOW
{
  /* 0x0000 */ long axMinValue;
  /* 0x0004 */ long axMaxValue;
  /* 0x0008 */ wchar_t axAxisName[16];
}; /* size: 0x0028 */

struct tagAXESLISTW
{
  /* 0x0000 */ unsigned long axlReserved;
  /* 0x0004 */ unsigned long axlNumAxes;
  /* 0x0008 */ struct tagAXISINFOW axlAxisInfo[16];
}; /* size: 0x0288 */

typedef struct _CM_COMPONENT_INFORMATION
{
  /* 0x0000 */ struct _DEVICE_FLAGS Flags;
  /* 0x0004 */ unsigned long Version;
  /* 0x0008 */ unsigned long Key;
  /* 0x000c */ long Padding_855;
  /* 0x0010 */ unsigned __int64 AffinityMask;
} CM_COMPONENT_INFORMATION, *PCM_COMPONENT_INFORMATION; /* size: 0x0018 */

typedef struct _TOKEN_APPCONTAINER_INFORMATION
{
  /* 0x0000 */ void* TokenAppContainer;
} TOKEN_APPCONTAINER_INFORMATION, *PTOKEN_APPCONTAINER_INFORMATION; /* size: 0x0008 */

typedef struct _ICONINFOEXW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
  /* 0x0020 */ unsigned short wResID;
  /* 0x0022 */ wchar_t szModName[260];
  /* 0x022a */ wchar_t szResName[260];
  /* 0x0432 */ char __PADDING__[6];
} ICONINFOEXW, *PICONINFOEXW; /* size: 0x0438 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;

struct HBITMAP__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IInternetBindInfoEx
{
}; /* size: 0x0008 */

typedef struct _PO_WAKE_SOURCE_TIMER
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ struct _DIAGNOSTIC_BUFFER Reason;
} PO_WAKE_SOURCE_TIMER, *PPO_WAKE_SOURCE_TIMER; /* size: 0x0030 */

typedef struct _PROCESS_BASIC_INFORMATION64
{
  /* 0x0000 */ long ExitStatus;
  /* 0x0004 */ unsigned int Pad1;
  /* 0x0008 */ unsigned __int64 PebBaseAddress;
  /* 0x0010 */ unsigned __int64 AffinityMask;
  /* 0x0018 */ long BasePriority;
  /* 0x001c */ unsigned int Pad2;
  /* 0x0020 */ unsigned __int64 UniqueProcessId;
  /* 0x0028 */ unsigned __int64 InheritedFromUniqueProcessId;
} PROCESS_BASIC_INFORMATION64, *PPROCESS_BASIC_INFORMATION64; /* size: 0x0030 */

typedef struct _OBJECT_TYPE_LIST
{
  /* 0x0000 */ unsigned short Level;
  /* 0x0002 */ unsigned short Sbz;
  /* 0x0004 */ long Padding_856;
  /* 0x0008 */ struct _GUID* ObjectType;
} OBJECT_TYPE_LIST, *POBJECT_TYPE_LIST; /* size: 0x0010 */

typedef struct _ATOM_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfAtoms;
  /* 0x0004 */ unsigned short Atoms[1];
  /* 0x0006 */ char __PADDING__[2];
} ATOM_TABLE_INFORMATION, *PATOM_TABLE_INFORMATION; /* size: 0x0008 */

typedef struct _DISCDLGSTRUCTA
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ long Padding_857;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0018 */ char* lpRemoteName;
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ long __PADDING__[1];
} DISCDLGSTRUCTA, *PDISCDLGSTRUCTA; /* size: 0x0028 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorNumber;
  /* 0x0004 */ unsigned long StateCount;
  /* 0x0008 */ struct _SYSTEM_PROCESSOR_PERFORMANCE_HITCOUNT States[1];
} SYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_STATE_DISTRIBUTION; /* size: 0x0010 */

struct Microsoft::WRL::Wrappers::HandleTraits::HANDLENullTraits
{
}; /* size: 0x0001 */

typedef struct _THREAD_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_858;
  union
  {
    /* 0x0008 */ void* NewTlsData;
    /* 0x0008 */ void* OldTlsData;
  }; /* size: 0x0008 */
  /* 0x0010 */ void* ThreadId;
} THREAD_TLS_INFORMATION, *PTHREAD_TLS_INFORMATION; /* size: 0x0018 */

typedef struct _PROCESS_TLS_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long OperationType;
  /* 0x0008 */ unsigned long ThreadDataCount;
  union
  {
    /* 0x000c */ unsigned long TlsIndex;
    /* 0x000c */ unsigned long PreviousCount;
  }; /* size: 0x0004 */
  /* 0x0010 */ struct _THREAD_TLS_INFORMATION ThreadData[1];
} PROCESS_TLS_INFORMATION, *PPROCESS_TLS_INFORMATION; /* size: 0x0028 */

struct IWinRTServerInfo
{
}; /* size: 0x0008 */

typedef struct _OCSP_SIGNED_REQUEST_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _OCSP_SIGNATURE_INFO* pOptionalSignatureInfo;
} OCSP_SIGNED_REQUEST_INFO, *POCSP_SIGNED_REQUEST_INFO; /* size: 0x0018 */

struct tagEMRSETTEXTCOLOR
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long crColor;
}; /* size: 0x000c */

typedef struct _STORAGE_PRIORITY_HINT_SUPPORT
{
  /* 0x0000 */ unsigned long SupportFlags;
} STORAGE_PRIORITY_HINT_SUPPORT, *PSTORAGE_PRIORITY_HINT_SUPPORT; /* size: 0x0004 */

typedef struct _FILE_REMOTE_PROTOCOL_INFORMATION
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureSize;
  /* 0x0004 */ unsigned long Protocol;
  /* 0x0008 */ unsigned short ProtocolMajorVersion;
  /* 0x000a */ unsigned short ProtocolMinorVersion;
  /* 0x000c */ unsigned short ProtocolRevision;
  /* 0x000e */ unsigned short Reserved;
  /* 0x0010 */ unsigned long Flags;
  struct
  {
    /* 0x0014 */ unsigned long Reserved[8];
  } /* size: 0x0020 */ GenericReserved;
  union
  {
    union
    {
      struct
      {
        struct
        {
          /* 0x0034 */ unsigned long Capabilities;
        } /* size: 0x0004 */ Server;
        struct
        {
          /* 0x0038 */ unsigned long Capabilities;
          /* 0x003c */ unsigned long CachingFlags;
        } /* size: 0x0008 */ Share;
      } /* size: 0x000c */ Smb2;
      /* 0x0034 */ unsigned long Reserved[16];
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ ProtocolSpecific;
} FILE_REMOTE_PROTOCOL_INFORMATION, *PFILE_REMOTE_PROTOCOL_INFORMATION; /* size: 0x0074 */

struct tagMONITORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcMonitor;
  /* 0x0014 */ struct tagRECT rcWork;
  /* 0x0024 */ unsigned long dwFlags;
}; /* size: 0x0028 */

typedef struct _TOKEN_STATISTICS
{
  /* 0x0000 */ struct _LUID TokenId;
  /* 0x0008 */ struct _LUID AuthenticationId;
  /* 0x0010 */ union _LARGE_INTEGER ExpirationTime;
  /* 0x0018 */ enum _TOKEN_TYPE TokenType;
  /* 0x001c */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0020 */ unsigned long DynamicCharged;
  /* 0x0024 */ unsigned long DynamicAvailable;
  /* 0x0028 */ unsigned long GroupCount;
  /* 0x002c */ unsigned long PrivilegeCount;
  /* 0x0030 */ struct _LUID ModifiedId;
} TOKEN_STATISTICS, *PTOKEN_STATISTICS; /* size: 0x0038 */

struct IDataAdviseHolder
{
}; /* size: 0x0008 */

struct IZoneIdentifier
{
}; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::SRWLock
{
  /* 0x0000 */ struct _RTL_SRWLOCK SRWLock_;
}; /* size: 0x0008 */

struct IXMLDOMNode
{
}; /* size: 0x0008 */

typedef struct _RPC_SECURITY_QOS_V3_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_859;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
} RPC_SECURITY_QOS_V3_W, *PRPC_SECURITY_QOS_V3_W; /* size: 0x0028 */

typedef struct _VM_COUNTERS_EX
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_860;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
  /* 0x0058 */ unsigned __int64 PrivateUsage;
} VM_COUNTERS_EX, *PVM_COUNTERS_EX; /* size: 0x0060 */

typedef struct _CERT_BASIC_CONSTRAINTS2_INFO
{
  /* 0x0000 */ int fCA;
  /* 0x0004 */ int fPathLenConstraint;
  /* 0x0008 */ unsigned long dwPathLenConstraint;
} CERT_BASIC_CONSTRAINTS2_INFO, *PCERT_BASIC_CONSTRAINTS2_INFO; /* size: 0x000c */

struct IHttpNegotiate3
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_ACPI_AUDIT_INFORMATION
{
  /* 0x0000 */ unsigned long RsdpCount;
  struct /* bitfield */
  {
    /* 0x0004 */ unsigned long SameRsdt : 1; /* bit position: 0 */
    /* 0x0004 */ unsigned long SlicPresent : 1; /* bit position: 1 */
    /* 0x0004 */ unsigned long SlicDifferent : 1; /* bit position: 2 */
  }; /* bitfield */
} SYSTEM_ACPI_AUDIT_INFORMATION, *PSYSTEM_ACPI_AUDIT_INFORMATION; /* size: 0x0008 */

typedef struct _CRYPTPROTECT_PROMPTSTRUCT
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwPromptFlags;
  /* 0x0008 */ struct HWND__* hwndApp;
  /* 0x0010 */ const wchar_t* szPrompt;
} CRYPTPROTECT_PROMPTSTRUCT, *PCRYPTPROTECT_PROMPTSTRUCT; /* size: 0x0018 */

struct tagEMRLINETO
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptl;
}; /* size: 0x0010 */

typedef struct _stat64i32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_861[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat64i32, *Pstat64i32; /* size: 0x0030 */

struct tagMDICREATESTRUCTW
{
  /* 0x0000 */ const wchar_t* szClass;
  /* 0x0008 */ const wchar_t* szTitle;
  /* 0x0010 */ void* hOwner;
  /* 0x0018 */ int x;
  /* 0x001c */ int y;
  /* 0x0020 */ int cx;
  /* 0x0024 */ int cy;
  /* 0x0028 */ unsigned long style;
  /* 0x002c */ long Padding_862;
  /* 0x0030 */ __int64 lParam;
}; /* size: 0x0038 */

typedef struct _XSTATE_CONTEXT
{
  /* 0x0000 */ unsigned __int64 Mask;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ unsigned long Reserved1;
  /* 0x0010 */ struct _XSAVE_AREA* Area;
  /* 0x0018 */ void* Buffer;
} XSTATE_CONTEXT, *PXSTATE_CONTEXT; /* size: 0x0020 */

struct PPM_IDLE_STATE_ACCOUNTING
{
  /* 0x0000 */ unsigned long IdleTransitions;
  /* 0x0004 */ unsigned long FailedTransitions;
  /* 0x0008 */ unsigned long InvalidBucketIndex;
  /* 0x000c */ long Padding_863;
  /* 0x0010 */ unsigned __int64 TotalTime;
  /* 0x0018 */ unsigned long IdleTimeBuckets[6];
}; /* size: 0x0030 */

struct PPM_IDLE_ACCOUNTING
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ long Padding_864;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING State[1];
}; /* size: 0x0048 */

class CCtxPropHashTable
{
}; /* size: 0x0028 */

struct tagRemBRUSH
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

typedef struct _LDR_DATA_TABLE_ENTRY64
{
  /* 0x0000 */ struct LIST_ENTRY64 InLoadOrderLinks;
  /* 0x0010 */ struct LIST_ENTRY64 InMemoryOrderLinks;
  /* 0x0020 */ struct LIST_ENTRY64 InInitializationOrderLinks;
  /* 0x0030 */ unsigned __int64 DllBase;
  /* 0x0038 */ unsigned __int64 EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_865;
  /* 0x0048 */ struct _STRING64 FullDllName;
  /* 0x0058 */ struct _STRING64 BaseDllName;
  /* 0x0068 */ unsigned long Flags;
  /* 0x006c */ unsigned short LoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  union
  {
    /* 0x0070 */ struct LIST_ENTRY64 HashLinks;
    struct
    {
      /* 0x0070 */ unsigned __int64 SectionPointer;
      /* 0x0078 */ unsigned long CheckSum;
    }; /* size: 0x000c */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0080 */ unsigned long TimeDateStamp;
    /* 0x0080 */ unsigned __int64 LoadedImports;
  }; /* size: 0x0008 */
} LDR_DATA_TABLE_ENTRY64, *PLDR_DATA_TABLE_ENTRY64; /* size: 0x0088 */

typedef struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM
{
  /* 0x0000 */ unsigned long dwDataType;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char* pData;
} SERVICE_TRIGGER_SPECIFIC_DATA_ITEM, *PSERVICE_TRIGGER_SPECIFIC_DATA_ITEM; /* size: 0x0010 */

struct tagNEWTEXTMETRICW
{
  /* 0x0000 */ long tmHeight;
  /* 0x0004 */ long tmAscent;
  /* 0x0008 */ long tmDescent;
  /* 0x000c */ long tmInternalLeading;
  /* 0x0010 */ long tmExternalLeading;
  /* 0x0014 */ long tmAveCharWidth;
  /* 0x0018 */ long tmMaxCharWidth;
  /* 0x001c */ long tmWeight;
  /* 0x0020 */ long tmOverhang;
  /* 0x0024 */ long tmDigitizedAspectX;
  /* 0x0028 */ long tmDigitizedAspectY;
  /* 0x002c */ wchar_t tmFirstChar;
  /* 0x002e */ wchar_t tmLastChar;
  /* 0x0030 */ wchar_t tmDefaultChar;
  /* 0x0032 */ wchar_t tmBreakChar;
  /* 0x0034 */ unsigned char tmItalic;
  /* 0x0035 */ unsigned char tmUnderlined;
  /* 0x0036 */ unsigned char tmStruckOut;
  /* 0x0037 */ unsigned char tmPitchAndFamily;
  /* 0x0038 */ unsigned char tmCharSet;
  /* 0x0039 */ char Padding_866[3];
  /* 0x003c */ unsigned long ntmFlags;
  /* 0x0040 */ unsigned int ntmSizeEM;
  /* 0x0044 */ unsigned int ntmCellHeight;
  /* 0x0048 */ unsigned int ntmAvgWidth;
}; /* size: 0x004c */

struct tagNEWTEXTMETRICEXW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICW ntmTm;
  /* 0x004c */ struct tagFONTSIGNATURE ntmFontSig;
}; /* size: 0x0064 */

typedef struct _CERT_LOGOTYPE_EXT_INFO
{
  /* 0x0000 */ unsigned long cCommunityLogo;
  /* 0x0004 */ long Padding_867;
  /* 0x0008 */ struct _CERT_LOGOTYPE_INFO* rgCommunityLogo;
  /* 0x0010 */ struct _CERT_LOGOTYPE_INFO* pIssuerLogo;
  /* 0x0018 */ struct _CERT_LOGOTYPE_INFO* pSubjectLogo;
  /* 0x0020 */ unsigned long cOtherLogo;
  /* 0x0024 */ long Padding_868;
  /* 0x0028 */ struct _CERT_OTHER_LOGOTYPE_INFO* rgOtherLogo;
} CERT_LOGOTYPE_EXT_INFO, *PCERT_LOGOTYPE_EXT_INFO; /* size: 0x0030 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT
{
  /* 0x0000 */ void* ResolutionContext;
  /* 0x0008 */ unsigned __int64 RootIndex;
  /* 0x0010 */ unsigned char CancelResolution;
  /* 0x0011 */ unsigned char NoMoreEntries;
  /* 0x0012 */ char Padding_869[6];
  /* 0x0018 */ struct _UNICODE_STRING Root;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT; /* size: 0x0028 */

typedef struct _INSTALLDATA
{
  /* 0x0000 */ enum _INSTALLSPECTYPE Type;
  /* 0x0004 */ long Padding_870;
  /* 0x0008 */ union _INSTALLSPEC Spec;
} INSTALLDATA, *PINSTALLDATA; /* size: 0x0020 */

class Windows::AutoOperatorAmpersandConstHelper<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;

class CStackBuffer
{
  /* 0x0000 */ unsigned char* _pbHeapBuf;
  /* 0x0008 */ unsigned long _cElements;
  /* 0x000c */ long Padding_871;
  /* 0x0010 */ unsigned char* _pbStackBuf;
  /* 0x0018 */ unsigned long _cbElement;
}; /* size: 0x0020 */

typedef struct _NOTIFYICONIDENTIFIER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_872;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ struct _GUID guidItem;
  /* 0x0024 */ long __PADDING__[1];
} NOTIFYICONIDENTIFIER, *PNOTIFYICONIDENTIFIER; /* size: 0x0028 */

typedef struct _FP_IEEE_VALUE
{
  union
  {
    union
    {
      /* 0x0000 */ short I16Value;
      /* 0x0000 */ unsigned short U16Value;
      /* 0x0000 */ long I32Value;
      /* 0x0000 */ unsigned long U32Value;
      /* 0x0000 */ void* StringValue;
      /* 0x0000 */ unsigned long CompareValue;
      /* 0x0000 */ struct _FP_32 Fp32Value;
      /* 0x0000 */ union _LARGE_INTEGER I64Value;
      /* 0x0000 */ union _ULARGE_INTEGER U64Value;
      /* 0x0000 */ struct _FP_64 Fp64Value;
      /* 0x0000 */ struct _FP_80 Fp80Value;
      /* 0x0000 */ struct _FP_128 Fp128Value;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ Value;
  struct
  {
    struct /* bitfield */
    {
      /* 0x0010 */ unsigned long RoundingMode : 2; /* bit position: 0 */
      /* 0x0010 */ unsigned long Inexact : 1; /* bit position: 2 */
      /* 0x0010 */ unsigned long Underflow : 1; /* bit position: 3 */
      /* 0x0010 */ unsigned long Overflow : 1; /* bit position: 4 */
      /* 0x0010 */ unsigned long ZeroDivide : 1; /* bit position: 5 */
      /* 0x0010 */ unsigned long InvalidOperation : 1; /* bit position: 6 */
      /* 0x0010 */ unsigned long OperandValid : 1; /* bit position: 7 */
      /* 0x0010 */ unsigned long Format : 4; /* bit position: 8 */
      /* 0x0010 */ unsigned long Precision : 4; /* bit position: 12 */
      /* 0x0010 */ unsigned long Operation : 12; /* bit position: 16 */
      /* 0x0010 */ unsigned long Spare : 3; /* bit position: 28 */
      /* 0x0010 */ unsigned long HardwareException : 1; /* bit position: 31 */
    }; /* bitfield */
  } /* size: 0x0004 */ Control;
  /* 0x0014 */ long __PADDING__[1];
} FP_IEEE_VALUE, *PFP_IEEE_VALUE; /* size: 0x0018 */

typedef struct _CRL_REVOCATION_INFO
{
  /* 0x0000 */ struct _CRL_ENTRY* pCrlEntry;
  /* 0x0008 */ const struct _CRL_CONTEXT* pCrlContext;
  /* 0x0010 */ const struct _CERT_CHAIN_CONTEXT* pCrlIssuerChain;
} CRL_REVOCATION_INFO, *PCRL_REVOCATION_INFO; /* size: 0x0018 */

struct midievent_tag
{
  /* 0x0000 */ unsigned long dwDeltaTime;
  /* 0x0004 */ unsigned long dwStreamID;
  /* 0x0008 */ unsigned long dwEvent;
  /* 0x000c */ unsigned long dwParms[1];
}; /* size: 0x0010 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_ENTRY
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long NameOffset : 31; /* bit position: 0 */
      /* 0x0000 */ unsigned long NameIsString : 1; /* bit position: 31 */
    }; /* bitfield */
    /* 0x0000 */ unsigned long Name;
    /* 0x0000 */ unsigned short Id;
  }; /* size: 0x0004 */
  union
  {
    /* 0x0004 */ unsigned long OffsetToData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long OffsetToDirectory : 31; /* bit position: 0 */
      /* 0x0004 */ unsigned long DataIsDirectory : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_RESOURCE_DIRECTORY_ENTRY, *PIMAGE_RESOURCE_DIRECTORY_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_REGISTRY_QUOTA_INFORMATION
{
  /* 0x0000 */ unsigned long RegistryQuotaAllowed;
  /* 0x0004 */ unsigned long RegistryQuotaUsed;
  /* 0x0008 */ unsigned __int64 PagedPoolSize;
} SYSTEM_REGISTRY_QUOTA_INFORMATION, *PSYSTEM_REGISTRY_QUOTA_INFORMATION; /* size: 0x0010 */

typedef struct _REMOTE_REPLY_SCM_INFO
{
  /* 0x0000 */ unsigned __int64 Oxid;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pdsaOxidBindings;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long authnHint;
  /* 0x0024 */ struct tagCOMVERSION serverVersion;
} REMOTE_REPLY_SCM_INFO, *PREMOTE_REPLY_SCM_INFO; /* size: 0x0028 */

struct IEnumFORMATETC
{
}; /* size: 0x0008 */

typedef struct _ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ enum ACTCTX_REQUESTED_RUN_LEVEL RunLevel;
  /* 0x0008 */ unsigned long UiAccess;
} ACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION, *PACTIVATION_CONTEXT_RUN_LEVEL_INFORMATION; /* size: 0x000c */

struct IMarshal
{
}; /* size: 0x0008 */

struct tagRPC_CALL_ATTRIBUTES_V3_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_873;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_874;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ enum tagRpcCallClientLocality IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_875[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ unsigned long ClientIdentifierBufferLength;
  /* 0x0070 */ unsigned char* ClientIdentifier;
}; /* size: 0x0078 */

typedef struct _STREAM_EXTENT_ENTRY
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_876;
  union
  {
    /* 0x0008 */ struct RETRIEVAL_POINTERS_BUFFER RetrievalPointers;
  } /* size: 0x0020 */ ExtentInformation;
} STREAM_EXTENT_ENTRY, *PSTREAM_EXTENT_ENTRY; /* size: 0x0028 */

typedef struct _KCRM_TRANSACTION_BLOB
{
  /* 0x0000 */ struct _GUID UOW;
  /* 0x0010 */ struct _GUID TmIdentity;
  /* 0x0020 */ unsigned long IsolationLevel;
  /* 0x0024 */ unsigned long IsolationFlags;
  /* 0x0028 */ unsigned long Timeout;
  /* 0x002c */ wchar_t Description[64];
} KCRM_TRANSACTION_BLOB, *PKCRM_TRANSACTION_BLOB; /* size: 0x00ac */

class Microsoft::WRL::Wrappers::Details::SyncLockT<Microsoft::WRL::Wrappers::HandleTraits::SRWLockSharedTraits>
{
  /* 0x0000 */ struct _RTL_SRWLOCK* sync_;
}; /* size: 0x0008 */

typedef struct _CM_EISA_SLOT_INFORMATION
{
  /* 0x0000 */ unsigned char ReturnCode;
  /* 0x0001 */ unsigned char ReturnFlags;
  /* 0x0002 */ unsigned char MajorRevision;
  /* 0x0003 */ unsigned char MinorRevision;
  /* 0x0004 */ unsigned short Checksum;
  /* 0x0006 */ unsigned char NumberFunctions;
  /* 0x0007 */ unsigned char FunctionInformation;
  /* 0x0008 */ unsigned long CompressedId;
} CM_EISA_SLOT_INFORMATION, *PCM_EISA_SLOT_INFORMATION; /* size: 0x000c */

class Microsoft::WRL::Details::RemoveIUnknownBase<IGlobalInterfaceTable>;

struct tagIMEMENUITEMINFOW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned int fType;
  /* 0x0008 */ unsigned int fState;
  /* 0x000c */ unsigned int wID;
  /* 0x0010 */ struct HBITMAP__* hbmpChecked;
  /* 0x0018 */ struct HBITMAP__* hbmpUnchecked;
  /* 0x0020 */ unsigned long dwItemData;
  /* 0x0024 */ wchar_t szString[80];
  /* 0x00c4 */ long Padding_877;
  /* 0x00c8 */ struct HBITMAP__* hbmpItem;
}; /* size: 0x00d0 */

typedef struct _IMAGE_OPTIONAL_HEADER64
{
  /* 0x0000 */ unsigned short Magic;
  /* 0x0002 */ unsigned char MajorLinkerVersion;
  /* 0x0003 */ unsigned char MinorLinkerVersion;
  /* 0x0004 */ unsigned long SizeOfCode;
  /* 0x0008 */ unsigned long SizeOfInitializedData;
  /* 0x000c */ unsigned long SizeOfUninitializedData;
  /* 0x0010 */ unsigned long AddressOfEntryPoint;
  /* 0x0014 */ unsigned long BaseOfCode;
  /* 0x0018 */ unsigned __int64 ImageBase;
  /* 0x0020 */ unsigned long SectionAlignment;
  /* 0x0024 */ unsigned long FileAlignment;
  /* 0x0028 */ unsigned short MajorOperatingSystemVersion;
  /* 0x002a */ unsigned short MinorOperatingSystemVersion;
  /* 0x002c */ unsigned short MajorImageVersion;
  /* 0x002e */ unsigned short MinorImageVersion;
  /* 0x0030 */ unsigned short MajorSubsystemVersion;
  /* 0x0032 */ unsigned short MinorSubsystemVersion;
  /* 0x0034 */ unsigned long Win32VersionValue;
  /* 0x0038 */ unsigned long SizeOfImage;
  /* 0x003c */ unsigned long SizeOfHeaders;
  /* 0x0040 */ unsigned long CheckSum;
  /* 0x0044 */ unsigned short Subsystem;
  /* 0x0046 */ unsigned short DllCharacteristics;
  /* 0x0048 */ unsigned __int64 SizeOfStackReserve;
  /* 0x0050 */ unsigned __int64 SizeOfStackCommit;
  /* 0x0058 */ unsigned __int64 SizeOfHeapReserve;
  /* 0x0060 */ unsigned __int64 SizeOfHeapCommit;
  /* 0x0068 */ unsigned long LoaderFlags;
  /* 0x006c */ unsigned long NumberOfRvaAndSizes;
  /* 0x0070 */ struct _IMAGE_DATA_DIRECTORY DataDirectory[16];
} IMAGE_OPTIONAL_HEADER64, *PIMAGE_OPTIONAL_HEADER64; /* size: 0x00f0 */

typedef struct _IMAGE_NT_HEADERS64
{
  /* 0x0000 */ unsigned long Signature;
  /* 0x0004 */ struct _IMAGE_FILE_HEADER FileHeader;
  /* 0x0018 */ struct _IMAGE_OPTIONAL_HEADER64 OptionalHeader;
} IMAGE_NT_HEADERS64, *PIMAGE_NT_HEADERS64; /* size: 0x0108 */

typedef struct _FILE_ID_BOTH_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_878;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_879[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFO, *PFILE_ID_BOTH_DIR_INFO; /* size: 0x0070 */

class Windows::Auto<Windows::Rtl::IRtlBlobProvider *>
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::idl_moduleAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* dllname;
  /* 0x0010 */ const char* version;
  /* 0x0018 */ const char* uuid;
  /* 0x0020 */ const char* helpstring;
  /* 0x0028 */ int helpstringcontext;
  /* 0x002c */ int helpcontext;
  /* 0x0030 */ BOOL hidden;
  /* 0x0031 */ BOOL restricted;
  /* 0x0032 */ char __PADDING__[6];
} _vc_attributes::idl_moduleAttribute, *P_vc_attributes::idl_moduleAttribute; /* size: 0x0038 */

typedef struct _CLIENT_ID64
{
  /* 0x0000 */ unsigned __int64 UniqueProcess;
  /* 0x0008 */ unsigned __int64 UniqueThread;
} CLIENT_ID64, *PCLIENT_ID64; /* size: 0x0010 */

typedef struct _POWER_SESSION_WINLOGON
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned char Console;
  /* 0x0005 */ unsigned char Locked;
  /* 0x0006 */ char __PADDING__[2];
} POWER_SESSION_WINLOGON, *PPOWER_SESSION_WINLOGON; /* size: 0x0008 */

struct tagMCI_OVLY_OPEN_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const char* lpstrDeviceType;
  /* 0x0014 */ const char* lpstrElementName;
  /* 0x001c */ const char* lpstrAlias;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ struct HWND__* hWndParent;
}; /* size: 0x0030 */

typedef struct _ImageArchitectureHeader
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned int AmaskValue : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned int : 7; /* bit position: 1 */
    /* 0x0000 */ unsigned int AmaskShift : 8; /* bit position: 8 */
  }; /* bitfield */
  /* 0x0004 */ unsigned long FirstEntryRVA;
} ImageArchitectureHeader, *PImageArchitectureHeader; /* size: 0x0008 */

typedef struct _IO_SESSION_CONNECT_INFO
{
  /* 0x0000 */ unsigned long SessionId;
  /* 0x0004 */ unsigned char LocalSession;
  /* 0x0005 */ char __PADDING__[3];
} IO_SESSION_CONNECT_INFO, *PIO_SESSION_CONNECT_INFO; /* size: 0x0008 */

typedef struct __vc_attributes::switch_typeAttribute
{
  /* 0x0000 */ const char* switch_type_specifier;
} _vc_attributes::switch_typeAttribute, *P_vc_attributes::switch_typeAttribute; /* size: 0x0008 */

typedef struct _CONSOLE_READCONSOLE_CONTROL
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long nInitialChars;
  /* 0x0008 */ unsigned long dwCtrlWakeupMask;
  /* 0x000c */ unsigned long dwControlKeyState;
} CONSOLE_READCONSOLE_CONTROL, *PCONSOLE_READCONSOLE_CONTROL; /* size: 0x0010 */

struct IObjContext
{
}; /* size: 0x0008 */

typedef struct _IMAGE_RESOURCE_DIRECTORY_STRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ char NameString[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_RESOURCE_DIRECTORY_STRING, *PIMAGE_RESOURCE_DIRECTORY_STRING; /* size: 0x0004 */

typedef struct _ALPC_PORT_COMPLETION_LIST_INFORMATION
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long ConcurrencyCount;
  /* 0x0010 */ unsigned long AttributeFlags;
  /* 0x0014 */ long __PADDING__[1];
} ALPC_PORT_COMPLETION_LIST_INFORMATION, *PALPC_PORT_COMPLETION_LIST_INFORMATION; /* size: 0x0018 */

typedef struct _TRANSACTION_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long State;
  /* 0x0014 */ unsigned long Outcome;
} TRANSACTION_BASIC_INFORMATION, *PTRANSACTION_BASIC_INFORMATION; /* size: 0x0018 */

class CPSHashTable
{
}; /* size: 0x0028 */

struct tagCWPRETSTRUCT
{
  /* 0x0000 */ __int64 lResult;
  /* 0x0008 */ __int64 lParam;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ unsigned int message;
  /* 0x001c */ long Padding_880;
  /* 0x0020 */ struct HWND__* hwnd;
}; /* size: 0x0028 */

typedef struct _wfinddata_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_881;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ unsigned long size;
  /* 0x0024 */ wchar_t name[260];
  /* 0x022c */ long __PADDING__[1];
} wfinddata_t, *Pwfinddata_t; /* size: 0x0230 */

typedef struct _CRYPT_PKCS8_IMPORT_PARAMS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB PrivateKey;
  /* 0x0010 */ void* pResolvehCryptProvFunc /* function */;
  /* 0x0018 */ void* pVoidResolveFunc;
  /* 0x0020 */ void* pDecryptPrivateKeyFunc /* function */;
  /* 0x0028 */ void* pVoidDecryptFunc;
} CRYPT_PKCS8_IMPORT_PARAMS, *PCRYPT_PKCS8_IMPORT_PARAMS; /* size: 0x0030 */

struct tagRPC_EXTENDED_ERROR_INFO
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_882;
  /* 0x0008 */ wchar_t* ComputerName;
  /* 0x0010 */ unsigned long ProcessID;
  union
  {
    union
    {
      /* 0x0014 */ struct _SYSTEMTIME SystemTime;
      /* 0x0014 */ struct _FILETIME FileTime;
    }; /* size: 0x0010 */
  } /* size: 0x0010 */ u;
  /* 0x0024 */ unsigned long GeneratingComponent;
  /* 0x0028 */ unsigned long Status;
  /* 0x002c */ unsigned short DetectionLocation;
  /* 0x002e */ unsigned short Flags;
  /* 0x0030 */ int NumberOfParameters;
  /* 0x0034 */ long Padding_883;
  /* 0x0038 */ struct tagRPC_EE_INFO_PARAM Parameters[4];
}; /* size: 0x0098 */

struct tagSQIResult
{
  /* 0x0000 */ void* pv;
  /* 0x0008 */ HRESULT hr;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _REQUEST_OPLOCK_INPUT_BUFFER
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long RequestedOplockLevel;
  /* 0x0008 */ unsigned long Flags;
} REQUEST_OPLOCK_INPUT_BUFFER, *PREQUEST_OPLOCK_INPUT_BUFFER; /* size: 0x000c */

typedef struct _CSV_MGMT_LOCK
{
  /* 0x0000 */ unsigned long Flags;
} CSV_MGMT_LOCK, *PCSV_MGMT_LOCK; /* size: 0x0004 */

struct MENUITEMTEMPLATE
{
  /* 0x0000 */ unsigned short mtOption;
  /* 0x0002 */ unsigned short mtID;
  /* 0x0004 */ wchar_t mtString[1];
}; /* size: 0x0006 */

typedef struct _FILE_TYPE_NOTIFICATION_INPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long NumFileTypeIDs;
  /* 0x0008 */ struct _GUID FileTypeID[1];
} FILE_TYPE_NOTIFICATION_INPUT, *PFILE_TYPE_NOTIFICATION_INPUT; /* size: 0x0018 */

typedef struct _THREAD_TEB_INFORMATION
{
  /* 0x0000 */ void* TebInformation;
  /* 0x0008 */ unsigned long TebOffset;
  /* 0x000c */ unsigned long BytesToRead;
} THREAD_TEB_INFORMATION, *PTHREAD_TEB_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag43_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag43_t, *P_midl_frag43_t; /* size: 0x0048 */

typedef struct _CRYPT_PROVIDER_REF
{
  /* 0x0000 */ unsigned long dwInterface;
  /* 0x0004 */ long Padding_884;
  /* 0x0008 */ wchar_t* pszFunction;
  /* 0x0010 */ wchar_t* pszProvider;
  /* 0x0018 */ unsigned long cProperties;
  /* 0x001c */ long Padding_885;
  /* 0x0020 */ struct _CRYPT_PROPERTY_REF** rgpProperties;
  /* 0x0028 */ struct _CRYPT_IMAGE_REF* pUM;
  /* 0x0030 */ struct _CRYPT_IMAGE_REF* pKM;
} CRYPT_PROVIDER_REF, *PCRYPT_PROVIDER_REF; /* size: 0x0038 */

typedef struct _STARTUPINFOEXW
{
  /* 0x0000 */ struct _STARTUPINFOW StartupInfo;
  /* 0x0068 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXW, *PSTARTUPINFOEXW; /* size: 0x0070 */

typedef struct __midl_frag2_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag2_t, *P_midl_frag2_t; /* size: 0x0038 */

typedef struct _TRANSACTIONMANAGER_LOG_INFORMATION
{
  /* 0x0000 */ struct _GUID LogIdentity;
} TRANSACTIONMANAGER_LOG_INFORMATION, *PTRANSACTIONMANAGER_LOG_INFORMATION; /* size: 0x0010 */

typedef struct _CRYPT_PROPERTY_REF
{
  /* 0x0000 */ wchar_t* pszProperty;
  /* 0x0008 */ unsigned long cbValue;
  /* 0x000c */ long Padding_886;
  /* 0x0010 */ unsigned char* pbValue;
} CRYPT_PROPERTY_REF, *PCRYPT_PROPERTY_REF; /* size: 0x0018 */

typedef struct __vc_attributes::propputrefAttribute
{
} _vc_attributes::propputrefAttribute, *P_vc_attributes::propputrefAttribute; /* size: 0x0001 */

typedef struct _CRYPT_IMAGE_REF
{
  /* 0x0000 */ wchar_t* pszImage;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ long __PADDING__[1];
} CRYPT_IMAGE_REF, *PCRYPT_IMAGE_REF; /* size: 0x0010 */

typedef struct _VM_COUNTERS
{
  /* 0x0000 */ unsigned __int64 PeakVirtualSize;
  /* 0x0008 */ unsigned __int64 VirtualSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_887;
  /* 0x0018 */ unsigned __int64 PeakWorkingSetSize;
  /* 0x0020 */ unsigned __int64 WorkingSetSize;
  /* 0x0028 */ unsigned __int64 QuotaPeakPagedPoolUsage;
  /* 0x0030 */ unsigned __int64 QuotaPagedPoolUsage;
  /* 0x0038 */ unsigned __int64 QuotaPeakNonPagedPoolUsage;
  /* 0x0040 */ unsigned __int64 QuotaNonPagedPoolUsage;
  /* 0x0048 */ unsigned __int64 PagefileUsage;
  /* 0x0050 */ unsigned __int64 PeakPagefileUsage;
} VM_COUNTERS, *PVM_COUNTERS; /* size: 0x0058 */

typedef struct _PLUGPLAY_CONTROL_USER_RESPONSE_DATA
{
  /* 0x0000 */ unsigned long Response;
  /* 0x0004 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0008 */ wchar_t* VetoName;
  /* 0x0010 */ unsigned long VetoNameLength;
  /* 0x0014 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_USER_RESPONSE_DATA, *PPLUGPLAY_CONTROL_USER_RESPONSE_DATA; /* size: 0x0018 */

typedef struct _NETINFOSTRUCT
{
  /* 0x0000 */ unsigned long cbStructure;
  /* 0x0004 */ unsigned long dwProviderVersion;
  /* 0x0008 */ unsigned long dwStatus;
  /* 0x000c */ unsigned long dwCharacteristics;
  /* 0x0010 */ unsigned __int64 dwHandle;
  /* 0x0018 */ unsigned short wNetType;
  /* 0x001a */ char Padding_888[2];
  /* 0x001c */ unsigned long dwPrinters;
  /* 0x0020 */ unsigned long dwDrives;
  /* 0x0024 */ long __PADDING__[1];
} NETINFOSTRUCT, *PNETINFOSTRUCT; /* size: 0x0028 */

struct IActivationPropOutClean
{
}; /* size: 0x0008 */

typedef struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long AttributeCount;
  union
  {
    /* 0x0008 */ struct _TOKEN_SECURITY_ATTRIBUTE_V1* pAttributeV1;
  } /* size: 0x0008 */ Attribute;
} TOKEN_SECURITY_ATTRIBUTES_INFORMATION, *PTOKEN_SECURITY_ATTRIBUTES_INFORMATION; /* size: 0x0010 */

typedef struct __vc_attributes::pragmaAttribute
{
  /* 0x0000 */ const char* token_sequence;
} _vc_attributes::pragmaAttribute, *P_vc_attributes::pragmaAttribute; /* size: 0x0008 */

struct RPC_DISPATCH_TABLE
{
  /* 0x0000 */ unsigned int DispatchTableCount;
  /* 0x0004 */ long Padding_889;
  /* 0x0008 */ void** DispatchTable /* function */;
  /* 0x0010 */ __int64 Reserved;
}; /* size: 0x0018 */

typedef struct __vc_attributes::length_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::length_isAttribute, *P_vc_attributes::length_isAttribute; /* size: 0x0008 */

typedef struct _AVRF_MEMORY_RANGE
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned __int64 Size;
} AVRF_MEMORY_RANGE, *PAVRF_MEMORY_RANGE; /* size: 0x0010 */

typedef struct _CRYPT_RC4_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[16];
  /* 0x0010 */ unsigned char SBox[256];
  /* 0x0110 */ unsigned char i;
  /* 0x0111 */ unsigned char j;
} CRYPT_RC4_KEY_STATE, *PCRYPT_RC4_KEY_STATE; /* size: 0x0112 */

typedef struct _CHANGER_ELEMENT_STATUS_EX
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Element;
  /* 0x0008 */ struct _CHANGER_ELEMENT SrcElementAddress;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ExceptionCode;
  /* 0x0018 */ unsigned char TargetId;
  /* 0x0019 */ unsigned char Lun;
  /* 0x001a */ unsigned short Reserved;
  /* 0x001c */ unsigned char PrimaryVolumeID[36];
  /* 0x0040 */ unsigned char AlternateVolumeID[36];
  /* 0x0064 */ unsigned char VendorIdentification[8];
  /* 0x006c */ unsigned char ProductIdentification[16];
  /* 0x007c */ unsigned char SerialNumber[32];
} CHANGER_ELEMENT_STATUS_EX, *PCHANGER_ELEMENT_STATUS_EX; /* size: 0x009c */

struct MOVE_FILE_RECORD_DATA
{
  /* 0x0000 */ void* FileHandle;
  /* 0x0008 */ union _LARGE_INTEGER SourceFileRecord;
  /* 0x0010 */ union _LARGE_INTEGER TargetFileRecord;
}; /* size: 0x0018 */

typedef struct __vc_attributes::retvalAttribute
{
} _vc_attributes::retvalAttribute, *P_vc_attributes::retvalAttribute; /* size: 0x0001 */

typedef struct _LDR_RESLOADER_RET
{
  /* 0x0000 */ void* Module;
  /* 0x0008 */ void* DataEntry;
  /* 0x0010 */ void* TargetModule;
} LDR_RESLOADER_RET, *PLDR_RESLOADER_RET; /* size: 0x0018 */

typedef struct __vc_attributes::hookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0008 */ const char* source;
  /* 0x0010 */ const char* handler;
  /* 0x0018 */ const char* receiver;
} _vc_attributes::hookAttribute, *P_vc_attributes::hookAttribute; /* size: 0x0020 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IMarshal>
{
}; /* size: 0x0008 */

typedef struct _NETRESOURCEA
{
  /* 0x0000 */ unsigned long dwScope;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long dwDisplayType;
  /* 0x000c */ unsigned long dwUsage;
  /* 0x0010 */ char* lpLocalName;
  /* 0x0018 */ char* lpRemoteName;
  /* 0x0020 */ char* lpComment;
  /* 0x0028 */ char* lpProvider;
} NETRESOURCEA, *PNETRESOURCEA; /* size: 0x0030 */

struct IXMLDOMEntity
{
}; /* size: 0x0008 */

struct CStdMarshal::DiscSinkNode
{
  /* 0x0000 */ struct CStdMarshal::DiscSinkNode* pNext;
  /* 0x0008 */ struct CStdMarshal::DiscSinkNode* pPrev;
  /* 0x0010 */ struct IDisconnectSink* pSink;
  /* 0x0018 */ void* pvCookie;
}; /* size: 0x0020 */

class CStdMarshal
{
  /* 0x0000 */ long Padding_890[2];
  /* 0x0008 */ unsigned long _dwFlags;
  /* 0x000c */ long _cIPIDs;
  /* 0x0010 */ struct tagIPIDEntry* _pFirstIPID;
  /* 0x0018 */ class CStdIdentity* _pStdId;
  /* 0x0020 */ class CCtxComChnl* _pChnl;
  /* 0x0028 */ struct _GUID _clsidHandler;
  /* 0x0038 */ long _cNestedCalls;
  /* 0x003c */ long _cTableRefs;
  /* 0x0040 */ unsigned long _dwMarshalTime;
  /* 0x0044 */ long Padding_891;
  /* 0x0048 */ struct IRemUnknown* _pSecureRemUnk;
  /* 0x0050 */ struct IUnknown* _pAsyncRelease;
  /* 0x0058 */ class CtxEntry* _pCtxEntryHead;
  /* 0x0060 */ class CtxEntry* _pCtxFreeList;
  /* 0x0068 */ struct _RTL_CRITICAL_SECTION _csCtxEntry;
  /* 0x0090 */ int _fCsInitialized;
  /* 0x0094 */ long Padding_892;
  /* 0x0098 */ class CPolicySet* _pPS;
  /* 0x00a0 */ class CIDObject* _pID;
  /* 0x00a8 */ class CRefCache* _pRefCache;
  /* 0x00b0 */ struct CStdMarshal::DiscSinkNode _discHead;
  /* 0x00d0 */ unsigned long _dwLastCallTime;
}; /* size: 0x00d8 */

typedef struct _SAFER_URLZONE_IDENTIFICATION
{
  /* 0x0000 */ struct _SAFER_IDENTIFICATION_HEADER header;
  /* 0x0020 */ unsigned long UrlZoneId;
  /* 0x0024 */ unsigned long dwSaferFlags;
} SAFER_URLZONE_IDENTIFICATION, *PSAFER_URLZONE_IDENTIFICATION; /* size: 0x0028 */

typedef struct _SAFER_HASH_IDENTIFICATION
{
  /* 0x0000 */ struct _SAFER_IDENTIFICATION_HEADER header;
  /* 0x0020 */ wchar_t Description[256];
  /* 0x0220 */ wchar_t FriendlyName[256];
  /* 0x0420 */ unsigned long HashSize;
  /* 0x0424 */ unsigned char ImageHash[64];
  /* 0x0464 */ unsigned int HashAlgorithm;
  /* 0x0468 */ union _LARGE_INTEGER ImageSize;
  /* 0x0470 */ unsigned long dwSaferFlags;
  /* 0x0474 */ long __PADDING__[1];
} SAFER_HASH_IDENTIFICATION, *PSAFER_HASH_IDENTIFICATION; /* size: 0x0478 */

typedef struct _SAFER_HASH_IDENTIFICATION2
{
  /* 0x0000 */ struct _SAFER_HASH_IDENTIFICATION hashIdentification;
  /* 0x0478 */ unsigned long HashSize;
  /* 0x047c */ unsigned char ImageHash[64];
  /* 0x04bc */ unsigned int HashAlgorithm;
} SAFER_HASH_IDENTIFICATION2, *PSAFER_HASH_IDENTIFICATION2; /* size: 0x04c0 */

typedef struct __vc_attributes::rangeAttribute
{
  /* 0x0000 */ int low_val;
  /* 0x0004 */ int high_val;
} _vc_attributes::rangeAttribute, *P_vc_attributes::rangeAttribute; /* size: 0x0008 */

typedef struct _FILE_ZERO_DATA_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER FileOffset;
  /* 0x0008 */ union _LARGE_INTEGER BeyondFinalZero;
} FILE_ZERO_DATA_INFORMATION, *PFILE_ZERO_DATA_INFORMATION; /* size: 0x0010 */

struct tagNC_ADDRESS
{
  /* 0x0000 */ struct NET_ADDRESS_INFO_* pAddrInfo;
  /* 0x0008 */ unsigned short PortNumber;
  /* 0x000a */ unsigned char PrefixLength;
  /* 0x000b */ char __PADDING__[5];
}; /* size: 0x0010 */

typedef struct _OVERLAPPED_ENTRY
{
  /* 0x0000 */ unsigned __int64 lpCompletionKey;
  /* 0x0008 */ struct _OVERLAPPED* lpOverlapped;
  /* 0x0010 */ unsigned __int64 Internal;
  /* 0x0018 */ unsigned long dwNumberOfBytesTransferred;
  /* 0x001c */ long __PADDING__[1];
} OVERLAPPED_ENTRY, *POVERLAPPED_ENTRY; /* size: 0x0020 */

typedef struct _SAFER_CODE_PROPERTIES_V2
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwCheckFlags;
  /* 0x0008 */ const wchar_t* ImagePath;
  /* 0x0010 */ void* hImageFileHandle;
  /* 0x0018 */ unsigned long UrlZoneId;
  /* 0x001c */ unsigned char ImageHash[64];
  /* 0x005c */ unsigned long dwImageHashSize;
  /* 0x0060 */ union _LARGE_INTEGER ImageSize;
  /* 0x0068 */ unsigned int HashAlgorithm;
  /* 0x006c */ long Padding_893;
  /* 0x0070 */ unsigned char* pByteBlock;
  /* 0x0078 */ struct HWND__* hWndParent;
  /* 0x0080 */ unsigned long dwWVTUIChoice;
  /* 0x0084 */ long Padding_894;
  /* 0x0088 */ const wchar_t* PackageMoniker;
  /* 0x0090 */ const wchar_t* PackagePublisher;
  /* 0x0098 */ const wchar_t* PackageName;
  /* 0x00a0 */ unsigned __int64 PackageVersion;
  /* 0x00a8 */ int PackageIsFramework;
  /* 0x00ac */ long __PADDING__[1];
} SAFER_CODE_PROPERTIES_V2, *PSAFER_CODE_PROPERTIES_V2; /* size: 0x00b0 */

typedef struct _OVERLAPPED
{
  /* 0x0000 */ unsigned __int64 Internal;
  /* 0x0008 */ unsigned __int64 InternalHigh;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned long Offset;
      /* 0x0014 */ unsigned long OffsetHigh;
    }; /* size: 0x0008 */
    /* 0x0010 */ void* Pointer;
  }; /* size: 0x0008 */
  /* 0x0018 */ void* hEvent;
} OVERLAPPED, *POVERLAPPED; /* size: 0x0020 */

class BUCL::CConvertToSignedType<unsigned char>
{
}; /* size: 0x0001 */

typedef struct __midl_frag1088_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1088_t, *P_midl_frag1088_t; /* size: 0x000c */

struct tagEMRSELECTPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
}; /* size: 0x000c */

typedef struct _FILE_LEVEL_TRIM_OUTPUT
{
  /* 0x0000 */ unsigned long NumRangesProcessed;
} FILE_LEVEL_TRIM_OUTPUT, *PFILE_LEVEL_TRIM_OUTPUT; /* size: 0x0004 */

typedef struct __midl_frag1269_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1269_t, *P_midl_frag1269_t; /* size: 0x0048 */

struct IXMLError
{
}; /* size: 0x0008 */

struct IInternetSecurityManager
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::no_injected_textAttribute
{
  /* 0x0000 */ BOOL value;
} _vc_attributes::no_injected_textAttribute, *P_vc_attributes::no_injected_textAttribute; /* size: 0x0001 */

typedef struct _PROCESS_REVOKE_FILE_HANDLES_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TargetDevicePath;
} PROCESS_REVOKE_FILE_HANDLES_INFORMATION, *PPROCESS_REVOKE_FILE_HANDLES_INFORMATION; /* size: 0x0010 */

struct tagCREATESTRUCTA
{
  /* 0x0000 */ void* lpCreateParams;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  /* 0x0010 */ struct HMENU__* hMenu;
  /* 0x0018 */ struct HWND__* hwndParent;
  /* 0x0020 */ int cy;
  /* 0x0024 */ int cx;
  /* 0x0028 */ int y;
  /* 0x002c */ int x;
  /* 0x0030 */ long style;
  /* 0x0034 */ long Padding_895;
  /* 0x0038 */ const char* lpszName;
  /* 0x0040 */ const char* lpszClass;
  /* 0x0048 */ unsigned long dwExStyle;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

typedef struct _CERT_POLICY_INFO
{
  /* 0x0000 */ char* pszPolicyIdentifier;
  /* 0x0008 */ unsigned long cPolicyQualifier;
  /* 0x000c */ long Padding_896;
  /* 0x0010 */ struct _CERT_POLICY_QUALIFIER_INFO* rgPolicyQualifier;
} CERT_POLICY_INFO, *PCERT_POLICY_INFO; /* size: 0x0018 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<1>
{
} RTL_CONSTANT_STRING_remove_const_template_class<1>, *PRTL_CONSTANT_STRING_remove_const_template_class<1>; /* size: 0x0001 */

typedef struct __vc_attributes::defaultvalueAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::defaultvalueAttribute, *P_vc_attributes::defaultvalueAttribute; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnknown> >
{
}; /* size: 0x0008 */

struct FILE_ID_DESCRIPTOR
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ enum _FILE_ID_TYPE Type;
  union
  {
    /* 0x0008 */ union _LARGE_INTEGER FileId;
    /* 0x0008 */ struct _GUID ObjectId;
    /* 0x0008 */ struct _FILE_ID_128 ExtendedFileId;
  }; /* size: 0x0010 */
}; /* size: 0x0018 */

class RunSyncOnMTAThread::__l6::<lambda_D1F1DD1B73A84ADB>;

struct tagCHOOSEFONTA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_897;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HDC__* hDC;
  /* 0x0018 */ struct tagLOGFONTA* lpLogFont;
  /* 0x0020 */ int iPointSize;
  /* 0x0024 */ unsigned long Flags;
  /* 0x0028 */ unsigned long rgbColors;
  /* 0x002c */ long Padding_898;
  /* 0x0030 */ __int64 lCustData;
  /* 0x0038 */ void* lpfnHook /* function */;
  /* 0x0040 */ const char* lpTemplateName;
  /* 0x0048 */ struct HINSTANCE__* hInstance;
  /* 0x0050 */ char* lpszStyle;
  /* 0x0058 */ unsigned short nFontType;
  /* 0x005a */ unsigned short ___MISSING_ALIGNMENT__;
  /* 0x005c */ int nSizeMin;
  /* 0x0060 */ int nSizeMax;
  /* 0x0064 */ long __PADDING__[1];
}; /* size: 0x0068 */

typedef struct _NDR64_RANGE_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char RangeType;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_899;
  /* 0x0008 */ __int64 MinValue;
  /* 0x0010 */ __int64 MaxValue;
} NDR64_RANGE_FORMAT, *PNDR64_RANGE_FORMAT; /* size: 0x0018 */

typedef struct __midl_frag1664_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_900;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1664_t, *P_midl_frag1664_t; /* size: 0x0030 */

struct APARTMENT_SHUTDOWN_REGISTRATION_COOKIE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _REASON_CONTEXT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ struct HINSTANCE__* LocalizedReasonModule;
        /* 0x0010 */ unsigned long LocalizedReasonId;
        /* 0x0014 */ unsigned long ReasonStringCount;
        /* 0x0018 */ wchar_t** ReasonStrings;
      } /* size: 0x0018 */ Detailed;
      /* 0x0008 */ wchar_t* SimpleReasonString;
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Reason;
} REASON_CONTEXT, *PREASON_CONTEXT; /* size: 0x0020 */

typedef struct _OFNOTIFYEXA
{
  /* 0x0000 */ struct tagNMHDR hdr;
  /* 0x0018 */ struct tagOFNA* lpOFN;
  /* 0x0020 */ void* psf;
  /* 0x0028 */ void* pidl;
} OFNOTIFYEXA, *POFNOTIFYEXA; /* size: 0x0030 */

typedef struct __midl_frag310_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag310_t, *P_midl_frag310_t; /* size: 0x000c */

typedef struct __vc_attributes::varargAttribute
{
} _vc_attributes::varargAttribute, *P_vc_attributes::varargAttribute; /* size: 0x0001 */

typedef struct _NDR_USER_MARSHAL_INFO_LEVEL1
{
  /* 0x0000 */ void* Buffer;
  /* 0x0008 */ unsigned long BufferSize;
  /* 0x000c */ long Padding_901;
  /* 0x0010 */ void* pfnAllocate /* function */;
  /* 0x0018 */ void* pfnFree /* function */;
  /* 0x0020 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x0028 */ unsigned __int64 Reserved[5];
} NDR_USER_MARSHAL_INFO_LEVEL1, *PNDR_USER_MARSHAL_INFO_LEVEL1; /* size: 0x0050 */

typedef struct __vc_attributes::threadingAttribute
{
  /* 0x0000 */ enum __vc_attributes::threadingAttribute::threading_e value;
} _vc_attributes::threadingAttribute, *P_vc_attributes::threadingAttribute; /* size: 0x0004 */

struct ILegacyInfo
{
}; /* size: 0x0008 */

typedef struct _DISK_CACHE_INFORMATION
{
  /* 0x0000 */ unsigned char ParametersSavable;
  /* 0x0001 */ unsigned char ReadCacheEnabled;
  /* 0x0002 */ unsigned char WriteCacheEnabled;
  /* 0x0003 */ char Padding_902;
  /* 0x0004 */ enum DISK_CACHE_RETENTION_PRIORITY ReadRetentionPriority;
  /* 0x0008 */ enum DISK_CACHE_RETENTION_PRIORITY WriteRetentionPriority;
  /* 0x000c */ unsigned short DisablePrefetchTransferLength;
  /* 0x000e */ unsigned char PrefetchScalar;
  /* 0x000f */ char Padding_903;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned short Minimum;
      /* 0x0012 */ unsigned short Maximum;
      /* 0x0014 */ unsigned short MaximumBlocks;
    } /* size: 0x0006 */ ScalarPrefetch;
    struct
    {
      struct
      {
        /* 0x0010 */ unsigned short Minimum;
        /* 0x0012 */ unsigned short Maximum;
      } /* size: 0x0004 */ BlockPrefetch;
      /* 0x0014 */ long __PADDING__[1];
    }; /* size: 0x0008 */
  }; /* size: 0x0008 */
} DISK_CACHE_INFORMATION, *PDISK_CACHE_INFORMATION; /* size: 0x0018 */

typedef struct __vc_attributes::stringAttribute
{
} _vc_attributes::stringAttribute, *P_vc_attributes::stringAttribute; /* size: 0x0001 */

typedef union _GDI_OBJECT::__MIDL_IAdviseSink_0002
{
  union
  {
    /* 0x0000 */ struct _userHBITMAP* hBitmap;
    /* 0x0000 */ struct _userHPALETTE* hPalette;
    /* 0x0000 */ struct _userHGLOBAL* hGeneric;
  }; /* size: 0x0008 */
} GDI_OBJECT::__MIDL_IAdviseSink_0002, *PGDI_OBJECT::__MIDL_IAdviseSink_0002; /* size: 0x0008 */

typedef struct _GDI_OBJECT
{
  /* 0x0000 */ unsigned long ObjectType;
  /* 0x0004 */ long Padding_904;
  /* 0x0008 */ union _GDI_OBJECT::__MIDL_IAdviseSink_0002 u;
} GDI_OBJECT, *PGDI_OBJECT; /* size: 0x0010 */

typedef struct _OCSP_BASIC_RESPONSE_ENTRY
{
  /* 0x0000 */ struct _OCSP_CERT_ID CertId;
  /* 0x0048 */ unsigned long dwCertStatus;
  /* 0x004c */ long Padding_905;
  /* 0x0050 */ struct _OCSP_BASIC_REVOKED_INFO* pRevokedInfo;
  /* 0x0058 */ struct _FILETIME ThisUpdate;
  /* 0x0060 */ struct _FILETIME NextUpdate;
  /* 0x0068 */ unsigned long cExtension;
  /* 0x006c */ long Padding_906;
  /* 0x0070 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_BASIC_RESPONSE_ENTRY, *POCSP_BASIC_RESPONSE_ENTRY; /* size: 0x0078 */

struct IMessageDispatcher
{
}; /* size: 0x0008 */

struct NTFS_FILE_RECORD_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER FileReferenceNumber;
}; /* size: 0x0008 */

typedef struct _MOVE_FILE_DATA32
{
  /* 0x0000 */ unsigned int FileHandle;
  /* 0x0004 */ long Padding_907;
  /* 0x0008 */ union _LARGE_INTEGER StartingVcn;
  /* 0x0010 */ union _LARGE_INTEGER StartingLcn;
  /* 0x0018 */ unsigned long ClusterCount;
  /* 0x001c */ long __PADDING__[1];
} MOVE_FILE_DATA32, *PMOVE_FILE_DATA32; /* size: 0x0020 */

typedef struct _EV_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwQualifiers;
  /* 0x0008 */ unsigned long dwIssuanceUsageIndex;
} EV_EXTRA_CERT_CHAIN_POLICY_STATUS, *PEV_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x000c */

struct tagSOUNDSENTRYA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ char* lpszWindowsEffectDLL;
  /* 0x0030 */ unsigned long iWindowsEffectOrdinal;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _userBITMAP
{
  /* 0x0000 */ long bmType;
  /* 0x0004 */ long bmWidth;
  /* 0x0008 */ long bmHeight;
  /* 0x000c */ long bmWidthBytes;
  /* 0x0010 */ unsigned short bmPlanes;
  /* 0x0012 */ unsigned short bmBitsPixel;
  /* 0x0014 */ unsigned long cbSize;
  /* 0x0018 */ unsigned char pBuffer[1];
  /* 0x0019 */ char __PADDING__[3];
} userBITMAP, *PuserBITMAP; /* size: 0x001c */

typedef union _userHPALETTE::__MIDL_IWinTypes_0008
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct tagLOGPALETTE* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHPALETTE::__MIDL_IWinTypes_0008, *PuserHPALETTE::__MIDL_IWinTypes_0008; /* size: 0x0008 */

typedef struct _userHPALETTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_908;
  /* 0x0008 */ union _userHPALETTE::__MIDL_IWinTypes_0008 u;
} userHPALETTE, *PuserHPALETTE; /* size: 0x0010 */

typedef struct _PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_909;
  /* 0x0008 */ struct _PREFIX_TABLE_ENTRY* NextPrefixTree;
} PREFIX_TABLE, *PPREFIX_TABLE; /* size: 0x0010 */

typedef struct _IMAGE_RESOURCE_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned short NumberOfNamedEntries;
  /* 0x000e */ unsigned short NumberOfIdEntries;
} IMAGE_RESOURCE_DIRECTORY, *PIMAGE_RESOURCE_DIRECTORY; /* size: 0x0010 */

typedef struct _IMAGE_EXPORT_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Name;
  /* 0x0010 */ unsigned long Base;
  /* 0x0014 */ unsigned long NumberOfFunctions;
  /* 0x0018 */ unsigned long NumberOfNames;
  /* 0x001c */ unsigned long AddressOfFunctions;
  /* 0x0020 */ unsigned long AddressOfNames;
  /* 0x0024 */ unsigned long AddressOfNameOrdinals;
} IMAGE_EXPORT_DIRECTORY, *PIMAGE_EXPORT_DIRECTORY; /* size: 0x0028 */

struct AsyncIPipeLong
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_DH_PARAMETER_HEADER
{
  /* 0x0000 */ unsigned long cbLength;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbKeyLength;
} BCRYPT_DH_PARAMETER_HEADER, *PBCRYPT_DH_PARAMETER_HEADER; /* size: 0x000c */

struct IUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
}; /* size: 0x0018 */

class Windows::Auto<_LBLOB>
{
}; /* size: 0x0018 */

typedef struct _NOTIFYICONDATAA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_910;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int uID;
  /* 0x0014 */ unsigned int uFlags;
  /* 0x0018 */ unsigned int uCallbackMessage;
  /* 0x001c */ long Padding_911;
  /* 0x0020 */ struct HICON__* hIcon;
  /* 0x0028 */ char szTip[128];
  /* 0x00a8 */ unsigned long dwState;
  /* 0x00ac */ unsigned long dwStateMask;
  /* 0x00b0 */ char szInfo[256];
  union
  {
    /* 0x01b0 */ unsigned int uTimeout;
    /* 0x01b0 */ unsigned int uVersion;
  }; /* size: 0x0004 */
  /* 0x01b4 */ char szInfoTitle[64];
  /* 0x01f4 */ unsigned long dwInfoFlags;
  /* 0x01f8 */ struct _GUID guidItem;
  /* 0x0208 */ struct HICON__* hBalloonIcon;
} NOTIFYICONDATAA, *PNOTIFYICONDATAA; /* size: 0x0210 */

typedef struct _ICONINFO
{
  /* 0x0000 */ int fIcon;
  /* 0x0004 */ unsigned long xHotspot;
  /* 0x0008 */ unsigned long yHotspot;
  /* 0x000c */ long Padding_912;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
} ICONINFO, *PICONINFO; /* size: 0x0020 */

class IMessageParamList::Iterator
{
  /* 0x0000 */ class IMessageParam* _pPrevious;
  /* 0x0008 */ class IMessageParam* _pCurrent;
}; /* size: 0x0010 */

struct IWinInetFileStream
{
}; /* size: 0x0008 */

typedef union _userHGLOBAL::__MIDL_IWinTypes_0003
{
  union
  {
    /* 0x0000 */ long hInproc;
    /* 0x0000 */ struct _FLAGGED_BYTE_BLOB* hRemote;
    /* 0x0000 */ __int64 hInproc64;
  }; /* size: 0x0008 */
} userHGLOBAL::__MIDL_IWinTypes_0003, *PuserHGLOBAL::__MIDL_IWinTypes_0003; /* size: 0x0008 */

typedef struct _userHGLOBAL
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_913;
  /* 0x0008 */ union _userHGLOBAL::__MIDL_IWinTypes_0003 u;
} userHGLOBAL, *PuserHGLOBAL; /* size: 0x0010 */

struct tagEMREXCLUDECLIPRECT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclClip;
}; /* size: 0x0018 */

typedef struct __vc_attributes::restrictedAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::restrictedAttribute, *P_vc_attributes::restrictedAttribute; /* size: 0x0008 */

typedef struct _FLAGGED_BYTE_BLOB
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long clSize;
  /* 0x0008 */ unsigned char abData[1];
  /* 0x0009 */ char __PADDING__[3];
} FLAGGED_BYTE_BLOB, *PFLAGGED_BYTE_BLOB; /* size: 0x000c */

struct IPersistMoniker
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApartmentShutdown> const >;

typedef struct _CERT_REGISTRY_STORE_ROAMING_PARA
{
  /* 0x0000 */ struct HKEY__* hKey;
  /* 0x0008 */ wchar_t* pwszStoreDirectory;
} CERT_REGISTRY_STORE_ROAMING_PARA, *PCERT_REGISTRY_STORE_ROAMING_PARA; /* size: 0x0010 */

typedef struct _OFNOTIFYW
{
  /* 0x0000 */ struct tagNMHDR hdr;
  /* 0x0018 */ struct tagOFNW* lpOFN;
  /* 0x0020 */ wchar_t* pszFile;
} OFNOTIFYW, *POFNOTIFYW; /* size: 0x0028 */

struct HKEY__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __vc_attributes::appobjectAttribute
{
} _vc_attributes::appobjectAttribute, *P_vc_attributes::appobjectAttribute; /* size: 0x0001 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >::is_pointer<Windows::Rtl::IRtlUtf8StringBuilder *>
{
}; /* size: 0x0001 */

typedef struct _JOBOBJECT_LIMIT_VIOLATION_INFORMATION
{
  /* 0x0000 */ unsigned long LimitFlags;
  /* 0x0004 */ unsigned long ViolationLimitFlags;
  /* 0x0008 */ unsigned __int64 IoReadBytes;
  /* 0x0010 */ unsigned __int64 IoReadBytesLimit;
  /* 0x0018 */ unsigned __int64 IoWriteBytes;
  /* 0x0020 */ unsigned __int64 IoWriteBytesLimit;
  /* 0x0028 */ union _LARGE_INTEGER PerJobUserTime;
  /* 0x0030 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0038 */ unsigned __int64 JobMemory;
  /* 0x0040 */ unsigned __int64 JobMemoryLimit;
  /* 0x0048 */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE RateControlTolerance;
  /* 0x004c */ enum _JOBOBJECT_RATE_CONTROL_TOLERANCE_INTERVAL RateControlToleranceLimit;
} JOBOBJECT_LIMIT_VIOLATION_INFORMATION, *PJOBOBJECT_LIMIT_VIOLATION_INFORMATION; /* size: 0x0050 */

typedef struct __vc_attributes::helpcontextAttribute
{
  /* 0x0000 */ const char* helpcontext_value;
} _vc_attributes::helpcontextAttribute, *P_vc_attributes::helpcontextAttribute; /* size: 0x0008 */

typedef struct _ENCRYPTION_BUFFER
{
  /* 0x0000 */ unsigned long EncryptionOperation;
  /* 0x0004 */ unsigned char Private[1];
  /* 0x0005 */ char __PADDING__[3];
} ENCRYPTION_BUFFER, *PENCRYPTION_BUFFER; /* size: 0x0008 */

typedef struct _SYSTEM_POWER_STATE_DISABLE_REASON
{
  /* 0x0000 */ unsigned char AffectedState[8];
  /* 0x0008 */ unsigned long PowerReasonCode;
  /* 0x000c */ unsigned long PowerReasonLength;
} SYSTEM_POWER_STATE_DISABLE_REASON, *PSYSTEM_POWER_STATE_DISABLE_REASON; /* size: 0x0010 */

typedef struct _RPC_SECURITY_QOS_V3_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_914;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
} RPC_SECURITY_QOS_V3_A, *PRPC_SECURITY_QOS_V3_A; /* size: 0x0028 */

typedef struct _FILE_ALLOCATION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFO, *PFILE_ALLOCATION_INFO; /* size: 0x0008 */

typedef struct _RPC_BINDING_HANDLE_OPTIONS_V1
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ComTimeout;
  /* 0x000c */ unsigned long CallTimeout;
} RPC_BINDING_HANDLE_OPTIONS_V1, *PRPC_BINDING_HANDLE_OPTIONS_V1; /* size: 0x0010 */

struct tagWCRANGE
{
  /* 0x0000 */ wchar_t wcLow;
  /* 0x0002 */ unsigned short cGlyphs;
}; /* size: 0x0004 */

struct tagGLYPHSET
{
  /* 0x0000 */ unsigned long cbThis;
  /* 0x0004 */ unsigned long flAccel;
  /* 0x0008 */ unsigned long cGlyphsSupported;
  /* 0x000c */ unsigned long cRanges;
  /* 0x0010 */ struct tagWCRANGE ranges[1];
}; /* size: 0x0014 */

typedef struct _WIN32_FIND_DATAW
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ wchar_t cFileName[260];
  /* 0x0234 */ wchar_t cAlternateFileName[14];
} WIN32_FIND_DATAW, *PWIN32_FIND_DATAW; /* size: 0x0250 */

typedef struct _PRINTER_INFO_2W
{
  /* 0x0000 */ wchar_t* pServerName;
  /* 0x0008 */ wchar_t* pPrinterName;
  /* 0x0010 */ wchar_t* pShareName;
  /* 0x0018 */ wchar_t* pPortName;
  /* 0x0020 */ wchar_t* pDriverName;
  /* 0x0028 */ wchar_t* pComment;
  /* 0x0030 */ wchar_t* pLocation;
  /* 0x0038 */ struct _devicemodeW* pDevMode;
  /* 0x0040 */ wchar_t* pSepFile;
  /* 0x0048 */ wchar_t* pPrintProcessor;
  /* 0x0050 */ wchar_t* pDatatype;
  /* 0x0058 */ wchar_t* pParameters;
  /* 0x0060 */ void* pSecurityDescriptor;
  /* 0x0068 */ unsigned long Attributes;
  /* 0x006c */ unsigned long Priority;
  /* 0x0070 */ unsigned long DefaultPriority;
  /* 0x0074 */ unsigned long StartTime;
  /* 0x0078 */ unsigned long UntilTime;
  /* 0x007c */ unsigned long Status;
  /* 0x0080 */ unsigned long cJobs;
  /* 0x0084 */ unsigned long AveragePPM;
} PRINTER_INFO_2W, *PPRINTER_INFO_2W; /* size: 0x0088 */

struct IComThreadingInfo
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::versionAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::versionAttribute, *P_vc_attributes::versionAttribute; /* size: 0x0008 */

struct IInternetSession
{
}; /* size: 0x0008 */

class CClientSecurity
{
  /* 0x0000 */ long Padding_915[2];
  /* 0x0008 */ class CStdIdentity* _pStdId;
}; /* size: 0x0010 */

struct PPM_WMI_IDLE_STATE
{
  /* 0x0000 */ unsigned long Latency;
  /* 0x0004 */ unsigned long Power;
  /* 0x0008 */ unsigned long TimeCheck;
  /* 0x000c */ unsigned char PromotePercent;
  /* 0x000d */ unsigned char DemotePercent;
  /* 0x000e */ unsigned char StateType;
  /* 0x000f */ unsigned char Reserved;
  /* 0x0010 */ unsigned long StateFlags;
  /* 0x0014 */ unsigned long Context;
  /* 0x0018 */ unsigned long IdleHandler;
  /* 0x001c */ unsigned long Reserved1;
}; /* size: 0x0020 */

struct PPM_WMI_IDLE_STATES_EX
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ void* TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Next::__l3::<lambda_BCC3B76B24A9C0C1>;

typedef struct _OLESTREAMVTBL
{
  /* 0x0000 */ void* Get /* function */;
  /* 0x0008 */ void* Put /* function */;
} OLESTREAMVTBL, *POLESTREAMVTBL; /* size: 0x0010 */

struct tagCWPSTRUCT
{
  /* 0x0000 */ __int64 lParam;
  /* 0x0008 */ unsigned __int64 wParam;
  /* 0x0010 */ unsigned int message;
  /* 0x0014 */ long Padding_916;
  /* 0x0018 */ struct HWND__* hwnd;
}; /* size: 0x0020 */

struct tagWINDOWPOS
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ int cx;
  /* 0x001c */ int cy;
  /* 0x0020 */ unsigned int flags;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _MIDL_SERVER_INFO_
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0008 */ void* const* DispatchTable /* function */;
  /* 0x0010 */ const unsigned char* ProcString;
  /* 0x0018 */ const unsigned short* FmtStringOffset;
  /* 0x0020 */ void* const* ThunkTable /* function */;
  /* 0x0028 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0030 */ unsigned __int64 nCount;
  /* 0x0038 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_SERVER_INFO_, *PMIDL_SERVER_INFO_; /* size: 0x0040 */

struct IInternetZoneManagerEx
{
}; /* size: 0x0008 */

typedef struct _OLESTREAM
{
  /* 0x0000 */ struct _OLESTREAMVTBL* lpstbl;
} OLESTREAM, *POLESTREAM; /* size: 0x0008 */

struct tagOLEVERB
{
  /* 0x0000 */ long lVerb;
  /* 0x0004 */ long Padding_917;
  /* 0x0008 */ wchar_t* lpszVerbName;
  /* 0x0010 */ unsigned long fuFlags;
  /* 0x0014 */ unsigned long grfAttribs;
}; /* size: 0x0018 */

typedef struct _RTL_LFG_RNG_STATE
{
  /* 0x0000 */ unsigned long SeedArray[55];
  /* 0x00dc */ unsigned long Next;
  /* 0x00e0 */ unsigned long NextP;
} RTL_LFG_RNG_STATE, *PRTL_LFG_RNG_STATE; /* size: 0x00e4 */

struct Microsoft::WRL::Wrappers::HandleTraits::EventTraits
{
}; /* size: 0x0001 */

class Windows::Auto<Windows::Rtl::IRtlWOUCSStream *>
{
}; /* size: 0x0008 */

struct tagTOUCH_HIT_TESTING_PROXIMITY_EVALUATION
{
  /* 0x0000 */ unsigned short score;
  /* 0x0002 */ char Padding_918[2];
  /* 0x0004 */ struct tagPOINT adjustedPoint;
}; /* size: 0x000c */

struct tagPOINTER_PEN_INFO
{
  /* 0x0000 */ struct tagPOINTER_INFO pointerInfo;
  /* 0x0060 */ unsigned int penFlags;
  /* 0x0064 */ unsigned int penMask;
  /* 0x0068 */ unsigned int pressure;
  /* 0x006c */ unsigned int rotation;
  /* 0x0070 */ int tiltX;
  /* 0x0074 */ int tiltY;
}; /* size: 0x0078 */

typedef struct _WOW64_FLOATING_SAVE_AREA
{
  /* 0x0000 */ unsigned long ControlWord;
  /* 0x0004 */ unsigned long StatusWord;
  /* 0x0008 */ unsigned long TagWord;
  /* 0x000c */ unsigned long ErrorOffset;
  /* 0x0010 */ unsigned long ErrorSelector;
  /* 0x0014 */ unsigned long DataOffset;
  /* 0x0018 */ unsigned long DataSelector;
  /* 0x001c */ unsigned char RegisterArea[80];
  /* 0x006c */ unsigned long Cr0NpxState;
} WOW64_FLOATING_SAVE_AREA, *PWOW64_FLOATING_SAVE_AREA; /* size: 0x0070 */

typedef struct _WOW64_CONTEXT
{
  /* 0x0000 */ unsigned long ContextFlags;
  /* 0x0004 */ unsigned long Dr0;
  /* 0x0008 */ unsigned long Dr1;
  /* 0x000c */ unsigned long Dr2;
  /* 0x0010 */ unsigned long Dr3;
  /* 0x0014 */ unsigned long Dr6;
  /* 0x0018 */ unsigned long Dr7;
  /* 0x001c */ struct _WOW64_FLOATING_SAVE_AREA FloatSave;
  /* 0x008c */ unsigned long SegGs;
  /* 0x0090 */ unsigned long SegFs;
  /* 0x0094 */ unsigned long SegEs;
  /* 0x0098 */ unsigned long SegDs;
  /* 0x009c */ unsigned long Edi;
  /* 0x00a0 */ unsigned long Esi;
  /* 0x00a4 */ unsigned long Ebx;
  /* 0x00a8 */ unsigned long Edx;
  /* 0x00ac */ unsigned long Ecx;
  /* 0x00b0 */ unsigned long Eax;
  /* 0x00b4 */ unsigned long Ebp;
  /* 0x00b8 */ unsigned long Eip;
  /* 0x00bc */ unsigned long SegCs;
  /* 0x00c0 */ unsigned long EFlags;
  /* 0x00c4 */ unsigned long Esp;
  /* 0x00c8 */ unsigned long SegSs;
  /* 0x00cc */ unsigned char ExtendedRegisters[512];
} WOW64_CONTEXT, *PWOW64_CONTEXT; /* size: 0x02cc */

struct IOleAdviseHolder
{
}; /* size: 0x0008 */

typedef struct _OPERATION_START_PARAMETERS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long OperationId;
  /* 0x0008 */ unsigned long Flags;
} OPERATION_START_PARAMETERS, *POPERATION_START_PARAMETERS; /* size: 0x000c */

struct tagRPC_CALL_ATTRIBUTES_V2_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_919;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_920;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ unsigned long IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_921[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ long __PADDING__[1];
}; /* size: 0x0070 */

typedef struct _KEY_WRITE_TIME_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
} KEY_WRITE_TIME_INFORMATION, *PKEY_WRITE_TIME_INFORMATION; /* size: 0x0008 */

struct tagDRAWTEXTPARAMS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iTabLength;
  /* 0x0008 */ int iLeftMargin;
  /* 0x000c */ int iRightMargin;
  /* 0x0010 */ unsigned int uiLengthDrawn;
}; /* size: 0x0014 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> const >;

struct tagComCallData
{
  /* 0x0000 */ unsigned long dwDispid;
  /* 0x0004 */ unsigned long dwReserved;
  /* 0x0008 */ void* pUserDefined;
}; /* size: 0x0010 */

typedef struct _TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1
{
  /* 0x0000 */ unsigned long Name;
  /* 0x0004 */ unsigned short ValueType;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ValueCount;
  union
  {
    union
    {
      /* 0x0010 */ unsigned long pInt64[1];
      /* 0x0010 */ unsigned long pUint64[1];
      /* 0x0010 */ unsigned long ppString[1];
      /* 0x0010 */ unsigned long pFqbn[1];
      /* 0x0010 */ unsigned long pOctetString[1];
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Values;
} TOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1, *PTOKEN_SECURITY_ATTRIBUTE_RELATIVE_V1; /* size: 0x0014 */

typedef struct _XSAVE_FEATURE
{
  /* 0x0000 */ unsigned long FeatureId;
  /* 0x0004 */ long Padding_922;
  union
  {
    /* 0x0008 */ struct _XSAVE_VENDORS* Vendors;
    /* 0x0008 */ unsigned __int64 Unused;
  }; /* size: 0x0008 */
} XSAVE_FEATURE, *PXSAVE_FEATURE; /* size: 0x0010 */

typedef struct _XSAVE_POLICY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long MaxSaveAreaLength;
  /* 0x0010 */ unsigned __int64 FeatureBitmask;
  /* 0x0018 */ unsigned long NumberOfFeatures;
  /* 0x001c */ long Padding_923;
  /* 0x0020 */ struct _XSAVE_FEATURE Features[1];
} XSAVE_POLICY, *PXSAVE_POLICY; /* size: 0x0030 */

typedef struct _UMS_SCHEDULER_STARTUP_INFO
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_924;
  /* 0x0008 */ void* CompletionList;
  /* 0x0010 */ void* SchedulerProc /* function */;
  /* 0x0018 */ void* SchedulerParam;
} UMS_SCHEDULER_STARTUP_INFO, *PUMS_SCHEDULER_STARTUP_INFO; /* size: 0x0020 */

class DISABLED_FEATURES
{
  union
  {
    /* 0x0000 */ int s_fDisableAll;
    /* 0x0000 */ int s_fDisableTypelibs;
    /* 0x0000 */ int s_fDisableDispatch;
    /* 0x0000 */ int s_fDisableAllForOle32;
    /* 0x0000 */ int s_fDisableDispatchForOle32;
    /* 0x0000 */ union _RTL_RUN_ONCE s_InitOnce;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

struct tagCustomPrivResolverInfo
{
  /* 0x0000 */ unsigned __int64 OxidServer;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pServerORBindings;
  /* 0x0010 */ struct tagOXID_INFO OxidInfo;
  /* 0x0040 */ unsigned __int64 LocalMidOfRemote;
  /* 0x0048 */ unsigned long DllServerModel;
  /* 0x004c */ long Padding_925;
  /* 0x0050 */ wchar_t* pwszDllServer;
  /* 0x0058 */ int FoundInROT;
  /* 0x005c */ long __PADDING__[1];
}; /* size: 0x0060 */

struct tagSTYLEBUFA
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ char szDescription[32];
}; /* size: 0x0024 */

class BUCL::CIsSignedType<unsigned long>
{
}; /* size: 0x0001 */

typedef struct _MANAGEDAPPLICATION
{
  /* 0x0000 */ wchar_t* pszPackageName;
  /* 0x0008 */ wchar_t* pszPublisher;
  /* 0x0010 */ unsigned long dwVersionHi;
  /* 0x0014 */ unsigned long dwVersionLo;
  /* 0x0018 */ unsigned long dwRevision;
  /* 0x001c */ struct _GUID GpoId;
  /* 0x002c */ long Padding_926;
  /* 0x0030 */ wchar_t* pszPolicyName;
  /* 0x0038 */ struct _GUID ProductId;
  /* 0x0048 */ unsigned short Language;
  /* 0x004a */ char Padding_927[6];
  /* 0x0050 */ wchar_t* pszOwner;
  /* 0x0058 */ wchar_t* pszCompany;
  /* 0x0060 */ wchar_t* pszComments;
  /* 0x0068 */ wchar_t* pszContact;
  /* 0x0070 */ wchar_t* pszSupportUrl;
  /* 0x0078 */ unsigned long dwPathType;
  /* 0x007c */ int bInstalled;
} MANAGEDAPPLICATION, *PMANAGEDAPPLICATION; /* size: 0x0080 */

typedef struct _LOOKUP_STREAM_FROM_CLUSTER_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToNext;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER Reserved;
  /* 0x0010 */ union _LARGE_INTEGER Cluster;
  /* 0x0018 */ wchar_t FileName[1];
  /* 0x001a */ char __PADDING__[6];
} LOOKUP_STREAM_FROM_CLUSTER_ENTRY, *PLOOKUP_STREAM_FROM_CLUSTER_ENTRY; /* size: 0x0020 */

class CSrvCallState
{
  /* 0x0000 */ unsigned long _dwCallCatIn;
  /* 0x0004 */ long Padding_928;
  /* 0x0008 */ class CSrvCallState* _pPrev;
}; /* size: 0x0010 */

struct value_entW
{
  /* 0x0000 */ wchar_t* ve_valuename;
  /* 0x0008 */ unsigned long ve_valuelen;
  /* 0x000c */ long Padding_929;
  /* 0x0010 */ unsigned __int64 ve_valueptr;
  /* 0x0018 */ unsigned long ve_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct XSAVE_CPU_ERRATA
{
  /* 0x0000 */ unsigned long NumberOfErrata;
  /* 0x0004 */ long Padding_930;
  /* 0x0008 */ struct XSAVE_CPU_INFO Errata[1];
}; /* size: 0x0028 */

class CSurrogatedObjectList
{
  /* 0x0000 */ struct IOleInPlaceActiveObject* _pInplaceObject;
  /* 0x0008 */ struct HWND__* _hWnd;
  /* 0x0010 */ class CSurrogatedObjectList* _pNext;
}; /* size: 0x0018 */

typedef struct _CMC_STATUS_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ unsigned long cBodyList;
  /* 0x0008 */ unsigned long* rgdwBodyList;
  /* 0x0010 */ wchar_t* pwszStatusString;
  /* 0x0018 */ unsigned long dwOtherInfoChoice;
  /* 0x001c */ long Padding_931;
  union
  {
    /* 0x0020 */ unsigned long dwFailInfo;
    /* 0x0020 */ struct _CMC_PEND_INFO* pPendInfo;
  }; /* size: 0x0008 */
} CMC_STATUS_INFO, *PCMC_STATUS_INFO; /* size: 0x0028 */

typedef struct _FSCTL_GET_INTEGRITY_INFORMATION_BUFFER
{
  /* 0x0000 */ unsigned short ChecksumAlgorithm;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ChecksumChunkSizeInBytes;
  /* 0x000c */ unsigned long ClusterSizeInBytes;
} FSCTL_GET_INTEGRITY_INFORMATION_BUFFER, *PFSCTL_GET_INTEGRITY_INFORMATION_BUFFER; /* size: 0x0010 */

struct val_context
{
  /* 0x0000 */ int valuelen;
  /* 0x0004 */ long Padding_932;
  /* 0x0008 */ void* value_context;
  /* 0x0010 */ void* val_buff_ptr;
}; /* size: 0x0018 */

class CCliRotHintTable
{
  /* 0x0000 */ long Padding_933[2];
  /* 0x0008 */ void* _hSm;
}; /* size: 0x0010 */

class CRunningObjectTable
{
  /* 0x0000 */ long Padding_934[4];
  /* 0x0010 */ class CArrayFValue _afvRotList;
  /* 0x0028 */ class CCliRotHintTable _crht;
  /* 0x0038 */ unsigned short _wSigRotItem;
}; /* size: 0x0040 */

struct ACTIVATION_PROPERTIES
{
  /* 0x0000 */ const struct _GUID& _rclsid;
  /* 0x0008 */ struct _GUID _partition;
  /* 0x0018 */ const struct _GUID& _riid;
  /* 0x0020 */ unsigned long _dwFlags;
  /* 0x0024 */ unsigned long _dwActvFlags;
  /* 0x0028 */ unsigned long _dwContext;
  /* 0x002c */ unsigned long _dwDllServerType;
  /* 0x0030 */ wchar_t* _pwszDllServer;
  /* 0x0038 */ struct IUnknown** _ppUnk;
  /* 0x0040 */ struct IComClassInfo* _pCI;
}; /* size: 0x0048 */

struct tagContextStackNode
{
  /* 0x0000 */ struct tagContextStackNode* pNext;
  /* 0x0008 */ class CObjectContext* pSavedContext;
  /* 0x0010 */ class CObjectContext* pServerContext;
  /* 0x0018 */ class CCtxCall* pClientCall;
  /* 0x0020 */ class CCtxCall* pServerCall;
  /* 0x0028 */ class CPolicySet* pPS;
}; /* size: 0x0030 */

typedef struct _IMAGE_ARM_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  union
  {
    /* 0x0004 */ unsigned long UnwindData;
    struct /* bitfield */
    {
      /* 0x0004 */ unsigned long Flag : 2; /* bit position: 0 */
      /* 0x0004 */ unsigned long FunctionLength : 11; /* bit position: 2 */
      /* 0x0004 */ unsigned long Ret : 2; /* bit position: 13 */
      /* 0x0004 */ unsigned long H : 1; /* bit position: 15 */
      /* 0x0004 */ unsigned long Reg : 3; /* bit position: 16 */
      /* 0x0004 */ unsigned long R : 1; /* bit position: 19 */
      /* 0x0004 */ unsigned long L : 1; /* bit position: 20 */
      /* 0x0004 */ unsigned long C : 1; /* bit position: 21 */
      /* 0x0004 */ unsigned long StackAdjust : 10; /* bit position: 22 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} IMAGE_ARM_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ARM_RUNTIME_FUNCTION_ENTRY; /* size: 0x0008 */

typedef struct _WIN32_MEMORY_RANGE_ENTRY
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ unsigned __int64 NumberOfBytes;
} WIN32_MEMORY_RANGE_ENTRY, *PWIN32_MEMORY_RANGE_ENTRY; /* size: 0x0010 */

struct _RTL_STACK_TRACE_ENTRY;

typedef struct _IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned __int64 BeginAddress;
  /* 0x0008 */ unsigned __int64 EndAddress;
  /* 0x0010 */ unsigned __int64 ExceptionHandler;
  /* 0x0018 */ unsigned __int64 HandlerData;
  /* 0x0020 */ unsigned __int64 PrologEndAddress;
} IMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA64_RUNTIME_FUNCTION_ENTRY; /* size: 0x0028 */

class CMonikerBag
{
}; /* size: 0x0020 */

class ASTAWaitContext;

typedef struct _SYSTEM_MEMORY_LIST_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ZeroPageCount;
  /* 0x0008 */ unsigned __int64 FreePageCount;
  /* 0x0010 */ unsigned __int64 ModifiedPageCount;
  /* 0x0018 */ unsigned __int64 ModifiedNoWritePageCount;
  /* 0x0020 */ unsigned __int64 BadPageCount;
  /* 0x0028 */ unsigned __int64 PageCountByPriority[8];
  /* 0x0068 */ unsigned __int64 RepurposedPagesByPriority[8];
  /* 0x00a8 */ unsigned __int64 ModifiedPageCountPageFile;
} SYSTEM_MEMORY_LIST_INFORMATION, *PSYSTEM_MEMORY_LIST_INFORMATION; /* size: 0x00b0 */

typedef struct _SHITEMID
{
  /* 0x0000 */ unsigned short cb;
  /* 0x0002 */ unsigned char abID[1];
} SHITEMID, *PSHITEMID; /* size: 0x0003 */

typedef struct _ITEMIDLIST
{
  /* 0x0000 */ struct _SHITEMID mkid;
} ITEMIDLIST, *PITEMIDLIST; /* size: 0x0003 */

struct IInitializeSpy
{
}; /* size: 0x0008 */

class CLimitedWritableStorage::CopyTo::__l9::<lambda_4EBAA7B7F83E2AA1>;

class Serializer
{
  /* 0x0000 */ struct IStream* _pStream;
  /* 0x0008 */ struct IStream* _pOriginalStream;
  /* 0x0010 */ struct IBuffer* _pIBuff;
  /* 0x0018 */ unsigned char* _buffer;
  /* 0x0020 */ unsigned long _nWritten;
  /* 0x0024 */ unsigned long _bufSize;
  /* 0x0028 */ unsigned long _operationSize;
  /* 0x002c */ long Padding_935;
  /* 0x0030 */ void* _handle;
  /* 0x0038 */ long _clRefs;
  /* 0x003c */ unsigned long _direction;
  /* 0x0040 */ unsigned long _position;
  /* 0x0044 */ unsigned long _start;
  /* 0x0048 */ unsigned long _dwMaxDestCtx;
  /* 0x004c */ unsigned long _dwCurrentDestCtx;
  /* 0x0050 */ unsigned long _dwMarshalFlags;
}; /* size: 0x0058 */

struct HBRUSH__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _BOOT_ENTROPY_NT_RESULT
{
  /* 0x0000 */ unsigned long maxEntropySources;
  /* 0x0004 */ long Padding_936;
  /* 0x0008 */ struct _BOOT_ENTROPY_SOURCE_NT_RESULT EntropySourceResult[7];
  /* 0x02e0 */ unsigned char SeedBytesForCng[48];
} BOOT_ENTROPY_NT_RESULT, *PBOOT_ENTROPY_NT_RESULT; /* size: 0x0310 */

struct ISerializableParent
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_HEADER
{
  /* 0x0000 */ unsigned int Signature;
  /* 0x0004 */ unsigned int Version;
  /* 0x0008 */ unsigned int NumberOfStreams;
  /* 0x000c */ unsigned long StreamDirectoryRva;
  /* 0x0010 */ unsigned int CheckSum;
  union
  {
    /* 0x0014 */ unsigned int Reserved;
    /* 0x0014 */ unsigned int TimeDateStamp;
  }; /* size: 0x0004 */
  /* 0x0018 */ unsigned __int64 Flags;
} MINIDUMP_HEADER, *PMINIDUMP_HEADER; /* size: 0x0020 */

struct tagWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcWindow;
  /* 0x0014 */ struct tagRECT rcClient;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ unsigned long dwExStyle;
  /* 0x002c */ unsigned long dwWindowStatus;
  /* 0x0030 */ unsigned int cxWindowBorders;
  /* 0x0034 */ unsigned int cyWindowBorders;
  /* 0x0038 */ unsigned short atomWindowType;
  /* 0x003a */ unsigned short wCreatorVersion;
}; /* size: 0x003c */

typedef struct _TOKEN_ELEVATION
{
  /* 0x0000 */ unsigned long TokenIsElevated;
} TOKEN_ELEVATION, *PTOKEN_ELEVATION; /* size: 0x0004 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlBlobProvider* m_Data;
}; /* size: 0x0008 */

typedef struct _REPARSE_GUID_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  /* 0x0008 */ struct _GUID ReparseGuid;
  struct
  {
    /* 0x0018 */ unsigned char DataBuffer[1];
  } /* size: 0x0001 */ GenericReparseBuffer;
  /* 0x0019 */ char __PADDING__[3];
} REPARSE_GUID_DATA_BUFFER, *PREPARSE_GUID_DATA_BUFFER; /* size: 0x001c */

typedef struct _LDR_SERVICE_TAG_RECORD
{
  /* 0x0000 */ struct _LDR_SERVICE_TAG_RECORD* Next;
  /* 0x0008 */ unsigned long ServiceTag;
  /* 0x000c */ long __PADDING__[1];
} LDR_SERVICE_TAG_RECORD, *PLDR_SERVICE_TAG_RECORD; /* size: 0x0010 */

typedef struct _PERF_INSTANCE_DEFINITION
{
  /* 0x0000 */ unsigned long ByteLength;
  /* 0x0004 */ unsigned long ParentObjectTitleIndex;
  /* 0x0008 */ unsigned long ParentObjectInstance;
  /* 0x000c */ long UniqueID;
  /* 0x0010 */ unsigned long NameOffset;
  /* 0x0014 */ unsigned long NameLength;
} PERF_INSTANCE_DEFINITION, *PPERF_INSTANCE_DEFINITION; /* size: 0x0018 */

typedef struct _TXFS_QUERY_RM_INFORMATION
{
  /* 0x0000 */ unsigned long BytesRequired;
  /* 0x0004 */ long Padding_937;
  /* 0x0008 */ unsigned __int64 TailLsn;
  /* 0x0010 */ unsigned __int64 CurrentLsn;
  /* 0x0018 */ unsigned __int64 ArchiveTailLsn;
  /* 0x0020 */ unsigned __int64 LogContainerSize;
  /* 0x0028 */ union _LARGE_INTEGER HighestVirtualClock;
  /* 0x0030 */ unsigned long LogContainerCount;
  /* 0x0034 */ unsigned long LogContainerCountMax;
  /* 0x0038 */ unsigned long LogContainerCountMin;
  /* 0x003c */ unsigned long LogGrowthIncrement;
  /* 0x0040 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0044 */ unsigned long Flags;
  /* 0x0048 */ unsigned short LoggingMode;
  /* 0x004a */ unsigned short Reserved;
  /* 0x004c */ unsigned long RmState;
  /* 0x0050 */ unsigned __int64 LogCapacity;
  /* 0x0058 */ unsigned __int64 LogFree;
  /* 0x0060 */ unsigned __int64 TopsSize;
  /* 0x0068 */ unsigned __int64 TopsUsed;
  /* 0x0070 */ unsigned __int64 TransactionCount;
  /* 0x0078 */ unsigned __int64 OnePCCount;
  /* 0x0080 */ unsigned __int64 TwoPCCount;
  /* 0x0088 */ unsigned __int64 NumberLogFileFull;
  /* 0x0090 */ unsigned __int64 OldestTransactionAge;
  /* 0x0098 */ struct _GUID RMName;
  /* 0x00a8 */ unsigned long TmLogPathOffset;
  /* 0x00ac */ long __PADDING__[1];
} TXFS_QUERY_RM_INFORMATION, *PTXFS_QUERY_RM_INFORMATION; /* size: 0x00b0 */

typedef struct _wfinddatai64_t
{
  /* 0x0000 */ unsigned int attrib;
  /* 0x0004 */ long Padding_938;
  /* 0x0008 */ __int64 time_create;
  /* 0x0010 */ __int64 time_access;
  /* 0x0018 */ __int64 time_write;
  /* 0x0020 */ __int64 size;
  /* 0x0028 */ wchar_t name[260];
} wfinddatai64_t, *Pwfinddatai64_t; /* size: 0x0230 */

typedef struct _INITIAL_TEB
{
  struct
  {
    /* 0x0000 */ void* OldStackBase;
    /* 0x0008 */ void* OldStackLimit;
  } /* size: 0x0010 */ OldInitialTeb;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* StackAllocationBase;
} INITIAL_TEB, *PINITIAL_TEB; /* size: 0x0028 */

struct IReleaseMarshalBuffers
{
}; /* size: 0x0008 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION
{
  /* 0x0000 */ void* Section;
  /* 0x0008 */ void* MappedBase;
  /* 0x0010 */ void* ImageBase;
  /* 0x0018 */ unsigned long ImageSize;
  /* 0x001c */ unsigned long Flags;
  /* 0x0020 */ unsigned short LoadOrderIndex;
  /* 0x0022 */ unsigned short InitOrderIndex;
  /* 0x0024 */ unsigned short LoadCount;
  /* 0x0026 */ unsigned short OffsetToFileName;
  /* 0x0028 */ unsigned char FullPathName[256];
} RTL_PROCESS_MODULE_INFORMATION, *PRTL_PROCESS_MODULE_INFORMATION; /* size: 0x0128 */

typedef struct _RTL_PROCESS_MODULES
{
  /* 0x0000 */ unsigned long NumberOfModules;
  /* 0x0004 */ long Padding_939;
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION Modules[1];
} RTL_PROCESS_MODULES, *PRTL_PROCESS_MODULES; /* size: 0x0130 */

struct ICreateTypeInfo
{
}; /* size: 0x0008 */

class istream_withassign
{
}; /* size: 0x0080 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;

typedef struct _DRIVER_INFO_1A
{
  /* 0x0000 */ char* pName;
} DRIVER_INFO_1A, *PDRIVER_INFO_1A; /* size: 0x0008 */

typedef struct _RTL_PROCESS_MODULE_INFORMATION_EX
{
  /* 0x0000 */ unsigned short NextOffset;
  /* 0x0002 */ char Padding_940[6];
  /* 0x0008 */ struct _RTL_PROCESS_MODULE_INFORMATION BaseInfo;
  /* 0x0130 */ unsigned long ImageChecksum;
  /* 0x0134 */ unsigned long TimeDateStamp;
  /* 0x0138 */ void* DefaultBase;
} RTL_PROCESS_MODULE_INFORMATION_EX, *PRTL_PROCESS_MODULE_INFORMATION_EX; /* size: 0x0140 */

struct WINTRUST_SGNR_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_941;
  /* 0x0008 */ const wchar_t* pcwszDisplayName;
  /* 0x0010 */ struct _CMSG_SIGNER_INFO* psSignerInfo;
  /* 0x0018 */ unsigned long chStores;
  /* 0x001c */ long Padding_942;
  /* 0x0020 */ void** pahStores;
}; /* size: 0x0028 */

struct IPersistMemory
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_BASIC_LIMIT_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER PerProcessUserTimeLimit;
  /* 0x0008 */ union _LARGE_INTEGER PerJobUserTimeLimit;
  /* 0x0010 */ unsigned long LimitFlags;
  /* 0x0014 */ long Padding_943;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0028 */ unsigned long ActiveProcessLimit;
  /* 0x002c */ long Padding_944;
  /* 0x0030 */ unsigned __int64 Affinity;
  /* 0x0038 */ unsigned long PriorityClass;
  /* 0x003c */ unsigned long SchedulingClass;
} JOBOBJECT_BASIC_LIMIT_INFORMATION, *PJOBOBJECT_BASIC_LIMIT_INFORMATION; /* size: 0x0040 */

typedef struct _CRL_ISSUING_DIST_POINT
{
  /* 0x0000 */ struct _CRL_DIST_POINT_NAME DistPointName;
  /* 0x0018 */ int fOnlyContainsUserCerts;
  /* 0x001c */ int fOnlyContainsCACerts;
  /* 0x0020 */ struct _CRYPT_BIT_BLOB OnlySomeReasonFlags;
  /* 0x0038 */ int fIndirectCRL;
  /* 0x003c */ long __PADDING__[1];
} CRL_ISSUING_DIST_POINT, *PCRL_ISSUING_DIST_POINT; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> const >;

typedef struct _RTL_HEAP_INFORMATION
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned short EntryOverhead;
  /* 0x000e */ unsigned short CreatorBackTraceIndex;
  /* 0x0010 */ unsigned __int64 BytesAllocated;
  /* 0x0018 */ unsigned __int64 BytesCommitted;
  /* 0x0020 */ unsigned long NumberOfTags;
  /* 0x0024 */ unsigned long NumberOfEntries;
  /* 0x0028 */ unsigned long NumberOfPseudoTags;
  /* 0x002c */ unsigned long PseudoTagGranularity;
  /* 0x0030 */ unsigned long Reserved[5];
  /* 0x0044 */ long Padding_945;
  /* 0x0048 */ struct _RTL_HEAP_TAG* Tags;
  /* 0x0050 */ struct _RTL_HEAP_ENTRY* Entries;
} RTL_HEAP_INFORMATION, *PRTL_HEAP_INFORMATION; /* size: 0x0058 */

typedef struct _RTL_PROCESS_HEAPS
{
  /* 0x0000 */ unsigned long NumberOfHeaps;
  /* 0x0004 */ long Padding_946;
  /* 0x0008 */ struct _RTL_HEAP_INFORMATION Heaps[1];
} RTL_PROCESS_HEAPS, *PRTL_PROCESS_HEAPS; /* size: 0x0060 */

struct IQuickActivate
{
}; /* size: 0x0008 */

class ostream_withassign
{
}; /* size: 0x0080 */

struct IShellLinkW
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_FUNCTION_TABLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 MinimumAddress;
  /* 0x0008 */ unsigned __int64 MaximumAddress;
  /* 0x0010 */ unsigned __int64 BaseAddress;
  /* 0x0018 */ unsigned int EntryCount;
  /* 0x001c */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_DESCRIPTOR, *PMINIDUMP_FUNCTION_TABLE_DESCRIPTOR; /* size: 0x0020 */

typedef struct _IO_ERROR_LOG_MESSAGE
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short Size;
  /* 0x0004 */ unsigned short DriverNameLength;
  /* 0x0006 */ char Padding_947[2];
  /* 0x0008 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0010 */ unsigned long DriverNameOffset;
  /* 0x0014 */ long Padding_948;
  /* 0x0018 */ struct _IO_ERROR_LOG_PACKET EntryData;
} IO_ERROR_LOG_MESSAGE, *PIO_ERROR_LOG_MESSAGE; /* size: 0x0048 */

typedef struct _userSTGMEDIUM::_STGMEDIUM_UNION
{
  /* 0x0000 */ unsigned long tymed;
  /* 0x0004 */ long Padding_949;
  /* 0x0008 */ union _userSTGMEDIUM::_STGMEDIUM_UNION::__MIDL_IAdviseSink_0003 u;
} userSTGMEDIUM::_STGMEDIUM_UNION, *PuserSTGMEDIUM::_STGMEDIUM_UNION; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<IUnknown>
{
  /* 0x0000 */ struct IUnknown* ptr_;
}; /* size: 0x0008 */

typedef struct _RTL_HEAP_TAG
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
  /* 0x0010 */ unsigned short TagIndex;
  /* 0x0012 */ unsigned short CreatorBackTraceIndex;
  /* 0x0014 */ wchar_t TagName[24];
  /* 0x0044 */ long __PADDING__[1];
} RTL_HEAP_TAG, *PRTL_HEAP_TAG; /* size: 0x0048 */

typedef struct _MINIDUMP_MEMORY_DESCRIPTOR64
{
  /* 0x0000 */ unsigned __int64 StartOfMemoryRange;
  /* 0x0008 */ unsigned __int64 DataSize;
} MINIDUMP_MEMORY_DESCRIPTOR64, *PMINIDUMP_MEMORY_DESCRIPTOR64; /* size: 0x0010 */

typedef struct _PS_CREATE_INFO
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ enum PS_CREATE_STATE State;
  /* 0x000c */ long Padding_950;
  union
  {
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long InitFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char WriteOutputOnExit : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char DetectManifest : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char IFEOSkipDebugger : 1; /* bit position: 2 */
            /* 0x0010 */ unsigned char IFEODoNotPropagateKeyState : 1; /* bit position: 3 */
            /* 0x0010 */ unsigned char SpareBits1 : 4; /* bit position: 4 */
          }; /* bitfield */
          /* 0x0011 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x0012 */ unsigned short ProhibitedImageCharacteristics : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0014 */ unsigned long AdditionalFileAccess;
    } /* size: 0x0008 */ InitState;
    struct
    {
      /* 0x0010 */ void* FileHandle;
    } /* size: 0x0008 */ FailSection;
    struct
    {
      /* 0x0010 */ unsigned short DllCharacteristics;
    } /* size: 0x0002 */ ExeFormat;
    struct
    {
      /* 0x0010 */ void* IFEOKey;
    } /* size: 0x0008 */ ExeName;
    struct
    {
      union
      {
        /* 0x0010 */ unsigned long OutputFlags;
        struct
        {
          struct /* bitfield */
          {
            /* 0x0010 */ unsigned char ProtectedProcess : 1; /* bit position: 0 */
            /* 0x0010 */ unsigned char AddressSpaceOverride : 1; /* bit position: 1 */
            /* 0x0010 */ unsigned char DevOverrideEnabled : 1; /* bit position: 2 */
            /* 0x0010 */ unsigned char ManifestDetected : 1; /* bit position: 3 */
            /* 0x0010 */ unsigned char SpareBits1 : 4; /* bit position: 4 */
          }; /* bitfield */
          /* 0x0011 */ unsigned char SpareBits2 : 8; /* bit position: 0 */
          /* 0x0012 */ unsigned short SpareBits3 : 16; /* bit position: 0 */
        }; /* size: 0x0004 */
      }; /* size: 0x0004 */
      /* 0x0004 */ long Padding_951;
      /* 0x0018 */ void* FileHandle;
      /* 0x0020 */ void* SectionHandle;
      /* 0x0028 */ unsigned __int64 UserProcessParametersNative;
      /* 0x0030 */ unsigned long UserProcessParametersWow64;
      /* 0x0034 */ unsigned long CurrentParameterFlags;
      /* 0x0038 */ unsigned __int64 PebAddressNative;
      /* 0x0040 */ unsigned long PebAddressWow64;
      /* 0x0034 */ long Padding_952;
      /* 0x0048 */ unsigned __int64 ManifestAddress;
      /* 0x0050 */ unsigned long ManifestSize;
      /* 0x0054 */ long __PADDING__[1];
    } /* size: 0x0048 */ SuccessState;
  }; /* size: 0x0048 */
} PS_CREATE_INFO, *PPS_CREATE_INFO; /* size: 0x0058 */

class CAntiMoniker
{
  /* 0x0000 */ long Padding_953[10];
  /* 0x0028 */ unsigned long m_count;
}; /* size: 0x0030 */

typedef struct _RTL_PROCESS_LOCK_INFORMATION
{
  /* 0x0000 */ void* Address;
  /* 0x0008 */ unsigned short Type;
  /* 0x000a */ unsigned short CreatorBackTraceIndex;
  /* 0x000c */ long Padding_954;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ long LockCount;
  /* 0x001c */ unsigned long ContentionCount;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ long RecursionCount;
  /* 0x0028 */ unsigned long NumberOfWaitingShared;
  /* 0x002c */ unsigned long NumberOfWaitingExclusive;
} RTL_PROCESS_LOCK_INFORMATION, *PRTL_PROCESS_LOCK_INFORMATION; /* size: 0x0030 */

typedef struct _RTL_PROCESS_LOCKS
{
  /* 0x0000 */ unsigned long NumberOfLocks;
  /* 0x0004 */ long Padding_955;
  /* 0x0008 */ struct _RTL_PROCESS_LOCK_INFORMATION Locks[1];
} RTL_PROCESS_LOCKS, *PRTL_PROCESS_LOCKS; /* size: 0x0038 */

typedef struct _SOURCEFILEW
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ wchar_t* FileName;
} SOURCEFILEW, *PSOURCEFILEW; /* size: 0x0010 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A
{
  /* 0x0000 */ void* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_956;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned char* ServerCertificateSubject;
  /* 0x0028 */ void* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_957;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V3_A, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_A; /* size: 0x0040 */

struct tagInstanceInfoData
{
  /* 0x0000 */ wchar_t* fileName;
  /* 0x0008 */ unsigned long mode;
  /* 0x000c */ long Padding_958;
  /* 0x0010 */ struct tagMInterfacePointer* ifdROT;
  /* 0x0018 */ struct tagMInterfacePointer* ifdStg;
}; /* size: 0x0020 */

class InstanceInfo
{
  /* 0x0000 */ long Padding_959[8];
  /* 0x0020 */ struct tagInstanceInfoData _instanceInfoData;
  /* 0x0040 */ struct IStorage* _pstg;
}; /* size: 0x0048 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> const >;

class Microsoft::WRL::ComPtr<IClipboardBrokerInternal>
{
  /* 0x0000 */ struct IClipboardBrokerInternal* ptr_;
}; /* size: 0x0008 */

typedef struct _DRIVER_INFO_6A
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_960;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ char* pEnvironment;
  /* 0x0018 */ char* pDriverPath;
  /* 0x0020 */ char* pDataFile;
  /* 0x0028 */ char* pConfigFile;
  /* 0x0030 */ char* pHelpFile;
  /* 0x0038 */ char* pDependentFiles;
  /* 0x0040 */ char* pMonitorName;
  /* 0x0048 */ char* pDefaultDataType;
  /* 0x0050 */ char* pszzPreviousNames;
  /* 0x0058 */ struct _FILETIME ftDriverDate;
  /* 0x0060 */ unsigned __int64 dwlDriverVersion;
  /* 0x0068 */ char* pszMfgName;
  /* 0x0070 */ char* pszOEMUrl;
  /* 0x0078 */ char* pszHardwareID;
  /* 0x0080 */ char* pszProvider;
} DRIVER_INFO_6A, *PDRIVER_INFO_6A; /* size: 0x0088 */

typedef struct _LDR_FAILURE_DATA
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ wchar_t ImageName[32];
  /* 0x0044 */ wchar_t AdditionalInfo[32];
} LDR_FAILURE_DATA, *PLDR_FAILURE_DATA; /* size: 0x0084 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ long __PADDING__[1];
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION; /* size: 0x0030 */

typedef struct _X86_CALL_FRAME
{
  /* 0x0000 */ unsigned long ReturnAddress;
  /* 0x0004 */ unsigned long Param1;
  /* 0x0008 */ unsigned long Param2;
  /* 0x000c */ unsigned long CompatibilityArea;
} X86_CALL_FRAME, *PX86_CALL_FRAME; /* size: 0x0010 */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fCommercial;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_STATUS; /* size: 0x0008 */

typedef struct _SYSTEM_VHD_BOOT_INFORMATION
{
  /* 0x0000 */ unsigned char OsDiskIsVhd;
  /* 0x0001 */ char Padding_961[3];
  /* 0x0004 */ unsigned long OsVhdFilePathOffset;
  /* 0x0008 */ wchar_t OsVhdParentVolume[1];
  /* 0x000a */ char __PADDING__[2];
} SYSTEM_VHD_BOOT_INFORMATION, *PSYSTEM_VHD_BOOT_INFORMATION; /* size: 0x000c */

typedef struct _ALPC_PORT_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ struct _SECURITY_QUALITY_OF_SERVICE SecurityQos;
  /* 0x0010 */ unsigned __int64 MaxMessageLength;
  /* 0x0018 */ unsigned __int64 MemoryBandwidth;
  /* 0x0020 */ unsigned __int64 MaxPoolUsage;
  /* 0x0028 */ unsigned __int64 MaxSectionSize;
  /* 0x0030 */ unsigned __int64 MaxViewSize;
  /* 0x0038 */ unsigned __int64 MaxTotalSectionSize;
  /* 0x0040 */ unsigned long DupObjectTypes;
  /* 0x0044 */ unsigned long Reserved;
} ALPC_PORT_ATTRIBUTES, *PALPC_PORT_ATTRIBUTES; /* size: 0x0048 */

struct HSTRING_BUFFER__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct HIMC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _RTL_VERIFIER_HEAP_TABLE
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_962;
  /* 0x0008 */ void* VrfHeapAllocate /* function */;
  /* 0x0010 */ void* VrfHeapReAllocate /* function */;
  /* 0x0018 */ void* VrfHeapFree /* function */;
  /* 0x0020 */ void* VrfHeapCreate /* function */;
  /* 0x0028 */ void* VrfHeapDestroy /* function */;
  /* 0x0030 */ void* VrfHeapExtend /* function */;
  /* 0x0038 */ void* VrfGetProcessHeaps /* function */;
  /* 0x0040 */ void* VrfHeapWalk /* function */;
  /* 0x0048 */ void* VrfHeapLock /* function */;
  /* 0x0050 */ void* VrfHeapUnlock /* function */;
  /* 0x0058 */ void* VrfHeapIsLocked /* function */;
  /* 0x0060 */ void* VrfHeapValidate /* function */;
  /* 0x0068 */ void* VrfHeapSetUserValue /* function */;
  /* 0x0070 */ void* VrfHeapGetUserInfo /* function */;
  /* 0x0078 */ void* VrfHeapSetUserFlags /* function */;
  /* 0x0080 */ void* VrfHeapSerialize /* function */;
  /* 0x0088 */ void* VrfHeapSize /* function */;
  /* 0x0090 */ void* VrfHeapCompact /* function */;
  /* 0x0098 */ void* VrfHeapZero /* function */;
  /* 0x00a0 */ void* VrfQueryVerifierOptions /* function */;
  /* 0x00a8 */ void* VrfSetVerifierOptions /* function */;
} RTL_VERIFIER_HEAP_TABLE, *PRTL_VERIFIER_HEAP_TABLE; /* size: 0x00b0 */

typedef struct _FILE_VALID_DATA_LENGTH_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER ValidDataLength;
} FILE_VALID_DATA_LENGTH_INFORMATION, *PFILE_VALID_DATA_LENGTH_INFORMATION; /* size: 0x0008 */

typedef struct _EVENTSFORLOGFILE
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ wchar_t szLogicalLogFile[256];
  /* 0x0204 */ unsigned long ulNumRecords;
  /* 0x0208 */ struct _EVENTLOGRECORD* pEventLogRecords /* zero-length array */;
} EVENTSFORLOGFILE, *PEVENTSFORLOGFILE; /* size: 0x0208 */

class CPointerHashTable
{
}; /* size: 0x0028 */

struct tagMDICREATESTRUCTA
{
  /* 0x0000 */ const char* szClass;
  /* 0x0008 */ const char* szTitle;
  /* 0x0010 */ void* hOwner;
  /* 0x0018 */ int x;
  /* 0x001c */ int y;
  /* 0x0020 */ int cx;
  /* 0x0024 */ int cy;
  /* 0x0028 */ unsigned long style;
  /* 0x002c */ long Padding_963;
  /* 0x0030 */ __int64 lParam;
}; /* size: 0x0038 */

class CClassCache::CServiceRefEntry
{
  /* 0x0000 */ unsigned long _ulServiceId;
  /* 0x0004 */ unsigned long _cRefsServiceProcess;
  /* 0x0008 */ unsigned long _dwFlags;
  /* 0x000c */ long Padding_964;
  /* 0x0010 */ void* _hSuspended;
  /* 0x0018 */ unsigned long _dwDelayMilliseconds;
  /* 0x001c */ long Padding_965;
  /* 0x0020 */ struct _TP_TIMER* _ShutdownDelayTimer;
  /* 0x0028 */ int _bCanceledTimer;
  /* 0x002c */ long Padding_966;
  /* 0x0030 */ class CClassCache::CServiceRefEntry* _pNextServiceRefEntry;
  /* 0x0038 */ class CClassCache::CServiceRefEntry* _pPrevServiceRefEntry;
}; /* size: 0x0040 */

typedef struct _CRYPT_PROVIDER_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_967;
  /* 0x0008 */ struct _WINTRUST_DATA* pWintrustData;
  /* 0x0010 */ int fOpenedFile;
  /* 0x0014 */ long Padding_968;
  /* 0x0018 */ struct HWND__* hWndParent;
  /* 0x0020 */ struct _GUID* pgActionID;
  /* 0x0028 */ unsigned __int64 hProv;
  /* 0x0030 */ unsigned long dwError;
  /* 0x0034 */ unsigned long dwRegSecuritySettings;
  /* 0x0038 */ unsigned long dwRegPolicySettings;
  /* 0x003c */ long Padding_969;
  /* 0x0040 */ struct _CRYPT_PROVIDER_FUNCTIONS* psPfns;
  /* 0x0048 */ unsigned long cdwTrustStepErrors;
  /* 0x004c */ long Padding_970;
  /* 0x0050 */ unsigned long* padwTrustStepErrors;
  /* 0x0058 */ unsigned long chStores;
  /* 0x005c */ long Padding_971;
  /* 0x0060 */ void** pahStores;
  /* 0x0068 */ unsigned long dwEncoding;
  /* 0x006c */ long Padding_972;
  /* 0x0070 */ void* hMsg;
  /* 0x0078 */ unsigned long csSigners;
  /* 0x007c */ long Padding_973;
  /* 0x0080 */ struct _CRYPT_PROVIDER_SGNR* pasSigners;
  /* 0x0088 */ unsigned long csProvPrivData;
  /* 0x008c */ long Padding_974;
  /* 0x0090 */ struct _CRYPT_PROVIDER_PRIVDATA* pasProvPrivData;
  /* 0x0098 */ unsigned long dwSubjectChoice;
  /* 0x009c */ long Padding_975;
  /* 0x00a0 */ struct _PROVDATA_SIP* pPDSip;
  /* 0x00a8 */ char* pszUsageOID;
  /* 0x00b0 */ int fRecallWithState;
  /* 0x00b4 */ struct _FILETIME sftSystemTime;
  /* 0x00bc */ long Padding_976;
  /* 0x00c0 */ char* pszCTLSignerUsageOID;
  /* 0x00c8 */ unsigned long dwProvFlags;
  /* 0x00cc */ unsigned long dwFinalError;
  /* 0x00d0 */ struct _CERT_USAGE_MATCH* pRequestUsage;
  /* 0x00d8 */ unsigned long dwTrustPubSettings;
  /* 0x00dc */ unsigned long dwUIStateFlags;
  /* 0x00e0 */ struct _CRYPT_PROVIDER_SIGSTATE* pSigState;
  /* 0x00e8 */ struct WINTRUST_SIGNATURE_SETTINGS_* pSigSettings;
} CRYPT_PROVIDER_DATA, *PCRYPT_PROVIDER_DATA; /* size: 0x00f0 */

typedef struct _FILE_ATTRIBUTE_TAG_INFO
{
  /* 0x0000 */ unsigned long FileAttributes;
  /* 0x0004 */ unsigned long ReparseTag;
} FILE_ATTRIBUTE_TAG_INFO, *PFILE_ATTRIBUTE_TAG_INFO; /* size: 0x0008 */

typedef struct _RPC_BINDING_HANDLE_TEMPLATE_V1_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ProtocolSequence;
  /* 0x000c */ long Padding_977;
  /* 0x0010 */ unsigned char* NetworkAddress;
  /* 0x0018 */ unsigned char* StringEndpoint;
  union
  {
    /* 0x0020 */ unsigned char* Reserved;
  } /* size: 0x0008 */ u1;
  /* 0x0028 */ struct _GUID ObjectUuid;
} RPC_BINDING_HANDLE_TEMPLATE_V1_A, *PRPC_BINDING_HANDLE_TEMPLATE_V1_A; /* size: 0x0038 */

typedef struct _SHFILEOPSTRUCTA
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int wFunc;
  /* 0x000c */ long Padding_978;
  /* 0x0010 */ const char* pFrom;
  /* 0x0018 */ const char* pTo;
  /* 0x0020 */ unsigned short fFlags;
  /* 0x0022 */ char Padding_979[2];
  /* 0x0024 */ int fAnyOperationsAborted;
  /* 0x0028 */ void* hNameMappings;
  /* 0x0030 */ const char* lpszProgressTitle;
} SHFILEOPSTRUCTA, *PSHFILEOPSTRUCTA; /* size: 0x0038 */

typedef struct _REMSECURITY_ATTRIBUTES
{
  /* 0x0000 */ unsigned long nLength;
  /* 0x0004 */ unsigned long lpSecurityDescriptor;
  /* 0x0008 */ int bInheritHandle;
} REMSECURITY_ATTRIBUTES, *PREMSECURITY_ATTRIBUTES; /* size: 0x000c */

struct IXMLDOMDocumentType
{
}; /* size: 0x0008 */

struct WINTRUST_SIGNATURE_SETTINGS_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwIndex;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cSecondarySigs;
  /* 0x0010 */ unsigned long dwVerifiedSigIndex;
  /* 0x0014 */ long Padding_980;
  /* 0x0018 */ struct _CERT_STRONG_SIGN_PARA* pCryptoPolicy;
}; /* size: 0x0020 */

typedef struct _stat
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_981[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ __int64 st_atime;
  /* 0x0020 */ __int64 st_mtime;
  /* 0x0028 */ __int64 st_ctime;
} stat, *Pstat; /* size: 0x0030 */

typedef struct _PROCESS_MITIGATION_DEP_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long Enable : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long DisableAtlThunkEmulation : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long ReservedFlags : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned char Permanent;
  /* 0x0005 */ char __PADDING__[3];
} PROCESS_MITIGATION_DEP_POLICY, *PPROCESS_MITIGATION_DEP_POLICY; /* size: 0x0008 */

typedef struct _FILE_MOVE_CLUSTER_INFORMATION
{
  /* 0x0000 */ unsigned long ClusterCount;
  /* 0x0004 */ long Padding_982;
  /* 0x0008 */ void* RootDirectory;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_MOVE_CLUSTER_INFORMATION, *PFILE_MOVE_CLUSTER_INFORMATION; /* size: 0x0018 */

class CCOMSurrogate
{
  union
  {
    /* 0x0000 */ struct ISurrogate* _pSurrogate;
    /* 0x0000 */ int _fNewStyleSurrogate;
  }; /* size: 0x0008 */
}; /* size: 0x0001 */

struct IWinRTInprocActivator
{
}; /* size: 0x0008 */

typedef struct _QUERY_SERVICE_CONFIGA
{
  /* 0x0000 */ unsigned long dwServiceType;
  /* 0x0004 */ unsigned long dwStartType;
  /* 0x0008 */ unsigned long dwErrorControl;
  /* 0x000c */ long Padding_983;
  /* 0x0010 */ char* lpBinaryPathName;
  /* 0x0018 */ char* lpLoadOrderGroup;
  /* 0x0020 */ unsigned long dwTagId;
  /* 0x0024 */ long Padding_984;
  /* 0x0028 */ char* lpDependencies;
  /* 0x0030 */ char* lpServiceStartName;
  /* 0x0038 */ char* lpDisplayName;
} QUERY_SERVICE_CONFIGA, *PQUERY_SERVICE_CONFIGA; /* size: 0x0040 */

typedef struct _CONSOLE_CURSOR_INFO
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ int bVisible;
} CONSOLE_CURSOR_INFO, *PCONSOLE_CURSOR_INFO; /* size: 0x0008 */

typedef struct _CERT_OR_CRL_BUNDLE
{
  /* 0x0000 */ unsigned long cItem;
  /* 0x0004 */ long Padding_985;
  /* 0x0008 */ struct _CERT_OR_CRL_BLOB* rgItem;
} CERT_OR_CRL_BUNDLE, *PCERT_OR_CRL_BUNDLE; /* size: 0x0010 */

typedef struct _SUPPORTED_OS_INFO
{
  /* 0x0000 */ unsigned short OsCount;
  /* 0x0002 */ unsigned short MitigationExist;
  /* 0x0004 */ unsigned short OsList[4];
} SUPPORTED_OS_INFO, *PSUPPORTED_OS_INFO; /* size: 0x000c */

struct IEnumSTATSTG
{
}; /* size: 0x0008 */

typedef struct _RTL_BALANCED_NODE
{
  union
  {
    /* 0x0000 */ struct _RTL_BALANCED_NODE* Children[2];
    struct
    {
      /* 0x0000 */ struct _RTL_BALANCED_NODE* Left;
      /* 0x0008 */ struct _RTL_BALANCED_NODE* Right;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  union
  {
    /* 0x0010 */ unsigned char Red : 1; /* bit position: 0 */
    /* 0x0010 */ unsigned char Balance : 2; /* bit position: 0 */
    /* 0x0010 */ unsigned __int64 ParentValue;
  }; /* size: 0x0008 */
} RTL_BALANCED_NODE, *PRTL_BALANCED_NODE; /* size: 0x0018 */

struct tagLAYERPLANEDESCRIPTOR
{
  /* 0x0000 */ unsigned short nSize;
  /* 0x0002 */ unsigned short nVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char iPixelType;
  /* 0x0009 */ unsigned char cColorBits;
  /* 0x000a */ unsigned char cRedBits;
  /* 0x000b */ unsigned char cRedShift;
  /* 0x000c */ unsigned char cGreenBits;
  /* 0x000d */ unsigned char cGreenShift;
  /* 0x000e */ unsigned char cBlueBits;
  /* 0x000f */ unsigned char cBlueShift;
  /* 0x0010 */ unsigned char cAlphaBits;
  /* 0x0011 */ unsigned char cAlphaShift;
  /* 0x0012 */ unsigned char cAccumBits;
  /* 0x0013 */ unsigned char cAccumRedBits;
  /* 0x0014 */ unsigned char cAccumGreenBits;
  /* 0x0015 */ unsigned char cAccumBlueBits;
  /* 0x0016 */ unsigned char cAccumAlphaBits;
  /* 0x0017 */ unsigned char cDepthBits;
  /* 0x0018 */ unsigned char cStencilBits;
  /* 0x0019 */ unsigned char cAuxBuffers;
  /* 0x001a */ unsigned char iLayerPlane;
  /* 0x001b */ unsigned char bReserved;
  /* 0x001c */ unsigned long crTransparent;
}; /* size: 0x0020 */

class BUCL::CConvertToUnsignedType<unsigned char>
{
}; /* size: 0x0001 */

struct tagEMRSETPIXELV
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlPixel;
  /* 0x0010 */ unsigned long crColor;
}; /* size: 0x0014 */

typedef struct _ALPC_MESSAGE_ATTRIBUTES
{
  /* 0x0000 */ unsigned long AllocatedAttributes;
  /* 0x0004 */ unsigned long ValidAttributes;
} ALPC_MESSAGE_ATTRIBUTES, *PALPC_MESSAGE_ATTRIBUTES; /* size: 0x0008 */

struct tagCLIENTCREATESTRUCT
{
  /* 0x0000 */ void* hWindowMenu;
  /* 0x0008 */ unsigned int idFirstChild;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class Windows::Rtl::AutoHandleDefaultTraits<void *>
{
}; /* size: 0x0001 */

typedef struct _RTL_HEAP_PARAMETERS
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_986;
  /* 0x0008 */ unsigned __int64 SegmentReserve;
  /* 0x0010 */ unsigned __int64 SegmentCommit;
  /* 0x0018 */ unsigned __int64 DeCommitFreeBlockThreshold;
  /* 0x0020 */ unsigned __int64 DeCommitTotalFreeThreshold;
  /* 0x0028 */ unsigned __int64 MaximumAllocationSize;
  /* 0x0030 */ unsigned __int64 VirtualMemoryThreshold;
  /* 0x0038 */ unsigned __int64 InitialCommit;
  /* 0x0040 */ unsigned __int64 InitialReserve;
  /* 0x0048 */ void* CommitRoutine /* function */;
  /* 0x0050 */ unsigned __int64 Reserved[2];
} RTL_HEAP_PARAMETERS, *PRTL_HEAP_PARAMETERS; /* size: 0x0060 */

struct IClassClassicInfo3
{
}; /* size: 0x0008 */

struct _RTLP_CURDIR_REF;

typedef struct _CRYPT_HASH_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Hash;
} CRYPT_HASH_INFO, *PCRYPT_HASH_INFO; /* size: 0x0028 */

typedef struct _FP_IEEE_RECORD
{
  /* 0x0000 */ struct _FP_IEEE_VALUE Operand1;
  /* 0x0018 */ struct _FP_IEEE_VALUE Operand2;
  /* 0x0030 */ struct _FP_IEEE_VALUE Result;
} FP_IEEE_RECORD, *PFP_IEEE_RECORD; /* size: 0x0048 */

struct tagEMRPOLYTEXTOUTA
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long iGraphicsMode;
  /* 0x001c */ float exScale;
  /* 0x0020 */ float eyScale;
  /* 0x0024 */ long cStrings;
  /* 0x0028 */ struct tagEMRTEXT aemrtext[1];
}; /* size: 0x0050 */

typedef struct _RegInput
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_987;
  /* 0x0008 */ struct _RegInputEntry rginent[1];
} RegInput, *PRegInput; /* size: 0x0038 */

typedef struct _THREAD_LAST_SYSCALL_INFORMATION
{
  /* 0x0000 */ void* FirstArgument;
  /* 0x0008 */ unsigned short SystemCallNumber;
  /* 0x000a */ char __PADDING__[6];
} THREAD_LAST_SYSCALL_INFORMATION, *PTHREAD_LAST_SYSCALL_INFORMATION; /* size: 0x0010 */

typedef struct _FILE_DISPOSITION_INFO
{
  /* 0x0000 */ unsigned char DeleteFileW;
} FILE_DISPOSITION_INFO, *PFILE_DISPOSITION_INFO; /* size: 0x0001 */

typedef struct _CERT_POLICY95_QUALIFIER1
{
  /* 0x0000 */ wchar_t* pszPracticesReference;
  /* 0x0008 */ char* pszNoticeIdentifier;
  /* 0x0010 */ char* pszNSINoticeIdentifier;
  /* 0x0018 */ unsigned long cCPSURLs;
  /* 0x001c */ long Padding_988;
  /* 0x0020 */ struct _CPS_URLS* rgCPSURLs;
} CERT_POLICY95_QUALIFIER1, *PCERT_POLICY95_QUALIFIER1; /* size: 0x0028 */

struct IDestInfo
{
}; /* size: 0x0008 */

typedef struct _CRYPT_PROVIDER_PRIVDATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gProviderID;
  /* 0x0014 */ unsigned long cbProvData;
  /* 0x0018 */ void* pvProvData;
} CRYPT_PROVIDER_PRIVDATA, *PCRYPT_PROVIDER_PRIVDATA; /* size: 0x0020 */

typedef struct _LINK_TRACKING_INFORMATION
{
  /* 0x0000 */ enum _LINK_TRACKING_INFORMATION_TYPE Type;
  /* 0x0004 */ unsigned char VolumeId[16];
} LINK_TRACKING_INFORMATION, *PLINK_TRACKING_INFORMATION; /* size: 0x0014 */

typedef struct _RTL_HEAP_WALK_ENTRY
{
  /* 0x0000 */ void* DataAddress;
  /* 0x0008 */ unsigned __int64 DataSize;
  /* 0x0010 */ unsigned char OverheadBytes;
  /* 0x0011 */ unsigned char SegmentIndex;
  /* 0x0012 */ unsigned short Flags;
  /* 0x0014 */ long Padding_989;
  union
  {
    struct
    {
      /* 0x0018 */ unsigned __int64 Settable;
      /* 0x0020 */ unsigned short TagIndex;
      /* 0x0022 */ unsigned short AllocatorBackTraceIndex;
      /* 0x0024 */ unsigned long Reserved[2];
      /* 0x002c */ long __PADDING__[1];
    } /* size: 0x0018 */ Block;
    struct
    {
      /* 0x0018 */ unsigned long CommittedSize;
      /* 0x001c */ unsigned long UnCommittedSize;
      /* 0x0020 */ void* FirstEntry;
      /* 0x0028 */ void* LastEntry;
    } /* size: 0x0018 */ Segment;
  }; /* size: 0x0018 */
} RTL_HEAP_WALK_ENTRY, *PRTL_HEAP_WALK_ENTRY; /* size: 0x0030 */

struct tagMCI_BREAK_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ int nVirtKey;
  /* 0x000c */ struct HWND__* hwndBreak;
}; /* size: 0x0014 */

struct tagOBJECTDESCRIPTOR
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long dwDrawAspect;
  /* 0x0018 */ struct tagSIZE sizel;
  /* 0x0020 */ struct _POINTL pointl;
  /* 0x0028 */ unsigned long dwStatus;
  /* 0x002c */ unsigned long dwFullUserTypeName;
  /* 0x0030 */ unsigned long dwSrcOfCopy;
}; /* size: 0x0034 */

class CMonikerFactory
{
}; /* size: 0x0010 */

struct DLL_INSTANTIATION_PROPERTIES
{
  /* 0x0000 */ wchar_t _pzDllPath[261];
  /* 0x020a */ char Padding_990[2];
  /* 0x020c */ unsigned long _dwThreadingModel;
  /* 0x0210 */ unsigned long _dwFlags;
  /* 0x0214 */ unsigned long _dwHash;
  /* 0x0218 */ unsigned long _dwContext;
  /* 0x021c */ long Padding_991;
  /* 0x0220 */ struct
  {
  } /* size: 0x0001 */* _dllClass;
}; /* size: 0x0228 */

struct tagEMRCREATECOLORSPACE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihCS;
  /* 0x000c */ struct tagLOGCOLORSPACEA lcs;
}; /* size: 0x0154 */

class Windows::Rtl::AutoString<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >
{
}; /* size: 0x0010 */

struct IOleCacheControl
{
}; /* size: 0x0008 */

typedef struct _JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_ACCOUNTING_INFORMATION BasicInfo;
  /* 0x0030 */ struct _IO_COUNTERS IoInfo;
  /* 0x0060 */ struct _PROCESS_DISK_COUNTERS DiskIoInfo;
  /* 0x0088 */ unsigned __int64 ContextSwitches;
  /* 0x0090 */ union _LARGE_INTEGER TotalCycleTime;
} JOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION, *PJOBOBJECT_EXTENDED_ACCOUNTING_INFORMATION; /* size: 0x0098 */

typedef struct _ACTION_HEADER
{
  /* 0x0000 */ unsigned long transport_id;
  /* 0x0004 */ unsigned short action_code;
  /* 0x0006 */ unsigned short reserved;
} ACTION_HEADER, *PACTION_HEADER; /* size: 0x0008 */

struct CRWLock::LockState
{
  struct /* bitfield */
  {
    /* 0x0000 */ volatile unsigned __int64 _numReaders : 20; /* bit position: 0 */
    /* 0x0000 */ volatile unsigned __int64 _writerPresent : 1; /* bit position: 20 */
    /* 0x0000 */ volatile unsigned __int64 _writerSignaled : 1; /* bit position: 21 */
    /* 0x0000 */ volatile unsigned __int64 _readerSignaled : 1; /* bit position: 22 */
    /* 0x0000 */ volatile unsigned __int64 _resetInProgress : 1; /* bit position: 23 */
    /* 0x0000 */ volatile unsigned __int64 _waitingReaders : 20; /* bit position: 24 */
    /* 0x0000 */ volatile unsigned __int64 _waitingWriters : 20; /* bit position: 44 */
  }; /* bitfield */
}; /* size: 0x0008 */

struct CRWLock::EventState
{
  struct /* bitfield */
  {
    /* 0x0000 */ volatile unsigned long _entryIsEventMask : 1; /* bit position: 0 */
    /* 0x0000 */ volatile unsigned long _entryIsMarkedForPooling : 1; /* bit position: 1 */
    /* 0x0000 */ volatile unsigned long _entryIsBeingPooled : 1; /* bit position: 2 */
    /* 0x0000 */ volatile unsigned long _readerEventBeingSignaled : 1; /* bit position: 3 */
    /* 0x0000 */ volatile unsigned long _readerEventBeingReset : 1; /* bit position: 4 */
    /* 0x0000 */ volatile unsigned long _readerCountIsSignalCount : 1; /* bit position: 5 */
    /* 0x0000 */ volatile unsigned long _readerCount : 25; /* bit position: 6 */
    /* 0x0000 */ volatile unsigned long _writerEventSignaled : 1; /* bit position: 31 */
  }; /* bitfield */
}; /* size: 0x0004 */

class CRWLock
{
  union
  {
    /* 0x0000 */ struct CRWLock::LockState _lockState;
    struct
    {
      /* 0x0000 */ volatile unsigned __int64 _ulLockState;
      /* 0x0008 */ volatile unsigned long _dwWriterSeqNum;
      /* 0x000c */ volatile unsigned long _dwWriterID;
      /* 0x0010 */ unsigned short _wFlags;
      /* 0x0012 */ unsigned short _wWriterLevel;
      /* 0x0014 */ long Padding_992;
      union
      {
        /* 0x0018 */ struct CRWLock::EventState _eventState;
        struct
        {
          /* 0x0018 */ volatile unsigned long _dwEventState;
          /* 0x001c */ volatile unsigned long _dwHighPart;
        }; /* size: 0x0008 */
        /* 0x0018 */ class EventPoolEntry* volatile _pPoolEntry;
      }; /* size: 0x0008 */
    }; /* size: 0x001c */
    /* 0x0000 */ unsigned long s_dwDefaultTimeout;
    /* 0x0000 */ unsigned long s_dwDefaultSpinCount;
    /* 0x0000 */ unsigned long s_dwNumberOfProcessors;
  }; /* size: 0x001c */
}; /* size: 0x0020 */

typedef struct _PROV_ENUMALGS_EX
{
  /* 0x0000 */ unsigned int aiAlgid;
  /* 0x0004 */ unsigned long dwDefaultLen;
  /* 0x0008 */ unsigned long dwMinLen;
  /* 0x000c */ unsigned long dwMaxLen;
  /* 0x0010 */ unsigned long dwProtocols;
  /* 0x0014 */ unsigned long dwNameLen;
  /* 0x0018 */ char szName[20];
  /* 0x002c */ unsigned long dwLongNameLen;
  /* 0x0030 */ char szLongName[40];
} PROV_ENUMALGS_EX, *PPROV_ENUMALGS_EX; /* size: 0x0058 */

typedef struct _JOURNAL_ABSOLUTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartTimeStamp;
  /* 0x0008 */ union _LARGE_INTEGER EndTimeStamp;
  /* 0x0010 */ unsigned __int64 NumberOfRecords;
  /* 0x0018 */ unsigned long FillLevel;
  /* 0x001c */ long __PADDING__[1];
} JOURNAL_ABSOLUTE_INFORMATION, *PJOURNAL_ABSOLUTE_INFORMATION; /* size: 0x0020 */

class BUCL::CIsSignedType<int>
{
}; /* size: 0x0001 */

typedef struct _PLUGPLAY_CONTROL_TARGET_RELATION_DATA
{
  /* 0x0000 */ void* UserFileHandle;
  /* 0x0008 */ long Status;
  /* 0x000c */ unsigned long DeviceInstanceLen;
  /* 0x0010 */ wchar_t* DeviceInstance;
} PLUGPLAY_CONTROL_TARGET_RELATION_DATA, *PPLUGPLAY_CONTROL_TARGET_RELATION_DATA; /* size: 0x0018 */

typedef struct _SYSTEM_INTERRUPT_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long DpcCount;
  /* 0x0008 */ unsigned long DpcRate;
  /* 0x000c */ unsigned long TimeIncrement;
  /* 0x0010 */ unsigned long DpcBypassCount;
  /* 0x0014 */ unsigned long ApcBypassCount;
} SYSTEM_INTERRUPT_INFORMATION, *PSYSTEM_INTERRUPT_INFORMATION; /* size: 0x0018 */

class BUCL::CIsSignedType<unsigned short>
{
}; /* size: 0x0001 */

typedef struct _INVERTED_FUNCTION_TABLE
{
  /* 0x0000 */ unsigned long CurrentSize;
  /* 0x0004 */ unsigned long MaximumSize;
  /* 0x0008 */ volatile unsigned long Epoch;
  /* 0x000c */ unsigned char Overflow;
  /* 0x000d */ char Padding_993[3];
  /* 0x0010 */ struct _INVERTED_FUNCTION_TABLE_ENTRY TableEntry[512];
} INVERTED_FUNCTION_TABLE, *PINVERTED_FUNCTION_TABLE; /* size: 0x3010 */

class CCliModalLoop
{
  /* 0x0000 */ long Padding_994[12];
  /* 0x0030 */ class CCliModalLoop* _pPrev;
  /* 0x0038 */ unsigned long _dwTIDCallee;
  /* 0x003c */ unsigned long _dwMsgQInputFlag;
  /* 0x0040 */ struct _GUID _lid;
  /* 0x0050 */ unsigned long _dwFlags;
  /* 0x0054 */ unsigned long _dwWaitFlags;
  /* 0x0058 */ unsigned int _wQuitCode;
  /* 0x005c */ unsigned long _dwTimeOfCall;
  /* 0x0060 */ unsigned long _dwBlockTime;
  /* 0x0064 */ unsigned long _dwCancelTimeout;
  /* 0x0068 */ int _fUseOldModalLoop;
  /* 0x006c */ int _fAttachedQueueInputMessageRemovalAllowed;
  /* 0x0070 */ class CAptCallCtrl* _pACC;
  /* 0x0078 */ void* _hToken;
  /* 0x0080 */ int _fCoWaitCalled;
}; /* size: 0x0088 */

struct _TP_TIMER;

typedef struct _IMAGE_SEPARATE_DEBUG_HEADER
{
  /* 0x0000 */ unsigned short Signature;
  /* 0x0002 */ unsigned short Flags;
  /* 0x0004 */ unsigned short Machine;
  /* 0x0006 */ unsigned short Characteristics;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ unsigned long CheckSum;
  /* 0x0010 */ unsigned long ImageBase;
  /* 0x0014 */ unsigned long SizeOfImage;
  /* 0x0018 */ unsigned long NumberOfSections;
  /* 0x001c */ unsigned long ExportedNamesSize;
  /* 0x0020 */ unsigned long DebugDirectorySize;
  /* 0x0024 */ unsigned long SectionAlignment;
  /* 0x0028 */ unsigned long Reserved[2];
} IMAGE_SEPARATE_DEBUG_HEADER, *PIMAGE_SEPARATE_DEBUG_HEADER; /* size: 0x0030 */

typedef struct _CHANGER_MOVE_MEDIUM
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Transport;
  /* 0x0008 */ struct _CHANGER_ELEMENT Source;
  /* 0x0010 */ struct _CHANGER_ELEMENT Destination;
  /* 0x0018 */ unsigned char Flip;
  /* 0x0019 */ char __PADDING__[3];
} CHANGER_MOVE_MEDIUM, *PCHANGER_MOVE_MEDIUM; /* size: 0x001c */

typedef struct _CRYPT_PROVIDER_REFS
{
  /* 0x0000 */ unsigned long cProviders;
  /* 0x0004 */ long Padding_995;
  /* 0x0008 */ struct _CRYPT_PROVIDER_REF** rgpProviders;
} CRYPT_PROVIDER_REFS, *PCRYPT_PROVIDER_REFS; /* size: 0x0010 */

typedef struct _RTL_HANDLE_TABLE_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    /* 0x0000 */ struct _RTL_HANDLE_TABLE_ENTRY* NextFree;
  }; /* size: 0x0008 */
} RTL_HANDLE_TABLE_ENTRY, *PRTL_HANDLE_TABLE_ENTRY; /* size: 0x0008 */

struct IInspectable
{
}; /* size: 0x0008 */

struct BITMAPV4HEADER
{
  /* 0x0000 */ unsigned long bV4Size;
  /* 0x0004 */ long bV4Width;
  /* 0x0008 */ long bV4Height;
  /* 0x000c */ unsigned short bV4Planes;
  /* 0x000e */ unsigned short bV4BitCount;
  /* 0x0010 */ unsigned long bV4V4Compression;
  /* 0x0014 */ unsigned long bV4SizeImage;
  /* 0x0018 */ long bV4XPelsPerMeter;
  /* 0x001c */ long bV4YPelsPerMeter;
  /* 0x0020 */ unsigned long bV4ClrUsed;
  /* 0x0024 */ unsigned long bV4ClrImportant;
  /* 0x0028 */ unsigned long bV4RedMask;
  /* 0x002c */ unsigned long bV4GreenMask;
  /* 0x0030 */ unsigned long bV4BlueMask;
  /* 0x0034 */ unsigned long bV4AlphaMask;
  /* 0x0038 */ unsigned long bV4CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV4Endpoints;
  /* 0x0060 */ unsigned long bV4GammaRed;
  /* 0x0064 */ unsigned long bV4GammaGreen;
  /* 0x0068 */ unsigned long bV4GammaBlue;
}; /* size: 0x006c */

struct tagCustomOpaqueData
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long dataLength;
  /* 0x0014 */ unsigned long reserved1;
  /* 0x0018 */ unsigned long reserved2;
  /* 0x001c */ long Padding_996;
  /* 0x0020 */ unsigned char* data;
}; /* size: 0x0028 */

struct HPALETTE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _LAST_EXCEPTION_LOG
{
  /* 0x0000 */ struct _EXCEPTION_RECORD ExceptionRecord;
  /* 0x0098 */ long Padding_997[2];
  /* 0x00a0 */ struct _CONTEXT ContextRecord;
  /* 0x0570 */ unsigned long ControlPc;
  /* 0x0574 */ enum _EXCEPTION_DISPOSITION Disposition;
  /* 0x0578 */ unsigned long HandlerData[5];
  /* 0x058c */ long __PADDING__[1];
} LAST_EXCEPTION_LOG, *PLAST_EXCEPTION_LOG; /* size: 0x0590 */

typedef struct _PARSE_MESSAGE_CONTEXT
{
  /* 0x0000 */ unsigned long fFlags;
  /* 0x0004 */ unsigned long cwSavColumn;
  /* 0x0008 */ unsigned __int64 iwSrc;
  /* 0x0010 */ unsigned __int64 iwDst;
  /* 0x0018 */ unsigned __int64 iwDstSpace;
  /* 0x0020 */ char* lpvArgStart;
} PARSE_MESSAGE_CONTEXT, *PPARSE_MESSAGE_CONTEXT; /* size: 0x0028 */

class CLUAMoniker
{
  /* 0x0000 */ long Padding_998[14];
  /* 0x0038 */ unsigned long m_runLevel;
  /* 0x003c */ int m_bHaveBindOpts;
  /* 0x0040 */ struct tagBIND_OPTS3 m_bindopts3;
}; /* size: 0x0070 */

typedef struct _THREAD_PROFILING_INFORMATION
{
  /* 0x0000 */ unsigned __int64 HardwareCounters;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Enable;
  /* 0x0010 */ struct _THREAD_PERFORMANCE_DATA* PerformanceData;
} THREAD_PROFILING_INFORMATION, *PTHREAD_PROFILING_INFORMATION; /* size: 0x0018 */

typedef struct _SERVICE_NOTIFY_1
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_999;
  /* 0x0008 */ void* pfnNotifyCallback /* function */;
  /* 0x0010 */ void* pContext;
  /* 0x0018 */ unsigned long dwNotificationStatus;
  /* 0x001c */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
} SERVICE_NOTIFY_1, *PSERVICE_NOTIFY_1; /* size: 0x0040 */

typedef struct _SSerializationHeader
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ long Padding_1000;
  /* 0x0008 */ void* pvMarshalPtr;
} SSerializationHeader, *PSSerializationHeader; /* size: 0x0010 */

struct Windows::DisableAuto
{
}; /* size: 0x0008 */

class CRpcChannelBuffer::CServerCallMgr
{
  /* 0x0000 */ long Padding_1001[8];
  /* 0x0020 */ unsigned long _cRefs;
  /* 0x0024 */ unsigned long _dwState;
  /* 0x0028 */ struct _GUID _iid;
  /* 0x0038 */ struct _GUID _iidAsync;
  /* 0x0048 */ struct IUnknown* _pUnkStubCallMgr;
  /* 0x0050 */ struct IUnknown* _pUnkServerCallMgr;
  /* 0x0058 */ struct ISynchronize* _pSync;
  /* 0x0060 */ struct IRpcStubBuffer* _pSB;
  /* 0x0068 */ class CMessageCall* _pCall;
  /* 0x0070 */ class CStdIdentity* _pStdID;
}; /* size: 0x0078 */

typedef struct _JOBOBJECT_EXTENDED_LIMIT_INFORMATION
{
  /* 0x0000 */ struct _JOBOBJECT_BASIC_LIMIT_INFORMATION BasicLimitInformation;
  /* 0x0040 */ struct _IO_COUNTERS IoInfo;
  /* 0x0070 */ unsigned __int64 ProcessMemoryLimit;
  /* 0x0078 */ unsigned __int64 JobMemoryLimit;
  /* 0x0080 */ unsigned __int64 PeakProcessMemoryUsed;
  /* 0x0088 */ unsigned __int64 PeakJobMemoryUsed;
} JOBOBJECT_EXTENDED_LIMIT_INFORMATION, *PJOBOBJECT_EXTENDED_LIMIT_INFORMATION; /* size: 0x0090 */

typedef struct _CERT_NAME_INFO
{
  /* 0x0000 */ unsigned long cRDN;
  /* 0x0004 */ long Padding_1002;
  /* 0x0008 */ struct _CERT_RDN* rgRDN;
} CERT_NAME_INFO, *PCERT_NAME_INFO; /* size: 0x0010 */

struct tagEMRSELECTCLIPPATH
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iMode;
}; /* size: 0x000c */

typedef struct _RTL_VERIFIER_PROVIDER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1003;
  /* 0x0008 */ struct _RTL_VERIFIER_DLL_DESCRIPTOR* ProviderDlls;
  /* 0x0010 */ void* ProviderDllLoadCallback /* function */;
  /* 0x0018 */ void* ProviderDllUnloadCallback /* function */;
  /* 0x0020 */ wchar_t* VerifierImage;
  /* 0x0028 */ unsigned long VerifierFlags;
  /* 0x002c */ unsigned long VerifierDebug;
  /* 0x0030 */ void* RtlpGetStackTraceAddress;
  /* 0x0038 */ void* RtlpDebugPageHeapCreate;
  /* 0x0040 */ void* RtlpDebugPageHeapDestroy;
  /* 0x0048 */ void* ProviderNtdllHeapFreeCallback /* function */;
} RTL_VERIFIER_PROVIDER_DESCRIPTOR, *PRTL_VERIFIER_PROVIDER_DESCRIPTOR; /* size: 0x0050 */

struct tagUPDATELAYEREDWINDOWINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1004;
  /* 0x0008 */ struct HDC__* hdcDst;
  /* 0x0010 */ const struct tagPOINT* pptDst;
  /* 0x0018 */ const struct tagSIZE* psize;
  /* 0x0020 */ struct HDC__* hdcSrc;
  /* 0x0028 */ const struct tagPOINT* pptSrc;
  /* 0x0030 */ unsigned long crKey;
  /* 0x0034 */ long Padding_1005;
  /* 0x0038 */ const struct _BLENDFUNCTION* pblend;
  /* 0x0040 */ unsigned long dwFlags;
  /* 0x0044 */ long Padding_1006;
  /* 0x0048 */ const struct tagRECT* prcDirty;
}; /* size: 0x0050 */

struct DVTDINFO
{
  /* 0x0000 */ unsigned int cbConvertSize;
  /* 0x0004 */ unsigned int cchDrvName;
  /* 0x0008 */ unsigned int cchDevName;
  /* 0x000c */ unsigned int cchPortName;
}; /* size: 0x0010 */

struct tagEMRSETCOLORADJUSTMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagCOLORADJUSTMENT ColorAdjustment;
}; /* size: 0x0020 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >::is_pointer<Windows::Rtl::IRtlUtf16LEStringBuilder *>
{
}; /* size: 0x0001 */

typedef struct _RTL_VERIFIER_THUNK_DESCRIPTOR
{
  /* 0x0000 */ char* ThunkName;
  /* 0x0008 */ void* ThunkOldAddress;
  /* 0x0010 */ void* ThunkNewAddress;
} RTL_VERIFIER_THUNK_DESCRIPTOR, *PRTL_VERIFIER_THUNK_DESCRIPTOR; /* size: 0x0018 */

typedef struct _RGNDATAHEADER
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long iType;
  /* 0x0008 */ unsigned long nCount;
  /* 0x000c */ unsigned long nRgnSize;
  /* 0x0010 */ struct tagRECT rcBound;
} RGNDATAHEADER, *PRGNDATAHEADER; /* size: 0x0020 */

typedef struct _devicemodeW
{
  /* 0x0000 */ wchar_t dmDeviceName[32];
  /* 0x0040 */ unsigned short dmSpecVersion;
  /* 0x0042 */ unsigned short dmDriverVersion;
  /* 0x0044 */ unsigned short dmSize;
  /* 0x0046 */ unsigned short dmDriverExtra;
  /* 0x0048 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x004c */ short dmOrientation;
      /* 0x004e */ short dmPaperSize;
      /* 0x0050 */ short dmPaperLength;
      /* 0x0052 */ short dmPaperWidth;
      /* 0x0054 */ short dmScale;
      /* 0x0056 */ short dmCopies;
      /* 0x0058 */ short dmDefaultSource;
      /* 0x005a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x004c */ struct _POINTL dmPosition;
      /* 0x0054 */ unsigned long dmDisplayOrientation;
      /* 0x0058 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x005c */ short dmColor;
  /* 0x005e */ short dmDuplex;
  /* 0x0060 */ short dmYResolution;
  /* 0x0062 */ short dmTTOption;
  /* 0x0064 */ short dmCollate;
  /* 0x0066 */ wchar_t dmFormName[32];
  /* 0x00a6 */ unsigned short dmLogPixels;
  /* 0x00a8 */ unsigned long dmBitsPerPel;
  /* 0x00ac */ unsigned long dmPelsWidth;
  /* 0x00b0 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x00b4 */ unsigned long dmDisplayFlags;
    /* 0x00b4 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x00b8 */ unsigned long dmDisplayFrequency;
  /* 0x00bc */ unsigned long dmICMMethod;
  /* 0x00c0 */ unsigned long dmICMIntent;
  /* 0x00c4 */ unsigned long dmMediaType;
  /* 0x00c8 */ unsigned long dmDitherType;
  /* 0x00cc */ unsigned long dmReserved1;
  /* 0x00d0 */ unsigned long dmReserved2;
  /* 0x00d4 */ unsigned long dmPanningWidth;
  /* 0x00d8 */ unsigned long dmPanningHeight;
} devicemodeW, *PdevicemodeW; /* size: 0x00dc */

struct SystemPageEntry
{
  /* 0x0000 */ long Padding_1007[4];
  /* 0x0010 */ struct SystemBlockHeader* pHeapBlock;
}; /* size: 0x0018 */

typedef struct _POWER_SESSION_TIMEOUTS
{
  /* 0x0000 */ unsigned long InputTimeout;
  /* 0x0004 */ unsigned long DisplayTimeout;
} POWER_SESSION_TIMEOUTS, *PPOWER_SESSION_TIMEOUTS; /* size: 0x0008 */

typedef struct _RGNDATA
{
  /* 0x0000 */ struct _RGNDATAHEADER rdh;
  /* 0x0020 */ char Buffer[1];
  /* 0x0021 */ char __PADDING__[3];
} RGNDATA, *PRGNDATA; /* size: 0x0024 */

struct IApartmentShutdown
{
}; /* size: 0x0008 */

struct tagEMRPOLYDRAW16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
  /* 0x0020 */ unsigned char abTypes[1];
  /* 0x0021 */ char __PADDING__[3];
}; /* size: 0x0024 */

typedef struct _SCHANNEL_CRED
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long cCreds;
  /* 0x0008 */ const struct _CERT_CONTEXT** paCred;
  /* 0x0010 */ void* hRootStore;
  /* 0x0018 */ unsigned long cMappers;
  /* 0x001c */ long Padding_1008;
  /* 0x0020 */ struct _HMAPPER** aphMappers;
  /* 0x0028 */ unsigned long cSupportedAlgs;
  /* 0x002c */ long Padding_1009;
  /* 0x0030 */ unsigned int* palgSupportedAlgs;
  /* 0x0038 */ unsigned long grbitEnabledProtocols;
  /* 0x003c */ unsigned long dwMinimumCipherStrength;
  /* 0x0040 */ unsigned long dwMaximumCipherStrength;
  /* 0x0044 */ unsigned long dwSessionLifespan;
  /* 0x0048 */ unsigned long dwFlags;
  /* 0x004c */ unsigned long dwCredFormat;
} SCHANNEL_CRED, *PSCHANNEL_CRED; /* size: 0x0050 */

class CDfMutex
{
  /* 0x0000 */ struct _GLOBAL_SHARED_CRITICAL_SECTION* _pGlobalPortion;
  /* 0x0008 */ void* _hLockEvent;
}; /* size: 0x0010 */

typedef struct _MEMORY_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long MemoryPriority;
} MEMORY_PRIORITY_INFORMATION, *PMEMORY_PRIORITY_INFORMATION; /* size: 0x0004 */

typedef struct _FPO_DATA
{
  /* 0x0000 */ unsigned long ulOffStart;
  /* 0x0004 */ unsigned long cbProcSize;
  /* 0x0008 */ unsigned long cdwLocals;
  /* 0x000c */ unsigned short cdwParams;
  struct /* bitfield */
  {
    /* 0x000e */ unsigned short cbProlog : 8; /* bit position: 0 */
    /* 0x000e */ unsigned short cbRegs : 3; /* bit position: 8 */
    /* 0x000e */ unsigned short fHasSEH : 1; /* bit position: 11 */
    /* 0x000e */ unsigned short fUseBP : 1; /* bit position: 12 */
    /* 0x000e */ unsigned short reserved : 1; /* bit position: 13 */
    /* 0x000e */ unsigned short cbFrame : 2; /* bit position: 14 */
  }; /* bitfield */
} FPO_DATA, *PFPO_DATA; /* size: 0x0010 */

class CStmBufWrite
{
}; /* size: 0x0118 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::WeakRef>
{
}; /* size: 0x0008 */

struct IPolicyAsync
{
}; /* size: 0x0008 */

struct tagTOUCHINPUT
{
  /* 0x0000 */ long x;
  /* 0x0004 */ long y;
  /* 0x0008 */ void* hSource;
  /* 0x0010 */ unsigned long dwID;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ unsigned long dwMask;
  /* 0x001c */ unsigned long dwTime;
  /* 0x0020 */ unsigned __int64 dwExtraInfo;
  /* 0x0028 */ unsigned long cxContact;
  /* 0x002c */ unsigned long cyContact;
}; /* size: 0x0030 */

struct IOpaqueDataInfo
{
}; /* size: 0x0008 */

class Windows::ErrorHandling::Rtl::CBoolFrame
{
}; /* size: 0x0008 */

typedef struct _SCONTEXT_QUEUE
{
  /* 0x0000 */ unsigned long NumberOfObjects;
  /* 0x0004 */ long Padding_1010;
  /* 0x0008 */ struct
  {
    /* 0x0008 */ void* pad[2];
    /* 0x0018 */ void* userContext;
  } /* size: 0x0018 */** ArrayOfObjects;
} SCONTEXT_QUEUE, *PSCONTEXT_QUEUE; /* size: 0x0010 */

typedef struct _ALPC_PORT_ASSOCIATE_COMPLETION_PORT
{
  /* 0x0000 */ void* CompletionKey;
  /* 0x0008 */ void* CompletionPort;
} ALPC_PORT_ASSOCIATE_COMPLETION_PORT, *PALPC_PORT_ASSOCIATE_COMPLETION_PORT; /* size: 0x0010 */

typedef struct _MINIDUMP_STRING
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ wchar_t* Buffer /* zero-length array */;
} MINIDUMP_STRING, *PMINIDUMP_STRING; /* size: 0x0004 */

typedef struct _CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT
{
  /* 0x0000 */ unsigned __int64 VetoedFromAltitudeIntegral;
  /* 0x0008 */ unsigned __int64 VetoedFromAltitudeDecimal;
  /* 0x0010 */ wchar_t Reason[256];
} CSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT, *PCSV_QUERY_VETO_FILE_DIRECT_IO_OUTPUT; /* size: 0x0210 */

typedef struct _LDR_DATA_TABLE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY InLoadOrderLinks;
  /* 0x0010 */ struct _LIST_ENTRY InMemoryOrderLinks;
  union
  {
    /* 0x0020 */ struct _LIST_ENTRY InInitializationOrderLinks;
    /* 0x0020 */ struct _LIST_ENTRY InProgressLinks;
  }; /* size: 0x0010 */
  /* 0x0030 */ void* DllBase;
  /* 0x0038 */ void* EntryPoint;
  /* 0x0040 */ unsigned long SizeOfImage;
  /* 0x0044 */ long Padding_1011;
  /* 0x0048 */ struct _UNICODE_STRING FullDllName;
  /* 0x0058 */ struct _UNICODE_STRING BaseDllName;
  union
  {
    /* 0x0068 */ unsigned char FlagGroup[4];
    /* 0x0068 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0068 */ unsigned long PackagedBinary : 1; /* bit position: 0 */
      /* 0x0068 */ unsigned long MarkedForRemoval : 1; /* bit position: 1 */
      /* 0x0068 */ unsigned long ImageDll : 1; /* bit position: 2 */
      /* 0x0068 */ unsigned long LoadNotificationsSent : 1; /* bit position: 3 */
      /* 0x0068 */ unsigned long TelemetryEntryProcessed : 1; /* bit position: 4 */
      /* 0x0068 */ unsigned long ProcessStaticImport : 1; /* bit position: 5 */
      /* 0x0068 */ unsigned long InLegacyLists : 1; /* bit position: 6 */
      /* 0x0068 */ unsigned long InIndexes : 1; /* bit position: 7 */
      /* 0x0068 */ unsigned long ShimDll : 1; /* bit position: 8 */
      /* 0x0068 */ unsigned long InExceptionTable : 1; /* bit position: 9 */
      /* 0x0068 */ unsigned long ReservedFlags1 : 2; /* bit position: 10 */
      /* 0x0068 */ unsigned long LoadInProgress : 1; /* bit position: 12 */
      /* 0x0068 */ unsigned long ReservedFlags2 : 1; /* bit position: 13 */
      /* 0x0068 */ unsigned long EntryProcessed : 1; /* bit position: 14 */
      /* 0x0068 */ unsigned long ReservedFlags3 : 3; /* bit position: 15 */
      /* 0x0068 */ unsigned long DontCallForThreads : 1; /* bit position: 18 */
      /* 0x0068 */ unsigned long ProcessAttachCalled : 1; /* bit position: 19 */
      /* 0x0068 */ unsigned long ProcessAttachFailed : 1; /* bit position: 20 */
      /* 0x0068 */ unsigned long CorDeferredValidate : 1; /* bit position: 21 */
      /* 0x0068 */ unsigned long CorImage : 1; /* bit position: 22 */
      /* 0x0068 */ unsigned long DontRelocate : 1; /* bit position: 23 */
      /* 0x0068 */ unsigned long CorILOnly : 1; /* bit position: 24 */
      /* 0x0068 */ unsigned long ReservedFlags5 : 3; /* bit position: 25 */
      /* 0x0068 */ unsigned long Redirected : 1; /* bit position: 28 */
      /* 0x0068 */ unsigned long ReservedFlags6 : 2; /* bit position: 29 */
      /* 0x0068 */ unsigned long CompatDatabaseProcessed : 1; /* bit position: 31 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x006c */ unsigned short ObsoleteLoadCount;
  /* 0x006e */ unsigned short TlsIndex;
  /* 0x0070 */ struct _LIST_ENTRY HashLinks;
  /* 0x0080 */ unsigned long TimeDateStamp;
  /* 0x0084 */ long Padding_1012;
  /* 0x0088 */ struct _ACTIVATION_CONTEXT* EntryPointActivationContext;
  /* 0x0090 */ void* PatchInformation;
  /* 0x0098 */ struct _LDR_DDAG_NODE* DdagNode;
  /* 0x00a0 */ struct _LIST_ENTRY NodeModuleLink;
  /* 0x00b0 */ struct _LDRP_DLL_SNAP_CONTEXT* SnapContext;
  /* 0x00b8 */ void* ParentDllBase;
  /* 0x00c0 */ void* SwitchBackContext;
  /* 0x00c8 */ struct _RTL_BALANCED_NODE BaseAddressIndexNode;
  /* 0x00e0 */ struct _RTL_BALANCED_NODE MappingInfoIndexNode;
  /* 0x00f8 */ unsigned __int64 OriginalBase;
  /* 0x0100 */ union _LARGE_INTEGER LoadTime;
  /* 0x0108 */ unsigned long BaseNameHashValue;
  /* 0x010c */ enum _LDR_DLL_LOAD_REASON LoadReason;
} LDR_DATA_TABLE_ENTRY, *PLDR_DATA_TABLE_ENTRY; /* size: 0x0110 */

typedef struct _LDR_ENUM_RESOURCE_ENTRY
{
  /* 0x0000 */ union
  {
    union
    {
      /* 0x0000 */ unsigned __int64 NameOrId;
      /* 0x0000 */ struct _IMAGE_RESOURCE_DIRECTORY_STRING* Name;
      struct
      {
        /* 0x0000 */ unsigned short Id;
        /* 0x0002 */ unsigned short NameIsPresent;
      }; /* size: 0x0004 */
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Path[3];
  /* 0x0018 */ void* Data;
  /* 0x0020 */ unsigned long Size;
  /* 0x0024 */ unsigned long Reserved;
} LDR_ENUM_RESOURCE_ENTRY, *PLDR_ENUM_RESOURCE_ENTRY; /* size: 0x0028 */

typedef struct _RESOLVED_USERNAME_INFO
{
  /* 0x0000 */ int bResolved;
  /* 0x0004 */ long Padding_1013;
  /* 0x0008 */ wchar_t* pszResolvedName;
} RESOLVED_USERNAME_INFO, *PRESOLVED_USERNAME_INFO; /* size: 0x0010 */

typedef struct _RESOLVED_USERNAME_LIST
{
  /* 0x0000 */ unsigned long cItems;
  /* 0x0004 */ long Padding_1014;
  /* 0x0008 */ struct _RESOLVED_USERNAME_INFO rgUserNameInfo[1];
} RESOLVED_USERNAME_LIST, *PRESOLVED_USERNAME_LIST; /* size: 0x0018 */

struct tagRAWINPUTDEVICELIST
{
  /* 0x0000 */ void* hDevice;
  /* 0x0008 */ unsigned long dwType;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

typedef struct _CPS_URLS
{
  /* 0x0000 */ wchar_t* pszURL;
  /* 0x0008 */ struct _CRYPT_ALGORITHM_IDENTIFIER* pAlgorithm;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* pDigest;
} CPS_URLS, *PCPS_URLS; /* size: 0x0018 */

typedef struct _SERVICE_TABLE_ENTRYA
{
  /* 0x0000 */ char* lpServiceName;
  /* 0x0008 */ void* lpServiceProc /* function */;
} SERVICE_TABLE_ENTRYA, *PSERVICE_TABLE_ENTRYA; /* size: 0x0010 */

typedef struct _CMSG_RC2_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwBitLen;
} CMSG_RC2_AUX_INFO, *PCMSG_RC2_AUX_INFO; /* size: 0x0008 */

typedef struct _PSHNOTIFY
{
  /* 0x0000 */ struct tagNMHDR hdr;
  /* 0x0018 */ __int64 lParam;
} PSHNOTIFY, *PPSHNOTIFY; /* size: 0x0020 */

typedef struct _MnkEqBuf
{
  /* 0x0000 */ unsigned long cdwSize;
  /* 0x0004 */ unsigned char abEqData[1];
  /* 0x0005 */ char __PADDING__[3];
} MnkEqBuf, *PMnkEqBuf; /* size: 0x0008 */

typedef struct _MIDL_STUB_MESSAGE
{
  /* 0x0000 */ struct _RPC_MESSAGE* RpcMsg;
  /* 0x0008 */ unsigned char* Buffer;
  /* 0x0010 */ unsigned char* BufferStart;
  /* 0x0018 */ unsigned char* BufferEnd;
  /* 0x0020 */ unsigned char* BufferMark;
  /* 0x0028 */ unsigned long BufferLength;
  /* 0x002c */ unsigned long MemorySize;
  /* 0x0030 */ unsigned char* Memory;
  /* 0x0038 */ unsigned char IsClient;
  /* 0x0039 */ unsigned char Pad;
  /* 0x003a */ unsigned short uFlags2;
  /* 0x003c */ int ReuseBuffer;
  /* 0x0040 */ struct NDR_ALLOC_ALL_NODES_CONTEXT* pAllocAllNodesContext;
  /* 0x0048 */ struct NDR_POINTER_QUEUE_STATE* pPointerQueueState;
  /* 0x0050 */ int IgnoreEmbeddedPointers;
  /* 0x0054 */ long Padding_1015;
  /* 0x0058 */ unsigned char* PointerBufferMark;
  /* 0x0060 */ unsigned char CorrDespIncrement;
  /* 0x0061 */ unsigned char uFlags;
  /* 0x0062 */ unsigned short UniquePtrCount;
  /* 0x0064 */ long Padding_1016;
  /* 0x0068 */ unsigned __int64 MaxCount;
  /* 0x0070 */ unsigned long Offset;
  /* 0x0074 */ unsigned long ActualCount;
  /* 0x0078 */ void* pfnAllocate /* function */;
  /* 0x0080 */ void* pfnFree /* function */;
  /* 0x0088 */ unsigned char* StackTop;
  /* 0x0090 */ unsigned char* pPresentedType;
  /* 0x0098 */ unsigned char* pTransmitType;
  /* 0x00a0 */ void* SavedHandle;
  /* 0x00a8 */ const struct _MIDL_STUB_DESC* StubDesc;
  /* 0x00b0 */ struct _FULL_PTR_XLAT_TABLES* FullPtrXlatTables;
  /* 0x00b8 */ unsigned long FullPtrRefId;
  /* 0x00bc */ unsigned long PointerLength;
  struct /* bitfield */
  {
    /* 0x00c0 */ int fInDontFree : 1; /* bit position: 0 */
    /* 0x00c0 */ int fDontCallFreeInst : 1; /* bit position: 1 */
    /* 0x00c0 */ int fInOnlyParam : 1; /* bit position: 2 */
    /* 0x00c0 */ int fHasReturn : 1; /* bit position: 3 */
    /* 0x00c0 */ int fHasExtensions : 1; /* bit position: 4 */
    /* 0x00c0 */ int fHasNewCorrDesc : 1; /* bit position: 5 */
    /* 0x00c0 */ int fIsIn : 1; /* bit position: 6 */
    /* 0x00c0 */ int fIsOut : 1; /* bit position: 7 */
    /* 0x00c0 */ int fIsOicf : 1; /* bit position: 8 */
    /* 0x00c0 */ int fBufferValid : 1; /* bit position: 9 */
    /* 0x00c0 */ int fHasMemoryValidateCallback : 1; /* bit position: 10 */
    /* 0x00c0 */ int fInFree : 1; /* bit position: 11 */
    /* 0x00c0 */ int fNeedMCCP : 1; /* bit position: 12 */
    /* 0x00c0 */ int fUnused : 3; /* bit position: 13 */
    /* 0x00c0 */ int fUnused2 : 16; /* bit position: 16 */
  }; /* bitfield */
  /* 0x00c4 */ unsigned long dwDestContext;
  /* 0x00c8 */ void* pvDestContext;
  /* 0x00d0 */ struct
  {
    /* 0x00d0 */ void* pad[2];
    /* 0x00e0 */ void* userContext;
  } /* size: 0x0018 */** SavedContextHandles;
  /* 0x00d8 */ long ParamNumber;
  /* 0x00dc */ long Padding_1017;
  /* 0x00e0 */ struct IRpcChannelBuffer* pRpcChannelBuffer;
  /* 0x00e8 */ struct ARRAY_INFO* pArrayInfo;
  /* 0x00f0 */ unsigned long* SizePtrCountArray;
  /* 0x00f8 */ unsigned long* SizePtrOffsetArray;
  /* 0x0100 */ unsigned long* SizePtrLengthArray;
  /* 0x0108 */ void* pArgQueue;
  /* 0x0110 */ unsigned long dwStubPhase;
  /* 0x0114 */ long Padding_1018;
  /* 0x0118 */ void* LowStackMark;
  /* 0x0120 */ struct _NDR_ASYNC_MESSAGE* pAsyncMsg;
  /* 0x0128 */ struct _NDR_CORRELATION_INFO* pCorrInfo;
  /* 0x0130 */ unsigned char* pCorrMemory;
  /* 0x0138 */ void* pMemoryList;
  /* 0x0140 */ __int64 pCSInfo;
  /* 0x0148 */ unsigned char* ConformanceMark;
  /* 0x0150 */ unsigned char* VarianceMark;
  /* 0x0158 */ __int64 Unused;
  /* 0x0160 */ struct _NDR_PROC_CONTEXT* pContext;
  /* 0x0168 */ void* ContextHandleHash;
  /* 0x0170 */ void* pUserMarshalList;
  /* 0x0178 */ __int64 Reserved51_3;
  /* 0x0180 */ __int64 Reserved51_4;
  /* 0x0188 */ __int64 Reserved51_5;
} MIDL_STUB_MESSAGE, *PMIDL_STUB_MESSAGE; /* size: 0x0190 */

struct tagLocationInfoData
{
  /* 0x0000 */ wchar_t* machineName;
  /* 0x0008 */ unsigned long processId;
  /* 0x000c */ unsigned long apartmentId;
  /* 0x0010 */ unsigned long contextId;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

class ServerLocationInfo
{
  /* 0x0000 */ long Padding_1019[8];
  /* 0x0020 */ struct tagLocationInfoData _locationInfoData;
  /* 0x0038 */ class CObjectContext* _pObjectContext;
  /* 0x0040 */ struct ISpecialSystemProperties* _pISSP;
}; /* size: 0x0048 */

struct tagScmRequestInfoData
{
  /* 0x0000 */ struct tagCustomPrivScmInfo* pScmInfo;
  /* 0x0008 */ struct _customREMOTE_REQUEST_SCM_INFO* remoteRequest;
}; /* size: 0x0010 */

class ScmRequestInfo
{
  /* 0x0000 */ long Padding_1020[8];
  /* 0x0020 */ struct tagScmRequestInfoData _scmRequestInfoData;
}; /* size: 0x0030 */

class ActivationPropertiesIn
{
  /* 0x0000 */ long Padding_1021[134];
  /* 0x0218 */ enum tagACTIVATION_STAGE _stage;
  /* 0x021c */ unsigned long _cCustomAct;
  /* 0x0220 */ unsigned long _customIndex;
  /* 0x0224 */ unsigned long _dwInitialContext;
  /* 0x0228 */ int _delegated;
  /* 0x022c */ long Padding_1022;
  /* 0x0230 */ void* _clientToken;
  /* 0x0238 */ int _fUseSystemIdentity;
  /* 0x023c */ int _fComplusOnly;
  /* 0x0240 */ struct IComClassInfo* _pClassInfo;
  /* 0x0248 */ struct ISystemActivator** _customActList;
  /* 0x0250 */ class InstantiationInfo* _pinst;
  /* 0x0258 */ class InstanceInfo* _pPersist;
  /* 0x0260 */ class ContextInfo* _pContextInfo;
  /* 0x0268 */ class ServerLocationInfo* _pServerLocationInfo;
  /* 0x0270 */ class SecurityInfo* _pSecurityInfo;
  /* 0x0278 */ class SpecialProperties* _pSpecialProperties;
  /* 0x0280 */ class ActivationPropertiesOut _actOut;
  /* 0x05d0 */ class SecurityInfo _securityInfo;
  /* 0x0630 */ class ServerLocationInfo _serverLocationInfo;
  /* 0x0678 */ class InstantiationInfo _instantiationInfo;
  /* 0x0770 */ class ContextInfo _contextInfo;
  /* 0x07e0 */ class InstanceInfo _instanceInfo;
  /* 0x0828 */ class ScmRequestInfo _scmRequestInfo;
  /* 0x0858 */ class SpecialProperties _specialProperties;
  /* 0x08d0 */ void* _pDip;
  /* 0x08d8 */ struct IClassFactory* _pCF;
}; /* size: 0x08e0 */

struct IRemUnknown
{
}; /* size: 0x0008 */

typedef struct _FILE_SET_SPARSE_BUFFER
{
  /* 0x0000 */ unsigned char SetSparse;
} FILE_SET_SPARSE_BUFFER, *PFILE_SET_SPARSE_BUFFER; /* size: 0x0001 */

typedef struct _WIN32_STREAM_ID
{
  /* 0x0000 */ unsigned long dwStreamId;
  /* 0x0004 */ unsigned long dwStreamAttributes;
  /* 0x0008 */ union _LARGE_INTEGER Size;
  /* 0x0010 */ unsigned long dwStreamNameSize;
  /* 0x0014 */ wchar_t cStreamName[1];
  /* 0x0016 */ char __PADDING__[2];
} WIN32_STREAM_ID, *PWIN32_STREAM_ID; /* size: 0x0018 */

struct NDR_POINTER_QUEUE_STATE;

class CWinRTApartmentActivator
{
}; /* size: 0x0008 */

typedef struct _MIDL_STUB_DESC
{
  /* 0x0000 */ void* RpcInterfaceInformation;
  /* 0x0008 */ void* pfnAllocate /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
  union
  {
    union
    {
      /* 0x0018 */ void** pAutoHandle;
      /* 0x0018 */ void** pPrimitiveHandle;
      /* 0x0018 */ struct __GENERIC_BINDING_INFO* pGenericBindingInfo;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ IMPLICIT_HANDLE_INFO;
  /* 0x0020 */ void* const* apfnNdrRundownRoutines /* function */;
  /* 0x0028 */ const struct _GENERIC_BINDING_ROUTINE_PAIR* aGenericBindingRoutinePairs;
  /* 0x0030 */ void* const* apfnExprEval /* function */;
  /* 0x0038 */ const struct _XMIT_ROUTINE_QUINTUPLE* aXmitQuintuple;
  /* 0x0040 */ const unsigned char* pFormatTypes;
  /* 0x0048 */ int fCheckBounds;
  /* 0x004c */ unsigned long Version;
  /* 0x0050 */ struct _MALLOC_FREE_STRUCT* pMallocFreeStruct;
  /* 0x0058 */ long MIDLVersion;
  /* 0x005c */ long Padding_1023;
  /* 0x0060 */ const struct _COMM_FAULT_OFFSETS* CommFaultOffsets;
  /* 0x0068 */ const struct _USER_MARSHAL_ROUTINE_QUADRUPLE* aUserMarshalQuadruple;
  /* 0x0070 */ void* const* NotifyRoutineTable /* function */;
  /* 0x0078 */ unsigned __int64 mFlags;
  /* 0x0080 */ const struct _NDR_CS_ROUTINES* CsRoutineTables;
  /* 0x0088 */ void* ProxyServerInfo;
  /* 0x0090 */ const struct _NDR_EXPR_DESC* pExprInfo;
} MIDL_STUB_DESC, *PMIDL_STUB_DESC; /* size: 0x0098 */

typedef struct _tagRemBINDINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1024;
  /* 0x0008 */ wchar_t* szExtraInfo;
  /* 0x0010 */ unsigned long grfBindInfoF;
  /* 0x0014 */ unsigned long dwBindVerb;
  /* 0x0018 */ wchar_t* szCustomVerb;
  /* 0x0020 */ unsigned long cbstgmedData;
  /* 0x0024 */ unsigned long dwOptions;
  /* 0x0028 */ unsigned long dwOptionsFlags;
  /* 0x002c */ unsigned long dwCodePage;
  /* 0x0030 */ struct _REMSECURITY_ATTRIBUTES securityAttributes;
  /* 0x003c */ struct _GUID iid;
  /* 0x004c */ long Padding_1025;
  /* 0x0050 */ struct IUnknown* pUnk;
  /* 0x0058 */ unsigned long dwReserved;
  /* 0x005c */ long __PADDING__[1];
} tagRemBINDINFO, *PtagRemBINDINFO; /* size: 0x0060 */

typedef struct _QUERY_SERVICE_LOCK_STATUSW
{
  /* 0x0000 */ unsigned long fIsLocked;
  /* 0x0004 */ long Padding_1026;
  /* 0x0008 */ wchar_t* lpLockOwner;
  /* 0x0010 */ unsigned long dwLockDuration;
  /* 0x0014 */ long __PADDING__[1];
} QUERY_SERVICE_LOCK_STATUSW, *PQUERY_SERVICE_LOCK_STATUSW; /* size: 0x0018 */

typedef struct _stati64
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1027[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long Padding_1028;
  /* 0x0018 */ __int64 st_size;
  /* 0x0020 */ __int64 st_atime;
  /* 0x0028 */ __int64 st_mtime;
  /* 0x0030 */ __int64 st_ctime;
} stati64, *Pstati64; /* size: 0x0038 */

struct IActivationPropertiesOut
{
}; /* size: 0x0008 */

typedef struct __GENERIC_BINDING_INFO
{
  /* 0x0000 */ void* pObj;
  /* 0x0008 */ unsigned int Size;
  /* 0x000c */ long Padding_1029;
  /* 0x0010 */ void* pfnBind /* function */;
  /* 0x0018 */ void* pfnUnbind /* function */;
} _GENERIC_BINDING_INFO, *P_GENERIC_BINDING_INFO; /* size: 0x0020 */

class CRemoteUnknown
{
  /* 0x0000 */ long Padding_1030[2];
  /* 0x0008 */ class CStdIdentity* _pStdId;
}; /* size: 0x0010 */

typedef struct __vc_attributes::event_receiverAttribute
{
  /* 0x0000 */ enum __vc_attributes::event_receiverAttribute::type_e type;
  /* 0x0004 */ BOOL layout_dependent;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::event_receiverAttribute, *P_vc_attributes::event_receiverAttribute; /* size: 0x0008 */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSA
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ long Padding_1031;
  /* 0x0008 */ char* pszComment;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ long __PADDING__[1];
} SERVICE_CONTROL_STATUS_REASON_PARAMSA, *PSERVICE_CONTROL_STATUS_REASON_PARAMSA; /* size: 0x0038 */

typedef struct _CERT_OR_CRL_BLOB
{
  /* 0x0000 */ unsigned long dwChoice;
  /* 0x0004 */ unsigned long cbEncoded;
  /* 0x0008 */ unsigned char* pbEncoded;
} CERT_OR_CRL_BLOB, *PCERT_OR_CRL_BLOB; /* size: 0x0010 */

typedef struct _USER_MARSHAL_CB
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1032;
  /* 0x0008 */ struct _MIDL_STUB_MESSAGE* pStubMsg;
  /* 0x0010 */ const unsigned char* pReserve;
  /* 0x0018 */ unsigned long Signature;
  /* 0x001c */ enum _USER_MARSHAL_CB_TYPE CBType;
  /* 0x0020 */ const unsigned char* pFormat;
  /* 0x0028 */ const unsigned char* pTypeFormat;
} USER_MARSHAL_CB, *PUSER_MARSHAL_CB; /* size: 0x0030 */

typedef struct _MALLOC_FREE_STRUCT
{
  /* 0x0000 */ void* pfnAllocate /* function */;
  /* 0x0008 */ void* pfnFree /* function */;
} MALLOC_FREE_STRUCT, *PMALLOC_FREE_STRUCT; /* size: 0x0010 */

typedef struct _TOKEN_ORIGIN
{
  /* 0x0000 */ struct _LUID OriginatingLogonSession;
} TOKEN_ORIGIN, *PTOKEN_ORIGIN; /* size: 0x0008 */

typedef struct __vc_attributes::iid_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
} _vc_attributes::iid_isAttribute, *P_vc_attributes::iid_isAttribute; /* size: 0x0008 */

typedef struct _FIBER
{
  /* 0x0000 */ void* FiberData;
  /* 0x0008 */ struct _EXCEPTION_REGISTRATION_RECORD* ExceptionList;
  /* 0x0010 */ void* StackBase;
  /* 0x0018 */ void* StackLimit;
  /* 0x0020 */ void* DeallocationStack;
  /* 0x0028 */ long Padding_1033[2];
  /* 0x0030 */ struct _CONTEXT FiberContext;
  /* 0x0500 */ struct _Wx86TIB* Wx86Tib;
  /* 0x0508 */ struct _ACTIVATION_CONTEXT_STACK* ActivationContextStackPointer;
  /* 0x0510 */ void* FlsData;
  /* 0x0518 */ unsigned long GuaranteedStackBytes;
  /* 0x051c */ unsigned short TebFlags;
  /* 0x051e */ unsigned short ReservedPad;
} FIBER, *PFIBER; /* size: 0x0520 */

typedef struct _COMM_FAULT_OFFSETS
{
  /* 0x0000 */ short CommOffset;
  /* 0x0002 */ short FaultOffset;
} COMM_FAULT_OFFSETS, *PCOMM_FAULT_OFFSETS; /* size: 0x0004 */

class CTmpMkEqBuf
{
  /* 0x0000 */ struct _MnkEqBuf _mkeqbuf;
  /* 0x0008 */ unsigned char _abData[2047];
}; /* size: 0x0808 */

class CStdIdentity::CInternalUnk
{
}; /* size: 0x0010 */

class Windows::Rtl::AutoInterface<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >
{
}; /* size: 0x0008 */

typedef struct _POWER_PLATFORM_INFORMATION
{
  /* 0x0000 */ unsigned char AoAc;
} POWER_PLATFORM_INFORMATION, *PPOWER_PLATFORM_INFORMATION; /* size: 0x0001 */

typedef struct _OCSP_SIGNATURE_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER SignatureAlgorithm;
  /* 0x0018 */ struct _CRYPT_BIT_BLOB Signature;
  /* 0x0030 */ unsigned long cCertEncoded;
  /* 0x0034 */ long Padding_1034;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB* rgCertEncoded;
} OCSP_SIGNATURE_INFO, *POCSP_SIGNATURE_INFO; /* size: 0x0040 */

typedef struct _RTL_UCSCHAR_ENCODER_RETURN_VALUE
{
  /* 0x0000 */ unsigned char* NewCursorValue;
  /* 0x0008 */ long FailureReason;
  /* 0x000c */ long __PADDING__[1];
} RTL_UCSCHAR_ENCODER_RETURN_VALUE, *PRTL_UCSCHAR_ENCODER_RETURN_VALUE; /* size: 0x0010 */

typedef struct _CRYPT_PKCS12_PBE_PARAMS
{
  /* 0x0000 */ int iIterations;
  /* 0x0004 */ unsigned long cbSalt;
} CRYPT_PKCS12_PBE_PARAMS, *PCRYPT_PKCS12_PBE_PARAMS; /* size: 0x0008 */

struct COPYFILE2_MESSAGE
{
  /* 0x0000 */ enum _COPYFILE2_MESSAGE_TYPE Type;
  /* 0x0004 */ unsigned long dwPadding;
  union
  {
    union
    {
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwReserved;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliChunkNumber;
        /* 0x0028 */ union _ULARGE_INTEGER uliChunkSize;
        /* 0x0030 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliTotalFileSize;
      } /* size: 0x0038 */ ChunkStarted;
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwFlags;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliChunkNumber;
        /* 0x0028 */ union _ULARGE_INTEGER uliChunkSize;
        /* 0x0030 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliStreamBytesTransferred;
        /* 0x0040 */ union _ULARGE_INTEGER uliTotalFileSize;
        /* 0x0048 */ union _ULARGE_INTEGER uliTotalBytesTransferred;
      } /* size: 0x0048 */ ChunkFinished;
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwReserved;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0028 */ union _ULARGE_INTEGER uliTotalFileSize;
      } /* size: 0x0028 */ StreamStarted;
      struct
      {
        /* 0x0008 */ unsigned long dwStreamNumber;
        /* 0x000c */ unsigned long dwReserved;
        /* 0x0010 */ void* hSourceFile;
        /* 0x0018 */ void* hDestinationFile;
        /* 0x0020 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0028 */ union _ULARGE_INTEGER uliStreamBytesTransferred;
        /* 0x0030 */ union _ULARGE_INTEGER uliTotalFileSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliTotalBytesTransferred;
      } /* size: 0x0038 */ StreamFinished;
      struct
      {
        /* 0x0008 */ unsigned long dwReserved;
      } /* size: 0x0004 */ PollContinue;
      struct
      {
        /* 0x0008 */ enum _COPYFILE2_COPY_PHASE CopyPhase;
        /* 0x000c */ unsigned long dwStreamNumber;
        /* 0x0010 */ HRESULT hrFailure;
        /* 0x0014 */ unsigned long dwReserved;
        /* 0x0018 */ union _ULARGE_INTEGER uliChunkNumber;
        /* 0x0020 */ union _ULARGE_INTEGER uliStreamSize;
        /* 0x0028 */ union _ULARGE_INTEGER uliStreamBytesTransferred;
        /* 0x0030 */ union _ULARGE_INTEGER uliTotalFileSize;
        /* 0x0038 */ union _ULARGE_INTEGER uliTotalBytesTransferred;
      } /* size: 0x0038 */ Error;
    }; /* size: 0x0048 */
  } /* size: 0x0048 */ Info;
}; /* size: 0x0050 */

typedef struct _NDR_CS_SIZE_CONVERT_ROUTINES
{
  /* 0x0000 */ void* pfnNetSize /* function */;
  /* 0x0008 */ void* pfnToNetCs /* function */;
  /* 0x0010 */ void* pfnLocalSize /* function */;
  /* 0x0018 */ void* pfnFromNetCs /* function */;
} NDR_CS_SIZE_CONVERT_ROUTINES, *PNDR_CS_SIZE_CONVERT_ROUTINES; /* size: 0x0020 */

struct joyinfoex_tag
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long dwXpos;
  /* 0x000c */ unsigned long dwYpos;
  /* 0x0010 */ unsigned long dwZpos;
  /* 0x0014 */ unsigned long dwRpos;
  /* 0x0018 */ unsigned long dwUpos;
  /* 0x001c */ unsigned long dwVpos;
  /* 0x0020 */ unsigned long dwButtons;
  /* 0x0024 */ unsigned long dwButtonNumber;
  /* 0x0028 */ unsigned long dwPOV;
  /* 0x002c */ unsigned long dwReserved1;
  /* 0x0030 */ unsigned long dwReserved2;
}; /* size: 0x0034 */

typedef struct _IMAGE_DOS_HEADER
{
  /* 0x0000 */ unsigned short e_magic;
  /* 0x0002 */ unsigned short e_cblp;
  /* 0x0004 */ unsigned short e_cp;
  /* 0x0006 */ unsigned short e_crlc;
  /* 0x0008 */ unsigned short e_cparhdr;
  /* 0x000a */ unsigned short e_minalloc;
  /* 0x000c */ unsigned short e_maxalloc;
  /* 0x000e */ unsigned short e_ss;
  /* 0x0010 */ unsigned short e_sp;
  /* 0x0012 */ unsigned short e_csum;
  /* 0x0014 */ unsigned short e_ip;
  /* 0x0016 */ unsigned short e_cs;
  /* 0x0018 */ unsigned short e_lfarlc;
  /* 0x001a */ unsigned short e_ovno;
  /* 0x001c */ unsigned short e_res[4];
  /* 0x0024 */ unsigned short e_oemid;
  /* 0x0026 */ unsigned short e_oeminfo;
  /* 0x0028 */ unsigned short e_res2[10];
  /* 0x003c */ long e_lfanew;
} IMAGE_DOS_HEADER, *PIMAGE_DOS_HEADER; /* size: 0x0040 */

typedef struct _FSCTL_OFFLOAD_WRITE_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 LengthWritten;
} FSCTL_OFFLOAD_WRITE_OUTPUT, *PFSCTL_OFFLOAD_WRITE_OUTPUT; /* size: 0x0010 */

typedef struct _JOB_INFO_4A
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ long Padding_1035;
  /* 0x0008 */ char* pPrinterName;
  /* 0x0010 */ char* pMachineName;
  /* 0x0018 */ char* pUserName;
  /* 0x0020 */ char* pDocument;
  /* 0x0028 */ char* pNotifyName;
  /* 0x0030 */ char* pDatatype;
  /* 0x0038 */ char* pPrintProcessor;
  /* 0x0040 */ char* pParameters;
  /* 0x0048 */ char* pDriverName;
  /* 0x0050 */ struct _devicemodeA* pDevMode;
  /* 0x0058 */ char* pStatus;
  /* 0x0060 */ void* pSecurityDescriptor;
  /* 0x0068 */ unsigned long Status;
  /* 0x006c */ unsigned long Priority;
  /* 0x0070 */ unsigned long Position;
  /* 0x0074 */ unsigned long StartTime;
  /* 0x0078 */ unsigned long UntilTime;
  /* 0x007c */ unsigned long TotalPages;
  /* 0x0080 */ unsigned long Size;
  /* 0x0084 */ struct _SYSTEMTIME Submitted;
  /* 0x0094 */ unsigned long Time;
  /* 0x0098 */ unsigned long PagesPrinted;
  /* 0x009c */ long SizeHigh;
} JOB_INFO_4A, *PJOB_INFO_4A; /* size: 0x00a0 */

struct IInternetZoneManagerEx2
{
}; /* size: 0x0008 */

struct _PSM_APPSTATE_REGISTRATION;

class CPres
{
  /* 0x0000 */ class CFormat m_format;
  /* 0x0030 */ unsigned long m_ulHeight;
  /* 0x0034 */ unsigned long m_ulWidth;
  /* 0x0038 */ class CData m_data;
}; /* size: 0x0058 */

class CClassMoniker
{
  /* 0x0000 */ long Padding_1036[6];
  /* 0x0018 */ long _cRefs;
  /* 0x001c */ struct ClassMonikerData _data;
  /* 0x0030 */ void* _pExtra;
  /* 0x0038 */ wchar_t* _pszCodeBase;
  /* 0x0040 */ unsigned long _dwFileVersionMS;
  /* 0x0044 */ unsigned long _dwFileVersionLS;
}; /* size: 0x0048 */

typedef struct _CRYPT_CSP_PROVIDER
{
  /* 0x0000 */ unsigned long dwKeySpec;
  /* 0x0004 */ long Padding_1037;
  /* 0x0008 */ wchar_t* pwszProviderName;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB Signature;
} CRYPT_CSP_PROVIDER, *PCRYPT_CSP_PROVIDER; /* size: 0x0028 */

class CClassMonikerFactory
{
}; /* size: 0x0010 */

typedef struct _ACCESS_DENIED_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_OBJECT_ACE, *PACCESS_DENIED_OBJECT_ACE; /* size: 0x0030 */

struct tagPolicyEntry
{
  /* 0x0000 */ struct tagPolicyEntry* pNext;
  /* 0x0008 */ struct tagPolicyEntry* pPrev;
  /* 0x0010 */ unsigned long ctxEvent;
  /* 0x0014 */ long Padding_1038;
  /* 0x0018 */ struct IPolicy* pPolicy;
  /* 0x0020 */ struct _GUID policyID;
}; /* size: 0x0030 */

struct tagEMRALPHABLEND
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
  /* 0x0064 */ long cxSrc;
  /* 0x0068 */ long cySrc;
}; /* size: 0x006c */

class CProcessPatternTbl
{
  /* 0x0000 */ class CPatternTbl* m_pPatTbl;
  /* 0x0008 */ class CScmPatternTbl* m_pScmPatTbl;
}; /* size: 0x0010 */

typedef struct __vc_attributes::atl::rdxAttribute
{
  /* 0x0000 */ const char* key;
  /* 0x0008 */ const char* valuename;
  /* 0x0010 */ const char* regtype;
} _vc_attributes::atl::rdxAttribute, *P_vc_attributes::atl::rdxAttribute; /* size: 0x0018 */

typedef struct _FORM_INFO_2A
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1039;
  /* 0x0008 */ const char* pName;
  /* 0x0010 */ struct tagSIZE Size;
  /* 0x0018 */ struct _RECTL ImageableArea;
  /* 0x0028 */ const char* pKeyword;
  /* 0x0030 */ unsigned long StringType;
  /* 0x0034 */ long Padding_1040;
  /* 0x0038 */ const char* pMuiDll;
  /* 0x0040 */ unsigned long dwResourceId;
  /* 0x0044 */ long Padding_1041;
  /* 0x0048 */ const char* pDisplayName;
  /* 0x0050 */ unsigned short wLangId;
  /* 0x0052 */ char __PADDING__[6];
} FORM_INFO_2A, *PFORM_INFO_2A; /* size: 0x0058 */

typedef struct _RC_CONFIG
{
  /* 0x0000 */ unsigned long dwSignature;
  /* 0x0004 */ unsigned long dwLength;
  /* 0x0008 */ unsigned long dwRCConfigVersion;
  /* 0x000c */ unsigned long dwFilePathType;
  /* 0x0010 */ unsigned long dwFileType;
  /* 0x0014 */ unsigned long dwSystemAttributes;
  /* 0x0018 */ unsigned long dwUltimateFallbackLocation;
  /* 0x001c */ unsigned long dwServiceCheckSum[4];
  /* 0x002c */ unsigned long dwChecksum[4];
  /* 0x003c */ unsigned long dwReserved1;
  /* 0x0040 */ unsigned long dwReserved2;
  /* 0x0044 */ unsigned long dwMUIFileNameOffset;
  /* 0x0048 */ unsigned long dwMUIFileNameLength;
  /* 0x004c */ unsigned long dwMUIFilePathOffset;
  /* 0x0050 */ unsigned long dwMUIFilePathLength;
  /* 0x0054 */ unsigned long dwMainResNameTypesOffset;
  /* 0x0058 */ unsigned long dwMainResNameTypesLength;
  /* 0x005c */ unsigned long dwMainResIDTypesOffset;
  /* 0x0060 */ unsigned long dwMainResIDTypesLength;
  /* 0x0064 */ unsigned long dwMUIResNameTypesOffset;
  /* 0x0068 */ unsigned long dwMUIResNameTypesLength;
  /* 0x006c */ unsigned long dwMUIResIDTypesOffset;
  /* 0x0070 */ unsigned long dwMUIResIDTypesLength;
  /* 0x0074 */ unsigned long dwLanguageOffset;
  /* 0x0078 */ unsigned long dwLanguageLength;
  /* 0x007c */ unsigned long dwUltimateFallbackLanguageOffset;
  /* 0x0080 */ unsigned long dwUltimateFallbackLanguageLength;
} RC_CONFIG, *PRC_CONFIG; /* size: 0x0084 */

typedef struct _SYSTEM_HIBERFILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfMcbPairs;
  /* 0x0004 */ long Padding_1042;
  /* 0x0008 */ union _LARGE_INTEGER Mcb[1];
} SYSTEM_HIBERFILE_INFORMATION, *PSYSTEM_HIBERFILE_INFORMATION; /* size: 0x0010 */

struct DISPLAYCONFIG_SOURCE_DEVICE_NAME
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ wchar_t viewGdiDeviceName[32];
}; /* size: 0x0054 */

typedef struct __vc_attributes::atl::perf_counterAttribute
{
  /* 0x0000 */ const char* namestring;
  /* 0x0008 */ const char* helpstring;
  /* 0x0010 */ int name_res;
  /* 0x0014 */ int help_res;
  /* 0x0018 */ int countertype;
  /* 0x001c */ int defscale;
  /* 0x0020 */ BOOL default_counter;
  /* 0x0021 */ char Padding_1043[3];
  /* 0x0024 */ int detail;
  /* 0x0028 */ int max_counter_size;
  /* 0x002c */ long Padding_1044;
  /* 0x0030 */ const char* countertype_string;
} _vc_attributes::atl::perf_counterAttribute, *P_vc_attributes::atl::perf_counterAttribute; /* size: 0x0038 */

class CFastBH
{
  /* 0x0000 */ void* m_hRpc;
  /* 0x0008 */ void* m_ifHandle;
}; /* size: 0x0010 */

class CContextLife
{
  /* 0x0000 */ unsigned long _dwAlive;
  /* 0x0004 */ long _cRefs;
}; /* size: 0x0008 */

typedef struct __midl_frag293_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag293_t, *P_midl_frag293_t; /* size: 0x0020 */

struct tagDELETEITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ long Padding_1045;
  /* 0x0010 */ struct HWND__* hwndItem;
  /* 0x0018 */ unsigned __int64 itemData;
}; /* size: 0x0020 */

class CStdWrapper;

struct IProvideClassInfo2
{
}; /* size: 0x0008 */

typedef struct _DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long OperationStatus;
  /* 0x0010 */ unsigned long ExtendedError;
  /* 0x0014 */ unsigned long TargetDetailedError;
  /* 0x0018 */ unsigned long ReservedStatus;
  /* 0x001c */ unsigned long OutputBlockOffset;
  /* 0x0020 */ unsigned long OutputBlockLength;
} DEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT, *PDEVICE_MANAGE_DATA_SET_ATTRIBUTES_OUTPUT; /* size: 0x0024 */

struct IOleInPlaceSite
{
}; /* size: 0x0008 */

struct IFastRundown
{
}; /* size: 0x0008 */

typedef struct _PARTITION_INFORMATION_MBR
{
  /* 0x0000 */ unsigned char PartitionType;
  /* 0x0001 */ unsigned char BootIndicator;
  /* 0x0002 */ unsigned char RecognizedPartition;
  /* 0x0003 */ char Padding_1046;
  /* 0x0004 */ unsigned long HiddenSectors;
} PARTITION_INFORMATION_MBR, *PPARTITION_INFORMATION_MBR; /* size: 0x0008 */

typedef struct _PARTITION_INFORMATION_EX
{
  /* 0x0000 */ enum _PARTITION_STYLE PartitionStyle;
  /* 0x0004 */ long Padding_1047;
  /* 0x0008 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0010 */ union _LARGE_INTEGER PartitionLength;
  /* 0x0018 */ unsigned long PartitionNumber;
  /* 0x001c */ unsigned char RewritePartition;
  /* 0x001d */ char Padding_1048[3];
  union
  {
    /* 0x0020 */ struct _PARTITION_INFORMATION_MBR Mbr;
    /* 0x0020 */ struct _PARTITION_INFORMATION_GPT Gpt;
  }; /* size: 0x0070 */
} PARTITION_INFORMATION_EX, *PPARTITION_INFORMATION_EX; /* size: 0x0090 */

typedef struct _DRIVE_LAYOUT_INFORMATION_EX
{
  /* 0x0000 */ unsigned long PartitionStyle;
  /* 0x0004 */ unsigned long PartitionCount;
  union
  {
    /* 0x0008 */ struct _DRIVE_LAYOUT_INFORMATION_MBR Mbr;
    /* 0x0008 */ struct _DRIVE_LAYOUT_INFORMATION_GPT Gpt;
  }; /* size: 0x0028 */
  /* 0x0030 */ struct _PARTITION_INFORMATION_EX PartitionEntry[1];
} DRIVE_LAYOUT_INFORMATION_EX, *PDRIVE_LAYOUT_INFORMATION_EX; /* size: 0x00c0 */

struct ARRAY_INFO
{
  /* 0x0000 */ long Dimension;
  /* 0x0004 */ long Padding_1049;
  /* 0x0008 */ unsigned long* BufferConformanceMark;
  /* 0x0010 */ unsigned long* BufferVarianceMark;
  /* 0x0018 */ unsigned long* MaxCountArray;
  /* 0x0020 */ unsigned long* OffsetArray;
  /* 0x0028 */ unsigned long* ActualCountArray;
}; /* size: 0x0030 */

struct _NDR_ASYNC_MESSAGE;

struct tagMCI_GETDEVCAPS_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwReturn;
  /* 0x000c */ unsigned long dwItem;
}; /* size: 0x0010 */

struct _TP_WAIT;

struct IOverrideTargetContext
{
}; /* size: 0x0008 */

typedef struct _iinspectable_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[99];
  /* 0x0065 */ char __PADDING__[1];
} iinspectable_MIDL_TYPE_FORMAT_STRING, *Piinspectable_MIDL_TYPE_FORMAT_STRING; /* size: 0x0066 */

struct IEnumOleUndoUnits
{
}; /* size: 0x0008 */

struct _NDR_PROC_CONTEXT;

typedef struct _IMAGE_RESOURCE_DIR_STRING_U
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ wchar_t NameString[1];
} IMAGE_RESOURCE_DIR_STRING_U, *PIMAGE_RESOURCE_DIR_STRING_U; /* size: 0x0004 */

typedef struct _POINTFLOAT
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
} POINTFLOAT, *PPOINTFLOAT; /* size: 0x0008 */

typedef struct _GLYPHMETRICSFLOAT
{
  /* 0x0000 */ float gmfBlackBoxX;
  /* 0x0004 */ float gmfBlackBoxY;
  /* 0x0008 */ struct _POINTFLOAT gmfptGlyphOrigin;
  /* 0x0010 */ float gmfCellIncX;
  /* 0x0014 */ float gmfCellIncY;
} GLYPHMETRICSFLOAT, *PGLYPHMETRICSFLOAT; /* size: 0x0018 */

class CBindStatusCallback
{
  /* 0x0000 */ long Padding_1050[4];
  /* 0x0010 */ long _cRef;
  /* 0x0014 */ HRESULT _hr;
  /* 0x0018 */ void* _hEvent;
}; /* size: 0x0020 */

typedef struct _CSV_QUERY_MDS_PATH
{
  /* 0x0000 */ unsigned long MdsNodeId;
  /* 0x0004 */ unsigned long DsNodeId;
  /* 0x0008 */ unsigned long PathLength;
  /* 0x000c */ wchar_t Path[1];
  /* 0x000e */ char __PADDING__[2];
} CSV_QUERY_MDS_PATH, *PCSV_QUERY_MDS_PATH; /* size: 0x0010 */

struct IDLLHost
{
}; /* size: 0x0008 */

class CBasedContextPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CContext
{
  /* 0x0000 */ unsigned long ctxid;
  /* 0x0004 */ long Padding_1051;
  /* 0x0008 */ class CBasedContextPtr pctxNext;
}; /* size: 0x0010 */

typedef struct _SYSTEM_ALARM_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_ALARM_CALLBACK_ACE, *PSYSTEM_ALARM_CALLBACK_ACE; /* size: 0x000c */

typedef struct _CM_SCSI_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned char HostIdentifier;
  /* 0x0005 */ char __PADDING__[1];
} CM_SCSI_DEVICE_DATA, *PCM_SCSI_DEVICE_DATA; /* size: 0x0006 */

typedef struct _TOKEN_DEFAULT_DACL
{
  /* 0x0000 */ struct _ACL* DefaultDacl;
} TOKEN_DEFAULT_DACL, *PTOKEN_DEFAULT_DACL; /* size: 0x0008 */

struct IPointerInactive
{
}; /* size: 0x0008 */

typedef struct _PRINTPROCESSOR_CAPS_1
{
  /* 0x0000 */ unsigned long dwLevel;
  /* 0x0004 */ unsigned long dwNupOptions;
  /* 0x0008 */ unsigned long dwPageOrderFlags;
  /* 0x000c */ unsigned long dwNumberOfCopies;
} PRINTPROCESSOR_CAPS_1, *PPRINTPROCESSOR_CAPS_1; /* size: 0x0010 */

typedef struct _IO_STATUS_BLOCK32
{
  /* 0x0000 */ long Status;
  /* 0x0004 */ unsigned long Information;
} IO_STATUS_BLOCK32, *PIO_STATUS_BLOCK32; /* size: 0x0008 */

typedef struct _SYSTEM_ERROR_PORT_TIMEOUTS
{
  /* 0x0000 */ unsigned long StartTimeout;
  /* 0x0004 */ unsigned long CommTimeout;
} SYSTEM_ERROR_PORT_TIMEOUTS, *PSYSTEM_ERROR_PORT_TIMEOUTS; /* size: 0x0008 */

typedef struct _s__RTTIBaseClassDescriptor2
{
  /* 0x0000 */ struct _TypeDescriptor* pTypeDescriptor;
  /* 0x0008 */ unsigned long numContainedBases;
  /* 0x000c */ struct _PMD where;
  /* 0x0018 */ unsigned long attributes;
  /* 0x001c */ const struct _s__RTTIClassHierarchyDescriptor* pClassDescriptor;
} s__RTTIBaseClassDescriptor2, *Ps__RTTIBaseClassDescriptor2; /* size: 0x0024 */

struct tagMCI_VD_ESCAPE_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const char* lpstrCommand;
}; /* size: 0x0010 */

typedef struct _EFS_ENCRYPTION_STATUS_INFO
{
  /* 0x0000 */ int bHasCurrentKey;
  /* 0x0004 */ unsigned long dwEncryptionError;
} EFS_ENCRYPTION_STATUS_INFO, *PEFS_ENCRYPTION_STATUS_INFO; /* size: 0x0008 */

typedef struct _TXFS_MODIFY_RM
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long LogContainerCountMax;
  /* 0x0008 */ unsigned long LogContainerCountMin;
  /* 0x000c */ unsigned long LogContainerCount;
  /* 0x0010 */ unsigned long LogGrowthIncrement;
  /* 0x0014 */ unsigned long LogAutoShrinkPercentage;
  /* 0x0018 */ unsigned __int64 Reserved;
  /* 0x0020 */ unsigned short LoggingMode;
  /* 0x0022 */ char __PADDING__[6];
} TXFS_MODIFY_RM, *PTXFS_MODIFY_RM; /* size: 0x0028 */

typedef struct __midl_frag166_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag166_t, *P_midl_frag166_t; /* size: 0x000c */

typedef struct _FILE_FS_DATA_COPY_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfCopies;
} FILE_FS_DATA_COPY_INFORMATION, *PFILE_FS_DATA_COPY_INFORMATION; /* size: 0x0004 */

typedef struct _STORAGE_PROPERTY_QUERY
{
  /* 0x0000 */ enum _STORAGE_PROPERTY_ID PropertyId;
  /* 0x0004 */ enum _STORAGE_QUERY_TYPE QueryType;
  /* 0x0008 */ unsigned char AdditionalParameters[1];
  /* 0x0009 */ char __PADDING__[3];
} STORAGE_PROPERTY_QUERY, *PSTORAGE_PROPERTY_QUERY; /* size: 0x000c */

typedef struct _CM_PNP_BIOS_DEVICE_NODE
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Node;
  /* 0x0003 */ unsigned long ProductId;
  /* 0x0007 */ unsigned char DeviceType[3];
  /* 0x000a */ unsigned short DeviceAttributes;
} CM_PNP_BIOS_DEVICE_NODE, *PCM_PNP_BIOS_DEVICE_NODE; /* size: 0x000c */

class CBrokeredClipDataObject::{dtor}::__l9::<lambda_32D80D6E4B00AA95>;

typedef struct _SYSTEM_SYSTEM_PARTITION_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING SystemPartition;
} SYSTEM_SYSTEM_PARTITION_INFORMATION, *PSYSTEM_SYSTEM_PARTITION_INFORMATION; /* size: 0x0010 */

struct tagAUXCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned short wTechnology;
  /* 0x002a */ unsigned short wReserved1;
  /* 0x002c */ unsigned long dwSupport;
  /* 0x0030 */ struct _GUID ManufacturerGuid;
  /* 0x0040 */ struct _GUID ProductGuid;
  /* 0x0050 */ struct _GUID NameGuid;
}; /* size: 0x0060 */

typedef struct _TRANSACTIONMANAGER_OLDEST_INFORMATION
{
  /* 0x0000 */ struct _GUID OldestTransactionGuid;
} TRANSACTIONMANAGER_OLDEST_INFORMATION, *PTRANSACTIONMANAGER_OLDEST_INFORMATION; /* size: 0x0010 */

typedef struct _QUOTA_LIMITS
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
} QUOTA_LIMITS, *PQUOTA_LIMITS; /* size: 0x0030 */

typedef struct _IMAGE_IMPORT_BY_NAME
{
  /* 0x0000 */ unsigned short Hint;
  /* 0x0002 */ char Name[1];
  /* 0x0003 */ char __PADDING__[1];
} IMAGE_IMPORT_BY_NAME, *PIMAGE_IMPORT_BY_NAME; /* size: 0x0004 */

typedef struct _DEVICE_DATA_SET_REPAIR_PARAMETERS
{
  /* 0x0000 */ unsigned long NumberOfRepairCopies;
  /* 0x0004 */ unsigned long SourceCopy;
  /* 0x0008 */ unsigned long RepairCopies[1];
} DEVICE_DATA_SET_REPAIR_PARAMETERS, *PDEVICE_DATA_SET_REPAIR_PARAMETERS; /* size: 0x000c */

typedef struct _SYSTEM_VERIFIER_INFORMATION_EX
{
  /* 0x0000 */ unsigned long VerifyMode;
  /* 0x0004 */ unsigned long OptionChanges;
  /* 0x0008 */ struct _UNICODE_STRING PreviousBucketName;
  /* 0x0018 */ unsigned long IrpCancelTimeoutMsec;
  /* 0x001c */ unsigned long VerifierExtensionEnabled;
  /* 0x0020 */ unsigned long Reserved[1];
  /* 0x0024 */ long __PADDING__[1];
} SYSTEM_VERIFIER_INFORMATION_EX, *PSYSTEM_VERIFIER_INFORMATION_EX; /* size: 0x0028 */

typedef struct _FILE_FULL_DIR_INFO
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ wchar_t FileName[1];
  /* 0x0046 */ char __PADDING__[2];
} FILE_FULL_DIR_INFO, *PFILE_FULL_DIR_INFO; /* size: 0x0048 */

typedef struct __vc_attributes::publicAttribute
{
} _vc_attributes::publicAttribute, *P_vc_attributes::publicAttribute; /* size: 0x0001 */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_1052;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
  /* 0x0028 */ void* Extra1;
  /* 0x0030 */ void* Extra2;
  /* 0x0038 */ void* Extra3;
  /* 0x0040 */ void* Extra4;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_EXTENDED; /* size: 0x0048 */

typedef struct _BIDI_REQUEST_DATA
{
  /* 0x0000 */ unsigned long dwReqNumber;
  /* 0x0004 */ long Padding_1053;
  /* 0x0008 */ wchar_t* pSchema;
  /* 0x0010 */ struct _BIDI_DATA data;
} BIDI_REQUEST_DATA, *PBIDI_REQUEST_DATA; /* size: 0x0028 */

typedef struct __vc_attributes::idAttribute
{
  /* 0x0000 */ int id_num;
} _vc_attributes::idAttribute, *P_vc_attributes::idAttribute; /* size: 0x0004 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IUnknown,Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0030 */

typedef struct _WNF_DELIVERY_DESCRIPTOR
{
  /* 0x0000 */ struct _WNF_STATE_NAME StateName;
  /* 0x0008 */ unsigned long ChangeStamp;
  /* 0x000c */ unsigned long DeliveryFlag;
  /* 0x0010 */ unsigned long DeliveryState;
  /* 0x0014 */ unsigned long ReliableRetryDelay;
  /* 0x0018 */ unsigned long BatchRetry;
  /* 0x001c */ unsigned long StateDataSize;
  /* 0x0020 */ unsigned long EventMask;
  /* 0x0024 */ struct _WNF_TYPE_ID TypeId;
  /* 0x0034 */ unsigned long StateDataOffset;
} WNF_DELIVERY_DESCRIPTOR, *PWNF_DELIVERY_DESCRIPTOR; /* size: 0x0038 */

struct tagMCI_OVLY_LOAD_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const wchar_t* lpfilename;
  /* 0x0010 */ struct tagRECT rc;
}; /* size: 0x0020 */

typedef struct _PO_WAKE_SOURCE_HISTORY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Offsets[1];
} PO_WAKE_SOURCE_HISTORY, *PPO_WAKE_SOURCE_HISTORY; /* size: 0x0008 */

typedef struct _SYSDBG_BUS_DATA
{
  /* 0x0000 */ unsigned long Address;
  /* 0x0004 */ long Padding_1054;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ enum _BUS_DATA_TYPE BusDataType;
  /* 0x0018 */ unsigned long BusNumber;
  /* 0x001c */ unsigned long SlotNumber;
} SYSDBG_BUS_DATA, *PSYSDBG_BUS_DATA; /* size: 0x0020 */

typedef struct _LANA_ENUM
{
  /* 0x0000 */ unsigned char length;
  /* 0x0001 */ unsigned char lana[255];
} LANA_ENUM, *PLANA_ENUM; /* size: 0x0100 */

typedef struct _CERT_NAME_CONSTRAINTS_INFO
{
  /* 0x0000 */ unsigned long cPermittedSubtree;
  /* 0x0004 */ long Padding_1055;
  /* 0x0008 */ struct _CERT_GENERAL_SUBTREE* rgPermittedSubtree;
  /* 0x0010 */ unsigned long cExcludedSubtree;
  /* 0x0014 */ long Padding_1056;
  /* 0x0018 */ struct _CERT_GENERAL_SUBTREE* rgExcludedSubtree;
} CERT_NAME_CONSTRAINTS_INFO, *PCERT_NAME_CONSTRAINTS_INFO; /* size: 0x0020 */

struct tagBITMAPINFO
{
  /* 0x0000 */ struct tagBITMAPINFOHEADER bmiHeader;
  /* 0x0028 */ struct tagRGBQUAD bmiColors[1];
}; /* size: 0x002c */

struct tagSAFEARRAY
{
  /* 0x0000 */ unsigned short cDims;
  /* 0x0002 */ unsigned short fFeatures;
  /* 0x0004 */ unsigned long cbElements;
  /* 0x0008 */ unsigned long cLocks;
  /* 0x000c */ long Padding_1057;
  /* 0x0010 */ void* pvData;
  /* 0x0018 */ struct tagSAFEARRAYBOUND rgsabound[1];
}; /* size: 0x0020 */

typedef struct _tagSTACKFRAME64
{
  /* 0x0000 */ struct _tagADDRESS64 AddrPC;
  /* 0x0010 */ struct _tagADDRESS64 AddrReturn;
  /* 0x0020 */ struct _tagADDRESS64 AddrFrame;
  /* 0x0030 */ struct _tagADDRESS64 AddrStack;
  /* 0x0040 */ struct _tagADDRESS64 AddrBStore;
  /* 0x0050 */ void* FuncTableEntry;
  /* 0x0058 */ unsigned __int64 Params[4];
  /* 0x0078 */ int Far;
  /* 0x007c */ int Virtual;
  /* 0x0080 */ unsigned __int64 Reserved[3];
  /* 0x0098 */ struct _KDHELP64 KdHelp;
} tagSTACKFRAME64, *PtagSTACKFRAME64; /* size: 0x0108 */

struct ISerializable
{
}; /* size: 0x0008 */

typedef struct _NDR64_MEMPAD_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Reserve1;
  /* 0x0002 */ unsigned short MemPad;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_MEMPAD_FORMAT, *PNDR64_MEMPAD_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag258_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag258_t, *P_midl_frag258_t; /* size: 0x0040 */

typedef struct _CRYPT_PASSWORD_CREDENTIALSA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1058;
  /* 0x0008 */ char* pszUsername;
  /* 0x0010 */ char* pszPassword;
} CRYPT_PASSWORD_CREDENTIALSA, *PCRYPT_PASSWORD_CREDENTIALSA; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef const >
{
  /* 0x0000 */ const class Microsoft::WRL::WeakRef* ptr_;
}; /* size: 0x0008 */

typedef struct _MINIDUMP_MODULE_LIST
{
  /* 0x0000 */ unsigned int NumberOfModules;
  /* 0x0004 */ struct _MINIDUMP_MODULE* Modules /* zero-length array */;
} MINIDUMP_MODULE_LIST, *PMINIDUMP_MODULE_LIST; /* size: 0x0004 */

class SerializableProperty
{
  /* 0x0000 */ long Padding_1059[2];
  /* 0x0008 */ struct ISerializableParent* _parent;
  /* 0x0010 */ int _unSerialized;
  /* 0x0014 */ int _added;
}; /* size: 0x0018 */

struct CREATE_USN_JOURNAL_DATA
{
  /* 0x0000 */ unsigned __int64 MaximumSize;
  /* 0x0008 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0010 */

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
  /* 0x0000 */ long Padding_1060[2];
  /* 0x0008 */ void* handle_;
}; /* size: 0x0010 */

typedef struct _PROVIDOR_INFO_1W
{
  /* 0x0000 */ wchar_t* pName;
  /* 0x0008 */ wchar_t* pEnvironment;
  /* 0x0010 */ wchar_t* pDLLName;
} PROVIDOR_INFO_1W, *PPROVIDOR_INFO_1W; /* size: 0x0018 */

typedef struct _RTL_PROCESS_BACKTRACES_CONTROL
{
  /* 0x0000 */ unsigned long ControlCode;
  /* 0x0004 */ unsigned long ControlSize;
  union
  {
    /* 0x0008 */ unsigned char ControlData[1];
    /* 0x0008 */ struct _RTL_STACK_TRACE_DATABASE_CREATE DatabaseCreate;
  }; /* size: 0x0018 */
} RTL_PROCESS_BACKTRACES_CONTROL, *PRTL_PROCESS_BACKTRACES_CONTROL; /* size: 0x0020 */

typedef struct _SE_ACCESS_REQUEST
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_1061;
  /* 0x0008 */ struct _SE_SECURITY_DESCRIPTOR* SeSecurityDescriptor;
  /* 0x0010 */ unsigned long DesiredAccess;
  /* 0x0014 */ unsigned long PreviouslyGrantedAccess;
  /* 0x0018 */ void* PrincipalSelfSid;
  /* 0x0020 */ struct _GENERIC_MAPPING* GenericMapping;
  /* 0x0028 */ unsigned long ObjectTypeListCount;
  /* 0x002c */ long Padding_1062;
  /* 0x0030 */ struct _OBJECT_TYPE_LIST* ObjectTypeList;
} SE_ACCESS_REQUEST, *PSE_ACCESS_REQUEST; /* size: 0x0038 */

typedef struct _EFS_HASH_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_1063;
  /* 0x0008 */ unsigned char* pbData;
} EFS_HASH_BLOB, *PEFS_HASH_BLOB; /* size: 0x0010 */

typedef struct _MINIDUMP_DIRECTORY
{
  /* 0x0000 */ unsigned int StreamType;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Location;
} MINIDUMP_DIRECTORY, *PMINIDUMP_DIRECTORY; /* size: 0x000c */

class Microsoft::WRL::Wrappers::Event
{
}; /* size: 0x0010 */

struct ISimpleFrameSite
{
}; /* size: 0x0008 */

struct USN_JOURNAL_DATA_V0
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
}; /* size: 0x0038 */

typedef struct _PUBLIC_OBJECT_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Attributes;
  /* 0x0004 */ unsigned long GrantedAccess;
  /* 0x0008 */ unsigned long HandleCount;
  /* 0x000c */ unsigned long PointerCount;
  /* 0x0010 */ unsigned long Reserved[10];
} PUBLIC_OBJECT_BASIC_INFORMATION, *PPUBLIC_OBJECT_BASIC_INFORMATION; /* size: 0x0038 */

typedef struct __vc_attributes::helper_attributes::source_annotation_attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ const int Typedef;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ char __PADDING__[3];
} _vc_attributes::helper_attributes::source_annotation_attributeAttribute, *P_vc_attributes::helper_attributes::source_annotation_attributeAttribute; /* size: 0x0008 */

typedef struct _FSCTL_OFFLOAD_READ_OUTPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 TransferLength;
  /* 0x0010 */ unsigned char Token[512];
} FSCTL_OFFLOAD_READ_OUTPUT, *PFSCTL_OFFLOAD_READ_OUTPUT; /* size: 0x0210 */

typedef struct _SCMREGKEY
{
  /* 0x0000 */ unsigned __int64 dwEntryLoc;
  /* 0x0008 */ unsigned long dwHash;
  /* 0x000c */ unsigned long dwScmId;
} SCMREGKEY, *PSCMREGKEY; /* size: 0x0010 */

class CROTItem
{
  /* 0x0000 */ unsigned short _wItemSig;
  /* 0x0002 */ char Padding_1064[2];
  /* 0x0004 */ int _fDontCallApp;
  /* 0x0008 */ struct _SCMREGKEY _scmregkey;
  /* 0x0018 */ unsigned long _hApt;
  /* 0x001c */ long Padding_1065;
  /* 0x0020 */ void* _pvStubRegistration;
}; /* size: 0x0028 */

struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned int friendlyNameFromEdid : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned int friendlyNameForced : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned int edidIdsValid : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned int reserved : 29; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned int value;
  }; /* size: 0x0004 */
}; /* size: 0x0004 */

class PBasicEntry
{
  /* 0x0000 */ unsigned long _sig;
  /* 0x0004 */ long _cReferences;
  /* 0x0008 */ const unsigned long _dl;
}; /* size: 0x000c */

typedef struct _OUTLINETEXTMETRICW
{
  /* 0x0000 */ unsigned int otmSize;
  /* 0x0004 */ struct tagTEXTMETRICW otmTextMetrics;
  /* 0x0040 */ unsigned char otmFiller;
  /* 0x0041 */ struct tagPANOSE otmPanoseNumber;
  /* 0x004b */ char Padding_1066;
  /* 0x004c */ unsigned int otmfsSelection;
  /* 0x0050 */ unsigned int otmfsType;
  /* 0x0054 */ int otmsCharSlopeRise;
  /* 0x0058 */ int otmsCharSlopeRun;
  /* 0x005c */ int otmItalicAngle;
  /* 0x0060 */ unsigned int otmEMSquare;
  /* 0x0064 */ int otmAscent;
  /* 0x0068 */ int otmDescent;
  /* 0x006c */ unsigned int otmLineGap;
  /* 0x0070 */ unsigned int otmsCapEmHeight;
  /* 0x0074 */ unsigned int otmsXHeight;
  /* 0x0078 */ struct tagRECT otmrcFontBox;
  /* 0x0088 */ int otmMacAscent;
  /* 0x008c */ int otmMacDescent;
  /* 0x0090 */ unsigned int otmMacLineGap;
  /* 0x0094 */ unsigned int otmusMinimumPPEM;
  /* 0x0098 */ struct tagPOINT otmptSubscriptSize;
  /* 0x00a0 */ struct tagPOINT otmptSubscriptOffset;
  /* 0x00a8 */ struct tagPOINT otmptSuperscriptSize;
  /* 0x00b0 */ struct tagPOINT otmptSuperscriptOffset;
  /* 0x00b8 */ unsigned int otmsStrikeoutSize;
  /* 0x00bc */ int otmsStrikeoutPosition;
  /* 0x00c0 */ int otmsUnderscoreSize;
  /* 0x00c4 */ int otmsUnderscorePosition;
  /* 0x00c8 */ char* otmpFamilyName;
  /* 0x00d0 */ char* otmpFaceName;
  /* 0x00d8 */ char* otmpStyleName;
  /* 0x00e0 */ char* otmpFullName;
} OUTLINETEXTMETRICW, *POUTLINETEXTMETRICW; /* size: 0x00e8 */

class CStgHandle
{
}; /* size: 0x0010 */

class CObjrefMoniker
{
  /* 0x0000 */ long Padding_1067[14];
  /* 0x0038 */ wchar_t* m_lpszDisplayName;
}; /* size: 0x0040 */

typedef struct _SYSTEM_AUDIT_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} SYSTEM_AUDIT_CALLBACK_ACE, *PSYSTEM_AUDIT_CALLBACK_ACE; /* size: 0x000c */

typedef struct _SYSTEM_MEMORY_TOPOLOGY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfRuns;
  /* 0x0008 */ unsigned long NumberOfNodes;
  /* 0x000c */ unsigned long NumberOfChannels;
  /* 0x0010 */ struct _PHYSICAL_CHANNEL_RUN Run[1];
} SYSTEM_MEMORY_TOPOLOGY_INFORMATION, *PSYSTEM_MEMORY_TOPOLOGY_INFORMATION; /* size: 0x0030 */

struct HTOUCHINPUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __vc_attributes::helper_attributes::help_stringAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::helper_attributes::help_stringAttribute, *P_vc_attributes::helper_attributes::help_stringAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::helper_attributes::multi_valueAttribute
{
} _vc_attributes::helper_attributes::multi_valueAttribute, *P_vc_attributes::helper_attributes::multi_valueAttribute; /* size: 0x0001 */

class CContextList
{
  /* 0x0000 */ class CBasedContextPtr _pctxHead;
  /* 0x0008 */ long _cReferences;
}; /* size: 0x0010 */

typedef struct _RPC_SECURITY_QOS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
} RPC_SECURITY_QOS, *PRPC_SECURITY_QOS; /* size: 0x0010 */

typedef struct _SYSTEM_HOTPATCH_CODE_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long InfoSize;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned long DescriptorsCount;
      /* 0x0004 */ long Padding_1068;
      /* 0x0010 */ struct _HOTPATCH_HOOK_DESCRIPTOR CodeDescriptors[1];
    } /* size: 0x0030 */ CodeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
    } /* size: 0x0004 */ KernelInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x0014 */ unsigned char PatchingFinished;
      /* 0x0015 */ char __PADDING__[1];
    } /* size: 0x000e */ UserModeInfo;
    struct
    {
      /* 0x0008 */ unsigned short NameOffset;
      /* 0x000a */ unsigned short NameLength;
      /* 0x000c */ unsigned short TargetNameOffset;
      /* 0x000e */ unsigned short TargetNameLength;
      /* 0x0010 */ unsigned short ColdpatchImagePathOffset;
      /* 0x0012 */ unsigned short ColdpatchImagePathLength;
      /* 0x000c */ long Padding_1069;
      /* 0x0018 */ unsigned __int64 TargetProcess;
    } /* size: 0x0018 */ InjectionInfo;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned __int64 ParentDirectory;
        /* 0x0010 */ unsigned __int64 ObjectHandle1;
        /* 0x0018 */ unsigned __int64 ObjectHandle2;
      } /* size: 0x0018 */ AtomicSwap;
      /* 0x0020 */ long __PADDING__[6];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
} SYSTEM_HOTPATCH_CODE_INFORMATION, *PSYSTEM_HOTPATCH_CODE_INFORMATION; /* size: 0x0038 */

typedef struct _CMC_TAGGED_CONTENT_INFO
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1070;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB EncodedContentInfo;
} CMC_TAGGED_CONTENT_INFO, *PCMC_TAGGED_CONTENT_INFO; /* size: 0x0018 */

struct tagFUNCDESC
{
  /* 0x0000 */ long memid;
  /* 0x0004 */ long Padding_1071;
  /* 0x0008 */ long* lprgscode;
  /* 0x0010 */ struct tagELEMDESC* lprgelemdescParam;
  /* 0x0018 */ enum tagFUNCKIND funckind;
  /* 0x001c */ enum tagINVOKEKIND invkind;
  /* 0x0020 */ enum tagCALLCONV callconv;
  /* 0x0024 */ short cParams;
  /* 0x0026 */ short cParamsOpt;
  /* 0x0028 */ short oVft;
  /* 0x002a */ short cScodes;
  /* 0x002c */ long Padding_1072;
  /* 0x0030 */ struct tagELEMDESC elemdescFunc;
  /* 0x0050 */ unsigned short wFuncFlags;
  /* 0x0052 */ char __PADDING__[6];
}; /* size: 0x0058 */

typedef struct __vc_attributes::noncreatableAttribute
{
} _vc_attributes::noncreatableAttribute, *P_vc_attributes::noncreatableAttribute; /* size: 0x0001 */

typedef struct _SYSTEM_HANDLE_INFORMATION_EX
{
  /* 0x0000 */ unsigned __int64 NumberOfHandles;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO_EX Handles[1];
} SYSTEM_HANDLE_INFORMATION_EX, *PSYSTEM_HANDLE_INFORMATION_EX; /* size: 0x0038 */

typedef struct _RPC_PROTSEQ_VECTORW
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ long Padding_1073;
  /* 0x0008 */ unsigned short* Protseq[1];
} RPC_PROTSEQ_VECTORW, *PRPC_PROTSEQ_VECTORW; /* size: 0x0010 */

typedef struct __midl_frag75_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag75_t, *P_midl_frag75_t; /* size: 0x0038 */

typedef struct __vc_attributes::ms_unionAttribute
{
} _vc_attributes::ms_unionAttribute, *P_vc_attributes::ms_unionAttribute; /* size: 0x0001 */

struct IPSFactoryBuffer
{
}; /* size: 0x0008 */

typedef struct __midl_frag70_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag70_t, *P_midl_frag70_t; /* size: 0x0038 */

typedef struct _SOURCEFILE
{
  /* 0x0000 */ unsigned __int64 ModBase;
  /* 0x0008 */ char* FileName;
} SOURCEFILE, *PSOURCEFILE; /* size: 0x0010 */

typedef struct _userHMETAFILEPICT
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1074;
  /* 0x0008 */ union _userHMETAFILEPICT::__MIDL_IWinTypes_0005 u;
} userHMETAFILEPICT, *PuserHMETAFILEPICT; /* size: 0x0010 */

typedef struct _PUBKEY
{
  /* 0x0000 */ unsigned long magic;
  /* 0x0004 */ unsigned long bitlen;
} PUBKEY, *PPUBKEY; /* size: 0x0008 */

class PTSetMember
{
  /* 0x0000 */ long Padding_1075[4];
  /* 0x0010 */ unsigned long _dlTree;
  /* 0x0014 */ unsigned long _dlName;
  /* 0x0018 */ unsigned long _ulLevel;
  /* 0x001c */ class CDfName _dfnName;
  /* 0x005e */ const unsigned short _uType;
}; /* size: 0x0060 */

typedef struct _CMSG_CONTENT_ENCRYPT_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1076;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long cRecipients;
  /* 0x0034 */ long Padding_1077;
  /* 0x0038 */ struct _CMSG_RECIPIENT_ENCODE_INFO* rgCmsRecipients;
  /* 0x0040 */ void* pfnAlloc /* function */;
  /* 0x0048 */ void* pfnFree /* function */;
  /* 0x0050 */ unsigned long dwEncryptFlags;
  /* 0x0054 */ long Padding_1078;
  union
  {
    /* 0x0058 */ unsigned __int64 hContentEncryptKey;
    /* 0x0058 */ void* hCNGContentEncryptKey;
  }; /* size: 0x0008 */
  /* 0x0060 */ unsigned long dwFlags;
  /* 0x0064 */ int fCNG;
  /* 0x0068 */ unsigned char* pbCNGContentEncryptKeyObject;
  /* 0x0070 */ unsigned char* pbContentEncryptKey;
  /* 0x0078 */ unsigned long cbContentEncryptKey;
  /* 0x007c */ long __PADDING__[1];
} CMSG_CONTENT_ENCRYPT_INFO, *PCMSG_CONTENT_ENCRYPT_INFO; /* size: 0x0080 */

typedef struct _RTL_CONDITION_VARIABLE
{
  union
  {
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned __int64 WakeCount : 3; /* bit position: 0 */
      /* 0x0000 */ unsigned __int64 Waking : 1; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0000 */ unsigned __int64 Value;
    /* 0x0000 */ void* Ptr;
  }; /* size: 0x0008 */
} RTL_CONDITION_VARIABLE, *PRTL_CONDITION_VARIABLE; /* size: 0x0008 */

class CMapStringToPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

typedef struct _WPP_TRACE_CONTROL_BLOCK
{
  /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK* Next;
  /* 0x0008 */ unsigned __int64 UmRegistrationHandle;
  union
  {
    /* 0x0010 */ unsigned __int64 Logger;
    /* 0x0010 */ struct _WPP_WIN2K_CONTROL_BLOCK* Win2kCb;
    /* 0x0010 */ void* Ptr;
    /* 0x0010 */ struct _WPP_TRACE_CONTROL_BLOCK* Cb;
  }; /* size: 0x0008 */
  /* 0x0018 */ unsigned char FlagsLen;
  /* 0x0019 */ unsigned char Level;
  /* 0x001a */ unsigned short Options;
  /* 0x001c */ unsigned long Flags[1];
  /* 0x0020 */ const struct _GUID* ControlGuid;
} WPP_TRACE_CONTROL_BLOCK, *PWPP_TRACE_CONTROL_BLOCK; /* size: 0x0028 */

typedef struct _CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1079;
  /* 0x0008 */ struct _CRYPT_BIT_BLOB RecipientPublicKey;
  /* 0x0020 */ struct _CERT_ID RecipientId;
  /* 0x0048 */ struct _FILETIME Date;
  /* 0x0050 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO, *PCMSG_RECIPIENT_ENCRYPTED_KEY_ENCODE_INFO; /* size: 0x0058 */

typedef struct _WPP_WIN2K_CONTROL_BLOCK
{
  /* 0x0000 */ unsigned __int64 Logger;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Level;
  /* 0x0010 */ const struct _GUID* ControlGuid;
} WPP_WIN2K_CONTROL_BLOCK, *PWPP_WIN2K_CONTROL_BLOCK; /* size: 0x0018 */

typedef struct _FILE_PIPE_REMOTE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER CollectDataTime;
  /* 0x0008 */ unsigned long MaximumCollectionCount;
  /* 0x000c */ long __PADDING__[1];
} FILE_PIPE_REMOTE_INFORMATION, *PFILE_PIPE_REMOTE_INFORMATION; /* size: 0x0010 */

class SafeIStream
{
  /* 0x0000 */ struct IStream* _p;
}; /* size: 0x0008 */

typedef struct _MIDL_STUBLESS_PROXY_INFO
{
  /* 0x0000 */ const struct _MIDL_STUB_DESC* pStubDesc;
  /* 0x0008 */ const unsigned char* ProcFormatString;
  /* 0x0010 */ const unsigned short* FormatStringOffset;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER* pTransferSyntax;
  /* 0x0020 */ unsigned __int64 nCount;
  /* 0x0028 */ struct _MIDL_SYNTAX_INFO* pSyntaxInfo;
} MIDL_STUBLESS_PROXY_INFO, *PMIDL_STUBLESS_PROXY_INFO; /* size: 0x0030 */

struct tagGESTURECONFIG
{
  /* 0x0000 */ unsigned long dwID;
  /* 0x0004 */ unsigned long dwWant;
  /* 0x0008 */ unsigned long dwBlock;
}; /* size: 0x000c */

struct SCARD_READERSTATEW
{
  /* 0x0000 */ const wchar_t* szReader;
  /* 0x0008 */ void* pvUserData;
  /* 0x0010 */ unsigned long dwCurrentState;
  /* 0x0014 */ unsigned long dwEventState;
  /* 0x0018 */ unsigned long cbAtr;
  /* 0x001c */ unsigned char rgbAtr[36];
}; /* size: 0x0040 */

typedef struct _ASSEMBLY_FILE_DETAILED_INFORMATION
{
  /* 0x0000 */ unsigned long ulFlags;
  /* 0x0004 */ unsigned long ulFilenameLength;
  /* 0x0008 */ unsigned long ulPathLength;
  /* 0x000c */ long Padding_1080;
  /* 0x0010 */ const wchar_t* lpFileName;
  /* 0x0018 */ const wchar_t* lpFilePath;
} ASSEMBLY_FILE_DETAILED_INFORMATION, *PASSEMBLY_FILE_DETAILED_INFORMATION; /* size: 0x0020 */

class COleConditionVariable
{
  /* 0x0000 */ struct _RTL_CONDITION_VARIABLE _cv;
}; /* size: 0x0008 */

typedef struct _CERT_DH_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB g;
} CERT_DH_PARAMETERS, *PCERT_DH_PARAMETERS; /* size: 0x0020 */

struct IInternetSecurityManagerEx
{
}; /* size: 0x0008 */

struct SC_HANDLE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE
{
  /* 0x0000 */ unsigned long ResponseLevel;
  /* 0x0004 */ unsigned long NumberEntries;
  union
  {
    /* 0x0008 */ struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV1_ENTRY* Lev1Depends /* zero-length array */;
    /* 0x0008 */ struct _STORAGE_QUERY_DEPENDENT_VOLUME_LEV2_ENTRY* Lev2Depends /* zero-length array */;
    /* 0x0008 */ long __PADDING__[17];
  }; /* size: 0x0044 */
} STORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE, *PSTORAGE_QUERY_DEPENDENT_VOLUME_RESPONSE; /* size: 0x004c */

class CNameHashTable
{
}; /* size: 0x0028 */

struct IRpcHelper
{
}; /* size: 0x0008 */

typedef struct __midl_frag317_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag317_t, *P_midl_frag317_t; /* size: 0x0038 */

struct tagDRVCONFIGINFO
{
  /* 0x0000 */ unsigned long dwDCISize;
  /* 0x0004 */ const wchar_t* lpszDCISectionName;
  /* 0x000c */ const wchar_t* lpszDCIAliasName;
}; /* size: 0x0014 */

typedef struct __vc_attributes::helper_attributes::v1_nameAttribute
{
  /* 0x0000 */ const char* name;
} _vc_attributes::helper_attributes::v1_nameAttribute, *P_vc_attributes::helper_attributes::v1_nameAttribute; /* size: 0x0008 */

struct IOleInPlaceUIWindow
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_OID
{
  /* 0x0000 */ unsigned long cbOID;
  /* 0x0004 */ long Padding_1081;
  /* 0x0008 */ unsigned char* pbOID;
} BCRYPT_OID, *PBCRYPT_OID; /* size: 0x0010 */

struct tagJOYCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ char szPname[32];
  /* 0x0024 */ unsigned int wXmin;
  /* 0x0028 */ unsigned int wXmax;
  /* 0x002c */ unsigned int wYmin;
  /* 0x0030 */ unsigned int wYmax;
  /* 0x0034 */ unsigned int wZmin;
  /* 0x0038 */ unsigned int wZmax;
  /* 0x003c */ unsigned int wNumButtons;
  /* 0x0040 */ unsigned int wPeriodMin;
  /* 0x0044 */ unsigned int wPeriodMax;
  /* 0x0048 */ unsigned int wRmin;
  /* 0x004c */ unsigned int wRmax;
  /* 0x0050 */ unsigned int wUmin;
  /* 0x0054 */ unsigned int wUmax;
  /* 0x0058 */ unsigned int wVmin;
  /* 0x005c */ unsigned int wVmax;
  /* 0x0060 */ unsigned int wCaps;
  /* 0x0064 */ unsigned int wMaxAxes;
  /* 0x0068 */ unsigned int wNumAxes;
  /* 0x006c */ unsigned int wMaxButtons;
  /* 0x0070 */ char szRegKey[32];
  /* 0x0090 */ char szOEMVxD[260];
}; /* size: 0x0194 */

typedef struct _CRYPT_ENCRYPT_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER ContentEncryptionAlgorithm;
  /* 0x0028 */ void* pvEncryptionAuxInfo;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwInnerContentType;
} CRYPT_ENCRYPT_MESSAGE_PARA, *PCRYPT_ENCRYPT_MESSAGE_PARA; /* size: 0x0038 */

class CLimitedWritableStorage::OpenStream::__l3::<lambda_DBBA6E15974D88A0>;

typedef struct _CERT_REVOCATION_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1082;
  /* 0x0008 */ const struct _CERT_CONTEXT* pIssuerCert;
  /* 0x0010 */ unsigned long cCertStore;
  /* 0x0014 */ long Padding_1083;
  /* 0x0018 */ void** rgCertStore;
  /* 0x0020 */ void* hCrlStore;
  /* 0x0028 */ struct _FILETIME* pftTimeToUse;
} CERT_REVOCATION_PARA, *PCERT_REVOCATION_PARA; /* size: 0x0030 */

typedef struct _CRYPT_DES_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[8];
  /* 0x0008 */ unsigned char IV[8];
  /* 0x0010 */ unsigned char Feedback[8];
} CRYPT_DES_KEY_STATE, *PCRYPT_DES_KEY_STATE; /* size: 0x0018 */

typedef struct __midl_frag21_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag21_t, *P_midl_frag21_t; /* size: 0x0028 */

typedef struct _IMAGEHLP_DUPLICATE_SYMBOL64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long NumberOfDups;
  /* 0x0008 */ struct _IMAGEHLP_SYMBOL64* Symbol;
  /* 0x0010 */ unsigned long SelectedSymbol;
  /* 0x0014 */ long __PADDING__[1];
} IMAGEHLP_DUPLICATE_SYMBOL64, *PIMAGEHLP_DUPLICATE_SYMBOL64; /* size: 0x0018 */

typedef struct _DRAWPATRECT
{
  /* 0x0000 */ struct tagPOINT ptPosition;
  /* 0x0008 */ struct tagPOINT ptSize;
  /* 0x0010 */ unsigned short wStyle;
  /* 0x0012 */ unsigned short wPattern;
} DRAWPATRECT, *PDRAWPATRECT; /* size: 0x0014 */

struct tagSCROLLBARINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct tagRECT rcScrollBar;
  /* 0x0014 */ int dxyLineButton;
  /* 0x0018 */ int xyThumbTop;
  /* 0x001c */ int xyThumbBottom;
  /* 0x0020 */ int reserved;
  /* 0x0024 */ unsigned long rgstate[6];
}; /* size: 0x003c */

typedef struct _DRIVER_INFO_2A
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_1084;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ char* pEnvironment;
  /* 0x0018 */ char* pDriverPath;
  /* 0x0020 */ char* pDataFile;
  /* 0x0028 */ char* pConfigFile;
} DRIVER_INFO_2A, *PDRIVER_INFO_2A; /* size: 0x0030 */

struct tagALTTABINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int cItems;
  /* 0x0008 */ int cColumns;
  /* 0x000c */ int cRows;
  /* 0x0010 */ int iColFocus;
  /* 0x0014 */ int iRowFocus;
  /* 0x0018 */ int cxItem;
  /* 0x001c */ int cyItem;
  /* 0x0020 */ struct tagPOINT ptStart;
}; /* size: 0x0028 */

typedef struct _IMAGE_DEBUG_DIRECTORY
{
  /* 0x0000 */ unsigned long Characteristics;
  /* 0x0004 */ unsigned long TimeDateStamp;
  /* 0x0008 */ unsigned short MajorVersion;
  /* 0x000a */ unsigned short MinorVersion;
  /* 0x000c */ unsigned long Type;
  /* 0x0010 */ unsigned long SizeOfData;
  /* 0x0014 */ unsigned long AddressOfRawData;
  /* 0x0018 */ unsigned long PointerToRawData;
} IMAGE_DEBUG_DIRECTORY, *PIMAGE_DEBUG_DIRECTORY; /* size: 0x001c */

struct _TPP_THREAD_DATA_CALLBACK;

struct PACKAGE_INFO
{
  /* 0x0000 */ unsigned int reserved;
  /* 0x0004 */ unsigned int flags;
  /* 0x0008 */ wchar_t* path;
  /* 0x0010 */ wchar_t* packageFullName;
  /* 0x0018 */ wchar_t* packageFamilyName;
  /* 0x0020 */ struct PACKAGE_ID packageId;
}; /* size: 0x0050 */

typedef struct __midl_frag1059_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1059_t, *P_midl_frag1059_t; /* size: 0x0038 */

struct tagMOUSEHOOKSTRUCTEX
{
  /* 0x0000 */ long Padding_1085[8];
  /* 0x0020 */ unsigned long mouseData;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

typedef struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short NameLength;
  /* 0x0004 */ unsigned short Type;
  /* 0x0006 */ unsigned short DataLength;
  /* 0x0008 */ unsigned long Attributes;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ wchar_t Name[1];
  /* 0x0012 */ char __PADDING__[2];
} SL_KMEM_CACHE_VALUE_DESCRIPTOR, *PSL_KMEM_CACHE_VALUE_DESCRIPTOR; /* size: 0x0014 */

typedef struct _SL_KMEM_CACHE
{
  /* 0x0000 */ unsigned long TotalSize;
  /* 0x0004 */ unsigned long SizeOfData;
  /* 0x0008 */ unsigned long SignatureSize;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long Version;
  /* 0x0014 */ struct _SL_KMEM_CACHE_VALUE_DESCRIPTOR Descriptors[1];
} SL_KMEM_CACHE, *PSL_KMEM_CACHE; /* size: 0x0028 */

typedef struct _TOKEN_OWNER
{
  /* 0x0000 */ void* Owner;
} TOKEN_OWNER, *PTOKEN_OWNER; /* size: 0x0008 */

struct CPlex
{
  /* 0x0000 */ struct CPlex* pNext;
  /* 0x0008 */ unsigned int nMax;
  /* 0x000c */ unsigned int nCur;
  /* 0x0010 */ unsigned long dwReserved[1];
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct tagEMRSETARCDIRECTION
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long iArcDirection;
}; /* size: 0x000c */

class PTimeEntry
{
}; /* size: 0x000c */

typedef struct _DEVICE_LB_PROVISIONING_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned char ThinProvisioningEnabled : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned char ThinProvisioningReadZeros : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned char AnchorSupported : 3; /* bit position: 2 */
    /* 0x0008 */ unsigned char UnmapGranularityAlignmentValid : 1; /* bit position: 5 */
    /* 0x0008 */ unsigned char Reserved0 : 2; /* bit position: 6 */
  }; /* bitfield */
  /* 0x0009 */ unsigned char Reserved1[7];
  /* 0x0010 */ unsigned __int64 OptimalUnmapGranularity;
  /* 0x0018 */ unsigned __int64 UnmapGranularityAlignment;
} DEVICE_LB_PROVISIONING_DESCRIPTOR, *PDEVICE_LB_PROVISIONING_DESCRIPTOR; /* size: 0x0020 */

typedef struct _API_SET_VALUE_ARRAY
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct _API_SET_VALUE_ENTRY Array[1];
} API_SET_VALUE_ARRAY, *PAPI_SET_VALUE_ARRAY; /* size: 0x0014 */

typedef struct _FILE_PIPE_EVENT_BUFFER
{
  /* 0x0000 */ unsigned long NamedPipeState;
  /* 0x0004 */ unsigned long EntryType;
  /* 0x0008 */ unsigned long ByteCount;
  /* 0x000c */ unsigned long KeyValue;
  /* 0x0010 */ unsigned long NumberRequests;
} FILE_PIPE_EVENT_BUFFER, *PFILE_PIPE_EVENT_BUFFER; /* size: 0x0014 */

typedef struct _SYSTEM_SECUREBOOT_POLICY_INFORMATION
{
  /* 0x0000 */ struct _GUID PolicyPublisher;
  /* 0x0010 */ unsigned long PolicyVersion;
  /* 0x0014 */ unsigned long PolicyOptions;
} SYSTEM_SECUREBOOT_POLICY_INFORMATION, *PSYSTEM_SECUREBOOT_POLICY_INFORMATION; /* size: 0x0018 */

typedef struct _MINIDUMP_HANDLE_DATA_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int NumberOfDescriptors;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_DATA_STREAM, *PMINIDUMP_HANDLE_DATA_STREAM; /* size: 0x0010 */

struct IParseDisplayName
{
}; /* size: 0x0008 */

struct IActivationStageInfo
{
}; /* size: 0x0008 */

class CMultiGUIDHashTable
{
}; /* size: 0x0028 */

typedef struct _ACCESS_DENIED_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_DENIED_ACE, *PACCESS_DENIED_ACE; /* size: 0x000c */

typedef struct __midl_frag891_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag891_t, *P_midl_frag891_t; /* size: 0x0028 */

typedef struct _POWER_USER_PRESENCE
{
  /* 0x0000 */ enum POWER_USER_PRESENCE_TYPE UserPresence;
} POWER_USER_PRESENCE, *PPOWER_USER_PRESENCE; /* size: 0x0004 */

typedef struct _OCSP_BASIC_SIGNED_RESPONSE_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB ToBeSigned;
  /* 0x0010 */ struct _OCSP_SIGNATURE_INFO SignatureInfo;
} OCSP_BASIC_SIGNED_RESPONSE_INFO, *POCSP_BASIC_SIGNED_RESPONSE_INFO; /* size: 0x0050 */

typedef struct _CERT_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1086;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Subject;
  /* 0x0018 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0048 */ unsigned long cAttribute;
  /* 0x004c */ long Padding_1087;
  /* 0x0050 */ struct _CRYPT_ATTRIBUTE* rgAttribute;
} CERT_REQUEST_INFO, *PCERT_REQUEST_INFO; /* size: 0x0058 */

typedef struct _PRIV_RESOLVER_INFO
{
  /* 0x0000 */ unsigned __int64 OxidServer;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pServerORBindings;
  /* 0x0010 */ struct tagOXID_INFO OxidInfo;
  /* 0x0040 */ unsigned __int64 LocalMidOfRemote;
  /* 0x0048 */ unsigned long DllServerModel;
  /* 0x004c */ long Padding_1088;
  /* 0x0050 */ wchar_t* pwszDllServer;
  /* 0x0058 */ int FoundInROT;
  /* 0x005c */ long __PADDING__[1];
} PRIV_RESOLVER_INFO, *PPRIV_RESOLVER_INFO; /* size: 0x0060 */

typedef struct _SYSTEM_NUMA_PROXIMITY_MAP
{
  /* 0x0000 */ unsigned long NodeProximityId;
  /* 0x0004 */ unsigned short NodeNumber;
  /* 0x0006 */ char __PADDING__[2];
} SYSTEM_NUMA_PROXIMITY_MAP, *PSYSTEM_NUMA_PROXIMITY_MAP; /* size: 0x0008 */

class CFatSect
{
  /* 0x0000 */ unsigned long* _asectEntry /* zero-length array */;
}; /* size: 0x0004 */

typedef struct _CMSG_CTRL_KEY_TRANS_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1089;
  union
  {
    /* 0x0008 */ unsigned __int64 hCryptProv;
    /* 0x0008 */ unsigned __int64 hNCryptKey;
  }; /* size: 0x0008 */
  /* 0x0010 */ unsigned long dwKeySpec;
  /* 0x0014 */ long Padding_1090;
  /* 0x0018 */ struct _CMSG_KEY_TRANS_RECIPIENT_INFO* pKeyTrans;
  /* 0x0020 */ unsigned long dwRecipientIndex;
  /* 0x0024 */ long __PADDING__[1];
} CMSG_CTRL_KEY_TRANS_DECRYPT_PARA, *PCMSG_CTRL_KEY_TRANS_DECRYPT_PARA; /* size: 0x0028 */

struct IDataObject
{
}; /* size: 0x0008 */

class CPagedVector
{
  /* 0x0000 */ class CBasedMSFPageTablePtr _pmpt;
  /* 0x0008 */ class CBasedMStreamPtr _pmsParent;
  /* 0x0010 */ class CBasedMSFPagePtrPtr _amp;
  /* 0x0018 */ class CBasedVectBitsPtr _avb;
  /* 0x0020 */ const unsigned long _sid;
  /* 0x0024 */ unsigned long _ulSize;
  /* 0x0028 */ unsigned long _ulAllocSize;
}; /* size: 0x0030 */

typedef struct _RTL_HEAP_TAG_INFO
{
  /* 0x0000 */ unsigned long NumberOfAllocations;
  /* 0x0004 */ unsigned long NumberOfFrees;
  /* 0x0008 */ unsigned __int64 BytesAllocated;
} RTL_HEAP_TAG_INFO, *PRTL_HEAP_TAG_INFO; /* size: 0x0010 */

typedef struct _REPARSE_POINT_INFORMATION
{
  /* 0x0000 */ unsigned short ReparseDataLength;
  /* 0x0002 */ unsigned short UnparsedNameLength;
} REPARSE_POINT_INFORMATION, *PREPARSE_POINT_INFORMATION; /* size: 0x0004 */

typedef struct _SECTIONBASICINFO
{
  /* 0x0000 */ void* BaseAddress;
  /* 0x0008 */ unsigned long AllocationAttributes;
  /* 0x000c */ long Padding_1091;
  /* 0x0010 */ union _LARGE_INTEGER MaximumSize;
} SECTIONBASICINFO, *PSECTIONBASICINFO; /* size: 0x0018 */

class CBindCtx::CObjList
{
  /* 0x0000 */ struct IUnknown* m_punk;
  /* 0x0008 */ class CBindCtx::CObjList* m_pNext;
}; /* size: 0x0010 */

typedef struct _THREAD_PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ struct _PROCESSOR_NUMBER ProcessorNumber;
  /* 0x0008 */ unsigned long ContextSwitches;
  /* 0x000c */ unsigned long HwCountersCount;
  /* 0x0010 */ volatile unsigned __int64 UpdateCount;
  /* 0x0018 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0020 */ unsigned __int64 HardwareCounters;
  /* 0x0028 */ struct _COUNTER_READING CycleTime;
  /* 0x0040 */ struct _COUNTER_READING HwCounters[16];
} THREAD_PERFORMANCE_DATA, *PTHREAD_PERFORMANCE_DATA; /* size: 0x01c0 */

typedef struct _PAGE_PRIORITY_INFORMATION
{
  /* 0x0000 */ unsigned long PagePriority;
} PAGE_PRIORITY_INFORMATION, *PPAGE_PRIORITY_INFORMATION; /* size: 0x0004 */

struct tagCInterfaceStubVtbl
{
  /* 0x0000 */ struct tagCInterfaceStubHeader header;
  /* 0x0020 */ struct IRpcStubBufferVtbl Vtbl;
}; /* size: 0x0070 */

typedef struct _FILESYSTEM_STATISTICS
{
  /* 0x0000 */ unsigned short FileSystemType;
  /* 0x0002 */ unsigned short Version;
  /* 0x0004 */ unsigned long SizeOfCompleteStructure;
  /* 0x0008 */ unsigned long UserFileReads;
  /* 0x000c */ unsigned long UserFileReadBytes;
  /* 0x0010 */ unsigned long UserDiskReads;
  /* 0x0014 */ unsigned long UserFileWrites;
  /* 0x0018 */ unsigned long UserFileWriteBytes;
  /* 0x001c */ unsigned long UserDiskWrites;
  /* 0x0020 */ unsigned long MetaDataReads;
  /* 0x0024 */ unsigned long MetaDataReadBytes;
  /* 0x0028 */ unsigned long MetaDataDiskReads;
  /* 0x002c */ unsigned long MetaDataWrites;
  /* 0x0030 */ unsigned long MetaDataWriteBytes;
  /* 0x0034 */ unsigned long MetaDataDiskWrites;
} FILESYSTEM_STATISTICS, *PFILESYSTEM_STATISTICS; /* size: 0x0038 */

struct _TP_IO;

struct tagEMRARC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBox;
  /* 0x0018 */ struct _POINTL ptlStart;
  /* 0x0020 */ struct _POINTL ptlEnd;
}; /* size: 0x0028 */

typedef struct _CERT_REGISTRY_STORE_CLIENT_GPT_PARA
{
  /* 0x0000 */ struct HKEY__* hKeyBase;
  /* 0x0008 */ wchar_t* pwszRegPath;
} CERT_REGISTRY_STORE_CLIENT_GPT_PARA, *PCERT_REGISTRY_STORE_CLIENT_GPT_PARA; /* size: 0x0010 */

typedef struct _iinspectable_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[121];
  /* 0x007b */ char __PADDING__[1];
} iinspectable_MIDL_PROC_FORMAT_STRING, *Piinspectable_MIDL_PROC_FORMAT_STRING; /* size: 0x007c */

typedef struct _CERT_KEYGEN_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1092;
  /* 0x0008 */ struct _CERT_PUBLIC_KEY_INFO SubjectPublicKeyInfo;
  /* 0x0038 */ wchar_t* pwszChallengeString;
} CERT_KEYGEN_REQUEST_INFO, *PCERT_KEYGEN_REQUEST_INFO; /* size: 0x0040 */

class OleThunkWOW
{
}; /* size: 0x0008 */

typedef struct _IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long BeginAddress;
  /* 0x0004 */ unsigned long EndAddress;
  /* 0x0008 */ unsigned long ExceptionHandler;
  /* 0x000c */ unsigned long HandlerData;
  /* 0x0010 */ unsigned long PrologEndAddress;
} IMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY, *PIMAGE_ALPHA_RUNTIME_FUNCTION_ENTRY; /* size: 0x0014 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoKeyHandle>::COperatorAmpersandReturnType;

typedef struct __midl_frag1656_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1656_t, *P_midl_frag1656_t; /* size: 0x000c */

typedef struct _CRYPT_CONTENT_INFO
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Content;
} CRYPT_CONTENT_INFO, *PCRYPT_CONTENT_INFO; /* size: 0x0018 */

struct IRpcChannelBuffer2
{
}; /* size: 0x0008 */

class CROIDTable
{
  union
  {
    /* 0x0000 */ unsigned long _cOidsToAdd;
    /* 0x0000 */ unsigned long _cOidsToRemove;
    /* 0x0000 */ struct SOIDRegistration _ClientOIDRegList;
    /* 0x0000 */ int _fWorker;
    /* 0x0000 */ unsigned long _dwSleepPeriod;
    /* 0x0000 */ class CUUIDHashTable _ClientRegisteredOIDs;
  }; /* size: 0x0050 */
}; /* size: 0x0001 */

typedef struct _EISA_IRQ_DESCRIPTOR
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char Interrupt : 4; /* bit position: 0 */
    /* 0x0000 */ unsigned char Reserved : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char LevelTriggered : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char Shared : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char MoreEntries : 1; /* bit position: 7 */
  }; /* bitfield */
} EISA_IRQ_DESCRIPTOR, *PEISA_IRQ_DESCRIPTOR; /* size: 0x0001 */

typedef struct _EISA_IRQ_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_IRQ_DESCRIPTOR ConfigurationByte;
  /* 0x0001 */ unsigned char Reserved;
} EISA_IRQ_CONFIGURATION, *PEISA_IRQ_CONFIGURATION; /* size: 0x0002 */

typedef struct _EISA_MEMORY_CONFIGURATION
{
  /* 0x0000 */ struct _EISA_MEMORY_TYPE ConfigurationByte;
  /* 0x0001 */ unsigned char DataSize;
  /* 0x0002 */ unsigned short AddressLowWord;
  /* 0x0004 */ unsigned char AddressHighByte;
  /* 0x0005 */ unsigned short MemorySize;
} EISA_MEMORY_CONFIGURATION, *PEISA_MEMORY_CONFIGURATION; /* size: 0x0007 */

typedef union _RTL_ELEVATION_FLAGS
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long ElevationEnabled : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long VirtualizationEnabled : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long InstallerDetectEnabled : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long ReservedBits : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RTL_ELEVATION_FLAGS, *PRTL_ELEVATION_FLAGS; /* size: 0x0004 */

typedef struct _RESOURCEMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID ResourceManagerId;
  /* 0x0010 */ unsigned long DescriptionLength;
  /* 0x0014 */ wchar_t Description[1];
  /* 0x0016 */ char __PADDING__[2];
} RESOURCEMANAGER_BASIC_INFORMATION, *PRESOURCEMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

typedef struct _REQUEST_OPLOCK_OUTPUT_BUFFER
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureLength;
  /* 0x0004 */ unsigned long OriginalOplockLevel;
  /* 0x0008 */ unsigned long NewOplockLevel;
  /* 0x000c */ unsigned long Flags;
  /* 0x0010 */ unsigned long AccessMode;
  /* 0x0014 */ unsigned short ShareMode;
  /* 0x0016 */ char __PADDING__[2];
} REQUEST_OPLOCK_OUTPUT_BUFFER, *PREQUEST_OPLOCK_OUTPUT_BUFFER; /* size: 0x0018 */

struct tagENUMLOGFONTEXA
{
  /* 0x0000 */ struct tagLOGFONTA elfLogFont;
  /* 0x003c */ unsigned char elfFullName[64];
  /* 0x007c */ unsigned char elfStyle[32];
  /* 0x009c */ unsigned char elfScript[32];
}; /* size: 0x00bc */

struct tagDESIGNVECTOR
{
  /* 0x0000 */ unsigned long dvReserved;
  /* 0x0004 */ unsigned long dvNumAxes;
  /* 0x0008 */ long dvValues[16];
}; /* size: 0x0048 */

struct tagENUMLOGFONTEXDVA
{
  /* 0x0000 */ struct tagENUMLOGFONTEXA elfEnumLogfontEx;
  /* 0x00bc */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x0104 */

typedef struct _RegOutput
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long RegKeys[1];
} RegOutput, *PRegOutput; /* size: 0x0008 */

struct tagGCP_RESULTSW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1093;
  /* 0x0008 */ wchar_t* lpOutString;
  /* 0x0010 */ unsigned int* lpOrder;
  /* 0x0018 */ int* lpDx;
  /* 0x0020 */ int* lpCaretPos;
  /* 0x0028 */ char* lpClass;
  /* 0x0030 */ wchar_t* lpGlyphs;
  /* 0x0038 */ unsigned int nGlyphs;
  /* 0x003c */ int nMaxFit;
}; /* size: 0x0040 */

struct IRCEntry
{
  /* 0x0000 */ struct IRCEntry* pNext;
  /* 0x0008 */ class CRefCache* pRefCache;
  /* 0x0010 */ unsigned long cStrongUsage;
  /* 0x0014 */ unsigned long cWeakUsage;
  /* 0x0018 */ unsigned long cStrongRefs;
  /* 0x001c */ unsigned long cPrivateRefs;
  /* 0x0020 */ unsigned long cWeakRefs;
  /* 0x0024 */ struct _GUID ipid;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct _MIDL_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char* Format /* zero-length array */;
} MIDL_FORMAT_STRING, *PMIDL_FORMAT_STRING; /* size: 0x0002 */

typedef struct __midl_frag1444_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1444_t, *P_midl_frag1444_t; /* size: 0x000c */

struct HICON__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagHARDWAREHOOKSTRUCT
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int message;
  /* 0x000c */ long Padding_1094;
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
}; /* size: 0x0020 */

struct Windows::Rtl::IRtlWORAStream
{
}; /* size: 0x0008 */

typedef struct _NT_TIB32
{
  /* 0x0000 */ unsigned long ExceptionList;
  /* 0x0004 */ unsigned long StackBase;
  /* 0x0008 */ unsigned long StackLimit;
  /* 0x000c */ unsigned long SubSystemTib;
  union
  {
    /* 0x0010 */ unsigned long FiberData;
    /* 0x0010 */ unsigned long Version;
  }; /* size: 0x0004 */
  /* 0x0014 */ unsigned long ArbitraryUserPointer;
  /* 0x0018 */ unsigned long Self;
} NT_TIB32, *PNT_TIB32; /* size: 0x001c */

typedef struct _PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ enum _PNP_QUERY_RELATION Operation;
  /* 0x0014 */ unsigned long BufferLength;
  /* 0x0018 */ wchar_t* Buffer;
} PLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA, *PPLUGPLAY_CONTROL_DEVICE_RELATIONS_DATA; /* size: 0x0020 */

typedef struct _SYSTEM_SECUREBOOT_INFORMATION
{
  /* 0x0000 */ unsigned char SecureBootEnabled;
  /* 0x0001 */ unsigned char SecureBootCapable;
} SYSTEM_SECUREBOOT_INFORMATION, *PSYSTEM_SECUREBOOT_INFORMATION; /* size: 0x0002 */

typedef struct _HEAP_SUMMARY
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_1095;
  /* 0x0008 */ unsigned __int64 cbAllocated;
  /* 0x0010 */ unsigned __int64 cbCommitted;
  /* 0x0018 */ unsigned __int64 cbReserved;
  /* 0x0020 */ unsigned __int64 cbMaxReserve;
} HEAP_SUMMARY, *PHEAP_SUMMARY; /* size: 0x0028 */

typedef struct _SYSTEM_CRASH_DUMP_STATE_INFORMATION
{
  /* 0x0000 */ enum _SYSTEM_CRASH_DUMP_CONFIGURATION_CLASS CrashDumpConfigurationClass;
} SYSTEM_CRASH_DUMP_STATE_INFORMATION, *PSYSTEM_CRASH_DUMP_STATE_INFORMATION; /* size: 0x0004 */

class CClassCache::CDPEHashTable
{
}; /* size: 0x0028 */

struct IComServices
{
}; /* size: 0x0008 */

class BUCL::CIsSignedType<unsigned __int64>
{
}; /* size: 0x0001 */

typedef struct __midl_frag796_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag796_t, *P_midl_frag796_t; /* size: 0x0040 */

class LargeIntRegMultiply<int,unsigned __int64>
{
}; /* size: 0x0001 */

typedef struct _REPAIR_COPIES_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ union _LARGE_INTEGER FileOffset;
  /* 0x0010 */ unsigned long Length;
  /* 0x0014 */ unsigned long SourceCopy;
  /* 0x0018 */ unsigned long NumberOfRepairCopies;
  /* 0x001c */ unsigned long RepairCopies[1];
} REPAIR_COPIES_INPUT, *PREPAIR_COPIES_INPUT; /* size: 0x0020 */

typedef struct _RPC_IF_ID
{
  /* 0x0000 */ struct _GUID Uuid;
  /* 0x0010 */ unsigned short VersMajor;
  /* 0x0012 */ unsigned short VersMinor;
} RPC_IF_ID, *PRPC_IF_ID; /* size: 0x0014 */

typedef struct _SHFILEOPSTRUCTW
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ unsigned int wFunc;
  /* 0x000c */ long Padding_1096;
  /* 0x0010 */ const wchar_t* pFrom;
  /* 0x0018 */ const wchar_t* pTo;
  /* 0x0020 */ unsigned short fFlags;
  /* 0x0022 */ char Padding_1097[2];
  /* 0x0024 */ int fAnyOperationsAborted;
  /* 0x0028 */ void* hNameMappings;
  /* 0x0030 */ const wchar_t* lpszProgressTitle;
} SHFILEOPSTRUCTW, *PSHFILEOPSTRUCTW; /* size: 0x0038 */

typedef struct _PO_WAKE_SOURCE_FIXED
{
  /* 0x0000 */ struct _PO_WAKE_SOURCE_HEADER Header;
  /* 0x0008 */ enum PO_FIXED_WAKE_SOURCE_TYPE FixedWakeSourceType;
} PO_WAKE_SOURCE_FIXED, *PPO_WAKE_SOURCE_FIXED; /* size: 0x000c */

typedef struct _SYSTEM_KERNEL_DEBUGGER_INFORMATION
{
  /* 0x0000 */ unsigned char KernelDebuggerEnabled;
  /* 0x0001 */ unsigned char KernelDebuggerNotPresent;
} SYSTEM_KERNEL_DEBUGGER_INFORMATION, *PSYSTEM_KERNEL_DEBUGGER_INFORMATION; /* size: 0x0002 */

struct BULK_SECURITY_TEST_DATA
{
  /* 0x0000 */ unsigned long DesiredAccess;
  /* 0x0004 */ unsigned long SecurityIds[1];
}; /* size: 0x0008 */

typedef struct __midl_frag187_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag187_t, *P_midl_frag187_t; /* size: 0x0010 */

typedef struct _ADMINISTRATOR_POWER_POLICY
{
  /* 0x0000 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0004 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x0008 */ unsigned long MinVideoTimeout;
  /* 0x000c */ unsigned long MaxVideoTimeout;
  /* 0x0010 */ unsigned long MinSpindownTimeout;
  /* 0x0014 */ unsigned long MaxSpindownTimeout;
} ADMINISTRATOR_POWER_POLICY, *PADMINISTRATOR_POWER_POLICY; /* size: 0x0018 */

typedef struct _SYSTEM_WORKINGSET_ENTRY
{
  union
  {
    /* 0x0000 */ unsigned long UniqueProcessId;
    /* 0x0000 */ unsigned long SessionId;
  }; /* size: 0x0004 */
  /* 0x0004 */ long Padding_1098;
  /* 0x0008 */ unsigned __int64 WorkingSetPageCount;
  /* 0x0010 */ unsigned __int64 CommitPageCount;
  union
  {
    /* 0x0018 */ unsigned __int64 PagedPoolPageCount;
    /* 0x0018 */ unsigned __int64 VirtualSizeInPages;
  }; /* size: 0x0008 */
  /* 0x0020 */ unsigned __int64 PrivateWorkingSetPageCount;
} SYSTEM_WORKINGSET_ENTRY, *PSYSTEM_WORKINGSET_ENTRY; /* size: 0x0028 */

typedef struct _SYSTEM_PROCESS_ID_INFORMATION
{
  /* 0x0000 */ void* ProcessId;
  /* 0x0008 */ struct _UNICODE_STRING ImageName;
} SYSTEM_PROCESS_ID_INFORMATION, *PSYSTEM_PROCESS_ID_INFORMATION; /* size: 0x0018 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING
{
  /* 0x0000 */ void* ResolutionContext;
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING; /* size: 0x0008 */

typedef struct _TRANSACTIONMANAGER_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID TmIdentity;
  /* 0x0010 */ union _LARGE_INTEGER VirtualClock;
} TRANSACTIONMANAGER_BASIC_INFORMATION, *PTRANSACTIONMANAGER_BASIC_INFORMATION; /* size: 0x0018 */

class BUCL::CConvertToSignedType<long>
{
}; /* size: 0x0001 */

struct tagCOLORMATCHTOTARGET
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwAction;
  /* 0x000c */ unsigned long dwFlags;
  /* 0x0010 */ unsigned long cbName;
  /* 0x0014 */ unsigned long cbData;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

typedef union _RATE_QUOTA_LIMIT
{
  union
  {
    /* 0x0000 */ unsigned long RateData;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long RatePercent : 7; /* bit position: 0 */
      /* 0x0000 */ unsigned long Reserved0 : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} RATE_QUOTA_LIMIT, *PRATE_QUOTA_LIMIT; /* size: 0x0004 */

typedef struct _QUOTA_LIMITS_EX
{
  /* 0x0000 */ unsigned __int64 PagedPoolLimit;
  /* 0x0008 */ unsigned __int64 NonPagedPoolLimit;
  /* 0x0010 */ unsigned __int64 MinimumWorkingSetSize;
  /* 0x0018 */ unsigned __int64 MaximumWorkingSetSize;
  /* 0x0020 */ unsigned __int64 PagefileLimit;
  /* 0x0028 */ union _LARGE_INTEGER TimeLimit;
  /* 0x0030 */ unsigned __int64 WorkingSetLimit;
  /* 0x0038 */ unsigned __int64 Reserved2;
  /* 0x0040 */ unsigned __int64 Reserved3;
  /* 0x0048 */ unsigned __int64 Reserved4;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ union _RATE_QUOTA_LIMIT CpuRateLimit;
} QUOTA_LIMITS_EX, *PQUOTA_LIMITS_EX; /* size: 0x0058 */

class CHandle
{
  /* 0x0000 */ class CBasedMStreamPtr _pms;
  /* 0x0008 */ unsigned long _sid;
}; /* size: 0x0010 */

typedef struct _OSVERSIONINFOEXA
{
  /* 0x0000 */ unsigned long dwOSVersionInfoSize;
  /* 0x0004 */ unsigned long dwMajorVersion;
  /* 0x0008 */ unsigned long dwMinorVersion;
  /* 0x000c */ unsigned long dwBuildNumber;
  /* 0x0010 */ unsigned long dwPlatformId;
  /* 0x0014 */ char szCSDVersion[128];
  /* 0x0094 */ unsigned short wServicePackMajor;
  /* 0x0096 */ unsigned short wServicePackMinor;
  /* 0x0098 */ unsigned short wSuiteMask;
  /* 0x009a */ unsigned char wProductType;
  /* 0x009b */ unsigned char wReserved;
} OSVERSIONINFOEXA, *POSVERSIONINFOEXA; /* size: 0x009c */

struct CMachineNamesHelper::_SBTOTAL
{
  /* 0x0000 */ unsigned long dwcTotalAddrs;
  /* 0x0004 */ long Padding_1099;
  /* 0x0008 */ wchar_t** ppszAddresses;
}; /* size: 0x0010 */

typedef struct __midl_frag93_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag93_t, *P_midl_frag93_t; /* size: 0x0040 */

class CAptCallCtrl
{
  /* 0x0000 */ struct IMessageFilter* _pMF;
  /* 0x0008 */ int _fInMsgFilter;
  /* 0x000c */ long Padding_1100;
  /* 0x0010 */ class CCliModalLoop* _pTopCML;
  /* 0x0018 */ struct tagSWindowData _WD[2];
}; /* size: 0x0038 */

struct tagDATAELEMENT
{
  /* 0x0000 */ struct _GUID dataID;
  /* 0x0010 */ unsigned long cbSize;
  /* 0x0014 */ unsigned long cbRounded;
  /* 0x0018 */ unsigned char Data[1];
  /* 0x0019 */ char __PADDING__[3];
}; /* size: 0x001c */

struct tagEMRPOLYLINE16
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cpts;
  /* 0x001c */ struct tagPOINTS apts[1];
}; /* size: 0x0020 */

typedef struct _CSTRING
{
  /* 0x0000 */ unsigned short Length;
  /* 0x0002 */ unsigned short MaximumLength;
  /* 0x0004 */ long Padding_1101;
  /* 0x0008 */ const char* Buffer;
} CSTRING, *PCSTRING; /* size: 0x0010 */

typedef struct _NDR_USER_MARSHAL_INFO
{
  /* 0x0000 */ unsigned long InformationLevel;
  /* 0x0004 */ long Padding_1102;
  /* 0x0008 */ struct _NDR_USER_MARSHAL_INFO_LEVEL1 Level1;
} NDR_USER_MARSHAL_INFO, *PNDR_USER_MARSHAL_INFO; /* size: 0x0058 */

class CUserMarshalInfo
{
  /* 0x0000 */ long _RpcStatus;
  /* 0x0004 */ long Padding_1103;
  /* 0x0008 */ unsigned char* _pSuppliedBuffer;
  /* 0x0010 */ struct _NDR_USER_MARSHAL_INFO _MarshalInfo;
}; /* size: 0x0068 */

struct Windows::Rtl::IRtlRORAStream
{
}; /* size: 0x0008 */

typedef struct _OCSP_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ long Padding_1104;
  /* 0x0008 */ char* pszObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} OCSP_RESPONSE_INFO, *POCSP_RESPONSE_INFO; /* size: 0x0020 */

class BUCL::CConvertToUnsignedType<short>
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_MEMORY_CHANNEL_INFORMATION
{
  /* 0x0000 */ unsigned long ChannelNumber;
  /* 0x0004 */ unsigned long ChannelHeatIndex;
  /* 0x0008 */ unsigned __int64 TotalPageCount;
  /* 0x0010 */ unsigned __int64 ZeroPageCount;
  /* 0x0018 */ unsigned __int64 FreePageCount;
  /* 0x0020 */ unsigned __int64 StandbyPageCount;
} SYSTEM_MEMORY_CHANNEL_INFORMATION, *PSYSTEM_MEMORY_CHANNEL_INFORMATION; /* size: 0x0028 */

class Windows::Lock<_RTL_CRITICAL_SECTION>
{
}; /* size: 0x0030 */

typedef struct __midl_frag744_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag744_t, *P_midl_frag744_t; /* size: 0x0010 */

class Microsoft::WRL::ComPtr<IMessageParam>;

typedef struct _SYSTEM_REF_TRACE_INFORMATION
{
  /* 0x0000 */ unsigned char TraceEnable;
  /* 0x0001 */ unsigned char TracePermanent;
  /* 0x0002 */ char Padding_1105[6];
  /* 0x0008 */ struct _UNICODE_STRING TraceProcessName;
  /* 0x0018 */ struct _UNICODE_STRING TracePoolTags;
} SYSTEM_REF_TRACE_INFORMATION, *PSYSTEM_REF_TRACE_INFORMATION; /* size: 0x0028 */

struct IXMLDOMEntityReference
{
}; /* size: 0x0008 */

struct IPSFactoryBufferVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateProxy /* function */;
  /* 0x0020 */ void* CreateStub /* function */;
}; /* size: 0x0028 */

typedef struct _STARTUPINFOA
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_1106;
  /* 0x0008 */ char* lpReserved;
  /* 0x0010 */ char* lpDesktop;
  /* 0x0018 */ char* lpTitle;
  /* 0x0020 */ unsigned long dwX;
  /* 0x0024 */ unsigned long dwY;
  /* 0x0028 */ unsigned long dwXSize;
  /* 0x002c */ unsigned long dwYSize;
  /* 0x0030 */ unsigned long dwXCountChars;
  /* 0x0034 */ unsigned long dwYCountChars;
  /* 0x0038 */ unsigned long dwFillAttribute;
  /* 0x003c */ unsigned long dwFlags;
  /* 0x0040 */ unsigned short wShowWindow;
  /* 0x0042 */ unsigned short cbReserved2;
  /* 0x0044 */ long Padding_1107;
  /* 0x0048 */ unsigned char* lpReserved2;
  /* 0x0050 */ void* hStdInput;
  /* 0x0058 */ void* hStdOutput;
  /* 0x0060 */ void* hStdError;
} STARTUPINFOA, *PSTARTUPINFOA; /* size: 0x0068 */

struct threadmbcinfostruct;

typedef struct _CRYPT_CONTEXT_FUNCTION_CONFIG
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwReserved;
} CRYPT_CONTEXT_FUNCTION_CONFIG, *PCRYPT_CONTEXT_FUNCTION_CONFIG; /* size: 0x0008 */

typedef struct _ACCESS_DENIED_CALLBACK_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} ACCESS_DENIED_CALLBACK_OBJECT_ACE, *PACCESS_DENIED_CALLBACK_OBJECT_ACE; /* size: 0x0030 */

typedef struct _SYMBOL_INFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_1108;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ char Name[1];
  /* 0x0055 */ char __PADDING__[3];
} SYMBOL_INFO, *PSYMBOL_INFO; /* size: 0x0058 */

typedef struct _tagPROTOCOL_ARGUMENT
{
  /* 0x0000 */ const wchar_t* szMethod;
  /* 0x0008 */ const wchar_t* szTargetUrl;
} tagPROTOCOL_ARGUMENT, *PtagPROTOCOL_ARGUMENT; /* size: 0x0010 */

typedef struct _CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY
{
  /* 0x0000 */ char* pszObjId;
  /* 0x0008 */ unsigned long cValue;
  /* 0x000c */ long Padding_1109;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_CONTENT_INFO_SEQUENCE_OF_ANY, *PCRYPT_CONTENT_INFO_SEQUENCE_OF_ANY; /* size: 0x0018 */

typedef struct _PROCESS_MITIGATION_ASLR_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableBottomUpRandomization : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long EnableForceRelocateImages : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long EnableHighEntropy : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long DisallowStrippedImages : 1; /* bit position: 3 */
      /* 0x0000 */ unsigned long ReservedFlags : 28; /* bit position: 4 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_ASLR_POLICY, *PPROCESS_MITIGATION_ASLR_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long DisallowWin32kSystemCalls : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ReservedFlags : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY, *PPROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long DisableExtensionPoints : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long ReservedFlags : 31; /* bit position: 1 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY, *PPROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY; /* size: 0x0004 */

typedef struct _PROCESS_MITIGATION_POLICY_INFORMATION
{
  /* 0x0000 */ enum _PROCESS_MITIGATION_POLICY Policy;
  union
  {
    /* 0x0004 */ struct _PROCESS_MITIGATION_ASLR_POLICY ASLRPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_STRICT_HANDLE_CHECK_POLICY StrictHandleCheckPolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_SYSTEM_CALL_DISABLE_POLICY SystemCallDisablePolicy;
    /* 0x0004 */ struct _PROCESS_MITIGATION_EXTENSION_POINT_DISABLE_POLICY ExtensionPointDisablePolicy;
  }; /* size: 0x0004 */
} PROCESS_MITIGATION_POLICY_INFORMATION, *PPROCESS_MITIGATION_POLICY_INFORMATION; /* size: 0x0008 */

class Windows::Auto<Windows::Rtl::IRtlInterface *>
{
}; /* size: 0x0008 */

typedef struct __midl_frag1686_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1686_t, *P_midl_frag1686_t; /* size: 0x000c */

struct NTFS_EXTENDED_VOLUME_DATA
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ unsigned long BytesPerPhysicalSector;
  /* 0x000c */ unsigned short LfsMajorVersion;
  /* 0x000e */ unsigned short LfsMinorVersion;
}; /* size: 0x0010 */

struct SET_POWER_SETTING_VALUE
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ struct _GUID Guid;
  /* 0x0014 */ enum SYSTEM_POWER_CONDITION PowerCondition;
  /* 0x0018 */ unsigned long DataLength;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

typedef struct _FILE_COMPRESSION_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER CompressedFileSize;
  /* 0x0008 */ unsigned short CompressionFormat;
  /* 0x000a */ unsigned char CompressionUnitShift;
  /* 0x000b */ unsigned char ChunkShift;
  /* 0x000c */ unsigned char ClusterShift;
  /* 0x000d */ unsigned char Reserved[3];
} FILE_COMPRESSION_INFO, *PFILE_COMPRESSION_INFO; /* size: 0x0010 */

struct MARK_HANDLE_INFO32
{
  union
  {
    /* 0x0000 */ unsigned long UsnSourceInfo;
    /* 0x0000 */ unsigned long CopyNumber;
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned int VolumeHandle;
  /* 0x0008 */ unsigned long HandleInfo;
}; /* size: 0x000c */

typedef struct _CRYPT_RSA_SSA_PSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0018 */ struct _CRYPT_MASK_GEN_ALGORITHM MaskGenAlgorithm;
  /* 0x0038 */ unsigned long dwSaltLength;
  /* 0x003c */ unsigned long dwTrailerField;
} CRYPT_RSA_SSA_PSS_PARAMETERS, *PCRYPT_RSA_SSA_PSS_PARAMETERS; /* size: 0x0040 */

struct IXMLElementCollection
{
}; /* size: 0x0008 */

typedef struct _SYSTEM_PROCESSOR_POLICY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long PolicyId;
  /* 0x0008 */ struct _XSAVE_POLICY Policy;
} SYSTEM_PROCESSOR_POLICY_INFORMATION, *PSYSTEM_PROCESSOR_POLICY_INFORMATION; /* size: 0x0038 */

typedef struct _SYSTEM_LOGICAL_PROCESSOR_INFORMATION
{
  /* 0x0000 */ unsigned __int64 ProcessorMask;
  /* 0x0008 */ enum _LOGICAL_PROCESSOR_RELATIONSHIP Relationship;
  /* 0x000c */ long Padding_1110;
  union
  {
    struct
    {
      /* 0x0010 */ unsigned char Flags;
    } /* size: 0x0001 */ ProcessorCore;
    struct
    {
      /* 0x0010 */ unsigned long NodeNumber;
    } /* size: 0x0004 */ NumaNode;
    /* 0x0010 */ struct _CACHE_DESCRIPTOR Cache;
    /* 0x0010 */ unsigned __int64 Reserved[2];
  }; /* size: 0x0010 */
} SYSTEM_LOGICAL_PROCESSOR_INFORMATION, *PSYSTEM_LOGICAL_PROCESSOR_INFORMATION; /* size: 0x0020 */

struct IPrivActivationPropertiesOut
{
}; /* size: 0x0008 */

typedef struct __midl_frag457_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag457_t, *P_midl_frag457_t; /* size: 0x0038 */

struct IRemUnknownN
{
}; /* size: 0x0008 */

typedef struct _devicemodeA
{
  /* 0x0000 */ unsigned char dmDeviceName[32];
  /* 0x0020 */ unsigned short dmSpecVersion;
  /* 0x0022 */ unsigned short dmDriverVersion;
  /* 0x0024 */ unsigned short dmSize;
  /* 0x0026 */ unsigned short dmDriverExtra;
  /* 0x0028 */ unsigned long dmFields;
  union
  {
    struct
    {
      /* 0x002c */ short dmOrientation;
      /* 0x002e */ short dmPaperSize;
      /* 0x0030 */ short dmPaperLength;
      /* 0x0032 */ short dmPaperWidth;
      /* 0x0034 */ short dmScale;
      /* 0x0036 */ short dmCopies;
      /* 0x0038 */ short dmDefaultSource;
      /* 0x003a */ short dmPrintQuality;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x002c */ struct _POINTL dmPosition;
      /* 0x0034 */ unsigned long dmDisplayOrientation;
      /* 0x0038 */ unsigned long dmDisplayFixedOutput;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x003c */ short dmColor;
  /* 0x003e */ short dmDuplex;
  /* 0x0040 */ short dmYResolution;
  /* 0x0042 */ short dmTTOption;
  /* 0x0044 */ short dmCollate;
  /* 0x0046 */ unsigned char dmFormName[32];
  /* 0x0066 */ unsigned short dmLogPixels;
  /* 0x0068 */ unsigned long dmBitsPerPel;
  /* 0x006c */ unsigned long dmPelsWidth;
  /* 0x0070 */ unsigned long dmPelsHeight;
  union
  {
    /* 0x0074 */ unsigned long dmDisplayFlags;
    /* 0x0074 */ unsigned long dmNup;
  }; /* size: 0x0004 */
  /* 0x0078 */ unsigned long dmDisplayFrequency;
  /* 0x007c */ unsigned long dmICMMethod;
  /* 0x0080 */ unsigned long dmICMIntent;
  /* 0x0084 */ unsigned long dmMediaType;
  /* 0x0088 */ unsigned long dmDitherType;
  /* 0x008c */ unsigned long dmReserved1;
  /* 0x0090 */ unsigned long dmReserved2;
  /* 0x0094 */ unsigned long dmPanningWidth;
  /* 0x0098 */ unsigned long dmPanningHeight;
} devicemodeA, *PdevicemodeA; /* size: 0x009c */

typedef struct _SERVICE_TRIGGER
{
  /* 0x0000 */ unsigned long dwTriggerType;
  /* 0x0004 */ unsigned long dwAction;
  /* 0x0008 */ struct _GUID* pTriggerSubtype;
  /* 0x0010 */ unsigned long cDataItems;
  /* 0x0014 */ long Padding_1111;
  /* 0x0018 */ struct _SERVICE_TRIGGER_SPECIFIC_DATA_ITEM* pDataItems;
} SERVICE_TRIGGER, *PSERVICE_TRIGGER; /* size: 0x0020 */

struct tagInitializeSpyNode
{
  /* 0x0000 */ struct tagInitializeSpyNode* pNext;
  /* 0x0008 */ struct tagInitializeSpyNode* pPrev;
  /* 0x0010 */ unsigned long dwRefs;
  /* 0x0014 */ unsigned long dwCookie;
  /* 0x0018 */ struct IInitializeSpy* pInitSpy;
}; /* size: 0x0020 */

typedef struct __vc_attributes::helper_attributes::v1_earlyAttribute
{
} _vc_attributes::helper_attributes::v1_earlyAttribute, *P_vc_attributes::helper_attributes::v1_earlyAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::v1_enumAttribute
{
} _vc_attributes::v1_enumAttribute, *P_vc_attributes::v1_enumAttribute; /* size: 0x0001 */

struct tagMIXERCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long fdwSupport;
  /* 0x002c */ unsigned long cDestinations;
  /* 0x0030 */ struct _GUID ManufacturerGuid;
  /* 0x0040 */ struct _GUID ProductGuid;
  /* 0x0050 */ struct _GUID NameGuid;
}; /* size: 0x0060 */

typedef struct _KSPIN_LOCK_QUEUE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE* volatile Next;
  /* 0x0008 */ unsigned __int64* volatile Lock;
} KSPIN_LOCK_QUEUE, *PKSPIN_LOCK_QUEUE; /* size: 0x0010 */

typedef struct _KLOCK_QUEUE_HANDLE
{
  /* 0x0000 */ struct _KSPIN_LOCK_QUEUE LockQueue;
  /* 0x0010 */ unsigned char OldIrql;
  /* 0x0011 */ char __PADDING__[7];
} KLOCK_QUEUE_HANDLE, *PKLOCK_QUEUE_HANDLE; /* size: 0x0018 */

typedef struct _JOB_INFO_2A
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ long Padding_1112;
  /* 0x0008 */ char* pPrinterName;
  /* 0x0010 */ char* pMachineName;
  /* 0x0018 */ char* pUserName;
  /* 0x0020 */ char* pDocument;
  /* 0x0028 */ char* pNotifyName;
  /* 0x0030 */ char* pDatatype;
  /* 0x0038 */ char* pPrintProcessor;
  /* 0x0040 */ char* pParameters;
  /* 0x0048 */ char* pDriverName;
  /* 0x0050 */ struct _devicemodeA* pDevMode;
  /* 0x0058 */ char* pStatus;
  /* 0x0060 */ void* pSecurityDescriptor;
  /* 0x0068 */ unsigned long Status;
  /* 0x006c */ unsigned long Priority;
  /* 0x0070 */ unsigned long Position;
  /* 0x0074 */ unsigned long StartTime;
  /* 0x0078 */ unsigned long UntilTime;
  /* 0x007c */ unsigned long TotalPages;
  /* 0x0080 */ unsigned long Size;
  /* 0x0084 */ struct _SYSTEMTIME Submitted;
  /* 0x0094 */ unsigned long Time;
  /* 0x0098 */ unsigned long PagesPrinted;
  /* 0x009c */ long __PADDING__[1];
} JOB_INFO_2A, *PJOB_INFO_2A; /* size: 0x00a0 */

typedef struct _NDR64_EXPR_NOOP
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Size;
  /* 0x0002 */ unsigned short Reserved;
} NDR64_EXPR_NOOP, *PNDR64_EXPR_NOOP; /* size: 0x0004 */

typedef struct _NDR64_EXPR_CONST64
{
  /* 0x0000 */ unsigned char ExprType;
  /* 0x0001 */ unsigned char Reserved;
  /* 0x0002 */ unsigned short Reserved1;
  /* 0x0004 */ long Padding_1113;
  /* 0x0008 */ __int64 ConstValue;
} NDR64_EXPR_CONST64, *PNDR64_EXPR_CONST64; /* size: 0x0010 */

typedef struct __midl_frag528_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag528_t, *P_midl_frag528_t; /* size: 0x0018 */

typedef struct _SYSTEM_DPC_BEHAVIOR_INFORMATION
{
  /* 0x0000 */ unsigned long Spare;
  /* 0x0004 */ unsigned long DpcQueueDepth;
  /* 0x0008 */ unsigned long MinimumDpcRate;
  /* 0x000c */ unsigned long AdjustDpcThreshold;
  /* 0x0010 */ unsigned long IdealDpcRate;
} SYSTEM_DPC_BEHAVIOR_INFORMATION, *PSYSTEM_DPC_BEHAVIOR_INFORMATION; /* size: 0x0014 */

class CSessionMoniker
{
  /* 0x0000 */ long Padding_1114[12];
  /* 0x0030 */ unsigned long m_sessionid;
  /* 0x0034 */ int m_bUseConsoleSession;
  /* 0x0038 */ int m_bHaveBindOpts;
  /* 0x003c */ long Padding_1115;
  /* 0x0040 */ struct tagBIND_OPTS2 m_bindopts2;
}; /* size: 0x0068 */

union _DL_EUI48;

struct tagOutgoingActivationData
{
  /* 0x0000 */ struct _GUID guidServer;
}; /* size: 0x0010 */

struct HWINSTA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SE_SECURITY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ void* SecurityDescriptor;
} SE_SECURITY_DESCRIPTOR, *PSE_SECURITY_DESCRIPTOR; /* size: 0x0010 */

struct _LDRP_DLL_SNAP_CONTEXT;

typedef struct _WIN32_FIND_DATAA
{
  /* 0x0000 */ unsigned long dwFileAttributes;
  /* 0x0004 */ struct _FILETIME ftCreationTime;
  /* 0x000c */ struct _FILETIME ftLastAccessTime;
  /* 0x0014 */ struct _FILETIME ftLastWriteTime;
  /* 0x001c */ unsigned long nFileSizeHigh;
  /* 0x0020 */ unsigned long nFileSizeLow;
  /* 0x0024 */ unsigned long dwReserved0;
  /* 0x0028 */ unsigned long dwReserved1;
  /* 0x002c */ char cFileName[260];
  /* 0x0130 */ char cAlternateFileName[14];
  /* 0x013e */ char __PADDING__[2];
} WIN32_FIND_DATAA, *PWIN32_FIND_DATAA; /* size: 0x0140 */

typedef struct _SYSTEM_PLATFORM_BINARY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 PhysicalAddress;
  /* 0x0008 */ void* HandoffBuffer;
  /* 0x0010 */ void* CommandLineBuffer;
  /* 0x0018 */ unsigned long HandoffBufferSize;
  /* 0x001c */ unsigned long CommandLineBufferSize;
} SYSTEM_PLATFORM_BINARY_INFORMATION, *PSYSTEM_PLATFORM_BINARY_INFORMATION; /* size: 0x0020 */

class CWriteMarshalingStreamOnBuffer
{
}; /* size: 0x0030 */

struct IOleControl
{
}; /* size: 0x0008 */

typedef struct _FILE_GET_EA_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned char EaNameLength;
  /* 0x0005 */ char EaName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_GET_EA_INFORMATION, *PFILE_GET_EA_INFORMATION; /* size: 0x0008 */

typedef struct __vc_attributes::switch_isAttribute
{
  /* 0x0000 */ const char* limited_expression;
} _vc_attributes::switch_isAttribute, *P_vc_attributes::switch_isAttribute; /* size: 0x0008 */

typedef struct _CERT_QC_STATEMENTS_EXT_INFO
{
  /* 0x0000 */ unsigned long cStatement;
  /* 0x0004 */ long Padding_1116;
  /* 0x0008 */ struct _CERT_QC_STATEMENT* rgStatement;
} CERT_QC_STATEMENTS_EXT_INFO, *PCERT_QC_STATEMENTS_EXT_INFO; /* size: 0x0010 */

typedef struct _PROCESS_KEEPALIVE_COUNT_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
} PROCESS_KEEPALIVE_COUNT_INFORMATION, *PPROCESS_KEEPALIVE_COUNT_INFORMATION; /* size: 0x0004 */

struct tagMCI_ANIM_OPEN_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const wchar_t* lpstrDeviceType;
  /* 0x0014 */ const wchar_t* lpstrElementName;
  /* 0x001c */ const wchar_t* lpstrAlias;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ struct HWND__* hWndParent;
}; /* size: 0x0030 */

typedef struct _SYSTEM_POWER_LOGGING_ENTRY
{
  /* 0x0000 */ unsigned long Reason;
  /* 0x0004 */ unsigned long States;
} SYSTEM_POWER_LOGGING_ENTRY, *PSYSTEM_POWER_LOGGING_ENTRY; /* size: 0x0008 */

typedef struct _SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION
{
  /* 0x0000 */ unsigned long FlagsToEnable;
  /* 0x0004 */ unsigned long FlagsToDisable;
} SYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION, *PSYSTEM_IMAGE_FILE_EXECUTION_OPTIONS_INFORMATION; /* size: 0x0008 */

typedef struct _MEMORY_RANGE_ENTRY
{
  /* 0x0000 */ void* VirtualAddress;
  /* 0x0008 */ unsigned __int64 NumberOfBytes;
} MEMORY_RANGE_ENTRY, *PMEMORY_RANGE_ENTRY; /* size: 0x0010 */

typedef struct _MUTANT_BASIC_INFORMATION
{
  /* 0x0000 */ long CurrentCount;
  /* 0x0004 */ unsigned char OwnedByCaller;
  /* 0x0005 */ unsigned char AbandonedState;
  /* 0x0006 */ char __PADDING__[2];
} MUTANT_BASIC_INFORMATION, *PMUTANT_BASIC_INFORMATION; /* size: 0x0008 */

struct IProxyServerIdentity
{
}; /* size: 0x0008 */

typedef struct _MINIDUMP_MEMORY64_LIST
{
  /* 0x0000 */ unsigned __int64 NumberOfMemoryRanges;
  /* 0x0008 */ unsigned __int64 BaseRva;
  /* 0x0010 */ struct _MINIDUMP_MEMORY_DESCRIPTOR64* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY64_LIST, *PMINIDUMP_MEMORY64_LIST; /* size: 0x0010 */

struct tagHIGHCONTRASTW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ wchar_t* lpszDefaultScheme;
}; /* size: 0x0010 */

typedef struct __midl_frag71_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ unsigned char frag4;
    /* 0x0029 */ char __PADDING__[7];
  } /* size: 0x0028 */ frag2;
} _midl_frag71_t, *P_midl_frag71_t; /* size: 0x0030 */

struct SHA512_CTX
{
  /* 0x0000 */ unsigned __int64 state[8];
  /* 0x0040 */ unsigned __int64 count[2];
  /* 0x0050 */ unsigned char buffer[128];
}; /* size: 0x00d0 */

typedef struct __midl_frag252_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag252_t, *P_midl_frag252_t; /* size: 0x0038 */

typedef struct _CRYPT_AES_256_KEY_STATE
{
  /* 0x0000 */ unsigned char Key[32];
  /* 0x0020 */ unsigned char IV[16];
  /* 0x0030 */ unsigned char EncryptionState[16][15];
  /* 0x0120 */ unsigned char DecryptionState[16][15];
  /* 0x0210 */ unsigned char Feedback[16];
} CRYPT_AES_256_KEY_STATE, *PCRYPT_AES_256_KEY_STATE; /* size: 0x0220 */

typedef struct _cpinfoexA
{
  /* 0x0000 */ unsigned int MaxCharSize;
  /* 0x0004 */ unsigned char DefaultChar[2];
  /* 0x0006 */ unsigned char LeadByte[12];
  /* 0x0012 */ wchar_t UnicodeDefaultChar;
  /* 0x0014 */ unsigned int CodePage;
  /* 0x0018 */ char CodePageName[260];
} cpinfoexA, *PcpinfoexA; /* size: 0x011c */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX
{
  /* 0x0000 */ union _LARGE_INTEGER IdleTime;
  /* 0x0008 */ union _LARGE_INTEGER KernelTime;
  /* 0x0010 */ union _LARGE_INTEGER UserTime;
  /* 0x0018 */ union _LARGE_INTEGER DpcTime;
  /* 0x0020 */ union _LARGE_INTEGER InterruptTime;
  /* 0x0028 */ unsigned long InterruptCount;
  /* 0x002c */ unsigned long Spare0;
  /* 0x0030 */ union _LARGE_INTEGER AvailableTime;
  /* 0x0038 */ union _LARGE_INTEGER Spare1;
  /* 0x0040 */ union _LARGE_INTEGER Spare2;
} SYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX, *PSYSTEM_PROCESSOR_PERFORMANCE_INFORMATION_EX; /* size: 0x0048 */

struct USN_JOURNAL_DATA_V1
{
  /* 0x0000 */ unsigned __int64 UsnJournalID;
  /* 0x0008 */ __int64 FirstUsn;
  /* 0x0010 */ __int64 NextUsn;
  /* 0x0018 */ __int64 LowestValidUsn;
  /* 0x0020 */ __int64 MaxUsn;
  /* 0x0028 */ unsigned __int64 MaximumSize;
  /* 0x0030 */ unsigned __int64 AllocationDelta;
  /* 0x0038 */ unsigned short MinSupportedMajorVersion;
  /* 0x003a */ unsigned short MaxSupportedMajorVersion;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

struct tagOleMenuGroupWidths
{
  /* 0x0000 */ long width[6];
}; /* size: 0x0018 */

struct IServiceProvider
{
}; /* size: 0x0008 */

typedef struct _PROPSHEETPAGEW_V2
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const wchar_t* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const wchar_t* pszHeaderTitle;
  /* 0x0050 */ const wchar_t* pszHeaderSubTitle;
} PROPSHEETPAGEW_V2, *PPROPSHEETPAGEW_V2; /* size: 0x0058 */

typedef struct _PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ struct _GUID* InterfaceGuid;
  /* 0x0018 */ struct _UNICODE_STRING Reference;
  /* 0x0028 */ unsigned char Register;
  /* 0x0029 */ char Padding_1117[7];
  /* 0x0030 */ wchar_t* SymLink;
  /* 0x0038 */ unsigned long SymLinkLength;
  /* 0x003c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA, *PPLUGPLAY_CONTROL_CLASS_ASSOCIATION_DATA; /* size: 0x0040 */

typedef struct _ENLISTMENT_CRM_INFORMATION
{
  /* 0x0000 */ struct _GUID CrmTransactionManagerId;
  /* 0x0010 */ struct _GUID CrmResourceManagerId;
  /* 0x0020 */ struct _GUID CrmEnlistmentId;
} ENLISTMENT_CRM_INFORMATION, *PENLISTMENT_CRM_INFORMATION; /* size: 0x0030 */

typedef struct __MIDL___MIDL_itf_wtypes_0000_0001_0001
{
  /* 0x0000 */ unsigned long tyspec;
  /* 0x0004 */ long Padding_1118;
  /* 0x0008 */ union __MIDL___MIDL_itf_wtypes_0000_0001_0001::__MIDL___MIDL_itf_wtypes_0000_0001_0005 tagged_union;
} _MIDL___MIDL_itf_wtypes_0000_0001_0001, *P_MIDL___MIDL_itf_wtypes_0000_0001_0001; /* size: 0x0028 */

typedef struct __midl_frag1384_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1384_t, *P_midl_frag1384_t; /* size: 0x0028 */

struct IXMLDSOControl
{
}; /* size: 0x0008 */

struct __lc_time_data;

struct value_entA
{
  /* 0x0000 */ char* ve_valuename;
  /* 0x0008 */ unsigned long ve_valuelen;
  /* 0x000c */ long Padding_1119;
  /* 0x0010 */ unsigned __int64 ve_valueptr;
  /* 0x0018 */ unsigned long ve_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct IResourceGates
{
}; /* size: 0x0008 */

typedef struct _TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT
{
  /* 0x0000 */ unsigned long SavepointId;
} TRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT, *PTRANSACTION_NOTIFICATION_SAVEPOINT_ARGUMENT; /* size: 0x0004 */

class Windows::ErrorHandling::Rtl::CBaseRaiseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame,Windows::ErrorHandling::Rtl::CBaseNtStatusCarryingFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame> >
{
}; /* size: 0x0004 */

typedef struct _PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING ServiceName;
  /* 0x0010 */ wchar_t* DeviceInstance;
  /* 0x0018 */ unsigned long DeviceInstanceLength;
  /* 0x001c */ long __PADDING__[1];
} PLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA, *PPLUGPLAY_CONTROL_LEGACY_DEVGEN_DATA; /* size: 0x0020 */

typedef struct _SYSTEM_FILECACHE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 CurrentSize;
  /* 0x0008 */ unsigned __int64 PeakSize;
  /* 0x0010 */ unsigned long PageFaultCount;
  /* 0x0014 */ long Padding_1120;
  /* 0x0018 */ unsigned __int64 MinimumWorkingSet;
  /* 0x0020 */ unsigned __int64 MaximumWorkingSet;
  /* 0x0028 */ unsigned __int64 CurrentSizeIncludingTransitionInPages;
  /* 0x0030 */ unsigned __int64 PeakSizeIncludingTransitionInPages;
  /* 0x0038 */ unsigned long TransitionRePurposeCount;
  /* 0x003c */ unsigned long Flags;
} SYSTEM_FILECACHE_INFORMATION, *PSYSTEM_FILECACHE_INFORMATION; /* size: 0x0040 */

class BUCL::CMultiplier<unsigned __int64,BUCL::Rtl::CCallDisposition>
{
}; /* size: 0x0001 */

typedef struct _nlsversioninfo
{
  /* 0x0000 */ unsigned long dwNLSVersionInfoSize;
  /* 0x0004 */ unsigned long dwNLSVersion;
  /* 0x0008 */ unsigned long dwDefinedVersion;
  /* 0x000c */ unsigned long dwEffectiveId;
  /* 0x0010 */ struct _GUID guidCustomVersion;
} nlsversioninfo, *Pnlsversioninfo; /* size: 0x0020 */

class CRtlSmartUcsEncoderTraits<_LUTF8_STRING>
{
}; /* size: 0x0001 */

typedef struct _RPC_SECURITY_QOS_V5_A
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1121;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_A* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long Padding_1122;
  /* 0x0030 */ void* ServerSecurityDescriptor;
} RPC_SECURITY_QOS_V5_A, *PRPC_SECURITY_QOS_V5_A; /* size: 0x0038 */

class CContextPropList
{
  union
  {
    struct
    {
      /* 0x0000 */ int _Max;
      /* 0x0004 */ int _iFirst;
      /* 0x0008 */ int _iLast;
      /* 0x000c */ int _Count;
      /* 0x0010 */ int _cCompareProps;
      /* 0x0014 */ unsigned long _Hash;
      /* 0x0018 */ int _slotIdx;
      /* 0x001c */ long Padding_1123;
      /* 0x0020 */ struct tagContextProperty* _pProps;
      /* 0x0028 */ int* _pSlots;
      /* 0x0030 */ struct tagContextProperty* _pCompareBuffer;
      /* 0x0038 */ struct _tagSCtxListIndex* _pIndex;
    }; /* size: 0x003c */
    /* 0x0000 */ class CPageAllocator s_NodeAllocator;
  }; /* size: 0x0068 */
}; /* size: 0x0040 */

class CObjectContext
{
  /* 0x0000 */ long Padding_1124[14];
  /* 0x0038 */ unsigned long _cRefs;
  /* 0x003c */ long _cUserRefs;
  /* 0x0040 */ long _cInternalRefs;
  /* 0x0044 */ unsigned long _dwFlags;
  /* 0x0048 */ struct SHashChain _propChain;
  /* 0x0058 */ struct SHashChain _uuidChain;
  /* 0x0068 */ struct tagInterfaceData* _pifData;
  /* 0x0070 */ unsigned long _MarshalSizeMax;
  /* 0x0074 */ long Padding_1125;
  /* 0x0078 */ class CComApartment* _pApartment;
  /* 0x0080 */ unsigned long _dwHashOfId;
  /* 0x0084 */ struct _GUID _contextId;
  /* 0x0094 */ long Padding_1126;
  /* 0x0098 */ unsigned __int64 _urtCtxId;
  /* 0x00a0 */ struct tagSPSCache _PSCache;
  /* 0x00c0 */ struct IMarshal* _pMarshalProp;
  /* 0x00c8 */ long _cReleaseThreads;
  /* 0x00cc */ long Padding_1127;
  /* 0x00d0 */ class CContextPropList _properties;
  /* 0x0110 */ struct IUnknown* _pMtsContext;
  /* 0x0118 */ class CContextLife* volatile _pContextLife;
  /* 0x0120 */ class CCtxConnectionManager* _pConnectionMgr;
  union
  {
    /* 0x0000 */ class CPageAllocator s_CXAllocator;
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ unsigned long s_cInstances;
  }; /* size: 0x0068 */
}; /* size: 0x0128 */

struct tagMETAFILEPICT
{
  /* 0x0000 */ long mm;
  /* 0x0004 */ long xExt;
  /* 0x0008 */ long yExt;
  /* 0x000c */ long Padding_1128;
  /* 0x0010 */ struct HMETAFILE__* hMF;
}; /* size: 0x0018 */

struct XMLDOMDocumentEvents
{
}; /* size: 0x0008 */

typedef struct _CRYPT_HASH_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
} CRYPT_HASH_MESSAGE_PARA, *PCRYPT_HASH_MESSAGE_PARA; /* size: 0x0030 */

typedef struct _SHELLEXECUTEINFOA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const char* lpVerb;
  /* 0x0018 */ const char* lpFile;
  /* 0x0020 */ const char* lpParameters;
  /* 0x0028 */ const char* lpDirectory;
  /* 0x0030 */ int nShow;
  /* 0x0034 */ long Padding_1129;
  /* 0x0038 */ struct HINSTANCE__* hInstApp;
  /* 0x0040 */ void* lpIDList;
  /* 0x0048 */ const char* lpClass;
  /* 0x0050 */ struct HKEY__* hkeyClass;
  /* 0x0058 */ unsigned long dwHotKey;
  /* 0x005c */ long Padding_1130;
  union
  {
    /* 0x0060 */ void* hIcon;
    /* 0x0060 */ void* hMonitor;
  }; /* size: 0x0008 */
  /* 0x0068 */ void* hProcess;
} SHELLEXECUTEINFOA, *PSHELLEXECUTEINFOA; /* size: 0x0070 */

struct SHA256_CTX
{
  union
  {
    /* 0x0000 */ unsigned __int64 state64[4];
    /* 0x0000 */ unsigned long state[8];
  }; /* size: 0x0020 */
  /* 0x0020 */ unsigned long count[2];
  /* 0x0028 */ unsigned char buffer[64];
}; /* size: 0x0068 */

typedef struct _IMAGE_TLS_DIRECTORY64
{
  /* 0x0000 */ unsigned __int64 StartAddressOfRawData;
  /* 0x0008 */ unsigned __int64 EndAddressOfRawData;
  /* 0x0010 */ unsigned __int64 AddressOfIndex;
  /* 0x0018 */ unsigned __int64 AddressOfCallBacks;
  /* 0x0020 */ unsigned long SizeOfZeroFill;
  /* 0x0024 */ unsigned long Characteristics;
} IMAGE_TLS_DIRECTORY64, *PIMAGE_TLS_DIRECTORY64; /* size: 0x0028 */

typedef struct __midl_frag44_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag44_t, *P_midl_frag44_t; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION
{
  /* 0x0000 */ unsigned long ProcessorCount;
  /* 0x0004 */ unsigned long Offsets[1];
} SYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION, *PSYSTEM_PROCESSOR_PERFORMANCE_DISTRIBUTION; /* size: 0x0008 */

typedef struct _CERT_BASIC_CONSTRAINTS_INFO
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB SubjectType;
  /* 0x0018 */ int fPathLenConstraint;
  /* 0x001c */ unsigned long dwPathLenConstraint;
  /* 0x0020 */ unsigned long cSubtreesConstraint;
  /* 0x0024 */ long Padding_1131;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB* rgSubtreesConstraint;
} CERT_BASIC_CONSTRAINTS_INFO, *PCERT_BASIC_CONSTRAINTS_INFO; /* size: 0x0030 */

struct tagHELPWININFOW
{
  /* 0x0000 */ int wStructSize;
  /* 0x0004 */ int x;
  /* 0x0008 */ int y;
  /* 0x000c */ int dx;
  /* 0x0010 */ int dy;
  /* 0x0014 */ int wMax;
  /* 0x0018 */ wchar_t rgchMember[2];
}; /* size: 0x001c */

typedef struct _CLASS_MEDIA_CHANGE_CONTEXT
{
  /* 0x0000 */ unsigned long MediaChangeCount;
  /* 0x0004 */ unsigned long NewState;
} CLASS_MEDIA_CHANGE_CONTEXT, *PCLASS_MEDIA_CHANGE_CONTEXT; /* size: 0x0008 */

typedef struct __midl_frag684_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag684_t, *P_midl_frag684_t; /* size: 0x0038 */

struct tagEMRBITBLT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ long xDest;
  /* 0x001c */ long yDest;
  /* 0x0020 */ long cxDest;
  /* 0x0024 */ long cyDest;
  /* 0x0028 */ unsigned long dwRop;
  /* 0x002c */ long xSrc;
  /* 0x0030 */ long ySrc;
  /* 0x0034 */ struct tagXFORM xformSrc;
  /* 0x004c */ unsigned long crBkColorSrc;
  /* 0x0050 */ unsigned long iUsageSrc;
  /* 0x0054 */ unsigned long offBmiSrc;
  /* 0x0058 */ unsigned long cbBmiSrc;
  /* 0x005c */ unsigned long offBitsSrc;
  /* 0x0060 */ unsigned long cbBitsSrc;
}; /* size: 0x0064 */

class Microsoft::WRL::Details::Nil
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_VERIFIER_CANCELLATION_INFORMATION
{
  /* 0x0000 */ unsigned long CancelProbability;
  /* 0x0004 */ unsigned long CancelThreshold;
  /* 0x0008 */ unsigned long CompletionThreshold;
  /* 0x000c */ unsigned long CancellationVerifierDisabled;
  /* 0x0010 */ unsigned long AvailableIssues;
  /* 0x0014 */ long Padding_1132;
  /* 0x0018 */ struct _SYSTEM_VERIFIER_ISSUE Issues[128];
} SYSTEM_VERIFIER_CANCELLATION_INFORMATION, *PSYSTEM_VERIFIER_CANCELLATION_INFORMATION; /* size: 0x1018 */

typedef struct _SYSTEM_SESSION_POOLTAG_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NextEntryOffset;
  /* 0x0008 */ unsigned long SessionId;
  /* 0x000c */ unsigned long Count;
  /* 0x0010 */ struct _SYSTEM_POOLTAG TagInfo[1];
} SYSTEM_SESSION_POOLTAG_INFORMATION, *PSYSTEM_SESSION_POOLTAG_INFORMATION; /* size: 0x0038 */

struct _PSP;

typedef struct _OCSP_REQUEST_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1133;
  /* 0x0008 */ struct _CERT_ALT_NAME_ENTRY* pRequestorName;
  /* 0x0010 */ unsigned long cRequestEntry;
  /* 0x0014 */ long Padding_1134;
  /* 0x0018 */ struct _OCSP_REQUEST_ENTRY* rgRequestEntry;
  /* 0x0020 */ unsigned long cExtension;
  /* 0x0024 */ long Padding_1135;
  /* 0x0028 */ struct _CERT_EXTENSION* rgExtension;
} OCSP_REQUEST_INFO, *POCSP_REQUEST_INFO; /* size: 0x0030 */

class Microsoft::WRL::Details::DontUseNewUseMake
{
}; /* size: 0x0001 */

struct tagAUDIODESCRIPTION
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int Enabled;
  /* 0x0008 */ unsigned long Locale;
}; /* size: 0x000c */

typedef struct _IMAGE_FUNCTION_ENTRY
{
  /* 0x0000 */ unsigned long StartingAddress;
  /* 0x0004 */ unsigned long EndingAddress;
  /* 0x0008 */ unsigned long EndOfPrologue;
} IMAGE_FUNCTION_ENTRY, *PIMAGE_FUNCTION_ENTRY; /* size: 0x000c */

class CClassCache::CpUnkMoniker
{
  /* 0x0000 */ long Padding_1136[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_1137;
  /* 0x0010 */ struct IUnknown* _pUnk;
}; /* size: 0x0018 */

struct tagMCI_SYSINFO_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ wchar_t* lpstrReturn;
  /* 0x0010 */ unsigned long dwRetSize;
  /* 0x0014 */ unsigned long dwNumber;
  /* 0x0018 */ unsigned int wDeviceType;
}; /* size: 0x001c */

typedef struct __midl_frag82_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag82_t, *P_midl_frag82_t; /* size: 0x0068 */

struct tagRPC_CALL_ATTRIBUTES_V3_A
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_1138;
  /* 0x0010 */ unsigned char* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_1139;
  /* 0x0020 */ unsigned char* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ int KernelModeCaller;
  /* 0x0038 */ unsigned long ProtocolSequence;
  /* 0x003c */ unsigned long IsClientLocal;
  /* 0x0040 */ void* ClientPID;
  /* 0x0048 */ unsigned long CallStatus;
  /* 0x004c */ enum tagRpcCallType CallType;
  /* 0x0050 */ struct _RPC_CALL_LOCAL_ADDRESS_V1* CallLocalAddress;
  /* 0x0058 */ unsigned short OpNum;
  /* 0x005a */ char Padding_1140[2];
  /* 0x005c */ struct _GUID InterfaceUuid;
  /* 0x006c */ unsigned long ClientIdentifierBufferLength;
  /* 0x0070 */ unsigned char* ClientIdentifier;
}; /* size: 0x0078 */

typedef struct _SHNAMEMAPPINGA
{
  /* 0x0000 */ char* pszOldPath;
  /* 0x0008 */ char* pszNewPath;
  /* 0x0010 */ int cchOldPath;
  /* 0x0014 */ int cchNewPath;
} SHNAMEMAPPINGA, *PSHNAMEMAPPINGA; /* size: 0x0018 */

struct IInitActivationPropertiesIn
{
}; /* size: 0x0008 */

typedef struct _MONITOR_INFO_1W
{
  /* 0x0000 */ wchar_t* pName;
} MONITOR_INFO_1W, *PMONITOR_INFO_1W; /* size: 0x0008 */

typedef struct _EXCEPTION_RECORD64
{
  /* 0x0000 */ long ExceptionCode;
  /* 0x0004 */ unsigned long ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned long NumberParameters;
  /* 0x001c */ unsigned long __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} EXCEPTION_RECORD64, *PEXCEPTION_RECORD64; /* size: 0x0098 */

typedef struct _FILE_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long Action;
  /* 0x0008 */ unsigned long FileNameLength;
  /* 0x000c */ wchar_t FileName[1];
  /* 0x000e */ char __PADDING__[2];
} FILE_NOTIFY_INFORMATION, *PFILE_NOTIFY_INFORMATION; /* size: 0x0010 */

class CClassCache::IMiniMoniker
{
}; /* size: 0x0008 */

struct tagInterfaceData
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1024];
}; /* size: 0x0404 */

struct tagMIXERCONTROLW
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwControlID;
  /* 0x0008 */ unsigned long dwControlType;
  /* 0x000c */ unsigned long fdwControl;
  /* 0x0010 */ unsigned long cMultipleItems;
  /* 0x0014 */ wchar_t szShortName[16];
  /* 0x0034 */ wchar_t szName[64];
  union
  {
    union
    {
      struct
      {
        /* 0x00b4 */ long lMinimum;
        /* 0x00b8 */ long lMaximum;
      }; /* size: 0x0008 */
      struct
      {
        /* 0x00b4 */ unsigned long dwMinimum;
        /* 0x00b8 */ unsigned long dwMaximum;
      }; /* size: 0x0008 */
      /* 0x00b4 */ unsigned long dwReserved[6];
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Bounds;
  union
  {
    union
    {
      /* 0x00cc */ unsigned long cSteps;
      /* 0x00cc */ unsigned long cbCustomData;
      /* 0x00cc */ unsigned long dwReserved[6];
    }; /* size: 0x0018 */
  } /* size: 0x0018 */ Metrics;
}; /* size: 0x00e4 */

typedef struct _CRYPT_TIMESTAMP_PARA
{
  /* 0x0000 */ const char* pszTSAPolicyId;
  /* 0x0008 */ int fRequestCerts;
  /* 0x000c */ long Padding_1141;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Nonce;
  /* 0x0020 */ unsigned long cExtension;
  /* 0x0024 */ long Padding_1142;
  /* 0x0028 */ struct _CERT_EXTENSION* rgExtension;
} CRYPT_TIMESTAMP_PARA, *PCRYPT_TIMESTAMP_PARA; /* size: 0x0030 */

typedef struct _RTL_CRITICAL_SECTION32
{
  /* 0x0000 */ unsigned long DebugInfo;
  /* 0x0004 */ long LockCount;
  /* 0x0008 */ long RecursionCount;
  /* 0x000c */ unsigned long OwningThread;
  /* 0x0010 */ unsigned long LockSemaphore;
  /* 0x0014 */ unsigned long SpinCount;
} RTL_CRITICAL_SECTION32, *PRTL_CRITICAL_SECTION32; /* size: 0x0018 */

typedef struct _CERT_AUTHORITY_KEY_ID2_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CERT_ALT_NAME_INFO AuthorityCertIssuer;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB AuthorityCertSerialNumber;
} CERT_AUTHORITY_KEY_ID2_INFO, *PCERT_AUTHORITY_KEY_ID2_INFO; /* size: 0x0030 */

typedef struct _STORAGE_DESCRIPTOR_HEADER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
} STORAGE_DESCRIPTOR_HEADER, *PSTORAGE_DESCRIPTOR_HEADER; /* size: 0x0008 */

typedef struct _SYSTEM_HANDLE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfHandles;
  /* 0x0004 */ long Padding_1143;
  /* 0x0008 */ struct _SYSTEM_HANDLE_TABLE_ENTRY_INFO Handles[1];
} SYSTEM_HANDLE_INFORMATION, *PSYSTEM_HANDLE_INFORMATION; /* size: 0x0020 */

typedef struct _FSCTL_OFFLOAD_WRITE_INPUT
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned __int64 FileOffset;
  /* 0x0010 */ unsigned __int64 CopyLength;
  /* 0x0018 */ unsigned __int64 TransferOffset;
  /* 0x0020 */ unsigned char Token[512];
} FSCTL_OFFLOAD_WRITE_INPUT, *PFSCTL_OFFLOAD_WRITE_INPUT; /* size: 0x0220 */

struct SIterBuffer
{
  /* 0x0000 */ class CDfName dfnName;
  /* 0x0042 */ char Padding_1144[2];
  /* 0x0044 */ unsigned long type;
}; /* size: 0x0048 */

typedef struct _NAME_BUFFER
{
  /* 0x0000 */ unsigned char name[16];
  /* 0x0010 */ unsigned char name_num;
  /* 0x0011 */ unsigned char name_flags;
} NAME_BUFFER, *PNAME_BUFFER; /* size: 0x0012 */

typedef struct _FILE_REGION_INFO
{
  /* 0x0000 */ __int64 FileOffset;
  /* 0x0008 */ __int64 Length;
  /* 0x0010 */ unsigned long Usage;
  /* 0x0014 */ unsigned long Reserved;
} FILE_REGION_INFO, *PFILE_REGION_INFO; /* size: 0x0018 */

typedef struct _FILE_REGION_OUTPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TotalRegionEntryCount;
  /* 0x0008 */ unsigned long RegionEntryCount;
  /* 0x000c */ unsigned long Reserved;
  /* 0x0010 */ struct _FILE_REGION_INFO Region[1];
} FILE_REGION_OUTPUT, *PFILE_REGION_OUTPUT; /* size: 0x0028 */

typedef struct __midl_frag16_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag16_t, *P_midl_frag16_t; /* size: 0x0010 */

struct ClassicSTAState
{
  union
  {
    /* 0x0000 */ BOOL s_bASTACallReentrancyGuardEnabledByDefault;
    /* 0x0000 */ class Microsoft::WRL::Wrappers::SRWLock lock;
  }; /* size: 0x0008 */
  /* 0x0008 */ class IMessageParamList aMessageParamLists[8];
  struct /* bitfield */
  {
    /* 0x0088 */ BOOL bASTACallReentrancyGuardExplicit : 1; /* bit position: 0 */
    /* 0x0088 */ BOOL bHasMessageFilter : 1; /* bit position: 1 */
  }; /* bitfield */
  /* 0x0089 */ char __PADDING__[7];
}; /* size: 0x0090 */

class CStdIdentity
{
  /* 0x0000 */ long Padding_1145[72];
  /* 0x0120 */ class CStdIdentity::CInternalUnk m_InternalUnk;
  /* 0x0130 */ unsigned long m_refs;
  /* 0x0134 */ unsigned long m_flags;
  /* 0x0138 */ struct IUnknown* m_pUnkOuter;
  /* 0x0140 */ struct IUnknown* m_pUnkControl;
  /* 0x0148 */ void* m_pVtableAddress;
  /* 0x0150 */ struct IExternalConnection* m_pIEC;
  /* 0x0158 */ struct _GUID m_moid;
  /* 0x0168 */ unsigned long m_dwAptId;
  /* 0x016c */ long m_cStrongRefs;
  /* 0x0170 */ long m_cWeakRefs;
  /* 0x0174 */ long m_cInMarshalsInCall;
  /* 0x0178 */ long m_cOutMarshalsInSameProcessCall;
  /* 0x017c */ long m_cSameProcessDirectMarshals;
  /* 0x0180 */ HRESULT m_ConnStatus;
  /* 0x0184 */ long Padding_1146;
  /* 0x0188 */ void* m_pVoid;
}; /* size: 0x0190 */

struct tagEMRSETWORLDTRANSFORM
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct tagXFORM xform;
}; /* size: 0x0020 */

typedef struct _APPLICATIONLAUNCH_SETTING_VALUE
{
  /* 0x0000 */ union _LARGE_INTEGER ActivationTime;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long ButtonInstanceID;
} APPLICATIONLAUNCH_SETTING_VALUE, *PAPPLICATIONLAUNCH_SETTING_VALUE; /* size: 0x0010 */

class CUrlMonWrapper
{
  /* 0x0000 */ long Padding_1147[2];
  /* 0x0008 */ long _cRef;
}; /* size: 0x0010 */

typedef struct _PERFORMANCE_DATA
{
  /* 0x0000 */ unsigned short Size;
  /* 0x0002 */ unsigned char Version;
  /* 0x0003 */ unsigned char HwCountersCount;
  /* 0x0004 */ unsigned long ContextSwitchCount;
  /* 0x0008 */ unsigned __int64 WaitReasonBitMap;
  /* 0x0010 */ unsigned __int64 CycleTime;
  /* 0x0018 */ unsigned long RetryCount;
  /* 0x001c */ unsigned long Reserved;
  /* 0x0020 */ struct _HARDWARE_COUNTER_DATA HwCounters[16];
} PERFORMANCE_DATA, *PPERFORMANCE_DATA; /* size: 0x0120 */

struct IClassClassicInfo2
{
}; /* size: 0x0008 */

typedef struct _PRINTER_INFO_9W
{
  /* 0x0000 */ struct _devicemodeW* pDevMode;
} PRINTER_INFO_9W, *PPRINTER_INFO_9W; /* size: 0x0008 */

typedef struct _BOOT_AREA_INFO
{
  /* 0x0000 */ unsigned long BootSectorCount;
  /* 0x0004 */ long Padding_1148;
  /* 0x0008 */ struct
  {
    /* 0x0008 */ union _LARGE_INTEGER Offset;
  } /* size: 0x0008 */ BootSectors[2];
} BOOT_AREA_INFO, *PBOOT_AREA_INFO; /* size: 0x0018 */

typedef struct __midl_frag55_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag55_t, *P_midl_frag55_t; /* size: 0x0058 */

typedef struct _HARDERROR_MSG
{
  /* 0x0000 */ struct _PORT_MESSAGE h;
  /* 0x0028 */ long Status;
  /* 0x002c */ long Padding_1149;
  /* 0x0030 */ union _LARGE_INTEGER ErrorTime;
  /* 0x0038 */ unsigned long ValidResponseOptions;
  /* 0x003c */ unsigned long Response;
  /* 0x0040 */ unsigned long NumberOfParameters;
  /* 0x0044 */ unsigned long UnicodeStringParameterMask;
  /* 0x0048 */ unsigned __int64 Parameters[5];
} HARDERROR_MSG, *PHARDERROR_MSG; /* size: 0x0070 */

struct tagICONMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iHorzSpacing;
  /* 0x0008 */ int iVertSpacing;
  /* 0x000c */ int iTitleWrap;
  /* 0x0010 */ struct tagLOGFONTW lfFont;
}; /* size: 0x006c */

typedef struct _CONSOLE_SCREEN_BUFFER_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ struct _COORD dwSize;
  /* 0x0008 */ struct _COORD dwCursorPosition;
  /* 0x000c */ unsigned short wAttributes;
  /* 0x000e */ struct _SMALL_RECT srWindow;
  /* 0x0016 */ struct _COORD dwMaximumWindowSize;
  /* 0x001a */ unsigned short wPopupAttributes;
  /* 0x001c */ int bFullscreenSupported;
  /* 0x0020 */ unsigned long ColorTable[16];
} CONSOLE_SCREEN_BUFFER_INFOEX, *PCONSOLE_SCREEN_BUFFER_INFOEX; /* size: 0x0060 */

class CObjrefMonikerFactory
{
}; /* size: 0x0010 */

typedef struct __midl_frag369_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag369_t, *P_midl_frag369_t; /* size: 0x0008 */

struct IInterfaceInfo
{
}; /* size: 0x0008 */

struct SPreDirEntry
{
  /* 0x0000 */ class CDfName _dfn;
  /* 0x0042 */ unsigned char _mse;
  /* 0x0043 */ unsigned char _bflags;
  /* 0x0044 */ unsigned long _sidLeftSib;
  /* 0x0048 */ unsigned long _sidRightSib;
  /* 0x004c */ unsigned long _sidChild;
  /* 0x0050 */ struct _GUID _clsId;
  /* 0x0060 */ unsigned long _dwUserFlags;
  /* 0x0064 */ struct _FILETIME _time[2];
  /* 0x0074 */ unsigned long _sectStart;
  /* 0x0078 */ union _ULARGE_INTEGER _ulSize;
}; /* size: 0x0080 */

typedef struct _FILE_IO_PRIORITY_HINT_INFORMATION
{
  /* 0x0000 */ enum _IO_PRIORITY_HINT PriorityHint;
} FILE_IO_PRIORITY_HINT_INFORMATION, *PFILE_IO_PRIORITY_HINT_INFORMATION; /* size: 0x0004 */

typedef struct _SECTION_IMAGE_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 TransferAddress;
  /* 0x0008 */ unsigned long ZeroBits;
  /* 0x000c */ long Padding_1150;
  /* 0x0010 */ unsigned __int64 MaximumStackSize;
  /* 0x0018 */ unsigned __int64 CommittedStackSize;
  /* 0x0020 */ unsigned long SubSystemType;
  union
  {
    struct
    {
      /* 0x0024 */ unsigned short SubSystemMinorVersion;
      /* 0x0026 */ unsigned short SubSystemMajorVersion;
    }; /* size: 0x0004 */
    /* 0x0024 */ unsigned long SubSystemVersion;
  }; /* size: 0x0004 */
  /* 0x0028 */ unsigned long GpValue;
  /* 0x002c */ unsigned short ImageCharacteristics;
  /* 0x002e */ unsigned short DllCharacteristics;
  /* 0x0030 */ unsigned short Machine;
  /* 0x0032 */ unsigned char ImageContainsCode;
  union
  {
    /* 0x0033 */ unsigned char ImageFlags;
    struct /* bitfield */
    {
      /* 0x0033 */ unsigned char ComPlus : 1; /* bit position: 0 */
      /* 0x0033 */ unsigned char ImageDynamicallyRelocated : 1; /* bit position: 1 */
      /* 0x0033 */ unsigned char Reserved : 6; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x0034 */ unsigned long LoaderFlags;
  /* 0x0038 */ unsigned long ImageFileSize;
  /* 0x003c */ unsigned long CheckSum;
} SECTION_IMAGE_INFORMATION64, *PSECTION_IMAGE_INFORMATION64; /* size: 0x0040 */

typedef struct _STARTUPINFOEXA
{
  /* 0x0000 */ struct _STARTUPINFOA StartupInfo;
  /* 0x0068 */ struct _PROC_THREAD_ATTRIBUTE_LIST* lpAttributeList;
} STARTUPINFOEXA, *PSTARTUPINFOEXA; /* size: 0x0070 */

struct IOleLink
{
}; /* size: 0x0008 */

typedef struct __midl_frag59_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag59_t, *P_midl_frag59_t; /* size: 0x0010 */

typedef struct _CONSOLE_FONT_INFOEX
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long nFont;
  /* 0x0008 */ struct _COORD dwFontSize;
  /* 0x000c */ unsigned int FontFamily;
  /* 0x0010 */ unsigned int FontWeight;
  /* 0x0014 */ wchar_t FaceName[32];
} CONSOLE_FONT_INFOEX, *PCONSOLE_FONT_INFOEX; /* size: 0x0054 */

typedef struct _NDR64_ENCAPSULATED_UNION
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned char Flags;
  /* 0x0003 */ unsigned char SwitchType;
  /* 0x0004 */ unsigned int MemoryOffset;
  /* 0x0008 */ unsigned int MemorySize;
  /* 0x000c */ unsigned int Reserved;
} NDR64_ENCAPSULATED_UNION, *PNDR64_ENCAPSULATED_UNION; /* size: 0x0010 */

typedef struct _NDR64_UNION_ARM_SELECTOR
{
  /* 0x0000 */ unsigned char Reserved1;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short Reserved2;
  /* 0x0004 */ unsigned int Arms;
} NDR64_UNION_ARM_SELECTOR, *PNDR64_UNION_ARM_SELECTOR; /* size: 0x0008 */

typedef struct _NDR64_UNION_ARM
{
  /* 0x0000 */ __int64 CaseValue;
  /* 0x0008 */ const void* Type;
  /* 0x0010 */ unsigned int Reserved;
  /* 0x0014 */ long __PADDING__[1];
} NDR64_UNION_ARM, *PNDR64_UNION_ARM; /* size: 0x0018 */

typedef struct __midl_frag80_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ struct _NDR64_UNION_ARM frag6;
  /* 0x0078 */ struct _NDR64_UNION_ARM frag7;
  /* 0x0090 */ struct _NDR64_UNION_ARM frag8;
  /* 0x00a8 */ struct _NDR64_UNION_ARM frag9;
  /* 0x00c0 */ struct _NDR64_UNION_ARM frag10;
  /* 0x00d8 */ struct _NDR64_UNION_ARM frag11;
  /* 0x00f0 */ struct _NDR64_UNION_ARM frag12;
  /* 0x0108 */ unsigned int frag13;
  /* 0x010c */ long __PADDING__[1];
} _midl_frag80_t, *P_midl_frag80_t; /* size: 0x0110 */

struct FRAME_RemoteInvoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ struct _GUID* piid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned long dwFlags;
  /* 0x0024 */ char __pad4[4];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* puArgErr;
  /* 0x0048 */ unsigned int cVarRef;
  /* 0x004c */ char __pad9[4];
  /* 0x0050 */ unsigned int* rgVarRefIdx;
  /* 0x0058 */ struct tagVARIANT* rgVarRef;
}; /* size: 0x0060 */

struct DISPATCH_CLIENT_FRAME
{
  /* 0x0000 */ long Padding_1151[22];
  /* 0x0058 */ int m_fDoneProxyPrecheck;
  /* 0x005c */ int m_fIsCopy;
  /* 0x0060 */ struct FRAME_RemoteInvoke m_remoteFrame;
  /* 0x00c0 */ struct tagDISPPARAMS m_dispParams;
  /* 0x00d8 */ struct tagVARIANT m_varResult;
  /* 0x00f0 */ struct tagEXCEPINFO m_excepInfo;
  /* 0x0130 */ unsigned int m_uArgErr;
  /* 0x0134 */ unsigned int m_aVarRefIdx[16];
  /* 0x0174 */ long Padding_1152;
  /* 0x0178 */ struct tagVARIANT m_aVarRef[16];
  /* 0x02f8 */ struct tagVARIANT m_aVarArg[16];
  /* 0x0478 */ unsigned char* m_pBuffer;
}; /* size: 0x0480 */

typedef struct _FILE_IO_COMPLETION_NOTIFICATION_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
} FILE_IO_COMPLETION_NOTIFICATION_INFORMATION, *PFILE_IO_COMPLETION_NOTIFICATION_INFORMATION; /* size: 0x0004 */

typedef struct _JOURNAL_SET_KEY_USER_FLAGS_INFORMATION
{
  /* 0x0000 */ enum _JOURNAL_CHANGE_INFORMATION_CLASS Action;
  /* 0x0004 */ long Padding_1153;
  /* 0x0008 */ unsigned __int64 RecordNumber;
  /* 0x0010 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0018 */ struct _UNICODE_STRING KeyPathName;
  /* 0x0028 */ unsigned long OldFlags;
  /* 0x002c */ unsigned long NewFlags;
} JOURNAL_SET_KEY_USER_FLAGS_INFORMATION, *PJOURNAL_SET_KEY_USER_FLAGS_INFORMATION; /* size: 0x0030 */

struct tagMCI_SYSINFO_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ char* lpstrReturn;
  /* 0x0010 */ unsigned long dwRetSize;
  /* 0x0014 */ unsigned long dwNumber;
  /* 0x0018 */ unsigned int wDeviceType;
}; /* size: 0x001c */

typedef struct __midl_frag195_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag195_t, *P_midl_frag195_t; /* size: 0x000c */

struct ASSOCIATIONELEMENT
{
  /* 0x0000 */ enum ASSOCCLASS ac;
  /* 0x0004 */ long Padding_1154;
  /* 0x0008 */ struct HKEY__* hkClass;
  /* 0x0010 */ const wchar_t* pszClass;
}; /* size: 0x0018 */

struct tagEMRRESTOREDC
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ long iRelative;
}; /* size: 0x000c */

struct tagGUITHREADINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HWND__* hwndActive;
  /* 0x0010 */ struct HWND__* hwndFocus;
  /* 0x0018 */ struct HWND__* hwndCapture;
  /* 0x0020 */ struct HWND__* hwndMenuOwner;
  /* 0x0028 */ struct HWND__* hwndMoveSize;
  /* 0x0030 */ struct HWND__* hwndCaret;
  /* 0x0038 */ struct tagRECT rcCaret;
}; /* size: 0x0048 */

struct Windows::AutoPODBase<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >::is_pointer<_UNICODE_STRING>
{
}; /* size: 0x0001 */

struct IOleItemContainer
{
}; /* size: 0x0008 */

typedef struct __midl_frag368_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag368_t, *P_midl_frag368_t; /* size: 0x000c */

typedef struct _UMS_CREATE_THREAD_ATTRIBUTES
{
  /* 0x0000 */ unsigned long UmsVersion;
  /* 0x0004 */ long Padding_1155;
  union
  {
    /* 0x0008 */ struct _RTL_UMS_CONTEXT* RtlUmsContext;
    /* 0x0008 */ void* UmsContext;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0010 */ struct _RTL_UMS_COMPLETION_LIST* RtlUmsCompletionList;
    /* 0x0010 */ void* UmsCompletionList;
  }; /* size: 0x0008 */
} UMS_CREATE_THREAD_ATTRIBUTES, *PUMS_CREATE_THREAD_ATTRIBUTES; /* size: 0x0018 */

typedef struct _JOB_INFO_1A
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ long Padding_1156;
  /* 0x0008 */ char* pPrinterName;
  /* 0x0010 */ char* pMachineName;
  /* 0x0018 */ char* pUserName;
  /* 0x0020 */ char* pDocument;
  /* 0x0028 */ char* pDatatype;
  /* 0x0030 */ char* pStatus;
  /* 0x0038 */ unsigned long Status;
  /* 0x003c */ unsigned long Priority;
  /* 0x0040 */ unsigned long Position;
  /* 0x0044 */ unsigned long TotalPages;
  /* 0x0048 */ unsigned long PagesPrinted;
  /* 0x004c */ struct _SYSTEMTIME Submitted;
  /* 0x005c */ long __PADDING__[1];
} JOB_INFO_1A, *PJOB_INFO_1A; /* size: 0x0060 */

struct IHttpNegotiate2
{
}; /* size: 0x0008 */

typedef struct _FILE_ALLOCATION_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER AllocationSize;
} FILE_ALLOCATION_INFORMATION, *PFILE_ALLOCATION_INFORMATION; /* size: 0x0008 */

struct HTASK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagCURSORINFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ struct HICON__* hCursor;
  /* 0x0010 */ struct tagPOINT ptScreenPos;
}; /* size: 0x0018 */

typedef struct _RTL_RESOURCE
{
  /* 0x0000 */ struct _RTL_CRITICAL_SECTION CriticalSection;
  /* 0x0028 */ void* SharedSemaphore;
  /* 0x0030 */ volatile unsigned long NumberOfWaitingShared;
  /* 0x0034 */ long Padding_1157;
  /* 0x0038 */ void* ExclusiveSemaphore;
  /* 0x0040 */ volatile unsigned long NumberOfWaitingExclusive;
  /* 0x0044 */ volatile long NumberOfActive;
  /* 0x0048 */ void* ExclusiveOwnerThread;
  /* 0x0050 */ unsigned long Flags;
  /* 0x0054 */ long Padding_1158;
  /* 0x0058 */ struct _RTL_CRITICAL_SECTION_DEBUG* DebugInfo;
} RTL_RESOURCE, *PRTL_RESOURCE; /* size: 0x0060 */

struct tagENUMLOGFONTEXDVW
{
  /* 0x0000 */ struct tagENUMLOGFONTEXW elfEnumLogfontEx;
  /* 0x015c */ struct tagDESIGNVECTOR elfDesignVector;
}; /* size: 0x01a4 */

struct REFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ByteCount;
  /* 0x0004 */ unsigned long MajorVersion;
  /* 0x0008 */ unsigned long MinorVersion;
  /* 0x000c */ unsigned long BytesPerPhysicalSector;
  /* 0x0010 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0018 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0020 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0028 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0030 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0038 */ unsigned long BytesPerSector;
  /* 0x003c */ unsigned long BytesPerCluster;
  /* 0x0040 */ union _LARGE_INTEGER MaximumSizeOfResidentFile;
  /* 0x0048 */ union _LARGE_INTEGER Reserved[10];
}; /* size: 0x0098 */

typedef struct _EXCEPTION_POINTERS
{
  /* 0x0000 */ struct _EXCEPTION_RECORD* ExceptionRecord;
  /* 0x0008 */ struct _CONTEXT* ContextRecord;
} EXCEPTION_POINTERS, *PEXCEPTION_POINTERS; /* size: 0x0010 */

typedef union _PROCESS_AFFINITY_UPDATE_MODE
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long EnableAutoUpdate : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long Permanent : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long Reserved : 30; /* bit position: 2 */
    }; /* bitfield */
  }; /* size: 0x0004 */
} PROCESS_AFFINITY_UPDATE_MODE, *PPROCESS_AFFINITY_UPDATE_MODE; /* size: 0x0004 */

typedef struct _SD_CHANGE_MACHINE_SID_OUTPUT
{
  /* 0x0000 */ unsigned __int64 NumSDChangedSuccess;
  /* 0x0008 */ unsigned __int64 NumSDChangedFail;
  /* 0x0010 */ unsigned __int64 NumSDUnused;
  /* 0x0018 */ unsigned __int64 NumSDTotal;
  /* 0x0020 */ unsigned __int64 NumMftSDChangedSuccess;
  /* 0x0028 */ unsigned __int64 NumMftSDChangedFail;
  /* 0x0030 */ unsigned __int64 NumMftSDTotal;
} SD_CHANGE_MACHINE_SID_OUTPUT, *PSD_CHANGE_MACHINE_SID_OUTPUT; /* size: 0x0038 */

class CHeapHeader
{
  /* 0x0000 */ unsigned __int64 _ulFirstFree;
  /* 0x0008 */ unsigned __int64 _ulAllocedBlocks;
  /* 0x0010 */ int _fIsCompacted;
  /* 0x0014 */ unsigned long _dfLuid;
}; /* size: 0x0018 */

struct Windows::ErrorHandling::_RTL_CALL_SITE
{
  /* 0x0000 */ const char* File;
  /* 0x0008 */ const char* Function;
  /* 0x0010 */ int Line;
  /* 0x0014 */ long Padding_1159;
  /* 0x0018 */ const char* Expression;
}; /* size: 0x0020 */

typedef struct __midl_frag288_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag288_t, *P_midl_frag288_t; /* size: 0x000c */

typedef struct _SYMBOL_INFO_PACKAGE
{
  /* 0x0000 */ struct _SYMBOL_INFO si;
  /* 0x0058 */ char name[2001];
  /* 0x0829 */ char __PADDING__[7];
} SYMBOL_INFO_PACKAGE, *PSYMBOL_INFO_PACKAGE; /* size: 0x0830 */

typedef union _SE_SID
{
  union
  {
    /* 0x0000 */ struct _SID Sid;
    /* 0x0000 */ unsigned char Buffer[68];
  }; /* size: 0x0044 */
} SE_SID, *PSE_SID; /* size: 0x0044 */

typedef struct _OBJECT_TYPE_INFORMATION
{
  /* 0x0000 */ struct _UNICODE_STRING TypeName;
  /* 0x0010 */ unsigned long TotalNumberOfObjects;
  /* 0x0014 */ unsigned long TotalNumberOfHandles;
  /* 0x0018 */ unsigned long TotalPagedPoolUsage;
  /* 0x001c */ unsigned long TotalNonPagedPoolUsage;
  /* 0x0020 */ unsigned long TotalNamePoolUsage;
  /* 0x0024 */ unsigned long TotalHandleTableUsage;
  /* 0x0028 */ unsigned long HighWaterNumberOfObjects;
  /* 0x002c */ unsigned long HighWaterNumberOfHandles;
  /* 0x0030 */ unsigned long HighWaterPagedPoolUsage;
  /* 0x0034 */ unsigned long HighWaterNonPagedPoolUsage;
  /* 0x0038 */ unsigned long HighWaterNamePoolUsage;
  /* 0x003c */ unsigned long HighWaterHandleTableUsage;
  /* 0x0040 */ unsigned long InvalidAttributes;
  /* 0x0044 */ struct _GENERIC_MAPPING GenericMapping;
  /* 0x0054 */ unsigned long ValidAccessMask;
  /* 0x0058 */ unsigned char SecurityRequired;
  /* 0x0059 */ unsigned char MaintainHandleCount;
  /* 0x005a */ unsigned char TypeIndex;
  /* 0x005b */ char ReservedByte;
  /* 0x005c */ unsigned long PoolType;
  /* 0x0060 */ unsigned long DefaultPagedPoolCharge;
  /* 0x0064 */ unsigned long DefaultNonPagedPoolCharge;
} OBJECT_TYPE_INFORMATION, *POBJECT_TYPE_INFORMATION; /* size: 0x0068 */

typedef struct _REASSIGN_BLOCKS_EX
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ union _LARGE_INTEGER BlockNumber[1];
} REASSIGN_BLOCKS_EX, *PREASSIGN_BLOCKS_EX; /* size: 0x000c */

struct IDirectWriterLock
{
}; /* size: 0x0008 */

typedef struct _CM_INT13_DRIVE_PARAMETER
{
  /* 0x0000 */ unsigned short DriveSelect;
  /* 0x0002 */ unsigned long MaxCylinders;
  /* 0x0006 */ unsigned short SectorsPerTrack;
  /* 0x0008 */ unsigned short MaxHeads;
  /* 0x000a */ unsigned short NumberDrives;
} CM_INT13_DRIVE_PARAMETER, *PCM_INT13_DRIVE_PARAMETER; /* size: 0x000c */

class OpaqueDataInfo
{
  /* 0x0000 */ long Padding_1160[8];
  /* 0x0020 */ unsigned long _cOpaqueData;
  /* 0x0024 */ unsigned long _dwCollSize;
  /* 0x0028 */ struct tagOpaqueData* _pOpaqueData;
  /* 0x0030 */ void* _pAct;
}; /* size: 0x0038 */

typedef struct __midl_frag1256_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1256_t, *P_midl_frag1256_t; /* size: 0x0058 */

typedef struct _SHELLEXECUTEINFOW
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long fMask;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ const wchar_t* lpVerb;
  /* 0x0018 */ const wchar_t* lpFile;
  /* 0x0020 */ const wchar_t* lpParameters;
  /* 0x0028 */ const wchar_t* lpDirectory;
  /* 0x0030 */ int nShow;
  /* 0x0034 */ long Padding_1161;
  /* 0x0038 */ struct HINSTANCE__* hInstApp;
  /* 0x0040 */ void* lpIDList;
  /* 0x0048 */ const wchar_t* lpClass;
  /* 0x0050 */ struct HKEY__* hkeyClass;
  /* 0x0058 */ unsigned long dwHotKey;
  /* 0x005c */ long Padding_1162;
  union
  {
    /* 0x0060 */ void* hIcon;
    /* 0x0060 */ void* hMonitor;
  }; /* size: 0x0008 */
  /* 0x0068 */ void* hProcess;
} SHELLEXECUTEINFOW, *PSHELLEXECUTEINFOW; /* size: 0x0070 */

struct tagORPC_EXTENT_ARRAY
{
  /* 0x0000 */ unsigned long size;
  /* 0x0004 */ unsigned long reserved;
  /* 0x0008 */ struct tagORPC_EXTENT** extent;
}; /* size: 0x0010 */

struct IEnumConnectionsVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct IInternetBindInfo
{
}; /* size: 0x0008 */

struct tagCLEANLOCALSTORAGE
{
  /* 0x0000 */ struct IUnknown* pInterface;
  /* 0x0008 */ void* pStorage;
  /* 0x0010 */ unsigned long flags;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

struct tagHELPINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iContextType;
  /* 0x0008 */ int iCtrlId;
  /* 0x000c */ long Padding_1163;
  /* 0x0010 */ void* hItemHandle;
  /* 0x0018 */ unsigned __int64 dwContextId;
  /* 0x0020 */ struct tagPOINT MousePos;
}; /* size: 0x0028 */

typedef struct _MINIDUMP_THREAD
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int SuspendCount;
  /* 0x0008 */ unsigned int PriorityClass;
  /* 0x000c */ unsigned int Priority;
  /* 0x0010 */ unsigned __int64 Teb;
  /* 0x0018 */ struct _MINIDUMP_MEMORY_DESCRIPTOR Stack;
  /* 0x0028 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
} MINIDUMP_THREAD, *PMINIDUMP_THREAD; /* size: 0x0030 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;

struct IBindProtocol
{
}; /* size: 0x0008 */

typedef struct _SERVICE_CONTROL_STATUS_REASON_PARAMSW
{
  /* 0x0000 */ unsigned long dwReason;
  /* 0x0004 */ long Padding_1164;
  /* 0x0008 */ wchar_t* pszComment;
  /* 0x0010 */ struct _SERVICE_STATUS_PROCESS ServiceStatus;
  /* 0x0034 */ long __PADDING__[1];
} SERVICE_CONTROL_STATUS_REASON_PARAMSW, *PSERVICE_CONTROL_STATUS_REASON_PARAMSW; /* size: 0x0038 */

typedef struct _JOBOBJECT_FREEZE_INFORMATION
{
  union
  {
    /* 0x0000 */ unsigned long Flags;
    struct /* bitfield */
    {
      /* 0x0000 */ unsigned long FreezeOperation : 1; /* bit position: 0 */
      /* 0x0000 */ unsigned long FilterOperation : 1; /* bit position: 1 */
      /* 0x0000 */ unsigned long SwapOperation : 1; /* bit position: 2 */
      /* 0x0000 */ unsigned long Reserved : 29; /* bit position: 3 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x0004 */ unsigned char Freeze;
  /* 0x0005 */ unsigned char Swap;
  /* 0x0006 */ unsigned char Reserved0[2];
  /* 0x0008 */ struct _JOBOBJECT_WAKE_FILTER WakeFilter;
} JOBOBJECT_FREEZE_INFORMATION, *PJOBOBJECT_FREEZE_INFORMATION; /* size: 0x0010 */

typedef struct _IMAGE_ARCHIVE_MEMBER_HEADER
{
  /* 0x0000 */ unsigned char Name[16];
  /* 0x0010 */ unsigned char Date[12];
  /* 0x001c */ unsigned char UserID[6];
  /* 0x0022 */ unsigned char GroupID[6];
  /* 0x0028 */ unsigned char Mode[8];
  /* 0x0030 */ unsigned char Size[10];
  /* 0x003a */ unsigned char EndHeader[2];
} IMAGE_ARCHIVE_MEMBER_HEADER, *PIMAGE_ARCHIVE_MEMBER_HEADER; /* size: 0x003c */

typedef struct __midl_frag31_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag31_t, *P_midl_frag31_t; /* size: 0x0038 */

typedef struct _BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwInfoVersion;
  /* 0x0008 */ unsigned char* pbNonce;
  /* 0x0010 */ unsigned long cbNonce;
  /* 0x0014 */ long Padding_1165;
  /* 0x0018 */ unsigned char* pbAuthData;
  /* 0x0020 */ unsigned long cbAuthData;
  /* 0x0024 */ long Padding_1166;
  /* 0x0028 */ unsigned char* pbTag;
  /* 0x0030 */ unsigned long cbTag;
  /* 0x0034 */ long Padding_1167;
  /* 0x0038 */ unsigned char* pbMacContext;
  /* 0x0040 */ unsigned long cbMacContext;
  /* 0x0044 */ unsigned long cbAAD;
  /* 0x0048 */ unsigned __int64 cbData;
  /* 0x0050 */ unsigned long dwFlags;
  /* 0x0054 */ long __PADDING__[1];
} BCRYPT_AUTHENTICATED_CIPHER_MODE_INFO, *PBCRYPT_AUTHENTICATED_CIPHER_MODE_INFO; /* size: 0x0058 */

typedef struct _CERT_DSS_PARAMETERS
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB p;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB q;
  /* 0x0020 */ struct _CRYPTOAPI_BLOB g;
} CERT_DSS_PARAMETERS, *PCERT_DSS_PARAMETERS; /* size: 0x0030 */

typedef struct _TXFS_GET_TRANSACTED_VERSION
{
  /* 0x0000 */ unsigned long ThisBaseVersion;
  /* 0x0004 */ unsigned long LatestVersion;
  /* 0x0008 */ unsigned short ThisMiniVersion;
  /* 0x000a */ unsigned short FirstMiniVersion;
  /* 0x000c */ unsigned short LatestMiniVersion;
  /* 0x000e */ char __PADDING__[2];
} TXFS_GET_TRANSACTED_VERSION, *PTXFS_GET_TRANSACTED_VERSION; /* size: 0x0010 */

typedef struct __midl_frag1170_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1170_t, *P_midl_frag1170_t; /* size: 0x0058 */

typedef struct _REG_NOTIFY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ enum _REG_ACTION Action;
  /* 0x0008 */ unsigned long KeyLength;
  /* 0x000c */ wchar_t Key[1];
  /* 0x000e */ char __PADDING__[2];
} REG_NOTIFY_INFORMATION, *PREG_NOTIFY_INFORMATION; /* size: 0x0010 */

typedef struct _SC_ACTION
{
  /* 0x0000 */ enum _SC_ACTION_TYPE Type;
  /* 0x0004 */ unsigned long Delay;
} SC_ACTION, *PSC_ACTION; /* size: 0x0008 */

typedef struct __midl_frag747_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ unsigned int frag5;
  /* 0x004c */ long __PADDING__[1];
} _midl_frag747_t, *P_midl_frag747_t; /* size: 0x0050 */

typedef struct _CRYPT_PROVIDER_DEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gActionID;
  /* 0x0014 */ long Padding_1168;
  /* 0x0018 */ void* pDefPolicyCallbackData;
  /* 0x0020 */ void* pDefSIPClientData;
} CRYPT_PROVIDER_DEFUSAGE, *PCRYPT_PROVIDER_DEFUSAGE; /* size: 0x0028 */

typedef struct _SERVICE_PREFERRED_NODE_INFO
{
  /* 0x0000 */ unsigned short usPreferredNode;
  /* 0x0002 */ unsigned char fDelete;
  /* 0x0003 */ char __PADDING__[1];
} SERVICE_PREFERRED_NODE_INFO, *PSERVICE_PREFERRED_NODE_INFO; /* size: 0x0004 */

typedef struct __midl_frag25_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag25_t, *P_midl_frag25_t; /* size: 0x0008 */

typedef struct _PROCESSOR_PROFILE_CONTROL_AREA
{
  /* 0x0000 */ struct _PEBS_DS_SAVE_AREA PebsDsSaveArea;
} PROCESSOR_PROFILE_CONTROL_AREA, *PPROCESSOR_PROFILE_CONTROL_AREA; /* size: 0x0060 */

struct tagENUMTEXTMETRICW
{
  /* 0x0000 */ struct tagNEWTEXTMETRICEXW etmNewTextMetricEx;
  /* 0x0064 */ struct tagAXESLISTW etmAxesList;
}; /* size: 0x02ec */

typedef struct _REMOTE_NAME_INFOA
{
  /* 0x0000 */ char* lpUniversalName;
  /* 0x0008 */ char* lpConnectionName;
  /* 0x0010 */ char* lpRemainingPath;
} REMOTE_NAME_INFOA, *PREMOTE_NAME_INFOA; /* size: 0x0018 */

typedef struct _PRINTER_CONNECTION_INFO_1W
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_1169;
  /* 0x0008 */ wchar_t* pszDriverName;
} PRINTER_CONNECTION_INFO_1W, *PPRINTER_CONNECTION_INFO_1W; /* size: 0x0010 */

typedef struct __midl_frag1496_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1496_t, *P_midl_frag1496_t; /* size: 0x0078 */

typedef union _POWER_STATE
{
  union
  {
    /* 0x0000 */ enum _SYSTEM_POWER_STATE SystemState;
    /* 0x0000 */ enum _DEVICE_POWER_STATE DeviceState;
  }; /* size: 0x0004 */
} POWER_STATE, *PPOWER_STATE; /* size: 0x0004 */

struct tagRPC_CALL_ATTRIBUTES_V1_W
{
  /* 0x0000 */ unsigned int Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ServerPrincipalNameBufferLength;
  /* 0x000c */ long Padding_1170;
  /* 0x0010 */ unsigned short* ServerPrincipalName;
  /* 0x0018 */ unsigned long ClientPrincipalNameBufferLength;
  /* 0x001c */ long Padding_1171;
  /* 0x0020 */ unsigned short* ClientPrincipalName;
  /* 0x0028 */ unsigned long AuthenticationLevel;
  /* 0x002c */ unsigned long AuthenticationService;
  /* 0x0030 */ int NullSession;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

struct IEnumMoniker
{
}; /* size: 0x0008 */

typedef struct __midl_frag1307_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1307_t, *P_midl_frag1307_t; /* size: 0x0048 */

struct tagMONITORINFOEXA
{
  /* 0x0000 */ long Padding_1172[10];
  /* 0x0028 */ char szDevice[32];
}; /* size: 0x0048 */

typedef struct _GRADIENT_RECT
{
  /* 0x0000 */ unsigned long UpperLeft;
  /* 0x0004 */ unsigned long LowerRight;
} GRADIENT_RECT, *PGRADIENT_RECT; /* size: 0x0008 */

struct IOleWindow
{
}; /* size: 0x0008 */

typedef struct _complex
{
  /* 0x0000 */ double x;
  /* 0x0008 */ double y;
} complex, *Pcomplex; /* size: 0x0010 */

typedef struct _FILE_QUERY_ON_DISK_VOL_INFO_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER DirectoryCount;
  /* 0x0008 */ union _LARGE_INTEGER FileCount;
  /* 0x0010 */ unsigned short FsFormatMajVersion;
  /* 0x0012 */ unsigned short FsFormatMinVersion;
  /* 0x0014 */ wchar_t FsFormatName[12];
  /* 0x002c */ long Padding_1173;
  /* 0x0030 */ union _LARGE_INTEGER FormatTime;
  /* 0x0038 */ union _LARGE_INTEGER LastUpdateTime;
  /* 0x0040 */ wchar_t CopyrightInfo[34];
  /* 0x0084 */ wchar_t AbstractInfo[34];
  /* 0x00c8 */ wchar_t FormattingImplementationInfo[34];
  /* 0x010c */ wchar_t LastModifyingImplementationInfo[34];
} FILE_QUERY_ON_DISK_VOL_INFO_BUFFER, *PFILE_QUERY_ON_DISK_VOL_INFO_BUFFER; /* size: 0x0150 */

typedef struct _IMAGE_RESOURCE_DATA_ENTRY
{
  /* 0x0000 */ unsigned long OffsetToData;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long CodePage;
  /* 0x000c */ unsigned long Reserved;
} IMAGE_RESOURCE_DATA_ENTRY, *PIMAGE_RESOURCE_DATA_ENTRY; /* size: 0x0010 */

typedef struct _DEDUP_CHUNK_INFORMATION_HASH32
{
  /* 0x0000 */ unsigned long ChunkFlags;
  /* 0x0004 */ long Padding_1174;
  /* 0x0008 */ __int64 ChunkOffsetInFile;
  /* 0x0010 */ __int64 ChunkSize;
  /* 0x0018 */ unsigned char HashVal[32];
} DEDUP_CHUNK_INFORMATION_HASH32, *PDEDUP_CHUNK_INFORMATION_HASH32; /* size: 0x0038 */

typedef struct _KEY_CACHED_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long SubKeys;
  /* 0x0010 */ unsigned long MaxNameLen;
  /* 0x0014 */ unsigned long Values;
  /* 0x0018 */ unsigned long MaxValueNameLen;
  /* 0x001c */ unsigned long MaxValueDataLen;
  /* 0x0020 */ unsigned long NameLength;
  /* 0x0024 */ long __PADDING__[1];
} KEY_CACHED_INFORMATION, *PKEY_CACHED_INFORMATION; /* size: 0x0028 */

typedef struct _TOKEN_MANDATORY_POLICY
{
  /* 0x0000 */ unsigned long Policy;
} TOKEN_MANDATORY_POLICY, *PTOKEN_MANDATORY_POLICY; /* size: 0x0004 */

typedef struct _TOKEN_ACCESS_INFORMATION
{
  /* 0x0000 */ struct _SID_AND_ATTRIBUTES_HASH* SidHash;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES_HASH* RestrictedSidHash;
  /* 0x0010 */ struct _TOKEN_PRIVILEGES* Privileges;
  /* 0x0018 */ struct _LUID AuthenticationId;
  /* 0x0020 */ enum _TOKEN_TYPE TokenType;
  /* 0x0024 */ enum _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel;
  /* 0x0028 */ struct _TOKEN_MANDATORY_POLICY MandatoryPolicy;
  /* 0x002c */ unsigned long Flags;
  /* 0x0030 */ unsigned long AppContainerNumber;
  /* 0x0034 */ long Padding_1175;
  /* 0x0038 */ void* PackageSid;
  /* 0x0040 */ struct _SID_AND_ATTRIBUTES_HASH* CapabilitiesHash;
} TOKEN_ACCESS_INFORMATION, *PTOKEN_ACCESS_INFORMATION; /* size: 0x0048 */

typedef struct _PRINTER_INFO_1A
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1176;
  /* 0x0008 */ char* pDescription;
  /* 0x0010 */ char* pName;
  /* 0x0018 */ char* pComment;
} PRINTER_INFO_1A, *PPRINTER_INFO_1A; /* size: 0x0020 */

typedef struct _CMSG_SP3_COMPATIBLE_AUX_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
} CMSG_SP3_COMPATIBLE_AUX_INFO, *PCMSG_SP3_COMPATIBLE_AUX_INFO; /* size: 0x0008 */

struct ISCMProcessControl
{
}; /* size: 0x0008 */

struct tagCUSTDATA
{
  /* 0x0000 */ unsigned long cCustData;
  /* 0x0004 */ long Padding_1177;
  /* 0x0008 */ struct tagCUSTDATAITEM* prgCustData;
}; /* size: 0x0010 */

struct DDEACK
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short bAppReturnCode : 8; /* bit position: 0 */
    /* 0x0000 */ unsigned short reserved : 6; /* bit position: 8 */
    /* 0x0000 */ unsigned short fBusy : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAck : 1; /* bit position: 15 */
  }; /* bitfield */
}; /* size: 0x0002 */

typedef struct __midl_frag804_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_MEMPAD_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
  } /* size: 0x0030 */ frag2;
} _midl_frag804_t, *P_midl_frag804_t; /* size: 0x0050 */

typedef struct _COMPRESSED_DATA_INFO
{
  /* 0x0000 */ unsigned short CompressionFormatAndEngine;
  /* 0x0002 */ unsigned char CompressionUnitShift;
  /* 0x0003 */ unsigned char ChunkShift;
  /* 0x0004 */ unsigned char ClusterShift;
  /* 0x0005 */ unsigned char Reserved;
  /* 0x0006 */ unsigned short NumberOfChunks;
  /* 0x0008 */ unsigned long CompressedChunkSizes[1];
} COMPRESSED_DATA_INFO, *PCOMPRESSED_DATA_INFO; /* size: 0x000c */

struct tagCUSTDATAITEM
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ struct tagVARIANT varValue;
}; /* size: 0x0028 */

typedef struct _SERVICE_REQUIRED_PRIVILEGES_INFOA
{
  /* 0x0000 */ char* pmszRequiredPrivileges;
} SERVICE_REQUIRED_PRIVILEGES_INFOA, *PSERVICE_REQUIRED_PRIVILEGES_INFOA; /* size: 0x0008 */

typedef struct _TI_FINDCHILDREN_PARAMS
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long Start;
  /* 0x0008 */ unsigned long ChildId[1];
} TI_FINDCHILDREN_PARAMS, *PTI_FINDCHILDREN_PARAMS; /* size: 0x000c */

typedef struct _SYSTEM_PERFORMANCE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER IdleProcessTime;
  /* 0x0008 */ union _LARGE_INTEGER IoReadTransferCount;
  /* 0x0010 */ union _LARGE_INTEGER IoWriteTransferCount;
  /* 0x0018 */ union _LARGE_INTEGER IoOtherTransferCount;
  /* 0x0020 */ unsigned long IoReadOperationCount;
  /* 0x0024 */ unsigned long IoWriteOperationCount;
  /* 0x0028 */ unsigned long IoOtherOperationCount;
  /* 0x002c */ unsigned long AvailablePages;
  /* 0x0030 */ unsigned long CommittedPages;
  /* 0x0034 */ unsigned long CommitLimit;
  /* 0x0038 */ unsigned long PeakCommitment;
  /* 0x003c */ unsigned long PageFaultCount;
  /* 0x0040 */ unsigned long CopyOnWriteCount;
  /* 0x0044 */ unsigned long TransitionCount;
  /* 0x0048 */ unsigned long CacheTransitionCount;
  /* 0x004c */ unsigned long DemandZeroCount;
  /* 0x0050 */ unsigned long PageReadCount;
  /* 0x0054 */ unsigned long PageReadIoCount;
  /* 0x0058 */ unsigned long CacheReadCount;
  /* 0x005c */ unsigned long CacheIoCount;
  /* 0x0060 */ unsigned long DirtyPagesWriteCount;
  /* 0x0064 */ unsigned long DirtyWriteIoCount;
  /* 0x0068 */ unsigned long MappedPagesWriteCount;
  /* 0x006c */ unsigned long MappedWriteIoCount;
  /* 0x0070 */ unsigned long PagedPoolPages;
  /* 0x0074 */ unsigned long NonPagedPoolPages;
  /* 0x0078 */ unsigned long PagedPoolAllocs;
  /* 0x007c */ unsigned long PagedPoolFrees;
  /* 0x0080 */ unsigned long NonPagedPoolAllocs;
  /* 0x0084 */ unsigned long NonPagedPoolFrees;
  /* 0x0088 */ unsigned long FreeSystemPtes;
  /* 0x008c */ unsigned long ResidentSystemCodePage;
  /* 0x0090 */ unsigned long TotalSystemDriverPages;
  /* 0x0094 */ unsigned long TotalSystemCodePages;
  /* 0x0098 */ unsigned long NonPagedPoolLookasideHits;
  /* 0x009c */ unsigned long PagedPoolLookasideHits;
  /* 0x00a0 */ unsigned long AvailablePagedPoolPages;
  /* 0x00a4 */ unsigned long ResidentSystemCachePage;
  /* 0x00a8 */ unsigned long ResidentPagedPoolPage;
  /* 0x00ac */ unsigned long ResidentSystemDriverPage;
  /* 0x00b0 */ unsigned long CcFastReadNoWait;
  /* 0x00b4 */ unsigned long CcFastReadWait;
  /* 0x00b8 */ unsigned long CcFastReadResourceMiss;
  /* 0x00bc */ unsigned long CcFastReadNotPossible;
  /* 0x00c0 */ unsigned long CcFastMdlReadNoWait;
  /* 0x00c4 */ unsigned long CcFastMdlReadWait;
  /* 0x00c8 */ unsigned long CcFastMdlReadResourceMiss;
  /* 0x00cc */ unsigned long CcFastMdlReadNotPossible;
  /* 0x00d0 */ unsigned long CcMapDataNoWait;
  /* 0x00d4 */ unsigned long CcMapDataWait;
  /* 0x00d8 */ unsigned long CcMapDataNoWaitMiss;
  /* 0x00dc */ unsigned long CcMapDataWaitMiss;
  /* 0x00e0 */ unsigned long CcPinMappedDataCount;
  /* 0x00e4 */ unsigned long CcPinReadNoWait;
  /* 0x00e8 */ unsigned long CcPinReadWait;
  /* 0x00ec */ unsigned long CcPinReadNoWaitMiss;
  /* 0x00f0 */ unsigned long CcPinReadWaitMiss;
  /* 0x00f4 */ unsigned long CcCopyReadNoWait;
  /* 0x00f8 */ unsigned long CcCopyReadWait;
  /* 0x00fc */ unsigned long CcCopyReadNoWaitMiss;
  /* 0x0100 */ unsigned long CcCopyReadWaitMiss;
  /* 0x0104 */ unsigned long CcMdlReadNoWait;
  /* 0x0108 */ unsigned long CcMdlReadWait;
  /* 0x010c */ unsigned long CcMdlReadNoWaitMiss;
  /* 0x0110 */ unsigned long CcMdlReadWaitMiss;
  /* 0x0114 */ unsigned long CcReadAheadIos;
  /* 0x0118 */ unsigned long CcLazyWriteIos;
  /* 0x011c */ unsigned long CcLazyWritePages;
  /* 0x0120 */ unsigned long CcDataFlushes;
  /* 0x0124 */ unsigned long CcDataPages;
  /* 0x0128 */ unsigned long ContextSwitches;
  /* 0x012c */ unsigned long FirstLevelTbFills;
  /* 0x0130 */ unsigned long SecondLevelTbFills;
  /* 0x0134 */ unsigned long SystemCalls;
  /* 0x0138 */ unsigned __int64 CcTotalDirtyPages;
  /* 0x0140 */ unsigned __int64 CcDirtyPageThreshold;
  /* 0x0148 */ __int64 ResidentAvailablePages;
  /* 0x0150 */ unsigned __int64 SharedCommittedPages;
} SYSTEM_PERFORMANCE_INFORMATION, *PSYSTEM_PERFORMANCE_INFORMATION; /* size: 0x0158 */

typedef struct _RTL_MODULE_EXTENDED_INFO
{
  /* 0x0000 */ struct _RTL_MODULE_BASIC_INFO BasicInfo;
  /* 0x0008 */ unsigned long ImageSize;
  /* 0x000c */ unsigned short FileNameOffset;
  /* 0x000e */ unsigned char FullPathName[256];
  /* 0x010e */ char __PADDING__[2];
} RTL_MODULE_EXTENDED_INFO, *PRTL_MODULE_EXTENDED_INFO; /* size: 0x0110 */

typedef struct _SYSTEM_NUMA_INFORMATION
{
  /* 0x0000 */ unsigned long HighestNodeNumber;
  /* 0x0004 */ unsigned long Reserved;
  union
  {
    /* 0x0008 */ struct _GROUP_AFFINITY ActiveProcessorsGroupAffinity[64];
    /* 0x0008 */ unsigned __int64 AvailableMemory[64];
    /* 0x0008 */ unsigned __int64 Pad[128];
  }; /* size: 0x0400 */
} SYSTEM_NUMA_INFORMATION, *PSYSTEM_NUMA_INFORMATION; /* size: 0x0408 */

typedef struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING
{
  /* 0x0000 */ const void* Data;
  /* 0x0008 */ unsigned long AssemblyRosterIndex;
  /* 0x000c */ long Padding_1178;
  /* 0x0010 */ void* ResolutionContext;
  /* 0x0018 */ struct _UNICODE_STRING Root;
  /* 0x0028 */ unsigned char KnownRoot;
  /* 0x0029 */ char Padding_1179[7];
  /* 0x0030 */ unsigned __int64 RootCount;
  /* 0x0038 */ unsigned char CancelResolution;
  /* 0x0039 */ char __PADDING__[7];
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING; /* size: 0x0040 */

typedef union _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA
{
  union
  {
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_BEGINNING ResolutionBeginning;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_GET_ROOT GetRoot;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_SUCCESSFUL ResolutionSuccessful;
    /* 0x0000 */ struct _ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA_RESOLUTION_ENDING ResolutionEnding;
  }; /* size: 0x0040 */
} ASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA, *PASSEMBLY_STORAGE_MAP_RESOLUTION_CALLBACK_DATA; /* size: 0x0040 */

struct IObjectWithSite
{
}; /* size: 0x0008 */

class BUCL::CIsSignedType<long>
{
}; /* size: 0x0001 */

typedef struct _BCRYPT_RSAKEY_BLOB
{
  /* 0x0000 */ unsigned long Magic;
  /* 0x0004 */ unsigned long BitLength;
  /* 0x0008 */ unsigned long cbPublicExp;
  /* 0x000c */ unsigned long cbModulus;
  /* 0x0010 */ unsigned long cbPrime1;
  /* 0x0014 */ unsigned long cbPrime2;
} BCRYPT_RSAKEY_BLOB, *PBCRYPT_RSAKEY_BLOB; /* size: 0x0018 */

typedef struct _SYSTEM_EXCEPTION_INFORMATION
{
  /* 0x0000 */ unsigned long AlignmentFixupCount;
  /* 0x0004 */ unsigned long ExceptionDispatchCount;
  /* 0x0008 */ unsigned long FloatingEmulationCount;
  /* 0x000c */ unsigned long ByteWordEmulationCount;
} SYSTEM_EXCEPTION_INFORMATION, *PSYSTEM_EXCEPTION_INFORMATION; /* size: 0x0010 */

typedef struct _PSFEATURE_OUTPUT
{
  /* 0x0000 */ int bPageIndependent;
  /* 0x0004 */ int bSetPageDevice;
} PSFEATURE_OUTPUT, *PPSFEATURE_OUTPUT; /* size: 0x0008 */

typedef struct _CM_FLOPPY_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ char Size[8];
  /* 0x000c */ unsigned long MaxDensity;
  /* 0x0010 */ unsigned long MountDensity;
  /* 0x0014 */ unsigned char StepRateHeadUnloadTime;
  /* 0x0015 */ unsigned char HeadLoadTime;
  /* 0x0016 */ unsigned char MotorOffTime;
  /* 0x0017 */ unsigned char SectorLengthCode;
  /* 0x0018 */ unsigned char SectorPerTrack;
  /* 0x0019 */ unsigned char ReadWriteGapLength;
  /* 0x001a */ unsigned char DataTransferLength;
  /* 0x001b */ unsigned char FormatGapLength;
  /* 0x001c */ unsigned char FormatFillCharacter;
  /* 0x001d */ unsigned char HeadSettleTime;
  /* 0x001e */ unsigned char MotorSettleTime;
  /* 0x001f */ unsigned char MaximumTrackValue;
  /* 0x0020 */ unsigned char DataTransferRate;
  /* 0x0021 */ char __PADDING__[3];
} CM_FLOPPY_DEVICE_DATA, *PCM_FLOPPY_DEVICE_DATA; /* size: 0x0024 */

typedef struct _RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W
{
  /* 0x0000 */ void* TransportCredentials;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long AuthenticationTarget;
  /* 0x0010 */ unsigned long NumberOfAuthnSchemes;
  /* 0x0014 */ long Padding_1180;
  /* 0x0018 */ unsigned long* AuthnSchemes;
  /* 0x0020 */ unsigned short* ServerCertificateSubject;
  /* 0x0028 */ void* ProxyCredentials;
  /* 0x0030 */ unsigned long NumberOfProxyAuthnSchemes;
  /* 0x0034 */ long Padding_1181;
  /* 0x0038 */ unsigned long* ProxyAuthnSchemes;
} RPC_HTTP_TRANSPORT_CREDENTIALS_V3_W, *PRPC_HTTP_TRANSPORT_CREDENTIALS_V3_W; /* size: 0x0040 */

typedef struct _PROPSHEETHEADERA_V1
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndParent;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const char* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const char* pszCaption;
  /* 0x0028 */ unsigned int nPages;
  /* 0x002c */ long Padding_1182;
  union
  {
    /* 0x0030 */ unsigned int nStartPage;
    /* 0x0030 */ const char* pStartPage;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ const struct _PROPSHEETPAGEA* ppsp;
    /* 0x0038 */ struct _PSP** phpage;
  }; /* size: 0x0008 */
  /* 0x0040 */ void* pfnCallback /* function */;
} PROPSHEETHEADERA_V1, *PPROPSHEETHEADERA_V1; /* size: 0x0048 */

typedef struct _RTL_RXACT_LOG
{
  /* 0x0000 */ unsigned long OperationCount;
  /* 0x0004 */ unsigned long LogSize;
  /* 0x0008 */ unsigned long LogSizeInUse;
  /* 0x000c */ unsigned long Alignment;
} RTL_RXACT_LOG, *PRTL_RXACT_LOG; /* size: 0x0010 */

struct IPolicyMaker
{
}; /* size: 0x0008 */

struct tagKERNINGPAIR
{
  /* 0x0000 */ unsigned short wFirst;
  /* 0x0002 */ unsigned short wSecond;
  /* 0x0004 */ int iKernAmount;
}; /* size: 0x0008 */

typedef struct _LEARNING_MODE_OBJECT_INFORMATION
{
  /* 0x0000 */ struct _SINGLE_LIST_ENTRY ListEntry;
  /* 0x0008 */ enum _LEARNING_MODE_LOG_LEVEL LogLevel;
  /* 0x000c */ long Padding_1183;
  /* 0x0010 */ struct _UNICODE_STRING* ObjectType;
  /* 0x0018 */ struct _UNICODE_STRING* ObjectName;
  /* 0x0020 */ void* RootDirectory;
  /* 0x0028 */ struct _UNICODE_STRING FullObjectName;
} LEARNING_MODE_OBJECT_INFORMATION, *PLEARNING_MODE_OBJECT_INFORMATION; /* size: 0x0038 */

struct IBindStatusCallbackEx
{
}; /* size: 0x0008 */

typedef struct __midl_frag1599_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1599_t, *P_midl_frag1599_t; /* size: 0x0068 */

struct tagORPCTHIS
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ long Padding_1184;
  /* 0x0020 */ struct tagORPC_EXTENT_ARRAY* extensions;
}; /* size: 0x0028 */

typedef struct __MIDL_ILocalObjectExporter_0003
{
  /* 0x0000 */ unsigned __int64 mid;
  /* 0x0008 */ unsigned __int64 oxid;
  /* 0x0010 */ unsigned long refs;
  /* 0x0014 */ long __PADDING__[1];
} _MIDL_ILocalObjectExporter_0003, *P_MIDL_ILocalObjectExporter_0003; /* size: 0x0018 */

struct tagREMINTERFACEREF
{
  /* 0x0000 */ struct _GUID ipid;
  /* 0x0010 */ unsigned long cPublicRefs;
  /* 0x0014 */ unsigned long cPrivateRefs;
}; /* size: 0x0018 */

typedef struct _CALL_FRAME
{
  /* 0x0000 */ void* ReturnAddress;
  /* 0x0008 */ void* Param1Home;
  /* 0x0010 */ void* Param2Home;
  /* 0x0018 */ void* Param3Home;
  /* 0x0020 */ void* Param4Home;
} CALL_FRAME, *PCALL_FRAME; /* size: 0x0028 */

typedef struct _SYSTEM_CODEINTEGRITY_INFORMATION
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned long CodeIntegrityOptions;
} SYSTEM_CODEINTEGRITY_INFORMATION, *PSYSTEM_CODEINTEGRITY_INFORMATION; /* size: 0x0008 */

typedef struct _SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION
{
  /* 0x0000 */ unsigned char EfiLauncherEnabled;
} SYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION, *PSYSTEM_PORTABLE_WORKSPACE_EFI_LAUNCHER_INFORMATION; /* size: 0x0001 */

struct tagIPIDEntry
{
  /* 0x0000 */ struct tagIPIDEntry* pNextIPID;
  /* 0x0008 */ unsigned long dwFlags;
  /* 0x000c */ unsigned long cStrongRefs;
  /* 0x0010 */ unsigned long cWeakRefs;
  /* 0x0014 */ unsigned long cPrivateRefs;
  /* 0x0018 */ void* pv;
  /* 0x0020 */ struct IUnknown* pStub;
  /* 0x0028 */ class OXIDEntry* pOXIDEntry;
  /* 0x0030 */ struct _GUID ipid;
  /* 0x0040 */ struct _GUID iid;
  /* 0x0050 */ class CCtxComChnl* pChnl;
  /* 0x0058 */ struct IRCEntry* pIRCEntry;
  /* 0x0060 */ struct tagIPIDEntry* pOIDFLink;
  /* 0x0068 */ struct tagIPIDEntry* pOIDBLink;
}; /* size: 0x0070 */

class CIPIDTable
{
  union
  {
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ struct tagIPIDEntry _oidListHead;
  }; /* size: 0x0070 */
}; /* size: 0x0001 */

typedef struct _RPC_SERVER_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ long Padding_1185;
  /* 0x0030 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0038 */ unsigned int RpcProtseqEndpointCount;
  /* 0x003c */ long Padding_1186;
  /* 0x0040 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0048 */ void* DefaultManagerEpv;
  /* 0x0050 */ const void* InterpreterInfo;
  /* 0x0058 */ unsigned int Flags;
  /* 0x005c */ long __PADDING__[1];
} RPC_SERVER_INTERFACE, *PRPC_SERVER_INTERFACE; /* size: 0x0060 */

struct Windows::Rtl::IRtlWOFOUCSStream
{
}; /* size: 0x0008 */

typedef struct _RPC_PROTSEQ_ENDPOINT
{
  /* 0x0000 */ unsigned char* RpcProtocolSequence;
  /* 0x0008 */ unsigned char* Endpoint;
} RPC_PROTSEQ_ENDPOINT, *PRPC_PROTSEQ_ENDPOINT; /* size: 0x0010 */

struct HSPRITE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1187;
  /* 0x0008 */ void* pfnGet /* function */;
  /* 0x0010 */ void* pfnRelease /* function */;
  /* 0x0018 */ void* pfnFreePassword /* function */;
  /* 0x0020 */ void* pfnFree /* function */;
  /* 0x0028 */ void* pfnFreeIdentifier /* function */;
} CRYPT_OBJECT_LOCATOR_PROVIDER_TABLE, *PCRYPT_OBJECT_LOCATOR_PROVIDER_TABLE; /* size: 0x0030 */

class CClientCall
{
  union
  {
    struct
    {
      /* 0x0000 */ enum BaseCallKind CallKind;
      /* 0x0004 */ long Padding_1188[87];
      /* 0x0160 */ unsigned long m_cRefs;
      /* 0x0164 */ unsigned long m_dwFlags;
      /* 0x0168 */ void* m_hThread;
      /* 0x0170 */ unsigned long m_dwThreadId;
    }; /* size: 0x0018 */
    /* 0x0000 */ void* _aList[8];
    /* 0x0000 */ unsigned long _iNext;
  }; /* size: 0x0040 */
}; /* size: 0x0178 */

typedef struct _DEVICE_WRITE_AGGREGATION_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char BenefitsFromWriteAggregation;
  /* 0x0009 */ char __PADDING__[3];
} DEVICE_WRITE_AGGREGATION_DESCRIPTOR, *PDEVICE_WRITE_AGGREGATION_DESCRIPTOR; /* size: 0x000c */

struct tagMCI_ANIM_WINDOW_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int nCmdShow;
  /* 0x0014 */ const wchar_t* lpstrText;
}; /* size: 0x001c */

struct tagEMRGLSRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

typedef struct _WINDOWS_OS_OPTIONS
{
  /* 0x0000 */ unsigned char Signature[8];
  /* 0x0008 */ unsigned long Version;
  /* 0x000c */ unsigned long Length;
  /* 0x0010 */ unsigned long OsLoadPathOffset;
  /* 0x0014 */ wchar_t OsLoadOptions[1];
  /* 0x0016 */ char __PADDING__[2];
} WINDOWS_OS_OPTIONS, *PWINDOWS_OS_OPTIONS; /* size: 0x0018 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >
{
  /* 0x0000 */ struct _LBLOB m_Blob;
}; /* size: 0x0018 */

struct IOleInPlaceUIWindowVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetWindow /* function */;
  /* 0x0020 */ void* ContextSensitiveHelp /* function */;
  /* 0x0028 */ void* GetBorder /* function */;
  /* 0x0030 */ void* RequestBorderSpace /* function */;
  /* 0x0038 */ void* SetBorderSpace /* function */;
  /* 0x0040 */ void* SetActiveObject /* function */;
}; /* size: 0x0048 */

struct tagEMRCREATEPALETTE
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ struct tagLOGPALETTE lgpl;
}; /* size: 0x0014 */

typedef struct _FILE_ID_BOTH_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ char ShortNameLength;
  /* 0x0045 */ char Padding_1189;
  /* 0x0046 */ wchar_t ShortName[12];
  /* 0x005e */ char Padding_1190[2];
  /* 0x0060 */ union _LARGE_INTEGER FileId;
  /* 0x0068 */ wchar_t FileName[1];
  /* 0x006a */ char __PADDING__[6];
} FILE_ID_BOTH_DIR_INFORMATION, *PFILE_ID_BOTH_DIR_INFORMATION; /* size: 0x0070 */

typedef struct _FILE_LINK_ENTRY_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ long Padding_1191;
  /* 0x0008 */ __int64 ParentFileId;
  /* 0x0010 */ unsigned long FileNameLength;
  /* 0x0014 */ wchar_t FileName[1];
  /* 0x0016 */ char __PADDING__[2];
} FILE_LINK_ENTRY_INFORMATION, *PFILE_LINK_ENTRY_INFORMATION; /* size: 0x0018 */

typedef struct _FILE_LINKS_INFORMATION
{
  /* 0x0000 */ unsigned long BytesNeeded;
  /* 0x0004 */ unsigned long EntriesReturned;
  /* 0x0008 */ struct _FILE_LINK_ENTRY_INFORMATION Entry;
} FILE_LINKS_INFORMATION, *PFILE_LINKS_INFORMATION; /* size: 0x0020 */

typedef struct _FORM_INFO_1A
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1192;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ struct tagSIZE Size;
  /* 0x0018 */ struct _RECTL ImageableArea;
} FORM_INFO_1A, *PFORM_INFO_1A; /* size: 0x0028 */

typedef struct _SYSTEM_POWER_INFORMATION
{
  /* 0x0000 */ unsigned long MaxIdlenessAllowed;
  /* 0x0004 */ unsigned long Idleness;
  /* 0x0008 */ unsigned long TimeRemaining;
  /* 0x000c */ unsigned char CoolingMode;
  /* 0x000d */ char __PADDING__[3];
} SYSTEM_POWER_INFORMATION, *PSYSTEM_POWER_INFORMATION; /* size: 0x0010 */

struct IActivationFactory
{
}; /* size: 0x0008 */

struct HDDEDATA__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagACTCTX_SECTION_KEYED_DATA_2600
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long ulDataFormatVersion;
  /* 0x0008 */ void* lpData;
  /* 0x0010 */ unsigned long ulLength;
  /* 0x0014 */ long Padding_1193;
  /* 0x0018 */ void* lpSectionGlobalData;
  /* 0x0020 */ unsigned long ulSectionGlobalDataLength;
  /* 0x0024 */ long Padding_1194;
  /* 0x0028 */ void* lpSectionBase;
  /* 0x0030 */ unsigned long ulSectionTotalLength;
  /* 0x0034 */ long Padding_1195;
  /* 0x0038 */ void* hActCtx;
  /* 0x0040 */ unsigned long ulAssemblyRosterIndex;
  /* 0x0044 */ long __PADDING__[1];
}; /* size: 0x0048 */

struct IPrivActivationPropertiesIn
{
}; /* size: 0x0008 */

class CMIPIDHashTable
{
}; /* size: 0x0028 */

class CSafeSem
{
  /* 0x0000 */ long _sc;
  /* 0x0004 */ long Padding_1196;
  /* 0x0008 */ class CPerContext* _ppc;
  /* 0x0010 */ class CPerContext* _ppcPrev;
  /* 0x0018 */ class CSmAllocator* _pSmAllocator;
}; /* size: 0x0020 */

typedef struct __vc_attributes::moduleAttribute
{
  /* 0x0000 */ enum __vc_attributes::moduleAttribute::type_e type;
  /* 0x0004 */ long Padding_1197;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* version;
  /* 0x0018 */ const char* uuid;
  /* 0x0020 */ int lcid;
  /* 0x0024 */ BOOL control;
  /* 0x0025 */ char Padding_1198[3];
  /* 0x0028 */ const char* helpstring;
  /* 0x0030 */ int helpstringcontext;
  /* 0x0034 */ long Padding_1199;
  /* 0x0038 */ const char* helpstringdll;
  /* 0x0040 */ const char* helpfile;
  /* 0x0048 */ int helpcontext;
  /* 0x004c */ BOOL hidden;
  /* 0x004d */ BOOL restricted;
  /* 0x004e */ char Padding_1200[2];
  /* 0x0050 */ const char* custom;
  /* 0x0058 */ const char* resource_name;
} _vc_attributes::moduleAttribute, *P_vc_attributes::moduleAttribute; /* size: 0x0060 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlObject *,Windows::Auto<Windows::Rtl::IRtlObject *> >::is_pointer<Windows::Rtl::IRtlObject *>
{
}; /* size: 0x0001 */

typedef struct __midl_frag1670_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1201;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1670_t, *P_midl_frag1670_t; /* size: 0x0030 */

struct IErrorLog
{
}; /* size: 0x0008 */

struct tagCallEntry
{
  /* 0x0000 */ void* pNext;
  /* 0x0008 */ void* pvObject;
}; /* size: 0x0010 */

typedef struct _IMAGE_DEBUG_MISC
{
  /* 0x0000 */ unsigned long DataType;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned char Unicode;
  /* 0x0009 */ unsigned char Reserved[3];
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
} IMAGE_DEBUG_MISC, *PIMAGE_DEBUG_MISC; /* size: 0x0010 */

struct HPEN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _CERT_RDN
{
  /* 0x0000 */ unsigned long cRDNAttr;
  /* 0x0004 */ long Padding_1202;
  /* 0x0008 */ struct _CERT_RDN_ATTR* rgRDNAttr;
} CERT_RDN, *PCERT_RDN; /* size: 0x0010 */

struct tagNONCLIENTMETRICSW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ int iBorderWidth;
  /* 0x0008 */ int iScrollWidth;
  /* 0x000c */ int iScrollHeight;
  /* 0x0010 */ int iCaptionWidth;
  /* 0x0014 */ int iCaptionHeight;
  /* 0x0018 */ struct tagLOGFONTW lfCaptionFont;
  /* 0x0074 */ int iSmCaptionWidth;
  /* 0x0078 */ int iSmCaptionHeight;
  /* 0x007c */ struct tagLOGFONTW lfSmCaptionFont;
  /* 0x00d8 */ int iMenuWidth;
  /* 0x00dc */ int iMenuHeight;
  /* 0x00e0 */ struct tagLOGFONTW lfMenuFont;
  /* 0x013c */ struct tagLOGFONTW lfStatusFont;
  /* 0x0198 */ struct tagLOGFONTW lfMessageFont;
  /* 0x01f4 */ int iPaddedBorderWidth;
}; /* size: 0x01f8 */

typedef struct _CONSOLE_SCREEN_BUFFER_INFO
{
  /* 0x0000 */ struct _COORD dwSize;
  /* 0x0004 */ struct _COORD dwCursorPosition;
  /* 0x0008 */ unsigned short wAttributes;
  /* 0x000a */ struct _SMALL_RECT srWindow;
  /* 0x0012 */ struct _COORD dwMaximumWindowSize;
} CONSOLE_SCREEN_BUFFER_INFO, *PCONSOLE_SCREEN_BUFFER_INFO; /* size: 0x0016 */

struct tagCONTROLINFO
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ long Padding_1203;
  /* 0x0008 */ struct HACCEL__* hAccel;
  /* 0x0010 */ unsigned short cAccel;
  /* 0x0012 */ char Padding_1204[2];
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

struct IShellItem
{
}; /* size: 0x0008 */

typedef struct _SERVICE_DESCRIPTIONA
{
  /* 0x0000 */ char* lpDescription;
} SERVICE_DESCRIPTIONA, *PSERVICE_DESCRIPTIONA; /* size: 0x0008 */

typedef struct _BCRYPT_DSA_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
  /* 0x0008 */ unsigned char Count[4];
  /* 0x000c */ unsigned char Seed[20];
  /* 0x0020 */ unsigned char q[20];
} BCRYPT_DSA_KEY_BLOB, *PBCRYPT_DSA_KEY_BLOB; /* size: 0x0034 */

typedef struct __vc_attributes::hiddenAttribute
{
} _vc_attributes::hiddenAttribute, *P_vc_attributes::hiddenAttribute; /* size: 0x0001 */

typedef struct _WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT
{
  /* 0x0000 */ void* hClientToken;
  /* 0x0008 */ struct _GUID* SubjectType;
  /* 0x0010 */ void* Subject;
} WIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT, *PWIN_TRUST_ACTDATA_CONTEXT_WITH_SUBJECT; /* size: 0x0018 */

typedef struct _SCOPE_TABLE_AMD64
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ struct
  {
    /* 0x0004 */ unsigned long BeginAddress;
    /* 0x0008 */ unsigned long EndAddress;
    /* 0x000c */ unsigned long HandlerAddress;
    /* 0x0010 */ unsigned long JumpTarget;
  } /* size: 0x0010 */ ScopeRecord[1];
} SCOPE_TABLE_AMD64, *PSCOPE_TABLE_AMD64; /* size: 0x0014 */

typedef struct _STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long BytesPerCacheLine;
  /* 0x000c */ unsigned long BytesOffsetForCacheAlignment;
  /* 0x0010 */ unsigned long BytesPerLogicalSector;
  /* 0x0014 */ unsigned long BytesPerPhysicalSector;
  /* 0x0018 */ unsigned long BytesOffsetForSectorAlignment;
} STORAGE_ACCESS_ALIGNMENT_DESCRIPTOR, *PSTORAGE_ACCESS_ALIGNMENT_DESCRIPTOR; /* size: 0x001c */

typedef struct __midl_frag480_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag480_t, *P_midl_frag480_t; /* size: 0x0048 */

typedef struct _MODLOAD_PDBGUID_PDBAGE
{
  /* 0x0000 */ struct _GUID PdbGuid;
  /* 0x0010 */ unsigned long PdbAge;
} MODLOAD_PDBGUID_PDBAGE, *PMODLOAD_PDBGUID_PDBAGE; /* size: 0x0014 */

typedef struct _API_SET_NAMESPACE_ARRAY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ struct _API_SET_NAMESPACE_ENTRY Array[1];
} API_SET_NAMESPACE_ARRAY, *PAPI_SET_NAMESPACE_ARRAY; /* size: 0x0014 */

typedef struct _REMOTE_NAME_INFOW
{
  /* 0x0000 */ wchar_t* lpUniversalName;
  /* 0x0008 */ wchar_t* lpConnectionName;
  /* 0x0010 */ wchar_t* lpRemainingPath;
} REMOTE_NAME_INFOW, *PREMOTE_NAME_INFOW; /* size: 0x0018 */

struct IEnumSTATPROPSETSTG
{
}; /* size: 0x0008 */

typedef struct _DEVICE_DSM_OFFLOAD_READ_PARAMETERS
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long TimeToLive;
  /* 0x0008 */ unsigned long Reserved[2];
} DEVICE_DSM_OFFLOAD_READ_PARAMETERS, *PDEVICE_DSM_OFFLOAD_READ_PARAMETERS; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IApartmentShutdown> >;

typedef struct _OMAP
{
  /* 0x0000 */ unsigned long rva;
  /* 0x0004 */ unsigned long rvaTo;
} OMAP, *POMAP; /* size: 0x0008 */

typedef struct _MINIDUMP_USER_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long UserStreamCount;
  /* 0x0004 */ struct _MINIDUMP_USER_STREAM* UserStreamArray;
} MINIDUMP_USER_STREAM_INFORMATION, *PMINIDUMP_USER_STREAM_INFORMATION; /* size: 0x000c */

struct IScmRequestInfo
{
}; /* size: 0x0008 */

struct tagFILTERKEYS
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iWaitMSec;
  /* 0x000c */ unsigned long iDelayMSec;
  /* 0x0010 */ unsigned long iRepeatMSec;
  /* 0x0014 */ unsigned long iBounceMSec;
}; /* size: 0x0018 */

typedef struct _MINIDUMP_HANDLE_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Handle;
  /* 0x0008 */ unsigned long TypeNameRva;
  /* 0x000c */ unsigned long ObjectNameRva;
  /* 0x0010 */ unsigned int Attributes;
  /* 0x0014 */ unsigned int GrantedAccess;
  /* 0x0018 */ unsigned int HandleCount;
  /* 0x001c */ unsigned int PointerCount;
} MINIDUMP_HANDLE_DESCRIPTOR, *PMINIDUMP_HANDLE_DESCRIPTOR; /* size: 0x0020 */

struct tagSTATPROPSTG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0008 */ unsigned long propid;
  /* 0x000c */ unsigned short vt;
  /* 0x000e */ char __PADDING__[2];
}; /* size: 0x0010 */

typedef struct _CERT_KEY_ATTRIBUTES_INFO
{
  /* 0x0000 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0010 */ struct _CRYPT_BIT_BLOB IntendedKeyUsage;
  /* 0x0028 */ struct _CERT_PRIVATE_KEY_VALIDITY* pPrivateKeyUsagePeriod;
} CERT_KEY_ATTRIBUTES_INFO, *PCERT_KEY_ATTRIBUTES_INFO; /* size: 0x0030 */

struct SPC_LINK_
{
  /* 0x0000 */ unsigned long dwLinkChoice;
  /* 0x0004 */ long Padding_1205;
  union
  {
    /* 0x0008 */ wchar_t* pwszUrl;
    /* 0x0008 */ struct _SPC_SERIALIZED_OBJECT Moniker;
    struct
    {
      /* 0x0008 */ wchar_t* pwszFile;
      /* 0x0010 */ long __PADDING__[6];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
}; /* size: 0x0028 */

typedef struct _DRIVERSTATUS
{
  /* 0x0000 */ unsigned char bDriverError;
  /* 0x0001 */ unsigned char bIDEError;
  /* 0x0002 */ unsigned char bReserved[2];
  /* 0x0004 */ unsigned long dwReserved[2];
} DRIVERSTATUS, *PDRIVERSTATUS; /* size: 0x000c */

typedef struct __vc_attributes::licensedAttribute
{
} _vc_attributes::licensedAttribute, *P_vc_attributes::licensedAttribute; /* size: 0x0001 */

typedef struct _REPARSE_DATA_BUFFER
{
  /* 0x0000 */ unsigned long ReparseTag;
  /* 0x0004 */ unsigned short ReparseDataLength;
  /* 0x0006 */ unsigned short Reserved;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ unsigned long Flags;
      /* 0x0014 */ wchar_t PathBuffer[1];
      /* 0x0016 */ char __PADDING__[2];
    } /* size: 0x0010 */ SymbolicLinkReparseBuffer;
    struct
    {
      /* 0x0008 */ unsigned short SubstituteNameOffset;
      /* 0x000a */ unsigned short SubstituteNameLength;
      /* 0x000c */ unsigned short PrintNameOffset;
      /* 0x000e */ unsigned short PrintNameLength;
      /* 0x0010 */ wchar_t PathBuffer[1];
    } /* size: 0x000a */ MountPointReparseBuffer;
    struct
    {
      struct
      {
        /* 0x0008 */ unsigned char DataBuffer[1];
      } /* size: 0x0001 */ GenericReparseBuffer;
      /* 0x0009 */ char __PADDING__[15];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} REPARSE_DATA_BUFFER, *PREPARSE_DATA_BUFFER; /* size: 0x0018 */

struct IUserToken
{
}; /* size: 0x0008 */

typedef struct _XSAVE_AREA
{
  /* 0x0000 */ struct _XSAVE_FORMAT LegacyState;
  /* 0x0200 */ struct _XSAVE_AREA_HEADER Header;
} XSAVE_AREA, *PXSAVE_AREA; /* size: 0x0240 */

typedef struct _THREAD_CYCLE_TIME_INFORMATION
{
  /* 0x0000 */ unsigned __int64 AccumulatedCycles;
  /* 0x0008 */ unsigned __int64 CurrentCycleCount;
} THREAD_CYCLE_TIME_INFORMATION, *PTHREAD_CYCLE_TIME_INFORMATION; /* size: 0x0010 */

typedef struct _VARIABLE_NAME_AND_VALUE
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long ValueOffset;
  /* 0x0008 */ unsigned long ValueLength;
  /* 0x000c */ unsigned long Attributes;
  /* 0x0010 */ struct _GUID VendorGuid;
  /* 0x0020 */ wchar_t Name[1];
  /* 0x0022 */ char __PADDING__[2];
} VARIABLE_NAME_AND_VALUE, *PVARIABLE_NAME_AND_VALUE; /* size: 0x0024 */

struct IOleControlSite
{
}; /* size: 0x0008 */

class Windows::AutoOperatorAmpersandHelper<_UNICODE_STRING,Windows::Auto<_UNICODE_STRING> >;

typedef struct _RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR
{
  /* 0x0000 */ unsigned long BufferSize;
  /* 0x0004 */ long Padding_1206;
  /* 0x0008 */ char* Buffer;
} RPC_C_OPT_COOKIE_AUTH_DESCRIPTOR, *PRPC_C_OPT_COOKIE_AUTH_DESCRIPTOR; /* size: 0x0010 */

class Microsoft::WRL::Details::ModuleBase
{
  union
  {
    /* 0x0000 */ void* moduleLock_;
    /* 0x0000 */ volatile unsigned long objectCount_;
    /* 0x0000 */ class Microsoft::WRL::Details::ModuleBase* module_;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _MINIDUMP_EXCEPTION
{
  /* 0x0000 */ unsigned int ExceptionCode;
  /* 0x0004 */ unsigned int ExceptionFlags;
  /* 0x0008 */ unsigned __int64 ExceptionRecord;
  /* 0x0010 */ unsigned __int64 ExceptionAddress;
  /* 0x0018 */ unsigned int NumberParameters;
  /* 0x001c */ unsigned int __unusedAlignment;
  /* 0x0020 */ unsigned __int64 ExceptionInformation[15];
} MINIDUMP_EXCEPTION, *PMINIDUMP_EXCEPTION; /* size: 0x0098 */

class Microsoft::WRL::ComPtr<IImpersonateClipboardOwner>
{
  /* 0x0000 */ struct IImpersonateClipboardOwner* ptr_;
}; /* size: 0x0008 */

typedef struct _FILE_PIPE_CLIENT_PROCESS_BUFFER_EX
{
  /* 0x0000 */ void* ClientSession;
  /* 0x0008 */ void* ClientProcess;
  /* 0x0010 */ unsigned short ClientComputerNameLength;
  /* 0x0012 */ wchar_t ClientComputerBuffer[16];
  /* 0x0032 */ char __PADDING__[6];
} FILE_PIPE_CLIENT_PROCESS_BUFFER_EX, *PFILE_PIPE_CLIENT_PROCESS_BUFFER_EX; /* size: 0x0038 */

typedef struct _FILE_NAME_INFO
{
  /* 0x0000 */ unsigned long FileNameLength;
  /* 0x0004 */ wchar_t FileName[1];
  /* 0x0006 */ char __PADDING__[2];
} FILE_NAME_INFO, *PFILE_NAME_INFO; /* size: 0x0008 */

typedef struct _CERT_SYSTEM_STORE_INFO
{
  /* 0x0000 */ unsigned long cbSize;
} CERT_SYSTEM_STORE_INFO, *PCERT_SYSTEM_STORE_INFO; /* size: 0x0004 */

struct IEnumVARIANT
{
}; /* size: 0x0008 */

struct tagMCI_WAVE_OPEN_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const wchar_t* lpstrDeviceType;
  /* 0x0014 */ const wchar_t* lpstrElementName;
  /* 0x001c */ const wchar_t* lpstrAlias;
  /* 0x0024 */ unsigned long dwBufferSeconds;
}; /* size: 0x0028 */

typedef struct _SYSTEM_AUDIT_OBJECT_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ struct _GUID ObjectType;
  /* 0x001c */ struct _GUID InheritedObjectType;
  /* 0x002c */ unsigned long SidStart;
} SYSTEM_AUDIT_OBJECT_ACE, *PSYSTEM_AUDIT_OBJECT_ACE; /* size: 0x0030 */

typedef struct _IMAGEHLP_CBA_EVENT
{
  /* 0x0000 */ unsigned long severity;
  /* 0x0004 */ unsigned long code;
  /* 0x0008 */ char* desc;
  /* 0x0010 */ void* object;
} IMAGEHLP_CBA_EVENT, *PIMAGEHLP_CBA_EVENT; /* size: 0x0018 */

struct Microsoft::WRL::Details::CreatorMap
{
  /* 0x0000 */ void* factoryCreator /* function */;
  union
  {
    union
    {
      /* 0x0008 */ const struct _GUID* clsid;
      /* 0x0008 */ void* getRuntimeName /* function */;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ activationId;
  /* 0x0010 */ void* getTrustLevel /* function */;
  /* 0x0018 */ struct Microsoft::WRL::Details::FactoryCache* factoryCache;
  /* 0x0020 */ const wchar_t* serverName;
}; /* size: 0x0028 */

typedef struct _MINIDUMP_HANDLE_OPERATION_LIST
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfEntry;
  /* 0x0008 */ unsigned int NumberOfEntries;
  /* 0x000c */ unsigned int Reserved;
} MINIDUMP_HANDLE_OPERATION_LIST, *PMINIDUMP_HANDLE_OPERATION_LIST; /* size: 0x0010 */

typedef struct _SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA
{
  /* 0x0000 */ struct _PROCESSOR_PROFILE_CONTROL_AREA* ProcessorProfileControlArea;
  /* 0x0008 */ unsigned char Allocate;
  /* 0x0009 */ char __PADDING__[7];
} SYSTEM_PROCESSOR_PROFILE_CONTROL_AREA, *PSYSTEM_PROCESSOR_PROFILE_CONTROL_AREA; /* size: 0x0010 */

typedef struct __midl_frag826_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag826_t, *P_midl_frag826_t; /* size: 0x0010 */

typedef struct _BOOT_OPTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Timeout;
  /* 0x000c */ unsigned long CurrentBootEntryId;
  /* 0x0010 */ unsigned long NextBootEntryId;
  /* 0x0014 */ wchar_t HeadlessRedirection[1];
  /* 0x0016 */ char __PADDING__[2];
} BOOT_OPTIONS, *PBOOT_OPTIONS; /* size: 0x0018 */

struct tagSOUNDSENTRYW
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned long iFSTextEffect;
  /* 0x000c */ unsigned long iFSTextEffectMSec;
  /* 0x0010 */ unsigned long iFSTextEffectColorBits;
  /* 0x0014 */ unsigned long iFSGrafEffect;
  /* 0x0018 */ unsigned long iFSGrafEffectMSec;
  /* 0x001c */ unsigned long iFSGrafEffectColor;
  /* 0x0020 */ unsigned long iWindowsEffect;
  /* 0x0024 */ unsigned long iWindowsEffectMSec;
  /* 0x0028 */ wchar_t* lpszWindowsEffectDLL;
  /* 0x0030 */ unsigned long iWindowsEffectOrdinal;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

typedef struct __vc_attributes::immediatebindAttribute
{
} _vc_attributes::immediatebindAttribute, *P_vc_attributes::immediatebindAttribute; /* size: 0x0001 */

class CStmBuf
{
  /* 0x0000 */ struct IStream* m_pStm;
  /* 0x0008 */ unsigned char m_aBuffer[256];
  /* 0x0108 */ unsigned char* m_pBuffer;
  /* 0x0110 */ unsigned long m_cBuffer;
}; /* size: 0x0118 */

struct WSAData
{
  /* 0x0000 */ unsigned short wVersion;
  /* 0x0002 */ unsigned short wHighVersion;
  /* 0x0004 */ unsigned short iMaxSockets;
  /* 0x0006 */ unsigned short iMaxUdpDg;
  /* 0x0008 */ char* lpVendorInfo;
  /* 0x0010 */ char szDescription[257];
  /* 0x0111 */ char szSystemStatus[129];
  /* 0x0192 */ char __PADDING__[6];
}; /* size: 0x0198 */

typedef struct __vc_attributes::inAttribute
{
} _vc_attributes::inAttribute, *P_vc_attributes::inAttribute; /* size: 0x0001 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<3>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::CloakedIid<IAgileObject>,Microsoft::WRL::Details::Nil>,1,0>
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::exportAttribute
{
} _vc_attributes::exportAttribute, *P_vc_attributes::exportAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::controlAttribute
{
} _vc_attributes::controlAttribute, *P_vc_attributes::controlAttribute; /* size: 0x0001 */

class Microsoft::WRL::Details::FtmBaseMarker
{
}; /* size: 0x0001 */

struct tagQACONTAINER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1207;
  /* 0x0008 */ struct IOleClientSite* pClientSite;
  /* 0x0010 */ struct IAdviseSinkEx* pAdviseSink;
  /* 0x0018 */ struct IPropertyNotifySink* pPropertyNotifySink;
  /* 0x0020 */ struct IUnknown* pUnkEventSink;
  /* 0x0028 */ unsigned long dwAmbientFlags;
  /* 0x002c */ unsigned long colorFore;
  /* 0x0030 */ unsigned long colorBack;
  /* 0x0034 */ long Padding_1208;
  /* 0x0038 */ struct IFont* pFont;
  /* 0x0040 */ struct IOleUndoManager* pUndoMgr;
  /* 0x0048 */ unsigned long dwAppearance;
  /* 0x004c */ long lcid;
  /* 0x0050 */ struct HPALETTE__* hpal;
  /* 0x0058 */ struct IBindHost* pBindHost;
  /* 0x0060 */ struct IOleControlSite* pOleControlSite;
  /* 0x0068 */ struct IServiceProvider* pServiceProvider;
}; /* size: 0x0070 */

typedef struct __vc_attributes::helpstringcontextAttribute
{
  /* 0x0000 */ int contextid;
} _vc_attributes::helpstringcontextAttribute, *P_vc_attributes::helpstringcontextAttribute; /* size: 0x0004 */

typedef struct __vc_attributes::defaultbindAttribute
{
} _vc_attributes::defaultbindAttribute, *P_vc_attributes::defaultbindAttribute; /* size: 0x0001 */

typedef struct __NCRYPT_UI_POLICY
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ const wchar_t* pszCreationTitle;
  /* 0x0010 */ const wchar_t* pszFriendlyName;
  /* 0x0018 */ const wchar_t* pszDescription;
} _NCRYPT_UI_POLICY, *P_NCRYPT_UI_POLICY; /* size: 0x0020 */

typedef struct __vc_attributes::localAttribute
{
} _vc_attributes::localAttribute, *P_vc_attributes::localAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::importlibAttribute
{
  /* 0x0000 */ const char* tlb_file;
} _vc_attributes::importlibAttribute, *P_vc_attributes::importlibAttribute; /* size: 0x0008 */

typedef struct __midl_frag742_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x000c */ struct _NDR64_EXPR_VAR frag4;
  /* 0x0014 */ struct _NDR64_EXPR_NOOP frag5;
  /* 0x0018 */ struct _NDR64_EXPR_CONST64 frag6;
  /* 0x0028 */ struct _NDR64_EXPR_CONST64 frag7;
} _midl_frag742_t, *P_midl_frag742_t; /* size: 0x0038 */

struct IMarshal2
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::dispinterfaceAttribute
{
} _vc_attributes::dispinterfaceAttribute, *P_vc_attributes::dispinterfaceAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::dualAttribute
{
} _vc_attributes::dualAttribute, *P_vc_attributes::dualAttribute; /* size: 0x0001 */

typedef struct __midl_frag201_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag201_t, *P_midl_frag201_t; /* size: 0x0020 */

typedef struct _STORAGE_WRITE_CACHE_PROPERTY
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _WRITE_CACHE_TYPE WriteCacheType;
  /* 0x000c */ enum _WRITE_CACHE_ENABLE WriteCacheEnabled;
  /* 0x0010 */ enum _WRITE_CACHE_CHANGE WriteCacheChangeable;
  /* 0x0014 */ enum _WRITE_THROUGH WriteThroughSupported;
  /* 0x0018 */ unsigned char FlushCacheSupported;
  /* 0x0019 */ unsigned char UserDefinedPowerProtection;
  /* 0x001a */ unsigned char NVCacheEnabled;
  /* 0x001b */ char __PADDING__[1];
} STORAGE_WRITE_CACHE_PROPERTY, *PSTORAGE_WRITE_CACHE_PROPERTY; /* size: 0x001c */

class CProperty
{
  /* 0x0000 */ unsigned long m_dwPropID;
  /* 0x0004 */ unsigned long m_dwType;
  /* 0x0008 */ void* m_pValue;
}; /* size: 0x0010 */

typedef struct __vc_attributes::defaultAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::defaultAttribute, *P_vc_attributes::defaultAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::providerAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* uuid;
  /* 0x0010 */ int cookies;
  /* 0x0014 */ long __PADDING__[1];
} _vc_attributes::providerAttribute, *P_vc_attributes::providerAttribute; /* size: 0x0018 */

struct tagPRINTPAGERANGE
{
  /* 0x0000 */ unsigned long nFromPage;
  /* 0x0004 */ unsigned long nToPage;
}; /* size: 0x0008 */

typedef struct __vc_attributes::importAttribute
{
  /* 0x0000 */ const char* idl_file;
} _vc_attributes::importAttribute, *P_vc_attributes::importAttribute; /* size: 0x0008 */

class CEnumSTATPROPBAG
{
  /* 0x0000 */ long Padding_1209[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ long Padding_1210;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0018 */ class CSTATPROPBAGArray* _parray;
  /* 0x0020 */ unsigned long _iarray;
}; /* size: 0x0028 */

typedef struct __vc_attributes::satypeAttribute
{
  /* 0x0000 */ const char* type;
} _vc_attributes::satypeAttribute, *P_vc_attributes::satypeAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::async_uuidAttribute
{
  /* 0x0000 */ const char* uuid;
} _vc_attributes::async_uuidAttribute, *P_vc_attributes::async_uuidAttribute; /* size: 0x0008 */

struct SStorageFile
{
  /* 0x0000 */ unsigned char abSig[8];
  /* 0x0008 */ struct _GUID _clid;
}; /* size: 0x0018 */

typedef struct __vc_attributes::unhookAttribute
{
  /* 0x0000 */ const char* event;
  /* 0x0008 */ const char* source;
  /* 0x0010 */ const char* handler;
  /* 0x0018 */ const char* receiver;
} _vc_attributes::unhookAttribute, *P_vc_attributes::unhookAttribute; /* size: 0x0020 */

typedef struct __vc_attributes::nonextensibleAttribute
{
} _vc_attributes::nonextensibleAttribute, *P_vc_attributes::nonextensibleAttribute; /* size: 0x0001 */

typedef struct _PRINTER_OPTIONSA
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ unsigned long dwFlags;
} PRINTER_OPTIONSA, *PPRINTER_OPTIONSA; /* size: 0x0008 */

typedef struct __vc_attributes::aggregatableAttribute
{
  /* 0x0000 */ enum __vc_attributes::aggregatableAttribute::type_e type;
} _vc_attributes::aggregatableAttribute, *P_vc_attributes::aggregatableAttribute; /* size: 0x0004 */

struct tagPROPHEADER
{
  /* 0x0000 */ unsigned short wByteOrder;
  /* 0x0002 */ unsigned short wFormat;
  /* 0x0004 */ unsigned long dwOSVer;
  /* 0x0008 */ struct _GUID clsID;
  /* 0x0018 */ unsigned long cSections;
}; /* size: 0x001c */

class CArray<CPropertySection *,CPropertySection * &>
{
  /* 0x0000 */ class CPropertySection** m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

class CPropertySet
{
  /* 0x0000 */ struct tagPROPHEADER m_PH;
  /* 0x001c */ long Padding_1211;
  /* 0x0020 */ class CArray<CPropertySection *,CPropertySection * &> m_SectionList;
}; /* size: 0x0038 */

typedef struct __vc_attributes::progidAttribute
{
  /* 0x0000 */ const char* name;
} _vc_attributes::progidAttribute, *P_vc_attributes::progidAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::wire_marshalAttribute
{
  /* 0x0000 */ const char* wire_type;
} _vc_attributes::wire_marshalAttribute, *P_vc_attributes::wire_marshalAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::vi_progidAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::vi_progidAttribute, *P_vc_attributes::vi_progidAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::odlAttribute
{
} _vc_attributes::odlAttribute, *P_vc_attributes::odlAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::bindableAttribute
{
} _vc_attributes::bindableAttribute, *P_vc_attributes::bindableAttribute; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRuntimeBroker> >
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::helpstringdllAttribute
{
  /* 0x0000 */ const char* dllname;
} _vc_attributes::helpstringdllAttribute, *P_vc_attributes::helpstringdllAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::defaultcollelemAttribute
{
} _vc_attributes::defaultcollelemAttribute, *P_vc_attributes::defaultcollelemAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::atl::db_commandAttribute
{
  /* 0x0000 */ const char* command;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* source_name;
  /* 0x0018 */ const char* hresult;
  /* 0x0020 */ const char* bindings;
  /* 0x0028 */ const char* bulk_fetch;
} _vc_attributes::atl::db_commandAttribute, *P_vc_attributes::atl::db_commandAttribute; /* size: 0x0030 */

typedef struct __vc_attributes::atl::db_columnAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0008 */ const char* dbtype;
  /* 0x0010 */ const char* precision;
  /* 0x0018 */ const char* scale;
  /* 0x0020 */ const char* status;
  /* 0x0028 */ const char* length;
} _vc_attributes::atl::db_columnAttribute, *P_vc_attributes::atl::db_columnAttribute; /* size: 0x0030 */

typedef struct __vc_attributes::atl::db_tableAttribute
{
  /* 0x0000 */ const char* table;
  /* 0x0008 */ const char* name;
  /* 0x0010 */ const char* source_name;
  /* 0x0018 */ const char* hresult;
  /* 0x0020 */ const char* bulk_fetch;
} _vc_attributes::atl::db_tableAttribute, *P_vc_attributes::atl::db_tableAttribute; /* size: 0x0028 */

struct midistrmbuffver_tag
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ unsigned long dwMid;
  /* 0x0008 */ unsigned long dwOEMVersion;
}; /* size: 0x000c */

typedef struct __vc_attributes::atl::aggregatesAttribute
{
  /* 0x0000 */ const char* clsid;
} _vc_attributes::atl::aggregatesAttribute, *P_vc_attributes::atl::aggregatesAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::atl::soap_headerAttribute
{
  /* 0x0000 */ const char* value;
  /* 0x0008 */ BOOL required;
  /* 0x0009 */ BOOL in;
  /* 0x000a */ BOOL out;
  /* 0x000b */ char __PADDING__[5];
} _vc_attributes::atl::soap_headerAttribute, *P_vc_attributes::atl::soap_headerAttribute; /* size: 0x0010 */

typedef struct __vc_attributes::atl::perfmonAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ BOOL register;
  /* 0x0009 */ char __PADDING__[7];
} _vc_attributes::atl::perfmonAttribute, *P_vc_attributes::atl::perfmonAttribute; /* size: 0x0010 */

typedef struct _EVENT_DATA_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Reserved;
} EVENT_DATA_DESCRIPTOR, *PEVENT_DATA_DESCRIPTOR; /* size: 0x0010 */

class C2Security
{
  /* 0x0000 */ int m_bProtectionMode;
}; /* size: 0x0004 */

typedef struct __vc_attributes::atl::support_error_infoAttribute
{
  /* 0x0000 */ const char* error_interface;
} _vc_attributes::atl::support_error_infoAttribute, *P_vc_attributes::atl::support_error_infoAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::atl::tag_nameAttribute
{
  /* 0x0000 */ const char* name;
  /* 0x0008 */ const char* parse_func;
} _vc_attributes::atl::tag_nameAttribute, *P_vc_attributes::atl::tag_nameAttribute; /* size: 0x0010 */

struct PrintNamedProperty
{
  /* 0x0000 */ wchar_t* propertyName;
  /* 0x0008 */ struct PrintPropertyValue propertyValue;
}; /* size: 0x0020 */

typedef struct __vc_attributes::atl::db_paramAttribute
{
  /* 0x0000 */ const char* ordinal;
  /* 0x0008 */ const char* paramtype;
  /* 0x0010 */ const char* dbtype;
  /* 0x0018 */ const char* precision;
  /* 0x0020 */ const char* scale;
  /* 0x0028 */ const char* status;
  /* 0x0030 */ const char* length;
} _vc_attributes::atl::db_paramAttribute, *P_vc_attributes::atl::db_paramAttribute; /* size: 0x0038 */

typedef struct __vc_attributes::atl::soap_methodAttribute
{
  /* 0x0000 */ const char* name;
} _vc_attributes::atl::soap_methodAttribute, *P_vc_attributes::atl::soap_methodAttribute; /* size: 0x0008 */

typedef struct __midl_frag1754_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1754_t, *P_midl_frag1754_t; /* size: 0x0058 */

typedef struct __vc_attributes::atl::synchronizeAttribute
{
} _vc_attributes::atl::synchronizeAttribute, *P_vc_attributes::atl::synchronizeAttribute; /* size: 0x0001 */

typedef struct _DEVICE_DATA_SET_RANGE
{
  /* 0x0000 */ __int64 StartingOffset;
  /* 0x0008 */ unsigned __int64 LengthInBytes;
} DEVICE_DATA_SET_RANGE, *PDEVICE_DATA_SET_RANGE; /* size: 0x0010 */

typedef struct __vc_attributes::caseAttribute
{
  /* 0x0000 */ int value;
} _vc_attributes::caseAttribute, *P_vc_attributes::caseAttribute; /* size: 0x0004 */

typedef struct __midl_frag1584_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1584_t, *P_midl_frag1584_t; /* size: 0x0068 */

typedef struct __vc_attributes::helpstringAttribute
{
  /* 0x0000 */ const char* help_text_string;
} _vc_attributes::helpstringAttribute, *P_vc_attributes::helpstringAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::entryAttribute
{
  /* 0x0000 */ const char* entry_id;
} _vc_attributes::entryAttribute, *P_vc_attributes::entryAttribute; /* size: 0x0008 */

struct tagOFN_NT4W
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1212;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const wchar_t* lpstrFilter;
  /* 0x0020 */ wchar_t* lpstrCustomFilter;
  /* 0x0028 */ unsigned long nMaxCustFilter;
  /* 0x002c */ unsigned long nFilterIndex;
  /* 0x0030 */ wchar_t* lpstrFile;
  /* 0x0038 */ unsigned long nMaxFile;
  /* 0x003c */ long Padding_1213;
  /* 0x0040 */ wchar_t* lpstrFileTitle;
  /* 0x0048 */ unsigned long nMaxFileTitle;
  /* 0x004c */ long Padding_1214;
  /* 0x0050 */ const wchar_t* lpstrInitialDir;
  /* 0x0058 */ const wchar_t* lpstrTitle;
  /* 0x0060 */ unsigned long Flags;
  /* 0x0064 */ unsigned short nFileOffset;
  /* 0x0066 */ unsigned short nFileExtension;
  /* 0x0068 */ const wchar_t* lpstrDefExt;
  /* 0x0070 */ __int64 lCustData;
  /* 0x0078 */ void* lpfnHook /* function */;
  /* 0x0080 */ const wchar_t* lpTemplateName;
}; /* size: 0x0088 */

typedef struct __midl_frag1703_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1703_t, *P_midl_frag1703_t; /* size: 0x0010 */

typedef struct __vc_attributes::defaultvtableAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::defaultvtableAttribute, *P_vc_attributes::defaultvtableAttribute; /* size: 0x0008 */

struct WireThisPart1
{
  /* 0x0000 */ struct tagCOMVERSION version;
  /* 0x0004 */ unsigned long flags;
  /* 0x0008 */ unsigned long reserved1;
  /* 0x000c */ struct _GUID cid;
  /* 0x001c */ unsigned long unique;
}; /* size: 0x0020 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlWORAStream *,Windows::Auto<Windows::Rtl::IRtlWORAStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWORAStream* m_Data;
}; /* size: 0x0008 */

typedef struct __vc_attributes::event_sourceAttribute
{
  /* 0x0000 */ enum __vc_attributes::event_sourceAttribute::type_e type;
  /* 0x0004 */ enum __vc_attributes::event_sourceAttribute::optimize_e optimize;
  /* 0x0008 */ BOOL decorate;
  /* 0x0009 */ char __PADDING__[3];
} _vc_attributes::event_sourceAttribute, *P_vc_attributes::event_sourceAttribute; /* size: 0x000c */

struct IBuffer
{
}; /* size: 0x0008 */

typedef struct __vc_attributes::last_isAttribute
{
  /* 0x0000 */ const char* expression;
} _vc_attributes::last_isAttribute, *P_vc_attributes::last_isAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::helper_attributes::usageAttribute
{
  /* 0x0000 */ unsigned int value;
} _vc_attributes::helper_attributes::usageAttribute, *P_vc_attributes::helper_attributes::usageAttribute; /* size: 0x0004 */

struct tagMCI_STATUS_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned __int64 dwReturn;
  /* 0x0010 */ unsigned long dwItem;
  /* 0x0014 */ unsigned long dwTrack;
}; /* size: 0x0018 */

typedef struct __vc_attributes::helper_attributes::attributeAttribute
{
  union
  {
    /* 0x0000 */ const int All;
    /* 0x0000 */ const int Assembly;
    /* 0x0000 */ const int Class;
    /* 0x0000 */ const int Constructor;
    /* 0x0000 */ const int Delegate;
    /* 0x0000 */ const int Enum;
    /* 0x0000 */ const int Event;
    /* 0x0000 */ const int Field;
    /* 0x0000 */ const int GenericParameter;
    /* 0x0000 */ const int Interface;
    /* 0x0000 */ const int Method;
    /* 0x0000 */ const int Module;
    /* 0x0000 */ const int Parameter;
    /* 0x0000 */ const int Property;
    /* 0x0000 */ const int ReturnValue;
    /* 0x0000 */ const int Struct;
    /* 0x0000 */ int ValidOn;
  }; /* size: 0x0004 */
  /* 0x0004 */ BOOL AllowMultiple;
  /* 0x0005 */ BOOL Inherited;
  /* 0x0006 */ char __PADDING__[2];
} _vc_attributes::helper_attributes::attributeAttribute, *P_vc_attributes::helper_attributes::attributeAttribute; /* size: 0x0008 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;

typedef struct __vc_attributes::helper_attributes::v1_alttypeAttribute
{
  /* 0x0000 */ enum __vc_attributes::helper_attributes::v1_alttypeAttribute::type_e type;
} _vc_attributes::helper_attributes::v1_alttypeAttribute, *P_vc_attributes::helper_attributes::v1_alttypeAttribute; /* size: 0x0004 */

class CGlobalContext
{
  /* 0x0000 */ long Padding_1215[4];
  /* 0x0010 */ int _fTakeLock;
  /* 0x0014 */ unsigned long _dfOpenLock;
  /* 0x0018 */ struct IMalloc* const _pMalloc;
  /* 0x0020 */ const int _fCreated;
  /* 0x0024 */ long Padding_1216;
  /* 0x0028 */ union _LARGE_INTEGER _luidMutexName;
  /* 0x0030 */ struct _GLOBAL_SHARED_CRITICAL_SECTION _GlobalPortion;
}; /* size: 0x0040 */

class AdditionHelper<long,long,6>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::helper_attributes::default_valueAttribute
{
  /* 0x0000 */ void* value;
} _vc_attributes::helper_attributes::default_valueAttribute, *P_vc_attributes::helper_attributes::default_valueAttribute; /* size: 0x0008 */

typedef struct _PRINTER_INFO_8A
{
  /* 0x0000 */ struct _devicemodeA* pDevMode;
} PRINTER_INFO_8A, *PPRINTER_INFO_8A; /* size: 0x0008 */

typedef struct __vc_attributes::importidlAttribute
{
  /* 0x0000 */ const char* value;
} _vc_attributes::importidlAttribute, *P_vc_attributes::importidlAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::cpp_quoteAttribute
{
  /* 0x0000 */ const char* string;
} _vc_attributes::cpp_quoteAttribute, *P_vc_attributes::cpp_quoteAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::refAttribute
{
} _vc_attributes::refAttribute, *P_vc_attributes::refAttribute; /* size: 0x0001 */

struct SystemBlockHeader
{
  /* 0x0000 */ long lIndex;
  /* 0x0004 */ unsigned long ulSignature;
  /* 0x0008 */ long __PADDING__[2];
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> >
{
}; /* size: 0x0008 */

class Windows::ErrorHandling::Rtl::CBaseFrame<Windows::ErrorHandling::Rtl::CVoidRaiseFrame>
{
}; /* size: 0x0001 */

typedef struct __vc_attributes::lcidAttribute
{
} _vc_attributes::lcidAttribute, *P_vc_attributes::lcidAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::helpfileAttribute
{
  /* 0x0000 */ const char* filename;
} _vc_attributes::helpfileAttribute, *P_vc_attributes::helpfileAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::transmit_asAttribute
{
  /* 0x0000 */ const char* xmit_type;
} _vc_attributes::transmit_asAttribute, *P_vc_attributes::transmit_asAttribute; /* size: 0x0008 */

typedef struct __vc_attributes::library_blockAttribute
{
} _vc_attributes::library_blockAttribute, *P_vc_attributes::library_blockAttribute; /* size: 0x0001 */

typedef struct __vc_attributes::optionalAttribute
{
} _vc_attributes::optionalAttribute, *P_vc_attributes::optionalAttribute; /* size: 0x0001 */

class CArray<CFormatEtc>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_1217;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CFormatEtc>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

struct timecaps_tag
{
  /* 0x0000 */ unsigned int wPeriodMin;
  /* 0x0004 */ unsigned int wPeriodMax;
}; /* size: 0x0008 */

typedef struct _FILE_FS_SECTOR_SIZE_INFORMATION
{
  /* 0x0000 */ unsigned long LogicalBytesPerSector;
  /* 0x0004 */ unsigned long PhysicalBytesPerSectorForAtomicity;
  /* 0x0008 */ unsigned long PhysicalBytesPerSectorForPerformance;
  /* 0x000c */ unsigned long FileSystemEffectivePhysicalBytesPerSectorForAtomicity;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ unsigned long ByteOffsetForSectorAlignment;
  /* 0x0018 */ unsigned long ByteOffsetForPartitionAlignment;
} FILE_FS_SECTOR_SIZE_INFORMATION, *PFILE_FS_SECTOR_SIZE_INFORMATION; /* size: 0x001c */

struct tagEMRGDICOMMENT
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned char Data[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

class Windows::Auto<Windows::Rtl::IRtlObject *>
{
}; /* size: 0x0008 */

typedef struct _ALPC_BASIC_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long SequenceNo;
  /* 0x0008 */ void* PortContext;
} ALPC_BASIC_INFORMATION, *PALPC_BASIC_INFORMATION; /* size: 0x0010 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IImpersonateClipboardOwner>;

typedef struct _SENDCMDOUTPARAMS
{
  /* 0x0000 */ unsigned long cBufferSize;
  /* 0x0004 */ struct _DRIVERSTATUS DriverStatus;
  /* 0x0010 */ unsigned char bBuffer[1];
} SENDCMDOUTPARAMS, *PSENDCMDOUTPARAMS; /* size: 0x0011 */

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBrokerInternal,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0010 */

struct tagRECONVERTSTRING
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long dwStrLen;
  /* 0x000c */ unsigned long dwStrOffset;
  /* 0x0010 */ unsigned long dwCompStrLen;
  /* 0x0014 */ unsigned long dwCompStrOffset;
  /* 0x0018 */ unsigned long dwTargetStrLen;
  /* 0x001c */ unsigned long dwTargetStrOffset;
}; /* size: 0x0020 */

class CDfNameList
{
  /* 0x0000 */ class CDfName _df;
  /* 0x0042 */ char Padding_1218[2];
  /* 0x0044 */ unsigned long _sectStart;
  /* 0x0048 */ unsigned long _ulSize;
  /* 0x004c */ long Padding_1219;
  /* 0x0050 */ class CDfNameList* _pdflNext;
}; /* size: 0x0058 */

typedef struct _AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ struct _CMSG_SIGNER_INFO* pSignerInfo;
} AUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x0010 */

class CPatternTbl
{
  /* 0x0000 */ struct STblHdr* _pTblHdr;
  /* 0x0008 */ unsigned char* _pStart;
}; /* size: 0x0010 */

typedef struct __MIDL___MIDL_itf_activate_0000_0010_0004
{
  /* 0x0000 */ unsigned long ulNumClasses;
  /* 0x0004 */ long Padding_1220;
  /* 0x0008 */ struct _GUID* pCLSIDs;
  /* 0x0010 */ unsigned long pidProcess;
  /* 0x0014 */ long Padding_1221;
  /* 0x0018 */ void* hProcess;
  /* 0x0020 */ void* hImpersonationToken;
  /* 0x0028 */ wchar_t* pwszWinstaDesktop;
  /* 0x0030 */ unsigned long dwState;
  /* 0x0034 */ struct _GUID AppId;
  /* 0x0044 */ enum __MIDL___MIDL_itf_activate_0000_0010_0001 ServerType;
  /* 0x0048 */ enum __MIDL___MIDL_itf_activate_0000_0010_0002 ServerID;
  /* 0x004c */ struct _FILETIME ftCreated;
  /* 0x0054 */ long __PADDING__[1];
} _MIDL___MIDL_itf_activate_0000_0010_0004, *P_MIDL___MIDL_itf_activate_0000_0010_0004; /* size: 0x0058 */

class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64>
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ long HighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ __int64 QuadPart;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 TokenOffset;
  /* 0x0010 */ struct _STORAGE_OFFLOAD_TOKEN Token;
} DEVICE_DSM_OFFLOAD_WRITE_PARAMETERS, *PDEVICE_DSM_OFFLOAD_WRITE_PARAMETERS; /* size: 0x0210 */

typedef struct _SET_PARTITION_INFORMATION
{
  /* 0x0000 */ unsigned char PartitionType;
} SET_PARTITION_INFORMATION, *PSET_PARTITION_INFORMATION; /* size: 0x0001 */

typedef struct _RTL_UNLOAD_EVENT_TRACE32
{
  /* 0x0000 */ unsigned long BaseAddress;
  /* 0x0004 */ unsigned long SizeOfImage;
  /* 0x0008 */ unsigned long Sequence;
  /* 0x000c */ unsigned long TimeDateStamp;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ wchar_t ImageName[32];
  /* 0x0054 */ unsigned long Version[2];
} RTL_UNLOAD_EVENT_TRACE32, *PRTL_UNLOAD_EVENT_TRACE32; /* size: 0x005c */

typedef struct __midl_frag406_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag406_t, *P_midl_frag406_t; /* size: 0x000c */

typedef struct _SYSTEM_POWER_POLICY
{
  /* 0x0000 */ unsigned long Revision;
  /* 0x0004 */ struct POWER_ACTION_POLICY PowerButton;
  /* 0x0010 */ struct POWER_ACTION_POLICY SleepButton;
  /* 0x001c */ struct POWER_ACTION_POLICY LidClose;
  /* 0x0028 */ enum _SYSTEM_POWER_STATE LidOpenWake;
  /* 0x002c */ unsigned long Reserved;
  /* 0x0030 */ struct POWER_ACTION_POLICY Idle;
  /* 0x003c */ unsigned long IdleTimeout;
  /* 0x0040 */ unsigned char IdleSensitivity;
  /* 0x0041 */ unsigned char DynamicThrottle;
  /* 0x0042 */ unsigned char Spare2[2];
  /* 0x0044 */ enum _SYSTEM_POWER_STATE MinSleep;
  /* 0x0048 */ enum _SYSTEM_POWER_STATE MaxSleep;
  /* 0x004c */ enum _SYSTEM_POWER_STATE ReducedLatencySleep;
  /* 0x0050 */ unsigned long WinLogonFlags;
  /* 0x0054 */ unsigned long Spare3;
  /* 0x0058 */ unsigned long DozeS4Timeout;
  /* 0x005c */ unsigned long BroadcastCapacityResolution;
  /* 0x0060 */ struct SYSTEM_POWER_LEVEL DischargePolicy[4];
  /* 0x00c0 */ unsigned long VideoTimeout;
  /* 0x00c4 */ unsigned char VideoDimDisplay;
  /* 0x00c5 */ char Padding_1222[3];
  /* 0x00c8 */ unsigned long VideoReserved[3];
  /* 0x00d4 */ unsigned long SpindownTimeout;
  /* 0x00d8 */ unsigned char OptimizeForPower;
  /* 0x00d9 */ unsigned char FanThrottleTolerance;
  /* 0x00da */ unsigned char ForcedThrottle;
  /* 0x00db */ unsigned char MinThrottle;
  /* 0x00dc */ struct POWER_ACTION_POLICY OverThrottled;
} SYSTEM_POWER_POLICY, *PSYSTEM_POWER_POLICY; /* size: 0x00e8 */

class CClassCache::CDllClassEntry
{
  /* 0x0000 */ long Padding_1223[10];
  /* 0x0028 */ unsigned long _dwDllThreadModel;
  /* 0x002c */ long Padding_1224;
  /* 0x0030 */ class CClassCache::CDllPathEntry* _pDllPathEntry;
  /* 0x0038 */ class CClassCache::CDllClassEntry* _pDllClsNext;
  /* 0x0040 */ struct _GUID _impclsid;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0068 */
}; /* size: 0x0050 */

typedef struct _TRANSACTION_LIST_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTransactions;
  /* 0x0004 */ struct _TRANSACTION_LIST_ENTRY TransactionInformation[1];
} TRANSACTION_LIST_INFORMATION, *PTRANSACTION_LIST_INFORMATION; /* size: 0x0014 */

typedef struct _NCRYPT_CIPHER_PADDING_INFO
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ unsigned char* pbIV;
  /* 0x0010 */ unsigned long cbIV;
  /* 0x0014 */ long Padding_1225;
  /* 0x0018 */ unsigned char* pbOtherInfo;
  /* 0x0020 */ unsigned long cbOtherInfo;
  /* 0x0024 */ long __PADDING__[1];
} NCRYPT_CIPHER_PADDING_INFO, *PNCRYPT_CIPHER_PADDING_INFO; /* size: 0x0028 */

class CPropertyBagEx
{
  /* 0x0000 */ long Padding_1226[4];
  /* 0x0010 */ int _fLcidInitialized : 1; /* bit position: 0 */
  /* 0x0014 */ unsigned long _lcid;
  /* 0x0018 */ struct IPropertySetStorage* _ppropsetstgContainer;
  /* 0x0020 */ struct IPropertyStorage* _ppropstg;
  /* 0x0028 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0030 */ unsigned long _grfMode;
  /* 0x0034 */ long _cRefs;
}; /* size: 0x0038 */

class CNtfsStorage
{
  /* 0x0000 */ long Padding_1227[14];
  /* 0x0038 */ unsigned long _sig;
  /* 0x003c */ long Padding_1228;
  /* 0x0040 */ class CNFFTreeMutex* _pTreeMutex;
  /* 0x0048 */ unsigned long _grfMode;
  /* 0x004c */ wchar_t _wcDriveLetter;
  /* 0x004e */ char Padding_1229[2];
  /* 0x0050 */ class CNtfsStorageForPropSetStg _NtfsStorageForPropSetStg;
  /* 0x0060 */ class CNtfsStream* _pstmOpenList;
  /* 0x0068 */ void* _hFileMainStream;
  /* 0x0070 */ void* _hFileControlStream;
  /* 0x0078 */ unsigned short _hsmStatus;
  /* 0x007a */ char Padding_1230[2];
  /* 0x007c */ unsigned long _dwStgStateBits;
  /* 0x0080 */ struct _GUID _clsidStgClass;
  /* 0x0090 */ class CPropertyBagEx _PropertyBagEx;
  /* 0x00c8 */ unsigned long _dwState;
  /* 0x00cc */ struct _FILETIME _filetime;
}; /* size: 0x00d8 */

typedef struct _IMAGE_DELAYLOAD_DESCRIPTOR
{
  union
  {
    union
    {
      /* 0x0000 */ unsigned long AllAttributes;
      struct /* bitfield */
      {
        /* 0x0000 */ unsigned long RvaBased : 1; /* bit position: 0 */
        /* 0x0000 */ unsigned long ReservedAttributes : 31; /* bit position: 1 */
      }; /* bitfield */
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ Attributes;
  /* 0x0004 */ unsigned long DllNameRVA;
  /* 0x0008 */ unsigned long ModuleHandleRVA;
  /* 0x000c */ unsigned long ImportAddressTableRVA;
  /* 0x0010 */ unsigned long ImportNameTableRVA;
  /* 0x0014 */ unsigned long BoundImportAddressTableRVA;
  /* 0x0018 */ unsigned long UnloadInformationTableRVA;
  /* 0x001c */ unsigned long TimeDateStamp;
} IMAGE_DELAYLOAD_DESCRIPTOR, *PIMAGE_DELAYLOAD_DESCRIPTOR; /* size: 0x0020 */

class DeserializeHelper::SafeArrayDestroyer
{
}; /* size: 0x0008 */

struct tagMIXERLINECONTROLSW
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwLineID;
  union
  {
    /* 0x0008 */ unsigned long dwControlID;
    /* 0x0008 */ unsigned long dwControlType;
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long cControls;
  /* 0x0010 */ unsigned long cbmxctrl;
  /* 0x0014 */ struct tagMIXERCONTROLW* pamxctrl;
}; /* size: 0x001c */

typedef struct __midl_frag199_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag199_t, *P_midl_frag199_t; /* size: 0x0028 */

struct _EX_WNF_SUBSCRIPTION;

struct tagMCI_WAVE_SET_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwTimeFormat;
  /* 0x000c */ unsigned long dwAudio;
  /* 0x0010 */ unsigned int wInput;
  /* 0x0014 */ unsigned int wOutput;
  /* 0x0018 */ unsigned short wFormatTag;
  /* 0x001a */ unsigned short wReserved2;
  /* 0x001c */ unsigned short nChannels;
  /* 0x001e */ unsigned short wReserved3;
  /* 0x0020 */ unsigned long nSamplesPerSec;
  /* 0x0024 */ unsigned long nAvgBytesPerSec;
  /* 0x0028 */ unsigned short nBlockAlign;
  /* 0x002a */ unsigned short wReserved4;
  /* 0x002c */ unsigned short wBitsPerSample;
  /* 0x002e */ unsigned short wReserved5;
}; /* size: 0x0030 */

typedef struct _SYSTEM_BOOT_LOGO_INFORMATION
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long BitmapOffset;
} SYSTEM_BOOT_LOGO_INFORMATION, *PSYSTEM_BOOT_LOGO_INFORMATION; /* size: 0x0008 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IClipboardBroker>
{
}; /* size: 0x0008 */

typedef struct _DRIVER_INFO_4W
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_1231;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ wchar_t* pEnvironment;
  /* 0x0018 */ wchar_t* pDriverPath;
  /* 0x0020 */ wchar_t* pDataFile;
  /* 0x0028 */ wchar_t* pConfigFile;
  /* 0x0030 */ wchar_t* pHelpFile;
  /* 0x0038 */ wchar_t* pDependentFiles;
  /* 0x0040 */ wchar_t* pMonitorName;
  /* 0x0048 */ wchar_t* pDefaultDataType;
  /* 0x0050 */ wchar_t* pszzPreviousNames;
} DRIVER_INFO_4W, *PDRIVER_INFO_4W; /* size: 0x0058 */

typedef struct __midl_frag1399_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1399_t, *P_midl_frag1399_t; /* size: 0x000c */

struct tagMEASUREITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemWidth;
  /* 0x0010 */ unsigned int itemHeight;
  /* 0x0014 */ long Padding_1232;
  /* 0x0018 */ unsigned __int64 itemData;
}; /* size: 0x0020 */

struct IInterfaceFromWindowProp
{
}; /* size: 0x0008 */

struct IEnumFORMATETCVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef struct __midl_frag617_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag617_t, *P_midl_frag617_t; /* size: 0x0078 */

typedef struct _CM_PCCARD_DEVICE_DATA
{
  /* 0x0000 */ unsigned char Flags;
  /* 0x0001 */ unsigned char ErrorCode;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned long BusData;
  /* 0x0008 */ unsigned long DeviceId;
  /* 0x000c */ unsigned long LegacyBaseAddress;
  /* 0x0010 */ unsigned char IRQMap[16];
} CM_PCCARD_DEVICE_DATA, *PCM_PCCARD_DEVICE_DATA; /* size: 0x0020 */

typedef struct _COUNTED_REASON_CONTEXT
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  union
  {
    struct
    {
      /* 0x0008 */ struct _UNICODE_STRING ResourceFileName;
      /* 0x0018 */ unsigned short ResourceReasonId;
      /* 0x001a */ char Padding_1233[2];
      /* 0x001c */ unsigned long StringCount;
      /* 0x0020 */ struct _UNICODE_STRING* ReasonStrings;
    }; /* size: 0x001e */
    struct
    {
      /* 0x0008 */ struct _UNICODE_STRING SimpleString;
      /* 0x0018 */ long __PADDING__[4];
    }; /* size: 0x0020 */
  }; /* size: 0x0020 */
} COUNTED_REASON_CONTEXT, *PCOUNTED_REASON_CONTEXT; /* size: 0x0028 */

class CClassCache::CWinRTDllClassEntry
{
  /* 0x0000 */ long Padding_1234[6];
  /* 0x0018 */ struct SActivatableClassIdHashNode _hashNode;
  /* 0x0030 */ unsigned long _dwSig;
  /* 0x0034 */ unsigned long _cLocks;
  /* 0x0038 */ class CClassCache::CDllPathEntry* _pDllPathEntry;
  /* 0x0040 */ class CClassCache::CWinRTDllClassEntry* _pDllClsNext;
  union
  {
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0068 */
}; /* size: 0x0048 */

class RunSyncOnMTAThread::__l6::<lambda_112812E40241EED9>;

struct tagOFNA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1235;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ const char* lpstrFilter;
  /* 0x0020 */ char* lpstrCustomFilter;
  /* 0x0028 */ unsigned long nMaxCustFilter;
  /* 0x002c */ unsigned long nFilterIndex;
  /* 0x0030 */ char* lpstrFile;
  /* 0x0038 */ unsigned long nMaxFile;
  /* 0x003c */ long Padding_1236;
  /* 0x0040 */ char* lpstrFileTitle;
  /* 0x0048 */ unsigned long nMaxFileTitle;
  /* 0x004c */ long Padding_1237;
  /* 0x0050 */ const char* lpstrInitialDir;
  /* 0x0058 */ const char* lpstrTitle;
  /* 0x0060 */ unsigned long Flags;
  /* 0x0064 */ unsigned short nFileOffset;
  /* 0x0066 */ unsigned short nFileExtension;
  /* 0x0068 */ const char* lpstrDefExt;
  /* 0x0070 */ __int64 lCustData;
  /* 0x0078 */ void* lpfnHook /* function */;
  /* 0x0080 */ const char* lpTemplateName;
  /* 0x0088 */ void* pvReserved;
  /* 0x0090 */ unsigned long dwReserved;
  /* 0x0094 */ unsigned long FlagsEx;
}; /* size: 0x0098 */

struct tagPDA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1238;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ void* hDevMode;
  /* 0x0018 */ void* hDevNames;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ unsigned short nFromPage;
  /* 0x002e */ unsigned short nToPage;
  /* 0x0030 */ unsigned short nMinPage;
  /* 0x0032 */ unsigned short nMaxPage;
  /* 0x0034 */ unsigned short nCopies;
  /* 0x0036 */ char Padding_1239[2];
  /* 0x0038 */ struct HINSTANCE__* hInstance;
  /* 0x0040 */ __int64 lCustData;
  /* 0x0048 */ void* lpfnPrintHook /* function */;
  /* 0x0050 */ void* lpfnSetupHook /* function */;
  /* 0x0058 */ const char* lpPrintTemplateName;
  /* 0x0060 */ const char* lpSetupTemplateName;
  /* 0x0068 */ void* hPrintTemplate;
  /* 0x0070 */ void* hSetupTemplate;
}; /* size: 0x0078 */

typedef struct _CONSOLE_FONT_INFO
{
  /* 0x0000 */ unsigned long nFont;
  /* 0x0004 */ struct _COORD dwFontSize;
} CONSOLE_FONT_INFO, *PCONSOLE_FONT_INFO; /* size: 0x0008 */

class Microsoft::WRL::Details::RemoveIUnknownBase<ClipboardDataObjectTask>
{
}; /* size: 0x0078 */

struct tagSTGOPTIONS
{
  /* 0x0000 */ unsigned short usVersion;
  /* 0x0002 */ unsigned short reserved;
  /* 0x0004 */ unsigned long ulSectorSize;
  /* 0x0008 */ const wchar_t* pwcsTemplateFile;
}; /* size: 0x0010 */

typedef struct _SD_QUERY_STATS_OUTPUT
{
  /* 0x0000 */ unsigned __int64 SdsStreamSize;
  /* 0x0008 */ unsigned __int64 SdsAllocationSize;
  /* 0x0010 */ unsigned __int64 SiiStreamSize;
  /* 0x0018 */ unsigned __int64 SiiAllocationSize;
  /* 0x0020 */ unsigned __int64 SdhStreamSize;
  /* 0x0028 */ unsigned __int64 SdhAllocationSize;
  /* 0x0030 */ unsigned __int64 NumSDTotal;
  /* 0x0038 */ unsigned __int64 NumSDUnused;
} SD_QUERY_STATS_OUTPUT, *PSD_QUERY_STATS_OUTPUT; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshalingStream> const >;

class CEnumFormatEtcDataArray
{
  /* 0x0000 */ long Padding_1240[3];
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ unsigned long m_cOffset;
  /* 0x0014 */ long Padding_1241;
  /* 0x0018 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
}; /* size: 0x0020 */

struct tagLOCALESIGNATURE
{
  /* 0x0000 */ unsigned long lsUsb[4];
  /* 0x0010 */ unsigned long lsCsbDefault[2];
  /* 0x0018 */ unsigned long lsCsbSupported[2];
}; /* size: 0x0020 */

typedef struct __midl_frag254_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag254_t, *P_midl_frag254_t; /* size: 0x0020 */

typedef struct _BIN_RESULTS
{
  /* 0x0000 */ unsigned long NumberOfBins;
  /* 0x0004 */ long Padding_1242;
  /* 0x0008 */ struct _BIN_COUNT BinCounts[1];
} BIN_RESULTS, *PBIN_RESULTS; /* size: 0x0020 */

typedef struct _JOBOBJECT_BASIC_PROCESS_ID_LIST
{
  /* 0x0000 */ unsigned long NumberOfAssignedProcesses;
  /* 0x0004 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} JOBOBJECT_BASIC_PROCESS_ID_LIST, *PJOBOBJECT_BASIC_PROCESS_ID_LIST; /* size: 0x0010 */

struct IMalloc
{
}; /* size: 0x0008 */

struct tagMIDIOUTCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned short wTechnology;
  /* 0x004a */ unsigned short wVoices;
  /* 0x004c */ unsigned short wNotes;
  /* 0x004e */ unsigned short wChannelMask;
  /* 0x0050 */ unsigned long dwSupport;
  /* 0x0054 */ struct _GUID ManufacturerGuid;
  /* 0x0064 */ struct _GUID ProductGuid;
  /* 0x0074 */ struct _GUID NameGuid;
}; /* size: 0x0084 */

class CLimitedWritableStream::Revert::__l3::<lambda_90BBF1240E966676>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
}; /* size: 0x0008 */

struct HMIXEROBJ__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __midl_frag395_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag395_t, *P_midl_frag395_t; /* size: 0x0038 */

class CLimitedWritableStream::CopyTo::__l9::<lambda_AC2301D1AB195848>;

class type_info
{
  /* 0x0000 */ long Padding_1243[2];
  /* 0x0008 */ void* _m_data;
  /* 0x0010 */ char _m_d_name[1];
}; /* size: 0x0018 */

struct hostent
{
  /* 0x0000 */ char* h_name;
  /* 0x0008 */ char** h_aliases;
  /* 0x0010 */ short h_addrtype;
  /* 0x0012 */ short h_length;
  /* 0x0014 */ long Padding_1244;
  /* 0x0018 */ char** h_addr_list;
}; /* size: 0x0020 */

class TStackBuffer<unsigned long,64>
{
  /* 0x0000 */ long Padding_1245[8];
  /* 0x0020 */ unsigned long _rg[64];
}; /* size: 0x0120 */

class CFormatEtc
{
  /* 0x0000 */ unsigned long m_ulFlags;
  /* 0x0004 */ long Padding_1246;
  /* 0x0008 */ struct tagFORMATETC m_foretc;
}; /* size: 0x0028 */

typedef struct _PROPSHEETHEADERW_V1
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HWND__* hwndParent;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszCaption;
  /* 0x0028 */ unsigned int nPages;
  /* 0x002c */ long Padding_1247;
  union
  {
    /* 0x0030 */ unsigned int nStartPage;
    /* 0x0030 */ const wchar_t* pStartPage;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0038 */ const struct _PROPSHEETPAGEW* ppsp;
    /* 0x0038 */ struct _PSP** phpage;
  }; /* size: 0x0008 */
  /* 0x0040 */ void* pfnCallback /* function */;
} PROPSHEETHEADERW_V1, *PPROPSHEETHEADERW_V1; /* size: 0x0048 */

struct IFillInfo
{
}; /* size: 0x0008 */

typedef struct __midl_frag35_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag35_t, *P_midl_frag35_t; /* size: 0x0030 */

typedef struct _FILE_SYSTEM_RECOGNITION_INFORMATION
{
  /* 0x0000 */ char FileSystem[9];
} FILE_SYSTEM_RECOGNITION_INFORMATION, *PFILE_SYSTEM_RECOGNITION_INFORMATION; /* size: 0x0009 */

typedef struct _UNICODE_PREFIX_TABLE
{
  /* 0x0000 */ short NodeTypeCode;
  /* 0x0002 */ short NameLength;
  /* 0x0004 */ long Padding_1248;
  /* 0x0008 */ struct _UNICODE_PREFIX_TABLE_ENTRY* NextPrefixTree;
  /* 0x0010 */ struct _UNICODE_PREFIX_TABLE_ENTRY* LastNextEntry;
} UNICODE_PREFIX_TABLE, *PUNICODE_PREFIX_TABLE; /* size: 0x0018 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IClipboardBrokerInternal,Microsoft::WRL::Details::Nil>,0,0>
{
}; /* size: 0x0008 */

typedef struct _PROPSHEETPAGEW_V3
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwFlags;
  /* 0x0008 */ struct HINSTANCE__* hInstance;
  union
  {
    /* 0x0010 */ const wchar_t* pszTemplate;
    /* 0x0010 */ const struct DLGTEMPLATE* pResource;
  }; /* size: 0x0008 */
  union
  {
    /* 0x0018 */ struct HICON__* hIcon;
    /* 0x0018 */ const wchar_t* pszIcon;
  }; /* size: 0x0008 */
  /* 0x0020 */ const wchar_t* pszTitle;
  /* 0x0028 */ void* pfnDlgProc /* function */;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ void* pfnCallback /* function */;
  /* 0x0040 */ unsigned int* pcRefParent;
  /* 0x0048 */ const wchar_t* pszHeaderTitle;
  /* 0x0050 */ const wchar_t* pszHeaderSubTitle;
  /* 0x0058 */ void* hActCtx;
} PROPSHEETPAGEW_V3, *PPROPSHEETPAGEW_V3; /* size: 0x0060 */

typedef struct _PROCESS_SESSION_INFORMATION
{
  /* 0x0000 */ unsigned long SessionId;
} PROCESS_SESSION_INFORMATION, *PPROCESS_SESSION_INFORMATION; /* size: 0x0004 */

typedef struct _SYSTEM_CONTEXT_SWITCH_INFORMATION
{
  /* 0x0000 */ unsigned long ContextSwitches;
  /* 0x0004 */ unsigned long FindAny;
  /* 0x0008 */ unsigned long FindLast;
  /* 0x000c */ unsigned long FindIdeal;
  /* 0x0010 */ unsigned long IdleAny;
  /* 0x0014 */ unsigned long IdleCurrent;
  /* 0x0018 */ unsigned long IdleLast;
  /* 0x001c */ unsigned long IdleIdeal;
  /* 0x0020 */ unsigned long PreemptAny;
  /* 0x0024 */ unsigned long PreemptCurrent;
  /* 0x0028 */ unsigned long PreemptLast;
  /* 0x002c */ unsigned long SwitchToIdle;
} SYSTEM_CONTEXT_SWITCH_INFORMATION, *PSYSTEM_CONTEXT_SWITCH_INFORMATION; /* size: 0x0030 */

class BUCL::CConvertToUnsignedType<unsigned long>
{
}; /* size: 0x0001 */

typedef struct _FLS_DATA
{
  /* 0x0000 */ struct _LIST_ENTRY Entry;
  /* 0x0010 */ void* Slots[128];
} FLS_DATA, *PFLS_DATA; /* size: 0x0410 */

typedef struct _MINIDUMP_THREAD_EX_CALLBACK
{
  /* 0x0000 */ unsigned long ThreadId;
  /* 0x0004 */ void* ThreadHandle;
  /* 0x000c */ long Padding_1249;
  /* 0x0010 */ struct _CONTEXT Context;
  /* 0x04e0 */ unsigned long SizeOfContext;
  /* 0x04e4 */ unsigned __int64 StackBase;
  /* 0x04ec */ unsigned __int64 StackEnd;
  /* 0x04f4 */ unsigned __int64 BackingStoreBase;
  /* 0x04fc */ unsigned __int64 BackingStoreEnd;
  /* 0x0504 */ long __PADDING__[3];
} MINIDUMP_THREAD_EX_CALLBACK, *PMINIDUMP_THREAD_EX_CALLBACK; /* size: 0x0510 */

typedef struct _MINIDUMP_INCLUDE_MODULE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 BaseOfImage;
} MINIDUMP_INCLUDE_MODULE_CALLBACK, *PMINIDUMP_INCLUDE_MODULE_CALLBACK; /* size: 0x0008 */

typedef struct _MINIDUMP_IO_CALLBACK
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 Offset;
  /* 0x0010 */ void* Buffer;
  /* 0x0018 */ unsigned long BufferBytes;
} MINIDUMP_IO_CALLBACK, *PMINIDUMP_IO_CALLBACK; /* size: 0x001c */

typedef struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK
{
  /* 0x0000 */ unsigned __int64 Offset;
  /* 0x0008 */ unsigned long Bytes;
  /* 0x000c */ HRESULT FailureStatus;
} MINIDUMP_READ_MEMORY_FAILURE_CALLBACK, *PMINIDUMP_READ_MEMORY_FAILURE_CALLBACK; /* size: 0x0010 */

typedef struct _MINIDUMP_CALLBACK_INPUT
{
  /* 0x0000 */ unsigned long ProcessId;
  /* 0x0004 */ void* ProcessHandle;
  /* 0x000c */ unsigned long CallbackType;
  union
  {
    /* 0x0010 */ HRESULT Status;
    /* 0x0010 */ struct _MINIDUMP_THREAD_CALLBACK Thread;
    /* 0x0010 */ struct _MINIDUMP_THREAD_EX_CALLBACK ThreadEx;
    /* 0x0010 */ struct _MINIDUMP_MODULE_CALLBACK Module;
    /* 0x0010 */ struct _MINIDUMP_INCLUDE_THREAD_CALLBACK IncludeThread;
    /* 0x0010 */ struct _MINIDUMP_INCLUDE_MODULE_CALLBACK IncludeModule;
    /* 0x0010 */ struct _MINIDUMP_IO_CALLBACK Io;
    /* 0x0010 */ struct _MINIDUMP_READ_MEMORY_FAILURE_CALLBACK ReadMemoryFailure;
    struct
    {
      /* 0x0010 */ unsigned long SecondaryFlags;
      /* 0x0014 */ long __PADDING__[323];
    }; /* size: 0x0510 */
  }; /* size: 0x0510 */
} MINIDUMP_CALLBACK_INPUT, *PMINIDUMP_CALLBACK_INPUT; /* size: 0x0520 */

class HashInt
{
}; /* size: 0x0001 */

typedef struct _DISK_EX_INT13_INFO
{
  /* 0x0000 */ unsigned short ExBufferSize;
  /* 0x0002 */ unsigned short ExFlags;
  /* 0x0004 */ unsigned long ExCylinders;
  /* 0x0008 */ unsigned long ExHeads;
  /* 0x000c */ unsigned long ExSectorsPerTrack;
  /* 0x0010 */ unsigned __int64 ExSectorsPerDrive;
  /* 0x0018 */ unsigned short ExSectorSize;
  /* 0x001a */ unsigned short ExReserved;
  /* 0x001c */ long __PADDING__[1];
} DISK_EX_INT13_INFO, *PDISK_EX_INT13_INFO; /* size: 0x0020 */

class Windows::Auto<Windows::Rtl::IRtlWORAStream *>
{
}; /* size: 0x0008 */

typedef struct __midl_frag216_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag216_t, *P_midl_frag216_t; /* size: 0x0020 */

typedef struct _WGLSWAP
{
  /* 0x0000 */ struct HDC__* hdc;
  /* 0x0008 */ unsigned int uiFlags;
  /* 0x000c */ long __PADDING__[1];
} WGLSWAP, *PWGLSWAP; /* size: 0x0010 */

typedef struct __midl_frag88_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag88_t, *P_midl_frag88_t; /* size: 0x000c */

struct IEnumUnknown
{
}; /* size: 0x0008 */

class CReadOnlyStorage::CopyTo::__l12::<lambda_48830B8A68BE8DE9>;

struct tagMCI_ANIM_OPEN_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned int wDeviceID;
  /* 0x000c */ const char* lpstrDeviceType;
  /* 0x0014 */ const char* lpstrElementName;
  /* 0x001c */ const char* lpstrAlias;
  /* 0x0024 */ unsigned long dwStyle;
  /* 0x0028 */ struct HWND__* hWndParent;
}; /* size: 0x0030 */

typedef struct _MINIDUMP_MEMORY_LIST
{
  /* 0x0000 */ unsigned int NumberOfMemoryRanges;
  /* 0x0004 */ struct _MINIDUMP_MEMORY_DESCRIPTOR* MemoryRanges /* zero-length array */;
} MINIDUMP_MEMORY_LIST, *PMINIDUMP_MEMORY_LIST; /* size: 0x0004 */

typedef struct _CMC_DATA_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ long Padding_1250;
  /* 0x0008 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0010 */ unsigned long cTaggedRequest;
  /* 0x0014 */ long Padding_1251;
  /* 0x0018 */ struct _CMC_TAGGED_REQUEST* rgTaggedRequest;
  /* 0x0020 */ unsigned long cTaggedContentInfo;
  /* 0x0024 */ long Padding_1252;
  /* 0x0028 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0030 */ unsigned long cTaggedOtherMsg;
  /* 0x0034 */ long Padding_1253;
  /* 0x0038 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_DATA_INFO, *PCMC_DATA_INFO; /* size: 0x0040 */

typedef struct _CMC_TAGGED_OTHER_MSG
{
  /* 0x0000 */ unsigned long dwBodyPartID;
  /* 0x0004 */ long Padding_1254;
  /* 0x0008 */ char* pszObjId;
  /* 0x0010 */ struct _CRYPTOAPI_BLOB Value;
} CMC_TAGGED_OTHER_MSG, *PCMC_TAGGED_OTHER_MSG; /* size: 0x0020 */

typedef struct _FILE_ID_EXTD_DIR_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long FileIndex;
  /* 0x0008 */ union _LARGE_INTEGER CreationTime;
  /* 0x0010 */ union _LARGE_INTEGER LastAccessTime;
  /* 0x0018 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0020 */ union _LARGE_INTEGER ChangeTime;
  /* 0x0028 */ union _LARGE_INTEGER EndOfFile;
  /* 0x0030 */ union _LARGE_INTEGER AllocationSize;
  /* 0x0038 */ unsigned long FileAttributes;
  /* 0x003c */ unsigned long FileNameLength;
  /* 0x0040 */ unsigned long EaSize;
  /* 0x0044 */ unsigned long ReparsePointTag;
  /* 0x0048 */ struct _FILE_ID_128 FileId;
  /* 0x0058 */ wchar_t FileName[1];
  /* 0x005a */ char __PADDING__[6];
} FILE_ID_EXTD_DIR_INFORMATION, *PFILE_ID_EXTD_DIR_INFORMATION; /* size: 0x0060 */

class ostream
{
  /* 0x0000 */ long Padding_1255[2];
  /* 0x0008 */ int x_floatused;
}; /* size: 0x0080 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlUtf16LEStringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *> >;

typedef struct _MEMORY_COMBINE_INFORMATION
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned __int64 PagesCombined;
} MEMORY_COMBINE_INFORMATION, *PMEMORY_COMBINE_INFORMATION; /* size: 0x0010 */

typedef struct _PSINJECTDATA
{
  /* 0x0000 */ unsigned long DataBytes;
  /* 0x0004 */ unsigned short InjectionPoint;
  /* 0x0006 */ unsigned short PageNumber;
} PSINJECTDATA, *PPSINJECTDATA; /* size: 0x0008 */

typedef struct _tagHIT_LOGGING_INFO
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_1256;
  /* 0x0008 */ char* lpszLoggedUrlName;
  /* 0x0010 */ struct _SYSTEMTIME StartTime;
  /* 0x0020 */ struct _SYSTEMTIME EndTime;
  /* 0x0030 */ char* lpszExtendedInfo;
} tagHIT_LOGGING_INFO, *PtagHIT_LOGGING_INFO; /* size: 0x0038 */

struct tagEMREXTFLOODFILL
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _POINTL ptlStart;
  /* 0x0010 */ unsigned long crColor;
  /* 0x0014 */ unsigned long iMode;
}; /* size: 0x0018 */

typedef struct __midl_frag467_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag467_t, *P_midl_frag467_t; /* size: 0x0058 */

typedef struct _ACCESS_ALLOWED_CALLBACK_ACE
{
  /* 0x0000 */ struct _ACE_HEADER Header;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ unsigned long SidStart;
} ACCESS_ALLOWED_CALLBACK_ACE, *PACCESS_ALLOWED_CALLBACK_ACE; /* size: 0x000c */

typedef struct _EVENTLOG_FULL_INFORMATION
{
  /* 0x0000 */ unsigned long dwFull;
} EVENTLOG_FULL_INFORMATION, *PEVENTLOG_FULL_INFORMATION; /* size: 0x0004 */

class CEnumSTATPROPSETSTG
{
  /* 0x0000 */ long Padding_1257[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ struct IEnumSTATSTG* _penumSTATSTG;
  /* 0x0018 */ struct tagSTATSTG _statarray[1];
  /* 0x0068 */ unsigned long _cstatTotalInArray;
  /* 0x006c */ unsigned long _istatNextToRead;
}; /* size: 0x0070 */

typedef struct _SYSTEM_THREAD_CID_PRIORITY_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
  /* 0x0010 */ long Priority;
  /* 0x0014 */ long __PADDING__[1];
} SYSTEM_THREAD_CID_PRIORITY_INFORMATION, *PSYSTEM_THREAD_CID_PRIORITY_INFORMATION; /* size: 0x0018 */

typedef struct __midl_frag113_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag113_t, *P_midl_frag113_t; /* size: 0x0038 */

struct AsyncIAdviseSink2
{
}; /* size: 0x0008 */

typedef struct __midl_frag209_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag209_t, *P_midl_frag209_t; /* size: 0x0010 */

typedef struct _DRIVER_INFO_3A
{
  /* 0x0000 */ unsigned long cVersion;
  /* 0x0004 */ long Padding_1258;
  /* 0x0008 */ char* pName;
  /* 0x0010 */ char* pEnvironment;
  /* 0x0018 */ char* pDriverPath;
  /* 0x0020 */ char* pDataFile;
  /* 0x0028 */ char* pConfigFile;
  /* 0x0030 */ char* pHelpFile;
  /* 0x0038 */ char* pDependentFiles;
  /* 0x0040 */ char* pMonitorName;
  /* 0x0048 */ char* pDefaultDataType;
} DRIVER_INFO_3A, *PDRIVER_INFO_3A; /* size: 0x0050 */

typedef struct _FILE_IOSTATUSBLOCK_RANGE_INFORMATION
{
  /* 0x0000 */ unsigned char* IoStatusBlockRange;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} FILE_IOSTATUSBLOCK_RANGE_INFORMATION, *PFILE_IOSTATUSBLOCK_RANGE_INFORMATION; /* size: 0x0010 */

typedef struct _CRYPT_PROVUI_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwFinalError;
  /* 0x0008 */ wchar_t* pYesButtonText;
  /* 0x0010 */ wchar_t* pNoButtonText;
  /* 0x0018 */ wchar_t* pMoreInfoButtonText;
  /* 0x0020 */ wchar_t* pAdvancedLinkText;
  /* 0x0028 */ wchar_t* pCopyActionText;
  /* 0x0030 */ wchar_t* pCopyActionTextNoTS;
  /* 0x0038 */ wchar_t* pCopyActionTextNotSigned;
} CRYPT_PROVUI_DATA, *PCRYPT_PROVUI_DATA; /* size: 0x0040 */

typedef struct _REASSIGN_BLOCKS
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short Count;
  /* 0x0004 */ unsigned long BlockNumber[1];
} REASSIGN_BLOCKS, *PREASSIGN_BLOCKS; /* size: 0x0008 */

typedef struct _RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long ProviderFlags;
  /* 0x0008 */ unsigned long DebugFlags;
  /* 0x000c */ unsigned long Spare;
} RTL_VERIFIER_RUNTIME_FLAGS_INFORMATION, *PRTL_VERIFIER_RUNTIME_FLAGS_INFORMATION; /* size: 0x0010 */

struct IImageList
{
}; /* size: 0x0008 */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoHandle>
{
  /* 0x0000 */ void* m_Handle;
}; /* size: 0x0008 */

typedef struct __midl_frag704_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag704_t, *P_midl_frag704_t; /* size: 0x0018 */

typedef struct _RTL_USER_PROCESS_INFORMATION64
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ long Padding_1259;
  /* 0x0008 */ __int64 Process;
  /* 0x0010 */ __int64 Thread;
  /* 0x0018 */ struct _CLIENT_ID64 ClientId;
  /* 0x0028 */ struct _SECTION_IMAGE_INFORMATION64 ImageInformation;
} RTL_USER_PROCESS_INFORMATION64, *PRTL_USER_PROCESS_INFORMATION64; /* size: 0x0068 */

typedef struct _PROCESS_HANDLE_TRACING_QUERY
{
  /* 0x0000 */ void* Handle;
  /* 0x0008 */ unsigned long TotalTraces;
  /* 0x000c */ long Padding_1260;
  /* 0x0010 */ struct _PROCESS_HANDLE_TRACING_ENTRY HandleTrace[1];
} PROCESS_HANDLE_TRACING_QUERY, *PPROCESS_HANDLE_TRACING_QUERY; /* size: 0x00b0 */

typedef struct _SPC_SP_AGENCY_INFO
{
  /* 0x0000 */ struct SPC_LINK_* pPolicyInformation;
  /* 0x0008 */ wchar_t* pwszPolicyDisplayText;
  /* 0x0010 */ struct _SPC_IMAGE* pLogoImage;
  /* 0x0018 */ struct SPC_LINK_* pLogoLink;
} SPC_SP_AGENCY_INFO, *PSPC_SP_AGENCY_INFO; /* size: 0x0020 */

typedef struct _exception
{
  /* 0x0000 */ int type;
  /* 0x0004 */ long Padding_1261;
  /* 0x0008 */ char* name;
  /* 0x0010 */ double arg1;
  /* 0x0018 */ double arg2;
  /* 0x0020 */ double retval;
} exception, *Pexception; /* size: 0x0028 */

typedef struct _CRYPT_SEQUENCE_OF_ANY
{
  /* 0x0000 */ unsigned long cValue;
  /* 0x0004 */ long Padding_1262;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB* rgValue;
} CRYPT_SEQUENCE_OF_ANY, *PCRYPT_SEQUENCE_OF_ANY; /* size: 0x0010 */

typedef struct __midl_frag86_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag86_t, *P_midl_frag86_t; /* size: 0x0028 */

struct IInterfaceRelated
{
}; /* size: 0x0008 */

struct HWAVEIN__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __midl_frag275_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag275_t, *P_midl_frag275_t; /* size: 0x000c */

typedef struct _KEY_OPEN_SUBKEYS_INFORMATION
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ long Padding_1263;
  /* 0x0008 */ struct KEY_PID_ARRAY KeyArray[1];
} KEY_OPEN_SUBKEYS_INFORMATION, *PKEY_OPEN_SUBKEYS_INFORMATION; /* size: 0x0020 */

typedef struct _SYMBOL_INFOW
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ unsigned long TypeIndex;
  /* 0x0008 */ unsigned __int64 Reserved[2];
  /* 0x0018 */ unsigned long Index;
  /* 0x001c */ unsigned long Size;
  /* 0x0020 */ unsigned __int64 ModBase;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_1264;
  /* 0x0030 */ unsigned __int64 Value;
  /* 0x0038 */ unsigned __int64 Address;
  /* 0x0040 */ unsigned long Register;
  /* 0x0044 */ unsigned long Scope;
  /* 0x0048 */ unsigned long Tag;
  /* 0x004c */ unsigned long NameLen;
  /* 0x0050 */ unsigned long MaxNameLen;
  /* 0x0054 */ wchar_t Name[1];
  /* 0x0056 */ char __PADDING__[2];
} SYMBOL_INFOW, *PSYMBOL_INFOW; /* size: 0x0058 */

typedef struct _SYMBOL_INFO_PACKAGEW
{
  /* 0x0000 */ struct _SYMBOL_INFOW si;
  /* 0x0058 */ wchar_t name[2001];
  /* 0x0ffa */ char __PADDING__[6];
} SYMBOL_INFO_PACKAGEW, *PSYMBOL_INFO_PACKAGEW; /* size: 0x1000 */

class BUCL::CConvertToSignedType<unsigned int>
{
}; /* size: 0x0001 */

typedef struct _CRYPT_ENCRYPTED_PRIVATE_KEY_INFO
{
  /* 0x0000 */ struct _CRYPT_ALGORITHM_IDENTIFIER EncryptionAlgorithm;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB EncryptedPrivateKey;
} CRYPT_ENCRYPTED_PRIVATE_KEY_INFO, *PCRYPT_ENCRYPTED_PRIVATE_KEY_INFO; /* size: 0x0028 */

struct IWinInetInfo
{
}; /* size: 0x0008 */

class BUCL::CConvertToUnsignedType<unsigned short>
{
}; /* size: 0x0001 */

typedef struct _EXTENDED_ENCRYPTED_DATA_INFO
{
  /* 0x0000 */ unsigned long ExtendedCode;
  /* 0x0004 */ unsigned long Length;
  /* 0x0008 */ unsigned long Flags;
  /* 0x000c */ unsigned long Reserved;
} EXTENDED_ENCRYPTED_DATA_INFO, *PEXTENDED_ENCRYPTED_DATA_INFO; /* size: 0x0010 */

typedef struct _CLINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ int bnative;
  /* 0x000c */ int format;
  /* 0x0010 */ int options;
  /* 0x0014 */ int bdata;
  /* 0x0018 */ void* hdevInfo;
  /* 0x0020 */ int bnewDevInfo;
  /* 0x0024 */ long __PADDING__[1];
} CLINFO, *PCLINFO; /* size: 0x0028 */

class BUCL::CConvertToUnsignedType<signed char>
{
}; /* size: 0x0001 */

struct tagTTPOLYCURVE
{
  /* 0x0000 */ unsigned short wType;
  /* 0x0002 */ unsigned short cpfx;
  /* 0x0004 */ struct tagPOINTFX apfx[1];
}; /* size: 0x000c */

struct IMarshallingManager
{
}; /* size: 0x0008 */

struct SPC_SIGINFO_
{
  /* 0x0000 */ unsigned long dwSipVersion;
  /* 0x0004 */ struct _GUID gSIPGuid;
  /* 0x0014 */ unsigned long dwReserved1;
  /* 0x0018 */ unsigned long dwReserved2;
  /* 0x001c */ unsigned long dwReserved3;
  /* 0x0020 */ unsigned long dwReserved4;
  /* 0x0024 */ unsigned long dwReserved5;
}; /* size: 0x0028 */

typedef struct _MEMORY_WORKING_SET_EX_INFORMATION
{
  /* 0x0000 */ void* VirtualAddress;
  union
  {
    union
    {
      /* 0x0008 */ struct _MEMORY_WORKING_SET_EX_BLOCK VirtualAttributes;
      /* 0x0008 */ unsigned __int64 Long;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ u1;
} MEMORY_WORKING_SET_EX_INFORMATION, *PMEMORY_WORKING_SET_EX_INFORMATION; /* size: 0x0010 */

struct tagPSDW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1265;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ void* hDevMode;
  /* 0x0018 */ void* hDevNames;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ struct tagPOINT ptPaperSize;
  /* 0x002c */ struct tagRECT rtMinMargin;
  /* 0x003c */ struct tagRECT rtMargin;
  /* 0x004c */ long Padding_1266;
  /* 0x0050 */ struct HINSTANCE__* hInstance;
  /* 0x0058 */ __int64 lCustData;
  /* 0x0060 */ void* lpfnPageSetupHook /* function */;
  /* 0x0068 */ void* lpfnPagePaintHook /* function */;
  /* 0x0070 */ const wchar_t* lpPageSetupTemplateName;
  /* 0x0078 */ void* hPageSetupTemplate;
}; /* size: 0x0080 */

typedef struct _TP_POOL_STACK_INFORMATION
{
  /* 0x0000 */ unsigned __int64 StackReserve;
  /* 0x0008 */ unsigned __int64 StackCommit;
} TP_POOL_STACK_INFORMATION, *PTP_POOL_STACK_INFORMATION; /* size: 0x0010 */

typedef struct _RPC_SECURITY_QOS_V4_W
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Capabilities;
  /* 0x0008 */ unsigned long IdentityTracking;
  /* 0x000c */ unsigned long ImpersonationType;
  /* 0x0010 */ unsigned long AdditionalSecurityInfoType;
  /* 0x0014 */ long Padding_1267;
  union
  {
    /* 0x0018 */ struct _RPC_HTTP_TRANSPORT_CREDENTIALS_W* HttpCredentials;
  } /* size: 0x0008 */ u;
  /* 0x0020 */ void* Sid;
  /* 0x0028 */ unsigned int EffectiveOnly;
  /* 0x002c */ long __PADDING__[1];
} RPC_SECURITY_QOS_V4_W, *PRPC_SECURITY_QOS_V4_W; /* size: 0x0030 */

typedef struct _RESOURCEMANAGER_COMPLETION_INFORMATION
{
  /* 0x0000 */ void* IoCompletionPortHandle;
  /* 0x0008 */ unsigned __int64 CompletionKey;
} RESOURCEMANAGER_COMPLETION_INFORMATION, *PRESOURCEMANAGER_COMPLETION_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag1518_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1518_t, *P_midl_frag1518_t; /* size: 0x0028 */

typedef struct _JOB_INFO_1W
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ long Padding_1268;
  /* 0x0008 */ wchar_t* pPrinterName;
  /* 0x0010 */ wchar_t* pMachineName;
  /* 0x0018 */ wchar_t* pUserName;
  /* 0x0020 */ wchar_t* pDocument;
  /* 0x0028 */ wchar_t* pDatatype;
  /* 0x0030 */ wchar_t* pStatus;
  /* 0x0038 */ unsigned long Status;
  /* 0x003c */ unsigned long Priority;
  /* 0x0040 */ unsigned long Position;
  /* 0x0044 */ unsigned long TotalPages;
  /* 0x0048 */ unsigned long PagesPrinted;
  /* 0x004c */ struct _SYSTEMTIME Submitted;
  /* 0x005c */ long __PADDING__[1];
} JOB_INFO_1W, *PJOB_INFO_1W; /* size: 0x0060 */

typedef struct _SYSTEM_VERIFIER_FAULTS_INFORMATION
{
  /* 0x0000 */ unsigned long Probability;
  /* 0x0004 */ unsigned long MaxProbability;
  /* 0x0008 */ struct _UNICODE_STRING PoolTags;
  /* 0x0018 */ struct _UNICODE_STRING Applications;
} SYSTEM_VERIFIER_FAULTS_INFORMATION, *PSYSTEM_VERIFIER_FAULTS_INFORMATION; /* size: 0x0028 */

class BUCL::CConvertToUnsignedType<unsigned int>
{
}; /* size: 0x0001 */

class BUCL::CIsSignedType<short>
{
}; /* size: 0x0001 */

typedef struct _NCRYPT_KEY_BLOB_HEADER
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMagic;
  /* 0x0008 */ unsigned long cbAlgName;
  /* 0x000c */ unsigned long cbKeyData;
} NCRYPT_KEY_BLOB_HEADER, *PNCRYPT_KEY_BLOB_HEADER; /* size: 0x0010 */

struct IUnwrappableDataObject
{
}; /* size: 0x0008 */

typedef struct _IMAGEHLP_STACK_FRAME
{
  /* 0x0000 */ unsigned __int64 InstructionOffset;
  /* 0x0008 */ unsigned __int64 ReturnOffset;
  /* 0x0010 */ unsigned __int64 FrameOffset;
  /* 0x0018 */ unsigned __int64 StackOffset;
  /* 0x0020 */ unsigned __int64 BackingStoreOffset;
  /* 0x0028 */ unsigned __int64 FuncTableEntry;
  /* 0x0030 */ unsigned __int64 Params[4];
  /* 0x0050 */ unsigned __int64 Reserved[5];
  /* 0x0078 */ int Virtual;
  /* 0x007c */ unsigned long Reserved2;
} IMAGEHLP_STACK_FRAME, *PIMAGEHLP_STACK_FRAME; /* size: 0x0080 */

struct MEMSTM
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long cRef;
  /* 0x0008 */ unsigned char* m_pBuf;
  /* 0x0010 */ void* hGlobal;
  /* 0x0018 */ int fDeleteOnRelease;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class BUCL::CConvertToUnsignedType<long>
{
}; /* size: 0x0001 */

struct SYMSRV_INDEX_INFO
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ char file[261];
  /* 0x0109 */ char Padding_1269[3];
  /* 0x010c */ int stripped;
  /* 0x0110 */ unsigned long timestamp;
  /* 0x0114 */ unsigned long size;
  /* 0x0118 */ char dbgfile[261];
  /* 0x021d */ char pdbfile[261];
  /* 0x0322 */ char Padding_1270[2];
  /* 0x0324 */ struct _GUID guid;
  /* 0x0334 */ unsigned long sig;
  /* 0x0338 */ unsigned long age;
}; /* size: 0x033c */

typedef struct _CHANGER_SET_ACCESS
{
  /* 0x0000 */ struct _CHANGER_ELEMENT Element;
  /* 0x0008 */ unsigned long Control;
} CHANGER_SET_ACCESS, *PCHANGER_SET_ACCESS; /* size: 0x000c */

typedef struct _JOBOBJECT_BASIC_UI_RESTRICTIONS
{
  /* 0x0000 */ unsigned long UIRestrictionsClass;
} JOBOBJECT_BASIC_UI_RESTRICTIONS, *PJOBOBJECT_BASIC_UI_RESTRICTIONS; /* size: 0x0004 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlRORAStream *,Windows::Auto<Windows::Rtl::IRtlRORAStream *> >;

typedef struct __MIDL_ICallFrame_0001
{
  /* 0x0000 */ unsigned long iMethod;
  /* 0x0004 */ int fHasInValues;
  /* 0x0008 */ int fHasInOutValues;
  /* 0x000c */ int fHasOutValues;
  /* 0x0010 */ int fDerivesFromIDispatch;
  /* 0x0014 */ long cInInterfacesMax;
  /* 0x0018 */ long cInOutInterfacesMax;
  /* 0x001c */ long cOutInterfacesMax;
  /* 0x0020 */ long cTopLevelInInterfaces;
  /* 0x0024 */ struct _GUID iid;
  /* 0x0034 */ unsigned long cMethod;
  /* 0x0038 */ unsigned long cParams;
} _MIDL_ICallFrame_0001, *P_MIDL_ICallFrame_0001; /* size: 0x003c */

struct tagMIXERCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long fdwSupport;
  /* 0x004c */ unsigned long cDestinations;
}; /* size: 0x0050 */

typedef struct __midl_frag54_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag54_t, *P_midl_frag54_t; /* size: 0x0020 */

typedef struct _FILE_NUMA_NODE_INFORMATION
{
  /* 0x0000 */ unsigned short NodeNumber;
} FILE_NUMA_NODE_INFORMATION, *PFILE_NUMA_NODE_INFORMATION; /* size: 0x0002 */

struct Windows::Rtl::IRtlROFOStream
{
}; /* size: 0x0008 */

typedef struct _SECURITY_CAPABILITIES
{
  /* 0x0000 */ void* AppContainerSid;
  /* 0x0008 */ struct _SID_AND_ATTRIBUTES* Capabilities;
  /* 0x0010 */ unsigned long CapabilityCount;
  /* 0x0014 */ unsigned long Reserved;
} SECURITY_CAPABILITIES, *PSECURITY_CAPABILITIES; /* size: 0x0018 */

struct Windows::Rtl::IRtlFormattableInterface::FormattingLevels
{
}; /* size: 0x0001 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlBlobProvider *,Windows::Auto<Windows::Rtl::IRtlBlobProvider *> >;

typedef struct _COMMTIMEOUTS
{
  /* 0x0000 */ unsigned long ReadIntervalTimeout;
  /* 0x0004 */ unsigned long ReadTotalTimeoutMultiplier;
  /* 0x0008 */ unsigned long ReadTotalTimeoutConstant;
  /* 0x000c */ unsigned long WriteTotalTimeoutMultiplier;
  /* 0x0010 */ unsigned long WriteTotalTimeoutConstant;
} COMMTIMEOUTS, *PCOMMTIMEOUTS; /* size: 0x0014 */

struct TYPEINFOVTBL
{
  /* 0x0000 */ long Padding_1271[12];
  /* 0x0030 */ char* m_szInterfaceName;
  /* 0x0038 */ struct METHOD_DESCRIPTOR* m_rgMethodDescs;
  /* 0x0040 */ struct _GUID m_iidBase;
  /* 0x0050 */ struct _MIDL_STUB_DESC m_stubDesc;
  /* 0x00e8 */ struct _MIDL_SERVER_INFO_ m_stubInfo;
  /* 0x0128 */ struct tagCInterfaceStubVtbl m_stubVtbl;
  /* 0x0198 */ struct _MIDL_STUBLESS_PROXY_INFO m_proxyInfo;
  /* 0x01c8 */ struct tagCInterfaceProxyVtbl m_proxyVtbl;
}; /* size: 0x01d8 */

typedef struct _CMSG_CMS_SIGNER_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1272;
  /* 0x0008 */ struct _CERT_ID SignerId;
  /* 0x0030 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0048 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashEncryptionAlgorithm;
  /* 0x0060 */ struct _CRYPTOAPI_BLOB EncryptedHash;
  /* 0x0070 */ struct _CRYPT_ATTRIBUTES AuthAttrs;
  /* 0x0080 */ struct _CRYPT_ATTRIBUTES UnauthAttrs;
} CMSG_CMS_SIGNER_INFO, *PCMSG_CMS_SIGNER_INFO; /* size: 0x0090 */

struct IIdentifyHive
{
}; /* size: 0x0008 */

class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ long Padding_1273[2];
  /* 0x0008 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0010 */ class CLinkable* m_pLinkable;
}; /* size: 0x0018 */

class MAP<XSLOCK,MAP_KEY_GUID,TYPEINFOVTBL *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x0018 */ int m_fDone;
  /* 0x001c */ long Padding_1274;
  /* 0x0020 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0028 */ struct TYPEINFOVTBL** m_pvalue;
  /* 0x0030 */ class Map<MAP_KEY_GUID,TYPEINFOVTBL *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x0038 */

struct PARAM_ATTRIBUTES
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short MustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned short MustFree : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned short IsPipe : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned short IsIn : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned short IsOut : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned short IsReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned short IsBasetype : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned short IsByValue : 1; /* bit position: 7 */
    /* 0x0000 */ unsigned short IsSimpleRef : 1; /* bit position: 8 */
    /* 0x0000 */ unsigned short IsDontCallFreeInst : 1; /* bit position: 9 */
    /* 0x0000 */ unsigned short SaveForAsyncFinish : 1; /* bit position: 10 */
    /* 0x0000 */ unsigned short IsPartialIgnore : 1; /* bit position: 11 */
    /* 0x0000 */ unsigned short IsForceAllocate : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short ServerAllocSize : 3; /* bit position: 13 */
  }; /* bitfield */
}; /* size: 0x0002 */

struct PARAM_DESCRIPTION
{
  /* 0x0000 */ struct PARAM_ATTRIBUTES ParamAttr;
  /* 0x0002 */ unsigned short StackOffset;
  union
  {
    /* 0x0004 */ unsigned short TypeOffset;
    struct
    {
      /* 0x0004 */ unsigned char Type;
      /* 0x0005 */ unsigned char Unused;
    } /* size: 0x0002 */ SimpleType;
  }; /* size: 0x0002 */
}; /* size: 0x0006 */

struct HWAVE__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct ISyncAdvise
{
}; /* size: 0x0008 */

struct _CrtMemBlockHeader;

class Windows::Rtl::StringTraits<_LUTF8_STRING>
{
}; /* size: 0x0001 */

struct tagMCI_VD_STEP_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrames;
}; /* size: 0x000c */

struct tagPELARRAY
{
  /* 0x0000 */ long paXCount;
  /* 0x0004 */ long paYCount;
  /* 0x0008 */ long paXExt;
  /* 0x000c */ long paYExt;
  /* 0x0010 */ unsigned char paRGBs;
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

typedef struct _PROCESS_DEVICEMAP_INFORMATION_EX
{
  union
  {
    struct
    {
      /* 0x0000 */ void* DirectoryHandle;
    } /* size: 0x0008 */ Set;
    struct
    {
      /* 0x0000 */ unsigned long DriveMap;
      /* 0x0004 */ unsigned char DriveType[32];
    } /* size: 0x0024 */ Query;
  }; /* size: 0x0024 */
  /* 0x0024 */ long Padding_1275;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long __PADDING__[1];
} PROCESS_DEVICEMAP_INFORMATION_EX, *PPROCESS_DEVICEMAP_INFORMATION_EX; /* size: 0x0030 */

struct tagDVTARGETDEVICE
{
  /* 0x0000 */ unsigned long tdSize;
  /* 0x0004 */ unsigned short tdDriverNameOffset;
  /* 0x0006 */ unsigned short tdDeviceNameOffset;
  /* 0x0008 */ unsigned short tdPortNameOffset;
  /* 0x000a */ unsigned short tdExtDevmodeOffset;
  /* 0x000c */ unsigned char tdData[1];
  /* 0x000d */ char __PADDING__[3];
}; /* size: 0x0010 */

struct Windows::AutoPointerBase<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >::is_pointer<Windows::Rtl::IRtlWOUCSStream *>
{
}; /* size: 0x0001 */

typedef struct __midl_frag378_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag378_t, *P_midl_frag378_t; /* size: 0x0020 */

struct tagI_RpcProxyCallbackInterface
{
  /* 0x0000 */ void* IsValidMachineFn /* function */;
  /* 0x0008 */ void* GetClientAddressFn /* function */;
  /* 0x0010 */ void* GetConnectionTimeoutFn /* function */;
  /* 0x0018 */ void* PerformCalloutFn /* function */;
  /* 0x0020 */ void* FreeCalloutStateFn /* function */;
  /* 0x0028 */ void* GetClientSessionAndResourceUUIDFn /* function */;
  /* 0x0030 */ void* ProxyFilterIfFn /* function */;
  /* 0x0038 */ void* RpcProxyUpdatePerfCounterFn /* function */;
  /* 0x0040 */ void* RpcProxyUpdatePerfCounterBackendServerFn /* function */;
}; /* size: 0x0048 */

class CArray<CCacheNode>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_1276;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CCacheNode>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

struct tagMCI_SEEK_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwTo;
}; /* size: 0x000c */

struct IFunctionInstance
{
}; /* size: 0x0008 */

class CLimitedWritableStorage::Commit::__l3::<lambda_CC1FC64EEBB82396>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ unsigned long& grfCommitFlags;
}; /* size: 0x0010 */

struct Windows::Rtl::IRtlFormattableObject::FormattingLevels
{
}; /* size: 0x0001 */

typedef struct __midl_frag282_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag282_t, *P_midl_frag282_t; /* size: 0x0040 */

class CClipboardBroker::ValidateAndAcquireACImpersonationSource::__l14::<lambda_CDF35D9A0ACF867E>
{
  /* 0x0000 */ class Windows::Internal::GitPtr& GITMTAHelper;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> const >;

class CApartmentHashTable
{
  union
  {
    struct
    {
      /* 0x0000 */ class CDWORDHashTable _hashtbl;
      /* 0x0028 */ int _fTableInitialized;
    }; /* size: 0x002c */
    /* 0x0000 */ class COleStaticMutexSem _mxsAptTblLock;
  }; /* size: 0x0048 */
}; /* size: 0x0030 */

typedef struct __midl_frag450_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag450_t, *P_midl_frag450_t; /* size: 0x000c */

class Windows::Rtl::AutoHandleBase<Windows::Rtl::AutoHandleDefaultTraits<void *>,Windows::Rtl::AutoFileHandle>::COperatorAmpersandReturnType;

class Common::AutoPtr<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION,&ARI::AutoPtrAriHeapDeallocate<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION> >
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* p;
}; /* size: 0x0008 */

typedef struct _FILE_PROCESS_IDS_USING_FILE_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfProcessIdsInList;
  /* 0x0004 */ long Padding_1277;
  /* 0x0008 */ unsigned __int64 ProcessIdList[1];
} FILE_PROCESS_IDS_USING_FILE_INFORMATION, *PFILE_PROCESS_IDS_USING_FILE_INFORMATION; /* size: 0x0010 */

typedef struct _IMAGEHLP_MODULEW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1278;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ wchar_t ModuleName[32];
  /* 0x0064 */ wchar_t ImageName[256];
  /* 0x0264 */ wchar_t LoadedImageName[256];
  /* 0x0464 */ wchar_t LoadedPdbName[256];
  /* 0x0664 */ unsigned long CVSig;
  /* 0x0668 */ wchar_t CVData[780];
  /* 0x0c80 */ unsigned long PdbSig;
  /* 0x0c84 */ struct _GUID PdbSig70;
  /* 0x0c94 */ unsigned long PdbAge;
  /* 0x0c98 */ int PdbUnmatched;
  /* 0x0c9c */ int DbgUnmatched;
  /* 0x0ca0 */ int LineNumbers;
  /* 0x0ca4 */ int GlobalSymbols;
  /* 0x0ca8 */ int TypeInfo;
  /* 0x0cac */ int SourceIndexed;
  /* 0x0cb0 */ int Publics;
  /* 0x0cb4 */ unsigned long MachineType;
  /* 0x0cb8 */ unsigned long Reserved;
  /* 0x0cbc */ long __PADDING__[1];
} IMAGEHLP_MODULEW64, *PIMAGEHLP_MODULEW64; /* size: 0x0cc0 */

struct IUserTokenWithImpersonate
{
}; /* size: 0x0008 */

typedef struct _PORT_DATA_INFORMATION
{
  /* 0x0000 */ unsigned long CountDataEntries;
  /* 0x0004 */ long Padding_1279;
  /* 0x0008 */ struct _PORT_DATA_ENTRY DataEntries[1];
} PORT_DATA_INFORMATION, *PPORT_DATA_INFORMATION; /* size: 0x0018 */

typedef struct __midl_frag48_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag48_t, *P_midl_frag48_t; /* size: 0x0040 */

typedef struct _ALPC_HANDLE_ATTR
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1280;
  /* 0x0008 */ void* Handle;
  /* 0x0010 */ unsigned long ObjectType;
  /* 0x0014 */ unsigned long DesiredAccess;
} ALPC_HANDLE_ATTR, *PALPC_HANDLE_ATTR; /* size: 0x0018 */

typedef struct __midl_frag382_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag382_t, *P_midl_frag382_t; /* size: 0x000c */

typedef struct _SERVICE_TRIGGER_INFO
{
  /* 0x0000 */ unsigned long cTriggers;
  /* 0x0004 */ long Padding_1281;
  /* 0x0008 */ struct _SERVICE_TRIGGER* pTriggers;
  /* 0x0010 */ unsigned char* pReserved;
} SERVICE_TRIGGER_INFO, *PSERVICE_TRIGGER_INFO; /* size: 0x0018 */

struct tagCALPOLESTR
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_1282;
  /* 0x0008 */ wchar_t** pElems;
}; /* size: 0x0010 */

typedef struct _DOC_INFO_2A
{
  /* 0x0000 */ char* pDocName;
  /* 0x0008 */ char* pOutputFile;
  /* 0x0010 */ char* pDatatype;
  /* 0x0018 */ unsigned long dwMode;
  /* 0x001c */ unsigned long JobId;
} DOC_INFO_2A, *PDOC_INFO_2A; /* size: 0x0020 */

typedef struct _COVERAGE_UNLOADED_MODULE_ENTRY
{
  /* 0x0000 */ struct _LIST_ENTRY NextEntry;
  /* 0x0010 */ struct _UNICODE_STRING BaseDllName;
  /* 0x0020 */ struct _UNICODE_STRING FullDllName;
  /* 0x0030 */ unsigned long CoverageSectionSize;
  /* 0x0034 */ long Padding_1283;
  /* 0x0038 */ void* CoverageSection;
} COVERAGE_UNLOADED_MODULE_ENTRY, *PCOVERAGE_UNLOADED_MODULE_ENTRY; /* size: 0x0040 */

class CClipDataObject
{
  /* 0x0000 */ long Padding_1284[6];
  /* 0x0018 */ void* m_hOle1;
  /* 0x0020 */ struct IUnknown* m_pUnkOle1;
  /* 0x0028 */ unsigned long m_refs;
  /* 0x002c */ unsigned long m_Internalrefs;
  /* 0x0030 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0038 */ struct IDataObject* m_pDataObject;
  /* 0x0040 */ int m_fTriedToGetDataObject;
  /* 0x0044 */ BOOL m_fIsClientAppContainer;
}; /* size: 0x0048 */

class Windows::Rtl::StringTraits<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

struct tagPARAMDESCEX
{
  /* 0x0000 */ unsigned long cBytes;
  /* 0x0004 */ long Padding_1285;
  /* 0x0008 */ struct tagVARIANT varDefaultValue;
}; /* size: 0x0020 */

typedef struct _RTLP_PROCESS_REFLECTION_CONTEXT
{
  /* 0x0000 */ unsigned __int64 ReflectionContextSize;
  /* 0x0008 */ unsigned long ReflectionFlags;
  /* 0x000c */ long Padding_1286;
  /* 0x0010 */ void* ReflectionRoutine /* function */;
  /* 0x0018 */ void* ReflectionParameter;
  /* 0x0020 */ void* ReflectedProcessCreatedEvent;
  /* 0x0028 */ void* ReflectedProcessHandlesDuplicatedEvent;
  /* 0x0030 */ void* ReflectionStartEvent;
  /* 0x0038 */ struct _RTLP_PROCESS_REFLECTION_REFLECTION_INFORMATION ReflectionInformation;
} RTLP_PROCESS_REFLECTION_CONTEXT, *PRTLP_PROCESS_REFLECTION_CONTEXT; /* size: 0x0058 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> const >;

struct Windows::AutoPODBase<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >::is_pointer<_LUTF8_STRING>
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStorage> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IStorage>* ptr_;
}; /* size: 0x0008 */

typedef struct __midl_frag409_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag409_t, *P_midl_frag409_t; /* size: 0x0068 */

typedef struct _BCRYPT_DH_KEY_BLOB
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long cbKey;
} BCRYPT_DH_KEY_BLOB, *PBCRYPT_DH_KEY_BLOB; /* size: 0x0008 */

struct pvalueW
{
  /* 0x0000 */ wchar_t* pv_valuename;
  /* 0x0008 */ int pv_valuelen;
  /* 0x000c */ long Padding_1287;
  /* 0x0010 */ void* pv_value_context;
  /* 0x0018 */ unsigned long pv_type;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct _PRIV_SCM_INFO
{
  /* 0x0000 */ long lThreadID;
  /* 0x0004 */ long Padding_1288;
  /* 0x0008 */ wchar_t* pwszWinstaDesktop;
  /* 0x0010 */ unsigned __int64 ProcessSignature;
  /* 0x0018 */ wchar_t* pEnvBlock;
  /* 0x0020 */ unsigned long EnvBlockLength;
  /* 0x0024 */ long __PADDING__[1];
} PRIV_SCM_INFO, *PPRIV_SCM_INFO; /* size: 0x0028 */

typedef struct _FILE_SFIO_VOLUME_INFORMATION
{
  /* 0x0000 */ unsigned long MaximumRequestsPerPeriod;
  /* 0x0004 */ unsigned long MinimumPeriod;
  /* 0x0008 */ unsigned long MinimumTransferSize;
} FILE_SFIO_VOLUME_INFORMATION, *PFILE_SFIO_VOLUME_INFORMATION; /* size: 0x000c */

typedef struct _HEAP_BLOCK_SETTABLE_INFORMATION
{
  /* 0x0000 */ unsigned __int64 Settable;
  /* 0x0008 */ unsigned short TagIndex;
  /* 0x000a */ unsigned short AllocatorBackTraceIndex;
  /* 0x000c */ long __PADDING__[1];
} HEAP_BLOCK_SETTABLE_INFORMATION, *PHEAP_BLOCK_SETTABLE_INFORMATION; /* size: 0x0010 */

typedef struct __midl_frag699_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag699_t, *P_midl_frag699_t; /* size: 0x0068 */

class CLimitedStreamBase::LockRegion::__l3::<lambda_1118F1833D0D7A0F>;

typedef struct _TXFS_LIST_TRANSACTIONS_ENTRY
{
  /* 0x0000 */ struct _GUID TransactionId;
  /* 0x0010 */ unsigned long TransactionState;
  /* 0x0014 */ unsigned long Reserved1;
  /* 0x0018 */ unsigned long Reserved2;
  /* 0x001c */ long Padding_1289;
  /* 0x0020 */ __int64 Reserved3;
} TXFS_LIST_TRANSACTIONS_ENTRY, *PTXFS_LIST_TRANSACTIONS_ENTRY; /* size: 0x0028 */

typedef struct _PORT_INFO_2W
{
  /* 0x0000 */ wchar_t* pPortName;
  /* 0x0008 */ wchar_t* pMonitorName;
  /* 0x0010 */ wchar_t* pDescription;
  /* 0x0018 */ unsigned long fPortType;
  /* 0x001c */ unsigned long Reserved;
} PORT_INFO_2W, *PPORT_INFO_2W; /* size: 0x0020 */

typedef struct _PLUGPLAY_CONTROL_CONFLICT_STRINGS
{
  /* 0x0000 */ unsigned long NullDeviceInstance;
  /* 0x0004 */ wchar_t DeviceInstanceStrings[1];
  /* 0x0006 */ char __PADDING__[2];
} PLUGPLAY_CONTROL_CONFLICT_STRINGS, *PPLUGPLAY_CONTROL_CONFLICT_STRINGS; /* size: 0x0008 */

typedef struct _CMC_RESPONSE_INFO
{
  /* 0x0000 */ unsigned long cTaggedAttribute;
  /* 0x0004 */ long Padding_1290;
  /* 0x0008 */ struct _CMC_TAGGED_ATTRIBUTE* rgTaggedAttribute;
  /* 0x0010 */ unsigned long cTaggedContentInfo;
  /* 0x0014 */ long Padding_1291;
  /* 0x0018 */ struct _CMC_TAGGED_CONTENT_INFO* rgTaggedContentInfo;
  /* 0x0020 */ unsigned long cTaggedOtherMsg;
  /* 0x0024 */ long Padding_1292;
  /* 0x0028 */ struct _CMC_TAGGED_OTHER_MSG* rgTaggedOtherMsg;
} CMC_RESPONSE_INFO, *PCMC_RESPONSE_INFO; /* size: 0x0030 */

typedef struct _MUTANT_OWNER_INFORMATION
{
  /* 0x0000 */ struct _CLIENT_ID ClientId;
} MUTANT_OWNER_INFORMATION, *PMUTANT_OWNER_INFORMATION; /* size: 0x0010 */

typedef struct _FORMAT_PARAMETERS
{
  /* 0x0000 */ enum _MEDIA_TYPE MediaType;
  /* 0x0004 */ unsigned long StartCylinderNumber;
  /* 0x0008 */ unsigned long EndCylinderNumber;
  /* 0x000c */ unsigned long StartHeadNumber;
  /* 0x0010 */ unsigned long EndHeadNumber;
} FORMAT_PARAMETERS, *PFORMAT_PARAMETERS; /* size: 0x0014 */

struct OPENCARD_SEARCH_CRITERIAA
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_1293;
  /* 0x0008 */ char* lpstrGroupNames;
  /* 0x0010 */ unsigned long nMaxGroupNames;
  /* 0x0014 */ long Padding_1294;
  /* 0x0018 */ const struct _GUID* rgguidInterfaces;
  /* 0x0020 */ unsigned long cguidInterfaces;
  /* 0x0024 */ long Padding_1295;
  /* 0x0028 */ char* lpstrCardNames;
  /* 0x0030 */ unsigned long nMaxCardNames;
  /* 0x0034 */ long Padding_1296;
  /* 0x0038 */ void* lpfnCheck /* function */;
  /* 0x0040 */ void* lpfnConnect /* function */;
  /* 0x0048 */ void* lpfnDisconnect /* function */;
  /* 0x0050 */ void* pvUserData;
  /* 0x0058 */ unsigned long dwShareMode;
  /* 0x005c */ unsigned long dwPreferredProtocols;
}; /* size: 0x0060 */

typedef struct __midl_frag732_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag732_t, *P_midl_frag732_t; /* size: 0x0058 */

typedef struct __midl_frag1451_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1451_t, *P_midl_frag1451_t; /* size: 0x0048 */

typedef struct _RPC_CLIENT_INTERFACE
{
  /* 0x0000 */ unsigned int Length;
  /* 0x0004 */ struct _RPC_SYNTAX_IDENTIFIER InterfaceId;
  /* 0x0018 */ struct _RPC_SYNTAX_IDENTIFIER TransferSyntax;
  /* 0x002c */ long Padding_1297;
  /* 0x0030 */ struct RPC_DISPATCH_TABLE* DispatchTable;
  /* 0x0038 */ unsigned int RpcProtseqEndpointCount;
  /* 0x003c */ long Padding_1298;
  /* 0x0040 */ struct _RPC_PROTSEQ_ENDPOINT* RpcProtseqEndpoint;
  /* 0x0048 */ unsigned __int64 Reserved;
  /* 0x0050 */ const void* InterpreterInfo;
  /* 0x0058 */ unsigned int Flags;
  /* 0x005c */ long __PADDING__[1];
} RPC_CLIENT_INTERFACE, *PRPC_CLIENT_INTERFACE; /* size: 0x0060 */

typedef struct __midl_frag1330_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1330_t, *P_midl_frag1330_t; /* size: 0x0048 */

typedef struct _CTL_USAGE_MATCH
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1299;
  /* 0x0008 */ struct _CTL_USAGE Usage;
} CTL_USAGE_MATCH, *PCTL_USAGE_MATCH; /* size: 0x0018 */

struct COPYFILE2_EXTENDED_PARAMETERS
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwCopyFlags;
  /* 0x0008 */ int* pfCancel;
  /* 0x0010 */ void* pProgressRoutine /* function */;
  /* 0x0018 */ void* pvCallbackContext;
}; /* size: 0x0020 */

struct PrintPropertiesCollection
{
  /* 0x0000 */ unsigned long numberOfProperties;
  /* 0x0004 */ long Padding_1300;
  /* 0x0008 */ struct PrintNamedProperty* propertiesCollection;
}; /* size: 0x0010 */

class LargeIntRegMultiply<unsigned int,__int64>
{
}; /* size: 0x0001 */

typedef struct _AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwRegPolicySettings;
  /* 0x0008 */ int fCommercial;
} AUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA, *PAUTHENTICODE_TS_EXTRA_CERT_CHAIN_POLICY_PARA; /* size: 0x000c */

typedef struct _SYSTEM_VDM_INSTEMUL_INFO
{
  /* 0x0000 */ unsigned long SegmentNotPresent;
  /* 0x0004 */ unsigned long VdmOpcode0F;
  /* 0x0008 */ unsigned long OpcodeESPrefix;
  /* 0x000c */ unsigned long OpcodeCSPrefix;
  /* 0x0010 */ unsigned long OpcodeSSPrefix;
  /* 0x0014 */ unsigned long OpcodeDSPrefix;
  /* 0x0018 */ unsigned long OpcodeFSPrefix;
  /* 0x001c */ unsigned long OpcodeGSPrefix;
  /* 0x0020 */ unsigned long OpcodeOPER32Prefix;
  /* 0x0024 */ unsigned long OpcodeADDR32Prefix;
  /* 0x0028 */ unsigned long OpcodeINSB;
  /* 0x002c */ unsigned long OpcodeINSW;
  /* 0x0030 */ unsigned long OpcodeOUTSB;
  /* 0x0034 */ unsigned long OpcodeOUTSW;
  /* 0x0038 */ unsigned long OpcodePUSHF;
  /* 0x003c */ unsigned long OpcodePOPF;
  /* 0x0040 */ unsigned long OpcodeINTnn;
  /* 0x0044 */ unsigned long OpcodeINTO;
  /* 0x0048 */ unsigned long OpcodeIRET;
  /* 0x004c */ unsigned long OpcodeINBimm;
  /* 0x0050 */ unsigned long OpcodeINWimm;
  /* 0x0054 */ unsigned long OpcodeOUTBimm;
  /* 0x0058 */ unsigned long OpcodeOUTWimm;
  /* 0x005c */ unsigned long OpcodeINB;
  /* 0x0060 */ unsigned long OpcodeINW;
  /* 0x0064 */ unsigned long OpcodeOUTB;
  /* 0x0068 */ unsigned long OpcodeOUTW;
  /* 0x006c */ unsigned long OpcodeLOCKPrefix;
  /* 0x0070 */ unsigned long OpcodeREPNEPrefix;
  /* 0x0074 */ unsigned long OpcodeREPPrefix;
  /* 0x0078 */ unsigned long OpcodeHLT;
  /* 0x007c */ unsigned long OpcodeCLI;
  /* 0x0080 */ unsigned long OpcodeSTI;
  /* 0x0084 */ unsigned long BopCount;
} SYSTEM_VDM_INSTEMUL_INFO, *PSYSTEM_VDM_INSTEMUL_INFO; /* size: 0x0088 */

struct provider_info
{
  /* 0x0000 */ void* pi_R0_1val /* function */;
  /* 0x0008 */ void* pi_R0_allvals /* function */;
  /* 0x0010 */ void* pi_R3_1val /* function */;
  /* 0x0018 */ void* pi_R3_allvals /* function */;
  /* 0x0020 */ unsigned long pi_flags;
  /* 0x0024 */ long Padding_1301;
  /* 0x0028 */ void* pi_key_context;
}; /* size: 0x0030 */

typedef struct __midl_frag183_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag183_t, *P_midl_frag183_t; /* size: 0x0050 */

class AdditionHelper<__int64,unsigned __int64,13>
{
}; /* size: 0x0001 */

typedef struct __midl_frag322_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag322_t, *P_midl_frag322_t; /* size: 0x0038 */

struct HMIXER__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct __midl_frag142_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag142_t, *P_midl_frag142_t; /* size: 0x0038 */

typedef struct __midl_frag1520_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1520_t, *P_midl_frag1520_t; /* size: 0x0028 */

typedef struct _CRYPT_SIGN_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ const struct _CERT_CONTEXT* pSigningCert;
  /* 0x0010 */ struct _CRYPT_ALGORITHM_IDENTIFIER HashAlgorithm;
  /* 0x0028 */ void* pvHashAuxInfo;
  /* 0x0030 */ unsigned long cMsgCert;
  /* 0x0034 */ long Padding_1302;
  /* 0x0038 */ const struct _CERT_CONTEXT** rgpMsgCert;
  /* 0x0040 */ unsigned long cMsgCrl;
  /* 0x0044 */ long Padding_1303;
  /* 0x0048 */ const struct _CRL_CONTEXT** rgpMsgCrl;
  /* 0x0050 */ unsigned long cAuthAttr;
  /* 0x0054 */ long Padding_1304;
  /* 0x0058 */ struct _CRYPT_ATTRIBUTE* rgAuthAttr;
  /* 0x0060 */ unsigned long cUnauthAttr;
  /* 0x0064 */ long Padding_1305;
  /* 0x0068 */ struct _CRYPT_ATTRIBUTE* rgUnauthAttr;
  /* 0x0070 */ unsigned long dwFlags;
  /* 0x0074 */ unsigned long dwInnerContentType;
} CRYPT_SIGN_MESSAGE_PARA, *PCRYPT_SIGN_MESSAGE_PARA; /* size: 0x0078 */

typedef struct _MMIOINFO
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long fccIOProc;
  /* 0x0008 */ void* pIOProc /* function */;
  /* 0x0010 */ unsigned int wErrorRet;
  /* 0x0014 */ struct HTASK__* htask;
  /* 0x001c */ long cchBuffer;
  /* 0x0020 */ char* pchBuffer;
  /* 0x0028 */ char* pchNext;
  /* 0x0030 */ char* pchEndRead;
  /* 0x0038 */ char* pchEndWrite;
  /* 0x0040 */ long lBufOffset;
  /* 0x0044 */ long lDiskOffset;
  /* 0x0048 */ unsigned long adwInfo[3];
  /* 0x0054 */ unsigned long dwReserved1;
  /* 0x0058 */ unsigned long dwReserved2;
  /* 0x005c */ struct HMMIO__* hmmio;
} MMIOINFO, *PMMIOINFO; /* size: 0x0064 */

typedef struct __midl_frag931_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag931_t, *P_midl_frag931_t; /* size: 0x0010 */

class CArray<CStatData>
{
  /* 0x0000 */ unsigned long m_refs;
  /* 0x0004 */ unsigned long m_ulFlags;
  /* 0x0008 */ unsigned long m_ulStepSize;
  /* 0x000c */ unsigned long m_ulCurSize;
  /* 0x0010 */ unsigned long m_ulLength;
  /* 0x0014 */ unsigned long m_ulResSlots;
  /* 0x0018 */ unsigned long m_ulHeadNode;
  /* 0x001c */ unsigned long m_ulTailNode;
  /* 0x0020 */ int m_iFree;
  /* 0x0024 */ long Padding_1306;
  /* 0x0028 */ int* m_piAllocList;
  /* 0x0030 */ struct CArray<CStatData>::ArrayNode* m_pBuffer;
}; /* size: 0x0038 */

struct pcmwaveformat_tag
{
  /* 0x0000 */ struct waveformat_tag wf;
  /* 0x000e */ unsigned short wBitsPerSample;
}; /* size: 0x0010 */

struct LockCookie
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ unsigned long dwWriterSeqNum;
  /* 0x0008 */ unsigned short wReaderLevel;
  /* 0x000a */ unsigned short wWriterLevel;
  /* 0x000c */ unsigned long dwThreadID;
}; /* size: 0x0010 */

class RenderFormat::__l40::<lambda_E19A7055556DA8EC>;

typedef struct __midl_frag1043_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1043_t, *P_midl_frag1043_t; /* size: 0x0020 */

struct servent
{
  /* 0x0000 */ char* s_name;
  /* 0x0008 */ char** s_aliases;
  /* 0x0010 */ char* s_proto;
  /* 0x0018 */ short s_port;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

class CClipboardBroker
{
}; /* size: 0x0010 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlUtf8StringBuilder* m_Data;
}; /* size: 0x0008 */

typedef struct _MEMORYSTATUSEX
{
  /* 0x0000 */ unsigned long dwLength;
  /* 0x0004 */ unsigned long dwMemoryLoad;
  /* 0x0008 */ unsigned __int64 ullTotalPhys;
  /* 0x0010 */ unsigned __int64 ullAvailPhys;
  /* 0x0018 */ unsigned __int64 ullTotalPageFile;
  /* 0x0020 */ unsigned __int64 ullAvailPageFile;
  /* 0x0028 */ unsigned __int64 ullTotalVirtual;
  /* 0x0030 */ unsigned __int64 ullAvailVirtual;
  /* 0x0038 */ unsigned __int64 ullAvailExtendedVirtual;
} MEMORYSTATUSEX, *PMEMORYSTATUSEX; /* size: 0x0040 */

typedef struct _STORAGE_OFFLOAD_READ_OUTPUT
{
  /* 0x0000 */ unsigned long OffloadReadFlags;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 LengthProtected;
  /* 0x0010 */ unsigned long TokenLength;
  /* 0x0014 */ struct _STORAGE_OFFLOAD_TOKEN Token;
  /* 0x0214 */ long __PADDING__[1];
} STORAGE_OFFLOAD_READ_OUTPUT, *PSTORAGE_OFFLOAD_READ_OUTPUT; /* size: 0x0218 */

typedef struct _RTL_GENERIC_TABLE
{
  /* 0x0000 */ struct _RTL_SPLAY_LINKS* TableRoot;
  /* 0x0008 */ struct _LIST_ENTRY InsertOrderList;
  /* 0x0018 */ struct _LIST_ENTRY* OrderedPointer;
  /* 0x0020 */ unsigned long WhichOrderedElement;
  /* 0x0024 */ unsigned long NumberGenericTableElements;
  /* 0x0028 */ void* CompareRoutine /* function */;
  /* 0x0030 */ void* AllocateRoutine /* function */;
  /* 0x0038 */ void* FreeRoutine /* function */;
  /* 0x0040 */ void* TableContext;
} RTL_GENERIC_TABLE, *PRTL_GENERIC_TABLE; /* size: 0x0048 */

struct STORAGE_BREAK_RESERVATION_REQUEST
{
  /* 0x0000 */ unsigned long Length;
  /* 0x0004 */ unsigned char _unused;
  /* 0x0005 */ unsigned char PathId;
  /* 0x0006 */ unsigned char TargetId;
  /* 0x0007 */ unsigned char Lun;
}; /* size: 0x0008 */

typedef struct __midl_frag1857_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1857_t, *P_midl_frag1857_t; /* size: 0x0048 */

class CClipboardBroker::CClipboardBrokerMTAHelper
{
}; /* size: 0x0010 */

class CSharedMemoryBlock
{
  /* 0x0000 */ void* _hMem;
  /* 0x0008 */ unsigned char* _pbBase;
  /* 0x0010 */ unsigned long _culCommitSize;
  /* 0x0014 */ unsigned long _culInitCommitSize;
  /* 0x0018 */ int _fCreated;
  /* 0x001c */ int _fReadWrite;
}; /* size: 0x0020 */

typedef struct __midl_frag1322_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1322_t, *P_midl_frag1322_t; /* size: 0x0038 */

typedef struct _ICONINFOEXA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ int fIcon;
  /* 0x0008 */ unsigned long xHotspot;
  /* 0x000c */ unsigned long yHotspot;
  /* 0x0010 */ struct HBITMAP__* hbmMask;
  /* 0x0018 */ struct HBITMAP__* hbmColor;
  /* 0x0020 */ unsigned short wResID;
  /* 0x0022 */ char szModName[260];
  /* 0x0126 */ char szResName[260];
  /* 0x022a */ char __PADDING__[6];
} ICONINFOEXA, *PICONINFOEXA; /* size: 0x0230 */

class Microsoft::WRL::Wrappers::HandleT<Microsoft::WRL::Wrappers::HandleTraits::EventTraits>
{
  /* 0x0000 */ long Padding_1307[2];
  /* 0x0008 */ void* handle_;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IWeakReference> >;

struct IBindCallbackRedirect
{
}; /* size: 0x0008 */

struct tagMCI_ANIM_PLAY_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrom;
  /* 0x000c */ unsigned long dwTo;
  /* 0x0010 */ unsigned long dwSpeed;
}; /* size: 0x0014 */

typedef struct _PERF_COUNTER_DEFINITION
{
  /* 0x0000 */ unsigned long ByteLength;
  /* 0x0004 */ unsigned long CounterNameTitleIndex;
  /* 0x0008 */ unsigned long CounterNameTitle;
  /* 0x000c */ unsigned long CounterHelpTitleIndex;
  /* 0x0010 */ unsigned long CounterHelpTitle;
  /* 0x0014 */ long DefaultScale;
  /* 0x0018 */ unsigned long DetailLevel;
  /* 0x001c */ unsigned long CounterType;
  /* 0x0020 */ unsigned long CounterSize;
  /* 0x0024 */ unsigned long CounterOffset;
} PERF_COUNTER_DEFINITION, *PPERF_COUNTER_DEFINITION; /* size: 0x0028 */

struct tagEMRGLSBOUNDEDRECORD
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ struct _RECTL rclBounds;
  /* 0x0018 */ unsigned long cbData;
  /* 0x001c */ unsigned char Data[1];
  /* 0x001d */ char __PADDING__[3];
}; /* size: 0x0020 */

struct _HMAPPER;

typedef struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char NumberDims;
  /* 0x0004 */ unsigned int NumberElements;
  /* 0x0008 */ const void* Element;
} NDR64_BOGUS_ARRAY_HEADER_FORMAT, *PNDR64_BOGUS_ARRAY_HEADER_FORMAT; /* size: 0x0010 */

typedef struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ struct _NDR64_BOGUS_ARRAY_HEADER_FORMAT FixedArrayFormat;
  /* 0x0010 */ const void* ConfDescription;
  /* 0x0018 */ const void* VarDescription;
  /* 0x0020 */ const void* OffsetDescription;
} NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT, *PNDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT; /* size: 0x0028 */

typedef struct __midl_frag767_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag767_t, *P_midl_frag767_t; /* size: 0x0028 */

struct tMIXERCONTROLDETAILS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwControlID;
  /* 0x0008 */ unsigned long cChannels;
  union
  {
    /* 0x000c */ struct HWND__* hwndOwner;
    /* 0x000c */ unsigned long cMultipleItems;
  }; /* size: 0x0008 */
  /* 0x0014 */ unsigned long cbDetails;
  /* 0x0018 */ void* paDetails;
}; /* size: 0x0020 */

typedef struct _NDR64_BUFFER_ALIGN_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ unsigned int Reserved2;
} NDR64_BUFFER_ALIGN_FORMAT, *PNDR64_BUFFER_ALIGN_FORMAT; /* size: 0x0008 */

struct tagHANDLETABLE
{
  /* 0x0000 */ void* objectHandle[1];
}; /* size: 0x0008 */

class Windows::Internal::GitPtr
{
}; /* size: 0x0010 */

typedef struct _WINTRUST_DATA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1308;
  /* 0x0008 */ void* pPolicyCallbackData;
  /* 0x0010 */ void* pSIPClientData;
  /* 0x0018 */ unsigned long dwUIChoice;
  /* 0x001c */ unsigned long fdwRevocationChecks;
  /* 0x0020 */ unsigned long dwUnionChoice;
  /* 0x0024 */ long Padding_1309;
  union
  {
    /* 0x0028 */ struct WINTRUST_FILE_INFO_* pFile;
    /* 0x0028 */ struct WINTRUST_CATALOG_INFO_* pCatalog;
    /* 0x0028 */ struct WINTRUST_BLOB_INFO_* pBlob;
    /* 0x0028 */ struct WINTRUST_SGNR_INFO_* pSgnr;
    /* 0x0028 */ struct WINTRUST_CERT_INFO_* pCert;
  }; /* size: 0x0008 */
  /* 0x0030 */ unsigned long dwStateAction;
  /* 0x0034 */ long Padding_1310;
  /* 0x0038 */ void* hWVTStateData;
  /* 0x0040 */ wchar_t* pwszURLReference;
  /* 0x0048 */ unsigned long dwProvFlags;
  /* 0x004c */ unsigned long dwUIContext;
  /* 0x0050 */ struct WINTRUST_SIGNATURE_SETTINGS_* pSignatureSettings;
} WINTRUST_DATA, *PWINTRUST_DATA; /* size: 0x0058 */

typedef struct __midl_frag233_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag233_t, *P_midl_frag233_t; /* size: 0x000c */

typedef struct _PREVENT_MEDIA_REMOVAL
{
  /* 0x0000 */ unsigned char PreventMediaRemoval;
} PREVENT_MEDIA_REMOVAL, *PPREVENT_MEDIA_REMOVAL; /* size: 0x0001 */

struct WINTRUST_CERT_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1311;
  /* 0x0008 */ const wchar_t* pcwszDisplayName;
  /* 0x0010 */ struct _CERT_CONTEXT* psCertContext;
  /* 0x0018 */ unsigned long chStores;
  /* 0x001c */ long Padding_1312;
  /* 0x0020 */ void** pahStores;
  /* 0x0028 */ unsigned long dwFlags;
  /* 0x002c */ long Padding_1313;
  /* 0x0030 */ struct _FILETIME* psftVerifyAsOf;
}; /* size: 0x0038 */

struct tagJOYCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ char szPname[32];
  /* 0x0024 */ unsigned int wXmin;
  /* 0x0028 */ unsigned int wXmax;
  /* 0x002c */ unsigned int wYmin;
  /* 0x0030 */ unsigned int wYmax;
  /* 0x0034 */ unsigned int wZmin;
  /* 0x0038 */ unsigned int wZmax;
  /* 0x003c */ unsigned int wNumButtons;
  /* 0x0040 */ unsigned int wPeriodMin;
  /* 0x0044 */ unsigned int wPeriodMax;
  /* 0x0048 */ unsigned int wRmin;
  /* 0x004c */ unsigned int wRmax;
  /* 0x0050 */ unsigned int wUmin;
  /* 0x0054 */ unsigned int wUmax;
  /* 0x0058 */ unsigned int wVmin;
  /* 0x005c */ unsigned int wVmax;
  /* 0x0060 */ unsigned int wCaps;
  /* 0x0064 */ unsigned int wMaxAxes;
  /* 0x0068 */ unsigned int wNumAxes;
  /* 0x006c */ unsigned int wMaxButtons;
  /* 0x0070 */ char szRegKey[32];
  /* 0x0090 */ char szOEMVxD[260];
  /* 0x0194 */ struct _GUID ManufacturerGuid;
  /* 0x01a4 */ struct _GUID ProductGuid;
  /* 0x01b4 */ struct _GUID NameGuid;
}; /* size: 0x01c4 */

typedef struct _PROVIDOR_INFO_2W
{
  /* 0x0000 */ wchar_t* pOrder;
} PROVIDOR_INFO_2W, *PPROVIDOR_INFO_2W; /* size: 0x0008 */

typedef struct __midl_frag295_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag295_t, *P_midl_frag295_t; /* size: 0x0010 */

struct IStackWalker
{
}; /* size: 0x0008 */

struct DISPLAYCONFIG_MODE_INFO
{
  /* 0x0000 */ enum DISPLAYCONFIG_MODE_INFO_TYPE infoType;
  /* 0x0004 */ unsigned int id;
  /* 0x0008 */ struct _LUID adapterId;
  union
  {
    /* 0x0010 */ struct DISPLAYCONFIG_TARGET_MODE targetMode;
    struct
    {
      /* 0x0010 */ struct DISPLAYCONFIG_SOURCE_MODE sourceMode;
      /* 0x0024 */ long __PADDING__[7];
    }; /* size: 0x0030 */
  }; /* size: 0x0030 */
}; /* size: 0x0040 */

struct IXMLDocument
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<IUnwrappableDataObject>
{
  /* 0x0000 */ struct IUnwrappableDataObject* ptr_;
}; /* size: 0x0008 */

typedef struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int ElementSize;
  /* 0x0008 */ const void* ConfDescriptor;
  /* 0x0010 */ const void* VarDescriptor;
} NDR64_CONF_VAR_ARRAY_HEADER_FORMAT, *PNDR64_CONF_VAR_ARRAY_HEADER_FORMAT; /* size: 0x0018 */

typedef struct _MEMORY_REGION_INFORMATION
{
  /* 0x0000 */ void* AllocationBase;
  /* 0x0008 */ unsigned long AllocationProtect;
  /* 0x000c */ unsigned long RegionType;
  /* 0x0010 */ unsigned __int64 RegionSize;
  /* 0x0018 */ unsigned __int64 CommitSize;
} MEMORY_REGION_INFORMATION, *PMEMORY_REGION_INFORMATION; /* size: 0x0020 */

class CBool
{
  /* 0x0000 */ int value;
}; /* size: 0x0004 */

struct DDELN
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 13; /* bit position: 0 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short fDeferUpd : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
}; /* size: 0x0004 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IRuntimeBroker>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> >
{
}; /* size: 0x0008 */

typedef struct _SET_PARTITION_INFORMATION_EX
{
  /* 0x0000 */ enum _PARTITION_STYLE PartitionStyle;
  /* 0x0004 */ long Padding_1314;
  union
  {
    /* 0x0008 */ struct _SET_PARTITION_INFORMATION Mbr;
    /* 0x0008 */ struct _PARTITION_INFORMATION_GPT Gpt;
  }; /* size: 0x0070 */
} SET_PARTITION_INFORMATION_EX, *PSET_PARTITION_INFORMATION_EX; /* size: 0x0078 */

class Microsoft::WRL::ComPtr<IOSTaskCompletion>
{
  /* 0x0000 */ struct IOSTaskCompletion* ptr_;
}; /* size: 0x0008 */

struct OPENCARDNAMEA
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_1315;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ unsigned __int64 hSCardContext;
  /* 0x0018 */ char* lpstrGroupNames;
  /* 0x0020 */ unsigned long nMaxGroupNames;
  /* 0x0024 */ long Padding_1316;
  /* 0x0028 */ char* lpstrCardNames;
  /* 0x0030 */ unsigned long nMaxCardNames;
  /* 0x0034 */ long Padding_1317;
  /* 0x0038 */ const struct _GUID* rgguidInterfaces;
  /* 0x0040 */ unsigned long cguidInterfaces;
  /* 0x0044 */ long Padding_1318;
  /* 0x0048 */ char* lpstrRdr;
  /* 0x0050 */ unsigned long nMaxRdr;
  /* 0x0054 */ long Padding_1319;
  /* 0x0058 */ char* lpstrCard;
  /* 0x0060 */ unsigned long nMaxCard;
  /* 0x0064 */ long Padding_1320;
  /* 0x0068 */ const char* lpstrTitle;
  /* 0x0070 */ unsigned long dwFlags;
  /* 0x0074 */ long Padding_1321;
  /* 0x0078 */ void* pvUserData;
  /* 0x0080 */ unsigned long dwShareMode;
  /* 0x0084 */ unsigned long dwPreferredProtocols;
  /* 0x0088 */ unsigned long dwActiveProtocol;
  /* 0x008c */ long Padding_1322;
  /* 0x0090 */ void* lpfnConnect /* function */;
  /* 0x0098 */ void* lpfnCheck /* function */;
  /* 0x00a0 */ void* lpfnDisconnect /* function */;
  /* 0x00a8 */ unsigned __int64 hCardHandle;
}; /* size: 0x00b0 */

typedef struct _KEY_NODE_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER LastWriteTime;
  /* 0x0008 */ unsigned long TitleIndex;
  /* 0x000c */ unsigned long ClassOffset;
  /* 0x0010 */ unsigned long ClassLength;
  /* 0x0014 */ unsigned long NameLength;
  /* 0x0018 */ wchar_t Name[1];
  /* 0x001a */ char __PADDING__[6];
} KEY_NODE_INFORMATION, *PKEY_NODE_INFORMATION; /* size: 0x0020 */

struct tagMCI_WAVE_DELETE_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrom;
  /* 0x000c */ unsigned long dwTo;
}; /* size: 0x0010 */

union WPP_PROJECT_CONTROL_BLOCK
{
  union
  {
    /* 0x0000 */ struct _WPP_TRACE_CONTROL_BLOCK Control;
    /* 0x0000 */ unsigned char ReserveSpace[40];
  }; /* size: 0x0028 */
}; /* size: 0x0028 */

typedef struct _PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA
{
  /* 0x0000 */ struct _UNICODE_STRING DeviceInstance;
  /* 0x0010 */ unsigned long Flags;
  /* 0x0014 */ enum _PNP_VETO_TYPE VetoType;
  /* 0x0018 */ wchar_t* VetoName;
  /* 0x0020 */ unsigned long VetoNameLength;
  /* 0x0024 */ long __PADDING__[1];
} PLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA, *PPLUGPLAY_CONTROL_QUERY_AND_REMOVE_DATA; /* size: 0x0028 */

typedef struct __midl_frag1014_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1014_t, *P_midl_frag1014_t; /* size: 0x000c */

struct tagOLEMENUITEM
{
  /* 0x0000 */ unsigned int item;
  /* 0x0004 */ unsigned short fwPopup;
  /* 0x0006 */ char Padding_1323[2];
  /* 0x0008 */ int fObjectMenu;
}; /* size: 0x000c */

struct tagOLEMENU
{
  /* 0x0000 */ unsigned short wSignature;
  /* 0x0002 */ char Padding_1324[2];
  /* 0x0004 */ unsigned long hwndFrame;
  /* 0x0008 */ unsigned long hmenuCombined;
  /* 0x000c */ struct tagOleMenuGroupWidths MenuWidths;
  /* 0x0024 */ long lMenuCnt;
  /* 0x0028 */ struct tagOLEMENUITEM menuitem[1];
}; /* size: 0x0034 */

struct _CONTRACT_DESCRIPTION;

typedef struct __midl_frag1177_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1177_t, *P_midl_frag1177_t; /* size: 0x0058 */

class CStaticWriteLock
{
  /* 0x0000 */ class CRWLock& _rwLock;
}; /* size: 0x0008 */

struct DDEUP
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short fAck : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short fReserved : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char rgb[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

typedef struct __midl_frag225_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag225_t, *P_midl_frag225_t; /* size: 0x0010 */

typedef struct _TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* Attributes;
  /* 0x0008 */ enum _TOKEN_SECURITY_ATTRIBUTE_OPERATION* Operations;
} TOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION, *PTOKEN_SECURITY_ATTRIBUTES_AND_OPERATION_INFORMATION; /* size: 0x0010 */

struct tagMCI_OVLY_SAVE_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const wchar_t* lpfilename;
  /* 0x0010 */ struct tagRECT rc;
}; /* size: 0x0020 */

typedef struct _FILE_FS_OBJECTID_INFORMATION
{
  /* 0x0000 */ unsigned char ObjectId[16];
  /* 0x0010 */ unsigned char ExtendedInfo[48];
} FILE_FS_OBJECTID_INFORMATION, *PFILE_FS_OBJECTID_INFORMATION; /* size: 0x0040 */

struct SCopyVars
{
  /* 0x0000 */ class PSStream* psstFrom;
  /* 0x0008 */ struct IStream* pstTo;
  /* 0x0010 */ class PDocFile* pdfFromChild;
  /* 0x0018 */ struct IStorage* pstgToChild;
  /* 0x0020 */ unsigned long grfStateBits;
  /* 0x0024 */ struct _GUID clsid;
  /* 0x0034 */ class CDfName dfnKey;
  /* 0x0076 */ char Padding_1325[2];
  /* 0x0078 */ struct SIterBuffer ib;
  /* 0x00c0 */ wchar_t atcName[32];
}; /* size: 0x0100 */

typedef struct __midl_frag1310_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1310_t, *P_midl_frag1310_t; /* size: 0x0008 */

struct HWAVEOUT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _SYSTEM_FIRMWARE_TABLE_HANDLER
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ unsigned char Register;
  /* 0x0005 */ char Padding_1326[3];
  /* 0x0008 */ void* FirmwareTableHandler /* function */;
  /* 0x0010 */ void* DriverObject;
} SYSTEM_FIRMWARE_TABLE_HANDLER, *PSYSTEM_FIRMWARE_TABLE_HANDLER; /* size: 0x0018 */

typedef struct __midl_frag316_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag316_t, *P_midl_frag316_t; /* size: 0x0040 */

class CContainer_PolicySysFree
{
}; /* size: 0x0001 */

typedef struct _SYSTEM_FIRMWARE_TABLE_INFORMATION
{
  /* 0x0000 */ unsigned long ProviderSignature;
  /* 0x0004 */ enum _SYSTEM_FIRMWARE_TABLE_ACTION Action;
  /* 0x0008 */ unsigned long TableID;
  /* 0x000c */ unsigned long TableBufferLength;
  /* 0x0010 */ unsigned char TableBuffer[1];
  /* 0x0011 */ char __PADDING__[3];
} SYSTEM_FIRMWARE_TABLE_INFORMATION, *PSYSTEM_FIRMWARE_TABLE_INFORMATION; /* size: 0x0014 */

class CSeekPointer
{
  /* 0x0000 */ unsigned __int64 _ulPos;
  /* 0x0008 */ long _cReferences;
}; /* size: 0x0010 */

struct tagNCCALCSIZE_PARAMS
{
  /* 0x0000 */ struct tagRECT rgrc[3];
  /* 0x0030 */ struct tagWINDOWPOS* lppos;
}; /* size: 0x0038 */

struct IRunnableObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetRunningClass /* function */;
  /* 0x0020 */ void* Run /* function */;
  /* 0x0028 */ void* IsRunning /* function */;
  /* 0x0030 */ void* LockRunning /* function */;
  /* 0x0038 */ void* SetContainedObject /* function */;
}; /* size: 0x0040 */

struct IExternalConnection
{
}; /* size: 0x0008 */

class CDocFile
{
  /* 0x0000 */ long Padding_1327[4];
  /* 0x0010 */ class CUpdateList _ulChangedHolder;
  /* 0x0020 */ class CStgHandle _stgh;
  /* 0x0030 */ const class CBasedDFBasisPtr _pdfb;
}; /* size: 0x0038 */

struct IEnumRGBQuad
{
}; /* size: 0x0008 */

struct sockaddr
{
  /* 0x0000 */ unsigned short sa_family;
  /* 0x0002 */ char sa_data[14];
}; /* size: 0x0010 */

typedef struct __midl_frag1722_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag1722_t, *P_midl_frag1722_t; /* size: 0x0050 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ApartmentShutdownNode> const >;

typedef struct _TXFS_READ_BACKUP_INFORMATION_OUT
{
  union
  {
    /* 0x0000 */ unsigned long BufferLength;
    struct
    {
      /* 0x0000 */ unsigned char Buffer[1];
      /* 0x0001 */ char __PADDING__[3];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} TXFS_READ_BACKUP_INFORMATION_OUT, *PTXFS_READ_BACKUP_INFORMATION_OUT; /* size: 0x0004 */

class CStmBufRead
{
}; /* size: 0x0118 */

typedef struct __midl_frag1799_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1799_t, *P_midl_frag1799_t; /* size: 0x000c */

typedef struct _TP_DEBUG_FREE_INFO
{
  /* 0x0000 */ unsigned long FreeListSize;
} TP_DEBUG_FREE_INFO, *PTP_DEBUG_FREE_INFO; /* size: 0x0004 */

typedef struct _SYSDBG_PHYSICAL
{
  /* 0x0000 */ union _LARGE_INTEGER Address;
  /* 0x0008 */ void* Buffer;
  /* 0x0010 */ unsigned long Request;
  /* 0x0014 */ long __PADDING__[1];
} SYSDBG_PHYSICAL, *PSYSDBG_PHYSICAL; /* size: 0x0018 */

typedef struct __midl_frag205_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag205_t, *P_midl_frag205_t; /* size: 0x0040 */

typedef struct _CORE_PRINTER_DRIVERA
{
  /* 0x0000 */ struct _GUID CoreDriverGUID;
  /* 0x0010 */ struct _FILETIME ftDriverDate;
  /* 0x0018 */ unsigned __int64 dwlDriverVersion;
  /* 0x0020 */ char szPackageID[260];
  /* 0x0124 */ long __PADDING__[1];
} CORE_PRINTER_DRIVERA, *PCORE_PRINTER_DRIVERA; /* size: 0x0128 */

typedef struct __midl_frag1161_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1161_t, *P_midl_frag1161_t; /* size: 0x0038 */

typedef struct _ENLISTMENT_BASIC_INFORMATION
{
  /* 0x0000 */ struct _GUID EnlistmentId;
  /* 0x0010 */ struct _GUID TransactionId;
  /* 0x0020 */ struct _GUID ResourceManagerId;
} ENLISTMENT_BASIC_INFORMATION, *PENLISTMENT_BASIC_INFORMATION; /* size: 0x0030 */

struct tagSTATDATA
{
  /* 0x0000 */ struct tagFORMATETC formatetc;
  /* 0x0020 */ unsigned long advf;
  /* 0x0024 */ long Padding_1328;
  /* 0x0028 */ struct IAdviseSink* pAdvSink;
  /* 0x0030 */ unsigned long dwConnection;
  /* 0x0034 */ long __PADDING__[1];
}; /* size: 0x0038 */

class CAutoHandle_Policy<HPEN__ *>
{
}; /* size: 0x0001 */

typedef struct _mega_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[14341];
  /* 0x3807 */ char __PADDING__[1];
} mega_MIDL_PROC_FORMAT_STRING, *Pmega_MIDL_PROC_FORMAT_STRING; /* size: 0x3808 */

typedef struct _TIMER_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER RemainingTime;
  /* 0x0008 */ unsigned char TimerState;
  /* 0x0009 */ char __PADDING__[7];
} TIMER_BASIC_INFORMATION, *PTIMER_BASIC_INFORMATION; /* size: 0x0010 */

struct HRSRC__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct _IMAGELIST;

typedef struct __midl_frag1803_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1803_t, *P_midl_frag1803_t; /* size: 0x0008 */

typedef struct _CERT_CRL_CONTEXT_PAIR
{
  /* 0x0000 */ const struct _CERT_CONTEXT* pCertContext;
  /* 0x0008 */ const struct _CRL_CONTEXT* pCrlContext;
} CERT_CRL_CONTEXT_PAIR, *PCERT_CRL_CONTEXT_PAIR; /* size: 0x0010 */

class CLimitedWritableStorage::SetStateBits::__l3::<lambda_C6BB18B0BF4BE775>;

typedef struct _REASON_BUFFER
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1329;
  union
  {
    struct
    {
      /* 0x0008 */ unsigned __int64 ResourceFileNameOffset;
      /* 0x0010 */ unsigned short ResourceReasonId;
      /* 0x0012 */ char Padding_1330[2];
      /* 0x0014 */ unsigned long StringCount;
      /* 0x0018 */ unsigned __int64 SubstitutionStringsOffset;
    }; /* size: 0x0016 */
    struct
    {
      /* 0x0008 */ unsigned __int64 SimpleStringOffset;
      /* 0x0010 */ long __PADDING__[4];
    }; /* size: 0x0018 */
  }; /* size: 0x0018 */
} REASON_BUFFER, *PREASON_BUFFER; /* size: 0x0020 */

typedef struct _WORKER_FACTORY_BASIC_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER Timeout;
  /* 0x0008 */ union _LARGE_INTEGER RetryTimeout;
  /* 0x0010 */ union _LARGE_INTEGER IdleTimeout;
  /* 0x0018 */ unsigned char Paused;
  /* 0x0019 */ unsigned char TimerSet;
  /* 0x001a */ unsigned char QueuedToExWorker;
  /* 0x001b */ unsigned char MayCreate;
  /* 0x001c */ unsigned char CreateInProgress;
  /* 0x001d */ unsigned char InsertedIntoQueue;
  /* 0x001e */ unsigned char Shutdown;
  /* 0x001f */ char Padding_1331;
  /* 0x0020 */ unsigned long BindingCount;
  /* 0x0024 */ unsigned long ThreadMinimum;
  /* 0x0028 */ unsigned long ThreadMaximum;
  /* 0x002c */ unsigned long PendingWorkerCount;
  /* 0x0030 */ unsigned long WaitingWorkerCount;
  /* 0x0034 */ unsigned long TotalWorkerCount;
  /* 0x0038 */ unsigned long ReleaseCount;
  /* 0x003c */ long Padding_1332;
  /* 0x0040 */ __int64 InfiniteWaitGoal;
  /* 0x0048 */ void* StartRoutine /* function */;
  /* 0x0050 */ void* StartParameter;
  /* 0x0058 */ void* ProcessId;
  /* 0x0060 */ unsigned __int64 StackReserve;
  /* 0x0068 */ unsigned __int64 StackCommit;
  /* 0x0070 */ long LastThreadCreationStatus;
  /* 0x0074 */ long __PADDING__[1];
} WORKER_FACTORY_BASIC_INFORMATION, *PWORKER_FACTORY_BASIC_INFORMATION; /* size: 0x0078 */

typedef struct __midl_frag99_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag99_t, *P_midl_frag99_t; /* size: 0x0010 */

typedef struct _IMAGEHLP_DEFERRED_SYMBOL_LOADW64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1333;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long CheckSum;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ wchar_t FileName[261];
  /* 0x0222 */ unsigned char Reparse;
  /* 0x0223 */ char Padding_1334[5];
  /* 0x0228 */ void* hFile;
  /* 0x0230 */ unsigned long Flags;
  /* 0x0234 */ long __PADDING__[1];
} IMAGEHLP_DEFERRED_SYMBOL_LOADW64, *PIMAGEHLP_DEFERRED_SYMBOL_LOADW64; /* size: 0x0238 */

typedef struct _FILE_STREAM_INFORMATION
{
  /* 0x0000 */ unsigned long NextEntryOffset;
  /* 0x0004 */ unsigned long StreamNameLength;
  /* 0x0008 */ union _LARGE_INTEGER StreamSize;
  /* 0x0010 */ union _LARGE_INTEGER StreamAllocationSize;
  /* 0x0018 */ wchar_t StreamName[1];
  /* 0x001a */ char __PADDING__[6];
} FILE_STREAM_INFORMATION, *PFILE_STREAM_INFORMATION; /* size: 0x0020 */

typedef struct __midl_frag446_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag446_t, *P_midl_frag446_t; /* size: 0x0058 */

typedef struct __midl_frag1015_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1015_t, *P_midl_frag1015_t; /* size: 0x0010 */

struct tagMInterfacePointer
{
  /* 0x0000 */ unsigned long ulCntData;
  /* 0x0004 */ unsigned char abData[1];
  /* 0x0005 */ char __PADDING__[3];
}; /* size: 0x0008 */

class BUCL::CConvertToSignedType<__int64>
{
}; /* size: 0x0001 */

typedef struct _ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long ThreadingModel;
  /* 0x000c */ struct _GUID ReferenceClsid;
  /* 0x001c */ struct _GUID ConfiguredClsid;
  /* 0x002c */ struct _GUID ImplementedClsid;
  /* 0x003c */ struct _GUID TypeLibraryId;
  /* 0x004c */ unsigned long ModuleLength;
  /* 0x0050 */ unsigned long ModuleOffset;
  /* 0x0054 */ unsigned long ProgIdLength;
  /* 0x0058 */ unsigned long ProgIdOffset;
  /* 0x005c */ unsigned long ShimDataLength;
  /* 0x0060 */ unsigned long ShimDataOffset;
  /* 0x0064 */ unsigned long MiscStatusDefault;
  /* 0x0068 */ unsigned long MiscStatusContent;
  /* 0x006c */ unsigned long MiscStatusThumbnail;
  /* 0x0070 */ unsigned long MiscStatusIcon;
  /* 0x0074 */ unsigned long MiscStatusDocPrint;
} ACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION, *PACTIVATION_CONTEXT_DATA_COM_SERVER_REDIRECTION; /* size: 0x0078 */

struct tm
{
  /* 0x0000 */ int tm_sec;
  /* 0x0004 */ int tm_min;
  /* 0x0008 */ int tm_hour;
  /* 0x000c */ int tm_mday;
  /* 0x0010 */ int tm_mon;
  /* 0x0014 */ int tm_year;
  /* 0x0018 */ int tm_wday;
  /* 0x001c */ int tm_yday;
  /* 0x0020 */ int tm_isdst;
}; /* size: 0x0024 */

typedef struct __midl_frag24_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag24_t, *P_midl_frag24_t; /* size: 0x0038 */

typedef struct _HARDWARE_COUNTER
{
  /* 0x0000 */ enum _HARDWARE_COUNTER_TYPE Type;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 Index;
} HARDWARE_COUNTER, *PHARDWARE_COUNTER; /* size: 0x0010 */

class CBmpLoader
{
  union
  {
    /* 0x0000 */ unsigned char m_rgbBMI[1068];
    /* 0x0000 */ struct tagBITMAPINFO m_bmiCooked;
  }; /* size: 0x042c */
  /* 0x042c */ long Padding_1335;
  union
  {
    /* 0x0430 */ unsigned char* m_pbDiskHeadr;
    /* 0x0430 */ struct tagBITMAPCOREHEADER* m_pbmchDiskHeadr;
    /* 0x0430 */ struct tagBITMAPINFOHEADER* m_pbmihDiskHeadr;
  }; /* size: 0x0008 */
  /* 0x0438 */ long m_lSize;
  /* 0x043c */ long m_nWidth;
  /* 0x0440 */ long m_nHeight;
  /* 0x0444 */ int m_nTableSize;
  /* 0x0448 */ int m_nTableEntries;
  /* 0x044c */ long Padding_1336;
  /* 0x0450 */ unsigned char* m_pbBits;
  /* 0x0458 */ int m_fWin;
  /* 0x045c */ int m_fVgaPal;
}; /* size: 0x0460 */

struct tagEMRFORMAT
{
  /* 0x0000 */ unsigned long dSignature;
  /* 0x0004 */ unsigned long nVersion;
  /* 0x0008 */ unsigned long cbData;
  /* 0x000c */ unsigned long offData;
}; /* size: 0x0010 */

typedef struct _SD_GLOBAL_CHANGE_OUTPUT
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ unsigned long ChangeType;
  union
  {
    /* 0x0008 */ struct _SD_CHANGE_MACHINE_SID_OUTPUT SdChange;
    /* 0x0008 */ struct _SD_QUERY_STATS_OUTPUT SdQueryStats;
    struct
    {
      /* 0x0008 */ struct _SD_ENUM_SDS_OUTPUT SdEnumSds;
      /* 0x0038 */ long __PADDING__[4];
    }; /* size: 0x0040 */
  }; /* size: 0x0040 */
} SD_GLOBAL_CHANGE_OUTPUT, *PSD_GLOBAL_CHANGE_OUTPUT; /* size: 0x0048 */

typedef struct _FILE_ID_INFO
{
  /* 0x0000 */ unsigned __int64 VolumeSerialNumber;
  /* 0x0008 */ struct _FILE_ID_128 FileId;
} FILE_ID_INFO, *PFILE_ID_INFO; /* size: 0x0018 */

struct HFONT__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class Windows::Auto<Windows::Rtl::IRtlUtf16LEStringBuilder *>
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_KEY_DATA_BLOB_HEADER
{
  /* 0x0000 */ unsigned long dwMagic;
  /* 0x0004 */ unsigned long dwVersion;
  /* 0x0008 */ unsigned long cbKeyData;
} BCRYPT_KEY_DATA_BLOB_HEADER, *PBCRYPT_KEY_DATA_BLOB_HEADER; /* size: 0x000c */

struct HMMIO__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _xml_error
{
  /* 0x0000 */ unsigned int _nLine;
  /* 0x0004 */ long Padding_1337;
  /* 0x0008 */ wchar_t* _pchBuf;
  /* 0x0010 */ unsigned int _cchBuf;
  /* 0x0014 */ unsigned int _ich;
  /* 0x0018 */ wchar_t* _pszFound;
  /* 0x0020 */ wchar_t* _pszExpected;
  /* 0x0028 */ unsigned long _reserved1;
  /* 0x002c */ unsigned long _reserved2;
} xml_error, *Pxml_error; /* size: 0x0030 */

class Microsoft::WRL::Details::RuntimeClassBaseT<14>
{
}; /* size: 0x0001 */

struct MAP_SHARED<MAP_KEY_GUID,TYPEINFOVTBL *>
{
}; /* size: 0x00b8 */

typedef struct _CERTIFICATE_BLOB
{
  /* 0x0000 */ unsigned long dwCertEncodingType;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char* pbData;
} CERTIFICATE_BLOB, *PCERTIFICATE_BLOB; /* size: 0x0010 */

typedef struct __midl_frag959_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag959_t, *P_midl_frag959_t; /* size: 0x0038 */

typedef struct _PROCESS_EXTENDED_BASIC_INFORMATION64
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ struct _PROCESS_BASIC_INFORMATION64 BasicInfo;
  union
  {
    /* 0x0038 */ unsigned int Flags;
    struct /* bitfield */
    {
      /* 0x0038 */ unsigned int IsProtectedProcess : 1; /* bit position: 0 */
      /* 0x0038 */ unsigned int IsWow64Process : 1; /* bit position: 1 */
      /* 0x0038 */ unsigned int IsProcessDeleting : 1; /* bit position: 2 */
      /* 0x0038 */ unsigned int IsCrossSessionCreate : 1; /* bit position: 3 */
      /* 0x0038 */ unsigned int IsFrozen : 1; /* bit position: 4 */
      /* 0x0038 */ unsigned int IsBackground : 1; /* bit position: 5 */
      /* 0x0038 */ unsigned int IsStronglyNamed : 1; /* bit position: 6 */
      /* 0x0038 */ unsigned int SpareBits : 25; /* bit position: 7 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x003c */ long __PADDING__[1];
} PROCESS_EXTENDED_BASIC_INFORMATION64, *PPROCESS_EXTENDED_BASIC_INFORMATION64; /* size: 0x0040 */

typedef struct __midl_frag1492_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1492_t, *P_midl_frag1492_t; /* size: 0x0028 */

struct tagOIFI
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fMDIApp;
  /* 0x0008 */ struct HWND__* hwndFrame;
  /* 0x0010 */ struct HACCEL__* haccel;
  /* 0x0018 */ unsigned int cAccelEntries;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct __midl_frag1816_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1816_t, *P_midl_frag1816_t; /* size: 0x0038 */

struct HDESK__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct tagMIXERCONTROLDETAILS_LISTTEXTW
{
  /* 0x0000 */ unsigned long dwParam1;
  /* 0x0004 */ unsigned long dwParam2;
  /* 0x0008 */ wchar_t szName[64];
}; /* size: 0x0088 */

typedef struct _RTL_DYNAMIC_TIME_ZONE_INFORMATION
{
  /* 0x0000 */ struct _RTL_TIME_ZONE_INFORMATION tzi;
  /* 0x00ac */ wchar_t TimeZoneKeyName[128];
  /* 0x01ac */ unsigned char DynamicDaylightTimeDisabled;
  /* 0x01ad */ char __PADDING__[3];
} RTL_DYNAMIC_TIME_ZONE_INFORMATION, *PRTL_DYNAMIC_TIME_ZONE_INFORMATION; /* size: 0x01b0 */

typedef struct _THREAD_UMS_INFORMATION
{
  /* 0x0000 */ enum _THREAD_UMS_INFORMATION_COMMAND Command;
  /* 0x0004 */ long Padding_1338;
  union
  {
    struct
    {
      /* 0x0008 */ struct _RTL_UMS_COMPLETION_LIST* CompletionList;
      /* 0x0010 */ struct _RTL_UMS_CONTEXT* UmsContext;
    }; /* size: 0x0010 */
    /* 0x0008 */ unsigned long Flags;
    struct
    {
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned long IsUmsSchedulerThread : 1; /* bit position: 0 */
        /* 0x0008 */ unsigned long IsUmsWorkerThread : 1; /* bit position: 1 */
      }; /* bitfield */
      /* 0x000c */ long __PADDING__[3];
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
} THREAD_UMS_INFORMATION, *PTHREAD_UMS_INFORMATION; /* size: 0x0018 */

struct IWinInetCacheHints
{
}; /* size: 0x0008 */

typedef struct __midl_frag739_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag7;
    /* 0x0060 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag8;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
  } /* size: 0x0050 */ frag2;
} _midl_frag739_t, *P_midl_frag739_t; /* size: 0x0070 */

class CallFrame
{
  /* 0x0000 */ long Padding_1339[4];
  /* 0x0010 */ struct MD_METHOD* m_pmd;
  /* 0x0018 */ void* m_pvArgs;
  /* 0x0020 */ int m_fIsCopy;
  /* 0x0024 */ int m_fIsUnmarshal;
  /* 0x0028 */ __int64 m_hrReturnValue;
  /* 0x0030 */ void* m_pvMemCur;
  /* 0x0038 */ void* m_pvArgsSrc;
  /* 0x0040 */ class Interceptor* m_pInterceptor;
  /* 0x0048 */ int m_fPropogatingOutParam;
  /* 0x004c */ int m_fWorkingOnInParam;
  /* 0x0050 */ int m_fWorkingOnOutParam;
  /* 0x0054 */ long Padding_1340;
  /* 0x0058 */ class CallFrame* m_pAllocatorFrame;
  /* 0x0060 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0068 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0070 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0078 */ unsigned char* m_StackTop;
  /* 0x0080 */ unsigned char* m_Memory;
  /* 0x0088 */ unsigned __int64 m_MaxCount;
  /* 0x0090 */ unsigned __int64 m_Offset;
  /* 0x0098 */ unsigned __int64 m_ActualCount;
  /* 0x00a0 */ struct ARRAY_INFO* m_pArrayInfo;
  /* 0x00a8 */ long m_refs;
  /* 0x00ac */ unsigned char m_pvMem[256];
  /* 0x01ac */ int m_fCanUseBuffer;
  /* 0x01b0 */ struct tagBLOB m_blobBuffer;
  /* 0x01c0 */ int m_fWeOwnBlobBuffer;
}; /* size: 0x01c8 */

typedef struct _PORT_INFO_3A
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ long Padding_1341;
  /* 0x0008 */ char* pszStatus;
  /* 0x0010 */ unsigned long dwSeverity;
  /* 0x0014 */ long __PADDING__[1];
} PORT_INFO_3A, *PPORT_INFO_3A; /* size: 0x0018 */

typedef struct __midl_frag39_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag39_t, *P_midl_frag39_t; /* size: 0x0010 */

typedef struct __midl_frag1694_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1694_t, *P_midl_frag1694_t; /* size: 0x0020 */

typedef struct _CMSG_CTRL_MAIL_LIST_DECRYPT_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1342;
  /* 0x0008 */ unsigned __int64 hCryptProv;
  /* 0x0010 */ struct _CMSG_MAIL_LIST_RECIPIENT_INFO* pMailList;
  /* 0x0018 */ unsigned long dwRecipientIndex;
  /* 0x001c */ unsigned long dwKeyChoice;
  union
  {
    /* 0x0020 */ unsigned __int64 hKeyEncryptionKey;
    /* 0x0020 */ void* pvKeyEncryptionKey;
  }; /* size: 0x0008 */
} CMSG_CTRL_MAIL_LIST_DECRYPT_PARA, *PCMSG_CTRL_MAIL_LIST_DECRYPT_PARA; /* size: 0x0028 */

typedef struct _NCB
{
  /* 0x0000 */ unsigned char ncb_command;
  /* 0x0001 */ unsigned char ncb_retcode;
  /* 0x0002 */ unsigned char ncb_lsn;
  /* 0x0003 */ unsigned char ncb_num;
  /* 0x0004 */ long Padding_1343;
  /* 0x0008 */ unsigned char* ncb_buffer;
  /* 0x0010 */ unsigned short ncb_length;
  /* 0x0012 */ unsigned char ncb_callname[16];
  /* 0x0022 */ unsigned char ncb_name[16];
  /* 0x0032 */ unsigned char ncb_rto;
  /* 0x0033 */ unsigned char ncb_sto;
  /* 0x0034 */ long Padding_1344;
  /* 0x0038 */ void* ncb_post /* function */;
  /* 0x0040 */ unsigned char ncb_lana_num;
  /* 0x0041 */ unsigned char ncb_cmd_cplt;
  /* 0x0042 */ unsigned char ncb_reserve[18];
  /* 0x0054 */ long Padding_1345;
  /* 0x0058 */ void* ncb_event;
} NCB, *PNCB; /* size: 0x0060 */

typedef struct __midl_frag1484_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1484_t, *P_midl_frag1484_t; /* size: 0x0048 */

typedef struct _CMSG_MAIL_LIST_RECIPIENT_INFO
{
  /* 0x0000 */ unsigned long dwVersion;
  /* 0x0004 */ long Padding_1346;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB KeyId;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER KeyEncryptionAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB EncryptedKey;
  /* 0x0040 */ struct _FILETIME Date;
  /* 0x0048 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE* pOtherAttr;
} CMSG_MAIL_LIST_RECIPIENT_INFO, *PCMSG_MAIL_LIST_RECIPIENT_INFO; /* size: 0x0050 */

struct ICallFrameWalker
{
}; /* size: 0x0008 */

struct HSTR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IPrintDialogServices
{
}; /* size: 0x0008 */

struct tagEMRSETMAPPERFLAGS
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long dwFlags;
}; /* size: 0x000c */

struct tagCBT_CREATEWNDA
{
  /* 0x0000 */ struct tagCREATESTRUCTA* lpcs;
  /* 0x0008 */ struct HWND__* hwndInsertAfter;
}; /* size: 0x0010 */

struct tagDDEDISPATCHDATA
{
  /* 0x0000 */ long Padding_1347[2];
  /* 0x0008 */ class CDdeObject* pCDdeObject;
  /* 0x0010 */ unsigned int iArg;
  /* 0x0014 */ long __PADDING__[1];
}; /* size: 0x0018 */

typedef struct __midl_frag1203_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1203_t, *P_midl_frag1203_t; /* size: 0x0048 */

struct tagPIDData
{
  /* 0x0000 */ struct IUnknown* pServer;
  /* 0x0008 */ class CObjectContext* pServerCtx;
}; /* size: 0x0010 */

typedef struct _DEVICEDUMP_PRIVATE_SUBSECTION
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ struct _GP_LOG_PAGE_DESCRIPTOR GPLogId;
  /* 0x0008 */ unsigned char bData[1];
} DEVICEDUMP_PRIVATE_SUBSECTION, *PDEVICEDUMP_PRIVATE_SUBSECTION; /* size: 0x0009 */

class CDdeServerCallMgr
{
  /* 0x0000 */ long Padding_1348[6];
  /* 0x0018 */ class CDefClient* m_pDefClient;
  /* 0x0020 */ class CDDEServer* m_pDDEServer;
}; /* size: 0x0028 */

struct EXECUTEACK
{
  /* 0x0000 */ int f;
  /* 0x0004 */ long Padding_1349;
  /* 0x0008 */ void* hdata;
  /* 0x0010 */ struct HWND__* hwndFrom;
  /* 0x0018 */ struct HWND__* hwndTo;
}; /* size: 0x0020 */

struct CDefClient::CUnknownImpl
{
  /* 0x0000 */ long Padding_1350[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

struct CDefClient::COleClientSiteImpl
{
  /* 0x0000 */ long Padding_1351[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

struct CDefClient::CAdviseSinkImpl
{
  /* 0x0000 */ long Padding_1352[2];
  /* 0x0008 */ class CDefClient* m_pDefClient;
}; /* size: 0x0010 */

class CDefClient
{
  /* 0x0000 */ enum CHK m_chk;
  /* 0x0004 */ long Padding_1353;
  /* 0x0008 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0030 */ enum tagSERVERCALLEX m_CallState;
  /* 0x0034 */ long Padding_1354;
  /* 0x0038 */ struct IUnknown* m_pUnkOuter;
  /* 0x0040 */ struct IOleObject* m_lpoleObj;
  /* 0x0048 */ struct IDataObject* m_lpdataObj;
  /* 0x0050 */ int m_bCreateInst;
  /* 0x0054 */ int m_bTerminate;
  /* 0x0058 */ int m_termNo;
  /* 0x005c */ unsigned short m_aItem;
  /* 0x005e */ char Padding_1355[2];
  /* 0x0060 */ void* m_hcli;
  /* 0x0068 */ class CDefClient* m_lpNextItem;
  /* 0x0070 */ int m_bContainer;
  /* 0x0074 */ int m_cRef;
  /* 0x0078 */ struct HWND__* m_hwnd;
  /* 0x0080 */ void* m_hdevInfo;
  /* 0x0088 */ void* m_hcliInfo;
  /* 0x0090 */ int m_fDidRealSetHostNames;
  /* 0x0094 */ int m_fDidSetClientSite;
  /* 0x0098 */ int m_fGotDdeAdvise;
  /* 0x009c */ int m_fCreatedNotConnected;
  /* 0x00a0 */ int m_fInOnClose;
  /* 0x00a4 */ int m_fInOleSave;
  /* 0x00a8 */ struct EXECUTEACK m_ExecuteAck;
  /* 0x00c8 */ unsigned long m_dwConnectionOleObj;
  /* 0x00cc */ unsigned long m_dwConnectionDataObj;
  /* 0x00d0 */ struct ILockBytes* m_plkbytNative;
  /* 0x00d8 */ struct IStorage* m_pstgNative;
  /* 0x00e0 */ int m_fRunningInSDI;
  /* 0x00e4 */ long Padding_1356;
  /* 0x00e8 */ class CDDEServer* m_psrvrParent;
  /* 0x00f0 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x00f8 */ int m_fGotStdCloseDoc;
  /* 0x00fc */ int m_fGotEditNoPokeNativeYet;
  /* 0x0100 */ int m_fLocked;
  /* 0x0104 */ int m_fCallData;
  /* 0x0108 */ int m_fEmbed;
  /* 0x010c */ int m_cClients;
  /* 0x0110 */ class CDefClient* m_pdoc;
  /* 0x0118 */ struct CDefClient::CUnknownImpl m_Unknown;
  /* 0x0128 */ struct CDefClient::COleClientSiteImpl m_OleClientSite;
  /* 0x0138 */ struct CDefClient::CAdviseSinkImpl m_AdviseSink;
}; /* size: 0x0148 */

struct ANON_OBJECT_HEADER_BIGOBJ
{
  /* 0x0000 */ unsigned short Sig1;
  /* 0x0002 */ unsigned short Sig2;
  /* 0x0004 */ unsigned short Version;
  /* 0x0006 */ unsigned short Machine;
  /* 0x0008 */ unsigned long TimeDateStamp;
  /* 0x000c */ struct _GUID ClassID;
  /* 0x001c */ unsigned long SizeOfData;
  /* 0x0020 */ unsigned long Flags;
  /* 0x0024 */ unsigned long MetaDataSize;
  /* 0x0028 */ unsigned long MetaDataOffset;
  /* 0x002c */ unsigned long NumberOfSections;
  /* 0x0030 */ unsigned long PointerToSymbolTable;
  /* 0x0034 */ unsigned long NumberOfSymbols;
}; /* size: 0x0038 */

typedef struct _DISK_CONTROLLER_NUMBER
{
  /* 0x0000 */ unsigned long ControllerNumber;
  /* 0x0004 */ unsigned long DiskNumber;
} DISK_CONTROLLER_NUMBER, *PDISK_CONTROLLER_NUMBER; /* size: 0x0008 */

typedef struct _FILE_DISPOSITION_INFORMATION
{
  /* 0x0000 */ unsigned char DeleteFile;
} FILE_DISPOSITION_INFORMATION, *PFILE_DISPOSITION_INFORMATION; /* size: 0x0001 */

struct PPM_WMI_IDLE_STATES
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long TargetState;
  /* 0x000c */ unsigned long OldState;
  /* 0x0010 */ unsigned __int64 TargetProcessors;
  /* 0x0018 */ struct PPM_WMI_IDLE_STATE State[1];
}; /* size: 0x0038 */

typedef struct _PRINTER_INFO_9A
{
  /* 0x0000 */ struct _devicemodeA* pDevMode;
} PRINTER_INFO_9A, *PPRINTER_INFO_9A; /* size: 0x0008 */

typedef struct _SE_IMPERSONATION_STATE
{
  /* 0x0000 */ void* Token;
  /* 0x0008 */ unsigned char CopyOnOpen;
  /* 0x0009 */ unsigned char EffectiveOnly;
  /* 0x000a */ char Padding_1357[2];
  /* 0x000c */ enum _SECURITY_IMPERSONATION_LEVEL Level;
} SE_IMPERSONATION_STATE, *PSE_IMPERSONATION_STATE; /* size: 0x0010 */

typedef struct _PRINTER_INFO_7A
{
  /* 0x0000 */ char* pszObjectGUID;
  /* 0x0008 */ unsigned long dwAction;
  /* 0x000c */ long __PADDING__[1];
} PRINTER_INFO_7A, *PPRINTER_INFO_7A; /* size: 0x0010 */

typedef struct _currencyfmtA
{
  /* 0x0000 */ unsigned int NumDigits;
  /* 0x0004 */ unsigned int LeadingZero;
  /* 0x0008 */ unsigned int Grouping;
  /* 0x000c */ long Padding_1358;
  /* 0x0010 */ char* lpDecimalSep;
  /* 0x0018 */ char* lpThousandSep;
  /* 0x0020 */ unsigned int NegativeOrder;
  /* 0x0024 */ unsigned int PositiveOrder;
  /* 0x0028 */ char* lpCurrencySymbol;
} currencyfmtA, *PcurrencyfmtA; /* size: 0x0030 */

struct AsyncIRemUnknown
{
}; /* size: 0x0008 */

struct InterfaceWalkerFree
{
  /* 0x0000 */ long Padding_1359[2];
  /* 0x0008 */ struct ICallFrameWalker* m_pWalker;
}; /* size: 0x0010 */

typedef struct __midl_frag934_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag934_t, *P_midl_frag934_t; /* size: 0x0048 */

struct tagDRAWITEMSTRUCT
{
  /* 0x0000 */ unsigned int CtlType;
  /* 0x0004 */ unsigned int CtlID;
  /* 0x0008 */ unsigned int itemID;
  /* 0x000c */ unsigned int itemAction;
  /* 0x0010 */ unsigned int itemState;
  /* 0x0014 */ long Padding_1360;
  /* 0x0018 */ struct HWND__* hwndItem;
  /* 0x0020 */ struct HDC__* hDC;
  /* 0x0028 */ struct tagRECT rcItem;
  /* 0x0038 */ unsigned __int64 itemData;
}; /* size: 0x0040 */

typedef struct __s_GUID
{
  /* 0x0000 */ unsigned long Data1;
  /* 0x0004 */ unsigned short Data2;
  /* 0x0006 */ unsigned short Data3;
  /* 0x0008 */ unsigned char Data4[8];
} _s_GUID, *P_s_GUID; /* size: 0x0010 */

typedef struct __midl_frag468_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag468_t, *P_midl_frag468_t; /* size: 0x0038 */

class CScmPatternTbl
{
  /* 0x0000 */ unsigned char* _pLocTbl;
}; /* size: 0x0008 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned char>
{
}; /* size: 0x0001 */

struct IXMLElement
{
}; /* size: 0x0008 */

typedef struct _CERT_CHAIN_ENGINE_CONFIG
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1361;
  /* 0x0008 */ void* hRestrictedRoot;
  /* 0x0010 */ void* hRestrictedTrust;
  /* 0x0018 */ void* hRestrictedOther;
  /* 0x0020 */ unsigned long cAdditionalStore;
  /* 0x0024 */ long Padding_1362;
  /* 0x0028 */ void** rghAdditionalStore;
  /* 0x0030 */ unsigned long dwFlags;
  /* 0x0034 */ unsigned long dwUrlRetrievalTimeout;
  /* 0x0038 */ unsigned long MaximumCachedCertificates;
  /* 0x003c */ unsigned long CycleDetectionModulus;
  /* 0x0040 */ void* hExclusiveRoot;
  /* 0x0048 */ void* hExclusiveTrustedPeople;
  /* 0x0050 */ unsigned long dwExclusiveFlags;
  /* 0x0054 */ long __PADDING__[1];
} CERT_CHAIN_ENGINE_CONFIG, *PCERT_CHAIN_ENGINE_CONFIG; /* size: 0x0058 */

typedef struct _GETVERSIONINPARAMS
{
  /* 0x0000 */ unsigned char bVersion;
  /* 0x0001 */ unsigned char bRevision;
  /* 0x0002 */ unsigned char bReserved;
  /* 0x0003 */ unsigned char bIDEDeviceMap;
  /* 0x0004 */ unsigned long fCapabilities;
  /* 0x0008 */ unsigned long dwReserved[4];
} GETVERSIONINPARAMS, *PGETVERSIONINPARAMS; /* size: 0x0018 */

struct tagEMREXTSELECTCLIPRGN
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long cbRgnData;
  /* 0x000c */ unsigned long iMode;
  /* 0x0010 */ unsigned char RgnData[1];
  /* 0x0011 */ char __PADDING__[3];
}; /* size: 0x0014 */

struct tagRemSNB
{
  /* 0x0000 */ unsigned long ulCntStr;
  /* 0x0004 */ unsigned long ulCntChar;
  /* 0x0008 */ wchar_t rgString[1];
  /* 0x000a */ char __PADDING__[2];
}; /* size: 0x000c */

typedef struct _STORAGE_DEVICE_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char DeviceType;
  /* 0x0009 */ unsigned char DeviceTypeModifier;
  /* 0x000a */ unsigned char RemovableMedia;
  /* 0x000b */ unsigned char CommandQueueing;
  /* 0x000c */ unsigned long VendorIdOffset;
  /* 0x0010 */ unsigned long ProductIdOffset;
  /* 0x0014 */ unsigned long ProductRevisionOffset;
  /* 0x0018 */ unsigned long SerialNumberOffset;
  /* 0x001c */ enum _STORAGE_BUS_TYPE BusType;
  /* 0x0020 */ unsigned long RawPropertiesLength;
  /* 0x0024 */ unsigned char RawDeviceProperties[1];
  /* 0x0025 */ char __PADDING__[3];
} STORAGE_DEVICE_DESCRIPTOR, *PSTORAGE_DEVICE_DESCRIPTOR; /* size: 0x0028 */

typedef struct __midl_frag1609_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1609_t, *P_midl_frag1609_t; /* size: 0x0028 */

struct IRpcChannelBuffer3
{
}; /* size: 0x0008 */

struct DISPATCH_FRAME
{
}; /* size: 0x0058 */

struct sockproto
{
  /* 0x0000 */ unsigned short sp_family;
  /* 0x0002 */ unsigned short sp_protocol;
}; /* size: 0x0004 */

typedef struct __midl_frag1000_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1000_t, *P_midl_frag1000_t; /* size: 0x0038 */

class CReadMInterfacePointerWithSourceAttributesMarshalingStream
{
  /* 0x0000 */ long Padding_1363[12];
  /* 0x0030 */ unsigned __int64 _cAttributesProvided;
  /* 0x0038 */ const struct MarshalingContextAttributeValue* _pAttributesProvided;
}; /* size: 0x0040 */

typedef struct __midl_frag1139_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1139_t, *P_midl_frag1139_t; /* size: 0x0038 */

typedef struct _FILE_END_OF_FILE_INFO
{
  /* 0x0000 */ union _LARGE_INTEGER EndOfFile;
} FILE_END_OF_FILE_INFO, *PFILE_END_OF_FILE_INFO; /* size: 0x0008 */

class Windows::Rtl::StringTraits<_UNICODE_STRING>
{
}; /* size: 0x0001 */

class CBaseInterfaceDataMarshalingStream
{
}; /* size: 0x0030 */

struct tagEMRSETPALETTEENTRIES
{
  /* 0x0000 */ struct tagEMR emr;
  /* 0x0008 */ unsigned long ihPal;
  /* 0x000c */ unsigned long iStart;
  /* 0x0010 */ unsigned long cEntries;
  /* 0x0014 */ struct tagPALETTEENTRY aPalEntries[1];
}; /* size: 0x0018 */

typedef struct _PRINTER_INFO_4A
{
  /* 0x0000 */ char* pPrinterName;
  /* 0x0008 */ char* pServerName;
  /* 0x0010 */ unsigned long Attributes;
  /* 0x0014 */ long __PADDING__[1];
} PRINTER_INFO_4A, *PPRINTER_INFO_4A; /* size: 0x0018 */

class CLimitedWritableStorage::SetElementTimes::__l3::<lambda_8A48F4084DADEF3>;

typedef struct _EX_ATTRIBUTE_INFORMATION_REGISTRATION
{
  /* 0x0000 */ void* QueryRoutine /* function */;
  /* 0x0008 */ void* SetRoutine /* function */;
} EX_ATTRIBUTE_INFORMATION_REGISTRATION, *PEX_ATTRIBUTE_INFORMATION_REGISTRATION; /* size: 0x0010 */

typedef struct _PRINTER_NOTIFY_OPTIONS
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long Padding_1364;
  /* 0x0010 */ struct _PRINTER_NOTIFY_OPTIONS_TYPE* pTypes;
} PRINTER_NOTIFY_OPTIONS, *PPRINTER_NOTIFY_OPTIONS; /* size: 0x0018 */

typedef struct _VERIFY_INFORMATION
{
  /* 0x0000 */ union _LARGE_INTEGER StartingOffset;
  /* 0x0008 */ unsigned long Length;
  /* 0x000c */ long __PADDING__[1];
} VERIFY_INFORMATION, *PVERIFY_INFORMATION; /* size: 0x0010 */

struct HMIDI__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

struct IXTLRuntime
{
}; /* size: 0x0008 */

class DDE_CHANNEL
{
  /* 0x0000 */ long Padding_1365[4];
  /* 0x0010 */ unsigned long m_cRefs;
  /* 0x0014 */ long Padding_1366;
  /* 0x0018 */ struct HWND__* hwndCli;
  /* 0x0020 */ struct HWND__* hwndSvr;
  /* 0x0028 */ int bTerminating;
  /* 0x002c */ int iExtraTerms;
  /* 0x0030 */ unsigned short wTimer;
  /* 0x0032 */ char Padding_1367[2];
  /* 0x0034 */ unsigned long dwStartTickCount;
  /* 0x0038 */ unsigned short msgFirst;
  /* 0x003a */ unsigned short msgLast;
  /* 0x003c */ long Padding_1368;
  /* 0x0040 */ struct HWND__* msghwnd;
  /* 0x0048 */ int fRejected;
  /* 0x004c */ unsigned short wMsg;
  /* 0x004e */ char Padding_1369[2];
  /* 0x0050 */ __int64 lParam;
  /* 0x0058 */ int iAwaitAck;
  /* 0x005c */ HRESULT hres;
  /* 0x0060 */ void* hopt;
  /* 0x0068 */ void* hDdePoke;
  /* 0x0070 */ void* hCommands;
  /* 0x0078 */ unsigned short wChannelDeleted;
  /* 0x007a */ char Padding_1370[6];
  /* 0x0080 */ struct tagDDECALLDATA* pCD;
  /* 0x0088 */ enum tagSERVERCALLEX CallState;
  /* 0x008c */ int bFreedhopt;
}; /* size: 0x0090 */

typedef struct __midl_frag1610_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1610_t, *P_midl_frag1610_t; /* size: 0x000c */

typedef struct _CM_SONIC_DEVICE_DATA
{
  /* 0x0000 */ unsigned short Version;
  /* 0x0002 */ unsigned short Revision;
  /* 0x0004 */ unsigned short DataConfigurationRegister;
  /* 0x0006 */ unsigned char EthernetAddress[8];
} CM_SONIC_DEVICE_DATA, *PCM_SONIC_DEVICE_DATA; /* size: 0x000e */

struct IContext
{
}; /* size: 0x0008 */

typedef struct _PROCESS_HANDLE_SNAPSHOT_INFORMATION
{
  /* 0x0000 */ unsigned __int64 NumberOfHandles;
  /* 0x0008 */ unsigned __int64 Reserved;
  /* 0x0010 */ struct _PROCESS_HANDLE_TABLE_ENTRY_INFO Handles[1];
} PROCESS_HANDLE_SNAPSHOT_INFORMATION, *PPROCESS_HANDLE_SNAPSHOT_INFORMATION; /* size: 0x0038 */

struct localeinfo_struct
{
  /* 0x0000 */ struct threadlocaleinfostruct* locinfo;
  /* 0x0008 */ struct threadmbcinfostruct* mbcinfo;
}; /* size: 0x0010 */

struct CDdeObject::CProxyManagerImpl
{
  /* 0x0000 */ long Padding_1371[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct STARTING_LCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingLcn;
}; /* size: 0x0008 */

typedef struct __midl_frag738_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag738_t, *P_midl_frag738_t; /* size: 0x0018 */

struct STARTING_VCN_INPUT_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER StartingVcn;
}; /* size: 0x0008 */

struct Windows::AutoPODBase<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >::is_pointer<_LUNICODE_STRING>
{
}; /* size: 0x0001 */

struct FIND_BY_SID_DATA
{
  /* 0x0000 */ unsigned long Restart;
  /* 0x0004 */ struct _SID Sid;
}; /* size: 0x0010 */

struct NCryptKeyName
{
  /* 0x0000 */ wchar_t* pszName;
  /* 0x0008 */ wchar_t* pszAlgid;
  /* 0x0010 */ unsigned long dwLegacyKeySpec;
  /* 0x0014 */ unsigned long dwFlags;
}; /* size: 0x0018 */

typedef struct _CHANGER_SEND_VOLUME_TAG_INFORMATION
{
  /* 0x0000 */ struct _CHANGER_ELEMENT StartingElement;
  /* 0x0008 */ unsigned long ActionCode;
  /* 0x000c */ unsigned char VolumeIDTemplate[40];
} CHANGER_SEND_VOLUME_TAG_INFORMATION, *PCHANGER_SEND_VOLUME_TAG_INFORMATION; /* size: 0x0034 */

struct MFT_ENUM_DATA_V1
{
  /* 0x0000 */ unsigned __int64 StartFileReferenceNumber;
  /* 0x0008 */ __int64 LowUsn;
  /* 0x0010 */ __int64 HighUsn;
  /* 0x0018 */ unsigned short MinMajorVersion;
  /* 0x001a */ unsigned short MaxMajorVersion;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct HAS_INTERFACES
{
  /* 0x0000 */ long m_cInterfaces;
}; /* size: 0x0004 */

struct netent
{
  /* 0x0000 */ char* n_name;
  /* 0x0008 */ char** n_aliases;
  /* 0x0010 */ short n_addrtype;
  /* 0x0012 */ char Padding_1372[2];
  /* 0x0014 */ unsigned long n_net;
}; /* size: 0x0018 */

typedef struct __midl_frag449_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag449_t, *P_midl_frag449_t; /* size: 0x0038 */

struct READ_FILE_USN_DATA
{
  /* 0x0000 */ unsigned short MinMajorVersion;
  /* 0x0002 */ unsigned short MaxMajorVersion;
}; /* size: 0x0004 */

class CReadOnlyStorage
{
}; /* size: 0x0020 */

struct USN_RECORD_V3
{
  /* 0x0000 */ unsigned long RecordLength;
  /* 0x0004 */ unsigned short MajorVersion;
  /* 0x0006 */ unsigned short MinorVersion;
  /* 0x0008 */ struct _FILE_ID_128 FileReferenceNumber;
  /* 0x0018 */ struct _FILE_ID_128 ParentFileReferenceNumber;
  /* 0x0028 */ __int64 Usn;
  /* 0x0030 */ union _LARGE_INTEGER TimeStamp;
  /* 0x0038 */ unsigned long Reason;
  /* 0x003c */ unsigned long SourceInfo;
  /* 0x0040 */ unsigned long SecurityId;
  /* 0x0044 */ unsigned long FileAttributes;
  /* 0x0048 */ unsigned short FileNameLength;
  /* 0x004a */ unsigned short FileNameOffset;
  /* 0x004c */ wchar_t FileName[1];
  /* 0x004e */ char __PADDING__[2];
}; /* size: 0x0050 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IUnknown>;

typedef struct __midl_frag242_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag242_t, *P_midl_frag242_t; /* size: 0x0038 */

typedef struct _callframeinternal_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[759];
  /* 0x02f9 */ char __PADDING__[1];
} callframeinternal_MIDL_PROC_FORMAT_STRING, *Pcallframeinternal_MIDL_PROC_FORMAT_STRING; /* size: 0x02fa */

typedef struct _EFS_COMPATIBILITY_INFO
{
  /* 0x0000 */ unsigned long EfsVersion;
} EFS_COMPATIBILITY_INFO, *PEFS_COMPATIBILITY_INFO; /* size: 0x0004 */

typedef struct __midl_frag1372_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1372_t, *P_midl_frag1372_t; /* size: 0x0048 */

struct PPM_WMI_PERF_STATES_EX
{
  /* 0x0000 */ unsigned long Count;
  /* 0x0004 */ unsigned long MaxFrequency;
  /* 0x0008 */ unsigned long CurrentState;
  /* 0x000c */ unsigned long MaxPerfState;
  /* 0x0010 */ unsigned long MinPerfState;
  /* 0x0014 */ unsigned long LowestPerfState;
  /* 0x0018 */ unsigned long ThermalConstraint;
  /* 0x001c */ unsigned char BusyAdjThreshold;
  /* 0x001d */ unsigned char PolicyType;
  /* 0x001e */ unsigned char Type;
  /* 0x001f */ unsigned char Reserved;
  /* 0x0020 */ unsigned long TimerInterval;
  /* 0x0024 */ long Padding_1373;
  /* 0x0028 */ void* TargetProcessors;
  /* 0x0030 */ unsigned long PStateHandler;
  /* 0x0034 */ unsigned long PStateContext;
  /* 0x0038 */ unsigned long TStateHandler;
  /* 0x003c */ unsigned long TStateContext;
  /* 0x0040 */ unsigned long FeedbackHandler;
  /* 0x0044 */ unsigned long Reserved1;
  /* 0x0048 */ unsigned __int64 Reserved2;
  /* 0x0050 */ struct PPM_WMI_PERF_STATE State[1];
}; /* size: 0x0090 */

struct tagWAVEOUTCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long dwFormats;
  /* 0x002c */ unsigned short wChannels;
  /* 0x002e */ unsigned short wReserved1;
  /* 0x0030 */ unsigned long dwSupport;
  /* 0x0034 */ struct _GUID ManufacturerGuid;
  /* 0x0044 */ struct _GUID ProductGuid;
  /* 0x0054 */ struct _GUID NameGuid;
}; /* size: 0x0064 */

typedef struct _ais_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[153];
  /* 0x009b */ char __PADDING__[1];
} ais_MIDL_TYPE_FORMAT_STRING, *Pais_MIDL_TYPE_FORMAT_STRING; /* size: 0x009c */

typedef struct __midl_frag34_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag34_t, *P_midl_frag34_t; /* size: 0x0058 */

struct tagWAVEINCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long dwFormats;
  /* 0x004c */ unsigned short wChannels;
  /* 0x004e */ unsigned short wReserved1;
}; /* size: 0x0050 */

struct PPM_IDLE_ACCOUNTING_EX
{
  /* 0x0000 */ unsigned long StateCount;
  /* 0x0004 */ unsigned long TotalTransitions;
  /* 0x0008 */ unsigned long ResetCount;
  /* 0x000c */ unsigned long AbortCount;
  /* 0x0010 */ unsigned __int64 StartTime;
  /* 0x0018 */ struct PPM_IDLE_STATE_ACCOUNTING_EX State[1];
}; /* size: 0x01b8 */

class CLimitedWritableStorage::CreateStorage::__l3::<lambda_E9CECF399B911A5C>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ const wchar_t*& pwcsName;
  /* 0x0010 */ unsigned long& grfMode;
  /* 0x0018 */ unsigned long& reserved1;
  /* 0x0020 */ unsigned long& reserved2;
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IStorage>& pInner;
}; /* size: 0x0030 */

struct PPM_PERFSTATE_DOMAIN_EVENT
{
  /* 0x0000 */ unsigned long State;
  /* 0x0004 */ unsigned long Latency;
  /* 0x0008 */ unsigned long Speed;
  /* 0x000c */ long Padding_1374;
  /* 0x0010 */ unsigned __int64 Processors;
}; /* size: 0x0018 */

struct PPM_IDLESTATE_EVENT
{
  /* 0x0000 */ unsigned long NewState;
  /* 0x0004 */ unsigned long OldState;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

typedef struct _ADDJOB_INFO_1A
{
  /* 0x0000 */ char* Path;
  /* 0x0008 */ unsigned long JobId;
  /* 0x000c */ long __PADDING__[1];
} ADDJOB_INFO_1A, *PADDJOB_INFO_1A; /* size: 0x0010 */

struct PPM_THERMALCHANGE_EVENT
{
  /* 0x0000 */ unsigned long ThermalConstraint;
  /* 0x0004 */ long Padding_1375;
  /* 0x0008 */ unsigned __int64 Processors;
}; /* size: 0x0010 */

struct PROCESSOR_IDLESTATE_POLICY
{
  /* 0x0000 */ unsigned short Revision;
  union
  {
    union
    {
      /* 0x0002 */ unsigned short AsUSHORT;
      struct /* bitfield */
      {
        /* 0x0002 */ unsigned short AllowScaling : 1; /* bit position: 0 */
        /* 0x0002 */ unsigned short Disabled : 1; /* bit position: 1 */
        /* 0x0002 */ unsigned short Reserved : 14; /* bit position: 2 */
      }; /* bitfield */
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Flags;
  /* 0x0004 */ unsigned long PolicyCount;
  /* 0x0008 */ struct PROCESSOR_IDLESTATE_INFO Policy[3];
}; /* size: 0x0020 */

struct tagAUXCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned short wTechnology;
  /* 0x002a */ unsigned short wReserved1;
  /* 0x002c */ unsigned long dwSupport;
}; /* size: 0x0030 */

struct NOTIFY_USER_POWER_SETTING
{
  /* 0x0000 */ struct _GUID Guid;
}; /* size: 0x0010 */

struct RTL_ACE_DATA
{
  /* 0x0000 */ unsigned char AceType;
  /* 0x0001 */ unsigned char InheritFlags;
  /* 0x0002 */ unsigned char AceFlags;
  /* 0x0003 */ char Padding_1376;
  /* 0x0004 */ unsigned long Mask;
  /* 0x0008 */ void** Sid;
}; /* size: 0x0010 */

class COXIDTable
{
  union
  {
    /* 0x0000 */ unsigned long _cExpired;
    /* 0x0000 */ class OXIDEntry _InUseHead;
    /* 0x0000 */ class OXIDEntry _ExpireHead;
    /* 0x0000 */ class OXIDEntry _CleanupHead;
  }; /* size: 0x00c0 */
}; /* size: 0x0001 */

typedef struct _CRT_DOUBLE
{
  /* 0x0000 */ double x;
} CRT_DOUBLE, *PCRT_DOUBLE; /* size: 0x0008 */

typedef struct _LONGDOUBLE
{
  /* 0x0000 */ double x;
} LONGDOUBLE, *PLONGDOUBLE; /* size: 0x0008 */

typedef struct __midl_frag1805_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1805_t, *P_midl_frag1805_t; /* size: 0x0038 */

struct SHELLHOOKINFO
{
  /* 0x0000 */ struct HWND__* hwnd;
  /* 0x0008 */ struct tagRECT rc;
}; /* size: 0x0018 */

struct FLASHWINFO
{
  /* 0x0000 */ unsigned int cbSize;
  /* 0x0004 */ long Padding_1377;
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned long dwFlags;
  /* 0x0014 */ unsigned int uCount;
  /* 0x0018 */ unsigned long dwTimeout;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

typedef struct __midl_frag770_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag770_t, *P_midl_frag770_t; /* size: 0x0018 */

struct MENUITEMTEMPLATEHEADER
{
  /* 0x0000 */ unsigned short versionNumber;
  /* 0x0002 */ unsigned short offset;
}; /* size: 0x0004 */

struct RPC_STATS_VECTOR
{
  /* 0x0000 */ unsigned int Count;
  /* 0x0004 */ unsigned long Stats[1];
}; /* size: 0x0008 */

class CLimitedWritableStream::Write::__l3::<lambda_FC1ED2C6D0404BF6>;

struct tagMCI_INFO_PARMSW
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ wchar_t* lpstrReturn;
  /* 0x0010 */ unsigned long dwRetSize;
}; /* size: 0x0014 */

typedef struct __midl_frag1666_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1666_t, *P_midl_frag1666_t; /* size: 0x0038 */

struct RPC_CLIENT_INFORMATION1
{
  /* 0x0000 */ unsigned char* UserName;
  /* 0x0008 */ unsigned char* ComputerName;
  /* 0x0010 */ unsigned short Privilege;
  /* 0x0012 */ char Padding_1378[2];
  /* 0x0014 */ unsigned long AuthFlags;
}; /* size: 0x0018 */

struct RPC_ENDPOINT_TEMPLATEA
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1379;
  /* 0x0008 */ unsigned char* ProtSeq;
  /* 0x0010 */ unsigned char* Endpoint;
  /* 0x0018 */ void* SecurityDescriptor;
  /* 0x0020 */ unsigned long Backlog;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

class Microsoft::WRL::FtmBase
{
  /* 0x0000 */ long Padding_1380[6];
  /* 0x0018 */ class Microsoft::WRL::ComPtr<IMarshal> marshaller_;
}; /* size: 0x0020 */

struct tagCHOOSECOLORW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1381;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HWND__* hInstance;
  /* 0x0018 */ unsigned long rgbResult;
  /* 0x001c */ long Padding_1382;
  /* 0x0020 */ unsigned long* lpCustColors;
  /* 0x0028 */ unsigned long Flags;
  /* 0x002c */ long Padding_1383;
  /* 0x0030 */ __int64 lCustData;
  /* 0x0038 */ void* lpfnHook /* function */;
  /* 0x0040 */ const wchar_t* lpTemplateName;
}; /* size: 0x0048 */

typedef struct __midl_frag57_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag57_t, *P_midl_frag57_t; /* size: 0x0018 */

struct RPC_INTERFACE_TEMPLATEW
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ long Padding_1384;
  /* 0x0008 */ void* IfSpec;
  /* 0x0010 */ struct _GUID* MgrTypeUuid;
  /* 0x0018 */ void* MgrEpv;
  /* 0x0020 */ unsigned int Flags;
  /* 0x0024 */ unsigned int MaxCalls;
  /* 0x0028 */ unsigned int MaxRpcSize;
  /* 0x002c */ long Padding_1385;
  /* 0x0030 */ void* IfCallback /* function */;
  /* 0x0038 */ struct _UUID_VECTOR* UuidVector;
  /* 0x0040 */ unsigned short* Annotation;
  /* 0x0048 */ void* SecurityDescriptor;
}; /* size: 0x0050 */

typedef struct _MONITOR_INFO_2A
{
  /* 0x0000 */ char* pName;
  /* 0x0008 */ char* pEnvironment;
  /* 0x0010 */ char* pDLLName;
} MONITOR_INFO_2A, *PMONITOR_INFO_2A; /* size: 0x0018 */

struct UDATE
{
  /* 0x0000 */ struct _SYSTEMTIME st;
  /* 0x0010 */ unsigned short wDayOfYear;
}; /* size: 0x0012 */

typedef class _RTL_CONSTANT_STRING_remove_const_template_class<2>
{
} RTL_CONSTANT_STRING_remove_const_template_class<2>, *PRTL_CONSTANT_STRING_remove_const_template_class<2>; /* size: 0x0001 */

typedef struct _DATATYPES_INFO_1W
{
  /* 0x0000 */ wchar_t* pName;
} DATATYPES_INFO_1W, *PDATATYPES_INFO_1W; /* size: 0x0008 */

typedef struct __midl_frag1440_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1440_t, *P_midl_frag1440_t; /* size: 0x0068 */

struct IUriContainer
{
}; /* size: 0x0008 */

struct ICacheControl
{
}; /* size: 0x0008 */

typedef struct _ZONEATTRIBUTES
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ wchar_t szDisplayName[260];
  /* 0x020c */ wchar_t szDescription[200];
  /* 0x039c */ wchar_t szIconPath[260];
  /* 0x05a4 */ unsigned long dwTemplateMinLevel;
  /* 0x05a8 */ unsigned long dwTemplateRecommended;
  /* 0x05ac */ unsigned long dwTemplateCurrentLevel;
  /* 0x05b0 */ unsigned long dwFlags;
} ZONEATTRIBUTES, *PZONEATTRIBUTES; /* size: 0x05b4 */

typedef struct _SYSTEM_LOW_PRIORITY_IO_INFORMATION
{
  /* 0x0000 */ unsigned long LowPriReadOperations;
  /* 0x0004 */ unsigned long LowPriWriteOperations;
  /* 0x0008 */ unsigned long KernelBumpedToNormalOperations;
  /* 0x000c */ unsigned long LowPriPagingReadOperations;
  /* 0x0010 */ unsigned long KernelPagingReadsBumpedToNormal;
  /* 0x0014 */ unsigned long LowPriPagingWriteOperations;
  /* 0x0018 */ unsigned long KernelPagingWritesBumpedToNormal;
  /* 0x001c */ unsigned long BoostedIrpCount;
  /* 0x0020 */ unsigned long BoostedPagingIrpCount;
  /* 0x0024 */ unsigned long BlanketBoostCount;
} SYSTEM_LOW_PRIORITY_IO_INFORMATION, *PSYSTEM_LOW_PRIORITY_IO_INFORMATION; /* size: 0x0028 */

typedef struct _EFS_DECRYPTION_STATUS_INFO
{
  /* 0x0000 */ unsigned long dwDecryptionError;
  /* 0x0004 */ unsigned long dwHashOffset;
  /* 0x0008 */ unsigned long cbHash;
} EFS_DECRYPTION_STATUS_INFO, *PEFS_DECRYPTION_STATUS_INFO; /* size: 0x000c */

typedef struct _CHAR_INFO
{
  union
  {
    union
    {
      /* 0x0000 */ wchar_t UnicodeChar;
      /* 0x0000 */ char AsciiChar;
    }; /* size: 0x0002 */
  } /* size: 0x0002 */ Char;
  /* 0x0002 */ unsigned short Attributes;
} CHAR_INFO, *PCHAR_INFO; /* size: 0x0004 */

struct IOleCache
{
}; /* size: 0x0008 */

typedef struct _BCRYPT_PKCS1_PADDING_INFO
{
  /* 0x0000 */ const wchar_t* pszAlgId;
} BCRYPT_PKCS1_PADDING_INFO, *PBCRYPT_PKCS1_PADDING_INFO; /* size: 0x0008 */

typedef struct _PS_CPU_QUOTA_SET_INFORMATION
{
  /* 0x0000 */ __int64 SessionHandle;
  /* 0x0008 */ unsigned long Weight;
  /* 0x000c */ long __PADDING__[1];
} PS_CPU_QUOTA_SET_INFORMATION, *PPS_CPU_QUOTA_SET_INFORMATION; /* size: 0x0010 */

struct NTFS_VOLUME_DATA_BUFFER
{
  /* 0x0000 */ union _LARGE_INTEGER VolumeSerialNumber;
  /* 0x0008 */ union _LARGE_INTEGER NumberSectors;
  /* 0x0010 */ union _LARGE_INTEGER TotalClusters;
  /* 0x0018 */ union _LARGE_INTEGER FreeClusters;
  /* 0x0020 */ union _LARGE_INTEGER TotalReserved;
  /* 0x0028 */ unsigned long BytesPerSector;
  /* 0x002c */ unsigned long BytesPerCluster;
  /* 0x0030 */ unsigned long BytesPerFileRecordSegment;
  /* 0x0034 */ unsigned long ClustersPerFileRecordSegment;
  /* 0x0038 */ union _LARGE_INTEGER MftValidDataLength;
  /* 0x0040 */ union _LARGE_INTEGER MftStartLcn;
  /* 0x0048 */ union _LARGE_INTEGER Mft2StartLcn;
  /* 0x0050 */ union _LARGE_INTEGER MftZoneStart;
  /* 0x0058 */ union _LARGE_INTEGER MftZoneEnd;
}; /* size: 0x0060 */

typedef struct _SYSTEM_MEMORY_INFORMATION
{
  /* 0x0000 */ unsigned __int64 PagedPoolCommitPageCount;
  /* 0x0008 */ unsigned __int64 NonPagedPoolPageCount;
  /* 0x0010 */ unsigned __int64 MdlPageCount;
  /* 0x0018 */ unsigned __int64 CommitPageCount;
} SYSTEM_MEMORY_INFORMATION, *PSYSTEM_MEMORY_INFORMATION; /* size: 0x0020 */

struct Microsoft::WRL::Details::FactoryCache
{
  /* 0x0000 */ struct IUnknown* factory;
  union
  {
    union
    {
      /* 0x0008 */ struct
      {
      } /* size: 0x0001 */* winrt;
      /* 0x0008 */ unsigned long com;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ cookie;
}; /* size: 0x0010 */

typedef struct _MESSAGE_RESOURCE_DATA
{
  /* 0x0000 */ unsigned long NumberOfBlocks;
  /* 0x0004 */ struct _MESSAGE_RESOURCE_BLOCK Blocks[1];
} MESSAGE_RESOURCE_DATA, *PMESSAGE_RESOURCE_DATA; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> const >;

typedef struct _CRYPT_KEY_VERIFY_MESSAGE_PARA
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMsgEncodingType;
  /* 0x0008 */ unsigned __int64 hCryptProv;
} CRYPT_KEY_VERIFY_MESSAGE_PARA, *PCRYPT_KEY_VERIFY_MESSAGE_PARA; /* size: 0x0010 */

struct OPENCARDNAME_EXA
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_1386;
  /* 0x0008 */ unsigned __int64 hSCardContext;
  /* 0x0010 */ struct HWND__* hwndOwner;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long Padding_1387;
  /* 0x0020 */ const char* lpstrTitle;
  /* 0x0028 */ const char* lpstrSearchDesc;
  /* 0x0030 */ struct HICON__* hIcon;
  /* 0x0038 */ struct OPENCARD_SEARCH_CRITERIAA* pOpenCardSearchCriteria;
  /* 0x0040 */ void* lpfnConnect /* function */;
  /* 0x0048 */ void* pvUserData;
  /* 0x0050 */ unsigned long dwShareMode;
  /* 0x0054 */ unsigned long dwPreferredProtocols;
  /* 0x0058 */ char* lpstrRdr;
  /* 0x0060 */ unsigned long nMaxRdr;
  /* 0x0064 */ long Padding_1388;
  /* 0x0068 */ char* lpstrCard;
  /* 0x0070 */ unsigned long nMaxCard;
  /* 0x0074 */ unsigned long dwActiveProtocol;
  /* 0x0078 */ unsigned __int64 hCardHandle;
}; /* size: 0x0080 */

typedef struct _TOKEN_AUDIT_POLICY
{
  /* 0x0000 */ unsigned char PerUserPolicy[29];
} TOKEN_AUDIT_POLICY, *PTOKEN_AUDIT_POLICY; /* size: 0x001d */

struct NET_ADDRESS_INFO_;

typedef struct __midl_frag1410_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1410_t, *P_midl_frag1410_t; /* size: 0x000c */

typedef struct _BCRYPT_PROVIDER_NAME
{
  /* 0x0000 */ wchar_t* pszProviderName;
} BCRYPT_PROVIDER_NAME, *PBCRYPT_PROVIDER_NAME; /* size: 0x0008 */

typedef struct _stat32
{
  /* 0x0000 */ unsigned int st_dev;
  /* 0x0004 */ unsigned short st_ino;
  /* 0x0006 */ unsigned short st_mode;
  /* 0x0008 */ short st_nlink;
  /* 0x000a */ short st_uid;
  /* 0x000c */ short st_gid;
  /* 0x000e */ char Padding_1389[2];
  /* 0x0010 */ unsigned int st_rdev;
  /* 0x0014 */ long st_size;
  /* 0x0018 */ long st_atime;
  /* 0x001c */ long st_mtime;
  /* 0x0020 */ long st_ctime;
} stat32, *Pstat32; /* size: 0x0024 */

struct IMonikerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetClassID /* function */;
  /* 0x0020 */ void* IsDirty /* function */;
  /* 0x0028 */ void* Load /* function */;
  /* 0x0030 */ void* Save /* function */;
  /* 0x0038 */ void* GetSizeMax /* function */;
  /* 0x0040 */ void* BindToObject /* function */;
  /* 0x0048 */ void* BindToStorage /* function */;
  /* 0x0050 */ void* Reduce /* function */;
  /* 0x0058 */ void* ComposeWith /* function */;
  /* 0x0060 */ void* Enum /* function */;
  /* 0x0068 */ void* IsEqual /* function */;
  /* 0x0070 */ void* Hash /* function */;
  /* 0x0078 */ void* IsRunning /* function */;
  /* 0x0080 */ void* GetTimeOfLastChange /* function */;
  /* 0x0088 */ void* Inverse /* function */;
  /* 0x0090 */ void* CommonPrefixWith /* function */;
  /* 0x0098 */ void* RelativePathTo /* function */;
  /* 0x00a0 */ void* GetDisplayName /* function */;
  /* 0x00a8 */ void* ParseDisplayName /* function */;
  /* 0x00b0 */ void* IsSystemMoniker /* function */;
}; /* size: 0x00b8 */

typedef struct _OBJECT_TYPES_INFORMATION
{
  /* 0x0000 */ unsigned long NumberOfTypes;
} OBJECT_TYPES_INFORMATION, *POBJECT_TYPES_INFORMATION; /* size: 0x0004 */

typedef struct _FILE_REMOTE_PROTOCOL_INFO
{
  /* 0x0000 */ unsigned short StructureVersion;
  /* 0x0002 */ unsigned short StructureSize;
  /* 0x0004 */ unsigned long Protocol;
  /* 0x0008 */ unsigned short ProtocolMajorVersion;
  /* 0x000a */ unsigned short ProtocolMinorVersion;
  /* 0x000c */ unsigned short ProtocolRevision;
  /* 0x000e */ unsigned short Reserved;
  /* 0x0010 */ unsigned long Flags;
  struct
  {
    /* 0x0014 */ unsigned long Reserved[8];
  } /* size: 0x0020 */ GenericReserved;
  union
  {
    union
    {
      struct
      {
        struct
        {
          /* 0x0034 */ unsigned long Capabilities;
        } /* size: 0x0004 */ Server;
        struct
        {
          /* 0x0038 */ unsigned long Capabilities;
          /* 0x003c */ unsigned long CachingFlags;
        } /* size: 0x0008 */ Share;
      } /* size: 0x000c */ Smb2;
      /* 0x0034 */ unsigned long Reserved[16];
    }; /* size: 0x0040 */
  } /* size: 0x0040 */ ProtocolSpecific;
} FILE_REMOTE_PROTOCOL_INFO, *PFILE_REMOTE_PROTOCOL_INFO; /* size: 0x0074 */

class CDefObject::CAdvSinkImpl
{
}; /* size: 0x0008 */

typedef struct _STORAGE_IDLE_POWERUP_REASON
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ enum _STORAGE_POWERUP_REASON_TYPE PowerupReason;
} STORAGE_IDLE_POWERUP_REASON, *PSTORAGE_IDLE_POWERUP_REASON; /* size: 0x000c */

typedef struct _RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC
{
  /* 0x0000 */ unsigned __int64 Size;
  /* 0x0008 */ unsigned long Format;
  /* 0x000c */ long Padding_1390;
  /* 0x0010 */ struct _RTL_ACTIVATION_CONTEXT_STACK_FRAME Frame;
} RTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC, *PRTL_CALLER_ALLOCATED_ACTIVATION_CONTEXT_STACK_FRAME_BASIC; /* size: 0x0028 */

struct tagMCI_OVLY_RECT_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct tagRECT rc;
}; /* size: 0x0018 */

class CDefClassFactory
{
  /* 0x0000 */ long Padding_1391[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ struct _GUID m_clsid;
}; /* size: 0x0020 */

struct tagCONNECTDATA
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0008 */ unsigned long dwCookie;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

struct ITypeFactory
{
}; /* size: 0x0008 */

class Microsoft::WRL::Wrappers::Mutex
{
}; /* size: 0x0010 */

class Microsoft::WRL::Wrappers::Details::SyncLockWithStatusT<Microsoft::WRL::Wrappers::HandleTraits::MutexTraits>
{
  /* 0x0000 */ unsigned long status_;
  /* 0x0004 */ long Padding_1392;
  /* 0x0008 */ void* sync_;
}; /* size: 0x0010 */

typedef struct _GDI_NONREMOTE
{
  /* 0x0000 */ long fContext;
  /* 0x0004 */ long Padding_1393;
  /* 0x0008 */ union _GDI_NONREMOTE::__MIDL_IWinTypes_0002 u;
} GDI_NONREMOTE, *PGDI_NONREMOTE; /* size: 0x0010 */

struct tagWAVEINCAPS2A
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long dwFormats;
  /* 0x002c */ unsigned short wChannels;
  /* 0x002e */ unsigned short wReserved1;
  /* 0x0030 */ struct _GUID ManufacturerGuid;
  /* 0x0040 */ struct _GUID ProductGuid;
  /* 0x0050 */ struct _GUID NameGuid;
}; /* size: 0x0060 */

typedef struct _APPINFO_STARTUPINFO
{
  /* 0x0000 */ wchar_t* lpTitle;
  /* 0x0008 */ unsigned long dwX;
  /* 0x000c */ unsigned long dwY;
  /* 0x0010 */ unsigned long dwXSize;
  /* 0x0014 */ unsigned long dwYSize;
  /* 0x0018 */ unsigned long dwXCountChars;
  /* 0x001c */ unsigned long dwYCountChars;
  /* 0x0020 */ unsigned long dwFillAttribute;
  /* 0x0024 */ unsigned long dwFlags;
  /* 0x0028 */ unsigned short wShowWindow;
  /* 0x002a */ char Padding_1394[2];
  /* 0x002c */ struct tagPOINT ptMonitor;
  /* 0x0034 */ long __PADDING__[1];
} APPINFO_STARTUPINFO, *PAPPINFO_STARTUPINFO; /* size: 0x0038 */

typedef struct _PRINTER_INFO_3
{
  /* 0x0000 */ void* pSecurityDescriptor;
} PRINTER_INFO_3, *PPRINTER_INFO_3; /* size: 0x0008 */

struct IHttpNegotiate
{
}; /* size: 0x0008 */

typedef union __m64
{
  union
  {
    /* 0x0000 */ unsigned __int64 m64_u64;
    /* 0x0000 */ float m64_f32[2];
    /* 0x0000 */ char m64_i8[8];
    /* 0x0000 */ short m64_i16[4];
    /* 0x0000 */ int m64_i32[2];
    /* 0x0000 */ __int64 m64_i64;
    /* 0x0000 */ unsigned char m64_u8[8];
    /* 0x0000 */ unsigned short m64_u16[4];
    /* 0x0000 */ unsigned int m64_u32[2];
  }; /* size: 0x0008 */
} _m64, *P_m64; /* size: 0x0008 */

typedef struct __midl_frag56_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag56_t, *P_midl_frag56_t; /* size: 0x000c */

class CLimitedWritableStream::Commit::__l3::<lambda_EA8073E2406EBE81>;

typedef struct __midl_frag104_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag104_t, *P_midl_frag104_t; /* size: 0x0048 */

typedef struct __midl_frag809_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag809_t, *P_midl_frag809_t; /* size: 0x0020 */

class CRpcCall;

struct tagINTERFACEINFO
{
  /* 0x0000 */ struct IUnknown* pUnk;
  /* 0x0008 */ struct _GUID iid;
  /* 0x0018 */ unsigned short wMethod;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

typedef struct _CM_EISA_FUNCTION_INFORMATION
{
  /* 0x0000 */ unsigned long CompressedId;
  /* 0x0004 */ unsigned char IdSlotFlags1;
  /* 0x0005 */ unsigned char IdSlotFlags2;
  /* 0x0006 */ unsigned char MinorRevision;
  /* 0x0007 */ unsigned char MajorRevision;
  /* 0x0008 */ unsigned char Selections[26];
  /* 0x0022 */ unsigned char FunctionFlags;
  /* 0x0023 */ unsigned char TypeString[80];
  /* 0x0073 */ struct _EISA_MEMORY_CONFIGURATION EisaMemory[9];
  /* 0x00b2 */ struct _EISA_IRQ_CONFIGURATION EisaIrq[7];
  /* 0x00c0 */ struct _EISA_DMA_CONFIGURATION EisaDma[4];
  /* 0x00c8 */ struct _EISA_PORT_CONFIGURATION EisaPort[20];
  /* 0x0104 */ unsigned char InitializationData[60];
} CM_EISA_FUNCTION_INFORMATION, *PCM_EISA_FUNCTION_INFORMATION; /* size: 0x0140 */

class CReadOnlyStream::Clone::__l3::<lambda_F4743C547ADAAD6D>
{
  /* 0x0000 */ class CReadOnlyStream* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream>& spNewInner;
}; /* size: 0x0010 */

struct STblHdr
{
  /* 0x0000 */ unsigned long ulSize;
  /* 0x0004 */ unsigned long cbLargest;
  /* 0x0008 */ unsigned long OffsStart;
  /* 0x000c */ unsigned long OffsEnd;
}; /* size: 0x0010 */

struct Microsoft::WRL::Details::InterfaceTraits<Microsoft::WRL::Details::Nil>
{
  /* 0x0000 */ const unsigned long IidCount;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct _STORAGE_IDLE_POWER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  struct /* bitfield */
  {
    /* 0x0008 */ unsigned long WakeCapableHint : 1; /* bit position: 0 */
    /* 0x0008 */ unsigned long D3ColdSupported : 1; /* bit position: 1 */
    /* 0x0008 */ unsigned long Reserved : 30; /* bit position: 2 */
  }; /* bitfield */
  /* 0x000c */ unsigned long D3IdleTimeout;
} STORAGE_IDLE_POWER, *PSTORAGE_IDLE_POWER; /* size: 0x0010 */

struct IEnumCallback
{
}; /* size: 0x0008 */

struct IDispatchVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeInfoCount /* function */;
  /* 0x0020 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetIDsOfNames /* function */;
  /* 0x0030 */ void* Invoke /* function */;
}; /* size: 0x0038 */

typedef struct _SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS
{
  /* 0x0000 */ unsigned long QueryFlags;
  /* 0x0004 */ long Padding_1395;
  /* 0x0008 */ void* ProcessHandle;
} SYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS, *PSYSTEM_HOTPATCH_MODULE_QUERY_PARAMETERS; /* size: 0x0010 */

struct tagCANDIDATELIST
{
  /* 0x0000 */ unsigned long dwSize;
  /* 0x0004 */ unsigned long dwStyle;
  /* 0x0008 */ unsigned long dwCount;
  /* 0x000c */ unsigned long dwSelection;
  /* 0x0010 */ unsigned long dwPageStart;
  /* 0x0014 */ unsigned long dwPageSize;
  /* 0x0018 */ unsigned long dwOffset[1];
}; /* size: 0x001c */

class OLE_TYPEMGR;

struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IAgileObject,1,0>
{
}; /* size: 0x0001 */

typedef struct __midl_frag964_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag964_t, *P_midl_frag964_t; /* size: 0x0048 */

struct wavehdr_tag
{
  /* 0x0000 */ char* lpData;
  /* 0x0008 */ unsigned long dwBufferLength;
  /* 0x000c */ unsigned long dwBytesRecorded;
  /* 0x0010 */ unsigned __int64 dwUser;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ unsigned long dwLoops;
  /* 0x0020 */ struct wavehdr_tag* lpNext;
  /* 0x0028 */ unsigned __int64 reserved;
}; /* size: 0x0030 */

struct _BEM_REFERENCE;

typedef struct __midl_frag1819_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1819_t, *P_midl_frag1819_t; /* size: 0x0028 */

struct XLOCK_LEAF
{
}; /* size: 0x0030 */

struct IInternetProtocolRoot
{
}; /* size: 0x0008 */

struct tagMIDIINCAPSW
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long dwSupport;
}; /* size: 0x004c */

struct IRunningObjectTableVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Register /* function */;
  /* 0x0020 */ void* Revoke /* function */;
  /* 0x0028 */ void* IsRunning /* function */;
  /* 0x0030 */ void* GetObjectW /* function */;
  /* 0x0038 */ void* NoteChangeTime /* function */;
  /* 0x0040 */ void* GetTimeOfLastChange /* function */;
  /* 0x0048 */ void* EnumRunning /* function */;
}; /* size: 0x0050 */

struct DISPLAYCONFIG_TARGET_DEVICE_NAME
{
  /* 0x0000 */ struct DISPLAYCONFIG_DEVICE_INFO_HEADER header;
  /* 0x0014 */ struct DISPLAYCONFIG_TARGET_DEVICE_NAME_FLAGS flags;
  /* 0x0018 */ enum DISPLAYCONFIG_VIDEO_OUTPUT_TECHNOLOGY outputTechnology;
  /* 0x001c */ unsigned short edidManufactureId;
  /* 0x001e */ unsigned short edidProductCodeId;
  /* 0x0020 */ unsigned int connectorInstance;
  /* 0x0024 */ wchar_t monitorFriendlyDeviceName[64];
  /* 0x00a4 */ wchar_t monitorDevicePath[128];
}; /* size: 0x01a4 */

typedef struct _KEY_FLAGS_INFORMATION
{
  /* 0x0000 */ unsigned long Wow64Flags;
  /* 0x0004 */ unsigned long KeyFlags;
  /* 0x0008 */ unsigned long ControlFlags;
} KEY_FLAGS_INFORMATION, *PKEY_FLAGS_INFORMATION; /* size: 0x000c */

typedef struct __midl_frag453_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag453_t, *P_midl_frag453_t; /* size: 0x0058 */

typedef struct _NDR64_IID_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short Reserved;
  /* 0x0004 */ long Padding_1396;
  /* 0x0008 */ const void* IIDDescriptor;
} NDR64_IID_FORMAT, *PNDR64_IID_FORMAT; /* size: 0x0010 */

struct IPolicy
{
}; /* size: 0x0008 */

struct CDdeObject::CUnknownImpl
{
  /* 0x0000 */ long Padding_1397[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::COleObjectImpl
{
  /* 0x0000 */ long Padding_1398[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::CDataObjectImpl
{
  /* 0x0000 */ long Padding_1399[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::CPersistStgImpl
{
  /* 0x0000 */ long Padding_1400[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::COleItemContainerImpl
{
  /* 0x0000 */ long Padding_1401[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

struct CDdeObject::CRpcStubBufferImpl
{
  /* 0x0000 */ long Padding_1402[2];
  /* 0x0008 */ class CDdeObject* m_pDdeObject;
}; /* size: 0x0010 */

class CDdeConnectionTable
{
  /* 0x0000 */ void* m_h;
  /* 0x0008 */ unsigned long m_cinfo;
}; /* size: 0x0010 */

class CDdeObject
{
  /* 0x0000 */ int m_fDoingSendOnDataChange;
  /* 0x0004 */ unsigned long m_cRefCount;
  /* 0x0008 */ struct CDdeObject::CUnknownImpl m_Unknown;
  /* 0x0018 */ struct CDdeObject::COleObjectImpl m_Ole;
  /* 0x0028 */ struct CDdeObject::CDataObjectImpl m_Data;
  /* 0x0038 */ struct CDdeObject::CPersistStgImpl m_PersistStg;
  /* 0x0048 */ struct CDdeObject::CProxyManagerImpl m_ProxyMgr;
  /* 0x0058 */ struct CDdeObject::COleItemContainerImpl m_OleItemContainer;
  /* 0x0068 */ struct CDdeObject::CRpcStubBufferImpl m_RpcStubBuffer;
  /* 0x0078 */ unsigned long m_refs;
  /* 0x007c */ unsigned long m_ulObjType;
  /* 0x0080 */ struct _GUID m_clsid;
  /* 0x0090 */ unsigned short m_aClass;
  /* 0x0092 */ unsigned short m_aExeName;
  /* 0x0094 */ unsigned short m_aTopic;
  /* 0x0096 */ unsigned short m_aItem;
  /* 0x0098 */ int m_bRunning;
  /* 0x009c */ long Padding_1403;
  /* 0x00a0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00a8 */ struct IOleClientSite* m_pOleClientSite;
  /* 0x00b0 */ struct IStorage* m_pstg;
  /* 0x00b8 */ int m_bInitNew;
  /* 0x00bc */ int m_bOldSvr;
  /* 0x00c0 */ void* m_hNative;
  /* 0x00c8 */ void* m_hPict;
  /* 0x00d0 */ void* m_hExtra;
  /* 0x00d8 */ unsigned short m_cfPict;
  /* 0x00da */ unsigned short m_cfExtra;
  /* 0x00dc */ int m_fDidSendOnClose;
  /* 0x00e0 */ int m_fNoStdCloseDoc;
  /* 0x00e4 */ int m_fDidStdCloseDoc;
  /* 0x00e8 */ int m_fDidStdOpenDoc;
  /* 0x00ec */ int m_fDidGetObject;
  /* 0x00f0 */ int m_fDidLaunchApp;
  /* 0x00f4 */ int m_fUpdateOnSave;
  /* 0x00f8 */ int m_fGotCloseData;
  /* 0x00fc */ unsigned long m_cLocks;
  /* 0x0100 */ int m_fVisible;
  /* 0x0104 */ int m_fWasEverVisible;
  /* 0x0108 */ int m_fCalledOnShow;
  /* 0x010c */ unsigned long m_chk;
  /* 0x0110 */ struct tagDVTARGETDEVICE* m_ptd;
  /* 0x0118 */ int m_iAdvClose;
  /* 0x011c */ int m_iAdvSave;
  /* 0x0120 */ int m_iAdvChange;
  /* 0x0124 */ int m_fDidAdvNative;
  /* 0x0128 */ unsigned short m_wTerminate;
  /* 0x012a */ char Padding_1404[6];
  /* 0x0130 */ struct IDataAdviseHolder* m_pDataAdvHolder;
  /* 0x0138 */ struct IOleAdviseHolder* m_pOleAdvHolder;
  /* 0x0140 */ class CDdeConnectionTable m_ConnectionTable;
  /* 0x0150 */ class DDE_CHANNEL* m_pSysChannel;
  /* 0x0158 */ class DDE_CHANNEL* m_pDocChannel;
}; /* size: 0x0160 */

struct RPC_IMPORT_CONTEXT_P
{
  /* 0x0000 */ void* LookupContext;
  /* 0x0008 */ void* ProposedHandle;
  /* 0x0010 */ struct _RPC_BINDING_VECTOR* Bindings;
}; /* size: 0x0018 */

typedef struct _OBJECT_HANDLE_FLAG_INFORMATION
{
  /* 0x0000 */ unsigned char Inherit;
  /* 0x0001 */ unsigned char ProtectFromClose;
} OBJECT_HANDLE_FLAG_INFORMATION, *POBJECT_HANDLE_FLAG_INFORMATION; /* size: 0x0002 */

struct tagCOMPOSITIONFORM
{
  /* 0x0000 */ unsigned long dwStyle;
  /* 0x0004 */ struct tagPOINT ptCurrentPos;
  /* 0x000c */ struct tagRECT rcArea;
}; /* size: 0x001c */

class Microsoft::WRL::ComPtr<IDataObject>
{
  /* 0x0000 */ struct IDataObject* ptr_;
}; /* size: 0x0008 */

class CBrokeredClipDataObject
{
  union
  {
    /* 0x0000 */ unsigned short s_cfPreferredDropEffect;
    /* 0x0000 */ unsigned short s_cfPerformedDropEffect;
    /* 0x0000 */ unsigned short s_cfLogicalPerformedDropEffect;
    /* 0x0000 */ unsigned short s_cfPasteSucceeded;
  }; /* size: 0x0002 */
  /* 0x0002 */ char Padding_1405[14];
  /* 0x0010 */ long m_refs;
  /* 0x0014 */ long Padding_1406;
  /* 0x0018 */ void* m_hOwnerToken;
  /* 0x0020 */ unsigned long m_dwSourceProcessId;
  /* 0x0024 */ BOOL m_fOwnerIsPackaged;
  /* 0x0025 */ char Padding_1407[3];
  /* 0x0028 */ class Microsoft::WRL::ComPtr<IDataObject> m_pDataObject;
}; /* size: 0x0030 */

typedef struct __midl_frag23_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag23_t, *P_midl_frag23_t; /* size: 0x0048 */

typedef struct __midl_frag657_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag657_t, *P_midl_frag657_t; /* size: 0x0028 */

class CMessageCall
{
  /* 0x0000 */ enum MessageParamKind Kind;
  /* 0x0004 */ long Padding_1408[7];
  /* 0x0020 */ enum tagCALLCATEGORY _callcat;
  /* 0x0024 */ unsigned long _iFlags;
  /* 0x0028 */ long _hResult;
  /* 0x002c */ long Padding_1409;
  /* 0x0030 */ void* _hEvent;
  /* 0x0038 */ struct HWND__* _hWndCaller;
  /* 0x0040 */ struct _GUID _ipid;
  /* 0x0050 */ void* _hSxsActCtx;
  /* 0x0058 */ unsigned long _server_fault;
  /* 0x005c */ long Padding_1410;
  /* 0x0060 */ class CDestObject _destObj;
  /* 0x0070 */ void* _pHeader;
  /* 0x0078 */ class CChannelHandle* _pHandle;
  /* 0x0080 */ void* _hRpc;
  /* 0x0088 */ struct IUnknown* _pContext;
  /* 0x0090 */ unsigned long _dwCOMHeaderSize;
  /* 0x0094 */ long Padding_1411;
  /* 0x0098 */ struct tagRPCOLEMESSAGE message;
  /* 0x00e8 */ struct _GUID _iidWire;
  /* 0x00f8 */ struct _GUID _guidCausality;
  /* 0x0108 */ unsigned long _dwServerPid;
  /* 0x010c */ unsigned long _dwServerTid;
  /* 0x0110 */ unsigned long _iMethodWire;
  /* 0x0114 */ unsigned long _dwErrorBufSize;
  /* 0x0118 */ struct ASTAIncomingCallData* _pASTAIncomingCallData;
  /* 0x0120 */ unsigned long m_ulCancelTimeout;
  /* 0x0124 */ long Padding_1412;
  /* 0x0128 */ unsigned __int64 m_dwStartCount;
  /* 0x0130 */ class CCtxCall* m_pClientCtxCall;
  /* 0x0138 */ class CCtxCall* m_pServerCtxCall;
  struct /* bitfield */
  {
    /* 0x0140 */ BOOL _bCheckedClientIsAppContainer : 1; /* bit position: 0 */
    /* 0x0140 */ BOOL _bClientIsAppContainer : 1; /* bit position: 1 */
    /* 0x0140 */ BOOL _bServerIsAppContainer : 1; /* bit position: 2 */
    /* 0x0140 */ BOOL _bClientCalledGetBuffer : 1; /* bit position: 3 */
    /* 0x0140 */ BOOL _bClientCalledSendOrSendReceive : 1; /* bit position: 4 */
    /* 0x0140 */ BOOL _bClientCalledReceiveOrSendReceive : 1; /* bit position: 5 */
    /* 0x0140 */ BOOL _bClientReceiveOrSendReceiveCompletedSuccessfully : 1; /* bit position: 6 */
    /* 0x0140 */ BOOL _bSuppressClientStopTracing : 1; /* bit position: 7 */
  }; /* bitfield */
  /* 0x0141 */ char Padding_1413[3];
  /* 0x0144 */ unsigned int _uCallTraceId;
  /* 0x0148 */ HRESULT _hrClient;
  /* 0x014c */ enum SourceOfClientHResult _sourceOfHResult;
  /* 0x0150 */ enum OLETLS_REFUSE_RUNDOWN_REASON _savedRefuseRundownReasonInCall;
  /* 0x0154 */ enum OLETLS_REFUSE_RUNDOWN_REASON _savedRefuseRundownReasonOutCall;
  /* 0x0158 */ struct _LIST_ENTRY* _savedListRefuseRundownOidsInCall;
}; /* size: 0x0160 */

struct IPropertySetStorage
{
}; /* size: 0x0008 */

struct BITMAPV5HEADER
{
  /* 0x0000 */ unsigned long bV5Size;
  /* 0x0004 */ long bV5Width;
  /* 0x0008 */ long bV5Height;
  /* 0x000c */ unsigned short bV5Planes;
  /* 0x000e */ unsigned short bV5BitCount;
  /* 0x0010 */ unsigned long bV5Compression;
  /* 0x0014 */ unsigned long bV5SizeImage;
  /* 0x0018 */ long bV5XPelsPerMeter;
  /* 0x001c */ long bV5YPelsPerMeter;
  /* 0x0020 */ unsigned long bV5ClrUsed;
  /* 0x0024 */ unsigned long bV5ClrImportant;
  /* 0x0028 */ unsigned long bV5RedMask;
  /* 0x002c */ unsigned long bV5GreenMask;
  /* 0x0030 */ unsigned long bV5BlueMask;
  /* 0x0034 */ unsigned long bV5AlphaMask;
  /* 0x0038 */ unsigned long bV5CSType;
  /* 0x003c */ struct tagICEXYZTRIPLE bV5Endpoints;
  /* 0x0060 */ unsigned long bV5GammaRed;
  /* 0x0064 */ unsigned long bV5GammaGreen;
  /* 0x0068 */ unsigned long bV5GammaBlue;
  /* 0x006c */ unsigned long bV5Intent;
  /* 0x0070 */ unsigned long bV5ProfileData;
  /* 0x0074 */ unsigned long bV5ProfileSize;
  /* 0x0078 */ unsigned long bV5Reserved;
}; /* size: 0x007c */

class RunSyncOnMTAThread::__l6::<lambda_202A87E349F7136C>;

typedef struct __midl_frag381_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag381_t, *P_midl_frag381_t; /* size: 0x0050 */

typedef struct _TRACE_GUID_REGISTRATION
{
  /* 0x0000 */ const struct _GUID* Guid;
  /* 0x0008 */ void* RegHandle;
} TRACE_GUID_REGISTRATION, *PTRACE_GUID_REGISTRATION; /* size: 0x0010 */

struct IPipeDouble
{
}; /* size: 0x0008 */

typedef struct _SET_DISK_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned char Persist;
  /* 0x0005 */ unsigned char Reserved1[3];
  /* 0x0008 */ unsigned __int64 Attributes;
  /* 0x0010 */ unsigned __int64 AttributesMask;
  /* 0x0018 */ unsigned long Reserved2[4];
} SET_DISK_ATTRIBUTES, *PSET_DISK_ATTRIBUTES; /* size: 0x0028 */

struct tagOutgoingCallData
{
  /* 0x0000 */ unsigned long dwServerPID;
  /* 0x0004 */ unsigned long dwServerTID;
}; /* size: 0x0008 */

struct tagIncomingCallData
{
  /* 0x0000 */ unsigned long dwClientPID;
}; /* size: 0x0004 */

struct tagSOleTlsData
{
  /* 0x0000 */ void* pvThreadBase;
  /* 0x0008 */ class CSmAllocator* pSmAllocator;
  /* 0x0010 */ unsigned long dwApartmentID;
  /* 0x0014 */ unsigned long dwFlags;
  /* 0x0018 */ long TlsMapIndex;
  /* 0x001c */ long Padding_1414;
  /* 0x0020 */ void** ppTlsSlot;
  /* 0x0028 */ unsigned long cComInits;
  /* 0x002c */ unsigned long cOleInits;
  /* 0x0030 */ unsigned long cCalls;
  /* 0x0034 */ long Padding_1415;
  /* 0x0038 */ class CMessageCall* pCallInfo;
  /* 0x0040 */ class CAsyncCall* pFreeAsyncCall;
  /* 0x0048 */ class CClientCall* pFreeClientCall;
  /* 0x0050 */ class CObjServer* pObjServer;
  /* 0x0058 */ unsigned long dwTIDCaller;
  /* 0x005c */ long Padding_1416;
  /* 0x0060 */ void* pCurrentCtxForNefariousReaders;
  /* 0x0068 */ class CObjectContext* pCurrentContext;
  /* 0x0070 */ class CObjectContext* pEmptyCtx;
  /* 0x0078 */ unsigned __int64 ContextId;
  /* 0x0080 */ class CComApartment* pNativeApt;
  /* 0x0088 */ struct IUnknown* pCallContext;
  /* 0x0090 */ class CCtxCall* pCtxCall;
  /* 0x0098 */ class CPolicySet* pPS;
  /* 0x00a0 */ void* pvPendingCallsFront;
  /* 0x00a8 */ void* pvPendingCallsBack;
  /* 0x00b0 */ class CAptCallCtrl* pCallCtrl;
  /* 0x00b8 */ class CSrvCallState* pTopSCS;
  /* 0x00c0 */ struct IMessageFilter* pMsgFilter;
  /* 0x00c8 */ struct HWND__* hwndSTA;
  /* 0x00d0 */ long cORPCNestingLevel;
  /* 0x00d4 */ unsigned long cDebugData;
  /* 0x00d8 */ struct _GUID LogicalThreadId;
  /* 0x00e8 */ void* hThread;
  /* 0x00f0 */ void* hRevert;
  /* 0x00f8 */ struct IUnknown* pAsyncRelease;
  /* 0x0100 */ struct HWND__* hwndDdeServer;
  /* 0x0108 */ struct HWND__* hwndDdeClient;
  /* 0x0110 */ unsigned long cServeDdeObjects;
  /* 0x0114 */ long Padding_1417;
  /* 0x0118 */ void* pSTALSvrsFront;
  /* 0x0120 */ struct HWND__* hwndClip;
  /* 0x0128 */ struct IDataObject* pDataObjClip;
  /* 0x0130 */ unsigned long dwClipSeqNum;
  /* 0x0134 */ unsigned long fIsClipWrapper;
  /* 0x0138 */ struct IUnknown* punkState;
  /* 0x0140 */ unsigned long cCallCancellation;
  /* 0x0144 */ unsigned long cAsyncSends;
  /* 0x0148 */ class CAsyncCall* pAsyncCallList;
  /* 0x0150 */ class CSurrogatedObjectList* pSurrogateList;
  /* 0x0158 */ void* pRWLockTlsEntry;
  /* 0x0160 */ struct tagCallEntry CallEntry;
  /* 0x0170 */ struct tagContextStackNode* pContextStack;
  /* 0x0178 */ struct tagInitializeSpyNode* pFirstSpyReg;
  /* 0x0180 */ struct tagInitializeSpyNode* pFirstFreeSpyReg;
  /* 0x0188 */ class CVerifierTlsData* pVerifierData;
  /* 0x0190 */ unsigned long dwMaxSpy;
  /* 0x0194 */ unsigned char cCustomMarshallerRecursion;
  /* 0x0195 */ char Padding_1418[3];
  /* 0x0198 */ void* pDragCursors;
  /* 0x01a0 */ struct IUnknown* punkError;
  /* 0x01a8 */ unsigned long cbErrorData;
  /* 0x01ac */ struct tagOutgoingCallData outgoingCallData;
  /* 0x01b4 */ struct tagIncomingCallData incomingCallData;
  /* 0x01b8 */ struct tagOutgoingActivationData outgoingActivationData;
  /* 0x01c8 */ unsigned long cReentrancyFromUserAPC;
  /* 0x01cc */ long Padding_1419;
  /* 0x01d0 */ class ASTAWaitContext* pASTAWaitContext;
  /* 0x01d8 */ volatile unsigned long dwCrossThreadFlags;
  /* 0x01dc */ unsigned long dwNestedRemRelease;
  /* 0x01e0 */ unsigned long cIncomingTouchedASTACalls;
  /* 0x01e4 */ long Padding_1420;
  /* 0x01e8 */ class PushLogicalThreadId* pTopPushedLogicalThreadId;
  /* 0x01f0 */ unsigned long iXslockOwnerTableHint;
  /* 0x01f4 */ enum OLETLS_REFUSE_RUNDOWN_REASON refuseRundownReason;
  /* 0x01f8 */ struct _LIST_ENTRY listRefuseRundownOids;
  /* 0x0208 */ struct IUnknown* pClipboardBroker;
}; /* size: 0x0210 */

class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>
{
  /* 0x0000 */ long Padding_1421[2];
  /* 0x0008 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
  /* 0x0010 */ class CLinkable* m_pLinkable;
}; /* size: 0x0018 */

class MAP<XSLOCK,MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>::iterator
{
  /* 0x0000 */ class EnumMap<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow> m_enum;
  /* 0x0018 */ int m_fDone;
  /* 0x001c */ long Padding_1422;
  /* 0x0020 */ class MAP_KEY_GUID* m_pkey;
  /* 0x0028 */ struct INTERFACE_HELPER_CLSID** m_pvalue;
  /* 0x0030 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>* m_pmap;
}; /* size: 0x0038 */

typedef struct __midl_frag286_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag286_t, *P_midl_frag286_t; /* size: 0x0040 */

class CPerContext
{
  /* 0x0000 */ long Padding_1423[4];
  /* 0x0010 */ struct ILockBytes* _plkbBase;
  /* 0x0018 */ struct CFileStream* _pfstDirty;
  /* 0x0020 */ struct ILockBytes* _plkbOriginal;
  /* 0x0028 */ unsigned long _ulOpenLock;
  /* 0x002c */ long Padding_1424;
  /* 0x0030 */ class CGlobalContext* _pgc;
  /* 0x0038 */ long _cReferences;
  /* 0x003c */ long Padding_1425;
  /* 0x0040 */ struct IMalloc* const _pMalloc;
  /* 0x0048 */ struct IFillInfo* _pfi;
  /* 0x0050 */ void* _hNotificationEvent;
  /* 0x0058 */ class CSharedMemoryBlock* _psmb;
  /* 0x0060 */ unsigned char* _pbBase;
  /* 0x0068 */ unsigned long _ulHeapName;
  /* 0x006c */ long Padding_1426;
  /* 0x0070 */ class CDfMutex _dmtx;
  /* 0x0080 */ unsigned long _cRecursion;
}; /* size: 0x0088 */

struct CFileStream
{
  /* 0x0000 */ long Padding_1427[12];
  /* 0x0030 */ class CGlobalFileStream* _pgfst;
  /* 0x0038 */ class CPerContext* _ppc;
  /* 0x0040 */ void* _hFile;
  /* 0x0048 */ void* _hPreDuped;
  /* 0x0050 */ unsigned long _sig;
  /* 0x0054 */ long _cReferences;
  /* 0x0058 */ struct IMalloc* const _pMalloc;
  /* 0x0060 */ void* _hMapObject;
  /* 0x0068 */ unsigned char* _pbBaseAddr;
  /* 0x0070 */ unsigned long _cbViewSize;
  /* 0x0074 */ long __PADDING__[1];
}; /* size: 0x0078 */

union tagBINDPTR
{
  union
  {
    /* 0x0000 */ struct tagFUNCDESC* lpfuncdesc;
    /* 0x0000 */ struct tagVARDESC* lpvardesc;
    /* 0x0000 */ struct ITypeComp* lptcomp;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class MultiplicationHelper<unsigned long,unsigned long,3>
{
}; /* size: 0x0001 */

struct _DPA;

typedef struct __midl_frag241_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag241_t, *P_midl_frag241_t; /* size: 0x0020 */

typedef struct __midl_frag302_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag302_t, *P_midl_frag302_t; /* size: 0x0040 */

typedef struct _MonikerReadStruct
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_ole1;
  /* 0x0014 */ unsigned long m_cbExtents;
} MonikerReadStruct, *PMonikerReadStruct; /* size: 0x0018 */

class CChannelHandle
{
  /* 0x0000 */ void* _hRpc;
  /* 0x0008 */ unsigned long _lAuthn;
  /* 0x000c */ unsigned long _lImp;
  /* 0x0010 */ void* _hToken;
  /* 0x0018 */ long _eState;
  /* 0x001c */ int _fFirstCall;
  /* 0x0020 */ unsigned long _cRef;
  /* 0x0024 */ long Padding_1428;
  /* 0x0028 */ struct _SCHANNEL_CRED _sCred;
  /* 0x0078 */ const struct _CERT_CONTEXT* _pCert;
}; /* size: 0x0080 */

typedef struct __midl_frag1298_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1298_t, *P_midl_frag1298_t; /* size: 0x0038 */

typedef struct _prop_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[25];
  /* 0x001d */ char __PADDING__[3];
} prop_MIDL_EXPR_FORMAT_STRING, *Pprop_MIDL_EXPR_FORMAT_STRING; /* size: 0x0020 */

typedef struct _mpProp
{
  /* 0x0000 */ int dispid;
  /* 0x0004 */ long Padding_1429;
  /* 0x0008 */ const wchar_t* szName;
} mpProp, *PmpProp; /* size: 0x0010 */

typedef struct __midl_frag40_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag40_t, *P_midl_frag40_t; /* size: 0x0020 */

typedef struct __midl_frag13_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag13_t, *P_midl_frag13_t; /* size: 0x000c */

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>
{
}; /* size: 0x0020 */

typedef struct _GET_DISK_ATTRIBUTES
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Reserved1;
  /* 0x0008 */ unsigned __int64 Attributes;
} GET_DISK_ATTRIBUTES, *PGET_DISK_ATTRIBUTES; /* size: 0x0010 */

typedef struct __midl_frag403_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag403_t, *P_midl_frag403_t; /* size: 0x0028 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IEnumFORMATETC>
{
}; /* size: 0x0008 */

class CGdiCustodian
{
  /* 0x0000 */ long Padding_1430[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_1431;
  /* 0x0010 */ void* ma_hgdiClxn[3];
}; /* size: 0x0028 */

typedef struct _PERSISTENT_RESERVE_COMMAND
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  union
  {
    struct
    {
      struct /* bitfield */
      {
        /* 0x0008 */ unsigned char ServiceAction : 5; /* bit position: 0 */
        /* 0x0008 */ unsigned char Reserved1 : 3; /* bit position: 5 */
      }; /* bitfield */
      /* 0x0001 */ char Padding_1432;
      /* 0x000a */ unsigned short AllocationLength;
    } /* size: 0x0004 */ PR_IN;
    struct
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0008 */ unsigned char ServiceAction : 5; /* bit position: 0 */
          /* 0x0008 */ unsigned char Reserved1 : 3; /* bit position: 5 */
        }; /* bitfield */
        struct /* bitfield */
        {
          /* 0x0009 */ unsigned char Type : 4; /* bit position: 0 */
          /* 0x0009 */ unsigned char Scope : 4; /* bit position: 4 */
        }; /* bitfield */
        /* 0x000a */ unsigned char* ParameterList /* zero-length array */;
      } /* size: 0x0002 */ PR_OUT;
      /* 0x000a */ char __PADDING__[2];
    }; /* size: 0x0004 */
  }; /* size: 0x0004 */
} PERSISTENT_RESERVE_COMMAND, *PPERSISTENT_RESERVE_COMMAND; /* size: 0x000c */

class CNtfsEnumSTATSTG
{
  /* 0x0000 */ long Padding_1433[2];
  /* 0x0008 */ unsigned long _ulSig;
  /* 0x000c */ long _cRefs;
  /* 0x0010 */ unsigned long _istatNextToRead;
  /* 0x0014 */ long Padding_1434;
  /* 0x0018 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0020 */ class CNtfsSTATSTGArray* _pstatstgarray;
}; /* size: 0x0028 */

class CDualStringArray
{
  /* 0x0000 */ struct tagDUALSTRINGARRAY* _pdsa;
  /* 0x0008 */ long _cRef;
}; /* size: 0x0010 */

typedef struct _tagSCtxListIndex
{
  /* 0x0000 */ int idx;
  /* 0x0004 */ int next;
  /* 0x0008 */ int prev;
} tagSCtxListIndex, *PtagSCtxListIndex; /* size: 0x000c */

typedef struct _KUSER_SHARED_DATA
{
  /* 0x0000 */ unsigned long TickCountLowDeprecated;
  /* 0x0004 */ unsigned long TickCountMultiplier;
  /* 0x0008 */ volatile struct _KSYSTEM_TIME InterruptTime;
  /* 0x0014 */ volatile struct _KSYSTEM_TIME SystemTime;
  /* 0x0020 */ volatile struct _KSYSTEM_TIME TimeZoneBias;
  /* 0x002c */ unsigned short ImageNumberLow;
  /* 0x002e */ unsigned short ImageNumberHigh;
  /* 0x0030 */ wchar_t NtSystemRoot[260];
  /* 0x0238 */ unsigned long MaxStackTraceDepth;
  /* 0x023c */ unsigned long CryptoExponent;
  /* 0x0240 */ unsigned long TimeZoneId;
  /* 0x0244 */ unsigned long LargePageMinimum;
  /* 0x0248 */ unsigned long AitSamplingValue;
  /* 0x024c */ unsigned long AppCompatFlag;
  /* 0x0250 */ unsigned __int64 RNGSeedVersion;
  /* 0x0258 */ unsigned long GlobalValidationRunlevel;
  /* 0x025c */ volatile long TimeZoneBiasStamp;
  /* 0x0260 */ unsigned long Reserved2;
  /* 0x0264 */ enum _NT_PRODUCT_TYPE NtProductType;
  /* 0x0268 */ unsigned char ProductTypeIsValid;
  /* 0x0269 */ unsigned char Reserved0[1];
  /* 0x026a */ unsigned short NativeProcessorArchitecture;
  /* 0x026c */ unsigned long NtMajorVersion;
  /* 0x0270 */ unsigned long NtMinorVersion;
  /* 0x0274 */ unsigned char ProcessorFeatures[64];
  /* 0x02b4 */ unsigned long Reserved1;
  /* 0x02b8 */ unsigned long Reserved3;
  /* 0x02bc */ volatile unsigned long TimeSlip;
  /* 0x02c0 */ enum _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture;
  /* 0x02c4 */ unsigned long AltArchitecturePad[1];
  /* 0x02c8 */ union _LARGE_INTEGER SystemExpirationDate;
  /* 0x02d0 */ unsigned long SuiteMask;
  /* 0x02d4 */ unsigned char KdDebuggerEnabled;
  union
  {
    /* 0x02d5 */ unsigned char MitigationPolicies;
    struct /* bitfield */
    {
      /* 0x02d5 */ unsigned char NXSupportPolicy : 2; /* bit position: 0 */
      /* 0x02d5 */ unsigned char SEHValidationPolicy : 2; /* bit position: 2 */
      /* 0x02d5 */ unsigned char CurDirDevicesSkippedForDlls : 2; /* bit position: 4 */
      /* 0x02d5 */ unsigned char Reserved : 2; /* bit position: 6 */
    }; /* bitfield */
  }; /* size: 0x0001 */
  /* 0x02d6 */ unsigned char Reserved6[2];
  /* 0x02d8 */ volatile unsigned long ActiveConsoleId;
  /* 0x02dc */ volatile unsigned long DismountCount;
  /* 0x02e0 */ unsigned long ComPlusPackage;
  /* 0x02e4 */ unsigned long LastSystemRITEventTickCount;
  /* 0x02e8 */ unsigned long NumberOfPhysicalPages;
  /* 0x02ec */ unsigned char SafeBootMode;
  /* 0x02ed */ unsigned char Reserved12[3];
  union
  {
    /* 0x02f0 */ unsigned long SharedDataFlags;
    struct /* bitfield */
    {
      /* 0x02f0 */ unsigned long DbgErrorPortPresent : 1; /* bit position: 0 */
      /* 0x02f0 */ unsigned long DbgElevationEnabled : 1; /* bit position: 1 */
      /* 0x02f0 */ unsigned long DbgVirtEnabled : 1; /* bit position: 2 */
      /* 0x02f0 */ unsigned long DbgInstallerDetectEnabled : 1; /* bit position: 3 */
      /* 0x02f0 */ unsigned long DbgLkgEnabled : 1; /* bit position: 4 */
      /* 0x02f0 */ unsigned long DbgDynProcessorEnabled : 1; /* bit position: 5 */
      /* 0x02f0 */ unsigned long DbgConsoleBrokerEnabled : 1; /* bit position: 6 */
      /* 0x02f0 */ unsigned long DbgSecureBootEnabled : 1; /* bit position: 7 */
      /* 0x02f0 */ unsigned long SpareBits : 24; /* bit position: 8 */
    }; /* bitfield */
  }; /* size: 0x0004 */
  /* 0x02f4 */ unsigned long DataFlagsPad[1];
  /* 0x02f8 */ unsigned __int64 TestRetInstruction;
  /* 0x0300 */ __int64 QpcFrequency;
  /* 0x0308 */ unsigned __int64 SystemCallPad[3];
  union
  {
    /* 0x0320 */ volatile struct _KSYSTEM_TIME TickCount;
    /* 0x0320 */ volatile unsigned __int64 TickCountQuad;
    /* 0x0320 */ unsigned long ReservedTickCountOverlay[3];
  }; /* size: 0x000c */
  /* 0x032c */ unsigned long TickCountPad[1];
  /* 0x0330 */ unsigned long Cookie;
  /* 0x0334 */ unsigned long CookiePad[1];
  /* 0x0338 */ __int64 ConsoleSessionForegroundProcessId;
  /* 0x0340 */ volatile unsigned __int64 TimeUpdateSequence;
  /* 0x0348 */ unsigned __int64 BaselineSystemTimeQpc;
  /* 0x0350 */ unsigned __int64 BaselineInterruptTimeQpc;
  /* 0x0358 */ unsigned __int64 QpcSystemTimeIncrement;
  /* 0x0360 */ unsigned __int64 QpcInterruptTimeIncrement;
  /* 0x0368 */ unsigned long QpcSystemTimeIncrement32;
  /* 0x036c */ unsigned long QpcInterruptTimeIncrement32;
  /* 0x0370 */ unsigned char QpcSystemTimeIncrementShift;
  /* 0x0371 */ unsigned char QpcInterruptTimeIncrementShift;
  /* 0x0372 */ unsigned char Reserved8[14];
  /* 0x0380 */ unsigned short UserModeGlobalLogger[16];
  /* 0x03a0 */ unsigned long ImageFileExecutionOptions;
  /* 0x03a4 */ unsigned long LangGenerationCount;
  /* 0x03a8 */ unsigned __int64 Reserved4;
  /* 0x03b0 */ volatile unsigned __int64 InterruptTimeBias;
  /* 0x03b8 */ volatile unsigned __int64 TscQpcBias;
  /* 0x03c0 */ volatile unsigned long ActiveProcessorCount;
  /* 0x03c4 */ volatile unsigned char ActiveGroupCount;
  /* 0x03c5 */ unsigned char Reserved9;
  union
  {
    /* 0x03c6 */ unsigned short TscQpcData;
    struct
    {
      /* 0x03c6 */ volatile unsigned char TscQpcEnabled;
      /* 0x03c7 */ unsigned char TscQpcShift;
    }; /* size: 0x0002 */
  }; /* size: 0x0002 */
  /* 0x03c8 */ union _LARGE_INTEGER TimeZoneBiasEffectiveStart;
  /* 0x03d0 */ union _LARGE_INTEGER TimeZoneBiasEffectiveEnd;
  /* 0x03d8 */ struct _XSTATE_CONFIGURATION XState;
} KUSER_SHARED_DATA, *PKUSER_SHARED_DATA; /* size: 0x05f0 */

struct CClassCache::CFinishComposite::node
{
  /* 0x0000 */ struct CClassCache::CFinishComposite::node* _pNext;
  /* 0x0008 */ struct CClassCache::CFinishComposite::node* _pPrev;
  /* 0x0010 */ class IFinish* _pIF;
}; /* size: 0x0018 */

class CCtxConnectionManager;

typedef struct _OLETARGETDEVICE
{
  /* 0x0000 */ unsigned short otdDeviceNameOffset;
  /* 0x0002 */ unsigned short otdDriverNameOffset;
  /* 0x0004 */ unsigned short otdPortNameOffset;
  /* 0x0006 */ unsigned short otdExtDevmodeOffset;
  /* 0x0008 */ unsigned short otdExtDevmodeSize;
  /* 0x000a */ unsigned short otdEnvironmentOffset;
  /* 0x000c */ unsigned short otdEnvironmentSize;
  /* 0x000e */ unsigned char otdData[1];
  /* 0x000f */ char __PADDING__[1];
} OLETARGETDEVICE, *POLETARGETDEVICE; /* size: 0x0010 */

class CPrivAlloc
{
}; /* size: 0x0001 */

class SafeIntInternal::SafeIntExceptionHandler<SafeIntException>
{
}; /* size: 0x0001 */

struct ISystemActivator
{
}; /* size: 0x0008 */

typedef struct __midl_frag283_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag283_t, *P_midl_frag283_t; /* size: 0x0020 */

struct IMessageFilter
{
}; /* size: 0x0008 */

class CTContainer_PolicyCoTaskMem
{
}; /* size: 0x0001 */

class CDwordBag
{
  /* 0x0000 */ long Padding_1435[6];
  /* 0x0018 */ unsigned long _dwSlotsUsed;
}; /* size: 0x0020 */

class CPointerMoniker
{
  /* 0x0000 */ long Padding_1436[12];
  /* 0x0030 */ struct IUnknown* m_pUnk;
}; /* size: 0x0038 */

class CAutoHandle_Policy<HMENU__ *>
{
}; /* size: 0x0001 */

struct tagFINDREPLACEA
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1437;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_1438;
  /* 0x0020 */ char* lpstrFindWhat;
  /* 0x0028 */ char* lpstrReplaceWith;
  /* 0x0030 */ unsigned short wFindWhatLen;
  /* 0x0032 */ unsigned short wReplaceWithLen;
  /* 0x0034 */ long Padding_1439;
  /* 0x0038 */ __int64 lCustData;
  /* 0x0040 */ void* lpfnHook /* function */;
  /* 0x0048 */ const char* lpTemplateName;
}; /* size: 0x0050 */

typedef struct __midl_frag206_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag206_t, *P_midl_frag206_t; /* size: 0x0020 */

typedef struct _TRANSMIT_FILE_BUFFERS
{
  /* 0x0000 */ void* Head;
  /* 0x0008 */ unsigned long HeadLength;
  /* 0x000c */ long Padding_1440;
  /* 0x0010 */ void* Tail;
  /* 0x0018 */ unsigned long TailLength;
  /* 0x001c */ long __PADDING__[1];
} TRANSMIT_FILE_BUFFERS, *PTRANSMIT_FILE_BUFFERS; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IStream>
{
  /* 0x0000 */ struct IStream* ptr_;
}; /* size: 0x0008 */

struct IEnumGUID
{
}; /* size: 0x0008 */

struct CRIFTable::tagRIFEntry
{
  /* 0x0000 */ struct SUUIDHashNode HashNode;
  /* 0x0020 */ struct _GUID iidCounterpart;
  /* 0x0030 */ struct _GUID psclsid;
  /* 0x0040 */ unsigned long dwFlags;
  /* 0x0044 */ long Padding_1441;
  /* 0x0048 */ struct CRIFTable::tagRIFEntry* pBase;
  /* 0x0050 */ unsigned long cSrvRefs;
  /* 0x0054 */ enum CRIFTable::RegistrationState srvRegistrationState;
  /* 0x0058 */ class COleConditionVariable ConditionSrvInterface;
  /* 0x0060 */ struct _RPC_SERVER_INTERFACE* pSrvInterface;
  /* 0x0068 */ unsigned long cCliRefs;
  /* 0x006c */ long Padding_1442;
  /* 0x0070 */ struct _RPC_CLIENT_INTERFACE* pCliInterface;
}; /* size: 0x0078 */

typedef struct __midl_frag46_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag46_t, *P_midl_frag46_t; /* size: 0x000c */

class Microsoft::WRL::Details::RemoveIUnknownBase<IWeakReference>;

struct tagPROPBAG2
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ unsigned short vt;
  /* 0x0006 */ unsigned short cfType;
  /* 0x0008 */ unsigned long dwHint;
  /* 0x000c */ long Padding_1443;
  /* 0x0010 */ wchar_t* pstrName;
  /* 0x0018 */ struct _GUID clsid;
}; /* size: 0x0028 */

struct tagWAVEOUTCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long dwFormats;
  /* 0x004c */ unsigned short wChannels;
  /* 0x004e */ unsigned short wReserved1;
  /* 0x0050 */ unsigned long dwSupport;
  /* 0x0054 */ struct _GUID ManufacturerGuid;
  /* 0x0064 */ struct _GUID ProductGuid;
  /* 0x0074 */ struct _GUID NameGuid;
}; /* size: 0x0084 */

class CArray<CPageHolder *,CPageHolder * &>
{
  /* 0x0000 */ class CPageHolder** m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

typedef struct _DEVICE_TRIM_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char TrimEnabled;
  /* 0x0009 */ char __PADDING__[3];
} DEVICE_TRIM_DESCRIPTOR, *PDEVICE_TRIM_DESCRIPTOR; /* size: 0x000c */

typedef struct __midl_frag101_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag101_t, *P_midl_frag101_t; /* size: 0x0050 */

typedef struct _CRYPT_PROVIDER_REGDEFUSAGE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1444;
  /* 0x0008 */ struct _GUID* pgActionID;
  /* 0x0010 */ wchar_t* pwszDllName;
  /* 0x0018 */ char* pwszLoadCallbackDataFunctionName;
  /* 0x0020 */ char* pwszFreeCallbackDataFunctionName;
} CRYPT_PROVIDER_REGDEFUSAGE, *PCRYPT_PROVIDER_REGDEFUSAGE; /* size: 0x0028 */

class CSCMergedEnum<IEnumCATEGORYINFO,tagCATEGORYINFO>
{
  /* 0x0000 */ long Padding_1445[2];
  /* 0x0008 */ struct IEnumCATEGORYINFO** m_pcsEnum;
  /* 0x0010 */ unsigned long m_cTotalEnum;
  /* 0x0014 */ unsigned long m_dwRefCount;
  /* 0x0018 */ unsigned long m_CurrentEnum;
  /* 0x001c */ struct _GUID m_myiid;
}; /* size: 0x0030 */

typedef struct __midl_frag315_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag315_t, *P_midl_frag315_t; /* size: 0x0010 */

struct tagQACONTROL
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ unsigned long dwMiscStatus;
  /* 0x0008 */ unsigned long dwViewStatus;
  /* 0x000c */ unsigned long dwEventCookie;
  /* 0x0010 */ unsigned long dwPropNotifyCookie;
  /* 0x0014 */ unsigned long dwPointerActivationPolicy;
}; /* size: 0x0018 */

struct WINTRUST_BLOB_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ long Padding_1446;
  /* 0x0018 */ const wchar_t* pcwszDisplayName;
  /* 0x0020 */ unsigned long cbMemObject;
  /* 0x0024 */ long Padding_1447;
  /* 0x0028 */ unsigned char* pbMemObject;
  /* 0x0030 */ unsigned long cbMemSignedMsg;
  /* 0x0034 */ long Padding_1448;
  /* 0x0038 */ unsigned char* pbMemSignedMsg;
}; /* size: 0x0040 */

typedef struct __midl_frag1690_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1690_t, *P_midl_frag1690_t; /* size: 0x0078 */

struct tagMIXERCONTROLDETAILS_LISTTEXTA
{
  /* 0x0000 */ unsigned long dwParam1;
  /* 0x0004 */ unsigned long dwParam2;
  /* 0x0008 */ char szName[64];
}; /* size: 0x0048 */

struct WINTRUST_FILE_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1449;
  /* 0x0008 */ const wchar_t* pcwszFilePath;
  /* 0x0010 */ void* hFile;
  /* 0x0018 */ struct _GUID* pgKnownSubject;
}; /* size: 0x0020 */

struct WINTRUST_CATALOG_INFO_
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwCatalogVersion;
  /* 0x0008 */ const wchar_t* pcwszCatalogFilePath;
  /* 0x0010 */ const wchar_t* pcwszMemberTag;
  /* 0x0018 */ const wchar_t* pcwszMemberFilePath;
  /* 0x0020 */ void* hMemberFile;
  /* 0x0028 */ unsigned char* pbCalculatedFileHash;
  /* 0x0030 */ unsigned long cbCalculatedFileHash;
  /* 0x0034 */ long Padding_1450;
  /* 0x0038 */ const struct _CTL_CONTEXT* pcCatalogContext;
  /* 0x0040 */ void* hCatAdmin;
}; /* size: 0x0048 */

typedef struct __midl_frag415_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag415_t, *P_midl_frag415_t; /* size: 0x0038 */

typedef struct _SESSION_BUFFER
{
  /* 0x0000 */ unsigned char lsn;
  /* 0x0001 */ unsigned char state;
  /* 0x0002 */ unsigned char local_name[16];
  /* 0x0012 */ unsigned char remote_name[16];
  /* 0x0022 */ unsigned char rcvs_outstanding;
  /* 0x0023 */ unsigned char sends_outstanding;
} SESSION_BUFFER, *PSESSION_BUFFER; /* size: 0x0024 */

typedef struct _CRYPT_PROVIDER_FUNCTIONS
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1451;
  /* 0x0008 */ void* pfnAlloc /* function */;
  /* 0x0010 */ void* pfnFree /* function */;
  /* 0x0018 */ void* pfnAddStore2Chain /* function */;
  /* 0x0020 */ void* pfnAddSgnr2Chain /* function */;
  /* 0x0028 */ void* pfnAddCert2Chain /* function */;
  /* 0x0030 */ void* pfnAddPrivData2Chain /* function */;
  /* 0x0038 */ void* pfnInitialize /* function */;
  /* 0x0040 */ void* pfnObjectTrust /* function */;
  /* 0x0048 */ void* pfnSignatureTrust /* function */;
  /* 0x0050 */ void* pfnCertificateTrust /* function */;
  /* 0x0058 */ void* pfnFinalPolicy /* function */;
  /* 0x0060 */ void* pfnCertCheckPolicy /* function */;
  /* 0x0068 */ void* pfnTestFinalPolicy /* function */;
  /* 0x0070 */ struct _CRYPT_PROVUI_FUNCS* psUIpfns;
  /* 0x0078 */ void* pfnCleanupPolicy /* function */;
} CRYPT_PROVIDER_FUNCTIONS, *PCRYPT_PROVIDER_FUNCTIONS; /* size: 0x0080 */

typedef struct __midl_frag394_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag394_t, *P_midl_frag394_t; /* size: 0x0048 */

typedef struct __midl_frag210_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag210_t, *P_midl_frag210_t; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IUnwrappableDataObject>* ptr_;
}; /* size: 0x0008 */

typedef struct __midl_frag200_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag200_t, *P_midl_frag200_t; /* size: 0x0040 */

typedef struct _CRYPT_PROVIDER_SGNR
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _FILETIME sftVerifyAsOf;
  /* 0x000c */ unsigned long csCertChain;
  /* 0x0010 */ struct _CRYPT_PROVIDER_CERT* pasCertChain;
  /* 0x0018 */ unsigned long dwSignerType;
  /* 0x001c */ long Padding_1452;
  /* 0x0020 */ struct _CMSG_SIGNER_INFO* psSigner;
  /* 0x0028 */ unsigned long dwError;
  /* 0x002c */ unsigned long csCounterSigners;
  /* 0x0030 */ struct _CRYPT_PROVIDER_SGNR* pasCounterSigners;
  /* 0x0038 */ const struct _CERT_CHAIN_CONTEXT* pChainContext;
} CRYPT_PROVIDER_SGNR, *PCRYPT_PROVIDER_SGNR; /* size: 0x0040 */

typedef struct _CRYPT_PROVIDER_CERT
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1453;
  /* 0x0008 */ const struct _CERT_CONTEXT* pCert;
  /* 0x0010 */ int fCommercial;
  /* 0x0014 */ int fTrustedRoot;
  /* 0x0018 */ int fSelfSigned;
  /* 0x001c */ int fTestCert;
  /* 0x0020 */ unsigned long dwRevokedReason;
  /* 0x0024 */ unsigned long dwConfidence;
  /* 0x0028 */ unsigned long dwError;
  /* 0x002c */ long Padding_1454;
  /* 0x0030 */ struct _CTL_CONTEXT* pTrustListContext;
  /* 0x0038 */ int fTrustListSignerCert;
  /* 0x003c */ long Padding_1455;
  /* 0x0040 */ const struct _CTL_CONTEXT* pCtlContext;
  /* 0x0048 */ unsigned long dwCtlError;
  /* 0x004c */ int fIsCyclic;
  /* 0x0050 */ struct _CERT_CHAIN_ELEMENT* pChainElement;
} CRYPT_PROVIDER_CERT, *PCRYPT_PROVIDER_CERT; /* size: 0x0058 */

typedef struct _ProcessActivatorToken
{
  /* 0x0000 */ struct _GUID ProcessGUID;
  /* 0x0010 */ struct _GUID ActivatorIPID;
  /* 0x0020 */ unsigned long dwFlags;
} ProcessActivatorToken, *PProcessActivatorToken; /* size: 0x0024 */

typedef struct __midl_frag231_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag231_t, *P_midl_frag231_t; /* size: 0x0020 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IWeakReference,0,0>
{
}; /* size: 0x0001 */

typedef struct _OFNOTIFYA
{
  /* 0x0000 */ struct tagNMHDR hdr;
  /* 0x0018 */ struct tagOFNA* lpOFN;
  /* 0x0020 */ char* pszFile;
} OFNOTIFYA, *POFNOTIFYA; /* size: 0x0028 */

class LargeIntRegMultiply<unsigned __int64,unsigned __int64>
{
}; /* size: 0x0001 */

typedef struct __midl_frag1226_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1226_t, *P_midl_frag1226_t; /* size: 0x0028 */

typedef struct __midl_frag390_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag390_t, *P_midl_frag390_t; /* size: 0x0050 */

class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUNICODE_STRING> >
{
}; /* size: 0x0001 */

typedef struct _NDR64_FIX_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int TotalSize;
} NDR64_FIX_ARRAY_HEADER_FORMAT, *PNDR64_FIX_ARRAY_HEADER_FORMAT; /* size: 0x0008 */

typedef struct __midl_frag1641_t
{
  /* 0x0000 */ struct _NDR64_FIX_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1641_t, *P_midl_frag1641_t; /* size: 0x0008 */

typedef struct _PROVDATA_SIP
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ struct _GUID gSubject;
  /* 0x0014 */ long Padding_1456;
  /* 0x0018 */ struct SIP_DISPATCH_INFO_* pSip;
  /* 0x0020 */ struct SIP_DISPATCH_INFO_* pCATSip;
  /* 0x0028 */ struct SIP_SUBJECTINFO_* psSipSubjectInfo;
  /* 0x0030 */ struct SIP_SUBJECTINFO_* psSipCATSubjectInfo;
  /* 0x0038 */ struct SIP_INDIRECT_DATA_* psIndirectData;
} PROVDATA_SIP, *PPROVDATA_SIP; /* size: 0x0040 */

struct tagMIDIINCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long dwSupport;
  /* 0x004c */ struct _GUID ManufacturerGuid;
  /* 0x005c */ struct _GUID ProductGuid;
  /* 0x006c */ struct _GUID NameGuid;
}; /* size: 0x007c */

typedef struct __midl_frag129_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag129_t, *P_midl_frag129_t; /* size: 0x0010 */

typedef struct _CRYPT_PROVIDER_SIGSTATE
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ long Padding_1457;
  /* 0x0008 */ void** rhSecondarySigs;
  /* 0x0010 */ void* hPrimarySig;
  /* 0x0018 */ int fFirstAttemptMade;
  /* 0x001c */ int fNoMoreSigs;
  /* 0x0020 */ unsigned long cSecondarySigs;
  /* 0x0024 */ unsigned long dwCurrentIndex;
  /* 0x0028 */ int fSupportMultiSig;
  /* 0x002c */ unsigned long dwCryptoPolicySupport;
} CRYPT_PROVIDER_SIGSTATE, *PCRYPT_PROVIDER_SIGSTATE; /* size: 0x0030 */

class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper>
{
  /* 0x0000 */ class CClipboardBroker::CClipboardBrokerMTAHelper* ptr_;
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::ImplementsBase
{
}; /* size: 0x0001 */

typedef struct __midl_frag863_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag863_t, *P_midl_frag863_t; /* size: 0x0028 */

typedef struct _IMAGEHLP_CBA_READ_MEMORY
{
  /* 0x0000 */ unsigned __int64 addr;
  /* 0x0008 */ void* buf;
  /* 0x0010 */ unsigned long bytes;
  /* 0x0014 */ long Padding_1458;
  /* 0x0018 */ unsigned long* bytesread;
} IMAGEHLP_CBA_READ_MEMORY, *PIMAGEHLP_CBA_READ_MEMORY; /* size: 0x0020 */

class Windows::Auto<Windows::Rtl::IRtlROFOStream *>
{
}; /* size: 0x0008 */

class CExposedDocFile
{
  /* 0x0000 */ long Padding_1459[36];
  /* 0x0090 */ class CPubDocFile* _pdf;
  /* 0x0098 */ class CDFBasis* _pdfb;
  /* 0x00a0 */ class CPerContext* _ppc;
  /* 0x00a8 */ unsigned long _sig;
  /* 0x00ac */ long _cReferences;
  /* 0x00b0 */ class CPropertyBagEx _PropertyBagEx;
  /* 0x00e8 */ struct IUnknown* volatile _pFTM;
}; /* size: 0x00f0 */

typedef struct _CAT_MEMBERINFO2
{
  /* 0x0000 */ struct _GUID SubjectGuid;
  /* 0x0010 */ unsigned long dwCertVersion;
} CAT_MEMBERINFO2, *PCAT_MEMBERINFO2; /* size: 0x0014 */

typedef struct _MINIDUMP_FUNCTION_TABLE_STREAM
{
  /* 0x0000 */ unsigned int SizeOfHeader;
  /* 0x0004 */ unsigned int SizeOfDescriptor;
  /* 0x0008 */ unsigned int SizeOfNativeDescriptor;
  /* 0x000c */ unsigned int SizeOfFunctionEntry;
  /* 0x0010 */ unsigned int NumberOfDescriptors;
  /* 0x0014 */ unsigned int SizeOfAlignPad;
} MINIDUMP_FUNCTION_TABLE_STREAM, *PMINIDUMP_FUNCTION_TABLE_STREAM; /* size: 0x0018 */

typedef struct _SPC_FINANCIAL_CRITERIA
{
  /* 0x0000 */ int fFinancialInfoAvailable;
  /* 0x0004 */ int fMeetsCriteria;
} SPC_FINANCIAL_CRITERIA, *PSPC_FINANCIAL_CRITERIA; /* size: 0x0008 */

typedef struct _MINIDUMP_USER_STREAM
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ unsigned long BufferSize;
  /* 0x0008 */ void* Buffer;
} MINIDUMP_USER_STREAM, *PMINIDUMP_USER_STREAM; /* size: 0x0010 */

typedef struct __midl_frag881_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag881_t, *P_midl_frag881_t; /* size: 0x0038 */

typedef struct _DEVICEDUMP_RESTRICTED_SUBSECTION
{
  /* 0x0000 */ unsigned char bData[1];
} DEVICEDUMP_RESTRICTED_SUBSECTION, *PDEVICEDUMP_RESTRICTED_SUBSECTION; /* size: 0x0001 */

typedef struct _MINIDUMP_THREAD_EX_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD_EX* Threads /* zero-length array */;
} MINIDUMP_THREAD_EX_LIST, *PMINIDUMP_THREAD_EX_LIST; /* size: 0x0004 */

typedef struct __midl_frag1877_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1877_t, *P_midl_frag1877_t; /* size: 0x0048 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::WeakRef>
{
  /* 0x0000 */ class Microsoft::WRL::WeakRef* ptr_;
}; /* size: 0x0008 */

class BUCL::CConvertToSignedType<unsigned __int64>
{
}; /* size: 0x0001 */

class CAbstractMarshalingStream
{
}; /* size: 0x0010 */

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlWOFOStream *,Windows::Auto<Windows::Rtl::IRtlWOFOStream *> >;

struct Microsoft::WRL::Wrappers::HandleTraits::SemaphoreTraits
{
}; /* size: 0x0001 */

typedef struct __midl_frag873_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag873_t, *P_midl_frag873_t; /* size: 0x0028 */

typedef struct _WIN_TRUST_ACTDATA_SUBJECT_ONLY
{
  /* 0x0000 */ struct _GUID* SubjectType;
  /* 0x0008 */ void* Subject;
} WIN_TRUST_ACTDATA_SUBJECT_ONLY, *PWIN_TRUST_ACTDATA_SUBJECT_ONLY; /* size: 0x0010 */

typedef struct _MINIDUMP_USER_RECORD
{
  /* 0x0000 */ unsigned int Type;
  /* 0x0004 */ struct _MINIDUMP_LOCATION_DESCRIPTOR Memory;
} MINIDUMP_USER_RECORD, *PMINIDUMP_USER_RECORD; /* size: 0x000c */

typedef struct _MINIDUMP_THREAD_LIST
{
  /* 0x0000 */ unsigned int NumberOfThreads;
  /* 0x0004 */ struct _MINIDUMP_THREAD* Threads /* zero-length array */;
} MINIDUMP_THREAD_LIST, *PMINIDUMP_THREAD_LIST; /* size: 0x0004 */

class CClass
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ wchar_t* m_szClsid;
}; /* size: 0x0018 */

typedef struct _MINIDUMP_MISC_INFO
{
  /* 0x0000 */ unsigned int SizeOfInfo;
  /* 0x0004 */ unsigned int Flags1;
  /* 0x0008 */ unsigned int ProcessId;
  /* 0x000c */ unsigned int ProcessCreateTime;
  /* 0x0010 */ unsigned int ProcessUserTime;
  /* 0x0014 */ unsigned int ProcessKernelTime;
} MINIDUMP_MISC_INFO, *PMINIDUMP_MISC_INFO; /* size: 0x0018 */

typedef struct _SPC_INDIRECT_DATA_CONTENT
{
  /* 0x0000 */ struct _CRYPT_ATTRIBUTE_TYPE_VALUE Data;
  /* 0x0018 */ struct _CRYPT_ALGORITHM_IDENTIFIER DigestAlgorithm;
  /* 0x0030 */ struct _CRYPTOAPI_BLOB Digest;
} SPC_INDIRECT_DATA_CONTENT, *PSPC_INDIRECT_DATA_CONTENT; /* size: 0x0040 */

typedef struct _MINIDUMP_MEMORY_INFO_LIST
{
  /* 0x0000 */ unsigned long SizeOfHeader;
  /* 0x0004 */ unsigned long SizeOfEntry;
  /* 0x0008 */ unsigned __int64 NumberOfEntries;
} MINIDUMP_MEMORY_INFO_LIST, *PMINIDUMP_MEMORY_INFO_LIST; /* size: 0x0010 */

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Reset::__l3::<lambda_BA168E9DE3CFD21B>;

class Windows::AutoOperatorAmpersandConstHelper<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >;

class Microsoft::WRL::Wrappers::HString
{
  /* 0x0000 */ struct HSTRING__* hstr_;
}; /* size: 0x0008 */

typedef struct __midl_frag728_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag728_t, *P_midl_frag728_t; /* size: 0x0048 */

class CBasedDeltaBlockPtrPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CBasedTransactedStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class CDeltaList
{
  /* 0x0000 */ class CBasedDeltaBlockPtrPtr _apdb;
  /* 0x0008 */ unsigned long _ulSize;
  /* 0x000c */ long Padding_1460;
  /* 0x0010 */ class CBasedMStreamPtr _pmsScratch;
  /* 0x0018 */ class CBasedMStreamPtr _pms;
  /* 0x0020 */ class CBasedTransactedStreamPtr _ptsParent;
  /* 0x0028 */ unsigned long _sectStart;
}; /* size: 0x0030 */

class CTransactedStream
{
  /* 0x0000 */ long Padding_1461[28];
  /* 0x0070 */ unsigned __int64 _ulSize;
  /* 0x0078 */ class CBasedSStreamPtr _pssBase;
  /* 0x0080 */ unsigned long _sectLastUsed;
  /* 0x0084 */ long Padding_1462;
  /* 0x0088 */ class CDeltaList _dl;
  /* 0x00b8 */ unsigned long _df;
  /* 0x00bc */ int _fBeginCommit;
  /* 0x00c0 */ class CBasedDeltaListPtr _pdlOld;
  /* 0x00c8 */ unsigned __int64 _ulOldSize;
}; /* size: 0x00d0 */

typedef struct _SPC_SP_OPUS_INFO
{
  /* 0x0000 */ const wchar_t* pwszProgramName;
  /* 0x0008 */ struct SPC_LINK_* pMoreInfo;
  /* 0x0010 */ struct SPC_LINK_* pPublisherInfo;
} SPC_SP_OPUS_INFO, *PSPC_SP_OPUS_INFO; /* size: 0x0018 */

typedef struct _SPC_PE_IMAGE_DATA
{
  /* 0x0000 */ struct _CRYPT_BIT_BLOB Flags;
  /* 0x0018 */ struct SPC_LINK_* pFile;
} SPC_PE_IMAGE_DATA, *PSPC_PE_IMAGE_DATA; /* size: 0x0020 */

struct RTL_FILTER_LUNICODE_STRING_CTX
{
  /* 0x0000 */ unsigned char* WriteCursor;
  /* 0x0008 */ unsigned char* WriteEnd;
}; /* size: 0x0010 */

typedef struct __midl_frag1704_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1704_t, *P_midl_frag1704_t; /* size: 0x0020 */

typedef struct _SPC_IMAGE
{
  /* 0x0000 */ struct SPC_LINK_* pImageLink;
  /* 0x0008 */ struct _CRYPTOAPI_BLOB Bitmap;
  /* 0x0018 */ struct _CRYPTOAPI_BLOB Metafile;
  /* 0x0028 */ struct _CRYPTOAPI_BLOB EnhancedMetafile;
  /* 0x0038 */ struct _CRYPTOAPI_BLOB GifFile;
} SPC_IMAGE, *PSPC_IMAGE; /* size: 0x0048 */

struct tagExtentInfo
{
  /* 0x0000 */ unsigned long cb;
  /* 0x0004 */ unsigned long dwExtentMode;
  /* 0x0008 */ struct tagSIZE sizelProposed;
}; /* size: 0x0010 */

class ARI::ProcessToken::AutoSysAppId
{
  /* 0x0000 */ struct _TOKEN_SECURITY_ATTRIBUTES_INFORMATION* attributes;
  /* 0x0008 */ const struct _TOKEN_SECURITY_ATTRIBUTE_V1* sysAppId;
}; /* size: 0x0010 */

typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD
{
  /* 0x0000 */ unsigned char Cdb[16];
  /* 0x0010 */ unsigned char Command[16];
  /* 0x0020 */ unsigned __int64 StartTime;
  /* 0x0028 */ unsigned __int64 EndTime;
  /* 0x0030 */ unsigned long OperationStatus;
  /* 0x0034 */ unsigned long OperationError;
  union
  {
    union
    {
      struct
      {
        /* 0x0038 */ unsigned long dwReserved;
      } /* size: 0x0004 */ ExternalStack;
      struct
      {
        /* 0x0038 */ unsigned long dwAtaPortSpecific;
      } /* size: 0x0004 */ AtaPort;
      struct
      {
        /* 0x0038 */ unsigned long SrbTag;
      } /* size: 0x0004 */ StorPort;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ StackSpecific;
} DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD, *PDEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD; /* size: 0x003c */

typedef struct _DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP
{
  /* 0x0000 */ struct _DEVICEDUMP_STRUCTURE_VERSION Descriptor;
  /* 0x000c */ unsigned long dwReasonForCollection;
  /* 0x0010 */ unsigned char cDriverName[16];
  /* 0x0020 */ unsigned long uiNumRecords;
  /* 0x0024 */ struct _DEVICEDUMP_STORAGESTACK_PUBLIC_STATE_RECORD RecordArray[1];
} DEVICEDUMP_STORAGESTACK_PUBLIC_DUMP, *PDEVICEDUMP_STORAGESTACK_PUBLIC_DUMP; /* size: 0x0060 */

struct tagPOINTF
{
  /* 0x0000 */ float x;
  /* 0x0004 */ float y;
}; /* size: 0x0008 */

class CNumInfo;

class CEnumHolder
{
  /* 0x0000 */ long Padding_1463[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ unsigned short m_nCount;
  /* 0x000e */ char Padding_1464[2];
  /* 0x0010 */ struct IEnumGeneric* m_pFirst;
  /* 0x0018 */ struct IEnumGeneric* m_pLast;
}; /* size: 0x0020 */

typedef struct __midl_frag1513_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1513_t, *P_midl_frag1513_t; /* size: 0x0008 */

typedef struct _WIN_TRUST_SUBJECT_FILE_AND_DISPLAY
{
  /* 0x0000 */ void* hFile;
  /* 0x0008 */ const wchar_t* lpPath;
  /* 0x0010 */ const wchar_t* lpDisplayName;
} WIN_TRUST_SUBJECT_FILE_AND_DISPLAY, *PWIN_TRUST_SUBJECT_FILE_AND_DISPLAY; /* size: 0x0018 */

typedef struct _PORT_INFO_3W
{
  /* 0x0000 */ unsigned long dwStatus;
  /* 0x0004 */ long Padding_1465;
  /* 0x0008 */ wchar_t* pszStatus;
  /* 0x0010 */ unsigned long dwSeverity;
  /* 0x0014 */ long __PADDING__[1];
} PORT_INFO_3W, *PPORT_INFO_3W; /* size: 0x0018 */

struct Microsoft::WRL::RuntimeClassFlags<2>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct _IMAGEHLP_MODULE64
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1466;
  /* 0x0008 */ unsigned __int64 BaseOfImage;
  /* 0x0010 */ unsigned long ImageSize;
  /* 0x0014 */ unsigned long TimeDateStamp;
  /* 0x0018 */ unsigned long CheckSum;
  /* 0x001c */ unsigned long NumSyms;
  /* 0x0020 */ enum SYM_TYPE SymType;
  /* 0x0024 */ char ModuleName[32];
  /* 0x0044 */ char ImageName[256];
  /* 0x0144 */ char LoadedImageName[256];
  /* 0x0244 */ char LoadedPdbName[256];
  /* 0x0344 */ unsigned long CVSig;
  /* 0x0348 */ char CVData[780];
  /* 0x0654 */ unsigned long PdbSig;
  /* 0x0658 */ struct _GUID PdbSig70;
  /* 0x0668 */ unsigned long PdbAge;
  /* 0x066c */ int PdbUnmatched;
  /* 0x0670 */ int DbgUnmatched;
  /* 0x0674 */ int LineNumbers;
  /* 0x0678 */ int GlobalSymbols;
  /* 0x067c */ int TypeInfo;
  /* 0x0680 */ int SourceIndexed;
  /* 0x0684 */ int Publics;
  /* 0x0688 */ unsigned long MachineType;
  /* 0x068c */ unsigned long Reserved;
} IMAGEHLP_MODULE64, *PIMAGEHLP_MODULE64; /* size: 0x0690 */

typedef struct __midl_frag163_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag163_t, *P_midl_frag163_t; /* size: 0x0058 */

struct tagCADWORD
{
  /* 0x0000 */ unsigned long cElems;
  /* 0x0004 */ long Padding_1467;
  /* 0x0008 */ unsigned long* pElems;
}; /* size: 0x0010 */

typedef struct _mega_MIDL_EXPR_FORMAT_STRING
{
  /* 0x0000 */ long Pad;
  /* 0x0004 */ unsigned char Format[29];
  /* 0x0021 */ char __PADDING__[3];
} mega_MIDL_EXPR_FORMAT_STRING, *Pmega_MIDL_EXPR_FORMAT_STRING; /* size: 0x0024 */

typedef struct __midl_frag1457_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1457_t, *P_midl_frag1457_t; /* size: 0x0058 */

class BUCL::CConvertToSignedType<unsigned short>
{
}; /* size: 0x0001 */

struct SYMSRV_INDEX_INFOW
{
  /* 0x0000 */ unsigned long sizeofstruct;
  /* 0x0004 */ wchar_t file[261];
  /* 0x020e */ char Padding_1468[2];
  /* 0x0210 */ int stripped;
  /* 0x0214 */ unsigned long timestamp;
  /* 0x0218 */ unsigned long size;
  /* 0x021c */ wchar_t dbgfile[261];
  /* 0x0426 */ wchar_t pdbfile[261];
  /* 0x0630 */ struct _GUID guid;
  /* 0x0640 */ unsigned long sig;
  /* 0x0644 */ unsigned long age;
}; /* size: 0x0648 */

struct API_VERSION
{
  /* 0x0000 */ unsigned short MajorVersion;
  /* 0x0002 */ unsigned short MinorVersion;
  /* 0x0004 */ unsigned short Revision;
  /* 0x0006 */ unsigned short Reserved;
}; /* size: 0x0008 */

class CEnumFormatEtc
{
  /* 0x0000 */ long Padding_1469[3];
  /* 0x000c */ unsigned long m_ulFlags;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_index;
  /* 0x0018 */ class CArray<CFormatEtc>* m_pFEArray;
}; /* size: 0x0020 */

struct tagMIXERLINEW
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwDestination;
  /* 0x0008 */ unsigned long dwSource;
  /* 0x000c */ unsigned long dwLineID;
  /* 0x0010 */ unsigned long fdwLine;
  /* 0x0014 */ unsigned __int64 dwUser;
  /* 0x001c */ unsigned long dwComponentType;
  /* 0x0020 */ unsigned long cChannels;
  /* 0x0024 */ unsigned long cConnections;
  /* 0x0028 */ unsigned long cControls;
  /* 0x002c */ wchar_t szShortName[16];
  /* 0x004c */ wchar_t szName[64];
  struct
  {
    /* 0x00cc */ unsigned long dwType;
    /* 0x00d0 */ unsigned long dwDeviceID;
    /* 0x00d4 */ unsigned short wMid;
    /* 0x00d6 */ unsigned short wPid;
    /* 0x00d8 */ unsigned int vDriverVersion;
    /* 0x00dc */ wchar_t szPname[32];
  } /* size: 0x0050 */ Target;
}; /* size: 0x011c */

typedef struct __midl_frag487_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag487_t, *P_midl_frag487_t; /* size: 0x0058 */

typedef struct _SRCCODEINFO
{
  /* 0x0000 */ unsigned long SizeOfStruct;
  /* 0x0004 */ long Padding_1470;
  /* 0x0008 */ void* Key;
  /* 0x0010 */ unsigned __int64 ModBase;
  /* 0x0018 */ char Obj[261];
  /* 0x011d */ char FileName[261];
  /* 0x0222 */ char Padding_1471[2];
  /* 0x0224 */ unsigned long LineNumber;
  /* 0x0228 */ unsigned __int64 Address;
} SRCCODEINFO, *PSRCCODEINFO; /* size: 0x0230 */

struct MINIDUMP_EXCEPTION_STREAM
{
  /* 0x0000 */ unsigned int ThreadId;
  /* 0x0004 */ unsigned int __alignment;
  /* 0x0008 */ struct _MINIDUMP_EXCEPTION ExceptionRecord;
  /* 0x00a0 */ struct _MINIDUMP_LOCATION_DESCRIPTOR ThreadContext;
}; /* size: 0x00a8 */

struct Microsoft::WRL::RuntimeClassFlags<14>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

typedef struct _LDT_ENTRY
{
  /* 0x0000 */ unsigned short LimitLow;
  /* 0x0002 */ unsigned short BaseLow;
  union
  {
    union
    {
      struct
      {
        /* 0x0004 */ unsigned char BaseMid;
        /* 0x0005 */ unsigned char Flags1;
        /* 0x0006 */ unsigned char Flags2;
        /* 0x0007 */ unsigned char BaseHi;
      } /* size: 0x0004 */ Bytes;
      struct
      {
        struct /* bitfield */
        {
          /* 0x0004 */ unsigned long BaseMid : 8; /* bit position: 0 */
          /* 0x0004 */ unsigned long Type : 5; /* bit position: 8 */
          /* 0x0004 */ unsigned long Dpl : 2; /* bit position: 13 */
          /* 0x0004 */ unsigned long Pres : 1; /* bit position: 15 */
          /* 0x0004 */ unsigned long LimitHi : 4; /* bit position: 16 */
          /* 0x0004 */ unsigned long Sys : 1; /* bit position: 20 */
          /* 0x0004 */ unsigned long Reserved_0 : 1; /* bit position: 21 */
          /* 0x0004 */ unsigned long Default_Big : 1; /* bit position: 22 */
          /* 0x0004 */ unsigned long Granularity : 1; /* bit position: 23 */
          /* 0x0004 */ unsigned long BaseHi : 8; /* bit position: 24 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ HighWord;
} LDT_ENTRY, *PLDT_ENTRY; /* size: 0x0008 */

class CALLFRAME_CACHE<TYPEINFOVTBL>
{
  /* 0x0000 */ long Padding_1472[46];
  /* 0x00b8 */ class XSLOCK m_xslAgeOutLock;
  /* 0x0138 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x013c */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x0140 */

class CLimitedWritableStream::Clone::__l3::<lambda_B9A5E8BAA9924D4D>
{
  /* 0x0000 */ class CLimitedWritableStream* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream>& spInner;
}; /* size: 0x0010 */

typedef struct _TAPE_WMI_OPERATIONS
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long DataBufferSize;
  /* 0x0008 */ void* DataBuffer;
} TAPE_WMI_OPERATIONS, *PTAPE_WMI_OPERATIONS; /* size: 0x0010 */

typedef struct _TAPE_ERASE
{
  /* 0x0000 */ unsigned long Type;
  /* 0x0004 */ unsigned char Immediate;
  /* 0x0005 */ char __PADDING__[3];
} TAPE_ERASE, *PTAPE_ERASE; /* size: 0x0008 */

typedef struct __midl_frag128_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag128_t, *P_midl_frag128_t; /* size: 0x000c */

struct tagOCPFIPARAMS
{
  /* 0x0000 */ unsigned long cbStructSize;
  /* 0x0004 */ long Padding_1473;
  /* 0x0008 */ struct HWND__* hWndOwner;
  /* 0x0010 */ int x;
  /* 0x0014 */ int y;
  /* 0x0018 */ const wchar_t* lpszCaption;
  /* 0x0020 */ unsigned long cObjects;
  /* 0x0024 */ long Padding_1474;
  /* 0x0028 */ struct IUnknown** lplpUnk;
  /* 0x0030 */ unsigned long cPages;
  /* 0x0034 */ long Padding_1475;
  /* 0x0038 */ struct _GUID* lpPages;
  /* 0x0040 */ unsigned long lcid;
  /* 0x0044 */ long dispidInitialProperty;
}; /* size: 0x0048 */

typedef struct __midl_frag36_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag36_t, *P_midl_frag36_t; /* size: 0x0048 */

typedef struct __midl_frag186_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag186_t, *P_midl_frag186_t; /* size: 0x0010 */

typedef struct _TAPE_CREATE_PARTITION
{
  /* 0x0000 */ unsigned long Method;
  /* 0x0004 */ unsigned long Count;
  /* 0x0008 */ unsigned long Size;
} TAPE_CREATE_PARTITION, *PTAPE_CREATE_PARTITION; /* size: 0x000c */

typedef struct _TAPE_SET_MEDIA_PARAMETERS
{
  /* 0x0000 */ unsigned long BlockSize;
} TAPE_SET_MEDIA_PARAMETERS, *PTAPE_SET_MEDIA_PARAMETERS; /* size: 0x0004 */

typedef struct _iinspectablederived_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1001];
  /* 0x03eb */ char __PADDING__[1];
} iinspectablederived_MIDL_PROC_FORMAT_STRING, *Piinspectablederived_MIDL_PROC_FORMAT_STRING; /* size: 0x03ec */

class CRefExportCount
{
  /* 0x0000 */ long Padding_1476[2];
  /* 0x0008 */ unsigned long m_cRefs;
  /* 0x000c */ unsigned long m_cExportCount;
  /* 0x0010 */ unsigned long m_IsZombie;
  /* 0x0014 */ unsigned long m_Status;
  /* 0x0018 */ struct IUnknown* m_pUnkOuter;
}; /* size: 0x0020 */

typedef struct _customREMOTE_REPLY_SCM_INFO
{
  /* 0x0000 */ unsigned __int64 Oxid;
  /* 0x0008 */ struct tagDUALSTRINGARRAY* pdsaOxidBindings;
  /* 0x0010 */ struct _GUID ipidRemUnknown;
  /* 0x0020 */ unsigned long authnHint;
  /* 0x0024 */ struct tagCOMVERSION serverVersion;
} customREMOTE_REPLY_SCM_INFO, *PcustomREMOTE_REPLY_SCM_INFO; /* size: 0x0028 */

class CThreadCheck
{
  /* 0x0000 */ unsigned long m_tid;
}; /* size: 0x0004 */

class CRefStabilize
{
  /* 0x0000 */ class CRefExportCount* m_pRefExportCount;
}; /* size: 0x0008 */

typedef struct __midl_frag702_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag702_t, *P_midl_frag702_t; /* size: 0x000c */

class PDeSerStream;

class PSerStream;

struct CompObjHdr
{
  /* 0x0000 */ unsigned long m_dwFirstDword;
  /* 0x0004 */ unsigned long m_dwOSVer;
  /* 0x0008 */ unsigned long m_unused;
  /* 0x000c */ struct _GUID m_clsClass;
}; /* size: 0x001c */

typedef struct __midl_frag532_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag532_t, *P_midl_frag532_t; /* size: 0x0038 */

typedef struct __midl_frag1079_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1079_t, *P_midl_frag1079_t; /* size: 0x0088 */

struct tagFORMATIDOFFSET
{
  /* 0x0000 */ struct _GUID fmtid;
  /* 0x0010 */ unsigned long dwOffset;
}; /* size: 0x0014 */

class CSafeAccess
{
  /* 0x0000 */ class CDFBasis* _pdfb;
  /* 0x0008 */ class CPerContext* _ppc;
  /* 0x0010 */ int _fAccess;
}; /* size: 0x0018 */

struct HSTRING__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

class CDFBasis
{
  union
  {
    struct
    {
      /* 0x0000 */ class CBasedMStreamPtr _pms;
      /* 0x0008 */ class CBasedMStreamPtr _pmsScratch;
      /* 0x0010 */ struct ILockBytes* _plkbBase;
      /* 0x0018 */ struct CFileStream* _pfstDirty;
      /* 0x0020 */ struct ILockBytes* _plkbOriginal;
      /* 0x0028 */ const unsigned long _dfOpen;
      /* 0x002c */ long _cReferences;
      /* 0x0030 */ class CBasedPubDocFilePtr _pdfCopyBase;
      /* 0x0038 */ class CBasedGlobalContextPtr _pgcGlobalContext;
      /* 0x0040 */ unsigned long _dwOrigLocks;
      /* 0x0044 */ unsigned long _dwSectorSize;
      /* 0x0048 */ class CFreeList _afrl[4];
    }; /* size: 0x0068 */
    /* 0x0000 */ unsigned __int64 _aReserveSize[4];
  }; /* size: 0x0068 */
  /* 0x0068 */ int _fDirectWriterMode;
  /* 0x006c */ int _fWriteLocked;
  /* 0x0070 */ struct IMalloc* const _pMalloc;
}; /* size: 0x0078 */

typedef struct __midl_frag1488_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1488_t, *P_midl_frag1488_t; /* size: 0x0028 */

struct tagMCI_PLAY_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrom;
  /* 0x000c */ unsigned long dwTo;
}; /* size: 0x0010 */

class CWrapperBase<IEnumFORMATETC>::{dtor}::__l3::<lambda_5B474553FA606D78>;

class CPropertySetStream
{
  /* 0x0000 */ struct tagPROPERTYSETHEADER* _pph;
  /* 0x0008 */ unsigned long _oSection;
  /* 0x000c */ unsigned long _cSection;
  /* 0x0010 */ unsigned short _CodePage;
  /* 0x0012 */ unsigned char _Flags;
  /* 0x0013 */ unsigned char _State;
  /* 0x0014 */ unsigned long _Locale;
  /* 0x0018 */ unsigned long _grfBehavior;
  /* 0x001c */ unsigned long _cbTail;
  /* 0x0020 */ class PMemoryAllocator* _pma;
  /* 0x0028 */ class IMappedStream* _pmstm;
}; /* size: 0x0030 */

typedef struct __midl_frag867_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag867_t, *P_midl_frag867_t; /* size: 0x0048 */

struct CStreamChunk
{
  /* 0x0000 */ unsigned long oOld;
  /* 0x0004 */ long cbChange;
}; /* size: 0x0008 */

typedef struct __midl_frag1231_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1231_t, *P_midl_frag1231_t; /* size: 0x0028 */

typedef struct _MonikerWriteStruct
{
  /* 0x0000 */ unsigned short m_endServer;
  /* 0x0002 */ unsigned short m_w;
  /* 0x0004 */ struct _GUID m_clsid;
  /* 0x0014 */ unsigned long m_ole1;
} MonikerWriteStruct, *PMonikerWriteStruct; /* size: 0x0018 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IEnumSTATSTG>
{
}; /* size: 0x0008 */

struct HCONVLIST__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _INDIRECTPROPERTY
{
  /* 0x0000 */ unsigned long Index;
  /* 0x0004 */ long Padding_1477;
  /* 0x0008 */ wchar_t* poszName;
} INDIRECTPROPERTY, *PINDIRECTPROPERTY; /* size: 0x0010 */

class CArray<CProperty *,CProperty * &>
{
  /* 0x0000 */ class CProperty** m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

struct FR
{
  /* 0x0000 */ union tagCY cySize;
  /* 0x0008 */ long cyLogical;
  /* 0x000c */ long cyHimetric;
  /* 0x0010 */ short sCharset;
  /* 0x0012 */ short sWeight;
  union
  {
    struct /* bitfield */
    {
      /* 0x0014 */ unsigned char fBold : 1; /* bit position: 0 */
      /* 0x0014 */ unsigned char fItalic : 1; /* bit position: 1 */
      /* 0x0014 */ unsigned char fUnderline : 1; /* bit position: 2 */
      /* 0x0014 */ unsigned char fStrikethrough : 1; /* bit position: 3 */
    }; /* bitfield */
    /* 0x0014 */ unsigned char bFlags;
  }; /* size: 0x0001 */
  /* 0x0015 */ char Padding_1478;
  /* 0x0016 */ wchar_t rgchFace[32];
  /* 0x0056 */ char __PADDING__[2];
}; /* size: 0x0058 */

typedef struct _NDR64_VAR_ARRAY_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_ARRAY_FLAGS Flags;
  /* 0x0003 */ unsigned char Reserved;
  /* 0x0004 */ unsigned int TotalSize;
  /* 0x0008 */ unsigned int ElementSize;
  /* 0x000c */ long Padding_1479;
  /* 0x0010 */ const void* VarDescriptor;
} NDR64_VAR_ARRAY_HEADER_FORMAT, *PNDR64_VAR_ARRAY_HEADER_FORMAT; /* size: 0x0018 */

struct tagMONHSZSTRUCTW
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fsAction;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_1480;
  /* 0x0010 */ struct HSZ__* hsz;
  /* 0x0018 */ void* hTask;
  /* 0x0020 */ wchar_t str[1];
  /* 0x0022 */ char __PADDING__[6];
}; /* size: 0x0028 */

class BUCL::CConvertToSignedType<signed char>
{
}; /* size: 0x0001 */

class ScheduleClipboardWorkWithPLM::__l15::<lambda_12D3045CEFEFBAF>
{
}; /* size: 0x0001 */

struct midihdr_tag
{
  /* 0x0000 */ char* lpData;
  /* 0x0008 */ unsigned long dwBufferLength;
  /* 0x000c */ unsigned long dwBytesRecorded;
  /* 0x0010 */ unsigned __int64 dwUser;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ struct midihdr_tag* lpNext;
  /* 0x0024 */ unsigned __int64 reserved;
  /* 0x002c */ unsigned long dwOffset;
  /* 0x0030 */ unsigned __int64 dwReserved[8];
}; /* size: 0x0070 */

class EventPoolEntry;

class CDirSect
{
  /* 0x0000 */ class CDirEntry* _adeEntry /* zero-length array */;
}; /* size: 0x0001 */

struct tagSAmdRegs
{
  /* 0x0000 */ __int64* prt;
  /* 0x0008 */ void* pArgs;
}; /* size: 0x0010 */

typedef struct __midl_frag1482_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1482_t, *P_midl_frag1482_t; /* size: 0x0028 */

class CLimitedWritableStream::SetSize::__l3::<lambda_29B2CCEB6A2CEC56>;

class GenericStream
{
  /* 0x0000 */ long Padding_1481[4];
  /* 0x0010 */ long _clRefs;
  /* 0x0014 */ long _lOffset;
  /* 0x0018 */ long _cbDataSize;
  /* 0x001c */ unsigned long _cbBufferSize;
  /* 0x0020 */ struct tagInterfaceData* _pifData;
  /* 0x0028 */ int _fFree;
  /* 0x002c */ unsigned long _copyAlignment;
}; /* size: 0x0030 */

struct SEntryBuffer
{
  /* 0x0000 */ unsigned long luid;
  /* 0x0004 */ unsigned long dwType;
  /* 0x0008 */ unsigned long sid;
}; /* size: 0x000c */

class Microsoft::WRL::ComPtr<IMarshalingStream>
{
  /* 0x0000 */ struct IMarshalingStream* ptr_;
}; /* size: 0x0008 */

typedef struct __midl_frag718_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag718_t, *P_midl_frag718_t; /* size: 0x0028 */

struct tagMONCONVSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ int fConnect;
  /* 0x0008 */ unsigned long dwTime;
  /* 0x000c */ long Padding_1482;
  /* 0x0010 */ void* hTask;
  /* 0x0018 */ struct HSZ__* hszSvc;
  /* 0x0020 */ struct HSZ__* hszTopic;
  /* 0x0028 */ struct HCONV__* hConvClient;
  /* 0x0030 */ struct HCONV__* hConvServer;
}; /* size: 0x0038 */

class PDocFile
{
}; /* size: 0x000c */

class CCliModalLoop::SuspendPointerMessageReorderingForCallout
{
  /* 0x0000 */ class CCliModalLoop& _context;
}; /* size: 0x0008 */

struct tagMONLINKSTRUCT
{
  /* 0x0000 */ unsigned int cb;
  /* 0x0004 */ unsigned long dwTime;
  /* 0x0008 */ void* hTask;
  /* 0x0010 */ int fEstablished;
  /* 0x0014 */ int fNoData;
  /* 0x0018 */ struct HSZ__* hszSvc;
  /* 0x0020 */ struct HSZ__* hszTopic;
  /* 0x0028 */ struct HSZ__* hszItem;
  /* 0x0030 */ unsigned int wFmt;
  /* 0x0034 */ int fServer;
  /* 0x0038 */ struct HCONV__* hConvServer;
  /* 0x0040 */ struct HCONV__* hConvClient;
}; /* size: 0x0048 */

class TStackBuffer<tagPROPVARIANT,64>
{
  /* 0x0000 */ long Padding_1483[8];
  /* 0x0020 */ struct tagPROPVARIANT _rg[64];
}; /* size: 0x0620 */

class Windows::AutoPointerBase<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlROFOStream* m_Data;
}; /* size: 0x0008 */

class CComCat::CInnerUnk
{
  /* 0x0000 */ long Padding_1484[2];
  /* 0x0008 */ class CComCat* m_pObj;
}; /* size: 0x0010 */

struct Microsoft::WRL::Details::BoolStruct
{
  /* 0x0000 */ int Member;
}; /* size: 0x0004 */

class CLocalAlloc
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<ClipboardDataObjectTask>
{
  /* 0x0000 */ class ClipboardDataObjectTask* ptr_;
}; /* size: 0x0008 */

class CWrapperBase<IStream>
{
  /* 0x0000 */ long Padding_1485[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStream> m_pInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_pPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

struct INTERPRETER_OPT_FLAGS2
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char HasNewCorrDesc : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientCorrCheck : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ServerCorrCheck : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasNotify : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char HasNotify2 : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasComplexReturn : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasConformanceRange : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasBigByValueParam : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct NDR_PROC_HEADER_EXTS
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
}; /* size: 0x0008 */

typedef struct __midl_frag1469_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1469_t, *P_midl_frag1469_t; /* size: 0x0038 */

class Windows::Auto<_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT>
{
}; /* size: 0x0068 */

struct IRunAsClipboard
{
}; /* size: 0x0008 */

typedef struct __midl_frag336_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag336_t, *P_midl_frag336_t; /* size: 0x0048 */

typedef struct __midl_frag161_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag161_t, *P_midl_frag161_t; /* size: 0x0028 */

class TStackBuffer<unsigned short *,64>;

typedef struct __midl_frag1697_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1697_t, *P_midl_frag1697_t; /* size: 0x0020 */

typedef struct __midl_frag1872_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1872_t, *P_midl_frag1872_t; /* size: 0x0038 */

typedef struct __midl_frag1349_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1349_t, *P_midl_frag1349_t; /* size: 0x0038 */

class DeserializeHelper
{
  union
  {
    struct
    {
      /* 0x0000 */ class PMemoryAllocator* c_pMA;
      /* 0x0008 */ unsigned int m_Flags;
      /* 0x000c */ unsigned long c_cbAlloc;
      /* 0x0010 */ struct CleanupStack c_cleanupStack;
      /* 0x0170 */ int m_fIndirect;
      /* 0x0174 */ unsigned int m_CodePage;
      union
      {
        /* 0x0178 */ struct tagPROPVARIANT m_pvDummy;
        /* 0x0178 */ struct tagCLIPDATA m_clipdataDummy;
      }; /* size: 0x0018 */
    }; /* size: 0x0190 */
    /* 0x0000 */ class DeserializeHelper::SafeArrayDestroyer c_saDestroyer;
    /* 0x0000 */ class DeserializeHelper::BstrDestroyer c_bstrDestroyer;
  }; /* size: 0x0190 */
}; /* size: 0x0190 */

typedef struct __midl_frag735_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag735_t, *P_midl_frag735_t; /* size: 0x0028 */

class Windows::Rtl::AutoBlob<Windows::Auto<_LBLOB> >::COperatorAmpersandReturnType;

class SerializedPropertyReader
{
  /* 0x0000 */ const unsigned char* m_pbPos;
  /* 0x0008 */ unsigned long m_cbRead;
  /* 0x000c */ unsigned long m_cbRemain;
}; /* size: 0x0010 */

typedef struct __midl_frag1455_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1455_t, *P_midl_frag1455_t; /* size: 0x0008 */

typedef struct _EVENT_FILTER_DESCRIPTOR
{
  /* 0x0000 */ unsigned __int64 Ptr;
  /* 0x0008 */ unsigned long Size;
  /* 0x000c */ unsigned long Type;
} EVENT_FILTER_DESCRIPTOR, *PEVENT_FILTER_DESCRIPTOR; /* size: 0x0010 */

typedef struct _OFLONGSTRUCTA
{
  /* 0x0000 */ unsigned int nErrCode;
  /* 0x0004 */ char szPathName[260];
} OFLONGSTRUCTA, *POFLONGSTRUCTA; /* size: 0x0108 */

struct tagSRVRDISPATCHDATA
{
  /* 0x0000 */ long Padding_1486[2];
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ void* hData;
  /* 0x0018 */ struct HWND__* wParam;
  /* 0x0020 */ class CDDEServer* lpsrvr;
}; /* size: 0x0028 */

struct FONTFACEDATA
{
  /* 0x0000 */ unsigned long dwCharSet;
  /* 0x0004 */ unsigned long dwPreferredCharSet;
}; /* size: 0x0008 */

class BUCL::CConvertToUnsignedType<int>
{
}; /* size: 0x0001 */

struct BUCL::ComparisonResultKind<BUCL::Rtl::CCallDisposition>
{
  /* 0x0000 */ BOOL fSuccess;
  /* 0x0001 */ char iResult;
  /* 0x0002 */ char Padding_1487[2];
  /* 0x0004 */ class BUCL::Rtl::CCallDisposition StatusCode;
}; /* size: 0x0008 */

class BUCL::CIsSignedType<signed char>
{
}; /* size: 0x0001 */

class BUCL::CConvertToSignedType<unsigned long>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<unsigned __int64>
{
}; /* size: 0x0001 */

class BUCL::CConvertToUnsignedType<__int64>
{
}; /* size: 0x0001 */

class BUCL::MultiplyHelpers::CPromotedSize<unsigned int>
{
}; /* size: 0x0001 */

class CSafeMoniker
{
  /* 0x0000 */ struct IMoniker* _p;
}; /* size: 0x0008 */

class BUCL::CIsSignedType<unsigned int>
{
}; /* size: 0x0001 */

typedef struct __midl_frag522_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag522_t, *P_midl_frag522_t; /* size: 0x0058 */

typedef struct _CRT_CRITICAL_SECTION
{
  /* 0x0000 */ struct _CRT_CRITICAL_SECTION_DEBUG* DebugInfo;
  /* 0x0008 */ long LockCount;
  /* 0x000c */ long RecursionCount;
  /* 0x0010 */ void* OwningThread;
  /* 0x0018 */ void* LockSemaphore;
  /* 0x0020 */ unsigned long Reserved;
  /* 0x0024 */ long __PADDING__[1];
} CRT_CRITICAL_SECTION, *PCRT_CRITICAL_SECTION; /* size: 0x0028 */

typedef struct __midl_frag192_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag192_t, *P_midl_frag192_t; /* size: 0x0048 */

typedef struct _iinspectablederived_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[395];
  /* 0x018d */ char __PADDING__[1];
} iinspectablederived_MIDL_TYPE_FORMAT_STRING, *Piinspectablederived_MIDL_TYPE_FORMAT_STRING; /* size: 0x018e */

struct CONFIRM_CONFLICT_ITEM
{
  /* 0x0000 */ struct IShellItem2* pShellItem;
  /* 0x0008 */ wchar_t* pszOriginalName;
  /* 0x0010 */ wchar_t* pszAlternateName;
  /* 0x0018 */ wchar_t* pszLocationShort;
  /* 0x0020 */ wchar_t* pszLocationFull;
  /* 0x0028 */ enum SYNCMGR_CONFLICT_ITEM_TYPE nType;
  /* 0x002c */ long __PADDING__[1];
}; /* size: 0x0030 */

class CSafeBYTEArray
{
  /* 0x0000 */ unsigned char* _p;
}; /* size: 0x0008 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWOFOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOFOUCSStream *> >;

class Windows::AutoPointerBase<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >
{
  /* 0x0000 */ struct Windows::Rtl::IRtlWOUCSStream* m_Data;
}; /* size: 0x0008 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlWOUCSStream *,Windows::Auto<Windows::Rtl::IRtlWOUCSStream *> >;

struct ICatInformation
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> >;

class Windows::AutoOperatorAmpersandHelper<Windows::Rtl::IRtlROFOStream *,Windows::Auto<Windows::Rtl::IRtlROFOStream *> >;

class CLimitedStreamBase::Seek::__l3::<lambda_56DB86726463D2C6>;

typedef struct __midl_frag281_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag281_t, *P_midl_frag281_t; /* size: 0x0010 */

class Windows::AutoOperatorAmpersandConstHelper<Windows::Rtl::IRtlUtf8StringBuilder *,Windows::Auto<Windows::Rtl::IRtlUtf8StringBuilder *> >;

struct Windows::ErrorHandling::StatusTypeNTSTATUS
{
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IClipboardBroker>
{
  /* 0x0000 */ struct IClipboardBroker* ptr_;
}; /* size: 0x0008 */

class CClipboardBroker::CClipboardBrokerExternalReference
{
  /* 0x0000 */ long Padding_1488[4];
  /* 0x0010 */ class Microsoft::WRL::ComPtr<IClipboardBroker> _impl;
}; /* size: 0x0018 */

class Windows::ErrorHandling::Rtl::CSimpleNtStatusCarryingFrame
{
}; /* size: 0x0004 */

class Windows::ErrorHandling::CBaseFrame
{
}; /* size: 0x0001 */

class CClassCache::CWinRTLocalSvrClassEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ struct SActivatableClassIdHashNode _hashNode;
      /* 0x0018 */ class CClassCache::CWinRTLocalSvrClassEntry* _pNextLSvr;
      /* 0x0020 */ class CClassCache::CWinRTLocalSvrClassEntry* _pPrevLSvr;
      /* 0x0028 */ class CClassCache::CWinRTLocalSvrClassEntry* _pRegChain;
      /* 0x0030 */ void* _pActivationFactoryCallback /* function */;
      /* 0x0038 */ unsigned long _dwFlags;
      /* 0x003c */ unsigned long _dwScmReg;
      /* 0x0040 */ unsigned long _hApt;
      /* 0x0044 */ struct _GUID _clsid;
      /* 0x0054 */ unsigned long _dwSig;
      /* 0x0058 */ unsigned long _cLocks;
      /* 0x005c */ long Padding_1489;
      /* 0x0060 */ class CObjServer* _pObjServer;
      /* 0x0068 */ struct
      {
      } /* size: 0x0001 */* _cookie;
      /* 0x0070 */ BOOL _suspended;
      /* 0x0071 */ char Padding_1490[3];
      /* 0x0074 */ unsigned long _ulServiceId;
      /* 0x0078 */ const wchar_t* _activatableClassId;
    }; /* size: 0x0079 */
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ const unsigned long DUMMY_SIG;
    /* 0x0000 */ const unsigned long NO_SCM_REG;
    /* 0x0000 */ unsigned long _dwNextCookieCount;
    /* 0x0000 */ unsigned long _cOutstandingObjects;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0079 */
}; /* size: 0x0080 */

class Windows::AutoOperatorAmpersandHelper<_LUTF8_STRING,Windows::Auto<_LUTF8_STRING> >;

typedef struct __midl_frag38_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag38_t, *P_midl_frag38_t; /* size: 0x000c */

class CClassCache::CDllAptEntry
{
  union
  {
    struct
    {
      /* 0x0000 */ class CClassCache::CDllAptEntry* _pNext;
      /* 0x0008 */ class CClassCache::CDllAptEntry* _pPrev;
      /* 0x0010 */ unsigned long _dwSig;
      /* 0x0014 */ unsigned long _hApt;
      /* 0x0018 */ struct HINSTANCE__* _hDll;
    }; /* size: 0x0020 */
    /* 0x0000 */ const unsigned long SIG;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ const unsigned long _cNumPerPage;
  }; /* size: 0x0068 */
}; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IRuntimeBroker> const >;

typedef struct _PORT_INFO_1W
{
  /* 0x0000 */ wchar_t* pName;
} PORT_INFO_1W, *PPORT_INFO_1W; /* size: 0x0008 */

struct WireThisPart2
{
  /* 0x0000 */ struct WireThisPart1 part1;
  /* 0x0020 */ struct WireExtentArray ea;
  /* 0x0038 */ struct WireExtent e;
}; /* size: 0x0050 */

union WireThis
{
  union
  {
    /* 0x0000 */ struct WireThisPart1 c;
    /* 0x0000 */ struct WireThisPart2 d;
  }; /* size: 0x0050 */
}; /* size: 0x0050 */

class RunSyncOnMTAThread::__l6::<lambda_A5D95E4C135FCBCE>;

struct tagAUXCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned short wTechnology;
  /* 0x004a */ unsigned short wReserved1;
  /* 0x004c */ unsigned long dwSupport;
  /* 0x0050 */ struct _GUID ManufacturerGuid;
  /* 0x0060 */ struct _GUID ProductGuid;
  /* 0x0070 */ struct _GUID NameGuid;
}; /* size: 0x0080 */

typedef struct _JOB_INFO_4W
{
  /* 0x0000 */ unsigned long JobId;
  /* 0x0004 */ long Padding_1491;
  /* 0x0008 */ wchar_t* pPrinterName;
  /* 0x0010 */ wchar_t* pMachineName;
  /* 0x0018 */ wchar_t* pUserName;
  /* 0x0020 */ wchar_t* pDocument;
  /* 0x0028 */ wchar_t* pNotifyName;
  /* 0x0030 */ wchar_t* pDatatype;
  /* 0x0038 */ wchar_t* pPrintProcessor;
  /* 0x0040 */ wchar_t* pParameters;
  /* 0x0048 */ wchar_t* pDriverName;
  /* 0x0050 */ struct _devicemodeW* pDevMode;
  /* 0x0058 */ wchar_t* pStatus;
  /* 0x0060 */ void* pSecurityDescriptor;
  /* 0x0068 */ unsigned long Status;
  /* 0x006c */ unsigned long Priority;
  /* 0x0070 */ unsigned long Position;
  /* 0x0074 */ unsigned long StartTime;
  /* 0x0078 */ unsigned long UntilTime;
  /* 0x007c */ unsigned long TotalPages;
  /* 0x0080 */ unsigned long Size;
  /* 0x0084 */ struct _SYSTEMTIME Submitted;
  /* 0x0094 */ unsigned long Time;
  /* 0x0098 */ unsigned long PagesPrinted;
  /* 0x009c */ long SizeHigh;
} JOB_INFO_4W, *PJOB_INFO_4W; /* size: 0x00a0 */

typedef struct _PRINTER_INFO_8W
{
  /* 0x0000 */ struct _devicemodeW* pDevMode;
} PRINTER_INFO_8W, *PPRINTER_INFO_8W; /* size: 0x0008 */

class CTHeapAllocPolicy
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStorage> const >;

typedef struct __midl_frag219_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag219_t, *P_midl_frag219_t; /* size: 0x0010 */

struct sockaddr_in
{
  /* 0x0000 */ short sin_family;
  /* 0x0002 */ unsigned short sin_port;
  /* 0x0004 */ struct in_addr sin_addr;
  /* 0x0008 */ char sin_zero[8];
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> >
{
}; /* size: 0x0008 */

typedef struct __midl_frag217_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag217_t, *P_midl_frag217_t; /* size: 0x000c */

typedef struct _DISK_RECORD
{
  /* 0x0000 */ union _LARGE_INTEGER ByteOffset;
  /* 0x0008 */ union _LARGE_INTEGER StartTime;
  /* 0x0010 */ union _LARGE_INTEGER EndTime;
  /* 0x0018 */ void* VirtualAddress;
  /* 0x0020 */ unsigned long NumberOfBytes;
  /* 0x0024 */ unsigned char DeviceNumber;
  /* 0x0025 */ unsigned char ReadRequest;
  /* 0x0026 */ char __PADDING__[2];
} DISK_RECORD, *PDISK_RECORD; /* size: 0x0028 */

struct IClipboardBroker
{
}; /* size: 0x0008 */

typedef struct _HISTOGRAM_BUCKET
{
  /* 0x0000 */ unsigned long Reads;
  /* 0x0004 */ unsigned long Writes;
} HISTOGRAM_BUCKET, *PHISTOGRAM_BUCKET; /* size: 0x0008 */

struct APP_DATA::FreeListElem
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_1492;
  /* 0x0008 */ void* pvData;
}; /* size: 0x0010 */

struct APP_DATA::FreeList
{
  /* 0x0000 */ struct APP_DATA::FreeListElem rgFreeList[6];
}; /* size: 0x0060 */

typedef struct _STORAGE_BUS_RESET_REQUEST
{
  /* 0x0000 */ unsigned char PathId;
} STORAGE_BUS_RESET_REQUEST, *PSTORAGE_BUS_RESET_REQUEST; /* size: 0x0001 */

typedef struct _MONITOR_INFO_1A
{
  /* 0x0000 */ char* pName;
} MONITOR_INFO_1A, *PMONITOR_INFO_1A; /* size: 0x0008 */

typedef struct _DOC_INFO_3A
{
  /* 0x0000 */ char* pDocName;
  /* 0x0008 */ char* pOutputFile;
  /* 0x0010 */ char* pDatatype;
  /* 0x0018 */ unsigned long dwFlags;
  /* 0x001c */ long __PADDING__[1];
} DOC_INFO_3A, *PDOC_INFO_3A; /* size: 0x0020 */

struct ICallIndirect
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> const >;

struct tMIXERCONTROLDETAILS_SIGNED
{
  /* 0x0000 */ long lValue;
}; /* size: 0x0004 */

typedef struct _EFS_PIN_BLOB
{
  /* 0x0000 */ unsigned long cbPadding;
  /* 0x0004 */ unsigned long cbData;
  /* 0x0008 */ unsigned char* pbData;
} EFS_PIN_BLOB, *PEFS_PIN_BLOB; /* size: 0x0010 */

typedef struct _PRINTER_ENUM_VALUESW
{
  /* 0x0000 */ wchar_t* pValueName;
  /* 0x0008 */ unsigned long cbValueName;
  /* 0x000c */ unsigned long dwType;
  /* 0x0010 */ unsigned char* pData;
  /* 0x0018 */ unsigned long cbData;
  /* 0x001c */ long __PADDING__[1];
} PRINTER_ENUM_VALUESW, *PPRINTER_ENUM_VALUESW; /* size: 0x0020 */

struct tagMCI_ANIM_WINDOW_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ struct HWND__* hWnd;
  /* 0x0010 */ unsigned int nCmdShow;
  /* 0x0014 */ const char* lpstrText;
}; /* size: 0x001c */

struct INdrVersion
{
}; /* size: 0x0008 */

struct tagMCI_LOAD_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const char* lpfilename;
}; /* size: 0x0010 */

typedef struct _BIDI_REQUEST_CONTAINER
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Flags;
  /* 0x0008 */ unsigned long Count;
  /* 0x000c */ long Padding_1493;
  /* 0x0010 */ struct _BIDI_REQUEST_DATA aData[1];
} BIDI_REQUEST_CONTAINER, *PBIDI_REQUEST_CONTAINER; /* size: 0x0038 */

typedef struct _PRINTER_INFO_7W
{
  /* 0x0000 */ wchar_t* pszObjectGUID;
  /* 0x0008 */ unsigned long dwAction;
  /* 0x000c */ long __PADDING__[1];
} PRINTER_INFO_7W, *PPRINTER_INFO_7W; /* size: 0x0010 */

struct tagMCI_OVLY_LOAD_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const char* lpfilename;
  /* 0x0010 */ struct tagRECT rc;
}; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IInspectable> >;

typedef struct _STORAGE_DEVICE_NUMBER
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long DeviceNumber;
  /* 0x0008 */ unsigned long PartitionNumber;
} STORAGE_DEVICE_NUMBER, *PSTORAGE_DEVICE_NUMBER; /* size: 0x000c */

typedef struct _EFS_RPC_BLOB
{
  /* 0x0000 */ unsigned long cbData;
  /* 0x0004 */ long Padding_1494;
  /* 0x0008 */ unsigned char* pbData;
} EFS_RPC_BLOB, *PEFS_RPC_BLOB; /* size: 0x0010 */

struct Microsoft::WRL::Wrappers::HandleTraits::SRWLockExclusiveTraits
{
}; /* size: 0x0001 */

typedef struct _ENCRYPTION_CERTIFICATE_HASH_LIST
{
  /* 0x0000 */ unsigned long nCert_Hash;
  /* 0x0004 */ long Padding_1495;
  /* 0x0008 */ struct _ENCRYPTION_CERTIFICATE_HASH** pUsers;
} ENCRYPTION_CERTIFICATE_HASH_LIST, *PENCRYPTION_CERTIFICATE_HASH_LIST; /* size: 0x0010 */

typedef struct _READ_ELEMENT_ADDRESS_INFO
{
  /* 0x0000 */ unsigned long NumberOfElements;
  /* 0x0004 */ struct _CHANGER_ELEMENT_STATUS ElementStatus[1];
} READ_ELEMENT_ADDRESS_INFO, *PREAD_ELEMENT_ADDRESS_INFO; /* size: 0x0068 */

typedef struct _GET_MEDIA_TYPES
{
  /* 0x0000 */ unsigned long DeviceType;
  /* 0x0004 */ unsigned long MediaInfoCount;
  /* 0x0008 */ struct _DEVICE_MEDIA_INFO MediaInfo[1];
} GET_MEDIA_TYPES, *PGET_MEDIA_TYPES; /* size: 0x0028 */

struct DISPATCH_INTERCEPTOR
{
}; /* size: 0x00d0 */

struct tagMIXERCAPS2W
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ wchar_t szPname[32];
  /* 0x0048 */ unsigned long fdwSupport;
  /* 0x004c */ unsigned long cDestinations;
  /* 0x0050 */ struct _GUID ManufacturerGuid;
  /* 0x0060 */ struct _GUID ProductGuid;
  /* 0x0070 */ struct _GUID NameGuid;
}; /* size: 0x0080 */

typedef struct _FIND_NAME_BUFFER
{
  /* 0x0000 */ unsigned char length;
  /* 0x0001 */ unsigned char access_control;
  /* 0x0002 */ unsigned char frame_control;
  /* 0x0003 */ unsigned char destination_addr[6];
  /* 0x0009 */ unsigned char source_addr[6];
  /* 0x000f */ unsigned char routing_info[18];
} FIND_NAME_BUFFER, *PFIND_NAME_BUFFER; /* size: 0x0021 */

class CAutoHandle_Policy<void *>
{
}; /* size: 0x0001 */

typedef struct _DISK_DETECTION_INFO
{
  /* 0x0000 */ unsigned long SizeOfDetectInfo;
  /* 0x0004 */ enum _DETECTION_TYPE DetectionType;
  /* 0x0008 */ struct _DISK_INT13_INFO Int13;
  /* 0x0018 */ struct _DISK_EX_INT13_INFO ExInt13;
} DISK_DETECTION_INFO, *PDISK_DETECTION_INFO; /* size: 0x0038 */

typedef struct _DEVICE_POWER_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned char DeviceAttentionSupported;
  /* 0x0009 */ unsigned char AsynchronousNotificationSupported;
  /* 0x000a */ unsigned char IdlePowerManagementEnabled;
  /* 0x000b */ unsigned char D3ColdEnabled;
  /* 0x000c */ unsigned char D3ColdSupported;
  /* 0x000d */ unsigned char Reserved[3];
  /* 0x0010 */ unsigned long IdleTimeoutInMS;
} DEVICE_POWER_DESCRIPTOR, *PDEVICE_POWER_DESCRIPTOR; /* size: 0x0014 */

struct tagMIDIINCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long dwSupport;
}; /* size: 0x002c */

struct tagMCI_VD_PLAY_PARMS
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ unsigned long dwFrom;
  /* 0x000c */ unsigned long dwTo;
  /* 0x0010 */ unsigned long dwSpeed;
}; /* size: 0x0014 */

typedef struct _DRIVER_INFO_1W
{
  /* 0x0000 */ wchar_t* pName;
} DRIVER_INFO_1W, *PDRIVER_INFO_1W; /* size: 0x0008 */

struct tagMIXERLINECONTROLSA
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwLineID;
  union
  {
    /* 0x0008 */ unsigned long dwControlID;
    /* 0x0008 */ unsigned long dwControlType;
  }; /* size: 0x0004 */
  /* 0x000c */ unsigned long cControls;
  /* 0x0010 */ unsigned long cbmxctrl;
  /* 0x0014 */ struct tagMIXERCONTROLA* pamxctrl;
}; /* size: 0x001c */

struct tagWAVEINCAPSA
{
  /* 0x0000 */ unsigned short wMid;
  /* 0x0002 */ unsigned short wPid;
  /* 0x0004 */ unsigned int vDriverVersion;
  /* 0x0008 */ char szPname[32];
  /* 0x0028 */ unsigned long dwFormats;
  /* 0x002c */ unsigned short wChannels;
  /* 0x002e */ unsigned short wReserved1;
}; /* size: 0x0030 */

typedef struct _FORM_INFO_1W
{
  /* 0x0000 */ unsigned long Flags;
  /* 0x0004 */ long Padding_1496;
  /* 0x0008 */ wchar_t* pName;
  /* 0x0010 */ struct tagSIZE Size;
  /* 0x0018 */ struct _RECTL ImageableArea;
} FORM_INFO_1W, *PFORM_INFO_1W; /* size: 0x0028 */

struct joyinfo_tag
{
  /* 0x0000 */ unsigned int wXpos;
  /* 0x0004 */ unsigned int wYpos;
  /* 0x0008 */ unsigned int wZpos;
  /* 0x000c */ unsigned int wButtons;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> >
{
}; /* size: 0x0008 */

struct midiproptimediv_tag
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwTimeDiv;
}; /* size: 0x0008 */

struct tagFINDREPLACEW
{
  /* 0x0000 */ unsigned long lStructSize;
  /* 0x0004 */ long Padding_1497;
  /* 0x0008 */ struct HWND__* hwndOwner;
  /* 0x0010 */ struct HINSTANCE__* hInstance;
  /* 0x0018 */ unsigned long Flags;
  /* 0x001c */ long Padding_1498;
  /* 0x0020 */ wchar_t* lpstrFindWhat;
  /* 0x0028 */ wchar_t* lpstrReplaceWith;
  /* 0x0030 */ unsigned short wFindWhatLen;
  /* 0x0032 */ unsigned short wReplaceWithLen;
  /* 0x0034 */ long Padding_1499;
  /* 0x0038 */ __int64 lCustData;
  /* 0x0040 */ void* lpfnHook /* function */;
  /* 0x0048 */ const wchar_t* lpTemplateName;
}; /* size: 0x0050 */

typedef struct _STORAGE_OFFLOAD_WRITE_OUTPUT
{
  /* 0x0000 */ unsigned long OffloadWriteFlags;
  /* 0x0004 */ unsigned long Reserved;
  /* 0x0008 */ unsigned __int64 LengthCopied;
} STORAGE_OFFLOAD_WRITE_OUTPUT, *PSTORAGE_OFFLOAD_WRITE_OUTPUT; /* size: 0x0010 */

class COleStaticLock
{
  /* 0x0000 */ class COleStaticMutexSem& _mxs;
}; /* size: 0x0008 */

typedef struct _ADAPTER_STATUS
{
  /* 0x0000 */ unsigned char adapter_address[6];
  /* 0x0006 */ unsigned char rev_major;
  /* 0x0007 */ unsigned char reserved0;
  /* 0x0008 */ unsigned char adapter_type;
  /* 0x0009 */ unsigned char rev_minor;
  /* 0x000a */ unsigned short duration;
  /* 0x000c */ unsigned short frmr_recv;
  /* 0x000e */ unsigned short frmr_xmit;
  /* 0x0010 */ unsigned short iframe_recv_err;
  /* 0x0012 */ unsigned short xmit_aborts;
  /* 0x0014 */ unsigned long xmit_success;
  /* 0x0018 */ unsigned long recv_success;
  /* 0x001c */ unsigned short iframe_xmit_err;
  /* 0x001e */ unsigned short recv_buff_unavail;
  /* 0x0020 */ unsigned short t1_timeouts;
  /* 0x0022 */ unsigned short ti_timeouts;
  /* 0x0024 */ unsigned long reserved1;
  /* 0x0028 */ unsigned short free_ncbs;
  /* 0x002a */ unsigned short max_cfg_ncbs;
  /* 0x002c */ unsigned short max_ncbs;
  /* 0x002e */ unsigned short xmit_buf_unavail;
  /* 0x0030 */ unsigned short max_dgram_size;
  /* 0x0032 */ unsigned short pending_sess;
  /* 0x0034 */ unsigned short max_cfg_sess;
  /* 0x0036 */ unsigned short max_sess;
  /* 0x0038 */ unsigned short max_sess_pkt_size;
  /* 0x003a */ unsigned short name_count;
} ADAPTER_STATUS, *PADAPTER_STATUS; /* size: 0x003c */

typedef struct _PERF_COUNTER_BLOCK
{
  /* 0x0000 */ unsigned long ByteLength;
} PERF_COUNTER_BLOCK, *PPERF_COUNTER_BLOCK; /* size: 0x0004 */

struct VerbList
{
  /* 0x0000 */ unsigned long cRef;
  /* 0x0004 */ struct _GUID clsid;
  /* 0x0014 */ unsigned long cVerbs;
  /* 0x0018 */ struct tagOLEVERB oleverb[1];
}; /* size: 0x0030 */

struct OPENCARD_SEARCH_CRITERIAW
{
  /* 0x0000 */ unsigned long dwStructSize;
  /* 0x0004 */ long Padding_1500;
  /* 0x0008 */ wchar_t* lpstrGroupNames;
  /* 0x0010 */ unsigned long nMaxGroupNames;
  /* 0x0014 */ long Padding_1501;
  /* 0x0018 */ const struct _GUID* rgguidInterfaces;
  /* 0x0020 */ unsigned long cguidInterfaces;
  /* 0x0024 */ long Padding_1502;
  /* 0x0028 */ wchar_t* lpstrCardNames;
  /* 0x0030 */ unsigned long nMaxCardNames;
  /* 0x0034 */ long Padding_1503;
  /* 0x0038 */ void* lpfnCheck /* function */;
  /* 0x0040 */ void* lpfnConnect /* function */;
  /* 0x0048 */ void* lpfnDisconnect /* function */;
  /* 0x0050 */ void* pvUserData;
  /* 0x0058 */ unsigned long dwShareMode;
  /* 0x005c */ unsigned long dwPreferredProtocols;
}; /* size: 0x0060 */

class SafeCastHelper<unsigned long,unsigned long,0>
{
}; /* size: 0x0001 */

typedef struct _STORAGE_DEVICE_RESILIENCY_DESCRIPTOR
{
  /* 0x0000 */ unsigned long Version;
  /* 0x0004 */ unsigned long Size;
  /* 0x0008 */ unsigned long NameOffset;
  /* 0x000c */ unsigned long NumberOfLogicalCopies;
  /* 0x0010 */ unsigned long NumberOfPhysicalCopies;
  /* 0x0014 */ unsigned long PhysicalDiskRedundancy;
  /* 0x0018 */ unsigned long NumberOfColumns;
  /* 0x001c */ unsigned long Interleave;
} STORAGE_DEVICE_RESILIENCY_DESCRIPTOR, *PSTORAGE_DEVICE_RESILIENCY_DESCRIPTOR; /* size: 0x0020 */

struct HDRVR__
{
  /* 0x0000 */ int unused;
}; /* size: 0x0004 */

typedef struct _DISK_LOGGING
{
  /* 0x0000 */ unsigned char Function;
  /* 0x0001 */ char Padding_1504[7];
  /* 0x0008 */ void* BufferAddress;
  /* 0x0010 */ unsigned long BufferSize;
  /* 0x0014 */ long __PADDING__[1];
} DISK_LOGGING, *PDISK_LOGGING; /* size: 0x0018 */

struct tagMCI_OVLY_SAVE_PARMSA
{
  /* 0x0000 */ unsigned __int64 dwCallback;
  /* 0x0008 */ const char* lpfilename;
  /* 0x0010 */ struct tagRECT rc;
}; /* size: 0x0020 */

typedef struct __midl_frag1560_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1560_t, *P_midl_frag1560_t; /* size: 0x0038 */

typedef struct _DISK_PERFORMANCE
{
  /* 0x0000 */ union _LARGE_INTEGER BytesRead;
  /* 0x0008 */ union _LARGE_INTEGER BytesWritten;
  /* 0x0010 */ union _LARGE_INTEGER ReadTime;
  /* 0x0018 */ union _LARGE_INTEGER WriteTime;
  /* 0x0020 */ union _LARGE_INTEGER IdleTime;
  /* 0x0028 */ unsigned long ReadCount;
  /* 0x002c */ unsigned long WriteCount;
  /* 0x0030 */ unsigned long QueueDepth;
  /* 0x0034 */ unsigned long SplitCount;
  /* 0x0038 */ union _LARGE_INTEGER QueryTime;
  /* 0x0040 */ unsigned long StorageDeviceNumber;
  /* 0x0044 */ wchar_t StorageManagerName[8];
  /* 0x0054 */ long __PADDING__[1];
} DISK_PERFORMANCE, *PDISK_PERFORMANCE; /* size: 0x0058 */

class CRIFTable
{
  union
  {
    /* 0x0000 */ int _fPreFilled;
    /* 0x0000 */ class CUUIDHashTable _HashTbl;
    /* 0x0000 */ class CPageAllocator _palloc;
    /* 0x0000 */ class COleStaticMutexSem _mxs;
  }; /* size: 0x0068 */
}; /* size: 0x0001 */

struct IAdviseSink
{
}; /* size: 0x0008 */

class CReadOnlyStorage::EnumElements::__l3::<lambda_EDF4E34D1FFC32DE>;

class CEnumCategoriesOfClass
{
  /* 0x0000 */ long Padding_1505[2];
  /* 0x0008 */ unsigned long m_dwRefCount;
  /* 0x000c */ int m_bMapOldKeys;
  /* 0x0010 */ struct HKEY__* m_hKey;
  /* 0x0018 */ unsigned long m_dwIndex;
  /* 0x001c */ long Padding_1506;
  /* 0x0020 */ struct HKEY__* m_hKeyCats;
  /* 0x0028 */ unsigned long m_dwOldKeyIndex;
  /* 0x002c */ long Padding_1507;
  /* 0x0030 */ struct IUnknown* m_pCloned;
}; /* size: 0x0038 */

class CLock2
{
  /* 0x0000 */ class CMutexSem2& m_mxs;
}; /* size: 0x0008 */

struct SMIPIDHashNode
{
  /* 0x0000 */ struct SHashChain chain;
  /* 0x0010 */ struct MIPID mipid;
}; /* size: 0x0030 */

class CEnumGeneric
{
  /* 0x0000 */ long Padding_1508[2];
  /* 0x0008 */ struct _GUID m_iid;
  /* 0x0018 */ unsigned long m_refs;
  /* 0x001c */ unsigned long m_dwCurrent;
  /* 0x0020 */ unsigned long m_dwDirection;
  /* 0x0024 */ long Padding_1509;
  /* 0x0028 */ struct IEnumCallback* m_pEnumCallback;
  /* 0x0030 */ struct IEnumHolder* m_pParent;
  /* 0x0038 */ struct IEnumGeneric* m_pNext;
  /* 0x0040 */ struct IEnumGeneric* m_pPrev;
}; /* size: 0x0048 */

struct tagTYPEATTR
{
  /* 0x0000 */ struct _GUID guid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ unsigned long dwReserved;
  /* 0x0018 */ long memidConstructor;
  /* 0x001c */ long memidDestructor;
  /* 0x0020 */ wchar_t* lpstrSchema;
  /* 0x0028 */ unsigned long cbSizeInstance;
  /* 0x002c */ enum tagTYPEKIND typekind;
  /* 0x0030 */ unsigned short cFuncs;
  /* 0x0032 */ unsigned short cVars;
  /* 0x0034 */ unsigned short cImplTypes;
  /* 0x0036 */ unsigned short cbSizeVft;
  /* 0x0038 */ unsigned short cbAlignment;
  /* 0x003a */ unsigned short wTypeFlags;
  /* 0x003c */ unsigned short wMajorVerNum;
  /* 0x003e */ unsigned short wMinorVerNum;
  /* 0x0040 */ struct tagTYPEDESC tdescAlias;
  /* 0x0050 */ struct tagIDLDESC idldescType;
}; /* size: 0x0060 */

struct tagSECTIONHEADER
{
  /* 0x0000 */ unsigned long cbSection;
  /* 0x0004 */ unsigned long cProperties;
}; /* size: 0x0008 */

class CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>
{
  /* 0x0000 */ struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc** m_pHashTable;
  /* 0x0008 */ unsigned int m_nHashTableSize;
  /* 0x000c */ int m_nCount;
  /* 0x0010 */ struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc* m_pFreeList;
  /* 0x0018 */ struct CPlex* m_pBlocks;
  /* 0x0020 */ int m_nBlockSize;
}; /* size: 0x0028 */

class CPropertySection
{
  /* 0x0000 */ struct _GUID m_FormatID;
  /* 0x0010 */ struct tagSECTIONHEADER m_SH;
  /* 0x0018 */ class CArray<CProperty *,CProperty * &> m_PropList;
  /* 0x0030 */ class CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &> m_NameDict;
  /* 0x0058 */ wchar_t* m_pwszSectionName;
}; /* size: 0x0060 */

class CDDEServer
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ unsigned long m_dwClassFactoryKey;
  /* 0x0014 */ long Padding_1510;
  /* 0x0018 */ struct IClassFactory* m_pClassFactory;
  /* 0x0020 */ class CDdeServerCallMgr m_pCallMgr;
  /* 0x0048 */ int m_bTerminate;
  /* 0x004c */ long Padding_1511;
  /* 0x0050 */ struct HWND__* m_hwnd;
  /* 0x0058 */ void* m_hcli;
  /* 0x0060 */ int m_termNo;
  /* 0x0064 */ int m_cSrvrClients;
  /* 0x0068 */ unsigned long m_fcfFlags;
  /* 0x006c */ enum CNVTYP m_cnvtyp;
  /* 0x0070 */ enum CHK m_chk;
  /* 0x0074 */ unsigned short m_aClass;
  /* 0x0076 */ unsigned short m_aOriginalClass;
  /* 0x0078 */ unsigned short m_aExe;
  /* 0x007a */ char Padding_1512[2];
  /* 0x007c */ int m_fDoNotDestroyWindow;
}; /* size: 0x0080 */

struct CFont::Save::__l2::FONTDATA
{
  /* 0x0000 */ unsigned char bVer;
  /* 0x0001 */ short sCharset;
  /* 0x0003 */ unsigned char bFlags;
  /* 0x0004 */ short sWeight;
  /* 0x0006 */ unsigned long ulHeight;
  /* 0x000a */ unsigned char bFaceLen;
}; /* size: 0x000b */

typedef struct _ldiv_t
{
  /* 0x0000 */ long quot;
  /* 0x0004 */ long rem;
} ldiv_t, *Pldiv_t; /* size: 0x0008 */

class CRgPv
{
  /* 0x0000 */ unsigned int m_cElems;
  /* 0x0004 */ long Padding_1513;
  union
  {
    /* 0x0008 */ void* m_pv;
    /* 0x0008 */ void** m_rgpv;
  }; /* size: 0x0008 */
}; /* size: 0x0010 */

class CEnumConnectionsImpl
{
  /* 0x0000 */ long Padding_1514[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long m_curidx;
  /* 0x0010 */ class CRgPv m_rgpv;
}; /* size: 0x0020 */

struct SPatternEntry
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long ulEntryLen;
  /* 0x0014 */ long lFileOffset;
  /* 0x0018 */ unsigned long ulCb;
  /* 0x001c */ unsigned char abData[4];
}; /* size: 0x0020 */

class CDAHolder
{
  /* 0x0000 */ long Padding_1515[8];
  /* 0x0020 */ unsigned long m_dwConnection;
  /* 0x0024 */ int m_iSize;
  /* 0x0028 */ struct tagSTATDATA* m_pSD;
}; /* size: 0x0030 */

class SafeIntException
{
  /* 0x0000 */ enum SafeIntError m_code;
}; /* size: 0x0004 */

class CReadInterfaceDataFromInternalSourceMarshalingStream
{
}; /* size: 0x0030 */

class CSplit_QI
{
  /* 0x0000 */ struct tagMInterfacePointer* SomePMItfPtrs[2];
  /* 0x0010 */ HRESULT SomeHRs[2];
  /* 0x0018 */ struct _GUID SomeIIDs[2];
  /* 0x0038 */ unsigned long _dwCount;
  /* 0x003c */ long Padding_1516;
  /* 0x0040 */ char* _pAllocBlock;
  /* 0x0048 */ struct tagMInterfacePointer** _pItfArray;
  /* 0x0050 */ HRESULT* _pHrArray;
  /* 0x0058 */ struct _GUID* _pIIDArray;
}; /* size: 0x0060 */

class Microsoft::WRL::WeakRef
{
}; /* size: 0x0008 */

struct CONFLICT_ITEM_METADATA
{
  /* 0x0000 */ struct _FILETIME ftDateModified;
  /* 0x0008 */ unsigned __int64 ullSize;
  /* 0x0010 */ wchar_t* pszItemName;
  /* 0x0018 */ wchar_t* pszItemPath;
  /* 0x0020 */ int fHasConnectedElement;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IInspectable>;

struct std::nothrow_t
{
}; /* size: 0x0001 */

struct ClpboardOwnerState
{
  /* 0x0000 */ struct _TP_WAIT* waiter;
  /* 0x0008 */ void* hProcess;
}; /* size: 0x0010 */

struct Microsoft::WRL::Wrappers::HandleTraits::HANDLETraits
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Wrappers::HandleTraits::CriticalSectionTraits
{
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<ICallingProcessInfo> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<ICallingProcessInfo>* ptr_;
}; /* size: 0x0008 */

struct RTL_FILTER_LUNICODE_STRING_FILTER
{
  /* 0x0000 */ void* Transform /* function */;
  /* 0x0008 */ void* Match /* function */;
  /* 0x0010 */ void* MatchContext;
  /* 0x0018 */ unsigned char DropHighUnicodeValues;
  /* 0x0019 */ unsigned char MatchFirst;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

class CCallTable
{
  union
  {
    /* 0x0000 */ unsigned long m_cCalls;
    /* 0x0000 */ int m_fInitialized;
    /* 0x0000 */ class CPageAllocator m_Allocator;
  }; /* size: 0x0068 */
}; /* size: 0x0004 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IDataObject> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IDataObject>* ptr_;
}; /* size: 0x0008 */

class COIDTable
{
  union
  {
    /* 0x0000 */ int s_fInitialized;
    /* 0x0000 */ class COIDHashTable s_OIDHashTbl;
    /* 0x0000 */ struct SHashChain s_OIDBuckets[23];
    /* 0x0000 */ unsigned long s_UnpinReqsPending;
    /* 0x0000 */ struct SHashChain s_OIDUnpinRequests;
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

struct CMemString_PolicyLocalMem
{
}; /* size: 0x0001 */

struct tagQICONTEXT
{
  /* 0x0000 */ unsigned long dwFlags;
  /* 0x0004 */ long Padding_1517;
  /* 0x0008 */ struct AsyncIRemUnknown2* pARU;
  /* 0x0010 */ unsigned short cIIDs;
  /* 0x0012 */ char Padding_1518[6];
  /* 0x0018 */ struct _GUID* pIIDs;
  /* 0x0020 */ HRESULT hr;
  /* 0x0024 */ long Padding_1519;
  /* 0x0028 */ struct tagREMQIRESULT* pRemQiRes;
  /* 0x0030 */ struct tagIPIDEntry* pIPIDEntry;
  /* 0x0038 */ struct IMarshal* pIM;
  /* 0x0040 */ HRESULT* phr;
  /* 0x0048 */ struct tagMInterfacePointer** ppMIFs;
  /* 0x0050 */ unsigned char data[1];
  /* 0x0051 */ char __PADDING__[7];
}; /* size: 0x0058 */

class CtxEntry;

class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >::InitializeFormat::__l3::<lambda_8D5FB22F65A17B6>;

struct tagFORMATETC32
{
  /* 0x0000 */ unsigned short cfFormat;
  /* 0x0002 */ char Padding_1520[2];
  /* 0x0004 */ unsigned long ptd;
  /* 0x0008 */ unsigned long dwAspect;
  /* 0x000c */ long lindex;
  /* 0x0010 */ unsigned long tymed;
}; /* size: 0x0014 */

struct FORMATETCDATA32
{
  /* 0x0000 */ struct tagFORMATETC32 _FormatEtc;
  /* 0x0014 */ int fSaveOnFlush;
  /* 0x0018 */ unsigned long dwReserved1;
  /* 0x001c */ unsigned long dwReserved2;
}; /* size: 0x0020 */

class CClassCache
{
  union
  {
    /* 0x0000 */ unsigned long _dwFlags;
    /* 0x0000 */ class CRWLock _mxs;
    /* 0x0000 */ class CClassCache::CCEHashTable _ClassEntries;
    /* 0x0000 */ class CActivatableClassIdHashTable _LSvrActivatableClassEntries;
    /* 0x0000 */ class CActivatableClassIdHashTable _InprocActivatableClassEntries;
    /* 0x0000 */ class CClassCache::CDPEHashTable _DllPathEntries;
    /* 0x0000 */ const unsigned long _cCEBuckets;
    /* 0x0000 */ const unsigned long _cLSvrActivatableClassEBuckets;
    /* 0x0000 */ const unsigned long _cInprocActivatableClassEBuckets;
    /* 0x0000 */ const unsigned long _cDPEBuckets;
    /* 0x0000 */ struct SHashChain _CEBuckets[23];
    /* 0x0000 */ struct SHashChain _LSvrActivatableClassEBuckets[23];
    /* 0x0000 */ struct SHashChain _InprocActivatableClassEBuckets[23];
    /* 0x0000 */ struct SHashChain _DPEBuckets[23];
    /* 0x0000 */ class CClassCache::CLSvrClassEntry* _MTALSvrsFront;
    /* 0x0000 */ class CClassCache::CLSvrClassEntry* _NTALSvrsFront;
    /* 0x0000 */ unsigned long _cRefsServerProcess;
    /* 0x0000 */ void* _hSuspended;
    /* 0x0000 */ unsigned long _dwDelayMilliseconds;
    /* 0x0000 */ struct _TP_TIMER* _ShutdownDelayTimer;
    /* 0x0000 */ int _bCanceledTimer;
    /* 0x0000 */ class CClassCache::CServiceRefEntry* _ServiceRefsFront;
    /* 0x0000 */ class CClassCache::CWinRTLocalSvrClassEntry* _STAWinRTLSvrsFront;
    /* 0x0000 */ class CClassCache::CWinRTLocalSvrClassEntry* _MTAWinRTLSvrsFront;
    /* 0x0000 */ const unsigned long _CollectAtObjectCount;
    /* 0x0000 */ const unsigned long _CollectAtInterval;
    /* 0x0000 */ unsigned long _LastCollectionTickCount;
    /* 0x0000 */ unsigned long _LastObjectCount;
    /* 0x0000 */ class CClassCache::CCollectable* _ObjectsForCollection;
  }; /* size: 0x0170 */
}; /* size: 0x0001 */

class Microsoft::WRL::ComPtr<IEnumFORMATETC>
{
  /* 0x0000 */ struct IEnumFORMATETC* ptr_;
}; /* size: 0x0008 */

struct ICallFrameEvents
{
}; /* size: 0x0008 */

class CWrapperBase<IEnumFORMATETC>
{
  /* 0x0000 */ long Padding_1521[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumFORMATETC> m_pInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_pPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

struct LEGACY_INTERCEPTOR
{
  /* 0x0000 */ long Padding_1522[16];
  /* 0x0040 */ struct ICallFrameEvents* m_psink;
  /* 0x0048 */ struct _GUID m_iid;
  /* 0x0058 */ unsigned long m_cMethods;
  /* 0x005c */ long Padding_1523;
  /* 0x0060 */ struct XLOCK_LEAF m_frameLock;
  /* 0x0090 */ struct ICallFrame** m_ppframeCustomer;
  /* 0x0098 */ struct ICallInterceptor* m_premoteInterceptor;
  /* 0x00a0 */ int m_fRegdWithRemoteInterceptor;
  /* 0x00a4 */ long Padding_1524;
  /* 0x00a8 */ struct ICallInterceptor* m_pmemoryInterceptor;
  /* 0x00b0 */ int m_fRegdWithMemoryInterceptor;
  /* 0x00b4 */ long Padding_1525;
  /* 0x00b8 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x00c0 */ struct IUnknown* m_punkOuter;
  /* 0x00c8 */ long m_refs;
  /* 0x00cc */ int m_fShuttingDown;
}; /* size: 0x00d0 */

class CClassCache::CFinishComposite
{
  /* 0x0000 */ struct CClassCache::CFinishComposite::node* _pFinishNodesFront;
  /* 0x0008 */ struct CClassCache::CFinishComposite::node* _pFinishNodesBack;
}; /* size: 0x0010 */

struct OLEAUTOMATION_FUNCTIONS
{
  /* 0x0000 */ struct HINSTANCE__* hOleAut32;
  /* 0x0008 */ int fProcAddressesLoaded;
  /* 0x000c */ long Padding_1526;
  /* 0x0010 */ struct _USER_MARSHAL_ROUTINE_QUADRUPLE UserMarshalRoutines[3];
}; /* size: 0x0070 */

class MapEnumToSQMData<enum Ole32SQMFlags>
{
}; /* size: 0x0001 */

class IInternalChannelBuffer
{
}; /* size: 0x0010 */

class CAutoHandle_Policy<HFONT__ *>
{
}; /* size: 0x0001 */

typedef struct __midl_frag1316_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1316_t, *P_midl_frag1316_t; /* size: 0x0048 */

struct SNameKey
{
  /* 0x0000 */ const struct _GUID* pIpid;
  /* 0x0008 */ struct tagSECURITYBINDING* pName;
}; /* size: 0x0010 */

class CLimitedStreamBase
{
}; /* size: 0x0020 */

class CMarshalingStreamOnUserMarshalCallback
{
  /* 0x0000 */ long Padding_1527[12];
  /* 0x0030 */ struct _USER_MARSHAL_CB* const _pContext;
}; /* size: 0x0038 */

class CEnumVerb
{
  /* 0x0000 */ long Padding_1528[2];
  /* 0x0008 */ unsigned long m_cRef;
  /* 0x000c */ long m_iVerb;
  /* 0x0010 */ struct VerbList* m_VerbList;
}; /* size: 0x0018 */

class CDefLink::CPrivUnknown
{
}; /* size: 0x0008 */

class CWrapperBase<IUnknown>::{dtor}::__l3::<lambda_E5C33FFF9ACC27CD>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

typedef struct __midl_frag111_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag111_t, *P_midl_frag111_t; /* size: 0x0028 */

typedef struct __midl_frag117_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag117_t, *P_midl_frag117_t; /* size: 0x0038 */

typedef struct __midl_frag62_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag62_t, *P_midl_frag62_t; /* size: 0x0038 */

typedef struct _NDR64_USER_MARSHAL_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Flags;
  /* 0x0002 */ unsigned short RoutineIndex;
  /* 0x0004 */ unsigned short TransmittedTypeWireAlignment;
  /* 0x0006 */ unsigned short MemoryAlignment;
  /* 0x0008 */ unsigned int UserTypeMemorySize;
  /* 0x000c */ unsigned int TransmittedTypeBufferSize;
  /* 0x0010 */ const void* TransmittedType;
} NDR64_USER_MARSHAL_FORMAT, *PNDR64_USER_MARSHAL_FORMAT; /* size: 0x0018 */

class CWrapperBase<IStorage>::{dtor}::__l3::<lambda_F81FF86945D4F89B>
{
  /* 0x0000 */ struct IUnknown*& pInner;
}; /* size: 0x0008 */

typedef struct __midl_frag8_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag8_t, *P_midl_frag8_t; /* size: 0x0010 */

typedef struct __midl_frag17_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag17_t, *P_midl_frag17_t; /* size: 0x000c */

typedef struct __midl_frag597_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag597_t, *P_midl_frag597_t; /* size: 0x000c */

struct IEnumGeneric
{
}; /* size: 0x0008 */

typedef struct __midl_frag1426_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1426_t, *P_midl_frag1426_t; /* size: 0x0048 */

typedef struct __midl_frag180_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag180_t, *P_midl_frag180_t; /* size: 0x0038 */

typedef struct __midl_frag1221_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1221_t, *P_midl_frag1221_t; /* size: 0x0038 */

typedef struct __midl_frag1795_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1795_t, *P_midl_frag1795_t; /* size: 0x0058 */

typedef struct __midl_frag1866_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1866_t, *P_midl_frag1866_t; /* size: 0x0068 */

typedef struct __midl_frag720_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag720_t, *P_midl_frag720_t; /* size: 0x0038 */

typedef struct __midl_frag1539_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1539_t, *P_midl_frag1539_t; /* size: 0x0008 */

typedef struct __midl_frag431_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag431_t, *P_midl_frag431_t; /* size: 0x0058 */

typedef struct __midl_frag1650_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1650_t, *P_midl_frag1650_t; /* size: 0x000c */

typedef struct __midl_frag1615_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag1615_t, *P_midl_frag1615_t; /* size: 0x0010 */

typedef struct __midl_frag1726_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1726_t, *P_midl_frag1726_t; /* size: 0x0048 */

typedef struct __midl_frag29_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag29_t, *P_midl_frag29_t; /* size: 0x0038 */

typedef struct __midl_frag1417_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1417_t, *P_midl_frag1417_t; /* size: 0x0038 */

typedef struct __midl_frag1837_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1837_t, *P_midl_frag1837_t; /* size: 0x0020 */

typedef struct __midl_frag893_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag893_t, *P_midl_frag893_t; /* size: 0x0028 */

typedef struct __midl_frag701_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag701_t, *P_midl_frag701_t; /* size: 0x0018 */

typedef struct __midl_frag917_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag917_t, *P_midl_frag917_t; /* size: 0x0038 */

typedef struct __midl_frag1386_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1386_t, *P_midl_frag1386_t; /* size: 0x0038 */

typedef struct __midl_frag1639_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1529;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1639_t, *P_midl_frag1639_t; /* size: 0x0028 */

typedef struct __midl_frag801_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag801_t, *P_midl_frag801_t; /* size: 0x0068 */

struct tagFontPropSetTable
{
  /* 0x0000 */ const wchar_t* lpname;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char Padding_1530[2];
  /* 0x000c */ long memid;
}; /* size: 0x0010 */

typedef struct __midl_frag1780_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag1780_t, *P_midl_frag1780_t; /* size: 0x0040 */

typedef struct __midl_frag816_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag816_t, *P_midl_frag816_t; /* size: 0x0068 */

typedef struct __midl_frag887_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag887_t, *P_midl_frag887_t; /* size: 0x0028 */

typedef struct __midl_frag1335_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1335_t, *P_midl_frag1335_t; /* size: 0x0038 */

typedef struct __midl_frag1529_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0088 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0098 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a8 */ struct _NDR64_PARAM_FORMAT frag11;
} _midl_frag1529_t, *P_midl_frag1529_t; /* size: 0x00b8 */

typedef struct __midl_frag1638_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1638_t, *P_midl_frag1638_t; /* size: 0x0028 */

struct METADC;

struct METAINFO
{
  /* 0x0000 */ struct METADC headDc;
  /* 0x0000 */ long Padding_1531[8];
  /* 0x0020 */ int xwo;
  /* 0x0024 */ int ywo;
  /* 0x0028 */ int xwe;
  /* 0x002c */ int ywe;
  /* 0x0030 */ int xro;
  /* 0x0034 */ int yro;
}; /* size: 0x0038 */

typedef struct __midl_frag1883_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1883_t, *P_midl_frag1883_t; /* size: 0x0038 */

typedef struct __midl_frag1312_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1312_t, *P_midl_frag1312_t; /* size: 0x0048 */

typedef struct __midl_frag1846_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1846_t, *P_midl_frag1846_t; /* size: 0x0088 */

typedef struct __midl_frag221_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag221_t, *P_midl_frag221_t; /* size: 0x0048 */

typedef struct __midl_frag257_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0008 */ struct _NDR64_NO_REPEAT_FORMAT frag1;
    /* 0x0010 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag2;
    /* 0x0018 */ struct _NDR64_POINTER_FORMAT frag3;
    /* 0x0028 */ struct _NDR64_NO_REPEAT_FORMAT frag4;
    /* 0x0030 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag5;
    /* 0x0038 */ struct _NDR64_POINTER_FORMAT frag6;
    /* 0x0048 */ unsigned char frag7;
    /* 0x0049 */ char __PADDING__[7];
  } /* size: 0x0048 */ frag2;
} _midl_frag257_t, *P_midl_frag257_t; /* size: 0x0050 */

typedef struct __midl_frag827_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag827_t, *P_midl_frag827_t; /* size: 0x0020 */

typedef struct __midl_frag1251_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1251_t, *P_midl_frag1251_t; /* size: 0x0048 */

typedef struct __midl_frag273_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_POINTER_FORMAT frag2;
} _midl_frag273_t, *P_midl_frag273_t; /* size: 0x0020 */

typedef struct __midl_frag1420_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1420_t, *P_midl_frag1420_t; /* size: 0x0038 */

typedef struct __midl_frag1108_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1108_t, *P_midl_frag1108_t; /* size: 0x0028 */

typedef struct __midl_frag585_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag585_t, *P_midl_frag585_t; /* size: 0x0020 */

class CPtrBlock
{
  /* 0x0000 */ int _cPtrs;
  /* 0x0004 */ long Padding_1532;
  /* 0x0008 */ class CPtrBlock* _pbNext;
  /* 0x0010 */ void* _apv[50];
}; /* size: 0x01a0 */

typedef struct __midl_frag535_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag535_t, *P_midl_frag535_t; /* size: 0x0028 */

typedef struct __midl_frag1233_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1233_t, *P_midl_frag1233_t; /* size: 0x0038 */

typedef struct __midl_frag1003_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1003_t, *P_midl_frag1003_t; /* size: 0x0028 */

typedef struct __midl_frag1186_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1186_t, *P_midl_frag1186_t; /* size: 0x0038 */

class CStreamDummy
{
  /* 0x0000 */ long Padding_1533[2];
  /* 0x0008 */ long lPos;
}; /* size: 0x0010 */

typedef struct __midl_frag895_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag895_t, *P_midl_frag895_t; /* size: 0x0038 */

struct NEWHEADER
{
  /* 0x0000 */ unsigned short Reserved;
  /* 0x0002 */ unsigned short ResType;
  /* 0x0004 */ unsigned short ResCount;
}; /* size: 0x0006 */

typedef struct __midl_frag552_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag552_t, *P_midl_frag552_t; /* size: 0x0088 */

typedef struct __midl_frag865_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag865_t, *P_midl_frag865_t; /* size: 0x0028 */

typedef struct __midl_frag1643_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1643_t, *P_midl_frag1643_t; /* size: 0x0058 */

typedef struct __midl_frag649_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag649_t, *P_midl_frag649_t; /* size: 0x0048 */

typedef struct __midl_frag1829_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1534;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1829_t, *P_midl_frag1829_t; /* size: 0x0028 */

typedef struct __midl_frag920_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag920_t, *P_midl_frag920_t; /* size: 0x0048 */

typedef struct __midl_frag905_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag905_t, *P_midl_frag905_t; /* size: 0x0048 */

typedef struct __midl_frag1674_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1674_t, *P_midl_frag1674_t; /* size: 0x0020 */

typedef struct __midl_frag837_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag837_t, *P_midl_frag837_t; /* size: 0x000c */

typedef struct __midl_frag1073_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1073_t, *P_midl_frag1073_t; /* size: 0x0028 */

class MultiplicationHelper<long,long,1>
{
}; /* size: 0x0001 */

typedef struct __midl_frag787_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag787_t, *P_midl_frag787_t; /* size: 0x0038 */

typedef struct __midl_frag27_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag27_t, *P_midl_frag27_t; /* size: 0x0028 */

typedef struct __midl_frag983_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag983_t, *P_midl_frag983_t; /* size: 0x0048 */

typedef struct __midl_frag1649_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1649_t, *P_midl_frag1649_t; /* size: 0x0020 */

typedef struct __midl_frag45_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag45_t, *P_midl_frag45_t; /* size: 0x0038 */

typedef struct __midl_frag736_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag736_t, *P_midl_frag736_t; /* size: 0x000c */

typedef struct __midl_frag940_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag940_t, *P_midl_frag940_t; /* size: 0x0068 */

typedef struct __midl_frag1624_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1624_t, *P_midl_frag1624_t; /* size: 0x0038 */

typedef struct __midl_frag1655_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1655_t, *P_midl_frag1655_t; /* size: 0x0020 */

typedef struct __midl_frag653_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag653_t, *P_midl_frag653_t; /* size: 0x0048 */

class COlePropertySheet
{
  /* 0x0000 */ struct _PROPSHEETHEADERW_V2 m_pshW;
  /* 0x0060 */ unsigned long m_cObjects;
  /* 0x0064 */ long Padding_1535;
  /* 0x0068 */ struct IUnknown** m_ppUnk;
  /* 0x0070 */ unsigned long m_lcid;
  /* 0x0074 */ long Padding_1536;
  /* 0x0078 */ class CArray<CPageHolder *,CPageHolder * &> m_pageArray;
  /* 0x0090 */ struct HWND__* m_hWnd;
}; /* size: 0x0098 */

typedef struct __midl_frag260_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag260_t, *P_midl_frag260_t; /* size: 0x0020 */

class CPictioFileStream
{
  /* 0x0000 */ long Padding_1537[2];
  /* 0x0008 */ int _hfile;
  /* 0x000c */ long m_lRefs;
}; /* size: 0x0010 */

typedef struct __midl_frag1110_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0088 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0098 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a8 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b8 */ struct _NDR64_PARAM_FORMAT frag12;
} _midl_frag1110_t, *P_midl_frag1110_t; /* size: 0x00c8 */

typedef struct __midl_frag633_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag633_t, *P_midl_frag633_t; /* size: 0x0048 */

typedef struct __midl_frag1658_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1658_t, *P_midl_frag1658_t; /* size: 0x0068 */

typedef struct __midl_frag841_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag841_t, *P_midl_frag841_t; /* size: 0x0068 */

typedef struct __midl_frag1432_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1432_t, *P_midl_frag1432_t; /* size: 0x0028 */

typedef struct __midl_frag263_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag263_t, *P_midl_frag263_t; /* size: 0x0020 */

typedef struct __midl_frag125_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag125_t, *P_midl_frag125_t; /* size: 0x0058 */

typedef struct __midl_frag1146_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ unsigned int frag5;
  /* 0x004c */ long __PADDING__[1];
} _midl_frag1146_t, *P_midl_frag1146_t; /* size: 0x0050 */

typedef struct __midl_frag810_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag810_t, *P_midl_frag810_t; /* size: 0x000c */

typedef struct __midl_frag615_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag615_t, *P_midl_frag615_t; /* size: 0x0028 */

class CNotifyCP
{
  /* 0x0000 */ long Padding_1538[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_1539;
  /* 0x0010 */ struct IConnectionPointContainer* m_pcpc;
  /* 0x0018 */ class CRgPv m_rgpv;
  /* 0x0028 */ long m_lFreezeCount;
}; /* size: 0x0030 */

typedef struct __midl_frag250_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag250_t, *P_midl_frag250_t; /* size: 0x0028 */

typedef struct __midl_frag330_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag330_t, *P_midl_frag330_t; /* size: 0x0038 */

typedef struct __midl_frag1158_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1158_t, *P_midl_frag1158_t; /* size: 0x0038 */

typedef struct __midl_frag255_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_MEMPAD_FORMAT frag6;
    /* 0x0050 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag7;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
  } /* size: 0x0040 */ frag2;
} _midl_frag255_t, *P_midl_frag255_t; /* size: 0x0060 */

typedef struct __midl_frag1143_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1143_t, *P_midl_frag1143_t; /* size: 0x0048 */

typedef struct __midl_frag306_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag306_t, *P_midl_frag306_t; /* size: 0x0058 */

typedef struct __midl_frag445_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag445_t, *P_midl_frag445_t; /* size: 0x0038 */

typedef struct __midl_frag352_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag352_t, *P_midl_frag352_t; /* size: 0x0038 */

typedef struct __midl_frag194_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag194_t, *P_midl_frag194_t; /* size: 0x0020 */

typedef struct __midl_frag232_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag232_t, *P_midl_frag232_t; /* size: 0x0020 */

class CBasedDeltaBlockPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

typedef struct __midl_frag669_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag669_t, *P_midl_frag669_t; /* size: 0x0038 */

typedef struct __midl_frag1402_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1402_t, *P_midl_frag1402_t; /* size: 0x0068 */

typedef struct __midl_frag147_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag147_t, *P_midl_frag147_t; /* size: 0x0018 */

typedef struct __midl_frag1050_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1050_t, *P_midl_frag1050_t; /* size: 0x0068 */

typedef struct __midl_frag1512_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1512_t, *P_midl_frag1512_t; /* size: 0x0038 */

typedef struct __midl_frag1677_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1677_t, *P_midl_frag1677_t; /* size: 0x0038 */

typedef struct __midl_frag473_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag473_t, *P_midl_frag473_t; /* size: 0x0048 */

typedef struct __midl_frag1622_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1622_t, *P_midl_frag1622_t; /* size: 0x0028 */

typedef struct __midl_frag525_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag525_t, *P_midl_frag525_t; /* size: 0x0028 */

typedef struct __midl_frag1476_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1476_t, *P_midl_frag1476_t; /* size: 0x0048 */

typedef struct __midl_frag1640_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag10;
    /* 0x0070 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag11;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag12;
  } /* size: 0x0068 */ frag2;
} _midl_frag1640_t, *P_midl_frag1640_t; /* size: 0x0088 */

typedef struct __midl_frag526_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag526_t, *P_midl_frag526_t; /* size: 0x000c */

typedef struct __midl_frag269_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_POINTER_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_POINTER_FORMAT frag3;
} _midl_frag269_t, *P_midl_frag269_t; /* size: 0x0030 */

typedef struct __midl_frag417_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag417_t, *P_midl_frag417_t; /* size: 0x000c */

typedef struct __midl_frag1434_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1434_t, *P_midl_frag1434_t; /* size: 0x0038 */

typedef struct __midl_frag1358_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1358_t, *P_midl_frag1358_t; /* size: 0x0038 */

typedef struct __midl_frag157_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag157_t, *P_midl_frag157_t; /* size: 0x000c */

typedef struct __midl_frag808_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag808_t, *P_midl_frag808_t; /* size: 0x0010 */

class CNtfsUpdateStreamName
{
  /* 0x0000 */ wchar_t _wszName[37];
}; /* size: 0x004a */

typedef struct __midl_frag557_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag557_t, *P_midl_frag557_t; /* size: 0x0020 */

typedef struct __midl_frag1826_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1826_t, *P_midl_frag1826_t; /* size: 0x0058 */

typedef struct __midl_frag1377_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1377_t, *P_midl_frag1377_t; /* size: 0x0028 */

typedef struct __midl_frag1612_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1612_t, *P_midl_frag1612_t; /* size: 0x0018 */

class CNtfsSTATSTGArray
{
  /* 0x0000 */ long _cRefs;
  /* 0x0004 */ long Padding_1540;
  /* 0x0008 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0010 */ struct _FILE_STREAM_INFORMATION* _pFileStreamInformation;
  /* 0x0018 */ unsigned long _cFileStreamInformation;
}; /* size: 0x0020 */

typedef struct __midl_frag37_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag37_t, *P_midl_frag37_t; /* size: 0x0048 */

typedef struct __midl_frag859_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag859_t, *P_midl_frag859_t; /* size: 0x0038 */

typedef struct __midl_frag376_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag376_t, *P_midl_frag376_t; /* size: 0x0038 */

typedef struct __midl_frag1465_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1465_t, *P_midl_frag1465_t; /* size: 0x0038 */

class CExpParameterValidate
{
}; /* size: 0x0001 */

typedef struct __midl_frag309_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag309_t, *P_midl_frag309_t; /* size: 0x0048 */

typedef struct __midl_frag1675_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1675_t, *P_midl_frag1675_t; /* size: 0x0010 */

typedef struct __midl_frag230_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag230_t, *P_midl_frag230_t; /* size: 0x0048 */

typedef struct __midl_frag1031_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1031_t, *P_midl_frag1031_t; /* size: 0x0078 */

class LargeIntRegMultiply<__int64,__int64>
{
}; /* size: 0x0001 */

typedef struct __midl_frag1841_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1841_t, *P_midl_frag1841_t; /* size: 0x0038 */

typedef struct __midl_frag279_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag279_t, *P_midl_frag279_t; /* size: 0x0038 */

class LargeIntRegMultiply<unsigned __int64,unsigned int>
{
}; /* size: 0x0001 */

typedef struct __midl_frag741_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag741_t, *P_midl_frag741_t; /* size: 0x0020 */

typedef struct __midl_frag516_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag516_t, *P_midl_frag516_t; /* size: 0x000c */

typedef struct __midl_frag1613_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
  } /* size: 0x0030 */ frag2;
} _midl_frag1613_t, *P_midl_frag1613_t; /* size: 0x0050 */

typedef struct __midl_frag366_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag366_t, *P_midl_frag366_t; /* size: 0x0048 */

typedef struct __midl_frag1126_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1126_t, *P_midl_frag1126_t; /* size: 0x0088 */

typedef struct __midl_frag274_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag274_t, *P_midl_frag274_t; /* size: 0x0010 */

typedef struct __midl_frag175_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag175_t, *P_midl_frag175_t; /* size: 0x0020 */

typedef struct __midl_frag327_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag327_t, *P_midl_frag327_t; /* size: 0x0038 */

typedef struct __midl_frag1437_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1437_t, *P_midl_frag1437_t; /* size: 0x0038 */

typedef struct __midl_frag835_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag835_t, *P_midl_frag835_t; /* size: 0x0010 */

typedef struct __midl_frag821_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ const void* frag5;
} _midl_frag821_t, *P_midl_frag821_t; /* size: 0x0050 */

typedef struct __midl_frag1606_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1606_t, *P_midl_frag1606_t; /* size: 0x0058 */

typedef struct __midl_frag167_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag167_t, *P_midl_frag167_t; /* size: 0x0010 */

typedef struct __midl_frag688_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag688_t, *P_midl_frag688_t; /* size: 0x0048 */

typedef struct __midl_frag1041_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1041_t, *P_midl_frag1041_t; /* size: 0x0058 */

typedef struct __midl_frag889_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag889_t, *P_midl_frag889_t; /* size: 0x0028 */

typedef struct __midl_frag334_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag334_t, *P_midl_frag334_t; /* size: 0x0028 */

typedef struct __midl_frag603_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag603_t, *P_midl_frag603_t; /* size: 0x0068 */

typedef struct __midl_frag844_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag844_t, *P_midl_frag844_t; /* size: 0x0010 */

typedef struct __midl_frag1152_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1152_t, *P_midl_frag1152_t; /* size: 0x0058 */

typedef struct __midl_frag148_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag148_t, *P_midl_frag148_t; /* size: 0x0010 */

typedef struct __midl_frag992_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag992_t, *P_midl_frag992_t; /* size: 0x0048 */

typedef struct __midl_frag266_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag266_t, *P_midl_frag266_t; /* size: 0x0020 */

struct tagCATEGORYINFO
{
  /* 0x0000 */ struct _GUID catid;
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ wchar_t szDescription[128];
}; /* size: 0x0114 */

typedef struct __midl_frag1100_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1100_t, *P_midl_frag1100_t; /* size: 0x000c */

typedef struct __midl_frag1103_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1103_t, *P_midl_frag1103_t; /* size: 0x0038 */

typedef struct __midl_frag586_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag586_t, *P_midl_frag586_t; /* size: 0x000c */

typedef struct __midl_frag1192_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1192_t, *P_midl_frag1192_t; /* size: 0x0068 */

typedef struct __midl_frag74_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag74_t, *P_midl_frag74_t; /* size: 0x0058 */

typedef struct __midl_frag398_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag398_t, *P_midl_frag398_t; /* size: 0x0068 */

typedef struct __midl_frag903_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag903_t, *P_midl_frag903_t; /* size: 0x0028 */

typedef struct __midl_frag1663_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1663_t, *P_midl_frag1663_t; /* size: 0x0020 */

struct IEnumCATEGORYINFO
{
}; /* size: 0x0008 */

typedef struct __midl_frag680_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag680_t, *P_midl_frag680_t; /* size: 0x0038 */

typedef struct __midl_frag439_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag439_t, *P_midl_frag439_t; /* size: 0x0048 */

typedef struct __midl_frag771_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag7;
    /* 0x0060 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag8;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0070 */ struct _NDR64_MEMPAD_FORMAT frag10;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag11;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag12;
    /* 0x0088 */ struct _NDR64_MEMPAD_FORMAT frag13;
    /* 0x0090 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag14;
    /* 0x0098 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag15;
  } /* size: 0x0080 */ frag2;
} _midl_frag771_t, *P_midl_frag771_t; /* size: 0x00a0 */

typedef struct __midl_frag1853_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1853_t, *P_midl_frag1853_t; /* size: 0x000c */

typedef struct __midl_frag1723_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1541;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1723_t, *P_midl_frag1723_t; /* size: 0x0030 */

typedef struct __midl_frag1835_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1835_t, *P_midl_frag1835_t; /* size: 0x0048 */

class CEnumCategories
{
  /* 0x0000 */ long Padding_1542[2];
  /* 0x0008 */ struct HKEY__* m_hKey;
  /* 0x0010 */ unsigned long m_dwIndex;
  /* 0x0014 */ unsigned long m_lcid;
  /* 0x0018 */ struct IEnumCATEGORYINFO* m_pcsIEnumCat;
  /* 0x0020 */ int m_fromcs;
  /* 0x0024 */ unsigned long m_dwRefCount;
}; /* size: 0x0028 */

typedef struct __midl_frag885_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag885_t, *P_midl_frag885_t; /* size: 0x0028 */

typedef struct __midl_frag1634_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1634_t, *P_midl_frag1634_t; /* size: 0x0020 */

class std::bad_exception
{
}; /* size: 0x0018 */

typedef struct __midl_frag1423_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1423_t, *P_midl_frag1423_t; /* size: 0x0038 */

typedef struct __midl_frag737_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag737_t, *P_midl_frag737_t; /* size: 0x0010 */

typedef struct __midl_frag948_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag948_t, *P_midl_frag948_t; /* size: 0x0038 */

typedef struct __midl_frag290_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag290_t, *P_midl_frag290_t; /* size: 0x0048 */

typedef struct __midl_frag1831_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1831_t, *P_midl_frag1831_t; /* size: 0x0020 */

typedef struct __midl_frag264_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag264_t, *P_midl_frag264_t; /* size: 0x0020 */

typedef struct __midl_frag711_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag711_t, *P_midl_frag711_t; /* size: 0x0020 */

typedef struct __midl_frag1448_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1448_t, *P_midl_frag1448_t; /* size: 0x0038 */

typedef struct __midl_frag173_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag173_t, *P_midl_frag173_t; /* size: 0x0048 */

typedef struct __midl_frag259_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_MEMPAD_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag5;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag6;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0068 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag8;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag9;
    /* 0x0080 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag10;
  } /* size: 0x0068 */ frag2;
} _midl_frag259_t, *P_midl_frag259_t; /* size: 0x0088 */

class exception
{
  /* 0x0000 */ long Padding_1543[2];
  /* 0x0008 */ const char* _m_what;
  /* 0x0010 */ int _m_doFree;
}; /* size: 0x0018 */

typedef struct __midl_frag1592_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1592_t, *P_midl_frag1592_t; /* size: 0x0058 */

typedef struct __midl_frag355_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag355_t, *P_midl_frag355_t; /* size: 0x0038 */

typedef struct __midl_frag1075_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1075_t, *P_midl_frag1075_t; /* size: 0x0048 */

typedef struct __midl_frag1688_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1688_t, *P_midl_frag1688_t; /* size: 0x0028 */

typedef struct __midl_frag805_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag805_t, *P_midl_frag805_t; /* size: 0x0068 */

typedef struct __midl_frag1563_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1563_t, *P_midl_frag1563_t; /* size: 0x0058 */

typedef struct __midl_frag1719_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1544;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1719_t, *P_midl_frag1719_t; /* size: 0x0030 */

typedef struct __midl_frag1343_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1343_t, *P_midl_frag1343_t; /* size: 0x0038 */

typedef struct __midl_frag838_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag838_t, *P_midl_frag838_t; /* size: 0x0008 */

typedef struct __midl_frag1629_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1629_t, *P_midl_frag1629_t; /* size: 0x0078 */

typedef struct __midl_frag1713_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1713_t, *P_midl_frag1713_t; /* size: 0x0020 */

typedef struct __midl_frag621_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag621_t, *P_midl_frag621_t; /* size: 0x0020 */

typedef struct __midl_frag1685_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1685_t, *P_midl_frag1685_t; /* size: 0x0020 */

typedef struct __midl_frag1838_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1545;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1838_t, *P_midl_frag1838_t; /* size: 0x0030 */

typedef struct __midl_frag1026_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1026_t, *P_midl_frag1026_t; /* size: 0x0038 */

typedef struct __midl_frag1524_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1524_t, *P_midl_frag1524_t; /* size: 0x0038 */

typedef struct __midl_frag1166_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1166_t, *P_midl_frag1166_t; /* size: 0x0038 */

typedef struct __midl_frag1070_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1070_t, *P_midl_frag1070_t; /* size: 0x0038 */

typedef struct __midl_frag137_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag137_t, *P_midl_frag137_t; /* size: 0x0020 */

typedef struct __midl_frag875_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag875_t, *P_midl_frag875_t; /* size: 0x0048 */

typedef struct __midl_frag828_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag828_t, *P_midl_frag828_t; /* size: 0x000c */

typedef struct __midl_frag1024_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1024_t, *P_midl_frag1024_t; /* size: 0x0028 */

typedef struct __midl_frag1832_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1546;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1832_t, *P_midl_frag1832_t; /* size: 0x0028 */

typedef struct __midl_frag911_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag911_t, *P_midl_frag911_t; /* size: 0x0048 */

typedef struct __midl_frag899_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag899_t, *P_midl_frag899_t; /* size: 0x0038 */

typedef struct __midl_frag135_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag135_t, *P_midl_frag135_t; /* size: 0x0048 */

typedef struct __midl_frag1824_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1824_t, *P_midl_frag1824_t; /* size: 0x0028 */

typedef struct __midl_frag764_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag764_t, *P_midl_frag764_t; /* size: 0x0058 */

typedef struct __midl_frag929_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
  } /* size: 0x0030 */ frag2;
} _midl_frag929_t, *P_midl_frag929_t; /* size: 0x0050 */

typedef struct __midl_frag1679_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1679_t, *P_midl_frag1679_t; /* size: 0x0020 */

typedef struct __midl_frag791_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag791_t, *P_midl_frag791_t; /* size: 0x0048 */

typedef struct __midl_frag1294_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1294_t, *P_midl_frag1294_t; /* size: 0x0028 */

typedef struct __midl_frag509_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag509_t, *P_midl_frag509_t; /* size: 0x0038 */

typedef struct __midl_frag1053_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1053_t, *P_midl_frag1053_t; /* size: 0x000c */

class CRtlSmartUcsEncoderTraitsBase<CRtlSmartUcsEncoderTraits<_LUTF8_STRING> >
{
}; /* size: 0x0001 */

typedef struct __midl_frag576_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag576_t, *P_midl_frag576_t; /* size: 0x0088 */

typedef struct __midl_frag1812_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1812_t, *P_midl_frag1812_t; /* size: 0x000c */

typedef struct __midl_frag18_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag18_t, *P_midl_frag18_t; /* size: 0x0010 */

typedef struct __midl_frag832_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag832_t, *P_midl_frag832_t; /* size: 0x0068 */

typedef struct __midl_frag1653_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1653_t, *P_midl_frag1653_t; /* size: 0x0048 */

typedef struct __midl_frag1544_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1544_t, *P_midl_frag1544_t; /* size: 0x0088 */

typedef struct __midl_frag754_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag754_t, *P_midl_frag754_t; /* size: 0x0038 */

typedef struct __midl_frag203_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag203_t, *P_midl_frag203_t; /* size: 0x0018 */

typedef struct __midl_frag154_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag154_t, *P_midl_frag154_t; /* size: 0x0048 */

typedef struct __midl_frag1698_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1547;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1698_t, *P_midl_frag1698_t; /* size: 0x0028 */

typedef struct __midl_frag145_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag145_t, *P_midl_frag145_t; /* size: 0x0048 */

typedef struct __midl_frag1747_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1747_t, *P_midl_frag1747_t; /* size: 0x0048 */

typedef struct __midl_frag1278_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_MEMPAD_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag6;
    /* 0x0058 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag7;
    /* 0x0060 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
    /* 0x0068 */ struct _NDR64_MEMPAD_FORMAT frag9;
    /* 0x0070 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag10;
    /* 0x0078 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag11;
  } /* size: 0x0060 */ frag2;
} _midl_frag1278_t, *P_midl_frag1278_t; /* size: 0x0080 */

typedef struct __midl_frag1506_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag4;
    /* 0x0050 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
    /* 0x0058 */ struct _NDR64_MEMPAD_FORMAT frag6;
    /* 0x0060 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag7;
    /* 0x0068 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag8;
  } /* size: 0x0050 */ frag2;
} _midl_frag1506_t, *P_midl_frag1506_t; /* size: 0x0070 */

typedef struct __midl_frag461_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag461_t, *P_midl_frag461_t; /* size: 0x0058 */

typedef struct __midl_frag970_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag970_t, *P_midl_frag970_t; /* size: 0x0038 */

typedef struct __midl_frag1473_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1473_t, *P_midl_frag1473_t; /* size: 0x0038 */

typedef struct __midl_frag223_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag223_t, *P_midl_frag223_t; /* size: 0x0018 */

typedef struct __midl_frag4_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag4_t, *P_midl_frag4_t; /* size: 0x0008 */

typedef struct __midl_frag823_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ unsigned int frag6;
  /* 0x0064 */ long __PADDING__[1];
} _midl_frag823_t, *P_midl_frag823_t; /* size: 0x0068 */

typedef struct __midl_frag1346_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1346_t, *P_midl_frag1346_t; /* size: 0x0038 */

typedef struct __midl_frag165_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag165_t, *P_midl_frag165_t; /* size: 0x0018 */

typedef struct __midl_frag496_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag496_t, *P_midl_frag496_t; /* size: 0x0078 */

typedef struct __midl_frag515_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag515_t, *P_midl_frag515_t; /* size: 0x0020 */

typedef struct __midl_frag1588_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1588_t, *P_midl_frag1588_t; /* size: 0x0008 */

typedef struct __midl_frag978_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag978_t, *P_midl_frag978_t; /* size: 0x0038 */

typedef struct __midl_frag267_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag267_t, *P_midl_frag267_t; /* size: 0x0020 */

typedef struct __midl_frag777_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag777_t, *P_midl_frag777_t; /* size: 0x0038 */

typedef struct __midl_frag659_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag659_t, *P_midl_frag659_t; /* size: 0x0048 */

typedef struct __midl_frag261_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag261_t, *P_midl_frag261_t; /* size: 0x0020 */

typedef struct __midl_frag1379_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1379_t, *P_midl_frag1379_t; /* size: 0x0038 */

typedef struct __midl_frag566_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag566_t, *P_midl_frag566_t; /* size: 0x0078 */

typedef struct __midl_frag584_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag584_t, *P_midl_frag584_t; /* size: 0x0010 */

typedef struct __midl_frag1214_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1214_t, *P_midl_frag1214_t; /* size: 0x0058 */

typedef struct __midl_frag1680_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1680_t, *P_midl_frag1680_t; /* size: 0x0010 */

typedef struct __midl_frag1522_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1522_t, *P_midl_frag1522_t; /* size: 0x0028 */

typedef struct __midl_frag1702_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1548;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1702_t, *P_midl_frag1702_t; /* size: 0x0028 */

typedef struct __midl_frag1338_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1338_t, *P_midl_frag1338_t; /* size: 0x0038 */

typedef struct __midl_frag1811_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1811_t, *P_midl_frag1811_t; /* size: 0x0020 */

typedef struct __midl_frag1843_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1549;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1843_t, *P_midl_frag1843_t; /* size: 0x0030 */

typedef struct _PATCH_BUFFER
{
  /* 0x0000 */ unsigned short PointerIndex;
  /* 0x0002 */ unsigned short Fill1;
  /* 0x0004 */ unsigned short BufferSize;
  /* 0x0006 */ unsigned short Fill2;
  /* 0x0008 */ unsigned __int64 Buffer[31];
} PATCH_BUFFER, *PPATCH_BUFFER; /* size: 0x0100 */

typedef struct __midl_frag542_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag542_t, *P_midl_frag542_t; /* size: 0x0078 */

typedef struct __midl_frag646_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag646_t, *P_midl_frag646_t; /* size: 0x0038 */

typedef struct __midl_frag924_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag924_t, *P_midl_frag924_t; /* size: 0x0058 */

typedef struct __midl_frag112_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag112_t, *P_midl_frag112_t; /* size: 0x0038 */

typedef struct __midl_frag782_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag782_t, *P_midl_frag782_t; /* size: 0x0038 */

typedef struct __midl_frag1709_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1709_t, *P_midl_frag1709_t; /* size: 0x0058 */

typedef struct __midl_frag673_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag673_t, *P_midl_frag673_t; /* size: 0x0038 */

struct DICTENTRYHEADER
{
  /* 0x0000 */ unsigned long dwPropID;
  /* 0x0004 */ unsigned long cb;
}; /* size: 0x0008 */

typedef struct __midl_frag1209_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1209_t, *P_midl_frag1209_t; /* size: 0x0038 */

typedef struct __midl_frag989_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag989_t, *P_midl_frag989_t; /* size: 0x0058 */

typedef struct __midl_frag1828_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1828_t, *P_midl_frag1828_t; /* size: 0x0020 */

typedef struct __midl_frag78_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag78_t, *P_midl_frag78_t; /* size: 0x0008 */

typedef struct __midl_frag725_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag725_t, *P_midl_frag725_t; /* size: 0x0058 */

typedef struct __midl_frag1798_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1798_t, *P_midl_frag1798_t; /* size: 0x0020 */

typedef struct __midl_frag1301_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1301_t, *P_midl_frag1301_t; /* size: 0x0048 */

typedef struct __midl_frag1248_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1248_t, *P_midl_frag1248_t; /* size: 0x0038 */

typedef struct __midl_frag1013_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0018 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0028 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0030 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0040 */ unsigned char frag3;
    /* 0x0041 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
} _midl_frag1013_t, *P_midl_frag1013_t; /* size: 0x0048 */

typedef struct __midl_frag1801_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1801_t, *P_midl_frag1801_t; /* size: 0x0038 */

typedef struct __midl_frag65_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag65_t, *P_midl_frag65_t; /* size: 0x0058 */

typedef struct __midl_frag420_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag420_t, *P_midl_frag420_t; /* size: 0x0068 */

typedef struct __midl_frag211_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag211_t, *P_midl_frag211_t; /* size: 0x0048 */

typedef struct __midl_frag1091_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1091_t, *P_midl_frag1091_t; /* size: 0x0088 */

typedef struct __midl_frag768_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag768_t, *P_midl_frag768_t; /* size: 0x000c */

typedef struct __midl_frag1296_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1296_t, *P_midl_frag1296_t; /* size: 0x0028 */

typedef struct __midl_frag1769_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1769_t, *P_midl_frag1769_t; /* size: 0x000c */

struct SGetFreeStruct
{
  /* 0x0000 */ struct CVectBits* pfb;
  /* 0x0008 */ unsigned long sect;
  /* 0x000c */ long Padding_1550;
  /* 0x0010 */ class CFatSect* pfs;
  /* 0x0018 */ unsigned short isect;
  /* 0x001a */ char Padding_1551[2];
  /* 0x001c */ unsigned long ipfs;
  /* 0x0020 */ unsigned long sectLast;
  /* 0x0024 */ unsigned long ipfsLast;
  /* 0x0028 */ unsigned short isectLast;
  /* 0x002a */ char Padding_1552[6];
  /* 0x0030 */ class CFatSect* pfsNoScratch;
  /* 0x0038 */ unsigned long ipfsNoScratch;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

typedef struct __midl_frag149_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag149_t, *P_midl_frag149_t; /* size: 0x0010 */

typedef struct __midl_frag846_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag846_t, *P_midl_frag846_t; /* size: 0x000c */

typedef struct __midl_frag1645_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1645_t, *P_midl_frag1645_t; /* size: 0x0020 */

typedef struct __midl_frag1782_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1782_t, *P_midl_frag1782_t; /* size: 0x000c */

typedef struct __midl_frag121_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag121_t, *P_midl_frag121_t; /* size: 0x0028 */

typedef struct __midl_frag994_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag994_t, *P_midl_frag994_t; /* size: 0x0010 */

typedef struct __midl_frag1842_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1842_t, *P_midl_frag1842_t; /* size: 0x0020 */

typedef struct __midl_frag1647_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1647_t, *P_midl_frag1647_t; /* size: 0x0008 */

typedef struct __midl_frag1242_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1242_t, *P_midl_frag1242_t; /* size: 0x0048 */

typedef struct __midl_frag513_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag513_t, *P_midl_frag513_t; /* size: 0x0058 */

typedef struct __midl_frag1705_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1705_t, *P_midl_frag1705_t; /* size: 0x000c */

typedef struct __midl_frag836_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag836_t, *P_midl_frag836_t; /* size: 0x0020 */

typedef struct __midl_frag693_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag693_t, *P_midl_frag693_t; /* size: 0x0038 */

typedef struct __midl_frag1390_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag1390_t, *P_midl_frag1390_t; /* size: 0x0078 */

typedef struct __midl_frag1228_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1228_t, *P_midl_frag1228_t; /* size: 0x0038 */

typedef struct __midl_frag1413_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1413_t, *P_midl_frag1413_t; /* size: 0x0038 */

typedef struct __midl_frag10_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag10_t, *P_midl_frag10_t; /* size: 0x0038 */

typedef struct __midl_frag1275_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
} _midl_frag1275_t, *P_midl_frag1275_t; /* size: 0x0088 */

typedef struct __midl_frag176_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag176_t, *P_midl_frag176_t; /* size: 0x000c */

typedef struct __midl_frag855_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag855_t, *P_midl_frag855_t; /* size: 0x0048 */

typedef struct __midl_frag759_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag759_t, *P_midl_frag759_t; /* size: 0x0038 */

typedef struct __midl_frag213_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag213_t, *P_midl_frag213_t; /* size: 0x0020 */

typedef struct __midl_frag1672_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1672_t, *P_midl_frag1672_t; /* size: 0x0048 */

typedef struct __midl_frag384_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag384_t, *P_midl_frag384_t; /* size: 0x0028 */

typedef struct __midl_frag1619_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1619_t, *P_midl_frag1619_t; /* size: 0x0038 */

typedef struct __midl_frag1695_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1553;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1695_t, *P_midl_frag1695_t; /* size: 0x0028 */

typedef struct __midl_frag1212_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1212_t, *P_midl_frag1212_t; /* size: 0x0028 */

typedef struct __midl_frag1263_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1263_t, *P_midl_frag1263_t; /* size: 0x0058 */

typedef struct __midl_frag1569_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1569_t, *P_midl_frag1569_t; /* size: 0x0058 */

typedef struct __midl_frag1064_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1064_t, *P_midl_frag1064_t; /* size: 0x0068 */

typedef struct __midl_frag612_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag612_t, *P_midl_frag612_t; /* size: 0x0038 */

typedef struct __midl_frag67_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag67_t, *P_midl_frag67_t; /* size: 0x0020 */

typedef struct __midl_frag1781_t
{
  /* 0x0000 */ struct _NDR64_VAR_ARRAY_HEADER_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1781_t, *P_midl_frag1781_t; /* size: 0x0028 */

typedef struct __midl_frag1774_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0078 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0088 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0098 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a8 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b8 */ struct _NDR64_PARAM_FORMAT frag12;
} _midl_frag1774_t, *P_midl_frag1774_t; /* size: 0x00c8 */

typedef struct __midl_frag629_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag629_t, *P_midl_frag629_t; /* size: 0x0038 */

typedef struct __midl_frag993_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag993_t, *P_midl_frag993_t; /* size: 0x000c */

typedef struct __midl_frag1597_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1597_t, *P_midl_frag1597_t; /* size: 0x0028 */

typedef struct __midl_frag123_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag123_t, *P_midl_frag123_t; /* size: 0x0028 */

typedef struct __midl_frag639_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag639_t, *P_midl_frag639_t; /* size: 0x0068 */

typedef struct __midl_frag320_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag320_t, *P_midl_frag320_t; /* size: 0x0028 */

typedef struct __midl_frag1683_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1683_t, *P_midl_frag1683_t; /* size: 0x0048 */

typedef struct _mega_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[7101];
  /* 0x1bbf */ char __PADDING__[1];
} mega_MIDL_TYPE_FORMAT_STRING, *Pmega_MIDL_TYPE_FORMAT_STRING; /* size: 0x1bc0 */

class Windows::Internal::CoTaskMemPolicy<unsigned short>
{
}; /* size: 0x0001 */

typedef struct __midl_frag224_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag224_t, *P_midl_frag224_t; /* size: 0x0010 */

typedef struct __midl_frag799_t
{
  /* 0x0000 */ struct _NDR64_ENCAPSULATED_UNION frag1;
  /* 0x0010 */ struct _NDR64_UNION_ARM_SELECTOR frag2;
  /* 0x0018 */ struct _NDR64_UNION_ARM frag3;
  /* 0x0030 */ struct _NDR64_UNION_ARM frag4;
  /* 0x0048 */ struct _NDR64_UNION_ARM frag5;
  /* 0x0060 */ struct _NDR64_UNION_ARM frag6;
  /* 0x0078 */ struct _NDR64_UNION_ARM frag7;
  /* 0x0090 */ struct _NDR64_UNION_ARM frag8;
  /* 0x00a8 */ struct _NDR64_UNION_ARM frag9;
  /* 0x00c0 */ struct _NDR64_UNION_ARM frag10;
  /* 0x00d8 */ unsigned int frag11;
  /* 0x00dc */ long __PADDING__[1];
} _midl_frag799_t, *P_midl_frag799_t; /* size: 0x00e0 */

typedef struct __midl_frag773_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_POINTER_FORMAT frag2;
} _midl_frag773_t, *P_midl_frag773_t; /* size: 0x0020 */

typedef struct __midl_frag951_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag951_t, *P_midl_frag951_t; /* size: 0x0038 */

typedef struct __midl_frag740_t
{
  /* 0x0000 */ struct _NDR64_CONF_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag740_t, *P_midl_frag740_t; /* size: 0x0010 */

typedef struct __midl_frag1363_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1363_t, *P_midl_frag1363_t; /* size: 0x0038 */

typedef struct __midl_frag1044_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1044_t, *P_midl_frag1044_t; /* size: 0x000c */

typedef struct __midl_frag237_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag237_t, *P_midl_frag237_t; /* size: 0x0028 */

typedef struct __midl_frag1190_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1190_t, *P_midl_frag1190_t; /* size: 0x0028 */

typedef struct __midl_frag107_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag107_t, *P_midl_frag107_t; /* size: 0x0038 */

typedef struct __midl_frag1718_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1718_t, *P_midl_frag1718_t; /* size: 0x0020 */

typedef struct __midl_frag115_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag115_t, *P_midl_frag115_t; /* size: 0x0028 */

typedef struct __midl_frag284_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag284_t, *P_midl_frag284_t; /* size: 0x0048 */

typedef struct __midl_frag722_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag722_t, *P_midl_frag722_t; /* size: 0x0058 */

typedef struct __midl_frag214_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag214_t, *P_midl_frag214_t; /* size: 0x000c */

typedef struct __midl_frag879_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag879_t, *P_midl_frag879_t; /* size: 0x0028 */

typedef struct __midl_frag1635_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1554;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1635_t, *P_midl_frag1635_t; /* size: 0x0028 */

typedef struct __midl_frag1578_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1578_t, *P_midl_frag1578_t; /* size: 0x0068 */

class CEndPointAtom
{
  /* 0x0000 */ unsigned short s_AtomProp;
}; /* size: 0x0001 */

typedef struct __midl_frag239_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag239_t, *P_midl_frag239_t; /* size: 0x0038 */

typedef struct __midl_frag956_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag956_t, *P_midl_frag956_t; /* size: 0x0038 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumSTATSTG> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>* ptr_;
}; /* size: 0x0008 */

typedef struct __midl_frag1763_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag1763_t, *P_midl_frag1763_t; /* size: 0x0068 */

typedef struct __midl_frag1490_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1490_t, *P_midl_frag1490_t; /* size: 0x0028 */

typedef struct __midl_frag664_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag664_t, *P_midl_frag664_t; /* size: 0x0048 */

typedef struct __midl_frag1480_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1480_t, *P_midl_frag1480_t; /* size: 0x0028 */

typedef struct __midl_frag593_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag593_t, *P_midl_frag593_t; /* size: 0x0068 */

typedef struct __midl_frag1038_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1038_t, *P_midl_frag1038_t; /* size: 0x000c */

typedef struct __midl_frag218_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag218_t, *P_midl_frag218_t; /* size: 0x0038 */

typedef struct __midl_frag709_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag709_t, *P_midl_frag709_t; /* size: 0x0068 */

typedef struct __midl_frag780_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag780_t, *P_midl_frag780_t; /* size: 0x0028 */

class CTSmartObj<void *,CAutoHandle_Policy<void *> >
{
  /* 0x0000 */ void* _obj;
}; /* size: 0x0008 */

typedef struct __midl_frag1527_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1527_t, *P_midl_frag1527_t; /* size: 0x0028 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumFORMATETC> >
{
}; /* size: 0x0008 */

typedef struct __midl_frag1611_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag1611_t, *P_midl_frag1611_t; /* size: 0x0010 */

typedef struct __midl_frag1808_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1808_t, *P_midl_frag1808_t; /* size: 0x0058 */

typedef struct __midl_frag1494_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1494_t, *P_midl_frag1494_t; /* size: 0x0028 */

typedef struct __midl_frag340_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag340_t, *P_midl_frag340_t; /* size: 0x0038 */

typedef struct __midl_frag798_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag798_t, *P_midl_frag798_t; /* size: 0x0010 */

typedef struct __midl_frag156_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag156_t, *P_midl_frag156_t; /* size: 0x0020 */

typedef struct __midl_frag1005_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1005_t, *P_midl_frag1005_t; /* size: 0x0038 */

typedef struct __midl_frag1714_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ long Padding_1555;
  /* 0x0008 */ struct _NDR64_RANGE_FORMAT frag2;
  /* 0x0020 */ struct _NDR64_EXPR_OPERATOR frag3;
  /* 0x0024 */ struct _NDR64_EXPR_VAR frag4;
  /* 0x002c */ long __PADDING__[1];
} _midl_frag1714_t, *P_midl_frag1714_t; /* size: 0x0030 */

typedef struct __midl_frag622_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag622_t, *P_midl_frag622_t; /* size: 0x000c */

typedef struct __midl_frag1052_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag1052_t, *P_midl_frag1052_t; /* size: 0x0020 */

typedef struct __midl_frag1646_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag1646_t, *P_midl_frag1646_t; /* size: 0x000c */

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>
{
}; /* size: 0x0020 */

typedef struct __midl_frag185_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag185_t, *P_midl_frag185_t; /* size: 0x0018 */

typedef struct __midl_frag1821_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1821_t, *P_midl_frag1821_t; /* size: 0x0038 */

typedef struct __midl_frag1061_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1061_t, *P_midl_frag1061_t; /* size: 0x0038 */

typedef struct __midl_frag1106_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag1106_t, *P_midl_frag1106_t; /* size: 0x0028 */

typedef struct __midl_frag204_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag204_t, *P_midl_frag204_t; /* size: 0x000c */

typedef struct __midl_frag58_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag58_t, *P_midl_frag58_t; /* size: 0x000c */

typedef struct __midl_frag678_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag678_t, *P_midl_frag678_t; /* size: 0x0028 */

typedef struct __midl_frag1010_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag1010_t, *P_midl_frag1010_t; /* size: 0x0058 */

typedef struct __midl_frag343_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag343_t, *P_midl_frag343_t; /* size: 0x0068 */

typedef struct __midl_frag127_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag127_t, *P_midl_frag127_t; /* size: 0x0018 */

typedef struct __midl_frag1863_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1863_t, *P_midl_frag1863_t; /* size: 0x0038 */

class CLimitedWritableStorage::Revert::__l3::<lambda_202158885EF0BB85>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
}; /* size: 0x0008 */

typedef struct __midl_frag558_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag558_t, *P_midl_frag558_t; /* size: 0x000c */

typedef struct __midl_frag1742_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1742_t, *P_midl_frag1742_t; /* size: 0x0048 */

typedef struct __midl_frag757_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag757_t, *P_midl_frag757_t; /* size: 0x0028 */

typedef struct __midl_frag1701_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag1701_t, *P_midl_frag1701_t; /* size: 0x0050 */

typedef struct __midl_frag1287_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag1287_t, *P_midl_frag1287_t; /* size: 0x0008 */

typedef struct __midl_frag91_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag91_t, *P_midl_frag91_t; /* size: 0x0028 */

typedef struct __midl_frag769_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag769_t, *P_midl_frag769_t; /* size: 0x0010 */

typedef struct __midl_frag813_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag813_t, *P_midl_frag813_t; /* size: 0x0010 */

typedef struct __midl_frag371_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag371_t, *P_midl_frag371_t; /* size: 0x0048 */

typedef struct __midl_frag527_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag527_t, *P_midl_frag527_t; /* size: 0x0010 */

typedef struct __midl_frag1325_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1325_t, *P_midl_frag1325_t; /* size: 0x0038 */

typedef struct __midl_frag297_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag297_t, *P_midl_frag297_t; /* size: 0x0038 */

typedef struct __midl_frag1716_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
} _midl_frag1716_t, *P_midl_frag1716_t; /* size: 0x0048 */

typedef struct __midl_frag1237_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1237_t, *P_midl_frag1237_t; /* size: 0x0038 */

typedef struct __midl_frag703_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag703_t, *P_midl_frag703_t; /* size: 0x0010 */

typedef struct __midl_frag712_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag712_t, *P_midl_frag712_t; /* size: 0x000c */

typedef struct __midl_frag596_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag596_t, *P_midl_frag596_t; /* size: 0x0020 */

class CBrokeredClipDataObject::GetCanonicalFormatEtc::__l9::<lambda_435835F2906B906C>;

typedef struct __midl_frag1367_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag1367_t, *P_midl_frag1367_t; /* size: 0x0038 */

typedef struct __midl_frag1669_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag1669_t, *P_midl_frag1669_t; /* size: 0x0028 */

typedef struct __midl_frag845_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag845_t, *P_midl_frag845_t; /* size: 0x0020 */

typedef struct __midl_frag246_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag246_t, *P_midl_frag246_t; /* size: 0x0038 */

class CLimitedWritableStorage::EnumElements::__l3::<lambda_75806E06F2DD87D9>
{
  /* 0x0000 */ class CLimitedWritableStorage* const __this;
  /* 0x0008 */ unsigned long& reserved1;
  /* 0x0010 */ void*& reserved2;
  /* 0x0018 */ unsigned long& reserved3;
  /* 0x0020 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>& pInner;
}; /* size: 0x0028 */

class CReadOnlyStream::CopyTo::__l9::<lambda_7DA0A3C7D7999BB8>
{
  /* 0x0000 */ class CReadOnlyStream* const __this;
  /* 0x0008 */ struct IStream*& pstm;
  /* 0x0010 */ union _ULARGE_INTEGER& cb;
  /* 0x0018 */ union _ULARGE_INTEGER*& pcbRead;
  /* 0x0020 */ union _ULARGE_INTEGER*& pcbWritten;
}; /* size: 0x0028 */

class CLimitedStreamBase::Stat::__l3::<lambda_859B9105128902AF>
{
  /* 0x0000 */ class CLimitedStreamBase* const __this;
  /* 0x0008 */ struct tagSTATSTG*& pstatstg;
  /* 0x0010 */ unsigned long& grfStatFlag;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IEnumSTATSTG> >
{
}; /* size: 0x0008 */

struct IConnectionPointContainerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* EnumConnectionPoints /* function */;
  /* 0x0020 */ void* FindConnectionPoint /* function */;
}; /* size: 0x0028 */

class Microsoft::WRL::ComPtr<IEnumSTATSTG>
{
  /* 0x0000 */ struct IEnumSTATSTG* ptr_;
}; /* size: 0x0008 */

struct IConnectionPointContainer
{
  /* 0x0000 */ struct IConnectionPointContainerVtbl* lpVtbl;
}; /* size: 0x0008 */

class RunSyncOnMTAThread::__l6::<lambda_229B830753C4A8F8>;

struct IEnumConnectionPoints
{
  /* 0x0000 */ struct IEnumConnectionPointsVtbl* lpVtbl;
}; /* size: 0x0008 */

class CClipboardBroker::SetClipboard::__l43::<lambda_E6908BB0B11F0B55>
{
  /* 0x0000 */ void*& pMTAWrapperRawAddress;
}; /* size: 0x0008 */

struct IEnumConnectionPointsVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IOSTaskCompletion> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IOSTaskCompletion>* ptr_;
}; /* size: 0x0008 */

struct IConnectionPoint
{
  /* 0x0000 */ struct IConnectionPointVtbl* lpVtbl;
}; /* size: 0x0008 */

struct IConnectionPointVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetConnectionInterface /* function */;
  /* 0x0020 */ void* GetConnectionPointContainer /* function */;
  /* 0x0028 */ void* Advise /* function */;
  /* 0x0030 */ void* Unadvise /* function */;
  /* 0x0038 */ void* EnumConnections /* function */;
}; /* size: 0x0040 */

class ClipboardDataObjectTask
{
  /* 0x0000 */ long Padding_1556[12];
  /* 0x0030 */ class Microsoft::WRL::Wrappers::CriticalSection m_CallCS;
  /* 0x0058 */ class CancellableCall* m_pOutstandingCalls;
  /* 0x0060 */ struct _TP_TIMER* m_pCancellationTimer;
  /* 0x0068 */ volatile BOOL m_fTaskActive;
  /* 0x0069 */ char Padding_1557[7];
  /* 0x0070 */ class Microsoft::WRL::ComPtr<IOSTaskCompletion> m_spTaskCompletion;
}; /* size: 0x0078 */

struct IEnumConnections
{
  /* 0x0000 */ struct IEnumConnectionsVtbl* lpVtbl;
}; /* size: 0x0008 */

class CAutoHandle_Policy<HWND__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HDESK__ *>
{
}; /* size: 0x0001 */

class CWrapperBase<IUnknown>
{
  /* 0x0000 */ long Padding_1558[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IUnknown> m_pInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_pPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

typedef struct __midl_frag312_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag312_t, *P_midl_frag312_t; /* size: 0x0018 */

typedef struct __midl_frag130_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag130_t, *P_midl_frag130_t; /* size: 0x0018 */

typedef struct __midl_frag168_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag168_t, *P_midl_frag168_t; /* size: 0x0018 */

typedef struct __midl_frag1783_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1783_t, *P_midl_frag1783_t; /* size: 0x0018 */

struct IStorageVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateStream /* function */;
  /* 0x0020 */ void* OpenStream /* function */;
  /* 0x0028 */ void* CreateStorage /* function */;
  /* 0x0030 */ void* OpenStorage /* function */;
  /* 0x0038 */ void* CopyTo /* function */;
  /* 0x0040 */ void* MoveElementTo /* function */;
  /* 0x0048 */ void* Commit /* function */;
  /* 0x0050 */ void* Revert /* function */;
  /* 0x0058 */ void* EnumElements /* function */;
  /* 0x0060 */ void* DestroyElement /* function */;
  /* 0x0068 */ void* RenameElement /* function */;
  /* 0x0070 */ void* SetElementTimes /* function */;
  /* 0x0078 */ void* SetClass /* function */;
  /* 0x0080 */ void* SetStateBits /* function */;
  /* 0x0088 */ void* Stat /* function */;
}; /* size: 0x0090 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IStream> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IStream>* ptr_;
}; /* size: 0x0008 */

struct FMTCACHE
{
  /* 0x0000 */ struct tagFORMATETC fmt;
  /* 0x0020 */ unsigned long dwAspects;
  /* 0x0024 */ int fUseMe;
}; /* size: 0x0028 */

class CEnumFmt
{
  /* 0x0000 */ long Padding_1559[2];
  /* 0x0008 */ unsigned long m_cRef;
  /* 0x000c */ long Padding_1560;
  /* 0x0010 */ wchar_t* m_szClsid;
  /* 0x0018 */ unsigned long m_dwDirection;
  /* 0x001c */ unsigned long m_iKey;
  /* 0x0020 */ struct FMTCACHE m_cache;
}; /* size: 0x0048 */

struct EnumVerbCache
{
  /* 0x0000 */ class CEnumVerb* pEnum;
}; /* size: 0x0008 */

class CDefLink::CAdvSinkImpl
{
}; /* size: 0x0008 */

class CDefLink
{
  /* 0x0000 */ long Padding_1561[20];
  /* 0x0050 */ class CDefLink::CPrivUnknown m_Unknown;
  /* 0x0058 */ class CDefLink::CAdvSinkImpl m_AdviseSink;
  /* 0x0060 */ unsigned long m_flags;
  /* 0x0064 */ unsigned long m_dwObjFlags;
  /* 0x0068 */ struct IDataObject* m_pDataDelegate;
  /* 0x0070 */ struct IOleObject* m_pOleDelegate;
  /* 0x0078 */ struct IRunnableObject* m_pRODelegate;
  /* 0x0080 */ struct IOleItemContainer* m_pOleItemContainerDelegate;
  /* 0x0088 */ HRESULT m_ContentSRVMSHResult;
  /* 0x008c */ unsigned long m_ContentSRVMSBits;
  /* 0x0090 */ HRESULT m_ContentREGMSHResult;
  /* 0x0094 */ unsigned long m_ContentREGMSBits;
  /* 0x0098 */ unsigned long m_cRefsOnLink;
  /* 0x009c */ long Padding_1562;
  /* 0x00a0 */ struct IUnknown* m_pUnkOuter;
  /* 0x00a8 */ struct IMoniker* m_pMonikerAbs;
  /* 0x00b0 */ struct IMoniker* m_pMonikerRel;
  /* 0x00b8 */ struct IUnknown* m_pUnkDelegate;
  /* 0x00c0 */ unsigned long m_dwUpdateOpt;
  /* 0x00c4 */ struct _GUID m_clsid;
  /* 0x00d4 */ long Padding_1563;
  /* 0x00d8 */ struct IStorage* m_pStg;
  /* 0x00e0 */ class COleCache* m_pCOleCache;
  /* 0x00e8 */ class COAHolder* m_pCOAHolder;
  /* 0x00f0 */ unsigned long m_dwConnOle;
  /* 0x00f4 */ long Padding_1564;
  /* 0x00f8 */ class CDataAdviseCache* m_pDataAdvCache;
  /* 0x0100 */ struct IOleClientSite* m_pAppClientSite;
  /* 0x0108 */ unsigned long m_dwConnTime;
  /* 0x010c */ struct _FILETIME m_ltChangeOfUpdate;
  /* 0x0114 */ struct _FILETIME m_ltKnownUpToDate;
  /* 0x011c */ struct _FILETIME m_rtUpdate;
}; /* size: 0x0128 */

struct tagHDIBFILEHDR
{
  /* 0x0000 */ unsigned long dwCompression;
  /* 0x0004 */ unsigned long dwWidth;
  /* 0x0008 */ unsigned long dwHeight;
  /* 0x000c */ unsigned long dwSize;
}; /* size: 0x0010 */

class CAsyncConnection
{
  /* 0x0000 */ long Padding_1565[2];
  /* 0x0008 */ struct IConnectionPointContainer* _pCPC;
  /* 0x0010 */ struct IDocfileAsyncConnectionPoint* _pdacp;
  /* 0x0018 */ unsigned long _dwAsyncFlags;
  /* 0x001c */ long _cReferences;
}; /* size: 0x0020 */

struct IEnumUnknownVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

class CExposedStream
{
  /* 0x0000 */ long Padding_1566[22];
  /* 0x0058 */ class CPubStream* _pst;
  /* 0x0060 */ class CDFBasis* _pdfb;
  /* 0x0068 */ class CPerContext* _ppc;
  /* 0x0070 */ unsigned long _sig;
  /* 0x0074 */ long _cReferences;
  /* 0x0078 */ class CSeekPointer* _psp;
  /* 0x0080 */ struct IUnknown* volatile _pFTM;
}; /* size: 0x0088 */

class CLimitedStreamBase::Read::__l3::<lambda_89A7BD4872294177>;

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Clone::__l3::<lambda_9BDFBD0AF00B6A49>
{
  /* 0x0000 */ class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>* const __this;
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG>& pInner;
}; /* size: 0x0010 */

class CLimitedWritableStorage::Stat::__l3::<lambda_A45E3065BC097B94>;

struct IAdviseSink2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* OnDataChange /* function */;
  /* 0x0020 */ void* OnViewChange /* function */;
  /* 0x0028 */ void* OnRename /* function */;
  /* 0x0030 */ void* OnSave /* function */;
  /* 0x0038 */ void* OnClose /* function */;
  /* 0x0040 */ void* OnLinkSrcChange /* function */;
}; /* size: 0x0048 */

struct IFillLockBytesVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* FillAppend /* function */;
  /* 0x0020 */ void* FillAt /* function */;
  /* 0x0028 */ void* SetFillSize /* function */;
  /* 0x0030 */ void* Terminate /* function */;
}; /* size: 0x0038 */

class CPropSetName
{
  /* 0x0000 */ wchar_t _oszName[32];
}; /* size: 0x0040 */

class CWrapperBase<IStream>::{dtor}::__l3::<lambda_F4605E2997508A8D>;

struct IContinueVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* FContinue /* function */;
}; /* size: 0x0020 */

struct IViewObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Draw /* function */;
  /* 0x0020 */ void* GetColorSet /* function */;
  /* 0x0028 */ void* Freeze /* function */;
  /* 0x0030 */ void* Unfreeze /* function */;
  /* 0x0038 */ void* SetAdvise /* function */;
  /* 0x0040 */ void* GetAdvise /* function */;
}; /* size: 0x0048 */

class CDropTarget
{
  /* 0x0000 */ long Padding_1567[2];
  /* 0x0008 */ struct HWND__* _hwndOLE;
  /* 0x0010 */ struct HWND__* _hwnd31;
  /* 0x0018 */ unsigned long _dwEffectLast;
  /* 0x001c */ unsigned long _crefs;
  /* 0x0020 */ class CDragOperation* _pdo;
  /* 0x0028 */ void* _hDDInfo;
}; /* size: 0x0030 */

struct DDEPOKE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 13; /* bit position: 0 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short fReserved : 2; /* bit position: 14 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

struct tagRECT16
{
  /* 0x0000 */ short left;
  /* 0x0002 */ short top;
  /* 0x0004 */ short right;
  /* 0x0006 */ short bottom;
}; /* size: 0x0008 */

class CMapUintPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

struct IBindCtxVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* RegisterObjectBound /* function */;
  /* 0x0020 */ void* RevokeObjectBound /* function */;
  /* 0x0028 */ void* ReleaseBoundObjects /* function */;
  /* 0x0030 */ void* SetBindOptions /* function */;
  /* 0x0038 */ void* GetBindOptions /* function */;
  /* 0x0040 */ void* GetRunningObjectTable /* function */;
  /* 0x0048 */ void* RegisterObjectParam /* function */;
  /* 0x0050 */ void* GetObjectParam /* function */;
  /* 0x0058 */ void* EnumObjectParam /* function */;
  /* 0x0060 */ void* RevokeObjectParam /* function */;
}; /* size: 0x0068 */

class CBaseMInterfacePointerMarshalingStream
{
  /* 0x0000 */ long Padding_1568[4];
  /* 0x0010 */ long _lOffset;
  /* 0x0014 */ long _cbDataSize;
  /* 0x0018 */ unsigned long _cbBufferSize;
  /* 0x001c */ long Padding_1569;
  /* 0x0020 */ struct tagMInterfacePointer* _pMInterfacePointer;
  /* 0x0028 */ int _fFree;
}; /* size: 0x0030 */

class InitializeAndReadIsAppContainer::__l3::<lambda_1CB8F1C635DE6DBC>
{
}; /* size: 0x0001 */

struct IEnumOLEVERBVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

typedef struct __CRT_LIST_ENTRY
{
  /* 0x0000 */ struct __CRT_LIST_ENTRY* Flink;
  /* 0x0008 */ struct __CRT_LIST_ENTRY* Blink;
} _CRT_LIST_ENTRY, *P_CRT_LIST_ENTRY; /* size: 0x0010 */

typedef struct _CRT_CRITICAL_SECTION_DEBUG
{
  /* 0x0000 */ unsigned short Type;
  /* 0x0002 */ unsigned short CreatorBackTraceIndex;
  /* 0x0004 */ long Padding_1570;
  /* 0x0008 */ struct _CRT_CRITICAL_SECTION* CriticalSection;
  /* 0x0010 */ struct __CRT_LIST_ENTRY ProcessLocksList;
  /* 0x0020 */ unsigned long EntryCount;
  /* 0x0024 */ unsigned long ContentionCount;
  /* 0x0028 */ unsigned long Depth;
  /* 0x002c */ long Padding_1571;
  /* 0x0030 */ void* OwnerBackTrace[5];
} CRT_CRITICAL_SECTION_DEBUG, *PCRT_CRITICAL_SECTION_DEBUG; /* size: 0x0058 */

class istream
{
  /* 0x0000 */ long Padding_1572[2];
  /* 0x0008 */ int _fGline;
  /* 0x000c */ int x_gcount;
}; /* size: 0x0080 */

struct AsyncIAdviseSinkVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Begin_OnDataChange /* function */;
  /* 0x0020 */ void* Finish_OnDataChange /* function */;
  /* 0x0028 */ void* Begin_OnViewChange /* function */;
  /* 0x0030 */ void* Finish_OnViewChange /* function */;
  /* 0x0038 */ void* Begin_OnRename /* function */;
  /* 0x0040 */ void* Finish_OnRename /* function */;
  /* 0x0048 */ void* Begin_OnSave /* function */;
  /* 0x0050 */ void* Finish_OnSave /* function */;
  /* 0x0058 */ void* Begin_OnClose /* function */;
  /* 0x0060 */ void* Finish_OnClose /* function */;
}; /* size: 0x0068 */

class COleCache::CCacheUnkImpl
{
}; /* size: 0x0008 */

class COleCache::CCacheDataImpl
{
}; /* size: 0x0008 */

class COleCache::CCacheViewImpl
{
}; /* size: 0x0008 */

class COleCache::CAdviseSinkImpl
{
}; /* size: 0x0008 */

class COleCache
{
  /* 0x0000 */ long Padding_1573[16];
  /* 0x0040 */ class COleCache::CCacheUnkImpl m_UnkPrivate;
  /* 0x0048 */ class COleCache::CCacheDataImpl m_Data;
  /* 0x0050 */ class COleCache::CCacheViewImpl m_ViewObject;
  /* 0x0058 */ class COleCache::CAdviseSinkImpl m_AdviseSink;
  /* 0x0060 */ struct IUnknown* m_pUnkOuter;
  /* 0x0068 */ struct IStorage* m_pStg;
  /* 0x0070 */ struct _GUID m_clsid;
  /* 0x0080 */ unsigned short m_cfFormat;
  /* 0x0082 */ char Padding_1574[2];
  /* 0x0084 */ unsigned long m_ulFlags;
  /* 0x0088 */ class CArray<CCacheNode>* m_pCacheArray;
  /* 0x0090 */ struct IAdviseSink* m_pViewAdvSink;
  /* 0x0098 */ unsigned long m_advfView;
  /* 0x009c */ unsigned long m_aspectsView;
  /* 0x00a0 */ unsigned long m_dwFrozenAspects;
  /* 0x00a4 */ long Padding_1575;
  /* 0x00a8 */ struct IDataObject* m_pDataObject;
}; /* size: 0x00b0 */

struct IOleCache2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Cache /* function */;
  /* 0x0020 */ void* Uncache /* function */;
  /* 0x0028 */ void* EnumCache /* function */;
  /* 0x0030 */ void* InitCache /* function */;
  /* 0x0038 */ void* SetData /* function */;
  /* 0x0040 */ void* UpdateCache /* function */;
  /* 0x0048 */ void* DiscardCache /* function */;
}; /* size: 0x0050 */

struct IEnumStringVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct ISequentialStreamVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Read /* function */;
  /* 0x0020 */ void* Write /* function */;
}; /* size: 0x0028 */

class CWriteInterfaceDataMarshalingStream
{
}; /* size: 0x0030 */

struct ILockBytesVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* ReadAt /* function */;
  /* 0x0020 */ void* WriteAt /* function */;
  /* 0x0028 */ void* Flush /* function */;
  /* 0x0030 */ void* SetSize /* function */;
  /* 0x0038 */ void* LockRegion /* function */;
  /* 0x0040 */ void* UnlockRegion /* function */;
  /* 0x0048 */ void* Stat /* function */;
}; /* size: 0x0050 */

struct IPropertyStore
{
}; /* size: 0x0008 */

class RemoveClipboardDataObject::__l15::<lambda_E474B8135FEA7565>
{
  /* 0x0000 */ void*& pDataObjInMTA;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CBrokeredClipDataObject> const >;

class Microsoft::WRL::RuntimeClass<Microsoft::WRL::RuntimeClassFlags<2>,IClipboardBroker,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil,Microsoft::WRL::Details::Nil>
{
}; /* size: 0x0010 */

struct IEnumSTATDATAVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

class Microsoft::WRL::Details::RemoveIUnknownBase<CClipboardBroker::CClipboardBrokerExternalReference>;

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IGlobalInterfaceTable>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerMTAHelper> >;

struct IClassFactoryVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateInstance /* function */;
  /* 0x0020 */ void* LockServer /* function */;
}; /* size: 0x0028 */

class Microsoft::WRL::ComPtr<IRuntimeBroker>
{
  /* 0x0000 */ struct IRuntimeBroker* ptr_;
}; /* size: 0x0008 */

struct IDataObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetData /* function */;
  /* 0x0020 */ void* GetDataHere /* function */;
  /* 0x0028 */ void* QueryGetData /* function */;
  /* 0x0030 */ void* GetCanonicalFormatEtc /* function */;
  /* 0x0038 */ void* SetData /* function */;
  /* 0x0040 */ void* EnumFormatEtc /* function */;
  /* 0x0048 */ void* DAdvise /* function */;
  /* 0x0050 */ void* DUnadvise /* function */;
  /* 0x0058 */ void* EnumDAdvise /* function */;
}; /* size: 0x0060 */

class RenderFormat::__l29::<lambda_4E12DA02AC3212FD>
{
  /* 0x0000 */ struct HWND__*& hClipWnd;
  /* 0x0008 */ void*& pvMTADataObject;
  /* 0x0010 */ unsigned int& cf;
  /* 0x0018 */ struct tagSTGMEDIUM& medium;
  /* 0x0020 */ BOOL& fMediumIsInMTA;
}; /* size: 0x0028 */

typedef struct __midl_frag1016_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag1016_t, *P_midl_frag1016_t; /* size: 0x0018 */

struct CArray<CFormatEtc>::ArrayNode
{
  /* 0x0000 */ class CFormatEtc item;
  /* 0x0028 */ unsigned long next;
  /* 0x002c */ unsigned long prev;
}; /* size: 0x0030 */

typedef struct __midl_frag995_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag995_t, *P_midl_frag995_t; /* size: 0x0018 */

typedef struct __midl_frag226_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag226_t, *P_midl_frag226_t; /* size: 0x0018 */

typedef struct __midl_frag188_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag188_t, *P_midl_frag188_t; /* size: 0x0018 */

typedef struct __midl_frag150_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_NOOP frag2;
  /* 0x0008 */ struct _NDR64_EXPR_CONST64 frag3;
} _midl_frag150_t, *P_midl_frag150_t; /* size: 0x0018 */

struct IAdviseSinkVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* OnDataChange /* function */;
  /* 0x0020 */ void* OnViewChange /* function */;
  /* 0x0028 */ void* OnRename /* function */;
  /* 0x0030 */ void* OnSave /* function */;
  /* 0x0038 */ void* OnClose /* function */;
}; /* size: 0x0040 */

struct IImpersonateClipboardOwner
{
}; /* size: 0x0008 */

struct AsyncIAdviseSink2Vtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Begin_OnDataChange /* function */;
  /* 0x0020 */ void* Finish_OnDataChange /* function */;
  /* 0x0028 */ void* Begin_OnViewChange /* function */;
  /* 0x0030 */ void* Finish_OnViewChange /* function */;
  /* 0x0038 */ void* Begin_OnRename /* function */;
  /* 0x0040 */ void* Finish_OnRename /* function */;
  /* 0x0048 */ void* Begin_OnSave /* function */;
  /* 0x0050 */ void* Finish_OnSave /* function */;
  /* 0x0058 */ void* Begin_OnClose /* function */;
  /* 0x0060 */ void* Finish_OnClose /* function */;
  /* 0x0068 */ void* Begin_OnLinkSrcChange /* function */;
  /* 0x0070 */ void* Finish_OnLinkSrcChange /* function */;
}; /* size: 0x0078 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> const >;

struct IStreamVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Read /* function */;
  /* 0x0020 */ void* Write /* function */;
  /* 0x0028 */ void* Seek /* function */;
  /* 0x0030 */ void* SetSize /* function */;
  /* 0x0038 */ void* CopyTo /* function */;
  /* 0x0040 */ void* Commit /* function */;
  /* 0x0048 */ void* Revert /* function */;
  /* 0x0050 */ void* LockRegion /* function */;
  /* 0x0058 */ void* UnlockRegion /* function */;
  /* 0x0060 */ void* Stat /* function */;
  /* 0x0068 */ void* Clone /* function */;
}; /* size: 0x0070 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBroker> const >;

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil> >,0,0>
{
}; /* size: 0x0028 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil>,1,1>
{
}; /* size: 0x0020 */

class Interceptor
{
  /* 0x0000 */ long Padding_1576[12];
  /* 0x0030 */ struct ICallFrameEvents* m_pCallSink;
  /* 0x0038 */ void* const* m_pvtbl /* function */;
  /* 0x0040 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0048 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0050 */ const struct tagProxyFileInfo** m_pProxyFileList;
  /* 0x0058 */ const char* m_szInterfaceName;
  /* 0x0060 */ int m_fMdOwnsHeader;
  /* 0x0064 */ int m_fUsingTypelib;
  /* 0x0068 */ struct TYPEINFOVTBL* m_ptypeinfovtbl;
  /* 0x0070 */ unsigned int m_cMethodsBase;
  /* 0x0074 */ long Padding_1577;
  /* 0x0078 */ struct ICallInterceptor* m_pBaseInterceptor;
  /* 0x0080 */ struct IUnknown* m_punkBaseInterceptor;
  /* 0x0088 */ struct MD_INTERFACE* m_pmdMostDerived;
  /* 0x0090 */ struct IUnknown* m_punkOuter;
  /* 0x0098 */ long m_refs;
}; /* size: 0x00a0 */

struct IInterceptorBase
{
}; /* size: 0x0008 */

struct IEnumMonikerVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct SSimpleWalker
{
  /* 0x0000 */ long Padding_1578[2];
  /* 0x0008 */ unsigned long _cItfs;
  /* 0x000c */ long Padding_1579;
  /* 0x0010 */ struct IUnknown* _arpUnk[10];
  /* 0x0060 */ struct IUnknown** _ppUnk;
}; /* size: 0x0068 */

struct BSTR_INTERNAL
{
  /* 0x0000 */ unsigned long cbPayload;
  /* 0x0004 */ wchar_t* sz /* zero-length array */;
}; /* size: 0x0004 */

class HashWSTR
{
}; /* size: 0x0001 */

class Enum
{
}; /* size: 0x0008 */

struct FRAME_GetTypeInfoCount
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ unsigned int* pctinfo;
}; /* size: 0x0010 */

class MAP<XSLOCK,MAP_KEY_GUID,MD_INTERFACE *>::iterator;

struct IOleInPlaceActiveObjectVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetWindow /* function */;
  /* 0x0020 */ void* ContextSensitiveHelp /* function */;
  /* 0x0028 */ void* TranslateAcceleratorW /* function */;
  /* 0x0030 */ void* OnFrameWindowActivate /* function */;
  /* 0x0038 */ void* OnDocWindowActivate /* function */;
  /* 0x0040 */ void* ResizeBorder /* function */;
  /* 0x0048 */ void* EnableModeless /* function */;
}; /* size: 0x0050 */

struct FRAME_Invoke
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ long dispIdMember;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ struct _GUID* piid;
  /* 0x0018 */ unsigned long lcid;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned short wFlags;
  /* 0x0022 */ char __pad4[4];
  /* 0x0026 */ char Padding_1580[2];
  /* 0x0028 */ struct tagDISPPARAMS* pDispParams;
  /* 0x0030 */ struct tagVARIANT* pVarResult;
  /* 0x0038 */ struct tagEXCEPINFO* pExcepInfo;
  /* 0x0040 */ unsigned int* puArgErr;
}; /* size: 0x0048 */

class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>
{
  /* 0x0000 */ long Padding_1581[46];
  /* 0x00b8 */ class XSLOCK m_xslAgeOutLock;
  /* 0x0138 */ volatile unsigned long m_dwLastAgeOutTime;
  /* 0x013c */ unsigned long m_dwNumPtrsInPage;
}; /* size: 0x0140 */

struct tagMethodInfo
{
  /* 0x0000 */ struct tagFUNCDESC* pFuncDesc;
  /* 0x0008 */ struct ITypeInfo* pTypeInfo;
}; /* size: 0x0010 */

typedef struct _prop_MIDL_PROC_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1033];
  /* 0x040b */ char __PADDING__[1];
} prop_MIDL_PROC_FORMAT_STRING, *Pprop_MIDL_PROC_FORMAT_STRING; /* size: 0x040c */

typedef struct __midl_frag26_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag26_t, *P_midl_frag26_t; /* size: 0x0008 */

typedef struct __midl_frag298_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag298_t, *P_midl_frag298_t; /* size: 0x000c */

struct MD_PARAM
{
  /* 0x0000 */ int m_fCanShare;
  /* 0x0004 */ int m_fMayHaveInterfacePointers;
}; /* size: 0x0008 */

typedef struct __midl_frag363_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
} _midl_frag363_t, *P_midl_frag363_t; /* size: 0x0068 */

typedef struct __midl_frag265_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag265_t, *P_midl_frag265_t; /* size: 0x000c */

typedef struct __midl_frag291_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag291_t, *P_midl_frag291_t; /* size: 0x0050 */

typedef struct _prop_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[3407];
  /* 0x0d51 */ char __PADDING__[1];
} prop_MIDL_TYPE_FORMAT_STRING, *Pprop_MIDL_TYPE_FORMAT_STRING; /* size: 0x0d52 */

typedef struct __midl_frag296_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag296_t, *P_midl_frag296_t; /* size: 0x0040 */

typedef struct __midl_frag182_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag182_t, *P_midl_frag182_t; /* size: 0x0040 */

typedef struct __midl_frag367_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag367_t, *P_midl_frag367_t; /* size: 0x0028 */

typedef struct __midl_frag83_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag83_t, *P_midl_frag83_t; /* size: 0x000c */

typedef struct __midl_frag289_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag289_t, *P_midl_frag289_t; /* size: 0x0010 */

typedef struct __midl_frag227_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag227_t, *P_midl_frag227_t; /* size: 0x000c */

typedef struct __midl_frag387_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag387_t, *P_midl_frag387_t; /* size: 0x0020 */

typedef struct __midl_frag240_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag240_t, *P_midl_frag240_t; /* size: 0x0040 */

typedef struct __midl_frag470_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_ARRAY_HEADER_FORMAT frag1;
} _midl_frag470_t, *P_midl_frag470_t; /* size: 0x0018 */

typedef struct __midl_frag234_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag234_t, *P_midl_frag234_t; /* size: 0x0010 */

typedef struct __midl_frag379_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag379_t, *P_midl_frag379_t; /* size: 0x000c */

typedef struct __midl_frag100_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag100_t, *P_midl_frag100_t; /* size: 0x0040 */

typedef struct __midl_frag318_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag318_t, *P_midl_frag318_t; /* size: 0x000c */

typedef struct __midl_frag94_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag94_t, *P_midl_frag94_t; /* size: 0x0050 */

typedef struct __midl_frag244_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag244_t, *P_midl_frag244_t; /* size: 0x0010 */

typedef struct __midl_frag301_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag301_t, *P_midl_frag301_t; /* size: 0x0010 */

typedef struct __midl_frag12_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag12_t, *P_midl_frag12_t; /* size: 0x0028 */

typedef struct __midl_frag247_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag247_t, *P_midl_frag247_t; /* size: 0x000c */

typedef struct __midl_frag197_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag197_t, *P_midl_frag197_t; /* size: 0x000c */

typedef struct __midl_frag253_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag253_t, *P_midl_frag253_t; /* size: 0x0040 */

typedef struct __midl_frag248_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag248_t, *P_midl_frag248_t; /* size: 0x0010 */

typedef struct __midl_frag189_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag189_t, *P_midl_frag189_t; /* size: 0x000c */

struct ITypeCompVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Bind /* function */;
  /* 0x0020 */ void* BindType /* function */;
}; /* size: 0x0028 */

typedef struct __midl_frag285_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag285_t, *P_midl_frag285_t; /* size: 0x0010 */

typedef struct __midl_frag215_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag215_t, *P_midl_frag215_t; /* size: 0x0040 */

typedef struct __midl_frag193_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag193_t, *P_midl_frag193_t; /* size: 0x0010 */

typedef struct __midl_frag184_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag184_t, *P_midl_frag184_t; /* size: 0x000c */

typedef struct __midl_frag81_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag81_t, *P_midl_frag81_t; /* size: 0x0040 */

typedef struct __midl_frag319_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag319_t, *P_midl_frag319_t; /* size: 0x0010 */

typedef struct __midl_frag236_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag236_t, *P_midl_frag236_t; /* size: 0x0020 */

typedef struct __midl_frag229_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag229_t, *P_midl_frag229_t; /* size: 0x0010 */

typedef struct __midl_frag207_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag207_t, *P_midl_frag207_t; /* size: 0x000c */

typedef struct __midl_frag482_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag482_t, *P_midl_frag482_t; /* size: 0x0038 */

typedef struct __midl_frag272_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag272_t, *P_midl_frag272_t; /* size: 0x0010 */

typedef struct __midl_frag77_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag77_t, *P_midl_frag77_t; /* size: 0x0020 */

typedef struct __midl_frag385_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag385_t, *P_midl_frag385_t; /* size: 0x0058 */

typedef struct __midl_frag181_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag181_t, *P_midl_frag181_t; /* size: 0x0010 */

typedef struct __midl_frag53_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag53_t, *P_midl_frag53_t; /* size: 0x0040 */

typedef struct __midl_frag304_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag304_t, *P_midl_frag304_t; /* size: 0x000c */

typedef struct __midl_frag14_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_REGION_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
  } /* size: 0x0020 */ frag2;
} _midl_frag14_t, *P_midl_frag14_t; /* size: 0x0040 */

typedef struct __midl_frag400_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag400_t, *P_midl_frag400_t; /* size: 0x0038 */

typedef struct __midl_frag477_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag477_t, *P_midl_frag477_t; /* size: 0x0038 */

typedef struct __midl_frag126_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag126_t, *P_midl_frag126_t; /* size: 0x000c */

typedef struct __midl_frag251_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag251_t, *P_midl_frag251_t; /* size: 0x000c */

typedef struct __midl_frag410_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
} _midl_frag410_t, *P_midl_frag410_t; /* size: 0x0058 */

typedef struct __midl_frag202_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag202_t, *P_midl_frag202_t; /* size: 0x000c */

typedef struct __midl_frag105_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag105_t, *P_midl_frag105_t; /* size: 0x000c */

typedef struct __midl_frag397_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag397_t, *P_midl_frag397_t; /* size: 0x000c */

typedef struct __midl_frag373_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag373_t, *P_midl_frag373_t; /* size: 0x0028 */

typedef struct __midl_frag391_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag391_t, *P_midl_frag391_t; /* size: 0x000c */

typedef struct __midl_frag308_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag308_t, *P_midl_frag308_t; /* size: 0x000c */

typedef struct __midl_frag87_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag87_t, *P_midl_frag87_t; /* size: 0x0050 */

typedef struct __midl_frag303_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag303_t, *P_midl_frag303_t; /* size: 0x0028 */

typedef struct __midl_frag313_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag313_t, *P_midl_frag313_t; /* size: 0x000c */

typedef struct __midl_frag451_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag451_t, *P_midl_frag451_t; /* size: 0x0010 */

typedef struct __midl_frag441_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag441_t, *P_midl_frag441_t; /* size: 0x0038 */

typedef struct __midl_frag222_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag222_t, *P_midl_frag222_t; /* size: 0x000c */

typedef struct __midl_frag262_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag262_t, *P_midl_frag262_t; /* size: 0x0010 */

typedef struct __midl_frag388_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag388_t, *P_midl_frag388_t; /* size: 0x000c */

typedef struct __midl_frag212_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag212_t, *P_midl_frag212_t; /* size: 0x000c */

typedef struct __midl_frag438_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag438_t, *P_midl_frag438_t; /* size: 0x0038 */

typedef struct __midl_frag287_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag287_t, *P_midl_frag287_t; /* size: 0x0020 */

typedef struct __midl_frag462_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag462_t, *P_midl_frag462_t; /* size: 0x0038 */

typedef struct __midl_frag396_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag396_t, *P_midl_frag396_t; /* size: 0x0020 */

typedef struct __midl_frag249_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag249_t, *P_midl_frag249_t; /* size: 0x0040 */

typedef struct __midl_frag95_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag95_t, *P_midl_frag95_t; /* size: 0x000c */

typedef struct __midl_frag418_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
} _midl_frag418_t, *P_midl_frag418_t; /* size: 0x0038 */

typedef struct __midl_frag471_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag471_t, *P_midl_frag471_t; /* size: 0x000c */

typedef struct __midl_frag292_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag292_t, *P_midl_frag292_t; /* size: 0x000c */

typedef struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ struct _NDR64_STRUCTURE_FLAGS Flags;
  /* 0x0003 */ unsigned char Dimensions;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* OriginalMemberLayout;
  /* 0x0010 */ const void* OriginalPointerLayout;
  /* 0x0018 */ const void* PointerLayout;
  /* 0x0020 */ const void* ConfArrayDescription;
} NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT, *PNDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT; /* size: 0x0028 */

typedef struct __midl_frag76_t
{
  /* 0x0000 */ struct _NDR64_CONF_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0028 */ struct _NDR64_SIMPLE_REGION_FORMAT frag1;
    /* 0x0030 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0038 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0028 */ frag2;
} _midl_frag76_t, *P_midl_frag76_t; /* size: 0x0050 */

typedef struct __midl_frag472_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
} _midl_frag472_t, *P_midl_frag472_t; /* size: 0x0010 */

typedef struct __midl_frag5_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag5_t, *P_midl_frag5_t; /* size: 0x000c */

typedef struct __midl_frag235_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag235_t, *P_midl_frag235_t; /* size: 0x0040 */

typedef struct __midl_frag6_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_EMBEDDED_COMPLEX_FORMAT frag3;
    /* 0x0040 */ struct _NDR64_BUFFER_ALIGN_FORMAT frag4;
    /* 0x0048 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag5;
  } /* size: 0x0030 */ frag2;
} _midl_frag6_t, *P_midl_frag6_t; /* size: 0x0050 */

typedef struct __midl_frag32_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag32_t, *P_midl_frag32_t; /* size: 0x0008 */

typedef struct __midl_frag270_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag270_t, *P_midl_frag270_t; /* size: 0x000c */

typedef struct __midl_frag49_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag49_t, *P_midl_frag49_t; /* size: 0x0020 */

typedef struct __midl_frag52_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag52_t, *P_midl_frag52_t; /* size: 0x0010 */

typedef struct __midl_frag277_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag277_t, *P_midl_frag277_t; /* size: 0x0040 */

typedef struct __midl_frag220_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag220_t, *P_midl_frag220_t; /* size: 0x0040 */

typedef struct __midl_frag374_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag374_t, *P_midl_frag374_t; /* size: 0x000c */

typedef struct __midl_frag305_t
{
  /* 0x0000 */ struct _NDR64_POINTER_FORMAT frag1;
} _midl_frag305_t, *P_midl_frag305_t; /* size: 0x0010 */

typedef struct __midl_frag102_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_VAR frag2;
} _midl_frag102_t, *P_midl_frag102_t; /* size: 0x000c */

typedef struct __midl_frag196_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag196_t, *P_midl_frag196_t; /* size: 0x0020 */

typedef struct __midl_frag278_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  /* 0x0010 */ struct _NDR64_ARRAY_ELEMENT_INFO frag2;
} _midl_frag278_t, *P_midl_frag278_t; /* size: 0x0020 */

typedef struct _NDR64_NON_ENCAPSULATED_UNION
{
  /* 0x0000 */ unsigned char FormatCode;
  /* 0x0001 */ unsigned char Alignment;
  /* 0x0002 */ unsigned char Flags;
  /* 0x0003 */ unsigned char SwitchType;
  /* 0x0004 */ unsigned int MemorySize;
  /* 0x0008 */ const void* Switch;
  /* 0x0010 */ unsigned int Reserved;
  /* 0x0014 */ long __PADDING__[1];
} NDR64_NON_ENCAPSULATED_UNION, *PNDR64_NON_ENCAPSULATED_UNION; /* size: 0x0018 */

typedef struct __midl_frag460_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
} _midl_frag460_t, *P_midl_frag460_t; /* size: 0x0028 */

typedef struct __midl_frag268_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag268_t, *P_midl_frag268_t; /* size: 0x0040 */

typedef struct __midl_frag422_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_PARAM_FORMAT frag2;
  /* 0x0028 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0038 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0048 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0058 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0068 */ struct _NDR64_PARAM_FORMAT frag7;
} _midl_frag422_t, *P_midl_frag422_t; /* size: 0x0078 */

typedef struct __midl_frag245_t
{
  /* 0x0000 */ struct _NDR64_BOGUS_STRUCTURE_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0020 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag1;
    /* 0x0028 */ struct _NDR64_MEMPAD_FORMAT frag2;
    /* 0x0030 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag3;
    /* 0x0038 */ struct _NDR64_SIMPLE_MEMBER_FORMAT frag4;
  } /* size: 0x0020 */ frag2;
} _midl_frag245_t, *P_midl_frag245_t; /* size: 0x0040 */

typedef struct __midl_frag365_t
{
  /* 0x0000 */ struct _NDR64_CONF_VAR_BOGUS_ARRAY_HEADER_FORMAT frag1;
} _midl_frag365_t, *P_midl_frag365_t; /* size: 0x0028 */

typedef struct __midl_frag294_t
{
  /* 0x0000 */ unsigned int frag1;
  /* 0x0004 */ struct _NDR64_EXPR_OPERATOR frag2;
  /* 0x0008 */ struct _NDR64_EXPR_VAR frag3;
  /* 0x0010 */ struct _NDR64_EXPR_CONST64 frag4;
} _midl_frag294_t, *P_midl_frag294_t; /* size: 0x0020 */

struct IEnumSTATPROPSETSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct IEnumSTATPROPSTGVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* Next /* function */;
  /* 0x0020 */ void* Skip /* function */;
  /* 0x0028 */ void* Reset /* function */;
  /* 0x0030 */ void* Clone /* function */;
}; /* size: 0x0038 */

struct ICallFactoryVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* CreateCall /* function */;
}; /* size: 0x0020 */

struct REF_COUNTED_STRUCT
{
  /* 0x0000 */ long Padding_1582[2];
  /* 0x0008 */ long m_refs;
  /* 0x000c */ long __PADDING__[1];
}; /* size: 0x0010 */

class CLinkable
{
  /* 0x0000 */ class CLinkable* m_pNext;
  /* 0x0008 */ class CLinkable* m_pPrev;
}; /* size: 0x0010 */

class HashVoidPtr
{
}; /* size: 0x0001 */

struct AllocateThrow
{
}; /* size: 0x0001 */

struct SAFEARRAY_INTERNAL
{
  union
  {
    /* 0x0000 */ struct _GUID iid;
    struct
    {
      /* 0x0000 */ long __dummy0[3];
      /* 0x000c */ long vt;
    }; /* size: 0x0010 */
    struct
    {
      /* 0x0000 */ unsigned long __dummy1[2];
      /* 0x0008 */ struct IRecordInfo* piri;
    }; /* size: 0x0010 */
  }; /* size: 0x0010 */
  /* 0x0010 */ struct tagSAFEARRAY array;
}; /* size: 0x0030 */

struct HREG
{
  /* 0x0000 */ void* h;
}; /* size: 0x0008 */

typedef struct __MIDL_ICallFrame_0002
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ unsigned char fOut;
  /* 0x0002 */ char Padding_1583[2];
  /* 0x0004 */ unsigned long stackOffset;
  /* 0x0008 */ unsigned long cbParam;
} _MIDL_ICallFrame_0002, *P_MIDL_ICallFrame_0002; /* size: 0x000c */

typedef struct __MIDL_ICallFrame_0004
{
  /* 0x0000 */ unsigned char fIn;
  /* 0x0001 */ char Padding_1584[3];
  /* 0x0004 */ unsigned long dwDestContext;
  /* 0x0008 */ void* pvDestContext;
  /* 0x0010 */ struct IUnknown* punkReserved;
  /* 0x0018 */ struct _GUID guidTransferSyntax;
} _MIDL_ICallFrame_0004, *P_MIDL_ICallFrame_0004; /* size: 0x0028 */

struct OAUTIL
{
  /* 0x0000 */ struct ICallFrameWalker* m_pWalkerCopy;
  /* 0x0008 */ struct ICallFrameWalker* m_pWalkerFree;
  /* 0x0010 */ struct ICallFrameWalker* m_pWalkerWalk;
  /* 0x0018 */ int m_fWorkingOnInParam;
  /* 0x001c */ int m_fWorkingOnOutParam;
  /* 0x0020 */ int m_fDoNotWalkInterfaces;
  /* 0x0024 */ long __PADDING__[1];
}; /* size: 0x0028 */

struct METHOD_DESCRIPTOR
{
  /* 0x0000 */ wchar_t* m_szMethodName;
  /* 0x0008 */ short m_cParams;
  /* 0x000a */ char Padding_1585[6];
  /* 0x0010 */ unsigned short* m_paramVTs;
}; /* size: 0x0018 */

class CALLFRAME_CACHE_ENTRY<TYPEINFOVTBL>
{
  /* 0x0000 */ long Padding_1586[2];
  /* 0x0008 */ unsigned long m_dwReleaseTime;
  /* 0x000c */ long Padding_1587;
  /* 0x0010 */ class CALLFRAME_CACHE<TYPEINFOVTBL>* m_pcache;
  /* 0x0018 */ volatile long m_refs;
  /* 0x001c */ struct _GUID m_guidkey;
}; /* size: 0x0030 */

struct INTERFACE_HELPER_CLSID
{
  /* 0x0000 */ long Padding_1588[12];
  /* 0x0030 */ struct _GUID m_clsid;
  /* 0x0040 */ int m_fDisableTypeLib;
  /* 0x0044 */ int m_fDisableAll;
  /* 0x0048 */ int m_fFoundHelper;
  /* 0x004c */ long __PADDING__[1];
}; /* size: 0x0050 */

class CALLFRAME_CACHE_ENTRY<INTERFACE_HELPER_CLSID>
{
  /* 0x0000 */ long Padding_1589[2];
  /* 0x0008 */ unsigned long m_dwReleaseTime;
  /* 0x000c */ long Padding_1590;
  /* 0x0010 */ class CALLFRAME_CACHE<INTERFACE_HELPER_CLSID>* m_pcache;
  /* 0x0018 */ volatile long m_refs;
  /* 0x001c */ struct _GUID m_guidkey;
}; /* size: 0x0030 */

struct INTERPRETER_OPT_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char ServerMustSize : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char ClientMustSize : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char HasReturn : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasPipes : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasAsyncUuid : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char HasExtensions : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char HasAsyncHandle : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct MD_METHOD
{
  /* 0x0000 */ unsigned long m_numberOfParams;
  /* 0x0004 */ long Padding_1591;
  /* 0x0008 */ struct PARAM_DESCRIPTION* m_params;
  /* 0x0010 */ struct INTERPRETER_OPT_FLAGS m_optFlags;
  /* 0x0011 */ char Padding_1592[3];
  /* 0x0014 */ unsigned long m_rpcFlags;
  /* 0x0018 */ const struct _MIDL_STUB_DESC* m_pStubDesc;
  /* 0x0020 */ unsigned long m_cbPushedByCaller;
  /* 0x0024 */ unsigned short m_cbClientBuffer;
  /* 0x0026 */ unsigned short m_cbServerBuffer;
  /* 0x0028 */ unsigned long m_cbStackInclRet;
  /* 0x002c */ struct __MIDL_ICallFrame_0001 m_info;
  /* 0x0068 */ int m_fCanShareAllParameters;
  /* 0x006c */ long Padding_1593;
  /* 0x0070 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0078 */ unsigned long m_iMethod;
  /* 0x007c */ long Padding_1594;
  /* 0x0080 */ struct MD_INTERFACE* m_pmdInterface;
  /* 0x0088 */ struct MD_PARAM* m_rgParams;
  /* 0x0090 */ wchar_t* m_wszMethodName;
  /* 0x0098 */ struct NDR_PROC_HEADER_EXTS* m_pHeaderExts;
}; /* size: 0x00a0 */

struct MD_INTERFACE
{
  /* 0x0000 */ volatile long m_refs;
  /* 0x0004 */ unsigned long m_cMethods;
  /* 0x0008 */ unsigned long m_cMethodsInBaseInterface;
  /* 0x000c */ long Padding_1595;
  /* 0x0010 */ struct MD_METHOD* m_rgMethodsAlloc;
  /* 0x0018 */ struct MD_METHOD* m_rgMethods;
  /* 0x0020 */ struct MD_PARAM* m_rgParams;
  /* 0x0028 */ int m_fFreeInfoOnRelease;
  /* 0x002c */ int m_fDerivesFromIDispatch;
  /* 0x0030 */ const struct tagCInterfaceStubHeader* m_pHeader;
  /* 0x0038 */ const char* m_szInterfaceName;
  /* 0x0040 */ struct MD_INTERFACE_CACHE* m_pcache;
}; /* size: 0x0048 */

struct MD_INTERFACE_CACHE
{
}; /* size: 0x00b8 */

struct INTERPRETER_FLAGS
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned char FullPtrUsed : 1; /* bit position: 0 */
    /* 0x0000 */ unsigned char RpcSsAllocUsed : 1; /* bit position: 1 */
    /* 0x0000 */ unsigned char ObjectProc : 1; /* bit position: 2 */
    /* 0x0000 */ unsigned char HasRpcFlags : 1; /* bit position: 3 */
    /* 0x0000 */ unsigned char IgnoreObjectException : 1; /* bit position: 4 */
    /* 0x0000 */ unsigned char HasCommOrFault : 1; /* bit position: 5 */
    /* 0x0000 */ unsigned char UseNewInitRoutines : 1; /* bit position: 6 */
    /* 0x0000 */ unsigned char Unused : 1; /* bit position: 7 */
  }; /* bitfield */
}; /* size: 0x0001 */

struct MAP_SHARED<MAP_KEY_GUID,MD_INTERFACE *>
{
}; /* size: 0x00b8 */

struct MAP_HASHER<MAP_KEY_GUID>
{
}; /* size: 0x0001 */

struct ICallInterceptor
{
}; /* size: 0x0008 */

struct ICallFrame
{
}; /* size: 0x0008 */

struct ICallFrameInit
{
}; /* size: 0x0008 */

struct DedicatedAllocator<CallFrame>
{
  /* 0x0000 */ union _SLIST_HEADER g_listHead;
  /* 0x0010 */ char __PADDING__[4294967281];
}; /* size: 0x0001 */

struct ICallUnmarshal
{
}; /* size: 0x0008 */

struct IUnkInner
{
}; /* size: 0x0008 */

struct MarshallingChannel
{
  /* 0x0000 */ long Padding_1596[6];
  /* 0x0018 */ struct IMarshallingManager* m_pMarshaller;
  /* 0x0020 */ unsigned long m_dwDestContext;
  /* 0x0024 */ long Padding_1597;
  /* 0x0028 */ void* m_pvDestContext;
  /* 0x0030 */ struct IUnknown* m_punkOuter;
  /* 0x0038 */ long m_refs;
  /* 0x003c */ long __PADDING__[1];
}; /* size: 0x0040 */

struct IMarshalSomeone
{
}; /* size: 0x0008 */

struct NDR_PROC_HEADER_EXTS64
{
  /* 0x0000 */ unsigned char Size;
  /* 0x0001 */ struct INTERPRETER_OPT_FLAGS2 Flags2;
  /* 0x0002 */ unsigned short ClientCorrHint;
  /* 0x0004 */ unsigned short ServerCorrHint;
  /* 0x0006 */ unsigned short NotifyIndex;
  /* 0x0008 */ unsigned short FloatArgMask;
}; /* size: 0x000a */

struct LEGACY_FRAME
{
  /* 0x0000 */ long Padding_1598[4];
  /* 0x0010 */ void* m_pvArgs;
  /* 0x0018 */ const unsigned long m_iMethod;
  /* 0x001c */ long Padding_1599;
  /* 0x0020 */ __int64 m_hrReturnValue;
  /* 0x0028 */ struct LEGACY_INTERCEPTOR* m_pInterceptor;
  /* 0x0030 */ struct ICallFrame* m_premoteFrame;
  /* 0x0038 */ struct ICallFrame* m_pmemoryFrame;
  /* 0x0040 */ int m_fAfterCall;
  /* 0x0044 */ long Padding_1600;
  /* 0x0048 */ struct IUnknown* m_punkOuter;
  /* 0x0050 */ long m_refs;
  /* 0x0054 */ long __PADDING__[1];
}; /* size: 0x0058 */

struct DedicatedAllocator<DISPATCH_CLIENT_FRAME>
{
  /* 0x0000 */ union _SLIST_HEADER g_listHead;
  /* 0x0010 */ char __PADDING__[4294967281];
}; /* size: 0x0001 */

struct DISPATCH_SERVER_FRAME
{
  /* 0x0000 */ long Padding_1601[22];
  /* 0x0058 */ struct FRAME_Invoke m_memoryFrame;
  /* 0x00a0 */ int m_fDoneStubPrecheck;
  /* 0x00a4 */ int m_fDoneStubPostcheck;
}; /* size: 0x00a8 */

struct DedicatedAllocator<DISPATCH_SERVER_FRAME>
{
  /* 0x0000 */ union _SLIST_HEADER g_listHead;
  /* 0x0010 */ char __PADDING__[4294967281];
}; /* size: 0x0001 */

struct MAP_SHARED<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *>
{
}; /* size: 0x00b8 */

class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc
{
  /* 0x0000 */ long Padding_1602[4];
  /* 0x0010 */ class Map<MAP_KEY_GUID,INTERFACE_HELPER_CLSID *,MAP_HASHER<MAP_KEY_GUID>,AllocateThrow>::Assoc* m_pAssocNext;
  /* 0x0018 */ long m_lcUse;
  /* 0x001c */ class MAP_KEY_GUID m_d;
  /* 0x002c */ long Padding_1603;
  /* 0x0030 */ struct INTERFACE_HELPER_CLSID* m_r;
}; /* size: 0x0038 */

class GenericInstantiator<DISPATCH_INTERCEPTOR>
{
}; /* size: 0x0001 */

class ClassRegistration
{
  /* 0x0000 */ struct _GUID clsid;
  /* 0x0010 */ unsigned long serverType;
  /* 0x0014 */ long Padding_1604;
  /* 0x0018 */ struct HINSTANCE__* hModule;
  /* 0x0020 */ const wchar_t* className;
  /* 0x0028 */ const wchar_t* progID;
  /* 0x0030 */ const wchar_t* versionIndependentProgID;
  /* 0x0038 */ const wchar_t* threadingModel;
  /* 0x0040 */ struct _GUID appid;
  /* 0x0050 */ struct _GUID moduleid;
  /* 0x0060 */ int fCreateService;
}; /* size: 0x0068 */

class AppRegistration
{
  /* 0x0000 */ struct _GUID appid;
  /* 0x0010 */ const wchar_t* appName;
  /* 0x0018 */ int dllSurrogate;
  /* 0x001c */ long Padding_1605;
  /* 0x0020 */ struct HINSTANCE__* hModuleSurrogate;
}; /* size: 0x0028 */

struct FRAME_GetTypeInfo
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ unsigned int iTInfo;
  /* 0x000c */ char __pad1[4];
  /* 0x0010 */ unsigned long lcid;
  /* 0x0014 */ char __pad2[4];
  /* 0x0018 */ struct ITypeInfo** ppTInfo;
}; /* size: 0x0020 */

struct FRAME_GetIDsOfNames
{
  /* 0x0000 */ struct IDispatch* This;
  /* 0x0008 */ const struct _GUID& riid;
  /* 0x0010 */ wchar_t** rgszNames;
  /* 0x0018 */ unsigned int cNames;
  /* 0x001c */ char __pad3[4];
  /* 0x0020 */ unsigned long lcid;
  /* 0x0024 */ char __pad4[4];
  /* 0x0028 */ long* rgDispId;
}; /* size: 0x0030 */

typedef struct _callframeinternal_MIDL_TYPE_FORMAT_STRING
{
  /* 0x0000 */ short Pad;
  /* 0x0002 */ unsigned char Format[1257];
  /* 0x04eb */ char __PADDING__[1];
} callframeinternal_MIDL_TYPE_FORMAT_STRING, *Pcallframeinternal_MIDL_TYPE_FORMAT_STRING; /* size: 0x04ec */

struct ITypeLibVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeInfoCount /* function */;
  /* 0x0020 */ void* GetTypeInfo /* function */;
  /* 0x0028 */ void* GetTypeInfoType /* function */;
  /* 0x0030 */ void* GetTypeInfoOfGuid /* function */;
  /* 0x0038 */ void* GetLibAttr /* function */;
  /* 0x0040 */ void* GetTypeComp /* function */;
  /* 0x0048 */ void* GetDocumentation /* function */;
  /* 0x0050 */ void* IsName /* function */;
  /* 0x0058 */ void* FindName /* function */;
  /* 0x0060 */ void* ReleaseTLibAttr /* function */;
}; /* size: 0x0068 */

struct ITypeInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* GetTypeAttr /* function */;
  /* 0x0020 */ void* GetTypeComp /* function */;
  /* 0x0028 */ void* GetFuncDesc /* function */;
  /* 0x0030 */ void* GetVarDesc /* function */;
  /* 0x0038 */ void* GetNames /* function */;
  /* 0x0040 */ void* GetRefTypeOfImplType /* function */;
  /* 0x0048 */ void* GetImplTypeFlags /* function */;
  /* 0x0050 */ void* GetIDsOfNames /* function */;
  /* 0x0058 */ void* Invoke /* function */;
  /* 0x0060 */ void* GetDocumentation /* function */;
  /* 0x0068 */ void* GetDllEntry /* function */;
  /* 0x0070 */ void* GetRefTypeInfo /* function */;
  /* 0x0078 */ void* AddressOfMember /* function */;
  /* 0x0080 */ void* CreateInstance /* function */;
  /* 0x0088 */ void* GetMops /* function */;
  /* 0x0090 */ void* GetContainingTypeLib /* function */;
  /* 0x0098 */ void* ReleaseTypeAttr /* function */;
  /* 0x00a0 */ void* ReleaseFuncDesc /* function */;
  /* 0x00a8 */ void* ReleaseVarDesc /* function */;
}; /* size: 0x00b0 */

struct IRecordInfoVtbl
{
  /* 0x0000 */ void* QueryInterface /* function */;
  /* 0x0008 */ void* AddRef /* function */;
  /* 0x0010 */ void* Release /* function */;
  /* 0x0018 */ void* RecordInit /* function */;
  /* 0x0020 */ void* RecordClear /* function */;
  /* 0x0028 */ void* RecordCopy /* function */;
  /* 0x0030 */ void* GetGuid /* function */;
  /* 0x0038 */ void* GetName /* function */;
  /* 0x0040 */ void* GetSize /* function */;
  /* 0x0048 */ void* GetTypeInfo /* function */;
  /* 0x0050 */ void* GetField /* function */;
  /* 0x0058 */ void* GetFieldNoCopy /* function */;
  /* 0x0060 */ void* PutField /* function */;
  /* 0x0068 */ void* PutFieldNoCopy /* function */;
  /* 0x0070 */ void* GetFieldNames /* function */;
  /* 0x0078 */ void* IsMatchingType /* function */;
  /* 0x0080 */ void* RecordCreate /* function */;
  /* 0x0088 */ void* RecordCreateCopy /* function */;
  /* 0x0090 */ void* RecordDestroy /* function */;
}; /* size: 0x0098 */

class CSafeBindCtx
{
  /* 0x0000 */ struct IBindCtx* _p;
}; /* size: 0x0008 */

class CReadInterfaceDataWithSourceAttributesMarshalingStream
{
  /* 0x0000 */ long Padding_1606[12];
  /* 0x0030 */ unsigned __int64 _cAttributesProvided;
  /* 0x0038 */ const struct MarshalingContextAttributeValue* _pAttributesProvided;
}; /* size: 0x0040 */

struct tagDDECALLDATA
{
  /* 0x0000 */ struct HWND__* hwndSvr;
  /* 0x0008 */ unsigned short wMsg;
  /* 0x000a */ char Padding_1607[6];
  /* 0x0010 */ unsigned __int64 wParam;
  /* 0x0018 */ __int64 lParam;
  /* 0x0020 */ struct HWND__* hwndCli;
  /* 0x0028 */ int fFreeOnError;
  /* 0x002c */ int fDone;
  /* 0x0030 */ class DDE_CHANNEL* pChannel;
}; /* size: 0x0038 */

struct IShellItem2
{
}; /* size: 0x0008 */

struct _TREEITEM;

struct tagTVITEMEXW
{
  /* 0x0000 */ unsigned int mask;
  /* 0x0004 */ long Padding_1608;
  /* 0x0008 */ struct _TREEITEM* hItem;
  /* 0x0010 */ unsigned int state;
  /* 0x0014 */ unsigned int stateMask;
  /* 0x0018 */ wchar_t* pszText;
  /* 0x0020 */ int cchTextMax;
  /* 0x0024 */ int iImage;
  /* 0x0028 */ int iSelectedImage;
  /* 0x002c */ int cChildren;
  /* 0x0030 */ __int64 lParam;
  /* 0x0038 */ int iIntegral;
  /* 0x003c */ unsigned int uStateEx;
  /* 0x0040 */ struct HWND__* hwnd;
  /* 0x0048 */ int iExpandedImage;
  /* 0x004c */ int iReserved;
}; /* size: 0x0050 */

class CPackagerMoniker
{
  /* 0x0000 */ long Padding_1609[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ long Padding_1610;
  /* 0x0010 */ wchar_t* m_szFile;
  /* 0x0018 */ struct IMoniker* m_pmk;
  /* 0x0020 */ int m_fLink;
}; /* size: 0x0028 */

typedef struct _IMAGELISTDRAWPARAMS
{
  /* 0x0000 */ unsigned long cbSize;
  /* 0x0004 */ long Padding_1611;
  /* 0x0008 */ struct _IMAGELIST* himl;
  /* 0x0010 */ int i;
  /* 0x0014 */ long Padding_1612;
  /* 0x0018 */ struct HDC__* hdcDst;
  /* 0x0020 */ int x;
  /* 0x0024 */ int y;
  /* 0x0028 */ int cx;
  /* 0x002c */ int cy;
  /* 0x0030 */ int xBitmap;
  /* 0x0034 */ int yBitmap;
  /* 0x0038 */ unsigned long rgbBk;
  /* 0x003c */ unsigned long rgbFg;
  /* 0x0040 */ unsigned int fStyle;
  /* 0x0044 */ unsigned long dwRop;
  /* 0x0048 */ unsigned long fState;
  /* 0x004c */ unsigned long Frame;
  /* 0x0050 */ unsigned long crEffect;
  /* 0x0054 */ long __PADDING__[1];
} IMAGELISTDRAWPARAMS, *PIMAGELISTDRAWPARAMS; /* size: 0x0058 */

typedef struct _IMAGEINFO
{
  /* 0x0000 */ struct HBITMAP__* hbmImage;
  /* 0x0008 */ struct HBITMAP__* hbmMask;
  /* 0x0010 */ int Unused1;
  /* 0x0014 */ int Unused2;
  /* 0x0018 */ struct tagRECT rcImage;
} IMAGEINFO, *PIMAGEINFO; /* size: 0x0028 */

struct IOlePackagerLinkNotify
{
}; /* size: 0x0008 */

struct IFunctionDiscoveryNotification
{
}; /* size: 0x0008 */

struct tagDISPATCHDATA
{
  /* 0x0000 */ long scode;
  /* 0x0004 */ long Padding_1613;
  /* 0x0008 */ void* pData;
}; /* size: 0x0010 */

struct tagOLE1DISPATCHDATA
{
  /* 0x0000 */ enum DDE_DISPATCH_FUNC wDispFunc;
}; /* size: 0x0004 */

struct DDEADVISE
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short reserved : 14; /* bit position: 0 */
    /* 0x0000 */ unsigned short fDeferUpd : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
}; /* size: 0x0004 */

struct DDEDATA
{
  struct /* bitfield */
  {
    /* 0x0000 */ unsigned short unused : 12; /* bit position: 0 */
    /* 0x0000 */ unsigned short fResponse : 1; /* bit position: 12 */
    /* 0x0000 */ unsigned short fRelease : 1; /* bit position: 13 */
    /* 0x0000 */ unsigned short reserved : 1; /* bit position: 14 */
    /* 0x0000 */ unsigned short fAckReq : 1; /* bit position: 15 */
  }; /* bitfield */
  /* 0x0002 */ short cfFormat;
  /* 0x0004 */ unsigned char Value[1];
  /* 0x0005 */ char __PADDING__[1];
}; /* size: 0x0006 */

typedef struct _SQM_STREAM_ENTRY_EX
{
  /* 0x0000 */ unsigned long cbStruct;
  /* 0x0004 */ unsigned long dwType;
  union
  {
    union
    {
      /* 0x0008 */ const wchar_t* pwszVal;
      /* 0x0008 */ unsigned long dwVal;
      /* 0x0008 */ unsigned __int64 qwVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ val;
} SQM_STREAM_ENTRY_EX, *PSQM_STREAM_ENTRY_EX; /* size: 0x0010 */

typedef struct _SQM_STREAM_ENTRY
{
  /* 0x0000 */ unsigned long dwType;
  /* 0x0004 */ long Padding_1614;
  union
  {
    union
    {
      /* 0x0008 */ const wchar_t* pwszVal;
      /* 0x0008 */ unsigned long dwVal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ val;
} SQM_STREAM_ENTRY, *PSQM_STREAM_ENTRY; /* size: 0x0010 */

class MapEnumToSQMData<enum RpcssSQMFlags>
{
}; /* size: 0x0001 */

struct INFO
{
  /* 0x0000 */ int fUsed;
  /* 0x0004 */ unsigned long dwConnection;
  /* 0x0008 */ unsigned short cf;
  /* 0x000a */ char Padding_1615[2];
  /* 0x000c */ unsigned long grfAdvf;
}; /* size: 0x0010 */

struct tagDOCDISPATCHDATA
{
  /* 0x0000 */ long Padding_1616[2];
  /* 0x0008 */ struct HWND__* hwnd;
  /* 0x0010 */ unsigned long msg;
  /* 0x0014 */ long Padding_1617;
  /* 0x0018 */ unsigned __int64 wParam;
  /* 0x0020 */ __int64 lParam;
  /* 0x0028 */ void* hdata;
  /* 0x0030 */ unsigned short aItem;
  /* 0x0032 */ char Padding_1618[6];
  /* 0x0038 */ class CDefClient* lpclient;
}; /* size: 0x0040 */

typedef struct _CLILIST
{
  /* 0x0000 */ void* hcliNext;
  /* 0x0008 */ void* info[20];
} CLILIST, *PCLILIST; /* size: 0x00a8 */

class CMapDwordPtr
{
  /* 0x0000 */ class CMapKeyToValue m_mkv;
}; /* size: 0x0048 */

typedef struct _HOSTNAMES
{
  /* 0x0000 */ unsigned short clientNameOffset;
  /* 0x0002 */ unsigned short documentNameOffset;
  /* 0x0004 */ unsigned char data[1];
  /* 0x0005 */ char __PADDING__[1];
} HOSTNAMES, *PHOSTNAMES; /* size: 0x0006 */

class CEnumSTATDATA
{
  /* 0x0000 */ long Padding_1619[2];
  /* 0x0008 */ unsigned long m_refs;
  /* 0x000c */ int m_iDataEnum;
  /* 0x0010 */ class CDAHolder* m_pHolder;
}; /* size: 0x0018 */

class COAHolder
{
  /* 0x0000 */ long Padding_1620[8];
  /* 0x0020 */ struct IAdviseSink** m_ppIAS;
  /* 0x0028 */ int m_iSize;
}; /* size: 0x0030 */

class CMemBytes
{
  /* 0x0000 */ long Padding_1621[2];
  /* 0x0008 */ unsigned long m_dwSig;
  /* 0x000c */ unsigned long m_refs;
  /* 0x0010 */ void* m_hMem;
  /* 0x0018 */ struct MEMSTM* m_pData;
}; /* size: 0x0020 */

class CDragDefaultCursors
{
  /* 0x0000 */ struct HICON__* ahcursorDefaults[4][2];
}; /* size: 0x0040 */

class CForcedDropTarget
{
  /* 0x0000 */ struct HWND__* _hwndFDTCurrent;
  /* 0x0008 */ int _fDragDropActive;
}; /* size: 0x0010 */

class CompObjStmData
{
  /* 0x0000 */ struct CompObjHdr m_hdr;
  /* 0x001c */ unsigned long m_cchUserType;
  /* 0x0020 */ unsigned long m_cchProgID;
  /* 0x0024 */ unsigned long m_dwFormatTag;
  /* 0x0028 */ unsigned long m_ulFormatID;
  /* 0x002c */ long Padding_1622;
  /* 0x0030 */ wchar_t* m_pszOUserType;
  /* 0x0038 */ wchar_t* m_pszOProgID;
  /* 0x0040 */ char* m_pszAUserType;
  /* 0x0048 */ char* m_pszAProgID;
  /* 0x0050 */ enum TXTTYPE ttClipString;
}; /* size: 0x0058 */

class CCacheNode
{
  /* 0x0000 */ struct _GUID m_clsid;
  /* 0x0010 */ struct tagFORMATETC m_foretc;
  /* 0x0030 */ unsigned long m_advf;
  /* 0x0034 */ long m_lWidth;
  /* 0x0038 */ long m_lHeight;
  /* 0x003c */ unsigned long m_dwFlags;
  /* 0x0040 */ struct IStorage* m_pStg;
  /* 0x0048 */ int m_iStreamNum;
  /* 0x004c */ unsigned long m_dwPresBitsPos;
  /* 0x0050 */ unsigned long m_dwSavedPresBitsPos;
  /* 0x0054 */ int m_fConvert;
  /* 0x0058 */ struct IOlePresObj* m_pPresObj;
  /* 0x0060 */ struct IOlePresObj* m_pPresObjAfterFreeze;
  /* 0x0068 */ struct IDataObject* m_pDataObject;
  /* 0x0070 */ unsigned long m_dwAdvConnId;
}; /* size: 0x0078 */

class ios
{
  union
  {
    /* 0x0000 */ const long basefield;
    /* 0x0000 */ const long adjustfield;
    struct
    {
      /* 0x0000 */ const long floatfield;
      /* 0x0004 */ long Padding_1623;
      /* 0x0008 */ class streambuf* bp;
      /* 0x0010 */ int state;
      /* 0x0014 */ int ispecial;
      /* 0x0018 */ int ospecial;
      /* 0x001c */ int isfx_special;
      /* 0x0020 */ int osfx_special;
      /* 0x0024 */ int x_delbuf;
      /* 0x0028 */ class ostream* x_tie;
      /* 0x0030 */ long x_flags;
      /* 0x0034 */ int x_precision;
      /* 0x0038 */ char x_fill;
      /* 0x0039 */ char Padding_1624[3];
      /* 0x003c */ int x_width;
    }; /* size: 0x0039 */
    /* 0x0000 */ void* stdioflush /* function */;
    /* 0x0000 */ long x_maxbit;
    /* 0x0000 */ int x_curindex;
    /* 0x0000 */ int sunk_with_stdio;
    /* 0x0000 */ long x_statebuf[8];
    /* 0x0000 */ int fLockcInit;
    /* 0x0000 */ struct _CRT_CRITICAL_SECTION x_lockc;
  }; /* size: 0x0039 */
  /* 0x0039 */ char Padding_1625[7];
  /* 0x0040 */ int LockFlg;
  /* 0x0044 */ long Padding_1626;
  /* 0x0048 */ struct _CRT_CRITICAL_SECTION x_lock;
}; /* size: 0x0070 */

class streambuf
{
  /* 0x0000 */ long Padding_1627[2];
  /* 0x0008 */ int _fAlloc;
  /* 0x000c */ int _fUnbuf;
  /* 0x0010 */ int x_lastc;
  /* 0x0014 */ long Padding_1628;
  /* 0x0018 */ char* _base;
  /* 0x0020 */ char* _ebuf;
  /* 0x0028 */ char* _pbase;
  /* 0x0030 */ char* _pptr;
  /* 0x0038 */ char* _epptr;
  /* 0x0040 */ char* _eback;
  /* 0x0048 */ char* _gptr;
  /* 0x0050 */ char* _egptr;
  /* 0x0058 */ int LockFlg;
  /* 0x005c */ long Padding_1629;
  /* 0x0060 */ struct _CRT_CRITICAL_SECTION x_lock;
}; /* size: 0x0088 */

class iostream
{
}; /* size: 0x0090 */

struct CArray<CCacheNode>::ArrayNode
{
  /* 0x0000 */ class CCacheNode item;
  /* 0x0078 */ unsigned long next;
  /* 0x007c */ unsigned long prev;
}; /* size: 0x0080 */

class CEnumStatData
{
  /* 0x0000 */ long Padding_1630[3];
  /* 0x000c */ unsigned long m_ulFlags;
  /* 0x0010 */ unsigned long m_refs;
  /* 0x0014 */ unsigned long m_index;
  /* 0x0018 */ class CArray<CStatData>* m_pSDArray;
}; /* size: 0x0020 */

class CMfObject
{
  /* 0x0000 */ long Padding_1631[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ long Padding_1632;
  /* 0x0010 */ struct HMETAFILE__* m_hPres;
  /* 0x0018 */ struct _METAINFO* m_pMetaInfo;
  /* 0x0020 */ struct _METADC* m_pCurMdc;
  /* 0x0028 */ int m_fMetaDC;
  /* 0x002c */ int m_nRecord;
  /* 0x0030 */ HRESULT m_error;
  /* 0x0034 */ long Padding_1633;
  /* 0x0038 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0040 */ int m_fConvert;
  /* 0x0044 */ long Padding_1634;
  /* 0x0048 */ void* m_pfnContinue /* function */;
  /* 0x0050 */ unsigned __int64 m_dwContinue;
  /* 0x0058 */ unsigned long m_dwAspect;
  /* 0x005c */ unsigned long m_dwSize;
  /* 0x0060 */ long m_lWidth;
  /* 0x0064 */ long m_lHeight;
  /* 0x0068 */ class CCacheNode* m_pCacheNode;
  /* 0x0070 */ struct HPALETTE__* m_hPalDCOriginal;
  /* 0x0078 */ struct HPALETTE__* m_hPalLast;
}; /* size: 0x0080 */

typedef struct _METAINFO
{
  /* 0x0000 */ struct _METADC headDc;
  /* 0x0020 */ int xwo;
  /* 0x0024 */ int ywo;
  /* 0x0028 */ int xwe;
  /* 0x002c */ int ywe;
  /* 0x0030 */ int xro;
  /* 0x0034 */ int yro;
} METAINFO, *PMETAINFO; /* size: 0x0038 */

class CEMfObject
{
  /* 0x0000 */ long Padding_1635[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ long Padding_1636;
  /* 0x0010 */ struct HENHMETAFILE__* m_hPres;
  /* 0x0018 */ int m_fMetaDC;
  /* 0x001c */ int m_nRecord;
  /* 0x0020 */ HRESULT m_error;
  /* 0x0024 */ long Padding_1637;
  /* 0x0028 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0030 */ void* m_pfnContinue /* function */;
  /* 0x0038 */ unsigned __int64 m_dwContinue;
  /* 0x0040 */ unsigned long m_dwAspect;
  /* 0x0044 */ unsigned long m_dwSize;
  /* 0x0048 */ long m_lWidth;
  /* 0x004c */ long m_lHeight;
  /* 0x0050 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0058 */

class CGenObject
{
  /* 0x0000 */ long Padding_1638[2];
  /* 0x0008 */ unsigned long m_ulRefs;
  /* 0x000c */ unsigned long m_dwAspect;
  /* 0x0010 */ unsigned long m_dwSize;
  /* 0x0014 */ long m_lWidth;
  /* 0x0018 */ long m_lHeight;
  /* 0x001c */ long Padding_1639;
  /* 0x0020 */ void* m_hPres;
  /* 0x0028 */ unsigned short m_cfFormat;
  /* 0x002a */ char Padding_1640[6];
  /* 0x0030 */ class CCacheNode* m_pCacheNode;
}; /* size: 0x0038 */

struct Microsoft::WRL::RuntimeClassFlags<3>
{
  /* 0x0000 */ const unsigned int value;
  /* 0x0004 */ char __PADDING__[4294967293];
}; /* size: 0x0001 */

class CancellableCall
{
  /* 0x0000 */ unsigned long m_tid;
  /* 0x0004 */ HRESULT m_hr;
  /* 0x0008 */ class CancellableCall* m_pPrevious;
  /* 0x0010 */ class CancellableCall* m_pNext;
}; /* size: 0x0018 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IDataObject>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IDataObject> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IGlobalInterfaceTable> >
{
}; /* size: 0x0008 */

class CClipClientDataWrapper
{
  /* 0x0000 */ long Padding_1641[12];
  /* 0x0030 */ unsigned long m_refs;
  /* 0x0034 */ long Padding_1642;
  /* 0x0038 */ class Microsoft::WRL::ComPtr<IDataObject> m_pBrokerClipData;
  /* 0x0040 */ class Windows::Internal::GitPtr m_pGitInnerClipData;
  /* 0x0050 */ BOOL m_fLoaded;
}; /* size: 0x0058 */

class Windows::Internal::GitPtrImpl<Windows::Internal::GitPtr>
{
  /* 0x0000 */ long Padding_1643[2];
  /* 0x0008 */ unsigned long _cookie;
  /* 0x000c */ HRESULT _hrInitGit;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IUnwrappableDataObject> const >;

class Microsoft::WRL::Details::RemoveIUnknownBase<IUnwrappableDataObject>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBroker> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClipboardBroker>* ptr_;
}; /* size: 0x0008 */

struct FORMATETCDATAARRAY32
{
  /* 0x0000 */ unsigned long _dwSig;
  /* 0x0004 */ unsigned long _dwSize;
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ unsigned long _cFormats;
  /* 0x0010 */ unsigned long _dwMiscArrayFlags;
  /* 0x0014 */ int _fIs64BitArray;
  /* 0x0018 */ struct FORMATETCDATA32 _FormatEtcData[1];
}; /* size: 0x0038 */

class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IUnknown,Microsoft::WRL::Details::InterfaceList<Microsoft::WRL::FtmBase,Microsoft::WRL::Details::Nil> >,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>
{
  /* 0x0000 */ long Padding_1644[11];
  /* 0x002c */ volatile long refcount_;
}; /* size: 0x0030 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,Microsoft::WRL::FtmBase,1,1>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<3,IMarshal,1,0>
{
}; /* size: 0x0001 */

class RunSyncOnMTAThread::__l6::<lambda_2417A7241A3718ED>;

class Microsoft::WRL::ComPtr<CBrokeredClipDataObject>
{
  /* 0x0000 */ class CBrokeredClipDataObject* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IClipboardBroker,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>
{
  /* 0x0000 */ long Padding_1645[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

struct Microsoft::WRL::Details::ImplementsHelper<Microsoft::WRL::RuntimeClassFlags<2>,Microsoft::WRL::Details::InterfaceList<IClipboardBroker,Microsoft::WRL::Details::Nil>,0,0>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<ICallingProcessInfo>
{
  /* 0x0000 */ struct ICallingProcessInfo* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ICallingProcessInfo> const >;

class Microsoft::WRL::Details::RemoveIUnknownBase<ICallingProcessInfo>
{
}; /* size: 0x0008 */

class Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference>
{
  /* 0x0000 */ class CClipboardBroker::CClipboardBrokerExternalReference* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker::CClipboardBrokerExternalReference> >;

class Microsoft::WRL::Details::RuntimeClass<Microsoft::WRL::Details::InterfaceList<IClipboardBrokerInternal,Microsoft::WRL::Details::Nil>,Microsoft::WRL::RuntimeClassFlags<2>,1,0,0>
{
  /* 0x0000 */ long Padding_1646[3];
  /* 0x000c */ volatile long refcount_;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IImpersonateClipboardOwner> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> const >;

class Microsoft::WRL::Details::RemoveIUnknownBase<IClipboardBrokerInternal>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IClipboardBrokerInternal> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IClipboardBrokerInternal>* ptr_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RemoveIUnknownBase<CClipboardBroker::CClipboardBrokerMTAHelper>;

class CBrokerInstanceHolder
{
  /* 0x0000 */ class Windows::Internal::GitPtr _GITBroker;
}; /* size: 0x0010 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IRuntimeBroker> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IRuntimeBroker>* ptr_;
}; /* size: 0x0008 */

class ClipboardBrokerFactory
{
  union
  {
    /* 0x0000 */ class CBrokerInstanceHolder* s_pServerBroker;
    /* 0x0000 */ void* s_hServerThreadEvent;
    /* 0x0000 */ void* s_hWorkerThread;
    /* 0x0000 */ void* s_hServerThreadStopEvent;
    /* 0x0000 */ class Microsoft::WRL::Wrappers::CriticalSection s_initCS;
  }; /* size: 0x0028 */
}; /* size: 0x0001 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<CClipboardBroker> >;

class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerExternalReference,0>
{
  /* 0x0000 */ void* buffer_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker::CClipboardBrokerMTAHelper,0>
{
  /* 0x0000 */ void* buffer_;
}; /* size: 0x0008 */

class Microsoft::WRL::Details::MakeAllocator<CClipboardBroker,0>
{
  /* 0x0000 */ void* buffer_;
}; /* size: 0x0008 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBroker,0,0>
{
}; /* size: 0x0001 */

struct Microsoft::WRL::Details::VerifyInterfaceHelper<2,IClipboardBrokerInternal,0,0>
{
}; /* size: 0x0001 */

class RunSyncOnMTAThread::__l6::<lambda_2E683E8F639D62FE>;

class CClipboardBroker::SetClipboard::__l27::<lambda_AB1878220BE05968>;

class Microsoft::WRL::Details::RemoveIUnknownBase<IOSTaskCompletion>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IOSTaskCompletion> >
{
}; /* size: 0x0008 */

class CGenericObject
{
  /* 0x0000 */ class CClass m_class;
  /* 0x0018 */ class CClass m_classLast;
  /* 0x0030 */ class CPres* m_ppres;
  /* 0x0038 */ class CData m_dataNative;
  /* 0x0058 */ int m_fLink;
  /* 0x005c */ int m_fStatic;
  /* 0x0060 */ int m_fNoBlankPres;
  /* 0x0064 */ long Padding_1647;
  /* 0x0068 */ wchar_t* m_szTopic;
  /* 0x0070 */ wchar_t* m_szItem;
  /* 0x0078 */ unsigned long m_lnkupdopt;
}; /* size: 0x0080 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> const >;

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<ClipboardDataObjectTask> >
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::RemoveIUnknownBase<CBrokeredClipDataObject>
{
}; /* size: 0x0030 */

class CClipDataObject::GetRealDataObjPtr::__l45::<lambda_7601126E30B421F7>;

class CAutoHandle_HGLOBALPolicy
{
}; /* size: 0x0001 */

class CTContainer_PolicyLocalMem
{
}; /* size: 0x0001 */

class CTContainer_PolicyHeapMem
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HKEY__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HACCEL__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HICON__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HWINSTA__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HBITMAP__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HBRUSH__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HPALETTE__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HRGN__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<HDC__ *>
{
}; /* size: 0x0001 */

class CAutoHandle_Policy<_IMAGELIST *>
{
}; /* size: 0x0001 */

class CUnkownOnlyWrapper
{
}; /* size: 0x0020 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IStream> const >;

class Microsoft::WRL::Details::RemoveIUnknownBase<IStream>
{
}; /* size: 0x0008 */

class CReadOnlyStream
{
}; /* size: 0x0020 */

class CLimitedWritableStream
{
}; /* size: 0x0020 */

class Microsoft::WRL::ComPtr<IStorage>
{
  /* 0x0000 */ struct IStorage* ptr_;
}; /* size: 0x0008 */

class CWrapperBase<IStorage>
{
  /* 0x0000 */ long Padding_1648[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IStorage> m_pInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_pPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

class Microsoft::WRL::Details::RemoveIUnknownBase<IStorage>
{
}; /* size: 0x0008 */

class CWrapperBase<IEnumSTATSTG>
{
  /* 0x0000 */ long Padding_1649[2];
  /* 0x0008 */ class Microsoft::WRL::ComPtr<IEnumSTATSTG> m_pInnerObject;
  /* 0x0010 */ class Microsoft::WRL::ComPtr<ClipboardDataObjectTask> m_pPLMTask;
  /* 0x0018 */ volatile unsigned long m_refs;
}; /* size: 0x0020 */

class CLimitedWritableStorage
{
}; /* size: 0x0020 */

class CAutoHandle<void *>
{
}; /* size: 0x0008 */

class Microsoft::WRL::Details::ComPtrRefBase<Microsoft::WRL::ComPtr<IEnumFORMATETC> >
{
  /* 0x0000 */ class Microsoft::WRL::ComPtr<IEnumFORMATETC>* ptr_;
}; /* size: 0x0008 */

class CReadOnlyStorage::OpenStorage::__l3::<lambda_191F798414ADB84B>;

class CReadOnlyStorage::Stat::__l3::<lambda_2864C89247375571>;

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Reset::__l3::<lambda_385285479B38A6BA>;

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Skip::__l3::<lambda_3FE4B16529315704>;

class CLimitedEnum<IEnumFORMATETC,tagFORMATETC>::Clone::__l3::<lambda_535061216AA0B9B3>;

class CLimitedWritableStorage::CreateStream::__l3::<lambda_80612E54ECEB959E>;

class CLimitedEnum<IEnumSTATSTG,tagSTATSTG>::Next::__l3::<lambda_8A2C96338B5302B9>;

class CBrokeredClipDataObject::GetDataHere::__l25::<lambda_B48BF3BF89CC31FF>;

class CReadOnlyStorage::OpenStream::__l3::<lambda_B6E0DDFFD7B936DC>;

class CBrokeredClipDataObject::QueryGetData::__l9::<lambda_C1C14A71CE15713B>;

class CBrokeredClipDataObject::EnumFormatEtc::__l9::<lambda_CC6CC56F32D72DC0>;

class CWrapperBase<IEnumSTATSTG>::{dtor}::__l3::<lambda_FF87648DB59E4816>;

struct IEnumHolder
{
}; /* size: 0x0008 */

typedef struct _DROPFILES
{
  /* 0x0000 */ unsigned long pFiles;
  /* 0x0004 */ struct _POINTL pt;
  /* 0x000c */ unsigned long fNC;
  /* 0x0010 */ unsigned long fWide;
} DROPFILES, *PDROPFILES; /* size: 0x0014 */

class CDragDataObject
{
  /* 0x0000 */ long Padding_1650[2];
  /* 0x0008 */ unsigned long _cRefs;
  /* 0x000c */ long Padding_1651;
  /* 0x0010 */ struct tagInterfaceData* _pIFDDataObject;
  /* 0x0018 */ int _fSourceIsAppContainer;
  /* 0x001c */ long Padding_1652;
  /* 0x0020 */ struct IDataObject* _pIDataObject;
  /* 0x0028 */ struct FORMATETCDATAARRAY* m_pFormatEtcDataArray;
  /* 0x0030 */ unsigned long _dwSmId;
}; /* size: 0x0038 */

class CPaccelEnum
{
  /* 0x0000 */ struct tagACCEL* _lpaccel;
  /* 0x0008 */ struct tagACCEL* _lpaccelBase;
}; /* size: 0x0010 */

class CFrameFilter
{
  /* 0x0000 */ long Padding_1653[6];
  /* 0x0018 */ struct HWND__* m_hwndObject;
  /* 0x0020 */ struct HWND__* m_hwndFrame;
  /* 0x0028 */ struct IOleInPlaceFrame* m_lpFrame;
  /* 0x0030 */ struct IOleInPlaceActiveObject* m_lpObject;
  /* 0x0038 */ void* m_lpfnPrevWndProc /* function */;
  /* 0x0040 */ int m_fObjectMenu;
  /* 0x0044 */ int m_fCurItemPopup;
  /* 0x0048 */ int m_fInMenuMode;
  /* 0x004c */ int m_fDiscardWmCommand;
  /* 0x0050 */ int m_fGotMenuCloseEvent;
  /* 0x0054 */ int m_fRemovedWndProc;
  /* 0x0058 */ unsigned int m_cmdId;
  /* 0x005c */ long Padding_1654;
  /* 0x0060 */ unsigned __int64 m_uCurItemID;
  /* 0x0068 */ struct tagOLEMENU* m_lpOleMenu;
  /* 0x0070 */ struct HMENU__* m_hmenuCombined;
  /* 0x0078 */ struct HWND__* m_hwndFocusOnEnter;
  /* 0x0080 */ int m_cAltTab;
}; /* size: 0x0088 */

class CDefObject::CPrivUnknown
{
}; /* size: 0x0008 */

class CDefObject
{
  /* 0x0000 */ long Padding_1655[20];
  /* 0x0050 */ class CDefObject::CPrivUnknown m_Unknown;
  /* 0x0058 */ class CDefObject::CAdvSinkImpl m_AdviseSink;
  /* 0x0060 */ HRESULT m_ContentSRVMSHResult;
  /* 0x0064 */ unsigned long m_ContentSRVMSBits;
  /* 0x0068 */ HRESULT m_ContentREGMSHResult;
  /* 0x006c */ unsigned long m_ContentREGMSBits;
  /* 0x0070 */ struct IOleObject* m_pOleDelegate;
  /* 0x0078 */ struct IDataObject* m_pDataDelegate;
  /* 0x0080 */ struct IPersistStorage* m_pPSDelegate;
  /* 0x0088 */ unsigned long m_cConnections;
  /* 0x008c */ long Padding_1656;
  /* 0x0090 */ struct IUnknown* m_pUnkOuter;
  /* 0x0098 */ struct _GUID m_clsidServer;
  /* 0x00a8 */ struct _GUID m_clsidBits;
  /* 0x00b8 */ unsigned long m_flags;
  /* 0x00bc */ unsigned long m_dwObjFlags;
  /* 0x00c0 */ struct IClassFactory* m_pCFDelegate;
  /* 0x00c8 */ struct IUnknown* m_pUnkDelegate;
  /* 0x00d0 */ struct IProxyManager* m_pProxyMgr;
  /* 0x00d8 */ class COleCache* m_pCOleCache;
  /* 0x00e0 */ class COAHolder* m_pOAHolder;
  /* 0x00e8 */ unsigned long m_dwConnOle;
  /* 0x00ec */ long Padding_1657;
  /* 0x00f0 */ struct IOleClientSite* m_pAppClientSite;
  /* 0x00f8 */ struct IStorage* m_pStg;
  /* 0x0100 */ char* m_pHostNames;
  /* 0x0108 */ unsigned long m_ibCntrObj;
  /* 0x010c */ long Padding_1658;
  /* 0x0110 */ class CDataAdviseCache* m_pDataAdvCache;
}; /* size: 0x0118 */

typedef union _ASSEMBLY_VERSION
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned short Build;
      /* 0x0002 */ unsigned short Revision;
      /* 0x0004 */ unsigned short Minor;
      /* 0x0006 */ unsigned short Major;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
} ASSEMBLY_VERSION, *PASSEMBLY_VERSION; /* size: 0x0008 */

class CEnumFmt10
{
  /* 0x0000 */ long Padding_1659[18];
  /* 0x0048 */ struct FMT* m_rgFmt;
  /* 0x0050 */ unsigned __int64 m_cFmt;
}; /* size: 0x0058 */

struct FMT
{
  /* 0x0000 */ unsigned short cf;
  /* 0x0002 */ char Padding_1660[2];
  /* 0x0004 */ unsigned long dw;
}; /* size: 0x0008 */

struct USERPREFS
{
  /* 0x0000 */ char signature[6];
  /* 0x0006 */ unsigned short version;
  /* 0x0008 */ unsigned short size;
  /* 0x000a */ char Padding_1661[6];
  /* 0x0010 */ char* sourceFilename;
  /* 0x0018 */ void* sourceHandle;
  /* 0x0020 */ char* destinationFilename;
  /* 0x0028 */ unsigned char penPatternAction;
  /* 0x0029 */ unsigned char nonSquarePenAction;
  /* 0x002a */ unsigned char penModeAction;
  /* 0x002b */ unsigned char textModeAction;
  /* 0x002c */ unsigned char nonRectRegionAction;
  /* 0x002d */ char Padding_1662[3];
  /* 0x0030 */ int optimizePP;
  /* 0x0034 */ unsigned short reserved[6];
}; /* size: 0x0040 */

struct PICTINFO
{
  /* 0x0000 */ void* hmf;
  /* 0x0008 */ struct tagRECT bbox;
  /* 0x0018 */ unsigned short inch;
  /* 0x001a */ char __PADDING__[6];
}; /* size: 0x0020 */

struct tagWIN16BITMAP
{
  /* 0x0000 */ short bmType;
  /* 0x0002 */ short bmWidth;
  /* 0x0004 */ short bmHeight;
  /* 0x0006 */ short bmWidthBytes;
  /* 0x0008 */ unsigned char bmPlanes;
  /* 0x0009 */ unsigned char bmBitsPixel;
  /* 0x000a */ void* bmBits;
}; /* size: 0x0012 */

struct tagWIN16METAFILEPICT
{
  /* 0x0000 */ short mm;
  /* 0x0002 */ short xExt;
  /* 0x0004 */ short yExt;
  /* 0x0006 */ unsigned short hMF;
}; /* size: 0x0008 */

struct tagOLEPRESSTMHDR
{
  /* 0x0000 */ unsigned long dwAspect;
  /* 0x0004 */ unsigned long dwLindex;
  /* 0x0008 */ unsigned long dwAdvf;
}; /* size: 0x000c */

class PSStream
{
}; /* size: 0x000c */

struct tagSTATPROPBAG
{
  /* 0x0000 */ wchar_t* lpwstrName;
  /* 0x0008 */ unsigned short vt;
  /* 0x000a */ char Padding_1663[2];
  /* 0x000c */ struct _GUID guidPropertyType;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

struct IPropertyBagEx
{
}; /* size: 0x0008 */

struct IEnumSTATPROPBAG
{
}; /* size: 0x0008 */

class CSTATPROPBAGArray
{
  /* 0x0000 */ long _cReferences;
  /* 0x0004 */ long Padding_1664;
  /* 0x0008 */ struct IEnumSTATPROPSTG* _penum;
  /* 0x0010 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0018 */ wchar_t* _poszPrefix;
  /* 0x0020 */ unsigned long _dwFlags;
}; /* size: 0x0028 */

class CSinkList
{
  /* 0x0000 */ struct IProgressNotify* _ppn;
  /* 0x0008 */ unsigned long _dwCookie;
  /* 0x000c */ long Padding_1665;
  /* 0x0010 */ class CSinkList* _pslNext;
}; /* size: 0x0018 */

class CConnectionPoint
{
  /* 0x0000 */ long Padding_1666[2];
  /* 0x0008 */ unsigned long _dwCookie;
  /* 0x000c */ long _cReferences;
  /* 0x0010 */ class CSinkList* _pSinkHead;
  /* 0x0018 */ struct IDocfileAsyncConnectionPoint* _pParentCP;
  /* 0x0020 */ int _fCSInitialized;
  /* 0x0024 */ long Padding_1667;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION _csSinkList;
}; /* size: 0x0050 */

class CAsyncConnectionContainer
{
  /* 0x0000 */ long Padding_1668[2];
  /* 0x0008 */ class CAsyncConnection _cpoint;
}; /* size: 0x0028 */

class SafeCExposedDocFile
{
  /* 0x0000 */ class CExposedDocFile* _p;
}; /* size: 0x0008 */

class CBasedMappedStreamPtr
{
  /* 0x0000 */ unsigned __int64 _p;
}; /* size: 0x0008 */

class SafeCExposedStream
{
  /* 0x0000 */ class CExposedStream* _p;
}; /* size: 0x0008 */

class CUpdate
{
  /* 0x0000 */ class CDfName _dfnCurrent;
  /* 0x0042 */ class CDfName _dfnOriginal;
  /* 0x0084 */ unsigned long _dl;
  /* 0x0088 */ unsigned long _dwFlags;
  /* 0x008c */ long Padding_1669;
  /* 0x0090 */ class CBasedTSetMemberPtr _ptsm;
  /* 0x0098 */ class CBasedUpdatePtr _pudNext;
  /* 0x00a0 */ class CBasedUpdatePtr _pudPrev;
}; /* size: 0x00a8 */

struct SDeltaBlock
{
  /* 0x0000 */ unsigned long _sect[16];
  /* 0x0040 */ unsigned short _fOwn[1];
  /* 0x0042 */ char __PADDING__[2];
}; /* size: 0x0044 */

class CWrappedDocFile
{
  /* 0x0000 */ long Padding_1670[28];
  /* 0x0070 */ unsigned long _df;
  /* 0x0074 */ long Padding_1671;
  /* 0x0078 */ class CBasedDocFilePtr _pdfBase;
  /* 0x0080 */ class CUpdateList _ulChanged;
  /* 0x0090 */ class CUpdateList _ulChangedHolder;
  /* 0x00a0 */ class CUpdateList _ulChangedOld;
  /* 0x00b0 */ class CTSSet _tssDeletedHolder;
  /* 0x00b8 */ class CTransactedTimeEntry _tten;
  /* 0x00d0 */ class CBasedPubDocFilePtr _ppubdf;
  /* 0x00d8 */ struct _GUID _clsid;
  /* 0x00e8 */ unsigned long _grfStateBits;
  /* 0x00ec */ long Padding_1672;
  /* 0x00f0 */ const class CBasedDFBasisPtr _pdfb;
  /* 0x00f8 */ unsigned short _fDirty;
  /* 0x00fa */ unsigned char _fBeginCommit;
}; /* size: 0x0100 */

class CNtfsStream
{
  /* 0x0000 */ long Padding_1673[4];
  /* 0x0010 */ wchar_t* _pwcsName;
  /* 0x0018 */ class CNFFMappedStream _nffMappedStream;
  /* 0x0058 */ unsigned long _grfMode;
  /* 0x005c */ long Padding_1674;
  /* 0x0060 */ void* _hFile;
  /* 0x0068 */ struct IBlockingLock* _pBlockingLock;
  /* 0x0070 */ unsigned long _sig;
  /* 0x0074 */ long _cRefs;
  /* 0x0078 */ class CNtfsStorage* _pnffstg;
  /* 0x0080 */ class TXLargeIntegerWrapper<_LARGE_INTEGER,long,__int64> _liCurrentSeekPosition;
  /* 0x0088 */ class CNtfsStream* _pnffstmPrev;
  /* 0x0090 */ class CNtfsStream* _pnffstmNext;
  /* 0x0098 */ struct _OVERLAPPED _ovlp;
}; /* size: 0x00b8 */

class CNtfsUpdateStreamForPropStg
{
}; /* size: 0x00b8 */

class CNFFTreeMutex
{
  /* 0x0000 */ long Padding_1675[2];
  /* 0x0008 */ long _cRefs;
  /* 0x000c */ int _fInitialized;
  /* 0x0010 */ struct _RTL_CRITICAL_SECTION _cs;
}; /* size: 0x0038 */

class TXLargeIntegerWrapper<_ULARGE_INTEGER,unsigned long,unsigned __int64>
{
  union
  {
    struct
    {
      /* 0x0000 */ unsigned long LowPart;
      /* 0x0004 */ unsigned long HighPart;
    }; /* size: 0x0008 */
    /* 0x0000 */ unsigned __int64 QuadPart;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

class CNtfsStreamName
{
  /* 0x0000 */ unsigned __int64 _count;
  /* 0x0008 */ wchar_t _wsz[256];
}; /* size: 0x0208 */

class CDocfileStreamName
{
  /* 0x0000 */ wchar_t _wszName[37];
}; /* size: 0x004a */

class CRootPubDocFile
{
  /* 0x0000 */ long Padding_1676[38];
  /* 0x0098 */ unsigned long _ulPriLock;
  /* 0x009c */ long Padding_1677;
  /* 0x00a0 */ struct IMalloc* const _pMalloc;
  /* 0x00a8 */ struct _FILETIME _timeModifyAtCommit;
}; /* size: 0x00b0 */

class SafeCExposedIterator
{
  /* 0x0000 */ struct CExposedIterator* _p;
}; /* size: 0x0008 */

struct CExposedIterator
{
  /* 0x0000 */ long Padding_1678[12];
  /* 0x0030 */ class CPubDocFile* _ppdf;
  /* 0x0038 */ class CDFBasis* _pdfb;
  /* 0x0040 */ class CPerContext* _ppc;
  /* 0x0048 */ long _cReferences;
  /* 0x004c */ unsigned long _sig;
  /* 0x0050 */ class CDfName _dfnKey;
  /* 0x0092 */ char __PADDING__[6];
}; /* size: 0x0098 */

struct SDfMarshalPacket
{
  /* 0x0000 */ class CBasedPubDocFilePtr pdf;
  /* 0x0008 */ class CBasedPubStreamPtr pst;
  /* 0x0010 */ class CBasedSeekPointerPtr psp;
  /* 0x0018 */ class CBasedMarshalListPtr pml;
  /* 0x0020 */ class CBasedDFBasisPtr pdfb;
  /* 0x0028 */ class CBasedGlobalContextPtr pgc;
  /* 0x0030 */ class CBasedGlobalFileStreamPtr fsBase;
  /* 0x0038 */ class CBasedGlobalFileStreamPtr fsDirty;
  /* 0x0040 */ class CBasedGlobalFileStreamPtr fsOriginal;
  /* 0x0048 */ unsigned long ulHeapName;
  /* 0x004c */ unsigned long cntxid;
  /* 0x0050 */ struct _GUID cntxkey;
  /* 0x0060 */ class CPerContext* ppc;
  /* 0x0068 */ void* hMem;
}; /* size: 0x0070 */

class CDocfileUnmarshalFactory
{
  /* 0x0000 */ long Padding_1679[4];
  /* 0x0010 */ unsigned long _sig;
}; /* size: 0x0018 */

class CPtrCache
{
  /* 0x0000 */ class CPtrBlock _pbFirst;
  /* 0x01a0 */ class CPtrBlock* _pbHead;
  /* 0x01a8 */ class CPtrBlock* _pbEnum;
  /* 0x01b0 */ int _iEnum;
}; /* size: 0x01b8 */

class ProcessToken
{
  /* 0x0000 */ void* _pSelfSid;
  /* 0x0008 */ wchar_t* _pszSelfSid;
  /* 0x0010 */ void* _pPackageSid;
  /* 0x0018 */ wchar_t* _pszPackageSid;
  /* 0x0020 */ wchar_t* _pszPackageMoniker;
  /* 0x0028 */ int _fHasPackageMoniker;
  /* 0x002c */ enum ProcessToken::UserHiveOkState _userHiveOkState;
  /* 0x0030 */ enum ProcessToken::AppContainerState _appContainerState;
  /* 0x0034 */ enum ProcessToken::DesignModeState _designModeState;
  /* 0x0038 */ enum ProcessToken::SysAppIdState _sysAppIdState;
}; /* size: 0x0040 */

class Microsoft::WRL::Details::ComPtrRef<Microsoft::WRL::ComPtr<IMarshalingStream> >;

class Microsoft::WRL::Details::RemoveIUnknownBase<IMarshalingStream>
{
}; /* size: 0x0008 */

class CComCat
{
  /* 0x0000 */ long Padding_1680[4];
  /* 0x0010 */ class CComCat::CInnerUnk* m_punkInner;
  /* 0x0018 */ struct IUnknown* m_punkOuter;
  /* 0x0020 */ struct ICatInformation* m_pcsICatInfo;
  /* 0x0028 */ struct _RTL_CRITICAL_SECTION m_csCatInfoInit;
  /* 0x0050 */ unsigned long m_dwRefCount;
  /* 0x0054 */ int m_fCsFlag;
  /* 0x0058 */ int m_bLockValid;
}; /* size: 0x0060 */

struct ICatRegister
{
}; /* size: 0x0008 */

class CsCatInfo
{
  /* 0x0000 */ long Padding_1681[2];
  /* 0x0008 */ unsigned long m_uRefs;
  /* 0x000c */ unsigned long m_cCalls;
  /* 0x0010 */ struct ICatInformation** m_pICatInfo;
  /* 0x0018 */ unsigned long m_cICatInfo;
  /* 0x001c */ long Padding_1682;
  /* 0x0020 */ struct HINSTANCE__* m_hInstCstore;
}; /* size: 0x0028 */

class CEnumClassesOfCategories
{
  /* 0x0000 */ long Padding_1683[2];
  /* 0x0008 */ unsigned long m_dwRefCount;
  /* 0x000c */ long Padding_1684;
  /* 0x0010 */ struct HKEY__* m_hClassKey;
  /* 0x0018 */ unsigned long m_dwIndex;
  /* 0x001c */ unsigned long m_cImplemented;
  /* 0x0020 */ struct _GUID* m_rgcatidImpl;
  /* 0x0028 */ unsigned long m_cRequired;
  /* 0x002c */ long Padding_1685;
  /* 0x0030 */ struct _GUID* m_rgcatidReq;
  /* 0x0038 */ struct IEnumGUID* m_pcsIEnumClsid;
  /* 0x0040 */ int m_fromcs;
  /* 0x0044 */ long Padding_1686;
  /* 0x0048 */ struct IUnknown* m_pCloned;
}; /* size: 0x0050 */

struct tagCLASS_DATA
{
  /* 0x0000 */ const struct _GUID* pclsid;
  /* 0x0008 */ const wchar_t* wszName;
  /* 0x0010 */ const wchar_t* wszProgId;
}; /* size: 0x0018 */

struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc
{
  /* 0x0000 */ struct CMap<unsigned short *,unsigned short * &,unsigned long,unsigned long &>::CAssoc* pNext;
  /* 0x0008 */ unsigned int nHashValue;
  /* 0x000c */ long Padding_1687;
  /* 0x0010 */ wchar_t* key;
  /* 0x0018 */ unsigned long value;
  /* 0x001c */ long __PADDING__[1];
}; /* size: 0x0020 */

class CFontEventsCP
{
  /* 0x0000 */ long Padding_1688[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_1689;
  /* 0x0010 */ struct IConnectionPointContainer* m_pcpc;
  /* 0x0018 */ class CRgPv m_rgpv;
}; /* size: 0x0028 */

class CFont
{
  /* 0x0000 */ long Padding_1690[12];
  /* 0x0030 */ class CNotifyCP m_cpNotify;
  /* 0x0060 */ class CFontEventsCP m_cpEvents;
  /* 0x0088 */ struct FR m_fr;
  /* 0x00e0 */ struct HDC__* m_hdc;
  /* 0x00e8 */ struct HFONT__* m_hfont;
  /* 0x00f0 */ int m_nFcr;
  /* 0x00f4 */ long m_cRefs;
  struct /* bitfield */
  {
    /* 0x00f8 */ unsigned char m_fNameDirty : 1; /* bit position: 0 */
    /* 0x00f8 */ unsigned char m_fCharSetDirty : 1; /* bit position: 1 */
    /* 0x00f8 */ unsigned char m_fNotifyOff : 1; /* bit position: 2 */
  }; /* bitfield */
  union
  {
    /* 0x0000 */ int s_cFcr;
    /* 0x0000 */ struct FCR* s_rgfcr;
    /* 0x0000 */ int s_cFontObjs;
    /* 0x0000 */ int s_fInit;
    /* 0x0000 */ struct ITypeInfo* s_ptinfo;
  }; /* size: 0x0008 */
}; /* size: 0x0100 */

struct FCR
{
  /* 0x0000 */ struct FR frRequest;
  /* 0x0058 */ struct FR frActual;
  /* 0x00b0 */ unsigned long cRefs;
  /* 0x00b4 */ long Padding_1691;
  /* 0x00b8 */ struct HFONT__* hfont;
  /* 0x00c0 */ struct tagTEXTMETRICW tm;
  /* 0x00fc */ long __PADDING__[1];
}; /* size: 0x0100 */

struct CFont::Load::__l2::FONTDATA
{
  /* 0x0000 */ unsigned char bFlags;
  /* 0x0001 */ short sWeight;
  /* 0x0003 */ unsigned long ulHeight;
  /* 0x0007 */ unsigned char bFaceLen;
}; /* size: 0x0008 */

class CCacheStream
{
  /* 0x0000 */ long Padding_1692[2];
  /* 0x0008 */ unsigned long m_stmixCacheID;
}; /* size: 0x0010 */

struct ICacheStream
{
}; /* size: 0x0008 */

class CPicture
{
  /* 0x0000 */ long Padding_1693[12];
  /* 0x0030 */ const unsigned char mc_fAsync : 1; /* bit position: 0 */
  /* 0x0031 */ char Padding_1694[7];
  /* 0x0038 */ struct tagPICTDESC m_pic;
  /* 0x0050 */ struct tagSIZE m_slPixels;
  /* 0x0058 */ struct tagSIZE m_slHimetric;
  /* 0x0060 */ struct HDC__* m_hdc;
  /* 0x0068 */ struct HBITMAP__* m_hbmpAnd;
  /* 0x0070 */ struct HBITMAP__* m_hbmpXor;
  /* 0x0078 */ struct HBITMAP__* m_hbmpMask;
  /* 0x0080 */ unsigned long m_lLen;
  /* 0x0084 */ long Padding_1695;
  /* 0x0088 */ class CGdiCustodian* m_pcstOwn;
  struct /* bitfield */
  {
    /* 0x0090 */ unsigned char m_fBitsLoaded : 1; /* bit position: 0 */
    /* 0x0090 */ unsigned char m_fOwn : 1; /* bit position: 1 */
    /* 0x0090 */ unsigned char m_fKeepOriginalFormat : 1; /* bit position: 2 */
  }; /* bitfield */
  /* 0x0091 */ unsigned char m_fTransparent;
  /* 0x0092 */ char Padding_1696[6];
  /* 0x0098 */ struct ISimpleBinding* m_qbndData;
  /* 0x00a0 */ class CCacheStream m_csmOriginalFormat;
  /* 0x00b0 */ long m_cRefs;
  /* 0x00b4 */ long Padding_1697;
  /* 0x00b8 */ class CNotifyCP m_cpNotify;
  /* 0x00e8 */ struct METAINFO* m_pMetaInfo;
  /* 0x00f0 */ struct METADC* m_pCurMdc;
  /* 0x00f8 */ int m_fMetaDC;
  /* 0x00fc */ int m_nRecord;
  /* 0x0100 */ HRESULT m_error;
  /* 0x0104 */ long Padding_1698;
  /* 0x0108 */ struct tagLOGPALETTE* m_pColorSet;
  /* 0x0110 */ int m_fConvert;
  union
  {
    /* 0x0000 */ unsigned int s_cPictObjs;
    /* 0x0000 */ struct ITypeInfo* s_ptinfo;
  }; /* size: 0x0008 */
}; /* size: 0x0118 */

struct ISimpleBinding
{
}; /* size: 0x0008 */

class SafeIntInternal::SafeIntWin32Exception
{
}; /* size: 0x0001 */

class SafeIntInternal::SafeIntExceptionHandler<SafeIntInternal::SafeIntWin32Exception>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<unsigned int,unsigned __int64>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<__int64,unsigned int>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<__int64,int>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<int,__int64>
{
}; /* size: 0x0001 */

class LargeIntRegMultiply<__int64,unsigned __int64>
{
}; /* size: 0x0001 */

class MultiplicationHelper<unsigned __int64,__int64,7>
{
}; /* size: 0x0001 */

class MultiplicationHelper<__int64,__int64,11>
{
}; /* size: 0x0001 */

class SubtractionHelper<__int64,unsigned __int64,11>
{
}; /* size: 0x0001 */

class SubtractionHelper<__int64,unsigned __int64,21>
{
}; /* size: 0x0001 */

class SafeInt<unsigned short,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >
{
  /* 0x0000 */ unsigned short m_int;
}; /* size: 0x0002 */

class SafeInt<long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >
{
  /* 0x0000 */ long m_int;
}; /* size: 0x0004 */

struct DESCRIPTOR
{
  /* 0x0000 */ unsigned char bWidth;
  /* 0x0001 */ unsigned char bHeight;
  /* 0x0002 */ unsigned char colorCount;
  /* 0x0003 */ unsigned char bReserved;
  /* 0x0004 */ unsigned short xHotSpot;
  /* 0x0006 */ unsigned short yHotSpot;
  /* 0x0008 */ unsigned long BytesInRes;
  /* 0x000c */ unsigned long OffsetToBits;
}; /* size: 0x0010 */

class SafeInt<unsigned long,SafeIntInternal::SafeIntExceptionHandler<SafeIntException> >
{
  /* 0x0000 */ unsigned long m_int;
}; /* size: 0x0004 */

class SafeCastHelper<unsigned short,unsigned short,0>
{
}; /* size: 0x0001 */

class SafeCastHelper<long,long,0>
{
}; /* size: 0x0001 */

class MultiplicationHelper<unsigned short,unsigned short,2>
{
}; /* size: 0x0001 */

class SafeCastHelper<unsigned long,long,1>
{
}; /* size: 0x0001 */

class AdditionHelper<unsigned long,unsigned long,1>
{
}; /* size: 0x0001 */

class MultiplicationHelper<unsigned long,unsigned int,3>
{
}; /* size: 0x0001 */

class AdditionHelper<unsigned long,unsigned int,1>
{
}; /* size: 0x0001 */

class SafeCastHelper<long,int,0>
{
}; /* size: 0x0001 */

class BinaryAndHelper<long,int,0>
{
}; /* size: 0x0001 */

class CArray<_GUID,_GUID &>
{
  /* 0x0000 */ struct _GUID* m_pData;
  /* 0x0008 */ int m_nSize;
  /* 0x000c */ int m_nMaxSize;
  /* 0x0010 */ int m_nGrowBy;
}; /* size: 0x0018 */

struct DLGTEMPLATEEX
{
  /* 0x0000 */ unsigned short dlgVer;
  /* 0x0002 */ unsigned short signature;
  /* 0x0004 */ unsigned long helpID;
  /* 0x0008 */ unsigned long exStyle;
  /* 0x000c */ unsigned long style;
  /* 0x0010 */ unsigned short cDlgItems;
  /* 0x0012 */ short x;
  /* 0x0014 */ short y;
  /* 0x0016 */ short cx;
  /* 0x0018 */ short cy;
}; /* size: 0x001a */

struct DICTENTRY
{
  /* 0x0000 */ struct DICTENTRYHEADER hdr;
  /* 0x0008 */ wchar_t sz[256];
}; /* size: 0x0208 */

class MultiplicationHelper<unsigned long,unsigned __int64,8>
{
}; /* size: 0x0001 */

class SafeCastHelper<unsigned long,int,1>
{
}; /* size: 0x0001 */

class SafeCastHelper<unsigned long,unsigned __int64,2>
{
}; /* size: 0x0001 */

class SafeCastHelper<unsigned long,unsigned int,0>
{
}; /* size: 0x0001 */

struct IImageFilter
{
}; /* size: 0x0008 */

class CClassObj
{
  /* 0x0000 */ long Padding_1699[2];
  /* 0x0008 */ long m_cRefs;
  /* 0x000c */ long Padding_1700;
  /* 0x0010 */ void* m_pfnCreate /* function */;
}; /* size: 0x0018 */

class CUnknown
{
  /* 0x0000 */ long Padding_1701[2];
  /* 0x0008 */ unsigned long m_cbRefs;
}; /* size: 0x0010 */

struct ITaskAdvise
{
}; /* size: 0x0008 */

class CBindHost
{
}; /* size: 0x0018 */

typedef struct _CONTEXT32_UPDATE
{
  /* 0x0000 */ unsigned long NumberEntries;
} CONTEXT32_UPDATE, *PCONTEXT32_UPDATE; /* size: 0x0004 */

typedef struct _APPINFO_PROCESS_INFORMATION
{
  /* 0x0000 */ unsigned __int64 hProcess;
  /* 0x0008 */ unsigned __int64 hThread;
  /* 0x0010 */ unsigned long dwProcessId;
  /* 0x0014 */ unsigned long dwThreadId;
} APPINFO_PROCESS_INFORMATION, *PAPPINFO_PROCESS_INFORMATION; /* size: 0x0018 */

typedef struct __midl_frag51_t
{
  /* 0x0000 */ struct _NDR64_STRUCTURE_HEADER_FORMAT frag1;
} _midl_frag51_t, *P_midl_frag51_t; /* size: 0x0008 */

typedef struct __midl_frag89_t
{
  /* 0x0000 */ struct _NDR64_CONF_ARRAY_HEADER_FORMAT frag1;
  struct
  {
    /* 0x0010 */ struct _NDR64_REPEAT_FORMAT frag1;
    struct
    {
      /* 0x0020 */ struct _NDR64_POINTER_INSTANCE_HEADER_FORMAT frag1;
      /* 0x0028 */ struct _NDR64_POINTER_FORMAT frag2;
    } /* size: 0x0018 */ frag2;
    /* 0x0038 */ unsigned char frag3;
    /* 0x0039 */ char __PADDING__[7];
  } /* size: 0x0030 */ frag2;
  /* 0x0040 */ struct _NDR64_ARRAY_ELEMENT_INFO frag3;
} _midl_frag89_t, *P_midl_frag89_t; /* size: 0x0050 */

typedef struct __midl_frag64_t
{
  /* 0x0000 */ struct _NDR64_PROC_FORMAT frag1;
  /* 0x0018 */ struct _NDR64_BIND_AND_NOTIFY_EXTENSION frag2;
  /* 0x0020 */ struct _NDR64_PARAM_FORMAT frag3;
  /* 0x0030 */ struct _NDR64_PARAM_FORMAT frag4;
  /* 0x0040 */ struct _NDR64_PARAM_FORMAT frag5;
  /* 0x0050 */ struct _NDR64_PARAM_FORMAT frag6;
  /* 0x0060 */ struct _NDR64_PARAM_FORMAT frag7;
  /* 0x0070 */ struct _NDR64_PARAM_FORMAT frag8;
  /* 0x0080 */ struct _NDR64_PARAM_FORMAT frag9;
  /* 0x0090 */ struct _NDR64_PARAM_FORMAT frag10;
  /* 0x00a0 */ struct _NDR64_PARAM_FORMAT frag11;
  /* 0x00b0 */ struct _NDR64_PARAM_FORMAT frag12;
  /* 0x00c0 */ struct _NDR64_PARAM_FORMAT frag13;
  /* 0x00d0 */ struct _NDR64_PARAM_FORMAT frag14;
  /* 0x00e0 */ struct _NDR64_PARAM_FORMAT frag15;
  /* 0x00f0 */ struct _NDR64_PARAM_FORMAT frag16;
  /* 0x0100 */ struct _NDR64_PARAM_FORMAT frag17;
  /* 0x0110 */ struct _NDR64_PARAM_FORMAT frag18;
  /* 0x0120 */ struct _NDR64_PARAM_FORMAT frag19;
} _midl_frag64_t, *P_midl_frag64_t; /* size: 0x0130 */

class Windows::AutoOperatorAmpersandHelper<_LUNICODE_STRING,Windows::Auto<_LUNICODE_STRING> >
{
  /* 0x0000 */ class Windows::Auto<_LUNICODE_STRING>* m_pauto;
}; /* size: 0x0008 */

class CTLocalAllocPolicy
{
}; /* size: 0x0001 */

class CTCoAllocPolicy
{
}; /* size: 0x0001 */

class CTGlobalAllocPolicy
{
}; /* size: 0x0001 */

struct CMemString_PolicyCoTaskMem
{
}; /* size: 0x0001 */

class ARI::AutoPtrAriHeap<_TOKEN_SECURITY_ATTRIBUTES_INFORMATION>
{
}; /* size: 0x0008 */

struct CMemString_PolicyAutoMem
{
}; /* size: 0x0001 */

class CMemString<CMemString_PolicyCoTaskMem>
{
  /* 0x0000 */ wchar_t* _psz;
}; /* size: 0x0008 */

class Windows::Internal::ResourceString
{
}; /* size: 0x0001 */

class Windows::Internal::NativeString<Windows::Internal::CoTaskMemPolicy<unsigned short> >
{
  union
  {
    /* 0x0000 */ const wchar_t* s_pszTrimWhitespaceCharacterSet;
    /* 0x0000 */ const wchar_t* s_pszIsOnlyWhitespaceCharacterSet;
    /* 0x0000 */ const unsigned __int64 s_cchUnknown;
    /* 0x0000 */ wchar_t* _pszStringData;
  }; /* size: 0x0008 */
  /* 0x0008 */ unsigned __int64 _cchStringData;
  /* 0x0010 */ unsigned __int64 _cchStringDataCapacity;
}; /* size: 0x0018 */

class CDateInfo;

struct APP_DATA
{
  /* 0x0000 */ struct IMalloc* m_pimalloc;
  /* 0x0008 */ class OLE_TYPEMGR* m_poletmgr;
  /* 0x0010 */ struct APP_DATA::FreeList m_rgFreeLists[4];
  /* 0x0190 */ const class CDateInfo* m_pDateInfo;
  /* 0x0198 */ const class CNumInfo* m_pNumInfo;
}; /* size: 0x01a0 */

class CInterfaceFromWindowProp
{
  /* 0x0000 */ long Padding_1702[2];
  /* 0x0008 */ unsigned long _ulRefCnt;
}; /* size: 0x0010 */

class CPrivDragDrop
{
  /* 0x0000 */ long Padding_1703[2];
  /* 0x0008 */ unsigned long _ulRefCnt;
}; /* size: 0x0010 */

struct IPrivDragDrop
{
}; /* size: 0x0008 */

struct SDDInfo
{
  /* 0x0000 */ int fLocal;
  /* 0x0004 */ long Padding_1704;
  /* 0x0008 */ struct IPrivDragDrop* pPDP;
}; /* size: 0x0010 */

struct OsFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 P5Home;
  /* 0x0028 */ unsigned __int64 SavedXmm0;
  /* 0x0030 */ unsigned __int64 SavedXmm1;
  /* 0x0038 */ unsigned __int64 SavedXmm2;
  /* 0x0040 */ unsigned __int64 SavedXmm3;
  /* 0x0048 */ unsigned __int64 pRegs;
  /* 0x0050 */ unsigned __int64 pArgs;
  /* 0x0058 */ unsigned long cbArgs;
  /* 0x005c */ unsigned long Fill1;
  /* 0x0060 */ unsigned long ReturnValue;
  /* 0x0064 */ unsigned long Fill2;
}; /* size: 0x0068 */

struct InFrame
{
  /* 0x0000 */ unsigned __int64 P1Home;
  /* 0x0008 */ unsigned __int64 P2Home;
  /* 0x0010 */ unsigned __int64 P3Home;
  /* 0x0018 */ unsigned __int64 P4Home;
  /* 0x0020 */ unsigned __int64 SavedRbp;
  /* 0x0028 */ unsigned __int64 SavedRsi;
  /* 0x0030 */ unsigned __int64 SavedRdi;
}; /* size: 0x0038 */

typedef struct _DELAYLOAD_PROC_DESCRIPTOR
{
  /* 0x0000 */ unsigned long ImportDescribedByName;
  /* 0x0004 */ long Padding_1705;
  union
  {
    union
    {
      /* 0x0008 */ const char* Name;
      /* 0x0008 */ unsigned long Ordinal;
    }; /* size: 0x0008 */
  } /* size: 0x0008 */ Description;
} DELAYLOAD_PROC_DESCRIPTOR, *PDELAYLOAD_PROC_DESCRIPTOR; /* size: 0x0010 */

typedef struct _DELAYLOAD_INFO
{
  /* 0x0000 */ unsigned long Size;
  /* 0x0004 */ long Padding_1706;
  /* 0x0008 */ const struct _IMAGE_DELAYLOAD_DESCRIPTOR* DelayloadDescriptor;
  /* 0x0010 */ struct _IMAGE_THUNK_DATA64* ThunkAddress;
  /* 0x0018 */ const char* TargetDllName;
  /* 0x0020 */ struct _DELAYLOAD_PROC_DESCRIPTOR TargetApiDescriptor;
  /* 0x0030 */ void* TargetModuleBase;
  /* 0x0038 */ void* Unused;
  /* 0x0040 */ unsigned long LastError;
  /* 0x0044 */ long __PADDING__[1];
} DELAYLOAD_INFO, *PDELAYLOAD_INFO; /* size: 0x0048 */

class std::bad_alloc
{
}; /* size: 0x0018 */

struct $_s__CatchableTypeArray$_extraBytes_16
{
  /* 0x0000 */ int nCatchableTypes;
  /* 0x0004 */ const struct _s__CatchableType* arrayOfCatchableTypes[2];
}; /* size: 0x0014 */

struct $_TypeDescriptor$_extraBytes_24
{
  /* 0x0000 */ const void* pVFTable;
  /* 0x0008 */ void* spare;
  /* 0x0010 */ char name[24];
}; /* size: 0x0028 */

struct CsFrame
{
  /* 0x0000 */ unsigned __int64 SavedR10;
  /* 0x0008 */ unsigned __int64 SavedR11;
}; /* size: 0x0010 */

union FT
{
  union
  {
    /* 0x0000 */ unsigned __int64 ft_scalar;
    /* 0x0000 */ struct _FILETIME ft_struct;
  }; /* size: 0x0008 */
}; /* size: 0x0008 */

typedef struct _GS_HANDLER_DATA
{
  union
  {
    union
    {
      struct
      {
        struct /* bitfield */
        {
          /* 0x0000 */ unsigned long EHandler : 1; /* bit position: 0 */
          /* 0x0000 */ unsigned long UHandler : 1; /* bit position: 1 */
          /* 0x0000 */ unsigned long HasAlignment : 1; /* bit position: 2 */
        }; /* bitfield */
      } /* size: 0x0004 */ Bits;
      /* 0x0000 */ long CookieOffset;
    }; /* size: 0x0004 */
  } /* size: 0x0004 */ u;
  /* 0x0004 */ long AlignedBaseOffset;
  /* 0x0008 */ long Alignment;
} GS_HANDLER_DATA, *PGS_HANDLER_DATA; /* size: 0x000c */

/*
!=
==
??$?4H@?$SafeInt@KV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEAAAEAV0@AEBH@Z
??$?9UIDataObject@@@WRL@Microsoft@@YA_NAEBV?$ComPtr@UIDataObject@@@01@$$T@Z
??$?DJ@?$SafeInt@JV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@J@Z
??$?DK@?$SafeInt@KV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@K@Z
??$?HJ@?$SafeInt@JV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@J@Z
??$?HK@?$SafeInt@KV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEBA?AV0@K@Z
??$?YK@?$SafeInt@KV?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@@QEAAAEAV0@K@Z
??$AdditionThrow@V?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@?$AdditionHelper@JJ$05@@SAXAEBJ0AEAJ@Z
??$AdditionThrow@V?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@?$AdditionHelper@KK$00@@SAXAEBK0AEAK@Z
??$As@UIUnwrappableDataObject@@@?$ComPtr@UIDataObject@@@WRL@Microsoft@@QEBAJV?$ComPtrRef@V?$ComPtr@UIUnwrappableDataObject@@@WRL@Microsoft@@@Details@12@@Z
??$AsIID@V?$RuntimeClass@U?$InterfaceList@UIClipboardBroker@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClass@U?$InterfaceList@UIClipboardBroker@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClass@U?$InterfaceList@UIClipboardBrokerInternal@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClass@U?$InterfaceList@UIClipboardBrokerInternal@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@123@AEBU_GUID@@PEAPEAX@Z
??$AsIID@V?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@@?$RuntimeClassBaseT@$01@Details@WRL@Microsoft@@KAJPEAV?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@123@AEBU_GUID@@PEAPEAX@Z
??$Initialize@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJAEBV?$ComPtr@UIDataObject@@@WRL@Microsoft@@@Z
??$Initialize@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJPEAUIDataObject@@@Z
??$InvokeIfActive@V<lambda_1118F1833D0D7A0F>@?2??LockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_1118F1833D0D7A0F>@?2??LockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z@@Z
??$InvokeIfActive@V<lambda_191F798414ADB84B>@?2??OpenStorage@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_191F798414ADB84B>@?2??OpenStorage@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@Z
??$InvokeIfActive@V<lambda_202158885EF0BB85>@?2??Revert@CLimitedWritableStorage@@UEAAJXZ@@ClipboardDataObjectTask@@QEAAJV<lambda_202158885EF0BB85>@?2??Revert@CLimitedWritableStorage@@UEAAJXZ@@Z
??$InvokeIfActive@V<lambda_2864C89247375571>@?2??Stat@CReadOnlyStorage@@UEAAJPEAUtagSTATSTG@@K@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_2864C89247375571>@?2??Stat@CReadOnlyStorage@@UEAAJPEAUtagSTATSTG@@K@Z@@Z
??$InvokeIfActive@V<lambda_29B2CCEB6A2CEC56>@?2??SetSize@CLimitedWritableStream@@UEAAJT_ULARGE_INTEGER@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_29B2CCEB6A2CEC56>@?2??SetSize@CLimitedWritableStream@@UEAAJT_ULARGE_INTEGER@@@Z@@Z
??$InvokeIfActive@V<lambda_2B3A7864EDA80C84>@?2??UnlockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_2B3A7864EDA80C84>@?2??UnlockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z@@Z
??$InvokeIfActive@V<lambda_32D80D6E4B00AA95>@?8???1CBrokeredClipDataObject@@AEAA@XZ@@ClipboardDataObjectTask@@QEAAJV<lambda_32D80D6E4B00AA95>@?8???1CBrokeredClipDataObject@@AEAA@XZ@@Z
??$InvokeIfActive@V<lambda_385285479B38A6BA>@?2??Reset@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJXZ@@ClipboardDataObjectTask@@QEAAJV<lambda_385285479B38A6BA>@?2??Reset@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJXZ@@Z
??$InvokeIfActive@V<lambda_3EA709FC53E93FC8>@?8??MoveElementTo@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@0K@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_3EA709FC53E93FC8>@?8??MoveElementTo@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@0K@Z@@Z
??$InvokeIfActive@V<lambda_3F3786490CA4221E>@?2??Skip@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_3F3786490CA4221E>@?2??Skip@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJK@Z@@Z
??$InvokeIfActive@V<lambda_3FE4B16529315704>@?2??Skip@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_3FE4B16529315704>@?2??Skip@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJK@Z@@Z
??$InvokeIfActive@V<lambda_435835F2906B906C>@?8??GetCanonicalFormatEtc@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_435835F2906B906C>@?8??GetCanonicalFormatEtc@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z@@Z
??$InvokeIfActive@V<lambda_48830B8A68BE8DE9>@?M@??CopyTo@CReadOnlyStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_48830B8A68BE8DE9>@?M@??CopyTo@CReadOnlyStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z@@Z
??$InvokeIfActive@V<lambda_4EBAA7B7F83E2AA1>@?8??CopyTo@CLimitedWritableStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_4EBAA7B7F83E2AA1>@?8??CopyTo@CLimitedWritableStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z@@Z
??$InvokeIfActive@V<lambda_535061216AA0B9B3>@?2??Clone@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJPEAPEAUIEnumFORMATETC@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_535061216AA0B9B3>@?2??Clone@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJPEAPEAUIEnumFORMATETC@@@Z@@Z
??$InvokeIfActive@V<lambda_56DB86726463D2C6>@?2??Seek@CLimitedStreamBase@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_56DB86726463D2C6>@?2??Seek@CLimitedStreamBase@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z@@Z
??$InvokeIfActive@V<lambda_5B474553FA606D78>@?2???1?$CWrapperBase@UIEnumFORMATETC@@@@UEAA@XZ@@ClipboardDataObjectTask@@QEAAJV<lambda_5B474553FA606D78>@?2???1?$CWrapperBase@UIEnumFORMATETC@@@@UEAA@XZ@@Z
??$InvokeIfActive@V<lambda_75806E06F2DD87D9>@?2??EnumElements@CLimitedWritableStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_75806E06F2DD87D9>@?2??EnumElements@CLimitedWritableStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z@@Z
??$InvokeIfActive@V<lambda_7AF3526445BD1900>@?2??OpenStorage@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_7AF3526445BD1900>@?2??OpenStorage@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@Z
??$InvokeIfActive@V<lambda_7DA0A3C7D7999BB8>@?8??CopyTo@CReadOnlyStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT5@2@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_7DA0A3C7D7999BB8>@?8??CopyTo@CReadOnlyStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT5@2@Z@@Z
??$InvokeIfActive@V<lambda_80612E54ECEB959E>@?2??CreateStream@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_80612E54ECEB959E>@?2??CreateStream@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z@@Z
??$InvokeIfActive@V<lambda_859B9105128902AF>@?2??Stat@CLimitedStreamBase@@UEAAJPEAUtagSTATSTG@@K@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_859B9105128902AF>@?2??Stat@CLimitedStreamBase@@UEAAJPEAUtagSTATSTG@@K@Z@@Z
??$InvokeIfActive@V<lambda_89A7BD4872294177>@?2??Read@CLimitedStreamBase@@UEAAJPEAXKPEAK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_89A7BD4872294177>@?2??Read@CLimitedStreamBase@@UEAAJPEAXKPEAK@Z@@Z
??$InvokeIfActive@V<lambda_8A2C96338B5302B9>@?2??Next@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJKPEAUtagSTATSTG@@PEAK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_8A2C96338B5302B9>@?2??Next@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJKPEAUtagSTATSTG@@PEAK@Z@@Z
??$InvokeIfActive@V<lambda_8A48F4084DADEF3>@?2??SetElementTimes@CLimitedWritableStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_8A48F4084DADEF3>@?2??SetElementTimes@CLimitedWritableStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z@@Z
??$InvokeIfActive@V<lambda_90BBF1240E966676>@?2??Revert@CLimitedWritableStream@@UEAAJXZ@@ClipboardDataObjectTask@@QEAAJV<lambda_90BBF1240E966676>@?2??Revert@CLimitedWritableStream@@UEAAJXZ@@Z
??$InvokeIfActive@V<lambda_9BDFBD0AF00B6A49>@?2??Clone@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJPEAPEAUIEnumSTATSTG@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_9BDFBD0AF00B6A49>@?2??Clone@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJPEAPEAUIEnumSTATSTG@@@Z@@Z
??$InvokeIfActive@V<lambda_A45E3065BC097B94>@?2??Stat@CLimitedWritableStorage@@UEAAJPEAUtagSTATSTG@@K@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_A45E3065BC097B94>@?2??Stat@CLimitedWritableStorage@@UEAAJPEAUtagSTATSTG@@K@Z@@Z
??$InvokeIfActive@V<lambda_AA79AD408A52AB5A>@?2??DestroyElement@CLimitedWritableStorage@@UEAAJPEBG@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_AA79AD408A52AB5A>@?2??DestroyElement@CLimitedWritableStorage@@UEAAJPEBG@Z@@Z
??$InvokeIfActive@V<lambda_AC2301D1AB195848>@?8??CopyTo@CLimitedWritableStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT5@2@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_AC2301D1AB195848>@?8??CopyTo@CLimitedWritableStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT5@2@Z@@Z
??$InvokeIfActive@V<lambda_B48BF3BF89CC31FF>@?BJ@??GetDataHere@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_B48BF3BF89CC31FF>@?BJ@??GetDataHere@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z@@Z
??$InvokeIfActive@V<lambda_B6E0DDFFD7B936DC>@?2??OpenStream@CReadOnlyStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_B6E0DDFFD7B936DC>@?2??OpenStream@CReadOnlyStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z@@Z
??$InvokeIfActive@V<lambda_B9A5E8BAA9924D4D>@?2??Clone@CLimitedWritableStream@@UEAAJPEAPEAUIStream@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_B9A5E8BAA9924D4D>@?2??Clone@CLimitedWritableStream@@UEAAJPEAPEAUIStream@@@Z@@Z
??$InvokeIfActive@V<lambda_BA168E9DE3CFD21B>@?2??Reset@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJXZ@@ClipboardDataObjectTask@@QEAAJV<lambda_BA168E9DE3CFD21B>@?2??Reset@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJXZ@@Z
??$InvokeIfActive@V<lambda_BCC3B76B24A9C0C1>@?2??Next@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJKPEAUtagFORMATETC@@PEAK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_BCC3B76B24A9C0C1>@?2??Next@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJKPEAUtagFORMATETC@@PEAK@Z@@Z
??$InvokeIfActive@V<lambda_C1C14A71CE15713B>@?8??QueryGetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_C1C14A71CE15713B>@?8??QueryGetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z@@Z
??$InvokeIfActive@V<lambda_C6BB18B0BF4BE775>@?2??SetStateBits@CLimitedWritableStorage@@UEAAJKK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_C6BB18B0BF4BE775>@?2??SetStateBits@CLimitedWritableStorage@@UEAAJKK@Z@@Z
??$InvokeIfActive@V<lambda_CC1FC64EEBB82396>@?2??Commit@CLimitedWritableStorage@@UEAAJK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_CC1FC64EEBB82396>@?2??Commit@CLimitedWritableStorage@@UEAAJK@Z@@Z
??$InvokeIfActive@V<lambda_CC6CC56F32D72DC0>@?8??EnumFormatEtc@CBrokeredClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_CC6CC56F32D72DC0>@?8??EnumFormatEtc@CBrokeredClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z@@Z
??$InvokeIfActive@V<lambda_D6BEF55CA310B083>@?2??RenameElement@CLimitedWritableStorage@@UEAAJPEBG0@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_D6BEF55CA310B083>@?2??RenameElement@CLimitedWritableStorage@@UEAAJPEBG0@Z@@Z
??$InvokeIfActive@V<lambda_DB08121F9B2E4167>@?BC@??GetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_DB08121F9B2E4167>@?BC@??GetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z@@Z
??$InvokeIfActive@V<lambda_DBBA6E15974D88A0>@?2??OpenStream@CLimitedWritableStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_DBBA6E15974D88A0>@?2??OpenStream@CLimitedWritableStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z@@Z
??$InvokeIfActive@V<lambda_DCEEBA36D17BE0C6>@?BI@??SetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_DCEEBA36D17BE0C6>@?BI@??SetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z@@Z
??$InvokeIfActive@V<lambda_E5C33FFF9ACC27CD>@?2???1?$CWrapperBase@UIUnknown@@@@UEAA@XZ@@ClipboardDataObjectTask@@QEAAJV<lambda_E5C33FFF9ACC27CD>@?2???1?$CWrapperBase@UIUnknown@@@@UEAA@XZ@@Z
??$InvokeIfActive@V<lambda_E9CECF399B911A5C>@?2??CreateStorage@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_E9CECF399B911A5C>@?2??CreateStorage@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z@@Z
??$InvokeIfActive@V<lambda_EA8073E2406EBE81>@?2??Commit@CLimitedWritableStream@@UEAAJK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_EA8073E2406EBE81>@?2??Commit@CLimitedWritableStream@@UEAAJK@Z@@Z
??$InvokeIfActive@V<lambda_EDF4E34D1FFC32DE>@?2??EnumElements@CReadOnlyStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_EDF4E34D1FFC32DE>@?2??EnumElements@CReadOnlyStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z@@Z
??$InvokeIfActive@V<lambda_F4605E2997508A8D>@?2???1?$CWrapperBase@UIStream@@@@UEAA@XZ@@ClipboardDataObjectTask@@QEAAJV<lambda_F4605E2997508A8D>@?2???1?$CWrapperBase@UIStream@@@@UEAA@XZ@@Z
??$InvokeIfActive@V<lambda_F4743C547ADAAD6D>@?2??Clone@CReadOnlyStream@@UEAAJPEAPEAUIStream@@@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_F4743C547ADAAD6D>@?2??Clone@CReadOnlyStream@@UEAAJPEAPEAUIStream@@@Z@@Z
??$InvokeIfActive@V<lambda_F81FF86945D4F89B>@?2???1?$CWrapperBase@UIStorage@@@@UEAA@XZ@@ClipboardDataObjectTask@@QEAAJV<lambda_F81FF86945D4F89B>@?2???1?$CWrapperBase@UIStorage@@@@UEAA@XZ@@Z
??$InvokeIfActive@V<lambda_FC1ED2C6D0404BF6>@?2??Write@CLimitedWritableStream@@UEAAJPEBXKPEAK@Z@@ClipboardDataObjectTask@@QEAAJV<lambda_FC1ED2C6D0404BF6>@?2??Write@CLimitedWritableStream@@UEAAJPEBXKPEAK@Z@@Z
??$InvokeIfActive@V<lambda_FF87648DB59E4816>@?2???1?$CWrapperBase@UIEnumSTATSTG@@@@UEAA@XZ@@ClipboardDataObjectTask@@QEAAJV<lambda_FF87648DB59E4816>@?2???1?$CWrapperBase@UIEnumSTATSTG@@@@UEAA@XZ@@Z
??$InvokeIfActiveOrNotPLM@V<lambda_191F798414ADB84B>@?2??OpenStorage@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@?$CWrapperBase@UIStorage@@@@QEAAJV<lambda_191F798414ADB84B>@?2??OpenStorage@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@Z
??$InvokeIfActiveOrNotPLM@V<lambda_7AF3526445BD1900>@?2??OpenStorage@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@?$CWrapperBase@UIStorage@@@@QEAAJV<lambda_7AF3526445BD1900>@?2??OpenStorage@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU4@@Z@@Z
??$Make@VCClipboardBroker@@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCClipboardBroker@@@12@XZ
??$Make@VCClipboardBrokerExternalReference@CClipboardBroker@@QEAV2@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCClipboardBrokerExternalReference@CClipboardBroker@@@12@$$QEBQEAVCClipboardBroker@@@Z
??$Make@VCClipboardBrokerMTAHelper@CClipboardBroker@@@Details@WRL@Microsoft@@YA?AV?$ComPtr@VCClipboardBrokerMTAHelper@CClipboardBroker@@@12@XZ
??$MakeAndInitialize@VClipboardDataObjectTask@@V1@AEAK@Details@WRL@Microsoft@@YAJPEAPEAVClipboardDataObjectTask@@AEAK@Z
??$MakeAndInitialize@VClipboardDataObjectTask@@V1@K@Details@WRL@Microsoft@@YAJPEAPEAVClipboardDataObjectTask@@$$QEAK@Z
??$MakeAndInitialize@VClipboardDataObjectTask@@V1@K@Details@WRL@Microsoft@@YAJV?$ComPtrRef@V?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@@012@$$QEAK@Z
??$RELEASE_INTERFACE@UIPersistStorage@@@@YAKAEAPEAUIPersistStorage@@@Z
??$RELEASE_INTERFACE@UIPersistStream@@@@YAKAEAPEAUIPersistStream@@@Z
??$RELEASE_INTERFACE@UIPropertyStorage@@@@YAKAEAPEAUIPropertyStorage@@@Z
??$RELEASE_INTERFACE@UIStorage@@@@YAKAEAPEAUIStorage@@@Z
??$RELEASE_INTERFACE@UIUnknown@@@@YAKAEAPEAUIUnknown@@@Z
??$RELEASE_INTERFACE@VCNFFTreeMutex@@@@YAKAEAPEAVCNFFTreeMutex@@@Z
??$RELEASE_INTERFACE@VCNtfsStorage@@@@YAKAEAPEAVCNtfsStorage@@@Z
??$RELEASE_INTERFACE@VCNtfsUpdateStreamForPropStg@@@@YAKAEAPEAVCNtfsUpdateStreamForPropStg@@@Z
??$RegMultiplyThrow@V?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@@?$LargeIntRegMultiply@I_K@@SAXIAEB_KAEAI@Z
??$Register@UIDataObject@@@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@IEAAJPEAUIDataObject@@@Z
??$Release@UDISPATCH_SERVER_FRAME@@@@YAXAEAPEAUDISPATCH_SERVER_FRAME@@@Z
??$Release@UICallFrame@@@@YAXAEAPEAUICallFrame@@@Z
??$Release@UICallFrameWalker@@@@YAXAEAPEAUICallFrameWalker@@@Z
??$Release@UITypeInfo@@@@YAXAEAPEAUITypeInfo@@@Z
??$Release@UMD_INTERFACE@@@@YAXAEAPEAUMD_INTERFACE@@@Z
??$RunSyncOnMTAThread@V<lambda_4E12DA02AC3212FD>@?BN@??RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@PEAX@Z@@@YAJV<lambda_4E12DA02AC3212FD>@?BN@??RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@PEAX@Z@@Z
??$RunSyncOnMTAThread@V<lambda_7601126E30B421F7>@?CN@??GetRealDataObjPtr@CClipDataObject@@QEAAPEAUIDataObject@@XZ@@@YAJV<lambda_7601126E30B421F7>@?CN@??GetRealDataObjPtr@CClipDataObject@@QEAAPEAUIDataObject@@XZ@@Z
??$RunSyncOnMTAThread@V<lambda_AB1878220BE05968>@?BL@??SetClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z@@@YAJV<lambda_AB1878220BE05968>@?BL@??SetClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z@@Z
??$RunSyncOnMTAThread@V<lambda_CDF35D9A0ACF867E>@?O@??ValidateAndAcquireACImpersonationSource@CClipboardBroker@@EEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z@@@YAJV<lambda_CDF35D9A0ACF867E>@?O@??ValidateAndAcquireACImpersonationSource@CClipboardBroker@@EEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z@@Z
??$RunSyncOnMTAThread@V<lambda_E19A7055556DA8EC>@?CI@??RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@PEAX@Z@@@YAJV<lambda_E19A7055556DA8EC>@?CI@??RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@PEAX@Z@@Z
??$RunSyncOnMTAThread@V<lambda_E474B8135FEA7565>@?P@??RemoveClipboardDataObject@@YAJPEAUHWND__@@K@Z@@@YAJV<lambda_E474B8135FEA7565>@?P@??RemoveClipboardDataObject@@YAJPEAUHWND__@@K@Z@@Z
??$RunSyncOnMTAThread@V<lambda_E6908BB0B11F0B55>@?CL@??SetClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z@@@YAJV<lambda_E6908BB0B11F0B55>@?CL@??SetClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z@@Z
??$Set@UICallFrame@@@@YAXAEAPEAUICallFrame@@PEAU0@@Z
??$Set@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@PEAU0@@Z
??$Set@UIMarshallingManager@@@@YAXAEAPEAUIMarshallingManager@@PEAU0@@Z
??$Set@UMD_INTERFACE@@@@YAXAEAPEAUMD_INTERFACE@@PEAU0@@Z
??$SetConcurrent@UICallFrameEvents@@@@YAXAEAPEAUICallFrameEvents@@PEAU0@@Z
??$UploadSQMData@W4Ole32SQMFlags@@@@YAXW4Ole32SQMFlags@@@Z
??$_AllocStringWorker@VCTLocalAllocPolicy@@@@YAJPEAXKPEBG_K2PEAPEAG@Z
??$_InitializeHelper@V<lambda_8D5FB22F65A17B6>@?2??InitializeFormat@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@QEAAJPEBGPEAD@Z@@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@AEAAJPEBGPEADAEBV<lambda_8D5FB22F65A17B6>@?2??InitializeFormat@012@QEAAJ01@Z@@Z
??0?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAA@XZ
??0?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAA@XZ
??0?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@QEAA@PEAUIEnumSTATSTG@@PEAVClipboardDataObjectTask@@@Z
??0?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@I@Z
??0?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@I@Z
??0?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@I@Z
??0?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBroker@@VNil@Details@23@V5623@V5623@V5623@V5623@V5623@V5623@V5623@@WRL@Microsoft@@QEAA@XZ
??0CAbstractMarshalingStream@@QEAA@XZ
??0CAntiMoniker@@AEAA@K@Z
??0CAsyncConnectionContainer@@QEAA@XZ
??0CBasedBytePtr@@QEAA@PEAE@Z
??0CBasedDFBasisPtr@@QEAA@PEAVCDFBasis@@@Z
??0CBasedDeltaBlockPtr@@QEAA@PEAUSDeltaBlock@@@Z
??0CBasedDeltaBlockPtrPtr@@QEAA@PEAVCBasedDeltaBlockPtr@@@Z
??0CBasedDeltaListPtr@@QEAA@PEAVCDeltaList@@@Z
??0CBasedDirectStreamPtr@@QEAA@PEAVCDirectStream@@@Z
??0CBasedDocFilePtr@@QEAA@PEAVPDocFile@@@Z
??0CBasedFatPtr@@QEAA@PEAVCFat@@@Z
??0CBasedFreeBlockPtr@@QEAA@PEAUSFreeBlock@@@Z
??0CBasedGlobalContextPtr@@QEAA@PEAVCGlobalContext@@@Z
??0CBasedMSFPagePtr@@QEAA@PEAVCMSFPage@@@Z
??0CBasedMStreamPtr@@QEAA@PEAVCMStream@@@Z
??0CBasedMarshalListPtr@@QEAA@PEAVCMarshalList@@@Z
??0CBasedPubDocFilePtr@@QEAA@PEAVCPubDocFile@@@Z
??0CBasedPubStreamPtr@@QEAA@PEAVCPubStream@@@Z
??0CBasedSStreamPtr@@QEAA@PEAVPSStream@@@Z
??0CBasedTSetMemberPtr@@QEAA@PEAVPTSetMember@@@Z
??0CBasedTransactedStreamPtr@@QEAA@PEAVCTransactedStream@@@Z
??0CBasedUpdatePtr@@QEAA@PEAVCUpdate@@@Z
??0CBindStatusCallback@@QEAA@AEAJ@Z
??0CCacheNode@@QEAA@PEAUtagFORMATETC@@KPEAUIStorage@@@Z
??0CCacheNode@@QEAA@XZ
??0CClipClientDataWrapper@@QEAA@PEAUIDataObject@@@Z
??0CClipDataObject@@IEAA@PEAUFORMATETCDATAARRAY@@_N@Z
??0CClipDataObject@@IEAA@XZ
??0CCompositeMoniker@@QEAA@XZ
??0CCompositeMonikerEnum@@AEAA@HPEAVCCompositeMoniker@@@Z
??0CDFBasis@@QEAA@QEAUIMalloc@@KKPEAVCGlobalContext@@@Z
??0CDdeObject@@AEAA@PEAUIUnknown@@@Z
??0CDefClient@@AEAA@PEAUIUnknown@@@Z
??0CDefLink@@AEAA@PEAUIUnknown@@@Z
??0CDefObject@@AEAA@PEAUIUnknown@@@Z
??0CDeltaList@@QEAA@PEAVCMStream@@0@Z
??0CDirectStream@@QEAA@K@Z
??0CDocFile@@QEAA@KPEAVCDFBasis@@@Z
??0CDocFile@@QEAA@PEAVCMStream@@KKPEAVCDFBasis@@@Z
??0CDocfileStreamName@@QEAA@PEBG@Z
??0CDragOperation@@QEAA@PEAUIDataObject@@PEAUIDropSource@@KPEAKAEAJ@Z
??0CDwordBag@@QEAA@AEAV0@K@Z
??0CEnumConnectionsImpl@@QEAA@XZ
??0CEnumFormatEtc@@AEAA@PEAV?$CArray@VCCacheNode@@@@@Z
??0CEnumFormatEtcDataArray@@QEAA@PEAUFORMATETCDATAARRAY@@K@Z
??0CEnumSTATDATA@@QEAA@PEAVCDAHolder@@H@Z
??0CEnumSTATPROPBAG@@QEAA@AEBV0@@Z
??0CEnumSTATPROPBAG@@QEAA@PEAUIBlockingLock@@@Z
??0CEnumSTATPROPSETSTG@@QEAA@AEAV0@PEAJ@Z
??0CEnumStatData@@AEAA@PEAV?$CArray@VCCacheNode@@@@@Z
??0CErrorSmAllocator@@QEAA@XZ
??0CExposedDocFile@@QEAA@PEAVCPubDocFile@@PEAVCDFBasis@@PEAVCPerContext@@@Z
??0CExposedIterator@@QEAA@PEAVCPubDocFile@@PEAVCDfName@@PEAVCDFBasis@@PEAVCPerContext@@@Z
??0CExposedStream@@QEAA@XZ
??0CFileMoniker@@AEAA@XZ
??0CFileStream@@QEAA@QEAUIMalloc@@@Z
??0CFillLockBytes@@QEAA@PEAUILockBytes@@@Z
??0CFont@@QEAA@XZ
??0CFormat@@QEAA@XZ
??0CFrameFilter@@QEAA@PEAUHWND__@@0@Z
??0CFreeList@@QEAA@XZ
??0CGenericObject@@QEAA@XZ
??0CGlobalFileStream@@QEAA@QEAUIMalloc@@PEBGKK@Z
??0CItemMoniker@@AEAA@XZ
??0CLUAMoniker@@QEAA@K@Z
??0CLimitedWritableStorage@@QEAA@PEAUIStorage@@PEAVClipboardDataObjectTask@@@Z
??0CLimitedWritableStream@@QEAA@PEAUIStream@@PEAVClipboardDataObjectTask@@@Z
??0CMSFHeaderData@@QEAA@G@Z
??0CMSFPage@@QEAA@PEAV0@@Z
??0CMStream@@QEAA@PEAUIMalloc@@PEAPEAUILockBytes@@HKG@Z
??0CMStream@@QEAA@PEBV0@@Z
??0CMapKeyToValue@@QEAA@IIHP6AIPEAXI@ZI@Z
??0CMarshalList@@IEAA@XZ
??0CMarshalingStreamOnUserMarshalCallback@@QEAA@PEAX_KPEAU_USER_MARSHAL_CB@@@Z
??0CNotifyCP@@QEAA@PEAUIConnectionPointContainer@@@Z
??0CNtfsEnumSTATSTG@@QEAA@AEAV0@@Z
??0CNtfsEnumSTATSTG@@QEAA@PEAUIBlockingLock@@@Z
??0CNtfsStorage@@QEAA@K@Z
??0CNtfsStream@@QEAA@PEAVCNtfsStorage@@PEAUIBlockingLock@@@Z
??0CNtfsStreamName@@QEAA@PEBG@Z
??0COAHolder@@QEAA@XZ
??0CObjrefMoniker@@QEAA@PEAUIUnknown@@@Z
??0COleCache@@QEAA@PEAUIUnknown@@AEBU_GUID@@K@Z
??0COlePropertySheet@@QEAA@PEAUtagOCPFIPARAMS@@@Z
??0CPageHolder@@QEAA@AEBU_GUID@@KPEAVCOlePropertySheet@@@Z
??0CPerContext@@QEAA@PEAUIMalloc@@@Z
??0CPicture@@QEAA@K@Z
??0CPointerMoniker@@QEAA@PEAUIUnknown@@@Z
??0CPres@@QEAA@XZ
??0CProcessExtensionTbl@@QEAA@XZ
??0CProcessPatternTbl@@QEAA@AEAJ@Z
??0CPropertySet@@QEAA@U_GUID@@@Z
??0CPropertyStorage@@QEAA@W4MAPPED_STREAM_OPTS@@@Z
??0CPubDocFile@@QEAA@PEAV0@PEAVPDocFile@@KKPEAVCDFBasis@@PEBVCDfName@@GPEAVCMStream@@@Z
??0CPubMappedStream@@QEAA@PEAVCPubStream@@@Z
??0CPubStream@@QEAA@PEAVCPubDocFile@@KPEBVCDfName@@@Z
??0CReadInterfaceDataWithSourceAttributesMarshalingStream@@QEAA@PEAUtagInterfaceData@@_KPEBUMarshalingContextAttributeValue@@@Z
??0CReadOnlyStorage@@QEAA@PEAUIStorage@@PEAVClipboardDataObjectTask@@@Z
??0CReadOnlyStream@@QEAA@PEAUIStream@@PEAVClipboardDataObjectTask@@@Z
??0CSafeMoniker@@QEAA@PEAUIMoniker@@H@Z
??0CSafeMultiHeap@@QEAA@PEAVCPerContext@@@Z
??0CSessionMoniker@@QEAA@KH@Z
??0CSimpStorage@@QEAA@XZ
??0CStatArray@@QEAA@PEAVCPropertySetStream@@PEAJ@Z
??0CStatData@@QEAA@PEAUtagFORMATETC@@KPEAUIAdviseSink@@K@Z
??0CStreamCache@@QEAA@XZ
??0CSyncSync@@AEAA@PEAVCPicture@@PEAUIImageFilter@@@Z
??0CUpdate@@QEAA@PEBVCDfName@@0KKPEAVPTSetMember@@@Z
??0CUpdateList@@QEAA@XZ
??0CUserMarshalInfo@@QEAA@PEAKPEAEK@Z
??0CWrappedDocFile@@QEAA@PEBVCDfName@@KKPEAVCDFBasis@@PEAVCPubDocFile@@@Z
??0CancellableCall@@QEAA@XZ
??0ClipboardDataObjectTask@@QEAA@XZ
??0DISPATCH_CLIENT_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DISPATCH_INTERCEPTOR@@QEAA@PEAUIUnknown@@@Z
??0DISPATCH_SERVER_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0DefaultIBindStatusCallback@@QEAA@PEAUHWND__@@PEAUIBindStatusCallback@@@Z
??0FtmBase@WRL@Microsoft@@QEAA@XZ
??0Git@Details@Internal@Windows@@QEAA@XZ
??0GitPtr@Internal@Windows@@QEAA@XZ
??0Interceptor@@AEAA@PEAUIUnknown@@@Z
??0InterfaceWalkerFree@@QEAA@PEAUICallFrameWalker@@@Z
??0LEGACY_FRAME@@QEAA@PEAUIUnknown@@KPEAXPEAULEGACY_INTERCEPTOR@@@Z
??0LEGACY_INTERCEPTOR@@QEAA@PEAUIUnknown@@@Z
??0MD_INTERFACE_CACHE@@QEAA@XZ
??0MarshallingChannel@@QEAA@PEAUIUnknown@@@Z
??0OAUTIL@@QEAA@PEAUICallFrameWalker@@00HH@Z
??0OWNERENTRY@XSLOCK@@QEAA@XZ
??0ProcessToken@@QEAA@XZ
??0SDeltaBlock@@QEAA@XZ
??0SDfMarshalPacket@@QEAA@XZ
??0SafeCExposedDocFile@@QEAA@PEAVCExposedDocFile@@H@Z
??0SafeCExposedIterator@@QEAA@PEAUCExposedIterator@@H@Z
??0SafeCExposedStream@@QEAA@PEAVCExposedStream@@H@Z
??0TYPEINFOVTBL@@QEAA@XZ
??0XSLOCK@@QEAA@XZ
??0iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAA@XZ
??1?$CArray@PEAVCPageHolder@@AEAPEAV1@@@QEAA@XZ
??1?$CArray@PEAVCProperty@@AEAPEAV1@@@QEAA@XZ
??1?$CArray@PEAVCPropertySection@@AEAPEAV1@@@QEAA@XZ
??1?$CArray@U_GUID@@AEAU1@@@QEAA@XZ
??1?$CArray@VCCacheNode@@@@AEAA@XZ
??1?$CArray@VCFormatEtc@@@@AEAA@XZ
??1?$CArray@VCStatData@@@@AEAA@XZ
??1?$CMap@PEAGAEAPEAGKAEAK@@QEAA@XZ
??1?$CWrapperBase@UIEnumFORMATETC@@@@UEAA@XZ
??1?$CWrapperBase@UIEnumSTATSTG@@@@UEAA@XZ
??1?$CWrapperBase@UIStorage@@@@UEAA@XZ
??1?$CWrapperBase@UIStream@@@@UEAA@XZ
??1?$CWrapperBase@UIUnknown@@@@UEAA@XZ
??1?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEAA@XZ
??1?$MakeAllocator@VClipboardDataObjectTask@@$0A@@Details@WRL@Microsoft@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAA@XZ
??1CBaseMInterfacePointerMarshalingStream@@MEAA@XZ
??1CBindHost@@UEAA@XZ
??1CBrokeredClipDataObject@@AEAA@XZ
??1CCacheNode@@QEAA@XZ
??1CCacheStream@@UEAA@XZ
??1CClipDataObject@@MEAA@XZ
??1CComCat@@AEAA@XZ
??1CCompositeMoniker@@UEAA@XZ
??1CConnectionPoint@@QEAA@XZ
??1CDAHolder@@EEAA@XZ
??1CData@@QEAA@XZ
??1CDdeObject@@AEAA@XZ
??1CDefClient@@AEAA@XZ
??1CDefObject@@EEAA@XZ
??1CDfMutex@@QEAA@XZ
??1CDocFile@@QEAA@XZ
??1CDragDataObject@@QEAA@XZ
??1CDragOperation@@QEAA@XZ
??1CEndPointAtom@@QEAA@XZ
??1CEnumCategoriesOfClass@@QEAA@XZ
??1CEnumClassesOfCategories@@QEAA@XZ
??1CErrorSmAllocator@@QEAA@XZ
??1CExposedDocFile@@QEAA@XZ
??1CExposedStream@@QEAA@XZ
??1CFileMoniker@@EEAA@XZ
??1CFileStream@@QEAA@XZ
??1CFont@@QEAA@XZ
??1CFontEventsCP@@QEAA@XZ
??1CFormatEtc@@QEAA@XZ
??1CFrameFilter@@UEAA@XZ
??1CFreeList@@QEAA@XZ
??1CGdiCustodian@@EEAA@XZ
??1CGenericObject@@QEAA@XZ
??1CMSFPageTable@@QEAA@XZ
??1CMStream@@QEAA@XZ
??1CNotifyCP@@QEAA@XZ
??1CNtfsStorage@@QEAA@XZ
??1CNtfsStream@@UEAA@XZ
??1COAHolder@@EEAA@XZ
??1COlePropertySheet@@QEAA@XZ
??1COleStaticMutexSem@@QEAA@XZ
??1CPerContext@@QEAA@XZ
??1CPicture@@QEAA@XZ
??1CPointerMoniker@@UEAA@XZ
??1CPres@@QEAA@XZ
??1CPropertySet@@QEAA@XZ
??1CPropertySetStorage@@QEAA@XZ
??1CPropertyStorage@@QEAA@XZ
??1CPtrCache@@QEAA@XZ
??1CPubStream@@QEAA@XZ
??1CRandomNumberGenerator@@QEAA@XZ
??1CRefStabilize@@QEAA@XZ
??1CRgPv@@QEAA@XZ
??1CRunningObjectTable@@QEAA@XZ
??1CSafeBYTEArray@@QEAA@XZ
??1CSafeBindCtx@@QEAA@XZ
??1CSafeMoniker@@QEAA@XZ
??1CSafeMultiHeap@@QEAA@XZ
??1CSharedMemoryBlock@@QEAA@XZ
??1CSimpStorage@@QEAA@XZ
??1CStatData@@QEAA@XZ
??1CSyncSync@@UEAA@XZ
??1CTransactedStream@@QEAA@XZ
??1CUnknown@@UEAA@XZ
??1CWrappedDocFile@@QEAA@XZ
??1CallFrame@@QEAA@XZ
??1CancellableCall@@QEAA@XZ
??1ClipboardDataObjectTask@@UEAA@XZ
??1CompObjStmData@@QEAA@XZ
??1CsCatInfo@@QEAA@XZ
??1DefaultIBindStatusCallback@@UEAA@XZ
??1Git@Details@Internal@Windows@@QEAA@XZ
??1Interceptor@@EEAA@XZ
??1LEGACY_FRAME@@MEAA@XZ
??1LEGACY_INTERCEPTOR@@UEAA@XZ
??1MD_METHOD@@QEAA@XZ
??1MarshallingChannel@@QEAA@XZ
??1OAUTIL@@QEAA@XZ
??1OLEAUTOMATION_FUNCTIONS@@QEAA@XZ
??1ProcessToken@@QEAA@XZ
??1SafeCExposedDocFile@@QEAA@XZ
??1SafeCExposedIterator@@QEAA@XZ
??1SafeCExposedStream@@QEAA@XZ
??1TYPEINFOVTBL@@EEAA@XZ
??1XSLOCK@@QEAA@XZ
??2?$DedicatedAllocator@VCallFrame@@@@SAPEAX_K@Z
??2@YAPEAX_K@Z
??2@YAPEAX_KAEBUnothrow_t@std@@@Z
??2AllocateThrow@@SAPEAX_K@Z
??2CMallocBased@@SAPEAX_KQEAUIMalloc@@@Z
??2CPrivAlloc@@SAPEAX_K@Z
??3@YAXPEAX@Z
??3CMallocBased@@SAXPEAX@Z
??3CPrivAlloc@@SAXPEAX@Z
??4CCacheNode@@QEAAAEBV0@AEBV0@@Z
??4CStatData@@QEAAAEBV0@AEBV0@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAAEAV01@AEBV01@@Z
??4iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAAEAV01@AEBV01@@Z
??8?$OPAQUE_HANDLE@$00@@QEBAHAEBV0@@Z
??8@YA_NAEBU_GUID@@0@Z
??8iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEBAHAEBV01@@Z
??8iterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEBAHAEBV01@@Z
??9@YA_NAEBU_GUID@@0@Z
??A?$CMap@PEAGAEAPEAGKAEAK@@QEAAAEAKAEAPEAG@Z
??B?$ComPtr@UIDataObject@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
??B?$ComPtr@UIMarshal@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
??B?$ComPtr@UIStorage@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
??B?$ComPtr@UIStream@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
??B?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@QEBAPEQBoolStruct@Details@12@HXZ
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAXH@Z
??Eiterator@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAXH@Z
??_E?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UEAAPEAXI@Z
??_E?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@UEAAPEAXI@Z
??_E?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAPEAXI@Z
??_E?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIEnumFORMATETC@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIEnumSTATSTG@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIStorage@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIStream@@@@UEAAPEAXI@Z
??_E?$CWrapperBase@UIUnknown@@@@UEAAPEAXI@Z
??_E?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBroker@@VNil@Details@23@V5623@V5623@V5623@V5623@V5623@V5623@V5623@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBrokerInternal@@VNil@Details@23@V5623@V5623@V5623@V5623@V5623@V5623@V5623@@WRL@Microsoft@@UEAAPEAXI@Z
??_E?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIUnknown@@VFtmBase@23@VNil@Details@23@V6723@V6723@V6723@V6723@V6723@V6723@@WRL@Microsoft@@UEAAPEAXI@Z
??_ECAbstractMarshalingStream@@UEAAPEAXI@Z
??_ECAbstractStream@@MEAAPEAXI@Z
??_ECAntiMoniker@@UEAAPEAXI@Z
??_ECBaseMInterfacePointerMarshalingStream@@MEAAPEAXI@Z
??_ECBaseMoniker@@UEAAPEAXI@Z
??_ECBindHost@@UEAAPEAXI@Z
??_ECBindHost@@W7EAAPEAXI@Z
??_ECCacheStream@@UEAAPEAXI@Z
??_ECClipDataObject@@MEAAPEAXI@Z
??_ECClipboardBroker@@UEAAPEAXI@Z
??_ECClipboardBrokerExternalReference@CClipboardBroker@@UEAAPEAXI@Z
??_ECClipboardBrokerMTAHelper@CClipboardBroker@@UEAAPEAXI@Z
??_ECCompositeMoniker@@UEAAPEAXI@Z
??_ECDAHolder@@EEAAPEAXI@Z
??_ECDAHolder@@G7EAAPEAXI@Z
??_ECDefLink@@EEAAPEAXI@Z
??_ECDefObject@@EEAAPEAXI@Z
??_ECFileMoniker@@EEAAPEAXI@Z
??_ECFrameFilter@@UEAAPEAXI@Z
??_ECGdiCustodian@@EEAAPEAXI@Z
??_ECHlprDialog@@UEAAPEAXI@Z
??_ECItemMoniker@@EEAAPEAXI@Z
??_ECLUAMoniker@@UEAAPEAXI@Z
??_ECLimitedWritableStorage@@UEAAPEAXI@Z
??_ECLimitedWritableStream@@UEAAPEAXI@Z
??_ECMarshalingStreamOnUserMarshalCallback@@UEAAPEAXI@Z
??_ECNtfsStream@@UEAAPEAXI@Z
??_ECNtfsUpdateStreamForPropStg@@UEAAPEAXI@Z
??_ECOAHolder@@EEAAPEAXI@Z
??_ECOAHolder@@G7EAAPEAXI@Z
??_ECObjrefMoniker@@UEAAPEAXI@Z
??_ECOleCache@@UEAAPEAXI@Z
??_ECOleCache@@WBI@EAAPEAXI@Z
??_ECPointerMoniker@@UEAAPEAXI@Z
??_ECReadInterfaceDataFromInternalSourceMarshalingStream@@UEAAPEAXI@Z
??_ECReadInterfaceDataWithSourceAttributesMarshalingStream@@UEAAPEAXI@Z
??_ECReadOnlyStorage@@UEAAPEAXI@Z
??_ECReadOnlyStream@@UEAAPEAXI@Z
??_ECRefExportCount@@UEAAPEAXI@Z
??_ECSafeRefCount@@UEAAPEAXI@Z
??_ECSessionMoniker@@UEAAPEAXI@Z
??_ECSyncSync@@UEAAPEAXI@Z
??_ECSyncSync@@W7EAAPEAXI@Z
??_ECUnknown@@UEAAPEAXI@Z
??_ECUnkownOnlyWrapper@@UEAAPEAXI@Z
??_ECWriteInterfaceDataMarshalingStream@@UEAAPEAXI@Z
??_EClipboardDataObjectTask@@UEAAPEAXI@Z
??_EDISPATCH_CLIENT_FRAME@@EEAAPEAXI@Z
??_EDISPATCH_FRAME@@UEAAPEAXI@Z
??_EDISPATCH_INTERCEPTOR@@UEAAPEAXI@Z
??_EDISPATCH_SERVER_FRAME@@EEAAPEAXI@Z
??_EDefaultIBindStatusCallback@@UEAAPEAXI@Z
??_EDefaultIBindStatusCallback@@WBA@EAAPEAXI@Z
??_EGitPtr@Internal@Windows@@UEAAPEAXI@Z
??_EINTERFACE_HELPER_CLSID@@UEAAPEAXI@Z
??_EInterceptor@@EEAAPEAXI@Z
??_ELEGACY_FRAME@@MEAAPEAXI@Z
??_ELEGACY_INTERCEPTOR@@UEAAPEAXI@Z
??_EMD_METHOD@@QEAAPEAXI@Z
??_ETYPEINFOVTBL@@EEAAPEAXI@Z
??_Etype_info@@UEAAPEAXI@Z
??_G?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAPEAXI@Z
??_G?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAPEAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@UEAAPEAXI@Z
??_G?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@UEAAPEAXI@Z
??_G?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAPEAXI@Z
??_G?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAPEAXI@Z
??_G?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAAPEAXI@Z
??_G?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAAPEAXI@Z
??_G?$CWrapperBase@UIEnumFORMATETC@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIEnumSTATSTG@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIStorage@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIStream@@@@UEAAPEAXI@Z
??_G?$CWrapperBase@UIUnknown@@@@UEAAPEAXI@Z
??_G?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBroker@@VNil@Details@23@V5623@V5623@V5623@V5623@V5623@V5623@V5623@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIClipboardBrokerInternal@@VNil@Details@23@V5623@V5623@V5623@V5623@V5623@V5623@V5623@@WRL@Microsoft@@UEAAPEAXI@Z
??_G?$RuntimeClass@U?$RuntimeClassFlags@$01@WRL@Microsoft@@UIUnknown@@VFtmBase@23@VNil@Details@23@V6723@V6723@V6723@V6723@V6723@V6723@@WRL@Microsoft@@UEAAPEAXI@Z
??_GCAbstractMarshalingStream@@UEAAPEAXI@Z
??_GCAbstractStream@@MEAAPEAXI@Z
??_GCAntiMoniker@@UEAAPEAXI@Z
??_GCBaseMInterfacePointerMarshalingStream@@MEAAPEAXI@Z
??_GCBaseMoniker@@UEAAPEAXI@Z
??_GCBindHost@@UEAAPEAXI@Z
??_GCBrokerInstanceHolder@@QEAAPEAXI@Z
??_GCCacheNode@@QEAAPEAXI@Z
??_GCCacheStream@@UEAAPEAXI@Z
??_GCClipDataObject@@MEAAPEAXI@Z
??_GCClipboardBroker@@UEAAPEAXI@Z
??_GCClipboardBrokerExternalReference@CClipboardBroker@@UEAAPEAXI@Z
??_GCClipboardBrokerMTAHelper@CClipboardBroker@@UEAAPEAXI@Z
??_GCComCat@@AEAAPEAXI@Z
??_GCCompositeMoniker@@UEAAPEAXI@Z
??_GCCompositeMonikerEnum@@AEAAPEAXI@Z
??_GCConnectionPoint@@QEAAPEAXI@Z
??_GCDAHolder@@EEAAPEAXI@Z
??_GCDataAdviseCache@@QEAAPEAXI@Z
??_GCDdeObject@@AEAAPEAXI@Z
??_GCDefClient@@AEAAPEAXI@Z
??_GCDefLink@@EEAAPEAXI@Z
??_GCDefObject@@EEAAPEAXI@Z
??_GCDocFile@@QEAAPEAXI@Z
??_GCEnumCategories@@QEAAPEAXI@Z
??_GCEnumCategoriesOfClass@@QEAAPEAXI@Z
??_GCEnumClassesOfCategories@@QEAAPEAXI@Z
??_GCEnumSTATPROPBAG@@QEAAPEAXI@Z
??_GCEnumSTATPROPSETSTG@@QEAAPEAXI@Z
??_GCExposedStream@@QEAAPEAXI@Z
??_GCFileMoniker@@EEAAPEAXI@Z
??_GCFrameFilter@@UEAAPEAXI@Z
??_GCGdiCustodian@@EEAAPEAXI@Z
??_GCHlprDialog@@UEAAPEAXI@Z
??_GCItemMoniker@@EEAAPEAXI@Z
??_GCLUAMoniker@@UEAAPEAXI@Z
??_GCLimitedWritableStorage@@UEAAPEAXI@Z
??_GCLimitedWritableStream@@UEAAPEAXI@Z
??_GCMStream@@QEAAPEAXI@Z
??_GCMarshalingStreamOnUserMarshalCallback@@UEAAPEAXI@Z
??_GCNtfsEnumSTATSTG@@QEAAPEAXI@Z
??_GCNtfsStream@@UEAAPEAXI@Z
??_GCNtfsUpdateStreamForPropStg@@UEAAPEAXI@Z
??_GCOAHolder@@EEAAPEAXI@Z
??_GCObjList@CBindCtx@@QEAAPEAXI@Z
??_GCObjrefMoniker@@UEAAPEAXI@Z
??_GCOleCache@@UEAAPEAXI@Z
??_GCPageHolder@@QEAAPEAXI@Z
??_GCPerContext@@QEAAPEAXI@Z
??_GCPointerMoniker@@UEAAPEAXI@Z
??_GCPres@@QEAAPEAXI@Z
??_GCProcessPatternTbl@@QEAAPEAXI@Z
??_GCProperty@@QEAAPEAXI@Z
??_GCPropertySection@@QEAAPEAXI@Z
??_GCPropertyStorage@@QEAAPEAXI@Z
??_GCROTItem@@QEAAPEAXI@Z
??_GCReadInterfaceDataFromInternalSourceMarshalingStream@@UEAAPEAXI@Z
??_GCReadInterfaceDataWithSourceAttributesMarshalingStream@@UEAAPEAXI@Z
??_GCReadOnlyStorage@@UEAAPEAXI@Z
??_GCReadOnlyStream@@UEAAPEAXI@Z
??_GCRefExportCount@@UEAAPEAXI@Z
??_GCRotMonikerEnum@@QEAAPEAXI@Z
??_GCRunningObjectTable@@QEAAPEAXI@Z
??_GCSafeRefCount@@UEAAPEAXI@Z
??_GCSessionMoniker@@UEAAPEAXI@Z
??_GCSimpStream@@QEAAPEAXI@Z
??_GCSyncSync@@UEAAPEAXI@Z
??_GCTransactedStream@@QEAAPEAXI@Z
??_GCUnknown@@UEAAPEAXI@Z
??_GCUnkownOnlyWrapper@@UEAAPEAXI@Z
??_GCUpdate@@QEAAPEAXI@Z
??_GCWrappedDocFile@@QEAAPEAXI@Z
??_GCWriteInterfaceDataMarshalingStream@@UEAAPEAXI@Z
??_GCallFrame@@QEAAPEAXI@Z
??_GClipboardDataObjectTask@@UEAAPEAXI@Z
??_GClpboardOwnerState@@QEAAPEAXI@Z
??_GDISPATCH_CLIENT_FRAME@@EEAAPEAXI@Z
??_GDISPATCH_FRAME@@UEAAPEAXI@Z
??_GDISPATCH_INTERCEPTOR@@UEAAPEAXI@Z
??_GDISPATCH_SERVER_FRAME@@EEAAPEAXI@Z
??_GDefaultIBindStatusCallback@@UEAAPEAXI@Z
??_GGitPtr@Internal@Windows@@UEAAPEAXI@Z
??_GINTERFACE_HELPER_CLSID@@UEAAPEAXI@Z
??_GInterceptor@@EEAAPEAXI@Z
??_GLEGACY_FRAME@@MEAAPEAXI@Z
??_GLEGACY_INTERCEPTOR@@UEAAPEAXI@Z
??_GMD_INTERFACE@@AEAAPEAXI@Z
??_GMD_INTERFACE_CACHE@@QEAAPEAXI@Z
??_GSDDInfo@@QEAAPEAXI@Z
??_GTYPEINFOVTBL@@EEAAPEAXI@Z
??_Gtype_info@@UEAAPEAXI@Z
??_H@YAXPEAX_KHP6APEAX0@Z@Z
??_I@YAXPEAX_KHP6AX0@Z@Z
?ANSIStmToStr@@YAJAEAVCStmBufRead@@PEAPEADPEAK@Z
?ANSIStrToStm@@YAJAEAVCStmBufWrite@@PEBD@Z
?Acquire@Git@Details@Internal@Windows@@QEAAJXZ
?Add@CContextList@@QEAAXPEAVCContext@@@Z
?Add@CDdeConnectionTable@@QEAAJKGK@Z
?Add@CHashTable@@IEAAXKPEAUSHashChain@@@Z
?Add@CUpdateList@@QEAAPEAVCUpdate@@QEAUIMalloc@@PEBVCDfName@@1KKPEAVPTSetMember@@@Z
?Add@HAS_INTERFACES@@QEAAXAEBU1@@Z
?AddClient@@YAHPEAPEAXPEAX1@Z
?AddConnection@CConnectionPoint@@UEAAJPEAUIProgressNotify@@PEAK@Z
?AddConnection@CDefObject@@UEAAKKK@Z
?AddEntry@CProcessExtensionTbl@@AEAAJAEBU_GUID@@PEBGK@Z
?AddExtent@CExtentList@@QEAAJPEBU_MONIKEREXTENT@@@Z
?AddItem@?$CArray@VCCacheNode@@@@QEAAKAEBVCCacheNode@@@Z
?AddItem@?$CArray@VCFormatEtc@@@@QEAAKAEBVCFormatEtc@@@Z
?AddItem@?$CArray@VCStatData@@@@QEAAKAEBVCStatData@@@Z
?AddMarshal@CMarshalList@@QEAAXPEAV1@@Z
?AddMember@CTSSet@@QEAAXPEAVPTSetMember@@@Z
?AddObj@CGdiCustodian@@QEAAJPEAX@Z
?AddRef@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAKXZ
?AddRef@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIEnumFORMATETC@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIEnumSTATSTG@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIStorage@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIStream@@@@UEAAKXZ
?AddRef@?$CWrapperBase@UIUnknown@@@@UEAAKXZ
?AddRef@?$RuntimeClass@U?$InterfaceList@UIClipboardBroker@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClass@U?$InterfaceList@UIClipboardBrokerInternal@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAKXZ
?AddRef@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@W7EAAKXZ
?AddRef@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@WBA@EAAKXZ
?AddRef@CAbstractStream@@MEAAKXZ
?AddRef@CAdvSinkImpl@CDefLink@@UEAAKXZ
?AddRef@CAdvSinkImpl@CDefObject@@UEAAKXZ
?AddRef@CAdviseSinkImpl@CDefClient@@UEAAKXZ
?AddRef@CAdviseSinkImpl@COleCache@@UEAAKXZ
?AddRef@CAsyncConnection@@UEAAKXZ
?AddRef@CBaseMoniker@@UEAAKXZ
?AddRef@CBaseMoniker@@W7EAAKXZ
?AddRef@CBindCtx@@UEAAKXZ
?AddRef@CBindHost@@UEAAKXZ
?AddRef@CBindStatusCallback@@UEAAKXZ
?AddRef@CBindStatusCallback@@W7EAAKXZ
?AddRef@CBrokeredClipDataObject@@UEAAKXZ
?AddRef@CBrokeredClipDataObject@@W7EAAKXZ
?AddRef@CCacheDataImpl@COleCache@@UEAAKXZ
?AddRef@CCacheStream@@UEAAKXZ
?AddRef@CCacheUnkImpl@COleCache@@UEAAKXZ
?AddRef@CCacheViewImpl@COleCache@@UEAAKXZ
?AddRef@CClassMoniker@@UEAAKXZ
?AddRef@CClassMoniker@@W7EAAKXZ
?AddRef@CClassMoniker@@WBA@EAAKXZ
?AddRef@CClassObj@@UEAAKXZ
?AddRef@CClipClientDataWrapper@@UEAAKXZ
?AddRef@CClipClientDataWrapper@@W7EAAKXZ
?AddRef@CClipClientDataWrapper@@WBA@EAAKXZ
?AddRef@CClipClientDataWrapper@@WBI@EAAKXZ
?AddRef@CClipDataObject@@UEAAKXZ
?AddRef@CClipDataObject@@W7EAAKXZ
?AddRef@CComCat@@UEAAKXZ
?AddRef@CComCat@@W7EAAKXZ
?AddRef@CCompositeMonikerEnum@@UEAAKXZ
?AddRef@CConnectionPoint@@UEAAKXZ
?AddRef@CContinue@@UEAAKXZ
?AddRef@CDAHolder@@UEAAKXZ
?AddRef@CDataObjectImpl@CDdeObject@@UEAAKXZ
?AddRef@CDdeServerCallMgr@@UEAAKXZ
?AddRef@CDdeServerCallMgr@@W7EAAKXZ
?AddRef@CDdeServerCallMgr@@WBA@EAAKXZ
?AddRef@CDefClassFactory@@UEAAKXZ
?AddRef@CDefLink@@UEAAKXZ
?AddRef@CDefLink@@W7EAAKXZ
?AddRef@CDefLink@@WBA@EAAKXZ
?AddRef@CDefLink@@WBI@EAAKXZ
?AddRef@CDefLink@@WCA@EAAKXZ
?AddRef@CDefObject@@UEAAKXZ
?AddRef@CDefObject@@W7EAAKXZ
?AddRef@CDefObject@@WBA@EAAKXZ
?AddRef@CDefObject@@WBI@EAAKXZ
?AddRef@CDefObject@@WCA@EAAKXZ
?AddRef@CDelayUnlockContainer@@UEAAKXZ
?AddRef@CDocfileUnmarshalFactory@@UEAAKXZ
?AddRef@CDocfileUnmarshalFactory@@W7EAAKXZ
?AddRef@CDragDataObject@@UEAAKXZ
?AddRef@CDropTarget@@UEAAKXZ
?AddRef@CEMfObject@@UEAAKXZ
?AddRef@CEnumCategories@@UEAAKXZ
?AddRef@CEnumCategoriesOfClass@@UEAAKXZ
?AddRef@CEnumClassesOfCategories@@UEAAKXZ
?AddRef@CEnumConnectionsImpl@@UEAAKXZ
?AddRef@CEnumFmt@@UEAAKXZ
?AddRef@CEnumFormatEtc@@UEAAKXZ
?AddRef@CEnumFormatEtcDataArray@@UEAAKXZ
?AddRef@CEnumSTATDATA@@UEAAKXZ
?AddRef@CEnumSTATPROPBAG@@UEAAKXZ
?AddRef@CEnumSTATPROPSETSTG@@UEAAKXZ
?AddRef@CEnumSTATPROPSTG@@UEAAKXZ
?AddRef@CEnumStatData@@UEAAKXZ
?AddRef@CEnumVerb@@EEAAKXZ
?AddRef@CExposedDocFile@@UEAAKXZ
?AddRef@CExposedDocFile@@W7EAAKXZ
?AddRef@CExposedDocFile@@WDA@EAAKXZ
?AddRef@CExposedDocFile@@WDI@EAAKXZ
?AddRef@CExposedDocFile@@WEA@EAAKXZ
?AddRef@CExposedDocFile@@WEI@EAAKXZ
?AddRef@CExposedDocFile@@WFA@EAAKXZ
?AddRef@CExposedIterator@@UEAAKXZ
?AddRef@CExposedIterator@@W7EAAKXZ
?AddRef@CExposedStream@@UEAAKXZ
?AddRef@CExposedStream@@W7EAAKXZ
?AddRef@CExposedStream@@WBA@EAAKXZ
?AddRef@CExposedStream@@WBI@EAAKXZ
?AddRef@CFileStream@@UEAAKXZ
?AddRef@CFileStream@@W7EAAKXZ
?AddRef@CFileStream@@WBA@EAAKXZ
?AddRef@CFileStream@@WBI@EAAKXZ
?AddRef@CFillLockBytes@@UEAAKXZ
?AddRef@CFillLockBytes@@W7EAAKXZ
?AddRef@CFillLockBytes@@WBA@EAAKXZ
?AddRef@CFont@@UEAAKXZ
?AddRef@CFont@@W7EAAKXZ
?AddRef@CFont@@WBA@EAAKXZ
?AddRef@CFont@@WBI@EAAKXZ
?AddRef@CFont@@WCA@EAAKXZ
?AddRef@CFont@@WCI@EAAKXZ
?AddRef@CFontEventsCP@@UEAAKXZ
?AddRef@CGdiCustodian@@UEAAKXZ
?AddRef@CGenObject@@UEAAKXZ
?AddRef@CInnerUnk@CComCat@@UEAAKXZ
?AddRef@CInterfaceFromWindowProp@@UEAAKXZ
?AddRef@CLUAMoniker@@UEAAKXZ
?AddRef@CLUAMoniker@@W7EAAKXZ
?AddRef@CLUAMoniker@@WCI@EAAKXZ
?AddRef@CLUAMoniker@@WDA@EAAKXZ
?AddRef@CMarshalImplPStream@@UEAAKXZ
?AddRef@CMemBytes@@UEAAKXZ
?AddRef@CMfObject@@UEAAKXZ
?AddRef@CMonikerFactory@@UEAAKXZ
?AddRef@CMonikerFactory@@W7EAAKXZ
?AddRef@CNFFMappedStream@@UEAAKXZ
?AddRef@CNFFTreeMutex@@UEAAKXZ
?AddRef@CNotifyCP@@UEAAKXZ
?AddRef@CNtfsEnumSTATSTG@@UEAAKXZ
?AddRef@CNtfsStorage@@UEAAKXZ
?AddRef@CNtfsStorage@@W7EAAKXZ
?AddRef@CNtfsStorage@@WBA@EAAKXZ
?AddRef@CNtfsStorageForPropSetStg@@UEAAKXZ
?AddRef@CNtfsStream@@UEAAKXZ
?AddRef@CNtfsStream@@W7EAAKXZ
?AddRef@COAHolder@@UEAAKXZ
?AddRef@COleCache@@UEAAKXZ
?AddRef@COleCache@@W7EAAKXZ
?AddRef@COleCache@@WBA@EAAKXZ
?AddRef@COleClientSiteImpl@CDefClient@@UEAAKXZ
?AddRef@COleItemContainerImpl@CDdeObject@@UEAAKXZ
?AddRef@COleObjectImpl@CDdeObject@@UEAAKXZ
?AddRef@CPackagerMoniker@@UEAAKXZ
?AddRef@CPageHolder@@UEAAKXZ
?AddRef@CPersistStgImpl@CDdeObject@@UEAAKXZ
?AddRef@CPictioFileStream@@UEAAKXZ
?AddRef@CPicture@@UEAAKXZ
?AddRef@CPicture@@W7EAAKXZ
?AddRef@CPicture@@WBA@EAAKXZ
?AddRef@CPicture@@WBI@EAAKXZ
?AddRef@CPicture@@WCA@EAAKXZ
?AddRef@CPicture@@WCI@EAAKXZ
?AddRef@CPointerMoniker@@UEAAKXZ
?AddRef@CPointerMoniker@@W7EAAKXZ
?AddRef@CPointerMoniker@@WCI@EAAKXZ
?AddRef@CPrivDragDrop@@UEAAKXZ
?AddRef@CPrivUnknown@CDefLink@@UEAAKXZ
?AddRef@CPrivUnknown@CDefObject@@UEAAKXZ
?AddRef@CPropertyBagEx@@UEAAKXZ
?AddRef@CPropertyBagEx@@W7EAAKXZ
?AddRef@CPropertySetStorage@@UEAAKXZ
?AddRef@CPropertyStorage@@UEAAKXZ
?AddRef@CProxyManagerImpl@CDdeObject@@UEAAKXZ
?AddRef@CPunkForRelease@@UEAAKXZ
?AddRef@CRotMonikerEnum@@UEAAKXZ
?AddRef@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?AddRef@CRunningObjectTable@@UEAAKXZ
?AddRef@CRunningObjectTable@@W7EAAKXZ
?AddRef@CSSMappedStream@@UEAAKXZ
?AddRef@CSessionMoniker@@UEAAKXZ
?AddRef@CSessionMoniker@@W7EAAKXZ
?AddRef@CSessionMoniker@@WCI@EAAKXZ
?AddRef@CSimpEnumSTATSTG@@UEAAKXZ
?AddRef@CSimpStorage@@UEAAKXZ
?AddRef@CSimpStorage@@W7EAAKXZ
?AddRef@CSimpStorage@@WBA@EAAKXZ
?AddRef@CSimpStream@@UEAAKXZ
?AddRef@CSimpStream@@W7EAAKXZ
?AddRef@CSmAllocator@@UEAAKXZ
?AddRef@CStdClassFactory@@UEAAKXZ
?AddRef@CStreamDummy@@UEAAKXZ
?AddRef@CSyncSync@@UEAAKXZ
?AddRef@CTrackingCompositeMoniker@@UEAAKXZ
?AddRef@CTrackingFileMoniker@@UEAAKXZ
?AddRef@CUnknownImpl@CDdeObject@@UEAAKXZ
?AddRef@CUnknownImpl@CDefClient@@UEAAKXZ
?AddRef@CUrlMonWrapper@@UEAAKXZ
?AddRef@CallFrame@@UEAAKXZ
?AddRef@CallFrame@@W7EAAKXZ
?AddRef@ComPsClassFactory@@UEAAKXZ
?AddRef@ComPsClassFactory@@W7EAAKXZ
?AddRef@CsCatInfo@@UEAAKXZ
?AddRef@DDE_CHANNEL@@UEAAKXZ
?AddRef@DDE_CHANNEL@@W7EAAKXZ
?AddRef@DefaultIBindStatusCallback@@UEAAKXZ
?AddRef@DefaultIBindStatusCallback@@W7EAAKXZ
?AddRef@Interceptor@@EEAAKXZ
?AddRef@Interceptor@@G7EAAKXZ
?AddRef@Interceptor@@GBA@EAAKXZ
?AddRef@Interceptor@@GBI@EAAKXZ
?AddRef@Interceptor@@GCI@EAAKXZ
?AddRef@InterfaceWalkerFree@@UEAAKXZ
?AddRef@LEGACY_FRAME@@UEAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@UEAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@W7EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBA@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WBI@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WCA@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WCI@EAAKXZ
?AddRef@LEGACY_INTERCEPTOR@@WDI@EAAKXZ
?AddRef@MarshallingChannel@@UEAAKXZ
?AddRef@MarshallingChannel@@W7EAAKXZ
?AddRef@PTSetMember@@QEAAXXZ
?AddRef@SSimpleWalker@@UEAAKXZ
?AddRefHfont@CFont@@UEAAJPEAUHFONT__@@@Z
?AddRefInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAX@Z
?AddReservedItem@?$CArray@VCCacheNode@@@@QEAAHAEBVCCacheNode@@K@Z
?AddSection@CPropertySet@@QEAAPEAVCPropertySection@@U_GUID@@@Z
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAJPEAV?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@@Z
?AddToCache@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAJPEAV?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@@Z
?AddToCache@MD_INTERFACE@@QEAAJPEAUMD_INTERFACE_CACHE@@@Z
?AddXSMember@CPubDocFile@@QEAAXPEAVPTSetMember@@0K@Z
?Advance@CarefulBufferReader@@QEAAX_K@Z
?Advance@SerializedPropertyReader@@QEAAJK@Z
?AdvanceTo@CarefulBufferReader@@QEAAXPEAE@Z
?Advise@CAsyncConnection@@UEAAJPEAUIUnknown@@PEAK@Z
?Advise@CDAHolder@@UEAAJPEAUIDataObject@@PEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?Advise@CDataAdviseCache@@QEAAJPEAUIDataObject@@PEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?Advise@CDefLink@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@CDefObject@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@CFontEventsCP@@UEAAJPEAUIUnknown@@PEAK@Z
?Advise@CNotifyCP@@UEAAJPEAUIUnknown@@PEAK@Z
?Advise@COAHolder@@UEAAJPEAUIAdviseSink@@PEAK@Z
?Advise@COleObjectImpl@CDdeObject@@UEAAJPEAUIAdviseSink@@PEAK@Z
?AdviseData@CDefClient@@QEAAJPEAUHWND__@@GPEAXPEAH@Z
?AdviseOn@CDdeObject@@AEAAJGH@Z
?AdviseStdItems@CDefClient@@QEAAJPEAUHWND__@@GPEAXPEAH@Z
?AgeOutEntries@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?AgeOutEntries@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAXXZ
?AicGetTokenForCOM@@YAJPEAUHWND__@@PEBGPEAU_GUID@@1111KKHPEAXPEAPEAX@Z
?AicpAsyncFinishCall@@YAKPEAU_RPC_ASYNC_STATE@@HKK@Z
?AicpCreateBindingHandle@@YAKPEAGHPEAPEAX@Z
?AicpStartAIS@@YAKK@Z
?Align@CarefulBufferReader@@QEAAXH@Z
?AllButFirst@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?AllButLast@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?Alloc@CErrorSmAllocator@@UEAAPEAX_K@Z
?Alloc@CSmAllocator@@UEAAPEAX_K@Z
?Alloc@CallFrame@@QEAAPEAX_K@Z
?Alloc@CallFrame@@QEAAPEAX_KH@Z
?Alloc@DeserializeHelper@@AEAAJPEAPEAXK@Z
?AllocAndCopy@@YAPEAXKPEAX@Z
?AllocAndCopyBstr@DeserializeHelper@@AEAAJPEAPEAGPEBGK@Z
?AllocArray@DeserializeHelper@@AEAAJPEAPEAXKK@Z
?AllocBuffer@CallFrame@@QEAAPEAX_K@Z
?AllocCount@DeserializeHelper@@AEAAJK@Z
?AllocDdeChannel@CDdeObject@@QEAAHPEAPEAVDDE_CHANNEL@@H@Z
?AllocEntry@CPageAllocator@@QEAAPEAUtagPageEntry@@H@Z
?AllocSafeArray@DeserializeHelper@@AEAAJPEAPEAUtagSAFEARRAY@@GKPEBUtagSAFEARRAYBOUND@@K@Z
?AllocStack@CallFrame@@QEAAJ_KH@Z
?Allocate@BstrDestroyer@DeserializeHelper@@EEAAPEAXK@Z
?Allocate@CCoTaskAllocator@@UEAAPEAXK@Z
?Allocate@CStreamCache@@QEAAJPEAVCFat@@KPEAK@Z
?Allocate@SafeArrayDestroyer@DeserializeHelper@@EEAAPEAXK@Z
?ApartmentDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?Append@CUpdateList@@QEAAXPEAVCUpdate@@@Z
?ApplyChanges@CDocFile@@QEAAJAEAVCUpdateList@@@Z
?AreNoClients@@YAHPEAX@Z
?AspectsUpdated@COleCache@@AEAAXK@Z
?AsyncGetClassBits@CUrlMonWrapper@@UEAAJAEBU_GUID@@PEBG1KK1PEAUIBindCtx@@K0K@Z
?Attach@?$ComPtr@UIStorage@@@WRL@Microsoft@@QEAAXPEAUIStorage@@@Z
?Attach@?$ComPtr@UIStream@@@WRL@Microsoft@@QEAAXPEAUIStream@@@Z
?Attach@?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@QEAAXPEAVClipboardDataObjectTask@@@Z
?Base64ToIStream@@YAJPEAG_KPEAPEAUIStream@@@Z
?BeginCommitFromChild@CDirectStream@@QEAAJ_KPEAVCDeltaList@@PEAVCTransactedStream@@@Z
?BeginCommitFromChild@CDocFile@@QEAAJAEAVCUpdateList@@KPEAVCWrappedDocFile@@@Z
?BeginCommitFromChild@CWrappedDocFile@@QEAAJAEAVCUpdateList@@KPEAV1@@Z
?BeginCopyOnWrite@CMStream@@QEAAJK@Z
?BeginUpdates@CDefLink@@AEAAXXZ
?BeginUsingLatestStream@CNFFMappedStream@@AEAAXXZ
?BeginUsingUpdateStream@CNFFMappedStream@@AEAAXXZ
?BindIfRunning@CDefLink@@UEAAJXZ
?BindSpeedFromBindCtx@@YAKPEAUIBindCtx@@@Z
?BindToObject@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToObject@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToSource@CDefLink@@UEAAJKPEAUIBindCtx@@@Z
?BindToStorage@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BindToStorage@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@AEBU_GUID@@PEAPEAX@Z
?BmDuplicate@@YAPEAUHBITMAP__@@PEAU1@PEAKPEAUtagBITMAP@@@Z
?BuildConsolidationControlSectList@CMStream@@QEAAJPEAPEAKPEAK@Z
?BuildIndirectIndexArray@@YAKKPEBUtagPROPVARIANT@@PEAK@Z
?BuildPalette@CBmpLoader@@AEAAJPEAPEAUHPALETTE__@@@Z
?BuildRotData@@YAJPEAUIBindCtx@@PEAUIMoniker@@PEAEKPEAK@Z
?BuildRotDataFromDisplayName@@YAJPEAUIBindCtx@@PEAUIMoniker@@PEAEKPEAK@Z
?BuildTree@CSimpStorage@@IEAAKPEAVCDirEntry@@KK@Z
?ByValue@CallFrame@@QEBAHAEBUPARAM_ATTRIBUTES@@PEBEH@Z
?CAntiMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CCh2CB@CPropertySetStream@@QEBAKK@Z
?CComCatCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CComCatCSCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CCompositeMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CFToSafeArray@@YAJPEBUtagCLIPDATA@@PEAPEAUtagSAFEARRAY@@@Z
?CItemMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CLIPFORMAT_UserFreeExt@@YAXPEAKPEAG@Z
?CLIPFORMAT_UserMarshalExt@@YAPEAEPEAKPEAEPEAG@Z
?CLIPFORMAT_UserSizeExt@@YAKPEAKKPEAG@Z
?CLIPFORMAT_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAG@Z
?CLSIDFromAtom@@YAHGPEAU_GUID@@@Z
?CLSIDFromAtomWithTreatAs@@YAJPEAGPEAU_GUID@@PEAW4CNVTYP@@@Z
?CPackagerMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CPointerMonikerCF_CreateInstance@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?Cache@COleCache@@UEAAJPEAUtagFORMATETC@@KPEAK@Z
?CacheSegment@CStreamCache@@AEAAXPEAUSSegment@@@Z
?CacheUnmarkedSect@CDIFat@@QEAAXKKK@Z
?CalcFileMonikerHash@@YAJPEAGKPEAK@Z
?CalcSafeArrayElements@@YAJKPEBUtagSAFEARRAYBOUND@@PEAK@Z
?CalculateColorTableSize@@YAHIIIIPEAK0@Z
?CalculateReasonableMaxStreamSize@CExposedDocFile@@AEAAJPEA_K0@Z
?CalculateSpinCount@@YAKXZ
?CallIndirect@Interceptor@@UEAAJPEAJKPEAXPEAK@Z
?CallIndirect@LEGACY_INTERCEPTOR@@UEAAJPEAJKPEAXPEAK@Z
?CallInitCommonControls@@YAHXZ
?CallbackFuncForDraw@CEMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEBUtagENHMETARECORD@@H_J@Z
?CallbackFuncForDraw@CMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CallbackFuncForDraw@CPicture@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CallbackFuncForGetColorSet@CMfObject@@QEAAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEFAUtagMETARECORD@@H@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAHK@Z
?CanBeAgedOut@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAHK@Z
?CanCallBack@CDdeObject@@AEAAHPEAH@Z
?CanRetrieveOle2FromOle1@@YAHI@Z
?Cancel@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?Cancel@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?CanonHeader@CBmpLoader@@AEAAJXZ
?CaptureCallerToken@@YAJPEAPEAX@Z
?CatchOOM@@YAHK@Z
?CbParam@CallFrame@@QEBAKKAEBUPARAM_DESCRIPTION@@@Z
?ChangeData@CEMfObject@@AEAAJPEAUHENHMETAFILE__@@H@Z
?ChangeData@CGenObject@@AEAAJPEAXH@Z
?ChangeData@CMfObject@@AEAAJPEAXH@Z
?ChangeTopic@CDdeObject@@AEAAJPEAD@Z
?ChangeXs@CPubDocFile@@IEAAXKK@Z
?CharPrevStub@@YAPEAGPEBG0@Z
?CharUpperStub@@YAPEAGPEAG@Z
?CheckBitmapBits@@YAHQEAUtagBITMAPINFOHEADER@@KK@Z
?CheckCallerIntegrityLevelIsAtLeast@@YAJK@Z
?CheckCopyTo@CExposedDocFile@@AEAAJXZ
?CheckDownloadRegistrySettings@@YAKXZ
?CheckInitDde@@YAJH@Z
?CheckName@@YAJPEBG@Z
?CheckOffset@@YAJ_K00@Z
?CheckReverted@CNtfsStorage@@AEAAJXZ
?CheckReverted@CNtfsStream@@QEAAJXZ
?CheckReverted@CPubDocFile@@QEBAJXZ
?CheckReverted@CPubStream@@QEBAJXZ
?CheckSafeArrayDims@@YAJK@Z
?CheckSectorsAgainstFileSize@CMSFHeader@@QEBAJ_KPEAUILockBytes@@@Z
?CheckSegment@CStreamCache@@AEAAHKUSCacheEntry@@PEAK11@Z
?CheckSignature@@YAJPEAE@Z
?CheckSize@CarefulBufferReader@@QEAAX_K@Z
?CheckTymedCFCombination@@YAJPEAUtagFORMATETC@@@Z
?CheckTypeInfo@@YAJPEAUITypeInfo@@PEAPEAU1@1PEAGPEAHPEAU_GUID@@1@Z
?CheckUninitDde@@YAXH@Z
?CheckVarType@@YAJG@Z
?CheckVarTypeToDeserialize@@YAJGHHH@Z
?CheckVarTypeToSerialize@@YAJGHHH@Z
?ChkName@CFont@@QEAAJPEAG@Z
?CleanROTForApartment@@YAXXZ
?Cleanup@CHashTable@@UEAAXP6AXPEAUSHashChain@@@Z@Z
?Cleanup@CInternalPageAllocator@@QEAAXXZ
?Cleanup@CPageAllocator@@QEAAXXZ
?CleanupApartment@CRunningObjectTable@@QEAAJK@Z
?CleanupClipboardThreadpoolWorker@@YAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_WAIT@@J@Z
?CleanupExtEntry@@YAXPEAUSHashChain@@@Z
?CleanupFn@CDefLink@@EEAAXXZ
?CleanupFn@CDefObject@@EEAAXXZ
?CleanupFn@COleCache@@EEAAXXZ
?CleanupFn@CRefExportCount@@EEAAXXZ
?CleanupStatArray@CEnumSTATPROPSETSTG@@AEAAXXZ
?Clear@CEnumConnectionsImpl@@QEAAXXZ
?ClientToDelegate@CDataAdviseCache@@AEAAJKPEAK@Z
?ClipboardInitializeBroker@@YAHXZ
?ClipboardInitializeWindow@@YAHXZ
?ClipboardProcessUninitialize@@YAXXZ
?ClipboardUninitialize@@YAXXZ
?ClipfmtToStm@@YAJAEAVCStmBufWrite@@KKW4TXTTYPE@@@Z
?Clone@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJPEAPEAUIEnumCATEGORYINFO@@@Z
?Clone@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CAbstractStream@@MEAAJPEAPEAUIStream@@@Z
?Clone@CCompositeMonikerEnum@@UEAAJPEAPEAUIEnumMoniker@@@Z
?Clone@CEnumCategories@@UEAAJPEAPEAUIEnumCATEGORYINFO@@@Z
?Clone@CEnumCategoriesOfClass@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumClassesOfCategories@@UEAAJPEAPEAUIEnumGUID@@@Z
?Clone@CEnumConnectionsImpl@@UEAAJPEAPEAUIEnumConnections@@@Z
?Clone@CEnumFmt10@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFmt@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtc@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumFormatEtcDataArray@@UEAAJPEAPEAUIEnumFORMATETC@@@Z
?Clone@CEnumSTATDATA@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?Clone@CEnumSTATPROPBAG@@UEAAJPEAPEAUIEnumSTATPROPBAG@@@Z
?Clone@CEnumSTATPROPSETSTG@@UEAAJPEAPEAUIEnumSTATPROPSETSTG@@@Z
?Clone@CEnumSTATPROPSTG@@UEAAJPEAPEAUIEnumSTATPROPSTG@@@Z
?Clone@CEnumStatData@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?Clone@CEnumVerb@@EEAAJPEAPEAUIEnumOLEVERB@@@Z
?Clone@CExpParameterValidate@@SAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CExposedIterator@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CExposedStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CFont@@UEAAJPEAPEAUIFont@@@Z
?Clone@CLimitedWritableStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CNtfsEnumSTATSTG@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CNtfsStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CPictioFileStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CReadOnlyStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CRotMonikerEnum@@UEAAJPEAPEAUIEnumMoniker@@@Z
?Clone@CSimpEnumSTATSTG@@UEAAJPEAPEAUIEnumSTATSTG@@@Z
?Clone@CSimpStream@@UEAAJPEAPEAUIStream@@@Z
?Clone@CStreamDummy@@UEAAJPEAPEAUIStream@@@Z
?Close@CDefLink@@UEAAJK@Z
?Close@CDefObject@@UEAAJK@Z
?Close@CExposedStream@@UEAAXPEAJ@Z
?Close@CNFFMappedStream@@UEAAXPEAJ@Z
?Close@COleObjectImpl@CDdeObject@@UEAAJK@Z
?Close@CPerContext@@QEAAXXZ
?Close@CSSMappedStream@@UEAAXPEAJ@Z
?CloseSharedFileMapping@@YAXPEAX0@Z
?Commit@CAbstractStream@@MEAAJK@Z
?Commit@CExpParameterValidate@@SAJK@Z
?Commit@CExposedDocFile@@UEAAJK@Z
?Commit@CExposedStream@@UEAAJK@Z
?Commit@CLimitedWritableStorage@@UEAAJK@Z
?Commit@CLimitedWritableStream@@UEAAJK@Z
?Commit@CNtfsStorage@@UEAAJK@Z
?Commit@CNtfsStorageForPropSetStg@@UEAAJK@Z
?Commit@CNtfsStream@@UEAAJK@Z
?Commit@CPictioFileStream@@UEAAJK@Z
?Commit@CPropertyBagEx@@QEAAJK@Z
?Commit@CPropertyStorage@@UEAAJK@Z
?Commit@CPubDocFile@@QEAAJK@Z
?Commit@CPubStream@@QEAAJK@Z
?Commit@CReadOnlyStorage@@UEAAJK@Z
?Commit@CReadOnlyStream@@UEAAJK@Z
?Commit@CSharedMemoryBlock@@QEAAJK@Z
?Commit@CSimpStorage@@UEAAJK@Z
?Commit@CSimpStream@@UEAAJK@Z
?Commit@CStreamDummy@@UEAAJK@Z
?CommonPrefixWith@CAntiMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CBaseMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CClassMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CCompositeMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CFileMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CItemMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CLUAMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CObjrefMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CPackagerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CPointerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?CommonPrefixWith@CSessionMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?Compare@CExtHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?Compare@CNameHashTable@@UEAAHPEBXPEAUSHashChain@@K@Z
?CompareAssocKey@CMapKeyToValue@@AEBAHPEAUCAssoc@1@PEAXI@Z
?CompareNCharacters@@YAHPEAG0K@Z
?CompleteDrop@CDragOperation@@QEAAJXZ
?ComposeWith@CAntiMoniker@@EEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CBaseMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CClassMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CCompositeMoniker@@EEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CFileMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CItemMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CLUAMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CPackagerMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CPointerMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWith@CSessionMoniker@@UEAAJPEAUIMoniker@@HPEAPEAU2@@Z
?ComposeWithEnum@@YAJPEAUIMoniker@@PEAUIEnumMoniker@@PEAPEAU1@@Z
?ComputeConformance@CallFrame@@QEAA_KPEAEPEBEH@Z
?ComputeVariance@CallFrame@@QEAAXPEAEPEBEPEAK2H@Z
?Connect@CDdeServerCallMgr@@UEAAJPEAUIUnknown@@@Z
?Connect@CProxyManagerImpl@CDdeObject@@UEAAJU_GUID@@AEBU3@@Z
?Connect@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAUIUnknown@@@Z
?Consolidate@CMStream@@QEAAJXZ
?Consolidate@CPubDocFile@@IEAAJK@Z
?ConsolidateStream@CMStream@@QEAAJPEAVCDirEntry@@KK@Z
?ContextInvoke@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcStubBuffer@@PEAUtagIPIDEntry@@PEAK@Z
?ContextInvoke@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcStubBuffer@@PEAUtagIPIDEntry@@PEAK@Z
?Contig@CFat@@QEAAJPEAUSSegment@@HKKPEAK@Z
?Contig@CStreamCache@@QEAAJKHPEAUSSegment@@KPEAK@Z
?Convert10TargetDevice@@YAJPEAXPEAPEAUtagDVTARGETDEVICE@@@Z
?Convert20TargetDevice@@YAJPEBUtagDVTARGETDEVICE@@PEAPEAX@Z
?ConvertILB@CMStream@@AEAAJKT_ULARGE_INTEGER@@@Z
?ConvertInternalStream@CExposedDocFile@@AEAAJPEAV1@@Z
?ConvertMactPict@@YAPEAUHMETAFILE__@@PEAX@Z
?ConvertStringToLCID@CComCat@@CAJPEAKPEAG@Z
?ConvertToFullHWND@@YAPEAUHWND__@@PEAU1@@Z
?ConvertVariantToPropInfo@@YAXPEAVCPropertySetStream@@KKQEBUtagPROPSPEC@@QEAKQEBUtagPROPVARIANT@@PEAUtagPROPERTY_INFORMATION@@PEAKPEAJ@Z
?Copy@CCacheStream@@UEAAJPEAUIStream@@J@Z
?Copy@CallFrame@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@DISPATCH_CLIENT_FRAME@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?Copy@DISPATCH_SERVER_FRAME@@UEAAJW4__MIDL_ICallFrame_0003@@PEAUICallFrameWalker@@PEAPEAUICallFrame@@@Z
?CopyConformantArrayPriv@CallFrame@@QEAAXPEAEPEAPEAEPEBEH@Z
?CopyDocFileToIStorage@CExposedDocFile@@AEAAJPEAVPDocFile@@PEAUIStorage@@PEAPEAGKPEA_K3@Z
?CopyEmbeddedPointers@CallFrame@@QEAAXPEAE0PEBEH@Z
?CopyEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAE0PEBEH@Z
?CopyFormatEtcDataArray@@YAXPEAUFORMATETCDATAARRAY@@0_KH@Z
?CopyFrom@CEnumConnectionsImpl@@QEAAJPEAVCRgPv@@@Z
?CopyFrom@CRgPv@@QEAAJPEAV1@@Z
?CopyLStreamToLStream@CPubDocFile@@IEAAJPEAUILockBytes@@0@Z
?CopyPathFromUnicodeExtent@@YAJPEFAU_MONIKEREXTENT@@AEAPEAGAEAG@Z
?CopyPathToUnicodeExtent@@YAJPEAGKAEAPEAU_MONIKEREXTENT@@@Z
?CopyRecord@OAUTIL@@AEAAJPEAX0PEAUITypeInfo@@H@Z
?CopyRecordAndAlloc@OAUTIL@@AEAAJPEAUIRecordInfo@@PEAXPEAPEAXH@Z
?CopyRecordField@OAUTIL@@AEAAJPEAE0PEAUtagTYPEDESC@@PEAUITypeInfo@@H@Z
?CopySStreamToIStream@CExposedDocFile@@AEAAJPEAVPSStream@@PEAUIStream@@PEA_K2@Z
?CopySStreamToSStream@@YAJPEAVPSStream@@0@Z
?CopySTATPROPSTG@@YAJKPEAUtagSTATPROPSTG@@PEBU1@@Z
?CopySect@CMStream@@AEAAJKKFFPEBEPEAK@Z
?CopyString@@YAPEADPEBD@Z
?CopyString@@YAPEAGPEBG@Z
?CopyStringLower@@YAPEAGPEBG@Z
?CopyTimesFrom@PTimeEntry@@QEAAJPEAV1@@Z
?CopyTo@CAbstractStream@@MEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CDocFile@@QEAAJPEAV1@KPEAPEAG@Z
?CopyTo@CExpParameterValidate@@SAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CExpParameterValidate@@SAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CExposedDocFile@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CExposedStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CLimitedWritableStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CLimitedWritableStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CNtfsStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CNtfsStorageForPropSetStg@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CNtfsStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CPictioFileStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CReadOnlyStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CReadOnlyStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CSimpStorage@@UEAAJKPEBU_GUID@@PEAPEAGPEAUIStorage@@@Z
?CopyTo@CSimpStream@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyTo@CStreamDummy@@UEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2@Z
?CopyToWorker@CExposedStream@@AEAAJPEAUIStream@@T_ULARGE_INTEGER@@PEAT3@2PEAVCSafeSem@@@Z
?CopyWorker@CallFrame@@QEAAXPEAEPEAPEAEPEBEH@Z
?Count@CCompositeMoniker@@QEAAJPEAK@Z
?CountContexts@CContextList@@QEAAKXZ
?CountFree@CFat@@AEAAJPEAK@Z
?CountRefs@CDdeServerCallMgr@@UEAAKXZ
?CountRefs@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?CountSectType@CFat@@QEAAJPEAKKKK@Z
?CountSegments@@YAHPEAG@Z
?CrackCoreHeader@CBmpLoader@@AEAAJXZ
?CrackInfoHeader@CBmpLoader@@AEAAJXZ
?Create@CAntiMoniker@@SAPEAUIMoniker@@K@Z
?Create@CBindHost@@SAPEAV1@XZ
?Create@CBrokerInstanceHolder@@SAJPEAUIClipboardBroker@@PEAPEAV1@@Z
?Create@CBrokeredClipDataObject@@SAJPEAUIDataObject@@K_NPEAPEAXPEAPEAU2@@Z
?Create@CClipDataObject@@SAJPEAUFORMATETCDATAARRAY@@_NPEAPEAUIDataObject@@@Z
?Create@CCompositeMoniker@@SAPEAV1@PEAUIMoniker@@0@Z
?Create@CCompositeMonikerEnum@@SAPEAUIEnumMoniker@@HPEAVCCompositeMoniker@@@Z
?Create@CDDEServer@@SAJPEAGAEBU_GUID@@PEAU_tagDdeClassInfo@@PEAPEAUHWND__@@GW4CNVTYP@@@Z
?Create@CDdeObject@@SAPEAUIUnknown@@PEAU2@AEBU_GUID@@KGPEAGPEAPEAV1@H@Z
?Create@CDefClient@@SAJPEAVCDDEServer@@PEAUIUnknown@@PEAGHHHPEAPEAUHWND__@@@Z
?Create@CDefLink@@SAPEAUIUnknown@@PEAU2@@Z
?Create@CDefObject@@SAPEAUIUnknown@@PEAU2@AEBU_GUID@@KPEAUIClassFactory@@@Z
?Create@CFileMoniker@@SAPEAV1@PEBGGG@Z
?Create@CFrameFilter@@SAJPEAUtagOLEMENU@@PEAUHMENU__@@PEAUHWND__@@2PEAUIOleInPlaceFrame@@PEAUIOleInPlaceActiveObject@@@Z
?Create@CGdiCustodian@@SAJPEAPEAV1@@Z
?Create@CItemMoniker@@SAPEAV1@PEBG0@Z
?Create@CMemBytes@@SAPEAV1@PEAX@Z
?Create@CObjrefMoniker@@SAPEAV1@PEAUIUnknown@@@Z
?Create@CPackagerMoniker@@SAJPEAGPEAUIMoniker@@HPEAPEAU2@@Z
?Create@CPicture@@SAPEAV1@H@Z
?Create@CPlex@@SAPEAU1@AEAPEAU1@II@Z
?Create@CPropertySetStorage@@UEAAJAEBU_GUID@@PEBU2@KKPEAPEAUIPropertyStorage@@@Z
?Create@CPropertyStorage@@QEAAJPEAUIStorage@@AEBU_GUID@@PEBU3@KK@Z
?Create@CPropertyStorage@@QEAAJPEAUIStream@@AEBU_GUID@@PEBU3@KK@Z
?Create@CRunningObjectTable@@SAHXZ
?Create@CSyncSync@@SAPEAV1@PEAVCPicture@@PEAUIImageFilter@@@Z
?CreateActiveObjectMoniker@@YAJAEBU_GUID@@PEAPEAUIMoniker@@@Z
?CreateAndLoadPresObj@CCacheNode@@AEAAJH@Z
?CreateAnsiFromUnicode@@YAPEADPEBG@Z
?CreateBitmapAndPalette@CBmpLoader@@AEAAJPEAVCPicture@@@Z
?CreateClassObj@@YAJP6AJPEAPEAUIUnknown@@@ZAEBU_GUID@@PEAPEAX@Z
?CreateClipDataObjectFromPersistedData@@YAJPEAPEAUIDataObject@@PEAK@Z
?CreateCommonDdeWindow@@YAJXZ
?CreateDataAdviseCache@CDataAdviseCache@@SAJPEAPEAV1@@Z
?CreateDdeSrvrWindow@@YAJAEBU_GUID@@GPEAPEAUHWND__@@HGW4CNVTYP@@@Z
?CreateDelegate@CDefObject@@AEAAJXZ
?CreateDibSection@CBmpLoader@@AEAAJPEAUHDC__@@PEAPEAUHBITMAP__@@@Z
?CreateDlg@CHlprDialog@@UEAAPEAUHWND__@@PEAUHINSTANCE__@@PEBGPEAU2@@Z
?CreateDocFile@CDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPDocFile@@@Z
?CreateDocFile@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAV1@@Z
?CreateDocFile@CWrappedDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPDocFile@@@Z
?CreateDocFile@PDocFile@@QEAAJPEBVCDfName@@KKPEAPEAV1@@Z
?CreateDragDataObject@@YAJPEAUtagInterfaceData@@HKPEAPEAUIDataObject@@@Z
?CreateEntry@CDirectory@@QEAAJKPEBVCDfName@@KPEAK@Z
?CreateEntry@CExposedDocFile@@AEAAJPEBVCDfName@@KKPEAPEAX@Z
?CreateEntry@CStgHandle@@QEAAJPEBVCDfName@@KPEAVCHandle@@@Z
?CreateEnumFormatEtc@CEnumFormatEtc@@SAPEAUIEnumFORMATETC@@PEAV?$CArray@VCCacheNode@@@@@Z
?CreateEnumStatData@CEnumStatData@@SAPEAUIEnumSTATDATA@@PEAV?$CArray@VCCacheNode@@@@@Z
?CreateFileMonikerComparisonBuffer@@YAJPEAGPEAEKPEAK@Z
?CreateFileStream@@YAJPEAGKPEAPEAUIStream@@@Z
?CreateFontW@@YAJPEAPEAUIUnknown@@@Z
?CreateFromTypeInfo@Interceptor@@CAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAX@Z
?CreateFromUpdate@PDocFile@@SAJPEAVCUpdate@@PEAV1@K@Z
?CreateInstance@?$GenericInstantiator@UDISPATCH_INTERCEPTOR@@@@SAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CClassMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CClassObj@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CDDEServer@@AEAAJAEBU_GUID@@PEAGPEADPEAUIUnknown@@PEAPEAVCDefClient@@PEAUHWND__@@@Z
?CreateInstance@CDefClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CDocfileUnmarshalFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CFileMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CLUAMoniker@@UEAAJAEBU_GUID@@PEAUIUnknown@@KKKPEAUtagMULTI_QI@@@Z
?CreateInstance@CObjrefMonikerFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@CStdClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateInstance@ComPsClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?CreateMappedStream@CPropertyStorage@@EEAAJXZ
?CreateMatchingFont@CFont@@QEAAJPEAPEAUHFONT__@@@Z
?CreateMoniker@CBindHost@@UEAAJPEAGPEAUIBindCtx@@PEAPEAUIMoniker@@K@Z
?CreateObjectDescriptor@@YAPEAXU_GUID@@KPEBUtagSIZE@@PEBU_POINTL@@KPEAG3@Z
?CreateOlePresObj@CCacheNode@@AEAAJPEAPEAUIOlePresObj@@H@Z
?CreateOrOpenDocfileOnHandle@@YAHHKPEAPEAXAEBU_GUID@@0@Z
?CreateOrOpenStorage@CNtfsStorageForPropSetStg@@AEAAJPEBGPEAUIStorage@@KPEAPEAGHPEAPEAU2@@Z
?CreateOrOpenStorageOnHandle@@YAHHKKPEAXAEBU_GUID@@PEAPEAX@Z
?CreateOrOpenStorageOnILockBytes@CNtfsStorageForPropSetStg@@SAJPEAUILockBytes@@PEAUIStorage@@KPEAPEAGHPEAPEAU3@@Z
?CreatePages@COlePropertySheet@@IEAAXAEBV?$CArray@U_GUID@@AEAU1@@@@Z
?CreatePicture@@YAJPEAPEAUIUnknown@@@Z
?CreateProxy@ComPsClassFactory@@UEAAJPEAUIUnknown@@AEBU_GUID@@PEAPEAUIRpcProxyBuffer@@PEAPEAX@Z
?CreateRainbowPalette@@YAJPEAPEAUHPALETTE__@@@Z
?CreateRemoteClipboardBroker@@YAJXZ
?CreateServer@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@KPEAX@Z
?CreateSharedDragFormats@@YAPEAXPEAUIDataObject@@@Z
?CreateSharedFileMapping@@YAPEAXPEAGKKPEAX1KPEAPEAXPEAH@Z
?CreateStorage@CExpParameterValidate@@SAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CExposedDocFile@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CNtfsStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CNtfsStorageForPropSetStg@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CReadOnlyStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStorage@CSimpStorage@@UEAAJPEBGKKKPEAPEAUIStorage@@@Z
?CreateStream@CDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPSStream@@@Z
?CreateStream@CExpParameterValidate@@SAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CExposedDocFile@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CLimitedWritableStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CNtfsStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CNtfsStorageForPropSetStg@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAVCPubStream@@@Z
?CreateStream@CReadOnlyStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CSimpStorage@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CSimpStorageOpen@@UEAAJPEBGKKKPEAPEAUIStream@@@Z
?CreateStream@CWrappedDocFile@@QEAAJPEBVCDfName@@KKPEAPEAVPSStream@@@Z
?CreateStub@ComPsClassFactory@@UEAAJAEBU_GUID@@PEAUIUnknown@@PEAPEAUIRpcStubBuffer@@@Z
?CreateUnicodeFromAnsi@@YAPEAGPEBD@Z
?CreateUpdateStreamIfNecessary@CNFFMappedStream@@AEAAJXZ
?CreateUserDefinedStream@CPropertySetStorage@@IEAAJPEAUIStorage@@AEAVCPropSetName@@KPEAHPEAPEAUIStream@@@Z
?CreateVtblFromTypeInfo@@YAJPEAUITypeInfo@@0AEBU_GUID@@1HGPEAUtagMethodInfo@@PEAPEAUTYPEINFOVTBL@@@Z
?CreateWrapperClipDataObjectFromFormatsArray@@YAJPEAPEAUIDataObject@@_NPEAK@Z
?DAdvise@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CClipDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDefLink@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDefObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CDragDataObject@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DAdvise@CFont@@UEAAJPEAUtagFORMATETC@@KPEAUIAdviseSink@@PEAK@Z
?DDELibMain@@YAHPEAXGGPEAG@Z
?DFlagsToMode@@YAKK@Z
?DUnadvise@CBrokeredClipDataObject@@UEAAJK@Z
?DUnadvise@CCacheDataImpl@COleCache@@UEAAJK@Z
?DUnadvise@CClipClientDataWrapper@@UEAAJK@Z
?DUnadvise@CClipDataObject@@UEAAJK@Z
?DUnadvise@CDataObjectImpl@CDdeObject@@UEAAJK@Z
?DUnadvise@CDefLink@@UEAAJK@Z
?DUnadvise@CDefObject@@UEAAJK@Z
?DUnadvise@CDragDataObject@@UEAAJK@Z
?DUnadvise@CFont@@UEAAJK@Z
?DdeBindToObject@@YAJPEBGAEBU_GUID@@H1PEAPEAX@Z
?DdeIsRunning@@YAJU_GUID@@PEBGPEAUIBindCtx@@PEAUIMoniker@@3@Z
?DebugServerQueryInterface@CDdeServerCallMgr@@UEAAJPEAPEAX@Z
?DebugServerQueryInterface@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAPEAX@Z
?DebugServerRelease@CDdeServerCallMgr@@UEAAXPEAX@Z
?DebugServerRelease@CRpcStubBufferImpl@CDdeObject@@UEAAXPEAX@Z
?DebuggerFriendlyExceptionFilter@@YAJPEAU_EXCEPTION_POINTERS@@PEAJ@Z
?DecideToUseMergedHive@CEnumClassesOfCategories@@AEAAJPEAUHKEY__@@KPEAH@Z
?DeclareVisibility@CDdeObject@@AEAAJHH@Z
?DecrementExportCount@CRefExportCount@@QEAAKXZ
?Delete@CFileStream@@QEAAXXZ
?Delete@CNtfsStream@@IEAAJXZ
?Delete@CPropertySetStorage@@UEAAJAEBU_GUID@@@Z
?Delete@CUpdateList@@QEAAXPEAVCUpdate@@@Z
?DeleteAdviseInfo@CDefClient@@QEAAXXZ
?DeleteAllItems@?$CArray@VCCacheNode@@@@QEAAXXZ
?DeleteByName@CChildInstanceList@@QEAAXPEBVCDfName@@@Z
?DeleteChannel@CDdeObject@@AEAAXPEAVDDE_CHANNEL@@@Z
?DeleteExtent@CExtentList@@QEAAJG@Z
?DeleteFromItemsList@CDefClient@@QEAAXPEAUHWND__@@@Z
?DeleteItem@?$CArray@VCCacheNode@@@@QEAAHK@Z
?DeleteMappedStream@CPropertyStorage@@EEAAXXZ
?DeleteMultiple@CPropertyBagEx@@UEAAJKQEBQEBGK@Z
?DeleteMultiple@CPropertyStorage@@UEAAJKQEBUtagPROPSPEC@@@Z
?DeletePropertyNames@CPropertyStorage@@UEAAJKQEBK@Z
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?DeleteSelf@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAXXZ
?DeleteStream@CNtfsStream@@CAJPEAPEAX@Z
?DeleteTheFile@CFileStream@@AEAAHPEBG@Z
?DestroyAllChildren@CDirectory@@QEAAJKK@Z
?DestroyChild@CDirectory@@QEAAJKPEBVCDfName@@K@Z
?DestroyDdeSrvrWindow@@YAJPEAUHWND__@@G@Z
?DestroyElement@CExposedDocFile@@UEAAJPEBG@Z
?DestroyElement@CLimitedWritableStorage@@UEAAJPEBG@Z
?DestroyElement@CNtfsStorage@@UEAAJPEBG@Z
?DestroyElement@CNtfsStorageForPropSetStg@@UEAAJPEBG@Z
?DestroyElement@CReadOnlyStorage@@UEAAJPEBG@Z
?DestroyElement@CSimpStorage@@UEAAJPEBG@Z
?DestroyEntry@CPubDocFile@@QEAAJPEBVCDfName@@H@Z
?DestroyEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@H@Z
?DestroyEntry@PDocFile@@QEAAJPEBVCDfName@@H@Z
?DestroyRunningObjectTable@@YAXXZ
?DestroyStreamElement@CNtfsStorage@@QEAAJPEBG@Z
?DestructElements@@YAXPEAPEAVCProperty@@H@Z
?DestructElements@@YAXPEAPEAVCPropertySection@@H@Z
?DetermineDosPathNameType@@YA?AW4PATH_TYPE@@PEBG@Z
?DetermineLongestString@@YAHPEAGAEAPEAG0@Z
?DetermineUnicodePath@CFileMoniker@@QEAAJPEADAEAPEAGAEAG@Z
?DfCharUpper@@YAGGW4CasingBehavior@@@Z
?DfCreateSharedAllocator@@YAJPEAPEAUIMalloc@@H@Z
?DfCreateSimpDocfile@@YAJPEBGKPEAXPEAPEAUIStorage@@@Z
?DfFromLB@@YAJPEAVCPerContext@@PEAUILockBytes@@HKKPEAPEAGPEAPEAVCExposedDocFile@@PEAU_GUID@@@Z
?DfFromName@@YAJPEBGKKPEAPEAGPEAPEAVCExposedDocFile@@PEAKPEAXPEAU_GUID@@@Z
?DfGetTOD@@YAJPEAU_FILETIME@@@Z
?DfOpenSimpDocfile@@YAJPEBGKPEAXPEAPEAUIStorage@@@Z
?DfpNtStatusToHResult@@YAJJ@Z
?DialogProc@DefaultIBindStatusCallback@@EEAA_JPEAUHWND__@@I_K_J@Z
?DibDraw@@YAJPEAXPEAUHDC__@@PEBU_RECTL@@@Z
?DibFillPaletteEntries@@YAXPEAEGPEAUtagLOGPALETTE@@@Z
?DibMakeLogPalette@@YAPEAXPEAEGPEAPEAUtagLOGPALETTE@@@Z
?DibToPres@@YAJPEAXPEAVCPres@@@Z
?DidAlloc@CErrorSmAllocator@@UEAAHPEAX@Z
?DidAlloc@CSmAllocator@@UEAAHPEAX@Z
?DirtyAll@CFat@@QEAAJXZ
?DiscardCache@COleCache@@UEAAJK@Z
?DiscardFont@CFont@@QEAAJHJ@Z
?DiscardHPRES@CEMfObject@@UEAAXXZ
?DiscardHPRES@CGenObject@@UEAAXXZ
?DiscardHPRES@CMfObject@@UEAAXXZ
?DiscardPresentation@CCacheNode@@QEAAJPEAUIStream@@@Z
?Disconnect@CDdeServerCallMgr@@UEAAXXZ
?Disconnect@CProxyManagerImpl@CDdeObject@@UEAAXXZ
?Disconnect@CRpcStubBufferImpl@CDdeObject@@UEAAXXZ
?DisconnectObject@CClassMoniker@@UEAAJK@Z
?DisconnectObject@CDocfileUnmarshalFactory@@UEAAJK@Z
?DisconnectObject@CExposedDocFile@@UEAAJK@Z
?DisconnectObject@CExposedStream@@UEAAJK@Z
?DisconnectObject@CMarshalImplPStream@@UEAAJK@Z
?DisconnectObject@CPicture@@UEAAJK@Z
?DisconnectObject@CPointerMoniker@@UEAAJK@Z
?DisconnectObject@CSimpStorage@@UEAAJK@Z
?DisconnectObject@CSimpStream@@UEAAJK@Z
?DisconnectObject@FtmBase@WRL@Microsoft@@UEAAJK@Z
?DispatchCall@@YAJPEAUtagDISPATCHDATA@@@Z
?DllGetCommitSig@@YAJPEAUILockBytes@@PEAK@Z
?DllGetScratchMultiStream@@YAJPEAPEAVCMStream@@HPEAPEAUILockBytes@@PEAV1@@Z
?DllIsMultiStream@@YAJPEAUILockBytes@@@Z
?DllMultiStreamFromStream@@YAJPEAUIMalloc@@PEAPEAVCMStream@@PEAPEAUILockBytes@@KK@Z
?DllReleaseMultiStream@@YAXPEAVCMStream@@@Z
?DllSetCommitSig@@YAJPEAUILockBytes@@K@Z
?DoContextSensitiveHelp@CFrameFilter@@QEAAHXZ
?DoConversionIfSpecialClass@CDefObject@@AEAAJPEAUIStorage@@@Z
?DoInitNew@CDefClient@@QEAAJXZ
?DoModal@COlePropertySheet@@QEAAHXZ
?DoOle20Advise@CDefClient@@QEAAJW4OLE_NOTIFICATION@@G@Z
?DoOle20UnAdviseAll@CDefClient@@QEAAJXZ
?DoVerb@CDefLink@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoVerb@CDefObject@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoVerb@COleObjectImpl@CDdeObject@@UEAAJJPEAUtagMSG@@PEAUIOleClientSite@@JPEAUHWND__@@PEBUtagRECT@@@Z
?DoWeShareMemory@CallFrame@@QEAAHXZ
?DocDispatchIncomingCall@@YAJPEAUtagDOCDISPATCHDATA@@@Z
?DocDoVerbItem@CDefClient@@QEAAJPEADGHH@Z
?DocExecute@CDefClient@@QEAAJPEAX@Z
?DocHandleIncomingCall@@YAJPEAUtagDOCDISPATCHDATA@@@Z
?DocShowItem@CDefClient@@QEAAJPEADH@Z
?DocumentLevelConnect@CDdeObject@@AEAAJPEAUIBindCtx@@@Z
?Done@CleanupStack@@QEAAXJ@Z
?DragEnter@CDropTarget@@UEAAJPEAUIDataObject@@KU_POINTL@@PEAK@Z
?DragLeave@CDropTarget@@UEAAJXZ
?DragOver@CDropTarget@@UEAAJKU_POINTL@@PEAK@Z
?Draw@CCacheNode@@QEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAUtagDVTARGETDEVICE@@PEAUHDC__@@2PEBU_RECTL@@3P6AH_K@Z4@Z
?Draw@CEMfObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CGenObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Draw@CMfObject@@UEAAJPEAXPEAUHDC__@@1PEBU_RECTL@@2P6AH_K@Z3@Z
?Drop@CDropTarget@@UEAAJPEAUIDataObject@@KU_POINTL@@PEAK@Z
?DuCacheDelegate@@YAPEAXPEAPEAUIUnknown@@AEBU_GUID@@PEAPEAXPEAU1@@Z
?DuLockContainer@@YAXPEAUIOleClientSite@@HPEAH@Z
?DuSetClientSite@@YAJHPEAUIOleClientSite@@PEAPEAU1@PEAH@Z
?DumpList@CDeltaList@@AEAAJXZ
?DupFileHandleToOthers@CFileStream@@AEAAJXZ
?DupWCHARString@@YAJPEBGAEAPEAGAEAG@Z
?DuplicateAtom@@YAGG@Z
?DuplicateBitmap@@YAPEAUHBITMAP__@@PEAU1@@Z
?DuplicateMetaFile@@YAPEAXPEAX@Z
?DuplicatePropertyName@CPropertySetStream@@QEBAPEAGPEBGPEAJ@Z
?DwULIToAStr@@YAK_KPEADH@Z
?DwULIToWStr@@YAK_KPEAGH@Z
?DwordAlignPointer@SerializedPropertyReader@@QEAAJXZ
?DynLoad@@YAJPEADPEAPEAX@Z
?DynamicCastToSelf@CBrokeredClipDataObject@@SA?AV?$ComPtr@VCBrokeredClipDataObject@@@WRL@Microsoft@@PEAUIDataObject@@@Z
?EMfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEBUtagENHMETARECORD@@H_J@Z
?EatDotDots@@YAHPEAPEBGPEAG@Z
?Empty@CCacheStream@@UEAAJXZ
?Empty@CDeltaList@@QEAAXXZ
?Empty@CFat@@QEAAXXZ
?Empty@CMStream@@QEAAXXZ
?Empty@CPagedVector@@QEAAXXZ
?Empty@CStreamCache@@QEAAXXZ
?Empty@CUpdateList@@QEAAXXZ
?EmptyCache@CPubDocFile@@QEAAXXZ
?EmptyCache@CUpdateList@@QEAAXXZ
?EmptyCache@CWrappedDocFile@@QEAAXXZ
?EmptyCache@PSStream@@QEAAXXZ
?EmptyCache@PTSetMember@@QEAAXXZ
?EmptyRegion@CStreamCache@@QEAAJKK@Z
?EnableTracking@CDefLink@@AEAAJPEAUIMoniker@@K@Z
?EnableTracking@CFileMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnableTracking@CTrackingCompositeMoniker@@UEAAJPEAUIMoniker@@K@Z
?EnableTracking@CTrackingFileMoniker@@UEAAJPEAUIMoniker@@K@Z
?Encode@?$CRtlSmartUcsEncoderTraitsBase@V?$CRtlSmartUcsEncoderTraits@U_LUNICODE_STRING@@@@@@SAJQEBK_KPEAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?EndCommit@CDeltaList@@QEAAXPEAV1@K@Z
?EndCommit@CTransactedStream@@QEAAXK@Z
?EndCommit@PTSetMember@@QEAAXK@Z
?EndCommitFromChild@CDocFile@@QEAAXKPEAVCWrappedDocFile@@@Z
?EndCommitFromChild@CTransactedStream@@QEAAXKPEAV1@@Z
?EndCommitFromChild@CWrappedDocFile@@QEAAXKPEAV1@@Z
?EndCopyOnWrite@CMStream@@QEAAJKK@Z
?EndUsingLatestStream@CNFFMappedStream@@AEAAXXZ
?EndUsingUpdateStream@CNFFMappedStream@@AEAAXXZ
?EnsureCLSIDIsRegistered@@YAXAEBU_GUID@@PEAUIStorage@@@Z
?EnsureSize@CRgPv@@QEAAJI@Z
?EnsureTlsAllocated@@YAJXZ
?Enum@CAntiMoniker@@EEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CBaseMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CClassMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CCompositeMoniker@@EEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CFileMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CItemMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CObjrefMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPackagerMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPointerMoniker@@UEAAJHPEAPEAUIEnumMoniker@@@Z
?Enum@CPropertyBagEx@@UEAAJPEBGKPEAPEAUIEnumSTATPROPBAG@@@Z
?Enum@CPropertySetStorage@@UEAAJPEAPEAUIEnumSTATPROPSETSTG@@@Z
?Enum@CPropertyStorage@@UEAAJPEAPEAUIEnumSTATPROPSTG@@@Z
?EnumAdvise@CDAHolder@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefLink@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@CDefObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@COAHolder@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAdvise@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumAndAdvise@CDataAdviseCache@@QEAAJPEAUIDataObject@@H@Z
?EnumAndRemove@CHashTable@@UEAAHP6AHPEAUSHashChain@@PEAX@Z1PEAKPEAPEAX@Z
?EnumCache@COleCache@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumCategories@CComCat@@UEAAJKPEAPEAUIEnumCATEGORYINFO@@@Z
?EnumCategories@CsCatInfo@@UEAAJKPEAPEAUIEnumCATEGORYINFO@@@Z
?EnumCategoriesOfClass@CComCat@@CAJAEBU_GUID@@PEBGHPEAPEAUIEnumGUID@@@Z
?EnumClassesOfCategories@CComCat@@UEAAJKQEBU_GUID@@K0PEAPEAUIEnumGUID@@@Z
?EnumClassesOfCategories@CsCatInfo@@UEAAJKQEBU_GUID@@K0PEAPEAUIEnumGUID@@@Z
?EnumConnectionPoints@CAsyncConnectionContainer@@UEAAJPEAPEAUIEnumConnectionPoints@@@Z
?EnumConnectionPoints@CFont@@UEAAJPEAPEAUIEnumConnectionPoints@@@Z
?EnumConnectionPoints@CPicture@@UEAAJPEAPEAUIEnumConnectionPoints@@@Z
?EnumConnections@CAsyncConnection@@UEAAJPEAPEAUIEnumConnections@@@Z
?EnumConnections@CFontEventsCP@@UEAAJPEAPEAUIEnumConnections@@@Z
?EnumConnections@CNotifyCP@@UEAAJPEAPEAUIEnumConnections@@@Z
?EnumDAdvise@CBrokeredClipDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CCacheDataImpl@COleCache@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CClipClientDataWrapper@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CClipDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDataObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefLink@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDefObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CDragDataObject@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumDAdvise@CFont@@UEAAJPEAPEAUIEnumSTATDATA@@@Z
?EnumElements@CExpParameterValidate@@SAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CExposedDocFile@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CLimitedWritableStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CNtfsStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CNtfsStorageForPropSetStg@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CReadOnlyStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CSimpStorage@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumElements@CSimpStorageOpen@@UEAAJKPEAXKPEAPEAUIEnumSTATSTG@@@Z
?EnumFormatEtc@CBrokeredClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CCacheDataImpl@COleCache@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CClipClientDataWrapper@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CClipDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDataObjectImpl@CDdeObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefLink@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDefObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CDragDataObject@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumFormatEtc@CFont@@UEAAJKPEAPEAUIEnumFORMATETC@@@Z
?EnumImplCategoriesOfClass@CComCat@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumImplCategoriesOfClass@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumNtStreams@@YAJPEAXPEAPEAU_FILE_STREAM_INFORMATION@@PEAKH@Z
?EnumObjectParam@CBindCtx@@UEAAJPEAPEAUIEnumString@@@Z
?EnumObjects@COleItemContainerImpl@CDdeObject@@UEAAJKPEAPEAUIEnumUnknown@@@Z
?EnumReqCategoriesOfClass@CComCat@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumReqCategoriesOfClass@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAUIEnumGUID@@@Z
?EnumRunning@CRunningObjectTable@@UEAAJPEAPEAUIEnumMoniker@@@Z
?EnumVerbs@CDefLink@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumVerbs@CDefObject@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumVerbs@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIEnumOLEVERB@@@Z
?EnumeratePropids@CPropertySetStream@@QEAAEPEAK00PEAJ@Z
?Erase@CDdeConnectionTable@@QEAAJXZ
?EstablishIID@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?ExcludeEntries@PDocFile@@SAJPEAV1@PEAPEAG@Z
?Execute@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEAXHHH@Z
?ExpandUNCName@@YAJPEAGPEAPEAG0@Z
?Extend@CFat@@AEAAJKK@Z
?ExtendMapView@CFileStream@@AEAAJK@Z
?ExtractNameAndIndex@@YAHKPEAG0IPEAI@Z
?ExtractUnicodeString@@YAJPEADGAEAPEAGAEAG@Z
?FContinue@CContinue@@UEAAJXZ
?FDisableAssociatedInterceptor@@YAHUHREG@@PEBG@Z
?FIconFileFromClass@@YAHAEBU_GUID@@PEAGIPEAI@Z
?FIndirect@CallFrame@@QEBAHEPEBEH@Z
?FInit@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@UEAAHXZ
?FInit@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@UEAAHXZ
?FInit@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@UEAAHXZ
?FInit@XLOCK@@QEAAHXZ
?FIsAVariantType@@YAHG@Z
?FScrPalette@SysInfo@@QEAAHXZ
?FailIfSectorUnavailable@@YAJKPEAUILockBytes@@KAEA_KAEAK@Z
?FileBindToObject@@YAJPEAUIMoniker@@PEAGAEBU_GUID@@PEAUIBindCtx@@PEAUtagBIND_OPTS2@@02PEAPEAX@Z
?FillAppend@CFileStream@@UEAAJPEBXKPEAK@Z
?FillAppend@CFillLockBytes@@UEAAJPEBXKPEAK@Z
?FillAt@CFileStream@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?FillAt@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?FindAlreadyOpenStream@CNtfsStorage@@AEAAHPEBGPEAPEAVCNtfsStream@@@Z
?FindBase@CUpdateList@@SAPEAVCUpdate@@PEAV2@PEAPEBVCDfName@@@Z
?FindBlock@CSmAllocator@@AEAAPEAVCBlockHeader@@_KPEAPEAV2@@Z
?FindClient@@YAPEAXPEAX0H@Z
?FindConnectionPoint@CAsyncConnectionContainer@@UEAAJAEBU_GUID@@PEAPEAUIConnectionPoint@@@Z
?FindConnectionPoint@CFont@@UEAAJAEBU_GUID@@PEAPEAUIConnectionPoint@@@Z
?FindConnectionPoint@CPicture@@UEAAJAEBU_GUID@@PEAPEAUIConnectionPoint@@@Z
?FindDocObj@CDDEServer@@QEAAPEAVCDefClient@@PEAD@Z
?FindEntry@CDirectory@@AEAAJKPEBVCDfName@@W4DIRENTRYOP@@PEAUSEntryBuffer@@@Z
?FindExisting@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAJAEBU_GUID@@PEAPEAUTYPEINFOVTBL@@@Z
?FindExisting@MD_INTERFACE_CACHE@@QEAAJAEBU_GUID@@PEAPEAUMD_INTERFACE@@@Z
?FindExt@@YAPEBGPEBG@Z
?FindExtent@CExtentList@@QEAAJGAEAPEFAU_MONIKEREXTENT@@@Z
?FindGreaterEntry@CDirectory@@QEAAJKPEBVCDfName@@PEAK@Z
?FindGreaterEntry@CDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?FindGreaterEntry@CPubDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@H@Z
?FindGreaterEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?FindGreaterEntry@PDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?FindItem@CDefClient@@AEAAJPEAGPEAPEAV1@@Z
?FindLast@CFat@@QEAAJPEAK@Z
?FindMarshal@CMarshalList@@QEBAPEAV1@KPEAX@Z
?FindMarshalingContextAttribute@@YA_N_KPEBUMarshalingContextAttributeValue@@W4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?FindMatchingFont@CFont@@QEAAJPEAH@Z
?FindMaxSect@CFat@@QEAAJPEAK@Z
?FindMaximalFileMoniker@@YAJPEAGKPEAKPEAPEAUIMoniker@@@Z
?FindName@CTSSet@@QEAAPEAVPTSetMember@@PEBVCDfName@@K@Z
?FindObjectFormat@COleCache@@AEAAXPEAUIStorage@@@Z
?FindOffset@CDeltaList@@AEAAJPEAKKPEAT_ULARGE_INTEGER@@H@Z
?FindPage@CMSFPageTable@@QEAAJPEAVCPagedVector@@KKPEAPEAVCMSFPage@@@Z
?FindStreamInFSI@@YAPEBU_FILE_STREAM_INFORMATION@@PEBU1@PEBG@Z
?FindSwapPage@CMSFPageTable@@AEAAPEAVCMSFPage@@XZ
?FindThreadOrFree@XSLOCK@@AEAAPEAUOWNERENTRY@1@V?$OPAQUE_HANDLE@$00@@@Z
?FindUNCEndServer@@YAXPEBGPEAG@Z
?First@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?FixWriteBug@@YAJPEAXPEAPEAX@Z
?Fixup@CDIFat@@QEAAJPEAVCMStream@@@Z
?Flush@CExposedStream@@UEAAXPEAJ@Z
?Flush@CFileStream@@UEAAJXZ
?Flush@CFillLockBytes@@UEAAJXZ
?Flush@CMSFPageTable@@QEAAJXZ
?Flush@CMStream@@QEAAJH@Z
?Flush@CMemBytes@@UEAAJXZ
?Flush@CNFFMappedStream@@UEAAXPEAJ@Z
?Flush@CNtfsStream@@UEAAJXZ
?Flush@CPubMappedStream@@QEAAXPEAJ@Z
?Flush@CSSMappedStream@@UEAAXPEAJ@Z
?Flush@CStmBufWrite@@QEAAJXZ
?FlushBufferedData@CPubDocFile@@QEAAJH@Z
?FlushCache@CFileStream@@UEAAJXZ
?FlushClipboard@CClipboardBroker@@UEAAJXZ
?FlushClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJXZ
?FlushHeader@CMStream@@QEAAJG@Z
?FlushPage@CMSFPageTable@@QEAAJPEAVCMSFPage@@@Z
?FlushTextViaGetData@@YAXPEAUHWND__@@PEAUFORMATETCDATAARRAY@@@Z
?FlushViaGetData@@YAXPEAUHWND__@@PEAUFORMATETCDATAARRAY@@@Z
?FlushViaUser32Render@@YAXPEAUHWND__@@PEAUFORMATETCDATAARRAY@@@Z
?For@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?ForOle32@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?ForTypeInfo@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@PEAUITypeInfo@@0PEAPEAX@Z
?FrEq@@YAHPEAUFR@@0@Z
?Free@BstrDestroyer@DeserializeHelper@@EEAAXPEAX@Z
?Free@CCoTaskAllocator@@UEAAXPEAX@Z
?Free@CErrorSmAllocator@@UEAAXPEAX@Z
?Free@CSmAllocator@@UEAAXPEAX@Z
?Free@CallFrame@@QEAAXPEAX@Z
?Free@CallFrame@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_CLIENT_FRAME@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@DISPATCH_SERVER_FRAME@@UEAAJPEAUICallFrame@@PEAUICallFrameWalker@@1K1K@Z
?Free@SafeArrayDestroyer@DeserializeHelper@@EEAAXPEAX@Z
?FreeBuffer@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeBuffer@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@@Z
?FreeEmbeddedPointers@CallFrame@@QEAAXPEAEPEBE@Z
?FreeEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAEPEBE@Z
?FreeGDIdata@@YAHPEAXG@Z
?FreeLibraryWithLogging@@YAXW4LoadOrFreeWhy@@PEAUHINSTANCE__@@PEBG@Z
?FreeParam@CallFrame@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_CLIENT_FRAME@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreeParam@DISPATCH_SERVER_FRAME@@UEAAJKKPEAUICallFrameWalker@@K@Z
?FreePokeData@@YAXPEAX@Z
?FreeRecord@OAUTIL@@AEAAJPEAXPEAUIRecordInfo@@H@Z
?FreeRecord@OAUTIL@@AEAAJPEAXPEAUITypeInfo@@H@Z
?FreeRecordField@OAUTIL@@AEAAJPEAEPEAUtagTYPEDESC@@PEAUITypeInfo@@H@Z
?FreeResources@CClipDataObject@@AEAAXW4FreeResourcesFlags@@@Z
?FreeSrvrMem@CDDEServer@@AEAAJXZ
?FreeStream@CDeltaList@@AEAAXKK@Z
?FreeTable@CPagedVector@@QEAAXK@Z
?FreeTypeInfoCache@@YAXXZ
?FreeWorker@CallFrame@@QEAAXPEAEPEBEH@Z
?Freeze@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAK@Z
?GenerateDisplayName@CFileMoniker@@QEAAJKPEAG@Z
?GenerateRandomNumber@CRandomNumberGenerator@@QEAAJPEAEK@Z
?GenericCall@LEGACY_INTERCEPTOR@@QEAAJKQEAXZZ
?GenericObjectToIStorage@@YAJAEBVCGenericObject@@PEAUIStorage@@PEBUtagDVTARGETDEVICE@@@Z
?Get@CProperty@@QEAAPEAXPEAK@Z
?GetAbsMkFromRel@CDefLink@@AEAAJPEAPEAUIMoniker@@0@Z
?GetActiveObject@CFrameFilter@@UEAAJPEAPEAUIOleInPlaceActiveObject@@@Z
?GetAdvise@CCacheViewImpl@COleCache@@UEAAJPEAK0PEAPEAUIAdviseSink@@@Z
?GetAllTimes@CDirectory@@QEAAJKPEAU_FILETIME@@00@Z
?GetAllTimes@CMStream@@QEAAJKPEAU_FILETIME@@00@Z
?GetAndTranslateOle1@CClipDataObject@@AEAAJIPEAPEAG00PEAPEAD@Z
?GetApartmentClass@@YAJAEBU_GUID@@0PEAPEAX@Z
?GetAssocAt@?$CMap@PEAGAEAPEAGKAEAK@@IEBAPEAUCAssoc@1@AEAPEAGAEAI@Z
?GetAssocAt@CMapKeyToValue@@AEBAPEAUCAssoc@1@PEAXIAEAI@Z
?GetAssocKeyPtr@CMapKeyToValue@@AEBAXPEAUCAssoc@1@PEAPEAXPEAI@Z
?GetBaseInterfaceIID@@YAJPEAUITypeInfo@@PEAU_GUID@@PEAPEAU1@@Z
?GetBindInfo@CBindStatusCallback@@UEAAJPEAKPEAU_tagBINDINFO@@@Z
?GetBindInfo@DefaultIBindStatusCallback@@UEAAJPEAKPEAU_tagBINDINFO@@@Z
?GetBindOptions@CBindCtx@@UEAAJPEAUtagBIND_OPTS@@@Z
?GetBitmapData@CGenObject@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetBits@CPagedVector@@QEAAPEAUCVectBits@@K@Z
?GetBoundSource@CDefLink@@UEAAJPEAPEAUIUnknown@@@Z
?GetBuffer2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@@YAJKKPEAPEAEPEAK@Z
?GetBuffer@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBuffer@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@@Z
?GetBufferSize@CUserMarshalInfo@@QEAA_KXZ
?GetCallContext@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallContext@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@AEBU_GUID@@PEAPEAX@Z
?GetCallFrame@CallFrame@@UEAAPEAV1@XZ
?GetCallerPackageName@CClipboardBroker@@AEAAJPEA_NAEAY0IA@GPEAK@Z
?GetCanonicalFormatEtc@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CClipDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefLink@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDefObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CDragDataObject@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCanonicalFormatEtc@CFont@@UEAAJPEAUtagFORMATETC@@0@Z
?GetCategoryDesc@CComCat@@SAJPEAUHKEY__@@KPEAPEAGPEAK@Z
?GetCategoryDesc@CComCat@@UEAAJAEBU_GUID@@KPEAPEAG@Z
?GetCategoryDesc@CsCatInfo@@UEAAJAEBU_GUID@@KPEAPEAG@Z
?GetClass@PDocFile@@QEAAJPEAU_GUID@@@Z
?GetClassBits@CDefObject@@AEAAJPEAU_GUID@@@Z
?GetClassID@CAntiMoniker@@EEAAJPEAU_GUID@@@Z
?GetClassID@CClassMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CCompositeMoniker@@EEAAJPEAU_GUID@@@Z
?GetClassID@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetClassID@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFileMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFont@@UEAAJPEAU_GUID@@@Z
?GetClassID@CFont@@W7EAAJPEAU_GUID@@@Z
?GetClassID@CItemMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CLUAMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CObjrefMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@COleCache@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPackagerMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPersistStgImpl@CDdeObject@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPicture@@UEAAJPEAU_GUID@@@Z
?GetClassID@CPointerMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassID@CSessionMoniker@@UEAAJPEAU_GUID@@@Z
?GetClassObject@CLUAMoniker@@UEAAJAEBU_GUID@@KK0PEAPEAX@Z
?GetClassObject@CSessionMoniker@@UEAAJAEBU_GUID@@KK0PEAPEAX@Z
?GetClientSite@CDefLink@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientSite@CDefObject@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClientSite@COleObjectImpl@CDdeObject@@UEAAJPEAPEAUIOleClientSite@@@Z
?GetClipDataObjectFromTLS@@YAXPEAPEAUIDataObject@@@Z
?GetClipboard@CClipboardBroker@@UEAAJPEAPEAUIDataObject@@PEAK@Z
?GetClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAPEAUIDataObject@@PEAK@Z
?GetClipboardData@CDefLink@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardData@CDefObject@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardData@COleObjectImpl@CDdeObject@@UEAAJKPEAPEAUIDataObject@@@Z
?GetClipboardOwnerWindowProperty@@YAJPEAUHWND__@@PEAPEBGPEAK@Z
?GetClsid@CProcessExtensionTbl@@QEAAJPEBGPEAU_GUID@@@Z
?GetColorBitmap@SysInfo@@QEAAJPEAPEAUHBITMAP__@@@Z
?GetColorSet@CCacheNode@@QEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CCacheViewImpl@COleCache@@UEAAJKJPEAXPEAUtagDVTARGETDEVICE@@PEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CEMfObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CGenObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetColorSet@CMfObject@@UEAAJPEAXPEAUHDC__@@PEAPEAUtagLOGPALETTE@@@Z
?GetCommitInfo@CWrappedDocFile@@QEAAXPEA_K0@Z
?GetCommitSize@CPubDocFile@@IEAAJPEA_K@Z
?GetComparisonData@CAntiMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CBaseMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CClassMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CCompositeMoniker@@EEAAJPEAEKPEAK@Z
?GetComparisonData@CFileMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CItemMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CLUAMoniker@@UEAAJPEAEKPEAK@Z
?GetComparisonData@CSessionMoniker@@UEAAJPEAEKPEAK@Z
?GetConnectionInterface@CAsyncConnection@@UEAAJPEAU_GUID@@@Z
?GetConnectionInterface@CFontEventsCP@@UEAAJPEAU_GUID@@@Z
?GetConnectionInterface@CNotifyCP@@UEAAJPEAU_GUID@@@Z
?GetConnectionPointContainer@CAsyncConnection@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
?GetConnectionPointContainer@CFontEventsCP@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
?GetConnectionPointContainer@CNotifyCP@@UEAAJPEAPEAUIConnectionPointContainer@@@Z
?GetConnectionStatus@CProxyManagerImpl@CDdeObject@@UEAAJXZ
?GetContainer@COleClientSiteImpl@CDefClient@@UEAAJPEAPEAUIOleContainer@@@Z
?GetControlKeysState@@YAGH@Z
?GetControlKeysStateOfParam@@YAG_K@Z
?GetCopiedFormatEtcDataArraySize@@YAJPEAUFORMATETCDATAARRAY@@PEA_K@Z
?GetCsCatInfo@CComCat@@AEAAJXZ
?GetCurrentApartmentId@@YAKXZ
?GetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefClient@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CFont@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetData@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataDelegate@CDefLink@@QEAAPEAUIDataObject@@XZ
?GetDataDelegate@CDefObject@@QEAAPEAUIDataObject@@XZ
?GetDataFat@CDeltaList@@QEAAPEAVCFat@@XZ
?GetDataFromDescriptor@@YAJPEAUIDataObject@@PEAU_GUID@@IW4tagGETCLSIDFLAGS@@PEAPEAGPEAK@Z
?GetDataFromStorage@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@PEAPEAUIStorage@@@Z
?GetDataFromStream@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@PEAPEAUIStream@@@Z
?GetDataHere@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CFont@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataHere@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?GetDataILB@CDeltaList@@QEAAPEAUILockBytes@@XZ
?GetDataSectorShift@CDeltaList@@QEAAGXZ
?GetDataSectorSize@CDeltaList@@QEAAGXZ
?GetDefaultCursorObject@CDragDefaultCursors@@SAPEAV1@XZ
?GetDefaultPalette@SysInfo@@QEAAJPEAPEAUHPALETTE__@@@Z
?GetDeltaList@PSStream@@QEAAPEAVCDeltaList@@XZ
?GetDestCtx@CDdeServerCallMgr@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@CDdeServerCallMgr@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@DDE_CHANNEL@@UEAAJPEAKPEAPEAX@Z
?GetDestCtx@DDE_CHANNEL@@W7EAAJPEAKPEAPEAX@Z
?GetDestCtx@MarshallingChannel@@UEAAJPEAKPEAPEAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDestCtxEx@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAKPEAPEAX@Z
?GetDirEntry@CDirectory@@QEAAJKKPEAPEAVCDirEntry@@@Z
?GetDisableAll@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisableDispatch@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisableDispatchForOle32@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisableTypelibs@DISABLED_FEATURES@@SAJPEAH@Z
?GetDisplayName@CAntiMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CObjrefMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayName@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAPEAG@Z
?GetDisplayNameLength@CFileMoniker@@QEAAJPEAK@Z
?GetDocFile@CDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPDocFile@@@Z
?GetDocFile@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAV1@@Z
?GetDocFile@CWrappedDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPDocFile@@@Z
?GetDocFile@PDocFile@@QEAAJPEBVCDfName@@KPEAPEAV1@@Z
?GetDriveLetter@@YAGPEBG@Z
?GetDropTarget@CDragOperation@@AEAAJPEAUHWND__@@0@Z
?GetESect@CFat@@QEAAJKKPEAK@Z
?GetESect@CMStream@@QEAAJKKPEAK@Z
?GetESect@CStreamCache@@QEAAJKPEAK@Z
?GetEmbedSourceFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetEmbeddedObjectFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetEntry@CStgHandle@@QEAAJPEBVCDfName@@KPEAVCHandle@@@Z
?GetEntryIndex@CInternalPageAllocator@@QEAAJPEAUtagPageEntry@@@Z
?GetEntryPtr@CInternalPageAllocator@@QEAAPEAUtagPageEntry@@J@Z
?GetExtent@CCacheNode@@QEAAJKPEAUtagSIZE@@@Z
?GetExtent@CCacheViewImpl@COleCache@@UEAAJKJPEAUtagDVTARGETDEVICE@@PEAUtagSIZE@@@Z
?GetExtent@CDefLink@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CDefObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CEMfObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CGenObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@CMfObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExtent@COleCache@@QEAAJKPEAUtagSIZE@@@Z
?GetExtent@COleObjectImpl@CDdeObject@@UEAAJKPEAUtagSIZE@@@Z
?GetExternalReference@CClipboardBroker@@UEAAJPEAPEAUIClipboardBroker@@@Z
?GetExternalReference@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAPEAUIClipboardBroker@@@Z
?GetFailureInfo@CFileStream@@UEAAJPEAK0@Z
?GetFailureInfo@CFillLockBytes@@UEAAJPEAK0@Z
?GetFatSect@CDIFat@@QEAAJKPEAK@Z
?GetFilePath@CNtfsStorage@@AEAAJPEAPEAG@Z
?GetFilePointer@CFileStream@@AEAA_KXZ
?GetFormatEtcDataArray@CClipDataObject@@AEAAJXZ
?GetFormatEtcDataArray@CDragDataObject@@AEAAJXZ
?GetFrame@CallFrame@@QEAAPEAV1@AEAPEAV1@PEAX@Z
?GetFree@CDirectory@@AEAAJPEAK@Z
?GetFree@CFat@@QEAAJKPEAKH@Z
?GetFreeChunk@CStreamChunkList@@QEAAPEAUCStreamChunk@@PEAJ@Z
?GetFreeContig@CFat@@QEAAJKPEAUSSegment@@KPEAK@Z
?GetFreePage@CMSFPageTable@@QEAAJPEAPEAVCMSFPage@@@Z
?GetHdc@SysInfo@@QEAAJPEAPEAUHDC__@@@Z
?GetHelpDirW@CPageHolder@@IEAAHPEAGJ@Z
?GetHelper@CallFrame@@QEBA?AUOAUTIL@@XZ
?GetID@CPropertySection@@QEAAHPEBGPEAK@Z
?GetIDsOfNames@CFont@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIDsOfNames@CPicture@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIDsOfNames@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAGIKPEAJ@Z
?GetIID@Interceptor@@EEAAJPEAU_GUID@@@Z
?GetIID@Interceptor@@EEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIID@LEGACY_INTERCEPTOR@@UEAAJPEAU_GUID@@@Z
?GetIID@LEGACY_INTERCEPTOR@@UEAAJPEAU_GUID@@PEAHPEAKPEAPEAG@Z
?GetIIDAndMethod@CallFrame@@UEAAJPEAU_GUID@@PEAK@Z
?GetIIDAndMethod@DISPATCH_FRAME@@UEAAJPEAU_GUID@@PEAK@Z
?GetILB@CMStream@@QEBAPEAUILockBytes@@XZ
?GetInfo@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInfo@LEGACY_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0001@@@Z
?GetInnerDataObject@CClipClientDataWrapper@@UEAAJPEAPEAUIDataObject@@@Z
?GetInnerDataObject@CClipDataObject@@UEAAJPEAPEAUIDataObject@@@Z
?GetInstance@ClipboardBrokerFactory@@SAJPEAPEAUIUnknown@@@Z
?GetInterfaceFromWindowProp@CInterfaceFromWindowProp@@UEAAJPEAUHWND__@@AEBU_GUID@@PEAPEAUIUnknown@@PEAG@Z
?GetInterfaceHelperClsid@@YAJAEBU_GUID@@PEAU1@PEAH@Z
?GetInternalInterceptor@LEGACY_INTERCEPTOR@@QEAAJAEBU_GUID@@PEAPEAUICallInterceptor@@@Z
?GetInternalSourceMarshalingContextAttribute@@YAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetItem@?$CArray@VCCacheNode@@@@QEAAPEAVCCacheNode@@K@Z
?GetItem@?$CArray@VCFormatEtc@@@@QEAAPEAVCFormatEtc@@K@Z
?GetItem@?$CArray@VCStatData@@@@QEAAPEAVCStatData@@K@Z
?GetKeyForReading@CComCat@@CAJAEBU_GUID@@PEAPEAUHKEY__@@@Z
?GetLCID@CPropertyBagEx@@AEAAJXZ
?GetLinkSourceFromOle1@CClipDataObject@@AEAAJPEAUtagSTGMEDIUM@@@Z
?GetLocalRunningObjectForDde@@YAJPEAGPEAPEAUIUnknown@@@Z
?GetLocaleID@CPageHolder@@UEAAJPEAK@Z
?GetLocksSupported@CFileStream@@UEAAJPEAK@Z
?GetLogPixelsX@SysInfo@@QEAAHXZ
?GetLogPixelsY@SysInfo@@QEAAHXZ
?GetMap@CDeltaList@@QEAAJKKPEAK@Z
?GetMapping@CProxyManagerImpl@CDdeObject@@UEAAPEAXXZ
?GetMarshalSizeMax@CClassMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CDocfileUnmarshalFactory@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CExposedDocFile@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CExposedStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CPicture@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CPointerMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CSimpStorage@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CSimpStream@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalSizeMax@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@DISPATCH_CLIENT_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@DISPATCH_SERVER_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAK@Z
?GetMarshalSizeMax@FtmBase@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAXK1KPEAK@Z
?GetMarshalingContextAttribute@CAbstractStream@@MEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CMarshalingStreamOnUserMarshalCallback@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CReadInterfaceDataFromInternalSourceMarshalingStream@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CReadInterfaceDataWithSourceAttributesMarshalingStream@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshalingContextAttribute@CWriteInterfaceDataMarshalingStream@@UEAAJW4CO_MARSHALING_CONTEXT_ATTRIBUTES@@PEA_K@Z
?GetMarshallerFor@MarshallingChannel@@UEAAJAEBU_GUID@@PEAXPEAPEAUIMarshalSomeone@@@Z
?GetMember@CPicture@@QEAAJKPEAUtagSTGMEDIUM@@@Z
?GetMemoryFrame@LEGACY_FRAME@@QEAAJXZ
?GetMemoryFrameFor@LEGACY_INTERCEPTOR@@QEAAJPEAPEAUICallFrame@@PEAULEGACY_FRAME@@@Z
?GetMethodInfo@Interceptor@@EEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMethodInfo@LEGACY_INTERCEPTOR@@UEAAJKPEAU__MIDL_ICallFrame_0001@@PEAPEAG@Z
?GetMiniStream@CMStream@@QEBAPEAVCDirectStream@@XZ
?GetMiscStatus@CDefLink@@UEAAJKPEAK@Z
?GetMiscStatus@CDefObject@@UEAAJKPEAK@Z
?GetMiscStatus@COleObjectImpl@CDdeObject@@UEAAJKPEAK@Z
?GetMoniker@CDefLink@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@CDefObject@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@COleClientSiteImpl@CDefClient@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMoniker@COleObjectImpl@CDdeObject@@UEAAJKKPEAPEAUIMoniker@@@Z
?GetMonikerCompareBuffer@@YAJPEAUIMoniker@@PEAVCTmpMkEqBuf@@PEAU_FILETIME@@PEAPEAUtagInterfaceData@@@Z
?GetMonikerType@@YAKPEAUIMoniker@@@Z
?GetMutexName@CGlobalContext@@QEAAJPEAG@Z
?GetName@CFileStream@@QEAAJPEAPEAG@Z
?GetNames@CallFrame@@UEAAJPEAPEAG0@Z
?GetNames@LEGACY_FRAME@@UEAAJPEAPEAG0@Z
?GetNative@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetNdrVersion@Interceptor@@EEAAJPEAK@Z
?GetNdrVersion@LEGACY_INTERCEPTOR@@UEAAJPEAK@Z
?GetNewDeltaArray@CDeltaList@@AEAAPEAVCBasedDeltaBlockPtr@@K@Z
?GetNewPage@CMSFPageTable@@AEAAPEAVCMSFPage@@XZ
?GetNext@?$CArray@VCCacheNode@@@@QEAAPEAVCCacheNode@@AEAK@Z
?GetNext@?$CArray@VCFormatEtc@@@@QEAAPEAVCFormatEtc@@AEAK@Z
?GetNext@?$CArray@VCStatData@@@@QEAAPEAVCStatData@@AEAK@Z
?GetNext@CCompositeMonikerEnum@@AEAAPEAUIMoniker@@PEAU2@@Z
?GetNext@CFat@@QEAAJKPEAK@Z
?GetNext@CFileStream@@QEBAPEAU1@XZ
?GetNextAssoc@?$CMap@PEAGAEAPEAGKAEAK@@QEBAXAEAPEAXAEAPEAGAEAK@Z
?GetNextAssoc@CMapKeyToValue@@QEBAXPEAPEAXKPEAXPEAI1@Z
?GetNextEntry@CInternalPageAllocator@@QEAAJJ@Z
?GetObjectDescriptorFromOle1@CClipDataObject@@AEAAJIPEAUtagSTGMEDIUM@@@Z
?GetObjectFromRotByPath@@YAJPEAGPEAPEAUIUnknown@@@Z
?GetObjectLink@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetObjectParam@CBindCtx@@UEAAJPEAGPEAPEAUIUnknown@@@Z
?GetObjectStorage@COleItemContainerImpl@CDdeObject@@UEAAJPEAGPEAUIBindCtx@@AEBU_GUID@@PEAPEAX@Z
?GetObjectW@COleItemContainerImpl@CDdeObject@@UEAAJPEAGKPEAUIBindCtx@@AEBU_GUID@@PEAPEAX@Z
?GetObjectW@CRunningObjectTable@@UEAAJPEAUIMoniker@@PEAPEAUIUnknown@@@Z
?GetOle2FromOle1@CClipDataObject@@AEAAJIPEAUtagSTGMEDIUM@@@Z
?GetOleDelegate@CDefLink@@QEAAPEAUIOleObject@@XZ
?GetOleDelegate@CDefObject@@QEAAPEAUIOleObject@@XZ
?GetOleItemContainerDelegate@CDefLink@@AEAAPEAUIOleItemContainer@@XZ
?GetOwnerLink@@YAJPEAUIDataObject@@PEAUtagSTGMEDIUM@@@Z
?GetOwnerTableHint@XSLOCK@@AEAAKV?$OPAQUE_HANDLE@$00@@@Z
?GetPSDelegate@CDefObject@@QEAAPEAUIPersistStorage@@XZ
?GetPackageOrBrowserFullName@@YAJPEAXPEAIPEAG@Z
?GetPackagePsmKeyFromProcessHandle@CallerIdentity@@YAJPEAXPEAPEAG@Z
?GetPackagePsmKeyFromProcessId@CallerIdentity@@YAJKPEAPEAG@Z
?GetPage@CMSFPageTable@@QEAAJPEAVCPagedVector@@KKKPEAPEAVCMSFPage@@@Z
?GetPageContainer@CPageHolder@@UEAAJPEAPEAUIUnknown@@@Z
?GetPageIDs@COlePropertySheet@@IEAAXAEAV?$CArray@U_GUID@@AEAU1@@@@Z
?GetParam@CallFrame@@UEAAJKPEAUtagVARIANT@@@Z
?GetParam@DISPATCH_FRAME@@UEAAJKPEAUtagVARIANT@@@Z
?GetParamInfo@CallFrame@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParamInfo@DISPATCH_FRAME@@UEAAJKPEAU__MIDL_ICallFrame_0002@@@Z
?GetParent@CConnectionPoint@@UEAAJPEAPEAUIDocfileAsyncConnectionPoint@@@Z
?GetPriority@CBindStatusCallback@@UEAAJPEAJ@Z
?GetPriority@DefaultIBindStatusCallback@@UEAAJPEAJ@Z
?GetPrivateClipboardWindow@@YAPEAUHWND__@@W4tagCLIPWINDOWFLAGS@@@Z
?GetProc@OLEAUTOMATION_FUNCTIONS@@AEAAJJPEBDPEAPEAX@Z
?GetProcessSecret@CProcessSecret@@QEAAJPEAU_GUID@@@Z
?GetProcessToken@ProcessToken@@QEAAJPEAPEAXK@Z
?GetPropPtr@CEndPointAtom@@QEAAPEBGXZ
?GetProperty@CPropertySection@@QEAAPEAVCProperty@@K@Z
?GetPropsetData@CFont@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@AEBU_GUID@@@Z
?GetProtocolVersion@CDdeServerCallMgr@@UEAAJPEAK@Z
?GetProtocolVersion@CDdeServerCallMgr@@W7EAAJPEAK@Z
?GetProtocolVersion@DDE_CHANNEL@@UEAAJPEAK@Z
?GetProtocolVersion@DDE_CHANNEL@@W7EAAJPEAK@Z
?GetProtocolVersion@MarshallingChannel@@UEAAJPEAK@Z
?GetProxyStubClsid@@YAJPEBU_GUID@@PEAPEBUtagProxyFileInfo@@PEAU1@@Z
?GetPv@CRgPv@@QEAAPEAXI@Z
?GetRODelegate@CDefLink@@QEAAPEAUIRunnableObject@@XZ
?GetRainbowPalette@SysInfo@@QEAAJPEAPEAUHPALETTE__@@@Z
?GetRealDataObjPtr@CClipDataObject@@QEAAPEAUIDataObject@@XZ
?GetRealDataObjPtr@CDragDataObject@@AEAAPEAUIDataObject@@XZ
?GetRegisteredSink@Interceptor@@EEAAJPEAPEAUICallFrameEvents@@@Z
?GetRegisteredSink@LEGACY_INTERCEPTOR@@UEAAJPEAPEAUICallFrameEvents@@@Z
?GetRemoteBroker@@YAJPEAPEAUIClipboardBroker@@@Z
?GetRemoteFrame@LEGACY_FRAME@@QEAAJXZ
?GetRemoteFrameFor@LEGACY_INTERCEPTOR@@QEAAJPEAPEAUICallFrame@@PEAULEGACY_FRAME@@@Z
?GetReserved@CFreeList@@QEAAPEAXXZ
?GetReturnValue@CallFrame@@UEAAJXZ
?GetReturnValue@LEGACY_FRAME@@UEAAJXZ
?GetRotItem@CRunningObjectTable@@AEAAPEAVCROTItem@@H@Z
?GetRunningClass@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetRunningClass@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetRunningObjectTable@CBindCtx@@UEAAJPEAPEAUIRunningObjectTable@@@Z
?GetScrBitCount@SysInfo@@QEAAJPEAH@Z
?GetScrPaletteSize@SysInfo@@QEAAJPEAH@Z
?GetSect@CDIFat@@QEAAJKPEAK@Z
?GetSect@CFat@@QEAAJKKPEAK@Z
?GetSect@CStreamCache@@QEAAJKPEAK@Z
?GetSection@CPropertySet@@QEAAPEAVCPropertySection@@U_GUID@@@Z
?GetSectorSize@CFileStream@@UEAAKXZ
?GetServerObjectContext@CProxyManagerImpl@CDdeObject@@UEAAPEAUIObjContext@@XZ
?GetShellLink@CFileMoniker@@AEAAJXZ
?GetSize@CDirEntry@@QEBA_KH@Z
?GetSize@CDirectory@@QEAAJKPEA_K@Z
?GetSize@CErrorSmAllocator@@UEAA_KPEAX@Z
?GetSize@CExposedStream@@UEAAKPEAJ@Z
?GetSize@CFileStream@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSize@CNFFMappedStream@@UEAAKPEAJ@Z
?GetSize@CPubStream@@QEAAJPEA_K@Z
?GetSize@CSSMappedStream@@UEAAKPEAJ@Z
?GetSize@CSmAllocator@@UEAA_KPEAX@Z
?GetSize@PSStream@@QEAAXPEA_K@Z
?GetSizeMax@CAntiMoniker@@EEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CBaseMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CClassMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CCompositeMoniker@@EEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CFileMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CFont@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CItemMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CLUAMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CObjrefMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CPackagerMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CPicture@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSizeMax@CSessionMoniker@@UEAAJPEAT_ULARGE_INTEGER@@@Z
?GetSourceDisplayName@CDefLink@@UEAAJPEAPEAG@Z
?GetSourceMoniker@CDefLink@@UEAAJPEAPEAUIMoniker@@@Z
?GetStackLocation@CallFrame@@UEAAPEAXXZ
?GetStackLocation@LEGACY_FRAME@@UEAAPEAXXZ
?GetStackSize@DISPATCH_INTERCEPTOR@@UEAAJKPEAK@Z
?GetStackSize@Interceptor@@EEAAJKPEAK@Z
?GetStackSize@LEGACY_INTERCEPTOR@@UEAAJKPEAK@Z
?GetStandardMarshallerFor@MarshallingChannel@@UEAAJAEBU_GUID@@PEAXPEAUIUnknown@@0PEAPEAX@Z
?GetStart@CDirectory@@QEAAJKPEAK@Z
?GetState@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetState@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?GetStateBits@PDocFile@@QEAAJPEAK@Z
?GetStdItemIndex@@YAHG@Z
?GetStdMarshalSize@@YAJAEBU_GUID@@0KPEAXKPEAK@Z
?GetStm@CCacheNode@@QEAAPEAUIStream@@HK@Z
?GetStockBitmap@SysInfo@@QEAAJPEAPEAUHBITMAP__@@@Z
?GetStream@CDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPSStream@@@Z
?GetStream@CPubDocFile@@QEAAJPEBVCDfName@@KPEAPEAVCPubStream@@@Z
?GetStream@CWrappedDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPSStream@@@Z
?GetStream@PDocFile@@QEAAJPEBVCDfName@@KPEAPEAVPSStream@@@Z
?GetStreamHandle@CNtfsStorage@@QEAAJPEAPEAXPEBGKH@Z
?GetTable@CFatVector@@QEAAJKKPEAPEAVCFatSect@@@Z
?GetTable@CPagedVector@@QEAAJKKPEAPEAX@Z
?GetTableWithSect@CPagedVector@@QEAAJKKKPEAPEAX@Z
?GetTerminationStatus@CFileStream@@UEAAJPEAK@Z
?GetTerminationStatus@CFillLockBytes@@UEAAJPEAK@Z
?GetThreadAllocatorState@CPerContext@@QEAAJXZ
?GetThreadIntegrityLevel@@YAJPEAK@Z
?GetTime@CDirectory@@QEAAJKW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTime@CMStream@@QEAAJKW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTime@PTimeEntry@@QEAAJW4WHICHTIME@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CObjrefMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CRunningObjectTable@@UEAAJPEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTimeOfLastChange@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAU_FILETIME@@@Z
?GetTlsSmAllocator@@YAAEAVCSmAllocator@@XZ
?GetTokenElevationType@@YAJPEAXPEAW4_TOKEN_ELEVATION_TYPE@@@Z
?GetTokenFromHwnd@@YAJPEAUHWND__@@PEAPEAXK@Z
?GetTypeInfo@CFont@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfo@CPicture@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfo@LEGACY_INTERCEPTOR@@UEAAJIKPEAPEAUITypeInfo@@@Z
?GetTypeInfoCount@CFont@@UEAAJPEAI@Z
?GetTypeInfoCount@CPicture@@UEAAJPEAI@Z
?GetTypeInfoCount@LEGACY_INTERCEPTOR@@UEAAJPEAI@Z
?GetTypeInfoFromIID@@YAJAEBU_GUID@@PEAPEAUITypeInfo@@@Z
?GetUNICODEProgID@@YAJPEAVCompObjStmData@@PEAPEAG@Z
?GetUNICODEUserType@@YAJPEAVCompObjStmData@@PEAPEAG@Z
?GetUnmarshalClass@CClassMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CDocfileUnmarshalFactory@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CExposedDocFile@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CExposedStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CPicture@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CPointerMoniker@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CSimpStorage@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@CSimpStream@@UEAAJAEBU_GUID@@PEAXK1KPEAU2@@Z
?GetUnmarshalClass@FtmBase@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAXK1KPEAU4@@Z
?GetUnmarshaller@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAUIMarshalSomeone@@@Z
?GetUpdateOptions@CDefLink@@UEAAJPEAK@Z
?GetUserClassID@CDefLink@@UEAAJPEAU_GUID@@@Z
?GetUserClassID@CDefObject@@UEAAJPEAU_GUID@@@Z
?GetUserClassID@COleObjectImpl@CDdeObject@@UEAAJPEAU_GUID@@@Z
?GetUserType@CDefLink@@UEAAJKPEAPEAG@Z
?GetUserType@CDefObject@@UEAAJKPEAPEAG@Z
?GetUserType@COleObjectImpl@CDdeObject@@UEAAJKPEAPEAG@Z
?GetValue@CPropertySetStream@@QEAAPEBUtagSERIALIZEDPROPERTYVALUE@@KPEAKPEAJ@Z
?GetVariantAllocSize@DeserializeHelper@@CAKG@Z
?GetVtbl@@YAJPEAUITypeInfo@@AEBU_GUID@@PEAPEAUTYPEINFOVTBL@@PEAPEAU1@@Z
?GetWalker@CallFrame@@QEBA?AUOAUTIL@@XZ
?GetWindow@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAUHWND__@@@Z
?GrfModeIsWriteable@@YAHK@Z
?Grow@CInternalPageAllocator@@AEAAPEAUtagPageEntry@@XZ
?GuidFromString@@YAJPEBGPEAU_GUID@@@Z
?HBITMAP_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAUHBITMAP__@@_K@Z
?HBITMAP_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAUHBITMAP__@@_K@Z
?HENHMETAFILE_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAUHENHMETAFILE__@@_K@Z
?HENHMETAFILE_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAUHENHMETAFILE__@@_K@Z
?HIconAndSourceFromClass@@YAPEAUHICON__@@AEBU_GUID@@PEAGKPEAI@Z
?HMETAFILEPICT_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAX_K@Z
?HMETAFILEPICT_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAX_K@Z
?HPALETTE_UserFreeExt@@YAXPEAKPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserMarshalExt@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserSizeExt@@YAKPEAKKPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@@Z
?HPALETTE_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@_K@Z
?HPALETTE_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAPEAUHPALETTE__@@_K@Z
?HRGN_UserFree@@YAXPEAKPEAPEAUHRGN__@@@Z
?HRGN_UserMarshal@@YAPEAEPEAKPEAEPEAPEAUHRGN__@@@Z
?HRGN_UserSize@@YAKPEAKKPEAPEAUHRGN__@@@Z
?HRGN_UserUnmarshal@@YAPEAEPEAKPEAEPEAPEAUHRGN__@@@Z
?HSTRING_Helper_MarshalNative@@YAPEAEKPEAE_NPEAPEAUHSTRING__@@@Z
?HSTRING_Helper_UpdateSizeRemaining@@YAXAEAKK@Z
?HWND_UserFree64Ext@@YAXPEAKPEAPEAUHWND__@@@Z
?HWND_UserFreeExt@@YAXPEAKPEAPEAUHWND__@@@Z
?HWND_UserMarshal64Ext@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HWND_UserMarshalExt@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HWND_UserSize64Ext@@YAKPEAKKPEAPEAUHWND__@@@Z
?HWND_UserSizeExt@@YAKPEAKKPEAPEAUHWND__@@@Z
?HWND_UserUnmarshal64Ext@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HWND_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAPEAUHWND__@@@Z
?HandleFeedBack@CDragOperation@@QEAAHJ@Z
?HandleFromHandle@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?HandleInitMsg@CDDEServer@@QEAAH_J@Z
?HandleMessages@CDragOperation@@QEAAHXZ
?HandsOffStorage@CDefLink@@UEAAJXZ
?HandsOffStorage@CDefObject@@UEAAJXZ
?HandsOffStorage@COleCache@@UEAAJXZ
?HandsOffStorage@CPersistStgImpl@CDdeObject@@UEAAJXZ
?HasAnyInterfaces@HAS_INTERFACES@@QEBAHXZ
?HasCodePage@DeserializeHelper@@QEAAHXZ
?Hash@CAntiMoniker@@EEAAJPEAK@Z
?Hash@CBaseMoniker@@UEAAJPEAK@Z
?Hash@CClassMoniker@@UEAAJPEAK@Z
?Hash@CCompositeMoniker@@EEAAJPEAK@Z
?Hash@CFileMoniker@@UEAAJPEAK@Z
?Hash@CItemMoniker@@UEAAJPEAK@Z
?Hash@CLUAMoniker@@UEAAJPEAK@Z
?Hash@CPackagerMoniker@@UEAAJPEAK@Z
?Hash@CPointerMoniker@@UEAAJPEAK@Z
?Hash@CSessionMoniker@@UEAAJPEAK@Z
?HaveWriteAccess@CExposedDocFile@@UEAAJXZ
?Hdc@CFont@@QEAAPEAUHDC__@@XZ
?HeapMinimize@CErrorSmAllocator@@UEAAXXZ
?HeapMinimize@CSmAllocator@@UEAAXXZ
?HexStringToDword@@YAHAEAPEBGAEAKHG@Z
?HimetricFromPixels@@YAJPEAUtagSIZE@@@Z
?HrAStrToBStr@@YAJPEBDPEAPEAG@Z
?HrAStrToWStr@@YAJPEBDPEAPEAG@Z
?HrBStrToWStr@@YAJQEAGPEAPEAG@Z
?HrCLSIDToStr@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTBOOL@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTBSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTCY@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTDATE@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTDISPATCH@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTEMPTY@@YAJPEAUtagPROPVARIANT@@G@Z
?HrConvFromVTFILETIME@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTI8@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTLPSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTLPWSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrConvFromVTUI8@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvFromVTVERSIONEDSTREAM@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrConvertByRef@@YAJPEAUtagPROPVARIANT@@PEBU1@@Z
?HrConvertPVTypes@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrCopyTo@@YAJPEAUIStream@@0J@Z
?HrFromDosError@@YAJI@Z
?HrGetLIFromDouble@@YAJNPEA_J@Z
?HrGetULIFromDouble@@YAJNPEA_K@Z
?HrGetValFromBLOB@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrGetValFromBSTR@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?HrGetValFromDOUBLE@@YAJPEAUtagPROPVARIANT@@PEBU1@KGGN@Z
?HrGetValFromDWORD@@YAJPEAUtagPROPVARIANT@@PEBU1@KGGKH@Z
?HrGetValFromUNK@@YAJPEAUtagPROPVARIANT@@PEAUIUnknown@@G@Z
?HrPropVarVECTORToSAFEARRAY@@YAJPEAUtagPROPVARIANT@@PEBU1@KG@Z
?HrRead@@YAJPEAUIStream@@PEAXK@Z
?HrRegSetValueW@@YAJPEAUHKEY__@@PEBG1@Z
?HrStrToCLSID@@YAJPEAUtagPROPVARIANT@@PEBU1@@Z
?HrStrToULI@@YAJPEBUtagPROPVARIANT@@KGHPEA_K@Z
?HrULIToStr@@YAJPEAUtagPROPVARIANT@@PEBU1@G@Z
?HrWStrToAStr@@YAJPEBGPEAPEAD@Z
?HrWStrToBStr@@YAJPEBGPEAPEAG@Z
?IGetObject@CRunningObjectTable@@QEAAJPEAU_MnkEqBuf@@PEAPEAUIUnknown@@K@Z
?IGetObjectByPath@CRunningObjectTable@@QEAAJPEAGPEAPEAUIUnknown@@K@Z
?ILBFlush@@YAJPEAUILockBytes@@H@Z
?ILBGetSize@@YAJPEAUILockBytes@@PEAT_ULARGE_INTEGER@@@Z
?INIT_DISABLED_FEATURES@DISABLED_FEATURES@@CAHPEAT_RTL_RUN_ONCE@@PEAXPEAPEAX@Z
?IStreamToBase64@@YAJPEAUIStream@@PEAG_K@Z
?IconLabelTextOut@@YAXPEAUHDC__@@PEAUHFONT__@@HHIPEAUtagRECT@@PEBD@Z
?ImplicitPropVariantToVariantChangeType@@YAJPEAUtagPROPVARIANT@@PEBU1@K@Z
?InHighContrastMode@@YAHXZ
?Init@CAsyncConnection@@QEAAJPEAUIConnectionPointContainer@@PEAV1@@Z
?Init@CConnectionPoint@@QEAAJXZ
?Init@CDeltaList@@QEAAJ_KPEAVCTransactedStream@@@Z
?Init@CDfMutex@@QEAAJPEAVCGlobalContext@@H@Z
?Init@CDirEntry@@QEAAXK@Z
?Init@CDirectStream@@QEAAJPEAVCStgHandle@@PEBVCDfName@@H@Z
?Init@CDragDefaultCursors@@QEAAHXZ
?Init@CEnumSTATPROPBAG@@QEAAJPEAUIPropertyStorage@@PEBGK@Z
?Init@CExposedStream@@QEAAJPEAVCPubStream@@PEAVCDFBasis@@PEAVCPerContext@@PEAVCSeekPointer@@@Z
?Init@CFillLockBytes@@QEAAJXZ
?Init@CGlobalSecurity@@QEAAJH@Z
?Init@CMStream@@QEAAJHHT_ULARGE_INTEGER@@@Z
?Init@CNFFMappedStream@@QEAAJPEAX@Z
?Init@CNFFTreeMutex@@QEAAJXZ
?Init@CNtfsEnumSTATSTG@@UEAAJPEAX@Z
?Init@CNtfsSTATSTGArray@@QEAAJPEAX@Z
?Init@CNtfsStream@@UEAAJPEAXKPEBGPEAV1@@Z
?Init@COleStaticMutexSem@@QEAAJXZ
?Init@CPagedVector@@QEAAJPEAVCMStream@@K@Z
?Init@CPropertySetStorage@@QEAAXPEAUIStorage@@PEAUIBlockingLock@@H@Z
?Init@CSTATPROPBAGArray@@QEAAJPEAUIPropertyStorage@@PEBGK@Z
?Init@CSharedMemoryBlock@@QEAAJPEAGKKPEAX1H@Z
?Init@CSimpStorage@@QEAAJPEBGPEAX@Z
?Init@CSimpStorageOpen@@QEAAJPEBGKPEAX@Z
?Init@CSimpStream@@QEAAJPEAUCSimpStorage@@PEAXK@Z
?Init@CSimpStreamOpen@@QEAAJPEAVCSimpStorageOpen@@PEAXKKPEAVCDfNameList@@@Z
?Init@CSmAllocator@@QEAAJPEAXKKH@Z
?Init@CStackBuffer@@QEAAJK@Z
?Init@CStmBufRead@@QEAAXPEAUIStream@@@Z
?Init@CStmBufWrite@@QEAAXPEAUIStream@@@Z
?Init@CStreamCache@@QEAAXPEAVCMStream@@KPEAVCDirectStream@@@Z
?Init@CWrappedDocFile@@QEAAJPEAVPDocFile@@@Z
?Init@CallFrame@@QEAAXPEAXPEAUMD_METHOD@@PEAVInterceptor@@@Z
?Init@DefaultIBindStatusCallback@@QEAAHPEBG@Z
?Init@DeserializeHelper@@QEAAJPEAVPMemoryAllocator@@II@Z
?InitCNtfsStream@CNtfsStorage@@QEAAJPEAVCNtfsStream@@PEAXKPEBG@Z
?InitCache@COleCache@@UEAAJPEAUIDataObject@@@Z
?InitClone@CAsyncConnection@@QEAAJPEAUIConnectionPointContainer@@PEAV1@@Z
?InitCommon@CMStream@@AEAAJXZ
?InitConnection@CAsyncConnectionContainer@@QEAAJPEAVCAsyncConnection@@@Z
?InitConvert@CDIFat@@QEAAJPEAVCMStream@@K@Z
?InitConvert@CFat@@QEAAJPEAVCMStream@@K@Z
?InitConvert@CMStream@@QEAAJH@Z
?InitCopy@CMStream@@QEAAXPEAV1@@Z
?InitCopy@CPagedVector@@QEAAXPEAV1@@Z
?InitFromData@CDefLink@@UEAAJPEAUIDataObject@@HK@Z
?InitFromData@CDefObject@@UEAAJPEAUIDataObject@@HK@Z
?InitFromData@COleObjectImpl@CDdeObject@@UEAAJPEAUIDataObject@@HK@Z
?InitFromEntry@CDocFile@@QEAAJPEAVCStgHandle@@PEBVCDfName@@H@Z
?InitFromGlobalFileStream@CGlobalFileStream@@QEAAXPEAV1@@Z
?InitFromHandle@CFileStream@@QEAAJPEAX@Z
?InitFromMainStreamHandle@CNtfsStorage@@QEAAJPEAPEAXPEBGHKK@Z
?InitFromName@CNtfsStorage@@QEAAJPEBGPEAXHK@Z
?InitFromRegDb@CEnumFmt10@@UEAAJPEAUHKEY__@@@Z
?InitFromScratch@CEnumFmt10@@UEAAJXZ
?InitGlobal@CFileStream@@QEAAJKK@Z
?InitHashTable@?$CMap@PEAGAEAPEAGKAEAK@@QEAAJIH@Z
?InitInd@CRootPubDocFile@@AEAAJPEAUILockBytes@@PEAPEAGKKH@Z
?InitLPACCEL@CPaccelEnum@@QEAAHPEAUHACCEL__@@H@Z
?InitMetaDataCache@@YAHXZ
?InitNew@CDefLink@@UEAAJPEAUIStorage@@@Z
?InitNew@CDefObject@@UEAAJPEAUIStorage@@@Z
?InitNew@CDirectory@@QEAAJPEAVCMStream@@@Z
?InitNew@CFat@@QEAAJPEAVCMStream@@@Z
?InitNew@CFont@@UEAAJXZ
?InitNew@CMStream@@QEAAJHT_ULARGE_INTEGER@@@Z
?InitNew@COleCache@@UEAAJPEAUIStorage@@@Z
?InitNew@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?InitNewContext@CPerContext@@QEAAJH@Z
?InitNotInd@CRootPubDocFile@@AEAAJPEAUILockBytes@@PEAPEAGKK@Z
?InitNotificationEvent@CPerContext@@QEAAJPEAUILockBytes@@@Z
?InitRegs@CallFrame@@QEAAXPEAXPEA_J@Z
?InitResize@CDeltaList@@QEAAJ_K@Z
?InitRoot@CRootPubDocFile@@QEAAJPEAUILockBytes@@KKPEAPEAGPEAPEAVCDFBasis@@PEAKPEAVCGlobalContext@@@Z
?InitScratch@CFat@@QEAAJPEAV1@H@Z
?InitScratch@CFileStream@@QEAAJXZ
?InitScrollInt@CDragOperation@@AEAAXXZ
?InitStreamBlock@CDeltaList@@AEAAJK@Z
?InitSysConv@CDdeObject@@QEAAHXZ
?InitSystem@CDirectStream@@QEAAXPEAVCMStream@@K_K@Z
?InitTbl@CScmPatternTbl@@QEAAJXZ
?InitTypeInfoCache@@YAHXZ
?InitUnMarshal@CSharedMemoryBlock@@QEAAJPEAXKK@Z
?InitUsingTypeInfo@Interceptor@@AEAAJAEBU_GUID@@PEAUITypeInfo@@@Z
?InitWorker@CFileStream@@AEAAJPEBGKPEAX@Z
?Init_DupFileHandle@CFileStream@@AEAAJK@Z
?Init_GetNtOpenFlags@CFileStream@@AEAAJPEAK000@Z
?Init_MemoryMap@CFileStream@@AEAAJK@Z
?Init_OpenOrCreate@CFileStream@@AEAAJPEAGKPEAX@Z
?Initialize@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@QEAAJPEAPEAUIEnumCATEGORYINFO@@K@Z
?Initialize@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@QEAAJPEAPEAUIEnumGUID@@K@Z
?Initialize@CComCat@@AEAAJPEAUIUnknown@@@Z
?Initialize@CCompositeMoniker@@QEAAHPEAUIMoniker@@0@Z
?Initialize@CEnumCategories@@QEAAJKPEAUIEnumCATEGORYINFO@@@Z
?Initialize@CEnumClassesOfCategories@@QEAAJKQEBU_GUID@@K0PEAUIEnumGUID@@@Z
?Initialize@CFileMoniker@@AEAAHGPEADGPEAGGG@Z
?Initialize@CFileMoniker@@AEAAHGPEBGG@Z
?Initialize@CHashTable@@UEAAXPEAUSHashChain@@PEAVCOleStaticMutexSem@@@Z
?Initialize@CHashTable@@UEAAXPEAUSHashChain@@PEAVCRWLock@@@Z
?Initialize@CItemMoniker@@AEAAHPEBG0@Z
?Initialize@CItemMoniker@@AEAAXPEAGGPEADG0G1G@Z
?Initialize@CPageAllocator@@QEAAX_KGPEAVCOleStaticMutexSem@@K@Z
?Initialize@CRandomNumberGenerator@@AEAAJXZ
?Initialize@ClipboardBrokerFactory@@CAJXZ
?InitializeAndReadIsAppContainer@@YAJPEAH@Z
?InitializeFormat@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@QEAAJPEBGZZ
?InitializeHeap@CPageAllocator@@AEAAHPEAVCOleStaticMutexSem@@@Z
?InitializeInvoke@DISPATCH_CLIENT_FRAME@@QEAAXXZ
?InitializeOnCreateOrOpen@CPropertyStorage@@AEAAJKKAEBU_GUID@@H@Z
?InitializePropertyStream@CPropertyStorage@@AEAAJPEBU_GUID@@0W4EInitializePropertyStream@1@@Z
?InnerAddRef@Interceptor@@EEAAKXZ
?InnerAddRef@LEGACY_FRAME@@UEAAKXZ
?InnerAddRef@LEGACY_INTERCEPTOR@@UEAAKXZ
?InnerAddRef@MarshallingChannel@@UEAAKXZ
?InnerQueryInterface@DISPATCH_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@Interceptor@@EEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@LEGACY_FRAME@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerQueryInterface@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAX@Z
?InnerRelease@Interceptor@@EEAAKXZ
?InnerRelease@LEGACY_FRAME@@UEAAKXZ
?InnerRelease@LEGACY_INTERCEPTOR@@UEAAKXZ
?InnerRelease@MarshallingChannel@@UEAAKXZ
?InsertAt@CArrayFValue@@QEAAHHPEAXH@Z
?InsertEntry@CDirectory@@AEAAJKKPEBVCDfName@@@Z
?InsertSelfIntoList@CNtfsStream@@IEAAXPEAV1@@Z
?Interceptor_AddRef@@YAKPEAUIUnknown@@@Z
?Interceptor_QueryInterface@@YAJPEAUIUnknown@@AEBU_GUID@@PEAPEAX@Z
?Interceptor_Release@@YAKPEAUIUnknown@@@Z
?InternalDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?InternalRelease@?$ComPtr@UICallingProcessInfo@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardBroker@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIClipboardBrokerInternal@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIDataObject@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIEnumFORMATETC@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIEnumSTATSTG@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIGlobalInterfaceTable@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIImpersonateClipboardOwner@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIMarshal@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIOSTaskCompletion@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIRuntimeBroker@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIStorage@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIStream@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIUnknown@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@UIUnwrappableDataObject@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@?$ComPtr@VClipboardDataObjectTask@@@WRL@Microsoft@@IEAAKXZ
?InternalRelease@CClipDataObject@@AEAAKXZ
?Inverse@CBaseMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CClassMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CCompositeMoniker@@EEAAJPEAPEAUIMoniker@@@Z
?Inverse@CFileMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CItemMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CLUAMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CPackagerMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CPointerMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?Inverse@CSessionMoniker@@UEAAJPEAPEAUIMoniker@@@Z
?InverseFromEnum@@YAJPEAUIEnumMoniker@@PEAPEAUIMoniker@@@Z
?Invoke@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CFont@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?Invoke@CPicture@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?Invoke@CRpcStubBufferImpl@CDdeObject@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIRpcChannelBuffer@@@Z
?Invoke@CallFrame@@UEAAJPEAXZZ
?Invoke@DISPATCH_CLIENT_FRAME@@UEAAJPEAXZZ
?Invoke@DISPATCH_FRAME@@QEAAJPEAX@Z
?Invoke@DISPATCH_SERVER_FRAME@@UEAAJPEAXZZ
?Invoke@LEGACY_INTERCEPTOR@@UEAAJJAEBU_GUID@@KGPEAUtagDISPPARAMS@@PEAUtagVARIANT@@PEAUtagEXCEPINFO@@PEAI@Z
?InvokeAsClipboard@CBrokeredClipDataObject@@UEAAJPEAUIRunAsClipboard@@@Z
?IsAbsoluteNonUNCPath@@YAHPEBG@Z
?IsAlwaysInvalidSectorNumber@@YA_NKK@Z
?IsAntiMoniker@@YAPEAVCAntiMoniker@@PEAUIMoniker@@@Z
?IsAppContainer@ProcessToken@@QEAAJPEA_N@Z
?IsBSTR@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsBlank@CCacheNode@@QEAAHXZ
?IsBlank@CEMfObject@@UEAAHXZ
?IsBlank@CGenObject@@UEAAHXZ
?IsBlank@CMfObject@@UEAAHXZ
?IsCached@CCacheStream@@UEAAJXZ
?IsClassOfCategories@CComCat@@UEAAJAEBU_GUID@@KQEBU2@K1@Z
?IsClassOfCategories@CsCatInfo@@UEAAJAEBU_GUID@@KQEBU2@K1@Z
?IsClassOfCategoriesEx@CComCat@@SAJPEAUHKEY__@@PEAGKQEBU_GUID@@K2@Z
?IsCompositeMoniker@@YAPEAVCCompositeMoniker@@PEAUIMoniker@@@Z
?IsConnected@CDdeServerCallMgr@@UEAAJXZ
?IsConnected@CDdeServerCallMgr@@W7EAAJXZ
?IsConnected@CProxyManagerImpl@CDdeObject@@UEAAHXZ
?IsConnected@DDE_CHANNEL@@UEAAJXZ
?IsConnected@DDE_CHANNEL@@W7EAAJXZ
?IsConnected@MarshallingChannel@@UEAAJXZ
?IsContentStream@@YAHPEBG@Z
?IsCreate@CUpdate@@QEBAHXZ
?IsCurrentBinaryEnabledForTracing@@YAHXZ
?IsCurrentClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?IsCurrentClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?IsDelete@CUpdate@@QEBAHXZ
?IsDenied@CChildInstanceList@@QEAAJPEBVCDfName@@KK@Z
?IsDirty@CBaseMoniker@@UEAAJXZ
?IsDirty@CClassMoniker@@UEAAJXZ
?IsDirty@CDefLink@@UEAAJXZ
?IsDirty@CDefObject@@UEAAJXZ
?IsDirty@CFileMoniker@@UEAAJXZ
?IsDirty@CFont@@UEAAJXZ
?IsDirty@CMSFPage@@QEBAHXZ
?IsDirty@CObjrefMoniker@@UEAAJXZ
?IsDirty@COleCache@@UEAAJXZ
?IsDirty@CPackagerMoniker@@UEAAJXZ
?IsDirty@CPersistStgImpl@CDdeObject@@UEAAJXZ
?IsDirty@CPicture@@UEAAJXZ
?IsElevatedToken@@YAJPEAXPEAH@Z
?IsEmpty@CDeltaList@@QEAAHXZ
?IsEmpty@COleCache@@QEAAHXZ
?IsEmptyString@@YAHPEAG@Z
?IsEncryptedFile@CFileStream@@UEAAHXZ
?IsEntry@CUpdateList@@QEAA?AW4UlIsEntry@@PEBVCDfName@@PEAPEAVCUpdate@@@Z
?IsEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@PEAUSEntryBuffer@@@Z
?IsEqual@CAntiMoniker@@EEAAJPEAUIMoniker@@@Z
?IsEqual@CBaseMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CClassMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CCompositeMoniker@@EEAAJPEAUIMoniker@@@Z
?IsEqual@CDfName@@QEBAHPEBV1@@Z
?IsEqual@CFileMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CFont@@UEAAJPEAUIFont@@@Z
?IsEqual@CItemMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CLUAMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CObjrefMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CPackagerMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CPointerMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqual@CSessionMoniker@@UEAAJPEAUIMoniker@@@Z
?IsEqualFMTIDByteSwap@@YAHAEBU_GUID@@0@Z
?IsEqualGUID@@YAHAEBU_GUID@@0@Z
?IsEqualPfn@OLEAUTOMATION_FUNCTIONS@@AEAAHPEAX0@Z
?IsFile@@YAHGPEAH@Z
?IsFileMapped@CFileStream@@AEAAHXZ
?IsFileMoniker@@YAPEAVCFileMoniker@@PEAUIMoniker@@@Z
?IsFormatAvailable@CDdeObject@@AEAAJPEAUtagFORMATETC@@@Z
?IsFormatAvailable@CDefClient@@AEAAHG@Z
?IsHandleValid@CDfMutex@@QEAAHPEBG@Z
?IsHmenuEqual@@YAHPEAUHMENU__@@0@Z
?IsIIDSupported@CDdeServerCallMgr@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIIDSupported@CRpcStubBufferImpl@CDdeObject@@UEAAPEAUIRpcStubBuffer@@AEBU_GUID@@@Z
?IsIidInList@@YAHAEBU_GUID@@PEAPEBU1@@Z
?IsInMemory@CDeltaList@@QEAAHXZ
?IsInScm@CRunningObjectTable@@QEAAHPEAU_MnkEqBuf@@@Z
?IsInStream@CDeltaList@@QEAAHXZ
?IsInitialized@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@UEBA_NXZ
?IsInitialized@CAsyncConnection@@QEBAHXZ
?IsItemMoniker@@YAPEAVCItemMoniker@@PEAUIMoniker@@@Z
?IsLargeSector@CDirectory@@QEBAHXZ
?IsLocalizationPropid@@YAEK@Z
?IsLongComponent@@YAHPEBGPEAPEAG@Z
?IsMDIAccelerator@@YAHPEAUtagMSG@@PEAG@Z
?IsMacPICTSupported@@YAHXZ
?IsMenuCollision@CFrameFilter@@QEAAH_K_J@Z
?IsMnemonic@@YAHPEAUHWND__@@D@Z
?IsModified@CExposedStream@@UEBAEXZ
?IsModified@CNFFMappedStream@@UEBAEXZ
?IsModified@CSSMappedStream@@UEBAEXZ
?IsNCDrop@@YAHPEAUHWND__@@UtagPOINT@@@Z
?IsNULL@COleTls@@QEAAHXZ
?IsNffAppropriate@CNtfsStorage@@KAJPEAXPEBG@Z
?IsNffAppropriate@CNtfsStorage@@SAJPEBG@Z
?IsNoScratch@CDeltaList@@QEAAHXZ
?IsNonSimple@CPropertyStorage@@AEAAHXZ
?IsNormalCache@CCacheNode@@QEAAHXZ
?IsObjectMenu@CFrameFilter@@QEAAXII@Z
?IsOle1Class@CFileMoniker@@AEAAHPEAU_GUID@@@Z
?IsOleCommand@@YAHGG@Z
?IsOleInitialized@@YAHXZ
?IsOriginalPropVariantType@@YAHG@Z
?IsOwned@CDeltaList@@QEAAJKKPEAH@Z
?IsOwned@SDeltaBlock@@QEAA?BHG@Z
?IsOwnerLinkStdOleLink@@YAHXZ
?IsPathSeparator@@YAHG@Z
?IsPending@CPicture@@QEAAJXZ
?IsReadOnlyPropertySet@@YAEEE@Z
?IsReallyRunning@CDefLink@@UEAAHXZ
?IsReduced@@YAHPEAUIMoniker@@@Z
?IsRename@CUpdate@@QEBAHXZ
?IsReverted@CPropertyStorage@@AEAAHXZ
?IsRoot@CPubDocFile@@QEBAHXZ
?IsRunning@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CDefLink@@UEAAHXZ
?IsRunning@CDefObject@@UEAAHXZ
?IsRunning@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@COleItemContainerImpl@CDdeObject@@UEAAJPEAG@Z
?IsRunning@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@1@Z
?IsRunning@CRunningObjectTable@@UEAAJPEAUIMoniker@@@Z
?IsRunningInThisTask@@YAJPEAGPEAH@Z
?IsSAFEARRAY@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsSameAsObjectFormatEtc@@YAJPEAUtagFORMATETC@@G@Z
?IsSectType@CFat@@AEAAJKK@Z
?IsSeparator@@YAHG@Z
?IsSharableEmbeddedPointers@@YA?AUHAS_INTERFACES@@PEBE@Z
?IsSharableEmbeddedRepeatPointers@@YA?AUHAS_INTERFACES@@AEAPEBE@Z
?IsShareableType@@YA?AUHAS_INTERFACES@@PEBE@Z
?IsSingleServerInstance@@YAHXZ
?IsSingleWriter@CPubDocFile@@IEAAJXZ
?IsSpecifiedStream@@YAHPEBU_FILE_STREAM_INFORMATION@@PEBG@Z
?IsSupportedVarType@@YAHG@Z
?IsSystemMoniker@CAntiMoniker@@EEAAJPEAK@Z
?IsSystemMoniker@CBaseMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CClassMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CCompositeMoniker@@EEAAJPEAK@Z
?IsSystemMoniker@CFileMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CItemMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CLUAMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CObjrefMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CPackagerMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CPointerMoniker@@UEAAJPEAK@Z
?IsSystemMoniker@CSessionMoniker@@UEAAJPEAK@Z
?IsTaskName@@YAHPEBG@Z
?IsTokenAppContainer@@YAJPEAXPEAH@Z
?IsUIAccessToken@@YAJPEAXPEAH@Z
?IsUpToDate@CDefLink@@UEAAJXZ
?IsUpToDate@CDefObject@@UEAAJXZ
?IsUpToDate@COleObjectImpl@CDdeObject@@UEAAJXZ
?IsUserHiveOK@@YAJPEAXPEAH@Z
?IsValidLINDEX@@YAHKJ@Z
?IsValidPtrOut@@YAHPEAX_K@Z
?IsValidReadPtrIn@@YAHPEBX_K@Z
?IsValidStgInterface@@YAHPEAX@Z
?IsVariant@OLEAUTOMATION_FUNCTIONS@@QEAAHAEBU_USER_MARSHAL_ROUTINE_QUADRUPLE@@@Z
?IsVariantType@@YAHG@Z
?IsWOWThread@@YAHXZ
?IsWOWThreadCallable@@YAHXZ
?IsWindowValid@@YAHPEAUHWND__@@@Z
?IsWriteable@CExposedStream@@UEBAEXZ
?IsWriteable@CNFFMappedStream@@UEBAEXZ
?IsWriteable@CPropertyStorage@@AEAAHW4EIsWriteable@1@@Z
?IsWriteable@CSSMappedStream@@UEBAEXZ
?ItemCallBack@CDefClient@@AEAAJHPEAG@Z
?KeepData@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEAX@Z
?Last@CCompositeMoniker@@QEAAPEAUIMoniker@@XZ
?LaunchApp@CDdeObject@@AEAAHXZ
?LetExclusiveRun@XSLOCK@@AEAAXXZ
?LinkCall@ClipboardDataObjectTask@@AEAA_NPEAVCancellableCall@@@Z
?Load@CAntiMoniker@@EEAAJPEAUIStream@@@Z
?Load@CBaseMoniker@@UEAAJPEAUIStream@@@Z
?Load@CBmpLoader@@QEAAJPEAVCPicture@@PEAUIStream@@J@Z
?Load@CCacheNode@@QEAAJPEAUIStream@@HH@Z
?Load@CClassMoniker@@UEAAJPEAUIStream@@@Z
?Load@CCompositeMoniker@@EEAAJPEAUIStream@@@Z
?Load@CDefLink@@UEAAJPEAUIStorage@@@Z
?Load@CDefObject@@UEAAJPEAUIStorage@@@Z
?Load@CEMfObject@@UEAAJPEAUIStream@@H@Z
?Load@CExtentList@@QEAAJPEAUIStream@@K@Z
?Load@CFileMoniker@@UEAAJPEAUIStream@@@Z
?Load@CFont@@UEAAJPEAUIPropertyBag@@PEAUIErrorLog@@@Z
?Load@CFont@@UEAAJPEAUIStream@@@Z
?Load@CGenObject@@UEAAJPEAUIStream@@H@Z
?Load@CItemMoniker@@UEAAJPEAUIStream@@@Z
?Load@CLUAMoniker@@UEAAJPEAUIStream@@@Z
?Load@CMfObject@@UEAAJPEAUIStream@@H@Z
?Load@CObjrefMoniker@@UEAAJPEAUIStream@@@Z
?Load@COleCache@@QEAAJPEAUIStorage@@H@Z
?Load@COleCache@@UEAAJPEAUIStorage@@@Z
?Load@CPackagerMoniker@@UEAAJPEAUIStream@@@Z
?Load@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?Load@CPicture@@UEAAJPEAUIStream@@@Z
?Load@CSessionMoniker@@UEAAJPEAUIStream@@@Z
?Load@OLEAUTOMATION_FUNCTIONS@@AEAAXXZ
?LoadHPRES@CEMfObject@@AEAAPEAUHENHMETAFILE__@@XZ
?LoadHPRES@CGenObject@@AEAAPEAXXZ
?LoadHPRES@CMfObject@@AEAAPEAXXZ
?LoadLibraryWithLogging@@YAJW4LoadOrFreeWhy@@PEBGKPEAPEAUHINSTANCE__@@@Z
?LoadObject@CPropertyBagEx@@AEBAJPEAUtagPROPVARIANT@@0@Z
?LoadOleAut32@OLEAUTOMATION_FUNCTIONS@@AEAAJXZ
?LoadPropVariantFromVectorElem@@YAJPEAUtagPROPVARIANT@@PEBU1@H@Z
?LoadResultFromScm@CRotMonikerEnum@@QEAAJPEAU_MkInterfaceList@@@Z
?LoadSystemProc@@YAHPEADPEBDPEAPEAUHINSTANCE__@@PEAP6A_JXZ@Z
?LoadTOC@COleCache@@AEAAJPEAUIStream@@PEAUIStorage@@@Z
?LoadTOCEntry@CCacheNode@@QEAAJPEAUIStream@@AEAH@Z
?Localize@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@IEAAJAEBU_GUID@@PEAPEAX@Z
?Locate@COleCache@@AEAAPEAVCCacheNode@@KJPEAUtagDVTARGETDEVICE@@@Z
?Locate@COleCache@@AEAAPEAVCCacheNode@@PEAUtagFORMATETC@@PEAK@Z
?Lock@CDDEServer@@QEAAXHPEAUHWND__@@@Z
?Lock@CExposedDocFile@@UEAAJK@Z
?Lock@CExposedStream@@UEAAJE@Z
?Lock@CNFFMappedStream@@UEAAJE@Z
?Lock@CNFFTreeMutex@@UEAAJK@Z
?Lock@CNtfsStorage@@UEAAJK@Z
?Lock@CPropertySetStorage@@IEAAXXZ
?Lock@CPropertyStorage@@AEAAJXZ
?Lock@CSSMappedStream@@UEAAJE@Z
?Lock@CriticalSection@Wrappers@WRL@Microsoft@@QEAA?AV?$SyncLockT@UCriticalSectionTraits@HandleTraits@Wrappers@WRL@Microsoft@@@Details@234@XZ
?LockConnection@CProxyManagerImpl@CDdeObject@@UEAAJHH@Z
?LockContainer@COleItemContainerImpl@CDdeObject@@UEAAJH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHH@Z
?LockExclusive@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAHH@Z
?LockExclusive@XSLOCK@@QEAAHH@Z
?LockRegion@CAbstractStream@@MEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CExposedStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CMemBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CNtfsStream@@W7EAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CPictioFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CSimpStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRegion@CStreamDummy@@UEAAJT_ULARGE_INTEGER@@0K@Z
?LockRunning@CDefLink@@UEAAJHH@Z
?LockRunning@CDefObject@@UEAAJHH@Z
?LockServer@CClassObj@@UEAAJH@Z
?LockServer@CDefClassFactory@@UEAAJH@Z
?LockServer@CDocfileUnmarshalFactory@@UEAAJH@Z
?LockServer@CMonikerFactory@@UEAAJH@Z
?LockServer@CStdClassFactory@@UEAAJH@Z
?LockServer@ComPsClassFactory@@UEAAJH@Z
?LockShared@XSLOCK@@QEAAHH@Z
?LogErr@@YAXPEAUIErrorLog@@PEBGJ@Z
?LogLoadOrFree@@YAXW4LoadOrFreeWhat@@W4LoadOrFreeWhy@@PEAUHINSTANCE__@@PEBGK@Z
?LogMacPictMsg@@YAXK@Z
?Lookup@?$CMap@PEAGAEAPEAGKAEAK@@QEBAHAEAPEAGAEAK@Z
?Lookup@CDIFat@@QEAAJKPEAK@Z
?Lookup@CDdeConnectionTable@@QEAAJGPEAK@Z
?Lookup@CHashTable@@IEAAPEAUSHashChain@@KPEBX@Z
?Lookup@CMapKeyToValue@@QEBAHPEAXI0@Z
?MTACallCancellationWorker@ClipboardDataObjectTask@@CAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?MTATaskCleanupWorker@ClipboardDataObjectTask@@CAXPEAU_TP_CALLBACK_INSTANCE@@PEAXPEAU_TP_TIMER@@@Z
?MWrite@CMStream@@QEAAJKH_KPEBXKPEAVCStreamCache@@PEAK@Z
?M_HPRES@CEMfObject@@AEAAPEAUHENHMETAFILE__@@XZ
?MakeCopyFlags@CExposedDocFile@@CAKKPEBU_GUID@@@Z
?MakeDDEData@@YAHPEAXHPEAPEAXH@Z
?MakeDataAtom@@YAGGH@Z
?MakeFileMapAddressValidWorker@CFileStream@@AEAAJKK@Z
?MakeFileStub@CFileStream@@AEAAJXZ
?MakeGlobal@@YAPEAXPEAD@Z
?MakeItemData@@YAPEAXPEAUDDEPOKE@@PEAXG@Z
?Map@CExposedStream@@UEAAXEPEAPEAX@Z
?Map@CNFFMappedStream@@UEAAXEPEAPEAX@Z
?Map@CSSMappedStream@@UEAAXEPEAPEAX@Z
?MapCFToFormatetc@@YAJPEAUHWND__@@IPEAUtagFORMATETC@@@Z
?MapNameToPropId@@YAKPEAVCPropertySetStream@@GQEBUtagPROPSPEC@@KKKPEAJ@Z
?MapView@CFileStream@@AEAAJ_KKK@Z
?MarkSect@CFat@@AEAAJPEAUSGetFreeStruct@@@Z
?Marshal@CallFrame@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@DISPATCH_CLIENT_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?Marshal@DISPATCH_SERVER_FRAME@@UEAAJPEAU__MIDL_ICallFrame_0004@@W4tagMSHLFLAGS@@PEAXKPEAK33@Z
?MarshalInterface@CClassMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CDocfileUnmarshalFactory@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CExposedDocFile@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CExposedStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CMarshalImplPStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CPicture@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CPointerMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CSimpStorage@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@CSimpStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalInterface@FtmBase@WRL@Microsoft@@UEAAJPEAUIStream@@AEBU_GUID@@PEAXK2K@Z
?MarshalParam@CallFrame@@QEAAXAEAU_MIDL_STUB_MESSAGE@@KAEBUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PEAE@Z
?MatchFormatetc@CClipDataObject@@AEAA?AW4FormatMatchFlag@@PEAUtagFORMATETC@@HPEAW4tagTYMED@@@Z
?MaybeCreateDocWindow@@YAJGGPEAUHWND__@@0@Z
?MaybeUnlaunchApp@CDdeObject@@AEAAJXZ
?MemoryIncrement@CallFrame@@QEAAPEAEPEAEPEBEH@Z
?MfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?MfCallbackFuncForGetColorSet@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?MfToPres@@YAJPEAXPEAVCPres@@@Z
?MnkMultiToUnicode@@YAJPEADAEAPEAGKAEAGI@Z
?MnkUnicodeToMulti@@YAJPEAGGAEAPEADAEAGAEAH@Z
?ModeToDFlags@@YAKK@Z
?ModeToNtFlags@CNtfsStorage@@CAJKKHPEAK0000@Z
?MonikerBindToObject@CBindHost@@UEAAJPEAUIMoniker@@PEAUIBindCtx@@PEAUIBindStatusCallback@@AEBU_GUID@@PEAPEAX@Z
?MonikerBindToStorage@CBindHost@@UEAAJPEAUIMoniker@@PEAUIBindCtx@@PEAUIBindStatusCallback@@AEBU_GUID@@PEAPEAX@Z
?MonikerDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?MonikerLoadTypeLib@@YAJPEBGPEAPEAUITypeLib@@@Z
?MoniterBrokeredClipboardOwner@@YAXK@Z
?MoveElementTo@CExpParameterValidate@@SAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CExposedDocFile@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CNtfsStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CNtfsStorageForPropSetStg@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementTo@CSimpStorage@@UEAAJPEBGPEAUIStorage@@0K@Z
?MoveElementWorker@CExposedDocFile@@AEAAJPEBGPEAUIStorage@@0K@Z
?MoveSect@CMStream@@QEAAJKKK@Z
?Multiply@?$CMultiplier@_KVCCallDisposition@Rtl@BUCL@@@BUCL@@SA?AVCCallDisposition@Rtl@2@_K0AEA_K@Z
?NFFOpen@@YAJPEBGKKHPEAXAEBU_GUID@@PEAPEAX@Z
?NFFOpenOnHandle@@YAJHKKPEAPEAXAEBU_GUID@@0@Z
?NameCompare@CDirectory@@SAHPEBVCDfName@@0@Z
?NameFromStmix@@YAPEAGK@Z
?NameInSNB@@YAJPEBVCDfName@@PEAPEAG@Z
?NativeToStorage@@YAJPEAUIStorage@@PEAX@Z
?NdrClientZeroOut@@YAXPEAU_MIDL_STUB_MESSAGE@@PEBEPEAE@Z
?NewAssoc@?$CMap@PEAGAEAPEAGKAEAK@@IEAAPEAUCAssoc@1@XZ
?NewAssoc@CMapKeyToValue@@AEAAPEAUCAssoc@1@IPEAXI0@Z
?NewCNtfsStream@CNtfsStorage@@QEAAJPEBGKHPEAPEAVCNtfsStream@@@Z
?NewFcr@CFont@@QEAAJPEAH@Z
?NewFontCharSetOfFaceCallBack@@YAHPEAUtagENUMLOGFONTEXW@@PEAUtagNEWTEXTMETRICEXW@@HPEAUFONTFACEDATA@@@Z
?Next@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJKPEAUtagCATEGORYINFO@@PEAK@Z
?Next@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CCompositeMonikerEnum@@UEAAJKPEAPEAUIMoniker@@PEAK@Z
?Next@CEnumCategories@@UEAAJKPEAUtagCATEGORYINFO@@PEAK@Z
?Next@CEnumCategoriesOfClass@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumClassesOfCategories@@UEAAJKPEAU_GUID@@PEAK@Z
?Next@CEnumConnectionsImpl@@UEAAJKPEAUtagCONNECTDATA@@PEAK@Z
?Next@CEnumFmt10@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFmt@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFormatEtc@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumFormatEtcDataArray@@UEAAJKPEAUtagFORMATETC@@PEAK@Z
?Next@CEnumSTATDATA@@UEAAJKPEAUtagSTATDATA@@PEAK@Z
?Next@CEnumSTATPROPBAG@@UEAAJKPEAUtagSTATPROPBAG@@PEAK@Z
?Next@CEnumSTATPROPSETSTG@@UEAAJKPEAUtagSTATPROPSETSTG@@PEAK@Z
?Next@CEnumSTATPROPSTG@@UEAAJKPEAUtagSTATPROPSTG@@PEAK@Z
?Next@CEnumStatData@@UEAAJKPEAUtagSTATDATA@@PEAK@Z
?Next@CEnumVerb@@EEAAJKPEAUtagOLEVERB@@PEAK@Z
?Next@CExpParameterValidate@@SAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CExposedIterator@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CNtfsEnumSTATSTG@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?Next@CPtrCache@@QEAAHPEAPEAX@Z
?Next@CRotMonikerEnum@@UEAAJKPEAPEAUIMoniker@@PEAK@Z
?Next@CSimpEnumSTATSTG@@UEAAJKPEAUtagSTATSTG@@PEAK@Z
?NextAt@CNtfsSTATSTGArray@@QEAAJKPEAUtagSTATSTG@@PEAK@Z
?NextAt@CSTATPROPBAGArray@@QEAAJKPEAUtagSTATPROPBAG@@PEAK@Z
?NextAt@CStatArray@@QEAAJKPEAUtagSTATPROPSTG@@PEAK@Z
?NextFSI@@YAPEAU_FILE_STREAM_INFORMATION@@PEBU1@@Z
?NoItemConnections@CDefClient@@QEAAJXZ
?NoteChangeTime@CRunningObjectTable@@UEAAJKPEAU_FILETIME@@@Z
?Notify@CAsyncConnection@@QEAAJJPEAUILockBytes@@PEAVCPerContext@@PEAVCSafeSem@@@Z
?Notify@CFontEventsCP@@QEAAJJ@Z
?Notify@CNotifyCP@@QEAAJJ@Z
?NotifySinks@CConnectionPoint@@UEAAJKKHJ@Z
?NtStatusToScode@@YAJJ@Z
?Ole10_CLSIDFromString@@YAJPEBGPEAU_GUID@@H@Z
?Ole10_ParseMoniker@@YAJPEAUIMoniker@@PEAPEAG1@Z
?Ole10_StringFromCLSID@@YAJAEBU_GUID@@PEAGH@Z
?Ole232DllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?OleAlloc@@YAPEAXK@Z
?OleCallBack@CDdeObject@@QEAAJHPEAVDDE_CHANNEL@@@Z
?OleCheckCallerForClipboardAccess@@YAJPEAH@Z
?OleFlushClipboardInternal@@YAJPEBG_N1@Z
?OleFree@@YAXPEAX@Z
?OleGetClipboardData@CClipDataObject@@AEAAJIPEAPEAX@Z
?OleGetClipboardInternal@@YAJPEAPEAUIDataObject@@PEBG_NPEAK@Z
?OleInternalOriginateError@@YAXJG@Z
?OleIsClipboardFormatAvailable@CClipDataObject@@AEAAHI@Z
?OleIsCurrentClipboardInternal@@YAJPEAUIDataObject@@PEBG_N@Z
?OleLoadWithoutBinding@@YAJPEAUIStorage@@HAEBU_GUID@@PEAUIOleClientSite@@PEAPEAXPEAX@Z
?OleOpenClipboard@@YAJPEAUHWND__@@PEAPEAU1@@Z
?OleRealloc@@YAPEAXPEAXK@Z
?OleSetClipboardInternal@@YAJPEAUIDataObject@@0PEAPEAXPEBGK@Z
?OnAck@CDdeObject@@QEAAHPEAVDDE_CHANNEL@@_J@Z
?OnActivate@CPageHolder@@IEAAIPEAUtagNMHDR@@@Z
?OnCall@LEGACY_INTERCEPTOR@@UEAAJPEAUICallFrame@@@Z
?OnClose@CAdvSinkImpl@CDefLink@@UEAAXXZ
?OnClose@CAdvSinkImpl@CDefObject@@UEAAXXZ
?OnClose@CAdviseSinkImpl@CDefClient@@UEAAXXZ
?OnClose@CAdviseSinkImpl@COleCache@@UEAAXXZ
?OnCodeInstallProblem@DefaultIBindStatusCallback@@UEAAJKPEBG0K@Z
?OnContinue@CSyncSync@@UEAAJPEAH@Z
?OnCrash@COleCache@@QEAAJXZ
?OnData@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAXG@Z
?OnDataAvailable@CBindStatusCallback@@UEAAJKKPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataAvailable@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAXG@Z
?OnDataAvailable@DefaultIBindStatusCallback@@UEAAJKKPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefLink@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdvSinkImpl@CDefObject@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@CDefClient@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDataChange@CAdviseSinkImpl@COleCache@@UEAAXPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?OnDeactivate@CPageHolder@@IEAAIPEAUtagNMHDR@@@Z
?OnDisconnect@CRunningObjectTable@@UEAAXPEAX@Z
?OnEnterMenuMode@CFrameFilter@@QEAAXXZ
?OnExtentChange@CAdviseSinkImpl@CDefClient@@UEAAXKPEAUtagSIZE@@@Z
?OnHelp@CPageHolder@@IEAAHPEAUtagNMHDR@@@Z
?OnInitAck@CDdeObject@@QEAAXPEAVDDE_CHANNEL@@PEAUHWND__@@@Z
?OnLowResource@CBindStatusCallback@@UEAAJK@Z
?OnLowResource@DefaultIBindStatusCallback@@UEAAJK@Z
?OnMessage@CFrameFilter@@QEAA_JI_K_J@Z
?OnNextState@CSyncSync@@UEAAJGHPEAUISyncAdvise@@@Z
?OnObjectAvailable@CBindStatusCallback@@UEAAJAEBU_GUID@@PEAUIUnknown@@@Z
?OnObjectAvailable@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAUIUnknown@@@Z
?OnProgress@CBindStatusCallback@@UEAAJKKKPEBG@Z
?OnProgress@DefaultIBindStatusCallback@@UEAAJKKKPEBG@Z
?OnRename@CAdvSinkImpl@CDefLink@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdvSinkImpl@CDefObject@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@CDefClient@@UEAAXPEAUIMoniker@@@Z
?OnRename@CAdviseSinkImpl@COleCache@@UEAAXPEAUIMoniker@@@Z
?OnRun@COleCache@@UEAAJPEAUIDataObject@@@Z
?OnSave@CAdvSinkImpl@CDefLink@@UEAAXXZ
?OnSave@CAdvSinkImpl@CDefObject@@UEAAXXZ
?OnSave@CAdviseSinkImpl@CDefClient@@UEAAXXZ
?OnSave@CAdviseSinkImpl@COleCache@@UEAAXXZ
?OnShareFinished@CSyncSync@@UEAAJXZ
?OnShareWait@CSyncSync@@UEAAJK@Z
?OnShowWindow@COleClientSiteImpl@CDefClient@@UEAAJH@Z
?OnStartBinding@CBindStatusCallback@@UEAAJKPEAUIBinding@@@Z
?OnStartBinding@DefaultIBindStatusCallback@@UEAAJKPEAUIBinding@@@Z
?OnStatusChange@CPageHolder@@UEAAJK@Z
?OnStop@COleCache@@UEAAJXZ
?OnStopBinding@CBindStatusCallback@@UEAAJJPEBG@Z
?OnStopBinding@DefaultIBindStatusCallback@@UEAAJJPEBG@Z
?OnSysCommand@CFrameFilter@@QEAA_J_K_J@Z
?OnTerminate@CDdeObject@@QEAAJPEAVDDE_CHANNEL@@PEAUHWND__@@@Z
?OnTimer@CDdeObject@@QEAAXPEAVDDE_CHANNEL@@@Z
?OnViewChange@CAdvSinkImpl@CDefLink@@UEAAXKJ@Z
?OnViewChange@CAdvSinkImpl@CDefObject@@UEAAXKJ@Z
?OnViewChange@CAdviseSinkImpl@CDefClient@@UEAAXKJ@Z
?OnViewChange@CAdviseSinkImpl@COleCache@@UEAAXKJ@Z
?OnWalkInterface@InterfaceWalkerFree@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?OnWalkInterface@SSimpleWalker@@UEAAJAEBU_GUID@@PEAPEAXHH@Z
?Open@CExposedStream@@UEAAXPEAVCPropertySetStream@@PEAJ@Z
?Open@CNFFMappedStream@@UEAAXPEAVCPropertySetStream@@PEAJ@Z
?Open@CPropertyBagEx@@UEAAJPEAUIUnknown@@PEBGU_GUID@@KAEBU3@PEAPEAU2@@Z
?Open@CPropertySetStorage@@UEAAJAEBU_GUID@@KPEAPEAUIPropertyStorage@@@Z
?Open@CPropertySetStream@@QEAAXPEBU_GUID@@0KPEAKGKPEAJ@Z
?Open@CPropertyStorage@@QEAAJPEAUIStorage@@AEBU_GUID@@KK@Z
?Open@CPropertyStorage@@QEAAJPEAUIStream@@AEBU_GUID@@KKH@Z
?Open@CPubMappedStream@@QEAAXPEAVCPropertySetStream@@PEAJ@Z
?Open@CSSMappedStream@@UEAAXPEAVCPropertySetStream@@PEAJ@Z
?OpenClassesRootSpecial@CEnumClassesOfCategories@@AEAAJKPEAPEAUHKEY__@@@Z
?OpenControlStream@CNtfsStorage@@IEAAJH@Z
?OpenEntry@CExposedDocFile@@AEAAJPEBVCDfName@@KKPEAPEAX@Z
?OpenHKey@CEnumFmt@@UEAAJPEAPEAUHKEY__@@@Z
?OpenKeyFromUserHive@CEnumClassesOfCategories@@AEAAJPEAXPEBGKPEAPEAUHKEY__@@@Z
?OpenLongFileA@@YAHPEBDPEAU_OFLONGSTRUCTA@@I@Z
?OpenNtFileHandle@CNtfsStorage@@CAJAEBU_UNICODE_STRING@@PEAX1KKHPEAPEAX@Z
?OpenNtStream@CNtfsStorage@@AEAAJAEBVCNtfsStreamName@@KKHPEAPEAX@Z
?OpenOrCreateStream@CStmBufWrite@@QEAAJPEAUIStorage@@PEBG@Z
?OpenPropStg@CPropertyBagEx@@AEAAJK@Z
?OpenSharedFileMapping@@YAPEAXPEAGKPEAPEAXK@Z
?OpenStorage@CExpParameterValidate@@SAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CExposedDocFile@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CLimitedWritableStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CNtfsStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CNtfsStorageForPropSetStg@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CReadOnlyStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStorage@CSimpStorage@@UEAAJPEBGPEAUIStorage@@KPEAPEAGKPEAPEAU2@@Z
?OpenStream@CCacheStream@@UEAAJKPEAPEAUIStream@@@Z
?OpenStream@CExpParameterValidate@@SAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CExposedDocFile@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CLimitedWritableStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CNtfsStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CNtfsStorageForPropSetStg@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CReadOnlyStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CSimpStorage@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CSimpStorageOpen@@UEAAJPEBGPEAXKKPEAPEAUIStream@@@Z
?OpenStream@CStmBufRead@@QEAAJPEAUIStorage@@PEBG@Z
?OpenUpdateStream@CNFFMappedStream@@AEAAJH@Z
?OurRtlAllocateStringRoutine@?A0x8d35f711@@YAPEAX_K@Z
?OurRtlFreeStringRoutine@?A0x8d35f711@@YAXPEAX@Z
?OurRtlReallocateStringRoutine@?A0x8d35f711@@YAPEAX_KPEAX@Z
?OutCopy@CallFrame@@QEAAXPEAE0PEBE@Z
?OutInit@CallFrame@@QEAAXPEAV1@PEAPEAE1PEBE@Z
?OutZero@CallFrame@@QEAAXPEAEPEBEH@Z
?PBToSafeArray@@YAJKPEBEPEAPEAUtagSAFEARRAY@@@Z
?PageTranslateAccelerator@CPageHolder@@QEAAJPEAUtagMSG@@H@Z
?ParseClassID@@YAJPEBGPEAKPEAU_GUID@@@Z
?ParseDisplayName@CAntiMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CBaseMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CClassMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CClassMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CCompositeMoniker@@EEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CFileMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CFileMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CItemMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CLUAMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CObjrefMonikerFactory@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@COleItemContainerImpl@CDdeObject@@UEAAJPEAUIBindCtx@@PEAGPEAKPEAPEAUIMoniker@@@Z
?ParseDisplayName@CPackagerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CPointerMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?ParseDisplayName@CSessionMoniker@@UEAAJPEAUIBindCtx@@PEAUIMoniker@@PEAGPEAKPEAPEAU3@@Z
?PartialWrite@CTransactedStream@@AEAAJKKPEBEGG@Z
?PeekOneMessage@@YAHPEAUtagMSG@@PEAUHWND__@@I@Z
?Peel@@YAHPEAGGPEAPEAGK@Z
?PersistDataObjectToHGlobal@@YAPEAXPEAUIDataObject@@@Z
?PictSetSize@CPicture@@QEAAJXZ
?PictureChanged@CPicture@@UEAAJXZ
?PictureChanged@CPicture@@W7EAAJXZ
?PixelsFromHimetric@@YAXPEAUtagSIZE@@@Z
?Poke@CDdeObject@@AEAAJGPEAX@Z
?PokeData@CDefClient@@QEAAJPEAUHWND__@@GPEAX@Z
?PokeStdItems@CDefClient@@QEAAJPEAUHWND__@@GPEAXH@Z
?Pop@CCompositeMonikerEnum@@AEAAPEAUIMoniker@@XZ
?PopDc@CMfObject@@AEAAHXZ
?PopSList@@YAPEAUtagPageEntry@@PEAU1@PEAVCOleStaticMutexSem@@@Z
?PostAckToClient@@YAHPEAUHWND__@@0GK@Z
?PostMessageToClient@@YAHPEAUHWND__@@I_K_J@Z
?PostMessageToClientWithReply@@YAHPEAUHWND__@@I_K_JI@Z
?PostSysCommand@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@PEBDHH@Z
?PrClosePropertySet@@YAJPEAVCPropertySetStream@@@Z
?PrCreatePropertySet@@YAJPEAVIMappedStream@@GPEBU_GUID@@1PEAVPMemoryAllocator@@KPEAKPEAG3PEAPEAVCPropertySetStream@@@Z
?PrEnumerateProperties@@YAJPEAVCPropertySetStream@@KPEAK1QEAUtagPROPSPEC@@QEAUtagSTATPROPSTG@@@Z
?PrFlushPropertySet@@YAJPEAVCPropertySetStream@@@Z
?PrPropertySetNameToGuid@@YAJKQEBGPEAU_GUID@@@Z
?PrQueryProperties@@YAJPEAVCPropertySetStream@@KPEBUtagPROPSPEC@@PEAK2PEAUtagPROPVARIANT@@2@Z
?PrQueryPropertyNames@@YAJPEAVCPropertySetStream@@KPEBKQEAPEAG@Z
?PrSetProperties@@YAJPEAVCPropertySetStream@@KKQEBUtagPROPSPEC@@PEAGQEAKPEAPEAU_INDIRECTPROPERTY@@QEBUtagPROPVARIANT@@@Z
?PrSetPropertyNames@@YAJPEAVCPropertySetStream@@KPEBKQEBQEBG@Z
?PrSetPropertySetClassId@@YAJPEAVCPropertySetStream@@PEBU_GUID@@@Z
?PreTranslateAccelerator@COlePropertySheet@@QEAAJPEAUtagMSG@@H@Z
?PrepareForOverwrite@CPubDocFile@@IEAAJXZ
?PrivDragDrop@@YAJPEAUHWND__@@W4tagDRAGOP@@PEAUtagInterfaceData@@PEAUIDataObject@@KU_POINTL@@PEAK0PEAPEAX@Z
?PrivDragDrop@CPrivDragDrop@@UEAAJW4CallerLocalityIndicator@@PEAUHWND__@@PEAUtagInterfaceData@@KKU_POINTL@@PEAKKPEAUIDataObject@@1@Z
?PrivHeapAlloc@@YAPEAXPEAXK_K@Z
?PrivHeapFree@@YAHPEAXK0@Z
?PrivateMemFree@@YAXPEAX@Z
?ProbeStreamToDetermineIfWriteable@CPropertyStorage@@AEAAHXZ
?PropDupClipData@@YAPEAUtagCLIPDATA@@PEBU1@@Z
?PropVariantChangeType@@YAJPEAUtagPROPVARIANT@@PEBU1@KGG@Z
?PropertyLengthNoEH@@YAKPEBUtagSERIALIZEDPROPERTYVALUE@@KPEAJ@Z
?PropertyRequiresConversion@CPropertyBagEx@@AEAAHG@Z
?PropertyToVariant_BufferToStream@@YAJPEBEIPEAPEAUIStream@@@Z
?PropertyToVariant_FixIndirect@@YAJPEBEKPEAUtagPROPVARIANT@@PEAVPMemoryAllocator@@@Z
?PropertyToVariant_Wrapper@@YAKPEBUtagSERIALIZEDPROPERTYVALUE@@KIPEAVPMemoryAllocator@@IPEAUtagPROPVARIANT@@PEAKPEAHPEAJ@Z
?ProxyInitialize@@YAJPEAU__MIDL_ICallFrame_0004@@PEAUMarshallingChannel@@PEAU_RPC_MESSAGE@@PEAU_MIDL_STUB_MESSAGE@@PEBU_MIDL_STUB_DESC@@K@Z
?ProxyPreCheck@DISPATCH_CLIENT_FRAME@@QEAAJXZ
?PrpConvertToMultiByte@@YAXPEBGKGPEAPEADPEAKPEAJ@Z
?PrpConvertToUnicode@@YAXPEBDKGPEAPEAGPEAKPEAJ@Z
?Push@CCompositeMonikerEnum@@AEAAHPEAVCCompositeMoniker@@@Z
?Push@CleanupStack@@QEAAJPEAXPEAVPMemoryAllocator@@@Z
?PushDc@CMfObject@@AEAAHXZ
?PutPropVariantDataIntoSafeArray@@YAJPEAUtagSAFEARRAY@@PEBUtagPROPVARIANT@@H@Z
?PutUNICODEProgID@@YAJPEAVCompObjStmData@@PEAG@Z
?PutUNICODEUserType@@YAJPEAVCompObjStmData@@PEAG@Z
?QueryFontInfo@CFont@@QEAAJPEAUHFONT__@@PEAUtagTEXTMETRICW@@QEAG@Z
?QueryFormatSupport@CCacheNode@@AEAAHPEAUIDataObject@@@Z
?QueryGetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDefLink@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDefObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@@Z
?QueryGetData@CFont@@UEAAJPEAUtagFORMATETC@@@Z
?QueryInterface@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClass@U?$InterfaceList@UIClipboardBroker@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClass@U?$InterfaceList@UIClipboardBrokerInternal@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAbstractMarshalingStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAbstractStream@@MEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdvSinkImpl@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdvSinkImpl@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdviseSinkImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAdviseSinkImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAntiMoniker@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAntiMoniker@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CAsyncConnection@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBaseMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBaseMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindCtx@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindHost@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBindStatusCallback@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBrokeredClipDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CBrokeredClipDataObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheDataImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheUnkImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCacheViewImpl@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassMoniker@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClassObj@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipClientDataWrapper@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CClipDataObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCat@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CComCat@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMoniker@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMoniker@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CCompositeMonikerEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CConnectionPoint@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CContinue@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDAHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDataObjectImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDdeServerCallMgr@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefLink@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDefObject@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDelayUnlockContainer@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDocfileUnmarshalFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDocfileUnmarshalFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDragDataObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CDropTarget@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEMfObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumCategories@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumCategoriesOfClass@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumClassesOfCategories@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumConnectionsImpl@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFmt@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFormatEtc@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumFormatEtcDataArray@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATDATA@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATPROPBAG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATPROPSETSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumSTATPROPSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumStatData@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CEnumVerb@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExpParameterValidate@@SAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WDI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WEA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WEI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedDocFile@@WFA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedIterator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedIterator@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CExposedStream@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFileStream@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFillLockBytes@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFillLockBytes@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFillLockBytes@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFont@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CFontEventsCP@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGdiCustodian@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CGenObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInnerUnk@CComCat@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CInterfaceFromWindowProp@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CItemMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CItemMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLUAMoniker@@WDA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CLimitedStreamBase@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMarshalImplPStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMemBytes@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMfObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMonikerFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CMonikerFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNFFMappedStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNFFTreeMutex@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNotifyCP@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsEnumSTATSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorage@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorage@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStorageForPropSetStg@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CNtfsStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COAHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CObjrefMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleCache@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleClientSiteImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleItemContainerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@COleObjectImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPackagerMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPageHolder@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPersistStgImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPictioFileStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPicture@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPointerMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivDragDrop@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CDefLink@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPrivUnknown@CDefObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertyBagEx@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertyBagEx@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertySetStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPropertyStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CProxyManagerImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CPunkForRelease@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CReadOnlyStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRotMonikerEnum@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRpcStubBufferImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRunningObjectTable@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CRunningObjectTable@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSSMappedStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSessionMoniker@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpEnumSTATSTG@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStorage@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStorage@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStorage@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStream@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSimpStream@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSmAllocator@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStdClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CStreamDummy@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CSyncSync@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CTrackingCompositeMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CTrackingFileMoniker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnknownImpl@CDdeObject@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnknownImpl@CDefClient@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUnkownOnlyWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CUrlMonWrapper@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CallFrame@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CallFrame@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ComPsClassFactory@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@ComPsClassFactory@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@CsCatInfo@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DDE_CHANNEL@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DDE_CHANNEL@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DefaultIBindStatusCallback@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@DefaultIBindStatusCallback@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@EEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@G7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@Interceptor@@GCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@InterfaceWalkerFree@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_FRAME@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WBI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WCA@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WCI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@LEGACY_INTERCEPTOR@@WDI@EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@MarshallingChannel@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@MarshallingChannel@@W7EAAJAEBU_GUID@@PEAPEAX@Z
?QueryInterface@SSimpleWalker@@UEAAJAEBU_GUID@@PEAPEAX@Z
?QueryPropertyNames@CPropertySetStream@@QEAAEKPEBKQEAPEAGPEAJ@Z
?QueryPropid@CPropertySetStream@@QEAAKPEBGPEAJ@Z
?QueryRevokeClassFactory@CDDEServer@@QEAAHXZ
?QueryTextMetrics@CFont@@UEAAJPEAUtagTEXTMETRICW@@@Z
?ReOpen@CExposedStream@@UEAAXPEAPEAXPEAJ@Z
?ReOpen@CNFFMappedStream@@UEAAXPEAPEAXPEAJ@Z
?ReOpen@CPropertySetStream@@QEAAKPEAJ@Z
?ReOpen@CSSMappedStream@@UEAAXPEAPEAXPEAJ@Z
?Read@CBaseMInterfacePointerMarshalingStream@@UEAAJPEAXKPEAK@Z
?Read@CBaseMarshalingStreamOnBuffer@@UEAAJPEAXKPEAK@Z
?Read@CExpParameterValidate@@SAJPEAXKPEAK@Z
?Read@CExposedStream@@UEAAJPEAXKPEAK@Z
?Read@CLimitedStreamBase@@UEAAJPEAXKPEAK@Z
?Read@CNFFMappedStream@@QEAAXPEAXKPEAK@Z
?Read@CNtfsStream@@UEAAJPEAXKPEAK@Z
?Read@CPictioFileStream@@UEAAJPEAXKPEAK@Z
?Read@CPropertyBagEx@@UEAAJPEBGPEAUtagVARIANT@@PEAUIErrorLog@@@Z
?Read@CSimpStream@@UEAAJPEAXKPEAK@Z
?Read@CSimpStreamOpen@@UEAAJPEAXKPEAK@Z
?Read@CStmBufRead@@QEAAJPEAXK@Z
?Read@CStreamDummy@@UEAAJPEAXKPEAK@Z
?ReadAnsiStringStream@@YAJPEAUIStream@@AEAPEADAEAG@Z
?ReadArrayWorkerNoSwap@SerializedPropertyReader@@AEAAJPEAXKK@Z
?ReadAt@CDirectStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt@CExpParameterValidate@@SAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CFileStream@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CMemBytes@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?ReadAt@CPubStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt@CTransactedStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt@PSStream@@QEAAJ_KPEAXKPEAK@Z
?ReadAt_FromFile@CFileStream@@AEAAJ_KPEAXKPEAK@Z
?ReadAt_FromMap@CFileStream@@AEAAJKPEAXKPEAK@Z
?ReadCompObjStm@@YAJPEAUIStorage@@PEAVCompObjStmData@@@Z
?ReadFileStreamInfo@CNtfsSTATSTGArray@@AEAAJPEAX@Z
?ReadFromStream@CProperty@@QEAAHPEAUIStream@@@Z
?ReadFromStream@CPropertySection@@QEAAHPEAUIStream@@T_LARGE_INTEGER@@@Z
?ReadFromStream@CPropertySet@@QEAAHPEAUIStream@@@Z
?ReadHYPER@CarefulBufferReader@@QEAA_JXZ
?ReadHYPERNA@CarefulBufferReader@@QEAA_JXZ
?ReadMap@CDeltaList@@AEAAJPEAKK0@Z
?ReadMultiple@CPropertyBagEx@@UEAAJKQEBQEBGQEAUtagPROPVARIANT@@PEAUIErrorLog@@@Z
?ReadMultiple@CPropertyStorage@@UEAAJKQEBUtagPROPSPEC@@QEAUtagPROPVARIANT@@@Z
?ReadNameDictFromStream@CPropertySection@@QEAAHPEAUIStream@@@Z
?ReadProp@@YAJPEAUIPropertyBag@@PEBGPEAUtagVARIANT@@PEAUIErrorLog@@@Z
?ReadPropertyNames@CPropertyStorage@@UEAAJKQEBKQEAPEAG@Z
?ReadSafeArray@SerializedPropertyReader@@QEAAJPEAKPEAPEBUtagSAFEARRAYBOUND@@@Z
?ReadStorageProperties@@YAJPEAUIStorage@@PEAU_GUID@@@Z
?ReadULONG@CarefulBufferReader@@QEAAKXZ
?ReadULONGNA@CarefulBufferReader@@QEAAKXZ
?ReadUSHORTNA@CarefulBufferReader@@QEAAGXZ
?ReadVarType@SerializedPropertyReader@@QEAAJPEAG@Z
?ReadWorkerNoSwap@SerializedPropertyReader@@AEAAJPEAXK@Z
?Realloc@CErrorSmAllocator@@UEAAPEAXPEAX_K@Z
?Realloc@CSmAllocator@@UEAAPEAXPEAX_K@Z
?Receive2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Receive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@KPEAK@Z
?Receive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?RectInPixelsToHimetric@@YAXPEAUHDC__@@PEAUtagRECT@@1@Z
?RecursiveRegDeleteKey@@YAJPEAUHKEY__@@PEAD@Z
?Reduce@CBaseMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CClassMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CCompositeMoniker@@EEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CFileMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?Reduce@CPackagerMoniker@@UEAAJPEAUIBindCtx@@KPEAPEAUIMoniker@@1@Z
?RefDec@CUnknown@@QEAAKXZ
?RegHelpResumeImpersonate@@YAXPEAX@Z
?RegHelpSuspendImpersonate@@YAJPEAPEAX@Z
?RegReadDefValue@@YAJPEAUHKEY__@@PEAGPEAPEAG@Z
?Register@AppRegistration@@QEAAJXZ
?Register@CRunningObjectTable@@UEAAJKPEAUIUnknown@@PEAUIMoniker@@PEAK@Z
?Register@ClassRegistration@@QEAAJXZ
?RegisterAsync@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterAsync@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUIAsyncManager@@@Z
?RegisterCategories@CComCat@@UEAAJKQEAUtagCATEGORYINFO@@@Z
?RegisterClassImplCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?RegisterClassReqCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?RegisterClassW@@YAJPEBGPEBUtagCLASS_DATA@@@Z
?RegisterClassXXXCategories@CComCat@@AEAAJAEBU_GUID@@KQEAU2@PEBG@Z
?RegisterClipboardFormatIfNeeded@@YAJPEAG0@Z
?RegisterContainerBound@@YAJPEAUIBindCtx@@PEAUIOleItemContainer@@@Z
?RegisterItem@CDefClient@@AEAAJPEAGPEAPEAV1@H@Z
?RegisterObjectBound@CBindCtx@@UEAAJPEAUIUnknown@@@Z
?RegisterObjectParam@CBindCtx@@UEAAJPEAGPEAUIUnknown@@@Z
?RegisterSink@Interceptor@@EEAAJPEAUICallFrameEvents@@@Z
?RegisterSink@LEGACY_INTERCEPTOR@@UEAAJPEAUICallFrameEvents@@@Z
?RegisterUnregisterInterface@@YAJHUHREG@@AEBU_GUID@@PEBDPEBGJHH@Z
?RegisterUnregisterProxy@@YAJHPEAUHINSTANCE__@@PEAPEBUtagProxyFileInfo@@PEBU_GUID@@PEAPEBU3@3@Z
?RelativePathTo@CAntiMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CBaseMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CClassMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CCompositeMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CFileMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CItemMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CObjrefMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CPackagerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?RelativePathTo@CPointerMoniker@@UEAAJPEAUIMoniker@@PEAPEAU2@@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UINTERFACE_HELPER_CLSID@@@@QEAAKH@Z
?Release@?$CALLFRAME_CACHE_ENTRY@UTYPEINFOVTBL@@@@QEAAKH@Z
?Release@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAKXZ
?Release@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAKXZ
?Release@?$CWrapperBase@UIEnumFORMATETC@@@@UEAAKXZ
?Release@?$CWrapperBase@UIEnumSTATSTG@@@@UEAAKXZ
?Release@?$CWrapperBase@UIStorage@@@@UEAAKXZ
?Release@?$CWrapperBase@UIStream@@@@UEAAKXZ
?Release@?$CWrapperBase@UIUnknown@@@@UEAAKXZ
?Release@?$RuntimeClass@U?$InterfaceList@UIClipboardBroker@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClass@U?$InterfaceList@UIClipboardBrokerInternal@@VNil@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@UEAAKXZ
?Release@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@W7EAAKXZ
?Release@?$RuntimeClass@U?$InterfaceList@UIUnknown@@U?$InterfaceList@VFtmBase@WRL@Microsoft@@VNil@Details@23@@Details@WRL@Microsoft@@@Details@WRL@Microsoft@@U?$RuntimeClassFlags@$01@34@$00$0A@$0A@@Details@WRL@Microsoft@@WBA@EAAKXZ
?Release@CAbstractStream@@MEAAKXZ
?Release@CAdvSinkImpl@CDefLink@@UEAAKXZ
?Release@CAdvSinkImpl@CDefObject@@UEAAKXZ
?Release@CAdviseSinkImpl@CDefClient@@UEAAKXZ
?Release@CAdviseSinkImpl@COleCache@@UEAAKXZ
?Release@CAsyncConnection@@UEAAKXZ
?Release@CBaseMoniker@@UEAAKXZ
?Release@CBaseMoniker@@W7EAAKXZ
?Release@CBindCtx@@UEAAKXZ
?Release@CBindHost@@UEAAKXZ
?Release@CBindStatusCallback@@UEAAKXZ
?Release@CBindStatusCallback@@W7EAAKXZ
?Release@CBrokeredClipDataObject@@UEAAKXZ
?Release@CBrokeredClipDataObject@@W7EAAKXZ
?Release@CCacheDataImpl@COleCache@@UEAAKXZ
?Release@CCacheStream@@UEAAKXZ
?Release@CCacheUnkImpl@COleCache@@UEAAKXZ
?Release@CCacheViewImpl@COleCache@@UEAAKXZ
?Release@CClassMoniker@@UEAAKXZ
?Release@CClassMoniker@@W7EAAKXZ
?Release@CClassMoniker@@WBA@EAAKXZ
?Release@CClassObj@@UEAAKXZ
?Release@CClipClientDataWrapper@@UEAAKXZ
?Release@CClipClientDataWrapper@@W7EAAKXZ
?Release@CClipClientDataWrapper@@WBA@EAAKXZ
?Release@CClipClientDataWrapper@@WBI@EAAKXZ
?Release@CClipDataObject@@UEAAKXZ
?Release@CClipDataObject@@W7EAAKXZ
?Release@CComCat@@UEAAKXZ
?Release@CComCat@@W7EAAKXZ
?Release@CCompositeMonikerEnum@@UEAAKXZ
?Release@CConnectionPoint@@UEAAKXZ
?Release@CContextList@@QEAAXXZ
?Release@CContinue@@UEAAKXZ
?Release@CDAHolder@@UEAAKXZ
?Release@CDataObjectImpl@CDdeObject@@UEAAKXZ
?Release@CDdeServerCallMgr@@UEAAKXZ
?Release@CDdeServerCallMgr@@W7EAAKXZ
?Release@CDdeServerCallMgr@@WBA@EAAKXZ
?Release@CDefClassFactory@@UEAAKXZ
?Release@CDefLink@@UEAAKXZ
?Release@CDefLink@@W7EAAKXZ
?Release@CDefLink@@WBA@EAAKXZ
?Release@CDefLink@@WBI@EAAKXZ
?Release@CDefLink@@WCA@EAAKXZ
?Release@CDefObject@@UEAAKXZ
?Release@CDefObject@@W7EAAKXZ
?Release@CDefObject@@WBA@EAAKXZ
?Release@CDefObject@@WBI@EAAKXZ
?Release@CDefObject@@WCA@EAAKXZ
?Release@CDelayUnlockContainer@@UEAAKXZ
?Release@CDfMutex@@QEAAXXZ
?Release@CDocfileUnmarshalFactory@@UEAAKXZ
?Release@CDocfileUnmarshalFactory@@W7EAAKXZ
?Release@CDragDataObject@@UEAAKXZ
?Release@CDropTarget@@UEAAKXZ
?Release@CEMfObject@@UEAAKXZ
?Release@CEnumCategories@@UEAAKXZ
?Release@CEnumCategoriesOfClass@@UEAAKXZ
?Release@CEnumClassesOfCategories@@UEAAKXZ
?Release@CEnumConnectionsImpl@@UEAAKXZ
?Release@CEnumFmt10@@UEAAKXZ
?Release@CEnumFmt@@UEAAKXZ
?Release@CEnumFormatEtc@@UEAAKXZ
?Release@CEnumFormatEtcDataArray@@UEAAKXZ
?Release@CEnumSTATDATA@@UEAAKXZ
?Release@CEnumSTATPROPBAG@@UEAAKXZ
?Release@CEnumSTATPROPSETSTG@@UEAAKXZ
?Release@CEnumSTATPROPSTG@@UEAAKXZ
?Release@CEnumStatData@@UEAAKXZ
?Release@CEnumVerb@@EEAAKXZ
?Release@CExposedDocFile@@UEAAKXZ
?Release@CExposedDocFile@@W7EAAKXZ
?Release@CExposedDocFile@@WDA@EAAKXZ
?Release@CExposedDocFile@@WDI@EAAKXZ
?Release@CExposedDocFile@@WEA@EAAKXZ
?Release@CExposedDocFile@@WEI@EAAKXZ
?Release@CExposedDocFile@@WFA@EAAKXZ
?Release@CExposedIterator@@UEAAKXZ
?Release@CExposedIterator@@W7EAAKXZ
?Release@CExposedStream@@UEAAKXZ
?Release@CExposedStream@@W7EAAKXZ
?Release@CExposedStream@@WBA@EAAKXZ
?Release@CExposedStream@@WBI@EAAKXZ
?Release@CFileStream@@UEAAKXZ
?Release@CFileStream@@W7EAAKXZ
?Release@CFileStream@@WBA@EAAKXZ
?Release@CFileStream@@WBI@EAAKXZ
?Release@CFillLockBytes@@UEAAKXZ
?Release@CFillLockBytes@@W7EAAKXZ
?Release@CFillLockBytes@@WBA@EAAKXZ
?Release@CFont@@UEAAKXZ
?Release@CFont@@W7EAAKXZ
?Release@CFont@@WBA@EAAKXZ
?Release@CFont@@WBI@EAAKXZ
?Release@CFont@@WCA@EAAKXZ
?Release@CFont@@WCI@EAAKXZ
?Release@CFontEventsCP@@UEAAKXZ
?Release@CGdiCustodian@@UEAAKXZ
?Release@CGenObject@@UEAAKXZ
?Release@CInnerUnk@CComCat@@UEAAKXZ
?Release@CInterfaceFromWindowProp@@UEAAKXZ
?Release@CLUAMoniker@@UEAAKXZ
?Release@CLUAMoniker@@W7EAAKXZ
?Release@CLUAMoniker@@WCI@EAAKXZ
?Release@CLUAMoniker@@WDA@EAAKXZ
?Release@CMarshalImplPStream@@UEAAKXZ
?Release@CMemBytes@@UEAAKXZ
?Release@CMfObject@@UEAAKXZ
?Release@CMonikerFactory@@UEAAKXZ
?Release@CMonikerFactory@@W7EAAKXZ
?Release@CNFFMappedStream@@UEAAKXZ
?Release@CNFFTreeMutex@@UEAAKXZ
?Release@CNotifyCP@@UEAAKXZ
?Release@CNtfsEnumSTATSTG@@UEAAKXZ
?Release@CNtfsStorage@@UEAAKXZ
?Release@CNtfsStorage@@W7EAAKXZ
?Release@CNtfsStorage@@WBA@EAAKXZ
?Release@CNtfsStorageForPropSetStg@@UEAAKXZ
?Release@CNtfsStream@@UEAAKXZ
?Release@CNtfsStream@@W7EAAKXZ
?Release@COAHolder@@UEAAKXZ
?Release@COleCache@@UEAAKXZ
?Release@COleCache@@W7EAAKXZ
?Release@COleCache@@WBA@EAAKXZ
?Release@COleClientSiteImpl@CDefClient@@UEAAKXZ
?Release@COleItemContainerImpl@CDdeObject@@UEAAKXZ
?Release@COleObjectImpl@CDdeObject@@UEAAKXZ
?Release@CPackagerMoniker@@UEAAKXZ
?Release@CPageHolder@@UEAAKXZ
?Release@CPerContext@@QEAAJXZ
?Release@CPersistStgImpl@CDdeObject@@UEAAKXZ
?Release@CPictioFileStream@@UEAAKXZ
?Release@CPicture@@UEAAKXZ
?Release@CPicture@@W7EAAKXZ
?Release@CPicture@@WBA@EAAKXZ
?Release@CPicture@@WBI@EAAKXZ
?Release@CPicture@@WCA@EAAKXZ
?Release@CPicture@@WCI@EAAKXZ
?Release@CPointerMoniker@@UEAAKXZ
?Release@CPointerMoniker@@W7EAAKXZ
?Release@CPointerMoniker@@WCI@EAAKXZ
?Release@CPrivDragDrop@@UEAAKXZ
?Release@CPrivUnknown@CDefLink@@UEAAKXZ
?Release@CPrivUnknown@CDefObject@@UEAAKXZ
?Release@CPropertyBagEx@@UEAAKXZ
?Release@CPropertyBagEx@@W7EAAKXZ
?Release@CPropertySetStorage@@UEAAKXZ
?Release@CPropertyStorage@@UEAAKXZ
?Release@CProxyManagerImpl@CDdeObject@@UEAAKXZ
?Release@CPunkForRelease@@UEAAKXZ
?Release@CRotMonikerEnum@@UEAAKXZ
?Release@CRpcStubBufferImpl@CDdeObject@@UEAAKXZ
?Release@CRunningObjectTable@@UEAAKXZ
?Release@CRunningObjectTable@@W7EAAKXZ
?Release@CSSMappedStream@@UEAAKXZ
?Release@CSafeSem@@QEAAXXZ
?Release@CSessionMoniker@@UEAAKXZ
?Release@CSessionMoniker@@W7EAAKXZ
?Release@CSessionMoniker@@WCI@EAAKXZ
?Release@CSimpEnumSTATSTG@@UEAAKXZ
?Release@CSimpStorage@@UEAAKXZ
?Release@CSimpStorage@@W7EAAKXZ
?Release@CSimpStorage@@WBA@EAAKXZ
?Release@CSimpStorageOpen@@UEAAKXZ
?Release@CSimpStorageOpen@@W7EAAKXZ
?Release@CSimpStorageOpen@@WBA@EAAKXZ
?Release@CSimpStream@@UEAAKXZ
?Release@CSimpStream@@W7EAAKXZ
?Release@CSimpStreamOpen@@UEAAKXZ
?Release@CSimpStreamOpen@@W7EAAKXZ
?Release@CSmAllocator@@UEAAKXZ
?Release@CStdClassFactory@@UEAAKXZ
?Release@CStmBufRead@@QEAAXXZ
?Release@CStmBufWrite@@QEAAXXZ
?Release@CStreamDummy@@UEAAKXZ
?Release@CSyncSync@@UEAAKXZ
?Release@CTrackingCompositeMoniker@@UEAAKXZ
?Release@CTrackingFileMoniker@@UEAAKXZ
?Release@CUnknownImpl@CDdeObject@@UEAAKXZ
?Release@CUnknownImpl@CDefClient@@UEAAKXZ
?Release@CUrlMonWrapper@@UEAAKXZ
?Release@CallFrame@@UEAAKXZ
?Release@CallFrame@@W7EAAKXZ
?Release@ComPsClassFactory@@UEAAKXZ
?Release@ComPsClassFactory@@W7EAAKXZ
?Release@CsCatInfo@@UEAAKXZ
?Release@DDE_CHANNEL@@UEAAKXZ
?Release@DDE_CHANNEL@@W7EAAKXZ
?Release@DefaultIBindStatusCallback@@UEAAKXZ
?Release@DefaultIBindStatusCallback@@W7EAAKXZ
?Release@Interceptor@@EEAAKXZ
?Release@Interceptor@@G7EAAKXZ
?Release@Interceptor@@GBA@EAAKXZ
?Release@Interceptor@@GBI@EAAKXZ
?Release@Interceptor@@GCI@EAAKXZ
?Release@InterfaceWalkerFree@@UEAAKXZ
?Release@LEGACY_FRAME@@UEAAKXZ
?Release@LEGACY_INTERCEPTOR@@UEAAKXZ
?Release@LEGACY_INTERCEPTOR@@W7EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WBA@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WBI@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WCA@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WCI@EAAKXZ
?Release@LEGACY_INTERCEPTOR@@WDI@EAAKXZ
?Release@MD_INTERFACE@@QEAAKXZ
?Release@MarshallingChannel@@UEAAKXZ
?Release@MarshallingChannel@@W7EAAKXZ
?Release@PBasicEntry@@QEAAXXZ
?Release@PTSetMember@@QEAAXXZ
?Release@SSimpleWalker@@UEAAKXZ
?ReleaseAllItems@CDefClient@@QEAAXXZ
?ReleaseBlock@CDeltaList@@AEAAXK@Z
?ReleaseBoundObjects@CBindCtx@@UEAAJXZ
?ReleaseConnection@CDefObject@@UEAAKKKH@Z
?ReleaseCurrentStream@CSimpStorage@@QEAAXXZ
?ReleaseEntry@CInternalPageAllocator@@QEAAXPEAUtagPageEntry@@@Z
?ReleaseEntry@CPageAllocator@@QEAAXPEAUtagPageEntry@@@Z
?ReleaseGetFreeStruct@CFat@@AEAAXPEAUSGetFreeStruct@@@Z
?ReleaseHfont@CFont@@UEAAJPEAUHFONT__@@@Z
?ReleaseInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAX@Z
?ReleaseInterfaces@SSimpleWalker@@QEAAXXZ
?ReleaseInvalidSects@CDeltaList@@QEAAJK@Z
?ReleaseLock@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?ReleaseLock@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAXXZ
?ReleaseLock@XSLOCK@@QEAAXXZ
?ReleaseMarshalData@CClassMoniker@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CDocfileUnmarshalFactory@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CExposedDocFile@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CExposedStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CMarshalImplPStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CPicture@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CPointerMoniker@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CSimpStorage@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CSimpStream@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@CallFrame@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_CLIENT_FRAME@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@DISPATCH_SERVER_FRAME@@UEAAJPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@FtmBase@WRL@Microsoft@@UEAAJPEAUIStream@@@Z
?ReleaseMarshalData@Interceptor@@EEAAJKPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMarshalData@LEGACY_INTERCEPTOR@@UEAAJKPEAXKKKPEAU__MIDL_ICallFrame_0004@@@Z
?ReleaseMemoryInterceptor@LEGACY_INTERCEPTOR@@QEAAXXZ
?ReleaseObjPtrs@CDefClient@@QEAAJXZ
?ReleaseReference@DDE_CHANNEL@@QEAAKXZ
?ReleaseRemoteInterceptor@LEGACY_INTERCEPTOR@@QEAAXXZ
?ReleaseTable@CPagedVector@@QEAAXK@Z
?ReleaseWriteAccess@CExposedDocFile@@UEAAJXZ
?Remap@CFat@@QEAAJKKKPEAK000@Z
?RemapSelf@CDIFat@@QEAAJXZ
?Remove@CContextList@@QEAAXPEAVCContext@@@Z
?Remove@CUpdateList@@QEAAXPEAVCUpdate@@@Z
?RemoveAll@?$CMap@PEAGAEAPEAGKAEAK@@QEAAXXZ
?RemoveAll@CMapKeyToValue@@QEAAXXZ
?RemoveAll@CPropertySection@@QEAAXXZ
?RemoveAt@?$CArray@U_GUID@@AEAU1@@@QEAAXHH@Z
?RemoveClipboardDataObject@@YAJPEAUHWND__@@K@Z
?RemoveConnection@CConnectionPoint@@UEAAJK@Z
?RemoveKey@CMapKeyToValue@@QEAAHPEAXI@Z
?RemoveMarshal@CMarshalList@@QEAAXPEAV1@@Z
?RemoveMember@CTSSet@@QEAAXPEAVPTSetMember@@@Z
?RemoveRv@CChildInstanceList@@QEAAXPEAVPRevertable@@@Z
?RemoveSelfFromList@CNtfsStream@@IEAAXXZ
?RemoveWndProc@CFrameFilter@@QEAAXXZ
?RemoveXSMember@CPubDocFile@@QEAAXPEAVPTSetMember@@@Z
?Rename@CNtfsStream@@AEAAJPEBGH@Z
?RenameElement@CExposedDocFile@@UEAAJPEBG0@Z
?RenameElement@CLimitedWritableStorage@@UEAAJPEBG0@Z
?RenameElement@CNtfsStorage@@UEAAJPEBG0@Z
?RenameElement@CNtfsStorageForPropSetStg@@UEAAJPEBG0@Z
?RenameElement@CReadOnlyStorage@@UEAAJPEBG0@Z
?RenameElement@CSimpStorage@@UEAAJPEBG0@Z
?RenameEntry@CDirectory@@QEAAJKPEBVCDfName@@0@Z
?RenameEntry@CPubDocFile@@QEAAJPEBVCDfName@@0@Z
?RenameEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@0@Z
?RenameMember@CTSSet@@QEAAXPEBVCDfName@@K0@Z
?Render@CPicture@@UEAAJPEAUHDC__@@JJJJJJJJPEBUtagRECT@@@Z
?Render@CPicture@@W7EAAJPEAUHDC__@@JJJJJJJJPEBUtagRECT@@@Z
?RenderBitmap@CPicture@@QEAAJPEAUHDC__@@JJJJJJJJ@Z
?RenderCurrentFormat@@YAJPEAUHWND__@@IPEAUtagSTGMEDIUM@@PEAUIDataObject@@@Z
?RenderFormat@@YAJPEAUHWND__@@IPEAUIDataObject@@PEAX@Z
?RenderIcon@CPicture@@QEAAJPEAUHDC__@@JJJJJJJJ@Z
?RenderMetafile@CPicture@@QEAAJPEAUHDC__@@JJJJJJJJPEBUtagRECT@@@Z
?ReplaceOriginalWithUpdate@CNFFMappedStream@@AEAAJW4enumCREATE_NEW_UPDATE_STREAM@1@H@Z
?ReportErrorOrigination@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXPEBU_RTL_CALL_SITE@34@@Z
?Request@COleStaticMutexSem@@QEAAXPEBDK0@Z
?RequestData@CDdeObject@@AEAAJG@Z
?RequestData@CDefClient@@QEAAJPEAUHWND__@@GGPEAPEAX@Z
?RequestDataStd@@YAJGPEAPEAX@Z
?RequestNewObjectLayout@COleClientSiteImpl@CDefClient@@UEAAJXZ
?Reserve@CDFBasis@@QEAAJIW4CDFB_CLASSTYPE@@@Z
?Reserve@CFreeList@@QEAAJPEAUIMalloc@@I_K@Z
?Reset@?$CArray@VCCacheNode@@@@QEAAXAEAKH@Z
?Reset@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJXZ
?Reset@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJXZ
?Reset@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJXZ
?Reset@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJXZ
?Reset@CBindStatusCallback@@UEAAJXZ
?Reset@CCompositeMonikerEnum@@UEAAJXZ
?Reset@CEnumCategories@@UEAAJXZ
?Reset@CEnumCategoriesOfClass@@UEAAJXZ
?Reset@CEnumClassesOfCategories@@UEAAJXZ
?Reset@CEnumConnectionsImpl@@UEAAJXZ
?Reset@CEnumFmt@@UEAAJXZ
?Reset@CEnumFormatEtc@@UEAAJXZ
?Reset@CEnumFormatEtcDataArray@@UEAAJXZ
?Reset@CEnumSTATDATA@@UEAAJXZ
?Reset@CEnumSTATPROPBAG@@UEAAJXZ
?Reset@CEnumSTATPROPSETSTG@@UEAAJXZ
?Reset@CEnumSTATPROPSTG@@UEAAJXZ
?Reset@CEnumStatData@@UEAAJXZ
?Reset@CEnumVerb@@EEAAJXZ
?Reset@CExposedIterator@@UEAAJXZ
?Reset@CNtfsEnumSTATSTG@@UEAAJXZ
?Reset@CRotMonikerEnum@@UEAAJXZ
?Reset@CSimpEnumSTATSTG@@UEAAJXZ
?ResetBits@CPagedVector@@QEAAXXZ
?ResetCopyOnWrite@CFat@@QEAAXXZ
?Resize@CDIFat@@AEAAJK@Z
?Resize@CDirectory@@AEAAJK@Z
?Resize@CFat@@QEAAJK@Z
?Resize@CPagedVector@@QEAAJK@Z
?ResolveShellLink@CFileMoniker@@AEAAJH@Z
?RestoreShellLink@CFileMoniker@@AEAAJPEAH@Z
?ResultFromKnownLastError@@YAJXZ
?ResumeImpersonate@@YAXPEAX@Z
?ReturnToReserve@CFreeList@@QEAAXPEAX@Z
?Revert@CAbstractStream@@MEAAJXZ
?Revert@CExposedDocFile@@UEAAJXZ
?Revert@CExposedStream@@UEAAJXZ
?Revert@CLimitedWritableStorage@@UEAAJXZ
?Revert@CLimitedWritableStream@@UEAAJXZ
?Revert@CNtfsStorage@@UEAAJXZ
?Revert@CNtfsStorageForPropSetStg@@UEAAJXZ
?Revert@CNtfsStream@@UEAAJXZ
?Revert@CPictioFileStream@@UEAAJXZ
?Revert@CPropertyStorage@@UEAAJXZ
?Revert@CReadOnlyStorage@@UEAAJXZ
?Revert@CReadOnlyStream@@UEAAJXZ
?Revert@CSimpStorage@@UEAAJXZ
?Revert@CSimpStream@@UEAAJXZ
?Revert@CStreamDummy@@UEAAJXZ
?Revert@CWrappedDocFile@@QEAAXXZ
?RevertUpdate@CWrappedDocFile@@AEAAXPEAVCUpdate@@@Z
?Revoke@?$GitPtrImpl@VGitPtr@Internal@Windows@@@Internal@Windows@@QEAAJXZ
?Revoke@CDDEServer@@QEAAJXZ
?Revoke@CDefClient@@QEAAJH@Z
?Revoke@CRunningObjectTable@@UEAAJK@Z
?RevokeHelper@CRunningObjectTable@@AEAAJKH@Z
?RevokeObjectBound@CBindCtx@@UEAAJPEAUIUnknown@@@Z
?RevokeObjectParam@CBindCtx@@UEAAJPEAG@Z
?RollForwardIfNecessary@CNFFMappedStream@@AEAAJXZ
?RotateEntry@CDirectory@@AEAAJPEBVCDfName@@KKPEAK@Z
?RoundDiv@@YAJJJ@Z
?RtlpDecodeBase64Chunklets@@YAJKP6A?AU_RTL_UCSCHAR_DECODER_RETURN_VALUE@@PEBE0@Z00AEAU_RTL_SMART_LBLOB_WRITING_CONTEXT@@@Z
?RtlpDecodeCharsUntilNotMatchPredicate@@YAJPEBE0P6A?AU_RTL_UCSCHAR_DECODER_RETURN_VALUE@@00@ZP6AEKPEAX@Z2PEAPEBEPEAK@Z
?RtlpGenericBase64Encode@@YAJPEBU_LBLOB@@PEAU_RTL_SMART_LBLOB_UCSCHAR_WRITING_CONTEXT@@@Z
?RtlpMatchBase64Whitespace@@YAEKPEAX@Z
?RtlpSmartLBlobWritingContextResizePolicy@@YAJ_K00PEA_K@Z
?Run@CDefLink@@UEAAJPEAUIBindCtx@@@Z
?Run@CDefObject@@UEAAJPEAUIBindCtx@@@Z
?RunningMoniker@@YAHPEAUIBindCtx@@PEAGKPEAKPEAPEAUIMoniker@@@Z
?RuntimeClassInitialize@ClipboardDataObjectTask@@QEAAJK@Z
?STGMEDIUM_UserFreeExt@@YAXPEAKPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserMarshalExt@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserSizeExt@@YAKPEAKKPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserUnmarshalExt@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@@Z
?STGMEDIUM_UserUnmarshalWorker64@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@_K@Z
?STGMEDIUM_UserUnmarshalWorker@@YAPEAEPEAKPEAEPEAUtagSTGMEDIUM@@_K@Z
?SafeArrayClear@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@H@Z
?SafeArrayCopy@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@PEAPEAU2@@Z
?SafeArrayCopyData@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@0@Z
?SafeArrayDestroy@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayLock@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayMarshal@OLEAUTOMATION_FUNCTIONS@@CAPEAEPEAKPEAEPEAPEAUtagSAFEARRAY@@@Z
?SafeArraySize@@YAKGKPEAUtagSAFEARRAYBOUND@@@Z
?SafeArraySize@OLEAUTOMATION_FUNCTIONS@@CAKPEAKKPEAPEAUtagSAFEARRAY@@@Z
?SafeArrayUnlock@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?SafeArrayUnmarshal@OLEAUTOMATION_FUNCTIONS@@CAPEAEPEAKPEAEPEAPEAUtagSAFEARRAY@@@Z
?SafeIntOnOverflow@?$SafeIntExceptionHandler@VSafeIntException@@@SafeIntInternal@@SAXXZ
?SafeRelease@CRefExportCount@@QEAAKXZ
?SafeRelease@CSafeRefCount@@QEAAKXZ
?SafeReleaseAndNULL@@YAXPEAPEAUIUnknown@@@Z
?Save@CAntiMoniker@@EEAAJPEAUIStream@@H@Z
?Save@CBaseMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CCacheNode@@QEAAJPEAUIStorage@@HH@Z
?Save@CClassMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CCompositeMoniker@@EEAAJPEAUIStream@@H@Z
?Save@CDdeObject@@AEAAJPEAUIStorage@@@Z
?Save@CDefLink@@UEAAJPEAUIStorage@@H@Z
?Save@CDefObject@@UEAAJPEAUIStorage@@H@Z
?Save@CEMfObject@@UEAAJPEAUIStream@@@Z
?Save@CExtentList@@QEAAJPEAUIStream@@@Z
?Save@CFileMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CFont@@UEAAJPEAUIPropertyBag@@HH@Z
?Save@CFont@@UEAAJPEAUIStream@@H@Z
?Save@CGenObject@@UEAAJPEAUIStream@@@Z
?Save@CItemMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CLUAMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CMfObject@@UEAAJPEAUIStream@@@Z
?Save@CObjrefMoniker@@UEAAJPEAUIStream@@H@Z
?Save@COleCache@@UEAAJPEAUIStorage@@H@Z
?Save@CPackagerMoniker@@UEAAJPEAUIStream@@H@Z
?Save@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@H@Z
?Save@CPicture@@UEAAJPEAUIStream@@H@Z
?Save@CSessionMoniker@@UEAAJPEAUIStream@@H@Z
?SaveAsFile@CPicture@@UEAAJPEAUIStream@@HPEAJ@Z
?SaveAsFile@CPicture@@W7EAAJPEAUIStream@@HPEAJ@Z
?SaveCompleted@CDefLink@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@CDefObject@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@COleCache@@UEAAJPEAUIStorage@@@Z
?SaveCompleted@CPersistStgImpl@CDdeObject@@UEAAJPEAUIStorage@@@Z
?SaveHeader@CPicture@@QEAAJPEAUIStream@@PEAJ@Z
?SaveObject@COleClientSiteImpl@CDefClient@@UEAAJXZ
?SaveOriginal@CPicture@@QEAAJPEAUIStream@@PEAJ@Z
?SavePicture@CPicture@@QEAAJPEAUIStream@@HHPEAJ@Z
?SaveTOC@COleCache@@AEAAJPEAUIStorage@@H@Z
?SaveTOCEntry@CCacheNode@@QEAAJPEAUIStream@@H@Z
?SaveUnicodeAsAnsi@@YAJPEAUIStream@@PEAGGPEADG@Z
?ScalePictExt@CMfObject@@AEAAXPEAUHDC__@@HHHH@Z
?ScalePictExt@CPicture@@AEAAXPEAUHDC__@@HHHH@Z
?ScaleRectExt@CMfObject@@AEAAXPEAUHDC__@@HHHH@Z
?ScaleRectExt@CPicture@@AEAAXPEAUHDC__@@HHHH@Z
?ScanArg@@YAPEADPEAD@Z
?ScanBoolArg@@YAPEADPEADPEAH@Z
?ScanCommand@@YAGPEADGPEAPEADPEAG@Z
?ScanItemOptions@@YAJPEAGPEAH@Z
?ScanNumArg@@YAPEADPEADPEAH@Z
?ScheduleClipboardWorkWithPLM@@YAJKPEAPEAUIOSTaskCompletion@@@Z
?SearchForPattern@CPatternTbl@@AEAAJPEAXPEAU_GUID@@@Z
?SearchItem@CDefClient@@AEAAPEAV1@PEAG@Z
?SectToPair@CDIFat@@AEBAXKPEAKPEAG@Z
?Seek@CBaseMInterfacePointerMarshalingStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CBaseMarshalingStreamOnBuffer@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CExpParameterValidate@@SAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CExposedStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CLimitedStreamBase@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CNtfsStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CPictioFileStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CSimpStream@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CSimpStreamOpen@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?Seek@CStreamDummy@@UEAAJT_LARGE_INTEGER@@KPEAT_ULARGE_INTEGER@@@Z
?SeekTo@CFileStream@@AEAA_K_K@Z
?SelectFat@CStreamCache@@AEAAPEAVCFat@@XZ
?SelectPicture@CPicture@@UEAAJPEAUHDC__@@PEAPEAU2@PEAI@Z
?SelectPicture@CPicture@@UEAAJPEAUHDC__@@PEAPEAU2@PEA_K@Z
?Send2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?Send@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?Send@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAUISynchronize@@PEAK@Z
?SendDataMsg1@CDefClient@@AEAAHPEAXG@Z
?SendDataMsg@CDefClient@@AEAAHG@Z
?SendDevInfo@CDefClient@@AEAAXPEAUHWND__@@@Z
?SendExecuteAck@CDefClient@@QEAAXJ@Z
?SendInitMsgToChildren@@YAHPEAUHWND__@@I_K_J@Z
?SendMsgAndWaitForReply@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@HG_JHHHH@Z
?SendMsgToChildren@@YAHPEAUHWND__@@I_K_J@Z
?SendOnClose@CDdeObject@@AEAAJXZ
?SendOnClose@COAHolder@@UEAAJXZ
?SendOnDataChange@CDAHolder@@UEAAJPEAUIDataObject@@KK@Z
?SendOnDataChange@CDdeObject@@QEAAJH@Z
?SendOnLinkSrcChange@COAHolder@@QEAAJPEAUIMoniker@@@Z
?SendOnRename@COAHolder@@UEAAJPEAUIMoniker@@@Z
?SendOnSave@COAHolder@@UEAAJXZ
?SendReceive2@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive2@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CDdeServerCallMgr@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@CDdeServerCallMgr@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@DDE_CHANNEL@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@DDE_CHANNEL@@W7EAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendReceive@MarshallingChannel@@UEAAJPEAUtagRPCOLEMESSAGE@@PEAK@Z
?SendRenameMsgs@CDefClient@@AEAAXPEAX@Z
?SendServerTerminateMsg@CDDEServer@@AEAAXXZ
?SendTerminateMsg@CDefClient@@AEAAXXZ
?SerializeSafeArrayBounds@@YAJPEBUtagSAFEARRAY@@PEAEPEAK@Z
?Set@CClass@@QEAAJAEBU_GUID@@PEAUIStorage@@@Z
?Set@CDfName@@QEAAXGPEBE@Z
?Set@CDfName@@QEAAXPEBG@Z
?Set@CProperty@@QEAAHQEAX@Z
?Set@CPropertySection@@QEAAHKPEAXK@Z
?SetAdvise@CCacheViewImpl@COleCache@@UEAAJKKPEAUIAdviseSink@@@Z
?SetAllFileLockBytesTimes@CMStream@@QEAAJU_FILETIME@@00@Z
?SetAllStreamsTimes@CNtfsStorage@@IEAAJPEBU_FILETIME@@00@Z
?SetAllTimes@CMStream@@QEAAJKU_FILETIME@@00@Z
?SetAllocatorState@CPerContext@@QEAAJPEAPEAV1@PEAVCSmAllocator@@@Z
?SetAsBaseFor@DISPATCH_INTERCEPTOR@@UEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAsBaseFor@Interceptor@@EEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAsBaseFor@LEGACY_INTERCEPTOR@@UEAAJPEAUMD_INTERFACE@@PEAH@Z
?SetAssocKey@CMapKeyToValue@@AEBAHPEAUCAssoc@1@PEAXI@Z
?SetAssocValue@CMapKeyToValue@@AEBAXPEAUCAssoc@1@PEAX@Z
?SetAt@?$CMap@PEAGAEAPEAGKAEAK@@QEAAJAEAPEAGAEAK@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@@Z
?SetAt@?$MAP@VXSLOCK@@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@@@QEAAHAEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@@Z
?SetAt@CMapKeyToValue@@QEAAHPEAXI0@Z
?SetAtGrow@CArrayFValue@@QEAAHHPEAX@Z
?SetBase@CTransactedStream@@QEAAJPEAVPSStream@@@Z
?SetBase@CWrappedDocFile@@QEAAJPEAVPDocFile@@@Z
?SetBindOptions@CBindCtx@@UEAAJPEAUtagBIND_OPTS@@@Z
?SetBitmapData@CGenObject@@AEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetCachedFilePointer@CFileStream@@AEAAX_K@Z
?SetChain@CMSFPage@@QEAAXQEAV1@0@Z
?SetChainLength@CFat@@QEAAJKK@Z
?SetClass@CExpParameterValidate@@SAJAEBU_GUID@@@Z
?SetClass@CExposedDocFile@@UEAAJAEBU_GUID@@@Z
?SetClass@CLimitedWritableStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CNtfsStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CNtfsStorageForPropSetStg@@UEAAJAEBU_GUID@@@Z
?SetClass@CPropertyStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CPubDocFile@@QEAAJAEBU_GUID@@@Z
?SetClass@CReadOnlyStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CSimpStorage@@UEAAJAEBU_GUID@@@Z
?SetClass@CSimpStorageOpen@@UEAAJAEBU_GUID@@@Z
?SetClass@PDocFile@@QEAAJAEBU_GUID@@@Z
?SetClassId@CPropertySetStream@@QEAAXPEBU_GUID@@PEAJ@Z
?SetClientSite@CDefClient@@QEAAJXZ
?SetClientSite@CDefLink@@UEAAJPEAUIOleClientSite@@@Z
?SetClientSite@CDefObject@@UEAAJPEAUIOleClientSite@@@Z
?SetClientSite@COleObjectImpl@CDdeObject@@UEAAJPEAUIOleClientSite@@@Z
?SetClipDataObjectInTLS@@YAXPEAUIDataObject@@K@Z
?SetClipboard@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?SetClipboard@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAUIDataObject@@@Z
?SetClipboardDataObject@@YAJPEAUHWND__@@PEAUIDataObject@@1PEAPEAX@Z
?SetClipboardFormats@@YAJPEAUHWND__@@PEAUIDataObject@@@Z
?SetClipboardOwnerWindowProperty@@YAJPEAUHWND__@@PEBGK@Z
?SetColorScheme@CDefLink@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetColorScheme@CDefObject@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetColorScheme@COleObjectImpl@CDdeObject@@UEAAJPEAUtagLOGPALETTE@@@Z
?SetContainedObject@CDefLink@@UEAAJH@Z
?SetContainedObject@CDefObject@@UEAAJH@Z
?SetContextFlagsForAsyncCall@@YAXPEAKPEAUtagSTGMEDIUM@@@Z
?SetCopyOnWrite@CFat@@QEAAXPEAV1@K@Z
?SetCursor@CDragDefaultCursors@@QEAAXK@Z
?SetData@CBrokeredClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CCacheDataImpl@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CClipClientDataWrapper@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CClipDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDataObjectImpl@CDdeObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDefLink@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDefObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CDragDataObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@CFont@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetData@COleCache@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@H@Z
?SetDataWDO@CCacheNode@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HAEAHPEAUIDataObject@@@Z
?SetDataWDO@CEMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDataWDO@CGenObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDataWDO@CMfObject@@UEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@HPEAUIDataObject@@@Z
?SetDerivesFromIDispatch@MD_INTERFACE@@QEAAJH@Z
?SetDirty@CPagedVector@@QEAAJK@Z
?SetDirty@CPubDocFile@@QEAAXXZ
?SetElementTimes@CExpParameterValidate@@SAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CExposedDocFile@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CLimitedWritableStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CNtfsStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CNtfsStorageForPropSetStg@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CPubDocFile@@QEAAJPEBVCDfName@@PEBU_FILETIME@@11@Z
?SetElementTimes@CReadOnlyStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetElementTimes@CSimpStorage@@UEAAJPEBGPEBU_FILETIME@@11@Z
?SetExtent@CDefLink@@UEAAJKPEAUtagSIZE@@@Z
?SetExtent@CDefObject@@UEAAJKPEAUtagSIZE@@@Z
?SetExtent@COleObjectImpl@CDdeObject@@UEAAJKPEAUtagSIZE@@@Z
?SetFatSect@CDIFat@@QEAAJKK@Z
?SetFileHandleTime@CNtfsStream@@CAJPEAXPEBU_FILETIME@@11@Z
?SetFileLockBytesTime@CMStream@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetFileSize@CNtfsStream@@AEAAJAEBV?$TXLargeIntegerWrapper@T_ULARGE_INTEGER@@K_K@@@Z
?SetFillSize@CFileStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetFillSize@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@@Z
?SetFormatAsHGlobal@@YAJGPEAX_K@Z
?SetHdc@CFont@@UEAAJPEAUHDC__@@@Z
?SetHostNames@CDefLink@@UEAAJPEBG0@Z
?SetHostNames@CDefObject@@UEAAJPEBG0@Z
?SetHostNames@COleObjectImpl@CDdeObject@@UEAAJPEBG0@Z
?SetIID@DISPATCH_INTERCEPTOR@@UEAAJAEBU_GUID@@@Z
?SetIID@Interceptor@@EEAAJAEBU_GUID@@@Z
?SetIID@LEGACY_INTERCEPTOR@@UEAAJAEBU_GUID@@@Z
?SetILBInfo@CPerContext@@QEAAXPEAUILockBytes@@PEAUCFileStream@@0K@Z
?SetInitialState@CTransactedStream@@AEAAJPEAVPSStream@@@Z
?SetInitialState@CWrappedDocFile@@AEAAJPEAVPDocFile@@@Z
?SetInvalidParameter@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXXZ
?SetInvalidParameter_NullPointer@?$CBaseFrame@VCSimpleNtStatusCarryingFrame@Rtl@ErrorHandling@Windows@@@Rtl@ErrorHandling@Windows@@QEAAXXZ
?SetMapping@CProxyManagerImpl@CDdeObject@@UEAAXPEAX@Z
?SetMetaData@Interceptor@@AEAAJPEAUTYPEINFOVTBL@@@Z
?SetMetaData@MD_INTERFACE@@QEAAJPEAUTYPEINFOVTBL@@PEBUtagCInterfaceStubHeader@@PEBD@Z
?SetMetaData@MD_METHOD@@QEAAXPEBUtagCInterfaceStubHeader@@KPEAUMD_INTERFACE@@PEAUTYPEINFOVTBL@@@Z
?SetMiniSize@CMStream@@QEAAJXZ
?SetModified@CExposedStream@@UEAAXPEAJ@Z
?SetModified@CNFFMappedStream@@UEAAXPEAJ@Z
?SetModified@CSSMappedStream@@UEAAXPEAJ@Z
?SetMoniker@CDefLink@@UEAAJKPEAUIMoniker@@@Z
?SetMoniker@CDefObject@@UEAAJKPEAUIMoniker@@@Z
?SetMoniker@COleObjectImpl@CDdeObject@@UEAAJKPEAUIMoniker@@@Z
?SetName@CGlobalFileStream@@QEAAXPEBG@Z
?SetName@CPropertySection@@QEAAHKPEBG@Z
?SetNext@CFat@@QEAAJKK@Z
?SetNext@CUpdate@@QEAAXPEAV1@@Z
?SetNextMarshal@CMarshalList@@QEAAXPEAV1@@Z
?SetNoSnapshot@CFat@@QEAAXK@Z
?SetOleautModule@@YAXPEAUHINSTANCE__@@@Z
?SetOwnerTableHint@XSLOCK@@AEAAXV?$OPAQUE_HANDLE@$00@@PEAUOWNERENTRY@1@@Z
?SetParam@CallFrame@@UEAAJKPEAUtagVARIANT@@@Z
?SetParam@DISPATCH_FRAME@@UEAAJKPEAUtagVARIANT@@@Z
?SetParamMetaData@MD_METHOD@@QEAAXPEAUMD_PARAM@@@Z
?SetParameters@CClassMoniker@@QEAAJPEBG@Z
?SetParent@CConnectionPoint@@QEAAXPEAUIDocfileAsyncConnectionPoint@@@Z
?SetPathShellLink@CFileMoniker@@AEAAJXZ
?SetPictExt@CMfObject@@AEAAXPEAUHDC__@@HH@Z
?SetPictExt@CPicture@@AEAAXPEAUHDC__@@HH@Z
?SetPictOrg@CMfObject@@AEAAXPEAUHDC__@@HHH@Z
?SetPictOrg@CPicture@@AEAAXPEAUHDC__@@HHH@Z
?SetPresBitsPos@CCacheNode@@AEAAXPEAUIStream@@AEAK@Z
?SetPrev@CUpdate@@QEAAXPEAV1@@Z
?SetPropertyNames@CPropertySetStream@@QEAAXKPEBKQEBQEBGPEAJ@Z
?SetPropsetData@CFont@@QEAAJPEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@AEBU_GUID@@@Z
?SetPv@CRgPv@@QEAAXIPEAX@Z
?SetRatio@CFont@@UEAAJJJ@Z
?SetRegistryValue@@YAJUHREG@@PEBGZZ
?SetReturnValue@CallFrame@@UEAAXJ@Z
?SetReturnValue@LEGACY_FRAME@@UEAAXJ@Z
?SetSect@CMSFPageTable@@QEAAXPEAVCMSFPage@@K@Z
?SetSect@CPagedVector@@QEAAXKK@Z
?SetSize@?$CArray@PEAVCPageHolder@@AEAPEAV1@@@QEAAJHH@Z
?SetSize@?$CArray@PEAVCProperty@@AEAPEAV1@@@QEAAJHH@Z
?SetSize@?$CArray@PEAVCPropertySection@@AEAPEAV1@@@QEAAJHH@Z
?SetSize@?$CArray@U_GUID@@AEAU1@@@QEAAJHH@Z
?SetSize@CArrayFValue@@QEAAHHH@Z
?SetSize@CBaseMInterfacePointerMarshalingStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CBaseMarshalingStreamOnBuffer@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CDirectStream@@QEAAJ_K@Z
?SetSize@CDirectory@@QEAAJK_K@Z
?SetSize@CExposedStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CExposedStream@@UEAAXKEPEAPEAXPEAJ@Z
?SetSize@CFileStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CLimitedWritableStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CMStream@@QEAAJXZ
?SetSize@CMemBytes@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CNFFMappedStream@@UEAAXKEPEAPEAXPEAJ@Z
?SetSize@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CNtfsStream@@W7EAAJT_ULARGE_INTEGER@@@Z
?SetSize@CPageHolderTemplate@@QEAAXAEAUtagSIZE@@@Z
?SetSize@CPictioFileStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CPubStream@@QEAAJ_K@Z
?SetSize@CReadOnlyStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CSSMappedStream@@UEAAXKEPEAPEAXPEAJ@Z
?SetSize@CSimpStream@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CSimpStreamOpen@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CStreamDummy@@UEAAJT_ULARGE_INTEGER@@@Z
?SetSize@CTransactedStream@@QEAAJ_K@Z
?SetSize@PSStream@@QEAAJ_K@Z
?SetSizeWorker@CFileStream@@AEAAJ_K@Z
?SetSourceDisplayName@CDefLink@@UEAAJPEBG@Z
?SetSourceMoniker@CDefLink@@UEAAJPEAUIMoniker@@AEBU_GUID@@@Z
?SetStackLocation@CallFrame@@UEAAXPEAX@Z
?SetStackLocation@LEGACY_FRAME@@UEAAXPEAX@Z
?SetStart@CDirectory@@QEAAJKK@Z
?SetState@CSmAllocator@@QEAAXPEAVCSharedMemoryBlock@@PEAEKPEAPEAVCPerContext@@PEAV3@@Z
?SetStateBits@CExposedDocFile@@UEAAJKK@Z
?SetStateBits@CLimitedWritableStorage@@UEAAJKK@Z
?SetStateBits@CNtfsStorage@@UEAAJKK@Z
?SetStateBits@CNtfsStorageForPropSetStg@@UEAAJKK@Z
?SetStateBits@CPubDocFile@@QEAAJKK@Z
?SetStateBits@CReadOnlyStorage@@UEAAJKK@Z
?SetStateBits@CSimpStorage@@UEAAJKK@Z
?SetStateBits@PDocFile@@QEAAJKK@Z
?SetStdInfo@CDefClient@@AEAAJPEAUHWND__@@PEAGPEAX@Z
?SetStg@CCacheNode@@QEAAJPEAUIStorage@@@Z
?SetSz@CClass@@QEAAJPEAG@Z
?SetTargetDevice@CDdeObject@@AEAAJPEBUtagDVTARGETDEVICE@@@Z
?SetThreadAllocatorState@CPerContext@@QEAAPEAVCSmAllocator@@PEAPEAV1@@Z
?SetTime@CDirectory@@QEAAJKW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@CFileStream@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetTime@PTimeEntry@@QEAAJW4WHICHTIME@@U_FILETIME@@@Z
?SetTimes@CPropertyStorage@@UEAAJPEBU_FILETIME@@00@Z
?SetTopic@CDdeObject@@QEAAXG@Z
?SetUpdateOptions@CDefLink@@UEAAJK@Z
?SetUpdateTimes@CDefLink@@AEAAJXZ
?SetUserFlags@CDirectory@@QEAAJKKK@Z
?SetValue@CPropertySetStream@@QEAAXKPEAPEAU_INDIRECTPROPERTY@@QEBUtagPROPVARIANT@@PEAUtagPROPERTY_INFORMATION@@PEAGPEAJ@Z
?SetVector@CMSFPage@@QEAAXPEAVCPagedVector@@@Z
?SetXSM@CUpdate@@QEAAXPEAVPTSetMember@@@Z
?SetupAdviseConnection@CCacheNode@@QEAAJPEAUIDataObject@@PEAUIAdviseSink@@@Z
?ShiftToEnd@?$CArray@VCCacheNode@@@@QEAAHK@Z
?ShowDialog@CHlprDialog@@UEAA_JPEAUHINSTANCE__@@PEBGPEAUHWND__@@@Z
?ShowObject@COleClientSiteImpl@CDefClient@@UEAAJXZ
?ShutDown@CNFFMappedStream@@QEAAJXZ
?ShutDown@CNtfsStream@@MEAAJXZ
?ShutDown@CNtfsUpdateStreamForPropStg@@MEAAJXZ
?ShutDown@CPropertyBagEx@@QEAAJXZ
?ShutDownStorage@CNtfsStorage@@AEAAJXZ
?Shutdown@?$CALLFRAME_CACHE@UINTERFACE_HELPER_CLSID@@@@QEAAXXZ
?Shutdown@?$CALLFRAME_CACHE@UTYPEINFOVTBL@@@@QEAAXXZ
?Shutdown@ClipboardBrokerFactory@@SAXXZ
?Signal@CBindStatusCallback@@UEAAJXZ
?SiteTranslateAccelerator@COlePropertySheet@@QEAAJPEAUtagMSG@@H@Z
?SizeOfTYPEDESC@@YAJPEAUITypeInfo@@PEAUtagTYPEDESC@@PEAK@Z
?SizeTAdd@@YAJ_K0PEA_K@Z
?SizeTSub@@YAJ_K0PEA_K@Z
?Skip@?$CLimitedEnum@UIEnumFORMATETC@@UtagFORMATETC@@@@UEAAJK@Z
?Skip@?$CLimitedEnum@UIEnumSTATSTG@@UtagSTATSTG@@@@UEAAJK@Z
?Skip@?$CSCMergedEnum@UIEnumCATEGORYINFO@@UtagCATEGORYINFO@@@@UEAAJK@Z
?Skip@?$CSCMergedEnum@UIEnumGUID@@U_GUID@@@@UEAAJK@Z
?Skip@CCompositeMonikerEnum@@UEAAJK@Z
?Skip@CEnumCategories@@UEAAJK@Z
?Skip@CEnumCategoriesOfClass@@UEAAJK@Z
?Skip@CEnumClassesOfCategories@@UEAAJK@Z
?Skip@CEnumConnectionsImpl@@UEAAJK@Z
?Skip@CEnumFmt10@@UEAAJK@Z
?Skip@CEnumFmt@@UEAAJK@Z
?Skip@CEnumFormatEtc@@UEAAJK@Z
?Skip@CEnumFormatEtcDataArray@@UEAAJK@Z
?Skip@CEnumSTATDATA@@UEAAJK@Z
?Skip@CEnumSTATPROPBAG@@UEAAJK@Z
?Skip@CEnumSTATPROPSETSTG@@UEAAJK@Z
?Skip@CEnumSTATPROPSTG@@UEAAJK@Z
?Skip@CEnumStatData@@UEAAJK@Z
?Skip@CEnumVerb@@EEAAJK@Z
?Skip@CExposedIterator@@UEAAJK@Z
?Skip@CNtfsEnumSTATSTG@@UEAAJK@Z
?Skip@CRotMonikerEnum@@UEAAJK@Z
?Skip@CSimpEnumSTATSTG@@UEAAJK@Z
?SkipStdMarshal@@YAJPEAUIStream@@PEAU_GUID@@PEAK@Z
?SplitEntry@CDirectory@@AEAAJPEBVCDfName@@KKKKKPEAK@Z
?SrvrExecute@CDDEServer@@QEAAJPEAUHWND__@@PEAX0@Z
?SrvrHandleIncomingCall@@YAJPEAVCDDEServer@@PEAUHWND__@@PEAX1@Z
?StRead10NativeData@@YAJPEAUIStorage@@PEAPEAX@Z
?StRead@@YAJPEAUIStream@@PEAXK@Z
?StSave10ItemName@@YAJPEAUIStorage@@PEBD@Z
?StSave10NativeData@@YAJPEAUIStorage@@PEAXH@Z
?StSetSize@@YAJPEAUIStream@@KH@Z
?StartMarshal@@YAJPEAUIStream@@AEBU_GUID@@1K@Z
?Stat@CAbstractStream@@MEAAJPEAUtagSTATSTG@@K@Z
?Stat@CExpParameterValidate@@SAJPEAUtagSTATSTG@@K@Z
?Stat@CExposedDocFile@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CExposedStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CFileStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CFillLockBytes@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CLimitedStreamBase@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CLimitedWritableStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CMemBytes@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStorageForPropSetStg@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CNtfsStream@@W7EAAJPEAUtagSTATSTG@@K@Z
?Stat@CPictioFileStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CPropertyStorage@@UEAAJPEAUtagSTATPROPSETSTG@@@Z
?Stat@CPubDocFile@@QEAAJPEAUtagSTATSTG@@K@Z
?Stat@CReadOnlyStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CRootPubDocFile@@QEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStorage@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStorageOpen@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStream@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CSimpStreamOpen@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@CStreamDummy@@UEAAJPEAUtagSTATSTG@@K@Z
?Stat@PTSetMember@@QEAAJPEAUtagSTATSTG@@K@Z
?StatEntry@CDirectory@@QEAAJKPEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StatEntry@CDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StatEntry@CWrappedDocFile@@QEAAJPEBVCDfName@@PEAUSIterBuffer@@PEAUtagSTATSTG@@@Z
?StaticReleaseMarshalData@CExposedDocFile@@SAJPEAUIStream@@K@Z
?StaticReleaseMarshalData@CExposedStream@@SAJPEAUIStream@@K@Z
?StdTypesGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?StdTypesRegisterServer@@YAJXZ
?StgpAcquireAccessLocks@@YAJPEAUILockBytes@@KPEAK@Z
?StgpAcquireOpenLocks@@YAJPEAUILockBytes@@KHPEAK@Z
?StgpCountWriteLocks@@YAJPEAUILockBytes@@PEAK@Z
?StgpGetTempFileName@@YAJPEAG_KH@Z
?StgpReleaseAccessLocks@@YAXPEAUILockBytes@@KK@Z
?StgpReleaseOpenLocks@@YAXPEAUILockBytes@@KK@Z
?StgpTestDirectWriterLocks@@YAJPEAUILockBytes@@@Z
?StgpWaitForAccessLocks@@YAJPEAUILockBytes@@KPEAK@Z
?StgpWaitForDirectWriterAccess@@YAJPEAUILockBytes@@K@Z
?StmToClipfmt@@YAJAEAVCStmBufRead@@PEAK1W4TXTTYPE@@@Z
?Stop@CDefObject@@QEAAJXZ
?Storage32DllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?StreamExists@CNtfsStorage@@IEAAJPEBG@Z
?StringCat@@YAJPEAPEAGPEAD@Z
?StringCat@@YAJPEAPEAGZZ
?StringCbCatA@@YAJPEAD_KPEBD@Z
?StringCbCatW@@YAJPEAG_KPEBG@Z
?StringCbCopyA@@YAJPEAD_KPEBD@Z
?StringCbCopyNW@@YAJPEAG_KPEBG1@Z
?StringCbCopyW@@YAJPEAG_KPEBG@Z
?StringCbLengthA@@YAJPEBD_KPEA_K@Z
?StringCbLengthW@@YAJPEBG_KPEA_K@Z
?StringCbPrintfA@@YAJPEAD_KPEBDZZ
?StringCbPrintfW@@YAJPEAG_KPEBGZZ
?StringCchCatW@@YAJPEAG_KPEBG@Z
?StringCchCopyExW@@YAJPEAG_KPEBGPEAPEAGPEA_KK@Z
?StringCchCopyNExW@@YAJPEAG_KPEBG1PEAPEAGPEA_KK@Z
?StringCchCopyNW@@YAJPEAG_KPEBG1@Z
?StringCchCopyW@@YAJPEAG_KPEBG@Z
?StringCchLengthW@@YAJPEBG_KPEA_K@Z
?StringCchPrintfA@@YAJPEAD_KPEBDZZ
?StringCchPrintfExA@@YAJPEAD_KPEAPEADPEA_KKPEBDZZ
?StringCchPrintfW@@YAJPEAG_KPEBGZZ
?StringCchVPrintfW@@YAJPEAG_KPEBGPEAD@Z
?StringConvert@CComCat@@AEAAJPEAGKPEBG1@Z
?StringFromGuid@@YAXAEBU_GUID@@PEAG@Z
?StubPostCheck@DISPATCH_SERVER_FRAME@@QEAAJXZ
?StubPreCheck@DISPATCH_SERVER_FRAME@@QEAAJXZ
?Subtract@CDdeConnectionTable@@QEAAJKPEAGPEAK@Z
?SuspendImpersonate@@YAJPEAPEAX@Z
?SwitchToFile@CExposedDocFile@@UEAAJPEAG@Z
?SwitchToFile@CFileStream@@UEAAJPEBG_KKPEAX@Z
?SwitchToFile@CRootPubDocFile@@QEAAJPEBGPEAUILockBytes@@PEAK@Z
?Sync@CSharedMemoryBlock@@QEAAJXZ
?Sync@CSmAllocator@@QEAAJXZ
?SyncReadAtFile@CNtfsStream@@AEAAJT_ULARGE_INTEGER@@PEAXKPEAK@Z
?SyncWriteAtFile@CNtfsStream@@AEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?SysCreateStream@@YAJKPEAKPEAPEAUIStream@@@Z
?SzLibIdOfIID@@YAJUHREG@@PEAU_GUID@@PEAG2PEAH@Z
?TLSGetDdeServer@@YAPEAUHWND__@@XZ
?Take@CDfMutex@@QEAAJK@Z
?Take@CSafeSem@@QEAAJXZ
?TakeSem@CPerContext@@QEAAJK@Z
?TearDownAdviseConnection@CCacheNode@@QEAAJPEAUIDataObject@@@Z
?TermConv@CDdeObject@@AEAAJPEAVDDE_CHANNEL@@H@Z
?Terminate@CDefClient@@QEAAJPEAUHWND__@@0@Z
?Terminate@CFileStream@@UEAAJH@Z
?Terminate@CFillLockBytes@@UEAAJH@Z
?TerminateNonRenameClients@CDefClient@@AEAAXPEAV1@@Z
?TestRegistryValue@@YAJUHREG@@PEBG1@Z
?Throw@@YAXK@Z
?ThrowHRESULT@@YAXJ@Z
?ToUnicode@@YAPEAGPEBD@Z
?ToUnicode@@YAXPEBDPEAGK@Z
?ToUtf8@@YAPEADPEBGK@Z
?TranslateAcceleratorW@CPageHolder@@UEAAJPEAUtagMSG@@@Z
?TryInterfaceHelper@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAXPEAH@Z
?TryInterfaceHelperForOle32@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAXPEAH@Z
?TryTypeLib@Interceptor@@SAJAEBU_GUID@@PEAUIUnknown@@0PEAPEAX@Z
?TurnOffAllMappings@CFileStream@@QEAAXXZ
?TurnOffMapping@CFileStream@@AEAAJH@Z
?UIntAdd@@YAJIIPEAI@Z
?UIntToUShort@@YAJIPEAG@Z
?ULongAdd@@YAJKKPEAK@Z
?ULongLongAdd@@YAJ_K0PEA_K@Z
?ULongLongMult@@YAJ_K0PEA_K@Z
?ULongLongToULong@@YAJ_KPEAK@Z
?ULongSub@@YAJKKPEAK@Z
?ULongToUShort@@YAJKPEAG@Z
?UShortAdd@@YAJGGPEAG@Z
?UnAdviseData@CDefClient@@QEAAJPEAUHWND__@@G@Z
?UnAdviseOn@CDdeObject@@AEAAJGH@Z
?UnInit@CItemMoniker@@AEAAXXZ
?UnRegisterCategories@CComCat@@UEAAJKQEAU_GUID@@@Z
?UnRegisterClassImplCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?UnRegisterClassReqCategories@CComCat@@UEAAJAEBU_GUID@@KQEAU2@@Z
?UnRegisterClassXXXCategories@CComCat@@AEAAJAEBU_GUID@@KQEAU2@PEBG@Z
?Unadvise@CAsyncConnection@@UEAAJK@Z
?Unadvise@CDAHolder@@UEAAJK@Z
?Unadvise@CDataAdviseCache@@QEAAJPEAUIDataObject@@K@Z
?Unadvise@CDefLink@@UEAAJK@Z
?Unadvise@CDefObject@@UEAAJK@Z
?Unadvise@CFontEventsCP@@UEAAJK@Z
?Unadvise@CNotifyCP@@UEAAJK@Z
?Unadvise@COAHolder@@UEAAJK@Z
?Unadvise@COleObjectImpl@CDdeObject@@UEAAJK@Z
?UnbindSource@CDefLink@@UEAAJXZ
?Uncache@COleCache@@UEAAJK@Z
?Unfreeze@CCacheNode@@QEAAJAEAH@Z
?Unfreeze@CCacheViewImpl@COleCache@@UEAAJK@Z
?Uninit@CSmAllocator@@QEAAJXZ
?UninitFontObject@CFont@@SAJXZ
?UnlaunchApp@CDdeObject@@AEAAJXZ
?Unlink@CUpdateList@@QEAAXXZ
?UnlinkCall@ClipboardDataObjectTask@@AEAAXPEAVCancellableCall@@@Z
?Unlock@@YAJPEAVCPropertySetStream@@J@Z
?Unlock@CExposedDocFile@@UEAAJXZ
?Unlock@CExposedStream@@UEAAJXZ
?Unlock@CNFFMappedStream@@UEAAJXZ
?Unlock@CNFFTreeMutex@@UEAAJXZ
?Unlock@CNtfsStorage@@UEAAJXZ
?Unlock@CPropertySetStorage@@IEAAXXZ
?Unlock@CPropertyStorage@@AEAAJXZ
?Unlock@CSSMappedStream@@UEAAJXZ
?UnlockRegion@CAbstractStream@@MEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CExposedStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CLimitedStreamBase@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CMemBytes@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CNtfsStream@@W7EAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CPictioFileStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CSimpStream@@UEAAJT_ULARGE_INTEGER@@0K@Z
?UnlockRegion@CStreamDummy@@UEAAJT_ULARGE_INTEGER@@0K@Z
?Unmap@CExposedStream@@UEAAXEPEAPEAX@Z
?Unmap@CNFFMappedStream@@UEAAXEPEAPEAX@Z
?Unmap@CSSMappedStream@@UEAAXEPEAPEAX@Z
?Unmarshal@CExposedDocFile@@SAJPEAUIStream@@PEAPEAXK@Z
?Unmarshal@CExposedStream@@SAJPEAUIStream@@PEAPEAXK@Z
?Unmarshal@CFileStream@@SAJPEAVCGlobalFileStream@@PEAPEAXK@Z
?Unmarshal@CallFrame@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@DISPATCH_CLIENT_FRAME@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@DISPATCH_INTERCEPTOR@@UEAAJKPEAXKHKPEAU__MIDL_ICallFrame_0004@@PEAKPEAPEAUICallFrame@@@Z
?Unmarshal@DISPATCH_SERVER_FRAME@@UEAAJPEAXKKPEAU__MIDL_ICallFrame_0004@@PEAK@Z
?Unmarshal@Interceptor@@EEAAJKPEAXKHKPEAU__MIDL_ICallFrame_0004@@PEAKPEAPEAUICallFrame@@@Z
?UnmarshalContext@@YAJPEAUSDfMarshalPacket@@PEAPEAVCPerContext@@KHH@Z
?UnmarshalFromEndpointProperty@@YAJPEAUHWND__@@HPEAPEAUIUnknown@@PEAH@Z
?UnmarshalInterface@CClassMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CDocfileUnmarshalFactory@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CExposedDocFile@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CExposedStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CMarshalImplPStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CPicture@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CPointerMoniker@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CSimpStorage@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@CSimpStream@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalInterface@FtmBase@WRL@Microsoft@@UEAAJPEAUIStream@@AEBU_GUID@@PEAPEAX@Z
?UnmarshalParam@CallFrame@@QEAAXAEAU_MIDL_STUB_MESSAGE@@AEBUPARAM_DESCRIPTION@@UPARAM_ATTRIBUTES@@PEAE@Z
?UnmarshalSharedMemory@@YAJPEAUSDfMarshalPacket@@KPEAVCPerContext@@@Z
?Unregister@ClassRegistration@@QEAAJXZ
?Unreserve@CDirectStream@@SAXIQEAVCDFBasis@@@Z
?Unreserve@CDocFile@@SAXIQEAVCDFBasis@@@Z
?Unreserve@CFreeList@@QEAAXI@Z
?Unreserve@CWrappedDocFile@@SAXIQEAVCDFBasis@@@Z
?Update@CCacheNode@@QEAAJPEAUIDataObject@@KAEAH@Z
?Update@CDdeObject@@AEAAJH@Z
?Update@CDefLink@@UEAAJPEAUIBindCtx@@@Z
?Update@CDefLink@@UEAAJXZ
?Update@CDefObject@@UEAAJXZ
?Update@COleObjectImpl@CDdeObject@@UEAAJXZ
?Update@HAS_INTERFACES@@QEBAXAEAJ@Z
?UpdateAdviseCounts@CDdeObject@@AEAAJGHH@Z
?UpdateAutoOnSave@CDefLink@@AEAAXXZ
?UpdateCache@COleCache@@UEAAJPEAUIDataObject@@KPEAX@Z
?UpdateCacheNodeForNative@COleCache@@AEAAPEAVCCacheNode@@XZ
?UpdateClsid@@YAXPEAU_GUID@@@Z
?UpdateFont@CFont@@QEAAJXZ
?UpdateFr@CFont@@QEAAJPEAUHFONT__@@PEAUtagTEXTMETRICW@@QEAG@Z
?UpdateMksFromAbs@CDefLink@@AEAAJPEAUIMoniker@@0@Z
?UpdateRelMkFromAbsMk@CDefLink@@AEAAXPEAUIMoniker@@@Z
?UpdateTarget@CDragOperation@@QEAAHXZ
?UpdateUserClassID@CDefLink@@AEAAXXZ
?Ut10NativeStmToContentsStm@@YAJPEAUIStorage@@AEBU_GUID@@H@Z
?UtCompareFormatEtc@@YAHPEAUtagFORMATETC@@0@Z
?UtCompareTargetDevice@@YAHPEAUtagDVTARGETDEVICE@@0@Z
?UtContentsStmTo10NativeStm@@YAJPEAUIStorage@@AEBU_GUID@@HPEAI@Z
?UtConvertBitmapToDib@@YAPEAXPEAUHBITMAP__@@PEAUHPALETTE__@@@Z
?UtConvertDibToBitmap@@YAPEAUHBITMAP__@@PEAX@Z
?UtCopyFormatEtc@@YAHPEAUtagFORMATETC@@0@Z
?UtCopyStatData@@YAHPEAUtagSTATDATA@@0@Z
?UtCreateStorageOnHGlobal@@YAJPEAXHPEAPEAUIStorage@@PEAPEAUILockBytes@@@Z
?UtDIBFileStmToPBrushNativeStm@@YAJPEAUIStream@@0@Z
?UtDIBStmToDIBFileStm@@YAJPEAUIStream@@K0@Z
?UtDupGlobal@@YAPEAXPEAXI@Z
?UtDupPalette@@YAPEAUHPALETTE__@@PEAU1@@Z
?UtDupPtr@@YAPEAXPEAXK@Z
?UtDupString@@YAPEAGPEBG@Z
?UtFormatToTymed@@YAKG@Z
?UtGetClassID@@YAHPEAUIUnknown@@PEAU_GUID@@@Z
?UtGetDibExtents@@YAXPEAUtagBITMAPINFOHEADER@@PEAJ1@Z
?UtGetHDIBFromDIBFileStm@@YAJPEAUIStream@@PEAPEAX@Z
?UtGetHEMFFromContentsStm@@YAXPEAUIStream@@PEAPEAX@Z
?UtGetHEMFFromEMFStm@@YAJPEAUIStream@@PEAKPEAPEAUHENHMETAFILE__@@@Z
?UtGetHGLOBALFromStm@@YAJPEAUIStream@@KPEAPEAX@Z
?UtGetHMFFromMFStm@@YAJPEAUIStream@@KHPEAPEAX@Z
?UtGetHMFPICT@@YAPEAXPEAUHMETAFILE__@@HKK@Z
?UtGetHMFPICTFromMSDrawNativeStm@@YAJPEAUIStream@@KPEAPEAX@Z
?UtGetHMFPICTFromPlaceableMFStm@@YAJPEAUIStream@@PEAPEAX@Z
?UtGetHPRESFromNative@@YAPEAXPEAUIStorage@@PEAUIStream@@GH@Z
?UtGetIconData@@YAJPEAUIDataObject@@AEBU_GUID@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?UtGetPresStreamName@@YAXPEAGH@Z
?UtGetSizeAndExtentsFromPlaceableMFStm@@YAJPEAUIStream@@PEAKPEAJ2@Z
?UtGetTempFileName@@YAJPEAG0@Z
?UtGetUNICODEData@@YAJKPEADPEAGPEAPEAG@Z
?UtHDIBFileToOlePresStm@@YAJPEAXPEAUIStream@@@Z
?UtHDIBToDIBFileStm@@YAJPEAXKPEAUIStream@@@Z
?UtHEMFToEMFStm@@YAJPEAUHENHMETAFILE__@@KPEAUIStream@@W4tagEMFWRITETYPE@@@Z
?UtHGLOBALtoHGLOBAL@@YAJPEAXK0@Z
?UtHGLOBALtoStm@@YAJPEAXKPEAUIStream@@@Z
?UtHGLOBALtoStorage@@YAJPEAXPEAUIStorage@@@Z
?UtHMFToMFStm@@YAJPEAPEAXKPEAUIStream@@@Z
?UtHMFToPlaceableMFStm@@YAJPEAPEAXKJJPEAUIStream@@@Z
?UtIsFormatSupported@@YAHPEAUIDataObject@@KG@Z
?UtMFStmToPlaceableMFStm@@YAJPEAUIStream@@KJJ0@Z
?UtOlePresStmToContentsStm@@YAJPEAUIStorage@@PEAGHPEAI@Z
?UtOlePresStmToContentsStm@@YAJPEAUIStorage@@PEAGPEAUIStream@@PEAI@Z
?UtPaletteSize@@YA_KPEAUtagBITMAPINFOHEADER@@@Z
?UtPlaceableMFStmToMSDrawNativeStm@@YAJPEAUIStream@@0@Z
?UtPutUNICODEData@@YAJKPEAGPEAPEADPEAPEAGPEAK@Z
?UtQueryPictFormat@@YAHPEAUIDataObject@@PEAUtagFORMATETC@@@Z
?UtReadOlePresStmHeader@@YAJPEAUIStream@@PEAUtagFORMATETC@@PEAKPEAH@Z
?UtReleaseStatData@@YAXPEAUtagSTATDATA@@@Z
?UtRemoveExtraOlePresStreams@@YAXPEAUIStorage@@H@Z
?UtWriteOlePresStmHeader@@YAJPEAUIStream@@PEAUtagFORMATETC@@K@Z
?UtilQueryProtocol@@YAHGPEAG@Z
?ValidSig@CROTItem@@QEAAHGH@Z
?Validate@CEnumSTATPROPSETSTG@@AEAAJXZ
?Validate@CEnumSTATPROPSTG@@AEAAJXZ
?Validate@CExposedDocFile@@QEBAJXZ
?Validate@CExposedIterator@@QEBAJXZ
?Validate@CExposedStream@@QEBAJXZ
?Validate@CMSFHeader@@QEBAJXZ
?Validate@CPropertySetStorage@@IEAAJXZ
?Validate@CPropertyStorage@@AEAAJXZ
?ValidateAndAcquireACImpersonationSource@CClipboardBroker@@EEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z
?ValidateAndAcquireACImpersonationSource@CClipboardBrokerExternalReference@CClipboardBroker@@UEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z
?ValidateAndAcquireACImpersonationSourceInternal@CClipboardBrokerMTAHelper@CClipboardBroker@@EEAAJPEAUIDataObject@@PEAPEAUIImpersonateClipboardOwner@@@Z
?ValidateAnsiPath@CFileMoniker@@QEAAJXZ
?ValidateDIFat@CSimpStorageOpen@@QEAAJPEAKKK@Z
?ValidateDirectory@CSimpStorageOpen@@QEAAJPEAEK@Z
?ValidateFat@CSimpStorageOpen@@QEAAJPEAKK@Z
?ValidateGetBufferSize@CUserMarshalInfo@@QEAA_KXZ
?ValidateGrfAttrs@@YAJKK@Z
?ValidateGrfMode@@YAJKH@Z
?ValidateHeader@CSimpStorageOpen@@QEAAJAEAVCMSFHeader@@@Z
?ValidateInRGLPOLESTR@@YAJKQEBQEBG@Z
?ValidateInRGPROPVARIANT@@YAJKQEBUtagPROPVARIANT@@@Z
?ValidateNameW@@YAJPEBGI@Z
?ValidateOutRGPROPVARIANT@@YAJKQEAUtagPROPVARIANT@@@Z
?ValidateRGPROPID@CPropertyStorage@@AEAAJKQEBK@Z
?ValidateRGPROPSPEC@CPropertyStorage@@AEAAJKQEBUtagPROPSPEC@@@Z
?ValidateRef@CPropertyStorage@@AEAAJXZ
?ValidateSNB@@YAJPEAPEAG@Z
?ValidateSecurityDescriptor@@YAJPEAX@Z
?ValidateSrvrClass@@YAHPEAG0@Z
?ValidateStgOptions@@YAJPEAUtagSTGOPTIONS@@KH@Z
?ValidateWriteAccess@CExposedDocFile@@AEAAJXZ
?ValidateWriteAccess@CExposedStream@@AEAAJXZ
?VariantClear@OAUTIL@@QEAAJPEAUtagVARIANT@@H@Z
?VariantCopy@OAUTIL@@QEAAJPEAUtagVARIANT@@0H@Z
?VariantToProperty_Worker@@YAPEAUtagSERIALIZEDPROPERTYVALUE@@PEBUtagPROPVARIANT@@GPEAU1@PEAKKEE2PEAGPEAJ@Z
?VerifyCallerIsClipboardOwner@@YAPEAUHWND__@@PEBG@Z
?VerifyDVTARGETDEVICE16@@YAJPEFBUtagDVTARGETDEVICE@@@Z
?VerifyIid@@YAJAEBU_GUID@@0@Z
?VerifyLockType@@YAJK@Z
?VerifyMatchingSecret@CProcessSecret@@QEAAJU_GUID@@@Z
?VerifyPerms@@YAJKH@Z
?VerifySectorAvailableAtOffset@@YAJPEAUILockBytes@@K_K@Z
?VerifyStructFromHGlobal@@YAJGPEAX@Z
?VerifyThreadId@CThreadCheck@@QEAAHXZ
?VgaPalIx@@YAHPEAUtagRGBQUAD@@@Z
?Wait@CBindStatusCallback@@UEAAJKK@Z
?WaitForWriteAccess@CExposedDocFile@@UEAAJK@Z
?Walk@OAUTIL@@AEAAJPEAUtagSAFEARRAY@@PEAUIRecordInfo@@KPEAXPEAPEAX@Z
?Walk@OAUTIL@@AEAAJPEAUtagSAFEARRAY@@PEAX@Z
?Walk@OAUTIL@@QEAAJKPEAUtagDISPPARAMS@@@Z
?Walk@OAUTIL@@QEAAJPEAUtagSAFEARRAY@@@Z
?Walk@OAUTIL@@QEAAJPEAUtagVARIANT@@@Z
?WalkEmbeddedPointers@CallFrame@@QEAAXPEAEPEBE@Z
?WalkEmbeddedRepeatPointers@CallFrame@@QEAAPEBEPEAEPEBE@Z
?WalkFrame@CallFrame@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkFrame@DISPATCH_FRAME@@UEAAJKPEAUICallFrameWalker@@@Z
?WalkInterface@OAUTIL@@QEAAJAEBU_GUID@@PEAPEAXPEAUICallFrameWalker@@@Z
?WalkInterfaces@OAUTIL@@QEAAHXZ
?WalkRecord@OAUTIL@@AEAAJPEAXPEAUIRecordInfo@@@Z
?WalkRecord@OAUTIL@@AEAAJPEAXPEAUITypeInfo@@@Z
?WalkRecordField@OAUTIL@@AEAAJPEAEPEAUtagTYPEDESC@@PEAUITypeInfo@@@Z
?WalkThroughAlias@@YAJPEAPEAUITypeInfo@@PEAPEAUtagTYPEATTR@@@Z
?WalkWorker@CallFrame@@QEAAXPEAEPEBE@Z
?WdtpGlobalUnmarshal64@@YAPEAEPEAKPEAEPEAPEAXH_K@Z
?WdtpGlobalUnmarshal@@YAPEAEPEAKPEAEPEAPEAXH_K@Z
?WdtpInterfacePointer_UserUnmarshalWorker@@YAPEAEPEAU_USER_MARSHAL_CB@@PEAEPEAPEAUIUnknown@@AEBU_GUID@@_KH@Z
?WdtpRemotableHandle_UserMarshal@@YAPEAEPEAKPEAEPEA_J@Z
?WdtpRemotableHandle_UserSize@@YAKPEAKKPEA_J@Z
?WdtpRemotableHandle_UserUnmarshal@@YAPEAEPEAKPEAEPEA_J@Z
?WeOwn@CallFrame@@QEAAHPEAX@Z
?Win32ErrorToScode@@YAJK@Z
?Worker@DeserializeHelper@@QEAAJPEBUtagSERIALIZEDPROPERTYVALUE@@KHHHPEAUtagPROPVARIANT@@PEAK@Z
?Write@CBaseMInterfacePointerMarshalingStream@@UEAAJPEBXKPEAK@Z
?Write@CBaseMarshalingStreamOnBuffer@@UEAAJPEBXKPEAK@Z
?Write@CExpParameterValidate@@SAJPEBXKPEAK@Z
?Write@CExposedStream@@UEAAJPEBXKPEAK@Z
?Write@CLimitedWritableStream@@UEAAJPEBXKPEAK@Z
?Write@CNFFMappedStream@@QEAAXPEBXKPEAK@Z
?Write@CNtfsStream@@UEAAJPEBXKPEAK@Z
?Write@CPictioFileStream@@UEAAJPEBXKPEAK@Z
?Write@CPropertyBagEx@@UEAAJPEBGPEAUtagVARIANT@@@Z
?Write@CPubMappedStream@@QEAAJXZ
?Write@CReadOnlyStream@@UEAAJPEBXKPEAK@Z
?Write@CSSMappedStream@@IEAAJXZ
?Write@CSimpStream@@UEAAJPEBXKPEAK@Z
?Write@CSimpStreamOpen@@UEAAJPEBXKPEAK@Z
?Write@CStmBufWrite@@QEAAJPEBXK@Z
?Write@CStreamDummy@@UEAAJPEBXKPEAK@Z
?WriteAnsiStringStream@@YAJPEAUIStream@@PEADK@Z
?WriteAt@CDirectStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAt@CExpParameterValidate@@SAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CFileStream@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CFillLockBytes@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CMemBytes@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CNtfsStream@@UEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteAt@CPubStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAt@CTransactedStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAt@PSStream@@QEAAJ_KPEBXKPEAK@Z
?WriteAtWorker@CFileStream@@AEAAJT_ULARGE_INTEGER@@PEBXKPEAK@Z
?WriteCompObjStm@@YAJPEAUIStorage@@PEAVCompObjStmData@@@Z
?WriteControlStream@CNtfsStorage@@IEAAJXZ
?WriteDoubleString@@YAJPEAUIStream@@PEAGGPEADG@Z
?WriteMap@CDeltaList@@AEAAJPEAKKK@Z
?WriteMappedStream@CNFFMappedStream@@AEAAJXZ
?WriteMultiple@CPropertyBagEx@@UEAAJKQEBQEBGQEBUtagPROPVARIANT@@@Z
?WriteMultiple@CPropertyStorage@@UEAAJKQEBUtagPROPSPEC@@QEBUtagPROPVARIANT@@K@Z
?WriteNameDictToStream@CPropertySection@@QEAAHPEAUIStream@@@Z
?WriteObjects@CPropertyBagEx@@AEAAJKQEBUtagPROPSPEC@@QEBUtagPROPVARIANT@@@Z
?WriteOneObject@CPropertyBagEx@@AEAAJPEBUtagPROPSPEC@@PEBUtagPROPVARIANT@@@Z
?WritePropertyNames@CPropertyStorage@@UEAAJKQEBKQEBQEAG@Z
?WriteStorageProperties@@YAJPEAUIStorage@@AEBU_GUID@@GPEAG@Z
?WriteStringStreamA@@YAJAEAVCStmBufWrite@@PEBD@Z
?WriteToStream@CProperty@@QEAAHPEAUIStream@@@Z
?WriteToStream@CPropertySection@@QEAAHPEAUIStream@@@Z
?WriteToStream@CPropertySet@@QEAAHPEAUIStream@@@Z
?_CompactStream@CPropertySetStream@@AEAAXPEBVCStreamChunkList@@@Z
?_ComparePropertyNames@CPropertySetStream@@AEBAEPEBX0HKPEAJ@Z
?_CountFreePropertyOffsets@CPropertySetStream@@AEAAKPEAJ@Z
?_Create@CPropertySetStream@@AEAAXPEBU_GUID@@0KGW4tagLOADSTATE@@KPEAJ@Z
?_CreateUserDefinedSection@CPropertySetStream@@AEAAEW4tagLOADSTATE@@KPEAJ@Z
?_DeleteMovePropertyOffsets@CPropertySetStream@@AEAAXPEBUtagPROPERTY_INFORMATION@@KPEAJ@Z
?_DictionaryEntryLength@CPropertySetStream@@AEBAKPEFBUtagENTRY@@@Z
?_DictionaryLength@CPropertySetStream@@AEBAKPEBUtagDICTIONARY@@KPEAJ@Z
?_EnsureCapacity@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@AEAAJ_K@Z
?_FHbmpsOfHicon@@YAJPEAUHICON__@@PEAPEAUHBITMAP__@@1@Z
?_FSaveIconViaBitmaps@@YAJPEAUIStream@@JJPEAUHBITMAP__@@1PEAJ@Z
?_Find@CContextList@@QEAAPEAVCContext@@K@Z
?_FixDocPartsElements@CPropertySetStream@@AEAAEW4tagPATCHOP@@KPEAXPEFBXPEAK@Z
?_FixDocPartsVector@CPropertySetStream@@AEAAEW4tagPATCHOP@@PEAUtagSERIALIZEDPROPERTYVALUE@@PEAK@Z
?_FixHeadingPairElements@CPropertySetStream@@AEAAEW4tagPATCHOP@@KPEAUtagSERIALIZEDPROPERTYVALUE@@PEFBU3@PEAK@Z
?_FixHeadingPairVector@CPropertySetStream@@AEAAEW4tagPATCHOP@@PEAUtagSERIALIZEDPROPERTYVALUE@@PEAK@Z
?_FixPackedPropertySet@CPropertySetStream@@AEAAXPEAJ@Z
?_FixSummaryInformation@CPropertySetStream@@AEAAXPEAKPEAJ@Z
?_Free@?$NativeString@V?$CoTaskMemPolicy@G@Internal@Windows@@@Internal@Windows@@AEAAXXZ
?_GeneratePackageSentinelName@@YAJPEBG0PEAPEAG@Z
?_GetMetaFileBitsSize@@YAPEAXPEAUHMETAFILE__@@PEAK@Z
?_GetPackageSentinel@@YAJPEBG0W4GET_PACKAGE_SENTINEL_DISPOSITION@@PEAPEAX@Z
?_InitSection@CPropertySetStream@@AEAAXPEAUtagFORMATIDOFFSET@@KH@Z
?_InsertMovePropertyOffsets@CPropertySetStream@@AEAAXPEBUtagPROPERTY_INFORMATION@@KKKPEAJ@Z
?_IsLocalizationSettable@CPropertySetStream@@AEAAEPEAJ@Z
?_LoadHeader@CPropertySetStream@@AEAA?AW4tagLOADSTATE@@PEBU_GUID@@EPEAJ@Z
?_LoadProperty@CPropertySetStream@@AEAAPEAUtagSERIALIZEDPROPERTYVALUE@@KPEAKPEAJ@Z
?_LoadPropertyOffsetPointers@CPropertySetStream@@AEAAPEAUtagPROPERTYSECTIONHEADER@@PEAPEAUtagPROPERTYIDOFFSET@@0PEAJ@Z
?_LocalAlloc@@YAPEAX_K@Z
?_LocalFree@@YAXPEAX@Z
?_MfCallbackFuncForDraw@@YAHPEAUHDC__@@PEAUtagHANDLETABLE@@PEAUtagMETARECORD@@H_J@Z
?_MultiByteToWideChar@CPropertySetStream@@AEBAXPEBDKGPEAPEAGPEAJ@Z
?_OlePropSheetProc@@YAHPEAUHWND__@@I_J@Z
?_PageHolderDlgProc@@YA_JPEAUHWND__@@I_K_J@Z
?_PageHolderPageProc@@YAIPEAUHWND__@@IPEAU_PROPSHEETPAGEA@@@Z
?_PatchSectionOffsets@CPropertySetStream@@AEAAXJ@Z
?_PictCallbackBindHost@@YAJPEAUIUnknown@@PEAPEAUIBindHost@@@Z
?_PictChaseDownBindHost@@YAJPEAUIUnknown@@PEAPEAUIBindHost@@@Z
?_PictDibFromBitmap@@YAPEAXPEAUHBITMAP__@@PEAUHPALETTE__@@@Z
?_PictDibNumColors@@YAIPEAUtagBITMAPINFOHEADER@@@Z
?_PictEmfToWmf@@YAPEAUHMETAFILE__@@PEAUHENHMETAFILE__@@@Z
?_PictFDibSection@@YAHPEAUHBITMAP__@@@Z
?_PictFreeLibraries@@YAJXZ
?_PictLoadDIBitmap@@YAJPEAVCPicture@@PEAUIStream@@J@Z
?_PictLoadIcon@@YAJPEAUIStream@@PEAPEAUHBITMAP__@@1PEAPEAUHICON__@@KKK@Z
?_PictLoadIconToPicInfo@@YAJPEAVCPicture@@PEAUIStream@@KKK@Z
?_PictLoadMetaFile@@YAJPEAVCPicture@@PEAUIStream@@J@Z
?_PictLoadMetaFileRaw@@YAJPEAVCPicture@@PEAUIStream@@JPEAURECTS@@@Z
?_PictLoadNewImage@@YAJPEAVCPicture@@PEAUIStream@@JHKKK@Z
?_PictLoadPicture@@YAJPEAVCPicture@@PEAUIStream@@JHKKK@Z
?_PictLoadSyncImage@@YAJAEBU_GUID@@PEAVCPicture@@PEAUIStream@@@Z
?_PictLoadURLSync@@YAJKPEAGPEAUIBindHost@@KAEBU_GUID@@PEAPEAX@Z
?_PictLoadUnknownMetaFile@@YAJPEAVCPicture@@PEAUIStream@@J@Z
?_PictPaletteSize@@YAIPEAUtagBITMAPINFOHEADER@@@Z
?_PictSaveBitmap@@YAJPEAUIStream@@PEAVCPicture@@PEAJ@Z
?_PictSaveEnhMetaFile@@YAJPEAUIStream@@PEAVCPicture@@PEAJ@Z
?_PictSaveMetaFile@@YAJPEAUIStream@@PEAVCPicture@@PEAJ@Z
?_PictStretchBlt@@YAHPEAUHDC__@@HHHH0HHHHK@Z
?_PictStuffBMIH@@YAJPEAVCPicture@@PEAUIImageFilter@@@Z
?_PictStuffFilter@@YAJPEAVCPicture@@PEAUIDataTransfer@@@Z
?_PropertyNameLength@CPropertySetStream@@AEBAGPEBXPEAK@Z
?_ResToIcon@@YAPEAUHICON__@@PEAXPEAPEAUHBITMAP__@@1HHHHH@Z
?_ResetOrigDC@@YAXPEAUHDC__@@HPEAUtagRECT@@1@Z
?_RestoreBitmap@@YAXPEAUHDC__@@PEAUHBITMAP__@@@Z
?_SearchForCodePage@CPropertySetStream@@AEAAXPEAJ@Z
?_SetDCToDrawInHimetric@@YAHPEAUHDC__@@PEAUtagRECT@@111@Z
?_SetMetaFileBitsSize@@YAPEAUHMETAFILE__@@PEAXK@Z
?_UpdatePropertyOffsets@CPropertySetStream@@AEAAXPEBVCStreamChunkList@@PEAJ@Z
?_UtDupPalette@@YAPEAUHPALETTE__@@PEAU1@@Z
?_WideCharToMultiByte@CPropertySetStream@@AEAAXPEBGKGPEAPEADPEAJ@Z
?_WriteMultiple@CPropertyStorage@@AEAAJKQEBUtagPROPSPEC@@QEBUtagPROPVARIANT@@K@Z
?_WritePropertyNames@CPropertyStorage@@AEAAJKQEBKQEBQEAG@Z
?_typesDllGetClassObject@@YAJAEBU_GUID@@0PEAPEAX@Z
?_typesDllRegisterServer@@YAJXZ
?add@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@@Z
?add@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@@Z
?add@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@QEAAXAEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@@Z
?dfwcsnicmp@@YAHPEBG0_K@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?find@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEBAHAEBVMAP_KEY_GUID@@PEAPEAPEAVAssoc@1@@Z
?fnChunkCompare@@YAHPEBX0@Z
?fnOffsetCompare@@YAHPEBX0@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?freeAssoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXPEAVAssoc@1@@Z
?get_Attributes@CPicture@@UEAAJPEAK@Z
?get_Attributes@CPicture@@W7EAAJPEAK@Z
?get_Bold@CFont@@UEAAJPEAH@Z
?get_Charset@CFont@@UEAAJPEAF@Z
?get_CurDC@CPicture@@UEAAJPEAPEAUHDC__@@@Z
?get_CurDC@CPicture@@W7EAAJPEAPEAUHDC__@@@Z
?get_Handle@CPicture@@UEAAJPEAI@Z
?get_Handle@CPicture@@UEAAJPEA_K@Z
?get_Height@CPicture@@UEAAJPEAJ@Z
?get_Height@CPicture@@W7EAAJPEAJ@Z
?get_Italic@CFont@@UEAAJPEAH@Z
?get_KeepOriginalFormat@CPicture@@UEAAJPEAH@Z
?get_KeepOriginalFormat@CPicture@@W7EAAJPEAH@Z
?get_Mask@CPicture@@QEAAJPEAI@Z
?get_Name@CFont@@UEAAJPEAPEAG@Z
?get_Size@CBaseMInterfacePointerMarshalingStream@@MEBA_KXZ
?get_Size@CBaseMarshalingStreamOnBuffer@@MEBA_KXZ
?get_Size@CFont@@UEAAJPEATtagCY@@@Z
?get_Strikethrough@CFont@@UEAAJPEAH@Z
?get_Type@CPicture@@UEAAJPEAF@Z
?get_Type@CPicture@@W7EAAJPEAF@Z
?get_Underline@CFont@@UEAAJPEAH@Z
?get_Weight@CFont@@UEAAJPEAF@Z
?get_Width@CPicture@@UEAAJPEAJ@Z
?get_Width@CPicture@@W7EAAJPEAJ@Z
?get_hFont@CFont@@UEAAJPEAPEAUHFONT__@@@Z
?get_hPal@CPicture@@UEAAJPEAI@Z
?get_hPal@CPicture@@UEAAJPEA_K@Z
?grow@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?grow@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?grow@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXXZ
?iFindDIBits@@YAHPEAUtagBITMAPINFOHEADER@@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUINTERFACE_HELPER_CLSID@@PEAPEAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUMD_INTERFACE@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUMD_INTERFACE@@PEAPEAVAssoc@1@@Z
?newAssoc@?$Map@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@AEAAXAEBVMAP_KEY_GUID@@AEBQEAUTYPEINFOVTBL@@PEAPEAVAssoc@1@@Z
?next@?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAHXZ
?next@?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAHXZ
?put_Bold@CFont@@UEAAJH@Z
?put_Charset@CFont@@UEAAJF@Z
?put_Italic@CFont@@UEAAJH@Z
?put_KeepOriginalFormat@CPicture@@UEAAJH@Z
?put_KeepOriginalFormat@CPicture@@W7EAAJH@Z
?put_Name@CFont@@UEAAJPEAG@Z
?put_Size@CFont@@UEAAJTtagCY@@@Z
?put_Strikethrough@CFont@@UEAAJH@Z
?put_Underline@CFont@@UEAAJH@Z
?put_Weight@CFont@@UEAAJF@Z
?reset@?$EnumMap@VMAP_KEY_GUID@@PEAUINTERFACE_HELPER_CLSID@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAXXZ
?reset@?$EnumMap@VMAP_KEY_GUID@@PEAUTYPEINFOVTBL@@U?$MAP_HASHER@VMAP_KEY_GUID@@@@UAllocateThrow@@@@UEAAXXZ
?serverThreadStart@ClipboardBrokerFactory@@CAKPEAX@Z
?set_hPal@CPicture@@UEAAJI@Z
?set_hPal@CPicture@@UEAAJ_K@Z
?vRelease@CDFBasis@@QEAAJXZ
?vRelease@CPubDocFile@@QEAAJXZ
?vRelease@CPubStream@@QEAAJXZ
?vRelease@CSeekPointer@@QEAAXXZ
?vdtor@CPubDocFile@@QEAAXXZ
?vdtor@CRootPubDocFile@@QEAAXXZ
?wAllocDdePokeBlock@@YAPEADKGPEAPEAX@Z
?wAtomLenA@@YAHG@Z
?wAtomName@@YAPEAGG@Z
?wAtomNameA@@YAPEADG@Z
?wBindIfRunning@@YAXPEAUIUnknown@@@Z
?wCLSIDFromOle1Class@@YAJPEAGPEAU_GUID@@H@Z
?wCLSIDFromOle1Class@@YAJPEBGPEAU_GUID@@H@Z
?wCLSIDFromString@@YAJPEBGPEAU_GUID@@@Z
?wClearRelativeMoniker@@YAXPEAUIUnknown@@0@Z
?wClearWaitState@@YAHPEAVDDE_CHANNEL@@@Z
?wCoGetClassExt@@YAJPEBGPEAU_GUID@@@Z
?wCoGetClassPattern@@YAJPEAXPEAU_GUID@@@Z
?wCoGetTreatAsClass@@YAJAEBU_GUID@@PEAU1@@Z
?wCoTreatAsClass@@YAJAEBU_GUID@@0@Z
?wCommonPrefixWith@CFileMoniker@@EEAAJPEAUIMoniker@@PEAPEAU2@@Z
?wCompatibleClasses@@YAJGG@Z
?wConvertIStorageToOLESTREAM@@YAJPEAUIStorage@@PEAU_OLESTREAM@@PEAVCGenericObject@@@Z
?wConvertOLESTREAMToIStorage@@YAJPEAU_OLESTREAM@@PEAUIStorage@@PEAVCGenericObject@@@Z
?wCreateFromDataEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@PEAPEAXPEAX@Z
?wCreateFromFileEx@@YAJPEAUIMoniker@@PEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@3PEAUIOleClientSite@@PEAUIStorage@@PEAPEAXPEAX@Z
?wCreateLinkEx@@YAJPEAUIMoniker@@AEBU_GUID@@PEAUIDataObject@@1KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@3PEAUIOleClientSite@@PEAUIStorage@@PEAPEAX@Z
?wCreateObject@@YAJU_GUID@@HAEBU1@PEAUIOleClientSite@@PEAUIStorage@@GPEAPEAXPEAX@Z
?wCreatePackageEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@HPEAPEAX@Z
?wCreateStgAroundNative@@YAJPEAXGGW4CNVTYP@@GPEAPEAUIStorage@@PEAPEAUILockBytes@@@Z
?wDoLockUnlock@@YAXPEAUIUnknown@@@Z
?wDoUpdate@@YAJPEAUIUnknown@@@Z
?wDupAtom@@YAGG@Z
?wExtendAtom@@YAGGH@Z
?wFileBind@@YAJPEAGPEAPEAUIUnknown@@@Z
?wFreeData@@YAXPEAXGH@Z
?wFreePokeData@@YAXPEAVDDE_CHANNEL@@H@Z
?wGUIDFromString@@YAHPEBGPEAU_GUID@@@Z
?wGetData@@YAJPEAUIDataObject@@PEAUtagFORMATETC@@PEAUtagSTGMEDIUM@@@Z
?wGetEnumFormatEtc@@YAJPEAUIDataObject@@KPEAPEAUIEnumFORMATETC@@@Z
?wGetExeNameAtom@@YAGAEBU_GUID@@@Z
?wGetMonikerAndClassFromFile@@YAJPEBGHPEAPEAUIMoniker@@PEAHPEAU_GUID@@PEAPEAUIDataObject@@@Z
?wGetMonikerAndClassFromObject@@YAJPEAUIDataObject@@PEAPEAUIMoniker@@PEAU_GUID@@@Z
?wGetOleMenuPtr@@YAPEAUtagOLEMENU@@PEAX@Z
?wGlobalAddAtom@@YAGPEBG@Z
?wHandleCopy@@YAJPEAX0@Z
?wHandleFromDdeData@@YAPEAXPEAX@Z
?wInitializeCacheEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAXPEAH@Z
?wInitiate@@YAHPEAVDDE_CHANNEL@@GG@Z
?wIsOldServer@@YAHG@Z
?wLoadAndInitObjectEx@@YAJPEAUIDataObject@@AEBU_GUID@@KKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@2PEAUIOleClientSite@@PEAUIStorage@@PEAPEAXPEAX@Z
?wNeedToPackage@@YAHAEBU_GUID@@@Z
?wNewHandle@@YAPEAXPEADK@Z
?wNormalize@@YAJPEAUtagFORMATETC@@0@Z
?wOle1ClassFromCLSID2@@YAHAEBU_GUID@@PEAGH@Z
?wPostMessageToServer@@YAHPEAVDDE_CHANNEL@@G_JH@Z
?wPreparePokeBlock@@YAPEAXPEAXGGH@Z
?wProgIDFromCLSID@@YAJAEBU_GUID@@PEAPEAG@Z
?wQueryEmbedFormats@@YAGPEAUIDataObject@@PEAG@Z
?wQueryFormatSupport@@YAJPEAXKPEAUtagFORMATETC@@@Z
?wQueryLinkFormats@@YAGPEAUIDataObject@@@Z
?wQueryUseCustomLink@@YAHAEBU_GUID@@@Z
?wRegGetClassExt@@YAJPEBGPEAU_GUID@@@Z
?wRegOpenClassKey@@YAJAEBU_GUID@@KPEAPEAUHKEY__@@@Z
?wRegQueryClassValue@@YAJAEBU_GUID@@PEBGPEAGH@Z
?wSaveObjectWithoutCommit@@YAJPEAUIUnknown@@PEAUIStorage@@H@Z
?wScanItemOptions@@YAJGPEAH@Z
?wSetTymed@@YAJPEAUtagFORMATETC@@@Z
?wStringFromUUID@@YAJAEBU_GUID@@PEAG@Z
?wStuffIconOfFileEx@@YAJPEBGHKKPEAUtagFORMATETC@@PEAUIUnknown@@@Z
?wTerminateIsComing@@YAHPEAVDDE_CHANNEL@@@Z
?wTimedGetMessage@@YAJPEAUtagMSG@@PEAUHWND__@@GG@Z
?wTransferHandle@@YAJPEAPEAX0G@Z
?wUUIDFromString@@YAHPEBGPEAU_GUID@@@Z
?wValidateAdvfEx@@YAJKPEAK@Z
?wValidateCreateParams@@YAJKKKPEAKPEAUtagFORMATETC@@PEAUIAdviseSink@@0PEAUIOleClientSite@@PEAUIStorage@@@Z
?wValidateFormatEtc@@YAJKPEAUtagFORMATETC@@0@Z
?wValidateFormatEtcEx@@YAJKPEAKPEAUtagFORMATETC@@1PEAPEAU1@PEAH@Z
?wVerifyFormatEtc@@YAJPEAUtagFORMATETC@@@Z
?wWriteFmtUserType@@YAJPEAUIStorage@@AEBU_GUID@@@Z
ASYNC_STGMEDIUM_UserFree
ASYNC_STGMEDIUM_UserFree64
ASYNC_STGMEDIUM_UserMarshal
ASYNC_STGMEDIUM_UserMarshal64
ASYNC_STGMEDIUM_UserSize
ASYNC_STGMEDIUM_UserSize64
ASYNC_STGMEDIUM_UserUnmarshal
ASYNC_STGMEDIUM_UserUnmarshal64
AssignEndpointProperty
AsyncIAdviseSink2_Begin_OnLinkSrcChange_Proxy
AsyncIAdviseSink2_Begin_RemoteOnLinkSrcChange_Thunk
AsyncIAdviseSink2_Finish_OnLinkSrcChange_Proxy
AsyncIAdviseSink2_Finish_RemoteOnLinkSrcChange_Thunk
AsyncIAdviseSink_Begin_OnClose_Proxy
AsyncIAdviseSink_Begin_OnDataChange_Proxy
AsyncIAdviseSink_Begin_OnRename_Proxy
AsyncIAdviseSink_Begin_OnSave_Proxy
AsyncIAdviseSink_Begin_OnViewChange_Proxy
AsyncIAdviseSink_Begin_RemoteOnClose_Thunk
AsyncIAdviseSink_Begin_RemoteOnDataChange_Thunk
AsyncIAdviseSink_Begin_RemoteOnRename_Thunk
AsyncIAdviseSink_Begin_RemoteOnSave_Thunk
AsyncIAdviseSink_Begin_RemoteOnViewChange_Thunk
AsyncIAdviseSink_Finish_OnClose_Proxy
AsyncIAdviseSink_Finish_OnDataChange_Proxy
AsyncIAdviseSink_Finish_OnRename_Proxy
AsyncIAdviseSink_Finish_OnSave_Proxy
AsyncIAdviseSink_Finish_OnViewChange_Proxy
AsyncIAdviseSink_Finish_RemoteOnClose_Thunk
AsyncIAdviseSink_Finish_RemoteOnDataChange_Thunk
AsyncIAdviseSink_Finish_RemoteOnRename_Thunk
AsyncIAdviseSink_Finish_RemoteOnSave_Thunk
AsyncIAdviseSink_Finish_RemoteOnViewChange_Thunk
BSTR_UserFree
BSTR_UserFree64
BSTR_UserMarshal
BSTR_UserMarshal64
BSTR_UserSize
BSTR_UserSize64
BSTR_UserUnmarshal
BSTR_UserUnmarshal64
BindMoniker
CLIPFORMAT_UserFree
CLIPFORMAT_UserFree64
CLIPFORMAT_UserMarshal
CLIPFORMAT_UserMarshal64
CLIPFORMAT_UserSize
CLIPFORMAT_UserSize64
CLIPFORMAT_UserUnmarshal
CLIPFORMAT_UserUnmarshal64
CLSIDFromOle1Class
CLSIDFromProgIDEx
COMInterceptor
CStdStubBuffer2_Release
CStdStubBuffer_AddRef
CStdStubBuffer_Connect
CStdStubBuffer_CountRefs
CStdStubBuffer_DebugServerQueryInterface
CStdStubBuffer_DebugServerRelease
CStdStubBuffer_Disconnect
CStdStubBuffer_Invoke
CStdStubBuffer_IsIIDSupported
CStdStubBuffer_QueryInterface
CStdStubBuffer_Release
CallFrameInternal_CStdStubBuffer_Release
CallerLocalityIndicator_UserFree
CallerLocalityIndicator_UserFree64
CallerLocalityIndicator_UserMarshal
CallerLocalityIndicator_UserMarshal64
CallerLocalityIndicator_UserSize
CallerLocalityIndicator_UserSize64
CallerLocalityIndicator_UserUnmarshal
CallerLocalityIndicator_UserUnmarshal64
ClientDocWndProc
ClipboardWndProc
CoAicGetTokenForCOM
CoAllowSetForegroundWindow
CoBuildVersion
CoCheckElevationEnabled
CoDosDateTimeToFileTime
CoFileTimeNow
CoFileTimeToDosDateTime
CoFreeAllLibraries
CoFreeLibrary
CoGetInterceptor
CoGetInterceptorForOle32
CoGetInterceptorFromTypeInfo
CoGetObject
CoGetSystemWow64DirectoryW
CoGetTreatAsClass
CoInitialize
CoInitializeWOW
CoInstall
CoIsOle1Class
CoLoadLibrary
CoOpenClassKey
CoQueryReleaseObject
CoRegisterMessageFilter
CoRegisterSurrogateEx
CoSetState
CoTreatAsClass
CoUnloadingWOW
ComPs_NdrDllCanUnloadNow
ComPs_NdrDllGetClassObject
ComPs_NdrDllRegisterProxy
ComPs_NdrDllUnregisterProxy
Concatenate
CreateAntiMoniker
CreateBindCtx
CreateCallback
CreateClassMoniker
CreateDataAdviseHolder
CreateDataCache
CreateFileMoniker
CreateGenericComposite
CreateILockBytesOnHGlobal
CreateItemMoniker
CreateObjrefMoniker
CreateOle1FileMoniker
CreateOleAdviseHolder
CreatePointerMoniker
CreateStdProgressIndicator
DdeCommonWndProc
DelayLoadFailureHook
DeletePatternAndExtensionTables
DfCreateDocfile
DfGetClass
DfOpenDocfile
DfOpenStorageEx
DfUnMarshalInterface
DialogProc
DllGetClassObject
DllMain
DllRegisterServer
DoDragDrop
DocWndProc
DragDropSetFDT
EnumerateRegistryKeys
ExportedIsValidPtrIn
FLAG_STGMEDIUM_UserFree
FLAG_STGMEDIUM_UserFree64
FLAG_STGMEDIUM_UserMarshal
FLAG_STGMEDIUM_UserMarshal64
FLAG_STGMEDIUM_UserSize
FLAG_STGMEDIUM_UserSize64
FLAG_STGMEDIUM_UserUnmarshal
FLAG_STGMEDIUM_UserUnmarshal64
FindClassID
FindClassMoniker
FindFileMoniker
FindLUAMoniker
FindProgIdMoniker
FindSessionMoniker
FmtIdToPropStgName
FrameWndFilterProc
FreePropVariantArray
GUIDFromString
GetActiveObjectExt
GetClassFile
GetClassFileEx
GetConvertStg
GetDocumentBitStg
GetHGlobalFromILockBytes
GetInterfaceFromWindowProp
GetRegistryValue
GetRunningObjectTable
GetSafeAllocSize
GetSessionClipboardBroker
HACCEL_UserFree
HACCEL_UserFree64
HACCEL_UserMarshal
HACCEL_UserMarshal64
HACCEL_UserSize
HACCEL_UserSize64
HACCEL_UserUnmarshal
HACCEL_UserUnmarshal64
HBITMAP_UserFree
HBITMAP_UserFree64
HBITMAP_UserMarshal
HBITMAP_UserMarshal64
HBITMAP_UserSize
HBITMAP_UserSize64
HBITMAP_UserUnmarshal
HBITMAP_UserUnmarshal64
HBRUSH_UserFree
HBRUSH_UserFree64
HBRUSH_UserMarshal
HBRUSH_UserMarshal64
HBRUSH_UserSize
HBRUSH_UserSize64
HBRUSH_UserUnmarshal
HBRUSH_UserUnmarshal64
HDC_UserFree
HDC_UserFree64
HDC_UserMarshal
HDC_UserMarshal64
HDC_UserSize
HDC_UserSize64
HDC_UserUnmarshal
HDC_UserUnmarshal64
HENHMETAFILE_UserFree
HENHMETAFILE_UserFree64
HENHMETAFILE_UserMarshal
HENHMETAFILE_UserMarshal64
HENHMETAFILE_UserSize
HENHMETAFILE_UserSize64
HENHMETAFILE_UserUnmarshal
HENHMETAFILE_UserUnmarshal64
HGLOBAL_UserFree
HGLOBAL_UserFree64
HGLOBAL_UserMarshal
HGLOBAL_UserMarshal64
HGLOBAL_UserSize
HGLOBAL_UserSize64
HGLOBAL_UserUnmarshal
HGLOBAL_UserUnmarshal64
HICON_UserFree
HICON_UserFree64
HICON_UserMarshal
HICON_UserMarshal64
HICON_UserSize
HICON_UserSize64
HICON_UserUnmarshal
HICON_UserUnmarshal64
HMENU_UserFree
HMENU_UserFree64
HMENU_UserMarshal
HMENU_UserMarshal64
HMENU_UserSize
HMENU_UserSize64
HMENU_UserUnmarshal
HMENU_UserUnmarshal64
HMETAFILEPICT_UserFree
HMETAFILEPICT_UserFree64
HMETAFILEPICT_UserMarshal
HMETAFILEPICT_UserMarshal64
HMETAFILEPICT_UserSize
HMETAFILEPICT_UserSize64
HMETAFILEPICT_UserUnmarshal
HMETAFILEPICT_UserUnmarshal64
HMETAFILE_UserFree
HMETAFILE_UserFree64
HMETAFILE_UserMarshal
HMETAFILE_UserMarshal64
HMETAFILE_UserSize
HMETAFILE_UserSize64
HMETAFILE_UserUnmarshal
HMETAFILE_UserUnmarshal64
HMONITOR_UserFree
HMONITOR_UserFree64
HMONITOR_UserMarshal
HMONITOR_UserMarshal64
HMONITOR_UserSize
HMONITOR_UserSize64
HMONITOR_UserUnmarshal
HMONITOR_UserUnmarshal64
HPALETTE_UserFree
HPALETTE_UserFree64
HPALETTE_UserMarshal
HPALETTE_UserMarshal64
HPALETTE_UserSize
HPALETTE_UserSize64
HPALETTE_UserUnmarshal
HPALETTE_UserUnmarshal64
HSTRING_UserFree
HSTRING_UserFree64
HSTRING_UserMarshal
HSTRING_UserMarshal64
HSTRING_UserSize
HSTRING_UserSize64
HSTRING_UserUnmarshal
HSTRING_UserUnmarshal64
HWND_UserFree
HWND_UserFree64
HWND_UserMarshal
HWND_UserMarshal64
HWND_UserSize
HWND_UserSize64
HWND_UserUnmarshal
HWND_UserUnmarshal64
HrNt
IAdviseSink2_OnLinkSrcChange_Proxy
IAdviseSink2_RemoteOnLinkSrcChange_Thunk
IAdviseSink_OnClose_Proxy
IAdviseSink_OnDataChange_Proxy
IAdviseSink_OnRename_Proxy
IAdviseSink_OnSave_Proxy
IAdviseSink_OnViewChange_Proxy
IAdviseSink_RemoteOnClose_Thunk
IAdviseSink_RemoteOnDataChange_Thunk
IAdviseSink_RemoteOnRename_Thunk
IAdviseSink_RemoteOnSave_Thunk
IAdviseSink_RemoteOnViewChange_Thunk
IBindCtx_GetBindOptions_Proxy
IBindCtx_RemoteGetBindOptions_Thunk
IBindCtx_RemoteSetBindOptions_Thunk
IBindCtx_SetBindOptions_Proxy
IClassFactory_CreateInstance_Proxy
IClassFactory_CreateInstance_Stub
IClassFactory_LockServer_Proxy
IClassFactory_RemoteCreateInstance_Thunk
IClassFactory_RemoteLockServer_Thunk
IDataObject_GetDataHere_Proxy
IDataObject_GetData_Proxy
IDataObject_RemoteGetDataHere_Thunk
IDataObject_RemoteGetData_Thunk
IDataObject_RemoteSetData_Thunk
IDataObject_SetData_Proxy
IDataObject_SetData_Stub
IDispatch_Invoke_Proxy
IDispatch_RemoteInvoke_Thunk
IEnumConnectionPoints_Next_Proxy
IEnumConnectionPoints_RemoteNext_Thunk
IEnumConnections_Next_Proxy
IEnumConnections_RemoteNext_Thunk
IEnumFORMATETC_Next_Proxy
IEnumFORMATETC_RemoteNext_Thunk
IEnumMoniker_Next_Proxy
IEnumMoniker_RemoteNext_Thunk
IEnumOLEVERB_Next_Proxy
IEnumOLEVERB_RemoteNext_Thunk
IEnumSTATDATA_Next_Proxy
IEnumSTATDATA_RemoteNext_Thunk
IEnumSTATPROPSETSTG_Next_Proxy
IEnumSTATPROPSETSTG_RemoteNext_Thunk
IEnumSTATPROPSTG_Next_Proxy
IEnumSTATPROPSTG_RemoteNext_Thunk
IEnumSTATSTG_Next_Proxy
IEnumSTATSTG_RemoteNext_Thunk
IEnumString_Next_Proxy
IEnumString_RemoteNext_Thunk
IEnumUnknown_Next_Proxy
IEnumUnknown_RemoteNext_Thunk
IFillLockBytes_FillAppend_Proxy
IFillLockBytes_FillAt_Proxy
IFillLockBytes_RemoteFillAppend_Thunk
IFillLockBytes_RemoteFillAt_Thunk
ILockBytes_ReadAt_Proxy
ILockBytes_RemoteReadAt_Thunk
ILockBytes_RemoteWriteAt_Thunk
ILockBytes_WriteAt_Proxy
IMoniker_BindToObject_Proxy
IMoniker_BindToStorage_Proxy
IMoniker_RemoteBindToObject_Thunk
IMoniker_RemoteBindToStorage_Thunk
IOleCache2_RemoteUpdateCache_Thunk
IOleCache2_UpdateCache_Proxy
IOleInPlaceActiveObject_RemoteResizeBorder_Thunk
IOleInPlaceActiveObject_RemoteTranslateAccelerator_Thunk
IOleInPlaceActiveObject_ResizeBorder_Proxy
IOleInPlaceActiveObject_TranslateAccelerator_Proxy
IRunnableObject_IsRunning_Proxy
IRunnableObject_RemoteIsRunning_Thunk
ISequentialStream_Read_Proxy
ISequentialStream_RemoteRead_Thunk
ISequentialStream_RemoteWrite_Thunk
ISequentialStream_Write_Proxy
IStorage_CopyTo_Proxy
IStorage_EnumElements_Proxy
IStorage_OpenStream_Proxy
IStorage_RemoteCopyTo_Thunk
IStorage_RemoteEnumElements_Thunk
IStorage_RemoteOpenStream_Thunk
IStream_CopyTo_Proxy
IStream_RemoteCopyTo_Thunk
IStream_RemoteSeek_Thunk
IStream_Seek_Proxy
IUnknown_AddRef_Proxy
IUnknown_QueryInterface_Proxy
IUnknown_Release_Proxy
IViewObject_Draw_Proxy
IViewObject_Draw_Stub
IViewObject_Freeze_Proxy
IViewObject_GetAdvise_Proxy
IViewObject_GetColorSet_Proxy
IViewObject_RemoteContinue
IViewObject_RemoteDraw_Proxy
IViewObject_RemoteDraw_Thunk
IViewObject_RemoteFreeze_Thunk
IViewObject_RemoteGetAdvise_Thunk
IViewObject_RemoteGetColorSet_Thunk
InlineIsEqualGUID
InternalGetLongPathNameW
InternalVerifyStackAvailable
Invoke
IsAccelerator
IsCreateBitmapPresent
IsCreateWindowExWPresent
IsDeleteEnhMetaFilePresent
IsDeleteMetaFilePresent
IsDeleteObjectPresent
IsEqualGUID
IsGetEnhMetaFileBitsPresent
IsGetMetaFileBitsExPresent
IsGetObjectTypePresent
IsGetObjectWPresent
IsGetPaletteEntriesPresent
IsInOut
IsInterfaceImplementedByProxy
IsSetEnhMetaFileBitsPresent
IsStdIdentity
IsSxsOleAut32MapReferenceClsidToConfiguredClsidPresent
IsValidIid
IsValidInterface
LPSAFEARRAY_UserFree
LPSAFEARRAY_UserFree64
LPSAFEARRAY_UserMarshal
LPSAFEARRAY_UserMarshal64
LPSAFEARRAY_UserSize
LPSAFEARRAY_UserSize64
LPSAFEARRAY_UserUnmarshal
LPSAFEARRAY_UserUnmarshal64
MGetDDElParamHi
MGetDDElParamLo
MIDL_user_allocate
MIDL_user_free
MKVDefaultHashKey
MakeVerbList
MessageFilterProc
MkParseDisplayName
MonikerCommonPrefixWith
MonikerRelativePathTo
NdrOleAllocate
NdrOleFree
NdrProxyForwardingFunction3
NdrProxyForwardingFunction4
NdrProxyForwardingFunction5
NdrStubCall3
NdrStubForwardingFunction
NukeHandleAndReleasePunk
ObjectStublessClient10
ObjectStublessClient11
ObjectStublessClient12
ObjectStublessClient13
ObjectStublessClient14
ObjectStublessClient15
ObjectStublessClient16
ObjectStublessClient17
ObjectStublessClient18
ObjectStublessClient19
ObjectStublessClient20
ObjectStublessClient21
ObjectStublessClient22
ObjectStublessClient23
ObjectStublessClient3
ObjectStublessClient4
ObjectStublessClient5
ObjectStublessClient6
ObjectStublessClient7
ObjectStublessClient8
ObjectStublessClient9
Ole1ClassFromCLSID2
Ole32DllGetClassObject
OleConvertIStorageToOLESTREAM
OleConvertIStorageToOLESTREAMEx
OleConvertOLESTREAMToIStorage
OleConvertOLESTREAMToIStorageEx
OleCreate
OleCreateDefaultHandler
OleCreateEmbeddingHelper
OleCreateEx
OleCreateFontIndirectExt
OleCreateFromData
OleCreateFromDataEx
OleCreateFromFile
OleCreateFromFileEx
OleCreateLink
OleCreateLinkEx
OleCreateLinkFromData
OleCreateLinkFromDataEx
OleCreateLinkToFile
OleCreateLinkToFileEx
OleCreateMenuDescriptor
OleCreatePictureIndirectExt
OleCreatePropertyFrameIndirectExt
OleCreateStaticFromData
OleDestroyMenuDescriptor
OleDoAutoConvert
OleDraw
OleDuplicateData
OleFlushClipboard
OleGetAutoConvert
OleGetClipboard
OleGetClipboardBroker
OleGetIconOfClass
OleGetIconOfFile
OleGetPackageClipboardOwner
OleGetSessionClipboardBroker
OleIconToCursorExt
OleInitClipboardBroker
OleInitialize
OleInitializeEx
OleInitializeWOW
OleIsCurrentClipboard
OleIsDcMeta
OleIsRunning
OleLoad
OleLoadFromStream
OleLoadPictureExt
OleLoadPictureFileExt
OleLoadPicturePathExt
OleLockRunning
OleMetafilePictFromIconAndLabel
OleNoteObjectVisible
OleQueryCreateFromData
OleQueryLinkFromData
OleRegEnumFormatEtc
OleRegEnumVerbs
OleRegGetMiscStatus
OleRegGetUserType
OleReleaseEnumVerbCache
OleRun
OleRundownClipboardBroker
OleSave
OleSavePictureFileExt
OleSaveToStream
OleSetAutoConvert
OleSetClipboard
OleSetContainedObject
OleSetMenuDescriptor
OleStdGetAuxUserType
OleStdGetUserTypeOfClass
OleTranslateAccelerator
OleTranslateColorExt
OleUninitialize
OpenClassesRootKeyExW
OpenOrCreateStream
OpenRegistryKey
Parse10DisplayName
PrGuidToPropertySetName
PrivAsyncGetClassBits
PrivRegisterBindStatusCallback
PrivRevokeBindStatusCallback
PropStgNameToFmtId
PropSysAllocString
PropSysFreeString
PropVariantClear
PropVariantCopy
QueryClassesRootValueW
RAiGetTokenForCOM
ReadClassStg
ReadClassStm
ReadClipformatStm
ReadFmtProgIdStg
ReadFmtUserTypeStg
ReadM1ClassStm
ReadM1ClassStmBuf
ReadMonikerStm
ReadOleStg
ReadStringStream
ReadStringStreamA
RegGetValueW
RegisterActiveObjectExt
RegisterDragDrop
ReleaseMemStm
ReleaseStgMedium
ResolveDelayLoadedAPI
RevokeActiveObjectExt
RevokeDragDrop
RtlBase64EncodeLBlobToLUnicodeString
RtlDecodeBase64LUnicodeStringToLBlob
RtlDecodeUtf16LE
RtlEncodeUtf16LE
RtlFinalizeSmartLBlobWritingContext
RtlInitializeSmartLBlobWritingContext
RtlInitializeSmartLUnicodeStringWritingContext
RtlIsLBlobValid
RtlIsLUnicodeStringValid
RtlReallocateLBlob
RtlReportErrorOrigination
RtlSmartMultiUcsEncoder_Utf16LE
RtlSmartUcsEncoder_Utf16LE
RtlWriteDataIntoSmartLBlobWritingContext
RtlWriteDecodedUcsDataIntoSmartLBlobUcsWritingContext
RtlWriteUcsDataIntoSmartLBlobUcsWritingContext
SNB_UserFree
SNB_UserFree64
SNB_UserMarshal
SNB_UserMarshal64
SNB_UserSize
SNB_UserSize64
SNB_UserUnmarshal
SNB_UserUnmarshal64
STGMEDIUM_UserFree
STGMEDIUM_UserFree64
STGMEDIUM_UserMarshal
STGMEDIUM_UserMarshal64
STGMEDIUM_UserSize
STGMEDIUM_UserSize64
STGMEDIUM_UserUnmarshal
STGMEDIUM_UserUnmarshal64
SafeAllocaAllocateFromHeap
SafeAllocaFreeToHeap
SetConvertStg
SetDocumentBitStg
SetWOWThunkGlobalPtr
SrvrWndProc
StgConvertPropertyToVariant
StgConvertPropertyToVariantNoEH
StgConvertVariantToProperty
StgConvertVariantToPropertyNoEH
StgCreateDocfile
StgCreateDocfileOnILockBytes
StgCreatePropSetStg
StgCreatePropStg
StgCreateStorageEx
StgGetIFillLockBytesOnFile
StgGetIFillLockBytesOnILockBytes
StgIsStorageFile
StgIsStorageFileHandle
StgIsStorageILockBytes
StgOpenAsyncDocfileOnIFillLockBytes
StgOpenPropStg
StgOpenStorage
StgOpenStorageEx
StgOpenStorageOnHandle
StgOpenStorageOnILockBytes
StgPropertyLengthAsVariant
StgSetTimes
SysWndProc
TemplateEventDescriptor
ULongAdd
UnAssignEndpointProperty
UtConvertDvtd16toDvtd32
UtConvertDvtd32toDvtd16
UtDoStreamOperation
UtGetDvtd16Info
UtGetDvtd32Info
VARIANT_UserFree
VARIANT_UserMarshal
VARIANT_UserSize
VARIANT_UserUnmarshal
VerifyStackAvailable
WPP_SF_D
WPP_SF_SD
WPP_SF_SLD
WPP_SF_SLq
WPP_SF_SS
WPP_SF_SSD
WPP_SF_SdD
WPP_SF__guid_dD
WPP_SF_d
WPP_SF_qD
WPP_SF_qSD
WdtpInterfacePointer_UserMarshal
WdtpInterfacePointer_UserMarshal64
WdtpInterfacePointer_UserSize
WdtpInterfacePointer_UserSize64
WppControlCallback
WriteClassStg
WriteClassStm
WriteClipformatStm
WriteFmtUserTypeStg
WriteM1ClassStm
WriteM1ClassStmBuf
WriteMonikerStm
WriteOleStg
WriteOleStgEx
WriteStringStream
XformHeightInPixelsToHimetric
XformWidthInPixelsToHimetric
_CRT_INIT
_CxxThrowException
_DllMainCRTStartup
_FindPESection
_IsNonwritableInCurrentImage
_PictLoadLibraries
_PictLoadURL
_PictSetExcepInfo
_ValidateImageBase
_XcptFilter
__C_specific_handler
__CxxFrameHandler3
__GSHandlerCheck
__GSHandlerCheckCommon
__GSHandlerCheck_EH
__GSHandlerCheck_SEH
__Interceptor_meth10
__Interceptor_meth100
__Interceptor_meth1000
__Interceptor_meth1001
__Interceptor_meth1002
__Interceptor_meth1003
__Interceptor_meth1004
__Interceptor_meth1005
__Interceptor_meth1006
__Interceptor_meth1007
__Interceptor_meth1008
__Interceptor_meth1009
__Interceptor_meth101
__Interceptor_meth1010
__Interceptor_meth1011
__Interceptor_meth1012
__Interceptor_meth1013
__Interceptor_meth1014
__Interceptor_meth1015
__Interceptor_meth1016
__Interceptor_meth1017
__Interceptor_meth1018
__Interceptor_meth1019
__Interceptor_meth102
__Interceptor_meth1020
__Interceptor_meth1021
__Interceptor_meth1022
__Interceptor_meth1023
__Interceptor_meth103
__Interceptor_meth104
__Interceptor_meth105
__Interceptor_meth106
__Interceptor_meth107
__Interceptor_meth108
__Interceptor_meth109
__Interceptor_meth11
__Interceptor_meth110
__Interceptor_meth111
__Interceptor_meth112
__Interceptor_meth113
__Interceptor_meth114
__Interceptor_meth115
__Interceptor_meth116
__Interceptor_meth117
__Interceptor_meth118
__Interceptor_meth119
__Interceptor_meth12
__Interceptor_meth120
__Interceptor_meth121
__Interceptor_meth122
__Interceptor_meth123
__Interceptor_meth124
__Interceptor_meth125
__Interceptor_meth126
__Interceptor_meth127
__Interceptor_meth128
__Interceptor_meth129
__Interceptor_meth13
__Interceptor_meth130
__Interceptor_meth131
__Interceptor_meth132
__Interceptor_meth133
__Interceptor_meth134
__Interceptor_meth135
__Interceptor_meth136
__Interceptor_meth137
__Interceptor_meth138
__Interceptor_meth139
__Interceptor_meth14
__Interceptor_meth140
__Interceptor_meth141
__Interceptor_meth142
__Interceptor_meth143
__Interceptor_meth144
__Interceptor_meth145
__Interceptor_meth146
__Interceptor_meth147
__Interceptor_meth148
__Interceptor_meth149
__Interceptor_meth15
__Interceptor_meth150
__Interceptor_meth151
__Interceptor_meth152
__Interceptor_meth153
__Interceptor_meth154
__Interceptor_meth155
__Interceptor_meth156
__Interceptor_meth157
__Interceptor_meth158
__Interceptor_meth159
__Interceptor_meth16
__Interceptor_meth160
__Interceptor_meth161
__Interceptor_meth162
__Interceptor_meth163
__Interceptor_meth164
__Interceptor_meth165
__Interceptor_meth166
__Interceptor_meth167
__Interceptor_meth168
__Interceptor_meth169
__Interceptor_meth17
__Interceptor_meth170
__Interceptor_meth171
__Interceptor_meth172
__Interceptor_meth173
__Interceptor_meth174
__Interceptor_meth175
__Interceptor_meth176
__Interceptor_meth177
__Interceptor_meth178
__Interceptor_meth179
__Interceptor_meth18
__Interceptor_meth180
__Interceptor_meth181
__Interceptor_meth182
__Interceptor_meth183
__Interceptor_meth184
__Interceptor_meth185
__Interceptor_meth186
__Interceptor_meth187
__Interceptor_meth188
__Interceptor_meth189
__Interceptor_meth19
__Interceptor_meth190
__Interceptor_meth191
__Interceptor_meth192
__Interceptor_meth193
__Interceptor_meth194
__Interceptor_meth195
__Interceptor_meth196
__Interceptor_meth197
__Interceptor_meth198
__Interceptor_meth199
__Interceptor_meth20
__Interceptor_meth200
__Interceptor_meth201
__Interceptor_meth202
__Interceptor_meth203
__Interceptor_meth204
__Interceptor_meth205
__Interceptor_meth206
__Interceptor_meth207
__Interceptor_meth208
__Interceptor_meth209
__Interceptor_meth21
__Interceptor_meth210
__Interceptor_meth211
__Interceptor_meth212
__Interceptor_meth213
__Interceptor_meth214
__Interceptor_meth215
__Interceptor_meth216
__Interceptor_meth217
__Interceptor_meth218
__Interceptor_meth219
__Interceptor_meth22
__Interceptor_meth220
__Interceptor_meth221
__Interceptor_meth222
__Interceptor_meth223
__Interceptor_meth224
__Interceptor_meth225
__Interceptor_meth226
__Interceptor_meth227
__Interceptor_meth228
__Interceptor_meth229
__Interceptor_meth23
__Interceptor_meth230
__Interceptor_meth231
__Interceptor_meth232
__Interceptor_meth233
__Interceptor_meth234
__Interceptor_meth235
__Interceptor_meth236
__Interceptor_meth237
__Interceptor_meth238
__Interceptor_meth239
__Interceptor_meth24
__Interceptor_meth240
__Interceptor_meth241
__Interceptor_meth242
__Interceptor_meth243
__Interceptor_meth244
__Interceptor_meth245
__Interceptor_meth246
__Interceptor_meth247
__Interceptor_meth248
__Interceptor_meth249
__Interceptor_meth25
__Interceptor_meth250
__Interceptor_meth251
__Interceptor_meth252
__Interceptor_meth253
__Interceptor_meth254
__Interceptor_meth255
__Interceptor_meth256
__Interceptor_meth257
__Interceptor_meth258
__Interceptor_meth259
__Interceptor_meth26
__Interceptor_meth260
__Interceptor_meth261
__Interceptor_meth262
__Interceptor_meth263
__Interceptor_meth264
__Interceptor_meth265
__Interceptor_meth266
__Interceptor_meth267
__Interceptor_meth268
__Interceptor_meth269
__Interceptor_meth27
__Interceptor_meth270
__Interceptor_meth271
__Interceptor_meth272
__Interceptor_meth273
__Interceptor_meth274
__Interceptor_meth275
__Interceptor_meth276
__Interceptor_meth277
__Interceptor_meth278
__Interceptor_meth279
__Interceptor_meth28
__Interceptor_meth280
__Interceptor_meth281
__Interceptor_meth282
__Interceptor_meth283
__Interceptor_meth284
__Interceptor_meth285
__Interceptor_meth286
__Interceptor_meth287
__Interceptor_meth288
__Interceptor_meth289
__Interceptor_meth29
__Interceptor_meth290
__Interceptor_meth291
__Interceptor_meth292
__Interceptor_meth293
__Interceptor_meth294
__Interceptor_meth295
__Interceptor_meth296
__Interceptor_meth297
__Interceptor_meth298
__Interceptor_meth299
__Interceptor_meth3
__Interceptor_meth30
__Interceptor_meth300
__Interceptor_meth301
__Interceptor_meth302
__Interceptor_meth303
__Interceptor_meth304
__Interceptor_meth305
__Interceptor_meth306
__Interceptor_meth307
__Interceptor_meth308
__Interceptor_meth309
__Interceptor_meth31
__Interceptor_meth310
__Interceptor_meth311
__Interceptor_meth312
__Interceptor_meth313
__Interceptor_meth314
__Interceptor_meth315
__Interceptor_meth316
__Interceptor_meth317
__Interceptor_meth318
__Interceptor_meth319
__Interceptor_meth32
__Interceptor_meth320
__Interceptor_meth321
__Interceptor_meth322
__Interceptor_meth323
__Interceptor_meth324
__Interceptor_meth325
__Interceptor_meth326
__Interceptor_meth327
__Interceptor_meth328
__Interceptor_meth329
__Interceptor_meth33
__Interceptor_meth330
__Interceptor_meth331
__Interceptor_meth332
__Interceptor_meth333
__Interceptor_meth334
__Interceptor_meth335
__Interceptor_meth336
__Interceptor_meth337
__Interceptor_meth338
__Interceptor_meth339
__Interceptor_meth34
__Interceptor_meth340
__Interceptor_meth341
__Interceptor_meth342
__Interceptor_meth343
__Interceptor_meth344
__Interceptor_meth345
__Interceptor_meth346
__Interceptor_meth347
__Interceptor_meth348
__Interceptor_meth349
__Interceptor_meth35
__Interceptor_meth350
__Interceptor_meth351
__Interceptor_meth352
__Interceptor_meth353
__Interceptor_meth354
__Interceptor_meth355
__Interceptor_meth356
__Interceptor_meth357
__Interceptor_meth358
__Interceptor_meth359
__Interceptor_meth36
__Interceptor_meth360
__Interceptor_meth361
__Interceptor_meth362
__Interceptor_meth363
__Interceptor_meth364
__Interceptor_meth365
__Interceptor_meth366
__Interceptor_meth367
__Interceptor_meth368
__Interceptor_meth369
__Interceptor_meth37
__Interceptor_meth370
__Interceptor_meth371
__Interceptor_meth372
__Interceptor_meth373
__Interceptor_meth374
__Interceptor_meth375
__Interceptor_meth376
__Interceptor_meth377
__Interceptor_meth378
__Interceptor_meth379
__Interceptor_meth38
__Interceptor_meth380
__Interceptor_meth381
__Interceptor_meth382
__Interceptor_meth383
__Interceptor_meth384
__Interceptor_meth385
__Interceptor_meth386
__Interceptor_meth387
__Interceptor_meth388
__Interceptor_meth389
__Interceptor_meth39
__Interceptor_meth390
__Interceptor_meth391
__Interceptor_meth392
__Interceptor_meth393
__Interceptor_meth394
__Interceptor_meth395
__Interceptor_meth396
__Interceptor_meth397
__Interceptor_meth398
__Interceptor_meth399
__Interceptor_meth4
__Interceptor_meth40
__Interceptor_meth400
__Interceptor_meth401
__Interceptor_meth402
__Interceptor_meth403
__Interceptor_meth404
__Interceptor_meth405
__Interceptor_meth406
__Interceptor_meth407
__Interceptor_meth408
__Interceptor_meth409
__Interceptor_meth41
__Interceptor_meth410
__Interceptor_meth411
__Interceptor_meth412
__Interceptor_meth413
__Interceptor_meth414
__Interceptor_meth415
__Interceptor_meth416
__Interceptor_meth417
__Interceptor_meth418
__Interceptor_meth419
__Interceptor_meth42
__Interceptor_meth420
__Interceptor_meth421
__Interceptor_meth422
__Interceptor_meth423
__Interceptor_meth424
__Interceptor_meth425
__Interceptor_meth426
__Interceptor_meth427
__Interceptor_meth428
__Interceptor_meth429
__Interceptor_meth43
__Interceptor_meth430
__Interceptor_meth431
__Interceptor_meth432
__Interceptor_meth433
__Interceptor_meth434
__Interceptor_meth435
__Interceptor_meth436
__Interceptor_meth437
__Interceptor_meth438
__Interceptor_meth439
__Interceptor_meth44
__Interceptor_meth440
__Interceptor_meth441
__Interceptor_meth442
__Interceptor_meth443
__Interceptor_meth444
__Interceptor_meth445
__Interceptor_meth446
__Interceptor_meth447
__Interceptor_meth448
__Interceptor_meth449
__Interceptor_meth45
__Interceptor_meth450
__Interceptor_meth451
__Interceptor_meth452
__Interceptor_meth453
__Interceptor_meth454
__Interceptor_meth455
__Interceptor_meth456
__Interceptor_meth457
__Interceptor_meth458
__Interceptor_meth459
__Interceptor_meth46
__Interceptor_meth460
__Interceptor_meth461
__Interceptor_meth462
__Interceptor_meth463
__Interceptor_meth464
__Interceptor_meth465
__Interceptor_meth466
__Interceptor_meth467
__Interceptor_meth468
__Interceptor_meth469
__Interceptor_meth47
__Interceptor_meth470
__Interceptor_meth471
__Interceptor_meth472
__Interceptor_meth473
__Interceptor_meth474
__Interceptor_meth475
__Interceptor_meth476
__Interceptor_meth477
__Interceptor_meth478
__Interceptor_meth479
__Interceptor_meth48
__Interceptor_meth480
__Interceptor_meth481
__Interceptor_meth482
__Interceptor_meth483
__Interceptor_meth484
__Interceptor_meth485
__Interceptor_meth486
__Interceptor_meth487
__Interceptor_meth488
__Interceptor_meth489
__Interceptor_meth49
__Interceptor_meth490
__Interceptor_meth491
__Interceptor_meth492
__Interceptor_meth493
__Interceptor_meth494
__Interceptor_meth495
__Interceptor_meth496
__Interceptor_meth497
__Interceptor_meth498
__Interceptor_meth499
__Interceptor_meth5
__Interceptor_meth50
__Interceptor_meth500
__Interceptor_meth501
__Interceptor_meth502
__Interceptor_meth503
__Interceptor_meth504
__Interceptor_meth505
__Interceptor_meth506
__Interceptor_meth507
__Interceptor_meth508
__Interceptor_meth509
__Interceptor_meth51
__Interceptor_meth510
__Interceptor_meth511
__Interceptor_meth512
__Interceptor_meth513
__Interceptor_meth514
__Interceptor_meth515
__Interceptor_meth516
__Interceptor_meth517
__Interceptor_meth518
__Interceptor_meth519
__Interceptor_meth52
__Interceptor_meth520
__Interceptor_meth521
__Interceptor_meth522
__Interceptor_meth523
__Interceptor_meth524
__Interceptor_meth525
__Interceptor_meth526
__Interceptor_meth527
__Interceptor_meth528
__Interceptor_meth529
__Interceptor_meth53
__Interceptor_meth530
__Interceptor_meth531
__Interceptor_meth532
__Interceptor_meth533
__Interceptor_meth534
__Interceptor_meth535
__Interceptor_meth536
__Interceptor_meth537
__Interceptor_meth538
__Interceptor_meth539
__Interceptor_meth54
__Interceptor_meth540
__Interceptor_meth541
__Interceptor_meth542
__Interceptor_meth543
__Interceptor_meth544
__Interceptor_meth545
__Interceptor_meth546
__Interceptor_meth547
__Interceptor_meth548
__Interceptor_meth549
__Interceptor_meth55
__Interceptor_meth550
__Interceptor_meth551
__Interceptor_meth552
__Interceptor_meth553
__Interceptor_meth554
__Interceptor_meth555
__Interceptor_meth556
__Interceptor_meth557
__Interceptor_meth558
__Interceptor_meth559
__Interceptor_meth56
__Interceptor_meth560
__Interceptor_meth561
__Interceptor_meth562
__Interceptor_meth563
__Interceptor_meth564
__Interceptor_meth565
__Interceptor_meth566
__Interceptor_meth567
__Interceptor_meth568
__Interceptor_meth569
__Interceptor_meth57
__Interceptor_meth570
__Interceptor_meth571
__Interceptor_meth572
__Interceptor_meth573
__Interceptor_meth574
__Interceptor_meth575
__Interceptor_meth576
__Interceptor_meth577
__Interceptor_meth578
__Interceptor_meth579
__Interceptor_meth58
__Interceptor_meth580
__Interceptor_meth581
__Interceptor_meth582
__Interceptor_meth583
__Interceptor_meth584
__Interceptor_meth585
__Interceptor_meth586
__Interceptor_meth587
__Interceptor_meth588
__Interceptor_meth589
__Interceptor_meth59
__Interceptor_meth590
__Interceptor_meth591
__Interceptor_meth592
__Interceptor_meth593
__Interceptor_meth594
__Interceptor_meth595
__Interceptor_meth596
__Interceptor_meth597
__Interceptor_meth598
__Interceptor_meth599
__Interceptor_meth6
__Interceptor_meth60
__Interceptor_meth600
__Interceptor_meth601
__Interceptor_meth602
__Interceptor_meth603
__Interceptor_meth604
__Interceptor_meth605
__Interceptor_meth606
__Interceptor_meth607
__Interceptor_meth608
__Interceptor_meth609
__Interceptor_meth61
__Interceptor_meth610
__Interceptor_meth611
__Interceptor_meth612
__Interceptor_meth613
__Interceptor_meth614
__Interceptor_meth615
__Interceptor_meth616
__Interceptor_meth617
__Interceptor_meth618
__Interceptor_meth619
__Interceptor_meth62
__Interceptor_meth620
__Interceptor_meth621
__Interceptor_meth622
__Interceptor_meth623
__Interceptor_meth624
__Interceptor_meth625
__Interceptor_meth626
__Interceptor_meth627
__Interceptor_meth628
__Interceptor_meth629
__Interceptor_meth63
__Interceptor_meth630
__Interceptor_meth631
__Interceptor_meth632
__Interceptor_meth633
__Interceptor_meth634
__Interceptor_meth635
__Interceptor_meth636
__Interceptor_meth637
__Interceptor_meth638
__Interceptor_meth639
__Interceptor_meth64
__Interceptor_meth640
__Interceptor_meth641
__Interceptor_meth642
__Interceptor_meth643
__Interceptor_meth644
__Interceptor_meth645
__Interceptor_meth646
__Interceptor_meth647
__Interceptor_meth648
__Interceptor_meth649
__Interceptor_meth65
__Interceptor_meth650
__Interceptor_meth651
__Interceptor_meth652
__Interceptor_meth653
__Interceptor_meth654
__Interceptor_meth655
__Interceptor_meth656
__Interceptor_meth657
__Interceptor_meth658
__Interceptor_meth659
__Interceptor_meth66
__Interceptor_meth660
__Interceptor_meth661
__Interceptor_meth662
__Interceptor_meth663
__Interceptor_meth664
__Interceptor_meth665
__Interceptor_meth666
__Interceptor_meth667
__Interceptor_meth668
__Interceptor_meth669
__Interceptor_meth67
__Interceptor_meth670
__Interceptor_meth671
__Interceptor_meth672
__Interceptor_meth673
__Interceptor_meth674
__Interceptor_meth675
__Interceptor_meth676
__Interceptor_meth677
__Interceptor_meth678
__Interceptor_meth679
__Interceptor_meth68
__Interceptor_meth680
__Interceptor_meth681
__Interceptor_meth682
__Interceptor_meth683
__Interceptor_meth684
__Interceptor_meth685
__Interceptor_meth686
__Interceptor_meth687
__Interceptor_meth688
__Interceptor_meth689
__Interceptor_meth69
__Interceptor_meth690
__Interceptor_meth691
__Interceptor_meth692
__Interceptor_meth693
__Interceptor_meth694
__Interceptor_meth695
__Interceptor_meth696
__Interceptor_meth697
__Interceptor_meth698
__Interceptor_meth699
__Interceptor_meth7
__Interceptor_meth70
__Interceptor_meth700
__Interceptor_meth701
__Interceptor_meth702
__Interceptor_meth703
__Interceptor_meth704
__Interceptor_meth705
__Interceptor_meth706
__Interceptor_meth707
__Interceptor_meth708
__Interceptor_meth709
__Interceptor_meth71
__Interceptor_meth710
__Interceptor_meth711
__Interceptor_meth712
__Interceptor_meth713
__Interceptor_meth714
__Interceptor_meth715
__Interceptor_meth716
__Interceptor_meth717
__Interceptor_meth718
__Interceptor_meth719
__Interceptor_meth72
__Interceptor_meth720
__Interceptor_meth721
__Interceptor_meth722
__Interceptor_meth723
__Interceptor_meth724
__Interceptor_meth725
__Interceptor_meth726
__Interceptor_meth727
__Interceptor_meth728
__Interceptor_meth729
__Interceptor_meth73
__Interceptor_meth730
__Interceptor_meth731
__Interceptor_meth732
__Interceptor_meth733
__Interceptor_meth734
__Interceptor_meth735
__Interceptor_meth736
__Interceptor_meth737
__Interceptor_meth738
__Interceptor_meth739
__Interceptor_meth74
__Interceptor_meth740
__Interceptor_meth741
__Interceptor_meth742
__Interceptor_meth743
__Interceptor_meth744
__Interceptor_meth745
__Interceptor_meth746
__Interceptor_meth747
__Interceptor_meth748
__Interceptor_meth749
__Interceptor_meth75
__Interceptor_meth750
__Interceptor_meth751
__Interceptor_meth752
__Interceptor_meth753
__Interceptor_meth754
__Interceptor_meth755
__Interceptor_meth756
__Interceptor_meth757
__Interceptor_meth758
__Interceptor_meth759
__Interceptor_meth76
__Interceptor_meth760
__Interceptor_meth761
__Interceptor_meth762
__Interceptor_meth763
__Interceptor_meth764
__Interceptor_meth765
__Interceptor_meth766
__Interceptor_meth767
__Interceptor_meth768
__Interceptor_meth769
__Interceptor_meth77
__Interceptor_meth770
__Interceptor_meth771
__Interceptor_meth772
__Interceptor_meth773
__Interceptor_meth774
__Interceptor_meth775
__Interceptor_meth776
__Interceptor_meth777
__Interceptor_meth778
__Interceptor_meth779
__Interceptor_meth78
__Interceptor_meth780
__Interceptor_meth781
__Interceptor_meth782
__Interceptor_meth783
__Interceptor_meth784
__Interceptor_meth785
__Interceptor_meth786
__Interceptor_meth787
__Interceptor_meth788
__Interceptor_meth789
__Interceptor_meth79
__Interceptor_meth790
__Interceptor_meth791
__Interceptor_meth792
__Interceptor_meth793
__Interceptor_meth794
__Interceptor_meth795
__Interceptor_meth796
__Interceptor_meth797
__Interceptor_meth798
__Interceptor_meth799
__Interceptor_meth8
__Interceptor_meth80
__Interceptor_meth800
__Interceptor_meth801
__Interceptor_meth802
__Interceptor_meth803
__Interceptor_meth804
__Interceptor_meth805
__Interceptor_meth806
__Interceptor_meth807
__Interceptor_meth808
__Interceptor_meth809
__Interceptor_meth81
__Interceptor_meth810
__Interceptor_meth811
__Interceptor_meth812
__Interceptor_meth813
__Interceptor_meth814
__Interceptor_meth815
__Interceptor_meth816
__Interceptor_meth817
__Interceptor_meth818
__Interceptor_meth819
__Interceptor_meth82
__Interceptor_meth820
__Interceptor_meth821
__Interceptor_meth822
__Interceptor_meth823
__Interceptor_meth824
__Interceptor_meth825
__Interceptor_meth826
__Interceptor_meth827
__Interceptor_meth828
__Interceptor_meth829
__Interceptor_meth83
__Interceptor_meth830
__Interceptor_meth831
__Interceptor_meth832
__Interceptor_meth833
__Interceptor_meth834
__Interceptor_meth835
__Interceptor_meth836
__Interceptor_meth837
__Interceptor_meth838
__Interceptor_meth839
__Interceptor_meth84
__Interceptor_meth840
__Interceptor_meth841
__Interceptor_meth842
__Interceptor_meth843
__Interceptor_meth844
__Interceptor_meth845
__Interceptor_meth846
__Interceptor_meth847
__Interceptor_meth848
__Interceptor_meth849
__Interceptor_meth85
__Interceptor_meth850
__Interceptor_meth851
__Interceptor_meth852
__Interceptor_meth853
__Interceptor_meth854
__Interceptor_meth855
__Interceptor_meth856
__Interceptor_meth857
__Interceptor_meth858
__Interceptor_meth859
__Interceptor_meth86
__Interceptor_meth860
__Interceptor_meth861
__Interceptor_meth862
__Interceptor_meth863
__Interceptor_meth864
__Interceptor_meth865
__Interceptor_meth866
__Interceptor_meth867
__Interceptor_meth868
__Interceptor_meth869
__Interceptor_meth87
__Interceptor_meth870
__Interceptor_meth871
__Interceptor_meth872
__Interceptor_meth873
__Interceptor_meth874
__Interceptor_meth875
__Interceptor_meth876
__Interceptor_meth877
__Interceptor_meth878
__Interceptor_meth879
__Interceptor_meth88
__Interceptor_meth880
__Interceptor_meth881
__Interceptor_meth882
__Interceptor_meth883
__Interceptor_meth884
__Interceptor_meth885
__Interceptor_meth886
__Interceptor_meth887
__Interceptor_meth888
__Interceptor_meth889
__Interceptor_meth89
__Interceptor_meth890
__Interceptor_meth891
__Interceptor_meth892
__Interceptor_meth893
__Interceptor_meth894
__Interceptor_meth895
__Interceptor_meth896
__Interceptor_meth897
__Interceptor_meth898
__Interceptor_meth899
__Interceptor_meth9
__Interceptor_meth90
__Interceptor_meth900
__Interceptor_meth901
__Interceptor_meth902
__Interceptor_meth903
__Interceptor_meth904
__Interceptor_meth905
__Interceptor_meth906
__Interceptor_meth907
__Interceptor_meth908
__Interceptor_meth909
__Interceptor_meth91
__Interceptor_meth910
__Interceptor_meth911
__Interceptor_meth912
__Interceptor_meth913
__Interceptor_meth914
__Interceptor_meth915
__Interceptor_meth916
__Interceptor_meth917
__Interceptor_meth918
__Interceptor_meth919
__Interceptor_meth92
__Interceptor_meth920
__Interceptor_meth921
__Interceptor_meth922
__Interceptor_meth923
__Interceptor_meth924
__Interceptor_meth925
__Interceptor_meth926
__Interceptor_meth927
__Interceptor_meth928
__Interceptor_meth929
__Interceptor_meth93
__Interceptor_meth930
__Interceptor_meth931
__Interceptor_meth932
__Interceptor_meth933
__Interceptor_meth934
__Interceptor_meth935
__Interceptor_meth936
__Interceptor_meth937
__Interceptor_meth938
__Interceptor_meth939
__Interceptor_meth94
__Interceptor_meth940
__Interceptor_meth941
__Interceptor_meth942
__Interceptor_meth943
__Interceptor_meth944
__Interceptor_meth945
__Interceptor_meth946
__Interceptor_meth947
__Interceptor_meth948
__Interceptor_meth949
__Interceptor_meth95
__Interceptor_meth950
__Interceptor_meth951
__Interceptor_meth952
__Interceptor_meth953
__Interceptor_meth954
__Interceptor_meth955
__Interceptor_meth956
__Interceptor_meth957
__Interceptor_meth958
__Interceptor_meth959
__Interceptor_meth96
__Interceptor_meth960
__Interceptor_meth961
__Interceptor_meth962
__Interceptor_meth963
__Interceptor_meth964
__Interceptor_meth965
__Interceptor_meth966
__Interceptor_meth967
__Interceptor_meth968
__Interceptor_meth969
__Interceptor_meth97
__Interceptor_meth970
__Interceptor_meth971
__Interceptor_meth972
__Interceptor_meth973
__Interceptor_meth974
__Interceptor_meth975
__Interceptor_meth976
__Interceptor_meth977
__Interceptor_meth978
__Interceptor_meth979
__Interceptor_meth98
__Interceptor_meth980
__Interceptor_meth981
__Interceptor_meth982
__Interceptor_meth983
__Interceptor_meth984
__Interceptor_meth985
__Interceptor_meth986
__Interceptor_meth987
__Interceptor_meth988
__Interceptor_meth989
__Interceptor_meth99
__Interceptor_meth990
__Interceptor_meth991
__Interceptor_meth992
__Interceptor_meth993
__Interceptor_meth994
__Interceptor_meth995
__Interceptor_meth996
__Interceptor_meth997
__Interceptor_meth998
__Interceptor_meth999
__chkstk
__delayLoadHelper2
__dllonexit
__raise_securityfailure
__report_gsfailure
__security_check_cookie
__security_init_cookie
_amsg_exit
_callframeinternal_IID_Lookup
_iinspectable_IID_Lookup
_iinspectablederived_IID_Lookup
_initterm
_local_unwind
_lock
_mega_IID_Lookup
_onexit
_prop_IID_Lookup
_purecall
_resetstkoflw_static
_unlock
atexit
fmod
memcmp
memcpy
memset
wRegQueryValue
wRegSetValue
*/
